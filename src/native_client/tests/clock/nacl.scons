# -*- python2 -*-
# Copyright (c) 2012 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This is a basic functionality test to exercise the irt plumbing.

Import('env')

time_check = env.File('${SCONSTRUCT_DIR}/tools/time_check.py')

if env.Bit('tests_use_irt'):
  clock_irt_test_nexe = env.ComponentProgram('clock_irt_test',
                                             'clock_irt_test.c',
                                             EXTRA_LIBS=['${NONIRT_LIBS}'],
                                             )

  node = env.CommandSelLdrTestNacl(
      'clock_irt_test.out',
      clock_irt_test_nexe,
      wrapper_program_prefix = [
        '${PYTHON}', time_check, '-S',
        '-r',
        '"Realtime\sclock\svalue[^\d]*(\d+\.\d*|\d*\.\d+)"',
        '--'])

  env.AddNodeToTestSuite(node, ['small_tests'], 'run_clock_irt_test')

# The clock_gettime function is provided in librt in the glibc-based
# toolchain, whereas in the newlib-based toolchain it is in libc.
# This is because the clock_gettime etc functions were part of the
# "Advanced Real Time" portion of POSIX, and on normal glibc-based
# systems the Advanced Real Time functions are all in the rt library.
# In newlib, there is no librt, and everything got put into libc
# instead.

if env.Bit('nacl_glibc'):
  env.Append(LINKFLAGS=['-lrt'])

clock_get_test_nexe = env.ComponentProgram('clock_get_test',
                                           'clock_get_test.c',
                                           EXTRA_LIBS=['${NONIRT_LIBS}'])

node = env.CommandSelLdrTestNacl(
    'clock_get_test.out',
    clock_get_test_nexe,
    wrapper_program_prefix = [
      '${PYTHON}', time_check, '-S',
      '-r',
      '"Realtime\sclock\svalue[^\d]*(\d+\.\d*|\d*\.\d+)"',
      '--'])

env.AddNodeToTestSuite(node, ['small_tests'], 'run_clock_get_test')
