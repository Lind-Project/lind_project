# -*- python2 -*-
# Copyright 2012 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

# valgrind has problems with minimal_test_guest
if env.IsRunningUnderValgrind():
  Return()

# This test case tests an experimental profile of NaCl.  If you make a
# change which breaks this test which is difficult to fix, you can
# disable the test, but please CC mseaborn,krasin.

if 'TRUSTED_ENV' not in env:
  Return()
trusted_env = env['TRUSTED_ENV']

runner = trusted_env.ComponentProgram(
    'minimal_test_host', ['minimal_test_host.c'],
    EXTRA_LIBS=['sel'])


test_prog = env.ComponentProgram(
    'minimal_test_guest',
    ['minimal_test_guest.c'],
    EXTRA_LINKFLAGS=['-nostdlib'])

env.Replace(TRANSLATEFLAGS=['-nostdlib'])
test_prog = env.GetTranslatedNexe(test_prog)

is_broken = not env.Bit('nacl_static_link')

node = env.CommandTest('minimal_test.out',
                       env.AddBootstrap(runner, [test_prog]),
                       stdout_golden=env.File('minimal_test.stdout'))
env.AddNodeToTestSuite(node, ['small_tests'], 'run_minnacl_test',
                       is_broken=is_broken)

node = env.CommandTest('minimal_test_separate_thread.out',
                       env.AddBootstrap(runner,
                                        ['--use_separate_thread', test_prog]),
                       stdout_golden=env.File('minimal_test.stdout'))
env.AddNodeToTestSuite(node, ['small_tests'],
                       'run_minnacl_separate_thread_test',
                       is_broken=is_broken)
