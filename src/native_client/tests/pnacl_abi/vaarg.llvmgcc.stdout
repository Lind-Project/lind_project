target triple = "armv7-none-linux-gnueabi"

define i32 @foo(i8 signext %fmt, ...) nounwind {
entry:
  %fmt_addr = alloca i8, align 1
  %retval = alloca i32
  %0 = alloca i32
  %ap = alloca [4 x i32]
  %"alloca point" = bitcast i32 0 to i32
  store i8 %fmt, i8* %fmt_addr
  %ap1 = bitcast [4 x i32]* %ap to i32*
  %ap12 = bitcast i32* %ap1 to i8*
  call void @llvm.va_start(i8* %ap12)
  %1 = load i8* %fmt_addr, align 1
  %2 = icmp eq i8 %1, 112
  br i1 %2, label %bb, label %bb4

bb:                                               ; preds = %entry
  %ap3 = bitcast [4 x i32]* %ap to i32*
  %3 = va_arg i32* %ap3, i32*
  %4 = load i32* %3, align 4
  store i32 %4, i32* %0, align 4
  br label %bb13

bb4:                                              ; preds = %entry
  %5 = load i8* %fmt_addr, align 1
  %6 = icmp eq i8 %5, 105
  br i1 %6, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %ap6 = bitcast [4 x i32]* %ap to i32*
  %7 = va_arg i32* %ap6, i32
  store i32 %7, i32* %0, align 4
  br label %bb13

bb7:                                              ; preds = %bb4
  %8 = load i8* %fmt_addr, align 1
  %9 = icmp eq i8 %8, 100
  br i1 %9, label %bb8, label %bb10

bb8:                                              ; preds = %bb7
  %ap9 = bitcast [4 x i32]* %ap to i32*
  %10 = va_arg i32* %ap9, double
  %11 = fptosi double %10 to i32
  store i32 %11, i32* %0, align 4
  br label %bb13

bb10:                                             ; preds = %bb7
  %ap11 = bitcast [4 x i32]* %ap to i32*
  %ap1112 = bitcast i32* %ap11 to i8*
  call void @llvm.va_end(i8* %ap1112)
  store i32 -1, i32* %0, align 4
  br label %bb13

bb13:                                             ; preds = %bb10, %bb8, %bb5, %bb
  %12 = load i32* %0, align 4
  store i32 %12, i32* %retval, align 4
  br label %return

return:                                           ; preds = %bb13
  %retval14 = load i32* %retval
  ret i32 %retval14
}

declare void @llvm.va_start(i8*) nounwind

declare void @llvm.va_end(i8*) nounwind
