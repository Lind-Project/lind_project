# Define a set of possible opcode operand flags that can apply to an
# operand.
# Each line defines a separate operand flag.

# Operand is used
OpUse
# Operand is set
OpSet
# Operand is an address (as in LEA).
OpAddress
# Operand is implicit (rather than explicit)
OpImplicit
# When jump address, the jump is near (rather than far).
OperandNear
# When jump address, the jump is far (rather than near).
OperandFar
# When jump address, the jump is relative (rather than absolute.
OperandRelative
# Operand zero-extends 32-bit register results to 64-bits.
# NOTE: This is a NaCl x86-64, validator specific, flag that is used to
# mark operands that can be used for address masking since
# they zero extend. It is added only if NaCl allows it for
# this context. See zero_extends.c for more details on this.
OperandZeroExtends_v
# Operand sign-extends 32-bit register results to 64-bits.
OperandSignExtends_v
# Allow both G operand and opcode in modrm, as special case.
AllowGOperandWithOpcodeInModRm
