@hex:
  # Disallowed because %r15 is the base (should be (%rbp, %r15))
  # mov %esp, %ebp
  89 e5
  # lea (%r15, %rbp), %rbp
  49 8d 2c 2f
  
  # Allowed
  # mov %esp, %ebp
  89 e5
  # lea 0x00(%rbp, %r15), %rbp
  4a 8d 6c 3d 00
  
  # Allowed
  # mov %esp, %ebp
  89 e5
  # lea 0x00000000(%rbp, %r15), %rbp
  4a 8d ac 3d 00 00 00 00
@rval:
  VALIDATOR: 0000000000000002: 49 8d 2c 2f                                  lea %rbp, [%r15+%rbp*1]
  VALIDATOR: ERROR: Illegal change to register RBP
  VALIDATOR: 0000000000000000: 89 e5                                        mov %ebp, %esp
  VALIDATOR: ERROR: Illegal assignment to EBP
  VALIDATOR: Checking jump targets: 0 to 17
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: 89 e5                                        mov %ebp, %esp
  0000000000000002: 49 8d 2c 2f                                  lea %rbp, [%r15+%rbp*1]
  0000000000000006: 89 e5                                        mov %ebp, %esp
  0000000000000008: 4a 8d 6c 3d 00                               lea %rbp, [%rbp+%r15*1]
  000000000000000d: 89 e5                                        mov %ebp, %esp
  000000000000000f: 4a 8d ac 3d 00 00 00 00                      lea %rbp, [%rbp+%r15*1]
@rdfa_output:
  2: [0] improper %rbp sandboxing
  2: [0] error - %bpl or %bp is changed
  return code: 1
@validators_disagree:
  errors reported by old validator but not by rdfa one:
    0x0 (rdfa reported only offset 0x2)
----------------------------------------------------------------------
@hex:
  # mov %ebp, %esp
  89 ec \\
  # lea (%rsp, %r15), %rsp
  4a 8d 24 3c
  
  # mov %ebp, %esp
  89 ec \\
  # lea 0x00(%rsp, %r15), %rsp
  4a 8d 64 3c 00
  
  # mov %ebp, %esp
  89 ec \\
  # lea 0x00000000(%rsp, %r15), %rsp
  4a 8d a4 3c 00 00 00 00
  
  # There is no 'lea (%r15, %rsp), ...' instruction, so nothing to try.
@rval:
  VALIDATOR: Checking jump targets: 0 to 17
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> is safe ***
@dis:
  0000000000000000: 89 ec                                        mov %esp, %ebp
  0000000000000002: 4a 8d 24 3c                                  lea %rsp, [%rsp+%r15*1]
  0000000000000006: 89 ec                                        mov %esp, %ebp
  0000000000000008: 4a 8d 64 3c 00                               lea %rsp, [%rsp+%r15*1]
  000000000000000d: 89 ec                                        mov %esp, %ebp
  000000000000000f: 4a 8d a4 3c 00 00 00 00                      lea %rsp, [%rsp+%r15*1]
@rdfa_output:
  return code: 0
