@hex:
  # Models a jump to the begining of an atomic instruction sequence.
  # jmp 0x2
  EB 00
  # and %edx, 0xe0
  83 e2 e0 \\
  # add %rdx, %r15
  4c 01 fa \\
  # jmp %rdx
  ff e2
@val:
  VALIDATOR: Checking jump targets: 0 to a
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> is safe ***
@rval:
  VALIDATOR: Checking jump targets: 0 to a
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> is safe ***
@rvald:
  VALIDATOR: Checking block alignment and jump targets: 0 to a
  *** <input> is safe ***
@vd-rval:
  VALIDATOR: Checking jump targets: 0 to a
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> is safe ***
@dis:
  0000000000000000: eb 00                                        jmp 0x2
  0000000000000002: 83 e2 e0                                     and %edx, 0xe0
  0000000000000005: 4c 01 fa                                     add %rdx, %r15
  0000000000000008: ff e2                                        jmp %rdx
@vdis:
  0000000000000000: eb 00                                        [P] dontcarejump %rip (s), 0x2 (u)
  0000000000000002: 83 e2 e0                                     and %edx, 0xe0
  0000000000000005: 4c 01 fa                                     add %rdx, %r15
  0000000000000008: ff e2                                        [P] dontcarejump %rip (s), %rdx (u)
@rdfa_output:
  return code: 0
