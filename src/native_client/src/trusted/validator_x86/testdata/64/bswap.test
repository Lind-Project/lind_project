@hex:
  # Test handling of different sizes for instruction bswap.
  # 32-bit example
  0f c8
  # 64-bit example
  48 0f c8
  # Bad case, we should not parse 16-bit operands
  66 0f c8
  
@rval:
  VALIDATOR: 0000000000000005: 66 0f c8                                     invalid
  VALIDATOR: ERROR: Opcode sequence doesn't define a valid x86 instruction
  VALIDATOR: 0000000000000005: 66 0f c8                                     invalid
  VALIDATOR: ERROR: Use of DATA16 (66) prefix for instruction not allowed by Native Client
  VALIDATOR: Checking jump targets: 0 to 8
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: 0f c8                                        bswap %eax
  0000000000000002: 48 0f c8                                     bswap %rax
  0000000000000005: 66 0f c8                                     invalid
@vdis:
  0000000000000000: 0f c8                                        [P] dontcare %eax (su)
  0000000000000002: 48 0f c8                                     [P] dontcare %rax (su)
  0000000000000005: 66 0f c8                                     invalid
@rdfa_output:
  5: [0] unrecognized instruction
  return code: 1
