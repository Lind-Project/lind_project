@hex:
  # Test that we correctly check both implicit arguments to movsb
  
  # Valid case, within bundle
  # 0000000000000000: 89 f6                                        mov %esi, %esi
  # 0000000000000002: 49 8d 34 37                                  lea %rsi, [%r15+%rsi*1]
  # 0000000000000006: 89 ff                                        mov %edi, %edi
  # 0000000000000008: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  # 000000000000000c: a4                                           movsb
  89 f6
  49 8d 34 37
  89 ff
  49 8d 3c 3f
  a4
  
  # Nop spacer.
  90 90 90 90 90 90 90 90
  90 90 90 90 90 90 90 90
  90
  
  # invalid case, crosses bundle
  # 000000000000001e: 89 f6                                        mov %esi, %esi
  # 0000000000000020: 49 8d 34 37                                  lea %rsi, [%r15+%rsi*1]
  # 0000000000000024: 89 ff                                        mov %edi, %edi
  # 0000000000000026: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  # 000000000000002a: a4                                           movsb
  89 f6
  49 8d 34 37
  89 ff
  49 8d 3c 3f
  a4
@rval:
  VALIDATOR: Checking jump targets: 0 to 2b
  VALIDATOR: Checking that basic blocks are aligned
  VALIDATOR: ERROR: 20: Bad basic block alignment.
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: 89 f6                                        mov %esi, %esi
  0000000000000002: 49 8d 34 37                                  lea %rsi, [%r15+%rsi*1]
  0000000000000006: 89 ff                                        mov %edi, %edi
  0000000000000008: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  000000000000000c: a4                                           movsb [%rdi], [%rsi]
  000000000000000d: 90                                           nop
  000000000000000e: 90                                           nop
  000000000000000f: 90                                           nop
  0000000000000010: 90                                           nop
  0000000000000011: 90                                           nop
  0000000000000012: 90                                           nop
  0000000000000013: 90                                           nop
  0000000000000014: 90                                           nop
  0000000000000015: 90                                           nop
  0000000000000016: 90                                           nop
  0000000000000017: 90                                           nop
  0000000000000018: 90                                           nop
  0000000000000019: 90                                           nop
  000000000000001a: 90                                           nop
  000000000000001b: 90                                           nop
  000000000000001c: 90                                           nop
  000000000000001d: 90                                           nop
  000000000000001e: 89 f6                                        mov %esi, %esi
  0000000000000020: 49 8d 34 37                                  lea %rsi, [%r15+%rsi*1]
  0000000000000024: 89 ff                                        mov %edi, %edi
  0000000000000026: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  000000000000002a: a4                                           movsb [%rdi], [%rsi]
@rdfa_output:
  2a: [0] unrecognized instruction
  return code: 1
@validators_disagree:
  Zero-extending happened in the end of the bundle, so old validator
  reported that sequence crossed bundle boundary, and RDFA validator
  did not allow string instruction with improperly prepared %rsi.
  
  errors reported by old validator but not by rdfa one:
    0x20
  errors reported by rdfa validator but not by old one:
    0x2a
