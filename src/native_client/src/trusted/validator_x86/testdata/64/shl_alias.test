@hex:
  
  # For background, see:
  # http://code.google.com/p/nativeclient/issues/detail?id=2576
  
  # "/4" encoding of SHL.  This is what assemblers generate.
  d3 e7
  d1 e7
  c1 e7 02
  
  # "/6" encoding of SHL.  This is an alias encoding, which we should
  # disallow on the grounds of minimalism.
  d3 f7
  d1 f7
  c1 f7 02
@val:
  VALIDATOR: 0000000000000007: d3 f7                                        shl %edi, %cl
  VALIDATOR: ERROR: This instruction has been marked illegal by Native Client
  VALIDATOR: 0000000000000009: d1 f7                                        shl %edi, 0x1
  VALIDATOR: ERROR: This instruction has been marked illegal by Native Client
  VALIDATOR: 000000000000000b: c1 f7 02                                     shl %edi, 0x2
  VALIDATOR: ERROR: This instruction has been marked illegal by Native Client
  VALIDATOR: Checking jump targets: 0 to e
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@rval:
  VALIDATOR: 0000000000000007: d3 f7                                        shl %edi, %cl
  VALIDATOR: ERROR: This instruction has been marked illegal by Native Client
  VALIDATOR: 0000000000000009: d1 f7                                        shl %edi, 0x1
  VALIDATOR: ERROR: This instruction has been marked illegal by Native Client
  VALIDATOR: 000000000000000b: c1 f7 02                                     shl %edi, 0x2
  VALIDATOR: ERROR: This instruction has been marked illegal by Native Client
  VALIDATOR: Checking jump targets: 0 to e
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: d3 e7                                        shl %edi, %cl
  0000000000000002: d1 e7                                        shl %edi, 0x1
  0000000000000004: c1 e7 02                                     shl %edi, 0x2
  0000000000000007: d3 f7                                        shl %edi, %cl
  0000000000000009: d1 f7                                        shl %edi, 0x1
  000000000000000b: c1 f7 02                                     shl %edi, 0x2
@rdfa_output:
  7: [0] unrecognized instruction
  9: [1] unrecognized instruction
  b: [2] unrecognized instruction
  return code: 1
