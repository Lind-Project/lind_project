@hex:
  # 2 prefixes of the same type
  # lock lock add %eax,(%rsp)
  F0 F0 01 04 24
  # mov %edi,%edi
  # lea (%r15,%rdi),%rdi
  # rep rep stos %eax,%es:(%rdi)
  89 FF
  49 8D 3C 3F
  F3 F3 AB
  # mov %edi,%edi
  # lea (%r15,%rdi),%rdi
  # repne rep stos %eax,%es:(%rdi)
  89 FF
  49 8D 3C 3F
  F2 F3 AB
  # mov %edi,%edi
  # lea (%r15,%rdi),%rdi
  # rep repne scas %es:(%rdi),%al
  89 FF
  49 8D 3C 3F
  F3 F2 AE
  # fs gs mov %eax,%eax
  64 65 89 C0
  # 0x66 mov %ax,%ax
  66 66 89 C0
  # 0x67 mov %eax,(%esp)
  67 67 89 04 24
@rval:
  VALIDATOR: 0000000000000000: f0 f0 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: f0 f0 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 000000000000000b: f3 f3 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 000000000000000b: f3 f3 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 0000000000000014: f2 f3 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000014: f2 f3 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: Use of REPNE (F2) prefix for instruction not allowed by Native Client
  VALIDATOR: 000000000000001d: f3 f2 ae                                     scasb [%rdi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000020: 64 65 89 c0                                  mov %eax, %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000020: 64 65 89 c0                                  mov %eax, %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000020: 64 65 89 c0                                  mov %eax, %eax
  VALIDATOR: ERROR: Specifying different segment registers using prefix bytes is not allowed by Native Client
  VALIDATOR: 0000000000000024: 66 66 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000024: 66 66 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 0000000000000028: 67 67 89 04 24                               mov [%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000028: 67 67 89 04 24                               mov [%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000028: 67 67 89 04 24                               mov [%esp], %eax
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 0000000000000028: 67 67 89 04 24                               mov [%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: Checking jump targets: 0 to 2d
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@rvald:
  VALIDATOR: 0000000000000000: f0 f0 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: f0 f0 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 000000000000000b: f3 f3 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 000000000000000b: f3 f3 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 0000000000000014: f2 f3 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000014: f2 f3 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: Use of REPNE (F2) prefix for instruction not allowed by Native Client
  VALIDATOR: 000000000000001d: f3 f2 ae                                     scasb [%rdi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000020: 64 65 89 c0                                  mov %eax, %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000020: 64 65 89 c0                                  mov %eax, %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000020: 64 65 89 c0                                  mov %eax, %eax
  VALIDATOR: ERROR: Specifying different segment registers using prefix bytes is not allowed by Native Client
  VALIDATOR: 0000000000000024: 66 66 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000024: 66 66 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 0000000000000028: 67 67 89 04 24                               mov [%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000028: 67 67 89 04 24                               mov [%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000028: 67 67 89 04 24                               mov [%esp], %eax
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 0000000000000028: 67 67 89 04 24                               mov [%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: Checking block alignment and jump targets: 0 to 2d
  *** <input> IS UNSAFE ***
@vd-rval:
  VALIDATOR: 0000000000000000: f0 f0 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: f0 f0 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 000000000000000b: f3 f3 ab                                     [P] dontcare [%rdi] (s), %eax (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 000000000000000b: f3 f3 ab                                     [P] dontcare [%rdi] (s), %eax (u)
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 0000000000000014: f2 f3 ab                                     [P] dontcare [%rdi] (s), %eax (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000014: f2 f3 ab                                     [P] dontcare [%rdi] (s), %eax (u)
  VALIDATOR: ERROR: Use of REPNE (F2) prefix for instruction not allowed by Native Client
  VALIDATOR: 000000000000001d: f3 f2 ae                                     [P] dontcare %al (u), [%rdi] (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000020: 64 65 89 c0                                  mov %eax, %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000020: 64 65 89 c0                                  mov %eax, %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000020: 64 65 89 c0                                  mov %eax, %eax
  VALIDATOR: ERROR: Specifying different segment registers using prefix bytes is not allowed by Native Client
  VALIDATOR: 0000000000000024: 66 66 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000024: 66 66 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 0000000000000028: 67 67 89 04 24                               mov [%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000028: 67 67 89 04 24                               mov [%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000028: 67 67 89 04 24                               mov [%esp], %eax
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 0000000000000028: 67 67 89 04 24                               mov [%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: Checking jump targets: 0 to 2d
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: f0 f0 01 04 24                               add [%rsp], %eax
  0000000000000005: 89 ff                                        mov %edi, %edi
  0000000000000007: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  000000000000000b: f3 f3 ab                                     stosd [%rdi]
  000000000000000e: 89 ff                                        mov %edi, %edi
  0000000000000010: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000014: f2 f3 ab                                     stosd [%rdi]
  0000000000000017: 89 ff                                        mov %edi, %edi
  0000000000000019: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  000000000000001d: f3 f2 ae                                     scasb [%rdi]
  0000000000000020: 64 65 89 c0                                  mov %eax, %eax
  0000000000000024: 66 66 89 c0                                  mov %ax, %ax
  0000000000000028: 67 67 89 04 24                               mov [%esp], %eax
@vdis:
  0000000000000000: f0 f0 01 04 24                               add [%rsp], %eax
  0000000000000005: 89 ff                                        mov %edi, %edi
  0000000000000007: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  000000000000000b: f3 f3 ab                                     [P] dontcare [%rdi] (s), %eax (u)
  000000000000000e: 89 ff                                        mov %edi, %edi
  0000000000000010: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000014: f2 f3 ab                                     [P] dontcare [%rdi] (s), %eax (u)
  0000000000000017: 89 ff                                        mov %edi, %edi
  0000000000000019: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  000000000000001d: f3 f2 ae                                     [P] dontcare %al (u), [%rdi] (u)
  0000000000000020: 64 65 89 c0                                  mov %eax, %eax
  0000000000000024: 66 66 89 c0                                  mov %ax, %ax
  0000000000000028: 67 67 89 04 24                               mov [%esp], %eax
@rdfa_output:
  0: [0] unrecognized instruction
  b: [1] unrecognized instruction
  14: [2] unrecognized instruction
  1d: [3] unrecognized instruction
  20: [0] unrecognized instruction
  24: [1] unrecognized instruction
  28: [2] unrecognized instruction
  return code: 1
----------------------------------------------------------------------
@hex:
  # rex rex jmp $
  40 40 EB FD
@rval:
  VALIDATOR: 0000000000000000: 40 40 eb fd                                  jmp 0x1
  VALIDATOR: ERROR: Multiple use of REX prefix not allowed
  VALIDATOR: Checking jump targets: 0 to 4
  VALIDATOR: ERROR: 1: Bad jump target
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@rvald:
  VALIDATOR: 0000000000000000: 40 40 eb fd                                  jmp 0x1
  VALIDATOR: ERROR: Multiple use of REX prefix not allowed
  VALIDATOR: Checking block alignment and jump targets: 0 to 4
  VALIDATOR: 0000000000000000: 40 40 eb fd                                  jmp 0x1
  VALIDATOR: ERROR: Doesn't jump to instruction address
  *** <input> IS UNSAFE ***
@vd-rval:
  VALIDATOR: 0000000000000000: 40 40 eb fd                                  [P] dontcarejump %rip (s), 0x1 (u)
  VALIDATOR: ERROR: Multiple use of REX prefix not allowed
  VALIDATOR: Checking jump targets: 0 to 4
  VALIDATOR: ERROR: 1: Bad jump target
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: 40 40 eb fd                                  jmp 0x1
@vdis:
  0000000000000000: 40 40 eb fd                                  [P] dontcarejump %rip (s), 0x1 (u)
@rdfa_output:
  0: [0] unrecognized instruction
  return code: 1
@validators_disagree:
  errors reported by old validator but not by rdfa one:
    0x1 - because of error recovery
----------------------------------------------------------------------
@hex:
  # 2 prefixes of different type
  # lock add %eax, %ss:(%rsp)
  36 F0 01 04 24
  F0 36 01 04 24
  
  # mov %edi,%edi
  # lea (%r15,%rdi),%rdi
  # es rep stos %eax,%es:(%rdi)
  89 FF
  49 8D 3C 3F
  26 F3 AB
  89 FF
  49 8D 3C 3F
  F3 26 AB
  
  # nops for bundle alignment
  90 90 90 90
  
  # lock add %ax, (%rsp)
  66 F0 01 04 24
  F0 66 01 04 24
@rval:
  VALIDATOR: 0000000000000000: 36 f0 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: 36 f0 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000005: f0 36 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000005: f0 36 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000010: 26 f3 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000010: 26 f3 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000019: f3 26 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000019: f3 26 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: Checking jump targets: 0 to 2a
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@rvald:
  VALIDATOR: 0000000000000000: 36 f0 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: 36 f0 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000005: f0 36 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000005: f0 36 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000010: 26 f3 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000010: 26 f3 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000019: f3 26 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000019: f3 26 ab                                     stosd [%rdi]
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: Checking block alignment and jump targets: 0 to 2a
  *** <input> IS UNSAFE ***
@vd-rval:
  VALIDATOR: 0000000000000000: 36 f0 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: 36 f0 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000005: f0 36 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000005: f0 36 01 04 24                               add [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000010: 26 f3 ab                                     [P] dontcare [%rdi] (s), %eax (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000010: 26 f3 ab                                     [P] dontcare [%rdi] (s), %eax (u)
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000019: f3 26 ab                                     [P] dontcare [%rdi] (s), %eax (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000019: f3 26 ab                                     [P] dontcare [%rdi] (s), %eax (u)
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: Checking jump targets: 0 to 2a
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: 36 f0 01 04 24                               add [%rsp], %eax
  0000000000000005: f0 36 01 04 24                               add [%rsp], %eax
  000000000000000a: 89 ff                                        mov %edi, %edi
  000000000000000c: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000010: 26 f3 ab                                     stosd [%rdi]
  0000000000000013: 89 ff                                        mov %edi, %edi
  0000000000000015: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000019: f3 26 ab                                     stosd [%rdi]
  000000000000001c: 90                                           nop
  000000000000001d: 90                                           nop
  000000000000001e: 90                                           nop
  000000000000001f: 90                                           nop
  0000000000000020: 66 f0 01 04 24                               add [%rsp], %ax
  0000000000000025: f0 66 01 04 24                               add [%rsp], %ax
@vdis:
  0000000000000000: 36 f0 01 04 24                               add [%rsp], %eax
  0000000000000005: f0 36 01 04 24                               add [%rsp], %eax
  000000000000000a: 89 ff                                        mov %edi, %edi
  000000000000000c: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000010: 26 f3 ab                                     [P] dontcare [%rdi] (s), %eax (u)
  0000000000000013: 89 ff                                        mov %edi, %edi
  0000000000000015: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000019: f3 26 ab                                     [P] dontcare [%rdi] (s), %eax (u)
  000000000000001c: 90                                           [P] dontcare
  000000000000001d: 90                                           [P] dontcare
  000000000000001e: 90                                           [P] dontcare
  000000000000001f: 90                                           [P] dontcare
  0000000000000020: 66 f0 01 04 24                               add [%rsp], %ax
  0000000000000025: f0 66 01 04 24                               add [%rsp], %ax
@rdfa_output:
  0: [0] unrecognized instruction
  5: [1] unrecognized instruction
  10: [2] unrecognized instruction
  19: [3] unrecognized instruction
  return code: 1
----------------------------------------------------------------------
@hex:
  # Doesn't validate due to bug.
  # mov %edi,%edi
  # lea (%r15,%rdi),%rdi
  # rep stosw %ax,%es:(%rdi)
  89 FF
  49 8D 3C 3F
  66 F3 AB
  89 FF
  49 8D 3C 3F
  F3 66 AB
@rval:
  VALIDATOR: 0000000000000006: 66 f3 ab                                     stosw [%rdi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 000000000000000f: f3 66 ab                                     stosw [%rdi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: Checking jump targets: 0 to 12
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@rvald:
  VALIDATOR: 0000000000000006: 66 f3 ab                                     stosw [%rdi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 000000000000000f: f3 66 ab                                     stosw [%rdi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: Checking block alignment and jump targets: 0 to 12
  *** <input> IS UNSAFE ***
@vd-rval:
  VALIDATOR: 0000000000000006: 66 f3 ab                                     [P] dontcare [%rdi] (s), %ax (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 000000000000000f: f3 66 ab                                     [P] dontcare [%rdi] (s), %ax (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: Checking jump targets: 0 to 12
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: 89 ff                                        mov %edi, %edi
  0000000000000002: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000006: 66 f3 ab                                     stosw [%rdi]
  0000000000000009: 89 ff                                        mov %edi, %edi
  000000000000000b: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  000000000000000f: f3 66 ab                                     stosw [%rdi]
@vdis:
  0000000000000000: 89 ff                                        mov %edi, %edi
  0000000000000002: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000006: 66 f3 ab                                     [P] dontcare [%rdi] (s), %ax (u)
  0000000000000009: 89 ff                                        mov %edi, %edi
  000000000000000b: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  000000000000000f: f3 66 ab                                     [P] dontcare [%rdi] (s), %ax (u)
@rdfa_output:
  6: [0] unrecognized instruction
  f: [1] unrecognized instruction
  return code: 1
----------------------------------------------------------------------
@hex:
  # lock add %eax, (%esp)
  67 F0 01 04 24
  F0 67 01 04 24
  
  # rep stos %eax, %es:(%edi)
  89 FF
  49 8D 3C 3F
  67 F3 AB
  89 FF
  49 8D 3C 3F
  F3 67 AB
@rval:
  VALIDATOR: 0000000000000000: 67 f0 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: 67 f0 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000000: 67 f0 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000005: f0 67 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000005: f0 67 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000005: f0 67 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000010: 67 f3 ab                                     stosd [%edi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000010: 67 f3 ab                                     stosd [%edi]
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000010: 67 f3 ab                                     stosd [%edi]
  VALIDATOR: ERROR: Assignment to non-64 bit segment address
  VALIDATOR: 0000000000000019: f3 67 ab                                     stosd [%edi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000019: f3 67 ab                                     stosd [%edi]
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000019: f3 67 ab                                     stosd [%edi]
  VALIDATOR: ERROR: Assignment to non-64 bit segment address
  VALIDATOR: Checking jump targets: 0 to 1c
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@rvald:
  VALIDATOR: 0000000000000000: 67 f0 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: 67 f0 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000000: 67 f0 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000005: f0 67 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000005: f0 67 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000005: f0 67 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000010: 67 f3 ab                                     stosd [%edi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000010: 67 f3 ab                                     stosd [%edi]
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000010: 67 f3 ab                                     stosd [%edi]
  VALIDATOR: ERROR: Assignment to non-64 bit segment address
  VALIDATOR: 0000000000000019: f3 67 ab                                     stosd [%edi]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000019: f3 67 ab                                     stosd [%edi]
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000019: f3 67 ab                                     stosd [%edi]
  VALIDATOR: ERROR: Assignment to non-64 bit segment address
  VALIDATOR: Checking block alignment and jump targets: 0 to 1c
  *** <input> IS UNSAFE ***
@vd-rval:
  VALIDATOR: 0000000000000000: 67 f0 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: 67 f0 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000000: 67 f0 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000005: f0 67 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000005: f0 67 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000005: f0 67 01 04 24                               add [%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000010: 67 f3 ab                                     [P] dontcare [%edi] (s), %eax (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000010: 67 f3 ab                                     [P] dontcare [%edi] (s), %eax (u)
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000010: 67 f3 ab                                     [P] dontcare [%edi] (s), %eax (u)
  VALIDATOR: ERROR: Assignment to non-64 bit segment address
  VALIDATOR: 0000000000000019: f3 67 ab                                     [P] dontcare [%edi] (s), %eax (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000019: f3 67 ab                                     [P] dontcare [%edi] (s), %eax (u)
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000019: f3 67 ab                                     [P] dontcare [%edi] (s), %eax (u)
  VALIDATOR: ERROR: Assignment to non-64 bit segment address
  VALIDATOR: Checking jump targets: 0 to 1c
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: 67 f0 01 04 24                               add [%esp], %eax
  0000000000000005: f0 67 01 04 24                               add [%esp], %eax
  000000000000000a: 89 ff                                        mov %edi, %edi
  000000000000000c: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000010: 67 f3 ab                                     stosd [%edi]
  0000000000000013: 89 ff                                        mov %edi, %edi
  0000000000000015: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000019: f3 67 ab                                     stosd [%edi]
@vdis:
  0000000000000000: 67 f0 01 04 24                               add [%esp], %eax
  0000000000000005: f0 67 01 04 24                               add [%esp], %eax
  000000000000000a: 89 ff                                        mov %edi, %edi
  000000000000000c: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000010: 67 f3 ab                                     [P] dontcare [%edi] (s), %eax (u)
  0000000000000013: 89 ff                                        mov %edi, %edi
  0000000000000015: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000019: f3 67 ab                                     [P] dontcare [%edi] (s), %eax (u)
@rdfa_output:
  0: [0] unrecognized instruction
  5: [1] unrecognized instruction
  10: [2] unrecognized instruction
  19: [3] unrecognized instruction
  return code: 1
----------------------------------------------------------------------
@hex:
  # lock add %rax, (%rsp)
  f0 48 01 04 24
  48 f0 01 04 24
  # mov %edi,%edi
  # lea (%r15,%rdi),%rdi
  # rep stos %rax,%es:(%rdi)
  89 FF
  49 8D 3C 3F
  F3 48 AB
@rval:
  VALIDATOR: 0000000000000005: 48 f0 01 04 24                               add [%rsp], %rax
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: Checking jump targets: 0 to 13
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@rvald:
  VALIDATOR: 0000000000000005: 48 f0 01 04 24                               add [%rsp], %rax
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: Checking block alignment and jump targets: 0 to 13
  *** <input> IS UNSAFE ***
@vd-rval:
  VALIDATOR: 0000000000000005: 48 f0 01 04 24                               add [%rsp], %rax
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: Checking jump targets: 0 to 13
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: f0 48 01 04 24                               add [%rsp], %rax
  0000000000000005: 48 f0 01 04 24                               add [%rsp], %rax
  000000000000000a: 89 ff                                        mov %edi, %edi
  000000000000000c: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000010: f3 48 ab                                     stosq [%rdi]
@vdis:
  0000000000000000: f0 48 01 04 24                               add [%rsp], %rax
  0000000000000005: 48 f0 01 04 24                               add [%rsp], %rax
  000000000000000a: 89 ff                                        mov %edi, %edi
  000000000000000c: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000010: f3 48 ab                                     [P] dontcare [%rdi] (s), %rax (u)
@rdfa_output:
  5: [0] unrecognized instruction
  return code: 1
----------------------------------------------------------------------
@hex:
  # fs mov %ax,%ax
  64 66 89 C0
  66 64 89 C0
  # fs add %eax, (%esp)
  67 64 01 04 24
  64 67 01 04 24
  # fs mov %rax,%rax
  64 48 89 C0
  48 64 89 C0
  
  # bundle alignment
  90 90 90 90 90 90
  
  # add %ax, (%esp)
  66 67 01 04 24
  67 66 01 04 24
  # mov %r15l, (%rsp)
  66 44 89 3C 24
  44 66 89 3C 24
  # mov %r15, (%esp)
  67 4C 89 3C 24
  4C 67 89 3C 24
@rval:
  VALIDATOR: 0000000000000000: 64 66 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: 64 66 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000004: 66 64 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000004: 66 64 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000008: 67 64 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000008: 67 64 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000008: 67 64 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000008: 67 64 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit segment address
  VALIDATOR: 000000000000000d: 64 67 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 000000000000000d: 64 67 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000000d: 64 67 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 000000000000000d: 64 67 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit segment address
  VALIDATOR: 0000000000000012: 64 48 89 c0                                  mov %rax, %rax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000016: 48 64 89 c0                                  mov %rax, %rax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000016: 48 64 89 c0                                  mov %rax, %rax
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: 0000000000000020: 66 67 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000020: 66 67 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000020: 66 67 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000025: 67 66 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000025: 67 66 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000025: 67 66 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 000000000000002f: 44 66 89 3c 24                               mov [%rsp], %r15w
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: 0000000000000034: 67 4c 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000034: 67 4c 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000039: 4c 67 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000039: 4c 67 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: 0000000000000039: 4c 67 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: Checking jump targets: 0 to 3e
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@rvald:
  VALIDATOR: 0000000000000000: 64 66 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: 64 66 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000004: 66 64 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000004: 66 64 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000008: 67 64 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000008: 67 64 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000008: 67 64 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000008: 67 64 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit segment address
  VALIDATOR: 000000000000000d: 64 67 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 000000000000000d: 64 67 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000000d: 64 67 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 000000000000000d: 64 67 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit segment address
  VALIDATOR: 0000000000000012: 64 48 89 c0                                  mov %rax, %rax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000016: 48 64 89 c0                                  mov %rax, %rax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000016: 48 64 89 c0                                  mov %rax, %rax
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: 0000000000000020: 66 67 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000020: 66 67 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000020: 66 67 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000025: 67 66 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000025: 67 66 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000025: 67 66 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 000000000000002f: 44 66 89 3c 24                               mov [%rsp], %r15w
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: 0000000000000034: 67 4c 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000034: 67 4c 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000039: 4c 67 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000039: 4c 67 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: 0000000000000039: 4c 67 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: Checking block alignment and jump targets: 0 to 3e
  *** <input> IS UNSAFE ***
@vd-rval:
  VALIDATOR: 0000000000000000: 64 66 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: 64 66 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000004: 66 64 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000004: 66 64 89 c0                                  mov %ax, %ax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000008: 67 64 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000008: 67 64 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000008: 67 64 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000008: 67 64 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit segment address
  VALIDATOR: 000000000000000d: 64 67 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 000000000000000d: 64 67 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000000d: 64 67 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 000000000000000d: 64 67 01 04 24                               add %fs:[%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit segment address
  VALIDATOR: 0000000000000012: 64 48 89 c0                                  mov %rax, %rax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000016: 48 64 89 c0                                  mov %rax, %rax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000016: 48 64 89 c0                                  mov %rax, %rax
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: 0000000000000020: 66 67 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000020: 66 67 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000020: 66 67 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000025: 67 66 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000025: 67 66 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000025: 67 66 01 04 24                               add [%esp], %ax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 000000000000002f: 44 66 89 3c 24                               mov [%rsp], %r15w
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: 0000000000000034: 67 4c 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000034: 67 4c 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000039: 4c 67 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000039: 4c 67 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: 0000000000000039: 4c 67 89 3c 24                               mov [%esp], %r15
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: Checking jump targets: 0 to 3e
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: 64 66 89 c0                                  mov %ax, %ax
  0000000000000004: 66 64 89 c0                                  mov %ax, %ax
  0000000000000008: 67 64 01 04 24                               add %fs:[%esp], %eax
  000000000000000d: 64 67 01 04 24                               add %fs:[%esp], %eax
  0000000000000012: 64 48 89 c0                                  mov %rax, %rax
  0000000000000016: 48 64 89 c0                                  mov %rax, %rax
  000000000000001a: 90                                           nop
  000000000000001b: 90                                           nop
  000000000000001c: 90                                           nop
  000000000000001d: 90                                           nop
  000000000000001e: 90                                           nop
  000000000000001f: 90                                           nop
  0000000000000020: 66 67 01 04 24                               add [%esp], %ax
  0000000000000025: 67 66 01 04 24                               add [%esp], %ax
  000000000000002a: 66 44 89 3c 24                               mov [%rsp], %r15w
  000000000000002f: 44 66 89 3c 24                               mov [%rsp], %r15w
  0000000000000034: 67 4c 89 3c 24                               mov [%esp], %r15
  0000000000000039: 4c 67 89 3c 24                               mov [%esp], %r15
@vdis:
  0000000000000000: 64 66 89 c0                                  mov %ax, %ax
  0000000000000004: 66 64 89 c0                                  mov %ax, %ax
  0000000000000008: 67 64 01 04 24                               add %fs:[%esp], %eax
  000000000000000d: 64 67 01 04 24                               add %fs:[%esp], %eax
  0000000000000012: 64 48 89 c0                                  mov %rax, %rax
  0000000000000016: 48 64 89 c0                                  mov %rax, %rax
  000000000000001a: 90                                           [P] dontcare
  000000000000001b: 90                                           [P] dontcare
  000000000000001c: 90                                           [P] dontcare
  000000000000001d: 90                                           [P] dontcare
  000000000000001e: 90                                           [P] dontcare
  000000000000001f: 90                                           [P] dontcare
  0000000000000020: 66 67 01 04 24                               add [%esp], %ax
  0000000000000025: 67 66 01 04 24                               add [%esp], %ax
  000000000000002a: 66 44 89 3c 24                               mov [%rsp], %r15w
  000000000000002f: 44 66 89 3c 24                               mov [%rsp], %r15w
  0000000000000034: 67 4c 89 3c 24                               mov [%esp], %r15
  0000000000000039: 4c 67 89 3c 24                               mov [%esp], %r15
@rdfa_output:
  0: [0] unrecognized instruction
  4: [1] unrecognized instruction
  8: [2] unrecognized instruction
  d: [3] unrecognized instruction
  12: [4] unrecognized instruction
  16: [5] unrecognized instruction
  20: [0] unrecognized instruction
  25: [1] unrecognized instruction
  2f: [2] unrecognized instruction
  34: [3] unrecognized instruction
  39: [4] unrecognized instruction
  return code: 1
----------------------------------------------------------------------
@hex:
  # 2 prefixes when one is mandatory
  # fs phaddw %xmm0,%xmm1
  64 66 0F 38 01 C8
  # fs addsd %xmm0,%xmm1
  64 F2 0F 58 C8
  # 0x66 phaddw %xmm0,%xmm1
  66 66 0F 38 01 C8
  # 0x66 addsd %xmm0,%xmm1
  66 F2 0F 58 C8
  # phaddw (%esp), %xmm0
  67 66 0f 38 01 04 24
  
  # nops for bundle alignment
  90 90 90
  
  # addsd (%esp), %xmm0
  67 f2 0f 58 04 24
  # mov %eax,%eax
  # phaddw (%r15,%rax),%xmm0
  89 C0
  66 41 0F 38 01 04 07
  89 C0
  41 66 0F 38 01 04 07
  # mov %eax,%eax
  # addsd (%r15,%rax),%xmm0
  89 C0
  F2 41 0F 58 04 07
  89 C0
  41 F2 0F 58 04 07
@rval:
  VALIDATOR: 0000000000000000: 64 66 0f 38 01 c8                            phaddw %xmm1, %xmm0
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: 64 66 0f 38 01 c8                            phaddw %xmm1, %xmm0
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000006: 64 f2 0f 58 c8                               addsd %xmm1, %xmm0
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000006: 64 f2 0f 58 c8                               addsd %xmm1, %xmm0
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000000b: 66 66 0f 38 01 c8                            phaddw %xmm1, %xmm0
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 000000000000000b: 66 66 0f 38 01 c8                            phaddw %xmm1, %xmm0
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 0000000000000011: 66 f2 0f 58 c8                               addsd %xmm1, %xmm0
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000011: 66 f2 0f 58 c8                               addsd %xmm1, %xmm0
  VALIDATOR: ERROR: Use of DATA16 (66) prefix for instruction not allowed by Native Client
  VALIDATOR: 0000000000000016: 67 66 0f 38 01 04 24                         phaddw %xmm0, [%esp]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000016: 67 66 0f 38 01 04 24                         phaddw %xmm0, [%esp]
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000016: 67 66 0f 38 01 04 24                         phaddw %xmm0, [%esp]
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000020: 67 f2 0f 58 04 24                            addsd %xmm0, [%esp]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000020: 67 f2 0f 58 04 24                            addsd %xmm0, [%esp]
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000020: 67 f2 0f 58 04 24                            addsd %xmm0, [%esp]
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000031: 41 66 0f 38 01 04 07                         phaddw %xmm0, [%r15+%rax*1]
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: 0000000000000042: 41 f2 0f 58 04 07                            addsd %xmm0, [%r15+%rax*1]
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: Checking jump targets: 0 to 48
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@rvald:
  VALIDATOR: 0000000000000000: 64 66 0f 38 01 c8                            phaddw %xmm1, %xmm0
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: 64 66 0f 38 01 c8                            phaddw %xmm1, %xmm0
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000006: 64 f2 0f 58 c8                               addsd %xmm1, %xmm0
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000006: 64 f2 0f 58 c8                               addsd %xmm1, %xmm0
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000000b: 66 66 0f 38 01 c8                            phaddw %xmm1, %xmm0
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 000000000000000b: 66 66 0f 38 01 c8                            phaddw %xmm1, %xmm0
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 0000000000000011: 66 f2 0f 58 c8                               addsd %xmm1, %xmm0
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000011: 66 f2 0f 58 c8                               addsd %xmm1, %xmm0
  VALIDATOR: ERROR: Use of DATA16 (66) prefix for instruction not allowed by Native Client
  VALIDATOR: 0000000000000016: 67 66 0f 38 01 04 24                         phaddw %xmm0, [%esp]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000016: 67 66 0f 38 01 04 24                         phaddw %xmm0, [%esp]
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000016: 67 66 0f 38 01 04 24                         phaddw %xmm0, [%esp]
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000020: 67 f2 0f 58 04 24                            addsd %xmm0, [%esp]
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000020: 67 f2 0f 58 04 24                            addsd %xmm0, [%esp]
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000020: 67 f2 0f 58 04 24                            addsd %xmm0, [%esp]
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000031: 41 66 0f 38 01 04 07                         phaddw %xmm0, [%r15+%rax*1]
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: 0000000000000042: 41 f2 0f 58 04 07                            addsd %xmm0, [%r15+%rax*1]
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: Checking block alignment and jump targets: 0 to 48
  *** <input> IS UNSAFE ***
@vd-rval:
  VALIDATOR: 0000000000000000: 64 66 0f 38 01 c8                            [P] dontcare %xmm0 (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000000: 64 66 0f 38 01 c8                            [P] dontcare %xmm0 (u)
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000006: 64 f2 0f 58 c8                               [P] dontcare %xmm0 (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000006: 64 f2 0f 58 c8                               [P] dontcare %xmm0 (u)
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000000b: 66 66 0f 38 01 c8                            [P] dontcare %xmm0 (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 000000000000000b: 66 66 0f 38 01 c8                            [P] dontcare %xmm0 (u)
  VALIDATOR: ERROR: Duplicating a prefix byte is not allowed by Native Client
  VALIDATOR: 0000000000000011: 66 f2 0f 58 c8                               [P] dontcare %xmm0 (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000011: 66 f2 0f 58 c8                               [P] dontcare %xmm0 (u)
  VALIDATOR: ERROR: Use of DATA16 (66) prefix for instruction not allowed by Native Client
  VALIDATOR: 0000000000000016: 67 66 0f 38 01 04 24                         [P] dontcare [%esp] (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000016: 67 66 0f 38 01 04 24                         [P] dontcare [%esp] (u)
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000016: 67 66 0f 38 01 04 24                         [P] dontcare [%esp] (u)
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000020: 67 f2 0f 58 04 24                            [P] dontcare [%esp] (u)
  VALIDATOR: ERROR: More than one (non-REX) prefix byte specified
  VALIDATOR: 0000000000000020: 67 f2 0f 58 04 24                            [P] dontcare [%esp] (u)
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000020: 67 f2 0f 58 04 24                            [P] dontcare [%esp] (u)
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 0000000000000031: 41 66 0f 38 01 04 07                         [P] dontcare [%r15+%rax*1] (u)
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: 0000000000000042: 41 f2 0f 58 04 07                            [P] dontcare [%r15+%rax*1] (u)
  VALIDATOR: ERROR: REX prefix byte must appear last
  VALIDATOR: Checking jump targets: 0 to 48
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: 64 66 0f 38 01 c8                            phaddw %xmm1, %xmm0
  0000000000000006: 64 f2 0f 58 c8                               addsd %xmm1, %xmm0
  000000000000000b: 66 66 0f 38 01 c8                            phaddw %xmm1, %xmm0
  0000000000000011: 66 f2 0f 58 c8                               addsd %xmm1, %xmm0
  0000000000000016: 67 66 0f 38 01 04 24                         phaddw %xmm0, [%esp]
  000000000000001d: 90                                           nop
  000000000000001e: 90                                           nop
  000000000000001f: 90                                           nop
  0000000000000020: 67 f2 0f 58 04 24                            addsd %xmm0, [%esp]
  0000000000000026: 89 c0                                        mov %eax, %eax
  0000000000000028: 66 41 0f 38 01 04 07                         phaddw %xmm0, [%r15+%rax*1]
  000000000000002f: 89 c0                                        mov %eax, %eax
  0000000000000031: 41 66 0f 38 01 04 07                         phaddw %xmm0, [%r15+%rax*1]
  0000000000000038: 89 c0                                        mov %eax, %eax
  000000000000003a: f2 41 0f 58 04 07                            addsd %xmm0, [%r15+%rax*1]
  0000000000000040: 89 c0                                        mov %eax, %eax
  0000000000000042: 41 f2 0f 58 04 07                            addsd %xmm0, [%r15+%rax*1]
@vdis:
  0000000000000000: 64 66 0f 38 01 c8                            [P] dontcare %xmm0 (u)
  0000000000000006: 64 f2 0f 58 c8                               [P] dontcare %xmm0 (u)
  000000000000000b: 66 66 0f 38 01 c8                            [P] dontcare %xmm0 (u)
  0000000000000011: 66 f2 0f 58 c8                               [P] dontcare %xmm0 (u)
  0000000000000016: 67 66 0f 38 01 04 24                         [P] dontcare [%esp] (u)
  000000000000001d: 90                                           [P] dontcare
  000000000000001e: 90                                           [P] dontcare
  000000000000001f: 90                                           [P] dontcare
  0000000000000020: 67 f2 0f 58 04 24                            [P] dontcare [%esp] (u)
  0000000000000026: 89 c0                                        mov %eax, %eax
  0000000000000028: 66 41 0f 38 01 04 07                         [P] dontcare [%r15+%rax*1] (u)
  000000000000002f: 89 c0                                        mov %eax, %eax
  0000000000000031: 41 66 0f 38 01 04 07                         [P] dontcare [%r15+%rax*1] (u)
  0000000000000038: 89 c0                                        mov %eax, %eax
  000000000000003a: f2 41 0f 58 04 07                            [P] dontcare [%r15+%rax*1] (u)
  0000000000000040: 89 c0                                        mov %eax, %eax
  0000000000000042: 41 f2 0f 58 04 07                            [P] dontcare [%r15+%rax*1] (u)
@rdfa_output:
  0: [0] unrecognized instruction
  6: [1] unrecognized instruction
  b: [2] unrecognized instruction
  11: [3] unrecognized instruction
  16: [4] unrecognized instruction
  20: [0] unrecognized instruction
  31: [1] unrecognized instruction
  42: [0] unrecognized instruction
  return code: 1
