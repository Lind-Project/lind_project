@hex:
  # Test if we disallow bsf to zero-extend (i.e. mask) a memory reference.
  0f bc c3
  49 89 14 07
@rval:
  VALIDATOR: 0000000000000003: 49 89 14 07                                  mov [%r15+%rax*1], %rdx
  VALIDATOR: ERROR: Invalid index register in memory offset
  VALIDATOR: Checking jump targets: 0 to 7
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@rvald:
  VALIDATOR: 0000000000000003: 49 89 14 07                                  mov [%r15+%rax*1], %rdx
  VALIDATOR: ERROR: Invalid index register in memory offset
  VALIDATOR: Checking block alignment and jump targets: 0 to 7
  *** <input> IS UNSAFE ***
@vd-rval:
  VALIDATOR: 0000000000000003: 49 89 14 07                                  mov [%r15+%rax*1], %rdx
  VALIDATOR: ERROR: Invalid index register in memory offset
  VALIDATOR: Checking jump targets: 0 to 7
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: 0f bc c3                                     bsf %eax, %ebx
  0000000000000003: 49 89 14 07                                  mov [%r15+%rax*1], %rdx
@vdis:
  0000000000000000: 0f bc c3                                     [P] dontcare %eax (s), %ebx (u)
  0000000000000003: 49 89 14 07                                  mov [%r15+%rax*1], %rdx
@rdfa_output:
  3: [0] improper memory address - bad index
  return code: 1
