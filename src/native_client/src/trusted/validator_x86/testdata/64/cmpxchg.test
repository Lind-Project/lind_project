@hex:
  # mov %ebx, %ebx
  # cmpxchg %eax, %nacl:(%r15, %rbx)
  89 DB 41 0F B1 04 1F
  # mov %ebx, %ebx
  # cmpxchg8b %nacl:(%r15, %rbx)
  89 DB 41 0F C7 0C 1F
  # mov %ebx, %ebx
  # cmpxchg16b %nacl:(%r15, %rbx)
  89 DB 49 0F C7 0C 1F
@rval:
  VALIDATOR: Checking jump targets: 0 to 15
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> is safe ***
@rvald:
  VALIDATOR: Checking block alignment and jump targets: 0 to 15
  *** <input> is safe ***
@vd-rval:
  VALIDATOR: Checking jump targets: 0 to 15
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> is safe ***
@dis:
  0000000000000000: 89 db                                        mov %ebx, %ebx
  0000000000000002: 41 0f b1 04 1f                               cmpxchg [%r15+%rbx*1], %eax
  0000000000000007: 89 db                                        mov %ebx, %ebx
  0000000000000009: 41 0f c7 0c 1f                               cmpxchg8b [%r15+%rbx*1]
  000000000000000e: 89 db                                        mov %ebx, %ebx
  0000000000000010: 49 0f c7 0c 1f                               cmpxchg16b [%r15+%rbx*1]
@vdis:
  0000000000000000: 89 db                                        mov %ebx, %ebx
  0000000000000002: 41 0f b1 04 1f                               [P] dontcare %eax (su), [%r15+%rbx*1] (su), %eax (su)
  0000000000000007: 89 db                                        mov %ebx, %ebx
  0000000000000009: 41 0f c7 0c 1f                               [P] dontcare %edx (su), %eax (su), [%r15+%rbx*1] (su)
  000000000000000e: 89 db                                        mov %ebx, %ebx
  0000000000000010: 49 0f c7 0c 1f                               [P] dontcare %rdx (su), %eax (su), [%r15+%rbx*1] (su)
@rdfa_output:
  return code: 0
