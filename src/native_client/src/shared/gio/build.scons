# -*- python2 -*-
# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import tempfile # for gio_test

Import('env')


env.DualLibrary('gio',
                ['gio.c',
                 'gio_mem.c',
                 'gprintf.c',
                 'gio_mem_snapshot.c',
                 'gio_pio.c',
                 ])


gtest_env = env.MakeGTestEnv()

gtest_env.DualLibrary('gio_test', ['gio_test_base.cc'])

gio_mem_test_exe = gtest_env.ComponentProgram(
    'gio_mem_test',
    ['gio_mem_test.cc'],
    EXTRA_LIBS=['gio', 'gio_test'])

node = gtest_env.CommandTest(
    'gio_mem_test_output.xml.out',
    command=[gio_mem_test_exe, '--gtest_output=xml:${TARGET}'])
gtest_env.AddNodeToTestSuite(node, ['small_tests'],
    'run_gio_mem_test')

gio_test_exe = gtest_env.ComponentProgram(
    'gio_test',
    ['gio_test.cc'],
    EXTRA_LIBS=['gio', 'platform', 'gio_test'])

# temp file will be removed by gio_test (if it compiles and test completes).
temppath = tempfile.NamedTemporaryFile(prefix="gio", suffix=".tmp").name
node = gtest_env.CommandTest(
    'gio_test_output.xml.out',
    command=[gio_test_exe,
             '--gtest_output=xml:${TARGET}',
             '-t', temppath,
   # Note: to regenerate the premade_text/binary_file, use "make_premade.py"
             '-x', env.File('premade_text_file'),
             '-b', env.File('premade_binary_file'),
             ],
    )
gtest_env.AddNodeToTestSuite(node, ['small_tests'],
    'run_gio_test')

gio_test_exe = gtest_env.ComponentProgram(
    'gio_pio_test',
    ['gio_pio_test.cc'],
    EXTRA_LIBS=['gio', 'platform', 'gio_test'])

# temp file will be removed by gio_pio_test (if it compiles and completes).
temppath = tempfile.NamedTemporaryFile(prefix="gio_pio", suffix=".tmp").name
node = gtest_env.CommandTest(
    'gio_pio_test_output.xml.out',
    command=[gio_test_exe,
             '--gtest_output=xml:${TARGET}',
             '-t', temppath,
   # Note: to regenerate the premade_text/binary_file, use "make_premade.py"
             '-x', env.File('premade_text_file'),
             '-b', env.File('premade_binary_file'),
             ],
    )
gtest_env.AddNodeToTestSuite(node, ['small_tests'],
    'run_gio_pio_test')
