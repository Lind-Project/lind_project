#!/bin/bash
LIND_ROOT=/home/lind/lind_project

if [[ $1 == --help ]]; then 
  echo "List of commands";
  echo "[help/h]: show this help message"
  echo "[cd/chdir]: Change working directory of the lind prompt"
  echo "[ls/list]: List contents of working directory of the lind prompt"
  echo "[compile/cc/gcc]: Compile lind/nexe file"
  echo "[cp/copy]: Copy file from posix file system into lind file system"
  echo "[r/run/exec/execute]: Execute nexe file within lind file system"
  echo "[exit/quit]: leave lind prompt"
fi;

while true; do 
  read -r -p "[$PWD] lind> " command
  myarr=( $command )
  case "${myarr[0]}" in
    "help"|[hH])
      [[ ${myarr[1]} == cp ]] && echo "syntax: \"cp hostpath lindpath\" copies file at hostpath on the host system to lindpath in the lind file system." && continue;
      echo "List of commands";
      echo "[help/h]: show this help message"
      echo "[cd/chdir]: Change working directory of the lind prompt"
      echo "[ls/list]: List contents of working directory of the lind prompt"
      echo "[compile/cc/gcc]: Compile lind/nexe file"
      echo "[cp/copy]: Copy file from posix file system into lind file system for information on the syntax of this command, type \"help cp\""
      echo "[r/run/exec/execute]: Execute nexe file within lind file system"
      echo "[exit/quit]: leave lind prompt"
      ;;
    "compile"|"cc"|"gcc")
      $LIND_ROOT/lind/lindenv/sdk/toolchain/linux_x86_glibc/bin/x86_64-nacl-gcc "${myarr[@]:1}";
      ;;
    "cp"|"copy")
      lindfs cp "${myarr[@]:1}";
      ;;
    "r"|"run"|"exec"|"execute")
      if [[ "" == ${myarr[1]} ]];
          then echo "Specify a file in the lind file system to execute";
          exit;
      fi
      if [[ ${myarr[1]} != *.nexe ]];
          then read -r -p "File is not an nexe file. Try to run anyway? [y/N]" response
          case "$response" in
              [yY][eE][sS]|[yY])
                  lind ${myarr[@]:1};
                  continue;
                  ;;
              *)
                  continue;
                  ;;
          esac;
      fi
      lind ${myarr[@]:1};
      ;;
    exit|quit)
      exit
      ;;
    *)
      if result=$(eval ${myarr[@]}); then
        printf "$result\n"
      else
        echo "Command not found. Try help for information about commands"
        continue
      fi
  esac;
done;
