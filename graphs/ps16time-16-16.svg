<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>affinity__set (1 samples, 0.10%)</title><rect x="12.4" y="437" width="1.1" height="15.0" fill="rgb(243,218,22)" rx="2" ry="2" />
<text  x="15.36" y="447.5" ></text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.10%)</title><rect x="114.9" y="229" width="1.2" height="15.0" fill="rgb(247,128,13)" rx="2" ry="2" />
<text  x="117.92" y="239.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.10%)</title><rect x="404.9" y="213" width="1.2" height="15.0" fill="rgb(232,60,17)" rx="2" ry="2" />
<text  x="407.91" y="223.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (23 samples, 2.30%)</title><rect x="803.3" y="373" width="27.2" height="15.0" fill="rgb(210,52,37)" rx="2" ry="2" />
<text  x="806.35" y="383.5" >c..</text>
</g>
<g >
<title>trace_event_buffer_lock_reserve (1 samples, 0.10%)</title><rect x="1177.0" y="181" width="1.2" height="15.0" fill="rgb(230,126,47)" rx="2" ry="2" />
<text  x="1180.03" y="191.5" ></text>
</g>
<g >
<title>swapper (216 samples, 21.58%)</title><rect x="590.0" y="517" width="254.6" height="15.0" fill="rgb(251,188,35)" rx="2" ry="2" />
<text  x="592.98" y="527.5" >swapper</text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.10%)</title><rect x="844.6" y="373" width="1.2" height="15.0" fill="rgb(248,162,9)" rx="2" ry="2" />
<text  x="847.61" y="383.5" ></text>
</g>
<g >
<title>new_sync_read (376 samples, 37.56%)</title><rect x="145.6" y="341" width="443.2" height="15.0" fill="rgb(208,53,37)" rx="2" ry="2" />
<text  x="148.56" y="351.5" >new_sync_read</text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.10%)</title><rect x="145.6" y="325" width="1.1" height="15.0" fill="rgb(229,106,23)" rx="2" ry="2" />
<text  x="148.56" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.10%)</title><rect x="844.6" y="405" width="1.2" height="15.0" fill="rgb(225,67,38)" rx="2" ry="2" />
<text  x="847.61" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (28 samples, 2.80%)</title><rect x="110.2" y="389" width="33.0" height="15.0" fill="rgb(219,154,3)" rx="2" ry="2" />
<text  x="113.20" y="399.5" >do..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="12.4" y="405" width="1.1" height="15.0" fill="rgb(244,22,34)" rx="2" ry="2" />
<text  x="15.36" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="107.8" y="437" width="1.2" height="15.0" fill="rgb(236,62,25)" rx="2" ry="2" />
<text  x="110.84" y="447.5" ></text>
</g>
<g >
<title>generic_exec_single (79 samples, 7.89%)</title><rect x="13.5" y="261" width="93.2" height="15.0" fill="rgb(244,97,7)" rx="2" ry="2" />
<text  x="16.54" y="271.5" >generic_exe..</text>
</g>
<g >
<title>__mutex_lock_slowpath (105 samples, 10.49%)</title><rect x="1046.2" y="293" width="123.8" height="15.0" fill="rgb(233,46,19)" rx="2" ry="2" />
<text  x="1049.18" y="303.5" >__mutex_lock_sl..</text>
</g>
<g >
<title>set_next_task_idle (1 samples, 0.10%)</title><rect x="584.1" y="245" width="1.2" height="15.0" fill="rgb(207,88,3)" rx="2" ry="2" />
<text  x="587.09" y="255.5" ></text>
</g>
<g >
<title>schedule_idle (10 samples, 1.00%)</title><rect x="830.5" y="373" width="11.7" height="15.0" fill="rgb(227,213,4)" rx="2" ry="2" />
<text  x="833.46" y="383.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.10%)</title><rect x="581.7" y="213" width="1.2" height="15.0" fill="rgb(223,1,49)" rx="2" ry="2" />
<text  x="584.73" y="223.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.20%)</title><rect x="1187.6" y="373" width="2.4" height="15.0" fill="rgb(206,62,42)" rx="2" ry="2" />
<text  x="1190.64" y="383.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (25 samples, 2.50%)</title><rect x="419.1" y="181" width="29.4" height="15.0" fill="rgb(232,217,54)" rx="2" ry="2" />
<text  x="422.05" y="191.5" >__..</text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (1 samples, 0.10%)</title><rect x="125.5" y="181" width="1.2" height="15.0" fill="rgb(234,2,52)" rx="2" ry="2" />
<text  x="128.52" y="191.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.10%)</title><rect x="822.2" y="325" width="1.2" height="15.0" fill="rgb(223,14,18)" rx="2" ry="2" />
<text  x="825.21" y="335.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.10%)</title><rect x="1184.1" y="261" width="1.2" height="15.0" fill="rgb(213,73,49)" rx="2" ry="2" />
<text  x="1187.11" y="271.5" ></text>
</g>
<g >
<title>_start (407 samples, 40.66%)</title><rect x="110.2" y="501" width="479.8" height="15.0" fill="rgb(236,211,43)" rx="2" ry="2" />
<text  x="113.20" y="511.5" >_start</text>
</g>
<g >
<title>free_pcppages_bulk (10 samples, 1.00%)</title><rect x="205.7" y="245" width="11.8" height="15.0" fill="rgb(215,92,43)" rx="2" ry="2" />
<text  x="208.68" y="255.5" ></text>
</g>
<g >
<title>mutex_spin_on_owner (104 samples, 10.39%)</title><rect x="1047.4" y="261" width="122.6" height="15.0" fill="rgb(248,100,34)" rx="2" ry="2" />
<text  x="1050.36" y="271.5" >mutex_spin_on_o..</text>
</g>
<g >
<title>execute_command (1 samples, 0.10%)</title><rect x="10.0" y="421" width="1.2" height="15.0" fill="rgb(211,0,42)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.10%)</title><rect x="107.8" y="245" width="1.2" height="15.0" fill="rgb(248,36,40)" rx="2" ry="2" />
<text  x="110.84" y="255.5" ></text>
</g>
<g >
<title>_perf_event_enable (79 samples, 7.89%)</title><rect x="13.5" y="309" width="93.2" height="15.0" fill="rgb(228,137,29)" rx="2" ry="2" />
<text  x="16.54" y="319.5" >_perf_event..</text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.10%)</title><rect x="10.0" y="485" width="1.2" height="15.0" fill="rgb(233,5,22)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (5 samples, 0.50%)</title><rect x="133.8" y="149" width="5.9" height="15.0" fill="rgb(246,50,42)" rx="2" ry="2" />
<text  x="136.78" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.10%)</title><rect x="10.0" y="469" width="1.2" height="15.0" fill="rgb(207,31,17)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (79 samples, 7.89%)</title><rect x="13.5" y="325" width="93.2" height="15.0" fill="rgb(242,11,27)" rx="2" ry="2" />
<text  x="16.54" y="335.5" >perf_event_..</text>
</g>
<g >
<title>pick_next_task (1 samples, 0.10%)</title><rect x="1184.1" y="277" width="1.2" height="15.0" fill="rgb(227,79,34)" rx="2" ry="2" />
<text  x="1187.11" y="287.5" ></text>
</g>
<g >
<title>rcu_dynticks_inc (2 samples, 0.20%)</title><rect x="784.5" y="357" width="2.3" height="15.0" fill="rgb(223,38,4)" rx="2" ry="2" />
<text  x="787.49" y="367.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.10%)</title><rect x="107.8" y="229" width="1.2" height="15.0" fill="rgb(252,127,45)" rx="2" ry="2" />
<text  x="110.84" y="239.5" ></text>
</g>
<g >
<title>resched_curr (1 samples, 0.10%)</title><rect x="107.8" y="181" width="1.2" height="15.0" fill="rgb(208,182,48)" rx="2" ry="2" />
<text  x="110.84" y="191.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (3 samples, 0.30%)</title><rect x="1180.6" y="277" width="3.5" height="15.0" fill="rgb(237,130,6)" rx="2" ry="2" />
<text  x="1183.57" y="287.5" ></text>
</g>
<g >
<title>cpu_startup_entry (164 samples, 16.38%)</title><rect x="608.8" y="469" width="193.4" height="15.0" fill="rgb(209,64,6)" rx="2" ry="2" />
<text  x="611.84" y="479.5" >cpu_startup_entry</text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.10%)</title><rect x="988.4" y="149" width="1.2" height="15.0" fill="rgb(208,8,1)" rx="2" ry="2" />
<text  x="991.42" y="159.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.10%)</title><rect x="587.6" y="261" width="1.2" height="15.0" fill="rgb(238,97,16)" rx="2" ry="2" />
<text  x="590.62" y="271.5" ></text>
</g>
<g >
<title>ring_buffer_lock_reserve (1 samples, 0.10%)</title><rect x="1177.0" y="165" width="1.2" height="15.0" fill="rgb(246,203,11)" rx="2" ry="2" />
<text  x="1180.03" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 7.99%)</title><rect x="13.5" y="389" width="94.3" height="15.0" fill="rgb(233,13,33)" rx="2" ry="2" />
<text  x="16.54" y="399.5" >do_syscall_64</text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.10%)</title><rect x="791.6" y="405" width="1.1" height="15.0" fill="rgb(235,189,42)" rx="2" ry="2" />
<text  x="794.56" y="415.5" ></text>
</g>
<g >
<title>rmqueue (4 samples, 0.40%)</title><rect x="503.9" y="133" width="4.7" height="15.0" fill="rgb(231,96,47)" rx="2" ry="2" />
<text  x="506.93" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.10%)</title><rect x="397.8" y="197" width="1.2" height="15.0" fill="rgb(220,168,13)" rx="2" ry="2" />
<text  x="400.83" y="207.5" ></text>
</g>
<g >
<title>write (288 samples, 28.77%)</title><rect x="850.5" y="437" width="339.5" height="15.0" fill="rgb(218,146,29)" rx="2" ry="2" />
<text  x="853.50" y="447.5" >write</text>
</g>
<g >
<title>[bash] (1 samples, 0.10%)</title><rect x="10.0" y="389" width="1.2" height="15.0" fill="rgb(205,187,47)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>rmqueue (16 samples, 1.60%)</title><rect x="981.3" y="261" width="18.9" height="15.0" fill="rgb(235,210,1)" rx="2" ry="2" />
<text  x="984.35" y="271.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.10%)</title><rect x="10.0" y="165" width="1.2" height="15.0" fill="rgb(254,227,17)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>__libc_start_main (292 samples, 29.17%)</title><rect x="845.8" y="485" width="344.2" height="15.0" fill="rgb(228,207,19)" rx="2" ry="2" />
<text  x="848.78" y="495.5" >__libc_start_main</text>
</g>
<g >
<title>__next_zones_zonelist (2 samples, 0.20%)</title><rect x="923.6" y="277" width="2.3" height="15.0" fill="rgb(231,128,53)" rx="2" ry="2" />
<text  x="926.59" y="287.5" ></text>
</g>
<g >
<title>charge_memcg (17 samples, 1.70%)</title><rect x="420.2" y="165" width="20.1" height="15.0" fill="rgb(222,60,35)" rx="2" ry="2" />
<text  x="423.23" y="175.5" ></text>
</g>
<g >
<title>page_remove_rmap (6 samples, 0.60%)</title><rect x="116.1" y="229" width="7.1" height="15.0" fill="rgb(254,37,7)" rx="2" ry="2" />
<text  x="119.09" y="239.5" ></text>
</g>
<g >
<title>get_page_from_freelist (41 samples, 4.10%)</title><rect x="460.3" y="149" width="48.3" height="15.0" fill="rgb(228,203,10)" rx="2" ry="2" />
<text  x="463.31" y="159.5" >get_..</text>
</g>
<g >
<title>rmqueue_bulk (9 samples, 0.90%)</title><rect x="989.6" y="245" width="10.6" height="15.0" fill="rgb(218,166,35)" rx="2" ry="2" />
<text  x="992.60" y="255.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.10%)</title><rect x="416.7" y="197" width="1.2" height="15.0" fill="rgb(207,3,18)" rx="2" ry="2" />
<text  x="419.69" y="207.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.10%)</title><rect x="786.8" y="405" width="1.2" height="15.0" fill="rgb(239,117,11)" rx="2" ry="2" />
<text  x="789.84" y="415.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="10.0" y="245" width="1.2" height="15.0" fill="rgb(220,50,6)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>autoremove_wake_function (16 samples, 1.60%)</title><rect x="867.0" y="261" width="18.9" height="15.0" fill="rgb(214,63,44)" rx="2" ry="2" />
<text  x="870.00" y="271.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.10%)</title><rect x="109.0" y="389" width="1.2" height="15.0" fill="rgb(247,71,33)" rx="2" ry="2" />
<text  x="112.02" y="399.5" ></text>
</g>
<g >
<title>event_function_call (79 samples, 7.89%)</title><rect x="13.5" y="293" width="93.2" height="15.0" fill="rgb(216,145,27)" rx="2" ry="2" />
<text  x="16.54" y="303.5" >event_funct..</text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.10%)</title><rect x="109.0" y="325" width="1.2" height="15.0" fill="rgb(248,132,13)" rx="2" ry="2" />
<text  x="112.02" y="335.5" ></text>
</g>
<g >
<title>mutex_lock (106 samples, 10.59%)</title><rect x="1045.0" y="309" width="125.0" height="15.0" fill="rgb(248,75,44)" rx="2" ry="2" />
<text  x="1048.00" y="319.5" >mutex_lock</text>
</g>
<g >
<title>try_charge_memcg (6 samples, 0.60%)</title><rect x="433.2" y="149" width="7.1" height="15.0" fill="rgb(231,195,51)" rx="2" ry="2" />
<text  x="436.20" y="159.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.10%)</title><rect x="607.7" y="389" width="1.1" height="15.0" fill="rgb(242,217,6)" rx="2" ry="2" />
<text  x="610.66" y="399.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.20%)</title><rect x="580.5" y="261" width="2.4" height="15.0" fill="rgb(221,76,33)" rx="2" ry="2" />
<text  x="583.55" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages (47 samples, 4.70%)</title><rect x="454.4" y="165" width="55.4" height="15.0" fill="rgb(239,45,53)" rx="2" ry="2" />
<text  x="457.42" y="175.5" >__all..</text>
</g>
<g >
<title>trace_event_buffer_lock_reserve (1 samples, 0.10%)</title><rect x="177.4" y="133" width="1.2" height="15.0" fill="rgb(207,48,8)" rx="2" ry="2" />
<text  x="180.39" y="143.5" ></text>
</g>
<g >
<title>cfree (28 samples, 2.80%)</title><rect x="110.2" y="437" width="33.0" height="15.0" fill="rgb(232,168,17)" rx="2" ry="2" />
<text  x="113.20" y="447.5" >cf..</text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.10%)</title><rect x="109.0" y="197" width="1.2" height="15.0" fill="rgb(249,53,4)" rx="2" ry="2" />
<text  x="112.02" y="207.5" ></text>
</g>
<g >
<title>__munmap (28 samples, 2.80%)</title><rect x="110.2" y="421" width="33.0" height="15.0" fill="rgb(217,128,45)" rx="2" ry="2" />
<text  x="113.20" y="431.5" >__..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (1 samples, 0.10%)</title><rect x="11.2" y="373" width="1.2" height="15.0" fill="rgb(210,97,8)" rx="2" ry="2" />
<text  x="14.18" y="383.5" ></text>
</g>
<g >
<title>dequeue_task (6 samples, 0.60%)</title><rect x="1173.5" y="277" width="7.1" height="15.0" fill="rgb(224,66,25)" rx="2" ry="2" />
<text  x="1176.50" y="287.5" ></text>
</g>
<g >
<title>evlist_cpu_iterator__next (1 samples, 0.10%)</title><rect x="12.4" y="453" width="1.1" height="15.0" fill="rgb(232,86,40)" rx="2" ry="2" />
<text  x="15.36" y="463.5" ></text>
</g>
<g >
<title>_perf_ioctl (79 samples, 7.89%)</title><rect x="13.5" y="341" width="93.2" height="15.0" fill="rgb(211,66,46)" rx="2" ry="2" />
<text  x="16.54" y="351.5" >_perf_ioctl</text>
</g>
<g >
<title>_nohz_idle_balance.constprop.0.isra.0 (2 samples, 0.20%)</title><rect x="790.4" y="421" width="2.3" height="15.0" fill="rgb(245,186,24)" rx="2" ry="2" />
<text  x="793.38" y="431.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.10%)</title><rect x="109.0" y="117" width="1.2" height="15.0" fill="rgb(228,213,14)" rx="2" ry="2" />
<text  x="112.02" y="127.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (1 samples, 0.10%)</title><rect x="11.2" y="469" width="1.2" height="15.0" fill="rgb(251,117,21)" rx="2" ry="2" />
<text  x="14.18" y="479.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.10%)</title><rect x="526.3" y="117" width="1.2" height="15.0" fill="rgb(226,2,35)" rx="2" ry="2" />
<text  x="529.32" y="127.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.10%)</title><rect x="215.1" y="213" width="1.2" height="15.0" fill="rgb(240,58,24)" rx="2" ry="2" />
<text  x="218.11" y="223.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.10%)</title><rect x="10.0" y="213" width="1.2" height="15.0" fill="rgb(212,185,8)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>select_idle_sibling (2 samples, 0.20%)</title><rect x="160.9" y="197" width="2.3" height="15.0" fill="rgb(253,169,50)" rx="2" ry="2" />
<text  x="163.89" y="207.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.10%)</title><rect x="216.3" y="229" width="1.2" height="15.0" fill="rgb(237,53,53)" rx="2" ry="2" />
<text  x="219.29" y="239.5" ></text>
</g>
<g >
<title>copy_page_from_iter (2 samples, 0.20%)</title><rect x="1002.6" y="309" width="2.3" height="15.0" fill="rgb(235,81,32)" rx="2" ry="2" />
<text  x="1005.57" y="319.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.10%)</title><rect x="109.0" y="213" width="1.2" height="15.0" fill="rgb(237,84,35)" rx="2" ry="2" />
<text  x="112.02" y="223.5" ></text>
</g>
<g >
<title>pick_next_task (3 samples, 0.30%)</title><rect x="831.6" y="341" width="3.6" height="15.0" fill="rgb(207,9,43)" rx="2" ry="2" />
<text  x="834.64" y="351.5" ></text>
</g>
<g >
<title>zap_pte_range (27 samples, 2.70%)</title><rect x="111.4" y="245" width="31.8" height="15.0" fill="rgb(229,174,30)" rx="2" ry="2" />
<text  x="114.38" y="255.5" >za..</text>
</g>
<g >
<title>error_entry (1 samples, 0.10%)</title><rect x="588.8" y="421" width="1.2" height="15.0" fill="rgb(254,137,20)" rx="2" ry="2" />
<text  x="591.80" y="431.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (7 samples, 0.70%)</title><rect x="131.4" y="165" width="8.3" height="15.0" fill="rgb(243,133,31)" rx="2" ry="2" />
<text  x="134.42" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.10%)</title><rect x="397.8" y="165" width="1.2" height="15.0" fill="rgb(241,98,19)" rx="2" ry="2" />
<text  x="400.83" y="175.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.10%)</title><rect x="607.7" y="437" width="1.1" height="15.0" fill="rgb(253,106,50)" rx="2" ry="2" />
<text  x="610.66" y="447.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.10%)</title><rect x="788.0" y="389" width="1.2" height="15.0" fill="rgb(207,83,31)" rx="2" ry="2" />
<text  x="791.02" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (282 samples, 28.17%)</title><rect x="857.6" y="421" width="332.4" height="15.0" fill="rgb(244,165,47)" rx="2" ry="2" />
<text  x="860.57" y="431.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>iterate_groups (1 samples, 0.10%)</title><rect x="585.3" y="261" width="1.1" height="15.0" fill="rgb(243,116,40)" rx="2" ry="2" />
<text  x="588.26" y="271.5" ></text>
</g>
<g >
<title>psi_task_change (5 samples, 0.50%)</title><rect x="171.5" y="181" width="5.9" height="15.0" fill="rgb(208,188,18)" rx="2" ry="2" />
<text  x="174.50" y="191.5" ></text>
</g>
<g >
<title>tick_nohz_irq_exit (1 samples, 0.10%)</title><rect x="611.2" y="341" width="1.2" height="15.0" fill="rgb(220,17,17)" rx="2" ry="2" />
<text  x="614.20" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (73 samples, 7.29%)</title><rect x="20.6" y="149" width="86.1" height="15.0" fill="rgb(215,214,41)" rx="2" ry="2" />
<text  x="23.61" y="159.5" >native_wri..</text>
</g>
<g >
<title>__entry_text_start (1 samples, 0.10%)</title><rect x="850.5" y="421" width="1.2" height="15.0" fill="rgb(246,60,43)" rx="2" ry="2" />
<text  x="853.50" y="431.5" ></text>
</g>
<g >
<title>make_child (1 samples, 0.10%)</title><rect x="10.0" y="341" width="1.2" height="15.0" fill="rgb(212,14,51)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.10%)</title><rect x="988.4" y="181" width="1.2" height="15.0" fill="rgb(221,92,46)" rx="2" ry="2" />
<text  x="991.42" y="191.5" ></text>
</g>
<g >
<title>cpuidle_select (2 samples, 0.20%)</title><rect x="788.0" y="421" width="2.4" height="15.0" fill="rgb(252,146,19)" rx="2" ry="2" />
<text  x="791.02" y="431.5" ></text>
</g>
<g >
<title>rest_init (36 samples, 3.60%)</title><rect x="802.2" y="421" width="42.4" height="15.0" fill="rgb(230,56,23)" rx="2" ry="2" />
<text  x="805.17" y="431.5" >res..</text>
</g>
<g >
<title>__next_zones_zonelist (2 samples, 0.20%)</title><rect x="458.0" y="149" width="2.3" height="15.0" fill="rgb(231,214,46)" rx="2" ry="2" />
<text  x="460.95" y="159.5" ></text>
</g>
<g >
<title>exc_page_fault (130 samples, 12.99%)</title><rect x="399.0" y="277" width="153.3" height="15.0" fill="rgb(225,97,41)" rx="2" ry="2" />
<text  x="402.01" y="287.5" >exc_page_fault</text>
</g>
<g >
<title>tick_nohz_idle_got_tick (1 samples, 0.10%)</title><rect x="823.4" y="325" width="1.2" height="15.0" fill="rgb(235,37,34)" rx="2" ry="2" />
<text  x="826.39" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 7.99%)</title><rect x="13.5" y="405" width="94.3" height="15.0" fill="rgb(209,110,28)" rx="2" ry="2" />
<text  x="16.54" y="415.5" >entry_SYSCA..</text>
</g>
<g >
<title>schedule (6 samples, 0.60%)</title><rect x="580.5" y="309" width="7.1" height="15.0" fill="rgb(252,164,15)" rx="2" ry="2" />
<text  x="583.55" y="319.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.10%)</title><rect x="196.3" y="245" width="1.1" height="15.0" fill="rgb(229,184,47)" rx="2" ry="2" />
<text  x="199.25" y="255.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.10%)</title><rect x="607.7" y="293" width="1.1" height="15.0" fill="rgb(245,120,40)" rx="2" ry="2" />
<text  x="610.66" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="607.7" y="485" width="1.1" height="15.0" fill="rgb(208,140,25)" rx="2" ry="2" />
<text  x="610.66" y="495.5" ></text>
</g>
<g >
<title>vm_area_alloc (1 samples, 0.10%)</title><rect x="11.2" y="325" width="1.2" height="15.0" fill="rgb(232,172,25)" rx="2" ry="2" />
<text  x="14.18" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.10%)</title><rect x="109.0" y="69" width="1.2" height="15.0" fill="rgb(239,45,20)" rx="2" ry="2" />
<text  x="112.02" y="79.5" ></text>
</g>
<g >
<title>pud_val (1 samples, 0.10%)</title><rect x="548.7" y="229" width="1.2" height="15.0" fill="rgb(228,124,23)" rx="2" ry="2" />
<text  x="551.72" y="239.5" ></text>
</g>
<g >
<title>default_wake_function (16 samples, 1.60%)</title><rect x="867.0" y="245" width="18.9" height="15.0" fill="rgb(234,122,42)" rx="2" ry="2" />
<text  x="870.00" y="255.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (16 samples, 1.60%)</title><rect x="512.2" y="181" width="18.8" height="15.0" fill="rgb(218,17,46)" rx="2" ry="2" />
<text  x="515.18" y="191.5" ></text>
</g>
<g >
<title>cpus_share_cache (2 samples, 0.20%)</title><rect x="160.9" y="181" width="2.3" height="15.0" fill="rgb(213,0,9)" rx="2" ry="2" />
<text  x="163.89" y="191.5" ></text>
</g>
<g >
<title>cpuidle_select (5 samples, 0.50%)</title><rect x="824.6" y="357" width="5.9" height="15.0" fill="rgb(226,195,17)" rx="2" ry="2" />
<text  x="827.57" y="367.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.10%)</title><rect x="125.5" y="165" width="1.2" height="15.0" fill="rgb(213,6,45)" rx="2" ry="2" />
<text  x="128.52" y="175.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.10%)</title><rect x="456.8" y="149" width="1.2" height="15.0" fill="rgb(207,196,19)" rx="2" ry="2" />
<text  x="459.77" y="159.5" ></text>
</g>
<g >
<title>uncharge_batch (5 samples, 0.50%)</title><rect x="190.4" y="261" width="5.9" height="15.0" fill="rgb(214,154,38)" rx="2" ry="2" />
<text  x="193.36" y="271.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (1 samples, 0.10%)</title><rect x="604.1" y="501" width="1.2" height="15.0" fill="rgb(247,199,10)" rx="2" ry="2" />
<text  x="607.13" y="511.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.20%)</title><rect x="535.8" y="149" width="2.3" height="15.0" fill="rgb(206,119,22)" rx="2" ry="2" />
<text  x="538.75" y="159.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.20%)</title><rect x="1185.3" y="261" width="2.3" height="15.0" fill="rgb(227,13,18)" rx="2" ry="2" />
<text  x="1188.28" y="271.5" ></text>
</g>
<g >
<title>profile_tick (1 samples, 0.10%)</title><rect x="397.8" y="149" width="1.2" height="15.0" fill="rgb(216,117,20)" rx="2" ry="2" />
<text  x="400.83" y="159.5" ></text>
</g>
<g >
<title>pick_next_entity (1 samples, 0.10%)</title><rect x="796.3" y="373" width="1.2" height="15.0" fill="rgb(249,113,13)" rx="2" ry="2" />
<text  x="799.27" y="383.5" ></text>
</g>
<g >
<title>__mutex_lock_slowpath (20 samples, 2.00%)</title><rect x="553.4" y="293" width="23.6" height="15.0" fill="rgb(220,145,42)" rx="2" ry="2" />
<text  x="556.44" y="303.5" >_..</text>
</g>
<g >
<title>pick_next_task (3 samples, 0.30%)</title><rect x="795.1" y="405" width="3.5" height="15.0" fill="rgb(216,26,54)" rx="2" ry="2" />
<text  x="798.09" y="415.5" ></text>
</g>
<g >
<title>__perf_event_enable (78 samples, 7.79%)</title><rect x="14.7" y="213" width="92.0" height="15.0" fill="rgb(237,128,53)" rx="2" ry="2" />
<text  x="17.72" y="223.5" >__perf_eve..</text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.10%)</title><rect x="127.9" y="165" width="1.2" height="15.0" fill="rgb(243,163,2)" rx="2" ry="2" />
<text  x="130.88" y="175.5" ></text>
</g>
<g >
<title>menu_select (5 samples, 0.50%)</title><rect x="824.6" y="341" width="5.9" height="15.0" fill="rgb(225,208,29)" rx="2" ry="2" />
<text  x="827.57" y="351.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (11 samples, 1.10%)</title><rect x="204.5" y="261" width="13.0" height="15.0" fill="rgb(233,98,38)" rx="2" ry="2" />
<text  x="207.51" y="271.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.10%)</title><rect x="789.2" y="389" width="1.2" height="15.0" fill="rgb(222,107,17)" rx="2" ry="2" />
<text  x="792.20" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (28 samples, 2.80%)</title><rect x="110.2" y="373" width="33.0" height="15.0" fill="rgb(211,63,21)" rx="2" ry="2" />
<text  x="113.20" y="383.5" >__..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.10%)</title><rect x="534.6" y="133" width="1.2" height="15.0" fill="rgb(254,208,54)" rx="2" ry="2" />
<text  x="537.58" y="143.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (2 samples, 0.20%)</title><rect x="118.5" y="165" width="2.3" height="15.0" fill="rgb(245,207,42)" rx="2" ry="2" />
<text  x="121.45" y="175.5" ></text>
</g>
<g >
<title>select_idle_sibling (2 samples, 0.20%)</title><rect x="869.4" y="197" width="2.3" height="15.0" fill="rgb(214,31,48)" rx="2" ry="2" />
<text  x="872.36" y="207.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.10%)</title><rect x="10.0" y="373" width="1.2" height="15.0" fill="rgb(230,225,11)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>free_swap_cache (3 samples, 0.30%)</title><rect x="139.7" y="213" width="3.5" height="15.0" fill="rgb(250,149,48)" rx="2" ry="2" />
<text  x="142.67" y="223.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.20%)</title><rect x="580.5" y="245" width="2.4" height="15.0" fill="rgb(213,207,17)" rx="2" ry="2" />
<text  x="583.55" y="255.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 0.10%)</title><rect x="10.0" y="325" width="1.2" height="15.0" fill="rgb(232,151,29)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>pick_next_task (2 samples, 0.20%)</title><rect x="582.9" y="277" width="2.4" height="15.0" fill="rgb(225,108,44)" rx="2" ry="2" />
<text  x="585.91" y="287.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2 samples, 0.20%)</title><rect x="1187.6" y="389" width="2.4" height="15.0" fill="rgb(214,142,30)" rx="2" ry="2" />
<text  x="1190.64" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.10%)</title><rect x="159.7" y="213" width="1.2" height="15.0" fill="rgb(213,95,22)" rx="2" ry="2" />
<text  x="162.71" y="223.5" ></text>
</g>
<g >
<title>dequeue_entity (5 samples, 0.50%)</title><rect x="1174.7" y="245" width="5.9" height="15.0" fill="rgb(244,58,3)" rx="2" ry="2" />
<text  x="1177.68" y="255.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.10%)</title><rect x="605.3" y="501" width="1.2" height="15.0" fill="rgb(210,108,45)" rx="2" ry="2" />
<text  x="608.30" y="511.5" ></text>
</g>
<g >
<title>__wake_up_common (18 samples, 1.80%)</title><rect x="864.6" y="277" width="21.3" height="15.0" fill="rgb(248,16,42)" rx="2" ry="2" />
<text  x="867.65" y="287.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.10%)</title><rect x="109.0" y="37" width="1.2" height="15.0" fill="rgb(224,115,37)" rx="2" ry="2" />
<text  x="112.02" y="47.5" ></text>
</g>
<g >
<title>__x64_sys_read (376 samples, 37.56%)</title><rect x="145.6" y="389" width="443.2" height="15.0" fill="rgb(238,36,43)" rx="2" ry="2" />
<text  x="148.56" y="399.5" >__x64_sys_read</text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.10%)</title><rect x="109.0" y="245" width="1.2" height="15.0" fill="rgb(253,151,32)" rx="2" ry="2" />
<text  x="112.02" y="255.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.20%)</title><rect x="610.0" y="357" width="2.4" height="15.0" fill="rgb(210,2,43)" rx="2" ry="2" />
<text  x="613.02" y="367.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.10%)</title><rect x="107.8" y="389" width="1.2" height="15.0" fill="rgb(214,39,4)" rx="2" ry="2" />
<text  x="110.84" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (1 samples, 0.10%)</title><rect x="12.4" y="373" width="1.1" height="15.0" fill="rgb(205,189,8)" rx="2" ry="2" />
<text  x="15.36" y="383.5" ></text>
</g>
<g >
<title>__free_one_page (3 samples, 0.30%)</title><rect x="136.1" y="133" width="3.6" height="15.0" fill="rgb(210,157,17)" rx="2" ry="2" />
<text  x="139.13" y="143.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="844.6" y="421" width="1.2" height="15.0" fill="rgb(243,62,13)" rx="2" ry="2" />
<text  x="847.61" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.10%)</title><rect x="107.8" y="405" width="1.2" height="15.0" fill="rgb(213,94,10)" rx="2" ry="2" />
<text  x="110.84" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28 samples, 2.80%)</title><rect x="110.2" y="405" width="33.0" height="15.0" fill="rgb(233,22,47)" rx="2" ry="2" />
<text  x="113.20" y="415.5" >en..</text>
</g>
<g >
<title>release_pages (14 samples, 1.40%)</title><rect x="123.2" y="197" width="16.5" height="15.0" fill="rgb(222,81,36)" rx="2" ry="2" />
<text  x="126.17" y="207.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.10%)</title><rect x="607.7" y="453" width="1.1" height="15.0" fill="rgb(243,166,39)" rx="2" ry="2" />
<text  x="610.66" y="463.5" ></text>
</g>
<g >
<title>psi_group_change (2 samples, 0.20%)</title><rect x="175.0" y="165" width="2.4" height="15.0" fill="rgb(253,225,28)" rx="2" ry="2" />
<text  x="178.03" y="175.5" ></text>
</g>
<g >
<title>menu_select (2 samples, 0.20%)</title><rect x="788.0" y="405" width="2.4" height="15.0" fill="rgb(237,16,26)" rx="2" ry="2" />
<text  x="791.02" y="415.5" ></text>
</g>
<g >
<title>free_unref_page_list (9 samples, 0.90%)</title><rect x="129.1" y="181" width="10.6" height="15.0" fill="rgb(207,121,41)" rx="2" ry="2" />
<text  x="132.06" y="191.5" ></text>
</g>
<g >
<title>anon_pipe_buf_release (29 samples, 2.90%)</title><rect x="183.3" y="309" width="34.2" height="15.0" fill="rgb(231,214,26)" rx="2" ry="2" />
<text  x="186.29" y="319.5" >an..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.10%)</title><rect x="10.0" y="261" width="1.2" height="15.0" fill="rgb(253,196,35)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>clear_page_erms (43 samples, 4.30%)</title><rect x="930.7" y="261" width="50.6" height="15.0" fill="rgb(207,200,0)" rx="2" ry="2" />
<text  x="933.66" y="271.5" >clear..</text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.10%)</title><rect x="882.3" y="181" width="1.2" height="15.0" fill="rgb(206,123,20)" rx="2" ry="2" />
<text  x="885.33" y="191.5" ></text>
</g>
<g >
<title>execve (1 samples, 0.10%)</title><rect x="11.2" y="437" width="1.2" height="15.0" fill="rgb(212,182,43)" rx="2" ry="2" />
<text  x="14.18" y="447.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3 samples, 0.30%)</title><rect x="117.3" y="181" width="3.5" height="15.0" fill="rgb(211,98,45)" rx="2" ry="2" />
<text  x="120.27" y="191.5" ></text>
</g>
<g >
<title>autoremove_wake_function (17 samples, 1.70%)</title><rect x="158.5" y="261" width="20.1" height="15.0" fill="rgb(224,43,22)" rx="2" ry="2" />
<text  x="161.53" y="271.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr_locked (1 samples, 0.10%)</title><rect x="12.4" y="325" width="1.1" height="15.0" fill="rgb(238,52,40)" rx="2" ry="2" />
<text  x="15.36" y="335.5" ></text>
</g>
<g >
<title>perf (83 samples, 8.29%)</title><rect x="12.4" y="517" width="97.8" height="15.0" fill="rgb(254,179,19)" rx="2" ry="2" />
<text  x="15.36" y="527.5" >perf</text>
</g>
<g >
<title>release_pages (1 samples, 0.10%)</title><rect x="110.2" y="277" width="1.2" height="15.0" fill="rgb(223,158,53)" rx="2" ry="2" />
<text  x="113.20" y="287.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.10%)</title><rect x="508.6" y="149" width="1.2" height="15.0" fill="rgb(248,187,4)" rx="2" ry="2" />
<text  x="511.64" y="159.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (18 samples, 1.80%)</title><rect x="902.4" y="277" width="21.2" height="15.0" fill="rgb(217,80,25)" rx="2" ry="2" />
<text  x="905.37" y="287.5" ></text>
</g>
<g >
<title>sched_setaffinity (1 samples, 0.10%)</title><rect x="12.4" y="421" width="1.1" height="15.0" fill="rgb(252,89,1)" rx="2" ry="2" />
<text  x="15.36" y="431.5" ></text>
</g>
<g >
<title>read (379 samples, 37.86%)</title><rect x="143.2" y="437" width="446.8" height="15.0" fill="rgb(230,138,52)" rx="2" ry="2" />
<text  x="146.21" y="447.5" >read</text>
</g>
<g >
<title>__mutex_lock.constprop.0 (20 samples, 2.00%)</title><rect x="553.4" y="277" width="23.6" height="15.0" fill="rgb(230,15,35)" rx="2" ry="2" />
<text  x="556.44" y="287.5" >_..</text>
</g>
<g >
<title>vfs_read (376 samples, 37.56%)</title><rect x="145.6" y="357" width="443.2" height="15.0" fill="rgb(220,74,4)" rx="2" ry="2" />
<text  x="148.56" y="367.5" >vfs_read</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="397.8" y="261" width="1.2" height="15.0" fill="rgb(206,11,50)" rx="2" ry="2" />
<text  x="400.83" y="271.5" ></text>
</g>
<g >
<title>__traceiter_sched_wakeup (1 samples, 0.10%)</title><rect x="177.4" y="181" width="1.2" height="15.0" fill="rgb(237,86,43)" rx="2" ry="2" />
<text  x="180.39" y="191.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.10%)</title><rect x="107.8" y="373" width="1.2" height="15.0" fill="rgb(245,146,22)" rx="2" ry="2" />
<text  x="110.84" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.20%)</title><rect x="414.3" y="197" width="2.4" height="15.0" fill="rgb(226,53,16)" rx="2" ry="2" />
<text  x="417.34" y="207.5" ></text>
</g>
<g >
<title>__schedule (10 samples, 1.00%)</title><rect x="830.5" y="357" width="11.7" height="15.0" fill="rgb(223,163,41)" rx="2" ry="2" />
<text  x="833.46" y="367.5" ></text>
</g>
<g >
<title>__switch_to_asm (1 samples, 0.10%)</title><rect x="606.5" y="501" width="1.2" height="15.0" fill="rgb(244,82,52)" rx="2" ry="2" />
<text  x="609.48" y="511.5" ></text>
</g>
<g >
<title>__free_one_page (3 samples, 0.30%)</title><rect x="212.8" y="229" width="3.5" height="15.0" fill="rgb(238,191,43)" rx="2" ry="2" />
<text  x="215.76" y="239.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="844.6" y="389" width="1.2" height="15.0" fill="rgb(246,136,0)" rx="2" ry="2" />
<text  x="847.61" y="399.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.10%)</title><rect x="11.2" y="309" width="1.2" height="15.0" fill="rgb(212,130,13)" rx="2" ry="2" />
<text  x="14.18" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.10%)</title><rect x="607.7" y="469" width="1.1" height="15.0" fill="rgb(216,175,39)" rx="2" ry="2" />
<text  x="610.66" y="479.5" ></text>
</g>
<g >
<title>enqueue_task_fair (7 samples, 0.70%)</title><rect x="871.7" y="181" width="8.3" height="15.0" fill="rgb(254,11,46)" rx="2" ry="2" />
<text  x="874.72" y="191.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.10%)</title><rect x="610.0" y="341" width="1.2" height="15.0" fill="rgb(252,29,18)" rx="2" ry="2" />
<text  x="613.02" y="351.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.10%)</title><rect x="538.1" y="165" width="1.2" height="15.0" fill="rgb(219,217,16)" rx="2" ry="2" />
<text  x="541.11" y="175.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.10%)</title><rect x="120.8" y="181" width="1.2" height="15.0" fill="rgb(232,187,17)" rx="2" ry="2" />
<text  x="123.81" y="191.5" ></text>
</g>
<g >
<title>update_curr (2 samples, 0.20%)</title><rect x="1175.9" y="229" width="2.3" height="15.0" fill="rgb(232,43,38)" rx="2" ry="2" />
<text  x="1178.85" y="239.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.10%)</title><rect x="107.8" y="261" width="1.2" height="15.0" fill="rgb(238,84,31)" rx="2" ry="2" />
<text  x="110.84" y="271.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (13 samples, 1.30%)</title><rect x="515.7" y="149" width="15.3" height="15.0" fill="rgb(214,11,38)" rx="2" ry="2" />
<text  x="518.71" y="159.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.10%)</title><rect x="527.5" y="117" width="1.2" height="15.0" fill="rgb(224,211,13)" rx="2" ry="2" />
<text  x="530.50" y="127.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (1 samples, 0.10%)</title><rect x="883.5" y="213" width="1.2" height="15.0" fill="rgb(229,172,49)" rx="2" ry="2" />
<text  x="886.51" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="12.4" y="389" width="1.1" height="15.0" fill="rgb(207,98,51)" rx="2" ry="2" />
<text  x="15.36" y="399.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.10%)</title><rect x="551.1" y="261" width="1.2" height="15.0" fill="rgb(251,136,48)" rx="2" ry="2" />
<text  x="554.08" y="271.5" ></text>
</g>
<g >
<title>p4d_offset (1 samples, 0.10%)</title><rect x="547.5" y="229" width="1.2" height="15.0" fill="rgb(213,190,39)" rx="2" ry="2" />
<text  x="550.54" y="239.5" ></text>
</g>
<g >
<title>__put_page (24 samples, 2.40%)</title><rect x="189.2" y="293" width="28.3" height="15.0" fill="rgb(215,22,9)" rx="2" ry="2" />
<text  x="192.18" y="303.5" >_..</text>
</g>
<g >
<title>x86_64_start_kernel (36 samples, 3.60%)</title><rect x="802.2" y="485" width="42.4" height="15.0" fill="rgb(208,199,50)" rx="2" ry="2" />
<text  x="805.17" y="495.5" >x86..</text>
</g>
<g >
<title>__handle_mm_fault (119 samples, 11.89%)</title><rect x="406.1" y="229" width="140.3" height="15.0" fill="rgb(222,124,24)" rx="2" ry="2" />
<text  x="409.08" y="239.5" >__handle_mm_fault</text>
</g>
<g >
<title>schedule (14 samples, 1.40%)</title><rect x="1171.1" y="309" width="16.5" height="15.0" fill="rgb(232,150,26)" rx="2" ry="2" />
<text  x="1174.14" y="319.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.10%)</title><rect x="844.6" y="501" width="1.2" height="15.0" fill="rgb(227,105,27)" rx="2" ry="2" />
<text  x="847.61" y="511.5" ></text>
</g>
<g >
<title>mutex_lock (20 samples, 2.00%)</title><rect x="553.4" y="309" width="23.6" height="15.0" fill="rgb(245,227,53)" rx="2" ry="2" />
<text  x="556.44" y="319.5" >m..</text>
</g>
<g >
<title>error_entry (1 samples, 0.10%)</title><rect x="552.3" y="309" width="1.1" height="15.0" fill="rgb(225,18,49)" rx="2" ry="2" />
<text  x="555.26" y="319.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.10%)</title><rect x="143.2" y="421" width="1.2" height="15.0" fill="rgb(205,140,28)" rx="2" ry="2" />
<text  x="146.21" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter (17 samples, 1.70%)</title><rect x="803.3" y="357" width="20.1" height="15.0" fill="rgb(207,21,1)" rx="2" ry="2" />
<text  x="806.35" y="367.5" ></text>
</g>
<g >
<title>psi_task_switch (4 samples, 0.40%)</title><rect x="836.4" y="341" width="4.7" height="15.0" fill="rgb(206,39,46)" rx="2" ry="2" />
<text  x="839.35" y="351.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.20%)</title><rect x="1185.3" y="245" width="2.3" height="15.0" fill="rgb(234,173,25)" rx="2" ry="2" />
<text  x="1188.28" y="255.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.10%)</title><rect x="109.0" y="181" width="1.2" height="15.0" fill="rgb(219,168,50)" rx="2" ry="2" />
<text  x="112.02" y="191.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 0.60%)</title><rect x="580.5" y="293" width="7.1" height="15.0" fill="rgb(218,220,10)" rx="2" ry="2" />
<text  x="583.55" y="303.5" ></text>
</g>
<g >
<title>record__mmap_read_all (1 samples, 0.10%)</title><rect x="109.0" y="469" width="1.2" height="15.0" fill="rgb(224,177,49)" rx="2" ry="2" />
<text  x="112.02" y="479.5" ></text>
</g>
<g >
<title>reader_loop (1 samples, 0.10%)</title><rect x="10.0" y="437" width="1.2" height="15.0" fill="rgb(239,197,10)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (2 samples, 0.20%)</title><rect x="790.4" y="437" width="2.3" height="15.0" fill="rgb(233,13,5)" rx="2" ry="2" />
<text  x="793.38" y="447.5" ></text>
</g>
<g >
<title>cpu_stop_queue_work (1 samples, 0.10%)</title><rect x="12.4" y="277" width="1.1" height="15.0" fill="rgb(222,102,7)" rx="2" ry="2" />
<text  x="15.36" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="10.0" y="277" width="1.2" height="15.0" fill="rgb(238,128,29)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (7 samples, 0.70%)</title><rect x="189.2" y="277" width="8.2" height="15.0" fill="rgb(249,80,38)" rx="2" ry="2" />
<text  x="192.18" y="287.5" ></text>
</g>
<g >
<title>clear_page_erms (33 samples, 3.30%)</title><rect x="465.0" y="133" width="38.9" height="15.0" fill="rgb(239,20,29)" rx="2" ry="2" />
<text  x="468.02" y="143.5" >cle..</text>
</g>
<g >
<title>record__pushfn (1 samples, 0.10%)</title><rect x="109.0" y="421" width="1.2" height="15.0" fill="rgb(206,212,39)" rx="2" ry="2" />
<text  x="112.02" y="431.5" ></text>
</g>
<g >
<title>cpu_startup_entry (36 samples, 3.60%)</title><rect x="802.2" y="405" width="42.4" height="15.0" fill="rgb(218,107,22)" rx="2" ry="2" />
<text  x="805.17" y="415.5" >cpu..</text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.10%)</title><rect x="107.8" y="325" width="1.2" height="15.0" fill="rgb(237,179,21)" rx="2" ry="2" />
<text  x="110.84" y="335.5" ></text>
</g>
<g >
<title>pmd_val (4 samples, 0.40%)</title><rect x="540.5" y="213" width="4.7" height="15.0" fill="rgb(245,151,27)" rx="2" ry="2" />
<text  x="543.47" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.10%)</title><rect x="397.8" y="213" width="1.2" height="15.0" fill="rgb(243,136,8)" rx="2" ry="2" />
<text  x="400.83" y="223.5" ></text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.10%)</title><rect x="107.8" y="197" width="1.2" height="15.0" fill="rgb(233,42,2)" rx="2" ry="2" />
<text  x="110.84" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="607.7" y="501" width="1.1" height="15.0" fill="rgb(228,219,36)" rx="2" ry="2" />
<text  x="610.66" y="511.5" ></text>
</g>
<g >
<title>perf_ioctl (80 samples, 7.99%)</title><rect x="13.5" y="357" width="94.3" height="15.0" fill="rgb(247,70,38)" rx="2" ry="2" />
<text  x="16.54" y="367.5" >perf_ioctl</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (146 samples, 14.59%)</title><rect x="612.4" y="389" width="172.1" height="15.0" fill="rgb(237,30,41)" rx="2" ry="2" />
<text  x="615.38" y="399.5" >mwait_idle_with_hints...</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.10%)</title><rect x="1170.0" y="293" width="1.1" height="15.0" fill="rgb(209,211,0)" rx="2" ry="2" />
<text  x="1172.96" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (377 samples, 37.66%)</title><rect x="144.4" y="421" width="444.4" height="15.0" fill="rgb(254,159,45)" rx="2" ry="2" />
<text  x="147.39" y="431.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__calc_delta (1 samples, 0.10%)</title><rect x="1175.9" y="213" width="1.1" height="15.0" fill="rgb(228,222,14)" rx="2" ry="2" />
<text  x="1178.85" y="223.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.10%)</title><rect x="12.4" y="261" width="1.1" height="15.0" fill="rgb(221,152,39)" rx="2" ry="2" />
<text  x="15.36" y="271.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (1 samples, 0.10%)</title><rect x="856.4" y="421" width="1.2" height="15.0" fill="rgb(247,130,10)" rx="2" ry="2" />
<text  x="859.39" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.10%)</title><rect x="801.0" y="453" width="1.2" height="15.0" fill="rgb(251,2,35)" rx="2" ry="2" />
<text  x="803.99" y="463.5" ></text>
</g>
<g >
<title>event_function (79 samples, 7.89%)</title><rect x="13.5" y="229" width="93.2" height="15.0" fill="rgb(226,115,15)" rx="2" ry="2" />
<text  x="16.54" y="239.5" >event_funct..</text>
</g>
<g >
<title>x86_pmu_enable (74 samples, 7.39%)</title><rect x="19.4" y="181" width="87.3" height="15.0" fill="rgb(253,209,36)" rx="2" ry="2" />
<text  x="22.43" y="191.5" >x86_pmu_en..</text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.10%)</title><rect x="534.6" y="149" width="1.2" height="15.0" fill="rgb(241,13,45)" rx="2" ry="2" />
<text  x="537.58" y="159.5" ></text>
</g>
<g >
<title>evlist__start_workload (1 samples, 0.10%)</title><rect x="107.8" y="469" width="1.2" height="15.0" fill="rgb(224,162,46)" rx="2" ry="2" />
<text  x="110.84" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.10%)</title><rect x="844.6" y="485" width="1.2" height="15.0" fill="rgb(247,87,41)" rx="2" ry="2" />
<text  x="847.61" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.20%)</title><rect x="610.0" y="373" width="2.4" height="15.0" fill="rgb(240,103,2)" rx="2" ry="2" />
<text  x="613.02" y="383.5" ></text>
</g>
<g >
<title>schedule_idle (6 samples, 0.60%)</title><rect x="792.7" y="437" width="7.1" height="15.0" fill="rgb(214,105,27)" rx="2" ry="2" />
<text  x="795.74" y="447.5" ></text>
</g>
<g >
<title>unmap_region (28 samples, 2.80%)</title><rect x="110.2" y="325" width="33.0" height="15.0" fill="rgb(250,23,19)" rx="2" ry="2" />
<text  x="113.20" y="335.5" >un..</text>
</g>
<g >
<title>reweight_entity (2 samples, 0.20%)</title><rect x="169.1" y="133" width="2.4" height="15.0" fill="rgb(218,139,6)" rx="2" ry="2" />
<text  x="172.14" y="143.5" ></text>
</g>
<g >
<title>finish_wait (2 samples, 0.20%)</title><rect x="1042.6" y="309" width="2.4" height="15.0" fill="rgb(224,191,39)" rx="2" ry="2" />
<text  x="1045.65" y="319.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (36 samples, 3.60%)</title><rect x="802.2" y="469" width="42.4" height="15.0" fill="rgb(239,206,20)" rx="2" ry="2" />
<text  x="805.17" y="479.5" >x86..</text>
</g>
<g >
<title>page_counter_try_charge (2 samples, 0.20%)</title><rect x="921.2" y="229" width="2.4" height="15.0" fill="rgb(222,197,22)" rx="2" ry="2" />
<text  x="924.23" y="239.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (9 samples, 0.90%)</title><rect x="422.6" y="149" width="10.6" height="15.0" fill="rgb(233,26,9)" rx="2" ry="2" />
<text  x="425.59" y="159.5" ></text>
</g>
<g >
<title>unmap_vmas (27 samples, 2.70%)</title><rect x="111.4" y="309" width="31.8" height="15.0" fill="rgb(221,45,34)" rx="2" ry="2" />
<text  x="114.38" y="319.5" >un..</text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.20%)</title><rect x="126.7" y="181" width="2.4" height="15.0" fill="rgb(237,137,42)" rx="2" ry="2" />
<text  x="129.70" y="191.5" ></text>
</g>
<g >
<title>_start (292 samples, 29.17%)</title><rect x="845.8" y="501" width="344.2" height="15.0" fill="rgb(245,177,45)" rx="2" ry="2" />
<text  x="848.78" y="511.5" >_start</text>
</g>
<g >
<title>__bprm_mm_init (1 samples, 0.10%)</title><rect x="11.2" y="341" width="1.2" height="15.0" fill="rgb(241,106,27)" rx="2" ry="2" />
<text  x="14.18" y="351.5" ></text>
</g>
<g >
<title>psi_task_change (2 samples, 0.20%)</title><rect x="880.0" y="181" width="2.3" height="15.0" fill="rgb(245,109,14)" rx="2" ry="2" />
<text  x="882.97" y="191.5" ></text>
</g>
<g >
<title>handle_mm_fault (126 samples, 12.59%)</title><rect x="401.4" y="245" width="148.5" height="15.0" fill="rgb(225,223,5)" rx="2" ry="2" />
<text  x="404.37" y="255.5" >handle_mm_fault</text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.10%)</title><rect x="988.4" y="165" width="1.2" height="15.0" fill="rgb(224,20,29)" rx="2" ry="2" />
<text  x="991.42" y="175.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.10%)</title><rect x="586.4" y="261" width="1.2" height="15.0" fill="rgb(205,93,8)" rx="2" ry="2" />
<text  x="589.44" y="271.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.10%)</title><rect x="109.0" y="149" width="1.2" height="15.0" fill="rgb(241,89,2)" rx="2" ry="2" />
<text  x="112.02" y="159.5" ></text>
</g>
<g >
<title>do_idle (36 samples, 3.60%)</title><rect x="802.2" y="389" width="42.4" height="15.0" fill="rgb(232,20,16)" rx="2" ry="2" />
<text  x="805.17" y="399.5" >do_..</text>
</g>
<g >
<title>do_iter_write (1 samples, 0.10%)</title><rect x="109.0" y="229" width="1.2" height="15.0" fill="rgb(246,72,23)" rx="2" ry="2" />
<text  x="112.02" y="239.5" ></text>
</g>
<g >
<title>dequeue_task_fair (6 samples, 0.60%)</title><rect x="1173.5" y="261" width="7.1" height="15.0" fill="rgb(206,168,46)" rx="2" ry="2" />
<text  x="1176.50" y="271.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.10%)</title><rect x="581.7" y="229" width="1.2" height="15.0" fill="rgb(212,135,41)" rx="2" ry="2" />
<text  x="584.73" y="239.5" ></text>
</g>
<g >
<title>update_cfs_group (2 samples, 0.20%)</title><rect x="169.1" y="149" width="2.4" height="15.0" fill="rgb(248,187,37)" rx="2" ry="2" />
<text  x="172.14" y="159.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (155 samples, 15.48%)</title><rect x="369.5" y="309" width="182.8" height="15.0" fill="rgb(228,189,16)" rx="2" ry="2" />
<text  x="372.54" y="319.5" >copy_user_enhanced_fast..</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (27 samples, 2.70%)</title><rect x="111.4" y="261" width="31.8" height="15.0" fill="rgb(237,213,32)" rx="2" ry="2" />
<text  x="114.38" y="271.5" >za..</text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.10%)</title><rect x="10.0" y="405" width="1.2" height="15.0" fill="rgb(235,41,50)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (150 samples, 14.99%)</title><rect x="610.0" y="405" width="176.8" height="15.0" fill="rgb(208,36,41)" rx="2" ry="2" />
<text  x="613.02" y="415.5" >cpuidle_enter_state</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="109.0" y="341" width="1.2" height="15.0" fill="rgb(246,50,47)" rx="2" ry="2" />
<text  x="112.02" y="351.5" ></text>
</g>
<g >
<title>update_cfs_group (2 samples, 0.20%)</title><rect x="875.3" y="149" width="2.3" height="15.0" fill="rgb(241,163,24)" rx="2" ry="2" />
<text  x="878.25" y="159.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (14 samples, 1.40%)</title><rect x="123.2" y="213" width="16.5" height="15.0" fill="rgb(242,67,35)" rx="2" ry="2" />
<text  x="126.17" y="223.5" ></text>
</g>
<g >
<title>__libc_start_main (407 samples, 40.66%)</title><rect x="110.2" y="485" width="479.8" height="15.0" fill="rgb(235,18,44)" rx="2" ry="2" />
<text  x="113.20" y="495.5" >__libc_start_main</text>
</g>
<g >
<title>page_counter_uncharge (4 samples, 0.40%)</title><rect x="191.5" y="245" width="4.8" height="15.0" fill="rgb(208,135,31)" rx="2" ry="2" />
<text  x="194.54" y="255.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (1 samples, 0.10%)</title><rect x="867.0" y="229" width="1.2" height="15.0" fill="rgb(216,71,50)" rx="2" ry="2" />
<text  x="870.00" y="239.5" ></text>
</g>
<g >
<title>alloc_pages (87 samples, 8.69%)</title><rect x="900.0" y="309" width="102.6" height="15.0" fill="rgb(252,129,46)" rx="2" ry="2" />
<text  x="903.01" y="319.5" >alloc_pages</text>
</g>
<g >
<title>stop_one_cpu_nowait (1 samples, 0.10%)</title><rect x="12.4" y="293" width="1.1" height="15.0" fill="rgb(246,141,39)" rx="2" ry="2" />
<text  x="15.36" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (4 samples, 0.40%)</title><rect x="117.3" y="197" width="4.7" height="15.0" fill="rgb(205,111,14)" rx="2" ry="2" />
<text  x="120.27" y="207.5" ></text>
</g>
<g >
<title>ksys_read (376 samples, 37.56%)</title><rect x="145.6" y="373" width="443.2" height="15.0" fill="rgb(213,103,37)" rx="2" ry="2" />
<text  x="148.56" y="383.5" >ksys_read</text>
</g>
<g >
<title>psi_flags_change (1 samples, 0.10%)</title><rect x="836.4" y="325" width="1.1" height="15.0" fill="rgb(229,194,33)" rx="2" ry="2" />
<text  x="839.35" y="335.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (9 samples, 0.90%)</title><rect x="913.0" y="261" width="10.6" height="15.0" fill="rgb(216,34,53)" rx="2" ry="2" />
<text  x="915.98" y="271.5" ></text>
</g>
<g >
<title>lru_cache_add (15 samples, 1.50%)</title><rect x="513.4" y="165" width="17.6" height="15.0" fill="rgb(219,60,43)" rx="2" ry="2" />
<text  x="516.36" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (292 samples, 29.17%)</title><rect x="845.8" y="469" width="344.2" height="15.0" fill="rgb(238,36,45)" rx="2" ry="2" />
<text  x="848.78" y="479.5" >[libc.so.6]</text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.20%)</title><rect x="842.2" y="373" width="2.4" height="15.0" fill="rgb(217,214,50)" rx="2" ry="2" />
<text  x="845.25" y="383.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (153 samples, 15.28%)</title><rect x="610.0" y="437" width="180.4" height="15.0" fill="rgb(232,105,45)" rx="2" ry="2" />
<text  x="613.02" y="447.5" >cpuidle_idle_call</text>
</g>
<g >
<title>write_var_time (293 samples, 29.27%)</title><rect x="844.6" y="517" width="345.4" height="15.0" fill="rgb(242,18,48)" rx="2" ry="2" />
<text  x="847.61" y="527.5" >write_var_time</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.10%)</title><rect x="126.7" y="165" width="1.2" height="15.0" fill="rgb(242,77,22)" rx="2" ry="2" />
<text  x="129.70" y="175.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.10%)</title><rect x="791.6" y="389" width="1.1" height="15.0" fill="rgb(253,74,45)" rx="2" ry="2" />
<text  x="794.56" y="399.5" ></text>
</g>
<g >
<title>main (407 samples, 40.66%)</title><rect x="110.2" y="453" width="479.8" height="15.0" fill="rgb(224,110,35)" rx="2" ry="2" />
<text  x="113.20" y="463.5" >main</text>
</g>
<g >
<title>pipe_write (279 samples, 27.87%)</title><rect x="858.8" y="325" width="328.8" height="15.0" fill="rgb(230,181,46)" rx="2" ry="2" />
<text  x="861.75" y="335.5" >pipe_write</text>
</g>
<g >
<title>__mod_lruvec_page_state (5 samples, 0.50%)</title><rect x="116.1" y="213" width="5.9" height="15.0" fill="rgb(247,143,46)" rx="2" ry="2" />
<text  x="119.09" y="223.5" ></text>
</g>
<g >
<title>arch_call_rest_init (36 samples, 3.60%)</title><rect x="802.2" y="437" width="42.4" height="15.0" fill="rgb(247,206,30)" rx="2" ry="2" />
<text  x="805.17" y="447.5" >arc..</text>
</g>
<g >
<title>enqueue_entity (3 samples, 0.30%)</title><rect x="874.1" y="165" width="3.5" height="15.0" fill="rgb(230,193,8)" rx="2" ry="2" />
<text  x="877.08" y="175.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.10%)</title><rect x="10.0" y="309" width="1.2" height="15.0" fill="rgb(224,84,0)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (17 samples, 1.70%)</title><rect x="123.2" y="229" width="20.0" height="15.0" fill="rgb(238,53,1)" rx="2" ry="2" />
<text  x="126.17" y="239.5" ></text>
</g>
<g >
<title>pud_val (1 samples, 0.10%)</title><rect x="545.2" y="213" width="1.2" height="15.0" fill="rgb(247,188,12)" rx="2" ry="2" />
<text  x="548.18" y="223.5" ></text>
</g>
<g >
<title>available_idle_cpu (2 samples, 0.20%)</title><rect x="869.4" y="181" width="2.3" height="15.0" fill="rgb(226,55,45)" rx="2" ry="2" />
<text  x="872.36" y="191.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.10%)</title><rect x="11.2" y="517" width="1.2" height="15.0" fill="rgb(228,51,18)" rx="2" ry="2" />
<text  x="14.18" y="527.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.10%)</title><rect x="10.0" y="293" width="1.2" height="15.0" fill="rgb(228,183,0)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>trace_event_raw_event_sched_wakeup_template (1 samples, 0.10%)</title><rect x="163.2" y="213" width="1.2" height="15.0" fill="rgb(206,11,19)" rx="2" ry="2" />
<text  x="166.25" y="223.5" ></text>
</g>
<g >
<title>ttwu_do_activate (10 samples, 1.00%)</title><rect x="871.7" y="213" width="11.8" height="15.0" fill="rgb(219,202,49)" rx="2" ry="2" />
<text  x="874.72" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.10%)</title><rect x="11.2" y="389" width="1.2" height="15.0" fill="rgb(236,46,28)" rx="2" ry="2" />
<text  x="14.18" y="399.5" ></text>
</g>
<g >
<title>__vm_munmap (28 samples, 2.80%)</title><rect x="110.2" y="357" width="33.0" height="15.0" fill="rgb(229,201,45)" rx="2" ry="2" />
<text  x="113.20" y="367.5" >__..</text>
</g>
<g >
<title>do_anonymous_page (103 samples, 10.29%)</title><rect x="417.9" y="197" width="121.4" height="15.0" fill="rgb(250,4,12)" rx="2" ry="2" />
<text  x="420.87" y="207.5" >do_anonymous_page</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="107.8" y="421" width="1.2" height="15.0" fill="rgb(242,84,45)" rx="2" ry="2" />
<text  x="110.84" y="431.5" ></text>
</g>
<g >
<title>main (292 samples, 29.17%)</title><rect x="845.8" y="453" width="344.2" height="15.0" fill="rgb(242,36,26)" rx="2" ry="2" />
<text  x="848.78" y="463.5" >main</text>
</g>
<g >
<title>write (1 samples, 0.10%)</title><rect x="107.8" y="453" width="1.2" height="15.0" fill="rgb(244,113,7)" rx="2" ry="2" />
<text  x="110.84" y="463.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.10%)</title><rect x="823.4" y="341" width="1.2" height="15.0" fill="rgb(222,227,21)" rx="2" ry="2" />
<text  x="826.39" y="351.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.10%)</title><rect x="107.8" y="293" width="1.2" height="15.0" fill="rgb(252,198,48)" rx="2" ry="2" />
<text  x="110.84" y="303.5" ></text>
</g>
<g >
<title>unmap_single_vma (27 samples, 2.70%)</title><rect x="111.4" y="293" width="31.8" height="15.0" fill="rgb(216,222,45)" rx="2" ry="2" />
<text  x="114.38" y="303.5" >un..</text>
</g>
<g >
<title>trace_event_buffer_reserve (1 samples, 0.10%)</title><rect x="163.2" y="197" width="1.2" height="15.0" fill="rgb(220,150,43)" rx="2" ry="2" />
<text  x="166.25" y="207.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (1 samples, 0.10%)</title><rect x="417.9" y="181" width="1.2" height="15.0" fill="rgb(251,185,24)" rx="2" ry="2" />
<text  x="420.87" y="191.5" ></text>
</g>
<g >
<title>_start (1 samples, 0.10%)</title><rect x="10.0" y="501" width="1.2" height="15.0" fill="rgb(248,174,29)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.10%)</title><rect x="109.0" y="165" width="1.2" height="15.0" fill="rgb(231,110,21)" rx="2" ry="2" />
<text  x="112.02" y="175.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.10%)</title><rect x="177.4" y="197" width="1.2" height="15.0" fill="rgb(231,205,49)" rx="2" ry="2" />
<text  x="180.39" y="207.5" ></text>
</g>
<g >
<title>ksys_write (280 samples, 27.97%)</title><rect x="857.6" y="373" width="330.0" height="15.0" fill="rgb(229,80,34)" rx="2" ry="2" />
<text  x="860.57" y="383.5" >ksys_write</text>
</g>
<g >
<title>unmap_page_range (27 samples, 2.70%)</title><rect x="111.4" y="277" width="31.8" height="15.0" fill="rgb(226,178,51)" rx="2" ry="2" />
<text  x="114.38" y="287.5" >un..</text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (2 samples, 0.20%)</title><rect x="784.5" y="373" width="2.3" height="15.0" fill="rgb(213,152,44)" rx="2" ry="2" />
<text  x="787.49" y="383.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.10%)</title><rect x="109.0" y="133" width="1.2" height="15.0" fill="rgb(216,74,22)" rx="2" ry="2" />
<text  x="112.02" y="143.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.10%)</title><rect x="587.6" y="309" width="1.2" height="15.0" fill="rgb(245,30,30)" rx="2" ry="2" />
<text  x="590.62" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="988.4" y="245" width="1.2" height="15.0" fill="rgb(232,13,36)" rx="2" ry="2" />
<text  x="991.42" y="255.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.10%)</title><rect x="529.9" y="133" width="1.1" height="15.0" fill="rgb(224,163,26)" rx="2" ry="2" />
<text  x="532.86" y="143.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 0.60%)</title><rect x="792.7" y="421" width="7.1" height="15.0" fill="rgb(227,130,22)" rx="2" ry="2" />
<text  x="795.74" y="431.5" ></text>
</g>
<g >
<title>__alloc_pages (84 samples, 8.39%)</title><rect x="901.2" y="293" width="99.0" height="15.0" fill="rgb(225,106,48)" rx="2" ry="2" />
<text  x="904.19" y="303.5" >__alloc_pages</text>
</g>
<g >
<title>make_kgid (1 samples, 0.10%)</title><rect x="587.6" y="277" width="1.2" height="15.0" fill="rgb(205,58,47)" rx="2" ry="2" />
<text  x="590.62" y="287.5" ></text>
</g>
<g >
<title>alloc_pages (1 samples, 0.10%)</title><rect x="109.0" y="85" width="1.2" height="15.0" fill="rgb(251,135,46)" rx="2" ry="2" />
<text  x="112.02" y="95.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="397.8" y="277" width="1.2" height="15.0" fill="rgb(252,71,23)" rx="2" ry="2" />
<text  x="400.83" y="287.5" ></text>
</g>
<g >
<title>ring_buffer_lock_reserve (1 samples, 0.10%)</title><rect x="177.4" y="117" width="1.2" height="15.0" fill="rgb(224,145,29)" rx="2" ry="2" />
<text  x="180.39" y="127.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.10%)</title><rect x="829.3" y="309" width="1.2" height="15.0" fill="rgb(245,30,51)" rx="2" ry="2" />
<text  x="832.28" y="319.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.10%)</title><rect x="1001.4" y="293" width="1.2" height="15.0" fill="rgb(217,187,34)" rx="2" ry="2" />
<text  x="1004.39" y="303.5" ></text>
</g>
<g >
<title>trace_event_buffer_reserve (1 samples, 0.10%)</title><rect x="1177.0" y="197" width="1.2" height="15.0" fill="rgb(211,212,15)" rx="2" ry="2" />
<text  x="1180.03" y="207.5" ></text>
</g>
<g >
<title>try_charge_memcg (7 samples, 0.70%)</title><rect x="915.3" y="245" width="8.3" height="15.0" fill="rgb(215,51,42)" rx="2" ry="2" />
<text  x="918.33" y="255.5" ></text>
</g>
<g >
<title>ttwu_do_activate (12 samples, 1.20%)</title><rect x="164.4" y="213" width="14.2" height="15.0" fill="rgb(206,192,54)" rx="2" ry="2" />
<text  x="167.43" y="223.5" ></text>
</g>
<g >
<title>enqueue_task_fair (6 samples, 0.60%)</title><rect x="164.4" y="181" width="7.1" height="15.0" fill="rgb(216,225,9)" rx="2" ry="2" />
<text  x="167.43" y="191.5" ></text>
</g>
<g >
<title>rcu_idle_enter (2 samples, 0.20%)</title><rect x="784.5" y="389" width="2.3" height="15.0" fill="rgb(249,69,24)" rx="2" ry="2" />
<text  x="787.49" y="399.5" ></text>
</g>
<g >
<title>do_idle (162 samples, 16.18%)</title><rect x="608.8" y="453" width="191.0" height="15.0" fill="rgb(206,131,13)" rx="2" ry="2" />
<text  x="611.84" y="463.5" >do_idle</text>
</g>
<g >
<title>trace_event_buffer_lock_reserve (1 samples, 0.10%)</title><rect x="163.2" y="181" width="1.2" height="15.0" fill="rgb(217,102,33)" rx="2" ry="2" />
<text  x="166.25" y="191.5" ></text>
</g>
<g >
<title>new_sync_write (280 samples, 27.97%)</title><rect x="857.6" y="341" width="330.0" height="15.0" fill="rgb(244,162,27)" rx="2" ry="2" />
<text  x="860.57" y="351.5" >new_sync_write</text>
</g>
<g >
<title>restore_regs_and_return_to_kernel (2 samples, 0.20%)</title><rect x="578.2" y="309" width="2.3" height="15.0" fill="rgb(221,200,40)" rx="2" ry="2" />
<text  x="581.19" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.20%)</title><rect x="610.0" y="389" width="2.4" height="15.0" fill="rgb(208,10,20)" rx="2" ry="2" />
<text  x="613.02" y="399.5" ></text>
</g>
<g >
<title>mutex_spin_on_owner (19 samples, 1.90%)</title><rect x="554.6" y="261" width="22.4" height="15.0" fill="rgb(215,139,12)" rx="2" ry="2" />
<text  x="557.62" y="271.5" >m..</text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.10%)</title><rect x="611.2" y="309" width="1.2" height="15.0" fill="rgb(227,74,35)" rx="2" ry="2" />
<text  x="614.20" y="319.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.10%)</title><rect x="607.7" y="261" width="1.1" height="15.0" fill="rgb(236,151,17)" rx="2" ry="2" />
<text  x="610.66" y="271.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (200 samples, 19.98%)</title><rect x="608.8" y="501" width="235.8" height="15.0" fill="rgb(249,63,11)" rx="2" ry="2" />
<text  x="611.84" y="511.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.10%)</title><rect x="607.7" y="325" width="1.1" height="15.0" fill="rgb(208,71,42)" rx="2" ry="2" />
<text  x="610.66" y="335.5" ></text>
</g>
<g >
<title>pipe_write (1 samples, 0.10%)</title><rect x="107.8" y="341" width="1.2" height="15.0" fill="rgb(221,70,19)" rx="2" ry="2" />
<text  x="110.84" y="351.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.10%)</title><rect x="799.8" y="453" width="1.2" height="15.0" fill="rgb(229,169,34)" rx="2" ry="2" />
<text  x="802.81" y="463.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.10%)</title><rect x="884.7" y="213" width="1.2" height="15.0" fill="rgb(246,54,43)" rx="2" ry="2" />
<text  x="887.69" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.10%)</title><rect x="844.6" y="469" width="1.2" height="15.0" fill="rgb(218,53,20)" rx="2" ry="2" />
<text  x="847.61" y="479.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.10%)</title><rect x="851.7" y="421" width="1.2" height="15.0" fill="rgb(251,196,0)" rx="2" ry="2" />
<text  x="854.68" y="431.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.10%)</title><rect x="844.6" y="437" width="1.2" height="15.0" fill="rgb(235,219,22)" rx="2" ry="2" />
<text  x="847.61" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (12 samples, 1.20%)</title><rect x="885.9" y="309" width="14.1" height="15.0" fill="rgb(229,195,14)" rx="2" ry="2" />
<text  x="888.86" y="319.5" ></text>
</g>
<g >
<title>psi_group_change (2 samples, 0.20%)</title><rect x="880.0" y="165" width="2.3" height="15.0" fill="rgb(242,43,15)" rx="2" ry="2" />
<text  x="882.97" y="175.5" ></text>
</g>
<g >
<title>prepare_to_wait_event (1 samples, 0.10%)</title><rect x="577.0" y="309" width="1.2" height="15.0" fill="rgb(224,20,29)" rx="2" ry="2" />
<text  x="580.01" y="319.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.20%)</title><rect x="524.0" y="117" width="2.3" height="15.0" fill="rgb(231,195,40)" rx="2" ry="2" />
<text  x="526.97" y="127.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.10%)</title><rect x="844.6" y="453" width="1.2" height="15.0" fill="rgb(235,163,20)" rx="2" ry="2" />
<text  x="847.61" y="463.5" ></text>
</g>
<g >
<title>anon_pipe_buf_release (5 samples, 0.50%)</title><rect x="146.7" y="325" width="5.9" height="15.0" fill="rgb(242,226,21)" rx="2" ry="2" />
<text  x="149.74" y="335.5" ></text>
</g>
<g >
<title>switch_fpu_return (1 samples, 0.10%)</title><rect x="1188.8" y="357" width="1.2" height="15.0" fill="rgb(253,217,34)" rx="2" ry="2" />
<text  x="1191.82" y="367.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.10%)</title><rect x="1000.2" y="293" width="1.2" height="15.0" fill="rgb(215,88,6)" rx="2" ry="2" />
<text  x="1003.21" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (128 samples, 12.79%)</title><rect x="400.2" y="261" width="150.9" height="15.0" fill="rgb(249,205,2)" rx="2" ry="2" />
<text  x="403.19" y="271.5" >do_user_addr_fault</text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 7.99%)</title><rect x="13.5" y="453" width="94.3" height="15.0" fill="rgb(208,79,42)" rx="2" ry="2" />
<text  x="16.54" y="463.5" >perf_evsel_..</text>
</g>
<g >
<title>prepare_to_wait_event (1 samples, 0.10%)</title><rect x="1170.0" y="309" width="1.1" height="15.0" fill="rgb(216,203,31)" rx="2" ry="2" />
<text  x="1172.96" y="319.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.10%)</title><rect x="607.7" y="405" width="1.1" height="15.0" fill="rgb(208,52,34)" rx="2" ry="2" />
<text  x="610.66" y="415.5" ></text>
</g>
<g >
<title>enqueue_entity (5 samples, 0.50%)</title><rect x="165.6" y="165" width="5.9" height="15.0" fill="rgb(213,4,54)" rx="2" ry="2" />
<text  x="168.60" y="175.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.10%)</title><rect x="988.4" y="213" width="1.2" height="15.0" fill="rgb(221,59,31)" rx="2" ry="2" />
<text  x="991.42" y="223.5" ></text>
</g>
<g >
<title>__schedule (12 samples, 1.20%)</title><rect x="1173.5" y="293" width="14.1" height="15.0" fill="rgb(230,228,42)" rx="2" ry="2" />
<text  x="1176.50" y="303.5" ></text>
</g>
<g >
<title>generic_update_time (1 samples, 0.10%)</title><rect x="607.7" y="341" width="1.1" height="15.0" fill="rgb(238,64,36)" rx="2" ry="2" />
<text  x="610.66" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_write (280 samples, 27.97%)</title><rect x="857.6" y="389" width="330.0" height="15.0" fill="rgb(251,16,15)" rx="2" ry="2" />
<text  x="860.57" y="399.5" >__x64_sys_write</text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.10%)</title><rect x="549.9" y="245" width="1.2" height="15.0" fill="rgb(253,89,15)" rx="2" ry="2" />
<text  x="552.90" y="255.5" ></text>
</g>
<g >
<title>put_ctx (1 samples, 0.10%)</title><rect x="106.7" y="341" width="1.1" height="15.0" fill="rgb(242,117,14)" rx="2" ry="2" />
<text  x="109.66" y="351.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (18 samples, 1.80%)</title><rect x="157.4" y="309" width="21.2" height="15.0" fill="rgb(249,181,15)" rx="2" ry="2" />
<text  x="160.35" y="319.5" ></text>
</g>
<g >
<title>psi_task_switch (1 samples, 0.10%)</title><rect x="798.6" y="405" width="1.2" height="15.0" fill="rgb(228,143,2)" rx="2" ry="2" />
<text  x="801.63" y="415.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.10%)</title><rect x="203.3" y="261" width="1.2" height="15.0" fill="rgb(220,219,49)" rx="2" ry="2" />
<text  x="206.33" y="271.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.10%)</title><rect x="109.0" y="277" width="1.2" height="15.0" fill="rgb(249,84,22)" rx="2" ry="2" />
<text  x="112.02" y="287.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.10%)</title><rect x="122.0" y="213" width="1.2" height="15.0" fill="rgb(251,42,11)" rx="2" ry="2" />
<text  x="124.99" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (407 samples, 40.66%)</title><rect x="110.2" y="469" width="479.8" height="15.0" fill="rgb(245,176,7)" rx="2" ry="2" />
<text  x="113.20" y="479.5" >[libc.so.6]</text>
</g>
<g >
<title>__mutex_lock.constprop.0 (105 samples, 10.49%)</title><rect x="1046.2" y="277" width="123.8" height="15.0" fill="rgb(243,145,1)" rx="2" ry="2" />
<text  x="1049.18" y="287.5" >__mutex_lock.co..</text>
</g>
<g >
<title>memcg_check_events (2 samples, 0.20%)</title><rect x="445.0" y="165" width="2.3" height="15.0" fill="rgb(244,150,49)" rx="2" ry="2" />
<text  x="447.99" y="175.5" ></text>
</g>
<g >
<title>__page_cache_alloc (1 samples, 0.10%)</title><rect x="109.0" y="101" width="1.2" height="15.0" fill="rgb(246,44,24)" rx="2" ry="2" />
<text  x="112.02" y="111.5" ></text>
</g>
<g >
<title>ring_buffer_lock_reserve (1 samples, 0.10%)</title><rect x="163.2" y="165" width="1.2" height="15.0" fill="rgb(205,174,43)" rx="2" ry="2" />
<text  x="166.25" y="175.5" ></text>
</g>
<g >
<title>file_update_time (1 samples, 0.10%)</title><rect x="607.7" y="357" width="1.1" height="15.0" fill="rgb(244,57,36)" rx="2" ry="2" />
<text  x="610.66" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.10%)</title><rect x="397.8" y="181" width="1.2" height="15.0" fill="rgb(250,202,30)" rx="2" ry="2" />
<text  x="400.83" y="191.5" ></text>
</g>
<g >
<title>all (1,001 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(205,209,43)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="988.4" y="229" width="1.2" height="15.0" fill="rgb(215,117,14)" rx="2" ry="2" />
<text  x="991.42" y="239.5" ></text>
</g>
<g >
<title>file_modified (1 samples, 0.10%)</title><rect x="607.7" y="373" width="1.1" height="15.0" fill="rgb(221,145,45)" rx="2" ry="2" />
<text  x="610.66" y="383.5" ></text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.10%)</title><rect x="10.0" y="197" width="1.2" height="15.0" fill="rgb(232,40,26)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (1 samples, 0.10%)</title><rect x="109.0" y="453" width="1.2" height="15.0" fill="rgb(225,61,1)" rx="2" ry="2" />
<text  x="112.02" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.10%)</title><rect x="1043.8" y="293" width="1.2" height="15.0" fill="rgb(224,187,32)" rx="2" ry="2" />
<text  x="1046.83" y="303.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.10%)</title><rect x="829.3" y="277" width="1.2" height="15.0" fill="rgb(211,42,14)" rx="2" ry="2" />
<text  x="832.28" y="287.5" ></text>
</g>
<g >
<title>default_wake_function (17 samples, 1.70%)</title><rect x="158.5" y="245" width="20.1" height="15.0" fill="rgb(225,50,8)" rx="2" ry="2" />
<text  x="161.53" y="255.5" ></text>
</g>
<g >
<title>_find_first_bit (2 samples, 0.20%)</title><rect x="448.5" y="181" width="2.4" height="15.0" fill="rgb(250,31,40)" rx="2" ry="2" />
<text  x="451.52" y="191.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.10%)</title><rect x="109.0" y="261" width="1.2" height="15.0" fill="rgb(219,199,27)" rx="2" ry="2" />
<text  x="112.02" y="271.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (1 samples, 0.10%)</title><rect x="828.1" y="309" width="1.2" height="15.0" fill="rgb(226,183,4)" rx="2" ry="2" />
<text  x="831.10" y="319.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.10%)</title><rect x="829.3" y="293" width="1.2" height="15.0" fill="rgb(205,185,21)" rx="2" ry="2" />
<text  x="832.28" y="303.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.10%)</title><rect x="822.2" y="309" width="1.2" height="15.0" fill="rgb(213,17,11)" rx="2" ry="2" />
<text  x="825.21" y="319.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (16 samples, 1.60%)</title><rect x="803.3" y="325" width="18.9" height="15.0" fill="rgb(237,190,4)" rx="2" ry="2" />
<text  x="806.35" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (131 samples, 13.09%)</title><rect x="397.8" y="293" width="154.5" height="15.0" fill="rgb(249,220,11)" rx="2" ry="2" />
<text  x="400.83" y="303.5" >asm_exc_page_fault</text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.10%)</title><rect x="584.1" y="229" width="1.2" height="15.0" fill="rgb(239,119,18)" rx="2" ry="2" />
<text  x="587.09" y="239.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (18 samples, 1.80%)</title><rect x="864.6" y="309" width="21.3" height="15.0" fill="rgb(212,147,36)" rx="2" ry="2" />
<text  x="867.65" y="319.5" ></text>
</g>
<g >
<title>read_var_time (407 samples, 40.66%)</title><rect x="110.2" y="517" width="479.8" height="15.0" fill="rgb(210,42,2)" rx="2" ry="2" />
<text  x="113.20" y="527.5" >read_var_time</text>
</g>
<g >
<title>next_uptodate_page (1 samples, 0.10%)</title><rect x="844.6" y="309" width="1.2" height="15.0" fill="rgb(242,134,42)" rx="2" ry="2" />
<text  x="847.61" y="319.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.20%)</title><rect x="796.3" y="389" width="2.3" height="15.0" fill="rgb(232,190,24)" rx="2" ry="2" />
<text  x="799.27" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="109.0" y="357" width="1.2" height="15.0" fill="rgb(211,104,53)" rx="2" ry="2" />
<text  x="112.02" y="367.5" ></text>
</g>
<g >
<title>trace_event_raw_event_sched_stat_runtime (1 samples, 0.10%)</title><rect x="1177.0" y="213" width="1.2" height="15.0" fill="rgb(212,174,41)" rx="2" ry="2" />
<text  x="1180.03" y="223.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (4 samples, 0.40%)</title><rect x="440.3" y="165" width="4.7" height="15.0" fill="rgb(220,205,33)" rx="2" ry="2" />
<text  x="443.27" y="175.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.10%)</title><rect x="10.0" y="229" width="1.2" height="15.0" fill="rgb(228,35,38)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.10%)</title><rect x="1184.1" y="245" width="1.2" height="15.0" fill="rgb(237,4,0)" rx="2" ry="2" />
<text  x="1187.11" y="255.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.10%)</title><rect x="844.6" y="325" width="1.2" height="15.0" fill="rgb(235,27,44)" rx="2" ry="2" />
<text  x="847.61" y="335.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.10%)</title><rect x="844.6" y="357" width="1.2" height="15.0" fill="rgb(253,133,54)" rx="2" ry="2" />
<text  x="847.61" y="367.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.10%)</title><rect x="580.5" y="229" width="1.2" height="15.0" fill="rgb(210,26,52)" rx="2" ry="2" />
<text  x="583.55" y="239.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.10%)</title><rect x="189.2" y="261" width="1.2" height="15.0" fill="rgb(209,125,47)" rx="2" ry="2" />
<text  x="192.18" y="271.5" ></text>
</g>
<g >
<title>enqueue_task (11 samples, 1.10%)</title><rect x="164.4" y="197" width="13.0" height="15.0" fill="rgb(245,95,4)" rx="2" ry="2" />
<text  x="167.43" y="207.5" ></text>
</g>
<g >
<title>set_next_entity (3 samples, 0.30%)</title><rect x="831.6" y="309" width="3.6" height="15.0" fill="rgb(227,150,50)" rx="2" ry="2" />
<text  x="834.64" y="319.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.10%)</title><rect x="607.7" y="421" width="1.1" height="15.0" fill="rgb(247,135,37)" rx="2" ry="2" />
<text  x="610.66" y="431.5" ></text>
</g>
<g >
<title>enqueue_task (9 samples, 0.90%)</title><rect x="871.7" y="197" width="10.6" height="15.0" fill="rgb(242,44,26)" rx="2" ry="2" />
<text  x="874.72" y="207.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (32 samples, 3.20%)</title><rect x="1004.9" y="309" width="37.7" height="15.0" fill="rgb(236,16,35)" rx="2" ry="2" />
<text  x="1007.93" y="319.5" >cop..</text>
</g>
<g >
<title>page_mapping (1 samples, 0.10%)</title><rect x="528.7" y="117" width="1.2" height="15.0" fill="rgb(211,118,5)" rx="2" ry="2" />
<text  x="531.68" y="127.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.10%)</title><rect x="798.6" y="389" width="1.2" height="15.0" fill="rgb(212,125,10)" rx="2" ry="2" />
<text  x="801.63" y="399.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (18 samples, 1.80%)</title><rect x="157.4" y="293" width="21.2" height="15.0" fill="rgb(228,62,54)" rx="2" ry="2" />
<text  x="160.35" y="303.5" ></text>
</g>
<g >
<title>is_cpu_allowed (1 samples, 0.10%)</title><rect x="12.4" y="245" width="1.1" height="15.0" fill="rgb(239,61,22)" rx="2" ry="2" />
<text  x="15.36" y="255.5" ></text>
</g>
<g >
<title>resched_curr (1 samples, 0.10%)</title><rect x="882.3" y="165" width="1.2" height="15.0" fill="rgb(242,124,45)" rx="2" ry="2" />
<text  x="885.33" y="175.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.10%)</title><rect x="109.0" y="53" width="1.2" height="15.0" fill="rgb(225,215,27)" rx="2" ry="2" />
<text  x="112.02" y="63.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.10%)</title><rect x="882.3" y="197" width="1.2" height="15.0" fill="rgb(248,42,44)" rx="2" ry="2" />
<text  x="885.33" y="207.5" ></text>
</g>
<g >
<title>handle_pte_fault (109 samples, 10.89%)</title><rect x="412.0" y="213" width="128.5" height="15.0" fill="rgb(254,114,9)" rx="2" ry="2" />
<text  x="414.98" y="223.5" >handle_pte_fault</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="397.8" y="245" width="1.2" height="15.0" fill="rgb(237,47,13)" rx="2" ry="2" />
<text  x="400.83" y="255.5" ></text>
</g>
<g >
<title>perf_mmap__push (1 samples, 0.10%)</title><rect x="109.0" y="437" width="1.2" height="15.0" fill="rgb(245,67,45)" rx="2" ry="2" />
<text  x="112.02" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter (151 samples, 15.08%)</title><rect x="610.0" y="421" width="178.0" height="15.0" fill="rgb(228,30,19)" rx="2" ry="2" />
<text  x="613.02" y="431.5" >cpuidle_enter</text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.10%)</title><rect x="611.2" y="325" width="1.2" height="15.0" fill="rgb(232,31,7)" rx="2" ry="2" />
<text  x="614.20" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.10%)</title><rect x="546.4" y="229" width="1.1" height="15.0" fill="rgb(233,139,27)" rx="2" ry="2" />
<text  x="549.36" y="239.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (1 samples, 0.10%)</title><rect x="841.1" y="341" width="1.1" height="15.0" fill="rgb(232,117,23)" rx="2" ry="2" />
<text  x="844.07" y="351.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.10%)</title><rect x="11.2" y="501" width="1.2" height="15.0" fill="rgb(210,222,31)" rx="2" ry="2" />
<text  x="14.18" y="511.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.10%)</title><rect x="400.2" y="245" width="1.2" height="15.0" fill="rgb(209,178,2)" rx="2" ry="2" />
<text  x="403.19" y="255.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.20%)</title><rect x="1185.3" y="277" width="2.3" height="15.0" fill="rgb(230,110,7)" rx="2" ry="2" />
<text  x="1188.28" y="287.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.10%)</title><rect x="107.8" y="357" width="1.2" height="15.0" fill="rgb(213,74,22)" rx="2" ry="2" />
<text  x="110.84" y="367.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.20%)</title><rect x="160.9" y="213" width="2.3" height="15.0" fill="rgb(207,190,31)" rx="2" ry="2" />
<text  x="163.89" y="223.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.10%)</title><rect x="877.6" y="165" width="1.2" height="15.0" fill="rgb(253,104,5)" rx="2" ry="2" />
<text  x="880.61" y="175.5" ></text>
</g>
<g >
<title>alloc_bprm (1 samples, 0.10%)</title><rect x="11.2" y="357" width="1.2" height="15.0" fill="rgb(235,133,21)" rx="2" ry="2" />
<text  x="14.18" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.10%)</title><rect x="11.2" y="453" width="1.2" height="15.0" fill="rgb(205,113,3)" rx="2" ry="2" />
<text  x="14.18" y="463.5" ></text>
</g>
<g >
<title>trace_event_raw_event_sched_wakeup_template (1 samples, 0.10%)</title><rect x="177.4" y="165" width="1.2" height="15.0" fill="rgb(213,220,9)" rx="2" ry="2" />
<text  x="180.39" y="175.5" ></text>
</g>
<g >
<title>__switch_to_asm (3 samples, 0.30%)</title><rect x="852.9" y="421" width="3.5" height="15.0" fill="rgb(234,130,0)" rx="2" ry="2" />
<text  x="855.86" y="431.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.10%)</title><rect x="109.0" y="309" width="1.2" height="15.0" fill="rgb(234,20,3)" rx="2" ry="2" />
<text  x="112.02" y="319.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (73 samples, 7.29%)</title><rect x="20.6" y="165" width="86.1" height="15.0" fill="rgb(216,176,20)" rx="2" ry="2" />
<text  x="23.61" y="175.5" >intel_pmu_..</text>
</g>
<g >
<title>ctx_resched (75 samples, 7.49%)</title><rect x="18.3" y="197" width="88.4" height="15.0" fill="rgb(242,72,53)" rx="2" ry="2" />
<text  x="21.25" y="207.5" >ctx_resched</text>
</g>
<g >
<title>do_read_fault (1 samples, 0.10%)</title><rect x="844.6" y="341" width="1.2" height="15.0" fill="rgb(244,10,12)" rx="2" ry="2" />
<text  x="847.61" y="351.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 8.29%)</title><rect x="12.4" y="501" width="97.8" height="15.0" fill="rgb(231,195,21)" rx="2" ry="2" />
<text  x="15.36" y="511.5" >[unknown]</text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.10%)</title><rect x="107.8" y="277" width="1.2" height="15.0" fill="rgb(249,75,35)" rx="2" ry="2" />
<text  x="110.84" y="287.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.10%)</title><rect x="988.4" y="197" width="1.2" height="15.0" fill="rgb(245,187,12)" rx="2" ry="2" />
<text  x="991.42" y="207.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.10%)</title><rect x="107.8" y="309" width="1.2" height="15.0" fill="rgb(214,188,45)" rx="2" ry="2" />
<text  x="110.84" y="319.5" ></text>
</g>
<g >
<title>try_to_wake_up (15 samples, 1.50%)</title><rect x="868.2" y="229" width="17.7" height="15.0" fill="rgb(207,11,16)" rx="2" ry="2" />
<text  x="871.18" y="239.5" ></text>
</g>
<g >
<title>get_page_from_freelist (63 samples, 6.29%)</title><rect x="925.9" y="277" width="74.3" height="15.0" fill="rgb(212,111,16)" rx="2" ry="2" />
<text  x="928.94" y="287.5" >get_page..</text>
</g>
<g >
<title>asm_exc_page_fault (125 samples, 12.49%)</title><rect x="217.5" y="309" width="147.3" height="15.0" fill="rgb(217,145,29)" rx="2" ry="2" />
<text  x="220.47" y="319.5" >asm_exc_page_fault</text>
</g>
<g >
<title>__sched_setaffinity (1 samples, 0.10%)</title><rect x="12.4" y="341" width="1.1" height="15.0" fill="rgb(213,137,48)" rx="2" ry="2" />
<text  x="15.36" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (80 samples, 7.99%)</title><rect x="13.5" y="373" width="94.3" height="15.0" fill="rgb(209,43,18)" rx="2" ry="2" />
<text  x="16.54" y="383.5" >__x64_sys_i..</text>
</g>
<g >
<title>__wake_up_common_lock (18 samples, 1.80%)</title><rect x="864.6" y="293" width="21.3" height="15.0" fill="rgb(238,82,14)" rx="2" ry="2" />
<text  x="867.65" y="303.5" ></text>
</g>
<g >
<title>__cmd_record (83 samples, 8.29%)</title><rect x="12.4" y="485" width="97.8" height="15.0" fill="rgb(241,136,37)" rx="2" ry="2" />
<text  x="15.36" y="495.5" >__cmd_record</text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.10%)</title><rect x="878.8" y="165" width="1.2" height="15.0" fill="rgb(209,27,32)" rx="2" ry="2" />
<text  x="881.79" y="175.5" ></text>
</g>
<g >
<title>sched_setaffinity (1 samples, 0.10%)</title><rect x="12.4" y="357" width="1.1" height="15.0" fill="rgb(236,198,2)" rx="2" ry="2" />
<text  x="15.36" y="367.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.10%)</title><rect x="109.0" y="293" width="1.2" height="15.0" fill="rgb(210,142,5)" rx="2" ry="2" />
<text  x="112.02" y="303.5" ></text>
</g>
<g >
<title>bash (1 samples, 0.10%)</title><rect x="10.0" y="517" width="1.2" height="15.0" fill="rgb(215,186,7)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.10%)</title><rect x="447.3" y="165" width="1.2" height="15.0" fill="rgb(212,104,49)" rx="2" ry="2" />
<text  x="450.34" y="175.5" ></text>
</g>
<g >
<title>__wake_up_common (18 samples, 1.80%)</title><rect x="157.4" y="277" width="21.2" height="15.0" fill="rgb(219,46,38)" rx="2" ry="2" />
<text  x="160.35" y="287.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.10%)</title><rect x="793.9" y="405" width="1.2" height="15.0" fill="rgb(213,100,48)" rx="2" ry="2" />
<text  x="796.92" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (4 samples, 0.40%)</title><rect x="178.6" y="309" width="4.7" height="15.0" fill="rgb(248,18,6)" rx="2" ry="2" />
<text  x="181.57" y="319.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 7.99%)</title><rect x="13.5" y="437" width="94.3" height="15.0" fill="rgb(228,209,7)" rx="2" ry="2" />
<text  x="16.54" y="447.5" >perf_evsel_..</text>
</g>
<g >
<title>copy_page_to_iter (4 samples, 0.40%)</title><rect x="364.8" y="309" width="4.7" height="15.0" fill="rgb(245,166,41)" rx="2" ry="2" />
<text  x="367.83" y="319.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.20%)</title><rect x="1185.3" y="229" width="2.3" height="15.0" fill="rgb(254,87,9)" rx="2" ry="2" />
<text  x="1188.28" y="239.5" ></text>
</g>
<g >
<title>__count_memcg_events (2 samples, 0.20%)</title><rect x="403.7" y="229" width="2.4" height="15.0" fill="rgb(206,96,31)" rx="2" ry="2" />
<text  x="406.73" y="239.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.10%)</title><rect x="834.0" y="277" width="1.2" height="15.0" fill="rgb(239,48,48)" rx="2" ry="2" />
<text  x="837.00" y="287.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.30%)</title><rect x="831.6" y="325" width="3.6" height="15.0" fill="rgb(243,56,45)" rx="2" ry="2" />
<text  x="834.64" y="335.5" ></text>
</g>
<g >
<title>__evlist__enable (81 samples, 8.09%)</title><rect x="12.4" y="469" width="95.4" height="15.0" fill="rgb(240,70,38)" rx="2" ry="2" />
<text  x="15.36" y="479.5" >__evlist__e..</text>
</g>
<g >
<title>update_load_avg (2 samples, 0.20%)</title><rect x="1178.2" y="229" width="2.4" height="15.0" fill="rgb(235,65,16)" rx="2" ry="2" />
<text  x="1181.21" y="239.5" ></text>
</g>
<g >
<title>start_secondary (164 samples, 16.38%)</title><rect x="608.8" y="485" width="193.4" height="15.0" fill="rgb(249,221,27)" rx="2" ry="2" />
<text  x="611.84" y="495.5" >start_secondary</text>
</g>
<g >
<title>__pagevec_lru_add_fn (11 samples, 1.10%)</title><rect x="516.9" y="133" width="13.0" height="15.0" fill="rgb(206,14,25)" rx="2" ry="2" />
<text  x="519.89" y="143.5" ></text>
</g>
<g >
<title>record__write (1 samples, 0.10%)</title><rect x="109.0" y="405" width="1.2" height="15.0" fill="rgb(214,168,46)" rx="2" ry="2" />
<text  x="112.02" y="415.5" ></text>
</g>
<g >
<title>try_to_wake_up (17 samples, 1.70%)</title><rect x="158.5" y="229" width="20.1" height="15.0" fill="rgb(248,1,53)" rx="2" ry="2" />
<text  x="161.53" y="239.5" ></text>
</g>
<g >
<title>affine_move_task (1 samples, 0.10%)</title><rect x="12.4" y="309" width="1.1" height="15.0" fill="rgb(241,120,45)" rx="2" ry="2" />
<text  x="15.36" y="319.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.20%)</title><rect x="869.4" y="213" width="2.3" height="15.0" fill="rgb(231,7,5)" rx="2" ry="2" />
<text  x="872.36" y="223.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.10%)</title><rect x="607.7" y="277" width="1.1" height="15.0" fill="rgb(221,129,37)" rx="2" ry="2" />
<text  x="610.66" y="287.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.10%)</title><rect x="110.2" y="293" width="1.2" height="15.0" fill="rgb(217,99,7)" rx="2" ry="2" />
<text  x="113.20" y="303.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.10%)</title><rect x="107.8" y="213" width="1.2" height="15.0" fill="rgb(243,184,22)" rx="2" ry="2" />
<text  x="110.84" y="223.5" ></text>
</g>
<g >
<title>__update_load_avg_se (2 samples, 0.20%)</title><rect x="1178.2" y="213" width="2.4" height="15.0" fill="rgb(247,118,31)" rx="2" ry="2" />
<text  x="1181.21" y="223.5" ></text>
</g>
<g >
<title>atime_needs_update (1 samples, 0.10%)</title><rect x="587.6" y="293" width="1.2" height="15.0" fill="rgb(238,16,11)" rx="2" ry="2" />
<text  x="590.62" y="303.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.10%)</title><rect x="10.0" y="357" width="1.2" height="15.0" fill="rgb(250,167,20)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>psi_task_switch (2 samples, 0.20%)</title><rect x="585.3" y="277" width="2.3" height="15.0" fill="rgb(230,142,25)" rx="2" ry="2" />
<text  x="588.26" y="287.5" ></text>
</g>
<g >
<title>rmqueue_bulk (4 samples, 0.40%)</title><rect x="503.9" y="117" width="4.7" height="15.0" fill="rgb(207,2,16)" rx="2" ry="2" />
<text  x="506.93" y="127.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.10%)</title><rect x="196.3" y="261" width="1.1" height="15.0" fill="rgb(210,12,7)" rx="2" ry="2" />
<text  x="199.25" y="271.5" ></text>
</g>
<g >
<title>__do_munmap (28 samples, 2.80%)</title><rect x="110.2" y="341" width="33.0" height="15.0" fill="rgb(238,172,11)" rx="2" ry="2" />
<text  x="113.20" y="351.5" >__..</text>
</g>
<g >
<title>__mod_lruvec_page_state (6 samples, 0.60%)</title><rect x="531.0" y="165" width="7.1" height="15.0" fill="rgb(205,18,4)" rx="2" ry="2" />
<text  x="534.04" y="175.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (17 samples, 1.70%)</title><rect x="803.3" y="341" width="20.1" height="15.0" fill="rgb(223,228,11)" rx="2" ry="2" />
<text  x="806.35" y="351.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.10%)</title><rect x="607.7" y="309" width="1.1" height="15.0" fill="rgb(243,95,16)" rx="2" ry="2" />
<text  x="610.66" y="319.5" ></text>
</g>
<g >
<title>start_kernel (36 samples, 3.60%)</title><rect x="802.2" y="453" width="42.4" height="15.0" fill="rgb(228,163,39)" rx="2" ry="2" />
<text  x="805.17" y="463.5" >sta..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="11.2" y="421" width="1.2" height="15.0" fill="rgb(223,131,21)" rx="2" ry="2" />
<text  x="14.18" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (282 samples, 28.17%)</title><rect x="857.6" y="405" width="332.4" height="15.0" fill="rgb(219,74,34)" rx="2" ry="2" />
<text  x="860.57" y="415.5" >do_syscall_64</text>
</g>
<g >
<title>propagate_protected_usage (1 samples, 0.10%)</title><rect x="195.1" y="213" width="1.2" height="15.0" fill="rgb(234,122,25)" rx="2" ry="2" />
<text  x="198.07" y="223.5" ></text>
</g>
<g >
<title>vfs_write (280 samples, 27.97%)</title><rect x="857.6" y="357" width="330.0" height="15.0" fill="rgb(232,52,37)" rx="2" ry="2" />
<text  x="860.57" y="367.5" >vfs_write</text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.10%)</title><rect x="539.3" y="197" width="1.2" height="15.0" fill="rgb(207,144,13)" rx="2" ry="2" />
<text  x="542.29" y="207.5" ></text>
</g>
<g >
<title>psi_group_change (3 samples, 0.30%)</title><rect x="837.5" y="325" width="3.6" height="15.0" fill="rgb(210,67,9)" rx="2" ry="2" />
<text  x="840.53" y="335.5" ></text>
</g>
<g >
<title>pipe_read (370 samples, 36.96%)</title><rect x="152.6" y="325" width="436.2" height="15.0" fill="rgb(249,180,23)" rx="2" ry="2" />
<text  x="155.64" y="335.5" >pipe_read</text>
</g>
<g >
<title>set_next_entity (1 samples, 0.10%)</title><rect x="797.5" y="373" width="1.1" height="15.0" fill="rgb(207,105,10)" rx="2" ry="2" />
<text  x="800.45" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="11.2" y="405" width="1.2" height="15.0" fill="rgb(234,192,46)" rx="2" ry="2" />
<text  x="14.18" y="415.5" ></text>
</g>
<g >
<title>write (1 samples, 0.10%)</title><rect x="109.0" y="373" width="1.2" height="15.0" fill="rgb(209,58,20)" rx="2" ry="2" />
<text  x="112.02" y="383.5" ></text>
</g>
<g >
<title>page_counter_cancel (4 samples, 0.40%)</title><rect x="191.5" y="229" width="4.8" height="15.0" fill="rgb(232,70,21)" rx="2" ry="2" />
<text  x="194.54" y="239.5" ></text>
</g>
<g >
<title>prepare_task_switch (1 samples, 0.10%)</title><rect x="835.2" y="341" width="1.2" height="15.0" fill="rgb(205,89,12)" rx="2" ry="2" />
<text  x="838.17" y="351.5" ></text>
</g>
<g >
<title>ioctl (80 samples, 7.99%)</title><rect x="13.5" y="421" width="94.3" height="15.0" fill="rgb(253,154,40)" rx="2" ry="2" />
<text  x="16.54" y="431.5" >ioctl</text>
</g>
<g >
<title>page_add_new_anon_rmap (7 samples, 0.70%)</title><rect x="531.0" y="181" width="8.3" height="15.0" fill="rgb(244,130,0)" rx="2" ry="2" />
<text  x="534.04" y="191.5" ></text>
</g>
<g >
<title>smp_call_function_single (79 samples, 7.89%)</title><rect x="13.5" y="277" width="93.2" height="15.0" fill="rgb(253,8,19)" rx="2" ry="2" />
<text  x="16.54" y="287.5" >smp_call_fu..</text>
</g>
<g >
<title>nr_iowait_cpu (2 samples, 0.20%)</title><rect x="842.2" y="357" width="2.4" height="15.0" fill="rgb(214,153,17)" rx="2" ry="2" />
<text  x="845.25" y="367.5" ></text>
</g>
<g >
<title>update_load_avg (3 samples, 0.30%)</title><rect x="831.6" y="293" width="3.6" height="15.0" fill="rgb(233,111,47)" rx="2" ry="2" />
<text  x="834.64" y="303.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.10%)</title><rect x="584.1" y="261" width="1.2" height="15.0" fill="rgb(230,195,41)" rx="2" ry="2" />
<text  x="587.09" y="271.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.10%)</title><rect x="823.4" y="357" width="1.2" height="15.0" fill="rgb(215,156,37)" rx="2" ry="2" />
<text  x="826.39" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="397.8" y="229" width="1.2" height="15.0" fill="rgb(221,106,30)" rx="2" ry="2" />
<text  x="400.83" y="239.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.10%)</title><rect x="110.2" y="309" width="1.2" height="15.0" fill="rgb(210,191,8)" rx="2" ry="2" />
<text  x="113.20" y="319.5" ></text>
</g>
<g >
<title>dequeue_task (2 samples, 0.20%)</title><rect x="580.5" y="277" width="2.4" height="15.0" fill="rgb(221,202,4)" rx="2" ry="2" />
<text  x="583.55" y="287.5" ></text>
</g>
<g >
<title>remote_function (79 samples, 7.89%)</title><rect x="13.5" y="245" width="93.2" height="15.0" fill="rgb(221,92,32)" rx="2" ry="2" />
<text  x="16.54" y="255.5" >remote_func..</text>
</g>
<g >
<title>trace_event_buffer_reserve (1 samples, 0.10%)</title><rect x="177.4" y="149" width="1.2" height="15.0" fill="rgb(238,8,1)" rx="2" ry="2" />
<text  x="180.39" y="159.5" ></text>
</g>
<g >
<title>free_unref_page (17 samples, 1.70%)</title><rect x="197.4" y="277" width="20.1" height="15.0" fill="rgb(219,144,40)" rx="2" ry="2" />
<text  x="200.43" y="287.5" ></text>
</g>
<g >
<title>main (1 samples, 0.10%)</title><rect x="10.0" y="453" width="1.2" height="15.0" fill="rgb(241,186,32)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>__cmd_record (1 samples, 0.10%)</title><rect x="11.2" y="485" width="1.2" height="15.0" fill="rgb(250,132,29)" rx="2" ry="2" />
<text  x="14.18" y="495.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.10%)</title><rect x="10.0" y="181" width="1.2" height="15.0" fill="rgb(225,16,48)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (376 samples, 37.56%)</title><rect x="145.6" y="405" width="443.2" height="15.0" fill="rgb(233,184,38)" rx="2" ry="2" />
<text  x="148.56" y="415.5" >do_syscall_64</text>
</g>
<g >
<title>__cond_resched (2 samples, 0.20%)</title><rect x="509.8" y="165" width="2.4" height="15.0" fill="rgb(248,39,12)" rx="2" ry="2" />
<text  x="512.82" y="175.5" ></text>
</g>
<g >
<title>alloc_pages_vma (52 samples, 5.19%)</title><rect x="450.9" y="181" width="61.3" height="15.0" fill="rgb(214,104,6)" rx="2" ry="2" />
<text  x="453.88" y="191.5" >alloc_..</text>
</g>
<g >
<title>tick_nohz_get_sleep_length (2 samples, 0.20%)</title><rect x="828.1" y="325" width="2.4" height="15.0" fill="rgb(207,139,9)" rx="2" ry="2" />
<text  x="831.10" y="335.5" ></text>
</g>
</g>
</svg>
