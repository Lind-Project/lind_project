<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="486.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="469" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="469" > </text>
<g id="frames">
<g >
<title>cpuidle_enter (71,212,861 samples, 0.32%)</title><rect x="1064.1" y="245" width="3.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1067.13" y="255.5" ></text>
</g>
<g >
<title>bprm_execve (6,183,402 samples, 0.03%)</title><rect x="10.8" y="341" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.85" y="351.5" ></text>
</g>
<g >
<title>dispatcher (7,781,563,846 samples, 34.54%)</title><rect x="509.9" y="341" width="407.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="512.86" y="351.5" >dispatcher</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (13,138,158 samples, 0.06%)</title><rect x="10.0" y="405" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (13,138,158 samples, 0.06%)</title><rect x="10.0" y="357" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>bprm_execve (141,053,845 samples, 0.63%)</title><rect x="1033.0" y="341" width="7.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1035.98" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (6,943,549,549 samples, 30.82%)</title><rect x="553.8" y="325" width="363.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="556.75" y="335.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl r..</text>
</g>
<g >
<title>smp_call_function_single (5,070,187 samples, 0.02%)</title><rect x="25.1" y="181" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="28.08" y="191.5" ></text>
</g>
<g >
<title>call_cpuidle (165,314,499 samples, 0.73%)</title><rect x="1181.3" y="261" width="8.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1184.34" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,909,491 samples, 0.02%)</title><rect x="917.5" y="213" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="920.49" y="223.5" ></text>
</g>
<g >
<title>perf (21,656,534 samples, 0.10%)</title><rect x="24.6" y="421" width="1.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="27.58" y="431.5" ></text>
</g>
<g >
<title>ion (6,957,720 samples, 0.03%)</title><rect x="25.3" y="293" width="0.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="28.35" y="303.5" ></text>
</g>
<g >
<title>dispatcher (51,223,429 samples, 0.23%)</title><rect x="38.6" y="389" width="2.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="41.63" y="399.5" ></text>
</g>
<g >
<title>enqueue_task_fair (111,880,380 samples, 0.50%)</title><rect x="1175.5" y="261" width="5.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1178.48" y="271.5" ></text>
</g>
<g >
<title>writerThreadFuncion (8,126,128,338 samples, 36.07%)</title><rect x="491.8" y="373" width="425.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="494.81" y="383.5" >writerThreadFuncion</text>
</g>
<g >
<title>mas_preallocate (139,204,918 samples, 0.62%)</title><rect x="1033.0" y="165" width="7.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1035.98" y="175.5" ></text>
</g>
<g >
<title>exec_binprm (6,183,402 samples, 0.03%)</title><rect x="10.8" y="309" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.85" y="319.5" ></text>
</g>
<g >
<title>enqueue_task (111,880,380 samples, 0.50%)</title><rect x="1175.5" y="277" width="5.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1178.48" y="287.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (442,479,713 samples, 1.96%)</title><rect x="1040.4" y="341" width="23.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1043.40" y="351.5" >c..</text>
</g>
<g >
<title>cpuidle_enter_state (71,212,861 samples, 0.32%)</title><rect x="1064.1" y="229" width="3.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1067.13" y="239.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5,070,187 samples, 0.02%)</title><rect x="25.1" y="53" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="28.08" y="63.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (165,314,499 samples, 0.73%)</title><rect x="1181.3" y="277" width="8.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1184.34" y="287.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (6,183,402 samples, 0.03%)</title><rect x="10.8" y="325" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="13.85" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (81,790,416 samples, 0.36%)</title><rect x="1063.6" y="389" width="4.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1066.62" y="399.5" ></text>
</g>
<g >
<title>pipe-cages (17,024,775,960 samples, 75.57%)</title><rect x="25.7" y="421" width="891.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="28.71" y="431.5" >pipe-cages</text>
</g>
<g >
<title>event_function (5,070,187 samples, 0.02%)</title><rect x="25.1" y="133" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="28.08" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (255,119,757 samples, 1.13%)</title><rect x="11.2" y="405" width="13.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="14.21" y="415.5" ></text>
</g>
<g >
<title>alloc_empty_file (207,055,886 samples, 0.92%)</title><rect x="1138.3" y="309" width="10.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1141.27" y="319.5" ></text>
</g>
<g >
<title>search_binary_handler (6,183,402 samples, 0.03%)</title><rect x="10.8" y="293" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="13.85" y="303.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (6,957,720 samples, 0.03%)</title><rect x="25.3" y="357" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="28.35" y="367.5" ></text>
</g>
<g >
<title>enter_lazy_tlb (281,733,673 samples, 1.25%)</title><rect x="1149.1" y="277" width="14.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1152.12" y="287.5" ></text>
</g>
<g >
<title>lind_write (8,075,405,923 samples, 35.85%)</title><rect x="494.5" y="357" width="423.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="497.46" y="367.5" >lind_write</text>
</g>
<g >
<title>mas_alloc_nodes (139,204,918 samples, 0.62%)</title><rect x="1033.0" y="149" width="7.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1035.98" y="159.5" ></text>
</g>
<g >
<title>__install_special_mapping (139,204,918 samples, 0.62%)</title><rect x="1033.0" y="213" width="7.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1035.98" y="223.5" ></text>
</g>
<g >
<title>cpuidle_enter (165,314,499 samples, 0.73%)</title><rect x="1181.3" y="245" width="8.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1184.34" y="255.5" ></text>
</g>
<g >
<title>schedule (281,733,673 samples, 1.25%)</title><rect x="1149.1" y="293" width="14.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1152.12" y="303.5" ></text>
</g>
<g >
<title>record__pushfn (6,957,720 samples, 0.03%)</title><rect x="25.3" y="325" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="28.35" y="335.5" ></text>
</g>
<g >
<title>rb_insert_color (221,526,510 samples, 0.98%)</title><rect x="1163.9" y="245" width="11.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1166.88" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_openat (6,486,408 samples, 0.03%)</title><rect x="10.3" y="197" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="13.35" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,183,402 samples, 0.03%)</title><rect x="10.8" y="389" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.85" y="399.5" ></text>
</g>
<g >
<title>vfs_write (6,957,720 samples, 0.03%)</title><rect x="25.3" y="197" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="28.35" y="207.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_bulk (139,204,918 samples, 0.62%)</title><rect x="1033.0" y="117" width="7.3" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1035.98" y="127.5" ></text>
</g>
<g >
<title>rmqueue (268,098,771 samples, 1.19%)</title><rect x="55.0" y="165" width="14.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="58.04" y="175.5" ></text>
</g>
<g >
<title>do_sys_openat2 (207,055,886 samples, 0.92%)</title><rect x="1138.3" y="357" width="10.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1141.27" y="367.5" ></text>
</g>
<g >
<title>[[heap]] (92,834,756 samples, 0.41%)</title><rect x="25.7" y="405" width="4.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="28.71" y="415.5" ></text>
</g>
<g >
<title>generic_exec_single (5,070,187 samples, 0.02%)</title><rect x="25.1" y="165" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="28.08" y="175.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (5,070,187 samples, 0.02%)</title><rect x="25.1" y="341" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="28.08" y="351.5" ></text>
</g>
<g >
<title>readerThreadFunction (8,389,525,524 samples, 37.24%)</title><rect x="52.4" y="373" width="439.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="55.35" y="383.5" >readerThreadFunction</text>
</g>
<g >
<title>__rmqueue_pcplist (268,098,771 samples, 1.19%)</title><rect x="55.0" y="149" width="14.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="58.04" y="159.5" ></text>
</g>
<g >
<title>load_elf_binary (255,119,757 samples, 1.13%)</title><rect x="11.2" y="277" width="13.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="14.21" y="287.5" ></text>
</g>
<g >
<title>search_binary_handler (141,053,845 samples, 0.63%)</title><rect x="1033.0" y="293" width="7.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1035.98" y="303.5" ></text>
</g>
<g >
<title>__folio_alloc (268,098,771 samples, 1.19%)</title><rect x="55.0" y="213" width="14.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="58.04" y="223.5" ></text>
</g>
<g >
<title>arch_call_rest_init (165,314,499 samples, 0.73%)</title><rect x="1181.3" y="341" width="8.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1184.34" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,909,491 samples, 0.02%)</title><rect x="917.5" y="325" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="920.49" y="335.5" ></text>
</g>
<g >
<title>cpu_startup_entry (81,790,416 samples, 0.36%)</title><rect x="1063.6" y="309" width="4.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1066.62" y="319.5" ></text>
</g>
<g >
<title>down_write_killable (6,651,750 samples, 0.03%)</title><rect x="10.0" y="229" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (6,486,408 samples, 0.03%)</title><rect x="10.3" y="117" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.35" y="127.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (51,225,061 samples, 0.23%)</title><rect x="33.3" y="389" width="2.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="36.26" y="399.5" ></text>
</g>
<g >
<title>cpu_startup_entry (165,314,499 samples, 0.73%)</title><rect x="1181.3" y="309" width="8.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1184.34" y="319.5" ></text>
</g>
<g >
<title>event_function_call (5,070,187 samples, 0.02%)</title><rect x="25.1" y="197" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="28.08" y="207.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (165,314,499 samples, 0.73%)</title><rect x="1181.3" y="389" width="8.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1184.34" y="399.5" ></text>
</g>
<g >
<title>_perf_ioctl (5,070,187 samples, 0.02%)</title><rect x="25.1" y="245" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="28.08" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (141,651,381 samples, 0.63%)</title><rect x="1033.0" y="389" width="7.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1035.98" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (441,949,140 samples, 1.96%)</title><rect x="1040.4" y="293" width="23.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1043.40" y="303.5" >c..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (525,066,607 samples, 2.33%)</title><rect x="1040.4" y="405" width="27.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1043.40" y="415.5" >s..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (255,119,757 samples, 1.13%)</title><rect x="11.2" y="357" width="13.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="14.21" y="367.5" ></text>
</g>
<g >
<title>arch_call_rest_init (81,790,416 samples, 0.36%)</title><rect x="1063.6" y="341" width="4.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1066.62" y="351.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (255,119,757 samples, 1.13%)</title><rect x="11.2" y="325" width="13.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="14.21" y="335.5" ></text>
</g>
<g >
<title>affinity__set (9,300,152 samples, 0.04%)</title><rect x="24.6" y="341" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="27.59" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (6,651,750 samples, 0.03%)</title><rect x="10.0" y="261" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>exc_page_fault (6,183,402 samples, 0.03%)</title><rect x="10.8" y="213" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.85" y="223.5" ></text>
</g>
<g >
<title>load_elf_interp.constprop.0 (6,183,402 samples, 0.03%)</title><rect x="10.8" y="261" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="13.85" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (5,070,187 samples, 0.02%)</title><rect x="25.1" y="277" width="0.2" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="28.08" y="287.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (42,005,527 samples, 0.19%)</title><rect x="28.4" y="389" width="2.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="31.37" y="399.5" ></text>
</g>
<g >
<title>begin_new_exec (255,119,757 samples, 1.13%)</title><rect x="11.2" y="261" width="13.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="14.21" y="271.5" ></text>
</g>
<g >
<title>start_secondary (333,406,890 samples, 1.48%)</title><rect x="1163.9" y="389" width="17.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1166.88" y="399.5" ></text>
</g>
<g >
<title>exec_mmap (255,119,757 samples, 1.13%)</title><rect x="11.2" y="245" width="13.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="14.21" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (255,119,757 samples, 1.13%)</title><rect x="11.2" y="389" width="13.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.21" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (108,637,718 samples, 0.48%)</title><rect x="46.7" y="389" width="5.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="49.66" y="399.5" ></text>
</g>
<g >
<title>start_kernel (81,790,416 samples, 0.36%)</title><rect x="1063.6" y="357" width="4.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1066.62" y="367.5" ></text>
</g>
<g >
<title>[sleep] (3,909,491 samples, 0.02%)</title><rect x="917.5" y="357" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="920.49" y="367.5" ></text>
</g>
<g >
<title>__rcu_read_lock (207,055,886 samples, 0.92%)</title><rect x="1138.3" y="261" width="10.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1141.27" y="271.5" ></text>
</g>
<g >
<title>swapper (2,330,878,555 samples, 10.35%)</title><rect x="1067.9" y="421" width="122.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1070.91" y="431.5" >swapper</text>
</g>
<g >
<title>asm_exc_page_fault (6,183,402 samples, 0.03%)</title><rect x="10.8" y="229" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.85" y="239.5" ></text>
</g>
<g >
<title>cpuidle_enter (442,479,713 samples, 1.96%)</title><rect x="1040.4" y="309" width="23.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1043.40" y="319.5" >c..</text>
</g>
<g >
<title>[libc.so.6] (3,909,491 samples, 0.02%)</title><rect x="917.5" y="229" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="920.49" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,486,408 samples, 0.03%)</title><rect x="10.3" y="229" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.35" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,363,068,636 samples, 28.25%)</title><rect x="158.5" y="293" width="333.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="161.50" y="303.5" >[libc.so.6]</text>
</g>
<g >
<title>ttwu_do_activate (111,880,380 samples, 0.50%)</title><rect x="1175.5" y="293" width="5.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1178.48" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,651,750 samples, 0.03%)</title><rect x="10.0" y="293" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_poll (281,733,673 samples, 1.25%)</title><rect x="1149.1" y="373" width="14.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1152.12" y="383.5" ></text>
</g>
<g >
<title>ls (7,363,148 samples, 0.03%)</title><rect x="10.8" y="421" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="13.83" y="431.5" ></text>
</g>
<g >
<title>enqueue_entity (111,880,380 samples, 0.50%)</title><rect x="1175.5" y="245" width="5.8" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1178.48" y="255.5" ></text>
</g>
<g >
<title>do_idle (165,314,499 samples, 0.73%)</title><rect x="1181.3" y="293" width="8.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1184.34" y="303.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5,070,187 samples, 0.02%)</title><rect x="25.1" y="69" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="28.08" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_execve (141,053,845 samples, 0.63%)</title><rect x="1033.0" y="373" width="7.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1035.98" y="383.5" ></text>
</g>
<g >
<title>intel_idle (70,475,896 samples, 0.31%)</title><rect x="1064.2" y="213" width="3.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1067.17" y="223.5" ></text>
</g>
<g >
<title>vma_alloc_folio (268,098,771 samples, 1.19%)</title><rect x="55.0" y="229" width="14.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="58.04" y="239.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (281,733,673 samples, 1.25%)</title><rect x="1149.1" y="341" width="14.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1152.12" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,909,491 samples, 0.02%)</title><rect x="917.5" y="245" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="920.49" y="255.5" ></text>
</g>
<g >
<title>expr (15,788,042 samples, 0.07%)</title><rect x="10.0" y="421" width="0.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>_install_special_mapping (139,204,918 samples, 0.62%)</title><rect x="1033.0" y="229" width="7.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1035.98" y="239.5" ></text>
</g>
<g >
<title>start_kernel (165,314,499 samples, 0.73%)</title><rect x="1181.3" y="357" width="8.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1184.34" y="367.5" ></text>
</g>
<g >
<title>do_idle (333,406,890 samples, 1.48%)</title><rect x="1163.9" y="357" width="17.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1166.88" y="367.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (207,055,886 samples, 0.92%)</title><rect x="1138.3" y="277" width="10.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1141.27" y="287.5" ></text>
</g>
<g >
<title>do_idle (81,790,416 samples, 0.36%)</title><rect x="1063.6" y="293" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1066.62" y="303.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (51,160,898 samples, 0.23%)</title><rect x="44.0" y="389" width="2.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="46.98" y="399.5" ></text>
</g>
<g >
<title>[unknown] (261,914,776 samples, 1.16%)</title><rect x="38.6" y="405" width="13.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="41.63" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,486,408 samples, 0.03%)</title><rect x="10.3" y="213" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.35" y="223.5" ></text>
</g>
<g >
<title>cpu_startup_entry (333,406,890 samples, 1.48%)</title><rect x="1163.9" y="373" width="17.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1166.88" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,651,750 samples, 0.03%)</title><rect x="10.0" y="277" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,829,229 samples, 0.23%)</title><rect x="25.7" y="389" width="2.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.71" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_execve (255,119,757 samples, 1.13%)</title><rect x="11.2" y="373" width="13.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="14.21" y="383.5" ></text>
</g>
<g >
<title>__alloc_pages (268,098,771 samples, 1.19%)</title><rect x="55.0" y="197" width="14.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="58.04" y="207.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (7,561,286,277 samples, 33.57%)</title><rect x="95.7" y="309" width="396.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="98.74" y="319.5" >rustposix::interface::pipe::EmulatedPipe::read_from_p..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (13,138,158 samples, 0.06%)</title><rect x="10.0" y="373" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,486,408 samples, 0.03%)</title><rect x="10.3" y="261" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.35" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,909,491 samples, 0.02%)</title><rect x="917.5" y="261" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="920.49" y="271.5" ></text>
</g>
<g >
<title>evlist_cpu_iterator__next (9,300,152 samples, 0.04%)</title><rect x="24.6" y="357" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="27.59" y="367.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (6,957,720 samples, 0.03%)</title><rect x="25.3" y="133" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="28.35" y="143.5" ></text>
</g>
<g >
<title>ksys_write (6,957,720 samples, 0.03%)</title><rect x="25.3" y="213" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="28.35" y="223.5" ></text>
</g>
<g >
<title>exit_mmap (255,119,757 samples, 1.13%)</title><rect x="11.2" y="197" width="13.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="14.21" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,909,491 samples, 0.02%)</title><rect x="917.5" y="309" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="920.49" y="319.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (165,314,499 samples, 0.73%)</title><rect x="1181.3" y="229" width="8.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1184.34" y="239.5" ></text>
</g>
<g >
<title>do_sys_poll (281,733,673 samples, 1.25%)</title><rect x="1149.1" y="357" width="14.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1152.12" y="367.5" ></text>
</g>
<g >
<title>generic_perform_write (6,814,415 samples, 0.03%)</title><rect x="25.4" y="85" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="28.35" y="95.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (281,733,673 samples, 1.25%)</title><rect x="1149.1" y="309" width="14.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1152.12" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (9,300,152 samples, 0.04%)</title><rect x="24.6" y="277" width="0.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="27.59" y="287.5" ></text>
</g>
<g >
<title>intel_idle (220,736,960 samples, 0.98%)</title><rect x="1052.0" y="277" width="11.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1054.99" y="287.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (281,733,673 samples, 1.25%)</title><rect x="1149.1" y="325" width="14.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1152.12" y="335.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (255,119,757 samples, 1.13%)</title><rect x="11.2" y="133" width="13.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="14.21" y="143.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (7,816,676,594 samples, 34.70%)</title><rect x="82.4" y="325" width="409.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="85.36" y="335.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustpos..</text>
</g>
<g >
<title>__x64_sys_write (6,957,720 samples, 0.03%)</title><rect x="25.3" y="229" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="28.35" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (268,098,771 samples, 1.19%)</title><rect x="55.0" y="357" width="14.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="58.04" y="367.5" ></text>
</g>
<g >
<title>__clone (16,515,653,862 samples, 73.31%)</title><rect x="52.4" y="405" width="865.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="55.35" y="415.5" >__clone</text>
</g>
<g >
<title>[anon] (102,567,614 samples, 0.46%)</title><rect x="33.3" y="405" width="5.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="36.26" y="415.5" ></text>
</g>
<g >
<title>handle_pte_fault (268,098,771 samples, 1.19%)</title><rect x="55.0" y="261" width="14.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="58.04" y="271.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,486,408 samples, 0.03%)</title><rect x="10.3" y="309" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.35" y="319.5" ></text>
</g>
<g >
<title>__libc_start_main (3,909,491 samples, 0.02%)</title><rect x="917.5" y="389" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="920.49" y="399.5" ></text>
</g>
<g >
<title>[unknown] (2,200,937,548 samples, 9.77%)</title><rect x="917.7" y="405" width="115.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="920.69" y="415.5" >[unknown]</text>
</g>
<g >
<title>perf_evsel__enable_cpu (5,070,187 samples, 0.02%)</title><rect x="25.1" y="357" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="28.08" y="367.5" ></text>
</g>
<g >
<title>search_binary_handler (255,119,757 samples, 1.13%)</title><rect x="11.2" y="293" width="13.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="14.21" y="303.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (165,314,499 samples, 0.73%)</title><rect x="1181.3" y="373" width="8.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1184.34" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (488,789,559 samples, 2.17%)</title><rect x="1138.3" y="405" width="25.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1141.27" y="415.5" >e..</text>
</g>
<g >
<title>rmqueue_bulk (268,098,771 samples, 1.19%)</title><rect x="55.0" y="133" width="14.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="58.04" y="143.5" ></text>
</g>
<g >
<title>__perf_event_enable (5,070,187 samples, 0.02%)</title><rect x="25.1" y="117" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="28.08" y="127.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (141,053,845 samples, 0.63%)</title><rect x="1033.0" y="357" width="7.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1035.98" y="367.5" ></text>
</g>
<g >
<title>alloc_empty_file (6,486,408 samples, 0.03%)</title><rect x="10.3" y="133" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.35" y="143.5" ></text>
</g>
<g >
<title>call_cpuidle (71,212,861 samples, 0.32%)</title><rect x="1064.1" y="261" width="3.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1067.13" y="271.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (6,651,750 samples, 0.03%)</title><rect x="10.0" y="245" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>sched_setaffinity (9,300,152 samples, 0.04%)</title><rect x="24.6" y="325" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="27.59" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (268,098,771 samples, 1.19%)</title><rect x="55.0" y="293" width="14.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="58.04" y="303.5" ></text>
</g>
<g >
<title>rest_init (81,790,416 samples, 0.36%)</title><rect x="1063.6" y="325" width="4.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1066.62" y="335.5" ></text>
</g>
<g >
<title>do_filp_open (207,055,886 samples, 0.92%)</title><rect x="1138.3" y="341" width="10.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1141.27" y="351.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (6,957,720 samples, 0.03%)</title><rect x="25.3" y="101" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="28.35" y="111.5" ></text>
</g>
<g >
<title>vfs_iter_write (6,957,720 samples, 0.03%)</title><rect x="25.3" y="165" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="28.35" y="175.5" ></text>
</g>
<g >
<title>all (22,527,147,023 samples, 100%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (80,861,119 samples, 0.36%)</title><rect x="1063.6" y="277" width="4.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1066.62" y="287.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (218,483,664 samples, 0.97%)</title><rect x="1040.5" y="245" width="11.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1043.54" y="255.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (141,053,845 samples, 0.63%)</title><rect x="1033.0" y="325" width="7.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1035.98" y="335.5" ></text>
</g>
<g >
<title>_perf_event_enable (5,070,187 samples, 0.02%)</title><rect x="25.1" y="213" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="28.08" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (488,789,559 samples, 2.17%)</title><rect x="1138.3" y="389" width="25.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1141.27" y="399.5" >d..</text>
</g>
<g >
<title>__x64_sys_openat (207,055,886 samples, 0.92%)</title><rect x="1138.3" y="373" width="10.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1141.27" y="383.5" ></text>
</g>
<g >
<title>do_iter_write (6,957,720 samples, 0.03%)</title><rect x="25.3" y="149" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="28.35" y="159.5" ></text>
</g>
<g >
<title>sched_setaffinity (9,300,152 samples, 0.04%)</title><rect x="24.6" y="261" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="27.59" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (211,866,790 samples, 0.94%)</title><rect x="1127.2" y="405" width="11.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1130.18" y="415.5" ></text>
</g>
<g >
<title>vma_link (139,204,918 samples, 0.62%)</title><rect x="1033.0" y="181" width="7.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1035.98" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (518,893,537 samples, 2.30%)</title><rect x="876.1" y="293" width="27.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="879.08" y="303.5" >[..</text>
</g>
<g >
<title>start_secondary (443,276,191 samples, 1.97%)</title><rect x="1040.4" y="389" width="23.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1043.40" y="399.5" >s..</text>
</g>
<g >
<title>record__mmap_read_all (6,957,720 samples, 0.03%)</title><rect x="25.3" y="373" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="28.35" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (141,651,381 samples, 0.63%)</title><rect x="1033.0" y="405" width="7.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1035.98" y="415.5" ></text>
</g>
<g >
<title>dl_task_check_affinity (9,300,152 samples, 0.04%)</title><rect x="24.6" y="245" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="27.59" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (6,183,402 samples, 0.03%)</title><rect x="10.8" y="197" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.85" y="207.5" ></text>
</g>
<g >
<title>exec_binprm (141,053,845 samples, 0.63%)</title><rect x="1033.0" y="309" width="7.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1035.98" y="319.5" ></text>
</g>
<g >
<title>__evlist__enable (14,370,339 samples, 0.06%)</title><rect x="24.6" y="373" width="0.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="27.59" y="383.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (111,880,380 samples, 0.50%)</title><rect x="1175.5" y="341" width="5.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1178.48" y="351.5" ></text>
</g>
<g >
<title>_dl_catch_exception (6,486,408 samples, 0.03%)</title><rect x="10.3" y="325" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.35" y="335.5" ></text>
</g>
<g >
<title>lind_read (8,070,149,964 samples, 35.82%)</title><rect x="69.1" y="357" width="422.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="72.08" y="367.5" >lind_read</text>
</g>
<g >
<title>__cmd_record (21,656,534 samples, 0.10%)</title><rect x="24.6" y="389" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="27.58" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,374,428 samples, 0.01%)</title><rect x="1032.8" y="373" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1035.84" y="383.5" ></text>
</g>
<g >
<title>_compound_head (255,119,757 samples, 1.13%)</title><rect x="11.2" y="117" width="13.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="14.21" y="127.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (51,334,099 samples, 0.23%)</title><rect x="551.1" y="325" width="2.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="554.06" y="335.5" ></text>
</g>
<g >
<title>path_openat (6,486,408 samples, 0.03%)</title><rect x="10.3" y="149" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="13.35" y="159.5" ></text>
</g>
<g >
<title>perf-exec (255,119,757 samples, 1.13%)</title><rect x="11.2" y="421" width="13.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="14.21" y="431.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (6,486,408 samples, 0.03%)</title><rect x="10.3" y="101" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.35" y="111.5" ></text>
</g>
<g >
<title>insert_vm_struct (139,204,918 samples, 0.62%)</title><rect x="1033.0" y="197" width="7.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1035.98" y="207.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (6,957,720 samples, 0.03%)</title><rect x="25.3" y="117" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="28.35" y="127.5" ></text>
</g>
<g >
<title>do_user_addr_fault (268,098,771 samples, 1.19%)</title><rect x="55.0" y="309" width="14.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="58.04" y="319.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (13,138,158 samples, 0.06%)</title><rect x="10.0" y="341" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>record__write (6,957,720 samples, 0.03%)</title><rect x="25.3" y="309" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="28.35" y="319.5" ></text>
</g>
<g >
<title>path_openat (207,055,886 samples, 0.92%)</title><rect x="1138.3" y="325" width="10.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1141.27" y="335.5" ></text>
</g>
<g >
<title>arch_setup_additional_pages (139,204,918 samples, 0.62%)</title><rect x="1033.0" y="261" width="7.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1035.98" y="271.5" ></text>
</g>
<g >
<title>unmap_single_vma (255,119,757 samples, 1.13%)</title><rect x="11.2" y="165" width="13.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="14.21" y="175.5" ></text>
</g>
<g >
<title>unmap_vmas (255,119,757 samples, 1.13%)</title><rect x="11.2" y="181" width="13.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="14.21" y="191.5" ></text>
</g>
<g >
<title>copy_page_from_iter_atomic (6,654,219 samples, 0.03%)</title><rect x="25.4" y="69" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="28.35" y="79.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (221,526,510 samples, 0.98%)</title><rect x="1163.9" y="325" width="11.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1166.88" y="335.5" ></text>
</g>
<g >
<title>do_sys_openat2 (6,486,408 samples, 0.03%)</title><rect x="10.3" y="181" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="13.35" y="191.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (5,070,187 samples, 0.02%)</title><rect x="25.1" y="229" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="28.08" y="239.5" ></text>
</g>
<g >
<title>load_elf_binary (6,183,402 samples, 0.03%)</title><rect x="10.8" y="277" width="0.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.85" y="287.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (13,138,158 samples, 0.06%)</title><rect x="10.0" y="389" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (221,526,510 samples, 0.98%)</title><rect x="1163.9" y="293" width="11.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1166.88" y="303.5" ></text>
</g>
<g >
<title>do_anonymous_page (268,098,771 samples, 1.19%)</title><rect x="55.0" y="245" width="14.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="58.04" y="255.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (51,342,553 samples, 0.23%)</title><rect x="35.9" y="389" width="2.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="38.95" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (221,526,510 samples, 0.98%)</title><rect x="1163.9" y="309" width="11.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1166.88" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,909,491 samples, 0.02%)</title><rect x="917.5" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="920.49" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_execve (6,183,402 samples, 0.03%)</title><rect x="10.8" y="373" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.85" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,300,152 samples, 0.04%)</title><rect x="24.6" y="309" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="27.59" y="319.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,651,750 samples, 0.03%)</title><rect x="10.0" y="309" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (221,526,510 samples, 0.98%)</title><rect x="1163.9" y="261" width="11.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1166.88" y="271.5" ></text>
</g>
<g >
<title>exc_page_fault (268,098,771 samples, 1.19%)</title><rect x="55.0" y="325" width="14.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="58.04" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,070,187 samples, 0.02%)</title><rect x="25.1" y="309" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="28.08" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (16,515,653,862 samples, 73.31%)</title><rect x="52.4" y="389" width="865.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="55.35" y="399.5" >[libc.so.6]</text>
</g>
<g >
<title>do_execveat_common.isra.0 (6,183,402 samples, 0.03%)</title><rect x="10.8" y="357" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.85" y="367.5" ></text>
</g>
<g >
<title>intel_idle (165,314,499 samples, 0.73%)</title><rect x="1181.3" y="213" width="8.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1184.34" y="223.5" ></text>
</g>
<g >
<title>ioctl (5,070,187 samples, 0.02%)</title><rect x="25.1" y="325" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="28.08" y="335.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (498,721,389 samples, 2.21%)</title><rect x="1163.9" y="405" width="26.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1166.88" y="415.5" >s..</text>
</g>
<g >
<title>do_syscall_64 (9,300,152 samples, 0.04%)</title><rect x="24.6" y="293" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="27.59" y="303.5" ></text>
</g>
<g >
<title>load_elf_binary (141,053,845 samples, 0.63%)</title><rect x="1033.0" y="277" width="7.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1035.98" y="287.5" ></text>
</g>
<g >
<title>mmput (255,119,757 samples, 1.13%)</title><rect x="11.2" y="229" width="13.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="14.21" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,909,491 samples, 0.02%)</title><rect x="917.5" y="277" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="920.49" y="287.5" ></text>
</g>
<g >
<title>perf_ioctl (5,070,187 samples, 0.02%)</title><rect x="25.1" y="261" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="28.08" y="271.5" ></text>
</g>
<g >
<title>[[stack]] (51,329,399 samples, 0.23%)</title><rect x="30.6" y="405" width="2.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="33.57" y="415.5" ></text>
</g>
<g >
<title>lind_write (50,892,731 samples, 0.23%)</title><rect x="41.3" y="389" width="2.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="44.32" y="399.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (81,790,416 samples, 0.36%)</title><rect x="1063.6" y="373" width="4.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1066.62" y="383.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (111,880,380 samples, 0.50%)</title><rect x="1175.5" y="309" width="5.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1178.48" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,070,187 samples, 0.02%)</title><rect x="25.1" y="293" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="28.08" y="303.5" ></text>
</g>
<g >
<title>sleep (2,871,565,027 samples, 12.75%)</title><rect x="917.5" y="421" width="150.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="920.49" y="431.5" >sleep</text>
</g>
<g >
<title>remote_function (5,070,187 samples, 0.02%)</title><rect x="25.1" y="149" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="28.08" y="159.5" ></text>
</g>
<g >
<title>perf_ctx_enable (5,070,187 samples, 0.02%)</title><rect x="25.1" y="85" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="28.08" y="95.5" ></text>
</g>
<g >
<title>rest_init (165,314,499 samples, 0.73%)</title><rect x="1181.3" y="325" width="8.7" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1184.34" y="335.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (6,054,982,154 samples, 26.88%)</title><rect x="600.3" y="309" width="317.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="603.30" y="319.5" >rustposix::interface::pipe::EmulatedPipe::..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,486,408 samples, 0.03%)</title><rect x="10.3" y="293" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.35" y="303.5" ></text>
</g>
<g >
<title>[unknown] (21,656,534 samples, 0.10%)</title><rect x="24.6" y="405" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="27.58" y="415.5" ></text>
</g>
<g >
<title>perf_mmap__push (6,957,720 samples, 0.03%)</title><rect x="25.3" y="341" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="28.35" y="351.5" ></text>
</g>
<g >
<title>get_page_from_freelist (268,098,771 samples, 1.19%)</title><rect x="55.0" y="181" width="14.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="58.04" y="191.5" ></text>
</g>
<g >
<title>up_read (6,183,402 samples, 0.03%)</title><rect x="10.8" y="181" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="13.85" y="191.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,486,408 samples, 0.03%)</title><rect x="10.3" y="277" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.35" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,374,428 samples, 0.01%)</title><rect x="1032.8" y="389" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1035.84" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,957,720 samples, 0.03%)</title><rect x="25.3" y="261" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="28.35" y="271.5" ></text>
</g>
<g >
<title>__sched_yield (271,181,730 samples, 1.20%)</title><rect x="903.3" y="293" width="14.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="906.26" y="303.5" ></text>
</g>
<g >
<title>native_write_msr (5,070,187 samples, 0.02%)</title><rect x="25.1" y="37" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="28.08" y="47.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (111,880,380 samples, 0.50%)</title><rect x="1175.5" y="325" width="5.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1178.48" y="335.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,486,408 samples, 0.03%)</title><rect x="10.3" y="245" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.35" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (221,212,180 samples, 0.98%)</title><rect x="1040.4" y="277" width="11.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1043.40" y="287.5" ></text>
</g>
<g >
<title>map_vdso (139,204,918 samples, 0.62%)</title><rect x="1033.0" y="245" width="7.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1035.98" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,183,402 samples, 0.03%)</title><rect x="10.8" y="405" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.85" y="415.5" ></text>
</g>
<g >
<title>call_cpuidle (442,479,713 samples, 1.96%)</title><rect x="1040.4" y="325" width="23.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1043.40" y="335.5" >c..</text>
</g>
<g >
<title>__hrtimer_start_range_ns (221,526,510 samples, 0.98%)</title><rect x="1163.9" y="277" width="11.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1166.88" y="287.5" ></text>
</g>
<g >
<title>[sleep] (3,909,491 samples, 0.02%)</title><rect x="917.5" y="405" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="920.49" y="415.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (221,526,510 samples, 0.98%)</title><rect x="1163.9" y="341" width="11.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1166.88" y="351.5" ></text>
</g>
<g >
<title>setlocale (3,909,491 samples, 0.02%)</title><rect x="917.5" y="341" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="920.49" y="351.5" ></text>
</g>
<g >
<title>write (6,957,720 samples, 0.03%)</title><rect x="25.3" y="277" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="28.35" y="287.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_bulk (139,204,918 samples, 0.62%)</title><rect x="1033.0" y="133" width="7.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1035.98" y="143.5" ></text>
</g>
<g >
<title>unmap_page_range (255,119,757 samples, 1.13%)</title><rect x="11.2" y="149" width="13.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="14.21" y="159.5" ></text>
</g>
<g >
<title>do_filp_open (6,486,408 samples, 0.03%)</title><rect x="10.3" y="165" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="13.35" y="175.5" ></text>
</g>
<g >
<title>do_idle (443,276,191 samples, 1.97%)</title><rect x="1040.4" y="357" width="23.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1043.40" y="367.5" >d..</text>
</g>
<g >
<title>do_syscall_64 (6,957,720 samples, 0.03%)</title><rect x="25.3" y="245" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="28.35" y="255.5" ></text>
</g>
<g >
<title>padzero (6,183,402 samples, 0.03%)</title><rect x="10.8" y="245" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.85" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (221,212,180 samples, 0.98%)</title><rect x="1040.4" y="261" width="11.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1043.40" y="271.5" ></text>
</g>
<g >
<title>cpu_startup_entry (443,276,191 samples, 1.97%)</title><rect x="1040.4" y="373" width="23.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1043.40" y="383.5" >c..</text>
</g>
<g >
<title>dispatcher (7,968,551,987 samples, 35.37%)</title><rect x="74.4" y="341" width="417.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="77.41" y="351.5" >dispatcher</text>
</g>
<g >
<title>exec_binprm (255,119,757 samples, 1.13%)</title><rect x="11.2" y="309" width="13.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="14.21" y="319.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (6,651,750 samples, 0.03%)</title><rect x="10.0" y="325" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,909,491 samples, 0.02%)</title><rect x="917.5" y="293" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="920.49" y="303.5" ></text>
</g>
<g >
<title>ovl_write_iter (6,957,720 samples, 0.03%)</title><rect x="25.3" y="181" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="28.35" y="191.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (268,098,771 samples, 1.19%)</title><rect x="55.0" y="341" width="14.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="58.04" y="351.5" ></text>
</g>
<g >
<title>dispatcher (51,329,399 samples, 0.23%)</title><rect x="30.6" y="389" width="2.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="33.57" y="399.5" ></text>
</g>
<g >
<title>__mmput (255,119,757 samples, 1.13%)</title><rect x="11.2" y="213" width="13.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="14.21" y="223.5" ></text>
</g>
<g >
<title>ctx_resched (5,070,187 samples, 0.02%)</title><rect x="25.1" y="101" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="28.08" y="111.5" ></text>
</g>
<g >
<title>__handle_mm_fault (268,098,771 samples, 1.19%)</title><rect x="55.0" y="277" width="14.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="58.04" y="287.5" ></text>
</g>
<g >
<title>copyin (6,654,219 samples, 0.03%)</title><rect x="25.4" y="53" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="28.35" y="63.5" ></text>
</g>
<g >
<title>bprm_execve (255,119,757 samples, 1.13%)</title><rect x="11.2" y="341" width="13.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="14.21" y="351.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (207,055,886 samples, 0.92%)</title><rect x="1138.3" y="293" width="10.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1141.27" y="303.5" ></text>
</g>
</g>
</svg>
