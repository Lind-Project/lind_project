<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1414" onload="init(evt)" viewBox="0 0 1200 1414" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1414.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1397" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1397" > </text>
<g id="frames">
<g >
<title>set_next_entity (2 samples, 0.12%)</title><rect x="1181.7" y="1221" width="1.4" height="15.0" fill="rgb(240,34,3)" rx="2" ry="2" />
<text  x="1184.68" y="1231.5" ></text>
</g>
<g >
<title>__x64_sys_write (2 samples, 0.12%)</title><rect x="88.4" y="1301" width="1.4" height="15.0" fill="rgb(230,179,21)" rx="2" ry="2" />
<text  x="91.39" y="1311.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.06%)</title><rect x="938.9" y="981" width="0.7" height="15.0" fill="rgb(225,155,6)" rx="2" ry="2" />
<text  x="941.88" y="991.5" ></text>
</g>
<g >
<title>NaClSyscallSegRegsSaved (1,226 samples, 72.08%)</title><rect x="89.8" y="1333" width="850.5" height="15.0" fill="rgb(243,147,22)" rx="2" ry="2" />
<text  x="92.78" y="1343.5" >NaClSyscallSegRegsSaved</text>
</g>
<g >
<title>vfs_iter_write (17 samples, 1.00%)</title><rect x="74.5" y="1061" width="11.8" height="15.0" fill="rgb(241,103,12)" rx="2" ry="2" />
<text  x="77.51" y="1071.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.06%)</title><rect x="1173.4" y="1045" width="0.6" height="15.0" fill="rgb(235,45,2)" rx="2" ry="2" />
<text  x="1176.35" y="1055.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="10.0" y="1077" width="0.7" height="15.0" fill="rgb(241,14,42)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" ></text>
</g>
<g >
<title>cap_inode_need_killpriv (1 samples, 0.06%)</title><rect x="630.9" y="997" width="0.7" height="15.0" fill="rgb(230,206,33)" rx="2" ry="2" />
<text  x="633.87" y="1007.5" ></text>
</g>
<g >
<title>lind_write (830 samples, 48.79%)</title><rect x="364.5" y="1269" width="575.8" height="15.0" fill="rgb(254,35,33)" rx="2" ry="2" />
<text  x="367.49" y="1279.5" >lind_write</text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.06%)</title><rect x="417.9" y="885" width="0.7" height="15.0" fill="rgb(219,187,54)" rx="2" ry="2" />
<text  x="420.90" y="895.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.06%)</title><rect x="561.5" y="901" width="0.7" height="15.0" fill="rgb(217,183,23)" rx="2" ry="2" />
<text  x="564.50" y="911.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.06%)</title><rect x="364.5" y="1125" width="0.7" height="15.0" fill="rgb(206,131,39)" rx="2" ry="2" />
<text  x="367.49" y="1135.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.41%)</title><rect x="651.0" y="1189" width="4.8" height="15.0" fill="rgb(236,169,22)" rx="2" ry="2" />
<text  x="653.99" y="1199.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (17 samples, 1.00%)</title><rect x="74.5" y="1029" width="11.8" height="15.0" fill="rgb(227,181,17)" rx="2" ry="2" />
<text  x="77.51" y="1039.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.06%)</title><rect x="1078.3" y="1221" width="0.7" height="15.0" fill="rgb(239,13,5)" rx="2" ry="2" />
<text  x="1081.31" y="1231.5" ></text>
</g>
<g >
<title>__GI___clone (1 samples, 0.06%)</title><rect x="994.4" y="1333" width="0.7" height="15.0" fill="rgb(219,181,34)" rx="2" ry="2" />
<text  x="997.37" y="1343.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (440 samples, 25.87%)</title><rect x="633.6" y="1221" width="305.3" height="15.0" fill="rgb(252,80,25)" rx="2" ry="2" />
<text  x="636.64" y="1231.5" >rustposix::interface::pipe::EmulatedPipe:..</text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (1 samples, 0.06%)</title><rect x="938.9" y="1029" width="0.7" height="15.0" fill="rgb(233,41,35)" rx="2" ry="2" />
<text  x="941.88" y="1039.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (2 samples, 0.12%)</title><rect x="1000.6" y="773" width="1.4" height="15.0" fill="rgb(217,93,7)" rx="2" ry="2" />
<text  x="1003.62" y="783.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (2 samples, 0.12%)</title><rect x="1000.6" y="741" width="1.4" height="15.0" fill="rgb(211,135,10)" rx="2" ry="2" />
<text  x="1003.62" y="751.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.06%)</title><rect x="1000.6" y="501" width="0.7" height="15.0" fill="rgb(215,9,29)" rx="2" ry="2" />
<text  x="1003.62" y="511.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (6 samples, 0.35%)</title><rect x="160.5" y="1253" width="4.2" height="15.0" fill="rgb(207,123,15)" rx="2" ry="2" />
<text  x="163.53" y="1263.5" ></text>
</g>
<g >
<title>__run_hrtimer (3 samples, 0.18%)</title><rect x="1081.8" y="1125" width="2.1" height="15.0" fill="rgb(222,74,43)" rx="2" ry="2" />
<text  x="1084.78" y="1135.5" ></text>
</g>
<g >
<title>perf_ioctl (1 samples, 0.06%)</title><rect x="87.0" y="1285" width="0.7" height="15.0" fill="rgb(217,215,43)" rx="2" ry="2" />
<text  x="90.00" y="1295.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.06%)</title><rect x="1187.2" y="1253" width="0.7" height="15.0" fill="rgb(221,154,34)" rx="2" ry="2" />
<text  x="1190.23" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.06%)</title><rect x="10.7" y="1333" width="0.7" height="15.0" fill="rgb(248,32,54)" rx="2" ry="2" />
<text  x="13.69" y="1343.5" ></text>
</g>
<g >
<title>ovl_other_xattr_get (1 samples, 0.06%)</title><rect x="630.9" y="965" width="0.7" height="15.0" fill="rgb(232,131,41)" rx="2" ry="2" />
<text  x="633.87" y="975.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.06%)</title><rect x="1083.2" y="1077" width="0.7" height="15.0" fill="rgb(211,155,4)" rx="2" ry="2" />
<text  x="1086.17" y="1087.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (1 samples, 0.06%)</title><rect x="82.8" y="917" width="0.7" height="15.0" fill="rgb(250,130,28)" rx="2" ry="2" />
<text  x="85.84" y="927.5" ></text>
</g>
<g >
<title>ext4_set_page_dirty (6 samples, 0.35%)</title><rect x="592.7" y="997" width="4.2" height="15.0" fill="rgb(230,185,1)" rx="2" ry="2" />
<text  x="595.72" y="1007.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (221 samples, 12.99%)</title><rect x="785.6" y="1173" width="153.3" height="15.0" fill="rgb(252,138,0)" rx="2" ry="2" />
<text  x="788.57" y="1183.5" >ringbuf::ring_buffe..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="1000.6" y="581" width="0.7" height="15.0" fill="rgb(214,74,7)" rx="2" ry="2" />
<text  x="1003.62" y="591.5" ></text>
</g>
<g >
<title>cap_inode_getsecurity (1 samples, 0.06%)</title><rect x="630.9" y="901" width="0.7" height="15.0" fill="rgb(209,104,30)" rx="2" ry="2" />
<text  x="633.87" y="911.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.06%)</title><rect x="364.5" y="1109" width="0.7" height="15.0" fill="rgb(206,0,32)" rx="2" ry="2" />
<text  x="367.49" y="1119.5" ></text>
</g>
<g >
<title>seq_putc (1 samples, 0.06%)</title><rect x="71.7" y="1061" width="0.7" height="15.0" fill="rgb(228,149,0)" rx="2" ry="2" />
<text  x="74.74" y="1071.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.06%)</title><rect x="476.9" y="853" width="0.7" height="15.0" fill="rgb(239,14,43)" rx="2" ry="2" />
<text  x="479.87" y="863.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (1 samples, 0.06%)</title><rect x="1000.6" y="277" width="0.7" height="15.0" fill="rgb(210,186,25)" rx="2" ry="2" />
<text  x="1003.62" y="287.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.06%)</title><rect x="1167.1" y="1189" width="0.7" height="15.0" fill="rgb(205,65,14)" rx="2" ry="2" />
<text  x="1170.11" y="1199.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.06%)</title><rect x="605.2" y="1093" width="0.7" height="15.0" fill="rgb(243,85,53)" rx="2" ry="2" />
<text  x="608.20" y="1103.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (2 samples, 0.12%)</title><rect x="1000.6" y="917" width="1.4" height="15.0" fill="rgb(237,53,23)" rx="2" ry="2" />
<text  x="1003.62" y="927.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (42 samples, 2.47%)</title><rect x="333.3" y="1157" width="29.1" height="15.0" fill="rgb(239,191,22)" rx="2" ry="2" />
<text  x="336.27" y="1167.5" >ri..</text>
</g>
<g >
<title>generic_perform_write (16 samples, 0.94%)</title><rect x="75.2" y="981" width="11.1" height="15.0" fill="rgb(226,28,36)" rx="2" ry="2" />
<text  x="78.21" y="991.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.06%)</title><rect x="963.9" y="1029" width="0.6" height="15.0" fill="rgb(214,23,32)" rx="2" ry="2" />
<text  x="966.85" y="1039.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (44 samples, 2.59%)</title><rect x="331.9" y="1205" width="30.5" height="15.0" fill="rgb(237,61,33)" rx="2" ry="2" />
<text  x="334.88" y="1215.5" >ri..</text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.06%)</title><rect x="1167.1" y="1157" width="0.7" height="15.0" fill="rgb(209,189,6)" rx="2" ry="2" />
<text  x="1170.11" y="1167.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt_r (4 samples, 0.24%)</title><rect x="630.9" y="1157" width="2.7" height="15.0" fill="rgb(230,91,54)" rx="2" ry="2" />
<text  x="633.87" y="1167.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="10.0" y="901" width="0.7" height="15.0" fill="rgb(243,115,37)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>ext4_set_page_dirty (2 samples, 0.12%)</title><rect x="591.3" y="1013" width="1.4" height="15.0" fill="rgb(234,91,38)" rx="2" ry="2" />
<text  x="594.33" y="1023.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.06%)</title><rect x="83.5" y="885" width="0.7" height="15.0" fill="rgb(235,75,14)" rx="2" ry="2" />
<text  x="86.53" y="895.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.06%)</title><rect x="238.2" y="1125" width="0.7" height="15.0" fill="rgb(206,209,19)" rx="2" ry="2" />
<text  x="241.23" y="1135.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.06%)</title><rect x="650.3" y="1157" width="0.7" height="15.0" fill="rgb(236,112,52)" rx="2" ry="2" />
<text  x="653.29" y="1167.5" ></text>
</g>
<g >
<title>__fput (2 samples, 0.12%)</title><rect x="1072.1" y="1221" width="1.4" height="15.0" fill="rgb(247,179,1)" rx="2" ry="2" />
<text  x="1075.07" y="1231.5" ></text>
</g>
<g >
<title>__vma_rb_erase (1 samples, 0.06%)</title><rect x="158.5" y="1093" width="0.6" height="15.0" fill="rgb(253,46,23)" rx="2" ry="2" />
<text  x="161.45" y="1103.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (12 samples, 0.71%)</title><rect x="323.6" y="1205" width="8.3" height="15.0" fill="rgb(236,175,0)" rx="2" ry="2" />
<text  x="326.56" y="1215.5" ></text>
</g>
<g >
<title>get_recent_times.isra.0 (1 samples, 0.06%)</title><rect x="1079.0" y="1237" width="0.7" height="15.0" fill="rgb(238,17,41)" rx="2" ry="2" />
<text  x="1082.01" y="1247.5" ></text>
</g>
<g >
<title>handle_pte_fault (23 samples, 1.35%)</title><rect x="304.8" y="1077" width="16.0" height="15.0" fill="rgb(227,113,51)" rx="2" ry="2" />
<text  x="307.83" y="1087.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.06%)</title><rect x="1167.1" y="1205" width="0.7" height="15.0" fill="rgb(221,53,45)" rx="2" ry="2" />
<text  x="1170.11" y="1215.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.06%)</title><rect x="1081.1" y="1205" width="0.7" height="15.0" fill="rgb(210,139,22)" rx="2" ry="2" />
<text  x="1084.09" y="1215.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (1 samples, 0.06%)</title><rect x="89.8" y="1317" width="0.7" height="15.0" fill="rgb(218,3,41)" rx="2" ry="2" />
<text  x="92.78" y="1327.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="235.5" y="1109" width="0.6" height="15.0" fill="rgb(238,162,3)" rx="2" ry="2" />
<text  x="238.46" y="1119.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (2 samples, 0.12%)</title><rect x="938.9" y="1173" width="1.4" height="15.0" fill="rgb(228,111,14)" rx="2" ry="2" />
<text  x="941.88" y="1183.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="460.2" y="885" width="0.7" height="15.0" fill="rgb(233,80,45)" rx="2" ry="2" />
<text  x="463.22" y="895.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.24%)</title><rect x="411.0" y="901" width="2.7" height="15.0" fill="rgb(220,7,26)" rx="2" ry="2" />
<text  x="413.96" y="911.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="477.6" y="869" width="0.7" height="15.0" fill="rgb(230,223,39)" rx="2" ry="2" />
<text  x="480.56" y="879.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.06%)</title><rect x="236.1" y="1109" width="0.7" height="15.0" fill="rgb(238,60,19)" rx="2" ry="2" />
<text  x="239.15" y="1119.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u64 (1 samples, 0.06%)</title><rect x="939.6" y="1029" width="0.7" height="15.0" fill="rgb(232,141,4)" rx="2" ry="2" />
<text  x="942.57" y="1039.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.06%)</title><rect x="1089.4" y="949" width="0.7" height="15.0" fill="rgb(247,23,26)" rx="2" ry="2" />
<text  x="1092.41" y="959.5" ></text>
</g>
<g >
<title>block_page_mkwrite (91 samples, 5.35%)</title><rect x="518.5" y="997" width="63.1" height="15.0" fill="rgb(233,32,35)" rx="2" ry="2" />
<text  x="521.49" y="1007.5" >block_..</text>
</g>
<g >
<title>page_mapped (1 samples, 0.06%)</title><rect x="188.3" y="805" width="0.7" height="15.0" fill="rgb(244,168,37)" rx="2" ry="2" />
<text  x="191.28" y="815.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (1 samples, 0.06%)</title><rect x="544.9" y="869" width="0.6" height="15.0" fill="rgb(245,178,49)" rx="2" ry="2" />
<text  x="547.85" y="879.5" ></text>
</g>
<g >
<title>Process1Operand (1 samples, 0.06%)</title><rect x="155.0" y="1205" width="0.7" height="15.0" fill="rgb(211,64,33)" rx="2" ry="2" />
<text  x="157.99" y="1215.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3 samples, 0.18%)</title><rect x="1081.8" y="1173" width="2.1" height="15.0" fill="rgb(207,185,49)" rx="2" ry="2" />
<text  x="1084.78" y="1183.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (12 samples, 0.71%)</title><rect x="323.6" y="1189" width="8.3" height="15.0" fill="rgb(220,212,36)" rx="2" ry="2" />
<text  x="326.56" y="1199.5" ></text>
</g>
<g >
<title>xas_load (2 samples, 0.12%)</title><rect x="508.1" y="917" width="1.4" height="15.0" fill="rgb(229,226,21)" rx="2" ry="2" />
<text  x="511.08" y="927.5" ></text>
</g>
<g >
<title>security_inode_need_killpriv (1 samples, 0.06%)</title><rect x="630.9" y="1013" width="0.7" height="15.0" fill="rgb(209,137,23)" rx="2" ry="2" />
<text  x="633.87" y="1023.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.06%)</title><rect x="240.3" y="1173" width="0.7" height="15.0" fill="rgb(205,203,10)" rx="2" ry="2" />
<text  x="243.31" y="1183.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.06%)</title><rect x="938.9" y="997" width="0.7" height="15.0" fill="rgb(250,42,24)" rx="2" ry="2" />
<text  x="941.88" y="1007.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.06%)</title><rect x="1000.6" y="517" width="0.7" height="15.0" fill="rgb(232,1,52)" rx="2" ry="2" />
<text  x="1003.62" y="527.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (376 samples, 22.10%)</title><rect x="367.3" y="1205" width="260.8" height="15.0" fill="rgb(244,229,6)" rx="2" ry="2" />
<text  x="370.26" y="1215.5" >core::slice::&lt;impl [T]&gt;::copy_from..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="1163.6" y="1173" width="0.7" height="15.0" fill="rgb(221,81,8)" rx="2" ry="2" />
<text  x="1166.64" y="1183.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (150 samples, 8.82%)</title><rect x="657.2" y="1173" width="104.1" height="15.0" fill="rgb(221,66,25)" rx="2" ry="2" />
<text  x="660.23" y="1183.5" >ringbuf::pro..</text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.06%)</title><rect x="234.8" y="1157" width="0.7" height="15.0" fill="rgb(211,190,31)" rx="2" ry="2" />
<text  x="237.76" y="1167.5" ></text>
</g>
<g >
<title>ovl_xattr_get (1 samples, 0.06%)</title><rect x="630.9" y="949" width="0.7" height="15.0" fill="rgb(211,63,35)" rx="2" ry="2" />
<text  x="633.87" y="959.5" ></text>
</g>
<g >
<title>CachedMapWritableText (1 samples, 0.06%)</title><rect x="133.5" y="1237" width="0.7" height="15.0" fill="rgb(211,228,10)" rx="2" ry="2" />
<text  x="136.48" y="1247.5" ></text>
</g>
<g >
<title>filemap_map_pages (23 samples, 1.35%)</title><rect x="304.8" y="1029" width="16.0" height="15.0" fill="rgb(230,133,39)" rx="2" ry="2" />
<text  x="307.83" y="1039.5" ></text>
</g>
<g >
<title>process_vm_writev (2 samples, 0.12%)</title><rect x="963.2" y="1285" width="1.3" height="15.0" fill="rgb(237,178,9)" rx="2" ry="2" />
<text  x="966.16" y="1295.5" ></text>
</g>
<g >
<title>set_page_dirty (14 samples, 0.82%)</title><rect x="118.9" y="933" width="9.7" height="15.0" fill="rgb(210,141,25)" rx="2" ry="2" />
<text  x="121.91" y="943.5" ></text>
</g>
<g >
<title>mmput (2 samples, 0.12%)</title><rect x="1070.7" y="1237" width="1.4" height="15.0" fill="rgb(238,193,49)" rx="2" ry="2" />
<text  x="1073.68" y="1247.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (6 samples, 0.35%)</title><rect x="160.5" y="1237" width="4.2" height="15.0" fill="rgb(214,76,47)" rx="2" ry="2" />
<text  x="163.53" y="1247.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.06%)</title><rect x="89.1" y="1205" width="0.7" height="15.0" fill="rgb(208,105,10)" rx="2" ry="2" />
<text  x="92.08" y="1215.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper_inner (57 samples, 3.35%)</title><rect x="91.9" y="1157" width="39.5" height="15.0" fill="rgb(247,84,39)" rx="2" ry="2" />
<text  x="94.86" y="1167.5" >rus..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="963.2" y="1253" width="1.3" height="15.0" fill="rgb(252,107,4)" rx="2" ry="2" />
<text  x="966.16" y="1263.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.06%)</title><rect x="364.5" y="1221" width="0.7" height="15.0" fill="rgb(237,36,35)" rx="2" ry="2" />
<text  x="367.49" y="1231.5" ></text>
</g>
<g >
<title>__x64_sys_poll (7 samples, 0.41%)</title><rect x="66.9" y="1221" width="4.8" height="15.0" fill="rgb(253,14,40)" rx="2" ry="2" />
<text  x="69.88" y="1231.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (4 samples, 0.24%)</title><rect x="164.7" y="1253" width="2.8" height="15.0" fill="rgb(207,227,2)" rx="2" ry="2" />
<text  x="167.70" y="1263.5" ></text>
</g>
<g >
<title>__dentry_kill (94 samples, 5.53%)</title><rect x="168.2" y="949" width="65.2" height="15.0" fill="rgb(227,96,35)" rx="2" ry="2" />
<text  x="171.17" y="959.5" >__dentr..</text>
</g>
<g >
<title>xas_store (3 samples, 0.18%)</title><rect x="472.0" y="901" width="2.1" height="15.0" fill="rgb(245,159,39)" rx="2" ry="2" />
<text  x="475.01" y="911.5" ></text>
</g>
<g >
<title>alloc_page_buffers (24 samples, 1.41%)</title><rect x="531.7" y="933" width="16.6" height="15.0" fill="rgb(250,109,24)" rx="2" ry="2" />
<text  x="534.67" y="943.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (3 samples, 0.18%)</title><rect x="234.8" y="1221" width="2.0" height="15.0" fill="rgb(231,196,17)" rx="2" ry="2" />
<text  x="237.76" y="1231.5" ></text>
</g>
<g >
<title>unlock_page_memcg (1 samples, 0.06%)</title><rect x="596.2" y="981" width="0.7" height="15.0" fill="rgb(241,175,11)" rx="2" ry="2" />
<text  x="599.18" y="991.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.06%)</title><rect x="939.6" y="709" width="0.7" height="15.0" fill="rgb(215,130,35)" rx="2" ry="2" />
<text  x="942.57" y="719.5" ></text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (1 samples, 0.06%)</title><rect x="133.5" y="1221" width="0.7" height="15.0" fill="rgb(229,33,49)" rx="2" ry="2" />
<text  x="136.48" y="1231.5" ></text>
</g>
<g >
<title>_perf_event_enable (67 samples, 3.94%)</title><rect x="19.0" y="1125" width="46.5" height="15.0" fill="rgb(208,34,45)" rx="2" ry="2" />
<text  x="22.02" y="1135.5" >_per..</text>
</g>
<g >
<title>do_filp_open (1 samples, 0.06%)</title><rect x="10.7" y="1061" width="0.7" height="15.0" fill="rgb(208,137,36)" rx="2" ry="2" />
<text  x="13.69" y="1071.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (3 samples, 0.18%)</title><rect x="487.3" y="869" width="2.1" height="15.0" fill="rgb(224,120,31)" rx="2" ry="2" />
<text  x="490.27" y="879.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.06%)</title><rect x="633.0" y="933" width="0.6" height="15.0" fill="rgb(209,22,31)" rx="2" ry="2" />
<text  x="635.95" y="943.5" ></text>
</g>
<g >
<title>unlock_page (3 samples, 0.18%)</title><rect x="231.3" y="821" width="2.1" height="15.0" fill="rgb(215,49,41)" rx="2" ry="2" />
<text  x="234.29" y="831.5" ></text>
</g>
<g >
<title>do_sync_mmap_readahead (5 samples, 0.29%)</title><rect x="411.0" y="981" width="3.4" height="15.0" fill="rgb(251,84,7)" rx="2" ry="2" />
<text  x="413.96" y="991.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.06%)</title><rect x="239.6" y="1061" width="0.7" height="15.0" fill="rgb(226,160,23)" rx="2" ry="2" />
<text  x="242.62" y="1071.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (8 samples, 0.47%)</title><rect x="474.8" y="885" width="5.5" height="15.0" fill="rgb(209,10,18)" rx="2" ry="2" />
<text  x="477.79" y="895.5" ></text>
</g>
<g >
<title>pagecache_get_page (8 samples, 0.47%)</title><rect x="509.5" y="981" width="5.5" height="15.0" fill="rgb(205,177,29)" rx="2" ry="2" />
<text  x="512.47" y="991.5" ></text>
</g>
<g >
<title>up_read (4 samples, 0.24%)</title><rect x="583.7" y="997" width="2.8" height="15.0" fill="rgb(205,6,33)" rx="2" ry="2" />
<text  x="586.70" y="1007.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="10.0" y="917" width="0.7" height="15.0" fill="rgb(241,83,16)" rx="2" ry="2" />
<text  x="13.00" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.06%)</title><rect x="167.5" y="1093" width="0.7" height="15.0" fill="rgb(226,182,15)" rx="2" ry="2" />
<text  x="170.47" y="1103.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.06%)</title><rect x="1000.6" y="309" width="0.7" height="15.0" fill="rgb(254,78,50)" rx="2" ry="2" />
<text  x="1003.62" y="319.5" ></text>
</g>
<g >
<title>clear_page_erms (32 samples, 1.88%)</title><rect x="420.0" y="869" width="22.2" height="15.0" fill="rgb(223,185,26)" rx="2" ry="2" />
<text  x="422.98" y="879.5" >c..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="1000.6" y="565" width="0.7" height="15.0" fill="rgb(240,36,47)" rx="2" ry="2" />
<text  x="1003.62" y="575.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.06%)</title><rect x="87.0" y="1077" width="0.7" height="15.0" fill="rgb(252,97,32)" rx="2" ry="2" />
<text  x="90.00" y="1087.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (2 samples, 0.12%)</title><rect x="1000.6" y="693" width="1.4" height="15.0" fill="rgb(229,84,17)" rx="2" ry="2" />
<text  x="1003.62" y="703.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (4 samples, 0.24%)</title><rect x="542.1" y="869" width="2.8" height="15.0" fill="rgb(232,40,45)" rx="2" ry="2" />
<text  x="545.08" y="879.5" ></text>
</g>
<g >
<title>__ftruncate64 (4 samples, 0.24%)</title><rect x="630.9" y="1125" width="2.7" height="15.0" fill="rgb(231,28,26)" rx="2" ry="2" />
<text  x="633.87" y="1135.5" ></text>
</g>
<g >
<title>NaClSysCloseDecoder (57 samples, 3.35%)</title><rect x="91.9" y="1301" width="39.5" height="15.0" fill="rgb(207,104,27)" rx="2" ry="2" />
<text  x="94.86" y="1311.5" >NaC..</text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.06%)</title><rect x="939.6" y="1045" width="0.7" height="15.0" fill="rgb(241,23,42)" rx="2" ry="2" />
<text  x="942.57" y="1055.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.06%)</title><rect x="964.5" y="1157" width="0.7" height="15.0" fill="rgb(205,122,7)" rx="2" ry="2" />
<text  x="967.54" y="1167.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.06%)</title><rect x="1071.4" y="1205" width="0.7" height="15.0" fill="rgb(224,80,26)" rx="2" ry="2" />
<text  x="1074.38" y="1215.5" ></text>
</g>
<g >
<title>record__pushfn (20 samples, 1.18%)</title><rect x="73.1" y="1237" width="13.9" height="15.0" fill="rgb(247,131,31)" rx="2" ry="2" />
<text  x="76.13" y="1247.5" ></text>
</g>
<g >
<title>do_shared_fault (279 samples, 16.40%)</title><rect x="408.9" y="1045" width="193.5" height="15.0" fill="rgb(210,10,16)" rx="2" ry="2" />
<text  x="411.88" y="1055.5" >do_shared_fault</text>
</g>
<g >
<title>ProcessNaclCallOrJmpAddToRMWithRex (1 samples, 0.06%)</title><rect x="164.0" y="1125" width="0.7" height="15.0" fill="rgb(218,64,3)" rx="2" ry="2" />
<text  x="167.00" y="1135.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (42 samples, 2.47%)</title><rect x="333.3" y="1141" width="29.1" height="15.0" fill="rgb(220,217,43)" rx="2" ry="2" />
<text  x="336.27" y="1151.5" >co..</text>
</g>
<g >
<title>core::hash::Hasher::write_usize (1 samples, 0.06%)</title><rect x="364.5" y="1093" width="0.7" height="15.0" fill="rgb(227,65,37)" rx="2" ry="2" />
<text  x="367.49" y="1103.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="10.7" y="1221" width="0.7" height="15.0" fill="rgb(239,39,20)" rx="2" ry="2" />
<text  x="13.69" y="1231.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (7 samples, 0.41%)</title><rect x="995.8" y="1237" width="4.8" height="15.0" fill="rgb(253,40,51)" rx="2" ry="2" />
<text  x="998.76" y="1247.5" ></text>
</g>
<g >
<title>account_page_dirtied (2 samples, 0.12%)</title><rect x="572.6" y="933" width="1.4" height="15.0" fill="rgb(224,38,14)" rx="2" ry="2" />
<text  x="575.60" y="943.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.06%)</title><rect x="963.9" y="1141" width="0.6" height="15.0" fill="rgb(235,129,18)" rx="2" ry="2" />
<text  x="966.85" y="1151.5" ></text>
</g>
<g >
<title>delete_from_page_cache (1 samples, 0.06%)</title><rect x="1072.8" y="1029" width="0.7" height="15.0" fill="rgb(236,63,13)" rx="2" ry="2" />
<text  x="1075.76" y="1039.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (4 samples, 0.24%)</title><rect x="558.0" y="917" width="2.8" height="15.0" fill="rgb(254,48,10)" rx="2" ry="2" />
<text  x="561.03" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.06%)</title><rect x="87.7" y="1301" width="0.7" height="15.0" fill="rgb(229,109,24)" rx="2" ry="2" />
<text  x="90.70" y="1311.5" ></text>
</g>
<g >
<title>NaClMutexLock (1 samples, 0.06%)</title><rect x="91.2" y="1269" width="0.7" height="15.0" fill="rgb(221,224,54)" rx="2" ry="2" />
<text  x="94.16" y="1279.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (1 samples, 0.06%)</title><rect x="239.6" y="1173" width="0.7" height="15.0" fill="rgb(236,68,5)" rx="2" ry="2" />
<text  x="242.62" y="1183.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.06%)</title><rect x="331.2" y="1157" width="0.7" height="15.0" fill="rgb(248,56,46)" rx="2" ry="2" />
<text  x="334.19" y="1167.5" ></text>
</g>
<g >
<title>try_to_release_page (1 samples, 0.06%)</title><rect x="230.6" y="773" width="0.7" height="15.0" fill="rgb(253,29,44)" rx="2" ry="2" />
<text  x="233.60" y="783.5" ></text>
</g>
<g >
<title>vfs_open (1 samples, 0.06%)</title><rect x="10.7" y="1013" width="0.7" height="15.0" fill="rgb(213,87,51)" rx="2" ry="2" />
<text  x="13.69" y="1023.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="364.5" y="1061" width="0.7" height="15.0" fill="rgb(238,218,13)" rx="2" ry="2" />
<text  x="367.49" y="1071.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (2 samples, 0.12%)</title><rect x="365.9" y="1189" width="1.4" height="15.0" fill="rgb(232,94,39)" rx="2" ry="2" />
<text  x="368.87" y="1199.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (1 samples, 0.06%)</title><rect x="236.1" y="1093" width="0.7" height="15.0" fill="rgb(243,215,17)" rx="2" ry="2" />
<text  x="239.15" y="1103.5" ></text>
</g>
<g >
<title>eventfd_poll (1 samples, 0.06%)</title><rect x="87.7" y="1269" width="0.7" height="15.0" fill="rgb(248,200,13)" rx="2" ry="2" />
<text  x="90.70" y="1279.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.06%)</title><rect x="238.2" y="1109" width="0.7" height="15.0" fill="rgb(248,66,4)" rx="2" ry="2" />
<text  x="241.23" y="1119.5" ></text>
</g>
<g >
<title>event_function_call (67 samples, 3.94%)</title><rect x="19.0" y="1109" width="46.5" height="15.0" fill="rgb(235,25,50)" rx="2" ry="2" />
<text  x="22.02" y="1119.5" >even..</text>
</g>
<g >
<title>xas_start (1 samples, 0.06%)</title><rect x="490.7" y="869" width="0.7" height="15.0" fill="rgb(218,33,21)" rx="2" ry="2" />
<text  x="493.74" y="879.5" ></text>
</g>
<g >
<title>NaClHostDescOpen (94 samples, 5.53%)</title><rect x="168.2" y="1269" width="65.2" height="15.0" fill="rgb(248,94,7)" rx="2" ry="2" />
<text  x="171.17" y="1279.5" >NaClHos..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (1 samples, 0.06%)</title><rect x="938.9" y="837" width="0.7" height="15.0" fill="rgb(233,157,8)" rx="2" ry="2" />
<text  x="941.88" y="847.5" ></text>
</g>
<g >
<title>unfreeze_partials (1 samples, 0.06%)</title><rect x="228.5" y="629" width="0.7" height="15.0" fill="rgb(217,0,4)" rx="2" ry="2" />
<text  x="231.52" y="639.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="938.2" y="1093" width="0.7" height="15.0" fill="rgb(210,187,27)" rx="2" ry="2" />
<text  x="941.18" y="1103.5" ></text>
</g>
<g >
<title>lindrustinit (2 samples, 0.12%)</title><rect x="1000.6" y="1253" width="1.4" height="15.0" fill="rgb(247,102,22)" rx="2" ry="2" />
<text  x="1003.62" y="1263.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (1 samples, 0.06%)</title><rect x="91.2" y="1301" width="0.7" height="15.0" fill="rgb(226,128,0)" rx="2" ry="2" />
<text  x="94.16" y="1311.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (1 samples, 0.06%)</title><rect x="78.7" y="885" width="0.7" height="15.0" fill="rgb(211,110,0)" rx="2" ry="2" />
<text  x="81.68" y="895.5" ></text>
</g>
<g >
<title>CheckValidityOfRegularInstruction (1 samples, 0.06%)</title><rect x="155.0" y="1189" width="0.7" height="15.0" fill="rgb(239,95,25)" rx="2" ry="2" />
<text  x="157.99" y="1199.5" ></text>
</g>
<g >
<title>memset_erms (2 samples, 0.12%)</title><rect x="545.5" y="901" width="1.4" height="15.0" fill="rgb(229,159,27)" rx="2" ry="2" />
<text  x="548.54" y="911.5" ></text>
</g>
<g >
<title>fget (1 samples, 0.06%)</title><rect x="167.5" y="1061" width="0.7" height="15.0" fill="rgb(209,209,36)" rx="2" ry="2" />
<text  x="170.47" y="1071.5" ></text>
</g>
<g >
<title>read_pages (37 samples, 2.18%)</title><rect x="482.4" y="933" width="25.7" height="15.0" fill="rgb(216,94,44)" rx="2" ry="2" />
<text  x="485.42" y="943.5" >r..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (115 samples, 6.76%)</title><rect x="241.0" y="1205" width="79.8" height="15.0" fill="rgb(227,44,44)" rx="2" ry="2" />
<text  x="244.01" y="1215.5" >core::sli..</text>
</g>
<g >
<title>mark_page_accessed (3 samples, 0.18%)</title><rect x="111.3" y="933" width="2.1" height="15.0" fill="rgb(207,133,3)" rx="2" ry="2" />
<text  x="114.28" y="943.5" ></text>
</g>
<g >
<title>generic_exec_single (65 samples, 3.82%)</title><rect x="20.4" y="1077" width="45.1" height="15.0" fill="rgb(227,10,10)" rx="2" ry="2" />
<text  x="23.41" y="1087.5" >gene..</text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.06%)</title><rect x="1154.6" y="1205" width="0.7" height="15.0" fill="rgb(244,213,34)" rx="2" ry="2" />
<text  x="1157.62" y="1215.5" ></text>
</g>
<g >
<title>xas_load (2 samples, 0.12%)</title><rect x="513.6" y="949" width="1.4" height="15.0" fill="rgb(246,174,35)" rx="2" ry="2" />
<text  x="516.63" y="959.5" ></text>
</g>
<g >
<title>_rl_set_screen_size (1 samples, 0.06%)</title><rect x="10.0" y="1189" width="0.7" height="15.0" fill="rgb(220,15,2)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.06%)</title><rect x="87.0" y="1189" width="0.7" height="15.0" fill="rgb(237,213,38)" rx="2" ry="2" />
<text  x="90.00" y="1199.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="995.8" y="917" width="0.7" height="15.0" fill="rgb(218,103,30)" rx="2" ry="2" />
<text  x="998.76" y="927.5" ></text>
</g>
<g >
<title>find_get_entries (6 samples, 0.35%)</title><rect x="189.0" y="789" width="4.1" height="15.0" fill="rgb(229,123,33)" rx="2" ry="2" />
<text  x="191.98" y="799.5" ></text>
</g>
<g >
<title>proc_pid_status (1 samples, 0.06%)</title><rect x="71.7" y="1077" width="0.7" height="15.0" fill="rgb(250,32,22)" rx="2" ry="2" />
<text  x="74.74" y="1087.5" ></text>
</g>
<g >
<title>ext4_page_mkwrite (104 samples, 6.11%)</title><rect x="515.0" y="1013" width="72.2" height="15.0" fill="rgb(241,187,37)" rx="2" ry="2" />
<text  x="518.02" y="1023.5" >ext4_pag..</text>
</g>
<g >
<title>cpuidle_enter_state (110 samples, 6.47%)</title><rect x="1081.1" y="1237" width="76.3" height="15.0" fill="rgb(236,20,31)" rx="2" ry="2" />
<text  x="1084.09" y="1247.5" >cpuidle_..</text>
</g>
<g >
<title>__irqentry_text_end (1 samples, 0.06%)</title><rect x="995.1" y="1333" width="0.7" height="15.0" fill="rgb(240,96,31)" rx="2" ry="2" />
<text  x="998.07" y="1343.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (3 samples, 0.18%)</title><rect x="1185.8" y="1269" width="2.1" height="15.0" fill="rgb(242,114,20)" rx="2" ry="2" />
<text  x="1188.84" y="1279.5" ></text>
</g>
<g >
<title>sel_ldr (1,418 samples, 83.36%)</title><rect x="89.8" y="1349" width="983.7" height="15.0" fill="rgb(217,191,8)" rx="2" ry="2" />
<text  x="92.78" y="1359.5" >sel_ldr</text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.06%)</title><rect x="1185.1" y="1237" width="0.7" height="15.0" fill="rgb(221,158,30)" rx="2" ry="2" />
<text  x="1188.14" y="1247.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 0.18%)</title><rect x="1081.8" y="1189" width="2.1" height="15.0" fill="rgb(235,125,43)" rx="2" ry="2" />
<text  x="1084.78" y="1199.5" ></text>
</g>
<g >
<title>CopyBundleTails (1 samples, 0.06%)</title><rect x="132.8" y="1237" width="0.7" height="15.0" fill="rgb(232,136,9)" rx="2" ry="2" />
<text  x="135.79" y="1247.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.06%)</title><rect x="239.6" y="1157" width="0.7" height="15.0" fill="rgb(209,146,27)" rx="2" ry="2" />
<text  x="242.62" y="1167.5" ></text>
</g>
<g >
<title>iput (2 samples, 0.12%)</title><rect x="1072.1" y="1141" width="1.4" height="15.0" fill="rgb(231,56,42)" rx="2" ry="2" />
<text  x="1075.07" y="1151.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::close (57 samples, 3.35%)</title><rect x="91.9" y="1141" width="39.5" height="15.0" fill="rgb(254,140,20)" rx="2" ry="2" />
<text  x="94.86" y="1151.5" >rus..</text>
</g>
<g >
<title>NaClMprotect (1 samples, 0.06%)</title><rect x="964.5" y="1301" width="0.7" height="15.0" fill="rgb(222,193,53)" rx="2" ry="2" />
<text  x="967.54" y="1311.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (1 samples, 0.06%)</title><rect x="939.6" y="981" width="0.7" height="15.0" fill="rgb(224,115,14)" rx="2" ry="2" />
<text  x="942.57" y="991.5" ></text>
</g>
<g >
<title>down_read_trylock (2 samples, 0.12%)</title><rect x="389.5" y="1109" width="1.3" height="15.0" fill="rgb(234,74,11)" rx="2" ry="2" />
<text  x="392.46" y="1119.5" ></text>
</g>
<g >
<title>[perf-2755.map] (2 samples, 0.12%)</title><rect x="959.0" y="1333" width="1.4" height="15.0" fill="rgb(235,192,52)" rx="2" ry="2" />
<text  x="961.99" y="1343.5" ></text>
</g>
<g >
<title>do_shared_fault (1 samples, 0.06%)</title><rect x="963.9" y="1061" width="0.6" height="15.0" fill="rgb(223,121,38)" rx="2" ry="2" />
<text  x="966.85" y="1071.5" ></text>
</g>
<g >
<title>iput (94 samples, 5.53%)</title><rect x="168.2" y="1077" width="65.2" height="15.0" fill="rgb(205,44,54)" rx="2" ry="2" />
<text  x="171.17" y="1087.5" >iput</text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="939.6" y="821" width="0.7" height="15.0" fill="rgb(216,177,36)" rx="2" ry="2" />
<text  x="942.57" y="831.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="10.0" y="1013" width="0.7" height="15.0" fill="rgb(220,66,12)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (1 samples, 0.06%)</title><rect x="229.2" y="661" width="0.7" height="15.0" fill="rgb(211,153,47)" rx="2" ry="2" />
<text  x="232.21" y="671.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="157.8" y="1269" width="0.7" height="15.0" fill="rgb(223,159,47)" rx="2" ry="2" />
<text  x="160.76" y="1279.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.06%)</title><rect x="10.7" y="1349" width="0.7" height="15.0" fill="rgb(217,72,20)" rx="2" ry="2" />
<text  x="13.69" y="1359.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (98 samples, 5.76%)</title><rect x="689.1" y="1157" width="68.0" height="15.0" fill="rgb(237,89,21)" rx="2" ry="2" />
<text  x="692.14" y="1167.5" >ringbuf..</text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.06%)</title><rect x="83.5" y="933" width="0.7" height="15.0" fill="rgb(242,142,43)" rx="2" ry="2" />
<text  x="86.53" y="943.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (126 samples, 7.41%)</title><rect x="1080.4" y="1269" width="87.4" height="15.0" fill="rgb(225,117,39)" rx="2" ry="2" />
<text  x="1083.39" y="1279.5" >cpuidle_id..</text>
</g>
<g >
<title>bprm_execve (1 samples, 0.06%)</title><rect x="10.7" y="1173" width="0.7" height="15.0" fill="rgb(247,130,12)" rx="2" ry="2" />
<text  x="13.69" y="1183.5" ></text>
</g>
<g >
<title>block_invalidatepage (37 samples, 2.18%)</title><rect x="204.9" y="773" width="25.7" height="15.0" fill="rgb(212,55,18)" rx="2" ry="2" />
<text  x="207.93" y="783.5" >b..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.06%)</title><rect x="234.8" y="1141" width="0.7" height="15.0" fill="rgb(215,193,28)" rx="2" ry="2" />
<text  x="237.76" y="1151.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (14 samples, 0.82%)</title><rect x="984.7" y="1301" width="9.7" height="15.0" fill="rgb(207,112,0)" rx="2" ry="2" />
<text  x="987.66" y="1311.5" ></text>
</g>
<g >
<title>ext4_filemap_fault (2 samples, 0.12%)</title><rect x="587.9" y="1029" width="1.3" height="15.0" fill="rgb(207,113,12)" rx="2" ry="2" />
<text  x="590.86" y="1039.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (3 samples, 0.18%)</title><rect x="610.8" y="1093" width="2.0" height="15.0" fill="rgb(233,82,21)" rx="2" ry="2" />
<text  x="613.75" y="1103.5" ></text>
</g>
<g >
<title>__free_one_page (8 samples, 0.47%)</title><rect x="173.0" y="725" width="5.6" height="15.0" fill="rgb(249,137,46)" rx="2" ry="2" />
<text  x="176.02" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (1 samples, 0.06%)</title><rect x="1076.9" y="1301" width="0.7" height="15.0" fill="rgb(251,117,36)" rx="2" ry="2" />
<text  x="1079.93" y="1311.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="364.5" y="1045" width="0.7" height="15.0" fill="rgb(233,43,38)" rx="2" ry="2" />
<text  x="367.49" y="1055.5" ></text>
</g>
<g >
<title>version_check_doit (1 samples, 0.06%)</title><rect x="1002.0" y="1253" width="0.7" height="15.0" fill="rgb(253,61,4)" rx="2" ry="2" />
<text  x="1005.00" y="1263.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (1 samples, 0.06%)</title><rect x="1001.3" y="197" width="0.7" height="15.0" fill="rgb(219,34,30)" rx="2" ry="2" />
<text  x="1004.31" y="207.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::insert (1 samples, 0.06%)</title><rect x="1001.3" y="133" width="0.7" height="15.0" fill="rgb(229,5,47)" rx="2" ry="2" />
<text  x="1004.31" y="143.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (14 samples, 0.82%)</title><rect x="984.7" y="1285" width="9.7" height="15.0" fill="rgb(253,177,5)" rx="2" ry="2" />
<text  x="987.66" y="1295.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="1000.6" y="261" width="0.7" height="15.0" fill="rgb(213,119,50)" rx="2" ry="2" />
<text  x="1003.62" y="271.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (4 samples, 0.24%)</title><rect x="79.4" y="949" width="2.7" height="15.0" fill="rgb(219,186,38)" rx="2" ry="2" />
<text  x="82.37" y="959.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (6 samples, 0.35%)</title><rect x="160.5" y="1157" width="4.2" height="15.0" fill="rgb(222,112,48)" rx="2" ry="2" />
<text  x="163.53" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="158.5" y="1157" width="2.0" height="15.0" fill="rgb(225,167,40)" rx="2" ry="2" />
<text  x="161.45" y="1167.5" ></text>
</g>
<g >
<title>ext4_has_free_clusters (1 samples, 0.06%)</title><rect x="559.4" y="885" width="0.7" height="15.0" fill="rgb(233,77,1)" rx="2" ry="2" />
<text  x="562.42" y="895.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (1 samples, 0.06%)</title><rect x="234.8" y="1205" width="0.7" height="15.0" fill="rgb(236,133,53)" rx="2" ry="2" />
<text  x="237.76" y="1215.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.06%)</title><rect x="963.9" y="1013" width="0.6" height="15.0" fill="rgb(213,168,23)" rx="2" ry="2" />
<text  x="966.85" y="1023.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (5 samples, 0.29%)</title><rect x="1167.8" y="1269" width="3.5" height="15.0" fill="rgb(213,30,35)" rx="2" ry="2" />
<text  x="1170.80" y="1279.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (44 samples, 2.59%)</title><rect x="331.9" y="1189" width="30.5" height="15.0" fill="rgb(240,126,20)" rx="2" ry="2" />
<text  x="334.88" y="1199.5" >ri..</text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.06%)</title><rect x="170.9" y="773" width="0.7" height="15.0" fill="rgb(248,48,22)" rx="2" ry="2" />
<text  x="173.94" y="783.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (55 samples, 3.23%)</title><rect x="193.1" y="789" width="38.2" height="15.0" fill="rgb(207,118,9)" rx="2" ry="2" />
<text  x="196.14" y="799.5" >ext..</text>
</g>
<g >
<title>truncate_inode_pages_range (1 samples, 0.06%)</title><rect x="1072.1" y="1045" width="0.7" height="15.0" fill="rgb(214,142,23)" rx="2" ry="2" />
<text  x="1075.07" y="1055.5" ></text>
</g>
<g >
<title>unmap_single_vma (56 samples, 3.29%)</title><rect x="92.6" y="997" width="38.8" height="15.0" fill="rgb(235,121,2)" rx="2" ry="2" />
<text  x="95.55" y="1007.5" >unm..</text>
</g>
<g >
<title>do_sys_ftruncate (4 samples, 0.24%)</title><rect x="630.9" y="1061" width="2.7" height="15.0" fill="rgb(248,128,53)" rx="2" ry="2" />
<text  x="633.87" y="1071.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (1 samples, 0.06%)</title><rect x="939.6" y="997" width="0.7" height="15.0" fill="rgb(254,191,45)" rx="2" ry="2" />
<text  x="942.57" y="1007.5" ></text>
</g>
<g >
<title>account_page_dirtied (1 samples, 0.06%)</title><rect x="82.8" y="885" width="0.7" height="15.0" fill="rgb(247,32,47)" rx="2" ry="2" />
<text  x="85.84" y="895.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.06%)</title><rect x="10.0" y="1237" width="0.7" height="15.0" fill="rgb(232,135,43)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (2 samples, 0.12%)</title><rect x="1164.3" y="1173" width="1.4" height="15.0" fill="rgb(247,153,49)" rx="2" ry="2" />
<text  x="1167.33" y="1183.5" ></text>
</g>
<g >
<title>page_remove_file_rmap (1 samples, 0.06%)</title><rect x="159.8" y="981" width="0.7" height="15.0" fill="rgb(220,131,20)" rx="2" ry="2" />
<text  x="162.84" y="991.5" ></text>
</g>
<g >
<title>__perf_event_enable (1 samples, 0.06%)</title><rect x="87.0" y="1141" width="0.7" height="15.0" fill="rgb(237,172,19)" rx="2" ry="2" />
<text  x="90.00" y="1151.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (42 samples, 2.47%)</title><rect x="333.3" y="1125" width="29.1" height="15.0" fill="rgb(252,90,37)" rx="2" ry="2" />
<text  x="336.27" y="1135.5" >__..</text>
</g>
<g >
<title>NaClSysExecveDecoder (9 samples, 0.53%)</title><rect x="158.5" y="1301" width="6.2" height="15.0" fill="rgb(227,2,31)" rx="2" ry="2" />
<text  x="161.45" y="1311.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (17 samples, 1.00%)</title><rect x="74.5" y="997" width="11.8" height="15.0" fill="rgb(230,9,30)" rx="2" ry="2" />
<text  x="77.51" y="1007.5" ></text>
</g>
<g >
<title>file_modified (1 samples, 0.06%)</title><rect x="74.5" y="981" width="0.7" height="15.0" fill="rgb(215,11,49)" rx="2" ry="2" />
<text  x="77.51" y="991.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.06%)</title><rect x="240.3" y="1141" width="0.7" height="15.0" fill="rgb(222,200,42)" rx="2" ry="2" />
<text  x="243.31" y="1151.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one (1 samples, 0.06%)</title><rect x="364.5" y="1141" width="0.7" height="15.0" fill="rgb(231,11,51)" rx="2" ry="2" />
<text  x="367.49" y="1151.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (2 samples, 0.12%)</title><rect x="553.9" y="933" width="1.4" height="15.0" fill="rgb(230,120,12)" rx="2" ry="2" />
<text  x="556.87" y="943.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (2 samples, 0.12%)</title><rect x="1000.6" y="837" width="1.4" height="15.0" fill="rgb(236,227,49)" rx="2" ry="2" />
<text  x="1003.62" y="847.5" ></text>
</g>
<g >
<title>NaClDescIoDescMap (1 samples, 0.06%)</title><rect x="167.5" y="1253" width="0.7" height="15.0" fill="rgb(244,115,29)" rx="2" ry="2" />
<text  x="170.47" y="1263.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="1000.6" y="101" width="0.7" height="15.0" fill="rgb(225,210,31)" rx="2" ry="2" />
<text  x="1003.62" y="111.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="1081.8" y="1077" width="0.7" height="15.0" fill="rgb(206,226,27)" rx="2" ry="2" />
<text  x="1084.78" y="1087.5" ></text>
</g>
<g >
<title>ondemand_readahead (135 samples, 7.94%)</title><rect x="415.8" y="965" width="93.7" height="15.0" fill="rgb(243,46,29)" rx="2" ry="2" />
<text  x="418.82" y="975.5" >ondemand_re..</text>
</g>
<g >
<title>psi_task_change (1 samples, 0.06%)</title><rect x="1089.4" y="965" width="0.7" height="15.0" fill="rgb(227,199,40)" rx="2" ry="2" />
<text  x="1092.41" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="964.5" y="1269" width="0.7" height="15.0" fill="rgb(248,173,13)" rx="2" ry="2" />
<text  x="967.54" y="1279.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (3 samples, 0.18%)</title><rect x="128.6" y="933" width="2.1" height="15.0" fill="rgb(210,134,31)" rx="2" ry="2" />
<text  x="131.62" y="943.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (1 samples, 0.06%)</title><rect x="235.5" y="1157" width="0.6" height="15.0" fill="rgb(217,14,44)" rx="2" ry="2" />
<text  x="238.46" y="1167.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (1 samples, 0.06%)</title><rect x="10.7" y="1285" width="0.7" height="15.0" fill="rgb(228,65,5)" rx="2" ry="2" />
<text  x="13.69" y="1295.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13 samples, 0.76%)</title><rect x="1081.1" y="1221" width="9.0" height="15.0" fill="rgb(220,209,27)" rx="2" ry="2" />
<text  x="1084.09" y="1231.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (1 samples, 0.06%)</title><rect x="1000.6" y="421" width="0.7" height="15.0" fill="rgb(239,225,15)" rx="2" ry="2" />
<text  x="1003.62" y="431.5" ></text>
</g>
<g >
<title>__dquot_alloc_space (1 samples, 0.06%)</title><rect x="558.7" y="901" width="0.7" height="15.0" fill="rgb(253,144,20)" rx="2" ry="2" />
<text  x="561.72" y="911.5" ></text>
</g>
<g >
<title>__pagevec_release (14 samples, 0.82%)</title><rect x="169.6" y="805" width="9.7" height="15.0" fill="rgb(208,31,6)" rx="2" ry="2" />
<text  x="172.55" y="815.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.06%)</title><rect x="939.6" y="917" width="0.7" height="15.0" fill="rgb(251,11,9)" rx="2" ry="2" />
<text  x="942.57" y="927.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (55 samples, 3.23%)</title><rect x="1090.1" y="1221" width="38.2" height="15.0" fill="rgb(219,58,51)" rx="2" ry="2" />
<text  x="1093.11" y="1231.5" >mwa..</text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="995.8" y="933" width="0.7" height="15.0" fill="rgb(252,71,43)" rx="2" ry="2" />
<text  x="998.76" y="943.5" ></text>
</g>
<g >
<title>do_exit (4 samples, 0.24%)</title><rect x="1070.7" y="1269" width="2.8" height="15.0" fill="rgb(230,207,30)" rx="2" ry="2" />
<text  x="1073.68" y="1279.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.12%)</title><rect x="159.1" y="1061" width="1.4" height="15.0" fill="rgb(217,88,8)" rx="2" ry="2" />
<text  x="162.15" y="1071.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.06%)</title><rect x="234.8" y="1125" width="0.7" height="15.0" fill="rgb(243,27,8)" rx="2" ry="2" />
<text  x="237.76" y="1135.5" ></text>
</g>
<g >
<title>__block_write_begin_int (79 samples, 4.64%)</title><rect x="523.3" y="981" width="54.8" height="15.0" fill="rgb(253,202,28)" rx="2" ry="2" />
<text  x="526.35" y="991.5" >__blo..</text>
</g>
<g >
<title>xmalloc (1 samples, 0.06%)</title><rect x="10.0" y="1093" width="0.7" height="15.0" fill="rgb(241,65,49)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" ></text>
</g>
<g >
<title>NaClValidateCode (6 samples, 0.35%)</title><rect x="160.5" y="1173" width="4.2" height="15.0" fill="rgb(228,25,2)" rx="2" ry="2" />
<text  x="163.53" y="1183.5" ></text>
</g>
<g >
<title>xas_load (3 samples, 0.18%)</title><rect x="469.2" y="885" width="2.1" height="15.0" fill="rgb(215,51,7)" rx="2" ry="2" />
<text  x="472.24" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="1070.7" y="1333" width="2.8" height="15.0" fill="rgb(227,39,15)" rx="2" ry="2" />
<text  x="1073.68" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (108 samples, 6.35%)</title><rect x="12.1" y="1333" width="74.9" height="15.0" fill="rgb(223,125,28)" rx="2" ry="2" />
<text  x="15.08" y="1343.5" >[unknown]</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="939.6" y="885" width="0.7" height="15.0" fill="rgb(253,127,10)" rx="2" ry="2" />
<text  x="942.57" y="895.5" ></text>
</g>
<g >
<title>down_write_killable (3 samples, 0.18%)</title><rect x="628.8" y="1109" width="2.1" height="15.0" fill="rgb(214,1,42)" rx="2" ry="2" />
<text  x="631.79" y="1119.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="1001.3" y="85" width="0.7" height="15.0" fill="rgb(246,13,27)" rx="2" ry="2" />
<text  x="1004.31" y="95.5" ></text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.06%)</title><rect x="110.6" y="933" width="0.7" height="15.0" fill="rgb(235,117,8)" rx="2" ry="2" />
<text  x="113.59" y="943.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (1 samples, 0.06%)</title><rect x="939.6" y="1061" width="0.7" height="15.0" fill="rgb(254,86,9)" rx="2" ry="2" />
<text  x="942.57" y="1071.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (3 samples, 0.18%)</title><rect x="684.3" y="1109" width="2.1" height="15.0" fill="rgb(254,221,49)" rx="2" ry="2" />
<text  x="687.29" y="1119.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.06%)</title><rect x="71.7" y="1221" width="0.7" height="15.0" fill="rgb(247,158,22)" rx="2" ry="2" />
<text  x="74.74" y="1231.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="1153.9" y="1205" width="0.7" height="15.0" fill="rgb(242,172,19)" rx="2" ry="2" />
<text  x="1156.93" y="1215.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (1 samples, 0.06%)</title><rect x="578.1" y="981" width="0.7" height="15.0" fill="rgb(239,52,49)" rx="2" ry="2" />
<text  x="581.15" y="991.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.06%)</title><rect x="89.1" y="1045" width="0.7" height="15.0" fill="rgb(243,110,21)" rx="2" ry="2" />
<text  x="92.08" y="1055.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (1 samples, 0.06%)</title><rect x="1001.3" y="373" width="0.7" height="15.0" fill="rgb(213,224,41)" rx="2" ry="2" />
<text  x="1004.31" y="383.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.06%)</title><rect x="1177.5" y="1173" width="0.7" height="15.0" fill="rgb(234,203,35)" rx="2" ry="2" />
<text  x="1180.51" y="1183.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.06%)</title><rect x="995.8" y="1077" width="0.7" height="15.0" fill="rgb(214,149,26)" rx="2" ry="2" />
<text  x="998.76" y="1087.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.06%)</title><rect x="458.8" y="853" width="0.7" height="15.0" fill="rgb(231,31,35)" rx="2" ry="2" />
<text  x="461.83" y="863.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (3 samples, 0.18%)</title><rect x="963.2" y="1317" width="2.0" height="15.0" fill="rgb(237,42,11)" rx="2" ry="2" />
<text  x="966.16" y="1327.5" ></text>
</g>
<g >
<title>BitmapClearBits (1 samples, 0.06%)</title><rect x="164.0" y="1077" width="0.7" height="15.0" fill="rgb(206,70,13)" rx="2" ry="2" />
<text  x="167.00" y="1087.5" ></text>
</g>
<g >
<title>_raw_write_lock (1 samples, 0.06%)</title><rect x="557.3" y="917" width="0.7" height="15.0" fill="rgb(206,8,9)" rx="2" ry="2" />
<text  x="560.34" y="927.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4 samples, 0.24%)</title><rect x="411.0" y="885" width="2.7" height="15.0" fill="rgb(226,226,25)" rx="2" ry="2" />
<text  x="413.96" y="895.5" ></text>
</g>
<g >
<title>&lt;std::lazy::SyncLazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.12%)</title><rect x="1000.6" y="1221" width="1.4" height="15.0" fill="rgb(243,181,20)" rx="2" ry="2" />
<text  x="1003.62" y="1231.5" ></text>
</g>
<g >
<title>try_charge (6 samples, 0.35%)</title><rect x="463.0" y="885" width="4.2" height="15.0" fill="rgb(244,14,48)" rx="2" ry="2" />
<text  x="465.99" y="895.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.12%)</title><rect x="75.2" y="853" width="1.4" height="15.0" fill="rgb(254,77,47)" rx="2" ry="2" />
<text  x="78.21" y="863.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (3 samples, 0.18%)</title><rect x="628.8" y="1077" width="2.1" height="15.0" fill="rgb(226,51,39)" rx="2" ry="2" />
<text  x="631.79" y="1087.5" ></text>
</g>
<g >
<title>CheckValidityOfRegularInstruction (1 samples, 0.06%)</title><rect x="157.1" y="1189" width="0.7" height="15.0" fill="rgb(239,120,15)" rx="2" ry="2" />
<text  x="160.07" y="1199.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="240.3" y="1189" width="0.7" height="15.0" fill="rgb(230,9,52)" rx="2" ry="2" />
<text  x="243.31" y="1199.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (1 samples, 0.06%)</title><rect x="1072.1" y="1029" width="0.7" height="15.0" fill="rgb(243,89,43)" rx="2" ry="2" />
<text  x="1075.07" y="1039.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="995.8" y="901" width="0.7" height="15.0" fill="rgb(251,97,54)" rx="2" ry="2" />
<text  x="998.76" y="911.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.06%)</title><rect x="562.2" y="933" width="0.7" height="15.0" fill="rgb(252,44,51)" rx="2" ry="2" />
<text  x="565.19" y="943.5" ></text>
</g>
<g >
<title>&lt;dashmap::serde::DashMapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (2 samples, 0.12%)</title><rect x="1000.6" y="677" width="1.4" height="15.0" fill="rgb(247,42,36)" rx="2" ry="2" />
<text  x="1003.62" y="687.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (17 samples, 1.00%)</title><rect x="940.3" y="1317" width="11.8" height="15.0" fill="rgb(246,0,29)" rx="2" ry="2" />
<text  x="943.26" y="1327.5" ></text>
</g>
<g >
<title>ext4_da_write_end (3 samples, 0.18%)</title><rect x="82.1" y="965" width="2.1" height="15.0" fill="rgb(248,6,50)" rx="2" ry="2" />
<text  x="85.15" y="975.5" ></text>
</g>
<g >
<title>set_page_dirty (1 samples, 0.06%)</title><rect x="580.9" y="981" width="0.7" height="15.0" fill="rgb(230,196,46)" rx="2" ry="2" />
<text  x="583.92" y="991.5" ></text>
</g>
<g >
<title>rl_bind_keyseq_if_unbound_in_map (1 samples, 0.06%)</title><rect x="10.0" y="1141" width="0.7" height="15.0" fill="rgb(248,36,40)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" ></text>
</g>
<g >
<title>get_new_window_size (1 samples, 0.06%)</title><rect x="10.0" y="1205" width="0.7" height="15.0" fill="rgb(207,173,7)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.06%)</title><rect x="540.0" y="869" width="0.7" height="15.0" fill="rgb(214,75,25)" rx="2" ry="2" />
<text  x="542.99" y="879.5" ></text>
</g>
<g >
<title>do_open (1 samples, 0.06%)</title><rect x="10.7" y="1029" width="0.7" height="15.0" fill="rgb(208,104,8)" rx="2" ry="2" />
<text  x="13.69" y="1039.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (1 samples, 0.06%)</title><rect x="90.5" y="1285" width="0.7" height="15.0" fill="rgb(218,185,31)" rx="2" ry="2" />
<text  x="93.47" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_enum (1 samples, 0.06%)</title><rect x="1001.3" y="581" width="0.7" height="15.0" fill="rgb(251,193,4)" rx="2" ry="2" />
<text  x="1004.31" y="591.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (1 samples, 0.06%)</title><rect x="1001.3" y="645" width="0.7" height="15.0" fill="rgb(221,213,44)" rx="2" ry="2" />
<text  x="1004.31" y="655.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (10 samples, 0.59%)</title><rect x="171.6" y="741" width="7.0" height="15.0" fill="rgb(233,140,16)" rx="2" ry="2" />
<text  x="174.63" y="751.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.06%)</title><rect x="322.9" y="1205" width="0.7" height="15.0" fill="rgb(221,215,38)" rx="2" ry="2" />
<text  x="325.86" y="1215.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.12%)</title><rect x="1000.6" y="757" width="1.4" height="15.0" fill="rgb(224,74,1)" rx="2" ry="2" />
<text  x="1003.62" y="767.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.06%)</title><rect x="1088.0" y="1077" width="0.7" height="15.0" fill="rgb(244,89,23)" rx="2" ry="2" />
<text  x="1091.02" y="1087.5" ></text>
</g>
<g >
<title>__handle_mm_fault (298 samples, 17.52%)</title><rect x="398.5" y="1093" width="206.7" height="15.0" fill="rgb(250,182,21)" rx="2" ry="2" />
<text  x="401.48" y="1103.5" >__handle_mm_fault</text>
</g>
<g >
<title>__fget_files (2 samples, 0.12%)</title><rect x="66.9" y="1141" width="1.4" height="15.0" fill="rgb(248,6,43)" rx="2" ry="2" />
<text  x="69.88" y="1151.5" ></text>
</g>
<g >
<title>xas_store (3 samples, 0.18%)</title><rect x="180.7" y="773" width="2.0" height="15.0" fill="rgb(208,117,44)" rx="2" ry="2" />
<text  x="183.65" y="783.5" ></text>
</g>
<g >
<title>do_unlinkat (94 samples, 5.53%)</title><rect x="168.2" y="1093" width="65.2" height="15.0" fill="rgb(209,7,9)" rx="2" ry="2" />
<text  x="171.17" y="1103.5" >do_unli..</text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.06%)</title><rect x="1071.4" y="1173" width="0.7" height="15.0" fill="rgb(254,220,6)" rx="2" ry="2" />
<text  x="1074.38" y="1183.5" ></text>
</g>
<g >
<title>page_counter_try_charge (3 samples, 0.18%)</title><rect x="465.1" y="869" width="2.1" height="15.0" fill="rgb(241,106,11)" rx="2" ry="2" />
<text  x="468.07" y="879.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.06%)</title><rect x="1183.1" y="1205" width="0.7" height="15.0" fill="rgb(222,197,12)" rx="2" ry="2" />
<text  x="1186.06" y="1215.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::remap_file (8 samples, 0.47%)</title><rect x="628.1" y="1205" width="5.5" height="15.0" fill="rgb(248,84,17)" rx="2" ry="2" />
<text  x="631.10" y="1215.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::libc_mmap (1 samples, 0.06%)</title><rect x="167.5" y="1157" width="0.7" height="15.0" fill="rgb(212,154,43)" rx="2" ry="2" />
<text  x="170.47" y="1167.5" ></text>
</g>
<g >
<title>wait_for (1 samples, 0.06%)</title><rect x="10.0" y="1221" width="0.7" height="15.0" fill="rgb(240,153,10)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" ></text>
</g>
<g >
<title>exec_binprm (1 samples, 0.06%)</title><rect x="10.7" y="1141" width="0.7" height="15.0" fill="rgb(238,54,24)" rx="2" ry="2" />
<text  x="13.69" y="1151.5" ></text>
</g>
<g >
<title>ksys_write (2 samples, 0.12%)</title><rect x="88.4" y="1285" width="1.4" height="15.0" fill="rgb(244,88,32)" rx="2" ry="2" />
<text  x="91.39" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (1 samples, 0.06%)</title><rect x="240.3" y="1205" width="0.7" height="15.0" fill="rgb(238,25,42)" rx="2" ry="2" />
<text  x="243.31" y="1215.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (2 samples, 0.12%)</title><rect x="938.9" y="1157" width="1.4" height="15.0" fill="rgb(239,139,12)" rx="2" ry="2" />
<text  x="941.88" y="1167.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (2 samples, 0.12%)</title><rect x="1165.7" y="1237" width="1.4" height="15.0" fill="rgb(218,14,34)" rx="2" ry="2" />
<text  x="1168.72" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="167.5" y="1109" width="0.7" height="15.0" fill="rgb(211,121,28)" rx="2" ry="2" />
<text  x="170.47" y="1119.5" ></text>
</g>
<g >
<title>__vm_munmap (3 samples, 0.18%)</title><rect x="158.5" y="1125" width="2.0" height="15.0" fill="rgb(233,103,1)" rx="2" ry="2" />
<text  x="161.45" y="1135.5" ></text>
</g>
<g >
<title>current_time (1 samples, 0.06%)</title><rect x="583.0" y="981" width="0.7" height="15.0" fill="rgb(222,2,54)" rx="2" ry="2" />
<text  x="586.00" y="991.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (12 samples, 0.71%)</title><rect x="474.1" y="901" width="8.3" height="15.0" fill="rgb(250,101,9)" rx="2" ry="2" />
<text  x="477.09" y="911.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (57 samples, 3.35%)</title><rect x="91.9" y="1253" width="39.5" height="15.0" fill="rgb(242,178,4)" rx="2" ry="2" />
<text  x="94.86" y="1263.5" >NaC..</text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.06%)</title><rect x="10.0" y="965" width="0.7" height="15.0" fill="rgb(232,59,35)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.06%)</title><rect x="587.2" y="1013" width="0.7" height="15.0" fill="rgb(236,183,16)" rx="2" ry="2" />
<text  x="590.17" y="1023.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.06%)</title><rect x="963.9" y="1157" width="0.6" height="15.0" fill="rgb(251,163,42)" rx="2" ry="2" />
<text  x="966.85" y="1167.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.06%)</title><rect x="1071.4" y="1141" width="0.7" height="15.0" fill="rgb(243,141,8)" rx="2" ry="2" />
<text  x="1074.38" y="1151.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.06%)</title><rect x="1001.3" y="245" width="0.7" height="15.0" fill="rgb(233,100,24)" rx="2" ry="2" />
<text  x="1004.31" y="255.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (2 samples, 0.12%)</title><rect x="938.9" y="1109" width="1.4" height="15.0" fill="rgb(251,192,12)" rx="2" ry="2" />
<text  x="941.88" y="1119.5" ></text>
</g>
<g >
<title>serde_cbor::de::from_slice (2 samples, 0.12%)</title><rect x="1000.6" y="981" width="1.4" height="15.0" fill="rgb(253,138,17)" rx="2" ry="2" />
<text  x="1003.62" y="991.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="10.0" y="885" width="0.7" height="15.0" fill="rgb(243,118,8)" rx="2" ry="2" />
<text  x="13.00" y="895.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.06%)</title><rect x="71.7" y="1141" width="0.7" height="15.0" fill="rgb(217,179,43)" rx="2" ry="2" />
<text  x="74.74" y="1151.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (6 samples, 0.35%)</title><rect x="160.5" y="1221" width="4.2" height="15.0" fill="rgb(225,11,41)" rx="2" ry="2" />
<text  x="163.53" y="1231.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="630.9" y="885" width="0.7" height="15.0" fill="rgb(235,146,19)" rx="2" ry="2" />
<text  x="633.87" y="895.5" ></text>
</g>
<g >
<title>unlock_page_memcg (1 samples, 0.06%)</title><rect x="576.1" y="949" width="0.7" height="15.0" fill="rgb(214,102,6)" rx="2" ry="2" />
<text  x="579.07" y="959.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one (1 samples, 0.06%)</title><rect x="236.1" y="1141" width="0.7" height="15.0" fill="rgb(254,43,20)" rx="2" ry="2" />
<text  x="239.15" y="1151.5" ></text>
</g>
<g >
<title>poll_idle (39 samples, 2.29%)</title><rect x="1128.3" y="1221" width="27.0" height="15.0" fill="rgb(212,112,5)" rx="2" ry="2" />
<text  x="1131.26" y="1231.5" >p..</text>
</g>
<g >
<title>do_user_addr_fault (324 samples, 19.05%)</title><rect x="384.6" y="1125" width="224.8" height="15.0" fill="rgb(206,119,25)" rx="2" ry="2" />
<text  x="387.60" y="1135.5" >do_user_addr_fault</text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.06%)</title><rect x="963.9" y="1093" width="0.6" height="15.0" fill="rgb(244,197,9)" rx="2" ry="2" />
<text  x="966.85" y="1103.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="1153.9" y="1189" width="0.7" height="15.0" fill="rgb(217,69,15)" rx="2" ry="2" />
<text  x="1156.93" y="1199.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="964.5" y="1253" width="0.7" height="15.0" fill="rgb(243,132,2)" rx="2" ry="2" />
<text  x="967.54" y="1263.5" ></text>
</g>
<g >
<title>main (9 samples, 0.53%)</title><rect x="995.8" y="1285" width="6.2" height="15.0" fill="rgb(227,142,40)" rx="2" ry="2" />
<text  x="998.76" y="1295.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (2 samples, 0.12%)</title><rect x="365.9" y="1141" width="1.4" height="15.0" fill="rgb(246,22,15)" rx="2" ry="2" />
<text  x="368.87" y="1151.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="1184.5" y="1253" width="0.6" height="15.0" fill="rgb(222,10,10)" rx="2" ry="2" />
<text  x="1187.45" y="1263.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="1089.4" y="1013" width="0.7" height="15.0" fill="rgb(206,84,5)" rx="2" ry="2" />
<text  x="1092.41" y="1023.5" ></text>
</g>
<g >
<title>notify_change (3 samples, 0.18%)</title><rect x="631.6" y="981" width="2.0" height="15.0" fill="rgb(233,223,53)" rx="2" ry="2" />
<text  x="634.56" y="991.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.06%)</title><rect x="81.5" y="837" width="0.6" height="15.0" fill="rgb(212,145,6)" rx="2" ry="2" />
<text  x="84.45" y="847.5" ></text>
</g>
<g >
<title>drop_buffers (4 samples, 0.24%)</title><rect x="210.5" y="709" width="2.8" height="15.0" fill="rgb(213,189,44)" rx="2" ry="2" />
<text  x="213.48" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="963.2" y="1269" width="1.3" height="15.0" fill="rgb(207,129,2)" rx="2" ry="2" />
<text  x="966.16" y="1279.5" ></text>
</g>
<g >
<title>__set_page_dirty (7 samples, 0.41%)</title><rect x="569.1" y="949" width="4.9" height="15.0" fill="rgb(207,67,50)" rx="2" ry="2" />
<text  x="572.13" y="959.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.06%)</title><rect x="656.5" y="1077" width="0.7" height="15.0" fill="rgb(253,138,47)" rx="2" ry="2" />
<text  x="659.54" y="1087.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (833 samples, 48.97%)</title><rect x="362.4" y="1301" width="577.9" height="15.0" fill="rgb(216,83,41)" rx="2" ry="2" />
<text  x="365.40" y="1311.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>page_mapping (2 samples, 0.12%)</title><rect x="576.8" y="965" width="1.3" height="15.0" fill="rgb(236,177,53)" rx="2" ry="2" />
<text  x="579.76" y="975.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.06%)</title><rect x="964.5" y="1221" width="0.7" height="15.0" fill="rgb(240,86,21)" rx="2" ry="2" />
<text  x="967.54" y="1231.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.12%)</title><rect x="1000.6" y="821" width="1.4" height="15.0" fill="rgb(252,173,12)" rx="2" ry="2" />
<text  x="1003.62" y="831.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.06%)</title><rect x="10.7" y="1125" width="0.7" height="15.0" fill="rgb(227,182,11)" rx="2" ry="2" />
<text  x="13.69" y="1135.5" ></text>
</g>
<g >
<title>smp_call_function_single (65 samples, 3.82%)</title><rect x="20.4" y="1093" width="45.1" height="15.0" fill="rgb(223,18,11)" rx="2" ry="2" />
<text  x="23.41" y="1103.5" >smp_..</text>
</g>
<g >
<title>__do_fault (153 samples, 8.99%)</title><rect x="408.9" y="1029" width="106.1" height="15.0" fill="rgb(252,101,40)" rx="2" ry="2" />
<text  x="411.88" y="1039.5" >__do_fault</text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_try_init (2 samples, 0.12%)</title><rect x="1000.6" y="1173" width="1.4" height="15.0" fill="rgb(224,196,1)" rx="2" ry="2" />
<text  x="1003.62" y="1183.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (6 samples, 0.35%)</title><rect x="160.5" y="1205" width="4.2" height="15.0" fill="rgb(212,180,23)" rx="2" ry="2" />
<text  x="163.53" y="1215.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (2 samples, 0.12%)</title><rect x="648.9" y="1189" width="1.4" height="15.0" fill="rgb(231,14,24)" rx="2" ry="2" />
<text  x="651.91" y="1199.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="656.5" y="1173" width="0.7" height="15.0" fill="rgb(216,211,35)" rx="2" ry="2" />
<text  x="659.54" y="1183.5" ></text>
</g>
<g >
<title>update_blocked_averages (6 samples, 0.35%)</title><rect x="1085.2" y="1109" width="4.2" height="15.0" fill="rgb(236,53,30)" rx="2" ry="2" />
<text  x="1088.25" y="1119.5" ></text>
</g>
<g >
<title>BitmapSetBit (4 samples, 0.24%)</title><rect x="151.5" y="1189" width="2.8" height="15.0" fill="rgb(250,53,22)" rx="2" ry="2" />
<text  x="154.52" y="1199.5" ></text>
</g>
<g >
<title>__irqentry_text_end (2 samples, 0.12%)</title><rect x="381.1" y="1157" width="1.4" height="15.0" fill="rgb(212,166,24)" rx="2" ry="2" />
<text  x="384.13" y="1167.5" ></text>
</g>
<g >
<title>__x64_sys_write (19 samples, 1.12%)</title><rect x="73.8" y="1141" width="13.2" height="15.0" fill="rgb(213,35,33)" rx="2" ry="2" />
<text  x="76.82" y="1151.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.06%)</title><rect x="1078.3" y="1237" width="0.7" height="15.0" fill="rgb(219,85,31)" rx="2" ry="2" />
<text  x="1081.31" y="1247.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="995.8" y="997" width="0.7" height="15.0" fill="rgb(234,25,46)" rx="2" ry="2" />
<text  x="998.76" y="1007.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.12%)</title><rect x="1155.3" y="1221" width="1.4" height="15.0" fill="rgb(229,9,4)" rx="2" ry="2" />
<text  x="1158.31" y="1231.5" ></text>
</g>
<g >
<title>xa_load (1 samples, 0.06%)</title><rect x="413.7" y="933" width="0.7" height="15.0" fill="rgb(236,133,31)" rx="2" ry="2" />
<text  x="416.74" y="943.5" ></text>
</g>
<g >
<title>ext4_mpage_readpages (13 samples, 0.76%)</title><rect x="482.4" y="901" width="9.0" height="15.0" fill="rgb(253,58,38)" rx="2" ry="2" />
<text  x="485.42" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (12 samples, 0.71%)</title><rect x="678.0" y="1157" width="8.4" height="15.0" fill="rgb(217,93,34)" rx="2" ry="2" />
<text  x="681.04" y="1167.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (39 samples, 2.29%)</title><rect x="131.4" y="1285" width="27.1" height="15.0" fill="rgb(241,94,3)" rx="2" ry="2" />
<text  x="134.40" y="1295.5" >N..</text>
</g>
<g >
<title>xa_get_order (5 samples, 0.29%)</title><rect x="467.8" y="901" width="3.5" height="15.0" fill="rgb(205,187,23)" rx="2" ry="2" />
<text  x="470.85" y="911.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.06%)</title><rect x="1089.4" y="1093" width="0.7" height="15.0" fill="rgb(249,68,47)" rx="2" ry="2" />
<text  x="1092.41" y="1103.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.06%)</title><rect x="79.4" y="917" width="0.7" height="15.0" fill="rgb(233,176,16)" rx="2" ry="2" />
<text  x="82.37" y="927.5" ></text>
</g>
<g >
<title>dispatcher (830 samples, 48.79%)</title><rect x="364.5" y="1253" width="575.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="367.49" y="1263.5" >dispatcher</text>
</g>
<g >
<title>page_remove_file_rmap (6 samples, 0.35%)</title><rect x="114.1" y="917" width="4.1" height="15.0" fill="rgb(205,117,39)" rx="2" ry="2" />
<text  x="117.06" y="927.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.06%)</title><rect x="1001.3" y="325" width="0.7" height="15.0" fill="rgb(218,177,32)" rx="2" ry="2" />
<text  x="1004.31" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.41%)</title><rect x="66.9" y="1237" width="4.8" height="15.0" fill="rgb(207,130,27)" rx="2" ry="2" />
<text  x="69.88" y="1247.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.12%)</title><rect x="159.1" y="1093" width="1.4" height="15.0" fill="rgb(234,218,30)" rx="2" ry="2" />
<text  x="162.15" y="1103.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (3 samples, 0.18%)</title><rect x="158.5" y="1253" width="2.0" height="15.0" fill="rgb(252,61,6)" rx="2" ry="2" />
<text  x="161.45" y="1263.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (1 samples, 0.06%)</title><rect x="995.8" y="1109" width="0.7" height="15.0" fill="rgb(243,196,32)" rx="2" ry="2" />
<text  x="998.76" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (57 samples, 3.35%)</title><rect x="91.9" y="1109" width="39.5" height="15.0" fill="rgb(250,188,20)" rx="2" ry="2" />
<text  x="94.86" y="1119.5" >ent..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (1 samples, 0.06%)</title><rect x="167.5" y="1173" width="0.7" height="15.0" fill="rgb(247,7,48)" rx="2" ry="2" />
<text  x="170.47" y="1183.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.06%)</title><rect x="236.1" y="1125" width="0.7" height="15.0" fill="rgb(205,57,12)" rx="2" ry="2" />
<text  x="239.15" y="1135.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (86 samples, 5.06%)</title><rect x="697.5" y="1125" width="59.6" height="15.0" fill="rgb(206,15,3)" rx="2" ry="2" />
<text  x="700.47" y="1135.5" >__memc..</text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.06%)</title><rect x="87.0" y="1205" width="0.7" height="15.0" fill="rgb(214,27,33)" rx="2" ry="2" />
<text  x="90.00" y="1215.5" ></text>
</g>
<g >
<title>UnmarkValidJumpTargets (1 samples, 0.06%)</title><rect x="164.0" y="1093" width="0.7" height="15.0" fill="rgb(234,8,42)" rx="2" ry="2" />
<text  x="167.00" y="1103.5" ></text>
</g>
<g >
<title>___slab_alloc (4 samples, 0.24%)</title><rect x="535.8" y="869" width="2.8" height="15.0" fill="rgb(229,8,36)" rx="2" ry="2" />
<text  x="538.83" y="879.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (3 samples, 0.18%)</title><rect x="155.7" y="1205" width="2.1" height="15.0" fill="rgb(235,26,4)" rx="2" ry="2" />
<text  x="158.68" y="1215.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.06%)</title><rect x="130.0" y="901" width="0.7" height="15.0" fill="rgb(210,162,4)" rx="2" ry="2" />
<text  x="133.01" y="911.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.06%)</title><rect x="938.9" y="901" width="0.7" height="15.0" fill="rgb(241,0,43)" rx="2" ry="2" />
<text  x="941.88" y="911.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once_force::{{closure}} (2 samples, 0.12%)</title><rect x="1000.6" y="1109" width="1.4" height="15.0" fill="rgb(232,149,49)" rx="2" ry="2" />
<text  x="1003.62" y="1119.5" ></text>
</g>
<g >
<title>evict (94 samples, 5.53%)</title><rect x="168.2" y="1029" width="65.2" height="15.0" fill="rgb(229,98,38)" rx="2" ry="2" />
<text  x="171.17" y="1039.5" >evict</text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (1 samples, 0.06%)</title><rect x="1001.3" y="517" width="0.7" height="15.0" fill="rgb(213,115,29)" rx="2" ry="2" />
<text  x="1004.31" y="527.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.06%)</title><rect x="656.5" y="1109" width="0.7" height="15.0" fill="rgb(223,27,45)" rx="2" ry="2" />
<text  x="659.54" y="1119.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.06%)</title><rect x="995.8" y="1045" width="0.7" height="15.0" fill="rgb(248,41,20)" rx="2" ry="2" />
<text  x="998.76" y="1055.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.06%)</title><rect x="397.8" y="1093" width="0.7" height="15.0" fill="rgb(244,200,4)" rx="2" ry="2" />
<text  x="400.78" y="1103.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.12%)</title><rect x="236.8" y="1205" width="1.4" height="15.0" fill="rgb(232,86,31)" rx="2" ry="2" />
<text  x="239.84" y="1215.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.06%)</title><rect x="167.5" y="1045" width="0.7" height="15.0" fill="rgb(212,138,15)" rx="2" ry="2" />
<text  x="170.47" y="1055.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.06%)</title><rect x="458.8" y="869" width="0.7" height="15.0" fill="rgb(245,108,49)" rx="2" ry="2" />
<text  x="461.83" y="879.5" ></text>
</g>
<g >
<title>event_function_call (1 samples, 0.06%)</title><rect x="87.0" y="1221" width="0.7" height="15.0" fill="rgb(241,22,44)" rx="2" ry="2" />
<text  x="90.00" y="1231.5" ></text>
</g>
<g >
<title>__GI___munmap (57 samples, 3.35%)</title><rect x="91.9" y="1125" width="39.5" height="15.0" fill="rgb(230,125,35)" rx="2" ry="2" />
<text  x="94.86" y="1135.5" >__G..</text>
</g>
<g >
<title>page_remove_rmap (8 samples, 0.47%)</title><rect x="113.4" y="933" width="5.5" height="15.0" fill="rgb(231,16,1)" rx="2" ry="2" />
<text  x="116.36" y="943.5" ></text>
</g>
<g >
<title>NaClDescUnref (57 samples, 3.35%)</title><rect x="91.9" y="1269" width="39.5" height="15.0" fill="rgb(243,221,23)" rx="2" ry="2" />
<text  x="94.86" y="1279.5" >NaC..</text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.06%)</title><rect x="1001.3" y="277" width="0.7" height="15.0" fill="rgb(242,173,15)" rx="2" ry="2" />
<text  x="1004.31" y="287.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (1 samples, 0.06%)</title><rect x="1001.3" y="309" width="0.7" height="15.0" fill="rgb(219,107,0)" rx="2" ry="2" />
<text  x="1004.31" y="319.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.06%)</title><rect x="1079.0" y="1301" width="0.7" height="15.0" fill="rgb(241,134,12)" rx="2" ry="2" />
<text  x="1082.01" y="1311.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.06%)</title><rect x="69.7" y="1157" width="0.7" height="15.0" fill="rgb(207,47,32)" rx="2" ry="2" />
<text  x="72.66" y="1167.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (1 samples, 0.06%)</title><rect x="1001.3" y="501" width="0.7" height="15.0" fill="rgb(243,51,20)" rx="2" ry="2" />
<text  x="1004.31" y="511.5" ></text>
</g>
<g >
<title>xa_load (3 samples, 0.18%)</title><rect x="489.4" y="885" width="2.0" height="15.0" fill="rgb(226,131,25)" rx="2" ry="2" />
<text  x="492.35" y="895.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.06%)</title><rect x="167.5" y="1077" width="0.7" height="15.0" fill="rgb(245,169,40)" rx="2" ry="2" />
<text  x="170.47" y="1087.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (7 samples, 0.41%)</title><rect x="183.4" y="773" width="4.9" height="15.0" fill="rgb(219,116,9)" rx="2" ry="2" />
<text  x="186.43" y="783.5" ></text>
</g>
<g >
<title>NaClSysOpen (94 samples, 5.53%)</title><rect x="168.2" y="1285" width="65.2" height="15.0" fill="rgb(207,181,29)" rx="2" ry="2" />
<text  x="171.17" y="1295.5" >NaClSys..</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (9 samples, 0.53%)</title><rect x="932.6" y="1141" width="6.3" height="15.0" fill="rgb(237,87,38)" rx="2" ry="2" />
<text  x="935.63" y="1151.5" ></text>
</g>
<g >
<title>__do_munmap (3 samples, 0.18%)</title><rect x="158.5" y="1109" width="2.0" height="15.0" fill="rgb(210,150,16)" rx="2" ry="2" />
<text  x="161.45" y="1119.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (2 samples, 0.12%)</title><rect x="238.2" y="1189" width="1.4" height="15.0" fill="rgb(242,7,30)" rx="2" ry="2" />
<text  x="241.23" y="1199.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (21 samples, 1.23%)</title><rect x="72.4" y="1269" width="14.6" height="15.0" fill="rgb(243,128,32)" rx="2" ry="2" />
<text  x="75.43" y="1279.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.06%)</title><rect x="1153.9" y="1077" width="0.7" height="15.0" fill="rgb(213,189,44)" rx="2" ry="2" />
<text  x="1156.93" y="1087.5" ></text>
</g>
<g >
<title>free_unref_page_list (10 samples, 0.59%)</title><rect x="171.6" y="773" width="7.0" height="15.0" fill="rgb(216,84,48)" rx="2" ry="2" />
<text  x="174.63" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1 samples, 0.06%)</title><rect x="994.4" y="1285" width="0.7" height="15.0" fill="rgb(232,85,45)" rx="2" ry="2" />
<text  x="997.37" y="1295.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (3 samples, 0.18%)</title><rect x="956.9" y="1317" width="2.1" height="15.0" fill="rgb(239,184,46)" rx="2" ry="2" />
<text  x="959.91" y="1327.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 0.06%)</title><rect x="10.7" y="1317" width="0.7" height="15.0" fill="rgb(251,166,29)" rx="2" ry="2" />
<text  x="13.69" y="1327.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::with_capacity_and_hasher_and_shard_amount::{{closure}} (1 samples, 0.06%)</title><rect x="1000.6" y="453" width="0.7" height="15.0" fill="rgb(226,62,42)" rx="2" ry="2" />
<text  x="1003.62" y="463.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.06%)</title><rect x="1078.3" y="1157" width="0.7" height="15.0" fill="rgb(248,114,52)" rx="2" ry="2" />
<text  x="1081.31" y="1167.5" ></text>
</g>
<g >
<title>kernel_clone (1 samples, 0.06%)</title><rect x="994.4" y="1253" width="0.7" height="15.0" fill="rgb(230,29,43)" rx="2" ry="2" />
<text  x="997.37" y="1263.5" ></text>
</g>
<g >
<title>ext4_releasepage (1 samples, 0.06%)</title><rect x="1072.1" y="965" width="0.7" height="15.0" fill="rgb(209,210,30)" rx="2" ry="2" />
<text  x="1075.07" y="975.5" ></text>
</g>
<g >
<title>create_page_buffers (31 samples, 1.82%)</title><rect x="526.8" y="965" width="21.5" height="15.0" fill="rgb(248,142,41)" rx="2" ry="2" />
<text  x="529.81" y="975.5" >c..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (1 samples, 0.06%)</title><rect x="939.6" y="789" width="0.7" height="15.0" fill="rgb(236,17,17)" rx="2" ry="2" />
<text  x="942.57" y="799.5" ></text>
</g>
<g >
<title>Process0Operands (1 samples, 0.06%)</title><rect x="154.3" y="1205" width="0.7" height="15.0" fill="rgb(224,13,27)" rx="2" ry="2" />
<text  x="157.29" y="1215.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (17 samples, 1.00%)</title><rect x="74.5" y="1013" width="11.8" height="15.0" fill="rgb(206,125,47)" rx="2" ry="2" />
<text  x="77.51" y="1023.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="995.8" y="1061" width="0.7" height="15.0" fill="rgb(241,14,29)" rx="2" ry="2" />
<text  x="998.76" y="1071.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.06%)</title><rect x="10.0" y="1253" width="0.7" height="15.0" fill="rgb(243,30,25)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="1173.4" y="1221" width="0.6" height="15.0" fill="rgb(254,2,24)" rx="2" ry="2" />
<text  x="1176.35" y="1231.5" ></text>
</g>
<g >
<title>do_idle (156 samples, 9.17%)</title><rect x="1079.7" y="1285" width="108.2" height="15.0" fill="rgb(225,226,39)" rx="2" ry="2" />
<text  x="1082.70" y="1295.5" >do_idle</text>
</g>
<g >
<title>__libc_start_call_main (9 samples, 0.53%)</title><rect x="995.8" y="1301" width="6.2" height="15.0" fill="rgb(233,11,40)" rx="2" ry="2" />
<text  x="998.76" y="1311.5" ></text>
</g>
<g >
<title>ext4_claim_free_clusters (1 samples, 0.06%)</title><rect x="559.4" y="901" width="0.7" height="15.0" fill="rgb(223,152,24)" rx="2" ry="2" />
<text  x="562.42" y="911.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (1 samples, 0.06%)</title><rect x="1001.3" y="341" width="0.7" height="15.0" fill="rgb(248,169,37)" rx="2" ry="2" />
<text  x="1004.31" y="351.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.12%)</title><rect x="938.9" y="1125" width="1.4" height="15.0" fill="rgb(248,5,37)" rx="2" ry="2" />
<text  x="941.88" y="1135.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (32 samples, 1.88%)</title><rect x="451.9" y="917" width="22.2" height="15.0" fill="rgb(222,163,22)" rx="2" ry="2" />
<text  x="454.89" y="927.5" >_..</text>
</g>
<g >
<title>irqentry_exit (5 samples, 0.29%)</title><rect x="609.4" y="1125" width="3.4" height="15.0" fill="rgb(233,4,29)" rx="2" ry="2" />
<text  x="612.37" y="1135.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.12%)</title><rect x="648.9" y="1173" width="1.4" height="15.0" fill="rgb(237,207,47)" rx="2" ry="2" />
<text  x="651.91" y="1183.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.12%)</title><rect x="609.4" y="1109" width="1.4" height="15.0" fill="rgb(209,17,8)" rx="2" ry="2" />
<text  x="612.37" y="1119.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.06%)</title><rect x="938.9" y="1013" width="0.7" height="15.0" fill="rgb(253,47,46)" rx="2" ry="2" />
<text  x="941.88" y="1023.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::de::Deserialize for dashmap::DashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.06%)</title><rect x="1001.3" y="261" width="0.7" height="15.0" fill="rgb(226,150,22)" rx="2" ry="2" />
<text  x="1004.31" y="271.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.06%)</title><rect x="938.9" y="1093" width="0.7" height="15.0" fill="rgb(207,148,23)" rx="2" ry="2" />
<text  x="941.88" y="1103.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="1077.6" y="1269" width="0.7" height="15.0" fill="rgb(237,211,37)" rx="2" ry="2" />
<text  x="1080.62" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="158.5" y="1173" width="2.0" height="15.0" fill="rgb(219,129,2)" rx="2" ry="2" />
<text  x="161.45" y="1183.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (1 samples, 0.06%)</title><rect x="78.7" y="917" width="0.7" height="15.0" fill="rgb(243,34,6)" rx="2" ry="2" />
<text  x="81.68" y="927.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.06%)</title><rect x="1173.4" y="1109" width="0.6" height="15.0" fill="rgb(230,187,16)" rx="2" ry="2" />
<text  x="1176.35" y="1119.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.06%)</title><rect x="1160.2" y="1205" width="0.7" height="15.0" fill="rgb(230,217,34)" rx="2" ry="2" />
<text  x="1163.17" y="1215.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (2 samples, 0.12%)</title><rect x="82.1" y="933" width="1.4" height="15.0" fill="rgb(206,37,37)" rx="2" ry="2" />
<text  x="85.15" y="943.5" ></text>
</g>
<g >
<title>std::fs::remove_file (94 samples, 5.53%)</title><rect x="168.2" y="1189" width="65.2" height="15.0" fill="rgb(220,207,48)" rx="2" ry="2" />
<text  x="171.17" y="1199.5" >std::fs..</text>
</g>
<g >
<title>ovl_setattr (3 samples, 0.18%)</title><rect x="631.6" y="1013" width="2.0" height="15.0" fill="rgb(210,203,17)" rx="2" ry="2" />
<text  x="634.56" y="1023.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.06%)</title><rect x="1082.5" y="1061" width="0.7" height="15.0" fill="rgb(216,23,38)" rx="2" ry="2" />
<text  x="1085.48" y="1071.5" ></text>
</g>
<g >
<title>iput.part.0 (94 samples, 5.53%)</title><rect x="168.2" y="901" width="65.2" height="15.0" fill="rgb(247,119,36)" rx="2" ry="2" />
<text  x="171.17" y="911.5" >iput.pa..</text>
</g>
<g >
<title>perf_mmap__read_head (1 samples, 0.06%)</title><rect x="72.4" y="1237" width="0.7" height="15.0" fill="rgb(215,115,16)" rx="2" ry="2" />
<text  x="75.43" y="1247.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (94 samples, 5.53%)</title><rect x="168.2" y="1205" width="65.2" height="15.0" fill="rgb(211,198,20)" rx="2" ry="2" />
<text  x="171.17" y="1215.5" >rustpos..</text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="459.5" y="869" width="0.7" height="15.0" fill="rgb(220,3,16)" rx="2" ry="2" />
<text  x="462.52" y="879.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="1070.7" y="1173" width="0.7" height="15.0" fill="rgb(235,183,24)" rx="2" ry="2" />
<text  x="1073.68" y="1183.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.06%)</title><rect x="964.5" y="1125" width="0.7" height="15.0" fill="rgb(205,92,25)" rx="2" ry="2" />
<text  x="967.54" y="1135.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (115 samples, 6.76%)</title><rect x="241.0" y="1173" width="79.8" height="15.0" fill="rgb(218,173,21)" rx="2" ry="2" />
<text  x="244.01" y="1183.5" >__memcpy_..</text>
</g>
<g >
<title>__xa_set_mark (1 samples, 0.06%)</title><rect x="574.0" y="949" width="0.7" height="15.0" fill="rgb(232,166,43)" rx="2" ry="2" />
<text  x="576.99" y="959.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.12%)</title><rect x="1000.6" y="949" width="1.4" height="15.0" fill="rgb(238,184,48)" rx="2" ry="2" />
<text  x="1003.62" y="959.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (2 samples, 0.12%)</title><rect x="1077.6" y="1301" width="1.4" height="15.0" fill="rgb(253,135,46)" rx="2" ry="2" />
<text  x="1080.62" y="1311.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.06%)</title><rect x="1001.3" y="37" width="0.7" height="15.0" fill="rgb(208,171,11)" rx="2" ry="2" />
<text  x="1004.31" y="47.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (1 samples, 0.06%)</title><rect x="578.8" y="981" width="0.7" height="15.0" fill="rgb(210,111,22)" rx="2" ry="2" />
<text  x="581.84" y="991.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (1 samples, 0.06%)</title><rect x="87.0" y="1253" width="0.7" height="15.0" fill="rgb(208,103,5)" rx="2" ry="2" />
<text  x="90.00" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (1 samples, 0.06%)</title><rect x="650.3" y="1205" width="0.7" height="15.0" fill="rgb(250,111,7)" rx="2" ry="2" />
<text  x="653.29" y="1215.5" ></text>
</g>
<g >
<title>try_to_release_page (1 samples, 0.06%)</title><rect x="1072.1" y="981" width="0.7" height="15.0" fill="rgb(246,129,1)" rx="2" ry="2" />
<text  x="1075.07" y="991.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (181 samples, 10.64%)</title><rect x="236.8" y="1237" width="125.6" height="15.0" fill="rgb(219,67,45)" rx="2" ry="2" />
<text  x="239.84" y="1247.5" >rustposix::safe..</text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.06%)</title><rect x="71.0" y="1173" width="0.7" height="15.0" fill="rgb(205,193,5)" rx="2" ry="2" />
<text  x="74.05" y="1183.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (5 samples, 0.29%)</title><rect x="316.6" y="981" width="3.5" height="15.0" fill="rgb(237,154,21)" rx="2" ry="2" />
<text  x="319.62" y="991.5" ></text>
</g>
<g >
<title>copy_process (1 samples, 0.06%)</title><rect x="994.4" y="1237" width="0.7" height="15.0" fill="rgb(211,193,27)" rx="2" ry="2" />
<text  x="997.37" y="1247.5" ></text>
</g>
<g >
<title>ext4_convert_inline_data (1 samples, 0.06%)</title><rect x="582.3" y="997" width="0.7" height="15.0" fill="rgb(249,221,20)" rx="2" ry="2" />
<text  x="585.31" y="1007.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.06%)</title><rect x="938.9" y="949" width="0.7" height="15.0" fill="rgb(243,97,16)" rx="2" ry="2" />
<text  x="941.88" y="959.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (2 samples, 0.12%)</title><rect x="214.0" y="709" width="1.3" height="15.0" fill="rgb(236,92,5)" rx="2" ry="2" />
<text  x="216.95" y="719.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="133.5" y="1189" width="0.7" height="15.0" fill="rgb(211,104,38)" rx="2" ry="2" />
<text  x="136.48" y="1199.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (2 samples, 0.12%)</title><rect x="238.2" y="1173" width="1.4" height="15.0" fill="rgb(242,210,5)" rx="2" ry="2" />
<text  x="241.23" y="1183.5" ></text>
</g>
<g >
<title>core::cmp::min (2 samples, 0.12%)</title><rect x="648.9" y="1205" width="1.4" height="15.0" fill="rgb(219,216,15)" rx="2" ry="2" />
<text  x="651.91" y="1215.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (3 samples, 0.18%)</title><rect x="1179.6" y="1173" width="2.1" height="15.0" fill="rgb(220,178,51)" rx="2" ry="2" />
<text  x="1182.59" y="1183.5" ></text>
</g>
<g >
<title>__execvpe_common (1 samples, 0.06%)</title><rect x="10.7" y="1269" width="0.7" height="15.0" fill="rgb(244,165,44)" rx="2" ry="2" />
<text  x="13.69" y="1279.5" ></text>
</g>
<g >
<title>ExpandSuperinstructionBySandboxingBytes (1 samples, 0.06%)</title><rect x="164.0" y="1109" width="0.7" height="15.0" fill="rgb(205,196,18)" rx="2" ry="2" />
<text  x="167.00" y="1119.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (60 samples, 3.53%)</title><rect x="320.8" y="1221" width="41.6" height="15.0" fill="rgb(251,121,2)" rx="2" ry="2" />
<text  x="323.78" y="1231.5" >rus..</text>
</g>
<g >
<title>ext4_da_write_begin (10 samples, 0.59%)</title><rect x="75.2" y="965" width="6.9" height="15.0" fill="rgb(252,3,24)" rx="2" ry="2" />
<text  x="78.21" y="975.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.06%)</title><rect x="938.9" y="1077" width="0.7" height="15.0" fill="rgb(241,159,21)" rx="2" ry="2" />
<text  x="941.88" y="1087.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="236.1" y="1077" width="0.7" height="15.0" fill="rgb(231,66,29)" rx="2" ry="2" />
<text  x="239.15" y="1087.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="236.1" y="1061" width="0.7" height="15.0" fill="rgb(245,153,50)" rx="2" ry="2" />
<text  x="239.15" y="1071.5" ></text>
</g>
<g >
<title>NaClSysWrite (833 samples, 48.97%)</title><rect x="362.4" y="1285" width="577.9" height="15.0" fill="rgb(251,65,1)" rx="2" ry="2" />
<text  x="365.40" y="1295.5" >NaClSysWrite</text>
</g>
<g >
<title>flush_tlb_func_common.constprop.0 (1 samples, 0.06%)</title><rect x="964.5" y="1141" width="0.7" height="15.0" fill="rgb(246,217,45)" rx="2" ry="2" />
<text  x="967.54" y="1151.5" ></text>
</g>
<g >
<title>__inc_node_page_state (1 samples, 0.06%)</title><rect x="82.8" y="869" width="0.7" height="15.0" fill="rgb(214,178,23)" rx="2" ry="2" />
<text  x="85.84" y="879.5" ></text>
</g>
<g >
<title>copy_page_from_iter (1 samples, 0.06%)</title><rect x="963.2" y="1173" width="0.7" height="15.0" fill="rgb(240,45,10)" rx="2" ry="2" />
<text  x="966.16" y="1183.5" ></text>
</g>
<g >
<title>error_entry (3 samples, 0.18%)</title><rect x="612.8" y="1157" width="2.1" height="15.0" fill="rgb(225,10,54)" rx="2" ry="2" />
<text  x="615.83" y="1167.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.06%)</title><rect x="1079.0" y="1285" width="0.7" height="15.0" fill="rgb(207,44,52)" rx="2" ry="2" />
<text  x="1082.01" y="1295.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.06%)</title><rect x="10.0" y="1045" width="0.7" height="15.0" fill="rgb(220,171,9)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (1 samples, 0.06%)</title><rect x="1089.4" y="1077" width="0.7" height="15.0" fill="rgb(250,117,15)" rx="2" ry="2" />
<text  x="1092.41" y="1087.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.06%)</title><rect x="87.0" y="1093" width="0.7" height="15.0" fill="rgb(230,227,28)" rx="2" ry="2" />
<text  x="90.00" y="1103.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_key_value (1 samples, 0.06%)</title><rect x="239.6" y="1189" width="0.7" height="15.0" fill="rgb(210,190,15)" rx="2" ry="2" />
<text  x="242.62" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.41%)</title><rect x="66.9" y="1253" width="4.8" height="15.0" fill="rgb(240,211,27)" rx="2" ry="2" />
<text  x="69.88" y="1263.5" ></text>
</g>
<g >
<title>do_fault (23 samples, 1.35%)</title><rect x="304.8" y="1061" width="16.0" height="15.0" fill="rgb(232,207,35)" rx="2" ry="2" />
<text  x="307.83" y="1071.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (1 samples, 0.06%)</title><rect x="939.6" y="773" width="0.7" height="15.0" fill="rgb(238,35,35)" rx="2" ry="2" />
<text  x="942.57" y="783.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3 samples, 0.18%)</title><rect x="1081.8" y="1141" width="2.1" height="15.0" fill="rgb(206,104,34)" rx="2" ry="2" />
<text  x="1084.78" y="1151.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.06%)</title><rect x="1173.4" y="1093" width="0.6" height="15.0" fill="rgb(216,153,13)" rx="2" ry="2" />
<text  x="1176.35" y="1103.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 3.76%)</title><rect x="21.1" y="1013" width="44.4" height="15.0" fill="rgb(210,56,11)" rx="2" ry="2" />
<text  x="24.10" y="1023.5" >ctx_..</text>
</g>
<g >
<title>ovl_write_iter (17 samples, 1.00%)</title><rect x="74.5" y="1077" width="11.8" height="15.0" fill="rgb(254,80,31)" rx="2" ry="2" />
<text  x="77.51" y="1087.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="1070.0" y="1333" width="0.7" height="15.0" fill="rgb(210,228,17)" rx="2" ry="2" />
<text  x="1072.99" y="1343.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (1 samples, 0.06%)</title><rect x="1001.3" y="661" width="0.7" height="15.0" fill="rgb(247,202,6)" rx="2" ry="2" />
<text  x="1004.31" y="671.5" ></text>
</g>
<g >
<title>do_fault_around (23 samples, 1.35%)</title><rect x="304.8" y="1045" width="16.0" height="15.0" fill="rgb(243,48,41)" rx="2" ry="2" />
<text  x="307.83" y="1055.5" ></text>
</g>
<g >
<title>unmap_region (56 samples, 3.29%)</title><rect x="92.6" y="1029" width="38.8" height="15.0" fill="rgb(212,28,31)" rx="2" ry="2" />
<text  x="95.55" y="1039.5" >unm..</text>
</g>
<g >
<title>rmqueue (12 samples, 0.71%)</title><rect x="442.2" y="869" width="8.3" height="15.0" fill="rgb(212,56,1)" rx="2" ry="2" />
<text  x="445.18" y="879.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.12%)</title><rect x="1187.9" y="1285" width="1.4" height="15.0" fill="rgb(245,216,31)" rx="2" ry="2" />
<text  x="1190.92" y="1295.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (79 samples, 4.64%)</title><rect x="12.1" y="1253" width="54.8" height="15.0" fill="rgb(246,110,17)" rx="2" ry="2" />
<text  x="15.08" y="1263.5" >perf_..</text>
</g>
<g >
<title>__update_blocked_fair (5 samples, 0.29%)</title><rect x="1085.2" y="1093" width="3.5" height="15.0" fill="rgb(247,0,21)" rx="2" ry="2" />
<text  x="1088.25" y="1103.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.06%)</title><rect x="366.6" y="1109" width="0.7" height="15.0" fill="rgb(226,35,25)" rx="2" ry="2" />
<text  x="369.57" y="1119.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.06%)</title><rect x="1083.2" y="1061" width="0.7" height="15.0" fill="rgb(247,217,49)" rx="2" ry="2" />
<text  x="1086.17" y="1071.5" ></text>
</g>
<g >
<title>perf_ioctl (77 samples, 4.53%)</title><rect x="12.1" y="1173" width="53.4" height="15.0" fill="rgb(221,146,38)" rx="2" ry="2" />
<text  x="15.08" y="1183.5" >perf_..</text>
</g>
<g >
<title>NaClElfImageLoad (1 samples, 0.06%)</title><rect x="995.8" y="1205" width="0.7" height="15.0" fill="rgb(239,105,48)" rx="2" ry="2" />
<text  x="998.76" y="1215.5" ></text>
</g>
<g >
<title>_raw_read_lock (3 samples, 0.18%)</title><rect x="551.8" y="933" width="2.1" height="15.0" fill="rgb(253,159,31)" rx="2" ry="2" />
<text  x="554.79" y="943.5" ></text>
</g>
<g >
<title>std::fs::File::set_len (4 samples, 0.24%)</title><rect x="630.9" y="1189" width="2.7" height="15.0" fill="rgb(206,210,53)" rx="2" ry="2" />
<text  x="633.87" y="1199.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.06%)</title><rect x="1078.3" y="1189" width="0.7" height="15.0" fill="rgb(241,16,37)" rx="2" ry="2" />
<text  x="1081.31" y="1199.5" ></text>
</g>
<g >
<title>__vm_munmap (57 samples, 3.35%)</title><rect x="91.9" y="1061" width="39.5" height="15.0" fill="rgb(231,130,13)" rx="2" ry="2" />
<text  x="94.86" y="1071.5" >__v..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1 samples, 0.06%)</title><rect x="1000.6" y="293" width="0.7" height="15.0" fill="rgb(218,155,20)" rx="2" ry="2" />
<text  x="1003.62" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="313.8" y="997" width="0.7" height="15.0" fill="rgb(217,2,45)" rx="2" ry="2" />
<text  x="316.84" y="1007.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (2 samples, 0.12%)</title><rect x="1000.6" y="901" width="1.4" height="15.0" fill="rgb(213,100,50)" rx="2" ry="2" />
<text  x="1003.62" y="911.5" ></text>
</g>
<g >
<title>ksys_write (19 samples, 1.12%)</title><rect x="73.8" y="1125" width="13.2" height="15.0" fill="rgb(247,175,23)" rx="2" ry="2" />
<text  x="76.82" y="1135.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.06%)</title><rect x="1072.8" y="1061" width="0.7" height="15.0" fill="rgb(236,140,36)" rx="2" ry="2" />
<text  x="1075.76" y="1071.5" ></text>
</g>
<g >
<title>NaClSysMmapIntern (1 samples, 0.06%)</title><rect x="167.5" y="1269" width="0.7" height="15.0" fill="rgb(247,68,31)" rx="2" ry="2" />
<text  x="170.47" y="1279.5" ></text>
</g>
<g >
<title>_dl_relocate_object (2 samples, 0.12%)</title><rect x="1002.7" y="1269" width="1.4" height="15.0" fill="rgb(207,157,50)" rx="2" ry="2" />
<text  x="1005.70" y="1279.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="938.9" y="917" width="0.7" height="15.0" fill="rgb(240,68,37)" rx="2" ry="2" />
<text  x="941.88" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="10.7" y="1237" width="0.7" height="15.0" fill="rgb(245,23,3)" rx="2" ry="2" />
<text  x="13.69" y="1247.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.06%)</title><rect x="1156.7" y="1221" width="0.7" height="15.0" fill="rgb(215,105,4)" rx="2" ry="2" />
<text  x="1159.70" y="1231.5" ></text>
</g>
<g >
<title>security_inode_getsecurity (1 samples, 0.06%)</title><rect x="630.9" y="917" width="0.7" height="15.0" fill="rgb(242,145,15)" rx="2" ry="2" />
<text  x="633.87" y="927.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.06%)</title><rect x="1000.6" y="357" width="0.7" height="15.0" fill="rgb(236,135,29)" rx="2" ry="2" />
<text  x="1003.62" y="367.5" ></text>
</g>
<g >
<title>_perf_ioctl (1 samples, 0.06%)</title><rect x="87.0" y="1269" width="0.7" height="15.0" fill="rgb(222,35,13)" rx="2" ry="2" />
<text  x="90.00" y="1279.5" ></text>
</g>
<g >
<title>__xa_set_mark (1 samples, 0.06%)</title><rect x="570.5" y="933" width="0.7" height="15.0" fill="rgb(206,202,8)" rx="2" ry="2" />
<text  x="573.52" y="943.5" ></text>
</g>
<g >
<title>perf_event__prepare_comm (1 samples, 0.06%)</title><rect x="71.7" y="1269" width="0.7" height="15.0" fill="rgb(205,85,5)" rx="2" ry="2" />
<text  x="74.74" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="630.9" y="1109" width="2.7" height="15.0" fill="rgb(231,92,18)" rx="2" ry="2" />
<text  x="633.87" y="1119.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (57 samples, 3.35%)</title><rect x="91.9" y="1077" width="39.5" height="15.0" fill="rgb(254,175,32)" rx="2" ry="2" />
<text  x="94.86" y="1087.5" >__x..</text>
</g>
<g >
<title>process_vm_rw (2 samples, 0.12%)</title><rect x="963.2" y="1221" width="1.3" height="15.0" fill="rgb(224,72,40)" rx="2" ry="2" />
<text  x="966.16" y="1231.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.06%)</title><rect x="964.5" y="1173" width="0.7" height="15.0" fill="rgb(213,45,28)" rx="2" ry="2" />
<text  x="967.54" y="1183.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (3 samples, 0.18%)</title><rect x="628.8" y="1093" width="2.1" height="15.0" fill="rgb(245,167,0)" rx="2" ry="2" />
<text  x="631.79" y="1103.5" ></text>
</g>
<g >
<title>_dl_check_all_versions (1 samples, 0.06%)</title><rect x="1002.0" y="1237" width="0.7" height="15.0" fill="rgb(237,208,13)" rx="2" ry="2" />
<text  x="1005.00" y="1247.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.12%)</title><rect x="75.2" y="869" width="1.4" height="15.0" fill="rgb(217,178,37)" rx="2" ry="2" />
<text  x="78.21" y="879.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="528.2" y="949" width="0.7" height="15.0" fill="rgb(247,15,39)" rx="2" ry="2" />
<text  x="531.20" y="959.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (1 samples, 0.06%)</title><rect x="939.6" y="1013" width="0.7" height="15.0" fill="rgb(236,91,40)" rx="2" ry="2" />
<text  x="942.57" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (79 samples, 4.64%)</title><rect x="12.1" y="1189" width="54.8" height="15.0" fill="rgb(243,45,13)" rx="2" ry="2" />
<text  x="15.08" y="1199.5" >__x64..</text>
</g>
<g >
<title>zero_user_segments.constprop.0 (23 samples, 1.35%)</title><rect x="492.1" y="901" width="16.0" height="15.0" fill="rgb(212,167,52)" rx="2" ry="2" />
<text  x="495.13" y="911.5" ></text>
</g>
<g >
<title>remote_function (1 samples, 0.06%)</title><rect x="87.0" y="1173" width="0.7" height="15.0" fill="rgb(231,168,52)" rx="2" ry="2" />
<text  x="90.00" y="1183.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (79 samples, 4.64%)</title><rect x="12.1" y="1221" width="54.8" height="15.0" fill="rgb(213,72,42)" rx="2" ry="2" />
<text  x="15.08" y="1231.5" >entry..</text>
</g>
<g >
<title>evict (94 samples, 5.53%)</title><rect x="168.2" y="869" width="65.2" height="15.0" fill="rgb(230,186,8)" rx="2" ry="2" />
<text  x="171.17" y="879.5" >evict</text>
</g>
<g >
<title>sync_regs (1 samples, 0.06%)</title><rect x="775.2" y="1189" width="0.7" height="15.0" fill="rgb(218,190,18)" rx="2" ry="2" />
<text  x="778.16" y="1199.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="133.5" y="1141" width="0.7" height="15.0" fill="rgb(235,3,46)" rx="2" ry="2" />
<text  x="136.48" y="1151.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="1153.9" y="1157" width="0.7" height="15.0" fill="rgb(240,92,46)" rx="2" ry="2" />
<text  x="1156.93" y="1167.5" ></text>
</g>
<g >
<title>_perf_event_enable (1 samples, 0.06%)</title><rect x="87.0" y="1237" width="0.7" height="15.0" fill="rgb(236,10,44)" rx="2" ry="2" />
<text  x="90.00" y="1247.5" ></text>
</g>
<g >
<title>up_read (3 samples, 0.18%)</title><rect x="607.3" y="1109" width="2.1" height="15.0" fill="rgb(234,115,0)" rx="2" ry="2" />
<text  x="610.28" y="1119.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 3.76%)</title><rect x="21.1" y="1029" width="44.4" height="15.0" fill="rgb(237,18,4)" rx="2" ry="2" />
<text  x="24.10" y="1039.5" >__pe..</text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="319.4" y="965" width="0.7" height="15.0" fill="rgb(226,149,5)" rx="2" ry="2" />
<text  x="322.39" y="975.5" ></text>
</g>
<g >
<title>do_user_addr_fault (24 samples, 1.41%)</title><rect x="304.1" y="1125" width="16.7" height="15.0" fill="rgb(231,55,34)" rx="2" ry="2" />
<text  x="307.13" y="1135.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.06%)</title><rect x="539.3" y="869" width="0.7" height="15.0" fill="rgb(254,97,10)" rx="2" ry="2" />
<text  x="542.30" y="879.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::initialize (2 samples, 0.12%)</title><rect x="1000.6" y="1157" width="1.4" height="15.0" fill="rgb(229,94,21)" rx="2" ry="2" />
<text  x="1003.62" y="1167.5" ></text>
</g>
<g >
<title>handle_mm_fault (23 samples, 1.35%)</title><rect x="304.8" y="1109" width="16.0" height="15.0" fill="rgb(210,19,8)" rx="2" ry="2" />
<text  x="307.83" y="1119.5" ></text>
</g>
<g >
<title>ext4_set_page_dirty (13 samples, 0.76%)</title><rect x="119.6" y="917" width="9.0" height="15.0" fill="rgb(254,128,44)" rx="2" ry="2" />
<text  x="122.61" y="927.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (1 samples, 0.06%)</title><rect x="10.7" y="1157" width="0.7" height="15.0" fill="rgb(236,204,19)" rx="2" ry="2" />
<text  x="13.69" y="1167.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (2 samples, 0.12%)</title><rect x="412.4" y="853" width="1.3" height="15.0" fill="rgb(224,56,37)" rx="2" ry="2" />
<text  x="415.35" y="863.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_insert (1 samples, 0.06%)</title><rect x="1001.3" y="117" width="0.7" height="15.0" fill="rgb(213,51,42)" rx="2" ry="2" />
<text  x="1004.31" y="127.5" ></text>
</g>
<g >
<title>page_mapping (2 samples, 0.12%)</title><rect x="574.7" y="949" width="1.4" height="15.0" fill="rgb(244,183,47)" rx="2" ry="2" />
<text  x="577.68" y="959.5" ></text>
</g>
<g >
<title>rmqueue (2 samples, 0.12%)</title><rect x="412.4" y="869" width="1.3" height="15.0" fill="rgb(214,142,0)" rx="2" ry="2" />
<text  x="415.35" y="879.5" ></text>
</g>
<g >
<title>lind (1 samples, 0.06%)</title><rect x="10.0" y="1349" width="0.7" height="15.0" fill="rgb(218,71,0)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (115 samples, 6.76%)</title><rect x="241.0" y="1189" width="79.8" height="15.0" fill="rgb(215,121,44)" rx="2" ry="2" />
<text  x="244.01" y="1199.5" >core::int..</text>
</g>
<g >
<title>__fdget (1 samples, 0.06%)</title><rect x="1076.9" y="1253" width="0.7" height="15.0" fill="rgb(214,165,53)" rx="2" ry="2" />
<text  x="1079.93" y="1263.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.06%)</title><rect x="178.6" y="757" width="0.7" height="15.0" fill="rgb(213,37,11)" rx="2" ry="2" />
<text  x="181.57" y="767.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.06%)</title><rect x="1089.4" y="1125" width="0.7" height="15.0" fill="rgb(228,100,7)" rx="2" ry="2" />
<text  x="1092.41" y="1135.5" ></text>
</g>
<g >
<title>do_iter_write (17 samples, 1.00%)</title><rect x="74.5" y="1045" width="11.8" height="15.0" fill="rgb(253,37,39)" rx="2" ry="2" />
<text  x="77.51" y="1055.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.12%)</title><rect x="227.8" y="661" width="1.4" height="15.0" fill="rgb(212,40,48)" rx="2" ry="2" />
<text  x="230.82" y="671.5" ></text>
</g>
<g >
<title>destroy_inode (94 samples, 5.53%)</title><rect x="168.2" y="1013" width="65.2" height="15.0" fill="rgb(229,159,18)" rx="2" ry="2" />
<text  x="171.17" y="1023.5" >destroy..</text>
</g>
<g >
<title>__x64_sys_exit_group (4 samples, 0.24%)</title><rect x="1070.7" y="1301" width="2.8" height="15.0" fill="rgb(219,113,3)" rx="2" ry="2" />
<text  x="1073.68" y="1311.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.06%)</title><rect x="1183.8" y="1205" width="0.7" height="15.0" fill="rgb(235,99,15)" rx="2" ry="2" />
<text  x="1186.76" y="1215.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3 samples, 0.18%)</title><rect x="1081.8" y="1157" width="2.1" height="15.0" fill="rgb(232,113,44)" rx="2" ry="2" />
<text  x="1084.78" y="1167.5" ></text>
</g>
<g >
<title>free_buffer_head (1 samples, 0.06%)</title><rect x="213.3" y="709" width="0.7" height="15.0" fill="rgb(211,164,12)" rx="2" ry="2" />
<text  x="216.26" y="719.5" ></text>
</g>
<g >
<title>do_open_execat (1 samples, 0.06%)</title><rect x="10.7" y="1077" width="0.7" height="15.0" fill="rgb(246,117,2)" rx="2" ry="2" />
<text  x="13.69" y="1087.5" ></text>
</g>
<g >
<title>NaClAppDtor (3 samples, 0.18%)</title><rect x="158.5" y="1221" width="2.0" height="15.0" fill="rgb(248,15,38)" rx="2" ry="2" />
<text  x="161.45" y="1231.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.18%)</title><rect x="458.1" y="885" width="2.1" height="15.0" fill="rgb(212,173,35)" rx="2" ry="2" />
<text  x="461.14" y="895.5" ></text>
</g>
<g >
<title>__page_cache_alloc (51 samples, 3.00%)</title><rect x="415.8" y="933" width="35.4" height="15.0" fill="rgb(244,145,16)" rx="2" ry="2" />
<text  x="418.82" y="943.5" >__..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="71.7" y="1189" width="0.7" height="15.0" fill="rgb(244,16,14)" rx="2" ry="2" />
<text  x="74.74" y="1199.5" ></text>
</g>
<g >
<title>remove_vma (1 samples, 0.06%)</title><rect x="1070.7" y="1205" width="0.7" height="15.0" fill="rgb(205,165,45)" rx="2" ry="2" />
<text  x="1073.68" y="1215.5" ></text>
</g>
<g >
<title>handle_mm_fault (310 samples, 18.22%)</title><rect x="391.5" y="1109" width="215.1" height="15.0" fill="rgb(211,89,23)" rx="2" ry="2" />
<text  x="394.54" y="1119.5" >handle_mm_fault</text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (2 samples, 0.12%)</title><rect x="1000.6" y="709" width="1.4" height="15.0" fill="rgb(228,85,30)" rx="2" ry="2" />
<text  x="1003.62" y="719.5" ></text>
</g>
<g >
<title>___pthread_mutex_lock (1 samples, 0.06%)</title><rect x="965.2" y="1317" width="0.7" height="15.0" fill="rgb(245,190,13)" rx="2" ry="2" />
<text  x="968.24" y="1327.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (1 samples, 0.06%)</title><rect x="473.4" y="805" width="0.7" height="15.0" fill="rgb(215,21,53)" rx="2" ry="2" />
<text  x="476.40" y="815.5" ></text>
</g>
<g >
<title>release_pages (14 samples, 0.82%)</title><rect x="169.6" y="789" width="9.7" height="15.0" fill="rgb(206,44,42)" rx="2" ry="2" />
<text  x="172.55" y="799.5" ></text>
</g>
<g >
<title>unaccount_page_cache_page (7 samples, 0.41%)</title><rect x="183.4" y="789" width="4.9" height="15.0" fill="rgb(214,222,49)" rx="2" ry="2" />
<text  x="186.43" y="799.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.06%)</title><rect x="71.7" y="1157" width="0.7" height="15.0" fill="rgb(206,196,26)" rx="2" ry="2" />
<text  x="74.74" y="1167.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 3.76%)</title><rect x="21.1" y="981" width="44.4" height="15.0" fill="rgb(231,221,50)" rx="2" ry="2" />
<text  x="24.10" y="991.5" >inte..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;alloc::string::String,dashmap::util::SharedValue&lt;usize&gt;&gt;&gt;&gt; (1 samples, 0.06%)</title><rect x="1001.3" y="101" width="0.7" height="15.0" fill="rgb(240,4,17)" rx="2" ry="2" />
<text  x="1004.31" y="111.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="1161.6" y="1189" width="0.7" height="15.0" fill="rgb(253,116,32)" rx="2" ry="2" />
<text  x="1164.56" y="1199.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (2 samples, 0.12%)</title><rect x="1155.3" y="1205" width="1.4" height="15.0" fill="rgb(230,142,46)" rx="2" ry="2" />
<text  x="1158.31" y="1215.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (1 samples, 0.06%)</title><rect x="938.9" y="1045" width="0.7" height="15.0" fill="rgb(229,35,3)" rx="2" ry="2" />
<text  x="941.88" y="1055.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (4 samples, 0.24%)</title><rect x="1175.4" y="1189" width="2.8" height="15.0" fill="rgb(213,132,5)" rx="2" ry="2" />
<text  x="1178.43" y="1199.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.06%)</title><rect x="995.8" y="1141" width="0.7" height="15.0" fill="rgb(247,96,25)" rx="2" ry="2" />
<text  x="998.76" y="1151.5" ></text>
</g>
<g >
<title>lind_open (94 samples, 5.53%)</title><rect x="168.2" y="1253" width="65.2" height="15.0" fill="rgb(236,213,19)" rx="2" ry="2" />
<text  x="171.17" y="1263.5" >lind_open</text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.06%)</title><rect x="89.1" y="1189" width="0.7" height="15.0" fill="rgb(253,223,28)" rx="2" ry="2" />
<text  x="92.08" y="1199.5" ></text>
</g>
<g >
<title>unmap_page_range (56 samples, 3.29%)</title><rect x="92.6" y="981" width="38.8" height="15.0" fill="rgb(248,8,47)" rx="2" ry="2" />
<text  x="95.55" y="991.5" >unm..</text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (1 samples, 0.06%)</title><rect x="1001.3" y="69" width="0.7" height="15.0" fill="rgb(207,59,43)" rx="2" ry="2" />
<text  x="1004.31" y="79.5" ></text>
</g>
<g >
<title>BaseExtentionFromVEX (1 samples, 0.06%)</title><rect x="999.2" y="1141" width="0.7" height="15.0" fill="rgb(227,7,30)" rx="2" ry="2" />
<text  x="1002.23" y="1151.5" ></text>
</g>
<g >
<title>vfs_write (19 samples, 1.12%)</title><rect x="73.8" y="1109" width="13.2" height="15.0" fill="rgb(231,30,14)" rx="2" ry="2" />
<text  x="76.82" y="1119.5" ></text>
</g>
<g >
<title>__page_cache_alloc (4 samples, 0.24%)</title><rect x="411.0" y="933" width="2.7" height="15.0" fill="rgb(213,69,2)" rx="2" ry="2" />
<text  x="413.96" y="943.5" ></text>
</g>
<g >
<title>dispatcher (94 samples, 5.53%)</title><rect x="168.2" y="1237" width="65.2" height="15.0" fill="rgb(245,93,20)" rx="2" ry="2" />
<text  x="171.17" y="1247.5" >dispatc..</text>
</g>
<g >
<title>__dentry_kill (2 samples, 0.12%)</title><rect x="1072.1" y="1173" width="1.4" height="15.0" fill="rgb(229,141,53)" rx="2" ry="2" />
<text  x="1075.07" y="1183.5" ></text>
</g>
<g >
<title>NaClValidateImage (6 samples, 0.35%)</title><rect x="160.5" y="1189" width="4.2" height="15.0" fill="rgb(254,69,1)" rx="2" ry="2" />
<text  x="163.53" y="1199.5" ></text>
</g>
<g >
<title>block_invalidatepage (1 samples, 0.06%)</title><rect x="1072.1" y="997" width="0.7" height="15.0" fill="rgb(249,29,46)" rx="2" ry="2" />
<text  x="1075.07" y="1007.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.06%)</title><rect x="1089.4" y="1045" width="0.7" height="15.0" fill="rgb(210,161,45)" rx="2" ry="2" />
<text  x="1092.41" y="1055.5" ></text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.06%)</title><rect x="1158.8" y="1221" width="0.7" height="15.0" fill="rgb(251,104,22)" rx="2" ry="2" />
<text  x="1161.78" y="1231.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.06%)</title><rect x="468.5" y="885" width="0.7" height="15.0" fill="rgb(248,49,42)" rx="2" ry="2" />
<text  x="471.54" y="895.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.06%)</title><rect x="80.8" y="837" width="0.7" height="15.0" fill="rgb(205,202,46)" rx="2" ry="2" />
<text  x="83.76" y="847.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.06%)</title><rect x="1173.4" y="1125" width="0.6" height="15.0" fill="rgb(235,68,34)" rx="2" ry="2" />
<text  x="1176.35" y="1135.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.06%)</title><rect x="364.5" y="1157" width="0.7" height="15.0" fill="rgb(245,190,33)" rx="2" ry="2" />
<text  x="367.49" y="1167.5" ></text>
</g>
<g >
<title>&lt;dashmap::serde::DashMapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.06%)</title><rect x="1001.3" y="149" width="0.7" height="15.0" fill="rgb(236,129,48)" rx="2" ry="2" />
<text  x="1004.31" y="159.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (20 samples, 1.18%)</title><rect x="761.3" y="1173" width="13.9" height="15.0" fill="rgb(246,106,2)" rx="2" ry="2" />
<text  x="764.29" y="1183.5" ></text>
</g>
<g >
<title>new_sync_write (17 samples, 1.00%)</title><rect x="74.5" y="1093" width="11.8" height="15.0" fill="rgb(207,33,32)" rx="2" ry="2" />
<text  x="77.51" y="1103.5" ></text>
</g>
<g >
<title>_int_realloc (1 samples, 0.06%)</title><rect x="939.6" y="741" width="0.7" height="15.0" fill="rgb(243,114,0)" rx="2" ry="2" />
<text  x="942.57" y="751.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.06%)</title><rect x="390.8" y="1093" width="0.7" height="15.0" fill="rgb(248,146,51)" rx="2" ry="2" />
<text  x="393.85" y="1103.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.06%)</title><rect x="1076.9" y="1269" width="0.7" height="15.0" fill="rgb(249,167,46)" rx="2" ry="2" />
<text  x="1079.93" y="1279.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (2 samples, 0.12%)</title><rect x="1000.6" y="1029" width="1.4" height="15.0" fill="rgb(206,91,54)" rx="2" ry="2" />
<text  x="1003.62" y="1039.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (1 samples, 0.06%)</title><rect x="364.5" y="1237" width="0.7" height="15.0" fill="rgb(239,0,44)" rx="2" ry="2" />
<text  x="367.49" y="1247.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.06%)</title><rect x="10.7" y="1045" width="0.7" height="15.0" fill="rgb(240,37,31)" rx="2" ry="2" />
<text  x="13.69" y="1055.5" ></text>
</g>
<g >
<title>do_sys_poll (7 samples, 0.41%)</title><rect x="66.9" y="1205" width="4.8" height="15.0" fill="rgb(252,36,24)" rx="2" ry="2" />
<text  x="69.88" y="1215.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.06%)</title><rect x="939.6" y="805" width="0.7" height="15.0" fill="rgb(223,23,36)" rx="2" ry="2" />
<text  x="942.57" y="815.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="1000.6" y="117" width="0.7" height="15.0" fill="rgb(242,128,18)" rx="2" ry="2" />
<text  x="1003.62" y="127.5" ></text>
</g>
<g >
<title>__evlist__enable (79 samples, 4.64%)</title><rect x="12.1" y="1285" width="54.8" height="15.0" fill="rgb(222,141,23)" rx="2" ry="2" />
<text  x="15.08" y="1295.5" >__evl..</text>
</g>
<g >
<title>NaClDescIoDescDtor (57 samples, 3.35%)</title><rect x="91.9" y="1237" width="39.5" height="15.0" fill="rgb(210,154,9)" rx="2" ry="2" />
<text  x="94.86" y="1247.5" >NaC..</text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.06%)</title><rect x="133.5" y="1173" width="0.7" height="15.0" fill="rgb(230,74,41)" rx="2" ry="2" />
<text  x="136.48" y="1183.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.06%)</title><rect x="1183.8" y="1221" width="0.7" height="15.0" fill="rgb(243,16,24)" rx="2" ry="2" />
<text  x="1186.76" y="1231.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (2 samples, 0.12%)</title><rect x="236.8" y="1189" width="1.4" height="15.0" fill="rgb(244,57,48)" rx="2" ry="2" />
<text  x="239.84" y="1199.5" ></text>
</g>
<g >
<title>alloc_pages_current (3 samples, 0.18%)</title><rect x="80.1" y="917" width="2.0" height="15.0" fill="rgb(224,31,7)" rx="2" ry="2" />
<text  x="83.06" y="927.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (10 samples, 0.59%)</title><rect x="555.3" y="933" width="6.9" height="15.0" fill="rgb(243,88,1)" rx="2" ry="2" />
<text  x="558.26" y="943.5" ></text>
</g>
<g >
<title>workingset_update_node (1 samples, 0.06%)</title><rect x="467.2" y="901" width="0.6" height="15.0" fill="rgb(247,79,3)" rx="2" ry="2" />
<text  x="470.15" y="911.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.06%)</title><rect x="71.7" y="1125" width="0.7" height="15.0" fill="rgb(241,116,50)" rx="2" ry="2" />
<text  x="74.74" y="1135.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_enum_map (1 samples, 0.06%)</title><rect x="1001.3" y="565" width="0.7" height="15.0" fill="rgb(221,184,0)" rx="2" ry="2" />
<text  x="1004.31" y="575.5" ></text>
</g>
<g >
<title>finish_fault (4 samples, 0.24%)</title><rect x="599.0" y="1029" width="2.7" height="15.0" fill="rgb(245,43,17)" rx="2" ry="2" />
<text  x="601.96" y="1039.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (2 samples, 0.12%)</title><rect x="186.2" y="725" width="1.4" height="15.0" fill="rgb(209,126,43)" rx="2" ry="2" />
<text  x="189.20" y="735.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.06%)</title><rect x="473.4" y="837" width="0.7" height="15.0" fill="rgb(219,136,51)" rx="2" ry="2" />
<text  x="476.40" y="847.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (829 samples, 48.74%)</title><rect x="365.2" y="1237" width="575.1" height="15.0" fill="rgb(250,146,23)" rx="2" ry="2" />
<text  x="368.18" y="1247.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cag..</text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.06%)</title><rect x="1153.9" y="1109" width="0.7" height="15.0" fill="rgb(224,197,1)" rx="2" ry="2" />
<text  x="1156.93" y="1119.5" ></text>
</g>
<g >
<title>__realloc (1 samples, 0.06%)</title><rect x="939.6" y="757" width="0.7" height="15.0" fill="rgb(248,143,9)" rx="2" ry="2" />
<text  x="942.57" y="767.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.06%)</title><rect x="1000.6" y="53" width="0.7" height="15.0" fill="rgb(245,218,15)" rx="2" ry="2" />
<text  x="1003.62" y="63.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.06%)</title><rect x="1154.6" y="1189" width="0.7" height="15.0" fill="rgb(208,11,48)" rx="2" ry="2" />
<text  x="1157.62" y="1199.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12 samples, 0.71%)</title><rect x="1081.8" y="1205" width="8.3" height="15.0" fill="rgb(250,69,11)" rx="2" ry="2" />
<text  x="1084.78" y="1215.5" ></text>
</g>
<g >
<title>try_to_free_buffers (22 samples, 1.29%)</title><rect x="215.3" y="709" width="15.3" height="15.0" fill="rgb(248,110,10)" rx="2" ry="2" />
<text  x="218.34" y="719.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.12%)</title><rect x="66.9" y="1173" width="1.4" height="15.0" fill="rgb(253,141,33)" rx="2" ry="2" />
<text  x="69.88" y="1183.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.06%)</title><rect x="964.5" y="1189" width="0.7" height="15.0" fill="rgb(243,116,3)" rx="2" ry="2" />
<text  x="967.54" y="1199.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.06%)</title><rect x="418.6" y="885" width="0.7" height="15.0" fill="rgb(220,16,16)" rx="2" ry="2" />
<text  x="421.59" y="895.5" ></text>
</g>
<g >
<title>__set_page_dirty_buffers (10 samples, 0.59%)</title><rect x="120.3" y="901" width="6.9" height="15.0" fill="rgb(208,73,38)" rx="2" ry="2" />
<text  x="123.30" y="911.5" ></text>
</g>
<g >
<title>start_secondary (159 samples, 9.35%)</title><rect x="1079.7" y="1317" width="110.3" height="15.0" fill="rgb(248,65,18)" rx="2" ry="2" />
<text  x="1082.70" y="1327.5" >start_secondary</text>
</g>
<g >
<title>__mod_memcg_state.part.0 (2 samples, 0.12%)</title><rect x="318.0" y="933" width="1.4" height="15.0" fill="rgb(249,102,49)" rx="2" ry="2" />
<text  x="321.01" y="943.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (2 samples, 0.12%)</title><rect x="1000.6" y="1045" width="1.4" height="15.0" fill="rgb(217,131,3)" rx="2" ry="2" />
<text  x="1003.62" y="1055.5" ></text>
</g>
<g >
<title>main (1 samples, 0.06%)</title><rect x="10.0" y="1285" width="0.7" height="15.0" fill="rgb(245,31,52)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.06%)</title><rect x="178.6" y="773" width="0.7" height="15.0" fill="rgb(250,162,21)" rx="2" ry="2" />
<text  x="181.57" y="783.5" ></text>
</g>
<g >
<title>dentry_kill (2 samples, 0.12%)</title><rect x="1072.1" y="1189" width="1.4" height="15.0" fill="rgb(254,77,30)" rx="2" ry="2" />
<text  x="1075.07" y="1199.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (79 samples, 4.64%)</title><rect x="12.1" y="1269" width="54.8" height="15.0" fill="rgb(210,130,43)" rx="2" ry="2" />
<text  x="15.08" y="1279.5" >perf_..</text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.06%)</title><rect x="89.1" y="1077" width="0.7" height="15.0" fill="rgb(253,125,33)" rx="2" ry="2" />
<text  x="92.08" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.06%)</title><rect x="939.6" y="837" width="0.7" height="15.0" fill="rgb(217,57,53)" rx="2" ry="2" />
<text  x="942.57" y="847.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (3 samples, 0.18%)</title><rect x="610.8" y="1109" width="2.0" height="15.0" fill="rgb(236,211,36)" rx="2" ry="2" />
<text  x="613.75" y="1119.5" ></text>
</g>
<g >
<title>NaClAddrSpaceFree (3 samples, 0.18%)</title><rect x="158.5" y="1205" width="2.0" height="15.0" fill="rgb(252,199,13)" rx="2" ry="2" />
<text  x="161.45" y="1215.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (1 samples, 0.06%)</title><rect x="78.7" y="901" width="0.7" height="15.0" fill="rgb(220,94,52)" rx="2" ry="2" />
<text  x="81.68" y="911.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.06%)</title><rect x="546.9" y="901" width="0.7" height="15.0" fill="rgb(205,190,2)" rx="2" ry="2" />
<text  x="549.93" y="911.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (39 samples, 2.29%)</title><rect x="131.4" y="1301" width="27.1" height="15.0" fill="rgb(210,10,8)" rx="2" ry="2" />
<text  x="134.40" y="1311.5" >N..</text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.12%)</title><rect x="15.5" y="1141" width="1.4" height="15.0" fill="rgb(234,52,42)" rx="2" ry="2" />
<text  x="18.55" y="1151.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (2 samples, 0.12%)</title><rect x="1000.6" y="725" width="1.4" height="15.0" fill="rgb(237,59,7)" rx="2" ry="2" />
<text  x="1003.62" y="735.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (94 samples, 5.53%)</title><rect x="168.2" y="997" width="65.2" height="15.0" fill="rgb(249,208,51)" rx="2" ry="2" />
<text  x="171.17" y="1007.5" >ovl_des..</text>
</g>
<g >
<title>_int_malloc (1 samples, 0.06%)</title><rect x="1000.6" y="245" width="0.7" height="15.0" fill="rgb(219,214,2)" rx="2" ry="2" />
<text  x="1003.62" y="255.5" ></text>
</g>
<g >
<title>__read_once_size (1 samples, 0.06%)</title><rect x="72.4" y="1205" width="0.7" height="15.0" fill="rgb(220,142,18)" rx="2" ry="2" />
<text  x="75.43" y="1215.5" ></text>
</g>
<g >
<title>vm_area_free (1 samples, 0.06%)</title><rect x="1070.7" y="1189" width="0.7" height="15.0" fill="rgb(225,72,34)" rx="2" ry="2" />
<text  x="1073.68" y="1199.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (4 samples, 0.24%)</title><rect x="164.7" y="1301" width="2.8" height="15.0" fill="rgb(252,89,36)" rx="2" ry="2" />
<text  x="167.70" y="1311.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (2 samples, 0.12%)</title><rect x="1072.1" y="1157" width="1.4" height="15.0" fill="rgb(224,128,41)" rx="2" ry="2" />
<text  x="1075.07" y="1167.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.12%)</title><rect x="571.2" y="933" width="1.4" height="15.0" fill="rgb(231,44,43)" rx="2" ry="2" />
<text  x="574.21" y="943.5" ></text>
</g>
<g >
<title>__mremap (4 samples, 0.24%)</title><rect x="628.1" y="1189" width="2.8" height="15.0" fill="rgb(222,70,43)" rx="2" ry="2" />
<text  x="631.10" y="1199.5" ></text>
</g>
<g >
<title>perf (113 samples, 6.64%)</title><rect x="11.4" y="1349" width="78.4" height="15.0" fill="rgb(209,100,13)" rx="2" ry="2" />
<text  x="14.39" y="1359.5" >perf</text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="1173.4" y="1205" width="0.6" height="15.0" fill="rgb(252,5,5)" rx="2" ry="2" />
<text  x="1176.35" y="1215.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (3 samples, 0.18%)</title><rect x="158.5" y="1237" width="2.0" height="15.0" fill="rgb(216,175,1)" rx="2" ry="2" />
<text  x="161.45" y="1247.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.06%)</title><rect x="1000.6" y="629" width="0.7" height="15.0" fill="rgb(233,180,25)" rx="2" ry="2" />
<text  x="1003.62" y="639.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="187.6" y="757" width="0.7" height="15.0" fill="rgb(218,110,51)" rx="2" ry="2" />
<text  x="190.59" y="767.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.06%)</title><rect x="236.1" y="1173" width="0.7" height="15.0" fill="rgb(210,176,25)" rx="2" ry="2" />
<text  x="239.15" y="1183.5" ></text>
</g>
<g >
<title>__libc_start_main_alias_2 (1 samples, 0.06%)</title><rect x="10.0" y="1317" width="0.7" height="15.0" fill="rgb(252,30,15)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.06%)</title><rect x="239.6" y="1093" width="0.7" height="15.0" fill="rgb(246,6,23)" rx="2" ry="2" />
<text  x="242.62" y="1103.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.06%)</title><rect x="71.7" y="1285" width="0.7" height="15.0" fill="rgb(217,174,52)" rx="2" ry="2" />
<text  x="74.74" y="1295.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (5 samples, 0.29%)</title><rect x="1162.3" y="1205" width="3.4" height="15.0" fill="rgb(245,191,47)" rx="2" ry="2" />
<text  x="1165.25" y="1215.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (44 samples, 2.59%)</title><rect x="331.9" y="1173" width="30.5" height="15.0" fill="rgb(249,202,39)" rx="2" ry="2" />
<text  x="334.88" y="1183.5" >ri..</text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.06%)</title><rect x="650.3" y="1173" width="0.7" height="15.0" fill="rgb(219,131,33)" rx="2" ry="2" />
<text  x="653.29" y="1183.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.06%)</title><rect x="167.5" y="1189" width="0.7" height="15.0" fill="rgb(213,171,27)" rx="2" ry="2" />
<text  x="170.47" y="1199.5" ></text>
</g>
<g >
<title>[anon] (27 samples, 1.59%)</title><rect x="940.3" y="1333" width="18.7" height="15.0" fill="rgb(222,176,1)" rx="2" ry="2" />
<text  x="943.26" y="1343.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (90 samples, 5.29%)</title><rect x="694.7" y="1141" width="62.4" height="15.0" fill="rgb(241,133,48)" rx="2" ry="2" />
<text  x="697.69" y="1151.5" >core::..</text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="995.8" y="949" width="0.7" height="15.0" fill="rgb(205,47,9)" rx="2" ry="2" />
<text  x="998.76" y="959.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="569.8" y="933" width="0.7" height="15.0" fill="rgb(219,165,51)" rx="2" ry="2" />
<text  x="572.82" y="943.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.12%)</title><rect x="159.1" y="1045" width="1.4" height="15.0" fill="rgb(218,184,37)" rx="2" ry="2" />
<text  x="162.15" y="1055.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.06%)</title><rect x="397.1" y="1093" width="0.7" height="15.0" fill="rgb(223,185,32)" rx="2" ry="2" />
<text  x="400.09" y="1103.5" ></text>
</g>
<g >
<title>page_mapping (2 samples, 0.12%)</title><rect x="478.9" y="869" width="1.4" height="15.0" fill="rgb(205,85,42)" rx="2" ry="2" />
<text  x="481.95" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.12%)</title><rect x="236.8" y="1221" width="1.4" height="15.0" fill="rgb(237,83,38)" rx="2" ry="2" />
<text  x="239.84" y="1231.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.06%)</title><rect x="1000.6" y="533" width="0.7" height="15.0" fill="rgb(245,211,3)" rx="2" ry="2" />
<text  x="1003.62" y="543.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.06%)</title><rect x="1083.2" y="1093" width="0.7" height="15.0" fill="rgb(238,198,43)" rx="2" ry="2" />
<text  x="1086.17" y="1103.5" ></text>
</g>
<g >
<title>put_ctx (2 samples, 0.12%)</title><rect x="65.5" y="1173" width="1.4" height="15.0" fill="rgb(248,220,0)" rx="2" ry="2" />
<text  x="68.50" y="1183.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="87.0" y="1317" width="2.8" height="15.0" fill="rgb(245,228,21)" rx="2" ry="2" />
<text  x="90.00" y="1327.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.06%)</title><rect x="1000.6" y="341" width="0.7" height="15.0" fill="rgb(240,53,3)" rx="2" ry="2" />
<text  x="1003.62" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="133.5" y="1125" width="0.7" height="15.0" fill="rgb(211,120,29)" rx="2" ry="2" />
<text  x="136.48" y="1135.5" ></text>
</g>
<g >
<title>Process0Operands (1 samples, 0.06%)</title><rect x="999.9" y="1141" width="0.7" height="15.0" fill="rgb(223,114,50)" rx="2" ry="2" />
<text  x="1002.92" y="1151.5" ></text>
</g>
<g >
<title>alloc_set_pte (9 samples, 0.53%)</title><rect x="313.8" y="1013" width="6.3" height="15.0" fill="rgb(227,42,51)" rx="2" ry="2" />
<text  x="316.84" y="1023.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="235.5" y="1125" width="0.6" height="15.0" fill="rgb(210,26,48)" rx="2" ry="2" />
<text  x="238.46" y="1135.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="10.0" y="933" width="0.7" height="15.0" fill="rgb(244,195,43)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.12%)</title><rect x="159.1" y="1077" width="1.4" height="15.0" fill="rgb(238,32,49)" rx="2" ry="2" />
<text  x="162.15" y="1087.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.06%)</title><rect x="89.1" y="1221" width="0.7" height="15.0" fill="rgb(213,22,3)" rx="2" ry="2" />
<text  x="92.08" y="1231.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (91 samples, 5.35%)</title><rect x="168.2" y="821" width="63.1" height="15.0" fill="rgb(207,201,47)" rx="2" ry="2" />
<text  x="171.17" y="831.5" >trunca..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="938.2" y="1125" width="0.7" height="15.0" fill="rgb(213,42,17)" rx="2" ry="2" />
<text  x="941.18" y="1135.5" ></text>
</g>
<g >
<title>__GI___mmap64 (1 samples, 0.06%)</title><rect x="167.5" y="1141" width="0.7" height="15.0" fill="rgb(209,202,35)" rx="2" ry="2" />
<text  x="170.47" y="1151.5" ></text>
</g>
<g >
<title>perf_poll (2 samples, 0.12%)</title><rect x="69.0" y="1173" width="1.4" height="15.0" fill="rgb(249,48,8)" rx="2" ry="2" />
<text  x="71.97" y="1183.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (2 samples, 0.12%)</title><rect x="537.2" y="853" width="1.4" height="15.0" fill="rgb(243,224,11)" rx="2" ry="2" />
<text  x="540.22" y="863.5" ></text>
</g>
<g >
<title>ext4_evict_inode (94 samples, 5.53%)</title><rect x="168.2" y="853" width="65.2" height="15.0" fill="rgb(232,71,14)" rx="2" ry="2" />
<text  x="171.17" y="863.5" >ext4_ev..</text>
</g>
<g >
<title>std::lazy::SyncLazy&lt;T,F&gt;::force::{{closure}} (2 samples, 0.12%)</title><rect x="1000.6" y="1061" width="1.4" height="15.0" fill="rgb(225,54,39)" rx="2" ry="2" />
<text  x="1003.62" y="1071.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.06%)</title><rect x="1000.6" y="149" width="0.7" height="15.0" fill="rgb(250,47,18)" rx="2" ry="2" />
<text  x="1003.62" y="159.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.06%)</title><rect x="89.1" y="1061" width="0.7" height="15.0" fill="rgb(221,169,34)" rx="2" ry="2" />
<text  x="92.08" y="1071.5" ></text>
</g>
<g >
<title>pick_next_task_fair (13 samples, 0.76%)</title><rect x="1174.0" y="1237" width="9.1" height="15.0" fill="rgb(251,76,23)" rx="2" ry="2" />
<text  x="1177.04" y="1247.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.06%)</title><rect x="89.1" y="1125" width="0.7" height="15.0" fill="rgb(227,15,11)" rx="2" ry="2" />
<text  x="92.08" y="1135.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.06%)</title><rect x="77.3" y="885" width="0.7" height="15.0" fill="rgb(224,113,26)" rx="2" ry="2" />
<text  x="80.29" y="895.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (1 samples, 0.06%)</title><rect x="1167.1" y="1253" width="0.7" height="15.0" fill="rgb(218,124,30)" rx="2" ry="2" />
<text  x="1170.11" y="1263.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (173 samples, 10.17%)</title><rect x="655.8" y="1205" width="120.1" height="15.0" fill="rgb(253,206,3)" rx="2" ry="2" />
<text  x="658.84" y="1215.5" >ringbuf::produ..</text>
</g>
<g >
<title>nohz_csd_func (5 samples, 0.29%)</title><rect x="1167.8" y="1253" width="3.5" height="15.0" fill="rgb(244,222,33)" rx="2" ry="2" />
<text  x="1170.80" y="1263.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (1 samples, 0.06%)</title><rect x="1082.5" y="1093" width="0.7" height="15.0" fill="rgb(217,24,48)" rx="2" ry="2" />
<text  x="1085.48" y="1103.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9 samples, 0.53%)</title><rect x="1083.9" y="1189" width="6.2" height="15.0" fill="rgb(248,38,45)" rx="2" ry="2" />
<text  x="1086.86" y="1199.5" ></text>
</g>
<g >
<title>__libc_start_main_alias_2 (9 samples, 0.53%)</title><rect x="995.8" y="1317" width="6.2" height="15.0" fill="rgb(237,35,52)" rx="2" ry="2" />
<text  x="998.76" y="1327.5" ></text>
</g>
<g >
<title>__realloc (1 samples, 0.06%)</title><rect x="938.9" y="805" width="0.7" height="15.0" fill="rgb(209,166,39)" rx="2" ry="2" />
<text  x="941.88" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_ftruncate (4 samples, 0.24%)</title><rect x="630.9" y="1077" width="2.7" height="15.0" fill="rgb(212,208,18)" rx="2" ry="2" />
<text  x="633.87" y="1087.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="170.9" y="757" width="0.7" height="15.0" fill="rgb(221,78,27)" rx="2" ry="2" />
<text  x="173.94" y="767.5" ></text>
</g>
<g >
<title>xas_store (1 samples, 0.06%)</title><rect x="1072.8" y="997" width="0.7" height="15.0" fill="rgb(237,34,15)" rx="2" ry="2" />
<text  x="1075.76" y="1007.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (2 samples, 0.12%)</title><rect x="365.9" y="1205" width="1.4" height="15.0" fill="rgb(252,183,50)" rx="2" ry="2" />
<text  x="368.87" y="1215.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (2 samples, 0.12%)</title><rect x="560.8" y="917" width="1.4" height="15.0" fill="rgb(219,222,31)" rx="2" ry="2" />
<text  x="563.81" y="927.5" ></text>
</g>
<g >
<title>zap_pte_range (54 samples, 3.17%)</title><rect x="93.9" y="949" width="37.5" height="15.0" fill="rgb(251,176,25)" rx="2" ry="2" />
<text  x="96.94" y="959.5" >zap..</text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.06%)</title><rect x="233.4" y="1269" width="0.7" height="15.0" fill="rgb(205,128,10)" rx="2" ry="2" />
<text  x="236.37" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="1070.7" y="1317" width="2.8" height="15.0" fill="rgb(254,84,21)" rx="2" ry="2" />
<text  x="1073.68" y="1327.5" ></text>
</g>
<g >
<title>iput.part.0 (2 samples, 0.12%)</title><rect x="1072.1" y="1125" width="1.4" height="15.0" fill="rgb(254,53,22)" rx="2" ry="2" />
<text  x="1075.07" y="1135.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (1 samples, 0.06%)</title><rect x="994.4" y="1205" width="0.7" height="15.0" fill="rgb(218,97,48)" rx="2" ry="2" />
<text  x="997.37" y="1215.5" ></text>
</g>
<g >
<title>alloc_buffer_head (5 samples, 0.29%)</title><rect x="75.2" y="901" width="3.5" height="15.0" fill="rgb(207,177,18)" rx="2" ry="2" />
<text  x="78.21" y="911.5" ></text>
</g>
<g >
<title>fault_dirty_shared_page (14 samples, 0.82%)</title><rect x="589.2" y="1029" width="9.8" height="15.0" fill="rgb(251,38,9)" rx="2" ry="2" />
<text  x="592.25" y="1039.5" ></text>
</g>
<g >
<title>page_cache_free_page.isra.0 (1 samples, 0.06%)</title><rect x="182.7" y="789" width="0.7" height="15.0" fill="rgb(223,120,0)" rx="2" ry="2" />
<text  x="185.73" y="799.5" ></text>
</g>
<g >
<title>free_unref_page_commit (10 samples, 0.59%)</title><rect x="171.6" y="757" width="7.0" height="15.0" fill="rgb(251,213,12)" rx="2" ry="2" />
<text  x="174.63" y="767.5" ></text>
</g>
<g >
<title>__mnt_want_write_file (1 samples, 0.06%)</title><rect x="74.5" y="965" width="0.7" height="15.0" fill="rgb(225,36,33)" rx="2" ry="2" />
<text  x="77.51" y="975.5" ></text>
</g>
<g >
<title>dput (94 samples, 5.53%)</title><rect x="168.2" y="981" width="65.2" height="15.0" fill="rgb(239,104,49)" rx="2" ry="2" />
<text  x="171.17" y="991.5" >dput</text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.06%)</title><rect x="1158.1" y="1221" width="0.7" height="15.0" fill="rgb(246,132,10)" rx="2" ry="2" />
<text  x="1161.09" y="1231.5" ></text>
</g>
<g >
<title>dl_main (3 samples, 0.18%)</title><rect x="1002.0" y="1285" width="2.1" height="15.0" fill="rgb(207,57,14)" rx="2" ry="2" />
<text  x="1005.00" y="1295.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (2 samples, 0.12%)</title><rect x="412.4" y="837" width="1.3" height="15.0" fill="rgb(245,125,26)" rx="2" ry="2" />
<text  x="415.35" y="847.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (48 samples, 2.82%)</title><rect x="417.2" y="901" width="33.3" height="15.0" fill="rgb(214,148,39)" rx="2" ry="2" />
<text  x="420.21" y="911.5" >__..</text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="1153.9" y="1173" width="0.7" height="15.0" fill="rgb(243,189,24)" rx="2" ry="2" />
<text  x="1156.93" y="1183.5" ></text>
</g>
<g >
<title>NaClSysClose (57 samples, 3.35%)</title><rect x="91.9" y="1285" width="39.5" height="15.0" fill="rgb(226,51,3)" rx="2" ry="2" />
<text  x="94.86" y="1295.5" >NaC..</text>
</g>
<g >
<title>__cmd_record (1 samples, 0.06%)</title><rect x="10.7" y="1301" width="0.7" height="15.0" fill="rgb(206,4,5)" rx="2" ry="2" />
<text  x="13.69" y="1311.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (3 samples, 0.18%)</title><rect x="234.8" y="1237" width="2.0" height="15.0" fill="rgb(238,130,24)" rx="2" ry="2" />
<text  x="237.76" y="1247.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 3.76%)</title><rect x="21.1" y="997" width="44.4" height="15.0" fill="rgb(216,74,7)" rx="2" ry="2" />
<text  x="24.10" y="1007.5" >x86_..</text>
</g>
<g >
<title>dup_task_struct (1 samples, 0.06%)</title><rect x="994.4" y="1221" width="0.7" height="15.0" fill="rgb(208,221,29)" rx="2" ry="2" />
<text  x="997.37" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="1076.9" y="1333" width="0.7" height="15.0" fill="rgb(207,169,44)" rx="2" ry="2" />
<text  x="1079.93" y="1343.5" ></text>
</g>
<g >
<title>dput (2 samples, 0.12%)</title><rect x="1072.1" y="1205" width="1.4" height="15.0" fill="rgb(220,78,33)" rx="2" ry="2" />
<text  x="1075.07" y="1215.5" ></text>
</g>
<g >
<title>exit_mm (2 samples, 0.12%)</title><rect x="1070.7" y="1253" width="1.4" height="15.0" fill="rgb(221,152,16)" rx="2" ry="2" />
<text  x="1073.68" y="1263.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.06%)</title><rect x="1183.1" y="1173" width="0.7" height="15.0" fill="rgb(240,52,38)" rx="2" ry="2" />
<text  x="1186.06" y="1183.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.06%)</title><rect x="939.6" y="949" width="0.7" height="15.0" fill="rgb(248,1,39)" rx="2" ry="2" />
<text  x="942.57" y="959.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="995.8" y="885" width="0.7" height="15.0" fill="rgb(232,52,31)" rx="2" ry="2" />
<text  x="998.76" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (19 samples, 1.12%)</title><rect x="73.8" y="1157" width="13.2" height="15.0" fill="rgb(252,142,18)" rx="2" ry="2" />
<text  x="76.82" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="994.4" y="1301" width="0.7" height="15.0" fill="rgb(212,177,33)" rx="2" ry="2" />
<text  x="997.37" y="1311.5" ></text>
</g>
<g >
<title>find_get_entry (7 samples, 0.41%)</title><rect x="510.2" y="965" width="4.8" height="15.0" fill="rgb(237,145,6)" rx="2" ry="2" />
<text  x="513.16" y="975.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="1153.9" y="1125" width="0.7" height="15.0" fill="rgb(245,159,23)" rx="2" ry="2" />
<text  x="1156.93" y="1135.5" ></text>
</g>
<g >
<title>__x64_sys_mremap (4 samples, 0.24%)</title><rect x="628.1" y="1141" width="2.8" height="15.0" fill="rgb(213,163,0)" rx="2" ry="2" />
<text  x="631.10" y="1151.5" ></text>
</g>
<g >
<title>all (1,701 samples, 100%)</title><rect x="10.0" y="1365" width="1180.0" height="15.0" fill="rgb(248,111,42)" rx="2" ry="2" />
<text  x="13.00" y="1375.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.12%)</title><rect x="411.0" y="869" width="1.4" height="15.0" fill="rgb(232,220,31)" rx="2" ry="2" />
<text  x="413.96" y="879.5" ></text>
</g>
<g >
<title>unmap_vmas (56 samples, 3.29%)</title><rect x="92.6" y="1013" width="38.8" height="15.0" fill="rgb(220,2,39)" rx="2" ry="2" />
<text  x="95.55" y="1023.5" >unm..</text>
</g>
<g >
<title>__GI___munmap (3 samples, 0.18%)</title><rect x="158.5" y="1189" width="2.0" height="15.0" fill="rgb(237,168,6)" rx="2" ry="2" />
<text  x="161.45" y="1199.5" ></text>
</g>
<g >
<title>alloc_page_buffers (5 samples, 0.29%)</title><rect x="75.2" y="917" width="3.5" height="15.0" fill="rgb(232,190,51)" rx="2" ry="2" />
<text  x="78.21" y="927.5" ></text>
</g>
<g >
<title>get_page_from_freelist (45 samples, 2.65%)</title><rect x="419.3" y="885" width="31.2" height="15.0" fill="rgb(235,40,33)" rx="2" ry="2" />
<text  x="422.29" y="895.5" >ge..</text>
</g>
<g >
<title>ValidateChunkAMD64 (34 samples, 2.00%)</title><rect x="134.2" y="1221" width="23.6" height="15.0" fill="rgb(246,59,33)" rx="2" ry="2" />
<text  x="137.17" y="1231.5" >V..</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (7 samples, 0.41%)</title><rect x="952.1" y="1317" width="4.8" height="15.0" fill="rgb(230,97,47)" rx="2" ry="2" />
<text  x="955.06" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.06%)</title><rect x="10.7" y="1205" width="0.7" height="15.0" fill="rgb(208,155,23)" rx="2" ry="2" />
<text  x="13.69" y="1215.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.06%)</title><rect x="91.9" y="1029" width="0.7" height="15.0" fill="rgb(218,149,12)" rx="2" ry="2" />
<text  x="94.86" y="1039.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (1 samples, 0.06%)</title><rect x="1078.3" y="1141" width="0.7" height="15.0" fill="rgb(244,184,32)" rx="2" ry="2" />
<text  x="1081.31" y="1151.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.06%)</title><rect x="127.9" y="901" width="0.7" height="15.0" fill="rgb(245,139,30)" rx="2" ry="2" />
<text  x="130.93" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (57 samples, 3.35%)</title><rect x="91.9" y="1093" width="39.5" height="15.0" fill="rgb(247,0,6)" rx="2" ry="2" />
<text  x="94.86" y="1103.5" >do_..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.06%)</title><rect x="939.6" y="901" width="0.7" height="15.0" fill="rgb(251,216,18)" rx="2" ry="2" />
<text  x="942.57" y="911.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.06%)</title><rect x="1000.6" y="389" width="0.7" height="15.0" fill="rgb(246,118,48)" rx="2" ry="2" />
<text  x="1003.62" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (4 samples, 0.24%)</title><rect x="686.4" y="1157" width="2.7" height="15.0" fill="rgb(210,214,38)" rx="2" ry="2" />
<text  x="689.37" y="1167.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (2 samples, 0.12%)</title><rect x="365.9" y="1173" width="1.4" height="15.0" fill="rgb(238,73,31)" rx="2" ry="2" />
<text  x="368.87" y="1183.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.06%)</title><rect x="1072.8" y="1077" width="0.7" height="15.0" fill="rgb(249,120,44)" rx="2" ry="2" />
<text  x="1075.76" y="1087.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.06%)</title><rect x="1153.9" y="1093" width="0.7" height="15.0" fill="rgb(241,138,18)" rx="2" ry="2" />
<text  x="1156.93" y="1103.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize (1 samples, 0.06%)</title><rect x="1001.3" y="597" width="0.7" height="15.0" fill="rgb(244,107,41)" rx="2" ry="2" />
<text  x="1004.31" y="607.5" ></text>
</g>
<g >
<title>lind_mmap (1 samples, 0.06%)</title><rect x="167.5" y="1221" width="0.7" height="15.0" fill="rgb(242,162,12)" rx="2" ry="2" />
<text  x="170.47" y="1231.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.06%)</title><rect x="1077.6" y="1253" width="0.7" height="15.0" fill="rgb(232,174,15)" rx="2" ry="2" />
<text  x="1080.62" y="1263.5" ></text>
</g>
<g >
<title>__set_page_dirty_buffers (2 samples, 0.12%)</title><rect x="592.7" y="981" width="1.4" height="15.0" fill="rgb(221,101,49)" rx="2" ry="2" />
<text  x="595.72" y="991.5" ></text>
</g>
<g >
<title>kmem_cache_free (17 samples, 1.00%)</title><rect x="218.1" y="677" width="11.8" height="15.0" fill="rgb(219,77,15)" rx="2" ry="2" />
<text  x="221.11" y="687.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.06%)</title><rect x="304.1" y="1109" width="0.7" height="15.0" fill="rgb(223,80,6)" rx="2" ry="2" />
<text  x="307.13" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.06%)</title><rect x="73.1" y="1173" width="0.7" height="15.0" fill="rgb(252,144,25)" rx="2" ry="2" />
<text  x="76.13" y="1183.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (4 samples, 0.24%)</title><rect x="151.5" y="1205" width="2.8" height="15.0" fill="rgb(254,216,54)" rx="2" ry="2" />
<text  x="154.52" y="1215.5" ></text>
</g>
<g >
<title>__cmd_record (108 samples, 6.35%)</title><rect x="12.1" y="1301" width="74.9" height="15.0" fill="rgb(229,118,33)" rx="2" ry="2" />
<text  x="15.08" y="1311.5" >__cmd_re..</text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.06%)</title><rect x="1084.6" y="1125" width="0.6" height="15.0" fill="rgb(250,168,8)" rx="2" ry="2" />
<text  x="1087.56" y="1135.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="10.0" y="949" width="0.7" height="15.0" fill="rgb(235,95,45)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.06%)</title><rect x="1186.5" y="1253" width="0.7" height="15.0" fill="rgb(223,135,5)" rx="2" ry="2" />
<text  x="1189.53" y="1263.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.06%)</title><rect x="236.1" y="1157" width="0.7" height="15.0" fill="rgb(231,35,12)" rx="2" ry="2" />
<text  x="239.15" y="1167.5" ></text>
</g>
<g >
<title>_dl_check_map_versions (1 samples, 0.06%)</title><rect x="1002.0" y="1221" width="0.7" height="15.0" fill="rgb(234,51,25)" rx="2" ry="2" />
<text  x="1005.00" y="1231.5" ></text>
</g>
<g >
<title>ret_from_fork (3 samples, 0.18%)</title><rect x="1077.6" y="1333" width="2.1" height="15.0" fill="rgb(218,216,30)" rx="2" ry="2" />
<text  x="1080.62" y="1343.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::FS_METADATA::{{closure}} (2 samples, 0.12%)</title><rect x="1000.6" y="1013" width="1.4" height="15.0" fill="rgb(248,218,14)" rx="2" ry="2" />
<text  x="1003.62" y="1023.5" ></text>
</g>
<g >
<title>ion (20 samples, 1.18%)</title><rect x="73.1" y="1205" width="13.9" height="15.0" fill="rgb(218,100,22)" rx="2" ry="2" />
<text  x="76.13" y="1215.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (6 samples, 0.35%)</title><rect x="996.5" y="1173" width="4.1" height="15.0" fill="rgb(218,180,49)" rx="2" ry="2" />
<text  x="999.46" y="1183.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.06%)</title><rect x="365.9" y="1109" width="0.7" height="15.0" fill="rgb(238,96,47)" rx="2" ry="2" />
<text  x="368.87" y="1119.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (1 samples, 0.06%)</title><rect x="1001.3" y="389" width="0.7" height="15.0" fill="rgb(245,126,37)" rx="2" ry="2" />
<text  x="1004.31" y="399.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.06%)</title><rect x="539.3" y="853" width="0.7" height="15.0" fill="rgb(212,29,20)" rx="2" ry="2" />
<text  x="542.30" y="863.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.18%)</title><rect x="80.1" y="885" width="2.0" height="15.0" fill="rgb(244,67,18)" rx="2" ry="2" />
<text  x="83.06" y="895.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (1 samples, 0.06%)</title><rect x="1167.1" y="1237" width="0.7" height="15.0" fill="rgb(239,69,22)" rx="2" ry="2" />
<text  x="1170.11" y="1247.5" ></text>
</g>
<g >
<title>__libc_start_call_main (1 samples, 0.06%)</title><rect x="10.0" y="1301" width="0.7" height="15.0" fill="rgb(214,50,9)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.18%)</title><rect x="84.2" y="949" width="2.1" height="15.0" fill="rgb(235,200,24)" rx="2" ry="2" />
<text  x="87.23" y="959.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.06%)</title><rect x="239.6" y="1141" width="0.7" height="15.0" fill="rgb(235,61,53)" rx="2" ry="2" />
<text  x="242.62" y="1151.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.12%)</title><rect x="517.1" y="997" width="1.4" height="15.0" fill="rgb(208,152,48)" rx="2" ry="2" />
<text  x="520.10" y="1007.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="80.1" y="869" width="0.7" height="15.0" fill="rgb(247,223,14)" rx="2" ry="2" />
<text  x="83.06" y="879.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.06%)</title><rect x="1089.4" y="1029" width="0.7" height="15.0" fill="rgb(254,3,21)" rx="2" ry="2" />
<text  x="1092.41" y="1039.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="1077.6" y="1189" width="0.7" height="15.0" fill="rgb(243,38,37)" rx="2" ry="2" />
<text  x="1080.62" y="1199.5" ></text>
</g>
<g >
<title>swapper (168 samples, 9.88%)</title><rect x="1073.5" y="1349" width="116.5" height="15.0" fill="rgb(232,160,17)" rx="2" ry="2" />
<text  x="1076.46" y="1359.5" >swapper</text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.06%)</title><rect x="963.9" y="1173" width="0.6" height="15.0" fill="rgb(212,220,13)" rx="2" ry="2" />
<text  x="966.85" y="1183.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (38 samples, 2.23%)</title><rect x="131.4" y="1269" width="26.4" height="15.0" fill="rgb(252,192,21)" rx="2" ry="2" />
<text  x="134.40" y="1279.5" >N..</text>
</g>
<g >
<title>dispatcher (184 samples, 10.82%)</title><rect x="234.8" y="1253" width="127.6" height="15.0" fill="rgb(229,76,4)" rx="2" ry="2" />
<text  x="237.76" y="1263.5" >dispatcher</text>
</g>
<g >
<title>free_pages_and_swap_cache (3 samples, 0.18%)</title><rect x="128.6" y="917" width="2.1" height="15.0" fill="rgb(237,36,8)" rx="2" ry="2" />
<text  x="131.62" y="927.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.06%)</title><rect x="238.9" y="1125" width="0.7" height="15.0" fill="rgb(242,25,50)" rx="2" ry="2" />
<text  x="241.92" y="1135.5" ></text>
</g>
<g >
<title>rmqueue (2 samples, 0.12%)</title><rect x="80.8" y="869" width="1.3" height="15.0" fill="rgb(253,150,30)" rx="2" ry="2" />
<text  x="83.76" y="879.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.06%)</title><rect x="332.6" y="1157" width="0.7" height="15.0" fill="rgb(209,13,47)" rx="2" ry="2" />
<text  x="335.57" y="1167.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.06%)</title><rect x="1177.5" y="1157" width="0.7" height="15.0" fill="rgb(235,81,18)" rx="2" ry="2" />
<text  x="1180.51" y="1167.5" ></text>
</g>
<g >
<title>truncate_inode_page (1 samples, 0.06%)</title><rect x="1072.8" y="1045" width="0.7" height="15.0" fill="rgb(208,138,40)" rx="2" ry="2" />
<text  x="1075.76" y="1055.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (3 samples, 0.18%)</title><rect x="238.2" y="1221" width="2.1" height="15.0" fill="rgb(217,151,4)" rx="2" ry="2" />
<text  x="241.23" y="1231.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.06%)</title><rect x="83.5" y="917" width="0.7" height="15.0" fill="rgb(252,39,18)" rx="2" ry="2" />
<text  x="86.53" y="927.5" ></text>
</g>
<g >
<title>xas_create (2 samples, 0.12%)</title><rect x="472.7" y="885" width="1.4" height="15.0" fill="rgb(212,115,17)" rx="2" ry="2" />
<text  x="475.70" y="895.5" ></text>
</g>
<g >
<title>menu_select (12 samples, 0.71%)</title><rect x="1157.4" y="1237" width="8.3" height="15.0" fill="rgb(243,104,26)" rx="2" ry="2" />
<text  x="1160.40" y="1247.5" ></text>
</g>
<g >
<title>up_read (3 samples, 0.18%)</title><rect x="596.9" y="1013" width="2.1" height="15.0" fill="rgb(227,80,49)" rx="2" ry="2" />
<text  x="599.88" y="1023.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.06%)</title><rect x="89.1" y="1253" width="0.7" height="15.0" fill="rgb(254,202,34)" rx="2" ry="2" />
<text  x="92.08" y="1263.5" ></text>
</g>
<g >
<title>ovl_setattr.part.0 (3 samples, 0.18%)</title><rect x="631.6" y="997" width="2.0" height="15.0" fill="rgb(236,65,41)" rx="2" ry="2" />
<text  x="634.56" y="1007.5" ></text>
</g>
<g >
<title>_start (12 samples, 0.71%)</title><rect x="995.8" y="1333" width="8.3" height="15.0" fill="rgb(244,169,39)" rx="2" ry="2" />
<text  x="998.76" y="1343.5" ></text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.06%)</title><rect x="69.0" y="1141" width="0.7" height="15.0" fill="rgb(228,21,30)" rx="2" ry="2" />
<text  x="71.97" y="1151.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.06%)</title><rect x="1001.3" y="405" width="0.7" height="15.0" fill="rgb(212,200,39)" rx="2" ry="2" />
<text  x="1004.31" y="415.5" ></text>
</g>
<g >
<title>ext4_has_free_clusters (1 samples, 0.06%)</title><rect x="560.1" y="901" width="0.7" height="15.0" fill="rgb(237,156,0)" rx="2" ry="2" />
<text  x="563.11" y="911.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.06%)</title><rect x="83.5" y="901" width="0.7" height="15.0" fill="rgb(245,49,49)" rx="2" ry="2" />
<text  x="86.53" y="911.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (1 samples, 0.06%)</title><rect x="1001.3" y="213" width="0.7" height="15.0" fill="rgb(241,44,50)" rx="2" ry="2" />
<text  x="1004.31" y="223.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.06%)</title><rect x="78.0" y="885" width="0.7" height="15.0" fill="rgb(238,18,43)" rx="2" ry="2" />
<text  x="80.98" y="895.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (2 samples, 0.12%)</title><rect x="1000.6" y="869" width="1.4" height="15.0" fill="rgb(233,64,51)" rx="2" ry="2" />
<text  x="1003.62" y="879.5" ></text>
</g>
<g >
<title>__handle_mm_fault (23 samples, 1.35%)</title><rect x="304.8" y="1093" width="16.0" height="15.0" fill="rgb(251,64,12)" rx="2" ry="2" />
<text  x="307.83" y="1103.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="963.9" y="1109" width="0.6" height="15.0" fill="rgb(207,10,28)" rx="2" ry="2" />
<text  x="966.85" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="71.7" y="1205" width="0.7" height="15.0" fill="rgb(207,5,20)" rx="2" ry="2" />
<text  x="74.74" y="1215.5" ></text>
</g>
<g >
<title>zap_pte_range (2 samples, 0.12%)</title><rect x="159.1" y="1013" width="1.4" height="15.0" fill="rgb(209,22,28)" rx="2" ry="2" />
<text  x="162.15" y="1023.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (8 samples, 0.47%)</title><rect x="1160.2" y="1221" width="5.5" height="15.0" fill="rgb(229,138,16)" rx="2" ry="2" />
<text  x="1163.17" y="1231.5" ></text>
</g>
<g >
<title>_rl_init_terminal_io (1 samples, 0.06%)</title><rect x="10.0" y="1173" width="0.7" height="15.0" fill="rgb(242,34,24)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.06%)</title><rect x="478.3" y="869" width="0.6" height="15.0" fill="rgb(224,13,3)" rx="2" ry="2" />
<text  x="481.25" y="879.5" ></text>
</g>
<g >
<title>create_empty_buffers (5 samples, 0.29%)</title><rect x="75.2" y="933" width="3.5" height="15.0" fill="rgb(222,89,42)" rx="2" ry="2" />
<text  x="78.21" y="943.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.06%)</title><rect x="995.8" y="1093" width="0.7" height="15.0" fill="rgb(251,22,20)" rx="2" ry="2" />
<text  x="998.76" y="1103.5" ></text>
</g>
<g >
<title>ext4_evict_inode (1 samples, 0.06%)</title><rect x="1072.1" y="1077" width="0.7" height="15.0" fill="rgb(242,120,43)" rx="2" ry="2" />
<text  x="1075.07" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.06%)</title><rect x="71.7" y="1173" width="0.7" height="15.0" fill="rgb(237,145,40)" rx="2" ry="2" />
<text  x="74.74" y="1183.5" ></text>
</g>
<g >
<title>should_fail_alloc_page (1 samples, 0.06%)</title><rect x="450.5" y="901" width="0.7" height="15.0" fill="rgb(206,78,48)" rx="2" ry="2" />
<text  x="453.51" y="911.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (12 samples, 0.71%)</title><rect x="442.2" y="853" width="8.3" height="15.0" fill="rgb(234,70,38)" rx="2" ry="2" />
<text  x="445.18" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (94 samples, 5.53%)</title><rect x="168.2" y="1109" width="65.2" height="15.0" fill="rgb(234,92,33)" rx="2" ry="2" />
<text  x="171.17" y="1119.5" >__x64_s..</text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.06%)</title><rect x="939.6" y="1093" width="0.7" height="15.0" fill="rgb(238,205,8)" rx="2" ry="2" />
<text  x="942.57" y="1103.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::incref_root (2 samples, 0.12%)</title><rect x="1000.6" y="1237" width="1.4" height="15.0" fill="rgb(220,173,34)" rx="2" ry="2" />
<text  x="1003.62" y="1247.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (4 samples, 0.24%)</title><rect x="164.7" y="1269" width="2.8" height="15.0" fill="rgb(235,151,42)" rx="2" ry="2" />
<text  x="167.70" y="1279.5" ></text>
</g>
<g >
<title>NaClSysExecve (9 samples, 0.53%)</title><rect x="158.5" y="1285" width="6.2" height="15.0" fill="rgb(252,97,33)" rx="2" ry="2" />
<text  x="161.45" y="1295.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.06%)</title><rect x="69.0" y="1157" width="0.7" height="15.0" fill="rgb(250,134,32)" rx="2" ry="2" />
<text  x="71.97" y="1167.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.06%)</title><rect x="118.2" y="917" width="0.7" height="15.0" fill="rgb(230,24,31)" rx="2" ry="2" />
<text  x="121.22" y="927.5" ></text>
</g>
<g >
<title>page_cache_async_ra (137 samples, 8.05%)</title><rect x="414.4" y="981" width="95.1" height="15.0" fill="rgb(252,76,17)" rx="2" ry="2" />
<text  x="417.43" y="991.5" >page_cache_..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (384 samples, 22.57%)</title><rect x="367.3" y="1221" width="266.3" height="15.0" fill="rgb(252,158,46)" rx="2" ry="2" />
<text  x="370.26" y="1231.5" >rustposix::interface::file::Emulate..</text>
</g>
<g >
<title>do_page_mkwrite (105 samples, 6.17%)</title><rect x="515.0" y="1029" width="72.9" height="15.0" fill="rgb(214,43,46)" rx="2" ry="2" />
<text  x="518.02" y="1039.5" >do_page_..</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (41 samples, 2.41%)</title><rect x="965.9" y="1317" width="28.5" height="15.0" fill="rgb(220,123,41)" rx="2" ry="2" />
<text  x="968.93" y="1327.5" >ri..</text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.06%)</title><rect x="1187.2" y="1221" width="0.7" height="15.0" fill="rgb(213,7,48)" rx="2" ry="2" />
<text  x="1190.23" y="1231.5" ></text>
</g>
<g >
<title>__set_page_dirty (1 samples, 0.06%)</title><rect x="82.8" y="901" width="0.7" height="15.0" fill="rgb(242,69,41)" rx="2" ry="2" />
<text  x="85.84" y="911.5" ></text>
</g>
<g >
<title>ext4_map_blocks (3 samples, 0.18%)</title><rect x="487.3" y="885" width="2.1" height="15.0" fill="rgb(214,72,22)" rx="2" ry="2" />
<text  x="490.27" y="895.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (1 samples, 0.06%)</title><rect x="939.6" y="1077" width="0.7" height="15.0" fill="rgb(212,1,3)" rx="2" ry="2" />
<text  x="942.57" y="1087.5" ></text>
</g>
<g >
<title>__slab_alloc (4 samples, 0.24%)</title><rect x="535.8" y="885" width="2.8" height="15.0" fill="rgb(216,52,15)" rx="2" ry="2" />
<text  x="538.83" y="895.5" ></text>
</g>
<g >
<title>NaClSysMmapDecoder (1 samples, 0.06%)</title><rect x="167.5" y="1301" width="0.7" height="15.0" fill="rgb(217,122,49)" rx="2" ry="2" />
<text  x="170.47" y="1311.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (1 samples, 0.06%)</title><rect x="236.1" y="1189" width="0.7" height="15.0" fill="rgb(211,117,36)" rx="2" ry="2" />
<text  x="239.15" y="1199.5" ></text>
</g>
<g >
<title>_dl_start (3 samples, 0.18%)</title><rect x="1002.0" y="1317" width="2.1" height="15.0" fill="rgb(241,34,26)" rx="2" ry="2" />
<text  x="1005.00" y="1327.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="938.9" y="869" width="0.7" height="15.0" fill="rgb(219,108,52)" rx="2" ry="2" />
<text  x="941.88" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="628.1" y="1173" width="2.8" height="15.0" fill="rgb(253,41,44)" rx="2" ry="2" />
<text  x="631.10" y="1183.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.06%)</title><rect x="460.9" y="901" width="0.7" height="15.0" fill="rgb(240,210,32)" rx="2" ry="2" />
<text  x="463.91" y="911.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::truncate (4 samples, 0.24%)</title><rect x="630.9" y="1173" width="2.7" height="15.0" fill="rgb(210,162,28)" rx="2" ry="2" />
<text  x="633.87" y="1183.5" ></text>
</g>
<g >
<title>do_dentry_open (1 samples, 0.06%)</title><rect x="10.7" y="997" width="0.7" height="15.0" fill="rgb(249,189,2)" rx="2" ry="2" />
<text  x="13.69" y="1007.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.06%)</title><rect x="1159.5" y="1221" width="0.7" height="15.0" fill="rgb(236,103,32)" rx="2" ry="2" />
<text  x="1162.48" y="1231.5" ></text>
</g>
<g >
<title>ovl_already_copied_up (1 samples, 0.06%)</title><rect x="10.7" y="965" width="0.7" height="15.0" fill="rgb(207,198,34)" rx="2" ry="2" />
<text  x="13.69" y="975.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.06%)</title><rect x="89.1" y="1141" width="0.7" height="15.0" fill="rgb(205,128,4)" rx="2" ry="2" />
<text  x="92.08" y="1151.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.12%)</title><rect x="66.9" y="1157" width="1.4" height="15.0" fill="rgb(230,185,10)" rx="2" ry="2" />
<text  x="69.88" y="1167.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (7 samples, 0.41%)</title><rect x="995.8" y="1253" width="4.8" height="15.0" fill="rgb(218,81,16)" rx="2" ry="2" />
<text  x="998.76" y="1263.5" ></text>
</g>
<g >
<title>__vfs_getxattr (1 samples, 0.06%)</title><rect x="630.9" y="981" width="0.7" height="15.0" fill="rgb(224,61,11)" rx="2" ry="2" />
<text  x="633.87" y="991.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.06%)</title><rect x="938.9" y="885" width="0.7" height="15.0" fill="rgb(216,160,12)" rx="2" ry="2" />
<text  x="941.88" y="895.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.06%)</title><rect x="10.7" y="1109" width="0.7" height="15.0" fill="rgb(251,16,19)" rx="2" ry="2" />
<text  x="13.69" y="1119.5" ></text>
</g>
<g >
<title>__do_sys_mremap (4 samples, 0.24%)</title><rect x="628.1" y="1125" width="2.8" height="15.0" fill="rgb(206,138,14)" rx="2" ry="2" />
<text  x="631.10" y="1135.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1 samples, 0.06%)</title><rect x="233.4" y="1285" width="0.7" height="15.0" fill="rgb(247,104,33)" rx="2" ry="2" />
<text  x="236.37" y="1295.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.06%)</title><rect x="1081.8" y="1013" width="0.7" height="15.0" fill="rgb(240,136,50)" rx="2" ry="2" />
<text  x="1084.78" y="1023.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.06%)</title><rect x="234.8" y="1189" width="0.7" height="15.0" fill="rgb(230,90,38)" rx="2" ry="2" />
<text  x="237.76" y="1199.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.06%)</title><rect x="1000.6" y="485" width="0.7" height="15.0" fill="rgb(252,51,48)" rx="2" ry="2" />
<text  x="1003.62" y="495.5" ></text>
</g>
<g >
<title>HandleStackContext (1 samples, 0.06%)</title><rect x="90.5" y="1301" width="0.7" height="15.0" fill="rgb(208,66,46)" rx="2" ry="2" />
<text  x="93.47" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.18%)</title><rect x="684.3" y="1077" width="2.1" height="15.0" fill="rgb(221,98,43)" rx="2" ry="2" />
<text  x="687.29" y="1087.5" ></text>
</g>
<g >
<title>lind_close (57 samples, 3.35%)</title><rect x="91.9" y="1205" width="39.5" height="15.0" fill="rgb(216,220,3)" rx="2" ry="2" />
<text  x="94.86" y="1215.5" >lin..</text>
</g>
<g >
<title>__mod_lruvec_state (6 samples, 0.35%)</title><rect x="183.4" y="757" width="4.2" height="15.0" fill="rgb(225,196,24)" rx="2" ry="2" />
<text  x="186.43" y="767.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.06%)</title><rect x="68.3" y="1173" width="0.7" height="15.0" fill="rgb(213,160,44)" rx="2" ry="2" />
<text  x="71.27" y="1183.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.06%)</title><rect x="1077.6" y="1237" width="0.7" height="15.0" fill="rgb(221,97,28)" rx="2" ry="2" />
<text  x="1080.62" y="1247.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.06%)</title><rect x="86.3" y="1077" width="0.7" height="15.0" fill="rgb(219,163,7)" rx="2" ry="2" />
<text  x="89.31" y="1087.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.06%)</title><rect x="159.8" y="997" width="0.7" height="15.0" fill="rgb(233,52,46)" rx="2" ry="2" />
<text  x="162.84" y="1007.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.18%)</title><rect x="75.2" y="885" width="2.1" height="15.0" fill="rgb(213,153,50)" rx="2" ry="2" />
<text  x="78.21" y="895.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.06%)</title><rect x="1083.2" y="1029" width="0.7" height="15.0" fill="rgb(246,45,3)" rx="2" ry="2" />
<text  x="1086.17" y="1039.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.12%)</title><rect x="1082.5" y="1109" width="1.4" height="15.0" fill="rgb(242,119,16)" rx="2" ry="2" />
<text  x="1085.48" y="1119.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::pread_syscall (1 samples, 0.06%)</title><rect x="995.8" y="1125" width="0.7" height="15.0" fill="rgb(246,151,18)" rx="2" ry="2" />
<text  x="998.76" y="1135.5" ></text>
</g>
<g >
<title>do_fault (282 samples, 16.58%)</title><rect x="408.9" y="1061" width="195.6" height="15.0" fill="rgb(217,52,3)" rx="2" ry="2" />
<text  x="411.88" y="1071.5" >do_fault</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for  (2 samples, 0.12%)</title><rect x="938.9" y="1189" width="1.4" height="15.0" fill="rgb(207,66,18)" rx="2" ry="2" />
<text  x="941.88" y="1199.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.06%)</title><rect x="1076.9" y="1221" width="0.7" height="15.0" fill="rgb(229,156,49)" rx="2" ry="2" />
<text  x="1079.93" y="1231.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.06%)</title><rect x="548.3" y="949" width="0.7" height="15.0" fill="rgb(215,60,23)" rx="2" ry="2" />
<text  x="551.32" y="959.5" ></text>
</g>
<g >
<title>vfs_getxattr (1 samples, 0.06%)</title><rect x="630.9" y="933" width="0.7" height="15.0" fill="rgb(254,0,17)" rx="2" ry="2" />
<text  x="633.87" y="943.5" ></text>
</g>
<g >
<title>event_function (1 samples, 0.06%)</title><rect x="87.0" y="1157" width="0.7" height="15.0" fill="rgb(238,25,39)" rx="2" ry="2" />
<text  x="90.00" y="1167.5" ></text>
</g>
<g >
<title>collect_percpu_times (1 samples, 0.06%)</title><rect x="1079.0" y="1253" width="0.7" height="15.0" fill="rgb(241,140,9)" rx="2" ry="2" />
<text  x="1082.01" y="1263.5" ></text>
</g>
<g >
<title>notify_change (3 samples, 0.18%)</title><rect x="631.6" y="1029" width="2.0" height="15.0" fill="rgb(231,200,42)" rx="2" ry="2" />
<text  x="634.56" y="1039.5" ></text>
</g>
<g >
<title>lind_pread (1 samples, 0.06%)</title><rect x="995.8" y="1157" width="0.7" height="15.0" fill="rgb(215,86,4)" rx="2" ry="2" />
<text  x="998.76" y="1167.5" ></text>
</g>
<g >
<title>rl_make_bare_keymap (1 samples, 0.06%)</title><rect x="10.0" y="1109" width="0.7" height="15.0" fill="rgb(209,70,25)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="1000.6" y="85" width="0.7" height="15.0" fill="rgb(206,127,23)" rx="2" ry="2" />
<text  x="1003.62" y="95.5" ></text>
</g>
<g >
<title>file_update_time (1 samples, 0.06%)</title><rect x="583.0" y="997" width="0.7" height="15.0" fill="rgb(229,33,16)" rx="2" ry="2" />
<text  x="586.00" y="1007.5" ></text>
</g>
<g >
<title>xa_get_order (1 samples, 0.06%)</title><rect x="79.4" y="901" width="0.7" height="15.0" fill="rgb(251,69,46)" rx="2" ry="2" />
<text  x="82.37" y="911.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (13 samples, 0.76%)</title><rect x="179.3" y="805" width="9.0" height="15.0" fill="rgb(225,223,18)" rx="2" ry="2" />
<text  x="182.27" y="815.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="1173.4" y="1237" width="0.6" height="15.0" fill="rgb(218,173,40)" rx="2" ry="2" />
<text  x="1176.35" y="1247.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 3.76%)</title><rect x="21.1" y="1061" width="44.4" height="15.0" fill="rgb(211,81,15)" rx="2" ry="2" />
<text  x="24.10" y="1071.5" >remo..</text>
</g>
<g >
<title>NaClHostDescClose (57 samples, 3.35%)</title><rect x="91.9" y="1221" width="39.5" height="15.0" fill="rgb(226,60,2)" rx="2" ry="2" />
<text  x="94.86" y="1231.5" >NaC..</text>
</g>
<g >
<title>ext4_setattr (1 samples, 0.06%)</title><rect x="633.0" y="965" width="0.6" height="15.0" fill="rgb(247,15,10)" rx="2" ry="2" />
<text  x="635.95" y="975.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.06%)</title><rect x="570.5" y="917" width="0.7" height="15.0" fill="rgb(253,149,3)" rx="2" ry="2" />
<text  x="573.52" y="927.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (1 samples, 0.06%)</title><rect x="1070.7" y="1157" width="0.7" height="15.0" fill="rgb(245,56,34)" rx="2" ry="2" />
<text  x="1073.68" y="1167.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (5 samples, 0.29%)</title><rect x="66.9" y="1189" width="3.5" height="15.0" fill="rgb(210,99,3)" rx="2" ry="2" />
<text  x="69.88" y="1199.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.06%)</title><rect x="364.5" y="1173" width="0.7" height="15.0" fill="rgb(217,100,30)" rx="2" ry="2" />
<text  x="367.49" y="1183.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (1 samples, 0.06%)</title><rect x="1000.6" y="437" width="0.7" height="15.0" fill="rgb(251,96,43)" rx="2" ry="2" />
<text  x="1003.62" y="447.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (2 samples, 0.12%)</title><rect x="80.8" y="853" width="1.3" height="15.0" fill="rgb(213,218,44)" rx="2" ry="2" />
<text  x="83.76" y="863.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (22 samples, 1.29%)</title><rect x="549.0" y="949" width="15.3" height="15.0" fill="rgb(250,73,10)" rx="2" ry="2" />
<text  x="552.01" y="959.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.06%)</title><rect x="228.5" y="645" width="0.7" height="15.0" fill="rgb(224,204,52)" rx="2" ry="2" />
<text  x="231.52" y="655.5" ></text>
</g>
<g >
<title>xas_nomem (1 samples, 0.06%)</title><rect x="471.3" y="901" width="0.7" height="15.0" fill="rgb(205,91,13)" rx="2" ry="2" />
<text  x="474.32" y="911.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.12%)</title><rect x="472.7" y="853" width="1.4" height="15.0" fill="rgb(229,163,22)" rx="2" ry="2" />
<text  x="475.70" y="863.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (1 samples, 0.06%)</title><rect x="1072.1" y="1061" width="0.7" height="15.0" fill="rgb(221,4,22)" rx="2" ry="2" />
<text  x="1075.07" y="1071.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (2 samples, 0.12%)</title><rect x="611.4" y="1077" width="1.4" height="15.0" fill="rgb(244,10,40)" rx="2" ry="2" />
<text  x="614.45" y="1087.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (6 samples, 0.35%)</title><rect x="183.4" y="741" width="4.2" height="15.0" fill="rgb(207,18,32)" rx="2" ry="2" />
<text  x="186.43" y="751.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.06%)</title><rect x="1078.3" y="1205" width="0.7" height="15.0" fill="rgb(244,101,17)" rx="2" ry="2" />
<text  x="1081.31" y="1215.5" ></text>
</g>
<g >
<title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.06%)</title><rect x="1000.6" y="325" width="0.7" height="15.0" fill="rgb(213,140,6)" rx="2" ry="2" />
<text  x="1003.62" y="335.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (14 samples, 0.82%)</title><rect x="984.7" y="1253" width="9.7" height="15.0" fill="rgb(225,74,0)" rx="2" ry="2" />
<text  x="987.66" y="1263.5" ></text>
</g>
<g >
<title>NaClSysMmap (1 samples, 0.06%)</title><rect x="167.5" y="1285" width="0.7" height="15.0" fill="rgb(228,14,12)" rx="2" ry="2" />
<text  x="170.47" y="1295.5" ></text>
</g>
<g >
<title>ovl_open (1 samples, 0.06%)</title><rect x="10.7" y="981" width="0.7" height="15.0" fill="rgb(223,121,18)" rx="2" ry="2" />
<text  x="13.69" y="991.5" ></text>
</g>
<g >
<title>__GI___write (20 samples, 1.18%)</title><rect x="73.1" y="1189" width="13.9" height="15.0" fill="rgb(217,206,8)" rx="2" ry="2" />
<text  x="76.13" y="1199.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.06%)</title><rect x="476.9" y="869" width="0.7" height="15.0" fill="rgb(230,206,8)" rx="2" ry="2" />
<text  x="479.87" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="1000.6" y="613" width="0.7" height="15.0" fill="rgb(254,220,11)" rx="2" ry="2" />
<text  x="1003.62" y="623.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.06%)</title><rect x="167.5" y="1205" width="0.7" height="15.0" fill="rgb(243,3,4)" rx="2" ry="2" />
<text  x="170.47" y="1215.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.06%)</title><rect x="86.3" y="1093" width="0.7" height="15.0" fill="rgb(233,5,30)" rx="2" ry="2" />
<text  x="89.31" y="1103.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.06%)</title><rect x="87.0" y="1109" width="0.7" height="15.0" fill="rgb(241,73,48)" rx="2" ry="2" />
<text  x="90.00" y="1119.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (56 samples, 3.29%)</title><rect x="92.6" y="965" width="38.8" height="15.0" fill="rgb(246,34,51)" rx="2" ry="2" />
<text  x="95.55" y="975.5" >zap..</text>
</g>
<g >
<title>record__mmap_read_all (21 samples, 1.23%)</title><rect x="72.4" y="1285" width="14.6" height="15.0" fill="rgb(248,8,42)" rx="2" ry="2" />
<text  x="75.43" y="1295.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (159 samples, 9.35%)</title><rect x="1079.7" y="1333" width="110.3" height="15.0" fill="rgb(223,0,19)" rx="2" ry="2" />
<text  x="1082.70" y="1343.5" >secondary_sta..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="236.1" y="1045" width="0.7" height="15.0" fill="rgb(243,172,4)" rx="2" ry="2" />
<text  x="239.15" y="1055.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.06%)</title><rect x="235.5" y="1205" width="0.6" height="15.0" fill="rgb(243,198,40)" rx="2" ry="2" />
<text  x="238.46" y="1215.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="1069.3" y="1301" width="0.7" height="15.0" fill="rgb(205,215,18)" rx="2" ry="2" />
<text  x="1072.29" y="1311.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.06%)</title><rect x="89.1" y="1013" width="0.7" height="15.0" fill="rgb(240,204,37)" rx="2" ry="2" />
<text  x="92.08" y="1023.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (235 samples, 13.82%)</title><rect x="775.9" y="1205" width="163.0" height="15.0" fill="rgb(206,193,38)" rx="2" ry="2" />
<text  x="778.86" y="1215.5" >ringbuf::producer::Pr..</text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.06%)</title><rect x="1001.3" y="421" width="0.7" height="15.0" fill="rgb(240,162,52)" rx="2" ry="2" />
<text  x="1004.31" y="431.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.06%)</title><rect x="1083.2" y="1045" width="0.7" height="15.0" fill="rgb(252,157,48)" rx="2" ry="2" />
<text  x="1086.17" y="1055.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (9 samples, 0.53%)</title><rect x="995.8" y="1269" width="6.2" height="15.0" fill="rgb(222,47,10)" rx="2" ry="2" />
<text  x="998.76" y="1279.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="10.0" y="981" width="0.7" height="15.0" fill="rgb(226,18,37)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.06%)</title><rect x="939.6" y="725" width="0.7" height="15.0" fill="rgb(208,79,4)" rx="2" ry="2" />
<text  x="942.57" y="735.5" ></text>
</g>
<g >
<title>iput_final (2 samples, 0.12%)</title><rect x="1072.1" y="1109" width="1.4" height="15.0" fill="rgb(239,69,25)" rx="2" ry="2" />
<text  x="1075.07" y="1119.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_init::{{closure}} (2 samples, 0.12%)</title><rect x="1000.6" y="1077" width="1.4" height="15.0" fill="rgb(252,22,18)" rx="2" ry="2" />
<text  x="1003.62" y="1087.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.06%)</title><rect x="89.1" y="1157" width="0.7" height="15.0" fill="rgb(217,68,54)" rx="2" ry="2" />
<text  x="92.08" y="1167.5" ></text>
</g>
<g >
<title>pagecache_get_page (4 samples, 0.24%)</title><rect x="79.4" y="933" width="2.7" height="15.0" fill="rgb(254,8,38)" rx="2" ry="2" />
<text  x="82.37" y="943.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.06%)</title><rect x="1071.4" y="1157" width="0.7" height="15.0" fill="rgb(220,53,34)" rx="2" ry="2" />
<text  x="1074.38" y="1167.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="1000.6" y="549" width="0.7" height="15.0" fill="rgb(226,72,26)" rx="2" ry="2" />
<text  x="1003.62" y="559.5" ></text>
</g>
<g >
<title>NaClValidateCode (34 samples, 2.00%)</title><rect x="134.2" y="1253" width="23.6" height="15.0" fill="rgb(208,96,41)" rx="2" ry="2" />
<text  x="137.17" y="1263.5" >N..</text>
</g>
<g >
<title>kmem_cache_alloc (16 samples, 0.94%)</title><rect x="534.4" y="901" width="11.1" height="15.0" fill="rgb(234,104,17)" rx="2" ry="2" />
<text  x="537.44" y="911.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (70 samples, 4.12%)</title><rect x="16.9" y="1141" width="48.6" height="15.0" fill="rgb(245,226,30)" rx="2" ry="2" />
<text  x="19.94" y="1151.5" >perf..</text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.06%)</title><rect x="1001.3" y="629" width="0.7" height="15.0" fill="rgb(225,75,51)" rx="2" ry="2" />
<text  x="1004.31" y="639.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (24 samples, 1.41%)</title><rect x="304.1" y="1157" width="16.7" height="15.0" fill="rgb(236,30,1)" rx="2" ry="2" />
<text  x="307.13" y="1167.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (10 samples, 0.59%)</title><rect x="1174.7" y="1205" width="7.0" height="15.0" fill="rgb(222,175,4)" rx="2" ry="2" />
<text  x="1177.74" y="1215.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.06%)</title><rect x="331.2" y="1173" width="0.7" height="15.0" fill="rgb(229,0,45)" rx="2" ry="2" />
<text  x="334.19" y="1183.5" ></text>
</g>
<g >
<title>generic_write_end (3 samples, 0.18%)</title><rect x="82.1" y="949" width="2.1" height="15.0" fill="rgb(222,212,29)" rx="2" ry="2" />
<text  x="85.15" y="959.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.06%)</title><rect x="397.8" y="1077" width="0.7" height="15.0" fill="rgb(246,151,41)" rx="2" ry="2" />
<text  x="400.78" y="1087.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.06%)</title><rect x="1089.4" y="1061" width="0.7" height="15.0" fill="rgb(219,163,32)" rx="2" ry="2" />
<text  x="1092.41" y="1071.5" ></text>
</g>
<g >
<title>kick_ilb (5 samples, 0.29%)</title><rect x="1178.2" y="1189" width="3.5" height="15.0" fill="rgb(253,81,51)" rx="2" ry="2" />
<text  x="1181.21" y="1199.5" ></text>
</g>
<g >
<title>page_cache_delete_batch (4 samples, 0.24%)</title><rect x="180.0" y="789" width="2.7" height="15.0" fill="rgb(228,113,33)" rx="2" ry="2" />
<text  x="182.96" y="799.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.12%)</title><rect x="1000.6" y="805" width="1.4" height="15.0" fill="rgb(242,48,25)" rx="2" ry="2" />
<text  x="1003.62" y="815.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.06%)</title><rect x="1167.1" y="1173" width="0.7" height="15.0" fill="rgb(218,15,3)" rx="2" ry="2" />
<text  x="1170.11" y="1183.5" ></text>
</g>
<g >
<title>down_read (3 samples, 0.18%)</title><rect x="387.4" y="1109" width="2.1" height="15.0" fill="rgb(242,111,20)" rx="2" ry="2" />
<text  x="390.38" y="1119.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.06%)</title><rect x="69.0" y="1125" width="0.7" height="15.0" fill="rgb(215,120,33)" rx="2" ry="2" />
<text  x="71.97" y="1135.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="364.5" y="1029" width="0.7" height="15.0" fill="rgb(224,118,44)" rx="2" ry="2" />
<text  x="367.49" y="1039.5" ></text>
</g>
<g >
<title>__GI___ioctl (79 samples, 4.64%)</title><rect x="12.1" y="1237" width="54.8" height="15.0" fill="rgb(213,27,44)" rx="2" ry="2" />
<text  x="15.08" y="1247.5" >__GI_..</text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.12%)</title><rect x="481.0" y="869" width="1.4" height="15.0" fill="rgb(212,178,8)" rx="2" ry="2" />
<text  x="484.03" y="879.5" ></text>
</g>
<g >
<title>page_cache_delete (1 samples, 0.06%)</title><rect x="1072.8" y="1013" width="0.7" height="15.0" fill="rgb(239,190,10)" rx="2" ry="2" />
<text  x="1075.76" y="1023.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.18%)</title><rect x="594.1" y="981" width="2.1" height="15.0" fill="rgb(228,81,44)" rx="2" ry="2" />
<text  x="597.10" y="991.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (5 samples, 0.29%)</title><rect x="411.0" y="949" width="3.4" height="15.0" fill="rgb(234,168,30)" rx="2" ry="2" />
<text  x="413.96" y="959.5" ></text>
</g>
<g >
<title>[unknown]  (4 samples, 0.24%)</title><rect x="960.4" y="1333" width="2.8" height="15.0" fill="rgb(232,5,35)" rx="2" ry="2" />
<text  x="963.38" y="1343.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (6 samples, 0.35%)</title><rect x="75.2" y="949" width="4.2" height="15.0" fill="rgb(227,176,10)" rx="2" ry="2" />
<text  x="78.21" y="959.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="938.9" y="933" width="0.7" height="15.0" fill="rgb(206,114,46)" rx="2" ry="2" />
<text  x="941.88" y="943.5" ></text>
</g>
<g >
<title>pagevec_lookup_entries (6 samples, 0.35%)</title><rect x="189.0" y="805" width="4.1" height="15.0" fill="rgb(221,39,38)" rx="2" ry="2" />
<text  x="191.98" y="815.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="1000.6" y="133" width="0.7" height="15.0" fill="rgb(245,110,41)" rx="2" ry="2" />
<text  x="1003.62" y="143.5" ></text>
</g>
<g >
<title>poll_freewait (1 samples, 0.06%)</title><rect x="71.0" y="1189" width="0.7" height="15.0" fill="rgb(224,127,4)" rx="2" ry="2" />
<text  x="74.05" y="1199.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.06%)</title><rect x="366.6" y="1125" width="0.7" height="15.0" fill="rgb(210,71,18)" rx="2" ry="2" />
<text  x="369.57" y="1135.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (6 samples, 0.35%)</title><rect x="996.5" y="1157" width="4.1" height="15.0" fill="rgb(213,214,29)" rx="2" ry="2" />
<text  x="999.46" y="1167.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (7 samples, 0.41%)</title><rect x="995.8" y="1221" width="4.8" height="15.0" fill="rgb(218,63,21)" rx="2" ry="2" />
<text  x="998.76" y="1231.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (3 samples, 0.18%)</title><rect x="538.6" y="885" width="2.1" height="15.0" fill="rgb(219,55,52)" rx="2" ry="2" />
<text  x="541.61" y="895.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.06%)</title><rect x="1156.7" y="1205" width="0.7" height="15.0" fill="rgb(225,159,38)" rx="2" ry="2" />
<text  x="1159.70" y="1215.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (2 samples, 0.12%)</title><rect x="159.1" y="1029" width="1.4" height="15.0" fill="rgb(223,50,6)" rx="2" ry="2" />
<text  x="162.15" y="1039.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.06%)</title><rect x="1183.1" y="1189" width="0.7" height="15.0" fill="rgb(218,3,44)" rx="2" ry="2" />
<text  x="1186.06" y="1199.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once_force (2 samples, 0.12%)</title><rect x="1000.6" y="1141" width="1.4" height="15.0" fill="rgb(248,100,8)" rx="2" ry="2" />
<text  x="1003.62" y="1151.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_enum_map::{{closure}} (1 samples, 0.06%)</title><rect x="1001.3" y="533" width="0.7" height="15.0" fill="rgb(219,195,39)" rx="2" ry="2" />
<text  x="1004.31" y="543.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.06%)</title><rect x="234.8" y="1173" width="0.7" height="15.0" fill="rgb(254,0,30)" rx="2" ry="2" />
<text  x="237.76" y="1183.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.06%)</title><rect x="240.3" y="1157" width="0.7" height="15.0" fill="rgb(242,189,11)" rx="2" ry="2" />
<text  x="243.31" y="1167.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.06%)</title><rect x="238.9" y="1109" width="0.7" height="15.0" fill="rgb(213,154,19)" rx="2" ry="2" />
<text  x="241.92" y="1119.5" ></text>
</g>
<g >
<title>ptep_set_access_flags (1 samples, 0.06%)</title><rect x="604.5" y="1061" width="0.7" height="15.0" fill="rgb(231,165,52)" rx="2" ry="2" />
<text  x="607.51" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (1 samples, 0.06%)</title><rect x="1000.6" y="373" width="0.7" height="15.0" fill="rgb(221,27,1)" rx="2" ry="2" />
<text  x="1003.62" y="383.5" ></text>
</g>
<g >
<title>Process0Operands (1 samples, 0.06%)</title><rect x="166.8" y="1141" width="0.7" height="15.0" fill="rgb(211,92,39)" rx="2" ry="2" />
<text  x="169.78" y="1151.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (1 samples, 0.06%)</title><rect x="938.9" y="821" width="0.7" height="15.0" fill="rgb(235,170,18)" rx="2" ry="2" />
<text  x="941.88" y="831.5" ></text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.06%)</title><rect x="71.7" y="1109" width="0.7" height="15.0" fill="rgb(208,68,40)" rx="2" ry="2" />
<text  x="74.74" y="1119.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.12%)</title><rect x="1000.6" y="853" width="1.4" height="15.0" fill="rgb(235,17,2)" rx="2" ry="2" />
<text  x="1003.62" y="863.5" ></text>
</g>
<g >
<title>set_page_dirty (6 samples, 0.35%)</title><rect x="592.7" y="1013" width="4.2" height="15.0" fill="rgb(225,83,29)" rx="2" ry="2" />
<text  x="595.72" y="1023.5" ></text>
</g>
<g >
<title>vm_normal_page (1 samples, 0.06%)</title><rect x="130.7" y="933" width="0.7" height="15.0" fill="rgb(224,208,32)" rx="2" ry="2" />
<text  x="133.71" y="943.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (1 samples, 0.06%)</title><rect x="83.5" y="869" width="0.7" height="15.0" fill="rgb(233,189,36)" rx="2" ry="2" />
<text  x="86.53" y="879.5" ></text>
</g>
<g >
<title>copy_page_from_iter_iovec (1 samples, 0.06%)</title><rect x="963.2" y="1157" width="0.7" height="15.0" fill="rgb(226,36,5)" rx="2" ry="2" />
<text  x="966.16" y="1167.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.06%)</title><rect x="71.7" y="1253" width="0.7" height="15.0" fill="rgb(243,163,0)" rx="2" ry="2" />
<text  x="74.74" y="1263.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (3 samples, 0.18%)</title><rect x="238.2" y="1205" width="2.1" height="15.0" fill="rgb(237,151,8)" rx="2" ry="2" />
<text  x="241.23" y="1215.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (2 samples, 0.12%)</title><rect x="1160.9" y="1205" width="1.4" height="15.0" fill="rgb(229,211,22)" rx="2" ry="2" />
<text  x="1163.86" y="1215.5" ></text>
</g>
<g >
<title>create_empty_buffers (28 samples, 1.65%)</title><rect x="528.9" y="949" width="19.4" height="15.0" fill="rgb(253,83,46)" rx="2" ry="2" />
<text  x="531.89" y="959.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (2 samples, 0.12%)</title><rect x="963.2" y="1205" width="1.3" height="15.0" fill="rgb(232,172,20)" rx="2" ry="2" />
<text  x="966.16" y="1215.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.06%)</title><rect x="601.7" y="1029" width="0.7" height="15.0" fill="rgb(238,83,40)" rx="2" ry="2" />
<text  x="604.73" y="1039.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (1 samples, 0.06%)</title><rect x="87.0" y="1301" width="0.7" height="15.0" fill="rgb(220,158,48)" rx="2" ry="2" />
<text  x="90.00" y="1311.5" ></text>
</g>
<g >
<title>fdarray__poll (7 samples, 0.41%)</title><rect x="66.9" y="1285" width="4.8" height="15.0" fill="rgb(241,222,51)" rx="2" ry="2" />
<text  x="69.88" y="1295.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.06%)</title><rect x="995.8" y="1029" width="0.7" height="15.0" fill="rgb(237,0,38)" rx="2" ry="2" />
<text  x="998.76" y="1039.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="656.5" y="1189" width="0.7" height="15.0" fill="rgb(214,57,27)" rx="2" ry="2" />
<text  x="659.54" y="1199.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.06%)</title><rect x="1000.6" y="469" width="0.7" height="15.0" fill="rgb(210,208,54)" rx="2" ry="2" />
<text  x="1003.62" y="479.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (18 samples, 1.06%)</title><rect x="564.3" y="965" width="12.5" height="15.0" fill="rgb(209,179,35)" rx="2" ry="2" />
<text  x="567.27" y="975.5" ></text>
</g>
<g >
<title>__es_remove_extent (1 samples, 0.06%)</title><rect x="555.9" y="917" width="0.7" height="15.0" fill="rgb(220,133,19)" rx="2" ry="2" />
<text  x="558.95" y="927.5" ></text>
</g>
<g >
<title>iput_final (94 samples, 5.53%)</title><rect x="168.2" y="885" width="65.2" height="15.0" fill="rgb(233,46,19)" rx="2" ry="2" />
<text  x="171.17" y="895.5" >iput_fi..</text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (1 samples, 0.06%)</title><rect x="1072.1" y="933" width="0.7" height="15.0" fill="rgb(223,4,29)" rx="2" ry="2" />
<text  x="1075.07" y="943.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.06%)</title><rect x="235.5" y="1189" width="0.6" height="15.0" fill="rgb(225,186,41)" rx="2" ry="2" />
<text  x="238.46" y="1199.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.06%)</title><rect x="10.0" y="1061" width="0.7" height="15.0" fill="rgb(251,91,20)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (23 samples, 1.35%)</title><rect x="548.3" y="965" width="16.0" height="15.0" fill="rgb(242,108,34)" rx="2" ry="2" />
<text  x="551.32" y="975.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.06%)</title><rect x="1078.3" y="1285" width="0.7" height="15.0" fill="rgb(235,95,15)" rx="2" ry="2" />
<text  x="1081.31" y="1295.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.06%)</title><rect x="92.6" y="949" width="0.6" height="15.0" fill="rgb(219,3,40)" rx="2" ry="2" />
<text  x="95.55" y="959.5" ></text>
</g>
<g >
<title>PageHuge (1 samples, 0.06%)</title><rect x="451.2" y="917" width="0.7" height="15.0" fill="rgb(252,188,6)" rx="2" ry="2" />
<text  x="454.20" y="927.5" ></text>
</g>
<g >
<title>__schedule (18 samples, 1.06%)</title><rect x="1172.0" y="1253" width="12.5" height="15.0" fill="rgb(238,130,47)" rx="2" ry="2" />
<text  x="1174.96" y="1263.5" ></text>
</g>
<g >
<title>NaClXMutexLock (1 samples, 0.06%)</title><rect x="91.2" y="1285" width="0.7" height="15.0" fill="rgb(239,35,30)" rx="2" ry="2" />
<text  x="94.16" y="1295.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.06%)</title><rect x="93.2" y="949" width="0.7" height="15.0" fill="rgb(247,177,34)" rx="2" ry="2" />
<text  x="96.25" y="959.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.06%)</title><rect x="87.7" y="1285" width="0.7" height="15.0" fill="rgb(241,72,34)" rx="2" ry="2" />
<text  x="90.70" y="1295.5" ></text>
</g>
<g >
<title>std::lazy::SyncLazy&lt;T,F&gt;::force (2 samples, 0.12%)</title><rect x="1000.6" y="1205" width="1.4" height="15.0" fill="rgb(241,205,0)" rx="2" ry="2" />
<text  x="1003.62" y="1215.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (1 samples, 0.06%)</title><rect x="234.1" y="1269" width="0.7" height="15.0" fill="rgb(224,58,3)" rx="2" ry="2" />
<text  x="237.07" y="1279.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.06%)</title><rect x="1185.1" y="1269" width="0.7" height="15.0" fill="rgb(237,128,44)" rx="2" ry="2" />
<text  x="1188.14" y="1279.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.06%)</title><rect x="89.1" y="1237" width="0.7" height="15.0" fill="rgb(213,160,8)" rx="2" ry="2" />
<text  x="92.08" y="1247.5" ></text>
</g>
<g >
<title>llist_add_batch (2 samples, 0.12%)</title><rect x="1180.3" y="1157" width="1.4" height="15.0" fill="rgb(254,201,7)" rx="2" ry="2" />
<text  x="1183.29" y="1167.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.06%)</title><rect x="490.0" y="869" width="0.7" height="15.0" fill="rgb(238,16,0)" rx="2" ry="2" />
<text  x="493.05" y="879.5" ></text>
</g>
<g >
<title>run_rebalance_domains (6 samples, 0.35%)</title><rect x="1085.2" y="1125" width="4.2" height="15.0" fill="rgb(251,101,39)" rx="2" ry="2" />
<text  x="1088.25" y="1135.5" ></text>
</g>
<g >
<title>filemap_fault (151 samples, 8.88%)</title><rect x="410.3" y="997" width="104.7" height="15.0" fill="rgb(248,9,12)" rx="2" ry="2" />
<text  x="413.27" y="1007.5" >filemap_fault</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.12%)</title><rect x="1164.3" y="1157" width="1.4" height="15.0" fill="rgb(226,225,18)" rx="2" ry="2" />
<text  x="1167.33" y="1167.5" ></text>
</g>
<g >
<title>task_work_run (2 samples, 0.12%)</title><rect x="1072.1" y="1253" width="1.4" height="15.0" fill="rgb(233,27,27)" rx="2" ry="2" />
<text  x="1075.07" y="1263.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.06%)</title><rect x="1001.3" y="469" width="0.7" height="15.0" fill="rgb(244,207,23)" rx="2" ry="2" />
<text  x="1004.31" y="479.5" ></text>
</g>
<g >
<title>page_mapping (2 samples, 0.12%)</title><rect x="579.5" y="981" width="1.4" height="15.0" fill="rgb(248,28,0)" rx="2" ry="2" />
<text  x="582.54" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="994.4" y="1317" width="0.7" height="15.0" fill="rgb(232,35,46)" rx="2" ry="2" />
<text  x="997.37" y="1327.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (94 samples, 5.53%)</title><rect x="168.2" y="837" width="65.2" height="15.0" fill="rgb(207,40,8)" rx="2" ry="2" />
<text  x="171.17" y="847.5" >truncat..</text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.06%)</title><rect x="1000.6" y="229" width="0.7" height="15.0" fill="rgb(245,62,46)" rx="2" ry="2" />
<text  x="1003.62" y="239.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.12%)</title><rect x="88.4" y="1269" width="1.4" height="15.0" fill="rgb(231,50,35)" rx="2" ry="2" />
<text  x="91.39" y="1279.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.06%)</title><rect x="1089.4" y="997" width="0.7" height="15.0" fill="rgb(212,208,38)" rx="2" ry="2" />
<text  x="1092.41" y="1007.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (1 samples, 0.06%)</title><rect x="133.5" y="1205" width="0.7" height="15.0" fill="rgb(253,19,31)" rx="2" ry="2" />
<text  x="136.48" y="1215.5" ></text>
</g>
<g >
<title>_start (1 samples, 0.06%)</title><rect x="10.0" y="1333" width="0.7" height="15.0" fill="rgb(216,40,21)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" ></text>
</g>
<g >
<title>evict (2 samples, 0.12%)</title><rect x="1072.1" y="1093" width="1.4" height="15.0" fill="rgb(221,167,6)" rx="2" ry="2" />
<text  x="1075.07" y="1103.5" ></text>
</g>
<g >
<title>schedule_idle (19 samples, 1.12%)</title><rect x="1172.0" y="1269" width="13.1" height="15.0" fill="rgb(253,200,5)" rx="2" ry="2" />
<text  x="1174.96" y="1279.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.06%)</title><rect x="1189.3" y="1285" width="0.7" height="15.0" fill="rgb(234,224,53)" rx="2" ry="2" />
<text  x="1192.31" y="1295.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="656.5" y="1157" width="0.7" height="15.0" fill="rgb(233,82,32)" rx="2" ry="2" />
<text  x="659.54" y="1167.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_some (2 samples, 0.12%)</title><rect x="938.9" y="1141" width="1.4" height="15.0" fill="rgb(246,35,26)" rx="2" ry="2" />
<text  x="941.88" y="1151.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.12%)</title><rect x="1000.6" y="933" width="1.4" height="15.0" fill="rgb(215,19,44)" rx="2" ry="2" />
<text  x="1003.62" y="943.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.06%)</title><rect x="1081.8" y="1029" width="0.7" height="15.0" fill="rgb(210,41,33)" rx="2" ry="2" />
<text  x="1084.78" y="1039.5" ></text>
</g>
<g >
<title>iput (94 samples, 5.53%)</title><rect x="168.2" y="917" width="65.2" height="15.0" fill="rgb(228,89,23)" rx="2" ry="2" />
<text  x="171.17" y="927.5" >iput</text>
</g>
<g >
<title>NaClValidateImage (4 samples, 0.24%)</title><rect x="164.7" y="1205" width="2.8" height="15.0" fill="rgb(209,184,0)" rx="2" ry="2" />
<text  x="167.70" y="1215.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (3 samples, 0.18%)</title><rect x="158.5" y="1141" width="2.0" height="15.0" fill="rgb(249,193,32)" rx="2" ry="2" />
<text  x="161.45" y="1151.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.06%)</title><rect x="409.6" y="997" width="0.7" height="15.0" fill="rgb(253,102,15)" rx="2" ry="2" />
<text  x="412.58" y="1007.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (2 samples, 0.12%)</title><rect x="963.2" y="1301" width="1.3" height="15.0" fill="rgb(242,65,11)" rx="2" ry="2" />
<text  x="966.16" y="1311.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (4 samples, 0.24%)</title><rect x="686.4" y="1141" width="2.7" height="15.0" fill="rgb(245,103,5)" rx="2" ry="2" />
<text  x="689.37" y="1151.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.06%)</title><rect x="963.9" y="1045" width="0.6" height="15.0" fill="rgb(240,129,30)" rx="2" ry="2" />
<text  x="966.85" y="1055.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::deserialize (1 samples, 0.06%)</title><rect x="1001.3" y="437" width="0.7" height="15.0" fill="rgb(214,48,43)" rx="2" ry="2" />
<text  x="1004.31" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.06%)</title><rect x="939.6" y="933" width="0.7" height="15.0" fill="rgb(253,20,41)" rx="2" ry="2" />
<text  x="942.57" y="943.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1000.6" y="165" width="0.7" height="15.0" fill="rgb(249,126,17)" rx="2" ry="2" />
<text  x="1003.62" y="175.5" ></text>
</g>
<g >
<title>cpuidle_enter (110 samples, 6.47%)</title><rect x="1081.1" y="1253" width="76.3" height="15.0" fill="rgb(234,9,37)" rx="2" ry="2" />
<text  x="1084.09" y="1263.5" >cpuidle_..</text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="606.6" y="1109" width="0.7" height="15.0" fill="rgb(230,81,27)" rx="2" ry="2" />
<text  x="609.59" y="1119.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (1 samples, 0.06%)</title><rect x="133.5" y="1253" width="0.7" height="15.0" fill="rgb(237,187,40)" rx="2" ry="2" />
<text  x="136.48" y="1263.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (2 samples, 0.12%)</title><rect x="963.2" y="1189" width="1.3" height="15.0" fill="rgb(228,221,12)" rx="2" ry="2" />
<text  x="966.16" y="1199.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="995.8" y="1013" width="0.7" height="15.0" fill="rgb(208,139,26)" rx="2" ry="2" />
<text  x="998.76" y="1023.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::VariantAccessMap&lt;T&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (1 samples, 0.06%)</title><rect x="1001.3" y="485" width="0.7" height="15.0" fill="rgb(250,217,12)" rx="2" ry="2" />
<text  x="1004.31" y="495.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.06%)</title><rect x="1081.8" y="1109" width="0.7" height="15.0" fill="rgb(209,146,24)" rx="2" ry="2" />
<text  x="1084.78" y="1119.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (31 samples, 1.82%)</title><rect x="209.1" y="725" width="21.5" height="15.0" fill="rgb(238,104,47)" rx="2" ry="2" />
<text  x="212.09" y="735.5" >j..</text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.06%)</title><rect x="1089.4" y="1109" width="0.7" height="15.0" fill="rgb(212,61,11)" rx="2" ry="2" />
<text  x="1092.41" y="1119.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.18%)</title><rect x="80.1" y="901" width="2.0" height="15.0" fill="rgb(220,28,10)" rx="2" ry="2" />
<text  x="83.06" y="911.5" ></text>
</g>
<g >
<title>lru_cache_add (12 samples, 0.71%)</title><rect x="474.1" y="917" width="8.3" height="15.0" fill="rgb(232,120,14)" rx="2" ry="2" />
<text  x="477.09" y="927.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (2 samples, 0.12%)</title><rect x="363.1" y="1269" width="1.4" height="15.0" fill="rgb(233,208,22)" rx="2" ry="2" />
<text  x="366.10" y="1279.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="939.6" y="869" width="0.7" height="15.0" fill="rgb(205,175,31)" rx="2" ry="2" />
<text  x="942.57" y="879.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.06%)</title><rect x="109.9" y="933" width="0.7" height="15.0" fill="rgb(228,162,4)" rx="2" ry="2" />
<text  x="112.89" y="943.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.18%)</title><rect x="684.3" y="1093" width="2.1" height="15.0" fill="rgb(231,32,0)" rx="2" ry="2" />
<text  x="687.29" y="1103.5" ></text>
</g>
<g >
<title>lind_read (184 samples, 10.82%)</title><rect x="234.8" y="1269" width="127.6" height="15.0" fill="rgb(228,153,17)" rx="2" ry="2" />
<text  x="237.76" y="1279.5" >lind_read</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="1173.4" y="1157" width="0.6" height="15.0" fill="rgb(245,195,27)" rx="2" ry="2" />
<text  x="1176.35" y="1167.5" ></text>
</g>
<g >
<title>iput.part.0 (94 samples, 5.53%)</title><rect x="168.2" y="1061" width="65.2" height="15.0" fill="rgb(218,3,9)" rx="2" ry="2" />
<text  x="171.17" y="1071.5" >iput.pa..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (12 samples, 0.71%)</title><rect x="678.0" y="1125" width="8.4" height="15.0" fill="rgb(252,201,15)" rx="2" ry="2" />
<text  x="681.04" y="1135.5" ></text>
</g>
<g >
<title>psi_avgs_work (1 samples, 0.06%)</title><rect x="1079.0" y="1269" width="0.7" height="15.0" fill="rgb(214,139,47)" rx="2" ry="2" />
<text  x="1082.01" y="1279.5" ></text>
</g>
<g >
<title>timekeeping_update (1 samples, 0.06%)</title><rect x="1082.5" y="1045" width="0.7" height="15.0" fill="rgb(245,158,6)" rx="2" ry="2" />
<text  x="1085.48" y="1055.5" ></text>
</g>
<g >
<title>do_page_cache_ra (5 samples, 0.29%)</title><rect x="411.0" y="965" width="3.4" height="15.0" fill="rgb(226,1,27)" rx="2" ry="2" />
<text  x="413.96" y="975.5" ></text>
</g>
<g >
<title>open_exec (1 samples, 0.06%)</title><rect x="10.7" y="1093" width="0.7" height="15.0" fill="rgb(215,47,46)" rx="2" ry="2" />
<text  x="13.69" y="1103.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="405.4" y="1077" width="0.7" height="15.0" fill="rgb(230,35,22)" rx="2" ry="2" />
<text  x="408.41" y="1087.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (3 samples, 0.18%)</title><rect x="521.3" y="981" width="2.0" height="15.0" fill="rgb(227,119,18)" rx="2" ry="2" />
<text  x="524.26" y="991.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.06%)</title><rect x="1076.9" y="1237" width="0.7" height="15.0" fill="rgb(225,96,38)" rx="2" ry="2" />
<text  x="1079.93" y="1247.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.06%)</title><rect x="1179.6" y="1157" width="0.7" height="15.0" fill="rgb(239,63,36)" rx="2" ry="2" />
<text  x="1182.59" y="1167.5" ></text>
</g>
<g >
<title>ring_buffer_read_head (1 samples, 0.06%)</title><rect x="72.4" y="1221" width="0.7" height="15.0" fill="rgb(227,81,20)" rx="2" ry="2" />
<text  x="75.43" y="1231.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1000.6" y="181" width="0.7" height="15.0" fill="rgb(235,5,44)" rx="2" ry="2" />
<text  x="1003.62" y="191.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.06%)</title><rect x="1173.4" y="1061" width="0.6" height="15.0" fill="rgb(214,167,34)" rx="2" ry="2" />
<text  x="1176.35" y="1071.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.06%)</title><rect x="938.9" y="853" width="0.7" height="15.0" fill="rgb(207,174,3)" rx="2" ry="2" />
<text  x="941.88" y="863.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="127.2" y="901" width="0.7" height="15.0" fill="rgb(240,115,33)" rx="2" ry="2" />
<text  x="130.24" y="911.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (3 samples, 0.18%)</title><rect x="131.4" y="1253" width="2.1" height="15.0" fill="rgb(209,196,48)" rx="2" ry="2" />
<text  x="134.40" y="1263.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (2 samples, 0.12%)</title><rect x="238.2" y="1157" width="1.4" height="15.0" fill="rgb(216,211,20)" rx="2" ry="2" />
<text  x="241.23" y="1167.5" ></text>
</g>
<g >
<title>ext4_filemap_fault (152 samples, 8.94%)</title><rect x="409.6" y="1013" width="105.4" height="15.0" fill="rgb(243,60,15)" rx="2" ry="2" />
<text  x="412.58" y="1023.5" >ext4_filemap..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="1076.9" y="1317" width="0.7" height="15.0" fill="rgb(236,171,27)" rx="2" ry="2" />
<text  x="1079.93" y="1327.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.06%)</title><rect x="1069.3" y="1285" width="0.7" height="15.0" fill="rgb(218,119,42)" rx="2" ry="2" />
<text  x="1072.29" y="1295.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (2 samples, 0.12%)</title><rect x="365.9" y="1157" width="1.4" height="15.0" fill="rgb(246,65,9)" rx="2" ry="2" />
<text  x="368.87" y="1167.5" ></text>
</g>
<g >
<title>page_add_file_rmap (2 samples, 0.12%)</title><rect x="599.0" y="997" width="1.3" height="15.0" fill="rgb(223,167,27)" rx="2" ry="2" />
<text  x="601.96" y="1007.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::with_capacity_and_hasher (1 samples, 0.06%)</title><rect x="1000.6" y="661" width="0.7" height="15.0" fill="rgb(252,75,53)" rx="2" ry="2" />
<text  x="1003.62" y="671.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.06%)</title><rect x="235.5" y="1173" width="0.6" height="15.0" fill="rgb(236,121,22)" rx="2" ry="2" />
<text  x="238.46" y="1183.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="628.1" y="1157" width="2.8" height="15.0" fill="rgb(233,96,37)" rx="2" ry="2" />
<text  x="631.10" y="1167.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize (2 samples, 0.12%)</title><rect x="1000.6" y="965" width="1.4" height="15.0" fill="rgb(236,114,27)" rx="2" ry="2" />
<text  x="1003.62" y="975.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.06%)</title><rect x="10.0" y="1029" width="0.7" height="15.0" fill="rgb(222,6,5)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>NaClSysOpenDecoder (94 samples, 5.53%)</title><rect x="168.2" y="1301" width="65.2" height="15.0" fill="rgb(219,112,34)" rx="2" ry="2" />
<text  x="171.17" y="1311.5" >NaClSys..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::log_metadata (2 samples, 0.12%)</title><rect x="938.9" y="1221" width="1.4" height="15.0" fill="rgb(220,226,39)" rx="2" ry="2" />
<text  x="941.88" y="1231.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.06%)</title><rect x="656.5" y="1141" width="0.7" height="15.0" fill="rgb(240,21,7)" rx="2" ry="2" />
<text  x="659.54" y="1151.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19 samples, 1.12%)</title><rect x="73.8" y="1173" width="13.2" height="15.0" fill="rgb(229,129,2)" rx="2" ry="2" />
<text  x="76.82" y="1183.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (94 samples, 5.53%)</title><rect x="168.2" y="1173" width="65.2" height="15.0" fill="rgb(247,195,8)" rx="2" ry="2" />
<text  x="171.17" y="1183.5" >std::sy..</text>
</g>
<g >
<title>record__write (20 samples, 1.18%)</title><rect x="73.1" y="1221" width="13.9" height="15.0" fill="rgb(210,70,19)" rx="2" ry="2" />
<text  x="76.13" y="1231.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (4 samples, 0.24%)</title><rect x="164.7" y="1157" width="2.8" height="15.0" fill="rgb(229,97,39)" rx="2" ry="2" />
<text  x="167.70" y="1167.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.06%)</title><rect x="995.8" y="965" width="0.7" height="15.0" fill="rgb(252,7,2)" rx="2" ry="2" />
<text  x="998.76" y="975.5" ></text>
</g>
<g >
<title>xas_clear_mark (1 samples, 0.06%)</title><rect x="180.0" y="773" width="0.7" height="15.0" fill="rgb(244,138,5)" rx="2" ry="2" />
<text  x="182.96" y="783.5" ></text>
</g>
<g >
<title>__GI_execve (1 samples, 0.06%)</title><rect x="10.7" y="1253" width="0.7" height="15.0" fill="rgb(245,104,43)" rx="2" ry="2" />
<text  x="13.69" y="1263.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.06%)</title><rect x="1078.3" y="1269" width="0.7" height="15.0" fill="rgb(243,142,54)" rx="2" ry="2" />
<text  x="1081.31" y="1279.5" ></text>
</g>
<g >
<title>NaClSysExecv (9 samples, 0.53%)</title><rect x="158.5" y="1269" width="6.2" height="15.0" fill="rgb(224,38,12)" rx="2" ry="2" />
<text  x="161.45" y="1279.5" ></text>
</g>
<g >
<title>psi_task_switch (1 samples, 0.06%)</title><rect x="1183.1" y="1237" width="0.7" height="15.0" fill="rgb(206,184,8)" rx="2" ry="2" />
<text  x="1186.06" y="1247.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.06%)</title><rect x="1081.8" y="1045" width="0.7" height="15.0" fill="rgb(210,208,47)" rx="2" ry="2" />
<text  x="1084.78" y="1055.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.06%)</title><rect x="89.1" y="1029" width="0.7" height="15.0" fill="rgb(253,48,13)" rx="2" ry="2" />
<text  x="92.08" y="1039.5" ></text>
</g>
<g >
<title>rl_callback_handler_remove (1 samples, 0.06%)</title><rect x="10.0" y="1157" width="0.7" height="15.0" fill="rgb(205,160,35)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" ></text>
</g>
<g >
<title>try_to_release_page (31 samples, 1.82%)</title><rect x="209.1" y="757" width="21.5" height="15.0" fill="rgb(211,191,24)" rx="2" ry="2" />
<text  x="212.09" y="767.5" >t..</text>
</g>
<g >
<title>NaClSysFork (4 samples, 0.24%)</title><rect x="164.7" y="1285" width="2.8" height="15.0" fill="rgb(249,48,33)" rx="2" ry="2" />
<text  x="167.70" y="1295.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.06%)</title><rect x="480.3" y="885" width="0.7" height="15.0" fill="rgb(216,163,49)" rx="2" ry="2" />
<text  x="483.34" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (79 samples, 4.64%)</title><rect x="12.1" y="1205" width="54.8" height="15.0" fill="rgb(213,67,20)" rx="2" ry="2" />
<text  x="15.08" y="1215.5" >do_sy..</text>
</g>
<g >
<title>__ext4_get_inode_loc (1 samples, 0.06%)</title><rect x="83.5" y="853" width="0.7" height="15.0" fill="rgb(222,219,15)" rx="2" ry="2" />
<text  x="86.53" y="863.5" ></text>
</g>
<g >
<title>perf_mmap__push (21 samples, 1.23%)</title><rect x="72.4" y="1253" width="14.6" height="15.0" fill="rgb(236,171,17)" rx="2" ry="2" />
<text  x="75.43" y="1263.5" ></text>
</g>
<g >
<title>xas_find (1 samples, 0.06%)</title><rect x="320.1" y="1013" width="0.7" height="15.0" fill="rgb(217,74,21)" rx="2" ry="2" />
<text  x="323.09" y="1023.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.06%)</title><rect x="1081.8" y="1093" width="0.7" height="15.0" fill="rgb(238,67,6)" rx="2" ry="2" />
<text  x="1084.78" y="1103.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.06%)</title><rect x="89.1" y="1109" width="0.7" height="15.0" fill="rgb(210,30,51)" rx="2" ry="2" />
<text  x="92.08" y="1119.5" ></text>
</g>
<g >
<title>CopyBundleHeads (2 samples, 0.12%)</title><rect x="131.4" y="1237" width="1.4" height="15.0" fill="rgb(245,29,2)" rx="2" ry="2" />
<text  x="134.40" y="1247.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (4 samples, 0.24%)</title><rect x="164.7" y="1221" width="2.8" height="15.0" fill="rgb(232,64,49)" rx="2" ry="2" />
<text  x="167.70" y="1231.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.06%)</title><rect x="239.6" y="1045" width="0.7" height="15.0" fill="rgb(213,94,21)" rx="2" ry="2" />
<text  x="242.62" y="1055.5" ></text>
</g>
<g >
<title>pte_alloc_one_map (2 samples, 0.12%)</title><rect x="600.3" y="997" width="1.4" height="15.0" fill="rgb(234,99,50)" rx="2" ry="2" />
<text  x="603.35" y="1007.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.06%)</title><rect x="1001.3" y="53" width="0.7" height="15.0" fill="rgb(220,58,38)" rx="2" ry="2" />
<text  x="1004.31" y="63.5" ></text>
</g>
<g >
<title>NaClValidateImage (6 samples, 0.35%)</title><rect x="996.5" y="1205" width="4.1" height="15.0" fill="rgb(231,81,54)" rx="2" ry="2" />
<text  x="999.46" y="1215.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (4 samples, 0.24%)</title><rect x="316.6" y="965" width="2.8" height="15.0" fill="rgb(212,49,23)" rx="2" ry="2" />
<text  x="319.62" y="975.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.06%)</title><rect x="963.9" y="1077" width="0.6" height="15.0" fill="rgb(215,73,37)" rx="2" ry="2" />
<text  x="966.85" y="1087.5" ></text>
</g>
<g >
<title>NaClValidateCode (4 samples, 0.24%)</title><rect x="164.7" y="1189" width="2.8" height="15.0" fill="rgb(239,45,0)" rx="2" ry="2" />
<text  x="167.70" y="1199.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_page (1 samples, 0.06%)</title><rect x="546.9" y="917" width="0.7" height="15.0" fill="rgb(245,197,8)" rx="2" ry="2" />
<text  x="549.93" y="927.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.06%)</title><rect x="89.1" y="1173" width="0.7" height="15.0" fill="rgb(212,130,51)" rx="2" ry="2" />
<text  x="92.08" y="1183.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (2 samples, 0.12%)</title><rect x="238.2" y="1141" width="1.4" height="15.0" fill="rgb(240,9,19)" rx="2" ry="2" />
<text  x="241.23" y="1151.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (3 samples, 0.18%)</title><rect x="1002.0" y="1301" width="2.1" height="15.0" fill="rgb(219,90,48)" rx="2" ry="2" />
<text  x="1005.00" y="1311.5" ></text>
</g>
<g >
<title>NaClSysRead (185 samples, 10.88%)</title><rect x="234.1" y="1285" width="128.3" height="15.0" fill="rgb(228,156,6)" rx="2" ry="2" />
<text  x="237.07" y="1295.5" >NaClSysRead</text>
</g>
<g >
<title>error_return (6 samples, 0.35%)</title><rect x="614.9" y="1157" width="4.2" height="15.0" fill="rgb(205,102,47)" rx="2" ry="2" />
<text  x="617.91" y="1167.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_inner (2 samples, 0.12%)</title><rect x="1000.6" y="1125" width="1.4" height="15.0" fill="rgb(216,61,32)" rx="2" ry="2" />
<text  x="1003.62" y="1135.5" ></text>
</g>
<g >
<title>iput_final (94 samples, 5.53%)</title><rect x="168.2" y="1045" width="65.2" height="15.0" fill="rgb(243,102,33)" rx="2" ry="2" />
<text  x="171.17" y="1055.5" >iput_fi..</text>
</g>
<g >
<title>kthread (3 samples, 0.18%)</title><rect x="1077.6" y="1317" width="2.1" height="15.0" fill="rgb(243,49,9)" rx="2" ry="2" />
<text  x="1080.62" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (2 samples, 0.12%)</title><rect x="963.2" y="1237" width="1.3" height="15.0" fill="rgb(240,138,43)" rx="2" ry="2" />
<text  x="966.16" y="1247.5" ></text>
</g>
<g >
<title>ext4_releasepage (31 samples, 1.82%)</title><rect x="209.1" y="741" width="21.5" height="15.0" fill="rgb(223,102,32)" rx="2" ry="2" />
<text  x="212.09" y="751.5" >e..</text>
</g>
<g >
<title>____fput (2 samples, 0.12%)</title><rect x="1072.1" y="1237" width="1.4" height="15.0" fill="rgb(217,131,11)" rx="2" ry="2" />
<text  x="1075.07" y="1247.5" ></text>
</g>
<g >
<title>__libc_poll (7 samples, 0.41%)</title><rect x="66.9" y="1269" width="4.8" height="15.0" fill="rgb(240,103,53)" rx="2" ry="2" />
<text  x="69.88" y="1279.5" ></text>
</g>
<g >
<title>do_group_exit (4 samples, 0.24%)</title><rect x="1070.7" y="1285" width="2.8" height="15.0" fill="rgb(242,149,20)" rx="2" ry="2" />
<text  x="1073.68" y="1295.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.06%)</title><rect x="939.6" y="853" width="0.7" height="15.0" fill="rgb(254,65,38)" rx="2" ry="2" />
<text  x="942.57" y="863.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.06%)</title><rect x="1000.6" y="213" width="0.7" height="15.0" fill="rgb(235,51,23)" rx="2" ry="2" />
<text  x="1003.62" y="223.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (1 samples, 0.06%)</title><rect x="1001.3" y="165" width="0.7" height="15.0" fill="rgb(218,101,8)" rx="2" ry="2" />
<text  x="1004.31" y="175.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (10 samples, 0.59%)</title><rect x="443.6" y="837" width="6.9" height="15.0" fill="rgb(227,11,36)" rx="2" ry="2" />
<text  x="446.57" y="847.5" ></text>
</g>
<g >
<title>ext4_readahead (37 samples, 2.18%)</title><rect x="482.4" y="917" width="25.7" height="15.0" fill="rgb(218,71,46)" rx="2" ry="2" />
<text  x="485.42" y="927.5" >e..</text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (4 samples, 0.24%)</title><rect x="164.7" y="1173" width="2.8" height="15.0" fill="rgb(210,156,27)" rx="2" ry="2" />
<text  x="167.70" y="1183.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.06%)</title><rect x="1078.3" y="1253" width="0.7" height="15.0" fill="rgb(243,159,44)" rx="2" ry="2" />
<text  x="1081.31" y="1263.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (1 samples, 0.06%)</title><rect x="1001.3" y="549" width="0.7" height="15.0" fill="rgb(209,106,9)" rx="2" ry="2" />
<text  x="1004.31" y="559.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.06%)</title><rect x="89.1" y="1093" width="0.7" height="15.0" fill="rgb(232,62,51)" rx="2" ry="2" />
<text  x="92.08" y="1103.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="630.9" y="1093" width="2.7" height="15.0" fill="rgb(216,26,31)" rx="2" ry="2" />
<text  x="633.87" y="1103.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.06%)</title><rect x="229.9" y="677" width="0.7" height="15.0" fill="rgb(226,220,35)" rx="2" ry="2" />
<text  x="232.91" y="687.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_key_value (1 samples, 0.06%)</title><rect x="364.5" y="1205" width="0.7" height="15.0" fill="rgb(207,44,45)" rx="2" ry="2" />
<text  x="367.49" y="1215.5" ></text>
</g>
<g >
<title>newidle_balance (11 samples, 0.65%)</title><rect x="1174.0" y="1221" width="7.7" height="15.0" fill="rgb(232,181,2)" rx="2" ry="2" />
<text  x="1177.04" y="1231.5" ></text>
</g>
<g >
<title>NaClHostDescPRead (1 samples, 0.06%)</title><rect x="995.8" y="1173" width="0.7" height="15.0" fill="rgb(251,151,7)" rx="2" ry="2" />
<text  x="998.76" y="1183.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.06%)</title><rect x="1001.3" y="613" width="0.7" height="15.0" fill="rgb(253,153,29)" rx="2" ry="2" />
<text  x="1004.31" y="623.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.06%)</title><rect x="1173.4" y="1141" width="0.6" height="15.0" fill="rgb(220,98,49)" rx="2" ry="2" />
<text  x="1176.35" y="1151.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.06%)</title><rect x="1089.4" y="981" width="0.7" height="15.0" fill="rgb(224,181,45)" rx="2" ry="2" />
<text  x="1092.41" y="991.5" ></text>
</g>
<g >
<title>read (1 samples, 0.06%)</title><rect x="71.7" y="1237" width="0.7" height="15.0" fill="rgb(221,222,6)" rx="2" ry="2" />
<text  x="74.74" y="1247.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::FilesystemMetadata::init_fs_metadata (2 samples, 0.12%)</title><rect x="1000.6" y="997" width="1.4" height="15.0" fill="rgb(235,28,33)" rx="2" ry="2" />
<text  x="1003.62" y="1007.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.06%)</title><rect x="1173.4" y="1173" width="0.6" height="15.0" fill="rgb(230,214,37)" rx="2" ry="2" />
<text  x="1176.35" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (45 samples, 2.65%)</title><rect x="963.2" y="1333" width="31.2" height="15.0" fill="rgb(225,204,54)" rx="2" ry="2" />
<text  x="966.16" y="1343.5" >[u..</text>
</g>
<g >
<title>__mod_lruvec_page_state (4 samples, 0.24%)</title><rect x="458.1" y="901" width="2.8" height="15.0" fill="rgb(244,49,3)" rx="2" ry="2" />
<text  x="461.14" y="911.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (8 samples, 0.47%)</title><rect x="461.6" y="901" width="5.6" height="15.0" fill="rgb(248,99,5)" rx="2" ry="2" />
<text  x="464.60" y="911.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="650.3" y="1189" width="0.7" height="15.0" fill="rgb(216,203,44)" rx="2" ry="2" />
<text  x="653.29" y="1199.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="1000.6" y="197" width="0.7" height="15.0" fill="rgb(241,209,30)" rx="2" ry="2" />
<text  x="1003.62" y="207.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (116 samples, 6.82%)</title><rect x="240.3" y="1221" width="80.5" height="15.0" fill="rgb(232,2,38)" rx="2" ry="2" />
<text  x="243.31" y="1231.5" >rustposix..</text>
</g>
<g >
<title>get_obj_cgroup_from_current (1 samples, 0.06%)</title><rect x="76.6" y="853" width="0.7" height="15.0" fill="rgb(216,187,53)" rx="2" ry="2" />
<text  x="79.60" y="863.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (2 samples, 0.12%)</title><rect x="365.9" y="1221" width="1.4" height="15.0" fill="rgb(234,10,6)" rx="2" ry="2" />
<text  x="368.87" y="1231.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (55 samples, 3.23%)</title><rect x="193.1" y="805" width="38.2" height="15.0" fill="rgb(217,138,38)" rx="2" ry="2" />
<text  x="196.14" y="815.5" >tru..</text>
</g>
<g >
<title>do_epoll_pwait.part.0 (1 samples, 0.06%)</title><rect x="1076.9" y="1285" width="0.7" height="15.0" fill="rgb(206,122,11)" rx="2" ry="2" />
<text  x="1079.93" y="1295.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (1 samples, 0.06%)</title><rect x="1001.3" y="181" width="0.7" height="15.0" fill="rgb(223,45,6)" rx="2" ry="2" />
<text  x="1004.31" y="191.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.06%)</title><rect x="1183.1" y="1221" width="0.7" height="15.0" fill="rgb(219,45,3)" rx="2" ry="2" />
<text  x="1186.06" y="1231.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (186 samples, 10.93%)</title><rect x="233.4" y="1301" width="129.0" height="15.0" fill="rgb(239,70,51)" rx="2" ry="2" />
<text  x="236.37" y="1311.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="963.9" y="1125" width="0.6" height="15.0" fill="rgb(243,43,20)" rx="2" ry="2" />
<text  x="966.85" y="1135.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="938.2" y="1109" width="0.7" height="15.0" fill="rgb(246,73,6)" rx="2" ry="2" />
<text  x="941.18" y="1119.5" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 0.06%)</title><rect x="71.7" y="1093" width="0.7" height="15.0" fill="rgb(206,161,6)" rx="2" ry="2" />
<text  x="74.74" y="1103.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.06%)</title><rect x="491.4" y="901" width="0.7" height="15.0" fill="rgb(236,164,26)" rx="2" ry="2" />
<text  x="494.43" y="911.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (1 samples, 0.06%)</title><rect x="78.7" y="933" width="0.7" height="15.0" fill="rgb(251,160,11)" rx="2" ry="2" />
<text  x="81.68" y="943.5" ></text>
</g>
<g >
<title>__do_sys_clone (1 samples, 0.06%)</title><rect x="994.4" y="1269" width="0.7" height="15.0" fill="rgb(246,111,41)" rx="2" ry="2" />
<text  x="997.37" y="1279.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.06%)</title><rect x="1167.1" y="1221" width="0.7" height="15.0" fill="rgb(241,168,42)" rx="2" ry="2" />
<text  x="1170.11" y="1231.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="133.5" y="1109" width="0.7" height="15.0" fill="rgb(221,106,15)" rx="2" ry="2" />
<text  x="136.48" y="1119.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 3.76%)</title><rect x="21.1" y="965" width="44.4" height="15.0" fill="rgb(240,194,52)" rx="2" ry="2" />
<text  x="24.10" y="975.5" >nati..</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (6 samples, 0.35%)</title><rect x="757.1" y="1157" width="4.2" height="15.0" fill="rgb(207,177,49)" rx="2" ry="2" />
<text  x="760.13" y="1167.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (332 samples, 19.52%)</title><rect x="382.5" y="1157" width="230.3" height="15.0" fill="rgb(235,65,15)" rx="2" ry="2" />
<text  x="385.52" y="1167.5" >asm_exc_page_fault</text>
</g>
<g >
<title>refill_obj_stock (1 samples, 0.06%)</title><rect x="1070.7" y="1141" width="0.7" height="15.0" fill="rgb(217,137,20)" rx="2" ry="2" />
<text  x="1073.68" y="1151.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (170 samples, 9.99%)</title><rect x="657.2" y="1189" width="118.0" height="15.0" fill="rgb(208,118,31)" rx="2" ry="2" />
<text  x="660.23" y="1199.5" >ringbuf::produ..</text>
</g>
<g >
<title>__softirqentry_text_start (8 samples, 0.47%)</title><rect x="1084.6" y="1141" width="5.5" height="15.0" fill="rgb(215,13,31)" rx="2" ry="2" />
<text  x="1087.56" y="1151.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.06%)</title><rect x="239.6" y="1109" width="0.7" height="15.0" fill="rgb(212,64,13)" rx="2" ry="2" />
<text  x="242.62" y="1119.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="235.5" y="1141" width="0.6" height="15.0" fill="rgb(240,139,1)" rx="2" ry="2" />
<text  x="238.46" y="1151.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.06%)</title><rect x="1001.3" y="293" width="0.7" height="15.0" fill="rgb(213,181,17)" rx="2" ry="2" />
<text  x="1004.31" y="303.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.06%)</title><rect x="204.2" y="773" width="0.7" height="15.0" fill="rgb(211,205,30)" rx="2" ry="2" />
<text  x="207.24" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::truncate::{{closure}} (4 samples, 0.24%)</title><rect x="630.9" y="1141" width="2.7" height="15.0" fill="rgb(234,10,13)" rx="2" ry="2" />
<text  x="633.87" y="1151.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (235 samples, 13.82%)</title><rect x="775.9" y="1189" width="163.0" height="15.0" fill="rgb(226,37,14)" rx="2" ry="2" />
<text  x="778.86" y="1199.5" >ringbuf::ring_buffer:..</text>
</g>
<g >
<title>pmd_val (1 samples, 0.06%)</title><rect x="605.9" y="1093" width="0.7" height="15.0" fill="rgb(253,225,32)" rx="2" ry="2" />
<text  x="608.90" y="1103.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.06%)</title><rect x="239.6" y="1077" width="0.7" height="15.0" fill="rgb(245,113,11)" rx="2" ry="2" />
<text  x="242.62" y="1087.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.06%)</title><rect x="581.6" y="997" width="0.7" height="15.0" fill="rgb(214,184,27)" rx="2" ry="2" />
<text  x="584.62" y="1007.5" ></text>
</g>
<g >
<title>_perf_ioctl (76 samples, 4.47%)</title><rect x="12.8" y="1157" width="52.7" height="15.0" fill="rgb(220,70,4)" rx="2" ry="2" />
<text  x="15.77" y="1167.5" >_perf..</text>
</g>
<g >
<title>__do_munmap (57 samples, 3.35%)</title><rect x="91.9" y="1045" width="39.5" height="15.0" fill="rgb(238,128,49)" rx="2" ry="2" />
<text  x="94.86" y="1055.5" >__d..</text>
</g>
<g >
<title>do_execveat_common (1 samples, 0.06%)</title><rect x="10.7" y="1189" width="0.7" height="15.0" fill="rgb(209,20,24)" rx="2" ry="2" />
<text  x="13.69" y="1199.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (1 samples, 0.06%)</title><rect x="1000.6" y="405" width="0.7" height="15.0" fill="rgb(206,111,38)" rx="2" ry="2" />
<text  x="1003.62" y="415.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (135 samples, 7.94%)</title><rect x="415.8" y="949" width="93.7" height="15.0" fill="rgb(249,135,26)" rx="2" ry="2" />
<text  x="418.82" y="959.5" >page_cache_..</text>
</g>
<g >
<title>refill_obj_stock (1 samples, 0.06%)</title><rect x="229.2" y="645" width="0.7" height="15.0" fill="rgb(253,38,22)" rx="2" ry="2" />
<text  x="232.21" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (9 samples, 0.53%)</title><rect x="932.6" y="1157" width="6.3" height="15.0" fill="rgb(238,153,28)" rx="2" ry="2" />
<text  x="935.63" y="1167.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.06%)</title><rect x="656.5" y="1125" width="0.7" height="15.0" fill="rgb(226,206,24)" rx="2" ry="2" />
<text  x="659.54" y="1135.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_init (2 samples, 0.12%)</title><rect x="1000.6" y="1189" width="1.4" height="15.0" fill="rgb(220,52,42)" rx="2" ry="2" />
<text  x="1003.62" y="1199.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.06%)</title><rect x="1069.3" y="1317" width="0.7" height="15.0" fill="rgb(233,12,26)" rx="2" ry="2" />
<text  x="1072.29" y="1327.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (2 samples, 0.12%)</title><rect x="1002.7" y="1253" width="1.4" height="15.0" fill="rgb(234,199,36)" rx="2" ry="2" />
<text  x="1005.70" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (94 samples, 5.53%)</title><rect x="168.2" y="1125" width="65.2" height="15.0" fill="rgb(233,223,27)" rx="2" ry="2" />
<text  x="171.17" y="1135.5" >do_sysc..</text>
</g>
<g >
<title>__mark_inode_dirty (2 samples, 0.12%)</title><rect x="567.7" y="949" width="1.4" height="15.0" fill="rgb(221,25,20)" rx="2" ry="2" />
<text  x="570.74" y="959.5" ></text>
</g>
<g >
<title>NaClValidateCode (6 samples, 0.35%)</title><rect x="996.5" y="1189" width="4.1" height="15.0" fill="rgb(217,173,41)" rx="2" ry="2" />
<text  x="999.46" y="1199.5" ></text>
</g>
<g >
<title>radix_tree_node_rcu_free (1 samples, 0.06%)</title><rect x="1077.6" y="1205" width="0.7" height="15.0" fill="rgb(210,159,31)" rx="2" ry="2" />
<text  x="1080.62" y="1215.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.06%)</title><rect x="322.9" y="1189" width="0.7" height="15.0" fill="rgb(240,158,0)" rx="2" ry="2" />
<text  x="325.86" y="1199.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.06%)</title><rect x="1081.8" y="1061" width="0.7" height="15.0" fill="rgb(233,222,4)" rx="2" ry="2" />
<text  x="1084.78" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 0.06%)</title><rect x="964.5" y="1237" width="0.7" height="15.0" fill="rgb(224,102,17)" rx="2" ry="2" />
<text  x="967.54" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="167.5" y="1125" width="0.7" height="15.0" fill="rgb(225,98,16)" rx="2" ry="2" />
<text  x="170.47" y="1135.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.06%)</title><rect x="633.0" y="901" width="0.6" height="15.0" fill="rgb(218,155,4)" rx="2" ry="2" />
<text  x="635.95" y="911.5" ></text>
</g>
<g >
<title>alloc_pages_current (50 samples, 2.94%)</title><rect x="416.5" y="917" width="34.7" height="15.0" fill="rgb(213,141,26)" rx="2" ry="2" />
<text  x="419.51" y="927.5" >al..</text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.06%)</title><rect x="633.0" y="949" width="0.6" height="15.0" fill="rgb(214,125,5)" rx="2" ry="2" />
<text  x="635.95" y="959.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.06%)</title><rect x="1179.6" y="1141" width="0.7" height="15.0" fill="rgb(232,195,49)" rx="2" ry="2" />
<text  x="1182.59" y="1151.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (376 samples, 22.10%)</title><rect x="367.3" y="1173" width="260.8" height="15.0" fill="rgb(209,139,49)" rx="2" ry="2" />
<text  x="370.26" y="1183.5" >__memcpy_avx_unaligned_erms</text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (6 samples, 0.35%)</title><rect x="541.4" y="885" width="4.1" height="15.0" fill="rgb(241,48,4)" rx="2" ry="2" />
<text  x="544.38" y="895.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.06%)</title><rect x="656.5" y="1093" width="0.7" height="15.0" fill="rgb(229,37,39)" rx="2" ry="2" />
<text  x="659.54" y="1103.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (2 samples, 0.12%)</title><rect x="1000.6" y="885" width="1.4" height="15.0" fill="rgb(212,106,51)" rx="2" ry="2" />
<text  x="1003.62" y="895.5" ></text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.06%)</title><rect x="964.5" y="1205" width="0.7" height="15.0" fill="rgb(234,181,30)" rx="2" ry="2" />
<text  x="967.54" y="1215.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.06%)</title><rect x="1000.6" y="37" width="0.7" height="15.0" fill="rgb(206,104,49)" rx="2" ry="2" />
<text  x="1003.62" y="47.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (1 samples, 0.06%)</title><rect x="364.5" y="1189" width="0.7" height="15.0" fill="rgb(223,83,36)" rx="2" ry="2" />
<text  x="367.49" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="87.0" y="1333" width="2.8" height="15.0" fill="rgb(254,133,16)" rx="2" ry="2" />
<text  x="90.00" y="1343.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.06%)</title><rect x="939.6" y="965" width="0.7" height="15.0" fill="rgb(230,6,52)" rx="2" ry="2" />
<text  x="942.57" y="975.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.06%)</title><rect x="938.9" y="965" width="0.7" height="15.0" fill="rgb(237,227,0)" rx="2" ry="2" />
<text  x="941.88" y="975.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (1,225 samples, 72.02%)</title><rect x="90.5" y="1317" width="849.8" height="15.0" fill="rgb(212,34,30)" rx="2" ry="2" />
<text  x="93.47" y="1327.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::de::Deserialize for dashmap::DashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.12%)</title><rect x="1000.6" y="789" width="1.4" height="15.0" fill="rgb(206,124,46)" rx="2" ry="2" />
<text  x="1003.62" y="799.5" ></text>
</g>
<g >
<title>[[stack]] (1 samples, 0.06%)</title><rect x="11.4" y="1333" width="0.7" height="15.0" fill="rgb(209,150,38)" rx="2" ry="2" />
<text  x="14.39" y="1343.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.06%)</title><rect x="1071.4" y="1189" width="0.7" height="15.0" fill="rgb(228,29,54)" rx="2" ry="2" />
<text  x="1074.38" y="1199.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="995.8" y="981" width="0.7" height="15.0" fill="rgb(209,144,6)" rx="2" ry="2" />
<text  x="998.76" y="991.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (6 samples, 0.35%)</title><rect x="160.5" y="1141" width="4.2" height="15.0" fill="rgb(239,24,14)" rx="2" ry="2" />
<text  x="163.53" y="1151.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.06%)</title><rect x="540.7" y="885" width="0.7" height="15.0" fill="rgb(246,134,49)" rx="2" ry="2" />
<text  x="543.69" y="895.5" ></text>
</g>
<g >
<title>alloc_buffer_head (20 samples, 1.18%)</title><rect x="533.1" y="917" width="13.8" height="15.0" fill="rgb(235,220,6)" rx="2" ry="2" />
<text  x="536.06" y="927.5" ></text>
</g>
<g >
<title>writen (1 samples, 0.06%)</title><rect x="11.4" y="1317" width="0.7" height="15.0" fill="rgb(241,69,25)" rx="2" ry="2" />
<text  x="14.39" y="1327.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.06%)</title><rect x="650.3" y="1141" width="0.7" height="15.0" fill="rgb(219,58,19)" rx="2" ry="2" />
<text  x="653.29" y="1151.5" ></text>
</g>
<g >
<title>free_buffer_head (18 samples, 1.06%)</title><rect x="218.1" y="693" width="12.5" height="15.0" fill="rgb(213,119,9)" rx="2" ry="2" />
<text  x="221.11" y="703.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.06%)</title><rect x="633.0" y="917" width="0.6" height="15.0" fill="rgb(231,52,28)" rx="2" ry="2" />
<text  x="635.95" y="927.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.06%)</title><rect x="76.6" y="869" width="0.7" height="15.0" fill="rgb(223,170,46)" rx="2" ry="2" />
<text  x="79.60" y="879.5" ></text>
</g>
<g >
<title>rl_generic_bind (1 samples, 0.06%)</title><rect x="10.0" y="1125" width="0.7" height="15.0" fill="rgb(248,73,10)" rx="2" ry="2" />
<text  x="13.00" y="1135.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (3 samples, 0.18%)</title><rect x="84.2" y="965" width="2.1" height="15.0" fill="rgb(228,186,17)" rx="2" ry="2" />
<text  x="87.23" y="975.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (12 samples, 0.71%)</title><rect x="678.0" y="1141" width="8.4" height="15.0" fill="rgb(239,24,31)" rx="2" ry="2" />
<text  x="681.04" y="1151.5" ></text>
</g>
<g >
<title>alloc_pages_current (4 samples, 0.24%)</title><rect x="411.0" y="917" width="2.7" height="15.0" fill="rgb(230,226,50)" rx="2" ry="2" />
<text  x="413.96" y="927.5" ></text>
</g>
<g >
<title>__GI___mprotect (1 samples, 0.06%)</title><rect x="964.5" y="1285" width="0.7" height="15.0" fill="rgb(212,191,23)" rx="2" ry="2" />
<text  x="967.54" y="1295.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (376 samples, 22.10%)</title><rect x="367.3" y="1189" width="260.8" height="15.0" fill="rgb(212,123,47)" rx="2" ry="2" />
<text  x="370.26" y="1199.5" >core::intrinsics::copy_nonoverlapp..</text>
</g>
<g >
<title>ctx_resched (1 samples, 0.06%)</title><rect x="87.0" y="1125" width="0.7" height="15.0" fill="rgb(242,36,53)" rx="2" ry="2" />
<text  x="90.00" y="1135.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (34 samples, 2.00%)</title><rect x="134.2" y="1237" width="23.6" height="15.0" fill="rgb(245,176,49)" rx="2" ry="2" />
<text  x="137.17" y="1247.5" >A..</text>
</g>
<g >
<title>tick_do_update_jiffies64.part.0 (1 samples, 0.06%)</title><rect x="1082.5" y="1077" width="0.7" height="15.0" fill="rgb(247,68,29)" rx="2" ry="2" />
<text  x="1085.48" y="1087.5" ></text>
</g>
<g >
<title>dentry_needs_remove_privs (1 samples, 0.06%)</title><rect x="630.9" y="1029" width="0.7" height="15.0" fill="rgb(217,159,32)" rx="2" ry="2" />
<text  x="633.87" y="1039.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.06%)</title><rect x="1173.4" y="1077" width="0.6" height="15.0" fill="rgb(228,100,15)" rx="2" ry="2" />
<text  x="1176.35" y="1087.5" ></text>
</g>
<g >
<title>xa_load (2 samples, 0.12%)</title><rect x="508.1" y="933" width="1.4" height="15.0" fill="rgb(243,208,11)" rx="2" ry="2" />
<text  x="511.08" y="943.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.06%)</title><rect x="1088.0" y="1061" width="0.7" height="15.0" fill="rgb(241,73,44)" rx="2" ry="2" />
<text  x="1091.02" y="1071.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.06%)</title><rect x="1001.3" y="453" width="0.7" height="15.0" fill="rgb(238,193,38)" rx="2" ry="2" />
<text  x="1004.31" y="463.5" ></text>
</g>
<g >
<title>wait_for_stable_page (1 samples, 0.06%)</title><rect x="586.5" y="997" width="0.7" height="15.0" fill="rgb(205,190,18)" rx="2" ry="2" />
<text  x="589.47" y="1007.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (2 samples, 0.12%)</title><rect x="461.6" y="885" width="1.4" height="15.0" fill="rgb(246,130,33)" rx="2" ry="2" />
<text  x="464.60" y="895.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (4 samples, 0.24%)</title><rect x="164.7" y="1237" width="2.8" height="15.0" fill="rgb(244,127,21)" rx="2" ry="2" />
<text  x="167.70" y="1247.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (8 samples, 0.47%)</title><rect x="1084.6" y="1173" width="5.5" height="15.0" fill="rgb(211,174,4)" rx="2" ry="2" />
<text  x="1087.56" y="1183.5" ></text>
</g>
<g >
<title>dispatcher (57 samples, 3.35%)</title><rect x="91.9" y="1189" width="39.5" height="15.0" fill="rgb(235,122,30)" rx="2" ry="2" />
<text  x="94.86" y="1199.5" >dis..</text>
</g>
<g >
<title>cpu_startup_entry (159 samples, 9.35%)</title><rect x="1079.7" y="1301" width="110.3" height="15.0" fill="rgb(208,82,8)" rx="2" ry="2" />
<text  x="1082.70" y="1311.5" >cpu_startup_e..</text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (1 samples, 0.06%)</title><rect x="1001.3" y="357" width="0.7" height="15.0" fill="rgb(246,87,29)" rx="2" ry="2" />
<text  x="1004.31" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.06%)</title><rect x="365.9" y="1125" width="0.7" height="15.0" fill="rgb(225,146,33)" rx="2" ry="2" />
<text  x="368.87" y="1135.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (4 samples, 0.24%)</title><rect x="1162.9" y="1189" width="2.8" height="15.0" fill="rgb(254,126,49)" rx="2" ry="2" />
<text  x="1165.95" y="1199.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (95 samples, 5.58%)</title><rect x="1004.1" y="1333" width="65.9" height="15.0" fill="rgb(227,142,18)" rx="2" ry="2" />
<text  x="1007.09" y="1343.5" >asm_exc..</text>
</g>
<g >
<title>fput (1 samples, 0.06%)</title><rect x="70.4" y="1189" width="0.6" height="15.0" fill="rgb(235,22,0)" rx="2" ry="2" />
<text  x="73.35" y="1199.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="1173.4" y="1189" width="0.6" height="15.0" fill="rgb(254,115,19)" rx="2" ry="2" />
<text  x="1176.35" y="1199.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.06%)</title><rect x="1001.3" y="229" width="0.7" height="15.0" fill="rgb(213,9,51)" rx="2" ry="2" />
<text  x="1004.31" y="239.5" ></text>
</g>
<g >
<title>exc_page_fault (24 samples, 1.41%)</title><rect x="304.1" y="1141" width="16.7" height="15.0" fill="rgb(205,212,42)" rx="2" ry="2" />
<text  x="307.13" y="1151.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.06%)</title><rect x="390.8" y="1109" width="0.7" height="15.0" fill="rgb(222,125,3)" rx="2" ry="2" />
<text  x="393.85" y="1119.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.06%)</title><rect x="473.4" y="821" width="0.7" height="15.0" fill="rgb(238,166,10)" rx="2" ry="2" />
<text  x="476.40" y="831.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.06%)</title><rect x="1185.1" y="1253" width="0.7" height="15.0" fill="rgb(212,16,47)" rx="2" ry="2" />
<text  x="1188.14" y="1263.5" ></text>
</g>
<g >
<title>do_truncate (4 samples, 0.24%)</title><rect x="630.9" y="1045" width="2.7" height="15.0" fill="rgb(242,3,12)" rx="2" ry="2" />
<text  x="633.87" y="1055.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (1 samples, 0.06%)</title><rect x="1072.1" y="949" width="0.7" height="15.0" fill="rgb(247,150,40)" rx="2" ry="2" />
<text  x="1075.07" y="959.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (94 samples, 5.53%)</title><rect x="168.2" y="1141" width="65.2" height="15.0" fill="rgb(238,19,2)" rx="2" ry="2" />
<text  x="171.17" y="1151.5" >entry_S..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.06%)</title><rect x="963.2" y="1141" width="0.7" height="15.0" fill="rgb(213,80,22)" rx="2" ry="2" />
<text  x="966.16" y="1151.5" ></text>
</g>
<g >
<title>run_ksoftirqd (1 samples, 0.06%)</title><rect x="1077.6" y="1285" width="0.7" height="15.0" fill="rgb(211,25,14)" rx="2" ry="2" />
<text  x="1080.62" y="1295.5" ></text>
</g>
<g >
<title>___pthread_mutex_lock (1 samples, 0.06%)</title><rect x="91.2" y="1253" width="0.7" height="15.0" fill="rgb(229,41,23)" rx="2" ry="2" />
<text  x="94.16" y="1263.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="556.6" y="917" width="0.7" height="15.0" fill="rgb(233,228,52)" rx="2" ry="2" />
<text  x="559.64" y="927.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.41%)</title><rect x="651.0" y="1205" width="4.8" height="15.0" fill="rgb(253,129,45)" rx="2" ry="2" />
<text  x="653.99" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.12%)</title><rect x="209.1" y="709" width="1.4" height="15.0" fill="rgb(242,210,27)" rx="2" ry="2" />
<text  x="212.09" y="719.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (45 samples, 2.65%)</title><rect x="451.2" y="933" width="31.2" height="15.0" fill="rgb(217,193,5)" rx="2" ry="2" />
<text  x="454.20" y="943.5" >ad..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3 samples, 0.18%)</title><rect x="317.3" y="949" width="2.1" height="15.0" fill="rgb(215,156,4)" rx="2" ry="2" />
<text  x="320.31" y="959.5" ></text>
</g>
<g >
<title>cpuidle_select (14 samples, 0.82%)</title><rect x="1157.4" y="1253" width="9.7" height="15.0" fill="rgb(238,194,20)" rx="2" ry="2" />
<text  x="1160.40" y="1263.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one (1 samples, 0.06%)</title><rect x="239.6" y="1125" width="0.7" height="15.0" fill="rgb(205,27,31)" rx="2" ry="2" />
<text  x="242.62" y="1135.5" ></text>
</g>
<g >
<title>sync_regs (13 samples, 0.76%)</title><rect x="619.1" y="1157" width="9.0" height="15.0" fill="rgb(244,138,39)" rx="2" ry="2" />
<text  x="622.08" y="1167.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (1 samples, 0.06%)</title><rect x="1088.7" y="1093" width="0.7" height="15.0" fill="rgb(216,65,41)" rx="2" ry="2" />
<text  x="1091.72" y="1103.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.06%)</title><rect x="1183.8" y="1237" width="0.7" height="15.0" fill="rgb(245,3,19)" rx="2" ry="2" />
<text  x="1186.76" y="1247.5" ></text>
</g>
<g >
<title>handle_pte_fault (287 samples, 16.87%)</title><rect x="406.1" y="1077" width="199.1" height="15.0" fill="rgb(245,172,21)" rx="2" ry="2" />
<text  x="409.11" y="1087.5" >handle_pte_fault</text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.06%)</title><rect x="547.6" y="917" width="0.7" height="15.0" fill="rgb(242,147,19)" rx="2" ry="2" />
<text  x="550.62" y="927.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="10.0" y="997" width="0.7" height="15.0" fill="rgb(211,38,51)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (1 samples, 0.06%)</title><rect x="235.5" y="1093" width="0.6" height="15.0" fill="rgb(208,74,43)" rx="2" ry="2" />
<text  x="238.46" y="1103.5" ></text>
</g>
<g >
<title>_dl_receive_error (1 samples, 0.06%)</title><rect x="1002.0" y="1269" width="0.7" height="15.0" fill="rgb(238,28,51)" rx="2" ry="2" />
<text  x="1005.00" y="1279.5" ></text>
</g>
<g >
<title>NaClDescIoDescPRead (1 samples, 0.06%)</title><rect x="995.8" y="1189" width="0.7" height="15.0" fill="rgb(247,167,16)" rx="2" ry="2" />
<text  x="998.76" y="1199.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::open_syscall (94 samples, 5.53%)</title><rect x="168.2" y="1221" width="65.2" height="15.0" fill="rgb(217,48,8)" rx="2" ry="2" />
<text  x="171.17" y="1231.5" >rustpos..</text>
</g>
<g >
<title>__unlink (94 samples, 5.53%)</title><rect x="168.2" y="1157" width="65.2" height="15.0" fill="rgb(216,104,45)" rx="2" ry="2" />
<text  x="171.17" y="1167.5" >__unlink</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.06%)</title><rect x="133.5" y="1157" width="0.7" height="15.0" fill="rgb(238,201,35)" rx="2" ry="2" />
<text  x="136.48" y="1167.5" ></text>
</g>
<g >
<title>exit_mmap (2 samples, 0.12%)</title><rect x="1070.7" y="1221" width="1.4" height="15.0" fill="rgb(219,148,43)" rx="2" ry="2" />
<text  x="1073.68" y="1231.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.06%)</title><rect x="320.1" y="997" width="0.7" height="15.0" fill="rgb(211,91,25)" rx="2" ry="2" />
<text  x="323.09" y="1007.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (1 samples, 0.06%)</title><rect x="1072.1" y="1013" width="0.7" height="15.0" fill="rgb(247,25,41)" rx="2" ry="2" />
<text  x="1075.07" y="1023.5" ></text>
</g>
<g >
<title>xas_alloc (2 samples, 0.12%)</title><rect x="472.7" y="869" width="1.4" height="15.0" fill="rgb(230,178,19)" rx="2" ry="2" />
<text  x="475.70" y="879.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (14 samples, 0.82%)</title><rect x="984.7" y="1269" width="9.7" height="15.0" fill="rgb(230,40,29)" rx="2" ry="2" />
<text  x="987.66" y="1279.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.06%)</title><rect x="1000.6" y="597" width="0.7" height="15.0" fill="rgb(237,129,26)" rx="2" ry="2" />
<text  x="1003.62" y="607.5" ></text>
</g>
<g >
<title>dentry_kill (94 samples, 5.53%)</title><rect x="168.2" y="965" width="65.2" height="15.0" fill="rgb(211,173,43)" rx="2" ry="2" />
<text  x="171.17" y="975.5" >dentry_..</text>
</g>
<g >
<title>event_function (64 samples, 3.76%)</title><rect x="21.1" y="1045" width="44.4" height="15.0" fill="rgb(219,14,52)" rx="2" ry="2" />
<text  x="24.10" y="1055.5" >even..</text>
</g>
<g >
<title>NaClHostDescMap (1 samples, 0.06%)</title><rect x="167.5" y="1237" width="0.7" height="15.0" fill="rgb(205,63,38)" rx="2" ry="2" />
<text  x="170.47" y="1247.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.06%)</title><rect x="364.5" y="1077" width="0.7" height="15.0" fill="rgb(211,214,10)" rx="2" ry="2" />
<text  x="367.49" y="1087.5" ></text>
</g>
<g >
<title>unlock_page (3 samples, 0.18%)</title><rect x="602.4" y="1045" width="2.1" height="15.0" fill="rgb(233,148,23)" rx="2" ry="2" />
<text  x="605.43" y="1055.5" ></text>
</g>
<g >
<title>alloc_set_pte (4 samples, 0.24%)</title><rect x="599.0" y="1013" width="2.7" height="15.0" fill="rgb(213,117,48)" rx="2" ry="2" />
<text  x="601.96" y="1023.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (2 samples, 0.12%)</title><rect x="938.9" y="1205" width="1.4" height="15.0" fill="rgb(217,40,38)" rx="2" ry="2" />
<text  x="941.88" y="1215.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.06%)</title><rect x="1077.6" y="1221" width="0.7" height="15.0" fill="rgb(237,95,37)" rx="2" ry="2" />
<text  x="1080.62" y="1231.5" ></text>
</g>
<g >
<title>exc_page_fault (330 samples, 19.40%)</title><rect x="383.9" y="1141" width="228.9" height="15.0" fill="rgb(225,206,6)" rx="2" ry="2" />
<text  x="386.91" y="1151.5" >exc_page_fault</text>
</g>
<g >
<title>page_add_file_rmap (8 samples, 0.47%)</title><rect x="314.5" y="997" width="5.6" height="15.0" fill="rgb(208,82,50)" rx="2" ry="2" />
<text  x="317.54" y="1007.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.06%)</title><rect x="1187.2" y="1237" width="0.7" height="15.0" fill="rgb(246,210,9)" rx="2" ry="2" />
<text  x="1190.23" y="1247.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_key_value (1 samples, 0.06%)</title><rect x="236.1" y="1205" width="0.7" height="15.0" fill="rgb(222,161,54)" rx="2" ry="2" />
<text  x="239.15" y="1215.5" ></text>
</g>
<g >
<title>propagate_protected_usage (1 samples, 0.06%)</title><rect x="89.1" y="997" width="0.7" height="15.0" fill="rgb(226,43,13)" rx="2" ry="2" />
<text  x="92.08" y="1007.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::with_capacity_and_hasher_and_shard_amount (1 samples, 0.06%)</title><rect x="1000.6" y="645" width="0.7" height="15.0" fill="rgb(236,76,43)" rx="2" ry="2" />
<text  x="1003.62" y="655.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.06%)</title><rect x="1078.3" y="1173" width="0.7" height="15.0" fill="rgb(233,112,48)" rx="2" ry="2" />
<text  x="1081.31" y="1183.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.06%)</title><rect x="1174.0" y="1205" width="0.7" height="15.0" fill="rgb(244,40,8)" rx="2" ry="2" />
<text  x="1177.04" y="1215.5" ></text>
</g>
<g >
<title>up_read (2 samples, 0.12%)</title><rect x="562.9" y="933" width="1.4" height="15.0" fill="rgb(205,166,29)" rx="2" ry="2" />
<text  x="565.89" y="943.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.06%)</title><rect x="1000.6" y="69" width="0.7" height="15.0" fill="rgb(249,59,25)" rx="2" ry="2" />
<text  x="1003.62" y="79.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.06%)</title><rect x="938.9" y="1061" width="0.7" height="15.0" fill="rgb(237,14,3)" rx="2" ry="2" />
<text  x="941.88" y="1071.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.12%)</title><rect x="481.0" y="885" width="1.4" height="15.0" fill="rgb(221,3,8)" rx="2" ry="2" />
<text  x="484.03" y="895.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.06%)</title><rect x="1153.9" y="1141" width="0.7" height="15.0" fill="rgb(254,84,1)" rx="2" ry="2" />
<text  x="1156.93" y="1151.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (57 samples, 3.35%)</title><rect x="91.9" y="1173" width="39.5" height="15.0" fill="rgb(237,39,43)" rx="2" ry="2" />
<text  x="94.86" y="1183.5" >rus..</text>
</g>
<g >
<title>dentry_unlink_inode (94 samples, 5.53%)</title><rect x="168.2" y="933" width="65.2" height="15.0" fill="rgb(223,161,3)" rx="2" ry="2" />
<text  x="171.17" y="943.5" >dentry_..</text>
</g>
<g >
<title>cmd_record (108 samples, 6.35%)</title><rect x="12.1" y="1317" width="74.9" height="15.0" fill="rgb(248,106,53)" rx="2" ry="2" />
<text  x="15.08" y="1327.5" >cmd_record</text>
</g>
<g >
<title>reader_loop (1 samples, 0.06%)</title><rect x="10.0" y="1269" width="0.7" height="15.0" fill="rgb(214,68,49)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (8 samples, 0.47%)</title><rect x="1084.6" y="1157" width="5.5" height="15.0" fill="rgb(237,196,8)" rx="2" ry="2" />
<text  x="1087.56" y="1167.5" ></text>
</g>
<g >
<title>drop_buffers (4 samples, 0.24%)</title><rect x="215.3" y="693" width="2.8" height="15.0" fill="rgb(240,138,17)" rx="2" ry="2" />
<text  x="218.34" y="703.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.06%)</title><rect x="1171.3" y="1269" width="0.7" height="15.0" fill="rgb(223,5,12)" rx="2" ry="2" />
<text  x="1174.27" y="1279.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::initialize::{{closure}} (2 samples, 0.12%)</title><rect x="1000.6" y="1093" width="1.4" height="15.0" fill="rgb(218,58,43)" rx="2" ry="2" />
<text  x="1003.62" y="1103.5" ></text>
</g>
</g>
</svg>
