<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="870.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="853" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="853" > </text>
<g id="frames">
<g >
<title>PyEval_EvalFrameEx (5 samples, 5.10%)</title><rect x="889.0" y="645" width="60.2" height="15.0" fill="rgb(245,80,45)" rx="2" ry="2" />
<text  x="891.98" y="655.5" >PyEval..</text>
</g>
<g >
<title>secondary_startup_64 (17 samples, 17.35%)</title><rect x="985.3" y="789" width="204.7" height="15.0" fill="rgb(205,97,36)" rx="2" ry="2" />
<text  x="988.31" y="799.5" >secondary_startup_64</text>
</g>
<g >
<title>__ioctl (64 samples, 65.31%)</title><rect x="22.0" y="757" width="770.7" height="15.0" fill="rgb(210,215,15)" rx="2" ry="2" />
<text  x="25.04" y="767.5" >__ioctl</text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 3.06%)</title><rect x="889.0" y="485" width="36.1" height="15.0" fill="rgb(209,167,24)" rx="2" ry="2" />
<text  x="891.98" y="495.5" >PyE..</text>
</g>
<g >
<title>PyAST_Compile (1 samples, 1.02%)</title><rect x="864.9" y="437" width="12.0" height="15.0" fill="rgb(218,112,10)" rx="2" ry="2" />
<text  x="867.90" y="447.5" ></text>
</g>
<g >
<title>call_cpuidle (1 samples, 1.02%)</title><rect x="1178.0" y="677" width="12.0" height="15.0" fill="rgb(231,42,11)" rx="2" ry="2" />
<text  x="1180.96" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 4.08%)</title><rect x="816.7" y="597" width="48.2" height="15.0" fill="rgb(213,162,49)" rx="2" ry="2" />
<text  x="819.73" y="607.5" >PyEv..</text>
</g>
<g >
<title>__GI___open64 (1 samples, 1.02%)</title><rect x="804.7" y="229" width="12.0" height="15.0" fill="rgb(249,131,6)" rx="2" ry="2" />
<text  x="807.69" y="239.5" ></text>
</g>
<g >
<title>slot_tp_init.lto_priv.0 (2 samples, 2.04%)</title><rect x="864.9" y="581" width="24.1" height="15.0" fill="rgb(231,2,18)" rx="2" ry="2" />
<text  x="867.90" y="591.5" >s..</text>
</g>
<g >
<title>start_kernel (1 samples, 1.02%)</title><rect x="1178.0" y="741" width="12.0" height="15.0" fill="rgb(223,137,45)" rx="2" ry="2" />
<text  x="1180.96" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 3.06%)</title><rect x="889.0" y="501" width="36.1" height="15.0" fill="rgb(225,148,19)" rx="2" ry="2" />
<text  x="891.98" y="511.5" >PyE..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (5 samples, 5.10%)</title><rect x="889.0" y="661" width="60.2" height="15.0" fill="rgb(223,104,11)" rx="2" ry="2" />
<text  x="891.98" y="671.5" >PyEval..</text>
</g>
<g >
<title>compiler_visit_expr.lto_priv.0 (1 samples, 1.02%)</title><rect x="864.9" y="357" width="12.0" height="15.0" fill="rgb(223,210,22)" rx="2" ry="2" />
<text  x="867.90" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 2.04%)</title><rect x="925.1" y="565" width="24.1" height="15.0" fill="rgb(243,22,32)" rx="2" ry="2" />
<text  x="928.10" y="575.5" >P..</text>
</g>
<g >
<title>file_read.lto_priv.0 (1 samples, 1.02%)</title><rect x="949.2" y="245" width="12.0" height="15.0" fill="rgb(244,106,31)" rx="2" ry="2" />
<text  x="952.18" y="255.5" ></text>
</g>
<g >
<title>native_write_msr (48 samples, 48.98%)</title><rect x="130.4" y="469" width="578.0" height="15.0" fill="rgb(210,171,4)" rx="2" ry="2" />
<text  x="133.41" y="479.5" >native_write_msr</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="913.1" y="389" width="12.0" height="15.0" fill="rgb(214,207,23)" rx="2" ry="2" />
<text  x="916.06" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 2.04%)</title><rect x="925.1" y="549" width="24.1" height="15.0" fill="rgb(218,181,15)" rx="2" ry="2" />
<text  x="928.10" y="559.5" >P..</text>
</g>
<g >
<title>[unknown] (1 samples, 1.02%)</title><rect x="10.0" y="789" width="12.0" height="15.0" fill="rgb(251,185,17)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (64 samples, 65.31%)</title><rect x="22.0" y="693" width="770.7" height="15.0" fill="rgb(252,120,41)" rx="2" ry="2" />
<text  x="25.04" y="703.5" >do_vfs_ioctl</text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (1 samples, 1.02%)</title><rect x="937.1" y="421" width="12.1" height="15.0" fill="rgb(227,176,37)" rx="2" ry="2" />
<text  x="940.14" y="431.5" ></text>
</g>
<g >
<title>nmi_handle (1 samples, 1.02%)</title><rect x="768.6" y="469" width="12.0" height="15.0" fill="rgb(232,198,47)" rx="2" ry="2" />
<text  x="771.57" y="479.5" ></text>
</g>
<g >
<title>PyErr_Format (1 samples, 1.02%)</title><rect x="937.1" y="405" width="12.1" height="15.0" fill="rgb(250,44,10)" rx="2" ry="2" />
<text  x="940.14" y="415.5" ></text>
</g>
<g >
<title>builtin___import__.lto_priv.0 (1 samples, 1.02%)</title><rect x="804.7" y="501" width="12.0" height="15.0" fill="rgb(211,13,14)" rx="2" ry="2" />
<text  x="807.69" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="840.8" y="469" width="12.1" height="15.0" fill="rgb(207,172,15)" rx="2" ry="2" />
<text  x="843.82" y="479.5" ></text>
</g>
<g >
<title>perf (65 samples, 66.33%)</title><rect x="10.0" y="805" width="782.7" height="15.0" fill="rgb(251,99,27)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >perf</text>
</g>
<g >
<title>PyObject_Call (1 samples, 1.02%)</title><rect x="804.7" y="357" width="12.0" height="15.0" fill="rgb(243,133,10)" rx="2" ry="2" />
<text  x="807.69" y="367.5" ></text>
</g>
<g >
<title>cpu_startup_entry (16 samples, 16.33%)</title><rect x="985.3" y="757" width="192.7" height="15.0" fill="rgb(217,79,31)" rx="2" ry="2" />
<text  x="988.31" y="767.5" >cpu_startup_entry</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 1.02%)</title><rect x="949.2" y="37" width="12.0" height="15.0" fill="rgb(215,134,41)" rx="2" ry="2" />
<text  x="952.18" y="47.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 1.02%)</title><rect x="1178.0" y="645" width="12.0" height="15.0" fill="rgb(239,85,29)" rx="2" ry="2" />
<text  x="1180.96" y="655.5" ></text>
</g>
<g >
<title>instancemethod_call.lto_priv.0 (1 samples, 1.02%)</title><rect x="949.2" y="325" width="12.0" height="15.0" fill="rgb(252,159,7)" rx="2" ry="2" />
<text  x="952.18" y="335.5" ></text>
</g>
<g >
<title>PyObject_Call (4 samples, 4.08%)</title><rect x="816.7" y="677" width="48.2" height="15.0" fill="rgb(237,25,25)" rx="2" ry="2" />
<text  x="819.73" y="687.5" >PyOb..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="949.2" y="501" width="12.0" height="15.0" fill="rgb(215,53,42)" rx="2" ry="2" />
<text  x="952.18" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 1.02%)</title><rect x="840.8" y="453" width="12.1" height="15.0" fill="rgb(234,178,45)" rx="2" ry="2" />
<text  x="843.82" y="463.5" ></text>
</g>
<g >
<title>default_do_nmi (3 samples, 3.06%)</title><rect x="22.0" y="469" width="36.2" height="15.0" fill="rgb(220,216,29)" rx="2" ry="2" />
<text  x="25.04" y="479.5" >def..</text>
</g>
<g >
<title>compiler_visit_stmt (1 samples, 1.02%)</title><rect x="864.9" y="405" width="12.0" height="15.0" fill="rgb(244,178,52)" rx="2" ry="2" />
<text  x="867.90" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 4.08%)</title><rect x="816.7" y="517" width="48.2" height="15.0" fill="rgb(217,16,10)" rx="2" ry="2" />
<text  x="819.73" y="527.5" >PyEv..</text>
</g>
<g >
<title>NaClHostDescPRead (1 samples, 1.02%)</title><rect x="949.2" y="645" width="12.0" height="15.0" fill="rgb(213,204,4)" rx="2" ry="2" />
<text  x="952.18" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 1.02%)</title><rect x="949.2" y="277" width="12.0" height="15.0" fill="rgb(206,180,42)" rx="2" ry="2" />
<text  x="952.18" y="287.5" ></text>
</g>
<g >
<title>link_path_walk (1 samples, 1.02%)</title><rect x="804.7" y="117" width="12.0" height="15.0" fill="rgb(232,29,4)" rx="2" ry="2" />
<text  x="807.69" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 1.02%)</title><rect x="949.2" y="165" width="12.0" height="15.0" fill="rgb(210,54,54)" rx="2" ry="2" />
<text  x="952.18" y="175.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 3.06%)</title><rect x="889.0" y="469" width="36.1" height="15.0" fill="rgb(246,75,10)" rx="2" ry="2" />
<text  x="891.98" y="479.5" >PyE..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (5 samples, 5.10%)</title><rect x="889.0" y="629" width="60.2" height="15.0" fill="rgb(250,163,21)" rx="2" ry="2" />
<text  x="891.98" y="639.5" >PyEval..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="949.2" y="485" width="12.0" height="15.0" fill="rgb(226,197,53)" rx="2" ry="2" />
<text  x="952.18" y="495.5" ></text>
</g>
<g >
<title>perf_ioctl (64 samples, 65.31%)</title><rect x="22.0" y="677" width="770.7" height="15.0" fill="rgb(221,131,4)" rx="2" ry="2" />
<text  x="25.04" y="687.5" >perf_ioctl</text>
</g>
<g >
<title>tupledealloc.lto_priv.0 (1 samples, 1.02%)</title><rect x="889.0" y="421" width="12.0" height="15.0" fill="rgb(232,176,51)" rx="2" ry="2" />
<text  x="891.98" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="840.8" y="485" width="12.1" height="15.0" fill="rgb(245,143,12)" rx="2" ry="2" />
<text  x="843.82" y="495.5" ></text>
</g>
<g >
<title>nmi_cpu_backtrace (5 samples, 5.10%)</title><rect x="708.4" y="469" width="60.2" height="15.0" fill="rgb(208,152,32)" rx="2" ry="2" />
<text  x="711.37" y="479.5" >nmi_cp..</text>
</g>
<g >
<title>PyObject_Call (1 samples, 1.02%)</title><rect x="949.2" y="341" width="12.0" height="15.0" fill="rgb(242,225,38)" rx="2" ry="2" />
<text  x="952.18" y="351.5" ></text>
</g>
<g >
<title>_start (12 samples, 12.24%)</title><rect x="816.7" y="789" width="144.5" height="15.0" fill="rgb(219,28,3)" rx="2" ry="2" />
<text  x="819.73" y="799.5" >_start</text>
</g>
<g >
<title>PyString_FromFormatV (1 samples, 1.02%)</title><rect x="937.1" y="389" width="12.1" height="15.0" fill="rgb(242,144,51)" rx="2" ry="2" />
<text  x="940.14" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (1 samples, 1.02%)</title><rect x="804.7" y="421" width="12.0" height="15.0" fill="rgb(246,200,3)" rx="2" ry="2" />
<text  x="807.69" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 2.04%)</title><rect x="925.1" y="533" width="24.1" height="15.0" fill="rgb(243,228,41)" rx="2" ry="2" />
<text  x="928.10" y="543.5" >P..</text>
</g>
<g >
<title>PyObject_Call (1 samples, 1.02%)</title><rect x="949.2" y="309" width="12.0" height="15.0" fill="rgb(242,10,6)" rx="2" ry="2" />
<text  x="952.18" y="319.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 1.02%)</title><rect x="1178.0" y="629" width="12.0" height="15.0" fill="rgb(252,207,53)" rx="2" ry="2" />
<text  x="1180.96" y="639.5" ></text>
</g>
<g >
<title>function_call.lto_priv.0 (2 samples, 2.04%)</title><rect x="864.9" y="517" width="24.1" height="15.0" fill="rgb(223,75,26)" rx="2" ry="2" />
<text  x="867.90" y="527.5" >f..</text>
</g>
<g >
<title>builtin___import__.lto_priv.0 (1 samples, 1.02%)</title><rect x="804.7" y="661" width="12.0" height="15.0" fill="rgb(229,169,51)" rx="2" ry="2" />
<text  x="807.69" y="671.5" ></text>
</g>
<g >
<title>type_call.lto_priv.0 (2 samples, 2.04%)</title><rect x="864.9" y="597" width="24.1" height="15.0" fill="rgb(209,103,35)" rx="2" ry="2" />
<text  x="867.90" y="607.5" >t..</text>
</g>
<g >
<title>call_cpuidle (16 samples, 16.33%)</title><rect x="985.3" y="725" width="192.7" height="15.0" fill="rgb(208,135,28)" rx="2" ry="2" />
<text  x="988.31" y="735.5" >call_cpuidle</text>
</g>
<g >
<title>sel_ldr (14 samples, 14.29%)</title><rect x="792.7" y="805" width="168.5" height="15.0" fill="rgb(207,39,7)" rx="2" ry="2" />
<text  x="795.65" y="815.5" >sel_ldr</text>
</g>
<g >
<title>__cmd_record (1 samples, 1.02%)</title><rect x="10.0" y="757" width="12.0" height="15.0" fill="rgb(205,213,8)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (64 samples, 65.31%)</title><rect x="22.0" y="485" width="770.7" height="15.0" fill="rgb(217,103,52)" rx="2" ry="2" />
<text  x="25.04" y="495.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 1.02%)</title><rect x="804.7" y="725" width="12.0" height="15.0" fill="rgb(223,138,15)" rx="2" ry="2" />
<text  x="807.69" y="735.5" ></text>
</g>
<g >
<title>lind_pread (1 samples, 1.02%)</title><rect x="949.2" y="629" width="12.0" height="15.0" fill="rgb(242,170,24)" rx="2" ry="2" />
<text  x="952.18" y="639.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 2.04%)</title><rect x="901.0" y="421" width="24.1" height="15.0" fill="rgb(237,128,33)" rx="2" ry="2" />
<text  x="904.02" y="431.5" >P..</text>
</g>
<g >
<title>__libc_start_main (12 samples, 12.24%)</title><rect x="816.7" y="773" width="144.5" height="15.0" fill="rgb(216,215,46)" rx="2" ry="2" />
<text  x="819.73" y="783.5" >__libc_start_main</text>
</g>
<g >
<title>PyEval_EvalFrameEx (5 samples, 5.10%)</title><rect x="889.0" y="581" width="60.2" height="15.0" fill="rgb(213,178,33)" rx="2" ry="2" />
<text  x="891.98" y="591.5" >PyEval..</text>
</g>
<g >
<title>do_filp_open (1 samples, 1.02%)</title><rect x="804.7" y="149" width="12.0" height="15.0" fill="rgb(210,111,37)" rx="2" ry="2" />
<text  x="807.69" y="159.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 1.02%)</title><rect x="949.2" y="133" width="12.0" height="15.0" fill="rgb(226,145,42)" rx="2" ry="2" />
<text  x="952.18" y="143.5" ></text>
</g>
<g >
<title>compiler_body (1 samples, 1.02%)</title><rect x="864.9" y="421" width="12.0" height="15.0" fill="rgb(253,63,45)" rx="2" ry="2" />
<text  x="867.90" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 1.02%)</title><rect x="1178.0" y="661" width="12.0" height="15.0" fill="rgb(220,6,16)" rx="2" ry="2" />
<text  x="1180.96" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 3.06%)</title><rect x="889.0" y="533" width="36.1" height="15.0" fill="rgb(253,0,43)" rx="2" ry="2" />
<text  x="891.98" y="543.5" >PyE..</text>
</g>
<g >
<title>NaClDescIoDescPRead (1 samples, 1.02%)</title><rect x="949.2" y="661" width="12.0" height="15.0" fill="rgb(215,103,50)" rx="2" ry="2" />
<text  x="952.18" y="671.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 1.02%)</title><rect x="780.6" y="469" width="12.1" height="15.0" fill="rgb(227,112,31)" rx="2" ry="2" />
<text  x="783.61" y="479.5" ></text>
</g>
<g >
<title>PyObject_Call (2 samples, 2.04%)</title><rect x="864.9" y="693" width="24.1" height="15.0" fill="rgb(226,18,51)" rx="2" ry="2" />
<text  x="867.90" y="703.5" >P..</text>
</g>
<g >
<title>new_sync_read (1 samples, 1.02%)</title><rect x="949.2" y="101" width="12.0" height="15.0" fill="rgb(242,57,36)" rx="2" ry="2" />
<text  x="952.18" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 1.02%)</title><rect x="804.7" y="197" width="12.0" height="15.0" fill="rgb(209,210,20)" rx="2" ry="2" />
<text  x="807.69" y="207.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 1.02%)</title><rect x="1178.0" y="693" width="12.0" height="15.0" fill="rgb(237,103,46)" rx="2" ry="2" />
<text  x="1180.96" y="703.5" ></text>
</g>
<g >
<title>PyImport_ExecCodeModuleEx (1 samples, 1.02%)</title><rect x="804.7" y="757" width="12.0" height="15.0" fill="rgb(234,162,43)" rx="2" ry="2" />
<text  x="807.69" y="767.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (1 samples, 1.02%)</title><rect x="792.7" y="741" width="12.0" height="15.0" fill="rgb(232,26,51)" rx="2" ry="2" />
<text  x="795.65" y="751.5" ></text>
</g>
<g >
<title>find_module (1 samples, 1.02%)</title><rect x="804.7" y="293" width="12.0" height="15.0" fill="rgb(216,168,45)" rx="2" ry="2" />
<text  x="807.69" y="303.5" ></text>
</g>
<g >
<title>function_call.lto_priv.0 (2 samples, 2.04%)</title><rect x="864.9" y="677" width="24.1" height="15.0" fill="rgb(241,215,49)" rx="2" ry="2" />
<text  x="867.90" y="687.5" >f..</text>
</g>
<g >
<title>function_call.lto_priv.0 (4 samples, 4.08%)</title><rect x="816.7" y="661" width="48.2" height="15.0" fill="rgb(219,150,11)" rx="2" ry="2" />
<text  x="819.73" y="671.5" >func..</text>
</g>
<g >
<title>parsetok (1 samples, 1.02%)</title><rect x="876.9" y="421" width="12.1" height="15.0" fill="rgb(226,144,13)" rx="2" ry="2" />
<text  x="879.94" y="431.5" ></text>
</g>
<g >
<title>compiler_visit_expr.lto_priv.0 (1 samples, 1.02%)</title><rect x="864.9" y="309" width="12.0" height="15.0" fill="rgb(245,89,40)" rx="2" ry="2" />
<text  x="867.90" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="925.1" y="469" width="12.0" height="15.0" fill="rgb(224,12,8)" rx="2" ry="2" />
<text  x="928.10" y="479.5" ></text>
</g>
<g >
<title>compiler_visit_expr.lto_priv.0 (1 samples, 1.02%)</title><rect x="864.9" y="341" width="12.0" height="15.0" fill="rgb(234,176,2)" rx="2" ry="2" />
<text  x="867.90" y="351.5" ></text>
</g>
<g >
<title>swapper (19 samples, 19.39%)</title><rect x="961.2" y="805" width="228.8" height="15.0" fill="rgb(222,176,42)" rx="2" ry="2" />
<text  x="964.22" y="815.5" >swapper</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 4.08%)</title><rect x="816.7" y="613" width="48.2" height="15.0" fill="rgb(228,157,27)" rx="2" ry="2" />
<text  x="819.73" y="623.5" >PyEv..</text>
</g>
<g >
<title>type_new.lto_priv.0 (1 samples, 1.02%)</title><rect x="828.8" y="421" width="12.0" height="15.0" fill="rgb(212,36,28)" rx="2" ry="2" />
<text  x="831.78" y="431.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (2 samples, 2.04%)</title><rect x="864.9" y="709" width="24.1" height="15.0" fill="rgb(219,35,31)" rx="2" ry="2" />
<text  x="867.90" y="719.5" >P..</text>
</g>
<g >
<title>load_next (1 samples, 1.02%)</title><rect x="804.7" y="469" width="12.0" height="15.0" fill="rgb(247,72,30)" rx="2" ry="2" />
<text  x="807.69" y="479.5" ></text>
</g>
<g >
<title>load_source_module (1 samples, 1.02%)</title><rect x="804.7" y="773" width="12.0" height="15.0" fill="rgb(207,40,2)" rx="2" ry="2" />
<text  x="807.69" y="783.5" ></text>
</g>
<g >
<title>load_next (1 samples, 1.02%)</title><rect x="804.7" y="309" width="12.0" height="15.0" fill="rgb(231,148,14)" rx="2" ry="2" />
<text  x="807.69" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 3.06%)</title><rect x="889.0" y="549" width="36.1" height="15.0" fill="rgb(217,56,51)" rx="2" ry="2" />
<text  x="891.98" y="559.5" >PyE..</text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (1 samples, 1.02%)</title><rect x="804.7" y="533" width="12.0" height="15.0" fill="rgb(239,94,15)" rx="2" ry="2" />
<text  x="807.69" y="543.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (1 samples, 1.02%)</title><rect x="792.7" y="757" width="12.0" height="15.0" fill="rgb(246,87,19)" rx="2" ry="2" />
<text  x="795.65" y="767.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (1 samples, 1.02%)</title><rect x="804.7" y="373" width="12.0" height="15.0" fill="rgb(250,201,20)" rx="2" ry="2" />
<text  x="807.69" y="383.5" ></text>
</g>
<g >
<title>main (12 samples, 12.24%)</title><rect x="816.7" y="757" width="144.5" height="15.0" fill="rgb(210,136,24)" rx="2" ry="2" />
<text  x="819.73" y="767.5" >main</text>
</g>
<g >
<title>PyEval_EvalFrameEx (5 samples, 5.10%)</title><rect x="889.0" y="677" width="60.2" height="15.0" fill="rgb(217,0,16)" rx="2" ry="2" />
<text  x="891.98" y="687.5" >PyEval..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="949.2" y="421" width="12.0" height="15.0" fill="rgb(250,57,40)" rx="2" ry="2" />
<text  x="952.18" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 65.31%)</title><rect x="22.0" y="741" width="770.7" height="15.0" fill="rgb(245,214,35)" rx="2" ry="2" />
<text  x="25.04" y="751.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 1.02%)</title><rect x="949.2" y="469" width="12.0" height="15.0" fill="rgb(211,165,36)" rx="2" ry="2" />
<text  x="952.18" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="804.7" y="709" width="12.0" height="15.0" fill="rgb(208,114,10)" rx="2" ry="2" />
<text  x="807.69" y="719.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 1.02%)</title><rect x="804.7" y="133" width="12.0" height="15.0" fill="rgb(219,84,16)" rx="2" ry="2" />
<text  x="807.69" y="143.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 1.02%)</title><rect x="1178.0" y="709" width="12.0" height="15.0" fill="rgb(254,113,48)" rx="2" ry="2" />
<text  x="1180.96" y="719.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 1.02%)</title><rect x="949.2" y="725" width="12.0" height="15.0" fill="rgb(241,69,14)" rx="2" ry="2" />
<text  x="952.18" y="735.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (5 samples, 5.10%)</title><rect x="889.0" y="613" width="60.2" height="15.0" fill="rgb(208,135,23)" rx="2" ry="2" />
<text  x="891.98" y="623.5" >PyEval..</text>
</g>
<g >
<title>PyObject_Call (1 samples, 1.02%)</title><rect x="949.2" y="405" width="12.0" height="15.0" fill="rgb(223,107,42)" rx="2" ry="2" />
<text  x="952.18" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (64 samples, 65.31%)</title><rect x="22.0" y="725" width="770.7" height="15.0" fill="rgb(211,124,22)" rx="2" ry="2" />
<text  x="25.04" y="735.5" >do_syscall_64</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="925.1" y="485" width="12.0" height="15.0" fill="rgb(236,91,54)" rx="2" ry="2" />
<text  x="928.10" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (4 samples, 4.08%)</title><rect x="816.7" y="645" width="48.2" height="15.0" fill="rgb(249,183,20)" rx="2" ry="2" />
<text  x="819.73" y="655.5" >PyEv..</text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 65.31%)</title><rect x="22.0" y="501" width="770.7" height="15.0" fill="rgb(215,21,41)" rx="2" ry="2" />
<text  x="25.04" y="511.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>PyImport_ExecCodeModuleEx (1 samples, 1.02%)</title><rect x="804.7" y="597" width="12.0" height="15.0" fill="rgb(240,210,9)" rx="2" ry="2" />
<text  x="807.69" y="607.5" ></text>
</g>
<g >
<title>smp_call_function_single (64 samples, 65.31%)</title><rect x="22.0" y="613" width="770.7" height="15.0" fill="rgb(253,199,8)" rx="2" ry="2" />
<text  x="25.04" y="623.5" >smp_call_function_single</text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 2.04%)</title><rect x="925.1" y="501" width="24.1" height="15.0" fill="rgb(241,141,5)" rx="2" ry="2" />
<text  x="928.10" y="511.5" >P..</text>
</g>
<g >
<title>PyEval_EvalCode (1 samples, 1.02%)</title><rect x="804.7" y="581" width="12.0" height="15.0" fill="rgb(214,229,30)" rx="2" ry="2" />
<text  x="807.69" y="591.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 1.02%)</title><rect x="10.0" y="773" width="12.0" height="15.0" fill="rgb(234,8,51)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>_IO_file_xsgetn (1 samples, 1.02%)</title><rect x="949.2" y="213" width="12.0" height="15.0" fill="rgb(244,166,31)" rx="2" ry="2" />
<text  x="952.18" y="223.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (4 samples, 4.08%)</title><rect x="816.7" y="693" width="48.2" height="15.0" fill="rgb(230,81,37)" rx="2" ry="2" />
<text  x="819.73" y="703.5" >PyEv..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 4.08%)</title><rect x="816.7" y="581" width="48.2" height="15.0" fill="rgb(210,49,34)" rx="2" ry="2" />
<text  x="819.73" y="591.5" >PyEv..</text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (1 samples, 1.02%)</title><rect x="804.7" y="693" width="12.0" height="15.0" fill="rgb(207,170,10)" rx="2" ry="2" />
<text  x="807.69" y="703.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (64 samples, 65.31%)</title><rect x="22.0" y="789" width="770.7" height="15.0" fill="rgb(221,106,7)" rx="2" ry="2" />
<text  x="25.04" y="799.5" >perf_evsel__enable_cpu</text>
</g>
<g >
<title>PyImport_ExecCodeModuleEx (1 samples, 1.02%)</title><rect x="804.7" y="437" width="12.0" height="15.0" fill="rgb(223,74,47)" rx="2" ry="2" />
<text  x="807.69" y="447.5" ></text>
</g>
<g >
<title>function_call.lto_priv.0 (1 samples, 1.02%)</title><rect x="949.2" y="549" width="12.0" height="15.0" fill="rgb(241,19,10)" rx="2" ry="2" />
<text  x="952.18" y="559.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (1 samples, 1.02%)</title><rect x="949.2" y="581" width="12.0" height="15.0" fill="rgb(214,172,3)" rx="2" ry="2" />
<text  x="952.18" y="591.5" ></text>
</g>
<g >
<title>load_next (1 samples, 1.02%)</title><rect x="804.7" y="629" width="12.0" height="15.0" fill="rgb(215,55,2)" rx="2" ry="2" />
<text  x="807.69" y="639.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 1.02%)</title><rect x="804.7" y="565" width="12.0" height="15.0" fill="rgb(245,114,47)" rx="2" ry="2" />
<text  x="807.69" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="804.7" y="549" width="12.0" height="15.0" fill="rgb(211,127,39)" rx="2" ry="2" />
<text  x="807.69" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="949.2" y="453" width="12.0" height="15.0" fill="rgb(207,191,12)" rx="2" ry="2" />
<text  x="952.18" y="463.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 1.02%)</title><rect x="792.7" y="677" width="12.0" height="15.0" fill="rgb(217,40,24)" rx="2" ry="2" />
<text  x="795.65" y="687.5" ></text>
</g>
<g >
<title>PyNumber_Int (1 samples, 1.02%)</title><rect x="937.1" y="437" width="12.1" height="15.0" fill="rgb(214,182,44)" rx="2" ry="2" />
<text  x="940.14" y="447.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 65.31%)</title><rect x="22.0" y="533" width="770.7" height="15.0" fill="rgb(228,44,51)" rx="2" ry="2" />
<text  x="25.04" y="543.5" >ctx_resched</text>
</g>
<g >
<title>__vfs_read (1 samples, 1.02%)</title><rect x="949.2" y="117" width="12.0" height="15.0" fill="rgb(230,126,28)" rx="2" ry="2" />
<text  x="952.18" y="127.5" ></text>
</g>
<g >
<title>do_idle (16 samples, 16.33%)</title><rect x="985.3" y="741" width="192.7" height="15.0" fill="rgb(207,54,50)" rx="2" ry="2" />
<text  x="988.31" y="751.5" >do_idle</text>
</g>
<g >
<title>PyObject_Call (1 samples, 1.02%)</title><rect x="937.1" y="485" width="12.1" height="15.0" fill="rgb(210,108,17)" rx="2" ry="2" />
<text  x="940.14" y="495.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (64 samples, 65.31%)</title><rect x="22.0" y="773" width="770.7" height="15.0" fill="rgb(208,34,17)" rx="2" ry="2" />
<text  x="25.04" y="783.5" >perf_evsel__run_ioctl</text>
</g>
<g >
<title>generic_exec_single (64 samples, 65.31%)</title><rect x="22.0" y="597" width="770.7" height="15.0" fill="rgb(237,0,6)" rx="2" ry="2" />
<text  x="25.04" y="607.5" >generic_exec_single</text>
</g>
<g >
<title>int_new.lto_priv.0 (1 samples, 1.02%)</title><rect x="937.1" y="453" width="12.1" height="15.0" fill="rgb(211,122,46)" rx="2" ry="2" />
<text  x="940.14" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 3.06%)</title><rect x="889.0" y="517" width="36.1" height="15.0" fill="rgb(215,79,14)" rx="2" ry="2" />
<text  x="891.98" y="527.5" >PyE..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="828.8" y="469" width="12.0" height="15.0" fill="rgb(209,76,25)" rx="2" ry="2" />
<text  x="831.78" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="949.2" y="261" width="12.0" height="15.0" fill="rgb(234,67,54)" rx="2" ry="2" />
<text  x="952.18" y="271.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 1.02%)</title><rect x="828.8" y="485" width="12.0" height="15.0" fill="rgb(215,107,9)" rx="2" ry="2" />
<text  x="831.78" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 2.04%)</title><rect x="864.9" y="629" width="24.1" height="15.0" fill="rgb(224,214,23)" rx="2" ry="2" />
<text  x="867.90" y="639.5" >P..</text>
</g>
<g >
<title>PyObject_Call (2 samples, 2.04%)</title><rect x="864.9" y="613" width="24.1" height="15.0" fill="rgb(245,213,29)" rx="2" ry="2" />
<text  x="867.90" y="623.5" >P..</text>
</g>
<g >
<title>Py_CompileStringFlags (2 samples, 2.04%)</title><rect x="864.9" y="453" width="24.1" height="15.0" fill="rgb(245,90,42)" rx="2" ry="2" />
<text  x="867.90" y="463.5" >P..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 1.02%)</title><rect x="949.2" y="181" width="12.0" height="15.0" fill="rgb(220,113,50)" rx="2" ry="2" />
<text  x="952.18" y="191.5" ></text>
</g>
<g >
<title>intel_idle (16 samples, 16.33%)</title><rect x="985.3" y="677" width="192.7" height="15.0" fill="rgb(237,208,46)" rx="2" ry="2" />
<text  x="988.31" y="687.5" >intel_idle</text>
</g>
<g >
<title>instancemethod_call.lto_priv.0 (2 samples, 2.04%)</title><rect x="864.9" y="549" width="24.1" height="15.0" fill="rgb(226,181,7)" rx="2" ry="2" />
<text  x="867.90" y="559.5" >i..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (3 samples, 3.06%)</title><rect x="889.0" y="565" width="36.1" height="15.0" fill="rgb(252,105,2)" rx="2" ry="2" />
<text  x="891.98" y="575.5" >PyE..</text>
</g>
<g >
<title>compiler_visit_expr.lto_priv.0 (1 samples, 1.02%)</title><rect x="864.9" y="325" width="12.0" height="15.0" fill="rgb(217,189,27)" rx="2" ry="2" />
<text  x="867.90" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (1 samples, 1.02%)</title><rect x="804.7" y="741" width="12.0" height="15.0" fill="rgb(213,76,13)" rx="2" ry="2" />
<text  x="807.69" y="751.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 65.31%)</title><rect x="22.0" y="661" width="770.7" height="15.0" fill="rgb(250,161,52)" rx="2" ry="2" />
<text  x="25.04" y="671.5" >perf_event_for_each_child</text>
</g>
<g >
<title>LindPythonInit (7 samples, 7.14%)</title><rect x="864.9" y="725" width="84.3" height="15.0" fill="rgb(212,213,10)" rx="2" ry="2" />
<text  x="867.90" y="735.5" >LindPytho..</text>
</g>
<g >
<title>PyParser_ASTFromString (1 samples, 1.02%)</title><rect x="876.9" y="437" width="12.1" height="15.0" fill="rgb(239,175,29)" rx="2" ry="2" />
<text  x="879.94" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (2 samples, 2.04%)</title><rect x="864.9" y="501" width="24.1" height="15.0" fill="rgb(254,156,4)" rx="2" ry="2" />
<text  x="867.90" y="511.5" >P..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (5 samples, 5.10%)</title><rect x="889.0" y="693" width="60.2" height="15.0" fill="rgb(243,157,10)" rx="2" ry="2" />
<text  x="891.98" y="703.5" >PyEval..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (2 samples, 2.04%)</title><rect x="864.9" y="661" width="24.1" height="15.0" fill="rgb(207,46,52)" rx="2" ry="2" />
<text  x="867.90" y="671.5" >P..</text>
</g>
<g >
<title>__GI__IO_fread (1 samples, 1.02%)</title><rect x="949.2" y="229" width="12.0" height="15.0" fill="rgb(212,122,43)" rx="2" ry="2" />
<text  x="952.18" y="239.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 3.06%)</title><rect x="889.0" y="453" width="36.1" height="15.0" fill="rgb(254,135,51)" rx="2" ry="2" />
<text  x="891.98" y="463.5" >PyE..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (2 samples, 2.04%)</title><rect x="901.0" y="405" width="24.1" height="15.0" fill="rgb(233,132,30)" rx="2" ry="2" />
<text  x="904.02" y="415.5" >P..</text>
</g>
<g >
<title>sys_ioctl (64 samples, 65.31%)</title><rect x="22.0" y="709" width="770.7" height="15.0" fill="rgb(235,73,5)" rx="2" ry="2" />
<text  x="25.04" y="719.5" >sys_ioctl</text>
</g>
<g >
<title>load_source_module (1 samples, 1.02%)</title><rect x="804.7" y="453" width="12.0" height="15.0" fill="rgb(228,48,11)" rx="2" ry="2" />
<text  x="807.69" y="463.5" ></text>
</g>
<g >
<title>compiler_visit_stmt (1 samples, 1.02%)</title><rect x="864.9" y="373" width="12.0" height="15.0" fill="rgb(214,125,43)" rx="2" ry="2" />
<text  x="867.90" y="383.5" ></text>
</g>
<g >
<title>PyObject_Call (2 samples, 2.04%)</title><rect x="864.9" y="533" width="24.1" height="15.0" fill="rgb(232,181,17)" rx="2" ry="2" />
<text  x="867.90" y="543.5" >P..</text>
</g>
<g >
<title>builtin___import__.lto_priv.0 (1 samples, 1.02%)</title><rect x="804.7" y="341" width="12.0" height="15.0" fill="rgb(226,33,49)" rx="2" ry="2" />
<text  x="807.69" y="351.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 1.02%)</title><rect x="792.7" y="693" width="12.0" height="15.0" fill="rgb(215,34,42)" rx="2" ry="2" />
<text  x="795.65" y="703.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (1 samples, 1.02%)</title><rect x="792.7" y="773" width="12.0" height="15.0" fill="rgb(205,217,54)" rx="2" ry="2" />
<text  x="795.65" y="783.5" ></text>
</g>
<g >
<title>type_call.lto_priv.0 (1 samples, 1.02%)</title><rect x="828.8" y="437" width="12.0" height="15.0" fill="rgb(238,126,2)" rx="2" ry="2" />
<text  x="831.78" y="447.5" ></text>
</g>
<g >
<title>PyObject_Call (1 samples, 1.02%)</title><rect x="828.8" y="453" width="12.0" height="15.0" fill="rgb(213,29,49)" rx="2" ry="2" />
<text  x="831.78" y="463.5" ></text>
</g>
<g >
<title>CallPythonFunc0 (4 samples, 4.08%)</title><rect x="816.7" y="709" width="48.2" height="15.0" fill="rgb(249,167,15)" rx="2" ry="2" />
<text  x="819.73" y="719.5" >Call..</text>
</g>
<g >
<title>function_call.lto_priv.0 (1 samples, 1.02%)</title><rect x="949.2" y="293" width="12.0" height="15.0" fill="rgb(242,222,14)" rx="2" ry="2" />
<text  x="952.18" y="303.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 2.04%)</title><rect x="864.9" y="645" width="24.1" height="15.0" fill="rgb(213,110,43)" rx="2" ry="2" />
<text  x="867.90" y="655.5" >P..</text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 1.02%)</title><rect x="949.2" y="53" width="12.0" height="15.0" fill="rgb(225,7,28)" rx="2" ry="2" />
<text  x="952.18" y="63.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 1.02%)</title><rect x="1178.0" y="773" width="12.0" height="15.0" fill="rgb(226,12,43)" rx="2" ry="2" />
<text  x="1180.96" y="783.5" ></text>
</g>
<g >
<title>event_function (64 samples, 65.31%)</title><rect x="22.0" y="565" width="770.7" height="15.0" fill="rgb(217,208,9)" rx="2" ry="2" />
<text  x="25.04" y="575.5" >event_function</text>
</g>
<g >
<title>function_call.lto_priv.0 (1 samples, 1.02%)</title><rect x="949.2" y="389" width="12.0" height="15.0" fill="rgb(233,217,4)" rx="2" ry="2" />
<text  x="952.18" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 1.02%)</title><rect x="804.7" y="405" width="12.0" height="15.0" fill="rgb(236,134,11)" rx="2" ry="2" />
<text  x="807.69" y="415.5" ></text>
</g>
<g >
<title>NaClValidateCode (1 samples, 1.02%)</title><rect x="792.7" y="709" width="12.0" height="15.0" fill="rgb(216,190,6)" rx="2" ry="2" />
<text  x="795.65" y="719.5" ></text>
</g>
<g >
<title>__GI___read (1 samples, 1.02%)</title><rect x="949.2" y="197" width="12.0" height="15.0" fill="rgb(222,220,5)" rx="2" ry="2" />
<text  x="952.18" y="207.5" ></text>
</g>
<g >
<title>event_function_call (64 samples, 65.31%)</title><rect x="22.0" y="629" width="770.7" height="15.0" fill="rgb(225,64,49)" rx="2" ry="2" />
<text  x="25.04" y="639.5" >event_function_call</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 1.02%)</title><rect x="804.7" y="213" width="12.0" height="15.0" fill="rgb(235,140,7)" rx="2" ry="2" />
<text  x="807.69" y="223.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 1.02%)</title><rect x="949.2" y="693" width="12.0" height="15.0" fill="rgb(234,200,42)" rx="2" ry="2" />
<text  x="952.18" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="949.2" y="517" width="12.0" height="15.0" fill="rgb(247,87,42)" rx="2" ry="2" />
<text  x="952.18" y="527.5" ></text>
</g>
<g >
<title>PyObject_Call (1 samples, 1.02%)</title><rect x="804.7" y="517" width="12.0" height="15.0" fill="rgb(225,93,17)" rx="2" ry="2" />
<text  x="807.69" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 4.08%)</title><rect x="816.7" y="501" width="48.2" height="15.0" fill="rgb(247,27,32)" rx="2" ry="2" />
<text  x="819.73" y="511.5" >PyEv..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (5 samples, 5.10%)</title><rect x="889.0" y="597" width="60.2" height="15.0" fill="rgb(212,136,50)" rx="2" ry="2" />
<text  x="891.98" y="607.5" >PyEval..</text>
</g>
<g >
<title>sys_openat (1 samples, 1.02%)</title><rect x="804.7" y="181" width="12.0" height="15.0" fill="rgb(209,161,30)" rx="2" ry="2" />
<text  x="807.69" y="191.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 1.02%)</title><rect x="949.2" y="69" width="12.0" height="15.0" fill="rgb(241,65,26)" rx="2" ry="2" />
<text  x="952.18" y="79.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 2.04%)</title><rect x="901.0" y="437" width="24.1" height="15.0" fill="rgb(240,64,21)" rx="2" ry="2" />
<text  x="904.02" y="447.5" >P..</text>
</g>
<g >
<title>PyObject_Call (2 samples, 2.04%)</title><rect x="864.9" y="565" width="24.1" height="15.0" fill="rgb(228,154,6)" rx="2" ry="2" />
<text  x="867.90" y="575.5" >P..</text>
</g>
<g >
<title>PyDict_New (1 samples, 1.02%)</title><rect x="901.0" y="389" width="12.1" height="15.0" fill="rgb(210,191,8)" rx="2" ry="2" />
<text  x="904.02" y="399.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 1.02%)</title><rect x="949.2" y="709" width="12.0" height="15.0" fill="rgb(231,94,52)" rx="2" ry="2" />
<text  x="952.18" y="719.5" ></text>
</g>
<g >
<title>cpuidle_enter (16 samples, 16.33%)</title><rect x="985.3" y="709" width="192.7" height="15.0" fill="rgb(235,4,20)" rx="2" ry="2" />
<text  x="988.31" y="719.5" >cpuidle_enter</text>
</g>
<g >
<title>PyObject_Call (1 samples, 1.02%)</title><rect x="804.7" y="677" width="12.0" height="15.0" fill="rgb(244,141,6)" rx="2" ry="2" />
<text  x="807.69" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 4.08%)</title><rect x="816.7" y="565" width="48.2" height="15.0" fill="rgb(253,207,7)" rx="2" ry="2" />
<text  x="819.73" y="575.5" >PyEv..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 2.04%)</title><rect x="864.9" y="485" width="24.1" height="15.0" fill="rgb(252,165,14)" rx="2" ry="2" />
<text  x="867.90" y="495.5" >P..</text>
</g>
<g >
<title>builtin_compile.lto_priv.0 (2 samples, 2.04%)</title><rect x="864.9" y="469" width="24.1" height="15.0" fill="rgb(223,70,32)" rx="2" ry="2" />
<text  x="867.90" y="479.5" >b..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="949.2" y="357" width="12.0" height="15.0" fill="rgb(227,70,21)" rx="2" ry="2" />
<text  x="952.18" y="367.5" ></text>
</g>
<g >
<title>sys_read (1 samples, 1.02%)</title><rect x="949.2" y="149" width="12.0" height="15.0" fill="rgb(241,52,32)" rx="2" ry="2" />
<text  x="952.18" y="159.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (16 samples, 16.33%)</title><rect x="985.3" y="693" width="192.7" height="15.0" fill="rgb(245,209,32)" rx="2" ry="2" />
<text  x="988.31" y="703.5" >cpuidle_enter_state</text>
</g>
<g >
<title>lind_read (1 samples, 1.02%)</title><rect x="949.2" y="613" width="12.0" height="15.0" fill="rgb(231,207,43)" rx="2" ry="2" />
<text  x="952.18" y="623.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 65.31%)</title><rect x="22.0" y="517" width="770.7" height="15.0" fill="rgb(253,190,31)" rx="2" ry="2" />
<text  x="25.04" y="527.5" >x86_pmu_enable</text>
</g>
<g >
<title>load_source_module (1 samples, 1.02%)</title><rect x="804.7" y="613" width="12.0" height="15.0" fill="rgb(218,131,43)" rx="2" ry="2" />
<text  x="807.69" y="623.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 1.02%)</title><rect x="949.2" y="85" width="12.0" height="15.0" fill="rgb(251,72,19)" rx="2" ry="2" />
<text  x="952.18" y="95.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 4.08%)</title><rect x="816.7" y="549" width="48.2" height="15.0" fill="rgb(230,177,45)" rx="2" ry="2" />
<text  x="819.73" y="559.5" >PyEv..</text>
</g>
<g >
<title>lookdict_string.lto_priv.0 (1 samples, 1.02%)</title><rect x="852.9" y="485" width="12.0" height="15.0" fill="rgb(226,177,17)" rx="2" ry="2" />
<text  x="855.86" y="495.5" ></text>
</g>
<g >
<title>NaClElfImageLoad (1 samples, 1.02%)</title><rect x="949.2" y="677" width="12.0" height="15.0" fill="rgb(217,172,44)" rx="2" ry="2" />
<text  x="952.18" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (5 samples, 5.10%)</title><rect x="889.0" y="709" width="60.2" height="15.0" fill="rgb(249,79,1)" rx="2" ry="2" />
<text  x="891.98" y="719.5" >PyEval..</text>
</g>
<g >
<title>_perf_event_enable (64 samples, 65.31%)</title><rect x="22.0" y="645" width="770.7" height="15.0" fill="rgb(226,111,35)" rx="2" ry="2" />
<text  x="25.04" y="655.5" >_perf_event_enable</text>
</g>
<g >
<title>PyImport_ImportModuleLevel (1 samples, 1.02%)</title><rect x="804.7" y="645" width="12.0" height="15.0" fill="rgb(237,223,5)" rx="2" ry="2" />
<text  x="807.69" y="655.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevel (1 samples, 1.02%)</title><rect x="804.7" y="485" width="12.0" height="15.0" fill="rgb(249,76,5)" rx="2" ry="2" />
<text  x="807.69" y="495.5" ></text>
</g>
<g >
<title>rest_init (1 samples, 1.02%)</title><rect x="1178.0" y="725" width="12.0" height="15.0" fill="rgb(209,87,18)" rx="2" ry="2" />
<text  x="1180.96" y="735.5" ></text>
</g>
<g >
<title>LindPythonFinalize (4 samples, 4.08%)</title><rect x="816.7" y="725" width="48.2" height="15.0" fill="rgb(251,226,11)" rx="2" ry="2" />
<text  x="819.73" y="735.5" >Lind..</text>
</g>
<g >
<title>NaClTextDyncodeCreate (1 samples, 1.02%)</title><rect x="792.7" y="725" width="12.0" height="15.0" fill="rgb(218,195,10)" rx="2" ry="2" />
<text  x="795.65" y="735.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 65.31%)</title><rect x="22.0" y="549" width="770.7" height="15.0" fill="rgb(214,19,43)" rx="2" ry="2" />
<text  x="25.04" y="559.5" >__perf_event_enable</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 1.02%)</title><rect x="949.2" y="533" width="12.0" height="15.0" fill="rgb(224,53,49)" rx="2" ry="2" />
<text  x="952.18" y="543.5" ></text>
</g>
<g >
<title>start_secondary (16 samples, 16.33%)</title><rect x="985.3" y="773" width="192.7" height="15.0" fill="rgb(246,130,18)" rx="2" ry="2" />
<text  x="988.31" y="783.5" >start_secondary</text>
</g>
<g >
<title>all (98 samples, 100%)</title><rect x="10.0" y="821" width="1180.0" height="15.0" fill="rgb(243,171,41)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 2.04%)</title><rect x="925.1" y="517" width="24.1" height="15.0" fill="rgb(231,88,12)" rx="2" ry="2" />
<text  x="928.10" y="527.5" >P..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 1.02%)</title><rect x="949.2" y="373" width="12.0" height="15.0" fill="rgb(206,113,7)" rx="2" ry="2" />
<text  x="952.18" y="383.5" ></text>
</g>
<g >
<title>PyParser_AddToken (1 samples, 1.02%)</title><rect x="876.9" y="405" width="12.1" height="15.0" fill="rgb(240,125,27)" rx="2" ry="2" />
<text  x="879.94" y="415.5" ></text>
</g>
<g >
<title>[sel_ldr] (1 samples, 1.02%)</title><rect x="792.7" y="789" width="12.0" height="15.0" fill="rgb(251,158,32)" rx="2" ry="2" />
<text  x="795.65" y="799.5" ></text>
</g>
<g >
<title>__fopen_internal (1 samples, 1.02%)</title><rect x="804.7" y="277" width="12.0" height="15.0" fill="rgb(212,224,50)" rx="2" ry="2" />
<text  x="807.69" y="287.5" ></text>
</g>
<g >
<title>do_sys_open (1 samples, 1.02%)</title><rect x="804.7" y="165" width="12.0" height="15.0" fill="rgb(242,190,33)" rx="2" ry="2" />
<text  x="807.69" y="175.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 4.08%)</title><rect x="816.7" y="629" width="48.2" height="15.0" fill="rgb(218,9,48)" rx="2" ry="2" />
<text  x="819.73" y="639.5" >PyEv..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 1.02%)</title><rect x="949.2" y="437" width="12.0" height="15.0" fill="rgb(205,109,27)" rx="2" ry="2" />
<text  x="952.18" y="447.5" ></text>
</g>
<g >
<title>compiler_visit_stmt (1 samples, 1.02%)</title><rect x="864.9" y="389" width="12.0" height="15.0" fill="rgb(234,121,34)" rx="2" ry="2" />
<text  x="867.90" y="399.5" ></text>
</g>
<g >
<title>PyObject_Call (1 samples, 1.02%)</title><rect x="949.2" y="565" width="12.0" height="15.0" fill="rgb(234,58,47)" rx="2" ry="2" />
<text  x="952.18" y="575.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 1.02%)</title><rect x="1178.0" y="757" width="12.0" height="15.0" fill="rgb(233,1,21)" rx="2" ry="2" />
<text  x="1180.96" y="767.5" ></text>
</g>
<g >
<title>__GI__IO_file_fopen (1 samples, 1.02%)</title><rect x="804.7" y="261" width="12.0" height="15.0" fill="rgb(206,102,48)" rx="2" ry="2" />
<text  x="807.69" y="271.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="840.8" y="437" width="12.1" height="15.0" fill="rgb(229,23,49)" rx="2" ry="2" />
<text  x="843.82" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 1.02%)</title><rect x="804.7" y="789" width="12.0" height="15.0" fill="rgb(241,124,33)" rx="2" ry="2" />
<text  x="807.69" y="799.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (12 samples, 12.24%)</title><rect x="816.7" y="741" width="144.5" height="15.0" fill="rgb(253,112,40)" rx="2" ry="2" />
<text  x="819.73" y="751.5" >NaClSelLdrMain</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 1.02%)</title><rect x="804.7" y="389" width="12.0" height="15.0" fill="rgb(253,78,6)" rx="2" ry="2" />
<text  x="807.69" y="399.5" ></text>
</g>
<g >
<title>type_call.lto_priv.0 (1 samples, 1.02%)</title><rect x="937.1" y="469" width="12.1" height="15.0" fill="rgb(224,81,40)" rx="2" ry="2" />
<text  x="940.14" y="479.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevel (1 samples, 1.02%)</title><rect x="804.7" y="325" width="12.0" height="15.0" fill="rgb(227,14,37)" rx="2" ry="2" />
<text  x="807.69" y="335.5" ></text>
</g>
<g >
<title>native_sched_clock (6 samples, 6.12%)</title><rect x="58.2" y="469" width="72.2" height="15.0" fill="rgb(244,184,39)" rx="2" ry="2" />
<text  x="61.16" y="479.5" >native_s..</text>
</g>
<g >
<title>__GI__IO_file_open (1 samples, 1.02%)</title><rect x="804.7" y="245" width="12.0" height="15.0" fill="rgb(246,69,16)" rx="2" ry="2" />
<text  x="807.69" y="255.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 65.31%)</title><rect x="22.0" y="581" width="770.7" height="15.0" fill="rgb(224,14,51)" rx="2" ry="2" />
<text  x="25.04" y="591.5" >remote_function</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 4.08%)</title><rect x="816.7" y="533" width="48.2" height="15.0" fill="rgb(232,154,44)" rx="2" ry="2" />
<text  x="819.73" y="543.5" >PyEv..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 1.02%)</title><rect x="889.0" y="437" width="12.0" height="15.0" fill="rgb(224,206,34)" rx="2" ry="2" />
<text  x="891.98" y="447.5" ></text>
</g>
<g >
<title>CallPythonFunc (1 samples, 1.02%)</title><rect x="949.2" y="597" width="12.0" height="15.0" fill="rgb(254,188,18)" rx="2" ry="2" />
<text  x="952.18" y="607.5" ></text>
</g>
</g>
</svg>
