<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>rcu_dynticks_eqs_exit (2 samples, 0.03%)</title><rect x="34.7" y="309" width="0.4" height="15.0" fill="rgb(253,51,48)" rx="2" ry="2" />
<text  x="37.74" y="319.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1 samples, 0.02%)</title><rect x="1108.2" y="421" width="0.2" height="15.0" fill="rgb(222,222,38)" rx="2" ry="2" />
<text  x="1111.21" y="431.5" ></text>
</g>
<g >
<title>sync_regs (2 samples, 0.03%)</title><rect x="331.0" y="485" width="0.4" height="15.0" fill="rgb(250,156,5)" rx="2" ry="2" />
<text  x="334.02" y="495.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (51 samples, 0.88%)</title><rect x="15.9" y="405" width="10.5" height="15.0" fill="rgb(207,25,48)" rx="2" ry="2" />
<text  x="18.93" y="415.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (16 samples, 0.28%)</title><rect x="286.2" y="501" width="3.3" height="15.0" fill="rgb(217,96,35)" rx="2" ry="2" />
<text  x="289.24" y="511.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.02%)</title><rect x="1015.6" y="485" width="0.2" height="15.0" fill="rgb(212,32,52)" rx="2" ry="2" />
<text  x="1018.59" y="495.5" ></text>
</g>
<g >
<title>poll_idle (105 samples, 1.82%)</title><rect x="107.9" y="325" width="21.5" height="15.0" fill="rgb(209,13,25)" rx="2" ry="2" />
<text  x="110.94" y="335.5" >p..</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.03%)</title><rect x="1032.6" y="405" width="0.4" height="15.0" fill="rgb(210,47,21)" rx="2" ry="2" />
<text  x="1035.56" y="415.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (20 samples, 0.35%)</title><rect x="137.8" y="373" width="4.1" height="15.0" fill="rgb(246,164,41)" rx="2" ry="2" />
<text  x="140.79" y="383.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="155.0" y="341" width="0.2" height="15.0" fill="rgb(252,107,14)" rx="2" ry="2" />
<text  x="157.97" y="351.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="1159.5" y="357" width="0.2" height="15.0" fill="rgb(210,1,9)" rx="2" ry="2" />
<text  x="1162.53" y="367.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (22 samples, 0.38%)</title><rect x="189.9" y="501" width="4.5" height="15.0" fill="rgb(224,10,13)" rx="2" ry="2" />
<text  x="192.93" y="511.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (2 samples, 0.03%)</title><rect x="167.4" y="325" width="0.5" height="15.0" fill="rgb(235,102,29)" rx="2" ry="2" />
<text  x="170.44" y="335.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (10 samples, 0.17%)</title><rect x="815.4" y="453" width="2.1" height="15.0" fill="rgb(239,229,25)" rx="2" ry="2" />
<text  x="818.41" y="463.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (76 samples, 1.32%)</title><rect x="1136.2" y="389" width="15.6" height="15.0" fill="rgb(239,105,4)" rx="2" ry="2" />
<text  x="1139.22" y="399.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (3 samples, 0.05%)</title><rect x="1178.8" y="293" width="0.6" height="15.0" fill="rgb(248,69,38)" rx="2" ry="2" />
<text  x="1181.75" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="754.7" y="405" width="0.2" height="15.0" fill="rgb(215,154,24)" rx="2" ry="2" />
<text  x="757.68" y="415.5" ></text>
</g>
<g >
<title>event_function_call (64 samples, 1.11%)</title><rect x="175.0" y="373" width="13.1" height="15.0" fill="rgb(225,15,40)" rx="2" ry="2" />
<text  x="178.01" y="383.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.02%)</title><rect x="291.1" y="501" width="0.3" height="15.0" fill="rgb(249,132,45)" rx="2" ry="2" />
<text  x="294.15" y="511.5" ></text>
</g>
<g >
<title>sched_clock_cpu (6 samples, 0.10%)</title><rect x="152.3" y="325" width="1.2" height="15.0" fill="rgb(240,207,51)" rx="2" ry="2" />
<text  x="155.31" y="335.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (1 samples, 0.02%)</title><rect x="129.4" y="309" width="0.2" height="15.0" fill="rgb(251,174,33)" rx="2" ry="2" />
<text  x="132.41" y="319.5" ></text>
</g>
<g >
<title>nohz_csd_func (9 samples, 0.16%)</title><rect x="140.0" y="357" width="1.9" height="15.0" fill="rgb(230,197,39)" rx="2" ry="2" />
<text  x="143.04" y="367.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (1 samples, 0.02%)</title><rect x="64.4" y="229" width="0.2" height="15.0" fill="rgb(206,28,38)" rx="2" ry="2" />
<text  x="67.39" y="239.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (1 samples, 0.02%)</title><rect x="154.2" y="357" width="0.2" height="15.0" fill="rgb(250,194,30)" rx="2" ry="2" />
<text  x="157.15" y="367.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (2 samples, 0.03%)</title><rect x="786.6" y="453" width="0.4" height="15.0" fill="rgb(228,97,1)" rx="2" ry="2" />
<text  x="789.58" y="463.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="155.0" y="325" width="0.2" height="15.0" fill="rgb(236,66,53)" rx="2" ry="2" />
<text  x="157.97" y="335.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (3 samples, 0.05%)</title><rect x="138.4" y="357" width="0.6" height="15.0" fill="rgb(239,152,42)" rx="2" ry="2" />
<text  x="141.41" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (111 samples, 1.92%)</title><rect x="987.2" y="437" width="22.7" height="15.0" fill="rgb(212,14,46)" rx="2" ry="2" />
<text  x="990.17" y="447.5" >c..</text>
</g>
<g >
<title>send_call_function_single_ipi (2 samples, 0.03%)</title><rect x="103.0" y="309" width="0.4" height="15.0" fill="rgb(252,159,54)" rx="2" ry="2" />
<text  x="106.03" y="319.5" ></text>
</g>
<g >
<title>sched_idle_set_state (1 samples, 0.02%)</title><rect x="164.6" y="405" width="0.2" height="15.0" fill="rgb(236,35,18)" rx="2" ry="2" />
<text  x="167.58" y="415.5" ></text>
</g>
<g >
<title>nohz_balance_enter_idle (1 samples, 0.02%)</title><rect x="1179.6" y="357" width="0.2" height="15.0" fill="rgb(217,0,46)" rx="2" ry="2" />
<text  x="1182.57" y="367.5" ></text>
</g>
<g >
<title>schedule_idle (27 samples, 0.47%)</title><rect x="1182.6" y="373" width="5.6" height="15.0" fill="rgb(208,141,39)" rx="2" ry="2" />
<text  x="1185.64" y="383.5" ></text>
</g>
<g >
<title>core::cmp::min_by (3 samples, 0.05%)</title><rect x="1014.8" y="453" width="0.6" height="15.0" fill="rgb(206,102,45)" rx="2" ry="2" />
<text  x="1017.77" y="463.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.03%)</title><rect x="103.9" y="453" width="0.4" height="15.0" fill="rgb(234,149,10)" rx="2" ry="2" />
<text  x="106.85" y="463.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (2 samples, 0.03%)</title><rect x="1157.5" y="421" width="0.4" height="15.0" fill="rgb(251,187,37)" rx="2" ry="2" />
<text  x="1160.49" y="431.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (4 samples, 0.07%)</title><rect x="592.1" y="469" width="0.8" height="15.0" fill="rgb(250,164,42)" rx="2" ry="2" />
<text  x="595.13" y="479.5" ></text>
</g>
<g >
<title>__fib_validate_source (1 samples, 0.02%)</title><rect x="64.4" y="53" width="0.2" height="15.0" fill="rgb(252,8,9)" rx="2" ry="2" />
<text  x="67.39" y="63.5" ></text>
</g>
<g >
<title>common_interrupt (2 samples, 0.03%)</title><rect x="16.1" y="373" width="0.4" height="15.0" fill="rgb(240,133,36)" rx="2" ry="2" />
<text  x="19.13" y="383.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (1 samples, 0.02%)</title><rect x="1135.4" y="341" width="0.2" height="15.0" fill="rgb(230,132,10)" rx="2" ry="2" />
<text  x="1138.41" y="351.5" ></text>
</g>
<g >
<title>local_touch_nmi (1 samples, 0.02%)</title><rect x="141.9" y="373" width="0.2" height="15.0" fill="rgb(250,40,28)" rx="2" ry="2" />
<text  x="144.88" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (52 samples, 0.90%)</title><rect x="578.2" y="437" width="10.7" height="15.0" fill="rgb(235,83,5)" rx="2" ry="2" />
<text  x="581.22" y="447.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="15.7" y="389" width="0.2" height="15.0" fill="rgb(240,89,49)" rx="2" ry="2" />
<text  x="18.73" y="399.5" ></text>
</g>
<g >
<title>cpuidle_select (32 samples, 0.55%)</title><rect x="130.8" y="357" width="6.6" height="15.0" fill="rgb(235,10,22)" rx="2" ry="2" />
<text  x="133.84" y="367.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (13 samples, 0.23%)</title><rect x="588.9" y="485" width="2.6" height="15.0" fill="rgb(240,110,7)" rx="2" ry="2" />
<text  x="591.86" y="495.5" ></text>
</g>
<g >
<title>kick_ilb (21 samples, 0.36%)</title><rect x="147.2" y="293" width="4.3" height="15.0" fill="rgb(246,105,17)" rx="2" ry="2" />
<text  x="150.20" y="303.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1174.1" y="293" width="0.2" height="15.0" fill="rgb(253,179,6)" rx="2" ry="2" />
<text  x="1177.05" y="303.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="1161.4" y="373" width="0.4" height="15.0" fill="rgb(234,99,3)" rx="2" ry="2" />
<text  x="1164.37" y="383.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (4 samples, 0.07%)</title><rect x="156.6" y="389" width="0.8" height="15.0" fill="rgb(243,8,54)" rx="2" ry="2" />
<text  x="159.61" y="399.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="174.0" y="325" width="0.2" height="15.0" fill="rgb(236,52,42)" rx="2" ry="2" />
<text  x="176.99" y="335.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="16.1" y="357" width="0.2" height="15.0" fill="rgb(242,65,14)" rx="2" ry="2" />
<text  x="19.13" y="367.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="564.9" y="405" width="0.2" height="15.0" fill="rgb(237,62,49)" rx="2" ry="2" />
<text  x="567.93" y="415.5" ></text>
</g>
<g >
<title>rcu_needs_cpu (1 samples, 0.02%)</title><rect x="171.7" y="309" width="0.2" height="15.0" fill="rgb(218,128,15)" rx="2" ry="2" />
<text  x="174.74" y="319.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="1126.4" y="437" width="0.2" height="15.0" fill="rgb(238,151,6)" rx="2" ry="2" />
<text  x="1129.41" y="447.5" ></text>
</g>
<g >
<title>schedule_idle (3 samples, 0.05%)</title><rect x="166.0" y="437" width="0.6" height="15.0" fill="rgb(250,19,22)" rx="2" ry="2" />
<text  x="169.01" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.02%)</title><rect x="137.6" y="357" width="0.2" height="15.0" fill="rgb(221,228,6)" rx="2" ry="2" />
<text  x="140.59" y="367.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="1161.4" y="389" width="0.4" height="15.0" fill="rgb(207,41,40)" rx="2" ry="2" />
<text  x="1164.37" y="399.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (3 samples, 0.05%)</title><rect x="256.0" y="501" width="0.6" height="15.0" fill="rgb(210,125,46)" rx="2" ry="2" />
<text  x="258.98" y="511.5" ></text>
</g>
<g >
<title>rcu_gp_fqs_loop (1 samples, 0.02%)</title><rect x="15.7" y="453" width="0.2" height="15.0" fill="rgb(242,47,0)" rx="2" ry="2" />
<text  x="18.73" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.02%)</title><rect x="41.3" y="373" width="0.2" height="15.0" fill="rgb(228,54,1)" rx="2" ry="2" />
<text  x="44.28" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.02%)</title><rect x="1188.2" y="373" width="0.2" height="15.0" fill="rgb(244,223,29)" rx="2" ry="2" />
<text  x="1191.16" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.29%)</title><rect x="190.3" y="469" width="3.5" height="15.0" fill="rgb(241,212,18)" rx="2" ry="2" />
<text  x="193.34" y="479.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1173.8" y="197" width="0.3" height="15.0" fill="rgb(234,220,5)" rx="2" ry="2" />
<text  x="1176.85" y="207.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.03%)</title><rect x="103.4" y="437" width="0.5" height="15.0" fill="rgb(254,11,4)" rx="2" ry="2" />
<text  x="106.44" y="447.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 1.11%)</title><rect x="175.0" y="277" width="13.1" height="15.0" fill="rgb(244,217,7)" rx="2" ry="2" />
<text  x="178.01" y="287.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (26 samples, 0.45%)</title><rect x="781.9" y="469" width="5.3" height="15.0" fill="rgb(247,138,33)" rx="2" ry="2" />
<text  x="784.88" y="479.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (1 samples, 0.02%)</title><rect x="1135.4" y="309" width="0.2" height="15.0" fill="rgb(213,52,21)" rx="2" ry="2" />
<text  x="1138.41" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1101.5" y="389" width="0.2" height="15.0" fill="rgb(218,120,22)" rx="2" ry="2" />
<text  x="1104.46" y="399.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.02%)</title><rect x="329.8" y="373" width="0.2" height="15.0" fill="rgb(210,96,38)" rx="2" ry="2" />
<text  x="332.79" y="383.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (8 samples, 0.14%)</title><rect x="188.1" y="341" width="1.6" height="15.0" fill="rgb(249,196,10)" rx="2" ry="2" />
<text  x="191.09" y="351.5" ></text>
</g>
<g >
<title>llist_reverse_order (5 samples, 0.09%)</title><rect x="139.0" y="357" width="1.0" height="15.0" fill="rgb(249,131,26)" rx="2" ry="2" />
<text  x="142.02" y="367.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="64.4" y="101" width="0.2" height="15.0" fill="rgb(252,185,22)" rx="2" ry="2" />
<text  x="67.39" y="111.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (1 samples, 0.02%)</title><rect x="1102.1" y="453" width="0.2" height="15.0" fill="rgb(218,177,20)" rx="2" ry="2" />
<text  x="1105.08" y="463.5" ></text>
</g>
<g >
<title>timerqueue_iterate_next (1 samples, 0.02%)</title><rect x="100.4" y="357" width="0.2" height="15.0" fill="rgb(251,104,22)" rx="2" ry="2" />
<text  x="103.38" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.14%)</title><rect x="188.1" y="485" width="1.6" height="15.0" fill="rgb(244,206,40)" rx="2" ry="2" />
<text  x="191.09" y="495.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.02%)</title><rect x="156.2" y="341" width="0.2" height="15.0" fill="rgb(230,27,44)" rx="2" ry="2" />
<text  x="159.20" y="351.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="64.6" y="357" width="0.2" height="15.0" fill="rgb(232,125,19)" rx="2" ry="2" />
<text  x="67.59" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (2 samples, 0.03%)</title><rect x="100.0" y="357" width="0.4" height="15.0" fill="rgb(220,41,47)" rx="2" ry="2" />
<text  x="102.97" y="367.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="64.4" y="341" width="0.2" height="15.0" fill="rgb(231,176,28)" rx="2" ry="2" />
<text  x="67.39" y="351.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (145 samples, 2.51%)</title><rect x="64.8" y="389" width="29.6" height="15.0" fill="rgb(231,12,42)" rx="2" ry="2" />
<text  x="67.80" y="399.5" >mw..</text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="98.9" y="373" width="0.2" height="15.0" fill="rgb(212,26,20)" rx="2" ry="2" />
<text  x="101.94" y="383.5" ></text>
</g>
<g >
<title>timerqueue_iterate_next (1 samples, 0.02%)</title><rect x="1177.5" y="277" width="0.2" height="15.0" fill="rgb(214,89,19)" rx="2" ry="2" />
<text  x="1180.53" y="287.5" ></text>
</g>
<g >
<title>__update_idle_core (2 samples, 0.03%)</title><rect x="151.5" y="325" width="0.4" height="15.0" fill="rgb(219,98,49)" rx="2" ry="2" />
<text  x="154.49" y="335.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (9 samples, 0.16%)</title><rect x="160.5" y="389" width="1.8" height="15.0" fill="rgb(249,85,8)" rx="2" ry="2" />
<text  x="163.49" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (6 samples, 0.10%)</title><rect x="36.2" y="309" width="1.2" height="15.0" fill="rgb(218,6,24)" rx="2" ry="2" />
<text  x="39.17" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.23%)</title><rect x="562.3" y="437" width="2.6" height="15.0" fill="rgb(236,53,16)" rx="2" ry="2" />
<text  x="565.28" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (37 samples, 0.64%)</title><rect x="565.1" y="453" width="7.6" height="15.0" fill="rgb(225,181,40)" rx="2" ry="2" />
<text  x="568.14" y="463.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.03%)</title><rect x="1033.0" y="405" width="0.4" height="15.0" fill="rgb(252,21,7)" rx="2" ry="2" />
<text  x="1035.97" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (64 samples, 1.11%)</title><rect x="175.0" y="469" width="13.1" height="15.0" fill="rgb(245,223,10)" rx="2" ry="2" />
<text  x="178.01" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2 samples, 0.03%)</title><rect x="1033.0" y="389" width="0.4" height="15.0" fill="rgb(253,209,22)" rx="2" ry="2" />
<text  x="1035.97" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (2 samples, 0.03%)</title><rect x="62.3" y="469" width="0.5" height="15.0" fill="rgb(245,142,36)" rx="2" ry="2" />
<text  x="65.34" y="479.5" ></text>
</g>
<g >
<title>HandleStackContext (46 samples, 0.80%)</title><rect x="211.6" y="501" width="9.4" height="15.0" fill="rgb(224,203,45)" rx="2" ry="2" />
<text  x="214.61" y="511.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.09%)</title><rect x="563.9" y="325" width="1.0" height="15.0" fill="rgb(221,177,3)" rx="2" ry="2" />
<text  x="566.91" y="335.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="174.2" y="357" width="0.2" height="15.0" fill="rgb(216,27,41)" rx="2" ry="2" />
<text  x="177.19" y="367.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="786.6" y="437" width="0.4" height="15.0" fill="rgb(238,5,23)" rx="2" ry="2" />
<text  x="789.58" y="447.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="563.3" y="373" width="0.2" height="15.0" fill="rgb(235,179,51)" rx="2" ry="2" />
<text  x="566.30" y="383.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="1188.2" y="357" width="0.2" height="15.0" fill="rgb(244,216,39)" rx="2" ry="2" />
<text  x="1191.16" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.03%)</title><rect x="1107.8" y="357" width="0.4" height="15.0" fill="rgb(217,32,17)" rx="2" ry="2" />
<text  x="1110.80" y="367.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="174.4" y="341" width="0.2" height="15.0" fill="rgb(233,165,8)" rx="2" ry="2" />
<text  x="177.39" y="351.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1135.4" y="213" width="0.2" height="15.0" fill="rgb(235,61,15)" rx="2" ry="2" />
<text  x="1138.41" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="754.7" y="421" width="0.2" height="15.0" fill="rgb(240,227,13)" rx="2" ry="2" />
<text  x="757.68" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.14%)</title><rect x="188.1" y="469" width="1.6" height="15.0" fill="rgb(254,179,7)" rx="2" ry="2" />
<text  x="191.09" y="479.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (1 samples, 0.02%)</title><rect x="40.9" y="341" width="0.2" height="15.0" fill="rgb(216,79,20)" rx="2" ry="2" />
<text  x="43.88" y="351.5" ></text>
</g>
<g >
<title>compact_zone (3 samples, 0.05%)</title><rect x="63.2" y="437" width="0.6" height="15.0" fill="rgb(233,50,31)" rx="2" ry="2" />
<text  x="66.16" y="447.5" ></text>
</g>
<g >
<title>menu_update (8 samples, 0.14%)</title><rect x="133.3" y="325" width="1.6" height="15.0" fill="rgb(247,161,41)" rx="2" ry="2" />
<text  x="136.30" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1101.5" y="405" width="0.2" height="15.0" fill="rgb(218,83,51)" rx="2" ry="2" />
<text  x="1104.46" y="415.5" ></text>
</g>
<g >
<title>housekeeping_cpumask (1 samples, 0.02%)</title><rect x="147.0" y="293" width="0.2" height="15.0" fill="rgb(236,125,18)" rx="2" ry="2" />
<text  x="150.00" y="303.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (3 samples, 0.05%)</title><rect x="1164.4" y="325" width="0.7" height="15.0" fill="rgb(238,53,2)" rx="2" ry="2" />
<text  x="1167.44" y="335.5" ></text>
</g>
<g >
<title>menu_select (20 samples, 0.35%)</title><rect x="1175.5" y="341" width="4.1" height="15.0" fill="rgb(214,63,16)" rx="2" ry="2" />
<text  x="1178.48" y="351.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (1 samples, 0.02%)</title><rect x="156.2" y="325" width="0.2" height="15.0" fill="rgb(217,222,1)" rx="2" ry="2" />
<text  x="159.20" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (1 samples, 0.02%)</title><rect x="62.8" y="469" width="0.2" height="15.0" fill="rgb(207,191,40)" rx="2" ry="2" />
<text  x="65.75" y="479.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (84 samples, 1.46%)</title><rect x="1109.2" y="469" width="17.2" height="15.0" fill="rgb(230,23,18)" rx="2" ry="2" />
<text  x="1112.23" y="479.5" ></text>
</g>
<g >
<title>do_idle (51 samples, 0.88%)</title><rect x="15.9" y="453" width="10.5" height="15.0" fill="rgb(226,192,6)" rx="2" ry="2" />
<text  x="18.93" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (82 samples, 1.42%)</title><rect x="1109.6" y="421" width="16.8" height="15.0" fill="rgb(247,116,34)" rx="2" ry="2" />
<text  x="1112.64" y="431.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (5 samples, 0.09%)</title><rect x="563.9" y="309" width="1.0" height="15.0" fill="rgb(231,206,40)" rx="2" ry="2" />
<text  x="566.91" y="319.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (4 samples, 0.07%)</title><rect x="192.4" y="453" width="0.8" height="15.0" fill="rgb(225,219,48)" rx="2" ry="2" />
<text  x="195.39" y="463.5" ></text>
</g>
<g >
<title>smp_call_function_single (64 samples, 1.11%)</title><rect x="175.0" y="357" width="13.1" height="15.0" fill="rgb(218,34,23)" rx="2" ry="2" />
<text  x="178.01" y="367.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (132 samples, 2.29%)</title><rect x="1163.0" y="485" width="27.0" height="15.0" fill="rgb(206,203,36)" rx="2" ry="2" />
<text  x="1166.01" y="495.5" >x..</text>
</g>
<g >
<title>llist_reverse_order (1 samples, 0.02%)</title><rect x="37.6" y="357" width="0.2" height="15.0" fill="rgb(214,216,23)" rx="2" ry="2" />
<text  x="40.60" y="367.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (2 samples, 0.03%)</title><rect x="188.7" y="213" width="0.4" height="15.0" fill="rgb(225,191,45)" rx="2" ry="2" />
<text  x="191.71" y="223.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.02%)</title><rect x="1161.8" y="437" width="0.2" height="15.0" fill="rgb(232,118,9)" rx="2" ry="2" />
<text  x="1164.78" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (2 samples, 0.03%)</title><rect x="165.0" y="373" width="0.4" height="15.0" fill="rgb(228,187,51)" rx="2" ry="2" />
<text  x="167.99" y="383.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="62.3" y="357" width="0.2" height="15.0" fill="rgb(219,118,10)" rx="2" ry="2" />
<text  x="65.34" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (3 samples, 0.05%)</title><rect x="1180.2" y="357" width="0.6" height="15.0" fill="rgb(223,5,28)" rx="2" ry="2" />
<text  x="1183.19" y="367.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="64.4" y="117" width="0.2" height="15.0" fill="rgb(234,114,53)" rx="2" ry="2" />
<text  x="67.39" y="127.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (1 samples, 0.02%)</title><rect x="1102.3" y="453" width="0.2" height="15.0" fill="rgb(213,94,18)" rx="2" ry="2" />
<text  x="1105.28" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (158 samples, 2.74%)</title><rect x="1065.5" y="469" width="32.3" height="15.0" fill="rgb(233,180,51)" rx="2" ry="2" />
<text  x="1068.48" y="479.5" >&lt;a..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1173.8" y="309" width="0.3" height="15.0" fill="rgb(241,42,18)" rx="2" ry="2" />
<text  x="1176.85" y="319.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (3 samples, 0.05%)</title><rect x="591.5" y="453" width="0.6" height="15.0" fill="rgb(239,117,9)" rx="2" ry="2" />
<text  x="594.51" y="463.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (4 samples, 0.07%)</title><rect x="99.8" y="373" width="0.8" height="15.0" fill="rgb(218,83,35)" rx="2" ry="2" />
<text  x="102.76" y="383.5" ></text>
</g>
<g >
<title>nohz_csd_func (2 samples, 0.03%)</title><rect x="1158.5" y="421" width="0.4" height="15.0" fill="rgb(226,167,24)" rx="2" ry="2" />
<text  x="1161.51" y="431.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="562.3" y="421" width="0.2" height="15.0" fill="rgb(229,160,1)" rx="2" ry="2" />
<text  x="565.28" y="431.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="1102.1" y="421" width="0.2" height="15.0" fill="rgb(251,76,47)" rx="2" ry="2" />
<text  x="1105.08" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter (55 samples, 0.95%)</title><rect x="1164.2" y="357" width="11.3" height="15.0" fill="rgb(226,225,20)" rx="2" ry="2" />
<text  x="1167.24" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (25 samples, 0.43%)</title><rect x="556.8" y="485" width="5.1" height="15.0" fill="rgb(250,133,4)" rx="2" ry="2" />
<text  x="559.75" y="495.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="723.2" y="389" width="0.2" height="15.0" fill="rgb(254,220,17)" rx="2" ry="2" />
<text  x="726.19" y="399.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.02%)</title><rect x="130.4" y="357" width="0.2" height="15.0" fill="rgb(205,13,13)" rx="2" ry="2" />
<text  x="133.43" y="367.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.02%)</title><rect x="63.0" y="437" width="0.2" height="15.0" fill="rgb(247,221,42)" rx="2" ry="2" />
<text  x="65.96" y="447.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (73 samples, 1.26%)</title><rect x="755.5" y="437" width="14.9" height="15.0" fill="rgb(247,99,23)" rx="2" ry="2" />
<text  x="758.50" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter (51 samples, 0.88%)</title><rect x="15.9" y="421" width="10.5" height="15.0" fill="rgb(232,127,15)" rx="2" ry="2" />
<text  x="18.93" y="431.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="329.6" y="325" width="0.2" height="15.0" fill="rgb(216,5,45)" rx="2" ry="2" />
<text  x="332.59" y="335.5" ></text>
</g>
<g >
<title>llist_reverse_order (3 samples, 0.05%)</title><rect x="1157.9" y="421" width="0.6" height="15.0" fill="rgb(237,193,11)" rx="2" ry="2" />
<text  x="1160.90" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.02%)</title><rect x="41.1" y="373" width="0.2" height="15.0" fill="rgb(228,7,12)" rx="2" ry="2" />
<text  x="44.08" y="383.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="1135.4" y="357" width="0.2" height="15.0" fill="rgb(225,226,39)" rx="2" ry="2" />
<text  x="1138.41" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (124 samples, 2.15%)</title><rect x="729.5" y="453" width="25.4" height="15.0" fill="rgb(219,196,18)" rx="2" ry="2" />
<text  x="732.53" y="463.5" >c..</text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.02%)</title><rect x="1036.2" y="469" width="0.2" height="15.0" fill="rgb(237,213,3)" rx="2" ry="2" />
<text  x="1039.24" y="479.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="1135.4" y="469" width="0.2" height="15.0" fill="rgb(214,8,19)" rx="2" ry="2" />
<text  x="1138.41" y="479.5" ></text>
</g>
<g >
<title>alx_mask_msix (1 samples, 0.02%)</title><rect x="16.1" y="277" width="0.2" height="15.0" fill="rgb(209,205,37)" rx="2" ry="2" />
<text  x="19.13" y="287.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="62.3" y="325" width="0.2" height="15.0" fill="rgb(208,193,8)" rx="2" ry="2" />
<text  x="65.34" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (20 samples, 0.35%)</title><rect x="190.3" y="485" width="4.1" height="15.0" fill="rgb(237,0,27)" rx="2" ry="2" />
<text  x="193.34" y="495.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="16.1" y="309" width="0.2" height="15.0" fill="rgb(237,27,48)" rx="2" ry="2" />
<text  x="19.13" y="319.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="1173.8" y="133" width="0.3" height="15.0" fill="rgb(254,68,22)" rx="2" ry="2" />
<text  x="1176.85" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="143.7" y="309" width="0.4" height="15.0" fill="rgb(245,41,52)" rx="2" ry="2" />
<text  x="146.72" y="319.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (76 samples, 1.32%)</title><rect x="754.9" y="453" width="15.5" height="15.0" fill="rgb(251,87,17)" rx="2" ry="2" />
<text  x="757.89" y="463.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="166.0" y="405" width="0.2" height="15.0" fill="rgb(250,163,22)" rx="2" ry="2" />
<text  x="169.01" y="415.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (2 samples, 0.03%)</title><rect x="170.3" y="309" width="0.4" height="15.0" fill="rgb(210,159,12)" rx="2" ry="2" />
<text  x="173.30" y="319.5" ></text>
</g>
<g >
<title>udp_queue_rcv_one_skb (1 samples, 0.02%)</title><rect x="1135.4" y="117" width="0.2" height="15.0" fill="rgb(225,213,23)" rx="2" ry="2" />
<text  x="1138.41" y="127.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.02%)</title><rect x="62.8" y="373" width="0.2" height="15.0" fill="rgb(208,61,40)" rx="2" ry="2" />
<text  x="65.75" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (25 samples, 0.43%)</title><rect x="556.8" y="405" width="5.1" height="15.0" fill="rgb(244,143,17)" rx="2" ry="2" />
<text  x="559.75" y="415.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (4 samples, 0.07%)</title><rect x="1032.6" y="453" width="0.8" height="15.0" fill="rgb(225,29,44)" rx="2" ry="2" />
<text  x="1035.56" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="1101.5" y="421" width="0.2" height="15.0" fill="rgb(249,130,36)" rx="2" ry="2" />
<text  x="1104.46" y="431.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.05%)</title><rect x="165.4" y="437" width="0.6" height="15.0" fill="rgb(212,61,10)" rx="2" ry="2" />
<text  x="168.40" y="447.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (156 samples, 2.70%)</title><rect x="105.9" y="373" width="31.9" height="15.0" fill="rgb(243,102,16)" rx="2" ry="2" />
<text  x="108.90" y="383.5" >cp..</text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.14%)</title><rect x="1103.9" y="389" width="1.7" height="15.0" fill="rgb(213,216,51)" rx="2" ry="2" />
<text  x="1106.92" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="101.2" y="325" width="0.2" height="15.0" fill="rgb(233,85,8)" rx="2" ry="2" />
<text  x="104.19" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.02%)</title><rect x="174.0" y="373" width="0.2" height="15.0" fill="rgb(238,167,8)" rx="2" ry="2" />
<text  x="176.99" y="383.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="64.6" y="309" width="0.2" height="15.0" fill="rgb(234,130,50)" rx="2" ry="2" />
<text  x="67.59" y="319.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="754.7" y="261" width="0.2" height="15.0" fill="rgb(227,208,12)" rx="2" ry="2" />
<text  x="757.68" y="271.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (10 samples, 0.17%)</title><rect x="38.8" y="309" width="2.1" height="15.0" fill="rgb(205,203,33)" rx="2" ry="2" />
<text  x="41.83" y="319.5" ></text>
</g>
<g >
<title>cpu_startup_entry (132 samples, 2.29%)</title><rect x="1163.0" y="405" width="27.0" height="15.0" fill="rgb(251,180,38)" rx="2" ry="2" />
<text  x="1166.01" y="415.5" >c..</text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.05%)</title><rect x="173.2" y="341" width="0.6" height="15.0" fill="rgb(230,98,25)" rx="2" ry="2" />
<text  x="176.17" y="351.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (29 samples, 0.50%)</title><rect x="781.9" y="485" width="5.9" height="15.0" fill="rgb(232,141,6)" rx="2" ry="2" />
<text  x="784.88" y="495.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (5 samples, 0.09%)</title><rect x="232.5" y="501" width="1.0" height="15.0" fill="rgb(222,217,23)" rx="2" ry="2" />
<text  x="235.46" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (64 samples, 1.11%)</title><rect x="175.0" y="453" width="13.1" height="15.0" fill="rgb(206,169,38)" rx="2" ry="2" />
<text  x="178.01" y="463.5" ></text>
</g>
<g >
<title>schedule_idle (59 samples, 1.02%)</title><rect x="142.3" y="373" width="12.1" height="15.0" fill="rgb(223,183,54)" rx="2" ry="2" />
<text  x="145.29" y="383.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (30 samples, 0.52%)</title><rect x="723.4" y="453" width="6.1" height="15.0" fill="rgb(252,11,20)" rx="2" ry="2" />
<text  x="726.40" y="463.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.03%)</title><rect x="1107.8" y="325" width="0.4" height="15.0" fill="rgb(238,181,17)" rx="2" ry="2" />
<text  x="1110.80" y="335.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (1 samples, 0.02%)</title><rect x="188.9" y="165" width="0.2" height="15.0" fill="rgb(237,206,37)" rx="2" ry="2" />
<text  x="191.91" y="175.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.02%)</title><rect x="15.7" y="437" width="0.2" height="15.0" fill="rgb(247,93,9)" rx="2" ry="2" />
<text  x="18.73" y="447.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="64.6" y="325" width="0.2" height="15.0" fill="rgb(222,162,54)" rx="2" ry="2" />
<text  x="67.59" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="36.0" y="293" width="0.2" height="15.0" fill="rgb(205,47,30)" rx="2" ry="2" />
<text  x="38.97" y="303.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (1 samples, 0.02%)</title><rect x="64.4" y="165" width="0.2" height="15.0" fill="rgb(209,137,24)" rx="2" ry="2" />
<text  x="67.39" y="175.5" ></text>
</g>
<g >
<title>pick_next_task_fair (12 samples, 0.21%)</title><rect x="38.4" y="341" width="2.5" height="15.0" fill="rgb(233,14,34)" rx="2" ry="2" />
<text  x="41.42" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (3 samples, 0.05%)</title><rect x="1036.2" y="501" width="0.7" height="15.0" fill="rgb(252,204,18)" rx="2" ry="2" />
<text  x="1039.24" y="511.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (9 samples, 0.16%)</title><rect x="1159.3" y="373" width="1.9" height="15.0" fill="rgb(237,134,37)" rx="2" ry="2" />
<text  x="1162.33" y="383.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (79 samples, 1.37%)</title><rect x="1016.4" y="485" width="16.2" height="15.0" fill="rgb(218,156,29)" rx="2" ry="2" />
<text  x="1019.40" y="495.5" ></text>
</g>
<g >
<title>new_sync_write (8 samples, 0.14%)</title><rect x="188.1" y="405" width="1.6" height="15.0" fill="rgb(217,6,38)" rx="2" ry="2" />
<text  x="191.09" y="415.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (2 samples, 0.03%)</title><rect x="1107.8" y="309" width="0.4" height="15.0" fill="rgb(238,182,15)" rx="2" ry="2" />
<text  x="1110.80" y="319.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="64.4" y="37" width="0.2" height="15.0" fill="rgb(254,109,27)" rx="2" ry="2" />
<text  x="67.39" y="47.5" ></text>
</g>
<g >
<title>poll_idle (36 samples, 0.62%)</title><rect x="27.2" y="325" width="7.3" height="15.0" fill="rgb(251,113,18)" rx="2" ry="2" />
<text  x="30.18" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (124 samples, 2.15%)</title><rect x="729.5" y="437" width="25.4" height="15.0" fill="rgb(235,22,9)" rx="2" ry="2" />
<text  x="732.53" y="447.5" >c..</text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1105.3" y="373" width="0.3" height="15.0" fill="rgb(214,148,50)" rx="2" ry="2" />
<text  x="1108.35" y="383.5" ></text>
</g>
<g >
<title>cpu_startup_entry (32 samples, 0.55%)</title><rect x="160.5" y="469" width="6.5" height="15.0" fill="rgb(213,93,40)" rx="2" ry="2" />
<text  x="163.49" y="479.5" ></text>
</g>
<g >
<title>get_typical_interval (2 samples, 0.03%)</title><rect x="99.4" y="389" width="0.4" height="15.0" fill="rgb(207,91,35)" rx="2" ry="2" />
<text  x="102.35" y="399.5" ></text>
</g>
<g >
<title>.NET_ThreadPool (156 samples, 2.70%)</title><rect x="10.0" y="517" width="31.9" height="15.0" fill="rgb(229,127,21)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >.N..</text>
</g>
<g >
<title>ip_list_rcv (1 samples, 0.02%)</title><rect x="1135.4" y="293" width="0.2" height="15.0" fill="rgb(214,209,20)" rx="2" ry="2" />
<text  x="1138.41" y="303.5" ></text>
</g>
<g >
<title>native_sched_clock (6 samples, 0.10%)</title><rect x="152.3" y="309" width="1.2" height="15.0" fill="rgb(214,186,33)" rx="2" ry="2" />
<text  x="155.31" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="754.7" y="325" width="0.2" height="15.0" fill="rgb(206,168,53)" rx="2" ry="2" />
<text  x="757.68" y="335.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.02%)</title><rect x="1185.7" y="277" width="0.2" height="15.0" fill="rgb(207,110,33)" rx="2" ry="2" />
<text  x="1188.71" y="287.5" ></text>
</g>
<g >
<title>__libc_write (8 samples, 0.14%)</title><rect x="188.1" y="501" width="1.6" height="15.0" fill="rgb(253,181,39)" rx="2" ry="2" />
<text  x="191.09" y="511.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (17 samples, 0.29%)</title><rect x="810.3" y="453" width="3.5" height="15.0" fill="rgb(232,79,46)" rx="2" ry="2" />
<text  x="813.30" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (158 samples, 2.74%)</title><rect x="1065.5" y="453" width="32.3" height="15.0" fill="rgb(249,0,20)" rx="2" ry="2" />
<text  x="1068.48" y="463.5" >co..</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1173.8" y="245" width="0.3" height="15.0" fill="rgb(237,146,47)" rx="2" ry="2" />
<text  x="1176.85" y="255.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (2 samples, 0.03%)</title><rect x="165.0" y="341" width="0.4" height="15.0" fill="rgb(253,113,46)" rx="2" ry="2" />
<text  x="167.99" y="351.5" ></text>
</g>
<g >
<title>get_typical_interval (2 samples, 0.03%)</title><rect x="1176.1" y="325" width="0.4" height="15.0" fill="rgb(235,152,25)" rx="2" ry="2" />
<text  x="1179.10" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.02%)</title><rect x="563.5" y="373" width="0.2" height="15.0" fill="rgb(249,21,0)" rx="2" ry="2" />
<text  x="566.50" y="383.5" ></text>
</g>
<g >
<title>alx_poll (1 samples, 0.02%)</title><rect x="1135.4" y="373" width="0.2" height="15.0" fill="rgb(237,129,4)" rx="2" ry="2" />
<text  x="1138.41" y="383.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="166.4" y="405" width="0.2" height="15.0" fill="rgb(252,158,2)" rx="2" ry="2" />
<text  x="169.42" y="415.5" ></text>
</g>
<g >
<title>isolate_freepages (3 samples, 0.05%)</title><rect x="63.2" y="373" width="0.6" height="15.0" fill="rgb(224,166,52)" rx="2" ry="2" />
<text  x="66.16" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (35 samples, 0.61%)</title><rect x="565.5" y="437" width="7.2" height="15.0" fill="rgb(222,49,6)" rx="2" ry="2" />
<text  x="568.55" y="447.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="62.8" y="405" width="0.2" height="15.0" fill="rgb(232,148,7)" rx="2" ry="2" />
<text  x="65.75" y="415.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.02%)</title><rect x="40.7" y="261" width="0.2" height="15.0" fill="rgb(235,61,19)" rx="2" ry="2" />
<text  x="43.67" y="271.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1 samples, 0.02%)</title><rect x="329.8" y="341" width="0.2" height="15.0" fill="rgb(239,63,42)" rx="2" ry="2" />
<text  x="332.79" y="351.5" ></text>
</g>
<g >
<title>newidle_balance (9 samples, 0.16%)</title><rect x="1159.3" y="389" width="1.9" height="15.0" fill="rgb(236,29,2)" rx="2" ry="2" />
<text  x="1162.33" y="399.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (17 samples, 0.29%)</title><rect x="585.4" y="421" width="3.5" height="15.0" fill="rgb(243,2,35)" rx="2" ry="2" />
<text  x="588.38" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (100 samples, 1.73%)</title><rect x="1136.2" y="405" width="20.5" height="15.0" fill="rgb(231,175,18)" rx="2" ry="2" />
<text  x="1139.22" y="415.5" ></text>
</g>
<g >
<title>pick_next_task_fair (6 samples, 0.10%)</title><rect x="102.2" y="405" width="1.2" height="15.0" fill="rgb(235,17,12)" rx="2" ry="2" />
<text  x="105.22" y="415.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (20 samples, 0.35%)</title><rect x="160.5" y="405" width="4.1" height="15.0" fill="rgb(217,109,39)" rx="2" ry="2" />
<text  x="163.49" y="415.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="189.1" y="261" width="0.4" height="15.0" fill="rgb(253,100,23)" rx="2" ry="2" />
<text  x="192.12" y="271.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (2 samples, 0.03%)</title><rect x="188.7" y="229" width="0.4" height="15.0" fill="rgb(220,7,33)" rx="2" ry="2" />
<text  x="191.71" y="239.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (4 samples, 0.07%)</title><rect x="100.6" y="373" width="0.8" height="15.0" fill="rgb(215,13,18)" rx="2" ry="2" />
<text  x="103.58" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.02%)</title><rect x="166.6" y="437" width="0.2" height="15.0" fill="rgb(211,61,49)" rx="2" ry="2" />
<text  x="169.62" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.02%)</title><rect x="171.9" y="341" width="0.2" height="15.0" fill="rgb(249,75,45)" rx="2" ry="2" />
<text  x="174.94" y="351.5" ></text>
</g>
<g >
<title>napi_poll (1 samples, 0.02%)</title><rect x="16.3" y="277" width="0.2" height="15.0" fill="rgb(208,191,9)" rx="2" ry="2" />
<text  x="19.34" y="287.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (8 samples, 0.14%)</title><rect x="589.9" y="437" width="1.6" height="15.0" fill="rgb(239,166,19)" rx="2" ry="2" />
<text  x="592.88" y="447.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="130.0" y="309" width="0.4" height="15.0" fill="rgb(209,34,4)" rx="2" ry="2" />
<text  x="133.02" y="319.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1101.5" y="261" width="0.2" height="15.0" fill="rgb(230,106,1)" rx="2" ry="2" />
<text  x="1104.46" y="271.5" ></text>
</g>
<g >
<title>rest_init (38 samples, 0.66%)</title><rect x="167.0" y="421" width="7.8" height="15.0" fill="rgb(250,58,52)" rx="2" ry="2" />
<text  x="170.03" y="431.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1173.8" y="165" width="0.3" height="15.0" fill="rgb(207,43,7)" rx="2" ry="2" />
<text  x="1176.85" y="175.5" ></text>
</g>
<g >
<title>arch_call_rest_init (76 samples, 1.32%)</title><rect x="26.4" y="437" width="15.5" height="15.0" fill="rgb(233,75,46)" rx="2" ry="2" />
<text  x="29.36" y="447.5" ></text>
</g>
<g >
<title>ret_from_fork (3 samples, 0.05%)</title><rect x="63.2" y="501" width="0.6" height="15.0" fill="rgb(225,47,50)" rx="2" ry="2" />
<text  x="66.16" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (97 samples, 1.68%)</title><rect x="573.1" y="501" width="19.8" height="15.0" fill="rgb(210,182,22)" rx="2" ry="2" />
<text  x="576.11" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (1 samples, 0.02%)</title><rect x="786.4" y="437" width="0.2" height="15.0" fill="rgb(247,202,50)" rx="2" ry="2" />
<text  x="789.37" y="447.5" ></text>
</g>
<g >
<title>menu_select (10 samples, 0.17%)</title><rect x="99.4" y="405" width="2.0" height="15.0" fill="rgb(216,190,41)" rx="2" ry="2" />
<text  x="102.35" y="415.5" ></text>
</g>
<g >
<title>cpuidle_enter (41 samples, 0.71%)</title><rect x="26.8" y="357" width="8.3" height="15.0" fill="rgb(223,139,26)" rx="2" ry="2" />
<text  x="29.77" y="367.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.02%)</title><rect x="166.0" y="389" width="0.2" height="15.0" fill="rgb(238,91,28)" rx="2" ry="2" />
<text  x="169.01" y="399.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="188.9" y="133" width="0.2" height="15.0" fill="rgb(221,158,18)" rx="2" ry="2" />
<text  x="191.91" y="143.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.03%)</title><rect x="1033.0" y="373" width="0.4" height="15.0" fill="rgb(209,53,10)" rx="2" ry="2" />
<text  x="1035.97" y="383.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.02%)</title><rect x="1015.4" y="453" width="0.2" height="15.0" fill="rgb(205,80,27)" rx="2" ry="2" />
<text  x="1018.38" y="463.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.03%)</title><rect x="101.6" y="437" width="0.4" height="15.0" fill="rgb(248,209,49)" rx="2" ry="2" />
<text  x="104.60" y="447.5" ></text>
</g>
<g >
<title>__ioctl (64 samples, 1.11%)</title><rect x="175.0" y="501" width="13.1" height="15.0" fill="rgb(244,27,9)" rx="2" ry="2" />
<text  x="178.01" y="511.5" ></text>
</g>
<g >
<title>ext4_da_write_end (2 samples, 0.03%)</title><rect x="188.7" y="277" width="0.4" height="15.0" fill="rgb(209,22,34)" rx="2" ry="2" />
<text  x="191.71" y="287.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="37.2" y="261" width="0.2" height="15.0" fill="rgb(208,118,43)" rx="2" ry="2" />
<text  x="40.19" y="271.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.02%)</title><rect x="34.5" y="325" width="0.2" height="15.0" fill="rgb(248,187,35)" rx="2" ry="2" />
<text  x="37.54" y="335.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="41.1" y="357" width="0.2" height="15.0" fill="rgb(215,191,49)" rx="2" ry="2" />
<text  x="44.08" y="367.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (8 samples, 0.14%)</title><rect x="145.2" y="293" width="1.6" height="15.0" fill="rgb(207,227,4)" rx="2" ry="2" />
<text  x="148.16" y="303.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.07%)</title><rect x="722.6" y="421" width="0.8" height="15.0" fill="rgb(214,85,5)" rx="2" ry="2" />
<text  x="725.58" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (11 samples, 0.19%)</title><rect x="134.9" y="325" width="2.3" height="15.0" fill="rgb(218,112,36)" rx="2" ry="2" />
<text  x="137.93" y="335.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1162.2" y="421" width="0.2" height="15.0" fill="rgb(221,223,35)" rx="2" ry="2" />
<text  x="1165.19" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.02%)</title><rect x="156.4" y="373" width="0.2" height="15.0" fill="rgb(220,23,35)" rx="2" ry="2" />
<text  x="159.40" y="383.5" ></text>
</g>
<g >
<title>kcompactd (3 samples, 0.05%)</title><rect x="63.2" y="469" width="0.6" height="15.0" fill="rgb(247,167,11)" rx="2" ry="2" />
<text  x="66.16" y="479.5" ></text>
</g>
<g >
<title>__schedule (16 samples, 0.28%)</title><rect x="37.8" y="357" width="3.3" height="15.0" fill="rgb(217,20,46)" rx="2" ry="2" />
<text  x="40.81" y="367.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (1 samples, 0.02%)</title><rect x="174.4" y="325" width="0.2" height="15.0" fill="rgb(245,98,4)" rx="2" ry="2" />
<text  x="177.39" y="335.5" ></text>
</g>
<g >
<title>[sel_ldr] (145 samples, 2.51%)</title><rect x="292.6" y="501" width="29.6" height="15.0" fill="rgb(222,167,15)" rx="2" ry="2" />
<text  x="295.58" y="511.5" >[s..</text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (2 samples, 0.03%)</title><rect x="1107.4" y="357" width="0.4" height="15.0" fill="rgb(239,35,23)" rx="2" ry="2" />
<text  x="1110.39" y="367.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (4 samples, 0.07%)</title><rect x="722.6" y="437" width="0.8" height="15.0" fill="rgb(229,207,30)" rx="2" ry="2" />
<text  x="725.58" y="447.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (2 samples, 0.03%)</title><rect x="188.1" y="261" width="0.4" height="15.0" fill="rgb(241,187,16)" rx="2" ry="2" />
<text  x="191.09" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (7 samples, 0.12%)</title><rect x="1177.9" y="309" width="1.5" height="15.0" fill="rgb(210,24,54)" rx="2" ry="2" />
<text  x="1180.94" y="319.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="188.5" y="245" width="0.2" height="15.0" fill="rgb(218,107,46)" rx="2" ry="2" />
<text  x="191.50" y="255.5" ></text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.03%)</title><rect x="1033.0" y="421" width="0.4" height="15.0" fill="rgb(245,80,32)" rx="2" ry="2" />
<text  x="1035.97" y="431.5" ></text>
</g>
<g >
<title>isolate_freepages_block (1 samples, 0.02%)</title><rect x="63.6" y="357" width="0.2" height="15.0" fill="rgb(248,196,2)" rx="2" ry="2" />
<text  x="66.57" y="367.5" ></text>
</g>
<g >
<title>newidle_balance (3 samples, 0.05%)</title><rect x="173.2" y="325" width="0.6" height="15.0" fill="rgb(234,36,0)" rx="2" ry="2" />
<text  x="176.17" y="335.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (21 samples, 0.36%)</title><rect x="1183.7" y="309" width="4.3" height="15.0" fill="rgb(219,51,30)" rx="2" ry="2" />
<text  x="1186.66" y="319.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (5 samples, 0.09%)</title><rect x="136.2" y="277" width="1.0" height="15.0" fill="rgb(237,46,43)" rx="2" ry="2" />
<text  x="139.16" y="287.5" ></text>
</g>
<g >
<title>update_rq_clock (6 samples, 0.10%)</title><rect x="152.3" y="341" width="1.2" height="15.0" fill="rgb(206,211,41)" rx="2" ry="2" />
<text  x="155.31" y="351.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.02%)</title><rect x="129.4" y="325" width="0.2" height="15.0" fill="rgb(227,164,1)" rx="2" ry="2" />
<text  x="132.41" y="335.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.02%)</title><rect x="101.6" y="421" width="0.2" height="15.0" fill="rgb(223,185,39)" rx="2" ry="2" />
<text  x="104.60" y="431.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="166.6" y="421" width="0.2" height="15.0" fill="rgb(229,58,15)" rx="2" ry="2" />
<text  x="169.62" y="431.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.02%)</title><rect x="101.2" y="341" width="0.2" height="15.0" fill="rgb(240,14,42)" rx="2" ry="2" />
<text  x="104.19" y="351.5" ></text>
</g>
<g >
<title>unmap_and_move (3 samples, 0.05%)</title><rect x="63.2" y="405" width="0.6" height="15.0" fill="rgb(251,7,16)" rx="2" ry="2" />
<text  x="66.16" y="415.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="564.9" y="421" width="0.2" height="15.0" fill="rgb(252,180,19)" rx="2" ry="2" />
<text  x="567.93" y="431.5" ></text>
</g>
<g >
<title>ip_list_rcv_finish.constprop.0 (1 samples, 0.02%)</title><rect x="1135.4" y="261" width="0.2" height="15.0" fill="rgb(212,174,52)" rx="2" ry="2" />
<text  x="1138.41" y="271.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.05%)</title><rect x="193.2" y="453" width="0.6" height="15.0" fill="rgb(205,149,14)" rx="2" ry="2" />
<text  x="196.21" y="463.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (15 samples, 0.26%)</title><rect x="561.9" y="485" width="3.0" height="15.0" fill="rgb(212,186,28)" rx="2" ry="2" />
<text  x="564.87" y="495.5" ></text>
</g>
<g >
<title>get_typical_interval (6 samples, 0.10%)</title><rect x="132.1" y="325" width="1.2" height="15.0" fill="rgb(207,121,38)" rx="2" ry="2" />
<text  x="135.07" y="335.5" ></text>
</g>
<g >
<title>llist_reverse_order (1 samples, 0.02%)</title><rect x="101.8" y="421" width="0.2" height="15.0" fill="rgb(233,190,15)" rx="2" ry="2" />
<text  x="104.81" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="174.8" y="485" width="0.2" height="15.0" fill="rgb(206,188,8)" rx="2" ry="2" />
<text  x="177.80" y="495.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1173.8" y="261" width="0.3" height="15.0" fill="rgb(244,48,54)" rx="2" ry="2" />
<text  x="1176.85" y="271.5" ></text>
</g>
<g >
<title>do_epoll_pwait.part.0 (2 samples, 0.03%)</title><rect x="62.3" y="453" width="0.5" height="15.0" fill="rgb(231,52,11)" rx="2" ry="2" />
<text  x="65.34" y="463.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="1101.5" y="229" width="0.2" height="15.0" fill="rgb(209,126,21)" rx="2" ry="2" />
<text  x="1104.46" y="239.5" ></text>
</g>
<g >
<title>do_idle (131 samples, 2.27%)</title><rect x="1135.6" y="453" width="26.8" height="15.0" fill="rgb(206,24,46)" rx="2" ry="2" />
<text  x="1138.61" y="463.5" >d..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (327 samples, 5.67%)</title><rect x="426.9" y="501" width="66.9" height="15.0" fill="rgb(209,213,7)" rx="2" ry="2" />
<text  x="429.92" y="511.5" >__memmo..</text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="129.0" y="293" width="0.4" height="15.0" fill="rgb(217,35,43)" rx="2" ry="2" />
<text  x="132.00" y="303.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="16.3" y="325" width="0.2" height="15.0" fill="rgb(225,107,23)" rx="2" ry="2" />
<text  x="19.34" y="335.5" ></text>
</g>
<g >
<title>sched_clock_idle_wakeup_event (1 samples, 0.02%)</title><rect x="1175.3" y="341" width="0.2" height="15.0" fill="rgb(230,106,33)" rx="2" ry="2" />
<text  x="1178.28" y="351.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.02%)</title><rect x="35.1" y="357" width="0.3" height="15.0" fill="rgb(234,143,37)" rx="2" ry="2" />
<text  x="38.15" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1135.4" y="421" width="0.2" height="15.0" fill="rgb(245,88,46)" rx="2" ry="2" />
<text  x="1138.41" y="431.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (24 samples, 0.42%)</title><rect x="250.7" y="501" width="4.9" height="15.0" fill="rgb(212,205,15)" rx="2" ry="2" />
<text  x="253.66" y="511.5" ></text>
</g>
<g >
<title>menu_select (5 samples, 0.09%)</title><rect x="170.9" y="341" width="1.0" height="15.0" fill="rgb(246,90,27)" rx="2" ry="2" />
<text  x="173.92" y="351.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.02%)</title><rect x="15.7" y="501" width="0.2" height="15.0" fill="rgb(238,185,35)" rx="2" ry="2" />
<text  x="18.73" y="511.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.02%)</title><rect x="62.3" y="437" width="0.2" height="15.0" fill="rgb(213,65,49)" rx="2" ry="2" />
<text  x="65.34" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="1179.0" y="261" width="0.4" height="15.0" fill="rgb(245,204,48)" rx="2" ry="2" />
<text  x="1181.96" y="271.5" ></text>
</g>
<g >
<title>kworker/dying (82 samples, 1.42%)</title><rect x="158.0" y="517" width="16.8" height="15.0" fill="rgb(211,48,53)" rx="2" ry="2" />
<text  x="161.04" y="527.5" ></text>
</g>
<g >
<title>timekeeping_max_deferment (1 samples, 0.02%)</title><rect x="1179.4" y="309" width="0.2" height="15.0" fill="rgb(230,168,30)" rx="2" ry="2" />
<text  x="1182.37" y="319.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (17 samples, 0.29%)</title><rect x="148.0" y="277" width="3.5" height="15.0" fill="rgb(227,15,38)" rx="2" ry="2" />
<text  x="151.02" y="287.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (4 samples, 0.07%)</title><rect x="602.8" y="501" width="0.8" height="15.0" fill="rgb(207,128,24)" rx="2" ry="2" />
<text  x="605.76" y="511.5" ></text>
</g>
<g >
<title>llist_add_batch (1 samples, 0.02%)</title><rect x="40.5" y="261" width="0.2" height="15.0" fill="rgb(210,146,13)" rx="2" ry="2" />
<text  x="43.47" y="271.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1156.5" y="373" width="0.2" height="15.0" fill="rgb(247,222,41)" rx="2" ry="2" />
<text  x="1159.47" y="383.5" ></text>
</g>
<g >
<title>cpuidle_select (4 samples, 0.07%)</title><rect x="1156.7" y="421" width="0.8" height="15.0" fill="rgb(235,196,44)" rx="2" ry="2" />
<text  x="1159.67" y="431.5" ></text>
</g>
<g >
<title>cpuidle_select (10 samples, 0.17%)</title><rect x="99.4" y="421" width="2.0" height="15.0" fill="rgb(229,170,35)" rx="2" ry="2" />
<text  x="102.35" y="431.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.02%)</title><rect x="62.3" y="421" width="0.2" height="15.0" fill="rgb(206,157,2)" rx="2" ry="2" />
<text  x="65.34" y="431.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (20 samples, 0.35%)</title><rect x="222.9" y="501" width="4.0" height="15.0" fill="rgb(214,92,44)" rx="2" ry="2" />
<text  x="225.85" y="511.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.02%)</title><rect x="723.2" y="405" width="0.2" height="15.0" fill="rgb(225,7,31)" rx="2" ry="2" />
<text  x="726.19" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (35 samples, 0.61%)</title><rect x="716.2" y="453" width="7.2" height="15.0" fill="rgb(214,36,31)" rx="2" ry="2" />
<text  x="719.24" y="463.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (5 samples, 0.09%)</title><rect x="1186.9" y="277" width="1.1" height="15.0" fill="rgb(222,99,6)" rx="2" ry="2" />
<text  x="1189.93" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (12 samples, 0.21%)</title><rect x="328.6" y="437" width="2.4" height="15.0" fill="rgb(235,117,38)" rx="2" ry="2" />
<text  x="331.57" y="447.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2 samples, 0.03%)</title><rect x="16.1" y="389" width="0.4" height="15.0" fill="rgb(244,166,46)" rx="2" ry="2" />
<text  x="19.13" y="399.5" ></text>
</g>
<g >
<title>migrate_pages (3 samples, 0.05%)</title><rect x="63.2" y="421" width="0.6" height="15.0" fill="rgb(216,46,21)" rx="2" ry="2" />
<text  x="66.16" y="431.5" ></text>
</g>
<g >
<title>udp_unicast_rcv_skb (1 samples, 0.02%)</title><rect x="1135.4" y="149" width="0.2" height="15.0" fill="rgb(209,199,17)" rx="2" ry="2" />
<text  x="1138.41" y="159.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="1014.6" y="485" width="0.2" height="15.0" fill="rgb(210,182,3)" rx="2" ry="2" />
<text  x="1017.56" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (28 samples, 0.49%)</title><rect x="551.0" y="485" width="5.8" height="15.0" fill="rgb(213,24,30)" rx="2" ry="2" />
<text  x="554.03" y="495.5" ></text>
</g>
<g >
<title>llist_add_batch (1 samples, 0.02%)</title><rect x="173.6" y="261" width="0.2" height="15.0" fill="rgb(243,6,54)" rx="2" ry="2" />
<text  x="176.58" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (15 samples, 0.26%)</title><rect x="561.9" y="469" width="3.0" height="15.0" fill="rgb(230,34,33)" rx="2" ry="2" />
<text  x="564.87" y="479.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.02%)</title><rect x="329.6" y="309" width="0.2" height="15.0" fill="rgb(241,215,35)" rx="2" ry="2" />
<text  x="332.59" y="319.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="64.4" y="389" width="0.2" height="15.0" fill="rgb(227,138,36)" rx="2" ry="2" />
<text  x="67.39" y="399.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="563.1" y="389" width="0.4" height="15.0" fill="rgb(208,134,10)" rx="2" ry="2" />
<text  x="566.09" y="399.5" ></text>
</g>
<g >
<title>NaClLog (29 samples, 0.50%)</title><rect x="241.7" y="501" width="5.9" height="15.0" fill="rgb(247,222,46)" rx="2" ry="2" />
<text  x="244.67" y="511.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="16.3" y="341" width="0.2" height="15.0" fill="rgb(214,112,44)" rx="2" ry="2" />
<text  x="19.34" y="351.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="174.4" y="293" width="0.2" height="15.0" fill="rgb(207,187,4)" rx="2" ry="2" />
<text  x="177.39" y="303.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (1 samples, 0.02%)</title><rect x="250.5" y="501" width="0.2" height="15.0" fill="rgb(249,114,21)" rx="2" ry="2" />
<text  x="253.46" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (3 samples, 0.05%)</title><rect x="1126.6" y="453" width="0.6" height="15.0" fill="rgb(234,142,51)" rx="2" ry="2" />
<text  x="1129.61" y="463.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (24 samples, 0.42%)</title><rect x="160.5" y="437" width="4.9" height="15.0" fill="rgb(205,129,0)" rx="2" ry="2" />
<text  x="163.49" y="447.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1173.8" y="181" width="0.3" height="15.0" fill="rgb(254,96,25)" rx="2" ry="2" />
<text  x="1176.85" y="191.5" ></text>
</g>
<g >
<title>ip_list_rcv (1 samples, 0.02%)</title><rect x="64.4" y="181" width="0.2" height="15.0" fill="rgb(217,126,34)" rx="2" ry="2" />
<text  x="67.39" y="191.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (1 samples, 0.02%)</title><rect x="101.4" y="421" width="0.2" height="15.0" fill="rgb(230,201,2)" rx="2" ry="2" />
<text  x="104.40" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (146 samples, 2.53%)</title><rect x="817.5" y="485" width="29.8" height="15.0" fill="rgb(217,97,19)" rx="2" ry="2" />
<text  x="820.45" y="495.5" >co..</text>
</g>
<g >
<title>cpuidle_enter_state (172 samples, 2.98%)</title><rect x="64.2" y="405" width="35.2" height="15.0" fill="rgb(221,191,54)" rx="2" ry="2" />
<text  x="67.18" y="415.5" >cp..</text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 1.11%)</title><rect x="175.0" y="261" width="13.1" height="15.0" fill="rgb(239,188,22)" rx="2" ry="2" />
<text  x="178.01" y="271.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (10 samples, 0.17%)</title><rect x="148.0" y="245" width="2.1" height="15.0" fill="rgb(215,48,26)" rx="2" ry="2" />
<text  x="151.02" y="255.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1161.8" y="421" width="0.2" height="15.0" fill="rgb(215,45,21)" rx="2" ry="2" />
<text  x="1164.78" y="431.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.02%)</title><rect x="130.6" y="357" width="0.2" height="15.0" fill="rgb(242,0,43)" rx="2" ry="2" />
<text  x="133.64" y="367.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (3 samples, 0.05%)</title><rect x="100.8" y="357" width="0.6" height="15.0" fill="rgb(243,61,51)" rx="2" ry="2" />
<text  x="103.78" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (111 samples, 1.92%)</title><rect x="987.2" y="453" width="22.7" height="15.0" fill="rgb(222,210,20)" rx="2" ry="2" />
<text  x="990.17" y="463.5" >c..</text>
</g>
<g >
<title>ext4_mark_iloc_dirty (2 samples, 0.03%)</title><rect x="188.7" y="197" width="0.4" height="15.0" fill="rgb(251,17,2)" rx="2" ry="2" />
<text  x="191.71" y="207.5" ></text>
</g>
<g >
<title>ksys_write (8 samples, 0.14%)</title><rect x="188.1" y="437" width="1.6" height="15.0" fill="rgb(246,52,37)" rx="2" ry="2" />
<text  x="191.09" y="447.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (127 samples, 2.20%)</title><rect x="15.9" y="501" width="26.0" height="15.0" fill="rgb(211,147,26)" rx="2" ry="2" />
<text  x="18.93" y="511.5" >s..</text>
</g>
<g >
<title>ktime_get (2 samples, 0.03%)</title><rect x="1188.4" y="357" width="0.4" height="15.0" fill="rgb(205,43,30)" rx="2" ry="2" />
<text  x="1191.36" y="367.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (30 samples, 0.52%)</title><rect x="770.4" y="453" width="6.2" height="15.0" fill="rgb(253,198,27)" rx="2" ry="2" />
<text  x="773.43" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.02%)</title><rect x="157.6" y="389" width="0.2" height="15.0" fill="rgb(207,17,46)" rx="2" ry="2" />
<text  x="160.63" y="399.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="1173.8" y="213" width="0.3" height="15.0" fill="rgb(234,66,42)" rx="2" ry="2" />
<text  x="1176.85" y="223.5" ></text>
</g>
<g >
<title>CompareAndSwap (75 samples, 1.30%)</title><rect x="194.4" y="501" width="15.4" height="15.0" fill="rgb(242,96,32)" rx="2" ry="2" />
<text  x="197.43" y="511.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="1135.4" y="501" width="0.2" height="15.0" fill="rgb(245,52,36)" rx="2" ry="2" />
<text  x="1138.41" y="511.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="64.6" y="373" width="0.2" height="15.0" fill="rgb(250,142,16)" rx="2" ry="2" />
<text  x="67.59" y="383.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (53 samples, 0.92%)</title><rect x="26.6" y="373" width="10.8" height="15.0" fill="rgb(208,31,46)" rx="2" ry="2" />
<text  x="29.56" y="383.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.03%)</title><rect x="1107.4" y="341" width="0.4" height="15.0" fill="rgb(252,54,47)" rx="2" ry="2" />
<text  x="1110.39" y="351.5" ></text>
</g>
<g >
<title>__GI_execve (1 samples, 0.02%)</title><rect x="174.8" y="501" width="0.2" height="15.0" fill="rgb(228,218,45)" rx="2" ry="2" />
<text  x="177.80" y="511.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (28 samples, 0.49%)</title><rect x="716.9" y="421" width="5.7" height="15.0" fill="rgb(230,176,11)" rx="2" ry="2" />
<text  x="719.85" y="431.5" ></text>
</g>
<g >
<title>event_function (64 samples, 1.11%)</title><rect x="175.0" y="309" width="13.1" height="15.0" fill="rgb(239,122,11)" rx="2" ry="2" />
<text  x="178.01" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1101.5" y="293" width="0.2" height="15.0" fill="rgb(212,91,13)" rx="2" ry="2" />
<text  x="1104.46" y="303.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (650 samples, 11.26%)</title><rect x="878.0" y="469" width="132.9" height="15.0" fill="rgb(214,207,46)" rx="2" ry="2" />
<text  x="880.98" y="479.5" >ringbuf::ring_bu..</text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="154.4" y="357" width="0.2" height="15.0" fill="rgb(231,93,26)" rx="2" ry="2" />
<text  x="157.36" y="367.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (1 samples, 0.02%)</title><rect x="15.7" y="469" width="0.2" height="15.0" fill="rgb(216,127,32)" rx="2" ry="2" />
<text  x="18.73" y="479.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.07%)</title><rect x="329.0" y="373" width="0.8" height="15.0" fill="rgb(206,173,21)" rx="2" ry="2" />
<text  x="331.97" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="62.3" y="485" width="0.9" height="15.0" fill="rgb(253,167,0)" rx="2" ry="2" />
<text  x="65.34" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (3 samples, 0.05%)</title><rect x="1156.9" y="389" width="0.6" height="15.0" fill="rgb(224,225,13)" rx="2" ry="2" />
<text  x="1159.88" y="399.5" ></text>
</g>
<g >
<title>schedule_idle (14 samples, 0.24%)</title><rect x="1158.9" y="437" width="2.9" height="15.0" fill="rgb(248,58,34)" rx="2" ry="2" />
<text  x="1161.92" y="447.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.33%)</title><rect x="1097.8" y="469" width="3.9" height="15.0" fill="rgb(236,31,5)" rx="2" ry="2" />
<text  x="1100.78" y="479.5" ></text>
</g>
<g >
<title>menu_select (3 samples, 0.05%)</title><rect x="164.8" y="405" width="0.6" height="15.0" fill="rgb(250,94,4)" rx="2" ry="2" />
<text  x="167.78" y="415.5" ></text>
</g>
<g >
<title>dispatcher (155 samples, 2.69%)</title><rect x="541.0" y="501" width="31.7" height="15.0" fill="rgb(215,69,54)" rx="2" ry="2" />
<text  x="544.01" y="511.5" >di..</text>
</g>
<g >
<title>ThreadPoolForeg (568 samples, 9.84%)</title><rect x="41.9" y="517" width="116.1" height="15.0" fill="rgb(249,17,9)" rx="2" ry="2" />
<text  x="44.90" y="527.5" >ThreadPoolForeg</text>
</g>
<g >
<title>perf-exec (1 samples, 0.02%)</title><rect x="174.8" y="517" width="0.2" height="15.0" fill="rgb(231,37,42)" rx="2" ry="2" />
<text  x="177.80" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="135.5" y="293" width="0.7" height="15.0" fill="rgb(224,31,15)" rx="2" ry="2" />
<text  x="138.54" y="303.5" ></text>
</g>
<g >
<title>std::thread::panicking (4 samples, 0.07%)</title><rect x="1108.4" y="437" width="0.8" height="15.0" fill="rgb(241,79,35)" rx="2" ry="2" />
<text  x="1111.42" y="447.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="62.3" y="373" width="0.2" height="15.0" fill="rgb(214,97,36)" rx="2" ry="2" />
<text  x="65.34" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (8 samples, 0.14%)</title><rect x="99.8" y="389" width="1.6" height="15.0" fill="rgb(212,197,1)" rx="2" ry="2" />
<text  x="102.76" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="1015.8" y="485" width="0.6" height="15.0" fill="rgb(215,43,43)" rx="2" ry="2" />
<text  x="1018.79" y="495.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (2 samples, 0.03%)</title><rect x="1015.8" y="453" width="0.4" height="15.0" fill="rgb(214,181,15)" rx="2" ry="2" />
<text  x="1018.79" y="463.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="1126.4" y="421" width="0.2" height="15.0" fill="rgb(210,106,43)" rx="2" ry="2" />
<text  x="1129.41" y="431.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (7 samples, 0.12%)</title><rect x="249.0" y="501" width="1.5" height="15.0" fill="rgb(215,179,23)" rx="2" ry="2" />
<text  x="252.03" y="511.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.02%)</title><rect x="166.0" y="357" width="0.2" height="15.0" fill="rgb(237,194,38)" rx="2" ry="2" />
<text  x="169.01" y="367.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (17 samples, 0.29%)</title><rect x="167.4" y="341" width="3.5" height="15.0" fill="rgb(223,4,54)" rx="2" ry="2" />
<text  x="170.44" y="351.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (117 samples, 2.03%)</title><rect x="106.5" y="341" width="23.9" height="15.0" fill="rgb(233,52,6)" rx="2" ry="2" />
<text  x="109.51" y="351.5" >c..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (19 samples, 0.33%)</title><rect x="1097.8" y="485" width="3.9" height="15.0" fill="rgb(250,213,2)" rx="2" ry="2" />
<text  x="1100.78" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (1 samples, 0.02%)</title><rect x="1179.8" y="357" width="0.2" height="15.0" fill="rgb(243,166,10)" rx="2" ry="2" />
<text  x="1182.78" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (29 samples, 0.50%)</title><rect x="1102.5" y="469" width="5.9" height="15.0" fill="rgb(242,93,0)" rx="2" ry="2" />
<text  x="1105.49" y="479.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1101.5" y="357" width="0.2" height="15.0" fill="rgb(223,222,4)" rx="2" ry="2" />
<text  x="1104.46" y="367.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.24%)</title><rect x="1033.4" y="469" width="2.8" height="15.0" fill="rgb(215,74,27)" rx="2" ry="2" />
<text  x="1036.38" y="479.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (2 samples, 0.03%)</title><rect x="165.0" y="357" width="0.4" height="15.0" fill="rgb(220,211,25)" rx="2" ry="2" />
<text  x="167.99" y="367.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="1101.7" y="469" width="0.8" height="15.0" fill="rgb(247,192,40)" rx="2" ry="2" />
<text  x="1104.67" y="479.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.14%)</title><rect x="1103.9" y="405" width="1.7" height="15.0" fill="rgb(231,13,0)" rx="2" ry="2" />
<text  x="1106.92" y="415.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.02%)</title><rect x="146.6" y="261" width="0.2" height="15.0" fill="rgb(206,26,27)" rx="2" ry="2" />
<text  x="149.59" y="271.5" ></text>
</g>
<g >
<title>exc_page_fault (12 samples, 0.21%)</title><rect x="328.6" y="469" width="2.4" height="15.0" fill="rgb(220,62,8)" rx="2" ry="2" />
<text  x="331.57" y="479.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="129.0" y="309" width="0.4" height="15.0" fill="rgb(233,36,11)" rx="2" ry="2" />
<text  x="132.00" y="319.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.02%)</title><rect x="172.1" y="357" width="0.2" height="15.0" fill="rgb(214,157,44)" rx="2" ry="2" />
<text  x="175.15" y="367.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (3 samples, 0.05%)</title><rect x="591.5" y="469" width="0.6" height="15.0" fill="rgb(232,228,39)" rx="2" ry="2" />
<text  x="594.51" y="479.5" ></text>
</g>
<g >
<title>poll_idle (23 samples, 0.40%)</title><rect x="1151.8" y="389" width="4.7" height="15.0" fill="rgb(253,216,29)" rx="2" ry="2" />
<text  x="1154.76" y="399.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (13 samples, 0.23%)</title><rect x="228.4" y="501" width="2.6" height="15.0" fill="rgb(228,72,14)" rx="2" ry="2" />
<text  x="231.37" y="511.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (106 samples, 1.84%)</title><rect x="1135.8" y="437" width="21.7" height="15.0" fill="rgb(237,113,29)" rx="2" ry="2" />
<text  x="1138.82" y="447.5" >c..</text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1135.4" y="485" width="0.2" height="15.0" fill="rgb(251,69,12)" rx="2" ry="2" />
<text  x="1138.41" y="495.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="15.7" y="373" width="0.2" height="15.0" fill="rgb(215,6,26)" rx="2" ry="2" />
<text  x="18.73" y="383.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (3 samples, 0.05%)</title><rect x="1126.6" y="469" width="0.6" height="15.0" fill="rgb(213,13,2)" rx="2" ry="2" />
<text  x="1129.61" y="479.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="64.6" y="293" width="0.2" height="15.0" fill="rgb(247,60,41)" rx="2" ry="2" />
<text  x="67.59" y="303.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.05%)</title><rect x="785.1" y="421" width="0.7" height="15.0" fill="rgb(226,42,5)" rx="2" ry="2" />
<text  x="788.15" y="431.5" ></text>
</g>
<g >
<title>alx_poll (1 samples, 0.02%)</title><rect x="64.4" y="261" width="0.2" height="15.0" fill="rgb(240,74,41)" rx="2" ry="2" />
<text  x="67.39" y="271.5" ></text>
</g>
<g >
<title>proactive_compact_node (3 samples, 0.05%)</title><rect x="63.2" y="453" width="0.6" height="15.0" fill="rgb(250,81,7)" rx="2" ry="2" />
<text  x="66.16" y="463.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (18 samples, 0.31%)</title><rect x="813.8" y="485" width="3.7" height="15.0" fill="rgb(240,85,7)" rx="2" ry="2" />
<text  x="816.77" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1178.5" y="293" width="0.3" height="15.0" fill="rgb(214,204,45)" rx="2" ry="2" />
<text  x="1181.55" y="303.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (5 samples, 0.09%)</title><rect x="290.1" y="501" width="1.0" height="15.0" fill="rgb(227,33,38)" rx="2" ry="2" />
<text  x="293.12" y="511.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="1101.5" y="325" width="0.2" height="15.0" fill="rgb(214,50,35)" rx="2" ry="2" />
<text  x="1104.46" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="191.6" y="437" width="0.2" height="15.0" fill="rgb(223,143,24)" rx="2" ry="2" />
<text  x="194.57" y="447.5" ></text>
</g>
<g >
<title>[perf-697.map] (6 samples, 0.10%)</title><rect x="291.4" y="501" width="1.2" height="15.0" fill="rgb(231,160,53)" rx="2" ry="2" />
<text  x="294.35" y="511.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.31%)</title><rect x="1032.6" y="485" width="3.6" height="15.0" fill="rgb(205,80,40)" rx="2" ry="2" />
<text  x="1035.56" y="495.5" ></text>
</g>
<g >
<title>poll_idle (10 samples, 0.17%)</title><rect x="167.9" y="325" width="2.0" height="15.0" fill="rgb(225,141,46)" rx="2" ry="2" />
<text  x="170.85" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="188.1" y="181" width="0.2" height="15.0" fill="rgb(229,36,39)" rx="2" ry="2" />
<text  x="191.09" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="100.6" y="357" width="0.2" height="15.0" fill="rgb(251,158,6)" rx="2" ry="2" />
<text  x="103.58" y="367.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.02%)</title><rect x="1189.8" y="389" width="0.2" height="15.0" fill="rgb(205,128,6)" rx="2" ry="2" />
<text  x="1192.80" y="399.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="1016.0" y="421" width="0.2" height="15.0" fill="rgb(229,195,21)" rx="2" ry="2" />
<text  x="1019.00" y="431.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.02%)</title><rect x="36.0" y="309" width="0.2" height="15.0" fill="rgb(246,9,20)" rx="2" ry="2" />
<text  x="38.97" y="319.5" ></text>
</g>
<g >
<title>rcu_idle_exit (3 samples, 0.05%)</title><rect x="1174.3" y="325" width="0.6" height="15.0" fill="rgb(214,210,13)" rx="2" ry="2" />
<text  x="1177.26" y="335.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (866 samples, 15.01%)</title><rect x="603.6" y="501" width="177.0" height="15.0" fill="rgb(254,199,5)" rx="2" ry="2" />
<text  x="606.58" y="511.5" >ringbuf::consumer::Cons..</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (79 samples, 1.37%)</title><rect x="1016.4" y="469" width="16.2" height="15.0" fill="rgb(231,31,52)" rx="2" ry="2" />
<text  x="1019.40" y="479.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="1016.0" y="437" width="0.2" height="15.0" fill="rgb(225,63,52)" rx="2" ry="2" />
<text  x="1019.00" y="447.5" ></text>
</g>
<g >
<title>cpuidle_select (10 samples, 0.17%)</title><rect x="35.4" y="357" width="2.0" height="15.0" fill="rgb(214,128,31)" rx="2" ry="2" />
<text  x="38.35" y="367.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.03%)</title><rect x="1188.8" y="357" width="0.4" height="15.0" fill="rgb(234,157,39)" rx="2" ry="2" />
<text  x="1191.77" y="367.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4 samples, 0.07%)</title><rect x="329.0" y="341" width="0.8" height="15.0" fill="rgb(243,36,43)" rx="2" ry="2" />
<text  x="331.97" y="351.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (7 samples, 0.12%)</title><rect x="1157.5" y="437" width="1.4" height="15.0" fill="rgb(238,130,53)" rx="2" ry="2" />
<text  x="1160.49" y="447.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="16.1" y="341" width="0.2" height="15.0" fill="rgb(220,215,1)" rx="2" ry="2" />
<text  x="19.13" y="351.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (1 samples, 0.02%)</title><rect x="1135.4" y="245" width="0.2" height="15.0" fill="rgb(207,211,25)" rx="2" ry="2" />
<text  x="1138.41" y="255.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="64.6" y="277" width="0.2" height="15.0" fill="rgb(219,11,7)" rx="2" ry="2" />
<text  x="67.59" y="287.5" ></text>
</g>
<g >
<title>poll_idle (45 samples, 0.78%)</title><rect x="1165.1" y="325" width="9.2" height="15.0" fill="rgb(230,56,1)" rx="2" ry="2" />
<text  x="1168.05" y="335.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (2 samples, 0.03%)</title><rect x="1160.4" y="309" width="0.4" height="15.0" fill="rgb(206,80,11)" rx="2" ry="2" />
<text  x="1163.35" y="319.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.02%)</title><rect x="174.0" y="357" width="0.2" height="15.0" fill="rgb(209,7,33)" rx="2" ry="2" />
<text  x="176.99" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (158 samples, 2.74%)</title><rect x="1065.5" y="485" width="32.3" height="15.0" fill="rgb(241,52,49)" rx="2" ry="2" />
<text  x="1068.48" y="495.5" >co..</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="754.7" y="309" width="0.2" height="15.0" fill="rgb(214,86,27)" rx="2" ry="2" />
<text  x="757.68" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.24%)</title><rect x="562.1" y="453" width="2.8" height="15.0" fill="rgb(214,8,21)" rx="2" ry="2" />
<text  x="565.07" y="463.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (1 samples, 0.02%)</title><rect x="1135.4" y="325" width="0.2" height="15.0" fill="rgb(228,38,46)" rx="2" ry="2" />
<text  x="1138.41" y="335.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.02%)</title><rect x="166.8" y="453" width="0.2" height="15.0" fill="rgb(232,14,43)" rx="2" ry="2" />
<text  x="169.83" y="463.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (9 samples, 0.16%)</title><rect x="221.0" y="501" width="1.9" height="15.0" fill="rgb(233,165,51)" rx="2" ry="2" />
<text  x="224.01" y="511.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (1 samples, 0.02%)</title><rect x="1135.4" y="277" width="0.2" height="15.0" fill="rgb(226,209,22)" rx="2" ry="2" />
<text  x="1138.41" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (2 samples, 0.03%)</title><rect x="1032.6" y="421" width="0.4" height="15.0" fill="rgb(248,73,0)" rx="2" ry="2" />
<text  x="1035.56" y="431.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="189.5" y="261" width="0.2" height="15.0" fill="rgb(224,185,46)" rx="2" ry="2" />
<text  x="192.53" y="271.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="1102.1" y="405" width="0.2" height="15.0" fill="rgb(252,62,46)" rx="2" ry="2" />
<text  x="1105.08" y="415.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.02%)</title><rect x="165.8" y="421" width="0.2" height="15.0" fill="rgb(236,213,36)" rx="2" ry="2" />
<text  x="168.81" y="431.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.02%)</title><rect x="156.2" y="309" width="0.2" height="15.0" fill="rgb(229,222,10)" rx="2" ry="2" />
<text  x="159.20" y="319.5" ></text>
</g>
<g >
<title>kick_ilb (2 samples, 0.03%)</title><rect x="173.4" y="293" width="0.4" height="15.0" fill="rgb(249,192,5)" rx="2" ry="2" />
<text  x="176.37" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (29 samples, 0.50%)</title><rect x="1102.5" y="453" width="5.9" height="15.0" fill="rgb(220,165,34)" rx="2" ry="2" />
<text  x="1105.49" y="463.5" ></text>
</g>
<g >
<title>set_next_entity (1 samples, 0.02%)</title><rect x="1161.2" y="389" width="0.2" height="15.0" fill="rgb(244,169,45)" rx="2" ry="2" />
<text  x="1164.17" y="399.5" ></text>
</g>
<g >
<title>menu_select (4 samples, 0.07%)</title><rect x="1156.7" y="405" width="0.8" height="15.0" fill="rgb(241,36,47)" rx="2" ry="2" />
<text  x="1159.67" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="1102.1" y="389" width="0.2" height="15.0" fill="rgb(235,41,26)" rx="2" ry="2" />
<text  x="1105.08" y="399.5" ></text>
</g>
<g >
<title>cpuidle_select (20 samples, 0.35%)</title><rect x="1175.5" y="357" width="4.1" height="15.0" fill="rgb(213,22,53)" rx="2" ry="2" />
<text  x="1178.48" y="367.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (18 samples, 0.31%)</title><rect x="813.8" y="469" width="3.7" height="15.0" fill="rgb(229,113,7)" rx="2" ry="2" />
<text  x="816.77" y="479.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (4 samples, 0.07%)</title><rect x="36.6" y="293" width="0.8" height="15.0" fill="rgb(247,213,9)" rx="2" ry="2" />
<text  x="39.58" y="303.5" ></text>
</g>
<g >
<title>cpuidle_enter (21 samples, 0.36%)</title><rect x="160.5" y="421" width="4.3" height="15.0" fill="rgb(207,79,21)" rx="2" ry="2" />
<text  x="163.49" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.02%)</title><rect x="63.0" y="469" width="0.2" height="15.0" fill="rgb(219,128,10)" rx="2" ry="2" />
<text  x="65.96" y="479.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="329.2" y="325" width="0.4" height="15.0" fill="rgb(237,211,1)" rx="2" ry="2" />
<text  x="332.18" y="335.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 1.11%)</title><rect x="175.0" y="229" width="13.1" height="15.0" fill="rgb(231,70,26)" rx="2" ry="2" />
<text  x="178.01" y="239.5" ></text>
</g>
<g >
<title>pick_next_task_fair (11 samples, 0.19%)</title><rect x="1159.1" y="405" width="2.3" height="15.0" fill="rgb(231,82,43)" rx="2" ry="2" />
<text  x="1162.12" y="415.5" ></text>
</g>
<g >
<title>NaClSysWrite (70 samples, 1.21%)</title><rect x="257.2" y="501" width="14.3" height="15.0" fill="rgb(212,80,35)" rx="2" ry="2" />
<text  x="260.20" y="511.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (1 samples, 0.02%)</title><rect x="564.9" y="453" width="0.2" height="15.0" fill="rgb(222,59,18)" rx="2" ry="2" />
<text  x="567.93" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (1 samples, 0.02%)</title><rect x="1179.8" y="341" width="0.2" height="15.0" fill="rgb(247,36,38)" rx="2" ry="2" />
<text  x="1182.78" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (25 samples, 0.43%)</title><rect x="1103.3" y="437" width="5.1" height="15.0" fill="rgb(233,6,6)" rx="2" ry="2" />
<text  x="1106.30" y="447.5" ></text>
</g>
<g >
<title>ext4_inode_csum (1 samples, 0.02%)</title><rect x="188.9" y="149" width="0.2" height="15.0" fill="rgb(240,223,1)" rx="2" ry="2" />
<text  x="191.91" y="159.5" ></text>
</g>
<g >
<title>ip_list_rcv_finish.constprop.0 (1 samples, 0.02%)</title><rect x="64.4" y="149" width="0.2" height="15.0" fill="rgb(206,108,20)" rx="2" ry="2" />
<text  x="67.39" y="159.5" ></text>
</g>
<g >
<title>sel_ldr (4,585 samples, 79.45%)</title><rect x="189.7" y="517" width="937.5" height="15.0" fill="rgb(251,72,29)" rx="2" ry="2" />
<text  x="192.73" y="527.5" >sel_ldr</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (124 samples, 2.15%)</title><rect x="1010.9" y="501" width="25.3" height="15.0" fill="rgb(214,62,24)" rx="2" ry="2" />
<text  x="1013.88" y="511.5" >r..</text>
</g>
<g >
<title>ext4_buffered_write_iter (8 samples, 0.14%)</title><rect x="188.1" y="309" width="1.6" height="15.0" fill="rgb(230,171,48)" rx="2" ry="2" />
<text  x="191.09" y="319.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="15.7" y="421" width="0.2" height="15.0" fill="rgb(254,221,0)" rx="2" ry="2" />
<text  x="18.73" y="431.5" ></text>
</g>
<g >
<title>do_idle (37 samples, 0.64%)</title><rect x="167.0" y="389" width="7.6" height="15.0" fill="rgb(207,188,4)" rx="2" ry="2" />
<text  x="170.03" y="399.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.05%)</title><rect x="172.1" y="373" width="0.7" height="15.0" fill="rgb(240,141,32)" rx="2" ry="2" />
<text  x="175.15" y="383.5" ></text>
</g>
<g >
<title>handle_pte_fault (10 samples, 0.17%)</title><rect x="328.8" y="405" width="2.0" height="15.0" fill="rgb(206,72,38)" rx="2" ry="2" />
<text  x="331.77" y="415.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.02%)</title><rect x="146.6" y="277" width="0.2" height="15.0" fill="rgb(213,181,32)" rx="2" ry="2" />
<text  x="149.59" y="287.5" ></text>
</g>
<g >
<title>arch_call_rest_init (38 samples, 0.66%)</title><rect x="167.0" y="437" width="7.8" height="15.0" fill="rgb(230,4,2)" rx="2" ry="2" />
<text  x="170.03" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (7 samples, 0.12%)</title><rect x="1106.8" y="389" width="1.4" height="15.0" fill="rgb(241,186,0)" rx="2" ry="2" />
<text  x="1109.78" y="399.5" ></text>
</g>
<g >
<title>generic_perform_write (8 samples, 0.14%)</title><rect x="188.1" y="293" width="1.6" height="15.0" fill="rgb(207,5,39)" rx="2" ry="2" />
<text  x="191.09" y="303.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="563.5" y="357" width="0.2" height="15.0" fill="rgb(219,172,31)" rx="2" ry="2" />
<text  x="566.50" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (28 samples, 0.49%)</title><rect x="551.0" y="453" width="5.8" height="15.0" fill="rgb(211,126,29)" rx="2" ry="2" />
<text  x="554.03" y="463.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.05%)</title><rect x="1189.2" y="389" width="0.6" height="15.0" fill="rgb(229,112,37)" rx="2" ry="2" />
<text  x="1192.18" y="399.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="1015.8" y="469" width="0.6" height="15.0" fill="rgb(211,96,14)" rx="2" ry="2" />
<text  x="1018.79" y="479.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="330.6" y="373" width="0.2" height="15.0" fill="rgb(205,78,9)" rx="2" ry="2" />
<text  x="333.61" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.10%)</title><rect x="563.7" y="373" width="1.2" height="15.0" fill="rgb(241,71,33)" rx="2" ry="2" />
<text  x="566.71" y="383.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.03%)</title><rect x="41.5" y="389" width="0.4" height="15.0" fill="rgb(243,77,1)" rx="2" ry="2" />
<text  x="44.49" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (19 samples, 0.33%)</title><rect x="1097.8" y="437" width="3.9" height="15.0" fill="rgb(251,159,43)" rx="2" ry="2" />
<text  x="1100.78" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.07%)</title><rect x="329.0" y="357" width="0.8" height="15.0" fill="rgb(206,63,4)" rx="2" ry="2" />
<text  x="331.97" y="367.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.03%)</title><rect x="191.8" y="437" width="0.4" height="15.0" fill="rgb(209,0,51)" rx="2" ry="2" />
<text  x="194.77" y="447.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1135.4" y="405" width="0.2" height="15.0" fill="rgb(253,151,9)" rx="2" ry="2" />
<text  x="1138.41" y="415.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="16.1" y="325" width="0.2" height="15.0" fill="rgb(210,29,38)" rx="2" ry="2" />
<text  x="19.13" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10 samples, 0.17%)</title><rect x="328.8" y="421" width="2.0" height="15.0" fill="rgb(220,180,27)" rx="2" ry="2" />
<text  x="331.77" y="431.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (6 samples, 0.10%)</title><rect x="236.6" y="501" width="1.2" height="15.0" fill="rgb(247,185,22)" rx="2" ry="2" />
<text  x="239.55" y="511.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="174.0" y="341" width="0.2" height="15.0" fill="rgb(246,119,28)" rx="2" ry="2" />
<text  x="176.99" y="351.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="63.0" y="453" width="0.2" height="15.0" fill="rgb(250,168,46)" rx="2" ry="2" />
<text  x="65.96" y="463.5" ></text>
</g>
<g >
<title>kick_ilb (7 samples, 0.12%)</title><rect x="39.4" y="293" width="1.5" height="15.0" fill="rgb(213,228,14)" rx="2" ry="2" />
<text  x="42.44" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (24 samples, 0.42%)</title><rect x="1103.3" y="421" width="4.9" height="15.0" fill="rgb(241,43,13)" rx="2" ry="2" />
<text  x="1106.30" y="431.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="188.5" y="261" width="0.2" height="15.0" fill="rgb(212,132,24)" rx="2" ry="2" />
<text  x="191.50" y="271.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="36.8" y="277" width="0.4" height="15.0" fill="rgb(225,48,21)" rx="2" ry="2" />
<text  x="39.79" y="287.5" ></text>
</g>
<g >
<title>_perf_event_enable (64 samples, 1.11%)</title><rect x="175.0" y="389" width="13.1" height="15.0" fill="rgb(226,209,17)" rx="2" ry="2" />
<text  x="178.01" y="399.5" ></text>
</g>
<g >
<title>start_kernel (76 samples, 1.32%)</title><rect x="26.4" y="453" width="15.5" height="15.0" fill="rgb(211,126,44)" rx="2" ry="2" />
<text  x="29.36" y="463.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.05%)</title><rect x="193.8" y="469" width="0.6" height="15.0" fill="rgb(241,76,12)" rx="2" ry="2" />
<text  x="196.82" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="153.5" y="357" width="0.7" height="15.0" fill="rgb(232,183,7)" rx="2" ry="2" />
<text  x="156.54" y="367.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_cbuf (1 samples, 0.02%)</title><rect x="1036.2" y="485" width="0.2" height="15.0" fill="rgb(238,36,12)" rx="2" ry="2" />
<text  x="1039.24" y="495.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (4 samples, 0.07%)</title><rect x="592.1" y="485" width="0.8" height="15.0" fill="rgb(216,112,53)" rx="2" ry="2" />
<text  x="595.13" y="495.5" ></text>
</g>
<g >
<title>__schedule (55 samples, 0.95%)</title><rect x="142.3" y="357" width="11.2" height="15.0" fill="rgb(232,110,41)" rx="2" ry="2" />
<text  x="145.29" y="367.5" ></text>
</g>
<g >
<title>__schedule (13 samples, 0.23%)</title><rect x="1159.1" y="421" width="2.7" height="15.0" fill="rgb(213,123,40)" rx="2" ry="2" />
<text  x="1162.12" y="431.5" ></text>
</g>
<g >
<title>newidle_balance (6 samples, 0.10%)</title><rect x="102.2" y="389" width="1.2" height="15.0" fill="rgb(214,135,40)" rx="2" ry="2" />
<text  x="105.22" y="399.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (3 samples, 0.05%)</title><rect x="591.5" y="485" width="0.6" height="15.0" fill="rgb(226,69,51)" rx="2" ry="2" />
<text  x="594.51" y="495.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.02%)</title><rect x="1157.3" y="357" width="0.2" height="15.0" fill="rgb(243,128,15)" rx="2" ry="2" />
<text  x="1160.28" y="367.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (60 samples, 1.04%)</title><rect x="274.0" y="501" width="12.2" height="15.0" fill="rgb(210,150,15)" rx="2" ry="2" />
<text  x="276.97" y="511.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3 samples, 0.05%)</title><rect x="540.4" y="501" width="0.6" height="15.0" fill="rgb(239,212,8)" rx="2" ry="2" />
<text  x="543.40" y="511.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="16.3" y="293" width="0.2" height="15.0" fill="rgb(216,228,52)" rx="2" ry="2" />
<text  x="19.34" y="303.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (20 samples, 0.35%)</title><rect x="776.6" y="469" width="4.0" height="15.0" fill="rgb(220,59,9)" rx="2" ry="2" />
<text  x="779.56" y="479.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="1135.4" y="437" width="0.2" height="15.0" fill="rgb(236,66,20)" rx="2" ry="2" />
<text  x="1138.41" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (4 samples, 0.07%)</title><rect x="1188.4" y="373" width="0.8" height="15.0" fill="rgb(244,149,4)" rx="2" ry="2" />
<text  x="1191.36" y="383.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (7 samples, 0.12%)</title><rect x="233.5" y="501" width="1.4" height="15.0" fill="rgb(247,16,52)" rx="2" ry="2" />
<text  x="236.49" y="511.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.03%)</title><rect x="103.0" y="325" width="0.4" height="15.0" fill="rgb(236,41,3)" rx="2" ry="2" />
<text  x="106.03" y="335.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="64.4" y="325" width="0.2" height="15.0" fill="rgb(220,4,41)" rx="2" ry="2" />
<text  x="67.39" y="335.5" ></text>
</g>
<g >
<title>llist_reverse_order (4 samples, 0.07%)</title><rect x="1180.8" y="357" width="0.8" height="15.0" fill="rgb(212,177,52)" rx="2" ry="2" />
<text  x="1183.80" y="367.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.02%)</title><rect x="1185.7" y="261" width="0.2" height="15.0" fill="rgb(252,118,36)" rx="2" ry="2" />
<text  x="1188.71" y="271.5" ></text>
</g>
<g >
<title>generic_exec_single (3 samples, 0.05%)</title><rect x="1186.9" y="261" width="0.6" height="15.0" fill="rgb(210,111,43)" rx="2" ry="2" />
<text  x="1189.93" y="271.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (2 samples, 0.03%)</title><rect x="173.4" y="309" width="0.4" height="15.0" fill="rgb(215,205,39)" rx="2" ry="2" />
<text  x="176.37" y="319.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.02%)</title><rect x="1016.2" y="453" width="0.2" height="15.0" fill="rgb(253,59,35)" rx="2" ry="2" />
<text  x="1019.20" y="463.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="1176.5" y="325" width="0.2" height="15.0" fill="rgb(247,86,19)" rx="2" ry="2" />
<text  x="1179.50" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (26 samples, 0.45%)</title><rect x="580.1" y="421" width="5.3" height="15.0" fill="rgb(229,190,3)" rx="2" ry="2" />
<text  x="583.06" y="431.5" ></text>
</g>
<g >
<title>get_typical_interval (2 samples, 0.03%)</title><rect x="171.1" y="325" width="0.4" height="15.0" fill="rgb(228,36,35)" rx="2" ry="2" />
<text  x="174.12" y="335.5" ></text>
</g>
<g >
<title>menu_select (10 samples, 0.17%)</title><rect x="35.4" y="341" width="2.0" height="15.0" fill="rgb(254,1,0)" rx="2" ry="2" />
<text  x="38.35" y="351.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (2 samples, 0.03%)</title><rect x="231.0" y="501" width="0.4" height="15.0" fill="rgb(237,181,53)" rx="2" ry="2" />
<text  x="234.03" y="511.5" ></text>
</g>
<g >
<title>rest_init (263 samples, 4.56%)</title><rect x="104.3" y="421" width="53.7" height="15.0" fill="rgb(247,158,28)" rx="2" ry="2" />
<text  x="107.26" y="431.5" >rest_..</text>
</g>
<g >
<title>kick_ilb (7 samples, 0.12%)</title><rect x="1159.7" y="357" width="1.5" height="15.0" fill="rgb(247,47,17)" rx="2" ry="2" />
<text  x="1162.74" y="367.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (3 samples, 0.05%)</title><rect x="787.2" y="469" width="0.6" height="15.0" fill="rgb(250,166,0)" rx="2" ry="2" />
<text  x="790.19" y="479.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (51 samples, 0.88%)</title><rect x="15.9" y="437" width="10.5" height="15.0" fill="rgb(218,48,31)" rx="2" ry="2" />
<text  x="18.93" y="447.5" ></text>
</g>
<g >
<title>pick_next_task_fair (23 samples, 0.40%)</title><rect x="1183.3" y="341" width="4.7" height="15.0" fill="rgb(218,149,18)" rx="2" ry="2" />
<text  x="1186.25" y="351.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (3 samples, 0.05%)</title><rect x="330.0" y="373" width="0.6" height="15.0" fill="rgb(221,197,42)" rx="2" ry="2" />
<text  x="333.00" y="383.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="62.5" y="437" width="0.3" height="15.0" fill="rgb(229,169,52)" rx="2" ry="2" />
<text  x="65.55" y="447.5" ></text>
</g>
<g >
<title>poll_idle (23 samples, 0.40%)</title><rect x="94.4" y="389" width="4.7" height="15.0" fill="rgb(208,128,20)" rx="2" ry="2" />
<text  x="97.45" y="399.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.02%)</title><rect x="329.8" y="325" width="0.2" height="15.0" fill="rgb(211,221,18)" rx="2" ry="2" />
<text  x="332.79" y="335.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1101.5" y="277" width="0.2" height="15.0" fill="rgb(206,119,48)" rx="2" ry="2" />
<text  x="1104.46" y="287.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (83 samples, 1.44%)</title><rect x="1109.4" y="453" width="17.0" height="15.0" fill="rgb(213,218,12)" rx="2" ry="2" />
<text  x="1112.44" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (2 samples, 0.03%)</title><rect x="165.0" y="389" width="0.4" height="15.0" fill="rgb(216,3,14)" rx="2" ry="2" />
<text  x="167.99" y="399.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="1016.0" y="405" width="0.2" height="15.0" fill="rgb(225,227,43)" rx="2" ry="2" />
<text  x="1019.00" y="415.5" ></text>
</g>
<g >
<title>lind_write (46 samples, 0.80%)</title><rect x="592.9" y="501" width="9.5" height="15.0" fill="rgb(234,158,37)" rx="2" ry="2" />
<text  x="595.95" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (7 samples, 0.12%)</title><rect x="1106.8" y="373" width="1.4" height="15.0" fill="rgb(211,186,24)" rx="2" ry="2" />
<text  x="1109.78" y="383.5" ></text>
</g>
<g >
<title>cpu_startup_entry (76 samples, 1.32%)</title><rect x="26.4" y="405" width="15.5" height="15.0" fill="rgb(230,175,30)" rx="2" ry="2" />
<text  x="29.36" y="415.5" ></text>
</g>
<g >
<title>vfs_write (8 samples, 0.14%)</title><rect x="188.1" y="421" width="1.6" height="15.0" fill="rgb(224,90,36)" rx="2" ry="2" />
<text  x="191.09" y="431.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (2 samples, 0.03%)</title><rect x="134.9" y="309" width="0.4" height="15.0" fill="rgb(243,101,34)" rx="2" ry="2" />
<text  x="137.93" y="319.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="1107.4" y="325" width="0.4" height="15.0" fill="rgb(251,195,31)" rx="2" ry="2" />
<text  x="1110.39" y="335.5" ></text>
</g>
<g >
<title>poll_idle (10 samples, 0.17%)</title><rect x="162.3" y="389" width="2.1" height="15.0" fill="rgb(250,197,31)" rx="2" ry="2" />
<text  x="165.33" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.10%)</title><rect x="1105.6" y="405" width="1.2" height="15.0" fill="rgb(214,117,36)" rx="2" ry="2" />
<text  x="1108.55" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (51 samples, 0.88%)</title><rect x="15.9" y="469" width="10.5" height="15.0" fill="rgb(235,127,5)" rx="2" ry="2" />
<text  x="18.93" y="479.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.02%)</title><rect x="137.4" y="357" width="0.2" height="15.0" fill="rgb(235,131,49)" rx="2" ry="2" />
<text  x="140.39" y="367.5" ></text>
</g>
<g >
<title>nohz_csd_func (5 samples, 0.09%)</title><rect x="1181.6" y="357" width="1.0" height="15.0" fill="rgb(218,185,47)" rx="2" ry="2" />
<text  x="1184.62" y="367.5" ></text>
</g>
<g >
<title>cpuidle_enter (17 samples, 0.29%)</title><rect x="167.4" y="357" width="3.5" height="15.0" fill="rgb(222,32,15)" rx="2" ry="2" />
<text  x="170.44" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="1016.0" y="389" width="0.2" height="15.0" fill="rgb(217,217,29)" rx="2" ry="2" />
<text  x="1019.00" y="399.5" ></text>
</g>
<g >
<title>core::cmp::min (17 samples, 0.29%)</title><rect x="810.3" y="485" width="3.5" height="15.0" fill="rgb(235,7,6)" rx="2" ry="2" />
<text  x="813.30" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.09%)</title><rect x="191.2" y="453" width="1.0" height="15.0" fill="rgb(218,178,34)" rx="2" ry="2" />
<text  x="194.16" y="463.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (38 samples, 0.66%)</title><rect x="167.0" y="485" width="7.8" height="15.0" fill="rgb(234,174,8)" rx="2" ry="2" />
<text  x="170.03" y="495.5" ></text>
</g>
<g >
<title>schedule_idle (5 samples, 0.09%)</title><rect x="173.0" y="373" width="1.0" height="15.0" fill="rgb(245,156,50)" rx="2" ry="2" />
<text  x="175.96" y="383.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="166.4" y="389" width="0.2" height="15.0" fill="rgb(222,28,24)" rx="2" ry="2" />
<text  x="169.42" y="399.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="602.4" y="501" width="0.2" height="15.0" fill="rgb(230,158,43)" rx="2" ry="2" />
<text  x="605.35" y="511.5" ></text>
</g>
<g >
<title>ip_route_input_slow (1 samples, 0.02%)</title><rect x="64.4" y="85" width="0.2" height="15.0" fill="rgb(209,138,17)" rx="2" ry="2" />
<text  x="67.39" y="95.5" ></text>
</g>
<g >
<title>[unknown]  (45 samples, 0.78%)</title><rect x="322.2" y="501" width="9.2" height="15.0" fill="rgb(230,43,30)" rx="2" ry="2" />
<text  x="325.23" y="511.5" ></text>
</g>
<g >
<title>newidle_balance (38 samples, 0.66%)</title><rect x="143.7" y="325" width="7.8" height="15.0" fill="rgb(243,184,50)" rx="2" ry="2" />
<text  x="146.72" y="335.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (35 samples, 0.61%)</title><rect x="780.6" y="501" width="7.2" height="15.0" fill="rgb(236,137,17)" rx="2" ry="2" />
<text  x="783.65" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (70 samples, 1.21%)</title><rect x="574.5" y="469" width="14.4" height="15.0" fill="rgb(249,131,45)" rx="2" ry="2" />
<text  x="577.54" y="479.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (184 samples, 3.19%)</title><rect x="64.0" y="437" width="37.6" height="15.0" fill="rgb(250,103,46)" rx="2" ry="2" />
<text  x="66.98" y="447.5" >cpu..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="165.2" y="325" width="0.2" height="15.0" fill="rgb(246,178,15)" rx="2" ry="2" />
<text  x="168.19" y="335.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (5 samples, 0.09%)</title><rect x="136.2" y="293" width="1.0" height="15.0" fill="rgb(253,19,40)" rx="2" ry="2" />
<text  x="139.16" y="303.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="174.4" y="309" width="0.2" height="15.0" fill="rgb(225,109,50)" rx="2" ry="2" />
<text  x="177.39" y="319.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (1 samples, 0.02%)</title><rect x="63.0" y="421" width="0.2" height="15.0" fill="rgb(244,188,14)" rx="2" ry="2" />
<text  x="65.96" y="431.5" ></text>
</g>
<g >
<title>udp_queue_rcv_skb (1 samples, 0.02%)</title><rect x="1135.4" y="133" width="0.2" height="15.0" fill="rgb(209,54,43)" rx="2" ry="2" />
<text  x="1138.41" y="143.5" ></text>
</g>
<g >
<title>do_idle (256 samples, 4.44%)</title><rect x="104.3" y="389" width="52.3" height="15.0" fill="rgb(253,166,43)" rx="2" ry="2" />
<text  x="107.26" y="399.5" >do_idle</text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="561.9" y="453" width="0.2" height="15.0" fill="rgb(224,33,15)" rx="2" ry="2" />
<text  x="564.87" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (18 samples, 0.31%)</title><rect x="1097.8" y="405" width="3.7" height="15.0" fill="rgb(220,93,29)" rx="2" ry="2" />
<text  x="1100.78" y="415.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1174.9" y="325" width="0.2" height="15.0" fill="rgb(253,201,46)" rx="2" ry="2" />
<text  x="1177.87" y="335.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.02%)</title><rect x="130.6" y="341" width="0.2" height="15.0" fill="rgb(215,151,36)" rx="2" ry="2" />
<text  x="133.64" y="351.5" ></text>
</g>
<g >
<title>kick_ilb (3 samples, 0.05%)</title><rect x="102.8" y="357" width="0.6" height="15.0" fill="rgb(241,112,32)" rx="2" ry="2" />
<text  x="105.83" y="367.5" ></text>
</g>
<g >
<title>newidle_balance (11 samples, 0.19%)</title><rect x="38.6" y="325" width="2.3" height="15.0" fill="rgb(225,199,22)" rx="2" ry="2" />
<text  x="41.63" y="335.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (81 samples, 1.40%)</title><rect x="1163.4" y="373" width="16.6" height="15.0" fill="rgb(210,114,27)" rx="2" ry="2" />
<text  x="1166.42" y="383.5" ></text>
</g>
<g >
<title>generic_exec_single (10 samples, 0.17%)</title><rect x="148.0" y="261" width="2.1" height="15.0" fill="rgb(227,45,38)" rx="2" ry="2" />
<text  x="151.02" y="271.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1174.1" y="309" width="0.2" height="15.0" fill="rgb(240,86,9)" rx="2" ry="2" />
<text  x="1177.05" y="319.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="15.7" y="357" width="0.2" height="15.0" fill="rgb(211,208,48)" rx="2" ry="2" />
<text  x="18.73" y="367.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (5 samples, 0.09%)</title><rect x="231.4" y="501" width="1.1" height="15.0" fill="rgb(213,224,1)" rx="2" ry="2" />
<text  x="234.44" y="511.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 1.11%)</title><rect x="175.0" y="293" width="13.1" height="15.0" fill="rgb(252,143,36)" rx="2" ry="2" />
<text  x="178.01" y="303.5" ></text>
</g>
<g >
<title>alx_poll (1 samples, 0.02%)</title><rect x="16.3" y="261" width="0.2" height="15.0" fill="rgb(220,9,18)" rx="2" ry="2" />
<text  x="19.34" y="271.5" ></text>
</g>
<g >
<title>menu_select (32 samples, 0.55%)</title><rect x="130.8" y="341" width="6.6" height="15.0" fill="rgb(233,70,32)" rx="2" ry="2" />
<text  x="133.84" y="351.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="564.9" y="437" width="0.2" height="15.0" fill="rgb(211,220,0)" rx="2" ry="2" />
<text  x="567.93" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="102.6" y="373" width="0.2" height="15.0" fill="rgb(247,211,29)" rx="2" ry="2" />
<text  x="105.63" y="383.5" ></text>
</g>
<g >
<title>do_iter_write (8 samples, 0.14%)</title><rect x="188.1" y="357" width="1.6" height="15.0" fill="rgb(228,132,21)" rx="2" ry="2" />
<text  x="191.09" y="367.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (70 samples, 1.21%)</title><rect x="1018.2" y="453" width="14.4" height="15.0" fill="rgb(236,220,4)" rx="2" ry="2" />
<text  x="1021.24" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.10%)</title><rect x="563.7" y="389" width="1.2" height="15.0" fill="rgb(234,97,32)" rx="2" ry="2" />
<text  x="566.71" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (70 samples, 1.21%)</title><rect x="574.5" y="485" width="14.4" height="15.0" fill="rgb(205,58,20)" rx="2" ry="2" />
<text  x="577.54" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (4 samples, 0.07%)</title><rect x="1101.7" y="485" width="0.8" height="15.0" fill="rgb(235,43,35)" rx="2" ry="2" />
<text  x="1104.67" y="495.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="1179.8" y="277" width="0.2" height="15.0" fill="rgb(207,156,9)" rx="2" ry="2" />
<text  x="1182.78" y="287.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (2 samples, 0.03%)</title><rect x="40.5" y="277" width="0.4" height="15.0" fill="rgb(217,185,14)" rx="2" ry="2" />
<text  x="43.47" y="287.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="173.8" y="309" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="176.78" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.31%)</title><rect x="1097.8" y="421" width="3.7" height="15.0" fill="rgb(219,131,26)" rx="2" ry="2" />
<text  x="1100.78" y="431.5" ></text>
</g>
<g >
<title>_perf_ioctl (64 samples, 1.11%)</title><rect x="175.0" y="421" width="13.1" height="15.0" fill="rgb(214,148,24)" rx="2" ry="2" />
<text  x="178.01" y="431.5" ></text>
</g>
<g >
<title>schedule_idle (16 samples, 0.28%)</title><rect x="37.8" y="373" width="3.3" height="15.0" fill="rgb(242,200,21)" rx="2" ry="2" />
<text  x="40.81" y="383.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 1.11%)</title><rect x="175.0" y="245" width="13.1" height="15.0" fill="rgb(228,36,9)" rx="2" ry="2" />
<text  x="178.01" y="255.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (4 samples, 0.07%)</title><rect x="154.4" y="373" width="0.8" height="15.0" fill="rgb(206,8,51)" rx="2" ry="2" />
<text  x="157.36" y="383.5" ></text>
</g>
<g >
<title>nohz_csd_func (2 samples, 0.03%)</title><rect x="172.3" y="357" width="0.5" height="15.0" fill="rgb(232,21,20)" rx="2" ry="2" />
<text  x="175.35" y="367.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="62.3" y="405" width="0.2" height="15.0" fill="rgb(250,205,1)" rx="2" ry="2" />
<text  x="65.34" y="415.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.02%)</title><rect x="35.8" y="325" width="0.2" height="15.0" fill="rgb(226,199,12)" rx="2" ry="2" />
<text  x="38.76" y="335.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.02%)</title><rect x="99.1" y="389" width="0.3" height="15.0" fill="rgb(214,22,47)" rx="2" ry="2" />
<text  x="102.15" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.03%)</title><rect x="174.2" y="373" width="0.4" height="15.0" fill="rgb(235,161,54)" rx="2" ry="2" />
<text  x="177.19" y="383.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="754.7" y="341" width="0.2" height="15.0" fill="rgb(247,30,10)" rx="2" ry="2" />
<text  x="757.68" y="351.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.03%)</title><rect x="1161.4" y="405" width="0.4" height="15.0" fill="rgb(241,69,29)" rx="2" ry="2" />
<text  x="1164.37" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.02%)</title><rect x="174.4" y="357" width="0.2" height="15.0" fill="rgb(227,218,16)" rx="2" ry="2" />
<text  x="177.39" y="367.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (41 samples, 0.71%)</title><rect x="26.8" y="341" width="8.3" height="15.0" fill="rgb(222,35,15)" rx="2" ry="2" />
<text  x="29.77" y="351.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="564.9" y="469" width="0.2" height="15.0" fill="rgb(235,92,31)" rx="2" ry="2" />
<text  x="567.93" y="479.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="192.2" y="453" width="0.2" height="15.0" fill="rgb(208,151,35)" rx="2" ry="2" />
<text  x="195.18" y="463.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (1 samples, 0.02%)</title><rect x="787.0" y="453" width="0.2" height="15.0" fill="rgb(253,60,19)" rx="2" ry="2" />
<text  x="789.99" y="463.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.02%)</title><rect x="146.8" y="293" width="0.2" height="15.0" fill="rgb(240,116,38)" rx="2" ry="2" />
<text  x="149.79" y="303.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.05%)</title><rect x="577.0" y="421" width="0.6" height="15.0" fill="rgb(246,202,18)" rx="2" ry="2" />
<text  x="580.00" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (146 samples, 2.53%)</title><rect x="817.5" y="469" width="29.8" height="15.0" fill="rgb(242,52,7)" rx="2" ry="2" />
<text  x="820.45" y="479.5" >co..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="754.7" y="293" width="0.2" height="15.0" fill="rgb(223,208,44)" rx="2" ry="2" />
<text  x="757.68" y="303.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="173.8" y="341" width="0.2" height="15.0" fill="rgb(208,79,40)" rx="2" ry="2" />
<text  x="176.78" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="1102.1" y="373" width="0.2" height="15.0" fill="rgb(229,132,24)" rx="2" ry="2" />
<text  x="1105.08" y="383.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (2 samples, 0.03%)</title><rect x="188.7" y="181" width="0.4" height="15.0" fill="rgb(224,121,24)" rx="2" ry="2" />
<text  x="191.71" y="191.5" ></text>
</g>
<g >
<title>start_secondary (32 samples, 0.55%)</title><rect x="160.5" y="485" width="6.5" height="15.0" fill="rgb(247,9,17)" rx="2" ry="2" />
<text  x="163.49" y="495.5" ></text>
</g>
<g >
<title>sched_clock_cpu (4 samples, 0.07%)</title><rect x="129.6" y="325" width="0.8" height="15.0" fill="rgb(224,206,44)" rx="2" ry="2" />
<text  x="132.62" y="335.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (4 samples, 0.07%)</title><rect x="107.1" y="325" width="0.8" height="15.0" fill="rgb(233,39,3)" rx="2" ry="2" />
<text  x="110.12" y="335.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.02%)</title><rect x="164.8" y="389" width="0.2" height="15.0" fill="rgb(252,158,7)" rx="2" ry="2" />
<text  x="167.78" y="399.5" ></text>
</g>
<g >
<title>llist_add_batch (7 samples, 0.12%)</title><rect x="150.1" y="261" width="1.4" height="15.0" fill="rgb(218,184,41)" rx="2" ry="2" />
<text  x="153.06" y="271.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="16.3" y="357" width="0.2" height="15.0" fill="rgb(216,92,2)" rx="2" ry="2" />
<text  x="19.34" y="367.5" ></text>
</g>
<g >
<title>sync_mm_rss (1 samples, 0.02%)</title><rect x="330.8" y="421" width="0.2" height="15.0" fill="rgb(223,95,26)" rx="2" ry="2" />
<text  x="333.81" y="431.5" ></text>
</g>
<g >
<title>__schedule (26 samples, 0.45%)</title><rect x="1182.6" y="357" width="5.4" height="15.0" fill="rgb(211,21,19)" rx="2" ry="2" />
<text  x="1185.64" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (4 samples, 0.07%)</title><rect x="1176.9" y="293" width="0.8" height="15.0" fill="rgb(230,207,19)" rx="2" ry="2" />
<text  x="1179.91" y="303.5" ></text>
</g>
<g >
<title>dispatcher@plt (2 samples, 0.03%)</title><rect x="572.7" y="501" width="0.4" height="15.0" fill="rgb(214,206,33)" rx="2" ry="2" />
<text  x="575.70" y="511.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (681 samples, 11.80%)</title><rect x="637.3" y="469" width="139.3" height="15.0" fill="rgb(236,168,17)" rx="2" ry="2" />
<text  x="640.32" y="479.5" >ringbuf::consumer..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (82 samples, 1.42%)</title><rect x="1109.6" y="437" width="16.8" height="15.0" fill="rgb(254,150,19)" rx="2" ry="2" />
<text  x="1112.64" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1179.8" y="309" width="0.2" height="15.0" fill="rgb(252,123,13)" rx="2" ry="2" />
<text  x="1182.78" y="319.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (2 samples, 0.03%)</title><rect x="188.7" y="245" width="0.4" height="15.0" fill="rgb(254,38,46)" rx="2" ry="2" />
<text  x="191.71" y="255.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.02%)</title><rect x="142.1" y="373" width="0.2" height="15.0" fill="rgb(213,123,40)" rx="2" ry="2" />
<text  x="145.09" y="383.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (36 samples, 0.62%)</title><rect x="144.1" y="309" width="7.4" height="15.0" fill="rgb(236,175,1)" rx="2" ry="2" />
<text  x="147.13" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (3 samples, 0.05%)</title><rect x="785.1" y="453" width="0.7" height="15.0" fill="rgb(235,190,18)" rx="2" ry="2" />
<text  x="788.15" y="463.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (4 samples, 0.07%)</title><rect x="1108.4" y="405" width="0.8" height="15.0" fill="rgb(209,87,39)" rx="2" ry="2" />
<text  x="1111.42" y="415.5" ></text>
</g>
<g >
<title>cpuidle_enter (172 samples, 2.98%)</title><rect x="64.2" y="421" width="35.2" height="15.0" fill="rgb(225,225,24)" rx="2" ry="2" />
<text  x="67.18" y="431.5" >cp..</text>
</g>
<g >
<title>std::sync::poison::Flag::get (2 samples, 0.03%)</title><rect x="1032.6" y="437" width="0.4" height="15.0" fill="rgb(226,206,52)" rx="2" ry="2" />
<text  x="1035.56" y="447.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1101.5" y="373" width="0.2" height="15.0" fill="rgb(215,123,26)" rx="2" ry="2" />
<text  x="1104.46" y="383.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.07%)</title><rect x="173.2" y="357" width="0.8" height="15.0" fill="rgb(211,112,37)" rx="2" ry="2" />
<text  x="176.17" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="156.2" y="277" width="0.2" height="15.0" fill="rgb(241,144,44)" rx="2" ry="2" />
<text  x="159.20" y="287.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.02%)</title><rect x="157.4" y="389" width="0.2" height="15.0" fill="rgb(242,107,0)" rx="2" ry="2" />
<text  x="160.42" y="399.5" ></text>
</g>
<g >
<title>rest_init (76 samples, 1.32%)</title><rect x="26.4" y="421" width="15.5" height="15.0" fill="rgb(254,119,7)" rx="2" ry="2" />
<text  x="29.36" y="431.5" ></text>
</g>
<g >
<title>core::cmp::min (4 samples, 0.07%)</title><rect x="1014.8" y="485" width="0.8" height="15.0" fill="rgb(237,114,22)" rx="2" ry="2" />
<text  x="1017.77" y="495.5" ></text>
</g>
<g >
<title>generic_exec_single (64 samples, 1.11%)</title><rect x="175.0" y="341" width="13.1" height="15.0" fill="rgb(247,100,11)" rx="2" ry="2" />
<text  x="178.01" y="351.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="41.3" y="357" width="0.2" height="15.0" fill="rgb(211,142,53)" rx="2" ry="2" />
<text  x="44.28" y="367.5" ></text>
</g>
<g >
<title>kthread (3 samples, 0.05%)</title><rect x="63.2" y="485" width="0.6" height="15.0" fill="rgb(238,108,8)" rx="2" ry="2" />
<text  x="66.16" y="495.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="135.1" y="293" width="0.2" height="15.0" fill="rgb(232,100,7)" rx="2" ry="2" />
<text  x="138.14" y="303.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="754.7" y="277" width="0.2" height="15.0" fill="rgb(212,27,30)" rx="2" ry="2" />
<text  x="757.68" y="287.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="1179.8" y="293" width="0.2" height="15.0" fill="rgb(224,78,51)" rx="2" ry="2" />
<text  x="1182.78" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="1107.2" y="357" width="0.2" height="15.0" fill="rgb(227,194,0)" rx="2" ry="2" />
<text  x="1110.19" y="367.5" ></text>
</g>
<g >
<title>swapper (307 samples, 5.32%)</title><rect x="1127.2" y="517" width="62.8" height="15.0" fill="rgb(224,101,40)" rx="2" ry="2" />
<text  x="1130.23" y="527.5" >swapper</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="754.7" y="373" width="0.2" height="15.0" fill="rgb(219,213,54)" rx="2" ry="2" />
<text  x="757.68" y="383.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1135.4" y="453" width="0.2" height="15.0" fill="rgb(214,44,2)" rx="2" ry="2" />
<text  x="1138.41" y="463.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.02%)</title><rect x="1173.8" y="117" width="0.3" height="15.0" fill="rgb(250,216,33)" rx="2" ry="2" />
<text  x="1176.85" y="127.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (25 samples, 0.43%)</title><rect x="556.8" y="421" width="5.1" height="15.0" fill="rgb(233,62,9)" rx="2" ry="2" />
<text  x="559.75" y="431.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (2 samples, 0.03%)</title><rect x="103.0" y="341" width="0.4" height="15.0" fill="rgb(249,104,48)" rx="2" ry="2" />
<text  x="106.03" y="351.5" ></text>
</g>
<g >
<title>kick_ilb (8 samples, 0.14%)</title><rect x="1186.3" y="293" width="1.7" height="15.0" fill="rgb(236,140,16)" rx="2" ry="2" />
<text  x="1189.32" y="303.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="64.4" y="373" width="0.2" height="15.0" fill="rgb(248,61,27)" rx="2" ry="2" />
<text  x="67.39" y="383.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 1.11%)</title><rect x="175.0" y="325" width="13.1" height="15.0" fill="rgb(228,211,29)" rx="2" ry="2" />
<text  x="178.01" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (263 samples, 4.56%)</title><rect x="104.3" y="469" width="53.7" height="15.0" fill="rgb(238,71,52)" rx="2" ry="2" />
<text  x="107.26" y="479.5" >x86_6..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="64.4" y="293" width="0.2" height="15.0" fill="rgb(226,181,21)" rx="2" ry="2" />
<text  x="67.39" y="303.5" ></text>
</g>
<g >
<title>find_next_bit (1 samples, 0.02%)</title><rect x="1159.5" y="341" width="0.2" height="15.0" fill="rgb(212,58,21)" rx="2" ry="2" />
<text  x="1162.53" y="351.5" ></text>
</g>
<g >
<title>__msecs_to_jiffies (1 samples, 0.02%)</title><rect x="1159.1" y="389" width="0.2" height="15.0" fill="rgb(227,25,40)" rx="2" ry="2" />
<text  x="1162.12" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.05%)</title><rect x="577.6" y="421" width="0.6" height="15.0" fill="rgb(206,53,33)" rx="2" ry="2" />
<text  x="580.61" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (53 samples, 0.92%)</title><rect x="1164.2" y="341" width="10.9" height="15.0" fill="rgb(242,203,8)" rx="2" ry="2" />
<text  x="1167.24" y="351.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="62.3" y="341" width="0.2" height="15.0" fill="rgb(254,123,36)" rx="2" ry="2" />
<text  x="65.34" y="351.5" ></text>
</g>
<g >
<title>cpuidle_select (3 samples, 0.05%)</title><rect x="164.8" y="421" width="0.6" height="15.0" fill="rgb(206,76,29)" rx="2" ry="2" />
<text  x="167.78" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (47 samples, 0.81%)</title><rect x="417.3" y="501" width="9.6" height="15.0" fill="rgb(211,218,35)" rx="2" ry="2" />
<text  x="420.31" y="511.5" ></text>
</g>
<g >
<title>NaClMutexLock (7 samples, 0.12%)</title><rect x="247.6" y="501" width="1.4" height="15.0" fill="rgb(243,158,26)" rx="2" ry="2" />
<text  x="250.59" y="511.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (2 samples, 0.03%)</title><rect x="39.0" y="293" width="0.4" height="15.0" fill="rgb(208,127,18)" rx="2" ry="2" />
<text  x="42.03" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (102 samples, 1.77%)</title><rect x="1044.6" y="485" width="20.9" height="15.0" fill="rgb(219,110,16)" rx="2" ry="2" />
<text  x="1047.62" y="495.5" ></text>
</g>
<g >
<title>rcu_idle_exit (4 samples, 0.07%)</title><rect x="169.9" y="325" width="0.8" height="15.0" fill="rgb(232,17,19)" rx="2" ry="2" />
<text  x="172.90" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="171.5" y="293" width="0.2" height="15.0" fill="rgb(225,67,3)" rx="2" ry="2" />
<text  x="174.53" y="303.5" ></text>
</g>
<g >
<title>do_idle (74 samples, 1.28%)</title><rect x="26.4" y="389" width="15.1" height="15.0" fill="rgb(227,155,7)" rx="2" ry="2" />
<text  x="29.36" y="399.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="156.0" y="357" width="0.2" height="15.0" fill="rgb(229,104,54)" rx="2" ry="2" />
<text  x="158.99" y="367.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (1 samples, 0.02%)</title><rect x="188.1" y="213" width="0.2" height="15.0" fill="rgb(225,10,50)" rx="2" ry="2" />
<text  x="191.09" y="223.5" ></text>
</g>
<g >
<title>arch_call_rest_init (132 samples, 2.29%)</title><rect x="1163.0" y="437" width="27.0" height="15.0" fill="rgb(219,83,0)" rx="2" ry="2" />
<text  x="1166.01" y="447.5" >a..</text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="103.6" y="421" width="0.3" height="15.0" fill="rgb(227,41,18)" rx="2" ry="2" />
<text  x="106.65" y="431.5" ></text>
</g>
<g >
<title>std::panicking::panicking (4 samples, 0.07%)</title><rect x="1108.4" y="421" width="0.8" height="15.0" fill="rgb(235,68,6)" rx="2" ry="2" />
<text  x="1111.42" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (28 samples, 0.49%)</title><rect x="551.0" y="469" width="5.8" height="15.0" fill="rgb(250,111,31)" rx="2" ry="2" />
<text  x="554.03" y="479.5" ></text>
</g>
<g >
<title>zap_page_range (1 samples, 0.02%)</title><rect x="62.8" y="437" width="0.2" height="15.0" fill="rgb(221,80,25)" rx="2" ry="2" />
<text  x="65.75" y="447.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="16.3" y="309" width="0.2" height="15.0" fill="rgb(249,38,13)" rx="2" ry="2" />
<text  x="19.34" y="319.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (38 samples, 0.66%)</title><rect x="564.9" y="485" width="7.8" height="15.0" fill="rgb(241,1,11)" rx="2" ry="2" />
<text  x="567.93" y="495.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="1135.4" y="197" width="0.2" height="15.0" fill="rgb(239,75,46)" rx="2" ry="2" />
<text  x="1138.41" y="207.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="1185.9" y="277" width="0.2" height="15.0" fill="rgb(206,145,26)" rx="2" ry="2" />
<text  x="1188.91" y="287.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (5 samples, 0.09%)</title><rect x="1176.9" y="309" width="1.0" height="15.0" fill="rgb(212,79,32)" rx="2" ry="2" />
<text  x="1179.91" y="319.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (2 samples, 0.03%)</title><rect x="1036.4" y="485" width="0.5" height="15.0" fill="rgb(254,222,25)" rx="2" ry="2" />
<text  x="1039.44" y="495.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="1126.4" y="469" width="0.2" height="15.0" fill="rgb(234,72,11)" rx="2" ry="2" />
<text  x="1129.41" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="62.3" y="501" width="0.9" height="15.0" fill="rgb(223,24,36)" rx="2" ry="2" />
<text  x="65.34" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.05%)</title><rect x="716.2" y="421" width="0.7" height="15.0" fill="rgb(217,16,18)" rx="2" ry="2" />
<text  x="719.24" y="431.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.constprop.0 (1 samples, 0.02%)</title><rect x="64.4" y="133" width="0.2" height="15.0" fill="rgb(208,18,17)" rx="2" ry="2" />
<text  x="67.39" y="143.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="1101.5" y="245" width="0.2" height="15.0" fill="rgb(218,225,2)" rx="2" ry="2" />
<text  x="1104.46" y="255.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (2 samples, 0.03%)</title><rect x="1156.9" y="373" width="0.4" height="15.0" fill="rgb(244,21,12)" rx="2" ry="2" />
<text  x="1159.88" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1173.8" y="293" width="0.3" height="15.0" fill="rgb(212,32,53)" rx="2" ry="2" />
<text  x="1176.85" y="303.5" ></text>
</g>
<g >
<title>perf (72 samples, 1.25%)</title><rect x="175.0" y="517" width="14.7" height="15.0" fill="rgb(213,171,22)" rx="2" ry="2" />
<text  x="178.01" y="527.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (4 samples, 0.07%)</title><rect x="1126.4" y="485" width="0.8" height="15.0" fill="rgb(207,127,25)" rx="2" ry="2" />
<text  x="1129.41" y="495.5" ></text>
</g>
<g >
<title>NaClXMutexLock (2 samples, 0.03%)</title><rect x="289.7" y="501" width="0.4" height="15.0" fill="rgb(219,219,1)" rx="2" ry="2" />
<text  x="292.72" y="511.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (76 samples, 1.32%)</title><rect x="26.4" y="485" width="15.5" height="15.0" fill="rgb(206,202,5)" rx="2" ry="2" />
<text  x="29.36" y="495.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="98.9" y="357" width="0.2" height="15.0" fill="rgb(231,19,46)" rx="2" ry="2" />
<text  x="101.94" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (4 samples, 0.07%)</title><rect x="356.6" y="501" width="0.8" height="15.0" fill="rgb(231,195,33)" rx="2" ry="2" />
<text  x="359.58" y="511.5" ></text>
</g>
<g >
<title>do_idle (127 samples, 2.20%)</title><rect x="1163.2" y="389" width="26.0" height="15.0" fill="rgb(231,161,28)" rx="2" ry="2" />
<text  x="1166.21" y="399.5" >d..</text>
</g>
<g >
<title>flush_smp_call_function_from_idle (13 samples, 0.23%)</title><rect x="1180.0" y="373" width="2.6" height="15.0" fill="rgb(230,42,30)" rx="2" ry="2" />
<text  x="1182.98" y="383.5" ></text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.03%)</title><rect x="1033.0" y="437" width="0.4" height="15.0" fill="rgb(223,83,31)" rx="2" ry="2" />
<text  x="1035.97" y="447.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (70 samples, 1.21%)</title><rect x="160.5" y="501" width="14.3" height="15.0" fill="rgb(215,45,43)" rx="2" ry="2" />
<text  x="163.49" y="511.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1179.8" y="325" width="0.2" height="15.0" fill="rgb(240,159,45)" rx="2" ry="2" />
<text  x="1182.78" y="335.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1178.8" y="261" width="0.2" height="15.0" fill="rgb(214,2,53)" rx="2" ry="2" />
<text  x="1181.75" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (7 samples, 0.12%)</title><rect x="1106.8" y="405" width="1.4" height="15.0" fill="rgb(205,78,38)" rx="2" ry="2" />
<text  x="1109.78" y="415.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1156.5" y="389" width="0.2" height="15.0" fill="rgb(250,16,39)" rx="2" ry="2" />
<text  x="1159.47" y="399.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="62.8" y="421" width="0.2" height="15.0" fill="rgb(217,126,0)" rx="2" ry="2" />
<text  x="65.75" y="431.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (228 samples, 3.95%)</title><rect x="493.8" y="501" width="46.6" height="15.0" fill="rgb(226,92,32)" rx="2" ry="2" />
<text  x="496.78" y="511.5" >__pt..</text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (4 samples, 0.07%)</title><rect x="1108.4" y="469" width="0.8" height="15.0" fill="rgb(253,123,34)" rx="2" ry="2" />
<text  x="1111.42" y="479.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="172.8" y="373" width="0.2" height="15.0" fill="rgb(217,161,17)" rx="2" ry="2" />
<text  x="175.76" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="64.6" y="389" width="0.2" height="15.0" fill="rgb(229,141,53)" rx="2" ry="2" />
<text  x="67.59" y="399.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (1 samples, 0.02%)</title><rect x="64.4" y="197" width="0.2" height="15.0" fill="rgb(253,228,20)" rx="2" ry="2" />
<text  x="67.39" y="207.5" ></text>
</g>
<g >
<title>cpu_startup_entry (38 samples, 0.66%)</title><rect x="167.0" y="405" width="7.8" height="15.0" fill="rgb(216,12,0)" rx="2" ry="2" />
<text  x="170.03" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (262 samples, 4.54%)</title><rect x="104.3" y="405" width="53.5" height="15.0" fill="rgb(228,228,45)" rx="2" ry="2" />
<text  x="107.26" y="415.5" >cpu_s..</text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="166.2" y="405" width="0.2" height="15.0" fill="rgb(212,39,0)" rx="2" ry="2" />
<text  x="169.22" y="415.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="100.2" y="341" width="0.2" height="15.0" fill="rgb(217,211,51)" rx="2" ry="2" />
<text  x="103.17" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.03%)</title><rect x="1162.0" y="437" width="0.4" height="15.0" fill="rgb(214,136,22)" rx="2" ry="2" />
<text  x="1164.99" y="447.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.02%)</title><rect x="15.7" y="485" width="0.2" height="15.0" fill="rgb(241,66,38)" rx="2" ry="2" />
<text  x="18.73" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (30 samples, 0.52%)</title><rect x="1026.4" y="437" width="6.2" height="15.0" fill="rgb(222,6,1)" rx="2" ry="2" />
<text  x="1029.42" y="447.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (3 samples, 0.05%)</title><rect x="1186.9" y="245" width="0.6" height="15.0" fill="rgb(220,171,29)" rx="2" ry="2" />
<text  x="1189.93" y="255.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.43%)</title><rect x="556.8" y="469" width="5.1" height="15.0" fill="rgb(228,185,49)" rx="2" ry="2" />
<text  x="559.75" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.21%)</title><rect x="562.5" y="421" width="2.4" height="15.0" fill="rgb(232,49,17)" rx="2" ry="2" />
<text  x="565.48" y="431.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (3 samples, 0.05%)</title><rect x="189.1" y="277" width="0.6" height="15.0" fill="rgb(225,53,19)" rx="2" ry="2" />
<text  x="192.12" y="287.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (1 samples, 0.02%)</title><rect x="289.5" y="501" width="0.2" height="15.0" fill="rgb(223,79,38)" rx="2" ry="2" />
<text  x="292.51" y="511.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.17%)</title><rect x="815.4" y="421" width="2.1" height="15.0" fill="rgb(250,25,51)" rx="2" ry="2" />
<text  x="818.41" y="431.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="64.6" y="341" width="0.2" height="15.0" fill="rgb(231,185,1)" rx="2" ry="2" />
<text  x="67.59" y="351.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="1102.1" y="437" width="0.2" height="15.0" fill="rgb(241,77,17)" rx="2" ry="2" />
<text  x="1105.08" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.02%)</title><rect x="156.2" y="357" width="0.2" height="15.0" fill="rgb(206,160,14)" rx="2" ry="2" />
<text  x="159.20" y="367.5" ></text>
</g>
<g >
<title>arch_cpu_idle_exit (1 samples, 0.02%)</title><rect x="1163.0" y="389" width="0.2" height="15.0" fill="rgb(222,63,40)" rx="2" ry="2" />
<text  x="1166.01" y="399.5" ></text>
</g>
<g >
<title>do_idle (31 samples, 0.54%)</title><rect x="160.5" y="453" width="6.3" height="15.0" fill="rgb(248,199,42)" rx="2" ry="2" />
<text  x="163.49" y="463.5" ></text>
</g>
<g >
<title>vfs_iter_write (8 samples, 0.14%)</title><rect x="188.1" y="373" width="1.6" height="15.0" fill="rgb(234,38,50)" rx="2" ry="2" />
<text  x="191.09" y="383.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (37 samples, 0.64%)</title><rect x="565.1" y="469" width="7.6" height="15.0" fill="rgb(239,99,6)" rx="2" ry="2" />
<text  x="568.14" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="136.8" y="261" width="0.4" height="15.0" fill="rgb(226,226,54)" rx="2" ry="2" />
<text  x="139.77" y="271.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (7 samples, 0.12%)</title><rect x="226.9" y="501" width="1.5" height="15.0" fill="rgb(246,60,36)" rx="2" ry="2" />
<text  x="229.94" y="511.5" ></text>
</g>
<g >
<title>alx_intr_msix_misc (1 samples, 0.02%)</title><rect x="16.1" y="293" width="0.2" height="15.0" fill="rgb(212,178,12)" rx="2" ry="2" />
<text  x="19.13" y="303.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.02%)</title><rect x="35.1" y="341" width="0.3" height="15.0" fill="rgb(237,228,14)" rx="2" ry="2" />
<text  x="38.15" y="351.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (3 samples, 0.05%)</title><rect x="256.6" y="501" width="0.6" height="15.0" fill="rgb(207,51,4)" rx="2" ry="2" />
<text  x="259.59" y="511.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.02%)</title><rect x="62.8" y="389" width="0.2" height="15.0" fill="rgb(212,205,9)" rx="2" ry="2" />
<text  x="65.75" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.02%)</title><rect x="563.5" y="389" width="0.2" height="15.0" fill="rgb(217,76,23)" rx="2" ry="2" />
<text  x="566.50" y="399.5" ></text>
</g>
<g >
<title>fib_validate_source (1 samples, 0.02%)</title><rect x="64.4" y="69" width="0.2" height="15.0" fill="rgb(228,151,39)" rx="2" ry="2" />
<text  x="67.39" y="79.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (31 samples, 0.54%)</title><rect x="716.2" y="437" width="6.4" height="15.0" fill="rgb(214,214,42)" rx="2" ry="2" />
<text  x="719.24" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (1 samples, 0.02%)</title><rect x="786.4" y="453" width="0.2" height="15.0" fill="rgb(245,76,49)" rx="2" ry="2" />
<text  x="789.37" y="463.5" ></text>
</g>
<g >
<title>all (5,771 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(221,24,11)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (168 samples, 2.91%)</title><rect x="383.0" y="501" width="34.3" height="15.0" fill="rgb(217,133,37)" rx="2" ry="2" />
<text  x="385.95" y="511.5" >__..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.17%)</title><rect x="815.4" y="437" width="2.1" height="15.0" fill="rgb(212,70,7)" rx="2" ry="2" />
<text  x="818.41" y="447.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="329.8" y="357" width="0.2" height="15.0" fill="rgb(254,29,0)" rx="2" ry="2" />
<text  x="332.79" y="367.5" ></text>
</g>
<g >
<title>ktime_get (3 samples, 0.05%)</title><rect x="155.4" y="357" width="0.6" height="15.0" fill="rgb(205,96,10)" rx="2" ry="2" />
<text  x="158.38" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1173.8" y="229" width="0.3" height="15.0" fill="rgb(209,15,29)" rx="2" ry="2" />
<text  x="1176.85" y="239.5" ></text>
</g>
<g >
<title>arch_call_rest_init (263 samples, 4.56%)</title><rect x="104.3" y="437" width="53.7" height="15.0" fill="rgb(254,207,15)" rx="2" ry="2" />
<text  x="107.26" y="447.5" >arch_..</text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="1126.4" y="405" width="0.2" height="15.0" fill="rgb(248,48,50)" rx="2" ry="2" />
<text  x="1129.41" y="415.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (4 samples, 0.07%)</title><rect x="1108.4" y="453" width="0.8" height="15.0" fill="rgb(210,222,39)" rx="2" ry="2" />
<text  x="1111.42" y="463.5" ></text>
</g>
<g >
<title>ovl_write_iter (8 samples, 0.14%)</title><rect x="188.1" y="389" width="1.6" height="15.0" fill="rgb(221,145,15)" rx="2" ry="2" />
<text  x="191.09" y="399.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="170.7" y="309" width="0.2" height="15.0" fill="rgb(211,119,31)" rx="2" ry="2" />
<text  x="173.71" y="319.5" ></text>
</g>
<g >
<title>llist_reverse_order (1 samples, 0.02%)</title><rect x="165.6" y="421" width="0.2" height="15.0" fill="rgb(232,79,32)" rx="2" ry="2" />
<text  x="168.60" y="431.5" ></text>
</g>
<g >
<title>cpuidle_select (6 samples, 0.10%)</title><rect x="170.9" y="357" width="1.2" height="15.0" fill="rgb(229,39,52)" rx="2" ry="2" />
<text  x="173.92" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="1016.0" y="373" width="0.2" height="15.0" fill="rgb(234,109,39)" rx="2" ry="2" />
<text  x="1019.00" y="383.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="1188.0" y="357" width="0.2" height="15.0" fill="rgb(235,93,9)" rx="2" ry="2" />
<text  x="1190.96" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="1107.0" y="357" width="0.2" height="15.0" fill="rgb(231,4,12)" rx="2" ry="2" />
<text  x="1109.98" y="367.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (800 samples, 13.86%)</title><rect x="847.3" y="485" width="163.6" height="15.0" fill="rgb(222,50,0)" rx="2" ry="2" />
<text  x="850.31" y="495.5" >ringbuf::consumer::Co..</text>
</g>
<g >
<title>rest_init (132 samples, 2.29%)</title><rect x="1163.0" y="421" width="27.0" height="15.0" fill="rgb(206,142,3)" rx="2" ry="2" />
<text  x="1166.01" y="431.5" >r..</text>
</g>
<g >
<title>NaClHostDescWrite (12 samples, 0.21%)</title><rect x="239.2" y="501" width="2.5" height="15.0" fill="rgb(218,118,3)" rx="2" ry="2" />
<text  x="242.21" y="511.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (6 samples, 0.10%)</title><rect x="1017.0" y="453" width="1.2" height="15.0" fill="rgb(245,5,38)" rx="2" ry="2" />
<text  x="1020.02" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_write (8 samples, 0.14%)</title><rect x="188.1" y="453" width="1.6" height="15.0" fill="rgb(240,53,34)" rx="2" ry="2" />
<text  x="191.09" y="463.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (12 samples, 0.21%)</title><rect x="271.5" y="501" width="2.5" height="15.0" fill="rgb(217,46,52)" rx="2" ry="2" />
<text  x="274.52" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="36.4" y="293" width="0.2" height="15.0" fill="rgb(218,35,28)" rx="2" ry="2" />
<text  x="39.38" y="303.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="723.2" y="373" width="0.2" height="15.0" fill="rgb(238,173,32)" rx="2" ry="2" />
<text  x="726.19" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (125 samples, 2.17%)</title><rect x="357.4" y="501" width="25.6" height="15.0" fill="rgb(207,112,53)" rx="2" ry="2" />
<text  x="360.40" y="511.5" >_..</text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="64.4" y="357" width="0.2" height="15.0" fill="rgb(219,229,21)" rx="2" ry="2" />
<text  x="67.39" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (3 samples, 0.05%)</title><rect x="785.8" y="437" width="0.6" height="15.0" fill="rgb(236,70,19)" rx="2" ry="2" />
<text  x="788.76" y="447.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="188.3" y="213" width="0.2" height="15.0" fill="rgb(250,163,43)" rx="2" ry="2" />
<text  x="191.30" y="223.5" ></text>
</g>
<g >
<title>start_secondary (198 samples, 3.43%)</title><rect x="63.8" y="485" width="40.5" height="15.0" fill="rgb(212,146,25)" rx="2" ry="2" />
<text  x="66.78" y="495.5" >sta..</text>
</g>
<g >
<title>do_madvise.part.0 (1 samples, 0.02%)</title><rect x="62.8" y="453" width="0.2" height="15.0" fill="rgb(214,78,9)" rx="2" ry="2" />
<text  x="65.75" y="463.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="64.4" y="309" width="0.2" height="15.0" fill="rgb(215,204,50)" rx="2" ry="2" />
<text  x="67.39" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.10%)</title><rect x="563.7" y="405" width="1.2" height="15.0" fill="rgb(230,86,41)" rx="2" ry="2" />
<text  x="566.71" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (3 samples, 0.05%)</title><rect x="785.8" y="453" width="0.6" height="15.0" fill="rgb(231,26,51)" rx="2" ry="2" />
<text  x="788.76" y="463.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1173.8" y="149" width="0.3" height="15.0" fill="rgb(209,142,28)" rx="2" ry="2" />
<text  x="1176.85" y="159.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.02%)</title><rect x="37.4" y="357" width="0.2" height="15.0" fill="rgb(212,30,23)" rx="2" ry="2" />
<text  x="40.40" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (30 samples, 0.52%)</title><rect x="1026.4" y="421" width="6.2" height="15.0" fill="rgb(216,62,13)" rx="2" ry="2" />
<text  x="1029.42" y="431.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="1173.8" y="277" width="0.3" height="15.0" fill="rgb(249,127,12)" rx="2" ry="2" />
<text  x="1176.85" y="287.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="136.2" y="261" width="0.6" height="15.0" fill="rgb(209,208,23)" rx="2" ry="2" />
<text  x="139.16" y="271.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="563.1" y="405" width="0.6" height="15.0" fill="rgb(230,143,10)" rx="2" ry="2" />
<text  x="566.09" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (2 samples, 0.03%)</title><rect x="171.5" y="325" width="0.4" height="15.0" fill="rgb(245,215,5)" rx="2" ry="2" />
<text  x="174.53" y="335.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.09%)</title><rect x="563.9" y="341" width="1.0" height="15.0" fill="rgb(232,26,9)" rx="2" ry="2" />
<text  x="566.91" y="351.5" ></text>
</g>
<g >
<title>udp_rcv (1 samples, 0.02%)</title><rect x="1135.4" y="181" width="0.2" height="15.0" fill="rgb(245,215,6)" rx="2" ry="2" />
<text  x="1138.41" y="191.5" ></text>
</g>
<g >
<title>start_secondary (134 samples, 2.32%)</title><rect x="1135.6" y="485" width="27.4" height="15.0" fill="rgb(210,132,35)" rx="2" ry="2" />
<text  x="1138.61" y="495.5" >s..</text>
</g>
<g >
<title>put_prev_task_idle (1 samples, 0.02%)</title><rect x="152.1" y="341" width="0.2" height="15.0" fill="rgb(236,190,9)" rx="2" ry="2" />
<text  x="155.11" y="351.5" ></text>
</g>
<g >
<title>start_kernel (38 samples, 0.66%)</title><rect x="167.0" y="453" width="7.8" height="15.0" fill="rgb(209,51,9)" rx="2" ry="2" />
<text  x="170.03" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="106.3" y="341" width="0.2" height="15.0" fill="rgb(209,37,24)" rx="2" ry="2" />
<text  x="109.31" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1157.1" y="357" width="0.2" height="15.0" fill="rgb(227,198,11)" rx="2" ry="2" />
<text  x="1160.08" y="367.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 1.11%)</title><rect x="175.0" y="405" width="13.1" height="15.0" fill="rgb(227,26,53)" rx="2" ry="2" />
<text  x="178.01" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1101.5" y="341" width="0.2" height="15.0" fill="rgb(227,26,11)" rx="2" ry="2" />
<text  x="1104.46" y="351.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="151.9" y="325" width="0.2" height="15.0" fill="rgb(216,38,29)" rx="2" ry="2" />
<text  x="154.90" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.19%)</title><rect x="576.0" y="437" width="2.2" height="15.0" fill="rgb(224,27,51)" rx="2" ry="2" />
<text  x="578.97" y="447.5" ></text>
</g>
<g >
<title>napi_poll (1 samples, 0.02%)</title><rect x="64.4" y="277" width="0.2" height="15.0" fill="rgb(244,128,52)" rx="2" ry="2" />
<text  x="67.39" y="287.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (442 samples, 7.66%)</title><rect x="1036.9" y="501" width="90.3" height="15.0" fill="rgb(242,89,32)" rx="2" ry="2" />
<text  x="1039.85" y="511.5" >rustposix:..</text>
</g>
<g >
<title>ext4_da_reserve_space (1 samples, 0.02%)</title><rect x="188.1" y="197" width="0.2" height="15.0" fill="rgb(206,229,10)" rx="2" ry="2" />
<text  x="191.09" y="207.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (48 samples, 0.83%)</title><rect x="16.5" y="389" width="9.9" height="15.0" fill="rgb(212,187,42)" rx="2" ry="2" />
<text  x="19.54" y="399.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (8 samples, 0.14%)</title><rect x="589.9" y="453" width="1.6" height="15.0" fill="rgb(215,83,36)" rx="2" ry="2" />
<text  x="592.88" y="463.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.02%)</title><rect x="174.6" y="389" width="0.2" height="15.0" fill="rgb(217,27,33)" rx="2" ry="2" />
<text  x="177.60" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (70 samples, 1.21%)</title><rect x="574.5" y="453" width="14.4" height="15.0" fill="rgb(254,195,54)" rx="2" ry="2" />
<text  x="577.54" y="463.5" ></text>
</g>
<g >
<title>start_secondary (51 samples, 0.88%)</title><rect x="15.9" y="485" width="10.5" height="15.0" fill="rgb(246,152,43)" rx="2" ry="2" />
<text  x="18.93" y="495.5" ></text>
</g>
<g >
<title>cpu_startup_entry (134 samples, 2.32%)</title><rect x="1135.6" y="469" width="27.4" height="15.0" fill="rgb(233,151,3)" rx="2" ry="2" />
<text  x="1138.61" y="479.5" >c..</text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.02%)</title><rect x="166.0" y="373" width="0.2" height="15.0" fill="rgb(205,93,48)" rx="2" ry="2" />
<text  x="169.01" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (6 samples, 0.10%)</title><rect x="155.2" y="373" width="1.2" height="15.0" fill="rgb(252,96,35)" rx="2" ry="2" />
<text  x="158.17" y="383.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (5 samples, 0.09%)</title><rect x="1009.9" y="453" width="1.0" height="15.0" fill="rgb(249,144,49)" rx="2" ry="2" />
<text  x="1012.86" y="463.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="64.4" y="245" width="0.2" height="15.0" fill="rgb(246,33,42)" rx="2" ry="2" />
<text  x="67.39" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (12 samples, 0.21%)</title><rect x="328.6" y="485" width="2.4" height="15.0" fill="rgb(230,161,42)" rx="2" ry="2" />
<text  x="331.57" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (9 samples, 0.16%)</title><rect x="135.3" y="309" width="1.9" height="15.0" fill="rgb(246,142,49)" rx="2" ry="2" />
<text  x="138.34" y="319.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (263 samples, 4.56%)</title><rect x="104.3" y="485" width="53.7" height="15.0" fill="rgb(238,123,25)" rx="2" ry="2" />
<text  x="107.26" y="495.5" >x86_6..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="563.7" y="357" width="0.2" height="15.0" fill="rgb(247,158,40)" rx="2" ry="2" />
<text  x="566.71" y="367.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (132 samples, 2.29%)</title><rect x="1163.0" y="469" width="27.0" height="15.0" fill="rgb(221,214,47)" rx="2" ry="2" />
<text  x="1166.01" y="479.5" >x..</text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="173.8" y="325" width="0.2" height="15.0" fill="rgb(212,193,37)" rx="2" ry="2" />
<text  x="176.78" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (102 samples, 1.77%)</title><rect x="1044.6" y="469" width="20.9" height="15.0" fill="rgb(214,79,35)" rx="2" ry="2" />
<text  x="1047.62" y="479.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (2 samples, 0.03%)</title><rect x="26.8" y="325" width="0.4" height="15.0" fill="rgb(252,50,16)" rx="2" ry="2" />
<text  x="29.77" y="335.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.02%)</title><rect x="37.2" y="277" width="0.2" height="15.0" fill="rgb(207,149,2)" rx="2" ry="2" />
<text  x="40.19" y="287.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.02%)</title><rect x="156.2" y="293" width="0.2" height="15.0" fill="rgb(244,57,11)" rx="2" ry="2" />
<text  x="159.20" y="303.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.02%)</title><rect x="171.5" y="309" width="0.2" height="15.0" fill="rgb(211,169,40)" rx="2" ry="2" />
<text  x="174.53" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="134.9" y="293" width="0.2" height="15.0" fill="rgb(231,124,4)" rx="2" ry="2" />
<text  x="137.93" y="303.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (2 samples, 0.03%)</title><rect x="255.6" y="501" width="0.4" height="15.0" fill="rgb(226,106,53)" rx="2" ry="2" />
<text  x="258.57" y="511.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1174.9" y="309" width="0.2" height="15.0" fill="rgb(253,74,42)" rx="2" ry="2" />
<text  x="1177.87" y="319.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (4 samples, 0.07%)</title><rect x="1014.8" y="469" width="0.8" height="15.0" fill="rgb(254,21,36)" rx="2" ry="2" />
<text  x="1017.77" y="479.5" ></text>
</g>
<g >
<title>llist_add_batch (2 samples, 0.03%)</title><rect x="1160.8" y="325" width="0.4" height="15.0" fill="rgb(220,193,29)" rx="2" ry="2" />
<text  x="1163.76" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="1015.6" y="469" width="0.2" height="15.0" fill="rgb(250,33,17)" rx="2" ry="2" />
<text  x="1018.59" y="479.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="602.6" y="501" width="0.2" height="15.0" fill="rgb(219,172,23)" rx="2" ry="2" />
<text  x="605.56" y="511.5" ></text>
</g>
<g >
<title>perf_ioctl (64 samples, 1.11%)</title><rect x="175.0" y="437" width="13.1" height="15.0" fill="rgb(243,62,19)" rx="2" ry="2" />
<text  x="178.01" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.09%)</title><rect x="563.9" y="357" width="1.0" height="15.0" fill="rgb(221,175,25)" rx="2" ry="2" />
<text  x="566.91" y="367.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (6 samples, 0.10%)</title><rect x="1184.9" y="293" width="1.2" height="15.0" fill="rgb(209,33,48)" rx="2" ry="2" />
<text  x="1187.89" y="303.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="1186.1" y="293" width="0.2" height="15.0" fill="rgb(224,179,28)" rx="2" ry="2" />
<text  x="1189.12" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1101.5" y="309" width="0.2" height="15.0" fill="rgb(221,122,12)" rx="2" ry="2" />
<text  x="1104.46" y="319.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.03%)</title><rect x="1160.4" y="325" width="0.4" height="15.0" fill="rgb(214,10,12)" rx="2" ry="2" />
<text  x="1163.35" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (12 samples, 0.21%)</title><rect x="328.6" y="453" width="2.4" height="15.0" fill="rgb(227,103,5)" rx="2" ry="2" />
<text  x="331.57" y="463.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (3 samples, 0.05%)</title><rect x="1178.8" y="277" width="0.6" height="15.0" fill="rgb(225,162,7)" rx="2" ry="2" />
<text  x="1181.75" y="287.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.02%)</title><rect x="173.6" y="277" width="0.2" height="15.0" fill="rgb(211,74,15)" rx="2" ry="2" />
<text  x="176.58" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.02%)</title><rect x="137.2" y="325" width="0.2" height="15.0" fill="rgb(205,156,40)" rx="2" ry="2" />
<text  x="140.18" y="335.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.05%)</title><rect x="785.1" y="437" width="0.7" height="15.0" fill="rgb(246,8,19)" rx="2" ry="2" />
<text  x="788.15" y="447.5" ></text>
</g>
<g >
<title>do_idle (196 samples, 3.40%)</title><rect x="63.8" y="453" width="40.1" height="15.0" fill="rgb(248,159,34)" rx="2" ry="2" />
<text  x="66.78" y="463.5" >do_..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="192.8" y="437" width="0.4" height="15.0" fill="rgb(231,125,35)" rx="2" ry="2" />
<text  x="195.80" y="447.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="1036.2" y="453" width="0.2" height="15.0" fill="rgb(236,137,54)" rx="2" ry="2" />
<text  x="1039.24" y="463.5" ></text>
</g>
<g >
<title>cpuidle_enter (101 samples, 1.75%)</title><rect x="1136.0" y="421" width="20.7" height="15.0" fill="rgb(237,160,51)" rx="2" ry="2" />
<text  x="1139.02" y="431.5" ></text>
</g>
<g >
<title>DynArrayGet (9 samples, 0.16%)</title><rect x="209.8" y="501" width="1.8" height="15.0" fill="rgb(235,215,43)" rx="2" ry="2" />
<text  x="212.77" y="511.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (8 samples, 0.14%)</title><rect x="234.9" y="501" width="1.7" height="15.0" fill="rgb(245,75,12)" rx="2" ry="2" />
<text  x="237.92" y="511.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.02%)</title><rect x="164.4" y="389" width="0.2" height="15.0" fill="rgb(213,218,9)" rx="2" ry="2" />
<text  x="167.38" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (102 samples, 1.77%)</title><rect x="1044.6" y="453" width="20.9" height="15.0" fill="rgb(212,159,47)" rx="2" ry="2" />
<text  x="1047.62" y="463.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.05%)</title><rect x="330.0" y="357" width="0.6" height="15.0" fill="rgb(246,7,5)" rx="2" ry="2" />
<text  x="333.00" y="367.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (1 samples, 0.02%)</title><rect x="64.4" y="213" width="0.2" height="15.0" fill="rgb(237,122,5)" rx="2" ry="2" />
<text  x="67.39" y="223.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (2 samples, 0.03%)</title><rect x="1035.8" y="453" width="0.4" height="15.0" fill="rgb(240,87,53)" rx="2" ry="2" />
<text  x="1038.83" y="463.5" ></text>
</g>
<g >
<title>cpu_startup_entry (198 samples, 3.43%)</title><rect x="63.8" y="469" width="40.5" height="15.0" fill="rgb(216,128,40)" rx="2" ry="2" />
<text  x="66.78" y="479.5" >cpu..</text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.05%)</title><rect x="1162.4" y="453" width="0.6" height="15.0" fill="rgb(250,28,10)" rx="2" ry="2" />
<text  x="1165.40" y="463.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.02%)</title><rect x="157.8" y="405" width="0.2" height="15.0" fill="rgb(249,156,12)" rx="2" ry="2" />
<text  x="160.83" y="415.5" ></text>
</g>
<g >
<title>newidle_balance (22 samples, 0.38%)</title><rect x="1183.5" y="325" width="4.5" height="15.0" fill="rgb(241,146,32)" rx="2" ry="2" />
<text  x="1186.46" y="335.5" ></text>
</g>
<g >
<title>__schedule (7 samples, 0.12%)</title><rect x="102.0" y="421" width="1.4" height="15.0" fill="rgb(240,228,10)" rx="2" ry="2" />
<text  x="105.01" y="431.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (266 samples, 4.61%)</title><rect x="1135.6" y="501" width="54.4" height="15.0" fill="rgb(206,167,42)" rx="2" ry="2" />
<text  x="1138.61" y="511.5" >secon..</text>
</g>
<g >
<title>start_kernel (132 samples, 2.29%)</title><rect x="1163.0" y="453" width="27.0" height="15.0" fill="rgb(244,90,10)" rx="2" ry="2" />
<text  x="1166.01" y="463.5" >s..</text>
</g>
<g >
<title>__schedule (3 samples, 0.05%)</title><rect x="166.0" y="421" width="0.6" height="15.0" fill="rgb(237,212,17)" rx="2" ry="2" />
<text  x="169.01" y="431.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (4 samples, 0.07%)</title><rect x="1160.4" y="341" width="0.8" height="15.0" fill="rgb(211,144,46)" rx="2" ry="2" />
<text  x="1163.35" y="351.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.02%)</title><rect x="155.0" y="357" width="0.2" height="15.0" fill="rgb(254,34,41)" rx="2" ry="2" />
<text  x="157.97" y="367.5" ></text>
</g>
<g >
<title>compaction_alloc (3 samples, 0.05%)</title><rect x="63.2" y="389" width="0.6" height="15.0" fill="rgb(209,10,12)" rx="2" ry="2" />
<text  x="66.16" y="399.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (29 samples, 0.50%)</title><rect x="1102.5" y="485" width="5.9" height="15.0" fill="rgb(208,150,18)" rx="2" ry="2" />
<text  x="1105.49" y="495.5" ></text>
</g>
<g >
<title>pick_next_task_idle (3 samples, 0.05%)</title><rect x="151.5" y="341" width="0.6" height="15.0" fill="rgb(222,97,8)" rx="2" ry="2" />
<text  x="154.49" y="351.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (1 samples, 0.02%)</title><rect x="1126.4" y="453" width="0.2" height="15.0" fill="rgb(234,93,3)" rx="2" ry="2" />
<text  x="1129.41" y="463.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.03%)</title><rect x="37.4" y="373" width="0.4" height="15.0" fill="rgb(249,195,17)" rx="2" ry="2" />
<text  x="40.40" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="174.8" y="469" width="0.2" height="15.0" fill="rgb(238,165,6)" rx="2" ry="2" />
<text  x="177.80" y="479.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="170.7" y="325" width="0.2" height="15.0" fill="rgb(218,25,43)" rx="2" ry="2" />
<text  x="173.71" y="335.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.02%)</title><rect x="1175.1" y="341" width="0.2" height="15.0" fill="rgb(222,166,21)" rx="2" ry="2" />
<text  x="1178.07" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="754.7" y="389" width="0.2" height="15.0" fill="rgb(221,8,53)" rx="2" ry="2" />
<text  x="757.68" y="399.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (25 samples, 0.43%)</title><rect x="167.0" y="373" width="5.1" height="15.0" fill="rgb(238,161,28)" rx="2" ry="2" />
<text  x="170.03" y="383.5" ></text>
</g>
<g >
<title>do_anonymous_page (9 samples, 0.16%)</title><rect x="329.0" y="389" width="1.8" height="15.0" fill="rgb(228,88,27)" rx="2" ry="2" />
<text  x="331.97" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1,091 samples, 18.90%)</title><rect x="787.8" y="501" width="223.1" height="15.0" fill="rgb(212,229,16)" rx="2" ry="2" />
<text  x="790.81" y="511.5" >rustposix::interface::pipe::E..</text>
</g>
<g >
<title>schedule_idle (7 samples, 0.12%)</title><rect x="102.0" y="437" width="1.4" height="15.0" fill="rgb(227,77,3)" rx="2" ry="2" />
<text  x="105.01" y="447.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (25 samples, 0.43%)</title><rect x="556.8" y="453" width="5.1" height="15.0" fill="rgb(217,148,12)" rx="2" ry="2" />
<text  x="559.75" y="463.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="166.4" y="373" width="0.2" height="15.0" fill="rgb(252,178,38)" rx="2" ry="2" />
<text  x="169.42" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 1.11%)</title><rect x="175.0" y="485" width="13.1" height="15.0" fill="rgb(213,8,2)" rx="2" ry="2" />
<text  x="178.01" y="495.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (19 samples, 0.33%)</title><rect x="1097.8" y="453" width="3.9" height="15.0" fill="rgb(236,210,45)" rx="2" ry="2" />
<text  x="1100.78" y="463.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (2 samples, 0.03%)</title><rect x="188.1" y="229" width="0.4" height="15.0" fill="rgb(230,37,52)" rx="2" ry="2" />
<text  x="191.09" y="239.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (76 samples, 1.32%)</title><rect x="26.4" y="469" width="15.5" height="15.0" fill="rgb(252,193,45)" rx="2" ry="2" />
<text  x="29.36" y="479.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (701 samples, 12.15%)</title><rect x="637.3" y="485" width="143.3" height="15.0" fill="rgb(215,53,4)" rx="2" ry="2" />
<text  x="640.32" y="495.5" >ringbuf::consumer:..</text>
</g>
<g >
<title>read_tsc (2 samples, 0.03%)</title><rect x="154.6" y="357" width="0.4" height="15.0" fill="rgb(232,10,39)" rx="2" ry="2" />
<text  x="157.56" y="367.5" ></text>
</g>
<g >
<title>pick_next_task_fair (40 samples, 0.69%)</title><rect x="143.3" y="341" width="8.2" height="15.0" fill="rgb(223,82,23)" rx="2" ry="2" />
<text  x="146.31" y="351.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (7 samples, 0.12%)</title><rect x="237.8" y="501" width="1.4" height="15.0" fill="rgb(205,85,54)" rx="2" ry="2" />
<text  x="240.78" y="511.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (3 samples, 0.05%)</title><rect x="102.8" y="373" width="0.6" height="15.0" fill="rgb(211,52,20)" rx="2" ry="2" />
<text  x="105.83" y="383.5" ></text>
</g>
<g >
<title>napi_poll (1 samples, 0.02%)</title><rect x="1135.4" y="389" width="0.2" height="15.0" fill="rgb(236,221,15)" rx="2" ry="2" />
<text  x="1138.41" y="399.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (2 samples, 0.03%)</title><rect x="188.1" y="245" width="0.4" height="15.0" fill="rgb(223,95,35)" rx="2" ry="2" />
<text  x="191.09" y="255.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (19 samples, 0.33%)</title><rect x="806.4" y="485" width="3.9" height="15.0" fill="rgb(212,132,3)" rx="2" ry="2" />
<text  x="809.41" y="495.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.03%)</title><rect x="34.7" y="325" width="0.4" height="15.0" fill="rgb(205,61,36)" rx="2" ry="2" />
<text  x="37.74" y="335.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (88 samples, 1.52%)</title><rect x="1108.4" y="485" width="18.0" height="15.0" fill="rgb(251,110,51)" rx="2" ry="2" />
<text  x="1111.42" y="495.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="174.4" y="277" width="0.2" height="15.0" fill="rgb(206,206,14)" rx="2" ry="2" />
<text  x="177.39" y="287.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (3 samples, 0.05%)</title><rect x="188.1" y="277" width="0.6" height="15.0" fill="rgb(210,112,40)" rx="2" ry="2" />
<text  x="191.09" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1177.7" y="293" width="0.2" height="15.0" fill="rgb(239,207,9)" rx="2" ry="2" />
<text  x="1180.73" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (123 samples, 2.13%)</title><rect x="331.4" y="501" width="25.2" height="15.0" fill="rgb(239,199,22)" rx="2" ry="2" />
<text  x="334.43" y="511.5" >_..</text>
</g>
<g >
<title>core::cmp::Ord::min (17 samples, 0.29%)</title><rect x="810.3" y="469" width="3.5" height="15.0" fill="rgb(240,26,8)" rx="2" ry="2" />
<text  x="813.30" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (25 samples, 0.43%)</title><rect x="556.8" y="437" width="5.1" height="15.0" fill="rgb(221,50,4)" rx="2" ry="2" />
<text  x="559.75" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter (118 samples, 2.04%)</title><rect x="106.3" y="357" width="24.1" height="15.0" fill="rgb(240,58,14)" rx="2" ry="2" />
<text  x="109.31" y="367.5" >c..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (461 samples, 7.99%)</title><rect x="63.8" y="501" width="94.2" height="15.0" fill="rgb(232,219,37)" rx="2" ry="2" />
<text  x="66.78" y="511.5" >secondary_s..</text>
</g>
<g >
<title>__udp4_lib_rcv (1 samples, 0.02%)</title><rect x="1135.4" y="165" width="0.2" height="15.0" fill="rgb(215,10,18)" rx="2" ry="2" />
<text  x="1138.41" y="175.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.05%)</title><rect x="576.4" y="421" width="0.6" height="15.0" fill="rgb(209,133,46)" rx="2" ry="2" />
<text  x="579.38" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (14 samples, 0.24%)</title><rect x="1176.7" y="325" width="2.9" height="15.0" fill="rgb(205,13,24)" rx="2" ry="2" />
<text  x="1179.71" y="335.5" ></text>
</g>
<g >
<title>start_kernel (263 samples, 4.56%)</title><rect x="104.3" y="453" width="53.7" height="15.0" fill="rgb(250,89,8)" rx="2" ry="2" />
<text  x="107.26" y="463.5" >start..</text>
</g>
<g >
<title>ext4_file_write_iter (8 samples, 0.14%)</title><rect x="188.1" y="325" width="1.6" height="15.0" fill="rgb(247,138,5)" rx="2" ry="2" />
<text  x="191.09" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (158 samples, 2.74%)</title><rect x="1065.5" y="437" width="32.3" height="15.0" fill="rgb(235,199,16)" rx="2" ry="2" />
<text  x="1068.48" y="447.5" >co..</text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="102.4" y="373" width="0.2" height="15.0" fill="rgb(219,223,20)" rx="2" ry="2" />
<text  x="105.42" y="383.5" ></text>
</g>
<g >
<title>llist_add_batch (2 samples, 0.03%)</title><rect x="1187.5" y="261" width="0.5" height="15.0" fill="rgb(227,59,19)" rx="2" ry="2" />
<text  x="1190.55" y="271.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.02%)</title><rect x="1016.2" y="437" width="0.2" height="15.0" fill="rgb(207,220,14)" rx="2" ry="2" />
<text  x="1019.20" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (35 samples, 0.61%)</title><rect x="565.5" y="421" width="7.2" height="15.0" fill="rgb(227,9,40)" rx="2" ry="2" />
<text  x="568.55" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (7 samples, 0.12%)</title><rect x="36.0" y="325" width="1.4" height="15.0" fill="rgb(227,93,44)" rx="2" ry="2" />
<text  x="38.97" y="335.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (9 samples, 0.16%)</title><rect x="589.7" y="469" width="1.8" height="15.0" fill="rgb(243,58,18)" rx="2" ry="2" />
<text  x="592.67" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.02%)</title><rect x="1157.3" y="373" width="0.2" height="15.0" fill="rgb(217,79,32)" rx="2" ry="2" />
<text  x="1160.28" y="383.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="15.7" y="405" width="0.2" height="15.0" fill="rgb(215,76,41)" rx="2" ry="2" />
<text  x="18.73" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="754.7" y="357" width="0.2" height="15.0" fill="rgb(210,119,27)" rx="2" ry="2" />
<text  x="757.68" y="367.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1135.4" y="229" width="0.2" height="15.0" fill="rgb(209,189,21)" rx="2" ry="2" />
<text  x="1138.41" y="239.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="62.3" y="389" width="0.2" height="15.0" fill="rgb(209,136,39)" rx="2" ry="2" />
<text  x="65.34" y="399.5" ></text>
</g>
<g >
<title>generic_write_end (2 samples, 0.03%)</title><rect x="188.7" y="261" width="0.4" height="15.0" fill="rgb(212,74,34)" rx="2" ry="2" />
<text  x="191.71" y="271.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.03%)</title><rect x="1107.8" y="341" width="0.4" height="15.0" fill="rgb(216,131,29)" rx="2" ry="2" />
<text  x="1110.80" y="351.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (4 samples, 0.07%)</title><rect x="1032.6" y="469" width="0.8" height="15.0" fill="rgb(211,20,1)" rx="2" ry="2" />
<text  x="1035.56" y="479.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (38 samples, 0.66%)</title><rect x="167.0" y="469" width="7.8" height="15.0" fill="rgb(225,169,30)" rx="2" ry="2" />
<text  x="170.03" y="479.5" ></text>
</g>
</g>
</svg>
