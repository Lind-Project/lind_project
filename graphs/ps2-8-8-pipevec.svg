<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1686.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1669" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1669" > </text>
<g id="frames">
<g >
<title>__mark_inode_dirty (6 samples, 0.17%)</title><rect x="45.7" y="1221" width="2.0" height="15.0" fill="rgb(238,139,48)" rx="2" ry="2" />
<text  x="48.75" y="1231.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (169 samples, 4.74%)</title><rect x="1134.1" y="1573" width="55.9" height="15.0" fill="rgb(235,130,31)" rx="2" ry="2" />
<text  x="1137.06" y="1583.5" >x86_6..</text>
</g>
<g >
<title>lind_write (1 samples, 0.03%)</title><rect x="1041.7" y="1589" width="0.3" height="15.0" fill="rgb(222,175,46)" rx="2" ry="2" />
<text  x="1044.71" y="1599.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.06%)</title><rect x="302.9" y="1381" width="0.7" height="15.0" fill="rgb(240,214,33)" rx="2" ry="2" />
<text  x="305.93" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="199.7" y="1301" width="0.3" height="15.0" fill="rgb(241,190,29)" rx="2" ry="2" />
<text  x="202.66" y="1311.5" ></text>
</g>
<g >
<title>vmacache_find (4 samples, 0.11%)</title><rect x="987.4" y="1525" width="1.4" height="15.0" fill="rgb(219,52,43)" rx="2" ry="2" />
<text  x="990.43" y="1535.5" ></text>
</g>
<g >
<title>do_output_char (1 samples, 0.03%)</title><rect x="10.3" y="1221" width="0.4" height="15.0" fill="rgb(253,46,0)" rx="2" ry="2" />
<text  x="13.33" y="1231.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (2 samples, 0.06%)</title><rect x="39.8" y="1253" width="0.7" height="15.0" fill="rgb(236,13,20)" rx="2" ry="2" />
<text  x="42.79" y="1263.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.06%)</title><rect x="212.6" y="1173" width="0.6" height="15.0" fill="rgb(242,133,44)" rx="2" ry="2" />
<text  x="215.57" y="1183.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (6 samples, 0.17%)</title><rect x="845.4" y="1445" width="2.0" height="15.0" fill="rgb(228,39,11)" rx="2" ry="2" />
<text  x="848.43" y="1455.5" ></text>
</g>
<g >
<title>DynArrayGet (5 samples, 0.14%)</title><rect x="253.6" y="1525" width="1.7" height="15.0" fill="rgb(250,108,38)" rx="2" ry="2" />
<text  x="256.61" y="1535.5" ></text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.03%)</title><rect x="1086.1" y="1493" width="0.3" height="15.0" fill="rgb(227,193,44)" rx="2" ry="2" />
<text  x="1089.07" y="1503.5" ></text>
</g>
<g >
<title>lookup_fast (1 samples, 0.03%)</title><rect x="1085.4" y="1477" width="0.3" height="15.0" fill="rgb(216,113,7)" rx="2" ry="2" />
<text  x="1088.41" y="1487.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (3 samples, 0.08%)</title><rect x="178.5" y="1525" width="1.0" height="15.0" fill="rgb(253,116,28)" rx="2" ry="2" />
<text  x="181.48" y="1535.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.03%)</title><rect x="495.2" y="1429" width="0.4" height="15.0" fill="rgb(223,192,13)" rx="2" ry="2" />
<text  x="498.24" y="1439.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6 samples, 0.17%)</title><rect x="1089.7" y="1493" width="2.0" height="15.0" fill="rgb(213,58,10)" rx="2" ry="2" />
<text  x="1092.71" y="1503.5" ></text>
</g>
<g >
<title>cpuidle_select (14 samples, 0.39%)</title><rect x="1176.4" y="1461" width="4.7" height="15.0" fill="rgb(219,81,28)" rx="2" ry="2" />
<text  x="1179.43" y="1471.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (1 samples, 0.03%)</title><rect x="261.6" y="1541" width="0.3" height="15.0" fill="rgb(214,204,54)" rx="2" ry="2" />
<text  x="264.56" y="1551.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.03%)</title><rect x="1090.4" y="1285" width="0.3" height="15.0" fill="rgb(226,205,44)" rx="2" ry="2" />
<text  x="1093.37" y="1295.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (1 samples, 0.03%)</title><rect x="1048.0" y="1445" width="0.3" height="15.0" fill="rgb(252,202,2)" rx="2" ry="2" />
<text  x="1051.00" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.67%)</title><rect x="39.8" y="1461" width="7.9" height="15.0" fill="rgb(206,42,2)" rx="2" ry="2" />
<text  x="42.79" y="1471.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (14 samples, 0.39%)</title><rect x="425.1" y="1461" width="4.6" height="15.0" fill="rgb(227,35,25)" rx="2" ry="2" />
<text  x="428.07" y="1471.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.34%)</title><rect x="682.9" y="1413" width="4.0" height="15.0" fill="rgb(250,77,19)" rx="2" ry="2" />
<text  x="685.91" y="1423.5" ></text>
</g>
<g >
<title>irqentry_enter (1 samples, 0.03%)</title><rect x="1023.8" y="1557" width="0.4" height="15.0" fill="rgb(226,116,1)" rx="2" ry="2" />
<text  x="1026.84" y="1567.5" ></text>
</g>
<g >
<title>jbd2__journal_start (1 samples, 0.03%)</title><rect x="45.7" y="1173" width="0.4" height="15.0" fill="rgb(216,80,41)" rx="2" ry="2" />
<text  x="48.75" y="1183.5" ></text>
</g>
<g >
<title>nohz_balance_enter_idle (1 samples, 0.03%)</title><rect x="1181.4" y="1461" width="0.3" height="15.0" fill="rgb(254,176,38)" rx="2" ry="2" />
<text  x="1184.39" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="188.4" y="1429" width="0.3" height="15.0" fill="rgb(220,188,34)" rx="2" ry="2" />
<text  x="191.41" y="1439.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.03%)</title><rect x="217.2" y="1141" width="0.3" height="15.0" fill="rgb(211,174,11)" rx="2" ry="2" />
<text  x="220.20" y="1151.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (1 samples, 0.03%)</title><rect x="306.6" y="1397" width="0.3" height="15.0" fill="rgb(252,221,50)" rx="2" ry="2" />
<text  x="309.57" y="1407.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.06%)</title><rect x="188.7" y="1333" width="0.7" height="15.0" fill="rgb(216,125,44)" rx="2" ry="2" />
<text  x="191.74" y="1343.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (3 samples, 0.08%)</title><rect x="46.7" y="1189" width="1.0" height="15.0" fill="rgb(235,37,10)" rx="2" ry="2" />
<text  x="49.74" y="1199.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2 samples, 0.06%)</title><rect x="496.2" y="1429" width="0.7" height="15.0" fill="rgb(227,105,0)" rx="2" ry="2" />
<text  x="499.23" y="1439.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.03%)</title><rect x="1188.0" y="1397" width="0.3" height="15.0" fill="rgb(227,47,12)" rx="2" ry="2" />
<text  x="1191.01" y="1407.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook.constprop.0 (1 samples, 0.03%)</title><rect x="46.1" y="1157" width="0.3" height="15.0" fill="rgb(242,9,23)" rx="2" ry="2" />
<text  x="49.08" y="1167.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.03%)</title><rect x="39.1" y="1445" width="0.4" height="15.0" fill="rgb(227,154,48)" rx="2" ry="2" />
<text  x="42.13" y="1455.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (1 samples, 0.03%)</title><rect x="1048.0" y="789" width="0.3" height="15.0" fill="rgb(234,129,31)" rx="2" ry="2" />
<text  x="1051.00" y="799.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.03%)</title><rect x="999.3" y="1461" width="0.4" height="15.0" fill="rgb(223,198,17)" rx="2" ry="2" />
<text  x="1002.35" y="1471.5" ></text>
</g>
<g >
<title>CheckMemoryAccess (1 samples, 0.03%)</title><rect x="186.1" y="1477" width="0.3" height="15.0" fill="rgb(214,69,36)" rx="2" ry="2" />
<text  x="189.09" y="1487.5" ></text>
</g>
<g >
<title>core::mem::drop (18 samples, 0.50%)</title><rect x="329.4" y="1493" width="6.0" height="15.0" fill="rgb(209,154,16)" rx="2" ry="2" />
<text  x="332.41" y="1503.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.03%)</title><rect x="294.7" y="1413" width="0.3" height="15.0" fill="rgb(212,156,5)" rx="2" ry="2" />
<text  x="297.66" y="1423.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (480 samples, 13.46%)</title><rect x="734.9" y="1493" width="158.9" height="15.0" fill="rgb(253,71,16)" rx="2" ry="2" />
<text  x="737.88" y="1503.5" >rustposix::interface..</text>
</g>
<g >
<title>alloc_pages (1 samples, 0.03%)</title><rect x="999.7" y="1445" width="0.3" height="15.0" fill="rgb(253,126,40)" rx="2" ry="2" />
<text  x="1002.68" y="1455.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.03%)</title><rect x="1048.0" y="149" width="0.3" height="15.0" fill="rgb(235,67,10)" rx="2" ry="2" />
<text  x="1051.00" y="159.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (11 samples, 0.31%)</title><rect x="805.1" y="1413" width="3.6" height="15.0" fill="rgb(213,157,40)" rx="2" ry="2" />
<text  x="808.05" y="1423.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (20 samples, 0.56%)</title><rect x="661.7" y="1429" width="6.7" height="15.0" fill="rgb(229,11,14)" rx="2" ry="2" />
<text  x="664.73" y="1439.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.48%)</title><rect x="576.3" y="1509" width="5.7" height="15.0" fill="rgb(229,202,52)" rx="2" ry="2" />
<text  x="579.33" y="1519.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.03%)</title><rect x="1086.1" y="1525" width="0.3" height="15.0" fill="rgb(227,121,54)" rx="2" ry="2" />
<text  x="1089.07" y="1535.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.03%)</title><rect x="1048.0" y="1221" width="0.3" height="15.0" fill="rgb(242,95,42)" rx="2" ry="2" />
<text  x="1051.00" y="1231.5" ></text>
</g>
<g >
<title>meminfo_proc_show (1 samples, 0.03%)</title><rect x="1086.1" y="1477" width="0.3" height="15.0" fill="rgb(236,5,47)" rx="2" ry="2" />
<text  x="1089.07" y="1487.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 2.24%)</title><rect x="11.0" y="1557" width="26.5" height="15.0" fill="rgb(239,166,42)" rx="2" ry="2" />
<text  x="13.99" y="1567.5" >p..</text>
</g>
<g >
<title>_perf_event_enable (77 samples, 2.16%)</title><rect x="12.0" y="1413" width="25.5" height="15.0" fill="rgb(229,117,1)" rx="2" ry="2" />
<text  x="14.99" y="1423.5" >_..</text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.03%)</title><rect x="1186.7" y="1429" width="0.3" height="15.0" fill="rgb(216,175,45)" rx="2" ry="2" />
<text  x="1189.69" y="1439.5" ></text>
</g>
<g >
<title>process_vm_writev (2 samples, 0.06%)</title><rect x="1033.8" y="1573" width="0.6" height="15.0" fill="rgb(228,51,27)" rx="2" ry="2" />
<text  x="1036.77" y="1583.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.03%)</title><rect x="1090.4" y="1365" width="0.3" height="15.0" fill="rgb(227,175,36)" rx="2" ry="2" />
<text  x="1093.37" y="1375.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.03%)</title><rect x="1047.3" y="1205" width="0.4" height="15.0" fill="rgb(224,183,14)" rx="2" ry="2" />
<text  x="1050.34" y="1215.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.03%)</title><rect x="1048.0" y="693" width="0.3" height="15.0" fill="rgb(253,28,7)" rx="2" ry="2" />
<text  x="1051.00" y="703.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (15 samples, 0.42%)</title><rect x="472.7" y="1445" width="5.0" height="15.0" fill="rgb(252,49,30)" rx="2" ry="2" />
<text  x="475.73" y="1455.5" ></text>
</g>
<g >
<title>ret_from_fork (3 samples, 0.08%)</title><rect x="1087.1" y="1605" width="1.0" height="15.0" fill="rgb(208,182,20)" rx="2" ry="2" />
<text  x="1090.06" y="1615.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.03%)</title><rect x="617.7" y="1349" width="0.3" height="15.0" fill="rgb(209,151,46)" rx="2" ry="2" />
<text  x="620.71" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="10.7" y="1605" width="0.3" height="15.0" fill="rgb(211,52,53)" rx="2" ry="2" />
<text  x="13.66" y="1615.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.03%)</title><rect x="1091.4" y="1269" width="0.3" height="15.0" fill="rgb(232,203,5)" rx="2" ry="2" />
<text  x="1094.36" y="1279.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.03%)</title><rect x="10.7" y="1445" width="0.3" height="15.0" fill="rgb(240,181,41)" rx="2" ry="2" />
<text  x="13.66" y="1455.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (113 samples, 3.17%)</title><rect x="749.8" y="1445" width="37.4" height="15.0" fill="rgb(248,76,9)" rx="2" ry="2" />
<text  x="752.78" y="1455.5" >&lt;pa..</text>
</g>
<g >
<title>NaClAddrSpaceFree (33 samples, 0.93%)</title><rect x="188.7" y="1477" width="11.0" height="15.0" fill="rgb(210,210,32)" rx="2" ry="2" />
<text  x="191.74" y="1487.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (5 samples, 0.14%)</title><rect x="40.5" y="1253" width="1.6" height="15.0" fill="rgb(232,124,19)" rx="2" ry="2" />
<text  x="43.45" y="1263.5" ></text>
</g>
<g >
<title>ovl_read_iter (4 samples, 0.11%)</title><rect x="431.0" y="1317" width="1.4" height="15.0" fill="rgb(225,21,43)" rx="2" ry="2" />
<text  x="434.03" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.06%)</title><rect x="992.4" y="1493" width="0.7" height="15.0" fill="rgb(231,160,48)" rx="2" ry="2" />
<text  x="995.40" y="1503.5" ></text>
</g>
<g >
<title>all (3,565 samples, 100%)</title><rect x="10.0" y="1637" width="1180.0" height="15.0" fill="rgb(215,217,30)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" ></text>
</g>
<g >
<title>handle_mm_fault (106 samples, 2.97%)</title><rect x="988.8" y="1541" width="35.0" height="15.0" fill="rgb(254,72,27)" rx="2" ry="2" />
<text  x="991.75" y="1551.5" >ha..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (25 samples, 0.70%)</title><rect x="210.6" y="1477" width="8.3" height="15.0" fill="rgb(242,40,8)" rx="2" ry="2" />
<text  x="213.58" y="1487.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.03%)</title><rect x="10.3" y="1301" width="0.4" height="15.0" fill="rgb(228,41,37)" rx="2" ry="2" />
<text  x="13.33" y="1311.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.03%)</title><rect x="188.4" y="1301" width="0.3" height="15.0" fill="rgb(228,84,5)" rx="2" ry="2" />
<text  x="191.41" y="1311.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (2 samples, 0.06%)</title><rect x="46.1" y="1189" width="0.6" height="15.0" fill="rgb(236,224,1)" rx="2" ry="2" />
<text  x="49.08" y="1199.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.03%)</title><rect x="1059.6" y="1493" width="0.3" height="15.0" fill="rgb(243,228,24)" rx="2" ry="2" />
<text  x="1062.59" y="1503.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3 samples, 0.08%)</title><rect x="1089.7" y="1461" width="1.0" height="15.0" fill="rgb(235,91,51)" rx="2" ry="2" />
<text  x="1092.71" y="1471.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (1 samples, 0.03%)</title><rect x="70.6" y="1573" width="0.3" height="15.0" fill="rgb(240,179,52)" rx="2" ry="2" />
<text  x="73.57" y="1583.5" ></text>
</g>
<g >
<title>xa_get_order (1 samples, 0.03%)</title><rect x="48.7" y="1317" width="0.4" height="15.0" fill="rgb(207,26,49)" rx="2" ry="2" />
<text  x="51.73" y="1327.5" ></text>
</g>
<g >
<title>_IO_file_write (1 samples, 0.03%)</title><rect x="10.3" y="1413" width="0.4" height="15.0" fill="rgb(239,95,5)" rx="2" ry="2" />
<text  x="13.33" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.17%)</title><rect x="433.3" y="1429" width="2.0" height="15.0" fill="rgb(228,147,43)" rx="2" ry="2" />
<text  x="436.34" y="1439.5" ></text>
</g>
<g >
<title>ovl_get_acl (1 samples, 0.03%)</title><rect x="1048.0" y="37" width="0.3" height="15.0" fill="rgb(252,221,32)" rx="2" ry="2" />
<text  x="1051.00" y="47.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.constprop.0.isra.0 (10 samples, 0.28%)</title><rect x="1182.7" y="1461" width="3.3" height="15.0" fill="rgb(236,46,12)" rx="2" ry="2" />
<text  x="1185.72" y="1471.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="305.9" y="1349" width="0.3" height="15.0" fill="rgb(229,59,10)" rx="2" ry="2" />
<text  x="308.91" y="1359.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (17 samples, 0.48%)</title><rect x="669.3" y="1461" width="5.7" height="15.0" fill="rgb(209,91,20)" rx="2" ry="2" />
<text  x="672.34" y="1471.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.03%)</title><rect x="1085.1" y="1461" width="0.3" height="15.0" fill="rgb(248,115,52)" rx="2" ry="2" />
<text  x="1088.07" y="1471.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.03%)</title><rect x="1091.4" y="1333" width="0.3" height="15.0" fill="rgb(234,210,41)" rx="2" ry="2" />
<text  x="1094.36" y="1343.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (4 samples, 0.11%)</title><rect x="377.1" y="1333" width="1.3" height="15.0" fill="rgb(205,88,4)" rx="2" ry="2" />
<text  x="380.07" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="39.5" y="1445" width="0.3" height="15.0" fill="rgb(236,112,44)" rx="2" ry="2" />
<text  x="42.46" y="1455.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c (1 samples, 0.03%)</title><rect x="1048.0" y="261" width="0.3" height="15.0" fill="rgb(222,150,35)" rx="2" ry="2" />
<text  x="1051.00" y="271.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (18 samples, 0.50%)</title><rect x="329.4" y="1429" width="6.0" height="15.0" fill="rgb(209,23,20)" rx="2" ry="2" />
<text  x="332.41" y="1439.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.06%)</title><rect x="294.3" y="1461" width="0.7" height="15.0" fill="rgb(222,149,47)" rx="2" ry="2" />
<text  x="297.33" y="1471.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11 samples, 0.31%)</title><rect x="1138.0" y="1381" width="3.7" height="15.0" fill="rgb(250,164,43)" rx="2" ry="2" />
<text  x="1141.03" y="1391.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="999.7" y="1413" width="0.3" height="15.0" fill="rgb(209,56,50)" rx="2" ry="2" />
<text  x="1002.68" y="1423.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (3 samples, 0.08%)</title><rect x="186.4" y="1477" width="1.0" height="15.0" fill="rgb(236,67,13)" rx="2" ry="2" />
<text  x="189.42" y="1487.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.03%)</title><rect x="1091.4" y="1365" width="0.3" height="15.0" fill="rgb(218,9,26)" rx="2" ry="2" />
<text  x="1094.36" y="1375.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.03%)</title><rect x="1091.4" y="1285" width="0.3" height="15.0" fill="rgb(234,218,15)" rx="2" ry="2" />
<text  x="1094.36" y="1295.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.03%)</title><rect x="10.3" y="1317" width="0.4" height="15.0" fill="rgb(214,114,33)" rx="2" ry="2" />
<text  x="13.33" y="1327.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.03%)</title><rect x="188.4" y="1349" width="0.3" height="15.0" fill="rgb(249,36,43)" rx="2" ry="2" />
<text  x="191.41" y="1359.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (1 samples, 0.03%)</title><rect x="615.1" y="1349" width="0.3" height="15.0" fill="rgb(214,219,23)" rx="2" ry="2" />
<text  x="618.06" y="1359.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.03%)</title><rect x="10.7" y="1493" width="0.3" height="15.0" fill="rgb(249,136,32)" rx="2" ry="2" />
<text  x="13.66" y="1503.5" ></text>
</g>
<g >
<title>update_blocked_averages (6 samples, 0.17%)</title><rect x="1183.4" y="1445" width="2.0" height="15.0" fill="rgb(239,92,21)" rx="2" ry="2" />
<text  x="1186.38" y="1455.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.14%)</title><rect x="376.7" y="1349" width="1.7" height="15.0" fill="rgb(232,7,14)" rx="2" ry="2" />
<text  x="379.74" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_write (24 samples, 0.67%)</title><rect x="39.8" y="1429" width="7.9" height="15.0" fill="rgb(210,44,13)" rx="2" ry="2" />
<text  x="42.79" y="1439.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.06%)</title><rect x="495.6" y="1429" width="0.6" height="15.0" fill="rgb(210,161,26)" rx="2" ry="2" />
<text  x="498.57" y="1439.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (41 samples, 1.15%)</title><rect x="606.1" y="1461" width="13.6" height="15.0" fill="rgb(239,37,52)" rx="2" ry="2" />
<text  x="609.12" y="1471.5" ></text>
</g>
<g >
<title>BitmapSetBit (1 samples, 0.03%)</title><rect x="1046.7" y="1397" width="0.3" height="15.0" fill="rgb(251,103,52)" rx="2" ry="2" />
<text  x="1049.68" y="1407.5" ></text>
</g>
<g >
<title>handle_pte_fault (94 samples, 2.64%)</title><rect x="992.1" y="1509" width="31.1" height="15.0" fill="rgb(215,180,42)" rx="2" ry="2" />
<text  x="995.06" y="1519.5" >ha..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.25%)</title><rect x="596.9" y="1413" width="2.9" height="15.0" fill="rgb(239,54,19)" rx="2" ry="2" />
<text  x="599.86" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (25 samples, 0.70%)</title><rect x="210.6" y="1397" width="8.3" height="15.0" fill="rgb(251,2,44)" rx="2" ry="2" />
<text  x="213.58" y="1407.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="596.2" y="1397" width="0.3" height="15.0" fill="rgb(216,204,23)" rx="2" ry="2" />
<text  x="599.19" y="1407.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.03%)</title><rect x="189.1" y="1269" width="0.3" height="15.0" fill="rgb(212,24,23)" rx="2" ry="2" />
<text  x="192.07" y="1279.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="308.6" y="1381" width="0.3" height="15.0" fill="rgb(218,21,7)" rx="2" ry="2" />
<text  x="311.56" y="1391.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (4 samples, 0.11%)</title><rect x="1033.1" y="1589" width="1.3" height="15.0" fill="rgb(238,69,44)" rx="2" ry="2" />
<text  x="1036.11" y="1599.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (2 samples, 0.06%)</title><rect x="48.4" y="1381" width="0.7" height="15.0" fill="rgb(237,32,5)" rx="2" ry="2" />
<text  x="51.40" y="1391.5" ></text>
</g>
<g >
<title>vfs_iter_read (3 samples, 0.08%)</title><rect x="431.4" y="1301" width="1.0" height="15.0" fill="rgb(244,36,8)" rx="2" ry="2" />
<text  x="434.36" y="1311.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.03%)</title><rect x="389.3" y="1429" width="0.4" height="15.0" fill="rgb(222,53,51)" rx="2" ry="2" />
<text  x="392.32" y="1439.5" ></text>
</g>
<g >
<title>free_swap_cache (1 samples, 0.03%)</title><rect x="218.5" y="1189" width="0.4" height="15.0" fill="rgb(232,12,1)" rx="2" ry="2" />
<text  x="221.53" y="1199.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (27 samples, 0.76%)</title><rect x="179.8" y="1509" width="8.9" height="15.0" fill="rgb(251,95,34)" rx="2" ry="2" />
<text  x="182.80" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (25 samples, 0.70%)</title><rect x="210.6" y="1413" width="8.3" height="15.0" fill="rgb(229,33,15)" rx="2" ry="2" />
<text  x="213.58" y="1423.5" ></text>
</g>
<g >
<title>do_tty_write (1 samples, 0.03%)</title><rect x="10.3" y="1253" width="0.4" height="15.0" fill="rgb(249,144,1)" rx="2" ry="2" />
<text  x="13.33" y="1263.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.03%)</title><rect x="387.3" y="1413" width="0.4" height="15.0" fill="rgb(225,66,45)" rx="2" ry="2" />
<text  x="390.34" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.45%)</title><rect x="656.1" y="1429" width="5.3" height="15.0" fill="rgb(209,147,37)" rx="2" ry="2" />
<text  x="659.10" y="1439.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (10 samples, 0.28%)</title><rect x="1015.9" y="1429" width="3.3" height="15.0" fill="rgb(246,25,7)" rx="2" ry="2" />
<text  x="1018.90" y="1439.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (6 samples, 0.17%)</title><rect x="376.7" y="1429" width="2.0" height="15.0" fill="rgb(229,38,37)" rx="2" ry="2" />
<text  x="379.74" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="1086.1" y="1573" width="0.3" height="15.0" fill="rgb(229,55,47)" rx="2" ry="2" />
<text  x="1089.07" y="1583.5" ></text>
</g>
<g >
<title>NaClSysExecve (36 samples, 1.01%)</title><rect x="188.7" y="1557" width="12.0" height="15.0" fill="rgb(226,219,26)" rx="2" ry="2" />
<text  x="191.74" y="1567.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.03%)</title><rect x="605.8" y="1413" width="0.3" height="15.0" fill="rgb(209,213,45)" rx="2" ry="2" />
<text  x="608.79" y="1423.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (1 samples, 0.03%)</title><rect x="378.7" y="1413" width="0.4" height="15.0" fill="rgb(208,109,51)" rx="2" ry="2" />
<text  x="381.73" y="1423.5" ></text>
</g>
<g >
<title>CompareAndSwap (2 samples, 0.06%)</title><rect x="1030.5" y="1589" width="0.6" height="15.0" fill="rgb(246,177,52)" rx="2" ry="2" />
<text  x="1033.46" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="10.3" y="1349" width="0.4" height="15.0" fill="rgb(214,19,46)" rx="2" ry="2" />
<text  x="13.33" y="1359.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (1 samples, 0.03%)</title><rect x="1048.0" y="1109" width="0.3" height="15.0" fill="rgb(253,127,50)" rx="2" ry="2" />
<text  x="1051.00" y="1119.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.03%)</title><rect x="1185.7" y="1397" width="0.3" height="15.0" fill="rgb(218,216,35)" rx="2" ry="2" />
<text  x="1188.70" y="1407.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (3 samples, 0.08%)</title><rect x="328.4" y="1445" width="1.0" height="15.0" fill="rgb(227,121,24)" rx="2" ry="2" />
<text  x="331.42" y="1455.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (23 samples, 0.65%)</title><rect x="832.2" y="1445" width="7.6" height="15.0" fill="rgb(248,167,45)" rx="2" ry="2" />
<text  x="835.19" y="1455.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (2 samples, 0.06%)</title><rect x="299.0" y="1413" width="0.6" height="15.0" fill="rgb(217,53,21)" rx="2" ry="2" />
<text  x="301.96" y="1423.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (25 samples, 0.70%)</title><rect x="379.1" y="1429" width="8.2" height="15.0" fill="rgb(213,114,21)" rx="2" ry="2" />
<text  x="382.06" y="1439.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (2 samples, 0.06%)</title><rect x="674.3" y="1333" width="0.7" height="15.0" fill="rgb(242,136,30)" rx="2" ry="2" />
<text  x="677.31" y="1343.5" ></text>
</g>
<g >
<title>&lt;dashmap::serde::DashMapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.03%)</title><rect x="1048.0" y="949" width="0.3" height="15.0" fill="rgb(226,169,3)" rx="2" ry="2" />
<text  x="1051.00" y="959.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.06%)</title><rect x="787.2" y="1477" width="0.6" height="15.0" fill="rgb(254,205,52)" rx="2" ry="2" />
<text  x="790.18" y="1487.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.03%)</title><rect x="188.4" y="1285" width="0.3" height="15.0" fill="rgb(251,12,28)" rx="2" ry="2" />
<text  x="191.41" y="1295.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (16 samples, 0.45%)</title><rect x="365.8" y="1397" width="5.3" height="15.0" fill="rgb(210,157,40)" rx="2" ry="2" />
<text  x="368.82" y="1407.5" ></text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.03%)</title><rect x="42.4" y="1189" width="0.4" height="15.0" fill="rgb(247,194,47)" rx="2" ry="2" />
<text  x="45.44" y="1199.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1 samples, 0.03%)</title><rect x="1033.1" y="1269" width="0.3" height="15.0" fill="rgb(249,60,24)" rx="2" ry="2" />
<text  x="1036.11" y="1279.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (19 samples, 0.53%)</title><rect x="728.6" y="1461" width="6.3" height="15.0" fill="rgb(209,20,34)" rx="2" ry="2" />
<text  x="731.59" y="1471.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::initialize::{{closure}} (1 samples, 0.03%)</title><rect x="1048.0" y="1365" width="0.3" height="15.0" fill="rgb(216,72,2)" rx="2" ry="2" />
<text  x="1051.00" y="1375.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (8 samples, 0.22%)</title><rect x="430.0" y="1461" width="2.7" height="15.0" fill="rgb(240,168,3)" rx="2" ry="2" />
<text  x="433.03" y="1471.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (1 samples, 0.03%)</title><rect x="225.8" y="1557" width="0.3" height="15.0" fill="rgb(210,37,34)" rx="2" ry="2" />
<text  x="228.81" y="1567.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.03%)</title><rect x="188.4" y="1461" width="0.3" height="15.0" fill="rgb(215,29,13)" rx="2" ry="2" />
<text  x="191.41" y="1471.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (4 samples, 0.11%)</title><rect x="1020.5" y="1461" width="1.4" height="15.0" fill="rgb(221,134,10)" rx="2" ry="2" />
<text  x="1023.53" y="1471.5" ></text>
</g>
<g >
<title>ahci_single_level_irq_intr (1 samples, 0.03%)</title><rect x="1089.4" y="1397" width="0.3" height="15.0" fill="rgb(214,109,47)" rx="2" ry="2" />
<text  x="1092.38" y="1407.5" ></text>
</g>
<g >
<title>open64 (1 samples, 0.03%)</title><rect x="1048.0" y="213" width="0.3" height="15.0" fill="rgb(237,209,7)" rx="2" ry="2" />
<text  x="1051.00" y="223.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (20 samples, 0.56%)</title><rect x="628.0" y="1461" width="6.6" height="15.0" fill="rgb(243,169,10)" rx="2" ry="2" />
<text  x="630.97" y="1471.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.06%)</title><rect x="1174.4" y="1429" width="0.7" height="15.0" fill="rgb(221,93,36)" rx="2" ry="2" />
<text  x="1177.44" y="1439.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.06%)</title><rect x="998.7" y="1461" width="0.6" height="15.0" fill="rgb(250,204,45)" rx="2" ry="2" />
<text  x="1001.68" y="1471.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.03%)</title><rect x="1047.0" y="1237" width="0.3" height="15.0" fill="rgb(245,213,15)" rx="2" ry="2" />
<text  x="1050.01" y="1247.5" ></text>
</g>
<g >
<title>process_vm_writev (2 samples, 0.06%)</title><rect x="1033.1" y="1557" width="0.7" height="15.0" fill="rgb(252,103,32)" rx="2" ry="2" />
<text  x="1036.11" y="1567.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.03%)</title><rect x="1048.0" y="501" width="0.3" height="15.0" fill="rgb(252,119,47)" rx="2" ry="2" />
<text  x="1051.00" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.42%)</title><rect x="600.8" y="1381" width="5.0" height="15.0" fill="rgb(232,142,37)" rx="2" ry="2" />
<text  x="603.83" y="1391.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.03%)</title><rect x="1047.7" y="1205" width="0.3" height="15.0" fill="rgb(220,35,20)" rx="2" ry="2" />
<text  x="1050.67" y="1215.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.03%)</title><rect x="1048.0" y="677" width="0.3" height="15.0" fill="rgb(232,199,14)" rx="2" ry="2" />
<text  x="1051.00" y="687.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.17%)</title><rect x="673.0" y="1381" width="2.0" height="15.0" fill="rgb(208,103,33)" rx="2" ry="2" />
<text  x="675.98" y="1391.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="839.8" y="1461" width="0.3" height="15.0" fill="rgb(253,153,44)" rx="2" ry="2" />
<text  x="842.81" y="1471.5" ></text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.03%)</title><rect x="1033.4" y="1237" width="0.4" height="15.0" fill="rgb(215,125,28)" rx="2" ry="2" />
<text  x="1036.44" y="1247.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.03%)</title><rect x="306.9" y="1381" width="0.3" height="15.0" fill="rgb(240,92,17)" rx="2" ry="2" />
<text  x="309.90" y="1391.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.34%)</title><rect x="295.0" y="1381" width="4.0" height="15.0" fill="rgb(233,12,47)" rx="2" ry="2" />
<text  x="297.99" y="1391.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.11%)</title><rect x="594.9" y="1397" width="1.3" height="15.0" fill="rgb(237,197,23)" rx="2" ry="2" />
<text  x="597.87" y="1407.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (1 samples, 0.03%)</title><rect x="45.4" y="1205" width="0.3" height="15.0" fill="rgb(241,216,8)" rx="2" ry="2" />
<text  x="48.42" y="1215.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (1 samples, 0.03%)</title><rect x="1048.0" y="437" width="0.3" height="15.0" fill="rgb(208,44,7)" rx="2" ry="2" />
<text  x="1051.00" y="447.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (2 samples, 0.06%)</title><rect x="1033.1" y="1461" width="0.7" height="15.0" fill="rgb(234,65,38)" rx="2" ry="2" />
<text  x="1036.11" y="1471.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (7 samples, 0.20%)</title><rect x="67.6" y="1557" width="2.3" height="15.0" fill="rgb(225,28,7)" rx="2" ry="2" />
<text  x="70.59" y="1567.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (25 samples, 0.70%)</title><rect x="787.8" y="1461" width="8.3" height="15.0" fill="rgb(217,40,29)" rx="2" ry="2" />
<text  x="790.84" y="1471.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (12 samples, 0.34%)</title><rect x="611.8" y="1413" width="3.9" height="15.0" fill="rgb(254,22,4)" rx="2" ry="2" />
<text  x="614.75" y="1423.5" ></text>
</g>
<g >
<title>[libc.so.6] (24 samples, 0.67%)</title><rect x="243.4" y="1525" width="7.9" height="15.0" fill="rgb(245,10,20)" rx="2" ry="2" />
<text  x="246.35" y="1535.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.03%)</title><rect x="430.4" y="1333" width="0.3" height="15.0" fill="rgb(248,1,16)" rx="2" ry="2" />
<text  x="433.36" y="1343.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (11 samples, 0.31%)</title><rect x="286.4" y="1445" width="3.6" height="15.0" fill="rgb(238,160,49)" rx="2" ry="2" />
<text  x="289.38" y="1455.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 1.94%)</title><rect x="336.4" y="1477" width="22.8" height="15.0" fill="rgb(242,85,18)" rx="2" ry="2" />
<text  x="339.36" y="1487.5" >&lt;..</text>
</g>
<g >
<title>do_sys_poll (5 samples, 0.14%)</title><rect x="37.8" y="1493" width="1.7" height="15.0" fill="rgb(217,225,38)" rx="2" ry="2" />
<text  x="40.80" y="1503.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.48%)</title><rect x="655.8" y="1477" width="5.6" height="15.0" fill="rgb(230,89,23)" rx="2" ry="2" />
<text  x="658.77" y="1487.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (6 samples, 0.17%)</title><rect x="259.6" y="1525" width="2.0" height="15.0" fill="rgb(254,80,1)" rx="2" ry="2" />
<text  x="262.57" y="1535.5" ></text>
</g>
<g >
<title>DynArrayGet (4 samples, 0.11%)</title><rect x="553.8" y="1525" width="1.4" height="15.0" fill="rgb(239,106,47)" rx="2" ry="2" />
<text  x="556.83" y="1535.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u32 (1 samples, 0.03%)</title><rect x="1047.3" y="1301" width="0.4" height="15.0" fill="rgb(247,129,11)" rx="2" ry="2" />
<text  x="1050.34" y="1311.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (27 samples, 0.76%)</title><rect x="243.0" y="1541" width="9.0" height="15.0" fill="rgb(232,21,32)" rx="2" ry="2" />
<text  x="246.02" y="1551.5" ></text>
</g>
<g >
<title>HandleStackContext (1 samples, 0.03%)</title><rect x="78.2" y="1589" width="0.3" height="15.0" fill="rgb(240,190,17)" rx="2" ry="2" />
<text  x="81.19" y="1599.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.03%)</title><rect x="45.7" y="1189" width="0.4" height="15.0" fill="rgb(230,65,0)" rx="2" ry="2" />
<text  x="48.75" y="1199.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (4 samples, 0.11%)</title><rect x="687.5" y="1461" width="1.4" height="15.0" fill="rgb(250,175,30)" rx="2" ry="2" />
<text  x="690.55" y="1471.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="50.1" y="1589" width="0.3" height="15.0" fill="rgb(245,111,18)" rx="2" ry="2" />
<text  x="53.05" y="1599.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (32 samples, 0.90%)</title><rect x="317.8" y="1461" width="10.6" height="15.0" fill="rgb(236,222,36)" rx="2" ry="2" />
<text  x="320.83" y="1471.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (14 samples, 0.39%)</title><rect x="256.9" y="1541" width="4.7" height="15.0" fill="rgb(222,108,51)" rx="2" ry="2" />
<text  x="259.92" y="1551.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.34%)</title><rect x="606.5" y="1397" width="3.9" height="15.0" fill="rgb(230,35,24)" rx="2" ry="2" />
<text  x="609.45" y="1407.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::consumer::Consumer&lt;u8&gt;&gt;&gt; (99 samples, 2.78%)</title><rect x="437.3" y="1477" width="32.8" height="15.0" fill="rgb(240,228,30)" rx="2" ry="2" />
<text  x="440.32" y="1487.5" >co..</text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (5 samples, 0.14%)</title><rect x="42.1" y="1205" width="1.7" height="15.0" fill="rgb(252,161,13)" rx="2" ry="2" />
<text  x="45.11" y="1215.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (34 samples, 0.95%)</title><rect x="413.8" y="1445" width="11.3" height="15.0" fill="rgb(227,202,32)" rx="2" ry="2" />
<text  x="416.81" y="1455.5" ></text>
</g>
<g >
<title>alloc_pages (1 samples, 0.03%)</title><rect x="43.8" y="1189" width="0.3" height="15.0" fill="rgb(231,171,32)" rx="2" ry="2" />
<text  x="46.76" y="1199.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (2 samples, 0.06%)</title><rect x="188.7" y="1301" width="0.7" height="15.0" fill="rgb(223,98,11)" rx="2" ry="2" />
<text  x="191.74" y="1311.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (4 samples, 0.11%)</title><rect x="830.9" y="1429" width="1.3" height="15.0" fill="rgb(218,41,39)" rx="2" ry="2" />
<text  x="833.87" y="1439.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (1 samples, 0.03%)</title><rect x="1046.7" y="1413" width="0.3" height="15.0" fill="rgb(216,14,5)" rx="2" ry="2" />
<text  x="1049.68" y="1423.5" ></text>
</g>
<g >
<title>start_secondary (139 samples, 3.90%)</title><rect x="1088.1" y="1589" width="46.0" height="15.0" fill="rgb(207,140,14)" rx="2" ry="2" />
<text  x="1091.05" y="1599.5" >star..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.34%)</title><rect x="371.4" y="1413" width="4.0" height="15.0" fill="rgb(211,213,36)" rx="2" ry="2" />
<text  x="374.45" y="1423.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.25%)</title><rect x="277.1" y="1509" width="3.0" height="15.0" fill="rgb(222,221,10)" rx="2" ry="2" />
<text  x="280.11" y="1519.5" ></text>
</g>
<g >
<title>follow_pud_mask.isra.0 (1 samples, 0.03%)</title><rect x="1034.1" y="1397" width="0.3" height="15.0" fill="rgb(233,207,19)" rx="2" ry="2" />
<text  x="1037.10" y="1407.5" ></text>
</g>
<g >
<title>balance_pgdat (3 samples, 0.08%)</title><rect x="1087.1" y="1557" width="1.0" height="15.0" fill="rgb(241,22,53)" rx="2" ry="2" />
<text  x="1090.06" y="1567.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (4 samples, 0.11%)</title><rect x="681.6" y="1397" width="1.3" height="15.0" fill="rgb(244,39,50)" rx="2" ry="2" />
<text  x="684.59" y="1407.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="1089.4" y="1493" width="0.3" height="15.0" fill="rgb(225,193,37)" rx="2" ry="2" />
<text  x="1092.38" y="1503.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.06%)</title><rect x="1047.3" y="1349" width="0.7" height="15.0" fill="rgb(254,173,27)" rx="2" ry="2" />
<text  x="1050.34" y="1359.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (3 samples, 0.08%)</title><rect x="387.7" y="1381" width="1.0" height="15.0" fill="rgb(254,215,51)" rx="2" ry="2" />
<text  x="390.67" y="1391.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (108 samples, 3.03%)</title><rect x="389.3" y="1493" width="35.8" height="15.0" fill="rgb(246,120,3)" rx="2" ry="2" />
<text  x="392.32" y="1503.5" >loc..</text>
</g>
<g >
<title>__fdget (1 samples, 0.03%)</title><rect x="38.5" y="1461" width="0.3" height="15.0" fill="rgb(238,79,7)" rx="2" ry="2" />
<text  x="41.47" y="1471.5" ></text>
</g>
<g >
<title>NaClLog (4 samples, 0.11%)</title><rect x="80.2" y="1589" width="1.3" height="15.0" fill="rgb(243,84,46)" rx="2" ry="2" />
<text  x="83.17" y="1599.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize (1 samples, 0.03%)</title><rect x="1048.0" y="1237" width="0.3" height="15.0" fill="rgb(224,195,27)" rx="2" ry="2" />
<text  x="1051.00" y="1247.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (2 samples, 0.06%)</title><rect x="49.1" y="1381" width="0.6" height="15.0" fill="rgb(242,158,13)" rx="2" ry="2" />
<text  x="52.06" y="1391.5" ></text>
</g>
<g >
<title>x86_pmu_enable (66 samples, 1.85%)</title><rect x="15.6" y="1285" width="21.9" height="15.0" fill="rgb(233,1,53)" rx="2" ry="2" />
<text  x="18.63" y="1295.5" >x..</text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.03%)</title><rect x="1174.1" y="1429" width="0.3" height="15.0" fill="rgb(229,135,24)" rx="2" ry="2" />
<text  x="1177.11" y="1439.5" ></text>
</g>
<g >
<title>truncate_inode_page (1 samples, 0.03%)</title><rect x="1059.6" y="1349" width="0.3" height="15.0" fill="rgb(218,120,36)" rx="2" ry="2" />
<text  x="1062.59" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="1139.4" y="1285" width="0.3" height="15.0" fill="rgb(230,79,2)" rx="2" ry="2" />
<text  x="1142.36" y="1295.5" ></text>
</g>
<g >
<title>core::cmp::min_by (5 samples, 0.14%)</title><rect x="743.5" y="1445" width="1.6" height="15.0" fill="rgb(211,154,25)" rx="2" ry="2" />
<text  x="746.49" y="1455.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::ser::Serialize for dashmap::DashMap&lt;K,V,H&gt;&gt;::serialize (3 samples, 0.08%)</title><rect x="1047.0" y="1413" width="1.0" height="15.0" fill="rgb(249,22,26)" rx="2" ry="2" />
<text  x="1050.01" y="1423.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.25%)</title><rect x="802.1" y="1429" width="3.0" height="15.0" fill="rgb(232,221,17)" rx="2" ry="2" />
<text  x="805.07" y="1439.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (6 samples, 0.17%)</title><rect x="47.7" y="1429" width="2.0" height="15.0" fill="rgb(223,91,0)" rx="2" ry="2" />
<text  x="50.73" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.03%)</title><rect x="1047.7" y="997" width="0.3" height="15.0" fill="rgb(243,87,6)" rx="2" ry="2" />
<text  x="1050.67" y="1007.5" ></text>
</g>
<g >
<title>follow_page_pte (1 samples, 0.03%)</title><rect x="1034.1" y="1365" width="0.3" height="15.0" fill="rgb(239,134,49)" rx="2" ry="2" />
<text  x="1037.10" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (33 samples, 0.93%)</title><rect x="188.7" y="1429" width="11.0" height="15.0" fill="rgb(211,192,51)" rx="2" ry="2" />
<text  x="191.74" y="1439.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.03%)</title><rect x="188.4" y="1397" width="0.3" height="15.0" fill="rgb(239,178,15)" rx="2" ry="2" />
<text  x="191.41" y="1407.5" ></text>
</g>
<g >
<title>do_sys_openat2 (3 samples, 0.08%)</title><rect x="1085.1" y="1557" width="1.0" height="15.0" fill="rgb(242,63,49)" rx="2" ry="2" />
<text  x="1088.07" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="1180.1" y="1381" width="0.3" height="15.0" fill="rgb(218,217,14)" rx="2" ry="2" />
<text  x="1183.07" y="1391.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (1 samples, 0.03%)</title><rect x="1058.9" y="1413" width="0.4" height="15.0" fill="rgb(216,90,51)" rx="2" ry="2" />
<text  x="1061.93" y="1423.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.22%)</title><rect x="306.6" y="1429" width="2.6" height="15.0" fill="rgb(206,84,4)" rx="2" ry="2" />
<text  x="309.57" y="1439.5" ></text>
</g>
<g >
<title>free_pages (1 samples, 0.03%)</title><rect x="39.1" y="1461" width="0.4" height="15.0" fill="rgb(240,134,14)" rx="2" ry="2" />
<text  x="42.13" y="1471.5" ></text>
</g>
<g >
<title>process_synthesized_event (1 samples, 0.03%)</title><rect x="39.5" y="1541" width="0.3" height="15.0" fill="rgb(216,85,48)" rx="2" ry="2" />
<text  x="42.46" y="1551.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (110 samples, 3.09%)</title><rect x="135.8" y="1573" width="36.4" height="15.0" fill="rgb(239,185,20)" rx="2" ry="2" />
<text  x="138.78" y="1583.5" >NaC..</text>
</g>
<g >
<title>[libc.so.6] (72 samples, 2.02%)</title><rect x="496.9" y="1397" width="23.8" height="15.0" fill="rgb(247,163,42)" rx="2" ry="2" />
<text  x="499.89" y="1407.5" >[..</text>
</g>
<g >
<title>NaClSelLdrMain (6 samples, 0.17%)</title><rect x="1046.3" y="1541" width="2.0" height="15.0" fill="rgb(224,180,43)" rx="2" ry="2" />
<text  x="1049.35" y="1551.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.06%)</title><rect x="1033.1" y="1365" width="0.7" height="15.0" fill="rgb(237,183,5)" rx="2" ry="2" />
<text  x="1036.11" y="1375.5" ></text>
</g>
<g >
<title>rcu_dynticks_inc (1 samples, 0.03%)</title><rect x="1174.1" y="1397" width="0.3" height="15.0" fill="rgb(222,66,31)" rx="2" ry="2" />
<text  x="1177.11" y="1407.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (826 samples, 23.17%)</title><rect x="620.4" y="1509" width="273.4" height="15.0" fill="rgb(220,22,35)" rx="2" ry="2" />
<text  x="623.36" y="1519.5" >rustposix::safeposix::syscalls::fs_c..</text>
</g>
<g >
<title>CopyBundleHeads (1 samples, 0.03%)</title><rect x="178.5" y="1509" width="0.3" height="15.0" fill="rgb(253,156,33)" rx="2" ry="2" />
<text  x="181.48" y="1519.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.03%)</title><rect x="1184.7" y="1413" width="0.3" height="15.0" fill="rgb(219,43,4)" rx="2" ry="2" />
<text  x="1187.70" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::CAGE_TABLE (2 samples, 0.06%)</title><rect x="1059.9" y="1605" width="0.7" height="15.0" fill="rgb(210,47,13)" rx="2" ry="2" />
<text  x="1062.92" y="1615.5" ></text>
</g>
<g >
<title>[perf-394511.map] (13 samples, 0.36%)</title><rect x="72.6" y="1605" width="4.3" height="15.0" fill="rgb(216,10,15)" rx="2" ry="2" />
<text  x="75.56" y="1615.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.03%)</title><rect x="1182.1" y="1413" width="0.3" height="15.0" fill="rgb(208,196,5)" rx="2" ry="2" />
<text  x="1185.06" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::FS_METADATA::{{closure}} (1 samples, 0.03%)</title><rect x="1048.0" y="1285" width="0.3" height="15.0" fill="rgb(248,169,11)" rx="2" ry="2" />
<text  x="1051.00" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (23 samples, 0.65%)</title><rect x="634.9" y="1477" width="7.6" height="15.0" fill="rgb(253,0,37)" rx="2" ry="2" />
<text  x="637.92" y="1487.5" ></text>
</g>
<g >
<title>lind_write (998 samples, 27.99%)</title><rect x="563.8" y="1541" width="330.3" height="15.0" fill="rgb(241,60,15)" rx="2" ry="2" />
<text  x="566.76" y="1551.5" >lind_write</text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.03%)</title><rect x="188.4" y="1333" width="0.3" height="15.0" fill="rgb(244,151,15)" rx="2" ry="2" />
<text  x="191.41" y="1343.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="43.8" y="1157" width="0.3" height="15.0" fill="rgb(228,197,13)" rx="2" ry="2" />
<text  x="46.76" y="1167.5" ></text>
</g>
<g >
<title>__mmap (1 samples, 0.03%)</title><rect x="200.3" y="1493" width="0.4" height="15.0" fill="rgb(218,197,44)" rx="2" ry="2" />
<text  x="203.32" y="1503.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (3 samples, 0.08%)</title><rect x="1047.0" y="1461" width="1.0" height="15.0" fill="rgb(239,200,42)" rx="2" ry="2" />
<text  x="1050.01" y="1471.5" ></text>
</g>
<g >
<title>pthread_exit (1 samples, 0.03%)</title><rect x="199.7" y="1477" width="0.3" height="15.0" fill="rgb(231,116,7)" rx="2" ry="2" />
<text  x="202.66" y="1487.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.03%)</title><rect x="1059.6" y="1445" width="0.3" height="15.0" fill="rgb(239,17,18)" rx="2" ry="2" />
<text  x="1062.59" y="1455.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (9 samples, 0.25%)</title><rect x="303.6" y="1413" width="3.0" height="15.0" fill="rgb(252,162,30)" rx="2" ry="2" />
<text  x="306.59" y="1423.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.03%)</title><rect x="1188.0" y="1365" width="0.3" height="15.0" fill="rgb(236,176,26)" rx="2" ry="2" />
<text  x="1191.01" y="1375.5" ></text>
</g>
<g >
<title>__do_munmap (25 samples, 0.70%)</title><rect x="210.6" y="1317" width="8.3" height="15.0" fill="rgb(205,58,28)" rx="2" ry="2" />
<text  x="213.58" y="1327.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.03%)</title><rect x="1047.3" y="1189" width="0.4" height="15.0" fill="rgb(224,167,24)" rx="2" ry="2" />
<text  x="1050.34" y="1199.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (3 samples, 0.08%)</title><rect x="1087.1" y="1525" width="1.0" height="15.0" fill="rgb(238,48,9)" rx="2" ry="2" />
<text  x="1090.06" y="1535.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="307.9" y="1349" width="0.3" height="15.0" fill="rgb(210,56,18)" rx="2" ry="2" />
<text  x="310.90" y="1359.5" ></text>
</g>
<g >
<title>scheduler_tick (6 samples, 0.17%)</title><rect x="1139.4" y="1301" width="1.9" height="15.0" fill="rgb(241,90,12)" rx="2" ry="2" />
<text  x="1142.36" y="1311.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="378.7" y="1365" width="0.4" height="15.0" fill="rgb(234,59,14)" rx="2" ry="2" />
<text  x="381.73" y="1375.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.08%)</title><rect x="613.4" y="1349" width="1.0" height="15.0" fill="rgb(230,195,5)" rx="2" ry="2" />
<text  x="616.41" y="1359.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.06%)</title><rect x="681.6" y="1333" width="0.7" height="15.0" fill="rgb(253,65,1)" rx="2" ry="2" />
<text  x="684.59" y="1343.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampolineCall (1 samples, 0.03%)</title><rect x="200.0" y="1493" width="0.3" height="15.0" fill="rgb(242,203,50)" rx="2" ry="2" />
<text  x="202.99" y="1503.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (12 samples, 0.34%)</title><rect x="739.5" y="1461" width="4.0" height="15.0" fill="rgb(250,28,50)" rx="2" ry="2" />
<text  x="742.51" y="1471.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (19 samples, 0.53%)</title><rect x="728.6" y="1477" width="6.3" height="15.0" fill="rgb(247,35,49)" rx="2" ry="2" />
<text  x="731.59" y="1487.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (2 samples, 0.06%)</title><rect x="44.1" y="1205" width="0.7" height="15.0" fill="rgb(219,207,19)" rx="2" ry="2" />
<text  x="47.09" y="1215.5" ></text>
</g>
<g >
<title>kernfs_dop_revalidate (1 samples, 0.03%)</title><rect x="1085.7" y="1477" width="0.4" height="15.0" fill="rgb(243,138,44)" rx="2" ry="2" />
<text  x="1088.74" y="1487.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (5 samples, 0.14%)</title><rect x="1042.0" y="1589" width="1.7" height="15.0" fill="rgb(209,183,20)" rx="2" ry="2" />
<text  x="1045.04" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (6 samples, 0.17%)</title><rect x="433.3" y="1397" width="2.0" height="15.0" fill="rgb(234,57,15)" rx="2" ry="2" />
<text  x="436.34" y="1407.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (1 samples, 0.03%)</title><rect x="1179.7" y="1413" width="0.4" height="15.0" fill="rgb(219,226,47)" rx="2" ry="2" />
<text  x="1182.74" y="1423.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_locked (1 samples, 0.03%)</title><rect x="39.5" y="1189" width="0.3" height="15.0" fill="rgb(211,120,38)" rx="2" ry="2" />
<text  x="42.46" y="1199.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="378.7" y="1397" width="0.4" height="15.0" fill="rgb(244,210,22)" rx="2" ry="2" />
<text  x="381.73" y="1407.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.53%)</title><rect x="359.2" y="1429" width="6.3" height="15.0" fill="rgb(232,81,4)" rx="2" ry="2" />
<text  x="362.20" y="1439.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (1 samples, 0.03%)</title><rect x="1047.3" y="1317" width="0.4" height="15.0" fill="rgb(239,96,5)" rx="2" ry="2" />
<text  x="1050.34" y="1327.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (3 samples, 0.08%)</title><rect x="48.1" y="1397" width="1.0" height="15.0" fill="rgb(249,139,25)" rx="2" ry="2" />
<text  x="51.06" y="1407.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="478.0" y="1429" width="0.4" height="15.0" fill="rgb(226,185,27)" rx="2" ry="2" />
<text  x="481.03" y="1439.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (14 samples, 0.39%)</title><rect x="65.3" y="1589" width="4.6" height="15.0" fill="rgb(218,191,33)" rx="2" ry="2" />
<text  x="68.28" y="1599.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.42%)</title><rect x="600.8" y="1413" width="5.0" height="15.0" fill="rgb(212,96,28)" rx="2" ry="2" />
<text  x="603.83" y="1423.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.06%)</title><rect x="307.2" y="1365" width="0.7" height="15.0" fill="rgb(235,164,20)" rx="2" ry="2" />
<text  x="310.23" y="1375.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.03%)</title><rect x="1048.0" y="725" width="0.3" height="15.0" fill="rgb(233,109,4)" rx="2" ry="2" />
<text  x="1051.00" y="735.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="45.7" y="1157" width="0.4" height="15.0" fill="rgb(207,60,27)" rx="2" ry="2" />
<text  x="48.75" y="1167.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::_open (1 samples, 0.03%)</title><rect x="1048.0" y="293" width="0.3" height="15.0" fill="rgb(252,129,9)" rx="2" ry="2" />
<text  x="1051.00" y="303.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.03%)</title><rect x="989.4" y="1525" width="0.3" height="15.0" fill="rgb(227,46,29)" rx="2" ry="2" />
<text  x="992.42" y="1535.5" ></text>
</g>
<g >
<title>first_online_pgdat (1 samples, 0.03%)</title><rect x="1182.4" y="1413" width="0.3" height="15.0" fill="rgb(238,144,12)" rx="2" ry="2" />
<text  x="1185.39" y="1423.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.03%)</title><rect x="430.4" y="1317" width="0.3" height="15.0" fill="rgb(226,78,17)" rx="2" ry="2" />
<text  x="433.36" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (111 samples, 3.11%)</title><rect x="11.0" y="1605" width="36.7" height="15.0" fill="rgb(223,94,24)" rx="2" ry="2" />
<text  x="13.99" y="1615.5" >[un..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 2.24%)</title><rect x="11.0" y="1509" width="26.5" height="15.0" fill="rgb(244,59,21)" rx="2" ry="2" />
<text  x="13.99" y="1519.5" >e..</text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (71 samples, 1.99%)</title><rect x="285.7" y="1493" width="23.5" height="15.0" fill="rgb(221,69,25)" rx="2" ry="2" />
<text  x="288.72" y="1503.5" >&lt;..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.06%)</title><rect x="300.9" y="1365" width="0.7" height="15.0" fill="rgb(210,43,23)" rx="2" ry="2" />
<text  x="303.95" y="1375.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.03%)</title><rect x="10.7" y="1477" width="0.3" height="15.0" fill="rgb(235,213,30)" rx="2" ry="2" />
<text  x="13.66" y="1487.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (6 samples, 0.17%)</title><rect x="376.7" y="1397" width="2.0" height="15.0" fill="rgb(247,156,26)" rx="2" ry="2" />
<text  x="379.74" y="1407.5" ></text>
</g>
<g >
<title>__common_interrupt (1 samples, 0.03%)</title><rect x="1089.4" y="1461" width="0.3" height="15.0" fill="rgb(246,99,49)" rx="2" ry="2" />
<text  x="1092.38" y="1471.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.03%)</title><rect x="1091.4" y="1349" width="0.3" height="15.0" fill="rgb(206,28,21)" rx="2" ry="2" />
<text  x="1094.36" y="1359.5" ></text>
</g>
<g >
<title>rest_init (169 samples, 4.74%)</title><rect x="1134.1" y="1525" width="55.9" height="15.0" fill="rgb(236,133,28)" rx="2" ry="2" />
<text  x="1137.06" y="1535.5" >rest_..</text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.03%)</title><rect x="1143.0" y="1317" width="0.3" height="15.0" fill="rgb(239,171,23)" rx="2" ry="2" />
<text  x="1146.00" y="1327.5" ></text>
</g>
<g >
<title>core::cmp::min (19 samples, 0.53%)</title><rect x="743.5" y="1477" width="6.3" height="15.0" fill="rgb(230,12,18)" rx="2" ry="2" />
<text  x="746.49" y="1487.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.03%)</title><rect x="1091.0" y="1397" width="0.4" height="15.0" fill="rgb(249,87,25)" rx="2" ry="2" />
<text  x="1094.03" y="1407.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.03%)</title><rect x="10.7" y="1429" width="0.3" height="15.0" fill="rgb(235,156,52)" rx="2" ry="2" />
<text  x="13.66" y="1439.5" ></text>
</g>
<g >
<title>timekeeping_max_deferment (1 samples, 0.03%)</title><rect x="1180.4" y="1413" width="0.3" height="15.0" fill="rgb(235,183,14)" rx="2" ry="2" />
<text  x="1183.40" y="1423.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="686.6" y="1365" width="0.3" height="15.0" fill="rgb(205,157,22)" rx="2" ry="2" />
<text  x="689.56" y="1375.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="308.9" y="1397" width="0.3" height="15.0" fill="rgb(239,48,27)" rx="2" ry="2" />
<text  x="311.89" y="1407.5" ></text>
</g>
<g >
<title>memcpy@plt (4 samples, 0.11%)</title><rect x="224.2" y="1541" width="1.3" height="15.0" fill="rgb(231,91,34)" rx="2" ry="2" />
<text  x="227.15" y="1551.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.34%)</title><rect x="295.0" y="1413" width="4.0" height="15.0" fill="rgb(232,110,45)" rx="2" ry="2" />
<text  x="297.99" y="1423.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.06%)</title><rect x="296.6" y="1365" width="0.7" height="15.0" fill="rgb(220,184,28)" rx="2" ry="2" />
<text  x="299.64" y="1375.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="431.4" y="1205" width="0.3" height="15.0" fill="rgb(250,201,23)" rx="2" ry="2" />
<text  x="434.36" y="1215.5" ></text>
</g>
<g >
<title>core::mem::drop (23 samples, 0.65%)</title><rect x="634.9" y="1493" width="7.6" height="15.0" fill="rgb(250,32,14)" rx="2" ry="2" />
<text  x="637.92" y="1503.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="1048.0" y="1301" width="0.3" height="15.0" fill="rgb(242,147,19)" rx="2" ry="2" />
<text  x="1051.00" y="1311.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="371.8" y="1381" width="0.3" height="15.0" fill="rgb(225,94,14)" rx="2" ry="2" />
<text  x="374.78" y="1391.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (14 samples, 0.39%)</title><rect x="745.1" y="1445" width="4.7" height="15.0" fill="rgb(241,73,42)" rx="2" ry="2" />
<text  x="748.14" y="1455.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.03%)</title><rect x="10.7" y="1509" width="0.3" height="15.0" fill="rgb(218,225,33)" rx="2" ry="2" />
<text  x="13.66" y="1519.5" ></text>
</g>
<g >
<title>NaClSysRead (892 samples, 25.02%)</title><rect x="226.1" y="1557" width="295.3" height="15.0" fill="rgb(245,53,45)" rx="2" ry="2" />
<text  x="229.14" y="1567.5" >NaClSysRead</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.11%)</title><rect x="617.4" y="1397" width="1.3" height="15.0" fill="rgb(228,161,35)" rx="2" ry="2" />
<text  x="620.38" y="1407.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (6 samples, 0.17%)</title><rect x="385.3" y="1413" width="2.0" height="15.0" fill="rgb(225,54,50)" rx="2" ry="2" />
<text  x="388.35" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (9 samples, 0.25%)</title><rect x="277.1" y="1477" width="3.0" height="15.0" fill="rgb(236,209,30)" rx="2" ry="2" />
<text  x="280.11" y="1487.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (14 samples, 0.39%)</title><rect x="295.0" y="1429" width="4.6" height="15.0" fill="rgb(217,44,44)" rx="2" ry="2" />
<text  x="297.99" y="1439.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (8 samples, 0.22%)</title><rect x="430.0" y="1445" width="2.7" height="15.0" fill="rgb(207,91,19)" rx="2" ry="2" />
<text  x="433.03" y="1455.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.03%)</title><rect x="1089.4" y="1445" width="0.3" height="15.0" fill="rgb(205,41,12)" rx="2" ry="2" />
<text  x="1092.38" y="1455.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3 samples, 0.08%)</title><rect x="1090.7" y="1461" width="1.0" height="15.0" fill="rgb(229,89,24)" rx="2" ry="2" />
<text  x="1093.70" y="1471.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (16 samples, 0.45%)</title><rect x="365.8" y="1413" width="5.3" height="15.0" fill="rgb(238,192,34)" rx="2" ry="2" />
<text  x="368.82" y="1423.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (8 samples, 0.22%)</title><rect x="430.0" y="1477" width="2.7" height="15.0" fill="rgb(221,54,23)" rx="2" ry="2" />
<text  x="433.03" y="1487.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.45%)</title><rect x="588.6" y="1397" width="5.3" height="15.0" fill="rgb(225,165,35)" rx="2" ry="2" />
<text  x="591.58" y="1407.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (3 samples, 0.08%)</title><rect x="431.4" y="1269" width="1.0" height="15.0" fill="rgb(243,173,29)" rx="2" ry="2" />
<text  x="434.36" y="1279.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.03%)</title><rect x="1033.4" y="1269" width="0.4" height="15.0" fill="rgb(210,202,37)" rx="2" ry="2" />
<text  x="1036.44" y="1279.5" ></text>
</g>
<g >
<title>DynArrayGet (6 samples, 0.17%)</title><rect x="1031.1" y="1589" width="2.0" height="15.0" fill="rgb(214,89,25)" rx="2" ry="2" />
<text  x="1034.12" y="1599.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.03%)</title><rect x="1086.4" y="1573" width="0.3" height="15.0" fill="rgb(241,183,38)" rx="2" ry="2" />
<text  x="1089.40" y="1583.5" ></text>
</g>
<g >
<title>lookup_fast (1 samples, 0.03%)</title><rect x="1085.7" y="1493" width="0.4" height="15.0" fill="rgb(236,7,46)" rx="2" ry="2" />
<text  x="1088.74" y="1503.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.34%)</title><rect x="290.4" y="1461" width="3.9" height="15.0" fill="rgb(219,175,22)" rx="2" ry="2" />
<text  x="293.35" y="1471.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (5 samples, 0.14%)</title><rect x="553.5" y="1541" width="1.7" height="15.0" fill="rgb(218,119,31)" rx="2" ry="2" />
<text  x="556.50" y="1551.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.20%)</title><rect x="299.6" y="1413" width="2.3" height="15.0" fill="rgb(221,120,49)" rx="2" ry="2" />
<text  x="302.62" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (34 samples, 0.95%)</title><rect x="882.2" y="1429" width="11.2" height="15.0" fill="rgb(210,168,5)" rx="2" ry="2" />
<text  x="885.17" y="1439.5" ></text>
</g>
<g >
<title>__evlist__enable (80 samples, 2.24%)</title><rect x="11.0" y="1573" width="26.5" height="15.0" fill="rgb(249,102,8)" rx="2" ry="2" />
<text  x="13.99" y="1583.5" >_..</text>
</g>
<g >
<title>__switch_to_asm (1 samples, 0.03%)</title><rect x="37.5" y="1541" width="0.3" height="15.0" fill="rgb(208,68,0)" rx="2" ry="2" />
<text  x="40.47" y="1551.5" ></text>
</g>
<g >
<title>zap_pte_range (25 samples, 0.70%)</title><rect x="210.6" y="1221" width="8.3" height="15.0" fill="rgb(209,130,21)" rx="2" ry="2" />
<text  x="213.58" y="1231.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (72 samples, 2.02%)</title><rect x="365.5" y="1493" width="23.8" height="15.0" fill="rgb(247,189,0)" rx="2" ry="2" />
<text  x="368.49" y="1503.5" >d..</text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.03%)</title><rect x="1034.1" y="1429" width="0.3" height="15.0" fill="rgb(238,93,14)" rx="2" ry="2" />
<text  x="1037.10" y="1439.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (3 samples, 0.08%)</title><rect x="46.7" y="1173" width="1.0" height="15.0" fill="rgb(219,21,21)" rx="2" ry="2" />
<text  x="49.74" y="1183.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.06%)</title><rect x="10.0" y="1509" width="0.7" height="15.0" fill="rgb(240,193,42)" rx="2" ry="2" />
<text  x="13.00" y="1519.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (19 samples, 0.53%)</title><rect x="359.2" y="1461" width="6.3" height="15.0" fill="rgb(229,33,27)" rx="2" ry="2" />
<text  x="362.20" y="1471.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.34%)</title><rect x="615.7" y="1429" width="4.0" height="15.0" fill="rgb(251,23,6)" rx="2" ry="2" />
<text  x="618.72" y="1439.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (26 samples, 0.73%)</title><rect x="200.7" y="1349" width="8.6" height="15.0" fill="rgb(212,138,29)" rx="2" ry="2" />
<text  x="203.65" y="1359.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::deserialize (1 samples, 0.03%)</title><rect x="1048.0" y="709" width="0.3" height="15.0" fill="rgb(254,35,14)" rx="2" ry="2" />
<text  x="1051.00" y="719.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6 samples, 0.17%)</title><rect x="1089.7" y="1477" width="2.0" height="15.0" fill="rgb(220,204,45)" rx="2" ry="2" />
<text  x="1092.71" y="1487.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.03%)</title><rect x="200.3" y="1349" width="0.4" height="15.0" fill="rgb(240,74,19)" rx="2" ry="2" />
<text  x="203.32" y="1359.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (14 samples, 0.39%)</title><rect x="425.1" y="1445" width="4.6" height="15.0" fill="rgb(238,199,25)" rx="2" ry="2" />
<text  x="428.07" y="1455.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.20%)</title><rect x="299.6" y="1429" width="2.3" height="15.0" fill="rgb(239,50,12)" rx="2" ry="2" />
<text  x="302.62" y="1439.5" ></text>
</g>
<g >
<title>queue_core_balance (1 samples, 0.03%)</title><rect x="1186.7" y="1413" width="0.3" height="15.0" fill="rgb(218,122,24)" rx="2" ry="2" />
<text  x="1189.69" y="1423.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.06%)</title><rect x="293.7" y="1397" width="0.6" height="15.0" fill="rgb(245,29,19)" rx="2" ry="2" />
<text  x="296.66" y="1407.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="430.4" y="1349" width="0.3" height="15.0" fill="rgb(240,182,49)" rx="2" ry="2" />
<text  x="433.36" y="1359.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (1 samples, 0.03%)</title><rect x="290.0" y="1477" width="0.4" height="15.0" fill="rgb(218,24,32)" rx="2" ry="2" />
<text  x="293.02" y="1487.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (11 samples, 0.31%)</title><rect x="805.1" y="1429" width="3.6" height="15.0" fill="rgb(236,47,18)" rx="2" ry="2" />
<text  x="808.05" y="1439.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="686.6" y="1381" width="0.3" height="15.0" fill="rgb(254,84,38)" rx="2" ry="2" />
<text  x="689.56" y="1391.5" ></text>
</g>
<g >
<title>generic_write_end (9 samples, 0.25%)</title><rect x="44.8" y="1237" width="2.9" height="15.0" fill="rgb(205,173,6)" rx="2" ry="2" />
<text  x="47.75" y="1247.5" ></text>
</g>
<g >
<title>__free_one_page (2 samples, 0.06%)</title><rect x="217.9" y="1109" width="0.6" height="15.0" fill="rgb(223,126,46)" rx="2" ry="2" />
<text  x="220.87" y="1119.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (2 samples, 0.06%)</title><rect x="71.9" y="1573" width="0.7" height="15.0" fill="rgb(226,75,20)" rx="2" ry="2" />
<text  x="74.90" y="1583.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::VariantAccessMap&lt;T&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (1 samples, 0.03%)</title><rect x="1048.0" y="757" width="0.3" height="15.0" fill="rgb(207,3,43)" rx="2" ry="2" />
<text  x="1051.00" y="767.5" ></text>
</g>
<g >
<title>policy_nodemask (1 samples, 0.03%)</title><rect x="1014.9" y="1461" width="0.3" height="15.0" fill="rgb(213,185,2)" rx="2" ry="2" />
<text  x="1017.90" y="1471.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="587.9" y="1461" width="0.3" height="15.0" fill="rgb(205,154,21)" rx="2" ry="2" />
<text  x="590.92" y="1471.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (14 samples, 0.39%)</title><rect x="559.1" y="1525" width="4.7" height="15.0" fill="rgb(249,22,24)" rx="2" ry="2" />
<text  x="562.12" y="1535.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (4 samples, 0.11%)</title><rect x="209.3" y="1429" width="1.3" height="15.0" fill="rgb(222,55,28)" rx="2" ry="2" />
<text  x="212.26" y="1439.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (2 samples, 0.06%)</title><rect x="1138.7" y="1301" width="0.7" height="15.0" fill="rgb(232,168,8)" rx="2" ry="2" />
<text  x="1141.70" y="1311.5" ></text>
</g>
<g >
<title>arch_call_rest_init (169 samples, 4.74%)</title><rect x="1134.1" y="1541" width="55.9" height="15.0" fill="rgb(250,102,16)" rx="2" ry="2" />
<text  x="1137.06" y="1551.5" >arch_..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.34%)</title><rect x="371.4" y="1445" width="4.0" height="15.0" fill="rgb(251,37,8)" rx="2" ry="2" />
<text  x="374.45" y="1455.5" ></text>
</g>
<g >
<title>rmap_walk (1 samples, 0.03%)</title><rect x="1087.4" y="1445" width="0.3" height="15.0" fill="rgb(231,95,6)" rx="2" ry="2" />
<text  x="1090.39" y="1455.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.06%)</title><rect x="307.2" y="1381" width="0.7" height="15.0" fill="rgb(228,51,30)" rx="2" ry="2" />
<text  x="310.23" y="1391.5" ></text>
</g>
<g >
<title>CachedMapWritableText (1 samples, 0.03%)</title><rect x="179.5" y="1509" width="0.3" height="15.0" fill="rgb(226,33,0)" rx="2" ry="2" />
<text  x="182.47" y="1519.5" ></text>
</g>
<g >
<title>__handle_mm_fault (102 samples, 2.86%)</title><rect x="989.7" y="1525" width="33.8" height="15.0" fill="rgb(249,116,6)" rx="2" ry="2" />
<text  x="992.75" y="1535.5" >__..</text>
</g>
<g >
<title>hashbrown::raw::likely (1 samples, 0.03%)</title><rect x="686.2" y="1381" width="0.4" height="15.0" fill="rgb(222,32,48)" rx="2" ry="2" />
<text  x="689.22" y="1391.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="1047.7" y="1093" width="0.3" height="15.0" fill="rgb(233,189,17)" rx="2" ry="2" />
<text  x="1050.67" y="1103.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (24 samples, 0.67%)</title><rect x="39.8" y="1301" width="7.9" height="15.0" fill="rgb(205,44,19)" rx="2" ry="2" />
<text  x="42.79" y="1311.5" ></text>
</g>
<g >
<title>&lt;std::sync::lazy_lock::LazyLock&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.08%)</title><rect x="328.4" y="1493" width="1.0" height="15.0" fill="rgb(238,93,5)" rx="2" ry="2" />
<text  x="331.42" y="1503.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.45%)</title><rect x="582.0" y="1477" width="5.3" height="15.0" fill="rgb(220,121,44)" rx="2" ry="2" />
<text  x="584.96" y="1487.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open (1 samples, 0.03%)</title><rect x="1048.0" y="277" width="0.3" height="15.0" fill="rgb(232,183,46)" rx="2" ry="2" />
<text  x="1051.00" y="287.5" ></text>
</g>
<g >
<title>_IO_file_overflow (1 samples, 0.03%)</title><rect x="10.3" y="1461" width="0.4" height="15.0" fill="rgb(237,71,47)" rx="2" ry="2" />
<text  x="13.33" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_select (2 samples, 0.06%)</title><rect x="1133.4" y="1525" width="0.7" height="15.0" fill="rgb(208,11,50)" rx="2" ry="2" />
<text  x="1136.40" y="1535.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="1033.4" y="1221" width="0.4" height="15.0" fill="rgb(232,160,0)" rx="2" ry="2" />
<text  x="1036.44" y="1231.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.08%)</title><rect x="297.3" y="1365" width="1.0" height="15.0" fill="rgb(226,166,0)" rx="2" ry="2" />
<text  x="300.30" y="1375.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.17%)</title><rect x="594.9" y="1413" width="2.0" height="15.0" fill="rgb(250,179,4)" rx="2" ry="2" />
<text  x="597.87" y="1423.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (16 samples, 0.45%)</title><rect x="600.8" y="1429" width="5.3" height="15.0" fill="rgb(206,83,29)" rx="2" ry="2" />
<text  x="603.83" y="1439.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.14%)</title><rect x="376.7" y="1381" width="1.7" height="15.0" fill="rgb(220,183,33)" rx="2" ry="2" />
<text  x="379.74" y="1391.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (93 samples, 2.61%)</title><rect x="689.2" y="1445" width="30.8" height="15.0" fill="rgb(239,162,54)" rx="2" ry="2" />
<text  x="692.20" y="1455.5" >co..</text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.08%)</title><rect x="1058.9" y="1589" width="1.0" height="15.0" fill="rgb(235,224,19)" rx="2" ry="2" />
<text  x="1061.93" y="1599.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="305.6" y="1333" width="0.3" height="15.0" fill="rgb(247,32,8)" rx="2" ry="2" />
<text  x="308.58" y="1343.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.17%)</title><rect x="673.0" y="1445" width="2.0" height="15.0" fill="rgb(242,189,31)" rx="2" ry="2" />
<text  x="675.98" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="10.3" y="1365" width="0.4" height="15.0" fill="rgb(224,87,47)" rx="2" ry="2" />
<text  x="13.33" y="1375.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (6 samples, 0.17%)</title><rect x="673.0" y="1429" width="2.0" height="15.0" fill="rgb(219,99,2)" rx="2" ry="2" />
<text  x="675.98" y="1439.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.03%)</title><rect x="1048.0" y="1045" width="0.3" height="15.0" fill="rgb(248,161,28)" rx="2" ry="2" />
<text  x="1051.00" y="1055.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.03%)</title><rect x="1089.4" y="1429" width="0.3" height="15.0" fill="rgb(228,61,14)" rx="2" ry="2" />
<text  x="1092.38" y="1439.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (26 samples, 0.73%)</title><rect x="720.0" y="1445" width="8.6" height="15.0" fill="rgb(226,177,0)" rx="2" ry="2" />
<text  x="722.99" y="1455.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="634.6" y="1429" width="0.3" height="15.0" fill="rgb(245,139,29)" rx="2" ry="2" />
<text  x="637.59" y="1439.5" ></text>
</g>
<g >
<title>__do_fault (2 samples, 0.06%)</title><rect x="1033.1" y="1333" width="0.7" height="15.0" fill="rgb(229,33,39)" rx="2" ry="2" />
<text  x="1036.11" y="1343.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.03%)</title><rect x="1185.0" y="1429" width="0.4" height="15.0" fill="rgb(217,199,20)" rx="2" ry="2" />
<text  x="1188.04" y="1439.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (99 samples, 2.78%)</title><rect x="437.3" y="1429" width="32.8" height="15.0" fill="rgb(230,24,34)" rx="2" ry="2" />
<text  x="440.32" y="1439.5" >co..</text>
</g>
<g >
<title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="1047.7" y="1029" width="0.3" height="15.0" fill="rgb(214,27,36)" rx="2" ry="2" />
<text  x="1050.67" y="1039.5" ></text>
</g>
<g >
<title>vfs_read (6 samples, 0.17%)</title><rect x="430.7" y="1349" width="2.0" height="15.0" fill="rgb(227,196,39)" rx="2" ry="2" />
<text  x="433.70" y="1359.5" ></text>
</g>
<g >
<title>sync_mm_rss (1 samples, 0.03%)</title><rect x="188.1" y="1397" width="0.3" height="15.0" fill="rgb(226,117,9)" rx="2" ry="2" />
<text  x="191.08" y="1407.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.22%)</title><rect x="303.6" y="1365" width="2.6" height="15.0" fill="rgb(252,119,3)" rx="2" ry="2" />
<text  x="306.59" y="1375.5" ></text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.03%)</title><rect x="43.8" y="1173" width="0.3" height="15.0" fill="rgb(235,22,39)" rx="2" ry="2" />
<text  x="46.76" y="1183.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_enum (1 samples, 0.03%)</title><rect x="1048.0" y="853" width="0.3" height="15.0" fill="rgb(218,28,6)" rx="2" ry="2" />
<text  x="1051.00" y="863.5" ></text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force::{{closure}} (1 samples, 0.03%)</title><rect x="1048.0" y="1333" width="0.3" height="15.0" fill="rgb(206,2,49)" rx="2" ry="2" />
<text  x="1051.00" y="1343.5" ></text>
</g>
<g >
<title>perf_ioctl (80 samples, 2.24%)</title><rect x="11.0" y="1461" width="26.5" height="15.0" fill="rgb(239,55,28)" rx="2" ry="2" />
<text  x="13.99" y="1471.5" >p..</text>
</g>
<g >
<title>rcu_core_si (2 samples, 0.06%)</title><rect x="1090.7" y="1429" width="0.7" height="15.0" fill="rgb(219,63,31)" rx="2" ry="2" />
<text  x="1093.70" y="1439.5" ></text>
</g>
<g >
<title>CopyBundleTails (2 samples, 0.06%)</title><rect x="178.8" y="1509" width="0.7" height="15.0" fill="rgb(236,182,19)" rx="2" ry="2" />
<text  x="181.81" y="1519.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (2 samples, 0.06%)</title><rect x="1182.1" y="1445" width="0.6" height="15.0" fill="rgb(238,155,41)" rx="2" ry="2" />
<text  x="1185.06" y="1455.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.03%)</title><rect x="688.9" y="1429" width="0.3" height="15.0" fill="rgb(220,178,37)" rx="2" ry="2" />
<text  x="691.87" y="1439.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (5 samples, 0.14%)</title><rect x="42.1" y="1237" width="1.7" height="15.0" fill="rgb(252,116,15)" rx="2" ry="2" />
<text  x="45.11" y="1247.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.06%)</title><rect x="618.0" y="1365" width="0.7" height="15.0" fill="rgb(250,202,28)" rx="2" ry="2" />
<text  x="621.04" y="1375.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (108 samples, 3.03%)</title><rect x="389.3" y="1477" width="35.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="392.32" y="1487.5" >&lt;pa..</text>
</g>
<g >
<title>rustposix::interface::misc::libc_mmap (25 samples, 0.70%)</title><rect x="210.6" y="1461" width="8.3" height="15.0" fill="rgb(210,147,29)" rx="2" ry="2" />
<text  x="213.58" y="1471.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="470.1" y="1461" width="0.3" height="15.0" fill="rgb(238,106,6)" rx="2" ry="2" />
<text  x="473.08" y="1471.5" ></text>
</g>
<g >
<title>lindrustinit (1 samples, 0.03%)</title><rect x="1048.0" y="1525" width="0.3" height="15.0" fill="rgb(251,14,39)" rx="2" ry="2" />
<text  x="1051.00" y="1535.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="1186.4" y="1429" width="0.3" height="15.0" fill="rgb(252,202,39)" rx="2" ry="2" />
<text  x="1189.36" y="1439.5" ></text>
</g>
<g >
<title>vfs_write (6 samples, 0.17%)</title><rect x="47.7" y="1541" width="2.0" height="15.0" fill="rgb(231,23,18)" rx="2" ry="2" />
<text  x="50.73" y="1551.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (2 samples, 0.06%)</title><rect x="495.6" y="1413" width="0.6" height="15.0" fill="rgb(231,67,52)" rx="2" ry="2" />
<text  x="498.57" y="1423.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (308 samples, 8.64%)</title><rect x="1088.1" y="1605" width="101.9" height="15.0" fill="rgb(232,37,50)" rx="2" ry="2" />
<text  x="1091.05" y="1615.5" >secondary_st..</text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (12 samples, 0.34%)</title><rect x="993.4" y="1445" width="4.0" height="15.0" fill="rgb(230,106,14)" rx="2" ry="2" />
<text  x="996.39" y="1455.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.14%)</title><rect x="679.9" y="1413" width="1.7" height="15.0" fill="rgb(242,141,3)" rx="2" ry="2" />
<text  x="682.94" y="1423.5" ></text>
</g>
<g >
<title>shrink_page_list (1 samples, 0.03%)</title><rect x="1087.4" y="1477" width="0.3" height="15.0" fill="rgb(234,75,1)" rx="2" ry="2" />
<text  x="1090.39" y="1487.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.03%)</title><rect x="1048.0" y="1093" width="0.3" height="15.0" fill="rgb(213,54,5)" rx="2" ry="2" />
<text  x="1051.00" y="1103.5" ></text>
</g>
<g >
<title>dispatcher (766 samples, 21.49%)</title><rect x="267.8" y="1525" width="253.6" height="15.0" fill="rgb(233,12,24)" rx="2" ry="2" />
<text  x="270.85" y="1535.5" >dispatcher</text>
</g>
<g >
<title>do_syscall_64 (26 samples, 0.73%)</title><rect x="200.7" y="1445" width="8.6" height="15.0" fill="rgb(210,13,51)" rx="2" ry="2" />
<text  x="203.65" y="1455.5" ></text>
</g>
<g >
<title>ksys_read (7 samples, 0.20%)</title><rect x="430.4" y="1365" width="2.3" height="15.0" fill="rgb(251,0,2)" rx="2" ry="2" />
<text  x="433.36" y="1375.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="617.7" y="1333" width="0.3" height="15.0" fill="rgb(246,54,18)" rx="2" ry="2" />
<text  x="620.71" y="1343.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (77 samples, 2.16%)</title><rect x="661.4" y="1493" width="25.5" height="15.0" fill="rgb(226,166,42)" rx="2" ry="2" />
<text  x="664.40" y="1503.5" >d..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.08%)</title><rect x="687.9" y="1413" width="1.0" height="15.0" fill="rgb(248,37,35)" rx="2" ry="2" />
<text  x="690.88" y="1423.5" ></text>
</g>
<g >
<title>tty_write (1 samples, 0.03%)</title><rect x="10.3" y="1285" width="0.4" height="15.0" fill="rgb(211,78,16)" rx="2" ry="2" />
<text  x="13.33" y="1295.5" ></text>
</g>
<g >
<title>__alloc_pages (44 samples, 1.23%)</title><rect x="1000.3" y="1461" width="14.6" height="15.0" fill="rgb(245,172,45)" rx="2" ry="2" />
<text  x="1003.34" y="1471.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (25 samples, 0.70%)</title><rect x="210.6" y="1365" width="8.3" height="15.0" fill="rgb(252,49,16)" rx="2" ry="2" />
<text  x="213.58" y="1375.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.06%)</title><rect x="302.9" y="1397" width="0.7" height="15.0" fill="rgb(218,214,1)" rx="2" ry="2" />
<text  x="305.93" y="1407.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.03%)</title><rect x="1187.4" y="1461" width="0.3" height="15.0" fill="rgb(235,173,21)" rx="2" ry="2" />
<text  x="1190.35" y="1471.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.03%)</title><rect x="1048.0" y="133" width="0.3" height="15.0" fill="rgb(219,189,3)" rx="2" ry="2" />
<text  x="1051.00" y="143.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="64.9" y="1509" width="0.4" height="15.0" fill="rgb(207,11,53)" rx="2" ry="2" />
<text  x="67.95" y="1519.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.03%)</title><rect x="294.7" y="1445" width="0.3" height="15.0" fill="rgb(212,149,33)" rx="2" ry="2" />
<text  x="297.66" y="1455.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (1 samples, 0.03%)</title><rect x="1048.0" y="997" width="0.3" height="15.0" fill="rgb(221,15,10)" rx="2" ry="2" />
<text  x="1051.00" y="1007.5" ></text>
</g>
<g >
<title>shrink_lruvec (3 samples, 0.08%)</title><rect x="1087.1" y="1509" width="1.0" height="15.0" fill="rgb(207,173,14)" rx="2" ry="2" />
<text  x="1090.06" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (11 samples, 0.31%)</title><rect x="286.4" y="1413" width="3.6" height="15.0" fill="rgb(243,50,40)" rx="2" ry="2" />
<text  x="289.38" y="1423.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.03%)</title><rect x="1090.0" y="1349" width="0.4" height="15.0" fill="rgb(230,21,6)" rx="2" ry="2" />
<text  x="1093.04" y="1359.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.03%)</title><rect x="1090.0" y="1317" width="0.4" height="15.0" fill="rgb(217,19,8)" rx="2" ry="2" />
<text  x="1093.04" y="1327.5" ></text>
</g>
<g >
<title>NaClValidateCode (4 samples, 0.11%)</title><rect x="209.3" y="1461" width="1.3" height="15.0" fill="rgb(249,32,25)" rx="2" ry="2" />
<text  x="212.26" y="1471.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.06%)</title><rect x="677.0" y="1365" width="0.6" height="15.0" fill="rgb(212,33,22)" rx="2" ry="2" />
<text  x="679.96" y="1375.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.06%)</title><rect x="611.1" y="1413" width="0.7" height="15.0" fill="rgb(219,27,7)" rx="2" ry="2" />
<text  x="614.09" y="1423.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (14 samples, 0.39%)</title><rect x="295.0" y="1461" width="4.6" height="15.0" fill="rgb(221,153,11)" rx="2" ry="2" />
<text  x="297.99" y="1471.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (2 samples, 0.06%)</title><rect x="59.6" y="1573" width="0.7" height="15.0" fill="rgb(239,8,53)" rx="2" ry="2" />
<text  x="62.65" y="1583.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (2 samples, 0.06%)</title><rect x="172.2" y="1573" width="0.6" height="15.0" fill="rgb(236,1,48)" rx="2" ry="2" />
<text  x="175.19" y="1583.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (14 samples, 0.39%)</title><rect x="1015.9" y="1445" width="4.6" height="15.0" fill="rgb(248,179,22)" rx="2" ry="2" />
<text  x="1018.90" y="1455.5" ></text>
</g>
<g >
<title>__bitmap_and (1 samples, 0.03%)</title><rect x="1142.3" y="1333" width="0.4" height="15.0" fill="rgb(223,156,36)" rx="2" ry="2" />
<text  x="1145.34" y="1343.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (1 samples, 0.03%)</title><rect x="306.9" y="1365" width="0.3" height="15.0" fill="rgb(220,223,33)" rx="2" ry="2" />
<text  x="309.90" y="1375.5" ></text>
</g>
<g >
<title>follow_pmd_mask.isra.0 (1 samples, 0.03%)</title><rect x="1034.1" y="1381" width="0.3" height="15.0" fill="rgb(233,2,13)" rx="2" ry="2" />
<text  x="1037.10" y="1391.5" ></text>
</g>
<g >
<title>do_exit (3 samples, 0.08%)</title><rect x="1058.9" y="1541" width="1.0" height="15.0" fill="rgb(208,192,52)" rx="2" ry="2" />
<text  x="1061.93" y="1551.5" ></text>
</g>
<g >
<title>dashmap::default_shard_amount (1 samples, 0.03%)</title><rect x="1048.0" y="389" width="0.3" height="15.0" fill="rgb(216,20,48)" rx="2" ry="2" />
<text  x="1051.00" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (9 samples, 0.25%)</title><rect x="1138.4" y="1365" width="2.9" height="15.0" fill="rgb(236,228,26)" rx="2" ry="2" />
<text  x="1141.36" y="1375.5" ></text>
</g>
<g >
<title>try_charge_memcg (4 samples, 0.11%)</title><rect x="997.4" y="1445" width="1.3" height="15.0" fill="rgb(230,174,25)" rx="2" ry="2" />
<text  x="1000.36" y="1455.5" ></text>
</g>
<g >
<title>NaClSysExecv (36 samples, 1.01%)</title><rect x="188.7" y="1541" width="12.0" height="15.0" fill="rgb(233,122,7)" rx="2" ry="2" />
<text  x="191.74" y="1551.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.03%)</title><rect x="1189.0" y="1477" width="0.3" height="15.0" fill="rgb(215,100,24)" rx="2" ry="2" />
<text  x="1192.01" y="1487.5" ></text>
</g>
<g >
<title>make_child (1 samples, 0.03%)</title><rect x="10.0" y="1477" width="0.3" height="15.0" fill="rgb(227,194,54)" rx="2" ry="2" />
<text  x="13.00" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_write (6 samples, 0.17%)</title><rect x="47.7" y="1573" width="2.0" height="15.0" fill="rgb(209,51,45)" rx="2" ry="2" />
<text  x="50.73" y="1583.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.03%)</title><rect x="1059.6" y="1381" width="0.3" height="15.0" fill="rgb(222,124,17)" rx="2" ry="2" />
<text  x="1062.59" y="1391.5" ></text>
</g>
<g >
<title>execute_command (2 samples, 0.06%)</title><rect x="10.0" y="1525" width="0.7" height="15.0" fill="rgb(216,52,38)" rx="2" ry="2" />
<text  x="13.00" y="1535.5" ></text>
</g>
<g >
<title>free_unref_page_list (8 samples, 0.22%)</title><rect x="215.9" y="1157" width="2.6" height="15.0" fill="rgb(221,125,36)" rx="2" ry="2" />
<text  x="218.88" y="1167.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.03%)</title><rect x="39.5" y="1509" width="0.3" height="15.0" fill="rgb(228,105,18)" rx="2" ry="2" />
<text  x="42.46" y="1519.5" ></text>
</g>
<g >
<title>perf_poll (1 samples, 0.03%)</title><rect x="38.8" y="1461" width="0.3" height="15.0" fill="rgb(244,37,12)" rx="2" ry="2" />
<text  x="41.80" y="1471.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.28%)</title><rect x="669.3" y="1413" width="3.4" height="15.0" fill="rgb(227,13,0)" rx="2" ry="2" />
<text  x="672.34" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (1 samples, 0.03%)</title><rect x="1188.7" y="1429" width="0.3" height="15.0" fill="rgb(250,34,33)" rx="2" ry="2" />
<text  x="1191.68" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (6 samples, 0.17%)</title><rect x="1046.3" y="1573" width="2.0" height="15.0" fill="rgb(247,114,43)" rx="2" ry="2" />
<text  x="1049.35" y="1583.5" ></text>
</g>
<g >
<title>osq_lock (31 samples, 0.87%)</title><rect x="189.4" y="1333" width="10.3" height="15.0" fill="rgb(206,52,21)" rx="2" ry="2" />
<text  x="192.40" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="10.7" y="1589" width="0.3" height="15.0" fill="rgb(224,153,49)" rx="2" ry="2" />
<text  x="13.66" y="1599.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7 samples, 0.20%)</title><rect x="1142.0" y="1397" width="2.3" height="15.0" fill="rgb(207,73,0)" rx="2" ry="2" />
<text  x="1145.01" y="1407.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.20%)</title><rect x="608.1" y="1381" width="2.3" height="15.0" fill="rgb(245,211,10)" rx="2" ry="2" />
<text  x="611.11" y="1391.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (77 samples, 2.16%)</title><rect x="661.4" y="1477" width="25.5" height="15.0" fill="rgb(206,91,38)" rx="2" ry="2" />
<text  x="664.40" y="1487.5" >&lt;..</text>
</g>
<g >
<title>filemap_get_pages (1 samples, 0.03%)</title><rect x="432.0" y="1205" width="0.4" height="15.0" fill="rgb(214,183,15)" rx="2" ry="2" />
<text  x="435.02" y="1215.5" ></text>
</g>
<g >
<title>NaClSysRead (2 samples, 0.06%)</title><rect x="56.7" y="1589" width="0.6" height="15.0" fill="rgb(219,108,35)" rx="2" ry="2" />
<text  x="59.67" y="1599.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.03%)</title><rect x="39.5" y="1397" width="0.3" height="15.0" fill="rgb(221,37,22)" rx="2" ry="2" />
<text  x="42.46" y="1407.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.03%)</title><rect x="596.5" y="1397" width="0.4" height="15.0" fill="rgb(222,33,24)" rx="2" ry="2" />
<text  x="599.52" y="1407.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (35 samples, 0.98%)</title><rect x="675.3" y="1445" width="11.6" height="15.0" fill="rgb(247,38,46)" rx="2" ry="2" />
<text  x="678.30" y="1455.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (17 samples, 0.48%)</title><rect x="655.8" y="1461" width="5.6" height="15.0" fill="rgb(222,158,6)" rx="2" ry="2" />
<text  x="658.77" y="1471.5" ></text>
</g>
<g >
<title>read (8 samples, 0.22%)</title><rect x="430.0" y="1429" width="2.7" height="15.0" fill="rgb(236,151,28)" rx="2" ry="2" />
<text  x="433.03" y="1439.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (18 samples, 0.50%)</title><rect x="329.4" y="1461" width="6.0" height="15.0" fill="rgb(248,225,25)" rx="2" ry="2" />
<text  x="332.41" y="1471.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.06%)</title><rect x="188.7" y="1317" width="0.7" height="15.0" fill="rgb(250,141,19)" rx="2" ry="2" />
<text  x="191.74" y="1327.5" ></text>
</g>
<g >
<title>__mem_cgroup_flush_stats (1 samples, 0.03%)</title><rect x="39.5" y="1221" width="0.3" height="15.0" fill="rgb(218,150,8)" rx="2" ry="2" />
<text  x="42.46" y="1231.5" ></text>
</g>
<g >
<title>new_sync_write (6 samples, 0.17%)</title><rect x="47.7" y="1525" width="2.0" height="15.0" fill="rgb(219,192,8)" rx="2" ry="2" />
<text  x="50.73" y="1535.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (2 samples, 0.06%)</title><rect x="251.3" y="1525" width="0.7" height="15.0" fill="rgb(250,211,37)" rx="2" ry="2" />
<text  x="254.30" y="1535.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.03%)</title><rect x="434.3" y="1349" width="0.4" height="15.0" fill="rgb(211,17,20)" rx="2" ry="2" />
<text  x="437.34" y="1359.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (132 samples, 3.70%)</title><rect x="796.1" y="1461" width="43.7" height="15.0" fill="rgb(218,38,54)" rx="2" ry="2" />
<text  x="799.12" y="1471.5" >ring..</text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (96 samples, 2.69%)</title><rect x="587.9" y="1493" width="31.8" height="15.0" fill="rgb(211,161,40)" rx="2" ry="2" />
<text  x="590.92" y="1503.5" >&lt;d..</text>
</g>
<g >
<title>realloc (1 samples, 0.03%)</title><rect x="1047.7" y="1013" width="0.3" height="15.0" fill="rgb(231,54,25)" rx="2" ry="2" />
<text  x="1050.67" y="1023.5" ></text>
</g>
<g >
<title>process_vm_rw (2 samples, 0.06%)</title><rect x="1033.8" y="1509" width="0.6" height="15.0" fill="rgb(208,228,19)" rx="2" ry="2" />
<text  x="1036.77" y="1519.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Seek&gt;::seek (8 samples, 0.22%)</title><rect x="432.7" y="1477" width="2.6" height="15.0" fill="rgb(217,24,36)" rx="2" ry="2" />
<text  x="435.68" y="1487.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (1 samples, 0.03%)</title><rect x="187.7" y="1477" width="0.4" height="15.0" fill="rgb(241,94,13)" rx="2" ry="2" />
<text  x="190.74" y="1487.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (6 samples, 0.17%)</title><rect x="47.7" y="1461" width="2.0" height="15.0" fill="rgb(215,129,37)" rx="2" ry="2" />
<text  x="50.73" y="1471.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.06%)</title><rect x="307.2" y="1349" width="0.7" height="15.0" fill="rgb(232,21,13)" rx="2" ry="2" />
<text  x="310.23" y="1359.5" ></text>
</g>
<g >
<title>_start (6 samples, 0.17%)</title><rect x="1046.3" y="1605" width="2.0" height="15.0" fill="rgb(248,77,2)" rx="2" ry="2" />
<text  x="1049.35" y="1615.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (113 samples, 3.17%)</title><rect x="749.8" y="1461" width="37.4" height="15.0" fill="rgb(219,223,21)" rx="2" ry="2" />
<text  x="752.78" y="1471.5" >&lt;lo..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (2 samples, 0.06%)</title><rect x="520.7" y="1445" width="0.7" height="15.0" fill="rgb(237,147,14)" rx="2" ry="2" />
<text  x="523.73" y="1455.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="681.9" y="1301" width="0.4" height="15.0" fill="rgb(248,6,6)" rx="2" ry="2" />
<text  x="684.92" y="1311.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (1 samples, 0.03%)</title><rect x="634.6" y="1445" width="0.3" height="15.0" fill="rgb(210,74,26)" rx="2" ry="2" />
<text  x="637.59" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (23 samples, 0.65%)</title><rect x="634.9" y="1397" width="7.6" height="15.0" fill="rgb(252,16,0)" rx="2" ry="2" />
<text  x="637.92" y="1407.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="587.9" y="1445" width="0.3" height="15.0" fill="rgb(250,70,25)" rx="2" ry="2" />
<text  x="590.92" y="1455.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.03%)</title><rect x="1189.3" y="1493" width="0.4" height="15.0" fill="rgb(221,107,25)" rx="2" ry="2" />
<text  x="1192.34" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_read (7 samples, 0.20%)</title><rect x="430.4" y="1381" width="2.3" height="15.0" fill="rgb(218,200,41)" rx="2" ry="2" />
<text  x="433.36" y="1391.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (7 samples, 0.20%)</title><rect x="1142.0" y="1381" width="2.3" height="15.0" fill="rgb(244,165,10)" rx="2" ry="2" />
<text  x="1145.01" y="1391.5" ></text>
</g>
<g >
<title>NaClLog (10 samples, 0.28%)</title><rect x="172.8" y="1573" width="3.4" height="15.0" fill="rgb(235,26,30)" rx="2" ry="2" />
<text  x="175.85" y="1583.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.17%)</title><rect x="673.0" y="1365" width="2.0" height="15.0" fill="rgb(249,4,30)" rx="2" ry="2" />
<text  x="675.98" y="1375.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (32 samples, 0.90%)</title><rect x="317.8" y="1477" width="10.6" height="15.0" fill="rgb(221,41,41)" rx="2" ry="2" />
<text  x="320.83" y="1487.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.53%)</title><rect x="359.2" y="1477" width="6.3" height="15.0" fill="rgb(236,71,37)" rx="2" ry="2" />
<text  x="362.20" y="1487.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (20 samples, 0.56%)</title><rect x="661.7" y="1445" width="6.7" height="15.0" fill="rgb(246,199,28)" rx="2" ry="2" />
<text  x="664.73" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.56%)</title><rect x="628.0" y="1477" width="6.6" height="15.0" fill="rgb(208,165,0)" rx="2" ry="2" />
<text  x="630.97" y="1487.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (15 samples, 0.42%)</title><rect x="280.8" y="1461" width="4.9" height="15.0" fill="rgb(234,75,30)" rx="2" ry="2" />
<text  x="283.75" y="1471.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.03%)</title><rect x="300.3" y="1381" width="0.3" height="15.0" fill="rgb(219,80,0)" rx="2" ry="2" />
<text  x="303.28" y="1391.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (89 samples, 2.50%)</title><rect x="491.3" y="1445" width="29.4" height="15.0" fill="rgb(251,48,48)" rx="2" ry="2" />
<text  x="494.27" y="1455.5" >ri..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.06%)</title><rect x="603.5" y="1349" width="0.6" height="15.0" fill="rgb(231,227,25)" rx="2" ry="2" />
<text  x="606.48" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="188.4" y="1445" width="0.3" height="15.0" fill="rgb(213,106,36)" rx="2" ry="2" />
<text  x="191.41" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (133 samples, 3.73%)</title><rect x="1089.4" y="1509" width="44.0" height="15.0" fill="rgb(231,150,39)" rx="2" ry="2" />
<text  x="1092.38" y="1519.5" >cpui..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="1047.7" y="1061" width="0.3" height="15.0" fill="rgb(253,5,48)" rx="2" ry="2" />
<text  x="1050.67" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.06%)</title><rect x="682.3" y="1365" width="0.6" height="15.0" fill="rgb(215,67,48)" rx="2" ry="2" />
<text  x="685.25" y="1375.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt_r (1 samples, 0.03%)</title><rect x="1048.0" y="245" width="0.3" height="15.0" fill="rgb(224,22,5)" rx="2" ry="2" />
<text  x="1051.00" y="255.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (1 samples, 0.03%)</title><rect x="48.1" y="1333" width="0.3" height="15.0" fill="rgb(218,178,6)" rx="2" ry="2" />
<text  x="51.06" y="1343.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="1047.7" y="1253" width="0.3" height="15.0" fill="rgb(238,133,53)" rx="2" ry="2" />
<text  x="1050.67" y="1263.5" ></text>
</g>
<g >
<title>__d_free (1 samples, 0.03%)</title><rect x="1091.0" y="1381" width="0.4" height="15.0" fill="rgb(242,162,40)" rx="2" ry="2" />
<text  x="1094.03" y="1391.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 0.20%)</title><rect x="376.7" y="1445" width="2.4" height="15.0" fill="rgb(227,4,17)" rx="2" ry="2" />
<text  x="379.74" y="1455.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.03%)</title><rect x="1175.1" y="1413" width="0.3" height="15.0" fill="rgb(253,26,27)" rx="2" ry="2" />
<text  x="1178.11" y="1423.5" ></text>
</g>
<g >
<title>__get_user_pages (2 samples, 0.06%)</title><rect x="1033.1" y="1413" width="0.7" height="15.0" fill="rgb(221,208,21)" rx="2" ry="2" />
<text  x="1036.11" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_enter (126 samples, 3.53%)</title><rect x="1134.7" y="1461" width="41.7" height="15.0" fill="rgb(227,36,16)" rx="2" ry="2" />
<text  x="1137.72" y="1471.5" >cpu..</text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (1 samples, 0.03%)</title><rect x="39.5" y="1269" width="0.3" height="15.0" fill="rgb(216,150,21)" rx="2" ry="2" />
<text  x="42.46" y="1279.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.03%)</title><rect x="44.4" y="1157" width="0.4" height="15.0" fill="rgb(235,166,36)" rx="2" ry="2" />
<text  x="47.42" y="1167.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.03%)</title><rect x="681.3" y="1381" width="0.3" height="15.0" fill="rgb(250,72,7)" rx="2" ry="2" />
<text  x="684.26" y="1391.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (4 samples, 0.11%)</title><rect x="1034.4" y="1589" width="1.4" height="15.0" fill="rgb(218,165,23)" rx="2" ry="2" />
<text  x="1037.43" y="1599.5" ></text>
</g>
<g >
<title>MunmapInternal (25 samples, 0.70%)</title><rect x="210.6" y="1541" width="8.3" height="15.0" fill="rgb(245,80,51)" rx="2" ry="2" />
<text  x="213.58" y="1551.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (5 samples, 0.14%)</title><rect x="525.4" y="1541" width="1.6" height="15.0" fill="rgb(252,100,34)" rx="2" ry="2" />
<text  x="528.36" y="1551.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.06%)</title><rect x="671.3" y="1381" width="0.7" height="15.0" fill="rgb(249,135,2)" rx="2" ry="2" />
<text  x="674.33" y="1391.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (2 samples, 0.06%)</title><rect x="43.1" y="1189" width="0.7" height="15.0" fill="rgb(207,131,19)" rx="2" ry="2" />
<text  x="46.10" y="1199.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1090.0" y="1381" width="0.4" height="15.0" fill="rgb(238,52,11)" rx="2" ry="2" />
<text  x="1093.04" y="1391.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt; (69 samples, 1.94%)</title><rect x="336.4" y="1493" width="22.8" height="15.0" fill="rgb(215,74,25)" rx="2" ry="2" />
<text  x="339.36" y="1503.5" >c..</text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.03%)</title><rect x="1188.0" y="1381" width="0.3" height="15.0" fill="rgb(238,12,47)" rx="2" ry="2" />
<text  x="1191.01" y="1391.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::ser::Serialize for dashmap::DashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.03%)</title><rect x="1047.0" y="1285" width="0.3" height="15.0" fill="rgb(244,191,0)" rx="2" ry="2" />
<text  x="1050.01" y="1295.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.17%)</title><rect x="670.7" y="1397" width="2.0" height="15.0" fill="rgb(213,177,31)" rx="2" ry="2" />
<text  x="673.67" y="1407.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1 samples, 0.03%)</title><rect x="199.7" y="1397" width="0.3" height="15.0" fill="rgb(227,167,9)" rx="2" ry="2" />
<text  x="202.66" y="1407.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (4 samples, 0.11%)</title><rect x="209.3" y="1493" width="1.3" height="15.0" fill="rgb(213,27,25)" rx="2" ry="2" />
<text  x="212.26" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="42.8" y="1189" width="0.3" height="15.0" fill="rgb(232,60,25)" rx="2" ry="2" />
<text  x="45.77" y="1199.5" ></text>
</g>
<g >
<title>HandleStackContext (99 samples, 2.78%)</title><rect x="101.0" y="1573" width="32.8" height="15.0" fill="rgb(237,51,49)" rx="2" ry="2" />
<text  x="104.02" y="1583.5" >Ha..</text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.03%)</title><rect x="1059.3" y="1413" width="0.3" height="15.0" fill="rgb(229,151,23)" rx="2" ry="2" />
<text  x="1062.26" y="1423.5" ></text>
</g>
<g >
<title>NaClLog (5 samples, 0.14%)</title><rect x="255.3" y="1541" width="1.6" height="15.0" fill="rgb(214,202,24)" rx="2" ry="2" />
<text  x="258.27" y="1551.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.45%)</title><rect x="594.5" y="1445" width="5.3" height="15.0" fill="rgb(212,209,13)" rx="2" ry="2" />
<text  x="597.54" y="1455.5" ></text>
</g>
<g >
<title>CompareAndSwap (91 samples, 2.55%)</title><rect x="142.1" y="1557" width="30.1" height="15.0" fill="rgb(206,41,30)" rx="2" ry="2" />
<text  x="145.07" y="1567.5" >Co..</text>
</g>
<g >
<title>aa_file_perm (1 samples, 0.03%)</title><rect x="432.4" y="1285" width="0.3" height="15.0" fill="rgb(217,46,40)" rx="2" ry="2" />
<text  x="435.35" y="1295.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="10.0" y="1397" width="0.3" height="15.0" fill="rgb(243,32,16)" rx="2" ry="2" />
<text  x="13.00" y="1407.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (6 samples, 0.17%)</title><rect x="845.4" y="1429" width="2.0" height="15.0" fill="rgb(240,105,23)" rx="2" ry="2" />
<text  x="848.43" y="1439.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt; (17 samples, 0.48%)</title><rect x="655.8" y="1493" width="5.6" height="15.0" fill="rgb(222,72,44)" rx="2" ry="2" />
<text  x="658.77" y="1503.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.03%)</title><rect x="188.4" y="1477" width="0.3" height="15.0" fill="rgb(210,59,39)" rx="2" ry="2" />
<text  x="191.41" y="1487.5" ></text>
</g>
<g >
<title>fault_in_iov_iter_readable (2 samples, 0.06%)</title><rect x="49.1" y="1397" width="0.6" height="15.0" fill="rgb(239,49,36)" rx="2" ry="2" />
<text  x="52.06" y="1407.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (1 samples, 0.03%)</title><rect x="1048.0" y="469" width="0.3" height="15.0" fill="rgb(252,159,41)" rx="2" ry="2" />
<text  x="1051.00" y="479.5" ></text>
</g>
<g >
<title>NaClAddrSpaceFree (26 samples, 0.73%)</title><rect x="200.7" y="1493" width="8.6" height="15.0" fill="rgb(240,37,4)" rx="2" ry="2" />
<text  x="203.65" y="1503.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (4 samples, 0.11%)</title><rect x="681.6" y="1381" width="1.3" height="15.0" fill="rgb(206,118,14)" rx="2" ry="2" />
<text  x="684.59" y="1391.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.08%)</title><rect x="1020.9" y="1445" width="1.0" height="15.0" fill="rgb(231,193,33)" rx="2" ry="2" />
<text  x="1023.86" y="1455.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.11%)</title><rect x="683.9" y="1381" width="1.3" height="15.0" fill="rgb(205,146,19)" rx="2" ry="2" />
<text  x="686.91" y="1391.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="1058.9" y="1461" width="0.4" height="15.0" fill="rgb(225,109,39)" rx="2" ry="2" />
<text  x="1061.93" y="1471.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (12 samples, 0.34%)</title><rect x="739.5" y="1445" width="4.0" height="15.0" fill="rgb(252,207,1)" rx="2" ry="2" />
<text  x="742.51" y="1455.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="1086.7" y="1573" width="0.4" height="15.0" fill="rgb(218,220,33)" rx="2" ry="2" />
<text  x="1089.73" y="1583.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="1047.7" y="1125" width="0.3" height="15.0" fill="rgb(210,67,30)" rx="2" ry="2" />
<text  x="1050.67" y="1135.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.08%)</title><rect x="1047.0" y="1477" width="1.0" height="15.0" fill="rgb(249,124,48)" rx="2" ry="2" />
<text  x="1050.01" y="1487.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (1 samples, 0.03%)</title><rect x="1048.0" y="773" width="0.3" height="15.0" fill="rgb(232,112,46)" rx="2" ry="2" />
<text  x="1051.00" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 2.24%)</title><rect x="11.0" y="1493" width="26.5" height="15.0" fill="rgb(251,194,45)" rx="2" ry="2" />
<text  x="13.99" y="1503.5" >d..</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1091.4" y="1317" width="0.3" height="15.0" fill="rgb(246,214,52)" rx="2" ry="2" />
<text  x="1094.36" y="1327.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (7 samples, 0.20%)</title><rect x="58.0" y="1589" width="2.3" height="15.0" fill="rgb(215,121,23)" rx="2" ry="2" />
<text  x="60.99" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (18 samples, 0.50%)</title><rect x="547.5" y="1525" width="6.0" height="15.0" fill="rgb(228,148,52)" rx="2" ry="2" />
<text  x="550.54" y="1535.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.06%)</title><rect x="1033.1" y="1381" width="0.7" height="15.0" fill="rgb(231,89,24)" rx="2" ry="2" />
<text  x="1036.11" y="1391.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.34%)</title><rect x="295.0" y="1397" width="4.0" height="15.0" fill="rgb(226,128,37)" rx="2" ry="2" />
<text  x="297.99" y="1407.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.03%)</title><rect x="1138.4" y="1317" width="0.3" height="15.0" fill="rgb(214,162,10)" rx="2" ry="2" />
<text  x="1141.36" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="39.5" y="1461" width="0.3" height="15.0" fill="rgb(217,7,47)" rx="2" ry="2" />
<text  x="42.46" y="1471.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.53%)</title><rect x="728.6" y="1445" width="6.3" height="15.0" fill="rgb(225,60,11)" rx="2" ry="2" />
<text  x="731.59" y="1455.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1090.4" y="1269" width="0.3" height="15.0" fill="rgb(243,51,22)" rx="2" ry="2" />
<text  x="1093.37" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.03%)</title><rect x="200.3" y="1445" width="0.4" height="15.0" fill="rgb(212,92,21)" rx="2" ry="2" />
<text  x="203.32" y="1455.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (1 samples, 0.03%)</title><rect x="1048.0" y="661" width="0.3" height="15.0" fill="rgb(225,128,39)" rx="2" ry="2" />
<text  x="1051.00" y="671.5" ></text>
</g>
<g >
<title>__vm_munmap (33 samples, 0.93%)</title><rect x="188.7" y="1397" width="11.0" height="15.0" fill="rgb(224,38,53)" rx="2" ry="2" />
<text  x="191.74" y="1407.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.03%)</title><rect x="225.5" y="1557" width="0.3" height="15.0" fill="rgb(239,71,35)" rx="2" ry="2" />
<text  x="228.48" y="1567.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.34%)</title><rect x="611.8" y="1397" width="3.9" height="15.0" fill="rgb(231,144,1)" rx="2" ry="2" />
<text  x="614.75" y="1407.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.03%)</title><rect x="1188.7" y="1397" width="0.3" height="15.0" fill="rgb(218,102,19)" rx="2" ry="2" />
<text  x="1191.68" y="1407.5" ></text>
</g>
<g >
<title>follow_page_mask (1 samples, 0.03%)</title><rect x="1034.1" y="1413" width="0.3" height="15.0" fill="rgb(215,185,52)" rx="2" ry="2" />
<text  x="1037.10" y="1423.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (3 samples, 0.08%)</title><rect x="685.2" y="1381" width="1.0" height="15.0" fill="rgb(252,131,6)" rx="2" ry="2" />
<text  x="688.23" y="1391.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="1017.9" y="1413" width="0.3" height="15.0" fill="rgb(211,29,12)" rx="2" ry="2" />
<text  x="1020.88" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (5 samples, 0.14%)</title><rect x="70.9" y="1589" width="1.7" height="15.0" fill="rgb(216,82,6)" rx="2" ry="2" />
<text  x="73.90" y="1599.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (4 samples, 0.11%)</title><rect x="604.5" y="1365" width="1.3" height="15.0" fill="rgb(238,1,10)" rx="2" ry="2" />
<text  x="607.47" y="1375.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.03%)</title><rect x="188.4" y="1317" width="0.3" height="15.0" fill="rgb(220,102,22)" rx="2" ry="2" />
<text  x="191.41" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="1033.1" y="1541" width="0.7" height="15.0" fill="rgb(213,87,52)" rx="2" ry="2" />
<text  x="1036.11" y="1551.5" ></text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force (1 samples, 0.03%)</title><rect x="1048.0" y="1477" width="0.3" height="15.0" fill="rgb(241,131,38)" rx="2" ry="2" />
<text  x="1051.00" y="1487.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (19 samples, 0.53%)</title><rect x="743.5" y="1461" width="6.3" height="15.0" fill="rgb(226,128,5)" rx="2" ry="2" />
<text  x="746.49" y="1471.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (3 samples, 0.08%)</title><rect x="328.4" y="1461" width="1.0" height="15.0" fill="rgb(225,141,17)" rx="2" ry="2" />
<text  x="331.42" y="1471.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.22%)</title><rect x="303.6" y="1381" width="2.6" height="15.0" fill="rgb(244,139,44)" rx="2" ry="2" />
<text  x="306.59" y="1391.5" ></text>
</g>
<g >
<title>menu_select (2 samples, 0.06%)</title><rect x="1133.4" y="1509" width="0.7" height="15.0" fill="rgb(228,221,37)" rx="2" ry="2" />
<text  x="1136.40" y="1519.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (6 samples, 0.17%)</title><rect x="673.0" y="1397" width="2.0" height="15.0" fill="rgb(249,118,26)" rx="2" ry="2" />
<text  x="675.98" y="1407.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.03%)</title><rect x="527.0" y="1541" width="0.3" height="15.0" fill="rgb(247,123,41)" rx="2" ry="2" />
<text  x="530.02" y="1551.5" ></text>
</g>
<g >
<title>unmap_page_range (25 samples, 0.70%)</title><rect x="210.6" y="1253" width="8.3" height="15.0" fill="rgb(251,202,5)" rx="2" ry="2" />
<text  x="213.58" y="1263.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.03%)</title><rect x="1144.3" y="1397" width="0.4" height="15.0" fill="rgb(209,198,18)" rx="2" ry="2" />
<text  x="1147.32" y="1407.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.03%)</title><rect x="1182.1" y="1429" width="0.3" height="15.0" fill="rgb(227,127,52)" rx="2" ry="2" />
<text  x="1185.06" y="1439.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.03%)</title><rect x="1033.1" y="1285" width="0.3" height="15.0" fill="rgb(209,164,9)" rx="2" ry="2" />
<text  x="1036.11" y="1295.5" ></text>
</g>
<g >
<title>std::thread::available_parallelism (1 samples, 0.03%)</title><rect x="1048.0" y="373" width="0.3" height="15.0" fill="rgb(216,97,25)" rx="2" ry="2" />
<text  x="1051.00" y="383.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (15 samples, 0.42%)</title><rect x="213.9" y="1205" width="5.0" height="15.0" fill="rgb(245,176,30)" rx="2" ry="2" />
<text  x="216.89" y="1215.5" ></text>
</g>
<g >
<title>page_referenced (1 samples, 0.03%)</title><rect x="1087.4" y="1461" width="0.3" height="15.0" fill="rgb(243,128,40)" rx="2" ry="2" />
<text  x="1090.39" y="1471.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.08%)</title><rect x="1186.0" y="1461" width="1.0" height="15.0" fill="rgb(246,44,36)" rx="2" ry="2" />
<text  x="1189.03" y="1471.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.17%)</title><rect x="673.0" y="1349" width="2.0" height="15.0" fill="rgb(233,205,41)" rx="2" ry="2" />
<text  x="675.98" y="1359.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (16 samples, 0.45%)</title><rect x="588.6" y="1429" width="5.3" height="15.0" fill="rgb(238,178,13)" rx="2" ry="2" />
<text  x="591.58" y="1439.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.03%)</title><rect x="1048.0" y="517" width="0.3" height="15.0" fill="rgb(210,198,2)" rx="2" ry="2" />
<text  x="1051.00" y="527.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (99 samples, 2.78%)</title><rect x="437.3" y="1445" width="32.8" height="15.0" fill="rgb(208,93,27)" rx="2" ry="2" />
<text  x="440.32" y="1455.5" >&lt;p..</text>
</g>
<g >
<title>CheckValidityOfRegularInstruction (1 samples, 0.03%)</title><rect x="187.4" y="1461" width="0.3" height="15.0" fill="rgb(226,125,28)" rx="2" ry="2" />
<text  x="190.41" y="1471.5" ></text>
</g>
<g >
<title>tick_sched_timer (9 samples, 0.25%)</title><rect x="1138.4" y="1349" width="2.9" height="15.0" fill="rgb(251,127,48)" rx="2" ry="2" />
<text  x="1141.36" y="1359.5" ></text>
</g>
<g >
<title>[sel_ldr] (161 samples, 4.52%)</title><rect x="932.5" y="1589" width="53.3" height="15.0" fill="rgb(227,155,46)" rx="2" ry="2" />
<text  x="935.49" y="1599.5" >[sel_..</text>
</g>
<g >
<title>free_pcppages_bulk (2 samples, 0.06%)</title><rect x="217.9" y="1125" width="0.6" height="15.0" fill="rgb(235,193,3)" rx="2" ry="2" />
<text  x="220.87" y="1135.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="1047.7" y="1077" width="0.3" height="15.0" fill="rgb(246,174,17)" rx="2" ry="2" />
<text  x="1050.67" y="1087.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (132 samples, 3.70%)</title><rect x="796.1" y="1477" width="43.7" height="15.0" fill="rgb(223,179,25)" rx="2" ry="2" />
<text  x="799.12" y="1487.5" >ring..</text>
</g>
<g >
<title>__x64_sys_munmap (33 samples, 0.93%)</title><rect x="188.7" y="1413" width="11.0" height="15.0" fill="rgb(222,120,25)" rx="2" ry="2" />
<text  x="191.74" y="1423.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.06%)</title><rect x="10.0" y="1589" width="0.7" height="15.0" fill="rgb(224,105,40)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.65%)</title><rect x="634.9" y="1445" width="7.6" height="15.0" fill="rgb(223,65,37)" rx="2" ry="2" />
<text  x="637.92" y="1455.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (11 samples, 0.31%)</title><rect x="286.4" y="1429" width="3.6" height="15.0" fill="rgb(241,208,29)" rx="2" ry="2" />
<text  x="289.38" y="1439.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="300.3" y="1365" width="0.3" height="15.0" fill="rgb(208,164,32)" rx="2" ry="2" />
<text  x="303.28" y="1375.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (169 samples, 4.74%)</title><rect x="1134.1" y="1589" width="55.9" height="15.0" fill="rgb(208,177,48)" rx="2" ry="2" />
<text  x="1137.06" y="1599.5" >x86_6..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.08%)</title><rect x="678.9" y="1349" width="1.0" height="15.0" fill="rgb(239,225,45)" rx="2" ry="2" />
<text  x="681.94" y="1359.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.14%)</title><rect x="387.7" y="1397" width="1.6" height="15.0" fill="rgb(207,193,0)" rx="2" ry="2" />
<text  x="390.67" y="1407.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="1021.5" y="1429" width="0.4" height="15.0" fill="rgb(221,17,26)" rx="2" ry="2" />
<text  x="1024.52" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="200.3" y="1477" width="0.4" height="15.0" fill="rgb(241,77,48)" rx="2" ry="2" />
<text  x="203.32" y="1487.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="619.4" y="1381" width="0.3" height="15.0" fill="rgb(230,5,24)" rx="2" ry="2" />
<text  x="622.36" y="1391.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.03%)</title><rect x="1188.0" y="1413" width="0.3" height="15.0" fill="rgb(249,57,39)" rx="2" ry="2" />
<text  x="1191.01" y="1423.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="1185.7" y="1429" width="0.3" height="15.0" fill="rgb(240,214,39)" rx="2" ry="2" />
<text  x="1188.70" y="1439.5" ></text>
</g>
<g >
<title>new_sync_write (24 samples, 0.67%)</title><rect x="39.8" y="1381" width="7.9" height="15.0" fill="rgb(219,110,45)" rx="2" ry="2" />
<text  x="42.79" y="1391.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (91 samples, 2.55%)</title><rect x="491.3" y="1461" width="30.1" height="15.0" fill="rgb(211,170,54)" rx="2" ry="2" />
<text  x="494.27" y="1471.5" >ri..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="1047.7" y="1141" width="0.3" height="15.0" fill="rgb(230,42,46)" rx="2" ry="2" />
<text  x="1050.67" y="1151.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,126 samples, 31.58%)</title><rect x="521.4" y="1573" width="372.7" height="15.0" fill="rgb(210,229,46)" rx="2" ry="2" />
<text  x="524.39" y="1583.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (4 samples, 0.11%)</title><rect x="209.3" y="1445" width="1.3" height="15.0" fill="rgb(254,83,43)" rx="2" ry="2" />
<text  x="212.26" y="1455.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.03%)</title><rect x="478.0" y="1445" width="0.4" height="15.0" fill="rgb(249,16,16)" rx="2" ry="2" />
<text  x="481.03" y="1455.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="429.7" y="1477" width="0.3" height="15.0" fill="rgb(207,182,28)" rx="2" ry="2" />
<text  x="432.70" y="1487.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="188.1" y="1429" width="0.3" height="15.0" fill="rgb(241,119,46)" rx="2" ry="2" />
<text  x="191.08" y="1439.5" ></text>
</g>
<g >
<title>tick_sched_handle (9 samples, 0.25%)</title><rect x="1138.4" y="1333" width="2.9" height="15.0" fill="rgb(208,55,43)" rx="2" ry="2" />
<text  x="1141.36" y="1343.5" ></text>
</g>
<g >
<title>dispatcher (4 samples, 0.11%)</title><rect x="1045.0" y="1541" width="1.3" height="15.0" fill="rgb(206,104,5)" rx="2" ry="2" />
<text  x="1048.02" y="1551.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.34%)</title><rect x="611.8" y="1365" width="3.9" height="15.0" fill="rgb(210,225,44)" rx="2" ry="2" />
<text  x="614.75" y="1375.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (1 samples, 0.03%)</title><rect x="176.5" y="1573" width="0.3" height="15.0" fill="rgb(212,163,11)" rx="2" ry="2" />
<text  x="179.49" y="1583.5" ></text>
</g>
<g >
<title>std::fs::File::open (1 samples, 0.03%)</title><rect x="1048.0" y="325" width="0.3" height="15.0" fill="rgb(246,227,20)" rx="2" ry="2" />
<text  x="1051.00" y="335.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.03%)</title><rect x="1188.0" y="1445" width="0.3" height="15.0" fill="rgb(241,143,9)" rx="2" ry="2" />
<text  x="1191.01" y="1455.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.03%)</title><rect x="1059.6" y="1477" width="0.3" height="15.0" fill="rgb(220,37,36)" rx="2" ry="2" />
<text  x="1062.59" y="1487.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (16 samples, 0.45%)</title><rect x="365.8" y="1429" width="5.3" height="15.0" fill="rgb(225,85,48)" rx="2" ry="2" />
<text  x="368.82" y="1439.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.06%)</title><rect x="280.1" y="1509" width="0.7" height="15.0" fill="rgb(236,127,52)" rx="2" ry="2" />
<text  x="283.09" y="1519.5" ></text>
</g>
<g >
<title>record__write (1 samples, 0.03%)</title><rect x="39.5" y="1525" width="0.3" height="15.0" fill="rgb(225,204,24)" rx="2" ry="2" />
<text  x="42.46" y="1535.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (1 samples, 0.03%)</title><rect x="1047.7" y="1269" width="0.3" height="15.0" fill="rgb(210,170,10)" rx="2" ry="2" />
<text  x="1050.67" y="1279.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (29 samples, 0.81%)</title><rect x="299.6" y="1461" width="9.6" height="15.0" fill="rgb(244,101,44)" rx="2" ry="2" />
<text  x="302.62" y="1471.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (14 samples, 0.39%)</title><rect x="213.9" y="1189" width="4.6" height="15.0" fill="rgb(212,170,33)" rx="2" ry="2" />
<text  x="216.89" y="1199.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (6 samples, 0.17%)</title><rect x="385.3" y="1397" width="2.0" height="15.0" fill="rgb(208,38,46)" rx="2" ry="2" />
<text  x="388.35" y="1407.5" ></text>
</g>
<g >
<title>kernfs_dop_revalidate (1 samples, 0.03%)</title><rect x="1085.4" y="1461" width="0.3" height="15.0" fill="rgb(246,178,14)" rx="2" ry="2" />
<text  x="1088.41" y="1471.5" ></text>
</g>
<g >
<title>do_idle (138 samples, 3.87%)</title><rect x="1088.4" y="1557" width="45.7" height="15.0" fill="rgb(243,172,53)" rx="2" ry="2" />
<text  x="1091.38" y="1567.5" >do_i..</text>
</g>
<g >
<title>ksys_write (1 samples, 0.03%)</title><rect x="10.3" y="1333" width="0.4" height="15.0" fill="rgb(244,207,26)" rx="2" ry="2" />
<text  x="13.33" y="1343.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (3 samples, 0.08%)</title><rect x="46.7" y="1157" width="1.0" height="15.0" fill="rgb(247,204,13)" rx="2" ry="2" />
<text  x="49.74" y="1167.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.03%)</title><rect x="1091.4" y="1301" width="0.3" height="15.0" fill="rgb(209,37,40)" rx="2" ry="2" />
<text  x="1094.36" y="1311.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 0.03%)</title><rect x="1144.7" y="1429" width="0.3" height="15.0" fill="rgb(253,54,34)" rx="2" ry="2" />
<text  x="1147.65" y="1439.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.03%)</title><rect x="1047.0" y="1317" width="0.3" height="15.0" fill="rgb(248,68,13)" rx="2" ry="2" />
<text  x="1050.01" y="1327.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="47.7" y="1397" width="0.4" height="15.0" fill="rgb(228,146,5)" rx="2" ry="2" />
<text  x="50.73" y="1407.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.08%)</title><rect x="1143.3" y="1349" width="1.0" height="15.0" fill="rgb(221,156,45)" rx="2" ry="2" />
<text  x="1146.33" y="1359.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.14%)</title><rect x="598.2" y="1397" width="1.6" height="15.0" fill="rgb(245,13,29)" rx="2" ry="2" />
<text  x="601.18" y="1407.5" ></text>
</g>
<g >
<title>NaClAppDtor (26 samples, 0.73%)</title><rect x="200.7" y="1509" width="8.6" height="15.0" fill="rgb(214,123,1)" rx="2" ry="2" />
<text  x="203.65" y="1519.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="213.2" y="1189" width="0.4" height="15.0" fill="rgb(241,108,26)" rx="2" ry="2" />
<text  x="216.23" y="1199.5" ></text>
</g>
<g >
<title>lind (3 samples, 0.08%)</title><rect x="10.0" y="1621" width="1.0" height="15.0" fill="rgb(245,137,22)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (1 samples, 0.03%)</title><rect x="1048.0" y="1013" width="0.3" height="15.0" fill="rgb(246,72,23)" rx="2" ry="2" />
<text  x="1051.00" y="1023.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.03%)</title><rect x="199.7" y="1381" width="0.3" height="15.0" fill="rgb(222,211,0)" rx="2" ry="2" />
<text  x="202.66" y="1391.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.03%)</title><rect x="1090.0" y="1397" width="0.4" height="15.0" fill="rgb(214,92,28)" rx="2" ry="2" />
<text  x="1093.04" y="1407.5" ></text>
</g>
<g >
<title>anon_vma_interval_tree_iter_first (1 samples, 0.03%)</title><rect x="1087.4" y="1429" width="0.3" height="15.0" fill="rgb(231,38,50)" rx="2" ry="2" />
<text  x="1090.39" y="1439.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.08%)</title><rect x="1019.5" y="1429" width="1.0" height="15.0" fill="rgb(212,215,6)" rx="2" ry="2" />
<text  x="1022.54" y="1439.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (78 samples, 2.19%)</title><rect x="11.7" y="1429" width="25.8" height="15.0" fill="rgb(217,105,37)" rx="2" ry="2" />
<text  x="14.65" y="1439.5" >p..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.34%)</title><rect x="682.9" y="1397" width="4.0" height="15.0" fill="rgb(254,39,49)" rx="2" ry="2" />
<text  x="685.91" y="1407.5" ></text>
</g>
<g >
<title>n_tty_write (1 samples, 0.03%)</title><rect x="10.3" y="1237" width="0.4" height="15.0" fill="rgb(225,80,5)" rx="2" ry="2" />
<text  x="13.33" y="1247.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="614.7" y="1333" width="0.4" height="15.0" fill="rgb(210,151,17)" rx="2" ry="2" />
<text  x="617.73" y="1343.5" ></text>
</g>
<g >
<title>seq_write (1 samples, 0.03%)</title><rect x="1086.1" y="1461" width="0.3" height="15.0" fill="rgb(222,29,20)" rx="2" ry="2" />
<text  x="1089.07" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.93%)</title><rect x="188.7" y="1445" width="11.0" height="15.0" fill="rgb(253,153,3)" rx="2" ry="2" />
<text  x="191.74" y="1455.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (23 samples, 0.65%)</title><rect x="634.9" y="1429" width="7.6" height="15.0" fill="rgb(231,44,10)" rx="2" ry="2" />
<text  x="637.92" y="1439.5" ></text>
</g>
<g >
<title>copy_page (1 samples, 0.03%)</title><rect x="10.0" y="1317" width="0.3" height="15.0" fill="rgb(211,61,10)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" ></text>
</g>
<g >
<title>page_mapping (3 samples, 0.08%)</title><rect x="1018.2" y="1413" width="1.0" height="15.0" fill="rgb(233,194,12)" rx="2" ry="2" />
<text  x="1021.21" y="1423.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (3 samples, 0.08%)</title><rect x="53.4" y="1589" width="1.0" height="15.0" fill="rgb(211,122,36)" rx="2" ry="2" />
<text  x="56.36" y="1599.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.03%)</title><rect x="1019.2" y="1429" width="0.3" height="15.0" fill="rgb(225,158,45)" rx="2" ry="2" />
<text  x="1022.21" y="1439.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.11%)</title><rect x="375.4" y="1445" width="1.3" height="15.0" fill="rgb(230,149,15)" rx="2" ry="2" />
<text  x="378.42" y="1455.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (120 samples, 3.37%)</title><rect x="688.9" y="1461" width="39.7" height="15.0" fill="rgb(244,197,46)" rx="2" ry="2" />
<text  x="691.87" y="1471.5" >par..</text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (93 samples, 2.61%)</title><rect x="689.2" y="1429" width="30.8" height="15.0" fill="rgb(244,10,19)" rx="2" ry="2" />
<text  x="692.20" y="1439.5" >co..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (41 samples, 1.15%)</title><rect x="606.1" y="1477" width="13.6" height="15.0" fill="rgb(243,108,0)" rx="2" ry="2" />
<text  x="609.12" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.03%)</title><rect x="200.0" y="1461" width="0.3" height="15.0" fill="rgb(212,140,17)" rx="2" ry="2" />
<text  x="202.99" y="1471.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (3 samples, 0.08%)</title><rect x="43.8" y="1237" width="1.0" height="15.0" fill="rgb(207,60,30)" rx="2" ry="2" />
<text  x="46.76" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="1033.1" y="1525" width="0.7" height="15.0" fill="rgb(215,71,16)" rx="2" ry="2" />
<text  x="1036.11" y="1535.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (4 samples, 0.11%)</title><rect x="37.8" y="1477" width="1.3" height="15.0" fill="rgb(245,165,27)" rx="2" ry="2" />
<text  x="40.80" y="1487.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.03%)</title><rect x="1047.0" y="1189" width="0.3" height="15.0" fill="rgb(208,61,23)" rx="2" ry="2" />
<text  x="1050.01" y="1199.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (914 samples, 25.64%)</title><rect x="218.9" y="1573" width="302.5" height="15.0" fill="rgb(252,162,39)" rx="2" ry="2" />
<text  x="221.86" y="1583.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>unmap_vmas (25 samples, 0.70%)</title><rect x="210.6" y="1285" width="8.3" height="15.0" fill="rgb(233,223,17)" rx="2" ry="2" />
<text  x="213.58" y="1295.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.03%)</title><rect x="1059.6" y="1525" width="0.3" height="15.0" fill="rgb(232,4,41)" rx="2" ry="2" />
<text  x="1062.59" y="1535.5" ></text>
</g>
<g >
<title>exit_mmap (2 samples, 0.06%)</title><rect x="1058.9" y="1493" width="0.7" height="15.0" fill="rgb(222,1,8)" rx="2" ry="2" />
<text  x="1061.93" y="1503.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (2 samples, 0.06%)</title><rect x="1033.1" y="1429" width="0.7" height="15.0" fill="rgb(236,146,2)" rx="2" ry="2" />
<text  x="1036.11" y="1439.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.03%)</title><rect x="1048.0" y="229" width="0.3" height="15.0" fill="rgb(236,84,32)" rx="2" ry="2" />
<text  x="1051.00" y="239.5" ></text>
</g>
<g >
<title>pick_next_task (3 samples, 0.08%)</title><rect x="1186.0" y="1445" width="1.0" height="15.0" fill="rgb(238,9,38)" rx="2" ry="2" />
<text  x="1189.03" y="1455.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="381.4" y="1349" width="0.3" height="15.0" fill="rgb(210,7,8)" rx="2" ry="2" />
<text  x="384.38" y="1359.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.03%)</title><rect x="1187.7" y="1461" width="0.3" height="15.0" fill="rgb(234,8,47)" rx="2" ry="2" />
<text  x="1190.68" y="1471.5" ></text>
</g>
<g >
<title>perf (117 samples, 3.28%)</title><rect x="11.0" y="1621" width="38.7" height="15.0" fill="rgb(208,51,18)" rx="2" ry="2" />
<text  x="13.99" y="1631.5" >perf</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.14%)</title><rect x="373.1" y="1381" width="1.7" height="15.0" fill="rgb(212,217,35)" rx="2" ry="2" />
<text  x="376.10" y="1391.5" ></text>
</g>
<g >
<title>__perf_event_enable (69 samples, 1.94%)</title><rect x="14.6" y="1317" width="22.9" height="15.0" fill="rgb(215,171,34)" rx="2" ry="2" />
<text  x="17.63" y="1327.5" >_..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (18 samples, 0.50%)</title><rect x="329.4" y="1477" width="6.0" height="15.0" fill="rgb(236,2,13)" rx="2" ry="2" />
<text  x="332.41" y="1487.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.22%)</title><rect x="306.6" y="1413" width="2.6" height="15.0" fill="rgb(250,51,47)" rx="2" ry="2" />
<text  x="309.57" y="1423.5" ></text>
</g>
<g >
<title>run_rebalance_domains (7 samples, 0.20%)</title><rect x="1142.0" y="1365" width="2.3" height="15.0" fill="rgb(206,134,48)" rx="2" ry="2" />
<text  x="1145.01" y="1375.5" ></text>
</g>
<g >
<title>unmap_region (25 samples, 0.70%)</title><rect x="210.6" y="1301" width="8.3" height="15.0" fill="rgb(211,182,48)" rx="2" ry="2" />
<text  x="213.58" y="1311.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (1 samples, 0.03%)</title><rect x="1047.0" y="1301" width="0.3" height="15.0" fill="rgb(212,146,50)" rx="2" ry="2" />
<text  x="1050.01" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.70%)</title><rect x="210.6" y="1429" width="8.3" height="15.0" fill="rgb(225,52,39)" rx="2" ry="2" />
<text  x="213.58" y="1439.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.03%)</title><rect x="211.6" y="1205" width="0.3" height="15.0" fill="rgb(251,78,7)" rx="2" ry="2" />
<text  x="214.58" y="1215.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::lock_common (3 samples, 0.08%)</title><rect x="687.9" y="1445" width="1.0" height="15.0" fill="rgb(223,86,9)" rx="2" ry="2" />
<text  x="690.88" y="1455.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (36 samples, 1.01%)</title><rect x="594.2" y="1477" width="11.9" height="15.0" fill="rgb(234,52,25)" rx="2" ry="2" />
<text  x="597.21" y="1487.5" ></text>
</g>
<g >
<title>override_creds (1 samples, 0.03%)</title><rect x="434.7" y="1333" width="0.3" height="15.0" fill="rgb(219,78,15)" rx="2" ry="2" />
<text  x="437.67" y="1343.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.03%)</title><rect x="189.1" y="1253" width="0.3" height="15.0" fill="rgb(238,12,28)" rx="2" ry="2" />
<text  x="192.07" y="1263.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.03%)</title><rect x="188.1" y="1445" width="0.3" height="15.0" fill="rgb(218,181,50)" rx="2" ry="2" />
<text  x="191.08" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.17%)</title><rect x="47.7" y="1605" width="2.0" height="15.0" fill="rgb(238,109,44)" rx="2" ry="2" />
<text  x="50.73" y="1615.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (1 samples, 0.03%)</title><rect x="64.9" y="1557" width="0.4" height="15.0" fill="rgb(233,201,25)" rx="2" ry="2" />
<text  x="67.95" y="1567.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (27 samples, 0.76%)</title><rect x="179.8" y="1493" width="8.9" height="15.0" fill="rgb(208,94,30)" rx="2" ry="2" />
<text  x="182.80" y="1503.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="1048.0" y="1317" width="0.3" height="15.0" fill="rgb(248,111,6)" rx="2" ry="2" />
<text  x="1051.00" y="1327.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.14%)</title><rect x="61.3" y="1589" width="1.7" height="15.0" fill="rgb(221,89,37)" rx="2" ry="2" />
<text  x="64.30" y="1599.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.06%)</title><rect x="374.8" y="1381" width="0.6" height="15.0" fill="rgb(225,91,23)" rx="2" ry="2" />
<text  x="377.76" y="1391.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (2 samples, 0.06%)</title><rect x="56.0" y="1589" width="0.7" height="15.0" fill="rgb(208,0,18)" rx="2" ry="2" />
<text  x="59.01" y="1599.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (19 samples, 0.53%)</title><rect x="649.5" y="1429" width="6.3" height="15.0" fill="rgb(244,99,28)" rx="2" ry="2" />
<text  x="652.48" y="1439.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (28 samples, 0.79%)</title><rect x="290.4" y="1477" width="9.2" height="15.0" fill="rgb(235,180,35)" rx="2" ry="2" />
<text  x="293.35" y="1487.5" ></text>
</g>
<g >
<title>mem_cgroup_wb_stats (1 samples, 0.03%)</title><rect x="39.5" y="1237" width="0.3" height="15.0" fill="rgb(241,65,42)" rx="2" ry="2" />
<text  x="42.46" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="839.8" y="1429" width="0.3" height="15.0" fill="rgb(217,37,2)" rx="2" ry="2" />
<text  x="842.81" y="1439.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::with_capacity_and_hasher (1 samples, 0.03%)</title><rect x="1048.0" y="405" width="0.3" height="15.0" fill="rgb(235,131,43)" rx="2" ry="2" />
<text  x="1051.00" y="415.5" ></text>
</g>
<g >
<title>sel_ldr (3,054 samples, 85.67%)</title><rect x="49.7" y="1621" width="1010.9" height="15.0" fill="rgb(233,220,12)" rx="2" ry="2" />
<text  x="52.72" y="1631.5" >sel_ldr</text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.03%)</title><rect x="200.3" y="1429" width="0.4" height="15.0" fill="rgb(246,106,49)" rx="2" ry="2" />
<text  x="203.32" y="1439.5" ></text>
</g>
<g >
<title>pfn_pte (1 samples, 0.03%)</title><rect x="1022.2" y="1477" width="0.3" height="15.0" fill="rgb(245,176,12)" rx="2" ry="2" />
<text  x="1025.19" y="1487.5" ></text>
</g>
<g >
<title>__cmd_record (111 samples, 3.11%)</title><rect x="11.0" y="1589" width="36.7" height="15.0" fill="rgb(233,119,12)" rx="2" ry="2" />
<text  x="13.99" y="1599.5" >__c..</text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.03%)</title><rect x="10.0" y="1365" width="0.3" height="15.0" fill="rgb(252,55,48)" rx="2" ry="2" />
<text  x="13.00" y="1375.5" ></text>
</g>
<g >
<title>ext4_da_write_end (9 samples, 0.25%)</title><rect x="44.8" y="1253" width="2.9" height="15.0" fill="rgb(206,140,15)" rx="2" ry="2" />
<text  x="47.75" y="1263.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::FilesystemMetadata::init_fs_metadata (1 samples, 0.03%)</title><rect x="1048.0" y="1269" width="0.3" height="15.0" fill="rgb(229,103,38)" rx="2" ry="2" />
<text  x="1051.00" y="1279.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.11%)</title><rect x="306.9" y="1397" width="1.3" height="15.0" fill="rgb(220,143,16)" rx="2" ry="2" />
<text  x="309.90" y="1407.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (2 samples, 0.06%)</title><rect x="1033.1" y="1301" width="0.7" height="15.0" fill="rgb(218,129,36)" rx="2" ry="2" />
<text  x="1036.11" y="1311.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.03%)</title><rect x="987.1" y="1541" width="0.3" height="15.0" fill="rgb(249,146,14)" rx="2" ry="2" />
<text  x="990.10" y="1551.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.03%)</title><rect x="48.7" y="1301" width="0.4" height="15.0" fill="rgb(215,75,40)" rx="2" ry="2" />
<text  x="51.73" y="1311.5" ></text>
</g>
<g >
<title>perf_mmap__push (24 samples, 0.67%)</title><rect x="39.8" y="1541" width="7.9" height="15.0" fill="rgb(232,102,33)" rx="2" ry="2" />
<text  x="42.79" y="1551.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.17%)</title><rect x="385.3" y="1365" width="2.0" height="15.0" fill="rgb(246,66,1)" rx="2" ry="2" />
<text  x="388.35" y="1375.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (5 samples, 0.14%)</title><rect x="42.1" y="1221" width="1.7" height="15.0" fill="rgb(238,7,42)" rx="2" ry="2" />
<text  x="45.11" y="1231.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="432.4" y="1333" width="0.3" height="15.0" fill="rgb(230,138,49)" rx="2" ry="2" />
<text  x="435.35" y="1343.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.03%)</title><rect x="1048.0" y="1077" width="0.3" height="15.0" fill="rgb(231,107,40)" rx="2" ry="2" />
<text  x="1051.00" y="1087.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.06%)</title><rect x="188.7" y="1349" width="0.7" height="15.0" fill="rgb(222,76,7)" rx="2" ry="2" />
<text  x="191.74" y="1359.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (26 samples, 0.73%)</title><rect x="200.7" y="1365" width="8.6" height="15.0" fill="rgb(207,154,26)" rx="2" ry="2" />
<text  x="203.65" y="1375.5" ></text>
</g>
<g >
<title>write (1 samples, 0.03%)</title><rect x="10.3" y="1397" width="0.4" height="15.0" fill="rgb(236,122,34)" rx="2" ry="2" />
<text  x="13.33" y="1407.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (28 samples, 0.79%)</title><rect x="606.5" y="1445" width="9.2" height="15.0" fill="rgb(222,61,5)" rx="2" ry="2" />
<text  x="609.45" y="1455.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.03%)</title><rect x="1048.0" y="1125" width="0.3" height="15.0" fill="rgb(228,215,39)" rx="2" ry="2" />
<text  x="1051.00" y="1135.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (31 samples, 0.87%)</title><rect x="178.5" y="1557" width="10.2" height="15.0" fill="rgb(216,33,22)" rx="2" ry="2" />
<text  x="181.48" y="1567.5" ></text>
</g>
<g >
<title>vfs_write (24 samples, 0.67%)</title><rect x="39.8" y="1397" width="7.9" height="15.0" fill="rgb(215,95,22)" rx="2" ry="2" />
<text  x="42.79" y="1407.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (26 samples, 0.73%)</title><rect x="200.7" y="1381" width="8.6" height="15.0" fill="rgb(240,100,14)" rx="2" ry="2" />
<text  x="203.65" y="1391.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (1 samples, 0.03%)</title><rect x="490.9" y="1445" width="0.4" height="15.0" fill="rgb(252,123,5)" rx="2" ry="2" />
<text  x="493.94" y="1455.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (71 samples, 1.99%)</title><rect x="285.7" y="1509" width="23.5" height="15.0" fill="rgb(228,81,5)" rx="2" ry="2" />
<text  x="288.72" y="1519.5" >d..</text>
</g>
<g >
<title>std::fs::OpenOptions::open (1 samples, 0.03%)</title><rect x="1048.0" y="309" width="0.3" height="15.0" fill="rgb(219,29,33)" rx="2" ry="2" />
<text  x="1051.00" y="319.5" ></text>
</g>
<g >
<title>stop_this_handle (1 samples, 0.03%)</title><rect x="46.4" y="1157" width="0.3" height="15.0" fill="rgb(205,66,22)" rx="2" ry="2" />
<text  x="49.41" y="1167.5" ></text>
</g>
<g >
<title>write (24 samples, 0.67%)</title><rect x="39.8" y="1477" width="7.9" height="15.0" fill="rgb(205,97,23)" rx="2" ry="2" />
<text  x="42.79" y="1487.5" ></text>
</g>
<g >
<title>record__write (24 samples, 0.67%)</title><rect x="39.8" y="1509" width="7.9" height="15.0" fill="rgb(253,135,4)" rx="2" ry="2" />
<text  x="42.79" y="1519.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (88 samples, 2.47%)</title><rect x="1145.0" y="1429" width="29.1" height="15.0" fill="rgb(246,11,25)" rx="2" ry="2" />
<text  x="1147.98" y="1439.5" >mw..</text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 0.06%)</title><rect x="1188.3" y="1445" width="0.7" height="15.0" fill="rgb(226,41,7)" rx="2" ry="2" />
<text  x="1191.35" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (118 samples, 3.31%)</title><rect x="1136.4" y="1445" width="39.0" height="15.0" fill="rgb(253,152,35)" rx="2" ry="2" />
<text  x="1139.38" y="1455.5" >cpu..</text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (99 samples, 2.78%)</title><rect x="437.3" y="1461" width="32.8" height="15.0" fill="rgb(241,170,45)" rx="2" ry="2" />
<text  x="440.32" y="1471.5" >&lt;l..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (2 samples, 0.06%)</title><rect x="618.0" y="1381" width="0.7" height="15.0" fill="rgb(225,145,25)" rx="2" ry="2" />
<text  x="621.04" y="1391.5" ></text>
</g>
<g >
<title>NaClValidateCode (2 samples, 0.06%)</title><rect x="1046.3" y="1461" width="0.7" height="15.0" fill="rgb(234,213,43)" rx="2" ry="2" />
<text  x="1049.35" y="1471.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (4 samples, 0.11%)</title><rect x="209.3" y="1525" width="1.3" height="15.0" fill="rgb(234,205,23)" rx="2" ry="2" />
<text  x="212.26" y="1535.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="212.9" y="1157" width="0.3" height="15.0" fill="rgb(254,20,19)" rx="2" ry="2" />
<text  x="215.90" y="1167.5" ></text>
</g>
<g >
<title>ion (24 samples, 0.67%)</title><rect x="39.8" y="1493" width="7.9" height="15.0" fill="rgb(208,218,47)" rx="2" ry="2" />
<text  x="42.79" y="1503.5" ></text>
</g>
<g >
<title>timerfd_tmrproc (1 samples, 0.03%)</title><rect x="1090.4" y="1413" width="0.3" height="15.0" fill="rgb(232,188,47)" rx="2" ry="2" />
<text  x="1093.37" y="1423.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (1 samples, 0.03%)</title><rect x="1189.7" y="1493" width="0.3" height="15.0" fill="rgb(246,170,51)" rx="2" ry="2" />
<text  x="1192.67" y="1503.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (6 samples, 0.17%)</title><rect x="385.3" y="1381" width="2.0" height="15.0" fill="rgb(232,224,28)" rx="2" ry="2" />
<text  x="388.35" y="1391.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.06%)</title><rect x="307.2" y="1333" width="0.7" height="15.0" fill="rgb(243,58,49)" rx="2" ry="2" />
<text  x="310.23" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.03%)</title><rect x="1141.3" y="1365" width="0.4" height="15.0" fill="rgb(206,122,41)" rx="2" ry="2" />
<text  x="1144.34" y="1375.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="681.6" y="1317" width="0.3" height="15.0" fill="rgb(219,41,23)" rx="2" ry="2" />
<text  x="684.59" y="1327.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (108 samples, 3.03%)</title><rect x="389.3" y="1461" width="35.8" height="15.0" fill="rgb(254,61,38)" rx="2" ry="2" />
<text  x="392.32" y="1471.5" >par..</text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.03%)</title><rect x="1059.3" y="1461" width="0.3" height="15.0" fill="rgb(229,1,9)" rx="2" ry="2" />
<text  x="1062.26" y="1471.5" ></text>
</g>
<g >
<title>reader_loop (2 samples, 0.06%)</title><rect x="10.0" y="1541" width="0.7" height="15.0" fill="rgb(245,9,30)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (3 samples, 0.08%)</title><rect x="223.2" y="1541" width="1.0" height="15.0" fill="rgb(237,172,17)" rx="2" ry="2" />
<text  x="226.16" y="1551.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.03%)</title><rect x="1090.0" y="1413" width="0.4" height="15.0" fill="rgb(244,59,12)" rx="2" ry="2" />
<text  x="1093.04" y="1423.5" ></text>
</g>
<g >
<title>process_vm_rw (2 samples, 0.06%)</title><rect x="1033.1" y="1493" width="0.7" height="15.0" fill="rgb(247,184,42)" rx="2" ry="2" />
<text  x="1036.11" y="1503.5" ></text>
</g>
<g >
<title>unmap_single_vma (25 samples, 0.70%)</title><rect x="210.6" y="1269" width="8.3" height="15.0" fill="rgb(251,174,27)" rx="2" ry="2" />
<text  x="213.58" y="1279.5" ></text>
</g>
<g >
<title>__es_tree_search.isra.0 (1 samples, 0.03%)</title><rect x="43.4" y="1173" width="0.4" height="15.0" fill="rgb(217,33,39)" rx="2" ry="2" />
<text  x="46.43" y="1183.5" ></text>
</g>
<g >
<title>lind_mmap (25 samples, 0.70%)</title><rect x="210.6" y="1525" width="8.3" height="15.0" fill="rgb(225,68,27)" rx="2" ry="2" />
<text  x="213.58" y="1535.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.03%)</title><rect x="1021.9" y="1461" width="0.3" height="15.0" fill="rgb(229,202,33)" rx="2" ry="2" />
<text  x="1024.85" y="1471.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (11 samples, 0.31%)</title><rect x="286.4" y="1461" width="3.6" height="15.0" fill="rgb(225,184,30)" rx="2" ry="2" />
<text  x="289.38" y="1471.5" ></text>
</g>
<g >
<title>&lt;dashmap::iter::Iter&lt;K,V,S,M&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="1047.0" y="1269" width="0.3" height="15.0" fill="rgb(248,91,16)" rx="2" ry="2" />
<text  x="1050.01" y="1279.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="298.6" y="1365" width="0.4" height="15.0" fill="rgb(249,134,36)" rx="2" ry="2" />
<text  x="301.63" y="1375.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.03%)</title><rect x="1059.6" y="1413" width="0.3" height="15.0" fill="rgb(240,7,24)" rx="2" ry="2" />
<text  x="1062.59" y="1423.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.03%)</title><rect x="681.3" y="1397" width="0.3" height="15.0" fill="rgb(232,224,33)" rx="2" ry="2" />
<text  x="684.26" y="1407.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="188.1" y="1461" width="0.3" height="15.0" fill="rgb(234,152,37)" rx="2" ry="2" />
<text  x="191.08" y="1471.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.03%)</title><rect x="10.7" y="1413" width="0.3" height="15.0" fill="rgb(222,29,0)" rx="2" ry="2" />
<text  x="13.66" y="1423.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (1 samples, 0.03%)</title><rect x="1091.4" y="1381" width="0.3" height="15.0" fill="rgb(209,140,36)" rx="2" ry="2" />
<text  x="1094.36" y="1391.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.03%)</title><rect x="1090.0" y="1365" width="0.4" height="15.0" fill="rgb(249,186,0)" rx="2" ry="2" />
<text  x="1093.04" y="1375.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (72 samples, 2.02%)</title><rect x="496.9" y="1413" width="23.8" height="15.0" fill="rgb(217,33,25)" rx="2" ry="2" />
<text  x="499.89" y="1423.5" >c..</text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force (3 samples, 0.08%)</title><rect x="328.4" y="1477" width="1.0" height="15.0" fill="rgb(216,32,48)" rx="2" ry="2" />
<text  x="331.42" y="1487.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (40 samples, 1.12%)</title><rect x="478.0" y="1477" width="13.3" height="15.0" fill="rgb(221,143,45)" rx="2" ry="2" />
<text  x="481.03" y="1487.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (1 samples, 0.03%)</title><rect x="64.9" y="1541" width="0.4" height="15.0" fill="rgb(227,14,20)" rx="2" ry="2" />
<text  x="67.95" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (80 samples, 2.24%)</title><rect x="11.0" y="1477" width="26.5" height="15.0" fill="rgb(209,88,26)" rx="2" ry="2" />
<text  x="13.99" y="1487.5" >_..</text>
</g>
<g >
<title>tty_flip_buffer_push (1 samples, 0.03%)</title><rect x="10.3" y="1189" width="0.4" height="15.0" fill="rgb(235,28,43)" rx="2" ry="2" />
<text  x="13.33" y="1199.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt; (15 samples, 0.42%)</title><rect x="280.8" y="1509" width="4.9" height="15.0" fill="rgb(235,164,44)" rx="2" ry="2" />
<text  x="283.75" y="1519.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (1 samples, 0.03%)</title><rect x="48.1" y="1365" width="0.3" height="15.0" fill="rgb(251,216,29)" rx="2" ry="2" />
<text  x="51.06" y="1375.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (2 samples, 0.06%)</title><rect x="48.4" y="1349" width="0.7" height="15.0" fill="rgb(246,119,33)" rx="2" ry="2" />
<text  x="51.40" y="1359.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (2 samples, 0.06%)</title><rect x="1033.8" y="1477" width="0.6" height="15.0" fill="rgb(219,176,13)" rx="2" ry="2" />
<text  x="1036.77" y="1487.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (3 samples, 0.08%)</title><rect x="217.5" y="1141" width="1.0" height="15.0" fill="rgb(248,176,21)" rx="2" ry="2" />
<text  x="220.53" y="1151.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (6 samples, 0.17%)</title><rect x="673.0" y="1413" width="2.0" height="15.0" fill="rgb(224,167,19)" rx="2" ry="2" />
<text  x="675.98" y="1423.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="1091.4" y="1397" width="0.3" height="15.0" fill="rgb(240,171,49)" rx="2" ry="2" />
<text  x="1094.36" y="1407.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (21 samples, 0.59%)</title><rect x="299.6" y="1445" width="7.0" height="15.0" fill="rgb(234,19,51)" rx="2" ry="2" />
<text  x="302.62" y="1455.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="1091.0" y="1365" width="0.4" height="15.0" fill="rgb(230,40,32)" rx="2" ry="2" />
<text  x="1094.03" y="1375.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2,453 samples, 68.81%)</title><rect x="82.2" y="1589" width="811.9" height="15.0" fill="rgb(215,27,25)" rx="2" ry="2" />
<text  x="85.16" y="1599.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.34%)</title><rect x="615.7" y="1445" width="4.0" height="15.0" fill="rgb(254,27,34)" rx="2" ry="2" />
<text  x="618.72" y="1455.5" ></text>
</g>
<g >
<title>__vm_munmap (26 samples, 0.73%)</title><rect x="200.7" y="1413" width="8.6" height="15.0" fill="rgb(240,116,13)" rx="2" ry="2" />
<text  x="203.65" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (4 samples, 0.11%)</title><rect x="808.7" y="1413" width="1.3" height="15.0" fill="rgb(246,63,25)" rx="2" ry="2" />
<text  x="811.69" y="1423.5" ></text>
</g>
<g >
<title>inode_permission (1 samples, 0.03%)</title><rect x="1048.0" y="85" width="0.3" height="15.0" fill="rgb(244,85,22)" rx="2" ry="2" />
<text  x="1051.00" y="95.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (2 samples, 0.06%)</title><rect x="1035.8" y="1589" width="0.6" height="15.0" fill="rgb(242,101,6)" rx="2" ry="2" />
<text  x="1038.76" y="1599.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (2 samples, 0.06%)</title><rect x="1033.8" y="1493" width="0.6" height="15.0" fill="rgb(213,38,1)" rx="2" ry="2" />
<text  x="1036.77" y="1503.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.03%)</title><rect x="1059.6" y="1509" width="0.3" height="15.0" fill="rgb(225,26,32)" rx="2" ry="2" />
<text  x="1062.59" y="1519.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.03%)</title><rect x="1143.0" y="1301" width="0.3" height="15.0" fill="rgb(213,40,39)" rx="2" ry="2" />
<text  x="1146.00" y="1311.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.06%)</title><rect x="600.2" y="1445" width="0.6" height="15.0" fill="rgb(250,124,45)" rx="2" ry="2" />
<text  x="603.17" y="1455.5" ></text>
</g>
<g >
<title>__page_cache_alloc (1 samples, 0.03%)</title><rect x="43.8" y="1205" width="0.3" height="15.0" fill="rgb(252,68,1)" rx="2" ry="2" />
<text  x="46.76" y="1215.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="188.1" y="1413" width="0.3" height="15.0" fill="rgb(211,19,35)" rx="2" ry="2" />
<text  x="191.08" y="1423.5" ></text>
</g>
<g >
<title>kthread (3 samples, 0.08%)</title><rect x="1087.1" y="1589" width="1.0" height="15.0" fill="rgb(213,34,7)" rx="2" ry="2" />
<text  x="1090.06" y="1599.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.03%)</title><rect x="1086.1" y="1557" width="0.3" height="15.0" fill="rgb(233,130,26)" rx="2" ry="2" />
<text  x="1089.07" y="1567.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="432.4" y="1301" width="0.3" height="15.0" fill="rgb(254,176,36)" rx="2" ry="2" />
<text  x="435.35" y="1311.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.03%)</title><rect x="1034.1" y="1445" width="0.3" height="15.0" fill="rgb(228,63,36)" rx="2" ry="2" />
<text  x="1037.10" y="1455.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::de::Deserialize for dashmap::DashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.03%)</title><rect x="1048.0" y="1061" width="0.3" height="15.0" fill="rgb(224,109,37)" rx="2" ry="2" />
<text  x="1051.00" y="1071.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize (1 samples, 0.03%)</title><rect x="1048.0" y="869" width="0.3" height="15.0" fill="rgb(223,83,10)" rx="2" ry="2" />
<text  x="1051.00" y="879.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.03%)</title><rect x="1141.7" y="1397" width="0.3" height="15.0" fill="rgb(205,229,29)" rx="2" ry="2" />
<text  x="1144.67" y="1407.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (4 samples, 0.11%)</title><rect x="386.0" y="1317" width="1.3" height="15.0" fill="rgb(219,35,44)" rx="2" ry="2" />
<text  x="389.01" y="1327.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.06%)</title><rect x="1033.1" y="1397" width="0.7" height="15.0" fill="rgb(227,171,3)" rx="2" ry="2" />
<text  x="1036.11" y="1407.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (1 samples, 0.03%)</title><rect x="1047.3" y="1285" width="0.4" height="15.0" fill="rgb(246,13,54)" rx="2" ry="2" />
<text  x="1050.34" y="1295.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.45%)</title><rect x="594.5" y="1429" width="5.3" height="15.0" fill="rgb(237,98,14)" rx="2" ry="2" />
<text  x="597.54" y="1439.5" ></text>
</g>
<g >
<title>printf_builtin (1 samples, 0.03%)</title><rect x="10.3" y="1477" width="0.4" height="15.0" fill="rgb(229,7,23)" rx="2" ry="2" />
<text  x="13.33" y="1487.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.03%)</title><rect x="1047.7" y="1301" width="0.3" height="15.0" fill="rgb(210,16,24)" rx="2" ry="2" />
<text  x="1050.67" y="1311.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (1 samples, 0.03%)</title><rect x="1048.0" y="1461" width="0.3" height="15.0" fill="rgb(206,7,15)" rx="2" ry="2" />
<text  x="1051.00" y="1471.5" ></text>
</g>
<g >
<title>exc_page_fault (117 samples, 3.28%)</title><rect x="986.1" y="1573" width="38.7" height="15.0" fill="rgb(233,41,17)" rx="2" ry="2" />
<text  x="989.11" y="1583.5" >exc..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (1 samples, 0.03%)</title><rect x="617.4" y="1365" width="0.3" height="15.0" fill="rgb(221,192,22)" rx="2" ry="2" />
<text  x="620.38" y="1375.5" ></text>
</g>
<g >
<title>__munmap (33 samples, 0.93%)</title><rect x="188.7" y="1461" width="11.0" height="15.0" fill="rgb(253,221,26)" rx="2" ry="2" />
<text  x="191.74" y="1471.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.14%)</title><rect x="376.7" y="1365" width="1.7" height="15.0" fill="rgb(240,187,9)" rx="2" ry="2" />
<text  x="379.74" y="1375.5" ></text>
</g>
<g >
<title>page_remove_rmap (6 samples, 0.17%)</title><rect x="211.9" y="1205" width="2.0" height="15.0" fill="rgb(219,174,29)" rx="2" ry="2" />
<text  x="214.91" y="1215.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (1 samples, 0.03%)</title><rect x="1048.0" y="1189" width="0.3" height="15.0" fill="rgb(219,38,44)" rx="2" ry="2" />
<text  x="1051.00" y="1199.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (1 samples, 0.03%)</title><rect x="176.2" y="1573" width="0.3" height="15.0" fill="rgb(234,65,4)" rx="2" ry="2" />
<text  x="179.16" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (45 samples, 1.26%)</title><rect x="816.0" y="1397" width="14.9" height="15.0" fill="rgb(230,5,35)" rx="2" ry="2" />
<text  x="818.97" y="1407.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.34%)</title><rect x="739.5" y="1477" width="4.0" height="15.0" fill="rgb(236,199,13)" rx="2" ry="2" />
<text  x="742.51" y="1487.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (69 samples, 1.94%)</title><rect x="336.4" y="1429" width="22.8" height="15.0" fill="rgb(251,65,34)" rx="2" ry="2" />
<text  x="339.36" y="1439.5" >c..</text>
</g>
<g >
<title>do_mmap (1 samples, 0.03%)</title><rect x="200.3" y="1397" width="0.4" height="15.0" fill="rgb(242,4,20)" rx="2" ry="2" />
<text  x="203.32" y="1407.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.03%)</title><rect x="1034.1" y="1461" width="0.3" height="15.0" fill="rgb(217,214,50)" rx="2" ry="2" />
<text  x="1037.10" y="1471.5" ></text>
</g>
<g >
<title>ovl_write_iter (24 samples, 0.67%)</title><rect x="39.8" y="1365" width="7.9" height="15.0" fill="rgb(209,225,3)" rx="2" ry="2" />
<text  x="42.79" y="1375.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_irqsafe (2 samples, 0.06%)</title><rect x="39.8" y="1189" width="0.7" height="15.0" fill="rgb(221,96,17)" rx="2" ry="2" />
<text  x="42.79" y="1199.5" ></text>
</g>
<g >
<title>__delete_from_page_cache (1 samples, 0.03%)</title><rect x="1059.6" y="1317" width="0.3" height="15.0" fill="rgb(227,136,50)" rx="2" ry="2" />
<text  x="1062.59" y="1327.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (19 samples, 0.53%)</title><rect x="379.1" y="1397" width="6.2" height="15.0" fill="rgb(240,218,19)" rx="2" ry="2" />
<text  x="382.06" y="1407.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="618.0" y="1349" width="0.7" height="15.0" fill="rgb(253,24,17)" rx="2" ry="2" />
<text  x="621.04" y="1359.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.03%)</title><rect x="1181.7" y="1445" width="0.4" height="15.0" fill="rgb(208,120,16)" rx="2" ry="2" />
<text  x="1184.73" y="1455.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.03%)</title><rect x="839.8" y="1445" width="0.3" height="15.0" fill="rgb(226,211,2)" rx="2" ry="2" />
<text  x="842.81" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="200.3" y="1461" width="0.4" height="15.0" fill="rgb(218,202,51)" rx="2" ry="2" />
<text  x="203.32" y="1471.5" ></text>
</g>
<g >
<title>dispatcher (25 samples, 0.70%)</title><rect x="210.6" y="1509" width="8.3" height="15.0" fill="rgb(252,182,5)" rx="2" ry="2" />
<text  x="213.58" y="1519.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.03%)</title><rect x="1176.1" y="1445" width="0.3" height="15.0" fill="rgb(212,132,25)" rx="2" ry="2" />
<text  x="1179.10" y="1455.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.14%)</title><rect x="608.8" y="1365" width="1.6" height="15.0" fill="rgb(248,166,16)" rx="2" ry="2" />
<text  x="611.77" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.03%)</title><rect x="1047.7" y="981" width="0.3" height="15.0" fill="rgb(210,152,10)" rx="2" ry="2" />
<text  x="1050.67" y="991.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.03%)</title><rect x="1090.4" y="1301" width="0.3" height="15.0" fill="rgb(223,68,13)" rx="2" ry="2" />
<text  x="1093.37" y="1311.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.11%)</title><rect x="380.4" y="1365" width="1.3" height="15.0" fill="rgb(252,135,41)" rx="2" ry="2" />
<text  x="383.38" y="1375.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.06%)</title><rect x="10.0" y="1493" width="0.7" height="15.0" fill="rgb(229,19,12)" rx="2" ry="2" />
<text  x="13.00" y="1503.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (9 samples, 0.25%)</title><rect x="802.1" y="1397" width="3.0" height="15.0" fill="rgb(244,77,36)" rx="2" ry="2" />
<text  x="805.07" y="1407.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="378.7" y="1381" width="0.4" height="15.0" fill="rgb(208,120,37)" rx="2" ry="2" />
<text  x="381.73" y="1391.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="431.7" y="1205" width="0.3" height="15.0" fill="rgb(217,158,32)" rx="2" ry="2" />
<text  x="434.69" y="1215.5" ></text>
</g>
<g >
<title>ovl_override_creds (1 samples, 0.03%)</title><rect x="434.7" y="1349" width="0.3" height="15.0" fill="rgb(250,189,44)" rx="2" ry="2" />
<text  x="437.67" y="1359.5" ></text>
</g>
<g >
<title>dispatcher (3 samples, 0.08%)</title><rect x="60.3" y="1589" width="1.0" height="15.0" fill="rgb(225,66,15)" rx="2" ry="2" />
<text  x="63.31" y="1599.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (5 samples, 0.14%)</title><rect x="176.8" y="1573" width="1.7" height="15.0" fill="rgb(245,98,15)" rx="2" ry="2" />
<text  x="179.82" y="1583.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.03%)</title><rect x="1059.6" y="1461" width="0.3" height="15.0" fill="rgb(254,109,13)" rx="2" ry="2" />
<text  x="1062.59" y="1471.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (1 samples, 0.03%)</title><rect x="1048.0" y="645" width="0.3" height="15.0" fill="rgb(236,175,14)" rx="2" ry="2" />
<text  x="1051.00" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.17%)</title><rect x="47.7" y="1589" width="2.0" height="15.0" fill="rgb(221,69,1)" rx="2" ry="2" />
<text  x="50.73" y="1599.5" ></text>
</g>
<g >
<title>lind_read (1 samples, 0.03%)</title><rect x="1041.4" y="1589" width="0.3" height="15.0" fill="rgb(225,9,0)" rx="2" ry="2" />
<text  x="1044.38" y="1599.5" ></text>
</g>
<g >
<title>pmd_val (1 samples, 0.03%)</title><rect x="1023.2" y="1509" width="0.3" height="15.0" fill="rgb(236,39,35)" rx="2" ry="2" />
<text  x="1026.18" y="1519.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="291.3" y="1397" width="0.4" height="15.0" fill="rgb(248,110,20)" rx="2" ry="2" />
<text  x="294.35" y="1407.5" ></text>
</g>
<g >
<title>generic_permission (1 samples, 0.03%)</title><rect x="1048.0" y="53" width="0.3" height="15.0" fill="rgb(206,35,26)" rx="2" ry="2" />
<text  x="1051.00" y="63.5" ></text>
</g>
<g >
<title>ProcessInvalidJumpTargets (1 samples, 0.03%)</title><rect x="188.1" y="1477" width="0.3" height="15.0" fill="rgb(243,204,1)" rx="2" ry="2" />
<text  x="191.08" y="1487.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.34%)</title><rect x="606.5" y="1413" width="3.9" height="15.0" fill="rgb(238,82,26)" rx="2" ry="2" />
<text  x="609.45" y="1423.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.03%)</title><rect x="38.5" y="1429" width="0.3" height="15.0" fill="rgb(222,122,0)" rx="2" ry="2" />
<text  x="41.47" y="1439.5" ></text>
</g>
<g >
<title>__libc_start_main (6 samples, 0.17%)</title><rect x="1046.3" y="1589" width="2.0" height="15.0" fill="rgb(233,184,32)" rx="2" ry="2" />
<text  x="1049.35" y="1599.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.03%)</title><rect x="10.0" y="1429" width="0.3" height="15.0" fill="rgb(207,99,46)" rx="2" ry="2" />
<text  x="13.00" y="1439.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.34%)</title><rect x="676.0" y="1413" width="3.9" height="15.0" fill="rgb(223,75,14)" rx="2" ry="2" />
<text  x="678.96" y="1423.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (72 samples, 2.02%)</title><rect x="496.9" y="1429" width="23.8" height="15.0" fill="rgb(220,67,37)" rx="2" ry="2" />
<text  x="499.89" y="1439.5" >r..</text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="10.0" y="1445" width="0.3" height="15.0" fill="rgb(253,61,44)" rx="2" ry="2" />
<text  x="13.00" y="1455.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (2 samples, 0.06%)</title><rect x="1174.4" y="1413" width="0.7" height="15.0" fill="rgb(234,27,34)" rx="2" ry="2" />
<text  x="1177.44" y="1423.5" ></text>
</g>
<g >
<title>do_iter_read (3 samples, 0.08%)</title><rect x="431.4" y="1285" width="1.0" height="15.0" fill="rgb(242,70,43)" rx="2" ry="2" />
<text  x="434.36" y="1295.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (69 samples, 1.94%)</title><rect x="336.4" y="1445" width="22.8" height="15.0" fill="rgb(233,106,14)" rx="2" ry="2" />
<text  x="339.36" y="1455.5" >c..</text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.03%)</title><rect x="527.3" y="1541" width="0.4" height="15.0" fill="rgb(207,24,35)" rx="2" ry="2" />
<text  x="530.35" y="1551.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.03%)</title><rect x="1047.0" y="1205" width="0.3" height="15.0" fill="rgb(210,152,39)" rx="2" ry="2" />
<text  x="1050.01" y="1215.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (3 samples, 0.08%)</title><rect x="69.9" y="1589" width="1.0" height="15.0" fill="rgb(239,62,23)" rx="2" ry="2" />
<text  x="72.91" y="1599.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (21 samples, 0.59%)</title><rect x="676.0" y="1429" width="6.9" height="15.0" fill="rgb(229,141,50)" rx="2" ry="2" />
<text  x="678.96" y="1439.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.03%)</title><rect x="1188.3" y="1429" width="0.4" height="15.0" fill="rgb(207,154,7)" rx="2" ry="2" />
<text  x="1191.35" y="1439.5" ></text>
</g>
<g >
<title>mem_cgroup_css_rstat_flush (2 samples, 0.06%)</title><rect x="39.8" y="1157" width="0.7" height="15.0" fill="rgb(217,68,54)" rx="2" ry="2" />
<text  x="42.79" y="1167.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="997.0" y="1429" width="0.4" height="15.0" fill="rgb(249,132,40)" rx="2" ry="2" />
<text  x="1000.03" y="1439.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (1 samples, 0.03%)</title><rect x="44.4" y="1173" width="0.4" height="15.0" fill="rgb(238,61,42)" rx="2" ry="2" />
<text  x="47.42" y="1183.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (2 samples, 0.06%)</title><rect x="619.7" y="1509" width="0.7" height="15.0" fill="rgb(210,139,22)" rx="2" ry="2" />
<text  x="622.69" y="1519.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (91 samples, 2.55%)</title><rect x="491.3" y="1477" width="30.1" height="15.0" fill="rgb(207,40,26)" rx="2" ry="2" />
<text  x="494.27" y="1487.5" >ri..</text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="619.4" y="1397" width="0.3" height="15.0" fill="rgb(216,81,20)" rx="2" ry="2" />
<text  x="622.36" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.03%)</title><rect x="1048.0" y="165" width="0.3" height="15.0" fill="rgb(231,176,51)" rx="2" ry="2" />
<text  x="1051.00" y="175.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (1 samples, 0.03%)</title><rect x="1048.0" y="1173" width="0.3" height="15.0" fill="rgb(211,62,6)" rx="2" ry="2" />
<text  x="1051.00" y="1183.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.42%)</title><rect x="472.7" y="1429" width="5.0" height="15.0" fill="rgb(210,95,45)" rx="2" ry="2" />
<text  x="475.73" y="1439.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::cgroup2_quota (1 samples, 0.03%)</title><rect x="1048.0" y="341" width="0.3" height="15.0" fill="rgb(235,72,4)" rx="2" ry="2" />
<text  x="1051.00" y="351.5" ></text>
</g>
<g >
<title>start_kernel (169 samples, 4.74%)</title><rect x="1134.1" y="1557" width="55.9" height="15.0" fill="rgb(228,211,7)" rx="2" ry="2" />
<text  x="1137.06" y="1567.5" >start..</text>
</g>
<g >
<title>ext4_file_write_iter (6 samples, 0.17%)</title><rect x="47.7" y="1445" width="2.0" height="15.0" fill="rgb(218,226,2)" rx="2" ry="2" />
<text  x="50.73" y="1455.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.03%)</title><rect x="616.1" y="1381" width="0.3" height="15.0" fill="rgb(236,33,42)" rx="2" ry="2" />
<text  x="619.05" y="1391.5" ></text>
</g>
<g >
<title>&lt;std::sync::lazy_lock::LazyLock&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="634.6" y="1493" width="0.3" height="15.0" fill="rgb(206,117,33)" rx="2" ry="2" />
<text  x="637.59" y="1503.5" ></text>
</g>
<g >
<title>NaClThreadExit (1 samples, 0.03%)</title><rect x="199.7" y="1493" width="0.3" height="15.0" fill="rgb(216,22,32)" rx="2" ry="2" />
<text  x="202.66" y="1503.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (6 samples, 0.17%)</title><rect x="376.7" y="1413" width="2.0" height="15.0" fill="rgb(221,61,48)" rx="2" ry="2" />
<text  x="379.74" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (23 samples, 0.65%)</title><rect x="788.5" y="1445" width="7.6" height="15.0" fill="rgb(248,74,48)" rx="2" ry="2" />
<text  x="791.50" y="1455.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (24 samples, 0.67%)</title><rect x="39.8" y="1285" width="7.9" height="15.0" fill="rgb(206,211,23)" rx="2" ry="2" />
<text  x="42.79" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="1033.8" y="1557" width="0.6" height="15.0" fill="rgb(211,215,22)" rx="2" ry="2" />
<text  x="1036.77" y="1567.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (25 samples, 0.70%)</title><rect x="210.6" y="1381" width="8.3" height="15.0" fill="rgb(240,28,8)" rx="2" ry="2" />
<text  x="213.58" y="1391.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (34 samples, 0.95%)</title><rect x="413.8" y="1429" width="11.3" height="15.0" fill="rgb(233,62,4)" rx="2" ry="2" />
<text  x="416.81" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.06%)</title><rect x="10.0" y="1573" width="0.7" height="15.0" fill="rgb(252,119,45)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" ></text>
</g>
<g >
<title>poll_freewait (1 samples, 0.03%)</title><rect x="39.1" y="1477" width="0.4" height="15.0" fill="rgb(254,162,29)" rx="2" ry="2" />
<text  x="42.13" y="1487.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.03%)</title><rect x="188.4" y="1365" width="0.3" height="15.0" fill="rgb(235,43,51)" rx="2" ry="2" />
<text  x="191.41" y="1375.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (19 samples, 0.53%)</title><rect x="649.5" y="1461" width="6.3" height="15.0" fill="rgb(254,3,26)" rx="2" ry="2" />
<text  x="652.48" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.20%)</title><rect x="430.4" y="1413" width="2.3" height="15.0" fill="rgb(220,195,32)" rx="2" ry="2" />
<text  x="433.36" y="1423.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.11%)</title><rect x="610.4" y="1429" width="1.4" height="15.0" fill="rgb(253,144,31)" rx="2" ry="2" />
<text  x="613.43" y="1439.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.03%)</title><rect x="1059.6" y="1365" width="0.3" height="15.0" fill="rgb(216,85,32)" rx="2" ry="2" />
<text  x="1062.59" y="1375.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.03%)</title><rect x="1180.1" y="1397" width="0.3" height="15.0" fill="rgb(251,39,15)" rx="2" ry="2" />
<text  x="1183.07" y="1407.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (126 samples, 3.53%)</title><rect x="686.9" y="1477" width="41.7" height="15.0" fill="rgb(240,137,54)" rx="2" ry="2" />
<text  x="689.89" y="1487.5" >&lt;pa..</text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.03%)</title><rect x="1059.3" y="1477" width="0.3" height="15.0" fill="rgb(230,178,38)" rx="2" ry="2" />
<text  x="1062.26" y="1487.5" ></text>
</g>
<g >
<title>perf_tool__process_synth_event (1 samples, 0.03%)</title><rect x="39.5" y="1557" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="42.46" y="1567.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.03%)</title><rect x="1047.0" y="1253" width="0.3" height="15.0" fill="rgb(248,12,51)" rx="2" ry="2" />
<text  x="1050.01" y="1263.5" ></text>
</g>
<g >
<title>queue_work_on (1 samples, 0.03%)</title><rect x="10.3" y="1173" width="0.4" height="15.0" fill="rgb(229,126,16)" rx="2" ry="2" />
<text  x="13.33" y="1183.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.06%)</title><rect x="673.6" y="1333" width="0.7" height="15.0" fill="rgb(221,55,50)" rx="2" ry="2" />
<text  x="676.65" y="1343.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.03%)</title><rect x="1090.4" y="1317" width="0.3" height="15.0" fill="rgb(212,64,7)" rx="2" ry="2" />
<text  x="1093.37" y="1327.5" ></text>
</g>
<g >
<title>NaClApplyPatchToMemory (1 samples, 0.03%)</title><rect x="200.0" y="1477" width="0.3" height="15.0" fill="rgb(240,12,31)" rx="2" ry="2" />
<text  x="202.99" y="1487.5" ></text>
</g>
<g >
<title>NaClAppThreadLauncher (4 samples, 0.11%)</title><rect x="1045.0" y="1573" width="1.3" height="15.0" fill="rgb(218,97,23)" rx="2" ry="2" />
<text  x="1048.02" y="1583.5" ></text>
</g>
<g >
<title>rcu_core (2 samples, 0.06%)</title><rect x="1090.7" y="1413" width="0.7" height="15.0" fill="rgb(221,176,44)" rx="2" ry="2" />
<text  x="1093.70" y="1423.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (16 samples, 0.45%)</title><rect x="365.8" y="1445" width="5.3" height="15.0" fill="rgb(210,226,1)" rx="2" ry="2" />
<text  x="368.82" y="1455.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (16 samples, 0.45%)</title><rect x="365.8" y="1461" width="5.3" height="15.0" fill="rgb(243,26,44)" rx="2" ry="2" />
<text  x="368.82" y="1471.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (31 samples, 0.87%)</title><rect x="189.4" y="1349" width="10.3" height="15.0" fill="rgb(242,196,34)" rx="2" ry="2" />
<text  x="192.40" y="1359.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampoline (1 samples, 0.03%)</title><rect x="200.0" y="1509" width="0.3" height="15.0" fill="rgb(252,225,36)" rx="2" ry="2" />
<text  x="202.99" y="1519.5" ></text>
</g>
<g >
<title>do_iter_write (6 samples, 0.17%)</title><rect x="47.7" y="1477" width="2.0" height="15.0" fill="rgb(246,200,23)" rx="2" ry="2" />
<text  x="50.73" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.11%)</title><rect x="1058.6" y="1605" width="1.3" height="15.0" fill="rgb(229,224,50)" rx="2" ry="2" />
<text  x="1061.59" y="1615.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.03%)</title><rect x="1182.4" y="1429" width="0.3" height="15.0" fill="rgb(239,98,27)" rx="2" ry="2" />
<text  x="1185.39" y="1439.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="1047.7" y="1157" width="0.3" height="15.0" fill="rgb(219,189,0)" rx="2" ry="2" />
<text  x="1050.67" y="1167.5" ></text>
</g>
<g >
<title>__secure_computing (1 samples, 0.03%)</title><rect x="1086.4" y="1541" width="0.3" height="15.0" fill="rgb(233,101,21)" rx="2" ry="2" />
<text  x="1089.40" y="1551.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (49 samples, 1.37%)</title><rect x="814.7" y="1413" width="16.2" height="15.0" fill="rgb(220,196,52)" rx="2" ry="2" />
<text  x="817.65" y="1423.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (14 samples, 0.39%)</title><rect x="523.0" y="1557" width="4.7" height="15.0" fill="rgb(212,11,17)" rx="2" ry="2" />
<text  x="526.04" y="1567.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 2.24%)</title><rect x="11.0" y="1541" width="26.5" height="15.0" fill="rgb(223,108,25)" rx="2" ry="2" />
<text  x="13.99" y="1551.5" >p..</text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="371.1" y="1461" width="0.3" height="15.0" fill="rgb(239,136,24)" rx="2" ry="2" />
<text  x="374.12" y="1471.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.03%)</title><rect x="1090.7" y="1397" width="0.3" height="15.0" fill="rgb(235,224,2)" rx="2" ry="2" />
<text  x="1093.70" y="1407.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.34%)</title><rect x="676.0" y="1381" width="3.9" height="15.0" fill="rgb(219,224,29)" rx="2" ry="2" />
<text  x="678.96" y="1391.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;u64,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (16 samples, 0.45%)</title><rect x="582.0" y="1493" width="5.3" height="15.0" fill="rgb(215,2,48)" rx="2" ry="2" />
<text  x="584.96" y="1503.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.08%)</title><rect x="335.4" y="1493" width="1.0" height="15.0" fill="rgb(212,113,46)" rx="2" ry="2" />
<text  x="338.37" y="1503.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (7 samples, 0.20%)</title><rect x="67.6" y="1509" width="2.3" height="15.0" fill="rgb(219,140,38)" rx="2" ry="2" />
<text  x="70.59" y="1519.5" ></text>
</g>
<g >
<title>ovl_llseek (3 samples, 0.08%)</title><rect x="434.0" y="1365" width="1.0" height="15.0" fill="rgb(241,21,10)" rx="2" ry="2" />
<text  x="437.01" y="1375.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (5 samples, 0.14%)</title><rect x="78.5" y="1589" width="1.7" height="15.0" fill="rgb(244,43,45)" rx="2" ry="2" />
<text  x="81.52" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.14%)</title><rect x="37.8" y="1525" width="1.7" height="15.0" fill="rgb(226,152,43)" rx="2" ry="2" />
<text  x="40.80" y="1535.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (4 samples, 0.11%)</title><rect x="681.6" y="1413" width="1.3" height="15.0" fill="rgb(221,122,32)" rx="2" ry="2" />
<text  x="684.59" y="1423.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (65 samples, 1.82%)</title><rect x="16.0" y="1269" width="21.5" height="15.0" fill="rgb(251,7,54)" rx="2" ry="2" />
<text  x="18.96" y="1279.5" >i..</text>
</g>
<g >
<title>NaClSysWriteDecoder (2 samples, 0.06%)</title><rect x="81.5" y="1589" width="0.7" height="15.0" fill="rgb(233,215,38)" rx="2" ry="2" />
<text  x="84.50" y="1599.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (1 samples, 0.03%)</title><rect x="1047.0" y="1333" width="0.3" height="15.0" fill="rgb(225,40,6)" rx="2" ry="2" />
<text  x="1050.01" y="1343.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::is_initialized (1 samples, 0.03%)</title><rect x="634.6" y="1413" width="0.3" height="15.0" fill="rgb(232,57,42)" rx="2" ry="2" />
<text  x="637.59" y="1423.5" ></text>
</g>
<g >
<title>free_swap_cache (1 samples, 0.03%)</title><rect x="200.3" y="1317" width="0.4" height="15.0" fill="rgb(248,20,10)" rx="2" ry="2" />
<text  x="203.32" y="1327.5" ></text>
</g>
<g >
<title>path_openat (3 samples, 0.08%)</title><rect x="1085.1" y="1525" width="1.0" height="15.0" fill="rgb(211,206,39)" rx="2" ry="2" />
<text  x="1088.07" y="1535.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (26 samples, 0.73%)</title><rect x="200.7" y="1573" width="8.6" height="15.0" fill="rgb(225,141,14)" rx="2" ry="2" />
<text  x="203.65" y="1583.5" ></text>
</g>
<g >
<title>fdarray__poll (6 samples, 0.17%)</title><rect x="37.5" y="1573" width="2.0" height="15.0" fill="rgb(245,54,33)" rx="2" ry="2" />
<text  x="40.47" y="1583.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.03%)</title><rect x="199.7" y="1429" width="0.3" height="15.0" fill="rgb(227,190,54)" rx="2" ry="2" />
<text  x="202.66" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.17%)</title><rect x="433.3" y="1413" width="2.0" height="15.0" fill="rgb(227,160,38)" rx="2" ry="2" />
<text  x="436.34" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (2 samples, 0.06%)</title><rect x="1044.4" y="1589" width="0.6" height="15.0" fill="rgb(239,204,12)" rx="2" ry="2" />
<text  x="1047.36" y="1599.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;u64,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (15 samples, 0.42%)</title><rect x="280.8" y="1493" width="4.9" height="15.0" fill="rgb(233,49,1)" rx="2" ry="2" />
<text  x="283.75" y="1503.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (26 samples, 0.73%)</title><rect x="200.7" y="1525" width="8.6" height="15.0" fill="rgb(220,178,25)" rx="2" ry="2" />
<text  x="203.65" y="1535.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (2 samples, 0.06%)</title><rect x="1046.3" y="1493" width="0.7" height="15.0" fill="rgb(250,18,37)" rx="2" ry="2" />
<text  x="1049.35" y="1503.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (1 samples, 0.03%)</title><rect x="681.9" y="1317" width="0.4" height="15.0" fill="rgb(211,158,34)" rx="2" ry="2" />
<text  x="684.92" y="1327.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="199.7" y="1365" width="0.3" height="15.0" fill="rgb(234,220,23)" rx="2" ry="2" />
<text  x="202.66" y="1375.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="199.7" y="1349" width="0.3" height="15.0" fill="rgb(206,58,26)" rx="2" ry="2" />
<text  x="202.66" y="1359.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.03%)</title><rect x="188.4" y="1381" width="0.3" height="15.0" fill="rgb(234,177,13)" rx="2" ry="2" />
<text  x="191.41" y="1391.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (113 samples, 3.17%)</title><rect x="749.8" y="1477" width="37.4" height="15.0" fill="rgb(253,18,10)" rx="2" ry="2" />
<text  x="752.78" y="1487.5" >cor..</text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.03%)</title><rect x="1086.7" y="1557" width="0.4" height="15.0" fill="rgb(224,227,42)" rx="2" ry="2" />
<text  x="1089.73" y="1567.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (163 samples, 4.57%)</title><rect x="839.8" y="1477" width="54.0" height="15.0" fill="rgb(244,167,38)" rx="2" ry="2" />
<text  x="842.81" y="1487.5" >ringb..</text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.03%)</title><rect x="213.6" y="1189" width="0.3" height="15.0" fill="rgb(225,181,53)" rx="2" ry="2" />
<text  x="216.56" y="1199.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.03%)</title><rect x="1086.1" y="1541" width="0.3" height="15.0" fill="rgb(246,173,48)" rx="2" ry="2" />
<text  x="1089.07" y="1551.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.42%)</title><rect x="280.8" y="1477" width="4.9" height="15.0" fill="rgb(213,215,21)" rx="2" ry="2" />
<text  x="283.75" y="1487.5" ></text>
</g>
<g >
<title>release_pages (14 samples, 0.39%)</title><rect x="213.9" y="1173" width="4.6" height="15.0" fill="rgb(235,179,38)" rx="2" ry="2" />
<text  x="216.89" y="1183.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="217.5" y="1125" width="0.4" height="15.0" fill="rgb(228,200,33)" rx="2" ry="2" />
<text  x="220.53" y="1135.5" ></text>
</g>
<g >
<title>NaClSysFork (4 samples, 0.11%)</title><rect x="209.3" y="1557" width="1.3" height="15.0" fill="rgb(253,60,50)" rx="2" ry="2" />
<text  x="212.26" y="1567.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (1 samples, 0.03%)</title><rect x="1048.0" y="581" width="0.3" height="15.0" fill="rgb(248,95,38)" rx="2" ry="2" />
<text  x="1051.00" y="591.5" ></text>
</g>
<g >
<title>rmqueue (9 samples, 0.25%)</title><rect x="1011.9" y="1429" width="3.0" height="15.0" fill="rgb(216,118,5)" rx="2" ry="2" />
<text  x="1014.92" y="1439.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.06%)</title><rect x="305.2" y="1349" width="0.7" height="15.0" fill="rgb(215,33,10)" rx="2" ry="2" />
<text  x="308.25" y="1359.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (1 samples, 0.03%)</title><rect x="298.3" y="1365" width="0.3" height="15.0" fill="rgb(208,213,35)" rx="2" ry="2" />
<text  x="301.30" y="1375.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.03%)</title><rect x="1175.4" y="1445" width="0.4" height="15.0" fill="rgb(224,212,44)" rx="2" ry="2" />
<text  x="1178.44" y="1455.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.20%)</title><rect x="677.6" y="1365" width="2.3" height="15.0" fill="rgb(214,31,14)" rx="2" ry="2" />
<text  x="680.62" y="1375.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (1 samples, 0.03%)</title><rect x="1048.0" y="1157" width="0.3" height="15.0" fill="rgb(209,113,45)" rx="2" ry="2" />
<text  x="1051.00" y="1167.5" ></text>
</g>
<g >
<title>BitmapSetBit (3 samples, 0.08%)</title><rect x="186.4" y="1461" width="1.0" height="15.0" fill="rgb(226,155,2)" rx="2" ry="2" />
<text  x="189.42" y="1471.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.03%)</title><rect x="1183.0" y="1445" width="0.4" height="15.0" fill="rgb(212,214,2)" rx="2" ry="2" />
<text  x="1186.05" y="1455.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (15 samples, 0.42%)</title><rect x="472.7" y="1461" width="5.0" height="15.0" fill="rgb(223,96,49)" rx="2" ry="2" />
<text  x="475.73" y="1471.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow::{{closure}} (3 samples, 0.08%)</title><rect x="687.9" y="1429" width="1.0" height="15.0" fill="rgb(235,47,47)" rx="2" ry="2" />
<text  x="690.88" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (3 samples, 0.08%)</title><rect x="1058.9" y="1573" width="1.0" height="15.0" fill="rgb(239,169,28)" rx="2" ry="2" />
<text  x="1061.93" y="1583.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (9 samples, 0.25%)</title><rect x="802.1" y="1413" width="3.0" height="15.0" fill="rgb(214,3,3)" rx="2" ry="2" />
<text  x="805.07" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (113 samples, 3.17%)</title><rect x="749.8" y="1413" width="37.4" height="15.0" fill="rgb(214,52,49)" rx="2" ry="2" />
<text  x="752.78" y="1423.5" >cor..</text>
</g>
<g >
<title>NaClUserToSysStackAddr (9 samples, 0.25%)</title><rect x="130.8" y="1557" width="3.0" height="15.0" fill="rgb(251,15,8)" rx="2" ry="2" />
<text  x="133.81" y="1567.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.06%)</title><rect x="388.7" y="1381" width="0.6" height="15.0" fill="rgb(247,59,32)" rx="2" ry="2" />
<text  x="391.66" y="1391.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="1047.3" y="1157" width="0.4" height="15.0" fill="rgb(240,100,39)" rx="2" ry="2" />
<text  x="1050.34" y="1167.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u64 (1 samples, 0.03%)</title><rect x="1047.7" y="1285" width="0.3" height="15.0" fill="rgb(251,221,15)" rx="2" ry="2" />
<text  x="1050.67" y="1295.5" ></text>
</g>
<g >
<title>ksys_write (6 samples, 0.17%)</title><rect x="47.7" y="1557" width="2.0" height="15.0" fill="rgb(244,144,4)" rx="2" ry="2" />
<text  x="50.73" y="1567.5" ></text>
</g>
<g >
<title>std::sync::once::Once::is_completed (1 samples, 0.03%)</title><rect x="634.6" y="1397" width="0.3" height="15.0" fill="rgb(210,214,46)" rx="2" ry="2" />
<text  x="637.59" y="1407.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (23 samples, 0.65%)</title><rect x="538.6" y="1541" width="7.6" height="15.0" fill="rgb(225,24,39)" rx="2" ry="2" />
<text  x="541.60" y="1551.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (7 samples, 0.20%)</title><rect x="220.8" y="1541" width="2.4" height="15.0" fill="rgb(242,74,3)" rx="2" ry="2" />
<text  x="223.84" y="1551.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (19 samples, 0.53%)</title><rect x="993.4" y="1477" width="6.3" height="15.0" fill="rgb(239,79,10)" rx="2" ry="2" />
<text  x="996.39" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.03%)</title><rect x="10.7" y="1573" width="0.3" height="15.0" fill="rgb(234,57,52)" rx="2" ry="2" />
<text  x="13.66" y="1583.5" ></text>
</g>
<g >
<title>error_entry (4 samples, 0.11%)</title><rect x="1024.8" y="1589" width="1.4" height="15.0" fill="rgb(249,109,44)" rx="2" ry="2" />
<text  x="1027.83" y="1599.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (26 samples, 0.73%)</title><rect x="200.7" y="1541" width="8.6" height="15.0" fill="rgb(228,15,21)" rx="2" ry="2" />
<text  x="203.65" y="1551.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.03%)</title><rect x="1142.0" y="1349" width="0.3" height="15.0" fill="rgb(218,203,34)" rx="2" ry="2" />
<text  x="1145.01" y="1359.5" ></text>
</g>
<g >
<title>account_idle_ticks (1 samples, 0.03%)</title><rect x="1187.0" y="1461" width="0.4" height="15.0" fill="rgb(219,54,5)" rx="2" ry="2" />
<text  x="1190.02" y="1471.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (19 samples, 0.53%)</title><rect x="379.1" y="1381" width="6.2" height="15.0" fill="rgb(219,170,43)" rx="2" ry="2" />
<text  x="382.06" y="1391.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (2 samples, 0.06%)</title><rect x="44.1" y="1189" width="0.7" height="15.0" fill="rgb(223,31,45)" rx="2" ry="2" />
<text  x="47.09" y="1199.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (29 samples, 0.81%)</title><rect x="299.6" y="1477" width="9.6" height="15.0" fill="rgb(222,192,3)" rx="2" ry="2" />
<text  x="302.62" y="1487.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (98 samples, 2.75%)</title><rect x="587.3" y="1509" width="32.4" height="15.0" fill="rgb(246,172,44)" rx="2" ry="2" />
<text  x="590.26" y="1519.5" >da..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.14%)</title><rect x="387.7" y="1413" width="1.6" height="15.0" fill="rgb(240,153,17)" rx="2" ry="2" />
<text  x="390.67" y="1423.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (10 samples, 0.28%)</title><rect x="1182.7" y="1477" width="3.3" height="15.0" fill="rgb(217,107,52)" rx="2" ry="2" />
<text  x="1185.72" y="1487.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (1 samples, 0.03%)</title><rect x="63.6" y="1589" width="0.4" height="15.0" fill="rgb(240,140,49)" rx="2" ry="2" />
<text  x="66.62" y="1599.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (109 samples, 3.06%)</title><rect x="796.1" y="1445" width="36.1" height="15.0" fill="rgb(214,111,43)" rx="2" ry="2" />
<text  x="799.12" y="1455.5" >rin..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (1 samples, 0.03%)</title><rect x="1047.7" y="1317" width="0.3" height="15.0" fill="rgb(205,202,27)" rx="2" ry="2" />
<text  x="1050.67" y="1327.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.03%)</title><rect x="39.5" y="1381" width="0.3" height="15.0" fill="rgb(207,0,2)" rx="2" ry="2" />
<text  x="42.46" y="1391.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.06%)</title><rect x="611.1" y="1397" width="0.7" height="15.0" fill="rgb(216,139,20)" rx="2" ry="2" />
<text  x="614.09" y="1407.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.03%)</title><rect x="372.1" y="1381" width="0.3" height="15.0" fill="rgb(232,204,17)" rx="2" ry="2" />
<text  x="375.11" y="1391.5" ></text>
</g>
<g >
<title>file_tty_write.constprop.0 (1 samples, 0.03%)</title><rect x="10.3" y="1269" width="0.4" height="15.0" fill="rgb(239,140,3)" rx="2" ry="2" />
<text  x="13.33" y="1279.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (69 samples, 1.94%)</title><rect x="336.4" y="1461" width="22.8" height="15.0" fill="rgb(225,177,13)" rx="2" ry="2" />
<text  x="339.36" y="1471.5" >&lt;..</text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (16 samples, 0.45%)</title><rect x="582.0" y="1461" width="5.3" height="15.0" fill="rgb(242,181,21)" rx="2" ry="2" />
<text  x="584.96" y="1471.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.03%)</title><rect x="1188.7" y="1413" width="0.3" height="15.0" fill="rgb(225,94,28)" rx="2" ry="2" />
<text  x="1191.68" y="1423.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="1047.7" y="1109" width="0.3" height="15.0" fill="rgb(209,109,26)" rx="2" ry="2" />
<text  x="1050.67" y="1119.5" ></text>
</g>
<g >
<title>shrink_inactive_list (2 samples, 0.06%)</title><rect x="1087.4" y="1493" width="0.7" height="15.0" fill="rgb(206,45,22)" rx="2" ry="2" />
<text  x="1090.39" y="1503.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.22%)</title><rect x="303.6" y="1397" width="2.6" height="15.0" fill="rgb(233,4,11)" rx="2" ry="2" />
<text  x="306.59" y="1407.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.03%)</title><rect x="433.3" y="1349" width="0.4" height="15.0" fill="rgb(225,214,40)" rx="2" ry="2" />
<text  x="436.34" y="1359.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 0.03%)</title><rect x="10.0" y="1461" width="0.3" height="15.0" fill="rgb(241,41,46)" rx="2" ry="2" />
<text  x="13.00" y="1471.5" ></text>
</g>
<g >
<title>do_group_exit (3 samples, 0.08%)</title><rect x="1058.9" y="1557" width="1.0" height="15.0" fill="rgb(208,136,49)" rx="2" ry="2" />
<text  x="1061.93" y="1567.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.03%)</title><rect x="1033.4" y="1285" width="0.4" height="15.0" fill="rgb(254,61,41)" rx="2" ry="2" />
<text  x="1036.44" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (45 samples, 1.26%)</title><rect x="1030.1" y="1605" width="14.9" height="15.0" fill="rgb(241,11,27)" rx="2" ry="2" />
<text  x="1033.13" y="1615.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (73 samples, 2.05%)</title><rect x="389.7" y="1445" width="24.1" height="15.0" fill="rgb(207,169,42)" rx="2" ry="2" />
<text  x="392.65" y="1455.5" >c..</text>
</g>
<g >
<title>[libc.so.6] (4 samples, 0.11%)</title><rect x="1045.0" y="1589" width="1.3" height="15.0" fill="rgb(208,57,38)" rx="2" ry="2" />
<text  x="1048.02" y="1599.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (21 samples, 0.59%)</title><rect x="642.5" y="1493" width="7.0" height="15.0" fill="rgb(245,96,29)" rx="2" ry="2" />
<text  x="645.53" y="1503.5" ></text>
</g>
<g >
<title>smp_call_function_single (76 samples, 2.13%)</title><rect x="12.3" y="1381" width="25.2" height="15.0" fill="rgb(225,174,14)" rx="2" ry="2" />
<text  x="15.32" y="1391.5" >s..</text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 0.06%)</title><rect x="1046.3" y="1445" width="0.7" height="15.0" fill="rgb(233,215,15)" rx="2" ry="2" />
<text  x="1049.35" y="1455.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.06%)</title><rect x="188.7" y="1381" width="0.7" height="15.0" fill="rgb(217,19,5)" rx="2" ry="2" />
<text  x="191.74" y="1391.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.03%)</title><rect x="1041.1" y="1589" width="0.3" height="15.0" fill="rgb(205,48,39)" rx="2" ry="2" />
<text  x="1044.05" y="1599.5" ></text>
</g>
<g >
<title>__clone (4 samples, 0.11%)</title><rect x="1045.0" y="1605" width="1.3" height="15.0" fill="rgb(221,91,17)" rx="2" ry="2" />
<text  x="1048.02" y="1615.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (2 samples, 0.06%)</title><rect x="48.4" y="1333" width="0.7" height="15.0" fill="rgb(242,222,20)" rx="2" ry="2" />
<text  x="51.40" y="1343.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.03%)</title><rect x="189.1" y="1285" width="0.3" height="15.0" fill="rgb(216,14,23)" rx="2" ry="2" />
<text  x="192.07" y="1295.5" ></text>
</g>
<g >
<title>lru_cache_add (16 samples, 0.45%)</title><rect x="1015.2" y="1461" width="5.3" height="15.0" fill="rgb(235,192,33)" rx="2" ry="2" />
<text  x="1018.23" y="1471.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.03%)</title><rect x="1185.7" y="1413" width="0.3" height="15.0" fill="rgb(219,92,43)" rx="2" ry="2" />
<text  x="1188.70" y="1423.5" ></text>
</g>
<g >
<title>down_write_killable (26 samples, 0.73%)</title><rect x="200.7" y="1397" width="8.6" height="15.0" fill="rgb(240,86,4)" rx="2" ry="2" />
<text  x="203.65" y="1407.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (6 samples, 0.17%)</title><rect x="489.0" y="1429" width="1.9" height="15.0" fill="rgb(251,96,24)" rx="2" ry="2" />
<text  x="491.95" y="1439.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.03%)</title><rect x="308.2" y="1397" width="0.4" height="15.0" fill="rgb(209,183,46)" rx="2" ry="2" />
<text  x="311.23" y="1407.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.03%)</title><rect x="10.0" y="1349" width="0.3" height="15.0" fill="rgb(227,74,36)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (3 samples, 0.08%)</title><rect x="431.4" y="1253" width="1.0" height="15.0" fill="rgb(234,51,12)" rx="2" ry="2" />
<text  x="434.36" y="1263.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.45%)</title><rect x="594.5" y="1461" width="5.3" height="15.0" fill="rgb(214,162,29)" rx="2" ry="2" />
<text  x="597.54" y="1471.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.53%)</title><rect x="649.5" y="1477" width="6.3" height="15.0" fill="rgb(247,66,43)" rx="2" ry="2" />
<text  x="652.48" y="1487.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1 samples, 0.03%)</title><rect x="1043.7" y="1589" width="0.3" height="15.0" fill="rgb(212,43,53)" rx="2" ry="2" />
<text  x="1046.70" y="1599.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.06%)</title><rect x="618.7" y="1397" width="0.7" height="15.0" fill="rgb(232,41,5)" rx="2" ry="2" />
<text  x="621.70" y="1407.5" ></text>
</g>
<g >
<title>swapper (391 samples, 10.97%)</title><rect x="1060.6" y="1621" width="129.4" height="15.0" fill="rgb(249,211,43)" rx="2" ry="2" />
<text  x="1063.58" y="1631.5" >swapper</text>
</g>
<g >
<title>exit_mm (2 samples, 0.06%)</title><rect x="1058.9" y="1525" width="0.7" height="15.0" fill="rgb(252,106,34)" rx="2" ry="2" />
<text  x="1061.93" y="1535.5" ></text>
</g>
<g >
<title>lind_read (2 samples, 0.06%)</title><rect x="63.0" y="1589" width="0.6" height="15.0" fill="rgb(254,226,32)" rx="2" ry="2" />
<text  x="65.96" y="1599.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.11%)</title><rect x="300.6" y="1381" width="1.3" height="15.0" fill="rgb(212,95,38)" rx="2" ry="2" />
<text  x="303.61" y="1391.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (22 samples, 0.62%)</title><rect x="546.2" y="1541" width="7.3" height="15.0" fill="rgb(247,193,50)" rx="2" ry="2" />
<text  x="549.21" y="1551.5" ></text>
</g>
<g >
<title>generic_perform_write (6 samples, 0.17%)</title><rect x="47.7" y="1413" width="2.0" height="15.0" fill="rgb(235,61,47)" rx="2" ry="2" />
<text  x="50.73" y="1423.5" ></text>
</g>
<g >
<title>[[heap]] (1 samples, 0.03%)</title><rect x="50.1" y="1605" width="0.3" height="15.0" fill="rgb(252,229,27)" rx="2" ry="2" />
<text  x="53.05" y="1615.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.08%)</title><rect x="603.5" y="1365" width="1.0" height="15.0" fill="rgb(254,190,51)" rx="2" ry="2" />
<text  x="606.48" y="1375.5" ></text>
</g>
<g >
<title>dispatcher (979 samples, 27.46%)</title><rect x="569.7" y="1525" width="324.1" height="15.0" fill="rgb(209,201,53)" rx="2" ry="2" />
<text  x="572.71" y="1535.5" >dispatcher</text>
</g>
<g >
<title>vfs_iter_write (6 samples, 0.17%)</title><rect x="47.7" y="1493" width="2.0" height="15.0" fill="rgb(222,167,13)" rx="2" ry="2" />
<text  x="50.73" y="1503.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.03%)</title><rect x="10.7" y="1461" width="0.3" height="15.0" fill="rgb(205,43,30)" rx="2" ry="2" />
<text  x="13.66" y="1471.5" ></text>
</g>
<g >
<title>_perf_ioctl (79 samples, 2.22%)</title><rect x="11.3" y="1445" width="26.2" height="15.0" fill="rgb(226,82,23)" rx="2" ry="2" />
<text  x="14.32" y="1455.5" >_..</text>
</g>
<g >
<title>NaClPageAllocFlags (1 samples, 0.03%)</title><rect x="200.3" y="1525" width="0.4" height="15.0" fill="rgb(250,1,16)" rx="2" ry="2" />
<text  x="203.32" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.17%)</title><rect x="1085.1" y="1589" width="2.0" height="15.0" fill="rgb(211,59,2)" rx="2" ry="2" />
<text  x="1088.07" y="1599.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.03%)</title><rect x="1090.4" y="1349" width="0.3" height="15.0" fill="rgb(230,128,7)" rx="2" ry="2" />
<text  x="1093.37" y="1359.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (162 samples, 4.54%)</title><rect x="840.1" y="1461" width="53.7" height="15.0" fill="rgb(253,2,48)" rx="2" ry="2" />
<text  x="843.14" y="1471.5" >ringb..</text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.03%)</title><rect x="39.5" y="1317" width="0.3" height="15.0" fill="rgb(208,100,20)" rx="2" ry="2" />
<text  x="42.46" y="1327.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.03%)</title><rect x="39.5" y="1285" width="0.3" height="15.0" fill="rgb(215,120,39)" rx="2" ry="2" />
<text  x="42.46" y="1295.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (1 samples, 0.03%)</title><rect x="64.9" y="1525" width="0.4" height="15.0" fill="rgb(228,227,32)" rx="2" ry="2" />
<text  x="67.95" y="1535.5" ></text>
</g>
<g >
<title>__entry_text_start (1 samples, 0.03%)</title><rect x="430.0" y="1413" width="0.4" height="15.0" fill="rgb(215,11,47)" rx="2" ry="2" />
<text  x="433.03" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.20%)</title><rect x="430.4" y="1397" width="2.3" height="15.0" fill="rgb(249,67,45)" rx="2" ry="2" />
<text  x="433.36" y="1407.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt; (19 samples, 0.53%)</title><rect x="649.5" y="1493" width="6.3" height="15.0" fill="rgb(214,82,32)" rx="2" ry="2" />
<text  x="652.48" y="1503.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.50%)</title><rect x="329.4" y="1445" width="6.0" height="15.0" fill="rgb(221,127,6)" rx="2" ry="2" />
<text  x="332.41" y="1455.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (1 samples, 0.03%)</title><rect x="432.0" y="1189" width="0.4" height="15.0" fill="rgb(214,191,51)" rx="2" ry="2" />
<text  x="435.02" y="1199.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.08%)</title><rect x="1090.7" y="1445" width="1.0" height="15.0" fill="rgb(209,132,34)" rx="2" ry="2" />
<text  x="1093.70" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (23 samples, 0.65%)</title><rect x="788.5" y="1429" width="7.6" height="15.0" fill="rgb(228,129,33)" rx="2" ry="2" />
<text  x="791.50" y="1439.5" ></text>
</g>
<g >
<title>NaClStartThreadInApp (4 samples, 0.11%)</title><rect x="1045.0" y="1557" width="1.3" height="15.0" fill="rgb(232,163,42)" rx="2" ry="2" />
<text  x="1048.02" y="1567.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.03%)</title><rect x="15.3" y="1285" width="0.3" height="15.0" fill="rgb(240,184,51)" rx="2" ry="2" />
<text  x="18.30" y="1295.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (17 samples, 0.48%)</title><rect x="329.7" y="1397" width="5.7" height="15.0" fill="rgb(232,86,11)" rx="2" ry="2" />
<text  x="332.74" y="1407.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="308.9" y="1381" width="0.3" height="15.0" fill="rgb(208,10,50)" rx="2" ry="2" />
<text  x="311.89" y="1391.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="616.1" y="1397" width="0.3" height="15.0" fill="rgb(243,53,8)" rx="2" ry="2" />
<text  x="619.05" y="1407.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.08%)</title><rect x="599.8" y="1461" width="1.0" height="15.0" fill="rgb(248,56,51)" rx="2" ry="2" />
<text  x="602.83" y="1471.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.03%)</title><rect x="1181.1" y="1461" width="0.3" height="15.0" fill="rgb(242,118,18)" rx="2" ry="2" />
<text  x="1184.06" y="1471.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (2 samples, 0.06%)</title><rect x="1046.3" y="1525" width="0.7" height="15.0" fill="rgb(206,55,54)" rx="2" ry="2" />
<text  x="1049.35" y="1535.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.03%)</title><rect x="38.8" y="1445" width="0.3" height="15.0" fill="rgb(222,27,21)" rx="2" ry="2" />
<text  x="41.80" y="1455.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="1047.7" y="1045" width="0.3" height="15.0" fill="rgb(235,3,11)" rx="2" ry="2" />
<text  x="1050.67" y="1055.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.03%)</title><rect x="1048.0" y="741" width="0.3" height="15.0" fill="rgb(208,77,26)" rx="2" ry="2" />
<text  x="1051.00" y="751.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12 samples, 0.34%)</title><rect x="1137.7" y="1397" width="4.0" height="15.0" fill="rgb(244,81,40)" rx="2" ry="2" />
<text  x="1140.70" y="1407.5" ></text>
</g>
<g >
<title>revert_creds (1 samples, 0.03%)</title><rect x="435.0" y="1365" width="0.3" height="15.0" fill="rgb(239,195,2)" rx="2" ry="2" />
<text  x="438.00" y="1375.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.03%)</title><rect x="39.5" y="1349" width="0.3" height="15.0" fill="rgb(207,76,48)" rx="2" ry="2" />
<text  x="42.46" y="1359.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.03%)</title><rect x="1142.7" y="1317" width="0.3" height="15.0" fill="rgb(245,210,41)" rx="2" ry="2" />
<text  x="1145.67" y="1327.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="674.6" y="1317" width="0.4" height="15.0" fill="rgb(235,225,35)" rx="2" ry="2" />
<text  x="677.64" y="1327.5" ></text>
</g>
<g >
<title>mmap_region (25 samples, 0.70%)</title><rect x="210.6" y="1333" width="8.3" height="15.0" fill="rgb(212,20,38)" rx="2" ry="2" />
<text  x="213.58" y="1343.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (99 samples, 2.78%)</title><rect x="437.3" y="1413" width="32.8" height="15.0" fill="rgb(226,54,18)" rx="2" ry="2" />
<text  x="440.32" y="1423.5" >co..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.25%)</title><rect x="50.4" y="1589" width="3.0" height="15.0" fill="rgb(210,73,11)" rx="2" ry="2" />
<text  x="53.38" y="1599.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.11%)</title><rect x="677.6" y="1349" width="1.3" height="15.0" fill="rgb(224,162,18)" rx="2" ry="2" />
<text  x="680.62" y="1359.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (23 samples, 0.65%)</title><rect x="371.4" y="1461" width="7.7" height="15.0" fill="rgb(230,206,11)" rx="2" ry="2" />
<text  x="374.45" y="1471.5" ></text>
</g>
<g >
<title>fput_many (1 samples, 0.03%)</title><rect x="433.7" y="1365" width="0.3" height="15.0" fill="rgb(218,161,36)" rx="2" ry="2" />
<text  x="436.67" y="1375.5" ></text>
</g>
<g >
<title>_start (2 samples, 0.06%)</title><rect x="10.0" y="1605" width="0.7" height="15.0" fill="rgb(254,159,28)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.03%)</title><rect x="39.5" y="1365" width="0.3" height="15.0" fill="rgb(229,208,36)" rx="2" ry="2" />
<text  x="42.46" y="1375.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.03%)</title><rect x="1059.3" y="1429" width="0.3" height="15.0" fill="rgb(229,65,31)" rx="2" ry="2" />
<text  x="1062.26" y="1439.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (14 samples, 0.39%)</title><rect x="295.0" y="1445" width="4.6" height="15.0" fill="rgb(210,158,35)" rx="2" ry="2" />
<text  x="297.99" y="1455.5" ></text>
</g>
<g >
<title>lind_read (784 samples, 21.99%)</title><rect x="261.9" y="1541" width="259.5" height="15.0" fill="rgb(242,196,3)" rx="2" ry="2" />
<text  x="264.89" y="1551.5" >lind_read</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt; (19 samples, 0.53%)</title><rect x="359.2" y="1493" width="6.3" height="15.0" fill="rgb(224,176,52)" rx="2" ry="2" />
<text  x="362.20" y="1503.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.03%)</title><rect x="1033.1" y="1253" width="0.3" height="15.0" fill="rgb(251,65,45)" rx="2" ry="2" />
<text  x="1036.11" y="1263.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.03%)</title><rect x="378.4" y="1381" width="0.3" height="15.0" fill="rgb(216,26,28)" rx="2" ry="2" />
<text  x="381.40" y="1391.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (19 samples, 0.53%)</title><rect x="728.6" y="1493" width="6.3" height="15.0" fill="rgb(245,84,1)" rx="2" ry="2" />
<text  x="731.59" y="1503.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.03%)</title><rect x="1141.0" y="1221" width="0.3" height="15.0" fill="rgb(206,13,31)" rx="2" ry="2" />
<text  x="1144.01" y="1231.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="603.1" y="1365" width="0.4" height="15.0" fill="rgb(232,156,25)" rx="2" ry="2" />
<text  x="606.14" y="1375.5" ></text>
</g>
<g >
<title>llseek (8 samples, 0.22%)</title><rect x="432.7" y="1445" width="2.6" height="15.0" fill="rgb(230,171,48)" rx="2" ry="2" />
<text  x="435.68" y="1455.5" ></text>
</g>
<g >
<title>load_balance (2 samples, 0.06%)</title><rect x="1142.7" y="1333" width="0.6" height="15.0" fill="rgb(207,69,23)" rx="2" ry="2" />
<text  x="1145.67" y="1343.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (260 samples, 7.29%)</title><rect x="435.3" y="1493" width="86.1" height="15.0" fill="rgb(250,118,27)" rx="2" ry="2" />
<text  x="438.33" y="1503.5" >rustposix:..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.34%)</title><rect x="611.8" y="1381" width="3.9" height="15.0" fill="rgb(250,17,16)" rx="2" ry="2" />
<text  x="614.75" y="1391.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (3 samples, 0.08%)</title><rect x="212.2" y="1189" width="1.0" height="15.0" fill="rgb(233,72,37)" rx="2" ry="2" />
<text  x="215.24" y="1199.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.06%)</title><rect x="1059.9" y="1589" width="0.7" height="15.0" fill="rgb(213,149,1)" rx="2" ry="2" />
<text  x="1062.92" y="1599.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.48%)</title><rect x="329.7" y="1413" width="5.7" height="15.0" fill="rgb(245,66,3)" rx="2" ry="2" />
<text  x="332.74" y="1423.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.06%)</title><rect x="302.9" y="1413" width="0.7" height="15.0" fill="rgb(235,157,41)" rx="2" ry="2" />
<text  x="305.93" y="1423.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.03%)</title><rect x="1047.0" y="1349" width="0.3" height="15.0" fill="rgb(245,197,19)" rx="2" ry="2" />
<text  x="1050.01" y="1359.5" ></text>
</g>
<g >
<title>open_last_lookups (1 samples, 0.03%)</title><rect x="1085.7" y="1509" width="0.4" height="15.0" fill="rgb(253,210,15)" rx="2" ry="2" />
<text  x="1088.74" y="1519.5" ></text>
</g>
<g >
<title>walk_component (1 samples, 0.03%)</title><rect x="1085.4" y="1493" width="0.3" height="15.0" fill="rgb(226,204,7)" rx="2" ry="2" />
<text  x="1088.41" y="1503.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (1 samples, 0.03%)</title><rect x="48.1" y="1349" width="0.3" height="15.0" fill="rgb(251,48,16)" rx="2" ry="2" />
<text  x="51.06" y="1359.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (4 samples, 0.11%)</title><rect x="1001.3" y="1445" width="1.4" height="15.0" fill="rgb(242,121,10)" rx="2" ry="2" />
<text  x="1004.33" y="1455.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.06%)</title><rect x="614.4" y="1349" width="0.7" height="15.0" fill="rgb(214,52,17)" rx="2" ry="2" />
<text  x="617.40" y="1359.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (22 samples, 0.62%)</title><rect x="538.9" y="1525" width="7.3" height="15.0" fill="rgb(215,52,5)" rx="2" ry="2" />
<text  x="541.93" y="1535.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.08%)</title><rect x="607.1" y="1381" width="1.0" height="15.0" fill="rgb(238,117,30)" rx="2" ry="2" />
<text  x="610.12" y="1391.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (9 samples, 0.25%)</title><rect x="303.6" y="1429" width="3.0" height="15.0" fill="rgb(229,35,6)" rx="2" ry="2" />
<text  x="306.59" y="1439.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 0.06%)</title><rect x="1046.3" y="1429" width="0.7" height="15.0" fill="rgb(223,200,12)" rx="2" ry="2" />
<text  x="1049.35" y="1439.5" ></text>
</g>
<g >
<title>event_function (70 samples, 1.96%)</title><rect x="14.3" y="1333" width="23.2" height="15.0" fill="rgb(224,40,17)" rx="2" ry="2" />
<text  x="17.30" y="1343.5" >e..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.06%)</title><rect x="681.6" y="1365" width="0.7" height="15.0" fill="rgb(208,176,44)" rx="2" ry="2" />
<text  x="684.59" y="1375.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (17 samples, 0.48%)</title><rect x="588.2" y="1445" width="5.7" height="15.0" fill="rgb(223,63,4)" rx="2" ry="2" />
<text  x="591.25" y="1455.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.03%)</title><rect x="1044.0" y="1589" width="0.4" height="15.0" fill="rgb(247,137,51)" rx="2" ry="2" />
<text  x="1047.03" y="1599.5" ></text>
</g>
<g >
<title>kernfs_iop_permission (1 samples, 0.03%)</title><rect x="1085.1" y="1477" width="0.3" height="15.0" fill="rgb(249,120,19)" rx="2" ry="2" />
<text  x="1088.07" y="1487.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.03%)</title><rect x="1091.4" y="1253" width="0.3" height="15.0" fill="rgb(223,33,23)" rx="2" ry="2" />
<text  x="1094.36" y="1263.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3 samples, 0.08%)</title><rect x="1089.7" y="1445" width="1.0" height="15.0" fill="rgb(207,71,26)" rx="2" ry="2" />
<text  x="1092.71" y="1455.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.03%)</title><rect x="432.4" y="1317" width="0.3" height="15.0" fill="rgb(230,193,50)" rx="2" ry="2" />
<text  x="435.35" y="1327.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="304.9" y="1349" width="0.3" height="15.0" fill="rgb(238,58,9)" rx="2" ry="2" />
<text  x="307.92" y="1359.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="1134.1" y="1477" width="0.3" height="15.0" fill="rgb(243,207,26)" rx="2" ry="2" />
<text  x="1137.06" y="1487.5" ></text>
</g>
<g >
<title>Process0Operands (1 samples, 0.03%)</title><rect x="187.4" y="1477" width="0.3" height="15.0" fill="rgb(210,19,42)" rx="2" ry="2" />
<text  x="190.41" y="1487.5" ></text>
</g>
<g >
<title>get_page_from_freelist (37 samples, 1.04%)</title><rect x="1002.7" y="1445" width="12.2" height="15.0" fill="rgb(231,74,47)" rx="2" ry="2" />
<text  x="1005.66" y="1455.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="1033.8" y="1461" width="0.3" height="15.0" fill="rgb(243,214,14)" rx="2" ry="2" />
<text  x="1036.77" y="1471.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_locked (2 samples, 0.06%)</title><rect x="39.8" y="1173" width="0.7" height="15.0" fill="rgb(253,195,30)" rx="2" ry="2" />
<text  x="42.79" y="1183.5" ></text>
</g>
<g >
<title>new_sync_read (5 samples, 0.14%)</title><rect x="430.7" y="1333" width="1.7" height="15.0" fill="rgb(226,138,18)" rx="2" ry="2" />
<text  x="433.70" y="1343.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="1047.7" y="1173" width="0.3" height="15.0" fill="rgb(217,142,37)" rx="2" ry="2" />
<text  x="1050.67" y="1183.5" ></text>
</g>
<g >
<title>do_iter_write (24 samples, 0.67%)</title><rect x="39.8" y="1333" width="7.9" height="15.0" fill="rgb(223,142,13)" rx="2" ry="2" />
<text  x="42.79" y="1343.5" ></text>
</g>
<g >
<title>kswapd (3 samples, 0.08%)</title><rect x="1087.1" y="1573" width="1.0" height="15.0" fill="rgb(231,76,11)" rx="2" ry="2" />
<text  x="1090.06" y="1583.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.06%)</title><rect x="600.2" y="1429" width="0.6" height="15.0" fill="rgb(231,70,7)" rx="2" ry="2" />
<text  x="603.17" y="1439.5" ></text>
</g>
<g >
<title>_dl_catch_error (1 samples, 0.03%)</title><rect x="199.7" y="1413" width="0.3" height="15.0" fill="rgb(207,44,46)" rx="2" ry="2" />
<text  x="202.66" y="1423.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.17%)</title><rect x="383.0" y="1349" width="2.0" height="15.0" fill="rgb(232,78,31)" rx="2" ry="2" />
<text  x="386.03" y="1359.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (14 samples, 0.39%)</title><rect x="425.1" y="1493" width="4.6" height="15.0" fill="rgb(249,98,22)" rx="2" ry="2" />
<text  x="428.07" y="1503.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.45%)</title><rect x="365.8" y="1381" width="5.3" height="15.0" fill="rgb(209,169,42)" rx="2" ry="2" />
<text  x="368.82" y="1391.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="587.9" y="1429" width="0.3" height="15.0" fill="rgb(253,187,49)" rx="2" ry="2" />
<text  x="590.92" y="1439.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3 samples, 0.08%)</title><rect x="1089.7" y="1429" width="1.0" height="15.0" fill="rgb(244,26,9)" rx="2" ry="2" />
<text  x="1092.71" y="1439.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.34%)</title><rect x="290.4" y="1445" width="3.9" height="15.0" fill="rgb(236,118,48)" rx="2" ry="2" />
<text  x="293.35" y="1455.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="308.6" y="1365" width="0.3" height="15.0" fill="rgb(214,157,15)" rx="2" ry="2" />
<text  x="311.56" y="1375.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (1 samples, 0.03%)</title><rect x="1188.0" y="1429" width="0.3" height="15.0" fill="rgb(226,79,51)" rx="2" ry="2" />
<text  x="1191.01" y="1439.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (31 samples, 0.87%)</title><rect x="379.1" y="1445" width="10.2" height="15.0" fill="rgb(251,49,30)" rx="2" ry="2" />
<text  x="382.06" y="1455.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt; (16 samples, 0.45%)</title><rect x="582.0" y="1509" width="5.3" height="15.0" fill="rgb(233,188,31)" rx="2" ry="2" />
<text  x="584.96" y="1519.5" ></text>
</g>
<g >
<title>cpu_startup_entry (169 samples, 4.74%)</title><rect x="1134.1" y="1509" width="55.9" height="15.0" fill="rgb(215,189,4)" rx="2" ry="2" />
<text  x="1137.06" y="1519.5" >cpu_s..</text>
</g>
<g >
<title>dispatcher@plt (1 samples, 0.03%)</title><rect x="893.8" y="1525" width="0.3" height="15.0" fill="rgb(233,196,6)" rx="2" ry="2" />
<text  x="896.76" y="1535.5" ></text>
</g>
<g >
<title>[libc.so.6] (13 samples, 0.36%)</title><rect x="1036.7" y="1589" width="4.4" height="15.0" fill="rgb(236,198,18)" rx="2" ry="2" />
<text  x="1039.75" y="1599.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (17 samples, 0.48%)</title><rect x="588.2" y="1461" width="5.7" height="15.0" fill="rgb(246,39,47)" rx="2" ry="2" />
<text  x="591.25" y="1471.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="470.1" y="1477" width="0.3" height="15.0" fill="rgb(207,69,7)" rx="2" ry="2" />
<text  x="473.08" y="1487.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.03%)</title><rect x="307.9" y="1381" width="0.3" height="15.0" fill="rgb(238,190,22)" rx="2" ry="2" />
<text  x="310.90" y="1391.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (34 samples, 0.95%)</title><rect x="188.7" y="1509" width="11.3" height="15.0" fill="rgb(216,133,21)" rx="2" ry="2" />
<text  x="191.74" y="1519.5" ></text>
</g>
<g >
<title>up_read (2 samples, 0.06%)</title><rect x="1024.2" y="1557" width="0.6" height="15.0" fill="rgb(209,143,4)" rx="2" ry="2" />
<text  x="1027.17" y="1567.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (1 samples, 0.03%)</title><rect x="593.9" y="1477" width="0.3" height="15.0" fill="rgb(240,19,6)" rx="2" ry="2" />
<text  x="596.88" y="1487.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (17 samples, 0.48%)</title><rect x="576.3" y="1477" width="5.7" height="15.0" fill="rgb(227,206,8)" rx="2" ry="2" />
<text  x="579.33" y="1487.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="301.6" y="1365" width="0.3" height="15.0" fill="rgb(231,214,51)" rx="2" ry="2" />
<text  x="304.61" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.03%)</title><rect x="10.3" y="1429" width="0.4" height="15.0" fill="rgb(205,147,24)" rx="2" ry="2" />
<text  x="13.33" y="1439.5" ></text>
</g>
<g >
<title>update_process_times (8 samples, 0.22%)</title><rect x="1138.7" y="1317" width="2.6" height="15.0" fill="rgb(243,86,11)" rx="2" ry="2" />
<text  x="1141.70" y="1327.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="297.3" y="1349" width="0.3" height="15.0" fill="rgb(238,192,21)" rx="2" ry="2" />
<text  x="300.30" y="1359.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (5 samples, 0.14%)</title><rect x="1020.5" y="1477" width="1.7" height="15.0" fill="rgb(251,150,45)" rx="2" ry="2" />
<text  x="1023.53" y="1487.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="634.6" y="1365" width="0.3" height="15.0" fill="rgb(234,20,17)" rx="2" ry="2" />
<text  x="637.59" y="1375.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_inner (1 samples, 0.03%)</title><rect x="1048.0" y="1397" width="0.3" height="15.0" fill="rgb(232,208,42)" rx="2" ry="2" />
<text  x="1051.00" y="1407.5" ></text>
</g>
<g >
<title>remote_function (71 samples, 1.99%)</title><rect x="14.0" y="1349" width="23.5" height="15.0" fill="rgb(232,11,13)" rx="2" ry="2" />
<text  x="16.97" y="1359.5" >r..</text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.03%)</title><rect x="1090.4" y="1381" width="0.3" height="15.0" fill="rgb(235,178,1)" rx="2" ry="2" />
<text  x="1093.37" y="1391.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="433.3" y="1365" width="0.4" height="15.0" fill="rgb(246,196,22)" rx="2" ry="2" />
<text  x="436.34" y="1375.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (31 samples, 0.87%)</title><rect x="379.1" y="1461" width="10.2" height="15.0" fill="rgb(226,225,11)" rx="2" ry="2" />
<text  x="382.06" y="1471.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (24 samples, 0.67%)</title><rect x="39.8" y="1317" width="7.9" height="15.0" fill="rgb(254,85,29)" rx="2" ry="2" />
<text  x="42.79" y="1327.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.48%)</title><rect x="576.3" y="1493" width="5.7" height="15.0" fill="rgb(250,10,32)" rx="2" ry="2" />
<text  x="579.33" y="1503.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.03%)</title><rect x="1180.1" y="1413" width="0.3" height="15.0" fill="rgb(216,186,45)" rx="2" ry="2" />
<text  x="1183.07" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.06%)</title><rect x="496.2" y="1413" width="0.7" height="15.0" fill="rgb(206,164,41)" rx="2" ry="2" />
<text  x="499.23" y="1423.5" ></text>
</g>
<g >
<title>__seccomp_filter (1 samples, 0.03%)</title><rect x="1086.4" y="1525" width="0.3" height="15.0" fill="rgb(218,151,24)" rx="2" ry="2" />
<text  x="1089.40" y="1535.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (7 samples, 0.20%)</title><rect x="67.6" y="1541" width="2.3" height="15.0" fill="rgb(235,91,18)" rx="2" ry="2" />
<text  x="70.59" y="1551.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (7 samples, 0.20%)</title><rect x="67.6" y="1573" width="2.3" height="15.0" fill="rgb(230,51,25)" rx="2" ry="2" />
<text  x="70.59" y="1583.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (2 samples, 0.06%)</title><rect x="1046.3" y="1509" width="0.7" height="15.0" fill="rgb(213,184,8)" rx="2" ry="2" />
<text  x="1049.35" y="1519.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.08%)</title><rect x="669.7" y="1381" width="1.0" height="15.0" fill="rgb(218,18,48)" rx="2" ry="2" />
<text  x="672.67" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="1033.8" y="1541" width="0.6" height="15.0" fill="rgb(251,95,11)" rx="2" ry="2" />
<text  x="1036.77" y="1551.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="617.7" y="1381" width="0.3" height="15.0" fill="rgb(220,28,1)" rx="2" ry="2" />
<text  x="620.71" y="1391.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u8 (1 samples, 0.03%)</title><rect x="1047.3" y="1253" width="0.4" height="15.0" fill="rgb(222,111,13)" rx="2" ry="2" />
<text  x="1050.34" y="1263.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.03%)</title><rect x="1030.1" y="1589" width="0.4" height="15.0" fill="rgb(235,64,2)" rx="2" ry="2" />
<text  x="1033.13" y="1599.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.06%)</title><rect x="607.4" y="1365" width="0.7" height="15.0" fill="rgb(251,173,45)" rx="2" ry="2" />
<text  x="610.45" y="1375.5" ></text>
</g>
<g >
<title>perf_event_task_tick (4 samples, 0.11%)</title><rect x="1140.0" y="1285" width="1.3" height="15.0" fill="rgb(217,142,35)" rx="2" ry="2" />
<text  x="1143.02" y="1295.5" ></text>
</g>
<g >
<title>charge_memcg (16 samples, 0.45%)</title><rect x="993.4" y="1461" width="5.3" height="15.0" fill="rgb(219,66,21)" rx="2" ry="2" />
<text  x="996.39" y="1471.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_enum_map::{{closure}} (1 samples, 0.03%)</title><rect x="1048.0" y="805" width="0.3" height="15.0" fill="rgb(244,178,41)" rx="2" ry="2" />
<text  x="1051.00" y="815.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (118 samples, 3.31%)</title><rect x="985.8" y="1589" width="39.0" height="15.0" fill="rgb(237,225,1)" rx="2" ry="2" />
<text  x="988.78" y="1599.5" >asm..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1048.0" y="181" width="0.3" height="15.0" fill="rgb(220,111,35)" rx="2" ry="2" />
<text  x="1051.00" y="191.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (2 samples, 0.06%)</title><rect x="1047.3" y="1333" width="0.7" height="15.0" fill="rgb(227,224,30)" rx="2" ry="2" />
<text  x="1050.34" y="1343.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="615.4" y="1349" width="0.3" height="15.0" fill="rgb(244,194,36)" rx="2" ry="2" />
<text  x="618.39" y="1359.5" ></text>
</g>
<g >
<title>get_scan_count (1 samples, 0.03%)</title><rect x="1087.1" y="1493" width="0.3" height="15.0" fill="rgb(218,134,54)" rx="2" ry="2" />
<text  x="1090.06" y="1503.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (72 samples, 2.02%)</title><rect x="365.5" y="1477" width="23.8" height="15.0" fill="rgb(212,224,52)" rx="2" ry="2" />
<text  x="368.49" y="1487.5" >&lt;..</text>
</g>
<g >
<title>lindrustfinalize (3 samples, 0.08%)</title><rect x="1047.0" y="1525" width="1.0" height="15.0" fill="rgb(219,198,25)" rx="2" ry="2" />
<text  x="1050.01" y="1535.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.17%)</title><rect x="385.3" y="1349" width="2.0" height="15.0" fill="rgb(244,64,12)" rx="2" ry="2" />
<text  x="388.35" y="1359.5" ></text>
</g>
<g >
<title>NaClValidateCode (27 samples, 0.76%)</title><rect x="179.8" y="1525" width="8.9" height="15.0" fill="rgb(226,86,45)" rx="2" ry="2" />
<text  x="182.80" y="1535.5" ></text>
</g>
<g >
<title>native_write_msr (65 samples, 1.82%)</title><rect x="16.0" y="1253" width="21.5" height="15.0" fill="rgb(252,123,24)" rx="2" ry="2" />
<text  x="18.96" y="1263.5" >n..</text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (16 samples, 0.45%)</title><rect x="582.0" y="1429" width="5.3" height="15.0" fill="rgb(211,155,53)" rx="2" ry="2" />
<text  x="584.96" y="1439.5" ></text>
</g>
<g >
<title>NaClLoadTrampoline (1 samples, 0.03%)</title><rect x="200.0" y="1525" width="0.3" height="15.0" fill="rgb(211,55,17)" rx="2" ry="2" />
<text  x="202.99" y="1535.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (1 samples, 0.03%)</title><rect x="1048.0" y="613" width="0.3" height="15.0" fill="rgb(245,130,42)" rx="2" ry="2" />
<text  x="1051.00" y="623.5" ></text>
</g>
<g >
<title>generic_file_read_iter (3 samples, 0.08%)</title><rect x="431.4" y="1237" width="1.0" height="15.0" fill="rgb(231,113,19)" rx="2" ry="2" />
<text  x="434.36" y="1247.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (1 samples, 0.03%)</title><rect x="1023.5" y="1525" width="0.3" height="15.0" fill="rgb(235,155,0)" rx="2" ry="2" />
<text  x="1026.51" y="1535.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (2 samples, 0.06%)</title><rect x="47.1" y="1141" width="0.6" height="15.0" fill="rgb(232,22,50)" rx="2" ry="2" />
<text  x="50.07" y="1151.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="1179.4" y="1397" width="0.3" height="15.0" fill="rgb(253,192,33)" rx="2" ry="2" />
<text  x="1182.41" y="1407.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.03%)</title><rect x="1048.0" y="597" width="0.3" height="15.0" fill="rgb(232,142,49)" rx="2" ry="2" />
<text  x="1051.00" y="607.5" ></text>
</g>
<g >
<title>_IO_do_write (1 samples, 0.03%)</title><rect x="10.3" y="1445" width="0.4" height="15.0" fill="rgb(246,16,35)" rx="2" ry="2" />
<text  x="13.33" y="1455.5" ></text>
</g>
<g >
<title>NaClPageAllocInternalFlags (1 samples, 0.03%)</title><rect x="200.3" y="1509" width="0.4" height="15.0" fill="rgb(221,169,32)" rx="2" ry="2" />
<text  x="203.32" y="1519.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="617.7" y="1365" width="0.3" height="15.0" fill="rgb(241,27,8)" rx="2" ry="2" />
<text  x="620.71" y="1375.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_enum_map (1 samples, 0.03%)</title><rect x="1048.0" y="837" width="0.3" height="15.0" fill="rgb(213,125,34)" rx="2" ry="2" />
<text  x="1051.00" y="847.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.03%)</title><rect x="1048.0" y="549" width="0.3" height="15.0" fill="rgb(249,30,4)" rx="2" ry="2" />
<text  x="1051.00" y="559.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.03%)</title><rect x="1089.4" y="1477" width="0.3" height="15.0" fill="rgb(237,208,25)" rx="2" ry="2" />
<text  x="1092.38" y="1487.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.03%)</title><rect x="43.8" y="1141" width="0.3" height="15.0" fill="rgb(237,112,5)" rx="2" ry="2" />
<text  x="46.76" y="1151.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (30 samples, 0.84%)</title><rect x="120.9" y="1557" width="9.9" height="15.0" fill="rgb(212,123,41)" rx="2" ry="2" />
<text  x="123.88" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (2 samples, 0.06%)</title><rect x="1033.8" y="1525" width="0.6" height="15.0" fill="rgb(243,41,50)" rx="2" ry="2" />
<text  x="1036.77" y="1535.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (31 samples, 0.87%)</title><rect x="189.4" y="1365" width="10.3" height="15.0" fill="rgb(237,154,30)" rx="2" ry="2" />
<text  x="192.40" y="1375.5" ></text>
</g>
<g >
<title>generic_perform_write (24 samples, 0.67%)</title><rect x="39.8" y="1269" width="7.9" height="15.0" fill="rgb(216,211,37)" rx="2" ry="2" />
<text  x="42.79" y="1279.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.06%)</title><rect x="1033.1" y="1349" width="0.7" height="15.0" fill="rgb(251,103,15)" rx="2" ry="2" />
<text  x="1036.11" y="1359.5" ></text>
</g>
<g >
<title>blkcg_rstat_flush (1 samples, 0.03%)</title><rect x="39.5" y="1173" width="0.3" height="15.0" fill="rgb(239,107,26)" rx="2" ry="2" />
<text  x="42.46" y="1183.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (4 samples, 0.11%)</title><rect x="808.7" y="1429" width="1.3" height="15.0" fill="rgb(233,188,24)" rx="2" ry="2" />
<text  x="811.69" y="1439.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.03%)</title><rect x="1178.7" y="1429" width="0.4" height="15.0" fill="rgb(251,39,39)" rx="2" ry="2" />
<text  x="1181.75" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (3 samples, 0.08%)</title><rect x="831.2" y="1413" width="1.0" height="15.0" fill="rgb(246,49,16)" rx="2" ry="2" />
<text  x="834.20" y="1423.5" ></text>
</g>
<g >
<title>ksys_lseek (6 samples, 0.17%)</title><rect x="433.3" y="1381" width="2.0" height="15.0" fill="rgb(230,85,13)" rx="2" ry="2" />
<text  x="436.34" y="1391.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (24 samples, 0.67%)</title><rect x="1136.7" y="1429" width="8.0" height="15.0" fill="rgb(237,16,54)" rx="2" ry="2" />
<text  x="1139.71" y="1439.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.03%)</title><rect x="1188.7" y="1381" width="0.3" height="15.0" fill="rgb(245,131,49)" rx="2" ry="2" />
<text  x="1191.68" y="1391.5" ></text>
</g>
<g >
<title>clear_page_erms (24 samples, 0.67%)</title><rect x="1004.0" y="1429" width="7.9" height="15.0" fill="rgb(242,24,48)" rx="2" ry="2" />
<text  x="1006.98" y="1439.5" ></text>
</g>
<g >
<title>__mem_cgroup_flush_stats (2 samples, 0.06%)</title><rect x="39.8" y="1205" width="0.7" height="15.0" fill="rgb(221,27,27)" rx="2" ry="2" />
<text  x="42.79" y="1215.5" ></text>
</g>
<g >
<title>do_user_addr_fault (113 samples, 3.17%)</title><rect x="986.4" y="1557" width="37.4" height="15.0" fill="rgb(218,5,38)" rx="2" ry="2" />
<text  x="989.44" y="1567.5" >do_..</text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="215.5" y="1157" width="0.4" height="15.0" fill="rgb(211,211,0)" rx="2" ry="2" />
<text  x="218.55" y="1167.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="1047.3" y="1173" width="0.4" height="15.0" fill="rgb(242,109,14)" rx="2" ry="2" />
<text  x="1050.34" y="1183.5" ></text>
</g>
<g >
<title>pty_write (1 samples, 0.03%)</title><rect x="10.3" y="1205" width="0.4" height="15.0" fill="rgb(245,80,29)" rx="2" ry="2" />
<text  x="13.33" y="1215.5" ></text>
</g>
<g >
<title>balance_dirty_pages (1 samples, 0.03%)</title><rect x="39.5" y="1253" width="0.3" height="15.0" fill="rgb(245,28,35)" rx="2" ry="2" />
<text  x="42.46" y="1263.5" ></text>
</g>
<g >
<title>serde_cbor::de::from_slice (1 samples, 0.03%)</title><rect x="1048.0" y="1253" width="0.3" height="15.0" fill="rgb(247,113,20)" rx="2" ry="2" />
<text  x="1051.00" y="1263.5" ></text>
</g>
<g >
<title>down_write_killable (31 samples, 0.87%)</title><rect x="189.4" y="1381" width="10.3" height="15.0" fill="rgb(231,75,2)" rx="2" ry="2" />
<text  x="192.40" y="1391.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.03%)</title><rect x="999.7" y="1397" width="0.3" height="15.0" fill="rgb(244,225,53)" rx="2" ry="2" />
<text  x="1002.68" y="1407.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.06%)</title><rect x="380.7" y="1349" width="0.7" height="15.0" fill="rgb(209,131,36)" rx="2" ry="2" />
<text  x="383.72" y="1359.5" ></text>
</g>
<g >
<title>__es_insert_extent (1 samples, 0.03%)</title><rect x="43.1" y="1173" width="0.3" height="15.0" fill="rgb(239,155,48)" rx="2" ry="2" />
<text  x="46.10" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.03%)</title><rect x="587.9" y="1413" width="0.3" height="15.0" fill="rgb(254,176,53)" rx="2" ry="2" />
<text  x="590.92" y="1423.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.03%)</title><rect x="1048.0" y="565" width="0.3" height="15.0" fill="rgb(228,111,18)" rx="2" ry="2" />
<text  x="1051.00" y="575.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (16 samples, 0.45%)</title><rect x="220.2" y="1557" width="5.3" height="15.0" fill="rgb(237,185,27)" rx="2" ry="2" />
<text  x="223.18" y="1567.5" ></text>
</g>
<g >
<title>NaClSysExit (26 samples, 0.73%)</title><rect x="200.7" y="1557" width="8.6" height="15.0" fill="rgb(254,98,11)" rx="2" ry="2" />
<text  x="203.65" y="1567.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (11 samples, 0.31%)</title><rect x="286.4" y="1477" width="3.6" height="15.0" fill="rgb(250,17,9)" rx="2" ry="2" />
<text  x="289.38" y="1487.5" ></text>
</g>
<g >
<title>rebalance_domains (3 samples, 0.08%)</title><rect x="1142.3" y="1349" width="1.0" height="15.0" fill="rgb(245,101,42)" rx="2" ry="2" />
<text  x="1145.34" y="1359.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="1047.7" y="1237" width="0.3" height="15.0" fill="rgb(230,224,25)" rx="2" ry="2" />
<text  x="1050.67" y="1247.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (24 samples, 0.67%)</title><rect x="555.8" y="1541" width="8.0" height="15.0" fill="rgb(206,141,22)" rx="2" ry="2" />
<text  x="558.81" y="1551.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (7 samples, 0.20%)</title><rect x="67.6" y="1525" width="2.3" height="15.0" fill="rgb(207,6,49)" rx="2" ry="2" />
<text  x="70.59" y="1535.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::guard (1 samples, 0.03%)</title><rect x="477.7" y="1461" width="0.3" height="15.0" fill="rgb(251,45,21)" rx="2" ry="2" />
<text  x="480.70" y="1471.5" ></text>
</g>
<g >
<title>__free_one_page (1 samples, 0.03%)</title><rect x="1058.9" y="1381" width="0.4" height="15.0" fill="rgb(253,119,29)" rx="2" ry="2" />
<text  x="1061.93" y="1391.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.90%)</title><rect x="317.8" y="1493" width="10.6" height="15.0" fill="rgb(214,122,14)" rx="2" ry="2" />
<text  x="320.83" y="1503.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (12 samples, 0.34%)</title><rect x="611.8" y="1429" width="3.9" height="15.0" fill="rgb(242,97,11)" rx="2" ry="2" />
<text  x="614.75" y="1439.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (1 samples, 0.03%)</title><rect x="1086.4" y="1557" width="0.3" height="15.0" fill="rgb(215,31,18)" rx="2" ry="2" />
<text  x="1089.40" y="1567.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (25 samples, 0.70%)</title><rect x="787.8" y="1477" width="8.3" height="15.0" fill="rgb(241,137,38)" rx="2" ry="2" />
<text  x="790.84" y="1487.5" ></text>
</g>
<g >
<title>event_function_call (77 samples, 2.16%)</title><rect x="12.0" y="1397" width="25.5" height="15.0" fill="rgb(250,176,40)" rx="2" ry="2" />
<text  x="14.99" y="1407.5" >e..</text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (1 samples, 0.03%)</title><rect x="1048.0" y="485" width="0.3" height="15.0" fill="rgb(215,3,7)" rx="2" ry="2" />
<text  x="1051.00" y="495.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.03%)</title><rect x="1059.6" y="1397" width="0.3" height="15.0" fill="rgb(233,171,51)" rx="2" ry="2" />
<text  x="1062.59" y="1407.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.08%)</title><rect x="1047.0" y="1397" width="1.0" height="15.0" fill="rgb(208,8,37)" rx="2" ry="2" />
<text  x="1050.01" y="1407.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (5 samples, 0.14%)</title><rect x="1179.1" y="1429" width="1.6" height="15.0" fill="rgb(212,75,51)" rx="2" ry="2" />
<text  x="1182.08" y="1439.5" ></text>
</g>
<g >
<title>do_filp_open (3 samples, 0.08%)</title><rect x="1085.1" y="1541" width="1.0" height="15.0" fill="rgb(238,30,10)" rx="2" ry="2" />
<text  x="1088.07" y="1551.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.31%)</title><rect x="381.7" y="1365" width="3.6" height="15.0" fill="rgb(242,86,1)" rx="2" ry="2" />
<text  x="384.71" y="1375.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.03%)</title><rect x="1048.0" y="1205" width="0.3" height="15.0" fill="rgb(233,187,22)" rx="2" ry="2" />
<text  x="1051.00" y="1215.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (3 samples, 0.08%)</title><rect x="668.4" y="1461" width="0.9" height="15.0" fill="rgb(254,71,30)" rx="2" ry="2" />
<text  x="671.35" y="1471.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.03%)</title><rect x="39.5" y="1573" width="0.3" height="15.0" fill="rgb(247,121,4)" rx="2" ry="2" />
<text  x="42.46" y="1583.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="1047.7" y="1189" width="0.3" height="15.0" fill="rgb(219,140,10)" rx="2" ry="2" />
<text  x="1050.67" y="1199.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (1 samples, 0.03%)</title><rect x="55.7" y="1589" width="0.3" height="15.0" fill="rgb(221,199,41)" rx="2" ry="2" />
<text  x="58.68" y="1599.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (2 samples, 0.06%)</title><rect x="46.1" y="1173" width="0.6" height="15.0" fill="rgb(239,44,17)" rx="2" ry="2" />
<text  x="49.08" y="1183.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.03%)</title><rect x="1091.4" y="1413" width="0.3" height="15.0" fill="rgb(211,228,14)" rx="2" ry="2" />
<text  x="1094.36" y="1423.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.34%)</title><rect x="615.7" y="1413" width="4.0" height="15.0" fill="rgb(245,154,34)" rx="2" ry="2" />
<text  x="618.72" y="1423.5" ></text>
</g>
<g >
<title>[sel_ldr] (2,469 samples, 69.26%)</title><rect x="76.9" y="1605" width="817.2" height="15.0" fill="rgb(246,139,25)" rx="2" ry="2" />
<text  x="79.86" y="1615.5" >[sel_ldr]</text>
</g>
<g >
<title>&lt;std::sync::lazy_lock::LazyLock&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="1048.0" y="1493" width="0.3" height="15.0" fill="rgb(217,70,34)" rx="2" ry="2" />
<text  x="1051.00" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="199.7" y="1317" width="0.3" height="15.0" fill="rgb(207,193,27)" rx="2" ry="2" />
<text  x="202.66" y="1327.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (3 samples, 0.08%)</title><rect x="1047.0" y="1493" width="1.0" height="15.0" fill="rgb(232,5,41)" rx="2" ry="2" />
<text  x="1050.01" y="1503.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.03%)</title><rect x="1134.4" y="1461" width="0.3" height="15.0" fill="rgb(227,177,21)" rx="2" ry="2" />
<text  x="1137.39" y="1471.5" ></text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.03%)</title><rect x="999.7" y="1429" width="0.3" height="15.0" fill="rgb(216,98,20)" rx="2" ry="2" />
<text  x="1002.68" y="1439.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (16 samples, 0.45%)</title><rect x="588.6" y="1413" width="5.3" height="15.0" fill="rgb(226,190,47)" rx="2" ry="2" />
<text  x="591.58" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (138 samples, 3.87%)</title><rect x="1088.4" y="1541" width="45.7" height="15.0" fill="rgb(253,120,30)" rx="2" ry="2" />
<text  x="1091.38" y="1551.5" >cpui..</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="10.0" y="1381" width="0.3" height="15.0" fill="rgb(211,58,33)" rx="2" ry="2" />
<text  x="13.00" y="1391.5" ></text>
</g>
<g >
<title>ctx_resched (68 samples, 1.91%)</title><rect x="15.0" y="1301" width="22.5" height="15.0" fill="rgb(237,33,2)" rx="2" ry="2" />
<text  x="17.96" y="1311.5" >c..</text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.31%)</title><rect x="286.4" y="1397" width="3.6" height="15.0" fill="rgb(206,87,25)" rx="2" ry="2" />
<text  x="289.38" y="1407.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.03%)</title><rect x="1141.0" y="1237" width="0.3" height="15.0" fill="rgb(216,49,23)" rx="2" ry="2" />
<text  x="1144.01" y="1247.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="1047.3" y="1221" width="0.4" height="15.0" fill="rgb(207,20,35)" rx="2" ry="2" />
<text  x="1050.34" y="1231.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.03%)</title><rect x="1058.9" y="1445" width="0.4" height="15.0" fill="rgb(216,49,49)" rx="2" ry="2" />
<text  x="1061.93" y="1455.5" ></text>
</g>
<g >
<title>__pte_alloc (1 samples, 0.03%)</title><rect x="999.7" y="1477" width="0.3" height="15.0" fill="rgb(241,22,20)" rx="2" ry="2" />
<text  x="1002.68" y="1487.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.06%)</title><rect x="681.6" y="1349" width="0.7" height="15.0" fill="rgb(244,40,43)" rx="2" ry="2" />
<text  x="684.59" y="1359.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.03%)</title><rect x="200.3" y="1365" width="0.4" height="15.0" fill="rgb(231,183,20)" rx="2" ry="2" />
<text  x="203.32" y="1375.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.03%)</title><rect x="291.3" y="1413" width="0.4" height="15.0" fill="rgb(244,63,17)" rx="2" ry="2" />
<text  x="294.35" y="1423.5" ></text>
</g>
<g >
<title>NaClValidateImage (2 samples, 0.06%)</title><rect x="1046.3" y="1477" width="0.7" height="15.0" fill="rgb(247,59,36)" rx="2" ry="2" />
<text  x="1049.35" y="1487.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.25%)</title><rect x="277.1" y="1493" width="3.0" height="15.0" fill="rgb(216,198,26)" rx="2" ry="2" />
<text  x="280.11" y="1503.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.03%)</title><rect x="1186.4" y="1413" width="0.3" height="15.0" fill="rgb(239,119,1)" rx="2" ry="2" />
<text  x="1189.36" y="1423.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.06%)</title><rect x="600.2" y="1413" width="0.6" height="15.0" fill="rgb(209,18,39)" rx="2" ry="2" />
<text  x="603.17" y="1423.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (24 samples, 0.67%)</title><rect x="39.8" y="1557" width="7.9" height="15.0" fill="rgb(244,76,4)" rx="2" ry="2" />
<text  x="42.79" y="1567.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.03%)</title><rect x="688.9" y="1445" width="0.3" height="15.0" fill="rgb(254,100,43)" rx="2" ry="2" />
<text  x="691.87" y="1455.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.03%)</title><rect x="1048.0" y="885" width="0.3" height="15.0" fill="rgb(251,16,30)" rx="2" ry="2" />
<text  x="1051.00" y="895.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (39 samples, 1.09%)</title><rect x="478.4" y="1461" width="12.9" height="15.0" fill="rgb(252,94,13)" rx="2" ry="2" />
<text  x="481.36" y="1471.5" ></text>
</g>
<g >
<title>shmem_fault (2 samples, 0.06%)</title><rect x="1033.1" y="1317" width="0.7" height="15.0" fill="rgb(216,167,36)" rx="2" ry="2" />
<text  x="1036.11" y="1327.5" ></text>
</g>
<g >
<title>NaClSysWrite (1 samples, 0.03%)</title><rect x="57.3" y="1589" width="0.4" height="15.0" fill="rgb(217,160,41)" rx="2" ry="2" />
<text  x="60.33" y="1599.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.03%)</title><rect x="10.7" y="1557" width="0.3" height="15.0" fill="rgb(236,206,24)" rx="2" ry="2" />
<text  x="13.66" y="1567.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.06%)</title><rect x="787.2" y="1461" width="0.6" height="15.0" fill="rgb(245,164,20)" rx="2" ry="2" />
<text  x="790.18" y="1471.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (1 samples, 0.03%)</title><rect x="1048.0" y="821" width="0.3" height="15.0" fill="rgb(230,112,22)" rx="2" ry="2" />
<text  x="1051.00" y="831.5" ></text>
</g>
<g >
<title>record__pushfn (24 samples, 0.67%)</title><rect x="39.8" y="1525" width="7.9" height="15.0" fill="rgb(250,143,24)" rx="2" ry="2" />
<text  x="42.79" y="1535.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::initialize (1 samples, 0.03%)</title><rect x="1048.0" y="1429" width="0.3" height="15.0" fill="rgb(233,56,40)" rx="2" ry="2" />
<text  x="1051.00" y="1439.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (6 samples, 0.17%)</title><rect x="489.0" y="1445" width="1.9" height="15.0" fill="rgb(211,107,32)" rx="2" ry="2" />
<text  x="491.95" y="1455.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (641 samples, 17.98%)</title><rect x="309.2" y="1509" width="212.2" height="15.0" fill="rgb(215,190,2)" rx="2" ry="2" />
<text  x="312.22" y="1519.5" >rustposix::safeposix::sysca..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.34%)</title><rect x="676.0" y="1397" width="3.9" height="15.0" fill="rgb(213,108,17)" rx="2" ry="2" />
<text  x="678.96" y="1407.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (4 samples, 0.11%)</title><rect x="209.3" y="1573" width="1.3" height="15.0" fill="rgb(240,186,23)" rx="2" ry="2" />
<text  x="212.26" y="1583.5" ></text>
</g>
<g >
<title>vfs_iter_write (24 samples, 0.67%)</title><rect x="39.8" y="1349" width="7.9" height="15.0" fill="rgb(232,52,18)" rx="2" ry="2" />
<text  x="42.79" y="1359.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.03%)</title><rect x="998.4" y="1429" width="0.3" height="15.0" fill="rgb(222,45,34)" rx="2" ry="2" />
<text  x="1001.35" y="1439.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.08%)</title><rect x="669.7" y="1397" width="1.0" height="15.0" fill="rgb(222,102,47)" rx="2" ry="2" />
<text  x="672.67" y="1407.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::incref_root (1 samples, 0.03%)</title><rect x="1048.0" y="1509" width="0.3" height="15.0" fill="rgb(228,66,41)" rx="2" ry="2" />
<text  x="1051.00" y="1519.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (3 samples, 0.08%)</title><rect x="1047.0" y="1365" width="1.0" height="15.0" fill="rgb(212,18,39)" rx="2" ry="2" />
<text  x="1050.01" y="1375.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.03%)</title><rect x="1048.0" y="117" width="0.3" height="15.0" fill="rgb(211,162,46)" rx="2" ry="2" />
<text  x="1051.00" y="127.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.03%)</title><rect x="672.7" y="1445" width="0.3" height="15.0" fill="rgb(252,130,48)" rx="2" ry="2" />
<text  x="675.65" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (26 samples, 0.73%)</title><rect x="720.0" y="1429" width="8.6" height="15.0" fill="rgb(227,8,40)" rx="2" ry="2" />
<text  x="722.99" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (24 samples, 0.67%)</title><rect x="39.8" y="1445" width="7.9" height="15.0" fill="rgb(211,19,12)" rx="2" ry="2" />
<text  x="42.79" y="1455.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.03%)</title><rect x="1058.9" y="1397" width="0.4" height="15.0" fill="rgb(226,112,17)" rx="2" ry="2" />
<text  x="1061.93" y="1407.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.22%)</title><rect x="306.6" y="1445" width="2.6" height="15.0" fill="rgb(223,28,0)" rx="2" ry="2" />
<text  x="309.57" y="1455.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (1 samples, 0.03%)</title><rect x="1048.0" y="933" width="0.3" height="15.0" fill="rgb(221,215,21)" rx="2" ry="2" />
<text  x="1051.00" y="943.5" ></text>
</g>
<g >
<title>try_grab_page (1 samples, 0.03%)</title><rect x="1034.1" y="1349" width="0.3" height="15.0" fill="rgb(236,144,49)" rx="2" ry="2" />
<text  x="1037.10" y="1359.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.03%)</title><rect x="1175.8" y="1445" width="0.3" height="15.0" fill="rgb(223,210,8)" rx="2" ry="2" />
<text  x="1178.77" y="1455.5" ></text>
</g>
<g >
<title>ksys_write (24 samples, 0.67%)</title><rect x="39.8" y="1413" width="7.9" height="15.0" fill="rgb(243,11,8)" rx="2" ry="2" />
<text  x="42.79" y="1423.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.28%)</title><rect x="669.3" y="1445" width="3.4" height="15.0" fill="rgb(227,13,37)" rx="2" ry="2" />
<text  x="672.34" y="1455.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.42%)</title><rect x="600.8" y="1397" width="5.0" height="15.0" fill="rgb(233,32,10)" rx="2" ry="2" />
<text  x="603.83" y="1407.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.03%)</title><rect x="378.7" y="1429" width="0.4" height="15.0" fill="rgb(225,34,51)" rx="2" ry="2" />
<text  x="381.73" y="1439.5" ></text>
</g>
<g >
<title>NaClSysMunmap (25 samples, 0.70%)</title><rect x="210.6" y="1557" width="8.3" height="15.0" fill="rgb(242,28,50)" rx="2" ry="2" />
<text  x="213.58" y="1567.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (16 samples, 0.45%)</title><rect x="1015.2" y="1477" width="5.3" height="15.0" fill="rgb(246,113,35)" rx="2" ry="2" />
<text  x="1018.23" y="1487.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (19 samples, 0.53%)</title><rect x="359.2" y="1445" width="6.3" height="15.0" fill="rgb(249,32,1)" rx="2" ry="2" />
<text  x="362.20" y="1455.5" ></text>
</g>
<g >
<title>write (1 samples, 0.03%)</title><rect x="39.5" y="1493" width="0.3" height="15.0" fill="rgb(222,214,43)" rx="2" ry="2" />
<text  x="42.46" y="1503.5" ></text>
</g>
<g >
<title>NaClLog (2 samples, 0.06%)</title><rect x="555.2" y="1541" width="0.6" height="15.0" fill="rgb(254,129,40)" rx="2" ry="2" />
<text  x="558.15" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.73%)</title><rect x="200.7" y="1461" width="8.6" height="15.0" fill="rgb(234,109,54)" rx="2" ry="2" />
<text  x="203.65" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="1086.4" y="1509" width="0.3" height="15.0" fill="rgb(212,69,2)" rx="2" ry="2" />
<text  x="1089.40" y="1519.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.34%)</title><rect x="682.9" y="1429" width="4.0" height="15.0" fill="rgb(251,15,52)" rx="2" ry="2" />
<text  x="685.91" y="1439.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.03%)</title><rect x="1048.0" y="1029" width="0.3" height="15.0" fill="rgb(224,226,15)" rx="2" ry="2" />
<text  x="1051.00" y="1039.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (2 samples, 0.06%)</title><rect x="1033.1" y="1477" width="0.7" height="15.0" fill="rgb(229,23,29)" rx="2" ry="2" />
<text  x="1036.11" y="1487.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (1 samples, 0.03%)</title><rect x="1048.0" y="917" width="0.3" height="15.0" fill="rgb(250,120,13)" rx="2" ry="2" />
<text  x="1051.00" y="927.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.28%)</title><rect x="669.3" y="1429" width="3.4" height="15.0" fill="rgb(218,146,4)" rx="2" ry="2" />
<text  x="672.34" y="1439.5" ></text>
</g>
<g >
<title>proc_reg_read_iter (1 samples, 0.03%)</title><rect x="1086.1" y="1509" width="0.3" height="15.0" fill="rgb(229,96,35)" rx="2" ry="2" />
<text  x="1089.07" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.03%)</title><rect x="634.6" y="1381" width="0.3" height="15.0" fill="rgb(252,112,47)" rx="2" ry="2" />
<text  x="637.59" y="1391.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.08%)</title><rect x="687.9" y="1397" width="1.0" height="15.0" fill="rgb(237,96,15)" rx="2" ry="2" />
<text  x="690.88" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_enter (133 samples, 3.73%)</title><rect x="1089.4" y="1525" width="44.0" height="15.0" fill="rgb(229,71,14)" rx="2" ry="2" />
<text  x="1092.38" y="1535.5" >cpui..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (3 samples, 0.08%)</title><rect x="1047.0" y="1509" width="1.0" height="15.0" fill="rgb(239,5,53)" rx="2" ry="2" />
<text  x="1050.01" y="1519.5" ></text>
</g>
<g >
<title>__poll (6 samples, 0.17%)</title><rect x="37.5" y="1557" width="2.0" height="15.0" fill="rgb(253,26,52)" rx="2" ry="2" />
<text  x="40.47" y="1567.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (23 samples, 0.65%)</title><rect x="634.9" y="1413" width="7.6" height="15.0" fill="rgb(240,206,20)" rx="2" ry="2" />
<text  x="637.92" y="1423.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (1 samples, 0.03%)</title><rect x="47.4" y="1125" width="0.3" height="15.0" fill="rgb(239,30,4)" rx="2" ry="2" />
<text  x="50.40" y="1135.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.03%)</title><rect x="1033.4" y="1253" width="0.4" height="15.0" fill="rgb(251,58,47)" rx="2" ry="2" />
<text  x="1036.44" y="1263.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.06%)</title><rect x="377.7" y="1317" width="0.7" height="15.0" fill="rgb(246,70,45)" rx="2" ry="2" />
<text  x="380.74" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.03%)</title><rect x="199.7" y="1445" width="0.3" height="15.0" fill="rgb(214,34,52)" rx="2" ry="2" />
<text  x="202.66" y="1455.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (16 samples, 0.45%)</title><rect x="472.7" y="1477" width="5.3" height="15.0" fill="rgb(217,124,0)" rx="2" ry="2" />
<text  x="475.73" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_openat (3 samples, 0.08%)</title><rect x="1085.1" y="1573" width="1.0" height="15.0" fill="rgb(247,91,20)" rx="2" ry="2" />
<text  x="1088.07" y="1583.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.03%)</title><rect x="294.7" y="1429" width="0.3" height="15.0" fill="rgb(213,152,4)" rx="2" ry="2" />
<text  x="297.66" y="1439.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.03%)</title><rect x="1048.0" y="901" width="0.3" height="15.0" fill="rgb(233,196,48)" rx="2" ry="2" />
<text  x="1051.00" y="911.5" ></text>
</g>
<g >
<title>pagecache_get_page (3 samples, 0.08%)</title><rect x="43.8" y="1221" width="1.0" height="15.0" fill="rgb(233,106,39)" rx="2" ry="2" />
<text  x="46.76" y="1231.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (126 samples, 3.53%)</title><rect x="1091.7" y="1493" width="41.7" height="15.0" fill="rgb(240,4,6)" rx="2" ry="2" />
<text  x="1094.69" y="1503.5" >mwa..</text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="1089.4" y="1413" width="0.3" height="15.0" fill="rgb(207,6,31)" rx="2" ry="2" />
<text  x="1092.38" y="1423.5" ></text>
</g>
<g >
<title>BaseExtentionFromREX (1 samples, 0.03%)</title><rect x="185.8" y="1477" width="0.3" height="15.0" fill="rgb(215,92,18)" rx="2" ry="2" />
<text  x="188.76" y="1487.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.03%)</title><rect x="1090.4" y="1253" width="0.3" height="15.0" fill="rgb(208,75,43)" rx="2" ry="2" />
<text  x="1093.37" y="1263.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.03%)</title><rect x="1059.3" y="1445" width="0.3" height="15.0" fill="rgb(230,157,54)" rx="2" ry="2" />
<text  x="1062.26" y="1455.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="677.3" y="1349" width="0.3" height="15.0" fill="rgb(233,141,52)" rx="2" ry="2" />
<text  x="680.29" y="1359.5" ></text>
</g>
<g >
<title>NaClTextMapClearCacheIfNeeded (1 samples, 0.03%)</title><rect x="179.5" y="1525" width="0.3" height="15.0" fill="rgb(216,174,31)" rx="2" ry="2" />
<text  x="182.47" y="1535.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.03%)</title><rect x="10.7" y="1525" width="0.3" height="15.0" fill="rgb(239,14,5)" rx="2" ry="2" />
<text  x="13.66" y="1535.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (126 samples, 3.53%)</title><rect x="686.9" y="1493" width="41.7" height="15.0" fill="rgb(222,123,30)" rx="2" ry="2" />
<text  x="689.89" y="1503.5" >loc..</text>
</g>
<g >
<title>ovl_write_iter (6 samples, 0.17%)</title><rect x="47.7" y="1509" width="2.0" height="15.0" fill="rgb(245,81,38)" rx="2" ry="2" />
<text  x="50.73" y="1519.5" ></text>
</g>
<g >
<title>tick_nohz_restart (3 samples, 0.08%)</title><rect x="1188.0" y="1461" width="1.0" height="15.0" fill="rgb(206,41,52)" rx="2" ry="2" />
<text  x="1191.01" y="1471.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.06%)</title><rect x="188.7" y="1365" width="0.7" height="15.0" fill="rgb(253,145,21)" rx="2" ry="2" />
<text  x="191.74" y="1375.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (1 samples, 0.03%)</title><rect x="1036.4" y="1589" width="0.3" height="15.0" fill="rgb(242,65,48)" rx="2" ry="2" />
<text  x="1039.42" y="1599.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (1 samples, 0.03%)</title><rect x="634.6" y="1461" width="0.3" height="15.0" fill="rgb(241,221,6)" rx="2" ry="2" />
<text  x="637.59" y="1471.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::available_parallelism (1 samples, 0.03%)</title><rect x="1048.0" y="357" width="0.3" height="15.0" fill="rgb(243,20,30)" rx="2" ry="2" />
<text  x="1051.00" y="367.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (1 samples, 0.03%)</title><rect x="1134.4" y="1477" width="0.3" height="15.0" fill="rgb(218,175,0)" rx="2" ry="2" />
<text  x="1137.39" y="1487.5" ></text>
</g>
<g >
<title>filemap_read (3 samples, 0.08%)</title><rect x="431.4" y="1221" width="1.0" height="15.0" fill="rgb(215,154,54)" rx="2" ry="2" />
<text  x="434.36" y="1231.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_irqsafe (1 samples, 0.03%)</title><rect x="39.5" y="1205" width="0.3" height="15.0" fill="rgb(230,60,36)" rx="2" ry="2" />
<text  x="42.46" y="1215.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="371.4" y="1381" width="0.4" height="15.0" fill="rgb(223,92,53)" rx="2" ry="2" />
<text  x="374.45" y="1391.5" ></text>
</g>
<g >
<title>main (6 samples, 0.17%)</title><rect x="1046.3" y="1557" width="2.0" height="15.0" fill="rgb(251,73,26)" rx="2" ry="2" />
<text  x="1049.35" y="1567.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.03%)</title><rect x="307.9" y="1365" width="0.3" height="15.0" fill="rgb(229,9,51)" rx="2" ry="2" />
<text  x="310.90" y="1375.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (1 samples, 0.03%)</title><rect x="1048.0" y="965" width="0.3" height="15.0" fill="rgb(234,181,8)" rx="2" ry="2" />
<text  x="1051.00" y="975.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (3 samples, 0.08%)</title><rect x="1140.4" y="1269" width="0.9" height="15.0" fill="rgb(232,41,18)" rx="2" ry="2" />
<text  x="1143.35" y="1279.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (36 samples, 1.01%)</title><rect x="675.0" y="1461" width="11.9" height="15.0" fill="rgb(223,4,17)" rx="2" ry="2" />
<text  x="677.97" y="1471.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::seek (8 samples, 0.22%)</title><rect x="432.7" y="1461" width="2.6" height="15.0" fill="rgb(249,17,8)" rx="2" ry="2" />
<text  x="435.68" y="1471.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (3 samples, 0.08%)</title><rect x="682.9" y="1381" width="1.0" height="15.0" fill="rgb(241,208,49)" rx="2" ry="2" />
<text  x="685.91" y="1391.5" ></text>
</g>
<g >
<title>NaClAppDtor (33 samples, 0.93%)</title><rect x="188.7" y="1493" width="11.0" height="15.0" fill="rgb(252,88,25)" rx="2" ry="2" />
<text  x="191.74" y="1503.5" ></text>
</g>
<g >
<title>alloc_pages_vma (46 samples, 1.29%)</title><rect x="1000.0" y="1477" width="15.2" height="15.0" fill="rgb(215,190,35)" rx="2" ry="2" />
<text  x="1003.01" y="1487.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.34%)</title><rect x="290.4" y="1429" width="3.9" height="15.0" fill="rgb(221,29,4)" rx="2" ry="2" />
<text  x="293.35" y="1439.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (34 samples, 0.95%)</title><rect x="188.7" y="1525" width="11.3" height="15.0" fill="rgb(231,9,49)" rx="2" ry="2" />
<text  x="191.74" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.45%)</title><rect x="582.0" y="1445" width="5.3" height="15.0" fill="rgb(219,114,28)" rx="2" ry="2" />
<text  x="584.96" y="1455.5" ></text>
</g>
<g >
<title>record__mmap_read_all (24 samples, 0.67%)</title><rect x="39.8" y="1573" width="7.9" height="15.0" fill="rgb(225,174,10)" rx="2" ry="2" />
<text  x="42.79" y="1583.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.03%)</title><rect x="39.5" y="1301" width="0.3" height="15.0" fill="rgb(243,168,14)" rx="2" ry="2" />
<text  x="42.46" y="1311.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (2 samples, 0.06%)</title><rect x="1033.1" y="1445" width="0.7" height="15.0" fill="rgb(214,227,42)" rx="2" ry="2" />
<text  x="1036.11" y="1455.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="200.3" y="1333" width="0.4" height="15.0" fill="rgb(231,95,1)" rx="2" ry="2" />
<text  x="203.32" y="1343.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.17%)</title><rect x="387.3" y="1429" width="2.0" height="15.0" fill="rgb(209,156,43)" rx="2" ry="2" />
<text  x="390.34" y="1439.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (1 samples, 0.03%)</title><rect x="57.7" y="1589" width="0.3" height="15.0" fill="rgb(208,159,26)" rx="2" ry="2" />
<text  x="60.66" y="1599.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="1175.1" y="1429" width="0.3" height="15.0" fill="rgb(251,163,15)" rx="2" ry="2" />
<text  x="1178.11" y="1439.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.03%)</title><rect x="1047.7" y="1221" width="0.3" height="15.0" fill="rgb(235,172,14)" rx="2" ry="2" />
<text  x="1050.67" y="1231.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (1 samples, 0.03%)</title><rect x="1088.1" y="1557" width="0.3" height="15.0" fill="rgb(240,166,50)" rx="2" ry="2" />
<text  x="1091.05" y="1567.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (3 samples, 0.08%)</title><rect x="44.8" y="1221" width="0.9" height="15.0" fill="rgb(208,197,27)" rx="2" ry="2" />
<text  x="47.75" y="1231.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (4 samples, 0.11%)</title><rect x="209.3" y="1509" width="1.3" height="15.0" fill="rgb(243,224,1)" rx="2" ry="2" />
<text  x="212.26" y="1519.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (16 samples, 0.45%)</title><rect x="600.8" y="1445" width="5.3" height="15.0" fill="rgb(245,204,54)" rx="2" ry="2" />
<text  x="603.83" y="1455.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once_force (1 samples, 0.03%)</title><rect x="1048.0" y="1413" width="0.3" height="15.0" fill="rgb(238,42,46)" rx="2" ry="2" />
<text  x="1051.00" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="10.3" y="1381" width="0.4" height="15.0" fill="rgb(205,199,5)" rx="2" ry="2" />
<text  x="13.33" y="1391.5" ></text>
</g>
<g >
<title>balance_dirty_pages (2 samples, 0.06%)</title><rect x="39.8" y="1237" width="0.7" height="15.0" fill="rgb(205,36,43)" rx="2" ry="2" />
<text  x="42.79" y="1247.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="1047.0" y="1221" width="0.3" height="15.0" fill="rgb(247,22,18)" rx="2" ry="2" />
<text  x="1050.01" y="1231.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (2 samples, 0.06%)</title><rect x="1085.1" y="1509" width="0.6" height="15.0" fill="rgb(209,167,50)" rx="2" ry="2" />
<text  x="1088.07" y="1519.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (3 samples, 0.08%)</title><rect x="1143.3" y="1333" width="1.0" height="15.0" fill="rgb(246,105,1)" rx="2" ry="2" />
<text  x="1146.33" y="1343.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.03%)</title><rect x="39.5" y="1413" width="0.3" height="15.0" fill="rgb(232,215,24)" rx="2" ry="2" />
<text  x="42.46" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (113 samples, 3.17%)</title><rect x="749.8" y="1429" width="37.4" height="15.0" fill="rgb(231,36,49)" rx="2" ry="2" />
<text  x="752.78" y="1439.5" >cor..</text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.03%)</title><rect x="1058.9" y="1429" width="0.4" height="15.0" fill="rgb(212,13,33)" rx="2" ry="2" />
<text  x="1061.93" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.03%)</title><rect x="188.4" y="1413" width="0.3" height="15.0" fill="rgb(218,164,33)" rx="2" ry="2" />
<text  x="191.41" y="1423.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (140 samples, 3.93%)</title><rect x="847.4" y="1445" width="46.4" height="15.0" fill="rgb(213,5,50)" rx="2" ry="2" />
<text  x="850.42" y="1455.5" >ring..</text>
</g>
<g >
<title>rmqueue_bulk (7 samples, 0.20%)</title><rect x="1012.6" y="1413" width="2.3" height="15.0" fill="rgb(239,143,25)" rx="2" ry="2" />
<text  x="1015.59" y="1423.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (8 samples, 0.22%)</title><rect x="42.1" y="1253" width="2.7" height="15.0" fill="rgb(226,68,44)" rx="2" ry="2" />
<text  x="45.11" y="1263.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (1 samples, 0.03%)</title><rect x="1048.0" y="1141" width="0.3" height="15.0" fill="rgb(241,106,17)" rx="2" ry="2" />
<text  x="1051.00" y="1151.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (2 samples, 0.06%)</title><rect x="1033.1" y="1509" width="0.7" height="15.0" fill="rgb(233,220,21)" rx="2" ry="2" />
<text  x="1036.11" y="1519.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.03%)</title><rect x="389.3" y="1445" width="0.4" height="15.0" fill="rgb(228,39,41)" rx="2" ry="2" />
<text  x="392.32" y="1455.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.17%)</title><rect x="291.7" y="1397" width="2.0" height="15.0" fill="rgb(232,25,8)" rx="2" ry="2" />
<text  x="294.68" y="1407.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.22%)</title><rect x="291.7" y="1413" width="2.6" height="15.0" fill="rgb(226,21,7)" rx="2" ry="2" />
<text  x="294.68" y="1423.5" ></text>
</g>
<g >
<title>ioctl (80 samples, 2.24%)</title><rect x="11.0" y="1525" width="26.5" height="15.0" fill="rgb(218,80,4)" rx="2" ry="2" />
<text  x="13.99" y="1535.5" >i..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.45%)</title><rect x="656.1" y="1445" width="5.3" height="15.0" fill="rgb(214,47,17)" rx="2" ry="2" />
<text  x="659.10" y="1455.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (31 samples, 0.87%)</title><rect x="1048.3" y="1605" width="10.3" height="15.0" fill="rgb(245,87,35)" rx="2" ry="2" />
<text  x="1051.33" y="1615.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (14 samples, 0.39%)</title><rect x="425.1" y="1477" width="4.6" height="15.0" fill="rgb(234,186,14)" rx="2" ry="2" />
<text  x="428.07" y="1487.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::de::Deserialize for dashmap::DashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.03%)</title><rect x="1048.0" y="533" width="0.3" height="15.0" fill="rgb(246,148,38)" rx="2" ry="2" />
<text  x="1051.00" y="543.5" ></text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.03%)</title><rect x="10.0" y="1333" width="0.3" height="15.0" fill="rgb(222,156,45)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.03%)</title><rect x="1174.1" y="1413" width="0.3" height="15.0" fill="rgb(236,16,54)" rx="2" ry="2" />
<text  x="1177.11" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (2 samples, 0.06%)</title><rect x="1179.1" y="1413" width="0.6" height="15.0" fill="rgb(216,215,45)" rx="2" ry="2" />
<text  x="1182.08" y="1423.5" ></text>
</g>
<g >
<title>mem_cgroup_wb_stats (2 samples, 0.06%)</title><rect x="39.8" y="1221" width="0.7" height="15.0" fill="rgb(246,127,32)" rx="2" ry="2" />
<text  x="42.79" y="1231.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.03%)</title><rect x="1139.7" y="1285" width="0.3" height="15.0" fill="rgb(216,179,6)" rx="2" ry="2" />
<text  x="1142.69" y="1295.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (17 samples, 0.48%)</title><rect x="429.7" y="1493" width="5.6" height="15.0" fill="rgb(244,147,23)" rx="2" ry="2" />
<text  x="432.70" y="1503.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (1 samples, 0.03%)</title><rect x="893.4" y="1429" width="0.4" height="15.0" fill="rgb(248,152,15)" rx="2" ry="2" />
<text  x="896.43" y="1439.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.06%)</title><rect x="297.6" y="1349" width="0.7" height="15.0" fill="rgb(254,174,4)" rx="2" ry="2" />
<text  x="300.64" y="1359.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.03%)</title><rect x="10.7" y="1541" width="0.3" height="15.0" fill="rgb(226,142,30)" rx="2" ry="2" />
<text  x="13.66" y="1551.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.06%)</title><rect x="1020.9" y="1429" width="0.6" height="15.0" fill="rgb(242,179,9)" rx="2" ry="2" />
<text  x="1023.86" y="1439.5" ></text>
</g>
<g >
<title>generic_exec_single (75 samples, 2.10%)</title><rect x="12.6" y="1365" width="24.9" height="15.0" fill="rgb(237,48,3)" rx="2" ry="2" />
<text  x="15.65" y="1375.5" >g..</text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (3 samples, 0.08%)</title><rect x="616.4" y="1397" width="1.0" height="15.0" fill="rgb(253,37,15)" rx="2" ry="2" />
<text  x="619.38" y="1407.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.03%)</title><rect x="681.3" y="1365" width="0.3" height="15.0" fill="rgb(208,189,5)" rx="2" ry="2" />
<text  x="684.26" y="1375.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once_force::{{closure}} (1 samples, 0.03%)</title><rect x="1048.0" y="1381" width="0.3" height="15.0" fill="rgb(238,168,39)" rx="2" ry="2" />
<text  x="1051.00" y="1391.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (25 samples, 0.70%)</title><rect x="210.6" y="1237" width="8.3" height="15.0" fill="rgb(242,213,20)" rx="2" ry="2" />
<text  x="213.58" y="1247.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (1 samples, 0.03%)</title><rect x="64.9" y="1573" width="0.4" height="15.0" fill="rgb(230,137,42)" rx="2" ry="2" />
<text  x="67.95" y="1583.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (16 samples, 0.45%)</title><rect x="600.8" y="1461" width="5.3" height="15.0" fill="rgb(239,199,50)" rx="2" ry="2" />
<text  x="603.83" y="1471.5" ></text>
</g>
<g >
<title>shrink_node (3 samples, 0.08%)</title><rect x="1087.1" y="1541" width="1.0" height="15.0" fill="rgb(232,149,27)" rx="2" ry="2" />
<text  x="1090.06" y="1551.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (1 samples, 0.03%)</title><rect x="1048.0" y="101" width="0.3" height="15.0" fill="rgb(214,202,14)" rx="2" ry="2" />
<text  x="1051.00" y="111.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (20 samples, 0.56%)</title><rect x="661.7" y="1397" width="6.7" height="15.0" fill="rgb(253,112,42)" rx="2" ry="2" />
<text  x="664.73" y="1407.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (19 samples, 0.53%)</title><rect x="379.1" y="1413" width="6.2" height="15.0" fill="rgb(242,188,10)" rx="2" ry="2" />
<text  x="382.06" y="1423.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (20 samples, 0.56%)</title><rect x="661.7" y="1461" width="6.7" height="15.0" fill="rgb(243,96,4)" rx="2" ry="2" />
<text  x="664.73" y="1471.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.08%)</title><rect x="371.4" y="1397" width="1.0" height="15.0" fill="rgb(208,112,49)" rx="2" ry="2" />
<text  x="374.45" y="1407.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.03%)</title><rect x="38.5" y="1445" width="0.3" height="15.0" fill="rgb(223,129,30)" rx="2" ry="2" />
<text  x="41.47" y="1455.5" ></text>
</g>
<g >
<title>NaClSysMunmapDecoder (25 samples, 0.70%)</title><rect x="210.6" y="1573" width="8.3" height="15.0" fill="rgb(212,97,21)" rx="2" ry="2" />
<text  x="213.58" y="1583.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.03%)</title><rect x="1048.0" y="1349" width="0.3" height="15.0" fill="rgb(208,25,33)" rx="2" ry="2" />
<text  x="1051.00" y="1359.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="385.0" y="1349" width="0.3" height="15.0" fill="rgb(244,62,13)" rx="2" ry="2" />
<text  x="388.02" y="1359.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (34 samples, 0.95%)</title><rect x="882.2" y="1413" width="11.2" height="15.0" fill="rgb(248,204,41)" rx="2" ry="2" />
<text  x="885.17" y="1423.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (20 samples, 0.56%)</title><rect x="236.1" y="1525" width="6.6" height="15.0" fill="rgb(249,17,32)" rx="2" ry="2" />
<text  x="239.07" y="1535.5" ></text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force (1 samples, 0.03%)</title><rect x="634.6" y="1477" width="0.3" height="15.0" fill="rgb(225,222,53)" rx="2" ry="2" />
<text  x="637.59" y="1487.5" ></text>
</g>
<g >
<title>sync_regs (12 samples, 0.34%)</title><rect x="1026.2" y="1589" width="3.9" height="15.0" fill="rgb(248,4,54)" rx="2" ry="2" />
<text  x="1029.16" y="1599.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.42%)</title><rect x="280.8" y="1445" width="4.9" height="15.0" fill="rgb(212,17,5)" rx="2" ry="2" />
<text  x="283.75" y="1455.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (20 samples, 0.56%)</title><rect x="661.7" y="1413" width="6.7" height="15.0" fill="rgb(244,122,46)" rx="2" ry="2" />
<text  x="664.73" y="1423.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.03%)</title><rect x="1090.0" y="1333" width="0.4" height="15.0" fill="rgb(215,228,15)" rx="2" ry="2" />
<text  x="1093.04" y="1343.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (2 samples, 0.06%)</title><rect x="1022.5" y="1493" width="0.7" height="15.0" fill="rgb(224,182,35)" rx="2" ry="2" />
<text  x="1025.52" y="1503.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.06%)</title><rect x="672.0" y="1381" width="0.7" height="15.0" fill="rgb(252,138,42)" rx="2" ry="2" />
<text  x="674.99" y="1391.5" ></text>
</g>
<g >
<title>pagecache_get_page (2 samples, 0.06%)</title><rect x="48.4" y="1365" width="0.7" height="15.0" fill="rgb(217,54,9)" rx="2" ry="2" />
<text  x="51.40" y="1375.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.14%)</title><rect x="301.9" y="1429" width="1.7" height="15.0" fill="rgb(239,109,37)" rx="2" ry="2" />
<text  x="304.94" y="1439.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (23 samples, 0.65%)</title><rect x="634.9" y="1461" width="7.6" height="15.0" fill="rgb(233,202,19)" rx="2" ry="2" />
<text  x="637.92" y="1471.5" ></text>
</g>
<g >
<title>__entry_text_start (1 samples, 0.03%)</title><rect x="433.0" y="1429" width="0.3" height="15.0" fill="rgb(241,218,47)" rx="2" ry="2" />
<text  x="436.01" y="1439.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (23 samples, 0.65%)</title><rect x="235.4" y="1541" width="7.6" height="15.0" fill="rgb(234,16,25)" rx="2" ry="2" />
<text  x="238.41" y="1551.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.06%)</title><rect x="611.1" y="1381" width="0.7" height="15.0" fill="rgb(225,127,44)" rx="2" ry="2" />
<text  x="614.09" y="1391.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.08%)</title><rect x="597.2" y="1397" width="1.0" height="15.0" fill="rgb(247,136,3)" rx="2" ry="2" />
<text  x="600.19" y="1407.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.03%)</title><rect x="39.5" y="1333" width="0.3" height="15.0" fill="rgb(242,221,21)" rx="2" ry="2" />
<text  x="42.46" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_poll (5 samples, 0.14%)</title><rect x="37.8" y="1509" width="1.7" height="15.0" fill="rgb(211,86,31)" rx="2" ry="2" />
<text  x="40.80" y="1519.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.03%)</title><rect x="1087.7" y="1477" width="0.4" height="15.0" fill="rgb(245,5,52)" rx="2" ry="2" />
<text  x="1090.72" y="1487.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="1058.9" y="1477" width="0.4" height="15.0" fill="rgb(217,106,21)" rx="2" ry="2" />
<text  x="1061.93" y="1487.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.03%)</title><rect x="242.7" y="1525" width="0.3" height="15.0" fill="rgb(220,98,46)" rx="2" ry="2" />
<text  x="245.69" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (19 samples, 0.53%)</title><rect x="649.5" y="1445" width="6.3" height="15.0" fill="rgb(224,223,48)" rx="2" ry="2" />
<text  x="652.48" y="1455.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.03%)</title><rect x="1180.7" y="1429" width="0.4" height="15.0" fill="rgb(216,119,9)" rx="2" ry="2" />
<text  x="1183.73" y="1439.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (31 samples, 0.87%)</title><rect x="178.5" y="1573" width="10.2" height="15.0" fill="rgb(242,101,48)" rx="2" ry="2" />
<text  x="181.48" y="1583.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.03%)</title><rect x="39.5" y="1429" width="0.3" height="15.0" fill="rgb(237,54,25)" rx="2" ry="2" />
<text  x="42.46" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1048.0" y="197" width="0.3" height="15.0" fill="rgb(244,97,34)" rx="2" ry="2" />
<text  x="1051.00" y="207.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.06%)</title><rect x="1185.4" y="1445" width="0.6" height="15.0" fill="rgb(215,88,45)" rx="2" ry="2" />
<text  x="1188.37" y="1455.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="1090.4" y="1333" width="0.3" height="15.0" fill="rgb(253,122,15)" rx="2" ry="2" />
<text  x="1093.37" y="1343.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="1137.7" y="1381" width="0.3" height="15.0" fill="rgb(242,0,14)" rx="2" ry="2" />
<text  x="1140.70" y="1391.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (63 samples, 1.77%)</title><rect x="810.0" y="1429" width="20.9" height="15.0" fill="rgb(206,8,37)" rx="2" ry="2" />
<text  x="813.02" y="1439.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (1 samples, 0.03%)</title><rect x="1141.7" y="1381" width="0.3" height="15.0" fill="rgb(250,25,22)" rx="2" ry="2" />
<text  x="1144.67" y="1391.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (7 samples, 0.20%)</title><rect x="470.4" y="1477" width="2.3" height="15.0" fill="rgb(237,113,52)" rx="2" ry="2" />
<text  x="473.42" y="1487.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.03%)</title><rect x="617.4" y="1381" width="0.3" height="15.0" fill="rgb(228,66,53)" rx="2" ry="2" />
<text  x="620.38" y="1391.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.03%)</title><rect x="200.3" y="1413" width="0.4" height="15.0" fill="rgb(223,33,21)" rx="2" ry="2" />
<text  x="203.32" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (26 samples, 0.73%)</title><rect x="200.7" y="1429" width="8.6" height="15.0" fill="rgb(209,227,47)" rx="2" ry="2" />
<text  x="203.65" y="1439.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (6 samples, 0.17%)</title><rect x="45.7" y="1205" width="2.0" height="15.0" fill="rgb(217,64,5)" rx="2" ry="2" />
<text  x="48.75" y="1215.5" ></text>
</g>
<g >
<title>&lt;dashmap::serde::DashMapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.03%)</title><rect x="1048.0" y="421" width="0.3" height="15.0" fill="rgb(225,132,29)" rx="2" ry="2" />
<text  x="1051.00" y="431.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (24 samples, 0.67%)</title><rect x="1136.7" y="1413" width="8.0" height="15.0" fill="rgb(235,40,28)" rx="2" ry="2" />
<text  x="1139.71" y="1423.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.08%)</title><rect x="1047.0" y="1445" width="1.0" height="15.0" fill="rgb(205,84,29)" rx="2" ry="2" />
<text  x="1050.01" y="1455.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.03%)</title><rect x="10.3" y="1157" width="0.4" height="15.0" fill="rgb(213,141,44)" rx="2" ry="2" />
<text  x="13.33" y="1167.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (25 samples, 0.70%)</title><rect x="210.6" y="1493" width="8.3" height="15.0" fill="rgb(233,9,22)" rx="2" ry="2" />
<text  x="213.58" y="1503.5" ></text>
</g>
<g >
<title>delete_from_page_cache (1 samples, 0.03%)</title><rect x="1059.6" y="1333" width="0.3" height="15.0" fill="rgb(245,194,41)" rx="2" ry="2" />
<text  x="1062.59" y="1343.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.08%)</title><rect x="684.2" y="1365" width="1.0" height="15.0" fill="rgb(209,103,7)" rx="2" ry="2" />
<text  x="687.24" y="1375.5" ></text>
</g>
<g >
<title>do_anonymous_page (89 samples, 2.50%)</title><rect x="993.1" y="1493" width="29.4" height="15.0" fill="rgb(207,130,36)" rx="2" ry="2" />
<text  x="996.06" y="1503.5" >do..</text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.56%)</title><rect x="661.7" y="1381" width="6.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="664.73" y="1391.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.03%)</title><rect x="1179.1" y="1397" width="0.3" height="15.0" fill="rgb(252,77,47)" rx="2" ry="2" />
<text  x="1182.08" y="1407.5" ></text>
</g>
<g >
<title>HandleStackContext (2 samples, 0.06%)</title><rect x="54.4" y="1589" width="0.6" height="15.0" fill="rgb(236,61,53)" rx="2" ry="2" />
<text  x="57.35" y="1599.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (3 samples, 0.08%)</title><rect x="1047.0" y="1429" width="1.0" height="15.0" fill="rgb(207,142,23)" rx="2" ry="2" />
<text  x="1050.01" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.03%)</title><rect x="199.7" y="1333" width="0.3" height="15.0" fill="rgb(207,159,16)" rx="2" ry="2" />
<text  x="202.66" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.14%)</title><rect x="37.8" y="1541" width="1.7" height="15.0" fill="rgb(244,27,34)" rx="2" ry="2" />
<text  x="40.80" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (145 samples, 4.07%)</title><rect x="1134.7" y="1477" width="48.0" height="15.0" fill="rgb(233,109,50)" rx="2" ry="2" />
<text  x="1137.72" y="1487.5" >cpui..</text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.03%)</title><rect x="1176.4" y="1445" width="0.4" height="15.0" fill="rgb(214,69,48)" rx="2" ry="2" />
<text  x="1179.43" y="1455.5" ></text>
</g>
<g >
<title>__mmap (25 samples, 0.70%)</title><rect x="210.6" y="1445" width="8.3" height="15.0" fill="rgb(251,5,28)" rx="2" ry="2" />
<text  x="213.58" y="1455.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (2 samples, 0.06%)</title><rect x="55.0" y="1589" width="0.7" height="15.0" fill="rgb(218,16,45)" rx="2" ry="2" />
<text  x="58.02" y="1599.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1 samples, 0.03%)</title><rect x="308.6" y="1397" width="0.3" height="15.0" fill="rgb(217,65,31)" rx="2" ry="2" />
<text  x="311.56" y="1407.5" ></text>
</g>
<g >
<title>schedule_idle (3 samples, 0.08%)</title><rect x="1186.0" y="1477" width="1.0" height="15.0" fill="rgb(206,121,15)" rx="2" ry="2" />
<text  x="1189.03" y="1487.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,107 samples, 31.05%)</title><rect x="527.7" y="1557" width="366.4" height="15.0" fill="rgb(223,164,48)" rx="2" ry="2" />
<text  x="530.68" y="1567.5" >NaClSysWrite</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.25%)</title><rect x="372.4" y="1397" width="3.0" height="15.0" fill="rgb(228,24,24)" rx="2" ry="2" />
<text  x="375.44" y="1407.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (31 samples, 0.87%)</title><rect x="178.5" y="1541" width="10.2" height="15.0" fill="rgb(229,85,44)" rx="2" ry="2" />
<text  x="181.48" y="1551.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (20 samples, 0.56%)</title><rect x="628.0" y="1493" width="6.6" height="15.0" fill="rgb(206,34,42)" rx="2" ry="2" />
<text  x="630.97" y="1503.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (6 samples, 0.17%)</title><rect x="1187.0" y="1477" width="2.0" height="15.0" fill="rgb(228,172,0)" rx="2" ry="2" />
<text  x="1190.02" y="1487.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (6 samples, 0.17%)</title><rect x="133.8" y="1573" width="2.0" height="15.0" fill="rgb(245,20,47)" rx="2" ry="2" />
<text  x="136.79" y="1583.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (2 samples, 0.06%)</title><rect x="64.0" y="1589" width="0.6" height="15.0" fill="rgb(225,193,23)" rx="2" ry="2" />
<text  x="66.95" y="1599.5" ></text>
</g>
<g >
<title>ovl_permission (1 samples, 0.03%)</title><rect x="1048.0" y="69" width="0.3" height="15.0" fill="rgb(240,174,41)" rx="2" ry="2" />
<text  x="1051.00" y="79.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.08%)</title><rect x="1047.0" y="1381" width="1.0" height="15.0" fill="rgb(229,185,9)" rx="2" ry="2" />
<text  x="1050.01" y="1391.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (7 samples, 0.20%)</title><rect x="470.4" y="1461" width="2.3" height="15.0" fill="rgb(225,151,41)" rx="2" ry="2" />
<text  x="473.42" y="1471.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.34%)</title><rect x="606.5" y="1429" width="3.9" height="15.0" fill="rgb(228,123,47)" rx="2" ry="2" />
<text  x="609.45" y="1439.5" ></text>
</g>
<g >
<title>do_idle (167 samples, 4.68%)</title><rect x="1134.1" y="1493" width="55.2" height="15.0" fill="rgb(233,170,5)" rx="2" ry="2" />
<text  x="1137.06" y="1503.5" >do_idle</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="1047.3" y="1141" width="0.4" height="15.0" fill="rgb(240,172,32)" rx="2" ry="2" />
<text  x="1050.34" y="1151.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (18 samples, 0.50%)</title><rect x="587.9" y="1477" width="6.0" height="15.0" fill="rgb(254,93,27)" rx="2" ry="2" />
<text  x="590.92" y="1487.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (10 samples, 0.28%)</title><rect x="252.0" y="1541" width="3.3" height="15.0" fill="rgb(225,219,2)" rx="2" ry="2" />
<text  x="254.96" y="1551.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="1091.4" y="1429" width="0.3" height="15.0" fill="rgb(212,126,39)" rx="2" ry="2" />
<text  x="1094.36" y="1439.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (1 samples, 0.03%)</title><rect x="431.0" y="1301" width="0.4" height="15.0" fill="rgb(214,41,40)" rx="2" ry="2" />
<text  x="434.03" y="1311.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.34%)</title><rect x="371.4" y="1429" width="4.0" height="15.0" fill="rgb(215,202,15)" rx="2" ry="2" />
<text  x="374.45" y="1439.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="478.0" y="1461" width="0.4" height="15.0" fill="rgb(227,83,54)" rx="2" ry="2" />
<text  x="481.03" y="1471.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.20%)</title><rect x="299.6" y="1397" width="2.3" height="15.0" fill="rgb(225,38,22)" rx="2" ry="2" />
<text  x="302.62" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="39.5" y="1477" width="0.3" height="15.0" fill="rgb(225,168,41)" rx="2" ry="2" />
<text  x="42.46" y="1487.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (2 samples, 0.06%)</title><rect x="64.6" y="1589" width="0.7" height="15.0" fill="rgb(246,65,52)" rx="2" ry="2" />
<text  x="67.61" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.17%)</title><rect x="1085.1" y="1605" width="2.0" height="15.0" fill="rgb(245,202,37)" rx="2" ry="2" />
<text  x="1088.07" y="1615.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (73 samples, 2.05%)</title><rect x="389.7" y="1429" width="24.1" height="15.0" fill="rgb(208,32,7)" rx="2" ry="2" />
<text  x="392.65" y="1439.5" >c..</text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="1047.3" y="1237" width="0.4" height="15.0" fill="rgb(228,227,0)" rx="2" ry="2" />
<text  x="1050.34" y="1247.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.03%)</title><rect x="1141.0" y="1253" width="0.3" height="15.0" fill="rgb(217,134,2)" rx="2" ry="2" />
<text  x="1144.01" y="1263.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (4 samples, 0.11%)</title><rect x="209.3" y="1541" width="1.3" height="15.0" fill="rgb(231,210,29)" rx="2" ry="2" />
<text  x="212.26" y="1551.5" ></text>
</g>
<g >
<title>NaClValidateImage (4 samples, 0.11%)</title><rect x="209.3" y="1477" width="1.3" height="15.0" fill="rgb(242,211,51)" rx="2" ry="2" />
<text  x="212.26" y="1487.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (2 samples, 0.06%)</title><rect x="1033.1" y="1573" width="0.7" height="15.0" fill="rgb(249,142,38)" rx="2" ry="2" />
<text  x="1036.11" y="1583.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (1 samples, 0.03%)</title><rect x="1048.0" y="629" width="0.3" height="15.0" fill="rgb(239,66,0)" rx="2" ry="2" />
<text  x="1051.00" y="639.5" ></text>
</g>
<g >
<title>menu_select (13 samples, 0.36%)</title><rect x="1176.8" y="1445" width="4.3" height="15.0" fill="rgb(251,23,11)" rx="2" ry="2" />
<text  x="1179.76" y="1455.5" ></text>
</g>
<g >
<title>__libc_unwind_link_get (1 samples, 0.03%)</title><rect x="199.7" y="1461" width="0.3" height="15.0" fill="rgb(253,210,47)" rx="2" ry="2" />
<text  x="202.66" y="1471.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="10.0" y="1413" width="0.3" height="15.0" fill="rgb(221,223,2)" rx="2" ry="2" />
<text  x="13.00" y="1423.5" ></text>
</g>
<g >
<title>find_vma (4 samples, 0.11%)</title><rect x="987.4" y="1541" width="1.4" height="15.0" fill="rgb(209,205,46)" rx="2" ry="2" />
<text  x="990.43" y="1551.5" ></text>
</g>
<g >
<title>main (2 samples, 0.06%)</title><rect x="10.0" y="1557" width="0.7" height="15.0" fill="rgb(238,110,28)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (36 samples, 1.01%)</title><rect x="188.7" y="1573" width="12.0" height="15.0" fill="rgb(223,136,15)" rx="2" ry="2" />
<text  x="191.74" y="1583.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (1 samples, 0.03%)</title><rect x="1048.0" y="453" width="0.3" height="15.0" fill="rgb(226,181,3)" rx="2" ry="2" />
<text  x="1051.00" y="463.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.03%)</title><rect x="200.3" y="1381" width="0.4" height="15.0" fill="rgb(214,70,32)" rx="2" ry="2" />
<text  x="203.32" y="1391.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u16 (1 samples, 0.03%)</title><rect x="1047.3" y="1269" width="0.4" height="15.0" fill="rgb(216,29,40)" rx="2" ry="2" />
<text  x="1050.34" y="1279.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5 samples, 0.14%)</title><rect x="1134.7" y="1445" width="1.7" height="15.0" fill="rgb(248,134,25)" rx="2" ry="2" />
<text  x="1137.72" y="1455.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="306.2" y="1397" width="0.4" height="15.0" fill="rgb(210,36,25)" rx="2" ry="2" />
<text  x="309.24" y="1407.5" ></text>
</g>
<g >
<title>pte_alloc_one (1 samples, 0.03%)</title><rect x="999.7" y="1461" width="0.3" height="15.0" fill="rgb(238,107,19)" rx="2" ry="2" />
<text  x="1002.68" y="1471.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="604.1" y="1349" width="0.4" height="15.0" fill="rgb(215,125,54)" rx="2" ry="2" />
<text  x="607.14" y="1359.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.03%)</title><rect x="1059.6" y="1429" width="0.3" height="15.0" fill="rgb(254,91,21)" rx="2" ry="2" />
<text  x="1062.59" y="1439.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.03%)</title><rect x="1033.4" y="1205" width="0.4" height="15.0" fill="rgb(225,65,32)" rx="2" ry="2" />
<text  x="1036.44" y="1215.5" ></text>
</g>
<g >
<title>__update_blocked_fair (5 samples, 0.14%)</title><rect x="1183.4" y="1429" width="1.6" height="15.0" fill="rgb(243,95,21)" rx="2" ry="2" />
<text  x="1186.38" y="1439.5" ></text>
</g>
<g >
<title>cpu_startup_entry (139 samples, 3.90%)</title><rect x="1088.1" y="1573" width="46.0" height="15.0" fill="rgb(233,219,1)" rx="2" ry="2" />
<text  x="1091.05" y="1583.5" >cpu_..</text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (1 samples, 0.03%)</title><rect x="1048.0" y="981" width="0.3" height="15.0" fill="rgb(225,96,9)" rx="2" ry="2" />
<text  x="1051.00" y="991.5" ></text>
</g>
<g >
<title>__munmap (26 samples, 0.73%)</title><rect x="200.7" y="1477" width="8.6" height="15.0" fill="rgb(229,180,19)" rx="2" ry="2" />
<text  x="203.65" y="1487.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.03%)</title><rect x="48.1" y="1381" width="0.3" height="15.0" fill="rgb(240,105,49)" rx="2" ry="2" />
<text  x="51.06" y="1391.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (15 samples, 0.42%)</title><rect x="280.8" y="1429" width="4.9" height="15.0" fill="rgb(212,94,51)" rx="2" ry="2" />
<text  x="283.75" y="1439.5" ></text>
</g>
<g >
<title>do_mmap (25 samples, 0.70%)</title><rect x="210.6" y="1349" width="8.3" height="15.0" fill="rgb(245,41,2)" rx="2" ry="2" />
<text  x="213.58" y="1359.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (3 samples, 0.08%)</title><rect x="1181.7" y="1461" width="1.0" height="15.0" fill="rgb(244,111,54)" rx="2" ry="2" />
<text  x="1184.73" y="1471.5" ></text>
</g>
<g >
<title>mmput (2 samples, 0.06%)</title><rect x="1058.9" y="1509" width="0.7" height="15.0" fill="rgb(211,229,38)" rx="2" ry="2" />
<text  x="1061.93" y="1519.5" ></text>
</g>
<g >
<title>[anon] (67 samples, 1.88%)</title><rect x="50.4" y="1605" width="22.2" height="15.0" fill="rgb(246,155,7)" rx="2" ry="2" />
<text  x="53.38" y="1615.5" >[..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.17%)</title><rect x="385.3" y="1333" width="2.0" height="15.0" fill="rgb(230,227,17)" rx="2" ry="2" />
<text  x="388.35" y="1343.5" ></text>
</g>
<g >
<title>[unknown]  (411 samples, 11.53%)</title><rect x="894.1" y="1605" width="136.0" height="15.0" fill="rgb(232,144,27)" rx="2" ry="2" />
<text  x="897.09" y="1615.5" >[unknown] </text>
</g>
<g >
<title>__wake_up_locked_key (1 samples, 0.03%)</title><rect x="1090.4" y="1397" width="0.3" height="15.0" fill="rgb(253,73,26)" rx="2" ry="2" />
<text  x="1093.37" y="1407.5" ></text>
</g>
<g >
<title>inode_permission (1 samples, 0.03%)</title><rect x="1085.1" y="1493" width="0.3" height="15.0" fill="rgb(219,153,27)" rx="2" ry="2" />
<text  x="1088.07" y="1503.5" ></text>
</g>
</g>
</svg>
