<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>__schedule (1 samples, 0.09%)</title><rect x="130.9" y="421" width="1.1" height="15.0" fill="rgb(207,133,23)" rx="2" ry="2" />
<text  x="133.95" y="431.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (268 samples, 23.08%)</title><rect x="555.8" y="501" width="272.4" height="15.0" fill="rgb(252,132,19)" rx="2" ry="2" />
<text  x="558.79" y="511.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>cpu_startup_entry (224 samples, 19.29%)</title><rect x="600.5" y="405" width="227.7" height="15.0" fill="rgb(207,62,38)" rx="2" ry="2" />
<text  x="603.51" y="415.5" >cpu_startup_entry</text>
</g>
<g >
<title>mutex_spin_on_owner (138 samples, 11.89%)</title><rect x="1027.4" y="261" width="140.2" height="15.0" fill="rgb(225,86,31)" rx="2" ry="2" />
<text  x="1030.38" y="271.5" >mutex_spin_on_owner</text>
</g>
<g >
<title>__cmd_record (72 samples, 6.20%)</title><rect x="14.1" y="485" width="73.1" height="15.0" fill="rgb(218,106,10)" rx="2" ry="2" />
<text  x="17.07" y="495.5" >__cmd_re..</text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.17%)</title><rect x="10.0" y="357" width="2.0" height="15.0" fill="rgb(212,213,37)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>read (354 samples, 30.49%)</title><rect x="180.7" y="437" width="359.8" height="15.0" fill="rgb(217,80,43)" rx="2" ry="2" />
<text  x="183.75" y="447.5" >read</text>
</g>
<g >
<title>cpuidle_enter_state (39 samples, 3.36%)</title><rect x="557.8" y="405" width="39.7" height="15.0" fill="rgb(207,200,52)" rx="2" ry="2" />
<text  x="560.82" y="415.5" >cpu..</text>
</g>
<g >
<title>smp_call_function_single (62 samples, 5.34%)</title><rect x="14.1" y="277" width="63.0" height="15.0" fill="rgb(209,27,45)" rx="2" ry="2" />
<text  x="17.07" y="287.5" >smp_ca..</text>
</g>
<g >
<title>hrtimer_interrupt (3 samples, 0.26%)</title><rect x="101.5" y="325" width="3.0" height="15.0" fill="rgb(252,154,24)" rx="2" ry="2" />
<text  x="104.47" y="335.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (1 samples, 0.09%)</title><rect x="86.2" y="149" width="1.0" height="15.0" fill="rgb(237,136,7)" rx="2" ry="2" />
<text  x="89.23" y="159.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 6.20%)</title><rect x="14.1" y="501" width="73.1" height="15.0" fill="rgb(224,213,43)" rx="2" ry="2" />
<text  x="17.07" y="511.5" >[unknown]</text>
</g>
<g >
<title>record_times (1 samples, 0.09%)</title><rect x="523.3" y="229" width="1.0" height="15.0" fill="rgb(215,216,51)" rx="2" ry="2" />
<text  x="526.26" y="239.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.17%)</title><rect x="1182.9" y="421" width="2.0" height="15.0" fill="rgb(213,89,14)" rx="2" ry="2" />
<text  x="1185.89" y="431.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.09%)</title><rect x="12.0" y="389" width="1.0" height="15.0" fill="rgb(228,50,45)" rx="2" ry="2" />
<text  x="15.03" y="399.5" ></text>
</g>
<g >
<title>__perf_event_enable (2 samples, 0.17%)</title><rect x="87.2" y="309" width="2.1" height="15.0" fill="rgb(252,141,2)" rx="2" ry="2" />
<text  x="90.24" y="319.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.34%)</title><rect x="520.2" y="309" width="4.1" height="15.0" fill="rgb(229,200,36)" rx="2" ry="2" />
<text  x="523.22" y="319.5" ></text>
</g>
<g >
<title>__poll (1 samples, 0.09%)</title><rect x="77.1" y="453" width="1.0" height="15.0" fill="rgb(235,1,50)" rx="2" ry="2" />
<text  x="80.08" y="463.5" ></text>
</g>
<g >
<title>rw_verify_area (5 samples, 0.43%)</title><rect x="530.4" y="341" width="5.1" height="15.0" fill="rgb(213,111,30)" rx="2" ry="2" />
<text  x="533.38" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.09%)</title><rect x="101.5" y="309" width="1.0" height="15.0" fill="rgb(210,69,20)" rx="2" ry="2" />
<text  x="104.47" y="319.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (4 samples, 0.34%)</title><rect x="97.4" y="293" width="4.1" height="15.0" fill="rgb(242,37,50)" rx="2" ry="2" />
<text  x="100.41" y="303.5" ></text>
</g>
<g >
<title>cpu_startup_entry (36 samples, 3.10%)</title><rect x="96.4" y="469" width="36.6" height="15.0" fill="rgb(222,97,48)" rx="2" ry="2" />
<text  x="99.39" y="479.5" >cpu..</text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.09%)</title><rect x="104.5" y="261" width="1.0" height="15.0" fill="rgb(248,143,23)" rx="2" ry="2" />
<text  x="107.52" y="271.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.09%)</title><rect x="598.5" y="373" width="1.0" height="15.0" fill="rgb(250,17,44)" rx="2" ry="2" />
<text  x="601.48" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="11.0" y="197" width="1.0" height="15.0" fill="rgb(229,48,34)" rx="2" ry="2" />
<text  x="14.02" y="207.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.09%)</title><rect x="10.0" y="149" width="1.0" height="15.0" fill="rgb(213,61,35)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>event_function_call (62 samples, 5.34%)</title><rect x="14.1" y="293" width="63.0" height="15.0" fill="rgb(236,165,49)" rx="2" ry="2" />
<text  x="17.07" y="303.5" >event_..</text>
</g>
<g >
<title>perf_mmap__push (9 samples, 0.78%)</title><rect x="78.1" y="437" width="9.1" height="15.0" fill="rgb(227,117,32)" rx="2" ry="2" />
<text  x="81.10" y="447.5" ></text>
</g>
<g >
<title>page_counter_try_charge (2 samples, 0.17%)</title><rect x="910.5" y="245" width="2.0" height="15.0" fill="rgb(250,184,26)" rx="2" ry="2" />
<text  x="913.50" y="255.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (11 samples, 0.95%)</title><rect x="891.2" y="293" width="11.2" height="15.0" fill="rgb(218,163,41)" rx="2" ry="2" />
<text  x="894.19" y="303.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (1 samples, 0.09%)</title><rect x="597.5" y="373" width="1.0" height="15.0" fill="rgb(233,207,21)" rx="2" ry="2" />
<text  x="600.46" y="383.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.09%)</title><rect x="559.9" y="277" width="1.0" height="15.0" fill="rgb(249,14,19)" rx="2" ry="2" />
<text  x="562.85" y="287.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.09%)</title><rect x="80.1" y="101" width="1.0" height="15.0" fill="rgb(215,134,16)" rx="2" ry="2" />
<text  x="83.13" y="111.5" ></text>
</g>
<g >
<title>security_bprm_creds_for_exec (1 samples, 0.09%)</title><rect x="13.0" y="325" width="1.1" height="15.0" fill="rgb(221,118,50)" rx="2" ry="2" />
<text  x="16.05" y="335.5" ></text>
</g>
<g >
<title>arch_call_rest_init (224 samples, 19.29%)</title><rect x="600.5" y="437" width="227.7" height="15.0" fill="rgb(216,170,44)" rx="2" ry="2" />
<text  x="603.51" y="447.5" >arch_call_rest_init</text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.09%)</title><rect x="132.0" y="373" width="1.0" height="15.0" fill="rgb(223,144,40)" rx="2" ry="2" />
<text  x="134.96" y="383.5" ></text>
</g>
<g >
<title>pipe_read (308 samples, 26.53%)</title><rect x="217.3" y="325" width="313.1" height="15.0" fill="rgb(242,26,19)" rx="2" ry="2" />
<text  x="220.34" y="335.5" >pipe_read</text>
</g>
<g >
<title>read16 (356 samples, 30.66%)</title><rect x="180.7" y="517" width="361.9" height="15.0" fill="rgb(251,120,3)" rx="2" ry="2" />
<text  x="183.75" y="527.5" >read16</text>
</g>
<g >
<title>get_new_window_size (1 samples, 0.09%)</title><rect x="11.0" y="325" width="1.0" height="15.0" fill="rgb(205,7,10)" rx="2" ry="2" />
<text  x="14.02" y="335.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (2 samples, 0.17%)</title><rect x="910.5" y="261" width="2.0" height="15.0" fill="rgb(234,193,6)" rx="2" ry="2" />
<text  x="913.50" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (331 samples, 28.51%)</title><rect x="846.5" y="405" width="336.4" height="15.0" fill="rgb(221,211,38)" rx="2" ry="2" />
<text  x="849.47" y="415.5" >do_syscall_64</text>
</g>
<g >
<title>swapper (281 samples, 24.20%)</title><rect x="542.6" y="517" width="285.6" height="15.0" fill="rgb(230,188,36)" rx="2" ry="2" />
<text  x="545.58" y="527.5" >swapper</text>
</g>
<g >
<title>record__write (8 samples, 0.69%)</title><rect x="79.1" y="405" width="8.1" height="15.0" fill="rgb(207,54,32)" rx="2" ry="2" />
<text  x="82.11" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (8 samples, 0.69%)</title><rect x="894.2" y="277" width="8.2" height="15.0" fill="rgb(216,62,54)" rx="2" ry="2" />
<text  x="897.24" y="287.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.09%)</title><rect x="105.5" y="277" width="1.1" height="15.0" fill="rgb(246,167,52)" rx="2" ry="2" />
<text  x="108.54" y="287.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.09%)</title><rect x="105.5" y="229" width="1.1" height="15.0" fill="rgb(239,65,33)" rx="2" ry="2" />
<text  x="108.54" y="239.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.09%)</title><rect x="557.8" y="293" width="1.0" height="15.0" fill="rgb(248,131,30)" rx="2" ry="2" />
<text  x="560.82" y="303.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.09%)</title><rect x="557.8" y="357" width="1.0" height="15.0" fill="rgb(217,41,8)" rx="2" ry="2" />
<text  x="560.82" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (333 samples, 28.68%)</title><rect x="844.4" y="421" width="338.5" height="15.0" fill="rgb(244,59,47)" rx="2" ry="2" />
<text  x="847.44" y="431.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>rb_next (1 samples, 0.09%)</title><rect x="132.0" y="357" width="1.0" height="15.0" fill="rgb(238,211,11)" rx="2" ry="2" />
<text  x="134.96" y="367.5" ></text>
</g>
<g >
<title>do_idle (44 samples, 3.79%)</title><rect x="555.8" y="453" width="44.7" height="15.0" fill="rgb(206,224,9)" rx="2" ry="2" />
<text  x="558.79" y="463.5" >do_i..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="77.1" y="421" width="1.0" height="15.0" fill="rgb(216,144,7)" rx="2" ry="2" />
<text  x="80.08" y="431.5" ></text>
</g>
<g >
<title>page_counter_uncharge (1 samples, 0.09%)</title><rect x="239.7" y="245" width="1.0" height="15.0" fill="rgb(216,45,51)" rx="2" ry="2" />
<text  x="242.70" y="255.5" ></text>
</g>
<g >
<title>handle_edge_irq (4 samples, 0.34%)</title><rect x="97.4" y="341" width="4.1" height="15.0" fill="rgb(242,46,22)" rx="2" ry="2" />
<text  x="100.41" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3 samples, 0.26%)</title><rect x="101.5" y="341" width="3.0" height="15.0" fill="rgb(246,172,50)" rx="2" ry="2" />
<text  x="104.47" y="351.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.09%)</title><rect x="82.2" y="85" width="1.0" height="15.0" fill="rgb(251,169,32)" rx="2" ry="2" />
<text  x="85.16" y="95.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.09%)</title><rect x="523.3" y="213" width="1.0" height="15.0" fill="rgb(211,35,7)" rx="2" ry="2" />
<text  x="526.26" y="223.5" ></text>
</g>
<g >
<title>write16 (356 samples, 30.66%)</title><rect x="828.2" y="517" width="361.8" height="15.0" fill="rgb(208,154,32)" rx="2" ry="2" />
<text  x="831.17" y="527.5" >write16</text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.09%)</title><rect x="1187.0" y="469" width="1.0" height="15.0" fill="rgb(242,17,39)" rx="2" ry="2" />
<text  x="1189.95" y="479.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.52%)</title><rect x="194.0" y="357" width="6.1" height="15.0" fill="rgb(235,128,7)" rx="2" ry="2" />
<text  x="196.96" y="367.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="11.0" y="261" width="1.0" height="15.0" fill="rgb(249,210,40)" rx="2" ry="2" />
<text  x="14.02" y="271.5" ></text>
</g>
<g >
<title>__libc_start_main (354 samples, 30.49%)</title><rect x="180.7" y="485" width="359.8" height="15.0" fill="rgb(226,127,37)" rx="2" ry="2" />
<text  x="183.75" y="495.5" >__libc_start_main</text>
</g>
<g >
<title>do_fault_around (1 samples, 0.09%)</title><rect x="10.0" y="165" width="1.0" height="15.0" fill="rgb(228,92,2)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.09%)</title><rect x="105.5" y="293" width="1.1" height="15.0" fill="rgb(250,191,3)" rx="2" ry="2" />
<text  x="108.54" y="303.5" ></text>
</g>
<g >
<title>apparmor_bprm_creds_for_exec (1 samples, 0.09%)</title><rect x="13.0" y="309" width="1.1" height="15.0" fill="rgb(206,87,15)" rx="2" ry="2" />
<text  x="16.05" y="319.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.09%)</title><rect x="13.0" y="517" width="1.1" height="15.0" fill="rgb(222,7,49)" rx="2" ry="2" />
<text  x="16.05" y="527.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (47 samples, 4.05%)</title><rect x="133.0" y="469" width="47.7" height="15.0" fill="rgb(209,94,21)" rx="2" ry="2" />
<text  x="135.98" y="479.5" >x86_..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.09%)</title><rect x="557.8" y="277" width="1.0" height="15.0" fill="rgb(246,81,45)" rx="2" ry="2" />
<text  x="560.82" y="287.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.09%)</title><rect x="1187.0" y="453" width="1.0" height="15.0" fill="rgb(221,46,44)" rx="2" ry="2" />
<text  x="1189.95" y="463.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.09%)</title><rect x="83.2" y="117" width="1.0" height="15.0" fill="rgb(212,39,2)" rx="2" ry="2" />
<text  x="86.18" y="127.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.09%)</title><rect x="83.2" y="133" width="1.0" height="15.0" fill="rgb(213,82,31)" rx="2" ry="2" />
<text  x="86.18" y="143.5" ></text>
</g>
<g >
<title>perf_ioctl (62 samples, 5.34%)</title><rect x="14.1" y="357" width="63.0" height="15.0" fill="rgb(212,16,12)" rx="2" ry="2" />
<text  x="17.07" y="367.5" >perf_i..</text>
</g>
<g >
<title>_perf_event_enable (62 samples, 5.34%)</title><rect x="14.1" y="309" width="63.0" height="15.0" fill="rgb(211,72,4)" rx="2" ry="2" />
<text  x="17.07" y="319.5" >_perf_..</text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.09%)</title><rect x="132.0" y="421" width="1.0" height="15.0" fill="rgb(216,46,6)" rx="2" ry="2" />
<text  x="134.96" y="431.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.09%)</title><rect x="1187.0" y="373" width="1.0" height="15.0" fill="rgb(216,123,26)" rx="2" ry="2" />
<text  x="1189.95" y="383.5" ></text>
</g>
<g >
<title>check_cpu_stall (1 samples, 0.09%)</title><rect x="103.5" y="213" width="1.0" height="15.0" fill="rgb(214,196,39)" rx="2" ry="2" />
<text  x="106.51" y="223.5" ></text>
</g>
<g >
<title>write (350 samples, 30.15%)</title><rect x="829.2" y="437" width="355.7" height="15.0" fill="rgb(243,122,54)" rx="2" ry="2" />
<text  x="832.19" y="447.5" >write</text>
</g>
<g >
<title>psi_task_change (2 samples, 0.17%)</title><rect x="522.2" y="261" width="2.1" height="15.0" fill="rgb(227,60,46)" rx="2" ry="2" />
<text  x="525.25" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (62 samples, 5.34%)</title><rect x="14.1" y="373" width="63.0" height="15.0" fill="rgb(224,5,21)" rx="2" ry="2" />
<text  x="17.07" y="383.5" >__x64_..</text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.17%)</title><rect x="10.0" y="469" width="2.0" height="15.0" fill="rgb(220,26,51)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>bprm_execve (1 samples, 0.09%)</title><rect x="13.0" y="357" width="1.1" height="15.0" fill="rgb(253,171,53)" rx="2" ry="2" />
<text  x="16.05" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5 samples, 0.43%)</title><rect x="101.5" y="389" width="5.1" height="15.0" fill="rgb(207,157,5)" rx="2" ry="2" />
<text  x="104.47" y="399.5" ></text>
</g>
<g >
<title>main (354 samples, 30.49%)</title><rect x="180.7" y="453" width="359.8" height="15.0" fill="rgb(245,8,27)" rx="2" ry="2" />
<text  x="183.75" y="463.5" >main</text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="12.0" y="421" width="1.0" height="15.0" fill="rgb(210,97,46)" rx="2" ry="2" />
<text  x="15.03" y="431.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.09%)</title><rect x="557.8" y="213" width="1.0" height="15.0" fill="rgb(243,79,8)" rx="2" ry="2" />
<text  x="560.82" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1187.0" y="485" width="1.0" height="15.0" fill="rgb(215,2,25)" rx="2" ry="2" />
<text  x="1189.95" y="495.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (1 samples, 0.09%)</title><rect x="893.2" y="213" width="1.0" height="15.0" fill="rgb(207,147,28)" rx="2" ry="2" />
<text  x="896.22" y="223.5" ></text>
</g>
<g >
<title>_rl_init_terminal_io (1 samples, 0.09%)</title><rect x="11.0" y="293" width="1.0" height="15.0" fill="rgb(205,19,9)" rx="2" ry="2" />
<text  x="14.02" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.09%)</title><rect x="1180.9" y="389" width="1.0" height="15.0" fill="rgb(205,55,53)" rx="2" ry="2" />
<text  x="1183.85" y="399.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.09%)</title><rect x="103.5" y="245" width="1.0" height="15.0" fill="rgb(211,21,8)" rx="2" ry="2" />
<text  x="106.51" y="255.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (1 samples, 0.09%)</title><rect x="79.1" y="149" width="1.0" height="15.0" fill="rgb(229,181,8)" rx="2" ry="2" />
<text  x="82.11" y="159.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.17%)</title><rect x="87.2" y="373" width="2.1" height="15.0" fill="rgb(205,3,3)" rx="2" ry="2" />
<text  x="90.24" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_enable (2 samples, 0.17%)</title><rect x="87.2" y="277" width="2.1" height="15.0" fill="rgb(240,143,37)" rx="2" ry="2" />
<text  x="90.24" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="557.8" y="341" width="1.0" height="15.0" fill="rgb(227,48,46)" rx="2" ry="2" />
<text  x="560.82" y="351.5" ></text>
</g>
<g >
<title>security_file_permission (4 samples, 0.34%)</title><rect x="1176.8" y="325" width="4.1" height="15.0" fill="rgb(207,175,16)" rx="2" ry="2" />
<text  x="1179.79" y="335.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.09%)</title><rect x="539.5" y="421" width="1.0" height="15.0" fill="rgb(208,119,51)" rx="2" ry="2" />
<text  x="542.53" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.09%)</title><rect x="1187.0" y="357" width="1.0" height="15.0" fill="rgb(218,216,27)" rx="2" ry="2" />
<text  x="1189.95" y="367.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.09%)</title><rect x="521.2" y="229" width="1.0" height="15.0" fill="rgb(222,203,54)" rx="2" ry="2" />
<text  x="524.23" y="239.5" ></text>
</g>
<g >
<title>mutex_lock (145 samples, 12.49%)</title><rect x="371.8" y="309" width="147.4" height="15.0" fill="rgb(236,17,2)" rx="2" ry="2" />
<text  x="374.83" y="319.5" >mutex_lock</text>
</g>
<g >
<title>vfs_read (1 samples, 0.09%)</title><rect x="540.5" y="437" width="1.1" height="15.0" fill="rgb(223,29,6)" rx="2" ry="2" />
<text  x="543.54" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="12.0" y="437" width="1.0" height="15.0" fill="rgb(206,67,37)" rx="2" ry="2" />
<text  x="15.03" y="447.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.09%)</title><rect x="130.9" y="405" width="1.1" height="15.0" fill="rgb(248,108,32)" rx="2" ry="2" />
<text  x="133.95" y="415.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (224 samples, 19.29%)</title><rect x="600.5" y="469" width="227.7" height="15.0" fill="rgb(218,57,36)" rx="2" ry="2" />
<text  x="603.51" y="479.5" >x86_64_start_reservations</text>
</g>
<g >
<title>__libc_start_main (351 samples, 30.23%)</title><rect x="828.2" y="485" width="356.7" height="15.0" fill="rgb(231,163,51)" rx="2" ry="2" />
<text  x="831.17" y="495.5" >__libc_start_main</text>
</g>
<g >
<title>osq_lock (2 samples, 0.17%)</title><rect x="1174.8" y="277" width="2.0" height="15.0" fill="rgb(215,102,30)" rx="2" ry="2" />
<text  x="1177.75" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.69%)</title><rect x="79.1" y="341" width="8.1" height="15.0" fill="rgb(236,82,31)" rx="2" ry="2" />
<text  x="82.11" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.09%)</title><rect x="132.0" y="437" width="1.0" height="15.0" fill="rgb(231,17,18)" rx="2" ry="2" />
<text  x="134.96" y="447.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="10.0" y="197" width="1.0" height="15.0" fill="rgb(218,175,18)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (9 samples, 0.78%)</title><rect x="78.1" y="453" width="9.1" height="15.0" fill="rgb(234,141,45)" rx="2" ry="2" />
<text  x="81.10" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (2 samples, 0.17%)</title><rect x="87.2" y="469" width="2.1" height="15.0" fill="rgb(253,184,18)" rx="2" ry="2" />
<text  x="90.24" y="479.5" ></text>
</g>
<g >
<title>rw_verify_area (4 samples, 0.34%)</title><rect x="1176.8" y="341" width="4.1" height="15.0" fill="rgb(243,11,48)" rx="2" ry="2" />
<text  x="1179.79" y="351.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.09%)</title><rect x="83.2" y="101" width="1.0" height="15.0" fill="rgb(250,91,42)" rx="2" ry="2" />
<text  x="86.18" y="111.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.09%)</title><rect x="893.2" y="277" width="1.0" height="15.0" fill="rgb(226,162,0)" rx="2" ry="2" />
<text  x="896.22" y="287.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (224 samples, 19.29%)</title><rect x="600.5" y="485" width="227.7" height="15.0" fill="rgb(238,215,4)" rx="2" ry="2" />
<text  x="603.51" y="495.5" >x86_64_start_kernel</text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.09%)</title><rect x="12.0" y="405" width="1.0" height="15.0" fill="rgb(205,134,49)" rx="2" ry="2" />
<text  x="15.03" y="415.5" ></text>
</g>
<g >
<title>_start (354 samples, 30.49%)</title><rect x="180.7" y="501" width="359.8" height="15.0" fill="rgb(217,190,38)" rx="2" ry="2" />
<text  x="183.75" y="511.5" >_start</text>
</g>
<g >
<title>_perf_ioctl (62 samples, 5.34%)</title><rect x="14.1" y="341" width="63.0" height="15.0" fill="rgb(211,37,13)" rx="2" ry="2" />
<text  x="17.07" y="351.5" >_perf_..</text>
</g>
<g >
<title>copy_page_from_iter (58 samples, 5.00%)</title><rect x="914.6" y="309" width="58.9" height="15.0" fill="rgb(253,159,14)" rx="2" ry="2" />
<text  x="917.57" y="319.5" >copy_p..</text>
</g>
<g >
<title>[bash] (1 samples, 0.09%)</title><rect x="10.0" y="341" width="1.0" height="15.0" fill="rgb(253,153,2)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>__mutex_lock_slowpath (127 samples, 10.94%)</title><rect x="390.1" y="293" width="129.1" height="15.0" fill="rgb(208,79,6)" rx="2" ry="2" />
<text  x="393.12" y="303.5" >__mutex_lock_slo..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.26%)</title><rect x="1184.9" y="501" width="3.1" height="15.0" fill="rgb(218,12,8)" rx="2" ry="2" />
<text  x="1187.92" y="511.5" ></text>
</g>
<g >
<title>ioctl (62 samples, 5.34%)</title><rect x="14.1" y="421" width="63.0" height="15.0" fill="rgb(234,0,13)" rx="2" ry="2" />
<text  x="17.07" y="431.5" >ioctl</text>
</g>
<g >
<title>cpuidle_enter_state (47 samples, 4.05%)</title><rect x="133.0" y="341" width="47.7" height="15.0" fill="rgb(246,83,51)" rx="2" ry="2" />
<text  x="135.98" y="351.5" >cpui..</text>
</g>
<g >
<title>anon_pipe_buf_release (2 samples, 0.17%)</title><rect x="238.7" y="309" width="2.0" height="15.0" fill="rgb(241,105,22)" rx="2" ry="2" />
<text  x="241.68" y="319.5" ></text>
</g>
<g >
<title>perf_ioctl (2 samples, 0.17%)</title><rect x="87.2" y="453" width="2.1" height="15.0" fill="rgb(250,105,45)" rx="2" ry="2" />
<text  x="90.24" y="463.5" ></text>
</g>
<g >
<title>aa_file_perm (2 samples, 0.17%)</title><rect x="1178.8" y="293" width="2.1" height="15.0" fill="rgb(222,54,33)" rx="2" ry="2" />
<text  x="1181.82" y="303.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (224 samples, 19.29%)</title><rect x="600.5" y="325" width="227.7" height="15.0" fill="rgb(212,41,5)" rx="2" ry="2" />
<text  x="603.51" y="335.5" >mwait_idle_with_hints.constpro..</text>
</g>
<g >
<title>profile_transition (1 samples, 0.09%)</title><rect x="13.0" y="293" width="1.1" height="15.0" fill="rgb(246,46,16)" rx="2" ry="2" />
<text  x="16.05" y="303.5" ></text>
</g>
<g >
<title>handle_irq_event (4 samples, 0.34%)</title><rect x="97.4" y="325" width="4.1" height="15.0" fill="rgb(252,19,38)" rx="2" ry="2" />
<text  x="100.41" y="335.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (12 samples, 1.03%)</title><rect x="890.2" y="309" width="12.2" height="15.0" fill="rgb(252,95,6)" rx="2" ry="2" />
<text  x="893.17" y="319.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.09%)</title><rect x="11.0" y="133" width="1.0" height="15.0" fill="rgb(237,167,9)" rx="2" ry="2" />
<text  x="14.02" y="143.5" ></text>
</g>
<g >
<title>tgetent (1 samples, 0.09%)</title><rect x="11.0" y="277" width="1.0" height="15.0" fill="rgb(241,151,42)" rx="2" ry="2" />
<text  x="14.02" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.17%)</title><rect x="87.2" y="501" width="2.1" height="15.0" fill="rgb(213,45,0)" rx="2" ry="2" />
<text  x="90.24" y="511.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.17%)</title><rect x="10.0" y="405" width="2.0" height="15.0" fill="rgb(248,105,27)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (83 samples, 7.15%)</title><rect x="96.4" y="501" width="84.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="99.39" y="511.5" >secondary..</text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (1 samples, 0.09%)</title><rect x="132.0" y="389" width="1.0" height="15.0" fill="rgb(214,63,34)" rx="2" ry="2" />
<text  x="134.96" y="399.5" ></text>
</g>
<g >
<title>perf (74 samples, 6.37%)</title><rect x="14.1" y="517" width="75.2" height="15.0" fill="rgb(253,219,25)" rx="2" ry="2" />
<text  x="17.07" y="527.5" >perf</text>
</g>
<g >
<title>do_execveat_common (1 samples, 0.09%)</title><rect x="13.0" y="373" width="1.1" height="15.0" fill="rgb(235,88,47)" rx="2" ry="2" />
<text  x="16.05" y="383.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.17%)</title><rect x="104.5" y="341" width="2.1" height="15.0" fill="rgb(253,140,10)" rx="2" ry="2" />
<text  x="107.52" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="13.0" y="453" width="1.1" height="15.0" fill="rgb(246,94,36)" rx="2" ry="2" />
<text  x="16.05" y="463.5" ></text>
</g>
<g >
<title>current_time (4 samples, 0.34%)</title><rect x="526.3" y="277" width="4.1" height="15.0" fill="rgb(234,204,43)" rx="2" ry="2" />
<text  x="529.31" y="287.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.34%)</title><rect x="520.2" y="293" width="4.1" height="15.0" fill="rgb(253,134,42)" rx="2" ry="2" />
<text  x="523.22" y="303.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="10.0" y="277" width="1.0" height="15.0" fill="rgb(228,181,31)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="77.1" y="437" width="1.0" height="15.0" fill="rgb(212,85,46)" rx="2" ry="2" />
<text  x="80.08" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (354 samples, 30.49%)</title><rect x="180.7" y="469" width="359.8" height="15.0" fill="rgb(241,117,52)" rx="2" ry="2" />
<text  x="183.75" y="479.5" >[libc.so.6]</text>
</g>
<g >
<title>load_balance (1 samples, 0.09%)</title><rect x="559.9" y="261" width="1.0" height="15.0" fill="rgb(239,62,9)" rx="2" ry="2" />
<text  x="562.85" y="271.5" ></text>
</g>
<g >
<title>rest_init (224 samples, 19.29%)</title><rect x="600.5" y="421" width="227.7" height="15.0" fill="rgb(222,76,7)" rx="2" ry="2" />
<text  x="603.51" y="431.5" >rest_init</text>
</g>
<g >
<title>wait_for (1 samples, 0.09%)</title><rect x="11.0" y="341" width="1.0" height="15.0" fill="rgb(231,14,45)" rx="2" ry="2" />
<text  x="14.02" y="351.5" ></text>
</g>
<g >
<title>llist_add_batch (1 samples, 0.09%)</title><rect x="893.2" y="197" width="1.0" height="15.0" fill="rgb(239,43,38)" rx="2" ry="2" />
<text  x="896.22" y="207.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.17%)</title><rect x="104.5" y="357" width="2.1" height="15.0" fill="rgb(228,159,41)" rx="2" ry="2" />
<text  x="107.52" y="367.5" ></text>
</g>
<g >
<title>perf_mmap__read_head (1 samples, 0.09%)</title><rect x="78.1" y="421" width="1.0" height="15.0" fill="rgb(242,199,24)" rx="2" ry="2" />
<text  x="81.10" y="431.5" ></text>
</g>
<g >
<title>_start (2 samples, 0.17%)</title><rect x="10.0" y="501" width="2.0" height="15.0" fill="rgb(220,187,3)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.17%)</title><rect x="10.0" y="485" width="2.0" height="15.0" fill="rgb(250,224,21)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>set_next_entity (1 samples, 0.09%)</title><rect x="598.5" y="389" width="1.0" height="15.0" fill="rgb(243,163,18)" rx="2" ry="2" />
<text  x="601.48" y="399.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.09%)</title><rect x="559.9" y="213" width="1.0" height="15.0" fill="rgb(228,212,29)" rx="2" ry="2" />
<text  x="562.85" y="223.5" ></text>
</g>
<g >
<title>psi_group_change (2 samples, 0.17%)</title><rect x="522.2" y="245" width="2.1" height="15.0" fill="rgb(246,51,44)" rx="2" ry="2" />
<text  x="525.25" y="255.5" ></text>
</g>
<g >
<title>process_timeout (1 samples, 0.09%)</title><rect x="105.5" y="245" width="1.1" height="15.0" fill="rgb(248,67,12)" rx="2" ry="2" />
<text  x="108.54" y="255.5" ></text>
</g>
<g >
<title>psi_task_switch (1 samples, 0.09%)</title><rect x="599.5" y="405" width="1.0" height="15.0" fill="rgb(251,29,25)" rx="2" ry="2" />
<text  x="602.49" y="415.5" ></text>
</g>
<g >
<title>rest_init (47 samples, 4.05%)</title><rect x="133.0" y="421" width="47.7" height="15.0" fill="rgb(249,170,48)" rx="2" ry="2" />
<text  x="135.98" y="431.5" >rest..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (47 samples, 4.05%)</title><rect x="133.0" y="325" width="47.7" height="15.0" fill="rgb(228,223,46)" rx="2" ry="2" />
<text  x="135.98" y="335.5" >mwai..</text>
</g>
<g >
<title>execute_command (2 samples, 0.17%)</title><rect x="10.0" y="421" width="2.0" height="15.0" fill="rgb(218,77,29)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.09%)</title><rect x="11.0" y="245" width="1.0" height="15.0" fill="rgb(211,129,8)" rx="2" ry="2" />
<text  x="14.02" y="255.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="893.2" y="229" width="1.0" height="15.0" fill="rgb(238,189,33)" rx="2" ry="2" />
<text  x="896.22" y="239.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="81.1" y="69" width="1.1" height="15.0" fill="rgb(212,156,6)" rx="2" ry="2" />
<text  x="84.15" y="79.5" ></text>
</g>
<g >
<title>vfs_write (327 samples, 28.17%)</title><rect x="848.5" y="357" width="332.4" height="15.0" fill="rgb(217,192,39)" rx="2" ry="2" />
<text  x="851.50" y="367.5" >vfs_write</text>
</g>
<g >
<title>mem_cgroup_uncharge (1 samples, 0.09%)</title><rect x="239.7" y="277" width="1.0" height="15.0" fill="rgb(220,183,5)" rx="2" ry="2" />
<text  x="242.70" y="287.5" ></text>
</g>
<g >
<title>remote_function (62 samples, 5.34%)</title><rect x="14.1" y="245" width="63.0" height="15.0" fill="rgb(205,207,22)" rx="2" ry="2" />
<text  x="17.07" y="255.5" >remote..</text>
</g>
<g >
<title>ksys_write (327 samples, 28.17%)</title><rect x="848.5" y="373" width="332.4" height="15.0" fill="rgb(231,54,51)" rx="2" ry="2" />
<text  x="851.50" y="383.5" >ksys_write</text>
</g>
<g >
<title>new_sync_read (1 samples, 0.09%)</title><rect x="540.5" y="421" width="1.1" height="15.0" fill="rgb(251,34,52)" rx="2" ry="2" />
<text  x="543.54" y="431.5" ></text>
</g>
<g >
<title>osq_unlock (7 samples, 0.60%)</title><rect x="1167.6" y="261" width="7.2" height="15.0" fill="rgb(221,33,33)" rx="2" ry="2" />
<text  x="1170.64" y="271.5" ></text>
</g>
<g >
<title>ext4_fc_track_inode (1 samples, 0.09%)</title><rect x="83.2" y="53" width="1.0" height="15.0" fill="rgb(228,60,29)" rx="2" ry="2" />
<text  x="86.18" y="63.5" ></text>
</g>
<g >
<title>record__mmap_read_all (9 samples, 0.78%)</title><rect x="78.1" y="469" width="9.1" height="15.0" fill="rgb(219,229,9)" rx="2" ry="2" />
<text  x="81.10" y="479.5" ></text>
</g>
<g >
<title>__evlist__enable (62 samples, 5.34%)</title><rect x="14.1" y="469" width="63.0" height="15.0" fill="rgb(238,44,6)" rx="2" ry="2" />
<text  x="17.07" y="479.5" >__evli..</text>
</g>
<g >
<title>atime_needs_update (5 samples, 0.43%)</title><rect x="525.3" y="293" width="5.1" height="15.0" fill="rgb(248,149,25)" rx="2" ry="2" />
<text  x="528.30" y="303.5" ></text>
</g>
<g >
<title>fdarray__poll (1 samples, 0.09%)</title><rect x="77.1" y="469" width="1.0" height="15.0" fill="rgb(249,66,18)" rx="2" ry="2" />
<text  x="80.08" y="479.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.09%)</title><rect x="598.5" y="405" width="1.0" height="15.0" fill="rgb(218,75,27)" rx="2" ry="2" />
<text  x="601.48" y="415.5" ></text>
</g>
<g >
<title>main (351 samples, 30.23%)</title><rect x="828.2" y="453" width="356.7" height="15.0" fill="rgb(222,98,22)" rx="2" ry="2" />
<text  x="831.17" y="463.5" >main</text>
</g>
<g >
<title>mutex_lock (199 samples, 17.14%)</title><rect x="974.5" y="309" width="202.3" height="15.0" fill="rgb(209,111,7)" rx="2" ry="2" />
<text  x="977.53" y="319.5" >mutex_lock</text>
</g>
<g >
<title>[bash] (2 samples, 0.17%)</title><rect x="10.0" y="389" width="2.0" height="15.0" fill="rgb(253,145,42)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.17%)</title><rect x="104.5" y="325" width="2.1" height="15.0" fill="rgb(214,124,19)" rx="2" ry="2" />
<text  x="107.52" y="335.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 0.09%)</title><rect x="597.5" y="405" width="1.0" height="15.0" fill="rgb(236,132,16)" rx="2" ry="2" />
<text  x="600.46" y="415.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.09%)</title><rect x="103.5" y="261" width="1.0" height="15.0" fill="rgb(231,141,54)" rx="2" ry="2" />
<text  x="106.51" y="271.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.17%)</title><rect x="87.2" y="245" width="2.1" height="15.0" fill="rgb(231,140,51)" rx="2" ry="2" />
<text  x="90.24" y="255.5" ></text>
</g>
<g >
<title>all (1,161 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(224,10,26)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="10.0" y="213" width="1.0" height="15.0" fill="rgb(235,82,24)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.26%)</title><rect x="557.8" y="389" width="3.1" height="15.0" fill="rgb(253,122,24)" rx="2" ry="2" />
<text  x="560.82" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (7 samples, 0.60%)</title><rect x="902.4" y="309" width="7.1" height="15.0" fill="rgb(229,105,35)" rx="2" ry="2" />
<text  x="905.37" y="319.5" ></text>
</g>
<g >
<title>start_secondary (36 samples, 3.10%)</title><rect x="96.4" y="485" width="36.6" height="15.0" fill="rgb(242,65,41)" rx="2" ry="2" />
<text  x="99.39" y="495.5" >sta..</text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.09%)</title><rect x="105.5" y="261" width="1.1" height="15.0" fill="rgb(224,76,38)" rx="2" ry="2" />
<text  x="108.54" y="271.5" ></text>
</g>
<g >
<title>__read_once_size (1 samples, 0.09%)</title><rect x="78.1" y="389" width="1.0" height="15.0" fill="rgb(244,128,41)" rx="2" ry="2" />
<text  x="81.10" y="399.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.09%)</title><rect x="13.0" y="501" width="1.1" height="15.0" fill="rgb(206,158,15)" rx="2" ry="2" />
<text  x="16.05" y="511.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.09%)</title><rect x="540.5" y="357" width="1.1" height="15.0" fill="rgb(236,70,41)" rx="2" ry="2" />
<text  x="543.54" y="367.5" ></text>
</g>
<g >
<title>event_function (2 samples, 0.17%)</title><rect x="87.2" y="325" width="2.1" height="15.0" fill="rgb(222,176,42)" rx="2" ry="2" />
<text  x="90.24" y="335.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.09%)</title><rect x="81.1" y="53" width="1.1" height="15.0" fill="rgb(238,171,39)" rx="2" ry="2" />
<text  x="84.15" y="63.5" ></text>
</g>
<g >
<title>ion (8 samples, 0.69%)</title><rect x="79.1" y="389" width="8.1" height="15.0" fill="rgb(231,142,22)" rx="2" ry="2" />
<text  x="82.11" y="399.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.09%)</title><rect x="103.5" y="293" width="1.0" height="15.0" fill="rgb(241,158,18)" rx="2" ry="2" />
<text  x="106.51" y="303.5" ></text>
</g>
<g >
<title>mutex_unlock (8 samples, 0.69%)</title><rect x="209.2" y="325" width="8.1" height="15.0" fill="rgb(239,130,53)" rx="2" ry="2" />
<text  x="212.21" y="335.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.09%)</title><rect x="893.2" y="261" width="1.0" height="15.0" fill="rgb(233,7,7)" rx="2" ry="2" />
<text  x="896.22" y="271.5" ></text>
</g>
<g >
<title>_perf_ioctl (2 samples, 0.17%)</title><rect x="87.2" y="437" width="2.1" height="15.0" fill="rgb(240,43,28)" rx="2" ry="2" />
<text  x="90.24" y="447.5" ></text>
</g>
<g >
<title>bash (3 samples, 0.26%)</title><rect x="10.0" y="517" width="3.0" height="15.0" fill="rgb(223,44,37)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>write (8 samples, 0.69%)</title><rect x="79.1" y="373" width="8.1" height="15.0" fill="rgb(236,225,52)" rx="2" ry="2" />
<text  x="82.11" y="383.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.09%)</title><rect x="1187.0" y="437" width="1.0" height="15.0" fill="rgb(206,167,19)" rx="2" ry="2" />
<text  x="1189.95" y="447.5" ></text>
</g>
<g >
<title>apparmor_file_permission (4 samples, 0.34%)</title><rect x="1176.8" y="309" width="4.1" height="15.0" fill="rgb(246,158,27)" rx="2" ry="2" />
<text  x="1179.79" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="13.0" y="405" width="1.1" height="15.0" fill="rgb(226,47,9)" rx="2" ry="2" />
<text  x="16.05" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.69%)</title><rect x="79.1" y="357" width="8.1" height="15.0" fill="rgb(237,198,11)" rx="2" ry="2" />
<text  x="82.11" y="367.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (2 samples, 0.17%)</title><rect x="87.2" y="421" width="2.1" height="15.0" fill="rgb(220,13,38)" rx="2" ry="2" />
<text  x="90.24" y="431.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="10.0" y="229" width="1.0" height="15.0" fill="rgb(229,150,25)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>__mutex_lock.constprop.0 (116 samples, 9.99%)</title><rect x="390.1" y="277" width="117.9" height="15.0" fill="rgb(229,6,41)" rx="2" ry="2" />
<text  x="393.12" y="287.5" >__mutex_lock.c..</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.09%)</title><rect x="12.0" y="485" width="1.0" height="15.0" fill="rgb(217,64,30)" rx="2" ry="2" />
<text  x="15.03" y="495.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.09%)</title><rect x="83.2" y="149" width="1.0" height="15.0" fill="rgb(225,106,19)" rx="2" ry="2" />
<text  x="86.18" y="159.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (1 samples, 0.09%)</title><rect x="13.0" y="469" width="1.1" height="15.0" fill="rgb(209,43,23)" rx="2" ry="2" />
<text  x="16.05" y="479.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.09%)</title><rect x="243.8" y="277" width="1.0" height="15.0" fill="rgb(250,136,35)" rx="2" ry="2" />
<text  x="246.76" y="287.5" ></text>
</g>
<g >
<title>set_next_entity (1 samples, 0.09%)</title><rect x="130.9" y="389" width="1.1" height="15.0" fill="rgb(247,214,43)" rx="2" ry="2" />
<text  x="133.95" y="399.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.09%)</title><rect x="103.5" y="229" width="1.0" height="15.0" fill="rgb(208,129,25)" rx="2" ry="2" />
<text  x="106.51" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="540.5" y="485" width="1.1" height="15.0" fill="rgb(229,1,53)" rx="2" ry="2" />
<text  x="543.54" y="495.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (62 samples, 5.34%)</title><rect x="14.1" y="325" width="63.0" height="15.0" fill="rgb(227,70,30)" rx="2" ry="2" />
<text  x="17.07" y="335.5" >perf_e..</text>
</g>
<g >
<title>ext4_fc_track_template (1 samples, 0.09%)</title><rect x="83.2" y="37" width="1.0" height="15.0" fill="rgb(243,55,14)" rx="2" ry="2" />
<text  x="86.18" y="47.5" ></text>
</g>
<g >
<title>__x64_sys_read (336 samples, 28.94%)</title><rect x="194.0" y="389" width="341.5" height="15.0" fill="rgb(231,216,32)" rx="2" ry="2" />
<text  x="196.96" y="399.5" >__x64_sys_read</text>
</g>
<g >
<title>iov_iter_init (1 samples, 0.09%)</title><rect x="850.5" y="341" width="1.1" height="15.0" fill="rgb(215,174,32)" rx="2" ry="2" />
<text  x="853.53" y="351.5" ></text>
</g>
<g >
<title>ctx_resched (2 samples, 0.17%)</title><rect x="87.2" y="293" width="2.1" height="15.0" fill="rgb(235,25,48)" rx="2" ry="2" />
<text  x="90.24" y="303.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.09%)</title><rect x="532.4" y="309" width="1.0" height="15.0" fill="rgb(241,33,25)" rx="2" ry="2" />
<text  x="535.41" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (351 samples, 30.23%)</title><rect x="828.2" y="469" width="356.7" height="15.0" fill="rgb(209,177,34)" rx="2" ry="2" />
<text  x="831.17" y="479.5" >[libc.so.6]</text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.17%)</title><rect x="891.2" y="277" width="2.0" height="15.0" fill="rgb(237,74,42)" rx="2" ry="2" />
<text  x="894.19" y="287.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.09%)</title><rect x="80.1" y="53" width="1.0" height="15.0" fill="rgb(223,20,30)" rx="2" ry="2" />
<text  x="83.13" y="63.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.09%)</title><rect x="13.0" y="389" width="1.1" height="15.0" fill="rgb(217,68,27)" rx="2" ry="2" />
<text  x="16.05" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (7 samples, 0.60%)</title><rect x="837.3" y="421" width="7.1" height="15.0" fill="rgb(225,26,54)" rx="2" ry="2" />
<text  x="840.32" y="431.5" ></text>
</g>
<g >
<title>copy_page_from_iter (2 samples, 0.17%)</title><rect x="851.6" y="325" width="2.0" height="15.0" fill="rgb(246,21,41)" rx="2" ry="2" />
<text  x="854.55" y="335.5" ></text>
</g>
<g >
<title>new_sync_write (8 samples, 0.69%)</title><rect x="79.1" y="277" width="8.1" height="15.0" fill="rgb(214,9,3)" rx="2" ry="2" />
<text  x="82.11" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="12.0" y="469" width="1.0" height="15.0" fill="rgb(236,87,26)" rx="2" ry="2" />
<text  x="15.03" y="479.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (3 samples, 0.26%)</title><rect x="80.1" y="133" width="3.1" height="15.0" fill="rgb(221,94,21)" rx="2" ry="2" />
<text  x="83.13" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (2 samples, 0.17%)</title><rect x="1188.0" y="501" width="2.0" height="15.0" fill="rgb(223,191,31)" rx="2" ry="2" />
<text  x="1190.97" y="511.5" ></text>
</g>
<g >
<title>new_sync_write (320 samples, 27.56%)</title><rect x="851.6" y="341" width="325.2" height="15.0" fill="rgb(206,2,36)" rx="2" ry="2" />
<text  x="854.55" y="351.5" >new_sync_write</text>
</g>
<g >
<title>ext4_buffered_write_iter (8 samples, 0.69%)</title><rect x="79.1" y="181" width="8.1" height="15.0" fill="rgb(245,98,40)" rx="2" ry="2" />
<text  x="82.11" y="191.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.17%)</title><rect x="912.5" y="261" width="2.1" height="15.0" fill="rgb(206,156,7)" rx="2" ry="2" />
<text  x="915.53" y="271.5" ></text>
</g>
<g >
<title>_perf_event_enable (2 samples, 0.17%)</title><rect x="87.2" y="405" width="2.1" height="15.0" fill="rgb(228,158,54)" rx="2" ry="2" />
<text  x="90.24" y="415.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.09%)</title><rect x="80.1" y="85" width="1.0" height="15.0" fill="rgb(223,140,0)" rx="2" ry="2" />
<text  x="83.13" y="95.5" ></text>
</g>
<g >
<title>touch_atime (6 samples, 0.52%)</title><rect x="524.3" y="309" width="6.1" height="15.0" fill="rgb(240,26,5)" rx="2" ry="2" />
<text  x="527.28" y="319.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (2 samples, 0.17%)</title><rect x="87.2" y="261" width="2.1" height="15.0" fill="rgb(247,103,44)" rx="2" ry="2" />
<text  x="90.24" y="271.5" ></text>
</g>
<g >
<title>start_secondary (44 samples, 3.79%)</title><rect x="555.8" y="485" width="44.7" height="15.0" fill="rgb(223,138,31)" rx="2" ry="2" />
<text  x="558.79" y="495.5" >star..</text>
</g>
<g >
<title>copy_word_list (1 samples, 0.09%)</title><rect x="10.0" y="325" width="1.0" height="15.0" fill="rgb(230,142,33)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>osq_lock (11 samples, 0.95%)</title><rect x="508.0" y="277" width="11.2" height="15.0" fill="rgb(218,71,11)" rx="2" ry="2" />
<text  x="511.02" y="287.5" ></text>
</g>
<g >
<title>__perf_event_enable (62 samples, 5.34%)</title><rect x="14.1" y="213" width="63.0" height="15.0" fill="rgb(244,48,42)" rx="2" ry="2" />
<text  x="17.07" y="223.5" >__perf..</text>
</g>
<g >
<title>do_syscall_64 (340 samples, 29.29%)</title><rect x="194.0" y="405" width="345.5" height="15.0" fill="rgb(229,19,6)" rx="2" ry="2" />
<text  x="196.96" y="415.5" >do_syscall_64</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (36 samples, 3.10%)</title><rect x="560.9" y="389" width="36.6" height="15.0" fill="rgb(240,71,2)" rx="2" ry="2" />
<text  x="563.87" y="399.5" >mwa..</text>
</g>
<g >
<title>asm_sysvec_call_function_single (1 samples, 0.09%)</title><rect x="597.5" y="389" width="1.0" height="15.0" fill="rgb(238,185,7)" rx="2" ry="2" />
<text  x="600.46" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.09%)</title><rect x="192.9" y="405" width="1.1" height="15.0" fill="rgb(208,189,46)" rx="2" ry="2" />
<text  x="195.95" y="415.5" ></text>
</g>
<g >
<title>find_attach (1 samples, 0.09%)</title><rect x="13.0" y="277" width="1.1" height="15.0" fill="rgb(206,137,29)" rx="2" ry="2" />
<text  x="16.05" y="287.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.09%)</title><rect x="559.9" y="229" width="1.0" height="15.0" fill="rgb(243,196,40)" rx="2" ry="2" />
<text  x="562.85" y="239.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.17%)</title><rect x="558.8" y="325" width="2.1" height="15.0" fill="rgb(235,51,24)" rx="2" ry="2" />
<text  x="561.84" y="335.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.09%)</title><rect x="130.9" y="437" width="1.1" height="15.0" fill="rgb(249,46,2)" rx="2" ry="2" />
<text  x="133.95" y="447.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (129 samples, 11.11%)</title><rect x="240.7" y="293" width="131.1" height="15.0" fill="rgb(246,134,19)" rx="2" ry="2" />
<text  x="243.71" y="303.5" >copy_page_to_ite..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.09%)</title><rect x="521.2" y="213" width="1.0" height="15.0" fill="rgb(225,0,42)" rx="2" ry="2" />
<text  x="524.23" y="223.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.09%)</title><rect x="597.5" y="341" width="1.0" height="15.0" fill="rgb(223,63,43)" rx="2" ry="2" />
<text  x="600.46" y="351.5" ></text>
</g>
<g >
<title>ovl_write_iter (8 samples, 0.69%)</title><rect x="79.1" y="261" width="8.1" height="15.0" fill="rgb(213,165,51)" rx="2" ry="2" />
<text  x="82.11" y="271.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.09%)</title><rect x="83.2" y="85" width="1.0" height="15.0" fill="rgb(224,17,17)" rx="2" ry="2" />
<text  x="86.18" y="95.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (39 samples, 3.36%)</title><rect x="557.8" y="437" width="39.7" height="15.0" fill="rgb(244,179,33)" rx="2" ry="2" />
<text  x="560.82" y="447.5" >cpu..</text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.17%)</title><rect x="104.5" y="309" width="2.1" height="15.0" fill="rgb(243,5,15)" rx="2" ry="2" />
<text  x="107.52" y="319.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.17%)</title><rect x="10.0" y="373" width="2.0" height="15.0" fill="rgb(243,165,28)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="836.3" y="421" width="1.0" height="15.0" fill="rgb(222,220,10)" rx="2" ry="2" />
<text  x="839.30" y="431.5" ></text>
</g>
<g >
<title>vfs_write (8 samples, 0.69%)</title><rect x="79.1" y="293" width="8.1" height="15.0" fill="rgb(241,201,18)" rx="2" ry="2" />
<text  x="82.11" y="303.5" ></text>
</g>
<g >
<title>do_idle (36 samples, 3.10%)</title><rect x="96.4" y="453" width="36.6" height="15.0" fill="rgb(227,128,9)" rx="2" ry="2" />
<text  x="99.39" y="463.5" >do_..</text>
</g>
<g >
<title>event_function (62 samples, 5.34%)</title><rect x="14.1" y="229" width="63.0" height="15.0" fill="rgb(241,180,31)" rx="2" ry="2" />
<text  x="17.07" y="239.5" >event_..</text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.09%)</title><rect x="523.3" y="197" width="1.0" height="15.0" fill="rgb(216,130,14)" rx="2" ry="2" />
<text  x="526.26" y="207.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.09%)</title><rect x="540.5" y="453" width="1.1" height="15.0" fill="rgb(241,126,36)" rx="2" ry="2" />
<text  x="543.54" y="463.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.09%)</title><rect x="597.5" y="357" width="1.0" height="15.0" fill="rgb(213,166,43)" rx="2" ry="2" />
<text  x="600.46" y="367.5" ></text>
</g>
<g >
<title>xa_get_order (1 samples, 0.09%)</title><rect x="80.1" y="69" width="1.0" height="15.0" fill="rgb(213,106,26)" rx="2" ry="2" />
<text  x="83.13" y="79.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.09%)</title><rect x="129.9" y="405" width="1.0" height="15.0" fill="rgb(241,177,4)" rx="2" ry="2" />
<text  x="132.93" y="415.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.09%)</title><rect x="538.5" y="373" width="1.0" height="15.0" fill="rgb(205,68,22)" rx="2" ry="2" />
<text  x="541.51" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_enable (62 samples, 5.34%)</title><rect x="14.1" y="181" width="63.0" height="15.0" fill="rgb(229,168,40)" rx="2" ry="2" />
<text  x="17.07" y="191.5" >x86_pm..</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.09%)</title><rect x="81.1" y="85" width="1.1" height="15.0" fill="rgb(243,12,7)" rx="2" ry="2" />
<text  x="84.15" y="95.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.34%)</title><rect x="910.5" y="293" width="4.1" height="15.0" fill="rgb(236,204,10)" rx="2" ry="2" />
<text  x="913.50" y="303.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (47 samples, 4.05%)</title><rect x="133.0" y="373" width="47.7" height="15.0" fill="rgb(247,104,24)" rx="2" ry="2" />
<text  x="135.98" y="383.5" >cpui..</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.09%)</title><rect x="10.0" y="261" width="1.0" height="15.0" fill="rgb(209,184,12)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>__cmd_record (1 samples, 0.09%)</title><rect x="13.0" y="485" width="1.1" height="15.0" fill="rgb(221,109,16)" rx="2" ry="2" />
<text  x="16.05" y="495.5" ></text>
</g>
<g >
<title>cpuidle_enter (47 samples, 4.05%)</title><rect x="133.0" y="357" width="47.7" height="15.0" fill="rgb(222,144,19)" rx="2" ry="2" />
<text  x="135.98" y="367.5" >cpui..</text>
</g>
<g >
<title>_rl_set_screen_size (1 samples, 0.09%)</title><rect x="11.0" y="309" width="1.0" height="15.0" fill="rgb(209,215,49)" rx="2" ry="2" />
<text  x="14.02" y="319.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.09%)</title><rect x="557.8" y="245" width="1.0" height="15.0" fill="rgb(212,85,52)" rx="2" ry="2" />
<text  x="560.82" y="255.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.09%)</title><rect x="82.2" y="101" width="1.0" height="15.0" fill="rgb(217,76,50)" rx="2" ry="2" />
<text  x="85.16" y="111.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (2 samples, 0.17%)</title><rect x="910.5" y="277" width="2.0" height="15.0" fill="rgb(254,187,25)" rx="2" ry="2" />
<text  x="913.50" y="287.5" ></text>
</g>
<g >
<title>start_kernel (47 samples, 4.05%)</title><rect x="133.0" y="453" width="47.7" height="15.0" fill="rgb(215,102,11)" rx="2" ry="2" />
<text  x="135.98" y="463.5" >star..</text>
</g>
<g >
<title>ksys_read (336 samples, 28.94%)</title><rect x="194.0" y="373" width="341.5" height="15.0" fill="rgb(227,218,31)" rx="2" ry="2" />
<text  x="196.96" y="383.5" >ksys_read</text>
</g>
<g >
<title>start_kernel (224 samples, 19.29%)</title><rect x="600.5" y="453" width="227.7" height="15.0" fill="rgb(210,14,11)" rx="2" ry="2" />
<text  x="603.51" y="463.5" >start_kernel</text>
</g>
<g >
<title>pagecache_get_page (3 samples, 0.26%)</title><rect x="80.1" y="117" width="3.1" height="15.0" fill="rgb(221,124,40)" rx="2" ry="2" />
<text  x="83.13" y="127.5" ></text>
</g>
<g >
<title>osq_unlock (1 samples, 0.09%)</title><rect x="507.0" y="261" width="1.0" height="15.0" fill="rgb(209,92,43)" rx="2" ry="2" />
<text  x="510.00" y="271.5" ></text>
</g>
<g >
<title>generic_perform_write (8 samples, 0.69%)</title><rect x="79.1" y="165" width="8.1" height="15.0" fill="rgb(213,198,15)" rx="2" ry="2" />
<text  x="82.11" y="175.5" ></text>
</g>
<g >
<title>cpuidle_enter (224 samples, 19.29%)</title><rect x="600.5" y="357" width="227.7" height="15.0" fill="rgb(212,75,20)" rx="2" ry="2" />
<text  x="603.51" y="367.5" >cpuidle_enter</text>
</g>
<g >
<title>cpu_startup_entry (44 samples, 3.79%)</title><rect x="555.8" y="469" width="44.7" height="15.0" fill="rgb(210,44,6)" rx="2" ry="2" />
<text  x="558.79" y="479.5" >cpu_..</text>
</g>
<g >
<title>ext4_da_write_begin (3 samples, 0.26%)</title><rect x="80.1" y="149" width="3.1" height="15.0" fill="rgb(220,64,25)" rx="2" ry="2" />
<text  x="83.13" y="159.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.09%)</title><rect x="557.8" y="261" width="1.0" height="15.0" fill="rgb(229,3,25)" rx="2" ry="2" />
<text  x="560.82" y="271.5" ></text>
</g>
<g >
<title>pool-whoopsie (90 samples, 7.75%)</title><rect x="89.3" y="517" width="91.4" height="15.0" fill="rgb(207,1,13)" rx="2" ry="2" />
<text  x="92.28" y="527.5" >pool-whoop..</text>
</g>
<g >
<title>uncharge_batch (1 samples, 0.09%)</title><rect x="239.7" y="261" width="1.0" height="15.0" fill="rgb(219,56,51)" rx="2" ry="2" />
<text  x="242.70" y="271.5" ></text>
</g>
<g >
<title>cpu_startup_entry (47 samples, 4.05%)</title><rect x="133.0" y="405" width="47.7" height="15.0" fill="rgb(223,95,25)" rx="2" ry="2" />
<text  x="135.98" y="415.5" >cpu_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (62 samples, 5.34%)</title><rect x="14.1" y="405" width="63.0" height="15.0" fill="rgb(239,59,44)" rx="2" ry="2" />
<text  x="17.07" y="415.5" >entry_..</text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.17%)</title><rect x="520.2" y="261" width="2.0" height="15.0" fill="rgb(209,11,52)" rx="2" ry="2" />
<text  x="523.22" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.09%)</title><rect x="103.5" y="277" width="1.0" height="15.0" fill="rgb(208,92,25)" rx="2" ry="2" />
<text  x="106.51" y="287.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.09%)</title><rect x="104.5" y="293" width="1.0" height="15.0" fill="rgb(236,95,21)" rx="2" ry="2" />
<text  x="107.52" y="303.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (4 samples, 0.34%)</title><rect x="97.4" y="309" width="4.1" height="15.0" fill="rgb(216,216,53)" rx="2" ry="2" />
<text  x="100.41" y="319.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (34 samples, 2.93%)</title><rect x="96.4" y="437" width="34.5" height="15.0" fill="rgb(234,157,42)" rx="2" ry="2" />
<text  x="99.39" y="447.5" >cp..</text>
</g>
<g >
<title>record__pushfn (8 samples, 0.69%)</title><rect x="79.1" y="421" width="8.1" height="15.0" fill="rgb(215,46,4)" rx="2" ry="2" />
<text  x="82.11" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_write (327 samples, 28.17%)</title><rect x="848.5" y="389" width="332.4" height="15.0" fill="rgb(222,51,32)" rx="2" ry="2" />
<text  x="851.50" y="399.5" >__x64_sys_write</text>
</g>
<g >
<title>copy_page_from_iter_iovec (56 samples, 4.82%)</title><rect x="916.6" y="293" width="56.9" height="15.0" fill="rgb(211,119,29)" rx="2" ry="2" />
<text  x="919.60" y="303.5" >copy_p..</text>
</g>
<g >
<title>__schedule (3 samples, 0.26%)</title><rect x="597.5" y="421" width="3.0" height="15.0" fill="rgb(244,153,48)" rx="2" ry="2" />
<text  x="600.46" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (62 samples, 5.34%)</title><rect x="14.1" y="389" width="63.0" height="15.0" fill="rgb(220,35,9)" rx="2" ry="2" />
<text  x="17.07" y="399.5" >do_sys..</text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.09%)</title><rect x="12.0" y="341" width="1.0" height="15.0" fill="rgb(212,75,12)" rx="2" ry="2" />
<text  x="15.03" y="351.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.09%)</title><rect x="132.0" y="405" width="1.0" height="15.0" fill="rgb(219,216,4)" rx="2" ry="2" />
<text  x="134.96" y="415.5" ></text>
</g>
<g >
<title>mutex_spin_on_owner (73 samples, 6.29%)</title><rect x="432.8" y="261" width="74.2" height="15.0" fill="rgb(242,125,21)" rx="2" ry="2" />
<text  x="435.81" y="271.5" >mutex_sp..</text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.17%)</title><rect x="558.8" y="341" width="2.1" height="15.0" fill="rgb(205,127,22)" rx="2" ry="2" />
<text  x="561.84" y="351.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.09%)</title><rect x="557.8" y="197" width="1.0" height="15.0" fill="rgb(253,94,14)" rx="2" ry="2" />
<text  x="560.82" y="207.5" ></text>
</g>
<g >
<title>event_function_call (2 samples, 0.17%)</title><rect x="87.2" y="389" width="2.1" height="15.0" fill="rgb(210,178,39)" rx="2" ry="2" />
<text  x="90.24" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.17%)</title><rect x="102.5" y="309" width="2.0" height="15.0" fill="rgb(210,113,40)" rx="2" ry="2" />
<text  x="105.49" y="319.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.09%)</title><rect x="12.0" y="373" width="1.0" height="15.0" fill="rgb(206,163,53)" rx="2" ry="2" />
<text  x="15.03" y="383.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (47 samples, 4.05%)</title><rect x="133.0" y="485" width="47.7" height="15.0" fill="rgb(212,158,6)" rx="2" ry="2" />
<text  x="135.98" y="495.5" >x86_..</text>
</g>
<g >
<title>remote_function (2 samples, 0.17%)</title><rect x="87.2" y="341" width="2.1" height="15.0" fill="rgb(211,157,51)" rx="2" ry="2" />
<text  x="90.24" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.09%)</title><rect x="557.8" y="325" width="1.0" height="15.0" fill="rgb(212,209,11)" rx="2" ry="2" />
<text  x="560.82" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (343 samples, 29.54%)</title><rect x="190.9" y="421" width="348.6" height="15.0" fill="rgb(253,27,53)" rx="2" ry="2" />
<text  x="193.91" y="431.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3 samples, 0.26%)</title><rect x="557.8" y="373" width="3.1" height="15.0" fill="rgb(228,151,17)" rx="2" ry="2" />
<text  x="560.82" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.09%)</title><rect x="77.1" y="405" width="1.0" height="15.0" fill="rgb(220,194,7)" rx="2" ry="2" />
<text  x="80.08" y="415.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.09%)</title><rect x="83.2" y="69" width="1.0" height="15.0" fill="rgb(212,118,40)" rx="2" ry="2" />
<text  x="86.18" y="79.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.09%)</title><rect x="521.2" y="245" width="1.0" height="15.0" fill="rgb(242,132,13)" rx="2" ry="2" />
<text  x="524.23" y="255.5" ></text>
</g>
<g >
<title>pipe_write (1 samples, 0.09%)</title><rect x="1187.0" y="405" width="1.0" height="15.0" fill="rgb(226,214,35)" rx="2" ry="2" />
<text  x="1189.95" y="415.5" ></text>
</g>
<g >
<title>prepare_to_wait_event (1 samples, 0.09%)</title><rect x="519.2" y="309" width="1.0" height="15.0" fill="rgb(232,26,1)" rx="2" ry="2" />
<text  x="522.20" y="319.5" ></text>
</g>
<g >
<title>__put_page (2 samples, 0.17%)</title><rect x="238.7" y="293" width="2.0" height="15.0" fill="rgb(253,52,19)" rx="2" ry="2" />
<text  x="241.68" y="303.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.17%)</title><rect x="555.8" y="437" width="2.0" height="15.0" fill="rgb(215,222,22)" rx="2" ry="2" />
<text  x="558.79" y="447.5" ></text>
</g>
<g >
<title>dequeue_task (4 samples, 0.34%)</title><rect x="520.2" y="277" width="4.1" height="15.0" fill="rgb(217,17,16)" rx="2" ry="2" />
<text  x="523.22" y="287.5" ></text>
</g>
<g >
<title>make_bare_word (1 samples, 0.09%)</title><rect x="10.0" y="309" width="1.0" height="15.0" fill="rgb(220,117,51)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.09%)</title><rect x="129.9" y="421" width="1.0" height="15.0" fill="rgb(226,155,6)" rx="2" ry="2" />
<text  x="132.93" y="431.5" ></text>
</g>
<g >
<title>alloc_pages_current (5 samples, 0.43%)</title><rect x="909.5" y="309" width="5.1" height="15.0" fill="rgb(241,174,22)" rx="2" ry="2" />
<text  x="912.48" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (8 samples, 0.69%)</title><rect x="182.8" y="421" width="8.1" height="15.0" fill="rgb(253,50,41)" rx="2" ry="2" />
<text  x="185.78" y="431.5" ></text>
</g>
<g >
<title>generic_exec_single (62 samples, 5.34%)</title><rect x="14.1" y="261" width="63.0" height="15.0" fill="rgb(252,108,3)" rx="2" ry="2" />
<text  x="17.07" y="271.5" >generi..</text>
</g>
<g >
<title>anon_pipe_buf_release (6 samples, 0.52%)</title><rect x="203.1" y="325" width="6.1" height="15.0" fill="rgb(211,134,10)" rx="2" ry="2" />
<text  x="206.11" y="335.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (62 samples, 5.34%)</title><rect x="14.1" y="165" width="63.0" height="15.0" fill="rgb(230,224,12)" rx="2" ry="2" />
<text  x="17.07" y="175.5" >intel_..</text>
</g>
<g >
<title>execve (1 samples, 0.09%)</title><rect x="13.0" y="437" width="1.1" height="15.0" fill="rgb(217,183,38)" rx="2" ry="2" />
<text  x="16.05" y="447.5" ></text>
</g>
<g >
<title>__mutex_lock_slowpath (186 samples, 16.02%)</title><rect x="987.7" y="293" width="189.1" height="15.0" fill="rgb(205,25,41)" rx="2" ry="2" />
<text  x="990.74" y="303.5" >__mutex_lock_slowpath</text>
</g>
<g >
<title>ksys_read (1 samples, 0.09%)</title><rect x="535.5" y="389" width="1.0" height="15.0" fill="rgb(216,8,46)" rx="2" ry="2" />
<text  x="538.46" y="399.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.09%)</title><rect x="559.9" y="293" width="1.0" height="15.0" fill="rgb(215,146,40)" rx="2" ry="2" />
<text  x="562.85" y="303.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (4 samples, 0.34%)</title><rect x="97.4" y="357" width="4.1" height="15.0" fill="rgb(206,146,48)" rx="2" ry="2" />
<text  x="100.41" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.09%)</title><rect x="557.8" y="309" width="1.0" height="15.0" fill="rgb(246,94,36)" rx="2" ry="2" />
<text  x="560.82" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.09%)</title><rect x="540.5" y="469" width="1.1" height="15.0" fill="rgb(217,145,0)" rx="2" ry="2" />
<text  x="543.54" y="479.5" ></text>
</g>
<g >
<title>pipe_write (289 samples, 24.89%)</title><rect x="883.1" y="325" width="293.7" height="15.0" fill="rgb(252,11,11)" rx="2" ry="2" />
<text  x="886.06" y="335.5" >pipe_write</text>
</g>
<g >
<title>__pagevec_lru_add (1 samples, 0.09%)</title><rect x="12.0" y="357" width="1.0" height="15.0" fill="rgb(239,109,30)" rx="2" ry="2" />
<text  x="15.03" y="367.5" ></text>
</g>
<g >
<title>vfs_iter_write (8 samples, 0.69%)</title><rect x="79.1" y="245" width="8.1" height="15.0" fill="rgb(252,153,52)" rx="2" ry="2" />
<text  x="82.11" y="255.5" ></text>
</g>
<g >
<title>cpuidle_enter (39 samples, 3.36%)</title><rect x="557.8" y="421" width="39.7" height="15.0" fill="rgb(227,181,2)" rx="2" ry="2" />
<text  x="560.82" y="431.5" >cpu..</text>
</g>
<g >
<title>ksys_write (8 samples, 0.69%)</title><rect x="79.1" y="309" width="8.1" height="15.0" fill="rgb(247,104,10)" rx="2" ry="2" />
<text  x="82.11" y="319.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="890.2" y="293" width="1.0" height="15.0" fill="rgb(223,146,39)" rx="2" ry="2" />
<text  x="893.17" y="303.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (62 samples, 5.34%)</title><rect x="14.1" y="453" width="63.0" height="15.0" fill="rgb(236,117,0)" rx="2" ry="2" />
<text  x="17.07" y="463.5" >perf_e..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="13.0" y="421" width="1.1" height="15.0" fill="rgb(241,215,3)" rx="2" ry="2" />
<text  x="16.05" y="431.5" ></text>
</g>
<g >
<title>schedule_idle (3 samples, 0.26%)</title><rect x="597.5" y="437" width="3.0" height="15.0" fill="rgb(219,114,24)" rx="2" ry="2" />
<text  x="600.46" y="447.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="11.0" y="181" width="1.0" height="15.0" fill="rgb(208,182,13)" rx="2" ry="2" />
<text  x="14.02" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.17%)</title><rect x="87.2" y="485" width="2.1" height="15.0" fill="rgb(235,45,49)" rx="2" ry="2" />
<text  x="90.24" y="495.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="12.0" y="501" width="1.0" height="15.0" fill="rgb(233,81,3)" rx="2" ry="2" />
<text  x="15.03" y="511.5" ></text>
</g>
<g >
<title>file_update_time (1 samples, 0.09%)</title><rect x="973.5" y="309" width="1.0" height="15.0" fill="rgb(205,64,19)" rx="2" ry="2" />
<text  x="976.51" y="319.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (62 samples, 5.34%)</title><rect x="14.1" y="437" width="63.0" height="15.0" fill="rgb(205,39,30)" rx="2" ry="2" />
<text  x="17.07" y="447.5" >perf_e..</text>
</g>
<g >
<title>ctx_resched (62 samples, 5.34%)</title><rect x="14.1" y="197" width="63.0" height="15.0" fill="rgb(242,41,0)" rx="2" ry="2" />
<text  x="17.07" y="207.5" >ctx_re..</text>
</g>
<g >
<title>reader_loop (2 samples, 0.17%)</title><rect x="10.0" y="437" width="2.0" height="15.0" fill="rgb(209,53,24)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>do_idle (47 samples, 4.05%)</title><rect x="133.0" y="389" width="47.7" height="15.0" fill="rgb(214,88,1)" rx="2" ry="2" />
<text  x="135.98" y="399.5" >do_i..</text>
</g>
<g >
<title>do_fault (1 samples, 0.09%)</title><rect x="10.0" y="181" width="1.0" height="15.0" fill="rgb(229,218,21)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>cpuidle_enter (33 samples, 2.84%)</title><rect x="96.4" y="421" width="33.5" height="15.0" fill="rgb(230,31,49)" rx="2" ry="2" />
<text  x="99.39" y="431.5" >cp..</text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.09%)</title><rect x="77.1" y="389" width="1.0" height="15.0" fill="rgb(233,185,38)" rx="2" ry="2" />
<text  x="80.08" y="399.5" ></text>
</g>
<g >
<title>arch_call_rest_init (47 samples, 4.05%)</title><rect x="133.0" y="437" width="47.7" height="15.0" fill="rgb(249,42,45)" rx="2" ry="2" />
<text  x="135.98" y="447.5" >arch..</text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="11.0" y="229" width="1.0" height="15.0" fill="rgb(208,207,51)" rx="2" ry="2" />
<text  x="14.02" y="239.5" ></text>
</g>
<g >
<title>vfs_read (330 samples, 28.42%)</title><rect x="200.1" y="357" width="335.4" height="15.0" fill="rgb(226,186,38)" rx="2" ry="2" />
<text  x="203.06" y="367.5" >vfs_read</text>
</g>
<g >
<title>new_sync_read (323 samples, 27.82%)</title><rect x="202.1" y="341" width="328.3" height="15.0" fill="rgb(251,59,49)" rx="2" ry="2" />
<text  x="205.09" y="351.5" >new_sync_read</text>
</g>
<g >
<title>leftmatch_fb (1 samples, 0.09%)</title><rect x="13.0" y="261" width="1.1" height="15.0" fill="rgb(207,62,47)" rx="2" ry="2" />
<text  x="16.05" y="271.5" ></text>
</g>
<g >
<title>common_interrupt (4 samples, 0.34%)</title><rect x="97.4" y="373" width="4.1" height="15.0" fill="rgb(248,43,54)" rx="2" ry="2" />
<text  x="100.41" y="383.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (8 samples, 0.69%)</title><rect x="79.1" y="197" width="8.1" height="15.0" fill="rgb(231,123,5)" rx="2" ry="2" />
<text  x="82.11" y="207.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (1 samples, 0.09%)</title><rect x="13.0" y="341" width="1.1" height="15.0" fill="rgb(245,45,51)" rx="2" ry="2" />
<text  x="16.05" y="351.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.17%)</title><rect x="558.8" y="357" width="2.1" height="15.0" fill="rgb(210,69,25)" rx="2" ry="2" />
<text  x="561.84" y="367.5" ></text>
</g>
<g >
<title>do_idle (224 samples, 19.29%)</title><rect x="600.5" y="389" width="227.7" height="15.0" fill="rgb(254,213,18)" rx="2" ry="2" />
<text  x="603.51" y="399.5" >do_idle</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.09%)</title><rect x="1181.9" y="389" width="1.0" height="15.0" fill="rgb(234,49,15)" rx="2" ry="2" />
<text  x="1184.87" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="540.5" y="501" width="1.1" height="15.0" fill="rgb(244,95,47)" rx="2" ry="2" />
<text  x="543.54" y="511.5" ></text>
</g>
<g >
<title>security_file_permission (5 samples, 0.43%)</title><rect x="530.4" y="325" width="5.1" height="15.0" fill="rgb(248,20,28)" rx="2" ry="2" />
<text  x="533.38" y="335.5" ></text>
</g>
<g >
<title>copy_page_to_iter (129 samples, 11.11%)</title><rect x="240.7" y="309" width="131.1" height="15.0" fill="rgb(211,206,0)" rx="2" ry="2" />
<text  x="243.71" y="319.5" >copy_page_to_iter</text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.09%)</title><rect x="559.9" y="245" width="1.0" height="15.0" fill="rgb(212,91,13)" rx="2" ry="2" />
<text  x="562.85" y="255.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.09%)</title><rect x="104.5" y="277" width="1.0" height="15.0" fill="rgb(220,163,48)" rx="2" ry="2" />
<text  x="107.52" y="287.5" ></text>
</g>
<g >
<title>pipe_read (1 samples, 0.09%)</title><rect x="540.5" y="405" width="1.1" height="15.0" fill="rgb(238,23,53)" rx="2" ry="2" />
<text  x="543.54" y="415.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.17%)</title><rect x="84.2" y="133" width="2.0" height="15.0" fill="rgb(225,42,13)" rx="2" ry="2" />
<text  x="87.19" y="143.5" ></text>
</g>
<g >
<title>free_unref_page (1 samples, 0.09%)</title><rect x="238.7" y="277" width="1.0" height="15.0" fill="rgb(237,152,18)" rx="2" ry="2" />
<text  x="241.68" y="287.5" ></text>
</g>
<g >
<title>fsnotify (2 samples, 0.17%)</title><rect x="533.4" y="309" width="2.1" height="15.0" fill="rgb(254,185,41)" rx="2" ry="2" />
<text  x="536.43" y="319.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 0.26%)</title><rect x="101.5" y="357" width="3.0" height="15.0" fill="rgb(230,118,4)" rx="2" ry="2" />
<text  x="104.47" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5 samples, 0.43%)</title><rect x="101.5" y="373" width="5.1" height="15.0" fill="rgb(243,165,41)" rx="2" ry="2" />
<text  x="104.47" y="383.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (8 samples, 0.69%)</title><rect x="79.1" y="213" width="8.1" height="15.0" fill="rgb(240,167,22)" rx="2" ry="2" />
<text  x="82.11" y="223.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (125 samples, 10.77%)</title><rect x="244.8" y="277" width="127.0" height="15.0" fill="rgb(207,220,20)" rx="2" ry="2" />
<text  x="247.78" y="287.5" >copy_user_enhan..</text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.09%)</title><rect x="1187.0" y="389" width="1.0" height="15.0" fill="rgb(207,30,21)" rx="2" ry="2" />
<text  x="1189.95" y="399.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.09%)</title><rect x="105.5" y="213" width="1.1" height="15.0" fill="rgb(221,86,32)" rx="2" ry="2" />
<text  x="108.54" y="223.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.17%)</title><rect x="558.8" y="309" width="2.1" height="15.0" fill="rgb(230,90,15)" rx="2" ry="2" />
<text  x="561.84" y="319.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (224 samples, 19.29%)</title><rect x="600.5" y="373" width="227.7" height="15.0" fill="rgb(229,25,23)" rx="2" ry="2" />
<text  x="603.51" y="383.5" >cpuidle_idle_call</text>
</g>
<g >
<title>new_sync_write (1 samples, 0.09%)</title><rect x="1187.0" y="421" width="1.0" height="15.0" fill="rgb(227,74,2)" rx="2" ry="2" />
<text  x="1189.95" y="431.5" ></text>
</g>
<g >
<title>_start (351 samples, 30.23%)</title><rect x="828.2" y="501" width="356.7" height="15.0" fill="rgb(205,34,29)" rx="2" ry="2" />
<text  x="831.17" y="511.5" >_start</text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.17%)</title><rect x="87.2" y="357" width="2.1" height="15.0" fill="rgb(211,26,7)" rx="2" ry="2" />
<text  x="90.24" y="367.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.09%)</title><rect x="540.5" y="389" width="1.1" height="15.0" fill="rgb(212,90,4)" rx="2" ry="2" />
<text  x="543.54" y="399.5" ></text>
</g>
<g >
<title>__mutex_lock.constprop.0 (183 samples, 15.76%)</title><rect x="988.8" y="277" width="186.0" height="15.0" fill="rgb(214,16,0)" rx="2" ry="2" />
<text  x="991.76" y="287.5" >__mutex_lock.constprop.0</text>
</g>
<g >
<title>cpuidle_enter_state (224 samples, 19.29%)</title><rect x="600.5" y="341" width="227.7" height="15.0" fill="rgb(224,136,40)" rx="2" ry="2" />
<text  x="603.51" y="351.5" >cpuidle_enter_state</text>
</g>
<g >
<title>asm_common_interrupt (4 samples, 0.34%)</title><rect x="97.4" y="389" width="4.1" height="15.0" fill="rgb(215,65,28)" rx="2" ry="2" />
<text  x="100.41" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.09%)</title><rect x="81.1" y="101" width="1.1" height="15.0" fill="rgb(231,37,42)" rx="2" ry="2" />
<text  x="84.15" y="111.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (23 samples, 1.98%)</title><rect x="106.6" y="389" width="23.3" height="15.0" fill="rgb(218,192,10)" rx="2" ry="2" />
<text  x="109.55" y="399.5" >m..</text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (1 samples, 0.09%)</title><rect x="529.4" y="261" width="1.0" height="15.0" fill="rgb(243,189,14)" rx="2" ry="2" />
<text  x="532.36" y="271.5" ></text>
</g>
<g >
<title>do_fault_around (1 samples, 0.09%)</title><rect x="11.0" y="149" width="1.0" height="15.0" fill="rgb(225,23,8)" rx="2" ry="2" />
<text  x="14.02" y="159.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.09%)</title><rect x="1181.9" y="373" width="1.0" height="15.0" fill="rgb(207,61,36)" rx="2" ry="2" />
<text  x="1184.87" y="383.5" ></text>
</g>
<g >
<title>do_iter_write (8 samples, 0.69%)</title><rect x="79.1" y="229" width="8.1" height="15.0" fill="rgb(250,197,45)" rx="2" ry="2" />
<text  x="82.11" y="239.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (53 samples, 4.57%)</title><rect x="919.6" y="277" width="53.9" height="15.0" fill="rgb(208,85,48)" rx="2" ry="2" />
<text  x="922.65" y="287.5" >copy_..</text>
</g>
<g >
<title>default_wake_function (1 samples, 0.09%)</title><rect x="893.2" y="245" width="1.0" height="15.0" fill="rgb(224,62,51)" rx="2" ry="2" />
<text  x="896.22" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="10.0" y="293" width="1.0" height="15.0" fill="rgb(228,45,50)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="12.0" y="453" width="1.0" height="15.0" fill="rgb(248,148,43)" rx="2" ry="2" />
<text  x="15.03" y="463.5" ></text>
</g>
<g >
<title>main (2 samples, 0.17%)</title><rect x="10.0" y="453" width="2.0" height="15.0" fill="rgb(239,61,16)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="11.0" y="213" width="1.0" height="15.0" fill="rgb(219,90,13)" rx="2" ry="2" />
<text  x="14.02" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.09%)</title><rect x="557.8" y="229" width="1.0" height="15.0" fill="rgb(235,119,26)" rx="2" ry="2" />
<text  x="560.82" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (11 samples, 0.95%)</title><rect x="227.5" y="309" width="11.2" height="15.0" fill="rgb(235,30,39)" rx="2" ry="2" />
<text  x="230.50" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="10.0" y="245" width="1.0" height="15.0" fill="rgb(242,175,40)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>ring_buffer_read_head (1 samples, 0.09%)</title><rect x="78.1" y="405" width="1.0" height="15.0" fill="rgb(236,100,15)" rx="2" ry="2" />
<text  x="81.10" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_write (8 samples, 0.69%)</title><rect x="79.1" y="325" width="8.1" height="15.0" fill="rgb(235,79,34)" rx="2" ry="2" />
<text  x="82.11" y="335.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3 samples, 0.26%)</title><rect x="536.5" y="389" width="3.0" height="15.0" fill="rgb(231,84,34)" rx="2" ry="2" />
<text  x="539.48" y="399.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.09%)</title><rect x="11.0" y="165" width="1.0" height="15.0" fill="rgb(229,97,13)" rx="2" ry="2" />
<text  x="14.02" y="175.5" ></text>
</g>
<g >
<title>native_write_msr (62 samples, 5.34%)</title><rect x="14.1" y="149" width="63.0" height="15.0" fill="rgb(225,212,3)" rx="2" ry="2" />
<text  x="17.07" y="159.5" >native..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.09%)</title><rect x="519.2" y="293" width="1.0" height="15.0" fill="rgb(229,124,50)" rx="2" ry="2" />
<text  x="522.20" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (1 samples, 0.09%)</title><rect x="541.6" y="501" width="1.0" height="15.0" fill="rgb(251,5,14)" rx="2" ry="2" />
<text  x="544.56" y="511.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (2 samples, 0.17%)</title><rect x="84.2" y="149" width="2.0" height="15.0" fill="rgb(223,75,26)" rx="2" ry="2" />
<text  x="87.19" y="159.5" ></text>
</g>
<g >
<title>mutex_unlock (29 samples, 2.50%)</title><rect x="853.6" y="325" width="29.5" height="15.0" fill="rgb(245,226,46)" rx="2" ry="2" />
<text  x="856.58" y="335.5" >mu..</text>
</g>
<g >
<title>cpuidle_enter_state (33 samples, 2.84%)</title><rect x="96.4" y="405" width="33.5" height="15.0" fill="rgb(211,53,45)" rx="2" ry="2" />
<text  x="99.39" y="415.5" >cp..</text>
</g>
<g >
<title>alx_mask_msix (4 samples, 0.34%)</title><rect x="97.4" y="277" width="4.1" height="15.0" fill="rgb(214,21,42)" rx="2" ry="2" />
<text  x="100.41" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.17%)</title><rect x="912.5" y="277" width="2.1" height="15.0" fill="rgb(251,105,13)" rx="2" ry="2" />
<text  x="915.53" y="287.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (1 samples, 0.09%)</title><rect x="540.5" y="373" width="1.1" height="15.0" fill="rgb(213,197,21)" rx="2" ry="2" />
<text  x="543.54" y="383.5" ></text>
</g>
</g>
</svg>
