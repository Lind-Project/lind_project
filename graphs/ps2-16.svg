<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>NaClAppThreadTeardown (2 samples, 0.01%)</title><rect x="297.6" y="453" width="0.2" height="15.0" fill="rgb(248,161,45)" rx="2" ry="2" />
<text  x="300.65" y="463.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (16 samples, 0.08%)</title><rect x="1070.6" y="357" width="0.9" height="15.0" fill="rgb(208,121,1)" rx="2" ry="2" />
<text  x="1073.59" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (19 samples, 0.09%)</title><rect x="149.1" y="453" width="1.1" height="15.0" fill="rgb(218,36,17)" rx="2" ry="2" />
<text  x="152.11" y="463.5" ></text>
</g>
<g >
<title>newidle_balance (2 samples, 0.01%)</title><rect x="77.8" y="405" width="0.1" height="15.0" fill="rgb(254,54,36)" rx="2" ry="2" />
<text  x="80.80" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (537 samples, 2.57%)</title><rect x="937.5" y="389" width="30.3" height="15.0" fill="rgb(240,144,44)" rx="2" ry="2" />
<text  x="940.47" y="399.5" >co..</text>
</g>
<g >
<title>start_kernel (366 samples, 1.75%)</title><rect x="78.1" y="469" width="20.6" height="15.0" fill="rgb(229,165,5)" rx="2" ry="2" />
<text  x="81.09" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (22 samples, 0.11%)</title><rect x="212.5" y="389" width="1.2" height="15.0" fill="rgb(220,105,43)" rx="2" ry="2" />
<text  x="215.45" y="399.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (93 samples, 0.44%)</title><rect x="1064.0" y="389" width="5.3" height="15.0" fill="rgb(219,97,8)" rx="2" ry="2" />
<text  x="1067.05" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt; (123 samples, 0.59%)</title><rect x="999.8" y="405" width="6.9" height="15.0" fill="rgb(238,63,6)" rx="2" ry="2" />
<text  x="1002.80" y="415.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (15 samples, 0.07%)</title><rect x="97.9" y="405" width="0.8" height="15.0" fill="rgb(249,138,25)" rx="2" ry="2" />
<text  x="100.90" y="415.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (189 samples, 0.90%)</title><rect x="283.3" y="485" width="10.6" height="15.0" fill="rgb(211,49,11)" rx="2" ry="2" />
<text  x="286.25" y="495.5" ></text>
</g>
<g >
<title>start_kernel (15 samples, 0.07%)</title><rect x="1189.2" y="469" width="0.8" height="15.0" fill="rgb(238,132,8)" rx="2" ry="2" />
<text  x="1192.15" y="479.5" ></text>
</g>
<g >
<title>rest_init (1,124 samples, 5.38%)</title><rect x="153.0" y="437" width="63.5" height="15.0" fill="rgb(223,171,12)" rx="2" ry="2" />
<text  x="156.00" y="447.5" >rest_i..</text>
</g>
<g >
<title>core::hash::sip::u8to64_le (8 samples, 0.04%)</title><rect x="918.9" y="261" width="0.4" height="15.0" fill="rgb(225,24,43)" rx="2" ry="2" />
<text  x="921.90" y="271.5" ></text>
</g>
<g >
<title>menu_select (20 samples, 0.10%)</title><rect x="147.8" y="421" width="1.1" height="15.0" fill="rgb(221,228,41)" rx="2" ry="2" />
<text  x="150.81" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (2 samples, 0.01%)</title><rect x="148.8" y="389" width="0.1" height="15.0" fill="rgb(236,86,22)" rx="2" ry="2" />
<text  x="151.77" y="399.5" ></text>
</g>
<g >
<title>schedule_idle (38 samples, 0.18%)</title><rect x="150.3" y="453" width="2.1" height="15.0" fill="rgb(251,4,35)" rx="2" ry="2" />
<text  x="153.29" y="463.5" ></text>
</g>
<g >
<title>rcu_idle_enter (7 samples, 0.03%)</title><rect x="184.4" y="341" width="0.4" height="15.0" fill="rgb(217,129,41)" rx="2" ry="2" />
<text  x="187.39" y="351.5" ></text>
</g>
<g >
<title>pick_next_task_fair (29 samples, 0.14%)</title><rect x="150.5" y="421" width="1.6" height="15.0" fill="rgb(234,103,4)" rx="2" ry="2" />
<text  x="153.46" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.07%)</title><rect x="1040.3" y="245" width="0.9" height="15.0" fill="rgb(232,139,44)" rx="2" ry="2" />
<text  x="1043.33" y="255.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (2 samples, 0.01%)</title><rect x="47.5" y="309" width="0.2" height="15.0" fill="rgb(240,67,25)" rx="2" ry="2" />
<text  x="50.54" y="319.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (6 samples, 0.03%)</title><rect x="185.4" y="325" width="0.3" height="15.0" fill="rgb(242,204,8)" rx="2" ry="2" />
<text  x="188.35" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (578 samples, 2.77%)</title><rect x="1071.7" y="325" width="32.7" height="15.0" fill="rgb(225,13,38)" rx="2" ry="2" />
<text  x="1074.72" y="335.5" >co..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (104 samples, 0.50%)</title><rect x="34.2" y="405" width="5.9" height="15.0" fill="rgb(217,201,25)" rx="2" ry="2" />
<text  x="37.22" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (89 samples, 0.43%)</title><rect x="909.4" y="309" width="5.0" height="15.0" fill="rgb(209,43,7)" rx="2" ry="2" />
<text  x="912.41" y="319.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (3 samples, 0.01%)</title><rect x="151.6" y="325" width="0.2" height="15.0" fill="rgb(249,53,21)" rx="2" ry="2" />
<text  x="154.65" y="335.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="66.6" y="357" width="0.1" height="15.0" fill="rgb(223,81,14)" rx="2" ry="2" />
<text  x="69.57" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (869 samples, 4.16%)</title><rect x="333.4" y="389" width="49.1" height="15.0" fill="rgb(252,191,21)" rx="2" ry="2" />
<text  x="336.44" y="399.5" >core..</text>
</g>
<g >
<title>[perf-7394.map] (22 samples, 0.11%)</title><rect x="230.6" y="517" width="1.2" height="15.0" fill="rgb(250,161,21)" rx="2" ry="2" />
<text  x="233.58" y="527.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (8 samples, 0.04%)</title><rect x="1059.4" y="293" width="0.4" height="15.0" fill="rgb(230,155,4)" rx="2" ry="2" />
<text  x="1062.36" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (37 samples, 0.18%)</title><rect x="741.0" y="325" width="2.1" height="15.0" fill="rgb(243,100,2)" rx="2" ry="2" />
<text  x="744.00" y="335.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (4 samples, 0.02%)</title><rect x="148.5" y="389" width="0.2" height="15.0" fill="rgb(226,154,34)" rx="2" ry="2" />
<text  x="151.49" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (79 samples, 0.38%)</title><rect x="1059.4" y="325" width="4.4" height="15.0" fill="rgb(223,17,52)" rx="2" ry="2" />
<text  x="1062.36" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (578 samples, 2.77%)</title><rect x="1071.7" y="389" width="32.7" height="15.0" fill="rgb(221,113,17)" rx="2" ry="2" />
<text  x="1074.72" y="399.5" >co..</text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (2 samples, 0.01%)</title><rect x="1185.4" y="341" width="0.1" height="15.0" fill="rgb(249,70,9)" rx="2" ry="2" />
<text  x="1188.43" y="351.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (191 samples, 0.91%)</title><rect x="1016.3" y="325" width="10.8" height="15.0" fill="rgb(241,218,30)" rx="2" ry="2" />
<text  x="1019.34" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (2 samples, 0.01%)</title><rect x="193.8" y="373" width="0.1" height="15.0" fill="rgb(221,134,44)" rx="2" ry="2" />
<text  x="196.77" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (3 samples, 0.01%)</title><rect x="152.4" y="453" width="0.2" height="15.0" fill="rgb(233,188,27)" rx="2" ry="2" />
<text  x="155.44" y="463.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (2 samples, 0.01%)</title><rect x="900.4" y="309" width="0.1" height="15.0" fill="rgb(208,131,16)" rx="2" ry="2" />
<text  x="903.43" y="319.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (2 samples, 0.01%)</title><rect x="297.6" y="277" width="0.2" height="15.0" fill="rgb(217,184,46)" rx="2" ry="2" />
<text  x="300.65" y="287.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (4 samples, 0.02%)</title><rect x="26.4" y="309" width="0.3" height="15.0" fill="rgb(237,26,36)" rx="2" ry="2" />
<text  x="29.43" y="319.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (8 samples, 0.04%)</title><rect x="260.7" y="469" width="0.5" height="15.0" fill="rgb(249,84,43)" rx="2" ry="2" />
<text  x="263.72" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="297.6" y="357" width="0.2" height="15.0" fill="rgb(236,75,35)" rx="2" ry="2" />
<text  x="300.65" y="367.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (5 samples, 0.02%)</title><rect x="29.5" y="261" width="0.3" height="15.0" fill="rgb(213,53,8)" rx="2" ry="2" />
<text  x="32.48" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (433 samples, 2.07%)</title><rect x="975.4" y="405" width="24.4" height="15.0" fill="rgb(226,36,34)" rx="2" ry="2" />
<text  x="978.35" y="415.5" >c..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (79 samples, 0.38%)</title><rect x="1059.4" y="309" width="4.4" height="15.0" fill="rgb(230,100,42)" rx="2" ry="2" />
<text  x="1062.36" y="319.5" ></text>
</g>
<g >
<title>native_sched_clock (10 samples, 0.05%)</title><rect x="186.4" y="325" width="0.6" height="15.0" fill="rgb(208,172,48)" rx="2" ry="2" />
<text  x="189.43" y="335.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (28 samples, 0.13%)</title><rect x="49.1" y="325" width="1.5" height="15.0" fill="rgb(240,133,11)" rx="2" ry="2" />
<text  x="52.07" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (89 samples, 0.43%)</title><rect x="909.4" y="325" width="5.0" height="15.0" fill="rgb(223,45,30)" rx="2" ry="2" />
<text  x="912.41" y="335.5" ></text>
</g>
<g >
<title>nohz_csd_func (7 samples, 0.03%)</title><rect x="48.3" y="373" width="0.4" height="15.0" fill="rgb(231,29,44)" rx="2" ry="2" />
<text  x="51.28" y="383.5" ></text>
</g>
<g >
<title>MunmapInternal (2 samples, 0.01%)</title><rect x="297.8" y="453" width="0.1" height="15.0" fill="rgb(250,19,23)" rx="2" ry="2" />
<text  x="300.82" y="463.5" ></text>
</g>
<g >
<title>kick_ilb (2 samples, 0.01%)</title><rect x="77.8" y="373" width="0.1" height="15.0" fill="rgb(241,123,52)" rx="2" ry="2" />
<text  x="80.80" y="383.5" ></text>
</g>
<g >
<title>balance_pgdat (5 samples, 0.02%)</title><rect x="65.8" y="469" width="0.3" height="15.0" fill="rgb(241,118,24)" rx="2" ry="2" />
<text  x="68.78" y="479.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (2 samples, 0.01%)</title><rect x="1185.4" y="261" width="0.1" height="15.0" fill="rgb(208,106,52)" rx="2" ry="2" />
<text  x="1188.43" y="271.5" ></text>
</g>
<g >
<title>kthread (13 samples, 0.06%)</title><rect x="65.6" y="501" width="0.7" height="15.0" fill="rgb(254,78,8)" rx="2" ry="2" />
<text  x="68.55" y="511.5" ></text>
</g>
<g >
<title>NaClLog (9 samples, 0.04%)</title><rect x="1180.6" y="501" width="0.5" height="15.0" fill="rgb(230,213,29)" rx="2" ry="2" />
<text  x="1183.57" y="511.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 0.01%)</title><rect x="115.8" y="373" width="0.2" height="15.0" fill="rgb(208,177,43)" rx="2" ry="2" />
<text  x="118.80" y="383.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (37 samples, 0.18%)</title><rect x="28.3" y="325" width="2.1" height="15.0" fill="rgb(235,39,10)" rx="2" ry="2" />
<text  x="31.29" y="335.5" ></text>
</g>
<g >
<title>start_kernel (208 samples, 1.00%)</title><rect x="20.0" y="469" width="11.7" height="15.0" fill="rgb(215,86,5)" rx="2" ry="2" />
<text  x="22.99" y="479.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.01%)</title><rect x="97.2" y="357" width="0.1" height="15.0" fill="rgb(239,73,23)" rx="2" ry="2" />
<text  x="100.17" y="367.5" ></text>
</g>
<g >
<title>NaClLog (55 samples, 0.26%)</title><rect x="846.2" y="453" width="3.1" height="15.0" fill="rgb(228,45,52)" rx="2" ry="2" />
<text  x="849.24" y="463.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (2 samples, 0.01%)</title><rect x="184.3" y="341" width="0.1" height="15.0" fill="rgb(222,89,22)" rx="2" ry="2" />
<text  x="187.28" y="351.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (4 samples, 0.02%)</title><rect x="295.8" y="485" width="0.2" height="15.0" fill="rgb(213,212,26)" rx="2" ry="2" />
<text  x="298.78" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (20 samples, 0.10%)</title><rect x="899.4" y="325" width="1.1" height="15.0" fill="rgb(244,19,7)" rx="2" ry="2" />
<text  x="902.42" y="335.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (7 samples, 0.03%)</title><rect x="1122.4" y="357" width="0.4" height="15.0" fill="rgb(208,48,30)" rx="2" ry="2" />
<text  x="1125.42" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (8 samples, 0.04%)</title><rect x="26.9" y="373" width="0.5" height="15.0" fill="rgb(241,101,29)" rx="2" ry="2" />
<text  x="29.94" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (16 samples, 0.08%)</title><rect x="90.9" y="341" width="0.9" height="15.0" fill="rgb(238,159,19)" rx="2" ry="2" />
<text  x="93.90" y="351.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (4 samples, 0.02%)</title><rect x="33.7" y="325" width="0.2" height="15.0" fill="rgb(250,76,37)" rx="2" ry="2" />
<text  x="36.66" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (123 samples, 0.59%)</title><rect x="999.8" y="325" width="6.9" height="15.0" fill="rgb(230,3,6)" rx="2" ry="2" />
<text  x="1002.80" y="335.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (3 samples, 0.01%)</title><rect x="190.4" y="325" width="0.2" height="15.0" fill="rgb(242,37,44)" rx="2" ry="2" />
<text  x="193.44" y="335.5" ></text>
</g>
<g >
<title>do_idle (205 samples, 0.98%)</title><rect x="20.0" y="405" width="11.6" height="15.0" fill="rgb(234,204,6)" rx="2" ry="2" />
<text  x="22.99" y="415.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (29 samples, 0.14%)</title><rect x="1187.2" y="453" width="1.6" height="15.0" fill="rgb(213,33,17)" rx="2" ry="2" />
<text  x="1190.18" y="463.5" ></text>
</g>
<g >
<title>NaClAppThreadLauncher (4 samples, 0.02%)</title><rect x="1185.2" y="485" width="0.2" height="15.0" fill="rgb(234,209,29)" rx="2" ry="2" />
<text  x="1188.20" y="495.5" ></text>
</g>
<g >
<title>main (2 samples, 0.01%)</title><rect x="1185.4" y="469" width="0.1" height="15.0" fill="rgb(231,1,43)" rx="2" ry="2" />
<text  x="1188.43" y="479.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (27 samples, 0.13%)</title><rect x="922.0" y="277" width="1.5" height="15.0" fill="rgb(237,86,33)" rx="2" ry="2" />
<text  x="925.00" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (126 samples, 0.60%)</title><rect x="1007.0" y="341" width="7.1" height="15.0" fill="rgb(238,158,21)" rx="2" ry="2" />
<text  x="1010.02" y="351.5" ></text>
</g>
<g >
<title>update_rq_clock (13 samples, 0.06%)</title><rect x="210.8" y="357" width="0.8" height="15.0" fill="rgb(234,208,30)" rx="2" ry="2" />
<text  x="213.82" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (13 samples, 0.06%)</title><rect x="924.8" y="309" width="0.7" height="15.0" fill="rgb(248,110,1)" rx="2" ry="2" />
<text  x="927.77" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="1185.6" y="517" width="0.1" height="15.0" fill="rgb(250,41,5)" rx="2" ry="2" />
<text  x="1188.60" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (8 samples, 0.04%)</title><rect x="191.0" y="309" width="0.5" height="15.0" fill="rgb(211,184,51)" rx="2" ry="2" />
<text  x="194.00" y="319.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (3 samples, 0.01%)</title><rect x="56.7" y="69" width="0.2" height="15.0" fill="rgb(238,175,25)" rx="2" ry="2" />
<text  x="59.69" y="79.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (6 samples, 0.03%)</title><rect x="968.7" y="277" width="0.3" height="15.0" fill="rgb(209,131,47)" rx="2" ry="2" />
<text  x="971.69" y="287.5" ></text>
</g>
<g >
<title>shrink_lruvec (5 samples, 0.02%)</title><rect x="1186.9" y="421" width="0.3" height="15.0" fill="rgb(235,23,23)" rx="2" ry="2" />
<text  x="1189.89" y="431.5" ></text>
</g>
<g >
<title>balance_pgdat (5 samples, 0.02%)</title><rect x="1186.9" y="469" width="0.3" height="15.0" fill="rgb(236,175,51)" rx="2" ry="2" />
<text  x="1189.89" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (140 samples, 0.67%)</title><rect x="382.5" y="373" width="7.9" height="15.0" fill="rgb(213,111,1)" rx="2" ry="2" />
<text  x="385.50" y="383.5" ></text>
</g>
<g >
<title>generic_exec_single (3 samples, 0.01%)</title><rect x="50.1" y="277" width="0.2" height="15.0" fill="rgb(241,182,13)" rx="2" ry="2" />
<text  x="53.08" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::likely (4 samples, 0.02%)</title><rect x="1062.8" y="293" width="0.2" height="15.0" fill="rgb(228,172,30)" rx="2" ry="2" />
<text  x="1065.80" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.02%)</title><rect x="1054.1" y="293" width="0.3" height="15.0" fill="rgb(239,152,21)" rx="2" ry="2" />
<text  x="1057.11" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="1186.8" y="517" width="0.1" height="15.0" fill="rgb(237,55,5)" rx="2" ry="2" />
<text  x="1189.78" y="527.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="1178.9" y="341" width="0.1" height="15.0" fill="rgb(217,161,0)" rx="2" ry="2" />
<text  x="1181.88" y="351.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="1179.0" y="341" width="0.1" height="15.0" fill="rgb(228,85,0)" rx="2" ry="2" />
<text  x="1181.99" y="351.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="34.1" y="325" width="0.1" height="15.0" fill="rgb(251,50,40)" rx="2" ry="2" />
<text  x="37.05" y="335.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (4 samples, 0.02%)</title><rect x="213.5" y="373" width="0.2" height="15.0" fill="rgb(213,62,48)" rx="2" ry="2" />
<text  x="216.47" y="383.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.02%)</title><rect x="47.7" y="373" width="0.2" height="15.0" fill="rgb(228,88,5)" rx="2" ry="2" />
<text  x="50.66" y="383.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.08%)</title><rect x="1059.8" y="293" width="1.0" height="15.0" fill="rgb(234,49,17)" rx="2" ry="2" />
<text  x="1062.81" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (129 samples, 0.62%)</title><rect x="1104.9" y="357" width="7.2" height="15.0" fill="rgb(211,37,42)" rx="2" ry="2" />
<text  x="1107.86" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.08%)</title><rect x="967.8" y="405" width="0.9" height="15.0" fill="rgb(241,192,44)" rx="2" ry="2" />
<text  x="970.79" y="415.5" ></text>
</g>
<g >
<title>do_idle (665 samples, 3.18%)</title><rect x="115.2" y="469" width="37.5" height="15.0" fill="rgb(210,0,17)" rx="2" ry="2" />
<text  x="118.18" y="479.5" >do_..</text>
</g>
<g >
<title>start_secondary (131 samples, 0.63%)</title><rect x="12.6" y="501" width="7.4" height="15.0" fill="rgb(243,180,15)" rx="2" ry="2" />
<text  x="15.60" y="511.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (2 samples, 0.01%)</title><rect x="26.1" y="325" width="0.2" height="15.0" fill="rgb(245,197,35)" rx="2" ry="2" />
<text  x="29.15" y="335.5" ></text>
</g>
<g >
<title>[unknown] (104 samples, 0.50%)</title><rect x="1179.3" y="517" width="5.9" height="15.0" fill="rgb(218,185,12)" rx="2" ry="2" />
<text  x="1182.33" y="527.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_cbuf (9 samples, 0.04%)</title><rect x="925.8" y="405" width="0.5" height="15.0" fill="rgb(248,8,25)" rx="2" ry="2" />
<text  x="928.84" y="415.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 0.51%)</title><rect x="969.0" y="357" width="6.0" height="15.0" fill="rgb(209,16,32)" rx="2" ry="2" />
<text  x="972.03" y="367.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (4 samples, 0.02%)</title><rect x="188.7" y="341" width="0.2" height="15.0" fill="rgb(224,187,35)" rx="2" ry="2" />
<text  x="191.69" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (3,865 samples, 18.49%)</title><rect x="926.7" y="421" width="218.2" height="15.0" fill="rgb(217,157,49)" rx="2" ry="2" />
<text  x="929.69" y="431.5" >rustposix::safeposix::syscal..</text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="66.5" y="341" width="0.1" height="15.0" fill="rgb(229,129,16)" rx="2" ry="2" />
<text  x="69.46" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="113.9" y="501" width="0.5" height="15.0" fill="rgb(243,171,2)" rx="2" ry="2" />
<text  x="116.94" y="511.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.01%)</title><rect x="1185.4" y="389" width="0.1" height="15.0" fill="rgb(231,128,38)" rx="2" ry="2" />
<text  x="1188.43" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (7 samples, 0.03%)</title><rect x="33.5" y="517" width="0.4" height="15.0" fill="rgb(232,161,41)" rx="2" ry="2" />
<text  x="36.54" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.01%)</title><rect x="1185.4" y="293" width="0.1" height="15.0" fill="rgb(223,6,28)" rx="2" ry="2" />
<text  x="1188.43" y="303.5" ></text>
</g>
<g >
<title>shrink_inactive_list (4 samples, 0.02%)</title><rect x="1187.0" y="405" width="0.2" height="15.0" fill="rgb(225,142,13)" rx="2" ry="2" />
<text  x="1189.95" y="415.5" ></text>
</g>
<g >
<title>dispatcher (8,583 samples, 41.07%)</title><rect x="297.9" y="437" width="484.6" height="15.0" fill="rgb(248,197,30)" rx="2" ry="2" />
<text  x="300.93" y="447.5" >dispatcher</text>
</g>
<g >
<title>tick_nohz_restart (2 samples, 0.01%)</title><rect x="214.5" y="373" width="0.1" height="15.0" fill="rgb(228,22,36)" rx="2" ry="2" />
<text  x="217.49" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (57 samples, 0.27%)</title><rect x="911.2" y="293" width="3.2" height="15.0" fill="rgb(231,152,36)" rx="2" ry="2" />
<text  x="914.22" y="303.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (46 samples, 0.22%)</title><rect x="1033.3" y="293" width="2.6" height="15.0" fill="rgb(236,78,28)" rx="2" ry="2" />
<text  x="1036.28" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt; (116 samples, 0.55%)</title><rect x="883.7" y="421" width="6.5" height="15.0" fill="rgb(243,136,31)" rx="2" ry="2" />
<text  x="886.67" y="431.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.01%)</title><rect x="1185.4" y="501" width="0.1" height="15.0" fill="rgb(211,77,24)" rx="2" ry="2" />
<text  x="1188.43" y="511.5" ></text>
</g>
<g >
<title>record__write (47 samples, 0.22%)</title><rect x="55.4" y="421" width="2.6" height="15.0" fill="rgb(250,149,1)" rx="2" ry="2" />
<text  x="58.39" y="431.5" ></text>
</g>
<g >
<title>menu_select (15 samples, 0.07%)</title><rect x="46.8" y="357" width="0.9" height="15.0" fill="rgb(216,146,31)" rx="2" ry="2" />
<text  x="49.81" y="367.5" ></text>
</g>
<g >
<title>CompareAndSwap (11 samples, 0.05%)</title><rect x="1179.5" y="501" width="0.6" height="15.0" fill="rgb(234,178,15)" rx="2" ry="2" />
<text  x="1182.50" y="511.5" ></text>
</g>
<g >
<title>rest_init (197 samples, 0.94%)</title><rect x="40.1" y="437" width="11.2" height="15.0" fill="rgb(220,71,50)" rx="2" ry="2" />
<text  x="43.15" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (8 samples, 0.04%)</title><rect x="914.8" y="325" width="0.4" height="15.0" fill="rgb(223,10,6)" rx="2" ry="2" />
<text  x="917.77" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (20 samples, 0.10%)</title><rect x="1046.0" y="261" width="1.2" height="15.0" fill="rgb(235,205,24)" rx="2" ry="2" />
<text  x="1049.04" y="271.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (21 samples, 0.10%)</title><rect x="1037.9" y="357" width="1.2" height="15.0" fill="rgb(221,206,4)" rx="2" ry="2" />
<text  x="1040.91" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.02%)</title><rect x="55.1" y="437" width="0.2" height="15.0" fill="rgb(252,35,48)" rx="2" ry="2" />
<text  x="58.05" y="447.5" ></text>
</g>
<g >
<title>common_interrupt (2 samples, 0.01%)</title><rect x="12.8" y="389" width="0.1" height="15.0" fill="rgb(228,180,21)" rx="2" ry="2" />
<text  x="15.77" y="399.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (127 samples, 0.61%)</title><rect x="40.5" y="389" width="7.2" height="15.0" fill="rgb(250,140,54)" rx="2" ry="2" />
<text  x="43.49" y="399.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.01%)</title><rect x="147.5" y="373" width="0.1" height="15.0" fill="rgb(223,18,36)" rx="2" ry="2" />
<text  x="150.47" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (9 samples, 0.04%)</title><rect x="923.5" y="293" width="0.5" height="15.0" fill="rgb(247,9,54)" rx="2" ry="2" />
<text  x="926.52" y="303.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (50 samples, 0.24%)</title><rect x="798.9" y="453" width="2.8" height="15.0" fill="rgb(207,206,0)" rx="2" ry="2" />
<text  x="801.92" y="463.5" ></text>
</g>
<g >
<title>cpu_startup_entry (131 samples, 0.63%)</title><rect x="12.6" y="485" width="7.4" height="15.0" fill="rgb(233,170,35)" rx="2" ry="2" />
<text  x="15.60" y="495.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (6 samples, 0.03%)</title><rect x="293.6" y="437" width="0.3" height="15.0" fill="rgb(226,147,25)" rx="2" ry="2" />
<text  x="296.58" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="55.0" y="453" width="0.3" height="15.0" fill="rgb(228,136,0)" rx="2" ry="2" />
<text  x="58.00" y="463.5" ></text>
</g>
<g >
<title>ext4_finish_bio (2 samples, 0.01%)</title><rect x="33.5" y="405" width="0.2" height="15.0" fill="rgb(254,152,15)" rx="2" ry="2" />
<text  x="36.54" y="415.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (884 samples, 4.23%)</title><rect x="1014.1" y="405" width="49.9" height="15.0" fill="rgb(245,219,38)" rx="2" ry="2" />
<text  x="1017.14" y="415.5" >dashm..</text>
</g>
<g >
<title>NaClMutexUnlock (176 samples, 0.84%)</title><rect x="789.0" y="421" width="9.9" height="15.0" fill="rgb(227,8,6)" rx="2" ry="2" />
<text  x="791.99" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (114 samples, 0.55%)</title><rect x="12.7" y="421" width="6.4" height="15.0" fill="rgb(239,109,17)" rx="2" ry="2" />
<text  x="15.71" y="431.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (172 samples, 0.82%)</title><rect x="830.0" y="453" width="9.7" height="15.0" fill="rgb(216,28,41)" rx="2" ry="2" />
<text  x="833.03" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (169 samples, 0.81%)</title><rect x="1043.8" y="293" width="9.6" height="15.0" fill="rgb(242,110,51)" rx="2" ry="2" />
<text  x="1046.83" y="303.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (2 samples, 0.01%)</title><rect x="156.4" y="229" width="0.2" height="15.0" fill="rgb(253,64,50)" rx="2" ry="2" />
<text  x="159.45" y="239.5" ></text>
</g>
<g >
<title>cpuidle_enter (85 samples, 0.41%)</title><rect x="20.5" y="373" width="4.8" height="15.0" fill="rgb(219,93,1)" rx="2" ry="2" />
<text  x="23.50" y="383.5" ></text>
</g>
<g >
<title>HandleStackContext (303 samples, 1.45%)</title><rect x="244.1" y="485" width="17.1" height="15.0" fill="rgb(238,129,5)" rx="2" ry="2" />
<text  x="247.07" y="495.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (4 samples, 0.02%)</title><rect x="203.4" y="277" width="0.2" height="15.0" fill="rgb(221,127,30)" rx="2" ry="2" />
<text  x="206.36" y="287.5" ></text>
</g>
<g >
<title>[unknown] (119 samples, 0.57%)</title><rect x="51.3" y="517" width="6.7" height="15.0" fill="rgb(239,99,13)" rx="2" ry="2" />
<text  x="54.33" y="527.5" ></text>
</g>
<g >
<title>isolate_freepages (3 samples, 0.01%)</title><rect x="114.5" y="389" width="0.2" height="15.0" fill="rgb(206,19,50)" rx="2" ry="2" />
<text  x="117.50" y="399.5" ></text>
</g>
<g >
<title>shrink_dentry_list (3 samples, 0.01%)</title><rect x="65.9" y="341" width="0.2" height="15.0" fill="rgb(217,139,47)" rx="2" ry="2" />
<text  x="68.89" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="116.0" y="405" width="0.1" height="15.0" fill="rgb(232,211,1)" rx="2" ry="2" />
<text  x="118.97" y="415.5" ></text>
</g>
<g >
<title>kswapd (4 samples, 0.02%)</title><rect x="114.7" y="485" width="0.2" height="15.0" fill="rgb(230,204,5)" rx="2" ry="2" />
<text  x="117.67" y="495.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (8 samples, 0.04%)</title><rect x="739.2" y="325" width="0.4" height="15.0" fill="rgb(241,155,16)" rx="2" ry="2" />
<text  x="742.19" y="335.5" ></text>
</g>
<g >
<title>shrink_page_list (4 samples, 0.02%)</title><rect x="1187.0" y="389" width="0.2" height="15.0" fill="rgb(237,211,27)" rx="2" ry="2" />
<text  x="1189.95" y="399.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (5 samples, 0.02%)</title><rect x="57.6" y="101" width="0.3" height="15.0" fill="rgb(249,122,29)" rx="2" ry="2" />
<text  x="60.65" y="111.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (50 samples, 0.24%)</title><rect x="1045.1" y="277" width="2.9" height="15.0" fill="rgb(239,120,54)" rx="2" ry="2" />
<text  x="1048.13" y="287.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.01%)</title><rect x="31.6" y="405" width="0.1" height="15.0" fill="rgb(251,2,22)" rx="2" ry="2" />
<text  x="34.57" y="415.5" ></text>
</g>
<g >
<title>cpuidle_enter (25 samples, 0.12%)</title><rect x="1187.2" y="437" width="1.4" height="15.0" fill="rgb(213,174,42)" rx="2" ry="2" />
<text  x="1190.23" y="447.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (130 samples, 0.62%)</title><rect x="1006.8" y="373" width="7.3" height="15.0" fill="rgb(224,139,2)" rx="2" ry="2" />
<text  x="1009.80" y="383.5" ></text>
</g>
<g >
<title>event_function_call (64 samples, 0.31%)</title><rect x="51.3" y="309" width="3.6" height="15.0" fill="rgb(210,222,17)" rx="2" ry="2" />
<text  x="54.33" y="319.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (13 samples, 0.06%)</title><rect x="96.4" y="293" width="0.7" height="15.0" fill="rgb(210,210,41)" rx="2" ry="2" />
<text  x="99.38" y="303.5" ></text>
</g>
<g >
<title>core::cmp::min_by (2 samples, 0.01%)</title><rect x="1071.5" y="357" width="0.1" height="15.0" fill="rgb(223,32,8)" rx="2" ry="2" />
<text  x="1074.50" y="367.5" ></text>
</g>
<g >
<title>end_page_writeback (2 samples, 0.01%)</title><rect x="33.5" y="389" width="0.2" height="15.0" fill="rgb(247,184,52)" rx="2" ry="2" />
<text  x="36.54" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (9 samples, 0.04%)</title><rect x="91.3" y="325" width="0.5" height="15.0" fill="rgb(242,120,45)" rx="2" ry="2" />
<text  x="94.30" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (10 samples, 0.05%)</title><rect x="1178.7" y="469" width="0.6" height="15.0" fill="rgb(233,24,43)" rx="2" ry="2" />
<text  x="1181.71" y="479.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (355 samples, 1.70%)</title><rect x="1043.8" y="357" width="20.0" height="15.0" fill="rgb(253,214,27)" rx="2" ry="2" />
<text  x="1046.78" y="367.5" ></text>
</g>
<g >
<title>nohz_csd_func (8 samples, 0.04%)</title><rect x="93.6" y="373" width="0.4" height="15.0" fill="rgb(245,157,7)" rx="2" ry="2" />
<text  x="96.56" y="383.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.01%)</title><rect x="206.3" y="293" width="0.1" height="15.0" fill="rgb(243,73,45)" rx="2" ry="2" />
<text  x="209.30" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (4 samples, 0.02%)</title><rect x="190.6" y="309" width="0.2" height="15.0" fill="rgb(238,144,39)" rx="2" ry="2" />
<text  x="193.60" y="319.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (12 samples, 0.06%)</title><rect x="1038.4" y="325" width="0.7" height="15.0" fill="rgb(207,88,6)" rx="2" ry="2" />
<text  x="1041.41" y="335.5" ></text>
</g>
<g >
<title>start_secondary (35 samples, 0.17%)</title><rect x="1187.2" y="501" width="2.0" height="15.0" fill="rgb(208,139,50)" rx="2" ry="2" />
<text  x="1190.18" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (12 samples, 0.06%)</title><rect x="1038.4" y="341" width="0.7" height="15.0" fill="rgb(220,117,45)" rx="2" ry="2" />
<text  x="1041.41" y="351.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="1179.0" y="357" width="0.2" height="15.0" fill="rgb(230,108,30)" rx="2" ry="2" />
<text  x="1181.99" y="367.5" ></text>
</g>
<g >
<title>NaClLog (2 samples, 0.01%)</title><rect x="220.1" y="501" width="0.1" height="15.0" fill="rgb(254,11,45)" rx="2" ry="2" />
<text  x="223.13" y="511.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (71 samples, 0.34%)</title><rect x="1039.1" y="341" width="4.0" height="15.0" fill="rgb(246,114,9)" rx="2" ry="2" />
<text  x="1042.09" y="351.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (99 samples, 0.47%)</title><rect x="1064.0" y="405" width="5.6" height="15.0" fill="rgb(245,136,51)" rx="2" ry="2" />
<text  x="1067.05" y="415.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (29 samples, 0.14%)</title><rect x="1057.0" y="229" width="1.6" height="15.0" fill="rgb(249,70,30)" rx="2" ry="2" />
<text  x="1059.99" y="239.5" ></text>
</g>
<g >
<title>dispatcher@plt (6 samples, 0.03%)</title><rect x="1144.9" y="437" width="0.3" height="15.0" fill="rgb(231,101,38)" rx="2" ry="2" />
<text  x="1147.89" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (178 samples, 0.85%)</title><rect x="1016.8" y="293" width="10.0" height="15.0" fill="rgb(252,204,9)" rx="2" ry="2" />
<text  x="1019.79" y="303.5" ></text>
</g>
<g >
<title>shrink_page_list (3 samples, 0.01%)</title><rect x="114.7" y="389" width="0.2" height="15.0" fill="rgb(207,150,51)" rx="2" ry="2" />
<text  x="117.73" y="399.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.02%)</title><rect x="333.2" y="373" width="0.2" height="15.0" fill="rgb(208,2,5)" rx="2" ry="2" />
<text  x="336.21" y="383.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="116.0" y="325" width="0.1" height="15.0" fill="rgb(252,74,24)" rx="2" ry="2" />
<text  x="118.97" y="335.5" ></text>
</g>
<g >
<title>migrate_pages (4 samples, 0.02%)</title><rect x="65.6" y="437" width="0.2" height="15.0" fill="rgb(250,27,29)" rx="2" ry="2" />
<text  x="68.55" y="447.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (6 samples, 0.03%)</title><rect x="1117.8" y="325" width="0.3" height="15.0" fill="rgb(210,49,13)" rx="2" ry="2" />
<text  x="1120.79" y="335.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (6 samples, 0.03%)</title><rect x="801.7" y="453" width="0.4" height="15.0" fill="rgb(229,55,53)" rx="2" ry="2" />
<text  x="804.75" y="463.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (7 samples, 0.03%)</title><rect x="798.2" y="405" width="0.4" height="15.0" fill="rgb(243,30,25)" rx="2" ry="2" />
<text  x="801.19" y="415.5" ></text>
</g>
<g >
<title>unmap_and_move (4 samples, 0.02%)</title><rect x="65.6" y="421" width="0.2" height="15.0" fill="rgb(232,179,29)" rx="2" ry="2" />
<text  x="68.55" y="431.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (6 samples, 0.03%)</title><rect x="968.7" y="373" width="0.3" height="15.0" fill="rgb(226,212,35)" rx="2" ry="2" />
<text  x="971.69" y="383.5" ></text>
</g>
<g >
<title>ext4_release_io_end (2 samples, 0.01%)</title><rect x="33.5" y="421" width="0.2" height="15.0" fill="rgb(231,187,12)" rx="2" ry="2" />
<text  x="36.54" y="431.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (239 samples, 1.14%)</title><rect x="78.6" y="389" width="13.5" height="15.0" fill="rgb(218,208,19)" rx="2" ry="2" />
<text  x="81.59" y="399.5" ></text>
</g>
<g >
<title>test_clear_page_writeback (2 samples, 0.01%)</title><rect x="33.5" y="373" width="0.2" height="15.0" fill="rgb(222,123,10)" rx="2" ry="2" />
<text  x="36.54" y="383.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (3 samples, 0.01%)</title><rect x="56.7" y="85" width="0.2" height="15.0" fill="rgb(219,40,38)" rx="2" ry="2" />
<text  x="59.69" y="95.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (4 samples, 0.02%)</title><rect x="919.7" y="309" width="0.2" height="15.0" fill="rgb(248,105,29)" rx="2" ry="2" />
<text  x="922.69" y="319.5" ></text>
</g>
<g >
<title>menu_update (2 samples, 0.01%)</title><rect x="90.8" y="341" width="0.1" height="15.0" fill="rgb(223,156,35)" rx="2" ry="2" />
<text  x="93.79" y="351.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (8 samples, 0.04%)</title><rect x="156.4" y="261" width="0.4" height="15.0" fill="rgb(216,30,17)" rx="2" ry="2" />
<text  x="159.39" y="271.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (2 samples, 0.01%)</title><rect x="56.4" y="117" width="0.1" height="15.0" fill="rgb(220,13,11)" rx="2" ry="2" />
<text  x="59.35" y="127.5" ></text>
</g>
<g >
<title>wb_do_writeback (5 samples, 0.02%)</title><rect x="33.7" y="437" width="0.2" height="15.0" fill="rgb(231,83,25)" rx="2" ry="2" />
<text  x="36.66" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (676 samples, 3.23%)</title><rect x="743.7" y="309" width="38.2" height="15.0" fill="rgb(236,205,43)" rx="2" ry="2" />
<text  x="746.71" y="319.5" >[li..</text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (7 samples, 0.03%)</title><rect x="184.4" y="325" width="0.4" height="15.0" fill="rgb(249,8,3)" rx="2" ry="2" />
<text  x="187.39" y="335.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (874 samples, 4.18%)</title><rect x="1014.5" y="389" width="49.3" height="15.0" fill="rgb(213,181,43)" rx="2" ry="2" />
<text  x="1017.48" y="399.5" >&lt;das..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (106 samples, 0.51%)</title><rect x="969.0" y="389" width="6.0" height="15.0" fill="rgb(246,18,21)" rx="2" ry="2" />
<text  x="972.03" y="399.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3 samples, 0.01%)</title><rect x="116.0" y="373" width="0.1" height="15.0" fill="rgb(239,213,38)" rx="2" ry="2" />
<text  x="118.97" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.03%)</title><rect x="1122.4" y="373" width="0.4" height="15.0" fill="rgb(231,103,54)" rx="2" ry="2" />
<text  x="1125.42" y="383.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (85 samples, 0.41%)</title><rect x="1054.4" y="325" width="4.8" height="15.0" fill="rgb(245,123,26)" rx="2" ry="2" />
<text  x="1057.39" y="335.5" ></text>
</g>
<g >
<title>pick_next_task_idle (4 samples, 0.02%)</title><rect x="210.6" y="357" width="0.2" height="15.0" fill="rgb(249,2,36)" rx="2" ry="2" />
<text  x="213.59" y="367.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (46 samples, 0.22%)</title><rect x="55.4" y="197" width="2.6" height="15.0" fill="rgb(237,97,35)" rx="2" ry="2" />
<text  x="58.39" y="207.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (88 samples, 0.42%)</title><rect x="898.7" y="357" width="5.0" height="15.0" fill="rgb(231,170,46)" rx="2" ry="2" />
<text  x="901.74" y="367.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (3 samples, 0.01%)</title><rect x="219.9" y="501" width="0.2" height="15.0" fill="rgb(238,45,3)" rx="2" ry="2" />
<text  x="222.91" y="511.5" ></text>
</g>
<g >
<title>pm_qos_read_value (2 samples, 0.01%)</title><rect x="190.0" y="341" width="0.2" height="15.0" fill="rgb(245,158,12)" rx="2" ry="2" />
<text  x="193.04" y="351.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (568 samples, 2.72%)</title><rect x="115.7" y="421" width="32.1" height="15.0" fill="rgb(233,121,42)" rx="2" ry="2" />
<text  x="118.69" y="431.5" >cp..</text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (116 samples, 0.55%)</title><rect x="883.7" y="373" width="6.5" height="15.0" fill="rgb(205,20,7)" rx="2" ry="2" />
<text  x="886.67" y="383.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (598 samples, 2.86%)</title><rect x="115.3" y="453" width="33.8" height="15.0" fill="rgb(245,144,37)" rx="2" ry="2" />
<text  x="118.29" y="463.5" >cp..</text>
</g>
<g >
<title>x86_64_start_kernel (208 samples, 1.00%)</title><rect x="20.0" y="501" width="11.7" height="15.0" fill="rgb(220,45,9)" rx="2" ry="2" />
<text  x="22.99" y="511.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="33.9" y="389" width="0.3" height="15.0" fill="rgb(222,75,27)" rx="2" ry="2" />
<text  x="36.94" y="399.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.01%)</title><rect x="891.5" y="325" width="0.1" height="15.0" fill="rgb(244,13,14)" rx="2" ry="2" />
<text  x="894.46" y="335.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 0.01%)</title><rect x="34.1" y="341" width="0.1" height="15.0" fill="rgb(240,130,26)" rx="2" ry="2" />
<text  x="37.05" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (26 samples, 0.12%)</title><rect x="217.0" y="501" width="1.4" height="15.0" fill="rgb(209,161,15)" rx="2" ry="2" />
<text  x="219.97" y="511.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="297.6" y="325" width="0.2" height="15.0" fill="rgb(240,191,37)" rx="2" ry="2" />
<text  x="300.65" y="335.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (10 samples, 0.05%)</title><rect x="904.2" y="325" width="0.5" height="15.0" fill="rgb(245,222,19)" rx="2" ry="2" />
<text  x="907.16" y="335.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::ser::Serialize for dashmap::DashMap&lt;K,V,H&gt;&gt;::serialize (2 samples, 0.01%)</title><rect x="1185.4" y="325" width="0.1" height="15.0" fill="rgb(220,49,34)" rx="2" ry="2" />
<text  x="1188.43" y="335.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (46 samples, 0.22%)</title><rect x="55.4" y="213" width="2.6" height="15.0" fill="rgb(224,95,39)" rx="2" ry="2" />
<text  x="58.39" y="223.5" ></text>
</g>
<g >
<title>start_kernel (1,124 samples, 5.38%)</title><rect x="153.0" y="469" width="63.5" height="15.0" fill="rgb(247,45,37)" rx="2" ry="2" />
<text  x="156.00" y="479.5" >start_..</text>
</g>
<g >
<title>start_secondary (670 samples, 3.21%)</title><rect x="115.2" y="501" width="37.8" height="15.0" fill="rgb(247,5,21)" rx="2" ry="2" />
<text  x="118.18" y="511.5" >sta..</text>
</g>
<g >
<title>kick_ilb (21 samples, 0.10%)</title><rect x="29.2" y="309" width="1.2" height="15.0" fill="rgb(213,62,2)" rx="2" ry="2" />
<text  x="32.20" y="319.5" ></text>
</g>
<g >
<title>NaClLog (11 samples, 0.05%)</title><rect x="853.4" y="437" width="0.6" height="15.0" fill="rgb(224,128,8)" rx="2" ry="2" />
<text  x="856.41" y="447.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.06%)</title><rect x="924.8" y="293" width="0.7" height="15.0" fill="rgb(245,164,20)" rx="2" ry="2" />
<text  x="927.77" y="303.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (30 samples, 0.14%)</title><rect x="214.7" y="405" width="1.6" height="15.0" fill="rgb(242,118,31)" rx="2" ry="2" />
<text  x="217.66" y="415.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (698 samples, 3.34%)</title><rect x="154.5" y="389" width="39.4" height="15.0" fill="rgb(206,34,34)" rx="2" ry="2" />
<text  x="157.53" y="399.5" >cpu..</text>
</g>
<g >
<title>poll_idle (451 samples, 2.16%)</title><rect x="158.8" y="341" width="25.5" height="15.0" fill="rgb(242,113,8)" rx="2" ry="2" />
<text  x="161.82" y="351.5" >p..</text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (2 samples, 0.01%)</title><rect x="1185.4" y="213" width="0.1" height="15.0" fill="rgb(222,186,3)" rx="2" ry="2" />
<text  x="1188.43" y="223.5" ></text>
</g>
<g >
<title>balance_pgdat (4 samples, 0.02%)</title><rect x="114.7" y="469" width="0.2" height="15.0" fill="rgb(234,102,24)" rx="2" ry="2" />
<text  x="117.67" y="479.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (9 samples, 0.04%)</title><rect x="968.2" y="389" width="0.5" height="15.0" fill="rgb(209,70,18)" rx="2" ry="2" />
<text  x="971.18" y="399.5" ></text>
</g>
<g >
<title>newidle_balance (4 samples, 0.02%)</title><rect x="19.6" y="405" width="0.2" height="15.0" fill="rgb(210,62,1)" rx="2" ry="2" />
<text  x="22.60" y="415.5" ></text>
</g>
<g >
<title>shrink_lruvec (4 samples, 0.02%)</title><rect x="114.7" y="421" width="0.2" height="15.0" fill="rgb(222,53,19)" rx="2" ry="2" />
<text  x="117.67" y="431.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (64 samples, 0.31%)</title><rect x="51.3" y="469" width="3.6" height="15.0" fill="rgb(243,198,22)" rx="2" ry="2" />
<text  x="54.33" y="479.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (64 samples, 0.31%)</title><rect x="51.3" y="453" width="3.6" height="15.0" fill="rgb(248,47,15)" rx="2" ry="2" />
<text  x="54.33" y="463.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (10 samples, 0.05%)</title><rect x="1027.7" y="373" width="0.6" height="15.0" fill="rgb(236,222,35)" rx="2" ry="2" />
<text  x="1030.74" y="383.5" ></text>
</g>
<g >
<title>dispatcher (4,872 samples, 23.31%)</title><rect x="869.8" y="437" width="275.1" height="15.0" fill="rgb(234,67,16)" rx="2" ry="2" />
<text  x="872.83" y="447.5" >dispatcher</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="297.8" y="341" width="0.1" height="15.0" fill="rgb(231,186,16)" rx="2" ry="2" />
<text  x="300.82" y="351.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (51 samples, 0.24%)</title><rect x="839.7" y="453" width="2.9" height="15.0" fill="rgb(207,43,8)" rx="2" ry="2" />
<text  x="842.74" y="463.5" ></text>
</g>
<g >
<title>perf_ioctl (64 samples, 0.31%)</title><rect x="51.3" y="373" width="3.6" height="15.0" fill="rgb(225,51,2)" rx="2" ry="2" />
<text  x="54.33" y="383.5" ></text>
</g>
<g >
<title>cpuidle_select (115 samples, 0.55%)</title><rect x="187.2" y="373" width="6.5" height="15.0" fill="rgb(241,176,14)" rx="2" ry="2" />
<text  x="190.22" y="383.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 0.31%)</title><rect x="51.3" y="261" width="3.6" height="15.0" fill="rgb(227,166,16)" rx="2" ry="2" />
<text  x="54.33" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (9 samples, 0.04%)</title><rect x="1118.9" y="325" width="0.5" height="15.0" fill="rgb(249,78,0)" rx="2" ry="2" />
<text  x="1121.86" y="335.5" ></text>
</g>
<g >
<title>read_tsc (5 samples, 0.02%)</title><rect x="30.8" y="373" width="0.3" height="15.0" fill="rgb(242,209,11)" rx="2" ry="2" />
<text  x="33.78" y="383.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (85 samples, 0.41%)</title><rect x="1054.4" y="309" width="4.8" height="15.0" fill="rgb(221,168,8)" rx="2" ry="2" />
<text  x="1057.39" y="319.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (8,583 samples, 41.07%)</title><rect x="297.9" y="485" width="484.6" height="15.0" fill="rgb(224,169,15)" rx="2" ry="2" />
<text  x="300.93" y="495.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>get_next_timer_interrupt (22 samples, 0.11%)</title><rect x="192.1" y="309" width="1.2" height="15.0" fill="rgb(223,39,41)" rx="2" ry="2" />
<text  x="195.07" y="319.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (7 samples, 0.03%)</title><rect x="785.0" y="469" width="0.4" height="15.0" fill="rgb(211,43,42)" rx="2" ry="2" />
<text  x="787.98" y="479.5" ></text>
</g>
<g >
<title>proactive_compact_node (4 samples, 0.02%)</title><rect x="65.6" y="469" width="0.2" height="15.0" fill="rgb(228,53,34)" rx="2" ry="2" />
<text  x="68.55" y="479.5" ></text>
</g>
<g >
<title>cpuidle_enter (563 samples, 2.69%)</title><rect x="155.4" y="373" width="31.8" height="15.0" fill="rgb(206,142,50)" rx="2" ry="2" />
<text  x="158.43" y="383.5" >cp..</text>
</g>
<g >
<title>record__mmap_read_evlist (48 samples, 0.23%)</title><rect x="55.3" y="469" width="2.7" height="15.0" fill="rgb(224,24,2)" rx="2" ry="2" />
<text  x="58.33" y="479.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (9 samples, 0.04%)</title><rect x="925.8" y="373" width="0.5" height="15.0" fill="rgb(207,123,20)" rx="2" ry="2" />
<text  x="928.84" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (7 samples, 0.03%)</title><rect x="26.3" y="325" width="0.4" height="15.0" fill="rgb(239,150,20)" rx="2" ry="2" />
<text  x="29.32" y="335.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (123 samples, 0.59%)</title><rect x="999.8" y="357" width="6.9" height="15.0" fill="rgb(235,202,17)" rx="2" ry="2" />
<text  x="1002.80" y="367.5" ></text>
</g>
<g >
<title>idle_cpu (3 samples, 0.01%)</title><rect x="95.6" y="293" width="0.2" height="15.0" fill="rgb(220,76,39)" rx="2" ry="2" />
<text  x="98.64" y="303.5" ></text>
</g>
<g >
<title>find_next_bit (2 samples, 0.01%)</title><rect x="203.6" y="293" width="0.1" height="15.0" fill="rgb(235,103,3)" rx="2" ry="2" />
<text  x="206.59" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="297.6" y="373" width="0.2" height="15.0" fill="rgb(239,171,6)" rx="2" ry="2" />
<text  x="300.65" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter (109 samples, 0.52%)</title><rect x="33.9" y="437" width="6.2" height="15.0" fill="rgb(208,111,9)" rx="2" ry="2" />
<text  x="36.94" y="447.5" ></text>
</g>
<g >
<title>newidle_balance (2 samples, 0.01%)</title><rect x="1189.7" y="341" width="0.1" height="15.0" fill="rgb(230,81,13)" rx="2" ry="2" />
<text  x="1192.72" y="351.5" ></text>
</g>
<g >
<title>llist_reverse_order (19 samples, 0.09%)</title><rect x="195.8" y="373" width="1.1" height="15.0" fill="rgb(231,197,53)" rx="2" ry="2" />
<text  x="198.80" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (2 samples, 0.01%)</title><rect x="297.8" y="405" width="0.1" height="15.0" fill="rgb(229,22,14)" rx="2" ry="2" />
<text  x="300.82" y="415.5" ></text>
</g>
<g >
<title>NaClMutexLock (5 samples, 0.02%)</title><rect x="1181.1" y="501" width="0.3" height="15.0" fill="rgb(221,183,7)" rx="2" ry="2" />
<text  x="1184.08" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (99 samples, 0.47%)</title><rect x="1032.3" y="309" width="5.6" height="15.0" fill="rgb(253,97,18)" rx="2" ry="2" />
<text  x="1035.32" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (28 samples, 0.13%)</title><rect x="911.9" y="277" width="1.6" height="15.0" fill="rgb(228,72,23)" rx="2" ry="2" />
<text  x="914.89" y="287.5" ></text>
</g>
<g >
<title>__cmd_record (119 samples, 0.57%)</title><rect x="51.3" y="501" width="6.7" height="15.0" fill="rgb(231,74,43)" rx="2" ry="2" />
<text  x="54.33" y="511.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (15 samples, 0.07%)</title><rect x="1189.2" y="485" width="0.8" height="15.0" fill="rgb(217,188,2)" rx="2" ry="2" />
<text  x="1192.15" y="495.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7 samples, 0.03%)</title><rect x="1015.9" y="341" width="0.4" height="15.0" fill="rgb(243,20,51)" rx="2" ry="2" />
<text  x="1018.94" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (15 samples, 0.07%)</title><rect x="156.0" y="325" width="0.8" height="15.0" fill="rgb(207,217,3)" rx="2" ry="2" />
<text  x="159.00" y="335.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="66.5" y="373" width="0.1" height="15.0" fill="rgb(215,24,49)" rx="2" ry="2" />
<text  x="69.46" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (97 samples, 0.46%)</title><rect x="877.9" y="405" width="5.4" height="15.0" fill="rgb(252,116,28)" rx="2" ry="2" />
<text  x="880.85" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.02%)</title><rect x="91.6" y="277" width="0.2" height="15.0" fill="rgb(240,159,49)" rx="2" ry="2" />
<text  x="94.58" y="287.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::PIPE_TABLE (8 samples, 0.04%)</title><rect x="1186.3" y="517" width="0.5" height="15.0" fill="rgb(205,145,20)" rx="2" ry="2" />
<text  x="1189.33" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (2 samples, 0.01%)</title><rect x="1185.4" y="421" width="0.1" height="15.0" fill="rgb(212,47,35)" rx="2" ry="2" />
<text  x="1188.43" y="431.5" ></text>
</g>
<g >
<title>event_function (64 samples, 0.31%)</title><rect x="51.3" y="245" width="3.6" height="15.0" fill="rgb(239,208,52)" rx="2" ry="2" />
<text  x="54.33" y="255.5" ></text>
</g>
<g >
<title>shrink_slab_memcg (4 samples, 0.02%)</title><rect x="65.8" y="405" width="0.3" height="15.0" fill="rgb(228,110,18)" rx="2" ry="2" />
<text  x="68.84" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (79 samples, 0.38%)</title><rect x="915.2" y="309" width="4.5" height="15.0" fill="rgb(249,216,48)" rx="2" ry="2" />
<text  x="918.23" y="319.5" ></text>
</g>
<g >
<title>menu_update (10 samples, 0.05%)</title><rect x="189.4" y="341" width="0.6" height="15.0" fill="rgb(214,211,2)" rx="2" ry="2" />
<text  x="192.42" y="351.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (10 samples, 0.05%)</title><rect x="218.4" y="501" width="0.6" height="15.0" fill="rgb(242,203,36)" rx="2" ry="2" />
<text  x="221.44" y="511.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.55%)</title><rect x="883.7" y="389" width="6.5" height="15.0" fill="rgb(206,215,30)" rx="2" ry="2" />
<text  x="886.67" y="399.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (123 samples, 0.59%)</title><rect x="999.8" y="373" width="6.9" height="15.0" fill="rgb(227,217,10)" rx="2" ry="2" />
<text  x="1002.80" y="383.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (5 samples, 0.02%)</title><rect x="33.7" y="389" width="0.2" height="15.0" fill="rgb(221,162,15)" rx="2" ry="2" />
<text  x="36.66" y="399.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (199 samples, 0.95%)</title><rect x="787.7" y="437" width="11.2" height="15.0" fill="rgb(229,149,21)" rx="2" ry="2" />
<text  x="790.69" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (84 samples, 0.40%)</title><rect x="892.0" y="309" width="4.7" height="15.0" fill="rgb(246,77,12)" rx="2" ry="2" />
<text  x="894.97" y="319.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (32 samples, 0.15%)</title><rect x="228.8" y="501" width="1.8" height="15.0" fill="rgb(241,107,10)" rx="2" ry="2" />
<text  x="231.77" y="511.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="66.6" y="341" width="0.1" height="15.0" fill="rgb(239,61,33)" rx="2" ry="2" />
<text  x="69.57" y="351.5" ></text>
</g>
<g >
<title>[anon] (241 samples, 1.15%)</title><rect x="217.0" y="517" width="13.6" height="15.0" fill="rgb(234,53,51)" rx="2" ry="2" />
<text  x="219.97" y="527.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (2 samples, 0.01%)</title><rect x="57.8" y="85" width="0.1" height="15.0" fill="rgb(245,17,14)" rx="2" ry="2" />
<text  x="60.82" y="95.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (3 samples, 0.01%)</title><rect x="50.1" y="261" width="0.2" height="15.0" fill="rgb(217,109,34)" rx="2" ry="2" />
<text  x="53.08" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (106 samples, 0.51%)</title><rect x="969.0" y="325" width="6.0" height="15.0" fill="rgb(218,175,50)" rx="2" ry="2" />
<text  x="972.03" y="335.5" ></text>
</g>
<g >
<title>worker_thread (4 samples, 0.02%)</title><rect x="66.1" y="485" width="0.2" height="15.0" fill="rgb(236,204,17)" rx="2" ry="2" />
<text  x="69.06" y="495.5" ></text>
</g>
<g >
<title>new_sync_write (46 samples, 0.22%)</title><rect x="55.4" y="293" width="2.6" height="15.0" fill="rgb(206,37,49)" rx="2" ry="2" />
<text  x="58.39" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="1184.1" y="501" width="0.1" height="15.0" fill="rgb(225,67,12)" rx="2" ry="2" />
<text  x="1187.13" y="511.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (102 samples, 0.49%)</title><rect x="13.0" y="405" width="5.8" height="15.0" fill="rgb(245,16,17)" rx="2" ry="2" />
<text  x="16.05" y="415.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.01%)</title><rect x="891.9" y="309" width="0.1" height="15.0" fill="rgb(224,179,8)" rx="2" ry="2" />
<text  x="894.85" y="319.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (6 samples, 0.03%)</title><rect x="798.6" y="405" width="0.3" height="15.0" fill="rgb(235,57,25)" rx="2" ry="2" />
<text  x="801.59" y="415.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="33.9" y="373" width="0.2" height="15.0" fill="rgb(227,156,36)" rx="2" ry="2" />
<text  x="36.94" y="383.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (5 samples, 0.02%)</title><rect x="803.4" y="469" width="0.3" height="15.0" fill="rgb(216,180,42)" rx="2" ry="2" />
<text  x="806.39" y="479.5" ></text>
</g>
<g >
<title>perf_event_task_tick (2 samples, 0.01%)</title><rect x="156.1" y="165" width="0.1" height="15.0" fill="rgb(229,12,18)" rx="2" ry="2" />
<text  x="159.05" y="175.5" ></text>
</g>
<g >
<title>NaClXMutexLock (3 samples, 0.01%)</title><rect x="1145.2" y="485" width="0.2" height="15.0" fill="rgb(214,229,33)" rx="2" ry="2" />
<text  x="1148.23" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.05%)</title><rect x="917.9" y="245" width="0.5" height="15.0" fill="rgb(243,212,25)" rx="2" ry="2" />
<text  x="920.88" y="255.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (3 samples, 0.01%)</title><rect x="19.6" y="373" width="0.2" height="15.0" fill="rgb(243,225,50)" rx="2" ry="2" />
<text  x="22.60" y="383.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (18 samples, 0.09%)</title><rect x="47.7" y="389" width="1.0" height="15.0" fill="rgb(236,203,16)" rx="2" ry="2" />
<text  x="50.66" y="399.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (2 samples, 0.01%)</title><rect x="297.6" y="293" width="0.2" height="15.0" fill="rgb(207,43,54)" rx="2" ry="2" />
<text  x="300.65" y="303.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (133 samples, 0.64%)</title><rect x="1104.6" y="389" width="7.5" height="15.0" fill="rgb(250,41,35)" rx="2" ry="2" />
<text  x="1107.64" y="399.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (307 samples, 1.47%)</title><rect x="33.9" y="517" width="17.4" height="15.0" fill="rgb(205,217,42)" rx="2" ry="2" />
<text  x="36.94" y="527.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (3 samples, 0.01%)</title><rect x="1179.3" y="501" width="0.2" height="15.0" fill="rgb(235,29,10)" rx="2" ry="2" />
<text  x="1182.33" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (128 samples, 0.61%)</title><rect x="791.0" y="405" width="7.2" height="15.0" fill="rgb(224,157,9)" rx="2" ry="2" />
<text  x="793.96" y="415.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (191 samples, 0.91%)</title><rect x="1016.3" y="357" width="10.8" height="15.0" fill="rgb(229,111,49)" rx="2" ry="2" />
<text  x="1019.34" y="367.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (362 samples, 1.73%)</title><rect x="262.7" y="485" width="20.4" height="15.0" fill="rgb(224,66,44)" rx="2" ry="2" />
<text  x="265.70" y="495.5" ></text>
</g>
<g >
<title>rcu_idle_exit (5 samples, 0.02%)</title><rect x="89.1" y="341" width="0.3" height="15.0" fill="rgb(234,34,38)" rx="2" ry="2" />
<text  x="92.10" y="351.5" ></text>
</g>
<g >
<title>down_write_killable (2 samples, 0.01%)</title><rect x="297.6" y="309" width="0.2" height="15.0" fill="rgb(237,219,26)" rx="2" ry="2" />
<text  x="300.65" y="319.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 0.01%)</title><rect x="33.1" y="469" width="0.2" height="15.0" fill="rgb(215,160,30)" rx="2" ry="2" />
<text  x="36.15" y="479.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (82 samples, 0.39%)</title><rect x="904.7" y="341" width="4.7" height="15.0" fill="rgb(244,136,27)" rx="2" ry="2" />
<text  x="907.72" y="351.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (687 samples, 3.29%)</title><rect x="743.1" y="341" width="38.8" height="15.0" fill="rgb(246,19,46)" rx="2" ry="2" />
<text  x="746.09" y="351.5" >rin..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.04%)</title><rect x="918.4" y="245" width="0.5" height="15.0" fill="rgb(247,222,0)" rx="2" ry="2" />
<text  x="921.44" y="255.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (2 samples, 0.01%)</title><rect x="1188.9" y="389" width="0.1" height="15.0" fill="rgb(233,139,19)" rx="2" ry="2" />
<text  x="1191.93" y="399.5" ></text>
</g>
<g >
<title>NaClAppDtor (2 samples, 0.01%)</title><rect x="297.6" y="421" width="0.2" height="15.0" fill="rgb(212,38,48)" rx="2" ry="2" />
<text  x="300.65" y="431.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (2 samples, 0.01%)</title><rect x="296.0" y="485" width="0.1" height="15.0" fill="rgb(235,144,8)" rx="2" ry="2" />
<text  x="299.01" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (2 samples, 0.01%)</title><rect x="77.7" y="421" width="0.1" height="15.0" fill="rgb(208,145,45)" rx="2" ry="2" />
<text  x="80.69" y="431.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.01%)</title><rect x="1189.7" y="373" width="0.1" height="15.0" fill="rgb(252,62,12)" rx="2" ry="2" />
<text  x="1192.72" y="383.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (5 samples, 0.02%)</title><rect x="57.6" y="117" width="0.3" height="15.0" fill="rgb(220,55,24)" rx="2" ry="2" />
<text  x="60.65" y="127.5" ></text>
</g>
<g >
<title>do_iter_write (46 samples, 0.22%)</title><rect x="55.4" y="245" width="2.6" height="15.0" fill="rgb(228,170,30)" rx="2" ry="2" />
<text  x="58.39" y="255.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (4 samples, 0.02%)</title><rect x="230.4" y="485" width="0.2" height="15.0" fill="rgb(232,1,50)" rx="2" ry="2" />
<text  x="233.35" y="495.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (9 samples, 0.04%)</title><rect x="925.8" y="389" width="0.5" height="15.0" fill="rgb(206,204,27)" rx="2" ry="2" />
<text  x="928.84" y="399.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (625 samples, 2.99%)</title><rect x="890.2" y="421" width="35.3" height="15.0" fill="rgb(206,82,47)" rx="2" ry="2" />
<text  x="893.22" y="431.5" >da..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.03%)</title><rect x="900.1" y="309" width="0.3" height="15.0" fill="rgb(207,135,11)" rx="2" ry="2" />
<text  x="903.10" y="319.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (118 samples, 0.56%)</title><rect x="823.2" y="437" width="6.7" height="15.0" fill="rgb(222,140,24)" rx="2" ry="2" />
<text  x="826.20" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (169 samples, 0.81%)</title><rect x="1043.8" y="309" width="9.6" height="15.0" fill="rgb(234,52,9)" rx="2" ry="2" />
<text  x="1046.83" y="319.5" ></text>
</g>
<g >
<title>nohz_csd_func (19 samples, 0.09%)</title><rect x="196.9" y="373" width="1.0" height="15.0" fill="rgb(245,62,52)" rx="2" ry="2" />
<text  x="199.87" y="383.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (197 samples, 0.94%)</title><rect x="40.1" y="485" width="11.2" height="15.0" fill="rgb(227,49,37)" rx="2" ry="2" />
<text  x="43.15" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="12.9" y="405" width="0.1" height="15.0" fill="rgb(227,62,5)" rx="2" ry="2" />
<text  x="15.88" y="415.5" ></text>
</g>
<g >
<title>zap_pte_range (2 samples, 0.01%)</title><rect x="297.8" y="133" width="0.1" height="15.0" fill="rgb(224,151,43)" rx="2" ry="2" />
<text  x="300.82" y="143.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (4 samples, 0.02%)</title><rect x="114.7" y="437" width="0.2" height="15.0" fill="rgb(240,32,6)" rx="2" ry="2" />
<text  x="117.67" y="447.5" ></text>
</g>
<g >
<title>pick_next_task_fair (51 samples, 0.24%)</title><rect x="94.3" y="357" width="2.9" height="15.0" fill="rgb(252,54,40)" rx="2" ry="2" />
<text  x="97.29" y="367.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (2 samples, 0.01%)</title><rect x="219.7" y="501" width="0.1" height="15.0" fill="rgb(243,26,30)" rx="2" ry="2" />
<text  x="222.74" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (126 samples, 0.60%)</title><rect x="1007.0" y="357" width="7.1" height="15.0" fill="rgb(212,102,31)" rx="2" ry="2" />
<text  x="1010.02" y="367.5" ></text>
</g>
<g >
<title>dispatcher (17 samples, 0.08%)</title><rect x="224.4" y="501" width="1.0" height="15.0" fill="rgb(229,123,30)" rx="2" ry="2" />
<text  x="227.42" y="511.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (182 samples, 0.87%)</title><rect x="1112.1" y="373" width="10.3" height="15.0" fill="rgb(220,227,53)" rx="2" ry="2" />
<text  x="1115.15" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (89 samples, 0.43%)</title><rect x="909.4" y="341" width="5.0" height="15.0" fill="rgb(252,158,27)" rx="2" ry="2" />
<text  x="912.41" y="351.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (198 samples, 0.95%)</title><rect x="1015.9" y="373" width="11.2" height="15.0" fill="rgb(217,170,53)" rx="2" ry="2" />
<text  x="1018.94" y="383.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (188 samples, 0.90%)</title><rect x="898.7" y="389" width="10.7" height="15.0" fill="rgb(221,155,6)" rx="2" ry="2" />
<text  x="901.74" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (75 samples, 0.36%)</title><rect x="904.7" y="309" width="4.3" height="15.0" fill="rgb(221,31,49)" rx="2" ry="2" />
<text  x="907.72" y="319.5" ></text>
</g>
<g >
<title>schedule_idle (255 samples, 1.22%)</title><rect x="197.9" y="389" width="14.4" height="15.0" fill="rgb(208,140,3)" rx="2" ry="2" />
<text  x="200.94" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (97 samples, 0.46%)</title><rect x="877.9" y="421" width="5.4" height="15.0" fill="rgb(233,38,28)" rx="2" ry="2" />
<text  x="880.85" y="431.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (5 samples, 0.02%)</title><rect x="57.6" y="133" width="0.3" height="15.0" fill="rgb(214,185,14)" rx="2" ry="2" />
<text  x="60.65" y="143.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (7 samples, 0.03%)</title><rect x="221.5" y="501" width="0.4" height="15.0" fill="rgb(213,134,44)" rx="2" ry="2" />
<text  x="224.49" y="511.5" ></text>
</g>
<g >
<title>do_idle (350 samples, 1.67%)</title><rect x="78.1" y="405" width="19.8" height="15.0" fill="rgb(230,3,45)" rx="2" ry="2" />
<text  x="81.14" y="415.5" ></text>
</g>
<g >
<title>schedule_idle (3 samples, 0.01%)</title><rect x="77.8" y="453" width="0.2" height="15.0" fill="rgb(227,154,39)" rx="2" ry="2" />
<text  x="80.80" y="463.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (50 samples, 0.24%)</title><rect x="1187.2" y="517" width="2.8" height="15.0" fill="rgb(235,181,1)" rx="2" ry="2" />
<text  x="1190.18" y="527.5" ></text>
</g>
<g >
<title>schedule_idle (7 samples, 0.03%)</title><rect x="19.5" y="453" width="0.4" height="15.0" fill="rgb(213,181,33)" rx="2" ry="2" />
<text  x="22.54" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (2 samples, 0.01%)</title><rect x="193.8" y="357" width="0.1" height="15.0" fill="rgb(244,69,28)" rx="2" ry="2" />
<text  x="196.77" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (55 samples, 0.26%)</title><rect x="900.5" y="325" width="3.2" height="15.0" fill="rgb(227,3,8)" rx="2" ry="2" />
<text  x="903.55" y="335.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (9 samples, 0.04%)</title><rect x="50.1" y="293" width="0.5" height="15.0" fill="rgb(223,71,9)" rx="2" ry="2" />
<text  x="53.08" y="303.5" ></text>
</g>
<g >
<title>cpuidle_enter (569 samples, 2.72%)</title><rect x="115.6" y="437" width="32.2" height="15.0" fill="rgb(246,159,30)" rx="2" ry="2" />
<text  x="118.63" y="447.5" >cp..</text>
</g>
<g >
<title>__get_user_nocheck_1 (3 samples, 0.01%)</title><rect x="55.6" y="165" width="0.1" height="15.0" fill="rgb(249,209,53)" rx="2" ry="2" />
<text  x="58.56" y="175.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (13 samples, 0.06%)</title><rect x="92.4" y="373" width="0.7" height="15.0" fill="rgb(213,64,44)" rx="2" ry="2" />
<text  x="95.37" y="383.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.05%)</title><rect x="1027.1" y="373" width="0.6" height="15.0" fill="rgb(213,156,23)" rx="2" ry="2" />
<text  x="1030.12" y="383.5" ></text>
</g>
<g >
<title>lindrustfinalize (2 samples, 0.01%)</title><rect x="1185.4" y="437" width="0.1" height="15.0" fill="rgb(228,32,31)" rx="2" ry="2" />
<text  x="1188.43" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (286 samples, 1.37%)</title><rect x="909.4" y="373" width="16.1" height="15.0" fill="rgb(209,116,8)" rx="2" ry="2" />
<text  x="912.35" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.01%)</title><rect x="152.6" y="453" width="0.1" height="15.0" fill="rgb(212,24,33)" rx="2" ry="2" />
<text  x="155.61" y="463.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (35 samples, 0.17%)</title><rect x="156.8" y="341" width="2.0" height="15.0" fill="rgb(246,140,22)" rx="2" ry="2" />
<text  x="159.84" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_poll (3 samples, 0.01%)</title><rect x="114.0" y="485" width="0.2" height="15.0" fill="rgb(234,134,23)" rx="2" ry="2" />
<text  x="116.99" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="113.9" y="517" width="0.5" height="15.0" fill="rgb(227,13,54)" rx="2" ry="2" />
<text  x="116.94" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.01%)</title><rect x="50.8" y="389" width="0.1" height="15.0" fill="rgb(208,126,16)" rx="2" ry="2" />
<text  x="53.82" y="399.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::ser::Serialize for dashmap::DashMap&lt;K,V,H&gt;&gt;::serialize (2 samples, 0.01%)</title><rect x="1185.4" y="197" width="0.1" height="15.0" fill="rgb(216,43,38)" rx="2" ry="2" />
<text  x="1188.43" y="207.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.05%)</title><rect x="1185.7" y="501" width="0.6" height="15.0" fill="rgb(234,121,36)" rx="2" ry="2" />
<text  x="1188.71" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (164 samples, 0.78%)</title><rect x="1134.7" y="341" width="9.2" height="15.0" fill="rgb(227,37,18)" rx="2" ry="2" />
<text  x="1137.67" y="351.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (82 samples, 0.39%)</title><rect x="904.7" y="357" width="4.7" height="15.0" fill="rgb(218,208,44)" rx="2" ry="2" />
<text  x="907.72" y="367.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1,124 samples, 5.38%)</title><rect x="153.0" y="501" width="63.5" height="15.0" fill="rgb(241,75,31)" rx="2" ry="2" />
<text  x="156.00" y="511.5" >x86_64..</text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.01%)</title><rect x="1185.4" y="485" width="0.1" height="15.0" fill="rgb(224,70,7)" rx="2" ry="2" />
<text  x="1188.43" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (13 samples, 0.06%)</title><rect x="1118.1" y="341" width="0.8" height="15.0" fill="rgb(246,203,43)" rx="2" ry="2" />
<text  x="1121.13" y="351.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (9 samples, 0.04%)</title><rect x="1121.9" y="357" width="0.5" height="15.0" fill="rgb(218,166,35)" rx="2" ry="2" />
<text  x="1124.91" y="367.5" ></text>
</g>
<g >
<title>poll_idle (4 samples, 0.02%)</title><rect x="1189.4" y="341" width="0.3" height="15.0" fill="rgb(238,203,46)" rx="2" ry="2" />
<text  x="1192.44" y="351.5" ></text>
</g>
<g >
<title>DynArrayGet (32 samples, 0.15%)</title><rect x="840.8" y="437" width="1.8" height="15.0" fill="rgb(254,170,6)" rx="2" ry="2" />
<text  x="843.82" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (17 samples, 0.08%)</title><rect x="920.6" y="293" width="0.9" height="15.0" fill="rgb(212,191,10)" rx="2" ry="2" />
<text  x="923.59" y="303.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (3 samples, 0.01%)</title><rect x="66.1" y="453" width="0.1" height="15.0" fill="rgb(220,62,11)" rx="2" ry="2" />
<text  x="69.06" y="463.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (10 samples, 0.05%)</title><rect x="28.6" y="309" width="0.5" height="15.0" fill="rgb(235,176,22)" rx="2" ry="2" />
<text  x="31.57" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (9 samples, 0.04%)</title><rect x="47.1" y="341" width="0.6" height="15.0" fill="rgb(239,40,54)" rx="2" ry="2" />
<text  x="50.15" y="351.5" ></text>
</g>
<g >
<title>isolate_freepages_block (3 samples, 0.01%)</title><rect x="114.5" y="373" width="0.2" height="15.0" fill="rgb(212,196,30)" rx="2" ry="2" />
<text  x="117.50" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="12.9" y="389" width="0.1" height="15.0" fill="rgb(224,7,43)" rx="2" ry="2" />
<text  x="15.88" y="399.5" ></text>
</g>
<g >
<title>_start (2 samples, 0.01%)</title><rect x="1185.4" y="517" width="0.1" height="15.0" fill="rgb(234,126,18)" rx="2" ry="2" />
<text  x="1188.43" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (2 samples, 0.01%)</title><rect x="148.5" y="373" width="0.2" height="15.0" fill="rgb(207,136,46)" rx="2" ry="2" />
<text  x="151.54" y="383.5" ></text>
</g>
<g >
<title>kick_ilb (15 samples, 0.07%)</title><rect x="49.7" y="309" width="0.9" height="15.0" fill="rgb(225,176,13)" rx="2" ry="2" />
<text  x="52.75" y="319.5" ></text>
</g>
<g >
<title>generic_exec_single (4 samples, 0.02%)</title><rect x="96.4" y="277" width="0.2" height="15.0" fill="rgb(244,49,23)" rx="2" ry="2" />
<text  x="99.38" y="287.5" ></text>
</g>
<g >
<title>std::sync::once::Once::is_completed (6 samples, 0.03%)</title><rect x="968.7" y="309" width="0.3" height="15.0" fill="rgb(242,149,53)" rx="2" ry="2" />
<text  x="971.69" y="319.5" ></text>
</g>
<g >
<title>migrate_pages (4 samples, 0.02%)</title><rect x="114.4" y="437" width="0.3" height="15.0" fill="rgb(253,158,41)" rx="2" ry="2" />
<text  x="117.44" y="447.5" ></text>
</g>
<g >
<title>handle_pte_fault (7 samples, 0.03%)</title><rect x="1178.9" y="421" width="0.4" height="15.0" fill="rgb(240,78,16)" rx="2" ry="2" />
<text  x="1181.88" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 0.31%)</title><rect x="51.3" y="421" width="3.6" height="15.0" fill="rgb(240,207,31)" rx="2" ry="2" />
<text  x="54.33" y="431.5" ></text>
</g>
<g >
<title>ext4_do_flush_completed_IO.isra.0 (3 samples, 0.01%)</title><rect x="66.1" y="437" width="0.1" height="15.0" fill="rgb(216,113,20)" rx="2" ry="2" />
<text  x="69.06" y="447.5" ></text>
</g>
<g >
<title>do_idle (35 samples, 0.17%)</title><rect x="1187.2" y="469" width="2.0" height="15.0" fill="rgb(230,98,42)" rx="2" ry="2" />
<text  x="1190.18" y="479.5" ></text>
</g>
<g >
<title>mmap_region (2 samples, 0.01%)</title><rect x="297.8" y="245" width="0.1" height="15.0" fill="rgb(254,102,15)" rx="2" ry="2" />
<text  x="300.82" y="255.5" ></text>
</g>
<g >
<title>kswapd (5 samples, 0.02%)</title><rect x="65.8" y="485" width="0.3" height="15.0" fill="rgb(227,25,13)" rx="2" ry="2" />
<text  x="68.78" y="495.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (108 samples, 0.52%)</title><rect x="40.7" y="357" width="6.1" height="15.0" fill="rgb(217,214,30)" rx="2" ry="2" />
<text  x="43.66" y="367.5" ></text>
</g>
<g >
<title>lind_write (5 samples, 0.02%)</title><rect x="1184.2" y="501" width="0.3" height="15.0" fill="rgb(238,180,52)" rx="2" ry="2" />
<text  x="1187.24" y="511.5" ></text>
</g>
<g >
<title>perf (120 samples, 0.57%)</title><rect x="51.3" y="533" width="6.8" height="15.0" fill="rgb(239,47,1)" rx="2" ry="2" />
<text  x="54.33" y="543.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.01%)</title><rect x="65.3" y="421" width="0.1" height="15.0" fill="rgb(254,69,44)" rx="2" ry="2" />
<text  x="68.33" y="431.5" ></text>
</g>
<g >
<title>ret_from_fork (5 samples, 0.02%)</title><rect x="1186.9" y="517" width="0.3" height="15.0" fill="rgb(229,130,8)" rx="2" ry="2" />
<text  x="1189.89" y="527.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (6 samples, 0.03%)</title><rect x="968.7" y="357" width="0.3" height="15.0" fill="rgb(242,184,10)" rx="2" ry="2" />
<text  x="971.69" y="367.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (140 samples, 0.67%)</title><rect x="382.5" y="341" width="7.9" height="15.0" fill="rgb(227,182,7)" rx="2" ry="2" />
<text  x="385.50" y="351.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (42 samples, 0.20%)</title><rect x="1123.2" y="341" width="2.3" height="15.0" fill="rgb(242,187,23)" rx="2" ry="2" />
<text  x="1126.16" y="351.5" ></text>
</g>
<g >
<title>NaClSysWrite (4 samples, 0.02%)</title><rect x="782.6" y="485" width="0.2" height="15.0" fill="rgb(212,56,25)" rx="2" ry="2" />
<text  x="785.55" y="495.5" ></text>
</g>
<g >
<title>vfs_write (47 samples, 0.22%)</title><rect x="55.4" y="309" width="2.6" height="15.0" fill="rgb(210,33,49)" rx="2" ry="2" />
<text  x="58.39" y="319.5" ></text>
</g>
<g >
<title>write (47 samples, 0.22%)</title><rect x="55.4" y="389" width="2.6" height="15.0" fill="rgb(242,179,20)" rx="2" ry="2" />
<text  x="58.39" y="399.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (5 samples, 0.02%)</title><rect x="91.5" y="293" width="0.3" height="15.0" fill="rgb(210,197,40)" rx="2" ry="2" />
<text  x="94.52" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (17 samples, 0.08%)</title><rect x="802.1" y="453" width="0.9" height="15.0" fill="rgb(242,191,38)" rx="2" ry="2" />
<text  x="805.09" y="463.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (8 samples, 0.04%)</title><rect x="233.1" y="501" width="0.4" height="15.0" fill="rgb(234,82,17)" rx="2" ry="2" />
<text  x="236.06" y="511.5" ></text>
</g>
<g >
<title>sched_clock_cpu (4 samples, 0.02%)</title><rect x="213.5" y="357" width="0.2" height="15.0" fill="rgb(243,197,33)" rx="2" ry="2" />
<text  x="216.47" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.04%)</title><rect x="906.1" y="277" width="0.5" height="15.0" fill="rgb(245,120,24)" rx="2" ry="2" />
<text  x="909.08" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (17 samples, 0.08%)</title><rect x="913.5" y="277" width="0.9" height="15.0" fill="rgb(228,41,21)" rx="2" ry="2" />
<text  x="916.48" y="287.5" ></text>
</g>
<g >
<title>compact_zone (4 samples, 0.02%)</title><rect x="65.6" y="453" width="0.2" height="15.0" fill="rgb(252,188,10)" rx="2" ry="2" />
<text  x="68.55" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (13 samples, 0.06%)</title><rect x="26.0" y="341" width="0.7" height="15.0" fill="rgb(234,198,23)" rx="2" ry="2" />
<text  x="28.98" y="351.5" ></text>
</g>
<g >
<title>rcu_core (2 samples, 0.01%)</title><rect x="34.1" y="293" width="0.1" height="15.0" fill="rgb(241,143,15)" rx="2" ry="2" />
<text  x="37.05" y="303.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (6 samples, 0.03%)</title><rect x="1117.8" y="341" width="0.3" height="15.0" fill="rgb(234,120,54)" rx="2" ry="2" />
<text  x="1120.79" y="351.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (73 samples, 0.35%)</title><rect x="206.4" y="293" width="4.1" height="15.0" fill="rgb(210,179,43)" rx="2" ry="2" />
<text  x="209.41" y="303.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 0.31%)</title><rect x="51.3" y="213" width="3.6" height="15.0" fill="rgb(206,68,35)" rx="2" ry="2" />
<text  x="54.33" y="223.5" ></text>
</g>
<g >
<title>lind_read (8,583 samples, 41.07%)</title><rect x="297.9" y="453" width="484.6" height="15.0" fill="rgb(239,126,8)" rx="2" ry="2" />
<text  x="300.93" y="463.5" >lind_read</text>
</g>
<g >
<title>ksys_mmap_pgoff (2 samples, 0.01%)</title><rect x="297.8" y="293" width="0.1" height="15.0" fill="rgb(230,120,27)" rx="2" ry="2" />
<text  x="300.82" y="303.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (578 samples, 2.77%)</title><rect x="1071.7" y="357" width="32.7" height="15.0" fill="rgb(231,49,2)" rx="2" ry="2" />
<text  x="1074.72" y="367.5" >&lt;p..</text>
</g>
<g >
<title>newidle_balance (49 samples, 0.23%)</title><rect x="94.3" y="341" width="2.8" height="15.0" fill="rgb(253,154,48)" rx="2" ry="2" />
<text  x="97.35" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (47 samples, 0.22%)</title><rect x="55.4" y="373" width="2.6" height="15.0" fill="rgb(235,171,44)" rx="2" ry="2" />
<text  x="58.39" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.08%)</title><rect x="1030.5" y="293" width="1.0" height="15.0" fill="rgb(238,11,10)" rx="2" ry="2" />
<text  x="1033.51" y="303.5" ></text>
</g>
<g >
<title>ext4_release_io_end (3 samples, 0.01%)</title><rect x="66.1" y="421" width="0.1" height="15.0" fill="rgb(230,101,51)" rx="2" ry="2" />
<text  x="69.06" y="431.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (4 samples, 0.02%)</title><rect x="1071.5" y="373" width="0.2" height="15.0" fill="rgb(250,27,36)" rx="2" ry="2" />
<text  x="1074.50" y="383.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (3 samples, 0.01%)</title><rect x="31.1" y="373" width="0.1" height="15.0" fill="rgb(233,226,9)" rx="2" ry="2" />
<text  x="34.06" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (87 samples, 0.42%)</title><rect x="898.7" y="341" width="5.0" height="15.0" fill="rgb(247,96,35)" rx="2" ry="2" />
<text  x="901.74" y="351.5" ></text>
</g>
<g >
<title>__dentry_kill (3 samples, 0.01%)</title><rect x="65.9" y="325" width="0.2" height="15.0" fill="rgb(226,2,25)" rx="2" ry="2" />
<text  x="68.89" y="335.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (3 samples, 0.01%)</title><rect x="740.7" y="325" width="0.2" height="15.0" fill="rgb(210,27,20)" rx="2" ry="2" />
<text  x="743.72" y="335.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (8 samples, 0.04%)</title><rect x="233.5" y="501" width="0.5" height="15.0" fill="rgb(240,223,15)" rx="2" ry="2" />
<text  x="236.51" y="511.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (8 samples, 0.04%)</title><rect x="849.3" y="437" width="0.5" height="15.0" fill="rgb(253,185,12)" rx="2" ry="2" />
<text  x="852.34" y="447.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (71 samples, 0.34%)</title><rect x="1039.1" y="309" width="4.0" height="15.0" fill="rgb(228,9,11)" rx="2" ry="2" />
<text  x="1042.09" y="319.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="152.3" y="405" width="0.1" height="15.0" fill="rgb(248,109,52)" rx="2" ry="2" />
<text  x="155.27" y="415.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (2 samples, 0.01%)</title><rect x="47.3" y="325" width="0.1" height="15.0" fill="rgb(217,206,30)" rx="2" ry="2" />
<text  x="50.26" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.01%)</title><rect x="911.0" y="277" width="0.2" height="15.0" fill="rgb(231,116,10)" rx="2" ry="2" />
<text  x="913.99" y="287.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (2 samples, 0.01%)</title><rect x="1189.7" y="325" width="0.1" height="15.0" fill="rgb(251,52,19)" rx="2" ry="2" />
<text  x="1192.72" y="335.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (2 samples, 0.01%)</title><rect x="154.3" y="389" width="0.1" height="15.0" fill="rgb(248,201,22)" rx="2" ry="2" />
<text  x="157.30" y="399.5" ></text>
</g>
<g >
<title>generic_exec_single (64 samples, 0.31%)</title><rect x="51.3" y="277" width="3.6" height="15.0" fill="rgb(248,178,34)" rx="2" ry="2" />
<text  x="54.33" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (5 samples, 0.02%)</title><rect x="47.4" y="325" width="0.3" height="15.0" fill="rgb(225,197,50)" rx="2" ry="2" />
<text  x="50.37" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (58 samples, 0.28%)</title><rect x="190.2" y="341" width="3.2" height="15.0" fill="rgb(217,87,39)" rx="2" ry="2" />
<text  x="193.15" y="351.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (2 samples, 0.01%)</title><rect x="77.8" y="357" width="0.1" height="15.0" fill="rgb(248,42,9)" rx="2" ry="2" />
<text  x="80.80" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="1186.8" y="501" width="0.1" height="15.0" fill="rgb(211,15,19)" rx="2" ry="2" />
<text  x="1189.78" y="511.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="147.5" y="389" width="0.1" height="15.0" fill="rgb(219,15,33)" rx="2" ry="2" />
<text  x="150.47" y="399.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (2 samples, 0.01%)</title><rect x="156.1" y="149" width="0.1" height="15.0" fill="rgb(228,46,15)" rx="2" ry="2" />
<text  x="159.05" y="159.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3 samples, 0.01%)</title><rect x="34.1" y="373" width="0.1" height="15.0" fill="rgb(246,212,27)" rx="2" ry="2" />
<text  x="37.05" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (5 samples, 0.02%)</title><rect x="156.0" y="277" width="0.3" height="15.0" fill="rgb(246,228,21)" rx="2" ry="2" />
<text  x="159.00" y="287.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (23 samples, 0.11%)</title><rect x="906.6" y="277" width="1.3" height="15.0" fill="rgb(213,142,26)" rx="2" ry="2" />
<text  x="909.59" y="287.5" ></text>
</g>
<g >
<title>read_tsc (8 samples, 0.04%)</title><rect x="212.9" y="373" width="0.5" height="15.0" fill="rgb(247,195,36)" rx="2" ry="2" />
<text  x="215.91" y="383.5" ></text>
</g>
<g >
<title>kcompactd (5 samples, 0.02%)</title><rect x="114.4" y="485" width="0.3" height="15.0" fill="rgb(231,97,27)" rx="2" ry="2" />
<text  x="117.39" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (537 samples, 2.57%)</title><rect x="937.5" y="373" width="30.3" height="15.0" fill="rgb(253,64,53)" rx="2" ry="2" />
<text  x="940.47" y="383.5" >co..</text>
</g>
<g >
<title>rustposix::safeposix::cage::CAGE_TABLE (11 samples, 0.05%)</title><rect x="1185.7" y="517" width="0.6" height="15.0" fill="rgb(254,128,53)" rx="2" ry="2" />
<text  x="1188.71" y="527.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="33.9" y="405" width="0.3" height="15.0" fill="rgb(214,170,28)" rx="2" ry="2" />
<text  x="36.94" y="415.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1,124 samples, 5.38%)</title><rect x="153.0" y="485" width="63.5" height="15.0" fill="rgb(207,194,6)" rx="2" ry="2" />
<text  x="156.00" y="495.5" >x86_64..</text>
</g>
<g >
<title>start_this_handle (2 samples, 0.01%)</title><rect x="55.8" y="117" width="0.2" height="15.0" fill="rgb(254,23,54)" rx="2" ry="2" />
<text  x="58.84" y="127.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (313 samples, 1.50%)</title><rect x="785.4" y="469" width="17.6" height="15.0" fill="rgb(209,66,25)" rx="2" ry="2" />
<text  x="788.38" y="479.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i32&gt;::eq (5 samples, 0.02%)</title><rect x="1061.9" y="261" width="0.3" height="15.0" fill="rgb(237,32,51)" rx="2" ry="2" />
<text  x="1064.90" y="271.5" ></text>
</g>
<g >
<title>generic_exec_single (31 samples, 0.15%)</title><rect x="206.5" y="277" width="1.7" height="15.0" fill="rgb(240,210,10)" rx="2" ry="2" />
<text  x="209.47" y="287.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (15 samples, 0.07%)</title><rect x="907.9" y="277" width="0.8" height="15.0" fill="rgb(229,20,51)" rx="2" ry="2" />
<text  x="910.89" y="287.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (20 samples, 0.10%)</title><rect x="1187.2" y="405" width="1.2" height="15.0" fill="rgb(245,19,33)" rx="2" ry="2" />
<text  x="1190.23" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (2 samples, 0.01%)</title><rect x="1185.4" y="373" width="0.1" height="15.0" fill="rgb(208,64,46)" rx="2" ry="2" />
<text  x="1188.43" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="33.9" y="325" width="0.2" height="15.0" fill="rgb(209,42,9)" rx="2" ry="2" />
<text  x="36.94" y="335.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (5 samples, 0.02%)</title><rect x="1184.9" y="501" width="0.3" height="15.0" fill="rgb(229,202,40)" rx="2" ry="2" />
<text  x="1187.92" y="511.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.01%)</title><rect x="56.7" y="37" width="0.2" height="15.0" fill="rgb(231,8,32)" rx="2" ry="2" />
<text  x="59.75" y="47.5" ></text>
</g>
<g >
<title>rcu_core (2 samples, 0.01%)</title><rect x="116.0" y="293" width="0.1" height="15.0" fill="rgb(220,225,8)" rx="2" ry="2" />
<text  x="118.97" y="303.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (12 samples, 0.06%)</title><rect x="219.1" y="501" width="0.6" height="15.0" fill="rgb(235,41,32)" rx="2" ry="2" />
<text  x="222.06" y="511.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (197 samples, 0.94%)</title><rect x="40.1" y="501" width="11.2" height="15.0" fill="rgb(250,72,49)" rx="2" ry="2" />
<text  x="43.15" y="511.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (2 samples, 0.01%)</title><rect x="1185.4" y="405" width="0.1" height="15.0" fill="rgb(229,184,18)" rx="2" ry="2" />
<text  x="1188.43" y="415.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (32 samples, 0.15%)</title><rect x="92.2" y="389" width="1.8" height="15.0" fill="rgb(207,54,28)" rx="2" ry="2" />
<text  x="95.20" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (79 samples, 0.38%)</title><rect x="915.2" y="293" width="4.5" height="15.0" fill="rgb(207,109,3)" rx="2" ry="2" />
<text  x="918.23" y="303.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (24 samples, 0.11%)</title><rect x="194.4" y="373" width="1.4" height="15.0" fill="rgb(246,197,8)" rx="2" ry="2" />
<text  x="197.44" y="383.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (6 samples, 0.03%)</title><rect x="156.0" y="309" width="0.3" height="15.0" fill="rgb(253,146,31)" rx="2" ry="2" />
<text  x="159.00" y="319.5" ></text>
</g>
<g >
<title>get_typical_interval (4 samples, 0.02%)</title><rect x="90.6" y="341" width="0.2" height="15.0" fill="rgb(242,129,23)" rx="2" ry="2" />
<text  x="93.56" y="351.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (8 samples, 0.04%)</title><rect x="156.4" y="277" width="0.4" height="15.0" fill="rgb(229,9,8)" rx="2" ry="2" />
<text  x="159.39" y="287.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.01%)</title><rect x="1186.8" y="437" width="0.1" height="15.0" fill="rgb(228,208,22)" rx="2" ry="2" />
<text  x="1189.78" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (10 samples, 0.05%)</title><rect x="30.7" y="389" width="0.5" height="15.0" fill="rgb(223,154,29)" rx="2" ry="2" />
<text  x="33.66" y="399.5" ></text>
</g>
<g >
<title>newidle_balance (2 samples, 0.01%)</title><rect x="1188.9" y="405" width="0.1" height="15.0" fill="rgb(213,73,15)" rx="2" ry="2" />
<text  x="1191.93" y="415.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (121 samples, 0.58%)</title><rect x="891.5" y="389" width="6.8" height="15.0" fill="rgb(241,36,9)" rx="2" ry="2" />
<text  x="894.46" y="399.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (4 samples, 0.02%)</title><rect x="33.7" y="309" width="0.2" height="15.0" fill="rgb(230,215,28)" rx="2" ry="2" />
<text  x="36.66" y="319.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (42 samples, 0.20%)</title><rect x="1123.2" y="357" width="2.3" height="15.0" fill="rgb(224,177,23)" rx="2" ry="2" />
<text  x="1126.16" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="917.1" y="261" width="0.2" height="15.0" fill="rgb(217,152,52)" rx="2" ry="2" />
<text  x="920.15" y="271.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (813 samples, 3.89%)</title><rect x="736.6" y="389" width="45.9" height="15.0" fill="rgb(213,129,6)" rx="2" ry="2" />
<text  x="739.60" y="399.5" >ring..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (43 samples, 0.21%)</title><rect x="922.0" y="309" width="2.4" height="15.0" fill="rgb(208,156,51)" rx="2" ry="2" />
<text  x="925.00" y="319.5" ></text>
</g>
<g >
<title>common_interrupt (3 samples, 0.01%)</title><rect x="115.8" y="389" width="0.2" height="15.0" fill="rgb(236,158,49)" rx="2" ry="2" />
<text  x="118.80" y="399.5" ></text>
</g>
<g >
<title>&lt;std::sync::lazy_lock::LazyLock&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.03%)</title><rect x="968.7" y="405" width="0.3" height="15.0" fill="rgb(250,180,9)" rx="2" ry="2" />
<text  x="971.69" y="415.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (3 samples, 0.01%)</title><rect x="55.8" y="149" width="0.2" height="15.0" fill="rgb(217,151,27)" rx="2" ry="2" />
<text  x="58.79" y="159.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.01%)</title><rect x="891.5" y="357" width="0.1" height="15.0" fill="rgb(209,178,8)" rx="2" ry="2" />
<text  x="894.46" y="367.5" ></text>
</g>
<g >
<title>isolate_freepages (4 samples, 0.02%)</title><rect x="65.6" y="389" width="0.2" height="15.0" fill="rgb(242,36,16)" rx="2" ry="2" />
<text  x="68.55" y="399.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (2 samples, 0.01%)</title><rect x="297.6" y="485" width="0.2" height="15.0" fill="rgb(231,15,54)" rx="2" ry="2" />
<text  x="300.65" y="495.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (8 samples, 0.04%)</title><rect x="1183.4" y="501" width="0.4" height="15.0" fill="rgb(209,183,29)" rx="2" ry="2" />
<text  x="1186.39" y="511.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1,333 samples, 6.38%)</title><rect x="1069.6" y="405" width="75.3" height="15.0" fill="rgb(243,14,9)" rx="2" ry="2" />
<text  x="1072.63" y="415.5" >rustposi..</text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.01%)</title><rect x="25.1" y="341" width="0.2" height="15.0" fill="rgb(237,27,30)" rx="2" ry="2" />
<text  x="28.13" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (3 samples, 0.01%)</title><rect x="156.1" y="229" width="0.1" height="15.0" fill="rgb(224,48,7)" rx="2" ry="2" />
<text  x="159.05" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="66.5" y="389" width="0.2" height="15.0" fill="rgb(213,54,50)" rx="2" ry="2" />
<text  x="69.46" y="399.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (21 samples, 0.10%)</title><rect x="925.5" y="421" width="1.2" height="15.0" fill="rgb(223,205,33)" rx="2" ry="2" />
<text  x="928.50" y="431.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.01%)</title><rect x="1185.4" y="229" width="0.1" height="15.0" fill="rgb(234,49,40)" rx="2" ry="2" />
<text  x="1188.43" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;u64,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (116 samples, 0.55%)</title><rect x="883.7" y="405" width="6.5" height="15.0" fill="rgb(210,85,33)" rx="2" ry="2" />
<text  x="886.67" y="415.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (7 samples, 0.03%)</title><rect x="49.4" y="309" width="0.3" height="15.0" fill="rgb(232,123,47)" rx="2" ry="2" />
<text  x="52.35" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.03%)</title><rect x="899.8" y="309" width="0.3" height="15.0" fill="rgb(214,105,26)" rx="2" ry="2" />
<text  x="902.76" y="319.5" ></text>
</g>
<g >
<title>alx_intr_msix_misc (3 samples, 0.01%)</title><rect x="115.8" y="309" width="0.2" height="15.0" fill="rgb(246,85,50)" rx="2" ry="2" />
<text  x="118.80" y="319.5" ></text>
</g>
<g >
<title>jbd2__journal_start (3 samples, 0.01%)</title><rect x="55.8" y="133" width="0.2" height="15.0" fill="rgb(223,117,16)" rx="2" ry="2" />
<text  x="58.79" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (8 samples, 0.04%)</title><rect x="192.9" y="277" width="0.4" height="15.0" fill="rgb(254,196,22)" rx="2" ry="2" />
<text  x="195.86" y="287.5" ></text>
</g>
<g >
<title>menu_select (108 samples, 0.52%)</title><rect x="187.4" y="357" width="6.1" height="15.0" fill="rgb(253,9,16)" rx="2" ry="2" />
<text  x="190.44" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (7 samples, 0.03%)</title><rect x="1015.9" y="325" width="0.4" height="15.0" fill="rgb(239,48,45)" rx="2" ry="2" />
<text  x="1018.94" y="335.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (9 samples, 0.04%)</title><rect x="1189.2" y="389" width="0.5" height="15.0" fill="rgb(248,161,19)" rx="2" ry="2" />
<text  x="1192.15" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::libc_mmap (2 samples, 0.01%)</title><rect x="297.8" y="373" width="0.1" height="15.0" fill="rgb(244,6,19)" rx="2" ry="2" />
<text  x="300.82" y="383.5" ></text>
</g>
<g >
<title>unmap_and_move (4 samples, 0.02%)</title><rect x="114.4" y="421" width="0.3" height="15.0" fill="rgb(234,191,53)" rx="2" ry="2" />
<text  x="117.44" y="431.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.02%)</title><rect x="65.2" y="469" width="0.2" height="15.0" fill="rgb(222,150,27)" rx="2" ry="2" />
<text  x="68.21" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3 samples, 0.01%)</title><rect x="156.1" y="261" width="0.1" height="15.0" fill="rgb(210,70,40)" rx="2" ry="2" />
<text  x="159.05" y="271.5" ></text>
</g>
<g >
<title>handle_irq_event (3 samples, 0.01%)</title><rect x="115.8" y="341" width="0.2" height="15.0" fill="rgb(207,105,18)" rx="2" ry="2" />
<text  x="118.80" y="351.5" ></text>
</g>
<g >
<title>llist_add_batch (10 samples, 0.05%)</title><rect x="29.8" y="277" width="0.5" height="15.0" fill="rgb(207,69,38)" rx="2" ry="2" />
<text  x="32.76" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_poll (5 samples, 0.02%)</title><rect x="55.1" y="421" width="0.2" height="15.0" fill="rgb(209,145,14)" rx="2" ry="2" />
<text  x="58.05" y="431.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (517 samples, 2.47%)</title><rect x="116.1" y="405" width="29.2" height="15.0" fill="rgb(213,55,54)" rx="2" ry="2" />
<text  x="119.14" y="415.5" >mw..</text>
</g>
<g >
<title>CompareAndSwap (300 samples, 1.44%)</title><rect x="266.2" y="469" width="16.9" height="15.0" fill="rgb(235,33,19)" rx="2" ry="2" />
<text  x="269.20" y="479.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.01%)</title><rect x="77.8" y="421" width="0.1" height="15.0" fill="rgb(231,9,32)" rx="2" ry="2" />
<text  x="80.80" y="431.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (64 samples, 0.31%)</title><rect x="842.6" y="453" width="3.6" height="15.0" fill="rgb(215,179,54)" rx="2" ry="2" />
<text  x="845.62" y="463.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (3 samples, 0.01%)</title><rect x="115.8" y="325" width="0.2" height="15.0" fill="rgb(230,22,28)" rx="2" ry="2" />
<text  x="118.80" y="335.5" ></text>
</g>
<g >
<title>sched_clock_cpu (12 samples, 0.06%)</title><rect x="186.3" y="341" width="0.7" height="15.0" fill="rgb(207,59,34)" rx="2" ry="2" />
<text  x="189.31" y="351.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (7 samples, 0.03%)</title><rect x="1181.9" y="501" width="0.4" height="15.0" fill="rgb(223,78,44)" rx="2" ry="2" />
<text  x="1184.93" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (286 samples, 1.37%)</title><rect x="909.4" y="389" width="16.1" height="15.0" fill="rgb(223,178,22)" rx="2" ry="2" />
<text  x="912.35" y="399.5" ></text>
</g>
<g >
<title>lind_write (5,047 samples, 24.15%)</title><rect x="860.3" y="453" width="284.9" height="15.0" fill="rgb(216,223,16)" rx="2" ry="2" />
<text  x="863.29" y="463.5" >lind_write</text>
</g>
<g >
<title>alloc_page_buffers (3 samples, 0.01%)</title><rect x="56.2" y="117" width="0.2" height="15.0" fill="rgb(230,3,12)" rx="2" ry="2" />
<text  x="59.18" y="127.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.04%)</title><rect x="907.0" y="261" width="0.5" height="15.0" fill="rgb(236,199,27)" rx="2" ry="2" />
<text  x="910.04" y="271.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (75 samples, 0.36%)</title><rect x="1054.4" y="261" width="4.2" height="15.0" fill="rgb(209,72,32)" rx="2" ry="2" />
<text  x="1057.39" y="271.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.03%)</title><rect x="910.7" y="277" width="0.3" height="15.0" fill="rgb(207,188,11)" rx="2" ry="2" />
<text  x="913.65" y="287.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (75 samples, 0.36%)</title><rect x="1054.4" y="277" width="4.2" height="15.0" fill="rgb(242,123,16)" rx="2" ry="2" />
<text  x="1057.39" y="287.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (10 samples, 0.05%)</title><rect x="151.5" y="357" width="0.6" height="15.0" fill="rgb(217,127,12)" rx="2" ry="2" />
<text  x="154.54" y="367.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (2 samples, 0.01%)</title><rect x="220.9" y="501" width="0.1" height="15.0" fill="rgb(253,146,23)" rx="2" ry="2" />
<text  x="223.92" y="511.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (18 samples, 0.09%)</title><rect x="56.5" y="149" width="1.0" height="15.0" fill="rgb(214,51,13)" rx="2" ry="2" />
<text  x="59.46" y="159.5" ></text>
</g>
<g >
<title>process_one_work (4 samples, 0.02%)</title><rect x="66.1" y="469" width="0.2" height="15.0" fill="rgb(205,62,4)" rx="2" ry="2" />
<text  x="69.06" y="479.5" ></text>
</g>
<g >
<title>rcu_idle_exit (27 samples, 0.13%)</title><rect x="184.8" y="341" width="1.5" height="15.0" fill="rgb(242,7,15)" rx="2" ry="2" />
<text  x="187.79" y="351.5" ></text>
</g>
<g >
<title>do_writepages (5 samples, 0.02%)</title><rect x="33.7" y="357" width="0.2" height="15.0" fill="rgb(211,134,26)" rx="2" ry="2" />
<text  x="36.66" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (15 samples, 0.07%)</title><rect x="156.0" y="341" width="0.8" height="15.0" fill="rgb(222,147,5)" rx="2" ry="2" />
<text  x="159.00" y="351.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (813 samples, 3.89%)</title><rect x="736.6" y="357" width="45.9" height="15.0" fill="rgb(208,90,35)" rx="2" ry="2" />
<text  x="739.60" y="367.5" >ring..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.04%)</title><rect x="1058.1" y="213" width="0.5" height="15.0" fill="rgb(213,73,29)" rx="2" ry="2" />
<text  x="1061.12" y="223.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (3 samples, 0.01%)</title><rect x="116.0" y="357" width="0.1" height="15.0" fill="rgb(218,158,47)" rx="2" ry="2" />
<text  x="118.97" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (37 samples, 0.18%)</title><rect x="741.0" y="341" width="2.1" height="15.0" fill="rgb(218,35,47)" rx="2" ry="2" />
<text  x="744.00" y="351.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::is_initialized (6 samples, 0.03%)</title><rect x="968.7" y="325" width="0.3" height="15.0" fill="rgb(209,67,2)" rx="2" ry="2" />
<text  x="971.69" y="335.5" ></text>
</g>
<g >
<title>wb_workfn (5 samples, 0.02%)</title><rect x="33.7" y="453" width="0.2" height="15.0" fill="rgb(235,109,54)" rx="2" ry="2" />
<text  x="36.66" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (2 samples, 0.01%)</title><rect x="190.3" y="325" width="0.1" height="15.0" fill="rgb(251,25,20)" rx="2" ry="2" />
<text  x="193.27" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (208 samples, 1.00%)</title><rect x="20.0" y="485" width="11.7" height="15.0" fill="rgb(250,17,53)" rx="2" ry="2" />
<text  x="22.99" y="495.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (118 samples, 0.56%)</title><rect x="891.6" y="373" width="6.7" height="15.0" fill="rgb(229,72,33)" rx="2" ry="2" />
<text  x="894.63" y="383.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (7 samples, 0.03%)</title><rect x="909.0" y="325" width="0.4" height="15.0" fill="rgb(247,76,34)" rx="2" ry="2" />
<text  x="911.96" y="335.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.01%)</title><rect x="152.6" y="437" width="0.1" height="15.0" fill="rgb(240,57,29)" rx="2" ry="2" />
<text  x="155.61" y="447.5" ></text>
</g>
<g >
<title>pick_next_task_fair (4 samples, 0.02%)</title><rect x="19.6" y="421" width="0.2" height="15.0" fill="rgb(221,73,32)" rx="2" ry="2" />
<text  x="22.60" y="431.5" ></text>
</g>
<g >
<title>end_page_writeback (3 samples, 0.01%)</title><rect x="66.1" y="389" width="0.1" height="15.0" fill="rgb(214,161,28)" rx="2" ry="2" />
<text  x="69.06" y="399.5" ></text>
</g>
<g >
<title>rebalance_domains (2 samples, 0.01%)</title><rect x="156.4" y="213" width="0.2" height="15.0" fill="rgb(248,163,19)" rx="2" ry="2" />
<text  x="159.45" y="223.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 0.31%)</title><rect x="51.3" y="197" width="3.6" height="15.0" fill="rgb(218,110,8)" rx="2" ry="2" />
<text  x="54.33" y="207.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (82 samples, 0.39%)</title><rect x="904.7" y="373" width="4.7" height="15.0" fill="rgb(237,128,26)" rx="2" ry="2" />
<text  x="907.72" y="383.5" ></text>
</g>
<g >
<title>process_one_work (4 samples, 0.02%)</title><rect x="114.9" y="469" width="0.2" height="15.0" fill="rgb(246,53,12)" rx="2" ry="2" />
<text  x="117.90" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (123 samples, 0.59%)</title><rect x="999.8" y="389" width="6.9" height="15.0" fill="rgb(237,184,51)" rx="2" ry="2" />
<text  x="1002.80" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (14 samples, 0.07%)</title><rect x="914.4" y="341" width="0.8" height="15.0" fill="rgb(240,223,35)" rx="2" ry="2" />
<text  x="917.44" y="351.5" ></text>
</g>
<g >
<title>NaClXMutexLock (8 samples, 0.04%)</title><rect x="221.0" y="501" width="0.5" height="15.0" fill="rgb(239,20,52)" rx="2" ry="2" />
<text  x="224.03" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (433 samples, 2.07%)</title><rect x="975.4" y="357" width="24.4" height="15.0" fill="rgb(229,41,42)" rx="2" ry="2" />
<text  x="978.35" y="367.5" >c..</text>
</g>
<g >
<title>irq_exit_rcu (8 samples, 0.04%)</title><rect x="156.4" y="309" width="0.4" height="15.0" fill="rgb(227,174,23)" rx="2" ry="2" />
<text  x="159.39" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="66.5" y="405" width="0.2" height="15.0" fill="rgb(234,14,14)" rx="2" ry="2" />
<text  x="69.46" y="415.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (206 samples, 0.99%)</title><rect x="787.3" y="453" width="11.6" height="15.0" fill="rgb(215,189,2)" rx="2" ry="2" />
<text  x="790.29" y="463.5" ></text>
</g>
<g >
<title>create_empty_buffers (5 samples, 0.02%)</title><rect x="56.1" y="133" width="0.3" height="15.0" fill="rgb(249,186,35)" rx="2" ry="2" />
<text  x="59.07" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.03%)</title><rect x="1060.4" y="277" width="0.4" height="15.0" fill="rgb(247,131,54)" rx="2" ry="2" />
<text  x="1063.43" y="287.5" ></text>
</g>
<g >
<title>kthread (14 samples, 0.07%)</title><rect x="114.4" y="501" width="0.8" height="15.0" fill="rgb(251,46,24)" rx="2" ry="2" />
<text  x="117.39" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.02%)</title><rect x="1054.1" y="277" width="0.3" height="15.0" fill="rgb(232,112,26)" rx="2" ry="2" />
<text  x="1057.11" y="287.5" ></text>
</g>
<g >
<title>shrink_node (5 samples, 0.02%)</title><rect x="1186.9" y="453" width="0.3" height="15.0" fill="rgb(207,76,21)" rx="2" ry="2" />
<text  x="1189.89" y="463.5" ></text>
</g>
<g >
<title>__mmap (2 samples, 0.01%)</title><rect x="297.8" y="357" width="0.1" height="15.0" fill="rgb(211,218,54)" rx="2" ry="2" />
<text  x="300.82" y="367.5" ></text>
</g>
<g >
<title>newidle_balance (29 samples, 0.14%)</title><rect x="150.5" y="405" width="1.6" height="15.0" fill="rgb(223,95,39)" rx="2" ry="2" />
<text  x="153.46" y="415.5" ></text>
</g>
<g >
<title>schedule_idle (36 samples, 0.17%)</title><rect x="48.7" y="389" width="2.1" height="15.0" fill="rgb(216,107,15)" rx="2" ry="2" />
<text  x="51.73" y="399.5" ></text>
</g>
<g >
<title>worker_thread (5 samples, 0.02%)</title><rect x="114.9" y="485" width="0.3" height="15.0" fill="rgb(213,19,43)" rx="2" ry="2" />
<text  x="117.90" y="495.5" ></text>
</g>
<g >
<title>__poll (6 samples, 0.03%)</title><rect x="55.0" y="469" width="0.3" height="15.0" fill="rgb(223,121,0)" rx="2" ry="2" />
<text  x="58.00" y="479.5" ></text>
</g>
<g >
<title>start_kernel (197 samples, 0.94%)</title><rect x="40.1" y="469" width="11.2" height="15.0" fill="rgb(246,8,39)" rx="2" ry="2" />
<text  x="43.15" y="479.5" ></text>
</g>
<g >
<title>sel_ldr (17,187 samples, 82.23%)</title><rect x="216.5" y="533" width="970.3" height="15.0" fill="rgb(253,154,27)" rx="2" ry="2" />
<text  x="219.46" y="543.5" >sel_ldr</text>
</g>
<g >
<title>vfs_iter_write (46 samples, 0.22%)</title><rect x="55.4" y="261" width="2.6" height="15.0" fill="rgb(254,195,53)" rx="2" ry="2" />
<text  x="58.39" y="271.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (110 samples, 0.53%)</title><rect x="33.9" y="453" width="6.2" height="15.0" fill="rgb(254,19,26)" rx="2" ry="2" />
<text  x="36.94" y="463.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (8,582 samples, 41.06%)</title><rect x="298.0" y="405" width="484.5" height="15.0" fill="rgb(223,206,43)" rx="2" ry="2" />
<text  x="300.99" y="415.5" >rustposix::interface::pipe::EmulatedPipe::read_from_pipe</text>
</g>
<g >
<title>cpumask_next (4 samples, 0.02%)</title><rect x="203.4" y="293" width="0.2" height="15.0" fill="rgb(241,42,38)" rx="2" ry="2" />
<text  x="206.36" y="303.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (6 samples, 0.03%)</title><rect x="1042.8" y="293" width="0.3" height="15.0" fill="rgb(216,96,7)" rx="2" ry="2" />
<text  x="1045.76" y="303.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (7 samples, 0.03%)</title><rect x="1015.9" y="357" width="0.4" height="15.0" fill="rgb(249,44,7)" rx="2" ry="2" />
<text  x="1018.94" y="367.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (9 samples, 0.04%)</title><rect x="56.0" y="149" width="0.5" height="15.0" fill="rgb(247,65,49)" rx="2" ry="2" />
<text  x="58.96" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="33.1" y="517" width="0.4" height="15.0" fill="rgb(233,10,13)" rx="2" ry="2" />
<text  x="36.09" y="527.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (2 samples, 0.01%)</title><rect x="193.5" y="357" width="0.2" height="15.0" fill="rgb(239,95,52)" rx="2" ry="2" />
<text  x="196.54" y="367.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.01%)</title><rect x="1189.7" y="357" width="0.1" height="15.0" fill="rgb(209,162,10)" rx="2" ry="2" />
<text  x="1192.72" y="367.5" ></text>
</g>
<g >
<title>arch_call_rest_init (15 samples, 0.07%)</title><rect x="1189.2" y="453" width="0.8" height="15.0" fill="rgb(210,167,34)" rx="2" ry="2" />
<text  x="1192.15" y="463.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (109 samples, 0.52%)</title><rect x="33.9" y="421" width="6.2" height="15.0" fill="rgb(219,31,51)" rx="2" ry="2" />
<text  x="36.94" y="431.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (7 samples, 0.03%)</title><rect x="1015.9" y="309" width="0.4" height="15.0" fill="rgb(215,213,38)" rx="2" ry="2" />
<text  x="1018.94" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (2 samples, 0.01%)</title><rect x="91.0" y="309" width="0.1" height="15.0" fill="rgb(208,73,42)" rx="2" ry="2" />
<text  x="93.96" y="319.5" ></text>
</g>
<g >
<title>cpuidle_select (21 samples, 0.10%)</title><rect x="147.8" y="437" width="1.2" height="15.0" fill="rgb(227,171,9)" rx="2" ry="2" />
<text  x="150.81" y="447.5" ></text>
</g>
<g >
<title>ksys_write (2 samples, 0.01%)</title><rect x="1186.8" y="469" width="0.1" height="15.0" fill="rgb(228,101,1)" rx="2" ry="2" />
<text  x="1189.78" y="479.5" ></text>
</g>
<g >
<title>arch_call_rest_init (208 samples, 1.00%)</title><rect x="20.0" y="453" width="11.7" height="15.0" fill="rgb(254,34,0)" rx="2" ry="2" />
<text  x="22.99" y="463.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (4 samples, 0.02%)</title><rect x="803.7" y="469" width="0.2" height="15.0" fill="rgb(247,164,36)" rx="2" ry="2" />
<text  x="806.67" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (6 samples, 0.03%)</title><rect x="968.7" y="293" width="0.3" height="15.0" fill="rgb(235,91,25)" rx="2" ry="2" />
<text  x="971.69" y="303.5" ></text>
</g>
<g >
<title>menu_update (4 samples, 0.02%)</title><rect x="25.8" y="341" width="0.2" height="15.0" fill="rgb(221,225,1)" rx="2" ry="2" />
<text  x="28.75" y="351.5" ></text>
</g>
<g >
<title>_perf_event_enable (64 samples, 0.31%)</title><rect x="51.3" y="325" width="3.6" height="15.0" fill="rgb(246,183,49)" rx="2" ry="2" />
<text  x="54.33" y="335.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (680 samples, 3.25%)</title><rect x="743.5" y="325" width="38.4" height="15.0" fill="rgb(229,49,26)" rx="2" ry="2" />
<text  x="746.48" y="335.5" >cor..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (28 samples, 0.13%)</title><rect x="917.3" y="261" width="1.6" height="15.0" fill="rgb(247,210,53)" rx="2" ry="2" />
<text  x="920.31" y="271.5" ></text>
</g>
<g >
<title>dispatcher (5 samples, 0.02%)</title><rect x="1183.8" y="501" width="0.3" height="15.0" fill="rgb(234,157,32)" rx="2" ry="2" />
<text  x="1186.85" y="511.5" ></text>
</g>
<g >
<title>rcu_idle_enter (3 samples, 0.01%)</title><rect x="88.9" y="341" width="0.2" height="15.0" fill="rgb(218,56,19)" rx="2" ry="2" />
<text  x="91.93" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (123 samples, 0.59%)</title><rect x="999.8" y="341" width="6.9" height="15.0" fill="rgb(213,113,36)" rx="2" ry="2" />
<text  x="1002.80" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (99 samples, 0.47%)</title><rect x="919.9" y="357" width="5.6" height="15.0" fill="rgb(238,81,5)" rx="2" ry="2" />
<text  x="922.91" y="367.5" ></text>
</g>
<g >
<title>[sel_ldr] (470 samples, 2.25%)</title><rect x="1152.2" y="501" width="26.5" height="15.0" fill="rgb(224,220,12)" rx="2" ry="2" />
<text  x="1155.17" y="511.5" >[..</text>
</g>
<g >
<title>shrink_node_memcgs (5 samples, 0.02%)</title><rect x="1186.9" y="437" width="0.3" height="15.0" fill="rgb(205,219,43)" rx="2" ry="2" />
<text  x="1189.89" y="447.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (7 samples, 0.03%)</title><rect x="859.9" y="453" width="0.4" height="15.0" fill="rgb(214,190,16)" rx="2" ry="2" />
<text  x="862.90" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (186 samples, 0.89%)</title><rect x="909.4" y="357" width="10.5" height="15.0" fill="rgb(211,119,45)" rx="2" ry="2" />
<text  x="912.41" y="367.5" ></text>
</g>
<g >
<title>rest_init (15 samples, 0.07%)</title><rect x="1189.2" y="437" width="0.8" height="15.0" fill="rgb(225,21,28)" rx="2" ry="2" />
<text  x="1192.15" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (3 samples, 0.01%)</title><rect x="91.8" y="341" width="0.2" height="15.0" fill="rgb(222,105,4)" rx="2" ry="2" />
<text  x="94.81" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="33.9" y="341" width="0.2" height="15.0" fill="rgb(241,105,54)" rx="2" ry="2" />
<text  x="36.94" y="351.5" ></text>
</g>
<g >
<title>pick_next_task_fair (30 samples, 0.14%)</title><rect x="49.0" y="357" width="1.6" height="15.0" fill="rgb(208,182,16)" rx="2" ry="2" />
<text  x="51.96" y="367.5" ></text>
</g>
<g >
<title>kthread (7 samples, 0.03%)</title><rect x="33.5" y="501" width="0.4" height="15.0" fill="rgb(240,114,31)" rx="2" ry="2" />
<text  x="36.54" y="511.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (6 samples, 0.03%)</title><rect x="150.9" y="373" width="0.3" height="15.0" fill="rgb(214,128,22)" rx="2" ry="2" />
<text  x="153.86" y="383.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (120 samples, 0.57%)</title><rect x="20.1" y="389" width="6.8" height="15.0" fill="rgb(229,11,27)" rx="2" ry="2" />
<text  x="23.11" y="399.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (16 samples, 0.08%)</title><rect x="255.1" y="469" width="0.9" height="15.0" fill="rgb(225,44,35)" rx="2" ry="2" />
<text  x="258.13" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (2 samples, 0.01%)</title><rect x="193.4" y="341" width="0.1" height="15.0" fill="rgb(247,94,20)" rx="2" ry="2" />
<text  x="196.43" y="351.5" ></text>
</g>
<g >
<title>core::mem::drop (106 samples, 0.51%)</title><rect x="969.0" y="405" width="6.0" height="15.0" fill="rgb(224,151,24)" rx="2" ry="2" />
<text  x="972.03" y="415.5" ></text>
</g>
<g >
<title>wake_up_q (2 samples, 0.01%)</title><rect x="65.3" y="437" width="0.1" height="15.0" fill="rgb(240,80,33)" rx="2" ry="2" />
<text  x="68.33" y="447.5" ></text>
</g>
<g >
<title>cpu_startup_entry (670 samples, 3.21%)</title><rect x="115.2" y="485" width="37.8" height="15.0" fill="rgb(249,108,7)" rx="2" ry="2" />
<text  x="118.18" y="495.5" >cpu..</text>
</g>
<g >
<title>alloc_buffer_head (3 samples, 0.01%)</title><rect x="56.2" y="101" width="0.2" height="15.0" fill="rgb(232,129,29)" rx="2" ry="2" />
<text  x="59.18" y="111.5" ></text>
</g>
<g >
<title>nohz_csd_func (9 samples, 0.04%)</title><rect x="149.7" y="437" width="0.5" height="15.0" fill="rgb(247,87,31)" rx="2" ry="2" />
<text  x="152.67" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_current (10 samples, 0.05%)</title><rect x="56.9" y="117" width="0.5" height="15.0" fill="rgb(223,86,45)" rx="2" ry="2" />
<text  x="59.86" y="127.5" ></text>
</g>
<g >
<title>cpu_startup_entry (209 samples, 1.00%)</title><rect x="66.3" y="485" width="11.8" height="15.0" fill="rgb(247,12,2)" rx="2" ry="2" />
<text  x="69.29" y="495.5" ></text>
</g>
<g >
<title>arch_call_rest_init (197 samples, 0.94%)</title><rect x="40.1" y="453" width="11.2" height="15.0" fill="rgb(241,173,42)" rx="2" ry="2" />
<text  x="43.15" y="463.5" ></text>
</g>
<g >
<title>do_anonymous_page (7 samples, 0.03%)</title><rect x="1178.9" y="405" width="0.4" height="15.0" fill="rgb(219,73,22)" rx="2" ry="2" />
<text  x="1181.88" y="415.5" ></text>
</g>
<g >
<title>__munmap (2 samples, 0.01%)</title><rect x="297.6" y="389" width="0.2" height="15.0" fill="rgb(210,174,16)" rx="2" ry="2" />
<text  x="300.65" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_slowpath.constprop.0 (2 samples, 0.01%)</title><rect x="1178.9" y="357" width="0.1" height="15.0" fill="rgb(234,142,41)" rx="2" ry="2" />
<text  x="1181.88" y="367.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="908.7" y="277" width="0.3" height="15.0" fill="rgb(232,216,5)" rx="2" ry="2" />
<text  x="911.73" y="287.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (15 samples, 0.07%)</title><rect x="190.6" y="325" width="0.9" height="15.0" fill="rgb(237,195,19)" rx="2" ry="2" />
<text  x="193.60" y="335.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="740.9" y="341" width="0.1" height="15.0" fill="rgb(253,0,18)" rx="2" ry="2" />
<text  x="743.89" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="94.5" y="325" width="0.1" height="15.0" fill="rgb(253,34,4)" rx="2" ry="2" />
<text  x="97.46" y="335.5" ></text>
</g>
<g >
<title>__evlist__enable (64 samples, 0.31%)</title><rect x="51.3" y="485" width="3.6" height="15.0" fill="rgb(240,5,29)" rx="2" ry="2" />
<text  x="54.33" y="495.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="12.8" y="405" width="0.1" height="15.0" fill="rgb(220,47,12)" rx="2" ry="2" />
<text  x="15.77" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (110 samples, 0.53%)</title><rect x="33.9" y="485" width="6.2" height="15.0" fill="rgb(220,75,37)" rx="2" ry="2" />
<text  x="36.94" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (169 samples, 0.81%)</title><rect x="1043.8" y="325" width="9.6" height="15.0" fill="rgb(211,72,19)" rx="2" ry="2" />
<text  x="1046.83" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (164 samples, 0.78%)</title><rect x="1134.7" y="325" width="9.2" height="15.0" fill="rgb(246,112,19)" rx="2" ry="2" />
<text  x="1137.67" y="335.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (7 samples, 0.03%)</title><rect x="1122.4" y="341" width="0.4" height="15.0" fill="rgb(243,212,13)" rx="2" ry="2" />
<text  x="1125.42" y="351.5" ></text>
</g>
<g >
<title>update_rq_clock (3 samples, 0.01%)</title><rect x="152.2" y="421" width="0.2" height="15.0" fill="rgb(239,105,1)" rx="2" ry="2" />
<text  x="155.21" y="431.5" ></text>
</g>
<g >
<title>NaClSysMunmapDecoder (2 samples, 0.01%)</title><rect x="297.8" y="485" width="0.1" height="15.0" fill="rgb(205,60,27)" rx="2" ry="2" />
<text  x="300.82" y="495.5" ></text>
</g>
<g >
<title>NaClSysWrite (5 samples, 0.02%)</title><rect x="220.5" y="501" width="0.3" height="15.0" fill="rgb(221,81,28)" rx="2" ry="2" />
<text  x="223.47" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (88 samples, 0.42%)</title><rect x="898.7" y="373" width="5.0" height="15.0" fill="rgb(225,148,15)" rx="2" ry="2" />
<text  x="901.74" y="383.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (4 samples, 0.02%)</title><rect x="839.5" y="437" width="0.2" height="15.0" fill="rgb(236,125,50)" rx="2" ry="2" />
<text  x="842.52" y="447.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.01%)</title><rect x="1188.9" y="421" width="0.2" height="15.0" fill="rgb(210,220,4)" rx="2" ry="2" />
<text  x="1191.93" y="431.5" ></text>
</g>
<g >
<title>do_sys_poll (3 samples, 0.01%)</title><rect x="114.0" y="469" width="0.2" height="15.0" fill="rgb(208,25,6)" rx="2" ry="2" />
<text  x="116.99" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (8 samples, 0.04%)</title><rect x="1178.8" y="437" width="0.5" height="15.0" fill="rgb(207,67,44)" rx="2" ry="2" />
<text  x="1181.82" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (97 samples, 0.46%)</title><rect x="877.9" y="389" width="5.4" height="15.0" fill="rgb(213,72,7)" rx="2" ry="2" />
<text  x="880.85" y="399.5" ></text>
</g>
<g >
<title>schedule_idle (4 samples, 0.02%)</title><rect x="1188.9" y="453" width="0.2" height="15.0" fill="rgb(231,217,12)" rx="2" ry="2" />
<text  x="1191.87" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (129 samples, 0.62%)</title><rect x="1104.9" y="341" width="7.2" height="15.0" fill="rgb(230,213,10)" rx="2" ry="2" />
<text  x="1107.86" y="351.5" ></text>
</g>
<g >
<title>do_sys_poll (5 samples, 0.02%)</title><rect x="55.1" y="405" width="0.2" height="15.0" fill="rgb(238,227,17)" rx="2" ry="2" />
<text  x="58.05" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (8,583 samples, 41.07%)</title><rect x="297.9" y="421" width="484.6" height="15.0" fill="rgb(231,108,47)" rx="2" ry="2" />
<text  x="300.93" y="431.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safepos..</text>
</g>
<g >
<title>clear_page_erms (8 samples, 0.04%)</title><rect x="56.9" y="69" width="0.4" height="15.0" fill="rgb(220,14,22)" rx="2" ry="2" />
<text  x="59.86" y="79.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1,124 samples, 5.38%)</title><rect x="153.0" y="453" width="63.5" height="15.0" fill="rgb(254,20,23)" rx="2" ry="2" />
<text  x="156.00" y="463.5" >arch_c..</text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.01%)</title><rect x="25.0" y="341" width="0.1" height="15.0" fill="rgb(207,97,17)" rx="2" ry="2" />
<text  x="28.02" y="351.5" ></text>
</g>
<g >
<title>journal-offline (346 samples, 1.66%)</title><rect x="31.7" y="533" width="19.6" height="15.0" fill="rgb(247,221,34)" rx="2" ry="2" />
<text  x="34.74" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (47 samples, 0.22%)</title><rect x="55.4" y="357" width="2.6" height="15.0" fill="rgb(236,120,33)" rx="2" ry="2" />
<text  x="58.39" y="367.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (2 samples, 0.01%)</title><rect x="78.5" y="373" width="0.1" height="15.0" fill="rgb(250,104,8)" rx="2" ry="2" />
<text  x="81.48" y="383.5" ></text>
</g>
<g >
<title>NaClSysExit (2 samples, 0.01%)</title><rect x="297.6" y="469" width="0.2" height="15.0" fill="rgb(248,163,47)" rx="2" ry="2" />
<text  x="300.65" y="479.5" ></text>
</g>
<g >
<title>pool-udisksd (720 samples, 3.44%)</title><rect x="58.1" y="533" width="40.6" height="15.0" fill="rgb(209,165,24)" rx="2" ry="2" />
<text  x="61.10" y="543.5" >poo..</text>
</g>
<g >
<title>__x64_sys_ioctl (64 samples, 0.31%)</title><rect x="51.3" y="389" width="3.6" height="15.0" fill="rgb(237,225,10)" rx="2" ry="2" />
<text  x="54.33" y="399.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (179 samples, 0.86%)</title><rect x="849.8" y="453" width="10.1" height="15.0" fill="rgb(206,24,44)" rx="2" ry="2" />
<text  x="852.79" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (8 samples, 0.04%)</title><rect x="211.6" y="373" width="0.5" height="15.0" fill="rgb(238,14,36)" rx="2" ry="2" />
<text  x="214.61" y="383.5" ></text>
</g>
<g >
<title>new_sync_read (2 samples, 0.01%)</title><rect x="114.2" y="437" width="0.1" height="15.0" fill="rgb(253,73,4)" rx="2" ry="2" />
<text  x="117.16" y="447.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (333 samples, 1.59%)</title><rect x="717.8" y="357" width="18.8" height="15.0" fill="rgb(207,43,2)" rx="2" ry="2" />
<text  x="720.80" y="367.5" ></text>
</g>
<g >
<title>schedule_idle (2 samples, 0.01%)</title><rect x="1189.7" y="389" width="0.1" height="15.0" fill="rgb(233,104,7)" rx="2" ry="2" />
<text  x="1192.72" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (8 samples, 0.04%)</title><rect x="1144.4" y="389" width="0.5" height="15.0" fill="rgb(252,84,34)" rx="2" ry="2" />
<text  x="1147.44" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (4 samples, 0.02%)</title><rect x="1185.2" y="501" width="0.2" height="15.0" fill="rgb(243,178,20)" rx="2" ry="2" />
<text  x="1188.20" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (27 samples, 0.13%)</title><rect x="922.0" y="293" width="1.5" height="15.0" fill="rgb(241,210,47)" rx="2" ry="2" />
<text  x="925.00" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (8 samples, 0.04%)</title><rect x="914.8" y="293" width="0.4" height="15.0" fill="rgb(248,1,38)" rx="2" ry="2" />
<text  x="917.77" y="303.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (23 samples, 0.11%)</title><rect x="296.3" y="485" width="1.3" height="15.0" fill="rgb(253,123,18)" rx="2" ry="2" />
<text  x="299.29" y="495.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (173 samples, 0.83%)</title><rect x="1112.1" y="357" width="9.8" height="15.0" fill="rgb(227,46,4)" rx="2" ry="2" />
<text  x="1115.15" y="367.5" ></text>
</g>
<g >
<title>futex_wake (2 samples, 0.01%)</title><rect x="65.3" y="453" width="0.1" height="15.0" fill="rgb(211,99,0)" rx="2" ry="2" />
<text  x="68.33" y="463.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.01%)</title><rect x="116.0" y="229" width="0.1" height="15.0" fill="rgb(249,75,47)" rx="2" ry="2" />
<text  x="118.97" y="239.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (10 samples, 0.05%)</title><rect x="1058.6" y="277" width="0.6" height="15.0" fill="rgb(241,61,53)" rx="2" ry="2" />
<text  x="1061.63" y="287.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (5 samples, 0.02%)</title><rect x="65.8" y="437" width="0.3" height="15.0" fill="rgb(207,52,43)" rx="2" ry="2" />
<text  x="68.78" y="447.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="26.4" y="293" width="0.1" height="15.0" fill="rgb(243,48,31)" rx="2" ry="2" />
<text  x="29.43" y="303.5" ></text>
</g>
<g >
<title>ksys_write (47 samples, 0.22%)</title><rect x="55.4" y="325" width="2.6" height="15.0" fill="rgb(238,7,21)" rx="2" ry="2" />
<text  x="58.39" y="335.5" ></text>
</g>
<g >
<title>cpuidle_select (42 samples, 0.20%)</title><rect x="89.7" y="373" width="2.4" height="15.0" fill="rgb(251,208,5)" rx="2" ry="2" />
<text  x="92.72" y="383.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (18 samples, 0.09%)</title><rect x="225.4" y="501" width="1.0" height="15.0" fill="rgb(240,106,3)" rx="2" ry="2" />
<text  x="228.38" y="511.5" ></text>
</g>
<g >
<title>compaction_alloc (3 samples, 0.01%)</title><rect x="114.5" y="405" width="0.2" height="15.0" fill="rgb(206,166,4)" rx="2" ry="2" />
<text  x="117.50" y="415.5" ></text>
</g>
<g >
<title>__schedule (57 samples, 0.27%)</title><rect x="94.1" y="373" width="3.2" height="15.0" fill="rgb(212,214,29)" rx="2" ry="2" />
<text  x="97.06" y="383.5" ></text>
</g>
<g >
<title>cpumask_next (3 samples, 0.01%)</title><rect x="28.9" y="293" width="0.2" height="15.0" fill="rgb(238,33,25)" rx="2" ry="2" />
<text  x="31.91" y="303.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.01%)</title><rect x="1071.6" y="357" width="0.1" height="15.0" fill="rgb(242,153,27)" rx="2" ry="2" />
<text  x="1074.61" y="367.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (9 samples, 0.04%)</title><rect x="923.5" y="261" width="0.5" height="15.0" fill="rgb(226,198,22)" rx="2" ry="2" />
<text  x="926.52" y="271.5" ></text>
</g>
<g >
<title>pagecache_get_page (18 samples, 0.09%)</title><rect x="56.5" y="133" width="1.0" height="15.0" fill="rgb(226,217,51)" rx="2" ry="2" />
<text  x="59.46" y="143.5" ></text>
</g>
<g >
<title>shrink_inactive_list (4 samples, 0.02%)</title><rect x="114.7" y="405" width="0.2" height="15.0" fill="rgb(234,105,16)" rx="2" ry="2" />
<text  x="117.67" y="415.5" ></text>
</g>
<g >
<title>record__pushfn (47 samples, 0.22%)</title><rect x="55.4" y="437" width="2.6" height="15.0" fill="rgb(242,51,37)" rx="2" ry="2" />
<text  x="58.39" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (116 samples, 0.55%)</title><rect x="883.7" y="341" width="6.5" height="15.0" fill="rgb(244,114,5)" rx="2" ry="2" />
<text  x="886.67" y="351.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (366 samples, 1.75%)</title><rect x="78.1" y="501" width="20.6" height="15.0" fill="rgb(221,50,25)" rx="2" ry="2" />
<text  x="81.09" y="511.5" ></text>
</g>
<g >
<title>dispatcher (2 samples, 0.01%)</title><rect x="297.8" y="421" width="0.1" height="15.0" fill="rgb(243,99,8)" rx="2" ry="2" />
<text  x="300.82" y="431.5" ></text>
</g>
<g >
<title>all (20,901 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(234,211,38)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (9 samples, 0.04%)</title><rect x="148.4" y="405" width="0.5" height="15.0" fill="rgb(254,215,43)" rx="2" ry="2" />
<text  x="151.38" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (106 samples, 0.51%)</title><rect x="969.0" y="373" width="6.0" height="15.0" fill="rgb(250,8,6)" rx="2" ry="2" />
<text  x="972.03" y="383.5" ></text>
</g>
<g >
<title>ioctl (64 samples, 0.31%)</title><rect x="51.3" y="437" width="3.6" height="15.0" fill="rgb(206,104,43)" rx="2" ry="2" />
<text  x="54.33" y="447.5" ></text>
</g>
<g >
<title>NaClStartThreadInApp (4 samples, 0.02%)</title><rect x="1185.2" y="469" width="0.2" height="15.0" fill="rgb(244,81,35)" rx="2" ry="2" />
<text  x="1188.20" y="479.5" ></text>
</g>
<g >
<title>__schedule (45 samples, 0.22%)</title><rect x="27.9" y="373" width="2.5" height="15.0" fill="rgb(248,105,35)" rx="2" ry="2" />
<text  x="30.90" y="383.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (3 samples, 0.01%)</title><rect x="34.1" y="357" width="0.1" height="15.0" fill="rgb(214,39,5)" rx="2" ry="2" />
<text  x="37.05" y="367.5" ></text>
</g>
<g >
<title>menu_select (3 samples, 0.01%)</title><rect x="1188.6" y="421" width="0.2" height="15.0" fill="rgb(248,203,44)" rx="2" ry="2" />
<text  x="1191.65" y="431.5" ></text>
</g>
<g >
<title>cpu_startup_entry (197 samples, 0.94%)</title><rect x="40.1" y="421" width="11.2" height="15.0" fill="rgb(233,209,4)" rx="2" ry="2" />
<text  x="43.15" y="431.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (2 samples, 0.01%)</title><rect x="1187.1" y="341" width="0.1" height="15.0" fill="rgb(225,171,42)" rx="2" ry="2" />
<text  x="1190.06" y="351.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (9 samples, 0.04%)</title><rect x="1060.8" y="293" width="0.5" height="15.0" fill="rgb(207,139,21)" rx="2" ry="2" />
<text  x="1063.77" y="303.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.01%)</title><rect x="190.8" y="309" width="0.2" height="15.0" fill="rgb(240,30,28)" rx="2" ry="2" />
<text  x="193.83" y="319.5" ></text>
</g>
<g >
<title>arch_call_rest_init (366 samples, 1.75%)</title><rect x="78.1" y="453" width="20.6" height="15.0" fill="rgb(205,24,38)" rx="2" ry="2" />
<text  x="81.09" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (433 samples, 2.07%)</title><rect x="975.4" y="389" width="24.4" height="15.0" fill="rgb(210,132,36)" rx="2" ry="2" />
<text  x="978.35" y="399.5" >&lt;..</text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (8 samples, 0.04%)</title><rect x="921.5" y="309" width="0.5" height="15.0" fill="rgb(245,228,8)" rx="2" ry="2" />
<text  x="924.55" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.04%)</title><rect x="739.2" y="341" width="0.4" height="15.0" fill="rgb(228,54,32)" rx="2" ry="2" />
<text  x="742.19" y="351.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (295 samples, 1.41%)</title><rect x="316.5" y="389" width="16.7" height="15.0" fill="rgb(230,183,22)" rx="2" ry="2" />
<text  x="319.50" y="399.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="297.8" y="165" width="0.1" height="15.0" fill="rgb(253,147,35)" rx="2" ry="2" />
<text  x="300.82" y="175.5" ></text>
</g>
<g >
<title>pick_next_task_fair (209 samples, 1.00%)</title><rect x="198.8" y="357" width="11.8" height="15.0" fill="rgb(212,37,15)" rx="2" ry="2" />
<text  x="201.79" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (64 samples, 0.31%)</title><rect x="51.3" y="405" width="3.6" height="15.0" fill="rgb(237,37,32)" rx="2" ry="2" />
<text  x="54.33" y="415.5" ></text>
</g>
<g >
<title>NaClSysWrite (6,040 samples, 28.90%)</title><rect x="804.2" y="469" width="341.0" height="15.0" fill="rgb(213,228,41)" rx="2" ry="2" />
<text  x="807.23" y="479.5" >NaClSysWrite</text>
</g>
<g >
<title>alloc_pages_vma (5 samples, 0.02%)</title><rect x="1178.9" y="389" width="0.3" height="15.0" fill="rgb(236,31,23)" rx="2" ry="2" />
<text  x="1181.88" y="399.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.01%)</title><rect x="1185.4" y="309" width="0.1" height="15.0" fill="rgb(207,38,23)" rx="2" ry="2" />
<text  x="1188.43" y="319.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (2 samples, 0.01%)</title><rect x="57.5" y="133" width="0.1" height="15.0" fill="rgb(240,110,52)" rx="2" ry="2" />
<text  x="60.54" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="65.2" y="485" width="0.2" height="15.0" fill="rgb(250,20,7)" rx="2" ry="2" />
<text  x="68.21" y="495.5" ></text>
</g>
<g >
<title>kick_ilb (14 samples, 0.07%)</title><rect x="151.3" y="373" width="0.8" height="15.0" fill="rgb(205,123,5)" rx="2" ry="2" />
<text  x="154.31" y="383.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 0.31%)</title><rect x="51.3" y="165" width="3.6" height="15.0" fill="rgb(250,210,17)" rx="2" ry="2" />
<text  x="54.33" y="175.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (578 samples, 2.77%)</title><rect x="1071.7" y="373" width="32.7" height="15.0" fill="rgb(225,87,4)" rx="2" ry="2" />
<text  x="1074.72" y="383.5" >&lt;l..</text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (10 samples, 0.05%)</title><rect x="1181.4" y="501" width="0.5" height="15.0" fill="rgb(215,26,5)" rx="2" ry="2" />
<text  x="1184.36" y="511.5" ></text>
</g>
<g >
<title>run_rebalance_domains (8 samples, 0.04%)</title><rect x="156.4" y="245" width="0.4" height="15.0" fill="rgb(230,227,4)" rx="2" ry="2" />
<text  x="159.39" y="255.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (15 samples, 0.07%)</title><rect x="1189.2" y="501" width="0.8" height="15.0" fill="rgb(234,151,7)" rx="2" ry="2" />
<text  x="1192.15" y="511.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (3 samples, 0.01%)</title><rect x="220.2" y="501" width="0.2" height="15.0" fill="rgb(253,225,5)" rx="2" ry="2" />
<text  x="223.24" y="511.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (335 samples, 1.60%)</title><rect x="1125.5" y="357" width="18.9" height="15.0" fill="rgb(215,64,9)" rx="2" ry="2" />
<text  x="1128.53" y="367.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (2 samples, 0.01%)</title><rect x="78.5" y="389" width="0.1" height="15.0" fill="rgb(212,108,10)" rx="2" ry="2" />
<text  x="81.48" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (25 samples, 0.12%)</title><rect x="1187.2" y="421" width="1.4" height="15.0" fill="rgb(218,195,17)" rx="2" ry="2" />
<text  x="1190.23" y="431.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (5 samples, 0.02%)</title><rect x="33.7" y="405" width="0.2" height="15.0" fill="rgb(254,148,13)" rx="2" ry="2" />
<text  x="36.66" y="415.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.01%)</title><rect x="56.7" y="53" width="0.2" height="15.0" fill="rgb(235,213,0)" rx="2" ry="2" />
<text  x="59.75" y="63.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (18 samples, 0.09%)</title><rect x="1053.4" y="325" width="1.0" height="15.0" fill="rgb(235,22,21)" rx="2" ry="2" />
<text  x="1056.37" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (2 samples, 0.01%)</title><rect x="1185.4" y="277" width="0.1" height="15.0" fill="rgb(237,23,14)" rx="2" ry="2" />
<text  x="1188.43" y="287.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (3 samples, 0.01%)</title><rect x="829.9" y="437" width="0.1" height="15.0" fill="rgb(253,33,24)" rx="2" ry="2" />
<text  x="832.86" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (13 samples, 0.06%)</title><rect x="1063.1" y="293" width="0.7" height="15.0" fill="rgb(214,216,47)" rx="2" ry="2" />
<text  x="1066.09" y="303.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (5 samples, 0.02%)</title><rect x="781.9" y="341" width="0.3" height="15.0" fill="rgb(212,14,8)" rx="2" ry="2" />
<text  x="784.88" y="351.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.02%)</title><rect x="1104.4" y="373" width="0.2" height="15.0" fill="rgb(209,0,44)" rx="2" ry="2" />
<text  x="1107.36" y="383.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="297.8" y="213" width="0.1" height="15.0" fill="rgb(218,209,17)" rx="2" ry="2" />
<text  x="300.82" y="223.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.01%)</title><rect x="56.2" y="85" width="0.2" height="15.0" fill="rgb(226,218,4)" rx="2" ry="2" />
<text  x="59.18" y="95.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (198 samples, 0.95%)</title><rect x="66.4" y="421" width="11.2" height="15.0" fill="rgb(245,128,29)" rx="2" ry="2" />
<text  x="69.40" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (184 samples, 0.88%)</title><rect x="79.2" y="357" width="10.3" height="15.0" fill="rgb(244,105,33)" rx="2" ry="2" />
<text  x="82.16" y="367.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.01%)</title><rect x="77.8" y="341" width="0.1" height="15.0" fill="rgb(214,178,53)" rx="2" ry="2" />
<text  x="80.80" y="351.5" ></text>
</g>
<g >
<title>kswapd (5 samples, 0.02%)</title><rect x="1186.9" y="485" width="0.3" height="15.0" fill="rgb(247,132,53)" rx="2" ry="2" />
<text  x="1189.89" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.06%)</title><rect x="1056.3" y="229" width="0.7" height="15.0" fill="rgb(240,3,41)" rx="2" ry="2" />
<text  x="1059.25" y="239.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.05%)</title><rect x="1047.2" y="261" width="0.6" height="15.0" fill="rgb(238,5,23)" rx="2" ry="2" />
<text  x="1050.16" y="271.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (170 samples, 0.81%)</title><rect x="1028.3" y="341" width="9.6" height="15.0" fill="rgb(251,75,15)" rx="2" ry="2" />
<text  x="1031.31" y="351.5" ></text>
</g>
<g >
<title>swapper (57 samples, 0.27%)</title><rect x="1186.8" y="533" width="3.2" height="15.0" fill="rgb(225,224,49)" rx="2" ry="2" />
<text  x="1189.78" y="543.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (30 samples, 0.14%)</title><rect x="55.8" y="165" width="1.7" height="15.0" fill="rgb(239,103,28)" rx="2" ry="2" />
<text  x="58.79" y="175.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (140 samples, 0.67%)</title><rect x="382.5" y="357" width="7.9" height="15.0" fill="rgb(246,9,30)" rx="2" ry="2" />
<text  x="385.50" y="367.5" ></text>
</g>
<g >
<title>nohz_csd_func (3 samples, 0.01%)</title><rect x="27.7" y="373" width="0.1" height="15.0" fill="rgb(246,90,30)" rx="2" ry="2" />
<text  x="30.67" y="383.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="1047.8" y="261" width="0.2" height="15.0" fill="rgb(215,70,37)" rx="2" ry="2" />
<text  x="1050.79" y="271.5" ></text>
</g>
<g >
<title>poll_idle (40 samples, 0.19%)</title><rect x="145.3" y="405" width="2.3" height="15.0" fill="rgb(209,117,53)" rx="2" ry="2" />
<text  x="148.33" y="415.5" ></text>
</g>
<g >
<title>__update_idle_core (3 samples, 0.01%)</title><rect x="210.6" y="341" width="0.2" height="15.0" fill="rgb(226,124,31)" rx="2" ry="2" />
<text  x="213.65" y="351.5" ></text>
</g>
<g >
<title>native_sched_clock (3 samples, 0.01%)</title><rect x="31.1" y="341" width="0.1" height="15.0" fill="rgb(240,37,35)" rx="2" ry="2" />
<text  x="34.06" y="351.5" ></text>
</g>
<g >
<title>NaClLog (7 samples, 0.03%)</title><rect x="234.0" y="501" width="0.4" height="15.0" fill="rgb(234,120,29)" rx="2" ry="2" />
<text  x="236.96" y="511.5" ></text>
</g>
<g >
<title>pick_next_task_fair (41 samples, 0.20%)</title><rect x="28.1" y="357" width="2.3" height="15.0" fill="rgb(206,6,16)" rx="2" ry="2" />
<text  x="31.07" y="367.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (9 samples, 0.04%)</title><rect x="1143.9" y="341" width="0.5" height="15.0" fill="rgb(253,121,47)" rx="2" ry="2" />
<text  x="1146.93" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (5 samples, 0.02%)</title><rect x="1026.8" y="293" width="0.3" height="15.0" fill="rgb(218,204,19)" rx="2" ry="2" />
<text  x="1029.84" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (4 samples, 0.02%)</title><rect x="924.4" y="309" width="0.3" height="15.0" fill="rgb(236,82,13)" rx="2" ry="2" />
<text  x="927.43" y="319.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.02%)</title><rect x="1054.1" y="309" width="0.3" height="15.0" fill="rgb(239,225,9)" rx="2" ry="2" />
<text  x="1057.11" y="319.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (4 samples, 0.02%)</title><rect x="333.2" y="389" width="0.2" height="15.0" fill="rgb(236,36,31)" rx="2" ry="2" />
<text  x="336.21" y="399.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (5 samples, 0.02%)</title><rect x="152.7" y="469" width="0.3" height="15.0" fill="rgb(218,140,4)" rx="2" ry="2" />
<text  x="155.72" y="479.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.03%)</title><rect x="898.3" y="389" width="0.4" height="15.0" fill="rgb(251,154,13)" rx="2" ry="2" />
<text  x="901.29" y="399.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.02%)</title><rect x="1104.4" y="389" width="0.2" height="15.0" fill="rgb(221,48,31)" rx="2" ry="2" />
<text  x="1107.36" y="399.5" ></text>
</g>
<g >
<title>start_secondary (209 samples, 1.00%)</title><rect x="66.3" y="501" width="11.8" height="15.0" fill="rgb(236,189,44)" rx="2" ry="2" />
<text  x="69.29" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt; (131 samples, 0.63%)</title><rect x="1006.7" y="405" width="7.4" height="15.0" fill="rgb(226,172,49)" rx="2" ry="2" />
<text  x="1009.74" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="66.5" y="325" width="0.1" height="15.0" fill="rgb(224,93,32)" rx="2" ry="2" />
<text  x="69.46" y="335.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (2 samples, 0.01%)</title><rect x="89.3" y="325" width="0.1" height="15.0" fill="rgb(215,99,42)" rx="2" ry="2" />
<text  x="92.27" y="335.5" ></text>
</g>
<g >
<title>llist_reverse_order (5 samples, 0.02%)</title><rect x="27.4" y="373" width="0.3" height="15.0" fill="rgb(218,82,27)" rx="2" ry="2" />
<text  x="30.39" y="383.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (6 samples, 0.03%)</title><rect x="782.2" y="341" width="0.3" height="15.0" fill="rgb(248,93,52)" rx="2" ry="2" />
<text  x="785.16" y="351.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.08%)</title><rect x="920.6" y="309" width="0.9" height="15.0" fill="rgb(211,209,53)" rx="2" ry="2" />
<text  x="923.59" y="319.5" ></text>
</g>
<g >
<title>NaClXMutexLock (180 samples, 0.86%)</title><rect x="283.8" y="469" width="10.1" height="15.0" fill="rgb(253,148,7)" rx="2" ry="2" />
<text  x="286.76" y="479.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (194 samples, 0.93%)</title><rect x="199.6" y="325" width="11.0" height="15.0" fill="rgb(245,65,18)" rx="2" ry="2" />
<text  x="202.64" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (10 samples, 0.05%)</title><rect x="56.9" y="85" width="0.5" height="15.0" fill="rgb(215,190,32)" rx="2" ry="2" />
<text  x="59.86" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="1185.6" y="501" width="0.1" height="15.0" fill="rgb(222,54,51)" rx="2" ry="2" />
<text  x="1188.60" y="511.5" ></text>
</g>
<g >
<title>NaClLog (20 samples, 0.10%)</title><rect x="858.8" y="421" width="1.1" height="15.0" fill="rgb(233,116,28)" rx="2" ry="2" />
<text  x="861.77" y="431.5" ></text>
</g>
<g >
<title>process_one_work (7 samples, 0.03%)</title><rect x="33.5" y="469" width="0.4" height="15.0" fill="rgb(209,171,38)" rx="2" ry="2" />
<text  x="36.54" y="479.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (85 samples, 0.41%)</title><rect x="20.5" y="357" width="4.8" height="15.0" fill="rgb(205,1,41)" rx="2" ry="2" />
<text  x="23.50" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (5 samples, 0.02%)</title><rect x="1178.9" y="373" width="0.3" height="15.0" fill="rgb(219,168,20)" rx="2" ry="2" />
<text  x="1181.88" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (12 samples, 0.06%)</title><rect x="903.0" y="309" width="0.7" height="15.0" fill="rgb(246,65,43)" rx="2" ry="2" />
<text  x="905.97" y="319.5" ></text>
</g>
<g >
<title>kthread (5 samples, 0.02%)</title><rect x="1186.9" y="501" width="0.3" height="15.0" fill="rgb(250,20,16)" rx="2" ry="2" />
<text  x="1189.89" y="511.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.01%)</title><rect x="89.4" y="325" width="0.1" height="15.0" fill="rgb(244,49,49)" rx="2" ry="2" />
<text  x="92.38" y="335.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.02%)</title><rect x="1188.9" y="437" width="0.2" height="15.0" fill="rgb(235,163,29)" rx="2" ry="2" />
<text  x="1191.87" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (6 samples, 0.03%)</title><rect x="1120.0" y="309" width="0.3" height="15.0" fill="rgb(252,37,54)" rx="2" ry="2" />
<text  x="1122.99" y="319.5" ></text>
</g>
<g >
<title>prune_dcache_sb (3 samples, 0.01%)</title><rect x="65.9" y="357" width="0.2" height="15.0" fill="rgb(247,114,1)" rx="2" ry="2" />
<text  x="68.89" y="367.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.01%)</title><rect x="156.1" y="197" width="0.1" height="15.0" fill="rgb(243,139,10)" rx="2" ry="2" />
<text  x="159.05" y="207.5" ></text>
</g>
<g >
<title>__schedule (35 samples, 0.17%)</title><rect x="48.7" y="373" width="2.0" height="15.0" fill="rgb(238,97,43)" rx="2" ry="2" />
<text  x="51.73" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (145 samples, 0.69%)</title><rect x="831.3" y="437" width="8.2" height="15.0" fill="rgb(240,192,7)" rx="2" ry="2" />
<text  x="834.33" y="447.5" ></text>
</g>
<g >
<title>rcu_do_batch (2 samples, 0.01%)</title><rect x="116.0" y="277" width="0.1" height="15.0" fill="rgb(227,13,37)" rx="2" ry="2" />
<text  x="118.97" y="287.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (2 samples, 0.01%)</title><rect x="283.1" y="485" width="0.2" height="15.0" fill="rgb(216,53,38)" rx="2" ry="2" />
<text  x="286.14" y="495.5" ></text>
</g>
<g >
<title>put_prev_task_idle (2 samples, 0.01%)</title><rect x="212.2" y="373" width="0.1" height="15.0" fill="rgb(224,188,46)" rx="2" ry="2" />
<text  x="215.17" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (13 samples, 0.06%)</title><rect x="1118.1" y="325" width="0.8" height="15.0" fill="rgb(253,49,13)" rx="2" ry="2" />
<text  x="1121.13" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.01%)</title><rect x="116.0" y="245" width="0.1" height="15.0" fill="rgb(239,2,29)" rx="2" ry="2" />
<text  x="118.97" y="255.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (27 samples, 0.13%)</title><rect x="1120.4" y="341" width="1.5" height="15.0" fill="rgb(224,218,21)" rx="2" ry="2" />
<text  x="1123.39" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (32 samples, 0.15%)</title><rect x="191.6" y="325" width="1.8" height="15.0" fill="rgb(238,13,54)" rx="2" ry="2" />
<text  x="194.62" y="335.5" ></text>
</g>
<g >
<title>poll_idle (78 samples, 0.37%)</title><rect x="20.6" y="341" width="4.4" height="15.0" fill="rgb(208,93,20)" rx="2" ry="2" />
<text  x="23.61" y="351.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (4 samples, 0.02%)</title><rect x="91.0" y="325" width="0.2" height="15.0" fill="rgb(234,101,34)" rx="2" ry="2" />
<text  x="93.96" y="335.5" ></text>
</g>
<g >
<title>cpuidle_select (15 samples, 0.07%)</title><rect x="46.8" y="373" width="0.9" height="15.0" fill="rgb(217,164,2)" rx="2" ry="2" />
<text  x="49.81" y="383.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (3 samples, 0.01%)</title><rect x="296.1" y="485" width="0.2" height="15.0" fill="rgb(230,152,41)" rx="2" ry="2" />
<text  x="299.12" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (2 samples, 0.01%)</title><rect x="297.8" y="309" width="0.1" height="15.0" fill="rgb(229,182,5)" rx="2" ry="2" />
<text  x="300.82" y="319.5" ></text>
</g>
<g >
<title>poll_idle (4 samples, 0.02%)</title><rect x="1188.4" y="405" width="0.2" height="15.0" fill="rgb(237,15,46)" rx="2" ry="2" />
<text  x="1191.36" y="415.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (6,272 samples, 30.01%)</title><rect x="382.5" y="389" width="354.1" height="15.0" fill="rgb(254,206,4)" rx="2" ry="2" />
<text  x="385.50" y="399.5" >ringbuf::consumer::Consumer&lt;T&gt;::len</text>
</g>
<g >
<title>ext4_da_write_end (8 samples, 0.04%)</title><rect x="57.5" y="165" width="0.4" height="15.0" fill="rgb(214,4,37)" rx="2" ry="2" />
<text  x="60.48" y="175.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (6 samples, 0.03%)</title><rect x="91.5" y="309" width="0.3" height="15.0" fill="rgb(209,48,39)" rx="2" ry="2" />
<text  x="94.47" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (16 samples, 0.08%)</title><rect x="213.7" y="389" width="0.9" height="15.0" fill="rgb(245,152,32)" rx="2" ry="2" />
<text  x="216.70" y="399.5" ></text>
</g>
<g >
<title>native_sched_clock (7 samples, 0.03%)</title><rect x="183.9" y="309" width="0.4" height="15.0" fill="rgb(226,7,44)" rx="2" ry="2" />
<text  x="186.89" y="319.5" ></text>
</g>
<g >
<title>cpu_startup_entry (366 samples, 1.75%)</title><rect x="78.1" y="421" width="20.6" height="15.0" fill="rgb(211,66,6)" rx="2" ry="2" />
<text  x="81.09" y="431.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (4 samples, 0.02%)</title><rect x="19.6" y="389" width="0.2" height="15.0" fill="rgb(253,55,20)" rx="2" ry="2" />
<text  x="22.60" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (705 samples, 3.37%)</title><rect x="678.0" y="357" width="39.8" height="15.0" fill="rgb(249,198,24)" rx="2" ry="2" />
<text  x="680.99" y="367.5" >cor..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (34 samples, 0.16%)</title><rect x="901.1" y="309" width="1.9" height="15.0" fill="rgb(211,50,51)" rx="2" ry="2" />
<text  x="904.05" y="319.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.01%)</title><rect x="1186.8" y="453" width="0.1" height="15.0" fill="rgb(229,29,8)" rx="2" ry="2" />
<text  x="1189.78" y="463.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (29 samples, 0.14%)</title><rect x="221.9" y="501" width="1.6" height="15.0" fill="rgb(253,81,22)" rx="2" ry="2" />
<text  x="224.88" y="511.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (2 samples, 0.01%)</title><rect x="57.5" y="149" width="0.1" height="15.0" fill="rgb(216,34,2)" rx="2" ry="2" />
<text  x="60.54" y="159.5" ></text>
</g>
<g >
<title>menu_update (2 samples, 0.01%)</title><rect x="148.3" y="405" width="0.1" height="15.0" fill="rgb(227,21,31)" rx="2" ry="2" />
<text  x="151.26" y="415.5" ></text>
</g>
<g >
<title>__schedule (241 samples, 1.15%)</title><rect x="197.9" y="373" width="13.7" height="15.0" fill="rgb(219,220,23)" rx="2" ry="2" />
<text  x="200.94" y="383.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (139 samples, 0.67%)</title><rect x="822.2" y="453" width="7.8" height="15.0" fill="rgb(225,37,21)" rx="2" ry="2" />
<text  x="825.19" y="463.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (7 samples, 0.03%)</title><rect x="924.0" y="261" width="0.4" height="15.0" fill="rgb(221,141,14)" rx="2" ry="2" />
<text  x="927.03" y="271.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (79 samples, 0.38%)</title><rect x="915.2" y="277" width="4.5" height="15.0" fill="rgb(205,173,44)" rx="2" ry="2" />
<text  x="918.23" y="287.5" ></text>
</g>
<g >
<title>ret_from_fork (14 samples, 0.07%)</title><rect x="114.4" y="517" width="0.8" height="15.0" fill="rgb(249,102,35)" rx="2" ry="2" />
<text  x="117.39" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.03%)</title><rect x="907.5" y="261" width="0.4" height="15.0" fill="rgb(246,99,29)" rx="2" ry="2" />
<text  x="910.55" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (272 samples, 1.30%)</title><rect x="1043.8" y="341" width="15.4" height="15.0" fill="rgb(250,195,30)" rx="2" ry="2" />
<text  x="1046.83" y="351.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (3 samples, 0.01%)</title><rect x="40.8" y="341" width="0.2" height="15.0" fill="rgb(228,106,13)" rx="2" ry="2" />
<text  x="43.83" y="351.5" ></text>
</g>
<g >
<title>NaClMutexLock (162 samples, 0.78%)</title><rect x="284.8" y="453" width="9.1" height="15.0" fill="rgb(254,188,34)" rx="2" ry="2" />
<text  x="287.77" y="463.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (170 samples, 0.81%)</title><rect x="1028.3" y="357" width="9.6" height="15.0" fill="rgb(222,187,10)" rx="2" ry="2" />
<text  x="1031.31" y="367.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (3 samples, 0.01%)</title><rect x="803.9" y="469" width="0.2" height="15.0" fill="rgb(218,84,40)" rx="2" ry="2" />
<text  x="806.89" y="479.5" ></text>
</g>
<g >
<title>rcu_core_si (2 samples, 0.01%)</title><rect x="116.0" y="309" width="0.1" height="15.0" fill="rgb(245,42,23)" rx="2" ry="2" />
<text  x="118.97" y="319.5" ></text>
</g>
<g >
<title>do_idle (110 samples, 0.53%)</title><rect x="33.9" y="469" width="6.2" height="15.0" fill="rgb(220,189,9)" rx="2" ry="2" />
<text  x="36.94" y="479.5" ></text>
</g>
<g >
<title>[unknown]  (601 samples, 2.88%)</title><rect x="1145.4" y="517" width="33.9" height="15.0" fill="rgb(215,22,49)" rx="2" ry="2" />
<text  x="1148.40" y="527.5" >[u..</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (383 samples, 1.83%)</title><rect x="1122.8" y="373" width="21.6" height="15.0" fill="rgb(251,218,34)" rx="2" ry="2" />
<text  x="1125.82" y="383.5" >r..</text>
</g>
<g >
<title>flush_smp_call_function_queue (2 samples, 0.01%)</title><rect x="19.4" y="437" width="0.1" height="15.0" fill="rgb(235,85,31)" rx="2" ry="2" />
<text  x="22.37" y="447.5" ></text>
</g>
<g >
<title>kick_ilb (21 samples, 0.10%)</title><rect x="95.9" y="309" width="1.2" height="15.0" fill="rgb(249,41,36)" rx="2" ry="2" />
<text  x="98.93" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (4 samples, 0.02%)</title><rect x="216.7" y="501" width="0.3" height="15.0" fill="rgb(249,111,43)" rx="2" ry="2" />
<text  x="219.74" y="511.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (3 samples, 0.01%)</title><rect x="187.2" y="357" width="0.2" height="15.0" fill="rgb(242,199,30)" rx="2" ry="2" />
<text  x="190.22" y="367.5" ></text>
</g>
<g >
<title>fdarray__poll (6 samples, 0.03%)</title><rect x="55.0" y="485" width="0.3" height="15.0" fill="rgb(242,40,18)" rx="2" ry="2" />
<text  x="58.00" y="495.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="89.4" y="341" width="0.1" height="15.0" fill="rgb(238,186,4)" rx="2" ry="2" />
<text  x="92.38" y="351.5" ></text>
</g>
<g >
<title>handle_edge_irq (3 samples, 0.01%)</title><rect x="115.8" y="357" width="0.2" height="15.0" fill="rgb(238,132,30)" rx="2" ry="2" />
<text  x="118.80" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="65.2" y="501" width="0.4" height="15.0" fill="rgb(212,211,3)" rx="2" ry="2" />
<text  x="68.21" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (18 samples, 0.09%)</title><rect x="903.7" y="373" width="1.0" height="15.0" fill="rgb(234,186,44)" rx="2" ry="2" />
<text  x="906.71" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="33.9" y="357" width="0.2" height="15.0" fill="rgb(247,56,15)" rx="2" ry="2" />
<text  x="36.94" y="367.5" ></text>
</g>
<g >
<title>read_tsc (3 samples, 0.01%)</title><rect x="31.3" y="373" width="0.2" height="15.0" fill="rgb(240,41,37)" rx="2" ry="2" />
<text  x="34.28" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (869 samples, 4.16%)</title><rect x="333.4" y="373" width="49.1" height="15.0" fill="rgb(222,74,9)" rx="2" ry="2" />
<text  x="336.44" y="383.5" >core..</text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.01%)</title><rect x="891.9" y="325" width="0.1" height="15.0" fill="rgb(237,70,35)" rx="2" ry="2" />
<text  x="894.85" y="335.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (3 samples, 0.01%)</title><rect x="57.6" y="85" width="0.2" height="15.0" fill="rgb(207,223,35)" rx="2" ry="2" />
<text  x="60.65" y="95.5" ></text>
</g>
<g >
<title>shrink_node (4 samples, 0.02%)</title><rect x="114.7" y="453" width="0.2" height="15.0" fill="rgb(216,158,45)" rx="2" ry="2" />
<text  x="117.67" y="463.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.03%)</title><rect x="192.5" y="277" width="0.4" height="15.0" fill="rgb(235,176,43)" rx="2" ry="2" />
<text  x="195.52" y="287.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="213.4" y="373" width="0.1" height="15.0" fill="rgb(231,71,43)" rx="2" ry="2" />
<text  x="216.36" y="383.5" ></text>
</g>
<g >
<title>alx_mask_msix (3 samples, 0.01%)</title><rect x="115.8" y="293" width="0.2" height="15.0" fill="rgb(247,225,13)" rx="2" ry="2" />
<text  x="118.80" y="303.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (27 samples, 0.13%)</title><rect x="261.2" y="485" width="1.5" height="15.0" fill="rgb(232,127,40)" rx="2" ry="2" />
<text  x="264.18" y="495.5" ></text>
</g>
<g >
<title>llist_add_batch (40 samples, 0.19%)</title><rect x="208.2" y="277" width="2.3" height="15.0" fill="rgb(215,3,39)" rx="2" ry="2" />
<text  x="211.22" y="287.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.01%)</title><rect x="19.4" y="453" width="0.1" height="15.0" fill="rgb(210,102,33)" rx="2" ry="2" />
<text  x="22.37" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.01%)</title><rect x="114.2" y="485" width="0.1" height="15.0" fill="rgb(230,119,26)" rx="2" ry="2" />
<text  x="117.16" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="297.6" y="341" width="0.2" height="15.0" fill="rgb(245,20,32)" rx="2" ry="2" />
<text  x="300.65" y="351.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (2 samples, 0.01%)</title><rect x="56.4" y="133" width="0.1" height="15.0" fill="rgb(248,198,45)" rx="2" ry="2" />
<text  x="59.35" y="143.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (5 samples, 0.02%)</title><rect x="31.2" y="389" width="0.3" height="15.0" fill="rgb(212,25,1)" rx="2" ry="2" />
<text  x="34.23" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (9 samples, 0.04%)</title><rect x="923.5" y="277" width="0.5" height="15.0" fill="rgb(240,187,30)" rx="2" ry="2" />
<text  x="926.52" y="287.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_offset (2 samples, 0.01%)</title><rect x="740.9" y="325" width="0.1" height="15.0" fill="rgb(220,204,33)" rx="2" ry="2" />
<text  x="743.89" y="335.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (13 samples, 0.06%)</title><rect x="95.1" y="309" width="0.7" height="15.0" fill="rgb(236,134,49)" rx="2" ry="2" />
<text  x="98.08" y="319.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="97.2" y="341" width="0.1" height="15.0" fill="rgb(212,141,12)" rx="2" ry="2" />
<text  x="100.17" y="351.5" ></text>
</g>
<g >
<title>do_idle (130 samples, 0.62%)</title><rect x="12.6" y="469" width="7.3" height="15.0" fill="rgb(250,52,4)" rx="2" ry="2" />
<text  x="15.60" y="479.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="1178.9" y="325" width="0.1" height="15.0" fill="rgb(221,8,51)" rx="2" ry="2" />
<text  x="1181.88" y="335.5" ></text>
</g>
<g >
<title>newidle_balance (41 samples, 0.20%)</title><rect x="28.1" y="341" width="2.3" height="15.0" fill="rgb(226,119,14)" rx="2" ry="2" />
<text  x="31.07" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (99 samples, 0.47%)</title><rect x="919.9" y="341" width="5.6" height="15.0" fill="rgb(234,118,44)" rx="2" ry="2" />
<text  x="922.91" y="351.5" ></text>
</g>
<g >
<title>super_cache_scan (3 samples, 0.01%)</title><rect x="65.9" y="373" width="0.2" height="15.0" fill="rgb(253,28,13)" rx="2" ry="2" />
<text  x="68.89" y="383.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.01%)</title><rect x="114.2" y="453" width="0.1" height="15.0" fill="rgb(247,164,15)" rx="2" ry="2" />
<text  x="117.16" y="463.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (106 samples, 0.51%)</title><rect x="969.0" y="341" width="6.0" height="15.0" fill="rgb(217,210,43)" rx="2" ry="2" />
<text  x="972.03" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (16 samples, 0.08%)</title><rect x="1061.3" y="277" width="0.9" height="15.0" fill="rgb(243,66,48)" rx="2" ry="2" />
<text  x="1064.28" y="287.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (10 samples, 0.05%)</title><rect x="904.2" y="341" width="0.5" height="15.0" fill="rgb(225,172,10)" rx="2" ry="2" />
<text  x="907.16" y="351.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (2 samples, 0.01%)</title><rect x="191.5" y="325" width="0.1" height="15.0" fill="rgb(236,106,47)" rx="2" ry="2" />
<text  x="194.45" y="335.5" ></text>
</g>
<g >
<title>NaClLog (33 samples, 0.16%)</title><rect x="293.9" y="485" width="1.9" height="15.0" fill="rgb(236,196,49)" rx="2" ry="2" />
<text  x="296.92" y="495.5" ></text>
</g>
<g >
<title>cpuidle_select (24 samples, 0.11%)</title><rect x="25.4" y="373" width="1.3" height="15.0" fill="rgb(218,9,41)" rx="2" ry="2" />
<text  x="28.36" y="383.5" ></text>
</g>
<g >
<title>sched_clock_cpu (7 samples, 0.03%)</title><rect x="183.9" y="325" width="0.4" height="15.0" fill="rgb(228,218,1)" rx="2" ry="2" />
<text  x="186.89" y="335.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (83 samples, 0.40%)</title><rect x="915.2" y="325" width="4.7" height="15.0" fill="rgb(209,178,45)" rx="2" ry="2" />
<text  x="918.23" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (84 samples, 0.40%)</title><rect x="892.0" y="325" width="4.7" height="15.0" fill="rgb(236,76,8)" rx="2" ry="2" />
<text  x="894.97" y="335.5" ></text>
</g>
<g >
<title>cpu_startup_entry (15 samples, 0.07%)</title><rect x="1189.2" y="421" width="0.8" height="15.0" fill="rgb(251,21,2)" rx="2" ry="2" />
<text  x="1192.15" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (178 samples, 0.85%)</title><rect x="1016.8" y="309" width="10.0" height="15.0" fill="rgb(225,3,34)" rx="2" ry="2" />
<text  x="1019.79" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="12.4" y="517" width="0.2" height="15.0" fill="rgb(222,201,38)" rx="2" ry="2" />
<text  x="15.43" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (62 samples, 0.30%)</title><rect x="1039.1" y="277" width="3.5" height="15.0" fill="rgb(225,57,54)" rx="2" ry="2" />
<text  x="1042.09" y="287.5" ></text>
</g>
<g >
<title>sched_clock_cpu (10 samples, 0.05%)</title><rect x="211.0" y="341" width="0.6" height="15.0" fill="rgb(240,142,4)" rx="2" ry="2" />
<text  x="213.99" y="351.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (7 samples, 0.03%)</title><rect x="56.5" y="117" width="0.4" height="15.0" fill="rgb(208,9,22)" rx="2" ry="2" />
<text  x="59.46" y="127.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (75 samples, 0.36%)</title><rect x="904.7" y="293" width="4.3" height="15.0" fill="rgb(234,222,4)" rx="2" ry="2" />
<text  x="907.72" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (25 samples, 0.12%)</title><rect x="1041.2" y="245" width="1.4" height="15.0" fill="rgb(218,211,29)" rx="2" ry="2" />
<text  x="1044.18" y="255.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (46 samples, 0.22%)</title><rect x="1049.3" y="261" width="2.6" height="15.0" fill="rgb(212,126,44)" rx="2" ry="2" />
<text  x="1052.25" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (9 samples, 0.04%)</title><rect x="1118.9" y="341" width="0.5" height="15.0" fill="rgb(209,215,54)" rx="2" ry="2" />
<text  x="1121.86" y="351.5" ></text>
</g>
<g >
<title>poll_idle (96 samples, 0.46%)</title><rect x="41.0" y="341" width="5.4" height="15.0" fill="rgb(212,41,33)" rx="2" ry="2" />
<text  x="43.99" y="351.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (6 samples, 0.03%)</title><rect x="803.0" y="469" width="0.4" height="15.0" fill="rgb(224,222,5)" rx="2" ry="2" />
<text  x="806.05" y="479.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (10 samples, 0.05%)</title><rect x="904.2" y="357" width="0.5" height="15.0" fill="rgb(244,188,22)" rx="2" ry="2" />
<text  x="907.16" y="367.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (6,132 samples, 29.34%)</title><rect x="390.4" y="373" width="346.2" height="15.0" fill="rgb(230,70,19)" rx="2" ry="2" />
<text  x="393.40" y="383.5" >ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (96 samples, 0.46%)</title><rect x="1048.0" y="277" width="5.4" height="15.0" fill="rgb(210,35,21)" rx="2" ry="2" />
<text  x="1050.96" y="287.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (2 samples, 0.01%)</title><rect x="26.5" y="293" width="0.2" height="15.0" fill="rgb(212,96,1)" rx="2" ry="2" />
<text  x="29.54" y="303.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (62 samples, 0.30%)</title><rect x="1039.1" y="261" width="3.5" height="15.0" fill="rgb(216,42,54)" rx="2" ry="2" />
<text  x="1042.09" y="271.5" ></text>
</g>
<g >
<title>read_tsc (8 samples, 0.04%)</title><rect x="214.0" y="373" width="0.5" height="15.0" fill="rgb(254,158,49)" rx="2" ry="2" />
<text  x="217.03" y="383.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (71 samples, 0.34%)</title><rect x="1039.1" y="325" width="4.0" height="15.0" fill="rgb(226,140,52)" rx="2" ry="2" />
<text  x="1042.09" y="335.5" ></text>
</g>
<g >
<title>perf_mmap__push (48 samples, 0.23%)</title><rect x="55.3" y="453" width="2.7" height="15.0" fill="rgb(205,57,53)" rx="2" ry="2" />
<text  x="58.33" y="463.5" ></text>
</g>
<g >
<title>DynArrayGet (7 samples, 0.03%)</title><rect x="1180.1" y="501" width="0.4" height="15.0" fill="rgb(250,63,10)" rx="2" ry="2" />
<text  x="1183.12" y="511.5" ></text>
</g>
<g >
<title>ktime_get (2 samples, 0.01%)</title><rect x="213.9" y="373" width="0.1" height="15.0" fill="rgb(217,176,17)" rx="2" ry="2" />
<text  x="216.92" y="383.5" ></text>
</g>
<g >
<title>NaClLog (3 samples, 0.01%)</title><rect x="804.1" y="469" width="0.1" height="15.0" fill="rgb(254,217,6)" rx="2" ry="2" />
<text  x="807.06" y="479.5" ></text>
</g>
<g >
<title>generic_write_end (5 samples, 0.02%)</title><rect x="57.6" y="149" width="0.3" height="15.0" fill="rgb(252,42,7)" rx="2" ry="2" />
<text  x="60.65" y="159.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (11 samples, 0.05%)</title><rect x="185.7" y="325" width="0.6" height="15.0" fill="rgb(222,146,52)" rx="2" ry="2" />
<text  x="188.69" y="335.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (54 samples, 0.26%)</title><rect x="201.0" y="309" width="3.1" height="15.0" fill="rgb(246,198,28)" rx="2" ry="2" />
<text  x="204.05" y="319.5" ></text>
</g>
<g >
<title>[sel_ldr] (16,182 samples, 77.42%)</title><rect x="231.8" y="517" width="913.6" height="15.0" fill="rgb(212,140,37)" rx="2" ry="2" />
<text  x="234.82" y="527.5" >[sel_ldr]</text>
</g>
<g >
<title>try_to_release_page (2 samples, 0.01%)</title><rect x="1187.1" y="373" width="0.1" height="15.0" fill="rgb(210,91,45)" rx="2" ry="2" />
<text  x="1190.06" y="383.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (8 samples, 0.04%)</title><rect x="1182.3" y="501" width="0.5" height="15.0" fill="rgb(206,191,24)" rx="2" ry="2" />
<text  x="1185.32" y="511.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (612 samples, 2.93%)</title><rect x="890.9" y="405" width="34.6" height="15.0" fill="rgb(217,140,14)" rx="2" ry="2" />
<text  x="893.95" y="415.5" >&lt;d..</text>
</g>
<g >
<title>__d_free (2 samples, 0.01%)</title><rect x="116.0" y="261" width="0.1" height="15.0" fill="rgb(229,227,39)" rx="2" ry="2" />
<text  x="118.97" y="271.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (2 samples, 0.01%)</title><rect x="297.8" y="149" width="0.1" height="15.0" fill="rgb(207,95,15)" rx="2" ry="2" />
<text  x="300.82" y="159.5" ></text>
</g>
<g >
<title>timekeeping_max_deferment (2 samples, 0.01%)</title><rect x="193.3" y="309" width="0.1" height="15.0" fill="rgb(238,195,45)" rx="2" ry="2" />
<text  x="196.31" y="319.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="297.8" y="229" width="0.1" height="15.0" fill="rgb(219,23,45)" rx="2" ry="2" />
<text  x="300.82" y="239.5" ></text>
</g>
<g >
<title>mpage_submit_page (3 samples, 0.01%)</title><rect x="33.7" y="293" width="0.2" height="15.0" fill="rgb(245,179,40)" rx="2" ry="2" />
<text  x="36.71" y="303.5" ></text>
</g>
<g >
<title>kcompactd (4 samples, 0.02%)</title><rect x="65.6" y="485" width="0.2" height="15.0" fill="rgb(253,227,49)" rx="2" ry="2" />
<text  x="68.55" y="495.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (28 samples, 0.13%)</title><rect x="227.2" y="501" width="1.6" height="15.0" fill="rgb(216,2,21)" rx="2" ry="2" />
<text  x="230.19" y="511.5" ></text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.01%)</title><rect x="88.8" y="325" width="0.1" height="15.0" fill="rgb(216,80,13)" rx="2" ry="2" />
<text  x="91.76" y="335.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.01%)</title><rect x="297.8" y="181" width="0.1" height="15.0" fill="rgb(224,133,10)" rx="2" ry="2" />
<text  x="300.82" y="191.5" ></text>
</g>
<g >
<title>__schedule (7 samples, 0.03%)</title><rect x="19.5" y="437" width="0.4" height="15.0" fill="rgb(222,139,12)" rx="2" ry="2" />
<text  x="22.54" y="447.5" ></text>
</g>
<g >
<title>rest_init (366 samples, 1.75%)</title><rect x="78.1" y="437" width="20.6" height="15.0" fill="rgb(245,83,18)" rx="2" ry="2" />
<text  x="81.09" y="447.5" ></text>
</g>
<g >
<title>__update_idle_core (2 samples, 0.01%)</title><rect x="28.0" y="357" width="0.1" height="15.0" fill="rgb(232,99,40)" rx="2" ry="2" />
<text  x="30.95" y="367.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (19 samples, 0.09%)</title><rect x="739.6" y="341" width="1.1" height="15.0" fill="rgb(234,204,42)" rx="2" ry="2" />
<text  x="742.65" y="351.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (16 samples, 0.08%)</title><rect x="26.9" y="389" width="0.9" height="15.0" fill="rgb(234,138,10)" rx="2" ry="2" />
<text  x="29.94" y="399.5" ></text>
</g>
<g >
<title>newidle_balance (30 samples, 0.14%)</title><rect x="49.0" y="341" width="1.6" height="15.0" fill="rgb(219,56,1)" rx="2" ry="2" />
<text  x="51.96" y="351.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (16 samples, 0.08%)</title><rect x="192.4" y="293" width="0.9" height="15.0" fill="rgb(249,2,21)" rx="2" ry="2" />
<text  x="195.41" y="303.5" ></text>
</g>
<g >
<title>start_secondary (110 samples, 0.53%)</title><rect x="33.9" y="501" width="6.2" height="15.0" fill="rgb(227,39,18)" rx="2" ry="2" />
<text  x="36.94" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (170 samples, 0.81%)</title><rect x="1028.3" y="325" width="9.6" height="15.0" fill="rgb(213,15,35)" rx="2" ry="2" />
<text  x="1031.31" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (433 samples, 2.07%)</title><rect x="975.4" y="373" width="24.4" height="15.0" fill="rgb(213,206,40)" rx="2" ry="2" />
<text  x="978.35" y="383.5" >c..</text>
</g>
<g >
<title>cpuidle_governor_latency_req (2 samples, 0.01%)</title><rect x="25.5" y="341" width="0.1" height="15.0" fill="rgb(216,65,21)" rx="2" ry="2" />
<text  x="28.47" y="351.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (4 samples, 0.02%)</title><rect x="1189.2" y="341" width="0.2" height="15.0" fill="rgb(233,89,38)" rx="2" ry="2" />
<text  x="1192.21" y="351.5" ></text>
</g>
<g >
<title>cpuidle_enter (9 samples, 0.04%)</title><rect x="1189.2" y="373" width="0.5" height="15.0" fill="rgb(239,207,47)" rx="2" ry="2" />
<text  x="1192.15" y="383.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.01%)</title><rect x="891.5" y="341" width="0.1" height="15.0" fill="rgb(247,40,54)" rx="2" ry="2" />
<text  x="894.46" y="351.5" ></text>
</g>
<g >
<title>do_idle (209 samples, 1.00%)</title><rect x="66.3" y="469" width="11.8" height="15.0" fill="rgb(207,38,29)" rx="2" ry="2" />
<text  x="69.29" y="479.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write_guard (6 samples, 0.03%)</title><rect x="1069.3" y="389" width="0.3" height="15.0" fill="rgb(243,173,17)" rx="2" ry="2" />
<text  x="1072.30" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (19 samples, 0.09%)</title><rect x="910.1" y="293" width="1.1" height="15.0" fill="rgb(246,191,17)" rx="2" ry="2" />
<text  x="913.14" y="303.5" ></text>
</g>
<g >
<title>ext4_finish_bio (3 samples, 0.01%)</title><rect x="66.1" y="405" width="0.1" height="15.0" fill="rgb(246,2,22)" rx="2" ry="2" />
<text  x="69.06" y="415.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (2 samples, 0.01%)</title><rect x="297.8" y="277" width="0.1" height="15.0" fill="rgb(226,29,2)" rx="2" ry="2" />
<text  x="300.82" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (10 samples, 0.05%)</title><rect x="56.9" y="101" width="0.5" height="15.0" fill="rgb(238,223,21)" rx="2" ry="2" />
<text  x="59.86" y="111.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (118 samples, 0.56%)</title><rect x="891.6" y="357" width="6.7" height="15.0" fill="rgb(240,27,11)" rx="2" ry="2" />
<text  x="894.63" y="367.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (2 samples, 0.01%)</title><rect x="1059.2" y="325" width="0.1" height="15.0" fill="rgb(225,209,9)" rx="2" ry="2" />
<text  x="1062.19" y="335.5" ></text>
</g>
<g >
<title>asm_common_interrupt (3 samples, 0.01%)</title><rect x="115.8" y="405" width="0.2" height="15.0" fill="rgb(212,224,50)" rx="2" ry="2" />
<text  x="118.80" y="415.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.01%)</title><rect x="46.5" y="341" width="0.1" height="15.0" fill="rgb(222,19,27)" rx="2" ry="2" />
<text  x="49.53" y="351.5" ></text>
</g>
<g >
<title>cpuidle_enter (116 samples, 0.55%)</title><rect x="12.7" y="437" width="6.5" height="15.0" fill="rgb(219,59,49)" rx="2" ry="2" />
<text  x="15.65" y="447.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (83 samples, 0.40%)</title><rect x="256.0" y="469" width="4.7" height="15.0" fill="rgb(220,121,21)" rx="2" ry="2" />
<text  x="259.04" y="479.5" ></text>
</g>
<g >
<title>__schedule (37 samples, 0.18%)</title><rect x="150.3" y="437" width="2.1" height="15.0" fill="rgb(205,204,7)" rx="2" ry="2" />
<text  x="153.29" y="447.5" ></text>
</g>
<g >
<title>get_typical_interval (9 samples, 0.04%)</title><rect x="188.9" y="341" width="0.5" height="15.0" fill="rgb(238,68,51)" rx="2" ry="2" />
<text  x="191.91" y="351.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 0.31%)</title><rect x="51.3" y="181" width="3.6" height="15.0" fill="rgb(213,106,0)" rx="2" ry="2" />
<text  x="54.33" y="191.5" ></text>
</g>
<g >
<title>lru_cache_add (3 samples, 0.01%)</title><rect x="56.7" y="101" width="0.2" height="15.0" fill="rgb(238,112,22)" rx="2" ry="2" />
<text  x="59.69" y="111.5" ></text>
</g>
<g >
<title>poll_idle (164 samples, 0.78%)</title><rect x="79.7" y="341" width="9.2" height="15.0" fill="rgb(252,160,50)" rx="2" ry="2" />
<text  x="82.67" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="297.8" y="325" width="0.1" height="15.0" fill="rgb(205,52,50)" rx="2" ry="2" />
<text  x="300.82" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="47.4" y="309" width="0.1" height="15.0" fill="rgb(236,223,32)" rx="2" ry="2" />
<text  x="50.43" y="319.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (8 samples, 0.04%)</title><rect x="849.3" y="453" width="0.5" height="15.0" fill="rgb(243,148,18)" rx="2" ry="2" />
<text  x="852.34" y="463.5" ></text>
</g>
<g >
<title>generic_exec_single (5 samples, 0.02%)</title><rect x="151.5" y="341" width="0.3" height="15.0" fill="rgb(238,175,46)" rx="2" ry="2" />
<text  x="154.54" y="351.5" ></text>
</g>
<g >
<title>core::cmp::min (4 samples, 0.02%)</title><rect x="1071.5" y="389" width="0.2" height="15.0" fill="rgb(211,75,13)" rx="2" ry="2" />
<text  x="1074.50" y="399.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (6 samples, 0.03%)</title><rect x="975.0" y="405" width="0.4" height="15.0" fill="rgb(216,229,21)" rx="2" ry="2" />
<text  x="978.01" y="415.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (118 samples, 0.56%)</title><rect x="891.6" y="341" width="6.7" height="15.0" fill="rgb(215,63,26)" rx="2" ry="2" />
<text  x="894.63" y="351.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 0.01%)</title><rect x="116.0" y="341" width="0.1" height="15.0" fill="rgb(237,215,31)" rx="2" ry="2" />
<text  x="118.97" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (10 samples, 0.05%)</title><rect x="1178.7" y="453" width="0.6" height="15.0" fill="rgb(225,27,28)" rx="2" ry="2" />
<text  x="1181.71" y="463.5" ></text>
</g>
<g >
<title>exc_page_fault (10 samples, 0.05%)</title><rect x="1178.7" y="485" width="0.6" height="15.0" fill="rgb(218,160,28)" rx="2" ry="2" />
<text  x="1181.71" y="495.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (390 samples, 1.87%)</title><rect x="1122.4" y="389" width="22.0" height="15.0" fill="rgb(222,62,1)" rx="2" ry="2" />
<text  x="1125.42" y="399.5" >r..</text>
</g>
<g >
<title>__run_hrtimer (2 samples, 0.01%)</title><rect x="66.5" y="309" width="0.1" height="15.0" fill="rgb(220,139,11)" rx="2" ry="2" />
<text  x="69.46" y="319.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (17 samples, 0.08%)</title><rect x="1119.4" y="341" width="0.9" height="15.0" fill="rgb(253,101,2)" rx="2" ry="2" />
<text  x="1122.37" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (16 samples, 0.08%)</title><rect x="1061.3" y="293" width="0.9" height="15.0" fill="rgb(241,9,15)" rx="2" ry="2" />
<text  x="1064.28" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_write (2 samples, 0.01%)</title><rect x="1186.8" y="485" width="0.1" height="15.0" fill="rgb(211,224,49)" rx="2" ry="2" />
<text  x="1189.78" y="495.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (66 samples, 0.32%)</title><rect x="194.2" y="389" width="3.7" height="15.0" fill="rgb(217,153,39)" rx="2" ry="2" />
<text  x="197.22" y="399.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (8 samples, 0.04%)</title><rect x="156.4" y="293" width="0.4" height="15.0" fill="rgb(222,141,15)" rx="2" ry="2" />
<text  x="159.39" y="303.5" ></text>
</g>
<g >
<title>update_blocked_averages (4 samples, 0.02%)</title><rect x="156.6" y="229" width="0.2" height="15.0" fill="rgb(224,205,33)" rx="2" ry="2" />
<text  x="159.62" y="239.5" ></text>
</g>
<g >
<title>HandleStackContext (7 samples, 0.03%)</title><rect x="232.7" y="501" width="0.4" height="15.0" fill="rgb(224,10,54)" rx="2" ry="2" />
<text  x="235.66" y="511.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.01%)</title><rect x="156.1" y="181" width="0.1" height="15.0" fill="rgb(206,20,10)" rx="2" ry="2" />
<text  x="159.05" y="191.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (5 samples, 0.02%)</title><rect x="234.4" y="501" width="0.2" height="15.0" fill="rgb(216,19,10)" rx="2" ry="2" />
<text  x="237.36" y="511.5" ></text>
</g>
<g >
<title>ext4_bio_write_page (2 samples, 0.01%)</title><rect x="33.8" y="277" width="0.1" height="15.0" fill="rgb(243,14,53)" rx="2" ry="2" />
<text  x="36.77" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.08%)</title><rect x="1070.6" y="389" width="0.9" height="15.0" fill="rgb(213,19,19)" rx="2" ry="2" />
<text  x="1073.59" y="399.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (124 samples, 0.59%)</title><rect x="286.6" y="437" width="7.0" height="15.0" fill="rgb(208,48,12)" rx="2" ry="2" />
<text  x="289.58" y="447.5" ></text>
</g>
<g >
<title>record__mmap_read_all (48 samples, 0.23%)</title><rect x="55.3" y="485" width="2.7" height="15.0" fill="rgb(240,180,26)" rx="2" ry="2" />
<text  x="58.33" y="495.5" ></text>
</g>
<g >
<title>do_idle (15 samples, 0.07%)</title><rect x="1189.2" y="405" width="0.8" height="15.0" fill="rgb(239,197,53)" rx="2" ry="2" />
<text  x="1192.15" y="415.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.01%)</title><rect x="156.1" y="213" width="0.1" height="15.0" fill="rgb(244,184,35)" rx="2" ry="2" />
<text  x="159.05" y="223.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (45 samples, 0.22%)</title><rect x="94.6" y="325" width="2.5" height="15.0" fill="rgb(238,164,13)" rx="2" ry="2" />
<text  x="97.57" y="335.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (16 samples, 0.08%)</title><rect x="1070.6" y="373" width="0.9" height="15.0" fill="rgb(254,136,48)" rx="2" ry="2" />
<text  x="1073.59" y="383.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (2 samples, 0.01%)</title><rect x="212.3" y="389" width="0.2" height="15.0" fill="rgb(247,102,4)" rx="2" ry="2" />
<text  x="215.34" y="399.5" ></text>
</g>
<g >
<title>poll_idle (4 samples, 0.02%)</title><rect x="18.8" y="405" width="0.2" height="15.0" fill="rgb(221,66,11)" rx="2" ry="2" />
<text  x="21.81" y="415.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (203 samples, 0.97%)</title><rect x="66.3" y="453" width="11.5" height="15.0" fill="rgb(242,156,24)" rx="2" ry="2" />
<text  x="69.34" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="1186.3" y="501" width="0.1" height="15.0" fill="rgb(249,53,36)" rx="2" ry="2" />
<text  x="1189.33" y="511.5" ></text>
</g>
<g >
<title>menu_select (39 samples, 0.19%)</title><rect x="89.8" y="357" width="2.2" height="15.0" fill="rgb(207,66,14)" rx="2" ry="2" />
<text  x="92.77" y="367.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (7 samples, 0.03%)</title><rect x="228.4" y="485" width="0.4" height="15.0" fill="rgb(251,190,7)" rx="2" ry="2" />
<text  x="231.37" y="495.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (6 samples, 0.03%)</title><rect x="156.0" y="293" width="0.3" height="15.0" fill="rgb(219,55,28)" rx="2" ry="2" />
<text  x="159.00" y="303.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (7 samples, 0.03%)</title><rect x="1184.5" y="501" width="0.4" height="15.0" fill="rgb(224,114,2)" rx="2" ry="2" />
<text  x="1187.52" y="511.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (83 samples, 0.40%)</title><rect x="915.2" y="341" width="4.7" height="15.0" fill="rgb(250,111,36)" rx="2" ry="2" />
<text  x="918.23" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (47 samples, 0.22%)</title><rect x="1029.7" y="309" width="2.6" height="15.0" fill="rgb(218,29,29)" rx="2" ry="2" />
<text  x="1032.66" y="319.5" ></text>
</g>
<g >
<title>__update_blocked_fair (4 samples, 0.02%)</title><rect x="156.6" y="213" width="0.2" height="15.0" fill="rgb(232,212,23)" rx="2" ry="2" />
<text  x="159.62" y="223.5" ></text>
</g>
<g >
<title>NaClSysRead (8,583 samples, 41.07%)</title><rect x="297.9" y="469" width="484.6" height="15.0" fill="rgb(239,148,49)" rx="2" ry="2" />
<text  x="300.93" y="479.5" >NaClSysRead</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (6 samples, 0.03%)</title><rect x="883.3" y="421" width="0.4" height="15.0" fill="rgb(238,5,36)" rx="2" ry="2" />
<text  x="886.33" y="431.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.01%)</title><rect x="297.8" y="197" width="0.1" height="15.0" fill="rgb(219,70,34)" rx="2" ry="2" />
<text  x="300.82" y="207.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (705 samples, 3.37%)</title><rect x="678.0" y="341" width="39.8" height="15.0" fill="rgb(220,110,10)" rx="2" ry="2" />
<text  x="680.99" y="351.5" >cor..</text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (133 samples, 0.64%)</title><rect x="1104.6" y="373" width="7.5" height="15.0" fill="rgb(227,202,23)" rx="2" ry="2" />
<text  x="1107.64" y="383.5" ></text>
</g>
<g >
<title>wb_writeback (5 samples, 0.02%)</title><rect x="33.7" y="421" width="0.2" height="15.0" fill="rgb(209,43,29)" rx="2" ry="2" />
<text  x="36.66" y="431.5" ></text>
</g>
<g >
<title>do_shrink_slab (4 samples, 0.02%)</title><rect x="65.8" y="389" width="0.3" height="15.0" fill="rgb(218,153,42)" rx="2" ry="2" />
<text  x="68.84" y="399.5" ></text>
</g>
<g >
<title>cpuidle_reflect (4 samples, 0.02%)</title><rect x="194.0" y="389" width="0.2" height="15.0" fill="rgb(235,159,44)" rx="2" ry="2" />
<text  x="196.99" y="399.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (339 samples, 1.62%)</title><rect x="12.6" y="517" width="19.1" height="15.0" fill="rgb(229,24,54)" rx="2" ry="2" />
<text  x="15.60" y="527.5" ></text>
</g>
<g >
<title>menu_select (24 samples, 0.11%)</title><rect x="25.4" y="357" width="1.3" height="15.0" fill="rgb(254,208,2)" rx="2" ry="2" />
<text  x="28.36" y="367.5" ></text>
</g>
<g >
<title>llist_add_batch (6 samples, 0.03%)</title><rect x="50.3" y="277" width="0.3" height="15.0" fill="rgb(214,125,49)" rx="2" ry="2" />
<text  x="53.25" y="287.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (9 samples, 0.04%)</title><rect x="968.2" y="373" width="0.5" height="15.0" fill="rgb(245,51,5)" rx="2" ry="2" />
<text  x="971.18" y="383.5" ></text>
</g>
<g >
<title>do_idle (191 samples, 0.91%)</title><rect x="40.1" y="405" width="10.8" height="15.0" fill="rgb(207,12,9)" rx="2" ry="2" />
<text  x="43.15" y="415.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (29 samples, 0.14%)</title><rect x="150.5" y="389" width="1.6" height="15.0" fill="rgb(214,89,27)" rx="2" ry="2" />
<text  x="153.46" y="399.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (36 samples, 0.17%)</title><rect x="1035.9" y="293" width="2.0" height="15.0" fill="rgb(216,71,4)" rx="2" ry="2" />
<text  x="1038.87" y="303.5" ></text>
</g>
<g >
<title>llist_add_batch (9 samples, 0.04%)</title><rect x="96.6" y="277" width="0.5" height="15.0" fill="rgb(237,215,11)" rx="2" ry="2" />
<text  x="99.60" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.01%)</title><rect x="33.1" y="485" width="0.2" height="15.0" fill="rgb(216,43,14)" rx="2" ry="2" />
<text  x="36.15" y="495.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (262 samples, 1.25%)</title><rect x="1028.3" y="373" width="14.8" height="15.0" fill="rgb(236,85,12)" rx="2" ry="2" />
<text  x="1031.31" y="383.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (3 samples, 0.01%)</title><rect x="891.5" y="373" width="0.1" height="15.0" fill="rgb(213,83,44)" rx="2" ry="2" />
<text  x="894.46" y="383.5" ></text>
</g>
<g >
<title>read_tsc (5 samples, 0.02%)</title><rect x="97.6" y="373" width="0.3" height="15.0" fill="rgb(240,12,7)" rx="2" ry="2" />
<text  x="100.62" y="383.5" ></text>
</g>
<g >
<title>smp_call_function_single (64 samples, 0.31%)</title><rect x="51.3" y="293" width="3.6" height="15.0" fill="rgb(252,78,19)" rx="2" ry="2" />
<text  x="54.33" y="303.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (16,132 samples, 77.18%)</title><rect x="234.6" y="501" width="910.8" height="15.0" fill="rgb(224,209,8)" rx="2" ry="2" />
<text  x="237.64" y="511.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.06%)</title><rect x="1063.1" y="277" width="0.7" height="15.0" fill="rgb(241,18,1)" rx="2" ry="2" />
<text  x="1066.09" y="287.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.01%)</title><rect x="25.2" y="325" width="0.1" height="15.0" fill="rgb(207,222,9)" rx="2" ry="2" />
<text  x="28.19" y="335.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.01%)</title><rect x="77.8" y="437" width="0.2" height="15.0" fill="rgb(210,93,0)" rx="2" ry="2" />
<text  x="80.80" y="447.5" ></text>
</g>
<g >
<title>__writeback_single_inode (5 samples, 0.02%)</title><rect x="33.7" y="373" width="0.2" height="15.0" fill="rgb(220,131,38)" rx="2" ry="2" />
<text  x="36.66" y="383.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (2 samples, 0.01%)</title><rect x="297.6" y="437" width="0.2" height="15.0" fill="rgb(250,204,10)" rx="2" ry="2" />
<text  x="300.65" y="447.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (4 samples, 0.02%)</title><rect x="55.1" y="389" width="0.2" height="15.0" fill="rgb(245,184,38)" rx="2" ry="2" />
<text  x="58.05" y="399.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.05%)</title><rect x="1031.5" y="293" width="0.6" height="15.0" fill="rgb(233,151,9)" rx="2" ry="2" />
<text  x="1034.47" y="303.5" ></text>
</g>
<g >
<title>worker_thread (7 samples, 0.03%)</title><rect x="33.5" y="485" width="0.4" height="15.0" fill="rgb(230,89,22)" rx="2" ry="2" />
<text  x="36.54" y="495.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.01%)</title><rect x="49.6" y="293" width="0.1" height="15.0" fill="rgb(216,177,7)" rx="2" ry="2" />
<text  x="52.63" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_write (47 samples, 0.22%)</title><rect x="55.4" y="341" width="2.6" height="15.0" fill="rgb(211,13,17)" rx="2" ry="2" />
<text  x="58.39" y="351.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (120 samples, 0.57%)</title><rect x="12.6" y="453" width="6.8" height="15.0" fill="rgb(205,67,38)" rx="2" ry="2" />
<text  x="15.60" y="463.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 0.31%)</title><rect x="51.3" y="341" width="3.6" height="15.0" fill="rgb(218,92,46)" rx="2" ry="2" />
<text  x="54.33" y="351.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (62 samples, 0.30%)</title><rect x="1039.1" y="293" width="3.5" height="15.0" fill="rgb(235,118,21)" rx="2" ry="2" />
<text  x="1042.09" y="303.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (8 samples, 0.04%)</title><rect x="739.2" y="309" width="0.4" height="15.0" fill="rgb(223,14,23)" rx="2" ry="2" />
<text  x="742.19" y="319.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (182 samples, 0.87%)</title><rect x="1112.1" y="389" width="10.3" height="15.0" fill="rgb(221,41,31)" rx="2" ry="2" />
<text  x="1115.15" y="399.5" ></text>
</g>
<g >
<title>NaClSysMunmap (2 samples, 0.01%)</title><rect x="297.8" y="469" width="0.1" height="15.0" fill="rgb(206,90,37)" rx="2" ry="2" />
<text  x="300.82" y="479.5" ></text>
</g>
<g >
<title>ext4_do_flush_completed_IO.isra.0 (2 samples, 0.01%)</title><rect x="33.5" y="437" width="0.2" height="15.0" fill="rgb(240,58,11)" rx="2" ry="2" />
<text  x="36.54" y="447.5" ></text>
</g>
<g >
<title>newidle_balance (208 samples, 1.00%)</title><rect x="198.8" y="341" width="11.8" height="15.0" fill="rgb(214,81,13)" rx="2" ry="2" />
<text  x="201.85" y="351.5" ></text>
</g>
<g >
<title>schedule_idle (59 samples, 0.28%)</title><rect x="94.0" y="389" width="3.3" height="15.0" fill="rgb(230,25,34)" rx="2" ry="2" />
<text  x="97.01" y="399.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (7 samples, 0.03%)</title><rect x="228.4" y="453" width="0.4" height="15.0" fill="rgb(234,215,25)" rx="2" ry="2" />
<text  x="231.37" y="463.5" ></text>
</g>
<g >
<title>get_typical_interval (3 samples, 0.01%)</title><rect x="47.0" y="341" width="0.1" height="15.0" fill="rgb(238,61,54)" rx="2" ry="2" />
<text  x="49.98" y="351.5" ></text>
</g>
<g >
<title>isolate_freepages_block (4 samples, 0.02%)</title><rect x="65.6" y="373" width="0.2" height="15.0" fill="rgb(210,127,1)" rx="2" ry="2" />
<text  x="68.55" y="383.5" ></text>
</g>
<g >
<title>llist_reverse_order (5 samples, 0.02%)</title><rect x="149.4" y="437" width="0.3" height="15.0" fill="rgb(232,147,27)" rx="2" ry="2" />
<text  x="152.39" y="447.5" ></text>
</g>
<g >
<title>osq_lock (2 samples, 0.01%)</title><rect x="297.6" y="261" width="0.2" height="15.0" fill="rgb(234,90,28)" rx="2" ry="2" />
<text  x="300.65" y="271.5" ></text>
</g>
<g >
<title>idle_cpu (7 samples, 0.03%)</title><rect x="203.7" y="293" width="0.4" height="15.0" fill="rgb(252,200,23)" rx="2" ry="2" />
<text  x="206.70" y="303.5" ></text>
</g>
<g >
<title>cpu_startup_entry (208 samples, 1.00%)</title><rect x="20.0" y="421" width="11.7" height="15.0" fill="rgb(208,218,43)" rx="2" ry="2" />
<text  x="22.99" y="431.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (85 samples, 0.41%)</title><rect x="1054.4" y="293" width="4.8" height="15.0" fill="rgb(233,11,12)" rx="2" ry="2" />
<text  x="1057.39" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (12 samples, 0.06%)</title><rect x="1038.4" y="309" width="0.7" height="15.0" fill="rgb(253,69,26)" rx="2" ry="2" />
<text  x="1041.41" y="319.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 0.31%)</title><rect x="51.3" y="229" width="3.6" height="15.0" fill="rgb(249,7,51)" rx="2" ry="2" />
<text  x="54.33" y="239.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (559 samples, 2.67%)</title><rect x="155.5" y="357" width="31.5" height="15.0" fill="rgb(223,24,52)" rx="2" ry="2" />
<text  x="158.49" y="367.5" >cp..</text>
</g>
<g >
<title>__clone (4 samples, 0.02%)</title><rect x="1185.2" y="517" width="0.2" height="15.0" fill="rgb(236,115,45)" rx="2" ry="2" />
<text  x="1188.20" y="527.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (192 samples, 0.92%)</title><rect x="66.7" y="405" width="10.9" height="15.0" fill="rgb(209,42,10)" rx="2" ry="2" />
<text  x="69.74" y="415.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (3 samples, 0.01%)</title><rect x="96.4" y="261" width="0.2" height="15.0" fill="rgb(247,151,27)" rx="2" ry="2" />
<text  x="99.44" y="271.5" ></text>
</g>
<g >
<title>do_idle (1,090 samples, 5.22%)</title><rect x="153.1" y="405" width="61.6" height="15.0" fill="rgb(250,17,16)" rx="2" ry="2" />
<text  x="156.12" y="415.5" >do_idle</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="65.2" y="517" width="0.4" height="15.0" fill="rgb(216,172,20)" rx="2" ry="2" />
<text  x="68.21" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (93 samples, 0.44%)</title><rect x="1064.0" y="373" width="5.3" height="15.0" fill="rgb(222,22,42)" rx="2" ry="2" />
<text  x="1067.05" y="383.5" ></text>
</g>
<g >
<title>get_typical_interval (3 samples, 0.01%)</title><rect x="148.1" y="405" width="0.2" height="15.0" fill="rgb(233,88,24)" rx="2" ry="2" />
<text  x="151.09" y="415.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.02%)</title><rect x="149.1" y="437" width="0.3" height="15.0" fill="rgb(222,0,22)" rx="2" ry="2" />
<text  x="152.11" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (5 samples, 0.02%)</title><rect x="1026.8" y="309" width="0.3" height="15.0" fill="rgb(250,129,33)" rx="2" ry="2" />
<text  x="1029.84" y="319.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (16 samples, 0.08%)</title><rect x="29.5" y="293" width="0.9" height="15.0" fill="rgb(254,1,3)" rx="2" ry="2" />
<text  x="32.48" y="303.5" ></text>
</g>
<g >
<title>shrink_slab (4 samples, 0.02%)</title><rect x="65.8" y="421" width="0.3" height="15.0" fill="rgb(244,51,48)" rx="2" ry="2" />
<text  x="68.84" y="431.5" ></text>
</g>
<g >
<title>compact_zone (5 samples, 0.02%)</title><rect x="114.4" y="453" width="0.3" height="15.0" fill="rgb(219,132,54)" rx="2" ry="2" />
<text  x="117.39" y="463.5" ></text>
</g>
<g >
<title>wake_up_process (2 samples, 0.01%)</title><rect x="66.5" y="277" width="0.1" height="15.0" fill="rgb(236,222,0)" rx="2" ry="2" />
<text  x="69.46" y="287.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,124 samples, 5.38%)</title><rect x="153.0" y="421" width="63.5" height="15.0" fill="rgb(228,209,18)" rx="2" ry="2" />
<text  x="156.00" y="431.5" >cpu_st..</text>
</g>
<g >
<title>[libc.so.6] (6 samples, 0.03%)</title><rect x="1186.4" y="501" width="0.4" height="15.0" fill="rgb(242,110,15)" rx="2" ry="2" />
<text  x="1189.44" y="511.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (2 samples, 0.01%)</title><rect x="66.5" y="293" width="0.1" height="15.0" fill="rgb(246,179,13)" rx="2" ry="2" />
<text  x="69.46" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (8 samples, 0.04%)</title><rect x="97.5" y="389" width="0.4" height="15.0" fill="rgb(238,170,41)" rx="2" ry="2" />
<text  x="100.45" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (9 samples, 0.04%)</title><rect x="1189.2" y="357" width="0.5" height="15.0" fill="rgb(212,177,24)" rx="2" ry="2" />
<text  x="1192.15" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (367 samples, 1.76%)</title><rect x="1043.1" y="373" width="20.7" height="15.0" fill="rgb(217,161,23)" rx="2" ry="2" />
<text  x="1046.10" y="383.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (6 samples, 0.03%)</title><rect x="79.3" y="341" width="0.4" height="15.0" fill="rgb(225,73,8)" rx="2" ry="2" />
<text  x="82.33" y="351.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (8 samples, 0.04%)</title><rect x="914.8" y="309" width="0.4" height="15.0" fill="rgb(230,91,24)" rx="2" ry="2" />
<text  x="917.77" y="319.5" ></text>
</g>
<g >
<title>[[heap]] (4 samples, 0.02%)</title><rect x="216.7" y="517" width="0.3" height="15.0" fill="rgb(229,108,2)" rx="2" ry="2" />
<text  x="219.74" y="527.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.01%)</title><rect x="204.2" y="309" width="0.1" height="15.0" fill="rgb(222,135,12)" rx="2" ry="2" />
<text  x="207.21" y="319.5" ></text>
</g>
<g >
<title>__run_hrtimer (2 samples, 0.01%)</title><rect x="33.9" y="309" width="0.2" height="15.0" fill="rgb(253,220,9)" rx="2" ry="2" />
<text  x="36.94" y="319.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (3 samples, 0.01%)</title><rect x="220.8" y="501" width="0.1" height="15.0" fill="rgb(225,7,1)" rx="2" ry="2" />
<text  x="223.75" y="511.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (575 samples, 2.75%)</title><rect x="66.3" y="517" width="32.4" height="15.0" fill="rgb(254,76,44)" rx="2" ry="2" />
<text  x="69.29" y="527.5" >se..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="116.0" y="389" width="0.1" height="15.0" fill="rgb(207,32,1)" rx="2" ry="2" />
<text  x="118.97" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (99 samples, 0.47%)</title><rect x="919.9" y="325" width="5.6" height="15.0" fill="rgb(213,25,10)" rx="2" ry="2" />
<text  x="922.91" y="335.5" ></text>
</g>
<g >
<title>_perf_ioctl (64 samples, 0.31%)</title><rect x="51.3" y="357" width="3.6" height="15.0" fill="rgb(221,198,4)" rx="2" ry="2" />
<text  x="54.33" y="367.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (10 samples, 0.05%)</title><rect x="1182.8" y="501" width="0.6" height="15.0" fill="rgb(223,96,2)" rx="2" ry="2" />
<text  x="1185.83" y="511.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (2 samples, 0.01%)</title><rect x="29.0" y="277" width="0.1" height="15.0" fill="rgb(244,33,22)" rx="2" ry="2" />
<text  x="31.97" y="287.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (75 samples, 0.36%)</title><rect x="904.7" y="325" width="4.3" height="15.0" fill="rgb(238,227,34)" rx="2" ry="2" />
<text  x="907.72" y="335.5" ></text>
</g>
<g >
<title>native_sched_clock (3 samples, 0.01%)</title><rect x="213.5" y="341" width="0.1" height="15.0" fill="rgb(226,9,27)" rx="2" ry="2" />
<text  x="216.47" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="26.1" y="309" width="0.2" height="15.0" fill="rgb(239,173,40)" rx="2" ry="2" />
<text  x="29.15" y="319.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.01%)</title><rect x="97.2" y="325" width="0.1" height="15.0" fill="rgb(219,135,0)" rx="2" ry="2" />
<text  x="100.17" y="335.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (4 samples, 0.02%)</title><rect x="56.5" y="101" width="0.2" height="15.0" fill="rgb(211,63,54)" rx="2" ry="2" />
<text  x="59.46" y="111.5" ></text>
</g>
<g >
<title>cpuidle_enter (198 samples, 0.95%)</title><rect x="66.4" y="437" width="11.2" height="15.0" fill="rgb(220,83,44)" rx="2" ry="2" />
<text  x="69.40" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (2 samples, 0.01%)</title><rect x="297.8" y="389" width="0.1" height="15.0" fill="rgb(208,135,39)" rx="2" ry="2" />
<text  x="300.82" y="399.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (46 samples, 0.22%)</title><rect x="55.4" y="229" width="2.6" height="15.0" fill="rgb(231,28,38)" rx="2" ry="2" />
<text  x="58.39" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="66.5" y="357" width="0.1" height="15.0" fill="rgb(225,131,25)" rx="2" ry="2" />
<text  x="69.46" y="367.5" ></text>
</g>
<g >
<title>do_mmap (2 samples, 0.01%)</title><rect x="297.8" y="261" width="0.1" height="15.0" fill="rgb(243,16,29)" rx="2" ry="2" />
<text  x="300.82" y="271.5" ></text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.01%)</title><rect x="31.1" y="357" width="0.1" height="15.0" fill="rgb(235,34,7)" rx="2" ry="2" />
<text  x="34.06" y="367.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (366 samples, 1.75%)</title><rect x="78.1" y="485" width="20.6" height="15.0" fill="rgb(207,33,16)" rx="2" ry="2" />
<text  x="81.09" y="495.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (10 samples, 0.05%)</title><rect x="1178.7" y="501" width="0.6" height="15.0" fill="rgb(252,142,51)" rx="2" ry="2" />
<text  x="1181.71" y="511.5" ></text>
</g>
<g >
<title>native_sched_clock (8 samples, 0.04%)</title><rect x="211.0" y="325" width="0.5" height="15.0" fill="rgb(223,0,3)" rx="2" ry="2" />
<text  x="214.04" y="335.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (813 samples, 3.89%)</title><rect x="736.6" y="373" width="45.9" height="15.0" fill="rgb(249,229,11)" rx="2" ry="2" />
<text  x="739.60" y="383.5" >ring..</text>
</g>
<g >
<title>shrink_node (5 samples, 0.02%)</title><rect x="65.8" y="453" width="0.3" height="15.0" fill="rgb(241,97,10)" rx="2" ry="2" />
<text  x="68.78" y="463.5" ></text>
</g>
<g >
<title>__run_hrtimer (3 samples, 0.01%)</title><rect x="156.1" y="245" width="0.1" height="15.0" fill="rgb(238,148,48)" rx="2" ry="2" />
<text  x="159.05" y="255.5" ></text>
</g>
<g >
<title>rcu_core_si (2 samples, 0.01%)</title><rect x="34.1" y="309" width="0.1" height="15.0" fill="rgb(207,50,19)" rx="2" ry="2" />
<text  x="37.05" y="319.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.01%)</title><rect x="114.2" y="469" width="0.1" height="15.0" fill="rgb(222,119,0)" rx="2" ry="2" />
<text  x="117.16" y="479.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (4 samples, 0.02%)</title><rect x="223.3" y="485" width="0.2" height="15.0" fill="rgb(234,154,46)" rx="2" ry="2" />
<text  x="226.29" y="495.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.01%)</title><rect x="1185.4" y="357" width="0.1" height="15.0" fill="rgb(205,125,34)" rx="2" ry="2" />
<text  x="1188.43" y="367.5" ></text>
</g>
<g >
<title>rcu_needs_cpu (2 samples, 0.01%)</title><rect x="91.2" y="325" width="0.1" height="15.0" fill="rgb(222,44,11)" rx="2" ry="2" />
<text  x="94.18" y="335.5" ></text>
</g>
<g >
<title>llist_add_batch (5 samples, 0.02%)</title><rect x="151.8" y="341" width="0.3" height="15.0" fill="rgb(221,166,54)" rx="2" ry="2" />
<text  x="154.82" y="351.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (6 samples, 0.03%)</title><rect x="919.3" y="261" width="0.4" height="15.0" fill="rgb(243,131,42)" rx="2" ry="2" />
<text  x="922.35" y="271.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.01%)</title><rect x="66.5" y="261" width="0.1" height="15.0" fill="rgb(232,174,27)" rx="2" ry="2" />
<text  x="69.46" y="271.5" ></text>
</g>
<g >
<title>get_typical_interval (3 samples, 0.01%)</title><rect x="25.6" y="341" width="0.2" height="15.0" fill="rgb(213,156,5)" rx="2" ry="2" />
<text  x="28.58" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (106 samples, 0.51%)</title><rect x="969.0" y="309" width="6.0" height="15.0" fill="rgb(213,130,5)" rx="2" ry="2" />
<text  x="972.03" y="319.5" ></text>
</g>
<g >
<title>proactive_compact_node (5 samples, 0.02%)</title><rect x="114.4" y="469" width="0.3" height="15.0" fill="rgb(251,98,54)" rx="2" ry="2" />
<text  x="117.39" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (7 samples, 0.03%)</title><rect x="924.0" y="277" width="0.4" height="15.0" fill="rgb(236,212,42)" rx="2" ry="2" />
<text  x="927.03" y="287.5" ></text>
</g>
<g >
<title>cpuidle_enter (187 samples, 0.89%)</title><rect x="79.2" y="373" width="10.5" height="15.0" fill="rgb(228,55,47)" rx="2" ry="2" />
<text  x="82.16" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="12.4" y="501" width="0.2" height="15.0" fill="rgb(254,218,23)" rx="2" ry="2" />
<text  x="15.43" y="511.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (27 samples, 0.13%)</title><rect x="1051.9" y="261" width="1.5" height="15.0" fill="rgb(238,161,0)" rx="2" ry="2" />
<text  x="1054.85" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (11 samples, 0.05%)</title><rect x="1062.2" y="293" width="0.6" height="15.0" fill="rgb(207,9,49)" rx="2" ry="2" />
<text  x="1065.18" y="303.5" ></text>
</g>
<g >
<title>ovl_write_iter (46 samples, 0.22%)</title><rect x="55.4" y="277" width="2.6" height="15.0" fill="rgb(214,50,13)" rx="2" ry="2" />
<text  x="58.39" y="287.5" ></text>
</g>
<g >
<title>ret_from_fork (13 samples, 0.06%)</title><rect x="65.6" y="517" width="0.7" height="15.0" fill="rgb(244,74,16)" rx="2" ry="2" />
<text  x="68.55" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.01%)</title><rect x="152.3" y="389" width="0.1" height="15.0" fill="rgb(219,70,22)" rx="2" ry="2" />
<text  x="155.27" y="399.5" ></text>
</g>
<g >
<title>dispatcher (4 samples, 0.02%)</title><rect x="1185.2" y="453" width="0.2" height="15.0" fill="rgb(214,220,27)" rx="2" ry="2" />
<text  x="1188.20" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (93 samples, 0.44%)</title><rect x="1064.0" y="357" width="5.3" height="15.0" fill="rgb(228,0,3)" rx="2" ry="2" />
<text  x="1067.05" y="367.5" ></text>
</g>
<g >
<title>rest_init (208 samples, 1.00%)</title><rect x="20.0" y="437" width="11.7" height="15.0" fill="rgb(237,114,39)" rx="2" ry="2" />
<text  x="22.99" y="447.5" ></text>
</g>
<g >
<title>cpuidle_select (3 samples, 0.01%)</title><rect x="1188.6" y="437" width="0.2" height="15.0" fill="rgb(242,8,22)" rx="2" ry="2" />
<text  x="1191.65" y="447.5" ></text>
</g>
<g >
<title>generic_exec_single (5 samples, 0.02%)</title><rect x="29.5" y="277" width="0.3" height="15.0" fill="rgb(205,205,40)" rx="2" ry="2" />
<text  x="32.48" y="287.5" ></text>
</g>
<g >
<title>futex_wait (2 samples, 0.01%)</title><rect x="65.2" y="453" width="0.1" height="15.0" fill="rgb(209,149,26)" rx="2" ry="2" />
<text  x="68.21" y="463.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (3 samples, 0.01%)</title><rect x="740.7" y="341" width="0.2" height="15.0" fill="rgb(229,183,17)" rx="2" ry="2" />
<text  x="743.72" y="351.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u32&gt;::to_ne_bytes (3 samples, 0.01%)</title><rect x="1042.6" y="293" width="0.2" height="15.0" fill="rgb(253,80,36)" rx="2" ry="2" />
<text  x="1045.59" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (28 samples, 0.13%)</title><rect x="896.7" y="325" width="1.6" height="15.0" fill="rgb(231,112,16)" rx="2" ry="2" />
<text  x="899.71" y="335.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (4 samples, 0.02%)</title><rect x="1032.1" y="293" width="0.2" height="15.0" fill="rgb(231,59,43)" rx="2" ry="2" />
<text  x="1035.09" y="303.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.01%)</title><rect x="1185.4" y="453" width="0.1" height="15.0" fill="rgb(245,26,44)" rx="2" ry="2" />
<text  x="1188.43" y="463.5" ></text>
</g>
<g >
<title>ktime_get (5 samples, 0.02%)</title><rect x="212.6" y="373" width="0.3" height="15.0" fill="rgb(250,80,11)" rx="2" ry="2" />
<text  x="215.62" y="383.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="66.6" y="373" width="0.1" height="15.0" fill="rgb(231,100,17)" rx="2" ry="2" />
<text  x="69.57" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (28 samples, 0.13%)</title><rect x="896.7" y="309" width="1.6" height="15.0" fill="rgb(237,18,2)" rx="2" ry="2" />
<text  x="899.71" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (75 samples, 0.36%)</title><rect x="1054.4" y="245" width="4.2" height="15.0" fill="rgb(222,194,5)" rx="2" ry="2" />
<text  x="1057.39" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (7 samples, 0.03%)</title><rect x="924.0" y="293" width="0.4" height="15.0" fill="rgb(207,91,51)" rx="2" ry="2" />
<text  x="927.03" y="303.5" ></text>
</g>
<g >
<title>NaClAddrSpaceFree (2 samples, 0.01%)</title><rect x="297.6" y="405" width="0.2" height="15.0" fill="rgb(247,57,0)" rx="2" ry="2" />
<text  x="300.65" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (2 samples, 0.01%)</title><rect x="77.7" y="437" width="0.1" height="15.0" fill="rgb(217,36,38)" rx="2" ry="2" />
<text  x="80.69" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.01%)</title><rect x="30.4" y="373" width="0.2" height="15.0" fill="rgb(215,192,28)" rx="2" ry="2" />
<text  x="33.44" y="383.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (131 samples, 0.63%)</title><rect x="1006.7" y="389" width="7.4" height="15.0" fill="rgb(251,224,21)" rx="2" ry="2" />
<text  x="1009.74" y="399.5" ></text>
</g>
<g >
<title>ext4_releasepage (2 samples, 0.01%)</title><rect x="1187.1" y="357" width="0.1" height="15.0" fill="rgb(210,8,52)" rx="2" ry="2" />
<text  x="1190.06" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.05%)</title><rect x="1042.0" y="229" width="0.6" height="15.0" fill="rgb(245,187,39)" rx="2" ry="2" />
<text  x="1045.03" y="239.5" ></text>
</g>
<g >
<title>ext4_writepages (5 samples, 0.02%)</title><rect x="33.7" y="341" width="0.2" height="15.0" fill="rgb(227,131,27)" rx="2" ry="2" />
<text  x="36.66" y="351.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (9 samples, 0.04%)</title><rect x="923.5" y="245" width="0.5" height="15.0" fill="rgb(234,107,17)" rx="2" ry="2" />
<text  x="926.52" y="255.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (14 samples, 0.07%)</title><rect x="1119.5" y="325" width="0.8" height="15.0" fill="rgb(233,62,14)" rx="2" ry="2" />
<text  x="1122.54" y="335.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (2 samples, 0.01%)</title><rect x="77.8" y="389" width="0.1" height="15.0" fill="rgb(216,31,52)" rx="2" ry="2" />
<text  x="80.80" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter (109 samples, 0.52%)</title><rect x="40.7" y="373" width="6.1" height="15.0" fill="rgb(248,129,46)" rx="2" ry="2" />
<text  x="43.66" y="383.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (7 samples, 0.03%)</title><rect x="228.4" y="437" width="0.4" height="15.0" fill="rgb(243,193,11)" rx="2" ry="2" />
<text  x="231.37" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="33.1" y="501" width="0.4" height="15.0" fill="rgb(233,170,13)" rx="2" ry="2" />
<text  x="36.09" y="511.5" ></text>
</g>
<g >
<title>generic_perform_write (44 samples, 0.21%)</title><rect x="55.5" y="181" width="2.5" height="15.0" fill="rgb(248,193,48)" rx="2" ry="2" />
<text  x="58.50" y="191.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="66.6" y="325" width="0.1" height="15.0" fill="rgb(218,125,29)" rx="2" ry="2" />
<text  x="69.57" y="335.5" ></text>
</g>
<g >
<title>llist_reverse_order (8 samples, 0.04%)</title><rect x="93.1" y="373" width="0.5" height="15.0" fill="rgb(240,56,49)" rx="2" ry="2" />
<text  x="96.10" y="383.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (4 samples, 0.02%)</title><rect x="1063.8" y="389" width="0.2" height="15.0" fill="rgb(232,30,39)" rx="2" ry="2" />
<text  x="1066.82" y="399.5" ></text>
</g>
<g >
<title>ion (47 samples, 0.22%)</title><rect x="55.4" y="405" width="2.6" height="15.0" fill="rgb(229,202,22)" rx="2" ry="2" />
<text  x="58.39" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (578 samples, 2.77%)</title><rect x="1071.7" y="341" width="32.7" height="15.0" fill="rgb(217,227,48)" rx="2" ry="2" />
<text  x="1074.72" y="351.5" >co..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,794 samples, 8.58%)</title><rect x="115.2" y="517" width="101.3" height="15.0" fill="rgb(221,152,26)" rx="2" ry="2" />
<text  x="118.18" y="527.5" >secondary_st..</text>
</g>
<g >
<title>llist_reverse_order (7 samples, 0.03%)</title><rect x="47.9" y="373" width="0.4" height="15.0" fill="rgb(223,5,43)" rx="2" ry="2" />
<text  x="50.88" y="383.5" ></text>
</g>
<g >
<title>schedule_idle (50 samples, 0.24%)</title><rect x="27.8" y="389" width="2.9" height="15.0" fill="rgb(235,55,32)" rx="2" ry="2" />
<text  x="30.84" y="399.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (30 samples, 0.14%)</title><rect x="206.5" y="261" width="1.7" height="15.0" fill="rgb(228,72,43)" rx="2" ry="2" />
<text  x="209.53" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (22 samples, 0.11%)</title><rect x="1120.7" y="325" width="1.2" height="15.0" fill="rgb(214,138,31)" rx="2" ry="2" />
<text  x="1123.67" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (82 samples, 0.39%)</title><rect x="1059.2" y="341" width="4.6" height="15.0" fill="rgb(233,179,35)" rx="2" ry="2" />
<text  x="1062.19" y="351.5" ></text>
</g>
<g >
<title>lind_mmap (2 samples, 0.01%)</title><rect x="297.8" y="437" width="0.1" height="15.0" fill="rgb(218,192,14)" rx="2" ry="2" />
<text  x="300.82" y="447.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (2 samples, 0.01%)</title><rect x="57.6" y="69" width="0.2" height="15.0" fill="rgb(228,203,44)" rx="2" ry="2" />
<text  x="60.65" y="79.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (6,420 samples, 30.72%)</title><rect x="782.8" y="485" width="362.4" height="15.0" fill="rgb(231,42,35)" rx="2" ry="2" />
<text  x="785.78" y="495.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>ext4_end_io_rsv_work (2 samples, 0.01%)</title><rect x="33.5" y="453" width="0.2" height="15.0" fill="rgb(251,53,28)" rx="2" ry="2" />
<text  x="36.54" y="463.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.01%)</title><rect x="147.6" y="405" width="0.1" height="15.0" fill="rgb(237,218,7)" rx="2" ry="2" />
<text  x="150.58" y="415.5" ></text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force (6 samples, 0.03%)</title><rect x="968.7" y="389" width="0.3" height="15.0" fill="rgb(217,94,52)" rx="2" ry="2" />
<text  x="971.69" y="399.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (13 samples, 0.06%)</title><rect x="226.4" y="501" width="0.7" height="15.0" fill="rgb(217,84,50)" rx="2" ry="2" />
<text  x="229.40" y="511.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (104 samples, 0.50%)</title><rect x="854.0" y="437" width="5.9" height="15.0" fill="rgb(233,167,20)" rx="2" ry="2" />
<text  x="857.03" y="447.5" ></text>
</g>
<g >
<title>kick_ilb (110 samples, 0.53%)</title><rect x="204.3" y="309" width="6.2" height="15.0" fill="rgb(249,74,52)" rx="2" ry="2" />
<text  x="207.32" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (537 samples, 2.57%)</title><rect x="937.5" y="405" width="30.3" height="15.0" fill="rgb(210,106,3)" rx="2" ry="2" />
<text  x="940.47" y="415.5" >&lt;a..</text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get (6 samples, 0.03%)</title><rect x="968.7" y="341" width="0.3" height="15.0" fill="rgb(249,150,25)" rx="2" ry="2" />
<text  x="971.69" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (2 samples, 0.01%)</title><rect x="1185.4" y="245" width="0.1" height="15.0" fill="rgb(207,44,42)" rx="2" ry="2" />
<text  x="1188.43" y="255.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (191 samples, 0.91%)</title><rect x="1016.3" y="341" width="10.8" height="15.0" fill="rgb(205,14,53)" rx="2" ry="2" />
<text  x="1019.34" y="351.5" ></text>
</g>
<g >
<title>compaction_alloc (4 samples, 0.02%)</title><rect x="65.6" y="405" width="0.2" height="15.0" fill="rgb(224,54,18)" rx="2" ry="2" />
<text  x="68.55" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (116 samples, 0.55%)</title><rect x="883.7" y="357" width="6.5" height="15.0" fill="rgb(247,219,36)" rx="2" ry="2" />
<text  x="886.67" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (6 samples, 0.03%)</title><rect x="50.9" y="405" width="0.4" height="15.0" fill="rgb(211,196,25)" rx="2" ry="2" />
<text  x="53.93" y="415.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (7 samples, 0.03%)</title><rect x="228.4" y="469" width="0.4" height="15.0" fill="rgb(220,87,28)" rx="2" ry="2" />
<text  x="231.37" y="479.5" ></text>
</g>
<g >
<title>cpu_startup_entry (35 samples, 0.17%)</title><rect x="1187.2" y="485" width="2.0" height="15.0" fill="rgb(237,131,14)" rx="2" ry="2" />
<text  x="1190.18" y="495.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (6 samples, 0.03%)</title><rect x="926.3" y="405" width="0.4" height="15.0" fill="rgb(236,15,46)" rx="2" ry="2" />
<text  x="929.35" y="415.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (71 samples, 0.34%)</title><rect x="1039.1" y="357" width="4.0" height="15.0" fill="rgb(207,173,0)" rx="2" ry="2" />
<text  x="1042.09" y="367.5" ></text>
</g>
<g >
<title>pool-whoopsie (2,085 samples, 9.98%)</title><rect x="98.7" y="533" width="117.8" height="15.0" fill="rgb(208,6,26)" rx="2" ry="2" />
<text  x="101.75" y="543.5" >pool-whoopsie</text>
</g>
<g >
<title>_raw_spin_lock (5 samples, 0.02%)</title><rect x="199.3" y="325" width="0.3" height="15.0" fill="rgb(242,226,11)" rx="2" ry="2" />
<text  x="202.30" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="26.5" y="277" width="0.2" height="15.0" fill="rgb(240,88,21)" rx="2" ry="2" />
<text  x="29.54" y="287.5" ></text>
</g>
<g >
<title>test_clear_page_writeback (3 samples, 0.01%)</title><rect x="66.1" y="373" width="0.1" height="15.0" fill="rgb(240,94,0)" rx="2" ry="2" />
<text  x="69.06" y="383.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (16 samples, 0.08%)</title><rect x="223.5" y="501" width="0.9" height="15.0" fill="rgb(211,26,1)" rx="2" ry="2" />
<text  x="226.52" y="511.5" ></text>
</g>
<g >
<title>.NET_ThreadPool (385 samples, 1.84%)</title><rect x="10.0" y="533" width="21.7" height="15.0" fill="rgb(253,7,49)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >...</text>
</g>
</g>
</svg>
