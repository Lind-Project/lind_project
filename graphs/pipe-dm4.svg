<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>NaClUserToSysAddrRangeProt (22 samples, 0.04%)</title><rect x="1025.6" y="549" width="0.5" height="15.0" fill="rgb(241,190,29)" rx="2" ry="2" />
<text  x="1028.62" y="559.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (5 samples, 0.01%)</title><rect x="23.5" y="389" width="0.1" height="15.0" fill="rgb(245,10,27)" rx="2" ry="2" />
<text  x="26.51" y="399.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (30 samples, 0.06%)</title><rect x="68.4" y="533" width="0.7" height="15.0" fill="rgb(212,2,17)" rx="2" ry="2" />
<text  x="71.37" y="543.5" ></text>
</g>
<g >
<title>kick_ilb (101 samples, 0.20%)</title><rect x="1141.8" y="421" width="2.4" height="15.0" fill="rgb(218,226,0)" rx="2" ry="2" />
<text  x="1144.76" y="431.5" ></text>
</g>
<g >
<title>handle_mm_fault (114 samples, 0.23%)</title><rect x="1017.2" y="501" width="2.7" height="15.0" fill="rgb(246,117,6)" rx="2" ry="2" />
<text  x="1020.18" y="511.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (55 samples, 0.11%)</title><rect x="717.6" y="357" width="1.3" height="15.0" fill="rgb(237,109,39)" rx="2" ry="2" />
<text  x="720.59" y="367.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (5 samples, 0.01%)</title><rect x="18.3" y="325" width="0.1" height="15.0" fill="rgb(212,217,10)" rx="2" ry="2" />
<text  x="21.31" y="335.5" ></text>
</g>
<g >
<title>cpumask_next (5 samples, 0.01%)</title><rect x="1181.4" y="341" width="0.1" height="15.0" fill="rgb(247,44,49)" rx="2" ry="2" />
<text  x="1184.43" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (145 samples, 0.29%)</title><rect x="860.5" y="277" width="3.4" height="15.0" fill="rgb(239,162,48)" rx="2" ry="2" />
<text  x="863.50" y="287.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (5 samples, 0.01%)</title><rect x="23.0" y="405" width="0.1" height="15.0" fill="rgb(252,148,6)" rx="2" ry="2" />
<text  x="25.99" y="415.5" ></text>
</g>
<g >
<title>page_remove_rmap (9 samples, 0.02%)</title><rect x="143.7" y="245" width="0.2" height="15.0" fill="rgb(246,155,40)" rx="2" ry="2" />
<text  x="146.65" y="255.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (9 samples, 0.02%)</title><rect x="708.8" y="421" width="0.2" height="15.0" fill="rgb(213,150,47)" rx="2" ry="2" />
<text  x="711.78" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (577 samples, 1.16%)</title><rect x="778.1" y="437" width="13.6" height="15.0" fill="rgb(217,146,37)" rx="2" ry="2" />
<text  x="781.06" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (306 samples, 0.61%)</title><rect x="791.9" y="389" width="7.3" height="15.0" fill="rgb(219,6,44)" rx="2" ry="2" />
<text  x="794.93" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (33 samples, 0.07%)</title><rect x="28.0" y="549" width="0.7" height="15.0" fill="rgb(229,129,35)" rx="2" ry="2" />
<text  x="30.95" y="559.5" ></text>
</g>
<g >
<title>lind_read (18,935 samples, 37.90%)</title><rect x="144.6" y="501" width="447.3" height="15.0" fill="rgb(248,37,22)" rx="2" ry="2" />
<text  x="147.62" y="511.5" >lind_read</text>
</g>
<g >
<title>NaClSysWrite (15,385 samples, 30.80%)</title><rect x="613.4" y="517" width="363.5" height="15.0" fill="rgb(219,164,23)" rx="2" ry="2" />
<text  x="616.44" y="527.5" >NaClSysWrite</text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (52 samples, 0.10%)</title><rect x="842.3" y="373" width="1.2" height="15.0" fill="rgb(224,32,11)" rx="2" ry="2" />
<text  x="845.26" y="383.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (11 samples, 0.02%)</title><rect x="75.8" y="549" width="0.3" height="15.0" fill="rgb(238,142,49)" rx="2" ry="2" />
<text  x="78.81" y="559.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (12 samples, 0.02%)</title><rect x="610.7" y="501" width="0.2" height="15.0" fill="rgb(245,3,14)" rx="2" ry="2" />
<text  x="613.65" y="511.5" ></text>
</g>
<g >
<title>HandleStackContext (17 samples, 0.03%)</title><rect x="73.6" y="549" width="0.4" height="15.0" fill="rgb(243,147,53)" rx="2" ry="2" />
<text  x="76.57" y="559.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (200 samples, 0.40%)</title><rect x="732.2" y="341" width="4.7" height="15.0" fill="rgb(207,99,41)" rx="2" ry="2" />
<text  x="735.16" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (214 samples, 0.43%)</title><rect x="714.9" y="405" width="5.1" height="15.0" fill="rgb(222,138,31)" rx="2" ry="2" />
<text  x="717.94" y="415.5" ></text>
</g>
<g >
<title>menu_select (203 samples, 0.41%)</title><rect x="1168.3" y="405" width="4.8" height="15.0" fill="rgb(218,219,34)" rx="2" ry="2" />
<text  x="1171.34" y="415.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (494 samples, 0.99%)</title><rect x="597.0" y="501" width="11.6" height="15.0" fill="rgb(221,169,48)" rx="2" ry="2" />
<text  x="599.98" y="511.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (378 samples, 0.76%)</title><rect x="638.9" y="501" width="8.9" height="15.0" fill="rgb(219,122,51)" rx="2" ry="2" />
<text  x="641.86" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (442 samples, 0.88%)</title><rect x="435.8" y="373" width="10.5" height="15.0" fill="rgb(209,170,48)" rx="2" ry="2" />
<text  x="438.83" y="383.5" ></text>
</g>
<g >
<title>llist_reverse_order (40 samples, 0.08%)</title><rect x="1137.5" y="485" width="1.0" height="15.0" fill="rgb(238,211,34)" rx="2" ry="2" />
<text  x="1140.51" y="495.5" ></text>
</g>
<g >
<title>handle_pte_fault (101 samples, 0.20%)</title><rect x="1017.5" y="469" width="2.4" height="15.0" fill="rgb(244,173,28)" rx="2" ry="2" />
<text  x="1020.47" y="479.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (7 samples, 0.01%)</title><rect x="1019.3" y="389" width="0.2" height="15.0" fill="rgb(234,206,38)" rx="2" ry="2" />
<text  x="1022.31" y="399.5" ></text>
</g>
<g >
<title>unmap_region (54 samples, 0.11%)</title><rect x="143.2" y="341" width="1.3" height="15.0" fill="rgb(254,184,46)" rx="2" ry="2" />
<text  x="146.20" y="351.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (20 samples, 0.04%)</title><rect x="18.0" y="405" width="0.5" height="15.0" fill="rgb(217,82,41)" rx="2" ry="2" />
<text  x="21.01" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2,903 samples, 5.81%)</title><rect x="504.1" y="357" width="68.5" height="15.0" fill="rgb(235,143,40)" rx="2" ry="2" />
<text  x="507.07" y="367.5" >__memmo..</text>
</g>
<g >
<title>poll_idle (63 samples, 0.13%)</title><rect x="23.6" y="389" width="1.5" height="15.0" fill="rgb(249,225,48)" rx="2" ry="2" />
<text  x="26.63" y="399.5" ></text>
</g>
<g >
<title>menu_update (21 samples, 0.04%)</title><rect x="1169.9" y="389" width="0.5" height="15.0" fill="rgb(221,168,46)" rx="2" ry="2" />
<text  x="1172.95" y="399.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (5 samples, 0.01%)</title><rect x="1169.2" y="389" width="0.2" height="15.0" fill="rgb(231,43,21)" rx="2" ry="2" />
<text  x="1172.24" y="399.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (272 samples, 0.54%)</title><rect x="799.7" y="421" width="6.4" height="15.0" fill="rgb(239,111,9)" rx="2" ry="2" />
<text  x="802.72" y="431.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 0.13%)</title><rect x="10.4" y="245" width="1.5" height="15.0" fill="rgb(233,70,50)" rx="2" ry="2" />
<text  x="13.40" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="1148.1" y="373" width="0.3" height="15.0" fill="rgb(209,65,20)" rx="2" ry="2" />
<text  x="1151.12" y="383.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (27 samples, 0.05%)</title><rect x="1069.8" y="565" width="0.7" height="15.0" fill="rgb(218,131,37)" rx="2" ry="2" />
<text  x="1072.84" y="575.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (19 samples, 0.04%)</title><rect x="699.8" y="469" width="0.4" height="15.0" fill="rgb(236,24,53)" rx="2" ry="2" />
<text  x="702.78" y="479.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (12 samples, 0.02%)</title><rect x="740.4" y="261" width="0.2" height="15.0" fill="rgb(246,161,25)" rx="2" ry="2" />
<text  x="743.36" y="271.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (12 samples, 0.02%)</title><rect x="144.2" y="165" width="0.3" height="15.0" fill="rgb(250,74,20)" rx="2" ry="2" />
<text  x="147.20" y="175.5" ></text>
</g>
<g >
<title>do_anonymous_page (95 samples, 0.19%)</title><rect x="1017.6" y="453" width="2.3" height="15.0" fill="rgb(209,65,13)" rx="2" ry="2" />
<text  x="1020.61" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (219 samples, 0.44%)</title><rect x="873.2" y="293" width="5.2" height="15.0" fill="rgb(216,171,37)" rx="2" ry="2" />
<text  x="876.19" y="303.5" ></text>
</g>
<g >
<title>rcu_idle_enter (6 samples, 0.01%)</title><rect x="1166.4" y="389" width="0.1" height="15.0" fill="rgb(254,95,23)" rx="2" ry="2" />
<text  x="1169.35" y="399.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (101 samples, 0.20%)</title><rect x="178.0" y="405" width="2.3" height="15.0" fill="rgb(214,2,11)" rx="2" ry="2" />
<text  x="180.95" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (632 samples, 1.27%)</title><rect x="725.7" y="421" width="14.9" height="15.0" fill="rgb(245,175,35)" rx="2" ry="2" />
<text  x="728.71" y="431.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (23 samples, 0.05%)</title><rect x="715.7" y="357" width="0.6" height="15.0" fill="rgb(212,146,14)" rx="2" ry="2" />
<text  x="718.75" y="367.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (12 samples, 0.02%)</title><rect x="709.0" y="357" width="0.3" height="15.0" fill="rgb(247,153,27)" rx="2" ry="2" />
<text  x="711.99" y="367.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (5 samples, 0.01%)</title><rect x="15.8" y="165" width="0.1" height="15.0" fill="rgb(205,116,30)" rx="2" ry="2" />
<text  x="18.76" y="175.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (852 samples, 1.71%)</title><rect x="180.3" y="437" width="20.2" height="15.0" fill="rgb(249,74,48)" rx="2" ry="2" />
<text  x="183.34" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (17 samples, 0.03%)</title><rect x="1172.6" y="325" width="0.4" height="15.0" fill="rgb(212,118,15)" rx="2" ry="2" />
<text  x="1175.64" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (580 samples, 1.16%)</title><rect x="865.2" y="357" width="13.7" height="15.0" fill="rgb(252,196,18)" rx="2" ry="2" />
<text  x="868.25" y="367.5" ></text>
</g>
<g >
<title>free_unref_page_commit (15 samples, 0.03%)</title><rect x="144.1" y="181" width="0.4" height="15.0" fill="rgb(247,41,31)" rx="2" ry="2" />
<text  x="147.12" y="191.5" ></text>
</g>
<g >
<title>read_tsc (6 samples, 0.01%)</title><rect x="1145.0" y="485" width="0.1" height="15.0" fill="rgb(214,187,25)" rx="2" ry="2" />
<text  x="1148.00" y="495.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (9 samples, 0.02%)</title><rect x="13.0" y="181" width="0.3" height="15.0" fill="rgb(251,181,31)" rx="2" ry="2" />
<text  x="16.05" y="191.5" ></text>
</g>
<g >
<title>std::lazy::SyncLazy&lt;T,F&gt;::force (13 samples, 0.03%)</title><rect x="699.5" y="453" width="0.3" height="15.0" fill="rgb(207,175,10)" rx="2" ry="2" />
<text  x="702.47" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (736 samples, 1.47%)</title><rect x="809.4" y="341" width="17.4" height="15.0" fill="rgb(235,227,26)" rx="2" ry="2" />
<text  x="812.41" y="351.5" ></text>
</g>
<g >
<title>exc_page_fault (124 samples, 0.25%)</title><rect x="1017.1" y="533" width="2.9" height="15.0" fill="rgb(223,188,16)" rx="2" ry="2" />
<text  x="1020.07" y="543.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (7 samples, 0.01%)</title><rect x="976.9" y="517" width="0.1" height="15.0" fill="rgb(251,133,7)" rx="2" ry="2" />
<text  x="979.86" y="527.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (10 samples, 0.02%)</title><rect x="16.1" y="149" width="0.2" height="15.0" fill="rgb(242,128,11)" rx="2" ry="2" />
<text  x="19.07" y="159.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (267 samples, 0.53%)</title><rect x="835.2" y="357" width="6.4" height="15.0" fill="rgb(237,42,44)" rx="2" ry="2" />
<text  x="838.25" y="367.5" ></text>
</g>
<g >
<title>cpuidle_select (126 samples, 0.25%)</title><rect x="1133.3" y="485" width="2.9" height="15.0" fill="rgb(223,32,37)" rx="2" ry="2" />
<text  x="1136.26" y="495.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.01%)</title><rect x="1187.8" y="389" width="0.1" height="15.0" fill="rgb(241,150,40)" rx="2" ry="2" />
<text  x="1190.78" y="399.5" ></text>
</g>
<g >
<title>pagecache_get_page (72 samples, 0.14%)</title><rect x="14.1" y="165" width="1.7" height="15.0" fill="rgb(220,74,36)" rx="2" ry="2" />
<text  x="17.06" y="175.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (176 samples, 0.35%)</title><rect x="859.8" y="341" width="4.1" height="15.0" fill="rgb(206,114,33)" rx="2" ry="2" />
<text  x="862.77" y="351.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (176 samples, 0.35%)</title><rect x="859.8" y="357" width="4.1" height="15.0" fill="rgb(247,216,5)" rx="2" ry="2" />
<text  x="862.77" y="367.5" ></text>
</g>
<g >
<title>kick_ilb (13 samples, 0.03%)</title><rect x="26.2" y="357" width="0.3" height="15.0" fill="rgb(242,59,5)" rx="2" ry="2" />
<text  x="29.18" y="367.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (955 samples, 1.91%)</title><rect x="808.7" y="389" width="22.6" height="15.0" fill="rgb(240,30,34)" rx="2" ry="2" />
<text  x="811.72" y="399.5" >&lt;..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (18,930 samples, 37.89%)</title><rect x="144.7" y="453" width="447.2" height="15.0" fill="rgb(247,185,49)" rx="2" ry="2" />
<text  x="147.74" y="463.5" >rustposix::interface::pipe::EmulatedPipe::read_from_pipe</text>
</g>
<g >
<title>do_softirq_own_stack (8 samples, 0.02%)</title><rect x="1100.5" y="405" width="0.2" height="15.0" fill="rgb(234,36,27)" rx="2" ry="2" />
<text  x="1103.54" y="415.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (36 samples, 0.07%)</title><rect x="99.6" y="517" width="0.8" height="15.0" fill="rgb(207,168,41)" rx="2" ry="2" />
<text  x="102.60" y="527.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (212 samples, 0.42%)</title><rect x="731.9" y="373" width="5.0" height="15.0" fill="rgb(207,115,4)" rx="2" ry="2" />
<text  x="734.88" y="383.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (950 samples, 1.90%)</title><rect x="808.8" y="373" width="22.5" height="15.0" fill="rgb(235,91,20)" rx="2" ry="2" />
<text  x="811.84" y="383.5" >p..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (49 samples, 0.10%)</title><rect x="722.9" y="325" width="1.1" height="15.0" fill="rgb(236,178,28)" rx="2" ry="2" />
<text  x="725.88" y="335.5" ></text>
</g>
<g >
<title>do_idle (1,973 samples, 3.95%)</title><rect x="1099.0" y="517" width="46.6" height="15.0" fill="rgb(231,219,21)" rx="2" ry="2" />
<text  x="1101.99" y="527.5" >do_i..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="1100.5" y="437" width="0.2" height="15.0" fill="rgb(229,69,21)" rx="2" ry="2" />
<text  x="1103.50" y="447.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (101 samples, 0.20%)</title><rect x="23.4" y="437" width="2.4" height="15.0" fill="rgb(227,75,27)" rx="2" ry="2" />
<text  x="26.37" y="447.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (30 samples, 0.06%)</title><rect x="68.4" y="517" width="0.7" height="15.0" fill="rgb(219,137,7)" rx="2" ry="2" />
<text  x="71.37" y="527.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (462 samples, 0.92%)</title><rect x="597.7" y="485" width="10.9" height="15.0" fill="rgb(249,218,13)" rx="2" ry="2" />
<text  x="600.73" y="495.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (30 samples, 0.06%)</title><rect x="863.9" y="357" width="0.7" height="15.0" fill="rgb(237,81,20)" rx="2" ry="2" />
<text  x="866.93" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_write (21 samples, 0.04%)</title><rect x="18.0" y="533" width="0.5" height="15.0" fill="rgb(230,96,17)" rx="2" ry="2" />
<text  x="20.98" y="543.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (16 samples, 0.03%)</title><rect x="936.5" y="389" width="0.3" height="15.0" fill="rgb(238,67,24)" rx="2" ry="2" />
<text  x="939.47" y="399.5" ></text>
</g>
<g >
<title>core::cmp::min (258 samples, 0.52%)</title><rect x="167.4" y="437" width="6.1" height="15.0" fill="rgb(207,17,20)" rx="2" ry="2" />
<text  x="170.44" y="447.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (296 samples, 0.59%)</title><rect x="799.2" y="437" width="6.9" height="15.0" fill="rgb(236,207,35)" rx="2" ry="2" />
<text  x="802.15" y="447.5" ></text>
</g>
<g >
<title>__run_hrtimer (7 samples, 0.01%)</title><rect x="1148.1" y="293" width="0.2" height="15.0" fill="rgb(241,17,28)" rx="2" ry="2" />
<text  x="1151.12" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="1148.1" y="389" width="0.3" height="15.0" fill="rgb(250,57,34)" rx="2" ry="2" />
<text  x="1151.12" y="399.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (8 samples, 0.02%)</title><rect x="1100.5" y="373" width="0.2" height="15.0" fill="rgb(222,4,43)" rx="2" ry="2" />
<text  x="1103.54" y="383.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (115 samples, 0.23%)</title><rect x="1136.5" y="501" width="2.8" height="15.0" fill="rgb(221,91,27)" rx="2" ry="2" />
<text  x="1139.54" y="511.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (8,433 samples, 16.88%)</title><rect x="392.7" y="421" width="199.2" height="15.0" fill="rgb(222,23,0)" rx="2" ry="2" />
<text  x="395.67" y="431.5" >ringbuf::consumer::Consume..</text>
</g>
<g >
<title>[sel_ldr] (22 samples, 0.04%)</title><rect x="674.6" y="501" width="0.5" height="15.0" fill="rgb(220,17,16)" rx="2" ry="2" />
<text  x="677.57" y="511.5" ></text>
</g>
<g >
<title>new_sync_write (20 samples, 0.04%)</title><rect x="18.0" y="485" width="0.5" height="15.0" fill="rgb(212,109,41)" rx="2" ry="2" />
<text  x="21.01" y="495.5" ></text>
</g>
<g >
<title>sel_ldr (44,189 samples, 88.46%)</title><rect x="26.8" y="581" width="1043.8" height="15.0" fill="rgb(216,144,41)" rx="2" ry="2" />
<text  x="29.82" y="591.5" >sel_ldr</text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (733 samples, 1.47%)</title><rect x="594.6" y="517" width="17.3" height="15.0" fill="rgb(206,218,22)" rx="2" ry="2" />
<text  x="597.59" y="527.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (950 samples, 1.90%)</title><rect x="954.1" y="405" width="22.5" height="15.0" fill="rgb(233,226,22)" rx="2" ry="2" />
<text  x="957.14" y="415.5" >r..</text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (81 samples, 0.16%)</title><rect x="1044.7" y="549" width="1.9" height="15.0" fill="rgb(228,215,53)" rx="2" ry="2" />
<text  x="1047.68" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (57 samples, 0.11%)</title><rect x="726.8" y="325" width="1.3" height="15.0" fill="rgb(254,196,34)" rx="2" ry="2" />
<text  x="729.80" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (18 samples, 0.04%)</title><rect x="727.7" y="309" width="0.4" height="15.0" fill="rgb(251,187,14)" rx="2" ry="2" />
<text  x="730.65" y="319.5" ></text>
</g>
<g >
<title>start_secondary (1,993 samples, 3.99%)</title><rect x="1098.9" y="549" width="47.1" height="15.0" fill="rgb(208,168,45)" rx="2" ry="2" />
<text  x="1101.91" y="559.5" >star..</text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (12 samples, 0.02%)</title><rect x="739.7" y="357" width="0.3" height="15.0" fill="rgb(246,100,24)" rx="2" ry="2" />
<text  x="742.70" y="367.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (7 samples, 0.01%)</title><rect x="31.4" y="549" width="0.2" height="15.0" fill="rgb(213,35,41)" rx="2" ry="2" />
<text  x="34.42" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (54 samples, 0.11%)</title><rect x="143.2" y="421" width="1.3" height="15.0" fill="rgb(228,45,25)" rx="2" ry="2" />
<text  x="146.20" y="431.5" ></text>
</g>
<g >
<title>record__write (230 samples, 0.46%)</title><rect x="12.4" y="453" width="5.5" height="15.0" fill="rgb(216,209,21)" rx="2" ry="2" />
<text  x="15.43" y="463.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_key_value (8 samples, 0.02%)</title><rect x="34.2" y="517" width="0.2" height="15.0" fill="rgb(216,86,25)" rx="2" ry="2" />
<text  x="37.17" y="527.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (18 samples, 0.04%)</title><rect x="724.8" y="325" width="0.4" height="15.0" fill="rgb(249,206,9)" rx="2" ry="2" />
<text  x="727.82" y="335.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (6 samples, 0.01%)</title><rect x="1132.3" y="437" width="0.1" height="15.0" fill="rgb(213,215,20)" rx="2" ry="2" />
<text  x="1135.27" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (44 samples, 0.09%)</title><rect x="730.0" y="309" width="1.1" height="15.0" fill="rgb(248,10,52)" rx="2" ry="2" />
<text  x="733.04" y="319.5" ></text>
</g>
<g >
<title>read_tsc (14 samples, 0.03%)</title><rect x="1188.2" y="421" width="0.3" height="15.0" fill="rgb(239,94,40)" rx="2" ry="2" />
<text  x="1191.18" y="431.5" ></text>
</g>
<g >
<title>do_idle (1,807 samples, 3.62%)</title><rect x="1146.0" y="453" width="42.7" height="15.0" fill="rgb(242,73,34)" rx="2" ry="2" />
<text  x="1149.02" y="463.5" >do_i..</text>
</g>
<g >
<title>flush_smp_call_function_from_idle (15 samples, 0.03%)</title><rect x="1145.6" y="517" width="0.3" height="15.0" fill="rgb(247,168,23)" rx="2" ry="2" />
<text  x="1148.59" y="527.5" ></text>
</g>
<g >
<title>cpu_startup_entry (148 samples, 0.30%)</title><rect x="23.3" y="469" width="3.5" height="15.0" fill="rgb(244,144,19)" rx="2" ry="2" />
<text  x="26.32" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (19 samples, 0.04%)</title><rect x="1026.2" y="549" width="0.4" height="15.0" fill="rgb(206,179,1)" rx="2" ry="2" />
<text  x="1029.16" y="559.5" ></text>
</g>
<g >
<title>ktime_get (8 samples, 0.02%)</title><rect x="1187.3" y="421" width="0.2" height="15.0" fill="rgb(210,220,35)" rx="2" ry="2" />
<text  x="1190.31" y="431.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (26 samples, 0.05%)</title><rect x="143.9" y="245" width="0.6" height="15.0" fill="rgb(212,220,13)" rx="2" ry="2" />
<text  x="146.86" y="255.5" ></text>
</g>
<g >
<title>ext4_inode_csum (10 samples, 0.02%)</title><rect x="16.8" y="69" width="0.2" height="15.0" fill="rgb(206,76,1)" rx="2" ry="2" />
<text  x="19.76" y="79.5" ></text>
</g>
<g >
<title>cpuidle_enter (134 samples, 0.27%)</title><rect x="19.2" y="485" width="3.1" height="15.0" fill="rgb(207,32,10)" rx="2" ry="2" />
<text  x="22.17" y="495.5" ></text>
</g>
<g >
<title>schedule_idle (26 samples, 0.05%)</title><rect x="25.9" y="437" width="0.7" height="15.0" fill="rgb(240,139,31)" rx="2" ry="2" />
<text  x="28.94" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (14 samples, 0.03%)</title><rect x="600.1" y="453" width="0.3" height="15.0" fill="rgb(210,205,18)" rx="2" ry="2" />
<text  x="603.12" y="463.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (234 samples, 0.47%)</title><rect x="12.4" y="501" width="5.5" height="15.0" fill="rgb(236,32,2)" rx="2" ry="2" />
<text  x="15.39" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (28 samples, 0.06%)</title><rect x="720.7" y="373" width="0.7" height="15.0" fill="rgb(243,84,30)" rx="2" ry="2" />
<text  x="723.71" y="383.5" ></text>
</g>
<g >
<title>swapper (5,053 samples, 10.12%)</title><rect x="1070.6" y="581" width="119.4" height="15.0" fill="rgb(248,72,25)" rx="2" ry="2" />
<text  x="1073.64" y="591.5" >swapper</text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (28 samples, 0.06%)</title><rect x="740.0" y="341" width="0.6" height="15.0" fill="rgb(248,228,50)" rx="2" ry="2" />
<text  x="742.98" y="351.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (710 samples, 1.42%)</title><rect x="657.5" y="501" width="16.8" height="15.0" fill="rgb(240,103,2)" rx="2" ry="2" />
<text  x="660.50" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (12 samples, 0.02%)</title><rect x="731.6" y="341" width="0.3" height="15.0" fill="rgb(254,19,43)" rx="2" ry="2" />
<text  x="734.60" y="351.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (13 samples, 0.03%)</title><rect x="32.3" y="549" width="0.4" height="15.0" fill="rgb(245,92,53)" rx="2" ry="2" />
<text  x="35.35" y="559.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (24 samples, 0.05%)</title><rect x="1068.8" y="533" width="0.6" height="15.0" fill="rgb(207,118,53)" rx="2" ry="2" />
<text  x="1071.82" y="543.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (30 samples, 0.06%)</title><rect x="142.3" y="469" width="0.7" height="15.0" fill="rgb(236,182,17)" rx="2" ry="2" />
<text  x="145.31" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (227 samples, 0.45%)</title><rect x="12.5" y="389" width="5.3" height="15.0" fill="rgb(223,176,7)" rx="2" ry="2" />
<text  x="15.48" y="399.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (1,074 samples, 2.15%)</title><rect x="951.2" y="437" width="25.4" height="15.0" fill="rgb(241,24,11)" rx="2" ry="2" />
<text  x="954.21" y="447.5" >r..</text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (916 samples, 1.83%)</title><rect x="106.3" y="533" width="21.6" height="15.0" fill="rgb(207,74,26)" rx="2" ry="2" />
<text  x="109.31" y="543.5" >N..</text>
</g>
<g >
<title>jbd2__journal_start (9 samples, 0.02%)</title><rect x="13.0" y="165" width="0.3" height="15.0" fill="rgb(225,201,5)" rx="2" ry="2" />
<text  x="16.05" y="175.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (632 samples, 1.27%)</title><rect x="725.7" y="405" width="14.9" height="15.0" fill="rgb(250,66,19)" rx="2" ry="2" />
<text  x="728.71" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.03%)</title><rect x="1098.4" y="565" width="0.4" height="15.0" fill="rgb(228,44,26)" rx="2" ry="2" />
<text  x="1101.39" y="575.5" ></text>
</g>
<g >
<title>free_unref_page_list (19 samples, 0.04%)</title><rect x="144.0" y="197" width="0.5" height="15.0" fill="rgb(248,176,10)" rx="2" ry="2" />
<text  x="147.03" y="207.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (5 samples, 0.01%)</title><rect x="1167.3" y="373" width="0.1" height="15.0" fill="rgb(226,193,1)" rx="2" ry="2" />
<text  x="1170.25" y="383.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (406 samples, 0.81%)</title><rect x="128.3" y="533" width="9.6" height="15.0" fill="rgb(210,178,46)" rx="2" ry="2" />
<text  x="131.32" y="543.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (323 samples, 0.65%)</title><rect x="700.2" y="421" width="7.7" height="15.0" fill="rgb(233,109,25)" rx="2" ry="2" />
<text  x="703.23" y="431.5" ></text>
</g>
<g >
<title>alloc_pages_current (38 samples, 0.08%)</title><rect x="14.8" y="149" width="0.9" height="15.0" fill="rgb(246,17,39)" rx="2" ry="2" />
<text  x="17.82" y="159.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (16 samples, 0.03%)</title><rect x="936.5" y="373" width="0.3" height="15.0" fill="rgb(224,7,13)" rx="2" ry="2" />
<text  x="939.47" y="383.5" ></text>
</g>
<g >
<title>__perf_event_enable (63 samples, 0.13%)</title><rect x="10.4" y="261" width="1.5" height="15.0" fill="rgb(254,85,42)" rx="2" ry="2" />
<text  x="13.40" y="271.5" ></text>
</g>
<g >
<title>newidle_balance (23 samples, 0.05%)</title><rect x="25.9" y="389" width="0.6" height="15.0" fill="rgb(237,109,43)" rx="2" ry="2" />
<text  x="28.94" y="399.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (24 samples, 0.05%)</title><rect x="1142.8" y="373" width="0.6" height="15.0" fill="rgb(211,11,2)" rx="2" ry="2" />
<text  x="1145.80" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (174 samples, 0.35%)</title><rect x="435.8" y="357" width="4.1" height="15.0" fill="rgb(214,199,29)" rx="2" ry="2" />
<text  x="438.83" y="367.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (817 samples, 1.64%)</title><rect x="1048.6" y="549" width="19.3" height="15.0" fill="rgb(210,159,51)" rx="2" ry="2" />
<text  x="1051.65" y="559.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (21 samples, 0.04%)</title><rect x="714.4" y="437" width="0.5" height="15.0" fill="rgb(226,83,0)" rx="2" ry="2" />
<text  x="717.45" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (133 samples, 0.27%)</title><rect x="844.1" y="309" width="3.1" height="15.0" fill="rgb(231,101,49)" rx="2" ry="2" />
<text  x="847.06" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.02%)</title><rect x="888.6" y="437" width="0.2" height="15.0" fill="rgb(223,139,35)" rx="2" ry="2" />
<text  x="891.59" y="447.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (6 samples, 0.01%)</title><rect x="1187.8" y="421" width="0.1" height="15.0" fill="rgb(214,213,8)" rx="2" ry="2" />
<text  x="1190.76" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (272 samples, 0.54%)</title><rect x="799.7" y="405" width="6.4" height="15.0" fill="rgb(241,184,8)" rx="2" ry="2" />
<text  x="802.72" y="415.5" ></text>
</g>
<g >
<title>NaClSysExecv (5 samples, 0.01%)</title><rect x="143.1" y="501" width="0.1" height="15.0" fill="rgb(221,193,18)" rx="2" ry="2" />
<text  x="146.08" y="511.5" ></text>
</g>
<g >
<title>__ioctl (79 samples, 0.16%)</title><rect x="10.1" y="469" width="1.9" height="15.0" fill="rgb(250,31,33)" rx="2" ry="2" />
<text  x="13.12" y="479.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,860 samples, 3.72%)</title><rect x="1146.0" y="469" width="43.9" height="15.0" fill="rgb(216,8,16)" rx="2" ry="2" />
<text  x="1148.99" y="479.5" >cpu_..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (1,018 samples, 2.04%)</title><rect x="35.6" y="549" width="24.0" height="15.0" fill="rgb(218,95,34)" rx="2" ry="2" />
<text  x="38.58" y="559.5" >r..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (23 samples, 0.05%)</title><rect x="1047.8" y="533" width="0.6" height="15.0" fill="rgb(249,33,33)" rx="2" ry="2" />
<text  x="1050.82" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_write (227 samples, 0.45%)</title><rect x="12.5" y="373" width="5.3" height="15.0" fill="rgb(206,32,27)" rx="2" ry="2" />
<text  x="15.48" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (61 samples, 0.12%)</title><rect x="1017.7" y="437" width="1.4" height="15.0" fill="rgb(242,190,52)" rx="2" ry="2" />
<text  x="1020.66" y="447.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (148 samples, 0.30%)</title><rect x="23.3" y="533" width="3.5" height="15.0" fill="rgb(247,68,3)" rx="2" ry="2" />
<text  x="26.32" y="543.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (271 samples, 0.54%)</title><rect x="944.8" y="437" width="6.4" height="15.0" fill="rgb(222,26,35)" rx="2" ry="2" />
<text  x="947.81" y="447.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (1,388 samples, 2.78%)</title><rect x="707.9" y="469" width="32.7" height="15.0" fill="rgb(215,42,7)" rx="2" ry="2" />
<text  x="710.86" y="479.5" >da..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (822 samples, 1.65%)</title><rect x="751.5" y="437" width="19.5" height="15.0" fill="rgb(212,136,29)" rx="2" ry="2" />
<text  x="754.53" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (28 samples, 0.06%)</title><rect x="720.7" y="389" width="0.7" height="15.0" fill="rgb(226,95,14)" rx="2" ry="2" />
<text  x="723.71" y="399.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,557 samples, 3.12%)</title><rect x="1099.7" y="501" width="36.7" height="15.0" fill="rgb(231,12,32)" rx="2" ry="2" />
<text  x="1102.67" y="511.5" >cpu..</text>
</g>
<g >
<title>smp_call_function_single_async (10 samples, 0.02%)</title><rect x="26.3" y="341" width="0.2" height="15.0" fill="rgb(243,90,32)" rx="2" ry="2" />
<text  x="29.25" y="351.5" ></text>
</g>
<g >
<title>__lock_text_start (11 samples, 0.02%)</title><rect x="1172.4" y="325" width="0.2" height="15.0" fill="rgb(215,152,30)" rx="2" ry="2" />
<text  x="1175.38" y="335.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (45 samples, 0.09%)</title><rect x="1183.8" y="309" width="1.1" height="15.0" fill="rgb(216,202,53)" rx="2" ry="2" />
<text  x="1186.79" y="319.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.01%)</title><rect x="1187.8" y="405" width="0.1" height="15.0" fill="rgb(208,114,20)" rx="2" ry="2" />
<text  x="1190.78" y="415.5" ></text>
</g>
<g >
<title>__schedule (408 samples, 0.82%)</title><rect x="1177.2" y="421" width="9.7" height="15.0" fill="rgb(234,142,16)" rx="2" ry="2" />
<text  x="1180.22" y="431.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (237 samples, 0.47%)</title><rect x="54.0" y="533" width="5.6" height="15.0" fill="rgb(238,173,6)" rx="2" ry="2" />
<text  x="57.03" y="543.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (8 samples, 0.02%)</title><rect x="1167.1" y="373" width="0.2" height="15.0" fill="rgb(222,180,47)" rx="2" ry="2" />
<text  x="1170.06" y="383.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (50 samples, 0.10%)</title><rect x="1188.7" y="453" width="1.2" height="15.0" fill="rgb(220,58,22)" rx="2" ry="2" />
<text  x="1191.70" y="463.5" ></text>
</g>
<g >
<title>tick_sched_handle (6 samples, 0.01%)</title><rect x="1148.1" y="261" width="0.2" height="15.0" fill="rgb(209,34,33)" rx="2" ry="2" />
<text  x="1151.14" y="271.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (269 samples, 0.54%)</title><rect x="944.9" y="421" width="6.3" height="15.0" fill="rgb(216,98,14)" rx="2" ry="2" />
<text  x="947.85" y="431.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (41 samples, 0.08%)</title><rect x="16.3" y="149" width="1.0" height="15.0" fill="rgb(228,76,35)" rx="2" ry="2" />
<text  x="19.33" y="159.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (13 samples, 0.03%)</title><rect x="699.5" y="357" width="0.3" height="15.0" fill="rgb(225,218,52)" rx="2" ry="2" />
<text  x="702.47" y="367.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (31 samples, 0.06%)</title><rect x="859.0" y="325" width="0.8" height="15.0" fill="rgb(247,223,54)" rx="2" ry="2" />
<text  x="862.04" y="335.5" ></text>
</g>
<g >
<title>sched_clock_cpu (26 samples, 0.05%)</title><rect x="1167.4" y="389" width="0.6" height="15.0" fill="rgb(234,139,28)" rx="2" ry="2" />
<text  x="1170.37" y="399.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (15 samples, 0.03%)</title><rect x="1021.2" y="533" width="0.4" height="15.0" fill="rgb(223,194,24)" rx="2" ry="2" />
<text  x="1024.25" y="543.5" ></text>
</g>
<g >
<title>sched_clock_cpu (10 samples, 0.02%)</title><rect x="1186.6" y="389" width="0.3" height="15.0" fill="rgb(212,180,52)" rx="2" ry="2" />
<text  x="1189.62" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (37 samples, 0.07%)</title><rect x="610.9" y="501" width="0.9" height="15.0" fill="rgb(239,36,9)" rx="2" ry="2" />
<text  x="613.94" y="511.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (5 samples, 0.01%)</title><rect x="12.6" y="165" width="0.1" height="15.0" fill="rgb(218,167,39)" rx="2" ry="2" />
<text  x="15.62" y="175.5" ></text>
</g>
<g >
<title>[perf-1265.map] (75 samples, 0.15%)</title><rect x="71.0" y="565" width="1.8" height="15.0" fill="rgb(218,148,0)" rx="2" ry="2" />
<text  x="73.99" y="575.5" ></text>
</g>
<g >
<title>update_process_times (5 samples, 0.01%)</title><rect x="1148.2" y="245" width="0.1" height="15.0" fill="rgb(209,91,11)" rx="2" ry="2" />
<text  x="1151.17" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt; (323 samples, 0.65%)</title><rect x="700.2" y="469" width="7.7" height="15.0" fill="rgb(254,187,0)" rx="2" ry="2" />
<text  x="703.23" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (17 samples, 0.03%)</title><rect x="716.3" y="357" width="0.4" height="15.0" fill="rgb(220,140,11)" rx="2" ry="2" />
<text  x="719.29" y="367.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (65 samples, 0.13%)</title><rect x="10.4" y="373" width="1.5" height="15.0" fill="rgb(241,181,30)" rx="2" ry="2" />
<text  x="13.35" y="383.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (11 samples, 0.02%)</title><rect x="736.5" y="293" width="0.2" height="15.0" fill="rgb(250,189,48)" rx="2" ry="2" />
<text  x="739.46" y="303.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 0.13%)</title><rect x="10.4" y="229" width="1.5" height="15.0" fill="rgb(216,157,23)" rx="2" ry="2" />
<text  x="13.40" y="239.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1,373 samples, 2.75%)</title><rect x="708.2" y="453" width="32.4" height="15.0" fill="rgb(210,205,20)" rx="2" ry="2" />
<text  x="711.21" y="463.5" >&lt;d..</text>
</g>
<g >
<title>NaClSysWriteDecoder (16,282 samples, 32.59%)</title><rect x="592.4" y="533" width="384.6" height="15.0" fill="rgb(210,24,29)" rx="2" ry="2" />
<text  x="595.42" y="543.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>core::cmp::Ord::min (258 samples, 0.52%)</title><rect x="167.4" y="421" width="6.1" height="15.0" fill="rgb(233,20,43)" rx="2" ry="2" />
<text  x="170.44" y="431.5" ></text>
</g>
<g >
<title>llist_add_batch (64 samples, 0.13%)</title><rect x="1184.9" y="325" width="1.5" height="15.0" fill="rgb(237,192,53)" rx="2" ry="2" />
<text  x="1187.85" y="335.5" ></text>
</g>
<g >
<title>cpuidle_select (19 samples, 0.04%)</title><rect x="25.3" y="421" width="0.5" height="15.0" fill="rgb(220,191,14)" rx="2" ry="2" />
<text  x="28.31" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (85 samples, 0.17%)</title><rect x="833.2" y="357" width="2.0" height="15.0" fill="rgb(228,175,43)" rx="2" ry="2" />
<text  x="836.24" y="367.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (17 samples, 0.03%)</title><rect x="448.6" y="309" width="0.4" height="15.0" fill="rgb(216,182,12)" rx="2" ry="2" />
<text  x="451.63" y="319.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="739.3" y="325" width="0.3" height="15.0" fill="rgb(209,175,39)" rx="2" ry="2" />
<text  x="742.30" y="335.5" ></text>
</g>
<g >
<title>kick_ilb (6 samples, 0.01%)</title><rect x="23.0" y="421" width="0.1" height="15.0" fill="rgb(241,57,37)" rx="2" ry="2" />
<text  x="25.97" y="431.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (5 samples, 0.01%)</title><rect x="17.1" y="101" width="0.1" height="15.0" fill="rgb(249,213,11)" rx="2" ry="2" />
<text  x="20.06" y="111.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (337 samples, 0.67%)</title><rect x="936.8" y="437" width="8.0" height="15.0" fill="rgb(220,34,12)" rx="2" ry="2" />
<text  x="939.85" y="447.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (20 samples, 0.04%)</title><rect x="18.0" y="421" width="0.5" height="15.0" fill="rgb(239,162,12)" rx="2" ry="2" />
<text  x="21.01" y="431.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (323 samples, 0.65%)</title><rect x="700.2" y="437" width="7.7" height="15.0" fill="rgb(248,53,52)" rx="2" ry="2" />
<text  x="703.23" y="447.5" ></text>
</g>
<g >
<title>CompareAndSwap (13 samples, 0.03%)</title><rect x="28.7" y="549" width="0.3" height="15.0" fill="rgb(219,181,38)" rx="2" ry="2" />
<text  x="31.73" y="559.5" ></text>
</g>
<g >
<title>__handle_mm_fault (107 samples, 0.21%)</title><rect x="1017.3" y="485" width="2.6" height="15.0" fill="rgb(232,87,14)" rx="2" ry="2" />
<text  x="1020.33" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1,211 samples, 2.42%)</title><rect x="359.8" y="389" width="28.6" height="15.0" fill="rgb(224,224,7)" rx="2" ry="2" />
<text  x="362.79" y="399.5" >co..</text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (71 samples, 0.14%)</title><rect x="104.6" y="533" width="1.7" height="15.0" fill="rgb(207,30,38)" rx="2" ry="2" />
<text  x="107.63" y="543.5" ></text>
</g>
<g >
<title>perf_ioctl (74 samples, 0.15%)</title><rect x="10.1" y="405" width="1.8" height="15.0" fill="rgb(224,151,19)" rx="2" ry="2" />
<text  x="13.14" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (9,945 samples, 19.91%)</title><rect x="741.7" y="469" width="234.9" height="15.0" fill="rgb(222,23,17)" rx="2" ry="2" />
<text  x="744.66" y="479.5" >rustposix::safeposix::syscalls:..</text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (510 samples, 1.02%)</title><rect x="662.2" y="485" width="12.1" height="15.0" fill="rgb(211,173,35)" rx="2" ry="2" />
<text  x="665.22" y="495.5" ></text>
</g>
<g >
<title>clear_page_erms (27 samples, 0.05%)</title><rect x="1017.9" y="389" width="0.6" height="15.0" fill="rgb(219,92,36)" rx="2" ry="2" />
<text  x="1020.89" y="399.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (10 samples, 0.02%)</title><rect x="1019.3" y="437" width="0.2" height="15.0" fill="rgb(247,220,51)" rx="2" ry="2" />
<text  x="1022.26" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (822 samples, 1.65%)</title><rect x="751.5" y="421" width="19.5" height="15.0" fill="rgb(254,40,13)" rx="2" ry="2" />
<text  x="754.53" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_poll (11 samples, 0.02%)</title><rect x="12.0" y="453" width="0.3" height="15.0" fill="rgb(234,149,38)" rx="2" ry="2" />
<text  x="15.03" y="463.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (9 samples, 0.02%)</title><rect x="708.8" y="389" width="0.2" height="15.0" fill="rgb(242,161,51)" rx="2" ry="2" />
<text  x="711.78" y="399.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (892 samples, 1.79%)</title><rect x="1100.7" y="453" width="21.1" height="15.0" fill="rgb(241,2,31)" rx="2" ry="2" />
<text  x="1103.73" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (2,001 samples, 4.01%)</title><rect x="889.2" y="373" width="47.3" height="15.0" fill="rgb(232,164,6)" rx="2" ry="2" />
<text  x="892.20" y="383.5" >core..</text>
</g>
<g >
<title>nohz_newidle_balance (13 samples, 0.03%)</title><rect x="22.8" y="437" width="0.3" height="15.0" fill="rgb(245,38,32)" rx="2" ry="2" />
<text  x="25.83" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (54 samples, 0.11%)</title><rect x="845.9" y="293" width="1.3" height="15.0" fill="rgb(220,188,18)" rx="2" ry="2" />
<text  x="848.93" y="303.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8 samples, 0.02%)</title><rect x="1100.5" y="421" width="0.2" height="15.0" fill="rgb(214,200,11)" rx="2" ry="2" />
<text  x="1103.54" y="431.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (157 samples, 0.31%)</title><rect x="843.5" y="373" width="3.7" height="15.0" fill="rgb(211,12,16)" rx="2" ry="2" />
<text  x="846.49" y="383.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (1,061 samples, 2.12%)</title><rect x="951.5" y="421" width="25.1" height="15.0" fill="rgb(214,180,36)" rx="2" ry="2" />
<text  x="954.51" y="431.5" >r..</text>
</g>
<g >
<title>__schedule (224 samples, 0.45%)</title><rect x="1139.4" y="485" width="5.3" height="15.0" fill="rgb(211,65,13)" rx="2" ry="2" />
<text  x="1142.40" y="495.5" ></text>
</g>
<g >
<title>ion (230 samples, 0.46%)</title><rect x="12.4" y="437" width="5.5" height="15.0" fill="rgb(238,86,6)" rx="2" ry="2" />
<text  x="15.43" y="447.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (16 samples, 0.03%)</title><rect x="936.5" y="421" width="0.3" height="15.0" fill="rgb(217,177,51)" rx="2" ry="2" />
<text  x="939.47" y="431.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_key_value (12 samples, 0.02%)</title><rect x="1021.6" y="533" width="0.3" height="15.0" fill="rgb(241,119,13)" rx="2" ry="2" />
<text  x="1024.60" y="543.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (145 samples, 0.29%)</title><rect x="860.5" y="309" width="3.4" height="15.0" fill="rgb(220,44,23)" rx="2" ry="2" />
<text  x="863.50" y="319.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,386 samples, 2.77%)</title><rect x="1100.2" y="469" width="32.8" height="15.0" fill="rgb(252,17,43)" rx="2" ry="2" />
<text  x="1103.24" y="479.5" >cp..</text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.13%)</title><rect x="870.1" y="325" width="1.5" height="15.0" fill="rgb(220,225,26)" rx="2" ry="2" />
<text  x="873.07" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (79 samples, 0.16%)</title><rect x="10.1" y="453" width="1.9" height="15.0" fill="rgb(210,229,17)" rx="2" ry="2" />
<text  x="13.12" y="463.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (12 samples, 0.02%)</title><rect x="18.0" y="357" width="0.3" height="15.0" fill="rgb(211,188,35)" rx="2" ry="2" />
<text  x="21.01" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (5 samples, 0.01%)</title><rect x="739.6" y="325" width="0.1" height="15.0" fill="rgb(253,214,38)" rx="2" ry="2" />
<text  x="742.58" y="335.5" ></text>
</g>
<g >
<title>NaClSysRead (18,936 samples, 37.91%)</title><rect x="144.6" y="517" width="447.3" height="15.0" fill="rgb(241,204,22)" rx="2" ry="2" />
<text  x="147.60" y="527.5" >NaClSysRead</text>
</g>
<g >
<title>poll_idle (718 samples, 1.44%)</title><rect x="1149.3" y="389" width="17.0" height="15.0" fill="rgb(225,125,37)" rx="2" ry="2" />
<text  x="1152.32" y="399.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (8 samples, 0.02%)</title><rect x="14.6" y="101" width="0.1" height="15.0" fill="rgb(245,136,5)" rx="2" ry="2" />
<text  x="17.56" y="111.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (104 samples, 0.21%)</title><rect x="837.0" y="341" width="2.5" height="15.0" fill="rgb(209,20,8)" rx="2" ry="2" />
<text  x="840.00" y="351.5" ></text>
</g>
<g >
<title>__free_one_page (10 samples, 0.02%)</title><rect x="144.2" y="149" width="0.3" height="15.0" fill="rgb(232,103,4)" rx="2" ry="2" />
<text  x="147.24" y="159.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (12 samples, 0.02%)</title><rect x="1025.3" y="549" width="0.3" height="15.0" fill="rgb(214,154,45)" rx="2" ry="2" />
<text  x="1028.29" y="559.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (30 samples, 0.06%)</title><rect x="142.3" y="453" width="0.7" height="15.0" fill="rgb(225,78,0)" rx="2" ry="2" />
<text  x="145.31" y="463.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (315 samples, 0.63%)</title><rect x="879.2" y="453" width="7.4" height="15.0" fill="rgb(216,226,29)" rx="2" ry="2" />
<text  x="882.19" y="463.5" ></text>
</g>
<g >
<title>__GI___poll (14 samples, 0.03%)</title><rect x="12.0" y="501" width="0.3" height="15.0" fill="rgb(234,165,49)" rx="2" ry="2" />
<text  x="15.01" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (19 samples, 0.04%)</title><rect x="872.7" y="293" width="0.5" height="15.0" fill="rgb(214,19,20)" rx="2" ry="2" />
<text  x="875.74" y="303.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (287 samples, 0.57%)</title><rect x="173.6" y="421" width="6.7" height="15.0" fill="rgb(248,192,28)" rx="2" ry="2" />
<text  x="176.56" y="431.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,855 samples, 7.72%)</title><rect x="1098.9" y="565" width="91.1" height="15.0" fill="rgb(214,129,25)" rx="2" ry="2" />
<text  x="1101.91" y="575.5" >secondary_..</text>
</g>
<g >
<title>alloc_page_buffers (13 samples, 0.03%)</title><rect x="13.4" y="149" width="0.3" height="15.0" fill="rgb(207,30,11)" rx="2" ry="2" />
<text  x="16.40" y="159.5" ></text>
</g>
<g >
<title>__evlist__enable (79 samples, 0.16%)</title><rect x="10.1" y="517" width="1.9" height="15.0" fill="rgb(218,37,12)" rx="2" ry="2" />
<text  x="13.12" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (12 samples, 0.02%)</title><rect x="1144.4" y="437" width="0.3" height="15.0" fill="rgb(230,94,42)" rx="2" ry="2" />
<text  x="1147.41" y="447.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_key_value (12 samples, 0.02%)</title><rect x="1046.3" y="517" width="0.3" height="15.0" fill="rgb(215,25,53)" rx="2" ry="2" />
<text  x="1049.31" y="527.5" ></text>
</g>
<g >
<title>pick_next_task_fair (16 samples, 0.03%)</title><rect x="22.8" y="469" width="0.4" height="15.0" fill="rgb(236,73,53)" rx="2" ry="2" />
<text  x="25.78" y="479.5" ></text>
</g>
<g >
<title>NaClLog (19 samples, 0.04%)</title><rect x="661.8" y="485" width="0.4" height="15.0" fill="rgb(233,195,47)" rx="2" ry="2" />
<text  x="664.77" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.02%)</title><rect x="723.8" y="309" width="0.2" height="15.0" fill="rgb(216,88,3)" rx="2" ry="2" />
<text  x="726.78" y="319.5" ></text>
</g>
<g >
<title>sched_clock_cpu (15 samples, 0.03%)</title><rect x="1131.7" y="437" width="0.4" height="15.0" fill="rgb(226,20,16)" rx="2" ry="2" />
<text  x="1134.73" y="447.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (14 samples, 0.03%)</title><rect x="1046.0" y="517" width="0.3" height="15.0" fill="rgb(210,174,20)" rx="2" ry="2" />
<text  x="1048.98" y="527.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (41 samples, 0.08%)</title><rect x="1148.4" y="389" width="0.9" height="15.0" fill="rgb(244,155,51)" rx="2" ry="2" />
<text  x="1151.35" y="399.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (11 samples, 0.02%)</title><rect x="13.4" y="117" width="0.3" height="15.0" fill="rgb(205,91,30)" rx="2" ry="2" />
<text  x="16.43" y="127.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (6 samples, 0.01%)</title><rect x="1136.3" y="485" width="0.1" height="15.0" fill="rgb(225,123,37)" rx="2" ry="2" />
<text  x="1139.28" y="495.5" ></text>
</g>
<g >
<title>generic_update_time (5 samples, 0.01%)</title><rect x="12.6" y="181" width="0.1" height="15.0" fill="rgb(245,127,11)" rx="2" ry="2" />
<text  x="15.62" y="191.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (78 samples, 0.16%)</title><rect x="857.9" y="357" width="1.9" height="15.0" fill="rgb(238,62,6)" rx="2" ry="2" />
<text  x="860.93" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (9 samples, 0.02%)</title><rect x="1140.1" y="437" width="0.2" height="15.0" fill="rgb(216,2,19)" rx="2" ry="2" />
<text  x="1143.06" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,344 samples, 2.69%)</title><rect x="847.2" y="389" width="31.7" height="15.0" fill="rgb(220,79,3)" rx="2" ry="2" />
<text  x="850.20" y="399.5" >ha..</text>
</g>
<g >
<title>_nohz_idle_balance (83 samples, 0.17%)</title><rect x="1179.8" y="357" width="1.9" height="15.0" fill="rgb(226,166,47)" rx="2" ry="2" />
<text  x="1182.77" y="367.5" ></text>
</g>
<g >
<title>cmd_record (330 samples, 0.66%)</title><rect x="10.1" y="549" width="7.8" height="15.0" fill="rgb(217,138,27)" rx="2" ry="2" />
<text  x="13.12" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (271 samples, 0.54%)</title><rect x="872.5" y="309" width="6.4" height="15.0" fill="rgb(220,204,11)" rx="2" ry="2" />
<text  x="875.55" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (559 samples, 1.12%)</title><rect x="435.8" y="389" width="13.2" height="15.0" fill="rgb(210,62,15)" rx="2" ry="2" />
<text  x="438.83" y="399.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (25 samples, 0.05%)</title><rect x="1135.4" y="421" width="0.6" height="15.0" fill="rgb(216,208,35)" rx="2" ry="2" />
<text  x="1138.41" y="431.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (12 samples, 0.02%)</title><rect x="947.8" y="373" width="0.2" height="15.0" fill="rgb(233,55,27)" rx="2" ry="2" />
<text  x="950.76" y="383.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (24 samples, 0.05%)</title><rect x="1068.8" y="485" width="0.6" height="15.0" fill="rgb(225,207,7)" rx="2" ry="2" />
<text  x="1071.82" y="495.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (22 samples, 0.04%)</title><rect x="26.0" y="373" width="0.5" height="15.0" fill="rgb(243,90,22)" rx="2" ry="2" />
<text  x="28.97" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (5 samples, 0.01%)</title><rect x="143.7" y="213" width="0.1" height="15.0" fill="rgb(241,25,53)" rx="2" ry="2" />
<text  x="146.65" y="223.5" ></text>
</g>
<g >
<title>unmap_page_range (54 samples, 0.11%)</title><rect x="143.2" y="293" width="1.3" height="15.0" fill="rgb(227,136,0)" rx="2" ry="2" />
<text  x="146.20" y="303.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2,002 samples, 4.01%)</title><rect x="889.2" y="421" width="47.3" height="15.0" fill="rgb(238,210,35)" rx="2" ry="2" />
<text  x="892.18" y="431.5" >&lt;loc..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (33 samples, 0.07%)</title><rect x="724.0" y="325" width="0.8" height="15.0" fill="rgb(210,144,15)" rx="2" ry="2" />
<text  x="727.04" y="335.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (169 samples, 0.34%)</title><rect x="721.7" y="373" width="4.0" height="15.0" fill="rgb(219,229,25)" rx="2" ry="2" />
<text  x="724.72" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (133 samples, 0.27%)</title><rect x="844.1" y="341" width="3.1" height="15.0" fill="rgb(212,170,16)" rx="2" ry="2" />
<text  x="847.06" y="351.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (316 samples, 0.63%)</title><rect x="791.7" y="405" width="7.5" height="15.0" fill="rgb(246,33,2)" rx="2" ry="2" />
<text  x="794.69" y="415.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (34 samples, 0.07%)</title><rect x="13.3" y="181" width="0.8" height="15.0" fill="rgb(218,104,24)" rx="2" ry="2" />
<text  x="16.26" y="191.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (269 samples, 0.54%)</title><rect x="771.3" y="373" width="6.3" height="15.0" fill="rgb(213,74,0)" rx="2" ry="2" />
<text  x="774.26" y="383.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (5 samples, 0.01%)</title><rect x="12.6" y="149" width="0.1" height="15.0" fill="rgb(227,149,38)" rx="2" ry="2" />
<text  x="15.62" y="159.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (28 samples, 0.06%)</title><rect x="1187.2" y="437" width="0.7" height="15.0" fill="rgb(253,107,32)" rx="2" ry="2" />
<text  x="1190.24" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (147 samples, 0.29%)</title><rect x="852.3" y="293" width="3.4" height="15.0" fill="rgb(220,4,45)" rx="2" ry="2" />
<text  x="855.26" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (2,002 samples, 4.01%)</title><rect x="889.2" y="437" width="47.3" height="15.0" fill="rgb(206,129,34)" rx="2" ry="2" />
<text  x="892.18" y="447.5" >core..</text>
</g>
<g >
<title>tick_nohz_get_sleep_length (69 samples, 0.14%)</title><rect x="1134.5" y="453" width="1.6" height="15.0" fill="rgb(218,166,2)" rx="2" ry="2" />
<text  x="1137.47" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (5 samples, 0.01%)</title><rect x="739.5" y="309" width="0.1" height="15.0" fill="rgb(213,114,25)" rx="2" ry="2" />
<text  x="742.46" y="319.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (268 samples, 0.54%)</title><rect x="439.9" y="357" width="6.4" height="15.0" fill="rgb(227,122,3)" rx="2" ry="2" />
<text  x="442.94" y="367.5" ></text>
</g>
<g >
<title>NaClSysExecve (5 samples, 0.01%)</title><rect x="143.1" y="517" width="0.1" height="15.0" fill="rgb(232,145,28)" rx="2" ry="2" />
<text  x="146.08" y="527.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get (13 samples, 0.03%)</title><rect x="699.5" y="405" width="0.3" height="15.0" fill="rgb(210,96,36)" rx="2" ry="2" />
<text  x="702.47" y="415.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (73 samples, 0.15%)</title><rect x="862.2" y="261" width="1.7" height="15.0" fill="rgb(219,154,14)" rx="2" ry="2" />
<text  x="865.20" y="271.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (82 samples, 0.16%)</title><rect x="841.6" y="405" width="1.9" height="15.0" fill="rgb(240,46,21)" rx="2" ry="2" />
<text  x="844.56" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1,304 samples, 2.61%)</title><rect x="458.4" y="389" width="30.8" height="15.0" fill="rgb(222,136,9)" rx="2" ry="2" />
<text  x="461.39" y="399.5" >co..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (16 samples, 0.03%)</title><rect x="936.5" y="405" width="0.3" height="15.0" fill="rgb(253,61,48)" rx="2" ry="2" />
<text  x="939.47" y="415.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (6 samples, 0.01%)</title><rect x="1132.4" y="437" width="0.2" height="15.0" fill="rgb(247,4,39)" rx="2" ry="2" />
<text  x="1135.41" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (54 samples, 0.11%)</title><rect x="143.2" y="389" width="1.3" height="15.0" fill="rgb(226,34,16)" rx="2" ry="2" />
<text  x="146.20" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (5 samples, 0.01%)</title><rect x="1136.3" y="469" width="0.1" height="15.0" fill="rgb(212,87,45)" rx="2" ry="2" />
<text  x="1139.31" y="479.5" ></text>
</g>
<g >
<title>lru_cache_add (9 samples, 0.02%)</title><rect x="1019.3" y="421" width="0.2" height="15.0" fill="rgb(251,188,37)" rx="2" ry="2" />
<text  x="1022.29" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (9 samples, 0.02%)</title><rect x="1135.8" y="389" width="0.2" height="15.0" fill="rgb(214,61,37)" rx="2" ry="2" />
<text  x="1138.79" y="399.5" ></text>
</g>
<g >
<title>idle_cpu (5 samples, 0.01%)</title><rect x="1181.8" y="357" width="0.1" height="15.0" fill="rgb(245,131,41)" rx="2" ry="2" />
<text  x="1184.83" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (141 samples, 0.28%)</title><rect x="737.3" y="373" width="3.3" height="15.0" fill="rgb(242,137,51)" rx="2" ry="2" />
<text  x="740.31" y="383.5" ></text>
</g>
<g >
<title>core::cmp::min_by (12 samples, 0.02%)</title><rect x="888.8" y="405" width="0.3" height="15.0" fill="rgb(205,76,23)" rx="2" ry="2" />
<text  x="891.82" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.02%)</title><rect x="12.0" y="485" width="0.3" height="15.0" fill="rgb(227,117,42)" rx="2" ry="2" />
<text  x="15.03" y="495.5" ></text>
</g>
<g >
<title>llist_add_batch (6 samples, 0.01%)</title><rect x="26.3" y="325" width="0.2" height="15.0" fill="rgb(218,172,51)" rx="2" ry="2" />
<text  x="29.32" y="335.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.13%)</title><rect x="870.1" y="341" width="1.5" height="15.0" fill="rgb(211,158,30)" rx="2" ry="2" />
<text  x="873.07" y="351.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (21 samples, 0.04%)</title><rect x="1018.6" y="373" width="0.4" height="15.0" fill="rgb(224,154,25)" rx="2" ry="2" />
<text  x="1021.55" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (17 samples, 0.03%)</title><rect x="735.0" y="277" width="0.4" height="15.0" fill="rgb(235,41,14)" rx="2" ry="2" />
<text  x="738.00" y="287.5" ></text>
</g>
<g >
<title>NaClLog (14 samples, 0.03%)</title><rect x="613.1" y="517" width="0.3" height="15.0" fill="rgb(226,150,54)" rx="2" ry="2" />
<text  x="616.11" y="527.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (24 samples, 0.05%)</title><rect x="1068.8" y="517" width="0.6" height="15.0" fill="rgb(252,217,19)" rx="2" ry="2" />
<text  x="1071.82" y="527.5" ></text>
</g>
<g >
<title>newidle_balance (356 samples, 0.71%)</title><rect x="1178.0" y="389" width="8.4" height="15.0" fill="rgb(225,146,7)" rx="2" ry="2" />
<text  x="1180.98" y="399.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (9 samples, 0.02%)</title><rect x="1148.1" y="357" width="0.2" height="15.0" fill="rgb(225,206,23)" rx="2" ry="2" />
<text  x="1151.12" y="367.5" ></text>
</g>
<g >
<title>do_sys_poll (11 samples, 0.02%)</title><rect x="12.0" y="437" width="0.3" height="15.0" fill="rgb(221,34,13)" rx="2" ry="2" />
<text  x="15.03" y="447.5" ></text>
</g>
<g >
<title>generic_perform_write (214 samples, 0.43%)</title><rect x="12.7" y="213" width="5.1" height="15.0" fill="rgb(242,182,35)" rx="2" ry="2" />
<text  x="15.74" y="223.5" ></text>
</g>
<g >
<title>smp_call_function_single (65 samples, 0.13%)</title><rect x="10.4" y="325" width="1.5" height="15.0" fill="rgb(235,99,38)" rx="2" ry="2" />
<text  x="13.35" y="335.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (12 samples, 0.02%)</title><rect x="947.8" y="357" width="0.2" height="15.0" fill="rgb(226,204,12)" rx="2" ry="2" />
<text  x="950.76" y="367.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (7,870 samples, 15.75%)</title><rect x="203.7" y="421" width="185.9" height="15.0" fill="rgb(205,105,27)" rx="2" ry="2" />
<text  x="206.72" y="431.5" >ringbuf::ring_buffer::Ri..</text>
</g>
<g >
<title>CompareAndSwap (23 samples, 0.05%)</title><rect x="1023.4" y="549" width="0.5" height="15.0" fill="rgb(241,81,32)" rx="2" ry="2" />
<text  x="1026.40" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (412 samples, 0.82%)</title><rect x="831.8" y="389" width="9.8" height="15.0" fill="rgb(237,38,12)" rx="2" ry="2" />
<text  x="834.82" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter (870 samples, 1.74%)</title><rect x="1147.6" y="421" width="20.6" height="15.0" fill="rgb(237,97,53)" rx="2" ry="2" />
<text  x="1150.65" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (9 samples, 0.02%)</title><rect x="1148.1" y="341" width="0.2" height="15.0" fill="rgb(249,23,49)" rx="2" ry="2" />
<text  x="1151.12" y="351.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (5 samples, 0.01%)</title><rect x="1019.5" y="421" width="0.2" height="15.0" fill="rgb(253,49,46)" rx="2" ry="2" />
<text  x="1022.55" y="431.5" ></text>
</g>
<g >
<title>NaClLog (189 samples, 0.38%)</title><rect x="652.7" y="501" width="4.5" height="15.0" fill="rgb(216,153,13)" rx="2" ry="2" />
<text  x="655.75" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;u64,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt;&gt; (323 samples, 0.65%)</title><rect x="700.2" y="453" width="7.7" height="15.0" fill="rgb(244,180,34)" rx="2" ry="2" />
<text  x="703.23" y="463.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (8 samples, 0.02%)</title><rect x="141.2" y="533" width="0.2" height="15.0" fill="rgb(237,33,50)" rx="2" ry="2" />
<text  x="144.22" y="543.5" ></text>
</g>
<g >
<title>__set_page_dirty (6 samples, 0.01%)</title><rect x="16.1" y="133" width="0.2" height="15.0" fill="rgb(230,144,25)" rx="2" ry="2" />
<text  x="19.12" y="143.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (765 samples, 1.53%)</title><rect x="1026.6" y="549" width="18.1" height="15.0" fill="rgb(234,182,44)" rx="2" ry="2" />
<text  x="1029.61" y="559.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (5 samples, 0.01%)</title><rect x="16.9" y="37" width="0.1" height="15.0" fill="rgb(230,36,34)" rx="2" ry="2" />
<text  x="19.87" y="47.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (78 samples, 0.16%)</title><rect x="10.1" y="421" width="1.9" height="15.0" fill="rgb(227,17,44)" rx="2" ry="2" />
<text  x="13.12" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (577 samples, 1.16%)</title><rect x="778.1" y="453" width="13.6" height="15.0" fill="rgb(248,57,8)" rx="2" ry="2" />
<text  x="781.06" y="463.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (157 samples, 0.31%)</title><rect x="843.5" y="357" width="3.7" height="15.0" fill="rgb(248,185,38)" rx="2" ry="2" />
<text  x="846.49" y="367.5" ></text>
</g>
<g >
<title>NaClValidateCode (30 samples, 0.06%)</title><rect x="142.3" y="485" width="0.7" height="15.0" fill="rgb(208,18,46)" rx="2" ry="2" />
<text  x="145.31" y="495.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (362 samples, 0.72%)</title><rect x="630.3" y="501" width="8.6" height="15.0" fill="rgb(252,50,43)" rx="2" ry="2" />
<text  x="633.31" y="511.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (316 samples, 0.63%)</title><rect x="791.7" y="421" width="7.5" height="15.0" fill="rgb(236,164,50)" rx="2" ry="2" />
<text  x="794.69" y="431.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (222 samples, 0.44%)</title><rect x="12.6" y="261" width="5.2" height="15.0" fill="rgb(252,13,14)" rx="2" ry="2" />
<text  x="15.55" y="271.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (258 samples, 0.52%)</title><rect x="167.4" y="405" width="6.1" height="15.0" fill="rgb(208,119,16)" rx="2" ry="2" />
<text  x="170.44" y="415.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (25 samples, 0.05%)</title><rect x="878.4" y="261" width="0.5" height="15.0" fill="rgb(205,3,20)" rx="2" ry="2" />
<text  x="881.36" y="271.5" ></text>
</g>
<g >
<title>new_sync_write (225 samples, 0.45%)</title><rect x="12.5" y="325" width="5.3" height="15.0" fill="rgb(219,43,25)" rx="2" ry="2" />
<text  x="15.53" y="335.5" ></text>
</g>
<g >
<title>schedule_idle (235 samples, 0.47%)</title><rect x="1139.4" y="501" width="5.5" height="15.0" fill="rgb(213,219,43)" rx="2" ry="2" />
<text  x="1142.36" y="511.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (6 samples, 0.01%)</title><rect x="143.7" y="229" width="0.1" height="15.0" fill="rgb(213,167,0)" rx="2" ry="2" />
<text  x="146.65" y="239.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (8 samples, 0.02%)</title><rect x="25.8" y="437" width="0.1" height="15.0" fill="rgb(242,61,3)" rx="2" ry="2" />
<text  x="28.76" y="447.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (74 samples, 0.15%)</title><rect x="948.5" y="389" width="1.7" height="15.0" fill="rgb(220,26,22)" rx="2" ry="2" />
<text  x="951.47" y="399.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (8,067 samples, 16.15%)</title><rect x="392.7" y="405" width="190.5" height="15.0" fill="rgb(232,221,25)" rx="2" ry="2" />
<text  x="395.67" y="415.5" >ringbuf::consumer::Consu..</text>
</g>
<g >
<title>pool-whoopsie (353 samples, 0.71%)</title><rect x="18.5" y="581" width="8.3" height="15.0" fill="rgb(215,137,54)" rx="2" ry="2" />
<text  x="21.48" y="591.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (200 samples, 0.40%)</title><rect x="732.2" y="325" width="4.7" height="15.0" fill="rgb(242,63,11)" rx="2" ry="2" />
<text  x="735.16" y="335.5" ></text>
</g>
<g >
<title>NaClSysWrite (12 samples, 0.02%)</title><rect x="31.1" y="549" width="0.3" height="15.0" fill="rgb(245,220,5)" rx="2" ry="2" />
<text  x="34.14" y="559.5" ></text>
</g>
<g >
<title>zap_pte_range (54 samples, 0.11%)</title><rect x="143.2" y="261" width="1.3" height="15.0" fill="rgb(242,74,4)" rx="2" ry="2" />
<text  x="146.20" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1,211 samples, 2.42%)</title><rect x="359.8" y="405" width="28.6" height="15.0" fill="rgb(232,147,16)" rx="2" ry="2" />
<text  x="362.79" y="415.5" >co..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (225 samples, 0.45%)</title><rect x="694.2" y="453" width="5.3" height="15.0" fill="rgb(222,93,22)" rx="2" ry="2" />
<text  x="697.16" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (43 samples, 0.09%)</title><rect x="740.6" y="469" width="1.1" height="15.0" fill="rgb(216,151,22)" rx="2" ry="2" />
<text  x="743.64" y="479.5" ></text>
</g>
<g >
<title>__vm_munmap (54 samples, 0.11%)</title><rect x="143.2" y="373" width="1.3" height="15.0" fill="rgb(205,164,31)" rx="2" ry="2" />
<text  x="146.20" y="383.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (15 samples, 0.03%)</title><rect x="30.8" y="549" width="0.3" height="15.0" fill="rgb(217,157,50)" rx="2" ry="2" />
<text  x="33.79" y="559.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (14 samples, 0.03%)</title><rect x="1046.0" y="485" width="0.3" height="15.0" fill="rgb(246,164,31)" rx="2" ry="2" />
<text  x="1048.98" y="495.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1,862 samples, 3.73%)</title><rect x="1146.0" y="533" width="44.0" height="15.0" fill="rgb(228,149,42)" rx="2" ry="2" />
<text  x="1148.99" y="543.5" >x86_..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (8,563 samples, 17.14%)</title><rect x="389.6" y="437" width="202.3" height="15.0" fill="rgb(212,100,30)" rx="2" ry="2" />
<text  x="392.62" y="447.5" >ringbuf::consumer::Consume..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (157 samples, 0.31%)</title><rect x="843.5" y="405" width="3.7" height="15.0" fill="rgb(249,204,53)" rx="2" ry="2" />
<text  x="846.49" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.05%)</title><rect x="861.6" y="261" width="0.6" height="15.0" fill="rgb(218,114,38)" rx="2" ry="2" />
<text  x="864.56" y="271.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (12 samples, 0.02%)</title><rect x="739.7" y="309" width="0.3" height="15.0" fill="rgb(210,112,28)" rx="2" ry="2" />
<text  x="742.70" y="319.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (222 samples, 0.44%)</title><rect x="12.6" y="245" width="5.2" height="15.0" fill="rgb(250,215,48)" rx="2" ry="2" />
<text  x="15.55" y="255.5" ></text>
</g>
<g >
<title>generic_write_end (58 samples, 0.12%)</title><rect x="15.9" y="181" width="1.4" height="15.0" fill="rgb(212,192,48)" rx="2" ry="2" />
<text  x="18.93" y="191.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (225 samples, 0.45%)</title><rect x="694.2" y="437" width="5.3" height="15.0" fill="rgb(250,111,40)" rx="2" ry="2" />
<text  x="697.16" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (18 samples, 0.04%)</title><rect x="27.1" y="549" width="0.5" height="15.0" fill="rgb(251,181,48)" rx="2" ry="2" />
<text  x="30.15" y="559.5" ></text>
</g>
<g >
<title>NaClLog (31 samples, 0.06%)</title><rect x="30.1" y="549" width="0.7" height="15.0" fill="rgb(254,14,2)" rx="2" ry="2" />
<text  x="33.05" y="559.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (164 samples, 0.33%)</title><rect x="1140.3" y="437" width="3.9" height="15.0" fill="rgb(229,158,0)" rx="2" ry="2" />
<text  x="1143.28" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (145 samples, 0.29%)</title><rect x="860.5" y="293" width="3.4" height="15.0" fill="rgb(248,101,23)" rx="2" ry="2" />
<text  x="863.50" y="303.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (16 samples, 0.03%)</title><rect x="127.9" y="533" width="0.4" height="15.0" fill="rgb(234,14,46)" rx="2" ry="2" />
<text  x="130.94" y="543.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (63 samples, 0.13%)</title><rect x="59.6" y="549" width="1.5" height="15.0" fill="rgb(244,155,3)" rx="2" ry="2" />
<text  x="62.63" y="559.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (25 samples, 0.05%)</title><rect x="16.5" y="117" width="0.6" height="15.0" fill="rgb(224,133,29)" rx="2" ry="2" />
<text  x="19.47" y="127.5" ></text>
</g>
<g >
<title>newidle_balance (14 samples, 0.03%)</title><rect x="22.8" y="453" width="0.3" height="15.0" fill="rgb(217,23,46)" rx="2" ry="2" />
<text  x="25.80" y="463.5" ></text>
</g>
<g >
<title>alloc_buffer_head (11 samples, 0.02%)</title><rect x="13.4" y="133" width="0.3" height="15.0" fill="rgb(254,168,37)" rx="2" ry="2" />
<text  x="16.43" y="143.5" ></text>
</g>
<g >
<title>DynArrayGet (10 samples, 0.02%)</title><rect x="1023.9" y="549" width="0.3" height="15.0" fill="rgb(236,218,38)" rx="2" ry="2" />
<text  x="1026.94" y="559.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (426 samples, 0.85%)</title><rect x="847.9" y="357" width="10.0" height="15.0" fill="rgb(220,224,11)" rx="2" ry="2" />
<text  x="850.86" y="367.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (14 samples, 0.03%)</title><rect x="1046.0" y="501" width="0.3" height="15.0" fill="rgb(244,33,26)" rx="2" ry="2" />
<text  x="1048.98" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (17 samples, 0.03%)</title><rect x="948.1" y="389" width="0.4" height="15.0" fill="rgb(227,165,5)" rx="2" ry="2" />
<text  x="951.07" y="399.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (219 samples, 0.44%)</title><rect x="873.2" y="277" width="5.2" height="15.0" fill="rgb(219,172,46)" rx="2" ry="2" />
<text  x="876.19" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (54 samples, 0.11%)</title><rect x="1017.8" y="421" width="1.2" height="15.0" fill="rgb(238,118,8)" rx="2" ry="2" />
<text  x="1020.77" y="431.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (93 samples, 0.19%)</title><rect x="855.7" y="293" width="2.2" height="15.0" fill="rgb(223,27,45)" rx="2" ry="2" />
<text  x="858.73" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (41 samples, 0.08%)</title><rect x="1135.1" y="437" width="1.0" height="15.0" fill="rgb(206,226,15)" rx="2" ry="2" />
<text  x="1138.10" y="447.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (245 samples, 0.49%)</title><rect x="708.7" y="437" width="5.7" height="15.0" fill="rgb(238,193,29)" rx="2" ry="2" />
<text  x="711.66" y="447.5" ></text>
</g>
<g >
<title>[sel_ldr] (1,305 samples, 2.61%)</title><rect x="986.1" y="549" width="30.9" height="15.0" fill="rgb(207,191,6)" rx="2" ry="2" />
<text  x="989.14" y="559.5" >[s..</text>
</g>
<g >
<title>NaClSysExitDecoder (55 samples, 0.11%)</title><rect x="143.2" y="533" width="1.3" height="15.0" fill="rgb(218,13,45)" rx="2" ry="2" />
<text  x="146.20" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (33 samples, 0.07%)</title><rect x="833.9" y="341" width="0.8" height="15.0" fill="rgb(251,61,33)" rx="2" ry="2" />
<text  x="836.90" y="351.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15 samples, 0.03%)</title><rect x="1021.2" y="517" width="0.4" height="15.0" fill="rgb(233,94,8)" rx="2" ry="2" />
<text  x="1024.25" y="527.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (9 samples, 0.02%)</title><rect x="708.8" y="373" width="0.2" height="15.0" fill="rgb(217,84,22)" rx="2" ry="2" />
<text  x="711.78" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (412 samples, 0.82%)</title><rect x="831.8" y="373" width="9.8" height="15.0" fill="rgb(228,215,11)" rx="2" ry="2" />
<text  x="834.82" y="383.5" ></text>
</g>
<g >
<title>ext4_da_write_end (67 samples, 0.13%)</title><rect x="15.8" y="197" width="1.5" height="15.0" fill="rgb(224,160,24)" rx="2" ry="2" />
<text  x="18.76" y="207.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (65 samples, 0.13%)</title><rect x="948.7" y="373" width="1.5" height="15.0" fill="rgb(228,72,34)" rx="2" ry="2" />
<text  x="951.68" y="383.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (157 samples, 0.31%)</title><rect x="843.5" y="389" width="3.7" height="15.0" fill="rgb(238,91,29)" rx="2" ry="2" />
<text  x="846.49" y="399.5" ></text>
</g>
<g >
<title>ktime_get (7 samples, 0.01%)</title><rect x="1188.0" y="421" width="0.2" height="15.0" fill="rgb(231,140,25)" rx="2" ry="2" />
<text  x="1190.99" y="431.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (184 samples, 0.37%)</title><rect x="721.4" y="421" width="4.3" height="15.0" fill="rgb(248,168,7)" rx="2" ry="2" />
<text  x="724.37" y="431.5" ></text>
</g>
<g >
<title>do_iter_write (20 samples, 0.04%)</title><rect x="18.0" y="437" width="0.5" height="15.0" fill="rgb(253,90,5)" rx="2" ry="2" />
<text  x="21.01" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (480 samples, 0.96%)</title><rect x="965.2" y="389" width="11.3" height="15.0" fill="rgb(213,48,45)" rx="2" ry="2" />
<text  x="968.19" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (480 samples, 0.96%)</title><rect x="965.2" y="373" width="11.3" height="15.0" fill="rgb(236,35,3)" rx="2" ry="2" />
<text  x="968.19" y="383.5" ></text>
</g>
<g >
<title>cpuidle_select (5 samples, 0.01%)</title><rect x="22.3" y="485" width="0.1" height="15.0" fill="rgb(214,223,0)" rx="2" ry="2" />
<text  x="25.33" y="495.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (7 samples, 0.01%)</title><rect x="716.7" y="357" width="0.2" height="15.0" fill="rgb(213,186,21)" rx="2" ry="2" />
<text  x="719.69" y="367.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (8 samples, 0.02%)</title><rect x="1048.4" y="517" width="0.2" height="15.0" fill="rgb(227,8,8)" rx="2" ry="2" />
<text  x="1051.36" y="527.5" ></text>
</g>
<g >
<title>release_pages (25 samples, 0.05%)</title><rect x="143.9" y="213" width="0.6" height="15.0" fill="rgb(230,111,50)" rx="2" ry="2" />
<text  x="146.89" y="223.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (18,936 samples, 37.91%)</title><rect x="144.6" y="533" width="447.3" height="15.0" fill="rgb(237,55,39)" rx="2" ry="2" />
<text  x="147.60" y="543.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (193 samples, 0.39%)</title><rect x="732.2" y="309" width="4.5" height="15.0" fill="rgb(219,72,23)" rx="2" ry="2" />
<text  x="735.16" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt;&gt; (281 samples, 0.56%)</title><rect x="771.0" y="421" width="6.6" height="15.0" fill="rgb(206,138,54)" rx="2" ry="2" />
<text  x="773.97" y="431.5" ></text>
</g>
<g >
<title>vfs_write (227 samples, 0.45%)</title><rect x="12.5" y="341" width="5.3" height="15.0" fill="rgb(228,102,34)" rx="2" ry="2" />
<text  x="15.48" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.03%)</title><rect x="1098.4" y="549" width="0.4" height="15.0" fill="rgb(227,217,12)" rx="2" ry="2" />
<text  x="1101.39" y="559.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (8 samples, 0.02%)</title><rect x="1148.1" y="309" width="0.2" height="15.0" fill="rgb(205,24,18)" rx="2" ry="2" />
<text  x="1151.12" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (636 samples, 1.27%)</title><rect x="863.9" y="373" width="15.0" height="15.0" fill="rgb(214,15,38)" rx="2" ry="2" />
<text  x="866.93" y="383.5" ></text>
</g>
<g >
<title>vfs_write (21 samples, 0.04%)</title><rect x="18.0" y="501" width="0.5" height="15.0" fill="rgb(240,55,13)" rx="2" ry="2" />
<text  x="20.98" y="511.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (37 samples, 0.07%)</title><rect x="1172.2" y="357" width="0.8" height="15.0" fill="rgb(209,151,48)" rx="2" ry="2" />
<text  x="1175.17" y="367.5" ></text>
</g>
<g >
<title>NaClMutexLock (14 samples, 0.03%)</title><rect x="1025.0" y="549" width="0.3" height="15.0" fill="rgb(253,77,4)" rx="2" ry="2" />
<text  x="1027.95" y="559.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (10 samples, 0.02%)</title><rect x="1019.5" y="437" width="0.2" height="15.0" fill="rgb(212,59,41)" rx="2" ry="2" />
<text  x="1022.50" y="447.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (213 samples, 0.43%)</title><rect x="726.0" y="373" width="5.1" height="15.0" fill="rgb(247,179,16)" rx="2" ry="2" />
<text  x="729.05" y="383.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (31 samples, 0.06%)</title><rect x="141.4" y="533" width="0.7" height="15.0" fill="rgb(249,218,1)" rx="2" ry="2" />
<text  x="144.41" y="543.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (21 samples, 0.04%)</title><rect x="70.5" y="533" width="0.5" height="15.0" fill="rgb(242,7,2)" rx="2" ry="2" />
<text  x="73.50" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (271 samples, 0.54%)</title><rect x="851.5" y="309" width="6.4" height="15.0" fill="rgb(242,17,47)" rx="2" ry="2" />
<text  x="854.52" y="319.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (14 samples, 0.03%)</title><rect x="612.8" y="517" width="0.3" height="15.0" fill="rgb(217,126,30)" rx="2" ry="2" />
<text  x="615.78" y="527.5" ></text>
</g>
<g >
<title>get_typical_interval (22 samples, 0.04%)</title><rect x="1169.4" y="389" width="0.5" height="15.0" fill="rgb(234,75,23)" rx="2" ry="2" />
<text  x="1172.35" y="399.5" ></text>
</g>
<g >
<title>NaClLog (52 samples, 0.10%)</title><rect x="673.0" y="469" width="1.2" height="15.0" fill="rgb(242,122,43)" rx="2" ry="2" />
<text  x="676.01" y="479.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (29 samples, 0.06%)</title><rect x="845.2" y="293" width="0.7" height="15.0" fill="rgb(234,20,0)" rx="2" ry="2" />
<text  x="848.24" y="303.5" ></text>
</g>
<g >
<title>do_idle (142 samples, 0.28%)</title><rect x="23.3" y="453" width="3.4" height="15.0" fill="rgb(216,157,41)" rx="2" ry="2" />
<text  x="26.35" y="463.5" ></text>
</g>
<g >
<title>HandleStackContext (741 samples, 1.48%)</title><rect x="87.1" y="533" width="17.5" height="15.0" fill="rgb(211,92,0)" rx="2" ry="2" />
<text  x="90.12" y="543.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (14 samples, 0.03%)</title><rect x="612.1" y="517" width="0.4" height="15.0" fill="rgb(250,152,39)" rx="2" ry="2" />
<text  x="615.14" y="527.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (40 samples, 0.08%)</title><rect x="142.1" y="533" width="1.0" height="15.0" fill="rgb(226,196,47)" rx="2" ry="2" />
<text  x="145.14" y="543.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (34 samples, 0.07%)</title><rect x="731.1" y="373" width="0.8" height="15.0" fill="rgb(219,27,39)" rx="2" ry="2" />
<text  x="734.08" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (18,933 samples, 37.90%)</title><rect x="144.7" y="469" width="447.2" height="15.0" fill="rgb(248,206,23)" rx="2" ry="2" />
<text  x="147.67" y="479.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::sa..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (366 samples, 0.73%)</title><rect x="583.2" y="405" width="8.7" height="15.0" fill="rgb(240,222,37)" rx="2" ry="2" />
<text  x="586.23" y="415.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (651 samples, 1.30%)</title><rect x="831.8" y="421" width="15.4" height="15.0" fill="rgb(233,212,32)" rx="2" ry="2" />
<text  x="834.82" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (269 samples, 0.54%)</title><rect x="771.3" y="357" width="6.3" height="15.0" fill="rgb(254,82,41)" rx="2" ry="2" />
<text  x="774.26" y="367.5" ></text>
</g>
<g >
<title>event_function (63 samples, 0.13%)</title><rect x="10.4" y="277" width="1.5" height="15.0" fill="rgb(253,46,44)" rx="2" ry="2" />
<text  x="13.40" y="287.5" ></text>
</g>
<g >
<title>fdarray__poll (14 samples, 0.03%)</title><rect x="12.0" y="517" width="0.3" height="15.0" fill="rgb(238,142,2)" rx="2" ry="2" />
<text  x="15.01" y="527.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (37 samples, 0.07%)</title><rect x="16.4" y="133" width="0.9" height="15.0" fill="rgb(212,216,19)" rx="2" ry="2" />
<text  x="19.40" y="143.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (6 samples, 0.01%)</title><rect x="26.0" y="357" width="0.1" height="15.0" fill="rgb(246,72,18)" rx="2" ry="2" />
<text  x="28.99" y="367.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.02%)</title><rect x="708.8" y="405" width="0.2" height="15.0" fill="rgb(237,196,1)" rx="2" ry="2" />
<text  x="711.78" y="415.5" ></text>
</g>
<g >
<title>idle_cpu (8 samples, 0.02%)</title><rect x="1181.5" y="341" width="0.2" height="15.0" fill="rgb(221,195,47)" rx="2" ry="2" />
<text  x="1184.54" y="351.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (14 samples, 0.03%)</title><rect x="13.7" y="165" width="0.4" height="15.0" fill="rgb(227,180,32)" rx="2" ry="2" />
<text  x="16.73" y="175.5" ></text>
</g>
<g >
<title>update_rq_clock (17 samples, 0.03%)</title><rect x="1144.3" y="469" width="0.4" height="15.0" fill="rgb(237,64,10)" rx="2" ry="2" />
<text  x="1147.29" y="479.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 0.02%)</title><rect x="1021.6" y="501" width="0.3" height="15.0" fill="rgb(238,193,30)" rx="2" ry="2" />
<text  x="1024.60" y="511.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (72 samples, 0.14%)</title><rect x="14.1" y="181" width="1.7" height="15.0" fill="rgb(253,20,30)" rx="2" ry="2" />
<text  x="17.06" y="191.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (85 samples, 0.17%)</title><rect x="647.8" y="501" width="2.0" height="15.0" fill="rgb(245,122,35)" rx="2" ry="2" />
<text  x="650.79" y="511.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (3,808 samples, 7.62%)</title><rect x="886.6" y="453" width="90.0" height="15.0" fill="rgb(218,111,34)" rx="2" ry="2" />
<text  x="889.63" y="463.5" >rustposix:..</text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (281 samples, 0.56%)</title><rect x="771.0" y="405" width="6.6" height="15.0" fill="rgb(209,211,46)" rx="2" ry="2" />
<text  x="773.97" y="415.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::is_initialized (13 samples, 0.03%)</title><rect x="699.5" y="389" width="0.3" height="15.0" fill="rgb(210,58,14)" rx="2" ry="2" />
<text  x="702.47" y="399.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (26 samples, 0.05%)</title><rect x="1046.0" y="533" width="0.6" height="15.0" fill="rgb(254,132,22)" rx="2" ry="2" />
<text  x="1048.98" y="543.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (955 samples, 1.91%)</title><rect x="808.7" y="405" width="22.6" height="15.0" fill="rgb(233,102,20)" rx="2" ry="2" />
<text  x="811.72" y="415.5" >l..</text>
</g>
<g >
<title>NaClLog (28 samples, 0.06%)</title><rect x="1024.3" y="549" width="0.7" height="15.0" fill="rgb(252,91,0)" rx="2" ry="2" />
<text  x="1027.29" y="559.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (5 samples, 0.01%)</title><rect x="22.9" y="421" width="0.1" height="15.0" fill="rgb(215,82,7)" rx="2" ry="2" />
<text  x="25.85" y="431.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (29 samples, 0.06%)</title><rect x="1172.4" y="341" width="0.6" height="15.0" fill="rgb(232,132,12)" rx="2" ry="2" />
<text  x="1175.35" y="351.5" ></text>
</g>
<g >
<title>_start (5 samples, 0.01%)</title><rect x="1069.7" y="565" width="0.1" height="15.0" fill="rgb(208,8,13)" rx="2" ry="2" />
<text  x="1072.72" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (12 samples, 0.02%)</title><rect x="947.8" y="389" width="0.2" height="15.0" fill="rgb(248,34,47)" rx="2" ry="2" />
<text  x="950.76" y="399.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (7 samples, 0.01%)</title><rect x="29.5" y="549" width="0.2" height="15.0" fill="rgb(245,5,32)" rx="2" ry="2" />
<text  x="32.51" y="559.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (266 samples, 0.53%)</title><rect x="61.1" y="549" width="6.3" height="15.0" fill="rgb(242,229,49)" rx="2" ry="2" />
<text  x="64.12" y="559.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="863.8" y="245" width="0.1" height="15.0" fill="rgb(242,93,22)" rx="2" ry="2" />
<text  x="866.78" y="255.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (38 samples, 0.08%)</title><rect x="849.7" y="293" width="0.9" height="15.0" fill="rgb(234,2,32)" rx="2" ry="2" />
<text  x="852.68" y="303.5" ></text>
</g>
<g >
<title>dispatcher (18,934 samples, 37.90%)</title><rect x="144.6" y="485" width="447.3" height="15.0" fill="rgb(247,65,34)" rx="2" ry="2" />
<text  x="147.64" y="495.5" >dispatcher</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (17 samples, 0.03%)</title><rect x="448.6" y="341" width="0.4" height="15.0" fill="rgb(247,68,7)" rx="2" ry="2" />
<text  x="451.63" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (577 samples, 1.16%)</title><rect x="778.1" y="405" width="13.6" height="15.0" fill="rgb(205,161,24)" rx="2" ry="2" />
<text  x="781.06" y="415.5" ></text>
</g>
<g >
<title>sync_regs (17 samples, 0.03%)</title><rect x="1020.0" y="549" width="0.4" height="15.0" fill="rgb(213,215,13)" rx="2" ry="2" />
<text  x="1023.04" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (281 samples, 0.56%)</title><rect x="771.0" y="437" width="6.6" height="15.0" fill="rgb(216,48,37)" rx="2" ry="2" />
<text  x="773.97" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (190 samples, 0.38%)</title><rect x="826.8" y="341" width="4.5" height="15.0" fill="rgb(248,196,52)" rx="2" ry="2" />
<text  x="829.79" y="351.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (112 samples, 0.22%)</title><rect x="1183.7" y="341" width="2.7" height="15.0" fill="rgb(239,171,46)" rx="2" ry="2" />
<text  x="1186.72" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (317 samples, 0.63%)</title><rect x="631.1" y="485" width="7.5" height="15.0" fill="rgb(224,69,54)" rx="2" ry="2" />
<text  x="634.11" y="495.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (55 samples, 0.11%)</title><rect x="143.2" y="485" width="1.3" height="15.0" fill="rgb(227,219,42)" rx="2" ry="2" />
<text  x="146.20" y="495.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (156 samples, 0.31%)</title><rect x="100.4" y="517" width="3.7" height="15.0" fill="rgb(211,184,17)" rx="2" ry="2" />
<text  x="103.45" y="527.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (12 samples, 0.02%)</title><rect x="594.3" y="517" width="0.3" height="15.0" fill="rgb(220,97,19)" rx="2" ry="2" />
<text  x="597.31" y="527.5" ></text>
</g>
<g >
<title>native_write_msr (63 samples, 0.13%)</title><rect x="10.4" y="197" width="1.5" height="15.0" fill="rgb(251,174,35)" rx="2" ry="2" />
<text  x="13.40" y="207.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (55 samples, 0.11%)</title><rect x="143.2" y="501" width="1.3" height="15.0" fill="rgb(251,76,14)" rx="2" ry="2" />
<text  x="146.20" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (101 samples, 0.20%)</title><rect x="849.1" y="309" width="2.4" height="15.0" fill="rgb(212,119,23)" rx="2" ry="2" />
<text  x="852.14" y="319.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (11 samples, 0.02%)</title><rect x="16.7" y="85" width="0.3" height="15.0" fill="rgb(221,22,50)" rx="2" ry="2" />
<text  x="19.73" y="95.5" ></text>
</g>
<g >
<title>NaClSysExit (55 samples, 0.11%)</title><rect x="143.2" y="517" width="1.3" height="15.0" fill="rgb(211,141,19)" rx="2" ry="2" />
<text  x="146.20" y="527.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (35 samples, 0.07%)</title><rect x="1140.8" y="421" width="0.8" height="15.0" fill="rgb(239,52,21)" rx="2" ry="2" />
<text  x="1143.80" y="431.5" ></text>
</g>
<g >
<title>lind_write (12,774 samples, 25.57%)</title><rect x="675.1" y="501" width="301.8" height="15.0" fill="rgb(249,67,51)" rx="2" ry="2" />
<text  x="678.12" y="511.5" >lind_write</text>
</g>
<g >
<title>pick_next_task_fair (23 samples, 0.05%)</title><rect x="25.9" y="405" width="0.6" height="15.0" fill="rgb(216,219,22)" rx="2" ry="2" />
<text  x="28.94" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (30 samples, 0.06%)</title><rect x="1187.9" y="437" width="0.7" height="15.0" fill="rgb(205,203,36)" rx="2" ry="2" />
<text  x="1190.90" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (33 samples, 0.07%)</title><rect x="734.2" y="277" width="0.8" height="15.0" fill="rgb(234,0,51)" rx="2" ry="2" />
<text  x="737.22" y="287.5" ></text>
</g>
<g >
<title>__do_munmap (54 samples, 0.11%)</title><rect x="143.2" y="357" width="1.3" height="15.0" fill="rgb(209,211,17)" rx="2" ry="2" />
<text  x="146.20" y="367.5" ></text>
</g>
<g >
<title>dispatcher (12,333 samples, 24.69%)</title><rect x="685.3" y="485" width="291.3" height="15.0" fill="rgb(234,79,28)" rx="2" ry="2" />
<text  x="688.25" y="495.5" >dispatcher</text>
</g>
<g >
<title>perf_mmap__push (231 samples, 0.46%)</title><rect x="12.4" y="485" width="5.5" height="15.0" fill="rgb(225,149,28)" rx="2" ry="2" />
<text  x="15.41" y="495.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (330 samples, 0.66%)</title><rect x="19.0" y="565" width="7.8" height="15.0" fill="rgb(205,54,12)" rx="2" ry="2" />
<text  x="22.02" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (426 samples, 0.85%)</title><rect x="847.9" y="341" width="10.0" height="15.0" fill="rgb(249,76,23)" rx="2" ry="2" />
<text  x="850.86" y="351.5" ></text>
</g>
<g >
<title>crypto_shash_update (6 samples, 0.01%)</title><rect x="16.9" y="53" width="0.1" height="15.0" fill="rgb(227,135,33)" rx="2" ry="2" />
<text  x="19.85" y="63.5" ></text>
</g>
<g >
<title>unmap_single_vma (54 samples, 0.11%)</title><rect x="143.2" y="309" width="1.3" height="15.0" fill="rgb(243,182,43)" rx="2" ry="2" />
<text  x="146.20" y="319.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (8 samples, 0.02%)</title><rect x="1019.3" y="405" width="0.2" height="15.0" fill="rgb(232,57,22)" rx="2" ry="2" />
<text  x="1022.31" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="736.7" y="309" width="0.2" height="15.0" fill="rgb(206,100,40)" rx="2" ry="2" />
<text  x="739.72" y="319.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (21 samples, 0.04%)</title><rect x="950.2" y="389" width="0.5" height="15.0" fill="rgb(222,57,23)" rx="2" ry="2" />
<text  x="953.22" y="399.5" ></text>
</g>
<g >
<title>do_idle (180 samples, 0.36%)</title><rect x="19.0" y="517" width="4.3" height="15.0" fill="rgb(209,126,14)" rx="2" ry="2" />
<text  x="22.02" y="527.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (8 samples, 0.02%)</title><rect x="34.2" y="533" width="0.2" height="15.0" fill="rgb(236,15,7)" rx="2" ry="2" />
<text  x="37.17" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (60 samples, 0.12%)</title><rect x="728.6" y="309" width="1.4" height="15.0" fill="rgb(245,166,14)" rx="2" ry="2" />
<text  x="731.62" y="319.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (14 samples, 0.03%)</title><rect x="1046.0" y="453" width="0.3" height="15.0" fill="rgb(222,9,45)" rx="2" ry="2" />
<text  x="1048.98" y="463.5" ></text>
</g>
<g >
<title>sched_clock_cpu (13 samples, 0.03%)</title><rect x="1144.4" y="453" width="0.3" height="15.0" fill="rgb(206,67,3)" rx="2" ry="2" />
<text  x="1147.39" y="463.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (11 samples, 0.02%)</title><rect x="140.6" y="533" width="0.2" height="15.0" fill="rgb(214,167,36)" rx="2" ry="2" />
<text  x="143.56" y="543.5" ></text>
</g>
<g >
<title>ovl_write_iter (223 samples, 0.45%)</title><rect x="12.5" y="309" width="5.3" height="15.0" fill="rgb(216,80,26)" rx="2" ry="2" />
<text  x="15.53" y="319.5" ></text>
</g>
<g >
<title>_perf_event_enable (65 samples, 0.13%)</title><rect x="10.4" y="357" width="1.5" height="15.0" fill="rgb(221,148,43)" rx="2" ry="2" />
<text  x="13.35" y="367.5" ></text>
</g>
<g >
<title>unmap_vmas (54 samples, 0.11%)</title><rect x="143.2" y="325" width="1.3" height="15.0" fill="rgb(248,21,17)" rx="2" ry="2" />
<text  x="146.20" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (213 samples, 0.43%)</title><rect x="726.0" y="357" width="5.1" height="15.0" fill="rgb(205,10,32)" rx="2" ry="2" />
<text  x="729.05" y="367.5" ></text>
</g>
<g >
<title>newidle_balance (179 samples, 0.36%)</title><rect x="1139.9" y="453" width="4.3" height="15.0" fill="rgb(250,47,54)" rx="2" ry="2" />
<text  x="1142.92" y="463.5" ></text>
</g>
<g >
<title>create_empty_buffers (16 samples, 0.03%)</title><rect x="13.4" y="165" width="0.3" height="15.0" fill="rgb(205,37,42)" rx="2" ry="2" />
<text  x="16.35" y="175.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_key_value (632 samples, 1.27%)</title><rect x="725.7" y="437" width="14.9" height="15.0" fill="rgb(222,198,15)" rx="2" ry="2" />
<text  x="728.71" y="447.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (315 samples, 0.63%)</title><rect x="879.2" y="437" width="7.4" height="15.0" fill="rgb(248,102,18)" rx="2" ry="2" />
<text  x="882.19" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (213 samples, 0.43%)</title><rect x="726.0" y="341" width="5.1" height="15.0" fill="rgb(252,159,13)" rx="2" ry="2" />
<text  x="729.05" y="351.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (11 samples, 0.02%)</title><rect x="14.5" y="117" width="0.3" height="15.0" fill="rgb(242,212,48)" rx="2" ry="2" />
<text  x="17.51" y="127.5" ></text>
</g>
<g >
<title>start_kernel (1,862 samples, 3.73%)</title><rect x="1146.0" y="517" width="44.0" height="15.0" fill="rgb(231,211,9)" rx="2" ry="2" />
<text  x="1148.99" y="527.5" >star..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.04%)</title><rect x="863.3" y="245" width="0.5" height="15.0" fill="rgb(254,166,18)" rx="2" ry="2" />
<text  x="866.29" y="255.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (1,344 samples, 2.69%)</title><rect x="847.2" y="405" width="31.7" height="15.0" fill="rgb(207,101,54)" rx="2" ry="2" />
<text  x="850.20" y="415.5" >ha..</text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (17 samples, 0.03%)</title><rect x="1018.6" y="357" width="0.4" height="15.0" fill="rgb(238,229,45)" rx="2" ry="2" />
<text  x="1021.65" y="367.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (7 samples, 0.01%)</title><rect x="15.5" y="69" width="0.2" height="15.0" fill="rgb(254,9,31)" rx="2" ry="2" />
<text  x="18.50" y="79.5" ></text>
</g>
<g >
<title>DynArrayGet (50 samples, 0.10%)</title><rect x="648.6" y="485" width="1.2" height="15.0" fill="rgb(249,60,53)" rx="2" ry="2" />
<text  x="651.61" y="495.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (19 samples, 0.04%)</title><rect x="1135.6" y="405" width="0.4" height="15.0" fill="rgb(232,50,4)" rx="2" ry="2" />
<text  x="1138.55" y="415.5" ></text>
</g>
<g >
<title>sched_clock_cpu (16 samples, 0.03%)</title><rect x="1132.6" y="453" width="0.4" height="15.0" fill="rgb(208,173,13)" rx="2" ry="2" />
<text  x="1135.60" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (852 samples, 1.71%)</title><rect x="180.3" y="421" width="20.2" height="15.0" fill="rgb(224,117,19)" rx="2" ry="2" />
<text  x="183.34" y="431.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (81 samples, 0.16%)</title><rect x="952.2" y="405" width="1.9" height="15.0" fill="rgb(251,139,32)" rx="2" ry="2" />
<text  x="955.22" y="415.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (79 samples, 0.16%)</title><rect x="10.1" y="501" width="1.9" height="15.0" fill="rgb(218,11,39)" rx="2" ry="2" />
<text  x="13.12" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (52 samples, 0.10%)</title><rect x="842.3" y="357" width="1.2" height="15.0" fill="rgb(238,86,6)" rx="2" ry="2" />
<text  x="845.26" y="367.5" ></text>
</g>
<g >
<title>kick_ilb (187 samples, 0.37%)</title><rect x="1181.9" y="357" width="4.5" height="15.0" fill="rgb(220,208,13)" rx="2" ry="2" />
<text  x="1184.94" y="367.5" ></text>
</g>
<g >
<title>__lock_text_start (8 samples, 0.02%)</title><rect x="1135.6" y="389" width="0.2" height="15.0" fill="rgb(225,128,4)" rx="2" ry="2" />
<text  x="1138.60" y="399.5" ></text>
</g>
<g >
<title>event_function_call (65 samples, 0.13%)</title><rect x="10.4" y="341" width="1.5" height="15.0" fill="rgb(240,169,48)" rx="2" ry="2" />
<text  x="13.35" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (472 samples, 0.94%)</title><rect x="725.7" y="389" width="11.2" height="15.0" fill="rgb(221,178,46)" rx="2" ry="2" />
<text  x="728.74" y="399.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (10 samples, 0.02%)</title><rect x="833.7" y="341" width="0.2" height="15.0" fill="rgb(249,157,36)" rx="2" ry="2" />
<text  x="836.67" y="351.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (20 samples, 0.04%)</title><rect x="29.0" y="549" width="0.5" height="15.0" fill="rgb(240,21,54)" rx="2" ry="2" />
<text  x="32.04" y="559.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (26 samples, 0.05%)</title><rect x="864.6" y="357" width="0.6" height="15.0" fill="rgb(239,21,38)" rx="2" ry="2" />
<text  x="867.63" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (12 samples, 0.02%)</title><rect x="1046.3" y="501" width="0.3" height="15.0" fill="rgb(228,99,14)" rx="2" ry="2" />
<text  x="1049.31" y="511.5" ></text>
</g>
<g >
<title>core::cmp::min (15 samples, 0.03%)</title><rect x="888.8" y="437" width="0.4" height="15.0" fill="rgb(229,18,35)" rx="2" ry="2" />
<text  x="891.82" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (7 samples, 0.01%)</title><rect x="1134.8" y="421" width="0.2" height="15.0" fill="rgb(212,149,41)" rx="2" ry="2" />
<text  x="1137.82" y="431.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (19 samples, 0.04%)</title><rect x="777.6" y="453" width="0.5" height="15.0" fill="rgb(225,100,17)" rx="2" ry="2" />
<text  x="780.61" y="463.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (3,536 samples, 7.08%)</title><rect x="489.2" y="389" width="83.5" height="15.0" fill="rgb(211,59,37)" rx="2" ry="2" />
<text  x="492.19" y="399.5" >ringbuf::..</text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_key_value (1,344 samples, 2.69%)</title><rect x="847.2" y="421" width="31.7" height="15.0" fill="rgb(221,14,8)" rx="2" ry="2" />
<text  x="850.20" y="431.5" >st..</text>
</g>
<g >
<title>NaClLog (22 samples, 0.04%)</title><rect x="75.3" y="549" width="0.5" height="15.0" fill="rgb(217,135,44)" rx="2" ry="2" />
<text  x="78.29" y="559.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (8,008 samples, 16.03%)</title><rect x="200.5" y="437" width="189.1" height="15.0" fill="rgb(214,2,28)" rx="2" ry="2" />
<text  x="203.46" y="447.5" >ringbuf::consumer::Consu..</text>
</g>
<g >
<title>std::sync::once::Once::is_completed (13 samples, 0.03%)</title><rect x="699.5" y="373" width="0.3" height="15.0" fill="rgb(223,42,17)" rx="2" ry="2" />
<text  x="702.47" y="383.5" ></text>
</g>
<g >
<title>generic_exec_single (64 samples, 0.13%)</title><rect x="10.4" y="309" width="1.5" height="15.0" fill="rgb(230,206,10)" rx="2" ry="2" />
<text  x="13.38" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (37 samples, 0.07%)</title><rect x="871.6" y="341" width="0.9" height="15.0" fill="rgb(236,111,20)" rx="2" ry="2" />
<text  x="874.58" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (159 samples, 0.32%)</title><rect x="736.9" y="389" width="3.7" height="15.0" fill="rgb(249,183,48)" rx="2" ry="2" />
<text  x="739.89" y="399.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (237 samples, 0.47%)</title><rect x="54.0" y="501" width="5.6" height="15.0" fill="rgb(247,184,23)" rx="2" ry="2" />
<text  x="57.03" y="511.5" ></text>
</g>
<g >
<title>schedule_idle (20 samples, 0.04%)</title><rect x="22.7" y="501" width="0.5" height="15.0" fill="rgb(251,23,15)" rx="2" ry="2" />
<text  x="25.68" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (50 samples, 0.10%)</title><rect x="858.6" y="341" width="1.2" height="15.0" fill="rgb(248,9,46)" rx="2" ry="2" />
<text  x="861.59" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (108 samples, 0.22%)</title><rect x="1170.5" y="389" width="2.6" height="15.0" fill="rgb(229,70,18)" rx="2" ry="2" />
<text  x="1173.51" y="399.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (14 samples, 0.03%)</title><rect x="29.7" y="549" width="0.3" height="15.0" fill="rgb(241,170,27)" rx="2" ry="2" />
<text  x="32.68" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt;&gt; (316 samples, 0.63%)</title><rect x="791.7" y="437" width="7.5" height="15.0" fill="rgb(239,128,1)" rx="2" ry="2" />
<text  x="794.69" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (124 samples, 0.25%)</title><rect x="728.1" y="325" width="3.0" height="15.0" fill="rgb(242,227,45)" rx="2" ry="2" />
<text  x="731.15" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (21 samples, 0.04%)</title><rect x="834.7" y="341" width="0.5" height="15.0" fill="rgb(243,93,50)" rx="2" ry="2" />
<text  x="837.68" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (225 samples, 0.45%)</title><rect x="694.2" y="469" width="5.3" height="15.0" fill="rgb(244,161,1)" rx="2" ry="2" />
<text  x="697.16" y="479.5" ></text>
</g>
<g >
<title>llist_reverse_order (36 samples, 0.07%)</title><rect x="1174.9" y="421" width="0.9" height="15.0" fill="rgb(242,180,21)" rx="2" ry="2" />
<text  x="1177.93" y="431.5" ></text>
</g>
<g >
<title>arch_call_rest_init (148 samples, 0.30%)</title><rect x="23.3" y="501" width="3.5" height="15.0" fill="rgb(237,39,32)" rx="2" ry="2" />
<text  x="26.32" y="511.5" ></text>
</g>
<g >
<title>clear_page_erms (23 samples, 0.05%)</title><rect x="14.9" y="101" width="0.5" height="15.0" fill="rgb(253,55,11)" rx="2" ry="2" />
<text  x="17.89" y="111.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (8 samples, 0.02%)</title><rect x="851.3" y="293" width="0.2" height="15.0" fill="rgb(215,157,41)" rx="2" ry="2" />
<text  x="854.34" y="303.5" ></text>
</g>
<g >
<title>lru_cache_add (12 samples, 0.02%)</title><rect x="14.5" y="133" width="0.3" height="15.0" fill="rgb(209,75,42)" rx="2" ry="2" />
<text  x="17.49" y="143.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (71 samples, 0.14%)</title><rect x="67.4" y="549" width="1.7" height="15.0" fill="rgb(226,14,31)" rx="2" ry="2" />
<text  x="70.40" y="559.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (8 samples, 0.02%)</title><rect x="1100.5" y="389" width="0.2" height="15.0" fill="rgb(231,130,34)" rx="2" ry="2" />
<text  x="1103.54" y="399.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (101 samples, 0.20%)</title><rect x="178.0" y="389" width="2.3" height="15.0" fill="rgb(243,144,39)" rx="2" ry="2" />
<text  x="180.95" y="399.5" ></text>
</g>
<g >
<title>all (49,954 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(248,43,32)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (39 samples, 0.08%)</title><rect x="33.4" y="549" width="1.0" height="15.0" fill="rgb(250,168,48)" rx="2" ry="2" />
<text  x="36.43" y="559.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (18 samples, 0.04%)</title><rect x="736.9" y="373" width="0.4" height="15.0" fill="rgb(215,82,3)" rx="2" ry="2" />
<text  x="739.89" y="383.5" ></text>
</g>
<g >
<title>native_sched_clock (7 samples, 0.01%)</title><rect x="1186.6" y="373" width="0.2" height="15.0" fill="rgb(232,146,10)" rx="2" ry="2" />
<text  x="1189.65" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (307 samples, 0.61%)</title><rect x="700.6" y="405" width="7.3" height="15.0" fill="rgb(225,224,40)" rx="2" ry="2" />
<text  x="703.60" y="415.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (13 samples, 0.03%)</title><rect x="612.5" y="517" width="0.3" height="15.0" fill="rgb(217,171,35)" rx="2" ry="2" />
<text  x="615.47" y="527.5" ></text>
</g>
<g >
<title>rcu_idle_exit (16 samples, 0.03%)</title><rect x="1132.2" y="453" width="0.4" height="15.0" fill="rgb(253,122,19)" rx="2" ry="2" />
<text  x="1135.17" y="463.5" ></text>
</g>
<g >
<title>cpuidle_select (213 samples, 0.43%)</title><rect x="1168.3" y="421" width="5.0" height="15.0" fill="rgb(231,41,32)" rx="2" ry="2" />
<text  x="1171.27" y="431.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (28 samples, 0.06%)</title><rect x="74.0" y="549" width="0.6" height="15.0" fill="rgb(226,140,30)" rx="2" ry="2" />
<text  x="76.97" y="559.5" ></text>
</g>
<g >
<title>poll_idle (435 samples, 0.87%)</title><rect x="1121.8" y="453" width="10.3" height="15.0" fill="rgb(246,190,7)" rx="2" ry="2" />
<text  x="1124.80" y="463.5" ></text>
</g>
<g >
<title>ext4_da_write_end (6 samples, 0.01%)</title><rect x="18.3" y="357" width="0.1" height="15.0" fill="rgb(215,71,5)" rx="2" ry="2" />
<text  x="21.29" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (11 samples, 0.02%)</title><rect x="808.5" y="357" width="0.2" height="15.0" fill="rgb(242,94,7)" rx="2" ry="2" />
<text  x="811.46" y="367.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (6 samples, 0.01%)</title><rect x="1019.1" y="437" width="0.1" height="15.0" fill="rgb(229,172,20)" rx="2" ry="2" />
<text  x="1022.10" y="447.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (281 samples, 0.56%)</title><rect x="771.0" y="389" width="6.6" height="15.0" fill="rgb(248,91,44)" rx="2" ry="2" />
<text  x="773.97" y="399.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (184 samples, 0.37%)</title><rect x="721.4" y="389" width="4.3" height="15.0" fill="rgb(220,99,18)" rx="2" ry="2" />
<text  x="724.37" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (337 samples, 0.67%)</title><rect x="936.8" y="405" width="8.0" height="15.0" fill="rgb(209,17,43)" rx="2" ry="2" />
<text  x="939.85" y="415.5" ></text>
</g>
<g >
<title>pagecache_get_page (5 samples, 0.01%)</title><rect x="18.2" y="325" width="0.1" height="15.0" fill="rgb(208,203,25)" rx="2" ry="2" />
<text  x="21.17" y="335.5" ></text>
</g>
<g >
<title>menu_update (5 samples, 0.01%)</title><rect x="1134.3" y="453" width="0.1" height="15.0" fill="rgb(238,14,35)" rx="2" ry="2" />
<text  x="1137.32" y="463.5" ></text>
</g>
<g >
<title>menu_select (121 samples, 0.24%)</title><rect x="1133.3" y="469" width="2.8" height="15.0" fill="rgb(239,85,22)" rx="2" ry="2" />
<text  x="1136.26" y="479.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (16 samples, 0.03%)</title><rect x="936.5" y="437" width="0.3" height="15.0" fill="rgb(208,143,9)" rx="2" ry="2" />
<text  x="939.47" y="447.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (64 samples, 0.13%)</title><rect x="1021.9" y="549" width="1.5" height="15.0" fill="rgb(232,69,5)" rx="2" ry="2" />
<text  x="1024.88" y="559.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.05%)</title><rect x="871.0" y="309" width="0.6" height="15.0" fill="rgb(214,217,9)" rx="2" ry="2" />
<text  x="874.01" y="319.5" ></text>
</g>
<g >
<title>record__pushfn (230 samples, 0.46%)</title><rect x="12.4" y="469" width="5.5" height="15.0" fill="rgb(239,44,54)" rx="2" ry="2" />
<text  x="15.43" y="479.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (21 samples, 0.04%)</title><rect x="950.7" y="405" width="0.5" height="15.0" fill="rgb(214,177,7)" rx="2" ry="2" />
<text  x="953.71" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (81 samples, 0.16%)</title><rect x="69.1" y="549" width="1.9" height="15.0" fill="rgb(244,25,25)" rx="2" ry="2" />
<text  x="72.08" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (12 samples, 0.02%)</title><rect x="739.7" y="341" width="0.3" height="15.0" fill="rgb(241,152,16)" rx="2" ry="2" />
<text  x="742.70" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (8 samples, 0.02%)</title><rect x="35.4" y="549" width="0.2" height="15.0" fill="rgb(205,217,8)" rx="2" ry="2" />
<text  x="38.39" y="559.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.02%)</title><rect x="723.5" y="309" width="0.3" height="15.0" fill="rgb(222,59,8)" rx="2" ry="2" />
<text  x="726.54" y="319.5" ></text>
</g>
<g >
<title>start_kernel (148 samples, 0.30%)</title><rect x="23.3" y="517" width="3.5" height="15.0" fill="rgb(212,0,53)" rx="2" ry="2" />
<text  x="26.32" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (217 samples, 0.43%)</title><rect x="709.3" y="373" width="5.1" height="15.0" fill="rgb(243,62,44)" rx="2" ry="2" />
<text  x="712.27" y="383.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (15 samples, 0.03%)</title><rect x="1021.2" y="469" width="0.4" height="15.0" fill="rgb(222,101,30)" rx="2" ry="2" />
<text  x="1024.25" y="479.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (42 samples, 0.08%)</title><rect x="16.3" y="165" width="1.0" height="15.0" fill="rgb(210,172,9)" rx="2" ry="2" />
<text  x="19.31" y="175.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (444 samples, 0.89%)</title><rect x="572.7" y="389" width="10.5" height="15.0" fill="rgb(211,163,9)" rx="2" ry="2" />
<text  x="575.72" y="399.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (6 samples, 0.01%)</title><rect x="15.8" y="181" width="0.1" height="15.0" fill="rgb(214,43,50)" rx="2" ry="2" />
<text  x="18.76" y="191.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (287 samples, 0.57%)</title><rect x="173.6" y="437" width="6.7" height="15.0" fill="rgb(211,13,35)" rx="2" ry="2" />
<text  x="176.56" y="447.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (14 samples, 0.03%)</title><rect x="1046.0" y="469" width="0.3" height="15.0" fill="rgb(237,92,21)" rx="2" ry="2" />
<text  x="1048.98" y="479.5" ></text>
</g>
<g >
<title>__schedule (20 samples, 0.04%)</title><rect x="22.7" y="485" width="0.5" height="15.0" fill="rgb(247,42,44)" rx="2" ry="2" />
<text  x="25.68" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (169 samples, 0.34%)</title><rect x="721.7" y="357" width="4.0" height="15.0" fill="rgb(232,166,8)" rx="2" ry="2" />
<text  x="724.72" y="367.5" ></text>
</g>
<g >
<title>NaClSysWrite (22 samples, 0.04%)</title><rect x="591.9" y="533" width="0.5" height="15.0" fill="rgb(217,32,47)" rx="2" ry="2" />
<text  x="594.90" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.02%)</title><rect x="34.2" y="485" width="0.2" height="15.0" fill="rgb(211,198,47)" rx="2" ry="2" />
<text  x="37.17" y="495.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (231 samples, 0.46%)</title><rect x="709.0" y="421" width="5.4" height="15.0" fill="rgb(224,82,5)" rx="2" ry="2" />
<text  x="711.99" y="431.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (118 samples, 0.24%)</title><rect x="13.0" y="197" width="2.8" height="15.0" fill="rgb(235,104,1)" rx="2" ry="2" />
<text  x="15.98" y="207.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (3,077 samples, 6.16%)</title><rect x="806.3" y="437" width="72.6" height="15.0" fill="rgb(249,197,19)" rx="2" ry="2" />
<text  x="809.26" y="447.5" >&lt;dashmap..</text>
</g>
<g >
<title>cpuidle_enter_state (857 samples, 1.72%)</title><rect x="1147.8" y="405" width="20.2" height="15.0" fill="rgb(240,25,30)" rx="2" ry="2" />
<text  x="1150.76" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt; (296 samples, 0.59%)</title><rect x="799.2" y="453" width="6.9" height="15.0" fill="rgb(234,176,53)" rx="2" ry="2" />
<text  x="802.15" y="463.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (3,092 samples, 6.19%)</title><rect x="806.1" y="453" width="73.1" height="15.0" fill="rgb(218,76,4)" rx="2" ry="2" />
<text  x="809.15" y="463.5" >dashmap:..</text>
</g>
<g >
<title>generic_exec_single (48 samples, 0.10%)</title><rect x="1183.7" y="325" width="1.2" height="15.0" fill="rgb(235,158,6)" rx="2" ry="2" />
<text  x="1186.72" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (822 samples, 1.65%)</title><rect x="751.5" y="453" width="19.5" height="15.0" fill="rgb(218,199,33)" rx="2" ry="2" />
<text  x="754.53" y="463.5" ></text>
</g>
<g >
<title>[sel_ldr] (38,291 samples, 76.65%)</title><rect x="72.8" y="565" width="904.5" height="15.0" fill="rgb(254,2,53)" rx="2" ry="2" />
<text  x="75.76" y="575.5" >[sel_ldr]</text>
</g>
<g >
<title>nohz_csd_func (34 samples, 0.07%)</title><rect x="1138.5" y="485" width="0.8" height="15.0" fill="rgb(206,100,14)" rx="2" ry="2" />
<text  x="1141.46" y="495.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (85 samples, 0.17%)</title><rect x="608.6" y="501" width="2.1" height="15.0" fill="rgb(250,97,12)" rx="2" ry="2" />
<text  x="611.65" y="511.5" ></text>
</g>
<g >
<title>cpumask_next_and (8 samples, 0.02%)</title><rect x="1183.4" y="341" width="0.2" height="15.0" fill="rgb(239,67,16)" rx="2" ry="2" />
<text  x="1186.41" y="351.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (61 samples, 0.12%)</title><rect x="1020.4" y="549" width="1.5" height="15.0" fill="rgb(254,157,31)" rx="2" ry="2" />
<text  x="1023.44" y="559.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (117 samples, 0.23%)</title><rect x="446.3" y="357" width="2.7" height="15.0" fill="rgb(239,27,5)" rx="2" ry="2" />
<text  x="449.27" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (307 samples, 0.61%)</title><rect x="700.6" y="389" width="7.3" height="15.0" fill="rgb(219,125,53)" rx="2" ry="2" />
<text  x="703.60" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (214 samples, 0.43%)</title><rect x="714.9" y="421" width="5.1" height="15.0" fill="rgb(228,119,9)" rx="2" ry="2" />
<text  x="717.94" y="431.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (15 samples, 0.03%)</title><rect x="1021.2" y="501" width="0.4" height="15.0" fill="rgb(207,150,39)" rx="2" ry="2" />
<text  x="1024.25" y="511.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (25 samples, 0.05%)</title><rect x="878.4" y="245" width="0.5" height="15.0" fill="rgb(241,178,32)" rx="2" ry="2" />
<text  x="881.36" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (28 samples, 0.06%)</title><rect x="740.0" y="357" width="0.6" height="15.0" fill="rgb(226,163,36)" rx="2" ry="2" />
<text  x="742.98" y="367.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_try_init (13 samples, 0.03%)</title><rect x="699.5" y="421" width="0.3" height="15.0" fill="rgb(237,102,46)" rx="2" ry="2" />
<text  x="702.47" y="431.5" ></text>
</g>
<g >
<title>ksys_write (21 samples, 0.04%)</title><rect x="18.0" y="517" width="0.5" height="15.0" fill="rgb(227,138,4)" rx="2" ry="2" />
<text  x="20.98" y="527.5" ></text>
</g>
<g >
<title>generic_exec_single (31 samples, 0.06%)</title><rect x="1142.6" y="389" width="0.8" height="15.0" fill="rgb(211,226,28)" rx="2" ry="2" />
<text  x="1145.64" y="399.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (52 samples, 0.10%)</title><rect x="842.3" y="389" width="1.2" height="15.0" fill="rgb(241,190,50)" rx="2" ry="2" />
<text  x="845.26" y="399.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (13 samples, 0.03%)</title><rect x="809.1" y="357" width="0.3" height="15.0" fill="rgb(218,129,49)" rx="2" ry="2" />
<text  x="812.10" y="367.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (23 samples, 0.05%)</title><rect x="831.3" y="421" width="0.5" height="15.0" fill="rgb(239,41,11)" rx="2" ry="2" />
<text  x="834.28" y="431.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (5 samples, 0.01%)</title><rect x="1136.3" y="453" width="0.1" height="15.0" fill="rgb(240,13,5)" rx="2" ry="2" />
<text  x="1139.31" y="463.5" ></text>
</g>
<g >
<title>menu_select (5 samples, 0.01%)</title><rect x="22.3" y="469" width="0.1" height="15.0" fill="rgb(207,0,28)" rx="2" ry="2" />
<text  x="25.33" y="479.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (26 samples, 0.05%)</title><rect x="143.9" y="229" width="0.6" height="15.0" fill="rgb(252,37,2)" rx="2" ry="2" />
<text  x="146.86" y="239.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (412 samples, 0.82%)</title><rect x="831.8" y="405" width="9.8" height="15.0" fill="rgb(254,25,41)" rx="2" ry="2" />
<text  x="834.82" y="415.5" ></text>
</g>
<g >
<title>NaClLog (112 samples, 0.22%)</title><rect x="137.9" y="533" width="2.7" height="15.0" fill="rgb(247,38,34)" rx="2" ry="2" />
<text  x="140.91" y="543.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (14 samples, 0.03%)</title><rect x="137.6" y="485" width="0.3" height="15.0" fill="rgb(234,5,33)" rx="2" ry="2" />
<text  x="140.58" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (133 samples, 0.27%)</title><rect x="716.9" y="373" width="3.1" height="15.0" fill="rgb(214,94,40)" rx="2" ry="2" />
<text  x="719.86" y="383.5" ></text>
</g>
<g >
<title>get_typical_interval (12 samples, 0.02%)</title><rect x="1134.0" y="453" width="0.3" height="15.0" fill="rgb(254,18,21)" rx="2" ry="2" />
<text  x="1136.99" y="463.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3,532 samples, 7.07%)</title><rect x="489.3" y="373" width="83.4" height="15.0" fill="rgb(223,199,3)" rx="2" ry="2" />
<text  x="492.26" y="383.5" >core::int..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (47 samples, 0.09%)</title><rect x="718.9" y="357" width="1.1" height="15.0" fill="rgb(216,88,25)" rx="2" ry="2" />
<text  x="721.89" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (14 samples, 0.03%)</title><rect x="1145.2" y="501" width="0.4" height="15.0" fill="rgb(252,112,33)" rx="2" ry="2" />
<text  x="1148.24" y="511.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (15 samples, 0.03%)</title><rect x="608.3" y="453" width="0.3" height="15.0" fill="rgb(243,145,18)" rx="2" ry="2" />
<text  x="611.29" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (14 samples, 0.03%)</title><rect x="1171.8" y="357" width="0.4" height="15.0" fill="rgb(248,55,22)" rx="2" ry="2" />
<text  x="1174.83" y="367.5" ></text>
</g>
<g >
<title>NaClXMutexLock (10 samples, 0.02%)</title><rect x="977.0" y="533" width="0.3" height="15.0" fill="rgb(207,196,46)" rx="2" ry="2" />
<text  x="980.03" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (271 samples, 0.54%)</title><rect x="872.5" y="325" width="6.4" height="15.0" fill="rgb(218,85,18)" rx="2" ry="2" />
<text  x="875.55" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (14 samples, 0.03%)</title><rect x="740.0" y="309" width="0.3" height="15.0" fill="rgb(240,78,25)" rx="2" ry="2" />
<text  x="742.98" y="319.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (79 samples, 0.16%)</title><rect x="10.1" y="485" width="1.9" height="15.0" fill="rgb(220,154,23)" rx="2" ry="2" />
<text  x="13.12" y="495.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (61 samples, 0.12%)</title><rect x="1067.9" y="549" width="1.5" height="15.0" fill="rgb(229,133,15)" rx="2" ry="2" />
<text  x="1070.95" y="559.5" ></text>
</g>
<g >
<title>read_tsc (11 samples, 0.02%)</title><rect x="1187.5" y="421" width="0.3" height="15.0" fill="rgb(243,111,29)" rx="2" ry="2" />
<text  x="1190.50" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (28 samples, 0.06%)</title><rect x="740.0" y="325" width="0.6" height="15.0" fill="rgb(207,225,53)" rx="2" ry="2" />
<text  x="742.98" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (306 samples, 0.61%)</title><rect x="791.9" y="373" width="7.3" height="15.0" fill="rgb(251,132,42)" rx="2" ry="2" />
<text  x="794.93" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (79 samples, 0.16%)</title><rect x="10.1" y="437" width="1.9" height="15.0" fill="rgb(229,104,48)" rx="2" ry="2" />
<text  x="13.12" y="447.5" ></text>
</g>
<g >
<title>core::mem::drop (281 samples, 0.56%)</title><rect x="771.0" y="453" width="6.6" height="15.0" fill="rgb(213,11,29)" rx="2" ry="2" />
<text  x="773.97" y="463.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (65 samples, 0.13%)</title><rect x="1142.6" y="405" width="1.6" height="15.0" fill="rgb(221,24,22)" rx="2" ry="2" />
<text  x="1145.61" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (149 samples, 0.30%)</title><rect x="721.7" y="341" width="3.5" height="15.0" fill="rgb(217,28,34)" rx="2" ry="2" />
<text  x="724.72" y="351.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (12 samples, 0.02%)</title><rect x="740.4" y="277" width="0.2" height="15.0" fill="rgb(229,35,40)" rx="2" ry="2" />
<text  x="743.36" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (9 samples, 0.02%)</title><rect x="1144.7" y="485" width="0.2" height="15.0" fill="rgb(235,152,51)" rx="2" ry="2" />
<text  x="1147.69" y="495.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (16 samples, 0.03%)</title><rect x="27.6" y="549" width="0.4" height="15.0" fill="rgb(252,110,48)" rx="2" ry="2" />
<text  x="30.57" y="559.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (12 samples, 0.02%)</title><rect x="740.4" y="293" width="0.2" height="15.0" fill="rgb(232,215,40)" rx="2" ry="2" />
<text  x="743.36" y="303.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (237 samples, 0.47%)</title><rect x="54.0" y="517" width="5.6" height="15.0" fill="rgb(250,85,14)" rx="2" ry="2" />
<text  x="57.03" y="527.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (10 samples, 0.02%)</title><rect x="878.9" y="421" width="0.3" height="15.0" fill="rgb(235,159,36)" rx="2" ry="2" />
<text  x="881.95" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (9 samples, 0.02%)</title><rect x="1148.1" y="325" width="0.2" height="15.0" fill="rgb(205,107,51)" rx="2" ry="2" />
<text  x="1151.12" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (12 samples, 0.02%)</title><rect x="1186.9" y="421" width="0.2" height="15.0" fill="rgb(222,70,23)" rx="2" ry="2" />
<text  x="1189.86" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (314 samples, 0.63%)</title><rect x="879.2" y="405" width="7.4" height="15.0" fill="rgb(223,99,34)" rx="2" ry="2" />
<text  x="882.19" y="415.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (12 samples, 0.02%)</title><rect x="731.6" y="325" width="0.3" height="15.0" fill="rgb(220,105,12)" rx="2" ry="2" />
<text  x="734.60" y="335.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (8 samples, 0.02%)</title><rect x="1048.4" y="533" width="0.2" height="15.0" fill="rgb(225,28,35)" rx="2" ry="2" />
<text  x="1051.36" y="543.5" ></text>
</g>
<g >
<title>get_page_from_freelist (50 samples, 0.10%)</title><rect x="1017.9" y="405" width="1.1" height="15.0" fill="rgb(218,149,44)" rx="2" ry="2" />
<text  x="1020.87" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.02%)</title><rect x="12.0" y="469" width="0.3" height="15.0" fill="rgb(225,89,31)" rx="2" ry="2" />
<text  x="15.03" y="479.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (117 samples, 0.23%)</title><rect x="446.3" y="373" width="2.7" height="15.0" fill="rgb(242,61,31)" rx="2" ry="2" />
<text  x="449.27" y="383.5" ></text>
</g>
<g >
<title>NaClAppDtor (55 samples, 0.11%)</title><rect x="143.2" y="469" width="1.3" height="15.0" fill="rgb(214,155,16)" rx="2" ry="2" />
<text  x="146.20" y="479.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (134 samples, 0.27%)</title><rect x="19.2" y="469" width="3.1" height="15.0" fill="rgb(245,68,34)" rx="2" ry="2" />
<text  x="22.17" y="479.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (15 samples, 0.03%)</title><rect x="1134.7" y="437" width="0.4" height="15.0" fill="rgb(220,84,44)" rx="2" ry="2" />
<text  x="1137.73" y="447.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (51 samples, 0.10%)</title><rect x="388.4" y="405" width="1.2" height="15.0" fill="rgb(208,94,39)" rx="2" ry="2" />
<text  x="391.40" y="415.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (11 samples, 0.02%)</title><rect x="638.6" y="485" width="0.3" height="15.0" fill="rgb(250,50,6)" rx="2" ry="2" />
<text  x="641.60" y="495.5" ></text>
</g>
<g >
<title>native_sched_clock (12 samples, 0.02%)</title><rect x="1132.7" y="437" width="0.3" height="15.0" fill="rgb(247,2,48)" rx="2" ry="2" />
<text  x="1135.67" y="447.5" ></text>
</g>
<g >
<title>[unknown]  (1,828 samples, 3.66%)</title><rect x="977.3" y="565" width="43.1" height="15.0" fill="rgb(216,2,17)" rx="2" ry="2" />
<text  x="980.26" y="575.5" >[unk..</text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (25 samples, 0.05%)</title><rect x="878.4" y="293" width="0.5" height="15.0" fill="rgb(235,83,27)" rx="2" ry="2" />
<text  x="881.36" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (62 samples, 0.12%)</title><rect x="948.8" y="357" width="1.4" height="15.0" fill="rgb(224,207,9)" rx="2" ry="2" />
<text  x="951.75" y="367.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (248 samples, 0.50%)</title><rect x="944.9" y="405" width="5.8" height="15.0" fill="rgb(236,94,32)" rx="2" ry="2" />
<text  x="947.85" y="415.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (13 samples, 0.03%)</title><rect x="13.8" y="149" width="0.3" height="15.0" fill="rgb(251,123,13)" rx="2" ry="2" />
<text  x="16.76" y="159.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (13 samples, 0.03%)</title><rect x="809.1" y="341" width="0.3" height="15.0" fill="rgb(233,81,6)" rx="2" ry="2" />
<text  x="812.10" y="351.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (5 samples, 0.01%)</title><rect x="1183.5" y="325" width="0.1" height="15.0" fill="rgb(254,107,5)" rx="2" ry="2" />
<text  x="1186.46" y="335.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (9 samples, 0.02%)</title><rect x="15.5" y="85" width="0.2" height="15.0" fill="rgb(234,44,18)" rx="2" ry="2" />
<text  x="18.46" y="95.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (28 samples, 0.06%)</title><rect x="720.7" y="405" width="0.7" height="15.0" fill="rgb(215,88,4)" rx="2" ry="2" />
<text  x="723.71" y="415.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (222 samples, 0.44%)</title><rect x="12.6" y="229" width="5.2" height="15.0" fill="rgb(242,48,28)" rx="2" ry="2" />
<text  x="15.55" y="239.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (22 samples, 0.04%)</title><rect x="674.6" y="485" width="0.5" height="15.0" fill="rgb(247,123,9)" rx="2" ry="2" />
<text  x="677.57" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (190 samples, 0.38%)</title><rect x="826.8" y="357" width="4.5" height="15.0" fill="rgb(252,201,32)" rx="2" ry="2" />
<text  x="829.79" y="367.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (5 samples, 0.01%)</title><rect x="143.1" y="533" width="0.1" height="15.0" fill="rgb(228,180,45)" rx="2" ry="2" />
<text  x="146.08" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2,086 samples, 4.18%)</title><rect x="1020.4" y="565" width="49.3" height="15.0" fill="rgb(205,156,37)" rx="2" ry="2" />
<text  x="1023.44" y="575.5" >[unk..</text>
</g>
<g >
<title>generic_write_end (5 samples, 0.01%)</title><rect x="18.3" y="341" width="0.1" height="15.0" fill="rgb(216,76,21)" rx="2" ry="2" />
<text  x="21.31" y="351.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (332 samples, 0.66%)</title><rect x="639.7" y="485" width="7.8" height="15.0" fill="rgb(215,185,19)" rx="2" ry="2" />
<text  x="642.66" y="495.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (11 samples, 0.02%)</title><rect x="808.5" y="405" width="0.2" height="15.0" fill="rgb(244,163,50)" rx="2" ry="2" />
<text  x="811.46" y="415.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (11 samples, 0.02%)</title><rect x="808.5" y="373" width="0.2" height="15.0" fill="rgb(220,154,11)" rx="2" ry="2" />
<text  x="811.46" y="383.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (9 samples, 0.02%)</title><rect x="17.1" y="117" width="0.2" height="15.0" fill="rgb(237,165,52)" rx="2" ry="2" />
<text  x="20.06" y="127.5" ></text>
</g>
<g >
<title>sched_clock_cpu (12 samples, 0.02%)</title><rect x="1166.0" y="373" width="0.3" height="15.0" fill="rgb(230,57,49)" rx="2" ry="2" />
<text  x="1169.00" y="383.5" ></text>
</g>
<g >
<title>llist_add_batch (31 samples, 0.06%)</title><rect x="1143.4" y="389" width="0.7" height="15.0" fill="rgb(220,66,23)" rx="2" ry="2" />
<text  x="1146.37" y="399.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (17 samples, 0.03%)</title><rect x="14.1" y="133" width="0.4" height="15.0" fill="rgb(210,119,15)" rx="2" ry="2" />
<text  x="17.09" y="143.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (31 samples, 0.06%)</title><rect x="14.1" y="149" width="0.7" height="15.0" fill="rgb(244,1,24)" rx="2" ry="2" />
<text  x="17.09" y="159.5" ></text>
</g>
<g >
<title>do_user_addr_fault (122 samples, 0.24%)</title><rect x="1017.1" y="517" width="2.8" height="15.0" fill="rgb(208,116,43)" rx="2" ry="2" />
<text  x="1020.07" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (12 samples, 0.02%)</title><rect x="1021.6" y="517" width="0.3" height="15.0" fill="rgb(225,122,46)" rx="2" ry="2" />
<text  x="1024.60" y="527.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (101 samples, 0.20%)</title><rect x="178.0" y="373" width="2.3" height="15.0" fill="rgb(215,68,33)" rx="2" ry="2" />
<text  x="180.95" y="383.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.06%)</title><rect x="739.0" y="357" width="0.7" height="15.0" fill="rgb(246,171,44)" rx="2" ry="2" />
<text  x="741.99" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (54 samples, 0.11%)</title><rect x="143.2" y="405" width="1.3" height="15.0" fill="rgb(249,53,27)" rx="2" ry="2" />
<text  x="146.20" y="415.5" ></text>
</g>
<g >
<title>poll_idle (23 samples, 0.05%)</title><rect x="21.7" y="453" width="0.5" height="15.0" fill="rgb(230,161,23)" rx="2" ry="2" />
<text  x="24.67" y="463.5" ></text>
</g>
<g >
<title>menu_select (17 samples, 0.03%)</title><rect x="25.3" y="405" width="0.4" height="15.0" fill="rgb(251,141,11)" rx="2" ry="2" />
<text  x="28.31" y="415.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (148 samples, 0.30%)</title><rect x="23.3" y="549" width="3.5" height="15.0" fill="rgb(243,229,5)" rx="2" ry="2" />
<text  x="26.32" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (33 samples, 0.07%)</title><rect x="32.7" y="549" width="0.7" height="15.0" fill="rgb(239,143,14)" rx="2" ry="2" />
<text  x="35.65" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.05%)</title><rect x="17.9" y="565" width="0.6" height="15.0" fill="rgb(246,227,48)" rx="2" ry="2" />
<text  x="20.94" y="575.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (176 samples, 0.35%)</title><rect x="859.8" y="325" width="4.1" height="15.0" fill="rgb(209,106,10)" rx="2" ry="2" />
<text  x="862.77" y="335.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,992 samples, 3.99%)</title><rect x="1098.9" y="533" width="47.1" height="15.0" fill="rgb(232,98,45)" rx="2" ry="2" />
<text  x="1101.91" y="543.5" >cpu_..</text>
</g>
<g >
<title>get_page_from_freelist (36 samples, 0.07%)</title><rect x="14.8" y="117" width="0.9" height="15.0" fill="rgb(244,114,20)" rx="2" ry="2" />
<text  x="17.82" y="127.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2,002 samples, 4.01%)</title><rect x="889.2" y="405" width="47.3" height="15.0" fill="rgb(251,157,51)" rx="2" ry="2" />
<text  x="892.18" y="415.5" >&lt;par..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (32 samples, 0.06%)</title><rect x="850.6" y="293" width="0.7" height="15.0" fill="rgb(227,159,54)" rx="2" ry="2" />
<text  x="853.58" y="303.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (24 samples, 0.05%)</title><rect x="1068.8" y="501" width="0.6" height="15.0" fill="rgb(218,2,31)" rx="2" ry="2" />
<text  x="1071.82" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (9 samples, 0.02%)</title><rect x="1170.9" y="357" width="0.2" height="15.0" fill="rgb(234,189,38)" rx="2" ry="2" />
<text  x="1173.94" y="367.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (6 samples, 0.01%)</title><rect x="18.0" y="341" width="0.2" height="15.0" fill="rgb(237,3,31)" rx="2" ry="2" />
<text  x="21.03" y="351.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (395 samples, 0.79%)</title><rect x="449.1" y="389" width="9.3" height="15.0" fill="rgb(251,208,23)" rx="2" ry="2" />
<text  x="452.06" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (296 samples, 0.59%)</title><rect x="130.6" y="485" width="7.0" height="15.0" fill="rgb(216,129,35)" rx="2" ry="2" />
<text  x="133.59" y="495.5" ></text>
</g>
<g >
<title>record__mmap_read_all (235 samples, 0.47%)</title><rect x="12.4" y="517" width="5.5" height="15.0" fill="rgb(239,94,3)" rx="2" ry="2" />
<text  x="15.36" y="527.5" ></text>
</g>
<g >
<title>dispatcher@plt (12 samples, 0.02%)</title><rect x="976.6" y="485" width="0.3" height="15.0" fill="rgb(214,100,40)" rx="2" ry="2" />
<text  x="979.58" y="495.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (15 samples, 0.03%)</title><rect x="16.0" y="165" width="0.3" height="15.0" fill="rgb(232,49,41)" rx="2" ry="2" />
<text  x="18.95" y="175.5" ></text>
</g>
<g >
<title>ovl_write_iter (20 samples, 0.04%)</title><rect x="18.0" y="469" width="0.5" height="15.0" fill="rgb(231,44,6)" rx="2" ry="2" />
<text  x="21.01" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (272 samples, 0.54%)</title><rect x="799.7" y="389" width="6.4" height="15.0" fill="rgb(242,211,11)" rx="2" ry="2" />
<text  x="802.72" y="399.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (12 samples, 0.02%)</title><rect x="657.2" y="501" width="0.3" height="15.0" fill="rgb(206,105,48)" rx="2" ry="2" />
<text  x="660.21" y="511.5" ></text>
</g>
<g >
<title>pick_next_task_fair (184 samples, 0.37%)</title><rect x="1139.9" y="469" width="4.3" height="15.0" fill="rgb(239,31,51)" rx="2" ry="2" />
<text  x="1142.85" y="479.5" ></text>
</g>
<g >
<title>CompareAndSwap (694 samples, 1.39%)</title><rect x="111.5" y="517" width="16.4" height="15.0" fill="rgb(246,214,36)" rx="2" ry="2" />
<text  x="114.55" y="527.5" ></text>
</g>
<g >
<title>__cmd_record (330 samples, 0.66%)</title><rect x="10.1" y="533" width="7.8" height="15.0" fill="rgb(227,7,4)" rx="2" ry="2" />
<text  x="13.12" y="543.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.05%)</title><rect x="739.0" y="341" width="0.6" height="15.0" fill="rgb(246,3,37)" rx="2" ry="2" />
<text  x="741.99" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (133 samples, 0.27%)</title><rect x="844.1" y="325" width="3.1" height="15.0" fill="rgb(239,128,21)" rx="2" ry="2" />
<text  x="847.06" y="335.5" ></text>
</g>
<g >
<title>generic_perform_write (20 samples, 0.04%)</title><rect x="18.0" y="373" width="0.5" height="15.0" fill="rgb(210,118,41)" rx="2" ry="2" />
<text  x="21.01" y="383.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_init (13 samples, 0.03%)</title><rect x="699.5" y="437" width="0.3" height="15.0" fill="rgb(226,168,15)" rx="2" ry="2" />
<text  x="702.47" y="447.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (7 samples, 0.01%)</title><rect x="13.9" y="133" width="0.1" height="15.0" fill="rgb(238,115,20)" rx="2" ry="2" />
<text  x="16.87" y="143.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (9 samples, 0.02%)</title><rect x="22.4" y="501" width="0.3" height="15.0" fill="rgb(225,166,22)" rx="2" ry="2" />
<text  x="25.45" y="511.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (212 samples, 0.42%)</title><rect x="731.9" y="357" width="5.0" height="15.0" fill="rgb(251,56,36)" rx="2" ry="2" />
<text  x="734.88" y="367.5" ></text>
</g>
<g >
<title>cpu_startup_entry (182 samples, 0.36%)</title><rect x="19.0" y="533" width="4.3" height="15.0" fill="rgb(213,170,46)" rx="2" ry="2" />
<text  x="22.02" y="543.5" ></text>
</g>
<g >
<title>native_sched_clock (19 samples, 0.04%)</title><rect x="1167.5" y="373" width="0.5" height="15.0" fill="rgb(232,194,4)" rx="2" ry="2" />
<text  x="1170.51" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (12 samples, 0.02%)</title><rect x="709.0" y="373" width="0.3" height="15.0" fill="rgb(248,14,54)" rx="2" ry="2" />
<text  x="711.99" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (12 samples, 0.02%)</title><rect x="740.4" y="309" width="0.2" height="15.0" fill="rgb(206,99,1)" rx="2" ry="2" />
<text  x="743.36" y="319.5" ></text>
</g>
<g >
<title>vfs_iter_write (222 samples, 0.44%)</title><rect x="12.6" y="293" width="5.2" height="15.0" fill="rgb(244,199,16)" rx="2" ry="2" />
<text  x="15.55" y="303.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (19 samples, 0.04%)</title><rect x="16.5" y="101" width="0.5" height="15.0" fill="rgb(246,44,4)" rx="2" ry="2" />
<text  x="19.54" y="111.5" ></text>
</g>
<g >
<title>pick_next_task_fair (364 samples, 0.73%)</title><rect x="1177.8" y="405" width="8.6" height="15.0" fill="rgb(207,156,1)" rx="2" ry="2" />
<text  x="1180.81" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (76 samples, 0.15%)</title><rect x="733.6" y="293" width="1.8" height="15.0" fill="rgb(236,184,4)" rx="2" ry="2" />
<text  x="736.60" y="303.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,131 samples, 2.26%)</title><rect x="1146.8" y="437" width="26.7" height="15.0" fill="rgb(227,43,9)" rx="2" ry="2" />
<text  x="1149.77" y="447.5" >c..</text>
</g>
<g >
<title>__alloc_pages_nodemask (37 samples, 0.07%)</title><rect x="14.8" y="133" width="0.9" height="15.0" fill="rgb(214,113,6)" rx="2" ry="2" />
<text  x="17.82" y="143.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (214 samples, 0.43%)</title><rect x="714.9" y="389" width="5.1" height="15.0" fill="rgb(207,153,50)" rx="2" ry="2" />
<text  x="717.94" y="399.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (17 samples, 0.03%)</title><rect x="17.3" y="181" width="0.4" height="15.0" fill="rgb(227,120,49)" rx="2" ry="2" />
<text  x="20.35" y="191.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (12 samples, 0.02%)</title><rect x="657.2" y="485" width="0.3" height="15.0" fill="rgb(245,88,14)" rx="2" ry="2" />
<text  x="660.21" y="495.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1,862 samples, 3.73%)</title><rect x="1146.0" y="501" width="44.0" height="15.0" fill="rgb(206,155,24)" rx="2" ry="2" />
<text  x="1148.99" y="511.5" >arch..</text>
</g>
<g >
<title>rest_init (1,862 samples, 3.73%)</title><rect x="1146.0" y="485" width="44.0" height="15.0" fill="rgb(241,11,13)" rx="2" ry="2" />
<text  x="1148.99" y="495.5" >rest..</text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (17 samples, 0.03%)</title><rect x="140.8" y="533" width="0.4" height="15.0" fill="rgb(209,84,36)" rx="2" ry="2" />
<text  x="143.82" y="543.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (40 samples, 0.08%)</title><rect x="142.1" y="517" width="1.0" height="15.0" fill="rgb(230,144,26)" rx="2" ry="2" />
<text  x="145.14" y="527.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (7 samples, 0.01%)</title><rect x="12.0" y="421" width="0.2" height="15.0" fill="rgb(220,215,51)" rx="2" ry="2" />
<text  x="15.03" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,395 samples, 2.79%)</title><rect x="1100.2" y="485" width="33.0" height="15.0" fill="rgb(213,81,15)" rx="2" ry="2" />
<text  x="1103.24" y="495.5" >cp..</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1,304 samples, 2.61%)</title><rect x="458.4" y="373" width="30.8" height="15.0" fill="rgb(234,31,3)" rx="2" ry="2" />
<text  x="461.39" y="383.5" >co..</text>
</g>
<g >
<title>dispatcher (44 samples, 0.09%)</title><rect x="34.4" y="549" width="1.0" height="15.0" fill="rgb(222,68,15)" rx="2" ry="2" />
<text  x="37.35" y="559.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (39 samples, 0.08%)</title><rect x="1174.0" y="421" width="0.9" height="15.0" fill="rgb(230,167,28)" rx="2" ry="2" />
<text  x="1177.01" y="431.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (13 samples, 0.03%)</title><rect x="674.3" y="501" width="0.3" height="15.0" fill="rgb(249,17,13)" rx="2" ry="2" />
<text  x="677.27" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (5 samples, 0.01%)</title><rect x="739.6" y="341" width="0.1" height="15.0" fill="rgb(206,43,46)" rx="2" ry="2" />
<text  x="742.58" y="351.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (37 samples, 0.07%)</title><rect x="142.1" y="501" width="0.9" height="15.0" fill="rgb(244,0,40)" rx="2" ry="2" />
<text  x="145.14" y="511.5" ></text>
</g>
<g >
<title>do_iter_write (222 samples, 0.44%)</title><rect x="12.6" y="277" width="5.2" height="15.0" fill="rgb(207,94,29)" rx="2" ry="2" />
<text  x="15.55" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11 samples, 0.02%)</title><rect x="1178.4" y="373" width="0.2" height="15.0" fill="rgb(245,56,14)" rx="2" ry="2" />
<text  x="1181.38" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (77 samples, 0.15%)</title><rect x="23.5" y="405" width="1.8" height="15.0" fill="rgb(211,142,28)" rx="2" ry="2" />
<text  x="26.46" y="415.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (105 samples, 0.21%)</title><rect x="19.2" y="453" width="2.5" height="15.0" fill="rgb(225,141,47)" rx="2" ry="2" />
<text  x="22.19" y="463.5" ></text>
</g>
<g >
<title>rmqueue (9 samples, 0.02%)</title><rect x="15.5" y="101" width="0.2" height="15.0" fill="rgb(253,51,43)" rx="2" ry="2" />
<text  x="18.46" y="111.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (332 samples, 0.66%)</title><rect x="600.4" y="453" width="7.9" height="15.0" fill="rgb(224,105,30)" rx="2" ry="2" />
<text  x="603.45" y="463.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (337 samples, 0.67%)</title><rect x="936.8" y="421" width="8.0" height="15.0" fill="rgb(209,167,31)" rx="2" ry="2" />
<text  x="939.85" y="431.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (20 samples, 0.04%)</title><rect x="18.0" y="389" width="0.5" height="15.0" fill="rgb(242,30,9)" rx="2" ry="2" />
<text  x="21.01" y="399.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (7 samples, 0.01%)</title><rect x="31.8" y="549" width="0.1" height="15.0" fill="rgb(231,185,54)" rx="2" ry="2" />
<text  x="34.76" y="559.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (10 samples, 0.02%)</title><rect x="878.9" y="437" width="0.3" height="15.0" fill="rgb(230,187,54)" rx="2" ry="2" />
<text  x="881.95" y="447.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.03%)</title><rect x="735.4" y="293" width="0.4" height="15.0" fill="rgb(246,211,14)" rx="2" ry="2" />
<text  x="738.40" y="303.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (5 samples, 0.01%)</title><rect x="739.6" y="309" width="0.1" height="15.0" fill="rgb(239,15,43)" rx="2" ry="2" />
<text  x="742.58" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (69 samples, 0.14%)</title><rect x="1046.9" y="549" width="1.7" height="15.0" fill="rgb(252,173,45)" rx="2" ry="2" />
<text  x="1049.92" y="559.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (141 samples, 0.28%)</title><rect x="19.1" y="501" width="3.3" height="15.0" fill="rgb(252,157,24)" rx="2" ry="2" />
<text  x="22.12" y="511.5" ></text>
</g>
<g >
<title>__GI_munmap (54 samples, 0.11%)</title><rect x="143.2" y="437" width="1.3" height="15.0" fill="rgb(238,229,28)" rx="2" ry="2" />
<text  x="146.20" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (2,001 samples, 4.01%)</title><rect x="889.2" y="389" width="47.3" height="15.0" fill="rgb(217,34,30)" rx="2" ry="2" />
<text  x="892.20" y="399.5" >core..</text>
</g>
<g >
<title>file_update_time (5 samples, 0.01%)</title><rect x="12.6" y="197" width="0.1" height="15.0" fill="rgb(206,160,29)" rx="2" ry="2" />
<text  x="15.62" y="207.5" ></text>
</g>
<g >
<title>_perf_ioctl (71 samples, 0.14%)</title><rect x="10.2" y="389" width="1.7" height="15.0" fill="rgb(226,96,22)" rx="2" ry="2" />
<text  x="13.21" y="399.5" ></text>
</g>
<g >
<title>schedule_idle (425 samples, 0.85%)</title><rect x="1177.1" y="437" width="10.1" height="15.0" fill="rgb(232,188,27)" rx="2" ry="2" />
<text  x="1180.13" y="447.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (9 samples, 0.02%)</title><rect x="12.8" y="197" width="0.2" height="15.0" fill="rgb(237,68,29)" rx="2" ry="2" />
<text  x="15.76" y="207.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (7 samples, 0.01%)</title><rect x="31.6" y="549" width="0.2" height="15.0" fill="rgb(224,11,27)" rx="2" ry="2" />
<text  x="34.59" y="559.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (237 samples, 0.47%)</title><rect x="54.0" y="485" width="5.6" height="15.0" fill="rgb(221,147,19)" rx="2" ry="2" />
<text  x="57.03" y="495.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (28 samples, 0.06%)</title><rect x="74.6" y="549" width="0.7" height="15.0" fill="rgb(217,3,41)" rx="2" ry="2" />
<text  x="77.63" y="559.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (8 samples, 0.02%)</title><rect x="741.5" y="453" width="0.2" height="15.0" fill="rgb(246,74,21)" rx="2" ry="2" />
<text  x="744.47" y="463.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (29 samples, 0.06%)</title><rect x="1170.8" y="373" width="0.7" height="15.0" fill="rgb(218,85,17)" rx="2" ry="2" />
<text  x="1173.82" y="383.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (25 samples, 0.05%)</title><rect x="878.4" y="277" width="0.5" height="15.0" fill="rgb(232,64,31)" rx="2" ry="2" />
<text  x="881.36" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (577 samples, 1.16%)</title><rect x="778.1" y="421" width="13.6" height="15.0" fill="rgb(245,71,4)" rx="2" ry="2" />
<text  x="781.06" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (58 samples, 0.12%)</title><rect x="715.5" y="373" width="1.4" height="15.0" fill="rgb(222,110,30)" rx="2" ry="2" />
<text  x="718.49" y="383.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (142 samples, 0.28%)</title><rect x="1173.6" y="437" width="3.4" height="15.0" fill="rgb(231,189,34)" rx="2" ry="2" />
<text  x="1176.61" y="447.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.04%)</title><rect x="725.2" y="341" width="0.5" height="15.0" fill="rgb(229,117,35)" rx="2" ry="2" />
<text  x="728.24" y="351.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (29 samples, 0.06%)</title><rect x="735.8" y="293" width="0.7" height="15.0" fill="rgb(231,32,39)" rx="2" ry="2" />
<text  x="738.78" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (6 samples, 0.01%)</title><rect x="1148.1" y="277" width="0.2" height="15.0" fill="rgb(235,152,48)" rx="2" ry="2" />
<text  x="1151.14" y="287.5" ></text>
</g>
<g >
<title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (231 samples, 0.46%)</title><rect x="709.0" y="389" width="5.4" height="15.0" fill="rgb(217,4,47)" rx="2" ry="2" />
<text  x="711.99" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (217 samples, 0.43%)</title><rect x="709.3" y="357" width="5.1" height="15.0" fill="rgb(238,205,1)" rx="2" ry="2" />
<text  x="712.27" y="367.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (21 samples, 0.04%)</title><rect x="104.1" y="517" width="0.5" height="15.0" fill="rgb(226,199,42)" rx="2" ry="2" />
<text  x="107.13" y="527.5" ></text>
</g>
<g >
<title>__schedule (25 samples, 0.05%)</title><rect x="25.9" y="421" width="0.6" height="15.0" fill="rgb(248,101,41)" rx="2" ry="2" />
<text  x="28.94" y="431.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 0.13%)</title><rect x="10.4" y="213" width="1.5" height="15.0" fill="rgb(247,143,5)" rx="2" ry="2" />
<text  x="13.40" y="223.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (125 samples, 0.25%)</title><rect x="649.8" y="501" width="2.9" height="15.0" fill="rgb(230,70,14)" rx="2" ry="2" />
<text  x="652.79" y="511.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (54 samples, 0.11%)</title><rect x="143.2" y="277" width="1.3" height="15.0" fill="rgb(234,150,17)" rx="2" ry="2" />
<text  x="146.20" y="287.5" ></text>
</g>
<g >
<title>rmqueue (22 samples, 0.04%)</title><rect x="1018.5" y="389" width="0.5" height="15.0" fill="rgb(211,95,28)" rx="2" ry="2" />
<text  x="1021.53" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (13 samples, 0.03%)</title><rect x="699.5" y="341" width="0.3" height="15.0" fill="rgb(253,150,5)" rx="2" ry="2" />
<text  x="702.47" y="351.5" ></text>
</g>
<g >
<title>perf (355 samples, 0.71%)</title><rect x="10.1" y="581" width="8.4" height="15.0" fill="rgb(226,225,48)" rx="2" ry="2" />
<text  x="13.09" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (23 samples, 0.05%)</title><rect x="17.9" y="549" width="0.6" height="15.0" fill="rgb(218,167,17)" rx="2" ry="2" />
<text  x="20.94" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (63 samples, 0.13%)</title><rect x="1171.6" y="373" width="1.4" height="15.0" fill="rgb(224,79,50)" rx="2" ry="2" />
<text  x="1174.55" y="383.5" ></text>
</g>
<g >
<title>NaClAddrSpaceFree (54 samples, 0.11%)</title><rect x="143.2" y="453" width="1.3" height="15.0" fill="rgb(243,139,40)" rx="2" ry="2" />
<text  x="146.20" y="463.5" ></text>
</g>
<g >
<title>cpuidle_enter (78 samples, 0.16%)</title><rect x="23.5" y="421" width="1.8" height="15.0" fill="rgb(222,78,38)" rx="2" ry="2" />
<text  x="26.46" y="431.5" ></text>
</g>
<g >
<title>[unknown] (330 samples, 0.66%)</title><rect x="10.1" y="565" width="7.8" height="15.0" fill="rgb(226,222,8)" rx="2" ry="2" />
<text  x="13.12" y="575.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.01%)</title><rect x="1171.1" y="357" width="0.2" height="15.0" fill="rgb(220,146,54)" rx="2" ry="2" />
<text  x="1174.15" y="367.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (328 samples, 0.66%)</title><rect x="1178.6" y="373" width="7.8" height="15.0" fill="rgb(248,178,43)" rx="2" ry="2" />
<text  x="1181.64" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (314 samples, 0.63%)</title><rect x="879.2" y="421" width="7.4" height="15.0" fill="rgb(232,38,27)" rx="2" ry="2" />
<text  x="882.19" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 0.02%)</title><rect x="1046.3" y="485" width="0.3" height="15.0" fill="rgb(222,84,14)" rx="2" ry="2" />
<text  x="1049.31" y="495.5" ></text>
</g>
<g >
<title>DW.ref.rust_eh_personality (18 samples, 0.04%)</title><rect x="27.1" y="565" width="0.5" height="15.0" fill="rgb(230,212,51)" rx="2" ry="2" />
<text  x="30.15" y="575.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (24 samples, 0.05%)</title><rect x="731.3" y="357" width="0.6" height="15.0" fill="rgb(246,139,19)" rx="2" ry="2" />
<text  x="734.31" y="367.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (456 samples, 0.91%)</title><rect x="714.9" y="437" width="10.8" height="15.0" fill="rgb(245,109,40)" rx="2" ry="2" />
<text  x="717.94" y="447.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (416 samples, 0.83%)</title><rect x="598.8" y="469" width="9.8" height="15.0" fill="rgb(222,148,11)" rx="2" ry="2" />
<text  x="601.82" y="479.5" ></text>
</g>
<g >
<title>NaClMutexLock (353 samples, 0.71%)</title><rect x="129.6" y="501" width="8.3" height="15.0" fill="rgb(223,41,34)" rx="2" ry="2" />
<text  x="132.57" y="511.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1,862 samples, 3.73%)</title><rect x="1146.0" y="549" width="44.0" height="15.0" fill="rgb(250,144,15)" rx="2" ry="2" />
<text  x="1148.99" y="559.5" >x86_..</text>
</g>
<g >
<title>NaClXMutexLock (18 samples, 0.04%)</title><rect x="31.9" y="549" width="0.4" height="15.0" fill="rgb(226,188,36)" rx="2" ry="2" />
<text  x="34.92" y="559.5" ></text>
</g>
<g >
<title>vfs_iter_write (20 samples, 0.04%)</title><rect x="18.0" y="453" width="0.5" height="15.0" fill="rgb(207,154,13)" rx="2" ry="2" />
<text  x="21.01" y="463.5" ></text>
</g>
<g >
<title>start_secondary (182 samples, 0.36%)</title><rect x="19.0" y="549" width="4.3" height="15.0" fill="rgb(249,144,46)" rx="2" ry="2" />
<text  x="22.02" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (8 samples, 0.02%)</title><rect x="1171.3" y="357" width="0.2" height="15.0" fill="rgb(238,123,13)" rx="2" ry="2" />
<text  x="1174.29" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt; (316 samples, 0.63%)</title><rect x="791.7" y="453" width="7.5" height="15.0" fill="rgb(231,58,20)" rx="2" ry="2" />
<text  x="794.69" y="463.5" ></text>
</g>
<g >
<title>__libc_write (229 samples, 0.46%)</title><rect x="12.4" y="421" width="5.4" height="15.0" fill="rgb(253,45,5)" rx="2" ry="2" />
<text  x="15.43" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (8 samples, 0.02%)</title><rect x="34.2" y="501" width="0.2" height="15.0" fill="rgb(240,110,54)" rx="2" ry="2" />
<text  x="37.17" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (58 samples, 0.12%)</title><rect x="720.0" y="421" width="1.4" height="15.0" fill="rgb(220,138,4)" rx="2" ry="2" />
<text  x="723.00" y="431.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (31 samples, 0.06%)</title><rect x="1136.8" y="485" width="0.7" height="15.0" fill="rgb(215,181,52)" rx="2" ry="2" />
<text  x="1139.78" y="495.5" ></text>
</g>
<g >
<title>native_sched_clock (11 samples, 0.02%)</title><rect x="1166.0" y="357" width="0.3" height="15.0" fill="rgb(251,86,27)" rx="2" ry="2" />
<text  x="1169.02" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (736 samples, 1.47%)</title><rect x="809.4" y="357" width="17.4" height="15.0" fill="rgb(229,212,27)" rx="2" ry="2" />
<text  x="812.41" y="367.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (15 samples, 0.03%)</title><rect x="1021.2" y="485" width="0.4" height="15.0" fill="rgb(205,58,25)" rx="2" ry="2" />
<text  x="1024.25" y="495.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (10 samples, 0.02%)</title><rect x="611.9" y="517" width="0.2" height="15.0" fill="rgb(217,127,12)" rx="2" ry="2" />
<text  x="614.91" y="527.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (38,151 samples, 76.37%)</title><rect x="76.1" y="549" width="901.2" height="15.0" fill="rgb(233,65,13)" rx="2" ry="2" />
<text  x="79.07" y="559.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.02%)</title><rect x="808.5" y="389" width="0.2" height="15.0" fill="rgb(235,43,39)" rx="2" ry="2" />
<text  x="811.46" y="399.5" ></text>
</g>
<g >
<title>rest_init (148 samples, 0.30%)</title><rect x="23.3" y="485" width="3.5" height="15.0" fill="rgb(241,200,14)" rx="2" ry="2" />
<text  x="26.32" y="495.5" ></text>
</g>
<g >
<title>update_rq_clock (14 samples, 0.03%)</title><rect x="1186.5" y="405" width="0.4" height="15.0" fill="rgb(224,52,26)" rx="2" ry="2" />
<text  x="1189.53" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.03%)</title><rect x="846.8" y="277" width="0.4" height="15.0" fill="rgb(234,108,14)" rx="2" ry="2" />
<text  x="849.82" y="287.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (23 samples, 0.05%)</title><rect x="1047.8" y="517" width="0.6" height="15.0" fill="rgb(232,221,29)" rx="2" ry="2" />
<text  x="1050.82" y="527.5" ></text>
</g>
<g >
<title>dispatcher (14 samples, 0.03%)</title><rect x="1046.6" y="549" width="0.3" height="15.0" fill="rgb(251,201,48)" rx="2" ry="2" />
<text  x="1049.59" y="559.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (702 samples, 1.41%)</title><rect x="847.3" y="373" width="16.6" height="15.0" fill="rgb(222,228,47)" rx="2" ry="2" />
<text  x="850.34" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (14 samples, 0.03%)</title><rect x="1069.4" y="549" width="0.3" height="15.0" fill="rgb(230,224,41)" rx="2" ry="2" />
<text  x="1072.39" y="559.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (974 samples, 1.95%)</title><rect x="808.3" y="421" width="23.0" height="15.0" fill="rgb(236,96,14)" rx="2" ry="2" />
<text  x="811.27" y="431.5" >&lt;..</text>
</g>
<g >
<title>ksys_write (227 samples, 0.45%)</title><rect x="12.5" y="357" width="5.3" height="15.0" fill="rgb(231,63,20)" rx="2" ry="2" />
<text  x="15.48" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (13 samples, 0.03%)</title><rect x="1144.9" y="501" width="0.3" height="15.0" fill="rgb(227,48,20)" rx="2" ry="2" />
<text  x="1147.93" y="511.5" ></text>
</g>
<g >
<title>file_modified (5 samples, 0.01%)</title><rect x="12.6" y="213" width="0.1" height="15.0" fill="rgb(207,97,7)" rx="2" ry="2" />
<text  x="15.62" y="223.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (5 samples, 0.01%)</title><rect x="1166.4" y="373" width="0.1" height="15.0" fill="rgb(210,76,14)" rx="2" ry="2" />
<text  x="1169.38" y="383.5" ></text>
</g>
<g >
<title>nohz_csd_func (50 samples, 0.10%)</title><rect x="1175.8" y="421" width="1.2" height="15.0" fill="rgb(250,56,20)" rx="2" ry="2" />
<text  x="1178.78" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="1100.5" y="453" width="0.2" height="15.0" fill="rgb(228,226,24)" rx="2" ry="2" />
<text  x="1103.50" y="463.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (89 samples, 0.18%)</title><rect x="839.5" y="341" width="2.1" height="15.0" fill="rgb(232,225,26)" rx="2" ry="2" />
<text  x="842.45" y="351.5" ></text>
</g>
<g >
<title>rcu_idle_exit (37 samples, 0.07%)</title><rect x="1166.5" y="389" width="0.9" height="15.0" fill="rgb(224,195,17)" rx="2" ry="2" />
<text  x="1169.50" y="399.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.04%)</title><rect x="727.2" y="309" width="0.5" height="15.0" fill="rgb(250,117,22)" rx="2" ry="2" />
<text  x="730.23" y="319.5" ></text>
</g>
<g >
<title>[anon] (1,838 samples, 3.68%)</title><rect x="27.6" y="565" width="43.4" height="15.0" fill="rgb(210,71,23)" rx="2" ry="2" />
<text  x="30.57" y="575.5" >[anon]</text>
</g>
<g >
<title>native_sched_clock (14 samples, 0.03%)</title><rect x="1131.7" y="421" width="0.4" height="15.0" fill="rgb(206,14,26)" rx="2" ry="2" />
<text  x="1134.75" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (229 samples, 0.46%)</title><rect x="12.4" y="405" width="5.4" height="15.0" fill="rgb(245,90,11)" rx="2" ry="2" />
<text  x="15.43" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (17 samples, 0.03%)</title><rect x="948.1" y="373" width="0.4" height="15.0" fill="rgb(220,121,1)" rx="2" ry="2" />
<text  x="951.07" y="383.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (126 samples, 0.25%)</title><rect x="1017.0" y="549" width="3.0" height="15.0" fill="rgb(230,27,44)" rx="2" ry="2" />
<text  x="1020.02" y="559.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (219 samples, 0.44%)</title><rect x="873.2" y="261" width="5.2" height="15.0" fill="rgb(248,202,9)" rx="2" ry="2" />
<text  x="876.19" y="271.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (15 samples, 0.03%)</title><rect x="888.8" y="421" width="0.4" height="15.0" fill="rgb(232,65,29)" rx="2" ry="2" />
<text  x="891.82" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (426 samples, 0.85%)</title><rect x="847.9" y="325" width="10.0" height="15.0" fill="rgb(210,29,50)" rx="2" ry="2" />
<text  x="850.86" y="335.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (5 samples, 0.01%)</title><rect x="18.2" y="341" width="0.1" height="15.0" fill="rgb(243,63,36)" rx="2" ry="2" />
<text  x="21.17" y="351.5" ></text>
</g>
<g >
<title>remote_function (63 samples, 0.13%)</title><rect x="10.4" y="293" width="1.5" height="15.0" fill="rgb(229,3,7)" rx="2" ry="2" />
<text  x="13.40" y="303.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (12 samples, 0.02%)</title><rect x="647.5" y="485" width="0.3" height="15.0" fill="rgb(248,177,5)" rx="2" ry="2" />
<text  x="650.50" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (337 samples, 0.67%)</title><rect x="936.8" y="389" width="8.0" height="15.0" fill="rgb(227,200,43)" rx="2" ry="2" />
<text  x="939.85" y="399.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (19 samples, 0.04%)</title><rect x="17.3" y="197" width="0.5" height="15.0" fill="rgb(225,98,13)" rx="2" ry="2" />
<text  x="20.35" y="207.5" ></text>
</g>
<g >
<title>&lt;std::lazy::SyncLazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.03%)</title><rect x="699.5" y="469" width="0.3" height="15.0" fill="rgb(240,158,41)" rx="2" ry="2" />
<text  x="702.47" y="479.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (231 samples, 0.46%)</title><rect x="709.0" y="405" width="5.4" height="15.0" fill="rgb(237,70,51)" rx="2" ry="2" />
<text  x="711.99" y="415.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (7 samples, 0.01%)</title><rect x="13.4" y="101" width="0.2" height="15.0" fill="rgb(248,43,46)" rx="2" ry="2" />
<text  x="16.45" y="111.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (17 samples, 0.03%)</title><rect x="448.6" y="325" width="0.4" height="15.0" fill="rgb(226,92,21)" rx="2" ry="2" />
<text  x="451.63" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (9 samples, 0.02%)</title><rect x="639.4" y="485" width="0.3" height="15.0" fill="rgb(226,140,1)" rx="2" ry="2" />
<text  x="642.45" y="495.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (12 samples, 0.02%)</title><rect x="739.7" y="325" width="0.3" height="15.0" fill="rgb(236,26,36)" rx="2" ry="2" />
<text  x="742.70" y="335.5" ></text>
</g>
<g >
<title>NaClXMutexLock (390 samples, 0.78%)</title><rect x="128.7" y="517" width="9.2" height="15.0" fill="rgb(205,33,49)" rx="2" ry="2" />
<text  x="131.70" y="527.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (184 samples, 0.37%)</title><rect x="721.4" y="405" width="4.3" height="15.0" fill="rgb(230,4,35)" rx="2" ry="2" />
<text  x="724.37" y="415.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (31 samples, 0.06%)</title><rect x="859.0" y="309" width="0.8" height="15.0" fill="rgb(247,209,14)" rx="2" ry="2" />
<text  x="862.04" y="319.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (23 samples, 0.05%)</title><rect x="1047.8" y="501" width="0.6" height="15.0" fill="rgb(248,209,11)" rx="2" ry="2" />
<text  x="1050.82" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (271 samples, 0.54%)</title><rect x="872.5" y="341" width="6.4" height="15.0" fill="rgb(220,84,37)" rx="2" ry="2" />
<text  x="875.55" y="351.5" ></text>
</g>
</g>
</svg>
