<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>core::sync::atomic::AtomicUsize::load (13 samples, 0.12%)</title><rect x="1056.3" y="517" width="1.4" height="15.0" fill="rgb(248,133,10)" rx="2" ry="2" />
<text  x="1059.25" y="527.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (4 samples, 0.04%)</title><rect x="1139.5" y="581" width="0.4" height="15.0" fill="rgb(240,171,9)" rx="2" ry="2" />
<text  x="1142.46" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="1060.8" y="485" width="0.2" height="15.0" fill="rgb(250,143,21)" rx="2" ry="2" />
<text  x="1063.83" y="495.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.01%)</title><rect x="113.8" y="453" width="0.1" height="15.0" fill="rgb(253,31,15)" rx="2" ry="2" />
<text  x="116.80" y="463.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::guard (1 samples, 0.01%)</title><rect x="554.4" y="549" width="0.1" height="15.0" fill="rgb(251,96,5)" rx="2" ry="2" />
<text  x="557.36" y="559.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (460 samples, 4.25%)</title><rect x="1139.9" y="613" width="50.1" height="15.0" fill="rgb(232,92,41)" rx="2" ry="2" />
<text  x="1142.90" y="623.5" >x86_6..</text>
</g>
<g >
<title>enqueue_entity (2 samples, 0.02%)</title><rect x="23.2" y="309" width="0.2" height="15.0" fill="rgb(218,3,39)" rx="2" ry="2" />
<text  x="26.18" y="319.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.01%)</title><rect x="134.2" y="437" width="0.1" height="15.0" fill="rgb(230,180,4)" rx="2" ry="2" />
<text  x="137.16" y="447.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="134.2" y="325" width="0.1" height="15.0" fill="rgb(214,102,34)" rx="2" ry="2" />
<text  x="137.16" y="335.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (73 samples, 0.67%)</title><rect x="546.5" y="581" width="8.0" height="15.0" fill="rgb(212,183,47)" rx="2" ry="2" />
<text  x="549.52" y="591.5" ></text>
</g>
<g >
<title>__sysvec_call_function (1 samples, 0.01%)</title><rect x="1062.1" y="389" width="0.1" height="15.0" fill="rgb(234,111,11)" rx="2" ry="2" />
<text  x="1065.13" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.18%)</title><rect x="1001.6" y="469" width="2.0" height="15.0" fill="rgb(205,59,20)" rx="2" ry="2" />
<text  x="1004.57" y="479.5" ></text>
</g>
<g >
<title>[anon] (290 samples, 2.68%)</title><rect x="161.2" y="629" width="31.6" height="15.0" fill="rgb(241,190,36)" rx="2" ry="2" />
<text  x="164.18" y="639.5" >[a..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (628 samples, 5.80%)</title><rect x="859.9" y="517" width="68.4" height="15.0" fill="rgb(221,52,11)" rx="2" ry="2" />
<text  x="862.87" y="527.5" >ringbuf..</text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="500.7" y="485" width="0.1" height="15.0" fill="rgb(224,60,25)" rx="2" ry="2" />
<text  x="503.67" y="495.5" ></text>
</g>
<g >
<title>schedule_idle (19 samples, 0.18%)</title><rect x="70.9" y="565" width="2.1" height="15.0" fill="rgb(242,53,30)" rx="2" ry="2" />
<text  x="73.88" y="575.5" ></text>
</g>
<g >
<title>default_send_IPI_mask_sequence_phys (3 samples, 0.03%)</title><rect x="18.9" y="197" width="0.4" height="15.0" fill="rgb(207,129,48)" rx="2" ry="2" />
<text  x="21.93" y="207.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (144 samples, 1.33%)</title><rect x="1107.2" y="517" width="15.7" height="15.0" fill="rgb(211,172,22)" rx="2" ry="2" />
<text  x="1110.22" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (43 samples, 0.40%)</title><rect x="991.0" y="485" width="4.7" height="15.0" fill="rgb(208,167,51)" rx="2" ry="2" />
<text  x="994.01" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="1014.9" y="517" width="0.2" height="15.0" fill="rgb(213,29,44)" rx="2" ry="2" />
<text  x="1017.86" y="527.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (32 samples, 0.30%)</title><rect x="986.1" y="549" width="3.5" height="15.0" fill="rgb(214,141,15)" rx="2" ry="2" />
<text  x="989.11" y="559.5" ></text>
</g>
<g >
<title>xa_load (1 samples, 0.01%)</title><rect x="1022.3" y="293" width="0.1" height="15.0" fill="rgb(251,50,7)" rx="2" ry="2" />
<text  x="1025.27" y="303.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (147 samples, 1.36%)</title><rect x="1026.1" y="549" width="16.0" height="15.0" fill="rgb(215,155,16)" rx="2" ry="2" />
<text  x="1029.08" y="559.5" ></text>
</g>
<g >
<title>asm_common_interrupt (10 samples, 0.09%)</title><rect x="22.0" y="517" width="1.1" height="15.0" fill="rgb(246,147,50)" rx="2" ry="2" />
<text  x="24.98" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (51 samples, 0.47%)</title><rect x="435.2" y="533" width="5.6" height="15.0" fill="rgb(224,154,29)" rx="2" ry="2" />
<text  x="438.21" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.26%)</title><rect x="495.4" y="517" width="3.1" height="15.0" fill="rgb(207,2,20)" rx="2" ry="2" />
<text  x="498.44" y="527.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (7 samples, 0.06%)</title><rect x="461.6" y="517" width="0.7" height="15.0" fill="rgb(230,159,33)" rx="2" ry="2" />
<text  x="464.57" y="527.5" ></text>
</g>
<g >
<title>policy_node (1 samples, 0.01%)</title><rect x="158.2" y="213" width="0.1" height="15.0" fill="rgb(238,158,54)" rx="2" ry="2" />
<text  x="161.24" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.01%)</title><rect x="1167.8" y="421" width="0.1" height="15.0" fill="rgb(223,174,2)" rx="2" ry="2" />
<text  x="1170.78" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.04%)</title><rect x="1066.4" y="245" width="0.4" height="15.0" fill="rgb(222,176,15)" rx="2" ry="2" />
<text  x="1069.38" y="255.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 0.04%)</title><rect x="1068.3" y="421" width="0.5" height="15.0" fill="rgb(215,227,16)" rx="2" ry="2" />
<text  x="1071.34" y="431.5" ></text>
</g>
<g >
<title>alx_poll (3 samples, 0.03%)</title><rect x="22.7" y="389" width="0.4" height="15.0" fill="rgb(209,77,26)" rx="2" ry="2" />
<text  x="25.74" y="399.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.02%)</title><rect x="546.7" y="533" width="0.3" height="15.0" fill="rgb(231,67,54)" rx="2" ry="2" />
<text  x="549.74" y="543.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.02%)</title><rect x="1129.0" y="485" width="0.2" height="15.0" fill="rgb(231,158,12)" rx="2" ry="2" />
<text  x="1132.01" y="495.5" ></text>
</g>
<g >
<title>do_idle (481 samples, 4.44%)</title><rect x="21.5" y="581" width="52.4" height="15.0" fill="rgb(220,88,23)" rx="2" ry="2" />
<text  x="24.55" y="591.5" >do_idle</text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="541.7" y="469" width="0.1" height="15.0" fill="rgb(233,149,10)" rx="2" ry="2" />
<text  x="544.73" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (40 samples, 0.37%)</title><rect x="443.2" y="501" width="4.3" height="15.0" fill="rgb(253,224,14)" rx="2" ry="2" />
<text  x="446.16" y="511.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (5 samples, 0.05%)</title><rect x="1021.4" y="293" width="0.5" height="15.0" fill="rgb(252,219,15)" rx="2" ry="2" />
<text  x="1024.40" y="303.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (30 samples, 0.28%)</title><rect x="453.3" y="517" width="3.3" height="15.0" fill="rgb(222,126,49)" rx="2" ry="2" />
<text  x="456.29" y="527.5" ></text>
</g>
<g >
<title>arp_rcv (1 samples, 0.01%)</title><rect x="23.0" y="309" width="0.1" height="15.0" fill="rgb(245,92,39)" rx="2" ry="2" />
<text  x="25.96" y="319.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (41 samples, 0.38%)</title><rect x="448.3" y="549" width="4.4" height="15.0" fill="rgb(247,146,41)" rx="2" ry="2" />
<text  x="451.28" y="559.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (13 samples, 0.12%)</title><rect x="1021.0" y="309" width="1.4" height="15.0" fill="rgb(218,207,52)" rx="2" ry="2" />
<text  x="1023.96" y="319.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (10 samples, 0.09%)</title><rect x="1059.5" y="549" width="1.1" height="15.0" fill="rgb(244,145,8)" rx="2" ry="2" />
<text  x="1062.52" y="559.5" ></text>
</g>
<g >
<title>notify_change (2 samples, 0.02%)</title><rect x="1024.6" y="389" width="0.2" height="15.0" fill="rgb(214,56,2)" rx="2" ry="2" />
<text  x="1027.56" y="399.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (4 samples, 0.04%)</title><rect x="121.6" y="437" width="0.5" height="15.0" fill="rgb(207,54,36)" rx="2" ry="2" />
<text  x="124.64" y="447.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="1102.1" y="549" width="0.1" height="15.0" fill="rgb(217,7,39)" rx="2" ry="2" />
<text  x="1105.10" y="559.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (12 samples, 0.11%)</title><rect x="1143.8" y="453" width="1.3" height="15.0" fill="rgb(223,25,0)" rx="2" ry="2" />
<text  x="1146.82" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (41 samples, 0.38%)</title><rect x="448.3" y="517" width="4.4" height="15.0" fill="rgb(232,56,10)" rx="2" ry="2" />
<text  x="451.28" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (3 samples, 0.03%)</title><rect x="1049.3" y="501" width="0.3" height="15.0" fill="rgb(240,46,27)" rx="2" ry="2" />
<text  x="1052.28" y="511.5" ></text>
</g>
<g >
<title>block_page_mkwrite (5 samples, 0.05%)</title><rect x="1061.5" y="341" width="0.5" height="15.0" fill="rgb(245,140,23)" rx="2" ry="2" />
<text  x="1064.48" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.06%)</title><rect x="1015.1" y="533" width="0.7" height="15.0" fill="rgb(236,9,52)" rx="2" ry="2" />
<text  x="1018.08" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;usize,dashmap::util::SharedValue&lt;rustposix::safeposix::filesystem::Inode&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="970.5" y="549" width="0.3" height="15.0" fill="rgb(219,21,1)" rx="2" ry="2" />
<text  x="973.53" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (44 samples, 0.41%)</title><rect x="462.3" y="469" width="4.8" height="15.0" fill="rgb(234,129,37)" rx="2" ry="2" />
<text  x="465.33" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (5 samples, 0.05%)</title><rect x="1168.0" y="421" width="0.5" height="15.0" fill="rgb(236,112,42)" rx="2" ry="2" />
<text  x="1171.00" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (21 samples, 0.19%)</title><rect x="1063.0" y="213" width="2.3" height="15.0" fill="rgb(212,67,38)" rx="2" ry="2" />
<text  x="1066.00" y="223.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (7 samples, 0.06%)</title><rect x="80.3" y="405" width="0.7" height="15.0" fill="rgb(212,10,11)" rx="2" ry="2" />
<text  x="83.25" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1143.6" y="437" width="0.1" height="15.0" fill="rgb(242,156,49)" rx="2" ry="2" />
<text  x="1146.60" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (1 samples, 0.01%)</title><rect x="1170.6" y="485" width="0.1" height="15.0" fill="rgb(250,169,1)" rx="2" ry="2" />
<text  x="1173.61" y="495.5" ></text>
</g>
<g >
<title>block_page_mkwrite (15 samples, 0.14%)</title><rect x="1022.4" y="357" width="1.6" height="15.0" fill="rgb(236,204,26)" rx="2" ry="2" />
<text  x="1025.38" y="367.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.02%)</title><rect x="1164.0" y="469" width="0.2" height="15.0" fill="rgb(223,127,19)" rx="2" ry="2" />
<text  x="1166.97" y="479.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="20.8" y="293" width="0.1" height="15.0" fill="rgb(247,148,45)" rx="2" ry="2" />
<text  x="23.78" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.03%)</title><rect x="1012.9" y="453" width="0.3" height="15.0" fill="rgb(228,57,33)" rx="2" ry="2" />
<text  x="1015.90" y="463.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="526.4" y="437" width="0.4" height="15.0" fill="rgb(251,81,29)" rx="2" ry="2" />
<text  x="529.37" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.06%)</title><rect x="1065.4" y="261" width="0.7" height="15.0" fill="rgb(245,17,42)" rx="2" ry="2" />
<text  x="1068.40" y="271.5" ></text>
</g>
<g >
<title>local_touch_nmi (1 samples, 0.01%)</title><rect x="1175.5" y="501" width="0.1" height="15.0" fill="rgb(241,147,14)" rx="2" ry="2" />
<text  x="1178.51" y="511.5" ></text>
</g>
<g >
<title>do_iter_write (3 samples, 0.03%)</title><rect x="158.1" y="357" width="0.4" height="15.0" fill="rgb(238,73,35)" rx="2" ry="2" />
<text  x="161.13" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="482.6" y="581" width="0.2" height="15.0" fill="rgb(252,137,26)" rx="2" ry="2" />
<text  x="485.59" y="591.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (6 samples, 0.06%)</title><rect x="1013.7" y="453" width="0.6" height="15.0" fill="rgb(234,74,33)" rx="2" ry="2" />
<text  x="1016.66" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.02%)</title><rect x="163.5" y="613" width="0.2" height="15.0" fill="rgb(250,47,38)" rx="2" ry="2" />
<text  x="166.46" y="623.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="1059.7" y="421" width="0.3" height="15.0" fill="rgb(224,131,33)" rx="2" ry="2" />
<text  x="1062.74" y="431.5" ></text>
</g>
<g >
<title>do_idle (2 samples, 0.02%)</title><rect x="1189.8" y="533" width="0.2" height="15.0" fill="rgb(249,226,12)" rx="2" ry="2" />
<text  x="1192.78" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.07%)</title><rect x="1000.2" y="469" width="0.8" height="15.0" fill="rgb(216,80,9)" rx="2" ry="2" />
<text  x="1003.16" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (27 samples, 0.25%)</title><rect x="1006.0" y="453" width="3.0" height="15.0" fill="rgb(217,88,45)" rx="2" ry="2" />
<text  x="1009.04" y="463.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="617.1" y="549" width="0.7" height="15.0" fill="rgb(239,75,49)" rx="2" ry="2" />
<text  x="620.10" y="559.5" ></text>
</g>
<g >
<title>rest_init (707 samples, 6.53%)</title><rect x="74.0" y="549" width="77.0" height="15.0" fill="rgb(251,75,27)" rx="2" ry="2" />
<text  x="77.04" y="559.5" >rest_init</text>
</g>
<g >
<title>ext4_da_write_begin (2 samples, 0.02%)</title><rect x="158.1" y="277" width="0.2" height="15.0" fill="rgb(227,188,43)" rx="2" ry="2" />
<text  x="161.13" y="287.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.07%)</title><rect x="1066.9" y="309" width="0.9" height="15.0" fill="rgb(239,210,9)" rx="2" ry="2" />
<text  x="1069.92" y="319.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.01%)</title><rect x="23.6" y="341" width="0.1" height="15.0" fill="rgb(209,189,9)" rx="2" ry="2" />
<text  x="26.61" y="351.5" ></text>
</g>
<g >
<title>inc_zone_page_state (2 samples, 0.02%)</title><rect x="19.7" y="341" width="0.2" height="15.0" fill="rgb(238,160,38)" rx="2" ry="2" />
<text  x="22.69" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.09%)</title><rect x="997.5" y="485" width="1.1" height="15.0" fill="rgb(217,226,50)" rx="2" ry="2" />
<text  x="1000.54" y="495.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (1 samples, 0.01%)</title><rect x="23.0" y="325" width="0.1" height="15.0" fill="rgb(253,173,34)" rx="2" ry="2" />
<text  x="25.96" y="335.5" ></text>
</g>
<g >
<title>rcu_idle_exit (8 samples, 0.07%)</title><rect x="1162.7" y="453" width="0.8" height="15.0" fill="rgb(243,205,35)" rx="2" ry="2" />
<text  x="1165.66" y="463.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.02%)</title><rect x="551.1" y="437" width="0.2" height="15.0" fill="rgb(247,87,38)" rx="2" ry="2" />
<text  x="554.10" y="447.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (10 samples, 0.09%)</title><rect x="1059.5" y="565" width="1.1" height="15.0" fill="rgb(252,223,11)" rx="2" ry="2" />
<text  x="1062.52" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.19%)</title><rect x="1063.0" y="181" width="2.3" height="15.0" fill="rgb(222,114,46)" rx="2" ry="2" />
<text  x="1066.00" y="191.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1 samples, 0.01%)</title><rect x="20.7" y="389" width="0.1" height="15.0" fill="rgb(247,107,4)" rx="2" ry="2" />
<text  x="23.67" y="399.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="1024.6" y="197" width="0.1" height="15.0" fill="rgb(231,109,9)" rx="2" ry="2" />
<text  x="1027.56" y="207.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.01%)</title><rect x="1132.4" y="469" width="0.1" height="15.0" fill="rgb(251,138,34)" rx="2" ry="2" />
<text  x="1135.38" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (41 samples, 0.38%)</title><rect x="448.3" y="533" width="4.4" height="15.0" fill="rgb(239,224,19)" rx="2" ry="2" />
<text  x="451.28" y="543.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="1059.5" y="501" width="0.1" height="15.0" fill="rgb(246,182,0)" rx="2" ry="2" />
<text  x="1062.52" y="511.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.01%)</title><rect x="79.4" y="373" width="0.1" height="15.0" fill="rgb(228,24,22)" rx="2" ry="2" />
<text  x="82.38" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="1060.6" y="517" width="0.1" height="15.0" fill="rgb(226,131,50)" rx="2" ry="2" />
<text  x="1063.61" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.06%)</title><rect x="1058.3" y="565" width="0.7" height="15.0" fill="rgb(244,223,16)" rx="2" ry="2" />
<text  x="1061.32" y="575.5" ></text>
</g>
<g >
<title>switch_fpu_return (1 samples, 0.01%)</title><rect x="1105.6" y="565" width="0.1" height="15.0" fill="rgb(210,142,18)" rx="2" ry="2" />
<text  x="1108.59" y="575.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (6 samples, 0.06%)</title><rect x="538.6" y="469" width="0.6" height="15.0" fill="rgb(209,21,54)" rx="2" ry="2" />
<text  x="541.57" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="489.4" y="581" width="0.2" height="15.0" fill="rgb(212,199,34)" rx="2" ry="2" />
<text  x="492.45" y="591.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4 samples, 0.04%)</title><rect x="1021.0" y="245" width="0.4" height="15.0" fill="rgb(207,102,22)" rx="2" ry="2" />
<text  x="1023.96" y="255.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (167 samples, 1.54%)</title><rect x="169.8" y="565" width="18.2" height="15.0" fill="rgb(222,80,48)" rx="2" ry="2" />
<text  x="172.78" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.10%)</title><rect x="454.4" y="453" width="1.2" height="15.0" fill="rgb(212,24,35)" rx="2" ry="2" />
<text  x="457.38" y="463.5" ></text>
</g>
<g >
<title>read_pages (3 samples, 0.03%)</title><rect x="1021.9" y="293" width="0.4" height="15.0" fill="rgb(223,8,45)" rx="2" ry="2" />
<text  x="1024.94" y="303.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.01%)</title><rect x="158.5" y="373" width="0.1" height="15.0" fill="rgb(230,80,0)" rx="2" ry="2" />
<text  x="161.45" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (3 samples, 0.03%)</title><rect x="1065.0" y="37" width="0.3" height="15.0" fill="rgb(223,163,24)" rx="2" ry="2" />
<text  x="1067.96" y="47.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (13 samples, 0.12%)</title><rect x="1007.6" y="437" width="1.4" height="15.0" fill="rgb(206,114,2)" rx="2" ry="2" />
<text  x="1010.57" y="447.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (21 samples, 0.19%)</title><rect x="1063.0" y="293" width="2.3" height="15.0" fill="rgb(241,196,35)" rx="2" ry="2" />
<text  x="1066.00" y="303.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (355 samples, 3.28%)</title><rect x="77.5" y="469" width="38.7" height="15.0" fill="rgb(230,20,47)" rx="2" ry="2" />
<text  x="80.53" y="479.5" >cpu..</text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="928.2" y="421" width="0.1" height="15.0" fill="rgb(236,22,4)" rx="2" ry="2" />
<text  x="931.17" y="431.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.02%)</title><rect x="140.3" y="405" width="0.2" height="15.0" fill="rgb(209,82,16)" rx="2" ry="2" />
<text  x="143.26" y="415.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (33 samples, 0.30%)</title><rect x="485.7" y="581" width="3.6" height="15.0" fill="rgb(212,150,35)" rx="2" ry="2" />
<text  x="488.75" y="591.5" ></text>
</g>
<g >
<title>__msecs_to_jiffies (1 samples, 0.01%)</title><rect x="71.1" y="517" width="0.1" height="15.0" fill="rgb(210,163,14)" rx="2" ry="2" />
<text  x="74.10" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (5 samples, 0.05%)</title><rect x="1067.1" y="149" width="0.6" height="15.0" fill="rgb(206,222,5)" rx="2" ry="2" />
<text  x="1070.14" y="159.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="1059.0" y="533" width="0.4" height="15.0" fill="rgb(231,92,15)" rx="2" ry="2" />
<text  x="1061.97" y="543.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.01%)</title><rect x="14.4" y="581" width="0.1" height="15.0" fill="rgb(251,65,41)" rx="2" ry="2" />
<text  x="17.36" y="591.5" ></text>
</g>
<g >
<title>alloc_page_buffers (4 samples, 0.04%)</title><rect x="1022.6" y="293" width="0.4" height="15.0" fill="rgb(223,58,3)" rx="2" ry="2" />
<text  x="1025.60" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (25 samples, 0.23%)</title><rect x="547.0" y="501" width="2.7" height="15.0" fill="rgb(225,58,7)" rx="2" ry="2" />
<text  x="549.96" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.18%)</title><rect x="1001.6" y="437" width="2.0" height="15.0" fill="rgb(224,2,5)" rx="2" ry="2" />
<text  x="1004.57" y="447.5" ></text>
</g>
<g >
<title>realloc (21 samples, 0.19%)</title><rect x="1063.0" y="85" width="2.3" height="15.0" fill="rgb(232,179,48)" rx="2" ry="2" />
<text  x="1066.00" y="95.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="20.8" y="405" width="0.1" height="15.0" fill="rgb(223,105,28)" rx="2" ry="2" />
<text  x="23.78" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.04%)</title><rect x="1068.3" y="325" width="0.5" height="15.0" fill="rgb(240,206,45)" rx="2" ry="2" />
<text  x="1071.34" y="335.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (4 samples, 0.04%)</title><rect x="447.8" y="565" width="0.5" height="15.0" fill="rgb(214,36,11)" rx="2" ry="2" />
<text  x="450.84" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_idle_retain_tick (1 samples, 0.01%)</title><rect x="1188.4" y="501" width="0.1" height="15.0" fill="rgb(222,40,29)" rx="2" ry="2" />
<text  x="1191.37" y="511.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="80.9" y="261" width="0.1" height="15.0" fill="rgb(208,46,54)" rx="2" ry="2" />
<text  x="83.90" y="271.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.02%)</title><rect x="14.9" y="581" width="0.2" height="15.0" fill="rgb(214,46,38)" rx="2" ry="2" />
<text  x="17.90" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (27 samples, 0.25%)</title><rect x="489.9" y="517" width="2.9" height="15.0" fill="rgb(231,84,40)" rx="2" ry="2" />
<text  x="492.89" y="527.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (13 samples, 0.12%)</title><rect x="617.8" y="549" width="1.4" height="15.0" fill="rgb(220,110,37)" rx="2" ry="2" />
<text  x="620.75" y="559.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.01%)</title><rect x="1130.7" y="517" width="0.2" height="15.0" fill="rgb(252,152,41)" rx="2" ry="2" />
<text  x="1133.75" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="472.6" y="501" width="0.4" height="15.0" fill="rgb(227,87,47)" rx="2" ry="2" />
<text  x="475.57" y="511.5" ></text>
</g>
<g >
<title>__schedule (118 samples, 1.09%)</title><rect x="133.2" y="485" width="12.8" height="15.0" fill="rgb(248,142,44)" rx="2" ry="2" />
<text  x="136.18" y="495.5" ></text>
</g>
<g >
<title>start_kernel (460 samples, 4.25%)</title><rect x="1139.9" y="581" width="50.1" height="15.0" fill="rgb(251,50,16)" rx="2" ry="2" />
<text  x="1142.90" y="591.5" >start..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (30 samples, 0.28%)</title><rect x="453.3" y="549" width="3.3" height="15.0" fill="rgb(252,229,26)" rx="2" ry="2" />
<text  x="456.29" y="559.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (45 samples, 0.42%)</title><rect x="442.7" y="533" width="4.9" height="15.0" fill="rgb(214,46,7)" rx="2" ry="2" />
<text  x="445.72" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (70 samples, 0.65%)</title><rect x="1004.0" y="517" width="7.6" height="15.0" fill="rgb(236,132,51)" rx="2" ry="2" />
<text  x="1006.97" y="527.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.02%)</title><rect x="1050.2" y="517" width="0.2" height="15.0" fill="rgb(235,215,37)" rx="2" ry="2" />
<text  x="1053.15" y="527.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (1,226 samples, 11.32%)</title><rect x="646.2" y="549" width="133.5" height="15.0" fill="rgb(228,118,47)" rx="2" ry="2" />
<text  x="649.18" y="559.5" >ringbuf::ring_bu..</text>
</g>
<g >
<title>do_shared_fault (8 samples, 0.07%)</title><rect x="1061.3" y="389" width="0.8" height="15.0" fill="rgb(211,86,1)" rx="2" ry="2" />
<text  x="1064.26" y="399.5" ></text>
</g>
<g >
<title>do_filp_open (2 samples, 0.02%)</title><rect x="14.6" y="565" width="0.2" height="15.0" fill="rgb(208,129,54)" rx="2" ry="2" />
<text  x="17.57" y="575.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (63 samples, 0.58%)</title><rect x="151.3" y="453" width="6.8" height="15.0" fill="rgb(209,142,32)" rx="2" ry="2" />
<text  x="154.26" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="1059.7" y="437" width="0.3" height="15.0" fill="rgb(215,63,48)" rx="2" ry="2" />
<text  x="1062.74" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_openat (2 samples, 0.02%)</title><rect x="14.6" y="597" width="0.2" height="15.0" fill="rgb(242,213,32)" rx="2" ry="2" />
<text  x="17.57" y="607.5" ></text>
</g>
<g >
<title>.NET_ThreadPool (1,296 samples, 11.96%)</title><rect x="10.0" y="645" width="141.2" height="15.0" fill="rgb(236,71,13)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >.NET_ThreadPool</text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="1025.6" y="533" width="0.2" height="15.0" fill="rgb(208,200,41)" rx="2" ry="2" />
<text  x="1028.65" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (37 samples, 0.34%)</title><rect x="542.3" y="533" width="4.0" height="15.0" fill="rgb(212,169,34)" rx="2" ry="2" />
<text  x="545.27" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="513.0" y="469" width="0.3" height="15.0" fill="rgb(236,30,0)" rx="2" ry="2" />
<text  x="515.98" y="479.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="1062.9" y="261" width="0.1" height="15.0" fill="rgb(234,204,31)" rx="2" ry="2" />
<text  x="1065.89" y="271.5" ></text>
</g>
<g >
<title>unmap_single_vma (3 samples, 0.03%)</title><rect x="472.2" y="421" width="0.4" height="15.0" fill="rgb(253,107,7)" rx="2" ry="2" />
<text  x="475.24" y="431.5" ></text>
</g>
<g >
<title>drop_buffers (1 samples, 0.01%)</title><rect x="472.9" y="69" width="0.1" height="15.0" fill="rgb(214,83,39)" rx="2" ry="2" />
<text  x="475.89" y="79.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.01%)</title><rect x="158.3" y="213" width="0.2" height="15.0" fill="rgb(226,99,1)" rx="2" ry="2" />
<text  x="161.34" y="223.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (21 samples, 0.19%)</title><rect x="1063.0" y="277" width="2.3" height="15.0" fill="rgb(241,145,33)" rx="2" ry="2" />
<text  x="1066.00" y="287.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (7 samples, 0.06%)</title><rect x="1065.3" y="389" width="0.8" height="15.0" fill="rgb(250,169,8)" rx="2" ry="2" />
<text  x="1068.29" y="399.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.04%)</title><rect x="469.8" y="421" width="0.5" height="15.0" fill="rgb(239,24,19)" rx="2" ry="2" />
<text  x="472.84" y="431.5" ></text>
</g>
<g >
<title>perf_event_task_tick (3 samples, 0.03%)</title><rect x="79.1" y="277" width="0.3" height="15.0" fill="rgb(244,62,11)" rx="2" ry="2" />
<text  x="82.05" y="287.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (19 samples, 0.18%)</title><rect x="1009.5" y="501" width="2.1" height="15.0" fill="rgb(226,131,35)" rx="2" ry="2" />
<text  x="1012.53" y="511.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (37 samples, 0.34%)</title><rect x="542.3" y="565" width="4.0" height="15.0" fill="rgb(254,188,54)" rx="2" ry="2" />
<text  x="545.27" y="575.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (1,377 samples, 12.71%)</title><rect x="779.7" y="533" width="150.0" height="15.0" fill="rgb(222,101,36)" rx="2" ry="2" />
<text  x="782.71" y="543.5" >ringbuf::consumer::..</text>
</g>
<g >
<title>do_sys_ftruncate (2 samples, 0.02%)</title><rect x="1024.6" y="421" width="0.2" height="15.0" fill="rgb(241,218,32)" rx="2" ry="2" />
<text  x="1027.56" y="431.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (14 samples, 0.13%)</title><rect x="1177.7" y="421" width="1.5" height="15.0" fill="rgb(237,215,36)" rx="2" ry="2" />
<text  x="1180.69" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.03%)</title><rect x="1014.4" y="485" width="0.4" height="15.0" fill="rgb(236,204,50)" rx="2" ry="2" />
<text  x="1017.43" y="495.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u16 (6 samples, 0.06%)</title><rect x="1066.3" y="373" width="0.6" height="15.0" fill="rgb(233,140,13)" rx="2" ry="2" />
<text  x="1069.27" y="383.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (3 samples, 0.03%)</title><rect x="1163.2" y="437" width="0.3" height="15.0" fill="rgb(241,21,14)" rx="2" ry="2" />
<text  x="1166.21" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (24 samples, 0.22%)</title><rect x="492.8" y="501" width="2.6" height="15.0" fill="rgb(224,197,48)" rx="2" ry="2" />
<text  x="495.83" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="464.3" y="437" width="0.2" height="15.0" fill="rgb(244,175,7)" rx="2" ry="2" />
<text  x="467.29" y="447.5" ></text>
</g>
<g >
<title>generic_exec_single (63 samples, 0.58%)</title><rect x="151.3" y="389" width="6.8" height="15.0" fill="rgb(238,213,34)" rx="2" ry="2" />
<text  x="154.26" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (58 samples, 0.54%)</title><rect x="511.6" y="501" width="6.3" height="15.0" fill="rgb(219,6,17)" rx="2" ry="2" />
<text  x="514.56" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4 samples, 0.04%)</title><rect x="469.8" y="453" width="0.5" height="15.0" fill="rgb(231,174,53)" rx="2" ry="2" />
<text  x="472.84" y="463.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.02%)</title><rect x="462.1" y="485" width="0.2" height="15.0" fill="rgb(235,71,42)" rx="2" ry="2" />
<text  x="465.11" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (21 samples, 0.19%)</title><rect x="1063.0" y="133" width="2.3" height="15.0" fill="rgb(222,131,48)" rx="2" ry="2" />
<text  x="1066.00" y="143.5" ></text>
</g>
<g >
<title>alx_mask_msix (2 samples, 0.02%)</title><rect x="1106.9" y="405" width="0.2" height="15.0" fill="rgb(231,74,38)" rx="2" ry="2" />
<text  x="1109.90" y="415.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.05%)</title><rect x="1184.4" y="453" width="0.6" height="15.0" fill="rgb(234,4,44)" rx="2" ry="2" />
<text  x="1187.45" y="463.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.07%)</title><rect x="459.1" y="453" width="0.8" height="15.0" fill="rgb(213,103,22)" rx="2" ry="2" />
<text  x="462.06" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="1049.1" y="517" width="0.2" height="15.0" fill="rgb(230,173,41)" rx="2" ry="2" />
<text  x="1052.06" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (94 samples, 0.87%)</title><rect x="971.4" y="581" width="10.2" height="15.0" fill="rgb(211,95,49)" rx="2" ry="2" />
<text  x="974.40" y="591.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u32 (2 samples, 0.02%)</title><rect x="1062.8" y="373" width="0.2" height="15.0" fill="rgb(227,174,33)" rx="2" ry="2" />
<text  x="1065.79" y="383.5" ></text>
</g>
<g >
<title>create_page_buffers (4 samples, 0.04%)</title><rect x="1022.6" y="325" width="0.4" height="15.0" fill="rgb(216,120,27)" rx="2" ry="2" />
<text  x="1025.60" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="1014.9" y="485" width="0.2" height="15.0" fill="rgb(249,155,1)" rx="2" ry="2" />
<text  x="1017.86" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::CAGE_TABLE (1 samples, 0.01%)</title><rect x="1104.2" y="629" width="0.1" height="15.0" fill="rgb(213,115,36)" rx="2" ry="2" />
<text  x="1107.17" y="639.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.05%)</title><rect x="1001.0" y="533" width="0.6" height="15.0" fill="rgb(209,83,48)" rx="2" ry="2" />
<text  x="1004.03" y="543.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.01%)</title><rect x="1130.6" y="517" width="0.1" height="15.0" fill="rgb(211,213,17)" rx="2" ry="2" />
<text  x="1133.64" y="527.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.03%)</title><rect x="966.0" y="549" width="0.3" height="15.0" fill="rgb(219,60,10)" rx="2" ry="2" />
<text  x="968.96" y="559.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (3 samples, 0.03%)</title><rect x="1186.7" y="485" width="0.4" height="15.0" fill="rgb(231,112,46)" rx="2" ry="2" />
<text  x="1189.73" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (24 samples, 0.22%)</title><rect x="483.1" y="549" width="2.6" height="15.0" fill="rgb(223,47,33)" rx="2" ry="2" />
<text  x="486.13" y="559.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.05%)</title><rect x="1009.0" y="501" width="0.5" height="15.0" fill="rgb(225,85,42)" rx="2" ry="2" />
<text  x="1011.98" y="511.5" ></text>
</g>
<g >
<title>get_cpu_device (3 samples, 0.03%)</title><rect x="119.0" y="437" width="0.4" height="15.0" fill="rgb(247,76,24)" rx="2" ry="2" />
<text  x="122.03" y="447.5" ></text>
</g>
<g >
<title>unmap_region (3 samples, 0.03%)</title><rect x="472.2" y="453" width="0.4" height="15.0" fill="rgb(211,79,7)" rx="2" ry="2" />
<text  x="475.24" y="463.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u16 (2 samples, 0.02%)</title><rect x="1062.8" y="341" width="0.2" height="15.0" fill="rgb(209,204,33)" rx="2" ry="2" />
<text  x="1065.79" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="158.1" y="485" width="0.4" height="15.0" fill="rgb(205,223,27)" rx="2" ry="2" />
<text  x="161.13" y="495.5" ></text>
</g>
<g >
<title>page_add_file_rmap (2 samples, 0.02%)</title><rect x="551.1" y="357" width="0.2" height="15.0" fill="rgb(215,83,26)" rx="2" ry="2" />
<text  x="554.10" y="367.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (76 samples, 0.70%)</title><rect x="448.3" y="565" width="8.3" height="15.0" fill="rgb(214,35,21)" rx="2" ry="2" />
<text  x="451.28" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="1025.6" y="565" width="0.2" height="15.0" fill="rgb(240,130,40)" rx="2" ry="2" />
<text  x="1028.65" y="575.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="80.9" y="277" width="0.1" height="15.0" fill="rgb(225,39,21)" rx="2" ry="2" />
<text  x="83.90" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (4 samples, 0.04%)</title><rect x="469.8" y="469" width="0.5" height="15.0" fill="rgb(251,154,36)" rx="2" ry="2" />
<text  x="472.84" y="479.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (7 samples, 0.06%)</title><rect x="80.3" y="373" width="0.7" height="15.0" fill="rgb(254,142,11)" rx="2" ry="2" />
<text  x="83.25" y="383.5" ></text>
</g>
<g >
<title>ext4_ext_grow_indepth (1 samples, 0.01%)</title><rect x="20.7" y="325" width="0.1" height="15.0" fill="rgb(205,119,13)" rx="2" ry="2" />
<text  x="23.67" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_write (3 samples, 0.03%)</title><rect x="158.1" y="453" width="0.4" height="15.0" fill="rgb(251,148,24)" rx="2" ry="2" />
<text  x="161.13" y="463.5" ></text>
</g>
<g >
<title>std::fs::File::set_len (2 samples, 0.02%)</title><rect x="1024.6" y="549" width="0.2" height="15.0" fill="rgb(206,6,7)" rx="2" ry="2" />
<text  x="1027.56" y="559.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_offset (1 samples, 0.01%)</title><rect x="846.0" y="501" width="0.2" height="15.0" fill="rgb(241,131,30)" rx="2" ry="2" />
<text  x="849.04" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="1003.3" y="405" width="0.3" height="15.0" fill="rgb(245,189,34)" rx="2" ry="2" />
<text  x="1006.32" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="146.0" y="485" width="0.3" height="15.0" fill="rgb(234,78,11)" rx="2" ry="2" />
<text  x="149.04" y="495.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (9 samples, 0.08%)</title><rect x="616.1" y="533" width="1.0" height="15.0" fill="rgb(213,94,7)" rx="2" ry="2" />
<text  x="619.12" y="543.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (31 samples, 0.29%)</title><rect x="533.7" y="501" width="3.3" height="15.0" fill="rgb(240,74,49)" rx="2" ry="2" />
<text  x="536.67" y="511.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.01%)</title><rect x="158.1" y="229" width="0.1" height="15.0" fill="rgb(230,43,8)" rx="2" ry="2" />
<text  x="161.13" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function (4 samples, 0.04%)</title><rect x="1103.7" y="629" width="0.5" height="15.0" fill="rgb(220,88,14)" rx="2" ry="2" />
<text  x="1106.74" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (25 samples, 0.23%)</title><rect x="547.0" y="565" width="2.7" height="15.0" fill="rgb(222,141,13)" rx="2" ry="2" />
<text  x="549.96" y="575.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="1005.7" y="437" width="0.2" height="15.0" fill="rgb(210,117,2)" rx="2" ry="2" />
<text  x="1008.71" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.04%)</title><rect x="1068.3" y="309" width="0.5" height="15.0" fill="rgb(252,99,24)" rx="2" ry="2" />
<text  x="1071.34" y="319.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (11 samples, 0.10%)</title><rect x="1002.4" y="421" width="1.2" height="15.0" fill="rgb(211,56,41)" rx="2" ry="2" />
<text  x="1005.45" y="431.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.02%)</title><rect x="546.7" y="501" width="0.3" height="15.0" fill="rgb(251,74,26)" rx="2" ry="2" />
<text  x="549.74" y="511.5" ></text>
</g>
<g >
<title>filemap_map_pages (2 samples, 0.02%)</title><rect x="551.1" y="389" width="0.2" height="15.0" fill="rgb(226,88,24)" rx="2" ry="2" />
<text  x="554.10" y="399.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.01%)</title><rect x="929.6" y="517" width="0.1" height="15.0" fill="rgb(250,162,3)" rx="2" ry="2" />
<text  x="932.58" y="527.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (1 samples, 0.01%)</title><rect x="1059.5" y="533" width="0.1" height="15.0" fill="rgb(214,152,45)" rx="2" ry="2" />
<text  x="1062.52" y="543.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (2 samples, 0.02%)</title><rect x="188.4" y="581" width="0.2" height="15.0" fill="rgb(235,71,46)" rx="2" ry="2" />
<text  x="191.41" y="591.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (4 samples, 0.04%)</title><rect x="1068.3" y="501" width="0.5" height="15.0" fill="rgb(207,163,20)" rx="2" ry="2" />
<text  x="1071.34" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.07%)</title><rect x="519.4" y="453" width="0.9" height="15.0" fill="rgb(232,154,35)" rx="2" ry="2" />
<text  x="522.40" y="463.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 0.58%)</title><rect x="151.3" y="293" width="6.8" height="15.0" fill="rgb(252,60,15)" rx="2" ry="2" />
<text  x="154.26" y="303.5" ></text>
</g>
<g >
<title>create_empty_buffers (4 samples, 0.04%)</title><rect x="1022.6" y="309" width="0.4" height="15.0" fill="rgb(238,26,50)" rx="2" ry="2" />
<text  x="1025.60" y="319.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (58 samples, 0.54%)</title><rect x="1018.1" y="565" width="6.3" height="15.0" fill="rgb(253,117,30)" rx="2" ry="2" />
<text  x="1021.13" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (23 samples, 0.21%)</title><rect x="1062.8" y="437" width="2.5" height="15.0" fill="rgb(237,151,35)" rx="2" ry="2" />
<text  x="1065.79" y="447.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (4 samples, 0.04%)</title><rect x="472.6" y="373" width="0.4" height="15.0" fill="rgb(214,211,51)" rx="2" ry="2" />
<text  x="475.57" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.11%)</title><rect x="1004.7" y="453" width="1.3" height="15.0" fill="rgb(242,217,45)" rx="2" ry="2" />
<text  x="1007.73" y="463.5" ></text>
</g>
<g >
<title>nohz_balance_enter_idle (1 samples, 0.01%)</title><rect x="69.7" y="533" width="0.1" height="15.0" fill="rgb(231,46,22)" rx="2" ry="2" />
<text  x="72.69" y="543.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.01%)</title><rect x="1024.7" y="245" width="0.1" height="15.0" fill="rgb(228,101,12)" rx="2" ry="2" />
<text  x="1027.66" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function (1 samples, 0.01%)</title><rect x="928.2" y="485" width="0.1" height="15.0" fill="rgb(234,74,31)" rx="2" ry="2" />
<text  x="931.17" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.02%)</title><rect x="1015.6" y="453" width="0.2" height="15.0" fill="rgb(225,157,21)" rx="2" ry="2" />
<text  x="1018.62" y="463.5" ></text>
</g>
<g >
<title>perf_ioctl (1 samples, 0.01%)</title><rect x="158.5" y="581" width="0.1" height="15.0" fill="rgb(207,120,36)" rx="2" ry="2" />
<text  x="161.45" y="591.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="1167.9" y="421" width="0.1" height="15.0" fill="rgb(209,0,1)" rx="2" ry="2" />
<text  x="1170.89" y="431.5" ></text>
</g>
<g >
<title>native_sched_clock (3 samples, 0.03%)</title><rect x="67.4" y="501" width="0.3" height="15.0" fill="rgb(207,122,34)" rx="2" ry="2" />
<text  x="70.40" y="511.5" ></text>
</g>
<g >
<title>mpage_process_page (2 samples, 0.02%)</title><rect x="16.2" y="389" width="0.2" height="15.0" fill="rgb(226,131,48)" rx="2" ry="2" />
<text  x="19.21" y="399.5" ></text>
</g>
<g >
<title>__sysvec_call_function (1 samples, 0.01%)</title><rect x="928.1" y="437" width="0.1" height="15.0" fill="rgb(240,102,16)" rx="2" ry="2" />
<text  x="931.06" y="447.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.01%)</title><rect x="151.2" y="517" width="0.1" height="15.0" fill="rgb(252,69,8)" rx="2" ry="2" />
<text  x="154.16" y="527.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="1143.6" y="309" width="0.1" height="15.0" fill="rgb(236,43,7)" rx="2" ry="2" />
<text  x="1146.60" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (2 samples, 0.02%)</title><rect x="125.6" y="469" width="0.2" height="15.0" fill="rgb(221,48,14)" rx="2" ry="2" />
<text  x="128.56" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt; (32 samples, 0.30%)</title><rect x="986.1" y="581" width="3.5" height="15.0" fill="rgb(217,223,37)" rx="2" ry="2" />
<text  x="989.11" y="591.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.01%)</title><rect x="79.7" y="405" width="0.1" height="15.0" fill="rgb(250,106,1)" rx="2" ry="2" />
<text  x="82.71" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::consumer::Consumer&lt;u8&gt;&gt;&gt; (6 samples, 0.06%)</title><rect x="617.1" y="565" width="0.7" height="15.0" fill="rgb(233,200,50)" rx="2" ry="2" />
<text  x="620.10" y="575.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1107.1" y="517" width="0.1" height="15.0" fill="rgb(226,134,38)" rx="2" ry="2" />
<text  x="1110.11" y="527.5" ></text>
</g>
<g >
<title>sysvec_call_function (1 samples, 0.01%)</title><rect x="1024.6" y="261" width="0.1" height="15.0" fill="rgb(210,172,9)" rx="2" ry="2" />
<text  x="1027.56" y="271.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.01%)</title><rect x="1021.6" y="229" width="0.1" height="15.0" fill="rgb(243,191,38)" rx="2" ry="2" />
<text  x="1024.62" y="239.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.02%)</title><rect x="1129.0" y="501" width="0.2" height="15.0" fill="rgb(238,161,4)" rx="2" ry="2" />
<text  x="1132.01" y="511.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (28 samples, 0.26%)</title><rect x="489.8" y="533" width="3.0" height="15.0" fill="rgb(250,224,42)" rx="2" ry="2" />
<text  x="492.78" y="543.5" ></text>
</g>
<g >
<title>mremap (1 samples, 0.01%)</title><rect x="1024.4" y="549" width="0.2" height="15.0" fill="rgb(210,181,18)" rx="2" ry="2" />
<text  x="1027.45" y="559.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (2 samples, 0.02%)</title><rect x="1131.3" y="517" width="0.2" height="15.0" fill="rgb(214,11,21)" rx="2" ry="2" />
<text  x="1134.29" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.01%)</title><rect x="15.1" y="597" width="0.1" height="15.0" fill="rgb(233,38,43)" rx="2" ry="2" />
<text  x="18.12" y="607.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="1015.4" y="485" width="0.2" height="15.0" fill="rgb(237,210,40)" rx="2" ry="2" />
<text  x="1018.41" y="495.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (5 samples, 0.05%)</title><rect x="1066.4" y="325" width="0.5" height="15.0" fill="rgb(209,140,32)" rx="2" ry="2" />
<text  x="1069.38" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="458.4" y="453" width="0.1" height="15.0" fill="rgb(238,221,44)" rx="2" ry="2" />
<text  x="461.41" y="463.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (3 samples, 0.03%)</title><rect x="1057.7" y="517" width="0.3" height="15.0" fill="rgb(252,199,48)" rx="2" ry="2" />
<text  x="1060.67" y="527.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (167 samples, 1.54%)</title><rect x="169.8" y="581" width="18.2" height="15.0" fill="rgb(209,227,16)" rx="2" ry="2" />
<text  x="172.78" y="591.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (87 samples, 0.80%)</title><rect x="135.8" y="437" width="9.5" height="15.0" fill="rgb(241,105,14)" rx="2" ry="2" />
<text  x="138.80" y="447.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (4 samples, 0.04%)</title><rect x="1049.6" y="517" width="0.4" height="15.0" fill="rgb(230,111,52)" rx="2" ry="2" />
<text  x="1052.61" y="527.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (98 samples, 0.90%)</title><rect x="500.1" y="501" width="10.7" height="15.0" fill="rgb(232,9,1)" rx="2" ry="2" />
<text  x="503.12" y="511.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="1101.3" y="565" width="0.2" height="15.0" fill="rgb(224,85,44)" rx="2" ry="2" />
<text  x="1104.34" y="575.5" ></text>
</g>
<g >
<title>__bitmap_and (1 samples, 0.01%)</title><rect x="16.9" y="229" width="0.1" height="15.0" fill="rgb(252,96,48)" rx="2" ry="2" />
<text  x="19.86" y="239.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (4 samples, 0.04%)</title><rect x="472.6" y="309" width="0.4" height="15.0" fill="rgb(211,76,12)" rx="2" ry="2" />
<text  x="475.57" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="134.2" y="357" width="0.1" height="15.0" fill="rgb(207,68,32)" rx="2" ry="2" />
<text  x="137.16" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.04%)</title><rect x="1068.3" y="341" width="0.5" height="15.0" fill="rgb(216,21,3)" rx="2" ry="2" />
<text  x="1071.34" y="351.5" ></text>
</g>
<g >
<title>sysvec_call_function (1 samples, 0.01%)</title><rect x="1062.1" y="421" width="0.1" height="15.0" fill="rgb(253,43,2)" rx="2" ry="2" />
<text  x="1065.13" y="431.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.01%)</title><rect x="80.8" y="341" width="0.1" height="15.0" fill="rgb(210,104,50)" rx="2" ry="2" />
<text  x="83.80" y="351.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="1169.3" y="389" width="0.1" height="15.0" fill="rgb(207,186,25)" rx="2" ry="2" />
<text  x="1172.31" y="399.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.01%)</title><rect x="1181.2" y="405" width="0.1" height="15.0" fill="rgb(233,144,13)" rx="2" ry="2" />
<text  x="1184.18" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.07%)</title><rect x="1066.9" y="293" width="0.9" height="15.0" fill="rgb(214,62,48)" rx="2" ry="2" />
<text  x="1069.92" y="303.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.01%)</title><rect x="78.5" y="325" width="0.1" height="15.0" fill="rgb(212,18,9)" rx="2" ry="2" />
<text  x="81.51" y="335.5" ></text>
</g>
<g >
<title>ioctl (63 samples, 0.58%)</title><rect x="151.3" y="549" width="6.8" height="15.0" fill="rgb(221,214,41)" rx="2" ry="2" />
<text  x="154.26" y="559.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.01%)</title><rect x="1171.0" y="501" width="0.2" height="15.0" fill="rgb(212,12,17)" rx="2" ry="2" />
<text  x="1174.05" y="511.5" ></text>
</g>
<g >
<title>do_page_cache_ra (2 samples, 0.02%)</title><rect x="1020.7" y="325" width="0.3" height="15.0" fill="rgb(221,135,37)" rx="2" ry="2" />
<text  x="1023.74" y="335.5" ></text>
</g>
<g >
<title>smp_call_function_single (63 samples, 0.58%)</title><rect x="151.3" y="405" width="6.8" height="15.0" fill="rgb(244,220,24)" rx="2" ry="2" />
<text  x="154.26" y="415.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.01%)</title><rect x="73.6" y="549" width="0.1" height="15.0" fill="rgb(253,106,43)" rx="2" ry="2" />
<text  x="76.61" y="559.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (2 samples, 0.02%)</title><rect x="1023.2" y="277" width="0.3" height="15.0" fill="rgb(205,65,35)" rx="2" ry="2" />
<text  x="1026.25" y="287.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (3 samples, 0.03%)</title><rect x="1014.8" y="549" width="0.3" height="15.0" fill="rgb(218,161,30)" rx="2" ry="2" />
<text  x="1017.75" y="559.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.01%)</title><rect x="1139.4" y="485" width="0.1" height="15.0" fill="rgb(209,184,30)" rx="2" ry="2" />
<text  x="1142.35" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.07%)</title><rect x="1066.9" y="277" width="0.9" height="15.0" fill="rgb(243,44,54)" rx="2" ry="2" />
<text  x="1069.92" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="1060.6" y="533" width="0.1" height="15.0" fill="rgb(227,29,42)" rx="2" ry="2" />
<text  x="1063.61" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="134.2" y="389" width="0.1" height="15.0" fill="rgb(245,106,1)" rx="2" ry="2" />
<text  x="137.16" y="399.5" ></text>
</g>
<g >
<title>llist_add_batch (3 samples, 0.03%)</title><rect x="72.4" y="453" width="0.3" height="15.0" fill="rgb(241,40,11)" rx="2" ry="2" />
<text  x="75.41" y="463.5" ></text>
</g>
<g >
<title>page_remove_file_rmap (1 samples, 0.01%)</title><rect x="472.4" y="341" width="0.1" height="15.0" fill="rgb(238,62,19)" rx="2" ry="2" />
<text  x="475.35" y="351.5" ></text>
</g>
<g >
<title>ext4_ext_insert_extent (1 samples, 0.01%)</title><rect x="20.7" y="357" width="0.1" height="15.0" fill="rgb(221,33,8)" rx="2" ry="2" />
<text  x="23.67" y="367.5" ></text>
</g>
<g >
<title>native_sched_clock (6 samples, 0.06%)</title><rect x="145.4" y="437" width="0.6" height="15.0" fill="rgb(246,135,3)" rx="2" ry="2" />
<text  x="148.38" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.01%)</title><rect x="971.4" y="357" width="0.1" height="15.0" fill="rgb(213,202,45)" rx="2" ry="2" />
<text  x="974.40" y="367.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.01%)</title><rect x="69.1" y="501" width="0.2" height="15.0" fill="rgb(221,213,23)" rx="2" ry="2" />
<text  x="72.14" y="511.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.01%)</title><rect x="126.0" y="501" width="0.1" height="15.0" fill="rgb(220,172,47)" rx="2" ry="2" />
<text  x="129.00" y="511.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (24 samples, 0.22%)</title><rect x="492.8" y="533" width="2.6" height="15.0" fill="rgb(244,152,41)" rx="2" ry="2" />
<text  x="495.83" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="1002.1" y="421" width="0.3" height="15.0" fill="rgb(208,111,37)" rx="2" ry="2" />
<text  x="1005.12" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (46 samples, 0.42%)</title><rect x="1004.0" y="469" width="5.0" height="15.0" fill="rgb(245,84,48)" rx="2" ry="2" />
<text  x="1006.97" y="479.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (7 samples, 0.06%)</title><rect x="22.0" y="437" width="0.7" height="15.0" fill="rgb(226,107,41)" rx="2" ry="2" />
<text  x="24.98" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter (361 samples, 3.33%)</title><rect x="77.4" y="485" width="39.3" height="15.0" fill="rgb(219,167,39)" rx="2" ry="2" />
<text  x="80.42" y="495.5" >cpu..</text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.01%)</title><rect x="1138.5" y="533" width="0.1" height="15.0" fill="rgb(222,111,41)" rx="2" ry="2" />
<text  x="1141.48" y="543.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.01%)</title><rect x="1132.7" y="485" width="0.1" height="15.0" fill="rgb(243,72,47)" rx="2" ry="2" />
<text  x="1135.71" y="495.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.01%)</title><rect x="14.8" y="581" width="0.1" height="15.0" fill="rgb(233,128,37)" rx="2" ry="2" />
<text  x="17.79" y="591.5" ></text>
</g>
<g >
<title>alloc_page_buffers (2 samples, 0.02%)</title><rect x="1061.6" y="277" width="0.2" height="15.0" fill="rgb(243,27,7)" rx="2" ry="2" />
<text  x="1064.59" y="287.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.01%)</title><rect x="1061.2" y="437" width="0.1" height="15.0" fill="rgb(225,106,0)" rx="2" ry="2" />
<text  x="1064.15" y="447.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (66 samples, 0.61%)</title><rect x="1017.6" y="581" width="7.2" height="15.0" fill="rgb(217,96,32)" rx="2" ry="2" />
<text  x="1020.59" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.02%)</title><rect x="188.4" y="549" width="0.2" height="15.0" fill="rgb(234,201,28)" rx="2" ry="2" />
<text  x="191.41" y="559.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (1 samples, 0.01%)</title><rect x="158.5" y="549" width="0.1" height="15.0" fill="rgb(207,46,40)" rx="2" ry="2" />
<text  x="161.45" y="559.5" ></text>
</g>
<g >
<title>perf_swevent_stop (1 samples, 0.01%)</title><rect x="79.2" y="261" width="0.1" height="15.0" fill="rgb(237,225,10)" rx="2" ry="2" />
<text  x="82.16" y="271.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.0 (1 samples, 0.01%)</title><rect x="1024.7" y="213" width="0.1" height="15.0" fill="rgb(217,193,7)" rx="2" ry="2" />
<text  x="1027.66" y="223.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.0 (1 samples, 0.01%)</title><rect x="466.6" y="325" width="0.1" height="15.0" fill="rgb(235,122,15)" rx="2" ry="2" />
<text  x="469.58" y="335.5" ></text>
</g>
<g >
<title>destroy_inode (4 samples, 0.04%)</title><rect x="472.6" y="389" width="0.4" height="15.0" fill="rgb(225,152,36)" rx="2" ry="2" />
<text  x="475.57" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.87%)</title><rect x="971.4" y="565" width="10.2" height="15.0" fill="rgb(223,156,35)" rx="2" ry="2" />
<text  x="974.40" y="575.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (8 samples, 0.07%)</title><rect x="519.4" y="517" width="0.9" height="15.0" fill="rgb(233,135,44)" rx="2" ry="2" />
<text  x="522.40" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="1101.5" y="613" width="0.1" height="15.0" fill="rgb(247,183,13)" rx="2" ry="2" />
<text  x="1104.45" y="623.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function (1 samples, 0.01%)</title><rect x="928.1" y="469" width="0.1" height="15.0" fill="rgb(213,49,52)" rx="2" ry="2" />
<text  x="931.06" y="479.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2 samples, 0.02%)</title><rect x="1105.5" y="597" width="0.2" height="15.0" fill="rgb(205,127,37)" rx="2" ry="2" />
<text  x="1108.48" y="607.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4 samples, 0.04%)</title><rect x="519.0" y="501" width="0.4" height="15.0" fill="rgb(228,4,7)" rx="2" ry="2" />
<text  x="521.97" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (28 samples, 0.26%)</title><rect x="551.3" y="533" width="3.1" height="15.0" fill="rgb(226,212,48)" rx="2" ry="2" />
<text  x="554.31" y="543.5" ></text>
</g>
<g >
<title>__set_page_dirty (1 samples, 0.01%)</title><rect x="1061.9" y="293" width="0.1" height="15.0" fill="rgb(239,188,35)" rx="2" ry="2" />
<text  x="1064.91" y="303.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.01%)</title><rect x="1184.0" y="469" width="0.1" height="15.0" fill="rgb(247,85,14)" rx="2" ry="2" />
<text  x="1187.01" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (47 samples, 0.43%)</title><rect x="537.2" y="501" width="5.1" height="15.0" fill="rgb(209,87,49)" rx="2" ry="2" />
<text  x="540.16" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (2 samples, 0.02%)</title><rect x="1138.7" y="565" width="0.2" height="15.0" fill="rgb(209,139,3)" rx="2" ry="2" />
<text  x="1141.70" y="575.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="1106.9" y="517" width="0.2" height="15.0" fill="rgb(213,161,27)" rx="2" ry="2" />
<text  x="1109.90" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.06%)</title><rect x="537.8" y="453" width="0.8" height="15.0" fill="rgb(218,60,13)" rx="2" ry="2" />
<text  x="540.81" y="463.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (191 samples, 1.76%)</title><rect x="1143.1" y="469" width="20.8" height="15.0" fill="rgb(238,0,54)" rx="2" ry="2" />
<text  x="1146.06" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="1067.9" y="293" width="0.1" height="15.0" fill="rgb(207,179,48)" rx="2" ry="2" />
<text  x="1070.90" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (7 samples, 0.06%)</title><rect x="78.6" y="325" width="0.8" height="15.0" fill="rgb(219,42,25)" rx="2" ry="2" />
<text  x="81.62" y="335.5" ></text>
</g>
<g >
<title>__test_set_page_writeback (4 samples, 0.04%)</title><rect x="19.6" y="357" width="0.4" height="15.0" fill="rgb(215,5,28)" rx="2" ry="2" />
<text  x="22.58" y="367.5" ></text>
</g>
<g >
<title>iput.part.0 (4 samples, 0.04%)</title><rect x="472.6" y="277" width="0.4" height="15.0" fill="rgb(224,202,10)" rx="2" ry="2" />
<text  x="475.57" y="287.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (1 samples, 0.01%)</title><rect x="1105.7" y="597" width="0.1" height="15.0" fill="rgb(214,73,39)" rx="2" ry="2" />
<text  x="1108.70" y="607.5" ></text>
</g>
<g >
<title>do_page_mkwrite (17 samples, 0.16%)</title><rect x="1022.4" y="389" width="1.8" height="15.0" fill="rgb(232,186,13)" rx="2" ry="2" />
<text  x="1025.38" y="399.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (5 samples, 0.05%)</title><rect x="1066.4" y="341" width="0.5" height="15.0" fill="rgb(239,150,22)" rx="2" ry="2" />
<text  x="1069.38" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="489.4" y="501" width="0.2" height="15.0" fill="rgb(237,142,32)" rx="2" ry="2" />
<text  x="492.45" y="511.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.01%)</title><rect x="80.9" y="325" width="0.1" height="15.0" fill="rgb(236,38,3)" rx="2" ry="2" />
<text  x="83.90" y="335.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="23.5" y="373" width="0.1" height="15.0" fill="rgb(231,209,25)" rx="2" ry="2" />
<text  x="26.51" y="383.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (23 samples, 0.21%)</title><rect x="1181.3" y="405" width="2.5" height="15.0" fill="rgb(208,205,16)" rx="2" ry="2" />
<text  x="1184.29" y="415.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="1014.3" y="533" width="0.1" height="15.0" fill="rgb(214,199,13)" rx="2" ry="2" />
<text  x="1017.32" y="543.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.01%)</title><rect x="1139.4" y="501" width="0.1" height="15.0" fill="rgb(246,85,44)" rx="2" ry="2" />
<text  x="1142.35" y="511.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="1138.5" y="517" width="0.1" height="15.0" fill="rgb(245,76,7)" rx="2" ry="2" />
<text  x="1141.48" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (206 samples, 1.90%)</title><rect x="943.5" y="565" width="22.5" height="15.0" fill="rgb(243,100,53)" rx="2" ry="2" />
<text  x="946.52" y="575.5" >c..</text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.02%)</title><rect x="1067.5" y="101" width="0.2" height="15.0" fill="rgb(215,118,30)" rx="2" ry="2" />
<text  x="1070.47" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (11 samples, 0.10%)</title><rect x="1061.0" y="517" width="1.2" height="15.0" fill="rgb(248,166,3)" rx="2" ry="2" />
<text  x="1064.04" y="527.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (104 samples, 0.96%)</title><rect x="768.4" y="533" width="11.3" height="15.0" fill="rgb(243,91,24)" rx="2" ry="2" />
<text  x="771.38" y="543.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1 samples, 0.01%)</title><rect x="1021.9" y="245" width="0.2" height="15.0" fill="rgb(227,153,21)" rx="2" ry="2" />
<text  x="1024.94" y="255.5" ></text>
</g>
<g >
<title>sched_idle_set_state (1 samples, 0.01%)</title><rect x="1164.3" y="469" width="0.1" height="15.0" fill="rgb(242,185,41)" rx="2" ry="2" />
<text  x="1167.30" y="479.5" ></text>
</g>
<g >
<title>page_mkclean (25 samples, 0.23%)</title><rect x="16.5" y="357" width="2.8" height="15.0" fill="rgb(243,30,33)" rx="2" ry="2" />
<text  x="19.53" y="367.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (4 samples, 0.04%)</title><rect x="472.6" y="581" width="0.4" height="15.0" fill="rgb(214,205,29)" rx="2" ry="2" />
<text  x="475.57" y="591.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.01%)</title><rect x="158.6" y="581" width="0.1" height="15.0" fill="rgb(216,152,36)" rx="2" ry="2" />
<text  x="161.56" y="591.5" ></text>
</g>
<g >
<title>llist_reverse_order (6 samples, 0.06%)</title><rect x="1133.7" y="549" width="0.6" height="15.0" fill="rgb(247,12,41)" rx="2" ry="2" />
<text  x="1136.69" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (7 samples, 0.06%)</title><rect x="510.0" y="485" width="0.8" height="15.0" fill="rgb(228,219,27)" rx="2" ry="2" />
<text  x="513.04" y="495.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (4 samples, 0.04%)</title><rect x="472.6" y="213" width="0.4" height="15.0" fill="rgb(233,82,31)" rx="2" ry="2" />
<text  x="475.57" y="223.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="1067.7" y="245" width="0.1" height="15.0" fill="rgb(218,38,47)" rx="2" ry="2" />
<text  x="1070.69" y="255.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.23%)</title><rect x="547.0" y="549" width="2.7" height="15.0" fill="rgb(230,142,17)" rx="2" ry="2" />
<text  x="549.96" y="559.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (16 samples, 0.15%)</title><rect x="1015.8" y="581" width="1.8" height="15.0" fill="rgb(225,3,3)" rx="2" ry="2" />
<text  x="1018.84" y="591.5" ></text>
</g>
<g >
<title>cpumask_next_and (2 samples, 0.02%)</title><rect x="140.6" y="421" width="0.2" height="15.0" fill="rgb(237,11,42)" rx="2" ry="2" />
<text  x="143.59" y="431.5" ></text>
</g>
<g >
<title>perf (68 samples, 0.63%)</title><rect x="151.3" y="645" width="7.4" height="15.0" fill="rgb(254,6,24)" rx="2" ry="2" />
<text  x="154.26" y="655.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.01%)</title><rect x="1062.1" y="405" width="0.1" height="15.0" fill="rgb(207,133,41)" rx="2" ry="2" />
<text  x="1065.13" y="415.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (2 samples, 0.02%)</title><rect x="1102.2" y="565" width="0.2" height="15.0" fill="rgb(210,136,44)" rx="2" ry="2" />
<text  x="1105.21" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.01%)</title><rect x="1170.2" y="453" width="0.1" height="15.0" fill="rgb(249,66,2)" rx="2" ry="2" />
<text  x="1173.18" y="463.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (3 samples, 0.03%)</title><rect x="1025.8" y="533" width="0.3" height="15.0" fill="rgb(227,47,8)" rx="2" ry="2" />
<text  x="1028.75" y="543.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (22 samples, 0.20%)</title><rect x="16.9" y="245" width="2.4" height="15.0" fill="rgb(214,35,21)" rx="2" ry="2" />
<text  x="19.86" y="255.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (8 samples, 0.07%)</title><rect x="1066.9" y="325" width="0.9" height="15.0" fill="rgb(246,106,5)" rx="2" ry="2" />
<text  x="1069.92" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (8 samples, 0.07%)</title><rect x="995.7" y="485" width="0.9" height="15.0" fill="rgb(231,64,16)" rx="2" ry="2" />
<text  x="998.69" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (256 samples, 2.36%)</title><rect x="799.6" y="517" width="27.9" height="15.0" fill="rgb(233,208,1)" rx="2" ry="2" />
<text  x="802.64" y="527.5" >&lt;..</text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.02%)</title><rect x="1009.3" y="453" width="0.2" height="15.0" fill="rgb(231,61,54)" rx="2" ry="2" />
<text  x="1012.31" y="463.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.02%)</title><rect x="442.5" y="501" width="0.2" height="15.0" fill="rgb(247,152,24)" rx="2" ry="2" />
<text  x="445.51" y="511.5" ></text>
</g>
<g >
<title>dput (4 samples, 0.04%)</title><rect x="472.6" y="357" width="0.4" height="15.0" fill="rgb(244,105,29)" rx="2" ry="2" />
<text  x="475.57" y="367.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2 samples, 0.02%)</title><rect x="1023.8" y="277" width="0.2" height="15.0" fill="rgb(230,92,33)" rx="2" ry="2" />
<text  x="1026.79" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="1062.9" y="229" width="0.1" height="15.0" fill="rgb(248,203,7)" rx="2" ry="2" />
<text  x="1065.89" y="239.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (5 samples, 0.05%)</title><rect x="1103.2" y="629" width="0.5" height="15.0" fill="rgb(251,192,17)" rx="2" ry="2" />
<text  x="1106.19" y="639.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.01%)</title><rect x="1105.7" y="533" width="0.1" height="15.0" fill="rgb(251,104,20)" rx="2" ry="2" />
<text  x="1108.70" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.19%)</title><rect x="1063.0" y="165" width="2.3" height="15.0" fill="rgb(248,173,26)" rx="2" ry="2" />
<text  x="1066.00" y="175.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (27 samples, 0.25%)</title><rect x="458.6" y="469" width="3.0" height="15.0" fill="rgb(212,83,32)" rx="2" ry="2" />
<text  x="461.63" y="479.5" ></text>
</g>
<g >
<title>dentry_kill (4 samples, 0.04%)</title><rect x="472.6" y="341" width="0.4" height="15.0" fill="rgb(249,30,27)" rx="2" ry="2" />
<text  x="475.57" y="351.5" ></text>
</g>
<g >
<title>update_process_times (7 samples, 0.06%)</title><rect x="78.6" y="309" width="0.8" height="15.0" fill="rgb(237,177,22)" rx="2" ry="2" />
<text  x="81.62" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (15 samples, 0.14%)</title><rect x="549.7" y="533" width="1.6" height="15.0" fill="rgb(226,167,2)" rx="2" ry="2" />
<text  x="552.68" y="543.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.02%)</title><rect x="1022.6" y="229" width="0.2" height="15.0" fill="rgb(253,31,14)" rx="2" ry="2" />
<text  x="1025.60" y="239.5" ></text>
</g>
<g >
<title>do_idle (309 samples, 2.85%)</title><rect x="1105.8" y="581" width="33.7" height="15.0" fill="rgb(219,13,49)" rx="2" ry="2" />
<text  x="1108.81" y="591.5" >do..</text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="458.5" y="453" width="0.1" height="15.0" fill="rgb(211,74,3)" rx="2" ry="2" />
<text  x="461.52" y="463.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.01%)</title><rect x="1003.6" y="469" width="0.2" height="15.0" fill="rgb(248,115,22)" rx="2" ry="2" />
<text  x="1006.64" y="479.5" ></text>
</g>
<g >
<title>update_rq_clock (6 samples, 0.06%)</title><rect x="145.4" y="469" width="0.6" height="15.0" fill="rgb(225,10,41)" rx="2" ry="2" />
<text  x="148.38" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="1132.5" y="485" width="0.1" height="15.0" fill="rgb(251,191,33)" rx="2" ry="2" />
<text  x="1135.49" y="495.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.01%)</title><rect x="14.5" y="549" width="0.1" height="15.0" fill="rgb(251,0,49)" rx="2" ry="2" />
<text  x="17.47" y="559.5" ></text>
</g>
<g >
<title>arch_cpu_idle_exit (1 samples, 0.01%)</title><rect x="74.0" y="517" width="0.2" height="15.0" fill="rgb(222,98,41)" rx="2" ry="2" />
<text  x="77.04" y="527.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (7 samples, 0.06%)</title><rect x="22.0" y="485" width="0.7" height="15.0" fill="rgb(240,89,12)" rx="2" ry="2" />
<text  x="24.98" y="495.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (53 samples, 0.49%)</title><rect x="1062.5" y="485" width="5.7" height="15.0" fill="rgb(218,9,9)" rx="2" ry="2" />
<text  x="1065.46" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="1104.3" y="613" width="0.1" height="15.0" fill="rgb(239,76,5)" rx="2" ry="2" />
<text  x="1107.28" y="623.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.02%)</title><rect x="540.4" y="405" width="0.2" height="15.0" fill="rgb(210,118,41)" rx="2" ry="2" />
<text  x="543.42" y="415.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="1101.6" y="613" width="0.2" height="15.0" fill="rgb(216,68,15)" rx="2" ry="2" />
<text  x="1104.56" y="623.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.03%)</title><rect x="453.0" y="517" width="0.3" height="15.0" fill="rgb(207,8,12)" rx="2" ry="2" />
<text  x="455.96" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="1050.7" y="549" width="0.3" height="15.0" fill="rgb(236,87,10)" rx="2" ry="2" />
<text  x="1053.70" y="559.5" ></text>
</g>
<g >
<title>nohz_csd_func (17 samples, 0.16%)</title><rect x="130.5" y="485" width="1.8" height="15.0" fill="rgb(230,149,9)" rx="2" ry="2" />
<text  x="133.46" y="495.5" ></text>
</g>
<g >
<title>find_next_bit (1 samples, 0.01%)</title><rect x="19.1" y="181" width="0.2" height="15.0" fill="rgb(253,165,28)" rx="2" ry="2" />
<text  x="22.15" y="191.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.01%)</title><rect x="151.2" y="421" width="0.1" height="15.0" fill="rgb(245,43,30)" rx="2" ry="2" />
<text  x="154.16" y="431.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (2 samples, 0.02%)</title><rect x="537.5" y="469" width="0.2" height="15.0" fill="rgb(235,82,14)" rx="2" ry="2" />
<text  x="540.48" y="479.5" ></text>
</g>
<g >
<title>test_clear_page_writeback (4 samples, 0.04%)</title><rect x="15.8" y="485" width="0.4" height="15.0" fill="rgb(244,137,7)" rx="2" ry="2" />
<text  x="18.77" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.01%)</title><rect x="73.7" y="517" width="0.1" height="15.0" fill="rgb(238,72,14)" rx="2" ry="2" />
<text  x="76.72" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="1060.2" y="389" width="0.1" height="15.0" fill="rgb(207,59,25)" rx="2" ry="2" />
<text  x="1063.17" y="399.5" ></text>
</g>
<g >
<title>newidle_balance (98 samples, 0.90%)</title><rect x="134.6" y="453" width="10.7" height="15.0" fill="rgb(227,187,17)" rx="2" ry="2" />
<text  x="137.60" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="1135.2" y="501" width="0.1" height="15.0" fill="rgb(218,5,4)" rx="2" ry="2" />
<text  x="1138.22" y="511.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.01%)</title><rect x="1107.1" y="341" width="0.1" height="15.0" fill="rgb(248,60,36)" rx="2" ry="2" />
<text  x="1110.11" y="351.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (39 samples, 0.36%)</title><rect x="542.3" y="581" width="4.2" height="15.0" fill="rgb(239,210,15)" rx="2" ry="2" />
<text  x="545.27" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.04%)</title><rect x="469.4" y="469" width="0.4" height="15.0" fill="rgb(227,171,38)" rx="2" ry="2" />
<text  x="472.41" y="479.5" ></text>
</g>
<g >
<title>__writeback_single_inode (49 samples, 0.45%)</title><rect x="16.2" y="469" width="5.3" height="15.0" fill="rgb(210,99,30)" rx="2" ry="2" />
<text  x="19.21" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (29 samples, 0.27%)</title><rect x="533.7" y="437" width="3.1" height="15.0" fill="rgb(250,212,38)" rx="2" ry="2" />
<text  x="536.67" y="447.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="550.9" y="469" width="0.1" height="15.0" fill="rgb(249,9,34)" rx="2" ry="2" />
<text  x="553.88" y="479.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (40 samples, 0.37%)</title><rect x="519.4" y="533" width="4.4" height="15.0" fill="rgb(216,163,17)" rx="2" ry="2" />
<text  x="522.40" y="543.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.03%)</title><rect x="22.7" y="421" width="0.4" height="15.0" fill="rgb(212,27,37)" rx="2" ry="2" />
<text  x="25.74" y="431.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (42 samples, 0.39%)</title><rect x="16.2" y="421" width="4.6" height="15.0" fill="rgb(205,207,15)" rx="2" ry="2" />
<text  x="19.21" y="431.5" ></text>
</g>
<g >
<title>wb_do_writeback (49 samples, 0.45%)</title><rect x="16.2" y="549" width="5.3" height="15.0" fill="rgb(208,177,18)" rx="2" ry="2" />
<text  x="19.21" y="559.5" ></text>
</g>
<g >
<title>__irqentry_text_end (1 samples, 0.01%)</title><rect x="779.6" y="517" width="0.1" height="15.0" fill="rgb(221,128,38)" rx="2" ry="2" />
<text  x="782.60" y="527.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (1 samples, 0.01%)</title><rect x="78.7" y="293" width="0.1" height="15.0" fill="rgb(242,150,41)" rx="2" ry="2" />
<text  x="81.73" y="303.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.01%)</title><rect x="140.5" y="421" width="0.1" height="15.0" fill="rgb(212,33,14)" rx="2" ry="2" />
<text  x="143.48" y="431.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (1 samples, 0.01%)</title><rect x="1060.6" y="565" width="0.1" height="15.0" fill="rgb(208,17,9)" rx="2" ry="2" />
<text  x="1063.61" y="575.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (3 samples, 0.03%)</title><rect x="1025.8" y="549" width="0.3" height="15.0" fill="rgb(208,198,53)" rx="2" ry="2" />
<text  x="1028.75" y="559.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (5 samples, 0.05%)</title><rect x="23.1" y="453" width="0.5" height="15.0" fill="rgb(213,91,38)" rx="2" ry="2" />
<text  x="26.07" y="463.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (3,524 samples, 32.53%)</title><rect x="554.5" y="581" width="383.8" height="15.0" fill="rgb(206,193,8)" rx="2" ry="2" />
<text  x="557.47" y="591.5" >rustposix::interface::pipe::EmulatedPipe::read_from_..</text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="1011.7" y="501" width="0.1" height="15.0" fill="rgb(217,203,18)" rx="2" ry="2" />
<text  x="1014.70" y="511.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.01%)</title><rect x="158.5" y="405" width="0.1" height="15.0" fill="rgb(251,228,33)" rx="2" ry="2" />
<text  x="161.45" y="415.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u64 (4 samples, 0.04%)</title><rect x="1068.3" y="517" width="0.5" height="15.0" fill="rgb(230,156,18)" rx="2" ry="2" />
<text  x="1071.34" y="527.5" ></text>
</g>
<g >
<title>handle_edge_irq (7 samples, 0.06%)</title><rect x="22.0" y="469" width="0.7" height="15.0" fill="rgb(231,169,12)" rx="2" ry="2" />
<text  x="24.98" y="479.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.01%)</title><rect x="71.9" y="469" width="0.1" height="15.0" fill="rgb(213,150,1)" rx="2" ry="2" />
<text  x="74.86" y="479.5" ></text>
</g>
<g >
<title>generic_exec_single (12 samples, 0.11%)</title><rect x="141.9" y="389" width="1.3" height="15.0" fill="rgb(228,173,19)" rx="2" ry="2" />
<text  x="144.90" y="399.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.01%)</title><rect x="1107.1" y="373" width="0.1" height="15.0" fill="rgb(232,4,44)" rx="2" ry="2" />
<text  x="1110.11" y="383.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (7 samples, 0.06%)</title><rect x="1131.8" y="501" width="0.8" height="15.0" fill="rgb(235,175,1)" rx="2" ry="2" />
<text  x="1134.84" y="511.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="1138.7" y="549" width="0.1" height="15.0" fill="rgb(205,114,32)" rx="2" ry="2" />
<text  x="1141.70" y="559.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (1 samples, 0.01%)</title><rect x="1059.4" y="533" width="0.1" height="15.0" fill="rgb(246,125,30)" rx="2" ry="2" />
<text  x="1062.41" y="543.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (7 samples, 0.06%)</title><rect x="1065.3" y="421" width="0.8" height="15.0" fill="rgb(223,15,11)" rx="2" ry="2" />
<text  x="1068.29" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="1024.4" y="533" width="0.2" height="15.0" fill="rgb(230,6,24)" rx="2" ry="2" />
<text  x="1027.45" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (21 samples, 0.19%)</title><rect x="1063.0" y="149" width="2.3" height="15.0" fill="rgb(252,105,24)" rx="2" ry="2" />
<text  x="1066.00" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1107.1" y="501" width="0.1" height="15.0" fill="rgb(242,60,38)" rx="2" ry="2" />
<text  x="1110.11" y="511.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (117 samples, 1.08%)</title><rect x="511.0" y="549" width="12.8" height="15.0" fill="rgb(225,115,1)" rx="2" ry="2" />
<text  x="514.02" y="559.5" ></text>
</g>
<g >
<title>fsnotify_notify_queue_is_empty (1 samples, 0.01%)</title><rect x="14.8" y="549" width="0.1" height="15.0" fill="rgb(234,76,3)" rx="2" ry="2" />
<text  x="17.79" y="559.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.01%)</title><rect x="971.4" y="325" width="0.1" height="15.0" fill="rgb(215,216,8)" rx="2" ry="2" />
<text  x="974.40" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.01%)</title><rect x="1066.9" y="197" width="0.1" height="15.0" fill="rgb(230,181,32)" rx="2" ry="2" />
<text  x="1069.92" y="207.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (8 samples, 0.07%)</title><rect x="1059.7" y="533" width="0.9" height="15.0" fill="rgb(218,18,15)" rx="2" ry="2" />
<text  x="1062.74" y="543.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (5 samples, 0.05%)</title><rect x="1066.4" y="309" width="0.5" height="15.0" fill="rgb(236,124,35)" rx="2" ry="2" />
<text  x="1069.38" y="319.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.01%)</title><rect x="79.5" y="341" width="0.1" height="15.0" fill="rgb(246,180,48)" rx="2" ry="2" />
<text  x="82.49" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (63 samples, 0.58%)</title><rect x="151.3" y="277" width="6.8" height="15.0" fill="rgb(215,186,0)" rx="2" ry="2" />
<text  x="154.26" y="287.5" ></text>
</g>
<g >
<title>flush_tlb_func_remote (1 samples, 0.01%)</title><rect x="466.6" y="341" width="0.1" height="15.0" fill="rgb(230,186,40)" rx="2" ry="2" />
<text  x="469.58" y="351.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.01%)</title><rect x="1105.7" y="549" width="0.1" height="15.0" fill="rgb(240,140,14)" rx="2" ry="2" />
<text  x="1108.70" y="559.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.01%)</title><rect x="1024.6" y="245" width="0.1" height="15.0" fill="rgb(221,218,1)" rx="2" ry="2" />
<text  x="1027.56" y="255.5" ></text>
</g>
<g >
<title>cpuidle_get_cpu_driver (1 samples, 0.01%)</title><rect x="116.7" y="485" width="0.1" height="15.0" fill="rgb(209,88,52)" rx="2" ry="2" />
<text  x="119.74" y="495.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11 samples, 0.10%)</title><rect x="78.5" y="405" width="1.2" height="15.0" fill="rgb(235,174,52)" rx="2" ry="2" />
<text  x="81.51" y="415.5" ></text>
</g>
<g >
<title>[[heap]] (23 samples, 0.21%)</title><rect x="158.7" y="629" width="2.5" height="15.0" fill="rgb(220,30,43)" rx="2" ry="2" />
<text  x="161.67" y="639.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="500.0" y="533" width="0.1" height="15.0" fill="rgb(236,181,47)" rx="2" ry="2" />
<text  x="503.01" y="543.5" ></text>
</g>
<g >
<title>sysvec_call_function (1 samples, 0.01%)</title><rect x="928.1" y="453" width="0.1" height="15.0" fill="rgb(219,225,31)" rx="2" ry="2" />
<text  x="931.06" y="463.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (71 samples, 0.66%)</title><rect x="1176.3" y="437" width="7.7" height="15.0" fill="rgb(214,21,54)" rx="2" ry="2" />
<text  x="1179.28" y="447.5" ></text>
</g>
<g >
<title>newidle_balance (14 samples, 0.13%)</title><rect x="71.2" y="517" width="1.5" height="15.0" fill="rgb(251,171,34)" rx="2" ry="2" />
<text  x="74.21" y="527.5" ></text>
</g>
<g >
<title>dispatcher (5,941 samples, 54.84%)</title><rect x="421.7" y="613" width="647.1" height="15.0" fill="rgb(235,17,39)" rx="2" ry="2" />
<text  x="424.70" y="623.5" >dispatcher</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="1067.9" y="309" width="0.1" height="15.0" fill="rgb(216,119,7)" rx="2" ry="2" />
<text  x="1070.90" y="319.5" ></text>
</g>
<g >
<title>kthread_is_per_cpu (1 samples, 0.01%)</title><rect x="23.6" y="293" width="0.1" height="15.0" fill="rgb(220,140,6)" rx="2" ry="2" />
<text  x="26.61" y="303.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (6 samples, 0.06%)</title><rect x="1081.0" y="613" width="0.6" height="15.0" fill="rgb(207,82,22)" rx="2" ry="2" />
<text  x="1083.97" y="623.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (442 samples, 4.08%)</title><rect x="21.9" y="565" width="48.1" height="15.0" fill="rgb(234,174,3)" rx="2" ry="2" />
<text  x="24.87" y="575.5" >cpui..</text>
</g>
<g >
<title>xas_load (1 samples, 0.01%)</title><rect x="1061.4" y="261" width="0.1" height="15.0" fill="rgb(212,152,54)" rx="2" ry="2" />
<text  x="1064.37" y="271.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.01%)</title><rect x="1181.1" y="405" width="0.1" height="15.0" fill="rgb(247,190,0)" rx="2" ry="2" />
<text  x="1184.07" y="415.5" ></text>
</g>
<g >
<title>unmap_page_range (3 samples, 0.03%)</title><rect x="472.2" y="405" width="0.4" height="15.0" fill="rgb(247,133,19)" rx="2" ry="2" />
<text  x="475.24" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.05%)</title><rect x="467.1" y="485" width="0.6" height="15.0" fill="rgb(230,24,42)" rx="2" ry="2" />
<text  x="470.12" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (85 samples, 0.78%)</title><rect x="500.8" y="485" width="9.2" height="15.0" fill="rgb(249,186,1)" rx="2" ry="2" />
<text  x="503.78" y="495.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="124.1" y="405" width="0.2" height="15.0" fill="rgb(209,122,31)" rx="2" ry="2" />
<text  x="127.14" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.03%)</title><rect x="1014.4" y="501" width="0.4" height="15.0" fill="rgb(205,130,45)" rx="2" ry="2" />
<text  x="1017.43" y="511.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="971.4" y="389" width="0.1" height="15.0" fill="rgb(223,106,50)" rx="2" ry="2" />
<text  x="974.40" y="399.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="1135.1" y="565" width="0.1" height="15.0" fill="rgb(249,11,15)" rx="2" ry="2" />
<text  x="1138.11" y="575.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (3 samples, 0.03%)</title><rect x="1060.1" y="469" width="0.3" height="15.0" fill="rgb(212,151,26)" rx="2" ry="2" />
<text  x="1063.06" y="479.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (1 samples, 0.01%)</title><rect x="14.5" y="581" width="0.1" height="15.0" fill="rgb(230,138,11)" rx="2" ry="2" />
<text  x="17.47" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::result::Result&lt;usize,std::io::error::Error&gt;&gt; (1 samples, 0.01%)</title><rect x="489.3" y="581" width="0.1" height="15.0" fill="rgb(241,153,26)" rx="2" ry="2" />
<text  x="492.34" y="591.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.01%)</title><rect x="80.9" y="293" width="0.1" height="15.0" fill="rgb(254,111,43)" rx="2" ry="2" />
<text  x="83.90" y="303.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.01%)</title><rect x="1062.0" y="341" width="0.1" height="15.0" fill="rgb(208,95,4)" rx="2" ry="2" />
<text  x="1065.02" y="351.5" ></text>
</g>
<g >
<title>cpuidle_get_cpu_driver (1 samples, 0.01%)</title><rect x="1141.5" y="501" width="0.1" height="15.0" fill="rgb(210,204,21)" rx="2" ry="2" />
<text  x="1144.53" y="511.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.01%)</title><rect x="135.7" y="389" width="0.1" height="15.0" fill="rgb(249,106,48)" rx="2" ry="2" />
<text  x="138.69" y="399.5" ></text>
</g>
<g >
<title>mpage_prepare_extent_to_map (7 samples, 0.06%)</title><rect x="20.8" y="421" width="0.7" height="15.0" fill="rgb(215,27,0)" rx="2" ry="2" />
<text  x="23.78" y="431.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (3 samples, 0.03%)</title><rect x="472.2" y="389" width="0.4" height="15.0" fill="rgb(208,162,54)" rx="2" ry="2" />
<text  x="475.24" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (445 samples, 4.11%)</title><rect x="879.7" y="485" width="48.5" height="15.0" fill="rgb(253,91,44)" rx="2" ry="2" />
<text  x="882.70" y="495.5" >[lib..</text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="15.1" y="565" width="0.1" height="15.0" fill="rgb(205,152,38)" rx="2" ry="2" />
<text  x="18.12" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (63 samples, 0.58%)</title><rect x="151.3" y="501" width="6.8" height="15.0" fill="rgb(242,181,24)" rx="2" ry="2" />
<text  x="154.26" y="511.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (6 samples, 0.06%)</title><rect x="1066.3" y="421" width="0.6" height="15.0" fill="rgb(247,75,22)" rx="2" ry="2" />
<text  x="1069.27" y="431.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.01%)</title><rect x="1023.5" y="309" width="0.1" height="15.0" fill="rgb(239,210,37)" rx="2" ry="2" />
<text  x="1026.47" y="319.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.03%)</title><rect x="1167.1" y="437" width="0.4" height="15.0" fill="rgb(246,148,30)" rx="2" ry="2" />
<text  x="1170.13" y="447.5" ></text>
</g>
<g >
<title>mpage_submit_page (37 samples, 0.34%)</title><rect x="16.4" y="389" width="4.1" height="15.0" fill="rgb(223,112,10)" rx="2" ry="2" />
<text  x="19.43" y="399.5" ></text>
</g>
<g >
<title>native_send_call_func_ipi (3 samples, 0.03%)</title><rect x="18.9" y="213" width="0.4" height="15.0" fill="rgb(239,143,23)" rx="2" ry="2" />
<text  x="21.93" y="223.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (1 samples, 0.01%)</title><rect x="928.1" y="421" width="0.1" height="15.0" fill="rgb(214,65,13)" rx="2" ry="2" />
<text  x="931.06" y="431.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.01%)</title><rect x="117.1" y="485" width="0.1" height="15.0" fill="rgb(247,6,26)" rx="2" ry="2" />
<text  x="120.06" y="495.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (5 samples, 0.05%)</title><rect x="1017.6" y="533" width="0.5" height="15.0" fill="rgb(230,81,23)" rx="2" ry="2" />
<text  x="1020.59" y="543.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.01%)</title><rect x="151.2" y="501" width="0.1" height="15.0" fill="rgb(224,201,33)" rx="2" ry="2" />
<text  x="154.16" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="1059.5" y="453" width="0.1" height="15.0" fill="rgb(231,229,13)" rx="2" ry="2" />
<text  x="1062.52" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="447.5" y="485" width="0.1" height="15.0" fill="rgb(237,149,6)" rx="2" ry="2" />
<text  x="450.52" y="495.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="971.4" y="405" width="0.1" height="15.0" fill="rgb(241,45,42)" rx="2" ry="2" />
<text  x="974.40" y="415.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (20 samples, 0.18%)</title><rect x="1001.6" y="501" width="2.2" height="15.0" fill="rgb(217,6,29)" rx="2" ry="2" />
<text  x="1004.57" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.01%)</title><rect x="1020.7" y="261" width="0.2" height="15.0" fill="rgb(245,77,22)" rx="2" ry="2" />
<text  x="1023.74" y="271.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_tuple (4 samples, 0.04%)</title><rect x="1068.3" y="533" width="0.5" height="15.0" fill="rgb(247,31,31)" rx="2" ry="2" />
<text  x="1071.34" y="543.5" ></text>
</g>
<g >
<title>sysvec_call_function (1 samples, 0.01%)</title><rect x="450.6" y="469" width="0.1" height="15.0" fill="rgb(235,175,40)" rx="2" ry="2" />
<text  x="453.57" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.09%)</title><rect x="1006.5" y="437" width="1.1" height="15.0" fill="rgb(219,159,30)" rx="2" ry="2" />
<text  x="1009.48" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (4 samples, 0.04%)</title><rect x="472.6" y="485" width="0.4" height="15.0" fill="rgb(206,135,18)" rx="2" ry="2" />
<text  x="475.57" y="495.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (1 samples, 0.01%)</title><rect x="1060.6" y="549" width="0.1" height="15.0" fill="rgb(253,144,22)" rx="2" ry="2" />
<text  x="1063.61" y="559.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (55 samples, 0.51%)</title><rect x="990.6" y="533" width="6.0" height="15.0" fill="rgb(244,85,3)" rx="2" ry="2" />
<text  x="993.57" y="543.5" ></text>
</g>
<g >
<title>arch_cpu_idle_exit (1 samples, 0.01%)</title><rect x="1139.9" y="517" width="0.1" height="15.0" fill="rgb(211,114,3)" rx="2" ry="2" />
<text  x="1142.90" y="527.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (2 samples, 0.02%)</title><rect x="1015.6" y="437" width="0.2" height="15.0" fill="rgb(237,18,3)" rx="2" ry="2" />
<text  x="1018.62" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (63 samples, 0.58%)</title><rect x="151.3" y="533" width="6.8" height="15.0" fill="rgb(248,114,54)" rx="2" ry="2" />
<text  x="154.26" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.01%)</title><rect x="1132.8" y="517" width="0.1" height="15.0" fill="rgb(209,84,36)" rx="2" ry="2" />
<text  x="1135.82" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.04%)</title><rect x="1185.1" y="485" width="0.4" height="15.0" fill="rgb(244,195,21)" rx="2" ry="2" />
<text  x="1188.10" y="495.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (3 samples, 0.03%)</title><rect x="113.9" y="437" width="0.3" height="15.0" fill="rgb(236,191,40)" rx="2" ry="2" />
<text  x="116.91" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="1060.8" y="549" width="0.2" height="15.0" fill="rgb(243,130,48)" rx="2" ry="2" />
<text  x="1063.83" y="559.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="134.2" y="309" width="0.1" height="15.0" fill="rgb(249,112,12)" rx="2" ry="2" />
<text  x="137.16" y="319.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="1107.1" y="485" width="0.1" height="15.0" fill="rgb(209,104,1)" rx="2" ry="2" />
<text  x="1110.11" y="495.5" ></text>
</g>
<g >
<title>calc_load_nohz_stop (1 samples, 0.01%)</title><rect x="75.5" y="501" width="0.1" height="15.0" fill="rgb(225,102,54)" rx="2" ry="2" />
<text  x="78.46" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (48 samples, 0.44%)</title><rect x="537.0" y="517" width="5.3" height="15.0" fill="rgb(207,148,5)" rx="2" ry="2" />
<text  x="540.05" y="527.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.01%)</title><rect x="14.4" y="549" width="0.1" height="15.0" fill="rgb(244,49,37)" rx="2" ry="2" />
<text  x="17.36" y="559.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.01%)</title><rect x="1175.9" y="469" width="0.2" height="15.0" fill="rgb(218,8,18)" rx="2" ry="2" />
<text  x="1178.95" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::truncate (2 samples, 0.02%)</title><rect x="1024.6" y="533" width="0.2" height="15.0" fill="rgb(234,157,24)" rx="2" ry="2" />
<text  x="1027.56" y="543.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (5 samples, 0.05%)</title><rect x="23.1" y="485" width="0.5" height="15.0" fill="rgb(225,155,5)" rx="2" ry="2" />
<text  x="26.07" y="495.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.01%)</title><rect x="15.1" y="581" width="0.1" height="15.0" fill="rgb(249,161,50)" rx="2" ry="2" />
<text  x="18.12" y="591.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.01%)</title><rect x="1107.1" y="469" width="0.1" height="15.0" fill="rgb(246,200,19)" rx="2" ry="2" />
<text  x="1110.11" y="479.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (3 samples, 0.03%)</title><rect x="158.1" y="325" width="0.4" height="15.0" fill="rgb(207,59,40)" rx="2" ry="2" />
<text  x="161.13" y="335.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="450.6" y="421" width="0.1" height="15.0" fill="rgb(224,189,34)" rx="2" ry="2" />
<text  x="453.57" y="431.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.02%)</title><rect x="1129.6" y="517" width="0.2" height="15.0" fill="rgb(218,217,26)" rx="2" ry="2" />
<text  x="1132.55" y="527.5" ></text>
</g>
<g >
<title>end_page_writeback (4 samples, 0.04%)</title><rect x="15.8" y="501" width="0.4" height="15.0" fill="rgb(245,48,40)" rx="2" ry="2" />
<text  x="18.77" y="511.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1143.6" y="453" width="0.1" height="15.0" fill="rgb(230,106,39)" rx="2" ry="2" />
<text  x="1146.60" y="463.5" ></text>
</g>
<g >
<title>sched_clock_cpu (7 samples, 0.06%)</title><rect x="147.5" y="469" width="0.7" height="15.0" fill="rgb(222,121,27)" rx="2" ry="2" />
<text  x="150.45" y="479.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (8 samples, 0.07%)</title><rect x="1066.9" y="357" width="0.9" height="15.0" fill="rgb(222,114,22)" rx="2" ry="2" />
<text  x="1069.92" y="367.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.04%)</title><rect x="519.0" y="517" width="0.4" height="15.0" fill="rgb(243,194,14)" rx="2" ry="2" />
<text  x="521.97" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="470.7" y="485" width="0.2" height="15.0" fill="rgb(216,137,39)" rx="2" ry="2" />
<text  x="473.72" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (3 samples, 0.03%)</title><rect x="1013.2" y="469" width="0.4" height="15.0" fill="rgb(218,196,36)" rx="2" ry="2" />
<text  x="1016.23" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (1 samples, 0.01%)</title><rect x="125.9" y="469" width="0.1" height="15.0" fill="rgb(215,82,42)" rx="2" ry="2" />
<text  x="128.89" y="479.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="520.1" y="421" width="0.2" height="15.0" fill="rgb(226,128,48)" rx="2" ry="2" />
<text  x="523.06" y="431.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,189 samples, 10.97%)</title><rect x="21.5" y="629" width="129.5" height="15.0" fill="rgb(232,94,34)" rx="2" ry="2" />
<text  x="24.55" y="639.5" >secondary_startu..</text>
</g>
<g >
<title>sync_regs (1 samples, 0.01%)</title><rect x="151.0" y="629" width="0.2" height="15.0" fill="rgb(237,100,29)" rx="2" ry="2" />
<text  x="154.05" y="639.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.01%)</title><rect x="163.4" y="613" width="0.1" height="15.0" fill="rgb(221,224,21)" rx="2" ry="2" />
<text  x="166.35" y="623.5" ></text>
</g>
<g >
<title>tick_irq_enter (1 samples, 0.01%)</title><rect x="80.1" y="405" width="0.2" height="15.0" fill="rgb(251,90,29)" rx="2" ry="2" />
<text  x="83.14" y="415.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.01%)</title><rect x="19.0" y="181" width="0.1" height="15.0" fill="rgb(248,168,49)" rx="2" ry="2" />
<text  x="22.04" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (24 samples, 0.22%)</title><rect x="78.4" y="453" width="2.6" height="15.0" fill="rgb(232,162,26)" rx="2" ry="2" />
<text  x="81.40" y="463.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.05%)</title><rect x="1162.1" y="437" width="0.6" height="15.0" fill="rgb(207,174,17)" rx="2" ry="2" />
<text  x="1165.12" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.06%)</title><rect x="1058.3" y="549" width="0.7" height="15.0" fill="rgb(221,34,11)" rx="2" ry="2" />
<text  x="1061.32" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (37 samples, 0.34%)</title><rect x="542.3" y="549" width="4.0" height="15.0" fill="rgb(245,36,32)" rx="2" ry="2" />
<text  x="545.27" y="559.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (20 samples, 0.18%)</title><rect x="1001.6" y="485" width="2.2" height="15.0" fill="rgb(208,8,40)" rx="2" ry="2" />
<text  x="1004.57" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3 samples, 0.03%)</title><rect x="123.1" y="421" width="0.3" height="15.0" fill="rgb(242,1,36)" rx="2" ry="2" />
<text  x="126.06" y="431.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (12 samples, 0.11%)</title><rect x="78.5" y="421" width="1.3" height="15.0" fill="rgb(244,46,48)" rx="2" ry="2" />
<text  x="81.51" y="431.5" ></text>
</g>
<g >
<title>__cmd_record (66 samples, 0.61%)</title><rect x="151.3" y="613" width="7.2" height="15.0" fill="rgb(216,1,8)" rx="2" ry="2" />
<text  x="154.26" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (6 samples, 0.06%)</title><rect x="1058.3" y="501" width="0.7" height="15.0" fill="rgb(220,99,30)" rx="2" ry="2" />
<text  x="1061.32" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.02%)</title><rect x="985.9" y="517" width="0.2" height="15.0" fill="rgb(241,20,33)" rx="2" ry="2" />
<text  x="988.89" y="527.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (1 samples, 0.01%)</title><rect x="23.6" y="373" width="0.1" height="15.0" fill="rgb(220,210,31)" rx="2" ry="2" />
<text  x="26.61" y="383.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="536.8" y="469" width="0.2" height="15.0" fill="rgb(227,80,13)" rx="2" ry="2" />
<text  x="539.83" y="479.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.01%)</title><rect x="14.7" y="517" width="0.1" height="15.0" fill="rgb(225,79,47)" rx="2" ry="2" />
<text  x="17.68" y="527.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.01%)</title><rect x="158.2" y="229" width="0.1" height="15.0" fill="rgb(247,156,27)" rx="2" ry="2" />
<text  x="161.24" y="239.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (3 samples, 0.03%)</title><rect x="482.8" y="549" width="0.3" height="15.0" fill="rgb(224,26,13)" rx="2" ry="2" />
<text  x="485.81" y="559.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.02%)</title><rect x="1105.3" y="533" width="0.2" height="15.0" fill="rgb(206,41,53)" rx="2" ry="2" />
<text  x="1108.26" y="543.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="466.7" y="437" width="0.4" height="15.0" fill="rgb(236,169,14)" rx="2" ry="2" />
<text  x="469.69" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (147 samples, 1.36%)</title><rect x="1026.1" y="501" width="16.0" height="15.0" fill="rgb(206,96,22)" rx="2" ry="2" />
<text  x="1029.08" y="511.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.01%)</title><rect x="1024.6" y="293" width="0.1" height="15.0" fill="rgb(234,7,25)" rx="2" ry="2" />
<text  x="1027.56" y="303.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (7 samples, 0.06%)</title><rect x="169.0" y="613" width="0.8" height="15.0" fill="rgb(220,171,29)" rx="2" ry="2" />
<text  x="172.02" y="623.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (2 samples, 0.02%)</title><rect x="69.7" y="549" width="0.2" height="15.0" fill="rgb(219,132,41)" rx="2" ry="2" />
<text  x="72.69" y="559.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (2 samples, 0.02%)</title><rect x="1023.2" y="293" width="0.3" height="15.0" fill="rgb(240,173,11)" rx="2" ry="2" />
<text  x="1026.25" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.01%)</title><rect x="16.4" y="341" width="0.1" height="15.0" fill="rgb(215,89,24)" rx="2" ry="2" />
<text  x="19.43" y="351.5" ></text>
</g>
<g >
<title>ion (3 samples, 0.03%)</title><rect x="158.1" y="517" width="0.4" height="15.0" fill="rgb(224,35,35)" rx="2" ry="2" />
<text  x="161.13" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (6 samples, 0.06%)</title><rect x="1065.4" y="197" width="0.7" height="15.0" fill="rgb(217,15,0)" rx="2" ry="2" />
<text  x="1068.40" y="207.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.02%)</title><rect x="442.5" y="517" width="0.2" height="15.0" fill="rgb(212,131,21)" rx="2" ry="2" />
<text  x="445.51" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="1105.3" y="613" width="0.4" height="15.0" fill="rgb(245,218,21)" rx="2" ry="2" />
<text  x="1108.26" y="623.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.36%)</title><rect x="981.6" y="549" width="4.3" height="15.0" fill="rgb(242,11,50)" rx="2" ry="2" />
<text  x="984.64" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (43 samples, 0.40%)</title><rect x="456.9" y="501" width="4.7" height="15.0" fill="rgb(219,130,27)" rx="2" ry="2" />
<text  x="459.88" y="511.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (61 samples, 0.56%)</title><rect x="997.1" y="549" width="6.7" height="15.0" fill="rgb(242,4,48)" rx="2" ry="2" />
<text  x="1000.11" y="559.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (47 samples, 0.43%)</title><rect x="442.5" y="565" width="5.1" height="15.0" fill="rgb(213,217,38)" rx="2" ry="2" />
<text  x="445.51" y="575.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="20.8" y="389" width="0.1" height="15.0" fill="rgb(230,140,13)" rx="2" ry="2" />
<text  x="23.78" y="399.5" ></text>
</g>
<g >
<title>ext4_bio_write_page (10 samples, 0.09%)</title><rect x="19.3" y="373" width="1.0" height="15.0" fill="rgb(213,32,48)" rx="2" ry="2" />
<text  x="22.26" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::RefMut&lt;usize,rustposix::safeposix::filesystem::Inode&gt;&gt; (2 samples, 0.02%)</title><rect x="970.5" y="565" width="0.3" height="15.0" fill="rgb(245,75,5)" rx="2" ry="2" />
<text  x="973.53" y="575.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (55 samples, 0.51%)</title><rect x="126.3" y="501" width="6.0" height="15.0" fill="rgb(233,154,6)" rx="2" ry="2" />
<text  x="129.32" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.01%)</title><rect x="14.4" y="597" width="0.1" height="15.0" fill="rgb(252,141,45)" rx="2" ry="2" />
<text  x="17.36" y="607.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="80.7" y="325" width="0.1" height="15.0" fill="rgb(237,53,47)" rx="2" ry="2" />
<text  x="83.69" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.06%)</title><rect x="1065.3" y="309" width="0.8" height="15.0" fill="rgb(233,223,51)" rx="2" ry="2" />
<text  x="1068.29" y="319.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (12 samples, 0.11%)</title><rect x="1188.5" y="517" width="1.3" height="15.0" fill="rgb(254,217,13)" rx="2" ry="2" />
<text  x="1191.48" y="527.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.02%)</title><rect x="540.4" y="421" width="0.2" height="15.0" fill="rgb(247,92,26)" rx="2" ry="2" />
<text  x="543.42" y="431.5" ></text>
</g>
<g >
<title>sched_idle_set_state (1 samples, 0.01%)</title><rect x="116.5" y="469" width="0.1" height="15.0" fill="rgb(237,198,3)" rx="2" ry="2" />
<text  x="119.52" y="479.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (58 samples, 0.54%)</title><rect x="1018.1" y="549" width="6.3" height="15.0" fill="rgb(214,8,16)" rx="2" ry="2" />
<text  x="1021.13" y="559.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.01%)</title><rect x="1024.6" y="309" width="0.1" height="15.0" fill="rgb(211,18,24)" rx="2" ry="2" />
<text  x="1027.56" y="319.5" ></text>
</g>
<g >
<title>wb_writeback (49 samples, 0.45%)</title><rect x="16.2" y="517" width="5.3" height="15.0" fill="rgb(205,155,10)" rx="2" ry="2" />
<text  x="19.21" y="527.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.01%)</title><rect x="1024.1" y="357" width="0.1" height="15.0" fill="rgb(248,102,32)" rx="2" ry="2" />
<text  x="1027.12" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (42 samples, 0.39%)</title><rect x="430.3" y="597" width="4.6" height="15.0" fill="rgb(216,163,47)" rx="2" ry="2" />
<text  x="433.31" y="607.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.02%)</title><rect x="1106.9" y="453" width="0.2" height="15.0" fill="rgb(211,227,6)" rx="2" ry="2" />
<text  x="1109.90" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.01%)</title><rect x="1139.4" y="517" width="0.1" height="15.0" fill="rgb(246,185,45)" rx="2" ry="2" />
<text  x="1142.35" y="527.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (15 samples, 0.14%)</title><rect x="549.7" y="565" width="1.6" height="15.0" fill="rgb(212,0,42)" rx="2" ry="2" />
<text  x="552.68" y="575.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (1 samples, 0.01%)</title><rect x="23.0" y="341" width="0.1" height="15.0" fill="rgb(227,89,19)" rx="2" ry="2" />
<text  x="25.96" y="351.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.01%)</title><rect x="1164.4" y="485" width="0.1" height="15.0" fill="rgb(216,67,33)" rx="2" ry="2" />
<text  x="1167.40" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (30 samples, 0.28%)</title><rect x="467.7" y="517" width="3.2" height="15.0" fill="rgb(213,74,46)" rx="2" ry="2" />
<text  x="470.67" y="527.5" ></text>
</g>
<g >
<title>_perf_ioctl (1 samples, 0.01%)</title><rect x="158.5" y="565" width="0.1" height="15.0" fill="rgb(226,161,3)" rx="2" ry="2" />
<text  x="161.45" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (100 samples, 0.92%)</title><rect x="456.8" y="533" width="10.9" height="15.0" fill="rgb(244,128,21)" rx="2" ry="2" />
<text  x="459.77" y="543.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="22.7" y="453" width="0.4" height="15.0" fill="rgb(253,125,22)" rx="2" ry="2" />
<text  x="25.74" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.01%)</title><rect x="470.3" y="469" width="0.1" height="15.0" fill="rgb(236,142,10)" rx="2" ry="2" />
<text  x="473.28" y="479.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="1060.3" y="405" width="0.1" height="15.0" fill="rgb(249,142,19)" rx="2" ry="2" />
<text  x="1063.28" y="415.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (23 samples, 0.21%)</title><rect x="1062.8" y="405" width="2.5" height="15.0" fill="rgb(237,142,5)" rx="2" ry="2" />
<text  x="1065.79" y="415.5" ></text>
</g>
<g >
<title>cpuidle_not_available (2 samples, 0.02%)</title><rect x="116.8" y="485" width="0.3" height="15.0" fill="rgb(209,53,13)" rx="2" ry="2" />
<text  x="119.85" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (43 samples, 0.40%)</title><rect x="991.0" y="469" width="4.7" height="15.0" fill="rgb(253,187,28)" rx="2" ry="2" />
<text  x="994.01" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="69.0" y="501" width="0.1" height="15.0" fill="rgb(230,109,33)" rx="2" ry="2" />
<text  x="72.03" y="511.5" ></text>
</g>
<g >
<title>ext4_filemap_fault (2 samples, 0.02%)</title><rect x="1061.3" y="357" width="0.2" height="15.0" fill="rgb(239,131,37)" rx="2" ry="2" />
<text  x="1064.26" y="367.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.01%)</title><rect x="158.3" y="245" width="0.2" height="15.0" fill="rgb(245,0,49)" rx="2" ry="2" />
<text  x="161.34" y="255.5" ></text>
</g>
<g >
<title>alloc_pages_current (4 samples, 0.04%)</title><rect x="1021.0" y="277" width="0.4" height="15.0" fill="rgb(243,30,22)" rx="2" ry="2" />
<text  x="1023.96" y="287.5" ></text>
</g>
<g >
<title>ext4_releasepage (2 samples, 0.02%)</title><rect x="472.8" y="117" width="0.2" height="15.0" fill="rgb(232,213,53)" rx="2" ry="2" />
<text  x="475.79" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.01%)</title><rect x="1067.9" y="277" width="0.1" height="15.0" fill="rgb(248,123,44)" rx="2" ry="2" />
<text  x="1070.90" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (10 samples, 0.09%)</title><rect x="1061.2" y="469" width="1.0" height="15.0" fill="rgb(210,157,9)" rx="2" ry="2" />
<text  x="1064.15" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (12 samples, 0.11%)</title><rect x="1187.1" y="501" width="1.3" height="15.0" fill="rgb(228,198,45)" rx="2" ry="2" />
<text  x="1190.06" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (6 samples, 0.06%)</title><rect x="188.7" y="613" width="0.7" height="15.0" fill="rgb(241,84,27)" rx="2" ry="2" />
<text  x="191.73" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.06%)</title><rect x="1065.4" y="213" width="0.7" height="15.0" fill="rgb(248,220,1)" rx="2" ry="2" />
<text  x="1068.40" y="223.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (53 samples, 0.49%)</title><rect x="1062.5" y="469" width="5.7" height="15.0" fill="rgb(206,190,53)" rx="2" ry="2" />
<text  x="1065.46" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="966.0" y="581" width="0.3" height="15.0" fill="rgb(231,141,46)" rx="2" ry="2" />
<text  x="968.96" y="591.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.01%)</title><rect x="1020.7" y="277" width="0.2" height="15.0" fill="rgb(236,100,21)" rx="2" ry="2" />
<text  x="1023.74" y="287.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.01%)</title><rect x="1107.1" y="357" width="0.1" height="15.0" fill="rgb(226,100,18)" rx="2" ry="2" />
<text  x="1110.11" y="367.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="1143.6" y="277" width="0.1" height="15.0" fill="rgb(229,76,36)" rx="2" ry="2" />
<text  x="1146.60" y="287.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (1 samples, 0.01%)</title><rect x="78.9" y="277" width="0.2" height="15.0" fill="rgb(214,143,50)" rx="2" ry="2" />
<text  x="81.94" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="134.2" y="421" width="0.1" height="15.0" fill="rgb(216,63,0)" rx="2" ry="2" />
<text  x="137.16" y="431.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (256 samples, 2.36%)</title><rect x="799.6" y="501" width="27.9" height="15.0" fill="rgb(247,55,0)" rx="2" ry="2" />
<text  x="802.64" y="511.5" >a..</text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.02%)</title><rect x="14.9" y="597" width="0.2" height="15.0" fill="rgb(254,88,36)" rx="2" ry="2" />
<text  x="17.90" y="607.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (1 samples, 0.01%)</title><rect x="125.9" y="485" width="0.1" height="15.0" fill="rgb(233,129,13)" rx="2" ry="2" />
<text  x="128.89" y="495.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (4 samples, 0.04%)</title><rect x="165.4" y="597" width="0.5" height="15.0" fill="rgb(220,71,33)" rx="2" ry="2" />
<text  x="168.42" y="607.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="70.8" y="565" width="0.1" height="15.0" fill="rgb(223,89,51)" rx="2" ry="2" />
<text  x="73.78" y="575.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (167 samples, 1.54%)</title><rect x="169.8" y="533" width="18.2" height="15.0" fill="rgb(245,33,16)" rx="2" ry="2" />
<text  x="172.78" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.04%)</title><rect x="1068.3" y="357" width="0.5" height="15.0" fill="rgb(212,13,16)" rx="2" ry="2" />
<text  x="1071.34" y="367.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="447.6" y="565" width="0.2" height="15.0" fill="rgb(225,115,46)" rx="2" ry="2" />
<text  x="450.63" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.03%)</title><rect x="467.9" y="469" width="0.3" height="15.0" fill="rgb(219,7,12)" rx="2" ry="2" />
<text  x="470.88" y="479.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (147 samples, 1.36%)</title><rect x="1026.1" y="533" width="16.0" height="15.0" fill="rgb(234,148,1)" rx="2" ry="2" />
<text  x="1029.08" y="543.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.01%)</title><rect x="472.4" y="357" width="0.1" height="15.0" fill="rgb(240,73,49)" rx="2" ry="2" />
<text  x="475.35" y="367.5" ></text>
</g>
<g >
<title>get_typical_interval (7 samples, 0.06%)</title><rect x="1165.7" y="453" width="0.8" height="15.0" fill="rgb(248,112,28)" rx="2" ry="2" />
<text  x="1168.71" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="489.4" y="517" width="0.2" height="15.0" fill="rgb(250,32,9)" rx="2" ry="2" />
<text  x="492.45" y="527.5" ></text>
</g>
<g >
<title>do_sync_mmap_readahead (2 samples, 0.02%)</title><rect x="1020.7" y="341" width="0.3" height="15.0" fill="rgb(210,173,9)" rx="2" ry="2" />
<text  x="1023.74" y="351.5" ></text>
</g>
<g >
<title>get_typical_interval (2 samples, 0.02%)</title><rect x="68.5" y="517" width="0.2" height="15.0" fill="rgb(237,191,21)" rx="2" ry="2" />
<text  x="71.49" y="527.5" ></text>
</g>
<g >
<title>__rust_alloc (1 samples, 0.01%)</title><rect x="1068.4" y="261" width="0.2" height="15.0" fill="rgb(229,14,19)" rx="2" ry="2" />
<text  x="1071.45" y="271.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (46 samples, 0.42%)</title><rect x="1045.4" y="533" width="5.0" height="15.0" fill="rgb(219,76,28)" rx="2" ry="2" />
<text  x="1048.36" y="543.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.01%)</title><rect x="1138.8" y="549" width="0.1" height="15.0" fill="rgb(213,61,51)" rx="2" ry="2" />
<text  x="1141.81" y="559.5" ></text>
</g>
<g >
<title>alx_clean_tx_irq (1 samples, 0.01%)</title><rect x="22.9" y="373" width="0.1" height="15.0" fill="rgb(233,7,50)" rx="2" ry="2" />
<text  x="25.85" y="383.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (1 samples, 0.01%)</title><rect x="1059.6" y="533" width="0.1" height="15.0" fill="rgb(218,147,26)" rx="2" ry="2" />
<text  x="1062.63" y="543.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.01%)</title><rect x="472.4" y="309" width="0.1" height="15.0" fill="rgb(248,98,15)" rx="2" ry="2" />
<text  x="475.35" y="319.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.01%)</title><rect x="78.5" y="341" width="0.1" height="15.0" fill="rgb(220,70,22)" rx="2" ry="2" />
<text  x="81.51" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (147 samples, 1.36%)</title><rect x="1026.1" y="565" width="16.0" height="15.0" fill="rgb(240,157,43)" rx="2" ry="2" />
<text  x="1029.08" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.05%)</title><rect x="1067.1" y="165" width="0.6" height="15.0" fill="rgb(219,186,48)" rx="2" ry="2" />
<text  x="1070.14" y="175.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::open_syscall (4 samples, 0.04%)</title><rect x="472.6" y="597" width="0.4" height="15.0" fill="rgb(237,98,44)" rx="2" ry="2" />
<text  x="475.57" y="607.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (1 samples, 0.01%)</title><rect x="69.8" y="533" width="0.1" height="15.0" fill="rgb(254,5,53)" rx="2" ry="2" />
<text  x="72.80" y="543.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.01%)</title><rect x="72.8" y="533" width="0.2" height="15.0" fill="rgb(252,196,31)" rx="2" ry="2" />
<text  x="75.84" y="543.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (1 samples, 0.01%)</title><rect x="1061.8" y="293" width="0.1" height="15.0" fill="rgb(223,11,2)" rx="2" ry="2" />
<text  x="1064.81" y="303.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="73.0" y="549" width="0.1" height="15.0" fill="rgb(222,151,19)" rx="2" ry="2" />
<text  x="75.95" y="559.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.03%)</title><rect x="453.0" y="533" width="0.3" height="15.0" fill="rgb(218,67,16)" rx="2" ry="2" />
<text  x="455.96" y="543.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="970.5" y="533" width="0.3" height="15.0" fill="rgb(236,102,47)" rx="2" ry="2" />
<text  x="973.53" y="543.5" ></text>
</g>
<g >
<title>poll_idle (161 samples, 1.49%)</title><rect x="1145.1" y="453" width="17.6" height="15.0" fill="rgb(241,146,44)" rx="2" ry="2" />
<text  x="1148.13" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;usize,dashmap::util::SharedValue&lt;rustposix::safeposix::filesystem::Inode&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="1059.0" y="549" width="0.4" height="15.0" fill="rgb(206,170,8)" rx="2" ry="2" />
<text  x="1061.97" y="559.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="526.8" y="437" width="0.2" height="15.0" fill="rgb(241,165,12)" rx="2" ry="2" />
<text  x="529.81" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt; (39 samples, 0.36%)</title><rect x="981.6" y="581" width="4.3" height="15.0" fill="rgb(226,86,48)" rx="2" ry="2" />
<text  x="984.64" y="591.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.05%)</title><rect x="452.7" y="549" width="0.6" height="15.0" fill="rgb(208,125,49)" rx="2" ry="2" />
<text  x="455.75" y="559.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (8 samples, 0.07%)</title><rect x="519.4" y="485" width="0.9" height="15.0" fill="rgb(222,102,42)" rx="2" ry="2" />
<text  x="522.40" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.08%)</title><rect x="532.3" y="421" width="0.9" height="15.0" fill="rgb(244,221,36)" rx="2" ry="2" />
<text  x="535.25" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (421 samples, 3.89%)</title><rect x="21.9" y="533" width="45.8" height="15.0" fill="rgb(223,42,24)" rx="2" ry="2" />
<text  x="24.87" y="543.5" >cpui..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.03%)</title><rect x="434.9" y="597" width="0.3" height="15.0" fill="rgb(248,191,49)" rx="2" ry="2" />
<text  x="437.88" y="607.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="523.2" y="437" width="0.1" height="15.0" fill="rgb(217,71,41)" rx="2" ry="2" />
<text  x="526.21" y="447.5" ></text>
</g>
<g >
<title>unlink (4 samples, 0.04%)</title><rect x="472.6" y="533" width="0.4" height="15.0" fill="rgb(243,81,33)" rx="2" ry="2" />
<text  x="475.57" y="543.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (29 samples, 0.27%)</title><rect x="533.7" y="469" width="3.1" height="15.0" fill="rgb(242,227,13)" rx="2" ry="2" />
<text  x="536.67" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.09%)</title><rect x="521.6" y="437" width="1.1" height="15.0" fill="rgb(209,4,4)" rx="2" ry="2" />
<text  x="524.58" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="1060.4" y="485" width="0.2" height="15.0" fill="rgb(253,206,9)" rx="2" ry="2" />
<text  x="1063.39" y="495.5" ></text>
</g>
<g >
<title>alloc_buffer_head (4 samples, 0.04%)</title><rect x="1022.6" y="277" width="0.4" height="15.0" fill="rgb(217,113,15)" rx="2" ry="2" />
<text  x="1025.60" y="287.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (1,456 samples, 13.44%)</title><rect x="779.7" y="565" width="158.6" height="15.0" fill="rgb(249,8,6)" rx="2" ry="2" />
<text  x="782.71" y="575.5" >ringbuf::consumer::C..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.03%)</title><rect x="1067.9" y="373" width="0.3" height="15.0" fill="rgb(248,197,30)" rx="2" ry="2" />
<text  x="1070.90" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (31 samples, 0.29%)</title><rect x="986.2" y="533" width="3.4" height="15.0" fill="rgb(246,8,10)" rx="2" ry="2" />
<text  x="989.22" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.03%)</title><rect x="1067.9" y="341" width="0.3" height="15.0" fill="rgb(209,26,36)" rx="2" ry="2" />
<text  x="1070.90" y="351.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (12 samples, 0.11%)</title><rect x="928.3" y="517" width="1.3" height="15.0" fill="rgb(206,109,24)" rx="2" ry="2" />
<text  x="931.27" y="527.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.01%)</title><rect x="23.3" y="293" width="0.1" height="15.0" fill="rgb(236,111,40)" rx="2" ry="2" />
<text  x="26.29" y="303.5" ></text>
</g>
<g >
<title>flush_tlb_func_remote (1 samples, 0.01%)</title><rect x="421.6" y="533" width="0.1" height="15.0" fill="rgb(235,75,39)" rx="2" ry="2" />
<text  x="424.59" y="543.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="23.5" y="405" width="0.1" height="15.0" fill="rgb(249,103,3)" rx="2" ry="2" />
<text  x="26.51" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="470.3" y="453" width="0.1" height="15.0" fill="rgb(244,33,18)" rx="2" ry="2" />
<text  x="473.28" y="463.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="1163.5" y="453" width="0.1" height="15.0" fill="rgb(206,202,46)" rx="2" ry="2" />
<text  x="1166.53" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (61 samples, 0.56%)</title><rect x="524.6" y="469" width="6.7" height="15.0" fill="rgb(222,96,40)" rx="2" ry="2" />
<text  x="527.63" y="479.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.01%)</title><rect x="158.1" y="213" width="0.1" height="15.0" fill="rgb(208,132,25)" rx="2" ry="2" />
<text  x="161.13" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (5 samples, 0.05%)</title><rect x="23.1" y="437" width="0.5" height="15.0" fill="rgb(242,160,29)" rx="2" ry="2" />
<text  x="26.07" y="447.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="20.8" y="277" width="0.1" height="15.0" fill="rgb(208,133,0)" rx="2" ry="2" />
<text  x="23.78" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="470.4" y="485" width="0.1" height="15.0" fill="rgb(248,134,15)" rx="2" ry="2" />
<text  x="473.39" y="495.5" ></text>
</g>
<g >
<title>create_page_buffers (3 samples, 0.03%)</title><rect x="1061.5" y="309" width="0.3" height="15.0" fill="rgb(241,103,51)" rx="2" ry="2" />
<text  x="1064.48" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="472.2" y="517" width="0.4" height="15.0" fill="rgb(238,227,54)" rx="2" ry="2" />
<text  x="475.24" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (2 samples, 0.02%)</title><rect x="1132.6" y="501" width="0.2" height="15.0" fill="rgb(227,25,11)" rx="2" ry="2" />
<text  x="1135.60" y="511.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.05%)</title><rect x="113.1" y="421" width="0.6" height="15.0" fill="rgb(240,7,22)" rx="2" ry="2" />
<text  x="116.14" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="519.9" y="421" width="0.2" height="15.0" fill="rgb(231,29,21)" rx="2" ry="2" />
<text  x="522.95" y="431.5" ></text>
</g>
<g >
<title>exc_page_fault (10 samples, 0.09%)</title><rect x="1061.2" y="485" width="1.0" height="15.0" fill="rgb(237,100,9)" rx="2" ry="2" />
<text  x="1064.15" y="495.5" ></text>
</g>
<g >
<title>cfree (6 samples, 0.06%)</title><rect x="1058.3" y="485" width="0.7" height="15.0" fill="rgb(207,62,35)" rx="2" ry="2" />
<text  x="1061.32" y="495.5" ></text>
</g>
<g >
<title>flush_tlb_func_remote (1 samples, 0.01%)</title><rect x="1062.1" y="357" width="0.1" height="15.0" fill="rgb(226,57,33)" rx="2" ry="2" />
<text  x="1065.13" y="367.5" ></text>
</g>
<g >
<title>irq_enter_rcu (4 samples, 0.04%)</title><rect x="79.8" y="421" width="0.5" height="15.0" fill="rgb(216,42,9)" rx="2" ry="2" />
<text  x="82.82" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.01%)</title><rect x="1066.9" y="213" width="0.1" height="15.0" fill="rgb(249,210,34)" rx="2" ry="2" />
<text  x="1069.92" y="223.5" ></text>
</g>
<g >
<title>ktime_get (3 samples, 0.03%)</title><rect x="146.6" y="485" width="0.3" height="15.0" fill="rgb(206,144,48)" rx="2" ry="2" />
<text  x="149.58" y="495.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.01%)</title><rect x="23.6" y="453" width="0.1" height="15.0" fill="rgb(228,188,19)" rx="2" ry="2" />
<text  x="26.61" y="463.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.04%)</title><rect x="522.2" y="421" width="0.5" height="15.0" fill="rgb(207,91,40)" rx="2" ry="2" />
<text  x="525.23" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (219 samples, 2.02%)</title><rect x="1106.5" y="533" width="23.8" height="15.0" fill="rgb(252,161,13)" rx="2" ry="2" />
<text  x="1109.46" y="543.5" >c..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="1015.6" y="517" width="0.2" height="15.0" fill="rgb(248,170,43)" rx="2" ry="2" />
<text  x="1018.62" y="527.5" ></text>
</g>
<g >
<title>poll_idle (24 samples, 0.22%)</title><rect x="64.7" y="517" width="2.6" height="15.0" fill="rgb(210,118,41)" rx="2" ry="2" />
<text  x="67.68" y="527.5" ></text>
</g>
<g >
<title>zero_user_segments.constprop.0 (2 samples, 0.02%)</title><rect x="1022.1" y="261" width="0.2" height="15.0" fill="rgb(218,89,52)" rx="2" ry="2" />
<text  x="1025.05" y="271.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (268 samples, 2.47%)</title><rect x="441.7" y="581" width="29.2" height="15.0" fill="rgb(218,36,0)" rx="2" ry="2" />
<text  x="444.74" y="591.5" >&lt;d..</text>
</g>
<g >
<title>nohz_newidle_balance (13 samples, 0.12%)</title><rect x="71.3" y="501" width="1.4" height="15.0" fill="rgb(243,64,3)" rx="2" ry="2" />
<text  x="74.32" y="511.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (2 samples, 0.02%)</title><rect x="449.8" y="485" width="0.2" height="15.0" fill="rgb(235,14,51)" rx="2" ry="2" />
<text  x="452.80" y="495.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="470.7" y="469" width="0.2" height="15.0" fill="rgb(244,3,43)" rx="2" ry="2" />
<text  x="473.72" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.06%)</title><rect x="465.1" y="421" width="0.7" height="15.0" fill="rgb(225,188,34)" rx="2" ry="2" />
<text  x="468.05" y="431.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (49 samples, 0.45%)</title><rect x="462.3" y="501" width="5.4" height="15.0" fill="rgb(249,214,37)" rx="2" ry="2" />
<text  x="465.33" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (11 samples, 0.10%)</title><rect x="1010.2" y="405" width="1.2" height="15.0" fill="rgb(241,211,20)" rx="2" ry="2" />
<text  x="1013.18" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.06%)</title><rect x="1065.3" y="341" width="0.8" height="15.0" fill="rgb(237,99,20)" rx="2" ry="2" />
<text  x="1068.29" y="351.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (14 samples, 0.13%)</title><rect x="1014.3" y="565" width="1.5" height="15.0" fill="rgb(209,229,12)" rx="2" ry="2" />
<text  x="1017.32" y="575.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for  (58 samples, 0.54%)</title><rect x="1062.5" y="549" width="6.3" height="15.0" fill="rgb(242,112,23)" rx="2" ry="2" />
<text  x="1065.46" y="559.5" ></text>
</g>
<g >
<title>common_interrupt (10 samples, 0.09%)</title><rect x="22.0" y="501" width="1.1" height="15.0" fill="rgb(205,186,17)" rx="2" ry="2" />
<text  x="24.98" y="511.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.01%)</title><rect x="1025.6" y="549" width="0.2" height="15.0" fill="rgb(236,187,38)" rx="2" ry="2" />
<text  x="1028.65" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.06%)</title><rect x="1065.4" y="277" width="0.7" height="15.0" fill="rgb(249,62,0)" rx="2" ry="2" />
<text  x="1068.40" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (6 samples, 0.06%)</title><rect x="1065.4" y="229" width="0.7" height="15.0" fill="rgb(236,193,17)" rx="2" ry="2" />
<text  x="1068.40" y="239.5" ></text>
</g>
<g >
<title>__sysvec_call_function (1 samples, 0.01%)</title><rect x="450.6" y="453" width="0.1" height="15.0" fill="rgb(233,207,39)" rx="2" ry="2" />
<text  x="453.57" y="463.5" ></text>
</g>
<g >
<title>unmap_vmas (3 samples, 0.03%)</title><rect x="472.2" y="437" width="0.4" height="15.0" fill="rgb(233,150,31)" rx="2" ry="2" />
<text  x="475.24" y="447.5" ></text>
</g>
<g >
<title>tick_program_event (2 samples, 0.02%)</title><rect x="79.5" y="373" width="0.2" height="15.0" fill="rgb(215,164,2)" rx="2" ry="2" />
<text  x="82.49" y="383.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (9 samples, 0.08%)</title><rect x="1167.6" y="437" width="0.9" height="15.0" fill="rgb(224,36,7)" rx="2" ry="2" />
<text  x="1170.56" y="447.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="1017.6" y="549" width="0.5" height="15.0" fill="rgb(220,120,37)" rx="2" ry="2" />
<text  x="1020.59" y="559.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.04%)</title><rect x="531.8" y="485" width="0.5" height="15.0" fill="rgb(248,1,28)" rx="2" ry="2" />
<text  x="534.82" y="495.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.04%)</title><rect x="469.8" y="437" width="0.5" height="15.0" fill="rgb(235,78,49)" rx="2" ry="2" />
<text  x="472.84" y="447.5" ></text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.01%)</title><rect x="1023.1" y="293" width="0.1" height="15.0" fill="rgb(251,101,46)" rx="2" ry="2" />
<text  x="1026.14" y="303.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (12 samples, 0.11%)</title><rect x="470.9" y="597" width="1.3" height="15.0" fill="rgb(217,113,17)" rx="2" ry="2" />
<text  x="473.93" y="607.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="1060.1" y="437" width="0.3" height="15.0" fill="rgb(246,109,11)" rx="2" ry="2" />
<text  x="1063.06" y="447.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (5 samples, 0.05%)</title><rect x="1023.5" y="325" width="0.5" height="15.0" fill="rgb(253,25,12)" rx="2" ry="2" />
<text  x="1026.47" y="335.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.01%)</title><rect x="16.4" y="325" width="0.1" height="15.0" fill="rgb(227,78,15)" rx="2" ry="2" />
<text  x="19.43" y="335.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.01%)</title><rect x="80.9" y="357" width="0.1" height="15.0" fill="rgb(208,199,54)" rx="2" ry="2" />
<text  x="83.90" y="367.5" ></text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.03%)</title><rect x="23.2" y="373" width="0.3" height="15.0" fill="rgb(244,114,18)" rx="2" ry="2" />
<text  x="26.18" y="383.5" ></text>
</g>
<g >
<title>read_tsc (6 samples, 0.06%)</title><rect x="1187.7" y="485" width="0.7" height="15.0" fill="rgb(245,149,32)" rx="2" ry="2" />
<text  x="1190.71" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="1060.4" y="501" width="0.2" height="15.0" fill="rgb(205,77,32)" rx="2" ry="2" />
<text  x="1063.39" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (44 samples, 0.41%)</title><rect x="462.3" y="485" width="4.8" height="15.0" fill="rgb(216,148,27)" rx="2" ry="2" />
<text  x="465.33" y="495.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (49 samples, 0.45%)</title><rect x="1045.4" y="549" width="5.3" height="15.0" fill="rgb(239,206,20)" rx="2" ry="2" />
<text  x="1048.36" y="559.5" ></text>
</g>
<g >
<title>kick_ilb (20 samples, 0.18%)</title><rect x="1136.1" y="485" width="2.2" height="15.0" fill="rgb(211,41,34)" rx="2" ry="2" />
<text  x="1139.09" y="495.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (11 samples, 0.10%)</title><rect x="124.0" y="421" width="1.2" height="15.0" fill="rgb(245,97,17)" rx="2" ry="2" />
<text  x="127.04" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (3 samples, 0.03%)</title><rect x="73.6" y="565" width="0.3" height="15.0" fill="rgb(215,159,4)" rx="2" ry="2" />
<text  x="76.61" y="575.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.01%)</title><rect x="68.8" y="517" width="0.1" height="15.0" fill="rgb(249,22,30)" rx="2" ry="2" />
<text  x="71.81" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="527.0" y="437" width="0.4" height="15.0" fill="rgb(243,120,23)" rx="2" ry="2" />
<text  x="530.03" y="447.5" ></text>
</g>
<g >
<title>find_next_bit (1 samples, 0.01%)</title><rect x="140.2" y="389" width="0.1" height="15.0" fill="rgb(226,94,26)" rx="2" ry="2" />
<text  x="143.16" y="399.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (2 samples, 0.02%)</title><rect x="1062.8" y="389" width="0.2" height="15.0" fill="rgb(242,42,52)" rx="2" ry="2" />
<text  x="1065.79" y="399.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1 samples, 0.01%)</title><rect x="188.6" y="613" width="0.1" height="15.0" fill="rgb(241,141,20)" rx="2" ry="2" />
<text  x="191.62" y="623.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="985.9" y="549" width="0.2" height="15.0" fill="rgb(230,6,17)" rx="2" ry="2" />
<text  x="988.89" y="559.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (36 samples, 0.33%)</title><rect x="997.1" y="533" width="3.9" height="15.0" fill="rgb(211,68,38)" rx="2" ry="2" />
<text  x="1000.11" y="543.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (15 samples, 0.14%)</title><rect x="1066.2" y="437" width="1.6" height="15.0" fill="rgb(236,140,49)" rx="2" ry="2" />
<text  x="1069.16" y="447.5" ></text>
</g>
<g >
<title>__es_insert_extent (1 samples, 0.01%)</title><rect x="1023.4" y="261" width="0.1" height="15.0" fill="rgb(207,173,45)" rx="2" ry="2" />
<text  x="1026.36" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (38 samples, 0.35%)</title><rect x="966.3" y="501" width="4.1" height="15.0" fill="rgb(213,213,52)" rx="2" ry="2" />
<text  x="969.29" y="511.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="465.8" y="421" width="0.2" height="15.0" fill="rgb(254,91,35)" rx="2" ry="2" />
<text  x="468.82" y="431.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="80.9" y="341" width="0.1" height="15.0" fill="rgb(212,138,2)" rx="2" ry="2" />
<text  x="83.90" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="489.4" y="565" width="0.2" height="15.0" fill="rgb(240,140,3)" rx="2" ry="2" />
<text  x="492.45" y="575.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.01%)</title><rect x="115.4" y="437" width="0.1" height="15.0" fill="rgb(253,217,12)" rx="2" ry="2" />
<text  x="118.43" y="447.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.02%)</title><rect x="75.0" y="501" width="0.2" height="15.0" fill="rgb(213,114,43)" rx="2" ry="2" />
<text  x="78.02" y="511.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (2 samples, 0.02%)</title><rect x="75.2" y="485" width="0.3" height="15.0" fill="rgb(205,210,54)" rx="2" ry="2" />
<text  x="78.24" y="495.5" ></text>
</g>
<g >
<title>psi_task_switch (1 samples, 0.01%)</title><rect x="1184.1" y="469" width="0.1" height="15.0" fill="rgb(236,111,38)" rx="2" ry="2" />
<text  x="1187.12" y="479.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.01%)</title><rect x="1105.7" y="629" width="0.1" height="15.0" fill="rgb(228,41,4)" rx="2" ry="2" />
<text  x="1108.70" y="639.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="532.6" y="405" width="0.3" height="15.0" fill="rgb(205,195,4)" rx="2" ry="2" />
<text  x="535.58" y="415.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (1 samples, 0.01%)</title><rect x="827.4" y="421" width="0.1" height="15.0" fill="rgb(214,187,36)" rx="2" ry="2" />
<text  x="830.42" y="431.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.01%)</title><rect x="1061.2" y="421" width="0.1" height="15.0" fill="rgb(224,176,19)" rx="2" ry="2" />
<text  x="1064.15" y="431.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="1060.8" y="533" width="0.2" height="15.0" fill="rgb(251,139,11)" rx="2" ry="2" />
<text  x="1063.83" y="543.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u8 (6 samples, 0.06%)</title><rect x="1066.3" y="357" width="0.6" height="15.0" fill="rgb(212,135,32)" rx="2" ry="2" />
<text  x="1069.27" y="367.5" ></text>
</g>
<g >
<title>do_fault (8 samples, 0.07%)</title><rect x="1061.3" y="405" width="0.8" height="15.0" fill="rgb(249,17,17)" rx="2" ry="2" />
<text  x="1064.26" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.14%)</title><rect x="1015.8" y="533" width="1.7" height="15.0" fill="rgb(207,31,42)" rx="2" ry="2" />
<text  x="1018.84" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (39 samples, 0.36%)</title><rect x="966.3" y="565" width="4.2" height="15.0" fill="rgb(223,34,43)" rx="2" ry="2" />
<text  x="969.29" y="575.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (460 samples, 4.25%)</title><rect x="1139.9" y="597" width="50.1" height="15.0" fill="rgb(210,41,8)" rx="2" ry="2" />
<text  x="1142.90" y="607.5" >x86_6..</text>
</g>
<g >
<title>__set_page_dirty (4 samples, 0.04%)</title><rect x="1023.6" y="309" width="0.4" height="15.0" fill="rgb(226,55,7)" rx="2" ry="2" />
<text  x="1026.58" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="1015.1" y="469" width="0.3" height="15.0" fill="rgb(232,64,0)" rx="2" ry="2" />
<text  x="1018.08" y="479.5" ></text>
</g>
<g >
<title>page_cache_async_ra (13 samples, 0.12%)</title><rect x="1021.0" y="341" width="1.4" height="15.0" fill="rgb(212,170,21)" rx="2" ry="2" />
<text  x="1023.96" y="351.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (3 samples, 0.03%)</title><rect x="1067.9" y="421" width="0.3" height="15.0" fill="rgb(223,216,38)" rx="2" ry="2" />
<text  x="1070.90" y="431.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (305 samples, 2.82%)</title><rect x="1024.8" y="581" width="33.2" height="15.0" fill="rgb(211,143,35)" rx="2" ry="2" />
<text  x="1027.77" y="591.5" >ru..</text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.01%)</title><rect x="551.2" y="293" width="0.1" height="15.0" fill="rgb(206,93,32)" rx="2" ry="2" />
<text  x="554.21" y="303.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (67 samples, 0.62%)</title><rect x="1050.7" y="565" width="7.3" height="15.0" fill="rgb(206,178,20)" rx="2" ry="2" />
<text  x="1053.70" y="575.5" ></text>
</g>
<g >
<title>ttwu_do_activate (3 samples, 0.03%)</title><rect x="23.2" y="357" width="0.3" height="15.0" fill="rgb(251,92,25)" rx="2" ry="2" />
<text  x="26.18" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (3 samples, 0.03%)</title><rect x="1049.3" y="517" width="0.3" height="15.0" fill="rgb(245,167,26)" rx="2" ry="2" />
<text  x="1052.28" y="527.5" ></text>
</g>
<g >
<title>rcu_idle_exit (12 samples, 0.11%)</title><rect x="114.2" y="453" width="1.3" height="15.0" fill="rgb(207,143,50)" rx="2" ry="2" />
<text  x="117.23" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="158.1" y="469" width="0.4" height="15.0" fill="rgb(225,153,23)" rx="2" ry="2" />
<text  x="161.13" y="479.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.01%)</title><rect x="80.9" y="197" width="0.1" height="15.0" fill="rgb(208,165,39)" rx="2" ry="2" />
<text  x="83.90" y="207.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (45 samples, 0.42%)</title><rect x="442.7" y="549" width="4.9" height="15.0" fill="rgb(252,203,54)" rx="2" ry="2" />
<text  x="445.72" y="559.5" ></text>
</g>
<g >
<title>core::cmp::min_by (211 samples, 1.95%)</title><rect x="593.1" y="533" width="23.0" height="15.0" fill="rgb(222,3,31)" rx="2" ry="2" />
<text  x="596.14" y="543.5" >c..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="78.6" y="293" width="0.1" height="15.0" fill="rgb(226,1,54)" rx="2" ry="2" />
<text  x="81.62" y="303.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.01%)</title><rect x="14.5" y="517" width="0.1" height="15.0" fill="rgb(229,171,23)" rx="2" ry="2" />
<text  x="17.47" y="527.5" ></text>
</g>
<g >
<title>ext4_mpage_readpages (1 samples, 0.01%)</title><rect x="1021.9" y="261" width="0.2" height="15.0" fill="rgb(239,65,34)" rx="2" ry="2" />
<text  x="1024.94" y="271.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.01%)</title><rect x="1105.3" y="501" width="0.1" height="15.0" fill="rgb(245,186,9)" rx="2" ry="2" />
<text  x="1108.26" y="511.5" ></text>
</g>
<g >
<title>cpuidle_select (79 samples, 0.73%)</title><rect x="117.2" y="485" width="8.6" height="15.0" fill="rgb(236,195,36)" rx="2" ry="2" />
<text  x="120.17" y="495.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.04%)</title><rect x="541.8" y="453" width="0.5" height="15.0" fill="rgb(245,69,47)" rx="2" ry="2" />
<text  x="544.84" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (93 samples, 0.86%)</title><rect x="971.5" y="549" width="10.1" height="15.0" fill="rgb(247,192,9)" rx="2" ry="2" />
<text  x="974.51" y="559.5" ></text>
</g>
<g >
<title>__sysvec_call_function (1 samples, 0.01%)</title><rect x="928.2" y="453" width="0.1" height="15.0" fill="rgb(219,64,53)" rx="2" ry="2" />
<text  x="931.17" y="463.5" ></text>
</g>
<g >
<title>follow_pud_mask.isra.0 (1 samples, 0.01%)</title><rect x="151.2" y="469" width="0.1" height="15.0" fill="rgb(205,2,27)" rx="2" ry="2" />
<text  x="154.16" y="479.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="22.7" y="469" width="0.4" height="15.0" fill="rgb(212,191,4)" rx="2" ry="2" />
<text  x="25.74" y="479.5" ></text>
</g>
<g >
<title>kick_ilb (39 samples, 0.36%)</title><rect x="1179.5" y="421" width="4.3" height="15.0" fill="rgb(219,201,53)" rx="2" ry="2" />
<text  x="1182.54" y="431.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.01%)</title><rect x="1107.1" y="325" width="0.1" height="15.0" fill="rgb(213,127,39)" rx="2" ry="2" />
<text  x="1110.11" y="335.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.01%)</title><rect x="79.1" y="261" width="0.1" height="15.0" fill="rgb(226,126,14)" rx="2" ry="2" />
<text  x="82.05" y="271.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.01%)</title><rect x="80.9" y="213" width="0.1" height="15.0" fill="rgb(238,106,14)" rx="2" ry="2" />
<text  x="83.90" y="223.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1,198 samples, 11.06%)</title><rect x="938.3" y="597" width="130.5" height="15.0" fill="rgb(251,20,17)" rx="2" ry="2" />
<text  x="941.29" y="607.5" >rustposix::safep..</text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.01%)</title><rect x="19.0" y="165" width="0.1" height="15.0" fill="rgb(240,121,13)" rx="2" ry="2" />
<text  x="22.04" y="175.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (1 samples, 0.01%)</title><rect x="1024.6" y="213" width="0.1" height="15.0" fill="rgb(245,107,3)" rx="2" ry="2" />
<text  x="1027.56" y="223.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (2 samples, 0.02%)</title><rect x="80.4" y="277" width="0.2" height="15.0" fill="rgb(253,7,1)" rx="2" ry="2" />
<text  x="83.36" y="287.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (5 samples, 0.05%)</title><rect x="70.2" y="565" width="0.6" height="15.0" fill="rgb(242,49,38)" rx="2" ry="2" />
<text  x="73.23" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (132 samples, 1.22%)</title><rect x="456.6" y="565" width="14.3" height="15.0" fill="rgb(246,9,37)" rx="2" ry="2" />
<text  x="459.56" y="575.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (25 samples, 0.23%)</title><rect x="547.0" y="533" width="2.7" height="15.0" fill="rgb(222,13,38)" rx="2" ry="2" />
<text  x="549.96" y="543.5" ></text>
</g>
<g >
<title>ext4_evict_inode (4 samples, 0.04%)</title><rect x="472.6" y="229" width="0.4" height="15.0" fill="rgb(242,95,40)" rx="2" ry="2" />
<text  x="475.57" y="239.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.01%)</title><rect x="472.1" y="565" width="0.1" height="15.0" fill="rgb(243,22,9)" rx="2" ry="2" />
<text  x="475.13" y="575.5" ></text>
</g>
<g >
<title>[unknown] (66 samples, 0.61%)</title><rect x="151.3" y="629" width="7.2" height="15.0" fill="rgb(247,52,25)" rx="2" ry="2" />
<text  x="154.26" y="639.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_mutcbuf (1 samples, 0.01%)</title><rect x="472.1" y="581" width="0.1" height="15.0" fill="rgb(245,45,18)" rx="2" ry="2" />
<text  x="475.13" y="591.5" ></text>
</g>
<g >
<title>copy_kernel_to_fpregs (1 samples, 0.01%)</title><rect x="1105.6" y="549" width="0.1" height="15.0" fill="rgb(236,134,42)" rx="2" ry="2" />
<text  x="1108.59" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (25 samples, 0.23%)</title><rect x="1011.6" y="517" width="2.7" height="15.0" fill="rgb(244,226,38)" rx="2" ry="2" />
<text  x="1014.59" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (44 samples, 0.41%)</title><rect x="462.3" y="453" width="4.8" height="15.0" fill="rgb(226,161,47)" rx="2" ry="2" />
<text  x="465.33" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (24 samples, 0.22%)</title><rect x="483.1" y="485" width="2.6" height="15.0" fill="rgb(230,120,35)" rx="2" ry="2" />
<text  x="486.13" y="495.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="1066.5" y="229" width="0.3" height="15.0" fill="rgb(228,91,36)" rx="2" ry="2" />
<text  x="1069.49" y="239.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.01%)</title><rect x="79.6" y="357" width="0.1" height="15.0" fill="rgb(208,155,1)" rx="2" ry="2" />
<text  x="82.60" y="367.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.01%)</title><rect x="79.5" y="357" width="0.1" height="15.0" fill="rgb(241,184,39)" rx="2" ry="2" />
<text  x="82.49" y="367.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.07%)</title><rect x="537.7" y="469" width="0.9" height="15.0" fill="rgb(252,19,48)" rx="2" ry="2" />
<text  x="540.70" y="479.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.01%)</title><rect x="14.8" y="565" width="0.1" height="15.0" fill="rgb(206,82,14)" rx="2" ry="2" />
<text  x="17.79" y="575.5" ></text>
</g>
<g >
<title>llist_reverse_order (7 samples, 0.06%)</title><rect x="1173.1" y="485" width="0.8" height="15.0" fill="rgb(252,156,45)" rx="2" ry="2" />
<text  x="1176.12" y="495.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.01%)</title><rect x="67.3" y="517" width="0.1" height="15.0" fill="rgb(226,91,0)" rx="2" ry="2" />
<text  x="70.29" y="527.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.01%)</title><rect x="1021.6" y="245" width="0.1" height="15.0" fill="rgb(216,144,54)" rx="2" ry="2" />
<text  x="1024.62" y="255.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (50 samples, 0.46%)</title><rect x="81.1" y="453" width="5.5" height="15.0" fill="rgb(206,158,13)" rx="2" ry="2" />
<text  x="84.12" y="463.5" ></text>
</g>
<g >
<title>flush_tlb_func_remote (1 samples, 0.01%)</title><rect x="827.4" y="389" width="0.1" height="15.0" fill="rgb(210,213,48)" rx="2" ry="2" />
<text  x="830.42" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter (422 samples, 3.90%)</title><rect x="21.9" y="549" width="45.9" height="15.0" fill="rgb(217,104,42)" rx="2" ry="2" />
<text  x="24.87" y="559.5" >cpui..</text>
</g>
<g >
<title>xas_load (1 samples, 0.01%)</title><rect x="1023.6" y="277" width="0.1" height="15.0" fill="rgb(248,54,32)" rx="2" ry="2" />
<text  x="1026.58" y="287.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (36 samples, 0.33%)</title><rect x="997.1" y="517" width="3.9" height="15.0" fill="rgb(251,159,41)" rx="2" ry="2" />
<text  x="1000.11" y="527.5" ></text>
</g>
<g >
<title>do_page_mkwrite (6 samples, 0.06%)</title><rect x="1061.5" y="373" width="0.6" height="15.0" fill="rgb(248,17,25)" rx="2" ry="2" />
<text  x="1064.48" y="383.5" ></text>
</g>
<g >
<title>ksys_write (3 samples, 0.03%)</title><rect x="158.1" y="437" width="0.4" height="15.0" fill="rgb(227,21,11)" rx="2" ry="2" />
<text  x="161.13" y="447.5" ></text>
</g>
<g >
<title>record__pushfn (3 samples, 0.03%)</title><rect x="158.1" y="549" width="0.4" height="15.0" fill="rgb(224,99,6)" rx="2" ry="2" />
<text  x="161.13" y="559.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (3 samples, 0.03%)</title><rect x="158.1" y="341" width="0.4" height="15.0" fill="rgb(233,2,36)" rx="2" ry="2" />
<text  x="161.13" y="351.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.11%)</title><rect x="450.7" y="485" width="1.3" height="15.0" fill="rgb(237,32,48)" rx="2" ry="2" />
<text  x="453.68" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.12%)</title><rect x="998.7" y="469" width="1.5" height="15.0" fill="rgb(224,93,3)" rx="2" ry="2" />
<text  x="1001.74" y="479.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1143.6" y="405" width="0.1" height="15.0" fill="rgb(252,211,3)" rx="2" ry="2" />
<text  x="1146.60" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.13%)</title><rect x="464.5" y="437" width="1.5" height="15.0" fill="rgb(221,72,26)" rx="2" ry="2" />
<text  x="467.51" y="447.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="971.4" y="421" width="0.1" height="15.0" fill="rgb(209,51,5)" rx="2" ry="2" />
<text  x="974.40" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (147 samples, 1.36%)</title><rect x="1026.1" y="517" width="16.0" height="15.0" fill="rgb(208,27,42)" rx="2" ry="2" />
<text  x="1029.08" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (11 samples, 0.10%)</title><rect x="539.2" y="453" width="1.2" height="15.0" fill="rgb(229,177,1)" rx="2" ry="2" />
<text  x="542.22" y="463.5" ></text>
</g>
<g >
<title>menu_select (53 samples, 0.49%)</title><rect x="1164.5" y="469" width="5.8" height="15.0" fill="rgb(231,189,48)" rx="2" ry="2" />
<text  x="1167.51" y="479.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (28 samples, 0.26%)</title><rect x="1135.3" y="501" width="3.1" height="15.0" fill="rgb(238,72,35)" rx="2" ry="2" />
<text  x="1138.32" y="511.5" ></text>
</g>
<g >
<title>__xa_set_mark (1 samples, 0.01%)</title><rect x="1023.6" y="293" width="0.1" height="15.0" fill="rgb(228,27,33)" rx="2" ry="2" />
<text  x="1026.58" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.01%)</title><rect x="551.2" y="341" width="0.1" height="15.0" fill="rgb(230,65,8)" rx="2" ry="2" />
<text  x="554.21" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (3 samples, 0.03%)</title><rect x="472.2" y="597" width="0.4" height="15.0" fill="rgb(231,99,6)" rx="2" ry="2" />
<text  x="475.24" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (85 samples, 0.78%)</title><rect x="500.8" y="469" width="9.2" height="15.0" fill="rgb(212,185,2)" rx="2" ry="2" />
<text  x="503.78" y="479.5" ></text>
</g>
<g >
<title>ext4_setattr (2 samples, 0.02%)</title><rect x="1024.6" y="325" width="0.2" height="15.0" fill="rgb(239,132,35)" rx="2" ry="2" />
<text  x="1027.56" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="151.2" y="629" width="0.1" height="15.0" fill="rgb(217,48,27)" rx="2" ry="2" />
<text  x="154.16" y="639.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.01%)</title><rect x="158.3" y="277" width="0.2" height="15.0" fill="rgb(219,134,5)" rx="2" ry="2" />
<text  x="161.34" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="1068.7" y="277" width="0.1" height="15.0" fill="rgb(239,122,44)" rx="2" ry="2" />
<text  x="1071.67" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.04%)</title><rect x="1059.0" y="501" width="0.4" height="15.0" fill="rgb(244,76,30)" rx="2" ry="2" />
<text  x="1061.97" y="511.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="971.4" y="533" width="0.1" height="15.0" fill="rgb(233,67,38)" rx="2" ry="2" />
<text  x="974.40" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="134.2" y="405" width="0.1" height="15.0" fill="rgb(216,20,36)" rx="2" ry="2" />
<text  x="137.16" y="415.5" ></text>
</g>
<g >
<title>poll_idle (249 samples, 2.30%)</title><rect x="86.6" y="453" width="27.1" height="15.0" fill="rgb(237,214,54)" rx="2" ry="2" />
<text  x="89.57" y="463.5" >p..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="448.9" y="485" width="0.5" height="15.0" fill="rgb(212,120,19)" rx="2" ry="2" />
<text  x="451.93" y="495.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.02%)</title><rect x="1106.9" y="469" width="0.2" height="15.0" fill="rgb(238,96,49)" rx="2" ry="2" />
<text  x="1109.90" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (30 samples, 0.28%)</title><rect x="467.7" y="501" width="3.2" height="15.0" fill="rgb(238,2,16)" rx="2" ry="2" />
<text  x="470.67" y="511.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (269 samples, 2.48%)</title><rect x="1141.6" y="501" width="29.3" height="15.0" fill="rgb(241,194,3)" rx="2" ry="2" />
<text  x="1144.64" y="511.5" >cp..</text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.01%)</title><rect x="1105.4" y="485" width="0.1" height="15.0" fill="rgb(231,128,25)" rx="2" ry="2" />
<text  x="1108.37" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (2 samples, 0.02%)</title><rect x="1170.7" y="485" width="0.2" height="15.0" fill="rgb(252,99,42)" rx="2" ry="2" />
<text  x="1173.72" y="495.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="489.4" y="549" width="0.2" height="15.0" fill="rgb(206,86,15)" rx="2" ry="2" />
<text  x="492.45" y="559.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="22.7" y="437" width="0.4" height="15.0" fill="rgb(252,86,27)" rx="2" ry="2" />
<text  x="25.74" y="447.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (20 samples, 0.18%)</title><rect x="1132.9" y="565" width="2.2" height="15.0" fill="rgb(211,209,42)" rx="2" ry="2" />
<text  x="1135.93" y="575.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (3 samples, 0.03%)</title><rect x="23.2" y="405" width="0.3" height="15.0" fill="rgb(213,31,26)" rx="2" ry="2" />
<text  x="26.18" y="415.5" ></text>
</g>
<g >
<title>do_execveat_common (1 samples, 0.01%)</title><rect x="151.2" y="581" width="0.1" height="15.0" fill="rgb(205,93,42)" rx="2" ry="2" />
<text  x="154.16" y="591.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="1059.7" y="485" width="0.3" height="15.0" fill="rgb(233,209,52)" rx="2" ry="2" />
<text  x="1062.74" y="495.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.01%)</title><rect x="69.6" y="549" width="0.1" height="15.0" fill="rgb(235,12,19)" rx="2" ry="2" />
<text  x="72.58" y="559.5" ></text>
</g>
<g >
<title>llist_add_batch (19 samples, 0.18%)</title><rect x="143.2" y="389" width="2.1" height="15.0" fill="rgb(223,177,26)" rx="2" ry="2" />
<text  x="146.20" y="399.5" ></text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force (3 samples, 0.03%)</title><rect x="482.8" y="565" width="0.3" height="15.0" fill="rgb(224,118,43)" rx="2" ry="2" />
<text  x="485.81" y="575.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (21 samples, 0.19%)</title><rect x="1063.0" y="373" width="2.3" height="15.0" fill="rgb(217,193,35)" rx="2" ry="2" />
<text  x="1066.00" y="383.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.04%)</title><rect x="124.4" y="389" width="0.4" height="15.0" fill="rgb(249,62,53)" rx="2" ry="2" />
<text  x="127.36" y="399.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (29 samples, 0.27%)</title><rect x="551.3" y="565" width="3.2" height="15.0" fill="rgb(247,66,34)" rx="2" ry="2" />
<text  x="554.31" y="575.5" ></text>
</g>
<g >
<title>evict (4 samples, 0.04%)</title><rect x="472.6" y="245" width="0.4" height="15.0" fill="rgb(250,127,22)" rx="2" ry="2" />
<text  x="475.57" y="255.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4 samples, 0.04%)</title><rect x="531.8" y="469" width="0.5" height="15.0" fill="rgb(216,98,28)" rx="2" ry="2" />
<text  x="534.82" y="479.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.01%)</title><rect x="140.0" y="389" width="0.2" height="15.0" fill="rgb(216,17,51)" rx="2" ry="2" />
<text  x="143.05" y="399.5" ></text>
</g>
<g >
<title>read_tsc (5 samples, 0.05%)</title><rect x="146.9" y="485" width="0.6" height="15.0" fill="rgb(225,220,47)" rx="2" ry="2" />
<text  x="149.91" y="495.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.01%)</title><rect x="134.3" y="469" width="0.1" height="15.0" fill="rgb(237,192,23)" rx="2" ry="2" />
<text  x="137.27" y="479.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.01%)</title><rect x="80.9" y="229" width="0.1" height="15.0" fill="rgb(212,214,17)" rx="2" ry="2" />
<text  x="83.90" y="239.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (2 samples, 0.02%)</title><rect x="1135.9" y="485" width="0.2" height="15.0" fill="rgb(224,104,35)" rx="2" ry="2" />
<text  x="1138.87" y="495.5" ></text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.01%)</title><rect x="1130.9" y="517" width="0.1" height="15.0" fill="rgb(214,6,31)" rx="2" ry="2" />
<text  x="1133.86" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.07%)</title><rect x="1066.9" y="261" width="0.9" height="15.0" fill="rgb(224,224,26)" rx="2" ry="2" />
<text  x="1069.92" y="271.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.01%)</title><rect x="971.4" y="373" width="0.1" height="15.0" fill="rgb(221,23,5)" rx="2" ry="2" />
<text  x="974.40" y="383.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="23.6" y="485" width="0.1" height="15.0" fill="rgb(232,83,11)" rx="2" ry="2" />
<text  x="26.61" y="495.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="510.8" y="549" width="0.1" height="15.0" fill="rgb(250,38,23)" rx="2" ry="2" />
<text  x="513.80" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="534.7" y="421" width="0.2" height="15.0" fill="rgb(223,102,7)" rx="2" ry="2" />
<text  x="537.65" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (24 samples, 0.22%)</title><rect x="483.1" y="565" width="2.6" height="15.0" fill="rgb(220,39,20)" rx="2" ry="2" />
<text  x="486.13" y="575.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 0.58%)</title><rect x="151.3" y="325" width="6.8" height="15.0" fill="rgb(210,146,6)" rx="2" ry="2" />
<text  x="154.26" y="335.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (3 samples, 0.03%)</title><rect x="1067.9" y="405" width="0.3" height="15.0" fill="rgb(224,106,43)" rx="2" ry="2" />
<text  x="1070.90" y="415.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (21 samples, 0.19%)</title><rect x="1063.0" y="341" width="2.3" height="15.0" fill="rgb(244,104,33)" rx="2" ry="2" />
<text  x="1066.00" y="351.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (98 samples, 0.90%)</title><rect x="500.1" y="517" width="10.7" height="15.0" fill="rgb(245,170,33)" rx="2" ry="2" />
<text  x="503.12" y="527.5" ></text>
</g>
<g >
<title>&lt;std::sync::lazy_lock::LazyLock&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="482.8" y="581" width="0.3" height="15.0" fill="rgb(224,152,27)" rx="2" ry="2" />
<text  x="485.81" y="591.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (5 samples, 0.05%)</title><rect x="23.1" y="469" width="0.5" height="15.0" fill="rgb(221,4,11)" rx="2" ry="2" />
<text  x="26.07" y="479.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (21 samples, 0.19%)</title><rect x="1063.0" y="389" width="2.3" height="15.0" fill="rgb(207,198,28)" rx="2" ry="2" />
<text  x="1066.00" y="399.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (28 samples, 0.26%)</title><rect x="189.4" y="613" width="3.0" height="15.0" fill="rgb(231,179,25)" rx="2" ry="2" />
<text  x="192.39" y="623.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2 samples, 0.02%)</title><rect x="23.2" y="325" width="0.2" height="15.0" fill="rgb(233,25,22)" rx="2" ry="2" />
<text  x="26.18" y="335.5" ></text>
</g>
<g >
<title>record__write (3 samples, 0.03%)</title><rect x="158.1" y="533" width="0.4" height="15.0" fill="rgb(232,146,5)" rx="2" ry="2" />
<text  x="161.13" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.01%)</title><rect x="1067.6" y="85" width="0.1" height="15.0" fill="rgb(236,68,0)" rx="2" ry="2" />
<text  x="1070.58" y="95.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 0.02%)</title><rect x="1105.3" y="581" width="0.2" height="15.0" fill="rgb(219,47,34)" rx="2" ry="2" />
<text  x="1108.26" y="591.5" ></text>
</g>
<g >
<title>arch_call_rest_init (707 samples, 6.53%)</title><rect x="74.0" y="565" width="77.0" height="15.0" fill="rgb(250,30,30)" rx="2" ry="2" />
<text  x="77.04" y="575.5" >arch_cal..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (11 samples, 0.10%)</title><rect x="1061.0" y="549" width="1.2" height="15.0" fill="rgb(214,90,28)" rx="2" ry="2" />
<text  x="1064.04" y="559.5" ></text>
</g>
<g >
<title>napi_poll (3 samples, 0.03%)</title><rect x="22.7" y="405" width="0.4" height="15.0" fill="rgb(250,45,17)" rx="2" ry="2" />
<text  x="25.74" y="415.5" ></text>
</g>
<g >
<title>realloc (1 samples, 0.01%)</title><rect x="1103.1" y="613" width="0.1" height="15.0" fill="rgb(214,192,53)" rx="2" ry="2" />
<text  x="1106.08" y="623.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.01%)</title><rect x="1130.6" y="501" width="0.1" height="15.0" fill="rgb(232,36,0)" rx="2" ry="2" />
<text  x="1133.64" y="511.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (99 samples, 0.91%)</title><rect x="500.0" y="549" width="10.8" height="15.0" fill="rgb(215,24,7)" rx="2" ry="2" />
<text  x="503.01" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="69.1" y="485" width="0.2" height="15.0" fill="rgb(221,101,37)" rx="2" ry="2" />
<text  x="72.14" y="495.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (2 samples, 0.02%)</title><rect x="150.7" y="517" width="0.2" height="15.0" fill="rgb(237,193,45)" rx="2" ry="2" />
<text  x="153.72" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.13%)</title><rect x="448.5" y="501" width="1.5" height="15.0" fill="rgb(208,70,40)" rx="2" ry="2" />
<text  x="451.50" y="511.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.01%)</title><rect x="72.0" y="453" width="0.1" height="15.0" fill="rgb(246,180,38)" rx="2" ry="2" />
<text  x="74.97" y="463.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.02%)</title><rect x="990.4" y="501" width="0.2" height="15.0" fill="rgb(221,41,31)" rx="2" ry="2" />
<text  x="993.36" y="511.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (13 samples, 0.12%)</title><rect x="532.3" y="501" width="1.4" height="15.0" fill="rgb(238,187,28)" rx="2" ry="2" />
<text  x="535.25" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.01%)</title><rect x="151.2" y="597" width="0.1" height="15.0" fill="rgb(245,134,10)" rx="2" ry="2" />
<text  x="154.16" y="607.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (39 samples, 0.36%)</title><rect x="981.6" y="533" width="4.3" height="15.0" fill="rgb(252,7,51)" rx="2" ry="2" />
<text  x="984.64" y="543.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.01%)</title><rect x="1185.0" y="485" width="0.1" height="15.0" fill="rgb(230,98,36)" rx="2" ry="2" />
<text  x="1187.99" y="495.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.02%)</title><rect x="72.2" y="453" width="0.2" height="15.0" fill="rgb(248,60,2)" rx="2" ry="2" />
<text  x="75.19" y="463.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (1 samples, 0.01%)</title><rect x="1061.8" y="309" width="0.1" height="15.0" fill="rgb(223,38,39)" rx="2" ry="2" />
<text  x="1064.81" y="319.5" ></text>
</g>
<g >
<title>wb_check_old_data_flush (49 samples, 0.45%)</title><rect x="16.2" y="533" width="5.3" height="15.0" fill="rgb(226,116,16)" rx="2" ry="2" />
<text  x="19.21" y="543.5" ></text>
</g>
<g >
<title>alloc_buffer_head (2 samples, 0.02%)</title><rect x="1061.6" y="261" width="0.2" height="15.0" fill="rgb(220,49,39)" rx="2" ry="2" />
<text  x="1064.59" y="271.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.01%)</title><rect x="23.6" y="357" width="0.1" height="15.0" fill="rgb(230,175,52)" rx="2" ry="2" />
<text  x="26.61" y="367.5" ></text>
</g>
<g >
<title>__sysvec_call_function (1 samples, 0.01%)</title><rect x="827.4" y="437" width="0.1" height="15.0" fill="rgb(239,58,47)" rx="2" ry="2" />
<text  x="830.42" y="447.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (2 samples, 0.02%)</title><rect x="482.6" y="565" width="0.2" height="15.0" fill="rgb(207,216,16)" rx="2" ry="2" />
<text  x="485.59" y="575.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="160.2" y="613" width="0.2" height="15.0" fill="rgb(237,96,17)" rx="2" ry="2" />
<text  x="163.20" y="623.5" ></text>
</g>
<g >
<title>page_vma_mapped_walk (1 samples, 0.01%)</title><rect x="16.5" y="293" width="0.1" height="15.0" fill="rgb(215,148,34)" rx="2" ry="2" />
<text  x="19.53" y="303.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.01%)</title><rect x="1106.0" y="549" width="0.1" height="15.0" fill="rgb(225,183,24)" rx="2" ry="2" />
<text  x="1109.03" y="559.5" ></text>
</g>
<g >
<title>worker_thread (57 samples, 0.53%)</title><rect x="15.3" y="597" width="6.2" height="15.0" fill="rgb(218,95,14)" rx="2" ry="2" />
<text  x="18.34" y="607.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="1060.1" y="453" width="0.3" height="15.0" fill="rgb(223,191,25)" rx="2" ry="2" />
<text  x="1063.06" y="463.5" ></text>
</g>
<g >
<title>perf_ioctl (63 samples, 0.58%)</title><rect x="151.3" y="485" width="6.8" height="15.0" fill="rgb(232,211,39)" rx="2" ry="2" />
<text  x="154.26" y="495.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.01%)</title><rect x="20.8" y="373" width="0.1" height="15.0" fill="rgb(226,16,21)" rx="2" ry="2" />
<text  x="23.78" y="383.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.01%)</title><rect x="23.4" y="309" width="0.1" height="15.0" fill="rgb(253,173,27)" rx="2" ry="2" />
<text  x="26.40" y="319.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.01%)</title><rect x="551.2" y="325" width="0.1" height="15.0" fill="rgb(228,185,40)" rx="2" ry="2" />
<text  x="554.21" y="335.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.01%)</title><rect x="72.7" y="517" width="0.1" height="15.0" fill="rgb(209,220,36)" rx="2" ry="2" />
<text  x="75.74" y="527.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="827.4" y="405" width="0.1" height="15.0" fill="rgb(213,171,22)" rx="2" ry="2" />
<text  x="830.42" y="415.5" ></text>
</g>
<g >
<title>local_touch_nmi (1 samples, 0.01%)</title><rect x="132.4" y="501" width="0.1" height="15.0" fill="rgb(234,52,54)" rx="2" ry="2" />
<text  x="135.42" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (7 samples, 0.06%)</title><rect x="540.6" y="437" width="0.8" height="15.0" fill="rgb(205,31,49)" rx="2" ry="2" />
<text  x="543.64" y="447.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function (1 samples, 0.01%)</title><rect x="450.6" y="485" width="0.1" height="15.0" fill="rgb(221,201,46)" rx="2" ry="2" />
<text  x="453.57" y="495.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (1,456 samples, 13.44%)</title><rect x="779.7" y="549" width="158.6" height="15.0" fill="rgb(224,148,3)" rx="2" ry="2" />
<text  x="782.71" y="559.5" >ringbuf::consumer::C..</text>
</g>
<g >
<title>_nohz_idle_balance (24 samples, 0.22%)</title><rect x="137.9" y="421" width="2.6" height="15.0" fill="rgb(236,137,45)" rx="2" ry="2" />
<text  x="140.87" y="431.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="541.7" y="437" width="0.1" height="15.0" fill="rgb(251,88,35)" rx="2" ry="2" />
<text  x="544.73" y="447.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (8 samples, 0.07%)</title><rect x="1066.9" y="373" width="0.9" height="15.0" fill="rgb(223,23,25)" rx="2" ry="2" />
<text  x="1069.92" y="383.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.01%)</title><rect x="1024.7" y="277" width="0.1" height="15.0" fill="rgb(214,43,14)" rx="2" ry="2" />
<text  x="1027.66" y="287.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (2 samples, 0.02%)</title><rect x="472.8" y="101" width="0.2" height="15.0" fill="rgb(218,89,43)" rx="2" ry="2" />
<text  x="475.79" y="111.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="1062.9" y="245" width="0.1" height="15.0" fill="rgb(228,94,52)" rx="2" ry="2" />
<text  x="1065.89" y="255.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.01%)</title><rect x="19.9" y="341" width="0.1" height="15.0" fill="rgb(229,80,40)" rx="2" ry="2" />
<text  x="22.91" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (38 samples, 0.35%)</title><rect x="981.8" y="501" width="4.1" height="15.0" fill="rgb(221,210,21)" rx="2" ry="2" />
<text  x="984.75" y="511.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (167 samples, 1.54%)</title><rect x="169.8" y="613" width="18.2" height="15.0" fill="rgb(208,208,53)" rx="2" ry="2" />
<text  x="172.78" y="623.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (1 samples, 0.01%)</title><rect x="928.2" y="437" width="0.1" height="15.0" fill="rgb(251,28,45)" rx="2" ry="2" />
<text  x="931.17" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (3 samples, 0.03%)</title><rect x="541.4" y="469" width="0.3" height="15.0" fill="rgb(215,84,47)" rx="2" ry="2" />
<text  x="544.40" y="479.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="971.4" y="437" width="0.1" height="15.0" fill="rgb(236,135,14)" rx="2" ry="2" />
<text  x="974.40" y="447.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (1,304 samples, 12.04%)</title><rect x="637.7" y="565" width="142.0" height="15.0" fill="rgb(231,183,33)" rx="2" ry="2" />
<text  x="640.69" y="575.5" >ringbuf::consumer:..</text>
</g>
<g >
<title>page_mkclean_one (25 samples, 0.23%)</title><rect x="16.5" y="309" width="2.8" height="15.0" fill="rgb(218,222,35)" rx="2" ry="2" />
<text  x="19.53" y="319.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (75 samples, 0.69%)</title><rect x="837.9" y="517" width="8.1" height="15.0" fill="rgb(230,207,8)" rx="2" ry="2" />
<text  x="840.87" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (21 samples, 0.19%)</title><rect x="1063.0" y="309" width="2.3" height="15.0" fill="rgb(231,152,22)" rx="2" ry="2" />
<text  x="1066.00" y="319.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.28%)</title><rect x="489.6" y="549" width="3.2" height="15.0" fill="rgb(229,16,3)" rx="2" ry="2" />
<text  x="492.56" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (43 samples, 0.40%)</title><rect x="456.9" y="485" width="4.7" height="15.0" fill="rgb(227,52,54)" rx="2" ry="2" />
<text  x="459.88" y="495.5" ></text>
</g>
<g >
<title>create_empty_buffers (3 samples, 0.03%)</title><rect x="1061.5" y="293" width="0.3" height="15.0" fill="rgb(223,76,42)" rx="2" ry="2" />
<text  x="1064.48" y="303.5" ></text>
</g>
<g >
<title>newidle_balance (73 samples, 0.67%)</title><rect x="1176.1" y="453" width="7.9" height="15.0" fill="rgb(223,67,29)" rx="2" ry="2" />
<text  x="1179.06" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="116.6" y="469" width="0.1" height="15.0" fill="rgb(245,13,52)" rx="2" ry="2" />
<text  x="119.63" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper_inner (3 samples, 0.03%)</title><rect x="472.2" y="581" width="0.4" height="15.0" fill="rgb(227,9,13)" rx="2" ry="2" />
<text  x="475.24" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.05%)</title><rect x="1017.6" y="501" width="0.5" height="15.0" fill="rgb(243,61,6)" rx="2" ry="2" />
<text  x="1020.59" y="511.5" ></text>
</g>
<g >
<title>do_open (1 samples, 0.01%)</title><rect x="14.6" y="533" width="0.1" height="15.0" fill="rgb(238,212,9)" rx="2" ry="2" />
<text  x="17.57" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (4,272 samples, 39.43%)</title><rect x="473.0" y="597" width="465.3" height="15.0" fill="rgb(229,130,47)" rx="2" ry="2" />
<text  x="476.00" y="607.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safe..</text>
</g>
<g >
<title>rustposix::interface::types::get_int (2 samples, 0.02%)</title><rect x="471.9" y="581" width="0.2" height="15.0" fill="rgb(225,165,53)" rx="2" ry="2" />
<text  x="474.91" y="591.5" ></text>
</g>
<g >
<title>__page_cache_alloc (4 samples, 0.04%)</title><rect x="1021.0" y="293" width="0.4" height="15.0" fill="rgb(206,9,9)" rx="2" ry="2" />
<text  x="1023.96" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.03%)</title><rect x="1067.9" y="357" width="0.3" height="15.0" fill="rgb(236,67,38)" rx="2" ry="2" />
<text  x="1070.90" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="23.6" y="437" width="0.1" height="15.0" fill="rgb(209,4,29)" rx="2" ry="2" />
<text  x="26.61" y="447.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.01%)</title><rect x="68.7" y="517" width="0.1" height="15.0" fill="rgb(234,9,11)" rx="2" ry="2" />
<text  x="71.71" y="527.5" ></text>
</g>
<g >
<title>rebalance_domains (3 samples, 0.03%)</title><rect x="80.3" y="341" width="0.3" height="15.0" fill="rgb(214,66,31)" rx="2" ry="2" />
<text  x="83.25" y="351.5" ></text>
</g>
<g >
<title>schedule_idle (125 samples, 1.15%)</title><rect x="132.7" y="501" width="13.7" height="15.0" fill="rgb(229,185,8)" rx="2" ry="2" />
<text  x="135.75" y="511.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (95 samples, 0.88%)</title><rect x="827.5" y="517" width="10.4" height="15.0" fill="rgb(206,175,40)" rx="2" ry="2" />
<text  x="830.53" y="527.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.02%)</title><rect x="1179.3" y="421" width="0.2" height="15.0" fill="rgb(215,1,38)" rx="2" ry="2" />
<text  x="1182.33" y="431.5" ></text>
</g>
<g >
<title>ext4_writepages (49 samples, 0.45%)</title><rect x="16.2" y="437" width="5.3" height="15.0" fill="rgb(239,14,28)" rx="2" ry="2" />
<text  x="19.21" y="447.5" ></text>
</g>
<g >
<title>__sysvec_call_function (1 samples, 0.01%)</title><rect x="466.6" y="389" width="0.1" height="15.0" fill="rgb(210,200,36)" rx="2" ry="2" />
<text  x="469.58" y="399.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.05%)</title><rect x="1184.4" y="437" width="0.6" height="15.0" fill="rgb(251,110,30)" rx="2" ry="2" />
<text  x="1187.45" y="447.5" ></text>
</g>
<g >
<title>neigh_lookup (1 samples, 0.01%)</title><rect x="23.0" y="261" width="0.1" height="15.0" fill="rgb(251,143,6)" rx="2" ry="2" />
<text  x="25.96" y="271.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="466.6" y="357" width="0.1" height="15.0" fill="rgb(220,225,8)" rx="2" ry="2" />
<text  x="469.58" y="367.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.01%)</title><rect x="23.4" y="325" width="0.1" height="15.0" fill="rgb(212,69,26)" rx="2" ry="2" />
<text  x="26.40" y="335.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="1102.2" y="549" width="0.2" height="15.0" fill="rgb(226,44,13)" rx="2" ry="2" />
<text  x="1105.21" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.01%)</title><rect x="125.3" y="453" width="0.2" height="15.0" fill="rgb(227,159,11)" rx="2" ry="2" />
<text  x="128.34" y="463.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="470.5" y="453" width="0.2" height="15.0" fill="rgb(223,1,8)" rx="2" ry="2" />
<text  x="473.50" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.26%)</title><rect x="520.3" y="453" width="3.0" height="15.0" fill="rgb(212,128,47)" rx="2" ry="2" />
<text  x="523.27" y="463.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (21 samples, 0.19%)</title><rect x="1063.0" y="325" width="2.3" height="15.0" fill="rgb(226,154,7)" rx="2" ry="2" />
<text  x="1066.00" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (132 samples, 1.22%)</title><rect x="456.6" y="549" width="14.3" height="15.0" fill="rgb(229,210,35)" rx="2" ry="2" />
<text  x="459.56" y="559.5" ></text>
</g>
<g >
<title>zap_pte_range (3 samples, 0.03%)</title><rect x="472.2" y="373" width="0.4" height="15.0" fill="rgb(222,206,35)" rx="2" ry="2" />
<text  x="475.24" y="383.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="1059.5" y="517" width="0.1" height="15.0" fill="rgb(231,22,23)" rx="2" ry="2" />
<text  x="1062.52" y="527.5" ></text>
</g>
<g >
<title>cpu_startup_entry (313 samples, 2.89%)</title><rect x="1105.8" y="597" width="34.1" height="15.0" fill="rgb(239,211,9)" rx="2" ry="2" />
<text  x="1108.81" y="607.5" >cp..</text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.01%)</title><rect x="20.1" y="357" width="0.1" height="15.0" fill="rgb(208,139,52)" rx="2" ry="2" />
<text  x="23.13" y="367.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::PIPE_TABLE (1 samples, 0.01%)</title><rect x="1104.3" y="629" width="0.1" height="15.0" fill="rgb(250,20,16)" rx="2" ry="2" />
<text  x="1107.28" y="639.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.01%)</title><rect x="15.2" y="597" width="0.1" height="15.0" fill="rgb(244,109,13)" rx="2" ry="2" />
<text  x="18.23" y="607.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (6 samples, 0.06%)</title><rect x="1101.8" y="613" width="0.6" height="15.0" fill="rgb(227,193,21)" rx="2" ry="2" />
<text  x="1104.78" y="623.5" ></text>
</g>
<g >
<title>__munmap (3 samples, 0.03%)</title><rect x="472.2" y="549" width="0.4" height="15.0" fill="rgb(219,215,1)" rx="2" ry="2" />
<text  x="475.24" y="559.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="1062.2" y="549" width="0.3" height="15.0" fill="rgb(216,119,21)" rx="2" ry="2" />
<text  x="1065.24" y="559.5" ></text>
</g>
<g >
<title>cpu_latency_qos_limit (1 samples, 0.01%)</title><rect x="1130.5" y="517" width="0.1" height="15.0" fill="rgb(236,92,26)" rx="2" ry="2" />
<text  x="1133.53" y="527.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="1014.9" y="533" width="0.2" height="15.0" fill="rgb(253,193,31)" rx="2" ry="2" />
<text  x="1017.86" y="543.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (2 samples, 0.02%)</title><rect x="1062.8" y="309" width="0.2" height="15.0" fill="rgb(222,84,34)" rx="2" ry="2" />
<text  x="1065.79" y="319.5" ></text>
</g>
<g >
<title>xa_load (1 samples, 0.01%)</title><rect x="1020.9" y="293" width="0.1" height="15.0" fill="rgb(220,90,30)" rx="2" ry="2" />
<text  x="1023.85" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.02%)</title><rect x="1009.3" y="485" width="0.2" height="15.0" fill="rgb(228,136,28)" rx="2" ry="2" />
<text  x="1012.31" y="495.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (6 samples, 0.06%)</title><rect x="1066.3" y="389" width="0.6" height="15.0" fill="rgb(219,197,23)" rx="2" ry="2" />
<text  x="1069.27" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="19.6" y="341" width="0.1" height="15.0" fill="rgb(225,101,19)" rx="2" ry="2" />
<text  x="22.58" y="351.5" ></text>
</g>
<g >
<title>__schedule (19 samples, 0.18%)</title><rect x="70.9" y="549" width="2.1" height="15.0" fill="rgb(205,66,2)" rx="2" ry="2" />
<text  x="73.88" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (38 samples, 0.35%)</title><rect x="981.8" y="517" width="4.1" height="15.0" fill="rgb(251,30,12)" rx="2" ry="2" />
<text  x="984.75" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (8 samples, 0.07%)</title><rect x="995.7" y="469" width="0.9" height="15.0" fill="rgb(243,104,25)" rx="2" ry="2" />
<text  x="998.69" y="479.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="1060.7" y="517" width="0.1" height="15.0" fill="rgb(245,196,40)" rx="2" ry="2" />
<text  x="1063.72" y="527.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u16 (3 samples, 0.03%)</title><rect x="1067.9" y="437" width="0.3" height="15.0" fill="rgb(248,153,43)" rx="2" ry="2" />
<text  x="1070.90" y="447.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u64 (8 samples, 0.07%)</title><rect x="1066.9" y="389" width="0.9" height="15.0" fill="rgb(222,225,31)" rx="2" ry="2" />
<text  x="1069.92" y="399.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="928.1" y="405" width="0.1" height="15.0" fill="rgb(242,17,38)" rx="2" ry="2" />
<text  x="931.06" y="415.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.01%)</title><rect x="73.8" y="501" width="0.1" height="15.0" fill="rgb(242,138,19)" rx="2" ry="2" />
<text  x="76.82" y="511.5" ></text>
</g>
<g >
<title>iput_final (4 samples, 0.04%)</title><rect x="472.6" y="421" width="0.4" height="15.0" fill="rgb(206,154,50)" rx="2" ry="2" />
<text  x="475.57" y="431.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.01%)</title><rect x="537.0" y="501" width="0.2" height="15.0" fill="rgb(228,189,0)" rx="2" ry="2" />
<text  x="540.05" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (9 samples, 0.08%)</title><rect x="531.3" y="501" width="1.0" height="15.0" fill="rgb(238,89,31)" rx="2" ry="2" />
<text  x="534.27" y="511.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.01%)</title><rect x="1061.3" y="277" width="0.1" height="15.0" fill="rgb(251,159,21)" rx="2" ry="2" />
<text  x="1064.26" y="287.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (2 samples, 0.02%)</title><rect x="1062.8" y="293" width="0.2" height="15.0" fill="rgb(229,198,28)" rx="2" ry="2" />
<text  x="1065.79" y="303.5" ></text>
</g>
<g >
<title>ext4_ext_map_blocks (1 samples, 0.01%)</title><rect x="20.7" y="373" width="0.1" height="15.0" fill="rgb(228,158,23)" rx="2" ry="2" />
<text  x="23.67" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.01%)</title><rect x="1131.7" y="501" width="0.1" height="15.0" fill="rgb(215,197,7)" rx="2" ry="2" />
<text  x="1134.73" y="511.5" ></text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.03%)</title><rect x="67.4" y="517" width="0.3" height="15.0" fill="rgb(247,145,17)" rx="2" ry="2" />
<text  x="70.40" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="1138.6" y="549" width="0.1" height="15.0" fill="rgb(221,166,43)" rx="2" ry="2" />
<text  x="1141.59" y="559.5" ></text>
</g>
<g >
<title>try_to_free_buffers (1 samples, 0.01%)</title><rect x="472.9" y="85" width="0.1" height="15.0" fill="rgb(233,196,13)" rx="2" ry="2" />
<text  x="475.89" y="95.5" ></text>
</g>
<g >
<title>find_get_pages_range (2 samples, 0.02%)</title><rect x="20.5" y="373" width="0.2" height="15.0" fill="rgb(254,95,4)" rx="2" ry="2" />
<text  x="23.46" y="383.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (2 samples, 0.02%)</title><rect x="1106.9" y="421" width="0.2" height="15.0" fill="rgb(225,113,20)" rx="2" ry="2" />
<text  x="1109.90" y="431.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (4 samples, 0.04%)</title><rect x="519.0" y="485" width="0.4" height="15.0" fill="rgb(245,218,4)" rx="2" ry="2" />
<text  x="521.97" y="495.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (2 samples, 0.02%)</title><rect x="69.3" y="485" width="0.2" height="15.0" fill="rgb(209,73,22)" rx="2" ry="2" />
<text  x="72.25" y="495.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (11 samples, 0.10%)</title><rect x="468.2" y="485" width="1.2" height="15.0" fill="rgb(216,106,14)" rx="2" ry="2" />
<text  x="471.21" y="495.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="1023.7" y="245" width="0.1" height="15.0" fill="rgb(220,6,17)" rx="2" ry="2" />
<text  x="1026.68" y="255.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (78 samples, 0.72%)</title><rect x="637.7" y="533" width="8.5" height="15.0" fill="rgb(243,124,20)" rx="2" ry="2" />
<text  x="640.69" y="543.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (1 samples, 0.01%)</title><rect x="1049.0" y="501" width="0.1" height="15.0" fill="rgb(220,111,1)" rx="2" ry="2" />
<text  x="1051.95" y="511.5" ></text>
</g>
<g >
<title>pagevec_lookup_range (2 samples, 0.02%)</title><rect x="20.5" y="389" width="0.2" height="15.0" fill="rgb(208,30,44)" rx="2" ry="2" />
<text  x="23.46" y="399.5" ></text>
</g>
<g >
<title>arp_process (1 samples, 0.01%)</title><rect x="23.0" y="277" width="0.1" height="15.0" fill="rgb(212,154,3)" rx="2" ry="2" />
<text  x="25.96" y="287.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="1068.3" y="277" width="0.1" height="15.0" fill="rgb(226,223,33)" rx="2" ry="2" />
<text  x="1071.34" y="287.5" ></text>
</g>
<g >
<title>ftruncate64 (2 samples, 0.02%)</title><rect x="1024.6" y="485" width="0.2" height="15.0" fill="rgb(250,176,14)" rx="2" ry="2" />
<text  x="1027.56" y="495.5" ></text>
</g>
<g >
<title>[unknown]  (8,140 samples, 75.13%)</title><rect x="194.4" y="629" width="886.6" height="15.0" fill="rgb(234,114,23)" rx="2" ry="2" />
<text  x="197.40" y="639.5" >[unknown] </text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (47 samples, 0.43%)</title><rect x="1052.9" y="533" width="5.1" height="15.0" fill="rgb(238,25,20)" rx="2" ry="2" />
<text  x="1055.87" y="543.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (7 samples, 0.06%)</title><rect x="1065.3" y="437" width="0.8" height="15.0" fill="rgb(241,54,27)" rx="2" ry="2" />
<text  x="1068.29" y="447.5" ></text>
</g>
<g >
<title>read_tsc (4 samples, 0.04%)</title><rect x="73.1" y="549" width="0.4" height="15.0" fill="rgb(231,103,4)" rx="2" ry="2" />
<text  x="76.06" y="559.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.26%)</title><rect x="495.4" y="565" width="3.1" height="15.0" fill="rgb(205,139,48)" rx="2" ry="2" />
<text  x="498.44" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="1104.2" y="613" width="0.1" height="15.0" fill="rgb(220,151,30)" rx="2" ry="2" />
<text  x="1107.17" y="623.5" ></text>
</g>
<g >
<title>do_shared_fault (33 samples, 0.30%)</title><rect x="1020.7" y="405" width="3.6" height="15.0" fill="rgb(227,227,16)" rx="2" ry="2" />
<text  x="1023.74" y="415.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="69.4" y="453" width="0.1" height="15.0" fill="rgb(219,4,4)" rx="2" ry="2" />
<text  x="72.36" y="463.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.01%)</title><rect x="145.3" y="469" width="0.1" height="15.0" fill="rgb(212,79,12)" rx="2" ry="2" />
<text  x="148.27" y="479.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="500.0" y="485" width="0.1" height="15.0" fill="rgb(236,196,13)" rx="2" ry="2" />
<text  x="503.01" y="495.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (4 samples, 0.04%)</title><rect x="523.3" y="485" width="0.5" height="15.0" fill="rgb(243,61,15)" rx="2" ry="2" />
<text  x="526.32" y="495.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (6 samples, 0.06%)</title><rect x="970.8" y="581" width="0.6" height="15.0" fill="rgb(244,158,31)" rx="2" ry="2" />
<text  x="973.75" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="470.5" y="485" width="0.2" height="15.0" fill="rgb(209,86,1)" rx="2" ry="2" />
<text  x="473.50" y="495.5" ></text>
</g>
<g >
<title>mpage_map_one_extent (1 samples, 0.01%)</title><rect x="20.7" y="405" width="0.1" height="15.0" fill="rgb(212,16,20)" rx="2" ry="2" />
<text  x="23.67" y="415.5" ></text>
</g>
<g >
<title>update_rq_clock (7 samples, 0.06%)</title><rect x="1184.2" y="469" width="0.8" height="15.0" fill="rgb(227,33,53)" rx="2" ry="2" />
<text  x="1187.23" y="479.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (2 samples, 0.02%)</title><rect x="1183.8" y="421" width="0.2" height="15.0" fill="rgb(249,80,14)" rx="2" ry="2" />
<text  x="1186.79" y="431.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (28 samples, 0.26%)</title><rect x="551.3" y="549" width="3.1" height="15.0" fill="rgb(232,53,3)" rx="2" ry="2" />
<text  x="554.31" y="559.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.02%)</title><rect x="551.1" y="453" width="0.2" height="15.0" fill="rgb(219,33,1)" rx="2" ry="2" />
<text  x="554.10" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (28 samples, 0.26%)</title><rect x="551.3" y="517" width="3.1" height="15.0" fill="rgb(245,81,18)" rx="2" ry="2" />
<text  x="554.31" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="540.4" y="453" width="0.2" height="15.0" fill="rgb(245,205,27)" rx="2" ry="2" />
<text  x="543.42" y="463.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.01%)</title><rect x="1137.1" y="469" width="0.1" height="15.0" fill="rgb(218,28,7)" rx="2" ry="2" />
<text  x="1140.07" y="479.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.01%)</title><rect x="1165.6" y="437" width="0.1" height="15.0" fill="rgb(243,145,26)" rx="2" ry="2" />
<text  x="1168.60" y="447.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.01%)</title><rect x="1062.1" y="453" width="0.1" height="15.0" fill="rgb(211,197,21)" rx="2" ry="2" />
<text  x="1065.13" y="463.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (4 samples, 0.04%)</title><rect x="1059.0" y="517" width="0.4" height="15.0" fill="rgb(230,100,15)" rx="2" ry="2" />
<text  x="1061.97" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.08%)</title><rect x="14.4" y="613" width="0.9" height="15.0" fill="rgb(210,44,0)" rx="2" ry="2" />
<text  x="17.36" y="623.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.01%)</title><rect x="1143.6" y="421" width="0.1" height="15.0" fill="rgb(217,109,20)" rx="2" ry="2" />
<text  x="1146.60" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (28 samples, 0.26%)</title><rect x="520.3" y="469" width="3.0" height="15.0" fill="rgb(208,115,1)" rx="2" ry="2" />
<text  x="523.27" y="479.5" ></text>
</g>
<g >
<title>futex_wait (2 samples, 0.02%)</title><rect x="1105.3" y="565" width="0.2" height="15.0" fill="rgb(235,93,32)" rx="2" ry="2" />
<text  x="1108.26" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.04%)</title><rect x="541.8" y="469" width="0.5" height="15.0" fill="rgb(230,216,52)" rx="2" ry="2" />
<text  x="544.84" y="479.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.01%)</title><rect x="1105.4" y="501" width="0.1" height="15.0" fill="rgb(215,192,9)" rx="2" ry="2" />
<text  x="1108.37" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (46 samples, 0.42%)</title><rect x="1004.0" y="501" width="5.0" height="15.0" fill="rgb(225,0,3)" rx="2" ry="2" />
<text  x="1006.97" y="511.5" ></text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.01%)</title><rect x="1021.9" y="229" width="0.2" height="15.0" fill="rgb(245,89,5)" rx="2" ry="2" />
<text  x="1024.94" y="239.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (4 samples, 0.04%)</title><rect x="118.9" y="453" width="0.5" height="15.0" fill="rgb(224,95,9)" rx="2" ry="2" />
<text  x="121.92" y="463.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.01%)</title><rect x="23.0" y="373" width="0.1" height="15.0" fill="rgb(235,158,2)" rx="2" ry="2" />
<text  x="25.96" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.04%)</title><rect x="449.4" y="485" width="0.4" height="15.0" fill="rgb(244,88,3)" rx="2" ry="2" />
<text  x="452.37" y="495.5" ></text>
</g>
<g >
<title>core::cmp::min (220 samples, 2.03%)</title><rect x="593.1" y="565" width="24.0" height="15.0" fill="rgb(208,12,4)" rx="2" ry="2" />
<text  x="596.14" y="575.5" >c..</text>
</g>
<g >
<title>exc_page_fault (4 samples, 0.04%)</title><rect x="550.9" y="501" width="0.4" height="15.0" fill="rgb(254,201,22)" rx="2" ry="2" />
<text  x="553.88" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.06%)</title><rect x="1065.3" y="325" width="0.8" height="15.0" fill="rgb(210,33,27)" rx="2" ry="2" />
<text  x="1068.29" y="335.5" ></text>
</g>
<g >
<title>cpuidle_select (16 samples, 0.15%)</title><rect x="67.8" y="549" width="1.8" height="15.0" fill="rgb(211,210,7)" rx="2" ry="2" />
<text  x="70.83" y="559.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write_guard (2 samples, 0.02%)</title><rect x="546.3" y="565" width="0.2" height="15.0" fill="rgb(236,202,15)" rx="2" ry="2" />
<text  x="549.30" y="575.5" ></text>
</g>
<g >
<title>hrtimer_sleeper_start_expires (1 samples, 0.01%)</title><rect x="14.4" y="533" width="0.1" height="15.0" fill="rgb(218,156,41)" rx="2" ry="2" />
<text  x="17.36" y="543.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write_guard (1 samples, 0.01%)</title><rect x="1017.5" y="565" width="0.1" height="15.0" fill="rgb(216,152,8)" rx="2" ry="2" />
<text  x="1020.48" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.06%)</title><rect x="1066.9" y="229" width="0.8" height="15.0" fill="rgb(220,167,34)" rx="2" ry="2" />
<text  x="1069.92" y="239.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.0 (1 samples, 0.01%)</title><rect x="421.6" y="517" width="0.1" height="15.0" fill="rgb(251,44,22)" rx="2" ry="2" />
<text  x="424.59" y="527.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.01%)</title><rect x="1102.5" y="613" width="0.1" height="15.0" fill="rgb(235,159,30)" rx="2" ry="2" />
<text  x="1105.54" y="623.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.01%)</title><rect x="14.2" y="629" width="0.2" height="15.0" fill="rgb(221,7,8)" rx="2" ry="2" />
<text  x="17.25" y="639.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.01%)</title><rect x="1061.6" y="245" width="0.1" height="15.0" fill="rgb(218,11,26)" rx="2" ry="2" />
<text  x="1064.59" y="255.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (246 samples, 2.27%)</title><rect x="1106.1" y="565" width="26.8" height="15.0" fill="rgb(227,176,42)" rx="2" ry="2" />
<text  x="1109.13" y="575.5" >c..</text>
</g>
<g >
<title>read_tsc (3 samples, 0.03%)</title><rect x="148.5" y="485" width="0.4" height="15.0" fill="rgb(239,82,27)" rx="2" ry="2" />
<text  x="151.54" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function (1 samples, 0.01%)</title><rect x="1062.1" y="437" width="0.1" height="15.0" fill="rgb(212,201,6)" rx="2" ry="2" />
<text  x="1065.13" y="447.5" ></text>
</g>
<g >
<title>write (3 samples, 0.03%)</title><rect x="158.1" y="501" width="0.4" height="15.0" fill="rgb(234,69,40)" rx="2" ry="2" />
<text  x="161.13" y="511.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (28 samples, 0.26%)</title><rect x="495.4" y="549" width="3.1" height="15.0" fill="rgb(253,85,7)" rx="2" ry="2" />
<text  x="498.44" y="559.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.22%)</title><rect x="492.8" y="549" width="2.6" height="15.0" fill="rgb(226,47,18)" rx="2" ry="2" />
<text  x="495.83" y="559.5" ></text>
</g>
<g >
<title>do_sys_openat2 (2 samples, 0.02%)</title><rect x="14.6" y="581" width="0.2" height="15.0" fill="rgb(251,104,43)" rx="2" ry="2" />
<text  x="17.57" y="591.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.02%)</title><rect x="551.1" y="421" width="0.2" height="15.0" fill="rgb(222,65,36)" rx="2" ry="2" />
<text  x="554.10" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.01%)</title><rect x="1141.4" y="501" width="0.1" height="15.0" fill="rgb(238,226,6)" rx="2" ry="2" />
<text  x="1144.42" y="511.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.01%)</title><rect x="14.4" y="517" width="0.1" height="15.0" fill="rgb(245,125,17)" rx="2" ry="2" />
<text  x="17.36" y="527.5" ></text>
</g>
<g >
<title>try_to_release_page (2 samples, 0.02%)</title><rect x="472.8" y="133" width="0.2" height="15.0" fill="rgb(238,100,1)" rx="2" ry="2" />
<text  x="475.79" y="143.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.01%)</title><rect x="16.4" y="357" width="0.1" height="15.0" fill="rgb(235,137,10)" rx="2" ry="2" />
<text  x="19.43" y="367.5" ></text>
</g>
<g >
<title>_perf_event_enable (63 samples, 0.58%)</title><rect x="151.3" y="437" width="6.8" height="15.0" fill="rgb(250,112,32)" rx="2" ry="2" />
<text  x="154.26" y="447.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="1143.6" y="293" width="0.1" height="15.0" fill="rgb(205,110,51)" rx="2" ry="2" />
<text  x="1146.60" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.07%)</title><rect x="1059.7" y="517" width="0.9" height="15.0" fill="rgb(244,61,40)" rx="2" ry="2" />
<text  x="1062.74" y="527.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.02%)</title><rect x="462.1" y="501" width="0.2" height="15.0" fill="rgb(254,18,4)" rx="2" ry="2" />
<text  x="465.11" y="511.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (4 samples, 0.04%)</title><rect x="550.9" y="517" width="0.4" height="15.0" fill="rgb(205,102,17)" rx="2" ry="2" />
<text  x="553.88" y="527.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (14 samples, 0.13%)</title><rect x="517.9" y="533" width="1.5" height="15.0" fill="rgb(208,57,44)" rx="2" ry="2" />
<text  x="520.88" y="543.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.01%)</title><rect x="1105.3" y="485" width="0.1" height="15.0" fill="rgb(217,195,30)" rx="2" ry="2" />
<text  x="1108.26" y="495.5" ></text>
</g>
<g >
<title>finish_fault (1 samples, 0.01%)</title><rect x="1024.2" y="389" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1027.23" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="1049.8" y="501" width="0.2" height="15.0" fill="rgb(253,121,47)" rx="2" ry="2" />
<text  x="1052.82" y="511.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.01%)</title><rect x="1024.7" y="293" width="0.1" height="15.0" fill="rgb(216,74,17)" rx="2" ry="2" />
<text  x="1027.66" y="303.5" ></text>
</g>
<g >
<title>swapper (784 samples, 7.24%)</title><rect x="1104.6" y="645" width="85.4" height="15.0" fill="rgb(225,207,25)" rx="2" ry="2" />
<text  x="1107.61" y="655.5" >swapper</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt; (51 samples, 0.47%)</title><rect x="435.2" y="597" width="5.6" height="15.0" fill="rgb(238,10,4)" rx="2" ry="2" />
<text  x="438.21" y="607.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (277 samples, 2.56%)</title><rect x="440.8" y="597" width="30.1" height="15.0" fill="rgb(215,3,14)" rx="2" ry="2" />
<text  x="443.76" y="607.5" >da..</text>
</g>
<g >
<title>put_prev_task_idle (1 samples, 0.01%)</title><rect x="146.3" y="485" width="0.1" height="15.0" fill="rgb(241,77,46)" rx="2" ry="2" />
<text  x="149.25" y="495.5" ></text>
</g>
<g >
<title>page_add_file_rmap (1 samples, 0.01%)</title><rect x="1024.2" y="357" width="0.1" height="15.0" fill="rgb(231,136,45)" rx="2" ry="2" />
<text  x="1027.23" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (27 samples, 0.25%)</title><rect x="489.9" y="501" width="2.9" height="15.0" fill="rgb(214,174,35)" rx="2" ry="2" />
<text  x="492.89" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.26%)</title><rect x="453.3" y="501" width="3.0" height="15.0" fill="rgb(208,64,27)" rx="2" ry="2" />
<text  x="456.29" y="511.5" ></text>
</g>
<g >
<title>get_arg_page (1 samples, 0.01%)</title><rect x="151.2" y="549" width="0.1" height="15.0" fill="rgb(211,37,5)" rx="2" ry="2" />
<text  x="154.16" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.26%)</title><rect x="453.3" y="469" width="3.0" height="15.0" fill="rgb(247,193,5)" rx="2" ry="2" />
<text  x="456.29" y="479.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.01%)</title><rect x="472.4" y="293" width="0.1" height="15.0" fill="rgb(210,187,16)" rx="2" ry="2" />
<text  x="475.35" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.08%)</title><rect x="14.4" y="629" width="0.9" height="15.0" fill="rgb(225,150,45)" rx="2" ry="2" />
<text  x="17.36" y="639.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="1015.3" y="453" width="0.1" height="15.0" fill="rgb(206,14,9)" rx="2" ry="2" />
<text  x="1018.30" y="463.5" ></text>
</g>
<g >
<title>native_sched_clock (4 samples, 0.04%)</title><rect x="1129.9" y="501" width="0.4" height="15.0" fill="rgb(232,219,22)" rx="2" ry="2" />
<text  x="1132.88" y="511.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 0.02%)</title><rect x="73.7" y="533" width="0.2" height="15.0" fill="rgb(231,220,36)" rx="2" ry="2" />
<text  x="76.72" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.01%)</title><rect x="1067.9" y="261" width="0.1" height="15.0" fill="rgb(213,145,10)" rx="2" ry="2" />
<text  x="1070.90" y="271.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (5 samples, 0.05%)</title><rect x="996.6" y="549" width="0.5" height="15.0" fill="rgb(248,27,4)" rx="2" ry="2" />
<text  x="999.56" y="559.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="1001.5" y="517" width="0.1" height="15.0" fill="rgb(213,183,24)" rx="2" ry="2" />
<text  x="1004.47" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.02%)</title><rect x="1015.6" y="485" width="0.2" height="15.0" fill="rgb(226,175,52)" rx="2" ry="2" />
<text  x="1018.62" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="158.5" y="613" width="0.2" height="15.0" fill="rgb(240,225,41)" rx="2" ry="2" />
<text  x="161.45" y="623.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (2 samples, 0.02%)</title><rect x="1129.3" y="501" width="0.3" height="15.0" fill="rgb(236,80,11)" rx="2" ry="2" />
<text  x="1132.33" y="511.5" ></text>
</g>
<g >
<title>account_page_dirtied (1 samples, 0.01%)</title><rect x="1061.9" y="277" width="0.1" height="15.0" fill="rgb(223,147,27)" rx="2" ry="2" />
<text  x="1064.91" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (206 samples, 1.90%)</title><rect x="943.5" y="581" width="22.5" height="15.0" fill="rgb(226,216,12)" rx="2" ry="2" />
<text  x="946.52" y="591.5" >&lt;..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.02%)</title><rect x="442.5" y="549" width="0.2" height="15.0" fill="rgb(228,65,53)" rx="2" ry="2" />
<text  x="445.51" y="559.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.0 (1 samples, 0.01%)</title><rect x="928.2" y="389" width="0.1" height="15.0" fill="rgb(234,122,21)" rx="2" ry="2" />
<text  x="931.17" y="399.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (4 samples, 0.04%)</title><rect x="1102.6" y="613" width="0.5" height="15.0" fill="rgb(211,32,17)" rx="2" ry="2" />
<text  x="1105.65" y="623.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.15%)</title><rect x="525.6" y="453" width="1.8" height="15.0" fill="rgb(244,125,17)" rx="2" ry="2" />
<text  x="528.61" y="463.5" ></text>
</g>
<g >
<title>ext4_filemap_fault (15 samples, 0.14%)</title><rect x="1020.7" y="373" width="1.7" height="15.0" fill="rgb(249,113,53)" rx="2" ry="2" />
<text  x="1023.74" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.05%)</title><rect x="1066.4" y="261" width="0.5" height="15.0" fill="rgb(237,210,0)" rx="2" ry="2" />
<text  x="1069.38" y="271.5" ></text>
</g>
<g >
<title>menu_update (6 samples, 0.06%)</title><rect x="120.2" y="453" width="0.7" height="15.0" fill="rgb(214,140,31)" rx="2" ry="2" />
<text  x="123.22" y="463.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (14 samples, 0.13%)</title><rect x="1051.3" y="533" width="1.6" height="15.0" fill="rgb(241,184,54)" rx="2" ry="2" />
<text  x="1054.35" y="543.5" ></text>
</g>
<g >
<title>ctx_resched (1 samples, 0.01%)</title><rect x="158.5" y="421" width="0.1" height="15.0" fill="rgb(234,183,31)" rx="2" ry="2" />
<text  x="161.45" y="431.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.02%)</title><rect x="546.7" y="517" width="0.3" height="15.0" fill="rgb(228,119,26)" rx="2" ry="2" />
<text  x="549.74" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (6 samples, 0.06%)</title><rect x="1169.4" y="389" width="0.7" height="15.0" fill="rgb(220,177,0)" rx="2" ry="2" />
<text  x="1172.41" y="399.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="846.0" y="517" width="0.2" height="15.0" fill="rgb(229,62,40)" rx="2" ry="2" />
<text  x="849.04" y="527.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (5 samples, 0.05%)</title><rect x="455.6" y="453" width="0.5" height="15.0" fill="rgb(216,172,39)" rx="2" ry="2" />
<text  x="458.58" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.04%)</title><rect x="124.8" y="389" width="0.4" height="15.0" fill="rgb(210,74,49)" rx="2" ry="2" />
<text  x="127.80" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (3 samples, 0.03%)</title><rect x="472.2" y="501" width="0.4" height="15.0" fill="rgb(221,229,39)" rx="2" ry="2" />
<text  x="475.24" y="511.5" ></text>
</g>
<g >
<title>[unknown] (204 samples, 1.88%)</title><rect x="1081.0" y="629" width="22.2" height="15.0" fill="rgb(212,62,27)" rx="2" ry="2" />
<text  x="1083.97" y="639.5" >[..</text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (15 samples, 0.14%)</title><rect x="1015.8" y="565" width="1.7" height="15.0" fill="rgb(223,42,31)" rx="2" ry="2" />
<text  x="1018.84" y="575.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.01%)</title><rect x="1132.7" y="469" width="0.1" height="15.0" fill="rgb(205,85,25)" rx="2" ry="2" />
<text  x="1135.71" y="479.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (8 samples, 0.07%)</title><rect x="1066.9" y="421" width="0.9" height="15.0" fill="rgb(242,3,49)" rx="2" ry="2" />
<text  x="1069.92" y="431.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (10 samples, 0.09%)</title><rect x="1137.2" y="469" width="1.1" height="15.0" fill="rgb(219,195,31)" rx="2" ry="2" />
<text  x="1140.18" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="1062.2" y="501" width="0.3" height="15.0" fill="rgb(251,197,7)" rx="2" ry="2" />
<text  x="1065.24" y="511.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (21 samples, 0.19%)</title><rect x="1063.0" y="117" width="2.3" height="15.0" fill="rgb(251,134,7)" rx="2" ry="2" />
<text  x="1066.00" y="127.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="1059.7" y="453" width="0.3" height="15.0" fill="rgb(222,93,3)" rx="2" ry="2" />
<text  x="1062.74" y="463.5" ></text>
</g>
<g >
<title>llist_add_batch (2 samples, 0.02%)</title><rect x="17.0" y="229" width="0.2" height="15.0" fill="rgb(244,37,10)" rx="2" ry="2" />
<text  x="19.97" y="239.5" ></text>
</g>
<g >
<title>wb_workfn (49 samples, 0.45%)</title><rect x="16.2" y="565" width="5.3" height="15.0" fill="rgb(227,41,47)" rx="2" ry="2" />
<text  x="19.21" y="575.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="134.2" y="293" width="0.1" height="15.0" fill="rgb(218,125,50)" rx="2" ry="2" />
<text  x="137.16" y="303.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (773 samples, 7.13%)</title><rect x="1105.8" y="629" width="84.2" height="15.0" fill="rgb(252,207,27)" rx="2" ry="2" />
<text  x="1108.81" y="639.5" >secondary..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (39 samples, 0.36%)</title><rect x="981.6" y="565" width="4.3" height="15.0" fill="rgb(214,207,27)" rx="2" ry="2" />
<text  x="984.64" y="575.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="132.3" y="501" width="0.1" height="15.0" fill="rgb(221,113,42)" rx="2" ry="2" />
<text  x="135.31" y="511.5" ></text>
</g>
<g >
<title>ext4_page_mkwrite (17 samples, 0.16%)</title><rect x="1022.4" y="373" width="1.8" height="15.0" fill="rgb(206,174,22)" rx="2" ry="2" />
<text  x="1025.38" y="383.5" ></text>
</g>
<g >
<title>perf_mmap__push (3 samples, 0.03%)</title><rect x="158.1" y="565" width="0.4" height="15.0" fill="rgb(225,161,32)" rx="2" ry="2" />
<text  x="161.13" y="575.5" ></text>
</g>
<g >
<title>sysvec_call_function (1 samples, 0.01%)</title><rect x="421.6" y="597" width="0.1" height="15.0" fill="rgb(236,6,20)" rx="2" ry="2" />
<text  x="424.59" y="607.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="1012.7" y="469" width="0.2" height="15.0" fill="rgb(217,132,40)" rx="2" ry="2" />
<text  x="1015.68" y="479.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="122.8" y="421" width="0.3" height="15.0" fill="rgb(228,212,50)" rx="2" ry="2" />
<text  x="125.84" y="431.5" ></text>
</g>
<g >
<title>schedule_idle (32 samples, 0.30%)</title><rect x="1135.2" y="565" width="3.5" height="15.0" fill="rgb(205,29,26)" rx="2" ry="2" />
<text  x="1138.22" y="575.5" ></text>
</g>
<g >
<title>fscrypt_mergeable_bio_bh (1 samples, 0.01%)</title><rect x="20.0" y="357" width="0.1" height="15.0" fill="rgb(221,160,45)" rx="2" ry="2" />
<text  x="23.02" y="367.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 0.15%)</title><rect x="1066.1" y="453" width="1.7" height="15.0" fill="rgb(249,148,29)" rx="2" ry="2" />
<text  x="1069.05" y="463.5" ></text>
</g>
<g >
<title>common_interrupt (2 samples, 0.02%)</title><rect x="1106.9" y="501" width="0.2" height="15.0" fill="rgb(212,24,14)" rx="2" ry="2" />
<text  x="1109.90" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (42 samples, 0.39%)</title><rect x="430.3" y="581" width="4.6" height="15.0" fill="rgb(248,59,5)" rx="2" ry="2" />
<text  x="433.31" y="591.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.01%)</title><rect x="23.5" y="325" width="0.1" height="15.0" fill="rgb(220,200,47)" rx="2" ry="2" />
<text  x="26.51" y="335.5" ></text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.01%)</title><rect x="15.0" y="517" width="0.1" height="15.0" fill="rgb(242,197,6)" rx="2" ry="2" />
<text  x="18.01" y="527.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.01%)</title><rect x="928.2" y="373" width="0.1" height="15.0" fill="rgb(241,148,14)" rx="2" ry="2" />
<text  x="931.17" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.06%)</title><rect x="512.3" y="469" width="0.7" height="15.0" fill="rgb(250,76,4)" rx="2" ry="2" />
<text  x="515.32" y="479.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i32&gt;::eq (1 samples, 0.01%)</title><rect x="1013.1" y="437" width="0.1" height="15.0" fill="rgb(224,129,22)" rx="2" ry="2" />
<text  x="1016.12" y="447.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.02%)</title><rect x="14.9" y="565" width="0.2" height="15.0" fill="rgb(205,52,47)" rx="2" ry="2" />
<text  x="17.90" y="575.5" ></text>
</g>
<g >
<title>rmap_walk (25 samples, 0.23%)</title><rect x="16.5" y="341" width="2.8" height="15.0" fill="rgb(241,202,45)" rx="2" ry="2" />
<text  x="19.53" y="351.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (5 samples, 0.05%)</title><rect x="536.3" y="421" width="0.5" height="15.0" fill="rgb(237,3,29)" rx="2" ry="2" />
<text  x="539.28" y="431.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (1 samples, 0.01%)</title><rect x="23.5" y="341" width="0.1" height="15.0" fill="rgb(222,69,3)" rx="2" ry="2" />
<text  x="26.51" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (31 samples, 0.29%)</title><rect x="986.2" y="517" width="3.4" height="15.0" fill="rgb(248,147,29)" rx="2" ry="2" />
<text  x="989.22" y="527.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (4 samples, 0.04%)</title><rect x="1137.3" y="437" width="0.4" height="15.0" fill="rgb(252,113,52)" rx="2" ry="2" />
<text  x="1140.28" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="985.9" y="501" width="0.2" height="15.0" fill="rgb(218,115,14)" rx="2" ry="2" />
<text  x="988.89" y="511.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (2 samples, 0.02%)</title><rect x="985.9" y="533" width="0.2" height="15.0" fill="rgb(235,94,31)" rx="2" ry="2" />
<text  x="988.89" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.02%)</title><rect x="1062.2" y="517" width="0.3" height="15.0" fill="rgb(211,119,21)" rx="2" ry="2" />
<text  x="1065.24" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (15 samples, 0.14%)</title><rect x="1015.8" y="549" width="1.7" height="15.0" fill="rgb(218,163,41)" rx="2" ry="2" />
<text  x="1018.84" y="559.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.01%)</title><rect x="1023.7" y="277" width="0.1" height="15.0" fill="rgb(225,155,51)" rx="2" ry="2" />
<text  x="1026.68" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="1060.7" y="549" width="0.1" height="15.0" fill="rgb(212,120,9)" rx="2" ry="2" />
<text  x="1063.72" y="559.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (2 samples, 0.02%)</title><rect x="1105.3" y="549" width="0.2" height="15.0" fill="rgb(223,18,28)" rx="2" ry="2" />
<text  x="1108.26" y="559.5" ></text>
</g>
<g >
<title>vfs_iter_write (3 samples, 0.03%)</title><rect x="158.1" y="373" width="0.4" height="15.0" fill="rgb(213,6,14)" rx="2" ry="2" />
<text  x="161.13" y="383.5" ></text>
</g>
<g >
<title>timer_clear_idle (1 samples, 0.01%)</title><rect x="69.9" y="549" width="0.1" height="15.0" fill="rgb(238,42,15)" rx="2" ry="2" />
<text  x="72.90" y="559.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="455.5" y="437" width="0.1" height="15.0" fill="rgb(235,72,47)" rx="2" ry="2" />
<text  x="458.47" y="447.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (1 samples, 0.01%)</title><rect x="14.5" y="501" width="0.1" height="15.0" fill="rgb(215,51,27)" rx="2" ry="2" />
<text  x="17.47" y="511.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.01%)</title><rect x="135.7" y="373" width="0.1" height="15.0" fill="rgb(207,144,21)" rx="2" ry="2" />
<text  x="138.69" y="383.5" ></text>
</g>
<g >
<title>menu_update (3 samples, 0.03%)</title><rect x="1166.5" y="453" width="0.3" height="15.0" fill="rgb(207,150,0)" rx="2" ry="2" />
<text  x="1169.47" y="463.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.01%)</title><rect x="23.1" y="405" width="0.1" height="15.0" fill="rgb(236,87,0)" rx="2" ry="2" />
<text  x="26.07" y="415.5" ></text>
</g>
<g >
<title>__inc_node_page_state (1 samples, 0.01%)</title><rect x="1061.9" y="261" width="0.1" height="15.0" fill="rgb(232,162,40)" rx="2" ry="2" />
<text  x="1064.91" y="271.5" ></text>
</g>
<g >
<title>pick_next_task_fair (29 samples, 0.27%)</title><rect x="1135.2" y="533" width="3.2" height="15.0" fill="rgb(223,13,49)" rx="2" ry="2" />
<text  x="1138.22" y="543.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.01%)</title><rect x="158.6" y="565" width="0.1" height="15.0" fill="rgb(221,193,26)" rx="2" ry="2" />
<text  x="161.56" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (126 samples, 1.16%)</title><rect x="846.2" y="501" width="13.7" height="15.0" fill="rgb(219,79,34)" rx="2" ry="2" />
<text  x="849.15" y="511.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.01%)</title><rect x="158.3" y="229" width="0.2" height="15.0" fill="rgb(214,186,43)" rx="2" ry="2" />
<text  x="161.34" y="239.5" ></text>
</g>
<g >
<title>path_openat (2 samples, 0.02%)</title><rect x="14.6" y="549" width="0.2" height="15.0" fill="rgb(234,111,27)" rx="2" ry="2" />
<text  x="17.57" y="559.5" ></text>
</g>
<g >
<title>start_secondary (482 samples, 4.45%)</title><rect x="21.5" y="613" width="52.5" height="15.0" fill="rgb(226,90,36)" rx="2" ry="2" />
<text  x="24.55" y="623.5" >start..</text>
</g>
<g >
<title>tick_nohz_next_event (17 samples, 0.16%)</title><rect x="123.5" y="437" width="1.8" height="15.0" fill="rgb(248,175,24)" rx="2" ry="2" />
<text  x="126.49" y="447.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (13 samples, 0.12%)</title><rect x="617.8" y="565" width="1.4" height="15.0" fill="rgb(206,174,12)" rx="2" ry="2" />
<text  x="620.75" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (61 samples, 0.56%)</title><rect x="524.6" y="485" width="6.7" height="15.0" fill="rgb(252,11,44)" rx="2" ry="2" />
<text  x="527.63" y="495.5" ></text>
</g>
<g >
<title>event_function_call (1 samples, 0.01%)</title><rect x="158.5" y="517" width="0.1" height="15.0" fill="rgb(232,206,33)" rx="2" ry="2" />
<text  x="161.45" y="527.5" ></text>
</g>
<g >
<title>handle_irq_event (7 samples, 0.06%)</title><rect x="22.0" y="453" width="0.7" height="15.0" fill="rgb(238,96,20)" rx="2" ry="2" />
<text  x="24.98" y="463.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="1106.9" y="485" width="0.2" height="15.0" fill="rgb(254,122,7)" rx="2" ry="2" />
<text  x="1109.90" y="495.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (167 samples, 1.54%)</title><rect x="169.8" y="597" width="18.2" height="15.0" fill="rgb(222,39,14)" rx="2" ry="2" />
<text  x="172.78" y="607.5" ></text>
</g>
<g >
<title>do_user_addr_fault (34 samples, 0.31%)</title><rect x="1020.6" y="485" width="3.7" height="15.0" fill="rgb(209,125,35)" rx="2" ry="2" />
<text  x="1023.64" y="495.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (1 samples, 0.01%)</title><rect x="1061.8" y="277" width="0.1" height="15.0" fill="rgb(246,166,13)" rx="2" ry="2" />
<text  x="1064.81" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.05%)</title><rect x="1015.1" y="517" width="0.5" height="15.0" fill="rgb(245,47,48)" rx="2" ry="2" />
<text  x="1018.08" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::truncate::{{closure}} (2 samples, 0.02%)</title><rect x="1024.6" y="501" width="0.2" height="15.0" fill="rgb(254,219,15)" rx="2" ry="2" />
<text  x="1027.56" y="511.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (2 samples, 0.02%)</title><rect x="1011.8" y="469" width="0.2" height="15.0" fill="rgb(221,54,4)" rx="2" ry="2" />
<text  x="1014.81" y="479.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="1011.4" y="453" width="0.2" height="15.0" fill="rgb(243,77,17)" rx="2" ry="2" />
<text  x="1014.38" y="463.5" ></text>
</g>
<g >
<title>cpumask_next_and (3 samples, 0.03%)</title><rect x="141.6" y="405" width="0.3" height="15.0" fill="rgb(224,59,28)" rx="2" ry="2" />
<text  x="144.57" y="415.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.01%)</title><rect x="23.6" y="421" width="0.1" height="15.0" fill="rgb(208,111,7)" rx="2" ry="2" />
<text  x="26.61" y="431.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.03%)</title><rect x="1050.7" y="517" width="0.3" height="15.0" fill="rgb(222,10,0)" rx="2" ry="2" />
<text  x="1053.70" y="527.5" ></text>
</g>
<g >
<title>ondemand_readahead (2 samples, 0.02%)</title><rect x="1061.3" y="309" width="0.2" height="15.0" fill="rgb(213,3,15)" rx="2" ry="2" />
<text  x="1064.26" y="319.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (4 samples, 0.04%)</title><rect x="1067.8" y="453" width="0.4" height="15.0" fill="rgb(249,75,44)" rx="2" ry="2" />
<text  x="1070.80" y="463.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.01%)</title><rect x="1021.8" y="245" width="0.1" height="15.0" fill="rgb(211,193,17)" rx="2" ry="2" />
<text  x="1024.83" y="255.5" ></text>
</g>
<g >
<title>generic_exec_single (15 samples, 0.14%)</title><rect x="1181.3" y="389" width="1.6" height="15.0" fill="rgb(254,87,39)" rx="2" ry="2" />
<text  x="1184.29" y="399.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="971.4" y="517" width="0.1" height="15.0" fill="rgb(227,223,12)" rx="2" ry="2" />
<text  x="974.40" y="527.5" ></text>
</g>
<g >
<title>do_writepages (49 samples, 0.45%)</title><rect x="16.2" y="453" width="5.3" height="15.0" fill="rgb(228,0,37)" rx="2" ry="2" />
<text  x="19.21" y="463.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.02%)</title><rect x="1009.3" y="469" width="0.2" height="15.0" fill="rgb(230,197,34)" rx="2" ry="2" />
<text  x="1012.31" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (3 samples, 0.03%)</title><rect x="1132.2" y="485" width="0.3" height="15.0" fill="rgb(222,63,4)" rx="2" ry="2" />
<text  x="1135.17" y="495.5" ></text>
</g>
<g >
<title>pagevec_lookup_range_tag (2 samples, 0.02%)</title><rect x="21.2" y="405" width="0.2" height="15.0" fill="rgb(221,187,35)" rx="2" ry="2" />
<text  x="24.22" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (24 samples, 0.22%)</title><rect x="483.1" y="501" width="2.6" height="15.0" fill="rgb(208,167,0)" rx="2" ry="2" />
<text  x="486.13" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (3 samples, 0.03%)</title><rect x="532.9" y="405" width="0.3" height="15.0" fill="rgb(231,26,33)" rx="2" ry="2" />
<text  x="535.91" y="415.5" ></text>
</g>
<g >
<title>all (10,834 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(214,96,13)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1059.4" y="549" width="0.1" height="15.0" fill="rgb(224,28,10)" rx="2" ry="2" />
<text  x="1062.41" y="559.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.01%)</title><rect x="646.1" y="501" width="0.1" height="15.0" fill="rgb(216,159,37)" rx="2" ry="2" />
<text  x="649.07" y="511.5" ></text>
</g>
<g >
<title>remote_function (63 samples, 0.58%)</title><rect x="151.3" y="373" width="6.8" height="15.0" fill="rgb(245,57,7)" rx="2" ry="2" />
<text  x="154.26" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="134.2" y="469" width="0.1" height="15.0" fill="rgb(223,126,22)" rx="2" ry="2" />
<text  x="137.16" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;usize,dashmap::util::SharedValue&lt;rustposix::interface::file::EmulatedFile&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (30 samples, 0.28%)</title><rect x="489.6" y="565" width="3.2" height="15.0" fill="rgb(211,24,53)" rx="2" ry="2" />
<text  x="492.56" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt_r (2 samples, 0.02%)</title><rect x="1024.6" y="517" width="0.2" height="15.0" fill="rgb(223,52,13)" rx="2" ry="2" />
<text  x="1027.56" y="527.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (78 samples, 0.72%)</title><rect x="637.7" y="517" width="8.5" height="15.0" fill="rgb(244,183,23)" rx="2" ry="2" />
<text  x="640.69" y="527.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (13 samples, 0.12%)</title><rect x="532.3" y="485" width="1.4" height="15.0" fill="rgb(212,135,41)" rx="2" ry="2" />
<text  x="535.25" y="495.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.02%)</title><rect x="1105.3" y="517" width="0.2" height="15.0" fill="rgb(237,124,2)" rx="2" ry="2" />
<text  x="1108.26" y="527.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.05%)</title><rect x="1066.4" y="293" width="0.5" height="15.0" fill="rgb(223,94,1)" rx="2" ry="2" />
<text  x="1069.38" y="303.5" ></text>
</g>
<g >
<title>block_invalidatepage (2 samples, 0.02%)</title><rect x="472.8" y="149" width="0.2" height="15.0" fill="rgb(209,138,47)" rx="2" ry="2" />
<text  x="475.79" y="159.5" ></text>
</g>
<g >
<title>workingset_age_nonresident (1 samples, 0.01%)</title><rect x="151.2" y="389" width="0.1" height="15.0" fill="rgb(229,170,25)" rx="2" ry="2" />
<text  x="154.16" y="399.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (5 samples, 0.05%)</title><rect x="165.9" y="613" width="0.5" height="15.0" fill="rgb(248,92,16)" rx="2" ry="2" />
<text  x="168.86" y="623.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.01%)</title><rect x="145.3" y="453" width="0.1" height="15.0" fill="rgb(213,28,29)" rx="2" ry="2" />
<text  x="148.27" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="533.1" y="389" width="0.1" height="15.0" fill="rgb(251,103,31)" rx="2" ry="2" />
<text  x="536.13" y="399.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (2 samples, 0.02%)</title><rect x="70.3" y="549" width="0.3" height="15.0" fill="rgb(205,146,31)" rx="2" ry="2" />
<text  x="73.34" y="559.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (2 samples, 0.02%)</title><rect x="132.5" y="501" width="0.2" height="15.0" fill="rgb(219,89,43)" rx="2" ry="2" />
<text  x="135.53" y="511.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u8 (4 samples, 0.04%)</title><rect x="1068.3" y="469" width="0.5" height="15.0" fill="rgb(253,202,20)" rx="2" ry="2" />
<text  x="1071.34" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="1176.1" y="437" width="0.2" height="15.0" fill="rgb(251,213,20)" rx="2" ry="2" />
<text  x="1179.06" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 0.58%)</title><rect x="151.3" y="309" width="6.8" height="15.0" fill="rgb(230,88,23)" rx="2" ry="2" />
<text  x="154.26" y="319.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (8 samples, 0.07%)</title><rect x="15.3" y="565" width="0.9" height="15.0" fill="rgb(220,65,11)" rx="2" ry="2" />
<text  x="18.34" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.06%)</title><rect x="1066.9" y="245" width="0.8" height="15.0" fill="rgb(221,157,47)" rx="2" ry="2" />
<text  x="1069.92" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (20 samples, 0.18%)</title><rect x="539.2" y="469" width="2.2" height="15.0" fill="rgb(233,131,36)" rx="2" ry="2" />
<text  x="542.22" y="479.5" ></text>
</g>
<g >
<title>alx_mask_msix (7 samples, 0.06%)</title><rect x="22.0" y="405" width="0.7" height="15.0" fill="rgb(216,94,47)" rx="2" ry="2" />
<text  x="24.98" y="415.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.06%)</title><rect x="617.1" y="533" width="0.7" height="15.0" fill="rgb(241,125,14)" rx="2" ry="2" />
<text  x="620.10" y="543.5" ></text>
</g>
<g >
<title>ext4_readahead (3 samples, 0.03%)</title><rect x="1021.9" y="277" width="0.4" height="15.0" fill="rgb(224,153,3)" rx="2" ry="2" />
<text  x="1024.94" y="287.5" ></text>
</g>
<g >
<title>filemap_fault (2 samples, 0.02%)</title><rect x="1061.3" y="341" width="0.2" height="15.0" fill="rgb(214,19,33)" rx="2" ry="2" />
<text  x="1064.26" y="351.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.01%)</title><rect x="1068.6" y="261" width="0.1" height="15.0" fill="rgb(238,134,20)" rx="2" ry="2" />
<text  x="1071.56" y="271.5" ></text>
</g>
<g >
<title>vfs_open (1 samples, 0.01%)</title><rect x="14.6" y="517" width="0.1" height="15.0" fill="rgb(247,181,36)" rx="2" ry="2" />
<text  x="17.57" y="527.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (15 samples, 0.14%)</title><rect x="149.1" y="517" width="1.6" height="15.0" fill="rgb(242,203,25)" rx="2" ry="2" />
<text  x="152.09" y="527.5" ></text>
</g>
<g >
<title>newidle_balance (29 samples, 0.27%)</title><rect x="1135.2" y="517" width="3.2" height="15.0" fill="rgb(251,58,45)" rx="2" ry="2" />
<text  x="1138.22" y="527.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get_mut (14 samples, 0.13%)</title><rect x="1014.3" y="581" width="1.5" height="15.0" fill="rgb(245,184,54)" rx="2" ry="2" />
<text  x="1017.32" y="591.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.01%)</title><rect x="971.4" y="469" width="0.1" height="15.0" fill="rgb(234,37,17)" rx="2" ry="2" />
<text  x="974.40" y="479.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.02%)</title><rect x="990.4" y="533" width="0.2" height="15.0" fill="rgb(234,16,33)" rx="2" ry="2" />
<text  x="993.36" y="543.5" ></text>
</g>
<g >
<title>scheduler_tick (4 samples, 0.04%)</title><rect x="78.9" y="293" width="0.5" height="15.0" fill="rgb(240,96,18)" rx="2" ry="2" />
<text  x="81.94" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.01%)</title><rect x="1139.4" y="549" width="0.1" height="15.0" fill="rgb(241,224,28)" rx="2" ry="2" />
<text  x="1142.35" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (37 samples, 0.34%)</title><rect x="121.3" y="453" width="4.0" height="15.0" fill="rgb(250,120,17)" rx="2" ry="2" />
<text  x="124.31" y="463.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u16 (4 samples, 0.04%)</title><rect x="1068.3" y="485" width="0.5" height="15.0" fill="rgb(219,129,42)" rx="2" ry="2" />
<text  x="1071.34" y="495.5" ></text>
</g>
<g >
<title>do_fault_around (2 samples, 0.02%)</title><rect x="551.1" y="405" width="0.2" height="15.0" fill="rgb(207,157,28)" rx="2" ry="2" />
<text  x="554.10" y="415.5" ></text>
</g>
<g >
<title>__brelse (1 samples, 0.01%)</title><rect x="20.7" y="277" width="0.1" height="15.0" fill="rgb(230,216,8)" rx="2" ry="2" />
<text  x="23.67" y="287.5" ></text>
</g>
<g >
<title>nohz_csd_func (15 samples, 0.14%)</title><rect x="1173.9" y="485" width="1.6" height="15.0" fill="rgb(227,40,26)" rx="2" ry="2" />
<text  x="1176.88" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="970.5" y="485" width="0.3" height="15.0" fill="rgb(252,39,45)" rx="2" ry="2" />
<text  x="973.53" y="495.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.01%)</title><rect x="971.4" y="341" width="0.1" height="15.0" fill="rgb(212,69,43)" rx="2" ry="2" />
<text  x="974.40" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (206 samples, 1.90%)</title><rect x="943.5" y="549" width="22.5" height="15.0" fill="rgb(214,103,40)" rx="2" ry="2" />
<text  x="946.52" y="559.5" >c..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="20.8" y="357" width="0.1" height="15.0" fill="rgb(230,45,12)" rx="2" ry="2" />
<text  x="23.78" y="367.5" ></text>
</g>
<g >
<title>process_timeout (1 samples, 0.01%)</title><rect x="80.9" y="309" width="0.1" height="15.0" fill="rgb(245,66,35)" rx="2" ry="2" />
<text  x="83.90" y="319.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 0.01%)</title><rect x="81.0" y="453" width="0.1" height="15.0" fill="rgb(240,185,37)" rx="2" ry="2" />
<text  x="84.01" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (168 samples, 1.55%)</title><rect x="403.3" y="613" width="18.3" height="15.0" fill="rgb(246,122,40)" rx="2" ry="2" />
<text  x="406.30" y="623.5" ></text>
</g>
<g >
<title>cpuidle_poll_time (1 samples, 0.01%)</title><rect x="113.0" y="437" width="0.1" height="15.0" fill="rgb(219,141,28)" rx="2" ry="2" />
<text  x="116.03" y="447.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="1068.0" y="309" width="0.2" height="15.0" fill="rgb(251,18,46)" rx="2" ry="2" />
<text  x="1071.01" y="319.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.01%)</title><rect x="135.7" y="421" width="0.1" height="15.0" fill="rgb(235,70,53)" rx="2" ry="2" />
<text  x="138.69" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.16%)</title><rect x="1009.5" y="437" width="1.9" height="15.0" fill="rgb(232,182,37)" rx="2" ry="2" />
<text  x="1012.53" y="447.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (57 samples, 0.53%)</title><rect x="990.4" y="549" width="6.2" height="15.0" fill="rgb(249,62,30)" rx="2" ry="2" />
<text  x="993.36" y="559.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.01%)</title><rect x="1024.7" y="261" width="0.1" height="15.0" fill="rgb(250,102,30)" rx="2" ry="2" />
<text  x="1027.66" y="271.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (6 samples, 0.06%)</title><rect x="188.0" y="613" width="0.6" height="15.0" fill="rgb(210,216,21)" rx="2" ry="2" />
<text  x="190.97" y="623.5" ></text>
</g>
<g >
<title>sel_ldr (8,685 samples, 80.16%)</title><rect x="158.7" y="645" width="945.9" height="15.0" fill="rgb(226,136,15)" rx="2" ry="2" />
<text  x="161.67" y="655.5" >sel_ldr</text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="1138.5" y="501" width="0.1" height="15.0" fill="rgb(229,35,7)" rx="2" ry="2" />
<text  x="1141.48" y="511.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (9 samples, 0.08%)</title><rect x="539.4" y="437" width="1.0" height="15.0" fill="rgb(212,190,27)" rx="2" ry="2" />
<text  x="542.44" y="447.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.01%)</title><rect x="472.5" y="357" width="0.1" height="15.0" fill="rgb(227,75,49)" rx="2" ry="2" />
<text  x="475.46" y="367.5" ></text>
</g>
<g >
<title>event_function (1 samples, 0.01%)</title><rect x="158.5" y="453" width="0.1" height="15.0" fill="rgb(242,29,50)" rx="2" ry="2" />
<text  x="161.45" y="463.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="23.6" y="405" width="0.1" height="15.0" fill="rgb(220,102,1)" rx="2" ry="2" />
<text  x="26.61" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.19%)</title><rect x="1063.0" y="197" width="2.3" height="15.0" fill="rgb(208,217,9)" rx="2" ry="2" />
<text  x="1066.00" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.19%)</title><rect x="1063.0" y="245" width="2.3" height="15.0" fill="rgb(219,115,36)" rx="2" ry="2" />
<text  x="1066.00" y="255.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (34 samples, 0.31%)</title><rect x="478.9" y="565" width="3.7" height="15.0" fill="rgb(253,41,52)" rx="2" ry="2" />
<text  x="481.88" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="472.2" y="533" width="0.4" height="15.0" fill="rgb(252,133,9)" rx="2" ry="2" />
<text  x="475.24" y="543.5" ></text>
</g>
<g >
<title>iput (4 samples, 0.04%)</title><rect x="472.6" y="453" width="0.4" height="15.0" fill="rgb(236,191,21)" rx="2" ry="2" />
<text  x="475.57" y="463.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34 samples, 0.31%)</title><rect x="1020.6" y="453" width="3.7" height="15.0" fill="rgb(236,99,37)" rx="2" ry="2" />
<text  x="1023.64" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="1068.4" y="277" width="0.3" height="15.0" fill="rgb(252,228,25)" rx="2" ry="2" />
<text  x="1071.45" y="287.5" ></text>
</g>
<g >
<title>__schedule (31 samples, 0.29%)</title><rect x="1135.2" y="549" width="3.4" height="15.0" fill="rgb(223,206,4)" rx="2" ry="2" />
<text  x="1138.22" y="559.5" ></text>
</g>
<g >
<title>menu_update (3 samples, 0.03%)</title><rect x="1131.0" y="517" width="0.3" height="15.0" fill="rgb(226,46,10)" rx="2" ry="2" />
<text  x="1133.97" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.06%)</title><rect x="1065.4" y="293" width="0.7" height="15.0" fill="rgb(218,49,20)" rx="2" ry="2" />
<text  x="1068.40" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (108 samples, 1.00%)</title><rect x="756.6" y="533" width="11.8" height="15.0" fill="rgb(250,131,41)" rx="2" ry="2" />
<text  x="759.62" y="543.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.02%)</title><rect x="546.7" y="549" width="0.3" height="15.0" fill="rgb(215,149,42)" rx="2" ry="2" />
<text  x="549.74" y="559.5" ></text>
</g>
<g >
<title>flush_tlb_func_remote (1 samples, 0.01%)</title><rect x="928.2" y="405" width="0.1" height="15.0" fill="rgb(236,51,29)" rx="2" ry="2" />
<text  x="931.17" y="415.5" ></text>
</g>
<g >
<title>enqueue_task (3 samples, 0.03%)</title><rect x="23.2" y="341" width="0.3" height="15.0" fill="rgb(252,68,18)" rx="2" ry="2" />
<text  x="26.18" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (28 samples, 0.26%)</title><rect x="453.3" y="485" width="3.0" height="15.0" fill="rgb(243,38,1)" rx="2" ry="2" />
<text  x="456.29" y="495.5" ></text>
</g>
<g >
<title>xa_load (1 samples, 0.01%)</title><rect x="1061.4" y="277" width="0.1" height="15.0" fill="rgb(249,83,13)" rx="2" ry="2" />
<text  x="1064.37" y="287.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.01%)</title><rect x="1023.7" y="261" width="0.1" height="15.0" fill="rgb(241,188,41)" rx="2" ry="2" />
<text  x="1026.68" y="271.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.36%)</title><rect x="966.3" y="533" width="4.2" height="15.0" fill="rgb(226,48,18)" rx="2" ry="2" />
<text  x="969.29" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="533.2" y="453" width="0.5" height="15.0" fill="rgb(218,3,42)" rx="2" ry="2" />
<text  x="536.23" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.04%)</title><rect x="1012.2" y="453" width="0.5" height="15.0" fill="rgb(245,70,43)" rx="2" ry="2" />
<text  x="1015.25" y="463.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.16%)</title><rect x="1009.5" y="453" width="1.9" height="15.0" fill="rgb(224,165,24)" rx="2" ry="2" />
<text  x="1012.53" y="463.5" ></text>
</g>
<g >
<title>llist_add_batch (5 samples, 0.05%)</title><rect x="1137.7" y="453" width="0.6" height="15.0" fill="rgb(218,97,19)" rx="2" ry="2" />
<text  x="1140.72" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::RefMut&lt;usize,rustposix::interface::file::EmulatedFile&gt;&gt; (2 samples, 0.02%)</title><rect x="985.9" y="581" width="0.2" height="15.0" fill="rgb(216,134,20)" rx="2" ry="2" />
<text  x="988.89" y="591.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.01%)</title><rect x="125.5" y="469" width="0.1" height="15.0" fill="rgb(207,125,48)" rx="2" ry="2" />
<text  x="128.45" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_idle_got_tick (1 samples, 0.01%)</title><rect x="117.1" y="469" width="0.1" height="15.0" fill="rgb(210,161,39)" rx="2" ry="2" />
<text  x="120.06" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (5 samples, 0.05%)</title><rect x="1017.6" y="517" width="0.5" height="15.0" fill="rgb(243,76,34)" rx="2" ry="2" />
<text  x="1020.59" y="527.5" ></text>
</g>
<g >
<title>dispatcher (10 samples, 0.09%)</title><rect x="166.4" y="613" width="1.1" height="15.0" fill="rgb(219,150,31)" rx="2" ry="2" />
<text  x="169.40" y="623.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (1 samples, 0.01%)</title><rect x="1130.4" y="517" width="0.1" height="15.0" fill="rgb(231,15,8)" rx="2" ry="2" />
<text  x="1133.42" y="527.5" ></text>
</g>
<g >
<title>cpuidle_select (54 samples, 0.50%)</title><rect x="1164.5" y="485" width="5.9" height="15.0" fill="rgb(206,11,5)" rx="2" ry="2" />
<text  x="1167.51" y="495.5" ></text>
</g>
<g >
<title>run_rebalance_domains (6 samples, 0.06%)</title><rect x="80.3" y="357" width="0.6" height="15.0" fill="rgb(213,8,8)" rx="2" ry="2" />
<text  x="83.25" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="1014.3" y="501" width="0.1" height="15.0" fill="rgb(243,109,16)" rx="2" ry="2" />
<text  x="1017.32" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.06%)</title><rect x="1067.0" y="213" width="0.7" height="15.0" fill="rgb(214,171,33)" rx="2" ry="2" />
<text  x="1070.03" y="223.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="971.4" y="453" width="0.1" height="15.0" fill="rgb(210,195,47)" rx="2" ry="2" />
<text  x="974.40" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt; (28 samples, 0.26%)</title><rect x="495.4" y="581" width="3.1" height="15.0" fill="rgb(222,159,3)" rx="2" ry="2" />
<text  x="498.44" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.06%)</title><rect x="1058.3" y="517" width="0.7" height="15.0" fill="rgb(227,28,48)" rx="2" ry="2" />
<text  x="1061.32" y="527.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="500.0" y="517" width="0.1" height="15.0" fill="rgb(244,58,37)" rx="2" ry="2" />
<text  x="503.01" y="527.5" ></text>
</g>
<g >
<title>notify_change (2 samples, 0.02%)</title><rect x="1024.6" y="341" width="0.2" height="15.0" fill="rgb(223,68,48)" rx="2" ry="2" />
<text  x="1027.56" y="351.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (1 samples, 0.01%)</title><rect x="1049.0" y="517" width="0.1" height="15.0" fill="rgb(248,120,8)" rx="2" ry="2" />
<text  x="1051.95" y="527.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.01%)</title><rect x="158.3" y="261" width="0.2" height="15.0" fill="rgb(226,117,34)" rx="2" ry="2" />
<text  x="161.34" y="271.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (227 samples, 2.10%)</title><rect x="989.6" y="581" width="24.7" height="15.0" fill="rgb(214,36,28)" rx="2" ry="2" />
<text  x="992.59" y="591.5" >d..</text>
</g>
<g >
<title>tick_program_event (1 samples, 0.01%)</title><rect x="1170.6" y="405" width="0.1" height="15.0" fill="rgb(242,113,46)" rx="2" ry="2" />
<text  x="1173.61" y="415.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (1 samples, 0.01%)</title><rect x="23.0" y="357" width="0.1" height="15.0" fill="rgb(248,16,40)" rx="2" ry="2" />
<text  x="25.96" y="367.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_write_shard (4 samples, 0.04%)</title><rect x="1014.3" y="549" width="0.5" height="15.0" fill="rgb(232,89,31)" rx="2" ry="2" />
<text  x="1017.32" y="559.5" ></text>
</g>
<g >
<title>pick_next_task_fair (17 samples, 0.16%)</title><rect x="71.0" y="533" width="1.8" height="15.0" fill="rgb(234,142,39)" rx="2" ry="2" />
<text  x="73.99" y="543.5" ></text>
</g>
<g >
<title>ktime_get (6 samples, 0.06%)</title><rect x="1185.5" y="485" width="0.7" height="15.0" fill="rgb(210,171,30)" rx="2" ry="2" />
<text  x="1188.53" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.01%)</title><rect x="14.8" y="597" width="0.1" height="15.0" fill="rgb(208,183,2)" rx="2" ry="2" />
<text  x="17.79" y="607.5" ></text>
</g>
<g >
<title>__do_fault (2 samples, 0.02%)</title><rect x="1061.3" y="373" width="0.2" height="15.0" fill="rgb(224,225,47)" rx="2" ry="2" />
<text  x="1064.26" y="383.5" ></text>
</g>
<g >
<title>schedule_idle (91 samples, 0.84%)</title><rect x="1175.6" y="501" width="9.9" height="15.0" fill="rgb(253,181,12)" rx="2" ry="2" />
<text  x="1178.62" y="511.5" ></text>
</g>
<g >
<title>__ext4_journal_get_create_access (1 samples, 0.01%)</title><rect x="20.7" y="309" width="0.1" height="15.0" fill="rgb(248,154,54)" rx="2" ry="2" />
<text  x="23.67" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.01%)</title><rect x="158.6" y="597" width="0.1" height="15.0" fill="rgb(219,57,41)" rx="2" ry="2" />
<text  x="161.56" y="607.5" ></text>
</g>
<g >
<title>load_balance (3 samples, 0.03%)</title><rect x="80.3" y="325" width="0.3" height="15.0" fill="rgb(250,164,50)" rx="2" ry="2" />
<text  x="83.25" y="335.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (2 samples, 0.02%)</title><rect x="456.3" y="501" width="0.3" height="15.0" fill="rgb(208,229,10)" rx="2" ry="2" />
<text  x="459.34" y="511.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="1062.2" y="533" width="0.3" height="15.0" fill="rgb(252,12,50)" rx="2" ry="2" />
<text  x="1065.24" y="543.5" ></text>
</g>
<g >
<title>kick_ilb (39 samples, 0.36%)</title><rect x="141.0" y="421" width="4.3" height="15.0" fill="rgb(254,108,26)" rx="2" ry="2" />
<text  x="144.03" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.04%)</title><rect x="135.3" y="437" width="0.4" height="15.0" fill="rgb(245,33,54)" rx="2" ry="2" />
<text  x="138.25" y="447.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.01%)</title><rect x="20.8" y="245" width="0.1" height="15.0" fill="rgb(231,202,28)" rx="2" ry="2" />
<text  x="23.78" y="255.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="1015.5" y="469" width="0.1" height="15.0" fill="rgb(238,118,38)" rx="2" ry="2" />
<text  x="1018.52" y="479.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (402 samples, 3.71%)</title><rect x="498.5" y="581" width="43.8" height="15.0" fill="rgb(228,126,37)" rx="2" ry="2" />
<text  x="501.49" y="591.5" >dash..</text>
</g>
<g >
<title>sched_clock_cpu (6 samples, 0.06%)</title><rect x="115.5" y="453" width="0.7" height="15.0" fill="rgb(254,5,47)" rx="2" ry="2" />
<text  x="118.54" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.06%)</title><rect x="617.1" y="501" width="0.7" height="15.0" fill="rgb(222,192,22)" rx="2" ry="2" />
<text  x="620.10" y="511.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (2 samples, 0.02%)</title><rect x="1061.3" y="293" width="0.2" height="15.0" fill="rgb(230,208,44)" rx="2" ry="2" />
<text  x="1064.26" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.01%)</title><rect x="1021.6" y="261" width="0.1" height="15.0" fill="rgb(205,6,5)" rx="2" ry="2" />
<text  x="1024.62" y="271.5" ></text>
</g>
<g >
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="158.1" y="245" width="0.2" height="15.0" fill="rgb(253,106,17)" rx="2" ry="2" />
<text  x="161.13" y="255.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.01%)</title><rect x="134.2" y="373" width="0.1" height="15.0" fill="rgb(234,53,21)" rx="2" ry="2" />
<text  x="137.16" y="383.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (30 samples, 0.28%)</title><rect x="1042.1" y="565" width="3.3" height="15.0" fill="rgb(208,40,7)" rx="2" ry="2" />
<text  x="1045.09" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.04%)</title><rect x="1068.3" y="293" width="0.5" height="15.0" fill="rgb(250,229,21)" rx="2" ry="2" />
<text  x="1071.34" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (93 samples, 0.86%)</title><rect x="971.5" y="533" width="10.1" height="15.0" fill="rgb(244,200,26)" rx="2" ry="2" />
<text  x="974.51" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.16%)</title><rect x="1009.5" y="421" width="1.9" height="15.0" fill="rgb(228,104,54)" rx="2" ry="2" />
<text  x="1012.53" y="431.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="1012.0" y="469" width="0.7" height="15.0" fill="rgb(217,71,10)" rx="2" ry="2" />
<text  x="1015.03" y="479.5" ></text>
</g>
<g >
<title>cpu_startup_entry (458 samples, 4.23%)</title><rect x="1139.9" y="533" width="49.9" height="15.0" fill="rgb(226,91,22)" rx="2" ry="2" />
<text  x="1142.90" y="543.5" >cpu_s..</text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.01%)</title><rect x="1061.7" y="245" width="0.1" height="15.0" fill="rgb(233,18,42)" rx="2" ry="2" />
<text  x="1064.70" y="255.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (64 samples, 0.59%)</title><rect x="1051.0" y="549" width="7.0" height="15.0" fill="rgb(214,15,53)" rx="2" ry="2" />
<text  x="1054.02" y="559.5" ></text>
</g>
<g >
<title>sched_clock_cpu (6 samples, 0.06%)</title><rect x="145.4" y="453" width="0.6" height="15.0" fill="rgb(209,47,16)" rx="2" ry="2" />
<text  x="148.38" y="463.5" ></text>
</g>
<g >
<title>kick_ilb (7 samples, 0.06%)</title><rect x="72.0" y="485" width="0.7" height="15.0" fill="rgb(226,120,4)" rx="2" ry="2" />
<text  x="74.97" y="495.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="1001.5" y="485" width="0.1" height="15.0" fill="rgb(219,202,4)" rx="2" ry="2" />
<text  x="1004.47" y="495.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (3 samples, 0.03%)</title><rect x="1014.4" y="533" width="0.4" height="15.0" fill="rgb(236,108,27)" rx="2" ry="2" />
<text  x="1017.43" y="543.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (7 samples, 0.06%)</title><rect x="540.6" y="421" width="0.8" height="15.0" fill="rgb(215,3,31)" rx="2" ry="2" />
<text  x="543.64" y="431.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="500.7" y="469" width="0.1" height="15.0" fill="rgb(221,40,35)" rx="2" ry="2" />
<text  x="503.67" y="479.5" ></text>
</g>
<g >
<title>filemap_fault (15 samples, 0.14%)</title><rect x="1020.7" y="357" width="1.7" height="15.0" fill="rgb(228,226,7)" rx="2" ry="2" />
<text  x="1023.74" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (13 samples, 0.12%)</title><rect x="1056.3" y="501" width="1.4" height="15.0" fill="rgb(246,157,16)" rx="2" ry="2" />
<text  x="1059.25" y="511.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.01%)</title><rect x="472.4" y="325" width="0.1" height="15.0" fill="rgb(213,192,36)" rx="2" ry="2" />
<text  x="475.35" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (170 samples, 1.57%)</title><rect x="619.2" y="549" width="18.5" height="15.0" fill="rgb(206,77,9)" rx="2" ry="2" />
<text  x="622.17" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (40 samples, 0.37%)</title><rect x="443.2" y="485" width="4.3" height="15.0" fill="rgb(246,226,5)" rx="2" ry="2" />
<text  x="446.16" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (12 samples, 0.11%)</title><rect x="1131.5" y="517" width="1.3" height="15.0" fill="rgb(219,18,42)" rx="2" ry="2" />
<text  x="1134.51" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (8 samples, 0.07%)</title><rect x="1066.9" y="341" width="0.9" height="15.0" fill="rgb(240,123,42)" rx="2" ry="2" />
<text  x="1069.92" y="351.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="541.7" y="453" width="0.1" height="15.0" fill="rgb(247,201,23)" rx="2" ry="2" />
<text  x="544.73" y="463.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="551.2" y="309" width="0.1" height="15.0" fill="rgb(231,35,26)" rx="2" ry="2" />
<text  x="554.21" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="1009.9" y="405" width="0.3" height="15.0" fill="rgb(225,145,22)" rx="2" ry="2" />
<text  x="1012.85" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (14 samples, 0.13%)</title><rect x="1168.5" y="437" width="1.6" height="15.0" fill="rgb(228,136,33)" rx="2" ry="2" />
<text  x="1171.54" y="447.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.01%)</title><rect x="472.5" y="341" width="0.1" height="15.0" fill="rgb(232,68,39)" rx="2" ry="2" />
<text  x="475.46" y="351.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.06%)</title><rect x="1065.3" y="357" width="0.8" height="15.0" fill="rgb(244,216,23)" rx="2" ry="2" />
<text  x="1068.29" y="367.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.10%)</title><rect x="530.1" y="437" width="1.2" height="15.0" fill="rgb(207,90,14)" rx="2" ry="2" />
<text  x="533.08" y="447.5" ></text>
</g>
<g >
<title>do_idle (688 samples, 6.35%)</title><rect x="74.2" y="517" width="74.9" height="15.0" fill="rgb(240,102,0)" rx="2" ry="2" />
<text  x="77.15" y="527.5" >do_idle</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2 samples, 0.02%)</title><rect x="1102.2" y="581" width="0.2" height="15.0" fill="rgb(251,200,21)" rx="2" ry="2" />
<text  x="1105.21" y="591.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (1 samples, 0.01%)</title><rect x="466.6" y="373" width="0.1" height="15.0" fill="rgb(218,155,28)" rx="2" ry="2" />
<text  x="469.58" y="383.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (49 samples, 0.45%)</title><rect x="1045.4" y="565" width="5.3" height="15.0" fill="rgb(213,213,32)" rx="2" ry="2" />
<text  x="1048.36" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="1104.4" y="613" width="0.2" height="15.0" fill="rgb(236,229,45)" rx="2" ry="2" />
<text  x="1107.39" y="623.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (3 samples, 0.03%)</title><rect x="1050.7" y="533" width="0.3" height="15.0" fill="rgb(207,137,35)" rx="2" ry="2" />
<text  x="1053.70" y="543.5" ></text>
</g>
<g >
<title>allocate_slab (1 samples, 0.01%)</title><rect x="1022.7" y="213" width="0.1" height="15.0" fill="rgb(215,74,44)" rx="2" ry="2" />
<text  x="1025.70" y="223.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (63 samples, 0.58%)</title><rect x="151.3" y="581" width="6.8" height="15.0" fill="rgb(226,172,20)" rx="2" ry="2" />
<text  x="154.26" y="591.5" ></text>
</g>
<g >
<title>dec_zone_page_state (1 samples, 0.01%)</title><rect x="16.1" y="469" width="0.1" height="15.0" fill="rgb(214,132,29)" rx="2" ry="2" />
<text  x="19.10" y="479.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.01%)</title><rect x="827.4" y="357" width="0.1" height="15.0" fill="rgb(206,152,26)" rx="2" ry="2" />
<text  x="830.42" y="367.5" ></text>
</g>
<g >
<title>__do_munmap (3 samples, 0.03%)</title><rect x="472.2" y="469" width="0.4" height="15.0" fill="rgb(240,35,44)" rx="2" ry="2" />
<text  x="475.24" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (36 samples, 0.33%)</title><rect x="527.4" y="453" width="3.9" height="15.0" fill="rgb(242,116,8)" rx="2" ry="2" />
<text  x="530.35" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11 samples, 0.10%)</title><rect x="78.5" y="389" width="1.2" height="15.0" fill="rgb(223,46,4)" rx="2" ry="2" />
<text  x="81.51" y="399.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.02%)</title><rect x="442.5" y="533" width="0.2" height="15.0" fill="rgb(241,81,38)" rx="2" ry="2" />
<text  x="445.51" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="1105.3" y="629" width="0.4" height="15.0" fill="rgb(216,206,32)" rx="2" ry="2" />
<text  x="1108.26" y="639.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.06%)</title><rect x="1005.1" y="437" width="0.6" height="15.0" fill="rgb(205,108,31)" rx="2" ry="2" />
<text  x="1008.06" y="447.5" ></text>
</g>
<g >
<title>cpuidle_select (24 samples, 0.22%)</title><rect x="1130.3" y="549" width="2.6" height="15.0" fill="rgb(229,202,14)" rx="2" ry="2" />
<text  x="1133.31" y="559.5" ></text>
</g>
<g >
<title>nohz_csd_func (7 samples, 0.06%)</title><rect x="1134.3" y="549" width="0.8" height="15.0" fill="rgb(253,23,28)" rx="2" ry="2" />
<text  x="1137.34" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.02%)</title><rect x="546.7" y="565" width="0.3" height="15.0" fill="rgb(213,160,16)" rx="2" ry="2" />
<text  x="549.74" y="575.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (12 samples, 0.11%)</title><rect x="141.9" y="373" width="1.3" height="15.0" fill="rgb(231,16,22)" rx="2" ry="2" />
<text  x="144.90" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="1015.4" y="469" width="0.1" height="15.0" fill="rgb(206,153,45)" rx="2" ry="2" />
<text  x="1018.41" y="479.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (3 samples, 0.03%)</title><rect x="80.3" y="293" width="0.3" height="15.0" fill="rgb(221,216,40)" rx="2" ry="2" />
<text  x="83.25" y="303.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (98 samples, 0.90%)</title><rect x="500.1" y="533" width="10.7" height="15.0" fill="rgb(240,127,9)" rx="2" ry="2" />
<text  x="503.12" y="543.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (8 samples, 0.07%)</title><rect x="1066.9" y="405" width="0.9" height="15.0" fill="rgb(223,94,31)" rx="2" ry="2" />
<text  x="1069.92" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="1143.6" y="389" width="0.1" height="15.0" fill="rgb(211,139,33)" rx="2" ry="2" />
<text  x="1146.60" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (43 samples, 0.40%)</title><rect x="456.9" y="517" width="4.7" height="15.0" fill="rgb(222,167,14)" rx="2" ry="2" />
<text  x="459.88" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (170 samples, 1.57%)</title><rect x="523.8" y="533" width="18.5" height="15.0" fill="rgb(246,152,35)" rx="2" ry="2" />
<text  x="526.76" y="543.5" ></text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.03%)</title><rect x="1186.7" y="469" width="0.4" height="15.0" fill="rgb(244,77,39)" rx="2" ry="2" />
<text  x="1189.73" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="1062.9" y="213" width="0.1" height="15.0" fill="rgb(251,203,1)" rx="2" ry="2" />
<text  x="1065.89" y="223.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.01%)</title><rect x="1170.3" y="469" width="0.1" height="15.0" fill="rgb(230,201,45)" rx="2" ry="2" />
<text  x="1173.29" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (51 samples, 0.47%)</title><rect x="435.2" y="517" width="5.6" height="15.0" fill="rgb(226,198,11)" rx="2" ry="2" />
<text  x="438.21" y="527.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (5 samples, 0.05%)</title><rect x="168.5" y="613" width="0.5" height="15.0" fill="rgb(231,127,35)" rx="2" ry="2" />
<text  x="171.47" y="623.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="470.5" y="469" width="0.2" height="15.0" fill="rgb(247,122,40)" rx="2" ry="2" />
<text  x="473.50" y="479.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (6 samples, 0.06%)</title><rect x="1065.4" y="181" width="0.7" height="15.0" fill="rgb(214,32,31)" rx="2" ry="2" />
<text  x="1068.40" y="191.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="997.9" y="469" width="0.4" height="15.0" fill="rgb(225,155,13)" rx="2" ry="2" />
<text  x="1000.87" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="134.2" y="453" width="0.1" height="15.0" fill="rgb(206,202,16)" rx="2" ry="2" />
<text  x="137.16" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="1014.9" y="501" width="0.2" height="15.0" fill="rgb(231,109,5)" rx="2" ry="2" />
<text  x="1017.86" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.04%)</title><rect x="1021.0" y="261" width="0.4" height="15.0" fill="rgb(212,207,53)" rx="2" ry="2" />
<text  x="1023.96" y="271.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.06%)</title><rect x="454.8" y="437" width="0.7" height="15.0" fill="rgb(243,38,33)" rx="2" ry="2" />
<text  x="457.81" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="1102.1" y="517" width="0.1" height="15.0" fill="rgb(205,176,4)" rx="2" ry="2" />
<text  x="1105.10" y="527.5" ></text>
</g>
<g >
<title>llist_add_batch (8 samples, 0.07%)</title><rect x="1182.9" y="389" width="0.9" height="15.0" fill="rgb(227,182,42)" rx="2" ry="2" />
<text  x="1185.92" y="399.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="1060.4" y="453" width="0.1" height="15.0" fill="rgb(209,136,37)" rx="2" ry="2" />
<text  x="1063.39" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="1059.4" y="517" width="0.1" height="15.0" fill="rgb(226,203,25)" rx="2" ry="2" />
<text  x="1062.41" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.06%)</title><rect x="1065.4" y="245" width="0.7" height="15.0" fill="rgb(248,181,50)" rx="2" ry="2" />
<text  x="1068.40" y="255.5" ></text>
</g>
<g >
<title>tick_nohz_restart (2 samples, 0.02%)</title><rect x="73.7" y="549" width="0.2" height="15.0" fill="rgb(205,198,29)" rx="2" ry="2" />
<text  x="76.72" y="559.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="20.8" y="325" width="0.1" height="15.0" fill="rgb(243,166,37)" rx="2" ry="2" />
<text  x="23.78" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (10 samples, 0.09%)</title><rect x="1061.2" y="501" width="1.0" height="15.0" fill="rgb(238,126,11)" rx="2" ry="2" />
<text  x="1064.15" y="511.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (3 samples, 0.03%)</title><rect x="71.6" y="485" width="0.4" height="15.0" fill="rgb(233,5,30)" rx="2" ry="2" />
<text  x="74.65" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.11%)</title><rect x="512.0" y="485" width="1.3" height="15.0" fill="rgb(222,197,15)" rx="2" ry="2" />
<text  x="515.00" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.01%)</title><rect x="1170.6" y="437" width="0.1" height="15.0" fill="rgb(249,76,6)" rx="2" ry="2" />
<text  x="1173.61" y="447.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.01%)</title><rect x="148.9" y="469" width="0.1" height="15.0" fill="rgb(205,222,33)" rx="2" ry="2" />
<text  x="151.87" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (47 samples, 0.43%)</title><rect x="537.2" y="485" width="5.1" height="15.0" fill="rgb(229,163,1)" rx="2" ry="2" />
<text  x="540.16" y="495.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (7 samples, 0.06%)</title><rect x="1065.3" y="405" width="0.8" height="15.0" fill="rgb(212,169,12)" rx="2" ry="2" />
<text  x="1068.29" y="415.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (15 samples, 0.14%)</title><rect x="1171.5" y="485" width="1.6" height="15.0" fill="rgb(252,53,11)" rx="2" ry="2" />
<text  x="1174.48" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (24 samples, 0.22%)</title><rect x="78.4" y="437" width="2.6" height="15.0" fill="rgb(213,13,47)" rx="2" ry="2" />
<text  x="81.40" y="447.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.01%)</title><rect x="1170.9" y="501" width="0.1" height="15.0" fill="rgb(208,127,48)" rx="2" ry="2" />
<text  x="1173.94" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="1011.1" y="389" width="0.3" height="15.0" fill="rgb(242,2,16)" rx="2" ry="2" />
<text  x="1014.05" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (28 samples, 0.26%)</title><rect x="495.4" y="533" width="3.1" height="15.0" fill="rgb(223,44,38)" rx="2" ry="2" />
<text  x="498.44" y="543.5" ></text>
</g>
<g >
<title>cpuidle_enter (219 samples, 2.02%)</title><rect x="1106.5" y="549" width="23.8" height="15.0" fill="rgb(240,123,20)" rx="2" ry="2" />
<text  x="1109.46" y="559.5" >c..</text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="1060.0" y="469" width="0.1" height="15.0" fill="rgb(219,13,35)" rx="2" ry="2" />
<text  x="1062.95" y="479.5" ></text>
</g>
<g >
<title>follow_page_mask (1 samples, 0.01%)</title><rect x="151.2" y="485" width="0.1" height="15.0" fill="rgb(228,151,20)" rx="2" ry="2" />
<text  x="154.16" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.13%)</title><rect x="161.2" y="613" width="1.5" height="15.0" fill="rgb(243,142,46)" rx="2" ry="2" />
<text  x="164.18" y="623.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.03%)</title><rect x="1102.1" y="597" width="0.3" height="15.0" fill="rgb(232,150,29)" rx="2" ry="2" />
<text  x="1105.10" y="607.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.01%)</title><rect x="70.0" y="565" width="0.1" height="15.0" fill="rgb(229,115,13)" rx="2" ry="2" />
<text  x="73.01" y="575.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="1014.9" y="469" width="0.2" height="15.0" fill="rgb(211,139,38)" rx="2" ry="2" />
<text  x="1017.86" y="479.5" ></text>
</g>
<g >
<title>__evlist__enable (63 samples, 0.58%)</title><rect x="151.3" y="597" width="6.8" height="15.0" fill="rgb(220,21,43)" rx="2" ry="2" />
<text  x="154.26" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;usize,dashmap::util::SharedValue&lt;rustposix::interface::file::EmulatedFile&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="985.9" y="565" width="0.2" height="15.0" fill="rgb(210,104,38)" rx="2" ry="2" />
<text  x="988.89" y="575.5" ></text>
</g>
<g >
<title>pick_next_task_fair (100 samples, 0.92%)</title><rect x="134.4" y="469" width="10.9" height="15.0" fill="rgb(215,183,13)" rx="2" ry="2" />
<text  x="137.38" y="479.5" ></text>
</g>
<g >
<title>__vm_munmap (3 samples, 0.03%)</title><rect x="472.2" y="485" width="0.4" height="15.0" fill="rgb(221,206,38)" rx="2" ry="2" />
<text  x="475.24" y="495.5" ></text>
</g>
<g >
<title>__perf_event_enable (1 samples, 0.01%)</title><rect x="158.5" y="437" width="0.1" height="15.0" fill="rgb(217,208,28)" rx="2" ry="2" />
<text  x="161.45" y="447.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (7 samples, 0.06%)</title><rect x="80.3" y="389" width="0.7" height="15.0" fill="rgb(239,171,19)" rx="2" ry="2" />
<text  x="83.25" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="124.3" y="405" width="0.1" height="15.0" fill="rgb(228,53,45)" rx="2" ry="2" />
<text  x="127.25" y="415.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.01%)</title><rect x="134.2" y="277" width="0.1" height="15.0" fill="rgb(239,10,22)" rx="2" ry="2" />
<text  x="137.16" y="287.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (46 samples, 0.42%)</title><rect x="1004.0" y="485" width="5.0" height="15.0" fill="rgb(214,140,54)" rx="2" ry="2" />
<text  x="1006.97" y="495.5" ></text>
</g>
<g >
<title>_perf_ioctl (63 samples, 0.58%)</title><rect x="151.3" y="469" width="6.8" height="15.0" fill="rgb(244,15,18)" rx="2" ry="2" />
<text  x="154.26" y="479.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (40 samples, 0.37%)</title><rect x="1171.2" y="501" width="4.3" height="15.0" fill="rgb(245,100,48)" rx="2" ry="2" />
<text  x="1174.16" y="511.5" ></text>
</g>
<g >
<title>native_sched_clock (4 samples, 0.04%)</title><rect x="147.8" y="453" width="0.4" height="15.0" fill="rgb(216,154,17)" rx="2" ry="2" />
<text  x="150.78" y="463.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.01%)</title><rect x="1179.2" y="421" width="0.1" height="15.0" fill="rgb(226,120,16)" rx="2" ry="2" />
<text  x="1182.22" y="431.5" ></text>
</g>
<g >
<title>get_user_pages_remote (1 samples, 0.01%)</title><rect x="151.2" y="533" width="0.1" height="15.0" fill="rgb(248,141,41)" rx="2" ry="2" />
<text  x="154.16" y="543.5" ></text>
</g>
<g >
<title>find_get_pages_range_tag (2 samples, 0.02%)</title><rect x="21.2" y="389" width="0.2" height="15.0" fill="rgb(217,165,18)" rx="2" ry="2" />
<text  x="24.22" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (30 samples, 0.28%)</title><rect x="467.7" y="533" width="3.2" height="15.0" fill="rgb(230,94,50)" rx="2" ry="2" />
<text  x="470.67" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.03%)</title><rect x="1012.9" y="469" width="0.3" height="15.0" fill="rgb(248,147,47)" rx="2" ry="2" />
<text  x="1015.90" y="479.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (12 samples, 0.11%)</title><rect x="1181.6" y="373" width="1.3" height="15.0" fill="rgb(230,195,14)" rx="2" ry="2" />
<text  x="1184.61" y="383.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="73.5" y="517" width="0.1" height="15.0" fill="rgb(220,200,38)" rx="2" ry="2" />
<text  x="76.50" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.02%)</title><rect x="1060.4" y="469" width="0.2" height="15.0" fill="rgb(241,182,14)" rx="2" ry="2" />
<text  x="1063.39" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;usize,dashmap::util::SharedValue&lt;rustposix::safeposix::filesystem::Inode&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (24 samples, 0.22%)</title><rect x="492.8" y="565" width="2.6" height="15.0" fill="rgb(227,111,10)" rx="2" ry="2" />
<text  x="495.83" y="575.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (1 samples, 0.01%)</title><rect x="67.3" y="501" width="0.1" height="15.0" fill="rgb(241,7,16)" rx="2" ry="2" />
<text  x="70.29" y="511.5" ></text>
</g>
<g >
<title>__perf_event_enable (63 samples, 0.58%)</title><rect x="151.3" y="341" width="6.8" height="15.0" fill="rgb(216,11,31)" rx="2" ry="2" />
<text  x="154.26" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.05%)</title><rect x="1066.4" y="277" width="0.5" height="15.0" fill="rgb(236,36,14)" rx="2" ry="2" />
<text  x="1069.38" y="287.5" ></text>
</g>
<g >
<title>ovl_setattr (2 samples, 0.02%)</title><rect x="1024.6" y="373" width="0.2" height="15.0" fill="rgb(229,118,10)" rx="2" ry="2" />
<text  x="1027.56" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="1059.5" y="469" width="0.1" height="15.0" fill="rgb(237,179,46)" rx="2" ry="2" />
<text  x="1062.52" y="479.5" ></text>
</g>
<g >
<title>ext4_release_io_end (8 samples, 0.07%)</title><rect x="15.3" y="533" width="0.9" height="15.0" fill="rgb(231,4,45)" rx="2" ry="2" />
<text  x="18.34" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (6 samples, 0.06%)</title><rect x="617.1" y="517" width="0.7" height="15.0" fill="rgb(220,121,43)" rx="2" ry="2" />
<text  x="620.10" y="527.5" ></text>
</g>
<g >
<title>rmap_walk_file (25 samples, 0.23%)</title><rect x="16.5" y="325" width="2.8" height="15.0" fill="rgb(239,120,21)" rx="2" ry="2" />
<text  x="19.53" y="335.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.02%)</title><rect x="990.4" y="517" width="0.2" height="15.0" fill="rgb(234,28,39)" rx="2" ry="2" />
<text  x="993.36" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (30 samples, 0.28%)</title><rect x="1166.8" y="453" width="3.3" height="15.0" fill="rgb(251,155,33)" rx="2" ry="2" />
<text  x="1169.80" y="463.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.01%)</title><rect x="125.9" y="453" width="0.1" height="15.0" fill="rgb(232,71,2)" rx="2" ry="2" />
<text  x="128.89" y="463.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (30 samples, 0.28%)</title><rect x="1042.1" y="549" width="3.3" height="15.0" fill="rgb(247,68,40)" rx="2" ry="2" />
<text  x="1045.09" y="559.5" ></text>
</g>
<g >
<title>new_sync_write (3 samples, 0.03%)</title><rect x="158.1" y="405" width="0.4" height="15.0" fill="rgb(240,142,23)" rx="2" ry="2" />
<text  x="161.13" y="415.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="1164.2" y="469" width="0.1" height="15.0" fill="rgb(213,78,4)" rx="2" ry="2" />
<text  x="1167.19" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.04%)</title><rect x="1068.3" y="389" width="0.5" height="15.0" fill="rgb(212,100,49)" rx="2" ry="2" />
<text  x="1071.34" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (7 samples, 0.06%)</title><rect x="510.0" y="469" width="0.8" height="15.0" fill="rgb(253,25,46)" rx="2" ry="2" />
<text  x="513.04" y="479.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u32 (6 samples, 0.06%)</title><rect x="1066.3" y="405" width="0.6" height="15.0" fill="rgb(250,4,28)" rx="2" ry="2" />
<text  x="1069.27" y="415.5" ></text>
</g>
<g >
<title>menu_select (75 samples, 0.69%)</title><rect x="117.3" y="469" width="8.2" height="15.0" fill="rgb(235,200,8)" rx="2" ry="2" />
<text  x="120.28" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="1015.3" y="437" width="0.1" height="15.0" fill="rgb(252,221,26)" rx="2" ry="2" />
<text  x="1018.30" y="447.5" ></text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.01%)</title><rect x="158.5" y="501" width="0.1" height="15.0" fill="rgb(229,28,32)" rx="2" ry="2" />
<text  x="161.45" y="511.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.01%)</title><rect x="69.8" y="517" width="0.1" height="15.0" fill="rgb(251,161,36)" rx="2" ry="2" />
<text  x="72.80" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="1163.5" y="437" width="0.1" height="15.0" fill="rgb(228,227,33)" rx="2" ry="2" />
<text  x="1166.53" y="447.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6 samples, 0.06%)</title><rect x="23.1" y="501" width="0.6" height="15.0" fill="rgb(225,128,44)" rx="2" ry="2" />
<text  x="26.07" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (4 samples, 0.04%)</title><rect x="472.6" y="549" width="0.4" height="15.0" fill="rgb(222,157,34)" rx="2" ry="2" />
<text  x="475.57" y="559.5" ></text>
</g>
<g >
<title>do_nanosleep (1 samples, 0.01%)</title><rect x="14.5" y="565" width="0.1" height="15.0" fill="rgb(209,0,16)" rx="2" ry="2" />
<text  x="17.47" y="575.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="78.8" y="293" width="0.1" height="15.0" fill="rgb(222,113,11)" rx="2" ry="2" />
<text  x="81.84" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (5 samples, 0.05%)</title><rect x="522.7" y="437" width="0.5" height="15.0" fill="rgb(253,190,2)" rx="2" ry="2" />
<text  x="525.67" y="447.5" ></text>
</g>
<g >
<title>tick_sched_timer (7 samples, 0.06%)</title><rect x="78.6" y="341" width="0.8" height="15.0" fill="rgb(208,107,51)" rx="2" ry="2" />
<text  x="81.62" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (170 samples, 1.57%)</title><rect x="619.2" y="565" width="18.5" height="15.0" fill="rgb(244,2,40)" rx="2" ry="2" />
<text  x="622.17" y="575.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (4 samples, 0.04%)</title><rect x="472.6" y="181" width="0.4" height="15.0" fill="rgb(222,116,0)" rx="2" ry="2" />
<text  x="475.57" y="191.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.01%)</title><rect x="79.3" y="261" width="0.1" height="15.0" fill="rgb(253,70,17)" rx="2" ry="2" />
<text  x="82.27" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.03%)</title><rect x="551.0" y="469" width="0.3" height="15.0" fill="rgb(248,209,14)" rx="2" ry="2" />
<text  x="553.99" y="479.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.04%)</title><rect x="1068.3" y="405" width="0.5" height="15.0" fill="rgb(207,184,20)" rx="2" ry="2" />
<text  x="1071.34" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (63 samples, 0.58%)</title><rect x="151.3" y="517" width="6.8" height="15.0" fill="rgb(225,59,19)" rx="2" ry="2" />
<text  x="154.26" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="1101.3" y="581" width="0.2" height="15.0" fill="rgb(236,219,14)" rx="2" ry="2" />
<text  x="1104.34" y="591.5" ></text>
</g>
<g >
<title>do_truncate (2 samples, 0.02%)</title><rect x="1024.6" y="405" width="0.2" height="15.0" fill="rgb(244,2,40)" rx="2" ry="2" />
<text  x="1027.56" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (4 samples, 0.04%)</title><rect x="1059.0" y="485" width="0.4" height="15.0" fill="rgb(240,43,22)" rx="2" ry="2" />
<text  x="1061.97" y="495.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (4 samples, 0.04%)</title><rect x="1021.5" y="277" width="0.4" height="15.0" fill="rgb(230,218,52)" rx="2" ry="2" />
<text  x="1024.51" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="1143.6" y="325" width="0.1" height="15.0" fill="rgb(224,215,33)" rx="2" ry="2" />
<text  x="1146.60" y="335.5" ></text>
</g>
<g >
<title>_perf_event_enable (1 samples, 0.01%)</title><rect x="158.5" y="533" width="0.1" height="15.0" fill="rgb(235,148,39)" rx="2" ry="2" />
<text  x="161.45" y="543.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (1 samples, 0.01%)</title><rect x="1138.4" y="533" width="0.1" height="15.0" fill="rgb(252,70,44)" rx="2" ry="2" />
<text  x="1141.37" y="543.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="500.0" y="501" width="0.1" height="15.0" fill="rgb(219,147,54)" rx="2" ry="2" />
<text  x="503.01" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.01%)</title><rect x="121.5" y="437" width="0.1" height="15.0" fill="rgb(206,124,45)" rx="2" ry="2" />
<text  x="124.53" y="447.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (707 samples, 6.53%)</title><rect x="74.0" y="613" width="77.0" height="15.0" fill="rgb(205,137,15)" rx="2" ry="2" />
<text  x="77.04" y="623.5" >x86_64_s..</text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.01%)</title><rect x="67.7" y="533" width="0.1" height="15.0" fill="rgb(253,194,40)" rx="2" ry="2" />
<text  x="70.73" y="543.5" ></text>
</g>
<g >
<title>get_typical_interval (7 samples, 0.06%)</title><rect x="119.5" y="453" width="0.7" height="15.0" fill="rgb(241,127,39)" rx="2" ry="2" />
<text  x="122.46" y="463.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (463 samples, 4.27%)</title><rect x="75.6" y="501" width="50.4" height="15.0" fill="rgb(235,77,37)" rx="2" ry="2" />
<text  x="78.57" y="511.5" >cpuid..</text>
</g>
<g >
<title>housekeeping_cpumask (1 samples, 0.01%)</title><rect x="140.8" y="421" width="0.1" height="15.0" fill="rgb(247,130,29)" rx="2" ry="2" />
<text  x="143.81" y="431.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (15 samples, 0.14%)</title><rect x="459.9" y="453" width="1.7" height="15.0" fill="rgb(248,63,22)" rx="2" ry="2" />
<text  x="462.93" y="463.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.01%)</title><rect x="1107.1" y="453" width="0.1" height="15.0" fill="rgb(248,134,11)" rx="2" ry="2" />
<text  x="1110.11" y="463.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.01%)</title><rect x="135.7" y="405" width="0.1" height="15.0" fill="rgb(252,34,44)" rx="2" ry="2" />
<text  x="138.69" y="415.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="22.7" y="485" width="0.4" height="15.0" fill="rgb(231,22,53)" rx="2" ry="2" />
<text  x="25.74" y="495.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFileMap::write_to_map (16 samples, 0.15%)</title><rect x="1060.7" y="565" width="1.8" height="15.0" fill="rgb(230,150,30)" rx="2" ry="2" />
<text  x="1063.72" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (1 samples, 0.01%)</title><rect x="158.5" y="597" width="0.1" height="15.0" fill="rgb(225,72,29)" rx="2" ry="2" />
<text  x="161.45" y="607.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="1001.5" y="501" width="0.1" height="15.0" fill="rgb(219,92,12)" rx="2" ry="2" />
<text  x="1004.47" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (6 samples, 0.06%)</title><rect x="466.0" y="437" width="0.7" height="15.0" fill="rgb(224,228,32)" rx="2" ry="2" />
<text  x="469.03" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.02%)</title><rect x="540.4" y="437" width="0.2" height="15.0" fill="rgb(232,180,37)" rx="2" ry="2" />
<text  x="543.42" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (78 samples, 0.72%)</title><rect x="637.7" y="549" width="8.5" height="15.0" fill="rgb(212,116,14)" rx="2" ry="2" />
<text  x="640.69" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (6 samples, 0.06%)</title><rect x="73.0" y="565" width="0.6" height="15.0" fill="rgb(225,64,44)" rx="2" ry="2" />
<text  x="75.95" y="575.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.01%)</title><rect x="158.5" y="485" width="0.1" height="15.0" fill="rgb(216,150,33)" rx="2" ry="2" />
<text  x="161.45" y="495.5" ></text>
</g>
<g >
<title>rcu_idle_enter (3 samples, 0.03%)</title><rect x="113.9" y="453" width="0.3" height="15.0" fill="rgb(212,12,38)" rx="2" ry="2" />
<text  x="116.91" y="463.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (5 samples, 0.05%)</title><rect x="1067.1" y="133" width="0.6" height="15.0" fill="rgb(233,66,11)" rx="2" ry="2" />
<text  x="1070.14" y="143.5" ></text>
</g>
<g >
<title>wake_up_process (3 samples, 0.03%)</title><rect x="23.2" y="389" width="0.3" height="15.0" fill="rgb(205,21,5)" rx="2" ry="2" />
<text  x="26.18" y="399.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="20.8" y="261" width="0.1" height="15.0" fill="rgb(209,67,16)" rx="2" ry="2" />
<text  x="23.78" y="271.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (108 samples, 1.00%)</title><rect x="1068.8" y="613" width="11.7" height="15.0" fill="rgb(247,190,24)" rx="2" ry="2" />
<text  x="1071.78" y="623.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (22 samples, 0.20%)</title><rect x="16.9" y="277" width="2.4" height="15.0" fill="rgb(229,65,13)" rx="2" ry="2" />
<text  x="19.86" y="287.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (4 samples, 0.04%)</title><rect x="1068.3" y="453" width="0.5" height="15.0" fill="rgb(231,160,27)" rx="2" ry="2" />
<text  x="1071.34" y="463.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="1060.0" y="453" width="0.1" height="15.0" fill="rgb(210,142,9)" rx="2" ry="2" />
<text  x="1062.95" y="463.5" ></text>
</g>
<g >
<title>jbd2_journal_get_create_access (1 samples, 0.01%)</title><rect x="20.7" y="293" width="0.1" height="15.0" fill="rgb(222,206,26)" rx="2" ry="2" />
<text  x="23.67" y="303.5" ></text>
</g>
<g >
<title>show_interrupts (1 samples, 0.01%)</title><rect x="15.0" y="501" width="0.1" height="15.0" fill="rgb(250,165,5)" rx="2" ry="2" />
<text  x="18.01" y="511.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="189.3" y="597" width="0.1" height="15.0" fill="rgb(243,133,18)" rx="2" ry="2" />
<text  x="192.28" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (25 samples, 0.23%)</title><rect x="547.0" y="517" width="2.7" height="15.0" fill="rgb(209,152,44)" rx="2" ry="2" />
<text  x="549.96" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="1015.4" y="453" width="0.1" height="15.0" fill="rgb(234,17,16)" rx="2" ry="2" />
<text  x="1018.41" y="463.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="1143.6" y="341" width="0.1" height="15.0" fill="rgb(212,82,13)" rx="2" ry="2" />
<text  x="1146.60" y="351.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i32&gt;::eq (1 samples, 0.01%)</title><rect x="539.3" y="437" width="0.1" height="15.0" fill="rgb(234,85,18)" rx="2" ry="2" />
<text  x="542.33" y="447.5" ></text>
</g>
<g >
<title>timekeeping_max_deferment (1 samples, 0.01%)</title><rect x="125.2" y="421" width="0.1" height="15.0" fill="rgb(252,9,10)" rx="2" ry="2" />
<text  x="128.23" y="431.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.01%)</title><rect x="1011.6" y="501" width="0.1" height="15.0" fill="rgb(214,9,39)" rx="2" ry="2" />
<text  x="1014.59" y="511.5" ></text>
</g>
<g >
<title>ovl_write_iter (3 samples, 0.03%)</title><rect x="158.1" y="389" width="0.4" height="15.0" fill="rgb(215,201,10)" rx="2" ry="2" />
<text  x="161.13" y="399.5" ></text>
</g>
<g >
<title>perf_poll (1 samples, 0.01%)</title><rect x="158.6" y="549" width="0.1" height="15.0" fill="rgb(248,196,33)" rx="2" ry="2" />
<text  x="161.56" y="559.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (2 samples, 0.02%)</title><rect x="72.2" y="437" width="0.2" height="15.0" fill="rgb(226,118,19)" rx="2" ry="2" />
<text  x="75.19" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.19%)</title><rect x="1063.0" y="229" width="2.3" height="15.0" fill="rgb(228,220,15)" rx="2" ry="2" />
<text  x="1066.00" y="239.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="1068.7" y="261" width="0.1" height="15.0" fill="rgb(244,106,39)" rx="2" ry="2" />
<text  x="1071.67" y="271.5" ></text>
</g>
<g >
<title>core::cmp::min (3 samples, 0.03%)</title><rect x="1025.8" y="565" width="0.3" height="15.0" fill="rgb(205,90,6)" rx="2" ry="2" />
<text  x="1028.75" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (38 samples, 0.35%)</title><rect x="966.3" y="485" width="4.1" height="15.0" fill="rgb(254,216,4)" rx="2" ry="2" />
<text  x="969.29" y="495.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (8 samples, 0.07%)</title><rect x="1169.2" y="405" width="0.9" height="15.0" fill="rgb(239,214,3)" rx="2" ry="2" />
<text  x="1172.20" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (24 samples, 0.22%)</title><rect x="492.8" y="517" width="2.6" height="15.0" fill="rgb(230,211,26)" rx="2" ry="2" />
<text  x="495.83" y="527.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.01%)</title><rect x="1138.3" y="485" width="0.1" height="15.0" fill="rgb(225,64,39)" rx="2" ry="2" />
<text  x="1141.26" y="495.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.01%)</title><rect x="1066.1" y="437" width="0.1" height="15.0" fill="rgb(214,193,52)" rx="2" ry="2" />
<text  x="1069.05" y="447.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="1107.1" y="437" width="0.1" height="15.0" fill="rgb(238,58,30)" rx="2" ry="2" />
<text  x="1110.11" y="447.5" ></text>
</g>
<g >
<title>__sysvec_call_function (1 samples, 0.01%)</title><rect x="421.6" y="581" width="0.1" height="15.0" fill="rgb(244,55,34)" rx="2" ry="2" />
<text  x="424.59" y="591.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (11 samples, 0.10%)</title><rect x="1061.0" y="533" width="1.2" height="15.0" fill="rgb(250,120,34)" rx="2" ry="2" />
<text  x="1064.04" y="543.5" ></text>
</g>
<g >
<title>handle_pte_fault (33 samples, 0.30%)</title><rect x="1020.7" y="437" width="3.6" height="15.0" fill="rgb(226,205,25)" rx="2" ry="2" />
<text  x="1023.74" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (7 samples, 0.06%)</title><rect x="160.4" y="613" width="0.8" height="15.0" fill="rgb(250,96,17)" rx="2" ry="2" />
<text  x="163.41" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::log_metadata (99 samples, 0.91%)</title><rect x="1058.0" y="581" width="10.8" height="15.0" fill="rgb(213,5,6)" rx="2" ry="2" />
<text  x="1060.99" y="591.5" ></text>
</g>
<g >
<title>cpu_startup_entry (707 samples, 6.53%)</title><rect x="74.0" y="533" width="77.0" height="15.0" fill="rgb(215,118,20)" rx="2" ry="2" />
<text  x="77.04" y="543.5" >cpu_star..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.07%)</title><rect x="519.4" y="437" width="0.9" height="15.0" fill="rgb(249,225,54)" rx="2" ry="2" />
<text  x="522.40" y="447.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="1138.9" y="549" width="0.1" height="15.0" fill="rgb(209,218,9)" rx="2" ry="2" />
<text  x="1141.92" y="559.5" ></text>
</g>
<g >
<title>record__mmap_read_all (3 samples, 0.03%)</title><rect x="158.1" y="597" width="0.4" height="15.0" fill="rgb(241,103,34)" rx="2" ry="2" />
<text  x="161.13" y="607.5" ></text>
</g>
<g >
<title>std::fs::remove_file (4 samples, 0.04%)</title><rect x="472.6" y="565" width="0.4" height="15.0" fill="rgb(247,109,7)" rx="2" ry="2" />
<text  x="475.57" y="575.5" ></text>
</g>
<g >
<title>cpumask_next (2 samples, 0.02%)</title><rect x="140.0" y="405" width="0.3" height="15.0" fill="rgb(240,111,3)" rx="2" ry="2" />
<text  x="143.05" y="415.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.01%)</title><rect x="1170.6" y="453" width="0.1" height="15.0" fill="rgb(221,63,1)" rx="2" ry="2" />
<text  x="1173.61" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (42 samples, 0.39%)</title><rect x="513.3" y="485" width="4.6" height="15.0" fill="rgb(217,163,9)" rx="2" ry="2" />
<text  x="516.30" y="495.5" ></text>
</g>
<g >
<title>xas_clear_mark (1 samples, 0.01%)</title><rect x="20.2" y="357" width="0.1" height="15.0" fill="rgb(249,76,19)" rx="2" ry="2" />
<text  x="23.24" y="367.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (220 samples, 2.03%)</title><rect x="593.1" y="549" width="24.0" height="15.0" fill="rgb(212,47,16)" rx="2" ry="2" />
<text  x="596.14" y="559.5" >c..</text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (3 samples, 0.03%)</title><rect x="79.8" y="405" width="0.3" height="15.0" fill="rgb(241,130,51)" rx="2" ry="2" />
<text  x="82.82" y="415.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="535.2" y="405" width="0.3" height="15.0" fill="rgb(234,95,17)" rx="2" ry="2" />
<text  x="538.19" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;usize,rustposix::safeposix::filesystem::Inode&gt;&gt; (24 samples, 0.22%)</title><rect x="492.8" y="581" width="2.6" height="15.0" fill="rgb(205,86,3)" rx="2" ry="2" />
<text  x="495.83" y="591.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.01%)</title><rect x="15.0" y="549" width="0.1" height="15.0" fill="rgb(212,48,46)" rx="2" ry="2" />
<text  x="18.01" y="559.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (1 samples, 0.01%)</title><rect x="472.8" y="85" width="0.1" height="15.0" fill="rgb(227,172,5)" rx="2" ry="2" />
<text  x="475.79" y="95.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (3 samples, 0.03%)</title><rect x="192.4" y="613" width="0.4" height="15.0" fill="rgb(206,81,36)" rx="2" ry="2" />
<text  x="195.43" y="623.5" ></text>
</g>
<g >
<title>rcu_idle_enter (2 samples, 0.02%)</title><rect x="1129.3" y="517" width="0.3" height="15.0" fill="rgb(241,137,41)" rx="2" ry="2" />
<text  x="1132.33" y="527.5" ></text>
</g>
<g >
<title>menu_select (24 samples, 0.22%)</title><rect x="1130.3" y="533" width="2.6" height="15.0" fill="rgb(228,23,41)" rx="2" ry="2" />
<text  x="1133.31" y="543.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="125.9" y="437" width="0.1" height="15.0" fill="rgb(214,52,53)" rx="2" ry="2" />
<text  x="128.89" y="447.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.0 (1 samples, 0.01%)</title><rect x="827.4" y="373" width="0.1" height="15.0" fill="rgb(211,23,14)" rx="2" ry="2" />
<text  x="830.42" y="383.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (6 samples, 0.06%)</title><rect x="162.7" y="613" width="0.7" height="15.0" fill="rgb(229,30,29)" rx="2" ry="2" />
<text  x="165.70" y="623.5" ></text>
</g>
<g >
<title>cpu_startup_entry (482 samples, 4.45%)</title><rect x="21.5" y="597" width="52.5" height="15.0" fill="rgb(251,36,4)" rx="2" ry="2" />
<text  x="24.55" y="607.5" >cpu_s..</text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.01%)</title><rect x="466.6" y="309" width="0.1" height="15.0" fill="rgb(249,21,29)" rx="2" ry="2" />
<text  x="469.58" y="319.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (2 samples, 0.02%)</title><rect x="158.1" y="261" width="0.2" height="15.0" fill="rgb(222,174,53)" rx="2" ry="2" />
<text  x="161.13" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="151.2" y="613" width="0.1" height="15.0" fill="rgb(217,202,2)" rx="2" ry="2" />
<text  x="154.16" y="623.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.05%)</title><rect x="1129.8" y="517" width="0.5" height="15.0" fill="rgb(223,105,50)" rx="2" ry="2" />
<text  x="1132.77" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.06%)</title><rect x="452.0" y="485" width="0.7" height="15.0" fill="rgb(215,128,30)" rx="2" ry="2" />
<text  x="454.98" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="472.6" y="517" width="0.4" height="15.0" fill="rgb(240,55,6)" rx="2" ry="2" />
<text  x="475.57" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (7 samples, 0.06%)</title><rect x="540.6" y="453" width="0.8" height="15.0" fill="rgb(213,162,47)" rx="2" ry="2" />
<text  x="543.64" y="463.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (1 samples, 0.01%)</title><rect x="1102.1" y="581" width="0.1" height="15.0" fill="rgb(223,71,3)" rx="2" ry="2" />
<text  x="1105.10" y="591.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.01%)</title><rect x="113.7" y="453" width="0.1" height="15.0" fill="rgb(248,45,12)" rx="2" ry="2" />
<text  x="116.69" y="463.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.03%)</title><rect x="1022.6" y="261" width="0.3" height="15.0" fill="rgb(230,221,1)" rx="2" ry="2" />
<text  x="1025.60" y="271.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.01%)</title><rect x="1107.1" y="389" width="0.1" height="15.0" fill="rgb(245,177,36)" rx="2" ry="2" />
<text  x="1110.11" y="399.5" ></text>
</g>
<g >
<title>pick_next_task_fair (73 samples, 0.67%)</title><rect x="1176.1" y="469" width="7.9" height="15.0" fill="rgb(245,168,25)" rx="2" ry="2" />
<text  x="1179.06" y="479.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (61 samples, 0.56%)</title><rect x="524.6" y="501" width="6.7" height="15.0" fill="rgb(239,14,22)" rx="2" ry="2" />
<text  x="527.63" y="511.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.01%)</title><rect x="1020.7" y="229" width="0.2" height="15.0" fill="rgb(249,192,41)" rx="2" ry="2" />
<text  x="1023.74" y="239.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u8 (2 samples, 0.02%)</title><rect x="1062.8" y="325" width="0.2" height="15.0" fill="rgb(234,133,6)" rx="2" ry="2" />
<text  x="1065.79" y="335.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.01%)</title><rect x="1022.8" y="245" width="0.1" height="15.0" fill="rgb(223,12,11)" rx="2" ry="2" />
<text  x="1025.81" y="255.5" ></text>
</g>
<g >
<title>exc_page_fault (34 samples, 0.31%)</title><rect x="1020.6" y="501" width="3.7" height="15.0" fill="rgb(215,158,16)" rx="2" ry="2" />
<text  x="1023.64" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (14 samples, 0.13%)</title><rect x="1063.8" y="69" width="1.5" height="15.0" fill="rgb(253,101,2)" rx="2" ry="2" />
<text  x="1066.77" y="79.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="971.4" y="549" width="0.1" height="15.0" fill="rgb(230,17,51)" rx="2" ry="2" />
<text  x="974.40" y="559.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (1 samples, 0.01%)</title><rect x="1066.8" y="245" width="0.1" height="15.0" fill="rgb(252,93,34)" rx="2" ry="2" />
<text  x="1069.82" y="255.5" ></text>
</g>
<g >
<title>read_tsc (5 samples, 0.05%)</title><rect x="1186.2" y="485" width="0.5" height="15.0" fill="rgb(217,198,24)" rx="2" ry="2" />
<text  x="1189.19" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="1060.5" y="453" width="0.1" height="15.0" fill="rgb(254,164,50)" rx="2" ry="2" />
<text  x="1063.50" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="1132.7" y="453" width="0.1" height="15.0" fill="rgb(211,195,28)" rx="2" ry="2" />
<text  x="1135.71" y="463.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.02%)</title><rect x="80.6" y="341" width="0.2" height="15.0" fill="rgb(214,104,43)" rx="2" ry="2" />
<text  x="83.58" y="351.5" ></text>
</g>
<g >
<title>ondemand_readahead (13 samples, 0.12%)</title><rect x="1021.0" y="325" width="1.4" height="15.0" fill="rgb(227,74,38)" rx="2" ry="2" />
<text  x="1023.96" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (36 samples, 0.33%)</title><rect x="997.1" y="501" width="3.9" height="15.0" fill="rgb(218,91,43)" rx="2" ry="2" />
<text  x="1000.11" y="511.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (51 samples, 0.47%)</title><rect x="435.2" y="549" width="5.6" height="15.0" fill="rgb(206,148,28)" rx="2" ry="2" />
<text  x="438.21" y="559.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.01%)</title><rect x="1105.7" y="581" width="0.1" height="15.0" fill="rgb(254,165,37)" rx="2" ry="2" />
<text  x="1108.70" y="591.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="1143.6" y="373" width="0.1" height="15.0" fill="rgb(233,147,44)" rx="2" ry="2" />
<text  x="1146.60" y="383.5" ></text>
</g>
<g >
<title>pm_qos_read_value (3 samples, 0.03%)</title><rect x="121.0" y="453" width="0.3" height="15.0" fill="rgb(218,176,37)" rx="2" ry="2" />
<text  x="123.99" y="463.5" ></text>
</g>
<g >
<title>llist_reverse_order (10 samples, 0.09%)</title><rect x="129.4" y="485" width="1.1" height="15.0" fill="rgb(252,157,53)" rx="2" ry="2" />
<text  x="132.37" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="1105.3" y="597" width="0.2" height="15.0" fill="rgb(250,68,12)" rx="2" ry="2" />
<text  x="1108.26" y="607.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (3 samples, 0.03%)</title><rect x="141.6" y="389" width="0.3" height="15.0" fill="rgb(252,50,48)" rx="2" ry="2" />
<text  x="144.57" y="399.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (1 samples, 0.01%)</title><rect x="1059.5" y="485" width="0.1" height="15.0" fill="rgb(211,12,5)" rx="2" ry="2" />
<text  x="1062.52" y="495.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (1 samples, 0.01%)</title><rect x="123.4" y="437" width="0.1" height="15.0" fill="rgb(236,155,21)" rx="2" ry="2" />
<text  x="126.38" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="1058.3" y="533" width="0.7" height="15.0" fill="rgb(252,35,43)" rx="2" ry="2" />
<text  x="1061.32" y="543.5" ></text>
</g>
<g >
<title>mpage_process_page_bufs (3 samples, 0.03%)</title><rect x="20.9" y="405" width="0.3" height="15.0" fill="rgb(234,83,47)" rx="2" ry="2" />
<text  x="23.89" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (2 samples, 0.02%)</title><rect x="69.3" y="501" width="0.2" height="15.0" fill="rgb(214,17,42)" rx="2" ry="2" />
<text  x="72.25" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::interface::file::EmulatedFileMap&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="1059.4" y="565" width="0.1" height="15.0" fill="rgb(218,199,43)" rx="2" ry="2" />
<text  x="1062.41" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_ftruncate (2 samples, 0.02%)</title><rect x="1024.6" y="437" width="0.2" height="15.0" fill="rgb(216,167,37)" rx="2" ry="2" />
<text  x="1027.56" y="447.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (1 samples, 0.01%)</title><rect x="1106.0" y="565" width="0.1" height="15.0" fill="rgb(215,105,39)" rx="2" ry="2" />
<text  x="1109.03" y="575.5" ></text>
</g>
<g >
<title>ext4_convert_inline_data (1 samples, 0.01%)</title><rect x="1024.0" y="357" width="0.1" height="15.0" fill="rgb(245,109,39)" rx="2" ry="2" />
<text  x="1027.01" y="367.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.01%)</title><rect x="72.0" y="469" width="0.1" height="15.0" fill="rgb(247,175,21)" rx="2" ry="2" />
<text  x="74.97" y="479.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (75 samples, 0.69%)</title><rect x="837.9" y="501" width="8.1" height="15.0" fill="rgb(242,207,1)" rx="2" ry="2" />
<text  x="840.87" y="511.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function (1 samples, 0.01%)</title><rect x="1024.6" y="277" width="0.1" height="15.0" fill="rgb(243,171,22)" rx="2" ry="2" />
<text  x="1027.56" y="287.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="73.5" y="533" width="0.1" height="15.0" fill="rgb(242,93,46)" rx="2" ry="2" />
<text  x="76.50" y="543.5" ></text>
</g>
<g >
<title>find_next_and_bit (1 samples, 0.01%)</title><rect x="72.1" y="469" width="0.1" height="15.0" fill="rgb(237,101,32)" rx="2" ry="2" />
<text  x="75.08" y="479.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (4 samples, 0.04%)</title><rect x="472.6" y="165" width="0.4" height="15.0" fill="rgb(206,60,42)" rx="2" ry="2" />
<text  x="475.57" y="175.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (31 samples, 0.29%)</title><rect x="533.7" y="485" width="3.3" height="15.0" fill="rgb(209,142,0)" rx="2" ry="2" />
<text  x="536.67" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (42 samples, 0.39%)</title><rect x="430.3" y="565" width="4.6" height="15.0" fill="rgb(233,220,51)" rx="2" ry="2" />
<text  x="433.31" y="575.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::close (3 samples, 0.03%)</title><rect x="472.2" y="565" width="0.4" height="15.0" fill="rgb(227,4,7)" rx="2" ry="2" />
<text  x="475.24" y="575.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (20 samples, 0.18%)</title><rect x="1001.6" y="517" width="2.2" height="15.0" fill="rgb(211,30,48)" rx="2" ry="2" />
<text  x="1004.57" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::FILEOBJECTTABLE (2 samples, 0.02%)</title><rect x="1104.4" y="629" width="0.2" height="15.0" fill="rgb(207,122,27)" rx="2" ry="2" />
<text  x="1107.39" y="639.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (376 samples, 3.47%)</title><rect x="23.7" y="517" width="41.0" height="15.0" fill="rgb(242,18,42)" rx="2" ry="2" />
<text  x="26.72" y="527.5" >mwa..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="1101.3" y="613" width="0.2" height="15.0" fill="rgb(250,99,40)" rx="2" ry="2" />
<text  x="1104.34" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (1 samples, 0.01%)</title><rect x="14.5" y="597" width="0.1" height="15.0" fill="rgb(248,117,17)" rx="2" ry="2" />
<text  x="17.47" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (21 samples, 0.19%)</title><rect x="1063.0" y="101" width="2.3" height="15.0" fill="rgb(216,65,37)" rx="2" ry="2" />
<text  x="1066.00" y="111.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.01%)</title><rect x="1170.6" y="421" width="0.1" height="15.0" fill="rgb(250,174,22)" rx="2" ry="2" />
<text  x="1173.61" y="431.5" ></text>
</g>
<g >
<title>remote_function (1 samples, 0.01%)</title><rect x="158.5" y="469" width="0.1" height="15.0" fill="rgb(243,6,27)" rx="2" ry="2" />
<text  x="161.45" y="479.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.02%)</title><rect x="1015.4" y="501" width="0.2" height="15.0" fill="rgb(239,96,53)" rx="2" ry="2" />
<text  x="1018.41" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;u64,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (51 samples, 0.47%)</title><rect x="435.2" y="581" width="5.6" height="15.0" fill="rgb(238,127,5)" rx="2" ry="2" />
<text  x="438.21" y="591.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.07%)</title><rect x="519.4" y="469" width="0.9" height="15.0" fill="rgb(216,188,42)" rx="2" ry="2" />
<text  x="522.40" y="479.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.05%)</title><rect x="113.1" y="437" width="0.6" height="15.0" fill="rgb(227,180,50)" rx="2" ry="2" />
<text  x="116.14" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (8 samples, 0.07%)</title><rect x="1061.3" y="437" width="0.8" height="15.0" fill="rgb(235,156,15)" rx="2" ry="2" />
<text  x="1064.26" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.07%)</title><rect x="457.5" y="453" width="0.9" height="15.0" fill="rgb(216,17,7)" rx="2" ry="2" />
<text  x="460.54" y="463.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.01%)</title><rect x="20.8" y="309" width="0.1" height="15.0" fill="rgb(223,141,11)" rx="2" ry="2" />
<text  x="23.78" y="319.5" ></text>
</g>
<g >
<title>realloc (5 samples, 0.05%)</title><rect x="1067.1" y="117" width="0.6" height="15.0" fill="rgb(249,59,34)" rx="2" ry="2" />
<text  x="1070.14" y="127.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (1 samples, 0.01%)</title><rect x="14.7" y="533" width="0.1" height="15.0" fill="rgb(216,222,0)" rx="2" ry="2" />
<text  x="17.68" y="543.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.01%)</title><rect x="1061.3" y="261" width="0.1" height="15.0" fill="rgb(214,21,51)" rx="2" ry="2" />
<text  x="1064.26" y="271.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (1 samples, 0.01%)</title><rect x="1061.9" y="309" width="0.1" height="15.0" fill="rgb(225,226,39)" rx="2" ry="2" />
<text  x="1064.91" y="319.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.01%)</title><rect x="421.6" y="501" width="0.1" height="15.0" fill="rgb(231,129,18)" rx="2" ry="2" />
<text  x="424.59" y="511.5" ></text>
</g>
<g >
<title>wait_on_page_writeback (1 samples, 0.01%)</title><rect x="21.4" y="405" width="0.1" height="15.0" fill="rgb(215,14,20)" rx="2" ry="2" />
<text  x="24.44" y="415.5" ></text>
</g>
<g >
<title>__do_fault (15 samples, 0.14%)</title><rect x="1020.7" y="389" width="1.7" height="15.0" fill="rgb(209,137,30)" rx="2" ry="2" />
<text  x="1023.74" y="399.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.01%)</title><rect x="1061.7" y="229" width="0.1" height="15.0" fill="rgb(211,138,18)" rx="2" ry="2" />
<text  x="1064.70" y="239.5" ></text>
</g>
<g >
<title>sysvec_call_function (1 samples, 0.01%)</title><rect x="466.6" y="405" width="0.1" height="15.0" fill="rgb(238,9,49)" rx="2" ry="2" />
<text  x="469.58" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="1024.6" y="453" width="0.2" height="15.0" fill="rgb(225,108,7)" rx="2" ry="2" />
<text  x="1027.56" y="463.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="169.7" y="581" width="0.1" height="15.0" fill="rgb(214,64,5)" rx="2" ry="2" />
<text  x="172.67" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (108 samples, 1.00%)</title><rect x="756.6" y="517" width="11.8" height="15.0" fill="rgb(235,39,23)" rx="2" ry="2" />
<text  x="759.62" y="527.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="15.6" y="501" width="0.1" height="15.0" fill="rgb(213,137,17)" rx="2" ry="2" />
<text  x="18.55" y="511.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.02%)</title><rect x="116.3" y="469" width="0.2" height="15.0" fill="rgb(236,43,42)" rx="2" ry="2" />
<text  x="119.30" y="479.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (1 samples, 0.01%)</title><rect x="510.9" y="549" width="0.1" height="15.0" fill="rgb(250,151,32)" rx="2" ry="2" />
<text  x="513.91" y="559.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="482.6" y="549" width="0.2" height="15.0" fill="rgb(220,106,19)" rx="2" ry="2" />
<text  x="485.59" y="559.5" ></text>
</g>
<g >
<title>ptep_clear_flush (24 samples, 0.22%)</title><rect x="16.6" y="293" width="2.7" height="15.0" fill="rgb(252,222,49)" rx="2" ry="2" />
<text  x="19.64" y="303.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="421.6" y="549" width="0.1" height="15.0" fill="rgb(239,111,3)" rx="2" ry="2" />
<text  x="424.59" y="559.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (58 samples, 0.54%)</title><rect x="1062.5" y="565" width="6.3" height="15.0" fill="rgb(254,95,27)" rx="2" ry="2" />
<text  x="1065.46" y="575.5" ></text>
</g>
<g >
<title>start_kernel (707 samples, 6.53%)</title><rect x="74.0" y="581" width="77.0" height="15.0" fill="rgb(213,66,52)" rx="2" ry="2" />
<text  x="77.04" y="591.5" >start_ke..</text>
</g>
<g >
<title>[libc.so.6] (58 samples, 0.54%)</title><rect x="1018.1" y="533" width="6.3" height="15.0" fill="rgb(217,139,30)" rx="2" ry="2" />
<text  x="1021.13" y="543.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.02%)</title><rect x="462.1" y="469" width="0.2" height="15.0" fill="rgb(237,22,5)" rx="2" ry="2" />
<text  x="465.11" y="479.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.01%)</title><rect x="69.4" y="469" width="0.1" height="15.0" fill="rgb(228,106,27)" rx="2" ry="2" />
<text  x="72.36" y="479.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (1 samples, 0.01%)</title><rect x="73.8" y="517" width="0.1" height="15.0" fill="rgb(251,10,29)" rx="2" ry="2" />
<text  x="76.82" y="527.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (8 samples, 0.07%)</title><rect x="1169.2" y="421" width="0.9" height="15.0" fill="rgb(247,6,7)" rx="2" ry="2" />
<text  x="1172.20" y="431.5" ></text>
</g>
<g >
<title>copy_kernel_to_fpregs (1 samples, 0.01%)</title><rect x="1105.5" y="565" width="0.1" height="15.0" fill="rgb(245,217,52)" rx="2" ry="2" />
<text  x="1108.48" y="575.5" ></text>
</g>
<g >
<title>poll_idle (58 samples, 0.54%)</title><rect x="1122.9" y="517" width="6.3" height="15.0" fill="rgb(208,153,48)" rx="2" ry="2" />
<text  x="1125.91" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.17%)</title><rect x="528.1" y="437" width="2.0" height="15.0" fill="rgb(208,6,13)" rx="2" ry="2" />
<text  x="531.12" y="447.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="467.9" y="485" width="0.3" height="15.0" fill="rgb(253,192,2)" rx="2" ry="2" />
<text  x="470.88" y="495.5" ></text>
</g>
<g >
<title>ext4_ext_create_new_leaf (1 samples, 0.01%)</title><rect x="20.7" y="341" width="0.1" height="15.0" fill="rgb(221,98,52)" rx="2" ry="2" />
<text  x="23.67" y="351.5" ></text>
</g>
<g >
<title>clear_page_erms (4 samples, 0.04%)</title><rect x="1021.0" y="229" width="0.4" height="15.0" fill="rgb(209,187,50)" rx="2" ry="2" />
<text  x="1023.96" y="239.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.10%)</title><rect x="457.4" y="469" width="1.2" height="15.0" fill="rgb(216,39,1)" rx="2" ry="2" />
<text  x="460.43" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.01%)</title><rect x="1050.3" y="501" width="0.1" height="15.0" fill="rgb(211,92,38)" rx="2" ry="2" />
<text  x="1053.26" y="511.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (4 samples, 0.04%)</title><rect x="1023.0" y="309" width="0.5" height="15.0" fill="rgb(253,78,15)" rx="2" ry="2" />
<text  x="1026.03" y="319.5" ></text>
</g>
<g >
<title>generic_perform_write (3 samples, 0.03%)</title><rect x="158.1" y="293" width="0.4" height="15.0" fill="rgb(252,39,37)" rx="2" ry="2" />
<text  x="161.13" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (5 samples, 0.05%)</title><rect x="68.9" y="517" width="0.6" height="15.0" fill="rgb(241,166,47)" rx="2" ry="2" />
<text  x="71.92" y="527.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (49 samples, 0.45%)</title><rect x="16.2" y="501" width="5.3" height="15.0" fill="rgb(215,27,3)" rx="2" ry="2" />
<text  x="19.21" y="511.5" ></text>
</g>
<g >
<title>__sysvec_call_function (1 samples, 0.01%)</title><rect x="1024.6" y="229" width="0.1" height="15.0" fill="rgb(222,93,2)" rx="2" ry="2" />
<text  x="1027.56" y="239.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.01%)</title><rect x="135.7" y="437" width="0.1" height="15.0" fill="rgb(230,27,14)" rx="2" ry="2" />
<text  x="138.69" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="1060.0" y="437" width="0.1" height="15.0" fill="rgb(217,228,28)" rx="2" ry="2" />
<text  x="1062.95" y="447.5" ></text>
</g>
<g >
<title>xa_get_order (2 samples, 0.02%)</title><rect x="1021.7" y="261" width="0.2" height="15.0" fill="rgb(228,80,4)" rx="2" ry="2" />
<text  x="1024.72" y="271.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (20 samples, 0.18%)</title><rect x="163.7" y="613" width="2.2" height="15.0" fill="rgb(221,105,24)" rx="2" ry="2" />
<text  x="166.68" y="623.5" ></text>
</g>
<g >
<title>workingset_activation (1 samples, 0.01%)</title><rect x="151.2" y="405" width="0.1" height="15.0" fill="rgb(237,137,27)" rx="2" ry="2" />
<text  x="154.16" y="415.5" ></text>
</g>
<g >
<title>arp_rcv.part.0 (1 samples, 0.01%)</title><rect x="23.0" y="293" width="0.1" height="15.0" fill="rgb(219,217,31)" rx="2" ry="2" />
<text  x="25.96" y="303.5" ></text>
</g>
<g >
<title>ret_from_fork (57 samples, 0.53%)</title><rect x="15.3" y="629" width="6.2" height="15.0" fill="rgb(232,34,50)" rx="2" ry="2" />
<text  x="18.34" y="639.5" ></text>
</g>
<g >
<title>start_secondary (313 samples, 2.89%)</title><rect x="1105.8" y="613" width="34.1" height="15.0" fill="rgb(243,180,27)" rx="2" ry="2" />
<text  x="1108.81" y="623.5" >st..</text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (45 samples, 0.42%)</title><rect x="442.7" y="517" width="4.9" height="15.0" fill="rgb(252,200,14)" rx="2" ry="2" />
<text  x="445.72" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.01%)</title><rect x="148.9" y="485" width="0.1" height="15.0" fill="rgb(219,162,16)" rx="2" ry="2" />
<text  x="151.87" y="495.5" ></text>
</g>
<g >
<title>__block_write_begin_int (15 samples, 0.14%)</title><rect x="1022.4" y="341" width="1.6" height="15.0" fill="rgb(254,13,7)" rx="2" ry="2" />
<text  x="1025.38" y="351.5" ></text>
</g>
<g >
<title>sysvec_call_function (1 samples, 0.01%)</title><rect x="928.2" y="469" width="0.1" height="15.0" fill="rgb(247,4,1)" rx="2" ry="2" />
<text  x="931.17" y="479.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_some (53 samples, 0.49%)</title><rect x="1062.5" y="501" width="5.7" height="15.0" fill="rgb(253,57,30)" rx="2" ry="2" />
<text  x="1065.46" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="1017.6" y="565" width="0.5" height="15.0" fill="rgb(221,26,48)" rx="2" ry="2" />
<text  x="1020.59" y="575.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (23 samples, 0.21%)</title><rect x="126.9" y="485" width="2.5" height="15.0" fill="rgb(216,135,39)" rx="2" ry="2" />
<text  x="129.87" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="1015.1" y="501" width="0.3" height="15.0" fill="rgb(217,194,26)" rx="2" ry="2" />
<text  x="1018.08" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (8 samples, 0.07%)</title><rect x="78.5" y="373" width="0.9" height="15.0" fill="rgb(244,86,35)" rx="2" ry="2" />
<text  x="81.51" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.13%)</title><rect x="158.7" y="613" width="1.5" height="15.0" fill="rgb(212,101,28)" rx="2" ry="2" />
<text  x="161.67" y="623.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (5 samples, 0.05%)</title><rect x="72.2" y="469" width="0.5" height="15.0" fill="rgb(230,188,25)" rx="2" ry="2" />
<text  x="75.19" y="479.5" ></text>
</g>
<g >
<title>__run_hrtimer (5 samples, 0.05%)</title><rect x="23.1" y="421" width="0.5" height="15.0" fill="rgb(237,195,29)" rx="2" ry="2" />
<text  x="26.07" y="431.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.01%)</title><rect x="23.6" y="469" width="0.1" height="15.0" fill="rgb(235,61,8)" rx="2" ry="2" />
<text  x="26.61" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (5 samples, 0.05%)</title><rect x="122.3" y="421" width="0.5" height="15.0" fill="rgb(244,27,52)" rx="2" ry="2" />
<text  x="125.29" y="431.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.01%)</title><rect x="1020.7" y="245" width="0.2" height="15.0" fill="rgb(246,106,14)" rx="2" ry="2" />
<text  x="1023.74" y="255.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.01%)</title><rect x="23.6" y="325" width="0.1" height="15.0" fill="rgb(206,57,6)" rx="2" ry="2" />
<text  x="26.61" y="335.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="1014.3" y="517" width="0.1" height="15.0" fill="rgb(217,190,11)" rx="2" ry="2" />
<text  x="1017.32" y="527.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="472.1" y="549" width="0.1" height="15.0" fill="rgb(230,45,43)" rx="2" ry="2" />
<text  x="475.13" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (13 samples, 0.12%)</title><rect x="1063.9" y="53" width="1.4" height="15.0" fill="rgb(228,76,36)" rx="2" ry="2" />
<text  x="1066.87" y="63.5" ></text>
</g>
<g >
<title>ext4_finish_bio (8 samples, 0.07%)</title><rect x="15.3" y="517" width="0.9" height="15.0" fill="rgb(206,59,19)" rx="2" ry="2" />
<text  x="18.34" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="1059.7" y="469" width="0.3" height="15.0" fill="rgb(242,204,40)" rx="2" ry="2" />
<text  x="1062.74" y="479.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.01%)</title><rect x="1107.1" y="421" width="0.1" height="15.0" fill="rgb(229,19,1)" rx="2" ry="2" />
<text  x="1110.11" y="431.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.08%)</title><rect x="532.3" y="453" width="0.9" height="15.0" fill="rgb(217,14,44)" rx="2" ry="2" />
<text  x="535.25" y="463.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.01%)</title><rect x="1060.7" y="533" width="0.1" height="15.0" fill="rgb(219,58,0)" rx="2" ry="2" />
<text  x="1063.72" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="998.3" y="469" width="0.3" height="15.0" fill="rgb(248,100,47)" rx="2" ry="2" />
<text  x="1001.31" y="479.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="23.6" y="309" width="0.1" height="15.0" fill="rgb(232,167,28)" rx="2" ry="2" />
<text  x="26.61" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="535.5" y="405" width="0.1" height="15.0" fill="rgb(234,53,36)" rx="2" ry="2" />
<text  x="538.52" y="415.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.01%)</title><rect x="169.7" y="597" width="0.1" height="15.0" fill="rgb(244,26,53)" rx="2" ry="2" />
<text  x="172.67" y="607.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.01%)</title><rect x="1170.6" y="389" width="0.1" height="15.0" fill="rgb(223,160,22)" rx="2" ry="2" />
<text  x="1173.61" y="399.5" ></text>
</g>
<g >
<title>smp_call_function_many_cond (19 samples, 0.18%)</title><rect x="17.2" y="229" width="2.1" height="15.0" fill="rgb(205,35,5)" rx="2" ry="2" />
<text  x="20.19" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (23 samples, 0.21%)</title><rect x="1011.8" y="501" width="2.5" height="15.0" fill="rgb(227,66,6)" rx="2" ry="2" />
<text  x="1014.81" y="511.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (2 samples, 0.02%)</title><rect x="1165.5" y="453" width="0.2" height="15.0" fill="rgb(225,30,10)" rx="2" ry="2" />
<text  x="1168.49" y="463.5" ></text>
</g>
<g >
<title>follow_pmd_mask.isra.0 (1 samples, 0.01%)</title><rect x="151.2" y="453" width="0.1" height="15.0" fill="rgb(206,226,50)" rx="2" ry="2" />
<text  x="154.16" y="463.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="1015.2" y="437" width="0.1" height="15.0" fill="rgb(205,144,6)" rx="2" ry="2" />
<text  x="1018.19" y="447.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.02%)</title><rect x="1060.8" y="517" width="0.2" height="15.0" fill="rgb(205,95,51)" rx="2" ry="2" />
<text  x="1063.83" y="527.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (4 samples, 0.04%)</title><rect x="472.6" y="197" width="0.4" height="15.0" fill="rgb(253,31,38)" rx="2" ry="2" />
<text  x="475.57" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.19%)</title><rect x="1063.0" y="261" width="2.3" height="15.0" fill="rgb(235,134,17)" rx="2" ry="2" />
<text  x="1066.00" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="1015.6" y="501" width="0.2" height="15.0" fill="rgb(219,164,20)" rx="2" ry="2" />
<text  x="1018.62" y="511.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.01%)</title><rect x="1139.4" y="533" width="0.1" height="15.0" fill="rgb(219,38,27)" rx="2" ry="2" />
<text  x="1142.35" y="543.5" ></text>
</g>
<g >
<title>__page_cache_alloc (1 samples, 0.01%)</title><rect x="1020.7" y="293" width="0.2" height="15.0" fill="rgb(250,41,9)" rx="2" ry="2" />
<text  x="1023.74" y="303.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (2 samples, 0.02%)</title><rect x="970.5" y="517" width="0.3" height="15.0" fill="rgb(236,68,49)" rx="2" ry="2" />
<text  x="973.53" y="527.5" ></text>
</g>
<g >
<title>kthread (57 samples, 0.53%)</title><rect x="15.3" y="613" width="6.2" height="15.0" fill="rgb(251,2,40)" rx="2" ry="2" />
<text  x="18.34" y="623.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (22 samples, 0.20%)</title><rect x="16.9" y="261" width="2.4" height="15.0" fill="rgb(210,214,35)" rx="2" ry="2" />
<text  x="19.86" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="1059.4" y="501" width="0.1" height="15.0" fill="rgb(227,51,38)" rx="2" ry="2" />
<text  x="1062.41" y="511.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (4 samples, 0.04%)</title><rect x="1023.0" y="325" width="0.5" height="15.0" fill="rgb(245,143,29)" rx="2" ry="2" />
<text  x="1026.03" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.04%)</title><rect x="1168.8" y="421" width="0.4" height="15.0" fill="rgb(241,51,9)" rx="2" ry="2" />
<text  x="1171.76" y="431.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (53 samples, 0.49%)</title><rect x="1062.5" y="517" width="5.7" height="15.0" fill="rgb(212,196,32)" rx="2" ry="2" />
<text  x="1065.46" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (29 samples, 0.27%)</title><rect x="1042.2" y="533" width="3.2" height="15.0" fill="rgb(215,121,46)" rx="2" ry="2" />
<text  x="1045.20" y="543.5" ></text>
</g>
<g >
<title>rest_init (460 samples, 4.25%)</title><rect x="1139.9" y="549" width="50.1" height="15.0" fill="rgb(232,50,51)" rx="2" ry="2" />
<text  x="1142.90" y="559.5" >rest_..</text>
</g>
<g >
<title>do_idle (445 samples, 4.11%)</title><rect x="1140.0" y="517" width="48.5" height="15.0" fill="rgb(213,170,37)" rx="2" ry="2" />
<text  x="1143.01" y="527.5" >do_i..</text>
</g>
<g >
<title>can_stop_idle_tick (1 samples, 0.01%)</title><rect x="1167.5" y="437" width="0.1" height="15.0" fill="rgb(222,159,34)" rx="2" ry="2" />
<text  x="1170.45" y="447.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.01%)</title><rect x="158.1" y="181" width="0.1" height="15.0" fill="rgb(222,74,30)" rx="2" ry="2" />
<text  x="161.13" y="191.5" ></text>
</g>
<g >
<title>do_user_addr_fault (4 samples, 0.04%)</title><rect x="550.9" y="485" width="0.4" height="15.0" fill="rgb(213,54,11)" rx="2" ry="2" />
<text  x="553.88" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (7 samples, 0.06%)</title><rect x="148.2" y="501" width="0.8" height="15.0" fill="rgb(252,141,47)" rx="2" ry="2" />
<text  x="151.21" y="511.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.01%)</title><rect x="149.0" y="501" width="0.1" height="15.0" fill="rgb(244,36,44)" rx="2" ry="2" />
<text  x="151.98" y="511.5" ></text>
</g>
<g >
<title>poll_idle (1 samples, 0.01%)</title><rect x="1163.9" y="469" width="0.1" height="15.0" fill="rgb(218,90,23)" rx="2" ry="2" />
<text  x="1166.86" y="479.5" ></text>
</g>
<g >
<title>cpuidle_poll_time (1 samples, 0.01%)</title><rect x="1143.7" y="453" width="0.1" height="15.0" fill="rgb(207,38,53)" rx="2" ry="2" />
<text  x="1146.71" y="463.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (4 samples, 0.04%)</title><rect x="531.8" y="453" width="0.5" height="15.0" fill="rgb(205,116,17)" rx="2" ry="2" />
<text  x="534.82" y="463.5" ></text>
</g>
<g >
<title>__block_write_begin_int (5 samples, 0.05%)</title><rect x="1061.5" y="325" width="0.5" height="15.0" fill="rgb(243,53,17)" rx="2" ry="2" />
<text  x="1064.48" y="335.5" ></text>
</g>
<g >
<title>process_one_work (57 samples, 0.53%)</title><rect x="15.3" y="581" width="6.2" height="15.0" fill="rgb(224,121,27)" rx="2" ry="2" />
<text  x="18.34" y="591.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.01%)</title><rect x="120.9" y="453" width="0.1" height="15.0" fill="rgb(246,211,3)" rx="2" ry="2" />
<text  x="123.88" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (97 samples, 0.90%)</title><rect x="1003.8" y="549" width="10.5" height="15.0" fill="rgb(252,49,45)" rx="2" ry="2" />
<text  x="1006.75" y="559.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function (1 samples, 0.01%)</title><rect x="421.6" y="613" width="0.1" height="15.0" fill="rgb(218,63,32)" rx="2" ry="2" />
<text  x="424.59" y="623.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (31 samples, 0.29%)</title><rect x="141.9" y="405" width="3.4" height="15.0" fill="rgb(219,172,31)" rx="2" ry="2" />
<text  x="144.90" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.03%)</title><rect x="1067.9" y="325" width="0.3" height="15.0" fill="rgb(236,227,43)" rx="2" ry="2" />
<text  x="1070.90" y="335.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.04%)</title><rect x="1133.3" y="549" width="0.4" height="15.0" fill="rgb(212,175,26)" rx="2" ry="2" />
<text  x="1136.25" y="559.5" ></text>
</g>
<g >
<title>core::mem::drop (41 samples, 0.38%)</title><rect x="966.3" y="581" width="4.5" height="15.0" fill="rgb(245,72,38)" rx="2" ry="2" />
<text  x="969.29" y="591.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (22 samples, 0.20%)</title><rect x="998.6" y="485" width="2.4" height="15.0" fill="rgb(237,63,4)" rx="2" ry="2" />
<text  x="1001.63" y="495.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="23.5" y="389" width="0.1" height="15.0" fill="rgb(252,112,8)" rx="2" ry="2" />
<text  x="26.51" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="158.5" y="629" width="0.2" height="15.0" fill="rgb(209,11,21)" rx="2" ry="2" />
<text  x="161.45" y="639.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="1060.0" y="485" width="0.1" height="15.0" fill="rgb(249,196,27)" rx="2" ry="2" />
<text  x="1062.95" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.06%)</title><rect x="1059.7" y="501" width="0.7" height="15.0" fill="rgb(229,142,22)" rx="2" ry="2" />
<text  x="1062.74" y="511.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.06%)</title><rect x="1065.3" y="373" width="0.8" height="15.0" fill="rgb(210,144,37)" rx="2" ry="2" />
<text  x="1068.29" y="383.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.01%)</title><rect x="1129.7" y="501" width="0.1" height="15.0" fill="rgb(228,33,20)" rx="2" ry="2" />
<text  x="1132.66" y="511.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (2 samples, 0.02%)</title><rect x="188.4" y="597" width="0.2" height="15.0" fill="rgb(251,13,35)" rx="2" ry="2" />
<text  x="191.41" y="607.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (3 samples, 0.03%)</title><rect x="158.1" y="581" width="0.4" height="15.0" fill="rgb(247,113,17)" rx="2" ry="2" />
<text  x="161.13" y="591.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="456.1" y="453" width="0.2" height="15.0" fill="rgb(213,23,15)" rx="2" ry="2" />
<text  x="459.12" y="463.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (20 samples, 0.18%)</title><rect x="1001.6" y="533" width="2.2" height="15.0" fill="rgb(225,132,20)" rx="2" ry="2" />
<text  x="1004.57" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.06%)</title><rect x="517.2" y="469" width="0.7" height="15.0" fill="rgb(222,72,25)" rx="2" ry="2" />
<text  x="520.22" y="479.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.01%)</title><rect x="23.6" y="389" width="0.1" height="15.0" fill="rgb(215,47,12)" rx="2" ry="2" />
<text  x="26.61" y="399.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (4 samples, 0.04%)</title><rect x="469.4" y="453" width="0.4" height="15.0" fill="rgb(235,81,3)" rx="2" ry="2" />
<text  x="472.41" y="463.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (19 samples, 0.18%)</title><rect x="1009.5" y="469" width="2.1" height="15.0" fill="rgb(245,178,18)" rx="2" ry="2" />
<text  x="1012.53" y="479.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.03%)</title><rect x="1060.1" y="485" width="0.3" height="15.0" fill="rgb(231,167,19)" rx="2" ry="2" />
<text  x="1063.06" y="495.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.22%)</title><rect x="483.1" y="533" width="2.6" height="15.0" fill="rgb(221,84,3)" rx="2" ry="2" />
<text  x="486.13" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="1049.1" y="501" width="0.2" height="15.0" fill="rgb(209,84,27)" rx="2" ry="2" />
<text  x="1052.06" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="1060.2" y="405" width="0.1" height="15.0" fill="rgb(243,10,12)" rx="2" ry="2" />
<text  x="1063.17" y="415.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (1 samples, 0.01%)</title><rect x="1062.1" y="373" width="0.1" height="15.0" fill="rgb(241,147,16)" rx="2" ry="2" />
<text  x="1065.13" y="383.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="1170.6" y="373" width="0.1" height="15.0" fill="rgb(251,221,18)" rx="2" ry="2" />
<text  x="1173.61" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (29 samples, 0.27%)</title><rect x="1042.2" y="517" width="3.2" height="15.0" fill="rgb(250,91,35)" rx="2" ry="2" />
<text  x="1045.20" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (9 samples, 0.08%)</title><rect x="469.4" y="485" width="1.0" height="15.0" fill="rgb(219,164,45)" rx="2" ry="2" />
<text  x="472.41" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::likely (1 samples, 0.01%)</title><rect x="1013.6" y="469" width="0.1" height="15.0" fill="rgb(211,37,16)" rx="2" ry="2" />
<text  x="1016.56" y="479.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.01%)</title><rect x="1105.7" y="565" width="0.1" height="15.0" fill="rgb(233,11,4)" rx="2" ry="2" />
<text  x="1108.70" y="575.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.01%)</title><rect x="1143.6" y="357" width="0.1" height="15.0" fill="rgb(230,161,12)" rx="2" ry="2" />
<text  x="1146.60" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="23.5" y="357" width="0.1" height="15.0" fill="rgb(230,224,40)" rx="2" ry="2" />
<text  x="26.51" y="367.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.01%)</title><rect x="158.3" y="181" width="0.2" height="15.0" fill="rgb(249,115,5)" rx="2" ry="2" />
<text  x="161.34" y="191.5" ></text>
</g>
<g >
<title>__dentry_kill (4 samples, 0.04%)</title><rect x="472.6" y="325" width="0.4" height="15.0" fill="rgb(237,90,34)" rx="2" ry="2" />
<text  x="475.57" y="335.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.01%)</title><rect x="1014.3" y="485" width="0.1" height="15.0" fill="rgb(251,130,8)" rx="2" ry="2" />
<text  x="1017.32" y="495.5" ></text>
</g>
<g >
<title>evict (4 samples, 0.04%)</title><rect x="472.6" y="405" width="0.4" height="15.0" fill="rgb(254,204,8)" rx="2" ry="2" />
<text  x="475.57" y="415.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (23 samples, 0.21%)</title><rect x="1062.8" y="421" width="2.5" height="15.0" fill="rgb(238,61,36)" rx="2" ry="2" />
<text  x="1065.79" y="431.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (63 samples, 0.58%)</title><rect x="151.3" y="565" width="6.8" height="15.0" fill="rgb(207,58,28)" rx="2" ry="2" />
<text  x="154.26" y="575.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.01%)</title><rect x="1129.2" y="517" width="0.1" height="15.0" fill="rgb(240,129,54)" rx="2" ry="2" />
<text  x="1132.22" y="527.5" ></text>
</g>
<g >
<title>do_dentry_open (1 samples, 0.01%)</title><rect x="14.6" y="501" width="0.1" height="15.0" fill="rgb(212,154,47)" rx="2" ry="2" />
<text  x="17.57" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (3 samples, 0.03%)</title><rect x="1058.6" y="469" width="0.4" height="15.0" fill="rgb(205,226,35)" rx="2" ry="2" />
<text  x="1061.65" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="1060.1" y="421" width="0.3" height="15.0" fill="rgb(222,219,26)" rx="2" ry="2" />
<text  x="1063.06" y="431.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.01%)</title><rect x="970.4" y="501" width="0.1" height="15.0" fill="rgb(219,221,36)" rx="2" ry="2" />
<text  x="973.42" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (34 samples, 0.31%)</title><rect x="478.9" y="549" width="3.7" height="15.0" fill="rgb(216,146,35)" rx="2" ry="2" />
<text  x="481.88" y="559.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.01%)</title><rect x="119.4" y="453" width="0.1" height="15.0" fill="rgb(210,156,30)" rx="2" ry="2" />
<text  x="122.35" y="463.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.01%)</title><rect x="70.1" y="565" width="0.1" height="15.0" fill="rgb(247,194,24)" rx="2" ry="2" />
<text  x="73.12" y="575.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.01%)</title><rect x="14.5" y="533" width="0.1" height="15.0" fill="rgb(248,90,39)" rx="2" ry="2" />
<text  x="17.47" y="543.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (1 samples, 0.01%)</title><rect x="450.6" y="437" width="0.1" height="15.0" fill="rgb(249,11,2)" rx="2" ry="2" />
<text  x="453.57" y="447.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.01%)</title><rect x="125.8" y="485" width="0.1" height="15.0" fill="rgb(242,149,47)" rx="2" ry="2" />
<text  x="128.78" y="495.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.01%)</title><rect x="116.2" y="469" width="0.1" height="15.0" fill="rgb(237,213,10)" rx="2" ry="2" />
<text  x="119.19" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.01%)</title><rect x="1170.1" y="453" width="0.1" height="15.0" fill="rgb(248,15,16)" rx="2" ry="2" />
<text  x="1173.07" y="463.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (54 samples, 0.50%)</title><rect x="1062.5" y="533" width="5.8" height="15.0" fill="rgb(227,120,36)" rx="2" ry="2" />
<text  x="1065.46" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (17 samples, 0.16%)</title><rect x="146.4" y="501" width="1.8" height="15.0" fill="rgb(234,40,52)" rx="2" ry="2" />
<text  x="149.36" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.02%)</title><rect x="1015.6" y="469" width="0.2" height="15.0" fill="rgb(231,220,4)" rx="2" ry="2" />
<text  x="1018.62" y="479.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (32 samples, 0.30%)</title><rect x="520.3" y="517" width="3.5" height="15.0" fill="rgb(231,10,37)" rx="2" ry="2" />
<text  x="523.27" y="527.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.01%)</title><rect x="14.4" y="565" width="0.1" height="15.0" fill="rgb(236,199,16)" rx="2" ry="2" />
<text  x="17.36" y="575.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.01%)</title><rect x="1020.9" y="277" width="0.1" height="15.0" fill="rgb(213,5,31)" rx="2" ry="2" />
<text  x="1023.85" y="287.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (1 samples, 0.01%)</title><rect x="421.6" y="565" width="0.1" height="15.0" fill="rgb(229,37,24)" rx="2" ry="2" />
<text  x="424.59" y="575.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="134.2" y="341" width="0.1" height="15.0" fill="rgb(222,102,20)" rx="2" ry="2" />
<text  x="137.16" y="351.5" ></text>
</g>
<g >
<title>find_busiest_group (3 samples, 0.03%)</title><rect x="80.3" y="309" width="0.3" height="15.0" fill="rgb(236,206,11)" rx="2" ry="2" />
<text  x="83.25" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.01%)</title><rect x="1167.0" y="437" width="0.1" height="15.0" fill="rgb(218,226,46)" rx="2" ry="2" />
<text  x="1170.02" y="447.5" ></text>
</g>
<g >
<title>iput.part.0 (4 samples, 0.04%)</title><rect x="472.6" y="437" width="0.4" height="15.0" fill="rgb(232,15,33)" rx="2" ry="2" />
<text  x="475.57" y="447.5" ></text>
</g>
<g >
<title>clear_page_dirty_for_io (26 samples, 0.24%)</title><rect x="16.4" y="373" width="2.9" height="15.0" fill="rgb(234,54,5)" rx="2" ry="2" />
<text  x="19.43" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (58 samples, 0.54%)</title><rect x="511.6" y="533" width="6.3" height="15.0" fill="rgb(219,169,11)" rx="2" ry="2" />
<text  x="514.56" y="543.5" ></text>
</g>
<g >
<title>read_tsc (3 samples, 0.03%)</title><rect x="1139.0" y="549" width="0.4" height="15.0" fill="rgb(240,7,3)" rx="2" ry="2" />
<text  x="1142.03" y="559.5" ></text>
</g>
<g >
<title>iput (4 samples, 0.04%)</title><rect x="472.6" y="293" width="0.4" height="15.0" fill="rgb(232,212,22)" rx="2" ry="2" />
<text  x="475.57" y="303.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (41 samples, 0.38%)</title><rect x="16.2" y="405" width="4.5" height="15.0" fill="rgb(247,208,39)" rx="2" ry="2" />
<text  x="19.21" y="415.5" ></text>
</g>
<g >
<title>follow_page_pte (1 samples, 0.01%)</title><rect x="151.2" y="437" width="0.1" height="15.0" fill="rgb(208,99,48)" rx="2" ry="2" />
<text  x="154.16" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter (196 samples, 1.81%)</title><rect x="1143.1" y="485" width="21.3" height="15.0" fill="rgb(242,133,1)" rx="2" ry="2" />
<text  x="1146.06" y="495.5" >c..</text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (30 samples, 0.28%)</title><rect x="1062.8" y="453" width="3.3" height="15.0" fill="rgb(215,89,39)" rx="2" ry="2" />
<text  x="1065.79" y="463.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.02%)</title><rect x="1022.6" y="245" width="0.2" height="15.0" fill="rgb(243,176,26)" rx="2" ry="2" />
<text  x="1025.60" y="255.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (3 samples, 0.03%)</title><rect x="1014.4" y="517" width="0.4" height="15.0" fill="rgb(228,117,2)" rx="2" ry="2" />
<text  x="1017.43" y="527.5" ></text>
</g>
<g >
<title>core::mem::drop (24 samples, 0.22%)</title><rect x="483.1" y="581" width="2.6" height="15.0" fill="rgb(214,48,30)" rx="2" ry="2" />
<text  x="486.13" y="591.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (1 samples, 0.01%)</title><rect x="1102.1" y="565" width="0.1" height="15.0" fill="rgb(216,197,52)" rx="2" ry="2" />
<text  x="1105.10" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (9 samples, 0.08%)</title><rect x="167.5" y="613" width="1.0" height="15.0" fill="rgb(242,94,28)" rx="2" ry="2" />
<text  x="170.49" y="623.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (49 samples, 0.45%)</title><rect x="462.3" y="517" width="5.4" height="15.0" fill="rgb(237,204,11)" rx="2" ry="2" />
<text  x="465.33" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (181 samples, 1.67%)</title><rect x="1081.6" y="613" width="19.7" height="15.0" fill="rgb(239,8,11)" rx="2" ry="2" />
<text  x="1084.63" y="623.5" ></text>
</g>
<g >
<title>handle_mm_fault (9 samples, 0.08%)</title><rect x="1061.2" y="453" width="0.9" height="15.0" fill="rgb(214,169,0)" rx="2" ry="2" />
<text  x="1064.15" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;usize,rustposix::safeposix::filesystem::Inode&gt;&gt; (4 samples, 0.04%)</title><rect x="1059.0" y="565" width="0.4" height="15.0" fill="rgb(231,107,6)" rx="2" ry="2" />
<text  x="1061.97" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.06%)</title><rect x="1067.0" y="197" width="0.7" height="15.0" fill="rgb(226,10,48)" rx="2" ry="2" />
<text  x="1070.03" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (23 samples, 0.21%)</title><rect x="1011.8" y="485" width="2.5" height="15.0" fill="rgb(214,179,50)" rx="2" ry="2" />
<text  x="1014.81" y="495.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="69.8" y="501" width="0.1" height="15.0" fill="rgb(205,227,53)" rx="2" ry="2" />
<text  x="72.80" y="511.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (39 samples, 0.36%)</title><rect x="966.3" y="517" width="4.2" height="15.0" fill="rgb(233,217,18)" rx="2" ry="2" />
<text  x="969.29" y="527.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (3 samples, 0.03%)</title><rect x="482.8" y="533" width="0.3" height="15.0" fill="rgb(218,72,30)" rx="2" ry="2" />
<text  x="485.81" y="543.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (12 samples, 0.11%)</title><rect x="122.1" y="437" width="1.3" height="15.0" fill="rgb(244,80,2)" rx="2" ry="2" />
<text  x="125.07" y="447.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (2 samples, 0.02%)</title><rect x="75.2" y="501" width="0.3" height="15.0" fill="rgb(248,103,33)" rx="2" ry="2" />
<text  x="78.24" y="511.5" ></text>
</g>
<g >
<title>sched_idle_set_state (2 samples, 0.02%)</title><rect x="1163.6" y="453" width="0.3" height="15.0" fill="rgb(229,161,47)" rx="2" ry="2" />
<text  x="1166.64" y="463.5" ></text>
</g>
<g >
<title>do_fault (33 samples, 0.30%)</title><rect x="1020.7" y="421" width="3.6" height="15.0" fill="rgb(228,149,12)" rx="2" ry="2" />
<text  x="1023.74" y="431.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.26%)</title><rect x="520.3" y="485" width="3.0" height="15.0" fill="rgb(243,28,38)" rx="2" ry="2" />
<text  x="523.27" y="495.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (34 samples, 0.31%)</title><rect x="1020.6" y="517" width="3.7" height="15.0" fill="rgb(240,28,30)" rx="2" ry="2" />
<text  x="1023.64" y="527.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (6 samples, 0.06%)</title><rect x="535.6" y="421" width="0.7" height="15.0" fill="rgb(253,137,43)" rx="2" ry="2" />
<text  x="538.63" y="431.5" ></text>
</g>
<g >
<title>event_function (63 samples, 0.58%)</title><rect x="151.3" y="357" width="6.8" height="15.0" fill="rgb(211,14,4)" rx="2" ry="2" />
<text  x="154.26" y="367.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.01%)</title><rect x="1170.4" y="485" width="0.1" height="15.0" fill="rgb(247,167,21)" rx="2" ry="2" />
<text  x="1173.40" y="495.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.01%)</title><rect x="1143.6" y="261" width="0.1" height="15.0" fill="rgb(225,139,38)" rx="2" ry="2" />
<text  x="1146.60" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (97 samples, 0.90%)</title><rect x="1003.8" y="533" width="10.5" height="15.0" fill="rgb(226,131,41)" rx="2" ry="2" />
<text  x="1006.75" y="543.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.01%)</title><rect x="73.5" y="549" width="0.1" height="15.0" fill="rgb(247,70,13)" rx="2" ry="2" />
<text  x="76.50" y="559.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (531 samples, 4.90%)</title><rect x="870.4" y="501" width="57.9" height="15.0" fill="rgb(252,45,21)" rx="2" ry="2" />
<text  x="873.44" y="511.5" >core::..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6 samples, 0.06%)</title><rect x="23.1" y="517" width="0.6" height="15.0" fill="rgb(220,166,53)" rx="2" ry="2" />
<text  x="26.07" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;usize,rustposix::interface::file::EmulatedFile&gt;&gt; (30 samples, 0.28%)</title><rect x="489.6" y="581" width="3.2" height="15.0" fill="rgb(240,83,49)" rx="2" ry="2" />
<text  x="492.56" y="591.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.01%)</title><rect x="158.5" y="389" width="0.1" height="15.0" fill="rgb(224,28,46)" rx="2" ry="2" />
<text  x="161.45" y="399.5" ></text>
</g>
<g >
<title>__xa_clear_mark (1 samples, 0.01%)</title><rect x="16.0" y="469" width="0.1" height="15.0" fill="rgb(242,196,32)" rx="2" ry="2" />
<text  x="18.99" y="479.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.01%)</title><rect x="470.3" y="437" width="0.1" height="15.0" fill="rgb(233,184,5)" rx="2" ry="2" />
<text  x="473.28" y="447.5" ></text>
</g>
<g >
<title>[perf-2315.map] (15 samples, 0.14%)</title><rect x="192.8" y="629" width="1.6" height="15.0" fill="rgb(207,118,0)" rx="2" ry="2" />
<text  x="195.76" y="639.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="77.4" y="469" width="0.1" height="15.0" fill="rgb(215,14,6)" rx="2" ry="2" />
<text  x="80.42" y="479.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.02%)</title><rect x="1106.9" y="437" width="0.2" height="15.0" fill="rgb(221,198,4)" rx="2" ry="2" />
<text  x="1109.90" y="447.5" ></text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.01%)</title><rect x="117.2" y="469" width="0.1" height="15.0" fill="rgb(237,92,2)" rx="2" ry="2" />
<text  x="120.17" y="479.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u64 (21 samples, 0.19%)</title><rect x="1063.0" y="357" width="2.3" height="15.0" fill="rgb(222,149,5)" rx="2" ry="2" />
<text  x="1066.00" y="367.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (4 samples, 0.04%)</title><rect x="115.0" y="437" width="0.4" height="15.0" fill="rgb(217,168,1)" rx="2" ry="2" />
<text  x="118.00" y="447.5" ></text>
</g>
<g >
<title>realloc (6 samples, 0.06%)</title><rect x="1065.4" y="165" width="0.7" height="15.0" fill="rgb(245,208,25)" rx="2" ry="2" />
<text  x="1068.40" y="175.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.06%)</title><rect x="534.9" y="421" width="0.7" height="15.0" fill="rgb(227,1,39)" rx="2" ry="2" />
<text  x="537.87" y="431.5" ></text>
</g>
<g >
<title>sysvec_call_function (1 samples, 0.01%)</title><rect x="827.4" y="453" width="0.1" height="15.0" fill="rgb(220,160,0)" rx="2" ry="2" />
<text  x="830.42" y="463.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.30%)</title><rect x="986.1" y="565" width="3.5" height="15.0" fill="rgb(254,29,2)" rx="2" ry="2" />
<text  x="989.11" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (7 samples, 0.06%)</title><rect x="1015.1" y="549" width="0.7" height="15.0" fill="rgb(237,32,10)" rx="2" ry="2" />
<text  x="1018.08" y="559.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (15 samples, 0.14%)</title><rect x="549.7" y="549" width="1.6" height="15.0" fill="rgb(229,126,26)" rx="2" ry="2" />
<text  x="552.68" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (39 samples, 0.36%)</title><rect x="966.3" y="549" width="4.2" height="15.0" fill="rgb(207,59,45)" rx="2" ry="2" />
<text  x="969.29" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="454.2" y="453" width="0.2" height="15.0" fill="rgb(244,98,11)" rx="2" ry="2" />
<text  x="457.16" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_idle_retain_tick (1 samples, 0.01%)</title><rect x="1170.5" y="485" width="0.1" height="15.0" fill="rgb(233,221,7)" rx="2" ry="2" />
<text  x="1173.50" y="495.5" ></text>
</g>
<g >
<title>error_return (1 samples, 0.01%)</title><rect x="1024.3" y="517" width="0.1" height="15.0" fill="rgb(253,223,10)" rx="2" ry="2" />
<text  x="1027.34" y="527.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.01%)</title><rect x="80.1" y="389" width="0.2" height="15.0" fill="rgb(251,112,6)" rx="2" ry="2" />
<text  x="83.14" y="399.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (3 samples, 0.03%)</title><rect x="158.1" y="309" width="0.4" height="15.0" fill="rgb(243,121,22)" rx="2" ry="2" />
<text  x="161.13" y="319.5" ></text>
</g>
<g >
<title>menu_select (15 samples, 0.14%)</title><rect x="67.8" y="533" width="1.7" height="15.0" fill="rgb(207,155,28)" rx="2" ry="2" />
<text  x="70.83" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.08%)</title><rect x="532.3" y="437" width="0.9" height="15.0" fill="rgb(211,100,48)" rx="2" ry="2" />
<text  x="535.25" y="447.5" ></text>
</g>
<g >
<title>do_unlinkat (4 samples, 0.04%)</title><rect x="472.6" y="469" width="0.4" height="15.0" fill="rgb(209,87,39)" rx="2" ry="2" />
<text  x="475.57" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="1015.1" y="485" width="0.3" height="15.0" fill="rgb(234,92,54)" rx="2" ry="2" />
<text  x="1018.08" y="495.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (167 samples, 1.54%)</title><rect x="169.8" y="549" width="18.2" height="15.0" fill="rgb(226,8,10)" rx="2" ry="2" />
<text  x="172.78" y="559.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.01%)</title><rect x="1102.4" y="613" width="0.1" height="15.0" fill="rgb(232,79,29)" rx="2" ry="2" />
<text  x="1105.43" y="623.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (58 samples, 0.54%)</title><rect x="511.6" y="517" width="6.3" height="15.0" fill="rgb(224,136,19)" rx="2" ry="2" />
<text  x="514.56" y="527.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.01%)</title><rect x="1107.1" y="405" width="0.1" height="15.0" fill="rgb(210,154,27)" rx="2" ry="2" />
<text  x="1110.11" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (25 samples, 0.23%)</title><rect x="450.0" y="501" width="2.7" height="15.0" fill="rgb(222,149,48)" rx="2" ry="2" />
<text  x="453.02" y="511.5" ></text>
</g>
<g >
<title>page_cache_async_ra (2 samples, 0.02%)</title><rect x="1061.3" y="325" width="0.2" height="15.0" fill="rgb(246,25,13)" rx="2" ry="2" />
<text  x="1064.26" y="335.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (49 samples, 0.45%)</title><rect x="16.2" y="485" width="5.3" height="15.0" fill="rgb(211,112,50)" rx="2" ry="2" />
<text  x="19.21" y="495.5" ></text>
</g>
<g >
<title>cpuidle_reflect (2 samples, 0.02%)</title><rect x="126.1" y="501" width="0.2" height="15.0" fill="rgb(246,97,26)" rx="2" ry="2" />
<text  x="129.10" y="511.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (2 samples, 0.02%)</title><rect x="188.4" y="565" width="0.2" height="15.0" fill="rgb(236,221,7)" rx="2" ry="2" />
<text  x="191.41" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="1015.4" y="437" width="0.1" height="15.0" fill="rgb(231,105,46)" rx="2" ry="2" />
<text  x="1018.41" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.04%)</title><rect x="1068.3" y="373" width="0.5" height="15.0" fill="rgb(235,140,49)" rx="2" ry="2" />
<text  x="1071.34" y="383.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.01%)</title><rect x="140.9" y="421" width="0.1" height="15.0" fill="rgb(210,126,17)" rx="2" ry="2" />
<text  x="143.92" y="431.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (4 samples, 0.04%)</title><rect x="1080.5" y="613" width="0.5" height="15.0" fill="rgb(209,166,1)" rx="2" ry="2" />
<text  x="1083.54" y="623.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.01%)</title><rect x="551.0" y="453" width="0.1" height="15.0" fill="rgb(223,225,39)" rx="2" ry="2" />
<text  x="553.99" y="463.5" ></text>
</g>
<g >
<title>ovl_setattr.part.0 (2 samples, 0.02%)</title><rect x="1024.6" y="357" width="0.2" height="15.0" fill="rgb(217,49,30)" rx="2" ry="2" />
<text  x="1027.56" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (126 samples, 1.16%)</title><rect x="846.2" y="517" width="13.7" height="15.0" fill="rgb(250,95,16)" rx="2" ry="2" />
<text  x="849.15" y="527.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.01%)</title><rect x="15.2" y="581" width="0.1" height="15.0" fill="rgb(251,175,30)" rx="2" ry="2" />
<text  x="18.23" y="591.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (1 samples, 0.01%)</title><rect x="1024.7" y="229" width="0.1" height="15.0" fill="rgb(219,19,36)" rx="2" ry="2" />
<text  x="1027.66" y="239.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.01%)</title><rect x="23.1" y="389" width="0.1" height="15.0" fill="rgb(209,141,44)" rx="2" ry="2" />
<text  x="26.07" y="399.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="14.0" y="629" width="0.2" height="15.0" fill="rgb(242,7,51)" rx="2" ry="2" />
<text  x="17.03" y="639.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="1062.9" y="277" width="0.1" height="15.0" fill="rgb(212,82,36)" rx="2" ry="2" />
<text  x="1065.89" y="287.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.01%)</title><rect x="1181.1" y="389" width="0.1" height="15.0" fill="rgb(253,155,28)" rx="2" ry="2" />
<text  x="1184.07" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.01%)</title><rect x="150.9" y="517" width="0.1" height="15.0" fill="rgb(205,219,45)" rx="2" ry="2" />
<text  x="153.94" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="1102.2" y="533" width="0.2" height="15.0" fill="rgb(250,104,10)" rx="2" ry="2" />
<text  x="1105.21" y="543.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (19 samples, 0.18%)</title><rect x="1009.5" y="485" width="2.1" height="15.0" fill="rgb(225,23,19)" rx="2" ry="2" />
<text  x="1012.53" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="1102.1" y="533" width="0.1" height="15.0" fill="rgb(217,202,8)" rx="2" ry="2" />
<text  x="1105.10" y="543.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (707 samples, 6.53%)</title><rect x="74.0" y="597" width="77.0" height="15.0" fill="rgb(242,211,21)" rx="2" ry="2" />
<text  x="77.04" y="607.5" >x86_64_s..</text>
</g>
<g >
<title>perf-exec (1 samples, 0.01%)</title><rect x="151.2" y="645" width="0.1" height="15.0" fill="rgb(227,83,20)" rx="2" ry="2" />
<text  x="154.16" y="655.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7 samples, 0.06%)</title><rect x="80.3" y="421" width="0.7" height="15.0" fill="rgb(236,29,24)" rx="2" ry="2" />
<text  x="83.25" y="431.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (8 samples, 0.07%)</title><rect x="519.4" y="501" width="0.9" height="15.0" fill="rgb(215,197,44)" rx="2" ry="2" />
<text  x="522.40" y="511.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.01%)</title><rect x="69.5" y="533" width="0.1" height="15.0" fill="rgb(229,170,41)" rx="2" ry="2" />
<text  x="72.47" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="15.7" y="501" width="0.1" height="15.0" fill="rgb(253,204,39)" rx="2" ry="2" />
<text  x="18.66" y="511.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (55 samples, 0.51%)</title><rect x="990.6" y="501" width="6.0" height="15.0" fill="rgb(248,176,52)" rx="2" ry="2" />
<text  x="993.57" y="511.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::remap_file (3 samples, 0.03%)</title><rect x="1024.4" y="565" width="0.4" height="15.0" fill="rgb(216,89,54)" rx="2" ry="2" />
<text  x="1027.45" y="575.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.47%)</title><rect x="435.2" y="565" width="5.6" height="15.0" fill="rgb(207,113,53)" rx="2" ry="2" />
<text  x="438.21" y="575.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.02%)</title><rect x="1105.5" y="581" width="0.2" height="15.0" fill="rgb(234,159,35)" rx="2" ry="2" />
<text  x="1108.48" y="591.5" ></text>
</g>
<g >
<title>vfs_write (3 samples, 0.03%)</title><rect x="158.1" y="421" width="0.4" height="15.0" fill="rgb(206,119,42)" rx="2" ry="2" />
<text  x="161.13" y="431.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.01%)</title><rect x="1024.2" y="373" width="0.1" height="15.0" fill="rgb(252,69,12)" rx="2" ry="2" />
<text  x="1027.23" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (6 samples, 0.06%)</title><rect x="1067.0" y="181" width="0.7" height="15.0" fill="rgb(230,216,49)" rx="2" ry="2" />
<text  x="1070.03" y="191.5" ></text>
</g>
<g >
<title>__run_hrtimer (8 samples, 0.07%)</title><rect x="78.5" y="357" width="0.9" height="15.0" fill="rgb(220,39,49)" rx="2" ry="2" />
<text  x="81.51" y="367.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (79 samples, 0.73%)</title><rect x="929.7" y="533" width="8.6" height="15.0" fill="rgb(250,224,5)" rx="2" ry="2" />
<text  x="932.69" y="543.5" ></text>
</g>
<g >
<title>__schedule (85 samples, 0.78%)</title><rect x="1175.7" y="485" width="9.3" height="15.0" fill="rgb(219,102,11)" rx="2" ry="2" />
<text  x="1178.73" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.01%)</title><rect x="158.1" y="197" width="0.1" height="15.0" fill="rgb(219,107,28)" rx="2" ry="2" />
<text  x="161.13" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="1024.6" y="469" width="0.2" height="15.0" fill="rgb(219,110,13)" rx="2" ry="2" />
<text  x="1027.56" y="479.5" ></text>
</g>
<g >
<title>alloc_set_pte (2 samples, 0.02%)</title><rect x="551.1" y="373" width="0.2" height="15.0" fill="rgb(211,161,20)" rx="2" ry="2" />
<text  x="554.10" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.01%)</title><rect x="1049.9" y="485" width="0.1" height="15.0" fill="rgb(231,34,0)" rx="2" ry="2" />
<text  x="1052.93" y="495.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.01%)</title><rect x="1022.9" y="261" width="0.1" height="15.0" fill="rgb(218,125,52)" rx="2" ry="2" />
<text  x="1025.92" y="271.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="521.8" y="421" width="0.4" height="15.0" fill="rgb(225,37,2)" rx="2" ry="2" />
<text  x="524.80" y="431.5" ></text>
</g>
<g >
<title>rb_next (2 samples, 0.02%)</title><rect x="122.6" y="405" width="0.2" height="15.0" fill="rgb(221,163,17)" rx="2" ry="2" />
<text  x="125.62" y="415.5" ></text>
</g>
<g >
<title>llist_reverse_order (2 samples, 0.02%)</title><rect x="70.6" y="549" width="0.2" height="15.0" fill="rgb(236,179,3)" rx="2" ry="2" />
<text  x="73.56" y="559.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="20.8" y="341" width="0.1" height="15.0" fill="rgb(254,210,48)" rx="2" ry="2" />
<text  x="23.78" y="351.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (1 samples, 0.01%)</title><rect x="1068.2" y="517" width="0.1" height="15.0" fill="rgb(226,108,47)" rx="2" ry="2" />
<text  x="1071.23" y="527.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.01%)</title><rect x="73.9" y="581" width="0.1" height="15.0" fill="rgb(217,150,10)" rx="2" ry="2" />
<text  x="76.93" y="591.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (30 samples, 0.28%)</title><rect x="453.3" y="533" width="3.3" height="15.0" fill="rgb(212,138,47)" rx="2" ry="2" />
<text  x="456.29" y="543.5" ></text>
</g>
<g >
<title>ext4_do_flush_completed_IO.isra.0 (8 samples, 0.07%)</title><rect x="15.3" y="549" width="0.9" height="15.0" fill="rgb(211,76,50)" rx="2" ry="2" />
<text  x="18.34" y="559.5" ></text>
</g>
<g >
<title>proc_reg_read_iter (1 samples, 0.01%)</title><rect x="15.0" y="533" width="0.1" height="15.0" fill="rgb(226,147,54)" rx="2" ry="2" />
<text  x="18.01" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="1101.3" y="597" width="0.2" height="15.0" fill="rgb(218,225,27)" rx="2" ry="2" />
<text  x="1104.34" y="607.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.06%)</title><rect x="1013.7" y="469" width="0.6" height="15.0" fill="rgb(205,48,51)" rx="2" ry="2" />
<text  x="1016.66" y="479.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (32 samples, 0.30%)</title><rect x="520.3" y="501" width="3.5" height="15.0" fill="rgb(253,127,5)" rx="2" ry="2" />
<text  x="523.27" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (170 samples, 1.57%)</title><rect x="523.8" y="549" width="18.5" height="15.0" fill="rgb(251,26,19)" rx="2" ry="2" />
<text  x="526.76" y="559.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (55 samples, 0.51%)</title><rect x="990.6" y="517" width="6.0" height="15.0" fill="rgb(221,11,18)" rx="2" ry="2" />
<text  x="993.57" y="527.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (13 samples, 0.12%)</title><rect x="532.3" y="469" width="1.4" height="15.0" fill="rgb(240,149,31)" rx="2" ry="2" />
<text  x="535.25" y="479.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.02%)</title><rect x="546.7" y="485" width="0.3" height="15.0" fill="rgb(226,183,17)" rx="2" ry="2" />
<text  x="549.74" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (34 samples, 0.31%)</title><rect x="1020.6" y="469" width="3.7" height="15.0" fill="rgb(218,53,44)" rx="2" ry="2" />
<text  x="1023.64" y="479.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (8 samples, 0.07%)</title><rect x="124.4" y="405" width="0.8" height="15.0" fill="rgb(246,39,48)" rx="2" ry="2" />
<text  x="127.36" y="415.5" ></text>
</g>
<g >
<title>account_page_dirtied (3 samples, 0.03%)</title><rect x="1023.7" y="293" width="0.3" height="15.0" fill="rgb(238,106,46)" rx="2" ry="2" />
<text  x="1026.68" y="303.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="1187.0" y="453" width="0.1" height="15.0" fill="rgb(207,28,2)" rx="2" ry="2" />
<text  x="1189.95" y="463.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.01%)</title><rect x="158.3" y="197" width="0.2" height="15.0" fill="rgb(211,86,15)" rx="2" ry="2" />
<text  x="161.34" y="207.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (24 samples, 0.22%)</title><rect x="483.1" y="517" width="2.6" height="15.0" fill="rgb(245,5,53)" rx="2" ry="2" />
<text  x="486.13" y="527.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function (1 samples, 0.01%)</title><rect x="466.6" y="421" width="0.1" height="15.0" fill="rgb(233,99,53)" rx="2" ry="2" />
<text  x="469.58" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.18%)</title><rect x="1001.6" y="453" width="2.0" height="15.0" fill="rgb(236,166,30)" rx="2" ry="2" />
<text  x="1004.57" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="447.5" y="501" width="0.1" height="15.0" fill="rgb(250,7,19)" rx="2" ry="2" />
<text  x="450.52" y="511.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.01%)</title><rect x="1105.7" y="613" width="0.1" height="15.0" fill="rgb(246,122,7)" rx="2" ry="2" />
<text  x="1108.70" y="623.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="1015.1" y="453" width="0.2" height="15.0" fill="rgb(240,218,37)" rx="2" ry="2" />
<text  x="1018.08" y="463.5" ></text>
</g>
<g >
<title>arch_call_rest_init (460 samples, 4.25%)</title><rect x="1139.9" y="565" width="50.1" height="15.0" fill="rgb(225,22,27)" rx="2" ry="2" />
<text  x="1142.90" y="575.5" >arch_..</text>
</g>
<g >
<title>native_sched_clock (4 samples, 0.04%)</title><rect x="1162.2" y="421" width="0.5" height="15.0" fill="rgb(245,47,38)" rx="2" ry="2" />
<text  x="1165.23" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.31%)</title><rect x="478.9" y="581" width="3.7" height="15.0" fill="rgb(241,201,25)" rx="2" ry="2" />
<text  x="481.88" y="591.5" ></text>
</g>
<g >
<title>native_sched_clock (6 samples, 0.06%)</title><rect x="115.5" y="437" width="0.7" height="15.0" fill="rgb(244,197,0)" rx="2" ry="2" />
<text  x="118.54" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.02%)</title><rect x="970.5" y="501" width="0.3" height="15.0" fill="rgb(231,56,48)" rx="2" ry="2" />
<text  x="973.53" y="511.5" ></text>
</g>
<g >
<title>__default_send_IPI_dest_field (1 samples, 0.01%)</title><rect x="18.9" y="181" width="0.1" height="15.0" fill="rgb(230,210,26)" rx="2" ry="2" />
<text  x="21.93" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="123.9" y="421" width="0.1" height="15.0" fill="rgb(226,183,26)" rx="2" ry="2" />
<text  x="126.93" y="431.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (7 samples, 0.06%)</title><rect x="22.0" y="421" width="0.7" height="15.0" fill="rgb(252,46,28)" rx="2" ry="2" />
<text  x="24.98" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (114 samples, 1.05%)</title><rect x="524.6" y="517" width="12.4" height="15.0" fill="rgb(253,13,8)" rx="2" ry="2" />
<text  x="527.63" y="527.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (223 samples, 2.06%)</title><rect x="990.0" y="565" width="24.3" height="15.0" fill="rgb(252,59,11)" rx="2" ry="2" />
<text  x="993.03" y="575.5" >&lt;..</text>
</g>
<g >
<title>copy_strings.isra.0 (1 samples, 0.01%)</title><rect x="151.2" y="565" width="0.1" height="15.0" fill="rgb(212,134,42)" rx="2" ry="2" />
<text  x="154.16" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (29 samples, 0.27%)</title><rect x="533.7" y="453" width="3.1" height="15.0" fill="rgb(210,193,2)" rx="2" ry="2" />
<text  x="536.67" y="463.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.01%)</title><rect x="1024.7" y="309" width="0.1" height="15.0" fill="rgb(235,177,46)" rx="2" ry="2" />
<text  x="1027.66" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (14 samples, 0.13%)</title><rect x="1185.5" y="501" width="1.6" height="15.0" fill="rgb(221,175,29)" rx="2" ry="2" />
<text  x="1188.53" y="511.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (14 samples, 0.13%)</title><rect x="1051.3" y="517" width="1.6" height="15.0" fill="rgb(228,189,24)" rx="2" ry="2" />
<text  x="1054.35" y="527.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (256 samples, 2.36%)</title><rect x="799.6" y="485" width="27.9" height="15.0" fill="rgb(213,133,49)" rx="2" ry="2" />
<text  x="802.64" y="495.5" >c..</text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.02%)</title><rect x="1060.8" y="501" width="0.2" height="15.0" fill="rgb(247,50,30)" rx="2" ry="2" />
<text  x="1063.83" y="511.5" ></text>
</g>
<g >
<title>generic_exec_single (4 samples, 0.04%)</title><rect x="1137.3" y="453" width="0.4" height="15.0" fill="rgb(238,212,18)" rx="2" ry="2" />
<text  x="1140.28" y="463.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (3 samples, 0.03%)</title><rect x="1050.4" y="533" width="0.3" height="15.0" fill="rgb(222,165,24)" rx="2" ry="2" />
<text  x="1053.37" y="543.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (4 samples, 0.04%)</title><rect x="1068.3" y="437" width="0.5" height="15.0" fill="rgb(253,24,30)" rx="2" ry="2" />
<text  x="1071.34" y="447.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (3 samples, 0.03%)</title><rect x="966.0" y="565" width="0.3" height="15.0" fill="rgb(228,121,7)" rx="2" ry="2" />
<text  x="968.96" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (5 samples, 0.05%)</title><rect x="1138.9" y="565" width="0.6" height="15.0" fill="rgb(206,167,2)" rx="2" ry="2" />
<text  x="1141.92" y="575.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="971.4" y="501" width="0.1" height="15.0" fill="rgb(247,40,35)" rx="2" ry="2" />
<text  x="974.40" y="511.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.01%)</title><rect x="489.4" y="533" width="0.2" height="15.0" fill="rgb(251,209,8)" rx="2" ry="2" />
<text  x="492.45" y="543.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.01%)</title><rect x="1163.1" y="437" width="0.1" height="15.0" fill="rgb(216,179,28)" rx="2" ry="2" />
<text  x="1166.10" y="447.5" ></text>
</g>
<g >
<title>event_function_call (63 samples, 0.58%)</title><rect x="151.3" y="421" width="6.8" height="15.0" fill="rgb(240,53,17)" rx="2" ry="2" />
<text  x="154.26" y="431.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.01%)</title><rect x="80.9" y="245" width="0.1" height="15.0" fill="rgb(239,25,14)" rx="2" ry="2" />
<text  x="83.90" y="255.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.03%)</title><rect x="1067.9" y="389" width="0.3" height="15.0" fill="rgb(249,18,0)" rx="2" ry="2" />
<text  x="1070.90" y="399.5" ></text>
</g>
<g >
<title>handle_pte_fault (8 samples, 0.07%)</title><rect x="1061.3" y="421" width="0.8" height="15.0" fill="rgb(205,73,53)" rx="2" ry="2" />
<text  x="1064.26" y="431.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (2 samples, 0.02%)</title><rect x="1020.7" y="309" width="0.3" height="15.0" fill="rgb(247,33,34)" rx="2" ry="2" />
<text  x="1023.74" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function (1 samples, 0.01%)</title><rect x="827.4" y="469" width="0.1" height="15.0" fill="rgb(206,44,47)" rx="2" ry="2" />
<text  x="830.42" y="479.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="1005.9" y="437" width="0.1" height="15.0" fill="rgb(222,108,22)" rx="2" ry="2" />
<text  x="1008.93" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (1 samples, 0.01%)</title><rect x="1170.6" y="469" width="0.1" height="15.0" fill="rgb(207,108,50)" rx="2" ry="2" />
<text  x="1173.61" y="479.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="1062.9" y="197" width="0.1" height="15.0" fill="rgb(237,199,35)" rx="2" ry="2" />
<text  x="1065.89" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="971.4" y="485" width="0.1" height="15.0" fill="rgb(226,106,34)" rx="2" ry="2" />
<text  x="974.40" y="495.5" ></text>
</g>
<g >
<title>ext4_page_mkwrite (6 samples, 0.06%)</title><rect x="1061.5" y="357" width="0.6" height="15.0" fill="rgb(250,144,10)" rx="2" ry="2" />
<text  x="1064.48" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.02%)</title><rect x="990.4" y="485" width="0.2" height="15.0" fill="rgb(217,20,26)" rx="2" ry="2" />
<text  x="993.36" y="495.5" ></text>
</g>
<g >
<title>iput_final (4 samples, 0.04%)</title><rect x="472.6" y="261" width="0.4" height="15.0" fill="rgb(248,154,16)" rx="2" ry="2" />
<text  x="475.57" y="271.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="521.4" y="437" width="0.2" height="15.0" fill="rgb(236,25,38)" rx="2" ry="2" />
<text  x="524.36" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (23 samples, 0.21%)</title><rect x="514.7" y="469" width="2.5" height="15.0" fill="rgb(224,60,32)" rx="2" ry="2" />
<text  x="517.72" y="479.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (2 samples, 0.02%)</title><rect x="1062.8" y="357" width="0.2" height="15.0" fill="rgb(243,29,50)" rx="2" ry="2" />
<text  x="1065.79" y="367.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.01%)</title><rect x="20.3" y="373" width="0.2" height="15.0" fill="rgb(237,53,41)" rx="2" ry="2" />
<text  x="23.35" y="383.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (1 samples, 0.01%)</title><rect x="1050.0" y="517" width="0.2" height="15.0" fill="rgb(222,116,16)" rx="2" ry="2" />
<text  x="1053.04" y="527.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (7 samples, 0.06%)</title><rect x="147.5" y="485" width="0.7" height="15.0" fill="rgb(237,122,6)" rx="2" ry="2" />
<text  x="150.45" y="495.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (398 samples, 3.67%)</title><rect x="498.9" y="565" width="43.4" height="15.0" fill="rgb(209,25,49)" rx="2" ry="2" />
<text  x="501.93" y="575.5" >&lt;das..</text>
</g>
<g >
<title>ktime_get (3 samples, 0.03%)</title><rect x="1187.4" y="485" width="0.3" height="15.0" fill="rgb(239,223,1)" rx="2" ry="2" />
<text  x="1190.39" y="495.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.03%)</title><rect x="453.0" y="501" width="0.3" height="15.0" fill="rgb(207,121,36)" rx="2" ry="2" />
<text  x="455.96" y="511.5" ></text>
</g>
</g>
</svg>
