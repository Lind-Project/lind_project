<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="267.4" y="533" width="0.2" height="15.0" fill="rgb(229,38,37)" rx="2" ry="2" />
<text  x="270.42" y="543.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="1068.2" y="277" width="0.2" height="15.0" fill="rgb(210,193,38)" rx="2" ry="2" />
<text  x="1071.25" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="200.7" y="389" width="0.2" height="15.0" fill="rgb(227,224,54)" rx="2" ry="2" />
<text  x="203.73" y="399.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (334 samples, 5.39%)</title><rect x="687.6" y="373" width="63.6" height="15.0" fill="rgb(246,109,6)" rx="2" ry="2" />
<text  x="690.55" y="383.5" >ringbu..</text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="265.7" y="357" width="0.2" height="15.0" fill="rgb(214,195,1)" rx="2" ry="2" />
<text  x="268.70" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="264.9" y="405" width="0.8" height="15.0" fill="rgb(209,126,7)" rx="2" ry="2" />
<text  x="267.94" y="415.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="997.0" y="245" width="0.2" height="15.0" fill="rgb(220,141,13)" rx="2" ry="2" />
<text  x="999.99" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.02%)</title><rect x="1141.0" y="485" width="0.2" height="15.0" fill="rgb(206,225,40)" rx="2" ry="2" />
<text  x="1144.03" y="495.5" ></text>
</g>
<g >
<title>native_sched_clock (4 samples, 0.06%)</title><rect x="117.3" y="453" width="0.7" height="15.0" fill="rgb(216,137,11)" rx="2" ry="2" />
<text  x="120.27" y="463.5" ></text>
</g>
<g >
<title>[unknown] (168 samples, 2.71%)</title><rect x="1140.5" y="581" width="32.0" height="15.0" fill="rgb(251,198,31)" rx="2" ry="2" />
<text  x="1143.46" y="591.5" >[u..</text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (1 samples, 0.02%)</title><rect x="146.0" y="357" width="0.2" height="15.0" fill="rgb(253,102,47)" rx="2" ry="2" />
<text  x="149.04" y="367.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="264.7" y="421" width="0.2" height="15.0" fill="rgb(246,66,39)" rx="2" ry="2" />
<text  x="267.75" y="431.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (11 samples, 0.18%)</title><rect x="1170.4" y="565" width="2.1" height="15.0" fill="rgb(242,98,37)" rx="2" ry="2" />
<text  x="1173.37" y="575.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (4 samples, 0.06%)</title><rect x="264.9" y="261" width="0.8" height="15.0" fill="rgb(222,114,34)" rx="2" ry="2" />
<text  x="267.94" y="271.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.02%)</title><rect x="1172.5" y="341" width="0.2" height="15.0" fill="rgb(245,222,7)" rx="2" ry="2" />
<text  x="1175.47" y="351.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (30 samples, 0.48%)</title><rect x="977.4" y="421" width="5.7" height="15.0" fill="rgb(231,160,48)" rx="2" ry="2" />
<text  x="980.36" y="431.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="687.4" y="213" width="0.2" height="15.0" fill="rgb(245,42,13)" rx="2" ry="2" />
<text  x="690.36" y="223.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (10 samples, 0.16%)</title><rect x="134.6" y="421" width="1.9" height="15.0" fill="rgb(205,165,22)" rx="2" ry="2" />
<text  x="137.61" y="431.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.02%)</title><rect x="131.9" y="405" width="0.2" height="15.0" fill="rgb(219,150,6)" rx="2" ry="2" />
<text  x="134.94" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="1025.6" y="309" width="0.2" height="15.0" fill="rgb(215,161,44)" rx="2" ry="2" />
<text  x="1028.57" y="319.5" ></text>
</g>
<g >
<title>shrink_node (4 samples, 0.06%)</title><rect x="1174.8" y="517" width="0.7" height="15.0" fill="rgb(223,28,13)" rx="2" ry="2" />
<text  x="1177.76" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (6 samples, 0.10%)</title><rect x="138.4" y="517" width="1.2" height="15.0" fill="rgb(222,138,6)" rx="2" ry="2" />
<text  x="141.42" y="527.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (1 samples, 0.02%)</title><rect x="997.2" y="373" width="0.2" height="15.0" fill="rgb(242,129,50)" rx="2" ry="2" />
<text  x="1000.18" y="383.5" ></text>
</g>
<g >
<title>shrink_slab_memcg (1 samples, 0.02%)</title><rect x="1175.3" y="469" width="0.2" height="15.0" fill="rgb(224,174,6)" rx="2" ry="2" />
<text  x="1178.33" y="479.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="1063.9" y="357" width="0.2" height="15.0" fill="rgb(207,63,2)" rx="2" ry="2" />
<text  x="1066.86" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_idle_got_tick (1 samples, 0.02%)</title><rect x="118.2" y="469" width="0.2" height="15.0" fill="rgb(232,218,9)" rx="2" ry="2" />
<text  x="121.23" y="479.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.08%)</title><rect x="187.6" y="373" width="0.9" height="15.0" fill="rgb(223,180,41)" rx="2" ry="2" />
<text  x="190.58" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.02%)</title><rect x="123.2" y="485" width="0.2" height="15.0" fill="rgb(219,219,49)" rx="2" ry="2" />
<text  x="126.18" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (19 samples, 0.31%)</title><rect x="203.8" y="389" width="3.6" height="15.0" fill="rgb(218,114,17)" rx="2" ry="2" />
<text  x="206.78" y="399.5" ></text>
</g>
<g >
<title>perf_mmap__push (4 samples, 0.06%)</title><rect x="264.9" y="501" width="0.8" height="15.0" fill="rgb(226,50,43)" rx="2" ry="2" />
<text  x="267.94" y="511.5" ></text>
</g>
<g >
<title>pollwake (1 samples, 0.02%)</title><rect x="39.7" y="389" width="0.2" height="15.0" fill="rgb(251,207,31)" rx="2" ry="2" />
<text  x="42.72" y="399.5" ></text>
</g>
<g >
<title>_perf_ioctl (63 samples, 1.02%)</title><rect x="252.7" y="405" width="12.0" height="15.0" fill="rgb(226,143,42)" rx="2" ry="2" />
<text  x="255.75" y="415.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="265.9" y="437" width="0.2" height="15.0" fill="rgb(217,55,46)" rx="2" ry="2" />
<text  x="268.89" y="447.5" ></text>
</g>
<g >
<title>kthread (3 samples, 0.05%)</title><rect x="39.9" y="565" width="0.6" height="15.0" fill="rgb(216,128,19)" rx="2" ry="2" />
<text  x="42.91" y="575.5" ></text>
</g>
<g >
<title>llist_add_batch (4 samples, 0.06%)</title><rect x="135.8" y="405" width="0.7" height="15.0" fill="rgb(248,98,41)" rx="2" ry="2" />
<text  x="138.75" y="415.5" ></text>
</g>
<g >
<title>NaClMutexLock (1 samples, 0.02%)</title><rect x="1142.2" y="565" width="0.2" height="15.0" fill="rgb(226,20,11)" rx="2" ry="2" />
<text  x="1145.18" y="575.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="39.9" y="309" width="0.2" height="15.0" fill="rgb(217,9,28)" rx="2" ry="2" />
<text  x="42.91" y="319.5" ></text>
</g>
<g >
<title>sched_idle_set_state (1 samples, 0.02%)</title><rect x="192.5" y="421" width="0.2" height="15.0" fill="rgb(245,130,14)" rx="2" ry="2" />
<text  x="195.54" y="431.5" ></text>
</g>
<g >
<title>psi_avgs_work (2 samples, 0.03%)</title><rect x="40.1" y="517" width="0.4" height="15.0" fill="rgb(220,58,51)" rx="2" ry="2" />
<text  x="43.10" y="527.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (2 samples, 0.03%)</title><rect x="248.0" y="453" width="0.4" height="15.0" fill="rgb(239,178,3)" rx="2" ry="2" />
<text  x="250.98" y="463.5" ></text>
</g>
<g >
<title>NaClSysWrite (2 samples, 0.03%)</title><rect x="765.7" y="549" width="0.4" height="15.0" fill="rgb(207,106,54)" rx="2" ry="2" />
<text  x="768.67" y="559.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.02%)</title><rect x="1188.5" y="437" width="0.2" height="15.0" fill="rgb(213,15,36)" rx="2" ry="2" />
<text  x="1191.48" y="447.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (4 samples, 0.06%)</title><rect x="1189.0" y="389" width="0.8" height="15.0" fill="rgb(218,67,46)" rx="2" ry="2" />
<text  x="1192.05" y="399.5" ></text>
</g>
<g >
<title>shrink_page_list (2 samples, 0.03%)</title><rect x="1174.9" y="453" width="0.4" height="15.0" fill="rgb(231,147,31)" rx="2" ry="2" />
<text  x="1177.95" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (64 samples, 1.03%)</title><rect x="1068.6" y="421" width="12.2" height="15.0" fill="rgb(207,30,18)" rx="2" ry="2" />
<text  x="1071.63" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.24%)</title><rect x="1065.6" y="389" width="2.8" height="15.0" fill="rgb(238,190,11)" rx="2" ry="2" />
<text  x="1068.58" y="399.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="265.7" y="341" width="0.2" height="15.0" fill="rgb(242,83,4)" rx="2" ry="2" />
<text  x="268.70" y="351.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.02%)</title><rect x="1172.5" y="325" width="0.2" height="15.0" fill="rgb(237,25,2)" rx="2" ry="2" />
<text  x="1175.47" y="335.5" ></text>
</g>
<g >
<title>[sel_ldr] (4,178 samples, 67.46%)</title><rect x="306.3" y="581" width="796.1" height="15.0" fill="rgb(235,173,12)" rx="2" ry="2" />
<text  x="309.29" y="591.5" >[sel_ldr]</text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 1.23%)</title><rect x="822.5" y="437" width="14.4" height="15.0" fill="rgb(247,191,20)" rx="2" ry="2" />
<text  x="825.45" y="447.5" ></text>
</g>
<g >
<title>nohz_csd_func (10 samples, 0.16%)</title><rect x="126.2" y="501" width="1.9" height="15.0" fill="rgb(218,83,21)" rx="2" ry="2" />
<text  x="129.23" y="511.5" ></text>
</g>
<g >
<title>queue_delayed_work_on (1 samples, 0.02%)</title><rect x="40.3" y="501" width="0.2" height="15.0" fill="rgb(248,35,24)" rx="2" ry="2" />
<text  x="43.30" y="511.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.16%)</title><rect x="392.6" y="373" width="1.9" height="15.0" fill="rgb(226,6,30)" rx="2" ry="2" />
<text  x="395.60" y="383.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (693 samples, 11.19%)</title><rect x="449.8" y="405" width="132.0" height="15.0" fill="rgb(242,118,17)" rx="2" ry="2" />
<text  x="452.76" y="415.5" >ringbuf::ring_bu..</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="1068.2" y="293" width="0.2" height="15.0" fill="rgb(213,119,50)" rx="2" ry="2" />
<text  x="1071.25" y="303.5" ></text>
</g>
<g >
<title>ctx_resched (1 samples, 0.02%)</title><rect x="265.7" y="373" width="0.2" height="15.0" fill="rgb(247,206,46)" rx="2" ry="2" />
<text  x="268.70" y="383.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.02%)</title><rect x="118.2" y="485" width="0.2" height="15.0" fill="rgb(244,192,48)" rx="2" ry="2" />
<text  x="121.23" y="495.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (16 samples, 0.26%)</title><rect x="391.5" y="421" width="3.0" height="15.0" fill="rgb(220,83,35)" rx="2" ry="2" />
<text  x="394.46" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="1020.2" y="293" width="2.3" height="15.0" fill="rgb(229,192,22)" rx="2" ry="2" />
<text  x="1023.23" y="303.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (17 samples, 0.27%)</title><rect x="388.2" y="389" width="3.3" height="15.0" fill="rgb(253,219,46)" rx="2" ry="2" />
<text  x="391.22" y="399.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="687.4" y="309" width="0.2" height="15.0" fill="rgb(245,98,49)" rx="2" ry="2" />
<text  x="690.36" y="319.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (945 samples, 15.26%)</title><rect x="585.6" y="405" width="180.1" height="15.0" fill="rgb(207,191,43)" rx="2" ry="2" />
<text  x="588.61" y="415.5" >ringbuf::consumer::Cons..</text>
</g>
<g >
<title>CompareAndSwap (2 samples, 0.03%)</title><rect x="1140.5" y="565" width="0.3" height="15.0" fill="rgb(236,164,17)" rx="2" ry="2" />
<text  x="1143.46" y="575.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="39.2" y="453" width="0.1" height="15.0" fill="rgb(214,94,18)" rx="2" ry="2" />
<text  x="42.15" y="463.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.08%)</title><rect x="124.9" y="501" width="0.9" height="15.0" fill="rgb(233,74,12)" rx="2" ry="2" />
<text  x="127.89" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (134 samples, 2.16%)</title><rect x="662.0" y="373" width="25.6" height="15.0" fill="rgb(240,111,1)" rx="2" ry="2" />
<text  x="665.02" y="383.5" >c..</text>
</g>
<g >
<title>tick_irq_enter (1 samples, 0.02%)</title><rect x="146.2" y="357" width="0.2" height="15.0" fill="rgb(209,79,35)" rx="2" ry="2" />
<text  x="149.23" y="367.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="997.4" y="405" width="0.2" height="15.0" fill="rgb(236,207,47)" rx="2" ry="2" />
<text  x="1000.37" y="415.5" ></text>
</g>
<g >
<title>cmd_record (68 samples, 1.10%)</title><rect x="252.7" y="565" width="13.0" height="15.0" fill="rgb(244,124,31)" rx="2" ry="2" />
<text  x="255.75" y="575.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="1026.1" y="389" width="0.2" height="15.0" fill="rgb(240,90,21)" rx="2" ry="2" />
<text  x="1029.14" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (51 samples, 0.82%)</title><rect x="918.9" y="437" width="9.7" height="15.0" fill="rgb(207,133,13)" rx="2" ry="2" />
<text  x="921.86" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="1063.9" y="341" width="0.2" height="15.0" fill="rgb(223,138,45)" rx="2" ry="2" />
<text  x="1066.86" y="351.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.02%)</title><rect x="1141.0" y="469" width="0.2" height="15.0" fill="rgb(216,154,30)" rx="2" ry="2" />
<text  x="1144.03" y="479.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (2 samples, 0.03%)</title><rect x="937.2" y="405" width="0.3" height="15.0" fill="rgb(250,197,39)" rx="2" ry="2" />
<text  x="940.16" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (148 samples, 2.39%)</title><rect x="394.5" y="405" width="28.2" height="15.0" fill="rgb(212,13,39)" rx="2" ry="2" />
<text  x="397.51" y="415.5" >c..</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="1068.2" y="309" width="0.2" height="15.0" fill="rgb(241,160,25)" rx="2" ry="2" />
<text  x="1071.25" y="319.5" ></text>
</g>
<g >
<title>start_kernel (594 samples, 9.59%)</title><rect x="139.6" y="533" width="113.1" height="15.0" fill="rgb(254,102,9)" rx="2" ry="2" />
<text  x="142.57" y="543.5" >start_kernel</text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.03%)</title><rect x="928.8" y="389" width="0.4" height="15.0" fill="rgb(240,134,43)" rx="2" ry="2" />
<text  x="931.77" y="399.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (4 samples, 0.06%)</title><rect x="1052.4" y="389" width="0.8" height="15.0" fill="rgb(225,146,53)" rx="2" ry="2" />
<text  x="1055.43" y="399.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="44.5" y="341" width="0.2" height="15.0" fill="rgb(216,59,6)" rx="2" ry="2" />
<text  x="47.49" y="351.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.02%)</title><rect x="1141.0" y="453" width="0.2" height="15.0" fill="rgb(233,181,24)" rx="2" ry="2" />
<text  x="1144.03" y="463.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="1174.4" y="469" width="0.2" height="15.0" fill="rgb(206,161,9)" rx="2" ry="2" />
<text  x="1177.38" y="479.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="44.1" y="325" width="0.2" height="15.0" fill="rgb(222,78,6)" rx="2" ry="2" />
<text  x="47.11" y="335.5" ></text>
</g>
<g >
<title>__submit_bio_noacct_mq (1 samples, 0.02%)</title><rect x="1175.1" y="357" width="0.2" height="15.0" fill="rgb(251,77,34)" rx="2" ry="2" />
<text  x="1178.14" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="1025.9" y="309" width="0.2" height="15.0" fill="rgb(245,84,17)" rx="2" ry="2" />
<text  x="1028.95" y="319.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.02%)</title><rect x="192.7" y="437" width="0.2" height="15.0" fill="rgb(233,215,10)" rx="2" ry="2" />
<text  x="195.73" y="447.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (27 samples, 0.44%)</title><rect x="1184.9" y="565" width="5.1" height="15.0" fill="rgb(217,140,12)" rx="2" ry="2" />
<text  x="1187.86" y="575.5" ></text>
</g>
<g >
<title>[unknown]  (200 samples, 3.23%)</title><rect x="1102.4" y="581" width="38.1" height="15.0" fill="rgb(227,216,2)" rx="2" ry="2" />
<text  x="1105.35" y="591.5" >[un..</text>
</g>
<g >
<title>kick_ilb (3 samples, 0.05%)</title><rect x="1189.2" y="373" width="0.6" height="15.0" fill="rgb(206,111,43)" rx="2" ry="2" />
<text  x="1192.24" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (11 samples, 0.18%)</title><rect x="271.6" y="565" width="2.1" height="15.0" fill="rgb(219,112,43)" rx="2" ry="2" />
<text  x="274.61" y="575.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="1021.2" y="277" width="0.4" height="15.0" fill="rgb(223,154,23)" rx="2" ry="2" />
<text  x="1024.18" y="287.5" ></text>
</g>
<g >
<title>rcu_idle_exit (4 samples, 0.06%)</title><rect x="116.3" y="469" width="0.8" height="15.0" fill="rgb(211,201,52)" rx="2" ry="2" />
<text  x="119.32" y="479.5" ></text>
</g>
<g >
<title>page_referenced (1 samples, 0.02%)</title><rect x="1174.8" y="453" width="0.1" height="15.0" fill="rgb(225,208,54)" rx="2" ry="2" />
<text  x="1177.76" y="463.5" ></text>
</g>
<g >
<title>sched_clock_cpu (4 samples, 0.06%)</title><rect x="242.3" y="405" width="0.7" height="15.0" fill="rgb(225,178,23)" rx="2" ry="2" />
<text  x="245.27" y="415.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (2 samples, 0.03%)</title><rect x="1185.4" y="405" width="0.4" height="15.0" fill="rgb(242,24,37)" rx="2" ry="2" />
<text  x="1188.43" y="415.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (38 samples, 0.61%)</title><rect x="775.0" y="469" width="7.2" height="15.0" fill="rgb(235,185,38)" rx="2" ry="2" />
<text  x="778.01" y="479.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (1 samples, 0.02%)</title><rect x="997.0" y="85" width="0.2" height="15.0" fill="rgb(250,118,37)" rx="2" ry="2" />
<text  x="999.99" y="95.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.02%)</title><rect x="997.4" y="357" width="0.2" height="15.0" fill="rgb(205,190,43)" rx="2" ry="2" />
<text  x="1000.37" y="367.5" ></text>
</g>
<g >
<title>rest_init (27 samples, 0.44%)</title><rect x="1184.9" y="501" width="5.1" height="15.0" fill="rgb(232,136,29)" rx="2" ry="2" />
<text  x="1187.86" y="511.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="39.9" y="341" width="0.2" height="15.0" fill="rgb(229,77,39)" rx="2" ry="2" />
<text  x="42.91" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="388.0" y="357" width="0.2" height="15.0" fill="rgb(224,90,16)" rx="2" ry="2" />
<text  x="391.03" y="367.5" ></text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.03%)</title><rect x="1053.2" y="389" width="0.4" height="15.0" fill="rgb(222,162,45)" rx="2" ry="2" />
<text  x="1056.19" y="399.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.08%)</title><rect x="1137.8" y="405" width="0.9" height="15.0" fill="rgb(215,30,50)" rx="2" ry="2" />
<text  x="1140.79" y="415.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (3 samples, 0.05%)</title><rect x="784.3" y="517" width="0.6" height="15.0" fill="rgb(217,5,13)" rx="2" ry="2" />
<text  x="787.35" y="527.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.24%)</title><rect x="1060.2" y="389" width="2.9" height="15.0" fill="rgb(245,15,7)" rx="2" ry="2" />
<text  x="1063.24" y="399.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.10%)</title><rect x="252.7" y="581" width="13.0" height="15.0" fill="rgb(208,198,38)" rx="2" ry="2" />
<text  x="255.75" y="591.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.02%)</title><rect x="652.7" y="325" width="0.2" height="15.0" fill="rgb(229,82,13)" rx="2" ry="2" />
<text  x="655.68" y="335.5" ></text>
</g>
<g >
<title>ksys_write (4 samples, 0.06%)</title><rect x="264.9" y="373" width="0.8" height="15.0" fill="rgb(209,208,17)" rx="2" ry="2" />
<text  x="267.94" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (49 samples, 0.79%)</title><rect x="1175.5" y="485" width="9.4" height="15.0" fill="rgb(210,99,43)" rx="2" ry="2" />
<text  x="1178.52" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (30 samples, 0.48%)</title><rect x="922.9" y="373" width="5.7" height="15.0" fill="rgb(228,167,36)" rx="2" ry="2" />
<text  x="925.87" y="383.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="247.6" y="357" width="0.2" height="15.0" fill="rgb(223,134,5)" rx="2" ry="2" />
<text  x="250.60" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.05%)</title><rect x="1060.6" y="341" width="0.6" height="15.0" fill="rgb(223,184,53)" rx="2" ry="2" />
<text  x="1063.62" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2 samples, 0.03%)</title><rect x="928.8" y="341" width="0.4" height="15.0" fill="rgb(238,104,7)" rx="2" ry="2" />
<text  x="931.77" y="351.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (80 samples, 1.29%)</title><rect x="1151.5" y="565" width="15.3" height="15.0" fill="rgb(233,48,48)" rx="2" ry="2" />
<text  x="1154.51" y="575.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (1 samples, 0.02%)</title><rect x="1142.4" y="565" width="0.2" height="15.0" fill="rgb(214,226,11)" rx="2" ry="2" />
<text  x="1145.37" y="575.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (1 samples, 0.02%)</title><rect x="139.4" y="469" width="0.2" height="15.0" fill="rgb(214,178,44)" rx="2" ry="2" />
<text  x="142.38" y="479.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="1025.8" y="293" width="0.1" height="15.0" fill="rgb(220,78,11)" rx="2" ry="2" />
<text  x="1028.76" y="303.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.05%)</title><rect x="1062.5" y="325" width="0.6" height="15.0" fill="rgb(207,15,54)" rx="2" ry="2" />
<text  x="1065.53" y="335.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="265.9" y="421" width="0.2" height="15.0" fill="rgb(237,168,26)" rx="2" ry="2" />
<text  x="268.89" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="1025.8" y="309" width="0.1" height="15.0" fill="rgb(245,128,12)" rx="2" ry="2" />
<text  x="1028.76" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (74 samples, 1.19%)</title><rect x="822.8" y="405" width="14.1" height="15.0" fill="rgb(210,36,54)" rx="2" ry="2" />
<text  x="825.83" y="415.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (118 samples, 1.91%)</title><rect x="218.3" y="389" width="22.4" height="15.0" fill="rgb(207,155,47)" rx="2" ry="2" />
<text  x="221.26" y="399.5" >n..</text>
</g>
<g >
<title>___d_drop (1 samples, 0.02%)</title><rect x="1175.3" y="373" width="0.2" height="15.0" fill="rgb(216,52,53)" rx="2" ry="2" />
<text  x="1178.33" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="39.7" y="405" width="0.2" height="15.0" fill="rgb(220,42,43)" rx="2" ry="2" />
<text  x="42.72" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (86 samples, 1.39%)</title><rect x="869.1" y="437" width="16.4" height="15.0" fill="rgb(206,100,47)" rx="2" ry="2" />
<text  x="872.13" y="447.5" ></text>
</g>
<g >
<title>cpuacct_account_field (1 samples, 0.02%)</title><rect x="388.0" y="245" width="0.2" height="15.0" fill="rgb(229,80,36)" rx="2" ry="2" />
<text  x="391.03" y="255.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.03%)</title><rect x="940.4" y="421" width="0.4" height="15.0" fill="rgb(213,112,2)" rx="2" ry="2" />
<text  x="943.40" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="765.5" y="373" width="0.2" height="15.0" fill="rgb(240,139,3)" rx="2" ry="2" />
<text  x="768.48" y="383.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="265.9" y="309" width="0.2" height="15.0" fill="rgb(240,18,35)" rx="2" ry="2" />
<text  x="268.89" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1172.5" y="437" width="0.2" height="15.0" fill="rgb(246,217,14)" rx="2" ry="2" />
<text  x="1175.47" y="447.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.02%)</title><rect x="1189.4" y="325" width="0.2" height="15.0" fill="rgb(248,11,37)" rx="2" ry="2" />
<text  x="1192.43" y="335.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (184 samples, 2.97%)</title><rect x="942.3" y="357" width="35.1" height="15.0" fill="rgb(246,2,6)" rx="2" ry="2" />
<text  x="945.30" y="367.5" >__..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="264.9" y="421" width="0.8" height="15.0" fill="rgb(240,47,43)" rx="2" ry="2" />
<text  x="267.94" y="431.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="388.0" y="309" width="0.2" height="15.0" fill="rgb(208,43,2)" rx="2" ry="2" />
<text  x="391.03" y="319.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (15 samples, 0.24%)</title><rect x="204.5" y="373" width="2.9" height="15.0" fill="rgb(214,216,24)" rx="2" ry="2" />
<text  x="207.54" y="383.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (905 samples, 14.61%)</title><rect x="585.6" y="389" width="172.5" height="15.0" fill="rgb(240,6,0)" rx="2" ry="2" />
<text  x="588.61" y="399.5" >ringbuf::consumer::Con..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (33 samples, 0.53%)</title><rect x="1012.6" y="341" width="6.3" height="15.0" fill="rgb(223,76,49)" rx="2" ry="2" />
<text  x="1015.61" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (76 samples, 1.23%)</title><rect x="822.5" y="453" width="14.4" height="15.0" fill="rgb(249,191,53)" rx="2" ry="2" />
<text  x="825.45" y="463.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (2 samples, 0.03%)</title><rect x="329.5" y="533" width="0.4" height="15.0" fill="rgb(214,181,8)" rx="2" ry="2" />
<text  x="332.53" y="543.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (1 samples, 0.02%)</title><rect x="997.0" y="117" width="0.2" height="15.0" fill="rgb(211,23,19)" rx="2" ry="2" />
<text  x="999.99" y="127.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (3 samples, 0.05%)</title><rect x="1142.6" y="565" width="0.5" height="15.0" fill="rgb(233,31,16)" rx="2" ry="2" />
<text  x="1145.56" y="575.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.82%)</title><rect x="918.9" y="421" width="9.7" height="15.0" fill="rgb(220,222,41)" rx="2" ry="2" />
<text  x="921.86" y="431.5" ></text>
</g>
<g >
<title>____sys_sendmsg (1 samples, 0.02%)</title><rect x="39.7" y="501" width="0.2" height="15.0" fill="rgb(222,106,11)" rx="2" ry="2" />
<text  x="42.72" y="511.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (23 samples, 0.37%)</title><rect x="647.3" y="341" width="4.4" height="15.0" fill="rgb(251,190,6)" rx="2" ry="2" />
<text  x="650.35" y="351.5" ></text>
</g>
<g >
<title>generic_exec_single (15 samples, 0.24%)</title><rect x="233.5" y="341" width="2.9" height="15.0" fill="rgb(242,49,29)" rx="2" ry="2" />
<text  x="236.50" y="351.5" ></text>
</g>
<g >
<title>new_sync_write (4 samples, 0.06%)</title><rect x="264.9" y="341" width="0.8" height="15.0" fill="rgb(244,170,17)" rx="2" ry="2" />
<text  x="267.94" y="351.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (295 samples, 4.76%)</title><rect x="44.7" y="469" width="56.2" height="15.0" fill="rgb(251,67,29)" rx="2" ry="2" />
<text  x="47.68" y="479.5" >mwait..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (51 samples, 0.82%)</title><rect x="918.9" y="389" width="9.7" height="15.0" fill="rgb(221,30,13)" rx="2" ry="2" />
<text  x="921.86" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (8 samples, 0.13%)</title><rect x="1066.9" y="357" width="1.5" height="15.0" fill="rgb(206,100,46)" rx="2" ry="2" />
<text  x="1069.91" y="367.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="240.7" y="389" width="0.2" height="15.0" fill="rgb(246,65,52)" rx="2" ry="2" />
<text  x="243.74" y="399.5" ></text>
</g>
<g >
<title>pick_next_task_idle (4 samples, 0.06%)</title><rect x="241.1" y="421" width="0.8" height="15.0" fill="rgb(209,59,2)" rx="2" ry="2" />
<text  x="244.12" y="431.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3 samples, 0.05%)</title><rect x="44.1" y="453" width="0.6" height="15.0" fill="rgb(222,129,43)" rx="2" ry="2" />
<text  x="47.11" y="463.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (1 samples, 0.02%)</title><rect x="1026.1" y="405" width="0.2" height="15.0" fill="rgb(212,215,25)" rx="2" ry="2" />
<text  x="1029.14" y="415.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="123.0" y="485" width="0.2" height="15.0" fill="rgb(222,154,1)" rx="2" ry="2" />
<text  x="125.99" y="495.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="245.5" y="421" width="0.2" height="15.0" fill="rgb(221,202,32)" rx="2" ry="2" />
<text  x="248.50" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (7 samples, 0.11%)</title><rect x="1024.8" y="357" width="1.3" height="15.0" fill="rgb(231,41,15)" rx="2" ry="2" />
<text  x="1027.80" y="367.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 1.02%)</title><rect x="252.7" y="229" width="12.0" height="15.0" fill="rgb(217,38,25)" rx="2" ry="2" />
<text  x="255.75" y="239.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (1 samples, 0.02%)</title><rect x="359.8" y="549" width="0.2" height="15.0" fill="rgb(221,88,48)" rx="2" ry="2" />
<text  x="362.83" y="559.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="687.4" y="165" width="0.2" height="15.0" fill="rgb(226,225,51)" rx="2" ry="2" />
<text  x="690.36" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="205.3" y="357" width="0.2" height="15.0" fill="rgb(250,158,49)" rx="2" ry="2" />
<text  x="208.30" y="367.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (4 samples, 0.06%)</title><rect x="1170.9" y="517" width="0.8" height="15.0" fill="rgb(226,70,33)" rx="2" ry="2" />
<text  x="1173.95" y="527.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.02%)</title><rect x="116.7" y="453" width="0.2" height="15.0" fill="rgb(223,82,17)" rx="2" ry="2" />
<text  x="119.70" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (175 samples, 2.83%)</title><rect x="885.5" y="405" width="33.4" height="15.0" fill="rgb(241,199,19)" rx="2" ry="2" />
<text  x="888.52" y="415.5" >co..</text>
</g>
<g >
<title>flush_smp_call_function_from_idle (21 samples, 0.34%)</title><rect x="248.4" y="469" width="4.0" height="15.0" fill="rgb(231,143,24)" rx="2" ry="2" />
<text  x="251.36" y="479.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (1 samples, 0.02%)</title><rect x="997.0" y="181" width="0.2" height="15.0" fill="rgb(228,4,5)" rx="2" ry="2" />
<text  x="999.99" y="191.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (54 samples, 0.87%)</title><rect x="1012.2" y="389" width="10.3" height="15.0" fill="rgb(242,164,17)" rx="2" ry="2" />
<text  x="1015.23" y="399.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (48 samples, 0.78%)</title><rect x="652.9" y="373" width="9.1" height="15.0" fill="rgb(223,136,46)" rx="2" ry="2" />
<text  x="655.87" y="383.5" ></text>
</g>
<g >
<title>shrink_slab (1 samples, 0.02%)</title><rect x="39.9" y="485" width="0.2" height="15.0" fill="rgb(238,145,53)" rx="2" ry="2" />
<text  x="42.91" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.02%)</title><rect x="267.2" y="501" width="0.2" height="15.0" fill="rgb(225,22,41)" rx="2" ry="2" />
<text  x="270.23" y="511.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (51 samples, 0.82%)</title><rect x="773.1" y="485" width="9.7" height="15.0" fill="rgb(205,195,54)" rx="2" ry="2" />
<text  x="776.10" y="495.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1 samples, 0.02%)</title><rect x="1139.1" y="421" width="0.2" height="15.0" fill="rgb(225,27,12)" rx="2" ry="2" />
<text  x="1142.13" y="431.5" ></text>
</g>
<g >
<title>NaClSimpleServiceAcceptConnection (1 samples, 0.02%)</title><rect x="1172.5" y="485" width="0.2" height="15.0" fill="rgb(209,224,13)" rx="2" ry="2" />
<text  x="1175.47" y="495.5" ></text>
</g>
<g >
<title>__evlist__enable (63 samples, 1.02%)</title><rect x="252.7" y="533" width="12.0" height="15.0" fill="rgb(249,189,46)" rx="2" ry="2" />
<text  x="255.75" y="543.5" ></text>
</g>
<g >
<title>super_cache_scan (1 samples, 0.02%)</title><rect x="1175.3" y="437" width="0.2" height="15.0" fill="rgb(217,217,51)" rx="2" ry="2" />
<text  x="1178.33" y="447.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.71%)</title><rect x="928.8" y="421" width="8.4" height="15.0" fill="rgb(220,61,0)" rx="2" ry="2" />
<text  x="931.77" y="431.5" ></text>
</g>
<g >
<title>notify_change (1 samples, 0.02%)</title><rect x="39.0" y="501" width="0.2" height="15.0" fill="rgb(236,99,1)" rx="2" ry="2" />
<text  x="41.96" y="511.5" ></text>
</g>
<g >
<title>remote_function (63 samples, 1.02%)</title><rect x="252.7" y="309" width="12.0" height="15.0" fill="rgb(231,175,33)" rx="2" ry="2" />
<text  x="255.75" y="319.5" ></text>
</g>
<g >
<title>napi_poll (1 samples, 0.02%)</title><rect x="997.0" y="229" width="0.2" height="15.0" fill="rgb(250,101,22)" rx="2" ry="2" />
<text  x="999.99" y="239.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="942.1" y="357" width="0.2" height="15.0" fill="rgb(230,167,20)" rx="2" ry="2" />
<text  x="945.11" y="367.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="216.7" y="261" width="0.2" height="15.0" fill="rgb(208,71,54)" rx="2" ry="2" />
<text  x="219.73" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="122.2" y="405" width="0.4" height="15.0" fill="rgb(243,17,8)" rx="2" ry="2" />
<text  x="125.23" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (44 samples, 0.71%)</title><rect x="928.8" y="437" width="8.4" height="15.0" fill="rgb(247,156,43)" rx="2" ry="2" />
<text  x="931.77" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.24%)</title><rect x="1060.2" y="357" width="2.9" height="15.0" fill="rgb(236,160,4)" rx="2" ry="2" />
<text  x="1063.24" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (12 samples, 0.19%)</title><rect x="120.7" y="469" width="2.3" height="15.0" fill="rgb(229,16,42)" rx="2" ry="2" />
<text  x="123.70" y="479.5" ></text>
</g>
<g >
<title>swap_writepage (1 samples, 0.02%)</title><rect x="1175.1" y="421" width="0.2" height="15.0" fill="rgb(239,33,18)" rx="2" ry="2" />
<text  x="1178.14" y="431.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (11 samples, 0.18%)</title><rect x="329.9" y="549" width="2.1" height="15.0" fill="rgb(205,181,14)" rx="2" ry="2" />
<text  x="332.91" y="559.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (1 samples, 0.02%)</title><rect x="1151.1" y="533" width="0.2" height="15.0" fill="rgb(232,153,28)" rx="2" ry="2" />
<text  x="1154.13" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="264.7" y="485" width="0.2" height="15.0" fill="rgb(242,193,1)" rx="2" ry="2" />
<text  x="267.75" y="495.5" ></text>
</g>
<g >
<title>cpu_startup_entry (520 samples, 8.40%)</title><rect x="40.5" y="549" width="99.1" height="15.0" fill="rgb(252,206,29)" rx="2" ry="2" />
<text  x="43.49" y="559.5" >cpu_startup..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1141.0" y="501" width="0.2" height="15.0" fill="rgb(235,95,35)" rx="2" ry="2" />
<text  x="1144.03" y="511.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (90 samples, 1.45%)</title><rect x="332.0" y="549" width="17.2" height="15.0" fill="rgb(253,153,29)" rx="2" ry="2" />
<text  x="335.01" y="559.5" ></text>
</g>
<g >
<title>rest_init (594 samples, 9.59%)</title><rect x="139.6" y="501" width="113.1" height="15.0" fill="rgb(230,81,47)" rx="2" ry="2" />
<text  x="142.57" y="511.5" >rest_init</text>
</g>
<g >
<title>__msecs_to_jiffies (2 samples, 0.03%)</title><rect x="217.7" y="389" width="0.4" height="15.0" fill="rgb(218,74,8)" rx="2" ry="2" />
<text  x="220.69" y="399.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.02%)</title><rect x="116.1" y="469" width="0.2" height="15.0" fill="rgb(237,141,47)" rx="2" ry="2" />
<text  x="119.13" y="479.5" ></text>
</g>
<g >
<title>pick_next_task_fair (41 samples, 0.66%)</title><rect x="128.7" y="485" width="7.8" height="15.0" fill="rgb(221,187,28)" rx="2" ry="2" />
<text  x="131.70" y="495.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.03%)</title><rect x="928.8" y="357" width="0.4" height="15.0" fill="rgb(246,163,36)" rx="2" ry="2" />
<text  x="931.77" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="265.3" y="149" width="0.2" height="15.0" fill="rgb(207,138,31)" rx="2" ry="2" />
<text  x="268.32" y="159.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.02%)</title><rect x="785.9" y="533" width="0.2" height="15.0" fill="rgb(224,137,39)" rx="2" ry="2" />
<text  x="788.87" y="543.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (2 samples, 0.03%)</title><rect x="937.2" y="421" width="0.3" height="15.0" fill="rgb(215,72,25)" rx="2" ry="2" />
<text  x="940.16" y="431.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1174.4" y="501" width="0.2" height="15.0" fill="rgb(254,8,50)" rx="2" ry="2" />
<text  x="1177.38" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (71 samples, 1.15%)</title><rect x="1027.7" y="389" width="13.5" height="15.0" fill="rgb(217,222,27)" rx="2" ry="2" />
<text  x="1030.66" y="399.5" ></text>
</g>
<g >
<title>HandleStackContext (76 samples, 1.23%)</title><rect x="315.4" y="549" width="14.5" height="15.0" fill="rgb(216,178,23)" rx="2" ry="2" />
<text  x="318.43" y="559.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.02%)</title><rect x="264.7" y="389" width="0.2" height="15.0" fill="rgb(224,107,27)" rx="2" ry="2" />
<text  x="267.75" y="399.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (2 samples, 0.03%)</title><rect x="245.5" y="437" width="0.4" height="15.0" fill="rgb(207,173,17)" rx="2" ry="2" />
<text  x="248.50" y="447.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (2 samples, 0.03%)</title><rect x="267.6" y="549" width="0.4" height="15.0" fill="rgb(220,136,41)" rx="2" ry="2" />
<text  x="270.61" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (5 samples, 0.08%)</title><rect x="273.7" y="565" width="1.0" height="15.0" fill="rgb(240,204,21)" rx="2" ry="2" />
<text  x="276.70" y="575.5" ></text>
</g>
<g >
<title>record__mmap_read_all (4 samples, 0.06%)</title><rect x="264.9" y="533" width="0.8" height="15.0" fill="rgb(234,196,7)" rx="2" ry="2" />
<text  x="267.94" y="543.5" ></text>
</g>
<g >
<title>shrink_dentry_list (1 samples, 0.02%)</title><rect x="39.9" y="405" width="0.2" height="15.0" fill="rgb(233,57,34)" rx="2" ry="2" />
<text  x="42.91" y="415.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (4 samples, 0.06%)</title><rect x="306.7" y="565" width="0.7" height="15.0" fill="rgb(251,146,49)" rx="2" ry="2" />
<text  x="309.67" y="575.5" ></text>
</g>
<g >
<title>__bitmap_and (1 samples, 0.02%)</title><rect x="39.2" y="421" width="0.1" height="15.0" fill="rgb(241,29,1)" rx="2" ry="2" />
<text  x="42.15" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (3 samples, 0.05%)</title><rect x="941.3" y="325" width="0.6" height="15.0" fill="rgb(216,210,32)" rx="2" ry="2" />
<text  x="944.35" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (71 samples, 1.15%)</title><rect x="275.2" y="565" width="13.6" height="15.0" fill="rgb(253,50,5)" rx="2" ry="2" />
<text  x="278.23" y="575.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (594 samples, 9.59%)</title><rect x="139.6" y="565" width="113.1" height="15.0" fill="rgb(245,101,3)" rx="2" ry="2" />
<text  x="142.57" y="575.5" >x86_64_start_..</text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.02%)</title><rect x="265.9" y="469" width="0.2" height="15.0" fill="rgb(218,94,49)" rx="2" ry="2" />
<text  x="268.89" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (30 samples, 0.48%)</title><rect x="1054.1" y="389" width="5.8" height="15.0" fill="rgb(233,26,28)" rx="2" ry="2" />
<text  x="1057.15" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_slowpath.constprop.0 (1 samples, 0.02%)</title><rect x="1137.6" y="421" width="0.2" height="15.0" fill="rgb(243,228,40)" rx="2" ry="2" />
<text  x="1140.60" y="431.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="265.3" y="197" width="0.2" height="15.0" fill="rgb(245,31,53)" rx="2" ry="2" />
<text  x="268.32" y="207.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (134 samples, 2.16%)</title><rect x="1026.9" y="405" width="25.5" height="15.0" fill="rgb(250,11,48)" rx="2" ry="2" />
<text  x="1029.90" y="415.5" >s..</text>
</g>
<g >
<title>cpuidle_enter (251 samples, 4.05%)</title><rect x="144.9" y="437" width="47.8" height="15.0" fill="rgb(225,58,12)" rx="2" ry="2" />
<text  x="147.90" y="447.5" >cpui..</text>
</g>
<g >
<title>arch_cpu_idle_exit (1 samples, 0.02%)</title><rect x="139.9" y="469" width="0.2" height="15.0" fill="rgb(217,167,32)" rx="2" ry="2" />
<text  x="142.95" y="479.5" ></text>
</g>
<g >
<title>Process0Operands (1 samples, 0.02%)</title><rect x="361.2" y="453" width="0.2" height="15.0" fill="rgb(215,23,12)" rx="2" ry="2" />
<text  x="364.16" y="463.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="247.6" y="341" width="0.2" height="15.0" fill="rgb(245,33,33)" rx="2" ry="2" />
<text  x="250.60" y="351.5" ></text>
</g>
<g >
<title>vfs_write (4 samples, 0.06%)</title><rect x="264.9" y="357" width="0.8" height="15.0" fill="rgb(250,120,25)" rx="2" ry="2" />
<text  x="267.94" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.03%)</title><rect x="1143.1" y="565" width="0.4" height="15.0" fill="rgb(244,90,46)" rx="2" ry="2" />
<text  x="1146.13" y="575.5" ></text>
</g>
<g >
<title>ret_from_fork (4 samples, 0.06%)</title><rect x="1174.8" y="581" width="0.7" height="15.0" fill="rgb(216,101,18)" rx="2" ry="2" />
<text  x="1177.76" y="591.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.06%)</title><rect x="1013.2" y="309" width="0.7" height="15.0" fill="rgb(248,131,40)" rx="2" ry="2" />
<text  x="1016.18" y="319.5" ></text>
</g>
<g >
<title>perf_ioctl (63 samples, 1.02%)</title><rect x="252.7" y="421" width="12.0" height="15.0" fill="rgb(208,45,53)" rx="2" ry="2" />
<text  x="255.75" y="431.5" ></text>
</g>
<g >
<title>NaClLog (11 samples, 0.18%)</title><rect x="1097.8" y="517" width="2.1" height="15.0" fill="rgb(215,166,1)" rx="2" ry="2" />
<text  x="1100.78" y="527.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (16 samples, 0.26%)</title><rect x="1019.5" y="341" width="3.0" height="15.0" fill="rgb(224,156,9)" rx="2" ry="2" />
<text  x="1022.47" y="351.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="1139.3" y="437" width="0.2" height="15.0" fill="rgb(227,96,32)" rx="2" ry="2" />
<text  x="1142.32" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.11%)</title><rect x="1064.2" y="341" width="1.4" height="15.0" fill="rgb(253,144,26)" rx="2" ry="2" />
<text  x="1067.25" y="351.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="122.0" y="405" width="0.2" height="15.0" fill="rgb(237,178,22)" rx="2" ry="2" />
<text  x="125.04" y="415.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="1174.6" y="549" width="0.2" height="15.0" fill="rgb(215,202,22)" rx="2" ry="2" />
<text  x="1177.57" y="559.5" ></text>
</g>
<g >
<title>page_referenced_one (1 samples, 0.02%)</title><rect x="1174.8" y="405" width="0.1" height="15.0" fill="rgb(226,116,41)" rx="2" ry="2" />
<text  x="1177.76" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (28 samples, 0.45%)</title><rect x="991.8" y="357" width="5.4" height="15.0" fill="rgb(226,210,15)" rx="2" ry="2" />
<text  x="994.84" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (74 samples, 1.19%)</title><rect x="1012.0" y="421" width="14.1" height="15.0" fill="rgb(254,142,42)" rx="2" ry="2" />
<text  x="1015.04" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (42 samples, 0.68%)</title><rect x="929.2" y="389" width="8.0" height="15.0" fill="rgb(220,164,4)" rx="2" ry="2" />
<text  x="932.15" y="399.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (1 samples, 0.02%)</title><rect x="1141.0" y="565" width="0.2" height="15.0" fill="rgb(254,34,31)" rx="2" ry="2" />
<text  x="1144.03" y="575.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (28 samples, 0.45%)</title><rect x="1069.0" y="405" width="5.3" height="15.0" fill="rgb(225,117,10)" rx="2" ry="2" />
<text  x="1072.01" y="415.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (27 samples, 0.44%)</title><rect x="977.4" y="389" width="5.1" height="15.0" fill="rgb(206,81,36)" rx="2" ry="2" />
<text  x="980.36" y="399.5" ></text>
</g>
<g >
<title>create_empty_buffers (1 samples, 0.02%)</title><rect x="265.1" y="181" width="0.2" height="15.0" fill="rgb(234,27,37)" rx="2" ry="2" />
<text  x="268.13" y="191.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (21 samples, 0.34%)</title><rect x="918.9" y="357" width="4.0" height="15.0" fill="rgb(243,64,46)" rx="2" ry="2" />
<text  x="921.86" y="367.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (1 samples, 0.02%)</title><rect x="268.0" y="533" width="0.2" height="15.0" fill="rgb(218,151,2)" rx="2" ry="2" />
<text  x="270.99" y="543.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (16 samples, 0.26%)</title><rect x="326.5" y="533" width="3.0" height="15.0" fill="rgb(238,129,24)" rx="2" ry="2" />
<text  x="329.48" y="543.5" ></text>
</g>
<g >
<title>balance_pgdat (1 samples, 0.02%)</title><rect x="39.9" y="533" width="0.2" height="15.0" fill="rgb(239,224,45)" rx="2" ry="2" />
<text  x="42.91" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.24%)</title><rect x="1065.6" y="405" width="2.8" height="15.0" fill="rgb(223,86,13)" rx="2" ry="2" />
<text  x="1068.58" y="415.5" ></text>
</g>
<g >
<title>llist_reverse_order (13 samples, 0.21%)</title><rect x="210.1" y="437" width="2.4" height="15.0" fill="rgb(247,189,25)" rx="2" ry="2" />
<text  x="213.06" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (134 samples, 2.16%)</title><rect x="662.0" y="357" width="25.6" height="15.0" fill="rgb(221,63,18)" rx="2" ry="2" />
<text  x="665.02" y="367.5" >c..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (30 samples, 0.48%)</title><rect x="1090.2" y="501" width="5.7" height="15.0" fill="rgb(216,30,22)" rx="2" ry="2" />
<text  x="1093.16" y="511.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.02%)</title><rect x="39.3" y="517" width="0.2" height="15.0" fill="rgb(211,197,44)" rx="2" ry="2" />
<text  x="42.34" y="527.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.02%)</title><rect x="240.6" y="341" width="0.1" height="15.0" fill="rgb(233,21,23)" rx="2" ry="2" />
<text  x="243.55" y="351.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (19 samples, 0.31%)</title><rect x="1184.9" y="453" width="3.6" height="15.0" fill="rgb(238,63,16)" rx="2" ry="2" />
<text  x="1187.86" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="765.5" y="357" width="0.2" height="15.0" fill="rgb(215,125,47)" rx="2" ry="2" />
<text  x="768.48" y="367.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="1025.9" y="261" width="0.2" height="15.0" fill="rgb(233,120,26)" rx="2" ry="2" />
<text  x="1028.95" y="271.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_cbuf (1 samples, 0.02%)</title><rect x="837.3" y="437" width="0.2" height="15.0" fill="rgb(216,102,23)" rx="2" ry="2" />
<text  x="840.31" y="447.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (3 samples, 0.05%)</title><rect x="981.6" y="373" width="0.5" height="15.0" fill="rgb(239,51,19)" rx="2" ry="2" />
<text  x="984.55" y="383.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (4,163 samples, 67.22%)</title><rect x="308.4" y="565" width="793.2" height="15.0" fill="rgb(244,104,38)" rx="2" ry="2" />
<text  x="311.38" y="575.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>cpumask_next (1 samples, 0.02%)</title><rect x="132.1" y="437" width="0.2" height="15.0" fill="rgb(245,123,22)" rx="2" ry="2" />
<text  x="135.13" y="447.5" ></text>
</g>
<g >
<title>DynArrayGet (1 samples, 0.02%)</title><rect x="1140.8" y="565" width="0.2" height="15.0" fill="rgb(242,198,15)" rx="2" ry="2" />
<text  x="1143.84" y="575.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.02%)</title><rect x="188.9" y="389" width="0.2" height="15.0" fill="rgb(215,219,1)" rx="2" ry="2" />
<text  x="191.91" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (33 samples, 0.53%)</title><rect x="1012.6" y="357" width="6.3" height="15.0" fill="rgb(233,134,5)" rx="2" ry="2" />
<text  x="1015.61" y="367.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2 samples, 0.03%)</title><rect x="1172.7" y="581" width="0.3" height="15.0" fill="rgb(253,213,33)" rx="2" ry="2" />
<text  x="1175.66" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (51 samples, 0.82%)</title><rect x="1002.3" y="389" width="9.7" height="15.0" fill="rgb(231,218,26)" rx="2" ry="2" />
<text  x="1005.32" y="399.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (9 samples, 0.15%)</title><rect x="580.1" y="389" width="1.7" height="15.0" fill="rgb(209,99,47)" rx="2" ry="2" />
<text  x="583.09" y="399.5" ></text>
</g>
<g >
<title>do_shrink_slab (1 samples, 0.02%)</title><rect x="1175.3" y="453" width="0.2" height="15.0" fill="rgb(225,77,48)" rx="2" ry="2" />
<text  x="1178.33" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (13 samples, 0.21%)</title><rect x="1137.2" y="517" width="2.5" height="15.0" fill="rgb(209,91,15)" rx="2" ry="2" />
<text  x="1140.22" y="527.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="216.7" y="389" width="0.2" height="15.0" fill="rgb(252,14,34)" rx="2" ry="2" />
<text  x="219.73" y="399.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1023.7" y="325" width="0.2" height="15.0" fill="rgb(219,76,51)" rx="2" ry="2" />
<text  x="1026.66" y="335.5" ></text>
</g>
<g >
<title>do_idle (568 samples, 9.17%)</title><rect x="140.1" y="469" width="108.3" height="15.0" fill="rgb(234,78,45)" rx="2" ry="2" />
<text  x="143.14" y="479.5" >do_idle</text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (28 samples, 0.45%)</title><rect x="382.7" y="421" width="5.3" height="15.0" fill="rgb(217,59,19)" rx="2" ry="2" />
<text  x="385.69" y="431.5" ></text>
</g>
<g >
<title>shrink_dentry_list (1 samples, 0.02%)</title><rect x="1175.3" y="405" width="0.2" height="15.0" fill="rgb(223,84,8)" rx="2" ry="2" />
<text  x="1178.33" y="415.5" ></text>
</g>
<g >
<title>native_sched_clock (3 samples, 0.05%)</title><rect x="136.5" y="453" width="0.6" height="15.0" fill="rgb(234,20,5)" rx="2" ry="2" />
<text  x="139.52" y="463.5" ></text>
</g>
<g >
<title>menu_select (76 samples, 1.23%)</title><rect x="193.1" y="421" width="14.5" height="15.0" fill="rgb(246,195,18)" rx="2" ry="2" />
<text  x="196.11" y="431.5" ></text>
</g>
<g >
<title>event_function_call (63 samples, 1.02%)</title><rect x="252.7" y="357" width="12.0" height="15.0" fill="rgb(231,159,51)" rx="2" ry="2" />
<text  x="255.75" y="367.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (8 samples, 0.13%)</title><rect x="800.5" y="485" width="1.6" height="15.0" fill="rgb(231,187,33)" rx="2" ry="2" />
<text  x="803.54" y="495.5" ></text>
</g>
<g >
<title>poll_idle (79 samples, 1.28%)</title><rect x="100.9" y="469" width="15.0" height="15.0" fill="rgb(238,64,41)" rx="2" ry="2" />
<text  x="103.89" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (8 samples, 0.13%)</title><rect x="1066.9" y="341" width="1.5" height="15.0" fill="rgb(229,11,23)" rx="2" ry="2" />
<text  x="1069.91" y="351.5" ></text>
</g>
<g >
<title>collect_percpu_times (1 samples, 0.02%)</title><rect x="40.1" y="501" width="0.2" height="15.0" fill="rgb(217,158,9)" rx="2" ry="2" />
<text  x="43.10" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (2 samples, 0.03%)</title><rect x="289.1" y="501" width="0.4" height="15.0" fill="rgb(210,191,20)" rx="2" ry="2" />
<text  x="292.14" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.03%)</title><rect x="1019.1" y="357" width="0.4" height="15.0" fill="rgb(231,101,43)" rx="2" ry="2" />
<text  x="1022.09" y="367.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="1023.3" y="341" width="0.6" height="15.0" fill="rgb(236,160,43)" rx="2" ry="2" />
<text  x="1026.28" y="351.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.02%)</title><rect x="837.3" y="421" width="0.2" height="15.0" fill="rgb(222,147,16)" rx="2" ry="2" />
<text  x="840.31" y="431.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="265.9" y="357" width="0.2" height="15.0" fill="rgb(244,61,10)" rx="2" ry="2" />
<text  x="268.89" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="121.5" y="437" width="0.2" height="15.0" fill="rgb(214,31,2)" rx="2" ry="2" />
<text  x="124.46" y="447.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.02%)</title><rect x="1172.5" y="565" width="0.2" height="15.0" fill="rgb(217,205,10)" rx="2" ry="2" />
<text  x="1175.47" y="575.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.02%)</title><rect x="265.9" y="453" width="0.2" height="15.0" fill="rgb(224,9,5)" rx="2" ry="2" />
<text  x="268.89" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="1068.2" y="325" width="0.2" height="15.0" fill="rgb(223,220,49)" rx="2" ry="2" />
<text  x="1071.25" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.13%)</title><rect x="1017.4" y="309" width="1.5" height="15.0" fill="rgb(253,179,49)" rx="2" ry="2" />
<text  x="1020.37" y="319.5" ></text>
</g>
<g >
<title>do_shrink_slab (1 samples, 0.02%)</title><rect x="39.9" y="453" width="0.2" height="15.0" fill="rgb(206,100,32)" rx="2" ry="2" />
<text  x="42.91" y="463.5" ></text>
</g>
<g >
<title>NaClValidateCode (2 samples, 0.03%)</title><rect x="361.0" y="501" width="0.4" height="15.0" fill="rgb(214,180,3)" rx="2" ry="2" />
<text  x="363.97" y="511.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (4 samples, 0.06%)</title><rect x="1166.8" y="565" width="0.7" height="15.0" fill="rgb(250,181,21)" rx="2" ry="2" />
<text  x="1169.75" y="575.5" ></text>
</g>
<g >
<title>get_typical_interval (2 samples, 0.03%)</title><rect x="119.7" y="469" width="0.4" height="15.0" fill="rgb(239,194,12)" rx="2" ry="2" />
<text  x="122.75" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (45 samples, 0.73%)</title><rect x="828.4" y="373" width="8.5" height="15.0" fill="rgb(227,190,27)" rx="2" ry="2" />
<text  x="831.36" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (148 samples, 2.39%)</title><rect x="394.5" y="421" width="28.2" height="15.0" fill="rgb(209,109,11)" rx="2" ry="2" />
<text  x="397.51" y="431.5" >c..</text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (1 samples, 0.02%)</title><rect x="247.6" y="405" width="0.2" height="15.0" fill="rgb(238,175,40)" rx="2" ry="2" />
<text  x="250.60" y="415.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (18 samples, 0.29%)</title><rect x="299.6" y="517" width="3.4" height="15.0" fill="rgb(213,93,22)" rx="2" ry="2" />
<text  x="302.62" y="527.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (1 samples, 0.02%)</title><rect x="1068.4" y="421" width="0.2" height="15.0" fill="rgb(235,1,50)" rx="2" ry="2" />
<text  x="1071.44" y="431.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (39 samples, 0.63%)</title><rect x="233.3" y="357" width="7.4" height="15.0" fill="rgb(208,122,26)" rx="2" ry="2" />
<text  x="236.31" y="367.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="39.2" y="501" width="0.1" height="15.0" fill="rgb(206,17,24)" rx="2" ry="2" />
<text  x="42.15" y="511.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 1.02%)</title><rect x="252.7" y="245" width="12.0" height="15.0" fill="rgb(253,136,28)" rx="2" ry="2" />
<text  x="255.75" y="255.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (5 samples, 0.08%)</title><rect x="1021.6" y="277" width="0.9" height="15.0" fill="rgb(213,224,31)" rx="2" ry="2" />
<text  x="1024.56" y="287.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.16%)</title><rect x="392.6" y="357" width="1.9" height="15.0" fill="rgb(209,195,39)" rx="2" ry="2" />
<text  x="395.60" y="367.5" ></text>
</g>
<g >
<title>update_rq_clock (5 samples, 0.08%)</title><rect x="242.1" y="421" width="0.9" height="15.0" fill="rgb(221,58,52)" rx="2" ry="2" />
<text  x="245.07" y="431.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (6 samples, 0.10%)</title><rect x="134.6" y="389" width="1.2" height="15.0" fill="rgb(231,71,12)" rx="2" ry="2" />
<text  x="137.61" y="399.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (12 samples, 0.19%)</title><rect x="201.5" y="389" width="2.3" height="15.0" fill="rgb(236,156,50)" rx="2" ry="2" />
<text  x="204.49" y="399.5" ></text>
</g>
<g >
<title>newidle_balance (41 samples, 0.66%)</title><rect x="128.7" y="469" width="7.8" height="15.0" fill="rgb(215,60,5)" rx="2" ry="2" />
<text  x="131.70" y="479.5" ></text>
</g>
<g >
<title>kthread (4 samples, 0.06%)</title><rect x="1174.8" y="565" width="0.7" height="15.0" fill="rgb(221,108,26)" rx="2" ry="2" />
<text  x="1177.76" y="575.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.06%)</title><rect x="1061.8" y="325" width="0.7" height="15.0" fill="rgb(234,14,12)" rx="2" ry="2" />
<text  x="1064.77" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="120.7" y="453" width="0.2" height="15.0" fill="rgb(249,75,37)" rx="2" ry="2" />
<text  x="123.70" y="463.5" ></text>
</g>
<g >
<title>read_tsc (6 samples, 0.10%)</title><rect x="244.4" y="437" width="1.1" height="15.0" fill="rgb(244,114,35)" rx="2" ry="2" />
<text  x="247.36" y="447.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="1026.1" y="357" width="0.2" height="15.0" fill="rgb(211,137,35)" rx="2" ry="2" />
<text  x="1029.14" y="367.5" ></text>
</g>
<g >
<title>__ioctl (63 samples, 1.02%)</title><rect x="252.7" y="485" width="12.0" height="15.0" fill="rgb(244,210,1)" rx="2" ry="2" />
<text  x="255.75" y="495.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="137.7" y="501" width="0.2" height="15.0" fill="rgb(251,77,54)" rx="2" ry="2" />
<text  x="140.66" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="289.5" y="565" width="0.2" height="15.0" fill="rgb(221,6,41)" rx="2" ry="2" />
<text  x="292.52" y="575.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1185.2" y="405" width="0.2" height="15.0" fill="rgb(228,135,30)" rx="2" ry="2" />
<text  x="1188.24" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="243.0" y="437" width="0.2" height="15.0" fill="rgb(225,212,32)" rx="2" ry="2" />
<text  x="246.03" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (4 samples, 0.06%)</title><rect x="980.4" y="357" width="0.8" height="15.0" fill="rgb(246,214,28)" rx="2" ry="2" />
<text  x="983.41" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (12 samples, 0.19%)</title><rect x="1137.4" y="501" width="2.3" height="15.0" fill="rgb(245,173,37)" rx="2" ry="2" />
<text  x="1140.41" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.08%)</title><rect x="1063.1" y="373" width="1.0" height="15.0" fill="rgb(218,14,43)" rx="2" ry="2" />
<text  x="1066.10" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="44.1" y="389" width="0.2" height="15.0" fill="rgb(207,110,43)" rx="2" ry="2" />
<text  x="47.11" y="399.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="1188.1" y="421" width="0.2" height="15.0" fill="rgb(226,124,9)" rx="2" ry="2" />
<text  x="1191.09" y="431.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.02%)</title><rect x="123.9" y="517" width="0.2" height="15.0" fill="rgb(219,220,24)" rx="2" ry="2" />
<text  x="126.94" y="527.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="765.5" y="245" width="0.2" height="15.0" fill="rgb(248,172,50)" rx="2" ry="2" />
<text  x="768.48" y="255.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (30 samples, 0.48%)</title><rect x="922.9" y="357" width="5.7" height="15.0" fill="rgb(217,22,30)" rx="2" ry="2" />
<text  x="925.87" y="367.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="687.4" y="261" width="0.2" height="15.0" fill="rgb(220,26,19)" rx="2" ry="2" />
<text  x="690.36" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="121.8" y="437" width="0.2" height="15.0" fill="rgb(245,128,32)" rx="2" ry="2" />
<text  x="124.85" y="447.5" ></text>
</g>
<g >
<title>ovl_write_iter (4 samples, 0.06%)</title><rect x="264.9" y="325" width="0.8" height="15.0" fill="rgb(229,183,26)" rx="2" ry="2" />
<text  x="267.94" y="335.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.02%)</title><rect x="44.1" y="261" width="0.2" height="15.0" fill="rgb(228,36,9)" rx="2" ry="2" />
<text  x="47.11" y="271.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="38.6" y="485" width="0.2" height="15.0" fill="rgb(244,37,20)" rx="2" ry="2" />
<text  x="41.58" y="495.5" ></text>
</g>
<g >
<title>vfs_iter_write (4 samples, 0.06%)</title><rect x="264.9" y="309" width="0.8" height="15.0" fill="rgb(205,40,51)" rx="2" ry="2" />
<text  x="267.94" y="319.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (35 samples, 0.57%)</title><rect x="1089.2" y="517" width="6.7" height="15.0" fill="rgb(205,151,2)" rx="2" ry="2" />
<text  x="1092.21" y="527.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="216.7" y="309" width="0.2" height="15.0" fill="rgb(226,138,50)" rx="2" ry="2" />
<text  x="219.73" y="319.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (186 samples, 3.00%)</title><rect x="941.9" y="389" width="35.5" height="15.0" fill="rgb(212,57,41)" rx="2" ry="2" />
<text  x="944.92" y="399.5" >std..</text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.02%)</title><rect x="139.4" y="485" width="0.2" height="15.0" fill="rgb(244,20,33)" rx="2" ry="2" />
<text  x="142.38" y="495.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.06%)</title><rect x="1171.7" y="549" width="0.8" height="15.0" fill="rgb(213,95,24)" rx="2" ry="2" />
<text  x="1174.71" y="559.5" ></text>
</g>
<g >
<title>ip_list_rcv (1 samples, 0.02%)</title><rect x="997.0" y="133" width="0.2" height="15.0" fill="rgb(239,122,10)" rx="2" ry="2" />
<text  x="999.99" y="143.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (2 samples, 0.03%)</title><rect x="361.0" y="549" width="0.4" height="15.0" fill="rgb(214,60,51)" rx="2" ry="2" />
<text  x="363.97" y="559.5" ></text>
</g>
<g >
<title>remote_function (1 samples, 0.02%)</title><rect x="265.7" y="421" width="0.2" height="15.0" fill="rgb(232,84,3)" rx="2" ry="2" />
<text  x="268.70" y="431.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="39.5" y="533" width="0.2" height="15.0" fill="rgb(232,225,6)" rx="2" ry="2" />
<text  x="42.53" y="543.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="765.5" y="229" width="0.2" height="15.0" fill="rgb(254,107,12)" rx="2" ry="2" />
<text  x="768.48" y="239.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (3 samples, 0.05%)</title><rect x="941.3" y="389" width="0.6" height="15.0" fill="rgb(252,66,34)" rx="2" ry="2" />
<text  x="944.35" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.03%)</title><rect x="937.2" y="437" width="0.3" height="15.0" fill="rgb(220,132,28)" rx="2" ry="2" />
<text  x="940.16" y="447.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.02%)</title><rect x="267.2" y="517" width="0.2" height="15.0" fill="rgb(207,111,9)" rx="2" ry="2" />
<text  x="270.23" y="527.5" ></text>
</g>
<g >
<title>perf_ioctl (1 samples, 0.02%)</title><rect x="265.7" y="533" width="0.2" height="15.0" fill="rgb(228,145,52)" rx="2" ry="2" />
<text  x="268.70" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.08%)</title><rect x="646.4" y="341" width="0.9" height="15.0" fill="rgb(207,159,7)" rx="2" ry="2" />
<text  x="649.40" y="351.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (2 samples, 0.03%)</title><rect x="1189.4" y="357" width="0.4" height="15.0" fill="rgb(234,5,40)" rx="2" ry="2" />
<text  x="1192.43" y="367.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (15 samples, 0.24%)</title><rect x="1137.0" y="565" width="2.9" height="15.0" fill="rgb(230,80,18)" rx="2" ry="2" />
<text  x="1140.03" y="575.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1185.2" y="357" width="0.2" height="15.0" fill="rgb(216,227,54)" rx="2" ry="2" />
<text  x="1188.24" y="367.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.02%)</title><rect x="265.9" y="325" width="0.2" height="15.0" fill="rgb(249,181,36)" rx="2" ry="2" />
<text  x="268.89" y="335.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.03%)</title><rect x="139.0" y="501" width="0.4" height="15.0" fill="rgb(242,97,6)" rx="2" ry="2" />
<text  x="141.99" y="511.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (1 samples, 0.02%)</title><rect x="39.9" y="501" width="0.2" height="15.0" fill="rgb(249,167,9)" rx="2" ry="2" />
<text  x="42.91" y="511.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="44.5" y="421" width="0.2" height="15.0" fill="rgb(219,211,54)" rx="2" ry="2" />
<text  x="47.49" y="431.5" ></text>
</g>
<g >
<title>nohz_balance_enter_idle (1 samples, 0.02%)</title><rect x="1188.3" y="437" width="0.2" height="15.0" fill="rgb(253,63,32)" rx="2" ry="2" />
<text  x="1191.29" y="447.5" ></text>
</g>
<g >
<title>do_epoll_wait (3 samples, 0.05%)</title><rect x="38.4" y="517" width="0.6" height="15.0" fill="rgb(215,196,2)" rx="2" ry="2" />
<text  x="41.39" y="527.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.02%)</title><rect x="39.2" y="517" width="0.1" height="15.0" fill="rgb(237,133,3)" rx="2" ry="2" />
<text  x="42.15" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (6 samples, 0.10%)</title><rect x="191.4" y="389" width="1.1" height="15.0" fill="rgb(254,34,22)" rx="2" ry="2" />
<text  x="194.39" y="399.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (18 samples, 0.29%)</title><rect x="299.6" y="533" width="3.4" height="15.0" fill="rgb(226,58,28)" rx="2" ry="2" />
<text  x="302.62" y="543.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="997.0" y="325" width="0.2" height="15.0" fill="rgb(251,206,8)" rx="2" ry="2" />
<text  x="999.99" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (2 samples, 0.03%)</title><rect x="981.2" y="373" width="0.4" height="15.0" fill="rgb(218,164,53)" rx="2" ry="2" />
<text  x="984.17" y="383.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (15 samples, 0.24%)</title><rect x="1167.5" y="565" width="2.9" height="15.0" fill="rgb(215,126,20)" rx="2" ry="2" />
<text  x="1170.52" y="575.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (45 samples, 0.73%)</title><rect x="349.2" y="549" width="8.5" height="15.0" fill="rgb(249,121,5)" rx="2" ry="2" />
<text  x="352.16" y="559.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.02%)</title><rect x="1139.1" y="453" width="0.2" height="15.0" fill="rgb(247,3,25)" rx="2" ry="2" />
<text  x="1142.13" y="463.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.03%)</title><rect x="1064.6" y="293" width="0.4" height="15.0" fill="rgb(224,119,25)" rx="2" ry="2" />
<text  x="1067.63" y="303.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="43.9" y="469" width="0.2" height="15.0" fill="rgb(206,89,27)" rx="2" ry="2" />
<text  x="46.92" y="479.5" ></text>
</g>
<g >
<title>do_sys_ftruncate (1 samples, 0.02%)</title><rect x="39.0" y="533" width="0.2" height="15.0" fill="rgb(225,114,18)" rx="2" ry="2" />
<text  x="41.96" y="543.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="43.9" y="453" width="0.2" height="15.0" fill="rgb(212,225,18)" rx="2" ry="2" />
<text  x="46.92" y="463.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,650 samples, 26.64%)</title><rect x="786.8" y="533" width="314.4" height="15.0" fill="rgb(210,144,21)" rx="2" ry="2" />
<text  x="789.82" y="543.5" >NaClSysWrite</text>
</g>
<g >
<title>__GI___poll (1 samples, 0.02%)</title><rect x="264.7" y="517" width="0.2" height="15.0" fill="rgb(222,111,50)" rx="2" ry="2" />
<text  x="267.75" y="527.5" ></text>
</g>
<g >
<title>DynArrayGet (4 samples, 0.06%)</title><rect x="1097.0" y="501" width="0.8" height="15.0" fill="rgb(227,206,23)" rx="2" ry="2" />
<text  x="1100.02" y="511.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.03%)</title><rect x="1053.2" y="357" width="0.4" height="15.0" fill="rgb(211,96,28)" rx="2" ry="2" />
<text  x="1056.19" y="367.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="264.7" y="453" width="0.2" height="15.0" fill="rgb(229,69,19)" rx="2" ry="2" />
<text  x="267.75" y="463.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="997.0" y="309" width="0.2" height="15.0" fill="rgb(231,30,44)" rx="2" ry="2" />
<text  x="999.99" y="319.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.03%)</title><rect x="137.9" y="501" width="0.3" height="15.0" fill="rgb(232,95,19)" rx="2" ry="2" />
<text  x="140.85" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (34 samples, 0.55%)</title><rect x="1074.3" y="405" width="6.5" height="15.0" fill="rgb(226,67,23)" rx="2" ry="2" />
<text  x="1077.34" y="415.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (74 samples, 1.19%)</title><rect x="1012.0" y="437" width="14.1" height="15.0" fill="rgb(248,131,9)" rx="2" ry="2" />
<text  x="1015.04" y="447.5" ></text>
</g>
<g >
<title>ion (4 samples, 0.06%)</title><rect x="264.9" y="453" width="0.8" height="15.0" fill="rgb(219,102,15)" rx="2" ry="2" />
<text  x="267.94" y="463.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="997.0" y="293" width="0.2" height="15.0" fill="rgb(227,199,27)" rx="2" ry="2" />
<text  x="999.99" y="303.5" ></text>
</g>
<g >
<title>llist_add_batch (1 samples, 0.02%)</title><rect x="1189.6" y="341" width="0.2" height="15.0" fill="rgb(210,152,4)" rx="2" ry="2" />
<text  x="1192.62" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (5 samples, 0.08%)</title><rect x="206.4" y="341" width="1.0" height="15.0" fill="rgb(250,75,22)" rx="2" ry="2" />
<text  x="209.44" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (189 samples, 3.05%)</title><rect x="941.3" y="421" width="36.1" height="15.0" fill="rgb(226,145,23)" rx="2" ry="2" />
<text  x="944.35" y="431.5" >cor..</text>
</g>
<g >
<title>_perf_event_enable (1 samples, 0.02%)</title><rect x="265.7" y="485" width="0.2" height="15.0" fill="rgb(252,170,40)" rx="2" ry="2" />
<text  x="268.70" y="495.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (75 samples, 1.21%)</title><rect x="983.1" y="421" width="14.3" height="15.0" fill="rgb(225,97,23)" rx="2" ry="2" />
<text  x="986.08" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (35 samples, 0.57%)</title><rect x="350.9" y="501" width="6.6" height="15.0" fill="rgb(252,115,50)" rx="2" ry="2" />
<text  x="353.87" y="511.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="687.4" y="341" width="0.2" height="15.0" fill="rgb(205,156,19)" rx="2" ry="2" />
<text  x="690.36" y="351.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (1 samples, 0.02%)</title><rect x="271.4" y="565" width="0.2" height="15.0" fill="rgb(253,173,54)" rx="2" ry="2" />
<text  x="274.42" y="575.5" ></text>
</g>
<g >
<title>newidle_balance (126 samples, 2.03%)</title><rect x="216.9" y="405" width="24.0" height="15.0" fill="rgb(238,17,52)" rx="2" ry="2" />
<text  x="219.92" y="415.5" >n..</text>
</g>
<g >
<title>hrtimer_get_next_event (10 samples, 0.16%)</title><rect x="205.5" y="357" width="1.9" height="15.0" fill="rgb(243,113,23)" rx="2" ry="2" />
<text  x="208.49" y="367.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (3 samples, 0.05%)</title><rect x="360.4" y="549" width="0.6" height="15.0" fill="rgb(225,119,17)" rx="2" ry="2" />
<text  x="363.40" y="559.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="39.9" y="373" width="0.2" height="15.0" fill="rgb(227,118,52)" rx="2" ry="2" />
<text  x="42.91" y="383.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (1 samples, 0.02%)</title><rect x="265.5" y="213" width="0.2" height="15.0" fill="rgb(217,136,27)" rx="2" ry="2" />
<text  x="268.51" y="223.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.02%)</title><rect x="1138.9" y="373" width="0.2" height="15.0" fill="rgb(232,190,33)" rx="2" ry="2" />
<text  x="1141.94" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter (14 samples, 0.23%)</title><rect x="1185.2" y="437" width="2.7" height="15.0" fill="rgb(217,157,37)" rx="2" ry="2" />
<text  x="1188.24" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="1025.4" y="309" width="0.2" height="15.0" fill="rgb(211,215,53)" rx="2" ry="2" />
<text  x="1028.38" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (3 samples, 0.05%)</title><rect x="38.4" y="549" width="0.6" height="15.0" fill="rgb(207,151,54)" rx="2" ry="2" />
<text  x="41.39" y="559.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.02%)</title><rect x="1187.7" y="405" width="0.2" height="15.0" fill="rgb(254,172,6)" rx="2" ry="2" />
<text  x="1190.71" y="415.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.03%)</title><rect x="1170.6" y="549" width="0.3" height="15.0" fill="rgb(252,70,50)" rx="2" ry="2" />
<text  x="1173.57" y="559.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1187.5" y="389" width="0.2" height="15.0" fill="rgb(206,150,12)" rx="2" ry="2" />
<text  x="1190.52" y="399.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (2 samples, 0.03%)</title><rect x="201.1" y="389" width="0.4" height="15.0" fill="rgb(241,42,9)" rx="2" ry="2" />
<text  x="204.11" y="399.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="1150.4" y="565" width="0.2" height="15.0" fill="rgb(243,55,54)" rx="2" ry="2" />
<text  x="1153.37" y="575.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="44.1" y="309" width="0.2" height="15.0" fill="rgb(247,133,27)" rx="2" ry="2" />
<text  x="47.11" y="319.5" ></text>
</g>
<g >
<title>do_idle (27 samples, 0.44%)</title><rect x="1184.9" y="469" width="5.1" height="15.0" fill="rgb(208,21,9)" rx="2" ry="2" />
<text  x="1187.86" y="479.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (8 samples, 0.13%)</title><rect x="1064.1" y="389" width="1.5" height="15.0" fill="rgb(240,2,44)" rx="2" ry="2" />
<text  x="1067.05" y="399.5" ></text>
</g>
<g >
<title>dispatcher (2,122 samples, 34.26%)</title><rect x="361.4" y="469" width="404.3" height="15.0" fill="rgb(215,46,14)" rx="2" ry="2" />
<text  x="364.35" y="479.5" >dispatcher</text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="44.1" y="373" width="0.2" height="15.0" fill="rgb(251,136,12)" rx="2" ry="2" />
<text  x="47.11" y="383.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="39.7" y="373" width="0.2" height="15.0" fill="rgb(236,137,6)" rx="2" ry="2" />
<text  x="42.72" y="383.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="361.4" y="389" width="0.1" height="15.0" fill="rgb(234,76,21)" rx="2" ry="2" />
<text  x="364.35" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (4 samples, 0.06%)</title><rect x="1170.9" y="501" width="0.8" height="15.0" fill="rgb(240,39,49)" rx="2" ry="2" />
<text  x="1173.95" y="511.5" ></text>
</g>
<g >
<title>__GI___clone (1 samples, 0.02%)</title><rect x="1172.5" y="581" width="0.2" height="15.0" fill="rgb(226,180,15)" rx="2" ry="2" />
<text  x="1175.47" y="591.5" ></text>
</g>
<g >
<title>generic_perform_write (4 samples, 0.06%)</title><rect x="264.9" y="229" width="0.8" height="15.0" fill="rgb(213,75,12)" rx="2" ry="2" />
<text  x="267.94" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.05%)</title><rect x="44.1" y="469" width="0.6" height="15.0" fill="rgb(231,165,16)" rx="2" ry="2" />
<text  x="47.11" y="479.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1185.2" y="325" width="0.2" height="15.0" fill="rgb(233,106,0)" rx="2" ry="2" />
<text  x="1188.24" y="335.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (17 samples, 0.27%)</title><rect x="388.2" y="405" width="3.3" height="15.0" fill="rgb(226,69,5)" rx="2" ry="2" />
<text  x="391.22" y="415.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.02%)</title><rect x="232.5" y="341" width="0.2" height="15.0" fill="rgb(232,13,25)" rx="2" ry="2" />
<text  x="235.55" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (21 samples, 0.34%)</title><rect x="918.9" y="373" width="4.0" height="15.0" fill="rgb(220,178,17)" rx="2" ry="2" />
<text  x="921.86" y="383.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.02%)</title><rect x="1174.4" y="533" width="0.2" height="15.0" fill="rgb(226,186,27)" rx="2" ry="2" />
<text  x="1177.38" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_write (4 samples, 0.06%)</title><rect x="264.9" y="389" width="0.8" height="15.0" fill="rgb(247,190,42)" rx="2" ry="2" />
<text  x="267.94" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (4 samples, 0.06%)</title><rect x="1170.9" y="549" width="0.8" height="15.0" fill="rgb(216,106,36)" rx="2" ry="2" />
<text  x="1173.95" y="559.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="687.4" y="181" width="0.2" height="15.0" fill="rgb(222,16,10)" rx="2" ry="2" />
<text  x="690.36" y="191.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (4 samples, 0.06%)</title><rect x="980.4" y="373" width="0.8" height="15.0" fill="rgb(207,229,12)" rx="2" ry="2" />
<text  x="983.41" y="383.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (35 samples, 0.57%)</title><rect x="222.4" y="373" width="6.7" height="15.0" fill="rgb(241,107,14)" rx="2" ry="2" />
<text  x="225.45" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="361.4" y="453" width="0.1" height="15.0" fill="rgb(208,211,2)" rx="2" ry="2" />
<text  x="364.35" y="463.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="1175.3" y="389" width="0.2" height="15.0" fill="rgb(249,196,44)" rx="2" ry="2" />
<text  x="1178.33" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="1089.8" y="501" width="0.4" height="15.0" fill="rgb(231,78,34)" rx="2" ry="2" />
<text  x="1092.78" y="511.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="216.7" y="357" width="0.2" height="15.0" fill="rgb(206,182,27)" rx="2" ry="2" />
<text  x="219.73" y="367.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::PIPE_TABLE (5 samples, 0.08%)</title><rect x="1173.0" y="581" width="1.0" height="15.0" fill="rgb(227,92,35)" rx="2" ry="2" />
<text  x="1176.04" y="591.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.02%)</title><rect x="252.4" y="469" width="0.2" height="15.0" fill="rgb(253,197,29)" rx="2" ry="2" />
<text  x="255.36" y="479.5" ></text>
</g>
<g >
<title>timekeeping_max_deferment (1 samples, 0.02%)</title><rect x="122.8" y="453" width="0.2" height="15.0" fill="rgb(218,156,15)" rx="2" ry="2" />
<text  x="125.80" y="463.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.02%)</title><rect x="247.6" y="373" width="0.2" height="15.0" fill="rgb(214,67,26)" rx="2" ry="2" />
<text  x="250.60" y="383.5" ></text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.05%)</title><rect x="136.5" y="469" width="0.6" height="15.0" fill="rgb(240,213,54)" rx="2" ry="2" />
<text  x="139.52" y="479.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="1174.6" y="533" width="0.2" height="15.0" fill="rgb(211,161,27)" rx="2" ry="2" />
<text  x="1177.57" y="543.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="240.9" y="405" width="0.2" height="15.0" fill="rgb(248,127,23)" rx="2" ry="2" />
<text  x="243.93" y="415.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (42 samples, 0.68%)</title><rect x="929.2" y="405" width="8.0" height="15.0" fill="rgb(209,181,9)" rx="2" ry="2" />
<text  x="932.15" y="415.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="267.2" y="533" width="0.2" height="15.0" fill="rgb(236,88,6)" rx="2" ry="2" />
<text  x="270.23" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.02%)</title><rect x="207.4" y="405" width="0.2" height="15.0" fill="rgb(211,51,36)" rx="2" ry="2" />
<text  x="210.40" y="415.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="1185.2" y="373" width="0.2" height="15.0" fill="rgb(242,175,9)" rx="2" ry="2" />
<text  x="1188.24" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter (49 samples, 0.79%)</title><rect x="1175.5" y="501" width="9.4" height="15.0" fill="rgb(207,43,7)" rx="2" ry="2" />
<text  x="1178.52" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.16%)</title><rect x="1061.2" y="341" width="1.9" height="15.0" fill="rgb(206,39,8)" rx="2" ry="2" />
<text  x="1064.20" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="388.0" y="373" width="0.2" height="15.0" fill="rgb(207,178,8)" rx="2" ry="2" />
<text  x="391.03" y="383.5" ></text>
</g>
<g >
<title>pick_next_task_fair (6 samples, 0.10%)</title><rect x="1188.7" y="421" width="1.1" height="15.0" fill="rgb(232,144,46)" rx="2" ry="2" />
<text  x="1191.67" y="431.5" ></text>
</g>
<g >
<title>__schedule (47 samples, 0.76%)</title><rect x="128.1" y="501" width="9.0" height="15.0" fill="rgb(226,30,24)" rx="2" ry="2" />
<text  x="131.13" y="511.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (7 samples, 0.11%)</title><rect x="325.1" y="533" width="1.4" height="15.0" fill="rgb(235,225,23)" rx="2" ry="2" />
<text  x="328.15" y="543.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (392 samples, 6.33%)</title><rect x="43.3" y="485" width="74.7" height="15.0" fill="rgb(208,194,3)" rx="2" ry="2" />
<text  x="46.34" y="495.5" >cpuidle_..</text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.02%)</title><rect x="1139.3" y="421" width="0.2" height="15.0" fill="rgb(246,176,41)" rx="2" ry="2" />
<text  x="1142.32" y="431.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.02%)</title><rect x="1101.2" y="533" width="0.2" height="15.0" fill="rgb(232,61,35)" rx="2" ry="2" />
<text  x="1104.21" y="543.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="265.7" y="325" width="0.2" height="15.0" fill="rgb(237,89,37)" rx="2" ry="2" />
<text  x="268.70" y="335.5" ></text>
</g>
<g >
<title>NaClSysRead (2,122 samples, 34.26%)</title><rect x="361.4" y="533" width="404.3" height="15.0" fill="rgb(247,214,44)" rx="2" ry="2" />
<text  x="364.35" y="543.5" >NaClSysRead</text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.02%)</title><rect x="1141.0" y="437" width="0.2" height="15.0" fill="rgb(210,82,31)" rx="2" ry="2" />
<text  x="1144.03" y="447.5" ></text>
</g>
<g >
<title>all (6,193 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(250,124,49)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="1189.0" y="373" width="0.2" height="15.0" fill="rgb(249,0,49)" rx="2" ry="2" />
<text  x="1192.05" y="383.5" ></text>
</g>
<g >
<title>___sys_sendmsg (1 samples, 0.02%)</title><rect x="39.7" y="517" width="0.2" height="15.0" fill="rgb(235,14,40)" rx="2" ry="2" />
<text  x="42.72" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.06%)</title><rect x="1101.6" y="565" width="0.8" height="15.0" fill="rgb(252,208,28)" rx="2" ry="2" />
<text  x="1104.59" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (10 samples, 0.16%)</title><rect x="245.9" y="453" width="1.9" height="15.0" fill="rgb(217,116,32)" rx="2" ry="2" />
<text  x="248.89" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (2 samples, 0.03%)</title><rect x="1150.0" y="565" width="0.4" height="15.0" fill="rgb(217,214,10)" rx="2" ry="2" />
<text  x="1152.99" y="575.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (8 samples, 0.13%)</title><rect x="303.0" y="565" width="1.6" height="15.0" fill="rgb(253,176,43)" rx="2" ry="2" />
<text  x="306.05" y="575.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (68 samples, 1.10%)</title><rect x="290.1" y="565" width="12.9" height="15.0" fill="rgb(242,135,0)" rx="2" ry="2" />
<text  x="293.09" y="575.5" ></text>
</g>
<g >
<title>lind_write (1,463 samples, 23.62%)</title><rect x="802.1" y="485" width="278.7" height="15.0" fill="rgb(225,150,30)" rx="2" ry="2" />
<text  x="805.07" y="495.5" >lind_write</text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1185.2" y="309" width="0.2" height="15.0" fill="rgb(242,0,19)" rx="2" ry="2" />
<text  x="1188.24" y="319.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (5 samples, 0.08%)</title><rect x="1173.0" y="565" width="1.0" height="15.0" fill="rgb(250,4,45)" rx="2" ry="2" />
<text  x="1176.04" y="575.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="1068.4" y="373" width="0.2" height="15.0" fill="rgb(208,167,45)" rx="2" ry="2" />
<text  x="1071.44" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.06%)</title><rect x="1064.6" y="309" width="0.8" height="15.0" fill="rgb(235,74,26)" rx="2" ry="2" />
<text  x="1067.63" y="319.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (594 samples, 9.59%)</title><rect x="139.6" y="549" width="113.1" height="15.0" fill="rgb(245,178,17)" rx="2" ry="2" />
<text  x="142.57" y="559.5" >x86_64_start_..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="765.5" y="277" width="0.2" height="15.0" fill="rgb(216,18,6)" rx="2" ry="2" />
<text  x="768.48" y="287.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (4 samples, 0.06%)</title><rect x="1171.7" y="517" width="0.8" height="15.0" fill="rgb(237,32,46)" rx="2" ry="2" />
<text  x="1174.71" y="527.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="265.3" y="165" width="0.2" height="15.0" fill="rgb(238,101,25)" rx="2" ry="2" />
<text  x="268.32" y="175.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (3 samples, 0.05%)</title><rect x="941.3" y="309" width="0.6" height="15.0" fill="rgb(210,199,10)" rx="2" ry="2" />
<text  x="944.35" y="319.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (2 samples, 0.03%)</title><rect x="265.1" y="213" width="0.4" height="15.0" fill="rgb(221,119,20)" rx="2" ry="2" />
<text  x="268.13" y="223.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="44.3" y="389" width="0.2" height="15.0" fill="rgb(232,169,20)" rx="2" ry="2" />
<text  x="47.30" y="399.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="39.7" y="453" width="0.2" height="15.0" fill="rgb(247,130,52)" rx="2" ry="2" />
<text  x="42.72" y="463.5" ></text>
</g>
<g >
<title>cpuidle_enter (396 samples, 6.39%)</title><rect x="42.8" y="501" width="75.4" height="15.0" fill="rgb(206,34,30)" rx="2" ry="2" />
<text  x="45.77" y="511.5" >cpuidle_..</text>
</g>
<g >
<title>__libc_write (4 samples, 0.06%)</title><rect x="264.9" y="437" width="0.8" height="15.0" fill="rgb(215,227,20)" rx="2" ry="2" />
<text  x="267.94" y="447.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1187.5" y="373" width="0.2" height="15.0" fill="rgb(232,210,37)" rx="2" ry="2" />
<text  x="1190.52" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="39.9" y="293" width="0.2" height="15.0" fill="rgb(236,180,48)" rx="2" ry="2" />
<text  x="42.91" y="303.5" ></text>
</g>
<g >
<title>__remove_mapping (1 samples, 0.02%)</title><rect x="1174.9" y="437" width="0.2" height="15.0" fill="rgb(249,183,1)" rx="2" ry="2" />
<text  x="1177.95" y="447.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (1 samples, 0.02%)</title><rect x="1172.5" y="357" width="0.2" height="15.0" fill="rgb(253,182,51)" rx="2" ry="2" />
<text  x="1175.47" y="367.5" ></text>
</g>
<g >
<title>NaClThreadInterfaceStart (1 samples, 0.02%)</title><rect x="1172.5" y="549" width="0.2" height="15.0" fill="rgb(218,213,34)" rx="2" ry="2" />
<text  x="1175.47" y="559.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (260 samples, 4.20%)</title><rect x="701.7" y="341" width="49.5" height="15.0" fill="rgb(231,56,33)" rx="2" ry="2" />
<text  x="704.65" y="351.5" >__me..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="265.7" y="581" width="0.4" height="15.0" fill="rgb(210,49,13)" rx="2" ry="2" />
<text  x="268.70" y="591.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (2 samples, 0.03%)</title><rect x="982.1" y="373" width="0.4" height="15.0" fill="rgb(207,163,3)" rx="2" ry="2" />
<text  x="985.12" y="383.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (2 samples, 0.03%)</title><rect x="190.1" y="389" width="0.3" height="15.0" fill="rgb(252,50,43)" rx="2" ry="2" />
<text  x="193.06" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (332 samples, 5.36%)</title><rect x="687.9" y="357" width="63.3" height="15.0" fill="rgb(219,101,41)" rx="2" ry="2" />
<text  x="690.93" y="367.5" >core::..</text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.02%)</title><rect x="1189.4" y="341" width="0.2" height="15.0" fill="rgb(238,69,8)" rx="2" ry="2" />
<text  x="1192.43" y="351.5" ></text>
</g>
<g >
<title>AcceptThread (1 samples, 0.02%)</title><rect x="1172.5" y="533" width="0.2" height="15.0" fill="rgb(208,72,45)" rx="2" ry="2" />
<text  x="1175.47" y="543.5" ></text>
</g>
<g >
<title>std::panicking::panicking (3 samples, 0.05%)</title><rect x="941.3" y="357" width="0.6" height="15.0" fill="rgb(214,209,40)" rx="2" ry="2" />
<text  x="944.35" y="367.5" ></text>
</g>
<g >
<title>__perf_event_enable (1 samples, 0.02%)</title><rect x="265.7" y="389" width="0.2" height="15.0" fill="rgb(213,69,40)" rx="2" ry="2" />
<text  x="268.70" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1141.0" y="517" width="0.2" height="15.0" fill="rgb(245,22,22)" rx="2" ry="2" />
<text  x="1144.03" y="527.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (8 samples, 0.13%)</title><rect x="1064.1" y="373" width="1.5" height="15.0" fill="rgb(228,157,9)" rx="2" ry="2" />
<text  x="1067.05" y="383.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.02%)</title><rect x="1139.3" y="453" width="0.2" height="15.0" fill="rgb(215,190,53)" rx="2" ry="2" />
<text  x="1142.32" y="463.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="216.7" y="277" width="0.2" height="15.0" fill="rgb(229,11,11)" rx="2" ry="2" />
<text  x="219.73" y="287.5" ></text>
</g>
<g >
<title>add_timer (1 samples, 0.02%)</title><rect x="40.3" y="469" width="0.2" height="15.0" fill="rgb(209,41,16)" rx="2" ry="2" />
<text  x="43.30" y="479.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="1172.5" y="389" width="0.2" height="15.0" fill="rgb(219,102,12)" rx="2" ry="2" />
<text  x="1175.47" y="399.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="216.7" y="341" width="0.2" height="15.0" fill="rgb(218,142,45)" rx="2" ry="2" />
<text  x="219.73" y="351.5" ></text>
</g>
<g >
<title>[[heap]] (9 samples, 0.15%)</title><rect x="266.5" y="581" width="1.7" height="15.0" fill="rgb(209,143,31)" rx="2" ry="2" />
<text  x="269.46" y="591.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (16 samples, 0.26%)</title><rect x="1019.5" y="373" width="3.0" height="15.0" fill="rgb(226,164,43)" rx="2" ry="2" />
<text  x="1022.47" y="383.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.03%)</title><rect x="1170.6" y="533" width="0.3" height="15.0" fill="rgb(241,109,6)" rx="2" ry="2" />
<text  x="1173.57" y="543.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="44.5" y="357" width="0.2" height="15.0" fill="rgb(246,128,17)" rx="2" ry="2" />
<text  x="47.49" y="367.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (3 samples, 0.05%)</title><rect x="799.0" y="501" width="0.6" height="15.0" fill="rgb(213,93,11)" rx="2" ry="2" />
<text  x="802.02" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (2 samples, 0.03%)</title><rect x="266.5" y="565" width="0.3" height="15.0" fill="rgb(236,0,4)" rx="2" ry="2" />
<text  x="269.46" y="575.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="687.4" y="197" width="0.2" height="15.0" fill="rgb(238,186,12)" rx="2" ry="2" />
<text  x="690.36" y="207.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="1059.9" y="421" width="0.2" height="15.0" fill="rgb(252,53,4)" rx="2" ry="2" />
<text  x="1062.86" y="431.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (7 samples, 0.11%)</title><rect x="1099.9" y="517" width="1.3" height="15.0" fill="rgb(233,68,46)" rx="2" ry="2" />
<text  x="1102.88" y="527.5" ></text>
</g>
<g >
<title>update_group_capacity (1 samples, 0.02%)</title><rect x="44.5" y="293" width="0.2" height="15.0" fill="rgb(245,29,46)" rx="2" ry="2" />
<text  x="47.49" y="303.5" ></text>
</g>
<g >
<title>ip_list_rcv_finish.constprop.0 (1 samples, 0.02%)</title><rect x="997.0" y="101" width="0.2" height="15.0" fill="rgb(234,185,20)" rx="2" ry="2" />
<text  x="999.99" y="111.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.02%)</title><rect x="252.6" y="469" width="0.1" height="15.0" fill="rgb(244,105,34)" rx="2" ry="2" />
<text  x="255.55" y="479.5" ></text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.03%)</title><rect x="928.8" y="373" width="0.4" height="15.0" fill="rgb(226,82,28)" rx="2" ry="2" />
<text  x="931.77" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (51 samples, 0.82%)</title><rect x="1002.3" y="373" width="9.7" height="15.0" fill="rgb(253,135,6)" rx="2" ry="2" />
<text  x="1005.32" y="383.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="765.5" y="293" width="0.2" height="15.0" fill="rgb(249,20,8)" rx="2" ry="2" />
<text  x="768.48" y="303.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (138 samples, 2.23%)</title><rect x="1026.1" y="437" width="26.3" height="15.0" fill="rgb(218,25,24)" rx="2" ry="2" />
<text  x="1029.14" y="447.5" >s..</text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (76 samples, 1.23%)</title><rect x="822.5" y="421" width="14.4" height="15.0" fill="rgb(235,124,18)" rx="2" ry="2" />
<text  x="825.45" y="431.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="1065.4" y="309" width="0.2" height="15.0" fill="rgb(216,194,52)" rx="2" ry="2" />
<text  x="1068.39" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="687.4" y="325" width="0.2" height="15.0" fill="rgb(248,213,12)" rx="2" ry="2" />
<text  x="690.36" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.32%)</title><rect x="818.6" y="437" width="3.9" height="15.0" fill="rgb(228,3,22)" rx="2" ry="2" />
<text  x="821.64" y="447.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="652.7" y="293" width="0.2" height="15.0" fill="rgb(223,8,44)" rx="2" ry="2" />
<text  x="655.68" y="303.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (45 samples, 0.73%)</title><rect x="828.4" y="389" width="8.5" height="15.0" fill="rgb(242,198,48)" rx="2" ry="2" />
<text  x="831.36" y="399.5" ></text>
</g>
<g >
<title>dispatcher (1,413 samples, 22.82%)</title><rect x="811.6" y="469" width="269.2" height="15.0" fill="rgb(225,77,11)" rx="2" ry="2" />
<text  x="814.59" y="479.5" >dispatcher</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (175 samples, 2.83%)</title><rect x="885.5" y="421" width="33.4" height="15.0" fill="rgb(243,54,20)" rx="2" ry="2" />
<text  x="888.52" y="431.5" >&lt;a..</text>
</g>
<g >
<title>find_next_and_bit (2 samples, 0.03%)</title><rect x="232.7" y="341" width="0.4" height="15.0" fill="rgb(231,81,19)" rx="2" ry="2" />
<text  x="235.74" y="351.5" ></text>
</g>
<g >
<title>ret_from_fork (3 samples, 0.05%)</title><rect x="39.9" y="581" width="0.6" height="15.0" fill="rgb(232,22,14)" rx="2" ry="2" />
<text  x="42.91" y="591.5" ></text>
</g>
<g >
<title>balance_pgdat (4 samples, 0.06%)</title><rect x="1174.8" y="533" width="0.7" height="15.0" fill="rgb(215,140,23)" rx="2" ry="2" />
<text  x="1177.76" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="267.4" y="517" width="0.2" height="15.0" fill="rgb(228,3,36)" rx="2" ry="2" />
<text  x="270.42" y="527.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="928.6" y="421" width="0.2" height="15.0" fill="rgb(221,175,18)" rx="2" ry="2" />
<text  x="931.58" y="431.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="1139.7" y="517" width="0.2" height="15.0" fill="rgb(238,197,10)" rx="2" ry="2" />
<text  x="1142.70" y="527.5" ></text>
</g>
<g >
<title>check_tsc_unstable (1 samples, 0.02%)</title><rect x="141.7" y="437" width="0.2" height="15.0" fill="rgb(229,195,11)" rx="2" ry="2" />
<text  x="144.66" y="447.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.02%)</title><rect x="361.4" y="421" width="0.1" height="15.0" fill="rgb(208,154,26)" rx="2" ry="2" />
<text  x="364.35" y="431.5" ></text>
</g>
<g >
<title>menu_update (3 samples, 0.05%)</title><rect x="120.1" y="469" width="0.6" height="15.0" fill="rgb(207,14,14)" rx="2" ry="2" />
<text  x="123.13" y="479.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (18 samples, 0.29%)</title><rect x="299.6" y="549" width="3.4" height="15.0" fill="rgb(210,84,25)" rx="2" ry="2" />
<text  x="302.62" y="559.5" ></text>
</g>
<g >
<title>shrink_active_list (1 samples, 0.02%)</title><rect x="1174.8" y="469" width="0.1" height="15.0" fill="rgb(237,54,48)" rx="2" ry="2" />
<text  x="1177.76" y="479.5" ></text>
</g>
<g >
<title>errseq_sample (1 samples, 0.02%)</title><rect x="39.3" y="453" width="0.2" height="15.0" fill="rgb(232,212,29)" rx="2" ry="2" />
<text  x="42.34" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (29 samples, 0.47%)</title><rect x="822.8" y="373" width="5.6" height="15.0" fill="rgb(248,49,31)" rx="2" ry="2" />
<text  x="825.83" y="383.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="216.7" y="245" width="0.2" height="15.0" fill="rgb(226,30,25)" rx="2" ry="2" />
<text  x="219.73" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (8 samples, 0.13%)</title><rect x="1137.6" y="437" width="1.5" height="15.0" fill="rgb(231,29,14)" rx="2" ry="2" />
<text  x="1140.60" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (29 samples, 0.47%)</title><rect x="822.8" y="389" width="5.6" height="15.0" fill="rgb(249,53,51)" rx="2" ry="2" />
<text  x="825.83" y="399.5" ></text>
</g>
<g >
<title>__perf_event_enable (63 samples, 1.02%)</title><rect x="252.7" y="277" width="12.0" height="15.0" fill="rgb(235,14,49)" rx="2" ry="2" />
<text  x="255.75" y="287.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="43.9" y="405" width="0.2" height="15.0" fill="rgb(217,85,40)" rx="2" ry="2" />
<text  x="46.92" y="415.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="1137.6" y="389" width="0.2" height="15.0" fill="rgb(211,132,45)" rx="2" ry="2" />
<text  x="1140.60" y="399.5" ></text>
</g>
<g >
<title>rmap_walk_file (1 samples, 0.02%)</title><rect x="1174.8" y="421" width="0.1" height="15.0" fill="rgb(245,176,42)" rx="2" ry="2" />
<text  x="1177.76" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (74 samples, 1.19%)</title><rect x="1012.0" y="405" width="14.1" height="15.0" fill="rgb(215,148,17)" rx="2" ry="2" />
<text  x="1015.04" y="415.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.06%)</title><rect x="1170.9" y="533" width="0.8" height="15.0" fill="rgb(214,94,1)" rx="2" ry="2" />
<text  x="1173.95" y="543.5" ></text>
</g>
<g >
<title>sched_idle_set_state (1 samples, 0.02%)</title><rect x="118.0" y="485" width="0.2" height="15.0" fill="rgb(234,166,47)" rx="2" ry="2" />
<text  x="121.03" y="495.5" ></text>
</g>
<g >
<title>prune_dcache_sb (1 samples, 0.02%)</title><rect x="1175.3" y="421" width="0.2" height="15.0" fill="rgb(244,115,33)" rx="2" ry="2" />
<text  x="1178.33" y="431.5" ></text>
</g>
<g >
<title>poll_idle (211 samples, 3.41%)</title><rect x="148.3" y="405" width="40.2" height="15.0" fill="rgb(239,22,52)" rx="2" ry="2" />
<text  x="151.33" y="415.5" >pol..</text>
</g>
<g >
<title>get_typical_interval (7 samples, 0.11%)</title><rect x="196.7" y="405" width="1.4" height="15.0" fill="rgb(234,105,9)" rx="2" ry="2" />
<text  x="199.73" y="415.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (137 samples, 2.21%)</title><rect x="1026.3" y="421" width="26.1" height="15.0" fill="rgb(233,53,25)" rx="2" ry="2" />
<text  x="1029.33" y="431.5" >s..</text>
</g>
<g >
<title>do_epoll_pwait.part.0 (3 samples, 0.05%)</title><rect x="38.4" y="533" width="0.6" height="15.0" fill="rgb(250,182,6)" rx="2" ry="2" />
<text  x="41.39" y="543.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="1020.2" y="325" width="2.3" height="15.0" fill="rgb(227,196,52)" rx="2" ry="2" />
<text  x="1023.23" y="335.5" ></text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.02%)</title><rect x="265.7" y="453" width="0.2" height="15.0" fill="rgb(253,100,31)" rx="2" ry="2" />
<text  x="268.70" y="463.5" ></text>
</g>
<g >
<title>kick_ilb (60 samples, 0.97%)</title><rect x="229.3" y="373" width="11.4" height="15.0" fill="rgb(246,97,27)" rx="2" ry="2" />
<text  x="232.31" y="383.5" ></text>
</g>
<g >
<title>schedule_idle (146 samples, 2.36%)</title><rect x="215.6" y="453" width="27.8" height="15.0" fill="rgb(222,204,48)" rx="2" ry="2" />
<text  x="218.59" y="463.5" >s..</text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="44.1" y="293" width="0.2" height="15.0" fill="rgb(228,19,17)" rx="2" ry="2" />
<text  x="47.11" y="303.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (63 samples, 1.02%)</title><rect x="252.7" y="517" width="12.0" height="15.0" fill="rgb(241,167,46)" rx="2" ry="2" />
<text  x="255.75" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (2,121 samples, 34.25%)</title><rect x="361.5" y="453" width="404.2" height="15.0" fill="rgb(215,47,19)" rx="2" ry="2" />
<text  x="364.54" y="463.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustpos..</text>
</g>
<g >
<title>map_pte (1 samples, 0.02%)</title><rect x="1174.8" y="373" width="0.1" height="15.0" fill="rgb(227,29,16)" rx="2" ry="2" />
<text  x="1177.76" y="383.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="243.2" y="437" width="0.2" height="15.0" fill="rgb(238,133,41)" rx="2" ry="2" />
<text  x="246.22" y="447.5" ></text>
</g>
<g >
<title>cpu_startup_entry (27 samples, 0.44%)</title><rect x="1184.9" y="485" width="5.1" height="15.0" fill="rgb(247,220,16)" rx="2" ry="2" />
<text  x="1187.86" y="495.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (4 samples, 0.06%)</title><rect x="1171.7" y="533" width="0.8" height="15.0" fill="rgb(249,135,2)" rx="2" ry="2" />
<text  x="1174.71" y="543.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (2 samples, 0.03%)</title><rect x="141.9" y="437" width="0.3" height="15.0" fill="rgb(211,98,48)" rx="2" ry="2" />
<text  x="144.85" y="447.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.02%)</title><rect x="39.7" y="485" width="0.2" height="15.0" fill="rgb(238,67,9)" rx="2" ry="2" />
<text  x="42.72" y="495.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (1,476 samples, 23.83%)</title><rect x="799.6" y="501" width="281.2" height="15.0" fill="rgb(236,87,38)" rx="2" ry="2" />
<text  x="802.59" y="511.5" >NaClHostDescWrite</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.03%)</title><rect x="928.8" y="325" width="0.4" height="15.0" fill="rgb(254,85,40)" rx="2" ry="2" />
<text  x="931.77" y="335.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="997.0" y="261" width="0.2" height="15.0" fill="rgb(230,208,7)" rx="2" ry="2" />
<text  x="999.99" y="271.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.02%)</title><rect x="1172.5" y="309" width="0.2" height="15.0" fill="rgb(232,131,51)" rx="2" ry="2" />
<text  x="1175.47" y="319.5" ></text>
</g>
<g >
<title>event_function_call (1 samples, 0.02%)</title><rect x="265.7" y="469" width="0.2" height="15.0" fill="rgb(211,54,17)" rx="2" ry="2" />
<text  x="268.70" y="479.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.02%)</title><rect x="1187.9" y="421" width="0.2" height="15.0" fill="rgb(223,96,13)" rx="2" ry="2" />
<text  x="1190.90" y="431.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="44.5" y="437" width="0.2" height="15.0" fill="rgb(232,98,49)" rx="2" ry="2" />
<text  x="47.49" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.13%)</title><rect x="38.4" y="565" width="1.5" height="15.0" fill="rgb(242,225,46)" rx="2" ry="2" />
<text  x="41.39" y="575.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="997.0" y="277" width="0.2" height="15.0" fill="rgb(247,132,29)" rx="2" ry="2" />
<text  x="999.99" y="287.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.08%)</title><rect x="1063.1" y="389" width="1.0" height="15.0" fill="rgb(207,104,1)" rx="2" ry="2" />
<text  x="1066.10" y="399.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (49 samples, 0.79%)</title><rect x="1175.5" y="469" width="9.4" height="15.0" fill="rgb(223,73,37)" rx="2" ry="2" />
<text  x="1178.52" y="479.5" ></text>
</g>
<g >
<title>fdarray__poll (1 samples, 0.02%)</title><rect x="264.7" y="533" width="0.2" height="15.0" fill="rgb(246,45,2)" rx="2" ry="2" />
<text  x="267.75" y="543.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (43 samples, 0.69%)</title><rect x="1081.0" y="517" width="8.2" height="15.0" fill="rgb(245,3,42)" rx="2" ry="2" />
<text  x="1084.01" y="527.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="264.7" y="405" width="0.2" height="15.0" fill="rgb(232,81,6)" rx="2" ry="2" />
<text  x="267.75" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.03%)</title><rect x="44.1" y="405" width="0.4" height="15.0" fill="rgb(245,2,16)" rx="2" ry="2" />
<text  x="47.11" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.02%)</title><rect x="264.7" y="469" width="0.2" height="15.0" fill="rgb(218,21,51)" rx="2" ry="2" />
<text  x="267.75" y="479.5" ></text>
</g>
<g >
<title>shrink_node (1 samples, 0.02%)</title><rect x="39.9" y="517" width="0.2" height="15.0" fill="rgb(232,165,16)" rx="2" ry="2" />
<text  x="42.91" y="527.5" ></text>
</g>
<g >
<title>menu_update (12 samples, 0.19%)</title><rect x="198.1" y="405" width="2.2" height="15.0" fill="rgb(241,147,6)" rx="2" ry="2" />
<text  x="201.06" y="415.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="652.7" y="309" width="0.2" height="15.0" fill="rgb(234,6,34)" rx="2" ry="2" />
<text  x="655.68" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.03%)</title><rect x="1067.9" y="325" width="0.3" height="15.0" fill="rgb(211,170,4)" rx="2" ry="2" />
<text  x="1070.87" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="837.3" y="405" width="0.2" height="15.0" fill="rgb(245,170,30)" rx="2" ry="2" />
<text  x="840.31" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="765.5" y="341" width="0.2" height="15.0" fill="rgb(209,18,26)" rx="2" ry="2" />
<text  x="768.48" y="351.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="1068.4" y="437" width="0.2" height="15.0" fill="rgb(206,228,39)" rx="2" ry="2" />
<text  x="1071.44" y="447.5" ></text>
</g>
<g >
<title>[anon] (194 samples, 3.13%)</title><rect x="268.2" y="581" width="36.9" height="15.0" fill="rgb(236,171,9)" rx="2" ry="2" />
<text  x="271.18" y="591.5" >[an..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (1 samples, 0.02%)</title><rect x="268.0" y="517" width="0.2" height="15.0" fill="rgb(214,72,49)" rx="2" ry="2" />
<text  x="270.99" y="527.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (1 samples, 0.02%)</title><rect x="997.0" y="165" width="0.2" height="15.0" fill="rgb(212,195,45)" rx="2" ry="2" />
<text  x="999.99" y="175.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="38.4" y="485" width="0.2" height="15.0" fill="rgb(217,113,38)" rx="2" ry="2" />
<text  x="41.39" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="264.7" y="501" width="0.2" height="15.0" fill="rgb(231,204,13)" rx="2" ry="2" />
<text  x="267.75" y="511.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="388.0" y="293" width="0.2" height="15.0" fill="rgb(248,171,40)" rx="2" ry="2" />
<text  x="391.03" y="303.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.02%)</title><rect x="247.6" y="389" width="0.2" height="15.0" fill="rgb(231,48,12)" rx="2" ry="2" />
<text  x="250.60" y="399.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (1 samples, 0.02%)</title><rect x="116.1" y="453" width="0.2" height="15.0" fill="rgb(221,79,51)" rx="2" ry="2" />
<text  x="119.13" y="463.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (2 samples, 0.03%)</title><rect x="267.6" y="533" width="0.4" height="15.0" fill="rgb(242,27,34)" rx="2" ry="2" />
<text  x="270.61" y="543.5" ></text>
</g>
<g >
<title>irq_enter_rcu (2 samples, 0.03%)</title><rect x="146.0" y="373" width="0.4" height="15.0" fill="rgb(220,136,43)" rx="2" ry="2" />
<text  x="149.04" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (6 samples, 0.10%)</title><rect x="836.9" y="453" width="1.2" height="15.0" fill="rgb(226,111,36)" rx="2" ry="2" />
<text  x="839.93" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="289.1" y="549" width="0.4" height="15.0" fill="rgb(224,144,49)" rx="2" ry="2" />
<text  x="292.14" y="559.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="361.4" y="437" width="0.1" height="15.0" fill="rgb(206,181,46)" rx="2" ry="2" />
<text  x="364.35" y="447.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (1 samples, 0.02%)</title><rect x="1141.0" y="549" width="0.2" height="15.0" fill="rgb(222,101,31)" rx="2" ry="2" />
<text  x="1144.03" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.03%)</title><rect x="980.0" y="373" width="0.4" height="15.0" fill="rgb(240,0,7)" rx="2" ry="2" />
<text  x="983.03" y="383.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.02%)</title><rect x="116.9" y="453" width="0.2" height="15.0" fill="rgb(220,207,35)" rx="2" ry="2" />
<text  x="119.89" y="463.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="44.1" y="277" width="0.2" height="15.0" fill="rgb(206,107,3)" rx="2" ry="2" />
<text  x="47.11" y="287.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (63 samples, 1.02%)</title><rect x="252.7" y="501" width="12.0" height="15.0" fill="rgb(253,179,38)" rx="2" ry="2" />
<text  x="255.75" y="511.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="388.0" y="389" width="0.2" height="15.0" fill="rgb(213,136,50)" rx="2" ry="2" />
<text  x="391.03" y="399.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.02%)</title><rect x="265.7" y="437" width="0.2" height="15.0" fill="rgb(213,46,49)" rx="2" ry="2" />
<text  x="268.70" y="447.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="388.0" y="325" width="0.2" height="15.0" fill="rgb(207,49,11)" rx="2" ry="2" />
<text  x="391.03" y="335.5" ></text>
</g>
<g >
<title>[sel_ldr] (131 samples, 2.12%)</title><rect x="1112.1" y="565" width="24.9" height="15.0" fill="rgb(241,229,21)" rx="2" ry="2" />
<text  x="1115.07" y="575.5" >[..</text>
</g>
<g >
<title>NaClGetDescMuNoRef (2 samples, 0.03%)</title><rect x="268.9" y="565" width="0.4" height="15.0" fill="rgb(214,115,24)" rx="2" ry="2" />
<text  x="271.94" y="575.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (38 samples, 0.61%)</title><rect x="129.3" y="453" width="7.2" height="15.0" fill="rgb(211,165,33)" rx="2" ry="2" />
<text  x="132.28" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="218.1" y="389" width="0.2" height="15.0" fill="rgb(222,104,28)" rx="2" ry="2" />
<text  x="221.07" y="399.5" ></text>
</g>
<g >
<title>cpuidle_select (76 samples, 1.23%)</title><rect x="193.1" y="437" width="14.5" height="15.0" fill="rgb(222,92,47)" rx="2" ry="2" />
<text  x="196.11" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="1019.3" y="325" width="0.2" height="15.0" fill="rgb(223,53,42)" rx="2" ry="2" />
<text  x="1022.28" y="335.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="233.1" y="357" width="0.2" height="15.0" fill="rgb(248,55,29)" rx="2" ry="2" />
<text  x="236.12" y="367.5" ></text>
</g>
<g >
<title>cpu_startup_entry (49 samples, 0.79%)</title><rect x="1175.5" y="549" width="9.4" height="15.0" fill="rgb(211,181,26)" rx="2" ry="2" />
<text  x="1178.52" y="559.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (3 samples, 0.05%)</title><rect x="940.8" y="405" width="0.5" height="15.0" fill="rgb(239,146,54)" rx="2" ry="2" />
<text  x="943.78" y="415.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (6 samples, 0.10%)</title><rect x="1052.4" y="421" width="1.2" height="15.0" fill="rgb(206,196,36)" rx="2" ry="2" />
<text  x="1055.43" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.02%)</title><rect x="247.6" y="437" width="0.2" height="15.0" fill="rgb(222,156,36)" rx="2" ry="2" />
<text  x="250.60" y="447.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (77 samples, 1.24%)</title><rect x="997.4" y="421" width="14.6" height="15.0" fill="rgb(207,153,23)" rx="2" ry="2" />
<text  x="1000.37" y="431.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="205.9" y="341" width="0.5" height="15.0" fill="rgb(239,8,12)" rx="2" ry="2" />
<text  x="208.87" y="351.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="39.2" y="469" width="0.1" height="15.0" fill="rgb(214,53,16)" rx="2" ry="2" />
<text  x="42.15" y="479.5" ></text>
</g>
<g >
<title>kswapd (1 samples, 0.02%)</title><rect x="39.9" y="549" width="0.2" height="15.0" fill="rgb(222,146,8)" rx="2" ry="2" />
<text  x="42.91" y="559.5" ></text>
</g>
<g >
<title>sync_regs (2 samples, 0.03%)</title><rect x="1140.1" y="565" width="0.4" height="15.0" fill="rgb(242,54,10)" rx="2" ry="2" />
<text  x="1143.08" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="265.9" y="549" width="0.2" height="15.0" fill="rgb(241,131,6)" rx="2" ry="2" />
<text  x="268.89" y="559.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.03%)</title><rect x="44.1" y="437" width="0.4" height="15.0" fill="rgb(252,156,53)" rx="2" ry="2" />
<text  x="47.11" y="447.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (9 samples, 0.15%)</title><rect x="130.4" y="437" width="1.7" height="15.0" fill="rgb(226,197,20)" rx="2" ry="2" />
<text  x="133.42" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (36 samples, 0.58%)</title><rect x="200.5" y="405" width="6.9" height="15.0" fill="rgb(217,129,0)" rx="2" ry="2" />
<text  x="203.54" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (26 samples, 0.42%)</title><rect x="1013.9" y="325" width="5.0" height="15.0" fill="rgb(230,6,50)" rx="2" ry="2" />
<text  x="1016.94" y="335.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1174.4" y="485" width="0.2" height="15.0" fill="rgb(213,148,38)" rx="2" ry="2" />
<text  x="1177.38" y="495.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (1 samples, 0.02%)</title><rect x="1151.1" y="517" width="0.2" height="15.0" fill="rgb(218,210,37)" rx="2" ry="2" />
<text  x="1154.13" y="527.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (1 samples, 0.02%)</title><rect x="997.4" y="373" width="0.2" height="15.0" fill="rgb(231,144,48)" rx="2" ry="2" />
<text  x="1000.37" y="383.5" ></text>
</g>
<g >
<title>process_one_work (2 samples, 0.03%)</title><rect x="40.1" y="533" width="0.4" height="15.0" fill="rgb(229,174,43)" rx="2" ry="2" />
<text  x="43.10" y="543.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (16 samples, 0.26%)</title><rect x="1019.5" y="357" width="3.0" height="15.0" fill="rgb(244,24,31)" rx="2" ry="2" />
<text  x="1022.47" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.10%)</title><rect x="1012.8" y="325" width="1.1" height="15.0" fill="rgb(239,36,17)" rx="2" ry="2" />
<text  x="1015.80" y="335.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (185 samples, 2.99%)</title><rect x="942.1" y="373" width="35.3" height="15.0" fill="rgb(253,63,4)" rx="2" ry="2" />
<text  x="945.11" y="383.5" >st..</text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.08%)</title><rect x="187.6" y="389" width="0.9" height="15.0" fill="rgb(208,1,0)" rx="2" ry="2" />
<text  x="190.58" y="399.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 1.02%)</title><rect x="252.7" y="261" width="12.0" height="15.0" fill="rgb(235,133,51)" rx="2" ry="2" />
<text  x="255.75" y="271.5" ></text>
</g>
<g >
<title>shrink_slab_memcg (1 samples, 0.02%)</title><rect x="39.9" y="469" width="0.2" height="15.0" fill="rgb(238,10,48)" rx="2" ry="2" />
<text  x="42.91" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (20 samples, 0.32%)</title><rect x="818.6" y="453" width="3.9" height="15.0" fill="rgb(223,54,25)" rx="2" ry="2" />
<text  x="821.64" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="137.1" y="501" width="0.2" height="15.0" fill="rgb(224,229,34)" rx="2" ry="2" />
<text  x="140.09" y="511.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="1066.3" y="373" width="0.6" height="15.0" fill="rgb(237,61,18)" rx="2" ry="2" />
<text  x="1069.34" y="383.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (76 samples, 1.23%)</title><rect x="997.6" y="405" width="14.4" height="15.0" fill="rgb(247,117,29)" rx="2" ry="2" />
<text  x="1000.56" y="415.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (2 samples, 0.03%)</title><rect x="361.0" y="533" width="0.4" height="15.0" fill="rgb(209,197,42)" rx="2" ry="2" />
<text  x="363.97" y="543.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="44.1" y="421" width="0.4" height="15.0" fill="rgb(242,139,36)" rx="2" ry="2" />
<text  x="47.11" y="431.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.11%)</title><rect x="1064.2" y="357" width="1.4" height="15.0" fill="rgb(234,128,47)" rx="2" ry="2" />
<text  x="1067.25" y="367.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (3 samples, 0.05%)</title><rect x="141.7" y="453" width="0.5" height="15.0" fill="rgb(219,187,50)" rx="2" ry="2" />
<text  x="144.66" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (29 samples, 0.47%)</title><rect x="1060.1" y="405" width="5.5" height="15.0" fill="rgb(248,104,43)" rx="2" ry="2" />
<text  x="1063.05" y="415.5" ></text>
</g>
<g >
<title>core::cmp::min (3 samples, 0.05%)</title><rect x="940.8" y="421" width="0.5" height="15.0" fill="rgb(250,67,34)" rx="2" ry="2" />
<text  x="943.78" y="431.5" ></text>
</g>
<g >
<title>NaClSimpleServiceAcceptAndSpawnHandler (1 samples, 0.02%)</title><rect x="1172.5" y="517" width="0.2" height="15.0" fill="rgb(232,1,33)" rx="2" ry="2" />
<text  x="1175.47" y="527.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (3 samples, 0.05%)</title><rect x="122.0" y="421" width="0.6" height="15.0" fill="rgb(249,19,10)" rx="2" ry="2" />
<text  x="125.04" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (7 samples, 0.11%)</title><rect x="1024.8" y="341" width="1.3" height="15.0" fill="rgb(206,86,16)" rx="2" ry="2" />
<text  x="1027.80" y="351.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (49 samples, 0.79%)</title><rect x="1175.5" y="517" width="9.4" height="15.0" fill="rgb(252,160,5)" rx="2" ry="2" />
<text  x="1178.52" y="527.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (2 samples, 0.03%)</title><rect x="289.1" y="517" width="0.4" height="15.0" fill="rgb(243,16,23)" rx="2" ry="2" />
<text  x="292.14" y="527.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.03%)</title><rect x="980.0" y="357" width="0.4" height="15.0" fill="rgb(212,38,41)" rx="2" ry="2" />
<text  x="983.03" y="367.5" ></text>
</g>
<g >
<title>__schedule (143 samples, 2.31%)</title><rect x="215.8" y="437" width="27.2" height="15.0" fill="rgb(236,112,38)" rx="2" ry="2" />
<text  x="218.78" y="447.5" >_..</text>
</g>
<g >
<title>__queue_delayed_work (1 samples, 0.02%)</title><rect x="40.3" y="485" width="0.2" height="15.0" fill="rgb(239,103,33)" rx="2" ry="2" />
<text  x="43.30" y="495.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (10 samples, 0.16%)</title><rect x="1095.9" y="517" width="1.9" height="15.0" fill="rgb(238,214,26)" rx="2" ry="2" />
<text  x="1098.87" y="527.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (2 samples, 0.03%)</title><rect x="196.3" y="405" width="0.4" height="15.0" fill="rgb(214,108,44)" rx="2" ry="2" />
<text  x="199.35" y="415.5" ></text>
</g>
<g >
<title>timekeeping_max_deferment (1 samples, 0.02%)</title><rect x="122.6" y="437" width="0.2" height="15.0" fill="rgb(215,41,16)" rx="2" ry="2" />
<text  x="125.61" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (45 samples, 0.73%)</title><rect x="1059.9" y="437" width="8.5" height="15.0" fill="rgb(232,44,43)" rx="2" ry="2" />
<text  x="1062.86" y="447.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.02%)</title><rect x="1187.7" y="389" width="0.2" height="15.0" fill="rgb(252,161,17)" rx="2" ry="2" />
<text  x="1190.71" y="399.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.02%)</title><rect x="229.1" y="373" width="0.2" height="15.0" fill="rgb(223,114,0)" rx="2" ry="2" />
<text  x="232.12" y="383.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (2 samples, 0.03%)</title><rect x="270.5" y="565" width="0.3" height="15.0" fill="rgb(242,9,26)" rx="2" ry="2" />
<text  x="273.47" y="575.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (4 samples, 0.06%)</title><rect x="786.1" y="533" width="0.7" height="15.0" fill="rgb(243,130,17)" rx="2" ry="2" />
<text  x="789.06" y="543.5" ></text>
</g>
<g >
<title>NaClSysWrite (1 samples, 0.02%)</title><rect x="270.1" y="565" width="0.2" height="15.0" fill="rgb(216,18,52)" rx="2" ry="2" />
<text  x="273.08" y="575.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="39.2" y="485" width="0.1" height="15.0" fill="rgb(224,215,44)" rx="2" ry="2" />
<text  x="42.15" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.23%)</title><rect x="1014.7" y="309" width="2.7" height="15.0" fill="rgb(231,12,19)" rx="2" ry="2" />
<text  x="1017.71" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (13 samples, 0.21%)</title><rect x="243.4" y="453" width="2.5" height="15.0" fill="rgb(229,4,2)" rx="2" ry="2" />
<text  x="246.41" y="463.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.02%)</title><rect x="227.8" y="341" width="0.2" height="15.0" fill="rgb(216,168,31)" rx="2" ry="2" />
<text  x="230.78" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (36 samples, 0.58%)</title><rect x="1082.2" y="501" width="6.8" height="15.0" fill="rgb(248,163,40)" rx="2" ry="2" />
<text  x="1085.16" y="511.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="357.5" y="501" width="0.2" height="15.0" fill="rgb(245,21,7)" rx="2" ry="2" />
<text  x="360.54" y="511.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="267.4" y="549" width="0.2" height="15.0" fill="rgb(242,121,19)" rx="2" ry="2" />
<text  x="270.42" y="559.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (4 samples, 0.06%)</title><rect x="264.9" y="277" width="0.8" height="15.0" fill="rgb(221,4,3)" rx="2" ry="2" />
<text  x="267.94" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (104 samples, 1.68%)</title><rect x="849.3" y="437" width="19.8" height="15.0" fill="rgb(209,100,42)" rx="2" ry="2" />
<text  x="852.32" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (42 samples, 0.68%)</title><rect x="929.2" y="357" width="8.0" height="15.0" fill="rgb(229,163,37)" rx="2" ry="2" />
<text  x="932.15" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (2 samples, 0.03%)</title><rect x="202.1" y="373" width="0.3" height="15.0" fill="rgb(218,3,23)" rx="2" ry="2" />
<text  x="205.06" y="383.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.02%)</title><rect x="39.5" y="517" width="0.2" height="15.0" fill="rgb(225,54,46)" rx="2" ry="2" />
<text  x="42.53" y="527.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (436 samples, 7.04%)</title><rect x="40.7" y="517" width="83.1" height="15.0" fill="rgb(228,92,9)" rx="2" ry="2" />
<text  x="43.68" y="527.5" >cpuidle_i..</text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (6 samples, 0.10%)</title><rect x="651.7" y="357" width="1.2" height="15.0" fill="rgb(220,74,41)" rx="2" ry="2" />
<text  x="654.73" y="367.5" ></text>
</g>
<g >
<title>do_truncate (1 samples, 0.02%)</title><rect x="39.0" y="517" width="0.2" height="15.0" fill="rgb(253,194,39)" rx="2" ry="2" />
<text  x="41.96" y="527.5" ></text>
</g>
<g >
<title>do_iter_write (4 samples, 0.06%)</title><rect x="264.9" y="293" width="0.8" height="15.0" fill="rgb(224,134,31)" rx="2" ry="2" />
<text  x="267.94" y="303.5" ></text>
</g>
<g >
<title>native_sched_clock (4 samples, 0.06%)</title><rect x="242.3" y="389" width="0.7" height="15.0" fill="rgb(253,213,10)" rx="2" ry="2" />
<text  x="245.27" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (2 samples, 0.03%)</title><rect x="289.1" y="485" width="0.4" height="15.0" fill="rgb(228,12,13)" rx="2" ry="2" />
<text  x="292.14" y="495.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,114 samples, 17.99%)</title><rect x="40.5" y="581" width="212.2" height="15.0" fill="rgb(248,92,52)" rx="2" ry="2" />
<text  x="43.49" y="591.5" >secondary_startup_64_no_ver..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1172.5" y="293" width="0.2" height="15.0" fill="rgb(251,81,39)" rx="2" ry="2" />
<text  x="1175.47" y="303.5" ></text>
</g>
<g >
<title>alx_poll (1 samples, 0.02%)</title><rect x="997.0" y="213" width="0.2" height="15.0" fill="rgb(244,32,53)" rx="2" ry="2" />
<text  x="999.99" y="223.5" ></text>
</g>
<g >
<title>lind_write (2 samples, 0.03%)</title><rect x="289.7" y="565" width="0.4" height="15.0" fill="rgb(213,226,27)" rx="2" ry="2" />
<text  x="292.71" y="575.5" ></text>
</g>
<g >
<title>swapper (84 samples, 1.36%)</title><rect x="1174.0" y="597" width="16.0" height="15.0" fill="rgb(252,5,16)" rx="2" ry="2" />
<text  x="1176.99" y="607.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.03%)</title><rect x="1065.0" y="293" width="0.4" height="15.0" fill="rgb(248,28,17)" rx="2" ry="2" />
<text  x="1068.01" y="303.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (4 samples, 0.06%)</title><rect x="264.9" y="245" width="0.8" height="15.0" fill="rgb(232,53,45)" rx="2" ry="2" />
<text  x="267.94" y="255.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (64 samples, 1.03%)</title><rect x="770.6" y="517" width="12.2" height="15.0" fill="rgb(242,17,30)" rx="2" ry="2" />
<text  x="773.63" y="527.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.02%)</title><rect x="129.1" y="453" width="0.2" height="15.0" fill="rgb(251,31,33)" rx="2" ry="2" />
<text  x="132.09" y="463.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (87 samples, 1.40%)</title><rect x="768.7" y="533" width="16.6" height="15.0" fill="rgb(249,124,31)" rx="2" ry="2" />
<text  x="771.72" y="543.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="245.7" y="421" width="0.2" height="15.0" fill="rgb(253,127,32)" rx="2" ry="2" />
<text  x="248.70" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (118 samples, 1.91%)</title><rect x="557.6" y="373" width="22.5" height="15.0" fill="rgb(253,74,37)" rx="2" ry="2" />
<text  x="560.61" y="383.5" >c..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="388.0" y="421" width="0.2" height="15.0" fill="rgb(237,73,27)" rx="2" ry="2" />
<text  x="391.03" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="687.4" y="277" width="0.2" height="15.0" fill="rgb(214,160,30)" rx="2" ry="2" />
<text  x="690.36" y="287.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="216.7" y="213" width="0.2" height="15.0" fill="rgb(231,95,22)" rx="2" ry="2" />
<text  x="219.73" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (15 samples, 0.24%)</title><rect x="1137.0" y="549" width="2.9" height="15.0" fill="rgb(216,13,30)" rx="2" ry="2" />
<text  x="1140.03" y="559.5" ></text>
</g>
<g >
<title>rcu_idle_exit (9 samples, 0.15%)</title><rect x="189.1" y="405" width="1.7" height="15.0" fill="rgb(208,181,7)" rx="2" ry="2" />
<text  x="192.11" y="415.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="40.3" y="453" width="0.2" height="15.0" fill="rgb(209,159,33)" rx="2" ry="2" />
<text  x="43.30" y="463.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="1089.0" y="501" width="0.2" height="15.0" fill="rgb(222,62,22)" rx="2" ry="2" />
<text  x="1092.02" y="511.5" ></text>
</g>
<g >
<title>shrink_slab (1 samples, 0.02%)</title><rect x="1175.3" y="485" width="0.2" height="15.0" fill="rgb(216,151,25)" rx="2" ry="2" />
<text  x="1178.33" y="495.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="44.5" y="373" width="0.2" height="15.0" fill="rgb(225,217,28)" rx="2" ry="2" />
<text  x="47.49" y="383.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.02%)</title><rect x="1138.7" y="389" width="0.2" height="15.0" fill="rgb(210,142,27)" rx="2" ry="2" />
<text  x="1141.75" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (4 samples, 0.06%)</title><rect x="137.7" y="517" width="0.7" height="15.0" fill="rgb(226,58,13)" rx="2" ry="2" />
<text  x="140.66" y="527.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (8 samples, 0.13%)</title><rect x="782.8" y="517" width="1.5" height="15.0" fill="rgb(247,141,37)" rx="2" ry="2" />
<text  x="785.82" y="527.5" ></text>
</g>
<g >
<title>do_open (1 samples, 0.02%)</title><rect x="39.3" y="485" width="0.2" height="15.0" fill="rgb(209,153,25)" rx="2" ry="2" />
<text  x="42.34" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (7 samples, 0.11%)</title><rect x="266.8" y="565" width="1.4" height="15.0" fill="rgb(213,59,1)" rx="2" ry="2" />
<text  x="269.84" y="575.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.02%)</title><rect x="264.7" y="437" width="0.2" height="15.0" fill="rgb(208,120,34)" rx="2" ry="2" />
<text  x="267.75" y="447.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="121.1" y="437" width="0.4" height="15.0" fill="rgb(237,9,37)" rx="2" ry="2" />
<text  x="124.08" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.03%)</title><rect x="1060.8" y="325" width="0.4" height="15.0" fill="rgb(234,13,39)" rx="2" ry="2" />
<text  x="1063.82" y="335.5" ></text>
</g>
<g >
<title>sched_clock_cpu (9 samples, 0.15%)</title><rect x="190.8" y="405" width="1.7" height="15.0" fill="rgb(205,86,2)" rx="2" ry="2" />
<text  x="193.82" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (33 samples, 0.53%)</title><rect x="1053.6" y="405" width="6.3" height="15.0" fill="rgb(253,36,43)" rx="2" ry="2" />
<text  x="1056.58" y="415.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (1 samples, 0.02%)</title><rect x="241.9" y="421" width="0.2" height="15.0" fill="rgb(220,188,0)" rx="2" ry="2" />
<text  x="244.88" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.13%)</title><rect x="38.4" y="581" width="1.5" height="15.0" fill="rgb(233,153,10)" rx="2" ry="2" />
<text  x="41.39" y="591.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="43.9" y="437" width="0.2" height="15.0" fill="rgb(237,149,5)" rx="2" ry="2" />
<text  x="46.92" y="447.5" ></text>
</g>
<g >
<title>start_secondary (520 samples, 8.40%)</title><rect x="40.5" y="565" width="99.1" height="15.0" fill="rgb(213,116,39)" rx="2" ry="2" />
<text  x="43.49" y="575.5" >start_secon..</text>
</g>
<g >
<title>core::sync::atomic::atomic_add (104 samples, 1.68%)</title><rect x="849.3" y="405" width="19.8" height="15.0" fill="rgb(239,54,7)" rx="2" ry="2" />
<text  x="852.32" y="415.5" ></text>
</g>
<g >
<title>prune_dcache_sb (1 samples, 0.02%)</title><rect x="39.9" y="421" width="0.2" height="15.0" fill="rgb(246,86,46)" rx="2" ry="2" />
<text  x="42.91" y="431.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="1185.2" y="293" width="0.2" height="15.0" fill="rgb(237,39,27)" rx="2" ry="2" />
<text  x="1188.24" y="303.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="1185.2" y="277" width="0.2" height="15.0" fill="rgb(222,55,11)" rx="2" ry="2" />
<text  x="1188.24" y="287.5" ></text>
</g>
<g >
<title>shrink_lruvec (3 samples, 0.05%)</title><rect x="1174.8" y="485" width="0.5" height="15.0" fill="rgb(214,37,24)" rx="2" ry="2" />
<text  x="1177.76" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.02%)</title><rect x="1066.7" y="325" width="0.2" height="15.0" fill="rgb(250,201,53)" rx="2" ry="2" />
<text  x="1069.72" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (104 samples, 1.68%)</title><rect x="849.3" y="421" width="19.8" height="15.0" fill="rgb(247,176,13)" rx="2" ry="2" />
<text  x="852.32" y="431.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 0.10%)</title><rect x="1188.7" y="437" width="1.1" height="15.0" fill="rgb(222,43,23)" rx="2" ry="2" />
<text  x="1191.67" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (7 samples, 0.11%)</title><rect x="1024.8" y="325" width="1.3" height="15.0" fill="rgb(243,47,48)" rx="2" ry="2" />
<text  x="1027.80" y="335.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (12 samples, 0.19%)</title><rect x="207.8" y="437" width="2.3" height="15.0" fill="rgb(226,229,5)" rx="2" ry="2" />
<text  x="210.78" y="447.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="264.9" y="181" width="0.2" height="15.0" fill="rgb(233,30,12)" rx="2" ry="2" />
<text  x="267.94" y="191.5" ></text>
</g>
<g >
<title>find_next_bit (1 samples, 0.02%)</title><rect x="228.0" y="341" width="0.2" height="15.0" fill="rgb(206,42,52)" rx="2" ry="2" />
<text  x="230.98" y="351.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="1139.1" y="437" width="0.2" height="15.0" fill="rgb(211,97,9)" rx="2" ry="2" />
<text  x="1142.13" y="447.5" ></text>
</g>
<g >
<title>get_page_from_freelist (7 samples, 0.11%)</title><rect x="1137.8" y="421" width="1.3" height="15.0" fill="rgb(217,35,32)" rx="2" ry="2" />
<text  x="1140.79" y="431.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.02%)</title><rect x="1141.0" y="421" width="0.2" height="15.0" fill="rgb(250,193,6)" rx="2" ry="2" />
<text  x="1144.03" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (8 samples, 0.13%)</title><rect x="1066.9" y="373" width="1.5" height="15.0" fill="rgb(253,163,37)" rx="2" ry="2" />
<text  x="1069.91" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (175 samples, 2.83%)</title><rect x="885.5" y="389" width="33.4" height="15.0" fill="rgb(221,200,37)" rx="2" ry="2" />
<text  x="888.52" y="399.5" >co..</text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="202.3" y="357" width="0.1" height="15.0" fill="rgb(207,226,43)" rx="2" ry="2" />
<text  x="205.25" y="367.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.02%)</title><rect x="131.9" y="421" width="0.2" height="15.0" fill="rgb(208,148,20)" rx="2" ry="2" />
<text  x="134.94" y="431.5" ></text>
</g>
<g >
<title>_perf_ioctl (1 samples, 0.02%)</title><rect x="265.7" y="517" width="0.2" height="15.0" fill="rgb(239,159,31)" rx="2" ry="2" />
<text  x="268.70" y="527.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="44.5" y="325" width="0.2" height="15.0" fill="rgb(210,175,12)" rx="2" ry="2" />
<text  x="47.49" y="335.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="765.5" y="213" width="0.2" height="15.0" fill="rgb(223,194,50)" rx="2" ry="2" />
<text  x="768.48" y="223.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="39.7" y="437" width="0.2" height="15.0" fill="rgb(253,98,2)" rx="2" ry="2" />
<text  x="42.72" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="204.0" y="373" width="0.5" height="15.0" fill="rgb(234,180,23)" rx="2" ry="2" />
<text  x="206.97" y="383.5" ></text>
</g>
<g >
<title>get_recent_times.isra.0 (1 samples, 0.02%)</title><rect x="40.1" y="485" width="0.2" height="15.0" fill="rgb(223,204,33)" rx="2" ry="2" />
<text  x="43.10" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (20 samples, 0.32%)</title><rect x="818.6" y="421" width="3.9" height="15.0" fill="rgb(209,103,10)" rx="2" ry="2" />
<text  x="821.64" y="431.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="216.7" y="293" width="0.2" height="15.0" fill="rgb(230,53,22)" rx="2" ry="2" />
<text  x="219.73" y="303.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (4 samples, 0.06%)</title><rect x="264.9" y="517" width="0.8" height="15.0" fill="rgb(243,41,21)" rx="2" ry="2" />
<text  x="267.94" y="527.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.02%)</title><rect x="1138.9" y="389" width="0.2" height="15.0" fill="rgb(221,92,28)" rx="2" ry="2" />
<text  x="1141.94" y="399.5" ></text>
</g>
<g >
<title>handle_pte_fault (11 samples, 0.18%)</title><rect x="1137.6" y="485" width="2.1" height="15.0" fill="rgb(227,106,5)" rx="2" ry="2" />
<text  x="1140.60" y="495.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="1066.3" y="357" width="0.6" height="15.0" fill="rgb(228,229,22)" rx="2" ry="2" />
<text  x="1069.34" y="367.5" ></text>
</g>
<g >
<title>super_cache_scan (1 samples, 0.02%)</title><rect x="39.9" y="437" width="0.2" height="15.0" fill="rgb(230,229,46)" rx="2" ry="2" />
<text  x="42.91" y="447.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.02%)</title><rect x="138.2" y="501" width="0.2" height="15.0" fill="rgb(253,153,4)" rx="2" ry="2" />
<text  x="141.23" y="511.5" ></text>
</g>
<g >
<title>worker_thread (2 samples, 0.03%)</title><rect x="40.1" y="549" width="0.4" height="15.0" fill="rgb(221,48,37)" rx="2" ry="2" />
<text  x="43.10" y="559.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (3 samples, 0.05%)</title><rect x="304.6" y="565" width="0.5" height="15.0" fill="rgb(233,4,40)" rx="2" ry="2" />
<text  x="307.57" y="575.5" ></text>
</g>
<g >
<title>llist_reverse_order (2 samples, 0.03%)</title><rect x="125.8" y="501" width="0.4" height="15.0" fill="rgb(245,127,4)" rx="2" ry="2" />
<text  x="128.85" y="511.5" ></text>
</g>
<g >
<title>__cmd_record (68 samples, 1.10%)</title><rect x="252.7" y="549" width="13.0" height="15.0" fill="rgb(217,29,37)" rx="2" ry="2" />
<text  x="255.75" y="559.5" ></text>
</g>
<g >
<title>schedule_idle (7 samples, 0.11%)</title><rect x="1188.7" y="453" width="1.3" height="15.0" fill="rgb(222,128,42)" rx="2" ry="2" />
<text  x="1191.67" y="463.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="38.4" y="469" width="0.2" height="15.0" fill="rgb(226,82,38)" rx="2" ry="2" />
<text  x="41.39" y="479.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (3 samples, 0.05%)</title><rect x="984.0" y="389" width="0.6" height="15.0" fill="rgb(210,66,40)" rx="2" ry="2" />
<text  x="987.03" y="399.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="39.5" y="501" width="0.2" height="15.0" fill="rgb(240,74,29)" rx="2" ry="2" />
<text  x="42.53" y="511.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="265.3" y="181" width="0.2" height="15.0" fill="rgb(213,187,3)" rx="2" ry="2" />
<text  x="268.32" y="191.5" ></text>
</g>
<g >
<title>ktime_get (2 samples, 0.03%)</title><rect x="244.0" y="437" width="0.4" height="15.0" fill="rgb(242,0,3)" rx="2" ry="2" />
<text  x="246.98" y="447.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="138.2" y="485" width="0.2" height="15.0" fill="rgb(247,145,20)" rx="2" ry="2" />
<text  x="141.23" y="495.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.02%)</title><rect x="192.9" y="437" width="0.2" height="15.0" fill="rgb(208,130,33)" rx="2" ry="2" />
<text  x="195.92" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="267.2" y="485" width="0.2" height="15.0" fill="rgb(215,22,32)" rx="2" ry="2" />
<text  x="270.23" y="495.5" ></text>
</g>
<g >
<title>cpuidle_select (2 samples, 0.03%)</title><rect x="1187.9" y="437" width="0.4" height="15.0" fill="rgb(231,8,13)" rx="2" ry="2" />
<text  x="1190.90" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="1019.3" y="341" width="0.2" height="15.0" fill="rgb(214,220,34)" rx="2" ry="2" />
<text  x="1022.28" y="351.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (3 samples, 0.05%)</title><rect x="785.3" y="533" width="0.6" height="15.0" fill="rgb(228,128,47)" rx="2" ry="2" />
<text  x="788.30" y="543.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (1 samples, 0.02%)</title><rect x="997.4" y="389" width="0.2" height="15.0" fill="rgb(240,105,34)" rx="2" ry="2" />
<text  x="1000.37" y="399.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="388.0" y="405" width="0.2" height="15.0" fill="rgb(210,21,21)" rx="2" ry="2" />
<text  x="391.03" y="415.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.02%)</title><rect x="1172.5" y="373" width="0.2" height="15.0" fill="rgb(217,215,10)" rx="2" ry="2" />
<text  x="1175.47" y="383.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 0.03%)</title><rect x="361.0" y="485" width="0.4" height="15.0" fill="rgb(212,196,53)" rx="2" ry="2" />
<text  x="363.97" y="495.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.02%)</title><rect x="139.4" y="453" width="0.2" height="15.0" fill="rgb(218,105,1)" rx="2" ry="2" />
<text  x="142.38" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="1020.2" y="309" width="2.3" height="15.0" fill="rgb(243,131,43)" rx="2" ry="2" />
<text  x="1023.23" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (63 samples, 1.02%)</title><rect x="252.7" y="469" width="12.0" height="15.0" fill="rgb(207,50,8)" rx="2" ry="2" />
<text  x="255.75" y="479.5" ></text>
</g>
<g >
<title>record__pushfn (4 samples, 0.06%)</title><rect x="264.9" y="485" width="0.8" height="15.0" fill="rgb(211,125,5)" rx="2" ry="2" />
<text  x="267.94" y="495.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="997.0" y="341" width="0.2" height="15.0" fill="rgb(227,94,20)" rx="2" ry="2" />
<text  x="999.99" y="351.5" ></text>
</g>
<g >
<title>blk_queue_bounce (1 samples, 0.02%)</title><rect x="1175.1" y="341" width="0.2" height="15.0" fill="rgb(238,61,29)" rx="2" ry="2" />
<text  x="1178.14" y="351.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (1 samples, 0.02%)</title><rect x="270.3" y="565" width="0.2" height="15.0" fill="rgb(243,46,45)" rx="2" ry="2" />
<text  x="273.27" y="575.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="997.0" y="197" width="0.2" height="15.0" fill="rgb(213,146,9)" rx="2" ry="2" />
<text  x="999.99" y="207.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.06%)</title><rect x="268.2" y="565" width="0.7" height="15.0" fill="rgb(211,156,5)" rx="2" ry="2" />
<text  x="271.18" y="575.5" ></text>
</g>
<g >
<title>ep_poll (3 samples, 0.05%)</title><rect x="38.4" y="501" width="0.6" height="15.0" fill="rgb(221,198,5)" rx="2" ry="2" />
<text  x="41.39" y="511.5" ></text>
</g>
<g >
<title>copy_kernel_to_fpregs (1 samples, 0.02%)</title><rect x="1174.6" y="501" width="0.2" height="15.0" fill="rgb(249,27,41)" rx="2" ry="2" />
<text  x="1177.57" y="511.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="216.7" y="373" width="0.2" height="15.0" fill="rgb(237,203,3)" rx="2" ry="2" />
<text  x="219.73" y="383.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (3 samples, 0.05%)</title><rect x="782.2" y="469" width="0.6" height="15.0" fill="rgb(213,202,12)" rx="2" ry="2" />
<text  x="785.25" y="479.5" ></text>
</g>
<g >
<title>idle_cpu (5 samples, 0.08%)</title><rect x="228.2" y="357" width="0.9" height="15.0" fill="rgb(243,43,23)" rx="2" ry="2" />
<text  x="231.17" y="367.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.02%)</title><rect x="123.4" y="501" width="0.2" height="15.0" fill="rgb(244,18,24)" rx="2" ry="2" />
<text  x="126.37" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (34 samples, 0.55%)</title><rect x="1074.3" y="389" width="6.5" height="15.0" fill="rgb(230,144,44)" rx="2" ry="2" />
<text  x="1077.34" y="399.5" ></text>
</g>
<g >
<title>submit_bio_noacct (1 samples, 0.02%)</title><rect x="1175.1" y="373" width="0.2" height="15.0" fill="rgb(254,222,7)" rx="2" ry="2" />
<text  x="1178.14" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1189.8" y="437" width="0.2" height="15.0" fill="rgb(230,169,39)" rx="2" ry="2" />
<text  x="1192.81" y="447.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (67 samples, 1.08%)</title><rect x="984.6" y="389" width="12.8" height="15.0" fill="rgb(227,58,36)" rx="2" ry="2" />
<text  x="987.60" y="399.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="202.4" y="373" width="0.4" height="15.0" fill="rgb(237,137,45)" rx="2" ry="2" />
<text  x="205.44" y="383.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="200.3" y="405" width="0.2" height="15.0" fill="rgb(243,145,23)" rx="2" ry="2" />
<text  x="203.35" y="415.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (3 samples, 0.05%)</title><rect x="982.5" y="389" width="0.6" height="15.0" fill="rgb(226,25,37)" rx="2" ry="2" />
<text  x="985.50" y="399.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="39.9" y="325" width="0.2" height="15.0" fill="rgb(243,15,41)" rx="2" ry="2" />
<text  x="42.91" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (19 samples, 0.31%)</title><rect x="1022.5" y="389" width="3.6" height="15.0" fill="rgb(231,38,24)" rx="2" ry="2" />
<text  x="1025.52" y="399.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.02%)</title><rect x="115.9" y="469" width="0.2" height="15.0" fill="rgb(222,59,9)" rx="2" ry="2" />
<text  x="118.94" y="479.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (16 samples, 0.26%)</title><rect x="391.5" y="405" width="3.0" height="15.0" fill="rgb(216,35,41)" rx="2" ry="2" />
<text  x="394.46" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (15 samples, 0.24%)</title><rect x="1137.0" y="533" width="2.9" height="15.0" fill="rgb(245,147,48)" rx="2" ry="2" />
<text  x="1140.03" y="543.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (4 samples, 0.06%)</title><rect x="120.9" y="453" width="0.8" height="15.0" fill="rgb(209,125,43)" rx="2" ry="2" />
<text  x="123.89" y="463.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (33 samples, 0.53%)</title><rect x="1053.6" y="421" width="6.3" height="15.0" fill="rgb(230,118,8)" rx="2" ry="2" />
<text  x="1056.58" y="431.5" ></text>
</g>
<g >
<title>do_idle (49 samples, 0.79%)</title><rect x="1175.5" y="533" width="9.4" height="15.0" fill="rgb(254,27,47)" rx="2" ry="2" />
<text  x="1178.52" y="543.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (21 samples, 0.34%)</title><rect x="124.1" y="517" width="4.0" height="15.0" fill="rgb(244,177,30)" rx="2" ry="2" />
<text  x="127.13" y="527.5" ></text>
</g>
<g >
<title>timer_clear_idle (1 samples, 0.02%)</title><rect x="247.8" y="453" width="0.2" height="15.0" fill="rgb(249,221,45)" rx="2" ry="2" />
<text  x="250.79" y="463.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.02%)</title><rect x="1172.5" y="453" width="0.2" height="15.0" fill="rgb(232,112,50)" rx="2" ry="2" />
<text  x="1175.47" y="463.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="245.7" y="405" width="0.2" height="15.0" fill="rgb(235,201,14)" rx="2" ry="2" />
<text  x="248.70" y="415.5" ></text>
</g>
<g >
<title>read_tsc (4 samples, 0.06%)</title><rect x="246.8" y="437" width="0.8" height="15.0" fill="rgb(244,78,35)" rx="2" ry="2" />
<text  x="249.84" y="447.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (10 samples, 0.16%)</title><rect x="146.4" y="405" width="1.9" height="15.0" fill="rgb(245,110,48)" rx="2" ry="2" />
<text  x="149.42" y="415.5" ></text>
</g>
<g >
<title>kswapd (4 samples, 0.06%)</title><rect x="1174.8" y="549" width="0.7" height="15.0" fill="rgb(236,191,4)" rx="2" ry="2" />
<text  x="1177.76" y="559.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="1026.1" y="373" width="0.2" height="15.0" fill="rgb(242,106,36)" rx="2" ry="2" />
<text  x="1029.14" y="383.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (2 samples, 0.03%)</title><rect x="267.6" y="517" width="0.4" height="15.0" fill="rgb(209,23,49)" rx="2" ry="2" />
<text  x="270.61" y="527.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="1023.3" y="357" width="0.6" height="15.0" fill="rgb(232,66,52)" rx="2" ry="2" />
<text  x="1026.28" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (1 samples, 0.02%)</title><rect x="265.7" y="549" width="0.2" height="15.0" fill="rgb(230,115,48)" rx="2" ry="2" />
<text  x="268.70" y="559.5" ></text>
</g>
<g >
<title>arch_call_rest_init (594 samples, 9.59%)</title><rect x="139.6" y="517" width="113.1" height="15.0" fill="rgb(238,153,34)" rx="2" ry="2" />
<text  x="142.57" y="527.5" >arch_call_res..</text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (189 samples, 3.05%)</title><rect x="941.3" y="405" width="36.1" height="15.0" fill="rgb(227,132,40)" rx="2" ry="2" />
<text  x="944.35" y="415.5" >&lt;st..</text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.02%)</title><rect x="39.5" y="549" width="0.2" height="15.0" fill="rgb(225,229,18)" rx="2" ry="2" />
<text  x="42.53" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="265.7" y="565" width="0.4" height="15.0" fill="rgb(253,190,47)" rx="2" ry="2" />
<text  x="268.70" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.11%)</title><rect x="1064.2" y="325" width="1.4" height="15.0" fill="rgb(214,15,33)" rx="2" ry="2" />
<text  x="1067.25" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (24 samples, 0.39%)</title><rect x="1145.4" y="565" width="4.6" height="15.0" fill="rgb(246,211,15)" rx="2" ry="2" />
<text  x="1148.41" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (28 samples, 0.45%)</title><rect x="991.8" y="373" width="5.4" height="15.0" fill="rgb(244,48,26)" rx="2" ry="2" />
<text  x="994.84" y="383.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (40 samples, 0.65%)</title><rect x="758.1" y="389" width="7.6" height="15.0" fill="rgb(250,185,26)" rx="2" ry="2" />
<text  x="761.05" y="399.5" ></text>
</g>
<g >
<title>rmqueue (2 samples, 0.03%)</title><rect x="1138.7" y="405" width="0.4" height="15.0" fill="rgb(227,179,7)" rx="2" ry="2" />
<text  x="1141.75" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="1137.6" y="405" width="0.2" height="15.0" fill="rgb(249,40,41)" rx="2" ry="2" />
<text  x="1140.60" y="415.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1139.5" y="437" width="0.2" height="15.0" fill="rgb(213,10,7)" rx="2" ry="2" />
<text  x="1142.51" y="447.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.02%)</title><rect x="44.1" y="357" width="0.2" height="15.0" fill="rgb(230,149,21)" rx="2" ry="2" />
<text  x="47.11" y="367.5" ></text>
</g>
<g >
<title>NaClDescImcBoundDescAcceptConn (1 samples, 0.02%)</title><rect x="1172.5" y="469" width="0.2" height="15.0" fill="rgb(248,59,32)" rx="2" ry="2" />
<text  x="1175.47" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="216.7" y="421" width="0.2" height="15.0" fill="rgb(244,58,34)" rx="2" ry="2" />
<text  x="219.73" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="765.5" y="309" width="0.2" height="15.0" fill="rgb(251,55,25)" rx="2" ry="2" />
<text  x="768.48" y="319.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="1068.4" y="405" width="0.2" height="15.0" fill="rgb(245,20,50)" rx="2" ry="2" />
<text  x="1071.44" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (28 samples, 0.45%)</title><rect x="646.4" y="357" width="5.3" height="15.0" fill="rgb(212,218,5)" rx="2" ry="2" />
<text  x="649.40" y="367.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (36 samples, 0.58%)</title><rect x="751.2" y="373" width="6.9" height="15.0" fill="rgb(220,30,14)" rx="2" ry="2" />
<text  x="754.19" y="383.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.02%)</title><rect x="265.9" y="373" width="0.2" height="15.0" fill="rgb(242,119,24)" rx="2" ry="2" />
<text  x="268.89" y="383.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="997.0" y="69" width="0.2" height="15.0" fill="rgb(217,14,23)" rx="2" ry="2" />
<text  x="999.99" y="79.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.02%)</title><rect x="247.6" y="421" width="0.2" height="15.0" fill="rgb(218,58,6)" rx="2" ry="2" />
<text  x="250.60" y="431.5" ></text>
</g>
<g >
<title>_perf_event_enable (63 samples, 1.02%)</title><rect x="252.7" y="373" width="12.0" height="15.0" fill="rgb(242,1,44)" rx="2" ry="2" />
<text  x="255.75" y="383.5" ></text>
</g>
<g >
<title>submit_bio (1 samples, 0.02%)</title><rect x="1175.1" y="389" width="0.2" height="15.0" fill="rgb(218,199,34)" rx="2" ry="2" />
<text  x="1178.14" y="399.5" ></text>
</g>
<g >
<title>NaClXMutexLock (43 samples, 0.69%)</title><rect x="349.5" y="533" width="8.2" height="15.0" fill="rgb(239,3,24)" rx="2" ry="2" />
<text  x="352.54" y="543.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="38.4" y="453" width="0.2" height="15.0" fill="rgb(222,217,33)" rx="2" ry="2" />
<text  x="41.39" y="463.5" ></text>
</g>
<g >
<title>native_write_msr (63 samples, 1.02%)</title><rect x="252.7" y="213" width="12.0" height="15.0" fill="rgb(251,59,37)" rx="2" ry="2" />
<text  x="255.75" y="223.5" ></text>
</g>
<g >
<title>nohz_csd_func (15 samples, 0.24%)</title><rect x="212.5" y="437" width="2.9" height="15.0" fill="rgb(231,122,4)" rx="2" ry="2" />
<text  x="215.54" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (14 samples, 0.23%)</title><rect x="1185.2" y="421" width="2.7" height="15.0" fill="rgb(245,160,14)" rx="2" ry="2" />
<text  x="1188.24" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="997.4" y="341" width="0.2" height="15.0" fill="rgb(241,23,0)" rx="2" ry="2" />
<text  x="1000.37" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (59 samples, 0.95%)</title><rect x="1041.2" y="389" width="11.2" height="15.0" fill="rgb(218,99,47)" rx="2" ry="2" />
<text  x="1044.19" y="399.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="44.5" y="309" width="0.2" height="15.0" fill="rgb(247,176,5)" rx="2" ry="2" />
<text  x="47.49" y="319.5" ></text>
</g>
<g >
<title>NaClLog (11 samples, 0.18%)</title><rect x="357.7" y="549" width="2.1" height="15.0" fill="rgb(232,53,52)" rx="2" ry="2" />
<text  x="360.73" y="559.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (65 samples, 1.05%)</title><rect x="1068.4" y="453" width="12.4" height="15.0" fill="rgb(238,80,7)" rx="2" ry="2" />
<text  x="1071.44" y="463.5" ></text>
</g>
<g >
<title>core::cmp::min (17 samples, 0.27%)</title><rect x="388.2" y="421" width="3.3" height="15.0" fill="rgb(231,184,20)" rx="2" ry="2" />
<text  x="391.22" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="128.9" y="453" width="0.2" height="15.0" fill="rgb(210,99,15)" rx="2" ry="2" />
<text  x="131.90" y="463.5" ></text>
</g>
<g >
<title>alx_mask_msix (1 samples, 0.02%)</title><rect x="43.9" y="357" width="0.2" height="15.0" fill="rgb(214,189,45)" rx="2" ry="2" />
<text  x="46.92" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="120.9" y="437" width="0.2" height="15.0" fill="rgb(236,99,52)" rx="2" ry="2" />
<text  x="123.89" y="447.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="43.9" y="421" width="0.2" height="15.0" fill="rgb(242,152,15)" rx="2" ry="2" />
<text  x="46.92" y="431.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="1025.9" y="277" width="0.2" height="15.0" fill="rgb(248,100,18)" rx="2" ry="2" />
<text  x="1028.95" y="287.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (5 samples, 0.08%)</title><rect x="307.4" y="565" width="1.0" height="15.0" fill="rgb(232,69,27)" rx="2" ry="2" />
<text  x="310.43" y="575.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.02%)</title><rect x="192.9" y="421" width="0.2" height="15.0" fill="rgb(244,68,20)" rx="2" ry="2" />
<text  x="195.92" y="431.5" ></text>
</g>
<g >
<title>do_anonymous_page (11 samples, 0.18%)</title><rect x="1137.6" y="469" width="2.1" height="15.0" fill="rgb(248,194,0)" rx="2" ry="2" />
<text  x="1140.60" y="479.5" ></text>
</g>
<g >
<title>rmap_walk (1 samples, 0.02%)</title><rect x="1174.8" y="437" width="0.1" height="15.0" fill="rgb(227,110,46)" rx="2" ry="2" />
<text  x="1177.76" y="447.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="200.9" y="389" width="0.2" height="15.0" fill="rgb(240,181,44)" rx="2" ry="2" />
<text  x="203.92" y="399.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="1172.5" y="405" width="0.2" height="15.0" fill="rgb(222,165,1)" rx="2" ry="2" />
<text  x="1175.47" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1185.2" y="389" width="0.2" height="15.0" fill="rgb(212,170,5)" rx="2" ry="2" />
<text  x="1188.24" y="399.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (39 samples, 0.63%)</title><rect x="1052.4" y="437" width="7.5" height="15.0" fill="rgb(232,190,36)" rx="2" ry="2" />
<text  x="1055.43" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_vma (8 samples, 0.13%)</title><rect x="1137.6" y="453" width="1.5" height="15.0" fill="rgb(228,42,43)" rx="2" ry="2" />
<text  x="1140.60" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1,164 samples, 18.80%)</title><rect x="838.1" y="453" width="221.8" height="15.0" fill="rgb(235,173,32)" rx="2" ry="2" />
<text  x="841.08" y="463.5" >rustposix::safeposix::syscall..</text>
</g>
<g >
<title>sel_ldr (4,765 samples, 76.94%)</title><rect x="266.1" y="597" width="907.9" height="15.0" fill="rgb(245,81,24)" rx="2" ry="2" />
<text  x="269.08" y="607.5" >sel_ldr</text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="39.9" y="357" width="0.2" height="15.0" fill="rgb(208,53,25)" rx="2" ry="2" />
<text  x="42.91" y="367.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="265.5" y="197" width="0.2" height="15.0" fill="rgb(228,180,27)" rx="2" ry="2" />
<text  x="268.51" y="207.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.02%)</title><rect x="139.4" y="501" width="0.2" height="15.0" fill="rgb(233,148,29)" rx="2" ry="2" />
<text  x="142.38" y="511.5" ></text>
</g>
<g >
<title>NaClSimpleLtdServiceAcceptConnection (1 samples, 0.02%)</title><rect x="1172.5" y="501" width="0.2" height="15.0" fill="rgb(249,121,34)" rx="2" ry="2" />
<text  x="1175.47" y="511.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="1025.9" y="293" width="0.2" height="15.0" fill="rgb(213,83,46)" rx="2" ry="2" />
<text  x="1028.95" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_ftruncate (1 samples, 0.02%)</title><rect x="39.0" y="549" width="0.2" height="15.0" fill="rgb(238,60,27)" rx="2" ry="2" />
<text  x="41.96" y="559.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="264.9" y="165" width="0.2" height="15.0" fill="rgb(233,12,14)" rx="2" ry="2" />
<text  x="267.94" y="175.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.02%)</title><rect x="39.2" y="533" width="0.1" height="15.0" fill="rgb(253,116,45)" rx="2" ry="2" />
<text  x="42.15" y="543.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.02%)</title><rect x="1174.4" y="517" width="0.2" height="15.0" fill="rgb(253,31,10)" rx="2" ry="2" />
<text  x="1177.38" y="527.5" ></text>
</g>
<g >
<title>housekeeping_cpumask (2 samples, 0.03%)</title><rect x="134.2" y="421" width="0.4" height="15.0" fill="rgb(236,37,42)" rx="2" ry="2" />
<text  x="137.23" y="431.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="265.9" y="533" width="0.2" height="15.0" fill="rgb(214,146,44)" rx="2" ry="2" />
<text  x="268.89" y="543.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="141.5" y="453" width="0.2" height="15.0" fill="rgb(218,222,19)" rx="2" ry="2" />
<text  x="144.47" y="463.5" ></text>
</g>
<g >
<title>shrink_inactive_list (2 samples, 0.03%)</title><rect x="1174.9" y="469" width="0.4" height="15.0" fill="rgb(247,38,29)" rx="2" ry="2" />
<text  x="1177.95" y="479.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="43.9" y="389" width="0.2" height="15.0" fill="rgb(218,9,11)" rx="2" ry="2" />
<text  x="46.92" y="399.5" ></text>
</g>
<g >
<title>NaClXMutexLock (1 samples, 0.02%)</title><rect x="1101.4" y="549" width="0.2" height="15.0" fill="rgb(247,122,47)" rx="2" ry="2" />
<text  x="1104.40" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (1 samples, 0.02%)</title><rect x="39.7" y="549" width="0.2" height="15.0" fill="rgb(224,215,35)" rx="2" ry="2" />
<text  x="42.72" y="559.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="997.0" y="53" width="0.2" height="15.0" fill="rgb(249,193,38)" rx="2" ry="2" />
<text  x="999.99" y="63.5" ></text>
</g>
<g >
<title>switch_fpu_return (1 samples, 0.02%)</title><rect x="1174.6" y="517" width="0.2" height="15.0" fill="rgb(209,138,47)" rx="2" ry="2" />
<text  x="1177.57" y="527.5" ></text>
</g>
<g >
<title>schedule_idle (49 samples, 0.79%)</title><rect x="128.1" y="517" width="9.4" height="15.0" fill="rgb(245,177,27)" rx="2" ry="2" />
<text  x="131.13" y="527.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.02%)</title><rect x="1141.0" y="533" width="0.2" height="15.0" fill="rgb(218,33,4)" rx="2" ry="2" />
<text  x="1144.03" y="543.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="264.9" y="197" width="0.2" height="15.0" fill="rgb(217,176,22)" rx="2" ry="2" />
<text  x="267.94" y="207.5" ></text>
</g>
<g >
<title>__sys_sendmsg (1 samples, 0.02%)</title><rect x="39.7" y="533" width="0.2" height="15.0" fill="rgb(243,133,16)" rx="2" ry="2" />
<text  x="42.72" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="146.0" y="405" width="0.4" height="15.0" fill="rgb(242,97,42)" rx="2" ry="2" />
<text  x="149.04" y="415.5" ></text>
</g>
<g >
<title>lind_write (1 samples, 0.02%)</title><rect x="1080.8" y="501" width="0.2" height="15.0" fill="rgb(246,47,54)" rx="2" ry="2" />
<text  x="1083.82" y="511.5" ></text>
</g>
<g >
<title>cpu_startup_entry (594 samples, 9.59%)</title><rect x="139.6" y="485" width="113.1" height="15.0" fill="rgb(221,150,34)" rx="2" ry="2" />
<text  x="142.57" y="495.5" >cpu_startup_e..</text>
</g>
<g >
<title>dispatcher (4 samples, 0.06%)</title><rect x="288.8" y="565" width="0.7" height="15.0" fill="rgb(238,81,34)" rx="2" ry="2" />
<text  x="291.76" y="575.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (63 samples, 1.02%)</title><rect x="252.7" y="389" width="12.0" height="15.0" fill="rgb(250,193,47)" rx="2" ry="2" />
<text  x="255.75" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.02%)</title><rect x="39.3" y="549" width="0.2" height="15.0" fill="rgb(254,121,50)" rx="2" ry="2" />
<text  x="42.34" y="559.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="765.5" y="197" width="0.2" height="15.0" fill="rgb(242,175,0)" rx="2" ry="2" />
<text  x="768.48" y="207.5" ></text>
</g>
<g >
<title>__swap_writepage (1 samples, 0.02%)</title><rect x="1175.1" y="405" width="0.2" height="15.0" fill="rgb(242,74,35)" rx="2" ry="2" />
<text  x="1178.14" y="415.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (27 samples, 0.44%)</title><rect x="1184.9" y="549" width="5.1" height="15.0" fill="rgb(228,105,50)" rx="2" ry="2" />
<text  x="1187.86" y="559.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (1 samples, 0.02%)</title><rect x="43.9" y="373" width="0.2" height="15.0" fill="rgb(228,199,41)" rx="2" ry="2" />
<text  x="46.92" y="383.5" ></text>
</g>
<g >
<title>llist_add_batch (22 samples, 0.36%)</title><rect x="236.4" y="341" width="4.2" height="15.0" fill="rgb(212,98,17)" rx="2" ry="2" />
<text  x="239.36" y="351.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="44.1" y="341" width="0.2" height="15.0" fill="rgb(220,56,51)" rx="2" ry="2" />
<text  x="47.11" y="351.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="146.2" y="341" width="0.2" height="15.0" fill="rgb(254,181,18)" rx="2" ry="2" />
<text  x="149.23" y="351.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (1 samples, 0.02%)</title><rect x="38.2" y="581" width="0.2" height="15.0" fill="rgb(242,142,29)" rx="2" ry="2" />
<text  x="41.20" y="591.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="765.5" y="261" width="0.2" height="15.0" fill="rgb(212,14,38)" rx="2" ry="2" />
<text  x="768.48" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (59 samples, 0.95%)</title><rect x="1041.2" y="373" width="11.2" height="15.0" fill="rgb(216,46,27)" rx="2" ry="2" />
<text  x="1044.19" y="383.5" ></text>
</g>
<g >
<title>down_read_killable (1 samples, 0.02%)</title><rect x="1141.0" y="389" width="0.2" height="15.0" fill="rgb(206,15,10)" rx="2" ry="2" />
<text  x="1144.03" y="399.5" ></text>
</g>
<g >
<title>NaClMutexLock (41 samples, 0.66%)</title><rect x="349.9" y="517" width="7.8" height="15.0" fill="rgb(219,223,3)" rx="2" ry="2" />
<text  x="352.92" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="264.9" y="133" width="0.2" height="15.0" fill="rgb(225,162,41)" rx="2" ry="2" />
<text  x="267.94" y="143.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="1151.3" y="533" width="0.2" height="15.0" fill="rgb(231,151,48)" rx="2" ry="2" />
<text  x="1154.32" y="543.5" ></text>
</g>
<g >
<title>arch_call_rest_init (27 samples, 0.44%)</title><rect x="1184.9" y="517" width="5.1" height="15.0" fill="rgb(232,92,53)" rx="2" ry="2" />
<text  x="1187.86" y="527.5" ></text>
</g>
<g >
<title>lind_read (2,122 samples, 34.26%)</title><rect x="361.4" y="485" width="404.3" height="15.0" fill="rgb(246,85,9)" rx="2" ry="2" />
<text  x="364.35" y="495.5" >lind_read</text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.02%)</title><rect x="265.9" y="405" width="0.2" height="15.0" fill="rgb(240,32,38)" rx="2" ry="2" />
<text  x="268.89" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (33 samples, 0.53%)</title><rect x="1012.6" y="373" width="6.3" height="15.0" fill="rgb(227,24,42)" rx="2" ry="2" />
<text  x="1015.61" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="39.7" y="421" width="0.2" height="15.0" fill="rgb(236,168,41)" rx="2" ry="2" />
<text  x="42.72" y="431.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="1139.9" y="565" width="0.2" height="15.0" fill="rgb(207,198,0)" rx="2" ry="2" />
<text  x="1142.89" y="575.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (2 samples, 0.03%)</title><rect x="188.5" y="389" width="0.4" height="15.0" fill="rgb(219,112,32)" rx="2" ry="2" />
<text  x="191.53" y="399.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.02%)</title><rect x="265.9" y="485" width="0.2" height="15.0" fill="rgb(226,89,44)" rx="2" ry="2" />
<text  x="268.89" y="495.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (2,122 samples, 34.26%)</title><rect x="361.4" y="549" width="404.3" height="15.0" fill="rgb(212,186,26)" rx="2" ry="2" />
<text  x="364.35" y="559.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="39.9" y="389" width="0.2" height="15.0" fill="rgb(205,40,6)" rx="2" ry="2" />
<text  x="42.91" y="399.5" ></text>
</g>
<g >
<title>cpumask_next_and (3 samples, 0.05%)</title><rect x="232.5" y="357" width="0.6" height="15.0" fill="rgb(205,144,47)" rx="2" ry="2" />
<text  x="235.55" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (10 samples, 0.16%)</title><rect x="1143.5" y="565" width="1.9" height="15.0" fill="rgb(231,87,23)" rx="2" ry="2" />
<text  x="1146.51" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (4 samples, 0.06%)</title><rect x="1052.4" y="373" width="0.8" height="15.0" fill="rgb(206,105,51)" rx="2" ry="2" />
<text  x="1055.43" y="383.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="687.4" y="229" width="0.2" height="15.0" fill="rgb(211,156,20)" rx="2" ry="2" />
<text  x="690.36" y="239.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (51 samples, 0.82%)</title><rect x="918.9" y="405" width="9.7" height="15.0" fill="rgb(247,61,4)" rx="2" ry="2" />
<text  x="921.86" y="415.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (2 samples, 0.03%)</title><rect x="937.2" y="389" width="0.3" height="15.0" fill="rgb(252,93,46)" rx="2" ry="2" />
<text  x="940.16" y="399.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (58 samples, 0.94%)</title><rect x="771.8" y="501" width="11.0" height="15.0" fill="rgb(226,58,4)" rx="2" ry="2" />
<text  x="774.77" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1172.5" y="421" width="0.2" height="15.0" fill="rgb(228,126,27)" rx="2" ry="2" />
<text  x="1175.47" y="431.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="1026.1" y="421" width="0.2" height="15.0" fill="rgb(250,13,18)" rx="2" ry="2" />
<text  x="1029.14" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.08%)</title><rect x="1023.9" y="357" width="0.9" height="15.0" fill="rgb(208,145,50)" rx="2" ry="2" />
<text  x="1026.85" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="44.5" y="389" width="0.2" height="15.0" fill="rgb(218,72,41)" rx="2" ry="2" />
<text  x="47.49" y="399.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (64 samples, 1.03%)</title><rect x="1068.6" y="437" width="12.2" height="15.0" fill="rgb(232,166,3)" rx="2" ry="2" />
<text  x="1071.63" y="447.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="765.5" y="181" width="0.2" height="15.0" fill="rgb(247,26,27)" rx="2" ry="2" />
<text  x="768.48" y="191.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (1 samples, 0.02%)</title><rect x="38.8" y="485" width="0.2" height="15.0" fill="rgb(243,148,53)" rx="2" ry="2" />
<text  x="41.77" y="495.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="1025.8" y="277" width="0.1" height="15.0" fill="rgb(235,61,50)" rx="2" ry="2" />
<text  x="1028.76" y="287.5" ></text>
</g>
<g >
<title>generic_exec_single (63 samples, 1.02%)</title><rect x="252.7" y="325" width="12.0" height="15.0" fill="rgb(217,221,21)" rx="2" ry="2" />
<text  x="255.75" y="335.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.05%)</title><rect x="1018.9" y="373" width="0.6" height="15.0" fill="rgb(212,32,23)" rx="2" ry="2" />
<text  x="1021.90" y="383.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1066.7" y="341" width="0.2" height="15.0" fill="rgb(246,48,14)" rx="2" ry="2" />
<text  x="1069.72" y="351.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (3 samples, 0.05%)</title><rect x="941.3" y="341" width="0.6" height="15.0" fill="rgb(219,135,14)" rx="2" ry="2" />
<text  x="944.35" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (44 samples, 0.71%)</title><rect x="1060.1" y="421" width="8.3" height="15.0" fill="rgb(222,111,38)" rx="2" ry="2" />
<text  x="1063.05" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (1 samples, 0.02%)</title><rect x="361.4" y="373" width="0.1" height="15.0" fill="rgb(215,158,47)" rx="2" ry="2" />
<text  x="364.35" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="784.9" y="517" width="0.4" height="15.0" fill="rgb(209,97,53)" rx="2" ry="2" />
<text  x="787.92" y="527.5" ></text>
</g>
<g >
<title>ktime_get (2 samples, 0.03%)</title><rect x="138.6" y="501" width="0.4" height="15.0" fill="rgb(208,160,12)" rx="2" ry="2" />
<text  x="141.61" y="511.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (75 samples, 1.21%)</title><rect x="983.1" y="405" width="14.3" height="15.0" fill="rgb(215,91,38)" rx="2" ry="2" />
<text  x="986.08" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="981.7" y="341" width="0.4" height="15.0" fill="rgb(226,33,18)" rx="2" ry="2" />
<text  x="984.74" y="351.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="268.0" y="549" width="0.2" height="15.0" fill="rgb(232,167,43)" rx="2" ry="2" />
<text  x="270.99" y="559.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (2 samples, 0.03%)</title><rect x="360.0" y="549" width="0.4" height="15.0" fill="rgb(232,36,45)" rx="2" ry="2" />
<text  x="363.02" y="559.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="146.0" y="389" width="0.4" height="15.0" fill="rgb(237,176,16)" rx="2" ry="2" />
<text  x="149.04" y="399.5" ></text>
</g>
<g >
<title>__update_idle_core (3 samples, 0.05%)</title><rect x="241.3" y="405" width="0.6" height="15.0" fill="rgb(209,164,37)" rx="2" ry="2" />
<text  x="244.31" y="415.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="687.4" y="245" width="0.2" height="15.0" fill="rgb(217,163,54)" rx="2" ry="2" />
<text  x="690.36" y="255.5" ></text>
</g>
<g >
<title>__switch_to_asm (1 samples, 0.02%)</title><rect x="38.0" y="581" width="0.2" height="15.0" fill="rgb(240,192,0)" rx="2" ry="2" />
<text  x="41.01" y="591.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (30 samples, 0.48%)</title><rect x="977.4" y="405" width="5.7" height="15.0" fill="rgb(238,155,4)" rx="2" ry="2" />
<text  x="980.36" y="415.5" ></text>
</g>
<g >
<title>unix_dgram_sendmsg (1 samples, 0.02%)</title><rect x="39.7" y="469" width="0.2" height="15.0" fill="rgb(244,53,35)" rx="2" ry="2" />
<text  x="42.72" y="479.5" ></text>
</g>
<g >
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="43.2" y="485" width="0.1" height="15.0" fill="rgb(239,121,3)" rx="2" ry="2" />
<text  x="46.15" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (5 samples, 0.08%)</title><rect x="202.8" y="373" width="1.0" height="15.0" fill="rgb(229,153,38)" rx="2" ry="2" />
<text  x="205.82" y="383.5" ></text>
</g>
<g >
<title>ext4_setattr (1 samples, 0.02%)</title><rect x="39.0" y="485" width="0.2" height="15.0" fill="rgb(229,204,30)" rx="2" ry="2" />
<text  x="41.96" y="495.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (18 samples, 0.29%)</title><rect x="299.6" y="501" width="3.4" height="15.0" fill="rgb(248,92,2)" rx="2" ry="2" />
<text  x="302.62" y="511.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (1 samples, 0.02%)</title><rect x="137.5" y="517" width="0.2" height="15.0" fill="rgb(249,91,21)" rx="2" ry="2" />
<text  x="140.47" y="527.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="1185.2" y="341" width="0.2" height="15.0" fill="rgb(254,53,20)" rx="2" ry="2" />
<text  x="1188.24" y="351.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.03%)</title><rect x="980.0" y="341" width="0.4" height="15.0" fill="rgb(246,123,51)" rx="2" ry="2" />
<text  x="983.03" y="351.5" ></text>
</g>
<g >
<title>event_function (1 samples, 0.02%)</title><rect x="265.7" y="405" width="0.2" height="15.0" fill="rgb(239,85,44)" rx="2" ry="2" />
<text  x="268.70" y="415.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (6 samples, 0.10%)</title><rect x="1052.4" y="405" width="1.2" height="15.0" fill="rgb(210,106,48)" rx="2" ry="2" />
<text  x="1055.43" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1174.4" y="581" width="0.4" height="15.0" fill="rgb(239,24,43)" rx="2" ry="2" />
<text  x="1177.38" y="591.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="388.0" y="261" width="0.2" height="15.0" fill="rgb(246,130,51)" rx="2" ry="2" />
<text  x="391.03" y="271.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1185.2" y="261" width="0.2" height="15.0" fill="rgb(231,129,16)" rx="2" ry="2" />
<text  x="1188.24" y="271.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="216.7" y="325" width="0.2" height="15.0" fill="rgb(252,156,14)" rx="2" ry="2" />
<text  x="219.73" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (118 samples, 1.91%)</title><rect x="557.6" y="389" width="22.5" height="15.0" fill="rgb(215,228,0)" rx="2" ry="2" />
<text  x="560.61" y="399.5" >c..</text>
</g>
<g >
<title>__x64_sys_ioctl (63 samples, 1.02%)</title><rect x="252.7" y="437" width="12.0" height="15.0" fill="rgb(207,193,17)" rx="2" ry="2" />
<text  x="255.75" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="1013.0" y="309" width="0.2" height="15.0" fill="rgb(248,132,0)" rx="2" ry="2" />
<text  x="1015.99" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1174.4" y="565" width="0.4" height="15.0" fill="rgb(211,64,54)" rx="2" ry="2" />
<text  x="1177.38" y="575.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.02%)</title><rect x="1188.5" y="453" width="0.2" height="15.0" fill="rgb(244,173,38)" rx="2" ry="2" />
<text  x="1191.48" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="216.7" y="405" width="0.2" height="15.0" fill="rgb(215,128,0)" rx="2" ry="2" />
<text  x="219.73" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.02%)</title><rect x="123.6" y="501" width="0.2" height="15.0" fill="rgb(205,175,2)" rx="2" ry="2" />
<text  x="126.56" y="511.5" ></text>
</g>
<g >
<title>start_secondary (49 samples, 0.79%)</title><rect x="1175.5" y="565" width="9.4" height="15.0" fill="rgb(216,20,6)" rx="2" ry="2" />
<text  x="1178.52" y="575.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (1 samples, 0.02%)</title><rect x="265.7" y="501" width="0.2" height="15.0" fill="rgb(211,185,52)" rx="2" ry="2" />
<text  x="268.70" y="511.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (1 samples, 0.02%)</title><rect x="1151.1" y="549" width="0.2" height="15.0" fill="rgb(220,50,6)" rx="2" ry="2" />
<text  x="1154.13" y="559.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.08%)</title><rect x="117.1" y="469" width="0.9" height="15.0" fill="rgb(210,122,38)" rx="2" ry="2" />
<text  x="120.08" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="267.2" y="549" width="0.2" height="15.0" fill="rgb(219,192,35)" rx="2" ry="2" />
<text  x="270.23" y="559.5" ></text>
</g>
<g >
<title>page_vma_mapped_walk (1 samples, 0.02%)</title><rect x="1174.8" y="389" width="0.1" height="15.0" fill="rgb(214,125,46)" rx="2" ry="2" />
<text  x="1177.76" y="399.5" ></text>
</g>
<g >
<title>core::cmp::min_by (3 samples, 0.05%)</title><rect x="940.8" y="389" width="0.5" height="15.0" fill="rgb(242,157,35)" rx="2" ry="2" />
<text  x="943.78" y="399.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (343 samples, 5.54%)</title><rect x="142.2" y="453" width="65.4" height="15.0" fill="rgb(223,210,20)" rx="2" ry="2" />
<text  x="145.23" y="463.5" >cpuidle..</text>
</g>
<g >
<title>rustposix::interface::types::get_int (3 samples, 0.05%)</title><rect x="837.5" y="437" width="0.6" height="15.0" fill="rgb(221,38,27)" rx="2" ry="2" />
<text  x="840.51" y="447.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (45 samples, 0.73%)</title><rect x="1059.9" y="453" width="8.5" height="15.0" fill="rgb(242,57,33)" rx="2" ry="2" />
<text  x="1062.86" y="463.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (391 samples, 6.31%)</title><rect x="937.5" y="437" width="74.5" height="15.0" fill="rgb(228,193,40)" rx="2" ry="2" />
<text  x="940.54" y="447.5" >rustposi..</text>
</g>
<g >
<title>std::sync::poison::Flag::done (2 samples, 0.03%)</title><rect x="928.8" y="405" width="0.4" height="15.0" fill="rgb(207,136,6)" rx="2" ry="2" />
<text  x="931.77" y="415.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="265.1" y="197" width="0.2" height="15.0" fill="rgb(220,173,8)" rx="2" ry="2" />
<text  x="268.13" y="207.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (175 samples, 2.83%)</title><rect x="885.5" y="437" width="33.4" height="15.0" fill="rgb(218,110,14)" rx="2" ry="2" />
<text  x="888.52" y="447.5" >co..</text>
</g>
<g >
<title>update_rq_clock (3 samples, 0.05%)</title><rect x="136.5" y="485" width="0.6" height="15.0" fill="rgb(219,63,36)" rx="2" ry="2" />
<text  x="139.52" y="495.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 0.03%)</title><rect x="361.0" y="469" width="0.4" height="15.0" fill="rgb(221,209,5)" rx="2" ry="2" />
<text  x="363.97" y="479.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (1,489 samples, 24.04%)</title><rect x="797.3" y="517" width="283.7" height="15.0" fill="rgb(222,121,28)" rx="2" ry="2" />
<text  x="800.30" y="527.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>newidle_balance (1 samples, 0.02%)</title><rect x="39.2" y="437" width="0.1" height="15.0" fill="rgb(223,155,6)" rx="2" ry="2" />
<text  x="42.15" y="447.5" ></text>
</g>
<g >
<title>NaClLog (5 samples, 0.08%)</title><rect x="1141.2" y="565" width="1.0" height="15.0" fill="rgb(238,150,41)" rx="2" ry="2" />
<text  x="1144.22" y="575.5" ></text>
</g>
<g >
<title>poll_idle (10 samples, 0.16%)</title><rect x="1185.8" y="405" width="1.9" height="15.0" fill="rgb(254,17,35)" rx="2" ry="2" />
<text  x="1188.81" y="415.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (2,122 samples, 34.26%)</title><rect x="361.4" y="517" width="404.3" height="15.0" fill="rgb(239,102,9)" rx="2" ry="2" />
<text  x="364.35" y="527.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.02%)</title><rect x="196.5" y="389" width="0.2" height="15.0" fill="rgb(235,11,45)" rx="2" ry="2" />
<text  x="199.54" y="399.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.02%)</title><rect x="265.9" y="389" width="0.2" height="15.0" fill="rgb(251,123,39)" rx="2" ry="2" />
<text  x="268.89" y="399.5" ></text>
</g>
<g >
<title>start_kernel (27 samples, 0.44%)</title><rect x="1184.9" y="533" width="5.1" height="15.0" fill="rgb(247,147,38)" rx="2" ry="2" />
<text  x="1187.86" y="543.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (835 samples, 13.48%)</title><rect x="422.7" y="421" width="159.1" height="15.0" fill="rgb(238,227,16)" rx="2" ry="2" />
<text  x="425.70" y="431.5" >ringbuf::consumer::C..</text>
</g>
<g >
<title>newidle_balance (5 samples, 0.08%)</title><rect x="1188.9" y="405" width="0.9" height="15.0" fill="rgb(211,107,18)" rx="2" ry="2" />
<text  x="1191.86" y="415.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="265.9" y="517" width="0.2" height="15.0" fill="rgb(215,13,45)" rx="2" ry="2" />
<text  x="268.89" y="527.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (2 samples, 0.03%)</title><rect x="361.0" y="517" width="0.4" height="15.0" fill="rgb(221,78,46)" rx="2" ry="2" />
<text  x="363.97" y="527.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (15 samples, 0.24%)</title><rect x="233.5" y="325" width="2.9" height="15.0" fill="rgb(253,64,43)" rx="2" ry="2" />
<text  x="236.50" y="335.5" ></text>
</g>
<g >
<title>kick_ilb (22 samples, 0.36%)</title><rect x="132.3" y="437" width="4.2" height="15.0" fill="rgb(215,60,38)" rx="2" ry="2" />
<text  x="135.33" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (63 samples, 1.02%)</title><rect x="252.7" y="453" width="12.0" height="15.0" fill="rgb(233,173,4)" rx="2" ry="2" />
<text  x="255.75" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="765.5" y="325" width="0.2" height="15.0" fill="rgb(217,164,16)" rx="2" ry="2" />
<text  x="768.48" y="335.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="44.5" y="405" width="0.2" height="15.0" fill="rgb(242,160,33)" rx="2" ry="2" />
<text  x="47.49" y="415.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.10%)</title><rect x="651.7" y="341" width="1.2" height="15.0" fill="rgb(219,72,17)" rx="2" ry="2" />
<text  x="654.73" y="351.5" ></text>
</g>
<g >
<title>CompareAndSwap (65 samples, 1.05%)</title><rect x="336.8" y="533" width="12.4" height="15.0" fill="rgb(209,75,2)" rx="2" ry="2" />
<text  x="339.77" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (4 samples, 0.06%)</title><rect x="1052.4" y="357" width="0.8" height="15.0" fill="rgb(207,222,26)" rx="2" ry="2" />
<text  x="1055.43" y="367.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (1 samples, 0.02%)</title><rect x="264.9" y="213" width="0.2" height="15.0" fill="rgb(228,100,6)" rx="2" ry="2" />
<text  x="267.94" y="223.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="388.0" y="277" width="0.2" height="15.0" fill="rgb(242,134,34)" rx="2" ry="2" />
<text  x="391.03" y="287.5" ></text>
</g>
<g >
<title>vfs_open (1 samples, 0.02%)</title><rect x="39.3" y="469" width="0.2" height="15.0" fill="rgb(222,136,54)" rx="2" ry="2" />
<text  x="42.34" y="479.5" ></text>
</g>
<g >
<title>rcu_idle_enter (3 samples, 0.05%)</title><rect x="188.5" y="405" width="0.6" height="15.0" fill="rgb(217,126,21)" rx="2" ry="2" />
<text  x="191.53" y="415.5" ></text>
</g>
<g >
<title>do_idle (520 samples, 8.40%)</title><rect x="40.5" y="533" width="99.1" height="15.0" fill="rgb(241,110,8)" rx="2" ry="2" />
<text  x="43.49" y="543.5" >do_idle</text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="137.3" y="501" width="0.2" height="15.0" fill="rgb(232,198,45)" rx="2" ry="2" />
<text  x="140.28" y="511.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (4 samples, 0.06%)</title><rect x="1174.8" y="501" width="0.7" height="15.0" fill="rgb(240,160,33)" rx="2" ry="2" />
<text  x="1177.76" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.24%)</title><rect x="1060.2" y="373" width="2.9" height="15.0" fill="rgb(217,68,41)" rx="2" ry="2" />
<text  x="1063.24" y="383.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="1022.3" y="261" width="0.2" height="15.0" fill="rgb(205,62,39)" rx="2" ry="2" />
<text  x="1025.33" y="271.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.02%)</title><rect x="1141.0" y="405" width="0.2" height="15.0" fill="rgb(231,160,46)" rx="2" ry="2" />
<text  x="1144.03" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (2 samples, 0.03%)</title><rect x="981.2" y="357" width="0.4" height="15.0" fill="rgb(224,25,39)" rx="2" ry="2" />
<text  x="984.17" y="367.5" ></text>
</g>
<g >
<title>pageout (1 samples, 0.02%)</title><rect x="1175.1" y="437" width="0.2" height="15.0" fill="rgb(230,29,44)" rx="2" ry="2" />
<text  x="1178.14" y="447.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.05%)</title><rect x="981.6" y="357" width="0.5" height="15.0" fill="rgb(244,76,11)" rx="2" ry="2" />
<text  x="984.55" y="367.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="39.0" y="469" width="0.2" height="15.0" fill="rgb(212,47,28)" rx="2" ry="2" />
<text  x="41.96" y="479.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="388.0" y="341" width="0.2" height="15.0" fill="rgb(211,118,54)" rx="2" ry="2" />
<text  x="391.03" y="351.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (1 samples, 0.02%)</title><rect x="997.0" y="149" width="0.2" height="15.0" fill="rgb(215,97,21)" rx="2" ry="2" />
<text  x="999.99" y="159.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="289.1" y="533" width="0.4" height="15.0" fill="rgb(222,42,51)" rx="2" ry="2" />
<text  x="292.14" y="543.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (2 samples, 0.03%)</title><rect x="190.4" y="389" width="0.4" height="15.0" fill="rgb(226,18,11)" rx="2" ry="2" />
<text  x="193.44" y="399.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (76 samples, 1.23%)</title><rect x="1175.5" y="581" width="14.5" height="15.0" fill="rgb(242,99,51)" rx="2" ry="2" />
<text  x="1178.52" y="591.5" ></text>
</g>
<g >
<title>ThreadPoolForeg (1,274 samples, 20.57%)</title><rect x="10.0" y="597" width="242.7" height="15.0" fill="rgb(245,206,41)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >ThreadPoolForeg</text>
</g>
<g >
<title>perf (70 samples, 1.13%)</title><rect x="252.7" y="597" width="13.4" height="15.0" fill="rgb(246,174,16)" rx="2" ry="2" />
<text  x="255.75" y="607.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (6 samples, 0.10%)</title><rect x="121.7" y="453" width="1.1" height="15.0" fill="rgb(218,117,8)" rx="2" ry="2" />
<text  x="124.66" y="463.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.02%)</title><rect x="1139.1" y="405" width="0.2" height="15.0" fill="rgb(229,19,22)" rx="2" ry="2" />
<text  x="1142.13" y="415.5" ></text>
</g>
<g >
<title>cpumask_next (2 samples, 0.03%)</title><rect x="227.8" y="357" width="0.4" height="15.0" fill="rgb(207,22,5)" rx="2" ry="2" />
<text  x="230.78" y="367.5" ></text>
</g>
<g >
<title>menu_select (24 samples, 0.39%)</title><rect x="118.4" y="485" width="4.6" height="15.0" fill="rgb(211,173,12)" rx="2" ry="2" />
<text  x="121.42" y="495.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.02%)</title><rect x="123.8" y="517" width="0.1" height="15.0" fill="rgb(220,15,8)" rx="2" ry="2" />
<text  x="126.75" y="527.5" ></text>
</g>
<g >
<title>NaClLog (4 samples, 0.06%)</title><rect x="269.3" y="565" width="0.8" height="15.0" fill="rgb(206,52,27)" rx="2" ry="2" />
<text  x="272.32" y="575.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="1151.3" y="549" width="0.2" height="15.0" fill="rgb(237,109,25)" rx="2" ry="2" />
<text  x="1154.32" y="559.5" ></text>
</g>
<g >
<title>NaClXMutexLock (3 samples, 0.05%)</title><rect x="270.8" y="565" width="0.6" height="15.0" fill="rgb(232,173,25)" rx="2" ry="2" />
<text  x="273.85" y="575.5" ></text>
</g>
<g >
<title>event_function (63 samples, 1.02%)</title><rect x="252.7" y="293" width="12.0" height="15.0" fill="rgb(241,84,15)" rx="2" ry="2" />
<text  x="255.75" y="303.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.02%)</title><rect x="215.4" y="453" width="0.2" height="15.0" fill="rgb(228,109,9)" rx="2" ry="2" />
<text  x="218.40" y="463.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="39.7" y="357" width="0.2" height="15.0" fill="rgb(230,162,20)" rx="2" ry="2" />
<text  x="42.72" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="687.4" y="293" width="0.2" height="15.0" fill="rgb(233,109,48)" rx="2" ry="2" />
<text  x="690.36" y="303.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (41 samples, 0.66%)</title><rect x="207.6" y="453" width="7.8" height="15.0" fill="rgb(233,89,35)" rx="2" ry="2" />
<text  x="210.59" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="264.9" y="149" width="0.2" height="15.0" fill="rgb(247,119,45)" rx="2" ry="2" />
<text  x="267.94" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.31%)</title><rect x="1022.5" y="373" width="3.6" height="15.0" fill="rgb(248,164,46)" rx="2" ry="2" />
<text  x="1025.52" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (250 samples, 4.04%)</title><rect x="144.9" y="421" width="47.6" height="15.0" fill="rgb(212,107,36)" rx="2" ry="2" />
<text  x="147.90" y="431.5" >cpui..</text>
</g>
<g >
<title>record__write (4 samples, 0.06%)</title><rect x="264.9" y="469" width="0.8" height="15.0" fill="rgb(245,113,37)" rx="2" ry="2" />
<text  x="267.94" y="479.5" ></text>
</g>
<g >
<title>[perf-2084.map] (6 samples, 0.10%)</title><rect x="305.1" y="581" width="1.2" height="15.0" fill="rgb(248,152,0)" rx="2" ry="2" />
<text  x="308.14" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (2,121 samples, 34.25%)</title><rect x="361.5" y="437" width="404.2" height="15.0" fill="rgb(218,107,51)" rx="2" ry="2" />
<text  x="364.54" y="447.5" >rustposix::interface::pipe::EmulatedPipe::read_from_pipe</text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.02%)</title><rect x="216.7" y="229" width="0.2" height="15.0" fill="rgb(211,157,51)" rx="2" ry="2" />
<text  x="219.73" y="239.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="265.9" y="501" width="0.2" height="15.0" fill="rgb(244,16,32)" rx="2" ry="2" />
<text  x="268.89" y="511.5" ></text>
</g>
<g >
<title>udp_rcv (1 samples, 0.02%)</title><rect x="997.0" y="37" width="0.2" height="15.0" fill="rgb(239,92,10)" rx="2" ry="2" />
<text  x="999.99" y="47.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="39.2" y="549" width="0.1" height="15.0" fill="rgb(246,136,7)" rx="2" ry="2" />
<text  x="42.15" y="559.5" ></text>
</g>
<g >
<title>rwsem_down_read_slowpath (1 samples, 0.02%)</title><rect x="1141.0" y="373" width="0.2" height="15.0" fill="rgb(235,7,47)" rx="2" ry="2" />
<text  x="1144.03" y="383.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="1139.5" y="453" width="0.2" height="15.0" fill="rgb(238,215,20)" rx="2" ry="2" />
<text  x="1142.51" y="463.5" ></text>
</g>
<g >
<title>std::thread::panicking (3 samples, 0.05%)</title><rect x="941.3" y="373" width="0.6" height="15.0" fill="rgb(233,227,41)" rx="2" ry="2" />
<text  x="944.35" y="383.5" ></text>
</g>
<g >
<title>NaClHostDescRead (2,122 samples, 34.26%)</title><rect x="361.4" y="501" width="404.3" height="15.0" fill="rgb(212,73,20)" rx="2" ry="2" />
<text  x="364.35" y="511.5" >NaClHostDescRead</text>
</g>
<g >
<title>NaClSysWriteDecoder (1,760 samples, 28.42%)</title><rect x="766.1" y="549" width="335.3" height="15.0" fill="rgb(238,40,6)" rx="2" ry="2" />
<text  x="769.05" y="559.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (34 samples, 0.55%)</title><rect x="646.4" y="373" width="6.5" height="15.0" fill="rgb(211,214,25)" rx="2" ry="2" />
<text  x="649.40" y="383.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (3 samples, 0.05%)</title><rect x="122.0" y="437" width="0.6" height="15.0" fill="rgb(245,141,37)" rx="2" ry="2" />
<text  x="125.04" y="447.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.02%)</title><rect x="118.2" y="501" width="0.2" height="15.0" fill="rgb(253,221,9)" rx="2" ry="2" />
<text  x="121.23" y="511.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="265.3" y="133" width="0.2" height="15.0" fill="rgb(222,204,43)" rx="2" ry="2" />
<text  x="268.32" y="143.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.02%)</title><rect x="361.4" y="405" width="0.1" height="15.0" fill="rgb(221,9,16)" rx="2" ry="2" />
<text  x="364.35" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (3 samples, 0.05%)</title><rect x="274.7" y="565" width="0.5" height="15.0" fill="rgb(249,197,11)" rx="2" ry="2" />
<text  x="277.66" y="575.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="265.9" y="341" width="0.2" height="15.0" fill="rgb(218,191,53)" rx="2" ry="2" />
<text  x="268.89" y="351.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="39.7" y="341" width="0.2" height="15.0" fill="rgb(230,182,16)" rx="2" ry="2" />
<text  x="42.72" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.08%)</title><rect x="1150.6" y="565" width="0.9" height="15.0" fill="rgb(248,61,21)" rx="2" ry="2" />
<text  x="1153.56" y="575.5" ></text>
</g>
<g >
<title>generic_exec_single (6 samples, 0.10%)</title><rect x="134.6" y="405" width="1.2" height="15.0" fill="rgb(212,200,16)" rx="2" ry="2" />
<text  x="137.61" y="415.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.02%)</title><rect x="39.3" y="501" width="0.2" height="15.0" fill="rgb(242,182,26)" rx="2" ry="2" />
<text  x="42.34" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="928.6" y="437" width="0.2" height="15.0" fill="rgb(209,167,53)" rx="2" ry="2" />
<text  x="931.58" y="447.5" ></text>
</g>
<g >
<title>pick_next_task_fair (127 samples, 2.05%)</title><rect x="216.9" y="421" width="24.2" height="15.0" fill="rgb(218,63,46)" rx="2" ry="2" />
<text  x="219.92" y="431.5" >p..</text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1174.4" y="549" width="0.2" height="15.0" fill="rgb(224,60,22)" rx="2" ry="2" />
<text  x="1177.38" y="559.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (10 samples, 0.16%)</title><rect x="392.6" y="389" width="1.9" height="15.0" fill="rgb(216,57,17)" rx="2" ry="2" />
<text  x="395.60" y="399.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.02%)</title><rect x="39.3" y="533" width="0.2" height="15.0" fill="rgb(224,147,53)" rx="2" ry="2" />
<text  x="42.34" y="543.5" ></text>
</g>
<g >
<title>cpuidle_select (26 samples, 0.42%)</title><rect x="118.4" y="501" width="5.0" height="15.0" fill="rgb(209,132,17)" rx="2" ry="2" />
<text  x="121.42" y="511.5" ></text>
</g>
<g >
<title>smp_call_function_single (63 samples, 1.02%)</title><rect x="252.7" y="341" width="12.0" height="15.0" fill="rgb(235,39,29)" rx="2" ry="2" />
<text  x="255.75" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.03%)</title><rect x="937.2" y="373" width="0.3" height="15.0" fill="rgb(250,162,7)" rx="2" ry="2" />
<text  x="940.16" y="383.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="1068.4" y="389" width="0.2" height="15.0" fill="rgb(214,78,10)" rx="2" ry="2" />
<text  x="1071.44" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (42 samples, 0.68%)</title><rect x="929.2" y="373" width="8.0" height="15.0" fill="rgb(213,59,1)" rx="2" ry="2" />
<text  x="932.15" y="383.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (965 samples, 15.58%)</title><rect x="581.8" y="421" width="183.9" height="15.0" fill="rgb(230,124,39)" rx="2" ry="2" />
<text  x="584.80" y="431.5" >ringbuf::consumer::Cons..</text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.02%)</title><rect x="1187.9" y="405" width="0.2" height="15.0" fill="rgb(253,104,29)" rx="2" ry="2" />
<text  x="1190.90" y="415.5" ></text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.03%)</title><rect x="1053.2" y="373" width="0.4" height="15.0" fill="rgb(236,157,33)" rx="2" ry="2" />
<text  x="1056.19" y="383.5" ></text>
</g>
</g>
</svg>
