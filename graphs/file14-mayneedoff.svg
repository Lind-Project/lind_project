<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="694.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="677" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="677" > </text>
<g id="frames">
<g >
<title>zap_pmd_range.isra.0 (104,599,672 samples, 1.24%)</title><rect x="194.8" y="293" width="14.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="197.84" y="303.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (52,242,215 samples, 0.62%)</title><rect x="209.5" y="501" width="7.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="212.49" y="511.5" ></text>
</g>
<g >
<title>exec_binprm (725,890,193 samples, 8.62%)</title><rect x="604.0" y="517" width="101.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="607.02" y="527.5" >exec_binprm</text>
</g>
<g >
<title>ksys_mmap_pgoff (567,989,270 samples, 6.74%)</title><rect x="100.6" y="405" width="79.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="103.59" y="415.5" >ksys_mmap..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper_inner (104,599,672 samples, 1.24%)</title><rect x="194.8" y="501" width="14.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="197.84" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (725,890,193 samples, 8.62%)</title><rect x="604.0" y="613" width="101.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="607.02" y="623.5" >entry_SYSCAL..</text>
</g>
<g >
<title>zap_pte_range (591,608,790 samples, 7.02%)</title><rect x="10.0" y="325" width="82.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >zap_pte_r..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (156,822,094 samples, 1.86%)</title><rect x="216.8" y="517" width="22.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="219.81" y="527.5" >c..</text>
</g>
<g >
<title>std::sys::unix::fs::unlink (418,428,366 samples, 4.97%)</title><rect x="238.8" y="469" width="58.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="241.79" y="479.5" >std::s..</text>
</g>
<g >
<title>unmap_page_range (104,599,672 samples, 1.24%)</title><rect x="194.8" y="309" width="14.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="197.84" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (738,806,160 samples, 8.77%)</title><rect x="449.0" y="469" width="103.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="451.99" y="479.5" >do_syscall_64</text>
</g>
<g >
<title>do_syscall_64 (725,890,193 samples, 8.62%)</title><rect x="604.0" y="597" width="101.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="607.02" y="607.5" >do_syscall_64</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::close (104,599,672 samples, 1.24%)</title><rect x="194.8" y="485" width="14.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="197.84" y="495.5" ></text>
</g>
<g >
<title>unlink (418,428,366 samples, 4.97%)</title><rect x="238.8" y="453" width="58.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="241.79" y="463.5" >unlink</text>
</g>
<g >
<title>mas_destroy (53,266,714 samples, 0.63%)</title><rect x="552.5" y="357" width="7.5" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="555.51" y="367.5" ></text>
</g>
<g >
<title>__vm_munmap (104,599,672 samples, 1.24%)</title><rect x="194.8" y="405" width="14.7" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="197.84" y="415.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,749,504,553 samples, 20.77%)</title><rect x="944.9" y="613" width="245.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="947.87" y="623.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>__do_sys_mremap (53,266,714 samples, 0.63%)</title><rect x="552.5" y="437" width="7.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="555.51" y="447.5" ></text>
</g>
<g >
<title>mremap (53,266,714 samples, 0.63%)</title><rect x="552.5" y="501" width="7.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="555.51" y="511.5" ></text>
</g>
<g >
<title>mmput (591,608,790 samples, 7.02%)</title><rect x="10.0" y="437" width="82.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >mmput</text>
</g>
<g >
<title>vm_mmap_pgoff (567,989,270 samples, 6.74%)</title><rect x="100.6" y="389" width="79.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="103.59" y="399.5" >vm_mmap_p..</text>
</g>
<g >
<title>__rcu_read_unlock (52,320,905 samples, 0.62%)</title><rect x="359.2" y="325" width="7.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="362.25" y="335.5" ></text>
</g>
<g >
<title>do_fault (579,535,481 samples, 6.88%)</title><rect x="359.2" y="373" width="81.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="362.25" y="383.5" >do_fault</text>
</g>
<g >
<title>NaClSyscallCSegHook (2,710,572,849 samples, 32.19%)</title><rect x="180.2" y="597" width="379.8" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="183.18" y="607.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>menu_select (723,508,336 samples, 8.59%)</title><rect x="1010.9" y="517" width="101.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1013.89" y="527.5" >menu_select</text>
</g>
<g >
<title>__vma_adjust (53,266,714 samples, 0.63%)</title><rect x="552.5" y="405" width="7.5" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="555.51" y="415.5" ></text>
</g>
<g >
<title>NaClSysUnlink (418,428,366 samples, 4.97%)</title><rect x="238.8" y="565" width="58.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="241.79" y="575.5" >NaClSy..</text>
</g>
<g >
<title>NaClSysRead (209,064,309 samples, 2.48%)</title><rect x="209.5" y="565" width="29.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="212.49" y="575.5" >Na..</text>
</g>
<g >
<title>unmap_vmas (591,608,790 samples, 7.02%)</title><rect x="10.0" y="389" width="82.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >unmap_vmas</text>
</g>
<g >
<title>page_cache_ra_unbounded (686,464,197 samples, 8.15%)</title><rect x="449.0" y="341" width="96.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="451.99" y="351.5" >page_cache_..</text>
</g>
<g >
<title>zap_pte_range (104,599,672 samples, 1.24%)</title><rect x="194.8" y="277" width="14.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="197.84" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (104,599,672 samples, 1.24%)</title><rect x="194.8" y="421" width="14.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="197.84" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;usize,dashmap::util::SharedValue&lt;rustposix::safeposix::filesystem::Inode&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (52,242,215 samples, 0.62%)</title><rect x="209.5" y="517" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="212.49" y="527.5" ></text>
</g>
<g >
<title>free_unref_page_commit (52,292,982 samples, 0.62%)</title><rect x="246.1" y="133" width="7.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="249.12" y="143.5" ></text>
</g>
<g >
<title>mmap_region (567,989,270 samples, 6.74%)</title><rect x="100.6" y="357" width="79.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="103.59" y="367.5" >mmap_region</text>
</g>
<g >
<title>truncate_cleanup_folio (261,539,623 samples, 3.11%)</title><rect x="260.8" y="181" width="36.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="263.77" y="191.5" >tru..</text>
</g>
<g >
<title>ext4_release_folio (209,234,293 samples, 2.48%)</title><rect x="268.1" y="117" width="29.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="271.10" y="127.5" >ex..</text>
</g>
<g >
<title>dput (418,428,366 samples, 4.97%)</title><rect x="238.8" y="309" width="58.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="241.79" y="319.5" >dput</text>
</g>
<g >
<title>rest_init (7,060,054 samples, 0.08%)</title><rect x="1189.0" y="549" width="1.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1192.01" y="559.5" ></text>
</g>
<g >
<title>release_pages (104,600,522 samples, 1.24%)</title><rect x="238.8" y="165" width="14.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="241.79" y="175.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (209,064,309 samples, 2.48%)</title><rect x="209.5" y="549" width="29.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="212.49" y="559.5" >ru..</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (122,253,412 samples, 1.45%)</title><rect x="993.8" y="357" width="17.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="996.76" y="367.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (567,989,270 samples, 6.74%)</title><rect x="100.6" y="565" width="79.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="103.59" y="575.5" >[ld-linux..</text>
</g>
<g >
<title>vfs_fadvise (686,464,197 samples, 8.15%)</title><rect x="449.0" y="389" width="96.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="451.99" y="399.5" >vfs_fadvise</text>
</g>
<g >
<title>cpuidle_select (723,508,336 samples, 8.59%)</title><rect x="1010.9" y="533" width="101.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1013.89" y="543.5" >cpuidle_select</text>
</g>
<g >
<title>__x64_sys_mremap (53,266,714 samples, 0.63%)</title><rect x="552.5" y="453" width="7.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="555.51" y="463.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (567,989,270 samples, 6.74%)</title><rect x="100.6" y="517" width="79.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="103.59" y="527.5" >[ld-linux..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::unlink_syscall (418,428,366 samples, 4.97%)</title><rect x="238.8" y="517" width="58.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="241.79" y="527.5" >rustpo..</text>
</g>
<g >
<title>do_idle (7,060,054 samples, 0.08%)</title><rect x="1189.0" y="517" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.01" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (418,428,366 samples, 4.97%)</title><rect x="238.8" y="421" width="58.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="241.79" y="431.5" >do_sys..</text>
</g>
<g >
<title>iput (418,428,366 samples, 4.97%)</title><rect x="238.8" y="373" width="58.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="241.79" y="383.5" >iput</text>
</g>
<g >
<title>do_mmap (567,989,270 samples, 6.74%)</title><rect x="100.6" y="373" width="79.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="103.59" y="383.5" >do_mmap</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (567,989,270 samples, 6.74%)</title><rect x="100.6" y="613" width="79.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="103.59" y="623.5" >[ld-linux..</text>
</g>
<g >
<title>filemap_add_folio (353,496,724 samples, 4.20%)</title><rect x="449.0" y="325" width="49.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="451.99" y="335.5" >file..</text>
</g>
<g >
<title>pm_qos_read_value (723,508,336 samples, 8.59%)</title><rect x="1010.9" y="501" width="101.4" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1013.89" y="511.5" >pm_qos_read_..</text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get_mut (52,355,089 samples, 0.62%)</title><rect x="312.3" y="533" width="7.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="315.27" y="543.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (158,021,892 samples, 1.88%)</title><rect x="476.4" y="293" width="22.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="479.38" y="303.5" >_..</text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (213,209,889 samples, 2.53%)</title><rect x="395.9" y="277" width="29.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="398.92" y="287.5" >ex..</text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (156,919,005 samples, 1.86%)</title><rect x="275.4" y="101" width="22.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="278.43" y="111.5" >j..</text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (52,355,089 samples, 0.62%)</title><rect x="312.3" y="517" width="7.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="315.27" y="527.5" ></text>
</g>
<g >
<title>search_binary_handler (725,890,193 samples, 8.62%)</title><rect x="604.0" y="501" width="101.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="607.02" y="511.5" >search_binar..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (738,806,160 samples, 8.77%)</title><rect x="449.0" y="485" width="103.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="451.99" y="495.5" >entry_SYSCAL..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (418,428,366 samples, 4.97%)</title><rect x="238.8" y="437" width="58.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="241.79" y="447.5" >entry_..</text>
</g>
<g >
<title>[libc.so.6] (923,374,677 samples, 10.96%)</title><rect x="319.6" y="485" width="129.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="322.61" y="495.5" >[libc.so.6]</text>
</g>
<g >
<title>perf_event_mmap (567,989,270 samples, 6.74%)</title><rect x="100.6" y="341" width="79.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="103.59" y="351.5" >perf_even..</text>
</g>
<g >
<title>lind_close (104,599,672 samples, 1.24%)</title><rect x="194.8" y="549" width="14.7" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="197.84" y="559.5" ></text>
</g>
<g >
<title>__do_softirq (122,253,412 samples, 1.45%)</title><rect x="993.8" y="437" width="17.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="996.76" y="447.5" ></text>
</g>
<g >
<title>NaClSysCloseDecoder (104,599,672 samples, 1.24%)</title><rect x="194.8" y="581" width="14.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="197.84" y="591.5" ></text>
</g>
<g >
<title>find_busiest_group (122,253,412 samples, 1.45%)</title><rect x="993.8" y="373" width="17.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="996.76" y="383.5" ></text>
</g>
<g >
<title>rebalance_domains (355,213,980 samples, 4.22%)</title><rect x="895.1" y="501" width="49.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="898.09" y="511.5" >rebal..</text>
</g>
<g >
<title>do_mas_align_munmap (104,599,672 samples, 1.24%)</title><rect x="194.8" y="373" width="14.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="197.84" y="383.5" ></text>
</g>
<g >
<title>force_page_cache_ra (686,464,197 samples, 8.15%)</title><rect x="449.0" y="357" width="96.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="451.99" y="367.5" >force_page_..</text>
</g>
<g >
<title>unmap_vmas (104,599,672 samples, 1.24%)</title><rect x="194.8" y="341" width="14.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="197.84" y="351.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (52,314,349 samples, 0.62%)</title><rect x="290.1" y="37" width="7.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="293.09" y="47.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (209,064,309 samples, 2.48%)</title><rect x="209.5" y="581" width="29.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="212.49" y="591.5" >Na..</text>
</g>
<g >
<title>ret_from_fork (355,213,980 samples, 4.22%)</title><rect x="895.1" y="613" width="49.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="898.09" y="623.5" >ret_f..</text>
</g>
<g >
<title>__walk_page_range (52,341,963 samples, 0.62%)</title><rect x="545.2" y="373" width="7.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="548.17" y="383.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (355,213,980 samples, 4.22%)</title><rect x="895.1" y="437" width="49.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="898.09" y="447.5" >updat..</text>
</g>
<g >
<title>__x64_sys_mmap (567,989,270 samples, 6.74%)</title><rect x="100.6" y="421" width="79.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="103.59" y="431.5" >__x64_sys..</text>
</g>
<g >
<title>std::fs::remove_file (418,428,366 samples, 4.97%)</title><rect x="238.8" y="485" width="58.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="241.79" y="495.5" >std::f..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (567,989,270 samples, 6.74%)</title><rect x="100.6" y="453" width="79.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="103.59" y="463.5" >entry_SYS..</text>
</g>
<g >
<title>cgroup_rstat_updated (52,757,497 samples, 0.63%)</title><rect x="476.4" y="245" width="7.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="479.38" y="255.5" ></text>
</g>
<g >
<title>search_binary_handler (591,608,790 samples, 7.02%)</title><rect x="10.0" y="501" width="82.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >search_bi..</text>
</g>
<g >
<title>create_elf_tables (725,890,193 samples, 8.62%)</title><rect x="604.0" y="469" width="101.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="607.02" y="479.5" >create_elf_t..</text>
</g>
<g >
<title>bprm_execve.part.0 (725,890,193 samples, 8.62%)</title><rect x="604.0" y="533" width="101.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="607.02" y="543.5" >bprm_execve...</text>
</g>
<g >
<title>cpu_startup_entry (7,060,054 samples, 0.08%)</title><rect x="1189.0" y="533" width="1.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1192.01" y="543.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (52,355,089 samples, 0.62%)</title><rect x="312.3" y="437" width="7.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="315.27" y="447.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (725,890,193 samples, 8.62%)</title><rect x="604.0" y="325" width="101.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="607.02" y="335.5" >__cgroup_thr..</text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (52,432,911 samples, 0.62%)</title><rect x="304.9" y="549" width="7.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="307.93" y="559.5" ></text>
</g>
<g >
<title>filemap_fault (52,320,905 samples, 0.62%)</title><rect x="359.2" y="341" width="7.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="362.25" y="351.5" ></text>
</g>
<g >
<title>NaClSysClose (104,599,672 samples, 1.24%)</title><rect x="194.8" y="565" width="14.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="197.84" y="575.5" ></text>
</g>
<g >
<title>kmem_cache_free (104,623,156 samples, 1.24%)</title><rect x="282.8" y="53" width="14.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="285.76" y="63.5" ></text>
</g>
<g >
<title>create_empty_buffers (157,015,871 samples, 1.86%)</title><rect x="373.9" y="277" width="22.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="376.92" y="287.5" >c..</text>
</g>
<g >
<title>do_user_addr_fault (725,890,193 samples, 8.62%)</title><rect x="604.0" y="405" width="101.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="607.02" y="415.5" >do_user_addr..</text>
</g>
<g >
<title>cpuidle_enter (6,845,661 samples, 0.08%)</title><rect x="1189.0" y="485" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1192.01" y="495.5" ></text>
</g>
<g >
<title>ext4_evict_inode (418,428,366 samples, 4.97%)</title><rect x="238.8" y="229" width="58.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="241.79" y="239.5" >ext4_e..</text>
</g>
<g >
<title>set_page_dirty (104,599,672 samples, 1.24%)</title><rect x="194.8" y="261" width="14.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="197.84" y="271.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (418,428,366 samples, 4.97%)</title><rect x="238.8" y="501" width="58.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="241.79" y="511.5" >rustpo..</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (355,213,980 samples, 4.22%)</title><rect x="895.1" y="453" width="49.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="898.09" y="463.5" >updat..</text>
</g>
<g >
<title>load_elf_binary (591,608,790 samples, 7.02%)</title><rect x="10.0" y="485" width="82.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >load_elf_..</text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (52,242,215 samples, 0.62%)</title><rect x="209.5" y="453" width="7.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="212.49" y="463.5" ></text>
</g>
<g >
<title>bprm_execve (725,890,193 samples, 8.62%)</title><rect x="604.0" y="549" width="101.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="607.02" y="559.5" >bprm_execve</text>
</g>
<g >
<title>kmem_cache_alloc (52,351,268 samples, 0.62%)</title><rect x="388.6" y="229" width="7.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="391.58" y="239.5" ></text>
</g>
<g >
<title>find_busiest_group (355,213,980 samples, 4.22%)</title><rect x="895.1" y="469" width="49.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="898.09" y="479.5" >find_..</text>
</g>
<g >
<title>get_page_from_freelist (222,393,376 samples, 2.64%)</title><rect x="498.5" y="261" width="31.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="501.52" y="271.5" >ge..</text>
</g>
<g >
<title>__filemap_add_folio (353,496,724 samples, 4.20%)</title><rect x="449.0" y="309" width="49.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="451.99" y="319.5" >__fi..</text>
</g>
<g >
<title>asm_exc_page_fault (725,890,193 samples, 8.62%)</title><rect x="604.0" y="437" width="101.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="607.02" y="447.5" >asm_exc_page..</text>
</g>
<g >
<title>exc_page_fault (725,890,193 samples, 8.62%)</title><rect x="604.0" y="421" width="101.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="607.02" y="431.5" >exc_page_fault</text>
</g>
<g >
<title>get_obj_cgroup_from_current (52,351,268 samples, 0.62%)</title><rect x="388.6" y="213" width="7.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="391.58" y="223.5" ></text>
</g>
<g >
<title>alloc_page_buffers (52,351,268 samples, 0.62%)</title><rect x="388.6" y="261" width="7.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="391.58" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock (52,295,849 samples, 0.62%)</title><rect x="275.4" y="85" width="7.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="278.43" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (156,822,094 samples, 1.86%)</title><rect x="216.8" y="485" width="22.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="219.81" y="495.5" >[..</text>
</g>
<g >
<title>put_prev_task_idle (270,837,316 samples, 3.22%)</title><rect x="1151.1" y="501" width="37.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1154.06" y="511.5" >put..</text>
</g>
<g >
<title>exit_mmap (591,608,790 samples, 7.02%)</title><rect x="10.0" y="405" width="82.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >exit_mmap</text>
</g>
<g >
<title>bprm_execve.part.0 (591,608,790 samples, 7.02%)</title><rect x="10.0" y="533" width="82.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >bprm_exec..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (52,242,215 samples, 0.62%)</title><rect x="209.5" y="469" width="7.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="212.49" y="479.5" ></text>
</g>
<g >
<title>alloc_buffer_head (52,351,268 samples, 0.62%)</title><rect x="388.6" y="245" width="7.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="391.58" y="255.5" ></text>
</g>
<g >
<title>block_dirty_folio (104,599,672 samples, 1.24%)</title><rect x="194.8" y="213" width="14.7" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="197.84" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_execve (591,608,790 samples, 7.02%)</title><rect x="10.0" y="581" width="82.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >__x64_sys..</text>
</g>
<g >
<title>rebalance_domains (122,253,412 samples, 1.45%)</title><rect x="993.8" y="405" width="17.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="996.76" y="415.5" ></text>
</g>
<g >
<title>[unknown] (1,230,670,882 samples, 14.61%)</title><rect x="705.7" y="613" width="172.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="708.72" y="623.5" >[unknown]</text>
</g>
<g >
<title>walk_p4d_range (52,341,963 samples, 0.62%)</title><rect x="545.2" y="341" width="7.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="548.17" y="351.5" ></text>
</g>
<g >
<title>rmqueue (222,393,376 samples, 2.64%)</title><rect x="498.5" y="245" width="31.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="501.52" y="255.5" >rm..</text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (52,432,911 samples, 0.62%)</title><rect x="304.9" y="533" width="7.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="307.93" y="543.5" ></text>
</g>
<g >
<title>__schedule (270,837,316 samples, 3.22%)</title><rect x="1151.1" y="533" width="37.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1154.06" y="543.5" >__s..</text>
</g>
<g >
<title>pmd_val (60,930,673 samples, 0.72%)</title><rect x="440.5" y="373" width="8.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="443.45" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (53,266,714 samples, 0.63%)</title><rect x="552.5" y="469" width="7.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="555.51" y="479.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (262,042,580 samples, 3.11%)</title><rect x="567.3" y="613" width="36.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="570.30" y="623.5" >asm..</text>
</g>
<g >
<title>block_invalidate_folio (261,539,623 samples, 3.11%)</title><rect x="260.8" y="149" width="36.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="263.77" y="159.5" >blo..</text>
</g>
<g >
<title>__do_fault (52,320,905 samples, 0.62%)</title><rect x="359.2" y="357" width="7.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="362.25" y="367.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (567,989,270 samples, 6.74%)</title><rect x="100.6" y="469" width="79.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="103.59" y="479.5" >[ld-linux..</text>
</g>
<g >
<title>__handle_mm_fault (692,863,025 samples, 8.23%)</title><rect x="351.9" y="405" width="97.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="354.91" y="415.5" >__handle_mm..</text>
</g>
<g >
<title>unmap_single_vma (104,599,672 samples, 1.24%)</title><rect x="194.8" y="325" width="14.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="197.84" y="335.5" ></text>
</g>
<g >
<title>do_unlinkat (418,428,366 samples, 4.97%)</title><rect x="238.8" y="389" width="58.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="241.79" y="399.5" >do_unl..</text>
</g>
<g >
<title>sched_ttwu_pending (276,856,861 samples, 3.29%)</title><rect x="1112.3" y="517" width="38.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1115.27" y="527.5" >sch..</text>
</g>
<g >
<title>folio_alloc (222,393,376 samples, 2.64%)</title><rect x="498.5" y="309" width="31.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="501.52" y="319.5" >fo..</text>
</g>
<g >
<title>__x64_sys_execve (725,890,193 samples, 8.62%)</title><rect x="604.0" y="581" width="101.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="607.02" y="591.5" >__x64_sys_ex..</text>
</g>
<g >
<title>cache_from_obj (52,308,807 samples, 0.62%)</title><rect x="282.8" y="37" width="7.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="285.76" y="47.5" ></text>
</g>
<g >
<title>iput (418,428,366 samples, 4.97%)</title><rect x="238.8" y="261" width="58.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="241.79" y="271.5" >iput</text>
</g>
<g >
<title>cpuidle_enter (471,241,986 samples, 5.60%)</title><rect x="944.9" y="533" width="66.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="947.87" y="543.5" >cpuidle..</text>
</g>
<g >
<title>[sel_ldr] (2,710,572,849 samples, 32.19%)</title><rect x="180.2" y="613" width="379.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="183.18" y="623.5" >[sel_ldr]</text>
</g>
<g >
<title>cpuidle_idle_call (7,060,054 samples, 0.08%)</title><rect x="1189.0" y="501" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.01" y="511.5" ></text>
</g>
<g >
<title>sel_ldr (4,373,714,921 samples, 51.93%)</title><rect x="92.9" y="629" width="612.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="95.89" y="639.5" >sel_ldr</text>
</g>
<g >
<title>fault_dirty_shared_page (52,317,032 samples, 0.62%)</title><rect x="433.1" y="357" width="7.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="436.12" y="367.5" ></text>
</g>
<g >
<title>[anon] (54,928,363 samples, 0.65%)</title><rect x="92.9" y="613" width="7.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="95.89" y="623.5" ></text>
</g>
<g >
<title>folio_mark_dirty (104,599,672 samples, 1.24%)</title><rect x="194.8" y="245" width="14.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="197.84" y="255.5" ></text>
</g>
<g >
<title>unmap_page_range (591,608,790 samples, 7.02%)</title><rect x="10.0" y="357" width="82.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >unmap_pag..</text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (52,242,215 samples, 0.62%)</title><rect x="209.5" y="485" width="7.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="212.49" y="495.5" ></text>
</g>
<g >
<title>madvise_walk_vmas (738,806,160 samples, 8.77%)</title><rect x="449.0" y="421" width="103.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="451.99" y="431.5" >madvise_walk..</text>
</g>
<g >
<title>cpuidle_enter_state (6,845,661 samples, 0.08%)</title><rect x="1189.0" y="469" width="1.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1192.01" y="479.5" ></text>
</g>
<g >
<title>NaClSysUnlinkDecoder (418,428,366 samples, 4.97%)</title><rect x="238.8" y="581" width="58.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="241.79" y="591.5" >NaClSy..</text>
</g>
<g >
<title>cpuidle_enter_state (471,241,986 samples, 5.60%)</title><rect x="944.9" y="517" width="66.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="947.87" y="527.5" >cpuidle..</text>
</g>
<g >
<title>ovl_destroy_inode (418,428,366 samples, 4.97%)</title><rect x="238.8" y="325" width="58.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="241.79" y="335.5" >ovl_de..</text>
</g>
<g >
<title>start_kernel (7,060,054 samples, 0.08%)</title><rect x="1189.0" y="581" width="1.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1192.01" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (52,355,089 samples, 0.62%)</title><rect x="312.3" y="501" width="7.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="315.27" y="511.5" ></text>
</g>
<g >
<title>lind_unlink (418,428,366 samples, 4.97%)</title><rect x="238.8" y="549" width="58.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="241.79" y="559.5" >lind_u..</text>
</g>
<g >
<title>__mmput (591,608,790 samples, 7.02%)</title><rect x="10.0" y="421" width="82.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >__mmput</text>
</g>
<g >
<title>do_syscall_64 (104,599,672 samples, 1.24%)</title><rect x="194.8" y="437" width="14.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="197.84" y="447.5" ></text>
</g>
<g >
<title>__count_memcg_events (52,757,497 samples, 0.63%)</title><rect x="476.4" y="261" width="7.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="479.38" y="271.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (156,822,094 samples, 1.86%)</title><rect x="216.8" y="533" width="22.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="219.81" y="543.5" >r..</text>
</g>
<g >
<title>__common_interrupt (348,988,574 samples, 4.14%)</title><rect x="944.9" y="469" width="48.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="947.87" y="479.5" >__co..</text>
</g>
<g >
<title>walk_pud_range.isra.0 (52,341,963 samples, 0.62%)</title><rect x="545.2" y="325" width="7.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="548.17" y="335.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (52,355,089 samples, 0.62%)</title><rect x="312.3" y="453" width="7.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="315.27" y="463.5" ></text>
</g>
<g >
<title>ext4_mpage_readpages (110,574,097 samples, 1.31%)</title><rect x="529.7" y="293" width="15.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="532.68" y="303.5" ></text>
</g>
<g >
<title>_dl_catch_exception (567,989,270 samples, 6.74%)</title><rect x="100.6" y="533" width="79.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="103.59" y="543.5" >_dl_catch..</text>
</g>
<g >
<title>read_pages (110,574,097 samples, 1.31%)</title><rect x="529.7" y="325" width="15.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="532.68" y="335.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (725,890,193 samples, 8.62%)</title><rect x="604.0" y="453" width="101.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="607.02" y="463.5" >copy_user_en..</text>
</g>
<g >
<title>_nohz_idle_balance.isra.0 (355,213,980 samples, 4.22%)</title><rect x="895.1" y="517" width="49.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="898.09" y="527.5" >_nohz..</text>
</g>
<g >
<title>__dentry_kill (418,428,366 samples, 4.97%)</title><rect x="238.8" y="293" width="58.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="241.79" y="303.5" >__dent..</text>
</g>
<g >
<title>do_syscall_64 (567,989,270 samples, 6.74%)</title><rect x="100.6" y="437" width="79.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="103.59" y="447.5" >do_syscal..</text>
</g>
<g >
<title>all (8,421,552,930 samples, 100%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>ext4_readahead (110,574,097 samples, 1.31%)</title><rect x="529.7" y="309" width="15.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="532.68" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (122,253,412 samples, 1.45%)</title><rect x="993.8" y="501" width="17.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="996.76" y="511.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (591,608,790 samples, 7.02%)</title><rect x="10.0" y="341" width="82.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >zap_pmd_r..</text>
</g>
<g >
<title>try_to_free_buffers (104,623,156 samples, 1.24%)</title><rect x="282.8" y="85" width="14.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="285.76" y="95.5" ></text>
</g>
<g >
<title>free_unref_page_list (104,600,522 samples, 1.24%)</title><rect x="238.8" y="149" width="14.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="241.79" y="159.5" ></text>
</g>
<g >
<title>pick_next_task (270,837,316 samples, 3.22%)</title><rect x="1151.1" y="517" width="37.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1154.06" y="527.5" >pic..</text>
</g>
<g >
<title>ext4_da_get_block_prep (213,209,889 samples, 2.53%)</title><rect x="395.9" y="293" width="29.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="398.92" y="303.5" >ex..</text>
</g>
<g >
<title>run_rebalance_domains (122,253,412 samples, 1.45%)</title><rect x="993.8" y="421" width="17.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="996.76" y="431.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1,767,802,640 samples, 20.99%)</title><rect x="312.3" y="549" width="247.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="315.27" y="559.5" >rustposix::safeposix::syscalls::..</text>
</g>
<g >
<title>__do_softirq (355,213,980 samples, 4.22%)</title><rect x="895.1" y="549" width="49.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="898.09" y="559.5" >__do_..</text>
</g>
<g >
<title>ext4_invalidate_folio (261,539,623 samples, 3.11%)</title><rect x="260.8" y="165" width="36.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="263.77" y="175.5" >ext..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (52,355,089 samples, 0.62%)</title><rect x="312.3" y="405" width="7.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="315.27" y="415.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,873,841,662 samples, 22.25%)</title><rect x="297.4" y="581" width="262.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="300.42" y="591.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>start_secondary (1,742,444,499 samples, 20.69%)</title><rect x="944.9" y="597" width="244.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="947.87" y="607.5" >start_secondary</text>
</g>
<g >
<title>run_ksoftirqd (355,213,980 samples, 4.22%)</title><rect x="895.1" y="565" width="49.8" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="898.09" y="575.5" >run_k..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (567,989,270 samples, 6.74%)</title><rect x="100.6" y="485" width="79.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="103.59" y="495.5" >[ld-linux..</text>
</g>
<g >
<title>cpuidle_idle_call (1,194,750,322 samples, 14.19%)</title><rect x="944.9" y="549" width="167.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="947.87" y="559.5" >cpuidle_idle_call</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (923,374,677 samples, 10.96%)</title><rect x="319.6" y="501" width="129.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="322.61" y="511.5" >core::intrinsics..</text>
</g>
<g >
<title>__flush_smp_call_function_queue (276,856,861 samples, 3.29%)</title><rect x="1112.3" y="533" width="38.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1115.27" y="543.5" >__f..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (52,355,089 samples, 0.62%)</title><rect x="312.3" y="485" width="7.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="315.27" y="495.5" ></text>
</g>
<g >
<title>swapin_walk_pmd_entry (52,341,963 samples, 0.62%)</title><rect x="545.2" y="293" width="7.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="548.17" y="303.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (567,989,270 samples, 6.74%)</title><rect x="100.6" y="549" width="79.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="103.59" y="559.5" >[ld-linux..</text>
</g>
<g >
<title>irq_exit_rcu (122,253,412 samples, 1.45%)</title><rect x="993.8" y="469" width="17.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="996.76" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (104,599,672 samples, 1.24%)</title><rect x="194.8" y="453" width="14.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="197.84" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (591,608,790 samples, 7.02%)</title><rect x="10.0" y="613" width="82.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >entry_SYS..</text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (52,315,288 samples, 0.62%)</title><rect x="268.1" y="101" width="7.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="271.10" y="111.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (104,599,672 samples, 1.24%)</title><rect x="194.8" y="517" width="14.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="197.84" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (53,266,714 samples, 0.63%)</title><rect x="552.5" y="485" width="7.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="555.51" y="495.5" ></text>
</g>
<g >
<title>filemap_alloc_folio (222,393,376 samples, 2.64%)</title><rect x="498.5" y="325" width="31.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="501.52" y="335.5" >fi..</text>
</g>
<g >
<title>NaClSysWrite (1,873,841,662 samples, 22.25%)</title><rect x="297.4" y="565" width="262.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="300.42" y="575.5" >NaClSysWrite</text>
</g>
<g >
<title>unmap_single_vma (591,608,790 samples, 7.02%)</title><rect x="10.0" y="373" width="82.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >unmap_sin..</text>
</g>
<g >
<title>free_buffer_head (104,623,156 samples, 1.24%)</title><rect x="282.8" y="69" width="14.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="285.76" y="79.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (122,253,412 samples, 1.45%)</title><rect x="993.8" y="341" width="17.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="996.76" y="351.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (418,428,366 samples, 4.97%)</title><rect x="238.8" y="213" width="58.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="241.79" y="223.5" >trunca..</text>
</g>
<g >
<title>load_balance (355,213,980 samples, 4.22%)</title><rect x="895.1" y="485" width="49.8" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="898.09" y="495.5" >load_..</text>
</g>
<g >
<title>charge_memcg (158,021,892 samples, 1.88%)</title><rect x="476.4" y="277" width="22.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="479.38" y="287.5" >c..</text>
</g>
<g >
<title>bprm_execve (591,608,790 samples, 7.02%)</title><rect x="10.0" y="549" width="82.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >bprm_execve</text>
</g>
<g >
<title>do_execveat_common.isra.0 (591,608,790 samples, 7.02%)</title><rect x="10.0" y="565" width="82.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >do_execve..</text>
</g>
<g >
<title>evict (418,428,366 samples, 4.97%)</title><rect x="238.8" y="357" width="58.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="241.79" y="367.5" >evict</text>
</g>
<g >
<title>do_idle (1,742,444,499 samples, 20.69%)</title><rect x="944.9" y="565" width="244.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="947.87" y="575.5" >do_idle</text>
</g>
<g >
<title>unmap_region (104,599,672 samples, 1.24%)</title><rect x="194.8" y="357" width="14.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="197.84" y="367.5" ></text>
</g>
<g >
<title>__pagevec_release (104,600,522 samples, 1.24%)</title><rect x="238.8" y="181" width="14.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="241.79" y="191.5" ></text>
</g>
<g >
<title>dispatcher (104,599,672 samples, 1.24%)</title><rect x="194.8" y="533" width="14.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="197.84" y="543.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (567,989,270 samples, 6.74%)</title><rect x="100.6" y="581" width="79.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="103.59" y="591.5" >[ld-linux..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (923,374,677 samples, 10.96%)</title><rect x="319.6" y="517" width="129.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="322.61" y="527.5" >core::slice::&lt;im..</text>
</g>
<g >
<title>__x64_sys_madvise (738,806,160 samples, 8.77%)</title><rect x="449.0" y="453" width="103.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="451.99" y="463.5" >__x64_sys_ma..</text>
</g>
<g >
<title>handle_pte_fault (640,466,154 samples, 7.61%)</title><rect x="359.2" y="389" width="89.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="362.25" y="399.5" >handle_pte..</text>
</g>
<g >
<title>common_interrupt (348,988,574 samples, 4.14%)</title><rect x="944.9" y="485" width="48.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="947.87" y="495.5" >comm..</text>
</g>
<g >
<title>__mark_inode_dirty (52,316,911 samples, 0.62%)</title><rect x="425.8" y="277" width="7.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="428.79" y="287.5" ></text>
</g>
<g >
<title>do_page_mkwrite (474,897,544 samples, 5.64%)</title><rect x="366.6" y="357" width="66.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="369.58" y="367.5" >do_page..</text>
</g>
<g >
<title>NaClLog (52,291,666 samples, 0.62%)</title><rect x="560.0" y="597" width="7.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="562.97" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;usize,rustposix::safeposix::filesystem::Inode&gt;&gt; (52,242,215 samples, 0.62%)</title><rect x="209.5" y="533" width="7.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="212.49" y="543.5" ></text>
</g>
<g >
<title>find_lock_entries (52,288,221 samples, 0.62%)</title><rect x="253.4" y="181" width="7.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="256.44" y="191.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (725,890,193 samples, 8.62%)</title><rect x="604.0" y="565" width="101.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="607.02" y="575.5" >do_execveat_..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (52,355,089 samples, 0.62%)</title><rect x="312.3" y="389" width="7.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="315.27" y="399.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,742,444,499 samples, 20.69%)</title><rect x="944.9" y="581" width="244.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="947.87" y="591.5" >cpu_startup_entry</text>
</g>
<g >
<title>mark_buffer_dirty (52,316,911 samples, 0.62%)</title><rect x="425.8" y="293" width="7.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="428.79" y="303.5" ></text>
</g>
<g >
<title>do_madvise.part.0 (738,806,160 samples, 8.77%)</title><rect x="449.0" y="437" width="103.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="451.99" y="447.5" >do_madvise.p..</text>
</g>
<g >
<title>schedule_idle (270,837,316 samples, 3.22%)</title><rect x="1151.1" y="549" width="37.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1154.06" y="559.5" >sch..</text>
</g>
<g >
<title>enqueue_task (276,856,861 samples, 3.29%)</title><rect x="1112.3" y="485" width="38.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1115.27" y="495.5" >enq..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::remap_file (792,072,874 samples, 9.41%)</title><rect x="449.0" y="517" width="111.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="451.99" y="527.5" >rustposix::in..</text>
</g>
<g >
<title>arch_call_rest_init (7,060,054 samples, 0.08%)</title><rect x="1189.0" y="565" width="1.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1192.01" y="575.5" ></text>
</g>
<g >
<title>enqueue_task_fair (276,856,861 samples, 3.29%)</title><rect x="1112.3" y="469" width="38.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1115.27" y="479.5" >enq..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (156,822,094 samples, 1.86%)</title><rect x="216.8" y="501" width="22.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="219.81" y="511.5" >c..</text>
</g>
<g >
<title>[unknown] (52,291,666 samples, 0.62%)</title><rect x="560.0" y="613" width="7.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="562.97" y="623.5" ></text>
</g>
<g >
<title>asm_common_interrupt (348,988,574 samples, 4.14%)</title><rect x="944.9" y="501" width="48.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="947.87" y="511.5" >asm_..</text>
</g>
<g >
<title>destroy_inode (418,428,366 samples, 4.97%)</title><rect x="238.8" y="341" width="58.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="241.79" y="351.5" >destro..</text>
</g>
<g >
<title>walk_pmd_range.isra.0 (52,341,963 samples, 0.62%)</title><rect x="545.2" y="309" width="7.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="548.17" y="319.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (122,253,412 samples, 1.45%)</title><rect x="993.8" y="453" width="17.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="996.76" y="463.5" ></text>
</g>
<g >
<title>__madvise (738,806,160 samples, 8.77%)</title><rect x="449.0" y="501" width="103.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="451.99" y="511.5" >__madvise</text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (52,331,660 samples, 0.62%)</title><rect x="187.5" y="581" width="7.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="190.50" y="591.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (52,351,268 samples, 0.62%)</title><rect x="388.6" y="197" width="7.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="391.58" y="207.5" ></text>
</g>
<g >
<title>kthread (355,213,980 samples, 4.22%)</title><rect x="895.1" y="597" width="49.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="898.09" y="607.5" >kthread</text>
</g>
<g >
<title>do_syscall_64 (591,608,790 samples, 7.02%)</title><rect x="10.0" y="597" width="82.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >do_syscal..</text>
</g>
<g >
<title>truncate_inode_pages_range (418,428,366 samples, 4.97%)</title><rect x="238.8" y="197" width="58.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="241.79" y="207.5" >trunca..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (1,715,447,551 samples, 20.37%)</title><rect x="319.6" y="533" width="240.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="322.61" y="543.5" >rustposix::interface::file::Emu..</text>
</g>
<g >
<title>exc_page_fault (745,191,206 samples, 8.85%)</title><rect x="344.6" y="453" width="104.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="347.58" y="463.5" >exc_page_fault</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (6,459,266 samples, 0.08%)</title><rect x="1189.1" y="453" width="0.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1192.06" y="463.5" ></text>
</g>
<g >
<title>walk_pgd_range (52,341,963 samples, 0.62%)</title><rect x="545.2" y="357" width="7.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="548.17" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (122,253,412 samples, 1.45%)</title><rect x="993.8" y="485" width="17.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="996.76" y="495.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (797,526,733 samples, 9.47%)</title><rect x="337.2" y="469" width="111.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="340.24" y="479.5" >asm_exc_page_..</text>
</g>
<g >
<title>alloc_pages (222,393,376 samples, 2.64%)</title><rect x="498.5" y="293" width="31.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="501.52" y="303.5" >al..</text>
</g>
<g >
<title>do_mas_munmap (104,599,672 samples, 1.24%)</title><rect x="194.8" y="389" width="14.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="197.84" y="399.5" ></text>
</g>
<g >
<title>kthread_blkcg (725,890,193 samples, 8.62%)</title><rect x="604.0" y="293" width="101.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="607.02" y="303.5" >kthread_blkcg</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (567,989,270 samples, 6.74%)</title><rect x="100.6" y="501" width="79.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="103.59" y="511.5" >[ld-linux..</text>
</g>
<g >
<title>ext4_get_reserved_space (52,331,701 samples, 0.62%)</title><rect x="411.1" y="245" width="7.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="414.13" y="255.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (52,324,448 samples, 0.62%)</title><rect x="418.5" y="261" width="7.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="421.46" y="271.5" ></text>
</g>
<g >
<title>ttwu_do_activate (276,856,861 samples, 3.29%)</title><rect x="1112.3" y="501" width="38.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1115.27" y="511.5" >ttw..</text>
</g>
<g >
<title>__alloc_pages (222,393,376 samples, 2.64%)</title><rect x="498.5" y="277" width="31.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="501.52" y="287.5" >__..</text>
</g>
<g >
<title>dentry_unlink_inode (418,428,366 samples, 4.97%)</title><rect x="238.8" y="277" width="58.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="241.79" y="287.5" >dentry..</text>
</g>
<g >
<title>__munmap (104,599,672 samples, 1.24%)</title><rect x="194.8" y="469" width="14.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="197.84" y="479.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (52,331,701 samples, 0.62%)</title><rect x="411.1" y="261" width="7.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="414.13" y="271.5" ></text>
</g>
<g >
<title>try_charge_memcg (105,264,395 samples, 1.25%)</title><rect x="483.8" y="261" width="14.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="486.77" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (52,355,089 samples, 0.62%)</title><rect x="312.3" y="469" width="7.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="315.27" y="479.5" ></text>
</g>
<g >
<title>madvise_vma_behavior (738,806,160 samples, 8.77%)</title><rect x="449.0" y="405" width="103.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="451.99" y="415.5" >madvise_vma_..</text>
</g>
<g >
<title>filemap_release_folio (209,234,293 samples, 2.48%)</title><rect x="268.1" y="133" width="29.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="271.10" y="143.5" >fi..</text>
</g>
<g >
<title>ext4_dirty_folio (104,599,672 samples, 1.24%)</title><rect x="194.8" y="229" width="14.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="197.84" y="239.5" ></text>
</g>
<g >
<title>load_elf_binary (725,890,193 samples, 8.62%)</title><rect x="604.0" y="485" width="101.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="607.02" y="495.5" >load_elf_bin..</text>
</g>
<g >
<title>load_balance (122,253,412 samples, 1.45%)</title><rect x="993.8" y="389" width="17.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="996.76" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (745,191,206 samples, 8.85%)</title><rect x="344.6" y="421" width="104.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="347.58" y="431.5" >handle_mm_fa..</text>
</g>
<g >
<title>exec_binprm (591,608,790 samples, 7.02%)</title><rect x="10.0" y="517" width="82.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >exec_binprm</text>
</g>
<g >
<title>sleep (3,456,229,204 samples, 41.04%)</title><rect x="705.7" y="629" width="484.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="708.72" y="639.5" >sleep</text>
</g>
<g >
<title>block_page_mkwrite (474,897,544 samples, 5.64%)</title><rect x="366.6" y="325" width="66.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="369.58" y="335.5" >block_p..</text>
</g>
<g >
<title>do_anonymous_page (725,890,193 samples, 8.62%)</title><rect x="604.0" y="341" width="101.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="607.02" y="351.5" >do_anonymous..</text>
</g>
<g >
<title>mas_store_prealloc (53,266,714 samples, 0.63%)</title><rect x="552.5" y="373" width="7.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="555.51" y="383.5" ></text>
</g>
<g >
<title>exec_mmap (591,608,790 samples, 7.02%)</title><rect x="10.0" y="453" width="82.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >exec_mmap</text>
</g>
<g >
<title>handle_mm_fault (725,890,193 samples, 8.62%)</title><rect x="604.0" y="389" width="101.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="607.02" y="399.5" >handle_mm_fa..</text>
</g>
<g >
<title>blk_cgroup_congested (725,890,193 samples, 8.62%)</title><rect x="604.0" y="309" width="101.7" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="607.02" y="319.5" >blk_cgroup_c..</text>
</g>
<g >
<title>__x64_sys_unlink (418,428,366 samples, 4.97%)</title><rect x="238.8" y="405" width="58.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="241.79" y="415.5" >__x64_..</text>
</g>
<g >
<title>generic_fadvise (686,464,197 samples, 8.15%)</title><rect x="449.0" y="373" width="96.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="451.99" y="383.5" >generic_fad..</text>
</g>
<g >
<title>run_rebalance_domains (355,213,980 samples, 4.22%)</title><rect x="895.1" y="533" width="49.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="898.09" y="543.5" >run_r..</text>
</g>
<g >
<title>x86_64_start_kernel (7,060,054 samples, 0.08%)</title><rect x="1189.0" y="597" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.01" y="607.5" ></text>
</g>
<g >
<title>ext4_page_mkwrite (474,897,544 samples, 5.64%)</title><rect x="366.6" y="341" width="66.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="369.58" y="351.5" >ext4_pa..</text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (54,928,363 samples, 0.65%)</title><rect x="92.9" y="597" width="7.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="95.89" y="607.5" ></text>
</g>
<g >
<title>do_user_addr_fault (745,191,206 samples, 8.85%)</title><rect x="344.6" y="437" width="104.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="347.58" y="447.5" >do_user_addr..</text>
</g>
<g >
<title>dispatcher (418,428,366 samples, 4.97%)</title><rect x="238.8" y="533" width="58.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="241.79" y="543.5" >dispat..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (567,989,270 samples, 6.74%)</title><rect x="100.6" y="597" width="79.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="103.59" y="607.5" >[ld-linux..</text>
</g>
<g >
<title>perf-exec (591,608,790 samples, 7.02%)</title><rect x="10.0" y="629" width="82.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >perf-exec</text>
</g>
<g >
<title>handle_pte_fault (725,890,193 samples, 8.62%)</title><rect x="604.0" y="357" width="101.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="607.02" y="367.5" >handle_pte_f..</text>
</g>
<g >
<title>walk_page_range (52,341,963 samples, 0.62%)</title><rect x="545.2" y="389" width="7.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="548.17" y="399.5" ></text>
</g>
<g >
<title>__block_write_begin_int (474,897,544 samples, 5.64%)</title><rect x="366.6" y="309" width="66.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="369.58" y="319.5" >__block..</text>
</g>
<g >
<title>vma_merge (53,266,714 samples, 0.63%)</title><rect x="552.5" y="421" width="7.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="555.51" y="431.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (355,213,980 samples, 4.22%)</title><rect x="895.1" y="581" width="49.8" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="898.09" y="591.5" >smpbo..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (52,355,089 samples, 0.62%)</title><rect x="312.3" y="421" width="7.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="315.27" y="431.5" ></text>
</g>
<g >
<title>vma_mas_store (53,266,714 samples, 0.63%)</title><rect x="552.5" y="389" width="7.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="555.51" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (725,890,193 samples, 8.62%)</title><rect x="604.0" y="373" width="101.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="607.02" y="383.5" >__handle_mm_..</text>
</g>
<g >
<title>flush_smp_call_function_queue (276,856,861 samples, 3.29%)</title><rect x="1112.3" y="549" width="38.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1115.27" y="559.5" >flu..</text>
</g>
<g >
<title>begin_new_exec (591,608,790 samples, 7.02%)</title><rect x="10.0" y="469" width="82.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >begin_new..</text>
</g>
<g >
<title>__switch_to_asm (120,839,789 samples, 1.43%)</title><rect x="878.2" y="613" width="16.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="881.16" y="623.5" ></text>
</g>
<g >
<title>rmqueue_bulk (170,020,959 samples, 2.02%)</title><rect x="505.9" y="229" width="23.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="508.86" y="239.5" >r..</text>
</g>
<g >
<title>create_page_buffers (157,015,871 samples, 1.86%)</title><rect x="373.9" y="293" width="22.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="376.92" y="303.5" >c..</text>
</g>
<g >
<title>evict (418,428,366 samples, 4.97%)</title><rect x="238.8" y="245" width="58.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="241.79" y="255.5" >evict</text>
</g>
</g>
</svg>
