<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="742.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="725" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="725" > </text>
<g id="frames">
<g >
<title>kmem_cache_alloc (103,371,859 samples, 0.96%)</title><rect x="302.4" y="277" width="11.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="305.42" y="287.5" ></text>
</g>
<g >
<title>_start (485,679,815 samples, 4.49%)</title><rect x="10.4" y="661" width="53.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.38" y="671.5" >_start</text>
</g>
<g >
<title>NaClSysRead (261,330,037 samples, 2.42%)</title><rect x="153.6" y="613" width="28.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="156.57" y="623.5" >Na..</text>
</g>
<g >
<title>setlocale (485,679,815 samples, 4.49%)</title><rect x="10.4" y="581" width="53.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.38" y="591.5" >setlo..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (41,297,465 samples, 0.38%)</title><rect x="351.7" y="245" width="4.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="354.71" y="255.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (7,900,106 samples, 0.07%)</title><rect x="68.2" y="213" width="0.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="71.19" y="223.5" ></text>
</g>
<g >
<title>do_idle (2,608,053 samples, 0.02%)</title><rect x="931.4" y="565" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="934.42" y="575.5" ></text>
</g>
<g >
<title>[unknown] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="661" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="71.19" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::unlink_syscall (417,741,355 samples, 3.86%)</title><rect x="182.1" y="565" width="45.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="185.07" y="575.5" >rust..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::close (156,870,649 samples, 1.45%)</title><rect x="136.5" y="533" width="17.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="139.46" y="543.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (1,085,647,232 samples, 10.03%)</title><rect x="227.6" y="581" width="118.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="230.63" y="591.5" >rustposix::int..</text>
</g>
<g >
<title>grep (3,522,256 samples, 0.03%)</title><rect x="10.0" y="677" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (41,297,465 samples, 0.38%)</title><rect x="351.7" y="101" width="4.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="354.71" y="111.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (41,297,465 samples, 0.38%)</title><rect x="351.7" y="293" width="4.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="354.71" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,462,348 samples, 0.03%)</title><rect x="67.8" y="517" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.81" y="527.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (41,297,465 samples, 0.38%)</title><rect x="351.7" y="325" width="4.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="354.71" y="335.5" ></text>
</g>
<g >
<title>alloc_pages (52,123,329 samples, 0.48%)</title><rect x="268.4" y="277" width="5.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="271.42" y="287.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (292,595,658 samples, 2.70%)</title><rect x="1158.1" y="581" width="31.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1161.09" y="591.5" >fi..</text>
</g>
<g >
<title>__block_write_begin_int (517,158,419 samples, 4.78%)</title><rect x="279.8" y="357" width="56.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="282.80" y="367.5" >__blo..</text>
</g>
<g >
<title>dput (1,761,128 samples, 0.02%)</title><rect x="10.2" y="533" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.19" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (417,741,355 samples, 3.86%)</title><rect x="182.1" y="453" width="45.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="185.07" y="463.5" >__x6..</text>
</g>
<g >
<title>__mod_lruvec_page_state (51,811,389 samples, 0.48%)</title><rect x="216.3" y="69" width="5.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="219.28" y="79.5" ></text>
</g>
<g >
<title>filemap_release_folio (156,389,332 samples, 1.45%)</title><rect x="210.6" y="181" width="17.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="213.58" y="191.5" ></text>
</g>
<g >
<title>_compound_head (269,240,644 samples, 2.49%)</title><rect x="493.3" y="453" width="29.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="496.33" y="463.5" >_c..</text>
</g>
<g >
<title>[unknown] (3,522,256 samples, 0.03%)</title><rect x="10.0" y="661" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>__schedule (290,389,696 samples, 2.68%)</title><rect x="1126.4" y="565" width="31.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1129.42" y="575.5" >__..</text>
</g>
<g >
<title>create_page_buffers (260,104,700 samples, 2.40%)</title><rect x="285.3" y="341" width="28.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="288.33" y="351.5" >cr..</text>
</g>
<g >
<title>NaClSysBrk (561,116,897 samples, 5.19%)</title><rect x="75.3" y="613" width="61.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="78.27" y="623.5" >NaClSy..</text>
</g>
<g >
<title>try_to_free_buffers (104,085,277 samples, 0.96%)</title><rect x="216.3" y="133" width="11.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="219.28" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (41,297,465 samples, 0.38%)</title><rect x="351.7" y="165" width="4.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="354.71" y="175.5" ></text>
</g>
<g >
<title>NaClVmmapMakeSorted (561,116,897 samples, 5.19%)</title><rect x="75.3" y="581" width="61.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="78.27" y="591.5" >NaClVm..</text>
</g>
<g >
<title>getgrgid (7,900,106 samples, 0.07%)</title><rect x="68.2" y="597" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.19" y="607.5" ></text>
</g>
<g >
<title>evict (417,741,355 samples, 3.86%)</title><rect x="182.1" y="293" width="45.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="185.07" y="303.5" >evict</text>
</g>
<g >
<title>charge_memcg (102,792,729 samples, 0.95%)</title><rect x="250.1" y="261" width="11.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="253.05" y="271.5" ></text>
</g>
<g >
<title>sock_write_iter (685,775,706 samples, 6.34%)</title><rect x="1051.6" y="581" width="74.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1054.63" y="591.5" >sock_wri..</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (156,870,649 samples, 1.45%)</title><rect x="136.5" y="341" width="17.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="139.46" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (41,297,465 samples, 0.38%)</title><rect x="351.7" y="53" width="4.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.71" y="63.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (571,723,068 samples, 5.28%)</title><rect x="989.3" y="661" width="62.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="992.27" y="671.5" >asm_ex..</text>
</g>
<g >
<title>copy_p4d_range (269,369,340 samples, 2.49%)</title><rect x="493.3" y="501" width="29.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="496.32" y="511.5" >co..</text>
</g>
<g >
<title>NaClVmmapFindPageIter (561,116,897 samples, 5.19%)</title><rect x="75.3" y="597" width="61.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="78.27" y="607.5" >NaClVm..</text>
</g>
<g >
<title>mtree_range_walk (571,723,068 samples, 5.28%)</title><rect x="989.3" y="565" width="62.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="992.27" y="575.5" >mtree_..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,792,155 samples, 0.07%)</title><rect x="63.4" y="661" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="66.35" y="671.5" ></text>
</g>
<g >
<title>alloc_buffer_head (148,744,459 samples, 1.37%)</title><rect x="297.5" y="293" width="16.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="300.48" y="303.5" ></text>
</g>
<g >
<title>copy_page_range (269,369,340 samples, 2.49%)</title><rect x="493.3" y="517" width="29.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="496.32" y="527.5" >co..</text>
</g>
<g >
<title>[ls] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="645" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="71.19" y="655.5" ></text>
</g>
<g >
<title>kmem_cache_free (52,273,888 samples, 0.48%)</title><rect x="221.9" y="101" width="5.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="224.93" y="111.5" ></text>
</g>
<g >
<title>xas_find (52,304,534 samples, 0.48%)</title><rect x="199.2" y="213" width="5.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="202.19" y="223.5" ></text>
</g>
<g >
<title>__pagevec_release (156,911,555 samples, 1.45%)</title><rect x="182.1" y="229" width="17.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="185.07" y="239.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (261,330,037 samples, 2.42%)</title><rect x="153.6" y="549" width="28.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="156.57" y="559.5" >co..</text>
</g>
<g >
<title>path_openat (1,761,128 samples, 0.02%)</title><rect x="10.2" y="565" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="13.19" y="575.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (417,741,355 samples, 3.86%)</title><rect x="182.1" y="325" width="45.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="185.07" y="335.5" >dent..</text>
</g>
<g >
<title>release_pages (156,911,555 samples, 1.45%)</title><rect x="182.1" y="213" width="17.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="185.07" y="223.5" ></text>
</g>
<g >
<title>inet_sendmsg (685,775,706 samples, 6.34%)</title><rect x="1051.6" y="549" width="74.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1054.63" y="559.5" >inet_sen..</text>
</g>
<g >
<title>_dl_catch_exception (7,900,106 samples, 0.07%)</title><rect x="68.2" y="469" width="0.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="71.19" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::log_metadata (93,314,319 samples, 0.86%)</title><rect x="346.0" y="581" width="10.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="349.04" y="591.5" ></text>
</g>
<g >
<title>do_mmap (7,900,106 samples, 0.07%)</title><rect x="68.2" y="181" width="0.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="71.19" y="191.5" ></text>
</g>
<g >
<title>realloc (41,297,465 samples, 0.38%)</title><rect x="351.7" y="85" width="4.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="354.71" y="95.5" ></text>
</g>
<g >
<title>create_empty_buffers (200,377,279 samples, 1.85%)</title><rect x="291.8" y="325" width="21.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="294.84" y="335.5" >c..</text>
</g>
<g >
<title>[libc.so.6] (3,462,348 samples, 0.03%)</title><rect x="67.8" y="549" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.81" y="559.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (417,741,355 samples, 3.86%)</title><rect x="182.1" y="549" width="45.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="185.07" y="559.5" >rust..</text>
</g>
<g >
<title>NaClSysWriteDecoder (1,178,961,551 samples, 10.90%)</title><rect x="227.6" y="629" width="128.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="230.63" y="639.5" >NaClSysWriteDeco..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,921,131,075 samples, 17.76%)</title><rect x="721.9" y="549" width="209.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="724.90" y="559.5" >mwait_idle_with_hints.const..</text>
</g>
<g >
<title>__slab_free (52,273,888 samples, 0.48%)</title><rect x="221.9" y="85" width="5.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="224.93" y="95.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (47,101,468 samples, 0.44%)</title><rect x="413.1" y="453" width="5.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="416.06" y="463.5" ></text>
</g>
<g >
<title>do_filp_open (556,957,001 samples, 5.15%)</title><rect x="595.4" y="581" width="60.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="598.41" y="591.5" >do_fil..</text>
</g>
<g >
<title>__vm_munmap (47,101,468 samples, 0.44%)</title><rect x="413.1" y="517" width="5.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="416.06" y="527.5" ></text>
</g>
<g >
<title>do_filp_open (1,761,128 samples, 0.02%)</title><rect x="10.2" y="581" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="13.19" y="591.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (41,297,465 samples, 0.38%)</title><rect x="351.7" y="117" width="4.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="354.71" y="127.5" ></text>
</g>
<g >
<title>dup_mmap (269,369,340 samples, 2.49%)</title><rect x="493.3" y="533" width="29.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="496.32" y="543.5" >du..</text>
</g>
<g >
<title>qsort_r (561,116,897 samples, 5.19%)</title><rect x="75.3" y="565" width="61.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="78.27" y="575.5" >qsort_r</text>
</g>
<g >
<title>iput (417,741,355 samples, 3.86%)</title><rect x="182.1" y="309" width="45.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="185.07" y="319.5" >iput</text>
</g>
<g >
<title>dequeue_task (666,740,408 samples, 6.16%)</title><rect x="522.7" y="517" width="72.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="525.69" y="527.5" >dequeue_..</text>
</g>
<g >
<title>copy_pmd_range (269,369,340 samples, 2.49%)</title><rect x="493.3" y="485" width="29.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="496.32" y="495.5" >co..</text>
</g>
<g >
<title>swapper (2,368,296,468 samples, 21.89%)</title><rect x="931.7" y="677" width="258.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="934.71" y="687.5" >swapper</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (41,297,465 samples, 0.38%)</title><rect x="351.7" y="517" width="4.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="354.71" y="527.5" ></text>
</g>
<g >
<title>ext4_invalidate_folio (208,525,266 samples, 1.93%)</title><rect x="204.9" y="213" width="22.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="207.89" y="223.5" >e..</text>
</g>
<g >
<title>exc_page_fault (1,033,421,353 samples, 9.55%)</title><rect x="227.6" y="501" width="112.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="230.63" y="511.5" >exc_page_fault</text>
</g>
<g >
<title>__filemap_add_folio (168,444,806 samples, 1.56%)</title><rect x="250.1" y="293" width="18.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="253.05" y="303.5" ></text>
</g>
<g >
<title>ondemand_readahead (101,740,314 samples, 0.94%)</title><rect x="233.2" y="341" width="11.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="236.25" y="351.5" ></text>
</g>
<g >
<title>free_buffer_head (52,273,888 samples, 0.48%)</title><rect x="221.9" y="117" width="5.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="224.93" y="127.5" ></text>
</g>
<g >
<title>__nss_next2 (7,900,106 samples, 0.07%)</title><rect x="68.2" y="565" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="71.19" y="575.5" ></text>
</g>
<g >
<title>terminate_walk (1,761,128 samples, 0.02%)</title><rect x="10.2" y="549" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="13.19" y="559.5" ></text>
</g>
<g >
<title>ext4_release_folio (156,389,332 samples, 1.45%)</title><rect x="210.6" y="165" width="17.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="213.58" y="175.5" ></text>
</g>
<g >
<title>mod_lruvec_page_state (51,811,389 samples, 0.48%)</title><rect x="216.3" y="85" width="5.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="219.28" y="95.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="437" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="71.19" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (47,101,468 samples, 0.44%)</title><rect x="413.1" y="549" width="5.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="416.06" y="559.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (41,297,465 samples, 0.38%)</title><rect x="351.7" y="277" width="4.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="354.71" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (52,123,329 samples, 0.48%)</title><rect x="268.4" y="245" width="5.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="271.42" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,033,421,353 samples, 9.55%)</title><rect x="227.6" y="485" width="112.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="230.63" y="495.5" >do_user_addr_..</text>
</g>
<g >
<title>[libc.so.6] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="517" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="71.19" y="527.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,033,421,353 samples, 9.55%)</title><rect x="227.6" y="437" width="112.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="230.63" y="447.5" >handle_pte_fa..</text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (41,297,465 samples, 0.38%)</title><rect x="351.7" y="421" width="4.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="354.71" y="431.5" ></text>
</g>
<g >
<title>page_cache_sync_ra (101,740,314 samples, 0.94%)</title><rect x="233.2" y="357" width="11.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="236.25" y="367.5" ></text>
</g>
<g >
<title>__mod_node_page_state (51,811,389 samples, 0.48%)</title><rect x="216.3" y="37" width="5.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="219.28" y="47.5" ></text>
</g>
<g >
<title>do_sync_mmap_readahead (101,740,314 samples, 0.94%)</title><rect x="233.2" y="373" width="11.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="236.25" y="383.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (261,330,037 samples, 2.42%)</title><rect x="153.6" y="629" width="28.5" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="156.57" y="639.5" >Na..</text>
</g>
<g >
<title>__libc_start_main (485,679,815 samples, 4.49%)</title><rect x="10.4" y="645" width="53.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.38" y="655.5" >__lib..</text>
</g>
<g >
<title>set_root (556,957,001 samples, 5.15%)</title><rect x="595.4" y="517" width="60.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="598.41" y="527.5" >set_root</text>
</g>
<g >
<title>start_kernel (2,608,053 samples, 0.02%)</title><rect x="931.4" y="629" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="934.42" y="639.5" ></text>
</g>
<g >
<title>dispatcher (156,870,649 samples, 1.45%)</title><rect x="136.5" y="581" width="17.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="139.46" y="591.5" ></text>
</g>
<g >
<title>_dl_catch_exception (7,900,106 samples, 0.07%)</title><rect x="68.2" y="389" width="0.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="71.19" y="399.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,792,155 samples, 0.07%)</title><rect x="63.4" y="629" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="66.35" y="639.5" ></text>
</g>
<g >
<title>setlocale (3,462,348 samples, 0.03%)</title><rect x="67.8" y="597" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="70.81" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_futex (666,740,408 samples, 6.16%)</title><rect x="522.7" y="613" width="72.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="525.69" y="623.5" >__x64_sy..</text>
</g>
<g >
<title>NaClSysClose (156,870,649 samples, 1.45%)</title><rect x="136.5" y="613" width="17.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="139.46" y="623.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (47,101,468 samples, 0.44%)</title><rect x="413.1" y="645" width="5.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="416.06" y="655.5" ></text>
</g>
<g >
<title>nd_jump_root (556,957,001 samples, 5.15%)</title><rect x="595.4" y="533" width="60.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="598.41" y="543.5" >nd_jum..</text>
</g>
<g >
<title>[libc.so.6] (485,679,815 samples, 4.49%)</title><rect x="10.4" y="453" width="53.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.38" y="463.5" >[libc..</text>
</g>
<g >
<title>do_unlinkat (417,741,355 samples, 3.86%)</title><rect x="182.1" y="437" width="45.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="185.07" y="447.5" >do_u..</text>
</g>
<g >
<title>[libc.so.6] (485,679,815 samples, 4.49%)</title><rect x="10.4" y="533" width="53.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.38" y="543.5" >[libc..</text>
</g>
<g >
<title>[libc.so.6] (485,679,815 samples, 4.49%)</title><rect x="10.4" y="565" width="53.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.38" y="575.5" >[libc..</text>
</g>
<g >
<title>__folio_cancel_dirty (51,811,389 samples, 0.48%)</title><rect x="216.3" y="117" width="5.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="219.28" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (41,297,465 samples, 0.38%)</title><rect x="351.7" y="69" width="4.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.71" y="79.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (51,468,358 samples, 0.48%)</title><rect x="324.9" y="309" width="5.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="327.95" y="319.5" ></text>
</g>
<g >
<title>lind (485,679,815 samples, 4.49%)</title><rect x="10.4" y="677" width="53.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="13.38" y="687.5" >lind</text>
</g>
<g >
<title>[libc.so.6] (485,679,815 samples, 4.49%)</title><rect x="10.4" y="469" width="53.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.38" y="479.5" >[libc..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (261,330,037 samples, 2.42%)</title><rect x="153.6" y="565" width="28.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="156.57" y="575.5" >co..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (41,297,465 samples, 0.38%)</title><rect x="351.7" y="197" width="4.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="354.71" y="207.5" ></text>
</g>
<g >
<title>exc_page_fault (571,723,068 samples, 5.28%)</title><rect x="989.3" y="645" width="62.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="992.27" y="655.5" >exc_pa..</text>
</g>
<g >
<title>rcu_gp_kthread (290,389,696 samples, 2.68%)</title><rect x="1126.4" y="629" width="31.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1129.42" y="639.5" >rc..</text>
</g>
<g >
<title>find_lock_entries (52,304,534 samples, 0.48%)</title><rect x="199.2" y="229" width="5.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="202.19" y="239.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (47,101,468 samples, 0.44%)</title><rect x="413.1" y="629" width="5.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="416.06" y="639.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,033,421,353 samples, 9.55%)</title><rect x="227.6" y="517" width="112.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="230.63" y="527.5" >asm_exc_page_..</text>
</g>
<g >
<title>schedule_timeout (290,389,696 samples, 2.68%)</title><rect x="1126.4" y="597" width="31.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1129.42" y="607.5" >sc..</text>
</g>
<g >
<title>path_init (556,957,001 samples, 5.15%)</title><rect x="595.4" y="549" width="60.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="598.41" y="559.5" >path_i..</text>
</g>
<g >
<title>folio_mark_dirty (52,303,657 samples, 0.48%)</title><rect x="142.2" y="293" width="5.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="145.16" y="303.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (261,330,037 samples, 2.42%)</title><rect x="153.6" y="581" width="28.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="156.57" y="591.5" >ru..</text>
</g>
<g >
<title>[sel_ldr] (2,632,995,292 samples, 24.34%)</title><rect x="69.1" y="661" width="287.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="72.05" y="671.5" >[sel_ldr]</text>
</g>
<g >
<title>cpuidle_enter (1,921,131,075 samples, 17.76%)</title><rect x="721.9" y="581" width="209.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="724.90" y="591.5" >cpuidle_enter</text>
</g>
<g >
<title>rest_init (2,608,053 samples, 0.02%)</title><rect x="931.4" y="597" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="934.42" y="607.5" ></text>
</g>
<g >
<title>NaClSysCloseDecoder (156,870,649 samples, 1.45%)</title><rect x="136.5" y="629" width="17.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="139.46" y="639.5" ></text>
</g>
<g >
<title>dispatcher (417,741,355 samples, 3.86%)</title><rect x="182.1" y="581" width="45.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="185.07" y="591.5" >disp..</text>
</g>
<g >
<title>vfs_write (685,775,706 samples, 6.34%)</title><rect x="1051.6" y="597" width="74.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1054.63" y="607.5" >vfs_write</text>
</g>
<g >
<title>filemap_alloc_folio (51,547,538 samples, 0.48%)</title><rect x="238.7" y="293" width="5.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="241.72" y="303.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u64 (41,297,465 samples, 0.38%)</title><rect x="351.7" y="357" width="4.5" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="354.71" y="367.5" ></text>
</g>
<g >
<title>unlink (417,741,355 samples, 3.86%)</title><rect x="182.1" y="501" width="45.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="185.07" y="511.5" >unlink</text>
</g>
<g >
<title>perf_event_mmap (7,900,106 samples, 0.07%)</title><rect x="68.2" y="149" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="71.19" y="159.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,792,155 samples, 0.07%)</title><rect x="63.4" y="565" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="66.35" y="575.5" ></text>
</g>
<g >
<title>block_page_mkwrite (569,345,303 samples, 5.26%)</title><rect x="274.1" y="373" width="62.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="277.11" y="383.5" >block_..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (41,297,465 samples, 0.38%)</title><rect x="351.7" y="213" width="4.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="354.71" y="223.5" ></text>
</g>
<g >
<title>unmap_region (47,101,468 samples, 0.44%)</title><rect x="413.1" y="469" width="5.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="416.06" y="479.5" ></text>
</g>
<g >
<title>perf_iterate_sb (7,900,106 samples, 0.07%)</title><rect x="68.2" y="117" width="0.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="71.19" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_write (685,775,706 samples, 6.34%)</title><rect x="1051.6" y="629" width="74.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1054.63" y="639.5" >__x64_sy..</text>
</g>
<g >
<title>sync_regs (52,225,879 samples, 0.48%)</title><rect x="340.3" y="517" width="5.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="343.34" y="527.5" ></text>
</g>
<g >
<title>folio_account_cleaned (51,811,389 samples, 0.48%)</title><rect x="216.3" y="101" width="5.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="219.28" y="111.5" ></text>
</g>
<g >
<title>std::fs::remove_file (417,741,355 samples, 3.86%)</title><rect x="182.1" y="533" width="45.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="185.07" y="543.5" >std:..</text>
</g>
<g >
<title>__vm_munmap (156,870,649 samples, 1.45%)</title><rect x="136.5" y="453" width="17.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="139.46" y="463.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (7,900,106 samples, 0.07%)</title><rect x="68.2" y="101" width="0.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="71.19" y="111.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1,085,647,232 samples, 10.03%)</title><rect x="227.6" y="549" width="118.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="230.63" y="559.5" >core::intrinsi..</text>
</g>
<g >
<title>page_cache_ra_order (101,740,314 samples, 0.94%)</title><rect x="233.2" y="325" width="11.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="236.25" y="335.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (47,101,468 samples, 0.44%)</title><rect x="413.1" y="485" width="5.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="416.06" y="495.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (101,740,314 samples, 0.94%)</title><rect x="233.2" y="309" width="11.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="236.25" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,731,174 samples, 0.02%)</title><rect x="67.8" y="469" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.81" y="479.5" ></text>
</g>
<g >
<title>free_unref_page_list (104,627,006 samples, 0.97%)</title><rect x="187.8" y="197" width="11.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="190.78" y="207.5" ></text>
</g>
<g >
<title>folio_alloc (52,123,329 samples, 0.48%)</title><rect x="268.4" y="293" width="5.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="271.42" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (41,297,465 samples, 0.38%)</title><rect x="351.7" y="181" width="4.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="354.71" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="501" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="71.19" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,493,066,749 samples, 13.80%)</title><rect x="493.3" y="629" width="162.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="496.32" y="639.5" >do_syscall_64</text>
</g>
<g >
<title>__tsearch (1,731,174 samples, 0.02%)</title><rect x="68.0" y="485" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="71.00" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (36,571,007 samples, 0.34%)</title><rect x="64.2" y="629" width="4.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.20" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,462,348 samples, 0.03%)</title><rect x="67.8" y="501" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.81" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (59,727,421 samples, 0.55%)</title><rect x="285.3" y="325" width="6.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="288.33" y="335.5" ></text>
</g>
<g >
<title>lind_close (156,870,649 samples, 1.45%)</title><rect x="136.5" y="597" width="17.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="139.46" y="607.5" ></text>
</g>
<g >
<title>set_default_locale (485,679,815 samples, 4.49%)</title><rect x="10.4" y="597" width="53.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="13.38" y="607.5" >set_d..</text>
</g>
<g >
<title>__x64_sys_mmap (7,900,106 samples, 0.07%)</title><rect x="68.2" y="229" width="0.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="71.19" y="239.5" ></text>
</g>
<g >
<title>find_vma (571,723,068 samples, 5.28%)</title><rect x="989.3" y="597" width="62.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="992.27" y="607.5" >find_vma</text>
</g>
<g >
<title>__do_fault (426,143,549 samples, 3.94%)</title><rect x="227.6" y="405" width="46.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="230.63" y="415.5" >__do..</text>
</g>
<g >
<title>do_syscall_64 (685,775,706 samples, 6.34%)</title><rect x="1051.6" y="645" width="74.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1054.63" y="655.5" >do_sysca..</text>
</g>
<g >
<title>__schedule (292,595,658 samples, 2.70%)</title><rect x="1158.1" y="597" width="31.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1161.09" y="607.5" >__..</text>
</g>
<g >
<title>filemap_add_folio (168,444,806 samples, 1.56%)</title><rect x="250.1" y="309" width="18.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="253.05" y="319.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (2,608,053 samples, 0.02%)</title><rect x="931.4" y="645" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="934.42" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (685,775,706 samples, 6.34%)</title><rect x="1051.6" y="661" width="74.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1054.63" y="671.5" >entry_SY..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (41,297,465 samples, 0.38%)</title><rect x="351.7" y="229" width="4.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="354.71" y="239.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2,632,995,292 samples, 24.34%)</title><rect x="69.1" y="645" width="287.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="72.05" y="655.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>_raw_write_lock (51,896,112 samples, 0.48%)</title><rect x="319.3" y="309" width="5.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="322.29" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,033,421,353 samples, 9.55%)</title><rect x="227.6" y="469" width="112.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="230.63" y="479.5" >handle_mm_fault</text>
</g>
<g >
<title>truncate_cleanup_folio (208,525,266 samples, 1.93%)</title><rect x="204.9" y="229" width="22.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="207.89" y="239.5" >t..</text>
</g>
<g >
<title>dput (417,741,355 samples, 3.86%)</title><rect x="182.1" y="357" width="45.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="185.07" y="367.5" >dput</text>
</g>
<g >
<title>unlock_page_memcg (52,296,679 samples, 0.48%)</title><rect x="147.9" y="293" width="5.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="150.87" y="303.5" ></text>
</g>
<g >
<title>__do_sys_clone (269,369,340 samples, 2.49%)</title><rect x="493.3" y="597" width="29.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="496.32" y="607.5" >__..</text>
</g>
<g >
<title>schedule (666,740,408 samples, 6.16%)</title><rect x="522.7" y="549" width="72.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="525.69" y="559.5" >schedule</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (261,330,037 samples, 2.42%)</title><rect x="153.6" y="597" width="28.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="156.57" y="607.5" >ru..</text>
</g>
<g >
<title>[ls] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="629" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="71.19" y="639.5" ></text>
</g>
<g >
<title>up_read (51,762,648 samples, 0.48%)</title><rect x="330.6" y="309" width="5.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="333.56" y="319.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (45,372,600 samples, 0.42%)</title><rect x="297.5" y="277" width="4.9" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="300.48" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (51,547,538 samples, 0.48%)</title><rect x="238.7" y="229" width="5.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="241.72" y="239.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="405" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="71.19" y="415.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="325" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="71.19" y="335.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,085,647,232 samples, 10.03%)</title><rect x="227.6" y="565" width="118.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="230.63" y="575.5" >core::slice::&lt;..</text>
</g>
<g >
<title>do_syscall_64 (156,870,649 samples, 1.45%)</title><rect x="136.5" y="485" width="17.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="139.46" y="495.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (417,741,355 samples, 3.86%)</title><rect x="182.1" y="261" width="45.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="185.07" y="271.5" >trun..</text>
</g>
<g >
<title>kthread (582,985,354 samples, 5.39%)</title><rect x="1126.4" y="645" width="63.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1129.42" y="655.5" >kthread</text>
</g>
<g >
<title>_dl_catch_error (7,900,106 samples, 0.07%)</title><rect x="68.2" y="485" width="0.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="71.19" y="495.5" ></text>
</g>
<g >
<title>unmap_region (156,870,649 samples, 1.45%)</title><rect x="136.5" y="405" width="17.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="139.46" y="415.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="277" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="71.19" y="287.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (56,974,803 samples, 0.53%)</title><rect x="69.1" y="629" width="6.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="72.05" y="639.5" ></text>
</g>
<g >
<title>[ls] (36,571,007 samples, 0.34%)</title><rect x="64.2" y="613" width="4.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="67.20" y="623.5" ></text>
</g>
<g >
<title>[ls] (36,571,007 samples, 0.34%)</title><rect x="64.2" y="661" width="4.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="67.20" y="671.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_some (41,297,465 samples, 0.38%)</title><rect x="351.7" y="501" width="4.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="354.71" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (41,297,465 samples, 0.38%)</title><rect x="351.7" y="133" width="4.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="354.71" y="143.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,033,421,353 samples, 9.55%)</title><rect x="227.6" y="453" width="112.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="230.63" y="463.5" >__handle_mm_f..</text>
</g>
<g >
<title>get_obj_cgroup_from_current (51,507,504 samples, 0.48%)</title><rect x="308.1" y="261" width="5.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="311.08" y="271.5" ></text>
</g>
<g >
<title>tcp_sendmsg (685,775,706 samples, 6.34%)</title><rect x="1051.6" y="533" width="74.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1054.63" y="543.5" >tcp_send..</text>
</g>
<g >
<title>sock_sendmsg (685,775,706 samples, 6.34%)</title><rect x="1051.6" y="565" width="74.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1054.63" y="575.5" >sock_sen..</text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (155,127,118 samples, 1.43%)</title><rect x="319.3" y="325" width="16.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="322.29" y="335.5" ></text>
</g>
<g >
<title>do_mas_munmap (156,870,649 samples, 1.45%)</title><rect x="136.5" y="437" width="17.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="139.46" y="447.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,792,155 samples, 0.07%)</title><rect x="63.4" y="533" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="66.35" y="543.5" ></text>
</g>
<g >
<title>folio_add_lru (50,192,776 samples, 0.46%)</title><rect x="233.2" y="277" width="5.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="236.25" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (417,741,355 samples, 3.86%)</title><rect x="182.1" y="469" width="45.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="185.07" y="479.5" >do_s..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="309" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="71.19" y="319.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,523,974,876 samples, 23.33%)</title><rect x="656.2" y="629" width="275.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="659.15" y="639.5" >cpu_startup_entry</text>
</g>
<g >
<title>vm_mmap_pgoff (7,900,106 samples, 0.07%)</title><rect x="68.2" y="197" width="0.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="71.19" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (417,741,355 samples, 3.86%)</title><rect x="182.1" y="485" width="45.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="185.07" y="495.5" >entr..</text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (41,297,465 samples, 0.38%)</title><rect x="351.7" y="453" width="4.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="354.71" y="463.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (156,870,649 samples, 1.45%)</title><rect x="136.5" y="421" width="17.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="139.46" y="431.5" ></text>
</g>
<g >
<title>all (10,819,517,104 samples, 100%)</title><rect x="10.0" y="693" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>__rcu_read_lock (65,652,077 samples, 0.61%)</title><rect x="261.3" y="277" width="7.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="264.26" y="287.5" ></text>
</g>
<g >
<title>[ls] (33,108,659 samples, 0.31%)</title><rect x="64.2" y="597" width="3.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="67.20" y="607.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (52,309,678 samples, 0.48%)</title><rect x="193.5" y="165" width="5.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="196.48" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (485,679,815 samples, 4.49%)</title><rect x="10.4" y="629" width="53.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.38" y="639.5" >[libc..</text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (52,186,884 samples, 0.48%)</title><rect x="274.1" y="357" width="5.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="277.11" y="367.5" ></text>
</g>
<g >
<title>rcu_gp_fqs_loop (290,389,696 samples, 2.68%)</title><rect x="1126.4" y="613" width="31.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1129.42" y="623.5" >rc..</text>
</g>
<g >
<title>do_syscall_64 (1,761,128 samples, 0.02%)</title><rect x="10.2" y="629" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.19" y="639.5" ></text>
</g>
<g >
<title>do_fault (1,033,421,353 samples, 9.55%)</title><rect x="227.6" y="421" width="112.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="230.63" y="431.5" >do_fault</text>
</g>
<g >
<title>NaClSysUnlinkDecoder (417,741,355 samples, 3.86%)</title><rect x="182.1" y="629" width="45.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="185.07" y="639.5" >NaCl..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (47,101,468 samples, 0.44%)</title><rect x="413.1" y="581" width="5.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="416.06" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,900,106 samples, 0.07%)</title><rect x="68.2" y="261" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="71.19" y="271.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (685,775,706 samples, 6.34%)</title><rect x="1051.6" y="517" width="74.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1054.63" y="527.5" >tcp_send..</text>
</g>
<g >
<title>alloc_page_buffers (148,744,459 samples, 1.37%)</title><rect x="297.5" y="309" width="16.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="300.48" y="319.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (47,101,468 samples, 0.44%)</title><rect x="413.1" y="613" width="5.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="416.06" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (41,297,465 samples, 0.38%)</title><rect x="351.7" y="469" width="4.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="354.71" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,462,348 samples, 0.03%)</title><rect x="67.8" y="533" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.81" y="543.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,921,131,075 samples, 17.76%)</title><rect x="721.9" y="597" width="209.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="724.90" y="607.5" >cpuidle_idle_call</text>
</g>
<g >
<title>[libc.so.6] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="549" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="71.19" y="559.5" ></text>
</g>
<g >
<title>copy_process (269,369,340 samples, 2.49%)</title><rect x="493.3" y="565" width="29.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="496.32" y="575.5" >co..</text>
</g>
<g >
<title>filemap_alloc_folio (52,123,329 samples, 0.48%)</title><rect x="268.4" y="309" width="5.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="271.42" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (47,101,468 samples, 0.44%)</title><rect x="413.1" y="533" width="5.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="416.06" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_clone (269,369,340 samples, 2.49%)</title><rect x="493.3" y="613" width="29.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="496.32" y="623.5" >__..</text>
</g>
<g >
<title>__schedule (666,740,408 samples, 6.16%)</title><rect x="522.7" y="533" width="72.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="525.69" y="543.5" >__schedule</text>
</g>
<g >
<title>__x64_sys_munmap (156,870,649 samples, 1.45%)</title><rect x="136.5" y="469" width="17.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="139.46" y="479.5" ></text>
</g>
<g >
<title>path_openat (556,957,001 samples, 5.15%)</title><rect x="595.4" y="565" width="60.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="598.41" y="575.5" >path_o..</text>
</g>
<g >
<title>block_dirty_folio (52,303,657 samples, 0.48%)</title><rect x="142.2" y="261" width="5.7" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="145.16" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (52,357,227 samples, 0.48%)</title><rect x="244.3" y="309" width="5.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="247.34" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_openat (556,957,001 samples, 5.15%)</title><rect x="595.4" y="613" width="60.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="598.41" y="623.5" >__x64_..</text>
</g>
<g >
<title>[ls] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="613" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="71.19" y="623.5" ></text>
</g>
<g >
<title>___slab_alloc (51,864,355 samples, 0.48%)</title><rect x="302.4" y="261" width="5.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="305.42" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,085,647,232 samples, 10.03%)</title><rect x="227.6" y="533" width="118.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="230.63" y="543.5" >[libc.so.6]</text>
</g>
<g >
<title>arch_call_rest_init (2,608,053 samples, 0.02%)</title><rect x="931.4" y="613" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="934.42" y="623.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,792,155 samples, 0.07%)</title><rect x="63.4" y="613" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="66.35" y="623.5" ></text>
</g>
<g >
<title>start_secondary (2,523,974,876 samples, 23.33%)</title><rect x="656.2" y="645" width="275.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="659.15" y="655.5" >start_secondary</text>
</g>
<g >
<title>record_times (290,389,696 samples, 2.68%)</title><rect x="1126.4" y="517" width="31.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1129.42" y="527.5" >re..</text>
</g>
<g >
<title>ksys_write (685,775,706 samples, 6.34%)</title><rect x="1051.6" y="613" width="74.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1054.63" y="623.5" >ksys_write</text>
</g>
<g >
<title>psi_group_change (290,389,696 samples, 2.68%)</title><rect x="1126.4" y="533" width="31.7" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1129.42" y="543.5" >ps..</text>
</g>
<g >
<title>ret_from_fork (582,985,354 samples, 5.39%)</title><rect x="1126.4" y="661" width="63.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1129.42" y="671.5" >ret_fr..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (41,297,465 samples, 0.38%)</title><rect x="351.7" y="389" width="4.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="354.71" y="399.5" ></text>
</g>
<g >
<title>_dl_catch_exception (7,900,106 samples, 0.07%)</title><rect x="68.2" y="421" width="0.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="71.19" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,462,348 samples, 0.03%)</title><rect x="67.8" y="565" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.81" y="575.5" ></text>
</g>
<g >
<title>do_mas_munmap (47,101,468 samples, 0.44%)</title><rect x="413.1" y="501" width="5.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="416.06" y="511.5" ></text>
</g>
<g >
<title>copy_pte_range (269,240,644 samples, 2.49%)</title><rect x="493.3" y="469" width="29.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="496.33" y="479.5" >co..</text>
</g>
<g >
<title>ext4_evict_inode (417,741,355 samples, 3.86%)</title><rect x="182.1" y="277" width="45.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="185.07" y="287.5" >ext4..</text>
</g>
<g >
<title>getgrgid_r (7,900,106 samples, 0.07%)</title><rect x="68.2" y="581" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.19" y="591.5" ></text>
</g>
<g >
<title>rmqueue_bulk (51,547,538 samples, 0.48%)</title><rect x="238.7" y="197" width="5.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="241.72" y="207.5" ></text>
</g>
<g >
<title>do_futex (666,740,408 samples, 6.16%)</title><rect x="522.7" y="597" width="72.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="525.69" y="607.5" >do_futex</text>
</g>
<g >
<title>__x64_sys_openat (1,761,128 samples, 0.02%)</title><rect x="10.2" y="613" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="13.19" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper_inner (156,870,649 samples, 1.45%)</title><rect x="136.5" y="549" width="17.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="139.46" y="559.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,792,155 samples, 0.07%)</title><rect x="63.4" y="549" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="66.35" y="559.5" ></text>
</g>
<g >
<title>futex_wait_queue (666,740,408 samples, 6.16%)</title><rect x="522.7" y="565" width="72.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="525.69" y="575.5" >futex_wa..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (47,101,468 samples, 0.44%)</title><rect x="413.1" y="661" width="5.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="416.06" y="671.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (41,297,465 samples, 0.38%)</title><rect x="351.7" y="341" width="4.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="354.71" y="351.5" ></text>
</g>
<g >
<title>__munmap (156,870,649 samples, 1.45%)</title><rect x="136.5" y="517" width="17.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="139.46" y="527.5" ></text>
</g>
<g >
<title>schedule (292,595,658 samples, 2.70%)</title><rect x="1158.1" y="613" width="31.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1161.09" y="623.5" >sc..</text>
</g>
<g >
<title>[libc.so.6] (485,679,815 samples, 4.49%)</title><rect x="10.4" y="485" width="53.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.38" y="495.5" >[libc..</text>
</g>
<g >
<title>ondemand_readahead (272,925,362 samples, 2.52%)</title><rect x="244.3" y="357" width="29.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="247.34" y="367.5" >on..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (47,101,468 samples, 0.44%)</title><rect x="413.1" y="565" width="5.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="416.06" y="575.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (41,297,465 samples, 0.38%)</title><rect x="351.7" y="405" width="4.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="354.71" y="415.5" ></text>
</g>
<g >
<title>filemap_fault (426,143,549 samples, 3.94%)</title><rect x="227.6" y="389" width="46.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="230.63" y="399.5" >file..</text>
</g>
<g >
<title>__dentry_kill (417,741,355 samples, 3.86%)</title><rect x="182.1" y="341" width="45.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="185.07" y="351.5" >__de..</text>
</g>
<g >
<title>asm_exc_page_fault (521,233,805 samples, 4.82%)</title><rect x="356.2" y="661" width="56.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="359.21" y="671.5" >asm_ex..</text>
</g>
<g >
<title>truncate_inode_pages_range (417,741,355 samples, 3.86%)</title><rect x="182.1" y="245" width="45.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="185.07" y="255.5" >trun..</text>
</g>
<g >
<title>__alloc_pages (51,547,538 samples, 0.48%)</title><rect x="238.7" y="245" width="5.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="241.72" y="255.5" ></text>
</g>
<g >
<title>destroy_inode (417,741,355 samples, 3.86%)</title><rect x="182.1" y="389" width="45.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="185.07" y="399.5" >dest..</text>
</g>
<g >
<title>futex_wait (666,740,408 samples, 6.16%)</title><rect x="522.7" y="581" width="72.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="525.69" y="591.5" >futex_wait</text>
</g>
<g >
<title>psi_task_switch (290,389,696 samples, 2.68%)</title><rect x="1126.4" y="549" width="31.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1129.42" y="559.5" >ps..</text>
</g>
<g >
<title>fault_dirty_shared_page (37,932,501 samples, 0.35%)</title><rect x="336.2" y="405" width="4.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="339.20" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (156,870,649 samples, 1.45%)</title><rect x="136.5" y="501" width="17.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="139.46" y="511.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,921,131,075 samples, 17.76%)</title><rect x="721.9" y="565" width="209.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="724.90" y="575.5" >cpuidle_enter_state</text>
</g>
<g >
<title>[libc.so.6] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="453" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="71.19" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,731,174 samples, 0.02%)</title><rect x="67.8" y="485" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.81" y="495.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="373" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="71.19" y="383.5" ></text>
</g>
<g >
<title>_dl_catch_exception (7,792,155 samples, 0.07%)</title><rect x="63.4" y="581" width="0.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="66.35" y="591.5" ></text>
</g>
<g >
<title>zap_pte_range (156,870,649 samples, 1.45%)</title><rect x="136.5" y="325" width="17.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="139.46" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="533" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="71.19" y="543.5" ></text>
</g>
<g >
<title>worker_thread (292,595,658 samples, 2.70%)</title><rect x="1158.1" y="629" width="31.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1161.09" y="639.5" >wo..</text>
</g>
<g >
<title>ext4_da_get_block_prep (206,355,611 samples, 1.91%)</title><rect x="313.7" y="341" width="22.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="316.70" y="351.5" >e..</text>
</g>
<g >
<title>[libc.so.6] (33,108,659 samples, 0.31%)</title><rect x="64.2" y="581" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.20" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (41,297,465 samples, 0.38%)</title><rect x="351.7" y="149" width="4.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="354.71" y="159.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (102,792,729 samples, 0.95%)</title><rect x="250.1" y="277" width="11.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="253.05" y="287.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,178,961,551 samples, 10.90%)</title><rect x="227.6" y="613" width="128.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="230.63" y="623.5" >NaClSysWrite</text>
</g>
<g >
<title>mt_find (571,723,068 samples, 5.28%)</title><rect x="989.3" y="581" width="62.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="992.27" y="591.5" >mt_find</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1,178,961,551 samples, 10.90%)</title><rect x="227.6" y="597" width="128.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="230.63" y="607.5" >rustposix::safep..</text>
</g>
<g >
<title>page_cache_ra_order (272,925,362 samples, 2.52%)</title><rect x="244.3" y="341" width="29.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="247.34" y="351.5" >pa..</text>
</g>
<g >
<title>[libc.so.6] (485,679,815 samples, 4.49%)</title><rect x="10.4" y="517" width="53.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.38" y="527.5" >[libc..</text>
</g>
<g >
<title>__free_one_page (52,309,678 samples, 0.48%)</title><rect x="193.5" y="149" width="5.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="196.48" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (485,679,815 samples, 4.49%)</title><rect x="10.4" y="549" width="53.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.38" y="559.5" >[libc..</text>
</g>
<g >
<title>memcpy_erms (7,900,106 samples, 0.07%)</title><rect x="68.2" y="85" width="0.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="71.19" y="95.5" ></text>
</g>
<g >
<title>perf_event_mmap_event (7,900,106 samples, 0.07%)</title><rect x="68.2" y="133" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="71.19" y="143.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (156,870,649 samples, 1.45%)</title><rect x="136.5" y="565" width="17.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="139.46" y="575.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (41,297,465 samples, 0.38%)</title><rect x="351.7" y="485" width="4.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="354.71" y="495.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (51,811,389 samples, 0.48%)</title><rect x="216.3" y="53" width="5.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="219.28" y="63.5" ></text>
</g>
<g >
<title>do_user_addr_fault (571,723,068 samples, 5.28%)</title><rect x="989.3" y="629" width="62.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="992.27" y="639.5" >do_use..</text>
</g>
<g >
<title>tcp_write_xmit (685,775,706 samples, 6.34%)</title><rect x="1051.6" y="469" width="74.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1054.63" y="479.5" >tcp_writ..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,792,155 samples, 0.07%)</title><rect x="63.4" y="597" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="66.35" y="607.5" ></text>
</g>
<g >
<title>ext4_dirty_folio (52,303,657 samples, 0.48%)</title><rect x="142.2" y="277" width="5.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="145.16" y="287.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (2,526,582,929 samples, 23.35%)</title><rect x="656.2" y="661" width="275.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="659.15" y="671.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>tcp_push (685,775,706 samples, 6.34%)</title><rect x="1051.6" y="501" width="74.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1054.63" y="511.5" >tcp_push</text>
</g>
<g >
<title>evict (417,741,355 samples, 3.86%)</title><rect x="182.1" y="405" width="45.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="185.07" y="415.5" >evict</text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (41,297,465 samples, 0.38%)</title><rect x="351.7" y="373" width="4.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="354.71" y="383.5" ></text>
</g>
<g >
<title>_dl_catch_exception (7,900,106 samples, 0.07%)</title><rect x="68.2" y="341" width="0.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="71.19" y="351.5" ></text>
</g>
<g >
<title>sleep (4,708,424,716 samples, 43.52%)</title><rect x="418.2" y="677" width="513.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="421.20" y="687.5" >sleep</text>
</g>
<g >
<title>block_invalidate_folio (156,389,332 samples, 1.45%)</title><rect x="210.6" y="197" width="17.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="213.58" y="207.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (272,925,362 samples, 2.52%)</title><rect x="244.3" y="325" width="29.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="247.34" y="335.5" >pa..</text>
</g>
<g >
<title>folio_unlock (37,932,501 samples, 0.35%)</title><rect x="336.2" y="389" width="4.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="339.20" y="399.5" ></text>
</g>
<g >
<title>do_page_mkwrite (569,345,303 samples, 5.26%)</title><rect x="274.1" y="405" width="62.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="277.11" y="415.5" >do_pag..</text>
</g>
<g >
<title>page_cache_async_ra (272,925,362 samples, 2.52%)</title><rect x="244.3" y="373" width="29.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.34" y="383.5" >pa..</text>
</g>
<g >
<title>clear_page_erms (52,123,329 samples, 0.48%)</title><rect x="268.4" y="229" width="5.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="271.42" y="239.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,792,155 samples, 0.07%)</title><rect x="63.4" y="517" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="66.35" y="527.5" ></text>
</g>
<g >
<title>tlb_flush_rmaps (52,296,679 samples, 0.48%)</title><rect x="147.9" y="309" width="5.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="150.87" y="319.5" ></text>
</g>
<g >
<title>kernel_clone (269,369,340 samples, 2.49%)</title><rect x="493.3" y="581" width="29.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="496.32" y="591.5" >ke..</text>
</g>
<g >
<title>lind_unlink (417,741,355 samples, 3.86%)</title><rect x="182.1" y="597" width="45.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="185.07" y="607.5" >lind..</text>
</g>
<g >
<title>do_syscall_64 (7,900,106 samples, 0.07%)</title><rect x="68.2" y="245" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="71.19" y="255.5" ></text>
</g>
<g >
<title>free_unref_page_commit (52,309,678 samples, 0.48%)</title><rect x="193.5" y="181" width="5.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="196.48" y="191.5" ></text>
</g>
<g >
<title>flush_tlb_func (47,101,468 samples, 0.44%)</title><rect x="413.1" y="421" width="5.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="416.06" y="431.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (41,297,465 samples, 0.38%)</title><rect x="351.7" y="533" width="4.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="354.71" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (485,679,815 samples, 4.49%)</title><rect x="10.4" y="501" width="53.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.38" y="511.5" >[libc..</text>
</g>
<g >
<title>__count_memcg_events (51,385,298 samples, 0.47%)</title><rect x="255.7" y="245" width="5.6" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="258.66" y="255.5" ></text>
</g>
<g >
<title>__es_tree_search.isra.0 (51,468,358 samples, 0.48%)</title><rect x="324.9" y="293" width="5.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="327.95" y="303.5" ></text>
</g>
<g >
<title>ext4_page_mkwrite (569,345,303 samples, 5.26%)</title><rect x="274.1" y="389" width="62.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="277.11" y="399.5" >ext4_p..</text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (52,273,888 samples, 0.48%)</title><rect x="221.9" y="69" width="5.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="224.93" y="79.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (50,192,776 samples, 0.46%)</title><rect x="233.2" y="261" width="5.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="236.25" y="271.5" ></text>
</g>
<g >
<title>set_page_dirty (52,303,657 samples, 0.48%)</title><rect x="142.2" y="309" width="5.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="145.16" y="319.5" ></text>
</g>
<g >
<title>__libc_start_main (36,571,007 samples, 0.34%)</title><rect x="64.2" y="645" width="4.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="67.20" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (41,297,465 samples, 0.38%)</title><rect x="351.7" y="261" width="4.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="354.71" y="271.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (41,297,465 samples, 0.38%)</title><rect x="351.7" y="309" width="4.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="354.71" y="319.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1,761,128 samples, 0.02%)</title><rect x="10.2" y="597" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="13.19" y="607.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (417,741,355 samples, 3.86%)</title><rect x="182.1" y="373" width="45.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="185.07" y="383.5" >ovl_..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (41,297,465 samples, 0.38%)</title><rect x="351.7" y="437" width="4.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="354.71" y="447.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,608,053 samples, 0.02%)</title><rect x="931.4" y="581" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="934.42" y="591.5" ></text>
</g>
<g >
<title>__alloc_pages (52,123,329 samples, 0.48%)</title><rect x="268.4" y="261" width="5.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="271.42" y="271.5" ></text>
</g>
<g >
<title>alloc_pages (51,547,538 samples, 0.48%)</title><rect x="238.7" y="261" width="5.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="241.72" y="271.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (41,297,465 samples, 0.38%)</title><rect x="351.7" y="565" width="4.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="354.71" y="575.5" ></text>
</g>
<g >
<title>hrtick_update (666,740,408 samples, 6.16%)</title><rect x="522.7" y="501" width="72.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="525.69" y="511.5" >hrtick_u..</text>
</g>
<g >
<title>flush_tlb_mm_range (47,101,468 samples, 0.44%)</title><rect x="413.1" y="437" width="5.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="416.06" y="447.5" ></text>
</g>
<g >
<title>iput (417,741,355 samples, 3.86%)</title><rect x="182.1" y="421" width="45.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="185.07" y="431.5" >iput</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (47,101,468 samples, 0.44%)</title><rect x="413.1" y="597" width="5.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="416.06" y="607.5" ></text>
</g>
<g >
<title>rmqueue (51,547,538 samples, 0.48%)</title><rect x="238.7" y="213" width="5.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="241.72" y="223.5" ></text>
</g>
<g >
<title>filemap_add_folio (50,192,776 samples, 0.46%)</title><rect x="233.2" y="293" width="5.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="236.25" y="303.5" ></text>
</g>
<g >
<title>schedule (290,389,696 samples, 2.68%)</title><rect x="1126.4" y="581" width="31.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1129.42" y="591.5" >sc..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,493,066,749 samples, 13.80%)</title><rect x="493.3" y="645" width="162.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="496.32" y="655.5" >entry_SYSCALL_64_aft..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for  (41,297,465 samples, 0.38%)</title><rect x="351.7" y="549" width="4.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="354.71" y="559.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (52,304,055 samples, 0.48%)</title><rect x="210.6" y="133" width="5.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="213.58" y="143.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (571,723,068 samples, 5.28%)</title><rect x="989.3" y="613" width="62.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="992.27" y="623.5" >lock_m..</text>
</g>
<g >
<title>ls (52,263,268 samples, 0.48%)</title><rect x="63.4" y="677" width="5.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="66.35" y="687.5" ></text>
</g>
<g >
<title>unmap_vmas (156,870,649 samples, 1.45%)</title><rect x="136.5" y="389" width="17.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="139.46" y="399.5" ></text>
</g>
<g >
<title>dup_mm.constprop.0 (269,369,340 samples, 2.49%)</title><rect x="493.3" y="549" width="29.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="496.32" y="559.5" >du..</text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (156,389,332 samples, 1.45%)</title><rect x="210.6" y="149" width="17.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="213.58" y="159.5" ></text>
</g>
<g >
<title>mmap_region (7,900,106 samples, 0.07%)</title><rect x="68.2" y="165" width="0.9" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="71.19" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,731,174 samples, 0.02%)</title><rect x="68.0" y="469" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="71.00" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (261,330,037 samples, 2.42%)</title><rect x="153.6" y="533" width="28.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="156.57" y="543.5" >[l..</text>
</g>
<g >
<title>arch_cpu_idle_exit (602,843,801 samples, 5.57%)</title><rect x="656.2" y="613" width="65.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="659.15" y="623.5" >arch_cp..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,792,155 samples, 0.07%)</title><rect x="63.4" y="645" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="66.35" y="655.5" ></text>
</g>
<g >
<title>NaClSysUnlink (417,741,355 samples, 3.86%)</title><rect x="182.1" y="613" width="45.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="185.07" y="623.5" >NaCl..</text>
</g>
<g >
<title>sel_ldr (3,154,229,097 samples, 29.15%)</title><rect x="69.1" y="677" width="344.0" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="72.05" y="687.5" >sel_ldr</text>
</g>
<g >
<title>main (485,679,815 samples, 4.49%)</title><rect x="10.4" y="613" width="53.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.38" y="623.5" >main</text>
</g>
<g >
<title>std::sys::unix::fs::unlink (417,741,355 samples, 3.86%)</title><rect x="182.1" y="517" width="45.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="185.07" y="527.5" >std:..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="293" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="71.19" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,761,128 samples, 0.02%)</title><rect x="10.2" y="645" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.19" y="655.5" ></text>
</g>
<g >
<title>[unknown] (2,181,841,787 samples, 20.17%)</title><rect x="418.2" y="661" width="238.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="421.20" y="671.5" >[unknown]</text>
</g>
<g >
<title>do_sys_openat2 (556,957,001 samples, 5.15%)</title><rect x="595.4" y="597" width="60.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="598.41" y="607.5" >do_sys..</text>
</g>
<g >
<title>folio_alloc (51,547,538 samples, 0.48%)</title><rect x="238.7" y="277" width="5.6" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="241.72" y="287.5" ></text>
</g>
<g >
<title>schedule_idle (2,608,053 samples, 0.02%)</title><rect x="931.4" y="549" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="934.42" y="559.5" ></text>
</g>
<g >
<title>unmap_single_vma (156,870,649 samples, 1.45%)</title><rect x="136.5" y="373" width="17.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="139.46" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,462,348 samples, 0.03%)</title><rect x="67.8" y="581" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="70.81" y="591.5" ></text>
</g>
<g >
<title>sh (47,101,468 samples, 0.44%)</title><rect x="413.1" y="677" width="5.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="416.06" y="687.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (685,775,706 samples, 6.34%)</title><rect x="1051.6" y="485" width="74.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1054.63" y="495.5" >__tcp_pu..</text>
</g>
<g >
<title>do_idle (1,921,131,075 samples, 17.76%)</title><rect x="721.9" y="613" width="209.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="724.90" y="623.5" >do_idle</text>
</g>
<g >
<title>NaClSysBrkDecoder (561,116,897 samples, 5.19%)</title><rect x="75.3" y="629" width="61.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="78.27" y="639.5" >NaClSy..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (7,900,106 samples, 0.07%)</title><rect x="68.2" y="357" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="71.19" y="367.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (47,101,468 samples, 0.44%)</title><rect x="413.1" y="405" width="5.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="416.06" y="415.5" ></text>
</g>
<g >
<title>unmap_page_range (156,870,649 samples, 1.45%)</title><rect x="136.5" y="357" width="17.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="139.46" y="367.5" ></text>
</g>
</g>
</svg>
