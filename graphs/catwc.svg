<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>run_builtin (1 samples, 0.85%)</title><rect x="660.0" y="549" width="10.0" height="15.0" fill="rgb(231,81,1)" rx="2" ry="2" />
<text  x="663.00" y="559.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.85%)</title><rect x="990.0" y="469" width="10.0" height="15.0" fill="rgb(245,210,7)" rx="2" ry="2" />
<text  x="993.00" y="479.5" ></text>
</g>
<g >
<title>cpu_startup_entry (15 samples, 12.71%)</title><rect x="1030.0" y="549" width="150.0" height="15.0" fill="rgb(234,45,20)" rx="2" ry="2" />
<text  x="1033.00" y="559.5" >cpu_startup_entry</text>
</g>
<g >
<title>shmem_fault (2 samples, 1.69%)</title><rect x="880.0" y="117" width="20.0" height="15.0" fill="rgb(213,227,19)" rx="2" ry="2" />
<text  x="883.00" y="127.5" ></text>
</g>
<g >
<title>find_next_bit (1 samples, 0.85%)</title><rect x="1020.0" y="117" width="10.0" height="15.0" fill="rgb(250,142,9)" rx="2" ry="2" />
<text  x="1023.00" y="127.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 54.24%)</title><rect x="20.0" y="389" width="640.0" height="15.0" fill="rgb(225,86,20)" rx="2" ry="2" />
<text  x="23.00" y="399.5" >perf_event_for_each_child</text>
</g>
<g >
<title>native_write_msr (48 samples, 40.68%)</title><rect x="30.0" y="197" width="480.0" height="15.0" fill="rgb(219,117,33)" rx="2" ry="2" />
<text  x="33.00" y="207.5" >native_write_msr</text>
</g>
<g >
<title>sys_execve (1 samples, 0.85%)</title><rect x="990.0" y="517" width="10.0" height="15.0" fill="rgb(253,112,32)" rx="2" ry="2" />
<text  x="993.00" y="527.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.85%)</title><rect x="990.0" y="501" width="10.0" height="15.0" fill="rgb(220,217,21)" rx="2" ry="2" />
<text  x="993.00" y="511.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 54.24%)</title><rect x="20.0" y="277" width="640.0" height="15.0" fill="rgb(208,41,23)" rx="2" ry="2" />
<text  x="23.00" y="287.5" >__perf_event_enable</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (18 samples, 15.25%)</title><rect x="770.0" y="229" width="180.0" height="15.0" fill="rgb(225,87,42)" rx="2" ry="2" />
<text  x="773.00" y="239.5" >__memmove_avx_unaligned..</text>
</g>
<g >
<title>tty_flip_buffer_push (1 samples, 0.85%)</title><rect x="1020.0" y="261" width="10.0" height="15.0" fill="rgb(237,162,15)" rx="2" ry="2" />
<text  x="1023.00" y="271.5" ></text>
</g>
<g >
<title>start_kernel (1 samples, 0.85%)</title><rect x="1180.0" y="533" width="10.0" height="15.0" fill="rgb(241,91,32)" rx="2" ry="2" />
<text  x="1183.00" y="543.5" ></text>
</g>
<g >
<title>sys_ioctl (64 samples, 54.24%)</title><rect x="20.0" y="437" width="640.0" height="15.0" fill="rgb(230,139,27)" rx="2" ry="2" />
<text  x="23.00" y="447.5" >sys_ioctl</text>
</g>
<g >
<title>__vfs_write (1 samples, 0.85%)</title><rect x="1020.0" y="325" width="10.0" height="15.0" fill="rgb(246,102,51)" rx="2" ry="2" />
<text  x="1023.00" y="335.5" ></text>
</g>
<g >
<title>NaClAppThreadSpawn (25 samples, 21.19%)</title><rect x="710.0" y="309" width="250.0" height="15.0" fill="rgb(218,80,25)" rx="2" ry="2" />
<text  x="713.00" y="319.5" >NaClAppThreadSpawn</text>
</g>
<g >
<title>do_wp_page (1 samples, 0.85%)</title><rect x="10.0" y="469" width="10.0" height="15.0" fill="rgb(205,47,44)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 1.69%)</title><rect x="910.0" y="133" width="20.0" height="15.0" fill="rgb(253,122,3)" rx="2" ry="2" />
<text  x="913.00" y="143.5" ></text>
</g>
<g >
<title>all (118 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(222,103,43)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.85%)</title><rect x="880.0" y="37" width="10.0" height="15.0" fill="rgb(238,179,16)" rx="2" ry="2" />
<text  x="883.00" y="47.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.85%)</title><rect x="1020.0" y="165" width="10.0" height="15.0" fill="rgb(250,85,30)" rx="2" ry="2" />
<text  x="1023.00" y="175.5" ></text>
</g>
<g >
<title>[unknown]  (25 samples, 21.19%)</title><rect x="710.0" y="533" width="250.0" height="15.0" fill="rgb(236,36,12)" rx="2" ry="2" />
<text  x="713.00" y="543.5" >[unknown] </text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.85%)</title><rect x="660.0" y="437" width="10.0" height="15.0" fill="rgb(254,98,1)" rx="2" ry="2" />
<text  x="663.00" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.85%)</title><rect x="670.0" y="581" width="10.0" height="15.0" fill="rgb(231,217,4)" rx="2" ry="2" />
<text  x="673.00" y="591.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.85%)</title><rect x="1180.0" y="485" width="10.0" height="15.0" fill="rgb(216,157,39)" rx="2" ry="2" />
<text  x="1183.00" y="495.5" ></text>
</g>
<g >
<title>lookdict_string.lto_priv.0 (1 samples, 0.85%)</title><rect x="980.0" y="565" width="10.0" height="15.0" fill="rgb(221,206,40)" rx="2" ry="2" />
<text  x="983.00" y="575.5" ></text>
</g>
<g >
<title>secondary_startup_64 (16 samples, 13.56%)</title><rect x="1030.0" y="581" width="160.0" height="15.0" fill="rgb(225,17,36)" rx="2" ry="2" />
<text  x="1033.00" y="591.5" >secondary_startup_64</text>
</g>
<g >
<title>PyObject_GetItem (1 samples, 0.85%)</title><rect x="690.0" y="565" width="10.0" height="15.0" fill="rgb(225,203,30)" rx="2" ry="2" />
<text  x="693.00" y="575.5" ></text>
</g>
<g >
<title>NaClPatchAddr (6 samples, 5.08%)</title><rect x="710.0" y="213" width="60.0" height="15.0" fill="rgb(208,172,1)" rx="2" ry="2" />
<text  x="713.00" y="223.5" >NaClPa..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.85%)</title><rect x="1020.0" y="549" width="10.0" height="15.0" fill="rgb(238,38,24)" rx="2" ry="2" />
<text  x="1023.00" y="559.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 0.85%)</title><rect x="1180.0" y="565" width="10.0" height="15.0" fill="rgb(224,162,44)" rx="2" ry="2" />
<text  x="1183.00" y="575.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.85%)</title><rect x="900.0" y="133" width="10.0" height="15.0" fill="rgb(224,154,46)" rx="2" ry="2" />
<text  x="903.00" y="143.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.85%)</title><rect x="10.0" y="581" width="10.0" height="15.0" fill="rgb(218,188,47)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.85%)</title><rect x="870.0" y="213" width="10.0" height="15.0" fill="rgb(248,158,54)" rx="2" ry="2" />
<text  x="873.00" y="223.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 0.85%)</title><rect x="660.0" y="533" width="10.0" height="15.0" fill="rgb(205,217,28)" rx="2" ry="2" />
<text  x="663.00" y="543.5" ></text>
</g>
<g >
<title>perf_ioctl (64 samples, 54.24%)</title><rect x="20.0" y="405" width="640.0" height="15.0" fill="rgb(215,208,16)" rx="2" ry="2" />
<text  x="23.00" y="415.5" >perf_ioctl</text>
</g>
<g >
<title>remote_function (64 samples, 54.24%)</title><rect x="20.0" y="309" width="640.0" height="15.0" fill="rgb(223,4,8)" rx="2" ry="2" />
<text  x="23.00" y="319.5" >remote_function</text>
</g>
<g >
<title>[unknown] (1 samples, 0.85%)</title><rect x="1020.0" y="453" width="10.0" height="15.0" fill="rgb(217,62,25)" rx="2" ry="2" />
<text  x="1023.00" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_sigaction (1 samples, 0.85%)</title><rect x="1000.0" y="581" width="10.0" height="15.0" fill="rgb(226,76,28)" rx="2" ry="2" />
<text  x="1003.00" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.85%)</title><rect x="1020.0" y="469" width="10.0" height="15.0" fill="rgb(223,7,31)" rx="2" ry="2" />
<text  x="1023.00" y="479.5" ></text>
</g>
<g >
<title>[unknown] (31 samples, 26.27%)</title><rect x="680.0" y="581" width="310.0" height="15.0" fill="rgb(232,108,21)" rx="2" ry="2" />
<text  x="683.00" y="591.5" >[unknown]</text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.85%)</title><rect x="1180.0" y="437" width="10.0" height="15.0" fill="rgb(206,205,41)" rx="2" ry="2" />
<text  x="1183.00" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.85%)</title><rect x="1020.0" y="533" width="10.0" height="15.0" fill="rgb(233,77,0)" rx="2" ry="2" />
<text  x="1023.00" y="543.5" ></text>
</g>
<g >
<title>event_function_call (64 samples, 54.24%)</title><rect x="20.0" y="357" width="640.0" height="15.0" fill="rgb(248,57,15)" rx="2" ry="2" />
<text  x="23.00" y="367.5" >event_function_call</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.85%)</title><rect x="990.0" y="549" width="10.0" height="15.0" fill="rgb(234,140,31)" rx="2" ry="2" />
<text  x="993.00" y="559.5" ></text>
</g>
<g >
<title>[perf-1768.map] (25 samples, 21.19%)</title><rect x="710.0" y="549" width="250.0" height="15.0" fill="rgb(249,85,38)" rx="2" ry="2" />
<text  x="713.00" y="559.5" >[perf-1768.map]</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.85%)</title><rect x="660.0" y="485" width="10.0" height="15.0" fill="rgb(237,193,37)" rx="2" ry="2" />
<text  x="663.00" y="495.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (14 samples, 11.86%)</title><rect x="1040.0" y="485" width="140.0" height="15.0" fill="rgb(225,53,51)" rx="2" ry="2" />
<text  x="1043.00" y="495.5" >cpuidle_enter_state</text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.85%)</title><rect x="1030.0" y="501" width="10.0" height="15.0" fill="rgb(232,49,6)" rx="2" ry="2" />
<text  x="1033.00" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.85%)</title><rect x="990.0" y="533" width="10.0" height="15.0" fill="rgb(246,163,2)" rx="2" ry="2" />
<text  x="993.00" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.85%)</title><rect x="10.0" y="533" width="10.0" height="15.0" fill="rgb(225,105,28)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>mm_alloc (1 samples, 0.85%)</title><rect x="660.0" y="421" width="10.0" height="15.0" fill="rgb(232,47,5)" rx="2" ry="2" />
<text  x="663.00" y="431.5" ></text>
</g>
<g >
<title>rest_init (1 samples, 0.85%)</title><rect x="1180.0" y="517" width="10.0" height="15.0" fill="rgb(253,201,35)" rx="2" ry="2" />
<text  x="1183.00" y="527.5" ></text>
</g>
<g >
<title>[sel_ldr] (25 samples, 21.19%)</title><rect x="710.0" y="389" width="250.0" height="15.0" fill="rgb(228,221,3)" rx="2" ry="2" />
<text  x="713.00" y="399.5" >[sel_ldr]</text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 5.93%)</title><rect x="880.0" y="149" width="70.0" height="15.0" fill="rgb(226,144,26)" rx="2" ry="2" />
<text  x="883.00" y="159.5" >__handl..</text>
</g>
<g >
<title>dict_dealloc.lto_priv.0 (1 samples, 0.85%)</title><rect x="970.0" y="565" width="10.0" height="15.0" fill="rgb(217,151,20)" rx="2" ry="2" />
<text  x="973.00" y="575.5" ></text>
</g>
<g >
<title>cmd_record (64 samples, 54.24%)</title><rect x="20.0" y="517" width="640.0" height="15.0" fill="rgb(254,199,12)" rx="2" ry="2" />
<text  x="23.00" y="527.5" >cmd_record</text>
</g>
<g >
<title>cpumask_next (1 samples, 0.85%)</title><rect x="1020.0" y="133" width="10.0" height="15.0" fill="rgb(219,99,38)" rx="2" ry="2" />
<text  x="1023.00" y="143.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.85%)</title><rect x="1000.0" y="565" width="10.0" height="15.0" fill="rgb(222,174,25)" rx="2" ry="2" />
<text  x="1003.00" y="575.5" ></text>
</g>
<g >
<title>[unknown] (26 samples, 22.03%)</title><rect x="710.0" y="565" width="260.0" height="15.0" fill="rgb(249,203,2)" rx="2" ry="2" />
<text  x="713.00" y="575.5" >[unknown]</text>
</g>
<g >
<title>sel_ldr (33 samples, 27.97%)</title><rect x="670.0" y="597" width="330.0" height="15.0" fill="rgb(212,194,52)" rx="2" ry="2" />
<text  x="673.00" y="607.5" >sel_ldr</text>
</g>
<g >
<title>sys_write (1 samples, 0.85%)</title><rect x="1020.0" y="357" width="10.0" height="15.0" fill="rgb(235,148,48)" rx="2" ry="2" />
<text  x="1023.00" y="367.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.85%)</title><rect x="10.0" y="565" width="10.0" height="15.0" fill="rgb(210,145,50)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.85%)</title><rect x="1020.0" y="565" width="10.0" height="15.0" fill="rgb(237,51,30)" rx="2" ry="2" />
<text  x="1023.00" y="575.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (25 samples, 21.19%)</title><rect x="710.0" y="373" width="250.0" height="15.0" fill="rgb(234,192,8)" rx="2" ry="2" />
<text  x="713.00" y="383.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>page_fault (1 samples, 0.85%)</title><rect x="10.0" y="549" width="10.0" height="15.0" fill="rgb(229,87,26)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>perf (65 samples, 55.08%)</title><rect x="20.0" y="597" width="650.0" height="15.0" fill="rgb(224,187,8)" rx="2" ry="2" />
<text  x="23.00" y="607.5" >perf</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.85%)</title><rect x="10.0" y="421" width="10.0" height="15.0" fill="rgb(240,67,28)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.85%)</title><rect x="660.0" y="581" width="10.0" height="15.0" fill="rgb(252,172,15)" rx="2" ry="2" />
<text  x="663.00" y="591.5" ></text>
</g>
<g >
<title>NaClCreateThread (25 samples, 21.19%)</title><rect x="710.0" y="325" width="250.0" height="15.0" fill="rgb(240,64,50)" rx="2" ry="2" />
<text  x="713.00" y="335.5" >NaClCreateThread</text>
</g>
<g >
<title>NaClVmmapVisit (24 samples, 20.34%)</title><rect x="710.0" y="245" width="240.0" height="15.0" fill="rgb(250,4,14)" rx="2" ry="2" />
<text  x="713.00" y="255.5" >NaClVmmapVisit</text>
</g>
<g >
<title>smp_call_function_single (64 samples, 54.24%)</title><rect x="20.0" y="341" width="640.0" height="15.0" fill="rgb(205,16,19)" rx="2" ry="2" />
<text  x="23.00" y="351.5" >smp_call_function_single</text>
</g>
<g >
<title>do_syscall_64 (64 samples, 54.24%)</title><rect x="20.0" y="453" width="640.0" height="15.0" fill="rgb(239,148,32)" rx="2" ry="2" />
<text  x="23.00" y="463.5" >do_syscall_64</text>
</g>
<g >
<title>__GI___execve (1 samples, 0.85%)</title><rect x="660.0" y="501" width="10.0" height="15.0" fill="rgb(250,116,25)" rx="2" ry="2" />
<text  x="663.00" y="511.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 1.69%)</title><rect x="910.0" y="101" width="20.0" height="15.0" fill="rgb(223,72,47)" rx="2" ry="2" />
<text  x="913.00" y="111.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.85%)</title><rect x="1020.0" y="229" width="10.0" height="15.0" fill="rgb(228,63,11)" rx="2" ry="2" />
<text  x="1023.00" y="239.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 54.24%)</title><rect x="20.0" y="229" width="640.0" height="15.0" fill="rgb(254,24,46)" rx="2" ry="2" />
<text  x="23.00" y="239.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>[unknown] (1 samples, 0.85%)</title><rect x="1020.0" y="501" width="10.0" height="15.0" fill="rgb(212,7,41)" rx="2" ry="2" />
<text  x="1023.00" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.85%)</title><rect x="1040.0" y="421" width="10.0" height="15.0" fill="rgb(236,111,48)" rx="2" ry="2" />
<text  x="1043.00" y="431.5" ></text>
</g>
<g >
<title>tty_write (1 samples, 0.85%)</title><rect x="1020.0" y="309" width="10.0" height="15.0" fill="rgb(209,213,10)" rx="2" ry="2" />
<text  x="1023.00" y="319.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.85%)</title><rect x="660.0" y="405" width="10.0" height="15.0" fill="rgb(222,87,46)" rx="2" ry="2" />
<text  x="663.00" y="415.5" ></text>
</g>
<g >
<title>shmem_add_to_page_cache (1 samples, 0.85%)</title><rect x="890.0" y="85" width="10.0" height="15.0" fill="rgb(207,93,44)" rx="2" ry="2" />
<text  x="893.00" y="95.5" ></text>
</g>
<g >
<title>main (64 samples, 54.24%)</title><rect x="20.0" y="549" width="640.0" height="15.0" fill="rgb(221,203,47)" rx="2" ry="2" />
<text  x="23.00" y="559.5" >main</text>
</g>
<g >
<title>__GI___ioctl (64 samples, 54.24%)</title><rect x="20.0" y="485" width="640.0" height="15.0" fill="rgb(213,192,37)" rx="2" ry="2" />
<text  x="23.00" y="495.5" >__GI___ioctl</text>
</g>
<g >
<title>[unknown] (64 samples, 54.24%)</title><rect x="20.0" y="581" width="640.0" height="15.0" fill="rgb(217,220,40)" rx="2" ry="2" />
<text  x="23.00" y="591.5" >[unknown]</text>
</g>
<g >
<title>default_do_nmi (1 samples, 0.85%)</title><rect x="20.0" y="197" width="10.0" height="15.0" fill="rgb(224,156,42)" rx="2" ry="2" />
<text  x="23.00" y="207.5" ></text>
</g>
<g >
<title>NaClCopyDynamicText (24 samples, 20.34%)</title><rect x="710.0" y="261" width="240.0" height="15.0" fill="rgb(243,188,5)" rx="2" ry="2" />
<text  x="713.00" y="271.5" >NaClCopyDynamicText</text>
</g>
<g >
<title>vfs_write (1 samples, 0.85%)</title><rect x="1020.0" y="341" width="10.0" height="15.0" fill="rgb(227,134,16)" rx="2" ry="2" />
<text  x="1023.00" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 54.24%)</title><rect x="20.0" y="469" width="640.0" height="15.0" fill="rgb(221,49,8)" rx="2" ry="2" />
<text  x="23.00" y="479.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>[unknown] (1 samples, 0.85%)</title><rect x="1020.0" y="437" width="10.0" height="15.0" fill="rgb(221,133,42)" rx="2" ry="2" />
<text  x="1023.00" y="447.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.85%)</title><rect x="10.0" y="517" width="10.0" height="15.0" fill="rgb(237,88,15)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.85%)</title><rect x="1180.0" y="453" width="10.0" height="15.0" fill="rgb(206,3,45)" rx="2" ry="2" />
<text  x="1183.00" y="463.5" ></text>
</g>
<g >
<title>[unknown]  (25 samples, 21.19%)</title><rect x="710.0" y="453" width="250.0" height="15.0" fill="rgb(217,66,16)" rx="2" ry="2" />
<text  x="713.00" y="463.5" >[unknown] </text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.85%)</title><rect x="880.0" y="53" width="10.0" height="15.0" fill="rgb(209,99,40)" rx="2" ry="2" />
<text  x="883.00" y="63.5" ></text>
</g>
<g >
<title>start_secondary (15 samples, 12.71%)</title><rect x="1030.0" y="565" width="150.0" height="15.0" fill="rgb(237,28,44)" rx="2" ry="2" />
<text  x="1033.00" y="575.5" >start_secondary</text>
</g>
<g >
<title>lind (1 samples, 0.85%)</title><rect x="10.0" y="597" width="10.0" height="15.0" fill="rgb(227,95,42)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.85%)</title><rect x="1020.0" y="485" width="10.0" height="15.0" fill="rgb(243,186,19)" rx="2" ry="2" />
<text  x="1023.00" y="495.5" ></text>
</g>
<g >
<title>sys_execve (1 samples, 0.85%)</title><rect x="660.0" y="453" width="10.0" height="15.0" fill="rgb(242,27,28)" rx="2" ry="2" />
<text  x="663.00" y="463.5" ></text>
</g>
<g >
<title>nmi_restore (15 samples, 12.71%)</title><rect x="510.0" y="197" width="150.0" height="15.0" fill="rgb(250,123,48)" rx="2" ry="2" />
<text  x="513.00" y="207.5" >nmi_restore</text>
</g>
<g >
<title>__do_page_fault (7 samples, 5.93%)</title><rect x="880.0" y="181" width="70.0" height="15.0" fill="rgb(206,40,45)" rx="2" ry="2" />
<text  x="883.00" y="191.5" >__do_pa..</text>
</g>
<g >
<title>NaClForkThreadContextSetup (25 samples, 21.19%)</title><rect x="710.0" y="293" width="250.0" height="15.0" fill="rgb(209,198,3)" rx="2" ry="2" />
<text  x="713.00" y="303.5" >NaClForkThreadContextSetup</text>
</g>
<g >
<title>[unknown]  (25 samples, 21.19%)</title><rect x="710.0" y="501" width="250.0" height="15.0" fill="rgb(229,195,39)" rx="2" ry="2" />
<text  x="713.00" y="511.5" >[unknown] </text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.85%)</title><rect x="1040.0" y="453" width="10.0" height="15.0" fill="rgb(208,22,37)" rx="2" ry="2" />
<text  x="1043.00" y="463.5" ></text>
</g>
<g >
<title>intel_idle (13 samples, 11.02%)</title><rect x="1050.0" y="469" width="130.0" height="15.0" fill="rgb(225,186,34)" rx="2" ry="2" />
<text  x="1053.00" y="479.5" >intel_idle</text>
</g>
<g >
<title>[unknown] (1 samples, 0.85%)</title><rect x="1020.0" y="517" width="10.0" height="15.0" fill="rgb(206,88,18)" rx="2" ry="2" />
<text  x="1023.00" y="527.5" ></text>
</g>
<g >
<title>PyType_IsSubtype (1 samples, 0.85%)</title><rect x="700.0" y="565" width="10.0" height="15.0" fill="rgb(205,33,20)" rx="2" ry="2" />
<text  x="703.00" y="575.5" ></text>
</g>
<g >
<title>perf_evlist__prepare_workload (1 samples, 0.85%)</title><rect x="660.0" y="517" width="10.0" height="15.0" fill="rgb(241,99,30)" rx="2" ry="2" />
<text  x="663.00" y="527.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.85%)</title><rect x="1020.0" y="101" width="10.0" height="15.0" fill="rgb(228,183,3)" rx="2" ry="2" />
<text  x="1023.00" y="111.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.85%)</title><rect x="1040.0" y="389" width="10.0" height="15.0" fill="rgb(229,109,31)" rx="2" ry="2" />
<text  x="1043.00" y="399.5" ></text>
</g>
<g >
<title>page_fault (7 samples, 5.93%)</title><rect x="880.0" y="213" width="70.0" height="15.0" fill="rgb(246,148,19)" rx="2" ry="2" />
<text  x="883.00" y="223.5" >page_fa..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.85%)</title><rect x="680.0" y="565" width="10.0" height="15.0" fill="rgb(208,126,26)" rx="2" ry="2" />
<text  x="683.00" y="575.5" ></text>
</g>
<g >
<title>pty_write (1 samples, 0.85%)</title><rect x="1020.0" y="277" width="10.0" height="15.0" fill="rgb(235,103,9)" rx="2" ry="2" />
<text  x="1023.00" y="287.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.69%)</title><rect x="1010.0" y="581" width="20.0" height="15.0" fill="rgb(232,46,12)" rx="2" ry="2" />
<text  x="1013.00" y="591.5" ></text>
</g>
<g >
<title>call_cpuidle (14 samples, 11.86%)</title><rect x="1040.0" y="517" width="140.0" height="15.0" fill="rgb(216,14,39)" rx="2" ry="2" />
<text  x="1043.00" y="527.5" >call_cpuidle</text>
</g>
<g >
<title>event_function (64 samples, 54.24%)</title><rect x="20.0" y="293" width="640.0" height="15.0" fill="rgb(230,174,32)" rx="2" ry="2" />
<text  x="23.00" y="303.5" >event_function</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.85%)</title><rect x="950.0" y="277" width="10.0" height="15.0" fill="rgb(218,46,52)" rx="2" ry="2" />
<text  x="953.00" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.85%)</title><rect x="1020.0" y="389" width="10.0" height="15.0" fill="rgb(214,80,47)" rx="2" ry="2" />
<text  x="1023.00" y="399.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.85%)</title><rect x="1020.0" y="197" width="10.0" height="15.0" fill="rgb(212,99,13)" rx="2" ry="2" />
<text  x="1023.00" y="207.5" ></text>
</g>
<g >
<title>evlist__enable (64 samples, 54.24%)</title><rect x="20.0" y="501" width="640.0" height="15.0" fill="rgb(251,36,15)" rx="2" ry="2" />
<text  x="23.00" y="511.5" >evlist__enable</text>
</g>
<g >
<title>shmem_getpage_gfp (2 samples, 1.69%)</title><rect x="880.0" y="101" width="20.0" height="15.0" fill="rgb(220,217,33)" rx="2" ry="2" />
<text  x="883.00" y="111.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.85%)</title><rect x="10.0" y="501" width="10.0" height="15.0" fill="rgb(214,178,11)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.85%)</title><rect x="1180.0" y="501" width="10.0" height="15.0" fill="rgb(220,192,34)" rx="2" ry="2" />
<text  x="1183.00" y="511.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.85%)</title><rect x="1040.0" y="405" width="10.0" height="15.0" fill="rgb(231,40,53)" rx="2" ry="2" />
<text  x="1043.00" y="415.5" ></text>
</g>
<g >
<title>copy_strings.isra.26 (1 samples, 0.85%)</title><rect x="990.0" y="485" width="10.0" height="15.0" fill="rgb(219,163,43)" rx="2" ry="2" />
<text  x="993.00" y="495.5" ></text>
</g>
<g >
<title>__GI___execve (1 samples, 0.85%)</title><rect x="990.0" y="565" width="10.0" height="15.0" fill="rgb(212,145,48)" rx="2" ry="2" />
<text  x="993.00" y="575.5" ></text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.85%)</title><rect x="10.0" y="453" width="10.0" height="15.0" fill="rgb(209,18,24)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.85%)</title><rect x="10.0" y="437" width="10.0" height="15.0" fill="rgb(212,59,12)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>[unknown]  (25 samples, 21.19%)</title><rect x="710.0" y="517" width="250.0" height="15.0" fill="rgb(215,66,31)" rx="2" ry="2" />
<text  x="713.00" y="527.5" >[unknown] </text>
</g>
<g >
<title>main (1 samples, 0.85%)</title><rect x="660.0" y="565" width="10.0" height="15.0" fill="rgb(243,88,18)" rx="2" ry="2" />
<text  x="663.00" y="575.5" ></text>
</g>
<g >
<title>[unknown]  (25 samples, 21.19%)</title><rect x="710.0" y="405" width="250.0" height="15.0" fill="rgb(249,111,33)" rx="2" ry="2" />
<text  x="713.00" y="415.5" >[unknown] </text>
</g>
<g >
<title>arch_cpu_idle_enter (1 samples, 0.85%)</title><rect x="1030.0" y="517" width="10.0" height="15.0" fill="rgb(253,93,47)" rx="2" ry="2" />
<text  x="1033.00" y="527.5" ></text>
</g>
<g >
<title>do_idle (15 samples, 12.71%)</title><rect x="1030.0" y="533" width="150.0" height="15.0" fill="rgb(231,135,19)" rx="2" ry="2" />
<text  x="1033.00" y="543.5" >do_idle</text>
</g>
<g >
<title>intel_idle (1 samples, 0.85%)</title><rect x="1180.0" y="421" width="10.0" height="15.0" fill="rgb(252,5,46)" rx="2" ry="2" />
<text  x="1183.00" y="431.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.85%)</title><rect x="1020.0" y="213" width="10.0" height="15.0" fill="rgb(245,172,0)" rx="2" ry="2" />
<text  x="1023.00" y="223.5" ></text>
</g>
<g >
<title>n_tty_write (1 samples, 0.85%)</title><rect x="1020.0" y="293" width="10.0" height="15.0" fill="rgb(206,35,39)" rx="2" ry="2" />
<text  x="1023.00" y="303.5" ></text>
</g>
<g >
<title>cpuidle_enter (14 samples, 11.86%)</title><rect x="1040.0" y="501" width="140.0" height="15.0" fill="rgb(238,161,6)" rx="2" ry="2" />
<text  x="1043.00" y="511.5" >cpuidle_enter</text>
</g>
<g >
<title>__clone (1 samples, 0.85%)</title><rect x="990.0" y="581" width="10.0" height="15.0" fill="rgb(207,113,34)" rx="2" ry="2" />
<text  x="993.00" y="591.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.85%)</title><rect x="1040.0" y="469" width="10.0" height="15.0" fill="rgb(243,83,42)" rx="2" ry="2" />
<text  x="1043.00" y="479.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.85%)</title><rect x="940.0" y="117" width="10.0" height="15.0" fill="rgb(233,77,35)" rx="2" ry="2" />
<text  x="943.00" y="127.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.85%)</title><rect x="880.0" y="69" width="10.0" height="15.0" fill="rgb(206,3,39)" rx="2" ry="2" />
<text  x="883.00" y="79.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 0.85%)</title><rect x="1180.0" y="549" width="10.0" height="15.0" fill="rgb(248,75,17)" rx="2" ry="2" />
<text  x="1183.00" y="559.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.85%)</title><rect x="1000.0" y="533" width="10.0" height="15.0" fill="rgb(236,74,49)" rx="2" ry="2" />
<text  x="1003.00" y="543.5" ></text>
</g>
<g >
<title>generic_exec_single (64 samples, 54.24%)</title><rect x="20.0" y="325" width="640.0" height="15.0" fill="rgb(226,56,14)" rx="2" ry="2" />
<text  x="23.00" y="335.5" >generic_exec_single</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.85%)</title><rect x="1020.0" y="181" width="10.0" height="15.0" fill="rgb(222,9,3)" rx="2" ry="2" />
<text  x="1023.00" y="191.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 1.69%)</title><rect x="910.0" y="117" width="20.0" height="15.0" fill="rgb(244,126,22)" rx="2" ry="2" />
<text  x="913.00" y="127.5" ></text>
</g>
<g >
<title>lru_cache_add_anon (1 samples, 0.85%)</title><rect x="880.0" y="85" width="10.0" height="15.0" fill="rgb(210,217,3)" rx="2" ry="2" />
<text  x="883.00" y="95.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (24 samples, 20.34%)</title><rect x="710.0" y="277" width="240.0" height="15.0" fill="rgb(252,65,36)" rx="2" ry="2" />
<text  x="713.00" y="287.5" >NaClCopyExecutionContext</text>
</g>
<g >
<title>[unknown]  (25 samples, 21.19%)</title><rect x="710.0" y="421" width="250.0" height="15.0" fill="rgb(242,181,12)" rx="2" ry="2" />
<text  x="713.00" y="431.5" >[unknown] </text>
</g>
<g >
<title>handle_mm_fault (7 samples, 5.93%)</title><rect x="880.0" y="165" width="70.0" height="15.0" fill="rgb(213,30,39)" rx="2" ry="2" />
<text  x="883.00" y="175.5" >handle_..</text>
</g>
<g >
<title>NaClVmCopyEntry (6 samples, 5.08%)</title><rect x="710.0" y="229" width="60.0" height="15.0" fill="rgb(236,190,28)" rx="2" ry="2" />
<text  x="713.00" y="239.5" >NaClVm..</text>
</g>
<g >
<title>do_page_fault (1 samples, 0.85%)</title><rect x="1000.0" y="549" width="10.0" height="15.0" fill="rgb(250,197,28)" rx="2" ry="2" />
<text  x="1003.00" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.85%)</title><rect x="1020.0" y="373" width="10.0" height="15.0" fill="rgb(209,211,27)" rx="2" ry="2" />
<text  x="1023.00" y="383.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.85%)</title><rect x="1020.0" y="149" width="10.0" height="15.0" fill="rgb(245,180,38)" rx="2" ry="2" />
<text  x="1023.00" y="159.5" ></text>
</g>
<g >
<title>tuplesubscript.lto_priv.0 (1 samples, 0.85%)</title><rect x="960.0" y="549" width="10.0" height="15.0" fill="rgb(211,95,46)" rx="2" ry="2" />
<text  x="963.00" y="559.5" ></text>
</g>
<g >
<title>filemap_map_pages (2 samples, 1.69%)</title><rect x="930.0" y="133" width="20.0" height="15.0" fill="rgb(220,76,53)" rx="2" ry="2" />
<text  x="933.00" y="143.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 54.24%)</title><rect x="20.0" y="245" width="640.0" height="15.0" fill="rgb(207,8,44)" rx="2" ry="2" />
<text  x="23.00" y="255.5" >x86_pmu_enable</text>
</g>
<g >
<title>ctx_resched (64 samples, 54.24%)</title><rect x="20.0" y="261" width="640.0" height="15.0" fill="rgb(246,31,51)" rx="2" ry="2" />
<text  x="23.00" y="271.5" >ctx_resched</text>
</g>
<g >
<title>swapper (18 samples, 15.25%)</title><rect x="1010.0" y="597" width="180.0" height="15.0" fill="rgb(223,224,47)" rx="2" ry="2" />
<text  x="1013.00" y="607.5" >swapper</text>
</g>
<g >
<title>__libc_start_main (64 samples, 54.24%)</title><rect x="20.0" y="565" width="640.0" height="15.0" fill="rgb(226,87,21)" rx="2" ry="2" />
<text  x="23.00" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (64 samples, 54.24%)</title><rect x="20.0" y="213" width="640.0" height="15.0" fill="rgb(253,182,47)" rx="2" ry="2" />
<text  x="23.00" y="223.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>[unknown]  (25 samples, 21.19%)</title><rect x="710.0" y="485" width="250.0" height="15.0" fill="rgb(206,60,45)" rx="2" ry="2" />
<text  x="713.00" y="495.5" >[unknown] </text>
</g>
<g >
<title>do_page_fault (7 samples, 5.93%)</title><rect x="880.0" y="197" width="70.0" height="15.0" fill="rgb(222,122,33)" rx="2" ry="2" />
<text  x="883.00" y="207.5" >do_page..</text>
</g>
<g >
<title>[unknown]  (25 samples, 21.19%)</title><rect x="710.0" y="437" width="250.0" height="15.0" fill="rgb(209,128,37)" rx="2" ry="2" />
<text  x="713.00" y="447.5" >[unknown] </text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.85%)</title><rect x="1040.0" y="437" width="10.0" height="15.0" fill="rgb(254,106,41)" rx="2" ry="2" />
<text  x="1043.00" y="447.5" ></text>
</g>
<g >
<title>_perf_event_enable (64 samples, 54.24%)</title><rect x="20.0" y="373" width="640.0" height="15.0" fill="rgb(217,92,38)" rx="2" ry="2" />
<text  x="23.00" y="383.5" >_perf_event_enable</text>
</g>
<g >
<title>NaClSysForkDecoder (25 samples, 21.19%)</title><rect x="710.0" y="357" width="250.0" height="15.0" fill="rgb(216,52,48)" rx="2" ry="2" />
<text  x="713.00" y="367.5" >NaClSysForkDecoder</text>
</g>
<g >
<title>run_builtin (64 samples, 54.24%)</title><rect x="20.0" y="533" width="640.0" height="15.0" fill="rgb(254,202,9)" rx="2" ry="2" />
<text  x="23.00" y="543.5" >run_builtin</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.85%)</title><rect x="10.0" y="485" width="10.0" height="15.0" fill="rgb(239,6,12)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.85%)</title><rect x="660.0" y="469" width="10.0" height="15.0" fill="rgb(234,187,5)" rx="2" ry="2" />
<text  x="663.00" y="479.5" ></text>
</g>
<g >
<title>queue_work_on (1 samples, 0.85%)</title><rect x="1020.0" y="245" width="10.0" height="15.0" fill="rgb(246,81,1)" rx="2" ry="2" />
<text  x="1023.00" y="255.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (64 samples, 54.24%)</title><rect x="20.0" y="421" width="640.0" height="15.0" fill="rgb(214,99,0)" rx="2" ry="2" />
<text  x="23.00" y="431.5" >do_vfs_ioctl</text>
</g>
<g >
<title>[unknown]  (25 samples, 21.19%)</title><rect x="710.0" y="469" width="250.0" height="15.0" fill="rgb(223,185,2)" rx="2" ry="2" />
<text  x="713.00" y="479.5" >[unknown] </text>
</g>
<g >
<title>sh (1 samples, 0.85%)</title><rect x="1000.0" y="597" width="10.0" height="15.0" fill="rgb(244,133,24)" rx="2" ry="2" />
<text  x="1003.00" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.85%)</title><rect x="1020.0" y="421" width="10.0" height="15.0" fill="rgb(243,100,44)" rx="2" ry="2" />
<text  x="1023.00" y="431.5" ></text>
</g>
<g >
<title>NaClSysFork (25 samples, 21.19%)</title><rect x="710.0" y="341" width="250.0" height="15.0" fill="rgb(229,15,16)" rx="2" ry="2" />
<text  x="713.00" y="351.5" >NaClSysFork</text>
</g>
<g >
<title>__do_fault (2 samples, 1.69%)</title><rect x="880.0" y="133" width="20.0" height="15.0" fill="rgb(248,177,27)" rx="2" ry="2" />
<text  x="883.00" y="143.5" ></text>
</g>
<g >
<title>call_cpuidle (1 samples, 0.85%)</title><rect x="1180.0" y="469" width="10.0" height="15.0" fill="rgb(207,130,50)" rx="2" ry="2" />
<text  x="1183.00" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.85%)</title><rect x="1020.0" y="405" width="10.0" height="15.0" fill="rgb(210,94,13)" rx="2" ry="2" />
<text  x="1023.00" y="415.5" ></text>
</g>
</g>
</svg>
