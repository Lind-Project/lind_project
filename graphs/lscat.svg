<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>sys_getpid (1 samples, 0.97%)</title><rect x="1029.6" y="469" width="11.5" height="15.0" fill="rgb(232,129,51)" rx="2" ry="2" />
<text  x="1032.61" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.97%)</title><rect x="1144.2" y="453" width="11.4" height="15.0" fill="rgb(254,162,12)" rx="2" ry="2" />
<text  x="1147.17" y="463.5" ></text>
</g>
<g >
<title>try_to_free_buffers (1 samples, 0.97%)</title><rect x="960.9" y="101" width="11.4" height="15.0" fill="rgb(228,91,25)" rx="2" ry="2" />
<text  x="963.87" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.97%)</title><rect x="766.1" y="421" width="11.5" height="15.0" fill="rgb(207,55,41)" rx="2" ry="2" />
<text  x="769.12" y="431.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.97%)</title><rect x="754.7" y="325" width="11.4" height="15.0" fill="rgb(246,129,49)" rx="2" ry="2" />
<text  x="757.66" y="335.5" ></text>
</g>
<g >
<title>remote_function (63 samples, 61.17%)</title><rect x="32.9" y="245" width="721.8" height="15.0" fill="rgb(213,153,12)" rx="2" ry="2" />
<text  x="35.91" y="255.5" >remote_function</text>
</g>
<g >
<title>kthread (1 samples, 0.97%)</title><rect x="1041.1" y="501" width="11.4" height="15.0" fill="rgb(235,95,47)" rx="2" ry="2" />
<text  x="1044.07" y="511.5" ></text>
</g>
<g >
<title>shmem_evict_inode (3 samples, 2.91%)</title><rect x="983.8" y="261" width="34.4" height="15.0" fill="rgb(242,0,52)" rx="2" ry="2" />
<text  x="986.79" y="271.5" >sh..</text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 1.94%)</title><rect x="1052.5" y="405" width="22.9" height="15.0" fill="rgb(248,23,1)" rx="2" ry="2" />
<text  x="1055.52" y="415.5" >a..</text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.97%)</title><rect x="983.8" y="213" width="11.4" height="15.0" fill="rgb(220,89,19)" rx="2" ry="2" />
<text  x="986.79" y="223.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.97%)</title><rect x="1018.2" y="213" width="11.4" height="15.0" fill="rgb(223,212,50)" rx="2" ry="2" />
<text  x="1021.16" y="223.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (15 samples, 14.56%)</title><rect x="789.0" y="309" width="171.9" height="15.0" fill="rgb(210,173,23)" rx="2" ry="2" />
<text  x="792.03" y="319.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 1.94%)</title><rect x="915.0" y="69" width="23.0" height="15.0" fill="rgb(207,157,51)" rx="2" ry="2" />
<text  x="918.05" y="79.5" >a..</text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.97%)</title><rect x="1041.1" y="517" width="11.4" height="15.0" fill="rgb(246,206,36)" rx="2" ry="2" />
<text  x="1044.07" y="527.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (3 samples, 2.91%)</title><rect x="983.8" y="309" width="34.4" height="15.0" fill="rgb(229,188,20)" rx="2" ry="2" />
<text  x="986.79" y="319.5" >de..</text>
</g>
<g >
<title>copy_strings.isra.26 (1 samples, 0.97%)</title><rect x="10.0" y="421" width="11.5" height="15.0" fill="rgb(214,190,5)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>[unknown]  (15 samples, 14.56%)</title><rect x="789.0" y="421" width="171.9" height="15.0" fill="rgb(227,123,26)" rx="2" ry="2" />
<text  x="792.03" y="431.5" >[unknown] </text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.97%)</title><rect x="960.9" y="309" width="11.4" height="15.0" fill="rgb(226,161,8)" rx="2" ry="2" />
<text  x="963.87" y="319.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (63 samples, 61.17%)</title><rect x="32.9" y="325" width="721.8" height="15.0" fill="rgb(238,226,24)" rx="2" ry="2" />
<text  x="35.91" y="335.5" >perf_event_for_each_child</text>
</g>
<g >
<title>ctx_resched (63 samples, 61.17%)</title><rect x="32.9" y="197" width="721.8" height="15.0" fill="rgb(214,28,31)" rx="2" ry="2" />
<text  x="35.91" y="207.5" >ctx_resched</text>
</g>
<g >
<title>sys_execve (1 samples, 0.97%)</title><rect x="972.3" y="453" width="11.5" height="15.0" fill="rgb(222,181,12)" rx="2" ry="2" />
<text  x="975.33" y="463.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3 samples, 2.91%)</title><rect x="1155.6" y="437" width="34.4" height="15.0" fill="rgb(207,179,19)" rx="2" ry="2" />
<text  x="1158.63" y="447.5" >cp..</text>
</g>
<g >
<title>_perf_event_enable (63 samples, 61.17%)</title><rect x="32.9" y="309" width="721.8" height="15.0" fill="rgb(220,120,6)" rx="2" ry="2" />
<text  x="35.91" y="319.5" >_perf_event_enable</text>
</g>
<g >
<title>swapper (15 samples, 14.56%)</title><rect x="1018.2" y="533" width="171.8" height="15.0" fill="rgb(206,13,14)" rx="2" ry="2" />
<text  x="1021.16" y="543.5" >swapper</text>
</g>
<g >
<title>do_syscall_64 (3 samples, 2.91%)</title><rect x="983.8" y="501" width="34.4" height="15.0" fill="rgb(246,70,34)" rx="2" ry="2" />
<text  x="986.79" y="511.5" >do..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.97%)</title><rect x="972.3" y="485" width="11.5" height="15.0" fill="rgb(211,104,51)" rx="2" ry="2" />
<text  x="975.33" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.97%)</title><rect x="960.9" y="485" width="11.4" height="15.0" fill="rgb(241,70,41)" rx="2" ry="2" />
<text  x="963.87" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="437" width="11.4" height="15.0" fill="rgb(246,95,6)" rx="2" ry="2" />
<text  x="1021.16" y="447.5" ></text>
</g>
<g >
<title>__GI___unlink (1 samples, 0.97%)</title><rect x="960.9" y="501" width="11.4" height="15.0" fill="rgb(243,42,40)" rx="2" ry="2" />
<text  x="963.87" y="511.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.97%)</title><rect x="766.1" y="373" width="11.5" height="15.0" fill="rgb(232,145,33)" rx="2" ry="2" />
<text  x="769.12" y="383.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.97%)</title><rect x="983.8" y="181" width="11.4" height="15.0" fill="rgb(231,173,14)" rx="2" ry="2" />
<text  x="986.79" y="191.5" ></text>
</g>
<g >
<title>perf_mmap__read_head (1 samples, 0.97%)</title><rect x="754.7" y="405" width="11.4" height="15.0" fill="rgb(250,199,31)" rx="2" ry="2" />
<text  x="757.66" y="415.5" ></text>
</g>
<g >
<title>perf_mmap__push (1 samples, 0.97%)</title><rect x="754.7" y="421" width="11.4" height="15.0" fill="rgb(216,11,0)" rx="2" ry="2" />
<text  x="757.66" y="431.5" ></text>
</g>
<g >
<title>destroy_inode (1 samples, 0.97%)</title><rect x="960.9" y="389" width="11.4" height="15.0" fill="rgb(252,11,22)" rx="2" ry="2" />
<text  x="963.87" y="399.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 0.97%)</title><rect x="766.1" y="469" width="11.5" height="15.0" fill="rgb(233,55,23)" rx="2" ry="2" />
<text  x="769.12" y="479.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (8 samples, 7.77%)</title><rect x="1052.5" y="421" width="91.7" height="15.0" fill="rgb(229,41,28)" rx="2" ry="2" />
<text  x="1055.52" y="431.5" >cpuidle_en..</text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.97%)</title><rect x="1052.5" y="245" width="11.5" height="15.0" fill="rgb(209,31,4)" rx="2" ry="2" />
<text  x="1055.52" y="255.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.97%)</title><rect x="960.9" y="405" width="11.4" height="15.0" fill="rgb(205,45,21)" rx="2" ry="2" />
<text  x="963.87" y="415.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (3 samples, 2.91%)</title><rect x="983.8" y="485" width="34.4" height="15.0" fill="rgb(233,179,3)" rx="2" ry="2" />
<text  x="986.79" y="495.5" >ex..</text>
</g>
<g >
<title>perf_evlist__prepare_workload (1 samples, 0.97%)</title><rect x="766.1" y="453" width="11.5" height="15.0" fill="rgb(236,41,53)" rx="2" ry="2" />
<text  x="769.12" y="463.5" ></text>
</g>
<g >
<title>get_signal (3 samples, 2.91%)</title><rect x="983.8" y="453" width="34.4" height="15.0" fill="rgb(235,1,10)" rx="2" ry="2" />
<text  x="986.79" y="463.5" >ge..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.97%)</title><rect x="1018.2" y="245" width="11.4" height="15.0" fill="rgb(224,184,51)" rx="2" ry="2" />
<text  x="1021.16" y="255.5" ></text>
</g>
<g >
<title>do_exit (3 samples, 2.91%)</title><rect x="983.8" y="421" width="34.4" height="15.0" fill="rgb(227,178,41)" rx="2" ry="2" />
<text  x="986.79" y="431.5" >do..</text>
</g>
<g >
<title>__perf_event_enable (63 samples, 61.17%)</title><rect x="32.9" y="213" width="721.8" height="15.0" fill="rgb(227,38,11)" rx="2" ry="2" />
<text  x="35.91" y="223.5" >__perf_event_enable</text>
</g>
<g >
<title>do_page_fault (7 samples, 6.80%)</title><rect x="880.7" y="133" width="80.2" height="15.0" fill="rgb(248,138,52)" rx="2" ry="2" />
<text  x="883.68" y="143.5" >do_page_f..</text>
</g>
<g >
<title>do_vfs_ioctl (63 samples, 61.17%)</title><rect x="32.9" y="357" width="721.8" height="15.0" fill="rgb(215,197,4)" rx="2" ry="2" />
<text  x="35.91" y="367.5" >do_vfs_ioctl</text>
</g>
<g >
<title>dput (1 samples, 0.97%)</title><rect x="960.9" y="357" width="11.4" height="15.0" fill="rgb(243,72,2)" rx="2" ry="2" />
<text  x="963.87" y="367.5" ></text>
</g>
<g >
<title>NaClPatchAddr (4 samples, 3.88%)</title><rect x="789.0" y="149" width="45.9" height="15.0" fill="rgb(237,209,8)" rx="2" ry="2" />
<text  x="792.03" y="159.5" >NaCl..</text>
</g>
<g >
<title>sys_unlink (1 samples, 0.97%)</title><rect x="960.9" y="453" width="11.4" height="15.0" fill="rgb(251,122,30)" rx="2" ry="2" />
<text  x="963.87" y="463.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.97%)</title><rect x="32.9" y="181" width="11.5" height="15.0" fill="rgb(210,69,14)" rx="2" ry="2" />
<text  x="35.91" y="191.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.97%)</title><rect x="1064.0" y="341" width="11.4" height="15.0" fill="rgb(247,181,13)" rx="2" ry="2" />
<text  x="1066.98" y="351.5" ></text>
</g>
<g >
<title>[unknown]  (15 samples, 14.56%)</title><rect x="789.0" y="469" width="171.9" height="15.0" fill="rgb(253,121,42)" rx="2" ry="2" />
<text  x="792.03" y="479.5" >[unknown] </text>
</g>
<g >
<title>native_write_msr (47 samples, 45.63%)</title><rect x="55.8" y="133" width="538.5" height="15.0" fill="rgb(244,158,52)" rx="2" ry="2" />
<text  x="58.83" y="143.5" >native_write_msr</text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="469" width="11.4" height="15.0" fill="rgb(235,221,48)" rx="2" ry="2" />
<text  x="1021.16" y="479.5" ></text>
</g>
<g >
<title>filemap_map_pages (2 samples, 1.94%)</title><rect x="938.0" y="69" width="22.9" height="15.0" fill="rgb(253,7,7)" rx="2" ry="2" />
<text  x="940.96" y="79.5" >f..</text>
</g>
<g >
<title>intel_idle (6 samples, 5.83%)</title><rect x="1075.4" y="405" width="68.8" height="15.0" fill="rgb(251,123,11)" rx="2" ry="2" />
<text  x="1078.44" y="415.5" >intel_i..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="341" width="11.4" height="15.0" fill="rgb(243,108,40)" rx="2" ry="2" />
<text  x="1021.16" y="351.5" ></text>
</g>
<g >
<title>truncate_inode_page (1 samples, 0.97%)</title><rect x="995.2" y="213" width="11.5" height="15.0" fill="rgb(245,121,35)" rx="2" ry="2" />
<text  x="998.24" y="223.5" ></text>
</g>
<g >
<title>run_builtin (1 samples, 0.97%)</title><rect x="766.1" y="485" width="11.5" height="15.0" fill="rgb(212,180,50)" rx="2" ry="2" />
<text  x="769.12" y="495.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (1 samples, 0.97%)</title><rect x="960.9" y="213" width="11.4" height="15.0" fill="rgb(216,21,44)" rx="2" ry="2" />
<text  x="963.87" y="223.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="453" width="11.4" height="15.0" fill="rgb(225,122,11)" rx="2" ry="2" />
<text  x="1021.16" y="463.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist.constprop.0 (1 samples, 0.97%)</title><rect x="754.7" y="437" width="11.4" height="15.0" fill="rgb(248,190,43)" rx="2" ry="2" />
<text  x="757.66" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="309" width="11.4" height="15.0" fill="rgb(228,213,2)" rx="2" ry="2" />
<text  x="1021.16" y="319.5" ></text>
</g>
<g >
<title>shmem_truncate_range (3 samples, 2.91%)</title><rect x="983.8" y="245" width="34.4" height="15.0" fill="rgb(209,15,39)" rx="2" ry="2" />
<text  x="986.79" y="255.5" >sh..</text>
</g>
<g >
<title>__do_page_fault (7 samples, 6.80%)</title><rect x="880.7" y="117" width="80.2" height="15.0" fill="rgb(226,180,50)" rx="2" ry="2" />
<text  x="883.68" y="127.5" >__do_page..</text>
</g>
<g >
<title>__cancel_dirty_page (1 samples, 0.97%)</title><rect x="960.9" y="85" width="11.4" height="15.0" fill="rgb(228,124,12)" rx="2" ry="2" />
<text  x="963.87" y="95.5" ></text>
</g>
<g >
<title>main (64 samples, 62.14%)</title><rect x="32.9" y="485" width="733.2" height="15.0" fill="rgb(220,160,43)" rx="2" ry="2" />
<text  x="35.91" y="495.5" >main</text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.97%)</title><rect x="972.3" y="405" width="11.5" height="15.0" fill="rgb(213,78,6)" rx="2" ry="2" />
<text  x="975.33" y="415.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (1 samples, 0.97%)</title><rect x="960.9" y="373" width="11.4" height="15.0" fill="rgb(229,74,46)" rx="2" ry="2" />
<text  x="963.87" y="383.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.97%)</title><rect x="1052.5" y="277" width="11.5" height="15.0" fill="rgb(208,199,40)" rx="2" ry="2" />
<text  x="1055.52" y="287.5" ></text>
</g>
<g >
<title>[unknown]  (15 samples, 14.56%)</title><rect x="789.0" y="373" width="171.9" height="15.0" fill="rgb(240,39,22)" rx="2" ry="2" />
<text  x="792.03" y="383.5" >[unknown] </text>
</g>
<g >
<title>[unknown] (15 samples, 14.56%)</title><rect x="789.0" y="501" width="171.9" height="15.0" fill="rgb(233,190,28)" rx="2" ry="2" />
<text  x="792.03" y="511.5" >[unknown]</text>
</g>
<g >
<title>page_fault (7 samples, 6.80%)</title><rect x="880.7" y="149" width="80.2" height="15.0" fill="rgb(214,199,36)" rx="2" ry="2" />
<text  x="883.68" y="159.5" >page_fault</text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.97%)</title><rect x="754.7" y="357" width="11.4" height="15.0" fill="rgb(217,68,43)" rx="2" ry="2" />
<text  x="757.66" y="367.5" ></text>
</g>
<g >
<title>start_secondary (9 samples, 8.74%)</title><rect x="1052.5" y="501" width="103.1" height="15.0" fill="rgb(235,69,43)" rx="2" ry="2" />
<text  x="1055.52" y="511.5" >start_second..</text>
</g>
<g >
<title>do_signal (3 samples, 2.91%)</title><rect x="983.8" y="469" width="34.4" height="15.0" fill="rgb(242,159,3)" rx="2" ry="2" />
<text  x="986.79" y="479.5" >do..</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.97%)</title><rect x="1052.5" y="309" width="11.5" height="15.0" fill="rgb(223,101,32)" rx="2" ry="2" />
<text  x="1055.52" y="319.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.97%)</title><rect x="10.0" y="437" width="11.5" height="15.0" fill="rgb(245,32,45)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>NaClVmCopyEntry (4 samples, 3.88%)</title><rect x="789.0" y="165" width="45.9" height="15.0" fill="rgb(237,25,49)" rx="2" ry="2" />
<text  x="792.03" y="175.5" >NaCl..</text>
</g>
<g >
<title>__delete_from_page_cache (1 samples, 0.97%)</title><rect x="995.2" y="181" width="11.5" height="15.0" fill="rgb(224,105,27)" rx="2" ry="2" />
<text  x="998.24" y="191.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.97%)</title><rect x="903.6" y="37" width="11.4" height="15.0" fill="rgb(232,71,35)" rx="2" ry="2" />
<text  x="906.59" y="47.5" ></text>
</g>
<g >
<title>__GI___ioctl (63 samples, 61.17%)</title><rect x="32.9" y="421" width="721.8" height="15.0" fill="rgb(217,91,35)" rx="2" ry="2" />
<text  x="35.91" y="431.5" >__GI___ioctl</text>
</g>
<g >
<title>iput (1 samples, 0.97%)</title><rect x="960.9" y="293" width="11.4" height="15.0" fill="rgb(206,219,18)" rx="2" ry="2" />
<text  x="963.87" y="303.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.97%)</title><rect x="754.7" y="389" width="11.4" height="15.0" fill="rgb(254,151,37)" rx="2" ry="2" />
<text  x="757.66" y="399.5" ></text>
</g>
<g >
<title>[unknown]  (15 samples, 14.56%)</title><rect x="789.0" y="389" width="171.9" height="15.0" fill="rgb(209,59,30)" rx="2" ry="2" />
<text  x="792.03" y="399.5" >[unknown] </text>
</g>
<g >
<title>try_to_release_page (1 samples, 0.97%)</title><rect x="960.9" y="149" width="11.4" height="15.0" fill="rgb(240,141,33)" rx="2" ry="2" />
<text  x="963.87" y="159.5" ></text>
</g>
<g >
<title>intel_idle (3 samples, 2.91%)</title><rect x="1155.6" y="357" width="34.4" height="15.0" fill="rgb(254,223,47)" rx="2" ry="2" />
<text  x="1158.63" y="367.5" >in..</text>
</g>
<g >
<title>perf_ioctl (63 samples, 61.17%)</title><rect x="32.9" y="341" width="721.8" height="15.0" fill="rgb(251,106,42)" rx="2" ry="2" />
<text  x="35.91" y="351.5" >perf_ioctl</text>
</g>
<g >
<title>ext4_evict_inode (1 samples, 0.97%)</title><rect x="960.9" y="261" width="11.4" height="15.0" fill="rgb(250,44,49)" rx="2" ry="2" />
<text  x="963.87" y="271.5" ></text>
</g>
<g >
<title>sel_ldr (21 samples, 20.39%)</title><rect x="777.6" y="533" width="240.6" height="15.0" fill="rgb(207,138,13)" rx="2" ry="2" />
<text  x="780.57" y="543.5" >sel_ldr</text>
</g>
<g >
<title>do_idle (9 samples, 8.74%)</title><rect x="1052.5" y="469" width="103.1" height="15.0" fill="rgb(229,75,9)" rx="2" ry="2" />
<text  x="1055.52" y="479.5" >do_idle</text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.97%)</title><rect x="972.3" y="437" width="11.5" height="15.0" fill="rgb(231,28,30)" rx="2" ry="2" />
<text  x="975.33" y="447.5" ></text>
</g>
<g >
<title>__fput (3 samples, 2.91%)</title><rect x="983.8" y="373" width="34.4" height="15.0" fill="rgb(225,135,49)" rx="2" ry="2" />
<text  x="986.79" y="383.5" >__..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 1.94%)</title><rect x="1052.5" y="389" width="22.9" height="15.0" fill="rgb(220,112,30)" rx="2" ry="2" />
<text  x="1055.52" y="399.5" >s..</text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.97%)</title><rect x="1064.0" y="277" width="11.4" height="15.0" fill="rgb(239,173,1)" rx="2" ry="2" />
<text  x="1066.98" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 6.80%)</title><rect x="880.7" y="101" width="80.2" height="15.0" fill="rgb(205,89,11)" rx="2" ry="2" />
<text  x="883.68" y="111.5" >handle_mm..</text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.97%)</title><rect x="1052.5" y="293" width="11.5" height="15.0" fill="rgb(223,188,36)" rx="2" ry="2" />
<text  x="1055.52" y="303.5" ></text>
</g>
<g >
<title>sys_ioctl (63 samples, 61.17%)</title><rect x="32.9" y="373" width="721.8" height="15.0" fill="rgb(225,49,50)" rx="2" ry="2" />
<text  x="35.91" y="383.5" >sys_ioctl</text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="421" width="11.4" height="15.0" fill="rgb(234,215,34)" rx="2" ry="2" />
<text  x="1021.16" y="431.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (62 samples, 60.19%)</title><rect x="44.4" y="149" width="710.3" height="15.0" fill="rgb(218,107,9)" rx="2" ry="2" />
<text  x="47.37" y="159.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>sys_futex (1 samples, 0.97%)</title><rect x="1018.2" y="229" width="11.4" height="15.0" fill="rgb(221,17,11)" rx="2" ry="2" />
<text  x="1021.16" y="239.5" ></text>
</g>
<g >
<title>x86_pmu_enable (62 samples, 60.19%)</title><rect x="44.4" y="181" width="710.3" height="15.0" fill="rgb(251,22,2)" rx="2" ry="2" />
<text  x="47.37" y="191.5" >x86_pmu_enable</text>
</g>
<g >
<title>intel_pmu_enable_all (62 samples, 60.19%)</title><rect x="44.4" y="165" width="710.3" height="15.0" fill="rgb(245,161,32)" rx="2" ry="2" />
<text  x="47.37" y="175.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>run_builtin (64 samples, 62.14%)</title><rect x="32.9" y="469" width="733.2" height="15.0" fill="rgb(233,75,20)" rx="2" ry="2" />
<text  x="35.91" y="479.5" >run_builtin</text>
</g>
<g >
<title>cpuidle_enter_state (3 samples, 2.91%)</title><rect x="1155.6" y="373" width="34.4" height="15.0" fill="rgb(221,124,51)" rx="2" ry="2" />
<text  x="1158.63" y="383.5" >cp..</text>
</g>
<g >
<title>cpuidle_enter (3 samples, 2.91%)</title><rect x="1155.6" y="389" width="34.4" height="15.0" fill="rgb(208,184,42)" rx="2" ry="2" />
<text  x="1158.63" y="399.5" >cp..</text>
</g>
<g >
<title>cpuidle_enter (8 samples, 7.77%)</title><rect x="1052.5" y="437" width="91.7" height="15.0" fill="rgb(246,19,5)" rx="2" ry="2" />
<text  x="1055.52" y="447.5" >cpuidle_en..</text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.97%)</title><rect x="1041.1" y="485" width="11.4" height="15.0" fill="rgb(243,161,12)" rx="2" ry="2" />
<text  x="1044.07" y="495.5" ></text>
</g>
<g >
<title>generic_exec_single (63 samples, 61.17%)</title><rect x="32.9" y="261" width="721.8" height="15.0" fill="rgb(254,115,34)" rx="2" ry="2" />
<text  x="35.91" y="271.5" >generic_exec_single</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.97%)</title><rect x="1064.0" y="325" width="11.4" height="15.0" fill="rgb(244,42,38)" rx="2" ry="2" />
<text  x="1066.98" y="335.5" ></text>
</g>
<g >
<title>sys_execve (1 samples, 0.97%)</title><rect x="10.0" y="453" width="11.5" height="15.0" fill="rgb(242,112,37)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (1 samples, 0.97%)</title><rect x="960.9" y="117" width="11.4" height="15.0" fill="rgb(231,184,14)" rx="2" ry="2" />
<text  x="963.87" y="127.5" ></text>
</g>
<g >
<title>dput.part.26 (1 samples, 0.97%)</title><rect x="960.9" y="341" width="11.4" height="15.0" fill="rgb(227,133,43)" rx="2" ry="2" />
<text  x="963.87" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.97%)</title><rect x="754.7" y="341" width="11.4" height="15.0" fill="rgb(229,34,33)" rx="2" ry="2" />
<text  x="757.66" y="351.5" ></text>
</g>
<g >
<title>call_cpuidle (3 samples, 2.91%)</title><rect x="1155.6" y="405" width="34.4" height="15.0" fill="rgb(252,3,43)" rx="2" ry="2" />
<text  x="1158.63" y="415.5" >ca..</text>
</g>
<g >
<title>evict (3 samples, 2.91%)</title><rect x="983.8" y="277" width="34.4" height="15.0" fill="rgb(237,20,3)" rx="2" ry="2" />
<text  x="986.79" y="287.5" >ev..</text>
</g>
<g >
<title>__GI___execve (1 samples, 0.97%)</title><rect x="766.1" y="437" width="11.5" height="15.0" fill="rgb(235,162,44)" rx="2" ry="2" />
<text  x="769.12" y="447.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 63.11%)</title><rect x="21.5" y="517" width="744.6" height="15.0" fill="rgb(221,148,47)" rx="2" ry="2" />
<text  x="24.46" y="527.5" >[unknown]</text>
</g>
<g >
<title>cmd_record (64 samples, 62.14%)</title><rect x="32.9" y="453" width="733.2" height="15.0" fill="rgb(220,32,19)" rx="2" ry="2" />
<text  x="35.91" y="463.5" >cmd_record</text>
</g>
<g >
<title>kthread_should_stop (1 samples, 0.97%)</title><rect x="1041.1" y="469" width="11.4" height="15.0" fill="rgb(226,124,50)" rx="2" ry="2" />
<text  x="1044.07" y="479.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (1 samples, 0.97%)</title><rect x="1029.6" y="453" width="11.5" height="15.0" fill="rgb(239,2,12)" rx="2" ry="2" />
<text  x="1032.61" y="463.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.97%)</title><rect x="903.6" y="53" width="11.4" height="15.0" fill="rgb(250,178,2)" rx="2" ry="2" />
<text  x="906.59" y="63.5" ></text>
</g>
<g >
<title>copy_strings.isra.26 (1 samples, 0.97%)</title><rect x="972.3" y="421" width="11.5" height="15.0" fill="rgb(232,157,2)" rx="2" ry="2" />
<text  x="975.33" y="431.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.97%)</title><rect x="766.1" y="517" width="11.5" height="15.0" fill="rgb(244,147,30)" rx="2" ry="2" />
<text  x="769.12" y="527.5" ></text>
</g>
<g >
<title>NaClSysFork (15 samples, 14.56%)</title><rect x="789.0" y="277" width="171.9" height="15.0" fill="rgb(224,36,28)" rx="2" ry="2" />
<text  x="792.03" y="287.5" >NaClSysFork</text>
</g>
<g >
<title>PyString_Concat (1 samples, 0.97%)</title><rect x="777.6" y="501" width="11.4" height="15.0" fill="rgb(243,86,54)" rx="2" ry="2" />
<text  x="780.57" y="511.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (3 samples, 2.91%)</title><rect x="1155.6" y="485" width="34.4" height="15.0" fill="rgb(213,111,29)" rx="2" ry="2" />
<text  x="1158.63" y="495.5" >x8..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.97%)</title><rect x="960.9" y="469" width="11.4" height="15.0" fill="rgb(242,119,20)" rx="2" ry="2" />
<text  x="963.87" y="479.5" ></text>
</g>
<g >
<title>__tick_nohz_idle_enter (1 samples, 0.97%)</title><rect x="1144.2" y="437" width="11.4" height="15.0" fill="rgb(205,130,12)" rx="2" ry="2" />
<text  x="1147.17" y="447.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.97%)</title><rect x="960.9" y="421" width="11.4" height="15.0" fill="rgb(223,38,23)" rx="2" ry="2" />
<text  x="963.87" y="431.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.97%)</title><rect x="1006.7" y="213" width="11.5" height="15.0" fill="rgb(241,187,12)" rx="2" ry="2" />
<text  x="1009.70" y="223.5" ></text>
</g>
<g >
<title>__clone (1 samples, 0.97%)</title><rect x="972.3" y="517" width="11.5" height="15.0" fill="rgb(239,213,34)" rx="2" ry="2" />
<text  x="975.33" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.97%)</title><rect x="10.0" y="469" width="11.5" height="15.0" fill="rgb(236,26,29)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (1 samples, 0.97%)</title><rect x="960.9" y="245" width="11.4" height="15.0" fill="rgb(224,58,26)" rx="2" ry="2" />
<text  x="963.87" y="255.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.97%)</title><rect x="1052.5" y="261" width="11.5" height="15.0" fill="rgb(239,151,1)" rx="2" ry="2" />
<text  x="1055.52" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.97%)</title><rect x="972.3" y="469" width="11.5" height="15.0" fill="rgb(242,210,28)" rx="2" ry="2" />
<text  x="975.33" y="479.5" ></text>
</g>
<g >
<title>call_cpuidle (8 samples, 7.77%)</title><rect x="1052.5" y="453" width="91.7" height="15.0" fill="rgb(206,203,43)" rx="2" ry="2" />
<text  x="1055.52" y="463.5" >call_cpuidle</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.97%)</title><rect x="766.1" y="405" width="11.5" height="15.0" fill="rgb(244,69,23)" rx="2" ry="2" />
<text  x="769.12" y="415.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="373" width="11.4" height="15.0" fill="rgb(212,87,44)" rx="2" ry="2" />
<text  x="1021.16" y="383.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.97%)</title><rect x="1064.0" y="293" width="11.4" height="15.0" fill="rgb(210,91,1)" rx="2" ry="2" />
<text  x="1066.98" y="303.5" ></text>
</g>
<g >
<title>nmi_restore (14 samples, 13.59%)</title><rect x="594.3" y="133" width="160.4" height="15.0" fill="rgb(226,49,45)" rx="2" ry="2" />
<text  x="597.27" y="143.5" >nmi_restore</text>
</g>
<g >
<title>wake_up_process (1 samples, 0.97%)</title><rect x="1052.5" y="325" width="11.5" height="15.0" fill="rgb(209,25,19)" rx="2" ry="2" />
<text  x="1055.52" y="335.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="405" width="11.4" height="15.0" fill="rgb(251,205,28)" rx="2" ry="2" />
<text  x="1021.16" y="415.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.97%)</title><rect x="766.1" y="325" width="11.5" height="15.0" fill="rgb(252,32,48)" rx="2" ry="2" />
<text  x="769.12" y="335.5" ></text>
</g>
<g >
<title>dput.part.26 (3 samples, 2.91%)</title><rect x="983.8" y="341" width="34.4" height="15.0" fill="rgb(220,128,30)" rx="2" ry="2" />
<text  x="986.79" y="351.5" >dp..</text>
</g>
<g >
<title>ext4_da_invalidatepage (1 samples, 0.97%)</title><rect x="960.9" y="197" width="11.4" height="15.0" fill="rgb(214,35,22)" rx="2" ry="2" />
<text  x="963.87" y="207.5" ></text>
</g>
<g >
<title>native_irq_return_iret (2 samples, 1.94%)</title><rect x="857.8" y="149" width="22.9" height="15.0" fill="rgb(207,184,31)" rx="2" ry="2" />
<text  x="860.77" y="159.5" >n..</text>
</g>
<g >
<title>iput (3 samples, 2.91%)</title><rect x="983.8" y="293" width="34.4" height="15.0" fill="rgb(214,219,4)" rx="2" ry="2" />
<text  x="986.79" y="303.5" >iput</text>
</g>
<g >
<title>error_entry (2 samples, 1.94%)</title><rect x="834.9" y="149" width="22.9" height="15.0" fill="rgb(237,166,45)" rx="2" ry="2" />
<text  x="837.85" y="159.5" >e..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="357" width="11.4" height="15.0" fill="rgb(218,19,8)" rx="2" ry="2" />
<text  x="1021.16" y="367.5" ></text>
</g>
<g >
<title>[perf-1855.map] (15 samples, 14.56%)</title><rect x="789.0" y="485" width="171.9" height="15.0" fill="rgb(211,119,18)" rx="2" ry="2" />
<text  x="792.03" y="495.5" >[perf-1855.map]</text>
</g>
<g >
<title>NaClSysForkDecoder (15 samples, 14.56%)</title><rect x="789.0" y="293" width="171.9" height="15.0" fill="rgb(234,12,7)" rx="2" ry="2" />
<text  x="792.03" y="303.5" >NaClSysForkDecoder</text>
</g>
<g >
<title>put_filp (1 samples, 0.97%)</title><rect x="766.1" y="309" width="11.5" height="15.0" fill="rgb(252,179,8)" rx="2" ry="2" />
<text  x="769.12" y="319.5" ></text>
</g>
<g >
<title>event_function_call (63 samples, 61.17%)</title><rect x="32.9" y="293" width="721.8" height="15.0" fill="rgb(208,116,23)" rx="2" ry="2" />
<text  x="35.91" y="303.5" >event_function_call</text>
</g>
<g >
<title>secondary_startup_64 (12 samples, 11.65%)</title><rect x="1052.5" y="517" width="137.5" height="15.0" fill="rgb(225,167,20)" rx="2" ry="2" />
<text  x="1055.52" y="527.5" >secondary_startup..</text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.97%)</title><rect x="960.9" y="437" width="11.4" height="15.0" fill="rgb(236,3,9)" rx="2" ry="2" />
<text  x="963.87" y="447.5" ></text>
</g>
<g >
<title>evlist__enable (63 samples, 61.17%)</title><rect x="32.9" y="437" width="721.8" height="15.0" fill="rgb(223,206,50)" rx="2" ry="2" />
<text  x="35.91" y="447.5" >evlist__enable</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (11 samples, 10.68%)</title><rect x="834.9" y="165" width="126.0" height="15.0" fill="rgb(230,157,41)" rx="2" ry="2" />
<text  x="837.85" y="175.5" >__memmove_avx_u..</text>
</g>
<g >
<title>finish_fault (1 samples, 0.97%)</title><rect x="754.7" y="309" width="11.4" height="15.0" fill="rgb(242,175,51)" rx="2" ry="2" />
<text  x="757.66" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.97%)</title><rect x="1029.6" y="485" width="11.5" height="15.0" fill="rgb(237,152,22)" rx="2" ry="2" />
<text  x="1032.61" y="495.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (15 samples, 14.56%)</title><rect x="789.0" y="213" width="171.9" height="15.0" fill="rgb(251,148,5)" rx="2" ry="2" />
<text  x="792.03" y="223.5" >NaClCopyExecutionContext</text>
</g>
<g >
<title>do_open_execat (1 samples, 0.97%)</title><rect x="766.1" y="357" width="11.5" height="15.0" fill="rgb(243,139,10)" rx="2" ry="2" />
<text  x="769.12" y="367.5" ></text>
</g>
<g >
<title>__dentry_kill (3 samples, 2.91%)</title><rect x="983.8" y="325" width="34.4" height="15.0" fill="rgb(215,38,52)" rx="2" ry="2" />
<text  x="986.79" y="335.5" >__..</text>
</g>
<g >
<title>ext4_releasepage (1 samples, 0.97%)</title><rect x="960.9" y="133" width="11.4" height="15.0" fill="rgb(220,144,6)" rx="2" ry="2" />
<text  x="963.87" y="143.5" ></text>
</g>
<g >
<title>all (103 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(212,177,33)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>[unknown]  (15 samples, 14.56%)</title><rect x="789.0" y="405" width="171.9" height="15.0" fill="rgb(214,188,9)" rx="2" ry="2" />
<text  x="792.03" y="415.5" >[unknown] </text>
</g>
<g >
<title>do_idle (3 samples, 2.91%)</title><rect x="1155.6" y="421" width="34.4" height="15.0" fill="rgb(217,130,31)" rx="2" ry="2" />
<text  x="1158.63" y="431.5" >do..</text>
</g>
<g >
<title>NaClVmmapVisit (15 samples, 14.56%)</title><rect x="789.0" y="181" width="171.9" height="15.0" fill="rgb(242,70,40)" rx="2" ry="2" />
<text  x="792.03" y="191.5" >NaClVmmapVisit</text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 1.94%)</title><rect x="1052.5" y="373" width="22.9" height="15.0" fill="rgb(247,211,14)" rx="2" ry="2" />
<text  x="1055.52" y="383.5" >h..</text>
</g>
<g >
<title>__GI___execve (1 samples, 0.97%)</title><rect x="10.0" y="501" width="11.5" height="15.0" fill="rgb(214,9,26)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.97%)</title><rect x="766.1" y="341" width="11.5" height="15.0" fill="rgb(211,69,52)" rx="2" ry="2" />
<text  x="769.12" y="351.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.97%)</title><rect x="846.3" y="133" width="11.5" height="15.0" fill="rgb(254,65,44)" rx="2" ry="2" />
<text  x="849.31" y="143.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.97%)</title><rect x="983.8" y="165" width="11.4" height="15.0" fill="rgb(225,103,24)" rx="2" ry="2" />
<text  x="986.79" y="175.5" ></text>
</g>
<g >
<title>__GI___execve (1 samples, 0.97%)</title><rect x="972.3" y="501" width="11.5" height="15.0" fill="rgb(240,211,33)" rx="2" ry="2" />
<text  x="975.33" y="511.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 16.50%)</title><rect x="777.6" y="517" width="194.7" height="15.0" fill="rgb(231,41,23)" rx="2" ry="2" />
<text  x="780.57" y="527.5" >[unknown]</text>
</g>
<g >
<title>do_page_fault (1 samples, 0.97%)</title><rect x="754.7" y="373" width="11.4" height="15.0" fill="rgb(219,29,25)" rx="2" ry="2" />
<text  x="757.66" y="383.5" ></text>
</g>
<g >
<title>NaClForkThreadContextSetup (15 samples, 14.56%)</title><rect x="789.0" y="229" width="171.9" height="15.0" fill="rgb(222,195,30)" rx="2" ry="2" />
<text  x="792.03" y="239.5" >NaClForkThreadContextS..</text>
</g>
<g >
<title>x86_64_start_kernel (3 samples, 2.91%)</title><rect x="1155.6" y="501" width="34.4" height="15.0" fill="rgb(210,165,31)" rx="2" ry="2" />
<text  x="1158.63" y="511.5" >x8..</text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.97%)</title><rect x="766.1" y="277" width="11.5" height="15.0" fill="rgb(239,66,51)" rx="2" ry="2" />
<text  x="769.12" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (63 samples, 61.17%)</title><rect x="32.9" y="405" width="721.8" height="15.0" fill="rgb(243,19,26)" rx="2" ry="2" />
<text  x="35.91" y="415.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>NaClCopyDynamicText (15 samples, 14.56%)</title><rect x="789.0" y="197" width="171.9" height="15.0" fill="rgb(250,27,26)" rx="2" ry="2" />
<text  x="792.03" y="207.5" >NaClCopyDynamicText</text>
</g>
<g >
<title>[unknown] (2 samples, 1.94%)</title><rect x="1018.2" y="517" width="22.9" height="15.0" fill="rgb(210,138,34)" rx="2" ry="2" />
<text  x="1021.16" y="527.5" >[..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="277" width="11.4" height="15.0" fill="rgb(211,208,15)" rx="2" ry="2" />
<text  x="1021.16" y="287.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.97%)</title><rect x="1052.5" y="229" width="11.5" height="15.0" fill="rgb(228,7,13)" rx="2" ry="2" />
<text  x="1055.52" y="239.5" ></text>
</g>
<g >
<title>[unknown]  (15 samples, 14.56%)</title><rect x="789.0" y="357" width="171.9" height="15.0" fill="rgb(237,185,33)" rx="2" ry="2" />
<text  x="792.03" y="367.5" >[unknown] </text>
</g>
<g >
<title>[unknown]  (15 samples, 14.56%)</title><rect x="789.0" y="341" width="171.9" height="15.0" fill="rgb(240,171,44)" rx="2" ry="2" />
<text  x="792.03" y="351.5" >[unknown] </text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.97%)</title><rect x="10.0" y="405" width="11.5" height="15.0" fill="rgb(251,158,36)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6 samples, 5.83%)</title><rect x="892.1" y="85" width="68.8" height="15.0" fill="rgb(227,175,2)" rx="2" ry="2" />
<text  x="895.14" y="95.5" >__handl..</text>
</g>
<g >
<title>futex_wake (1 samples, 0.97%)</title><rect x="1018.2" y="197" width="11.4" height="15.0" fill="rgb(218,63,5)" rx="2" ry="2" />
<text  x="1021.16" y="207.5" ></text>
</g>
<g >
<title>rest_init (3 samples, 2.91%)</title><rect x="1155.6" y="453" width="34.4" height="15.0" fill="rgb(205,66,53)" rx="2" ry="2" />
<text  x="1158.63" y="463.5" >re..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.97%)</title><rect x="754.7" y="277" width="11.4" height="15.0" fill="rgb(217,205,10)" rx="2" ry="2" />
<text  x="757.66" y="287.5" ></text>
</g>
<g >
<title>main (1 samples, 0.97%)</title><rect x="766.1" y="501" width="11.5" height="15.0" fill="rgb(251,207,26)" rx="2" ry="2" />
<text  x="769.12" y="511.5" ></text>
</g>
<g >
<title>[unknown]  (15 samples, 14.56%)</title><rect x="789.0" y="453" width="171.9" height="15.0" fill="rgb(216,163,15)" rx="2" ry="2" />
<text  x="792.03" y="463.5" >[unknown] </text>
</g>
<g >
<title>perf (66 samples, 64.08%)</title><rect x="21.5" y="533" width="756.1" height="15.0" fill="rgb(224,162,44)" rx="2" ry="2" />
<text  x="24.46" y="543.5" >perf</text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.97%)</title><rect x="44.4" y="133" width="11.4" height="15.0" fill="rgb(220,26,40)" rx="2" ry="2" />
<text  x="47.37" y="143.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="485" width="11.4" height="15.0" fill="rgb(222,169,36)" rx="2" ry="2" />
<text  x="1021.16" y="495.5" ></text>
</g>
<g >
<title>[sel_ldr] (15 samples, 14.56%)</title><rect x="789.0" y="325" width="171.9" height="15.0" fill="rgb(207,66,54)" rx="2" ry="2" />
<text  x="792.03" y="335.5" >[sel_ldr]</text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="325" width="11.4" height="15.0" fill="rgb(241,151,12)" rx="2" ry="2" />
<text  x="1021.16" y="335.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.97%)</title><rect x="983.8" y="149" width="11.4" height="15.0" fill="rgb(241,69,18)" rx="2" ry="2" />
<text  x="986.79" y="159.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="389" width="11.4" height="15.0" fill="rgb(207,189,24)" rx="2" ry="2" />
<text  x="1021.16" y="399.5" ></text>
</g>
<g >
<title>delete_from_page_cache (1 samples, 0.97%)</title><rect x="995.2" y="197" width="11.5" height="15.0" fill="rgb(250,188,39)" rx="2" ry="2" />
<text  x="998.24" y="207.5" ></text>
</g>
<g >
<title>smp_call_function_single (63 samples, 61.17%)</title><rect x="32.9" y="277" width="721.8" height="15.0" fill="rgb(238,0,9)" rx="2" ry="2" />
<text  x="35.91" y="287.5" >smp_call_function_single</text>
</g>
<g >
<title>do_group_exit (3 samples, 2.91%)</title><rect x="983.8" y="437" width="34.4" height="15.0" fill="rgb(236,0,42)" rx="2" ry="2" />
<text  x="986.79" y="447.5" >do..</text>
</g>
<g >
<title>__libc_start_main (64 samples, 62.14%)</title><rect x="32.9" y="501" width="733.2" height="15.0" fill="rgb(226,191,18)" rx="2" ry="2" />
<text  x="35.91" y="511.5" >__libc_start_main</text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.97%)</title><rect x="960.9" y="325" width="11.4" height="15.0" fill="rgb(211,15,19)" rx="2" ry="2" />
<text  x="963.87" y="335.5" ></text>
</g>
<g >
<title>[unknown]  (15 samples, 14.56%)</title><rect x="789.0" y="437" width="171.9" height="15.0" fill="rgb(232,25,37)" rx="2" ry="2" />
<text  x="792.03" y="447.5" >[unknown] </text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 1.94%)</title><rect x="915.0" y="37" width="23.0" height="15.0" fill="rgb(224,175,19)" rx="2" ry="2" />
<text  x="918.05" y="47.5" >g..</text>
</g>
<g >
<title>NaClCreateThread (15 samples, 14.56%)</title><rect x="789.0" y="261" width="171.9" height="15.0" fill="rgb(232,86,14)" rx="2" ry="2" />
<text  x="792.03" y="271.5" >NaClCreateThread</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 2.91%)</title><rect x="983.8" y="517" width="34.4" height="15.0" fill="rgb(237,27,29)" rx="2" ry="2" />
<text  x="986.79" y="527.5" >en..</text>
</g>
<g >
<title>ext4_invalidatepage (1 samples, 0.97%)</title><rect x="960.9" y="181" width="11.4" height="15.0" fill="rgb(253,171,44)" rx="2" ry="2" />
<text  x="963.87" y="191.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.97%)</title><rect x="983.8" y="197" width="11.4" height="15.0" fill="rgb(243,70,39)" rx="2" ry="2" />
<text  x="986.79" y="207.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 1.94%)</title><rect x="915.0" y="53" width="23.0" height="15.0" fill="rgb(225,167,34)" rx="2" ry="2" />
<text  x="918.05" y="63.5" >_..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="293" width="11.4" height="15.0" fill="rgb(219,149,6)" rx="2" ry="2" />
<text  x="1021.16" y="303.5" ></text>
</g>
<g >
<title>lind (1 samples, 0.97%)</title><rect x="10.0" y="533" width="11.5" height="15.0" fill="rgb(208,202,20)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>block_invalidatepage (1 samples, 0.97%)</title><rect x="960.9" y="165" width="11.4" height="15.0" fill="rgb(229,79,22)" rx="2" ry="2" />
<text  x="963.87" y="175.5" ></text>
</g>
<g >
<title>____fput (3 samples, 2.91%)</title><rect x="983.8" y="389" width="34.4" height="15.0" fill="rgb(215,166,18)" rx="2" ry="2" />
<text  x="986.79" y="399.5" >__..</text>
</g>
<g >
<title>evict (1 samples, 0.97%)</title><rect x="960.9" y="277" width="11.4" height="15.0" fill="rgb(206,138,9)" rx="2" ry="2" />
<text  x="963.87" y="287.5" ></text>
</g>
<g >
<title>task_work_run (3 samples, 2.91%)</title><rect x="983.8" y="405" width="34.4" height="15.0" fill="rgb(230,20,4)" rx="2" ry="2" />
<text  x="986.79" y="415.5" >ta..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="1018.2" y="501" width="11.4" height="15.0" fill="rgb(246,25,28)" rx="2" ry="2" />
<text  x="1021.16" y="511.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.97%)</title><rect x="903.6" y="69" width="11.4" height="15.0" fill="rgb(251,91,29)" rx="2" ry="2" />
<text  x="906.59" y="79.5" ></text>
</g>
<g >
<title>shmem_undo_range (3 samples, 2.91%)</title><rect x="983.8" y="229" width="34.4" height="15.0" fill="rgb(253,150,1)" rx="2" ry="2" />
<text  x="986.79" y="239.5" >sh..</text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 1.94%)</title><rect x="1052.5" y="357" width="22.9" height="15.0" fill="rgb(247,30,51)" rx="2" ry="2" />
<text  x="1055.52" y="367.5" >_..</text>
</g>
<g >
<title>cpu_startup_entry (9 samples, 8.74%)</title><rect x="1052.5" y="485" width="103.1" height="15.0" fill="rgb(228,168,39)" rx="2" ry="2" />
<text  x="1055.52" y="495.5" >cpu_startup_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.97%)</title><rect x="10.0" y="485" width="11.5" height="15.0" fill="rgb(239,48,34)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.97%)</title><rect x="1052.5" y="341" width="11.5" height="15.0" fill="rgb(225,177,38)" rx="2" ry="2" />
<text  x="1055.52" y="351.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (1 samples, 0.97%)</title><rect x="960.9" y="229" width="11.4" height="15.0" fill="rgb(232,203,54)" rx="2" ry="2" />
<text  x="963.87" y="239.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.97%)</title><rect x="10.0" y="517" width="11.5" height="15.0" fill="rgb(235,2,14)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.97%)</title><rect x="754.7" y="293" width="11.4" height="15.0" fill="rgb(213,178,9)" rx="2" ry="2" />
<text  x="757.66" y="303.5" ></text>
</g>
<g >
<title>event_function (63 samples, 61.17%)</title><rect x="32.9" y="229" width="721.8" height="15.0" fill="rgb(240,16,10)" rx="2" ry="2" />
<text  x="35.91" y="239.5" >event_function</text>
</g>
<g >
<title>do_syscall_64 (63 samples, 61.17%)</title><rect x="32.9" y="389" width="721.8" height="15.0" fill="rgb(215,196,15)" rx="2" ry="2" />
<text  x="35.91" y="399.5" >do_syscall_64</text>
</g>
<g >
<title>update_process_times (1 samples, 0.97%)</title><rect x="1064.0" y="309" width="11.4" height="15.0" fill="rgb(221,158,12)" rx="2" ry="2" />
<text  x="1066.98" y="319.5" ></text>
</g>
<g >
<title>account_page_cleaned (1 samples, 0.97%)</title><rect x="960.9" y="69" width="11.4" height="15.0" fill="rgb(214,128,32)" rx="2" ry="2" />
<text  x="963.87" y="79.5" ></text>
</g>
<g >
<title>NaClAppThreadSpawn (15 samples, 14.56%)</title><rect x="789.0" y="245" width="171.9" height="15.0" fill="rgb(254,61,18)" rx="2" ry="2" />
<text  x="792.03" y="255.5" >NaClAppThreadSpawn</text>
</g>
<g >
<title>security_file_free (1 samples, 0.97%)</title><rect x="766.1" y="293" width="11.5" height="15.0" fill="rgb(210,26,36)" rx="2" ry="2" />
<text  x="769.12" y="303.5" ></text>
</g>
<g >
<title>start_kernel (3 samples, 2.91%)</title><rect x="1155.6" y="469" width="34.4" height="15.0" fill="rgb(239,63,40)" rx="2" ry="2" />
<text  x="1158.63" y="479.5" >st..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.97%)</title><rect x="1018.2" y="261" width="11.4" height="15.0" fill="rgb(220,208,49)" rx="2" ry="2" />
<text  x="1021.16" y="271.5" ></text>
</g>
<g >
<title>sys_execve (1 samples, 0.97%)</title><rect x="766.1" y="389" width="11.5" height="15.0" fill="rgb(239,73,31)" rx="2" ry="2" />
<text  x="769.12" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.97%)</title><rect x="1029.6" y="501" width="11.5" height="15.0" fill="rgb(244,62,19)" rx="2" ry="2" />
<text  x="1032.61" y="511.5" ></text>
</g>
<g >
<title>dput (3 samples, 2.91%)</title><rect x="983.8" y="357" width="34.4" height="15.0" fill="rgb(229,39,3)" rx="2" ry="2" />
<text  x="986.79" y="367.5" >dput</text>
</g>
</g>
</svg>
