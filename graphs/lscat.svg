<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>shmem_getpage_gfp (4 samples, 3.33%)</title><rect x="914.7" y="101" width="39.3" height="15.0" fill="rgb(216,87,8)" rx="2" ry="2" />
<text  x="917.67" y="111.5" >shm..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.83%)</title><rect x="1052.3" y="453" width="9.9" height="15.0" fill="rgb(211,163,45)" rx="2" ry="2" />
<text  x="1055.33" y="463.5" ></text>
</g>
<g >
<title>lru_cache_add_anon (1 samples, 0.83%)</title><rect x="924.5" y="85" width="9.8" height="15.0" fill="rgb(230,166,50)" rx="2" ry="2" />
<text  x="927.50" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.83%)</title><rect x="659.0" y="469" width="9.8" height="15.0" fill="rgb(254,104,39)" rx="2" ry="2" />
<text  x="662.00" y="479.5" ></text>
</g>
<g >
<title>native_write_msr (48 samples, 40.00%)</title><rect x="29.7" y="197" width="472.0" height="15.0" fill="rgb(252,212,20)" rx="2" ry="2" />
<text  x="32.67" y="207.5" >native_write_msr</text>
</g>
<g >
<title>main (1 samples, 0.83%)</title><rect x="659.0" y="565" width="9.8" height="15.0" fill="rgb(237,55,9)" rx="2" ry="2" />
<text  x="662.00" y="575.5" ></text>
</g>
<g >
<title>NaClSysFork (28 samples, 23.33%)</title><rect x="747.5" y="341" width="275.3" height="15.0" fill="rgb(214,213,51)" rx="2" ry="2" />
<text  x="750.50" y="351.5" >NaClSysFork</text>
</g>
<g >
<title>NaClForkThreadContextSetup (28 samples, 23.33%)</title><rect x="747.5" y="293" width="275.3" height="15.0" fill="rgb(205,217,25)" rx="2" ry="2" />
<text  x="750.50" y="303.5" >NaClForkThreadContextSetup</text>
</g>
<g >
<title>perf_ioctl (64 samples, 53.33%)</title><rect x="29.7" y="405" width="629.3" height="15.0" fill="rgb(219,123,21)" rx="2" ry="2" />
<text  x="32.67" y="415.5" >perf_ioctl</text>
</g>
<g >
<title>type_richcompare.lto_priv.0 (1 samples, 0.83%)</title><rect x="1022.8" y="549" width="9.9" height="15.0" fill="rgb(229,78,21)" rx="2" ry="2" />
<text  x="1025.83" y="559.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2 samples, 1.67%)</title><rect x="727.8" y="357" width="19.7" height="15.0" fill="rgb(235,106,33)" rx="2" ry="2" />
<text  x="730.83" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (13 samples, 10.83%)</title><rect x="875.3" y="197" width="127.9" height="15.0" fill="rgb(227,80,26)" rx="2" ry="2" />
<text  x="878.33" y="207.5" >do_page_fault</text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.83%)</title><rect x="944.2" y="85" width="9.8" height="15.0" fill="rgb(253,181,33)" rx="2" ry="2" />
<text  x="947.17" y="95.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.83%)</title><rect x="924.5" y="69" width="9.8" height="15.0" fill="rgb(227,59,38)" rx="2" ry="2" />
<text  x="927.50" y="79.5" ></text>
</g>
<g >
<title>list_length (1 samples, 0.83%)</title><rect x="10.0" y="581" width="9.8" height="15.0" fill="rgb(229,150,38)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.83%)</title><rect x="993.3" y="117" width="9.9" height="15.0" fill="rgb(206,164,10)" rx="2" ry="2" />
<text  x="996.33" y="127.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.67%)</title><rect x="668.8" y="581" width="19.7" height="15.0" fill="rgb(210,101,45)" rx="2" ry="2" />
<text  x="671.83" y="591.5" ></text>
</g>
<g >
<title>do_open_execat (1 samples, 0.83%)</title><rect x="659.0" y="421" width="9.8" height="15.0" fill="rgb(209,46,30)" rx="2" ry="2" />
<text  x="662.00" y="431.5" ></text>
</g>
<g >
<title>sel_ldr (37 samples, 30.83%)</title><rect x="668.8" y="597" width="363.9" height="15.0" fill="rgb(231,118,2)" rx="2" ry="2" />
<text  x="671.83" y="607.5" >sel_ldr</text>
</g>
<g >
<title>intel_idle (1 samples, 0.83%)</title><rect x="1180.2" y="421" width="9.8" height="15.0" fill="rgb(245,101,40)" rx="2" ry="2" />
<text  x="1183.17" y="431.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.83%)</title><rect x="659.0" y="389" width="9.8" height="15.0" fill="rgb(240,188,53)" rx="2" ry="2" />
<text  x="662.00" y="399.5" ></text>
</g>
<g >
<title>lookup_fast (1 samples, 0.83%)</title><rect x="659.0" y="373" width="9.8" height="15.0" fill="rgb(239,1,8)" rx="2" ry="2" />
<text  x="662.00" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.67%)</title><rect x="1042.5" y="549" width="19.7" height="15.0" fill="rgb(212,3,27)" rx="2" ry="2" />
<text  x="1045.50" y="559.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 53.33%)</title><rect x="29.7" y="389" width="629.3" height="15.0" fill="rgb(247,183,21)" rx="2" ry="2" />
<text  x="32.67" y="399.5" >perf_event_for_each_child</text>
</g>
<g >
<title>[unknown] (2 samples, 1.67%)</title><rect x="1042.5" y="533" width="19.7" height="15.0" fill="rgb(209,213,17)" rx="2" ry="2" />
<text  x="1045.50" y="543.5" ></text>
</g>
<g >
<title>[unknown]  (28 samples, 23.33%)</title><rect x="747.5" y="405" width="275.3" height="15.0" fill="rgb(214,175,6)" rx="2" ry="2" />
<text  x="750.50" y="415.5" >[unknown] </text>
</g>
<g >
<title>NaClAppLoadFileAslr (2 samples, 1.67%)</title><rect x="727.8" y="261" width="19.7" height="15.0" fill="rgb(221,50,22)" rx="2" ry="2" />
<text  x="730.83" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.83%)</title><rect x="19.8" y="469" width="9.9" height="15.0" fill="rgb(209,37,43)" rx="2" ry="2" />
<text  x="22.83" y="479.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.83%)</title><rect x="659.0" y="437" width="9.8" height="15.0" fill="rgb(223,108,8)" rx="2" ry="2" />
<text  x="662.00" y="447.5" ></text>
</g>
<g >
<title>PyType_IsSubtype (1 samples, 0.83%)</title><rect x="718.0" y="565" width="9.8" height="15.0" fill="rgb(230,167,34)" rx="2" ry="2" />
<text  x="721.00" y="575.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 2.50%)</title><rect x="1032.7" y="581" width="29.5" height="15.0" fill="rgb(235,192,2)" rx="2" ry="2" />
<text  x="1035.67" y="591.5" >[u..</text>
</g>
<g >
<title>do_page_fault (1 samples, 0.83%)</title><rect x="10.0" y="549" width="9.8" height="15.0" fill="rgb(238,58,2)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>NaClVmmapVisit (27 samples, 22.50%)</title><rect x="747.5" y="245" width="265.5" height="15.0" fill="rgb(245,30,33)" rx="2" ry="2" />
<text  x="750.50" y="255.5" >NaClVmmapVisit</text>
</g>
<g >
<title>__do_fault (5 samples, 4.17%)</title><rect x="904.8" y="133" width="49.2" height="15.0" fill="rgb(212,30,31)" rx="2" ry="2" />
<text  x="907.83" y="143.5" >__do..</text>
</g>
<g >
<title>shmem_fault (5 samples, 4.17%)</title><rect x="904.8" y="117" width="49.2" height="15.0" fill="rgb(232,76,22)" rx="2" ry="2" />
<text  x="907.83" y="127.5" >shme..</text>
</g>
<g >
<title>generic_exec_single (64 samples, 53.33%)</title><rect x="29.7" y="325" width="629.3" height="15.0" fill="rgb(222,175,29)" rx="2" ry="2" />
<text  x="32.67" y="335.5" >generic_exec_single</text>
</g>
<g >
<title>NaClPatchAddr (1 samples, 0.83%)</title><rect x="1013.0" y="261" width="9.8" height="15.0" fill="rgb(221,55,54)" rx="2" ry="2" />
<text  x="1016.00" y="271.5" ></text>
</g>
<g >
<title>perf_poll (1 samples, 0.83%)</title><rect x="19.8" y="421" width="9.9" height="15.0" fill="rgb(209,129,42)" rx="2" ry="2" />
<text  x="22.83" y="431.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 2.50%)</title><rect x="954.0" y="133" width="29.5" height="15.0" fill="rgb(227,209,43)" rx="2" ry="2" />
<text  x="957.00" y="143.5" >al..</text>
</g>
<g >
<title>rest_init (1 samples, 0.83%)</title><rect x="1180.2" y="517" width="9.8" height="15.0" fill="rgb(226,215,18)" rx="2" ry="2" />
<text  x="1183.17" y="527.5" ></text>
</g>
<g >
<title>NaClCreateThread (28 samples, 23.33%)</title><rect x="747.5" y="325" width="275.3" height="15.0" fill="rgb(237,210,40)" rx="2" ry="2" />
<text  x="750.50" y="335.5" >NaClCreateThread</text>
</g>
<g >
<title>[sel_ldr] (28 samples, 23.33%)</title><rect x="747.5" y="389" width="275.3" height="15.0" fill="rgb(208,133,34)" rx="2" ry="2" />
<text  x="750.50" y="399.5" >[sel_ldr]</text>
</g>
<g >
<title>do_filp_open (1 samples, 0.83%)</title><rect x="659.0" y="405" width="9.8" height="15.0" fill="rgb(236,192,18)" rx="2" ry="2" />
<text  x="662.00" y="415.5" ></text>
</g>
<g >
<title>[perf-583.map] (30 samples, 25.00%)</title><rect x="727.8" y="549" width="295.0" height="15.0" fill="rgb(240,57,8)" rx="2" ry="2" />
<text  x="730.83" y="559.5" >[perf-583.map]</text>
</g>
<g >
<title>policy_nodemask (1 samples, 0.83%)</title><rect x="944.2" y="53" width="9.8" height="15.0" fill="rgb(246,123,10)" rx="2" ry="2" />
<text  x="947.17" y="63.5" ></text>
</g>
<g >
<title>[unknown] (31 samples, 25.83%)</title><rect x="727.8" y="565" width="304.9" height="15.0" fill="rgb(248,155,53)" rx="2" ry="2" />
<text  x="730.83" y="575.5" >[unknown]</text>
</g>
<g >
<title>__handle_mm_fault (11 samples, 9.17%)</title><rect x="895.0" y="149" width="108.2" height="15.0" fill="rgb(219,74,40)" rx="2" ry="2" />
<text  x="898.00" y="159.5" >__handle_mm_f..</text>
</g>
<g >
<title>cpuidle_enter (12 samples, 10.00%)</title><rect x="1062.2" y="501" width="118.0" height="15.0" fill="rgb(245,147,49)" rx="2" ry="2" />
<text  x="1065.17" y="511.5" >cpuidle_enter</text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.83%)</title><rect x="1180.2" y="437" width="9.8" height="15.0" fill="rgb(233,150,33)" rx="2" ry="2" />
<text  x="1183.17" y="447.5" ></text>
</g>
<g >
<title>sys_ioctl (64 samples, 53.33%)</title><rect x="29.7" y="437" width="629.3" height="15.0" fill="rgb(235,101,31)" rx="2" ry="2" />
<text  x="32.67" y="447.5" >sys_ioctl</text>
</g>
<g >
<title>__mprotect (1 samples, 0.83%)</title><rect x="806.5" y="213" width="9.8" height="15.0" fill="rgb(249,72,45)" rx="2" ry="2" />
<text  x="809.50" y="223.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 53.33%)</title><rect x="29.7" y="309" width="629.3" height="15.0" fill="rgb(240,45,38)" rx="2" ry="2" />
<text  x="32.67" y="319.5" >remote_function</text>
</g>
<g >
<title>secondary_startup_64 (13 samples, 10.83%)</title><rect x="1062.2" y="581" width="127.8" height="15.0" fill="rgb(210,130,26)" rx="2" ry="2" />
<text  x="1065.17" y="591.5" >secondary_startu..</text>
</g>
<g >
<title>change_protection_range (1 samples, 0.83%)</title><rect x="806.5" y="101" width="9.8" height="15.0" fill="rgb(232,153,38)" rx="2" ry="2" />
<text  x="809.50" y="111.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.83%)</title><rect x="944.2" y="69" width="9.8" height="15.0" fill="rgb(233,52,36)" rx="2" ry="2" />
<text  x="947.17" y="79.5" ></text>
</g>
<g >
<title>nmi_restore (15 samples, 12.50%)</title><rect x="511.5" y="197" width="147.5" height="15.0" fill="rgb(206,202,10)" rx="2" ry="2" />
<text  x="514.50" y="207.5" >nmi_restore</text>
</g>
<g >
<title>[unknown]  (30 samples, 25.00%)</title><rect x="727.8" y="437" width="295.0" height="15.0" fill="rgb(250,32,21)" rx="2" ry="2" />
<text  x="730.83" y="447.5" >[unknown] </text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 0.83%)</title><rect x="1180.2" y="549" width="9.8" height="15.0" fill="rgb(249,212,23)" rx="2" ry="2" />
<text  x="1183.17" y="559.5" ></text>
</g>
<g >
<title>[perf-583.map] (2 samples, 1.67%)</title><rect x="727.8" y="405" width="19.7" height="15.0" fill="rgb(227,229,48)" rx="2" ry="2" />
<text  x="730.83" y="415.5" ></text>
</g>
<g >
<title>PyTuple_New (1 samples, 0.83%)</title><rect x="688.5" y="581" width="9.8" height="15.0" fill="rgb(241,186,41)" rx="2" ry="2" />
<text  x="691.50" y="591.5" ></text>
</g>
<g >
<title>evlist__enable (64 samples, 53.33%)</title><rect x="29.7" y="501" width="629.3" height="15.0" fill="rgb(219,191,54)" rx="2" ry="2" />
<text  x="32.67" y="511.5" >evlist__enable</text>
</g>
<g >
<title>__ptep_modify_prot_start (1 samples, 0.83%)</title><rect x="806.5" y="85" width="9.8" height="15.0" fill="rgb(207,218,18)" rx="2" ry="2" />
<text  x="809.50" y="95.5" ></text>
</g>
<g >
<title>cmd_record (65 samples, 54.17%)</title><rect x="19.8" y="517" width="639.2" height="15.0" fill="rgb(242,145,38)" rx="2" ry="2" />
<text  x="22.83" y="527.5" >cmd_record</text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.83%)</title><rect x="1180.2" y="501" width="9.8" height="15.0" fill="rgb(211,56,14)" rx="2" ry="2" />
<text  x="1183.17" y="511.5" ></text>
</g>
<g >
<title>_perf_event_enable (64 samples, 53.33%)</title><rect x="29.7" y="373" width="629.3" height="15.0" fill="rgb(231,224,18)" rx="2" ry="2" />
<text  x="32.67" y="383.5" >_perf_event_enable</text>
</g>
<g >
<title>release_pages (1 samples, 0.83%)</title><rect x="924.5" y="37" width="9.8" height="15.0" fill="rgb(244,192,18)" rx="2" ry="2" />
<text  x="927.50" y="47.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 54.17%)</title><rect x="19.8" y="581" width="639.2" height="15.0" fill="rgb(229,38,11)" rx="2" ry="2" />
<text  x="22.83" y="591.5" >[unknown]</text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.83%)</title><rect x="924.5" y="53" width="9.8" height="15.0" fill="rgb(230,215,32)" rx="2" ry="2" />
<text  x="927.50" y="63.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.83%)</title><rect x="806.5" y="149" width="9.8" height="15.0" fill="rgb(251,16,35)" rx="2" ry="2" />
<text  x="809.50" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.83%)</title><rect x="806.5" y="181" width="9.8" height="15.0" fill="rgb(231,117,37)" rx="2" ry="2" />
<text  x="809.50" y="191.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.83%)</title><rect x="1180.2" y="485" width="9.8" height="15.0" fill="rgb(247,224,1)" rx="2" ry="2" />
<text  x="1183.17" y="495.5" ></text>
</g>
<g >
<title>all (120 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(230,212,39)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>NaClVmCopyEntry (7 samples, 5.83%)</title><rect x="747.5" y="229" width="68.8" height="15.0" fill="rgb(235,214,50)" rx="2" ry="2" />
<text  x="750.50" y="239.5" >NaClVmC..</text>
</g>
<g >
<title>[unknown]  (30 samples, 25.00%)</title><rect x="727.8" y="469" width="295.0" height="15.0" fill="rgb(225,140,47)" rx="2" ry="2" />
<text  x="730.83" y="479.5" >[unknown] </text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.83%)</title><rect x="806.5" y="197" width="9.8" height="15.0" fill="rgb(242,92,5)" rx="2" ry="2" />
<text  x="809.50" y="207.5" ></text>
</g>
<g >
<title>__poll (1 samples, 0.83%)</title><rect x="19.8" y="501" width="9.9" height="15.0" fill="rgb(232,153,28)" rx="2" ry="2" />
<text  x="22.83" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.83%)</title><rect x="19.8" y="485" width="9.9" height="15.0" fill="rgb(212,126,47)" rx="2" ry="2" />
<text  x="22.83" y="495.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.83%)</title><rect x="19.8" y="373" width="9.9" height="15.0" fill="rgb(236,67,38)" rx="2" ry="2" />
<text  x="22.83" y="383.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.83%)</title><rect x="10.0" y="485" width="9.8" height="15.0" fill="rgb(232,19,34)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.83%)</title><rect x="806.5" y="117" width="9.8" height="15.0" fill="rgb(211,131,42)" rx="2" ry="2" />
<text  x="809.50" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 53.33%)</title><rect x="29.7" y="469" width="629.3" height="15.0" fill="rgb(233,217,32)" rx="2" ry="2" />
<text  x="32.67" y="479.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__perf_event_enable (64 samples, 53.33%)</title><rect x="29.7" y="277" width="629.3" height="15.0" fill="rgb(226,129,17)" rx="2" ry="2" />
<text  x="32.67" y="287.5" >__perf_event_enable</text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.83%)</title><rect x="659.0" y="581" width="9.8" height="15.0" fill="rgb(247,92,34)" rx="2" ry="2" />
<text  x="662.00" y="591.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.83%)</title><rect x="1003.2" y="213" width="9.8" height="15.0" fill="rgb(219,17,45)" rx="2" ry="2" />
<text  x="1006.17" y="223.5" ></text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.83%)</title><rect x="806.5" y="133" width="9.8" height="15.0" fill="rgb(228,51,48)" rx="2" ry="2" />
<text  x="809.50" y="143.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.83%)</title><rect x="10.0" y="517" width="9.8" height="15.0" fill="rgb(214,141,33)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (28 samples, 23.33%)</title><rect x="747.5" y="357" width="275.3" height="15.0" fill="rgb(237,19,54)" rx="2" ry="2" />
<text  x="750.50" y="367.5" >NaClSysForkDecoder</text>
</g>
<g >
<title>NaClAppLoadFile (2 samples, 1.67%)</title><rect x="727.8" y="277" width="19.7" height="15.0" fill="rgb(228,23,5)" rx="2" ry="2" />
<text  x="730.83" y="287.5" ></text>
</g>
<g >
<title>event_function (64 samples, 53.33%)</title><rect x="29.7" y="293" width="629.3" height="15.0" fill="rgb(241,227,48)" rx="2" ry="2" />
<text  x="32.67" y="303.5" >event_function</text>
</g>
<g >
<title>__get_free_pages (1 samples, 0.83%)</title><rect x="19.8" y="389" width="9.9" height="15.0" fill="rgb(234,32,27)" rx="2" ry="2" />
<text  x="22.83" y="399.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.83%)</title><rect x="993.3" y="133" width="9.9" height="15.0" fill="rgb(205,11,48)" rx="2" ry="2" />
<text  x="996.33" y="143.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.83%)</title><rect x="1180.2" y="453" width="9.8" height="15.0" fill="rgb(210,58,0)" rx="2" ry="2" />
<text  x="1183.17" y="463.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.83%)</title><rect x="10.0" y="565" width="9.8" height="15.0" fill="rgb(252,205,1)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>perf_evlist__prepare_workload (1 samples, 0.83%)</title><rect x="659.0" y="517" width="9.8" height="15.0" fill="rgb(243,192,11)" rx="2" ry="2" />
<text  x="662.00" y="527.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.83%)</title><rect x="19.8" y="437" width="9.9" height="15.0" fill="rgb(253,181,2)" rx="2" ry="2" />
<text  x="22.83" y="447.5" ></text>
</g>
<g >
<title>event_function_call (64 samples, 53.33%)</title><rect x="29.7" y="357" width="629.3" height="15.0" fill="rgb(227,51,3)" rx="2" ry="2" />
<text  x="32.67" y="367.5" >event_function_call</text>
</g>
<g >
<title>NaClValidateImage (2 samples, 1.67%)</title><rect x="727.8" y="245" width="19.7" height="15.0" fill="rgb(223,119,39)" rx="2" ry="2" />
<text  x="730.83" y="255.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (64 samples, 53.33%)</title><rect x="29.7" y="421" width="629.3" height="15.0" fill="rgb(233,71,22)" rx="2" ry="2" />
<text  x="32.67" y="431.5" >do_vfs_ioctl</text>
</g>
<g >
<title>sys_poll (1 samples, 0.83%)</title><rect x="19.8" y="453" width="9.9" height="15.0" fill="rgb(208,123,13)" rx="2" ry="2" />
<text  x="22.83" y="463.5" ></text>
</g>
<g >
<title>shmem_add_to_page_cache (1 samples, 0.83%)</title><rect x="934.3" y="85" width="9.9" height="15.0" fill="rgb(248,119,19)" rx="2" ry="2" />
<text  x="937.33" y="95.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.83%)</title><rect x="983.5" y="133" width="9.8" height="15.0" fill="rgb(208,102,4)" rx="2" ry="2" />
<text  x="986.50" y="143.5" ></text>
</g>
<g >
<title>handle_mm_fault (12 samples, 10.00%)</title><rect x="885.2" y="165" width="118.0" height="15.0" fill="rgb(217,202,20)" rx="2" ry="2" />
<text  x="888.17" y="175.5" >handle_mm_fault</text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 53.33%)</title><rect x="29.7" y="245" width="629.3" height="15.0" fill="rgb(245,189,40)" rx="2" ry="2" />
<text  x="32.67" y="255.5" >x86_pmu_enable</text>
</g>
<g >
<title>cpuidle_enter_state (12 samples, 10.00%)</title><rect x="1062.2" y="485" width="118.0" height="15.0" fill="rgb(233,158,49)" rx="2" ry="2" />
<text  x="1065.17" y="495.5" >cpuidle_enter_..</text>
</g>
<g >
<title>main (65 samples, 54.17%)</title><rect x="19.8" y="549" width="639.2" height="15.0" fill="rgb(237,87,24)" rx="2" ry="2" />
<text  x="22.83" y="559.5" >main</text>
</g>
<g >
<title>do_syscall_64 (64 samples, 53.33%)</title><rect x="29.7" y="453" width="629.3" height="15.0" fill="rgb(216,116,35)" rx="2" ry="2" />
<text  x="32.67" y="463.5" >do_syscall_64</text>
</g>
<g >
<title>start_secondary (12 samples, 10.00%)</title><rect x="1062.2" y="565" width="118.0" height="15.0" fill="rgb(234,34,46)" rx="2" ry="2" />
<text  x="1065.17" y="575.5" >start_secondary</text>
</g>
<g >
<title>perf (66 samples, 55.00%)</title><rect x="19.8" y="597" width="649.0" height="15.0" fill="rgb(213,198,15)" rx="2" ry="2" />
<text  x="22.83" y="607.5" >perf</text>
</g>
<g >
<title>smp_call_function_single (64 samples, 53.33%)</title><rect x="29.7" y="341" width="629.3" height="15.0" fill="rgb(213,73,27)" rx="2" ry="2" />
<text  x="32.67" y="351.5" >smp_call_function_single</text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 1.67%)</title><rect x="727.8" y="197" width="19.7" height="15.0" fill="rgb(210,87,40)" rx="2" ry="2" />
<text  x="730.83" y="207.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.83%)</title><rect x="904.8" y="101" width="9.9" height="15.0" fill="rgb(212,186,12)" rx="2" ry="2" />
<text  x="907.83" y="111.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.83%)</title><rect x="1052.3" y="517" width="9.9" height="15.0" fill="rgb(229,16,37)" rx="2" ry="2" />
<text  x="1055.33" y="527.5" ></text>
</g>
<g >
<title>intel_idle (12 samples, 10.00%)</title><rect x="1062.2" y="469" width="118.0" height="15.0" fill="rgb(226,200,52)" rx="2" ry="2" />
<text  x="1065.17" y="479.5" >intel_idle</text>
</g>
<g >
<title>NaClCopyDynamicText (27 samples, 22.50%)</title><rect x="747.5" y="261" width="265.5" height="15.0" fill="rgb(207,19,49)" rx="2" ry="2" />
<text  x="750.50" y="271.5" >NaClCopyDynamicText</text>
</g>
<g >
<title>NaClPatchAddr (6 samples, 5.00%)</title><rect x="747.5" y="213" width="59.0" height="15.0" fill="rgb(220,109,46)" rx="2" ry="2" />
<text  x="750.50" y="223.5" >NaClPa..</text>
</g>
<g >
<title>__d_lookup (1 samples, 0.83%)</title><rect x="659.0" y="357" width="9.8" height="15.0" fill="rgb(206,21,17)" rx="2" ry="2" />
<text  x="662.00" y="367.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.83%)</title><rect x="19.8" y="405" width="9.9" height="15.0" fill="rgb(215,194,50)" rx="2" ry="2" />
<text  x="22.83" y="415.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 53.33%)</title><rect x="29.7" y="229" width="629.3" height="15.0" fill="rgb(249,125,4)" rx="2" ry="2" />
<text  x="32.67" y="239.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>do_idle (12 samples, 10.00%)</title><rect x="1062.2" y="533" width="118.0" height="15.0" fill="rgb(244,116,47)" rx="2" ry="2" />
<text  x="1065.17" y="543.5" >do_idle</text>
</g>
<g >
<title>cpu_startup_entry (12 samples, 10.00%)</title><rect x="1062.2" y="549" width="118.0" height="15.0" fill="rgb(223,167,30)" rx="2" ry="2" />
<text  x="1065.17" y="559.5" >cpu_startup_en..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.83%)</title><rect x="1052.3" y="485" width="9.9" height="15.0" fill="rgb(215,54,32)" rx="2" ry="2" />
<text  x="1055.33" y="495.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (2 samples, 1.67%)</title><rect x="727.8" y="309" width="19.7" height="15.0" fill="rgb(207,132,4)" rx="2" ry="2" />
<text  x="730.83" y="319.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 2.50%)</title><rect x="954.0" y="101" width="29.5" height="15.0" fill="rgb(246,128,10)" rx="2" ry="2" />
<text  x="957.00" y="111.5" >cl..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.83%)</title><rect x="1052.3" y="437" width="9.9" height="15.0" fill="rgb(236,36,38)" rx="2" ry="2" />
<text  x="1055.33" y="447.5" ></text>
</g>
<g >
<title>start_kernel (1 samples, 0.83%)</title><rect x="1180.2" y="533" width="9.8" height="15.0" fill="rgb(249,102,15)" rx="2" ry="2" />
<text  x="1183.17" y="543.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.83%)</title><rect x="10.0" y="501" width="9.8" height="15.0" fill="rgb(228,83,34)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.83%)</title><rect x="1052.3" y="389" width="9.9" height="15.0" fill="rgb(218,156,24)" rx="2" ry="2" />
<text  x="1055.33" y="399.5" ></text>
</g>
<g >
<title>[unknown] (34 samples, 28.33%)</title><rect x="698.3" y="581" width="334.4" height="15.0" fill="rgb(224,61,28)" rx="2" ry="2" />
<text  x="701.33" y="591.5" >[unknown]</text>
</g>
<g >
<title>NaClSyscallCSegHook (28 samples, 23.33%)</title><rect x="747.5" y="373" width="275.3" height="15.0" fill="rgb(206,67,30)" rx="2" ry="2" />
<text  x="750.50" y="383.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>[unknown] (1 samples, 0.83%)</title><rect x="1052.3" y="469" width="9.9" height="15.0" fill="rgb(209,212,14)" rx="2" ry="2" />
<text  x="1055.33" y="479.5" ></text>
</g>
<g >
<title>lind (1 samples, 0.83%)</title><rect x="10.0" y="597" width="9.8" height="15.0" fill="rgb(254,114,29)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>sys_execve (1 samples, 0.83%)</title><rect x="659.0" y="453" width="9.8" height="15.0" fill="rgb(220,2,44)" rx="2" ry="2" />
<text  x="662.00" y="463.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 53.33%)</title><rect x="29.7" y="261" width="629.3" height="15.0" fill="rgb(251,158,45)" rx="2" ry="2" />
<text  x="32.67" y="271.5" >ctx_resched</text>
</g>
<g >
<title>swapper (16 samples, 13.33%)</title><rect x="1032.7" y="597" width="157.3" height="15.0" fill="rgb(206,48,8)" rx="2" ry="2" />
<text  x="1035.67" y="607.5" >swapper</text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 2.50%)</title><rect x="954.0" y="117" width="29.5" height="15.0" fill="rgb(220,86,32)" rx="2" ry="2" />
<text  x="957.00" y="127.5" >__..</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.83%)</title><rect x="19.8" y="357" width="9.9" height="15.0" fill="rgb(253,45,20)" rx="2" ry="2" />
<text  x="22.83" y="367.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.67%)</title><rect x="1042.5" y="565" width="19.7" height="15.0" fill="rgb(234,146,23)" rx="2" ry="2" />
<text  x="1045.50" y="575.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (2 samples, 1.67%)</title><rect x="727.8" y="341" width="19.7" height="15.0" fill="rgb(219,53,39)" rx="2" ry="2" />
<text  x="730.83" y="351.5" ></text>
</g>
<g >
<title>run_builtin (65 samples, 54.17%)</title><rect x="19.8" y="533" width="639.2" height="15.0" fill="rgb(232,180,18)" rx="2" ry="2" />
<text  x="22.83" y="543.5" >run_builtin</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.83%)</title><rect x="659.0" y="485" width="9.8" height="15.0" fill="rgb(221,54,12)" rx="2" ry="2" />
<text  x="662.00" y="495.5" ></text>
</g>
<g >
<title>__libc_start_main (65 samples, 54.17%)</title><rect x="19.8" y="565" width="639.2" height="15.0" fill="rgb(228,10,19)" rx="2" ry="2" />
<text  x="22.83" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>run_builtin (1 samples, 0.83%)</title><rect x="659.0" y="549" width="9.8" height="15.0" fill="rgb(244,157,18)" rx="2" ry="2" />
<text  x="662.00" y="559.5" ></text>
</g>
<g >
<title>NaClSysExecve (2 samples, 1.67%)</title><rect x="727.8" y="325" width="19.7" height="15.0" fill="rgb(242,141,32)" rx="2" ry="2" />
<text  x="730.83" y="335.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (28 samples, 23.33%)</title><rect x="747.5" y="277" width="275.3" height="15.0" fill="rgb(248,202,46)" rx="2" ry="2" />
<text  x="750.50" y="287.5" >NaClCopyExecutionContext</text>
</g>
<g >
<title>[unknown]  (30 samples, 25.00%)</title><rect x="727.8" y="485" width="295.0" height="15.0" fill="rgb(216,7,36)" rx="2" ry="2" />
<text  x="730.83" y="495.5" >[unknown] </text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.83%)</title><rect x="875.3" y="165" width="9.9" height="15.0" fill="rgb(254,179,51)" rx="2" ry="2" />
<text  x="878.33" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.83%)</title><rect x="1052.3" y="421" width="9.9" height="15.0" fill="rgb(222,137,27)" rx="2" ry="2" />
<text  x="1055.33" y="431.5" ></text>
</g>
<g >
<title>NaClValidateCode (2 samples, 1.67%)</title><rect x="727.8" y="229" width="19.7" height="15.0" fill="rgb(210,37,47)" rx="2" ry="2" />
<text  x="730.83" y="239.5" ></text>
</g>
<g >
<title>call_cpuidle (1 samples, 0.83%)</title><rect x="1180.2" y="469" width="9.8" height="15.0" fill="rgb(245,120,51)" rx="2" ry="2" />
<text  x="1183.17" y="479.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (2 samples, 1.67%)</title><rect x="727.8" y="293" width="19.7" height="15.0" fill="rgb(209,15,10)" rx="2" ry="2" />
<text  x="730.83" y="303.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.83%)</title><rect x="865.5" y="213" width="9.8" height="15.0" fill="rgb(209,145,9)" rx="2" ry="2" />
<text  x="868.50" y="223.5" ></text>
</g>
<g >
<title>[sel_ldr] (2 samples, 1.67%)</title><rect x="727.8" y="373" width="19.7" height="15.0" fill="rgb(225,210,35)" rx="2" ry="2" />
<text  x="730.83" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (20 samples, 16.67%)</title><rect x="816.3" y="229" width="196.7" height="15.0" fill="rgb(233,122,51)" rx="2" ry="2" />
<text  x="819.33" y="239.5" >__memmove_avx_unaligned_e..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.83%)</title><rect x="1052.3" y="501" width="9.9" height="15.0" fill="rgb(253,130,31)" rx="2" ry="2" />
<text  x="1055.33" y="511.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (64 samples, 53.33%)</title><rect x="29.7" y="213" width="629.3" height="15.0" fill="rgb(233,205,36)" rx="2" ry="2" />
<text  x="32.67" y="223.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>__do_page_fault (13 samples, 10.83%)</title><rect x="875.3" y="181" width="127.9" height="15.0" fill="rgb(254,171,9)" rx="2" ry="2" />
<text  x="878.33" y="191.5" >__do_page_fault</text>
</g>
<g >
<title>nmi_handle (1 samples, 0.83%)</title><rect x="501.7" y="197" width="9.8" height="15.0" fill="rgb(205,157,7)" rx="2" ry="2" />
<text  x="504.67" y="207.5" ></text>
</g>
<g >
<title>NaClAppThreadSpawn (28 samples, 23.33%)</title><rect x="747.5" y="309" width="275.3" height="15.0" fill="rgb(235,179,9)" rx="2" ry="2" />
<text  x="750.50" y="319.5" >NaClAppThreadSpawn</text>
</g>
<g >
<title>cmd_record (1 samples, 0.83%)</title><rect x="659.0" y="533" width="9.8" height="15.0" fill="rgb(208,33,5)" rx="2" ry="2" />
<text  x="662.00" y="543.5" ></text>
</g>
<g >
<title>[unknown]  (30 samples, 25.00%)</title><rect x="727.8" y="517" width="295.0" height="15.0" fill="rgb(246,63,38)" rx="2" ry="2" />
<text  x="730.83" y="527.5" >[unknown] </text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.83%)</title><rect x="10.0" y="533" width="9.8" height="15.0" fill="rgb(205,133,19)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 1.67%)</title><rect x="727.8" y="213" width="19.7" height="15.0" fill="rgb(210,220,27)" rx="2" ry="2" />
<text  x="730.83" y="223.5" ></text>
</g>
<g >
<title>[unknown]  (30 samples, 25.00%)</title><rect x="727.8" y="533" width="295.0" height="15.0" fill="rgb(242,31,51)" rx="2" ry="2" />
<text  x="730.83" y="543.5" >[unknown] </text>
</g>
<g >
<title>__GI___ioctl (64 samples, 53.33%)</title><rect x="29.7" y="485" width="629.3" height="15.0" fill="rgb(232,169,33)" rx="2" ry="2" />
<text  x="32.67" y="495.5" >__GI___ioctl</text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 0.83%)</title><rect x="1180.2" y="565" width="9.8" height="15.0" fill="rgb(226,74,2)" rx="2" ry="2" />
<text  x="1183.17" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.83%)</title><rect x="708.2" y="565" width="9.8" height="15.0" fill="rgb(249,228,0)" rx="2" ry="2" />
<text  x="711.17" y="575.5" ></text>
</g>
<g >
<title>[unknown]  (30 samples, 25.00%)</title><rect x="727.8" y="453" width="295.0" height="15.0" fill="rgb(254,199,26)" rx="2" ry="2" />
<text  x="730.83" y="463.5" >[unknown] </text>
</g>
<g >
<title>call_cpuidle (12 samples, 10.00%)</title><rect x="1062.2" y="517" width="118.0" height="15.0" fill="rgb(218,44,29)" rx="2" ry="2" />
<text  x="1065.17" y="527.5" >call_cpuidle</text>
</g>
<g >
<title>__GI___execve (1 samples, 0.83%)</title><rect x="659.0" y="501" width="9.8" height="15.0" fill="rgb(247,179,30)" rx="2" ry="2" />
<text  x="662.00" y="511.5" ></text>
</g>
<g >
<title>[unknown]  (30 samples, 25.00%)</title><rect x="727.8" y="421" width="295.0" height="15.0" fill="rgb(231,187,32)" rx="2" ry="2" />
<text  x="730.83" y="431.5" >[unknown] </text>
</g>
<g >
<title>[perf-583.map] (2 samples, 1.67%)</title><rect x="727.8" y="389" width="19.7" height="15.0" fill="rgb(208,220,4)" rx="2" ry="2" />
<text  x="730.83" y="399.5" ></text>
</g>
<g >
<title>sys_mprotect (1 samples, 0.83%)</title><rect x="806.5" y="165" width="9.8" height="15.0" fill="rgb(220,182,13)" rx="2" ry="2" />
<text  x="809.50" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.83%)</title><rect x="1052.3" y="405" width="9.9" height="15.0" fill="rgb(241,211,21)" rx="2" ry="2" />
<text  x="1055.33" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.83%)</title><rect x="698.3" y="565" width="9.9" height="15.0" fill="rgb(234,152,24)" rx="2" ry="2" />
<text  x="701.33" y="575.5" ></text>
</g>
<g >
<title>page_fault (13 samples, 10.83%)</title><rect x="875.3" y="213" width="127.9" height="15.0" fill="rgb(207,14,30)" rx="2" ry="2" />
<text  x="878.33" y="223.5" >page_fault</text>
</g>
<g >
<title>[unknown]  (30 samples, 25.00%)</title><rect x="727.8" y="501" width="295.0" height="15.0" fill="rgb(245,117,13)" rx="2" ry="2" />
<text  x="730.83" y="511.5" >[unknown] </text>
</g>
</g>
</svg>
