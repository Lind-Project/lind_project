<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="694.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="677" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="677" > </text>
<g id="frames">
<g >
<title>enter_lazy_tlb (474,392,100 samples, 3.04%)</title><rect x="94.2" y="533" width="35.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="97.23" y="543.5" >ent..</text>
</g>
<g >
<title>exc_page_fault (524,168,801 samples, 3.36%)</title><rect x="713.4" y="453" width="39.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="716.42" y="463.5" >exc..</text>
</g>
<g >
<title>do_fault (419,524,795 samples, 2.69%)</title><rect x="721.3" y="373" width="31.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="724.34" y="383.5" >do..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (473,793,040 samples, 3.04%)</title><rect x="227.4" y="469" width="35.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="230.41" y="479.5" >ent..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (626,212,609 samples, 4.01%)</title><rect x="130.1" y="517" width="47.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="133.11" y="527.5" >_raw..</text>
</g>
<g >
<title>free_unref_page_commit (52,250,069 samples, 0.33%)</title><rect x="681.8" y="133" width="4.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="684.82" y="143.5" ></text>
</g>
<g >
<title>update_curr (232,721,031 samples, 1.49%)</title><rect x="1074.1" y="405" width="17.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1077.13" y="415.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (473,793,040 samples, 3.04%)</title><rect x="227.4" y="341" width="35.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="230.41" y="351.5" >do_..</text>
</g>
<g >
<title>record__mmap_read_all (473,793,040 samples, 3.04%)</title><rect x="227.4" y="581" width="35.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="230.41" y="591.5" >rec..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::remap_file (568,125,901 samples, 3.64%)</title><rect x="761.2" y="517" width="43.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="764.24" y="527.5" >rust..</text>
</g>
<g >
<title>NaClSysRead (261,561,182 samples, 1.68%)</title><rect x="658.1" y="565" width="19.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="661.08" y="575.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (365,623,924 samples, 2.34%)</title><rect x="677.9" y="277" width="27.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="680.87" y="287.5" >d..</text>
</g>
<g >
<title>pmd_pfn (52,329,480 samples, 0.34%)</title><rect x="749.1" y="357" width="4.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="752.11" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_execve (717,309,991 samples, 4.60%)</title><rect x="833.8" y="581" width="54.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="836.78" y="591.5" >__x64..</text>
</g>
<g >
<title>do_idle (2,557,396 samples, 0.02%)</title><rect x="177.5" y="517" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="180.48" y="527.5" ></text>
</g>
<g >
<title>__block_write_begin_int (262,565,104 samples, 1.68%)</title><rect x="721.3" y="309" width="19.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="724.34" y="319.5" ></text>
</g>
<g >
<title>folio_mark_accessed (52,173,383 samples, 0.33%)</title><rect x="271.1" y="245" width="3.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="274.10" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (338,579,020 samples, 2.17%)</title><rect x="808.2" y="613" width="25.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="811.17" y="623.5" >a..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1,304,704,892 samples, 8.36%)</title><rect x="705.5" y="549" width="98.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="708.53" y="559.5" >rustposix::..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (365,623,924 samples, 2.34%)</title><rect x="677.9" y="437" width="27.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="680.87" y="447.5" >e..</text>
</g>
<g >
<title>zap_pte_range (655,918,326 samples, 4.20%)</title><rect x="177.7" y="325" width="49.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="180.68" y="335.5" >zap_p..</text>
</g>
<g >
<title>__xa_set_mark (51,047,743 samples, 0.33%)</title><rect x="733.0" y="261" width="3.9" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="736.01" y="271.5" ></text>
</g>
<g >
<title>unmap_vmas (655,918,326 samples, 4.20%)</title><rect x="177.7" y="389" width="49.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="180.68" y="399.5" >unmap..</text>
</g>
<g >
<title>start_kernel (370,420,589 samples, 2.37%)</title><rect x="1162.0" y="581" width="28.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1164.98" y="591.5" >s..</text>
</g>
<g >
<title>[unknown] (475,347,183 samples, 3.05%)</title><rect x="227.3" y="613" width="35.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="230.29" y="623.5" >[un..</text>
</g>
<g >
<title>__x64_sys_epoll_pwait (766,189,711 samples, 4.91%)</title><rect x="1074.1" y="581" width="58.0" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1077.13" y="591.5" >__x64_..</text>
</g>
<g >
<title>psi_group_change (623,017,693 samples, 3.99%)</title><rect x="47.1" y="261" width="47.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="50.10" y="271.5" >psi_..</text>
</g>
<g >
<title>unmap_region (156,645,136 samples, 1.00%)</title><rect x="267.1" y="357" width="11.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="270.15" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (52,327,336 samples, 0.34%)</title><rect x="745.2" y="293" width="3.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="748.15" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (655,918,326 samples, 4.20%)</title><rect x="177.7" y="597" width="49.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="180.68" y="607.5" >do_sy..</text>
</g>
<g >
<title>ext4_buffered_write_iter (473,793,040 samples, 3.04%)</title><rect x="227.4" y="309" width="35.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="230.41" y="319.5" >ext..</text>
</g>
<g >
<title>cache_from_obj (52,234,190 samples, 0.33%)</title><rect x="697.6" y="37" width="4.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="700.62" y="47.5" ></text>
</g>
<g >
<title>get_page_from_freelist (52,253,034 samples, 0.33%)</title><rect x="781.2" y="261" width="4.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="784.25" y="271.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,364,202 samples, 0.01%)</title><rect x="177.5" y="469" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="180.48" y="479.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (51,534,422 samples, 0.33%)</title><rect x="721.3" y="197" width="3.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="724.34" y="207.5" ></text>
</g>
<g >
<title>bprm_execve (717,309,991 samples, 4.60%)</title><rect x="833.8" y="549" width="54.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="836.78" y="559.5" >bprm_..</text>
</g>
<g >
<title>__munmap (156,645,136 samples, 1.00%)</title><rect x="267.1" y="469" width="11.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="270.15" y="479.5" ></text>
</g>
<g >
<title>force_page_cache_ra (515,817,776 samples, 3.31%)</title><rect x="761.2" y="357" width="39.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="764.24" y="367.5" >for..</text>
</g>
<g >
<title>cpuidle_enter_state (395,142,880 samples, 2.53%)</title><rect x="1132.1" y="517" width="29.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1135.09" y="527.5" >cp..</text>
</g>
<g >
<title>seq_read (1,283,000,564 samples, 8.22%)</title><rect x="888.0" y="501" width="97.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="891.04" y="511.5" >seq_read</text>
</g>
<g >
<title>pagecache_get_page (473,061,573 samples, 3.03%)</title><rect x="227.5" y="245" width="35.7" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="230.46" y="255.5" >pag..</text>
</g>
<g >
<title>do_syscall_64 (1,554,127 samples, 0.01%)</title><rect x="227.3" y="533" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="230.29" y="543.5" ></text>
</g>
<g >
<title>mmput (655,918,326 samples, 4.20%)</title><rect x="177.7" y="437" width="49.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="180.68" y="447.5" >mmput</text>
</g>
<g >
<title>__x64_sys_unlink (365,623,924 samples, 2.34%)</title><rect x="677.9" y="405" width="27.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="680.87" y="415.5" >_..</text>
</g>
<g >
<title>handle_mm_fault (471,841,302 samples, 3.02%)</title><rect x="717.4" y="421" width="35.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="720.38" y="431.5" >han..</text>
</g>
<g >
<title>set_page_dirty (52,327,336 samples, 0.34%)</title><rect x="745.2" y="341" width="3.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="748.15" y="351.5" ></text>
</g>
<g >
<title>record__pushfn (473,793,040 samples, 3.04%)</title><rect x="227.4" y="533" width="35.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="230.41" y="543.5" >rec..</text>
</g>
<g >
<title>do_idle (370,420,589 samples, 2.37%)</title><rect x="1162.0" y="517" width="28.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1164.98" y="527.5" >d..</text>
</g>
<g >
<title>NaClTextDyncodeCreate (5,011,427,545 samples, 32.13%)</title><rect x="279.0" y="549" width="379.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="282.00" y="559.5" >NaClTextDyncodeCreate</text>
</g>
<g >
<title>__es_insert_extent (51,790,637 samples, 0.33%)</title><rect x="725.2" y="245" width="4.0" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="728.23" y="255.5" ></text>
</g>
<g >
<title>ext4_readahead (135,921,779 samples, 0.87%)</title><rect x="785.2" y="309" width="10.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="788.20" y="319.5" ></text>
</g>
<g >
<title>handle_pte_fault (471,841,302 samples, 3.02%)</title><rect x="717.4" y="389" width="35.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="720.38" y="399.5" >han..</text>
</g>
<g >
<title>__x64_sys_execve (655,918,326 samples, 4.20%)</title><rect x="177.7" y="581" width="49.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="180.68" y="591.5" >__x64..</text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (52,205,356 samples, 0.33%)</title><rect x="693.7" y="85" width="3.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="696.68" y="95.5" ></text>
</g>
<g >
<title>psi_task_change (623,017,693 samples, 3.99%)</title><rect x="47.1" y="277" width="47.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="50.10" y="287.5" >psi_..</text>
</g>
<g >
<title>folio_batch_move_lru (52,050,916 samples, 0.33%)</title><rect x="777.3" y="293" width="3.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="780.31" y="303.5" ></text>
</g>
<g >
<title>mark_page_accessed (52,173,383 samples, 0.33%)</title><rect x="271.1" y="261" width="3.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="274.10" y="271.5" ></text>
</g>
<g >
<title>create_empty_buffers (51,534,422 samples, 0.33%)</title><rect x="721.3" y="277" width="3.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="724.34" y="287.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (623,017,693 samples, 3.99%)</title><rect x="47.1" y="517" width="47.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="50.10" y="527.5" >cpui..</text>
</g>
<g >
<title>schedule_idle (474,392,100 samples, 3.04%)</title><rect x="94.2" y="549" width="35.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="97.23" y="559.5" >sch..</text>
</g>
<g >
<title>free_unref_page_list (52,250,069 samples, 0.33%)</title><rect x="681.8" y="149" width="4.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="684.82" y="159.5" ></text>
</g>
<g >
<title>alloc_page_buffers (51,534,422 samples, 0.33%)</title><rect x="721.3" y="261" width="3.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="724.34" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (52,112,726 samples, 0.33%)</title><rect x="705.5" y="485" width="4.0" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="708.53" y="495.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,304,704,892 samples, 8.36%)</title><rect x="705.5" y="565" width="98.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="708.53" y="575.5" >NaClSysWrite</text>
</g>
<g >
<title>__filemap_get_folio (473,061,573 samples, 3.03%)</title><rect x="227.5" y="229" width="35.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="230.46" y="239.5" >__f..</text>
</g>
<g >
<title>[libc.so.6] (684,466,265 samples, 4.39%)</title><rect x="709.5" y="485" width="51.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="712.47" y="495.5" >[libc..</text>
</g>
<g >
<title>std::fs::remove_file (365,623,924 samples, 2.34%)</title><rect x="677.9" y="485" width="27.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="680.87" y="495.5" >s..</text>
</g>
<g >
<title>expand_downwards (717,309,991 samples, 4.60%)</title><rect x="833.8" y="437" width="54.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="836.78" y="447.5" >expan..</text>
</g>
<g >
<title>vfs_read (1,283,000,564 samples, 8.22%)</title><rect x="888.0" y="533" width="97.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="891.04" y="543.5" >vfs_read</text>
</g>
<g >
<title>NaClSysCloseDecoder (156,645,136 samples, 1.00%)</title><rect x="267.1" y="581" width="11.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="270.15" y="591.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (684,466,265 samples, 4.39%)</title><rect x="709.5" y="517" width="51.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="712.47" y="527.5" >core:..</text>
</g>
<g >
<title>do_syscall_64 (156,645,136 samples, 1.00%)</title><rect x="267.1" y="437" width="11.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="270.15" y="447.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (261,561,182 samples, 1.68%)</title><rect x="658.1" y="501" width="19.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="661.08" y="511.5" ></text>
</g>
<g >
<title>[unknown] (21,972,610 samples, 0.14%)</title><rect x="45.4" y="613" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="48.44" y="623.5" ></text>
</g>
<g >
<title>evict (365,623,924 samples, 2.34%)</title><rect x="677.9" y="245" width="27.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="680.87" y="255.5" >e..</text>
</g>
<g >
<title>run_timer_softirq (623,017,693 samples, 3.99%)</title><rect x="47.1" y="421" width="47.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="50.10" y="431.5" >run_..</text>
</g>
<g >
<title>NaClSysUnlink (365,623,924 samples, 2.34%)</title><rect x="677.9" y="565" width="27.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="680.87" y="575.5" >N..</text>
</g>
<g >
<title>cpu_startup_entry (395,142,880 samples, 2.53%)</title><rect x="1132.1" y="581" width="29.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1135.09" y="591.5" >cp..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (623,017,693 samples, 3.99%)</title><rect x="47.1" y="485" width="47.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="50.10" y="495.5" >sysv..</text>
</g>
<g >
<title>[sel_ldr] (7,099,962,679 samples, 45.51%)</title><rect x="267.1" y="613" width="537.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="270.15" y="623.5" >[sel_ldr]</text>
</g>
<g >
<title>xas_start (51,047,743 samples, 0.33%)</title><rect x="733.0" y="229" width="3.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="736.01" y="239.5" ></text>
</g>
<g >
<title>vfs_write (473,793,040 samples, 3.04%)</title><rect x="227.4" y="405" width="35.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="230.41" y="415.5" >vfs..</text>
</g>
<g >
<title>__do_softirq (623,017,693 samples, 3.99%)</title><rect x="47.1" y="437" width="47.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="50.10" y="447.5" >__do..</text>
</g>
<g >
<title>evict (365,623,924 samples, 2.34%)</title><rect x="677.9" y="357" width="27.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="680.87" y="367.5" >e..</text>
</g>
<g >
<title>irq_exit_rcu (623,017,693 samples, 3.99%)</title><rect x="47.1" y="469" width="47.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="50.10" y="479.5" >irq_..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (533,468,680 samples, 3.42%)</title><rect x="1091.7" y="453" width="40.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1094.74" y="463.5" >fin..</text>
</g>
<g >
<title>filemap_release_folio (156,677,574 samples, 1.00%)</title><rect x="693.7" y="133" width="11.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="696.68" y="143.5" ></text>
</g>
<g >
<title>all (15,599,362,503 samples, 100%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,364,202 samples, 0.01%)</title><rect x="177.5" y="453" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="180.48" y="463.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (5,011,427,545 samples, 32.13%)</title><rect x="279.0" y="581" width="379.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="282.00" y="591.5" >NaClSysDyncodeCreateDecoder</text>
</g>
<g >
<title>walk_pgd_range (52,308,125 samples, 0.34%)</title><rect x="800.3" y="357" width="3.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="803.26" y="367.5" ></text>
</g>
<g >
<title>block_page_mkwrite (314,867,979 samples, 2.02%)</title><rect x="721.3" y="325" width="23.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="724.34" y="335.5" >b..</text>
</g>
<g >
<title>grab_cache_page_write_begin (473,061,573 samples, 3.03%)</title><rect x="227.5" y="261" width="35.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="230.46" y="271.5" >gra..</text>
</g>
<g >
<title>truncate_inode_pages_range (365,623,924 samples, 2.34%)</title><rect x="677.9" y="197" width="27.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="680.87" y="207.5" >t..</text>
</g>
<g >
<title>try_to_wake_up (623,017,693 samples, 3.99%)</title><rect x="47.1" y="325" width="47.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="50.10" y="335.5" >try_..</text>
</g>
<g >
<title>__folio_mark_dirty (108,244,986 samples, 0.69%)</title><rect x="733.0" y="277" width="8.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="736.01" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (473,793,040 samples, 3.04%)</title><rect x="227.4" y="453" width="35.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="230.41" y="463.5" >do_..</text>
</g>
<g >
<title>do_epoll_wait (766,189,711 samples, 4.91%)</title><rect x="1074.1" y="549" width="58.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1077.13" y="559.5" >do_epo..</text>
</g>
<g >
<title>read_tsc (370,420,589 samples, 2.37%)</title><rect x="1162.0" y="485" width="28.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1164.98" y="495.5" >r..</text>
</g>
<g >
<title>unmap_single_vma (156,645,136 samples, 1.00%)</title><rect x="267.1" y="325" width="11.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="270.15" y="335.5" ></text>
</g>
<g >
<title>do_idle (1,723,622,402 samples, 11.05%)</title><rect x="47.1" y="565" width="130.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="50.10" y="575.5" >do_idle</text>
</g>
<g >
<title>sel_ldr (8,259,611,520 samples, 52.95%)</title><rect x="263.2" y="629" width="624.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="266.25" y="639.5" >sel_ldr</text>
</g>
<g >
<title>mas_prev (717,309,991 samples, 4.60%)</title><rect x="833.8" y="421" width="54.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="836.78" y="431.5" >mas_p..</text>
</g>
<g >
<title>exit_mmap (655,918,326 samples, 4.20%)</title><rect x="177.7" y="405" width="49.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="180.68" y="415.5" >exit_..</text>
</g>
<g >
<title>ext4_evict_inode (365,623,924 samples, 2.34%)</title><rect x="677.9" y="229" width="27.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="680.87" y="239.5" >e..</text>
</g>
<g >
<title>__handle_mm_fault (471,841,302 samples, 3.02%)</title><rect x="717.4" y="405" width="35.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="720.38" y="415.5" >__h..</text>
</g>
<g >
<title>do_mas_align_munmap (156,645,136 samples, 1.00%)</title><rect x="267.1" y="373" width="11.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="270.15" y="383.5" ></text>
</g>
<g >
<title>bprm_execve (655,918,326 samples, 4.20%)</title><rect x="177.7" y="549" width="49.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="180.68" y="559.5" >bprm_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (717,309,991 samples, 4.60%)</title><rect x="833.8" y="613" width="54.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="836.78" y="623.5" >entry..</text>
</g>
<g >
<title>create_page_buffers (51,534,422 samples, 0.33%)</title><rect x="721.3" y="293" width="3.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="724.34" y="303.5" ></text>
</g>
<g >
<title>xas_start (63,189,213 samples, 0.41%)</title><rect x="795.5" y="293" width="4.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="798.48" y="303.5" ></text>
</g>
<g >
<title>alloc_pages (473,061,573 samples, 3.03%)</title><rect x="227.5" y="181" width="35.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="230.46" y="191.5" >all..</text>
</g>
<g >
<title>filemap_alloc_folio (52,253,034 samples, 0.33%)</title><rect x="781.2" y="325" width="4.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="784.25" y="335.5" ></text>
</g>
<g >
<title>ext4_page_mkwrite (314,867,979 samples, 2.02%)</title><rect x="721.3" y="341" width="23.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="724.34" y="351.5" >e..</text>
</g>
<g >
<title>truncate_cleanup_folio (261,156,236 samples, 1.67%)</title><rect x="685.8" y="181" width="19.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="688.77" y="191.5" ></text>
</g>
<g >
<title>dispatcher (365,623,924 samples, 2.34%)</title><rect x="677.9" y="533" width="27.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="680.87" y="543.5" >d..</text>
</g>
<g >
<title>__irq_exit_rcu (623,017,693 samples, 3.99%)</title><rect x="47.1" y="453" width="47.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="50.10" y="463.5" >__ir..</text>
</g>
<g >
<title>established_get_first (741,956,082 samples, 4.76%)</title><rect x="929.0" y="437" width="56.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="931.97" y="447.5" >estab..</text>
</g>
<g >
<title>ion (473,793,040 samples, 3.04%)</title><rect x="227.4" y="501" width="35.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="230.41" y="511.5" >ion</text>
</g>
<g >
<title>__mmput (655,918,326 samples, 4.20%)</title><rect x="177.7" y="421" width="49.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="180.68" y="431.5" >__mmput</text>
</g>
<g >
<title>filemap_alloc_folio (473,061,573 samples, 3.03%)</title><rect x="227.5" y="213" width="35.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="230.46" y="223.5" >fil..</text>
</g>
<g >
<title>ksys_write (473,793,040 samples, 3.04%)</title><rect x="227.4" y="421" width="35.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="230.41" y="431.5" >ksy..</text>
</g>
<g >
<title>cpuidle_idle_call (395,142,880 samples, 2.53%)</title><rect x="1132.1" y="549" width="29.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1135.09" y="559.5" >cp..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (156,645,136 samples, 1.00%)</title><rect x="267.1" y="453" width="11.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="270.15" y="463.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (623,017,693 samples, 3.99%)</title><rect x="47.1" y="549" width="47.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="50.10" y="559.5" >cpui..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (261,561,182 samples, 1.68%)</title><rect x="658.1" y="549" width="19.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="661.08" y="559.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (623,017,693 samples, 3.99%)</title><rect x="47.1" y="501" width="47.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="50.10" y="511.5" >asm_..</text>
</g>
<g >
<title>NaClValidateCode (5,011,427,545 samples, 32.13%)</title><rect x="279.0" y="533" width="379.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="282.00" y="543.5" >NaClValidateCode</text>
</g>
<g >
<title>do_syscall_64 (766,189,711 samples, 4.91%)</title><rect x="1074.1" y="597" width="58.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1077.13" y="607.5" >do_sys..</text>
</g>
<g >
<title>mark_buffer_dirty (159,240,045 samples, 1.02%)</title><rect x="729.2" y="293" width="12.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="732.15" y="303.5" ></text>
</g>
<g >
<title>__pagevec_release (104,467,688 samples, 0.67%)</title><rect x="677.9" y="181" width="7.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="680.87" y="191.5" ></text>
</g>
<g >
<title>__vm_munmap (156,645,136 samples, 1.00%)</title><rect x="267.1" y="405" width="11.9" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="270.15" y="415.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (655,918,326 samples, 4.20%)</title><rect x="177.7" y="277" width="49.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="180.68" y="287.5" >__mod..</text>
</g>
<g >
<title>bprm_execve.part.0 (655,918,326 samples, 4.20%)</title><rect x="177.7" y="533" width="49.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="180.68" y="543.5" >bprm_..</text>
</g>
<g >
<title>start_secondary (395,142,880 samples, 2.53%)</title><rect x="1132.1" y="597" width="29.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1135.09" y="607.5" >st..</text>
</g>
<g >
<title>do_epoll_pwait.part.0 (766,189,711 samples, 4.91%)</title><rect x="1074.1" y="565" width="58.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1077.13" y="575.5" >do_epo..</text>
</g>
<g >
<title>truncate_inode_pages_final (365,623,924 samples, 2.34%)</title><rect x="677.9" y="213" width="27.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="680.87" y="223.5" >t..</text>
</g>
<g >
<title>arch_call_rest_init (2,557,396 samples, 0.02%)</title><rect x="177.5" y="565" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="180.48" y="575.5" ></text>
</g>
<g >
<title>call_timer_fn (623,017,693 samples, 3.99%)</title><rect x="47.1" y="389" width="47.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="50.10" y="399.5" >call..</text>
</g>
<g >
<title>cpuidle_enter (395,142,880 samples, 2.53%)</title><rect x="1132.1" y="533" width="29.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1135.09" y="543.5" >cp..</text>
</g>
<g >
<title>__alloc_pages (52,253,034 samples, 0.33%)</title><rect x="781.2" y="277" width="4.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="784.25" y="287.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,364,202 samples, 0.01%)</title><rect x="177.5" y="485" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="180.48" y="495.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,557,396 samples, 0.02%)</title><rect x="177.5" y="533" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="180.48" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,554,127 samples, 0.01%)</title><rect x="227.3" y="549" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="230.29" y="559.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (7,099,962,679 samples, 45.51%)</title><rect x="267.1" y="597" width="537.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="270.15" y="607.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>ext4_dirty_folio (52,302,875 samples, 0.34%)</title><rect x="741.2" y="277" width="4.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="744.20" y="287.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get_mut (52,112,726 samples, 0.33%)</title><rect x="705.5" y="517" width="4.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="708.53" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (51,534,422 samples, 0.33%)</title><rect x="721.3" y="229" width="3.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="724.34" y="239.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::unlink_syscall (365,623,924 samples, 2.34%)</title><rect x="677.9" y="517" width="27.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="680.87" y="527.5" >r..</text>
</g>
<g >
<title>do_idle (395,142,880 samples, 2.53%)</title><rect x="1132.1" y="565" width="29.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1135.09" y="575.5" >do..</text>
</g>
<g >
<title>ValidateChunkAMD64 (5,011,427,545 samples, 32.13%)</title><rect x="279.0" y="501" width="379.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="282.00" y="511.5" >ValidateChunkAMD64</text>
</g>
<g >
<title>search_binary_handler (717,309,991 samples, 4.60%)</title><rect x="833.8" y="501" width="54.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="836.78" y="511.5" >searc..</text>
</g>
<g >
<title>dequeue_entity (232,721,031 samples, 1.49%)</title><rect x="1074.1" y="421" width="17.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1077.13" y="431.5" ></text>
</g>
<g >
<title>dequeue_task_fair (232,721,031 samples, 1.49%)</title><rect x="1074.1" y="437" width="17.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1077.13" y="447.5" ></text>
</g>
<g >
<title>release_pages (104,467,688 samples, 0.67%)</title><rect x="677.9" y="165" width="7.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="680.87" y="175.5" ></text>
</g>
<g >
<title>do_madvise.part.0 (568,125,901 samples, 3.64%)</title><rect x="761.2" y="437" width="43.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="764.24" y="447.5" >do_m..</text>
</g>
<g >
<title>folio_memcg_lock.part.0 (52,212,722 samples, 0.33%)</title><rect x="275.0" y="197" width="4.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="278.05" y="207.5" ></text>
</g>
<g >
<title>do_iter_write (473,793,040 samples, 3.04%)</title><rect x="227.4" y="357" width="35.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="230.41" y="367.5" >do_..</text>
</g>
<g >
<title>x86_64_start_kernel (370,420,589 samples, 2.37%)</title><rect x="1162.0" y="597" width="28.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1164.98" y="607.5" >x..</text>
</g>
<g >
<title>do_unlinkat (365,623,924 samples, 2.34%)</title><rect x="677.9" y="389" width="27.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="680.87" y="399.5" >d..</text>
</g>
<g >
<title>__walk_page_range (52,308,125 samples, 0.34%)</title><rect x="800.3" y="373" width="3.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="803.26" y="383.5" ></text>
</g>
<g >
<title>seq_read_iter (1,283,000,564 samples, 8.22%)</title><rect x="888.0" y="485" width="97.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="891.04" y="495.5" >seq_read_iter</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (52,112,726 samples, 0.33%)</title><rect x="705.5" y="405" width="4.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="708.53" y="415.5" ></text>
</g>
<g >
<title>rest_init (2,557,396 samples, 0.02%)</title><rect x="177.5" y="549" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="180.48" y="559.5" ></text>
</g>
<g >
<title>unlink (365,623,924 samples, 2.34%)</title><rect x="677.9" y="453" width="27.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="680.87" y="463.5" >u..</text>
</g>
<g >
<title>NaClSysDyncodeCreate (5,011,427,545 samples, 32.13%)</title><rect x="279.0" y="565" width="379.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="282.00" y="575.5" >NaClSysDyncodeCreate</text>
</g>
<g >
<title>walk_page_range (52,308,125 samples, 0.34%)</title><rect x="800.3" y="389" width="3.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="803.26" y="399.5" ></text>
</g>
<g >
<title>iput (365,623,924 samples, 2.34%)</title><rect x="677.9" y="373" width="27.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="680.87" y="383.5" >i..</text>
</g>
<g >
<title>__cmd_record (475,347,183 samples, 3.05%)</title><rect x="227.3" y="597" width="35.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="230.29" y="607.5" >__c..</text>
</g>
<g >
<title>dispatcher (156,645,136 samples, 1.00%)</title><rect x="267.1" y="533" width="11.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="270.15" y="543.5" ></text>
</g>
<g >
<title>dput (365,623,924 samples, 2.34%)</title><rect x="677.9" y="309" width="27.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="680.87" y="319.5" >d..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (655,918,326 samples, 4.20%)</title><rect x="177.7" y="565" width="49.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="180.68" y="575.5" >do_ex..</text>
</g>
<g >
<title>rest_init (370,420,589 samples, 2.37%)</title><rect x="1162.0" y="549" width="28.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1164.98" y="559.5" >r..</text>
</g>
<g >
<title>ovl_write_iter (473,793,040 samples, 3.04%)</title><rect x="227.4" y="389" width="35.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="230.41" y="399.5" >ovl..</text>
</g>
<g >
<title>x86_64_start_kernel (2,557,396 samples, 0.02%)</title><rect x="177.5" y="597" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="180.48" y="607.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (684,466,265 samples, 4.39%)</title><rect x="709.5" y="501" width="51.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="712.47" y="511.5" >core:..</text>
</g>
<g >
<title>alloc_buffer_head (51,534,422 samples, 0.33%)</title><rect x="721.3" y="245" width="3.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="724.34" y="255.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (395,142,880 samples, 2.53%)</title><rect x="1132.1" y="501" width="29.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1135.09" y="511.5" >mw..</text>
</g>
<g >
<title>perf_poll (1,554,127 samples, 0.01%)</title><rect x="227.3" y="469" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="230.29" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1,554,127 samples, 0.01%)</title><rect x="227.3" y="517" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="230.29" y="527.5" ></text>
</g>
<g >
<title>rmqueue (472,330,106 samples, 3.03%)</title><rect x="227.5" y="133" width="35.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="230.52" y="143.5" >rmq..</text>
</g>
<g >
<title>generic_perform_write (473,061,573 samples, 3.03%)</title><rect x="227.5" y="293" width="35.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="230.46" y="303.5" >gen..</text>
</g>
<g >
<title>folio_alloc (473,061,573 samples, 3.03%)</title><rect x="227.5" y="197" width="35.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="230.46" y="207.5" >fol..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (717,309,991 samples, 4.60%)</title><rect x="833.8" y="565" width="54.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="836.78" y="575.5" >do_ex..</text>
</g>
<g >
<title>hashbrown::map::make_hash (52,112,726 samples, 0.33%)</title><rect x="705.5" y="469" width="4.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="708.53" y="479.5" ></text>
</g>
<g >
<title>alloc_pages (52,253,034 samples, 0.33%)</title><rect x="781.2" y="293" width="4.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="784.25" y="303.5" ></text>
</g>
<g >
<title>unmap_page_range (156,645,136 samples, 1.00%)</title><rect x="267.1" y="309" width="11.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="270.15" y="319.5" ></text>
</g>
<g >
<title>wake_up_process (623,017,693 samples, 3.99%)</title><rect x="47.1" y="341" width="47.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="50.10" y="351.5" >wake..</text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (156,677,574 samples, 1.00%)</title><rect x="693.7" y="101" width="11.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="696.68" y="111.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (515,817,776 samples, 3.31%)</title><rect x="761.2" y="341" width="39.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="764.24" y="351.5" >pag..</text>
</g>
<g >
<title>record__mmap_read_evlist (473,793,040 samples, 3.04%)</title><rect x="227.4" y="565" width="35.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="230.41" y="575.5" >rec..</text>
</g>
<g >
<title>unmap_vmas (156,645,136 samples, 1.00%)</title><rect x="267.1" y="341" width="11.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="270.15" y="351.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (156,645,136 samples, 1.00%)</title><rect x="267.1" y="293" width="11.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="270.15" y="303.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (52,112,726 samples, 0.33%)</title><rect x="705.5" y="453" width="4.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="708.53" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (52,112,726 samples, 0.33%)</title><rect x="705.5" y="501" width="4.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="708.53" y="511.5" ></text>
</g>
<g >
<title>do_user_addr_fault (471,841,302 samples, 3.02%)</title><rect x="717.4" y="437" width="35.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="720.38" y="447.5" >do_..</text>
</g>
<g >
<title>__mod_lruvec_page_state (655,918,326 samples, 4.20%)</title><rect x="177.7" y="293" width="49.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="180.68" y="303.5" >__mod..</text>
</g>
<g >
<title>zap_pte_range (156,645,136 samples, 1.00%)</title><rect x="267.1" y="277" width="11.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="270.15" y="287.5" ></text>
</g>
<g >
<title>dequeue_task (232,721,031 samples, 1.49%)</title><rect x="1074.1" y="453" width="17.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1077.13" y="463.5" ></text>
</g>
<g >
<title>ttwu_do_activate (623,017,693 samples, 3.99%)</title><rect x="47.1" y="309" width="47.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="50.10" y="319.5" >ttwu..</text>
</g>
<g >
<title>folio_mark_dirty (52,212,722 samples, 0.33%)</title><rect x="275.0" y="245" width="4.0" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="278.05" y="255.5" ></text>
</g>
<g >
<title>cpu_startup_entry (370,420,589 samples, 2.37%)</title><rect x="1162.0" y="533" width="28.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1164.98" y="543.5" >c..</text>
</g>
<g >
<title>__poll (1,554,127 samples, 0.01%)</title><rect x="227.3" y="565" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="230.29" y="575.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,364,202 samples, 0.01%)</title><rect x="177.5" y="501" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="180.48" y="511.5" ></text>
</g>
<g >
<title>perf_mmap__push (473,793,040 samples, 3.04%)</title><rect x="227.4" y="549" width="35.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="230.41" y="559.5" >per..</text>
</g>
<g >
<title>madvise_vma_behavior (568,125,901 samples, 3.64%)</title><rect x="761.2" y="405" width="43.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="764.24" y="415.5" >madv..</text>
</g>
<g >
<title>perf (475,347,183 samples, 3.05%)</title><rect x="227.3" y="629" width="35.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="230.29" y="639.5" >perf</text>
</g>
<g >
<title>try_to_free_buffers (104,472,218 samples, 0.67%)</title><rect x="697.6" y="85" width="7.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="700.62" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (766,189,711 samples, 4.91%)</title><rect x="1074.1" y="613" width="58.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1077.13" y="623.5" >entry_..</text>
</g>
<g >
<title>unmap_single_vma (655,918,326 samples, 4.20%)</title><rect x="177.7" y="373" width="49.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="180.68" y="383.5" >unmap..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (1,252,592,166 samples, 8.03%)</title><rect x="709.5" y="533" width="94.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="712.47" y="543.5" >rustposix::..</text>
</g>
<g >
<title>[unknown] (52,194,447 samples, 0.33%)</title><rect x="804.2" y="613" width="4.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="807.22" y="623.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,726,179,798 samples, 11.07%)</title><rect x="47.1" y="613" width="130.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="50.10" y="623.5" >secondary_startu..</text>
</g>
<g >
<title>search_binary_handler (655,918,326 samples, 4.20%)</title><rect x="177.7" y="501" width="49.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="180.68" y="511.5" >searc..</text>
</g>
<g >
<title>ext4_file_write_iter (473,793,040 samples, 3.04%)</title><rect x="227.4" y="325" width="35.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="230.41" y="335.5" >ext..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (655,918,326 samples, 4.20%)</title><rect x="177.7" y="613" width="49.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="180.68" y="623.5" >entry..</text>
</g>
<g >
<title>block_invalidate_folio (208,956,304 samples, 1.34%)</title><rect x="689.7" y="149" width="15.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="692.72" y="159.5" ></text>
</g>
<g >
<title>lru_add_fn (52,050,916 samples, 0.33%)</title><rect x="777.3" y="277" width="3.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="780.31" y="287.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (765,563,469 samples, 4.91%)</title><rect x="1132.1" y="613" width="57.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1135.09" y="623.5" >second..</text>
</g>
<g >
<title>delayed_work_timer_fn (623,017,693 samples, 3.99%)</title><rect x="47.1" y="373" width="47.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="50.10" y="383.5" >dela..</text>
</g>
<g >
<title>start_secondary (1,723,622,402 samples, 11.05%)</title><rect x="47.1" y="597" width="130.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="50.10" y="607.5" >start_secondary</text>
</g>
<g >
<title>cpuacct_charge (232,721,031 samples, 1.49%)</title><rect x="1074.1" y="389" width="17.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1077.13" y="399.5" ></text>
</g>
<g >
<title>__schedule (766,189,711 samples, 4.91%)</title><rect x="1074.1" y="469" width="58.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1077.13" y="479.5" >__sche..</text>
</g>
<g >
<title>_raw_spin_lock (52,308,125 samples, 0.34%)</title><rect x="800.3" y="293" width="3.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="803.26" y="303.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (623,017,693 samples, 3.99%)</title><rect x="47.1" y="405" width="47.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="50.10" y="415.5" >__ru..</text>
</g>
<g >
<title>xas_load (63,189,213 samples, 0.41%)</title><rect x="795.5" y="309" width="4.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="798.48" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (568,125,901 samples, 3.64%)</title><rect x="761.2" y="485" width="43.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="764.24" y="495.5" >entr..</text>
</g>
<g >
<title>__rcu_read_unlock (107,138,296 samples, 0.69%)</title><rect x="769.2" y="293" width="8.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="772.21" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (717,309,991 samples, 4.60%)</title><rect x="833.8" y="597" width="54.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="836.78" y="607.5" >do_sy..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (261,561,182 samples, 1.68%)</title><rect x="658.1" y="517" width="19.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="661.08" y="527.5" ></text>
</g>
<g >
<title>read_pages (135,921,779 samples, 0.87%)</title><rect x="785.2" y="325" width="10.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="788.20" y="335.5" ></text>
</g>
<g >
<title>filemap_add_folio (264,453,750 samples, 1.70%)</title><rect x="761.2" y="325" width="20.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="764.24" y="335.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (261,561,182 samples, 1.68%)</title><rect x="658.1" y="581" width="19.8" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="661.08" y="591.5" ></text>
</g>
<g >
<title>ksys_read (1,283,000,564 samples, 8.22%)</title><rect x="888.0" y="549" width="97.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="891.04" y="559.5" >ksys_read</text>
</g>
<g >
<title>vfs_iter_write (473,793,040 samples, 3.04%)</title><rect x="227.4" y="373" width="35.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="230.41" y="383.5" >vfs..</text>
</g>
<g >
<title>enqueue_task (623,017,693 samples, 3.99%)</title><rect x="47.1" y="293" width="47.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="50.10" y="303.5" >enqu..</text>
</g>
<g >
<title>ovl_destroy_inode (365,623,924 samples, 2.34%)</title><rect x="677.9" y="325" width="27.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="680.87" y="335.5" >o..</text>
</g>
<g >
<title>std::sys::unix::fs::unlink (365,623,924 samples, 2.34%)</title><rect x="677.9" y="469" width="27.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="680.87" y="479.5" >s..</text>
</g>
<g >
<title>ext4_es_insert_delayed_block (51,790,637 samples, 0.33%)</title><rect x="725.2" y="261" width="4.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="728.23" y="271.5" ></text>
</g>
<g >
<title>lind_unlink (365,623,924 samples, 2.34%)</title><rect x="677.9" y="549" width="27.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="680.87" y="559.5" >l..</text>
</g>
<g >
<title>madvise_walk_vmas (568,125,901 samples, 3.64%)</title><rect x="761.2" y="421" width="43.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="764.24" y="431.5" >madv..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (52,112,726 samples, 0.33%)</title><rect x="705.5" y="421" width="4.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="708.53" y="431.5" ></text>
</g>
<g >
<title>setup_arg_pages (717,309,991 samples, 4.60%)</title><rect x="833.8" y="469" width="54.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="836.78" y="479.5" >setup..</text>
</g>
<g >
<title>folio_mark_dirty (52,302,875 samples, 0.34%)</title><rect x="741.2" y="293" width="4.0" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="744.20" y="303.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (51,565,383 samples, 0.33%)</title><rect x="263.2" y="597" width="3.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="266.25" y="607.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (655,918,326 samples, 4.20%)</title><rect x="177.7" y="341" width="49.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="180.68" y="351.5" >zap_p..</text>
</g>
<g >
<title>__mod_node_page_state (655,918,326 samples, 4.20%)</title><rect x="177.7" y="261" width="49.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="180.68" y="271.5" >__mod..</text>
</g>
<g >
<title>fdarray__poll (1,554,127 samples, 0.01%)</title><rect x="227.3" y="581" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="230.29" y="591.5" ></text>
</g>
<g >
<title>start_kernel (2,557,396 samples, 0.02%)</title><rect x="177.5" y="581" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="180.48" y="591.5" ></text>
</g>
<g >
<title>swapper (2,708,846,527 samples, 17.37%)</title><rect x="985.1" y="629" width="204.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="988.09" y="639.5" >swapper</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (52,112,726 samples, 0.33%)</title><rect x="705.5" y="437" width="4.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="708.53" y="447.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (51,790,637 samples, 0.33%)</title><rect x="725.2" y="293" width="4.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="728.23" y="303.5" ></text>
</g>
<g >
<title>block_dirty_folio (52,212,722 samples, 0.33%)</title><rect x="275.0" y="213" width="4.0" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="278.05" y="223.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (766,189,711 samples, 4.91%)</title><rect x="1074.1" y="517" width="58.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1077.13" y="527.5" >schedu..</text>
</g>
<g >
<title>[unknown] (1,283,000,564 samples, 8.22%)</title><rect x="888.0" y="613" width="97.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="891.04" y="623.5" >[unknown]</text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (5,011,427,545 samples, 32.13%)</title><rect x="279.0" y="517" width="379.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="282.00" y="527.5" >ApplyDfaValidator_x86_64</text>
</g>
<g >
<title>__x64_sys_munmap (156,645,136 samples, 1.00%)</title><rect x="267.1" y="421" width="11.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="270.15" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (52,253,034 samples, 0.33%)</title><rect x="781.2" y="245" width="4.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="784.25" y="255.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,304,704,892 samples, 8.36%)</title><rect x="705.5" y="581" width="98.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="708.53" y="591.5" >NaClSysWrit..</text>
</g>
<g >
<title>folio_add_lru (52,050,916 samples, 0.33%)</title><rect x="777.3" y="309" width="3.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="780.31" y="319.5" ></text>
</g>
<g >
<title>perf-exec (655,918,326 samples, 4.20%)</title><rect x="177.7" y="629" width="49.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="180.68" y="639.5" >perf-..</text>
</g>
<g >
<title>do_syscall_64 (568,125,901 samples, 3.64%)</title><rect x="761.2" y="469" width="43.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="764.24" y="479.5" >do_s..</text>
</g>
<g >
<title>ext4_mpage_readpages (135,921,779 samples, 0.87%)</title><rect x="785.2" y="293" width="10.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="788.20" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (568,125,901 samples, 3.64%)</title><rect x="761.2" y="453" width="43.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="764.24" y="463.5" >__x6..</text>
</g>
<g >
<title>walk_pud_range.isra.0 (52,308,125 samples, 0.34%)</title><rect x="800.3" y="325" width="3.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="803.26" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper_inner (156,645,136 samples, 1.00%)</title><rect x="267.1" y="501" width="11.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="270.15" y="511.5" ></text>
</g>
<g >
<title>unmap_page_range (655,918,326 samples, 4.20%)</title><rect x="177.7" y="357" width="49.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="180.68" y="367.5" >unmap..</text>
</g>
<g >
<title>ext4_da_write_begin (473,061,573 samples, 3.03%)</title><rect x="227.5" y="277" width="35.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="230.46" y="287.5" >ext..</text>
</g>
<g >
<title>mod_objcg_state (52,238,028 samples, 0.33%)</title><rect x="701.6" y="37" width="3.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="704.58" y="47.5" ></text>
</g>
<g >
<title>[libc.so.6] (52,194,447 samples, 0.33%)</title><rect x="804.2" y="597" width="4.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="807.22" y="607.5" ></text>
</g>
<g >
<title>do_sys_poll (1,554,127 samples, 0.01%)</title><rect x="227.3" y="501" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="230.29" y="511.5" ></text>
</g>
<g >
<title>get_page_from_freelist (473,061,573 samples, 3.03%)</title><rect x="227.5" y="149" width="35.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="230.46" y="159.5" >get..</text>
</g>
<g >
<title>ext4_release_folio (156,677,574 samples, 1.00%)</title><rect x="693.7" y="117" width="11.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="696.68" y="127.5" ></text>
</g>
<g >
<title>cpuidle_enter (623,017,693 samples, 3.99%)</title><rect x="47.1" y="533" width="47.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="50.10" y="543.5" >cpui..</text>
</g>
<g >
<title>record__write (473,793,040 samples, 3.04%)</title><rect x="227.4" y="517" width="35.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="230.41" y="527.5" >rec..</text>
</g>
<g >
<title>xas_load (51,047,743 samples, 0.33%)</title><rect x="733.0" y="245" width="3.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="736.01" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages (473,061,573 samples, 3.03%)</title><rect x="227.5" y="165" width="35.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="230.46" y="175.5" >__a..</text>
</g>
<g >
<title>folio_alloc (52,253,034 samples, 0.33%)</title><rect x="781.2" y="309" width="4.0" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="784.25" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (52,112,726 samples, 0.33%)</title><rect x="705.5" y="389" width="4.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="708.53" y="399.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get_mut (52,112,726 samples, 0.33%)</title><rect x="705.5" y="533" width="4.0" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="708.53" y="543.5" ></text>
</g>
<g >
<title>proc_reg_read (1,283,000,564 samples, 8.22%)</title><rect x="888.0" y="517" width="97.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="891.04" y="527.5" >proc_reg_read</text>
</g>
<g >
<title>do_syscall_64 (365,623,924 samples, 2.34%)</title><rect x="677.9" y="421" width="27.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="680.87" y="431.5" >d..</text>
</g>
<g >
<title>folio_mark_dirty (52,327,336 samples, 0.34%)</title><rect x="745.2" y="325" width="3.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="748.15" y="335.5" ></text>
</g>
<g >
<title>fault_dirty_shared_page (52,327,336 samples, 0.34%)</title><rect x="745.2" y="357" width="3.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="748.15" y="367.5" ></text>
</g>
<g >
<title>exec_binprm (717,309,991 samples, 4.60%)</title><rect x="833.8" y="517" width="54.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="836.78" y="527.5" >exec_..</text>
</g>
<g >
<title>schedule (766,189,711 samples, 4.91%)</title><rect x="1074.1" y="485" width="58.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1077.13" y="495.5" >schedule</text>
</g>
<g >
<title>asm_exc_page_fault (524,168,801 samples, 3.36%)</title><rect x="713.4" y="469" width="39.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="716.42" y="479.5" >asm..</text>
</g>
<g >
<title>walk_pmd_range.isra.0 (52,308,125 samples, 0.34%)</title><rect x="800.3" y="309" width="3.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="803.26" y="319.5" ></text>
</g>
<g >
<title>folio_account_dirtied (57,197,243 samples, 0.37%)</title><rect x="736.9" y="261" width="4.3" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="739.87" y="271.5" ></text>
</g>
<g >
<title>iput (365,623,924 samples, 2.34%)</title><rect x="677.9" y="261" width="27.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="680.87" y="271.5" >i..</text>
</g>
<g >
<title>__filemap_add_folio (212,402,834 samples, 1.36%)</title><rect x="761.2" y="309" width="16.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="764.24" y="319.5" ></text>
</g>
<g >
<title>xa_load (63,189,213 samples, 0.41%)</title><rect x="795.5" y="325" width="4.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="798.48" y="335.5" ></text>
</g>
<g >
<title>do_page_mkwrite (314,867,979 samples, 2.02%)</title><rect x="721.3" y="357" width="23.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="724.34" y="367.5" >d..</text>
</g>
<g >
<title>[libc.so.6] (261,561,182 samples, 1.68%)</title><rect x="658.1" y="485" width="19.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="661.08" y="495.5" ></text>
</g>
<g >
<title>ext4_dirty_folio (52,212,722 samples, 0.33%)</title><rect x="275.0" y="229" width="4.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="278.05" y="239.5" ></text>
</g>
<g >
<title>mas_prev_nentry (717,309,991 samples, 4.60%)</title><rect x="833.8" y="405" width="54.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="836.78" y="415.5" >mas_p..</text>
</g>
<g >
<title>write (473,793,040 samples, 3.04%)</title><rect x="227.4" y="485" width="35.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="230.41" y="495.5" >write</text>
</g>
<g >
<title>__x64_sys_read (1,283,000,564 samples, 8.22%)</title><rect x="888.0" y="565" width="97.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="891.04" y="575.5" >__x64_sys_r..</text>
</g>
<g >
<title>load_elf_binary (717,309,991 samples, 4.60%)</title><rect x="833.8" y="485" width="54.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="836.78" y="495.5" >load_..</text>
</g>
<g >
<title>cpu_startup_entry (1,723,622,402 samples, 11.05%)</title><rect x="47.1" y="581" width="130.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="50.10" y="591.5" >cpu_startup_entry</text>
</g>
<g >
<title>sleep (1,283,000,564 samples, 8.22%)</title><rect x="888.0" y="629" width="97.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="891.04" y="639.5" >sleep</text>
</g>
<g >
<title>rustposix::interface::file::removefile (365,623,924 samples, 2.34%)</title><rect x="677.9" y="501" width="27.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="680.87" y="511.5" >r..</text>
</g>
<g >
<title>do_poll.constprop.0 (1,554,127 samples, 0.01%)</title><rect x="227.3" y="485" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="230.29" y="495.5" ></text>
</g>
<g >
<title>set_page_dirty (52,212,722 samples, 0.33%)</title><rect x="275.0" y="261" width="4.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="278.05" y="271.5" ></text>
</g>
<g >
<title>walk_p4d_range (52,308,125 samples, 0.34%)</title><rect x="800.3" y="341" width="3.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="803.26" y="351.5" ></text>
</g>
<g >
<title>arch_call_rest_init (370,420,589 samples, 2.37%)</title><rect x="1162.0" y="565" width="28.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1164.98" y="575.5" >a..</text>
</g>
<g >
<title>ext4_invalidate_folio (261,156,236 samples, 1.67%)</title><rect x="685.8" y="165" width="19.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="688.77" y="175.5" ></text>
</g>
<g >
<title>free_buffer_head (104,472,218 samples, 0.67%)</title><rect x="697.6" y="69" width="7.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="700.62" y="79.5" ></text>
</g>
<g >
<title>destroy_inode (365,623,924 samples, 2.34%)</title><rect x="677.9" y="341" width="27.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="680.87" y="351.5" >d..</text>
</g>
<g >
<title>__mod_node_page_state (57,197,243 samples, 0.37%)</title><rect x="736.9" y="245" width="4.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="739.87" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_free (104,472,218 samples, 0.67%)</title><rect x="697.6" y="53" width="7.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="700.62" y="63.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (261,561,182 samples, 1.68%)</title><rect x="658.1" y="533" width="19.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="661.08" y="543.5" ></text>
</g>
<g >
<title>try_charge_memcg (105,264,538 samples, 0.67%)</title><rect x="761.2" y="261" width="8.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="764.24" y="271.5" ></text>
</g>
<g >
<title>__switch_to_asm (577,838,190 samples, 3.70%)</title><rect x="1030.4" y="613" width="43.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1033.42" y="623.5" >__sw..</text>
</g>
<g >
<title>tcp_get_idx (741,956,082 samples, 4.76%)</title><rect x="929.0" y="453" width="56.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="931.97" y="463.5" >tcp_g..</text>
</g>
<g >
<title>__dentry_kill (365,623,924 samples, 2.34%)</title><rect x="677.9" y="293" width="27.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="680.87" y="303.5" >_..</text>
</g>
<g >
<title>generic_fadvise (515,817,776 samples, 3.31%)</title><rect x="761.2" y="373" width="39.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="764.24" y="383.5" >gen..</text>
</g>
<g >
<title>__queue_work (623,017,693 samples, 3.99%)</title><rect x="47.1" y="357" width="47.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="50.10" y="367.5" >__qu..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::close (156,645,136 samples, 1.00%)</title><rect x="267.1" y="485" width="11.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="270.15" y="495.5" ></text>
</g>
<g >
<title>__madvise (568,125,901 samples, 3.64%)</title><rect x="761.2" y="501" width="43.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="764.24" y="511.5" >__ma..</text>
</g>
<g >
<title>begin_new_exec (655,918,326 samples, 4.20%)</title><rect x="177.7" y="469" width="49.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="180.68" y="479.5" >begin..</text>
</g>
<g >
<title>tcp_seq_start (741,956,082 samples, 4.76%)</title><rect x="929.0" y="469" width="56.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="931.97" y="479.5" >tcp_s..</text>
</g>
<g >
<title>folio_memcg_lock (52,302,875 samples, 0.34%)</title><rect x="741.2" y="261" width="4.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="744.20" y="271.5" ></text>
</g>
<g >
<title>sync_regs (108,072,177 samples, 0.69%)</title><rect x="753.1" y="469" width="8.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="756.07" y="479.5" ></text>
</g>
<g >
<title>ep_poll (766,189,711 samples, 4.91%)</title><rect x="1074.1" y="533" width="58.0" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1077.13" y="543.5" >ep_poll</text>
</g>
<g >
<title>exec_mmap (655,918,326 samples, 4.20%)</title><rect x="177.7" y="453" width="49.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="180.68" y="463.5" >exec_..</text>
</g>
<g >
<title>NaClSysClose (156,645,136 samples, 1.00%)</title><rect x="267.1" y="565" width="11.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="270.15" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_restart (626,212,609 samples, 4.01%)</title><rect x="130.1" y="533" width="47.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="133.11" y="543.5" >tick..</text>
</g>
<g >
<title>charge_memcg (105,264,538 samples, 0.67%)</title><rect x="761.2" y="277" width="8.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="764.24" y="287.5" ></text>
</g>
<g >
<title>do_mas_munmap (156,645,136 samples, 1.00%)</title><rect x="267.1" y="389" width="11.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="270.15" y="399.5" ></text>
</g>
<g >
<title>[anon] (51,565,383 samples, 0.33%)</title><rect x="263.2" y="613" width="3.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="266.25" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (156,645,136 samples, 1.00%)</title><rect x="267.1" y="517" width="11.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="270.15" y="527.5" ></text>
</g>
<g >
<title>ext4_dirty_folio (52,327,336 samples, 0.34%)</title><rect x="745.2" y="309" width="3.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="748.15" y="319.5" ></text>
</g>
<g >
<title>set_page_dirty (52,302,875 samples, 0.34%)</title><rect x="741.2" y="309" width="4.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="744.20" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (370,420,589 samples, 2.37%)</title><rect x="1162.0" y="501" width="28.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1164.98" y="511.5" >t..</text>
</g>
<g >
<title>page_remove_rmap (655,918,326 samples, 4.20%)</title><rect x="177.7" y="309" width="49.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="180.68" y="319.5" >page_..</text>
</g>
<g >
<title>NaClSysUnlinkDecoder (365,623,924 samples, 2.34%)</title><rect x="677.9" y="581" width="27.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="680.87" y="591.5" >N..</text>
</g>
<g >
<title>tick_nohz_idle_exit (626,212,609 samples, 4.01%)</title><rect x="130.1" y="549" width="47.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="133.11" y="559.5" >tick..</text>
</g>
<g >
<title>lind_close (156,645,136 samples, 1.00%)</title><rect x="267.1" y="549" width="11.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="270.15" y="559.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (51,790,637 samples, 0.33%)</title><rect x="725.2" y="277" width="4.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="728.23" y="287.5" ></text>
</g>
<g >
<title>expand_stack_locked (717,309,991 samples, 4.60%)</title><rect x="833.8" y="453" width="54.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="836.78" y="463.5" >expan..</text>
</g>
<g >
<title>bprm_execve.part.0 (717,309,991 samples, 4.60%)</title><rect x="833.8" y="533" width="54.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="836.78" y="543.5" >bprm_..</text>
</g>
<g >
<title>__x64_sys_write (473,793,040 samples, 3.04%)</title><rect x="227.4" y="437" width="35.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="230.41" y="447.5" >__x..</text>
</g>
<g >
<title>vfs_fadvise (515,817,776 samples, 3.31%)</title><rect x="761.2" y="389" width="39.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="764.24" y="399.5" >vfs..</text>
</g>
<g >
<title>exec_binprm (655,918,326 samples, 4.20%)</title><rect x="177.7" y="517" width="49.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="180.68" y="527.5" >exec_..</text>
</g>
<g >
<title>___slab_alloc (51,534,422 samples, 0.33%)</title><rect x="721.3" y="213" width="3.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="724.34" y="223.5" ></text>
</g>
<g >
<title>load_elf_binary (655,918,326 samples, 4.20%)</title><rect x="177.7" y="485" width="49.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="180.68" y="495.5" >load_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,283,000,564 samples, 8.22%)</title><rect x="888.0" y="597" width="97.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="891.04" y="607.5" >entry_SYSCA..</text>
</g>
<g >
<title>__mem_cgroup_charge (105,264,538 samples, 0.67%)</title><rect x="761.2" y="293" width="8.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="764.24" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,283,000,564 samples, 8.22%)</title><rect x="888.0" y="581" width="97.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="891.04" y="591.5" >do_syscall_64</text>
</g>
<g >
<title>ls (2,216,638,383 samples, 14.21%)</title><rect x="10.0" y="629" width="167.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >ls</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (766,189,711 samples, 4.91%)</title><rect x="1074.1" y="501" width="58.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1077.13" y="511.5" >schedu..</text>
</g>
</g>
</svg>
