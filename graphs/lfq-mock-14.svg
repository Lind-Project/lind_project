<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>sync_regs (3 samples, 0.55%)</title><rect x="340.7" y="437" width="6.4" height="15.0" fill="rgb(221,106,42)" rx="2" ry="2" />
<text  x="343.66" y="447.5" ></text>
</g>
<g >
<title>start_secondary (25 samples, 4.58%)</title><rect x="1136.0" y="469" width="54.0" height="15.0" fill="rgb(229,188,21)" rx="2" ry="2" />
<text  x="1138.97" y="479.5" >start..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 14.65%)</title><rect x="958.8" y="437" width="172.8" height="15.0" fill="rgb(248,51,1)" rx="2" ry="2" />
<text  x="961.75" y="447.5" >entry_SYSCALL_64_after..</text>
</g>
<g >
<title>do_idle (25 samples, 4.58%)</title><rect x="1136.0" y="437" width="54.0" height="15.0" fill="rgb(226,106,40)" rx="2" ry="2" />
<text  x="1138.97" y="447.5" >do_idle</text>
</g>
<g >
<title>lfq_dequeue_tid (5 samples, 0.92%)</title><rect x="777.2" y="389" width="10.8" height="15.0" fill="rgb(229,128,2)" rx="2" ry="2" />
<text  x="780.22" y="399.5" ></text>
</g>
<g >
<title>ctx_resched (65 samples, 11.90%)</title><rect x="989.0" y="229" width="140.5" height="15.0" fill="rgb(224,40,35)" rx="2" ry="2" />
<text  x="992.01" y="239.5" >ctx_resched</text>
</g>
<g >
<title>__alloc_pages_nodemask (5 samples, 0.92%)</title><rect x="930.7" y="373" width="10.8" height="15.0" fill="rgb(216,102,6)" rx="2" ry="2" />
<text  x="933.66" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (23 samples, 4.21%)</title><rect x="388.2" y="373" width="49.7" height="15.0" fill="rgb(252,202,14)" rx="2" ry="2" />
<text  x="391.21" y="383.5" >alloc..</text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.18%)</title><rect x="954.4" y="325" width="2.2" height="15.0" fill="rgb(208,164,6)" rx="2" ry="2" />
<text  x="957.43" y="335.5" ></text>
</g>
<g >
<title>__do_page_fault (14 samples, 2.56%)</title><rect x="922.0" y="437" width="30.3" height="15.0" fill="rgb(208,145,53)" rx="2" ry="2" />
<text  x="925.01" y="447.5" >__..</text>
</g>
<g >
<title>do_syscall_64 (27 samples, 4.95%)</title><rect x="857.2" y="469" width="58.3" height="15.0" fill="rgb(239,216,48)" rx="2" ry="2" />
<text  x="860.18" y="479.5" >do_sys..</text>
</g>
<g >
<title>native_irq_return_iret (17 samples, 3.11%)</title><rect x="504.9" y="453" width="36.7" height="15.0" fill="rgb(223,70,14)" rx="2" ry="2" />
<text  x="507.91" y="463.5" >nat..</text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.18%)</title><rect x="1136.0" y="293" width="2.1" height="15.0" fill="rgb(246,199,54)" rx="2" ry="2" />
<text  x="1138.97" y="303.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.18%)</title><rect x="954.4" y="485" width="2.2" height="15.0" fill="rgb(234,73,0)" rx="2" ry="2" />
<text  x="957.43" y="495.5" ></text>
</g>
<g >
<title>perf_ioctl (80 samples, 14.65%)</title><rect x="958.8" y="373" width="172.8" height="15.0" fill="rgb(208,204,49)" rx="2" ry="2" />
<text  x="961.75" y="383.5" >perf_ioctl</text>
</g>
<g >
<title>exit_mmap (27 samples, 4.95%)</title><rect x="857.2" y="389" width="58.3" height="15.0" fill="rgb(238,23,50)" rx="2" ry="2" />
<text  x="860.18" y="399.5" >exit_m..</text>
</g>
<g >
<title>do_page_fault (79 samples, 14.47%)</title><rect x="546.0" y="437" width="170.7" height="15.0" fill="rgb(231,132,3)" rx="2" ry="2" />
<text  x="548.97" y="447.5" >do_page_fault</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.18%)</title><rect x="915.5" y="453" width="2.2" height="15.0" fill="rgb(209,48,2)" rx="2" ry="2" />
<text  x="918.53" y="463.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.18%)</title><rect x="1187.8" y="357" width="2.2" height="15.0" fill="rgb(210,87,48)" rx="2" ry="2" />
<text  x="1190.84" y="367.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 14.65%)</title><rect x="958.8" y="485" width="172.8" height="15.0" fill="rgb(233,72,46)" rx="2" ry="2" />
<text  x="961.75" y="495.5" >perf_evsel__enable_cpu</text>
</g>
<g >
<title>intel_pmu_handle_irq (2 samples, 0.37%)</title><rect x="1017.1" y="165" width="4.3" height="15.0" fill="rgb(206,119,1)" rx="2" ry="2" />
<text  x="1020.11" y="175.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.18%)</title><rect x="466.0" y="421" width="2.2" height="15.0" fill="rgb(239,79,21)" rx="2" ry="2" />
<text  x="469.01" y="431.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (13 samples, 2.38%)</title><rect x="989.0" y="165" width="28.1" height="15.0" fill="rgb(252,123,36)" rx="2" ry="2" />
<text  x="992.01" y="175.5" >_..</text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.18%)</title><rect x="950.1" y="421" width="2.2" height="15.0" fill="rgb(241,119,14)" rx="2" ry="2" />
<text  x="953.11" y="431.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.37%)</title><rect x="699.4" y="357" width="4.3" height="15.0" fill="rgb(217,146,38)" rx="2" ry="2" />
<text  x="702.41" y="367.5" ></text>
</g>
<g >
<title>try_charge (5 samples, 0.92%)</title><rect x="680.0" y="357" width="10.8" height="15.0" fill="rgb(249,191,16)" rx="2" ry="2" />
<text  x="682.96" y="367.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.18%)</title><rect x="1187.8" y="341" width="2.2" height="15.0" fill="rgb(245,167,52)" rx="2" ry="2" />
<text  x="1190.84" y="351.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.18%)</title><rect x="887.4" y="277" width="2.2" height="15.0" fill="rgb(216,54,32)" rx="2" ry="2" />
<text  x="890.44" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (6 samples, 1.10%)</title><rect x="422.8" y="341" width="13.0" height="15.0" fill="rgb(209,164,12)" rx="2" ry="2" />
<text  x="425.78" y="351.5" ></text>
</g>
<g >
<title>pick_next_task_rt (1 samples, 0.18%)</title><rect x="1133.8" y="421" width="2.2" height="15.0" fill="rgb(232,190,0)" rx="2" ry="2" />
<text  x="1136.81" y="431.5" ></text>
</g>
<g >
<title>alloc_pages_vma (37 samples, 6.78%)</title><rect x="582.7" y="373" width="80.0" height="15.0" fill="rgb(210,24,43)" rx="2" ry="2" />
<text  x="585.71" y="383.5" >alloc_pag..</text>
</g>
<g >
<title>schedule_idle (2 samples, 0.37%)</title><rect x="1183.5" y="421" width="4.3" height="15.0" fill="rgb(247,182,2)" rx="2" ry="2" />
<text  x="1186.52" y="431.5" ></text>
</g>
<g >
<title>_perf_event_enable (79 samples, 14.47%)</title><rect x="960.9" y="341" width="170.7" height="15.0" fill="rgb(220,124,13)" rx="2" ry="2" />
<text  x="963.92" y="351.5" >_perf_event_enable</text>
</g>
<g >
<title>LindPipe_pipewrite (31 samples, 5.68%)</title><rect x="790.2" y="437" width="67.0" height="15.0" fill="rgb(225,181,18)" rx="2" ry="2" />
<text  x="793.18" y="447.5" >LindPip..</text>
</g>
<g >
<title>tcmalloc::CentralFreeList::InsertRange (1 samples, 0.18%)</title><rect x="785.9" y="357" width="2.1" height="15.0" fill="rgb(245,106,3)" rx="2" ry="2" />
<text  x="788.86" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 2.20%)</title><rect x="790.2" y="405" width="25.9" height="15.0" fill="rgb(217,202,47)" rx="2" ry="2" />
<text  x="793.18" y="415.5" >_..</text>
</g>
<g >
<title>read (1 samples, 0.18%)</title><rect x="956.6" y="469" width="2.2" height="15.0" fill="rgb(208,128,0)" rx="2" ry="2" />
<text  x="959.59" y="479.5" ></text>
</g>
<g >
<title>sys_openat (1 samples, 0.18%)</title><rect x="915.5" y="421" width="2.2" height="15.0" fill="rgb(221,99,43)" rx="2" ry="2" />
<text  x="918.53" y="431.5" ></text>
</g>
<g >
<title>up_write (2 samples, 0.37%)</title><rect x="839.9" y="165" width="4.3" height="15.0" fill="rgb(228,87,15)" rx="2" ry="2" />
<text  x="842.89" y="175.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (20 samples, 3.66%)</title><rect x="872.3" y="309" width="43.2" height="15.0" fill="rgb(223,14,51)" rx="2" ry="2" />
<text  x="875.31" y="319.5" >free..</text>
</g>
<g >
<title>__pagevec_lru_add_fn (3 samples, 0.55%)</title><rect x="664.8" y="325" width="6.5" height="15.0" fill="rgb(205,190,27)" rx="2" ry="2" />
<text  x="667.84" y="335.5" ></text>
</g>
<g >
<title>call_rwsem_down_read_failed (1 samples, 0.18%)</title><rect x="550.3" y="389" width="2.2" height="15.0" fill="rgb(239,184,6)" rx="2" ry="2" />
<text  x="553.29" y="399.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.18%)</title><rect x="1187.8" y="373" width="2.2" height="15.0" fill="rgb(226,207,21)" rx="2" ry="2" />
<text  x="1190.84" y="383.5" ></text>
</g>
<g >
<title>get_page_from_freelist (8 samples, 1.47%)</title><rect x="645.4" y="341" width="17.3" height="15.0" fill="rgb(211,37,15)" rx="2" ry="2" />
<text  x="648.38" y="351.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.37%)</title><rect x="446.6" y="341" width="4.3" height="15.0" fill="rgb(220,197,18)" rx="2" ry="2" />
<text  x="449.56" y="351.5" ></text>
</g>
<g >
<title>[anon] (1 samples, 0.18%)</title><rect x="718.9" y="485" width="2.1" height="15.0" fill="rgb(249,84,49)" rx="2" ry="2" />
<text  x="721.86" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.18%)</title><rect x="928.5" y="389" width="2.2" height="15.0" fill="rgb(225,180,31)" rx="2" ry="2" />
<text  x="931.50" y="399.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::RemoveRange (1 samples, 0.18%)</title><rect x="855.0" y="373" width="2.2" height="15.0" fill="rgb(242,158,27)" rx="2" ry="2" />
<text  x="858.02" y="383.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (6 samples, 1.10%)</title><rect x="896.1" y="245" width="12.9" height="15.0" fill="rgb(208,56,31)" rx="2" ry="2" />
<text  x="899.08" y="255.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (8 samples, 1.47%)</title><rect x="673.5" y="373" width="17.3" height="15.0" fill="rgb(206,160,17)" rx="2" ry="2" />
<text  x="676.48" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (43 samples, 7.88%)</title><rect x="373.1" y="421" width="92.9" height="15.0" fill="rgb(238,61,36)" rx="2" ry="2" />
<text  x="376.08" y="431.5" >__do_page_f..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.18%)</title><rect x="952.3" y="437" width="2.1" height="15.0" fill="rgb(212,3,26)" rx="2" ry="2" />
<text  x="955.27" y="447.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (2 samples, 0.37%)</title><rect x="911.2" y="277" width="4.3" height="15.0" fill="rgb(225,4,32)" rx="2" ry="2" />
<text  x="914.21" y="287.5" ></text>
</g>
<g >
<title>native_iret (1 samples, 0.18%)</title><rect x="502.7" y="453" width="2.2" height="15.0" fill="rgb(242,40,27)" rx="2" ry="2" />
<text  x="505.75" y="463.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.18%)</title><rect x="954.4" y="373" width="2.2" height="15.0" fill="rgb(234,80,24)" rx="2" ry="2" />
<text  x="957.43" y="383.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.18%)</title><rect x="463.8" y="405" width="2.2" height="15.0" fill="rgb(235,138,11)" rx="2" ry="2" />
<text  x="466.85" y="415.5" ></text>
</g>
<g >
<title>ovl_get_link (1 samples, 0.18%)</title><rect x="915.5" y="341" width="2.2" height="15.0" fill="rgb(228,20,20)" rx="2" ry="2" />
<text  x="918.53" y="351.5" ></text>
</g>
<g >
<title>lindpipe-mock (437 samples, 80.04%)</title><rect x="10.0" y="501" width="944.4" height="15.0" fill="rgb(235,31,21)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >lindpipe-mock</text>
</g>
<g >
<title>all (546 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(238,107,19)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.37%)</title><rect x="459.5" y="357" width="4.3" height="15.0" fill="rgb(233,124,51)" rx="2" ry="2" />
<text  x="462.52" y="367.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (7 samples, 1.28%)</title><rect x="690.8" y="373" width="15.1" height="15.0" fill="rgb(243,107,24)" rx="2" ry="2" />
<text  x="693.77" y="383.5" ></text>
</g>
<g >
<title>sbrk (4 samples, 0.73%)</title><rect x="837.7" y="261" width="8.7" height="15.0" fill="rgb(219,95,9)" rx="2" ry="2" />
<text  x="840.73" y="271.5" ></text>
</g>
<g >
<title>pmd_pfn (1 samples, 0.18%)</title><rect x="714.5" y="373" width="2.2" height="15.0" fill="rgb(210,169,31)" rx="2" ry="2" />
<text  x="717.54" y="383.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.18%)</title><rect x="917.7" y="469" width="2.2" height="15.0" fill="rgb(226,67,54)" rx="2" ry="2" />
<text  x="920.69" y="479.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.18%)</title><rect x="839.9" y="85" width="2.2" height="15.0" fill="rgb(250,15,23)" rx="2" ry="2" />
<text  x="842.89" y="95.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.18%)</title><rect x="1136.0" y="357" width="2.1" height="15.0" fill="rgb(226,26,3)" rx="2" ry="2" />
<text  x="1138.97" y="367.5" ></text>
</g>
<g >
<title>free_pool (1 samples, 0.18%)</title><rect x="783.7" y="357" width="2.2" height="15.0" fill="rgb(219,51,21)" rx="2" ry="2" />
<text  x="786.70" y="367.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.18%)</title><rect x="852.9" y="389" width="2.1" height="15.0" fill="rgb(213,26,23)" rx="2" ry="2" />
<text  x="855.86" y="399.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.18%)</title><rect x="584.9" y="341" width="2.1" height="15.0" fill="rgb(251,136,50)" rx="2" ry="2" />
<text  x="587.87" y="351.5" ></text>
</g>
<g >
<title>call_rwsem_wake (2 samples, 0.37%)</title><rect x="839.9" y="149" width="4.3" height="15.0" fill="rgb(242,179,46)" rx="2" ry="2" />
<text  x="842.89" y="159.5" ></text>
</g>
<g >
<title>lfq_enqueue (4 samples, 0.73%)</title><rect x="848.5" y="421" width="8.7" height="15.0" fill="rgb(253,8,52)" rx="2" ry="2" />
<text  x="851.53" y="431.5" ></text>
</g>
<g >
<title>error_entry (3 samples, 0.55%)</title><rect x="340.7" y="453" width="6.4" height="15.0" fill="rgb(219,205,49)" rx="2" ry="2" />
<text  x="343.66" y="463.5" ></text>
</g>
<g >
<title>simple_get_link (1 samples, 0.18%)</title><rect x="915.5" y="325" width="2.2" height="15.0" fill="rgb(247,28,12)" rx="2" ry="2" />
<text  x="918.53" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (59 samples, 10.81%)</title><rect x="340.7" y="469" width="127.5" height="15.0" fill="rgb(214,201,20)" rx="2" ry="2" />
<text  x="343.66" y="479.5" >__memmove_avx_un..</text>
</g>
<g >
<title>path_openat (1 samples, 0.18%)</title><rect x="915.5" y="373" width="2.2" height="15.0" fill="rgb(221,2,28)" rx="2" ry="2" />
<text  x="918.53" y="383.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.37%)</title><rect x="459.5" y="373" width="4.3" height="15.0" fill="rgb(217,23,34)" rx="2" ry="2" />
<text  x="462.52" y="383.5" ></text>
</g>
<g >
<title>DefaultSysAllocator::Alloc (4 samples, 0.73%)</title><rect x="837.7" y="293" width="8.7" height="15.0" fill="rgb(221,228,34)" rx="2" ry="2" />
<text  x="840.73" y="303.5" ></text>
</g>
<g >
<title>SbrkSysAllocator::Alloc (4 samples, 0.73%)</title><rect x="837.7" y="277" width="8.7" height="15.0" fill="rgb(237,193,52)" rx="2" ry="2" />
<text  x="840.73" y="287.5" ></text>
</g>
<g >
<title>mem_cgroup_page_lruvec (1 samples, 0.18%)</title><rect x="909.0" y="277" width="2.2" height="15.0" fill="rgb(214,212,34)" rx="2" ry="2" />
<text  x="912.05" y="287.5" ></text>
</g>
<g >
<title>sys_write (1 samples, 0.18%)</title><rect x="954.4" y="421" width="2.2" height="15.0" fill="rgb(238,152,49)" rx="2" ry="2" />
<text  x="957.43" y="431.5" ></text>
</g>
<g >
<title>SpinLock::SpinLoop (1 samples, 0.18%)</title><rect x="751.3" y="389" width="2.1" height="15.0" fill="rgb(231,216,1)" rx="2" ry="2" />
<text  x="754.28" y="399.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.18%)</title><rect x="954.4" y="357" width="2.2" height="15.0" fill="rgb(226,2,13)" rx="2" ry="2" />
<text  x="957.43" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.18%)</title><rect x="915.5" y="437" width="2.2" height="15.0" fill="rgb(207,146,35)" rx="2" ry="2" />
<text  x="918.53" y="447.5" ></text>
</g>
<g >
<title>LindPipe_piperead (31 samples, 5.68%)</title><rect x="721.0" y="437" width="67.0" height="15.0" fill="rgb(249,147,6)" rx="2" ry="2" />
<text  x="724.03" y="447.5" >LindPip..</text>
</g>
<g >
<title>down_read_trylock (5 samples, 0.92%)</title><rect x="552.5" y="405" width="10.8" height="15.0" fill="rgb(252,141,40)" rx="2" ry="2" />
<text  x="555.45" y="415.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.18%)</title><rect x="947.9" y="357" width="2.2" height="15.0" fill="rgb(230,179,3)" rx="2" ry="2" />
<text  x="950.95" y="367.5" ></text>
</g>
<g >
<title>unmap_page_range (26 samples, 4.76%)</title><rect x="859.3" y="341" width="56.2" height="15.0" fill="rgb(214,184,4)" rx="2" ry="2" />
<text  x="862.34" y="351.5" >unmap..</text>
</g>
<g >
<title>unmap_single_vma (27 samples, 4.95%)</title><rect x="857.2" y="357" width="58.3" height="15.0" fill="rgb(228,77,20)" rx="2" ry="2" />
<text  x="860.18" y="367.5" >unmap_..</text>
</g>
<g >
<title>seq_putc (1 samples, 0.18%)</title><rect x="956.6" y="293" width="2.2" height="15.0" fill="rgb(205,48,0)" rx="2" ry="2" />
<text  x="959.59" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.18%)</title><rect x="1136.0" y="309" width="2.1" height="15.0" fill="rgb(228,120,52)" rx="2" ry="2" />
<text  x="1138.97" y="319.5" ></text>
</g>
<g >
<title>mmput (27 samples, 4.95%)</title><rect x="857.2" y="405" width="58.3" height="15.0" fill="rgb(230,229,29)" rx="2" ry="2" />
<text  x="860.18" y="415.5" >mmput</text>
</g>
<g >
<title>tcmalloc::PageHeap::Delete (5 samples, 0.92%)</title><rect x="764.2" y="373" width="10.9" height="15.0" fill="rgb(238,191,53)" rx="2" ry="2" />
<text  x="767.25" y="383.5" ></text>
</g>
<g >
<title>read_func (31 samples, 5.68%)</title><rect x="721.0" y="453" width="67.0" height="15.0" fill="rgb(208,198,43)" rx="2" ry="2" />
<text  x="724.03" y="463.5" >read_func</text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.18%)</title><rect x="1133.8" y="453" width="2.2" height="15.0" fill="rgb(233,98,36)" rx="2" ry="2" />
<text  x="1136.81" y="463.5" ></text>
</g>
<g >
<title>swapper (27 samples, 4.95%)</title><rect x="1131.6" y="501" width="58.4" height="15.0" fill="rgb(241,92,9)" rx="2" ry="2" />
<text  x="1134.65" y="511.5" >swapper</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27 samples, 4.95%)</title><rect x="857.2" y="485" width="58.3" height="15.0" fill="rgb(229,73,10)" rx="2" ry="2" />
<text  x="860.18" y="495.5" >entry_..</text>
</g>
<g >
<title>sync_regs (1 samples, 0.18%)</title><rect x="917.7" y="453" width="2.2" height="15.0" fill="rgb(218,144,44)" rx="2" ry="2" />
<text  x="920.69" y="463.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (80 samples, 14.65%)</title><rect x="958.8" y="357" width="172.8" height="15.0" fill="rgb(254,19,54)" rx="2" ry="2" />
<text  x="961.75" y="367.5" >perf_event_for_each_ch..</text>
</g>
<g >
<title>tc_malloc (1 samples, 0.18%)</title><rect x="816.1" y="405" width="2.2" height="15.0" fill="rgb(207,211,20)" rx="2" ry="2" />
<text  x="819.12" y="415.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.18%)</title><rect x="1133.8" y="437" width="2.2" height="15.0" fill="rgb(207,227,28)" rx="2" ry="2" />
<text  x="1136.81" y="447.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.18%)</title><rect x="712.4" y="373" width="2.1" height="15.0" fill="rgb(253,189,36)" rx="2" ry="2" />
<text  x="715.38" y="383.5" ></text>
</g>
<g >
<title>_vm_normal_page (1 samples, 0.18%)</title><rect x="868.0" y="325" width="2.1" height="15.0" fill="rgb(224,26,4)" rx="2" ry="2" />
<text  x="870.99" y="335.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (3 samples, 0.55%)</title><rect x="941.5" y="357" width="6.4" height="15.0" fill="rgb(218,33,24)" rx="2" ry="2" />
<text  x="944.47" y="367.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (5 samples, 0.92%)</title><rect x="662.7" y="373" width="10.8" height="15.0" fill="rgb(245,104,23)" rx="2" ry="2" />
<text  x="665.67" y="383.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (1 samples, 0.18%)</title><rect x="954.4" y="341" width="2.2" height="15.0" fill="rgb(229,46,25)" rx="2" ry="2" />
<text  x="957.43" y="351.5" ></text>
</g>
<g >
<title>SpinLock::SlowLock (1 samples, 0.18%)</title><rect x="751.3" y="405" width="2.1" height="15.0" fill="rgb(244,189,15)" rx="2" ry="2" />
<text  x="754.28" y="415.5" ></text>
</g>
<g >
<title>_vm_normal_page (1 samples, 0.18%)</title><rect x="857.2" y="341" width="2.1" height="15.0" fill="rgb(245,157,37)" rx="2" ry="2" />
<text  x="860.18" y="351.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.37%)</title><rect x="943.6" y="341" width="4.3" height="15.0" fill="rgb(227,49,48)" rx="2" ry="2" />
<text  x="946.63" y="351.5" ></text>
</g>
<g >
<title>rwsem_down_read_failed (1 samples, 0.18%)</title><rect x="550.3" y="373" width="2.2" height="15.0" fill="rgb(206,162,24)" rx="2" ry="2" />
<text  x="553.29" y="383.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.18%)</title><rect x="550.3" y="405" width="2.2" height="15.0" fill="rgb(218,35,39)" rx="2" ry="2" />
<text  x="553.29" y="415.5" ></text>
</g>
<g >
<title>__vfs_write (1 samples, 0.18%)</title><rect x="954.4" y="389" width="2.2" height="15.0" fill="rgb(213,121,9)" rx="2" ry="2" />
<text  x="957.43" y="399.5" ></text>
</g>
<g >
<title>page_fault (16 samples, 2.93%)</title><rect x="919.9" y="469" width="34.5" height="15.0" fill="rgb(240,104,15)" rx="2" ry="2" />
<text  x="922.85" y="479.5" >pa..</text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.18%)</title><rect x="872.3" y="293" width="2.2" height="15.0" fill="rgb(208,187,41)" rx="2" ry="2" />
<text  x="875.31" y="303.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.18%)</title><rect x="1133.8" y="485" width="2.2" height="15.0" fill="rgb(246,139,41)" rx="2" ry="2" />
<text  x="1136.81" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.18%)</title><rect x="1187.8" y="421" width="2.2" height="15.0" fill="rgb(240,215,40)" rx="2" ry="2" />
<text  x="1190.84" y="431.5" ></text>
</g>
<g >
<title>native_irq_return_iret (12 samples, 2.20%)</title><rect x="347.1" y="453" width="26.0" height="15.0" fill="rgb(252,142,9)" rx="2" ry="2" />
<text  x="350.14" y="463.5" >n..</text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.18%)</title><rect x="703.7" y="357" width="2.2" height="15.0" fill="rgb(216,27,26)" rx="2" ry="2" />
<text  x="706.74" y="367.5" ></text>
</g>
<g >
<title>page_fault (81 samples, 14.84%)</title><rect x="541.6" y="453" width="175.1" height="15.0" fill="rgb(246,17,42)" rx="2" ry="2" />
<text  x="544.65" y="463.5" >page_fault</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.18%)</title><rect x="1136.0" y="325" width="2.1" height="15.0" fill="rgb(245,107,15)" rx="2" ry="2" />
<text  x="1138.97" y="335.5" ></text>
</g>
<g >
<title>LFQEntry_new (59 samples, 10.81%)</title><rect x="340.7" y="485" width="127.5" height="15.0" fill="rgb(223,97,45)" rx="2" ry="2" />
<text  x="343.66" y="495.5" >LFQEntry_new</text>
</g>
<g >
<title>tc_calloc (4 samples, 0.73%)</title><rect x="848.5" y="405" width="8.7" height="15.0" fill="rgb(238,45,11)" rx="2" ry="2" />
<text  x="851.53" y="415.5" ></text>
</g>
<g >
<title>iov_iter_advance (1 samples, 0.18%)</title><rect x="954.4" y="309" width="2.2" height="15.0" fill="rgb(244,38,20)" rx="2" ry="2" />
<text  x="957.43" y="319.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.18%)</title><rect x="1136.0" y="373" width="2.1" height="15.0" fill="rgb(232,127,48)" rx="2" ry="2" />
<text  x="1138.97" y="383.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.18%)</title><rect x="956.6" y="373" width="2.2" height="15.0" fill="rgb(235,170,20)" rx="2" ry="2" />
<text  x="959.59" y="383.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.18%)</title><rect x="956.6" y="485" width="2.2" height="15.0" fill="rgb(254,61,4)" rx="2" ry="2" />
<text  x="959.59" y="495.5" ></text>
</g>
<g >
<title>LindPipe_piperead (116 samples, 21.25%)</title><rect x="468.2" y="485" width="250.7" height="15.0" fill="rgb(220,32,8)" rx="2" ry="2" />
<text  x="471.17" y="495.5" >LindPipe_piperead</text>
</g>
<g >
<title>do_page_fault (44 samples, 8.06%)</title><rect x="373.1" y="437" width="95.1" height="15.0" fill="rgb(227,101,18)" rx="2" ry="2" />
<text  x="376.08" y="447.5" >do_page_fault</text>
</g>
<g >
<title>proc_single_show (1 samples, 0.18%)</title><rect x="956.6" y="341" width="2.2" height="15.0" fill="rgb(245,214,34)" rx="2" ry="2" />
<text  x="959.59" y="351.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::FetchFromOneSpansSafe (10 samples, 1.83%)</title><rect x="826.9" y="373" width="21.6" height="15.0" fill="rgb(228,228,27)" rx="2" ry="2" />
<text  x="829.92" y="383.5" >t..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.18%)</title><rect x="956.6" y="437" width="2.2" height="15.0" fill="rgb(249,34,4)" rx="2" ry="2" />
<text  x="959.59" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter (19 samples, 3.48%)</title><rect x="1136.0" y="405" width="41.0" height="15.0" fill="rgb(249,228,38)" rx="2" ry="2" />
<text  x="1138.97" y="415.5" >cpu..</text>
</g>
<g >
<title>__handle_mm_fault (40 samples, 7.33%)</title><rect x="377.4" y="389" width="86.4" height="15.0" fill="rgb(231,119,50)" rx="2" ry="2" />
<text  x="380.40" y="399.5" >__handle_m..</text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.73%)</title><rect x="450.9" y="373" width="8.6" height="15.0" fill="rgb(211,225,6)" rx="2" ry="2" />
<text  x="453.88" y="383.5" ></text>
</g>
<g >
<title>sys_read (1 samples, 0.18%)</title><rect x="956.6" y="405" width="2.2" height="15.0" fill="rgb(240,75,53)" rx="2" ry="2" />
<text  x="959.59" y="415.5" ></text>
</g>
<g >
<title>tcmalloc::DLL_Prepend (1 samples, 0.18%)</title><rect x="824.8" y="357" width="2.1" height="15.0" fill="rgb(237,209,44)" rx="2" ry="2" />
<text  x="827.76" y="367.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.18%)</title><rect x="671.3" y="325" width="2.2" height="15.0" fill="rgb(220,60,15)" rx="2" ry="2" />
<text  x="674.32" y="335.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (3 samples, 0.55%)</title><rect x="941.5" y="389" width="6.4" height="15.0" fill="rgb(230,107,10)" rx="2" ry="2" />
<text  x="944.47" y="399.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.18%)</title><rect x="870.1" y="325" width="2.2" height="15.0" fill="rgb(254,167,46)" rx="2" ry="2" />
<text  x="873.15" y="335.5" ></text>
</g>
<g >
<title>__lru_cache_add (3 samples, 0.55%)</title><rect x="941.5" y="373" width="6.4" height="15.0" fill="rgb(215,73,19)" rx="2" ry="2" />
<text  x="944.47" y="383.5" ></text>
</g>
<g >
<title>error_entry (16 samples, 2.93%)</title><rect x="468.2" y="453" width="34.5" height="15.0" fill="rgb(222,226,53)" rx="2" ry="2" />
<text  x="471.17" y="463.5" >er..</text>
</g>
<g >
<title>event_function (65 samples, 11.90%)</title><rect x="989.0" y="261" width="140.5" height="15.0" fill="rgb(207,92,52)" rx="2" ry="2" />
<text  x="992.01" y="271.5" >event_function</text>
</g>
<g >
<title>sys_exit_group (27 samples, 4.95%)</title><rect x="857.2" y="453" width="58.3" height="15.0" fill="rgb(231,111,20)" rx="2" ry="2" />
<text  x="860.18" y="463.5" >sys_ex..</text>
</g>
<g >
<title>clear_page_erms (15 samples, 2.75%)</title><rect x="390.4" y="341" width="32.4" height="15.0" fill="rgb(213,68,42)" rx="2" ry="2" />
<text  x="393.37" y="351.5" >cl..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.37%)</title><rect x="839.9" y="213" width="4.3" height="15.0" fill="rgb(252,213,26)" rx="2" ry="2" />
<text  x="842.89" y="223.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::ReleaseListToSpans (10 samples, 1.83%)</title><rect x="753.4" y="405" width="21.7" height="15.0" fill="rgb(241,75,12)" rx="2" ry="2" />
<text  x="756.44" y="415.5" >t..</text>
</g>
<g >
<title>__lru_cache_add (4 samples, 0.73%)</title><rect x="442.2" y="357" width="8.7" height="15.0" fill="rgb(208,105,28)" rx="2" ry="2" />
<text  x="445.23" y="367.5" ></text>
</g>
<g >
<title>safe_free (3 samples, 0.55%)</title><rect x="781.5" y="373" width="6.5" height="15.0" fill="rgb(229,49,42)" rx="2" ry="2" />
<text  x="784.54" y="383.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::RemoveRange (13 samples, 2.38%)</title><rect x="820.4" y="389" width="28.1" height="15.0" fill="rgb(221,114,45)" rx="2" ry="2" />
<text  x="823.44" y="399.5" >t..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.18%)</title><rect x="448.7" y="325" width="2.2" height="15.0" fill="rgb(213,147,35)" rx="2" ry="2" />
<text  x="451.72" y="335.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.18%)</title><rect x="563.3" y="405" width="2.1" height="15.0" fill="rgb(254,33,23)" rx="2" ry="2" />
<text  x="566.26" y="415.5" ></text>
</g>
<g >
<title>__ioctl (80 samples, 14.65%)</title><rect x="958.8" y="453" width="172.8" height="15.0" fill="rgb(231,92,27)" rx="2" ry="2" />
<text  x="961.75" y="463.5" >__ioctl</text>
</g>
<g >
<title>perf (82 samples, 15.02%)</title><rect x="954.4" y="501" width="177.2" height="15.0" fill="rgb(214,159,29)" rx="2" ry="2" />
<text  x="957.43" y="511.5" >perf</text>
</g>
<g >
<title>handle_mm_fault (40 samples, 7.33%)</title><rect x="377.4" y="405" width="86.4" height="15.0" fill="rgb(254,81,20)" rx="2" ry="2" />
<text  x="380.40" y="415.5" >handle_mm_..</text>
</g>
<g >
<title>__GI___sbrk (4 samples, 0.73%)</title><rect x="837.7" y="245" width="8.7" height="15.0" fill="rgb(210,151,49)" rx="2" ry="2" />
<text  x="840.73" y="255.5" ></text>
</g>
<g >
<title>write_func (32 samples, 5.86%)</title><rect x="788.0" y="453" width="69.2" height="15.0" fill="rgb(205,188,8)" rx="2" ry="2" />
<text  x="791.02" y="463.5" >write_f..</text>
</g>
<g >
<title>handle_mm_fault (70 samples, 12.82%)</title><rect x="565.4" y="405" width="151.3" height="15.0" fill="rgb(206,161,16)" rx="2" ry="2" />
<text  x="568.42" y="415.5" >handle_mm_fault</text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.18%)</title><rect x="842.1" y="37" width="2.1" height="15.0" fill="rgb(214,162,42)" rx="2" ry="2" />
<text  x="845.05" y="47.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.18%)</title><rect x="1133.8" y="469" width="2.2" height="15.0" fill="rgb(225,76,42)" rx="2" ry="2" />
<text  x="1136.81" y="479.5" ></text>
</g>
<g >
<title>cpuidle_select (3 samples, 0.55%)</title><rect x="1177.0" y="421" width="6.5" height="15.0" fill="rgb(228,208,49)" rx="2" ry="2" />
<text  x="1180.03" y="431.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.18%)</title><rect x="915.5" y="389" width="2.2" height="15.0" fill="rgb(228,66,30)" rx="2" ry="2" />
<text  x="918.53" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.18%)</title><rect x="954.4" y="453" width="2.2" height="15.0" fill="rgb(240,213,34)" rx="2" ry="2" />
<text  x="957.43" y="463.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.18%)</title><rect x="844.2" y="213" width="2.2" height="15.0" fill="rgb(219,208,35)" rx="2" ry="2" />
<text  x="847.21" y="223.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.18%)</title><rect x="947.9" y="389" width="2.2" height="15.0" fill="rgb(243,35,5)" rx="2" ry="2" />
<text  x="950.95" y="399.5" ></text>
</g>
<g >
<title>LFQEntry_new (27 samples, 4.95%)</title><rect x="790.2" y="421" width="58.3" height="15.0" fill="rgb(223,185,21)" rx="2" ry="2" />
<text  x="793.18" y="431.5" >LFQEnt..</text>
</g>
<g >
<title>handle_mm_fault (12 samples, 2.20%)</title><rect x="924.2" y="421" width="25.9" height="15.0" fill="rgb(226,48,5)" rx="2" ry="2" />
<text  x="927.18" y="431.5" >h..</text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.37%)</title><rect x="1183.5" y="405" width="4.3" height="15.0" fill="rgb(241,116,45)" rx="2" ry="2" />
<text  x="1186.52" y="415.5" ></text>
</g>
<g >
<title>SpinLock::SlowLock (1 samples, 0.18%)</title><rect x="762.1" y="373" width="2.1" height="15.0" fill="rgb(221,21,37)" rx="2" ry="2" />
<text  x="765.09" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 14.65%)</title><rect x="958.8" y="421" width="172.8" height="15.0" fill="rgb(237,196,19)" rx="2" ry="2" />
<text  x="961.75" y="431.5" >do_syscall_64</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.18%)</title><rect x="956.6" y="421" width="2.2" height="15.0" fill="rgb(218,69,16)" rx="2" ry="2" />
<text  x="959.59" y="431.5" ></text>
</g>
<g >
<title>x86_pmu_enable (65 samples, 11.90%)</title><rect x="989.0" y="213" width="140.5" height="15.0" fill="rgb(240,1,5)" rx="2" ry="2" />
<text  x="992.01" y="223.5" >x86_pmu_enable</text>
</g>
<g >
<title>__libc_read (1 samples, 0.18%)</title><rect x="956.6" y="453" width="2.2" height="15.0" fill="rgb(215,114,1)" rx="2" ry="2" />
<text  x="959.59" y="463.5" ></text>
</g>
<g >
<title>sys_brk (2 samples, 0.37%)</title><rect x="839.9" y="181" width="4.3" height="15.0" fill="rgb(217,174,12)" rx="2" ry="2" />
<text  x="842.89" y="191.5" ></text>
</g>
<g >
<title>open_verify.constprop.0 (1 samples, 0.18%)</title><rect x="915.5" y="485" width="2.2" height="15.0" fill="rgb(230,167,17)" rx="2" ry="2" />
<text  x="918.53" y="495.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.18%)</title><rect x="550.3" y="309" width="2.2" height="15.0" fill="rgb(246,214,0)" rx="2" ry="2" />
<text  x="553.29" y="319.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.18%)</title><rect x="842.1" y="69" width="2.1" height="15.0" fill="rgb(218,147,0)" rx="2" ry="2" />
<text  x="845.05" y="79.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.18%)</title><rect x="1187.8" y="389" width="2.2" height="15.0" fill="rgb(220,219,12)" rx="2" ry="2" />
<text  x="1190.84" y="399.5" ></text>
</g>
<g >
<title>tcmalloc::ThreadCache::FetchFromCentralCache (14 samples, 2.56%)</title><rect x="818.3" y="405" width="30.2" height="15.0" fill="rgb(224,38,26)" rx="2" ry="2" />
<text  x="821.28" y="415.5" >tc..</text>
</g>
<g >
<title>tcmalloc::ThreadCache::FetchFromCentralCache (1 samples, 0.18%)</title><rect x="855.0" y="389" width="2.2" height="15.0" fill="rgb(250,69,19)" rx="2" ry="2" />
<text  x="858.02" y="399.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.18%)</title><rect x="913.4" y="261" width="2.1" height="15.0" fill="rgb(210,228,54)" rx="2" ry="2" />
<text  x="916.37" y="271.5" ></text>
</g>
<g >
<title>generic_exec_single (67 samples, 12.27%)</title><rect x="984.7" y="293" width="144.8" height="15.0" fill="rgb(208,21,2)" rx="2" ry="2" />
<text  x="987.69" y="303.5" >generic_exec_single</text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.18%)</title><rect x="1177.0" y="405" width="2.2" height="15.0" fill="rgb(223,50,25)" rx="2" ry="2" />
<text  x="1180.03" y="415.5" ></text>
</g>
<g >
<title>smp_call_function_single (71 samples, 13.00%)</title><rect x="976.0" y="309" width="153.5" height="15.0" fill="rgb(235,182,10)" rx="2" ry="2" />
<text  x="979.04" y="319.5" >smp_call_function_s..</text>
</g>
<g >
<title>rwsem_wake (2 samples, 0.37%)</title><rect x="839.9" y="133" width="4.3" height="15.0" fill="rgb(243,182,52)" rx="2" ry="2" />
<text  x="842.89" y="143.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::Populate (17 samples, 3.11%)</title><rect x="917.7" y="485" width="36.7" height="15.0" fill="rgb(245,67,4)" rx="2" ry="2" />
<text  x="920.69" y="495.5" >tcm..</text>
</g>
<g >
<title>do_vfs_ioctl (80 samples, 14.65%)</title><rect x="958.8" y="389" width="172.8" height="15.0" fill="rgb(251,60,1)" rx="2" ry="2" />
<text  x="961.75" y="399.5" >do_vfs_ioctl</text>
</g>
<g >
<title>pmd_devmap_trans_unstable (2 samples, 0.37%)</title><rect x="708.1" y="373" width="4.3" height="15.0" fill="rgb(206,33,37)" rx="2" ry="2" />
<text  x="711.06" y="383.5" ></text>
</g>
<g >
<title>free_unref_page_list (8 samples, 1.47%)</title><rect x="891.8" y="277" width="17.2" height="15.0" fill="rgb(245,32,44)" rx="2" ry="2" />
<text  x="894.76" y="287.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::InsertRange (12 samples, 2.20%)</title><rect x="749.1" y="421" width="26.0" height="15.0" fill="rgb(228,197,27)" rx="2" ry="2" />
<text  x="752.12" y="431.5" >t..</text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.18%)</title><rect x="891.8" y="261" width="2.1" height="15.0" fill="rgb(234,193,6)" rx="2" ry="2" />
<text  x="894.76" y="271.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.37%)</title><rect x="839.9" y="101" width="4.3" height="15.0" fill="rgb(230,117,46)" rx="2" ry="2" />
<text  x="842.89" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.37%)</title><rect x="839.9" y="197" width="4.3" height="15.0" fill="rgb(245,187,20)" rx="2" ry="2" />
<text  x="842.89" y="207.5" ></text>
</g>
<g >
<title>nmi_restore (1 samples, 0.18%)</title><rect x="1127.3" y="165" width="2.2" height="15.0" fill="rgb(230,222,25)" rx="2" ry="2" />
<text  x="1130.33" y="175.5" ></text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.18%)</title><rect x="1129.5" y="325" width="2.1" height="15.0" fill="rgb(247,14,23)" rx="2" ry="2" />
<text  x="1132.49" y="335.5" ></text>
</g>
<g >
<title>pfn_pte (1 samples, 0.18%)</title><rect x="705.9" y="373" width="2.2" height="15.0" fill="rgb(219,229,49)" rx="2" ry="2" />
<text  x="708.90" y="383.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.18%)</title><rect x="941.5" y="341" width="2.1" height="15.0" fill="rgb(210,164,1)" rx="2" ry="2" />
<text  x="944.47" y="351.5" ></text>
</g>
<g >
<title>release_pages (19 samples, 3.48%)</title><rect x="874.5" y="293" width="41.0" height="15.0" fill="rgb(235,178,21)" rx="2" ry="2" />
<text  x="877.47" y="303.5" >rel..</text>
</g>
<g >
<title>__alloc_pages_nodemask (21 samples, 3.85%)</title><rect x="390.4" y="357" width="45.4" height="15.0" fill="rgb(234,92,41)" rx="2" ry="2" />
<text  x="393.37" y="367.5" >__al..</text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.18%)</title><rect x="669.2" y="309" width="2.1" height="15.0" fill="rgb(235,38,34)" rx="2" ry="2" />
<text  x="672.16" y="319.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.18%)</title><rect x="716.7" y="453" width="2.2" height="15.0" fill="rgb(238,25,53)" rx="2" ry="2" />
<text  x="719.70" y="463.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.18%)</title><rect x="550.3" y="341" width="2.2" height="15.0" fill="rgb(238,219,26)" rx="2" ry="2" />
<text  x="553.29" y="351.5" ></text>
</g>
<g >
<title>proc_pid_status (1 samples, 0.18%)</title><rect x="956.6" y="325" width="2.2" height="15.0" fill="rgb(207,12,24)" rx="2" ry="2" />
<text  x="959.59" y="335.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (20 samples, 3.66%)</title><rect x="872.3" y="325" width="43.2" height="15.0" fill="rgb(206,199,21)" rx="2" ry="2" />
<text  x="875.31" y="335.5" >tlb_..</text>
</g>
<g >
<title>__perf_event_enable (65 samples, 11.90%)</title><rect x="989.0" y="245" width="140.5" height="15.0" fill="rgb(233,32,23)" rx="2" ry="2" />
<text  x="992.01" y="255.5" >__perf_event_enable</text>
</g>
<g >
<title>__libc_write (1 samples, 0.18%)</title><rect x="954.4" y="469" width="2.2" height="15.0" fill="rgb(221,92,36)" rx="2" ry="2" />
<text  x="957.43" y="479.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (1 samples, 0.18%)</title><rect x="1185.7" y="389" width="2.1" height="15.0" fill="rgb(215,31,48)" rx="2" ry="2" />
<text  x="1188.68" y="399.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.55%)</title><rect x="673.5" y="357" width="6.5" height="15.0" fill="rgb(254,42,3)" rx="2" ry="2" />
<text  x="676.48" y="367.5" ></text>
</g>
<g >
<title>render_sigset_t (1 samples, 0.18%)</title><rect x="956.6" y="309" width="2.2" height="15.0" fill="rgb(250,197,18)" rx="2" ry="2" />
<text  x="959.59" y="319.5" ></text>
</g>
<g >
<title>lfq_dequeue (5 samples, 0.92%)</title><rect x="777.2" y="405" width="10.8" height="15.0" fill="rgb(211,215,45)" rx="2" ry="2" />
<text  x="780.22" y="415.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 14.65%)</title><rect x="958.8" y="469" width="172.8" height="15.0" fill="rgb(212,197,13)" rx="2" ry="2" />
<text  x="961.75" y="479.5" >perf_evsel__run_ioctl</text>
</g>
<g >
<title>do_page_fault (15 samples, 2.75%)</title><rect x="922.0" y="453" width="32.4" height="15.0" fill="rgb(238,123,53)" rx="2" ry="2" />
<text  x="925.01" y="463.5" >do..</text>
</g>
<g >
<title>free_unref_page_commit (7 samples, 1.28%)</title><rect x="893.9" y="261" width="15.1" height="15.0" fill="rgb(235,219,11)" rx="2" ry="2" />
<text  x="896.92" y="271.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::Populate (10 samples, 1.83%)</title><rect x="826.9" y="357" width="21.6" height="15.0" fill="rgb(209,47,45)" rx="2" ry="2" />
<text  x="829.92" y="367.5" >t..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.18%)</title><rect x="889.6" y="277" width="2.2" height="15.0" fill="rgb(250,149,7)" rx="2" ry="2" />
<text  x="892.60" y="287.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::FetchFromOneSpans (1 samples, 0.18%)</title><rect x="824.8" y="373" width="2.1" height="15.0" fill="rgb(228,204,52)" rx="2" ry="2" />
<text  x="827.76" y="383.5" ></text>
</g>
<g >
<title>tcmalloc::PageHeap::MergeIntoFreeList (5 samples, 0.92%)</title><rect x="764.2" y="357" width="10.9" height="15.0" fill="rgb(215,89,39)" rx="2" ry="2" />
<text  x="767.25" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.18%)</title><rect x="1136.0" y="341" width="2.1" height="15.0" fill="rgb(215,34,33)" rx="2" ry="2" />
<text  x="1138.97" y="351.5" ></text>
</g>
<g >
<title>TCMalloc_SystemAlloc (4 samples, 0.73%)</title><rect x="837.7" y="309" width="8.7" height="15.0" fill="rgb(206,116,49)" rx="2" ry="2" />
<text  x="840.73" y="319.5" ></text>
</g>
<g >
<title>remote_function (65 samples, 11.90%)</title><rect x="989.0" y="277" width="140.5" height="15.0" fill="rgb(213,111,6)" rx="2" ry="2" />
<text  x="992.01" y="287.5" >remote_function</text>
</g>
<g >
<title>__handle_mm_fault (11 samples, 2.01%)</title><rect x="926.3" y="405" width="23.8" height="15.0" fill="rgb(226,111,27)" rx="2" ry="2" />
<text  x="929.34" y="415.5" >_..</text>
</g>
<g >
<title>do_group_exit (27 samples, 4.95%)</title><rect x="857.2" y="437" width="58.3" height="15.0" fill="rgb(243,207,41)" rx="2" ry="2" />
<text  x="860.18" y="447.5" >do_gro..</text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.92%)</title><rect x="930.7" y="357" width="10.8" height="15.0" fill="rgb(222,3,45)" rx="2" ry="2" />
<text  x="933.66" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.73%)</title><rect x="379.6" y="373" width="8.6" height="15.0" fill="rgb(251,75,41)" rx="2" ry="2" />
<text  x="382.56" y="383.5" ></text>
</g>
<g >
<title>cpu_startup_entry (25 samples, 4.58%)</title><rect x="1136.0" y="453" width="54.0" height="15.0" fill="rgb(216,14,42)" rx="2" ry="2" />
<text  x="1138.97" y="463.5" >cpu_s..</text>
</g>
<g >
<title>__lru_cache_add (5 samples, 0.92%)</title><rect x="662.7" y="357" width="10.8" height="15.0" fill="rgb(249,4,2)" rx="2" ry="2" />
<text  x="665.67" y="367.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.18%)</title><rect x="550.3" y="325" width="2.2" height="15.0" fill="rgb(232,46,32)" rx="2" ry="2" />
<text  x="553.29" y="335.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (65 samples, 11.90%)</title><rect x="989.0" y="181" width="140.5" height="15.0" fill="rgb(207,83,3)" rx="2" ry="2" />
<text  x="992.01" y="191.5" >__intel_pmu_enabl..</text>
</g>
<g >
<title>tcmalloc::CentralFreeList::ReleaseToSpans (1 samples, 0.18%)</title><rect x="785.9" y="325" width="2.1" height="15.0" fill="rgb(232,125,38)" rx="2" ry="2" />
<text  x="788.86" y="335.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.18%)</title><rect x="1187.8" y="405" width="2.2" height="15.0" fill="rgb(235,65,31)" rx="2" ry="2" />
<text  x="1190.84" y="415.5" ></text>
</g>
<g >
<title>__do_page_fault (79 samples, 14.47%)</title><rect x="546.0" y="421" width="170.7" height="15.0" fill="rgb(246,93,41)" rx="2" ry="2" />
<text  x="548.97" y="431.5" >__do_page_fault</text>
</g>
<g >
<title>unmap_vmas (27 samples, 4.95%)</title><rect x="857.2" y="373" width="58.3" height="15.0" fill="rgb(254,26,43)" rx="2" ry="2" />
<text  x="860.18" y="383.5" >unmap_..</text>
</g>
<g >
<title>pm_qos_request (2 samples, 0.37%)</title><rect x="1179.2" y="405" width="4.3" height="15.0" fill="rgb(243,150,26)" rx="2" ry="2" />
<text  x="1182.19" y="415.5" ></text>
</g>
<g >
<title>page_counter_try_charge (2 samples, 0.37%)</title><rect x="686.4" y="341" width="4.4" height="15.0" fill="rgb(219,142,15)" rx="2" ry="2" />
<text  x="689.45" y="351.5" ></text>
</g>
<g >
<title>updateCurrentEntry (1 samples, 0.18%)</title><rect x="718.9" y="469" width="2.1" height="15.0" fill="rgb(211,92,43)" rx="2" ry="2" />
<text  x="721.86" y="479.5" ></text>
</g>
<g >
<title>sys_ioctl (80 samples, 14.65%)</title><rect x="958.8" y="405" width="172.8" height="15.0" fill="rgb(209,120,42)" rx="2" ry="2" />
<text  x="961.75" y="415.5" >sys_ioctl</text>
</g>
<g >
<title>page_fault (44 samples, 8.06%)</title><rect x="373.1" y="453" width="95.1" height="15.0" fill="rgb(206,30,33)" rx="2" ry="2" />
<text  x="376.08" y="463.5" >page_fault</text>
</g>
<g >
<title>pagevec_lru_move_fn (4 samples, 0.73%)</title><rect x="664.8" y="341" width="8.7" height="15.0" fill="rgb(238,173,7)" rx="2" ry="2" />
<text  x="667.84" y="351.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.18%)</title><rect x="563.3" y="389" width="2.1" height="15.0" fill="rgb(213,62,38)" rx="2" ry="2" />
<text  x="566.26" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (116 samples, 21.25%)</title><rect x="468.2" y="469" width="250.7" height="15.0" fill="rgb(242,12,12)" rx="2" ry="2" />
<text  x="471.17" y="479.5" >__memmove_avx_unaligned_erms</text>
</g>
<g >
<title>event_function_call (77 samples, 14.10%)</title><rect x="963.1" y="325" width="166.4" height="15.0" fill="rgb(227,150,9)" rx="2" ry="2" />
<text  x="966.08" y="335.5" >event_function_call</text>
</g>
<g >
<title>schedule (1 samples, 0.18%)</title><rect x="550.3" y="357" width="2.2" height="15.0" fill="rgb(248,166,14)" rx="2" ry="2" />
<text  x="553.29" y="367.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.18%)</title><rect x="956.6" y="357" width="2.2" height="15.0" fill="rgb(247,156,51)" rx="2" ry="2" />
<text  x="959.59" y="367.5" ></text>
</g>
<g >
<title>tcmalloc::PageHeap::CheckAndHandlePreMerge (2 samples, 0.37%)</title><rect x="770.7" y="341" width="4.4" height="15.0" fill="rgb(224,52,53)" rx="2" ry="2" />
<text  x="773.73" y="351.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.18%)</title><rect x="435.8" y="357" width="2.1" height="15.0" fill="rgb(248,219,13)" rx="2" ry="2" />
<text  x="438.75" y="367.5" ></text>
</g>
<g >
<title>__GI___clone (63 samples, 11.54%)</title><rect x="721.0" y="485" width="136.2" height="15.0" fill="rgb(221,100,53)" rx="2" ry="2" />
<text  x="724.03" y="495.5" >__GI___clone</text>
</g>
<g >
<title>call_cpuidle (19 samples, 3.48%)</title><rect x="1136.0" y="421" width="41.0" height="15.0" fill="rgb(213,229,10)" rx="2" ry="2" />
<text  x="1138.97" y="431.5" >cal..</text>
</g>
<g >
<title>native_write_msr (49 samples, 8.97%)</title><rect x="1021.4" y="165" width="105.9" height="15.0" fill="rgb(230,9,11)" rx="2" ry="2" />
<text  x="1024.43" y="175.5" >native_write..</text>
</g>
<g >
<title>vfs_read (1 samples, 0.18%)</title><rect x="956.6" y="389" width="2.2" height="15.0" fill="rgb(212,40,52)" rx="2" ry="2" />
<text  x="959.59" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (37 samples, 6.78%)</title><rect x="582.7" y="357" width="80.0" height="15.0" fill="rgb(207,54,16)" rx="2" ry="2" />
<text  x="585.71" y="367.5" >__alloc_p..</text>
</g>
<g >
<title>cpuidle_enter_state (19 samples, 3.48%)</title><rect x="1136.0" y="389" width="41.0" height="15.0" fill="rgb(226,127,25)" rx="2" ry="2" />
<text  x="1138.97" y="399.5" >cpu..</text>
</g>
<g >
<title>_raw_spin_lock (5 samples, 0.92%)</title><rect x="571.9" y="373" width="10.8" height="15.0" fill="rgb(225,209,12)" rx="2" ry="2" />
<text  x="574.90" y="383.5" ></text>
</g>
<g >
<title>tcmalloc::PageHeap::New (5 samples, 0.92%)</title><rect x="837.7" y="341" width="10.8" height="15.0" fill="rgb(232,139,9)" rx="2" ry="2" />
<text  x="840.73" y="351.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.18%)</title><rect x="954.4" y="405" width="2.2" height="15.0" fill="rgb(214,97,28)" rx="2" ry="2" />
<text  x="957.43" y="415.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.18%)</title><rect x="842.1" y="85" width="2.1" height="15.0" fill="rgb(237,197,40)" rx="2" ry="2" />
<text  x="845.05" y="95.5" ></text>
</g>
<g >
<title>SpinLock::SpinLoop (1 samples, 0.18%)</title><rect x="762.1" y="357" width="2.1" height="15.0" fill="rgb(216,160,52)" rx="2" ry="2" />
<text  x="765.09" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 2.38%)</title><rect x="721.0" y="421" width="28.1" height="15.0" fill="rgb(219,110,3)" rx="2" ry="2" />
<text  x="724.03" y="431.5" >_..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.18%)</title><rect x="954.4" y="437" width="2.2" height="15.0" fill="rgb(220,34,33)" rx="2" ry="2" />
<text  x="957.43" y="447.5" ></text>
</g>
<g >
<title>__brk (3 samples, 0.55%)</title><rect x="839.9" y="229" width="6.5" height="15.0" fill="rgb(253,142,17)" rx="2" ry="2" />
<text  x="842.89" y="239.5" ></text>
</g>
<g >
<title>__handle_mm_fault (69 samples, 12.64%)</title><rect x="567.6" y="389" width="149.1" height="15.0" fill="rgb(225,90,53)" rx="2" ry="2" />
<text  x="570.58" y="399.5" >__handle_mm_fault</text>
</g>
<g >
<title>tcmalloc::PageHeap::GrowHeap (4 samples, 0.73%)</title><rect x="837.7" y="325" width="8.7" height="15.0" fill="rgb(213,9,11)" rx="2" ry="2" />
<text  x="840.73" y="335.5" ></text>
</g>
<g >
<title>tcmalloc::CentralFreeList::ReleaseToSpans (9 samples, 1.65%)</title><rect x="755.6" y="389" width="19.5" height="15.0" fill="rgb(240,5,47)" rx="2" ry="2" />
<text  x="758.60" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_vma (5 samples, 0.92%)</title><rect x="930.7" y="389" width="10.8" height="15.0" fill="rgb(231,152,8)" rx="2" ry="2" />
<text  x="933.66" y="399.5" ></text>
</g>
<g >
<title>start_thread (63 samples, 11.54%)</title><rect x="721.0" y="469" width="136.2" height="15.0" fill="rgb(205,69,51)" rx="2" ry="2" />
<text  x="724.03" y="479.5" >start_thread</text>
</g>
<g >
<title>tcmalloc::CentralFreeList::ReleaseListToSpans (1 samples, 0.18%)</title><rect x="785.9" y="341" width="2.1" height="15.0" fill="rgb(224,75,18)" rx="2" ry="2" />
<text  x="788.86" y="351.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.18%)</title><rect x="446.6" y="325" width="2.1" height="15.0" fill="rgb(249,221,12)" rx="2" ry="2" />
<text  x="449.56" y="335.5" ></text>
</g>
<g >
<title>sync_regs (14 samples, 2.56%)</title><rect x="472.5" y="437" width="30.2" height="15.0" fill="rgb(231,136,36)" rx="2" ry="2" />
<text  x="475.49" y="447.5" >sy..</text>
</g>
<g >
<title>try_charge (1 samples, 0.18%)</title><rect x="947.9" y="373" width="2.2" height="15.0" fill="rgb(236,157,9)" rx="2" ry="2" />
<text  x="950.95" y="383.5" ></text>
</g>
<g >
<title>wake_up_q (2 samples, 0.37%)</title><rect x="839.9" y="117" width="4.3" height="15.0" fill="rgb(231,202,17)" rx="2" ry="2" />
<text  x="842.89" y="127.5" ></text>
</g>
<g >
<title>__GI___open_nocancel (1 samples, 0.18%)</title><rect x="915.5" y="469" width="2.2" height="15.0" fill="rgb(240,50,38)" rx="2" ry="2" />
<text  x="918.53" y="479.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (4 samples, 0.73%)</title><rect x="450.9" y="357" width="8.6" height="15.0" fill="rgb(237,150,46)" rx="2" ry="2" />
<text  x="453.88" y="367.5" ></text>
</g>
<g >
<title>intel_idle (18 samples, 3.30%)</title><rect x="1138.1" y="373" width="38.9" height="15.0" fill="rgb(234,122,33)" rx="2" ry="2" />
<text  x="1141.13" y="383.5" >int..</text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.18%)</title><rect x="842.1" y="53" width="2.1" height="15.0" fill="rgb(235,138,20)" rx="2" ry="2" />
<text  x="845.05" y="63.5" ></text>
</g>
<g >
<title>do_sys_open (1 samples, 0.18%)</title><rect x="915.5" y="405" width="2.2" height="15.0" fill="rgb(222,100,45)" rx="2" ry="2" />
<text  x="918.53" y="415.5" ></text>
</g>
<g >
<title>secondary_startup_64 (25 samples, 4.58%)</title><rect x="1136.0" y="485" width="54.0" height="15.0" fill="rgb(252,61,4)" rx="2" ry="2" />
<text  x="1138.97" y="495.5" >secon..</text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (6 samples, 1.10%)</title><rect x="437.9" y="373" width="13.0" height="15.0" fill="rgb(209,173,11)" rx="2" ry="2" />
<text  x="440.91" y="383.5" ></text>
</g>
<g >
<title>clear_page_erms (27 samples, 4.95%)</title><rect x="587.0" y="341" width="58.4" height="15.0" fill="rgb(233,207,52)" rx="2" ry="2" />
<text  x="590.03" y="351.5" >clear_..</text>
</g>
<g >
<title>updateCurrentEntry (6 samples, 1.10%)</title><rect x="775.1" y="421" width="12.9" height="15.0" fill="rgb(239,144,8)" rx="2" ry="2" />
<text  x="778.05" y="431.5" ></text>
</g>
<g >
<title>tcmalloc::PageHeap::SearchFreeAndLargeLists (1 samples, 0.18%)</title><rect x="846.4" y="325" width="2.1" height="15.0" fill="rgb(254,56,47)" rx="2" ry="2" />
<text  x="849.37" y="335.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (65 samples, 11.90%)</title><rect x="989.0" y="197" width="140.5" height="15.0" fill="rgb(229,16,40)" rx="2" ry="2" />
<text  x="992.01" y="207.5" >intel_pmu_enable_..</text>
</g>
<g >
<title>link_path_walk (1 samples, 0.18%)</title><rect x="915.5" y="357" width="2.2" height="15.0" fill="rgb(235,196,9)" rx="2" ry="2" />
<text  x="918.53" y="367.5" ></text>
</g>
<g >
<title>do_exit (27 samples, 4.95%)</title><rect x="857.2" y="421" width="58.3" height="15.0" fill="rgb(209,21,50)" rx="2" ry="2" />
<text  x="860.18" y="431.5" >do_exit</text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.18%)</title><rect x="569.7" y="373" width="2.2" height="15.0" fill="rgb(214,49,14)" rx="2" ry="2" />
<text  x="572.74" y="383.5" ></text>
</g>
</g>
</svg>
