<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>down_read_trylock (1 samples, 0.56%)</title><rect x="816.7" y="501" width="6.6" height="15.0" fill="rgb(243,45,45)" rx="2" ry="2" />
<text  x="819.67" y="511.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.56%)</title><rect x="950.0" y="533" width="6.7" height="15.0" fill="rgb(207,95,49)" rx="2" ry="2" />
<text  x="953.00" y="543.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (64 samples, 36.16%)</title><rect x="16.7" y="485" width="426.6" height="15.0" fill="rgb(226,61,2)" rx="2" ry="2" />
<text  x="19.67" y="495.5" >perf_evsel__run_ioctl</text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.56%)</title><rect x="983.3" y="421" width="6.7" height="15.0" fill="rgb(244,42,31)" rx="2" ry="2" />
<text  x="986.33" y="431.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.56%)</title><rect x="910.0" y="405" width="6.7" height="15.0" fill="rgb(246,142,51)" rx="2" ry="2" />
<text  x="913.00" y="415.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.56%)</title><rect x="456.7" y="341" width="6.6" height="15.0" fill="rgb(210,125,39)" rx="2" ry="2" />
<text  x="459.67" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.56%)</title><rect x="976.7" y="325" width="6.6" height="15.0" fill="rgb(236,87,22)" rx="2" ry="2" />
<text  x="979.67" y="335.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (11 samples, 6.21%)</title><rect x="483.3" y="421" width="73.4" height="15.0" fill="rgb(248,164,19)" rx="2" ry="2" />
<text  x="486.33" y="431.5" >rustposi..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.56%)</title><rect x="910.0" y="357" width="6.7" height="15.0" fill="rgb(249,51,47)" rx="2" ry="2" />
<text  x="913.00" y="367.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.56%)</title><rect x="470.0" y="293" width="6.7" height="15.0" fill="rgb(242,93,34)" rx="2" ry="2" />
<text  x="473.00" y="303.5" ></text>
</g>
<g >
<title>__cmd_record (65 samples, 36.72%)</title><rect x="16.7" y="533" width="433.3" height="15.0" fill="rgb(246,87,16)" rx="2" ry="2" />
<text  x="19.67" y="543.5" >__cmd_record</text>
</g>
<g >
<title>handle_mm_fault (9 samples, 5.08%)</title><rect x="823.3" y="501" width="60.0" height="15.0" fill="rgb(207,170,44)" rx="2" ry="2" />
<text  x="826.33" y="511.5" >handle..</text>
</g>
<g >
<title>cpuidle_idle_call (1 samples, 0.56%)</title><rect x="1183.3" y="437" width="6.7" height="15.0" fill="rgb(230,145,44)" rx="2" ry="2" />
<text  x="1186.33" y="447.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (1 samples, 0.56%)</title><rect x="923.3" y="549" width="6.7" height="15.0" fill="rgb(211,195,45)" rx="2" ry="2" />
<text  x="926.33" y="559.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.56%)</title><rect x="910.0" y="389" width="6.7" height="15.0" fill="rgb(216,219,24)" rx="2" ry="2" />
<text  x="913.00" y="399.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (32 samples, 18.08%)</title><rect x="976.7" y="565" width="213.3" height="15.0" fill="rgb(223,151,11)" rx="2" ry="2" />
<text  x="979.67" y="575.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>__GI___libc_alloca_cutoff (1 samples, 0.56%)</title><rect x="10.0" y="485" width="6.7" height="15.0" fill="rgb(245,114,21)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>arch_do_signal (1 samples, 0.56%)</title><rect x="950.0" y="485" width="6.7" height="15.0" fill="rgb(216,90,41)" rx="2" ry="2" />
<text  x="953.00" y="495.5" ></text>
</g>
<g >
<title>event_function_call (64 samples, 36.16%)</title><rect x="16.7" y="341" width="426.6" height="15.0" fill="rgb(224,116,12)" rx="2" ry="2" />
<text  x="19.67" y="351.5" >event_function_call</text>
</g>
<g >
<title>[unknown] (3 samples, 1.69%)</title><rect x="910.0" y="565" width="20.0" height="15.0" fill="rgb(245,114,19)" rx="2" ry="2" />
<text  x="913.00" y="575.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.56%)</title><rect x="456.7" y="277" width="6.6" height="15.0" fill="rgb(254,106,4)" rx="2" ry="2" />
<text  x="459.67" y="287.5" ></text>
</g>
<g >
<title>__cmd_record (1 samples, 0.56%)</title><rect x="10.0" y="533" width="6.7" height="15.0" fill="rgb(223,81,52)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>generic_exec_single (64 samples, 36.16%)</title><rect x="16.7" y="309" width="426.6" height="15.0" fill="rgb(226,135,52)" rx="2" ry="2" />
<text  x="19.67" y="319.5" >generic_exec_single</text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.56%)</title><rect x="476.7" y="133" width="6.6" height="15.0" fill="rgb(250,7,30)" rx="2" ry="2" />
<text  x="479.67" y="143.5" ></text>
</g>
<g >
<title>lind_read (11 samples, 6.21%)</title><rect x="483.3" y="469" width="73.4" height="15.0" fill="rgb(225,121,15)" rx="2" ry="2" />
<text  x="486.33" y="479.5" >lind_read</text>
</g>
<g >
<title>vfs_write (1 samples, 0.56%)</title><rect x="476.7" y="277" width="6.6" height="15.0" fill="rgb(216,193,52)" rx="2" ry="2" />
<text  x="479.67" y="287.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3 samples, 1.69%)</title><rect x="990.0" y="421" width="20.0" height="15.0" fill="rgb(221,212,54)" rx="2" ry="2" />
<text  x="993.00" y="431.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (2 samples, 1.13%)</title><rect x="856.7" y="373" width="13.3" height="15.0" fill="rgb(251,130,34)" rx="2" ry="2" />
<text  x="859.67" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (2 samples, 1.13%)</title><rect x="470.0" y="469" width="13.3" height="15.0" fill="rgb(249,81,9)" rx="2" ry="2" />
<text  x="473.00" y="479.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.56%)</title><rect x="963.3" y="501" width="6.7" height="15.0" fill="rgb(219,78,4)" rx="2" ry="2" />
<text  x="966.33" y="511.5" ></text>
</g>
<g >
<title>perf_hooks__invoke_record_start (1 samples, 0.56%)</title><rect x="443.3" y="517" width="6.7" height="15.0" fill="rgb(232,114,41)" rx="2" ry="2" />
<text  x="446.33" y="527.5" ></text>
</g>
<g >
<title>exc_page_fault (11 samples, 6.21%)</title><rect x="816.7" y="533" width="73.3" height="15.0" fill="rgb(234,87,34)" rx="2" ry="2" />
<text  x="819.67" y="543.5" >exc_page..</text>
</g>
<g >
<title>native_write_msr (64 samples, 36.16%)</title><rect x="16.7" y="197" width="426.6" height="15.0" fill="rgb(215,65,4)" rx="2" ry="2" />
<text  x="19.67" y="207.5" >native_write_msr</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (9 samples, 5.08%)</title><rect x="496.7" y="405" width="60.0" height="15.0" fill="rgb(225,107,44)" rx="2" ry="2" />
<text  x="499.67" y="415.5" >ringbu..</text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 36.16%)</title><rect x="16.7" y="213" width="426.6" height="15.0" fill="rgb(242,180,35)" rx="2" ry="2" />
<text  x="19.67" y="223.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>asm_exc_page_fault (11 samples, 6.21%)</title><rect x="816.7" y="549" width="73.3" height="15.0" fill="rgb(232,216,3)" rx="2" ry="2" />
<text  x="819.67" y="559.5" >asm_exc_..</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.56%)</title><rect x="976.7" y="421" width="6.6" height="15.0" fill="rgb(205,168,4)" rx="2" ry="2" />
<text  x="979.67" y="431.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 36.16%)</title><rect x="16.7" y="245" width="426.6" height="15.0" fill="rgb(207,215,46)" rx="2" ry="2" />
<text  x="19.67" y="255.5" >ctx_resched</text>
</g>
<g >
<title>do_syscall_64 (64 samples, 36.16%)</title><rect x="16.7" y="437" width="426.6" height="15.0" fill="rgb(230,85,29)" rx="2" ry="2" />
<text  x="19.67" y="447.5" >do_syscall_64</text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.56%)</title><rect x="950.0" y="517" width="6.7" height="15.0" fill="rgb(209,15,43)" rx="2" ry="2" />
<text  x="953.00" y="527.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.56%)</title><rect x="950.0" y="373" width="6.7" height="15.0" fill="rgb(226,88,3)" rx="2" ry="2" />
<text  x="953.00" y="383.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (64 samples, 36.16%)</title><rect x="16.7" y="501" width="426.6" height="15.0" fill="rgb(214,105,49)" rx="2" ry="2" />
<text  x="19.67" y="511.5" >perf_evsel__enable_cpu</text>
</g>
<g >
<title>asm_exc_page_fault (3 samples, 1.69%)</title><rect x="930.0" y="565" width="20.0" height="15.0" fill="rgb(242,78,46)" rx="2" ry="2" />
<text  x="933.00" y="575.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.56%)</title><rect x="443.3" y="453" width="6.7" height="15.0" fill="rgb(232,213,51)" rx="2" ry="2" />
<text  x="446.33" y="463.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 0.56%)</title><rect x="1183.3" y="549" width="6.7" height="15.0" fill="rgb(213,118,40)" rx="2" ry="2" />
<text  x="1186.33" y="559.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.56%)</title><rect x="456.7" y="261" width="6.6" height="15.0" fill="rgb(253,224,4)" rx="2" ry="2" />
<text  x="459.67" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (11 samples, 6.21%)</title><rect x="816.7" y="517" width="73.3" height="15.0" fill="rgb(243,159,48)" rx="2" ry="2" />
<text  x="819.67" y="527.5" >do_user_..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (31 samples, 17.51%)</title><rect x="556.7" y="437" width="206.6" height="15.0" fill="rgb(223,2,25)" rx="2" ry="2" />
<text  x="559.67" y="447.5" >rustposix::safeposix::sysca..</text>
</g>
<g >
<title>swapper (35 samples, 19.77%)</title><rect x="956.7" y="581" width="233.3" height="15.0" fill="rgb(230,229,45)" rx="2" ry="2" />
<text  x="959.67" y="591.5" >swapper</text>
</g>
<g >
<title>worker_thread (1 samples, 0.56%)</title><rect x="970.0" y="533" width="6.7" height="15.0" fill="rgb(250,50,11)" rx="2" ry="2" />
<text  x="973.00" y="543.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.56%)</title><rect x="910.0" y="149" width="6.7" height="15.0" fill="rgb(213,205,9)" rx="2" ry="2" />
<text  x="913.00" y="159.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.56%)</title><rect x="476.7" y="213" width="6.6" height="15.0" fill="rgb(232,147,25)" rx="2" ry="2" />
<text  x="479.67" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.56%)</title><rect x="976.7" y="405" width="6.6" height="15.0" fill="rgb(237,153,23)" rx="2" ry="2" />
<text  x="979.67" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.56%)</title><rect x="476.7" y="53" width="6.6" height="15.0" fill="rgb(250,107,32)" rx="2" ry="2" />
<text  x="479.67" y="63.5" ></text>
</g>
<g >
<title>__libc_close (1 samples, 0.56%)</title><rect x="470.0" y="405" width="6.7" height="15.0" fill="rgb(235,171,45)" rx="2" ry="2" />
<text  x="473.00" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.56%)</title><rect x="456.7" y="373" width="6.6" height="15.0" fill="rgb(211,71,37)" rx="2" ry="2" />
<text  x="459.67" y="383.5" ></text>
</g>
<g >
<title>do_anonymous_page (9 samples, 5.08%)</title><rect x="823.3" y="453" width="60.0" height="15.0" fill="rgb(253,0,49)" rx="2" ry="2" />
<text  x="826.33" y="463.5" >do_ano..</text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.56%)</title><rect x="956.7" y="517" width="6.6" height="15.0" fill="rgb(213,85,21)" rx="2" ry="2" />
<text  x="959.67" y="527.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.56%)</title><rect x="476.7" y="181" width="6.6" height="15.0" fill="rgb(234,163,29)" rx="2" ry="2" />
<text  x="479.67" y="191.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.56%)</title><rect x="976.7" y="341" width="6.6" height="15.0" fill="rgb(212,12,11)" rx="2" ry="2" />
<text  x="979.67" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.56%)</title><rect x="950.0" y="565" width="6.7" height="15.0" fill="rgb(244,142,21)" rx="2" ry="2" />
<text  x="953.00" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.56%)</title><rect x="956.7" y="533" width="6.6" height="15.0" fill="rgb(206,47,50)" rx="2" ry="2" />
<text  x="959.67" y="543.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.56%)</title><rect x="10.0" y="341" width="6.7" height="15.0" fill="rgb(252,210,5)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (2 samples, 1.13%)</title><rect x="470.0" y="453" width="13.3" height="15.0" fill="rgb(212,156,15)" rx="2" ry="2" />
<text  x="473.00" y="463.5" ></text>
</g>
<g >
<title>_perf_ioctl (64 samples, 36.16%)</title><rect x="16.7" y="389" width="426.6" height="15.0" fill="rgb(241,218,52)" rx="2" ry="2" />
<text  x="19.67" y="399.5" >_perf_ioctl</text>
</g>
<g >
<title>do_shared_fault (1 samples, 0.56%)</title><rect x="456.7" y="293" width="6.6" height="15.0" fill="rgb(211,194,34)" rx="2" ry="2" />
<text  x="459.67" y="303.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.56%)</title><rect x="1003.3" y="357" width="6.7" height="15.0" fill="rgb(243,136,12)" rx="2" ry="2" />
<text  x="1006.33" y="367.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.56%)</title><rect x="1176.7" y="485" width="6.6" height="15.0" fill="rgb(243,46,12)" rx="2" ry="2" />
<text  x="1179.67" y="495.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.56%)</title><rect x="963.3" y="517" width="6.7" height="15.0" fill="rgb(220,94,48)" rx="2" ry="2" />
<text  x="966.33" y="527.5" ></text>
</g>
<g >
<title>perf_hooks__invoke (1 samples, 0.56%)</title><rect x="443.3" y="501" width="6.7" height="15.0" fill="rgb(238,19,42)" rx="2" ry="2" />
<text  x="446.33" y="511.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.56%)</title><rect x="950.0" y="357" width="6.7" height="15.0" fill="rgb(248,225,38)" rx="2" ry="2" />
<text  x="953.00" y="367.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (31 samples, 17.51%)</title><rect x="556.7" y="485" width="206.6" height="15.0" fill="rgb(206,68,20)" rx="2" ry="2" />
<text  x="559.67" y="495.5" >NaClHostDescWrite</text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.56%)</title><rect x="863.3" y="357" width="6.7" height="15.0" fill="rgb(224,54,40)" rx="2" ry="2" />
<text  x="866.33" y="367.5" ></text>
</g>
<g >
<title>cpu_startup_entry (31 samples, 17.51%)</title><rect x="976.7" y="533" width="206.6" height="15.0" fill="rgb(254,134,27)" rx="2" ry="2" />
<text  x="979.67" y="543.5" >cpu_startup_entry</text>
</g>
<g >
<title>cpuidle_enter_state (28 samples, 15.82%)</title><rect x="976.7" y="469" width="186.6" height="15.0" fill="rgb(251,97,2)" rx="2" ry="2" />
<text  x="979.67" y="479.5" >cpuidle_enter_state</text>
</g>
<g >
<title>NaClCopyDynamicRegion (1 samples, 0.56%)</title><rect x="910.0" y="533" width="6.7" height="15.0" fill="rgb(217,59,40)" rx="2" ry="2" />
<text  x="913.00" y="543.5" ></text>
</g>
<g >
<title>sel_ldr (76 samples, 42.94%)</title><rect x="450.0" y="581" width="506.7" height="15.0" fill="rgb(235,89,34)" rx="2" ry="2" />
<text  x="453.00" y="591.5" >sel_ldr</text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.56%)</title><rect x="1183.3" y="421" width="6.7" height="15.0" fill="rgb(250,58,12)" rx="2" ry="2" />
<text  x="1186.33" y="431.5" ></text>
</g>
<g >
<title>lookup_fast (1 samples, 0.56%)</title><rect x="956.7" y="453" width="6.6" height="15.0" fill="rgb(249,20,47)" rx="2" ry="2" />
<text  x="959.67" y="463.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.56%)</title><rect x="476.7" y="85" width="6.6" height="15.0" fill="rgb(209,66,20)" rx="2" ry="2" />
<text  x="479.67" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.56%)</title><rect x="910.0" y="501" width="6.7" height="15.0" fill="rgb(254,33,38)" rx="2" ry="2" />
<text  x="913.00" y="511.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.56%)</title><rect x="470.0" y="309" width="6.7" height="15.0" fill="rgb(238,158,26)" rx="2" ry="2" />
<text  x="473.00" y="319.5" ></text>
</g>
<g >
<title>_perf_event_enable (64 samples, 36.16%)</title><rect x="16.7" y="357" width="426.6" height="15.0" fill="rgb(237,150,27)" rx="2" ry="2" />
<text  x="19.67" y="367.5" >_perf_event_enable</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.56%)</title><rect x="476.7" y="69" width="6.6" height="15.0" fill="rgb(246,221,20)" rx="2" ry="2" />
<text  x="479.67" y="79.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.56%)</title><rect x="10.0" y="453" width="6.7" height="15.0" fill="rgb(253,16,16)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.56%)</title><rect x="456.7" y="405" width="6.6" height="15.0" fill="rgb(238,124,12)" rx="2" ry="2" />
<text  x="459.67" y="415.5" ></text>
</g>
<g >
<title>start_kernel (1 samples, 0.56%)</title><rect x="1183.3" y="517" width="6.7" height="15.0" fill="rgb(248,205,3)" rx="2" ry="2" />
<text  x="1186.33" y="527.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.56%)</title><rect x="970.0" y="485" width="6.7" height="15.0" fill="rgb(249,71,46)" rx="2" ry="2" />
<text  x="973.00" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (2 samples, 1.13%)</title><rect x="1163.3" y="421" width="13.4" height="15.0" fill="rgb(231,3,23)" rx="2" ry="2" />
<text  x="1166.33" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.56%)</title><rect x="10.0" y="565" width="6.7" height="15.0" fill="rgb(249,181,29)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>tick_irq_enter (1 samples, 0.56%)</title><rect x="983.3" y="405" width="6.7" height="15.0" fill="rgb(241,49,43)" rx="2" ry="2" />
<text  x="986.33" y="415.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (31 samples, 17.51%)</title><rect x="556.7" y="501" width="206.6" height="15.0" fill="rgb(206,148,18)" rx="2" ry="2" />
<text  x="559.67" y="511.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (1 samples, 0.56%)</title><rect x="456.7" y="453" width="6.6" height="15.0" fill="rgb(219,49,4)" rx="2" ry="2" />
<text  x="459.67" y="463.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.56%)</title><rect x="970.0" y="501" width="6.7" height="15.0" fill="rgb(254,94,44)" rx="2" ry="2" />
<text  x="973.00" y="511.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5 samples, 2.82%)</title><rect x="976.7" y="453" width="33.3" height="15.0" fill="rgb(228,96,37)" rx="2" ry="2" />
<text  x="979.67" y="463.5" >as..</text>
</g>
<g >
<title>do_softirq_own_stack (3 samples, 1.69%)</title><rect x="990.0" y="405" width="20.0" height="15.0" fill="rgb(222,51,15)" rx="2" ry="2" />
<text  x="993.00" y="415.5" ></text>
</g>
<g >
<title>cmd_record (65 samples, 36.72%)</title><rect x="16.7" y="549" width="433.3" height="15.0" fill="rgb(223,63,17)" rx="2" ry="2" />
<text  x="19.67" y="559.5" >cmd_record</text>
</g>
<g >
<title>unix_stream_sendmsg (1 samples, 0.56%)</title><rect x="963.3" y="437" width="6.7" height="15.0" fill="rgb(248,200,31)" rx="2" ry="2" />
<text  x="966.33" y="447.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.56%)</title><rect x="456.7" y="309" width="6.6" height="15.0" fill="rgb(235,176,37)" rx="2" ry="2" />
<text  x="459.67" y="319.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.56%)</title><rect x="970.0" y="469" width="6.7" height="15.0" fill="rgb(214,144,49)" rx="2" ry="2" />
<text  x="973.00" y="479.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (2 samples, 1.13%)</title><rect x="456.7" y="533" width="13.3" height="15.0" fill="rgb(246,54,34)" rx="2" ry="2" />
<text  x="459.67" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.56%)</title><rect x="476.7" y="341" width="6.6" height="15.0" fill="rgb(232,1,34)" rx="2" ry="2" />
<text  x="479.67" y="351.5" ></text>
</g>
<g >
<title>CachedMapWritableText (1 samples, 0.56%)</title><rect x="456.7" y="469" width="6.6" height="15.0" fill="rgb(243,225,26)" rx="2" ry="2" />
<text  x="459.67" y="479.5" ></text>
</g>
<g >
<title>dispatcher (31 samples, 17.51%)</title><rect x="556.7" y="453" width="206.6" height="15.0" fill="rgb(207,144,36)" rx="2" ry="2" />
<text  x="559.67" y="463.5" >dispatcher</text>
</g>
<g >
<title>NaClTextDyncodeCreate (2 samples, 1.13%)</title><rect x="456.7" y="501" width="13.3" height="15.0" fill="rgb(234,24,18)" rx="2" ry="2" />
<text  x="459.67" y="511.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.56%)</title><rect x="963.3" y="229" width="6.7" height="15.0" fill="rgb(240,197,15)" rx="2" ry="2" />
<text  x="966.33" y="239.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 36.16%)</title><rect x="16.7" y="373" width="426.6" height="15.0" fill="rgb(249,193,9)" rx="2" ry="2" />
<text  x="19.67" y="383.5" >perf_event_for_each_child</text>
</g>
<g >
<title>[unknown]  (22 samples, 12.43%)</title><rect x="763.3" y="565" width="146.7" height="15.0" fill="rgb(221,28,51)" rx="2" ry="2" />
<text  x="766.33" y="575.5" >[unknown] </text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 1.13%)</title><rect x="990.0" y="357" width="13.3" height="15.0" fill="rgb(245,29,9)" rx="2" ry="2" />
<text  x="993.00" y="367.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.56%)</title><rect x="963.3" y="213" width="6.7" height="15.0" fill="rgb(213,12,50)" rx="2" ry="2" />
<text  x="966.33" y="223.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.56%)</title><rect x="10.0" y="581" width="6.7" height="15.0" fill="rgb(226,68,45)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.56%)</title><rect x="470.0" y="357" width="6.7" height="15.0" fill="rgb(223,59,28)" rx="2" ry="2" />
<text  x="473.00" y="367.5" ></text>
</g>
<g >
<title>handle_pte_fault (9 samples, 5.08%)</title><rect x="823.3" y="469" width="60.0" height="15.0" fill="rgb(235,136,7)" rx="2" ry="2" />
<text  x="826.33" y="479.5" >handle..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 1.69%)</title><rect x="743.3" y="389" width="20.0" height="15.0" fill="rgb(212,216,41)" rx="2" ry="2" />
<text  x="746.33" y="399.5" ></text>
</g>
<g >
<title>NaClSysWrite (31 samples, 17.51%)</title><rect x="556.7" y="517" width="206.6" height="15.0" fill="rgb(237,156,43)" rx="2" ry="2" />
<text  x="559.67" y="527.5" >NaClSysWrite</text>
</g>
<g >
<title>all (177 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(223,29,27)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (1 samples, 0.56%)</title><rect x="476.7" y="373" width="6.6" height="15.0" fill="rgb(231,104,0)" rx="2" ry="2" />
<text  x="479.67" y="383.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.56%)</title><rect x="476.7" y="229" width="6.6" height="15.0" fill="rgb(243,178,24)" rx="2" ry="2" />
<text  x="479.67" y="239.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.56%)</title><rect x="910.0" y="421" width="6.7" height="15.0" fill="rgb(222,210,14)" rx="2" ry="2" />
<text  x="913.00" y="431.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.56%)</title><rect x="963.3" y="245" width="6.7" height="15.0" fill="rgb(236,178,8)" rx="2" ry="2" />
<text  x="966.33" y="255.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.56%)</title><rect x="910.0" y="453" width="6.7" height="15.0" fill="rgb(254,121,8)" rx="2" ry="2" />
<text  x="913.00" y="463.5" ></text>
</g>
<g >
<title>lind_write (31 samples, 17.51%)</title><rect x="556.7" y="469" width="206.6" height="15.0" fill="rgb(254,6,32)" rx="2" ry="2" />
<text  x="559.67" y="479.5" >lind_write</text>
</g>
<g >
<title>ext4_release_file (1 samples, 0.56%)</title><rect x="470.0" y="261" width="6.7" height="15.0" fill="rgb(212,57,9)" rx="2" ry="2" />
<text  x="473.00" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (64 samples, 36.16%)</title><rect x="16.7" y="421" width="426.6" height="15.0" fill="rgb(242,153,6)" rx="2" ry="2" />
<text  x="19.67" y="431.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.56%)</title><rect x="976.7" y="277" width="6.6" height="15.0" fill="rgb(206,109,3)" rx="2" ry="2" />
<text  x="979.67" y="287.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.56%)</title><rect x="443.3" y="485" width="6.7" height="15.0" fill="rgb(220,79,34)" rx="2" ry="2" />
<text  x="446.33" y="495.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.56%)</title><rect x="1176.7" y="501" width="6.6" height="15.0" fill="rgb(219,131,13)" rx="2" ry="2" />
<text  x="1179.67" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.56%)</title><rect x="910.0" y="181" width="6.7" height="15.0" fill="rgb(236,75,44)" rx="2" ry="2" />
<text  x="913.00" y="191.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.56%)</title><rect x="10.0" y="389" width="6.7" height="15.0" fill="rgb(243,126,24)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.56%)</title><rect x="910.0" y="517" width="6.7" height="15.0" fill="rgb(221,74,22)" rx="2" ry="2" />
<text  x="913.00" y="527.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.56%)</title><rect x="476.7" y="149" width="6.6" height="15.0" fill="rgb(234,219,29)" rx="2" ry="2" />
<text  x="479.67" y="159.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (1 samples, 0.56%)</title><rect x="476.7" y="421" width="6.6" height="15.0" fill="rgb(239,202,7)" rx="2" ry="2" />
<text  x="479.67" y="431.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.56%)</title><rect x="956.7" y="485" width="6.6" height="15.0" fill="rgb(220,97,22)" rx="2" ry="2" />
<text  x="959.67" y="495.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (23 samples, 12.99%)</title><rect x="1010.0" y="453" width="153.3" height="15.0" fill="rgb(244,7,40)" rx="2" ry="2" />
<text  x="1013.00" y="463.5" >mwait_idle_with_hin..</text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.56%)</title><rect x="910.0" y="373" width="6.7" height="15.0" fill="rgb(215,37,27)" rx="2" ry="2" />
<text  x="913.00" y="383.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.56%)</title><rect x="470.0" y="325" width="6.7" height="15.0" fill="rgb(207,116,11)" rx="2" ry="2" />
<text  x="473.00" y="335.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 36.16%)</title><rect x="16.7" y="293" width="426.6" height="15.0" fill="rgb(252,49,0)" rx="2" ry="2" />
<text  x="19.67" y="303.5" >remote_function</text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.56%)</title><rect x="910.0" y="133" width="6.7" height="15.0" fill="rgb(207,177,31)" rx="2" ry="2" />
<text  x="913.00" y="143.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.56%)</title><rect x="963.3" y="453" width="6.7" height="15.0" fill="rgb(218,78,47)" rx="2" ry="2" />
<text  x="966.33" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.56%)</title><rect x="963.3" y="533" width="6.7" height="15.0" fill="rgb(213,26,9)" rx="2" ry="2" />
<text  x="966.33" y="543.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.56%)</title><rect x="10.0" y="405" width="6.7" height="15.0" fill="rgb(248,148,23)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.56%)</title><rect x="443.3" y="437" width="6.7" height="15.0" fill="rgb(207,187,24)" rx="2" ry="2" />
<text  x="446.33" y="447.5" ></text>
</g>
<g >
<title>unlock_page_memcg (1 samples, 0.56%)</title><rect x="950.0" y="293" width="6.7" height="15.0" fill="rgb(223,116,54)" rx="2" ry="2" />
<text  x="953.00" y="303.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.56%)</title><rect x="443.3" y="469" width="6.7" height="15.0" fill="rgb(215,210,37)" rx="2" ry="2" />
<text  x="446.33" y="479.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.56%)</title><rect x="963.3" y="293" width="6.7" height="15.0" fill="rgb(215,88,7)" rx="2" ry="2" />
<text  x="966.33" y="303.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (1 samples, 0.56%)</title><rect x="456.7" y="485" width="6.6" height="15.0" fill="rgb(206,217,4)" rx="2" ry="2" />
<text  x="459.67" y="495.5" ></text>
</g>
<g >
<title>NaClHostDescRead (11 samples, 6.21%)</title><rect x="483.3" y="485" width="73.4" height="15.0" fill="rgb(234,5,46)" rx="2" ry="2" />
<text  x="486.33" y="495.5" >NaClHost..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 5.08%)</title><rect x="496.7" y="389" width="60.0" height="15.0" fill="rgb(205,173,34)" rx="2" ry="2" />
<text  x="499.67" y="399.5" >__memm..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5 samples, 2.82%)</title><rect x="976.7" y="437" width="33.3" height="15.0" fill="rgb(243,213,26)" rx="2" ry="2" />
<text  x="979.67" y="447.5" >sy..</text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.56%)</title><rect x="963.3" y="405" width="6.7" height="15.0" fill="rgb(228,194,50)" rx="2" ry="2" />
<text  x="966.33" y="415.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 1.69%)</title><rect x="836.7" y="373" width="20.0" height="15.0" fill="rgb(223,172,5)" rx="2" ry="2" />
<text  x="839.67" y="383.5" ></text>
</g>
<g >
<title>get_page_from_freelist (6 samples, 3.39%)</title><rect x="830.0" y="405" width="40.0" height="15.0" fill="rgb(253,87,7)" rx="2" ry="2" />
<text  x="833.00" y="415.5" >get..</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.56%)</title><rect x="456.7" y="389" width="6.6" height="15.0" fill="rgb(233,158,1)" rx="2" ry="2" />
<text  x="459.67" y="399.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.56%)</title><rect x="963.3" y="357" width="6.7" height="15.0" fill="rgb(211,172,36)" rx="2" ry="2" />
<text  x="966.33" y="367.5" ></text>
</g>
<g >
<title>do_fault_around (1 samples, 0.56%)</title><rect x="10.0" y="357" width="6.7" height="15.0" fill="rgb(222,144,38)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.56%)</title><rect x="476.7" y="165" width="6.6" height="15.0" fill="rgb(225,13,35)" rx="2" ry="2" />
<text  x="479.67" y="175.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.56%)</title><rect x="476.7" y="101" width="6.6" height="15.0" fill="rgb(246,105,33)" rx="2" ry="2" />
<text  x="479.67" y="111.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 0.56%)</title><rect x="10.0" y="549" width="6.7" height="15.0" fill="rgb(247,45,34)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.56%)</title><rect x="963.3" y="421" width="6.7" height="15.0" fill="rgb(219,42,48)" rx="2" ry="2" />
<text  x="966.33" y="431.5" ></text>
</g>
<g >
<title>perf (65 samples, 36.72%)</title><rect x="16.7" y="581" width="433.3" height="15.0" fill="rgb(212,41,45)" rx="2" ry="2" />
<text  x="19.67" y="591.5" >perf</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.56%)</title><rect x="910.0" y="165" width="6.7" height="15.0" fill="rgb(213,36,24)" rx="2" ry="2" />
<text  x="913.00" y="175.5" ></text>
</g>
<g >
<title>sync_regs (3 samples, 1.69%)</title><rect x="890.0" y="549" width="20.0" height="15.0" fill="rgb(230,103,16)" rx="2" ry="2" />
<text  x="893.00" y="559.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.56%)</title><rect x="456.7" y="325" width="6.6" height="15.0" fill="rgb(211,147,35)" rx="2" ry="2" />
<text  x="459.67" y="335.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.56%)</title><rect x="1183.3" y="453" width="6.7" height="15.0" fill="rgb(227,120,33)" rx="2" ry="2" />
<text  x="1186.33" y="463.5" ></text>
</g>
<g >
<title>smp_call_function_single (64 samples, 36.16%)</title><rect x="16.7" y="325" width="426.6" height="15.0" fill="rgb(208,155,3)" rx="2" ry="2" />
<text  x="19.67" y="335.5" >smp_call_function_single</text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.56%)</title><rect x="963.3" y="309" width="6.7" height="15.0" fill="rgb(246,229,20)" rx="2" ry="2" />
<text  x="966.33" y="319.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 36.16%)</title><rect x="16.7" y="261" width="426.6" height="15.0" fill="rgb(210,106,12)" rx="2" ry="2" />
<text  x="19.67" y="271.5" >__perf_event_enable</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.56%)</title><rect x="956.7" y="437" width="6.6" height="15.0" fill="rgb(244,53,15)" rx="2" ry="2" />
<text  x="959.67" y="447.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.56%)</title><rect x="976.7" y="293" width="6.6" height="15.0" fill="rgb(245,187,29)" rx="2" ry="2" />
<text  x="979.67" y="303.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.56%)</title><rect x="950.0" y="421" width="6.7" height="15.0" fill="rgb(248,107,44)" rx="2" ry="2" />
<text  x="953.00" y="431.5" ></text>
</g>
<g >
<title>open_last_lookups (1 samples, 0.56%)</title><rect x="956.7" y="469" width="6.6" height="15.0" fill="rgb(254,99,3)" rx="2" ry="2" />
<text  x="959.67" y="479.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.56%)</title><rect x="983.3" y="389" width="6.7" height="15.0" fill="rgb(213,111,0)" rx="2" ry="2" />
<text  x="986.33" y="399.5" ></text>
</g>
<g >
<title>start_secondary (31 samples, 17.51%)</title><rect x="976.7" y="549" width="206.6" height="15.0" fill="rgb(246,31,14)" rx="2" ry="2" />
<text  x="979.67" y="559.5" >start_secondary</text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.56%)</title><rect x="970.0" y="565" width="6.7" height="15.0" fill="rgb(225,50,8)" rx="2" ry="2" />
<text  x="973.00" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (2 samples, 1.13%)</title><rect x="1163.3" y="453" width="13.4" height="15.0" fill="rgb(206,40,47)" rx="2" ry="2" />
<text  x="1166.33" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.56%)</title><rect x="470.0" y="389" width="6.7" height="15.0" fill="rgb(238,21,5)" rx="2" ry="2" />
<text  x="473.00" y="399.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.56%)</title><rect x="963.3" y="373" width="6.7" height="15.0" fill="rgb(205,191,8)" rx="2" ry="2" />
<text  x="966.33" y="383.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.56%)</title><rect x="950.0" y="309" width="6.7" height="15.0" fill="rgb(244,169,35)" rx="2" ry="2" />
<text  x="953.00" y="319.5" ></text>
</g>
<g >
<title>[anon] (1 samples, 0.56%)</title><rect x="450.0" y="565" width="6.7" height="15.0" fill="rgb(238,175,11)" rx="2" ry="2" />
<text  x="453.00" y="575.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.56%)</title><rect x="910.0" y="245" width="6.7" height="15.0" fill="rgb(252,120,46)" rx="2" ry="2" />
<text  x="913.00" y="255.5" ></text>
</g>
<g >
<title>perf_ioctl (64 samples, 36.16%)</title><rect x="16.7" y="405" width="426.6" height="15.0" fill="rgb(226,142,48)" rx="2" ry="2" />
<text  x="19.67" y="415.5" >perf_ioctl</text>
</g>
<g >
<title>__handle_mm_fault (9 samples, 5.08%)</title><rect x="823.3" y="485" width="60.0" height="15.0" fill="rgb(219,105,43)" rx="2" ry="2" />
<text  x="826.33" y="495.5" >__hand..</text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.56%)</title><rect x="910.0" y="213" width="6.7" height="15.0" fill="rgb(232,7,18)" rx="2" ry="2" />
<text  x="913.00" y="223.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.56%)</title><rect x="910.0" y="325" width="6.7" height="15.0" fill="rgb(244,212,29)" rx="2" ry="2" />
<text  x="913.00" y="335.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.56%)</title><rect x="970.0" y="517" width="6.7" height="15.0" fill="rgb(227,225,48)" rx="2" ry="2" />
<text  x="973.00" y="527.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.56%)</title><rect x="963.3" y="341" width="6.7" height="15.0" fill="rgb(243,109,44)" rx="2" ry="2" />
<text  x="966.33" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.56%)</title><rect x="910.0" y="469" width="6.7" height="15.0" fill="rgb(232,93,26)" rx="2" ry="2" />
<text  x="913.00" y="479.5" ></text>
</g>
<g >
<title>__ioctl (64 samples, 36.16%)</title><rect x="16.7" y="469" width="426.6" height="15.0" fill="rgb(219,65,13)" rx="2" ry="2" />
<text  x="19.67" y="479.5" >__ioctl</text>
</g>
<g >
<title>NaClSysRead (11 samples, 6.21%)</title><rect x="483.3" y="517" width="73.4" height="15.0" fill="rgb(223,210,33)" rx="2" ry="2" />
<text  x="486.33" y="527.5" >NaClSysR..</text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.56%)</title><rect x="476.7" y="405" width="6.6" height="15.0" fill="rgb(206,50,22)" rx="2" ry="2" />
<text  x="479.67" y="415.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 0.56%)</title><rect x="1183.3" y="533" width="6.7" height="15.0" fill="rgb(217,142,40)" rx="2" ry="2" />
<text  x="1186.33" y="543.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.56%)</title><rect x="476.7" y="357" width="6.6" height="15.0" fill="rgb(218,52,7)" rx="2" ry="2" />
<text  x="479.67" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.56%)</title><rect x="476.7" y="325" width="6.6" height="15.0" fill="rgb(207,90,17)" rx="2" ry="2" />
<text  x="479.67" y="335.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.56%)</title><rect x="10.0" y="373" width="6.7" height="15.0" fill="rgb(207,194,24)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.56%)</title><rect x="950.0" y="437" width="6.7" height="15.0" fill="rgb(218,113,50)" rx="2" ry="2" />
<text  x="953.00" y="447.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1 samples, 0.56%)</title><rect x="1183.3" y="501" width="6.7" height="15.0" fill="rgb(225,178,8)" rx="2" ry="2" />
<text  x="1186.33" y="511.5" ></text>
</g>
<g >
<title>NaClSysExit (2 samples, 1.13%)</title><rect x="470.0" y="517" width="13.3" height="15.0" fill="rgb(240,111,29)" rx="2" ry="2" />
<text  x="473.00" y="527.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.56%)</title><rect x="950.0" y="389" width="6.7" height="15.0" fill="rgb(211,112,29)" rx="2" ry="2" />
<text  x="953.00" y="399.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.56%)</title><rect x="476.7" y="293" width="6.6" height="15.0" fill="rgb(234,4,43)" rx="2" ry="2" />
<text  x="479.67" y="303.5" ></text>
</g>
<g >
<title>dispatcher (2 samples, 1.13%)</title><rect x="470.0" y="485" width="13.3" height="15.0" fill="rgb(217,19,36)" rx="2" ry="2" />
<text  x="473.00" y="495.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 1.69%)</title><rect x="990.0" y="389" width="20.0" height="15.0" fill="rgb(253,41,19)" rx="2" ry="2" />
<text  x="993.00" y="399.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.56%)</title><rect x="910.0" y="277" width="6.7" height="15.0" fill="rgb(209,44,40)" rx="2" ry="2" />
<text  x="913.00" y="287.5" ></text>
</g>
<g >
<title>__execvpe_common (1 samples, 0.56%)</title><rect x="10.0" y="501" width="6.7" height="15.0" fill="rgb(212,118,17)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (31 samples, 17.51%)</title><rect x="556.7" y="533" width="206.6" height="15.0" fill="rgb(250,193,16)" rx="2" ry="2" />
<text  x="559.67" y="543.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.56%)</title><rect x="463.3" y="453" width="6.7" height="15.0" fill="rgb(206,158,33)" rx="2" ry="2" />
<text  x="466.33" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 1.13%)</title><rect x="956.7" y="565" width="13.3" height="15.0" fill="rgb(217,192,39)" rx="2" ry="2" />
<text  x="959.67" y="575.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (30 samples, 16.95%)</title><rect x="976.7" y="501" width="200.0" height="15.0" fill="rgb(213,49,8)" rx="2" ry="2" />
<text  x="979.67" y="511.5" >cpuidle_idle_call</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.56%)</title><rect x="976.7" y="373" width="6.6" height="15.0" fill="rgb(235,221,8)" rx="2" ry="2" />
<text  x="979.67" y="383.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (46 samples, 25.99%)</title><rect x="456.7" y="549" width="306.6" height="15.0" fill="rgb(207,37,6)" rx="2" ry="2" />
<text  x="459.67" y="559.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>NaClSysReadDecoder (11 samples, 6.21%)</title><rect x="483.3" y="533" width="73.4" height="15.0" fill="rgb(216,77,36)" rx="2" ry="2" />
<text  x="486.33" y="543.5" >NaClSysR..</text>
</g>
<g >
<title>new_sync_write (1 samples, 0.56%)</title><rect x="476.7" y="261" width="6.6" height="15.0" fill="rgb(234,159,16)" rx="2" ry="2" />
<text  x="479.67" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.56%)</title><rect x="456.7" y="421" width="6.6" height="15.0" fill="rgb(234,210,46)" rx="2" ry="2" />
<text  x="459.67" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (1 samples, 0.56%)</title><rect x="476.7" y="389" width="6.6" height="15.0" fill="rgb(216,107,9)" rx="2" ry="2" />
<text  x="479.67" y="399.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.56%)</title><rect x="963.3" y="389" width="6.7" height="15.0" fill="rgb(237,162,2)" rx="2" ry="2" />
<text  x="966.33" y="399.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 36.16%)</title><rect x="16.7" y="229" width="426.6" height="15.0" fill="rgb(251,117,46)" rx="2" ry="2" />
<text  x="19.67" y="239.5" >x86_pmu_enable</text>
</g>
<g >
<title>do_filp_open (1 samples, 0.56%)</title><rect x="956.7" y="501" width="6.6" height="15.0" fill="rgb(224,187,11)" rx="2" ry="2" />
<text  x="959.67" y="511.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.56%)</title><rect x="470.0" y="421" width="6.7" height="15.0" fill="rgb(205,217,34)" rx="2" ry="2" />
<text  x="473.00" y="431.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.56%)</title><rect x="456.7" y="245" width="6.6" height="15.0" fill="rgb(218,177,23)" rx="2" ry="2" />
<text  x="459.67" y="255.5" ></text>
</g>
<g >
<title>cpuidle_select (2 samples, 1.13%)</title><rect x="1163.3" y="485" width="13.4" height="15.0" fill="rgb(237,185,6)" rx="2" ry="2" />
<text  x="1166.33" y="495.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 1.13%)</title><rect x="990.0" y="341" width="13.3" height="15.0" fill="rgb(219,42,41)" rx="2" ry="2" />
<text  x="993.00" y="351.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.56%)</title><rect x="476.7" y="117" width="6.6" height="15.0" fill="rgb(211,81,10)" rx="2" ry="2" />
<text  x="479.67" y="127.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.56%)</title><rect x="910.0" y="309" width="6.7" height="15.0" fill="rgb(247,25,33)" rx="2" ry="2" />
<text  x="913.00" y="319.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (31 samples, 17.51%)</title><rect x="556.7" y="421" width="206.6" height="15.0" fill="rgb(242,152,38)" rx="2" ry="2" />
<text  x="559.67" y="431.5" >rustposix::interface::pipe:..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (2 samples, 1.13%)</title><rect x="470.0" y="437" width="13.3" height="15.0" fill="rgb(236,47,15)" rx="2" ry="2" />
<text  x="473.00" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (7 samples, 3.95%)</title><rect x="823.3" y="421" width="46.7" height="15.0" fill="rgb(218,178,21)" rx="2" ry="2" />
<text  x="826.33" y="431.5" >__al..</text>
</g>
<g >
<title>menu_select (2 samples, 1.13%)</title><rect x="1163.3" y="469" width="13.4" height="15.0" fill="rgb(234,169,2)" rx="2" ry="2" />
<text  x="1166.33" y="479.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1 samples, 0.56%)</title><rect x="1183.3" y="389" width="6.7" height="15.0" fill="rgb(220,63,19)" rx="2" ry="2" />
<text  x="1186.33" y="399.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (1 samples, 0.56%)</title><rect x="456.7" y="437" width="6.6" height="15.0" fill="rgb(206,129,24)" rx="2" ry="2" />
<text  x="459.67" y="447.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (2 samples, 1.13%)</title><rect x="1163.3" y="437" width="13.4" height="15.0" fill="rgb(251,86,10)" rx="2" ry="2" />
<text  x="1166.33" y="447.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (16 samples, 9.04%)</title><rect x="656.7" y="405" width="106.6" height="15.0" fill="rgb(222,154,37)" rx="2" ry="2" />
<text  x="659.67" y="415.5" >ringbuf::prod..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.56%)</title><rect x="976.7" y="309" width="6.6" height="15.0" fill="rgb(236,186,23)" rx="2" ry="2" />
<text  x="979.67" y="319.5" ></text>
</g>
<g >
<title>page_poisoning_enabled (1 samples, 0.56%)</title><rect x="476.7" y="37" width="6.6" height="15.0" fill="rgb(247,117,25)" rx="2" ry="2" />
<text  x="479.67" y="47.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 1.13%)</title><rect x="956.7" y="549" width="13.3" height="15.0" fill="rgb(244,227,7)" rx="2" ry="2" />
<text  x="959.67" y="559.5" ></text>
</g>
<g >
<title>rmqueue (2 samples, 1.13%)</title><rect x="856.7" y="389" width="13.3" height="15.0" fill="rgb(227,120,53)" rx="2" ry="2" />
<text  x="859.67" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.56%)</title><rect x="456.7" y="357" width="6.6" height="15.0" fill="rgb(252,118,39)" rx="2" ry="2" />
<text  x="459.67" y="367.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.56%)</title><rect x="10.0" y="437" width="6.7" height="15.0" fill="rgb(213,128,15)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.56%)</title><rect x="963.3" y="261" width="6.7" height="15.0" fill="rgb(233,147,46)" rx="2" ry="2" />
<text  x="966.33" y="271.5" ></text>
</g>
<g >
<title>__update_blocked_fair (2 samples, 1.13%)</title><rect x="990.0" y="325" width="13.3" height="15.0" fill="rgb(222,160,11)" rx="2" ry="2" />
<text  x="993.00" y="335.5" ></text>
</g>
<g >
<title>alloc_pages_vma (7 samples, 3.95%)</title><rect x="823.3" y="437" width="46.7" height="15.0" fill="rgb(229,119,47)" rx="2" ry="2" />
<text  x="826.33" y="447.5" >allo..</text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.56%)</title><rect x="10.0" y="469" width="6.7" height="15.0" fill="rgb(219,220,26)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (11 samples, 6.21%)</title><rect x="483.3" y="501" width="73.4" height="15.0" fill="rgb(234,95,22)" rx="2" ry="2" />
<text  x="486.33" y="511.5" >NaClDesc..</text>
</g>
<g >
<title>get_signal (1 samples, 0.56%)</title><rect x="950.0" y="469" width="6.7" height="15.0" fill="rgb(241,168,13)" rx="2" ry="2" />
<text  x="953.00" y="479.5" ></text>
</g>
<g >
<title>__evlist__enable (64 samples, 36.16%)</title><rect x="16.7" y="517" width="426.6" height="15.0" fill="rgb(250,84,47)" rx="2" ry="2" />
<text  x="19.67" y="527.5" >__evlist__enable</text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.56%)</title><rect x="976.7" y="357" width="6.6" height="15.0" fill="rgb(238,7,41)" rx="2" ry="2" />
<text  x="979.67" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.56%)</title><rect x="470.0" y="373" width="6.7" height="15.0" fill="rgb(244,168,21)" rx="2" ry="2" />
<text  x="473.00" y="383.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.56%)</title><rect x="476.7" y="245" width="6.6" height="15.0" fill="rgb(254,167,11)" rx="2" ry="2" />
<text  x="479.67" y="255.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (2 samples, 1.13%)</title><rect x="470.0" y="533" width="13.3" height="15.0" fill="rgb(212,170,52)" rx="2" ry="2" />
<text  x="473.00" y="543.5" ></text>
</g>
<g >
<title>cpuidle_enter (28 samples, 15.82%)</title><rect x="976.7" y="485" width="186.6" height="15.0" fill="rgb(207,70,34)" rx="2" ry="2" />
<text  x="979.67" y="495.5" >cpuidle_enter</text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.56%)</title><rect x="963.3" y="325" width="6.7" height="15.0" fill="rgb(240,17,38)" rx="2" ry="2" />
<text  x="966.33" y="335.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.56%)</title><rect x="470.0" y="341" width="6.7" height="15.0" fill="rgb(254,200,32)" rx="2" ry="2" />
<text  x="473.00" y="351.5" ></text>
</g>
<g >
<title>do_idle (31 samples, 17.51%)</title><rect x="976.7" y="517" width="206.6" height="15.0" fill="rgb(240,95,43)" rx="2" ry="2" />
<text  x="979.67" y="527.5" >do_idle</text>
</g>
<g >
<title>sock_write_iter (1 samples, 0.56%)</title><rect x="963.3" y="469" width="6.7" height="15.0" fill="rgb(254,68,19)" rx="2" ry="2" />
<text  x="966.33" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (11 samples, 6.21%)</title><rect x="483.3" y="437" width="73.4" height="15.0" fill="rgb(211,143,25)" rx="2" ry="2" />
<text  x="486.33" y="447.5" >rustposi..</text>
</g>
<g >
<title>__fput (1 samples, 0.56%)</title><rect x="470.0" y="277" width="6.7" height="15.0" fill="rgb(219,30,6)" rx="2" ry="2" />
<text  x="473.00" y="287.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (1 samples, 0.56%)</title><rect x="910.0" y="549" width="6.7" height="15.0" fill="rgb(218,139,0)" rx="2" ry="2" />
<text  x="913.00" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.56%)</title><rect x="476.7" y="309" width="6.6" height="15.0" fill="rgb(248,68,53)" rx="2" ry="2" />
<text  x="479.67" y="319.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.56%)</title><rect x="950.0" y="405" width="6.7" height="15.0" fill="rgb(243,88,15)" rx="2" ry="2" />
<text  x="953.00" y="415.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.56%)</title><rect x="950.0" y="325" width="6.7" height="15.0" fill="rgb(212,20,53)" rx="2" ry="2" />
<text  x="953.00" y="335.5" ></text>
</g>
<g >
<title>prep_new_page (4 samples, 2.26%)</title><rect x="830.0" y="389" width="26.7" height="15.0" fill="rgb(205,196,4)" rx="2" ry="2" />
<text  x="833.00" y="399.5" >p..</text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 1.69%)</title><rect x="990.0" y="373" width="20.0" height="15.0" fill="rgb(208,113,52)" rx="2" ry="2" />
<text  x="993.00" y="383.5" ></text>
</g>
<g >
<title>rest_init (1 samples, 0.56%)</title><rect x="1183.3" y="485" width="6.7" height="15.0" fill="rgb(209,121,26)" rx="2" ry="2" />
<text  x="1186.33" y="495.5" ></text>
</g>
<g >
<title>dispatcher (11 samples, 6.21%)</title><rect x="483.3" y="453" width="73.4" height="15.0" fill="rgb(232,44,32)" rx="2" ry="2" />
<text  x="486.33" y="463.5" >dispatcher</text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.56%)</title><rect x="1183.3" y="469" width="6.7" height="15.0" fill="rgb(248,64,7)" rx="2" ry="2" />
<text  x="1186.33" y="479.5" ></text>
</g>
<g >
<title>event_function (64 samples, 36.16%)</title><rect x="16.7" y="277" width="426.6" height="15.0" fill="rgb(242,185,11)" rx="2" ry="2" />
<text  x="19.67" y="287.5" >event_function</text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.56%)</title><rect x="463.3" y="485" width="6.7" height="15.0" fill="rgb(250,122,35)" rx="2" ry="2" />
<text  x="466.33" y="495.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.56%)</title><rect x="950.0" y="341" width="6.7" height="15.0" fill="rgb(211,187,2)" rx="2" ry="2" />
<text  x="953.00" y="351.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (2 samples, 1.13%)</title><rect x="456.7" y="517" width="13.3" height="15.0" fill="rgb(244,103,24)" rx="2" ry="2" />
<text  x="459.67" y="527.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.56%)</title><rect x="910.0" y="437" width="6.7" height="15.0" fill="rgb(225,91,50)" rx="2" ry="2" />
<text  x="913.00" y="447.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.56%)</title><rect x="950.0" y="501" width="6.7" height="15.0" fill="rgb(223,58,10)" rx="2" ry="2" />
<text  x="953.00" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.56%)</title><rect x="950.0" y="549" width="6.7" height="15.0" fill="rgb(207,67,5)" rx="2" ry="2" />
<text  x="953.00" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.56%)</title><rect x="910.0" y="485" width="6.7" height="15.0" fill="rgb(211,88,39)" rx="2" ry="2" />
<text  x="913.00" y="495.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (1 samples, 0.56%)</title><rect x="450.0" y="549" width="6.7" height="15.0" fill="rgb(237,135,30)" rx="2" ry="2" />
<text  x="453.00" y="559.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.56%)</title><rect x="1183.3" y="405" width="6.7" height="15.0" fill="rgb(214,9,24)" rx="2" ry="2" />
<text  x="1186.33" y="415.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.56%)</title><rect x="463.3" y="469" width="6.7" height="15.0" fill="rgb(225,127,48)" rx="2" ry="2" />
<text  x="466.33" y="479.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (1 samples, 0.56%)</title><rect x="10.0" y="517" width="6.7" height="15.0" fill="rgb(206,216,53)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (2 samples, 1.13%)</title><rect x="870.0" y="437" width="13.3" height="15.0" fill="rgb(213,4,1)" rx="2" ry="2" />
<text  x="873.00" y="447.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.56%)</title><rect x="910.0" y="261" width="6.7" height="15.0" fill="rgb(242,155,8)" rx="2" ry="2" />
<text  x="913.00" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 36.16%)</title><rect x="16.7" y="453" width="426.6" height="15.0" fill="rgb(222,43,15)" rx="2" ry="2" />
<text  x="19.67" y="463.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>new_sync_write (1 samples, 0.56%)</title><rect x="963.3" y="485" width="6.7" height="15.0" fill="rgb(239,126,35)" rx="2" ry="2" />
<text  x="966.33" y="495.5" ></text>
</g>
<g >
<title>[sel_ldr] (46 samples, 25.99%)</title><rect x="456.7" y="565" width="306.6" height="15.0" fill="rgb(230,9,21)" rx="2" ry="2" />
<text  x="459.67" y="575.5" >[sel_ldr]</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (1 samples, 0.56%)</title><rect x="916.7" y="549" width="6.6" height="15.0" fill="rgb(234,62,21)" rx="2" ry="2" />
<text  x="919.67" y="559.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.56%)</title><rect x="970.0" y="549" width="6.7" height="15.0" fill="rgb(243,83,44)" rx="2" ry="2" />
<text  x="973.00" y="559.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 36.72%)</title><rect x="16.7" y="565" width="433.3" height="15.0" fill="rgb(206,3,17)" rx="2" ry="2" />
<text  x="19.67" y="575.5" >[unknown]</text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.56%)</title><rect x="476.7" y="197" width="6.6" height="15.0" fill="rgb(248,39,17)" rx="2" ry="2" />
<text  x="479.67" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.56%)</title><rect x="10.0" y="421" width="6.7" height="15.0" fill="rgb(217,124,39)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.56%)</title><rect x="910.0" y="229" width="6.7" height="15.0" fill="rgb(253,98,48)" rx="2" ry="2" />
<text  x="913.00" y="239.5" ></text>
</g>
<g >
<title>lind_exit (2 samples, 1.13%)</title><rect x="470.0" y="501" width="13.3" height="15.0" fill="rgb(247,212,2)" rx="2" ry="2" />
<text  x="473.00" y="511.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.56%)</title><rect x="910.0" y="197" width="6.7" height="15.0" fill="rgb(240,0,27)" rx="2" ry="2" />
<text  x="913.00" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.56%)</title><rect x="910.0" y="341" width="6.7" height="15.0" fill="rgb(236,148,11)" rx="2" ry="2" />
<text  x="913.00" y="351.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.56%)</title><rect x="950.0" y="453" width="6.7" height="15.0" fill="rgb(230,39,52)" rx="2" ry="2" />
<text  x="953.00" y="463.5" ></text>
</g>
<g >
<title>do_shared_fault (1 samples, 0.56%)</title><rect x="910.0" y="293" width="6.7" height="15.0" fill="rgb(251,181,47)" rx="2" ry="2" />
<text  x="913.00" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.56%)</title><rect x="976.7" y="389" width="6.6" height="15.0" fill="rgb(207,24,43)" rx="2" ry="2" />
<text  x="979.67" y="399.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.56%)</title><rect x="883.3" y="501" width="6.7" height="15.0" fill="rgb(254,86,32)" rx="2" ry="2" />
<text  x="886.33" y="511.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.56%)</title><rect x="963.3" y="277" width="6.7" height="15.0" fill="rgb(242,141,49)" rx="2" ry="2" />
<text  x="966.33" y="287.5" ></text>
</g>
</g>
</svg>
