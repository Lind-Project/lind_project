<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>__get_free_pages (1 samples, 0.68%)</title><rect x="26.2" y="389" width="8.0" height="15.0" fill="rgb(205,81,9)" rx="2" ry="2" />
<text  x="29.16" y="399.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 2.74%)</title><rect x="1020.3" y="549" width="32.3" height="15.0" fill="rgb(231,120,14)" rx="2" ry="2" />
<text  x="1023.27" y="559.5" >[u..</text>
</g>
<g >
<title>NaClVmCopyEntry (9 samples, 6.16%)</title><rect x="632.3" y="229" width="72.8" height="15.0" fill="rgb(238,27,42)" rx="2" ry="2" />
<text  x="635.33" y="239.5" >NaClVmCo..</text>
</g>
<g >
<title>__libc_start_main (64 samples, 43.84%)</title><rect x="26.2" y="565" width="517.2" height="15.0" fill="rgb(242,147,42)" rx="2" ry="2" />
<text  x="29.16" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 3.42%)</title><rect x="955.6" y="581" width="40.4" height="15.0" fill="rgb(232,131,30)" rx="2" ry="2" />
<text  x="958.62" y="591.5" >ent..</text>
</g>
<g >
<title>NaClCreateThread (38 samples, 26.03%)</title><rect x="624.2" y="325" width="307.2" height="15.0" fill="rgb(216,170,4)" rx="2" ry="2" />
<text  x="627.25" y="335.5" >NaClCreateThread</text>
</g>
<g >
<title>find_get_entry (1 samples, 0.68%)</title><rect x="842.5" y="69" width="8.0" height="15.0" fill="rgb(231,184,37)" rx="2" ry="2" />
<text  x="845.47" y="79.5" ></text>
</g>
<g >
<title>PyErr_Restore (1 samples, 0.68%)</title><rect x="567.7" y="565" width="8.1" height="15.0" fill="rgb(244,37,16)" rx="2" ry="2" />
<text  x="570.67" y="575.5" ></text>
</g>
<g >
<title>perf_evlist__prepare_workload (1 samples, 0.68%)</title><rect x="543.4" y="517" width="8.1" height="15.0" fill="rgb(250,96,21)" rx="2" ry="2" />
<text  x="546.42" y="527.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 0.68%)</title><rect x="1181.9" y="421" width="8.1" height="15.0" fill="rgb(216,205,33)" rx="2" ry="2" />
<text  x="1184.92" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 2.05%)</title><rect x="591.9" y="549" width="24.3" height="15.0" fill="rgb(206,119,43)" rx="2" ry="2" />
<text  x="594.92" y="559.5" >P..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (63 samples, 43.15%)</title><rect x="34.2" y="469" width="509.2" height="15.0" fill="rgb(254,127,46)" rx="2" ry="2" />
<text  x="37.25" y="479.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>irq_exit (1 samples, 0.68%)</title><rect x="1060.7" y="437" width="8.1" height="15.0" fill="rgb(209,136,48)" rx="2" ry="2" />
<text  x="1063.68" y="447.5" ></text>
</g>
<g >
<title>[perf-1708.map] (1 samples, 0.68%)</title><rect x="616.2" y="517" width="8.0" height="15.0" fill="rgb(253,86,33)" rx="2" ry="2" />
<text  x="619.16" y="527.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.68%)</title><rect x="616.2" y="437" width="8.0" height="15.0" fill="rgb(227,18,50)" rx="2" ry="2" />
<text  x="619.16" y="447.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.68%)</title><rect x="842.5" y="101" width="8.0" height="15.0" fill="rgb(224,174,30)" rx="2" ry="2" />
<text  x="845.47" y="111.5" ></text>
</g>
<g >
<title>[unknown]  (38 samples, 26.03%)</title><rect x="624.2" y="485" width="307.2" height="15.0" fill="rgb(249,174,8)" rx="2" ry="2" />
<text  x="627.25" y="495.5" >[unknown] </text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.68%)</title><rect x="1173.8" y="469" width="8.1" height="15.0" fill="rgb(239,227,50)" rx="2" ry="2" />
<text  x="1176.84" y="479.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.68%)</title><rect x="996.0" y="469" width="8.1" height="15.0" fill="rgb(213,140,33)" rx="2" ry="2" />
<text  x="999.03" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="1036.4" y="501" width="8.1" height="15.0" fill="rgb(222,193,20)" rx="2" ry="2" />
<text  x="1039.44" y="511.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (38 samples, 26.03%)</title><rect x="624.2" y="357" width="307.2" height="15.0" fill="rgb(241,201,11)" rx="2" ry="2" />
<text  x="627.25" y="367.5" >NaClSysForkDecoder</text>
</g>
<g >
<title>sys_execve (1 samples, 0.68%)</title><rect x="10.0" y="517" width="8.1" height="15.0" fill="rgb(222,187,38)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>generic_permission (1 samples, 0.68%)</title><rect x="10.0" y="373" width="8.1" height="15.0" fill="rgb(205,206,48)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.68%)</title><rect x="1181.9" y="453" width="8.1" height="15.0" fill="rgb(249,70,12)" rx="2" ry="2" />
<text  x="1184.92" y="463.5" ></text>
</g>
<g >
<title>call_cpuidle (1 samples, 0.68%)</title><rect x="1181.9" y="469" width="8.1" height="15.0" fill="rgb(240,138,42)" rx="2" ry="2" />
<text  x="1184.92" y="479.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.68%)</title><rect x="874.8" y="117" width="8.1" height="15.0" fill="rgb(251,51,2)" rx="2" ry="2" />
<text  x="877.79" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.68%)</title><rect x="1044.5" y="517" width="8.1" height="15.0" fill="rgb(238,207,1)" rx="2" ry="2" />
<text  x="1047.52" y="527.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.68%)</title><rect x="10.0" y="469" width="8.1" height="15.0" fill="rgb(233,82,26)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.68%)</title><rect x="987.9" y="357" width="8.1" height="15.0" fill="rgb(206,172,36)" rx="2" ry="2" />
<text  x="990.95" y="367.5" ></text>
</g>
<g >
<title>do_open_execat (1 samples, 0.68%)</title><rect x="10.0" y="485" width="8.1" height="15.0" fill="rgb(219,114,26)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.68%)</title><rect x="1173.8" y="437" width="8.1" height="15.0" fill="rgb(247,208,18)" rx="2" ry="2" />
<text  x="1176.84" y="447.5" ></text>
</g>
<g >
<title>ovl_permission (1 samples, 0.68%)</title><rect x="10.0" y="389" width="8.1" height="15.0" fill="rgb(244,105,20)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (38 samples, 26.03%)</title><rect x="624.2" y="373" width="307.2" height="15.0" fill="rgb(219,75,42)" rx="2" ry="2" />
<text  x="627.25" y="383.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>[unknown]  (38 samples, 26.03%)</title><rect x="624.2" y="501" width="307.2" height="15.0" fill="rgb(233,123,29)" rx="2" ry="2" />
<text  x="627.25" y="511.5" >[unknown] </text>
</g>
<g >
<title>rest_init (1 samples, 0.68%)</title><rect x="1181.9" y="517" width="8.1" height="15.0" fill="rgb(249,115,32)" rx="2" ry="2" />
<text  x="1184.92" y="527.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.68%)</title><rect x="1173.8" y="501" width="8.1" height="15.0" fill="rgb(246,115,20)" rx="2" ry="2" />
<text  x="1176.84" y="511.5" ></text>
</g>
<g >
<title>event_function_call (63 samples, 43.15%)</title><rect x="34.2" y="357" width="509.2" height="15.0" fill="rgb(229,39,30)" rx="2" ry="2" />
<text  x="37.25" y="367.5" >event_function_call</text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.68%)</title><rect x="26.2" y="373" width="8.0" height="15.0" fill="rgb(209,95,34)" rx="2" ry="2" />
<text  x="29.16" y="383.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 44.52%)</title><rect x="18.1" y="581" width="525.3" height="15.0" fill="rgb(250,155,34)" rx="2" ry="2" />
<text  x="21.08" y="591.5" >[unknown]</text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.68%)</title><rect x="1173.8" y="421" width="8.1" height="15.0" fill="rgb(223,42,29)" rx="2" ry="2" />
<text  x="1176.84" y="431.5" ></text>
</g>
<g >
<title>__inode_permission (1 samples, 0.68%)</title><rect x="10.0" y="405" width="8.1" height="15.0" fill="rgb(241,80,36)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.68%)</title><rect x="907.1" y="133" width="8.1" height="15.0" fill="rgb(205,98,43)" rx="2" ry="2" />
<text  x="910.12" y="143.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.68%)</title><rect x="42.3" y="197" width="8.1" height="15.0" fill="rgb(252,109,53)" rx="2" ry="2" />
<text  x="45.33" y="207.5" ></text>
</g>
<g >
<title>page_add_file_rmap (1 samples, 0.68%)</title><rect x="543.4" y="373" width="8.1" height="15.0" fill="rgb(220,167,25)" rx="2" ry="2" />
<text  x="546.42" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="1036.4" y="453" width="8.1" height="15.0" fill="rgb(236,20,26)" rx="2" ry="2" />
<text  x="1039.44" y="463.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (63 samples, 43.15%)</title><rect x="34.2" y="213" width="509.2" height="15.0" fill="rgb(207,162,42)" rx="2" ry="2" />
<text  x="37.25" y="223.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>__strchr_avx2 (1 samples, 0.68%)</title><rect x="543.4" y="501" width="8.1" height="15.0" fill="rgb(238,121,4)" rx="2" ry="2" />
<text  x="546.42" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="1036.4" y="469" width="8.1" height="15.0" fill="rgb(223,93,20)" rx="2" ry="2" />
<text  x="1039.44" y="479.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 1.37%)</title><rect x="891.0" y="117" width="16.1" height="15.0" fill="rgb(242,101,7)" rx="2" ry="2" />
<text  x="893.96" y="127.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 43.15%)</title><rect x="34.2" y="245" width="509.2" height="15.0" fill="rgb(239,76,48)" rx="2" ry="2" />
<text  x="37.25" y="255.5" >x86_pmu_enable</text>
</g>
<g >
<title>perf (66 samples, 45.21%)</title><rect x="18.1" y="597" width="533.4" height="15.0" fill="rgb(212,152,23)" rx="2" ry="2" />
<text  x="21.08" y="607.5" >perf</text>
</g>
<g >
<title>remote_function (63 samples, 43.15%)</title><rect x="34.2" y="309" width="509.2" height="15.0" fill="rgb(253,182,29)" rx="2" ry="2" />
<text  x="37.25" y="319.5" >remote_function</text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.68%)</title><rect x="543.4" y="453" width="8.1" height="15.0" fill="rgb(240,191,10)" rx="2" ry="2" />
<text  x="546.42" y="463.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.68%)</title><rect x="996.0" y="501" width="8.1" height="15.0" fill="rgb(252,136,26)" rx="2" ry="2" />
<text  x="999.03" y="511.5" ></text>
</g>
<g >
<title>ovl_get_acl (1 samples, 0.68%)</title><rect x="10.0" y="341" width="8.1" height="15.0" fill="rgb(234,181,38)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>start_kernel (1 samples, 0.68%)</title><rect x="1181.9" y="533" width="8.1" height="15.0" fill="rgb(213,62,32)" rx="2" ry="2" />
<text  x="1184.92" y="543.5" ></text>
</g>
<g >
<title>find_lock_entry (1 samples, 0.68%)</title><rect x="842.5" y="85" width="8.0" height="15.0" fill="rgb(244,26,50)" rx="2" ry="2" />
<text  x="845.47" y="95.5" ></text>
</g>
<g >
<title>radix_tree_lookup_slot (1 samples, 0.68%)</title><rect x="842.5" y="53" width="8.0" height="15.0" fill="rgb(231,226,7)" rx="2" ry="2" />
<text  x="845.47" y="63.5" ></text>
</g>
<g >
<title>call_cpuidle (14 samples, 9.59%)</title><rect x="1052.6" y="517" width="113.2" height="15.0" fill="rgb(229,61,10)" rx="2" ry="2" />
<text  x="1055.60" y="527.5" >call_cpuidle</text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.68%)</title><rect x="979.9" y="325" width="8.0" height="15.0" fill="rgb(226,85,43)" rx="2" ry="2" />
<text  x="982.86" y="335.5" ></text>
</g>
<g >
<title>swapper (23 samples, 15.75%)</title><rect x="1004.1" y="597" width="185.9" height="15.0" fill="rgb(207,20,14)" rx="2" ry="2" />
<text  x="1007.11" y="607.5" >swapper</text>
</g>
<g >
<title>native_write_msr (47 samples, 32.19%)</title><rect x="50.4" y="197" width="379.9" height="15.0" fill="rgb(236,60,33)" rx="2" ry="2" />
<text  x="53.41" y="207.5" >native_write_msr</text>
</g>
<g >
<title>[unknown]  (38 samples, 26.03%)</title><rect x="624.2" y="421" width="307.2" height="15.0" fill="rgb(238,24,12)" rx="2" ry="2" />
<text  x="627.25" y="431.5" >[unknown] </text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="1036.4" y="405" width="8.1" height="15.0" fill="rgb(236,8,9)" rx="2" ry="2" />
<text  x="1039.44" y="415.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 43.15%)</title><rect x="34.2" y="261" width="509.2" height="15.0" fill="rgb(249,118,2)" rx="2" ry="2" />
<text  x="37.25" y="271.5" >ctx_resched</text>
</g>
<g >
<title>unlock_page (1 samples, 0.68%)</title><rect x="882.9" y="117" width="8.1" height="15.0" fill="rgb(244,132,7)" rx="2" ry="2" />
<text  x="885.88" y="127.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.68%)</title><rect x="616.2" y="341" width="8.0" height="15.0" fill="rgb(218,172,14)" rx="2" ry="2" />
<text  x="619.16" y="351.5" ></text>
</g>
<g >
<title>[unknown]  (38 samples, 26.03%)</title><rect x="624.2" y="453" width="307.2" height="15.0" fill="rgb(214,122,33)" rx="2" ry="2" />
<text  x="627.25" y="463.5" >[unknown] </text>
</g>
<g >
<title>sync_regs (2 samples, 1.37%)</title><rect x="810.1" y="197" width="16.2" height="15.0" fill="rgb(212,87,8)" rx="2" ry="2" />
<text  x="813.14" y="207.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.68%)</title><rect x="987.9" y="325" width="8.1" height="15.0" fill="rgb(224,21,11)" rx="2" ry="2" />
<text  x="990.95" y="335.5" ></text>
</g>
<g >
<title>[sel_ldr] (1 samples, 0.68%)</title><rect x="616.2" y="501" width="8.0" height="15.0" fill="rgb(232,117,16)" rx="2" ry="2" />
<text  x="619.16" y="511.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.68%)</title><rect x="996.0" y="517" width="8.1" height="15.0" fill="rgb(208,12,47)" rx="2" ry="2" />
<text  x="999.03" y="527.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.68%)</title><rect x="915.2" y="197" width="8.1" height="15.0" fill="rgb(243,65,32)" rx="2" ry="2" />
<text  x="918.21" y="207.5" ></text>
</g>
<g >
<title>NaClSysFork (38 samples, 26.03%)</title><rect x="624.2" y="341" width="307.2" height="15.0" fill="rgb(249,73,22)" rx="2" ry="2" />
<text  x="627.25" y="351.5" >NaClSysFork</text>
</g>
<g >
<title>dput (1 samples, 0.68%)</title><rect x="987.9" y="421" width="8.1" height="15.0" fill="rgb(215,129,53)" rx="2" ry="2" />
<text  x="990.95" y="431.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 1.37%)</title><rect x="850.5" y="133" width="16.2" height="15.0" fill="rgb(218,200,20)" rx="2" ry="2" />
<text  x="853.55" y="143.5" ></text>
</g>
<g >
<title>NaClAppThreadSpawn (38 samples, 26.03%)</title><rect x="624.2" y="309" width="307.2" height="15.0" fill="rgb(213,185,15)" rx="2" ry="2" />
<text  x="627.25" y="319.5" >NaClAppThreadSpawn</text>
</g>
<g >
<title>NaClForkThreadContextSetup (38 samples, 26.03%)</title><rect x="624.2" y="293" width="307.2" height="15.0" fill="rgb(244,133,44)" rx="2" ry="2" />
<text  x="627.25" y="303.5" >NaClForkThreadContextSetup</text>
</g>
<g >
<title>perf_event_for_each_child (63 samples, 43.15%)</title><rect x="34.2" y="389" width="509.2" height="15.0" fill="rgb(211,199,44)" rx="2" ry="2" />
<text  x="37.25" y="399.5" >perf_event_for_each_child</text>
</g>
<g >
<title>error_entry (2 samples, 1.37%)</title><rect x="810.1" y="213" width="16.2" height="15.0" fill="rgb(208,41,40)" rx="2" ry="2" />
<text  x="813.14" y="223.5" ></text>
</g>
<g >
<title>NaClDyncodeVisit (1 samples, 0.68%)</title><rect x="624.2" y="245" width="8.1" height="15.0" fill="rgb(224,16,44)" rx="2" ry="2" />
<text  x="627.25" y="255.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.68%)</title><rect x="996.0" y="533" width="8.1" height="15.0" fill="rgb(223,52,19)" rx="2" ry="2" />
<text  x="999.03" y="543.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (1 samples, 0.68%)</title><rect x="624.2" y="229" width="8.1" height="15.0" fill="rgb(218,113,29)" rx="2" ry="2" />
<text  x="627.25" y="239.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.68%)</title><rect x="955.6" y="389" width="8.1" height="15.0" fill="rgb(210,163,48)" rx="2" ry="2" />
<text  x="958.62" y="399.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 1.37%)</title><rect x="1052.6" y="453" width="16.2" height="15.0" fill="rgb(231,177,51)" rx="2" ry="2" />
<text  x="1055.60" y="463.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.68%)</title><rect x="915.2" y="213" width="8.1" height="15.0" fill="rgb(246,50,4)" rx="2" ry="2" />
<text  x="918.21" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.68%)</title><rect x="10.0" y="533" width="8.1" height="15.0" fill="rgb(229,71,54)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>_perf_event_enable (63 samples, 43.15%)</title><rect x="34.2" y="373" width="509.2" height="15.0" fill="rgb(247,3,27)" rx="2" ry="2" />
<text  x="37.25" y="383.5" >_perf_event_enable</text>
</g>
<g >
<title>[unknown]  (38 samples, 26.03%)</title><rect x="624.2" y="517" width="307.2" height="15.0" fill="rgb(207,199,46)" rx="2" ry="2" />
<text  x="627.25" y="527.5" >[unknown] </text>
</g>
<g >
<title>do_syscall_64 (5 samples, 3.42%)</title><rect x="955.6" y="565" width="40.4" height="15.0" fill="rgb(245,183,22)" rx="2" ry="2" />
<text  x="958.62" y="575.5" >do_..</text>
</g>
<g >
<title>__GI___ioctl (63 samples, 43.15%)</title><rect x="34.2" y="485" width="509.2" height="15.0" fill="rgb(243,46,44)" rx="2" ry="2" />
<text  x="37.25" y="495.5" >__GI___ioctl</text>
</g>
<g >
<title>cpuidle_enter_state (14 samples, 9.59%)</title><rect x="1052.6" y="485" width="113.2" height="15.0" fill="rgb(254,155,3)" rx="2" ry="2" />
<text  x="1055.60" y="495.5" >cpuidle_enter..</text>
</g>
<g >
<title>cmd_record (1 samples, 0.68%)</title><rect x="543.4" y="533" width="8.1" height="15.0" fill="rgb(216,131,53)" rx="2" ry="2" />
<text  x="546.42" y="543.5" ></text>
</g>
<g >
<title>run_builtin (1 samples, 0.68%)</title><rect x="543.4" y="549" width="8.1" height="15.0" fill="rgb(206,161,31)" rx="2" ry="2" />
<text  x="546.42" y="559.5" ></text>
</g>
<g >
<title>dput.part.26 (1 samples, 0.68%)</title><rect x="987.9" y="405" width="8.1" height="15.0" fill="rgb(219,18,53)" rx="2" ry="2" />
<text  x="990.95" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (63 samples, 43.15%)</title><rect x="34.2" y="453" width="509.2" height="15.0" fill="rgb(237,2,16)" rx="2" ry="2" />
<text  x="37.25" y="463.5" >do_syscall_64</text>
</g>
<g >
<title>shmem_truncate_range (1 samples, 0.68%)</title><rect x="987.9" y="309" width="8.1" height="15.0" fill="rgb(253,229,28)" rx="2" ry="2" />
<text  x="990.95" y="319.5" ></text>
</g>
<g >
<title>__perf_event_enable (63 samples, 43.15%)</title><rect x="34.2" y="277" width="509.2" height="15.0" fill="rgb(222,222,16)" rx="2" ry="2" />
<text  x="37.25" y="287.5" >__perf_event_enable</text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.68%)</title><rect x="1044.5" y="373" width="8.1" height="15.0" fill="rgb(207,201,4)" rx="2" ry="2" />
<text  x="1047.52" y="383.5" ></text>
</g>
<g >
<title>[sel_ldr] (38 samples, 26.03%)</title><rect x="624.2" y="389" width="307.2" height="15.0" fill="rgb(254,85,9)" rx="2" ry="2" />
<text  x="627.25" y="399.5" >[sel_ldr]</text>
</g>
<g >
<title>menu_select (1 samples, 0.68%)</title><rect x="1165.8" y="501" width="8.0" height="15.0" fill="rgb(231,41,40)" rx="2" ry="2" />
<text  x="1168.75" y="511.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.68%)</title><rect x="987.9" y="373" width="8.1" height="15.0" fill="rgb(229,210,39)" rx="2" ry="2" />
<text  x="990.95" y="383.5" ></text>
</g>
<g >
<title>perf_ioctl (63 samples, 43.15%)</title><rect x="34.2" y="405" width="509.2" height="15.0" fill="rgb(247,50,38)" rx="2" ry="2" />
<text  x="37.25" y="415.5" >perf_ioctl</text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="1036.4" y="517" width="8.1" height="15.0" fill="rgb(232,32,15)" rx="2" ry="2" />
<text  x="1039.44" y="527.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.68%)</title><rect x="1060.7" y="405" width="8.1" height="15.0" fill="rgb(240,112,42)" rx="2" ry="2" />
<text  x="1063.68" y="415.5" ></text>
</g>
<g >
<title>[perf-1708.map] (1 samples, 0.68%)</title><rect x="616.2" y="533" width="8.0" height="15.0" fill="rgb(214,117,51)" rx="2" ry="2" />
<text  x="619.16" y="543.5" ></text>
</g>
<g >
<title>filemap_map_pages (3 samples, 2.05%)</title><rect x="866.7" y="133" width="24.3" height="15.0" fill="rgb(253,111,4)" rx="2" ry="2" />
<text  x="869.71" y="143.5" >f..</text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.68%)</title><rect x="987.9" y="277" width="8.1" height="15.0" fill="rgb(247,77,25)" rx="2" ry="2" />
<text  x="990.95" y="287.5" ></text>
</g>
<g >
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.68%)</title><rect x="996.0" y="581" width="8.1" height="15.0" fill="rgb(238,47,42)" rx="2" ry="2" />
<text  x="999.03" y="591.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 1.37%)</title><rect x="971.8" y="357" width="16.1" height="15.0" fill="rgb(238,138,4)" rx="2" ry="2" />
<text  x="974.78" y="367.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.68%)</title><rect x="979.9" y="309" width="8.0" height="15.0" fill="rgb(235,47,44)" rx="2" ry="2" />
<text  x="982.86" y="319.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.68%)</title><rect x="543.4" y="485" width="8.1" height="15.0" fill="rgb(221,53,12)" rx="2" ry="2" />
<text  x="546.42" y="495.5" ></text>
</g>
<g >
<title>generic_exec_single (63 samples, 43.15%)</title><rect x="34.2" y="325" width="509.2" height="15.0" fill="rgb(226,150,23)" rx="2" ry="2" />
<text  x="37.25" y="335.5" >generic_exec_single</text>
</g>
<g >
<title>lind (1 samples, 0.68%)</title><rect x="10.0" y="597" width="8.1" height="15.0" fill="rgb(244,5,22)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.68%)</title><rect x="987.9" y="261" width="8.1" height="15.0" fill="rgb(247,119,33)" rx="2" ry="2" />
<text  x="990.95" y="271.5" ></text>
</g>
<g >
<title>get_signal (5 samples, 3.42%)</title><rect x="955.6" y="517" width="40.4" height="15.0" fill="rgb(212,164,43)" rx="2" ry="2" />
<text  x="958.62" y="527.5" >get..</text>
</g>
<g >
<title>NaClSyscallCSegHook (1 samples, 0.68%)</title><rect x="616.2" y="485" width="8.0" height="15.0" fill="rgb(218,165,43)" rx="2" ry="2" />
<text  x="619.16" y="495.5" ></text>
</g>
<g >
<title>secondary_startup_64 (17 samples, 11.64%)</title><rect x="1052.6" y="581" width="137.4" height="15.0" fill="rgb(221,165,8)" rx="2" ry="2" />
<text  x="1055.60" y="591.5" >secondary_startup..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.68%)</title><rect x="616.2" y="389" width="8.0" height="15.0" fill="rgb(254,136,54)" rx="2" ry="2" />
<text  x="619.16" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.68%)</title><rect x="543.4" y="421" width="8.1" height="15.0" fill="rgb(226,93,6)" rx="2" ry="2" />
<text  x="546.42" y="431.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.68%)</title><rect x="987.9" y="341" width="8.1" height="15.0" fill="rgb(226,20,25)" rx="2" ry="2" />
<text  x="990.95" y="351.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.68%)</title><rect x="987.9" y="453" width="8.1" height="15.0" fill="rgb(209,156,30)" rx="2" ry="2" />
<text  x="990.95" y="463.5" ></text>
</g>
<g >
<title>sel_ldr (56 samples, 38.36%)</title><rect x="551.5" y="597" width="452.6" height="15.0" fill="rgb(245,140,0)" rx="2" ry="2" />
<text  x="554.51" y="607.5" >sel_ldr</text>
</g>
<g >
<title>NaClPatchAddr (1 samples, 0.68%)</title><rect x="624.2" y="213" width="8.1" height="15.0" fill="rgb(228,7,38)" rx="2" ry="2" />
<text  x="627.25" y="223.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.68%)</title><rect x="616.2" y="421" width="8.0" height="15.0" fill="rgb(245,219,21)" rx="2" ry="2" />
<text  x="619.16" y="431.5" ></text>
</g>
<g >
<title>NaClPatchAddr (1 samples, 0.68%)</title><rect x="923.3" y="261" width="8.1" height="15.0" fill="rgb(223,31,12)" rx="2" ry="2" />
<text  x="926.29" y="271.5" ></text>
</g>
<g >
<title>poll_schedule_timeout (1 samples, 0.68%)</title><rect x="1044.5" y="437" width="8.1" height="15.0" fill="rgb(240,98,40)" rx="2" ry="2" />
<text  x="1047.52" y="447.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 4.11%)</title><rect x="1004.1" y="581" width="48.5" height="15.0" fill="rgb(254,14,29)" rx="2" ry="2" />
<text  x="1007.11" y="591.5" >[unk..</text>
</g>
<g >
<title>sched_clock (1 samples, 0.68%)</title><rect x="1044.5" y="325" width="8.1" height="15.0" fill="rgb(230,176,1)" rx="2" ry="2" />
<text  x="1047.52" y="335.5" ></text>
</g>
<g >
<title>NaClPatchAddr (9 samples, 6.16%)</title><rect x="632.3" y="213" width="72.8" height="15.0" fill="rgb(224,213,27)" rx="2" ry="2" />
<text  x="635.33" y="223.5" >NaClPatc..</text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.68%)</title><rect x="1060.7" y="357" width="8.1" height="15.0" fill="rgb(225,152,22)" rx="2" ry="2" />
<text  x="1063.68" y="367.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.68%)</title><rect x="979.9" y="341" width="8.0" height="15.0" fill="rgb(205,138,14)" rx="2" ry="2" />
<text  x="982.86" y="351.5" ></text>
</g>
<g >
<title>event_function (63 samples, 43.15%)</title><rect x="34.2" y="293" width="509.2" height="15.0" fill="rgb(233,203,20)" rx="2" ry="2" />
<text  x="37.25" y="303.5" >event_function</text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.68%)</title><rect x="1181.9" y="437" width="8.1" height="15.0" fill="rgb(219,176,54)" rx="2" ry="2" />
<text  x="1184.92" y="447.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (3 samples, 2.05%)</title><rect x="963.7" y="373" width="24.2" height="15.0" fill="rgb(242,218,17)" rx="2" ry="2" />
<text  x="966.70" y="383.5" >f..</text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 1.37%)</title><rect x="891.0" y="133" width="16.1" height="15.0" fill="rgb(230,0,1)" rx="2" ry="2" />
<text  x="893.96" y="143.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.68%)</title><rect x="858.6" y="101" width="8.1" height="15.0" fill="rgb(233,184,23)" rx="2" ry="2" />
<text  x="861.63" y="111.5" ></text>
</g>
<g >
<title>[unknown]  (38 samples, 26.03%)</title><rect x="624.2" y="437" width="307.2" height="15.0" fill="rgb(219,182,7)" rx="2" ry="2" />
<text  x="627.25" y="447.5" >[unknown] </text>
</g>
<g >
<title>path_openat (1 samples, 0.68%)</title><rect x="10.0" y="453" width="8.1" height="15.0" fill="rgb(207,153,20)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>do_idle (16 samples, 10.96%)</title><rect x="1052.6" y="533" width="129.3" height="15.0" fill="rgb(239,143,41)" rx="2" ry="2" />
<text  x="1055.60" y="543.5" >do_idle</text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 1.37%)</title><rect x="850.5" y="117" width="16.2" height="15.0" fill="rgb(226,105,41)" rx="2" ry="2" />
<text  x="853.55" y="127.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 43.15%)</title><rect x="34.2" y="229" width="509.2" height="15.0" fill="rgb(218,201,16)" rx="2" ry="2" />
<text  x="37.25" y="239.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>__handle_mm_fault (9 samples, 6.16%)</title><rect x="842.5" y="149" width="72.7" height="15.0" fill="rgb(243,197,54)" rx="2" ry="2" />
<text  x="845.47" y="159.5" >__handle..</text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.68%)</title><rect x="543.4" y="581" width="8.1" height="15.0" fill="rgb(226,207,44)" rx="2" ry="2" />
<text  x="546.42" y="591.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.68%)</title><rect x="616.2" y="357" width="8.0" height="15.0" fill="rgb(210,62,1)" rx="2" ry="2" />
<text  x="619.16" y="367.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.68%)</title><rect x="1044.5" y="357" width="8.1" height="15.0" fill="rgb(210,80,35)" rx="2" ry="2" />
<text  x="1047.52" y="367.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.68%)</title><rect x="1060.7" y="389" width="8.1" height="15.0" fill="rgb(229,118,2)" rx="2" ry="2" />
<text  x="1063.68" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.68%)</title><rect x="26.2" y="357" width="8.0" height="15.0" fill="rgb(208,185,12)" rx="2" ry="2" />
<text  x="29.16" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.68%)</title><rect x="1060.7" y="421" width="8.1" height="15.0" fill="rgb(211,168,39)" rx="2" ry="2" />
<text  x="1063.68" y="431.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.68%)</title><rect x="1173.8" y="453" width="8.1" height="15.0" fill="rgb(205,11,12)" rx="2" ry="2" />
<text  x="1176.84" y="463.5" ></text>
</g>
<g >
<title>main (64 samples, 43.84%)</title><rect x="26.2" y="549" width="517.2" height="15.0" fill="rgb(216,2,22)" rx="2" ry="2" />
<text  x="29.16" y="559.5" >main</text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.68%)</title><rect x="1181.9" y="501" width="8.1" height="15.0" fill="rgb(253,42,13)" rx="2" ry="2" />
<text  x="1184.92" y="511.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.68%)</title><rect x="26.2" y="341" width="8.0" height="15.0" fill="rgb(221,205,14)" rx="2" ry="2" />
<text  x="29.16" y="351.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 1.37%)</title><rect x="1052.6" y="469" width="16.2" height="15.0" fill="rgb(237,184,52)" rx="2" ry="2" />
<text  x="1055.60" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.68%)</title><rect x="10.0" y="549" width="8.1" height="15.0" fill="rgb(239,131,0)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.68%)</title><rect x="907.1" y="117" width="8.1" height="15.0" fill="rgb(226,175,12)" rx="2" ry="2" />
<text  x="910.12" y="127.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (1 samples, 0.68%)</title><rect x="1173.8" y="485" width="8.1" height="15.0" fill="rgb(224,91,27)" rx="2" ry="2" />
<text  x="1176.84" y="495.5" ></text>
</g>
<g >
<title>sys_pselect6 (1 samples, 0.68%)</title><rect x="1044.5" y="485" width="8.1" height="15.0" fill="rgb(216,37,34)" rx="2" ry="2" />
<text  x="1047.52" y="495.5" ></text>
</g>
<g >
<title>evlist__enable (63 samples, 43.15%)</title><rect x="34.2" y="501" width="509.2" height="15.0" fill="rgb(219,45,32)" rx="2" ry="2" />
<text  x="37.25" y="511.5" >evlist__enable</text>
</g>
<g >
<title>link_path_walk (1 samples, 0.68%)</title><rect x="10.0" y="437" width="8.1" height="15.0" fill="rgb(246,157,37)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.37%)</title><rect x="1036.4" y="533" width="16.2" height="15.0" fill="rgb(214,135,12)" rx="2" ry="2" />
<text  x="1039.44" y="543.5" ></text>
</g>
<g >
<title>__GI___execve (1 samples, 0.68%)</title><rect x="10.0" y="565" width="8.1" height="15.0" fill="rgb(220,135,15)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>intel_idle (12 samples, 8.22%)</title><rect x="1068.8" y="469" width="97.0" height="15.0" fill="rgb(219,209,23)" rx="2" ry="2" />
<text  x="1071.77" y="479.5" >intel_idle</text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.37%)</title><rect x="575.8" y="565" width="16.1" height="15.0" fill="rgb(244,150,40)" rx="2" ry="2" />
<text  x="578.75" y="575.5" ></text>
</g>
<g >
<title>[unknown]  (38 samples, 26.03%)</title><rect x="624.2" y="469" width="307.2" height="15.0" fill="rgb(248,224,49)" rx="2" ry="2" />
<text  x="627.25" y="479.5" >[unknown] </text>
</g>
<g >
<title>cpuidle_enter (14 samples, 9.59%)</title><rect x="1052.6" y="501" width="113.2" height="15.0" fill="rgb(248,110,22)" rx="2" ry="2" />
<text  x="1055.60" y="511.5" >cpuidle_enter</text>
</g>
<g >
<title>unmap_vmas (4 samples, 2.74%)</title><rect x="955.6" y="437" width="32.3" height="15.0" fill="rgb(248,35,47)" rx="2" ry="2" />
<text  x="958.62" y="447.5" >un..</text>
</g>
<g >
<title>do_select (1 samples, 0.68%)</title><rect x="1044.5" y="453" width="8.1" height="15.0" fill="rgb(246,224,10)" rx="2" ry="2" />
<text  x="1047.52" y="463.5" ></text>
</g>
<g >
<title>core_sys_select (1 samples, 0.68%)</title><rect x="1044.5" y="469" width="8.1" height="15.0" fill="rgb(206,178,17)" rx="2" ry="2" />
<text  x="1047.52" y="479.5" ></text>
</g>
<g >
<title>do_group_exit (5 samples, 3.42%)</title><rect x="955.6" y="501" width="40.4" height="15.0" fill="rgb(240,9,24)" rx="2" ry="2" />
<text  x="958.62" y="511.5" >do_..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.68%)</title><rect x="543.4" y="437" width="8.1" height="15.0" fill="rgb(223,110,38)" rx="2" ry="2" />
<text  x="546.42" y="447.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.68%)</title><rect x="1044.5" y="421" width="8.1" height="15.0" fill="rgb(249,189,19)" rx="2" ry="2" />
<text  x="1047.52" y="431.5" ></text>
</g>
<g >
<title>sys_poll (1 samples, 0.68%)</title><rect x="26.2" y="453" width="8.0" height="15.0" fill="rgb(247,164,44)" rx="2" ry="2" />
<text  x="29.16" y="463.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 4.11%)</title><rect x="1004.1" y="565" width="48.5" height="15.0" fill="rgb(235,42,46)" rx="2" ry="2" />
<text  x="1007.11" y="575.5" >[unk..</text>
</g>
<g >
<title>page_fault (9 samples, 6.16%)</title><rect x="842.5" y="213" width="72.7" height="15.0" fill="rgb(219,142,54)" rx="2" ry="2" />
<text  x="845.47" y="223.5" >page_fault</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.68%)</title><rect x="1052.6" y="437" width="8.1" height="15.0" fill="rgb(219,66,9)" rx="2" ry="2" />
<text  x="1055.60" y="447.5" ></text>
</g>
<g >
<title>cpu_startup_entry (16 samples, 10.96%)</title><rect x="1052.6" y="549" width="129.3" height="15.0" fill="rgb(216,221,4)" rx="2" ry="2" />
<text  x="1055.60" y="559.5" >cpu_startup_entry</text>
</g>
<g >
<title>unmap_page_range (4 samples, 2.74%)</title><rect x="955.6" y="405" width="32.3" height="15.0" fill="rgb(210,79,25)" rx="2" ry="2" />
<text  x="958.62" y="415.5" >un..</text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.68%)</title><rect x="26.2" y="437" width="8.0" height="15.0" fill="rgb(218,108,21)" rx="2" ry="2" />
<text  x="29.16" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.68%)</title><rect x="559.6" y="581" width="8.1" height="15.0" fill="rgb(233,228,35)" rx="2" ry="2" />
<text  x="562.59" y="591.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.68%)</title><rect x="26.2" y="405" width="8.0" height="15.0" fill="rgb(243,128,42)" rx="2" ry="2" />
<text  x="29.16" y="415.5" ></text>
</g>
<g >
<title>inode_permission (1 samples, 0.68%)</title><rect x="10.0" y="421" width="8.1" height="15.0" fill="rgb(228,145,53)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="1036.4" y="485" width="8.1" height="15.0" fill="rgb(223,188,28)" rx="2" ry="2" />
<text  x="1039.44" y="495.5" ></text>
</g>
<g >
<title>[perf-1708.map] (39 samples, 26.71%)</title><rect x="616.2" y="549" width="315.2" height="15.0" fill="rgb(220,37,4)" rx="2" ry="2" />
<text  x="619.16" y="559.5" >[perf-1708.map]</text>
</g>
<g >
<title>NaClCopyDynamicText (37 samples, 25.34%)</title><rect x="624.2" y="261" width="299.1" height="15.0" fill="rgb(221,93,31)" rx="2" ry="2" />
<text  x="627.25" y="271.5" >NaClCopyDynamicText</text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="10.0" y="581" width="8.1" height="15.0" fill="rgb(231,150,29)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.68%)</title><rect x="616.2" y="325" width="8.0" height="15.0" fill="rgb(252,136,29)" rx="2" ry="2" />
<text  x="619.16" y="335.5" ></text>
</g>
<g >
<title>NaClVmmapVisit (36 samples, 24.66%)</title><rect x="632.3" y="245" width="291.0" height="15.0" fill="rgb(208,146,35)" rx="2" ry="2" />
<text  x="635.33" y="255.5" >NaClVmmapVisit</text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.68%)</title><rect x="543.4" y="389" width="8.1" height="15.0" fill="rgb(235,106,48)" rx="2" ry="2" />
<text  x="546.42" y="399.5" ></text>
</g>
<g >
<title>mmput (4 samples, 2.74%)</title><rect x="955.6" y="469" width="32.3" height="15.0" fill="rgb(240,193,42)" rx="2" ry="2" />
<text  x="958.62" y="479.5" >mm..</text>
</g>
<g >
<title>unmap_single_vma (4 samples, 2.74%)</title><rect x="955.6" y="421" width="32.3" height="15.0" fill="rgb(205,37,2)" rx="2" ry="2" />
<text  x="958.62" y="431.5" >un..</text>
</g>
<g >
<title>schedule (1 samples, 0.68%)</title><rect x="1044.5" y="389" width="8.1" height="15.0" fill="rgb(210,130,27)" rx="2" ry="2" />
<text  x="1047.52" y="399.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.68%)</title><rect x="1052.6" y="421" width="8.1" height="15.0" fill="rgb(217,189,33)" rx="2" ry="2" />
<text  x="1055.60" y="431.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (1 samples, 0.68%)</title><rect x="616.2" y="469" width="8.0" height="15.0" fill="rgb(207,197,49)" rx="2" ry="2" />
<text  x="619.16" y="479.5" ></text>
</g>
<g >
<title>nmi_restore (14 samples, 9.59%)</title><rect x="430.3" y="197" width="113.1" height="15.0" fill="rgb(253,181,42)" rx="2" ry="2" />
<text  x="433.27" y="207.5" >nmi_restore</text>
</g>
<g >
<title>task_work_run (1 samples, 0.68%)</title><rect x="987.9" y="469" width="8.1" height="15.0" fill="rgb(205,122,51)" rx="2" ry="2" />
<text  x="990.95" y="479.5" ></text>
</g>
<g >
<title>tupledealloc.lto_priv.0 (2 samples, 1.37%)</title><rect x="931.4" y="565" width="16.1" height="15.0" fill="rgb(235,95,7)" rx="2" ry="2" />
<text  x="934.37" y="575.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.68%)</title><rect x="842.5" y="117" width="8.0" height="15.0" fill="rgb(221,16,48)" rx="2" ry="2" />
<text  x="845.47" y="127.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.68%)</title><rect x="543.4" y="405" width="8.1" height="15.0" fill="rgb(239,157,11)" rx="2" ry="2" />
<text  x="546.42" y="415.5" ></text>
</g>
<g >
<title>do_page_fault (9 samples, 6.16%)</title><rect x="842.5" y="197" width="72.7" height="15.0" fill="rgb(214,71,34)" rx="2" ry="2" />
<text  x="845.47" y="207.5" >do_page_..</text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.68%)</title><rect x="616.2" y="405" width="8.0" height="15.0" fill="rgb(222,155,47)" rx="2" ry="2" />
<text  x="619.16" y="415.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.68%)</title><rect x="1044.5" y="341" width="8.1" height="15.0" fill="rgb(247,156,23)" rx="2" ry="2" />
<text  x="1047.52" y="351.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 3.42%)</title><rect x="955.6" y="549" width="40.4" height="15.0" fill="rgb(238,86,52)" rx="2" ry="2" />
<text  x="958.62" y="559.5" >exi..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.68%)</title><rect x="26.2" y="469" width="8.0" height="15.0" fill="rgb(212,75,47)" rx="2" ry="2" />
<text  x="29.16" y="479.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.68%)</title><rect x="996.0" y="453" width="8.1" height="15.0" fill="rgb(247,163,26)" rx="2" ry="2" />
<text  x="999.03" y="463.5" ></text>
</g>
<g >
<title>all (146 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(244,149,12)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>run_builtin (64 samples, 43.84%)</title><rect x="26.2" y="533" width="517.2" height="15.0" fill="rgb(252,209,8)" rx="2" ry="2" />
<text  x="29.16" y="543.5" >run_builtin</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (27 samples, 18.49%)</title><rect x="705.1" y="229" width="218.2" height="15.0" fill="rgb(205,180,11)" rx="2" ry="2" />
<text  x="708.07" y="239.5" >__memmove_avx_unaligned_erms</text>
</g>
<g >
<title>do_vfs_ioctl (63 samples, 43.15%)</title><rect x="34.2" y="421" width="509.2" height="15.0" fill="rgb(235,85,25)" rx="2" ry="2" />
<text  x="37.25" y="431.5" >do_vfs_ioctl</text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.68%)</title><rect x="10.0" y="501" width="8.1" height="15.0" fill="rgb(250,126,0)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.68%)</title><rect x="987.9" y="293" width="8.1" height="15.0" fill="rgb(224,65,29)" rx="2" ry="2" />
<text  x="990.95" y="303.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (38 samples, 26.03%)</title><rect x="624.2" y="277" width="307.2" height="15.0" fill="rgb(209,6,15)" rx="2" ry="2" />
<text  x="627.25" y="287.5" >NaClCopyExecutionContext</text>
</g>
<g >
<title>__radix_tree_lookup (1 samples, 0.68%)</title><rect x="842.5" y="37" width="8.0" height="15.0" fill="rgb(208,102,43)" rx="2" ry="2" />
<text  x="845.47" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.68%)</title><rect x="996.0" y="565" width="8.1" height="15.0" fill="rgb(219,162,27)" rx="2" ry="2" />
<text  x="999.03" y="575.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.68%)</title><rect x="987.9" y="437" width="8.1" height="15.0" fill="rgb(235,131,6)" rx="2" ry="2" />
<text  x="990.95" y="447.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 0.68%)</title><rect x="1181.9" y="565" width="8.1" height="15.0" fill="rgb(208,158,5)" rx="2" ry="2" />
<text  x="1184.92" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="1036.4" y="437" width="8.1" height="15.0" fill="rgb(223,119,38)" rx="2" ry="2" />
<text  x="1039.44" y="447.5" ></text>
</g>
<g >
<title>do_signal (5 samples, 3.42%)</title><rect x="955.6" y="533" width="40.4" height="15.0" fill="rgb(236,41,16)" rx="2" ry="2" />
<text  x="958.62" y="543.5" >do_..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.68%)</title><rect x="551.5" y="581" width="8.1" height="15.0" fill="rgb(227,127,13)" rx="2" ry="2" />
<text  x="554.51" y="591.5" ></text>
</g>
<g >
<title>get_acl (1 samples, 0.68%)</title><rect x="10.0" y="357" width="8.1" height="15.0" fill="rgb(235,169,35)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.68%)</title><rect x="26.2" y="485" width="8.0" height="15.0" fill="rgb(209,30,14)" rx="2" ry="2" />
<text  x="29.16" y="495.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.68%)</title><rect x="1060.7" y="373" width="8.1" height="15.0" fill="rgb(220,29,25)" rx="2" ry="2" />
<text  x="1063.68" y="383.5" ></text>
</g>
<g >
<title>[unknown]  (38 samples, 26.03%)</title><rect x="624.2" y="405" width="307.2" height="15.0" fill="rgb(221,166,41)" rx="2" ry="2" />
<text  x="627.25" y="415.5" >[unknown] </text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="1036.4" y="389" width="8.1" height="15.0" fill="rgb(225,141,38)" rx="2" ry="2" />
<text  x="1039.44" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.68%)</title><rect x="996.0" y="549" width="8.1" height="15.0" fill="rgb(222,174,46)" rx="2" ry="2" />
<text  x="999.03" y="559.5" ></text>
</g>
<g >
<title>__do_page_fault (9 samples, 6.16%)</title><rect x="842.5" y="181" width="72.7" height="15.0" fill="rgb(230,163,19)" rx="2" ry="2" />
<text  x="845.47" y="191.5" >__do_pag..</text>
</g>
<g >
<title>smp_call_function_single (63 samples, 43.15%)</title><rect x="34.2" y="341" width="509.2" height="15.0" fill="rgb(235,173,31)" rx="2" ry="2" />
<text  x="37.25" y="351.5" >smp_call_function_single</text>
</g>
<g >
<title>[unknown] (47 samples, 32.19%)</title><rect x="567.7" y="581" width="379.8" height="15.0" fill="rgb(221,207,8)" rx="2" ry="2" />
<text  x="570.67" y="591.5" >[unknown]</text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.68%)</title><rect x="1165.8" y="517" width="8.0" height="15.0" fill="rgb(212,203,16)" rx="2" ry="2" />
<text  x="1168.75" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.68%)</title><rect x="1044.5" y="309" width="8.1" height="15.0" fill="rgb(250,133,22)" rx="2" ry="2" />
<text  x="1047.52" y="319.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.68%)</title><rect x="842.5" y="133" width="8.0" height="15.0" fill="rgb(217,97,41)" rx="2" ry="2" />
<text  x="845.47" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.68%)</title><rect x="1044.5" y="501" width="8.1" height="15.0" fill="rgb(208,84,35)" rx="2" ry="2" />
<text  x="1047.52" y="511.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 28.77%)</title><rect x="591.9" y="565" width="339.5" height="15.0" fill="rgb(232,198,36)" rx="2" ry="2" />
<text  x="594.92" y="575.5" >[unknown]</text>
</g>
<g >
<title>native_irq_return_iret (2 samples, 1.37%)</title><rect x="826.3" y="213" width="16.2" height="15.0" fill="rgb(252,205,5)" rx="2" ry="2" />
<text  x="829.30" y="223.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.68%)</title><rect x="543.4" y="469" width="8.1" height="15.0" fill="rgb(226,118,0)" rx="2" ry="2" />
<text  x="546.42" y="479.5" ></text>
</g>
<g >
<title>exit_mmap (4 samples, 2.74%)</title><rect x="955.6" y="453" width="32.3" height="15.0" fill="rgb(244,51,24)" rx="2" ry="2" />
<text  x="958.62" y="463.5" >ex..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="1036.4" y="421" width="8.1" height="15.0" fill="rgb(219,23,41)" rx="2" ry="2" />
<text  x="1039.44" y="431.5" ></text>
</g>
<g >
<title>perf_poll (1 samples, 0.68%)</title><rect x="26.2" y="421" width="8.0" height="15.0" fill="rgb(236,60,51)" rx="2" ry="2" />
<text  x="29.16" y="431.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.68%)</title><rect x="1044.5" y="405" width="8.1" height="15.0" fill="rgb(212,73,24)" rx="2" ry="2" />
<text  x="1047.52" y="415.5" ></text>
</g>
<g >
<title>__poll (1 samples, 0.68%)</title><rect x="26.2" y="501" width="8.0" height="15.0" fill="rgb(230,219,21)" rx="2" ry="2" />
<text  x="29.16" y="511.5" ></text>
</g>
<g >
<title>do_exit (5 samples, 3.42%)</title><rect x="955.6" y="485" width="40.4" height="15.0" fill="rgb(229,145,22)" rx="2" ry="2" />
<text  x="958.62" y="495.5" >do_..</text>
</g>
<g >
<title>sys_ioctl (63 samples, 43.15%)</title><rect x="34.2" y="437" width="509.2" height="15.0" fill="rgb(208,215,1)" rx="2" ry="2" />
<text  x="37.25" y="447.5" >sys_ioctl</text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.68%)</title><rect x="987.9" y="389" width="8.1" height="15.0" fill="rgb(240,182,4)" rx="2" ry="2" />
<text  x="990.95" y="399.5" ></text>
</g>
<g >
<title>main (1 samples, 0.68%)</title><rect x="543.4" y="565" width="8.1" height="15.0" fill="rgb(242,47,53)" rx="2" ry="2" />
<text  x="546.42" y="575.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (3 samples, 2.05%)</title><rect x="963.7" y="389" width="24.2" height="15.0" fill="rgb(249,152,33)" rx="2" ry="2" />
<text  x="966.70" y="399.5" >t..</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.68%)</title><rect x="616.2" y="373" width="8.0" height="15.0" fill="rgb(249,229,15)" rx="2" ry="2" />
<text  x="619.16" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.68%)</title><rect x="616.2" y="453" width="8.0" height="15.0" fill="rgb(231,190,52)" rx="2" ry="2" />
<text  x="619.16" y="463.5" ></text>
</g>
<g >
<title>start_secondary (16 samples, 10.96%)</title><rect x="1052.6" y="565" width="129.3" height="15.0" fill="rgb(223,207,31)" rx="2" ry="2" />
<text  x="1055.60" y="575.5" >start_secondary</text>
</g>
<g >
<title>cmd_record (64 samples, 43.84%)</title><rect x="26.2" y="517" width="517.2" height="15.0" fill="rgb(239,169,24)" rx="2" ry="2" />
<text  x="29.16" y="527.5" >cmd_record</text>
</g>
<g >
<title>handle_mm_fault (9 samples, 6.16%)</title><rect x="842.5" y="165" width="72.7" height="15.0" fill="rgb(242,104,32)" rx="2" ry="2" />
<text  x="845.47" y="175.5" >handle_m..</text>
</g>
<g >
<title>[unknown]  (38 samples, 26.03%)</title><rect x="624.2" y="533" width="307.2" height="15.0" fill="rgb(251,199,45)" rx="2" ry="2" />
<text  x="627.25" y="543.5" >[unknown] </text>
</g>
<g >
<title>wake_up_q (1 samples, 0.68%)</title><rect x="996.0" y="485" width="8.1" height="15.0" fill="rgb(226,183,22)" rx="2" ry="2" />
<text  x="999.03" y="495.5" ></text>
</g>
<g >
<title>__new_sem_wait_slow.constprop.0 (1 samples, 0.68%)</title><rect x="947.5" y="581" width="8.1" height="15.0" fill="rgb(219,99,15)" rx="2" ry="2" />
<text  x="950.53" y="591.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 0.68%)</title><rect x="1181.9" y="549" width="8.1" height="15.0" fill="rgb(233,229,19)" rx="2" ry="2" />
<text  x="1184.92" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.68%)</title><rect x="1173.8" y="517" width="8.1" height="15.0" fill="rgb(219,219,12)" rx="2" ry="2" />
<text  x="1176.84" y="527.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.68%)</title><rect x="1181.9" y="485" width="8.1" height="15.0" fill="rgb(243,31,21)" rx="2" ry="2" />
<text  x="1184.92" y="495.5" ></text>
</g>
</g>
</svg>
