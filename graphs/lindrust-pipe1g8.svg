<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="438.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="421" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="421" > </text>
<g id="frames">
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.67%)</title><rect x="653.2" y="181" width="7.9" height="15.0" fill="rgb(220,175,50)" rx="2" ry="2" />
<text  x="656.20" y="191.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.27%)</title><rect x="847.0" y="325" width="3.1" height="15.0" fill="rgb(236,27,40)" rx="2" ry="2" />
<text  x="849.96" y="335.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.13%)</title><rect x="899.4" y="261" width="1.6" height="15.0" fill="rgb(239,135,33)" rx="2" ry="2" />
<text  x="902.37" y="271.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.27%)</title><rect x="847.0" y="213" width="3.1" height="15.0" fill="rgb(252,185,7)" rx="2" ry="2" />
<text  x="849.96" y="223.5" ></text>
</g>
<g >
<title>do_sys_poll (2 samples, 0.27%)</title><rect x="910.5" y="309" width="3.2" height="15.0" fill="rgb(220,21,35)" rx="2" ry="2" />
<text  x="913.48" y="319.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.27%)</title><rect x="905.7" y="261" width="3.2" height="15.0" fill="rgb(217,30,32)" rx="2" ry="2" />
<text  x="908.72" y="271.5" ></text>
</g>
<g >
<title>try_check_zero (2 samples, 0.27%)</title><rect x="916.8" y="277" width="3.2" height="15.0" fill="rgb(236,206,5)" rx="2" ry="2" />
<text  x="919.84" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (4 samples, 0.54%)</title><rect x="529.3" y="229" width="6.4" height="15.0" fill="rgb(232,33,18)" rx="2" ry="2" />
<text  x="532.33" y="239.5" ></text>
</g>
<g >
<title>NaClXMutexLock (3 samples, 0.40%)</title><rect x="160.9" y="309" width="4.7" height="15.0" fill="rgb(234,207,19)" rx="2" ry="2" />
<text  x="163.87" y="319.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.13%)</title><rect x="1175.7" y="245" width="1.6" height="15.0" fill="rgb(226,25,54)" rx="2" ry="2" />
<text  x="1178.71" y="255.5" ></text>
</g>
<g >
<title>irq_enter (1 samples, 0.13%)</title><rect x="924.8" y="229" width="1.6" height="15.0" fill="rgb(225,115,2)" rx="2" ry="2" />
<text  x="927.78" y="239.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.13%)</title><rect x="902.5" y="245" width="1.6" height="15.0" fill="rgb(220,31,34)" rx="2" ry="2" />
<text  x="905.54" y="255.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.13%)</title><rect x="13.2" y="181" width="1.6" height="15.0" fill="rgb(218,204,11)" rx="2" ry="2" />
<text  x="16.18" y="191.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.13%)</title><rect x="912.1" y="181" width="1.6" height="15.0" fill="rgb(242,215,0)" rx="2" ry="2" />
<text  x="915.07" y="191.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (194 samples, 26.11%)</title><rect x="470.6" y="325" width="308.1" height="15.0" fill="rgb(254,102,21)" rx="2" ry="2" />
<text  x="473.57" y="335.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.13%)</title><rect x="907.3" y="181" width="1.6" height="15.0" fill="rgb(226,45,28)" rx="2" ry="2" />
<text  x="910.31" y="191.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (1 samples, 0.13%)</title><rect x="484.9" y="293" width="1.5" height="15.0" fill="rgb(232,22,17)" rx="2" ry="2" />
<text  x="487.86" y="303.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.13%)</title><rect x="904.1" y="293" width="1.6" height="15.0" fill="rgb(215,180,10)" rx="2" ry="2" />
<text  x="907.13" y="303.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.13%)</title><rect x="704.0" y="229" width="1.6" height="15.0" fill="rgb(241,226,46)" rx="2" ry="2" />
<text  x="707.02" y="239.5" ></text>
</g>
<g >
<title>__do_page_fault (8 samples, 1.08%)</title><rect x="807.3" y="309" width="12.7" height="15.0" fill="rgb(235,57,16)" rx="2" ry="2" />
<text  x="810.25" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 1.48%)</title><rect x="899.4" y="357" width="17.4" height="15.0" fill="rgb(239,10,0)" rx="2" ry="2" />
<text  x="902.37" y="367.5" ></text>
</g>
<g >
<title>NaClRefCountRef (6 samples, 0.81%)</title><rect x="688.1" y="245" width="9.6" height="15.0" fill="rgb(254,209,21)" rx="2" ry="2" />
<text  x="691.14" y="255.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.13%)</title><rect x="619.9" y="197" width="1.5" height="15.0" fill="rgb(213,82,47)" rx="2" ry="2" />
<text  x="622.85" y="207.5" ></text>
</g>
<g >
<title>__const_udelay (2 samples, 0.27%)</title><rect x="916.8" y="261" width="3.2" height="15.0" fill="rgb(222,99,48)" rx="2" ry="2" />
<text  x="919.84" y="271.5" ></text>
</g>
<g >
<title>lind_write (101 samples, 13.59%)</title><rect x="500.7" y="261" width="160.4" height="15.0" fill="rgb(208,76,34)" rx="2" ry="2" />
<text  x="503.74" y="271.5" >lind_write</text>
</g>
<g >
<title>try_charge (1 samples, 0.13%)</title><rect x="815.2" y="245" width="1.6" height="15.0" fill="rgb(222,186,25)" rx="2" ry="2" />
<text  x="818.20" y="255.5" ></text>
</g>
<g >
<title>x86_pmu_enable (62 samples, 8.34%)</title><rect x="14.8" y="85" width="98.4" height="15.0" fill="rgb(223,134,24)" rx="2" ry="2" />
<text  x="17.76" y="95.5" >x86_pmu_ena..</text>
</g>
<g >
<title>sys_futex (3 samples, 0.40%)</title><rect x="899.4" y="325" width="4.7" height="15.0" fill="rgb(216,115,48)" rx="2" ry="2" />
<text  x="902.37" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.54%)</title><rect x="124.3" y="341" width="6.4" height="15.0" fill="rgb(227,191,32)" rx="2" ry="2" />
<text  x="127.35" y="351.5" ></text>
</g>
<g >
<title>sys_recvmsg (1 samples, 0.13%)</title><rect x="913.7" y="325" width="1.5" height="15.0" fill="rgb(233,33,6)" rx="2" ry="2" />
<text  x="916.66" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.13%)</title><rect x="13.2" y="101" width="1.6" height="15.0" fill="rgb(212,213,24)" rx="2" ry="2" />
<text  x="16.18" y="111.5" ></text>
</g>
<g >
<title>delay_tsc (2 samples, 0.27%)</title><rect x="916.8" y="245" width="3.2" height="15.0" fill="rgb(233,31,35)" rx="2" ry="2" />
<text  x="919.84" y="255.5" ></text>
</g>
<g >
<title>default_do_nmi (1 samples, 0.13%)</title><rect x="14.8" y="37" width="1.6" height="15.0" fill="rgb(223,181,38)" rx="2" ry="2" />
<text  x="17.76" y="47.5" ></text>
</g>
<g >
<title>NaClMutexLock (1 samples, 0.13%)</title><rect x="772.3" y="261" width="1.6" height="15.0" fill="rgb(225,222,31)" rx="2" ry="2" />
<text  x="775.31" y="271.5" ></text>
</g>
<g >
<title>do_page_fault (8 samples, 1.08%)</title><rect x="807.3" y="325" width="12.7" height="15.0" fill="rgb(242,10,23)" rx="2" ry="2" />
<text  x="810.25" y="335.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (189 samples, 25.44%)</title><rect x="170.4" y="325" width="300.2" height="15.0" fill="rgb(207,133,9)" rx="2" ry="2" />
<text  x="173.40" y="335.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>NaClFastMutexUnlock (3 samples, 0.40%)</title><rect x="680.2" y="277" width="4.8" height="15.0" fill="rgb(244,7,36)" rx="2" ry="2" />
<text  x="683.20" y="287.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.27%)</title><rect x="847.0" y="197" width="3.1" height="15.0" fill="rgb(231,220,40)" rx="2" ry="2" />
<text  x="849.96" y="207.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.13%)</title><rect x="707.2" y="293" width="1.6" height="15.0" fill="rgb(249,59,3)" rx="2" ry="2" />
<text  x="710.20" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.13%)</title><rect x="699.3" y="229" width="1.5" height="15.0" fill="rgb(212,49,46)" rx="2" ry="2" />
<text  x="702.26" y="239.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.13%)</title><rect x="13.2" y="149" width="1.6" height="15.0" fill="rgb(239,83,25)" rx="2" ry="2" />
<text  x="16.18" y="159.5" ></text>
</g>
<g >
<title>intel_idle (142 samples, 19.11%)</title><rect x="931.1" y="245" width="225.5" height="15.0" fill="rgb(227,81,43)" rx="2" ry="2" />
<text  x="934.13" y="255.5" >intel_idle</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="586.5" y="197" width="1.6" height="15.0" fill="rgb(237,63,44)" rx="2" ry="2" />
<text  x="589.50" y="207.5" ></text>
</g>
<g >
<title>NaClXMutexLock (6 samples, 0.81%)</title><rect x="726.3" y="277" width="9.5" height="15.0" fill="rgb(251,19,47)" rx="2" ry="2" />
<text  x="729.26" y="287.5" ></text>
</g>
<g >
<title>NaClLogUnlock (3 samples, 0.40%)</title><rect x="700.8" y="277" width="4.8" height="15.0" fill="rgb(209,207,15)" rx="2" ry="2" />
<text  x="703.85" y="287.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.13%)</title><rect x="897.8" y="261" width="1.6" height="15.0" fill="rgb(216,142,19)" rx="2" ry="2" />
<text  x="900.78" y="271.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.13%)</title><rect x="1170.9" y="277" width="1.6" height="15.0" fill="rgb(216,169,4)" rx="2" ry="2" />
<text  x="1173.94" y="287.5" ></text>
</g>
<g >
<title>start_secondary (163 samples, 21.94%)</title><rect x="920.0" y="341" width="258.9" height="15.0" fill="rgb(244,229,31)" rx="2" ry="2" />
<text  x="923.01" y="351.5" >start_secondary</text>
</g>
<g >
<title>NaClMutexLock (5 samples, 0.67%)</title><rect x="727.8" y="261" width="8.0" height="15.0" fill="rgb(214,142,35)" rx="2" ry="2" />
<text  x="730.85" y="271.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.13%)</title><rect x="469.0" y="229" width="1.6" height="15.0" fill="rgb(223,192,13)" rx="2" ry="2" />
<text  x="471.98" y="239.5" ></text>
</g>
<g >
<title>__sched_text_start (3 samples, 0.40%)</title><rect x="1166.2" y="277" width="4.7" height="15.0" fill="rgb(213,185,45)" rx="2" ry="2" />
<text  x="1169.18" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 1.48%)</title><rect x="899.4" y="341" width="17.4" height="15.0" fill="rgb(245,220,14)" rx="2" ry="2" />
<text  x="902.37" y="351.5" ></text>
</g>
<g >
<title>ctx_resched (62 samples, 8.34%)</title><rect x="14.8" y="101" width="98.4" height="15.0" fill="rgb(210,45,47)" rx="2" ry="2" />
<text  x="17.76" y="111.5" >ctx_resched</text>
</g>
<g >
<title>NaClSysRead (189 samples, 25.44%)</title><rect x="170.4" y="309" width="300.2" height="15.0" fill="rgb(248,88,52)" rx="2" ry="2" />
<text  x="173.40" y="319.5" >NaClSysRead</text>
</g>
<g >
<title>NaClMutexUnlock (3 samples, 0.40%)</title><rect x="773.9" y="261" width="4.8" height="15.0" fill="rgb(206,209,5)" rx="2" ry="2" />
<text  x="776.90" y="271.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (150 samples, 20.19%)</title><rect x="921.6" y="261" width="238.2" height="15.0" fill="rgb(213,140,32)" rx="2" ry="2" />
<text  x="924.60" y="271.5" >cpuidle_enter_state</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="824.7" y="341" width="1.6" height="15.0" fill="rgb(248,184,43)" rx="2" ry="2" />
<text  x="827.72" y="351.5" ></text>
</g>
<g >
<title>swapper (214 samples, 28.80%)</title><rect x="850.1" y="373" width="339.9" height="15.0" fill="rgb(229,131,16)" rx="2" ry="2" />
<text  x="853.13" y="383.5" >swapper</text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.27%)</title><rect x="847.0" y="165" width="3.1" height="15.0" fill="rgb(251,228,15)" rx="2" ry="2" />
<text  x="849.96" y="175.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (5 samples, 0.67%)</title><rect x="727.8" y="245" width="8.0" height="15.0" fill="rgb(238,40,1)" rx="2" ry="2" />
<text  x="730.85" y="255.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.13%)</title><rect x="912.1" y="277" width="1.6" height="15.0" fill="rgb(210,182,52)" rx="2" ry="2" />
<text  x="915.07" y="287.5" ></text>
</g>
<g >
<title>cpuidle_enter (150 samples, 20.19%)</title><rect x="921.6" y="277" width="238.2" height="15.0" fill="rgb(216,119,29)" rx="2" ry="2" />
<text  x="924.60" y="287.5" >cpuidle_enter</text>
</g>
<g >
<title>NaClDescUnref (7 samples, 0.94%)</title><rect x="661.1" y="293" width="11.2" height="15.0" fill="rgb(219,97,13)" rx="2" ry="2" />
<text  x="664.14" y="303.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.13%)</title><rect x="899.4" y="293" width="1.6" height="15.0" fill="rgb(245,226,6)" rx="2" ry="2" />
<text  x="902.37" y="303.5" ></text>
</g>
<g >
<title>__perf_event_enable (62 samples, 8.34%)</title><rect x="14.8" y="117" width="98.4" height="15.0" fill="rgb(250,79,33)" rx="2" ry="2" />
<text  x="17.76" y="127.5" >__perf_even..</text>
</g>
<g >
<title>MarkValidJumpTarget (1 samples, 0.13%)</title><rect x="167.2" y="229" width="1.6" height="15.0" fill="rgb(234,63,53)" rx="2" ry="2" />
<text  x="170.23" y="239.5" ></text>
</g>
<g >
<title>BitmapClearBit (1 samples, 0.13%)</title><rect x="165.6" y="213" width="1.6" height="15.0" fill="rgb(217,124,33)" rx="2" ry="2" />
<text  x="168.64" y="223.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (4 samples, 0.54%)</title><rect x="691.3" y="229" width="6.4" height="15.0" fill="rgb(245,87,27)" rx="2" ry="2" />
<text  x="694.32" y="239.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeInit (2 samples, 0.27%)</title><rect x="723.1" y="245" width="3.2" height="15.0" fill="rgb(224,174,25)" rx="2" ry="2" />
<text  x="726.08" y="255.5" ></text>
</g>
<g >
<title>process_srcu (2 samples, 0.27%)</title><rect x="916.8" y="293" width="3.2" height="15.0" fill="rgb(214,150,33)" rx="2" ry="2" />
<text  x="919.84" y="303.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.13%)</title><rect x="897.8" y="293" width="1.6" height="15.0" fill="rgb(252,160,21)" rx="2" ry="2" />
<text  x="900.78" y="303.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.13%)</title><rect x="912.1" y="245" width="1.6" height="15.0" fill="rgb(216,223,0)" rx="2" ry="2" />
<text  x="915.07" y="255.5" ></text>
</g>
<g >
<title>wake_up_process (2 samples, 0.27%)</title><rect x="926.4" y="165" width="3.1" height="15.0" fill="rgb(229,82,49)" rx="2" ry="2" />
<text  x="929.37" y="175.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.13%)</title><rect x="1156.6" y="181" width="1.6" height="15.0" fill="rgb(242,212,20)" rx="2" ry="2" />
<text  x="1159.65" y="191.5" ></text>
</g>
<g >
<title>NaClRangeStatsUpdate (1 samples, 0.13%)</title><rect x="745.3" y="245" width="1.6" height="15.0" fill="rgb(207,197,26)" rx="2" ry="2" />
<text  x="748.32" y="255.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.13%)</title><rect x="1169.4" y="229" width="1.5" height="15.0" fill="rgb(239,29,11)" rx="2" ry="2" />
<text  x="1172.35" y="239.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (2 samples, 0.27%)</title><rect x="702.4" y="245" width="3.2" height="15.0" fill="rgb(236,171,43)" rx="2" ry="2" />
<text  x="705.44" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (62 samples, 8.34%)</title><rect x="14.8" y="309" width="98.4" height="15.0" fill="rgb(235,191,6)" rx="2" ry="2" />
<text  x="17.76" y="319.5" >entry_SYSCA..</text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.13%)</title><rect x="928.0" y="101" width="1.5" height="15.0" fill="rgb(254,6,32)" rx="2" ry="2" />
<text  x="930.95" y="111.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (3 samples, 0.40%)</title><rect x="165.6" y="245" width="4.8" height="15.0" fill="rgb(252,201,48)" rx="2" ry="2" />
<text  x="168.64" y="255.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (107 samples, 14.40%)</title><rect x="491.2" y="277" width="169.9" height="15.0" fill="rgb(251,175,40)" rx="2" ry="2" />
<text  x="494.21" y="287.5" >NaClHostDescWrite</text>
</g>
<g >
<title>poll_schedule_timeout (1 samples, 0.13%)</title><rect x="912.1" y="293" width="1.6" height="15.0" fill="rgb(232,143,13)" rx="2" ry="2" />
<text  x="915.07" y="303.5" ></text>
</g>
<g >
<title>do_signal (2 samples, 0.27%)</title><rect x="847.0" y="309" width="3.1" height="15.0" fill="rgb(205,6,22)" rx="2" ry="2" />
<text  x="849.96" y="319.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeExtract (5 samples, 0.67%)</title><rect x="715.1" y="245" width="8.0" height="15.0" fill="rgb(247,49,45)" rx="2" ry="2" />
<text  x="718.14" y="255.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (6 samples, 0.81%)</title><rect x="473.7" y="293" width="9.6" height="15.0" fill="rgb(247,72,52)" rx="2" ry="2" />
<text  x="476.74" y="303.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.13%)</title><rect x="915.2" y="293" width="1.6" height="15.0" fill="rgb(244,116,33)" rx="2" ry="2" />
<text  x="918.25" y="303.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.13%)</title><rect x="13.2" y="165" width="1.6" height="15.0" fill="rgb(212,141,23)" rx="2" ry="2" />
<text  x="16.18" y="175.5" ></text>
</g>
<g >
<title>NaClAvlTreeInsert (2 samples, 0.27%)</title><rect x="743.7" y="261" width="3.2" height="15.0" fill="rgb(245,188,5)" rx="2" ry="2" />
<text  x="746.73" y="271.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (4 samples, 0.54%)</title><rect x="661.1" y="245" width="6.4" height="15.0" fill="rgb(225,63,21)" rx="2" ry="2" />
<text  x="664.14" y="255.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.13%)</title><rect x="848.5" y="117" width="1.6" height="15.0" fill="rgb(207,111,40)" rx="2" ry="2" />
<text  x="851.55" y="127.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (7 samples, 0.94%)</title><rect x="1178.9" y="213" width="11.1" height="15.0" fill="rgb(234,225,46)" rx="2" ry="2" />
<text  x="1181.88" y="223.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (398 samples, 53.57%)</title><rect x="146.6" y="341" width="632.1" height="15.0" fill="rgb(234,83,34)" rx="2" ry="2" />
<text  x="149.58" y="351.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>process_one_work (2 samples, 0.27%)</title><rect x="916.8" y="309" width="3.2" height="15.0" fill="rgb(234,42,17)" rx="2" ry="2" />
<text  x="919.84" y="319.5" ></text>
</g>
<g >
<title>__page_cache_alloc (1 samples, 0.13%)</title><rect x="13.2" y="133" width="1.6" height="15.0" fill="rgb(226,200,44)" rx="2" ry="2" />
<text  x="16.18" y="143.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.13%)</title><rect x="13.2" y="229" width="1.6" height="15.0" fill="rgb(247,14,29)" rx="2" ry="2" />
<text  x="16.18" y="239.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.40%)</title><rect x="667.5" y="245" width="4.8" height="15.0" fill="rgb(241,224,10)" rx="2" ry="2" />
<text  x="670.50" y="255.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.13%)</title><rect x="816.8" y="293" width="1.6" height="15.0" fill="rgb(212,226,8)" rx="2" ry="2" />
<text  x="819.78" y="303.5" ></text>
</g>
<g >
<title>NaClXMutexLock (1 samples, 0.13%)</title><rect x="705.6" y="277" width="1.6" height="15.0" fill="rgb(223,143,15)" rx="2" ry="2" />
<text  x="708.61" y="287.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.13%)</title><rect x="912.1" y="261" width="1.6" height="15.0" fill="rgb(214,172,47)" rx="2" ry="2" />
<text  x="915.07" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (4 samples, 0.54%)</title><rect x="764.4" y="245" width="6.3" height="15.0" fill="rgb(254,10,7)" rx="2" ry="2" />
<text  x="767.37" y="255.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (79 samples, 10.63%)</title><rect x="535.7" y="229" width="125.4" height="15.0" fill="rgb(207,141,40)" rx="2" ry="2" />
<text  x="538.68" y="239.5" >rustposix::safe..</text>
</g>
<g >
<title>NaClGetDesc (1 samples, 0.13%)</title><rect x="469.0" y="293" width="1.6" height="15.0" fill="rgb(205,227,4)" rx="2" ry="2" />
<text  x="471.98" y="303.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (4 samples, 0.54%)</title><rect x="691.3" y="213" width="6.4" height="15.0" fill="rgb(246,154,43)" rx="2" ry="2" />
<text  x="694.32" y="223.5" ></text>
</g>
<g >
<title>cpuidle_enter (7 samples, 0.94%)</title><rect x="1178.9" y="229" width="11.1" height="15.0" fill="rgb(223,83,54)" rx="2" ry="2" />
<text  x="1181.88" y="239.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (4 samples, 0.54%)</title><rect x="661.1" y="261" width="6.4" height="15.0" fill="rgb(230,86,53)" rx="2" ry="2" />
<text  x="664.14" y="271.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.27%)</title><rect x="905.7" y="229" width="3.2" height="15.0" fill="rgb(230,174,5)" rx="2" ry="2" />
<text  x="908.72" y="239.5" ></text>
</g>
<g >
<title>[sel_ldr] (8 samples, 1.08%)</title><rect x="789.8" y="341" width="12.7" height="15.0" fill="rgb(215,85,24)" rx="2" ry="2" />
<text  x="792.78" y="351.5" ></text>
</g>
<g >
<title>NaClDescRef (1 samples, 0.13%)</title><rect x="469.0" y="261" width="1.6" height="15.0" fill="rgb(246,131,34)" rx="2" ry="2" />
<text  x="471.98" y="271.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.13%)</title><rect x="802.5" y="341" width="1.6" height="15.0" fill="rgb(231,226,15)" rx="2" ry="2" />
<text  x="805.49" y="351.5" ></text>
</g>
<g >
<title>HandleStackContext (3 samples, 0.40%)</title><rect x="149.8" y="325" width="4.7" height="15.0" fill="rgb(235,129,19)" rx="2" ry="2" />
<text  x="152.76" y="335.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.40%)</title><rect x="926.4" y="229" width="4.7" height="15.0" fill="rgb(227,160,7)" rx="2" ry="2" />
<text  x="929.37" y="239.5" ></text>
</g>
<g >
<title>security_socket_getpeersec_dgram (1 samples, 0.13%)</title><rect x="915.2" y="261" width="1.6" height="15.0" fill="rgb(222,70,51)" rx="2" ry="2" />
<text  x="918.25" y="271.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (1 samples, 0.13%)</title><rect x="116.4" y="341" width="1.6" height="15.0" fill="rgb(250,119,16)" rx="2" ry="2" />
<text  x="119.41" y="351.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeAddInterval (19 samples, 2.56%)</title><rect x="740.6" y="277" width="30.1" height="15.0" fill="rgb(227,59,46)" rx="2" ry="2" />
<text  x="743.55" y="287.5" >Na..</text>
</g>
<g >
<title>NaClXMutexUnlock (3 samples, 0.40%)</title><rect x="735.8" y="277" width="4.8" height="15.0" fill="rgb(246,55,11)" rx="2" ry="2" />
<text  x="738.79" y="287.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.13%)</title><rect x="1175.7" y="261" width="1.6" height="15.0" fill="rgb(209,191,11)" rx="2" ry="2" />
<text  x="1178.71" y="271.5" ></text>
</g>
<g >
<title>get_timespec64 (1 samples, 0.13%)</title><rect x="904.1" y="309" width="1.6" height="15.0" fill="rgb(225,62,24)" rx="2" ry="2" />
<text  x="907.13" y="319.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.27%)</title><rect x="926.4" y="149" width="3.1" height="15.0" fill="rgb(207,101,29)" rx="2" ry="2" />
<text  x="929.37" y="159.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.13%)</title><rect x="13.2" y="245" width="1.6" height="15.0" fill="rgb(254,145,17)" rx="2" ry="2" />
<text  x="16.18" y="255.5" ></text>
</g>
<g >
<title>page_fault (8 samples, 1.08%)</title><rect x="807.3" y="341" width="12.7" height="15.0" fill="rgb(215,229,16)" rx="2" ry="2" />
<text  x="810.25" y="351.5" ></text>
</g>
<g >
<title>mmput (2 samples, 0.27%)</title><rect x="847.0" y="245" width="3.1" height="15.0" fill="rgb(248,163,29)" rx="2" ry="2" />
<text  x="849.96" y="255.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.27%)</title><rect x="1167.8" y="261" width="3.1" height="15.0" fill="rgb(237,14,45)" rx="2" ry="2" />
<text  x="1170.77" y="271.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (1 samples, 0.13%)</title><rect x="119.6" y="341" width="1.6" height="15.0" fill="rgb(239,84,49)" rx="2" ry="2" />
<text  x="122.58" y="351.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (62 samples, 8.34%)</title><rect x="14.8" y="341" width="98.4" height="15.0" fill="rgb(252,61,32)" rx="2" ry="2" />
<text  x="17.76" y="351.5" >perf_evsel_..</text>
</g>
<g >
<title>perf_event_for_each_child (62 samples, 8.34%)</title><rect x="14.8" y="229" width="98.4" height="15.0" fill="rgb(220,83,46)" rx="2" ry="2" />
<text  x="17.76" y="239.5" >perf_event_..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.13%)</title><rect x="897.8" y="309" width="1.6" height="15.0" fill="rgb(242,94,1)" rx="2" ry="2" />
<text  x="900.78" y="319.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.13%)</title><rect x="899.4" y="277" width="1.6" height="15.0" fill="rgb(236,54,26)" rx="2" ry="2" />
<text  x="902.37" y="287.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.13%)</title><rect x="928.0" y="117" width="1.5" height="15.0" fill="rgb(235,138,5)" rx="2" ry="2" />
<text  x="930.95" y="127.5" ></text>
</g>
<g >
<title>get_signal (2 samples, 0.27%)</title><rect x="847.0" y="293" width="3.1" height="15.0" fill="rgb(207,42,5)" rx="2" ry="2" />
<text  x="849.96" y="303.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (1 samples, 0.13%)</title><rect x="915.2" y="277" width="1.6" height="15.0" fill="rgb(205,112,4)" rx="2" ry="2" />
<text  x="918.25" y="287.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (3 samples, 0.40%)</title><rect x="160.9" y="277" width="4.7" height="15.0" fill="rgb(225,26,50)" rx="2" ry="2" />
<text  x="163.87" y="287.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (62 samples, 8.34%)</title><rect x="14.8" y="357" width="98.4" height="15.0" fill="rgb(244,82,29)" rx="2" ry="2" />
<text  x="17.76" y="367.5" >perf_evsel_..</text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.13%)</title><rect x="912.1" y="149" width="1.6" height="15.0" fill="rgb(233,57,49)" rx="2" ry="2" />
<text  x="915.07" y="159.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (7 samples, 0.94%)</title><rect x="661.1" y="277" width="11.2" height="15.0" fill="rgb(221,111,52)" rx="2" ry="2" />
<text  x="664.14" y="287.5" ></text>
</g>
<g >
<title>__next_timer_interrupt (1 samples, 0.13%)</title><rect x="1172.5" y="245" width="1.6" height="15.0" fill="rgb(208,199,27)" rx="2" ry="2" />
<text  x="1175.53" y="255.5" ></text>
</g>
<g >
<title>cpu_startup_entry (7 samples, 0.94%)</title><rect x="1178.9" y="277" width="11.1" height="15.0" fill="rgb(211,118,11)" rx="2" ry="2" />
<text  x="1181.88" y="287.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (2 samples, 0.27%)</title><rect x="497.6" y="261" width="3.1" height="15.0" fill="rgb(232,111,31)" rx="2" ry="2" />
<text  x="500.56" y="271.5" ></text>
</g>
<g >
<title>do_idle (7 samples, 0.94%)</title><rect x="1178.9" y="261" width="11.1" height="15.0" fill="rgb(249,152,30)" rx="2" ry="2" />
<text  x="1181.88" y="271.5" ></text>
</g>
<g >
<title>import_iovec (1 samples, 0.13%)</title><rect x="913.7" y="261" width="1.5" height="15.0" fill="rgb(229,150,54)" rx="2" ry="2" />
<text  x="916.66" y="271.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.13%)</title><rect x="897.8" y="277" width="1.6" height="15.0" fill="rgb(219,194,8)" rx="2" ry="2" />
<text  x="900.78" y="287.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.13%)</title><rect x="802.5" y="325" width="1.6" height="15.0" fill="rgb(241,204,35)" rx="2" ry="2" />
<text  x="805.49" y="335.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (6 samples, 0.81%)</title><rect x="473.7" y="277" width="9.6" height="15.0" fill="rgb(254,69,27)" rx="2" ry="2" />
<text  x="476.74" y="287.5" ></text>
</g>
<g >
<title>NaClAvlTreeExtract (5 samples, 0.67%)</title><rect x="715.1" y="229" width="8.0" height="15.0" fill="rgb(234,83,8)" rx="2" ry="2" />
<text  x="718.14" y="239.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (3 samples, 0.40%)</title><rect x="842.2" y="341" width="4.8" height="15.0" fill="rgb(251,219,34)" rx="2" ry="2" />
<text  x="845.19" y="351.5" ></text>
</g>
<g >
<title>CompareAndSwap (3 samples, 0.40%)</title><rect x="156.1" y="309" width="4.8" height="15.0" fill="rgb(250,216,45)" rx="2" ry="2" />
<text  x="159.11" y="319.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (2 samples, 0.27%)</title><rect x="926.4" y="181" width="3.1" height="15.0" fill="rgb(241,27,13)" rx="2" ry="2" />
<text  x="929.37" y="191.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.13%)</title><rect x="897.8" y="213" width="1.6" height="15.0" fill="rgb(225,87,26)" rx="2" ry="2" />
<text  x="900.78" y="223.5" ></text>
</g>
<g >
<title>NaClLogGetVerbosity (5 samples, 0.67%)</title><rect x="699.3" y="293" width="7.9" height="15.0" fill="rgb(230,117,7)" rx="2" ry="2" />
<text  x="702.26" y="303.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.13%)</title><rect x="13.2" y="357" width="1.6" height="15.0" fill="rgb(226,225,5)" rx="2" ry="2" />
<text  x="16.18" y="367.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.13%)</title><rect x="130.7" y="341" width="1.6" height="15.0" fill="rgb(212,62,38)" rx="2" ry="2" />
<text  x="133.70" y="351.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeRemoveVal (1 samples, 0.13%)</title><rect x="823.1" y="341" width="1.6" height="15.0" fill="rgb(241,87,40)" rx="2" ry="2" />
<text  x="826.14" y="351.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.13%)</title><rect x="483.3" y="293" width="1.6" height="15.0" fill="rgb(243,221,33)" rx="2" ry="2" />
<text  x="486.27" y="303.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (1 samples, 0.13%)</title><rect x="13.2" y="213" width="1.6" height="15.0" fill="rgb(252,218,49)" rx="2" ry="2" />
<text  x="16.18" y="223.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.13%)</title><rect x="908.9" y="261" width="1.6" height="15.0" fill="rgb(249,227,14)" rx="2" ry="2" />
<text  x="911.90" y="271.5" ></text>
</g>
<g >
<title>nmi_cpu_backtrace (4 samples, 0.54%)</title><rect x="102.1" y="37" width="6.4" height="15.0" fill="rgb(217,34,17)" rx="2" ry="2" />
<text  x="105.11" y="47.5" ></text>
</g>
<g >
<title>nmi_handle (1 samples, 0.13%)</title><rect x="110.1" y="37" width="1.5" height="15.0" fill="rgb(208,152,1)" rx="2" ry="2" />
<text  x="113.05" y="47.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (2 samples, 0.27%)</title><rect x="1172.5" y="261" width="3.2" height="15.0" fill="rgb(207,21,7)" rx="2" ry="2" />
<text  x="1175.53" y="271.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeRemoveInterval (10 samples, 1.35%)</title><rect x="710.4" y="277" width="15.9" height="15.0" fill="rgb(227,140,24)" rx="2" ry="2" />
<text  x="713.38" y="287.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (62 samples, 8.34%)</title><rect x="14.8" y="53" width="98.4" height="15.0" fill="rgb(248,179,10)" rx="2" ry="2" />
<text  x="17.76" y="63.5" >__intel_pmu..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (27 samples, 3.63%)</title><rect x="426.1" y="181" width="42.9" height="15.0" fill="rgb(244,42,1)" rx="2" ry="2" />
<text  x="429.10" y="191.5" >__me..</text>
</g>
<g >
<title>__vfs_write (1 samples, 0.13%)</title><rect x="13.2" y="261" width="1.6" height="15.0" fill="rgb(224,40,2)" rx="2" ry="2" />
<text  x="16.18" y="271.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.13%)</title><rect x="902.5" y="277" width="1.6" height="15.0" fill="rgb(250,59,54)" rx="2" ry="2" />
<text  x="905.54" y="287.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (2 samples, 0.27%)</title><rect x="677.0" y="277" width="3.2" height="15.0" fill="rgb(236,24,18)" rx="2" ry="2" />
<text  x="680.03" y="287.5" ></text>
</g>
<g >
<title>__switch_to_asm (1 samples, 0.13%)</title><rect x="896.2" y="357" width="1.6" height="15.0" fill="rgb(219,214,47)" rx="2" ry="2" />
<text  x="899.19" y="367.5" ></text>
</g>
<g >
<title>do_exit (2 samples, 0.27%)</title><rect x="847.0" y="261" width="3.1" height="15.0" fill="rgb(231,116,4)" rx="2" ry="2" />
<text  x="849.96" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.13%)</title><rect x="13.2" y="325" width="1.6" height="15.0" fill="rgb(240,136,32)" rx="2" ry="2" />
<text  x="16.18" y="335.5" ></text>
</g>
<g >
<title>event_function (62 samples, 8.34%)</title><rect x="14.8" y="133" width="98.4" height="15.0" fill="rgb(249,62,1)" rx="2" ry="2" />
<text  x="17.76" y="143.5" >event_funct..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.40%)</title><rect x="680.2" y="261" width="4.8" height="15.0" fill="rgb(219,77,50)" rx="2" ry="2" />
<text  x="683.20" y="271.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.13%)</title><rect x="1158.2" y="245" width="1.6" height="15.0" fill="rgb(207,105,11)" rx="2" ry="2" />
<text  x="1161.24" y="255.5" ></text>
</g>
<g >
<title>cpu_startup_entry (163 samples, 21.94%)</title><rect x="920.0" y="325" width="258.9" height="15.0" fill="rgb(216,121,2)" rx="2" ry="2" />
<text  x="923.01" y="335.5" >cpu_startup_entry</text>
</g>
<g >
<title>NaClFastMutexUnlock (3 samples, 0.40%)</title><rect x="667.5" y="261" width="4.8" height="15.0" fill="rgb(215,111,3)" rx="2" ry="2" />
<text  x="670.50" y="271.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (46 samples, 6.19%)</title><rect x="588.1" y="213" width="73.0" height="15.0" fill="rgb(224,229,51)" rx="2" ry="2" />
<text  x="591.09" y="223.5" >rustposi..</text>
</g>
<g >
<title>nmi_cpu_backtrace_handler (1 samples, 0.13%)</title><rect x="108.5" y="37" width="1.6" height="15.0" fill="rgb(220,164,29)" rx="2" ry="2" />
<text  x="111.47" y="47.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.13%)</title><rect x="897.8" y="325" width="1.6" height="15.0" fill="rgb(250,49,39)" rx="2" ry="2" />
<text  x="900.78" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.13%)</title><rect x="13.2" y="85" width="1.6" height="15.0" fill="rgb(227,24,42)" rx="2" ry="2" />
<text  x="16.18" y="95.5" ></text>
</g>
<g >
<title>call_cpuidle (150 samples, 20.19%)</title><rect x="921.6" y="293" width="238.2" height="15.0" fill="rgb(217,55,29)" rx="2" ry="2" />
<text  x="924.60" y="303.5" >call_cpuidle</text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.13%)</title><rect x="1156.6" y="149" width="1.6" height="15.0" fill="rgb(218,9,11)" rx="2" ry="2" />
<text  x="1159.65" y="159.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.13%)</title><rect x="1172.5" y="229" width="1.6" height="15.0" fill="rgb(244,25,25)" rx="2" ry="2" />
<text  x="1175.53" y="239.5" ></text>
</g>
<g >
<title>[sel_ldr] (398 samples, 53.57%)</title><rect x="146.6" y="357" width="632.1" height="15.0" fill="rgb(209,138,35)" rx="2" ry="2" />
<text  x="149.58" y="367.5" >[sel_ldr]</text>
</g>
<g >
<title>perf_ioctl (62 samples, 8.34%)</title><rect x="14.8" y="245" width="98.4" height="15.0" fill="rgb(247,219,45)" rx="2" ry="2" />
<text  x="17.76" y="255.5" >perf_ioctl</text>
</g>
<g >
<title>do_idle (163 samples, 21.94%)</title><rect x="920.0" y="309" width="258.9" height="15.0" fill="rgb(251,7,45)" rx="2" ry="2" />
<text  x="923.01" y="319.5" >do_idle</text>
</g>
<g >
<title>deactivate_task (1 samples, 0.13%)</title><rect x="912.1" y="213" width="1.6" height="15.0" fill="rgb(238,128,13)" rx="2" ry="2" />
<text  x="915.07" y="223.5" ></text>
</g>
<g >
<title>set_next_entity (2 samples, 0.27%)</title><rect x="1167.8" y="245" width="3.1" height="15.0" fill="rgb(237,34,12)" rx="2" ry="2" />
<text  x="1170.77" y="255.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (10 samples, 1.35%)</title><rect x="826.3" y="341" width="15.9" height="15.0" fill="rgb(241,136,48)" rx="2" ry="2" />
<text  x="829.31" y="351.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.40%)</title><rect x="530.9" y="213" width="4.8" height="15.0" fill="rgb(232,194,1)" rx="2" ry="2" />
<text  x="533.92" y="223.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (1 samples, 0.13%)</title><rect x="913.7" y="245" width="1.5" height="15.0" fill="rgb(213,60,20)" rx="2" ry="2" />
<text  x="916.66" y="255.5" ></text>
</g>
<g >
<title>lind_read (188 samples, 25.30%)</title><rect x="170.4" y="261" width="298.6" height="15.0" fill="rgb(244,172,23)" rx="2" ry="2" />
<text  x="173.40" y="271.5" >lind_read</text>
</g>
<g >
<title>sync_regs (1 samples, 0.13%)</title><rect x="820.0" y="341" width="1.5" height="15.0" fill="rgb(249,175,24)" rx="2" ry="2" />
<text  x="822.96" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.40%)</title><rect x="583.3" y="213" width="4.8" height="15.0" fill="rgb(235,123,14)" rx="2" ry="2" />
<text  x="586.32" y="223.5" ></text>
</g>
<g >
<title>SYSC_sendto (1 samples, 0.13%)</title><rect x="915.2" y="309" width="1.6" height="15.0" fill="rgb(221,94,17)" rx="2" ry="2" />
<text  x="918.25" y="319.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (8 samples, 1.08%)</title><rect x="648.4" y="197" width="12.7" height="15.0" fill="rgb(225,58,7)" rx="2" ry="2" />
<text  x="651.44" y="207.5" ></text>
</g>
<g >
<title>deactivate_task (2 samples, 0.27%)</title><rect x="905.7" y="245" width="3.2" height="15.0" fill="rgb(220,52,7)" rx="2" ry="2" />
<text  x="908.72" y="255.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (3 samples, 0.40%)</title><rect x="165.6" y="293" width="4.8" height="15.0" fill="rgb(224,185,23)" rx="2" ry="2" />
<text  x="168.64" y="303.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.27%)</title><rect x="847.0" y="133" width="3.1" height="15.0" fill="rgb(212,22,22)" rx="2" ry="2" />
<text  x="849.96" y="143.5" ></text>
</g>
<g >
<title>intel_idle (7 samples, 0.94%)</title><rect x="1178.9" y="197" width="11.1" height="15.0" fill="rgb(246,128,7)" rx="2" ry="2" />
<text  x="1181.88" y="207.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.13%)</title><rect x="1177.3" y="261" width="1.6" height="15.0" fill="rgb(239,223,40)" rx="2" ry="2" />
<text  x="1180.29" y="271.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeFactory (1 samples, 0.13%)</title><rect x="770.7" y="277" width="1.6" height="15.0" fill="rgb(252,160,24)" rx="2" ry="2" />
<text  x="773.73" y="287.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (3 samples, 0.40%)</title><rect x="165.6" y="261" width="4.8" height="15.0" fill="rgb(239,224,47)" rx="2" ry="2" />
<text  x="168.64" y="271.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (188 samples, 25.30%)</title><rect x="170.4" y="213" width="298.6" height="15.0" fill="rgb(223,65,53)" rx="2" ry="2" />
<text  x="173.40" y="223.5" >rustposix::interface::pipe::EmulatedPipe..</text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (3 samples, 0.40%)</title><rect x="165.6" y="325" width="4.8" height="15.0" fill="rgb(225,148,6)" rx="2" ry="2" />
<text  x="168.64" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.27%)</title><rect x="847.0" y="341" width="3.1" height="15.0" fill="rgb(208,183,52)" rx="2" ry="2" />
<text  x="849.96" y="351.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.13%)</title><rect x="912.1" y="165" width="1.6" height="15.0" fill="rgb(243,178,53)" rx="2" ry="2" />
<text  x="915.07" y="175.5" ></text>
</g>
<g >
<title>NaClHostDescRead (188 samples, 25.30%)</title><rect x="170.4" y="277" width="298.6" height="15.0" fill="rgb(237,169,36)" rx="2" ry="2" />
<text  x="173.40" y="287.5" >NaClHostDescRead</text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.13%)</title><rect x="897.8" y="245" width="1.6" height="15.0" fill="rgb(209,83,34)" rx="2" ry="2" />
<text  x="900.78" y="255.5" ></text>
</g>
<g >
<title>generic_exec_single (62 samples, 8.34%)</title><rect x="14.8" y="165" width="98.4" height="15.0" fill="rgb(248,68,29)" rx="2" ry="2" />
<text  x="17.76" y="175.5" >generic_exe..</text>
</g>
<g >
<title>do_group_exit (2 samples, 0.27%)</title><rect x="847.0" y="277" width="3.1" height="15.0" fill="rgb(242,184,9)" rx="2" ry="2" />
<text  x="849.96" y="287.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.13%)</title><rect x="672.3" y="293" width="1.5" height="15.0" fill="rgb(210,145,44)" rx="2" ry="2" />
<text  x="675.26" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.27%)</title><rect x="847.0" y="357" width="3.1" height="15.0" fill="rgb(206,198,28)" rx="2" ry="2" />
<text  x="849.96" y="367.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.13%)</title><rect x="1156.6" y="165" width="1.6" height="15.0" fill="rgb(222,101,41)" rx="2" ry="2" />
<text  x="1159.65" y="175.5" ></text>
</g>
<g >
<title>NaClGetDescMu (8 samples, 1.08%)</title><rect x="685.0" y="277" width="12.7" height="15.0" fill="rgb(218,120,12)" rx="2" ry="2" />
<text  x="687.97" y="287.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (5 samples, 0.67%)</title><rect x="475.3" y="261" width="8.0" height="15.0" fill="rgb(219,220,26)" rx="2" ry="2" />
<text  x="478.33" y="271.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (3 samples, 0.40%)</title><rect x="735.8" y="261" width="4.8" height="15.0" fill="rgb(230,138,19)" rx="2" ry="2" />
<text  x="738.79" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.27%)</title><rect x="926.4" y="197" width="3.1" height="15.0" fill="rgb(216,123,14)" rx="2" ry="2" />
<text  x="929.37" y="207.5" ></text>
</g>
<g >
<title>CheckMemoryAccess (1 samples, 0.13%)</title><rect x="165.6" y="229" width="1.6" height="15.0" fill="rgb(208,154,44)" rx="2" ry="2" />
<text  x="168.64" y="239.5" ></text>
</g>
<g >
<title>NaClMutexLock (3 samples, 0.40%)</title><rect x="160.9" y="293" width="4.7" height="15.0" fill="rgb(208,123,47)" rx="2" ry="2" />
<text  x="163.87" y="303.5" ></text>
</g>
<g >
<title>ret_from_fork (2 samples, 0.27%)</title><rect x="916.8" y="357" width="3.2" height="15.0" fill="rgb(210,70,15)" rx="2" ry="2" />
<text  x="919.84" y="367.5" ></text>
</g>
<g >
<title>NaClXMutexLock (1 samples, 0.13%)</title><rect x="772.3" y="277" width="1.6" height="15.0" fill="rgb(247,1,22)" rx="2" ry="2" />
<text  x="775.31" y="287.5" ></text>
</g>
<g >
<title>exit_mmap (2 samples, 0.27%)</title><rect x="847.0" y="229" width="3.1" height="15.0" fill="rgb(237,77,25)" rx="2" ry="2" />
<text  x="849.96" y="239.5" ></text>
</g>
<g >
<title>_perf_event_enable (62 samples, 8.34%)</title><rect x="14.8" y="213" width="98.4" height="15.0" fill="rgb(211,219,30)" rx="2" ry="2" />
<text  x="17.76" y="223.5" >_perf_event..</text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.13%)</title><rect x="848.5" y="85" width="1.6" height="15.0" fill="rgb(227,22,3)" rx="2" ry="2" />
<text  x="851.55" y="95.5" ></text>
</g>
<g >
<title>sel_ldr (464 samples, 62.45%)</title><rect x="113.2" y="373" width="736.9" height="15.0" fill="rgb(244,63,31)" rx="2" ry="2" />
<text  x="116.23" y="383.5" >sel_ldr</text>
</g>
<g >
<title>dispatcher (2 samples, 0.27%)</title><rect x="132.3" y="341" width="3.2" height="15.0" fill="rgb(235,152,34)" rx="2" ry="2" />
<text  x="135.29" y="351.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.13%)</title><rect x="905.7" y="181" width="1.6" height="15.0" fill="rgb(232,194,0)" rx="2" ry="2" />
<text  x="908.72" y="191.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.13%)</title><rect x="1156.6" y="229" width="1.6" height="15.0" fill="rgb(250,105,33)" rx="2" ry="2" />
<text  x="1159.65" y="239.5" ></text>
</g>
<g >
<title>sys_nanosleep (4 samples, 0.54%)</title><rect x="904.1" y="325" width="6.4" height="15.0" fill="rgb(245,190,48)" rx="2" ry="2" />
<text  x="907.13" y="335.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.13%)</title><rect x="111.6" y="37" width="1.6" height="15.0" fill="rgb(237,55,21)" rx="2" ry="2" />
<text  x="114.64" y="47.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.13%)</title><rect x="13.2" y="277" width="1.6" height="15.0" fill="rgb(250,135,47)" rx="2" ry="2" />
<text  x="16.18" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.13%)</title><rect x="13.2" y="309" width="1.6" height="15.0" fill="rgb(213,77,40)" rx="2" ry="2" />
<text  x="16.18" y="319.5" ></text>
</g>
<g >
<title>schedule_idle (4 samples, 0.54%)</title><rect x="1166.2" y="293" width="6.3" height="15.0" fill="rgb(212,197,29)" rx="2" ry="2" />
<text  x="1169.18" y="303.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (2 samples, 0.27%)</title><rect x="702.4" y="261" width="3.2" height="15.0" fill="rgb(251,69,41)" rx="2" ry="2" />
<text  x="705.44" y="271.5" ></text>
</g>
<g >
<title>NaClRefCountRef (1 samples, 0.13%)</title><rect x="469.0" y="245" width="1.6" height="15.0" fill="rgb(211,73,28)" rx="2" ry="2" />
<text  x="471.98" y="255.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.13%)</title><rect x="897.8" y="197" width="1.6" height="15.0" fill="rgb(246,85,15)" rx="2" ry="2" />
<text  x="900.78" y="207.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (2 samples, 0.27%)</title><rect x="526.2" y="229" width="3.1" height="15.0" fill="rgb(226,19,5)" rx="2" ry="2" />
<text  x="529.15" y="239.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (1 samples, 0.13%)</title><rect x="118.0" y="341" width="1.6" height="15.0" fill="rgb(234,138,11)" rx="2" ry="2" />
<text  x="120.99" y="351.5" ></text>
</g>
<g >
<title>cpuidle_select (4 samples, 0.54%)</title><rect x="1159.8" y="293" width="6.4" height="15.0" fill="rgb(240,227,46)" rx="2" ry="2" />
<text  x="1162.83" y="303.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.27%)</title><rect x="810.4" y="229" width="3.2" height="15.0" fill="rgb(254,223,24)" rx="2" ry="2" />
<text  x="813.43" y="239.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.13%)</title><rect x="902.5" y="261" width="1.6" height="15.0" fill="rgb(250,90,38)" rx="2" ry="2" />
<text  x="905.54" y="271.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.27%)</title><rect x="847.0" y="181" width="3.1" height="15.0" fill="rgb(227,101,6)" rx="2" ry="2" />
<text  x="849.96" y="191.5" ></text>
</g>
<g >
<title>do_nanosleep (3 samples, 0.40%)</title><rect x="905.7" y="293" width="4.8" height="15.0" fill="rgb(225,188,43)" rx="2" ry="2" />
<text  x="908.72" y="303.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.13%)</title><rect x="1156.6" y="213" width="1.6" height="15.0" fill="rgb(247,166,49)" rx="2" ry="2" />
<text  x="1159.65" y="223.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.13%)</title><rect x="135.5" y="341" width="1.6" height="15.0" fill="rgb(250,60,10)" rx="2" ry="2" />
<text  x="138.46" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.13%)</title><rect x="772.3" y="245" width="1.6" height="15.0" fill="rgb(222,21,48)" rx="2" ry="2" />
<text  x="775.31" y="255.5" ></text>
</g>
<g >
<title>NaClLogLock (1 samples, 0.13%)</title><rect x="699.3" y="277" width="1.5" height="15.0" fill="rgb(209,105,26)" rx="2" ry="2" />
<text  x="702.26" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.13%)</title><rect x="813.6" y="229" width="1.6" height="15.0" fill="rgb(239,105,17)" rx="2" ry="2" />
<text  x="816.61" y="239.5" ></text>
</g>
<g >
<title>event_function_call (62 samples, 8.34%)</title><rect x="14.8" y="197" width="98.4" height="15.0" fill="rgb(235,139,3)" rx="2" ry="2" />
<text  x="17.76" y="207.5" >event_funct..</text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.13%)</title><rect x="848.5" y="101" width="1.6" height="15.0" fill="rgb(243,107,16)" rx="2" ry="2" />
<text  x="851.55" y="111.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeExtract (1 samples, 0.13%)</title><rect x="821.5" y="341" width="1.6" height="15.0" fill="rgb(237,31,33)" rx="2" ry="2" />
<text  x="824.55" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (62 samples, 8.34%)</title><rect x="14.8" y="293" width="98.4" height="15.0" fill="rgb(222,70,40)" rx="2" ry="2" />
<text  x="17.76" y="303.5" >do_syscall_64</text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (4 samples, 0.54%)</title><rect x="557.9" y="213" width="6.4" height="15.0" fill="rgb(226,154,2)" rx="2" ry="2" />
<text  x="560.91" y="223.5" ></text>
</g>
<g >
<title>NaClValidateCode (3 samples, 0.40%)</title><rect x="165.6" y="277" width="4.8" height="15.0" fill="rgb(230,181,15)" rx="2" ry="2" />
<text  x="168.64" y="287.5" ></text>
</g>
<g >
<title>__update_load_avg_se.isra.38 (1 samples, 0.13%)</title><rect x="1167.8" y="229" width="1.6" height="15.0" fill="rgb(205,21,53)" rx="2" ry="2" />
<text  x="1170.77" y="239.5" ></text>
</g>
<g >
<title>NaClMutexLock (1 samples, 0.13%)</title><rect x="699.3" y="245" width="1.5" height="15.0" fill="rgb(246,192,34)" rx="2" ry="2" />
<text  x="702.26" y="255.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeInit (9 samples, 1.21%)</title><rect x="750.1" y="245" width="14.3" height="15.0" fill="rgb(212,216,14)" rx="2" ry="2" />
<text  x="753.08" y="255.5" ></text>
</g>
<g >
<title>native_write_cr2 (2 samples, 0.27%)</title><rect x="25.9" y="37" width="3.2" height="15.0" fill="rgb(229,49,15)" rx="2" ry="2" />
<text  x="28.88" y="47.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (11 samples, 1.48%)</title><rect x="564.3" y="213" width="17.4" height="15.0" fill="rgb(213,98,17)" rx="2" ry="2" />
<text  x="567.27" y="223.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeRemoveVal (10 samples, 1.35%)</title><rect x="710.4" y="261" width="15.9" height="15.0" fill="rgb(241,1,49)" rx="2" ry="2" />
<text  x="713.38" y="271.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (107 samples, 14.40%)</title><rect x="491.2" y="293" width="169.9" height="15.0" fill="rgb(239,56,19)" rx="2" ry="2" />
<text  x="494.21" y="303.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>intel_pmu_enable_all (62 samples, 8.34%)</title><rect x="14.8" y="69" width="98.4" height="15.0" fill="rgb(241,24,22)" rx="2" ry="2" />
<text  x="17.76" y="79.5" >intel_pmu_e..</text>
</g>
<g >
<title>NaClCopyTakeLock (3 samples, 0.40%)</title><rect x="160.9" y="325" width="4.7" height="15.0" fill="rgb(251,139,33)" rx="2" ry="2" />
<text  x="163.87" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (7 samples, 0.94%)</title><rect x="1178.9" y="325" width="11.1" height="15.0" fill="rgb(236,114,23)" rx="2" ry="2" />
<text  x="1181.88" y="335.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (5 samples, 0.67%)</title><rect x="137.1" y="341" width="7.9" height="15.0" fill="rgb(221,82,47)" rx="2" ry="2" />
<text  x="140.05" y="351.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (3 samples, 0.40%)</title><rect x="773.9" y="277" width="4.8" height="15.0" fill="rgb(226,34,11)" rx="2" ry="2" />
<text  x="776.90" y="287.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.13%)</title><rect x="913.7" y="309" width="1.5" height="15.0" fill="rgb(212,106,53)" rx="2" ry="2" />
<text  x="916.66" y="319.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (4 samples, 0.54%)</title><rect x="476.9" y="245" width="6.4" height="15.0" fill="rgb(211,53,29)" rx="2" ry="2" />
<text  x="479.92" y="255.5" ></text>
</g>
<g >
<title>secondary_startup_64 (170 samples, 22.88%)</title><rect x="920.0" y="357" width="270.0" height="15.0" fill="rgb(226,48,48)" rx="2" ry="2" />
<text  x="923.01" y="367.5" >secondary_startup_64</text>
</g>
<g >
<title>worker_thread (2 samples, 0.27%)</title><rect x="916.8" y="325" width="3.2" height="15.0" fill="rgb(211,97,14)" rx="2" ry="2" />
<text  x="919.84" y="335.5" ></text>
</g>
<g >
<title>__tick_nohz_idle_enter (3 samples, 0.40%)</title><rect x="1172.5" y="277" width="4.8" height="15.0" fill="rgb(223,20,4)" rx="2" ry="2" />
<text  x="1175.53" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (5 samples, 0.67%)</title><rect x="807.3" y="245" width="7.9" height="15.0" fill="rgb(247,44,27)" rx="2" ry="2" />
<text  x="810.25" y="255.5" ></text>
</g>
<g >
<title>native_sched_clock (6 samples, 0.81%)</title><rect x="16.4" y="37" width="9.5" height="15.0" fill="rgb(253,90,45)" rx="2" ry="2" />
<text  x="19.35" y="47.5" ></text>
</g>
<g >
<title>call_cpuidle (7 samples, 0.94%)</title><rect x="1178.9" y="245" width="11.1" height="15.0" fill="rgb(234,100,50)" rx="2" ry="2" />
<text  x="1181.88" y="255.5" ></text>
</g>
<g >
<title>menu_select (4 samples, 0.54%)</title><rect x="1159.8" y="277" width="6.4" height="15.0" fill="rgb(215,34,21)" rx="2" ry="2" />
<text  x="1162.83" y="287.5" ></text>
</g>
<g >
<title>start_kernel (7 samples, 0.94%)</title><rect x="1178.9" y="309" width="11.1" height="15.0" fill="rgb(224,170,0)" rx="2" ry="2" />
<text  x="1181.88" y="319.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.13%)</title><rect x="897.8" y="181" width="1.6" height="15.0" fill="rgb(214,163,8)" rx="2" ry="2" />
<text  x="900.78" y="191.5" ></text>
</g>
<g >
<title>do_futex (3 samples, 0.40%)</title><rect x="899.4" y="309" width="4.7" height="15.0" fill="rgb(250,140,42)" rx="2" ry="2" />
<text  x="902.37" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.13%)</title><rect x="1177.3" y="293" width="1.6" height="15.0" fill="rgb(206,205,51)" rx="2" ry="2" />
<text  x="1180.29" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3 samples, 0.40%)</title><rect x="926.4" y="213" width="4.7" height="15.0" fill="rgb(214,115,49)" rx="2" ry="2" />
<text  x="929.37" y="223.5" ></text>
</g>
<g >
<title>native_irq_return_iret (2 samples, 0.27%)</title><rect x="804.1" y="341" width="3.2" height="15.0" fill="rgb(236,9,24)" rx="2" ry="2" />
<text  x="807.08" y="351.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeFactory (15 samples, 2.02%)</title><rect x="746.9" y="261" width="23.8" height="15.0" fill="rgb(240,179,41)" rx="2" ry="2" />
<text  x="749.90" y="271.5" >N..</text>
</g>
<g >
<title>x86_64_start_kernel (7 samples, 0.94%)</title><rect x="1178.9" y="341" width="11.1" height="15.0" fill="rgb(230,229,27)" rx="2" ry="2" />
<text  x="1181.88" y="351.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 2.15%)</title><rect x="821.5" y="357" width="25.5" height="15.0" fill="rgb(247,30,29)" rx="2" ry="2" />
<text  x="824.55" y="367.5" >[..</text>
</g>
<g >
<title>[anon] (19 samples, 2.56%)</title><rect x="116.4" y="357" width="30.2" height="15.0" fill="rgb(230,42,39)" rx="2" ry="2" />
<text  x="119.41" y="367.5" >[a..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.13%)</title><rect x="897.8" y="341" width="1.6" height="15.0" fill="rgb(218,226,34)" rx="2" ry="2" />
<text  x="900.78" y="351.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (1 samples, 0.13%)</title><rect x="913.7" y="277" width="1.5" height="15.0" fill="rgb(207,202,5)" rx="2" ry="2" />
<text  x="916.66" y="287.5" ></text>
</g>
<g >
<title>update_curr (2 samples, 0.27%)</title><rect x="905.7" y="197" width="3.2" height="15.0" fill="rgb(231,24,9)" rx="2" ry="2" />
<text  x="908.72" y="207.5" ></text>
</g>
<g >
<title>NaClXMutexLock (1 samples, 0.13%)</title><rect x="699.3" y="261" width="1.5" height="15.0" fill="rgb(217,185,36)" rx="2" ry="2" />
<text  x="702.26" y="271.5" ></text>
</g>
<g >
<title>NaClAvlTreeExtract (1 samples, 0.13%)</title><rect x="721.5" y="213" width="1.6" height="15.0" fill="rgb(241,49,53)" rx="2" ry="2" />
<text  x="724.49" y="223.5" ></text>
</g>
<g >
<title>all (743 samples, 100%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(226,57,4)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.13%)</title><rect x="815.2" y="261" width="1.6" height="15.0" fill="rgb(229,54,16)" rx="2" ry="2" />
<text  x="818.20" y="271.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.13%)</title><rect x="1156.6" y="197" width="1.6" height="15.0" fill="rgb(223,21,14)" rx="2" ry="2" />
<text  x="1159.65" y="207.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.13%)</title><rect x="13.2" y="117" width="1.6" height="15.0" fill="rgb(223,193,21)" rx="2" ry="2" />
<text  x="16.18" y="127.5" ></text>
</g>
<g >
<title>NaClVmIoWillStart (24 samples, 3.23%)</title><rect x="740.6" y="293" width="38.1" height="15.0" fill="rgb(229,208,33)" rx="2" ry="2" />
<text  x="743.55" y="303.5" >NaC..</text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.27%)</title><rect x="905.7" y="213" width="3.2" height="15.0" fill="rgb(212,185,14)" rx="2" ry="2" />
<text  x="908.72" y="223.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.13%)</title><rect x="913.7" y="293" width="1.5" height="15.0" fill="rgb(216,119,35)" rx="2" ry="2" />
<text  x="916.66" y="303.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.13%)</title><rect x="818.4" y="293" width="1.6" height="15.0" fill="rgb(209,107,42)" rx="2" ry="2" />
<text  x="821.37" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.13%)</title><rect x="1174.1" y="245" width="1.6" height="15.0" fill="rgb(210,137,6)" rx="2" ry="2" />
<text  x="1177.12" y="255.5" ></text>
</g>
<g >
<title>perf (65 samples, 8.75%)</title><rect x="10.0" y="373" width="103.2" height="15.0" fill="rgb(209,117,24)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >perf</text>
</g>
<g >
<title>NaClGetDescMu (1 samples, 0.13%)</title><rect x="469.0" y="277" width="1.6" height="15.0" fill="rgb(245,225,44)" rx="2" ry="2" />
<text  x="471.98" y="287.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (188 samples, 25.30%)</title><rect x="170.4" y="229" width="298.6" height="15.0" fill="rgb(251,28,27)" rx="2" ry="2" />
<text  x="173.40" y="239.5" >rustposix::safeposix::syscalls::fs_calls..</text>
</g>
<g >
<title>alloc_pages_vma (5 samples, 0.67%)</title><rect x="807.3" y="261" width="7.9" height="15.0" fill="rgb(246,48,27)" rx="2" ry="2" />
<text  x="810.25" y="271.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.13%)</title><rect x="697.7" y="293" width="1.6" height="15.0" fill="rgb(244,16,1)" rx="2" ry="2" />
<text  x="700.67" y="303.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.40%)</title><rect x="905.7" y="277" width="4.8" height="15.0" fill="rgb(235,179,53)" rx="2" ry="2" />
<text  x="908.72" y="287.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (3 samples, 0.40%)</title><rect x="165.6" y="309" width="4.8" height="15.0" fill="rgb(251,218,46)" rx="2" ry="2" />
<text  x="168.64" y="319.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (4 samples, 0.54%)</title><rect x="154.5" y="325" width="6.4" height="15.0" fill="rgb(225,125,53)" rx="2" ry="2" />
<text  x="157.52" y="335.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (4 samples, 0.54%)</title><rect x="924.8" y="245" width="6.3" height="15.0" fill="rgb(242,20,17)" rx="2" ry="2" />
<text  x="927.78" y="255.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.13%)</title><rect x="913.7" y="229" width="1.5" height="15.0" fill="rgb(247,224,36)" rx="2" ry="2" />
<text  x="916.66" y="239.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (3 samples, 0.40%)</title><rect x="1172.5" y="293" width="4.8" height="15.0" fill="rgb(220,162,48)" rx="2" ry="2" />
<text  x="1175.53" y="303.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (1 samples, 0.13%)</title><rect x="1156.6" y="133" width="1.6" height="15.0" fill="rgb(246,8,10)" rx="2" ry="2" />
<text  x="1159.65" y="143.5" ></text>
</g>
<g >
<title>NaClDescRef (7 samples, 0.94%)</title><rect x="686.6" y="261" width="11.1" height="15.0" fill="rgb(238,48,26)" rx="2" ry="2" />
<text  x="689.55" y="271.5" ></text>
</g>
<g >
<title>NaClSysWrite (184 samples, 24.76%)</title><rect x="486.4" y="309" width="292.3" height="15.0" fill="rgb(217,155,8)" rx="2" ry="2" />
<text  x="489.45" y="319.5" >NaClSysWrite</text>
</g>
<g >
<title>handle_mm_fault (6 samples, 0.81%)</title><rect x="807.3" y="293" width="9.5" height="15.0" fill="rgb(223,48,31)" rx="2" ry="2" />
<text  x="810.25" y="303.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (1 samples, 0.13%)</title><rect x="168.8" y="229" width="1.6" height="15.0" fill="rgb(240,80,20)" rx="2" ry="2" />
<text  x="171.82" y="239.5" ></text>
</g>
<g >
<title>NaClGetDesc (15 samples, 2.02%)</title><rect x="673.8" y="293" width="23.9" height="15.0" fill="rgb(242,221,24)" rx="2" ry="2" />
<text  x="676.85" y="303.5" >N..</text>
</g>
<g >
<title>rest_init (7 samples, 0.94%)</title><rect x="1178.9" y="293" width="11.1" height="15.0" fill="rgb(225,129,40)" rx="2" ry="2" />
<text  x="1181.88" y="303.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.13%)</title><rect x="1175.7" y="229" width="1.6" height="15.0" fill="rgb(216,54,11)" rx="2" ry="2" />
<text  x="1178.71" y="239.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.13%)</title><rect x="910.5" y="293" width="1.6" height="15.0" fill="rgb(214,115,3)" rx="2" ry="2" />
<text  x="913.48" y="303.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.27%)</title><rect x="847.0" y="149" width="3.1" height="15.0" fill="rgb(209,172,21)" rx="2" ry="2" />
<text  x="849.96" y="159.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (58 samples, 7.81%)</title><rect x="376.9" y="197" width="92.1" height="15.0" fill="rgb(229,4,28)" rx="2" ry="2" />
<text  x="379.86" y="207.5" >ringbuf::co..</text>
</g>
<g >
<title>dispatcher (98 samples, 13.19%)</title><rect x="505.5" y="245" width="155.6" height="15.0" fill="rgb(252,25,32)" rx="2" ry="2" />
<text  x="508.50" y="255.5" >dispatcher</text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.13%)</title><rect x="1177.3" y="277" width="1.6" height="15.0" fill="rgb(239,179,28)" rx="2" ry="2" />
<text  x="1180.29" y="287.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (1 samples, 0.13%)</title><rect x="121.2" y="341" width="1.6" height="15.0" fill="rgb(222,179,34)" rx="2" ry="2" />
<text  x="124.17" y="351.5" ></text>
</g>
<g >
<title>futex_wake (2 samples, 0.27%)</title><rect x="901.0" y="293" width="3.1" height="15.0" fill="rgb(224,52,34)" rx="2" ry="2" />
<text  x="903.96" y="303.5" ></text>
</g>
<g >
<title>[unknown]  (27 samples, 3.63%)</title><rect x="778.7" y="357" width="42.8" height="15.0" fill="rgb(246,162,31)" rx="2" ry="2" />
<text  x="781.67" y="367.5" >[unk..</text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.13%)</title><rect x="899.4" y="245" width="1.6" height="15.0" fill="rgb(235,75,25)" rx="2" ry="2" />
<text  x="902.37" y="255.5" ></text>
</g>
<g >
<title>native_write_msr (46 samples, 6.19%)</title><rect x="29.1" y="37" width="73.0" height="15.0" fill="rgb(217,144,39)" rx="2" ry="2" />
<text  x="32.06" y="47.5" >native_w..</text>
</g>
<g >
<title>__handle_mm_fault (6 samples, 0.81%)</title><rect x="807.3" y="277" width="9.5" height="15.0" fill="rgb(243,135,39)" rx="2" ry="2" />
<text  x="810.25" y="287.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.13%)</title><rect x="928.0" y="133" width="1.5" height="15.0" fill="rgb(223,19,25)" rx="2" ry="2" />
<text  x="930.95" y="143.5" ></text>
</g>
<g >
<title>NaClVmIoHasEnded (20 samples, 2.69%)</title><rect x="708.8" y="293" width="31.8" height="15.0" fill="rgb(238,142,22)" rx="2" ry="2" />
<text  x="711.79" y="303.5" >Na..</text>
</g>
<g >
<title>read_tsc (1 samples, 0.13%)</title><rect x="929.5" y="197" width="1.6" height="15.0" fill="rgb(253,69,18)" rx="2" ry="2" />
<text  x="932.54" y="207.5" ></text>
</g>
<g >
<title>calc_load_nohz_stop (1 samples, 0.13%)</title><rect x="920.0" y="293" width="1.6" height="15.0" fill="rgb(218,132,2)" rx="2" ry="2" />
<text  x="923.01" y="303.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (188 samples, 25.30%)</title><rect x="170.4" y="293" width="298.6" height="15.0" fill="rgb(209,122,9)" rx="2" ry="2" />
<text  x="173.40" y="303.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>activate_task (1 samples, 0.13%)</title><rect x="897.8" y="229" width="1.6" height="15.0" fill="rgb(227,187,21)" rx="2" ry="2" />
<text  x="900.78" y="239.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (1 samples, 0.13%)</title><rect x="152.9" y="309" width="1.6" height="15.0" fill="rgb(210,212,39)" rx="2" ry="2" />
<text  x="155.93" y="319.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.40%)</title><rect x="773.9" y="245" width="4.8" height="15.0" fill="rgb(217,213,46)" rx="2" ry="2" />
<text  x="776.90" y="255.5" ></text>
</g>
<g >
<title>remote_function (62 samples, 8.34%)</title><rect x="14.8" y="149" width="98.4" height="15.0" fill="rgb(239,97,45)" rx="2" ry="2" />
<text  x="17.76" y="159.5" >remote_func..</text>
</g>
<g >
<title>__ioctl (62 samples, 8.34%)</title><rect x="14.8" y="325" width="98.4" height="15.0" fill="rgb(241,21,30)" rx="2" ry="2" />
<text  x="17.76" y="335.5" >__ioctl</text>
</g>
<g >
<title>smp_call_function_single (62 samples, 8.34%)</title><rect x="14.8" y="181" width="98.4" height="15.0" fill="rgb(223,81,43)" rx="2" ry="2" />
<text  x="17.76" y="191.5" >smp_call_fu..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.13%)</title><rect x="1156.6" y="245" width="1.6" height="15.0" fill="rgb(229,181,54)" rx="2" ry="2" />
<text  x="1159.65" y="255.5" ></text>
</g>
<g >
<title>sys_poll (2 samples, 0.27%)</title><rect x="910.5" y="325" width="3.2" height="15.0" fill="rgb(211,59,42)" rx="2" ry="2" />
<text  x="913.48" y="335.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (1 samples, 0.13%)</title><rect x="145.0" y="341" width="1.6" height="15.0" fill="rgb(231,157,32)" rx="2" ry="2" />
<text  x="147.99" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.27%)</title><rect x="677.0" y="261" width="3.2" height="15.0" fill="rgb(231,157,26)" rx="2" ry="2" />
<text  x="680.03" y="271.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (3 samples, 0.40%)</title><rect x="905.7" y="309" width="4.8" height="15.0" fill="rgb(230,210,52)" rx="2" ry="2" />
<text  x="908.72" y="319.5" ></text>
</g>
<g >
<title>alx_mask_msix (1 samples, 0.13%)</title><rect x="1156.6" y="117" width="1.6" height="15.0" fill="rgb(227,173,48)" rx="2" ry="2" />
<text  x="1159.65" y="127.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.40%)</title><rect x="735.8" y="245" width="4.8" height="15.0" fill="rgb(220,23,10)" rx="2" ry="2" />
<text  x="738.79" y="255.5" ></text>
</g>
<g >
<title>sys_ioctl (62 samples, 8.34%)</title><rect x="14.8" y="277" width="98.4" height="15.0" fill="rgb(205,57,51)" rx="2" ry="2" />
<text  x="17.76" y="287.5" >sys_ioctl</text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (10 samples, 1.35%)</title><rect x="470.6" y="309" width="15.8" height="15.0" fill="rgb(210,164,19)" rx="2" ry="2" />
<text  x="473.57" y="319.5" ></text>
</g>
<g >
<title>sys_write (1 samples, 0.13%)</title><rect x="13.2" y="293" width="1.6" height="15.0" fill="rgb(216,224,34)" rx="2" ry="2" />
<text  x="16.18" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.13%)</title><rect x="122.8" y="341" width="1.5" height="15.0" fill="rgb(240,86,28)" rx="2" ry="2" />
<text  x="125.76" y="351.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.13%)</title><rect x="13.2" y="197" width="1.6" height="15.0" fill="rgb(212,23,53)" rx="2" ry="2" />
<text  x="16.18" y="207.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.13%)</title><rect x="912.1" y="197" width="1.6" height="15.0" fill="rgb(229,188,42)" rx="2" ry="2" />
<text  x="915.07" y="207.5" ></text>
</g>
<g >
<title>dispatcher (188 samples, 25.30%)</title><rect x="170.4" y="245" width="298.6" height="15.0" fill="rgb(247,188,21)" rx="2" ry="2" />
<text  x="173.40" y="255.5" >dispatcher</text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.13%)</title><rect x="912.1" y="229" width="1.6" height="15.0" fill="rgb(206,46,42)" rx="2" ry="2" />
<text  x="915.07" y="239.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.13%)</title><rect x="469.0" y="213" width="1.6" height="15.0" fill="rgb(210,38,5)" rx="2" ry="2" />
<text  x="471.98" y="223.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (1 samples, 0.13%)</title><rect x="581.7" y="213" width="1.6" height="15.0" fill="rgb(230,138,11)" rx="2" ry="2" />
<text  x="584.74" y="223.5" ></text>
</g>
<g >
<title>kthread (2 samples, 0.27%)</title><rect x="916.8" y="341" width="3.2" height="15.0" fill="rgb(205,200,34)" rx="2" ry="2" />
<text  x="919.84" y="351.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (17 samples, 2.29%)</title><rect x="621.4" y="197" width="27.0" height="15.0" fill="rgb(248,119,11)" rx="2" ry="2" />
<text  x="624.44" y="207.5" >_..</text>
</g>
<g >
<title>__libc_write (1 samples, 0.13%)</title><rect x="13.2" y="341" width="1.6" height="15.0" fill="rgb(241,189,32)" rx="2" ry="2" />
<text  x="16.18" y="351.5" ></text>
</g>
<g >
<title>sys_sendto (1 samples, 0.13%)</title><rect x="915.2" y="325" width="1.6" height="15.0" fill="rgb(233,154,25)" rx="2" ry="2" />
<text  x="918.25" y="335.5" ></text>
</g>
<g >
<title>BitmapSetBit (1 samples, 0.13%)</title><rect x="167.2" y="213" width="1.6" height="15.0" fill="rgb(220,186,15)" rx="2" ry="2" />
<text  x="170.23" y="223.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (62 samples, 8.34%)</title><rect x="14.8" y="261" width="98.4" height="15.0" fill="rgb(231,21,7)" rx="2" ry="2" />
<text  x="17.76" y="271.5" >do_vfs_ioctl</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.13%)</title><rect x="897.8" y="357" width="1.6" height="15.0" fill="rgb(221,196,19)" rx="2" ry="2" />
<text  x="900.78" y="367.5" ></text>
</g>
</g>
</svg>
