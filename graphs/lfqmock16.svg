<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="486.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="469" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="469" > </text>
<g id="frames">
<g >
<title>_start (1 samples, 0.17%)</title><rect x="824.1" y="405" width="2.0" height="15.0" fill="rgb(236,113,51)" rx="2" ry="2" />
<text  x="827.08" y="415.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.17%)</title><rect x="894.0" y="293" width="2.0" height="15.0" fill="rgb(229,219,22)" rx="2" ry="2" />
<text  x="896.97" y="303.5" ></text>
</g>
<g >
<title>native_irq_return_iret (19 samples, 3.31%)</title><rect x="499.3" y="373" width="39.0" height="15.0" fill="rgb(234,228,20)" rx="2" ry="2" />
<text  x="502.27" y="383.5" >nat..</text>
</g>
<g >
<title>__do_page_fault (49 samples, 8.54%)</title><rect x="365.6" y="341" width="100.8" height="15.0" fill="rgb(227,94,6)" rx="2" ry="2" />
<text  x="368.64" y="351.5" >__do_page_fa..</text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.17%)</title><rect x="729.5" y="309" width="2.1" height="15.0" fill="rgb(245,207,14)" rx="2" ry="2" />
<text  x="732.51" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.35%)</title><rect x="793.2" y="197" width="4.2" height="15.0" fill="rgb(206,131,36)" rx="2" ry="2" />
<text  x="796.24" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (14 samples, 2.44%)</title><rect x="772.7" y="325" width="28.8" height="15.0" fill="rgb(245,207,5)" rx="2" ry="2" />
<text  x="775.68" y="335.5" >__..</text>
</g>
<g >
<title>activate_task (1 samples, 0.17%)</title><rect x="1109.8" y="133" width="2.1" height="15.0" fill="rgb(232,101,37)" rx="2" ry="2" />
<text  x="1112.83" y="143.5" ></text>
</g>
<g >
<title>__get_vma_policy (1 samples, 0.17%)</title><rect x="571.2" y="293" width="2.1" height="15.0" fill="rgb(208,219,38)" rx="2" ry="2" />
<text  x="574.22" y="303.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.17%)</title><rect x="756.2" y="165" width="2.1" height="15.0" fill="rgb(247,138,50)" rx="2" ry="2" />
<text  x="759.24" y="175.5" ></text>
</g>
<g >
<title>refresh_cpu_vm_stats (2 samples, 0.35%)</title><rect x="1183.8" y="293" width="4.1" height="15.0" fill="rgb(207,224,47)" rx="2" ry="2" />
<text  x="1186.83" y="303.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 0.17%)</title><rect x="1187.9" y="245" width="2.1" height="15.0" fill="rgb(254,58,18)" rx="2" ry="2" />
<text  x="1190.94" y="255.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.35%)</title><rect x="758.3" y="165" width="4.1" height="15.0" fill="rgb(214,4,27)" rx="2" ry="2" />
<text  x="761.29" y="175.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (12 samples, 2.09%)</title><rect x="926.9" y="85" width="24.6" height="15.0" fill="rgb(206,207,27)" rx="2" ry="2" />
<text  x="929.86" y="95.5" >_..</text>
</g>
<g >
<title>ctx_resched (65 samples, 11.32%)</title><rect x="926.9" y="149" width="133.6" height="15.0" fill="rgb(234,197,41)" rx="2" ry="2" />
<text  x="929.86" y="159.5" >ctx_resched</text>
</g>
<g >
<title>futex_wake (1 samples, 0.17%)</title><rect x="799.4" y="245" width="2.1" height="15.0" fill="rgb(239,50,0)" rx="2" ry="2" />
<text  x="802.41" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.17%)</title><rect x="756.2" y="293" width="2.1" height="15.0" fill="rgb(232,47,19)" rx="2" ry="2" />
<text  x="759.24" y="303.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (2 samples, 0.35%)</title><rect x="686.3" y="245" width="4.2" height="15.0" fill="rgb(206,207,23)" rx="2" ry="2" />
<text  x="689.34" y="255.5" ></text>
</g>
<g >
<title>smp_call_function_single (72 samples, 12.54%)</title><rect x="912.5" y="229" width="148.0" height="15.0" fill="rgb(251,58,28)" rx="2" ry="2" />
<text  x="915.47" y="239.5" >smp_call_function_..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.17%)</title><rect x="824.1" y="261" width="2.0" height="15.0" fill="rgb(249,208,34)" rx="2" ry="2" />
<text  x="827.08" y="271.5" ></text>
</g>
<g >
<title>start_kernel (1 samples, 0.17%)</title><rect x="1187.9" y="357" width="2.1" height="15.0" fill="rgb(212,94,32)" rx="2" ry="2" />
<text  x="1190.94" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.17%)</title><rect x="799.4" y="309" width="2.1" height="15.0" fill="rgb(227,172,36)" rx="2" ry="2" />
<text  x="802.41" y="319.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (2 samples, 0.35%)</title><rect x="1099.5" y="373" width="4.2" height="15.0" fill="rgb(238,189,4)" rx="2" ry="2" />
<text  x="1102.55" y="383.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.17%)</title><rect x="1109.8" y="149" width="2.1" height="15.0" fill="rgb(225,4,5)" rx="2" ry="2" />
<text  x="1112.83" y="159.5" ></text>
</g>
<g >
<title>try_charge (4 samples, 0.70%)</title><rect x="452.0" y="277" width="8.2" height="15.0" fill="rgb(206,173,50)" rx="2" ry="2" />
<text  x="454.99" y="287.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2 samples, 0.35%)</title><rect x="739.8" y="213" width="4.1" height="15.0" fill="rgb(252,121,34)" rx="2" ry="2" />
<text  x="742.79" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.17%)</title><rect x="824.1" y="277" width="2.0" height="15.0" fill="rgb(243,161,35)" rx="2" ry="2" />
<text  x="827.08" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 1.57%)</title><rect x="801.5" y="325" width="18.5" height="15.0" fill="rgb(206,186,53)" rx="2" ry="2" />
<text  x="804.46" y="335.5" ></text>
</g>
<g >
<title>intel_idle (30 samples, 5.23%)</title><rect x="1111.9" y="293" width="61.7" height="15.0" fill="rgb(252,41,40)" rx="2" ry="2" />
<text  x="1114.88" y="303.5" >intel_..</text>
</g>
<g >
<title>lfq_enqueue (1 samples, 0.17%)</title><rect x="820.0" y="341" width="2.0" height="15.0" fill="rgb(219,93,6)" rx="2" ry="2" />
<text  x="822.97" y="351.5" ></text>
</g>
<g >
<title>unmap_page_range (24 samples, 4.18%)</title><rect x="840.5" y="245" width="49.4" height="15.0" fill="rgb(243,114,3)" rx="2" ry="2" />
<text  x="843.52" y="255.5" >unma..</text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.17%)</title><rect x="756.2" y="245" width="2.1" height="15.0" fill="rgb(224,47,49)" rx="2" ry="2" />
<text  x="759.24" y="255.5" ></text>
</g>
<g >
<title>exit_mmap (6 samples, 1.05%)</title><rect x="826.1" y="309" width="12.4" height="15.0" fill="rgb(245,64,37)" rx="2" ry="2" />
<text  x="829.13" y="319.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.17%)</title><rect x="764.5" y="133" width="2.0" height="15.0" fill="rgb(239,170,35)" rx="2" ry="2" />
<text  x="767.46" y="143.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.17%)</title><rect x="538.3" y="357" width="2.1" height="15.0" fill="rgb(221,229,19)" rx="2" ry="2" />
<text  x="541.33" y="367.5" ></text>
</g>
<g >
<title>create_thread.constprop.0 (1 samples, 0.17%)</title><rect x="824.1" y="341" width="2.0" height="15.0" fill="rgb(243,223,15)" rx="2" ry="2" />
<text  x="827.08" y="351.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.17%)</title><rect x="1187.9" y="261" width="2.1" height="15.0" fill="rgb(240,43,27)" rx="2" ry="2" />
<text  x="1190.94" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (20 samples, 3.48%)</title><rect x="394.4" y="277" width="41.1" height="15.0" fill="rgb(205,49,8)" rx="2" ry="2" />
<text  x="397.43" y="287.5" >__a..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.17%)</title><rect x="778.9" y="149" width="2.0" height="15.0" fill="rgb(244,36,31)" rx="2" ry="2" />
<text  x="781.85" y="159.5" ></text>
</g>
<g >
<title>enter_lazy_tlb (1 samples, 0.17%)</title><rect x="838.5" y="261" width="2.0" height="15.0" fill="rgb(230,95,40)" rx="2" ry="2" />
<text  x="841.47" y="271.5" ></text>
</g>
<g >
<title>rwsem_down_write_failed_killable (1 samples, 0.17%)</title><rect x="838.5" y="309" width="2.0" height="15.0" fill="rgb(215,62,31)" rx="2" ry="2" />
<text  x="841.47" y="319.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (2 samples, 0.35%)</title><rect x="439.7" y="245" width="4.1" height="15.0" fill="rgb(216,31,8)" rx="2" ry="2" />
<text  x="442.65" y="255.5" ></text>
</g>
<g >
<title>wake_up_q (3 samples, 0.52%)</title><rect x="780.9" y="149" width="6.2" height="15.0" fill="rgb(252,225,12)" rx="2" ry="2" />
<text  x="783.91" y="159.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.17%)</title><rect x="889.9" y="405" width="2.0" height="15.0" fill="rgb(250,155,48)" rx="2" ry="2" />
<text  x="892.86" y="415.5" ></text>
</g>
<g >
<title>sys_munmap (24 samples, 4.18%)</title><rect x="840.5" y="341" width="49.4" height="15.0" fill="rgb(223,51,2)" rx="2" ry="2" />
<text  x="843.52" y="351.5" >sys_..</text>
</g>
<g >
<title>perf_ioctl (80 samples, 13.94%)</title><rect x="896.0" y="293" width="164.5" height="15.0" fill="rgb(220,111,18)" rx="2" ry="2" />
<text  x="899.03" y="303.5" >perf_ioctl</text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.17%)</title><rect x="891.9" y="405" width="2.1" height="15.0" fill="rgb(227,157,50)" rx="2" ry="2" />
<text  x="894.92" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 13.94%)</title><rect x="896.0" y="341" width="164.5" height="15.0" fill="rgb(231,17,30)" rx="2" ry="2" />
<text  x="899.03" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>call_rwsem_wake (5 samples, 0.87%)</title><rect x="733.6" y="309" width="10.3" height="15.0" fill="rgb(247,62,51)" rx="2" ry="2" />
<text  x="736.62" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (24 samples, 4.18%)</title><rect x="840.5" y="357" width="49.4" height="15.0" fill="rgb(211,210,32)" rx="2" ry="2" />
<text  x="843.52" y="367.5" >do_s..</text>
</g>
<g >
<title>__handle_mm_fault (42 samples, 7.32%)</title><rect x="375.9" y="309" width="86.4" height="15.0" fill="rgb(236,179,39)" rx="2" ry="2" />
<text  x="378.92" y="319.5" >__handle_m..</text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.52%)</title><rect x="780.9" y="133" width="6.2" height="15.0" fill="rgb(216,61,15)" rx="2" ry="2" />
<text  x="783.91" y="143.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.17%)</title><rect x="824.1" y="293" width="2.0" height="15.0" fill="rgb(218,115,16)" rx="2" ry="2" />
<text  x="827.08" y="303.5" ></text>
</g>
<g >
<title>quiet_vmstat (2 samples, 0.35%)</title><rect x="1183.8" y="309" width="4.1" height="15.0" fill="rgb(242,223,36)" rx="2" ry="2" />
<text  x="1186.83" y="319.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.17%)</title><rect x="546.6" y="277" width="2.0" height="15.0" fill="rgb(241,39,50)" rx="2" ry="2" />
<text  x="549.55" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.52%)</title><rect x="793.2" y="261" width="6.2" height="15.0" fill="rgb(233,181,31)" rx="2" ry="2" />
<text  x="796.24" y="271.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.17%)</title><rect x="887.8" y="165" width="2.1" height="15.0" fill="rgb(253,114,28)" rx="2" ry="2" />
<text  x="890.80" y="175.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.17%)</title><rect x="1187.9" y="277" width="2.1" height="15.0" fill="rgb(251,97,22)" rx="2" ry="2" />
<text  x="1190.94" y="287.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (3 samples, 0.52%)</title><rect x="832.3" y="229" width="6.2" height="15.0" fill="rgb(234,207,32)" rx="2" ry="2" />
<text  x="835.30" y="239.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.17%)</title><rect x="838.5" y="357" width="2.0" height="15.0" fill="rgb(218,103,8)" rx="2" ry="2" />
<text  x="841.47" y="367.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.17%)</title><rect x="1109.8" y="85" width="2.1" height="15.0" fill="rgb(247,225,20)" rx="2" ry="2" />
<text  x="1112.83" y="95.5" ></text>
</g>
<g >
<title>call_rwsem_down_read_failed (1 samples, 0.17%)</title><rect x="546.6" y="309" width="2.0" height="15.0" fill="rgb(243,127,41)" rx="2" ry="2" />
<text  x="549.55" y="319.5" ></text>
</g>
<g >
<title>__GI_madvise (1 samples, 0.17%)</title><rect x="756.2" y="325" width="2.1" height="15.0" fill="rgb(231,209,39)" rx="2" ry="2" />
<text  x="759.24" y="335.5" ></text>
</g>
<g >
<title>migrate_task_rq_fair (1 samples, 0.17%)</title><rect x="1099.5" y="277" width="2.1" height="15.0" fill="rgb(227,133,33)" rx="2" ry="2" />
<text  x="1102.55" y="287.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.17%)</title><rect x="1109.8" y="213" width="2.1" height="15.0" fill="rgb(234,43,49)" rx="2" ry="2" />
<text  x="1112.83" y="223.5" ></text>
</g>
<g >
<title>switch_mm (1 samples, 0.17%)</title><rect x="766.5" y="165" width="2.1" height="15.0" fill="rgb(210,178,41)" rx="2" ry="2" />
<text  x="769.52" y="175.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.35%)</title><rect x="758.3" y="213" width="4.1" height="15.0" fill="rgb(207,205,0)" rx="2" ry="2" />
<text  x="761.29" y="223.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 0.17%)</title><rect x="1187.9" y="373" width="2.1" height="15.0" fill="rgb(238,191,13)" rx="2" ry="2" />
<text  x="1190.94" y="383.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.35%)</title><rect x="1107.8" y="293" width="4.1" height="15.0" fill="rgb(221,92,15)" rx="2" ry="2" />
<text  x="1110.77" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (137 samples, 23.87%)</title><rect x="468.4" y="389" width="281.7" height="15.0" fill="rgb(254,123,38)" rx="2" ry="2" />
<text  x="471.43" y="399.5" >__memmove_avx_unaligned_erms</text>
</g>
<g >
<title>mem_cgroup_page_lruvec (1 samples, 0.17%)</title><rect x="836.4" y="197" width="2.1" height="15.0" fill="rgb(252,81,47)" rx="2" ry="2" />
<text  x="839.41" y="207.5" ></text>
</g>
<g >
<title>__migrate_task (1 samples, 0.17%)</title><rect x="1099.5" y="325" width="2.1" height="15.0" fill="rgb(232,116,44)" rx="2" ry="2" />
<text  x="1102.55" y="335.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.17%)</title><rect x="546.6" y="325" width="2.0" height="15.0" fill="rgb(224,41,42)" rx="2" ry="2" />
<text  x="549.55" y="335.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.35%)</title><rect x="758.3" y="149" width="4.1" height="15.0" fill="rgb(221,16,18)" rx="2" ry="2" />
<text  x="761.29" y="159.5" ></text>
</g>
<g >
<title>ret_from_fork (2 samples, 0.35%)</title><rect x="1099.5" y="405" width="4.2" height="15.0" fill="rgb(249,26,35)" rx="2" ry="2" />
<text  x="1102.55" y="415.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.17%)</title><rect x="1109.8" y="165" width="2.1" height="15.0" fill="rgb(221,50,34)" rx="2" ry="2" />
<text  x="1112.83" y="175.5" ></text>
</g>
<g >
<title>kthread (2 samples, 0.35%)</title><rect x="1099.5" y="389" width="4.2" height="15.0" fill="rgb(250,204,21)" rx="2" ry="2" />
<text  x="1102.55" y="399.5" ></text>
</g>
<g >
<title>main (24 samples, 4.18%)</title><rect x="840.5" y="405" width="49.4" height="15.0" fill="rgb(247,202,32)" rx="2" ry="2" />
<text  x="843.52" y="415.5" >main</text>
</g>
<g >
<title>hrtimer_start_range_ns (3 samples, 0.52%)</title><rect x="1177.7" y="309" width="6.1" height="15.0" fill="rgb(239,161,46)" rx="2" ry="2" />
<text  x="1180.67" y="319.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.17%)</title><rect x="834.4" y="181" width="2.0" height="15.0" fill="rgb(238,211,38)" rx="2" ry="2" />
<text  x="837.36" y="191.5" ></text>
</g>
<g >
<title>load_new_mm_cr3 (1 samples, 0.17%)</title><rect x="838.5" y="213" width="2.0" height="15.0" fill="rgb(208,83,42)" rx="2" ry="2" />
<text  x="841.47" y="223.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.35%)</title><rect x="793.2" y="181" width="4.2" height="15.0" fill="rgb(249,22,38)" rx="2" ry="2" />
<text  x="796.24" y="191.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.17%)</title><rect x="1181.8" y="261" width="2.0" height="15.0" fill="rgb(206,79,53)" rx="2" ry="2" />
<text  x="1184.78" y="271.5" ></text>
</g>
<g >
<title>__lru_cache_add (6 samples, 1.05%)</title><rect x="680.2" y="277" width="12.3" height="15.0" fill="rgb(249,86,34)" rx="2" ry="2" />
<text  x="683.17" y="287.5" ></text>
</g>
<g >
<title>__tick_nohz_idle_enter (6 samples, 1.05%)</title><rect x="1175.6" y="325" width="12.3" height="15.0" fill="rgb(220,170,26)" rx="2" ry="2" />
<text  x="1178.61" y="335.5" ></text>
</g>
<g >
<title>sys_munmap (4 samples, 0.70%)</title><rect x="758.3" y="277" width="8.2" height="15.0" fill="rgb(211,139,31)" rx="2" ry="2" />
<text  x="761.29" y="287.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.17%)</title><rect x="824.1" y="309" width="2.0" height="15.0" fill="rgb(235,170,30)" rx="2" ry="2" />
<text  x="827.08" y="319.5" ></text>
</g>
<g >
<title>_vm_normal_page (1 samples, 0.17%)</title><rect x="762.4" y="165" width="2.1" height="15.0" fill="rgb(237,195,15)" rx="2" ry="2" />
<text  x="765.40" y="175.5" ></text>
</g>
<g >
<title>activate_task (2 samples, 0.35%)</title><rect x="739.8" y="229" width="4.1" height="15.0" fill="rgb(234,58,11)" rx="2" ry="2" />
<text  x="742.79" y="239.5" ></text>
</g>
<g >
<title>unmap_page_range (5 samples, 0.87%)</title><rect x="828.2" y="261" width="10.3" height="15.0" fill="rgb(239,52,50)" rx="2" ry="2" />
<text  x="831.19" y="271.5" ></text>
</g>
<g >
<title>down_read_trylock (2 samples, 0.35%)</title><rect x="548.6" y="325" width="4.1" height="15.0" fill="rgb(233,196,13)" rx="2" ry="2" />
<text  x="551.61" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.70%)</title><rect x="758.3" y="309" width="8.2" height="15.0" fill="rgb(215,67,35)" rx="2" ry="2" />
<text  x="761.29" y="319.5" ></text>
</g>
<g >
<title>rest_init (1 samples, 0.17%)</title><rect x="1187.9" y="341" width="2.1" height="15.0" fill="rgb(234,89,9)" rx="2" ry="2" />
<text  x="1190.94" y="351.5" ></text>
</g>
<g >
<title>__GI_munmap (24 samples, 4.18%)</title><rect x="840.5" y="389" width="49.4" height="15.0" fill="rgb(231,189,18)" rx="2" ry="2" />
<text  x="843.52" y="399.5" >__GI..</text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.17%)</title><rect x="838.5" y="277" width="2.0" height="15.0" fill="rgb(226,77,31)" rx="2" ry="2" />
<text  x="841.47" y="287.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.17%)</title><rect x="758.3" y="133" width="2.0" height="15.0" fill="rgb(223,101,50)" rx="2" ry="2" />
<text  x="761.29" y="143.5" ></text>
</g>
<g >
<title>LindPipe_pipewrite (25 samples, 4.36%)</title><rect x="770.6" y="357" width="51.4" height="15.0" fill="rgb(215,96,6)" rx="2" ry="2" />
<text  x="773.63" y="367.5" >LindP..</text>
</g>
<g >
<title>clear_page_erms (29 samples, 5.05%)</title><rect x="600.0" y="261" width="59.6" height="15.0" fill="rgb(234,175,41)" rx="2" ry="2" />
<text  x="603.00" y="271.5" >clear_..</text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.17%)</title><rect x="1173.6" y="325" width="2.0" height="15.0" fill="rgb(244,187,22)" rx="2" ry="2" />
<text  x="1176.55" y="335.5" ></text>
</g>
<g >
<title>start_thread (35 samples, 6.10%)</title><rect x="750.1" y="389" width="71.9" height="15.0" fill="rgb(223,205,17)" rx="2" ry="2" />
<text  x="753.07" y="399.5" >start_th..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.17%)</title><rect x="466.4" y="373" width="2.0" height="15.0" fill="rgb(208,167,38)" rx="2" ry="2" />
<text  x="469.38" y="383.5" ></text>
</g>
<g >
<title>page_remove_rmap (6 samples, 1.05%)</title><rect x="852.9" y="229" width="12.3" height="15.0" fill="rgb(221,184,6)" rx="2" ry="2" />
<text  x="855.86" y="239.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.17%)</title><rect x="546.6" y="261" width="2.0" height="15.0" fill="rgb(248,5,2)" rx="2" ry="2" />
<text  x="549.55" y="271.5" ></text>
</g>
<g >
<title>down_write_killable (1 samples, 0.17%)</title><rect x="838.5" y="341" width="2.0" height="15.0" fill="rgb(219,62,5)" rx="2" ry="2" />
<text  x="841.47" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 1.22%)</title><rect x="772.7" y="245" width="14.4" height="15.0" fill="rgb(230,134,7)" rx="2" ry="2" />
<text  x="775.68" y="255.5" ></text>
</g>
<g >
<title>rwsem_down_read_failed (1 samples, 0.17%)</title><rect x="546.6" y="293" width="2.0" height="15.0" fill="rgb(237,10,29)" rx="2" ry="2" />
<text  x="549.55" y="303.5" ></text>
</g>
<g >
<title>__dec_node_page_state (1 samples, 0.17%)</title><rect x="863.1" y="213" width="2.1" height="15.0" fill="rgb(248,137,42)" rx="2" ry="2" />
<text  x="866.14" y="223.5" ></text>
</g>
<g >
<title>sync_regs (11 samples, 1.92%)</title><rect x="476.7" y="357" width="22.6" height="15.0" fill="rgb(207,47,37)" rx="2" ry="2" />
<text  x="479.66" y="367.5" >s..</text>
</g>
<g >
<title>enter_lazy_tlb (1 samples, 0.17%)</title><rect x="546.6" y="245" width="2.0" height="15.0" fill="rgb(206,215,38)" rx="2" ry="2" />
<text  x="549.55" y="255.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.17%)</title><rect x="766.5" y="213" width="2.1" height="15.0" fill="rgb(220,204,2)" rx="2" ry="2" />
<text  x="769.52" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.52%)</title><rect x="733.6" y="229" width="6.2" height="15.0" fill="rgb(205,178,35)" rx="2" ry="2" />
<text  x="736.62" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (62 samples, 10.80%)</title><rect x="341.0" y="389" width="127.4" height="15.0" fill="rgb(228,126,34)" rx="2" ry="2" />
<text  x="343.98" y="399.5" >__memmove_avx_un..</text>
</g>
<g >
<title>sync_regs (6 samples, 1.05%)</title><rect x="341.0" y="357" width="12.3" height="15.0" fill="rgb(235,35,3)" rx="2" ry="2" />
<text  x="343.98" y="367.5" ></text>
</g>
<g >
<title>rwsem_down_read_failed (1 samples, 0.17%)</title><rect x="889.9" y="325" width="2.0" height="15.0" fill="rgb(233,81,33)" rx="2" ry="2" />
<text  x="892.86" y="335.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.35%)</title><rect x="743.9" y="373" width="4.1" height="15.0" fill="rgb(244,178,24)" rx="2" ry="2" />
<text  x="746.90" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (40 samples, 6.97%)</title><rect x="593.8" y="293" width="82.3" height="15.0" fill="rgb(224,122,23)" rx="2" ry="2" />
<text  x="596.83" y="303.5" >alloc_pag..</text>
</g>
<g >
<title>LindPipe_piperead (10 samples, 1.74%)</title><rect x="750.1" y="357" width="20.5" height="15.0" fill="rgb(210,87,31)" rx="2" ry="2" />
<text  x="753.07" y="367.5" ></text>
</g>
<g >
<title>do_munmap (4 samples, 0.70%)</title><rect x="758.3" y="245" width="8.2" height="15.0" fill="rgb(250,105,29)" rx="2" ry="2" />
<text  x="761.29" y="255.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2 samples, 0.35%)</title><rect x="739.8" y="245" width="4.1" height="15.0" fill="rgb(242,15,26)" rx="2" ry="2" />
<text  x="742.79" y="255.5" ></text>
</g>
<g >
<title>call_rwsem_down_read_failed (1 samples, 0.17%)</title><rect x="889.9" y="341" width="2.0" height="15.0" fill="rgb(244,151,50)" rx="2" ry="2" />
<text  x="892.86" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.17%)</title><rect x="799.4" y="293" width="2.1" height="15.0" fill="rgb(243,97,4)" rx="2" ry="2" />
<text  x="802.41" y="303.5" ></text>
</g>
<g >
<title>_int_free (10 samples, 1.74%)</title><rect x="750.1" y="341" width="20.5" height="15.0" fill="rgb(210,190,24)" rx="2" ry="2" />
<text  x="753.07" y="351.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.17%)</title><rect x="1101.6" y="309" width="2.1" height="15.0" fill="rgb(225,59,41)" rx="2" ry="2" />
<text  x="1104.60" y="319.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.17%)</title><rect x="1109.8" y="245" width="2.1" height="15.0" fill="rgb(206,224,44)" rx="2" ry="2" />
<text  x="1112.83" y="255.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.17%)</title><rect x="760.3" y="133" width="2.1" height="15.0" fill="rgb(253,150,46)" rx="2" ry="2" />
<text  x="763.35" y="143.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.35%)</title><rect x="758.3" y="181" width="4.1" height="15.0" fill="rgb(231,92,41)" rx="2" ry="2" />
<text  x="761.29" y="191.5" ></text>
</g>
<g >
<title>native_write_msr (49 samples, 8.54%)</title><rect x="957.7" y="85" width="100.7" height="15.0" fill="rgb(223,209,22)" rx="2" ry="2" />
<text  x="960.70" y="95.5" >native_write..</text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.17%)</title><rect x="785.0" y="53" width="2.1" height="15.0" fill="rgb(229,115,28)" rx="2" ry="2" />
<text  x="788.02" y="63.5" ></text>
</g>
<g >
<title>read (1 samples, 0.17%)</title><rect x="894.0" y="389" width="2.0" height="15.0" fill="rgb(214,36,3)" rx="2" ry="2" />
<text  x="896.97" y="399.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.17%)</title><rect x="889.9" y="309" width="2.0" height="15.0" fill="rgb(246,145,51)" rx="2" ry="2" />
<text  x="892.86" y="319.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (7 samples, 1.22%)</title><rect x="772.7" y="213" width="14.4" height="15.0" fill="rgb(232,51,53)" rx="2" ry="2" />
<text  x="775.68" y="223.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (2 samples, 0.35%)</title><rect x="953.6" y="85" width="4.1" height="15.0" fill="rgb(250,190,42)" rx="2" ry="2" />
<text  x="956.59" y="95.5" ></text>
</g>
<g >
<title>do_group_exit (6 samples, 1.05%)</title><rect x="826.1" y="357" width="12.4" height="15.0" fill="rgb(244,169,18)" rx="2" ry="2" />
<text  x="829.13" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.22%)</title><rect x="772.7" y="261" width="14.4" height="15.0" fill="rgb(240,73,15)" rx="2" ry="2" />
<text  x="775.68" y="271.5" ></text>
</g>
<g >
<title>read_func (10 samples, 1.74%)</title><rect x="750.1" y="373" width="20.5" height="15.0" fill="rgb(235,114,1)" rx="2" ry="2" />
<text  x="753.07" y="383.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.17%)</title><rect x="1179.7" y="293" width="2.1" height="15.0" fill="rgb(240,61,35)" rx="2" ry="2" />
<text  x="1182.72" y="303.5" ></text>
</g>
<g >
<title>seq_printf (1 samples, 0.17%)</title><rect x="894.0" y="229" width="2.0" height="15.0" fill="rgb(220,7,52)" rx="2" ry="2" />
<text  x="896.97" y="239.5" ></text>
</g>
<g >
<title>rwsem_wake (5 samples, 0.87%)</title><rect x="733.6" y="293" width="10.3" height="15.0" fill="rgb(230,206,4)" rx="2" ry="2" />
<text  x="736.62" y="303.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.35%)</title><rect x="758.3" y="197" width="4.1" height="15.0" fill="rgb(233,212,19)" rx="2" ry="2" />
<text  x="761.29" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.52%)</title><rect x="793.2" y="229" width="6.2" height="15.0" fill="rgb(249,211,46)" rx="2" ry="2" />
<text  x="796.24" y="239.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (4 samples, 0.70%)</title><rect x="435.5" y="293" width="8.3" height="15.0" fill="rgb(251,14,11)" rx="2" ry="2" />
<text  x="438.54" y="303.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.17%)</title><rect x="766.5" y="245" width="2.1" height="15.0" fill="rgb(218,27,54)" rx="2" ry="2" />
<text  x="769.52" y="255.5" ></text>
</g>
<g >
<title>do_idle (41 samples, 7.14%)</title><rect x="1103.7" y="357" width="84.2" height="15.0" fill="rgb(205,127,1)" rx="2" ry="2" />
<text  x="1106.66" y="367.5" >do_idle</text>
</g>
<g >
<title>activate_task (1 samples, 0.17%)</title><rect x="785.0" y="101" width="2.1" height="15.0" fill="rgb(210,172,25)" rx="2" ry="2" />
<text  x="788.02" y="111.5" ></text>
</g>
<g >
<title>khugepaged_enter_vma_merge (1 samples, 0.17%)</title><rect x="774.7" y="181" width="2.1" height="15.0" fill="rgb(210,100,34)" rx="2" ry="2" />
<text  x="777.74" y="191.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.35%)</title><rect x="762.4" y="197" width="4.1" height="15.0" fill="rgb(216,37,44)" rx="2" ry="2" />
<text  x="765.40" y="207.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (11 samples, 1.92%)</title><rect x="692.5" y="293" width="22.6" height="15.0" fill="rgb(249,182,10)" rx="2" ry="2" />
<text  x="695.51" y="303.5" >m..</text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.17%)</title><rect x="785.0" y="117" width="2.1" height="15.0" fill="rgb(214,166,28)" rx="2" ry="2" />
<text  x="788.02" y="127.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (12 samples, 2.09%)</title><rect x="865.2" y="213" width="24.7" height="15.0" fill="rgb(209,175,24)" rx="2" ry="2" />
<text  x="868.19" y="223.5" >f..</text>
</g>
<g >
<title>release_pages (1 samples, 0.17%)</title><rect x="826.1" y="229" width="2.1" height="15.0" fill="rgb(220,130,36)" rx="2" ry="2" />
<text  x="829.13" y="239.5" ></text>
</g>
<g >
<title>detach_entity_cfs_rq (1 samples, 0.17%)</title><rect x="1099.5" y="261" width="2.1" height="15.0" fill="rgb(229,112,0)" rx="2" ry="2" />
<text  x="1102.55" y="271.5" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 0.17%)</title><rect x="894.0" y="261" width="2.0" height="15.0" fill="rgb(254,82,17)" rx="2" ry="2" />
<text  x="896.97" y="271.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (1 samples, 0.17%)</title><rect x="776.8" y="149" width="2.1" height="15.0" fill="rgb(226,83,30)" rx="2" ry="2" />
<text  x="779.79" y="159.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.17%)</title><rect x="795.3" y="165" width="2.1" height="15.0" fill="rgb(249,133,53)" rx="2" ry="2" />
<text  x="798.30" y="175.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.65 (1 samples, 0.17%)</title><rect x="885.7" y="165" width="2.1" height="15.0" fill="rgb(235,124,35)" rx="2" ry="2" />
<text  x="888.75" y="175.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.17%)</title><rect x="748.0" y="373" width="2.1" height="15.0" fill="rgb(235,116,42)" rx="2" ry="2" />
<text  x="751.01" y="383.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.17%)</title><rect x="1109.8" y="117" width="2.1" height="15.0" fill="rgb(242,113,12)" rx="2" ry="2" />
<text  x="1112.83" y="127.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.17%)</title><rect x="799.4" y="277" width="2.1" height="15.0" fill="rgb(220,7,7)" rx="2" ry="2" />
<text  x="802.41" y="287.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (80 samples, 13.94%)</title><rect x="896.0" y="309" width="164.5" height="15.0" fill="rgb(239,183,11)" rx="2" ry="2" />
<text  x="899.03" y="319.5" >do_vfs_ioctl</text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.17%)</title><rect x="873.4" y="181" width="2.1" height="15.0" fill="rgb(232,26,33)" rx="2" ry="2" />
<text  x="876.41" y="191.5" ></text>
</g>
<g >
<title>do_munmap (24 samples, 4.18%)</title><rect x="840.5" y="309" width="49.4" height="15.0" fill="rgb(225,95,54)" rx="2" ry="2" />
<text  x="843.52" y="319.5" >do_m..</text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.52%)</title><rect x="793.2" y="245" width="6.2" height="15.0" fill="rgb(230,119,41)" rx="2" ry="2" />
<text  x="796.24" y="255.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.17%)</title><rect x="768.6" y="325" width="2.0" height="15.0" fill="rgb(215,35,15)" rx="2" ry="2" />
<text  x="771.57" y="335.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.17%)</title><rect x="766.5" y="277" width="2.1" height="15.0" fill="rgb(229,220,10)" rx="2" ry="2" />
<text  x="769.52" y="287.5" ></text>
</g>
<g >
<title>all (574 samples, 100%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(240,52,18)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>set_task_cpu (1 samples, 0.17%)</title><rect x="1099.5" y="293" width="2.1" height="15.0" fill="rgb(249,151,38)" rx="2" ry="2" />
<text  x="1102.55" y="303.5" ></text>
</g>
<g >
<title>switch_mm (1 samples, 0.17%)</title><rect x="546.6" y="229" width="2.0" height="15.0" fill="rgb(209,223,15)" rx="2" ry="2" />
<text  x="549.55" y="239.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (3 samples, 0.52%)</title><rect x="879.6" y="149" width="6.1" height="15.0" fill="rgb(221,145,46)" rx="2" ry="2" />
<text  x="882.58" y="159.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (3 samples, 0.52%)</title><rect x="686.3" y="261" width="6.2" height="15.0" fill="rgb(242,192,47)" rx="2" ry="2" />
<text  x="689.34" y="271.5" ></text>
</g>
<g >
<title>unmap_single_vma (24 samples, 4.18%)</title><rect x="840.5" y="261" width="49.4" height="15.0" fill="rgb(217,194,5)" rx="2" ry="2" />
<text  x="843.52" y="271.5" >unma..</text>
</g>
<g >
<title>nmi_restore (1 samples, 0.17%)</title><rect x="1058.4" y="85" width="2.1" height="15.0" fill="rgb(248,20,11)" rx="2" ry="2" />
<text  x="1061.43" y="95.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.17%)</title><rect x="1173.6" y="341" width="2.0" height="15.0" fill="rgb(222,11,31)" rx="2" ry="2" />
<text  x="1176.55" y="351.5" ></text>
</g>
<g >
<title>sys_mprotect (7 samples, 1.22%)</title><rect x="772.7" y="229" width="14.4" height="15.0" fill="rgb(226,3,44)" rx="2" ry="2" />
<text  x="775.68" y="239.5" ></text>
</g>
<g >
<title>__perf_event_enable (65 samples, 11.32%)</title><rect x="926.9" y="165" width="133.6" height="15.0" fill="rgb(235,41,24)" rx="2" ry="2" />
<text  x="929.86" y="175.5" >__perf_event_ena..</text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.35%)</title><rect x="762.4" y="213" width="4.1" height="15.0" fill="rgb(222,163,36)" rx="2" ry="2" />
<text  x="765.40" y="223.5" ></text>
</g>
<g >
<title>unmap_single_vma (5 samples, 0.87%)</title><rect x="828.2" y="277" width="10.3" height="15.0" fill="rgb(239,203,32)" rx="2" ry="2" />
<text  x="831.19" y="287.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.17%)</title><rect x="552.7" y="309" width="2.1" height="15.0" fill="rgb(218,8,25)" rx="2" ry="2" />
<text  x="555.72" y="319.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.17%)</title><rect x="1109.8" y="229" width="2.1" height="15.0" fill="rgb(223,192,34)" rx="2" ry="2" />
<text  x="1112.83" y="239.5" ></text>
</g>
<g >
<title>sys_ioctl (80 samples, 13.94%)</title><rect x="896.0" y="325" width="164.5" height="15.0" fill="rgb(249,211,45)" rx="2" ry="2" />
<text  x="899.03" y="335.5" >sys_ioctl</text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.17%)</title><rect x="887.8" y="181" width="2.1" height="15.0" fill="rgb(243,175,47)" rx="2" ry="2" />
<text  x="890.80" y="191.5" ></text>
</g>
<g >
<title>lindpipe-mock (430 samples, 74.91%)</title><rect x="10.0" y="421" width="884.0" height="15.0" fill="rgb(241,228,50)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >lindpipe-mock</text>
</g>
<g >
<title>sys_exit_group (6 samples, 1.05%)</title><rect x="826.1" y="373" width="12.4" height="15.0" fill="rgb(229,174,12)" rx="2" ry="2" />
<text  x="829.13" y="383.5" ></text>
</g>
<g >
<title>sys_read (1 samples, 0.17%)</title><rect x="894.0" y="325" width="2.0" height="15.0" fill="rgb(218,181,15)" rx="2" ry="2" />
<text  x="896.97" y="335.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (1 samples, 0.17%)</title><rect x="1099.5" y="357" width="2.1" height="15.0" fill="rgb(221,225,15)" rx="2" ry="2" />
<text  x="1102.55" y="367.5" ></text>
</g>
<g >
<title>__lru_cache_add (3 samples, 0.52%)</title><rect x="437.6" y="277" width="6.2" height="15.0" fill="rgb(215,112,40)" rx="2" ry="2" />
<text  x="440.60" y="287.5" ></text>
</g>
<g >
<title>enter_lazy_tlb (1 samples, 0.17%)</title><rect x="766.5" y="181" width="2.1" height="15.0" fill="rgb(216,110,7)" rx="2" ry="2" />
<text  x="769.52" y="191.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.17%)</title><rect x="1175.6" y="293" width="2.1" height="15.0" fill="rgb(211,27,13)" rx="2" ry="2" />
<text  x="1178.61" y="303.5" ></text>
</g>
<g >
<title>zap_page_range (1 samples, 0.17%)</title><rect x="756.2" y="261" width="2.1" height="15.0" fill="rgb(241,38,34)" rx="2" ry="2" />
<text  x="759.24" y="271.5" ></text>
</g>
<g >
<title>enqueue_entity (2 samples, 0.35%)</title><rect x="739.8" y="197" width="4.1" height="15.0" fill="rgb(219,18,31)" rx="2" ry="2" />
<text  x="742.79" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.52%)</title><rect x="793.2" y="213" width="6.2" height="15.0" fill="rgb(237,60,34)" rx="2" ry="2" />
<text  x="796.24" y="223.5" ></text>
</g>
<g >
<title>_perf_event_enable (79 samples, 13.76%)</title><rect x="898.1" y="261" width="162.4" height="15.0" fill="rgb(227,99,37)" rx="2" ry="2" />
<text  x="901.08" y="271.5" >_perf_event_enable</text>
</g>
<g >
<title>__libc_read (1 samples, 0.17%)</title><rect x="894.0" y="373" width="2.0" height="15.0" fill="rgb(219,146,54)" rx="2" ry="2" />
<text  x="896.97" y="383.5" ></text>
</g>
<g >
<title>error_entry (15 samples, 2.61%)</title><rect x="468.4" y="373" width="30.9" height="15.0" fill="rgb(243,200,50)" rx="2" ry="2" />
<text  x="471.43" y="383.5" >er..</text>
</g>
<g >
<title>tlb_flush_mmu_free (12 samples, 2.09%)</title><rect x="865.2" y="229" width="24.7" height="15.0" fill="rgb(244,153,24)" rx="2" ry="2" />
<text  x="868.19" y="239.5" >t..</text>
</g>
<g >
<title>process_timeout (1 samples, 0.17%)</title><rect x="1109.8" y="197" width="2.1" height="15.0" fill="rgb(207,133,34)" rx="2" ry="2" />
<text  x="1112.83" y="207.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.35%)</title><rect x="834.4" y="213" width="4.1" height="15.0" fill="rgb(240,227,10)" rx="2" ry="2" />
<text  x="837.36" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.22%)</title><rect x="826.1" y="405" width="14.4" height="15.0" fill="rgb(207,127,36)" rx="2" ry="2" />
<text  x="829.13" y="415.5" ></text>
</g>
<g >
<title>free_unref_page_list (6 samples, 1.05%)</title><rect x="875.5" y="181" width="12.3" height="15.0" fill="rgb(224,205,21)" rx="2" ry="2" />
<text  x="878.47" y="191.5" ></text>
</g>
<g >
<title>try_to_wake_up (5 samples, 0.87%)</title><rect x="733.6" y="261" width="10.3" height="15.0" fill="rgb(207,141,37)" rx="2" ry="2" />
<text  x="736.62" y="271.5" ></text>
</g>
<g >
<title>unmap_region (24 samples, 4.18%)</title><rect x="840.5" y="293" width="49.4" height="15.0" fill="rgb(239,55,23)" rx="2" ry="2" />
<text  x="843.52" y="303.5" >unma..</text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.17%)</title><rect x="889.9" y="293" width="2.0" height="15.0" fill="rgb(251,22,51)" rx="2" ry="2" />
<text  x="892.86" y="303.5" ></text>
</g>
<g >
<title>error_entry (6 samples, 1.05%)</title><rect x="341.0" y="373" width="12.3" height="15.0" fill="rgb(248,221,48)" rx="2" ry="2" />
<text  x="343.98" y="383.5" ></text>
</g>
<g >
<title>page_counter_try_charge (2 samples, 0.35%)</title><rect x="711.0" y="261" width="4.1" height="15.0" fill="rgb(229,170,24)" rx="2" ry="2" />
<text  x="714.01" y="271.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.17%)</title><rect x="787.1" y="261" width="2.0" height="15.0" fill="rgb(251,91,19)" rx="2" ry="2" />
<text  x="790.07" y="271.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.17%)</title><rect x="1187.9" y="309" width="2.1" height="15.0" fill="rgb(226,38,6)" rx="2" ry="2" />
<text  x="1190.94" y="319.5" ></text>
</g>
<g >
<title>move_queued_task (1 samples, 0.17%)</title><rect x="1099.5" y="309" width="2.1" height="15.0" fill="rgb(207,73,28)" rx="2" ry="2" />
<text  x="1102.55" y="319.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.17%)</title><rect x="1187.9" y="325" width="2.1" height="15.0" fill="rgb(250,28,13)" rx="2" ry="2" />
<text  x="1190.94" y="335.5" ></text>
</g>
<g >
<title>__GI___clone (35 samples, 6.10%)</title><rect x="750.1" y="405" width="71.9" height="15.0" fill="rgb(243,94,14)" rx="2" ry="2" />
<text  x="753.07" y="415.5" >__GI___c..</text>
</g>
<g >
<title>switch_mm_irqs_off (1 samples, 0.17%)</title><rect x="838.5" y="229" width="2.0" height="15.0" fill="rgb(226,102,45)" rx="2" ry="2" />
<text  x="841.47" y="239.5" ></text>
</g>
<g >
<title>vm_munmap (24 samples, 4.18%)</title><rect x="840.5" y="325" width="49.4" height="15.0" fill="rgb(239,92,10)" rx="2" ry="2" />
<text  x="843.52" y="335.5" >vm_m..</text>
</g>
<g >
<title>down_write_killable (1 samples, 0.17%)</title><rect x="772.7" y="197" width="2.0" height="15.0" fill="rgb(229,29,32)" rx="2" ry="2" />
<text  x="775.68" y="207.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (6 samples, 1.05%)</title><rect x="1175.6" y="341" width="12.3" height="15.0" fill="rgb(237,2,41)" rx="2" ry="2" />
<text  x="1178.61" y="351.5" ></text>
</g>
<g >
<title>propagate_entity_cfs_rq.isra.77 (1 samples, 0.17%)</title><rect x="1099.5" y="245" width="2.1" height="15.0" fill="rgb(218,169,17)" rx="2" ry="2" />
<text  x="1102.55" y="255.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.17%)</title><rect x="894.0" y="405" width="2.0" height="15.0" fill="rgb(223,225,3)" rx="2" ry="2" />
<text  x="896.97" y="415.5" ></text>
</g>
<g >
<title>__pthread_create_2_1 (1 samples, 0.17%)</title><rect x="824.1" y="357" width="2.0" height="15.0" fill="rgb(236,142,18)" rx="2" ry="2" />
<text  x="827.08" y="367.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 0.17%)</title><rect x="766.5" y="325" width="2.1" height="15.0" fill="rgb(207,205,26)" rx="2" ry="2" />
<text  x="769.52" y="335.5" ></text>
</g>
<g >
<title>page_fault (100 samples, 17.42%)</title><rect x="538.3" y="373" width="205.6" height="15.0" fill="rgb(239,12,29)" rx="2" ry="2" />
<text  x="541.33" y="383.5" >page_fault</text>
</g>
<g >
<title>__switch_to (1 samples, 0.17%)</title><rect x="822.0" y="405" width="2.1" height="15.0" fill="rgb(208,64,39)" rx="2" ry="2" />
<text  x="825.02" y="415.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (65 samples, 11.32%)</title><rect x="926.9" y="117" width="133.6" height="15.0" fill="rgb(223,80,8)" rx="2" ry="2" />
<text  x="929.86" y="127.5" >intel_pmu_enable..</text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.52%)</title><rect x="429.4" y="261" width="6.1" height="15.0" fill="rgb(232,81,40)" rx="2" ry="2" />
<text  x="432.37" y="271.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.17%)</title><rect x="1177.7" y="261" width="2.0" height="15.0" fill="rgb(228,21,5)" rx="2" ry="2" />
<text  x="1180.67" y="271.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.17%)</title><rect x="371.8" y="309" width="2.1" height="15.0" fill="rgb(237,192,11)" rx="2" ry="2" />
<text  x="374.81" y="319.5" ></text>
</g>
<g >
<title>__GI_munmap (4 samples, 0.70%)</title><rect x="758.3" y="325" width="8.2" height="15.0" fill="rgb(214,102,2)" rx="2" ry="2" />
<text  x="761.29" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (40 samples, 6.97%)</title><rect x="593.8" y="277" width="82.3" height="15.0" fill="rgb(227,105,51)" rx="2" ry="2" />
<text  x="596.83" y="287.5" >__alloc_p..</text>
</g>
<g >
<title>_int_malloc (1 samples, 0.17%)</title><rect x="820.0" y="309" width="2.0" height="15.0" fill="rgb(218,43,43)" rx="2" ry="2" />
<text  x="822.97" y="319.5" ></text>
</g>
<g >
<title>wake_up_q (5 samples, 0.87%)</title><rect x="733.6" y="277" width="10.3" height="15.0" fill="rgb(229,158,54)" rx="2" ry="2" />
<text  x="736.62" y="287.5" ></text>
</g>
<g >
<title>clear_page_erms (17 samples, 2.96%)</title><rect x="394.4" y="261" width="35.0" height="15.0" fill="rgb(217,74,10)" rx="2" ry="2" />
<text  x="397.43" y="271.5" >cl..</text>
</g>
<g >
<title>seq_vprintf (1 samples, 0.17%)</title><rect x="894.0" y="213" width="2.0" height="15.0" fill="rgb(229,25,47)" rx="2" ry="2" />
<text  x="896.97" y="223.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.17%)</title><rect x="785.0" y="85" width="2.1" height="15.0" fill="rgb(247,193,26)" rx="2" ry="2" />
<text  x="788.02" y="95.5" ></text>
</g>
<g >
<title>vm_munmap (4 samples, 0.70%)</title><rect x="758.3" y="261" width="8.2" height="15.0" fill="rgb(240,98,33)" rx="2" ry="2" />
<text  x="761.29" y="271.5" ></text>
</g>
<g >
<title>do_page_fault (49 samples, 8.54%)</title><rect x="365.6" y="357" width="100.8" height="15.0" fill="rgb(249,42,2)" rx="2" ry="2" />
<text  x="368.64" y="367.5" >do_page_fault</text>
</g>
<g >
<title>release_pages (12 samples, 2.09%)</title><rect x="865.2" y="197" width="24.7" height="15.0" fill="rgb(231,203,11)" rx="2" ry="2" />
<text  x="868.19" y="207.5" >r..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.17%)</title><rect x="824.1" y="229" width="2.0" height="15.0" fill="rgb(221,15,13)" rx="2" ry="2" />
<text  x="827.08" y="239.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.17%)</title><rect x="826.1" y="245" width="2.1" height="15.0" fill="rgb(208,91,12)" rx="2" ry="2" />
<text  x="829.13" y="255.5" ></text>
</g>
<g >
<title>LFQEntry_new (62 samples, 10.80%)</title><rect x="341.0" y="405" width="127.4" height="15.0" fill="rgb(253,182,31)" rx="2" ry="2" />
<text  x="343.98" y="415.5" >LFQEntry_new</text>
</g>
<g >
<title>unmap_region (4 samples, 0.70%)</title><rect x="758.3" y="229" width="8.2" height="15.0" fill="rgb(206,63,46)" rx="2" ry="2" />
<text  x="761.29" y="239.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.17%)</title><rect x="1177.7" y="277" width="2.0" height="15.0" fill="rgb(222,205,54)" rx="2" ry="2" />
<text  x="1180.67" y="287.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.17%)</title><rect x="766.5" y="261" width="2.1" height="15.0" fill="rgb(249,224,27)" rx="2" ry="2" />
<text  x="769.52" y="271.5" ></text>
</g>
<g >
<title>call_rwsem_down_write_failed_killable (1 samples, 0.17%)</title><rect x="838.5" y="325" width="2.0" height="15.0" fill="rgb(215,89,25)" rx="2" ry="2" />
<text  x="841.47" y="335.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.17%)</title><rect x="756.2" y="213" width="2.1" height="15.0" fill="rgb(210,181,39)" rx="2" ry="2" />
<text  x="759.24" y="223.5" ></text>
</g>
<g >
<title>main (1 samples, 0.17%)</title><rect x="824.1" y="373" width="2.0" height="15.0" fill="rgb(249,162,10)" rx="2" ry="2" />
<text  x="827.08" y="383.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 0.17%)</title><rect x="1187.9" y="389" width="2.1" height="15.0" fill="rgb(211,144,15)" rx="2" ry="2" />
<text  x="1190.94" y="399.5" ></text>
</g>
<g >
<title>perf_output_copy (1 samples, 0.17%)</title><rect x="776.8" y="133" width="2.1" height="15.0" fill="rgb(212,207,40)" rx="2" ry="2" />
<text  x="779.79" y="143.5" ></text>
</g>
<g >
<title>remote_function (65 samples, 11.32%)</title><rect x="926.9" y="197" width="133.6" height="15.0" fill="rgb(224,43,32)" rx="2" ry="2" />
<text  x="929.86" y="207.5" >remote_function</text>
</g>
<g >
<title>sysmalloc (13 samples, 2.26%)</title><rect x="772.7" y="293" width="26.7" height="15.0" fill="rgb(232,169,47)" rx="2" ry="2" />
<text  x="775.68" y="303.5" >s..</text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.70%)</title><rect x="758.3" y="293" width="8.2" height="15.0" fill="rgb(231,225,20)" rx="2" ry="2" />
<text  x="761.29" y="303.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.17%)</title><rect x="462.3" y="309" width="2.0" height="15.0" fill="rgb(231,43,21)" rx="2" ry="2" />
<text  x="465.26" y="319.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.17%)</title><rect x="1109.8" y="261" width="2.1" height="15.0" fill="rgb(209,17,51)" rx="2" ry="2" />
<text  x="1112.83" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (13 samples, 2.26%)</title><rect x="772.7" y="309" width="26.7" height="15.0" fill="rgb(221,228,5)" rx="2" ry="2" />
<text  x="775.68" y="319.5" >_..</text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.17%)</title><rect x="766.5" y="197" width="2.1" height="15.0" fill="rgb(206,40,47)" rx="2" ry="2" />
<text  x="769.52" y="207.5" ></text>
</g>
<g >
<title>down_read_trylock (2 samples, 0.35%)</title><rect x="367.7" y="325" width="4.1" height="15.0" fill="rgb(241,156,14)" rx="2" ry="2" />
<text  x="370.70" y="335.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.17%)</title><rect x="799.4" y="261" width="2.1" height="15.0" fill="rgb(240,212,31)" rx="2" ry="2" />
<text  x="802.41" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 13.94%)</title><rect x="896.0" y="357" width="164.5" height="15.0" fill="rgb(233,66,41)" rx="2" ry="2" />
<text  x="899.03" y="367.5" >entry_SYSCALL_64_afte..</text>
</g>
<g >
<title>mem_cgroup_try_charge (8 samples, 1.39%)</title><rect x="443.8" y="293" width="16.4" height="15.0" fill="rgb(214,189,44)" rx="2" ry="2" />
<text  x="446.76" y="303.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.17%)</title><rect x="756.2" y="229" width="2.1" height="15.0" fill="rgb(210,163,32)" rx="2" ry="2" />
<text  x="759.24" y="239.5" ></text>
</g>
<g >
<title>swapper (63 samples, 10.98%)</title><rect x="1060.5" y="421" width="129.5" height="15.0" fill="rgb(230,39,37)" rx="2" ry="2" />
<text  x="1063.49" y="431.5" >swapper</text>
</g>
<g >
<title>event_function (65 samples, 11.32%)</title><rect x="926.9" y="181" width="133.6" height="15.0" fill="rgb(242,73,38)" rx="2" ry="2" />
<text  x="929.86" y="191.5" >event_function</text>
</g>
<g >
<title>migration_cpu_stop (1 samples, 0.17%)</title><rect x="1099.5" y="341" width="2.1" height="15.0" fill="rgb(235,161,46)" rx="2" ry="2" />
<text  x="1102.55" y="351.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.17%)</title><rect x="889.9" y="389" width="2.0" height="15.0" fill="rgb(220,13,2)" rx="2" ry="2" />
<text  x="892.86" y="399.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 13.94%)</title><rect x="896.0" y="389" width="164.5" height="15.0" fill="rgb(245,213,49)" rx="2" ry="2" />
<text  x="899.03" y="399.5" >perf_evsel__run_ioctl</text>
</g>
<g >
<title>call_cpuidle (32 samples, 5.57%)</title><rect x="1107.8" y="341" width="65.8" height="15.0" fill="rgb(235,143,42)" rx="2" ry="2" />
<text  x="1110.77" y="351.5" >call_cp..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.17%)</title><rect x="894.0" y="341" width="2.0" height="15.0" fill="rgb(227,206,32)" rx="2" ry="2" />
<text  x="896.97" y="351.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.17%)</title><rect x="371.8" y="325" width="2.1" height="15.0" fill="rgb(227,149,31)" rx="2" ry="2" />
<text  x="374.81" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (8 samples, 1.39%)</title><rect x="659.6" y="261" width="16.5" height="15.0" fill="rgb(208,220,6)" rx="2" ry="2" />
<text  x="662.62" y="271.5" ></text>
</g>
<g >
<title>rwsem_down_write_failed_killable (1 samples, 0.17%)</title><rect x="772.7" y="165" width="2.0" height="15.0" fill="rgb(226,83,34)" rx="2" ry="2" />
<text  x="775.68" y="175.5" ></text>
</g>
<g >
<title>handle_mm_fault (44 samples, 7.67%)</title><rect x="373.9" y="325" width="90.4" height="15.0" fill="rgb(237,196,33)" rx="2" ry="2" />
<text  x="376.87" y="335.5" >handle_mm_..</text>
</g>
<g >
<title>vfs_read (1 samples, 0.17%)</title><rect x="894.0" y="309" width="2.0" height="15.0" fill="rgb(249,3,46)" rx="2" ry="2" />
<text  x="896.97" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.17%)</title><rect x="766.5" y="309" width="2.1" height="15.0" fill="rgb(231,30,9)" rx="2" ry="2" />
<text  x="769.52" y="319.5" ></text>
</g>
<g >
<title>_vm_normal_page (1 samples, 0.17%)</title><rect x="830.2" y="245" width="2.1" height="15.0" fill="rgb(213,57,48)" rx="2" ry="2" />
<text  x="833.24" y="255.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.17%)</title><rect x="785.0" y="69" width="2.1" height="15.0" fill="rgb(240,191,44)" rx="2" ry="2" />
<text  x="788.02" y="79.5" ></text>
</g>
<g >
<title>native_irq_return_iret (5 samples, 0.87%)</title><rect x="353.3" y="373" width="10.3" height="15.0" fill="rgb(206,64,27)" rx="2" ry="2" />
<text  x="356.31" y="383.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.17%)</title><rect x="889.9" y="357" width="2.0" height="15.0" fill="rgb(250,73,44)" rx="2" ry="2" />
<text  x="892.86" y="367.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.17%)</title><rect x="756.2" y="197" width="2.1" height="15.0" fill="rgb(252,6,40)" rx="2" ry="2" />
<text  x="759.24" y="207.5" ></text>
</g>
<g >
<title>free_unref_page_commit (3 samples, 0.52%)</title><rect x="879.6" y="165" width="6.1" height="15.0" fill="rgb(214,150,44)" rx="2" ry="2" />
<text  x="882.58" y="175.5" ></text>
</g>
<g >
<title>proc_pid_status (1 samples, 0.17%)</title><rect x="894.0" y="245" width="2.0" height="15.0" fill="rgb(244,17,36)" rx="2" ry="2" />
<text  x="896.97" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24 samples, 4.18%)</title><rect x="840.5" y="373" width="49.4" height="15.0" fill="rgb(230,189,54)" rx="2" ry="2" />
<text  x="843.52" y="383.5" >entr..</text>
</g>
<g >
<title>cpu_startup_entry (41 samples, 7.14%)</title><rect x="1103.7" y="373" width="84.2" height="15.0" fill="rgb(214,110,6)" rx="2" ry="2" />
<text  x="1106.66" y="383.5" >cpu_start..</text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.17%)</title><rect x="1175.6" y="309" width="2.1" height="15.0" fill="rgb(252,181,29)" rx="2" ry="2" />
<text  x="1178.61" y="319.5" ></text>
</g>
<g >
<title>__do_page_fault (99 samples, 17.25%)</title><rect x="540.4" y="341" width="203.5" height="15.0" fill="rgb(228,165,2)" rx="2" ry="2" />
<text  x="543.38" y="351.5" >__do_page_fault</text>
</g>
<g >
<title>_raw_spin_lock (10 samples, 1.74%)</title><rect x="573.3" y="293" width="20.5" height="15.0" fill="rgb(236,146,30)" rx="2" ry="2" />
<text  x="576.28" y="303.5" ></text>
</g>
<g >
<title>sys_madvise (1 samples, 0.17%)</title><rect x="756.2" y="277" width="2.1" height="15.0" fill="rgb(247,91,15)" rx="2" ry="2" />
<text  x="759.24" y="287.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.17%)</title><rect x="776.8" y="181" width="2.1" height="15.0" fill="rgb(254,107,52)" rx="2" ry="2" />
<text  x="779.79" y="191.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.17%)</title><rect x="1109.8" y="181" width="2.1" height="15.0" fill="rgb(225,116,49)" rx="2" ry="2" />
<text  x="1112.83" y="191.5" ></text>
</g>
<g >
<title>__handle_mm_fault (83 samples, 14.46%)</title><rect x="558.9" y="309" width="170.6" height="15.0" fill="rgb(226,113,22)" rx="2" ry="2" />
<text  x="561.89" y="319.5" >__handle_mm_fault</text>
</g>
<g >
<title>sys_mprotect (1 samples, 0.17%)</title><rect x="838.5" y="373" width="2.0" height="15.0" fill="rgb(222,35,24)" rx="2" ry="2" />
<text  x="841.47" y="383.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.17%)</title><rect x="951.5" y="85" width="2.1" height="15.0" fill="rgb(230,208,13)" rx="2" ry="2" />
<text  x="954.53" y="95.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.35%)</title><rect x="439.7" y="261" width="4.1" height="15.0" fill="rgb(240,12,30)" rx="2" ry="2" />
<text  x="442.65" y="271.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.17%)</title><rect x="889.9" y="373" width="2.0" height="15.0" fill="rgb(247,99,40)" rx="2" ry="2" />
<text  x="892.86" y="383.5" ></text>
</g>
<g >
<title>__GI___mprotect (8 samples, 1.39%)</title><rect x="772.7" y="277" width="16.4" height="15.0" fill="rgb(251,76,2)" rx="2" ry="2" />
<text  x="775.68" y="287.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.17%)</title><rect x="776.8" y="165" width="2.1" height="15.0" fill="rgb(239,196,54)" rx="2" ry="2" />
<text  x="779.79" y="175.5" ></text>
</g>
<g >
<title>alloc_pages_vma (20 samples, 3.48%)</title><rect x="394.4" y="293" width="41.1" height="15.0" fill="rgb(216,208,32)" rx="2" ry="2" />
<text  x="397.43" y="303.5" >all..</text>
</g>
<g >
<title>switch_mm (1 samples, 0.17%)</title><rect x="838.5" y="245" width="2.0" height="15.0" fill="rgb(211,169,20)" rx="2" ry="2" />
<text  x="841.47" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.17%)</title><rect x="756.2" y="309" width="2.1" height="15.0" fill="rgb(253,100,0)" rx="2" ry="2" />
<text  x="759.24" y="319.5" ></text>
</g>
<g >
<title>x86_pmu_enable (65 samples, 11.32%)</title><rect x="926.9" y="133" width="133.6" height="15.0" fill="rgb(251,137,14)" rx="2" ry="2" />
<text  x="929.86" y="143.5" >x86_pmu_enable</text>
</g>
<g >
<title>page_add_new_anon_rmap (7 samples, 1.22%)</title><rect x="715.1" y="293" width="14.4" height="15.0" fill="rgb(217,83,14)" rx="2" ry="2" />
<text  x="718.12" y="303.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (1 samples, 0.17%)</title><rect x="766.5" y="149" width="2.1" height="15.0" fill="rgb(207,52,8)" rx="2" ry="2" />
<text  x="769.52" y="159.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.17%)</title><rect x="826.1" y="293" width="2.1" height="15.0" fill="rgb(240,134,0)" rx="2" ry="2" />
<text  x="829.13" y="303.5" ></text>
</g>
<g >
<title>rwsem_wake (4 samples, 0.70%)</title><rect x="778.9" y="165" width="8.2" height="15.0" fill="rgb(226,183,28)" rx="2" ry="2" />
<text  x="781.85" y="175.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.17%)</title><rect x="544.5" y="325" width="2.1" height="15.0" fill="rgb(216,7,25)" rx="2" ry="2" />
<text  x="547.49" y="335.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.17%)</title><rect x="464.3" y="325" width="2.1" height="15.0" fill="rgb(206,213,5)" rx="2" ry="2" />
<text  x="467.32" y="335.5" ></text>
</g>
<g >
<title>__task_rq_lock (3 samples, 0.52%)</title><rect x="733.6" y="245" width="6.2" height="15.0" fill="rgb(228,107,15)" rx="2" ry="2" />
<text  x="736.62" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.17%)</title><rect x="894.0" y="357" width="2.0" height="15.0" fill="rgb(215,169,47)" rx="2" ry="2" />
<text  x="896.97" y="367.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (32 samples, 5.57%)</title><rect x="1107.8" y="309" width="65.8" height="15.0" fill="rgb(213,129,27)" rx="2" ry="2" />
<text  x="1110.77" y="319.5" >cpuidle..</text>
</g>
<g >
<title>handle_mm_fault (86 samples, 14.98%)</title><rect x="554.8" y="325" width="176.8" height="15.0" fill="rgb(206,83,2)" rx="2" ry="2" />
<text  x="557.77" y="335.5" >handle_mm_fault</text>
</g>
<g >
<title>call_rwsem_wake (4 samples, 0.70%)</title><rect x="778.9" y="181" width="8.2" height="15.0" fill="rgb(250,149,47)" rx="2" ry="2" />
<text  x="781.85" y="191.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.17%)</title><rect x="764.5" y="165" width="2.0" height="15.0" fill="rgb(237,179,15)" rx="2" ry="2" />
<text  x="767.46" y="175.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.52%)</title><rect x="793.2" y="277" width="6.2" height="15.0" fill="rgb(237,9,5)" rx="2" ry="2" />
<text  x="796.24" y="287.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.52%)</title><rect x="445.8" y="277" width="6.2" height="15.0" fill="rgb(241,174,14)" rx="2" ry="2" />
<text  x="448.82" y="287.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.17%)</title><rect x="834.4" y="165" width="2.0" height="15.0" fill="rgb(247,127,54)" rx="2" ry="2" />
<text  x="837.36" y="175.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.35%)</title><rect x="711.0" y="277" width="4.1" height="15.0" fill="rgb(254,121,18)" rx="2" ry="2" />
<text  x="714.01" y="287.5" ></text>
</g>
<g >
<title>call_cpuidle (1 samples, 0.17%)</title><rect x="1187.9" y="293" width="2.1" height="15.0" fill="rgb(250,41,0)" rx="2" ry="2" />
<text  x="1190.94" y="303.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (6 samples, 1.05%)</title><rect x="698.7" y="277" width="12.3" height="15.0" fill="rgb(253,37,16)" rx="2" ry="2" />
<text  x="701.68" y="287.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (3 samples, 0.52%)</title><rect x="733.6" y="213" width="6.2" height="15.0" fill="rgb(234,26,8)" rx="2" ry="2" />
<text  x="736.62" y="223.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (79 samples, 13.76%)</title><rect x="898.1" y="277" width="162.4" height="15.0" fill="rgb(222,161,15)" rx="2" ry="2" />
<text  x="901.08" y="287.5" >perf_event_for_each_..</text>
</g>
<g >
<title>start_secondary (41 samples, 7.14%)</title><rect x="1103.7" y="389" width="84.2" height="15.0" fill="rgb(214,59,25)" rx="2" ry="2" />
<text  x="1106.66" y="399.5" >start_sec..</text>
</g>
<g >
<title>seq_read (1 samples, 0.17%)</title><rect x="894.0" y="277" width="2.0" height="15.0" fill="rgb(223,49,42)" rx="2" ry="2" />
<text  x="896.97" y="287.5" ></text>
</g>
<g >
<title>generic_exec_single (69 samples, 12.02%)</title><rect x="918.6" y="213" width="141.9" height="15.0" fill="rgb(254,22,14)" rx="2" ry="2" />
<text  x="921.64" y="223.5" >generic_exec_single</text>
</g>
<g >
<title>switch_mm_irqs_off (1 samples, 0.17%)</title><rect x="546.6" y="213" width="2.0" height="15.0" fill="rgb(230,85,29)" rx="2" ry="2" />
<text  x="549.55" y="223.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.17%)</title><rect x="896.0" y="277" width="2.1" height="15.0" fill="rgb(245,15,31)" rx="2" ry="2" />
<text  x="899.03" y="287.5" ></text>
</g>
<g >
<title>LFQEntry_new (23 samples, 4.01%)</title><rect x="772.7" y="341" width="47.3" height="15.0" fill="rgb(232,222,43)" rx="2" ry="2" />
<text  x="775.68" y="351.5" >LFQE..</text>
</g>
<g >
<title>do_syscall_64 (7 samples, 1.22%)</title><rect x="826.1" y="389" width="14.4" height="15.0" fill="rgb(217,38,33)" rx="2" ry="2" />
<text  x="829.13" y="399.5" ></text>
</g>
<g >
<title>__ioctl (80 samples, 13.94%)</title><rect x="896.0" y="373" width="164.5" height="15.0" fill="rgb(219,168,42)" rx="2" ry="2" />
<text  x="899.03" y="383.5" >__ioctl</text>
</g>
<g >
<title>vsnprintf (1 samples, 0.17%)</title><rect x="894.0" y="197" width="2.0" height="15.0" fill="rgb(233,20,4)" rx="2" ry="2" />
<text  x="896.97" y="207.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.17%)</title><rect x="1181.8" y="277" width="2.0" height="15.0" fill="rgb(235,153,1)" rx="2" ry="2" />
<text  x="1184.78" y="287.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (1 samples, 0.17%)</title><rect x="826.1" y="277" width="2.1" height="15.0" fill="rgb(218,185,2)" rx="2" ry="2" />
<text  x="829.13" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.17%)</title><rect x="824.1" y="245" width="2.0" height="15.0" fill="rgb(248,7,2)" rx="2" ry="2" />
<text  x="827.08" y="255.5" ></text>
</g>
<g >
<title>up_write (4 samples, 0.70%)</title><rect x="778.9" y="197" width="8.2" height="15.0" fill="rgb(252,52,7)" rx="2" ry="2" />
<text  x="781.85" y="207.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.17%)</title><rect x="764.5" y="149" width="2.0" height="15.0" fill="rgb(254,21,35)" rx="2" ry="2" />
<text  x="767.46" y="159.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (8 samples, 1.39%)</title><rect x="676.1" y="293" width="16.4" height="15.0" fill="rgb(216,174,43)" rx="2" ry="2" />
<text  x="679.06" y="303.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (65 samples, 11.32%)</title><rect x="926.9" y="101" width="133.6" height="15.0" fill="rgb(231,217,16)" rx="2" ry="2" />
<text  x="929.86" y="111.5" >__intel_pmu_enab..</text>
</g>
<g >
<title>__calloc (1 samples, 0.17%)</title><rect x="820.0" y="325" width="2.0" height="15.0" fill="rgb(207,78,6)" rx="2" ry="2" />
<text  x="822.97" y="335.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.17%)</title><rect x="1101.6" y="325" width="2.1" height="15.0" fill="rgb(232,156,25)" rx="2" ry="2" />
<text  x="1104.60" y="335.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.17%)</title><rect x="824.1" y="389" width="2.0" height="15.0" fill="rgb(217,162,11)" rx="2" ry="2" />
<text  x="827.08" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter (32 samples, 5.57%)</title><rect x="1107.8" y="325" width="65.8" height="15.0" fill="rgb(217,28,43)" rx="2" ry="2" />
<text  x="1110.77" y="335.5" >cpuidle..</text>
</g>
<g >
<title>tick_program_event (1 samples, 0.17%)</title><rect x="1181.8" y="293" width="2.0" height="15.0" fill="rgb(218,171,34)" rx="2" ry="2" />
<text  x="1184.78" y="303.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.17%)</title><rect x="1101.6" y="341" width="2.1" height="15.0" fill="rgb(206,119,1)" rx="2" ry="2" />
<text  x="1104.60" y="351.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.17%)</title><rect x="826.1" y="261" width="2.1" height="15.0" fill="rgb(234,97,0)" rx="2" ry="2" />
<text  x="829.13" y="271.5" ></text>
</g>
<g >
<title>do_page_fault (99 samples, 17.25%)</title><rect x="540.4" y="357" width="203.5" height="15.0" fill="rgb(222,198,50)" rx="2" ry="2" />
<text  x="543.38" y="367.5" >do_page_fault</text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.17%)</title><rect x="384.1" y="293" width="2.1" height="15.0" fill="rgb(216,172,8)" rx="2" ry="2" />
<text  x="387.15" y="303.5" ></text>
</g>
<g >
<title>mprotect_fixup (2 samples, 0.35%)</title><rect x="774.7" y="197" width="4.2" height="15.0" fill="rgb(241,56,15)" rx="2" ry="2" />
<text  x="777.74" y="207.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.17%)</title><rect x="1177.7" y="245" width="2.0" height="15.0" fill="rgb(241,40,10)" rx="2" ry="2" />
<text  x="1180.67" y="255.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.17%)</title><rect x="727.5" y="277" width="2.0" height="15.0" fill="rgb(251,5,19)" rx="2" ry="2" />
<text  x="730.46" y="287.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.17%)</title><rect x="1179.7" y="277" width="2.1" height="15.0" fill="rgb(226,181,25)" rx="2" ry="2" />
<text  x="1182.72" y="287.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 13.94%)</title><rect x="896.0" y="405" width="164.5" height="15.0" fill="rgb(228,70,22)" rx="2" ry="2" />
<text  x="899.03" y="415.5" >perf_evsel__enable_cpu</text>
</g>
<g >
<title>do_exit (6 samples, 1.05%)</title><rect x="826.1" y="341" width="12.4" height="15.0" fill="rgb(212,217,36)" rx="2" ry="2" />
<text  x="829.13" y="351.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (3 samples, 0.52%)</title><rect x="832.3" y="245" width="6.2" height="15.0" fill="rgb(249,199,5)" rx="2" ry="2" />
<text  x="835.30" y="255.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.17%)</title><rect x="766.5" y="229" width="2.1" height="15.0" fill="rgb(209,40,7)" rx="2" ry="2" />
<text  x="769.52" y="239.5" ></text>
</g>
<g >
<title>native_irq_return_iret (2 samples, 0.35%)</title><rect x="789.1" y="277" width="4.1" height="15.0" fill="rgb(235,125,43)" rx="2" ry="2" />
<text  x="792.13" y="287.5" ></text>
</g>
<g >
<title>perf (81 samples, 14.11%)</title><rect x="894.0" y="421" width="166.5" height="15.0" fill="rgb(230,159,16)" rx="2" ry="2" />
<text  x="896.97" y="431.5" >perf</text>
</g>
<g >
<title>schedule (1 samples, 0.17%)</title><rect x="1101.6" y="357" width="2.1" height="15.0" fill="rgb(253,68,11)" rx="2" ry="2" />
<text  x="1104.60" y="367.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.17%)</title><rect x="552.7" y="325" width="2.1" height="15.0" fill="rgb(206,145,30)" rx="2" ry="2" />
<text  x="555.72" y="335.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (2 samples, 0.35%)</title><rect x="595.9" y="261" width="4.1" height="15.0" fill="rgb(239,50,25)" rx="2" ry="2" />
<text  x="598.89" y="271.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.17%)</title><rect x="834.4" y="197" width="2.0" height="15.0" fill="rgb(252,214,41)" rx="2" ry="2" />
<text  x="837.36" y="207.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.17%)</title><rect x="466.4" y="357" width="2.0" height="15.0" fill="rgb(228,30,2)" rx="2" ry="2" />
<text  x="469.38" y="367.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.17%)</title><rect x="690.5" y="245" width="2.0" height="15.0" fill="rgb(228,47,20)" rx="2" ry="2" />
<text  x="693.45" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.17%)</title><rect x="766.5" y="293" width="2.1" height="15.0" fill="rgb(207,34,23)" rx="2" ry="2" />
<text  x="769.52" y="303.5" ></text>
</g>
<g >
<title>write_func (25 samples, 4.36%)</title><rect x="770.6" y="373" width="51.4" height="15.0" fill="rgb(211,44,11)" rx="2" ry="2" />
<text  x="773.63" y="383.5" >write..</text>
</g>
<g >
<title>__dec_node_state (1 samples, 0.17%)</title><rect x="863.1" y="197" width="2.1" height="15.0" fill="rgb(224,229,25)" rx="2" ry="2" />
<text  x="866.14" y="207.5" ></text>
</g>
<g >
<title>unmap_vmas (24 samples, 4.18%)</title><rect x="840.5" y="277" width="49.4" height="15.0" fill="rgb(216,93,17)" rx="2" ry="2" />
<text  x="843.52" y="287.5" >unma..</text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.17%)</title><rect x="1109.8" y="101" width="2.1" height="15.0" fill="rgb(209,209,14)" rx="2" ry="2" />
<text  x="1112.83" y="111.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.17%)</title><rect x="756.2" y="181" width="2.1" height="15.0" fill="rgb(217,36,49)" rx="2" ry="2" />
<text  x="759.24" y="191.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.17%)</title><rect x="756.2" y="149" width="2.1" height="15.0" fill="rgb(250,117,22)" rx="2" ry="2" />
<text  x="759.24" y="159.5" ></text>
</g>
<g >
<title>secondary_startup_64 (42 samples, 7.32%)</title><rect x="1103.7" y="405" width="86.3" height="15.0" fill="rgb(225,167,12)" rx="2" ry="2" />
<text  x="1106.66" y="415.5" >secondary_..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.17%)</title><rect x="684.3" y="261" width="2.0" height="15.0" fill="rgb(210,183,15)" rx="2" ry="2" />
<text  x="687.29" y="271.5" ></text>
</g>
<g >
<title>pfn_pte (1 samples, 0.17%)</title><rect x="460.2" y="293" width="2.1" height="15.0" fill="rgb(233,150,38)" rx="2" ry="2" />
<text  x="463.21" y="303.5" ></text>
</g>
<g >
<title>event_function_call (77 samples, 13.41%)</title><rect x="902.2" y="245" width="158.3" height="15.0" fill="rgb(246,79,51)" rx="2" ry="2" />
<text  x="905.20" y="255.5" >event_function_call</text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.17%)</title><rect x="797.4" y="197" width="2.0" height="15.0" fill="rgb(211,40,0)" rx="2" ry="2" />
<text  x="800.35" y="207.5" ></text>
</g>
<g >
<title>up_read (6 samples, 1.05%)</title><rect x="731.6" y="325" width="12.3" height="15.0" fill="rgb(253,34,29)" rx="2" ry="2" />
<text  x="734.57" y="335.5" ></text>
</g>
<g >
<title>reweight_entity (1 samples, 0.17%)</title><rect x="785.0" y="37" width="2.1" height="15.0" fill="rgb(247,151,35)" rx="2" ry="2" />
<text  x="788.02" y="47.5" ></text>
</g>
<g >
<title>unmap_vmas (5 samples, 0.87%)</title><rect x="828.2" y="293" width="10.3" height="15.0" fill="rgb(232,192,41)" rx="2" ry="2" />
<text  x="831.19" y="303.5" ></text>
</g>
<g >
<title>LindPipe_piperead (137 samples, 23.87%)</title><rect x="468.4" y="405" width="281.7" height="15.0" fill="rgb(223,21,16)" rx="2" ry="2" />
<text  x="471.43" y="415.5" >LindPipe_piperead</text>
</g>
<g >
<title>__GI___clone (1 samples, 0.17%)</title><rect x="824.1" y="325" width="2.0" height="15.0" fill="rgb(224,47,48)" rx="2" ry="2" />
<text  x="827.08" y="335.5" ></text>
</g>
<g >
<title>page_fault (50 samples, 8.71%)</title><rect x="363.6" y="373" width="102.8" height="15.0" fill="rgb(220,87,0)" rx="2" ry="2" />
<text  x="366.59" y="383.5" >page_fault</text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.70%)</title><rect x="386.2" y="293" width="8.2" height="15.0" fill="rgb(253,169,36)" rx="2" ry="2" />
<text  x="389.20" y="303.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.35%)</title><rect x="762.4" y="181" width="4.1" height="15.0" fill="rgb(219,174,0)" rx="2" ry="2" />
<text  x="765.40" y="191.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.35%)</title><rect x="1107.8" y="277" width="4.1" height="15.0" fill="rgb(246,43,11)" rx="2" ry="2" />
<text  x="1110.77" y="287.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.17%)</title><rect x="1177.7" y="293" width="2.0" height="15.0" fill="rgb(205,215,25)" rx="2" ry="2" />
<text  x="1180.67" y="303.5" ></text>
</g>
<g >
<title>call_rwsem_down_write_failed_killable (1 samples, 0.17%)</title><rect x="772.7" y="181" width="2.0" height="15.0" fill="rgb(228,12,42)" rx="2" ry="2" />
<text  x="775.68" y="191.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.17%)</title><rect x="838.5" y="293" width="2.0" height="15.0" fill="rgb(207,64,11)" rx="2" ry="2" />
<text  x="841.47" y="303.5" ></text>
</g>
<g >
<title>mmput (6 samples, 1.05%)</title><rect x="826.1" y="325" width="12.4" height="15.0" fill="rgb(213,102,54)" rx="2" ry="2" />
<text  x="829.13" y="335.5" ></text>
</g>
</g>
</svg>
