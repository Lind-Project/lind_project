<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>_perf_ioctl (72 samples, 0.73%)</title><rect x="43.3" y="485" width="8.6" height="15.0" fill="rgb(253,101,27)" rx="2" ry="2" />
<text  x="46.30" y="495.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (6 samples, 0.06%)</title><rect x="1071.4" y="549" width="0.7" height="15.0" fill="rgb(209,210,28)" rx="2" ry="2" />
<text  x="1074.41" y="559.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.01%)</title><rect x="18.6" y="485" width="0.1" height="15.0" fill="rgb(250,80,5)" rx="2" ry="2" />
<text  x="21.62" y="495.5" ></text>
</g>
<g >
<title>__d_free (1 samples, 0.01%)</title><rect x="35.9" y="245" width="0.1" height="15.0" fill="rgb(209,126,10)" rx="2" ry="2" />
<text  x="38.87" y="255.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 0.65%)</title><rect x="44.3" y="389" width="7.6" height="15.0" fill="rgb(254,55,25)" rx="2" ry="2" />
<text  x="47.26" y="399.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_tuple (3 samples, 0.03%)</title><rect x="1077.6" y="533" width="0.4" height="15.0" fill="rgb(223,99,42)" rx="2" ry="2" />
<text  x="1080.64" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.09%)</title><rect x="1022.8" y="485" width="1.1" height="15.0" fill="rgb(229,203,10)" rx="2" ry="2" />
<text  x="1025.78" y="495.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.01%)</title><rect x="33.6" y="501" width="0.1" height="15.0" fill="rgb(206,88,23)" rx="2" ry="2" />
<text  x="36.60" y="511.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.02%)</title><rect x="674.1" y="325" width="0.2" height="15.0" fill="rgb(250,75,14)" rx="2" ry="2" />
<text  x="677.09" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.01%)</title><rect x="697.4" y="245" width="0.2" height="15.0" fill="rgb(246,159,49)" rx="2" ry="2" />
<text  x="700.44" y="255.5" ></text>
</g>
<g >
<title>__brelse (16 samples, 0.16%)</title><rect x="747.2" y="245" width="1.9" height="15.0" fill="rgb(250,45,47)" rx="2" ry="2" />
<text  x="750.16" y="255.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (3 samples, 0.03%)</title><rect x="1072.1" y="549" width="0.4" height="15.0" fill="rgb(218,222,10)" rx="2" ry="2" />
<text  x="1075.13" y="559.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_bytes (10 samples, 0.10%)</title><rect x="1058.1" y="565" width="1.2" height="15.0" fill="rgb(224,225,6)" rx="2" ry="2" />
<text  x="1061.12" y="575.5" ></text>
</g>
<g >
<title>try_to_release_page (4 samples, 0.04%)</title><rect x="1027.0" y="213" width="0.5" height="15.0" fill="rgb(218,24,15)" rx="2" ry="2" />
<text  x="1029.97" y="223.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="1060.3" y="453" width="0.1" height="15.0" fill="rgb(227,108,12)" rx="2" ry="2" />
<text  x="1063.27" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.06%)</title><rect x="65.2" y="517" width="0.7" height="15.0" fill="rgb(245,213,32)" rx="2" ry="2" />
<text  x="68.22" y="527.5" ></text>
</g>
<g >
<title>iput.part.0 (102 samples, 1.04%)</title><rect x="997.4" y="469" width="12.2" height="15.0" fill="rgb(221,120,4)" rx="2" ry="2" />
<text  x="1000.39" y="479.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="528.8" y="453" width="0.1" height="15.0" fill="rgb(232,160,9)" rx="2" ry="2" />
<text  x="531.79" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (16 samples, 0.16%)</title><rect x="1059.4" y="565" width="2.0" height="15.0" fill="rgb(244,55,42)" rx="2" ry="2" />
<text  x="1062.43" y="575.5" ></text>
</g>
<g >
<title>_copy_to_iter (1 samples, 0.01%)</title><rect x="1105.2" y="421" width="0.1" height="15.0" fill="rgb(223,31,3)" rx="2" ry="2" />
<text  x="1108.19" y="431.5" ></text>
</g>
<g >
<title>account_page_cleaned (6 samples, 0.06%)</title><rect x="1005.4" y="85" width="0.7" height="15.0" fill="rgb(219,19,10)" rx="2" ry="2" />
<text  x="1008.41" y="95.5" ></text>
</g>
<g >
<title>CheckMemoryAccess (1 samples, 0.01%)</title><rect x="69.4" y="565" width="0.1" height="15.0" fill="rgb(252,195,37)" rx="2" ry="2" />
<text  x="72.41" y="575.5" ></text>
</g>
<g >
<title>do_iter_write (1,546 samples, 15.69%)</title><rect x="636.4" y="421" width="185.1" height="15.0" fill="rgb(216,38,27)" rx="2" ry="2" />
<text  x="639.35" y="431.5" >do_iter_write</text>
</g>
<g >
<title>iov_iter_init (3 samples, 0.03%)</title><rect x="620.4" y="469" width="0.4" height="15.0" fill="rgb(213,62,2)" rx="2" ry="2" />
<text  x="623.42" y="479.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (102 samples, 1.04%)</title><rect x="997.4" y="341" width="12.2" height="15.0" fill="rgb(247,1,45)" rx="2" ry="2" />
<text  x="1000.39" y="351.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="1059.7" y="405" width="0.1" height="15.0" fill="rgb(246,38,22)" rx="2" ry="2" />
<text  x="1062.67" y="415.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (2 samples, 0.02%)</title><rect x="1168.8" y="373" width="0.2" height="15.0" fill="rgb(220,207,32)" rx="2" ry="2" />
<text  x="1171.80" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter (24 samples, 0.24%)</title><rect x="35.9" y="421" width="2.8" height="15.0" fill="rgb(216,178,25)" rx="2" ry="2" />
<text  x="38.87" y="431.5" ></text>
</g>
<g >
<title>ext4_evict_inode (102 samples, 1.04%)</title><rect x="997.4" y="261" width="12.2" height="15.0" fill="rgb(216,158,35)" rx="2" ry="2" />
<text  x="1000.39" y="271.5" ></text>
</g>
<g >
<title>should_failslab (1 samples, 0.01%)</title><rect x="679.8" y="245" width="0.2" height="15.0" fill="rgb(212,148,31)" rx="2" ry="2" />
<text  x="682.84" y="255.5" ></text>
</g>
<g >
<title>__ioctl (80 samples, 0.81%)</title><rect x="42.9" y="565" width="9.6" height="15.0" fill="rgb(239,33,14)" rx="2" ry="2" />
<text  x="45.94" y="575.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (2 samples, 0.02%)</title><rect x="1075.5" y="533" width="0.2" height="15.0" fill="rgb(245,202,13)" rx="2" ry="2" />
<text  x="1078.49" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="1077.2" y="421" width="0.1" height="15.0" fill="rgb(216,135,12)" rx="2" ry="2" />
<text  x="1080.16" y="431.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="19.3" y="389" width="0.3" height="15.0" fill="rgb(231,215,30)" rx="2" ry="2" />
<text  x="22.34" y="399.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="659.6" y="309" width="0.1" height="15.0" fill="rgb(209,90,42)" rx="2" ry="2" />
<text  x="662.59" y="319.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.01%)</title><rect x="1105.4" y="485" width="0.2" height="15.0" fill="rgb(229,133,4)" rx="2" ry="2" />
<text  x="1108.43" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (2 samples, 0.02%)</title><rect x="1037.8" y="501" width="0.2" height="15.0" fill="rgb(247,32,11)" rx="2" ry="2" />
<text  x="1040.75" y="511.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.01%)</title><rect x="697.1" y="197" width="0.1" height="15.0" fill="rgb(254,31,28)" rx="2" ry="2" />
<text  x="700.09" y="207.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (42 samples, 0.43%)</title><rect x="1042.3" y="565" width="5.0" height="15.0" fill="rgb(253,82,42)" rx="2" ry="2" />
<text  x="1045.31" y="575.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.01%)</title><rect x="1104.7" y="549" width="0.1" height="15.0" fill="rgb(230,167,12)" rx="2" ry="2" />
<text  x="1107.71" y="559.5" ></text>
</g>
<g >
<title>menu_select (7 samples, 0.07%)</title><rect x="38.7" y="405" width="0.9" height="15.0" fill="rgb(214,24,47)" rx="2" ry="2" />
<text  x="41.75" y="415.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (8 samples, 0.08%)</title><rect x="56.0" y="277" width="1.0" height="15.0" fill="rgb(219,15,48)" rx="2" ry="2" />
<text  x="59.00" y="287.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (6 samples, 0.06%)</title><rect x="666.3" y="277" width="0.7" height="15.0" fill="rgb(253,203,18)" rx="2" ry="2" />
<text  x="669.30" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.01%)</title><rect x="11.6" y="501" width="0.1" height="15.0" fill="rgb(228,169,26)" rx="2" ry="2" />
<text  x="14.56" y="511.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (1 samples, 0.01%)</title><rect x="309.3" y="549" width="0.2" height="15.0" fill="rgb(244,158,24)" rx="2" ry="2" />
<text  x="312.34" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="42.5" y="421" width="0.1" height="15.0" fill="rgb(246,186,0)" rx="2" ry="2" />
<text  x="45.46" y="431.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.01%)</title><rect x="1181.0" y="357" width="0.1" height="15.0" fill="rgb(211,42,21)" rx="2" ry="2" />
<text  x="1184.02" y="367.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.01%)</title><rect x="736.6" y="245" width="0.1" height="15.0" fill="rgb(220,0,0)" rx="2" ry="2" />
<text  x="739.61" y="255.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.01%)</title><rect x="521.4" y="453" width="0.1" height="15.0" fill="rgb(239,18,16)" rx="2" ry="2" />
<text  x="524.36" y="463.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (4 samples, 0.04%)</title><rect x="1139.6" y="421" width="0.4" height="15.0" fill="rgb(240,174,1)" rx="2" ry="2" />
<text  x="1142.57" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="11.7" y="565" width="0.3" height="15.0" fill="rgb(243,39,54)" rx="2" ry="2" />
<text  x="14.68" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.04%)</title><rect x="1029.4" y="533" width="0.4" height="15.0" fill="rgb(244,72,10)" rx="2" ry="2" />
<text  x="1032.37" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="1067.2" y="421" width="0.1" height="15.0" fill="rgb(210,37,34)" rx="2" ry="2" />
<text  x="1070.22" y="431.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (1 samples, 0.01%)</title><rect x="1077.2" y="549" width="0.1" height="15.0" fill="rgb(243,105,34)" rx="2" ry="2" />
<text  x="1080.16" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.04%)</title><rect x="1173.7" y="325" width="0.5" height="15.0" fill="rgb(244,112,32)" rx="2" ry="2" />
<text  x="1176.71" y="335.5" ></text>
</g>
<g >
<title>kick_ilb (4 samples, 0.04%)</title><rect x="34.8" y="421" width="0.5" height="15.0" fill="rgb(227,102,17)" rx="2" ry="2" />
<text  x="37.80" y="431.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1066.5" y="533" width="0.1" height="15.0" fill="rgb(247,86,3)" rx="2" ry="2" />
<text  x="1069.50" y="543.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.01%)</title><rect x="41.9" y="421" width="0.1" height="15.0" fill="rgb(247,61,5)" rx="2" ry="2" />
<text  x="44.86" y="431.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.01%)</title><rect x="627.5" y="437" width="0.1" height="15.0" fill="rgb(252,8,0)" rx="2" ry="2" />
<text  x="630.49" y="447.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (8 samples, 0.08%)</title><rect x="1076.0" y="501" width="0.9" height="15.0" fill="rgb(238,199,28)" rx="2" ry="2" />
<text  x="1078.96" y="511.5" ></text>
</g>
<g >
<title>mutex_lock (12 samples, 0.12%)</title><rect x="612.8" y="469" width="1.4" height="15.0" fill="rgb(232,70,37)" rx="2" ry="2" />
<text  x="615.76" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (2 samples, 0.02%)</title><rect x="39.6" y="421" width="0.2" height="15.0" fill="rgb(210,149,39)" rx="2" ry="2" />
<text  x="42.59" y="431.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (4 samples, 0.04%)</title><rect x="584.8" y="405" width="0.5" height="15.0" fill="rgb(213,173,45)" rx="2" ry="2" />
<text  x="587.85" y="415.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.01%)</title><rect x="727.6" y="245" width="0.2" height="15.0" fill="rgb(230,62,40)" rx="2" ry="2" />
<text  x="730.63" y="255.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (62 samples, 0.63%)</title><rect x="1002.1" y="213" width="7.4" height="15.0" fill="rgb(233,103,51)" rx="2" ry="2" />
<text  x="1005.06" y="223.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (1 samples, 0.01%)</title><rect x="596.0" y="373" width="0.1" height="15.0" fill="rgb(212,151,41)" rx="2" ry="2" />
<text  x="598.99" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="659.7" y="309" width="0.1" height="15.0" fill="rgb(241,226,35)" rx="2" ry="2" />
<text  x="662.71" y="319.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.11%)</title><rect x="63.1" y="565" width="1.3" height="15.0" fill="rgb(238,6,3)" rx="2" ry="2" />
<text  x="66.06" y="575.5" ></text>
</g>
<g >
<title>generic_exec_single (64 samples, 0.65%)</title><rect x="44.3" y="405" width="7.6" height="15.0" fill="rgb(226,117,2)" rx="2" ry="2" />
<text  x="47.26" y="415.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.01%)</title><rect x="1136.9" y="453" width="0.2" height="15.0" fill="rgb(209,116,34)" rx="2" ry="2" />
<text  x="1139.94" y="463.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (2 samples, 0.02%)</title><rect x="248.5" y="565" width="0.2" height="15.0" fill="rgb(222,218,8)" rx="2" ry="2" />
<text  x="251.49" y="575.5" ></text>
</g>
<g >
<title>ovl_write_iter (79 samples, 0.80%)</title><rect x="52.8" y="453" width="9.4" height="15.0" fill="rgb(212,56,50)" rx="2" ry="2" />
<text  x="55.76" y="463.5" ></text>
</g>
<g >
<title>ovl_llseek (2 samples, 0.02%)</title><rect x="543.5" y="501" width="0.3" height="15.0" fill="rgb(229,110,45)" rx="2" ry="2" />
<text  x="546.52" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (2 samples, 0.02%)</title><rect x="1069.3" y="533" width="0.2" height="15.0" fill="rgb(225,210,21)" rx="2" ry="2" />
<text  x="1072.26" y="543.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.01%)</title><rect x="1186.2" y="373" width="0.1" height="15.0" fill="rgb(227,173,9)" rx="2" ry="2" />
<text  x="1189.17" y="383.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (2 samples, 0.02%)</title><rect x="1070.9" y="517" width="0.3" height="15.0" fill="rgb(208,153,26)" rx="2" ry="2" />
<text  x="1073.93" y="527.5" ></text>
</g>
<g >
<title>ovl_override_creds (8 samples, 0.08%)</title><rect x="631.9" y="437" width="1.0" height="15.0" fill="rgb(253,213,0)" rx="2" ry="2" />
<text  x="634.92" y="447.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="465.9" y="405" width="0.1" height="15.0" fill="rgb(234,46,21)" rx="2" ry="2" />
<text  x="468.90" y="415.5" ></text>
</g>
<g >
<title>shmem_get_unmapped_area (1 samples, 0.01%)</title><rect x="18.3" y="453" width="0.1" height="15.0" fill="rgb(218,183,7)" rx="2" ry="2" />
<text  x="21.27" y="463.5" ></text>
</g>
<g >
<title>NaClLog (14 samples, 0.14%)</title><rect x="123.9" y="565" width="1.7" height="15.0" fill="rgb(224,30,51)" rx="2" ry="2" />
<text  x="126.92" y="575.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.01%)</title><rect x="331.5" y="437" width="0.1" height="15.0" fill="rgb(225,52,48)" rx="2" ry="2" />
<text  x="334.50" y="447.5" ></text>
</g>
<g >
<title>from_kgid (1 samples, 0.01%)</title><rect x="60.7" y="229" width="0.1" height="15.0" fill="rgb(239,58,15)" rx="2" ry="2" />
<text  x="63.67" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="471.8" y="533" width="0.1" height="15.0" fill="rgb(236,117,4)" rx="2" ry="2" />
<text  x="474.77" y="543.5" ></text>
</g>
<g >
<title>cpu_startup_entry (327 samples, 3.32%)</title><rect x="1150.8" y="469" width="39.2" height="15.0" fill="rgb(208,39,32)" rx="2" ry="2" />
<text  x="1153.83" y="479.5" >cpu..</text>
</g>
<g >
<title>page_mapping (2 samples, 0.02%)</title><rect x="697.6" y="245" width="0.2" height="15.0" fill="rgb(231,105,32)" rx="2" ry="2" />
<text  x="700.56" y="255.5" ></text>
</g>
<g >
<title>iput.part.0 (8 samples, 0.08%)</title><rect x="1026.6" y="357" width="1.0" height="15.0" fill="rgb(224,89,27)" rx="2" ry="2" />
<text  x="1029.61" y="367.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (7 samples, 0.07%)</title><rect x="682.7" y="261" width="0.8" height="15.0" fill="rgb(253,3,27)" rx="2" ry="2" />
<text  x="685.71" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.10%)</title><rect x="832.7" y="565" width="1.2" height="15.0" fill="rgb(232,6,28)" rx="2" ry="2" />
<text  x="835.68" y="575.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (7 samples, 0.07%)</title><rect x="1074.5" y="549" width="0.9" height="15.0" fill="rgb(208,152,18)" rx="2" ry="2" />
<text  x="1077.53" y="559.5" ></text>
</g>
<g >
<title>dispatcher (40 samples, 0.41%)</title><rect x="1021.0" y="565" width="4.8" height="15.0" fill="rgb(226,100,2)" rx="2" ry="2" />
<text  x="1023.98" y="575.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.07%)</title><rect x="1076.1" y="469" width="0.8" height="15.0" fill="rgb(229,42,20)" rx="2" ry="2" />
<text  x="1079.08" y="479.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.02%)</title><rect x="653.5" y="341" width="0.2" height="15.0" fill="rgb(206,18,54)" rx="2" ry="2" />
<text  x="656.48" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="1024.6" y="469" width="0.1" height="15.0" fill="rgb(206,156,16)" rx="2" ry="2" />
<text  x="1027.58" y="479.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="1077.2" y="517" width="0.1" height="15.0" fill="rgb(222,224,7)" rx="2" ry="2" />
<text  x="1080.16" y="527.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.01%)</title><rect x="519.2" y="453" width="0.1" height="15.0" fill="rgb(220,0,16)" rx="2" ry="2" />
<text  x="522.21" y="463.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (3 samples, 0.03%)</title><rect x="1059.9" y="485" width="0.4" height="15.0" fill="rgb(218,111,29)" rx="2" ry="2" />
<text  x="1062.91" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="1024.6" y="437" width="0.1" height="15.0" fill="rgb(235,64,15)" rx="2" ry="2" />
<text  x="1027.58" y="447.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.02%)</title><rect x="519.3" y="469" width="0.3" height="15.0" fill="rgb(244,50,17)" rx="2" ry="2" />
<text  x="522.32" y="479.5" ></text>
</g>
<g >
<title>swapper (906 samples, 9.20%)</title><rect x="1081.5" y="581" width="108.5" height="15.0" fill="rgb(250,210,48)" rx="2" ry="2" />
<text  x="1084.47" y="591.5" >swapper</text>
</g>
<g >
<title>kmem_cache_alloc (26 samples, 0.26%)</title><rect x="663.9" y="293" width="3.1" height="15.0" fill="rgb(247,190,52)" rx="2" ry="2" />
<text  x="666.91" y="303.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (1 samples, 0.01%)</title><rect x="11.8" y="357" width="0.1" height="15.0" fill="rgb(213,218,10)" rx="2" ry="2" />
<text  x="14.80" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.04%)</title><rect x="736.7" y="261" width="0.5" height="15.0" fill="rgb(228,157,24)" rx="2" ry="2" />
<text  x="739.73" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (8 samples, 0.08%)</title><rect x="1139.2" y="437" width="1.0" height="15.0" fill="rgb(216,63,18)" rx="2" ry="2" />
<text  x="1142.21" y="447.5" ></text>
</g>
<g >
<title>NaClXCondVarBroadcast (160 samples, 1.62%)</title><rect x="248.7" y="565" width="19.2" height="15.0" fill="rgb(242,66,27)" rx="2" ry="2" />
<text  x="251.73" y="575.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.01%)</title><rect x="1105.4" y="533" width="0.2" height="15.0" fill="rgb(247,176,14)" rx="2" ry="2" />
<text  x="1108.43" y="543.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.01%)</title><rect x="56.4" y="261" width="0.1" height="15.0" fill="rgb(232,80,44)" rx="2" ry="2" />
<text  x="59.36" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="1029.4" y="517" width="0.1" height="15.0" fill="rgb(212,36,50)" rx="2" ry="2" />
<text  x="1032.37" y="527.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (5 samples, 0.05%)</title><rect x="829.3" y="501" width="0.6" height="15.0" fill="rgb(223,175,3)" rx="2" ry="2" />
<text  x="832.33" y="511.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="1020.7" y="517" width="0.2" height="15.0" fill="rgb(212,150,29)" rx="2" ry="2" />
<text  x="1023.74" y="527.5" ></text>
</g>
<g >
<title>iput (102 samples, 1.04%)</title><rect x="997.4" y="325" width="12.2" height="15.0" fill="rgb(244,60,1)" rx="2" ry="2" />
<text  x="1000.39" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (25 samples, 0.25%)</title><rect x="1069.5" y="565" width="3.0" height="15.0" fill="rgb(244,227,34)" rx="2" ry="2" />
<text  x="1072.50" y="575.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (2 samples, 0.02%)</title><rect x="828.0" y="517" width="0.2" height="15.0" fill="rgb(220,190,47)" rx="2" ry="2" />
<text  x="831.01" y="527.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for  (4 samples, 0.04%)</title><rect x="1077.5" y="549" width="0.5" height="15.0" fill="rgb(219,209,0)" rx="2" ry="2" />
<text  x="1080.52" y="559.5" ></text>
</g>
<g >
<title>sched_clock_cpu (6 samples, 0.06%)</title><rect x="1185.6" y="389" width="0.7" height="15.0" fill="rgb(208,26,39)" rx="2" ry="2" />
<text  x="1188.57" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (12 samples, 0.12%)</title><rect x="548.4" y="549" width="1.5" height="15.0" fill="rgb(220,47,20)" rx="2" ry="2" />
<text  x="551.43" y="559.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="660.0" y="293" width="0.1" height="15.0" fill="rgb(219,196,26)" rx="2" ry="2" />
<text  x="662.95" y="303.5" ></text>
</g>
<g >
<title>task_work_run (8 samples, 0.08%)</title><rect x="1026.6" y="485" width="1.0" height="15.0" fill="rgb(244,81,52)" rx="2" ry="2" />
<text  x="1029.61" y="495.5" ></text>
</g>
<g >
<title>do_shared_fault (2 samples, 0.02%)</title><rect x="833.9" y="437" width="0.2" height="15.0" fill="rgb(225,96,7)" rx="2" ry="2" />
<text  x="836.88" y="447.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.01%)</title><rect x="11.9" y="405" width="0.1" height="15.0" fill="rgb(208,77,18)" rx="2" ry="2" />
<text  x="14.92" y="415.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.12%)</title><rect x="1055.5" y="549" width="1.4" height="15.0" fill="rgb(248,140,31)" rx="2" ry="2" />
<text  x="1058.48" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (102 samples, 1.04%)</title><rect x="997.4" y="549" width="12.2" height="15.0" fill="rgb(231,206,48)" rx="2" ry="2" />
<text  x="1000.39" y="559.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.01%)</title><rect x="42.7" y="389" width="0.1" height="15.0" fill="rgb(241,145,33)" rx="2" ry="2" />
<text  x="45.70" y="399.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.11%)</title><rect x="1022.8" y="533" width="1.3" height="15.0" fill="rgb(239,145,44)" rx="2" ry="2" />
<text  x="1025.78" y="543.5" ></text>
</g>
<g >
<title>override_creds (2 samples, 0.02%)</title><rect x="529.0" y="469" width="0.3" height="15.0" fill="rgb(236,133,54)" rx="2" ry="2" />
<text  x="532.03" y="479.5" ></text>
</g>
<g >
<title>_cond_resched (3 samples, 0.03%)</title><rect x="521.0" y="453" width="0.4" height="15.0" fill="rgb(248,187,4)" rx="2" ry="2" />
<text  x="524.00" y="463.5" ></text>
</g>
<g >
<title>native_write_cr4 (1 samples, 0.01%)</title><rect x="1107.8" y="421" width="0.1" height="15.0" fill="rgb(220,17,42)" rx="2" ry="2" />
<text  x="1110.83" y="431.5" ></text>
</g>
<g >
<title>ext4_claim_free_clusters (2 samples, 0.02%)</title><rect x="683.1" y="245" width="0.2" height="15.0" fill="rgb(252,186,3)" rx="2" ry="2" />
<text  x="686.07" y="255.5" ></text>
</g>
<g >
<title>__do_sys_newlstat (1 samples, 0.01%)</title><rect x="18.5" y="517" width="0.1" height="15.0" fill="rgb(229,67,4)" rx="2" ry="2" />
<text  x="21.50" y="527.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="1173.5" y="341" width="0.1" height="15.0" fill="rgb(219,172,44)" rx="2" ry="2" />
<text  x="1176.47" y="351.5" ></text>
</g>
<g >
<title>ext4_inode_csum (1 samples, 0.01%)</title><rect x="60.5" y="213" width="0.2" height="15.0" fill="rgb(248,34,10)" rx="2" ry="2" />
<text  x="63.55" y="223.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.01%)</title><rect x="596.0" y="453" width="0.1" height="15.0" fill="rgb(208,53,14)" rx="2" ry="2" />
<text  x="598.99" y="463.5" ></text>
</g>
<g >
<title>workingset_update_node (1 samples, 0.01%)</title><rect x="56.5" y="261" width="0.1" height="15.0" fill="rgb(212,79,27)" rx="2" ry="2" />
<text  x="59.48" y="271.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (39 samples, 0.40%)</title><rect x="733.7" y="293" width="4.7" height="15.0" fill="rgb(245,202,4)" rx="2" ry="2" />
<text  x="736.74" y="303.5" ></text>
</g>
<g >
<title>prepend_name (1 samples, 0.01%)</title><rect x="18.4" y="373" width="0.1" height="15.0" fill="rgb(250,13,39)" rx="2" ry="2" />
<text  x="21.38" y="383.5" ></text>
</g>
<g >
<title>pagevec_lookup_range (1 samples, 0.01%)</title><rect x="1106.5" y="325" width="0.1" height="15.0" fill="rgb(222,160,22)" rx="2" ry="2" />
<text  x="1109.51" y="335.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.05%)</title><rect x="1058.2" y="549" width="0.6" height="15.0" fill="rgb(237,203,41)" rx="2" ry="2" />
<text  x="1061.24" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="682.2" y="261" width="0.2" height="15.0" fill="rgb(209,80,24)" rx="2" ry="2" />
<text  x="685.23" y="271.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.01%)</title><rect x="55.8" y="277" width="0.1" height="15.0" fill="rgb(241,200,11)" rx="2" ry="2" />
<text  x="58.76" y="287.5" ></text>
</g>
<g >
<title>std::thread::panicking (3 samples, 0.03%)</title><rect x="68.7" y="533" width="0.4" height="15.0" fill="rgb(210,153,23)" rx="2" ry="2" />
<text  x="71.69" y="543.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 0.65%)</title><rect x="44.3" y="357" width="7.6" height="15.0" fill="rgb(248,156,35)" rx="2" ry="2" />
<text  x="47.26" y="367.5" ></text>
</g>
<g >
<title>stop_this_handle (2 samples, 0.02%)</title><rect x="728.8" y="309" width="0.3" height="15.0" fill="rgb(225,3,31)" rx="2" ry="2" />
<text  x="731.83" y="319.5" ></text>
</g>
<g >
<title>udp_recvmsg (1 samples, 0.01%)</title><rect x="1105.2" y="437" width="0.1" height="15.0" fill="rgb(220,224,25)" rx="2" ry="2" />
<text  x="1108.19" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="1077.2" y="389" width="0.1" height="15.0" fill="rgb(253,38,40)" rx="2" ry="2" />
<text  x="1080.16" y="399.5" ></text>
</g>
<g >
<title>__inc_zone_page_state (1 samples, 0.01%)</title><rect x="737.3" y="245" width="0.2" height="15.0" fill="rgb(226,62,8)" rx="2" ry="2" />
<text  x="740.33" y="255.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.01%)</title><rect x="1149.6" y="469" width="0.2" height="15.0" fill="rgb(219,143,8)" rx="2" ry="2" />
<text  x="1152.63" y="479.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (2 samples, 0.02%)</title><rect x="1037.8" y="421" width="0.2" height="15.0" fill="rgb(251,5,9)" rx="2" ry="2" />
<text  x="1040.75" y="431.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.09%)</title><rect x="1033.1" y="485" width="1.1" height="15.0" fill="rgb(224,10,22)" rx="2" ry="2" />
<text  x="1036.08" y="495.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.01%)</title><rect x="38.9" y="389" width="0.1" height="15.0" fill="rgb(234,208,7)" rx="2" ry="2" />
<text  x="41.87" y="399.5" ></text>
</g>
<g >
<title>vfs_write (4 samples, 0.04%)</title><rect x="62.3" y="501" width="0.5" height="15.0" fill="rgb(242,177,44)" rx="2" ry="2" />
<text  x="65.35" y="511.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (198 samples, 2.01%)</title><rect x="760.9" y="229" width="23.7" height="15.0" fill="rgb(253,174,40)" rx="2" ry="2" />
<text  x="763.93" y="239.5" >e..</text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (1 samples, 0.01%)</title><rect x="1071.2" y="517" width="0.1" height="15.0" fill="rgb(238,179,5)" rx="2" ry="2" />
<text  x="1074.17" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.15%)</title><rect x="1026.0" y="565" width="1.8" height="15.0" fill="rgb(247,36,29)" rx="2" ry="2" />
<text  x="1029.01" y="575.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (1 samples, 0.01%)</title><rect x="11.9" y="453" width="0.1" height="15.0" fill="rgb(214,114,52)" rx="2" ry="2" />
<text  x="14.92" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.01%)</title><rect x="11.6" y="517" width="0.1" height="15.0" fill="rgb(225,107,12)" rx="2" ry="2" />
<text  x="14.56" y="527.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.01%)</title><rect x="693.5" y="261" width="0.1" height="15.0" fill="rgb(232,83,3)" rx="2" ry="2" />
<text  x="696.49" y="271.5" ></text>
</g>
<g >
<title>vfs_iter_write (78 samples, 0.79%)</title><rect x="52.9" y="437" width="9.3" height="15.0" fill="rgb(234,137,14)" rx="2" ry="2" />
<text  x="55.88" y="447.5" ></text>
</g>
<g >
<title>std::thread::panicking (7 samples, 0.07%)</title><rect x="1056.9" y="501" width="0.9" height="15.0" fill="rgb(217,139,27)" rx="2" ry="2" />
<text  x="1059.92" y="511.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (13 samples, 0.13%)</title><rect x="1067.5" y="549" width="1.5" height="15.0" fill="rgb(233,37,11)" rx="2" ry="2" />
<text  x="1070.46" y="559.5" ></text>
</g>
<g >
<title>__writeback_single_inode (8 samples, 0.08%)</title><rect x="1105.7" y="405" width="0.9" height="15.0" fill="rgb(246,15,48)" rx="2" ry="2" />
<text  x="1108.67" y="415.5" ></text>
</g>
<g >
<title>napi_poll (2 samples, 0.02%)</title><rect x="19.3" y="341" width="0.3" height="15.0" fill="rgb(210,181,16)" rx="2" ry="2" />
<text  x="22.34" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (5 samples, 0.05%)</title><rect x="1140.2" y="469" width="0.6" height="15.0" fill="rgb(243,183,15)" rx="2" ry="2" />
<text  x="1143.17" y="479.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="1070.9" y="533" width="0.4" height="15.0" fill="rgb(227,91,51)" rx="2" ry="2" />
<text  x="1073.93" y="543.5" ></text>
</g>
<g >
<title>_int_realloc (8 samples, 0.08%)</title><rect x="1017.3" y="565" width="0.9" height="15.0" fill="rgb(252,118,44)" rx="2" ry="2" />
<text  x="1020.27" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.03%)</title><rect x="1024.3" y="485" width="0.4" height="15.0" fill="rgb(209,67,36)" rx="2" ry="2" />
<text  x="1027.34" y="495.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.01%)</title><rect x="11.9" y="325" width="0.1" height="15.0" fill="rgb(227,91,20)" rx="2" ry="2" />
<text  x="14.92" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4 samples, 0.04%)</title><rect x="1029.4" y="565" width="0.4" height="15.0" fill="rgb(250,105,13)" rx="2" ry="2" />
<text  x="1032.37" y="575.5" ></text>
</g>
<g >
<title>get_page_from_freelist (82 samples, 0.83%)</title><rect x="699.1" y="261" width="9.8" height="15.0" fill="rgb(230,85,8)" rx="2" ry="2" />
<text  x="702.12" y="271.5" ></text>
</g>
<g >
<title>mutex_unlock (3 samples, 0.03%)</title><rect x="554.1" y="485" width="0.3" height="15.0" fill="rgb(248,79,42)" rx="2" ry="2" />
<text  x="557.06" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u16&gt;::swap_bytes (2 samples, 0.02%)</title><rect x="1075.7" y="501" width="0.3" height="15.0" fill="rgb(216,192,37)" rx="2" ry="2" />
<text  x="1078.73" y="511.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="54.6" y="229" width="0.1" height="15.0" fill="rgb(230,124,51)" rx="2" ry="2" />
<text  x="57.56" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="522.6" y="357" width="0.1" height="15.0" fill="rgb(248,66,43)" rx="2" ry="2" />
<text  x="525.56" y="367.5" ></text>
</g>
<g >
<title>__inc_zone_page_state (1 samples, 0.01%)</title><rect x="736.5" y="261" width="0.1" height="15.0" fill="rgb(251,41,19)" rx="2" ry="2" />
<text  x="739.49" y="271.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.01%)</title><rect x="18.1" y="501" width="0.2" height="15.0" fill="rgb(225,153,50)" rx="2" ry="2" />
<text  x="21.15" y="511.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.01%)</title><rect x="18.7" y="517" width="0.2" height="15.0" fill="rgb(250,117,21)" rx="2" ry="2" />
<text  x="21.74" y="527.5" ></text>
</g>
<g >
<title>alloc_set_pte (2 samples, 0.02%)</title><rect x="833.9" y="405" width="0.2" height="15.0" fill="rgb(233,162,28)" rx="2" ry="2" />
<text  x="836.88" y="415.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="471.8" y="421" width="0.1" height="15.0" fill="rgb(212,210,20)" rx="2" ry="2" />
<text  x="474.77" y="431.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (1 samples, 0.01%)</title><rect x="96.8" y="565" width="0.2" height="15.0" fill="rgb(226,77,36)" rx="2" ry="2" />
<text  x="99.84" y="575.5" ></text>
</g>
<g >
<title>xas_create_range (1 samples, 0.01%)</title><rect x="1037.9" y="245" width="0.1" height="15.0" fill="rgb(232,158,45)" rx="2" ry="2" />
<text  x="1040.87" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="1106.0" y="277" width="0.2" height="15.0" fill="rgb(232,124,17)" rx="2" ry="2" />
<text  x="1109.03" y="287.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.01%)</title><rect x="1106.3" y="309" width="0.1" height="15.0" fill="rgb(224,85,47)" rx="2" ry="2" />
<text  x="1109.27" y="319.5" ></text>
</g>
<g >
<title>vfs_read (305 samples, 3.10%)</title><rect x="554.4" y="485" width="36.6" height="15.0" fill="rgb(213,189,45)" rx="2" ry="2" />
<text  x="557.42" y="495.5" >vfs..</text>
</g>
<g >
<title>jbd2_journal_stop (1 samples, 0.01%)</title><rect x="803.3" y="325" width="0.2" height="15.0" fill="rgb(249,134,8)" rx="2" ry="2" />
<text  x="806.33" y="335.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="1029.6" y="501" width="0.1" height="15.0" fill="rgb(253,11,48)" rx="2" ry="2" />
<text  x="1032.61" y="511.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.01%)</title><rect x="551.9" y="469" width="0.1" height="15.0" fill="rgb(214,48,20)" rx="2" ry="2" />
<text  x="554.91" y="479.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (14 samples, 0.14%)</title><rect x="57.4" y="277" width="1.7" height="15.0" fill="rgb(241,89,8)" rx="2" ry="2" />
<text  x="60.43" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (1 samples, 0.01%)</title><rect x="18.1" y="533" width="0.2" height="15.0" fill="rgb(221,84,27)" rx="2" ry="2" />
<text  x="21.15" y="543.5" ></text>
</g>
<g >
<title>cpu_startup_entry (369 samples, 3.75%)</title><rect x="1106.6" y="533" width="44.2" height="15.0" fill="rgb(206,63,46)" rx="2" ry="2" />
<text  x="1109.63" y="543.5" >cpu_..</text>
</g>
<g >
<title>page_mapping (1 samples, 0.01%)</title><rect x="697.3" y="229" width="0.1" height="15.0" fill="rgb(212,73,27)" rx="2" ry="2" />
<text  x="700.33" y="239.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (5 samples, 0.05%)</title><rect x="1026.9" y="261" width="0.6" height="15.0" fill="rgb(244,195,3)" rx="2" ry="2" />
<text  x="1029.85" y="271.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.03%)</title><rect x="33.7" y="501" width="0.4" height="15.0" fill="rgb(242,100,28)" rx="2" ry="2" />
<text  x="36.72" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.09%)</title><rect x="1063.5" y="485" width="1.1" height="15.0" fill="rgb(244,200,22)" rx="2" ry="2" />
<text  x="1066.51" y="495.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.01%)</title><rect x="1026.7" y="197" width="0.2" height="15.0" fill="rgb(221,175,34)" rx="2" ry="2" />
<text  x="1029.73" y="207.5" ></text>
</g>
<g >
<title>__schedule (9 samples, 0.09%)</title><rect x="40.3" y="421" width="1.1" height="15.0" fill="rgb(214,106,48)" rx="2" ry="2" />
<text  x="43.31" y="431.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.01%)</title><rect x="1066.6" y="517" width="0.1" height="15.0" fill="rgb(243,43,16)" rx="2" ry="2" />
<text  x="1069.62" y="527.5" ></text>
</g>
<g >
<title>get_cpu_device (2 samples, 0.02%)</title><rect x="1138.3" y="437" width="0.2" height="15.0" fill="rgb(212,44,30)" rx="2" ry="2" />
<text  x="1141.25" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::result::Result&lt;usize,std::io::error::Error&gt;&gt; (1 samples, 0.01%)</title><rect x="1070.8" y="549" width="0.1" height="15.0" fill="rgb(244,105,19)" rx="2" ry="2" />
<text  x="1073.81" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="1139.1" y="421" width="0.1" height="15.0" fill="rgb(209,133,14)" rx="2" ry="2" />
<text  x="1142.09" y="431.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.01%)</title><rect x="706.9" y="213" width="0.1" height="15.0" fill="rgb(230,95,48)" rx="2" ry="2" />
<text  x="709.91" y="223.5" ></text>
</g>
<g >
<title>update_rq_clock (6 samples, 0.06%)</title><rect x="1185.6" y="405" width="0.7" height="15.0" fill="rgb(252,81,53)" rx="2" ry="2" />
<text  x="1188.57" y="415.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (9 samples, 0.09%)</title><rect x="1024.7" y="549" width="1.1" height="15.0" fill="rgb(240,90,51)" rx="2" ry="2" />
<text  x="1027.70" y="559.5" ></text>
</g>
<g >
<title>__slab_alloc (7 samples, 0.07%)</title><rect x="678.2" y="245" width="0.8" height="15.0" fill="rgb(222,11,21)" rx="2" ry="2" />
<text  x="681.16" y="255.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.01%)</title><rect x="1107.7" y="421" width="0.1" height="15.0" fill="rgb(252,109,48)" rx="2" ry="2" />
<text  x="1110.71" y="431.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (14 samples, 0.14%)</title><rect x="828.2" y="517" width="1.7" height="15.0" fill="rgb(223,144,34)" rx="2" ry="2" />
<text  x="831.25" y="527.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="465.9" y="437" width="0.1" height="15.0" fill="rgb(208,185,11)" rx="2" ry="2" />
<text  x="468.90" y="447.5" ></text>
</g>
<g >
<title>xas_load (29 samples, 0.29%)</title><rect x="711.3" y="277" width="3.5" height="15.0" fill="rgb(247,72,45)" rx="2" ry="2" />
<text  x="714.34" y="287.5" ></text>
</g>
<g >
<title>generic_write_checks (4 samples, 0.04%)</title><rect x="643.9" y="341" width="0.5" height="15.0" fill="rgb(206,195,5)" rx="2" ry="2" />
<text  x="646.90" y="351.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (64 samples, 0.65%)</title><rect x="730.7" y="309" width="7.7" height="15.0" fill="rgb(253,25,13)" rx="2" ry="2" />
<text  x="733.75" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.09%)</title><rect x="1063.5" y="533" width="1.1" height="15.0" fill="rgb(233,226,46)" rx="2" ry="2" />
<text  x="1066.51" y="543.5" ></text>
</g>
<g >
<title>do_idle (362 samples, 3.67%)</title><rect x="1106.6" y="517" width="43.4" height="15.0" fill="rgb(213,28,44)" rx="2" ry="2" />
<text  x="1109.63" y="527.5" >do_i..</text>
</g>
<g >
<title>flush_smp_call_function_from_idle (11 samples, 0.11%)</title><rect x="1188.7" y="453" width="1.3" height="15.0" fill="rgb(205,165,1)" rx="2" ry="2" />
<text  x="1191.68" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (3 samples, 0.03%)</title><rect x="69.1" y="533" width="0.3" height="15.0" fill="rgb(207,139,8)" rx="2" ry="2" />
<text  x="72.05" y="543.5" ></text>
</g>
<g >
<title>ovl_file_accessed.part.0 (9 samples, 0.09%)</title><rect x="558.9" y="437" width="1.0" height="15.0" fill="rgb(220,121,11)" rx="2" ry="2" />
<text  x="561.85" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.01%)</title><rect x="11.9" y="533" width="0.1" height="15.0" fill="rgb(234,143,49)" rx="2" ry="2" />
<text  x="14.92" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (7 samples, 0.07%)</title><rect x="1056.9" y="453" width="0.9" height="15.0" fill="rgb(222,90,9)" rx="2" ry="2" />
<text  x="1059.92" y="463.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.01%)</title><rect x="11.9" y="421" width="0.1" height="15.0" fill="rgb(235,154,44)" rx="2" ry="2" />
<text  x="14.92" y="431.5" ></text>
</g>
<g >
<title>__wake_up (23 samples, 0.23%)</title><rect x="726.1" y="277" width="2.7" height="15.0" fill="rgb(251,75,47)" rx="2" ry="2" />
<text  x="729.07" y="287.5" ></text>
</g>
<g >
<title>ovl_override_creds (12 samples, 0.12%)</title><rect x="532.0" y="469" width="1.5" height="15.0" fill="rgb(238,173,33)" rx="2" ry="2" />
<text  x="535.02" y="479.5" ></text>
</g>
<g >
<title>revert_creds (4 samples, 0.04%)</title><rect x="587.7" y="453" width="0.5" height="15.0" fill="rgb(242,167,27)" rx="2" ry="2" />
<text  x="590.72" y="463.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (5 samples, 0.05%)</title><rect x="184.9" y="565" width="0.6" height="15.0" fill="rgb(248,32,17)" rx="2" ry="2" />
<text  x="187.89" y="575.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.01%)</title><rect x="53.7" y="341" width="0.1" height="15.0" fill="rgb(211,169,34)" rx="2" ry="2" />
<text  x="56.72" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (1 samples, 0.01%)</title><rect x="33.5" y="485" width="0.1" height="15.0" fill="rgb(238,62,0)" rx="2" ry="2" />
<text  x="36.48" y="495.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="1058.8" y="469" width="0.2" height="15.0" fill="rgb(227,111,1)" rx="2" ry="2" />
<text  x="1061.84" y="479.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.01%)</title><rect x="35.9" y="261" width="0.1" height="15.0" fill="rgb(238,105,3)" rx="2" ry="2" />
<text  x="38.87" y="271.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.01%)</title><rect x="331.5" y="421" width="0.1" height="15.0" fill="rgb(228,164,48)" rx="2" ry="2" />
<text  x="334.50" y="431.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="19.6" y="293" width="0.1" height="15.0" fill="rgb(242,47,24)" rx="2" ry="2" />
<text  x="22.58" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;usize,rustposix::interface::file::EmulatedFile&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="1066.6" y="549" width="0.1" height="15.0" fill="rgb(223,72,12)" rx="2" ry="2" />
<text  x="1069.62" y="559.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="65.9" y="517" width="0.2" height="15.0" fill="rgb(236,114,27)" rx="2" ry="2" />
<text  x="68.94" y="527.5" ></text>
</g>
<g >
<title>ext4_fc_track_inode (11 samples, 0.11%)</title><rect x="744.3" y="261" width="1.3" height="15.0" fill="rgb(247,184,51)" rx="2" ry="2" />
<text  x="747.28" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="1077.2" y="453" width="0.1" height="15.0" fill="rgb(230,165,44)" rx="2" ry="2" />
<text  x="1080.16" y="463.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (4 samples, 0.04%)</title><rect x="12.0" y="501" width="0.5" height="15.0" fill="rgb(220,221,1)" rx="2" ry="2" />
<text  x="15.04" y="511.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (2 samples, 0.02%)</title><rect x="39.3" y="341" width="0.3" height="15.0" fill="rgb(252,55,20)" rx="2" ry="2" />
<text  x="42.35" y="351.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u16 (1 samples, 0.01%)</title><rect x="1077.2" y="533" width="0.1" height="15.0" fill="rgb(242,81,32)" rx="2" ry="2" />
<text  x="1080.16" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="331.5" y="533" width="0.1" height="15.0" fill="rgb(246,90,40)" rx="2" ry="2" />
<text  x="334.50" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="1066.5" y="549" width="0.1" height="15.0" fill="rgb(222,10,53)" rx="2" ry="2" />
<text  x="1069.50" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (57 samples, 0.58%)</title><rect x="471.9" y="565" width="6.8" height="15.0" fill="rgb(243,111,6)" rx="2" ry="2" />
<text  x="474.89" y="575.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="1020.6" y="533" width="0.3" height="15.0" fill="rgb(254,72,19)" rx="2" ry="2" />
<text  x="1023.62" y="543.5" ></text>
</g>
<g >
<title>current_time (3 samples, 0.03%)</title><rect x="559.3" y="389" width="0.4" height="15.0" fill="rgb(249,25,26)" rx="2" ry="2" />
<text  x="562.33" y="399.5" ></text>
</g>
<g >
<title>collect_percpu_times (1 samples, 0.01%)</title><rect x="1105.6" y="485" width="0.1" height="15.0" fill="rgb(216,88,19)" rx="2" ry="2" />
<text  x="1108.55" y="495.5" ></text>
</g>
<g >
<title>reweight_entity (1 samples, 0.01%)</title><rect x="66.8" y="309" width="0.1" height="15.0" fill="rgb(242,124,19)" rx="2" ry="2" />
<text  x="69.78" y="319.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.01%)</title><rect x="584.7" y="325" width="0.1" height="15.0" fill="rgb(211,93,48)" rx="2" ry="2" />
<text  x="587.73" y="335.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.01%)</title><rect x="684.3" y="245" width="0.1" height="15.0" fill="rgb(206,10,43)" rx="2" ry="2" />
<text  x="687.27" y="255.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::unwrap (3 samples, 0.03%)</title><rect x="1063.1" y="549" width="0.4" height="15.0" fill="rgb(223,150,12)" rx="2" ry="2" />
<text  x="1066.15" y="559.5" ></text>
</g>
<g >
<title>ovl_d_real (4 samples, 0.04%)</title><rect x="629.8" y="421" width="0.4" height="15.0" fill="rgb(217,137,7)" rx="2" ry="2" />
<text  x="632.77" y="431.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (1 samples, 0.01%)</title><rect x="1024.7" y="517" width="0.1" height="15.0" fill="rgb(213,165,46)" rx="2" ry="2" />
<text  x="1027.70" y="527.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.01%)</title><rect x="18.6" y="437" width="0.1" height="15.0" fill="rgb(206,183,27)" rx="2" ry="2" />
<text  x="21.62" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (4 samples, 0.04%)</title><rect x="39.1" y="373" width="0.5" height="15.0" fill="rgb(254,151,24)" rx="2" ry="2" />
<text  x="42.11" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (353 samples, 3.58%)</title><rect x="504.0" y="549" width="42.3" height="15.0" fill="rgb(214,150,23)" rx="2" ry="2" />
<text  x="506.99" y="559.5" >ent..</text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.01%)</title><rect x="33.1" y="421" width="0.1" height="15.0" fill="rgb(205,86,0)" rx="2" ry="2" />
<text  x="36.12" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (18 samples, 0.18%)</title><rect x="504.5" y="533" width="2.1" height="15.0" fill="rgb(222,209,21)" rx="2" ry="2" />
<text  x="507.47" y="543.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (497 samples, 5.05%)</title><rect x="656.0" y="341" width="59.5" height="15.0" fill="rgb(221,128,10)" rx="2" ry="2" />
<text  x="659.00" y="351.5" >ext4_d..</text>
</g>
<g >
<title>menu_update (1 samples, 0.01%)</title><rect x="33.0" y="453" width="0.1" height="15.0" fill="rgb(221,177,8)" rx="2" ry="2" />
<text  x="36.00" y="463.5" ></text>
</g>
<g >
<title>do_group_exit (2 samples, 0.02%)</title><rect x="1027.6" y="453" width="0.2" height="15.0" fill="rgb(254,227,26)" rx="2" ry="2" />
<text  x="1030.57" y="463.5" ></text>
</g>
<g >
<title>ext4_da_write_end (3 samples, 0.03%)</title><rect x="642.8" y="357" width="0.4" height="15.0" fill="rgb(220,30,51)" rx="2" ry="2" />
<text  x="645.82" y="367.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.01%)</title><rect x="695.9" y="213" width="0.1" height="15.0" fill="rgb(238,92,23)" rx="2" ry="2" />
<text  x="698.89" y="223.5" ></text>
</g>
<g >
<title>__libc_write (2,012 samples, 20.42%)</title><rect x="591.7" y="565" width="241.0" height="15.0" fill="rgb(222,54,25)" rx="2" ry="2" />
<text  x="594.67" y="575.5" >__libc_write</text>
</g>
<g >
<title>kick_ilb (36 samples, 0.37%)</title><rect x="1181.1" y="357" width="4.3" height="15.0" fill="rgb(246,11,45)" rx="2" ry="2" />
<text  x="1184.14" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="1076.1" y="405" width="0.3" height="15.0" fill="rgb(223,51,34)" rx="2" ry="2" />
<text  x="1079.08" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.01%)</title><rect x="1140.3" y="437" width="0.1" height="15.0" fill="rgb(242,58,32)" rx="2" ry="2" />
<text  x="1143.29" y="447.5" ></text>
</g>
<g >
<title>ksys_write (4 samples, 0.04%)</title><rect x="62.3" y="517" width="0.5" height="15.0" fill="rgb(206,100,43)" rx="2" ry="2" />
<text  x="65.35" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (7 samples, 0.07%)</title><rect x="1021.9" y="517" width="0.9" height="15.0" fill="rgb(212,84,16)" rx="2" ry="2" />
<text  x="1024.94" y="527.5" ></text>
</g>
<g >
<title>_raw_write_lock (3 samples, 0.03%)</title><rect x="682.4" y="261" width="0.3" height="15.0" fill="rgb(249,219,32)" rx="2" ry="2" />
<text  x="685.35" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (2 samples, 0.02%)</title><rect x="833.9" y="565" width="0.2" height="15.0" fill="rgb(244,127,32)" rx="2" ry="2" />
<text  x="836.88" y="575.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (14 samples, 0.14%)</title><rect x="54.2" y="325" width="1.7" height="15.0" fill="rgb(234,177,26)" rx="2" ry="2" />
<text  x="57.20" y="335.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.03%)</title><rect x="1077.6" y="405" width="0.4" height="15.0" fill="rgb(221,197,9)" rx="2" ry="2" />
<text  x="1080.64" y="415.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.01%)</title><rect x="1027.5" y="309" width="0.1" height="15.0" fill="rgb(254,18,14)" rx="2" ry="2" />
<text  x="1030.45" y="319.5" ></text>
</g>
<g >
<title>map_id_up (2 samples, 0.02%)</title><rect x="785.0" y="213" width="0.2" height="15.0" fill="rgb(254,82,9)" rx="2" ry="2" />
<text  x="788.01" y="223.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (3 samples, 0.03%)</title><rect x="1077.6" y="453" width="0.4" height="15.0" fill="rgb(239,104,19)" rx="2" ry="2" />
<text  x="1080.64" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (23 samples, 0.23%)</title><rect x="64.4" y="533" width="2.7" height="15.0" fill="rgb(252,63,18)" rx="2" ry="2" />
<text  x="67.38" y="543.5" ></text>
</g>
<g >
<title>perf_poll (2 samples, 0.02%)</title><rect x="42.5" y="469" width="0.2" height="15.0" fill="rgb(209,77,17)" rx="2" ry="2" />
<text  x="45.46" y="479.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.01%)</title><rect x="1001.0" y="181" width="0.1" height="15.0" fill="rgb(212,207,36)" rx="2" ry="2" />
<text  x="1003.98" y="191.5" ></text>
</g>
<g >
<title>__es_insert_extent (1 samples, 0.01%)</title><rect x="683.8" y="245" width="0.1" height="15.0" fill="rgb(206,65,53)" rx="2" ry="2" />
<text  x="686.79" y="255.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (4 samples, 0.04%)</title><rect x="62.3" y="405" width="0.5" height="15.0" fill="rgb(249,144,16)" rx="2" ry="2" />
<text  x="65.35" y="415.5" ></text>
</g>
<g >
<title>__fsnotify_parent (5 samples, 0.05%)</title><rect x="589.2" y="437" width="0.6" height="15.0" fill="rgb(223,176,11)" rx="2" ry="2" />
<text  x="592.16" y="447.5" ></text>
</g>
<g >
<title>start_secondary (138 samples, 1.40%)</title><rect x="19.1" y="549" width="16.5" height="15.0" fill="rgb(250,135,25)" rx="2" ry="2" />
<text  x="22.10" y="559.5" ></text>
</g>
<g >
<title>llist_reverse_order (4 samples, 0.04%)</title><rect x="1175.7" y="421" width="0.5" height="15.0" fill="rgb(232,38,44)" rx="2" ry="2" />
<text  x="1178.75" y="431.5" ></text>
</g>
<g >
<title>create_empty_buffers (7 samples, 0.07%)</title><rect x="54.2" y="309" width="0.8" height="15.0" fill="rgb(205,175,27)" rx="2" ry="2" />
<text  x="57.20" y="319.5" ></text>
</g>
<g >
<title>menu_select (35 samples, 0.36%)</title><rect x="1170.1" y="405" width="4.2" height="15.0" fill="rgb(218,36,4)" rx="2" ry="2" />
<text  x="1173.12" y="415.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="33.7" y="485" width="0.1" height="15.0" fill="rgb(227,76,10)" rx="2" ry="2" />
<text  x="36.72" y="495.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.01%)</title><rect x="62.6" y="293" width="0.1" height="15.0" fill="rgb(215,221,44)" rx="2" ry="2" />
<text  x="65.59" y="303.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.01%)</title><rect x="1105.1" y="469" width="0.1" height="15.0" fill="rgb(244,8,40)" rx="2" ry="2" />
<text  x="1108.07" y="479.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="67.1" y="533" width="0.2" height="15.0" fill="rgb(219,176,47)" rx="2" ry="2" />
<text  x="70.14" y="543.5" ></text>
</g>
<g >
<title>ext4_llseek (3 samples, 0.03%)</title><rect x="526.9" y="469" width="0.3" height="15.0" fill="rgb(236,35,11)" rx="2" ry="2" />
<text  x="529.87" y="479.5" ></text>
</g>
<g >
<title>copy_fpregs_to_fpstate (1 samples, 0.01%)</title><rect x="62.2" y="565" width="0.1" height="15.0" fill="rgb(249,197,34)" rx="2" ry="2" />
<text  x="65.23" y="575.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.01%)</title><rect x="11.7" y="469" width="0.1" height="15.0" fill="rgb(253,152,45)" rx="2" ry="2" />
<text  x="14.68" y="479.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u16 (13 samples, 0.13%)</title><rect x="1075.4" y="549" width="1.5" height="15.0" fill="rgb(235,194,4)" rx="2" ry="2" />
<text  x="1078.37" y="559.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.02%)</title><rect x="1148.8" y="485" width="0.2" height="15.0" fill="rgb(232,19,41)" rx="2" ry="2" />
<text  x="1151.79" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (8 samples, 0.08%)</title><rect x="1024.8" y="517" width="1.0" height="15.0" fill="rgb(228,115,21)" rx="2" ry="2" />
<text  x="1027.82" y="527.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (7 samples, 0.07%)</title><rect x="123.1" y="565" width="0.8" height="15.0" fill="rgb(240,209,24)" rx="2" ry="2" />
<text  x="126.08" y="575.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (34 samples, 0.35%)</title><rect x="1143.9" y="437" width="4.1" height="15.0" fill="rgb(247,56,4)" rx="2" ry="2" />
<text  x="1146.88" y="447.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="1064.5" y="373" width="0.1" height="15.0" fill="rgb(230,162,10)" rx="2" ry="2" />
<text  x="1067.47" y="383.5" ></text>
</g>
<g >
<title>perf_event_mmap_event (1 samples, 0.01%)</title><rect x="18.4" y="437" width="0.1" height="15.0" fill="rgb(205,96,6)" rx="2" ry="2" />
<text  x="21.38" y="447.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (8 samples, 0.08%)</title><rect x="34.3" y="437" width="1.0" height="15.0" fill="rgb(214,139,35)" rx="2" ry="2" />
<text  x="37.32" y="447.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (2 samples, 0.02%)</title><rect x="1174.3" y="405" width="0.2" height="15.0" fill="rgb(229,198,16)" rx="2" ry="2" />
<text  x="1177.31" y="415.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (30 samples, 0.30%)</title><rect x="806.4" y="325" width="3.6" height="15.0" fill="rgb(245,117,31)" rx="2" ry="2" />
<text  x="809.45" y="335.5" ></text>
</g>
<g >
<title>__GI___mmap64 (1 samples, 0.01%)</title><rect x="331.5" y="565" width="0.1" height="15.0" fill="rgb(214,3,19)" rx="2" ry="2" />
<text  x="334.50" y="575.5" ></text>
</g>
<g >
<title>mutex_unlock (12 samples, 0.12%)</title><rect x="614.9" y="485" width="1.5" height="15.0" fill="rgb(228,133,6)" rx="2" ry="2" />
<text  x="617.91" y="495.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (1 samples, 0.01%)</title><rect x="1069.0" y="501" width="0.1" height="15.0" fill="rgb(211,172,16)" rx="2" ry="2" />
<text  x="1072.02" y="511.5" ></text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.01%)</title><rect x="1138.5" y="453" width="0.1" height="15.0" fill="rgb(237,110,48)" rx="2" ry="2" />
<text  x="1141.49" y="463.5" ></text>
</g>
<g >
<title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::write_u16 (2 samples, 0.02%)</title><rect x="1075.7" y="533" width="0.3" height="15.0" fill="rgb(233,214,32)" rx="2" ry="2" />
<text  x="1078.73" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.01%)</title><rect x="1066.6" y="501" width="0.1" height="15.0" fill="rgb(214,106,17)" rx="2" ry="2" />
<text  x="1069.62" y="511.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="522.6" y="309" width="0.1" height="15.0" fill="rgb(240,197,31)" rx="2" ry="2" />
<text  x="525.56" y="319.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.01%)</title><rect x="18.9" y="469" width="0.1" height="15.0" fill="rgb(214,131,45)" rx="2" ry="2" />
<text  x="21.86" y="479.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="1034.4" y="517" width="0.1" height="15.0" fill="rgb(229,125,20)" rx="2" ry="2" />
<text  x="1037.40" y="527.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="679.6" y="229" width="0.1" height="15.0" fill="rgb(246,196,29)" rx="2" ry="2" />
<text  x="682.60" y="239.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (76 samples, 0.77%)</title><rect x="567.7" y="325" width="9.1" height="15.0" fill="rgb(231,95,29)" rx="2" ry="2" />
<text  x="570.72" y="335.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (522 samples, 5.30%)</title><rect x="740.8" y="293" width="62.5" height="15.0" fill="rgb(248,223,45)" rx="2" ry="2" />
<text  x="743.81" y="303.5" >ext4_d..</text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (5 samples, 0.05%)</title><rect x="1140.2" y="485" width="0.6" height="15.0" fill="rgb(205,101,14)" rx="2" ry="2" />
<text  x="1143.17" y="495.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1,070 samples, 10.86%)</title><rect x="868.4" y="565" width="128.1" height="15.0" fill="rgb(212,109,34)" rx="2" ry="2" />
<text  x="871.38" y="575.5" >__pthread_mutex_..</text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.01%)</title><rect x="998.1" y="165" width="0.1" height="15.0" fill="rgb(206,12,11)" rx="2" ry="2" />
<text  x="1001.10" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="1037.8" y="533" width="0.2" height="15.0" fill="rgb(226,148,29)" rx="2" ry="2" />
<text  x="1040.75" y="543.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.09%)</title><rect x="1063.5" y="549" width="1.1" height="15.0" fill="rgb(234,55,19)" rx="2" ry="2" />
<text  x="1066.51" y="559.5" ></text>
</g>
<g >
<title>free_unref_page_commit (12 samples, 0.12%)</title><rect x="998.7" y="165" width="1.4" height="15.0" fill="rgb(252,33,49)" rx="2" ry="2" />
<text  x="1001.70" y="175.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.01%)</title><rect x="18.4" y="469" width="0.1" height="15.0" fill="rgb(235,97,23)" rx="2" ry="2" />
<text  x="21.38" y="479.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.01%)</title><rect x="1005.3" y="85" width="0.1" height="15.0" fill="rgb(228,60,25)" rx="2" ry="2" />
<text  x="1008.29" y="95.5" ></text>
</g>
<g >
<title>iov_iter_advance (12 samples, 0.12%)</title><rect x="804.3" y="341" width="1.4" height="15.0" fill="rgb(205,15,14)" rx="2" ry="2" />
<text  x="807.29" y="351.5" ></text>
</g>
<g >
<title>do_idle (316 samples, 3.21%)</title><rect x="1150.8" y="453" width="37.9" height="15.0" fill="rgb(252,131,26)" rx="2" ry="2" />
<text  x="1153.83" y="463.5" >do_..</text>
</g>
<g >
<title>ext4_reserve_inode_write (122 samples, 1.24%)</title><rect x="788.1" y="261" width="14.6" height="15.0" fill="rgb(247,45,32)" rx="2" ry="2" />
<text  x="791.12" y="271.5" ></text>
</g>
<g >
<title>ext4_inode_csum (176 samples, 1.79%)</title><rect x="763.6" y="213" width="21.0" height="15.0" fill="rgb(231,51,40)" rx="2" ry="2" />
<text  x="766.57" y="223.5" ></text>
</g>
<g >
<title>up_write (18 samples, 0.18%)</title><rect x="634.2" y="437" width="2.2" height="15.0" fill="rgb(226,61,9)" rx="2" ry="2" />
<text  x="637.20" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.01%)</title><rect x="1105.3" y="533" width="0.1" height="15.0" fill="rgb(226,48,43)" rx="2" ry="2" />
<text  x="1108.31" y="543.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (327 samples, 3.32%)</title><rect x="1150.8" y="549" width="39.2" height="15.0" fill="rgb(235,77,28)" rx="2" ry="2" />
<text  x="1153.83" y="559.5" >x86..</text>
</g>
<g >
<title>kick_ilb (2 samples, 0.02%)</title><rect x="41.0" y="357" width="0.3" height="15.0" fill="rgb(210,0,35)" rx="2" ry="2" />
<text  x="44.02" y="367.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (2 samples, 0.02%)</title><rect x="34.6" y="421" width="0.2" height="15.0" fill="rgb(213,204,5)" rx="2" ry="2" />
<text  x="37.56" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (2 samples, 0.02%)</title><rect x="1019.4" y="533" width="0.3" height="15.0" fill="rgb(224,108,42)" rx="2" ry="2" />
<text  x="1022.43" y="543.5" ></text>
</g>
<g >
<title>alloc_page_buffers (7 samples, 0.07%)</title><rect x="54.2" y="293" width="0.8" height="15.0" fill="rgb(211,104,44)" rx="2" ry="2" />
<text  x="57.20" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.03%)</title><rect x="737.5" y="229" width="0.3" height="15.0" fill="rgb(219,123,50)" rx="2" ry="2" />
<text  x="740.45" y="239.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (3 samples, 0.03%)</title><rect x="68.7" y="501" width="0.4" height="15.0" fill="rgb(234,119,16)" rx="2" ry="2" />
<text  x="71.69" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.01%)</title><rect x="1066.4" y="485" width="0.1" height="15.0" fill="rgb(213,120,5)" rx="2" ry="2" />
<text  x="1069.38" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.01%)</title><rect x="1071.3" y="517" width="0.1" height="15.0" fill="rgb(254,206,22)" rx="2" ry="2" />
<text  x="1074.29" y="527.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.01%)</title><rect x="66.8" y="421" width="0.1" height="15.0" fill="rgb(216,211,47)" rx="2" ry="2" />
<text  x="69.78" y="431.5" ></text>
</g>
<g >
<title>from_kprojid (2 samples, 0.02%)</title><rect x="787.8" y="245" width="0.2" height="15.0" fill="rgb(226,23,39)" rx="2" ry="2" />
<text  x="790.76" y="255.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (141 samples, 1.43%)</title><rect x="1153.0" y="405" width="16.9" height="15.0" fill="rgb(230,91,21)" rx="2" ry="2" />
<text  x="1155.99" y="415.5" ></text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.01%)</title><rect x="55.3" y="277" width="0.1" height="15.0" fill="rgb(215,213,33)" rx="2" ry="2" />
<text  x="58.28" y="287.5" ></text>
</g>
<g >
<title>newidle_balance (58 samples, 0.59%)</title><rect x="1178.5" y="389" width="6.9" height="15.0" fill="rgb(234,72,47)" rx="2" ry="2" />
<text  x="1181.50" y="399.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="1029.7" y="421" width="0.1" height="15.0" fill="rgb(209,48,1)" rx="2" ry="2" />
<text  x="1032.73" y="431.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u16 (1 samples, 0.01%)</title><rect x="1060.3" y="501" width="0.1" height="15.0" fill="rgb(243,45,4)" rx="2" ry="2" />
<text  x="1063.27" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.06%)</title><rect x="1066.7" y="485" width="0.8" height="15.0" fill="rgb(217,41,54)" rx="2" ry="2" />
<text  x="1069.74" y="495.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (29 samples, 0.29%)</title><rect x="1054.6" y="565" width="3.5" height="15.0" fill="rgb(219,226,27)" rx="2" ry="2" />
<text  x="1057.64" y="575.5" ></text>
</g>
<g >
<title>HandleStackContext (21 samples, 0.21%)</title><rect x="94.3" y="565" width="2.5" height="15.0" fill="rgb(226,16,4)" rx="2" ry="2" />
<text  x="97.33" y="575.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (8 samples, 0.08%)</title><rect x="1105.7" y="437" width="0.9" height="15.0" fill="rgb(213,185,6)" rx="2" ry="2" />
<text  x="1108.67" y="447.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (4 samples, 0.04%)</title><rect x="60.9" y="261" width="0.5" height="15.0" fill="rgb(231,206,48)" rx="2" ry="2" />
<text  x="63.91" y="271.5" ></text>
</g>
<g >
<title>newidle_balance (36 samples, 0.37%)</title><rect x="1143.6" y="453" width="4.4" height="15.0" fill="rgb(222,164,41)" rx="2" ry="2" />
<text  x="1146.64" y="463.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.01%)</title><rect x="11.8" y="517" width="0.1" height="15.0" fill="rgb(245,74,6)" rx="2" ry="2" />
<text  x="14.80" y="527.5" ></text>
</g>
<g >
<title>arch_call_rest_init (51 samples, 0.52%)</title><rect x="35.6" y="501" width="6.1" height="15.0" fill="rgb(225,71,31)" rx="2" ry="2" />
<text  x="38.63" y="511.5" ></text>
</g>
<g >
<title>ext4_es_can_be_merged.isra.0 (2 samples, 0.02%)</title><rect x="684.0" y="245" width="0.3" height="15.0" fill="rgb(234,83,51)" rx="2" ry="2" />
<text  x="687.03" y="255.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@plt (36 samples, 0.37%)</title><rect x="1038.0" y="565" width="4.3" height="15.0" fill="rgb(241,58,19)" rx="2" ry="2" />
<text  x="1040.99" y="575.5" ></text>
</g>
<g >
<title>generic_perform_write (4 samples, 0.04%)</title><rect x="62.3" y="373" width="0.5" height="15.0" fill="rgb(248,183,31)" rx="2" ry="2" />
<text  x="65.35" y="383.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (8 samples, 0.08%)</title><rect x="1059.4" y="549" width="1.0" height="15.0" fill="rgb(223,116,46)" rx="2" ry="2" />
<text  x="1062.43" y="559.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.01%)</title><rect x="62.7" y="309" width="0.1" height="15.0" fill="rgb(253,129,17)" rx="2" ry="2" />
<text  x="65.71" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (33 samples, 0.33%)</title><rect x="1030.2" y="517" width="4.0" height="15.0" fill="rgb(236,112,50)" rx="2" ry="2" />
<text  x="1033.21" y="527.5" ></text>
</g>
<g >
<title>ksys_read (331 samples, 3.36%)</title><rect x="551.3" y="501" width="39.7" height="15.0" fill="rgb(246,175,38)" rx="2" ry="2" />
<text  x="554.31" y="511.5" >ksy..</text>
</g>
<g >
<title>ext4_nonda_switch (1 samples, 0.01%)</title><rect x="55.9" y="325" width="0.1" height="15.0" fill="rgb(224,58,45)" rx="2" ry="2" />
<text  x="58.88" y="335.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.01%)</title><rect x="655.8" y="341" width="0.1" height="15.0" fill="rgb(246,33,50)" rx="2" ry="2" />
<text  x="658.76" y="351.5" ></text>
</g>
<g >
<title>lookup_bh_lru (1 samples, 0.01%)</title><rect x="800.9" y="197" width="0.2" height="15.0" fill="rgb(208,197,30)" rx="2" ry="2" />
<text  x="803.94" y="207.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (12 samples, 0.12%)</title><rect x="183.2" y="565" width="1.4" height="15.0" fill="rgb(214,136,13)" rx="2" ry="2" />
<text  x="186.21" y="575.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.01%)</title><rect x="35.9" y="277" width="0.1" height="15.0" fill="rgb(206,210,13)" rx="2" ry="2" />
<text  x="38.87" y="287.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (3 samples, 0.03%)</title><rect x="1077.6" y="437" width="0.4" height="15.0" fill="rgb(254,22,3)" rx="2" ry="2" />
<text  x="1080.64" y="447.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="1024.5" y="469" width="0.1" height="15.0" fill="rgb(217,184,5)" rx="2" ry="2" />
<text  x="1027.46" y="479.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (1 samples, 0.01%)</title><rect x="1107.8" y="437" width="0.1" height="15.0" fill="rgb(207,5,48)" rx="2" ry="2" />
<text  x="1110.83" y="447.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="1060.3" y="469" width="0.1" height="15.0" fill="rgb(216,77,7)" rx="2" ry="2" />
<text  x="1063.27" y="479.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (2 samples, 0.02%)</title><rect x="184.6" y="565" width="0.3" height="15.0" fill="rgb(231,162,14)" rx="2" ry="2" />
<text  x="187.65" y="575.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.01%)</title><rect x="52.5" y="565" width="0.1" height="15.0" fill="rgb(210,196,23)" rx="2" ry="2" />
<text  x="55.52" y="575.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (1 samples, 0.01%)</title><rect x="640.3" y="357" width="0.1" height="15.0" fill="rgb(238,93,34)" rx="2" ry="2" />
<text  x="643.31" y="367.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (51 samples, 0.52%)</title><rect x="1047.3" y="565" width="6.1" height="15.0" fill="rgb(251,155,47)" rx="2" ry="2" />
<text  x="1050.34" y="575.5" ></text>
</g>
<g >
<title>block_invalidatepage (5 samples, 0.05%)</title><rect x="1026.9" y="229" width="0.6" height="15.0" fill="rgb(213,176,29)" rx="2" ry="2" />
<text  x="1029.85" y="239.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook.constprop.0 (1 samples, 0.01%)</title><rect x="1009.2" y="69" width="0.2" height="15.0" fill="rgb(226,40,25)" rx="2" ry="2" />
<text  x="1012.24" y="79.5" ></text>
</g>
<g >
<title>lookup_bh_lru (20 samples, 0.20%)</title><rect x="797.6" y="181" width="2.4" height="15.0" fill="rgb(222,219,31)" rx="2" ry="2" />
<text  x="800.59" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="1064.2" y="453" width="0.1" height="15.0" fill="rgb(213,53,24)" rx="2" ry="2" />
<text  x="1067.23" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="35.9" y="373" width="0.1" height="15.0" fill="rgb(220,31,29)" rx="2" ry="2" />
<text  x="38.87" y="383.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (7 samples, 0.07%)</title><rect x="1180.2" y="357" width="0.8" height="15.0" fill="rgb(218,22,52)" rx="2" ry="2" />
<text  x="1183.18" y="367.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.02%)</title><rect x="1148.3" y="469" width="0.3" height="15.0" fill="rgb(221,129,28)" rx="2" ry="2" />
<text  x="1151.31" y="479.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.01%)</title><rect x="1026.5" y="453" width="0.1" height="15.0" fill="rgb(253,3,43)" rx="2" ry="2" />
<text  x="1029.49" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (44 samples, 0.45%)</title><rect x="490.1" y="565" width="5.3" height="15.0" fill="rgb(214,82,21)" rx="2" ry="2" />
<text  x="493.10" y="575.5" ></text>
</g>
<g >
<title>try_to_free_buffers (35 samples, 0.36%)</title><rect x="1005.2" y="117" width="4.2" height="15.0" fill="rgb(209,110,5)" rx="2" ry="2" />
<text  x="1008.17" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="1077.2" y="405" width="0.1" height="15.0" fill="rgb(229,225,38)" rx="2" ry="2" />
<text  x="1080.16" y="415.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (78 samples, 0.79%)</title><rect x="52.9" y="373" width="9.3" height="15.0" fill="rgb(235,64,46)" rx="2" ry="2" />
<text  x="55.88" y="383.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (6 samples, 0.06%)</title><rect x="1071.4" y="533" width="0.7" height="15.0" fill="rgb(221,176,39)" rx="2" ry="2" />
<text  x="1074.41" y="543.5" ></text>
</g>
<g >
<title>ext4_da_write_end (740 samples, 7.51%)</title><rect x="715.5" y="341" width="88.7" height="15.0" fill="rgb(205,179,42)" rx="2" ry="2" />
<text  x="718.53" y="351.5" >ext4_da_wr..</text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.01%)</title><rect x="18.6" y="453" width="0.1" height="15.0" fill="rgb(253,43,19)" rx="2" ry="2" />
<text  x="21.62" y="463.5" ></text>
</g>
<g >
<title>up_read (3 samples, 0.03%)</title><rect x="684.4" y="277" width="0.3" height="15.0" fill="rgb(248,106,35)" rx="2" ry="2" />
<text  x="687.39" y="287.5" ></text>
</g>
<g >
<title>new_sync_write (1,689 samples, 17.15%)</title><rect x="620.8" y="469" width="202.3" height="15.0" fill="rgb(246,164,33)" rx="2" ry="2" />
<text  x="623.78" y="479.5" >new_sync_write</text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.01%)</title><rect x="121.2" y="565" width="0.1" height="15.0" fill="rgb(228,89,19)" rx="2" ry="2" />
<text  x="124.16" y="575.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (6 samples, 0.06%)</title><rect x="40.5" y="373" width="0.8" height="15.0" fill="rgb(223,10,43)" rx="2" ry="2" />
<text  x="43.55" y="383.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.09%)</title><rect x="1063.5" y="517" width="1.1" height="15.0" fill="rgb(218,139,33)" rx="2" ry="2" />
<text  x="1066.51" y="527.5" ></text>
</g>
<g >
<title>__pagevec_release (2 samples, 0.02%)</title><rect x="1026.6" y="261" width="0.3" height="15.0" fill="rgb(219,45,28)" rx="2" ry="2" />
<text  x="1029.61" y="271.5" ></text>
</g>
<g >
<title>rw_verify_area (27 samples, 0.27%)</title><rect x="818.1" y="405" width="3.2" height="15.0" fill="rgb(241,14,21)" rx="2" ry="2" />
<text  x="821.07" y="415.5" ></text>
</g>
<g >
<title>up_write (20 samples, 0.20%)</title><rect x="814.0" y="357" width="2.4" height="15.0" fill="rgb(224,210,37)" rx="2" ry="2" />
<text  x="817.00" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.03%)</title><rect x="1077.6" y="357" width="0.4" height="15.0" fill="rgb(251,47,53)" rx="2" ry="2" />
<text  x="1080.64" y="367.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (8 samples, 0.08%)</title><rect x="1024.8" y="533" width="1.0" height="15.0" fill="rgb(245,202,20)" rx="2" ry="2" />
<text  x="1027.82" y="543.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (31 samples, 0.31%)</title><rect x="681.0" y="293" width="3.7" height="15.0" fill="rgb(249,29,52)" rx="2" ry="2" />
<text  x="684.03" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="42.2" y="421" width="0.1" height="15.0" fill="rgb(223,39,2)" rx="2" ry="2" />
<text  x="45.22" y="431.5" ></text>
</g>
<g >
<title>do_idle (49 samples, 0.50%)</title><rect x="35.6" y="453" width="5.9" height="15.0" fill="rgb(229,36,52)" rx="2" ry="2" />
<text  x="38.63" y="463.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (7 samples, 0.07%)</title><rect x="1026.6" y="293" width="0.9" height="15.0" fill="rgb(216,167,48)" rx="2" ry="2" />
<text  x="1029.61" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (330 samples, 3.35%)</title><rect x="506.6" y="533" width="39.6" height="15.0" fill="rgb(229,145,7)" rx="2" ry="2" />
<text  x="509.63" y="543.5" >do_..</text>
</g>
<g >
<title>override_creds (6 samples, 0.06%)</title><rect x="560.1" y="421" width="0.7" height="15.0" fill="rgb(218,211,44)" rx="2" ry="2" />
<text  x="563.05" y="431.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.01%)</title><rect x="640.1" y="357" width="0.1" height="15.0" fill="rgb(235,106,33)" rx="2" ry="2" />
<text  x="643.07" y="367.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.01%)</title><rect x="18.7" y="501" width="0.2" height="15.0" fill="rgb(234,96,38)" rx="2" ry="2" />
<text  x="21.74" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="1031.4" y="485" width="0.1" height="15.0" fill="rgb(244,15,25)" rx="2" ry="2" />
<text  x="1034.40" y="495.5" ></text>
</g>
<g >
<title>__fget_files (63 samples, 0.64%)</title><rect x="511.7" y="453" width="7.5" height="15.0" fill="rgb(226,57,17)" rx="2" ry="2" />
<text  x="514.66" y="463.5" ></text>
</g>
<g >
<title>kmem_cache_free (4 samples, 0.04%)</title><rect x="1027.0" y="133" width="0.5" height="15.0" fill="rgb(247,110,33)" rx="2" ry="2" />
<text  x="1029.97" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_write (4 samples, 0.04%)</title><rect x="62.3" y="533" width="0.5" height="15.0" fill="rgb(228,190,9)" rx="2" ry="2" />
<text  x="65.35" y="543.5" ></text>
</g>
<g >
<title>event_function (64 samples, 0.65%)</title><rect x="44.3" y="373" width="7.6" height="15.0" fill="rgb(222,45,29)" rx="2" ry="2" />
<text  x="47.26" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.01%)</title><rect x="19.1" y="501" width="0.1" height="15.0" fill="rgb(218,108,15)" rx="2" ry="2" />
<text  x="22.10" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.03%)</title><rect x="1057.8" y="517" width="0.3" height="15.0" fill="rgb(241,120,49)" rx="2" ry="2" />
<text  x="1060.76" y="527.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.07%)</title><rect x="1076.1" y="485" width="0.8" height="15.0" fill="rgb(238,175,27)" rx="2" ry="2" />
<text  x="1079.08" y="495.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (7 samples, 0.07%)</title><rect x="55.0" y="309" width="0.9" height="15.0" fill="rgb(240,106,29)" rx="2" ry="2" />
<text  x="58.04" y="319.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.01%)</title><rect x="42.1" y="437" width="0.1" height="15.0" fill="rgb(238,108,4)" rx="2" ry="2" />
<text  x="45.10" y="447.5" ></text>
</g>
<g >
<title>stop_this_handle (53 samples, 0.54%)</title><rect x="722.5" y="293" width="6.3" height="15.0" fill="rgb(245,151,39)" rx="2" ry="2" />
<text  x="725.48" y="303.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (104 samples, 1.06%)</title><rect x="716.6" y="325" width="12.5" height="15.0" fill="rgb(243,106,7)" rx="2" ry="2" />
<text  x="719.61" y="335.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (696 samples, 7.07%)</title><rect x="1106.6" y="565" width="83.4" height="15.0" fill="rgb(244,107,28)" rx="2" ry="2" />
<text  x="1109.63" y="575.5" >secondary..</text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.02%)</title><rect x="833.9" y="501" width="0.2" height="15.0" fill="rgb(206,180,6)" rx="2" ry="2" />
<text  x="836.88" y="511.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.01%)</title><rect x="729.1" y="325" width="0.1" height="15.0" fill="rgb(248,190,52)" rx="2" ry="2" />
<text  x="732.07" y="335.5" ></text>
</g>
<g >
<title>xas_find (1 samples, 0.01%)</title><rect x="1001.9" y="181" width="0.2" height="15.0" fill="rgb(231,154,43)" rx="2" ry="2" />
<text  x="1004.94" y="191.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.01%)</title><rect x="331.5" y="453" width="0.1" height="15.0" fill="rgb(212,81,50)" rx="2" ry="2" />
<text  x="334.50" y="463.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.01%)</title><rect x="1106.2" y="37" width="0.1" height="15.0" fill="rgb(213,71,9)" rx="2" ry="2" />
<text  x="1109.15" y="47.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.01%)</title><rect x="331.5" y="485" width="0.1" height="15.0" fill="rgb(217,126,29)" rx="2" ry="2" />
<text  x="334.50" y="495.5" ></text>
</g>
<g >
<title>__fput (8 samples, 0.08%)</title><rect x="1026.6" y="453" width="1.0" height="15.0" fill="rgb(228,146,47)" rx="2" ry="2" />
<text  x="1029.61" y="463.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.01%)</title><rect x="610.1" y="469" width="0.1" height="15.0" fill="rgb(240,111,44)" rx="2" ry="2" />
<text  x="613.12" y="479.5" ></text>
</g>
<g >
<title>ovl_inode_realdata (17 samples, 0.17%)</title><rect x="535.5" y="453" width="2.0" height="15.0" fill="rgb(240,181,20)" rx="2" ry="2" />
<text  x="538.50" y="463.5" ></text>
</g>
<g >
<title>exit_notify (2 samples, 0.02%)</title><rect x="1027.6" y="421" width="0.2" height="15.0" fill="rgb(251,139,30)" rx="2" ry="2" />
<text  x="1030.57" y="431.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (1 samples, 0.01%)</title><rect x="35.4" y="453" width="0.1" height="15.0" fill="rgb(238,201,38)" rx="2" ry="2" />
<text  x="38.39" y="463.5" ></text>
</g>
<g >
<title>read_tsc (3 samples, 0.03%)</title><rect x="1187.5" y="421" width="0.3" height="15.0" fill="rgb(208,153,11)" rx="2" ry="2" />
<text  x="1190.48" y="431.5" ></text>
</g>
<g >
<title>ext4_releasepage (4 samples, 0.04%)</title><rect x="1027.0" y="197" width="0.5" height="15.0" fill="rgb(217,169,44)" rx="2" ry="2" />
<text  x="1029.97" y="207.5" ></text>
</g>
<g >
<title>ovl_override_creds (6 samples, 0.06%)</title><rect x="560.1" y="437" width="0.7" height="15.0" fill="rgb(229,117,13)" rx="2" ry="2" />
<text  x="563.05" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (13 samples, 0.13%)</title><rect x="1067.5" y="517" width="1.5" height="15.0" fill="rgb(232,216,17)" rx="2" ry="2" />
<text  x="1070.46" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="52.5" y="533" width="0.1" height="15.0" fill="rgb(241,229,52)" rx="2" ry="2" />
<text  x="55.52" y="543.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.01%)</title><rect x="465.9" y="341" width="0.1" height="15.0" fill="rgb(210,47,48)" rx="2" ry="2" />
<text  x="468.90" y="351.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (1 samples, 0.01%)</title><rect x="561.6" y="437" width="0.1" height="15.0" fill="rgb(239,176,19)" rx="2" ry="2" />
<text  x="564.61" y="447.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.01%)</title><rect x="54.6" y="245" width="0.1" height="15.0" fill="rgb(221,109,15)" rx="2" ry="2" />
<text  x="57.56" y="255.5" ></text>
</g>
<g >
<title>ext4_inode_journal_mode (3 samples, 0.03%)</title><rect x="786.9" y="229" width="0.4" height="15.0" fill="rgb(253,121,5)" rx="2" ry="2" />
<text  x="789.92" y="239.5" ></text>
</g>
<g >
<title>do_writepages (8 samples, 0.08%)</title><rect x="1105.7" y="389" width="0.9" height="15.0" fill="rgb(249,182,45)" rx="2" ry="2" />
<text  x="1108.67" y="399.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (3 samples, 0.03%)</title><rect x="1072.1" y="533" width="0.4" height="15.0" fill="rgb(225,58,48)" rx="2" ry="2" />
<text  x="1075.13" y="543.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (4 samples, 0.04%)</title><rect x="741.8" y="261" width="0.4" height="15.0" fill="rgb(235,13,14)" rx="2" ry="2" />
<text  x="744.77" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (2 samples, 0.02%)</title><rect x="1105.1" y="533" width="0.2" height="15.0" fill="rgb(226,212,9)" rx="2" ry="2" />
<text  x="1108.07" y="543.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.01%)</title><rect x="1137.4" y="437" width="0.1" height="15.0" fill="rgb(254,214,32)" rx="2" ry="2" />
<text  x="1140.41" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock (10 samples, 0.10%)</title><rect x="749.1" y="245" width="1.2" height="15.0" fill="rgb(208,183,20)" rx="2" ry="2" />
<text  x="752.07" y="255.5" ></text>
</g>
<g >
<title>free_unref_page_list (15 samples, 0.15%)</title><rect x="998.3" y="181" width="1.8" height="15.0" fill="rgb(243,29,8)" rx="2" ry="2" />
<text  x="1001.34" y="191.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (120 samples, 1.22%)</title><rect x="19.2" y="501" width="14.4" height="15.0" fill="rgb(217,191,50)" rx="2" ry="2" />
<text  x="22.22" y="511.5" ></text>
</g>
<g >
<title>ovl_read_iter (255 samples, 2.59%)</title><rect x="557.2" y="453" width="30.5" height="15.0" fill="rgb(226,80,36)" rx="2" ry="2" />
<text  x="560.18" y="463.5" >ov..</text>
</g>
<g >
<title>unmap_region (1 samples, 0.01%)</title><rect x="11.7" y="485" width="0.1" height="15.0" fill="rgb(243,78,31)" rx="2" ry="2" />
<text  x="14.68" y="495.5" ></text>
</g>
<g >
<title>lru_cache_add (4 samples, 0.04%)</title><rect x="57.0" y="277" width="0.4" height="15.0" fill="rgb(226,215,44)" rx="2" ry="2" />
<text  x="59.96" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.03%)</title><rect x="1061.8" y="549" width="0.4" height="15.0" fill="rgb(224,22,46)" rx="2" ry="2" />
<text  x="1064.83" y="559.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="1187.8" y="405" width="0.2" height="15.0" fill="rgb(223,104,50)" rx="2" ry="2" />
<text  x="1190.84" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.01%)</title><rect x="1077.2" y="373" width="0.1" height="15.0" fill="rgb(205,16,24)" rx="2" ry="2" />
<text  x="1080.16" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="1067.3" y="421" width="0.2" height="15.0" fill="rgb(243,18,24)" rx="2" ry="2" />
<text  x="1070.34" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.01%)</title><rect x="1149.8" y="501" width="0.1" height="15.0" fill="rgb(205,109,7)" rx="2" ry="2" />
<text  x="1152.75" y="511.5" ></text>
</g>
<g >
<title>crypto_shash_update (11 samples, 0.11%)</title><rect x="762.2" y="213" width="1.4" height="15.0" fill="rgb(229,64,53)" rx="2" ry="2" />
<text  x="765.25" y="223.5" ></text>
</g>
<g >
<title>lind_write (8 samples, 0.08%)</title><rect x="1036.1" y="565" width="0.9" height="15.0" fill="rgb(220,171,53)" rx="2" ry="2" />
<text  x="1039.08" y="575.5" ></text>
</g>
<g >
<title>ext4_writepages (8 samples, 0.08%)</title><rect x="1105.7" y="373" width="0.9" height="15.0" fill="rgb(230,221,48)" rx="2" ry="2" />
<text  x="1108.67" y="383.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.04%)</title><rect x="1054.0" y="549" width="0.5" height="15.0" fill="rgb(232,5,34)" rx="2" ry="2" />
<text  x="1057.04" y="559.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (19 samples, 0.19%)</title><rect x="1078.0" y="565" width="2.3" height="15.0" fill="rgb(251,160,20)" rx="2" ry="2" />
<text  x="1081.00" y="575.5" ></text>
</g>
<g >
<title>ksys_write (2 samples, 0.02%)</title><rect x="827.8" y="517" width="0.2" height="15.0" fill="rgb(215,205,13)" rx="2" ry="2" />
<text  x="830.77" y="527.5" ></text>
</g>
<g >
<title>ext4_generic_write_checks (6 samples, 0.06%)</title><rect x="643.7" y="357" width="0.7" height="15.0" fill="rgb(209,198,18)" rx="2" ry="2" />
<text  x="646.66" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="465.9" y="549" width="0.1" height="15.0" fill="rgb(246,169,20)" rx="2" ry="2" />
<text  x="468.90" y="559.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (4 samples, 0.04%)</title><rect x="62.3" y="389" width="0.5" height="15.0" fill="rgb(254,204,12)" rx="2" ry="2" />
<text  x="65.35" y="399.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="1140.2" y="453" width="0.1" height="15.0" fill="rgb(229,162,13)" rx="2" ry="2" />
<text  x="1143.17" y="463.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.01%)</title><rect x="18.9" y="517" width="0.1" height="15.0" fill="rgb(212,149,22)" rx="2" ry="2" />
<text  x="21.86" y="527.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (69 samples, 0.70%)</title><rect x="689.9" y="293" width="8.3" height="15.0" fill="rgb(220,136,43)" rx="2" ry="2" />
<text  x="692.90" y="303.5" ></text>
</g>
<g >
<title>clear_page_erms (46 samples, 0.47%)</title><rect x="699.6" y="245" width="5.5" height="15.0" fill="rgb(236,36,14)" rx="2" ry="2" />
<text  x="702.60" y="255.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="1034.4" y="533" width="0.1" height="15.0" fill="rgb(227,205,6)" rx="2" ry="2" />
<text  x="1037.40" y="543.5" ></text>
</g>
<g >
<title>unlock_page_memcg (1 samples, 0.01%)</title><rect x="738.3" y="277" width="0.1" height="15.0" fill="rgb(213,3,50)" rx="2" ry="2" />
<text  x="741.29" y="287.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u32 (3 samples, 0.03%)</title><rect x="1059.9" y="469" width="0.4" height="15.0" fill="rgb(250,198,14)" rx="2" ry="2" />
<text  x="1062.91" y="479.5" ></text>
</g>
<g >
<title>cpu_startup_entry (138 samples, 1.40%)</title><rect x="19.1" y="533" width="16.5" height="15.0" fill="rgb(254,184,45)" rx="2" ry="2" />
<text  x="22.10" y="543.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="1136.7" y="421" width="0.1" height="15.0" fill="rgb(226,111,9)" rx="2" ry="2" />
<text  x="1139.70" y="431.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u16&gt;::to_be (2 samples, 0.02%)</title><rect x="1075.7" y="517" width="0.3" height="15.0" fill="rgb(219,106,23)" rx="2" ry="2" />
<text  x="1078.73" y="527.5" ></text>
</g>
<g >
<title>tick_irq_enter (1 samples, 0.01%)</title><rect x="1107.7" y="405" width="0.1" height="15.0" fill="rgb(240,123,38)" rx="2" ry="2" />
<text  x="1110.71" y="415.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (5 samples, 0.05%)</title><rect x="1062.2" y="517" width="0.6" height="15.0" fill="rgb(249,226,50)" rx="2" ry="2" />
<text  x="1065.19" y="527.5" ></text>
</g>
<g >
<title>do_mmap (2 samples, 0.02%)</title><rect x="18.3" y="485" width="0.2" height="15.0" fill="rgb(252,199,7)" rx="2" ry="2" />
<text  x="21.27" y="495.5" ></text>
</g>
<g >
<title>dentry_kill (8 samples, 0.08%)</title><rect x="1026.6" y="421" width="1.0" height="15.0" fill="rgb(205,92,22)" rx="2" ry="2" />
<text  x="1029.61" y="431.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.01%)</title><rect x="1008.5" y="53" width="0.1" height="15.0" fill="rgb(216,65,19)" rx="2" ry="2" />
<text  x="1011.53" y="63.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (3 samples, 0.03%)</title><rect x="1077.6" y="501" width="0.4" height="15.0" fill="rgb(218,7,14)" rx="2" ry="2" />
<text  x="1080.64" y="511.5" ></text>
</g>
<g >
<title>do_sys_poll (8 samples, 0.08%)</title><rect x="42.0" y="501" width="0.9" height="15.0" fill="rgb(225,62,37)" rx="2" ry="2" />
<text  x="44.98" y="511.5" ></text>
</g>
<g >
<title>xa_get_order (5 samples, 0.05%)</title><rect x="693.7" y="261" width="0.6" height="15.0" fill="rgb(247,1,24)" rx="2" ry="2" />
<text  x="696.73" y="271.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (16 samples, 0.16%)</title><rect x="537.5" y="453" width="1.9" height="15.0" fill="rgb(225,179,6)" rx="2" ry="2" />
<text  x="540.53" y="463.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.01%)</title><rect x="11.6" y="485" width="0.1" height="15.0" fill="rgb(249,229,21)" rx="2" ry="2" />
<text  x="14.56" y="495.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="1066.0" y="533" width="0.5" height="15.0" fill="rgb(234,80,0)" rx="2" ry="2" />
<text  x="1069.02" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (2 samples, 0.02%)</title><rect x="1023.9" y="485" width="0.2" height="15.0" fill="rgb(229,154,25)" rx="2" ry="2" />
<text  x="1026.86" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.01%)</title><rect x="1172.3" y="357" width="0.1" height="15.0" fill="rgb(212,107,45)" rx="2" ry="2" />
<text  x="1175.27" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="1058.8" y="437" width="0.2" height="15.0" fill="rgb(252,64,33)" rx="2" ry="2" />
<text  x="1061.84" y="447.5" ></text>
</g>
<g >
<title>ext4_getblk (1 samples, 0.01%)</title><rect x="11.8" y="341" width="0.1" height="15.0" fill="rgb(235,122,51)" rx="2" ry="2" />
<text  x="14.80" y="351.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (95 samples, 0.96%)</title><rect x="674.3" y="325" width="11.4" height="15.0" fill="rgb(219,60,44)" rx="2" ry="2" />
<text  x="677.33" y="335.5" ></text>
</g>
<g >
<title>run_ksoftirqd (1 samples, 0.01%)</title><rect x="1105.4" y="517" width="0.2" height="15.0" fill="rgb(218,201,13)" rx="2" ry="2" />
<text  x="1108.43" y="527.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (4 samples, 0.04%)</title><rect x="691.8" y="261" width="0.5" height="15.0" fill="rgb(222,57,24)" rx="2" ry="2" />
<text  x="694.82" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="66.8" y="357" width="0.1" height="15.0" fill="rgb(209,52,34)" rx="2" ry="2" />
<text  x="69.78" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (5 samples, 0.05%)</title><rect x="1149.2" y="501" width="0.6" height="15.0" fill="rgb(244,218,19)" rx="2" ry="2" />
<text  x="1152.15" y="511.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.01%)</title><rect x="1005.7" y="53" width="0.1" height="15.0" fill="rgb(222,29,9)" rx="2" ry="2" />
<text  x="1008.65" y="63.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.01%)</title><rect x="1142.9" y="501" width="0.1" height="15.0" fill="rgb(231,218,46)" rx="2" ry="2" />
<text  x="1145.92" y="511.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (2 samples, 0.02%)</title><rect x="787.5" y="245" width="0.3" height="15.0" fill="rgb(215,72,9)" rx="2" ry="2" />
<text  x="790.52" y="255.5" ></text>
</g>
<g >
<title>from_kprojid (2 samples, 0.02%)</title><rect x="785.0" y="229" width="0.2" height="15.0" fill="rgb(210,172,14)" rx="2" ry="2" />
<text  x="788.01" y="239.5" ></text>
</g>
<g >
<title>generic_perform_write (77 samples, 0.78%)</title><rect x="53.0" y="357" width="9.2" height="15.0" fill="rgb(212,49,25)" rx="2" ry="2" />
<text  x="56.00" y="367.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.01%)</title><rect x="62.7" y="357" width="0.1" height="15.0" fill="rgb(237,56,49)" rx="2" ry="2" />
<text  x="65.71" y="367.5" ></text>
</g>
<g >
<title>generic_file_llseek_size (1 samples, 0.01%)</title><rect x="541.5" y="453" width="0.1" height="15.0" fill="rgb(229,143,28)" rx="2" ry="2" />
<text  x="544.49" y="463.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_r11 (1 samples, 0.01%)</title><rect x="639.9" y="357" width="0.2" height="15.0" fill="rgb(249,96,18)" rx="2" ry="2" />
<text  x="642.95" y="367.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (1 samples, 0.01%)</title><rect x="1149.6" y="453" width="0.2" height="15.0" fill="rgb(232,60,20)" rx="2" ry="2" />
<text  x="1152.63" y="463.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.01%)</title><rect x="522.6" y="389" width="0.1" height="15.0" fill="rgb(246,164,16)" rx="2" ry="2" />
<text  x="525.56" y="399.5" ></text>
</g>
<g >
<title>evict (8 samples, 0.08%)</title><rect x="1026.6" y="325" width="1.0" height="15.0" fill="rgb(239,204,51)" rx="2" ry="2" />
<text  x="1029.61" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.01%)</title><rect x="41.4" y="437" width="0.1" height="15.0" fill="rgb(228,63,17)" rx="2" ry="2" />
<text  x="44.38" y="447.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.01%)</title><rect x="59.8" y="245" width="0.2" height="15.0" fill="rgb(211,1,7)" rx="2" ry="2" />
<text  x="62.83" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="1060.3" y="389" width="0.1" height="15.0" fill="rgb(231,67,46)" rx="2" ry="2" />
<text  x="1063.27" y="399.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (3 samples, 0.03%)</title><rect x="12.2" y="453" width="0.3" height="15.0" fill="rgb(246,213,8)" rx="2" ry="2" />
<text  x="15.16" y="463.5" ></text>
</g>
<g >
<title>____sys_recvmsg (1 samples, 0.01%)</title><rect x="11.9" y="485" width="0.1" height="15.0" fill="rgb(209,85,2)" rx="2" ry="2" />
<text  x="14.92" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.05%)</title><rect x="1024.1" y="533" width="0.6" height="15.0" fill="rgb(227,56,44)" rx="2" ry="2" />
<text  x="1027.10" y="543.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="66.8" y="341" width="0.1" height="15.0" fill="rgb(251,151,32)" rx="2" ry="2" />
<text  x="69.78" y="351.5" ></text>
</g>
<g >
<title>__cancel_dirty_page (8 samples, 0.08%)</title><rect x="1005.3" y="101" width="1.0" height="15.0" fill="rgb(246,229,22)" rx="2" ry="2" />
<text  x="1008.29" y="111.5" ></text>
</g>
<g >
<title>all (9,851 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(233,132,6)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>lind_read (12 samples, 0.12%)</title><rect x="1034.6" y="565" width="1.5" height="15.0" fill="rgb(208,152,36)" rx="2" ry="2" />
<text  x="1037.64" y="575.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (1 samples, 0.01%)</title><rect x="306.1" y="565" width="0.1" height="15.0" fill="rgb(230,214,20)" rx="2" ry="2" />
<text  x="309.11" y="575.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.01%)</title><rect x="1006.0" y="69" width="0.1" height="15.0" fill="rgb(237,150,29)" rx="2" ry="2" />
<text  x="1009.01" y="79.5" ></text>
</g>
<g >
<title>quiet_vmstat (3 samples, 0.03%)</title><rect x="1140.4" y="453" width="0.4" height="15.0" fill="rgb(219,57,53)" rx="2" ry="2" />
<text  x="1143.41" y="463.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.01%)</title><rect x="1064.2" y="421" width="0.1" height="15.0" fill="rgb(252,66,10)" rx="2" ry="2" />
<text  x="1067.23" y="431.5" ></text>
</g>
<g >
<title>__dentry_kill (102 samples, 1.04%)</title><rect x="997.4" y="357" width="12.2" height="15.0" fill="rgb(205,104,16)" rx="2" ry="2" />
<text  x="1000.39" y="367.5" ></text>
</g>
<g >
<title>__f_unlock_pos (4 samples, 0.04%)</title><rect x="605.7" y="501" width="0.5" height="15.0" fill="rgb(248,91,5)" rx="2" ry="2" />
<text  x="608.69" y="511.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="471.8" y="453" width="0.1" height="15.0" fill="rgb(227,100,8)" rx="2" ry="2" />
<text  x="474.77" y="463.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.01%)</title><rect x="18.6" y="501" width="0.1" height="15.0" fill="rgb(214,167,42)" rx="2" ry="2" />
<text  x="21.62" y="511.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (4 samples, 0.04%)</title><rect x="1027.0" y="181" width="0.5" height="15.0" fill="rgb(247,193,31)" rx="2" ry="2" />
<text  x="1029.97" y="191.5" ></text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (1 samples, 0.01%)</title><rect x="1106.2" y="85" width="0.1" height="15.0" fill="rgb(253,202,39)" rx="2" ry="2" />
<text  x="1109.15" y="95.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.01%)</title><rect x="42.7" y="421" width="0.1" height="15.0" fill="rgb(236,143,38)" rx="2" ry="2" />
<text  x="45.70" y="431.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.01%)</title><rect x="697.2" y="229" width="0.1" height="15.0" fill="rgb(248,129,20)" rx="2" ry="2" />
<text  x="700.21" y="239.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (1 samples, 0.01%)</title><rect x="18.5" y="437" width="0.1" height="15.0" fill="rgb(242,48,17)" rx="2" ry="2" />
<text  x="21.50" y="447.5" ></text>
</g>
<g >
<title>ext4_inode_table (1 samples, 0.01%)</title><rect x="802.5" y="229" width="0.1" height="15.0" fill="rgb(238,34,48)" rx="2" ry="2" />
<text  x="805.50" y="239.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.01%)</title><rect x="588.8" y="453" width="0.1" height="15.0" fill="rgb(248,205,39)" rx="2" ry="2" />
<text  x="591.80" y="463.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="1067.0" y="469" width="0.1" height="15.0" fill="rgb(222,71,6)" rx="2" ry="2" />
<text  x="1069.98" y="479.5" ></text>
</g>
<g >
<title>atime_needs_update (5 samples, 0.05%)</title><rect x="559.2" y="405" width="0.6" height="15.0" fill="rgb(231,173,4)" rx="2" ry="2" />
<text  x="562.21" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (5 samples, 0.05%)</title><rect x="39.0" y="389" width="0.6" height="15.0" fill="rgb(210,148,13)" rx="2" ry="2" />
<text  x="41.99" y="399.5" ></text>
</g>
<g >
<title>generic_write_check_limits (1 samples, 0.01%)</title><rect x="643.8" y="341" width="0.1" height="15.0" fill="rgb(252,101,1)" rx="2" ry="2" />
<text  x="646.78" y="351.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.01%)</title><rect x="1026.5" y="357" width="0.1" height="15.0" fill="rgb(226,78,23)" rx="2" ry="2" />
<text  x="1029.49" y="367.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.01%)</title><rect x="18.6" y="517" width="0.1" height="15.0" fill="rgb(206,180,54)" rx="2" ry="2" />
<text  x="21.62" y="527.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.01%)</title><rect x="11.6" y="469" width="0.1" height="15.0" fill="rgb(249,23,8)" rx="2" ry="2" />
<text  x="14.56" y="479.5" ></text>
</g>
<g >
<title>__schedule (10 samples, 0.10%)</title><rect x="34.1" y="485" width="1.2" height="15.0" fill="rgb(226,199,44)" rx="2" ry="2" />
<text  x="37.08" y="495.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.02%)</title><rect x="1037.8" y="357" width="0.2" height="15.0" fill="rgb(246,151,28)" rx="2" ry="2" />
<text  x="1040.75" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="41.9" y="549" width="0.1" height="15.0" fill="rgb(221,142,36)" rx="2" ry="2" />
<text  x="44.86" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (2 samples, 0.02%)</title><rect x="67.4" y="533" width="0.2" height="15.0" fill="rgb(236,127,25)" rx="2" ry="2" />
<text  x="70.38" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="1077.2" y="357" width="0.1" height="15.0" fill="rgb(233,170,12)" rx="2" ry="2" />
<text  x="1080.16" y="367.5" ></text>
</g>
<g >
<title>__wake_up (2 samples, 0.02%)</title><rect x="59.4" y="277" width="0.2" height="15.0" fill="rgb(226,203,47)" rx="2" ry="2" />
<text  x="62.35" y="287.5" ></text>
</g>
<g >
<title>start_this_handle (47 samples, 0.48%)</title><rect x="668.3" y="293" width="5.7" height="15.0" fill="rgb(245,156,20)" rx="2" ry="2" />
<text  x="671.34" y="303.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.01%)</title><rect x="1026.5" y="485" width="0.1" height="15.0" fill="rgb(229,106,20)" rx="2" ry="2" />
<text  x="1029.49" y="495.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (5 samples, 0.05%)</title><rect x="544.6" y="517" width="0.6" height="15.0" fill="rgb(249,8,22)" rx="2" ry="2" />
<text  x="547.60" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="1059.7" y="373" width="0.1" height="15.0" fill="rgb(205,137,48)" rx="2" ry="2" />
<text  x="1062.67" y="383.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.05%)</title><rect x="1024.1" y="549" width="0.6" height="15.0" fill="rgb(251,12,26)" rx="2" ry="2" />
<text  x="1027.10" y="559.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (2 samples, 0.02%)</title><rect x="121.8" y="565" width="0.2" height="15.0" fill="rgb(211,203,1)" rx="2" ry="2" />
<text  x="124.76" y="575.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.01%)</title><rect x="522.6" y="453" width="0.1" height="15.0" fill="rgb(218,172,46)" rx="2" ry="2" />
<text  x="525.56" y="463.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.01%)</title><rect x="1006.1" y="85" width="0.2" height="15.0" fill="rgb(218,0,29)" rx="2" ry="2" />
<text  x="1009.13" y="95.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (9 samples, 0.09%)</title><rect x="546.3" y="549" width="1.1" height="15.0" fill="rgb(210,142,0)" rx="2" ry="2" />
<text  x="549.28" y="559.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (1 samples, 0.01%)</title><rect x="1107.7" y="389" width="0.1" height="15.0" fill="rgb(252,22,47)" rx="2" ry="2" />
<text  x="1110.71" y="399.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (2 samples, 0.02%)</title><rect x="997.9" y="149" width="0.2" height="15.0" fill="rgb(230,205,42)" rx="2" ry="2" />
<text  x="1000.87" y="159.5" ></text>
</g>
<g >
<title>__GI_execve (1 samples, 0.01%)</title><rect x="41.9" y="565" width="0.1" height="15.0" fill="rgb(227,69,23)" rx="2" ry="2" />
<text  x="44.86" y="575.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.01%)</title><rect x="802.7" y="261" width="0.2" height="15.0" fill="rgb(213,206,53)" rx="2" ry="2" />
<text  x="805.74" y="271.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (6 samples, 0.06%)</title><rect x="801.4" y="213" width="0.7" height="15.0" fill="rgb(233,61,3)" rx="2" ry="2" />
<text  x="804.42" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.12%)</title><rect x="1018.3" y="549" width="1.5" height="15.0" fill="rgb(219,171,2)" rx="2" ry="2" />
<text  x="1021.35" y="559.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (5 samples, 0.05%)</title><rect x="1146.5" y="373" width="0.6" height="15.0" fill="rgb(212,153,17)" rx="2" ry="2" />
<text  x="1149.52" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="522.6" y="485" width="0.1" height="15.0" fill="rgb(207,50,37)" rx="2" ry="2" />
<text  x="525.56" y="495.5" ></text>
</g>
<g >
<title>_perf_event_enable (65 samples, 0.66%)</title><rect x="44.1" y="453" width="7.8" height="15.0" fill="rgb(240,68,29)" rx="2" ry="2" />
<text  x="47.14" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="1058.8" y="453" width="0.2" height="15.0" fill="rgb(220,221,23)" rx="2" ry="2" />
<text  x="1061.84" y="463.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="1059.7" y="389" width="0.1" height="15.0" fill="rgb(218,54,52)" rx="2" ry="2" />
<text  x="1062.67" y="399.5" ></text>
</g>
<g >
<title>schedule_idle (46 samples, 0.47%)</title><rect x="1143.0" y="501" width="5.6" height="15.0" fill="rgb(220,109,9)" rx="2" ry="2" />
<text  x="1146.04" y="511.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="471.8" y="549" width="0.1" height="15.0" fill="rgb(239,157,20)" rx="2" ry="2" />
<text  x="474.77" y="559.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.02%)</title><rect x="1149.4" y="485" width="0.2" height="15.0" fill="rgb(219,22,54)" rx="2" ry="2" />
<text  x="1152.39" y="495.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="1029.6" y="485" width="0.1" height="15.0" fill="rgb(218,144,31)" rx="2" ry="2" />
<text  x="1032.61" y="495.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="32.4" y="437" width="0.1" height="15.0" fill="rgb(213,18,53)" rx="2" ry="2" />
<text  x="35.40" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.01%)</title><rect x="1059.3" y="565" width="0.1" height="15.0" fill="rgb(233,41,18)" rx="2" ry="2" />
<text  x="1062.31" y="575.5" ></text>
</g>
<g >
<title>fput (19 samples, 0.19%)</title><rect x="507.5" y="501" width="2.2" height="15.0" fill="rgb(212,115,16)" rx="2" ry="2" />
<text  x="510.47" y="511.5" ></text>
</g>
<g >
<title>vfs_statx (1 samples, 0.01%)</title><rect x="18.5" y="501" width="0.1" height="15.0" fill="rgb(219,1,47)" rx="2" ry="2" />
<text  x="21.50" y="511.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="1024.7" y="533" width="0.1" height="15.0" fill="rgb(213,162,11)" rx="2" ry="2" />
<text  x="1027.70" y="543.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.01%)</title><rect x="738.2" y="277" width="0.1" height="15.0" fill="rgb(246,226,6)" rx="2" ry="2" />
<text  x="741.17" y="287.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.01%)</title><rect x="42.7" y="405" width="0.1" height="15.0" fill="rgb(253,201,54)" rx="2" ry="2" />
<text  x="45.70" y="415.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.01%)</title><rect x="1037.9" y="309" width="0.1" height="15.0" fill="rgb(213,104,50)" rx="2" ry="2" />
<text  x="1040.87" y="319.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.01%)</title><rect x="11.8" y="485" width="0.1" height="15.0" fill="rgb(244,177,5)" rx="2" ry="2" />
<text  x="14.80" y="495.5" ></text>
</g>
<g >
<title>node_dirty_ok (6 samples, 0.06%)</title><rect x="705.1" y="245" width="0.7" height="15.0" fill="rgb(228,144,15)" rx="2" ry="2" />
<text  x="708.11" y="255.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.01%)</title><rect x="1105.4" y="469" width="0.2" height="15.0" fill="rgb(212,170,46)" rx="2" ry="2" />
<text  x="1108.43" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="1024.7" y="485" width="0.1" height="15.0" fill="rgb(246,81,23)" rx="2" ry="2" />
<text  x="1027.70" y="495.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.01%)</title><rect x="39.7" y="405" width="0.1" height="15.0" fill="rgb(213,29,16)" rx="2" ry="2" />
<text  x="42.71" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="39.5" y="325" width="0.1" height="15.0" fill="rgb(247,93,54)" rx="2" ry="2" />
<text  x="42.47" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.01%)</title><rect x="18.9" y="533" width="0.1" height="15.0" fill="rgb(235,189,13)" rx="2" ry="2" />
<text  x="21.86" y="543.5" ></text>
</g>
<g >
<title>sched_clock_cpu (6 samples, 0.06%)</title><rect x="1169.2" y="389" width="0.7" height="15.0" fill="rgb(233,57,37)" rx="2" ry="2" />
<text  x="1172.16" y="399.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.01%)</title><rect x="57.3" y="229" width="0.1" height="15.0" fill="rgb(253,57,50)" rx="2" ry="2" />
<text  x="60.31" y="239.5" ></text>
</g>
<g >
<title>xas_load (3 samples, 0.03%)</title><rect x="693.9" y="245" width="0.3" height="15.0" fill="rgb(221,216,47)" rx="2" ry="2" />
<text  x="696.85" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="1143.6" y="437" width="0.3" height="15.0" fill="rgb(252,60,29)" rx="2" ry="2" />
<text  x="1146.64" y="447.5" ></text>
</g>
<g >
<title>find_get_entries (2 samples, 0.02%)</title><rect x="1001.8" y="197" width="0.3" height="15.0" fill="rgb(252,179,49)" rx="2" ry="2" />
<text  x="1004.82" y="207.5" ></text>
</g>
<g >
<title>exc_page_fault (2 samples, 0.02%)</title><rect x="833.9" y="533" width="0.2" height="15.0" fill="rgb(241,49,8)" rx="2" ry="2" />
<text  x="836.88" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.02%)</title><rect x="550.0" y="533" width="0.2" height="15.0" fill="rgb(226,206,3)" rx="2" ry="2" />
<text  x="552.99" y="543.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.01%)</title><rect x="816.6" y="373" width="0.2" height="15.0" fill="rgb(213,217,0)" rx="2" ry="2" />
<text  x="819.63" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (7 samples, 0.07%)</title><rect x="1024.9" y="485" width="0.9" height="15.0" fill="rgb(244,3,35)" rx="2" ry="2" />
<text  x="1027.94" y="495.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.01%)</title><rect x="1145.6" y="405" width="0.1" height="15.0" fill="rgb(216,30,43)" rx="2" ry="2" />
<text  x="1148.56" y="415.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.01%)</title><rect x="555.9" y="469" width="0.1" height="15.0" fill="rgb(242,155,23)" rx="2" ry="2" />
<text  x="558.86" y="479.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (2 samples, 0.02%)</title><rect x="39.3" y="357" width="0.3" height="15.0" fill="rgb(227,100,5)" rx="2" ry="2" />
<text  x="42.35" y="367.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.01%)</title><rect x="331.5" y="501" width="0.1" height="15.0" fill="rgb(213,177,36)" rx="2" ry="2" />
<text  x="334.50" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.03%)</title><rect x="997.0" y="549" width="0.4" height="15.0" fill="rgb(233,77,40)" rx="2" ry="2" />
<text  x="1000.03" y="559.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 0.65%)</title><rect x="44.3" y="293" width="7.6" height="15.0" fill="rgb(229,198,50)" rx="2" ry="2" />
<text  x="47.26" y="303.5" ></text>
</g>
<g >
<title>scsi_queue_rq (1 samples, 0.01%)</title><rect x="1106.2" y="69" width="0.1" height="15.0" fill="rgb(237,196,24)" rx="2" ry="2" />
<text  x="1109.15" y="79.5" ></text>
</g>
<g >
<title>find_get_entry (49 samples, 0.50%)</title><rect x="709.1" y="293" width="5.8" height="15.0" fill="rgb(244,114,50)" rx="2" ry="2" />
<text  x="712.06" y="303.5" ></text>
</g>
<g >
<title>ext4_nonda_switch (1 samples, 0.01%)</title><rect x="804.2" y="341" width="0.1" height="15.0" fill="rgb(250,80,32)" rx="2" ry="2" />
<text  x="807.17" y="351.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.01%)</title><rect x="1174.8" y="437" width="0.1" height="15.0" fill="rgb(229,7,22)" rx="2" ry="2" />
<text  x="1177.79" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.07%)</title><rect x="1024.9" y="501" width="0.9" height="15.0" fill="rgb(246,192,22)" rx="2" ry="2" />
<text  x="1027.94" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="66.7" y="501" width="0.1" height="15.0" fill="rgb(221,36,35)" rx="2" ry="2" />
<text  x="69.66" y="511.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="1005.5" y="37" width="0.2" height="15.0" fill="rgb(226,216,18)" rx="2" ry="2" />
<text  x="1008.53" y="47.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.01%)</title><rect x="1009.5" y="229" width="0.1" height="15.0" fill="rgb(229,6,53)" rx="2" ry="2" />
<text  x="1012.48" y="239.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.01%)</title><rect x="471.8" y="373" width="0.1" height="15.0" fill="rgb(247,176,41)" rx="2" ry="2" />
<text  x="474.77" y="383.5" ></text>
</g>
<g >
<title>ovl_llseek (131 samples, 1.33%)</title><rect x="525.9" y="485" width="15.7" height="15.0" fill="rgb(236,99,20)" rx="2" ry="2" />
<text  x="528.91" y="495.5" ></text>
</g>
<g >
<title>memset_erms (7 samples, 0.07%)</title><rect x="684.9" y="309" width="0.8" height="15.0" fill="rgb(253,110,28)" rx="2" ry="2" />
<text  x="687.87" y="319.5" ></text>
</g>
<g >
<title>__blk_mq_sched_dispatch_requests (1 samples, 0.01%)</title><rect x="1106.2" y="117" width="0.1" height="15.0" fill="rgb(210,83,43)" rx="2" ry="2" />
<text  x="1109.15" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.01%)</title><rect x="331.5" y="517" width="0.1" height="15.0" fill="rgb(239,27,12)" rx="2" ry="2" />
<text  x="334.50" y="527.5" ></text>
</g>
<g >
<title>__find_get_block (1 samples, 0.01%)</title><rect x="796.7" y="213" width="0.2" height="15.0" fill="rgb(217,190,34)" rx="2" ry="2" />
<text  x="799.75" y="223.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.01%)</title><rect x="310.2" y="501" width="0.1" height="15.0" fill="rgb(221,78,37)" rx="2" ry="2" />
<text  x="313.18" y="511.5" ></text>
</g>
<g >
<title>rmqueue (3 samples, 0.03%)</title><rect x="58.8" y="245" width="0.3" height="15.0" fill="rgb(222,135,0)" rx="2" ry="2" />
<text  x="61.75" y="255.5" ></text>
</g>
<g >
<title>do_unlinkat (102 samples, 1.04%)</title><rect x="997.4" y="501" width="12.2" height="15.0" fill="rgb(232,114,43)" rx="2" ry="2" />
<text  x="1000.39" y="511.5" ></text>
</g>
<g >
<title>ext4_dx_find_entry (1 samples, 0.01%)</title><rect x="11.8" y="389" width="0.1" height="15.0" fill="rgb(206,4,53)" rx="2" ry="2" />
<text  x="14.80" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="1062.0" y="501" width="0.2" height="15.0" fill="rgb(238,32,20)" rx="2" ry="2" />
<text  x="1064.95" y="511.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (39 samples, 0.40%)</title><rect x="242.0" y="565" width="4.7" height="15.0" fill="rgb(245,173,20)" rx="2" ry="2" />
<text  x="245.02" y="575.5" ></text>
</g>
<g >
<title>security_file_permission (2 samples, 0.02%)</title><rect x="821.3" y="405" width="0.2" height="15.0" fill="rgb(222,125,23)" rx="2" ry="2" />
<text  x="824.30" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.07%)</title><rect x="1074.5" y="453" width="0.9" height="15.0" fill="rgb(252,146,43)" rx="2" ry="2" />
<text  x="1077.53" y="463.5" ></text>
</g>
<g >
<title>errseq_check (2 samples, 0.02%)</title><rect x="789.0" y="229" width="0.2" height="15.0" fill="rgb(238,192,7)" rx="2" ry="2" />
<text  x="791.96" y="239.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.01%)</title><rect x="42.5" y="453" width="0.1" height="15.0" fill="rgb(240,140,22)" rx="2" ry="2" />
<text  x="45.46" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="19.2" y="469" width="0.1" height="15.0" fill="rgb(250,222,25)" rx="2" ry="2" />
<text  x="22.22" y="479.5" ></text>
</g>
<g >
<title>__seccomp_filter (1 samples, 0.01%)</title><rect x="19.0" y="485" width="0.1" height="15.0" fill="rgb(210,176,44)" rx="2" ry="2" />
<text  x="21.98" y="495.5" ></text>
</g>
<g >
<title>do_iter_read (212 samples, 2.15%)</title><rect x="561.8" y="421" width="25.4" height="15.0" fill="rgb(247,128,15)" rx="2" ry="2" />
<text  x="564.85" y="431.5" >d..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.07%)</title><rect x="1076.1" y="437" width="0.8" height="15.0" fill="rgb(219,142,41)" rx="2" ry="2" />
<text  x="1079.08" y="447.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (3 samples, 0.03%)</title><rect x="698.6" y="261" width="0.4" height="15.0" fill="rgb(220,31,15)" rx="2" ry="2" />
<text  x="701.64" y="271.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.01%)</title><rect x="1105.3" y="517" width="0.1" height="15.0" fill="rgb(208,86,49)" rx="2" ry="2" />
<text  x="1108.31" y="527.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.01%)</title><rect x="11.9" y="309" width="0.1" height="15.0" fill="rgb(250,118,16)" rx="2" ry="2" />
<text  x="14.92" y="319.5" ></text>
</g>
<g >
<title>mutex_lock (16 samples, 0.16%)</title><rect x="519.6" y="469" width="1.9" height="15.0" fill="rgb(208,177,12)" rx="2" ry="2" />
<text  x="522.56" y="479.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.01%)</title><rect x="1054.5" y="501" width="0.1" height="15.0" fill="rgb(208,140,40)" rx="2" ry="2" />
<text  x="1057.52" y="511.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (4 samples, 0.04%)</title><rect x="1080.3" y="565" width="0.5" height="15.0" fill="rgb(227,9,43)" rx="2" ry="2" />
<text  x="1083.28" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="1059.7" y="357" width="0.1" height="15.0" fill="rgb(241,73,31)" rx="2" ry="2" />
<text  x="1062.67" y="367.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.01%)</title><rect x="11.6" y="549" width="0.1" height="15.0" fill="rgb(208,61,28)" rx="2" ry="2" />
<text  x="14.56" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (6 samples, 0.06%)</title><rect x="1071.4" y="485" width="0.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1074.41" y="495.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (2 samples, 0.02%)</title><rect x="682.0" y="277" width="0.2" height="15.0" fill="rgb(242,92,11)" rx="2" ry="2" />
<text  x="684.99" y="287.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (12 samples, 0.12%)</title><rect x="1146.5" y="405" width="1.5" height="15.0" fill="rgb(243,83,31)" rx="2" ry="2" />
<text  x="1149.52" y="415.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (1 samples, 0.01%)</title><rect x="67.5" y="517" width="0.1" height="15.0" fill="rgb(223,12,18)" rx="2" ry="2" />
<text  x="70.50" y="527.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.01%)</title><rect x="310.2" y="533" width="0.1" height="15.0" fill="rgb(214,140,30)" rx="2" ry="2" />
<text  x="313.18" y="543.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.04%)</title><rect x="63.8" y="533" width="0.5" height="15.0" fill="rgb(215,228,17)" rx="2" ry="2" />
<text  x="66.78" y="543.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.01%)</title><rect x="331.5" y="341" width="0.1" height="15.0" fill="rgb(225,30,27)" rx="2" ry="2" />
<text  x="334.50" y="351.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (3 samples, 0.03%)</title><rect x="736.1" y="277" width="0.4" height="15.0" fill="rgb(236,26,53)" rx="2" ry="2" />
<text  x="739.14" y="287.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="1069.0" y="533" width="0.3" height="15.0" fill="rgb(231,207,16)" rx="2" ry="2" />
<text  x="1072.02" y="543.5" ></text>
</g>
<g >
<title>menu_select (8 samples, 0.08%)</title><rect x="32.5" y="469" width="1.0" height="15.0" fill="rgb(207,167,1)" rx="2" ry="2" />
<text  x="35.52" y="479.5" ></text>
</g>
<g >
<title>__rdl_realloc (3 samples, 0.03%)</title><rect x="997.0" y="565" width="0.4" height="15.0" fill="rgb(205,217,31)" rx="2" ry="2" />
<text  x="1000.03" y="575.5" ></text>
</g>
<g >
<title>__dentry_kill (8 samples, 0.08%)</title><rect x="1026.6" y="405" width="1.0" height="15.0" fill="rgb(234,184,40)" rx="2" ry="2" />
<text  x="1029.61" y="415.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.01%)</title><rect x="121.0" y="565" width="0.2" height="15.0" fill="rgb(215,85,29)" rx="2" ry="2" />
<text  x="124.04" y="575.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (110 samples, 1.12%)</title><rect x="19.3" y="469" width="13.2" height="15.0" fill="rgb(210,0,41)" rx="2" ry="2" />
<text  x="22.34" y="479.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (256 samples, 2.60%)</title><rect x="834.1" y="565" width="30.7" height="15.0" fill="rgb(238,41,22)" rx="2" ry="2" />
<text  x="837.12" y="575.5" >__..</text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.01%)</title><rect x="42.7" y="373" width="0.1" height="15.0" fill="rgb(210,222,11)" rx="2" ry="2" />
<text  x="45.70" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="1104.7" y="533" width="0.1" height="15.0" fill="rgb(228,74,13)" rx="2" ry="2" />
<text  x="1107.71" y="543.5" ></text>
</g>
<g >
<title>read_tsc (3 samples, 0.03%)</title><rect x="1188.3" y="421" width="0.4" height="15.0" fill="rgb(206,71,2)" rx="2" ry="2" />
<text  x="1191.32" y="431.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (1 samples, 0.01%)</title><rect x="62.1" y="341" width="0.1" height="15.0" fill="rgb(226,18,49)" rx="2" ry="2" />
<text  x="65.11" y="351.5" ></text>
</g>
<g >
<title>newidle_balance (7 samples, 0.07%)</title><rect x="40.4" y="389" width="0.9" height="15.0" fill="rgb(208,157,35)" rx="2" ry="2" />
<text  x="43.43" y="399.5" ></text>
</g>
<g >
<title>wb_do_writeback (8 samples, 0.08%)</title><rect x="1105.7" y="485" width="0.9" height="15.0" fill="rgb(221,98,2)" rx="2" ry="2" />
<text  x="1108.67" y="495.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="1067.3" y="405" width="0.2" height="15.0" fill="rgb(206,79,43)" rx="2" ry="2" />
<text  x="1070.34" y="415.5" ></text>
</g>
<g >
<title>create_empty_buffers (38 samples, 0.39%)</title><rect x="676.5" y="309" width="4.5" height="15.0" fill="rgb(229,95,41)" rx="2" ry="2" />
<text  x="679.48" y="319.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (1 samples, 0.01%)</title><rect x="1138.9" y="437" width="0.1" height="15.0" fill="rgb(231,7,36)" rx="2" ry="2" />
<text  x="1141.85" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (8 samples, 0.08%)</title><rect x="1060.4" y="549" width="1.0" height="15.0" fill="rgb(225,183,12)" rx="2" ry="2" />
<text  x="1063.39" y="559.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.01%)</title><rect x="827.4" y="469" width="0.1" height="15.0" fill="rgb(215,166,28)" rx="2" ry="2" />
<text  x="830.41" y="479.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (33 samples, 0.33%)</title><rect x="1030.2" y="549" width="4.0" height="15.0" fill="rgb(219,111,31)" rx="2" ry="2" />
<text  x="1033.21" y="559.5" ></text>
</g>
<g >
<title>___slab_alloc (7 samples, 0.07%)</title><rect x="678.2" y="229" width="0.8" height="15.0" fill="rgb(227,179,27)" rx="2" ry="2" />
<text  x="681.16" y="239.5" ></text>
</g>
<g >
<title>unmapped_area_topdown (1 samples, 0.01%)</title><rect x="18.3" y="405" width="0.1" height="15.0" fill="rgb(244,225,52)" rx="2" ry="2" />
<text  x="21.27" y="415.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.01%)</title><rect x="1026.5" y="405" width="0.1" height="15.0" fill="rgb(227,87,15)" rx="2" ry="2" />
<text  x="1029.49" y="415.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="1024.5" y="437" width="0.1" height="15.0" fill="rgb(223,194,32)" rx="2" ry="2" />
<text  x="1027.46" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.01%)</title><rect x="1139.0" y="421" width="0.1" height="15.0" fill="rgb(228,214,0)" rx="2" ry="2" />
<text  x="1141.97" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (9 samples, 0.09%)</title><rect x="1026.5" y="533" width="1.1" height="15.0" fill="rgb(253,85,34)" rx="2" ry="2" />
<text  x="1029.49" y="543.5" ></text>
</g>
<g >
<title>map_id_up (1 samples, 0.01%)</title><rect x="60.7" y="213" width="0.1" height="15.0" fill="rgb(251,89,54)" rx="2" ry="2" />
<text  x="63.67" y="223.5" ></text>
</g>
<g >
<title>generic_write_end (617 samples, 6.26%)</title><rect x="729.4" y="325" width="73.9" height="15.0" fill="rgb(227,116,25)" rx="2" ry="2" />
<text  x="732.43" y="335.5" >generic_..</text>
</g>
<g >
<title>_raw_write_lock_irq (1 samples, 0.01%)</title><rect x="1027.6" y="405" width="0.1" height="15.0" fill="rgb(250,138,35)" rx="2" ry="2" />
<text  x="1030.57" y="415.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2 samples, 0.02%)</title><rect x="829.9" y="533" width="0.3" height="15.0" fill="rgb(206,141,23)" rx="2" ry="2" />
<text  x="832.93" y="543.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.01%)</title><rect x="1059.7" y="517" width="0.1" height="15.0" fill="rgb(220,66,7)" rx="2" ry="2" />
<text  x="1062.67" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="1149.0" y="453" width="0.2" height="15.0" fill="rgb(254,125,45)" rx="2" ry="2" />
<text  x="1152.03" y="463.5" ></text>
</g>
<g >
<title>do_idle (4 samples, 0.04%)</title><rect x="12.0" y="517" width="0.5" height="15.0" fill="rgb(210,202,46)" rx="2" ry="2" />
<text  x="15.04" y="527.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.01%)</title><rect x="11.6" y="565" width="0.1" height="15.0" fill="rgb(233,219,11)" rx="2" ry="2" />
<text  x="14.56" y="575.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.01%)</title><rect x="40.4" y="373" width="0.1" height="15.0" fill="rgb(228,65,11)" rx="2" ry="2" />
<text  x="43.43" y="383.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="471.8" y="389" width="0.1" height="15.0" fill="rgb(211,135,47)" rx="2" ry="2" />
<text  x="474.77" y="399.5" ></text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.01%)</title><rect x="738.1" y="277" width="0.1" height="15.0" fill="rgb(237,92,54)" rx="2" ry="2" />
<text  x="741.05" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (102 samples, 1.04%)</title><rect x="997.4" y="533" width="12.2" height="15.0" fill="rgb(236,201,40)" rx="2" ry="2" />
<text  x="1000.39" y="543.5" ></text>
</g>
<g >
<title>map_id_up (4 samples, 0.04%)</title><rect x="785.2" y="213" width="0.5" height="15.0" fill="rgb(228,51,41)" rx="2" ry="2" />
<text  x="788.25" y="223.5" ></text>
</g>
<g >
<title>alloc_page_buffers (31 samples, 0.31%)</title><rect x="677.1" y="293" width="3.7" height="15.0" fill="rgb(244,182,38)" rx="2" ry="2" />
<text  x="680.08" y="303.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.05%)</title><rect x="1030.9" y="501" width="0.6" height="15.0" fill="rgb(244,90,36)" rx="2" ry="2" />
<text  x="1033.93" y="511.5" ></text>
</g>
<g >
<title>start_secondary (4 samples, 0.04%)</title><rect x="12.0" y="549" width="0.5" height="15.0" fill="rgb(230,88,32)" rx="2" ry="2" />
<text  x="15.04" y="559.5" ></text>
</g>
<g >
<title>vfs_iter_write (2 samples, 0.02%)</title><rect x="822.9" y="453" width="0.2" height="15.0" fill="rgb(244,64,31)" rx="2" ry="2" />
<text  x="825.86" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::log_metadata (27 samples, 0.27%)</title><rect x="1061.4" y="565" width="3.2" height="15.0" fill="rgb(224,18,9)" rx="2" ry="2" />
<text  x="1064.35" y="575.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.01%)</title><rect x="19.7" y="405" width="0.1" height="15.0" fill="rgb(205,71,49)" rx="2" ry="2" />
<text  x="22.70" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1107.7" y="453" width="0.1" height="15.0" fill="rgb(239,111,43)" rx="2" ry="2" />
<text  x="1110.71" y="463.5" ></text>
</g>
<g >
<title>____fput (8 samples, 0.08%)</title><rect x="1026.6" y="469" width="1.0" height="15.0" fill="rgb(220,160,33)" rx="2" ry="2" />
<text  x="1029.61" y="479.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (8 samples, 0.08%)</title><rect x="63.4" y="549" width="1.0" height="15.0" fill="rgb(245,81,28)" rx="2" ry="2" />
<text  x="66.42" y="559.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.01%)</title><rect x="1105.0" y="501" width="0.1" height="15.0" fill="rgb(234,123,10)" rx="2" ry="2" />
<text  x="1107.95" y="511.5" ></text>
</g>
<g >
<title>try_to_release_page (1 samples, 0.01%)</title><rect x="1009.4" y="181" width="0.1" height="15.0" fill="rgb(226,5,23)" rx="2" ry="2" />
<text  x="1012.36" y="191.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.01%)</title><rect x="708.9" y="261" width="0.2" height="15.0" fill="rgb(241,221,3)" rx="2" ry="2" />
<text  x="711.94" y="271.5" ></text>
</g>
<g >
<title>file_update_time (1 samples, 0.01%)</title><rect x="646.8" y="357" width="0.1" height="15.0" fill="rgb(208,123,25)" rx="2" ry="2" />
<text  x="649.78" y="367.5" ></text>
</g>
<g >
<title>stop_this_handle (3 samples, 0.03%)</title><rect x="59.2" y="293" width="0.4" height="15.0" fill="rgb(251,15,11)" rx="2" ry="2" />
<text  x="62.23" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.07%)</title><rect x="1021.9" y="549" width="0.9" height="15.0" fill="rgb(227,93,0)" rx="2" ry="2" />
<text  x="1024.94" y="559.5" ></text>
</g>
<g >
<title>ext4_llseek (13 samples, 0.13%)</title><rect x="539.9" y="453" width="1.6" height="15.0" fill="rgb(240,212,15)" rx="2" ry="2" />
<text  x="542.93" y="463.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="1059.7" y="421" width="0.1" height="15.0" fill="rgb(251,116,38)" rx="2" ry="2" />
<text  x="1062.67" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="62.3" y="549" width="0.5" height="15.0" fill="rgb(239,156,53)" rx="2" ry="2" />
<text  x="65.35" y="559.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.01%)</title><rect x="32.9" y="453" width="0.1" height="15.0" fill="rgb(232,163,0)" rx="2" ry="2" />
<text  x="35.88" y="463.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.07%)</title><rect x="1074.5" y="517" width="0.9" height="15.0" fill="rgb(209,102,27)" rx="2" ry="2" />
<text  x="1077.53" y="527.5" ></text>
</g>
<g >
<title>xas_create (1 samples, 0.01%)</title><rect x="56.8" y="245" width="0.2" height="15.0" fill="rgb(217,136,9)" rx="2" ry="2" />
<text  x="59.84" y="255.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (8 samples, 0.08%)</title><rect x="120.1" y="565" width="0.9" height="15.0" fill="rgb(222,11,49)" rx="2" ry="2" />
<text  x="123.08" y="575.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.01%)</title><rect x="1037.9" y="181" width="0.1" height="15.0" fill="rgb(215,99,22)" rx="2" ry="2" />
<text  x="1040.87" y="191.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.01%)</title><rect x="11.9" y="469" width="0.1" height="15.0" fill="rgb(248,9,40)" rx="2" ry="2" />
<text  x="14.92" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="1064.3" y="421" width="0.2" height="15.0" fill="rgb(223,226,20)" rx="2" ry="2" />
<text  x="1067.35" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.06%)</title><rect x="1066.7" y="533" width="0.8" height="15.0" fill="rgb(237,216,30)" rx="2" ry="2" />
<text  x="1069.74" y="543.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.03%)</title><rect x="696.8" y="229" width="0.4" height="15.0" fill="rgb(231,48,21)" rx="2" ry="2" />
<text  x="699.85" y="239.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="1066.6" y="469" width="0.1" height="15.0" fill="rgb(228,111,34)" rx="2" ry="2" />
<text  x="1069.62" y="479.5" ></text>
</g>
<g >
<title>__brelse (2 samples, 0.02%)</title><rect x="60.2" y="245" width="0.2" height="15.0" fill="rgb(220,204,51)" rx="2" ry="2" />
<text  x="63.19" y="255.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="1077.2" y="469" width="0.1" height="15.0" fill="rgb(209,39,12)" rx="2" ry="2" />
<text  x="1080.16" y="479.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.01%)</title><rect x="35.5" y="517" width="0.1" height="15.0" fill="rgb(243,10,27)" rx="2" ry="2" />
<text  x="38.51" y="527.5" ></text>
</g>
<g >
<title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (7 samples, 0.07%)</title><rect x="1079.4" y="501" width="0.9" height="15.0" fill="rgb(220,69,38)" rx="2" ry="2" />
<text  x="1082.44" y="511.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.01%)</title><rect x="744.2" y="261" width="0.1" height="15.0" fill="rgb(210,117,2)" rx="2" ry="2" />
<text  x="747.16" y="271.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list (1 samples, 0.01%)</title><rect x="1106.2" y="213" width="0.1" height="15.0" fill="rgb(248,32,40)" rx="2" ry="2" />
<text  x="1109.15" y="223.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="620.2" y="469" width="0.2" height="15.0" fill="rgb(213,92,25)" rx="2" ry="2" />
<text  x="623.18" y="479.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.01%)</title><rect x="60.5" y="197" width="0.2" height="15.0" fill="rgb(251,1,37)" rx="2" ry="2" />
<text  x="63.55" y="207.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (7 samples, 0.07%)</title><rect x="42.0" y="485" width="0.8" height="15.0" fill="rgb(220,103,2)" rx="2" ry="2" />
<text  x="44.98" y="495.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (3 samples, 0.03%)</title><rect x="58.8" y="229" width="0.3" height="15.0" fill="rgb(222,198,44)" rx="2" ry="2" />
<text  x="61.75" y="239.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="1031.0" y="485" width="0.4" height="15.0" fill="rgb(240,223,51)" rx="2" ry="2" />
<text  x="1034.05" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (33 samples, 0.33%)</title><rect x="1030.2" y="533" width="4.0" height="15.0" fill="rgb(245,136,53)" rx="2" ry="2" />
<text  x="1033.21" y="543.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.01%)</title><rect x="1026.5" y="389" width="0.1" height="15.0" fill="rgb(227,30,28)" rx="2" ry="2" />
<text  x="1029.49" y="399.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (3 samples, 0.03%)</title><rect x="1138.1" y="453" width="0.4" height="15.0" fill="rgb(216,41,22)" rx="2" ry="2" />
<text  x="1141.13" y="463.5" ></text>
</g>
<g >
<title>jbd2__journal_start (1 samples, 0.01%)</title><rect x="54.1" y="309" width="0.1" height="15.0" fill="rgb(229,27,9)" rx="2" ry="2" />
<text  x="57.08" y="319.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.01%)</title><rect x="1071.3" y="549" width="0.1" height="15.0" fill="rgb(253,56,38)" rx="2" ry="2" />
<text  x="1074.29" y="559.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (102 samples, 1.04%)</title><rect x="997.4" y="405" width="12.2" height="15.0" fill="rgb(238,56,18)" rx="2" ry="2" />
<text  x="1000.39" y="415.5" ></text>
</g>
<g >
<title>rcu_idle_exit (4 samples, 0.04%)</title><rect x="1137.1" y="453" width="0.4" height="15.0" fill="rgb(218,198,39)" rx="2" ry="2" />
<text  x="1140.06" y="463.5" ></text>
</g>
<g >
<title>dispatcher@plt (1 samples, 0.01%)</title><rect x="1025.8" y="565" width="0.1" height="15.0" fill="rgb(244,118,20)" rx="2" ry="2" />
<text  x="1028.78" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (44 samples, 0.45%)</title><rect x="498.7" y="549" width="5.3" height="15.0" fill="rgb(207,10,37)" rx="2" ry="2" />
<text  x="501.72" y="559.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.01%)</title><rect x="331.5" y="405" width="0.1" height="15.0" fill="rgb(240,10,26)" rx="2" ry="2" />
<text  x="334.50" y="415.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (1 samples, 0.01%)</title><rect x="18.3" y="437" width="0.1" height="15.0" fill="rgb(218,194,11)" rx="2" ry="2" />
<text  x="21.27" y="447.5" ></text>
</g>
<g >
<title>[perf-18417.map] (4 samples, 0.04%)</title><rect x="309.8" y="565" width="0.5" height="15.0" fill="rgb(217,44,19)" rx="2" ry="2" />
<text  x="312.82" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="1060.3" y="405" width="0.1" height="15.0" fill="rgb(223,124,4)" rx="2" ry="2" />
<text  x="1063.27" y="415.5" ></text>
</g>
<g >
<title>alx_poll (2 samples, 0.02%)</title><rect x="19.3" y="325" width="0.3" height="15.0" fill="rgb(208,118,39)" rx="2" ry="2" />
<text  x="22.34" y="335.5" ></text>
</g>
<g >
<title>std::panicking::panicking (3 samples, 0.03%)</title><rect x="68.7" y="517" width="0.4" height="15.0" fill="rgb(243,211,3)" rx="2" ry="2" />
<text  x="71.69" y="527.5" ></text>
</g>
<g >
<title>ovl_inode_real (3 samples, 0.03%)</title><rect x="621.7" y="453" width="0.4" height="15.0" fill="rgb(224,192,45)" rx="2" ry="2" />
<text  x="624.74" y="463.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (4 samples, 0.04%)</title><rect x="1172.3" y="373" width="0.5" height="15.0" fill="rgb(236,223,34)" rx="2" ry="2" />
<text  x="1175.27" y="383.5" ></text>
</g>
<g >
<title>_int_free (29 samples, 0.29%)</title><rect x="1009.6" y="565" width="3.5" height="15.0" fill="rgb(248,206,5)" rx="2" ry="2" />
<text  x="1012.60" y="575.5" ></text>
</g>
<g >
<title>new_sync_write (79 samples, 0.80%)</title><rect x="52.8" y="469" width="9.4" height="15.0" fill="rgb(230,206,27)" rx="2" ry="2" />
<text  x="55.76" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.14%)</title><rect x="1018.2" y="565" width="1.7" height="15.0" fill="rgb(229,59,14)" rx="2" ry="2" />
<text  x="1021.23" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="1024.6" y="453" width="0.1" height="15.0" fill="rgb(230,59,44)" rx="2" ry="2" />
<text  x="1027.58" y="463.5" ></text>
</g>
<g >
<title>do_execveat_common (1 samples, 0.01%)</title><rect x="41.9" y="501" width="0.1" height="15.0" fill="rgb(235,157,5)" rx="2" ry="2" />
<text  x="44.86" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.09%)</title><rect x="1063.5" y="501" width="1.1" height="15.0" fill="rgb(227,174,16)" rx="2" ry="2" />
<text  x="1066.51" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.06%)</title><rect x="1066.7" y="517" width="0.8" height="15.0" fill="rgb(246,95,1)" rx="2" ry="2" />
<text  x="1069.74" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;std::fs::File&gt;&gt; (1 samples, 0.01%)</title><rect x="1058.8" y="549" width="0.2" height="15.0" fill="rgb(249,220,53)" rx="2" ry="2" />
<text  x="1061.84" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.03%)</title><rect x="1067.1" y="453" width="0.4" height="15.0" fill="rgb(245,44,19)" rx="2" ry="2" />
<text  x="1070.10" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (41 samples, 0.42%)</title><rect x="1064.6" y="565" width="4.9" height="15.0" fill="rgb(253,52,26)" rx="2" ry="2" />
<text  x="1067.59" y="575.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (3 samples, 0.03%)</title><rect x="12.2" y="469" width="0.3" height="15.0" fill="rgb(251,8,13)" rx="2" ry="2" />
<text  x="15.16" y="479.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (12 samples, 0.12%)</title><rect x="56.0" y="293" width="1.4" height="15.0" fill="rgb(250,62,49)" rx="2" ry="2" />
<text  x="59.00" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.07%)</title><rect x="1076.1" y="453" width="0.8" height="15.0" fill="rgb(236,120,11)" rx="2" ry="2" />
<text  x="1079.08" y="463.5" ></text>
</g>
<g >
<title>unix_destruct_scm (1 samples, 0.01%)</title><rect x="11.9" y="389" width="0.1" height="15.0" fill="rgb(254,134,24)" rx="2" ry="2" />
<text  x="14.92" y="399.5" ></text>
</g>
<g >
<title>ext4_fc_stop_update (1 samples, 0.01%)</title><rect x="816.4" y="373" width="0.1" height="15.0" fill="rgb(237,96,49)" rx="2" ry="2" />
<text  x="819.39" y="383.5" ></text>
</g>
<g >
<title>pick_next_task_fair (9 samples, 0.09%)</title><rect x="34.2" y="469" width="1.1" height="15.0" fill="rgb(220,125,40)" rx="2" ry="2" />
<text  x="37.20" y="479.5" ></text>
</g>
<g >
<title>ovl_override_creds (1 samples, 0.01%)</title><rect x="622.1" y="453" width="0.1" height="15.0" fill="rgb(237,132,50)" rx="2" ry="2" />
<text  x="625.10" y="463.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u8 (1 samples, 0.01%)</title><rect x="1060.3" y="485" width="0.1" height="15.0" fill="rgb(245,42,31)" rx="2" ry="2" />
<text  x="1063.27" y="495.5" ></text>
</g>
<g >
<title>override_creds (2 samples, 0.02%)</title><rect x="557.9" y="437" width="0.2" height="15.0" fill="rgb(234,56,41)" rx="2" ry="2" />
<text  x="560.90" y="447.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (4 samples, 0.04%)</title><rect x="12.0" y="565" width="0.5" height="15.0" fill="rgb(254,3,34)" rx="2" ry="2" />
<text  x="15.04" y="575.5" ></text>
</g>
<g >
<title>llist_add_batch (7 samples, 0.07%)</title><rect x="1147.1" y="389" width="0.9" height="15.0" fill="rgb(219,93,9)" rx="2" ry="2" />
<text  x="1150.12" y="399.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.02%)</title><rect x="591.4" y="549" width="0.3" height="15.0" fill="rgb(246,96,41)" rx="2" ry="2" />
<text  x="594.44" y="559.5" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 0.01%)</title><rect x="52.5" y="437" width="0.1" height="15.0" fill="rgb(219,75,6)" rx="2" ry="2" />
<text  x="55.52" y="447.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (1 samples, 0.01%)</title><rect x="60.5" y="229" width="0.2" height="15.0" fill="rgb(224,172,8)" rx="2" ry="2" />
<text  x="63.55" y="239.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (10 samples, 0.10%)</title><rect x="1153.8" y="389" width="1.2" height="15.0" fill="rgb(238,52,4)" rx="2" ry="2" />
<text  x="1156.82" y="399.5" ></text>
</g>
<g >
<title>xas_alloc (1 samples, 0.01%)</title><rect x="1037.9" y="197" width="0.1" height="15.0" fill="rgb(253,207,41)" rx="2" ry="2" />
<text  x="1040.87" y="207.5" ></text>
</g>
<g >
<title>wb_check_old_data_flush (8 samples, 0.08%)</title><rect x="1105.7" y="469" width="0.9" height="15.0" fill="rgb(252,184,26)" rx="2" ry="2" />
<text  x="1108.67" y="479.5" ></text>
</g>
<g >
<title>file_modified (1 samples, 0.01%)</title><rect x="816.5" y="373" width="0.1" height="15.0" fill="rgb(242,83,31)" rx="2" ry="2" />
<text  x="819.51" y="383.5" ></text>
</g>
<g >
<title>malloc_consolidate (6 samples, 0.06%)</title><rect x="1037.0" y="565" width="0.8" height="15.0" fill="rgb(209,46,22)" rx="2" ry="2" />
<text  x="1040.03" y="575.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queue (1 samples, 0.01%)</title><rect x="1106.2" y="181" width="0.1" height="15.0" fill="rgb(216,59,15)" rx="2" ry="2" />
<text  x="1109.15" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;std::fs::File&gt;&gt; (10 samples, 0.10%)</title><rect x="1056.9" y="549" width="1.2" height="15.0" fill="rgb(216,229,2)" rx="2" ry="2" />
<text  x="1059.92" y="559.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.01%)</title><rect x="1104.7" y="565" width="0.1" height="15.0" fill="rgb(242,119,33)" rx="2" ry="2" />
<text  x="1107.71" y="575.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.01%)</title><rect x="35.9" y="293" width="0.1" height="15.0" fill="rgb(230,208,28)" rx="2" ry="2" />
<text  x="38.87" y="303.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.01%)</title><rect x="1026.5" y="421" width="0.1" height="15.0" fill="rgb(243,113,9)" rx="2" ry="2" />
<text  x="1029.49" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (3 samples, 0.03%)</title><rect x="1062.4" y="453" width="0.4" height="15.0" fill="rgb(210,228,16)" rx="2" ry="2" />
<text  x="1065.43" y="463.5" ></text>
</g>
<g >
<title>std::panicking::panicking (7 samples, 0.07%)</title><rect x="1056.9" y="485" width="0.9" height="15.0" fill="rgb(208,53,29)" rx="2" ry="2" />
<text  x="1059.92" y="495.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.01%)</title><rect x="41.1" y="341" width="0.2" height="15.0" fill="rgb(252,117,44)" rx="2" ry="2" />
<text  x="44.14" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="60.4" y="245" width="0.1" height="15.0" fill="rgb(223,127,21)" rx="2" ry="2" />
<text  x="63.43" y="255.5" ></text>
</g>
<g >
<title>__blk_mq_do_dispatch_sched (1 samples, 0.01%)</title><rect x="1106.2" y="101" width="0.1" height="15.0" fill="rgb(219,88,44)" rx="2" ry="2" />
<text  x="1109.15" y="111.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (7 samples, 0.07%)</title><rect x="66.1" y="517" width="0.8" height="15.0" fill="rgb(231,36,23)" rx="2" ry="2" />
<text  x="69.06" y="527.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.01%)</title><rect x="651.0" y="341" width="0.1" height="15.0" fill="rgb(249,93,9)" rx="2" ry="2" />
<text  x="653.97" y="351.5" ></text>
</g>
<g >
<title>d_path (1 samples, 0.01%)</title><rect x="18.4" y="405" width="0.1" height="15.0" fill="rgb(205,68,35)" rx="2" ry="2" />
<text  x="21.38" y="415.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.02%)</title><rect x="591.0" y="501" width="0.2" height="15.0" fill="rgb(217,22,13)" rx="2" ry="2" />
<text  x="593.96" y="511.5" ></text>
</g>
<g >
<title>NaClHostDescRead (7 samples, 0.07%)</title><rect x="122.2" y="565" width="0.9" height="15.0" fill="rgb(213,84,26)" rx="2" ry="2" />
<text  x="125.24" y="575.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.01%)</title><rect x="834.0" y="325" width="0.1" height="15.0" fill="rgb(235,154,0)" rx="2" ry="2" />
<text  x="837.00" y="335.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.01%)</title><rect x="11.9" y="501" width="0.1" height="15.0" fill="rgb(249,10,30)" rx="2" ry="2" />
<text  x="14.92" y="511.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.01%)</title><rect x="62.6" y="309" width="0.1" height="15.0" fill="rgb(216,121,22)" rx="2" ry="2" />
<text  x="65.59" y="319.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.01%)</title><rect x="331.5" y="357" width="0.1" height="15.0" fill="rgb(212,166,35)" rx="2" ry="2" />
<text  x="334.50" y="367.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.01%)</title><rect x="1008.9" y="53" width="0.1" height="15.0" fill="rgb(241,115,35)" rx="2" ry="2" />
<text  x="1011.89" y="63.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.01%)</title><rect x="1026.5" y="437" width="0.1" height="15.0" fill="rgb(252,43,26)" rx="2" ry="2" />
<text  x="1029.49" y="447.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (1 samples, 0.01%)</title><rect x="183.1" y="565" width="0.1" height="15.0" fill="rgb(240,111,41)" rx="2" ry="2" />
<text  x="186.09" y="575.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="471.8" y="405" width="0.1" height="15.0" fill="rgb(234,121,46)" rx="2" ry="2" />
<text  x="474.77" y="415.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (6 samples, 0.06%)</title><rect x="119.4" y="565" width="0.7" height="15.0" fill="rgb(250,209,2)" rx="2" ry="2" />
<text  x="122.36" y="575.5" ></text>
</g>
<g >
<title>aa_file_perm (7 samples, 0.07%)</title><rect x="820.3" y="357" width="0.9" height="15.0" fill="rgb(211,50,54)" rx="2" ry="2" />
<text  x="823.34" y="367.5" ></text>
</g>
<g >
<title>free_buffer_head (4 samples, 0.04%)</title><rect x="1027.0" y="149" width="0.5" height="15.0" fill="rgb(235,174,42)" rx="2" ry="2" />
<text  x="1029.97" y="159.5" ></text>
</g>
<g >
<title>iput (102 samples, 1.04%)</title><rect x="997.4" y="485" width="12.2" height="15.0" fill="rgb(208,165,6)" rx="2" ry="2" />
<text  x="1000.39" y="495.5" ></text>
</g>
<g >
<title>CopyBundleTails (2 samples, 0.02%)</title><rect x="72.2" y="565" width="0.2" height="15.0" fill="rgb(232,138,39)" rx="2" ry="2" />
<text  x="75.17" y="575.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.01%)</title><rect x="54.4" y="229" width="0.2" height="15.0" fill="rgb(210,201,34)" rx="2" ry="2" />
<text  x="57.44" y="239.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.01%)</title><rect x="830.2" y="549" width="0.1" height="15.0" fill="rgb(238,101,36)" rx="2" ry="2" />
<text  x="833.17" y="559.5" ></text>
</g>
<g >
<title>alloc_buffer_head (7 samples, 0.07%)</title><rect x="54.2" y="277" width="0.8" height="15.0" fill="rgb(239,229,33)" rx="2" ry="2" />
<text  x="57.20" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.01%)</title><rect x="1059.7" y="293" width="0.1" height="15.0" fill="rgb(231,173,52)" rx="2" ry="2" />
<text  x="1062.67" y="303.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (7 samples, 0.07%)</title><rect x="696.6" y="245" width="0.8" height="15.0" fill="rgb(241,144,10)" rx="2" ry="2" />
<text  x="699.61" y="255.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (6 samples, 0.06%)</title><rect x="633.5" y="421" width="0.7" height="15.0" fill="rgb(249,227,32)" rx="2" ry="2" />
<text  x="636.48" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_read (338 samples, 3.43%)</title><rect x="550.7" y="517" width="40.5" height="15.0" fill="rgb(210,90,18)" rx="2" ry="2" />
<text  x="553.71" y="527.5" >__x..</text>
</g>
<g >
<title>ovl_d_real (9 samples, 0.09%)</title><rect x="630.2" y="437" width="1.1" height="15.0" fill="rgb(253,135,49)" rx="2" ry="2" />
<text  x="633.25" y="447.5" ></text>
</g>
<g >
<title>ep_send_events (1 samples, 0.01%)</title><rect x="18.1" y="485" width="0.2" height="15.0" fill="rgb(251,163,2)" rx="2" ry="2" />
<text  x="21.15" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="465.9" y="533" width="0.1" height="15.0" fill="rgb(224,209,47)" rx="2" ry="2" />
<text  x="468.90" y="543.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.01%)</title><rect x="52.9" y="277" width="0.1" height="15.0" fill="rgb(243,95,20)" rx="2" ry="2" />
<text  x="55.88" y="287.5" ></text>
</g>
<g >
<title>radix_tree_node_rcu_free (1 samples, 0.01%)</title><rect x="596.0" y="405" width="0.1" height="15.0" fill="rgb(246,177,37)" rx="2" ry="2" />
<text  x="598.99" y="415.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="465.9" y="421" width="0.1" height="15.0" fill="rgb(247,130,13)" rx="2" ry="2" />
<text  x="468.90" y="431.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.01%)</title><rect x="827.3" y="421" width="0.1" height="15.0" fill="rgb(226,158,29)" rx="2" ry="2" />
<text  x="830.29" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="59.5" y="245" width="0.1" height="15.0" fill="rgb(250,110,14)" rx="2" ry="2" />
<text  x="62.47" y="255.5" ></text>
</g>
<g >
<title>free_buffer_head (24 samples, 0.24%)</title><rect x="1006.5" y="101" width="2.9" height="15.0" fill="rgb(244,94,31)" rx="2" ry="2" />
<text  x="1009.49" y="111.5" ></text>
</g>
<g >
<title>pipe_write (1 samples, 0.01%)</title><rect x="1105.3" y="469" width="0.1" height="15.0" fill="rgb(228,12,26)" rx="2" ry="2" />
<text  x="1108.31" y="479.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (2 samples, 0.02%)</title><rect x="1151.2" y="421" width="0.2" height="15.0" fill="rgb(243,28,34)" rx="2" ry="2" />
<text  x="1154.19" y="431.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (3 samples, 0.03%)</title><rect x="57.1" y="261" width="0.3" height="15.0" fill="rgb(250,161,15)" rx="2" ry="2" />
<text  x="60.08" y="271.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.01%)</title><rect x="1137.7" y="485" width="0.1" height="15.0" fill="rgb(227,45,2)" rx="2" ry="2" />
<text  x="1140.65" y="495.5" ></text>
</g>
<g >
<title>uncharge_batch (2 samples, 0.02%)</title><rect x="1000.1" y="165" width="0.3" height="15.0" fill="rgb(228,8,45)" rx="2" ry="2" />
<text  x="1003.14" y="175.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="834.0" y="341" width="0.1" height="15.0" fill="rgb(240,123,42)" rx="2" ry="2" />
<text  x="837.00" y="351.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 0.65%)</title><rect x="44.3" y="341" width="7.6" height="15.0" fill="rgb(231,115,38)" rx="2" ry="2" />
<text  x="47.26" y="351.5" ></text>
</g>
<g >
<title>down_read (2 samples, 0.02%)</title><rect x="55.4" y="277" width="0.2" height="15.0" fill="rgb(220,46,45)" rx="2" ry="2" />
<text  x="58.40" y="287.5" ></text>
</g>
<g >
<title>should_failslab (1 samples, 0.01%)</title><rect x="666.9" y="261" width="0.1" height="15.0" fill="rgb(225,133,38)" rx="2" ry="2" />
<text  x="669.90" y="271.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="788.8" y="229" width="0.2" height="15.0" fill="rgb(254,54,50)" rx="2" ry="2" />
<text  x="791.84" y="239.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.01%)</title><rect x="52.4" y="517" width="0.1" height="15.0" fill="rgb(241,37,22)" rx="2" ry="2" />
<text  x="55.40" y="527.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="692.1" y="229" width="0.1" height="15.0" fill="rgb(228,19,14)" rx="2" ry="2" />
<text  x="695.05" y="239.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (16 samples, 0.16%)</title><rect x="1078.4" y="549" width="1.9" height="15.0" fill="rgb(212,198,32)" rx="2" ry="2" />
<text  x="1081.36" y="559.5" ></text>
</g>
<g >
<title>vfs_llseek (14 samples, 0.14%)</title><rect x="539.9" y="469" width="1.7" height="15.0" fill="rgb(206,202,23)" rx="2" ry="2" />
<text  x="542.93" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="1064.5" y="421" width="0.1" height="15.0" fill="rgb(215,84,10)" rx="2" ry="2" />
<text  x="1067.47" y="431.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.01%)</title><rect x="543.8" y="517" width="0.1" height="15.0" fill="rgb(238,147,17)" rx="2" ry="2" />
<text  x="546.76" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (347 samples, 3.52%)</title><rect x="549.9" y="549" width="41.5" height="15.0" fill="rgb(254,30,20)" rx="2" ry="2" />
<text  x="552.87" y="559.5" >ent..</text>
</g>
<g >
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="801.2" y="197" width="0.2" height="15.0" fill="rgb(254,132,29)" rx="2" ry="2" />
<text  x="804.18" y="207.5" ></text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.01%)</title><rect x="42.5" y="437" width="0.1" height="15.0" fill="rgb(229,186,51)" rx="2" ry="2" />
<text  x="45.46" y="447.5" ></text>
</g>
<g >
<title>timekeeping_max_deferment (1 samples, 0.01%)</title><rect x="1174.2" y="373" width="0.1" height="15.0" fill="rgb(213,227,45)" rx="2" ry="2" />
<text  x="1177.19" y="383.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.01%)</title><rect x="1170.0" y="421" width="0.1" height="15.0" fill="rgb(226,40,45)" rx="2" ry="2" />
<text  x="1173.00" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="1029.7" y="501" width="0.1" height="15.0" fill="rgb(228,217,42)" rx="2" ry="2" />
<text  x="1032.73" y="511.5" ></text>
</g>
<g >
<title>blk_mq_start_request (1 samples, 0.01%)</title><rect x="1106.2" y="53" width="0.1" height="15.0" fill="rgb(237,100,24)" rx="2" ry="2" />
<text  x="1109.15" y="63.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook.constprop.0 (7 samples, 0.07%)</title><rect x="721.6" y="277" width="0.9" height="15.0" fill="rgb(247,119,2)" rx="2" ry="2" />
<text  x="724.64" y="287.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (2 samples, 0.02%)</title><rect x="1075.5" y="517" width="0.2" height="15.0" fill="rgb(244,150,0)" rx="2" ry="2" />
<text  x="1078.49" y="527.5" ></text>
</g>
<g >
<title>NaClCondVarBroadcast (164 samples, 1.66%)</title><rect x="98.2" y="565" width="19.6" height="15.0" fill="rgb(219,119,30)" rx="2" ry="2" />
<text  x="101.16" y="575.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (4 samples, 0.04%)</title><rect x="62.3" y="421" width="0.5" height="15.0" fill="rgb(216,106,15)" rx="2" ry="2" />
<text  x="65.35" y="431.5" ></text>
</g>
<g >
<title>xas_load (19 samples, 0.19%)</title><rect x="580.8" y="309" width="2.3" height="15.0" fill="rgb(239,28,18)" rx="2" ry="2" />
<text  x="583.77" y="319.5" ></text>
</g>
<g >
<title>rw_verify_area (16 samples, 0.16%)</title><rect x="585.3" y="405" width="1.9" height="15.0" fill="rgb(210,178,43)" rx="2" ry="2" />
<text  x="588.33" y="415.5" ></text>
</g>
<g >
<title>release_task (1 samples, 0.01%)</title><rect x="1027.7" y="405" width="0.1" height="15.0" fill="rgb(232,93,45)" rx="2" ry="2" />
<text  x="1030.69" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.03%)</title><rect x="676.1" y="309" width="0.4" height="15.0" fill="rgb(243,40,6)" rx="2" ry="2" />
<text  x="679.12" y="319.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (1 samples, 0.01%)</title><rect x="1079.3" y="517" width="0.1" height="15.0" fill="rgb(212,79,47)" rx="2" ry="2" />
<text  x="1082.32" y="527.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (189 samples, 1.92%)</title><rect x="19.1" y="565" width="22.6" height="15.0" fill="rgb(222,185,45)" rx="2" ry="2" />
<text  x="22.10" y="575.5" >s..</text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (48 samples, 0.49%)</title><rect x="805.7" y="341" width="5.8" height="15.0" fill="rgb(236,0,48)" rx="2" ry="2" />
<text  x="808.73" y="351.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.06%)</title><rect x="1066.7" y="549" width="0.8" height="15.0" fill="rgb(217,54,23)" rx="2" ry="2" />
<text  x="1069.74" y="559.5" ></text>
</g>
<g >
<title>BitmapSetBit (1 samples, 0.01%)</title><rect x="309.3" y="533" width="0.2" height="15.0" fill="rgb(208,72,32)" rx="2" ry="2" />
<text  x="312.34" y="543.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (162 samples, 1.64%)</title><rect x="565.4" y="357" width="19.4" height="15.0" fill="rgb(249,50,18)" rx="2" ry="2" />
<text  x="568.44" y="367.5" ></text>
</g>
<g >
<title>cpuidle_select (7 samples, 0.07%)</title><rect x="38.7" y="421" width="0.9" height="15.0" fill="rgb(239,16,20)" rx="2" ry="2" />
<text  x="41.75" y="431.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.01%)</title><rect x="576.7" y="309" width="0.1" height="15.0" fill="rgb(230,7,43)" rx="2" ry="2" />
<text  x="579.70" y="319.5" ></text>
</g>
<g >
<title>ext4_da_should_update_i_disksize (1 samples, 0.01%)</title><rect x="655.9" y="341" width="0.1" height="15.0" fill="rgb(229,214,4)" rx="2" ry="2" />
<text  x="658.88" y="351.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (2 samples, 0.02%)</title><rect x="119.1" y="565" width="0.3" height="15.0" fill="rgb(228,77,6)" rx="2" ry="2" />
<text  x="122.12" y="575.5" ></text>
</g>
<g >
<title>block_invalidatepage (53 samples, 0.54%)</title><rect x="1003.0" y="181" width="6.4" height="15.0" fill="rgb(237,113,6)" rx="2" ry="2" />
<text  x="1006.02" y="191.5" ></text>
</g>
<g >
<title>kmem_cache_free (23 samples, 0.23%)</title><rect x="1006.6" y="85" width="2.8" height="15.0" fill="rgb(227,215,6)" rx="2" ry="2" />
<text  x="1009.61" y="95.5" ></text>
</g>
<g >
<title>unaccount_page_cache_page (2 samples, 0.02%)</title><rect x="1001.6" y="197" width="0.2" height="15.0" fill="rgb(228,1,4)" rx="2" ry="2" />
<text  x="1004.58" y="207.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (7 samples, 0.07%)</title><rect x="60.1" y="261" width="0.8" height="15.0" fill="rgb(212,57,46)" rx="2" ry="2" />
<text  x="63.07" y="271.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="1058.0" y="501" width="0.1" height="15.0" fill="rgb(224,123,38)" rx="2" ry="2" />
<text  x="1061.00" y="511.5" ></text>
</g>
<g >
<title>ext4_evict_inode (7 samples, 0.07%)</title><rect x="1026.6" y="309" width="0.9" height="15.0" fill="rgb(223,61,51)" rx="2" ry="2" />
<text  x="1029.61" y="319.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (97 samples, 0.98%)</title><rect x="717.2" y="309" width="11.6" height="15.0" fill="rgb(233,179,26)" rx="2" ry="2" />
<text  x="720.21" y="319.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="1060.3" y="437" width="0.1" height="15.0" fill="rgb(241,20,38)" rx="2" ry="2" />
<text  x="1063.27" y="447.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.01%)</title><rect x="1077.5" y="485" width="0.1" height="15.0" fill="rgb(244,151,34)" rx="2" ry="2" />
<text  x="1080.52" y="495.5" ></text>
</g>
<g >
<title>unlock_page (2 samples, 0.02%)</title><rect x="812.8" y="341" width="0.2" height="15.0" fill="rgb(238,202,15)" rx="2" ry="2" />
<text  x="815.80" y="351.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.05%)</title><rect x="1185.6" y="373" width="0.6" height="15.0" fill="rgb(212,171,13)" rx="2" ry="2" />
<text  x="1188.57" y="383.5" ></text>
</g>
<g >
<title>cpuidle_select (20 samples, 0.20%)</title><rect x="1137.8" y="485" width="2.4" height="15.0" fill="rgb(232,72,36)" rx="2" ry="2" />
<text  x="1140.77" y="495.5" ></text>
</g>
<g >
<title>file_modified (19 samples, 0.19%)</title><rect x="644.4" y="357" width="2.3" height="15.0" fill="rgb(209,92,28)" rx="2" ry="2" />
<text  x="647.38" y="367.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="996.5" y="549" width="0.3" height="15.0" fill="rgb(242,71,33)" rx="2" ry="2" />
<text  x="999.55" y="559.5" ></text>
</g>
<g >
<title>evict (102 samples, 1.04%)</title><rect x="997.4" y="277" width="12.2" height="15.0" fill="rgb(239,16,43)" rx="2" ry="2" />
<text  x="1000.39" y="287.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="1149.0" y="469" width="0.2" height="15.0" fill="rgb(232,168,46)" rx="2" ry="2" />
<text  x="1152.03" y="479.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.01%)</title><rect x="674.0" y="309" width="0.1" height="15.0" fill="rgb(242,74,8)" rx="2" ry="2" />
<text  x="676.97" y="319.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.01%)</title><rect x="54.9" y="261" width="0.1" height="15.0" fill="rgb(229,202,22)" rx="2" ry="2" />
<text  x="57.92" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (304 samples, 3.09%)</title><rect x="507.3" y="517" width="36.5" height="15.0" fill="rgb(232,130,7)" rx="2" ry="2" />
<text  x="510.35" y="527.5" >__x..</text>
</g>
<g >
<title>xas_find_conflict (2 samples, 0.02%)</title><rect x="694.3" y="261" width="0.3" height="15.0" fill="rgb(235,96,44)" rx="2" ry="2" />
<text  x="697.33" y="271.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (101 samples, 1.03%)</title><rect x="997.4" y="229" width="12.1" height="15.0" fill="rgb(237,2,35)" rx="2" ry="2" />
<text  x="1000.39" y="239.5" ></text>
</g>
<g >
<title>security_file_permission (23 samples, 0.23%)</title><rect x="818.5" y="389" width="2.8" height="15.0" fill="rgb(246,96,6)" rx="2" ry="2" />
<text  x="821.55" y="399.5" ></text>
</g>
<g >
<title>ksys_lseek (282 samples, 2.86%)</title><rect x="509.7" y="501" width="33.8" height="15.0" fill="rgb(211,228,17)" rx="2" ry="2" />
<text  x="512.74" y="511.5" >ks..</text>
</g>
<g >
<title>__mod_lruvec_page_state (4 samples, 0.04%)</title><rect x="737.5" y="245" width="0.4" height="15.0" fill="rgb(223,164,8)" rx="2" ry="2" />
<text  x="740.45" y="255.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (18 samples, 0.18%)</title><rect x="682.2" y="277" width="2.2" height="15.0" fill="rgb(239,10,37)" rx="2" ry="2" />
<text  x="685.23" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="1104.8" y="565" width="0.6" height="15.0" fill="rgb(214,80,11)" rx="2" ry="2" />
<text  x="1107.83" y="575.5" ></text>
</g>
<g >
<title>revert_creds (11 samples, 0.11%)</title><rect x="821.5" y="453" width="1.4" height="15.0" fill="rgb(252,168,27)" rx="2" ry="2" />
<text  x="824.54" y="463.5" ></text>
</g>
<g >
<title>pagevec_lookup_entries (2 samples, 0.02%)</title><rect x="1001.8" y="213" width="0.3" height="15.0" fill="rgb(209,42,8)" rx="2" ry="2" />
<text  x="1004.82" y="223.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_page (1 samples, 0.01%)</title><rect x="680.7" y="277" width="0.1" height="15.0" fill="rgb(205,195,10)" rx="2" ry="2" />
<text  x="683.68" y="287.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.03%)</title><rect x="1059.0" y="549" width="0.3" height="15.0" fill="rgb(245,91,10)" rx="2" ry="2" />
<text  x="1061.96" y="559.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.02%)</title><rect x="19.3" y="357" width="0.3" height="15.0" fill="rgb(231,208,38)" rx="2" ry="2" />
<text  x="22.34" y="367.5" ></text>
</g>
<g >
<title>release_pages (24 samples, 0.24%)</title><rect x="997.5" y="197" width="2.9" height="15.0" fill="rgb(251,204,18)" rx="2" ry="2" />
<text  x="1000.51" y="207.5" ></text>
</g>
<g >
<title>start_kernel (51 samples, 0.52%)</title><rect x="35.6" y="517" width="6.1" height="15.0" fill="rgb(254,105,53)" rx="2" ry="2" />
<text  x="38.63" y="527.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.01%)</title><rect x="1149.6" y="437" width="0.2" height="15.0" fill="rgb(250,189,26)" rx="2" ry="2" />
<text  x="1152.63" y="447.5" ></text>
</g>
<g >
<title>fput (8 samples, 0.08%)</title><rect x="606.2" y="501" width="0.9" height="15.0" fill="rgb(229,56,1)" rx="2" ry="2" />
<text  x="609.17" y="511.5" ></text>
</g>
<g >
<title>calc_load_nohz_start (1 samples, 0.01%)</title><rect x="33.5" y="469" width="0.1" height="15.0" fill="rgb(217,90,41)" rx="2" ry="2" />
<text  x="36.48" y="479.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="1077.6" y="341" width="0.4" height="15.0" fill="rgb(215,168,46)" rx="2" ry="2" />
<text  x="1080.64" y="351.5" ></text>
</g>
<g >
<title>vfs_write (1,763 samples, 17.90%)</title><rect x="616.4" y="485" width="211.1" height="15.0" fill="rgb(206,131,1)" rx="2" ry="2" />
<text  x="619.35" y="495.5" >vfs_write</text>
</g>
<g >
<title>account_page_dirtied (7 samples, 0.07%)</title><rect x="737.2" y="261" width="0.9" height="15.0" fill="rgb(252,195,36)" rx="2" ry="2" />
<text  x="740.21" y="271.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="1069.1" y="469" width="0.2" height="15.0" fill="rgb(224,79,48)" rx="2" ry="2" />
<text  x="1072.14" y="479.5" ></text>
</g>
<g >
<title>__switch_to_asm (1 samples, 0.01%)</title><rect x="35.3" y="485" width="0.1" height="15.0" fill="rgb(215,179,46)" rx="2" ry="2" />
<text  x="38.27" y="495.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.01%)</title><rect x="52.5" y="485" width="0.1" height="15.0" fill="rgb(249,138,14)" rx="2" ry="2" />
<text  x="55.52" y="495.5" ></text>
</g>
<g >
<title>ovl_d_real (2 samples, 0.02%)</title><rect x="633.0" y="421" width="0.2" height="15.0" fill="rgb(247,129,20)" rx="2" ry="2" />
<text  x="636.00" y="431.5" ></text>
</g>
<g >
<title>_raw_read_lock (16 samples, 0.16%)</title><rect x="662.0" y="293" width="1.9" height="15.0" fill="rgb(241,119,27)" rx="2" ry="2" />
<text  x="664.99" y="303.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3 samples, 0.03%)</title><rect x="696.8" y="213" width="0.4" height="15.0" fill="rgb(236,74,51)" rx="2" ry="2" />
<text  x="699.85" y="223.5" ></text>
</g>
<g >
<title>xas_store (9 samples, 0.09%)</title><rect x="694.9" y="261" width="1.1" height="15.0" fill="rgb(234,111,10)" rx="2" ry="2" />
<text  x="697.93" y="271.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.01%)</title><rect x="331.5" y="389" width="0.1" height="15.0" fill="rgb(215,118,47)" rx="2" ry="2" />
<text  x="334.50" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.01%)</title><rect x="35.4" y="501" width="0.1" height="15.0" fill="rgb(206,139,26)" rx="2" ry="2" />
<text  x="38.39" y="511.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="1139.7" y="389" width="0.1" height="15.0" fill="rgb(230,229,13)" rx="2" ry="2" />
<text  x="1142.69" y="399.5" ></text>
</g>
<g >
<title>ovl_d_real (6 samples, 0.06%)</title><rect x="558.1" y="437" width="0.8" height="15.0" fill="rgb(214,179,3)" rx="2" ry="2" />
<text  x="561.14" y="447.5" ></text>
</g>
<g >
<title>destroy_inode (102 samples, 1.04%)</title><rect x="997.4" y="421" width="12.2" height="15.0" fill="rgb(230,170,33)" rx="2" ry="2" />
<text  x="1000.39" y="431.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.01%)</title><rect x="11.9" y="293" width="0.1" height="15.0" fill="rgb(240,185,5)" rx="2" ry="2" />
<text  x="14.92" y="303.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (1 samples, 0.01%)</title><rect x="1186.6" y="437" width="0.2" height="15.0" fill="rgb(245,221,36)" rx="2" ry="2" />
<text  x="1189.65" y="447.5" ></text>
</g>
<g >
<title>ovl_real_fdget (1 samples, 0.01%)</title><rect x="52.8" y="437" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="55.76" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.01%)</title><rect x="596.0" y="389" width="0.1" height="15.0" fill="rgb(205,174,50)" rx="2" ry="2" />
<text  x="598.99" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.03%)</title><rect x="1029.5" y="517" width="0.3" height="15.0" fill="rgb(213,38,15)" rx="2" ry="2" />
<text  x="1032.49" y="527.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.01%)</title><rect x="1169.9" y="421" width="0.1" height="15.0" fill="rgb(246,18,18)" rx="2" ry="2" />
<text  x="1172.88" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.13%)</title><rect x="1067.5" y="501" width="1.5" height="15.0" fill="rgb(245,127,52)" rx="2" ry="2" />
<text  x="1070.46" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.11%)</title><rect x="1026.5" y="549" width="1.3" height="15.0" fill="rgb(241,62,8)" rx="2" ry="2" />
<text  x="1029.49" y="559.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (1 samples, 0.01%)</title><rect x="1136.9" y="437" width="0.2" height="15.0" fill="rgb(234,79,7)" rx="2" ry="2" />
<text  x="1139.94" y="447.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.01%)</title><rect x="18.6" y="357" width="0.1" height="15.0" fill="rgb(233,198,37)" rx="2" ry="2" />
<text  x="21.62" y="367.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (4 samples, 0.04%)</title><rect x="561.1" y="421" width="0.5" height="15.0" fill="rgb(222,189,7)" rx="2" ry="2" />
<text  x="564.13" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="471.8" y="501" width="0.1" height="15.0" fill="rgb(240,77,37)" rx="2" ry="2" />
<text  x="474.77" y="511.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.02%)</title><rect x="1026.6" y="229" width="0.3" height="15.0" fill="rgb(215,123,21)" rx="2" ry="2" />
<text  x="1029.61" y="239.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (2 samples, 0.02%)</title><rect x="1037.8" y="469" width="0.2" height="15.0" fill="rgb(254,15,25)" rx="2" ry="2" />
<text  x="1040.75" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (2 samples, 0.02%)</title><rect x="67.4" y="549" width="0.2" height="15.0" fill="rgb(217,67,22)" rx="2" ry="2" />
<text  x="70.38" y="559.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (69 samples, 0.70%)</title><rect x="568.2" y="309" width="8.3" height="15.0" fill="rgb(223,134,31)" rx="2" ry="2" />
<text  x="571.20" y="319.5" ></text>
</g>
<g >
<title>mark_page_accessed (7 samples, 0.07%)</title><rect x="800.0" y="181" width="0.8" height="15.0" fill="rgb(230,125,38)" rx="2" ry="2" />
<text  x="802.98" y="191.5" ></text>
</g>
<g >
<title>ovl_inode_realdata (2 samples, 0.02%)</title><rect x="633.2" y="421" width="0.3" height="15.0" fill="rgb(225,76,43)" rx="2" ry="2" />
<text  x="636.24" y="431.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.01%)</title><rect x="1058.8" y="501" width="0.2" height="15.0" fill="rgb(223,197,35)" rx="2" ry="2" />
<text  x="1061.84" y="511.5" ></text>
</g>
<g >
<title>__fget_files (19 samples, 0.19%)</title><rect x="610.5" y="453" width="2.3" height="15.0" fill="rgb(243,94,35)" rx="2" ry="2" />
<text  x="613.48" y="463.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.01%)</title><rect x="18.1" y="517" width="0.2" height="15.0" fill="rgb(228,158,21)" rx="2" ry="2" />
<text  x="21.15" y="527.5" ></text>
</g>
<g >
<title>down_write (1 samples, 0.01%)</title><rect x="621.6" y="453" width="0.1" height="15.0" fill="rgb(250,6,20)" rx="2" ry="2" />
<text  x="624.62" y="463.5" ></text>
</g>
<g >
<title>xas_find_conflict (1 samples, 0.01%)</title><rect x="56.6" y="261" width="0.1" height="15.0" fill="rgb(243,208,49)" rx="2" ry="2" />
<text  x="59.60" y="271.5" ></text>
</g>
<g >
<title>wait_for_stable_page (2 samples, 0.02%)</title><rect x="715.3" y="325" width="0.2" height="15.0" fill="rgb(251,41,15)" rx="2" ry="2" />
<text  x="718.29" y="335.5" ></text>
</g>
<g >
<title>__test_set_page_writeback (1 samples, 0.01%)</title><rect x="1106.0" y="293" width="0.2" height="15.0" fill="rgb(246,156,6)" rx="2" ry="2" />
<text  x="1109.03" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.01%)</title><rect x="11.8" y="533" width="0.1" height="15.0" fill="rgb(218,61,49)" rx="2" ry="2" />
<text  x="14.80" y="543.5" ></text>
</g>
<g >
<title>ovl_real_fdget (50 samples, 0.51%)</title><rect x="533.5" y="469" width="5.9" height="15.0" fill="rgb(220,14,42)" rx="2" ry="2" />
<text  x="536.46" y="479.5" ></text>
</g>
<g >
<title>__secure_computing (1 samples, 0.01%)</title><rect x="19.0" y="501" width="0.1" height="15.0" fill="rgb(233,194,46)" rx="2" ry="2" />
<text  x="21.98" y="511.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.01%)</title><rect x="40.9" y="357" width="0.1" height="15.0" fill="rgb(210,102,3)" rx="2" ry="2" />
<text  x="43.90" y="367.5" ></text>
</g>
<g >
<title>ksys_write (79 samples, 0.80%)</title><rect x="52.8" y="501" width="9.4" height="15.0" fill="rgb(229,17,16)" rx="2" ry="2" />
<text  x="55.76" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="1178.6" y="373" width="0.1" height="15.0" fill="rgb(219,140,50)" rx="2" ry="2" />
<text  x="1181.62" y="383.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="742.0" y="245" width="0.1" height="15.0" fill="rgb(217,214,42)" rx="2" ry="2" />
<text  x="745.00" y="255.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="1136.7" y="437" width="0.1" height="15.0" fill="rgb(223,10,40)" rx="2" ry="2" />
<text  x="1139.70" y="447.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.02%)</title><rect x="833.9" y="453" width="0.2" height="15.0" fill="rgb(253,90,13)" rx="2" ry="2" />
<text  x="836.88" y="463.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="522.6" y="437" width="0.1" height="15.0" fill="rgb(211,135,26)" rx="2" ry="2" />
<text  x="525.56" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="1059.7" y="309" width="0.1" height="15.0" fill="rgb(229,54,11)" rx="2" ry="2" />
<text  x="1062.67" y="319.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (21 samples, 0.21%)</title><rect x="726.2" y="261" width="2.5" height="15.0" fill="rgb(238,190,39)" rx="2" ry="2" />
<text  x="729.19" y="271.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.04%)</title><rect x="790.8" y="245" width="0.4" height="15.0" fill="rgb(219,2,33)" rx="2" ry="2" />
<text  x="793.76" y="255.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.01%)</title><rect x="1148.0" y="453" width="0.1" height="15.0" fill="rgb(219,134,54)" rx="2" ry="2" />
<text  x="1150.96" y="463.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (2 samples, 0.02%)</title><rect x="56.1" y="261" width="0.3" height="15.0" fill="rgb(242,25,38)" rx="2" ry="2" />
<text  x="59.12" y="271.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.01%)</title><rect x="33.1" y="437" width="0.1" height="15.0" fill="rgb(254,39,35)" rx="2" ry="2" />
<text  x="36.12" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4 samples, 0.04%)</title><rect x="1029.4" y="549" width="0.4" height="15.0" fill="rgb(214,110,32)" rx="2" ry="2" />
<text  x="1032.37" y="559.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="1105.4" y="501" width="0.2" height="15.0" fill="rgb(219,109,10)" rx="2" ry="2" />
<text  x="1108.43" y="511.5" ></text>
</g>
<g >
<title>jbd2__journal_start (116 samples, 1.18%)</title><rect x="660.1" y="309" width="13.9" height="15.0" fill="rgb(237,226,37)" rx="2" ry="2" />
<text  x="663.07" y="319.5" ></text>
</g>
<g >
<title>ext4_get_reserved_space (1 samples, 0.01%)</title><rect x="683.0" y="229" width="0.1" height="15.0" fill="rgb(216,210,19)" rx="2" ry="2" />
<text  x="685.95" y="239.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (42 samples, 0.43%)</title><rect x="1004.3" y="133" width="5.1" height="15.0" fill="rgb(216,188,15)" rx="2" ry="2" />
<text  x="1007.33" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="1024.5" y="421" width="0.1" height="15.0" fill="rgb(231,143,51)" rx="2" ry="2" />
<text  x="1027.46" y="431.5" ></text>
</g>
<g >
<title>cpuidle_poll_time (2 samples, 0.02%)</title><rect x="1153.6" y="389" width="0.2" height="15.0" fill="rgb(213,42,41)" rx="2" ry="2" />
<text  x="1156.59" y="399.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2 samples, 0.02%)</title><rect x="833.9" y="549" width="0.2" height="15.0" fill="rgb(240,225,3)" rx="2" ry="2" />
<text  x="836.88" y="559.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="526.8" y="469" width="0.1" height="15.0" fill="rgb(254,121,23)" rx="2" ry="2" />
<text  x="529.75" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_write (79 samples, 0.80%)</title><rect x="52.8" y="517" width="9.4" height="15.0" fill="rgb(206,208,26)" rx="2" ry="2" />
<text  x="55.76" y="527.5" ></text>
</g>
<g >
<title>from_kuid (4 samples, 0.04%)</title><rect x="785.2" y="229" width="0.5" height="15.0" fill="rgb(231,108,8)" rx="2" ry="2" />
<text  x="788.25" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="522.6" y="421" width="0.1" height="15.0" fill="rgb(231,132,8)" rx="2" ry="2" />
<text  x="525.56" y="431.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.01%)</title><rect x="1105.4" y="437" width="0.2" height="15.0" fill="rgb(230,30,32)" rx="2" ry="2" />
<text  x="1108.43" y="447.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (2 samples, 0.02%)</title><rect x="1172.8" y="373" width="0.2" height="15.0" fill="rgb(225,142,4)" rx="2" ry="2" />
<text  x="1175.75" y="383.5" ></text>
</g>
<g >
<title>ext4_nonda_switch (7 samples, 0.07%)</title><rect x="685.7" y="325" width="0.8" height="15.0" fill="rgb(220,84,49)" rx="2" ry="2" />
<text  x="688.71" y="335.5" ></text>
</g>
<g >
<title>poll_idle (111 samples, 1.13%)</title><rect x="1155.0" y="389" width="13.3" height="15.0" fill="rgb(218,134,53)" rx="2" ry="2" />
<text  x="1158.02" y="399.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (1 samples, 0.01%)</title><rect x="54.0" y="309" width="0.1" height="15.0" fill="rgb(239,63,23)" rx="2" ry="2" />
<text  x="56.96" y="319.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.01%)</title><rect x="1174.7" y="437" width="0.1" height="15.0" fill="rgb(223,204,11)" rx="2" ry="2" />
<text  x="1177.67" y="447.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.04%)</title><rect x="553.6" y="485" width="0.5" height="15.0" fill="rgb(238,208,12)" rx="2" ry="2" />
<text  x="556.58" y="495.5" ></text>
</g>
<g >
<title>&lt;std::lazy::SyncLazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="68.3" y="517" width="0.2" height="15.0" fill="rgb(227,213,45)" rx="2" ry="2" />
<text  x="71.34" y="527.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (7 samples, 0.07%)</title><rect x="189.1" y="565" width="0.8" height="15.0" fill="rgb(251,194,27)" rx="2" ry="2" />
<text  x="192.08" y="575.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (2 samples, 0.02%)</title><rect x="1151.2" y="437" width="0.2" height="15.0" fill="rgb(237,93,15)" rx="2" ry="2" />
<text  x="1154.19" y="447.5" ></text>
</g>
<g >
<title>seq_put_decimal_ull_width (1 samples, 0.01%)</title><rect x="52.5" y="389" width="0.1" height="15.0" fill="rgb(229,64,12)" rx="2" ry="2" />
<text  x="55.52" y="399.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.05%)</title><rect x="57.9" y="245" width="0.6" height="15.0" fill="rgb(235,73,41)" rx="2" ry="2" />
<text  x="60.91" y="255.5" ></text>
</g>
<g >
<title>menu_select (20 samples, 0.20%)</title><rect x="1137.8" y="469" width="2.4" height="15.0" fill="rgb(235,68,21)" rx="2" ry="2" />
<text  x="1140.77" y="479.5" ></text>
</g>
<g >
<title>ext4_da_should_update_i_disksize (2 samples, 0.02%)</title><rect x="729.2" y="325" width="0.2" height="15.0" fill="rgb(249,67,34)" rx="2" ry="2" />
<text  x="732.19" y="335.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.01%)</title><rect x="679.7" y="245" width="0.1" height="15.0" fill="rgb(205,219,52)" rx="2" ry="2" />
<text  x="682.72" y="255.5" ></text>
</g>
<g >
<title>mem_cgroup_track_foreign_dirty_slowpath (1 samples, 0.01%)</title><rect x="737.9" y="245" width="0.2" height="15.0" fill="rgb(222,198,42)" rx="2" ry="2" />
<text  x="740.93" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.01%)</title><rect x="1020.9" y="565" width="0.1" height="15.0" fill="rgb(205,85,5)" rx="2" ry="2" />
<text  x="1023.86" y="575.5" ></text>
</g>
<g >
<title>__fget_light (8 samples, 0.08%)</title><rect x="552.0" y="469" width="1.0" height="15.0" fill="rgb(212,89,31)" rx="2" ry="2" />
<text  x="555.03" y="479.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (68 samples, 0.69%)</title><rect x="43.8" y="469" width="8.1" height="15.0" fill="rgb(216,21,17)" rx="2" ry="2" />
<text  x="46.78" y="479.5" ></text>
</g>
<g >
<title>mutex_lock (15 samples, 0.15%)</title><rect x="527.2" y="469" width="1.8" height="15.0" fill="rgb(219,61,43)" rx="2" ry="2" />
<text  x="530.23" y="479.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.01%)</title><rect x="1149.6" y="421" width="0.2" height="15.0" fill="rgb(214,214,9)" rx="2" ry="2" />
<text  x="1152.63" y="431.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.02%)</title><rect x="567.5" y="325" width="0.2" height="15.0" fill="rgb(215,69,47)" rx="2" ry="2" />
<text  x="570.48" y="335.5" ></text>
</g>
<g >
<title>wb_workfn (8 samples, 0.08%)</title><rect x="1105.7" y="501" width="0.9" height="15.0" fill="rgb(238,163,47)" rx="2" ry="2" />
<text  x="1108.67" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="33.2" y="421" width="0.2" height="15.0" fill="rgb(228,218,6)" rx="2" ry="2" />
<text  x="36.24" y="431.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.01%)</title><rect x="693.3" y="245" width="0.1" height="15.0" fill="rgb(215,121,8)" rx="2" ry="2" />
<text  x="696.25" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="471.8" y="437" width="0.1" height="15.0" fill="rgb(216,104,43)" rx="2" ry="2" />
<text  x="474.77" y="447.5" ></text>
</g>
<g >
<title>dentry_kill (102 samples, 1.04%)</title><rect x="997.4" y="373" width="12.2" height="15.0" fill="rgb(242,166,51)" rx="2" ry="2" />
<text  x="1000.39" y="383.5" ></text>
</g>
<g >
<title>iput_final (8 samples, 0.08%)</title><rect x="1026.6" y="341" width="1.0" height="15.0" fill="rgb(242,10,50)" rx="2" ry="2" />
<text  x="1029.61" y="351.5" ></text>
</g>
<g >
<title>drop_buffers (2 samples, 0.02%)</title><rect x="1006.3" y="101" width="0.2" height="15.0" fill="rgb(225,156,33)" rx="2" ry="2" />
<text  x="1009.25" y="111.5" ></text>
</g>
<g >
<title>psi_avgs_work (1 samples, 0.01%)</title><rect x="1105.6" y="501" width="0.1" height="15.0" fill="rgb(212,213,44)" rx="2" ry="2" />
<text  x="1108.55" y="511.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.01%)</title><rect x="1037.8" y="341" width="0.1" height="15.0" fill="rgb(240,26,54)" rx="2" ry="2" />
<text  x="1040.75" y="351.5" ></text>
</g>
<g >
<title>sock_wfree (1 samples, 0.01%)</title><rect x="11.9" y="373" width="0.1" height="15.0" fill="rgb(230,99,7)" rx="2" ry="2" />
<text  x="14.92" y="383.5" ></text>
</g>
<g >
<title>__es_insert_extent (1 samples, 0.01%)</title><rect x="55.6" y="245" width="0.2" height="15.0" fill="rgb(229,188,25)" rx="2" ry="2" />
<text  x="58.64" y="255.5" ></text>
</g>
<g >
<title>submit_bio (1 samples, 0.01%)</title><rect x="1106.2" y="293" width="0.1" height="15.0" fill="rgb(251,103,38)" rx="2" ry="2" />
<text  x="1109.15" y="303.5" ></text>
</g>
<g >
<title>alloc_pages_current (14 samples, 0.14%)</title><rect x="57.4" y="293" width="1.7" height="15.0" fill="rgb(232,135,54)" rx="2" ry="2" />
<text  x="60.43" y="303.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.01%)</title><rect x="1149.9" y="501" width="0.1" height="15.0" fill="rgb(250,226,44)" rx="2" ry="2" />
<text  x="1152.87" y="511.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (2 samples, 0.02%)</title><rect x="1037.8" y="453" width="0.2" height="15.0" fill="rgb(249,209,7)" rx="2" ry="2" />
<text  x="1040.75" y="463.5" ></text>
</g>
<g >
<title>xas_create (1 samples, 0.01%)</title><rect x="1037.9" y="229" width="0.1" height="15.0" fill="rgb(242,121,36)" rx="2" ry="2" />
<text  x="1040.87" y="239.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.01%)</title><rect x="11.7" y="517" width="0.1" height="15.0" fill="rgb(231,67,27)" rx="2" ry="2" />
<text  x="14.68" y="527.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.01%)</title><rect x="11.9" y="341" width="0.1" height="15.0" fill="rgb(215,135,47)" rx="2" ry="2" />
<text  x="14.92" y="351.5" ></text>
</g>
<g >
<title>schedule_idle (9 samples, 0.09%)</title><rect x="40.3" y="437" width="1.1" height="15.0" fill="rgb(205,181,5)" rx="2" ry="2" />
<text  x="43.31" y="447.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.01%)</title><rect x="1027.6" y="373" width="0.1" height="15.0" fill="rgb(254,5,38)" rx="2" ry="2" />
<text  x="1030.57" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.01%)</title><rect x="59.4" y="261" width="0.1" height="15.0" fill="rgb(231,163,11)" rx="2" ry="2" />
<text  x="62.35" y="271.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.01%)</title><rect x="32.3" y="453" width="0.1" height="15.0" fill="rgb(206,9,49)" rx="2" ry="2" />
<text  x="35.28" y="463.5" ></text>
</g>
<g >
<title>jbd2__journal_start (1 samples, 0.01%)</title><rect x="803.2" y="277" width="0.1" height="15.0" fill="rgb(236,180,12)" rx="2" ry="2" />
<text  x="806.21" y="287.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.01%)</title><rect x="834.0" y="373" width="0.1" height="15.0" fill="rgb(219,214,30)" rx="2" ry="2" />
<text  x="837.00" y="383.5" ></text>
</g>
<g >
<title>ext4_check_bdev_write_error (2 samples, 0.02%)</title><rect x="791.2" y="245" width="0.3" height="15.0" fill="rgb(254,170,53)" rx="2" ry="2" />
<text  x="794.24" y="255.5" ></text>
</g>
<g >
<title>vfs_llseek (1 samples, 0.01%)</title><rect x="543.4" y="485" width="0.1" height="15.0" fill="rgb(242,179,22)" rx="2" ry="2" />
<text  x="546.40" y="495.5" ></text>
</g>
<g >
<title>do_idle (137 samples, 1.39%)</title><rect x="19.1" y="517" width="16.4" height="15.0" fill="rgb(252,81,51)" rx="2" ry="2" />
<text  x="22.10" y="527.5" ></text>
</g>
<g >
<title>vfs_write (79 samples, 0.80%)</title><rect x="52.8" y="485" width="9.4" height="15.0" fill="rgb(225,112,0)" rx="2" ry="2" />
<text  x="55.76" y="495.5" ></text>
</g>
<g >
<title>ovl_override_creds (2 samples, 0.02%)</title><rect x="556.9" y="453" width="0.3" height="15.0" fill="rgb(242,144,48)" rx="2" ry="2" />
<text  x="559.94" y="463.5" ></text>
</g>
<g >
<title>alx_mask_msix (1 samples, 0.01%)</title><rect x="19.5" y="309" width="0.1" height="15.0" fill="rgb(248,182,25)" rx="2" ry="2" />
<text  x="22.46" y="319.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.01%)</title><rect x="1105.2" y="405" width="0.1" height="15.0" fill="rgb(217,182,15)" rx="2" ry="2" />
<text  x="1108.19" y="415.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="465.9" y="453" width="0.1" height="15.0" fill="rgb(228,101,1)" rx="2" ry="2" />
<text  x="468.90" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="1019.7" y="501" width="0.1" height="15.0" fill="rgb(242,130,25)" rx="2" ry="2" />
<text  x="1022.67" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="1004.6" y="117" width="0.1" height="15.0" fill="rgb(241,205,11)" rx="2" ry="2" />
<text  x="1007.57" y="127.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="1054.5" y="549" width="0.1" height="15.0" fill="rgb(209,88,43)" rx="2" ry="2" />
<text  x="1057.52" y="559.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.01%)</title><rect x="41.9" y="437" width="0.1" height="15.0" fill="rgb(210,21,52)" rx="2" ry="2" />
<text  x="44.86" y="447.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.01%)</title><rect x="42.8" y="485" width="0.1" height="15.0" fill="rgb(222,220,26)" rx="2" ry="2" />
<text  x="45.82" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.07%)</title><rect x="1074.5" y="485" width="0.9" height="15.0" fill="rgb(243,202,38)" rx="2" ry="2" />
<text  x="1077.53" y="495.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Seek&gt;::seek (6 samples, 0.06%)</title><rect x="67.6" y="565" width="0.7" height="15.0" fill="rgb(205,200,26)" rx="2" ry="2" />
<text  x="70.62" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (22 samples, 0.22%)</title><rect x="324.9" y="565" width="2.6" height="15.0" fill="rgb(211,170,11)" rx="2" ry="2" />
<text  x="327.91" y="575.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="522.6" y="373" width="0.1" height="15.0" fill="rgb(226,114,0)" rx="2" ry="2" />
<text  x="525.56" y="383.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.01%)</title><rect x="546.2" y="533" width="0.1" height="15.0" fill="rgb(246,107,26)" rx="2" ry="2" />
<text  x="549.16" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.07%)</title><rect x="1074.5" y="469" width="0.9" height="15.0" fill="rgb(210,94,47)" rx="2" ry="2" />
<text  x="1077.53" y="479.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (126 samples, 1.28%)</title><rect x="659.0" y="325" width="15.1" height="15.0" fill="rgb(225,17,39)" rx="2" ry="2" />
<text  x="661.99" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="1064.2" y="437" width="0.1" height="15.0" fill="rgb(206,228,50)" rx="2" ry="2" />
<text  x="1067.23" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (27 samples, 0.27%)</title><rect x="596.1" y="549" width="3.2" height="15.0" fill="rgb(225,176,50)" rx="2" ry="2" />
<text  x="599.11" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (7 samples, 0.07%)</title><rect x="1056.9" y="437" width="0.9" height="15.0" fill="rgb(251,222,20)" rx="2" ry="2" />
<text  x="1059.92" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="465.9" y="501" width="0.1" height="15.0" fill="rgb(211,115,10)" rx="2" ry="2" />
<text  x="468.90" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;rustposix::safeposix::filesystem::FilesystemMetadata&gt;&gt; (4 samples, 0.04%)</title><rect x="1066.0" y="549" width="0.5" height="15.0" fill="rgb(235,115,35)" rx="2" ry="2" />
<text  x="1069.02" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="1060.3" y="373" width="0.1" height="15.0" fill="rgb(214,204,38)" rx="2" ry="2" />
<text  x="1063.27" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.24%)</title><rect x="64.4" y="565" width="2.9" height="15.0" fill="rgb(219,42,15)" rx="2" ry="2" />
<text  x="67.38" y="575.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.01%)</title><rect x="42.1" y="469" width="0.1" height="15.0" fill="rgb(244,207,26)" rx="2" ry="2" />
<text  x="45.10" y="479.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (3 samples, 0.03%)</title><rect x="1062.8" y="517" width="0.3" height="15.0" fill="rgb(238,6,8)" rx="2" ry="2" />
<text  x="1065.79" y="527.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.01%)</title><rect x="1185.3" y="325" width="0.1" height="15.0" fill="rgb(250,128,50)" rx="2" ry="2" />
<text  x="1188.33" y="335.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.01%)</title><rect x="42.7" y="437" width="0.1" height="15.0" fill="rgb(211,206,32)" rx="2" ry="2" />
<text  x="45.70" y="447.5" ></text>
</g>
<g >
<title>aa_file_perm (3 samples, 0.03%)</title><rect x="826.9" y="421" width="0.4" height="15.0" fill="rgb(229,139,6)" rx="2" ry="2" />
<text  x="829.93" y="431.5" ></text>
</g>
<g >
<title>evict (102 samples, 1.04%)</title><rect x="997.4" y="437" width="12.2" height="15.0" fill="rgb(254,59,48)" rx="2" ry="2" />
<text  x="1000.39" y="447.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="1034.5" y="549" width="0.1" height="15.0" fill="rgb(250,109,38)" rx="2" ry="2" />
<text  x="1037.52" y="559.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.01%)</title><rect x="680.7" y="261" width="0.1" height="15.0" fill="rgb(227,199,9)" rx="2" ry="2" />
<text  x="683.68" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="596.0" y="549" width="0.1" height="15.0" fill="rgb(247,47,34)" rx="2" ry="2" />
<text  x="598.99" y="559.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.01%)</title><rect x="18.5" y="421" width="0.1" height="15.0" fill="rgb(207,147,35)" rx="2" ry="2" />
<text  x="21.50" y="431.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.01%)</title><rect x="465.9" y="373" width="0.1" height="15.0" fill="rgb(222,179,38)" rx="2" ry="2" />
<text  x="468.90" y="383.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (6 samples, 0.06%)</title><rect x="1182.6" y="309" width="0.7" height="15.0" fill="rgb(250,187,53)" rx="2" ry="2" />
<text  x="1185.57" y="319.5" ></text>
</g>
<g >
<title>std::panicking::panicking (5 samples, 0.05%)</title><rect x="1062.2" y="485" width="0.6" height="15.0" fill="rgb(248,168,22)" rx="2" ry="2" />
<text  x="1065.19" y="495.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (1 samples, 0.01%)</title><rect x="1148.2" y="469" width="0.1" height="15.0" fill="rgb(232,209,30)" rx="2" ry="2" />
<text  x="1151.20" y="479.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (1 samples, 0.01%)</title><rect x="55.6" y="261" width="0.2" height="15.0" fill="rgb(254,201,44)" rx="2" ry="2" />
<text  x="58.64" y="271.5" ></text>
</g>
<g >
<title>override_creds (11 samples, 0.11%)</title><rect x="532.1" y="453" width="1.4" height="15.0" fill="rgb(243,211,1)" rx="2" ry="2" />
<text  x="535.14" y="463.5" ></text>
</g>
<g >
<title>blk_mq_submit_bio (1 samples, 0.01%)</title><rect x="1106.2" y="245" width="0.1" height="15.0" fill="rgb(233,20,5)" rx="2" ry="2" />
<text  x="1109.15" y="255.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (15 samples, 0.15%)</title><rect x="707.0" y="213" width="1.8" height="15.0" fill="rgb(233,66,41)" rx="2" ry="2" />
<text  x="710.03" y="223.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1 samples, 0.01%)</title><rect x="1037.8" y="293" width="0.1" height="15.0" fill="rgb(233,98,52)" rx="2" ry="2" />
<text  x="1040.75" y="303.5" ></text>
</g>
<g >
<title>user_path_at_empty (1 samples, 0.01%)</title><rect x="18.5" y="485" width="0.1" height="15.0" fill="rgb(254,191,36)" rx="2" ry="2" />
<text  x="21.50" y="495.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.01%)</title><rect x="57.2" y="229" width="0.1" height="15.0" fill="rgb(206,82,22)" rx="2" ry="2" />
<text  x="60.20" y="239.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.01%)</title><rect x="692.2" y="245" width="0.1" height="15.0" fill="rgb(214,177,42)" rx="2" ry="2" />
<text  x="695.17" y="255.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="614.8" y="485" width="0.1" height="15.0" fill="rgb(225,68,2)" rx="2" ry="2" />
<text  x="617.79" y="495.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (2 samples, 0.02%)</title><rect x="1001.6" y="181" width="0.2" height="15.0" fill="rgb(248,35,24)" rx="2" ry="2" />
<text  x="1004.58" y="191.5" ></text>
</g>
<g >
<title>dx_probe (1 samples, 0.01%)</title><rect x="11.8" y="373" width="0.1" height="15.0" fill="rgb(254,207,50)" rx="2" ry="2" />
<text  x="14.80" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="34.2" y="437" width="0.1" height="15.0" fill="rgb(232,58,25)" rx="2" ry="2" />
<text  x="37.20" y="447.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (5 samples, 0.05%)</title><rect x="1026.9" y="245" width="0.6" height="15.0" fill="rgb(207,164,35)" rx="2" ry="2" />
<text  x="1029.85" y="255.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (7 samples, 0.07%)</title><rect x="1056.9" y="517" width="0.9" height="15.0" fill="rgb(210,85,31)" rx="2" ry="2" />
<text  x="1059.92" y="527.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (1 samples, 0.01%)</title><rect x="309.7" y="565" width="0.1" height="15.0" fill="rgb(209,85,10)" rx="2" ry="2" />
<text  x="312.70" y="575.5" ></text>
</g>
<g >
<title>__set_page_dirty (13 samples, 0.13%)</title><rect x="736.5" y="277" width="1.6" height="15.0" fill="rgb(224,195,23)" rx="2" ry="2" />
<text  x="739.49" y="287.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (6 samples, 0.06%)</title><rect x="1175.0" y="421" width="0.7" height="15.0" fill="rgb(250,141,38)" rx="2" ry="2" />
<text  x="1178.03" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.01%)</title><rect x="18.7" y="533" width="0.2" height="15.0" fill="rgb(234,63,48)" rx="2" ry="2" />
<text  x="21.74" y="543.5" ></text>
</g>
<g >
<title>do_exit (9 samples, 0.09%)</title><rect x="1026.5" y="501" width="1.1" height="15.0" fill="rgb(234,189,41)" rx="2" ry="2" />
<text  x="1029.49" y="511.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (45 samples, 0.46%)</title><rect x="769.2" y="197" width="5.4" height="15.0" fill="rgb(240,183,23)" rx="2" ry="2" />
<text  x="772.20" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="1029.7" y="485" width="0.1" height="15.0" fill="rgb(233,185,44)" rx="2" ry="2" />
<text  x="1032.73" y="495.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.02%)</title><rect x="833.9" y="469" width="0.2" height="15.0" fill="rgb(229,110,4)" rx="2" ry="2" />
<text  x="836.88" y="479.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.01%)</title><rect x="465.9" y="357" width="0.1" height="15.0" fill="rgb(249,188,47)" rx="2" ry="2" />
<text  x="468.90" y="367.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.01%)</title><rect x="19.6" y="341" width="0.1" height="15.0" fill="rgb(239,38,49)" rx="2" ry="2" />
<text  x="22.58" y="351.5" ></text>
</g>
<g >
<title>account_page_dirtied (2 samples, 0.02%)</title><rect x="59.7" y="261" width="0.3" height="15.0" fill="rgb(253,214,3)" rx="2" ry="2" />
<text  x="62.71" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="41.9" y="533" width="0.1" height="15.0" fill="rgb(240,8,26)" rx="2" ry="2" />
<text  x="44.86" y="543.5" ></text>
</g>
<g >
<title>dput (8 samples, 0.08%)</title><rect x="1026.6" y="437" width="1.0" height="15.0" fill="rgb(216,64,3)" rx="2" ry="2" />
<text  x="1029.61" y="447.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="53.6" y="293" width="0.1" height="15.0" fill="rgb(213,34,15)" rx="2" ry="2" />
<text  x="56.60" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.03%)</title><rect x="1067.1" y="437" width="0.4" height="15.0" fill="rgb(211,164,5)" rx="2" ry="2" />
<text  x="1070.10" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="59.8" y="229" width="0.2" height="15.0" fill="rgb(223,171,47)" rx="2" ry="2" />
<text  x="62.83" y="239.5" ></text>
</g>
<g >
<title>memchr_inv (2 samples, 0.02%)</title><rect x="1140.5" y="437" width="0.3" height="15.0" fill="rgb(230,170,54)" rx="2" ry="2" />
<text  x="1143.53" y="447.5" ></text>
</g>
<g >
<title>down_write (11 samples, 0.11%)</title><rect x="627.7" y="437" width="1.3" height="15.0" fill="rgb(250,5,17)" rx="2" ry="2" />
<text  x="630.73" y="447.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="1064.0" y="469" width="0.3" height="15.0" fill="rgb(211,110,33)" rx="2" ry="2" />
<text  x="1066.99" y="479.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (4 samples, 0.04%)</title><rect x="1059.8" y="501" width="0.5" height="15.0" fill="rgb(223,71,21)" rx="2" ry="2" />
<text  x="1062.79" y="511.5" ></text>
</g>
<g >
<title>map_id_up (4 samples, 0.04%)</title><rect x="785.7" y="229" width="0.5" height="15.0" fill="rgb(216,127,3)" rx="2" ry="2" />
<text  x="788.73" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="66.8" y="405" width="0.1" height="15.0" fill="rgb(226,172,48)" rx="2" ry="2" />
<text  x="69.78" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (1 samples, 0.01%)</title><rect x="1069.4" y="517" width="0.1" height="15.0" fill="rgb(214,26,2)" rx="2" ry="2" />
<text  x="1072.38" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.02%)</title><rect x="833.9" y="485" width="0.2" height="15.0" fill="rgb(232,142,33)" rx="2" ry="2" />
<text  x="836.88" y="495.5" ></text>
</g>
<g >
<title>NaClSysWaitpid (413 samples, 4.19%)</title><rect x="189.9" y="565" width="49.5" height="15.0" fill="rgb(229,132,35)" rx="2" ry="2" />
<text  x="192.92" y="575.5" >NaCl..</text>
</g>
<g >
<title>nohz_csd_func (14 samples, 0.14%)</title><rect x="1176.2" y="421" width="1.7" height="15.0" fill="rgb(252,86,7)" rx="2" ry="2" />
<text  x="1179.22" y="431.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.01%)</title><rect x="1037.8" y="309" width="0.1" height="15.0" fill="rgb(228,14,23)" rx="2" ry="2" />
<text  x="1040.75" y="319.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (78 samples, 0.79%)</title><rect x="52.9" y="389" width="9.3" height="15.0" fill="rgb(250,184,21)" rx="2" ry="2" />
<text  x="55.88" y="399.5" ></text>
</g>
<g >
<title>lru_cache_add (16 samples, 0.16%)</title><rect x="696.2" y="277" width="2.0" height="15.0" fill="rgb(230,211,30)" rx="2" ry="2" />
<text  x="699.25" y="287.5" ></text>
</g>
<g >
<title>seq_put_decimal_ull (1 samples, 0.01%)</title><rect x="52.5" y="405" width="0.1" height="15.0" fill="rgb(241,164,31)" rx="2" ry="2" />
<text  x="55.52" y="415.5" ></text>
</g>
<g >
<title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="996.8" y="565" width="0.2" height="15.0" fill="rgb(212,87,25)" rx="2" ry="2" />
<text  x="999.79" y="575.5" ></text>
</g>
<g >
<title>__getblk_gfp (38 samples, 0.39%)</title><rect x="796.9" y="213" width="4.5" height="15.0" fill="rgb(212,173,7)" rx="2" ry="2" />
<text  x="799.87" y="223.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (1 samples, 0.01%)</title><rect x="1054.5" y="517" width="0.1" height="15.0" fill="rgb(218,34,26)" rx="2" ry="2" />
<text  x="1057.52" y="527.5" ></text>
</g>
<g >
<title>poll_idle (17 samples, 0.17%)</title><rect x="36.2" y="389" width="2.1" height="15.0" fill="rgb(243,156,4)" rx="2" ry="2" />
<text  x="39.23" y="399.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.01%)</title><rect x="834.0" y="357" width="0.1" height="15.0" fill="rgb(214,10,14)" rx="2" ry="2" />
<text  x="837.00" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::interface::file::EmulatedFile&gt;&gt; (8 samples, 0.08%)</title><rect x="1062.2" y="549" width="0.9" height="15.0" fill="rgb(243,138,17)" rx="2" ry="2" />
<text  x="1065.19" y="559.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u8 (8 samples, 0.08%)</title><rect x="1076.0" y="533" width="0.9" height="15.0" fill="rgb(218,37,20)" rx="2" ry="2" />
<text  x="1078.96" y="543.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="66.8" y="373" width="0.1" height="15.0" fill="rgb(222,75,33)" rx="2" ry="2" />
<text  x="69.78" y="383.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.01%)</title><rect x="42.6" y="453" width="0.1" height="15.0" fill="rgb(214,95,36)" rx="2" ry="2" />
<text  x="45.58" y="463.5" ></text>
</g>
<g >
<title>dec_zone_page_state (1 samples, 0.01%)</title><rect x="1105.8" y="293" width="0.1" height="15.0" fill="rgb(225,132,8)" rx="2" ry="2" />
<text  x="1108.79" y="303.5" ></text>
</g>
<g >
<title>do_iter_write (4 samples, 0.04%)</title><rect x="62.3" y="437" width="0.5" height="15.0" fill="rgb(242,9,1)" rx="2" ry="2" />
<text  x="65.35" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.02%)</title><rect x="996.8" y="549" width="0.2" height="15.0" fill="rgb(209,99,31)" rx="2" ry="2" />
<text  x="999.79" y="559.5" ></text>
</g>
<g >
<title>file_update_time (16 samples, 0.16%)</title><rect x="644.7" y="341" width="2.0" height="15.0" fill="rgb(240,8,10)" rx="2" ry="2" />
<text  x="647.74" y="351.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (7 samples, 0.07%)</title><rect x="692.7" y="261" width="0.8" height="15.0" fill="rgb(209,162,20)" rx="2" ry="2" />
<text  x="695.65" y="271.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.08%)</title><rect x="1062.2" y="533" width="0.9" height="15.0" fill="rgb(241,86,16)" rx="2" ry="2" />
<text  x="1065.19" y="543.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (14 samples, 0.14%)</title><rect x="696.5" y="261" width="1.7" height="15.0" fill="rgb(213,206,47)" rx="2" ry="2" />
<text  x="699.49" y="271.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2 samples, 0.02%)</title><rect x="1027.6" y="533" width="0.2" height="15.0" fill="rgb(236,10,28)" rx="2" ry="2" />
<text  x="1030.57" y="543.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.01%)</title><rect x="42.7" y="469" width="0.1" height="15.0" fill="rgb(247,125,3)" rx="2" ry="2" />
<text  x="45.70" y="479.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (3 samples, 0.03%)</title><rect x="829.0" y="485" width="0.3" height="15.0" fill="rgb(246,201,29)" rx="2" ry="2" />
<text  x="831.97" y="495.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (1 samples, 0.01%)</title><rect x="64.3" y="533" width="0.1" height="15.0" fill="rgb(230,173,26)" rx="2" ry="2" />
<text  x="67.26" y="543.5" ></text>
</g>
<g >
<title>pick_next_task_fair (58 samples, 0.59%)</title><rect x="1178.5" y="405" width="6.9" height="15.0" fill="rgb(237,203,3)" rx="2" ry="2" />
<text  x="1181.50" y="415.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.01%)</title><rect x="62.5" y="309" width="0.1" height="15.0" fill="rgb(216,130,52)" rx="2" ry="2" />
<text  x="65.47" y="319.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (32 samples, 0.32%)</title><rect x="681.0" y="309" width="3.9" height="15.0" fill="rgb(215,168,54)" rx="2" ry="2" />
<text  x="684.03" y="319.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.02%)</title><rect x="1027.6" y="517" width="0.2" height="15.0" fill="rgb(244,221,47)" rx="2" ry="2" />
<text  x="1030.57" y="527.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.01%)</title><rect x="667.0" y="293" width="0.1" height="15.0" fill="rgb(233,177,50)" rx="2" ry="2" />
<text  x="670.02" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (2 samples, 0.02%)</title><rect x="33.2" y="437" width="0.3" height="15.0" fill="rgb(226,145,44)" rx="2" ry="2" />
<text  x="36.24" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="1069.0" y="485" width="0.1" height="15.0" fill="rgb(219,211,16)" rx="2" ry="2" />
<text  x="1072.02" y="495.5" ></text>
</g>
<g >
<title>aa_file_perm (1 samples, 0.01%)</title><rect x="587.1" y="357" width="0.1" height="15.0" fill="rgb(211,54,19)" rx="2" ry="2" />
<text  x="590.12" y="367.5" ></text>
</g>
<g >
<title>NaClSysWrite (16 samples, 0.16%)</title><rect x="239.4" y="565" width="1.9" height="15.0" fill="rgb(253,91,19)" rx="2" ry="2" />
<text  x="242.39" y="575.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (13 samples, 0.13%)</title><rect x="741.0" y="277" width="1.6" height="15.0" fill="rgb(212,215,39)" rx="2" ry="2" />
<text  x="744.05" y="287.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (1 samples, 0.01%)</title><rect x="1060.3" y="517" width="0.1" height="15.0" fill="rgb(209,49,37)" rx="2" ry="2" />
<text  x="1063.27" y="527.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (4 samples, 0.04%)</title><rect x="68.6" y="549" width="0.5" height="15.0" fill="rgb(246,90,0)" rx="2" ry="2" />
<text  x="71.57" y="559.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (8 samples, 0.08%)</title><rect x="1173.2" y="357" width="1.0" height="15.0" fill="rgb(248,122,12)" rx="2" ry="2" />
<text  x="1176.23" y="367.5" ></text>
</g>
<g >
<title>__libc_lseek (434 samples, 4.41%)</title><rect x="495.4" y="565" width="52.0" height="15.0" fill="rgb(243,43,34)" rx="2" ry="2" />
<text  x="498.37" y="575.5" >__lib..</text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (22 samples, 0.22%)</title><rect x="706.2" y="229" width="2.6" height="15.0" fill="rgb(225,111,15)" rx="2" ry="2" />
<text  x="709.19" y="239.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (2 samples, 0.02%)</title><rect x="35.0" y="405" width="0.3" height="15.0" fill="rgb(238,76,50)" rx="2" ry="2" />
<text  x="38.04" y="415.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (1 samples, 0.01%)</title><rect x="62.3" y="357" width="0.2" height="15.0" fill="rgb(233,91,52)" rx="2" ry="2" />
<text  x="65.35" y="367.5" ></text>
</g>
<g >
<title>__get_user_pages (2 samples, 0.02%)</title><rect x="1037.8" y="405" width="0.2" height="15.0" fill="rgb(250,207,33)" rx="2" ry="2" />
<text  x="1040.75" y="415.5" ></text>
</g>
<g >
<title>ovl_inode_real (5 samples, 0.05%)</title><rect x="631.3" y="437" width="0.6" height="15.0" fill="rgb(235,35,8)" rx="2" ry="2" />
<text  x="634.32" y="447.5" ></text>
</g>
<g >
<title>[sel_ldr] (55 samples, 0.56%)</title><rect x="310.3" y="565" width="6.6" height="15.0" fill="rgb(239,108,42)" rx="2" ry="2" />
<text  x="313.30" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="1071.3" y="501" width="0.1" height="15.0" fill="rgb(251,184,24)" rx="2" ry="2" />
<text  x="1074.29" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (1 samples, 0.01%)</title><rect x="1071.2" y="501" width="0.1" height="15.0" fill="rgb(207,203,43)" rx="2" ry="2" />
<text  x="1074.17" y="511.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (18 samples, 0.18%)</title><rect x="1140.8" y="501" width="2.1" height="15.0" fill="rgb(247,119,29)" rx="2" ry="2" />
<text  x="1143.77" y="511.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (2 samples, 0.02%)</title><rect x="122.0" y="565" width="0.2" height="15.0" fill="rgb(213,65,35)" rx="2" ry="2" />
<text  x="125.00" y="575.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.05%)</title><rect x="1141.1" y="485" width="0.6" height="15.0" fill="rgb(224,28,41)" rx="2" ry="2" />
<text  x="1144.13" y="495.5" ></text>
</g>
<g >
<title>map_id_up (3 samples, 0.03%)</title><rect x="784.6" y="213" width="0.4" height="15.0" fill="rgb(237,105,48)" rx="2" ry="2" />
<text  x="787.65" y="223.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.03%)</title><rect x="1034.2" y="549" width="0.3" height="15.0" fill="rgb(208,215,0)" rx="2" ry="2" />
<text  x="1037.16" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="52.5" y="549" width="0.1" height="15.0" fill="rgb(244,131,19)" rx="2" ry="2" />
<text  x="55.52" y="559.5" ></text>
</g>
<g >
<title>cpuidle_enter (142 samples, 1.44%)</title><rect x="1152.9" y="421" width="17.0" height="15.0" fill="rgb(226,226,39)" rx="2" ry="2" />
<text  x="1155.87" y="431.5" ></text>
</g>
<g >
<title>ksys_lseek (6 samples, 0.06%)</title><rect x="543.9" y="517" width="0.7" height="15.0" fill="rgb(217,118,47)" rx="2" ry="2" />
<text  x="546.88" y="527.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (8 samples, 0.08%)</title><rect x="1026.6" y="389" width="1.0" height="15.0" fill="rgb(251,19,53)" rx="2" ry="2" />
<text  x="1029.61" y="399.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.01%)</title><rect x="19.6" y="325" width="0.1" height="15.0" fill="rgb(250,156,26)" rx="2" ry="2" />
<text  x="22.58" y="335.5" ></text>
</g>
<g >
<title>rw_verify_area (4 samples, 0.04%)</title><rect x="587.2" y="421" width="0.5" height="15.0" fill="rgb(217,1,21)" rx="2" ry="2" />
<text  x="590.24" y="431.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (12 samples, 0.12%)</title><rect x="998.7" y="149" width="1.4" height="15.0" fill="rgb(209,12,33)" rx="2" ry="2" />
<text  x="1001.70" y="159.5" ></text>
</g>
<g >
<title>native_sched_clock (3 samples, 0.03%)</title><rect x="38.4" y="373" width="0.3" height="15.0" fill="rgb(227,75,42)" rx="2" ry="2" />
<text  x="41.39" y="383.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="1019.7" y="517" width="0.1" height="15.0" fill="rgb(252,126,28)" rx="2" ry="2" />
<text  x="1022.67" y="527.5" ></text>
</g>
<g >
<title>shmem_add_to_page_cache (1 samples, 0.01%)</title><rect x="1037.9" y="261" width="0.1" height="15.0" fill="rgb(218,65,48)" rx="2" ry="2" />
<text  x="1040.87" y="271.5" ></text>
</g>
<g >
<title>native_sched_clock (4 samples, 0.04%)</title><rect x="1167.8" y="357" width="0.5" height="15.0" fill="rgb(246,91,13)" rx="2" ry="2" />
<text  x="1170.84" y="367.5" ></text>
</g>
<g >
<title>ktime_get (5 samples, 0.05%)</title><rect x="1186.9" y="421" width="0.6" height="15.0" fill="rgb(230,141,0)" rx="2" ry="2" />
<text  x="1189.89" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.01%)</title><rect x="11.7" y="533" width="0.1" height="15.0" fill="rgb(210,83,8)" rx="2" ry="2" />
<text  x="14.68" y="543.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.01%)</title><rect x="641.5" y="341" width="0.1" height="15.0" fill="rgb(218,193,44)" rx="2" ry="2" />
<text  x="644.51" y="351.5" ></text>
</g>
<g >
<title>ServiceWorker_t (21 samples, 0.21%)</title><rect x="10.0" y="581" width="2.5" height="15.0" fill="rgb(208,116,27)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.03%)</title><rect x="1077.6" y="389" width="0.4" height="15.0" fill="rgb(221,132,25)" rx="2" ry="2" />
<text  x="1080.64" y="399.5" ></text>
</g>
<g >
<title>ovl_d_real (1 samples, 0.01%)</title><rect x="561.0" y="421" width="0.1" height="15.0" fill="rgb(223,67,53)" rx="2" ry="2" />
<text  x="564.01" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (8 samples, 0.08%)</title><rect x="1019.9" y="565" width="1.0" height="15.0" fill="rgb(236,165,0)" rx="2" ry="2" />
<text  x="1022.91" y="575.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (1 samples, 0.01%)</title><rect x="1027.6" y="357" width="0.1" height="15.0" fill="rgb(217,143,28)" rx="2" ry="2" />
<text  x="1030.57" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.03%)</title><rect x="1061.8" y="533" width="0.4" height="15.0" fill="rgb(234,52,36)" rx="2" ry="2" />
<text  x="1064.83" y="543.5" ></text>
</g>
<g >
<title>ext4_da_write_end (19 samples, 0.19%)</title><rect x="59.1" y="341" width="2.3" height="15.0" fill="rgb(238,85,15)" rx="2" ry="2" />
<text  x="62.11" y="351.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (4 samples, 0.04%)</title><rect x="539.4" y="469" width="0.5" height="15.0" fill="rgb(214,14,20)" rx="2" ry="2" />
<text  x="542.45" y="479.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (2 samples, 0.02%)</title><rect x="58.9" y="213" width="0.2" height="15.0" fill="rgb(219,36,22)" rx="2" ry="2" />
<text  x="61.87" y="223.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.01%)</title><rect x="1106.4" y="309" width="0.1" height="15.0" fill="rgb(246,151,16)" rx="2" ry="2" />
<text  x="1109.39" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="310.2" y="517" width="0.1" height="15.0" fill="rgb(231,123,25)" rx="2" ry="2" />
<text  x="313.18" y="527.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.01%)</title><rect x="471.8" y="469" width="0.1" height="15.0" fill="rgb(232,175,20)" rx="2" ry="2" />
<text  x="474.77" y="479.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.01%)</title><rect x="1148.1" y="469" width="0.1" height="15.0" fill="rgb(214,183,9)" rx="2" ry="2" />
<text  x="1151.08" y="479.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (184 samples, 1.87%)</title><rect x="562.8" y="405" width="22.0" height="15.0" fill="rgb(240,165,11)" rx="2" ry="2" />
<text  x="565.81" y="415.5" >d..</text>
</g>
<g >
<title>__mod_lruvec_page_state (2 samples, 0.02%)</title><rect x="1005.5" y="69" width="0.3" height="15.0" fill="rgb(207,72,41)" rx="2" ry="2" />
<text  x="1008.53" y="79.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.01%)</title><rect x="1140.3" y="421" width="0.1" height="15.0" fill="rgb(224,142,33)" rx="2" ry="2" />
<text  x="1143.29" y="431.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.01%)</title><rect x="66.8" y="325" width="0.1" height="15.0" fill="rgb(228,130,44)" rx="2" ry="2" />
<text  x="69.78" y="335.5" ></text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.01%)</title><rect x="42.2" y="437" width="0.1" height="15.0" fill="rgb(210,218,45)" rx="2" ry="2" />
<text  x="45.22" y="447.5" ></text>
</g>
<g >
<title>local_touch_nmi (1 samples, 0.01%)</title><rect x="1177.9" y="437" width="0.1" height="15.0" fill="rgb(254,25,54)" rx="2" ry="2" />
<text  x="1180.90" y="447.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (354 samples, 3.59%)</title><rect x="745.7" y="261" width="42.4" height="15.0" fill="rgb(207,43,19)" rx="2" ry="2" />
<text  x="748.72" y="271.5" >ext..</text>
</g>
<g >
<title>menu_reflect (1 samples, 0.01%)</title><rect x="1170.0" y="405" width="0.1" height="15.0" fill="rgb(234,206,54)" rx="2" ry="2" />
<text  x="1173.00" y="415.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.01%)</title><rect x="1105.7" y="277" width="0.1" height="15.0" fill="rgb(205,138,43)" rx="2" ry="2" />
<text  x="1108.67" y="287.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (9 samples, 0.09%)</title><rect x="1144.6" y="421" width="1.1" height="15.0" fill="rgb(247,68,30)" rx="2" ry="2" />
<text  x="1147.60" y="431.5" ></text>
</g>
<g >
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="590.5" y="421" width="0.2" height="15.0" fill="rgb(230,47,0)" rx="2" ry="2" />
<text  x="593.48" y="431.5" ></text>
</g>
<g >
<title>generic_exec_single (6 samples, 0.06%)</title><rect x="1182.6" y="325" width="0.7" height="15.0" fill="rgb(249,208,33)" rx="2" ry="2" />
<text  x="1185.57" y="335.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (44 samples, 0.45%)</title><rect x="53.8" y="341" width="5.3" height="15.0" fill="rgb(244,20,1)" rx="2" ry="2" />
<text  x="56.84" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="1071.3" y="485" width="0.1" height="15.0" fill="rgb(230,113,39)" rx="2" ry="2" />
<text  x="1074.29" y="495.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (35 samples, 0.36%)</title><rect x="35.6" y="437" width="4.2" height="15.0" fill="rgb(229,104,19)" rx="2" ry="2" />
<text  x="38.63" y="447.5" ></text>
</g>
<g >
<title>__rdl_alloc (2 samples, 0.02%)</title><rect x="996.5" y="565" width="0.3" height="15.0" fill="rgb(234,156,40)" rx="2" ry="2" />
<text  x="999.55" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.03%)</title><rect x="1067.1" y="469" width="0.4" height="15.0" fill="rgb(214,219,53)" rx="2" ry="2" />
<text  x="1070.10" y="479.5" ></text>
</g>
<g >
<title>smp_call_function_single (65 samples, 0.66%)</title><rect x="44.1" y="421" width="7.8" height="15.0" fill="rgb(235,71,16)" rx="2" ry="2" />
<text  x="47.14" y="431.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (7 samples, 0.07%)</title><rect x="828.5" y="501" width="0.8" height="15.0" fill="rgb(211,34,8)" rx="2" ry="2" />
<text  x="831.49" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="522.6" y="405" width="0.1" height="15.0" fill="rgb(227,28,33)" rx="2" ry="2" />
<text  x="525.56" y="415.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (10 samples, 0.10%)</title><rect x="641.6" y="357" width="1.2" height="15.0" fill="rgb(230,175,1)" rx="2" ry="2" />
<text  x="644.63" y="367.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (14 samples, 0.14%)</title><rect x="864.8" y="565" width="1.7" height="15.0" fill="rgb(215,130,33)" rx="2" ry="2" />
<text  x="867.78" y="575.5" ></text>
</g>
<g >
<title>generic_write_end (15 samples, 0.15%)</title><rect x="59.6" y="325" width="1.8" height="15.0" fill="rgb(254,101,13)" rx="2" ry="2" />
<text  x="62.59" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (2 samples, 0.02%)</title><rect x="1000.1" y="181" width="0.3" height="15.0" fill="rgb(230,107,7)" rx="2" ry="2" />
<text  x="1003.14" y="191.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="19.6" y="405" width="0.1" height="15.0" fill="rgb(211,168,4)" rx="2" ry="2" />
<text  x="22.58" y="415.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.01%)</title><rect x="19.0" y="533" width="0.1" height="15.0" fill="rgb(233,137,21)" rx="2" ry="2" />
<text  x="21.98" y="543.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (281 samples, 2.85%)</title><rect x="1107.1" y="501" width="33.7" height="15.0" fill="rgb(244,34,46)" rx="2" ry="2" />
<text  x="1110.11" y="511.5" >cp..</text>
</g>
<g >
<title>ovl_read_iter (3 samples, 0.03%)</title><rect x="588.2" y="469" width="0.4" height="15.0" fill="rgb(252,53,14)" rx="2" ry="2" />
<text  x="591.20" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (3 samples, 0.03%)</title><rect x="68.7" y="485" width="0.4" height="15.0" fill="rgb(235,214,50)" rx="2" ry="2" />
<text  x="71.69" y="495.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.01%)</title><rect x="42.7" y="453" width="0.1" height="15.0" fill="rgb(253,223,28)" rx="2" ry="2" />
<text  x="45.70" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="1064.3" y="453" width="0.3" height="15.0" fill="rgb(216,224,15)" rx="2" ry="2" />
<text  x="1067.35" y="463.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (5 samples, 0.05%)</title><rect x="813.4" y="357" width="0.6" height="15.0" fill="rgb(238,100,50)" rx="2" ry="2" />
<text  x="816.40" y="367.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (3 samples, 0.03%)</title><rect x="67.3" y="565" width="0.3" height="15.0" fill="rgb(206,225,53)" rx="2" ry="2" />
<text  x="70.26" y="575.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (3 samples, 0.03%)</title><rect x="59.6" y="293" width="0.4" height="15.0" fill="rgb(230,53,17)" rx="2" ry="2" />
<text  x="62.59" y="303.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.01%)</title><rect x="596.0" y="501" width="0.1" height="15.0" fill="rgb(208,89,53)" rx="2" ry="2" />
<text  x="598.99" y="511.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (327 samples, 3.32%)</title><rect x="1150.8" y="533" width="39.2" height="15.0" fill="rgb(219,114,11)" rx="2" ry="2" />
<text  x="1153.83" y="543.5" >x86..</text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u16 (3 samples, 0.03%)</title><rect x="1077.6" y="485" width="0.4" height="15.0" fill="rgb(209,19,37)" rx="2" ry="2" />
<text  x="1080.64" y="495.5" ></text>
</g>
<g >
<title>arch_call_rest_init (327 samples, 3.32%)</title><rect x="1150.8" y="501" width="39.2" height="15.0" fill="rgb(224,132,8)" rx="2" ry="2" />
<text  x="1153.83" y="511.5" >arc..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.02%)</title><rect x="545.6" y="501" width="0.2" height="15.0" fill="rgb(227,177,50)" rx="2" ry="2" />
<text  x="548.56" y="511.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.01%)</title><rect x="40.2" y="421" width="0.1" height="15.0" fill="rgb(227,81,36)" rx="2" ry="2" />
<text  x="43.19" y="431.5" ></text>
</g>
<g >
<title>cpu_startup_entry (51 samples, 0.52%)</title><rect x="35.6" y="469" width="6.1" height="15.0" fill="rgb(219,57,26)" rx="2" ry="2" />
<text  x="38.63" y="479.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.01%)</title><rect x="1185.4" y="405" width="0.2" height="15.0" fill="rgb(251,167,38)" rx="2" ry="2" />
<text  x="1188.45" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (79 samples, 0.80%)</title><rect x="52.8" y="549" width="9.4" height="15.0" fill="rgb(215,3,38)" rx="2" ry="2" />
<text  x="55.76" y="559.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (3 samples, 0.03%)</title><rect x="545.8" y="501" width="0.4" height="15.0" fill="rgb(241,183,30)" rx="2" ry="2" />
<text  x="548.80" y="511.5" ></text>
</g>
<g >
<title>common_interrupt (2 samples, 0.02%)</title><rect x="19.3" y="437" width="0.3" height="15.0" fill="rgb(218,33,19)" rx="2" ry="2" />
<text  x="22.34" y="447.5" ></text>
</g>
<g >
<title>fput (5 samples, 0.05%)</title><rect x="550.7" y="501" width="0.6" height="15.0" fill="rgb(229,229,20)" rx="2" ry="2" />
<text  x="553.71" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.08%)</title><rect x="42.0" y="533" width="0.9" height="15.0" fill="rgb(206,134,38)" rx="2" ry="2" />
<text  x="44.98" y="543.5" ></text>
</g>
<g >
<title>workingset_update_node (2 samples, 0.02%)</title><rect x="695.3" y="245" width="0.2" height="15.0" fill="rgb(238,86,19)" rx="2" ry="2" />
<text  x="698.29" y="255.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.02%)</title><rect x="1026.6" y="245" width="0.3" height="15.0" fill="rgb(246,135,44)" rx="2" ry="2" />
<text  x="1029.61" y="255.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.01%)</title><rect x="42.7" y="341" width="0.1" height="15.0" fill="rgb(226,23,18)" rx="2" ry="2" />
<text  x="45.70" y="351.5" ></text>
</g>
<g >
<title>_cond_resched (9 samples, 0.09%)</title><rect x="564.2" y="357" width="1.1" height="15.0" fill="rgb(251,2,10)" rx="2" ry="2" />
<text  x="567.24" y="367.5" ></text>
</g>
<g >
<title>page_add_file_rmap (2 samples, 0.02%)</title><rect x="833.9" y="389" width="0.2" height="15.0" fill="rgb(242,135,20)" rx="2" ry="2" />
<text  x="836.88" y="399.5" ></text>
</g>
<g >
<title>ext4_lookup (1 samples, 0.01%)</title><rect x="11.8" y="437" width="0.1" height="15.0" fill="rgb(221,204,25)" rx="2" ry="2" />
<text  x="14.80" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="465.9" y="485" width="0.1" height="15.0" fill="rgb(226,3,32)" rx="2" ry="2" />
<text  x="468.90" y="495.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="1173.6" y="325" width="0.1" height="15.0" fill="rgb(252,85,16)" rx="2" ry="2" />
<text  x="1176.59" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="1071.3" y="533" width="0.1" height="15.0" fill="rgb(253,199,16)" rx="2" ry="2" />
<text  x="1074.29" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,895 samples, 19.24%)</title><rect x="602.9" y="533" width="227.0" height="15.0" fill="rgb(242,126,14)" rx="2" ry="2" />
<text  x="605.93" y="543.5" >do_syscall_64</text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.01%)</title><rect x="59.5" y="261" width="0.1" height="15.0" fill="rgb(217,73,27)" rx="2" ry="2" />
<text  x="62.47" y="271.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (2 samples, 0.02%)</title><rect x="590.7" y="421" width="0.3" height="15.0" fill="rgb(247,177,3)" rx="2" ry="2" />
<text  x="593.72" y="431.5" ></text>
</g>
<g >
<title>poll_idle (15 samples, 0.15%)</title><rect x="30.5" y="453" width="1.8" height="15.0" fill="rgb(251,148,47)" rx="2" ry="2" />
<text  x="33.48" y="463.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="19.3" y="421" width="0.3" height="15.0" fill="rgb(248,208,42)" rx="2" ry="2" />
<text  x="22.34" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="471.8" y="517" width="0.1" height="15.0" fill="rgb(236,51,40)" rx="2" ry="2" />
<text  x="474.77" y="527.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (5 samples, 0.05%)</title><rect x="1062.2" y="469" width="0.6" height="15.0" fill="rgb(254,11,25)" rx="2" ry="2" />
<text  x="1065.19" y="479.5" ></text>
</g>
<g >
<title>file_modified (1 samples, 0.01%)</title><rect x="52.9" y="357" width="0.1" height="15.0" fill="rgb(239,63,17)" rx="2" ry="2" />
<text  x="55.88" y="367.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="1064.5" y="389" width="0.1" height="15.0" fill="rgb(231,205,15)" rx="2" ry="2" />
<text  x="1067.47" y="399.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (2 samples, 0.02%)</title><rect x="1139.0" y="437" width="0.2" height="15.0" fill="rgb(248,168,13)" rx="2" ry="2" />
<text  x="1141.97" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (16 samples, 0.16%)</title><rect x="1078.4" y="533" width="1.9" height="15.0" fill="rgb(236,48,3)" rx="2" ry="2" />
<text  x="1081.36" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (8 samples, 0.08%)</title><rect x="727.8" y="245" width="0.9" height="15.0" fill="rgb(245,77,38)" rx="2" ry="2" />
<text  x="730.75" y="255.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,498 samples, 15.21%)</title><rect x="637.3" y="405" width="179.5" height="15.0" fill="rgb(215,156,7)" rx="2" ry="2" />
<text  x="640.31" y="415.5" >do_iter_readv_writev</text>
</g>
<g >
<title>pagecache_get_page (26 samples, 0.26%)</title><rect x="56.0" y="309" width="3.1" height="15.0" fill="rgb(227,30,4)" rx="2" ry="2" />
<text  x="59.00" y="319.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="1029.7" y="437" width="0.1" height="15.0" fill="rgb(228,39,2)" rx="2" ry="2" />
<text  x="1032.73" y="447.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (26 samples, 0.26%)</title><rect x="56.0" y="325" width="3.1" height="15.0" fill="rgb(221,204,2)" rx="2" ry="2" />
<text  x="59.00" y="335.5" ></text>
</g>
<g >
<title>llist_add_batch (2 samples, 0.02%)</title><rect x="35.0" y="389" width="0.3" height="15.0" fill="rgb(242,193,52)" rx="2" ry="2" />
<text  x="38.04" y="399.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.01%)</title><rect x="331.5" y="373" width="0.1" height="15.0" fill="rgb(227,98,30)" rx="2" ry="2" />
<text  x="334.50" y="383.5" ></text>
</g>
<g >
<title>sel_ldr (8,502 samples, 86.31%)</title><rect x="63.1" y="581" width="1018.4" height="15.0" fill="rgb(205,87,10)" rx="2" ry="2" />
<text  x="66.06" y="591.5" >sel_ldr</text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="824.1" y="453" width="0.2" height="15.0" fill="rgb(230,127,32)" rx="2" ry="2" />
<text  x="827.06" y="463.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (2 samples, 0.02%)</title><rect x="1069.0" y="517" width="0.3" height="15.0" fill="rgb(249,134,8)" rx="2" ry="2" />
<text  x="1072.02" y="527.5" ></text>
</g>
<g >
<title>unlock_page (6 samples, 0.06%)</title><rect x="803.5" y="325" width="0.7" height="15.0" fill="rgb(236,50,51)" rx="2" ry="2" />
<text  x="806.45" y="335.5" ></text>
</g>
<g >
<title>ovl_inode_realdata (2 samples, 0.02%)</title><rect x="561.4" y="405" width="0.2" height="15.0" fill="rgb(232,69,6)" rx="2" ry="2" />
<text  x="564.37" y="415.5" ></text>
</g>
<g >
<title>__free_one_page (1 samples, 0.01%)</title><rect x="1026.7" y="181" width="0.2" height="15.0" fill="rgb(212,165,47)" rx="2" ry="2" />
<text  x="1029.73" y="191.5" ></text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (1 samples, 0.01%)</title><rect x="1106.2" y="133" width="0.1" height="15.0" fill="rgb(213,74,31)" rx="2" ry="2" />
<text  x="1109.15" y="143.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.05%)</title><rect x="1024.1" y="517" width="0.6" height="15.0" fill="rgb(220,219,30)" rx="2" ry="2" />
<text  x="1027.10" y="527.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="1076.4" y="405" width="0.5" height="15.0" fill="rgb(224,158,16)" rx="2" ry="2" />
<text  x="1079.44" y="415.5" ></text>
</g>
<g >
<title>dput (102 samples, 1.04%)</title><rect x="997.4" y="389" width="12.2" height="15.0" fill="rgb(219,37,41)" rx="2" ry="2" />
<text  x="1000.39" y="399.5" ></text>
</g>
<g >
<title>__getblk_gfp (1 samples, 0.01%)</title><rect x="802.1" y="229" width="0.2" height="15.0" fill="rgb(238,95,13)" rx="2" ry="2" />
<text  x="805.14" y="239.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.01%)</title><rect x="35.4" y="469" width="0.1" height="15.0" fill="rgb(231,85,25)" rx="2" ry="2" />
<text  x="38.39" y="479.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.01%)</title><rect x="740.7" y="293" width="0.1" height="15.0" fill="rgb(253,54,15)" rx="2" ry="2" />
<text  x="743.69" y="303.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.01%)</title><rect x="1024.2" y="485" width="0.1" height="15.0" fill="rgb(211,37,54)" rx="2" ry="2" />
<text  x="1027.22" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (1 samples, 0.01%)</title><rect x="1105.0" y="533" width="0.1" height="15.0" fill="rgb(229,207,14)" rx="2" ry="2" />
<text  x="1107.95" y="543.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.01%)</title><rect x="35.9" y="229" width="0.1" height="15.0" fill="rgb(219,91,5)" rx="2" ry="2" />
<text  x="38.87" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="1064.3" y="469" width="0.3" height="15.0" fill="rgb(250,149,24)" rx="2" ry="2" />
<text  x="1067.35" y="479.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.01%)</title><rect x="1187.8" y="421" width="0.2" height="15.0" fill="rgb(208,210,23)" rx="2" ry="2" />
<text  x="1190.84" y="431.5" ></text>
</g>
<g >
<title>__fdget_pos (91 samples, 0.92%)</title><rect x="510.6" y="485" width="10.9" height="15.0" fill="rgb(206,106,14)" rx="2" ry="2" />
<text  x="513.58" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.01%)</title><rect x="41.9" y="517" width="0.1" height="15.0" fill="rgb(212,73,21)" rx="2" ry="2" />
<text  x="44.86" y="527.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.02%)</title><rect x="41.5" y="453" width="0.2" height="15.0" fill="rgb(217,111,35)" rx="2" ry="2" />
<text  x="44.50" y="463.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (10 samples, 0.10%)</title><rect x="1053.4" y="565" width="1.2" height="15.0" fill="rgb(219,189,5)" rx="2" ry="2" />
<text  x="1056.45" y="575.5" ></text>
</g>
<g >
<title>ext4_releasepage (43 samples, 0.44%)</title><rect x="1004.2" y="149" width="5.2" height="15.0" fill="rgb(207,185,32)" rx="2" ry="2" />
<text  x="1007.21" y="159.5" ></text>
</g>
<g >
<title>generic_update_time (1 samples, 0.01%)</title><rect x="52.9" y="325" width="0.1" height="15.0" fill="rgb(228,14,42)" rx="2" ry="2" />
<text  x="55.88" y="335.5" ></text>
</g>
<g >
<title>__set_page_dirty (3 samples, 0.03%)</title><rect x="59.6" y="277" width="0.4" height="15.0" fill="rgb(214,215,39)" rx="2" ry="2" />
<text  x="62.59" y="287.5" ></text>
</g>
<g >
<title>apparmor_file_permission (8 samples, 0.08%)</title><rect x="586.3" y="373" width="0.9" height="15.0" fill="rgb(224,178,46)" rx="2" ry="2" />
<text  x="589.28" y="383.5" ></text>
</g>
<g >
<title>ktime_get (2 samples, 0.02%)</title><rect x="1148.6" y="485" width="0.2" height="15.0" fill="rgb(252,37,54)" rx="2" ry="2" />
<text  x="1151.55" y="495.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="696.2" y="261" width="0.3" height="15.0" fill="rgb(238,136,6)" rx="2" ry="2" />
<text  x="699.25" y="271.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (4 samples, 0.04%)</title><rect x="60.9" y="245" width="0.5" height="15.0" fill="rgb(243,83,38)" rx="2" ry="2" />
<text  x="63.91" y="255.5" ></text>
</g>
<g >
<title>__pagevec_release (24 samples, 0.24%)</title><rect x="997.5" y="213" width="2.9" height="15.0" fill="rgb(210,164,37)" rx="2" ry="2" />
<text  x="1000.51" y="223.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="818.3" y="389" width="0.2" height="15.0" fill="rgb(228,24,47)" rx="2" ry="2" />
<text  x="821.31" y="399.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.01%)</title><rect x="11.8" y="501" width="0.1" height="15.0" fill="rgb(241,100,3)" rx="2" ry="2" />
<text  x="14.80" y="511.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.03%)</title><rect x="1077.6" y="421" width="0.4" height="15.0" fill="rgb(239,228,26)" rx="2" ry="2" />
<text  x="1080.64" y="431.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (2 samples, 0.02%)</title><rect x="1037.8" y="437" width="0.2" height="15.0" fill="rgb(236,36,5)" rx="2" ry="2" />
<text  x="1040.75" y="447.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_init (1 samples, 0.01%)</title><rect x="68.3" y="533" width="0.2" height="15.0" fill="rgb(239,188,44)" rx="2" ry="2" />
<text  x="71.34" y="543.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (1 samples, 0.01%)</title><rect x="1077.5" y="533" width="0.1" height="15.0" fill="rgb(250,129,26)" rx="2" ry="2" />
<text  x="1080.52" y="543.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.01%)</title><rect x="715.2" y="325" width="0.1" height="15.0" fill="rgb(245,17,19)" rx="2" ry="2" />
<text  x="718.17" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.04%)</title><rect x="1024.2" y="501" width="0.5" height="15.0" fill="rgb(219,66,16)" rx="2" ry="2" />
<text  x="1027.22" y="511.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (7 samples, 0.07%)</title><rect x="1074.5" y="437" width="0.9" height="15.0" fill="rgb(246,182,22)" rx="2" ry="2" />
<text  x="1077.53" y="447.5" ></text>
</g>
<g >
<title>apparmor_file_permission (10 samples, 0.10%)</title><rect x="589.8" y="437" width="1.2" height="15.0" fill="rgb(251,110,7)" rx="2" ry="2" />
<text  x="592.76" y="447.5" ></text>
</g>
<g >
<title>find_get_pages_contig (62 samples, 0.63%)</title><rect x="577.3" y="325" width="7.4" height="15.0" fill="rgb(223,13,17)" rx="2" ry="2" />
<text  x="580.30" y="335.5" ></text>
</g>
<g >
<title>from_kgid (1 samples, 0.01%)</title><rect x="60.8" y="245" width="0.1" height="15.0" fill="rgb(217,16,25)" rx="2" ry="2" />
<text  x="63.79" y="255.5" ></text>
</g>
<g >
<title>filename_lookup (1 samples, 0.01%)</title><rect x="18.5" y="469" width="0.1" height="15.0" fill="rgb(251,73,43)" rx="2" ry="2" />
<text  x="21.50" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="1037.8" y="549" width="0.2" height="15.0" fill="rgb(235,228,6)" rx="2" ry="2" />
<text  x="1040.75" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::seek (3 samples, 0.03%)</title><rect x="68.0" y="549" width="0.3" height="15.0" fill="rgb(215,173,33)" rx="2" ry="2" />
<text  x="70.98" y="559.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.01%)</title><rect x="11.9" y="517" width="0.1" height="15.0" fill="rgb(248,1,49)" rx="2" ry="2" />
<text  x="14.92" y="527.5" ></text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.01%)</title><rect x="52.5" y="453" width="0.1" height="15.0" fill="rgb(245,104,45)" rx="2" ry="2" />
<text  x="55.52" y="463.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="39.3" y="325" width="0.2" height="15.0" fill="rgb(246,130,15)" rx="2" ry="2" />
<text  x="42.35" y="335.5" ></text>
</g>
<g >
<title>vfs_iter_write (4 samples, 0.04%)</title><rect x="62.3" y="453" width="0.5" height="15.0" fill="rgb(216,116,17)" rx="2" ry="2" />
<text  x="65.35" y="463.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u8 (3 samples, 0.03%)</title><rect x="1077.6" y="469" width="0.4" height="15.0" fill="rgb(236,19,14)" rx="2" ry="2" />
<text  x="1080.64" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::filesystem::FilesystemMetadata&gt;&gt; (3 samples, 0.03%)</title><rect x="1070.9" y="549" width="0.4" height="15.0" fill="rgb(220,51,22)" rx="2" ry="2" />
<text  x="1073.93" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (3 samples, 0.03%)</title><rect x="1072.1" y="517" width="0.4" height="15.0" fill="rgb(228,146,22)" rx="2" ry="2" />
<text  x="1075.13" y="527.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (1 samples, 0.01%)</title><rect x="19.0" y="517" width="0.1" height="15.0" fill="rgb(253,32,18)" rx="2" ry="2" />
<text  x="21.98" y="527.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (9 samples, 0.09%)</title><rect x="742.6" y="277" width="1.1" height="15.0" fill="rgb(250,185,16)" rx="2" ry="2" />
<text  x="745.60" y="287.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (300 samples, 3.05%)</title><rect x="750.3" y="245" width="35.9" height="15.0" fill="rgb(218,20,53)" rx="2" ry="2" />
<text  x="753.27" y="255.5" >ext..</text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (6 samples, 0.06%)</title><rect x="55.2" y="293" width="0.7" height="15.0" fill="rgb(226,152,15)" rx="2" ry="2" />
<text  x="58.16" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.09%)</title><rect x="18.0" y="565" width="1.1" height="15.0" fill="rgb(236,184,21)" rx="2" ry="2" />
<text  x="21.03" y="575.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (93 samples, 0.94%)</title><rect x="791.5" y="245" width="11.1" height="15.0" fill="rgb(224,5,22)" rx="2" ry="2" />
<text  x="794.48" y="255.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (1 samples, 0.01%)</title><rect x="11.9" y="437" width="0.1" height="15.0" fill="rgb(245,65,30)" rx="2" ry="2" />
<text  x="14.92" y="447.5" ></text>
</g>
<g >
<title>generic_file_read_iter (173 samples, 1.76%)</title><rect x="564.1" y="373" width="20.7" height="15.0" fill="rgb(226,10,49)" rx="2" ry="2" />
<text  x="567.12" y="383.5" ></text>
</g>
<g >
<title>file_update_time (1 samples, 0.01%)</title><rect x="52.9" y="341" width="0.1" height="15.0" fill="rgb(244,210,44)" rx="2" ry="2" />
<text  x="55.88" y="351.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (2 samples, 0.02%)</title><rect x="60.5" y="245" width="0.3" height="15.0" fill="rgb(214,115,20)" rx="2" ry="2" />
<text  x="63.55" y="255.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (1 samples, 0.01%)</title><rect x="1004.2" y="133" width="0.1" height="15.0" fill="rgb(252,166,2)" rx="2" ry="2" />
<text  x="1007.21" y="143.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (178 samples, 1.81%)</title><rect x="563.5" y="389" width="21.3" height="15.0" fill="rgb(231,148,8)" rx="2" ry="2" />
<text  x="566.53" y="399.5" >e..</text>
</g>
<g >
<title>new_sync_write (4 samples, 0.04%)</title><rect x="62.3" y="485" width="0.5" height="15.0" fill="rgb(234,25,30)" rx="2" ry="2" />
<text  x="65.35" y="495.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="35.9" y="309" width="0.1" height="15.0" fill="rgb(225,140,35)" rx="2" ry="2" />
<text  x="38.87" y="319.5" ></text>
</g>
<g >
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="62.5" y="325" width="0.2" height="15.0" fill="rgb(228,37,17)" rx="2" ry="2" />
<text  x="65.47" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.07%)</title><rect x="1021.9" y="533" width="0.9" height="15.0" fill="rgb(230,191,12)" rx="2" ry="2" />
<text  x="1024.94" y="543.5" ></text>
</g>
<g >
<title>llist_reverse_order (4 samples, 0.04%)</title><rect x="1141.7" y="485" width="0.5" height="15.0" fill="rgb(212,226,41)" rx="2" ry="2" />
<text  x="1144.73" y="495.5" ></text>
</g>
<g >
<title>pick_next_task_fair (7 samples, 0.07%)</title><rect x="40.4" y="405" width="0.9" height="15.0" fill="rgb(214,67,20)" rx="2" ry="2" />
<text  x="43.43" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.03%)</title><rect x="1066.0" y="485" width="0.4" height="15.0" fill="rgb(222,140,9)" rx="2" ry="2" />
<text  x="1069.02" y="495.5" ></text>
</g>
<g >
<title>bprm_execve (1 samples, 0.01%)</title><rect x="41.9" y="485" width="0.1" height="15.0" fill="rgb(210,171,48)" rx="2" ry="2" />
<text  x="44.86" y="495.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1,483 samples, 15.05%)</title><rect x="638.8" y="373" width="177.6" height="15.0" fill="rgb(216,126,34)" rx="2" ry="2" />
<text  x="641.75" y="383.5" >ext4_buffered_write_iter</text>
</g>
<g >
<title>NaClXMutexUnlock (191 samples, 1.94%)</title><rect x="282.9" y="565" width="22.8" height="15.0" fill="rgb(220,171,33)" rx="2" ry="2" />
<text  x="285.87" y="575.5" >N..</text>
</g>
<g >
<title>Rel32Operand (1 samples, 0.01%)</title><rect x="309.6" y="549" width="0.1" height="15.0" fill="rgb(221,195,29)" rx="2" ry="2" />
<text  x="312.58" y="559.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.01%)</title><rect x="737.8" y="229" width="0.1" height="15.0" fill="rgb(242,73,52)" rx="2" ry="2" />
<text  x="740.81" y="239.5" ></text>
</g>
<g >
<title>mpage_submit_page (7 samples, 0.07%)</title><rect x="1105.7" y="325" width="0.8" height="15.0" fill="rgb(232,40,29)" rx="2" ry="2" />
<text  x="1108.67" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.01%)</title><rect x="53.6" y="325" width="0.1" height="15.0" fill="rgb(220,152,50)" rx="2" ry="2" />
<text  x="56.60" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="19.6" y="373" width="0.1" height="15.0" fill="rgb(225,219,45)" rx="2" ry="2" />
<text  x="22.58" y="383.5" ></text>
</g>
<g >
<title>__unlink (102 samples, 1.04%)</title><rect x="997.4" y="565" width="12.2" height="15.0" fill="rgb(228,117,10)" rx="2" ry="2" />
<text  x="1000.39" y="575.5" ></text>
</g>
<g >
<title>std::lazy::SyncLazy&lt;T,F&gt;::force (1 samples, 0.01%)</title><rect x="68.3" y="549" width="0.2" height="15.0" fill="rgb(225,158,4)" rx="2" ry="2" />
<text  x="71.34" y="559.5" ></text>
</g>
<g >
<title>xas_start (2 samples, 0.02%)</title><rect x="694.7" y="261" width="0.2" height="15.0" fill="rgb(221,182,12)" rx="2" ry="2" />
<text  x="697.69" y="271.5" ></text>
</g>
<g >
<title>____sys_recvmsg (1 samples, 0.01%)</title><rect x="18.7" y="485" width="0.2" height="15.0" fill="rgb(213,74,11)" rx="2" ry="2" />
<text  x="21.74" y="495.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.01%)</title><rect x="1025.9" y="565" width="0.1" height="15.0" fill="rgb(223,92,32)" rx="2" ry="2" />
<text  x="1028.89" y="575.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="1067.3" y="389" width="0.2" height="15.0" fill="rgb(208,154,16)" rx="2" ry="2" />
<text  x="1070.34" y="399.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (12 samples, 0.12%)</title><rect x="60.0" y="309" width="1.4" height="15.0" fill="rgb(207,106,31)" rx="2" ry="2" />
<text  x="62.95" y="319.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (6 samples, 0.06%)</title><rect x="53.0" y="341" width="0.7" height="15.0" fill="rgb(221,121,47)" rx="2" ry="2" />
<text  x="56.00" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (19 samples, 0.19%)</title><rect x="1172.0" y="389" width="2.3" height="15.0" fill="rgb(250,120,6)" rx="2" ry="2" />
<text  x="1175.03" y="399.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="1064.5" y="405" width="0.1" height="15.0" fill="rgb(246,88,8)" rx="2" ry="2" />
<text  x="1067.47" y="415.5" ></text>
</g>
<g >
<title>native_sched_clock (6 samples, 0.06%)</title><rect x="1169.2" y="373" width="0.7" height="15.0" fill="rgb(249,52,38)" rx="2" ry="2" />
<text  x="1172.16" y="383.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="1024.5" y="453" width="0.1" height="15.0" fill="rgb(236,183,22)" rx="2" ry="2" />
<text  x="1027.46" y="463.5" ></text>
</g>
<g >
<title>kthread (10 samples, 0.10%)</title><rect x="1105.4" y="549" width="1.2" height="15.0" fill="rgb(206,13,50)" rx="2" ry="2" />
<text  x="1108.43" y="559.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.01%)</title><rect x="679.6" y="213" width="0.1" height="15.0" fill="rgb(215,93,39)" rx="2" ry="2" />
<text  x="682.60" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (79 samples, 0.80%)</title><rect x="52.8" y="533" width="9.4" height="15.0" fill="rgb(253,140,43)" rx="2" ry="2" />
<text  x="55.76" y="543.5" ></text>
</g>
<g >
<title>wb_writeback (8 samples, 0.08%)</title><rect x="1105.7" y="453" width="0.9" height="15.0" fill="rgb(246,205,42)" rx="2" ry="2" />
<text  x="1108.67" y="463.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (78 samples, 0.79%)</title><rect x="52.9" y="405" width="9.3" height="15.0" fill="rgb(252,129,6)" rx="2" ry="2" />
<text  x="55.88" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="1064.3" y="437" width="0.3" height="15.0" fill="rgb(241,94,0)" rx="2" ry="2" />
<text  x="1067.35" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.01%)</title><rect x="1149.6" y="485" width="0.2" height="15.0" fill="rgb(235,29,16)" rx="2" ry="2" />
<text  x="1152.63" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (3 samples, 0.03%)</title><rect x="1062.8" y="501" width="0.3" height="15.0" fill="rgb(236,42,16)" rx="2" ry="2" />
<text  x="1065.79" y="511.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.01%)</title><rect x="18.9" y="501" width="0.1" height="15.0" fill="rgb(239,210,51)" rx="2" ry="2" />
<text  x="21.86" y="511.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.01%)</title><rect x="41.1" y="325" width="0.2" height="15.0" fill="rgb(205,47,52)" rx="2" ry="2" />
<text  x="44.14" y="335.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3 samples, 0.03%)</title><rect x="737.5" y="213" width="0.3" height="15.0" fill="rgb(230,162,7)" rx="2" ry="2" />
<text  x="740.45" y="223.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="19.3" y="373" width="0.3" height="15.0" fill="rgb(209,100,49)" rx="2" ry="2" />
<text  x="22.34" y="383.5" ></text>
</g>
<g >
<title>process_vm_rw (2 samples, 0.02%)</title><rect x="1037.8" y="485" width="0.2" height="15.0" fill="rgb(218,165,36)" rx="2" ry="2" />
<text  x="1040.75" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="35.9" y="389" width="0.1" height="15.0" fill="rgb(221,122,52)" rx="2" ry="2" />
<text  x="38.87" y="399.5" ></text>
</g>
<g >
<title>__dquot_alloc_space (2 samples, 0.02%)</title><rect x="682.8" y="245" width="0.3" height="15.0" fill="rgb(218,69,11)" rx="2" ry="2" />
<text  x="685.83" y="255.5" ></text>
</g>
<g >
<title>xas_expand (1 samples, 0.01%)</title><rect x="1037.9" y="213" width="0.1" height="15.0" fill="rgb(248,97,2)" rx="2" ry="2" />
<text  x="1040.87" y="223.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.01%)</title><rect x="1037.9" y="293" width="0.1" height="15.0" fill="rgb(229,163,19)" rx="2" ry="2" />
<text  x="1040.87" y="303.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (1 samples, 0.01%)</title><rect x="55.6" y="277" width="0.2" height="15.0" fill="rgb(245,216,22)" rx="2" ry="2" />
<text  x="58.64" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="66.8" y="485" width="0.1" height="15.0" fill="rgb(236,226,22)" rx="2" ry="2" />
<text  x="69.78" y="495.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (7 samples, 0.07%)</title><rect x="1150.0" y="517" width="0.8" height="15.0" fill="rgb(218,29,12)" rx="2" ry="2" />
<text  x="1152.99" y="527.5" ></text>
</g>
<g >
<title>get_page_from_freelist (10 samples, 0.10%)</title><rect x="57.9" y="261" width="1.2" height="15.0" fill="rgb(212,51,37)" rx="2" ry="2" />
<text  x="60.91" y="271.5" ></text>
</g>
<g >
<title>event_function_call (65 samples, 0.66%)</title><rect x="44.1" y="437" width="7.8" height="15.0" fill="rgb(228,154,54)" rx="2" ry="2" />
<text  x="47.14" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (4 samples, 0.04%)</title><rect x="1066.0" y="501" width="0.5" height="15.0" fill="rgb(217,114,29)" rx="2" ry="2" />
<text  x="1069.02" y="511.5" ></text>
</g>
<g >
<title>revert_creds (14 samples, 0.14%)</title><rect x="541.7" y="485" width="1.7" height="15.0" fill="rgb(249,164,54)" rx="2" ry="2" />
<text  x="544.72" y="495.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.01%)</title><rect x="42.2" y="453" width="0.1" height="15.0" fill="rgb(232,89,22)" rx="2" ry="2" />
<text  x="45.22" y="463.5" ></text>
</g>
<g >
<title>iput_final (102 samples, 1.04%)</title><rect x="997.4" y="293" width="12.2" height="15.0" fill="rgb(217,94,27)" rx="2" ry="2" />
<text  x="1000.39" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (2 samples, 0.02%)</title><rect x="18.3" y="533" width="0.2" height="15.0" fill="rgb(251,79,34)" rx="2" ry="2" />
<text  x="21.27" y="543.5" ></text>
</g>
<g >
<title>ext4_fc_track_inode (9 samples, 0.09%)</title><rect x="786.2" y="245" width="1.1" height="15.0" fill="rgb(217,107,49)" rx="2" ry="2" />
<text  x="789.21" y="255.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (1 samples, 0.01%)</title><rect x="52.9" y="261" width="0.1" height="15.0" fill="rgb(241,145,18)" rx="2" ry="2" />
<text  x="55.88" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (3 samples, 0.03%)</title><rect x="33.1" y="453" width="0.4" height="15.0" fill="rgb(243,173,12)" rx="2" ry="2" />
<text  x="36.12" y="463.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.01%)</title><rect x="54.4" y="245" width="0.2" height="15.0" fill="rgb(213,210,39)" rx="2" ry="2" />
<text  x="57.44" y="255.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (3 samples, 0.03%)</title><rect x="59.6" y="309" width="0.4" height="15.0" fill="rgb(220,221,45)" rx="2" ry="2" />
<text  x="62.59" y="319.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (4 samples, 0.04%)</title><rect x="60.9" y="229" width="0.5" height="15.0" fill="rgb(218,228,4)" rx="2" ry="2" />
<text  x="63.91" y="239.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (1 samples, 0.01%)</title><rect x="62.9" y="565" width="0.2" height="15.0" fill="rgb(222,155,3)" rx="2" ry="2" />
<text  x="65.94" y="575.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="1186.3" y="421" width="0.1" height="15.0" fill="rgb(245,157,38)" rx="2" ry="2" />
<text  x="1189.29" y="431.5" ></text>
</g>
<g >
<title>__fget_light (9 samples, 0.09%)</title><rect x="521.5" y="485" width="1.1" height="15.0" fill="rgb(235,226,15)" rx="2" ry="2" />
<text  x="524.48" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="1006.0" y="53" width="0.1" height="15.0" fill="rgb(231,32,5)" rx="2" ry="2" />
<text  x="1009.01" y="63.5" ></text>
</g>
<g >
<title>xas_clear_mark (2 samples, 0.02%)</title><rect x="1000.7" y="181" width="0.3" height="15.0" fill="rgb(218,97,43)" rx="2" ry="2" />
<text  x="1003.74" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="11.7" y="549" width="0.3" height="15.0" fill="rgb(237,57,17)" rx="2" ry="2" />
<text  x="14.68" y="559.5" ></text>
</g>
<g >
<title>llist_add_batch (17 samples, 0.17%)</title><rect x="1183.3" y="325" width="2.0" height="15.0" fill="rgb(239,75,27)" rx="2" ry="2" />
<text  x="1186.29" y="335.5" ></text>
</g>
<g >
<title>Process0Operands (3 samples, 0.03%)</title><rect x="305.7" y="565" width="0.4" height="15.0" fill="rgb(214,87,23)" rx="2" ry="2" />
<text  x="308.75" y="575.5" ></text>
</g>
<g >
<title>ext4_inode_csum (7 samples, 0.07%)</title><rect x="760.1" y="229" width="0.8" height="15.0" fill="rgb(240,158,53)" rx="2" ry="2" />
<text  x="763.09" y="239.5" ></text>
</g>
<g >
<title>find_next_and_bit (1 samples, 0.01%)</title><rect x="1182.5" y="341" width="0.1" height="15.0" fill="rgb(245,146,29)" rx="2" ry="2" />
<text  x="1185.45" y="351.5" ></text>
</g>
<g >
<title>ovl_write_iter (4 samples, 0.04%)</title><rect x="62.3" y="469" width="0.5" height="15.0" fill="rgb(221,121,11)" rx="2" ry="2" />
<text  x="65.35" y="479.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (4 samples, 0.04%)</title><rect x="59.1" y="309" width="0.5" height="15.0" fill="rgb(251,144,38)" rx="2" ry="2" />
<text  x="62.11" y="319.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.02%)</title><rect x="1008.4" y="69" width="0.2" height="15.0" fill="rgb(253,129,22)" rx="2" ry="2" />
<text  x="1011.41" y="79.5" ></text>
</g>
<g >
<title>__submit_bio_noacct_mq (1 samples, 0.01%)</title><rect x="1106.2" y="261" width="0.1" height="15.0" fill="rgb(213,177,17)" rx="2" ry="2" />
<text  x="1109.15" y="271.5" ></text>
</g>
<g >
<title>___sys_recvmsg (2 samples, 0.02%)</title><rect x="1105.1" y="501" width="0.2" height="15.0" fill="rgb(212,37,40)" rx="2" ry="2" />
<text  x="1108.07" y="511.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (12 samples, 0.12%)</title><rect x="60.0" y="293" width="1.4" height="15.0" fill="rgb(224,14,38)" rx="2" ry="2" />
<text  x="62.95" y="303.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (1 samples, 0.01%)</title><rect x="716.5" y="325" width="0.1" height="15.0" fill="rgb(250,209,4)" rx="2" ry="2" />
<text  x="719.49" y="335.5" ></text>
</g>
<g >
<title>file_path (1 samples, 0.01%)</title><rect x="18.4" y="421" width="0.1" height="15.0" fill="rgb(222,130,34)" rx="2" ry="2" />
<text  x="21.38" y="431.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.04%)</title><rect x="1059.8" y="517" width="0.5" height="15.0" fill="rgb(227,106,51)" rx="2" ry="2" />
<text  x="1062.79" y="527.5" ></text>
</g>
<g >
<title>iput_final (102 samples, 1.04%)</title><rect x="997.4" y="453" width="12.2" height="15.0" fill="rgb(209,27,53)" rx="2" ry="2" />
<text  x="1000.39" y="463.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (5 samples, 0.05%)</title><rect x="1173.6" y="341" width="0.6" height="15.0" fill="rgb(247,172,52)" rx="2" ry="2" />
<text  x="1176.59" y="351.5" ></text>
</g>
<g >
<title>alloc_buffer_head (1 samples, 0.01%)</title><rect x="18.6" y="373" width="0.1" height="15.0" fill="rgb(211,70,21)" rx="2" ry="2" />
<text  x="21.62" y="383.5" ></text>
</g>
<g >
<title>page_counter_uncharge (1 samples, 0.01%)</title><rect x="1000.3" y="149" width="0.1" height="15.0" fill="rgb(229,103,9)" rx="2" ry="2" />
<text  x="1003.26" y="159.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.0 (10 samples, 0.10%)</title><rect x="789.6" y="213" width="1.2" height="15.0" fill="rgb(218,69,47)" rx="2" ry="2" />
<text  x="792.56" y="223.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (12 samples, 0.12%)</title><rect x="60.0" y="277" width="1.4" height="15.0" fill="rgb(210,61,7)" rx="2" ry="2" />
<text  x="62.95" y="287.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.01%)</title><rect x="742.1" y="245" width="0.1" height="15.0" fill="rgb(225,43,5)" rx="2" ry="2" />
<text  x="745.12" y="255.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (24 samples, 0.24%)</title><rect x="1182.6" y="341" width="2.8" height="15.0" fill="rgb(222,22,41)" rx="2" ry="2" />
<text  x="1185.57" y="351.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.01%)</title><rect x="694.2" y="245" width="0.1" height="15.0" fill="rgb(229,20,31)" rx="2" ry="2" />
<text  x="697.21" y="255.5" ></text>
</g>
<g >
<title>perf_evlist__filter_pollfd (1 samples, 0.01%)</title><rect x="62.8" y="565" width="0.1" height="15.0" fill="rgb(242,55,15)" rx="2" ry="2" />
<text  x="65.83" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="596.0" y="469" width="0.1" height="15.0" fill="rgb(218,198,28)" rx="2" ry="2" />
<text  x="598.99" y="479.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="66.8" y="453" width="0.1" height="15.0" fill="rgb(226,106,30)" rx="2" ry="2" />
<text  x="69.78" y="463.5" ></text>
</g>
<g >
<title>__fdget_pos (17 samples, 0.17%)</title><rect x="551.5" y="485" width="2.1" height="15.0" fill="rgb(208,199,39)" rx="2" ry="2" />
<text  x="554.55" y="495.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="1137.5" y="437" width="0.2" height="15.0" fill="rgb(218,95,35)" rx="2" ry="2" />
<text  x="1140.53" y="447.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (2 samples, 0.02%)</title><rect x="54.7" y="245" width="0.2" height="15.0" fill="rgb(228,54,52)" rx="2" ry="2" />
<text  x="57.68" y="255.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.01%)</title><rect x="1148.1" y="453" width="0.1" height="15.0" fill="rgb(249,175,48)" rx="2" ry="2" />
<text  x="1151.08" y="463.5" ></text>
</g>
<g >
<title>current_time (1 samples, 0.01%)</title><rect x="559.8" y="405" width="0.1" height="15.0" fill="rgb(240,14,9)" rx="2" ry="2" />
<text  x="562.81" y="415.5" ></text>
</g>
<g >
<title>__f_unlock_pos (1 samples, 0.01%)</title><rect x="609.2" y="485" width="0.1" height="15.0" fill="rgb(226,218,53)" rx="2" ry="2" />
<text  x="612.16" y="495.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (1 samples, 0.01%)</title><rect x="559.7" y="389" width="0.1" height="15.0" fill="rgb(250,61,6)" rx="2" ry="2" />
<text  x="562.69" y="399.5" ></text>
</g>
<g >
<title>CompareAndSwap (22 samples, 0.22%)</title><rect x="69.5" y="565" width="2.7" height="15.0" fill="rgb(250,58,34)" rx="2" ry="2" />
<text  x="72.53" y="575.5" ></text>
</g>
<g >
<title>dec_zone_page_state (2 samples, 0.02%)</title><rect x="1005.8" y="69" width="0.2" height="15.0" fill="rgb(236,128,7)" rx="2" ry="2" />
<text  x="1008.77" y="79.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.02%)</title><rect x="1001.6" y="165" width="0.2" height="15.0" fill="rgb(211,139,52)" rx="2" ry="2" />
<text  x="1004.58" y="175.5" ></text>
</g>
<g >
<title>file_remove_privs (1 samples, 0.01%)</title><rect x="644.6" y="341" width="0.1" height="15.0" fill="rgb(253,129,2)" rx="2" ry="2" />
<text  x="647.62" y="351.5" ></text>
</g>
<g >
<title>new_sync_read (269 samples, 2.73%)</title><rect x="556.0" y="469" width="32.2" height="15.0" fill="rgb(226,42,17)" rx="2" ry="2" />
<text  x="558.98" y="479.5" >ne..</text>
</g>
<g >
<title>ext4_get_inode_loc (1 samples, 0.01%)</title><rect x="745.6" y="261" width="0.1" height="15.0" fill="rgb(226,163,33)" rx="2" ry="2" />
<text  x="748.60" y="271.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1,122 samples, 11.39%)</title><rect x="331.6" y="565" width="134.4" height="15.0" fill="rgb(228,19,4)" rx="2" ry="2" />
<text  x="334.62" y="575.5" >__GI___pthread_m..</text>
</g>
<g >
<title>__ext4_journal_get_write_access (19 samples, 0.19%)</title><rect x="788.5" y="245" width="2.3" height="15.0" fill="rgb(229,123,0)" rx="2" ry="2" />
<text  x="791.48" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (89 samples, 0.90%)</title><rect x="698.4" y="277" width="10.7" height="15.0" fill="rgb(250,124,33)" rx="2" ry="2" />
<text  x="701.40" y="287.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u64 (1 samples, 0.01%)</title><rect x="1059.7" y="501" width="0.1" height="15.0" fill="rgb(240,188,33)" rx="2" ry="2" />
<text  x="1062.67" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (3 samples, 0.03%)</title><rect x="1062.4" y="437" width="0.4" height="15.0" fill="rgb(205,163,54)" rx="2" ry="2" />
<text  x="1065.43" y="447.5" ></text>
</g>
<g >
<title>generic_file_buffered_read_get_pages (67 samples, 0.68%)</title><rect x="576.8" y="341" width="8.0" height="15.0" fill="rgb(232,132,43)" rx="2" ry="2" />
<text  x="579.82" y="351.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (2 samples, 0.02%)</title><rect x="659.8" y="309" width="0.3" height="15.0" fill="rgb(210,51,10)" rx="2" ry="2" />
<text  x="662.83" y="319.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.01%)</title><rect x="52.9" y="309" width="0.1" height="15.0" fill="rgb(248,101,35)" rx="2" ry="2" />
<text  x="55.88" y="319.5" ></text>
</g>
<g >
<title>add_transaction_credits (10 samples, 0.10%)</title><rect x="672.8" y="277" width="1.2" height="15.0" fill="rgb(244,132,4)" rx="2" ry="2" />
<text  x="675.77" y="287.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.01%)</title><rect x="62.7" y="325" width="0.1" height="15.0" fill="rgb(237,207,2)" rx="2" ry="2" />
<text  x="65.71" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="39.2" y="357" width="0.1" height="15.0" fill="rgb(229,113,47)" rx="2" ry="2" />
<text  x="42.23" y="367.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (1 samples, 0.01%)</title><rect x="1024.7" y="501" width="0.1" height="15.0" fill="rgb(226,94,49)" rx="2" ry="2" />
<text  x="1027.70" y="511.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.01%)</title><rect x="803.1" y="277" width="0.1" height="15.0" fill="rgb(251,14,3)" rx="2" ry="2" />
<text  x="806.10" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="66.8" y="501" width="0.1" height="15.0" fill="rgb(240,77,33)" rx="2" ry="2" />
<text  x="69.78" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (78 samples, 0.79%)</title><rect x="43.1" y="517" width="9.3" height="15.0" fill="rgb(221,105,23)" rx="2" ry="2" />
<text  x="46.06" y="527.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.02%)</title><rect x="802.9" y="277" width="0.2" height="15.0" fill="rgb(207,83,48)" rx="2" ry="2" />
<text  x="805.86" y="287.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.01%)</title><rect x="465.9" y="325" width="0.1" height="15.0" fill="rgb(237,91,24)" rx="2" ry="2" />
<text  x="468.90" y="335.5" ></text>
</g>
<g >
<title>__fget_light (64 samples, 0.65%)</title><rect x="511.7" y="469" width="7.6" height="15.0" fill="rgb(239,1,15)" rx="2" ry="2" />
<text  x="514.66" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_poll (8 samples, 0.08%)</title><rect x="42.0" y="517" width="0.9" height="15.0" fill="rgb(246,40,21)" rx="2" ry="2" />
<text  x="44.98" y="527.5" ></text>
</g>
<g >
<title>cpu_startup_entry (4 samples, 0.04%)</title><rect x="12.0" y="533" width="0.5" height="15.0" fill="rgb(246,72,23)" rx="2" ry="2" />
<text  x="15.04" y="543.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (173 samples, 1.76%)</title><rect x="1107.9" y="453" width="20.8" height="15.0" fill="rgb(231,148,27)" rx="2" ry="2" />
<text  x="1110.95" y="463.5" ></text>
</g>
<g >
<title>do_exit (2 samples, 0.02%)</title><rect x="1027.6" y="437" width="0.2" height="15.0" fill="rgb(209,137,53)" rx="2" ry="2" />
<text  x="1030.57" y="447.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (2 samples, 0.02%)</title><rect x="62.5" y="357" width="0.2" height="15.0" fill="rgb(230,148,28)" rx="2" ry="2" />
<text  x="65.47" y="367.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (1 samples, 0.01%)</title><rect x="680.6" y="229" width="0.1" height="15.0" fill="rgb(227,25,35)" rx="2" ry="2" />
<text  x="683.56" y="239.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.01%)</title><rect x="1149.0" y="485" width="0.2" height="15.0" fill="rgb(244,12,44)" rx="2" ry="2" />
<text  x="1152.03" y="495.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (1 samples, 0.01%)</title><rect x="41.9" y="469" width="0.1" height="15.0" fill="rgb(237,122,37)" rx="2" ry="2" />
<text  x="44.86" y="479.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.01%)</title><rect x="1105.0" y="517" width="0.1" height="15.0" fill="rgb(243,106,42)" rx="2" ry="2" />
<text  x="1107.95" y="527.5" ></text>
</g>
<g >
<title>apparmor_file_permission (4 samples, 0.04%)</title><rect x="585.7" y="389" width="0.5" height="15.0" fill="rgb(227,127,46)" rx="2" ry="2" />
<text  x="588.69" y="399.5" ></text>
</g>
<g >
<title>node_dirty_ok (2 samples, 0.02%)</title><rect x="58.5" y="245" width="0.3" height="15.0" fill="rgb(245,227,16)" rx="2" ry="2" />
<text  x="61.51" y="255.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.01%)</title><rect x="596.0" y="421" width="0.1" height="15.0" fill="rgb(212,189,17)" rx="2" ry="2" />
<text  x="598.99" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.08%)</title><rect x="18.1" y="549" width="1.0" height="15.0" fill="rgb(211,149,17)" rx="2" ry="2" />
<text  x="21.15" y="559.5" ></text>
</g>
<g >
<title>try_to_release_page (43 samples, 0.44%)</title><rect x="1004.2" y="165" width="5.2" height="15.0" fill="rgb(248,194,2)" rx="2" ry="2" />
<text  x="1007.21" y="175.5" ></text>
</g>
<g >
<title>__libc_read (370 samples, 3.76%)</title><rect x="547.4" y="565" width="44.3" height="15.0" fill="rgb(244,5,4)" rx="2" ry="2" />
<text  x="550.35" y="575.5" >__li..</text>
</g>
<g >
<title>menu_select (1 samples, 0.01%)</title><rect x="1174.5" y="421" width="0.2" height="15.0" fill="rgb(244,128,47)" rx="2" ry="2" />
<text  x="1177.55" y="431.5" ></text>
</g>
<g >
<title>core::cmp::max (1 samples, 0.01%)</title><rect x="1019.7" y="533" width="0.1" height="15.0" fill="rgb(228,155,28)" rx="2" ry="2" />
<text  x="1022.67" y="543.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.01%)</title><rect x="1180.8" y="325" width="0.1" height="15.0" fill="rgb(219,176,52)" rx="2" ry="2" />
<text  x="1183.78" y="335.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.03%)</title><rect x="697.8" y="245" width="0.4" height="15.0" fill="rgb(232,155,14)" rx="2" ry="2" />
<text  x="700.80" y="255.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="32.4" y="453" width="0.1" height="15.0" fill="rgb(229,173,12)" rx="2" ry="2" />
<text  x="35.40" y="463.5" ></text>
</g>
<g >
<title>pm_qos_read_value (1 samples, 0.01%)</title><rect x="1171.9" y="389" width="0.1" height="15.0" fill="rgb(211,82,1)" rx="2" ry="2" />
<text  x="1174.91" y="399.5" ></text>
</g>
<g >
<title>CheckValidityOfRegularInstruction (1 samples, 0.01%)</title><rect x="306.0" y="549" width="0.1" height="15.0" fill="rgb(224,96,25)" rx="2" ry="2" />
<text  x="308.99" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="331.5" y="549" width="0.1" height="15.0" fill="rgb(246,221,0)" rx="2" ry="2" />
<text  x="334.50" y="559.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="699.0" y="261" width="0.1" height="15.0" fill="rgb(253,26,32)" rx="2" ry="2" />
<text  x="702.00" y="271.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.01%)</title><rect x="1140.3" y="405" width="0.1" height="15.0" fill="rgb(214,117,1)" rx="2" ry="2" />
<text  x="1143.29" y="415.5" ></text>
</g>
<g >
<title>kmem_cache_free (38 samples, 0.39%)</title><rect x="717.9" y="293" width="4.6" height="15.0" fill="rgb(208,196,52)" rx="2" ry="2" />
<text  x="720.93" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.05%)</title><rect x="1104.8" y="549" width="0.6" height="15.0" fill="rgb(221,197,21)" rx="2" ry="2" />
<text  x="1107.83" y="559.5" ></text>
</g>
<g >
<title>xas_store (2 samples, 0.02%)</title><rect x="56.7" y="261" width="0.3" height="15.0" fill="rgb(229,49,7)" rx="2" ry="2" />
<text  x="59.72" y="271.5" ></text>
</g>
<g >
<title>rmqueue (25 samples, 0.25%)</title><rect x="705.8" y="245" width="3.0" height="15.0" fill="rgb(220,147,10)" rx="2" ry="2" />
<text  x="708.83" y="255.5" ></text>
</g>
<g >
<title>rw_verify_area (20 samples, 0.20%)</title><rect x="588.6" y="469" width="2.4" height="15.0" fill="rgb(232,49,26)" rx="2" ry="2" />
<text  x="591.56" y="479.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.02%)</title><rect x="827.5" y="517" width="0.3" height="15.0" fill="rgb(225,140,1)" rx="2" ry="2" />
<text  x="830.53" y="527.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.01%)</title><rect x="42.7" y="357" width="0.1" height="15.0" fill="rgb(252,187,33)" rx="2" ry="2" />
<text  x="45.70" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_write (1,852 samples, 18.80%)</title><rect x="605.7" y="517" width="221.8" height="15.0" fill="rgb(223,80,3)" rx="2" ry="2" />
<text  x="608.69" y="527.5" >__x64_sys_write</text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.01%)</title><rect x="52.5" y="517" width="0.1" height="15.0" fill="rgb(249,30,29)" rx="2" ry="2" />
<text  x="55.52" y="527.5" ></text>
</g>
<g >
<title>unix_write_space (1 samples, 0.01%)</title><rect x="11.9" y="357" width="0.1" height="15.0" fill="rgb(248,113,1)" rx="2" ry="2" />
<text  x="14.92" y="367.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (6 samples, 0.06%)</title><rect x="1077.3" y="565" width="0.7" height="15.0" fill="rgb(221,193,8)" rx="2" ry="2" />
<text  x="1080.28" y="575.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (95 samples, 0.96%)</title><rect x="478.7" y="565" width="11.4" height="15.0" fill="rgb(214,130,48)" rx="2" ry="2" />
<text  x="481.72" y="575.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (1 samples, 0.01%)</title><rect x="684.7" y="293" width="0.2" height="15.0" fill="rgb(225,1,47)" rx="2" ry="2" />
<text  x="687.75" y="303.5" ></text>
</g>
<g >
<title>create_empty_buffers (1 samples, 0.01%)</title><rect x="18.6" y="405" width="0.1" height="15.0" fill="rgb(214,11,30)" rx="2" ry="2" />
<text  x="21.62" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (6 samples, 0.06%)</title><rect x="1188.0" y="437" width="0.7" height="15.0" fill="rgb(218,32,14)" rx="2" ry="2" />
<text  x="1190.96" y="447.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (1 samples, 0.01%)</title><rect x="1027.6" y="389" width="0.1" height="15.0" fill="rgb(218,151,2)" rx="2" ry="2" />
<text  x="1030.57" y="399.5" ></text>
</g>
<g >
<title>perf (176 samples, 1.79%)</title><rect x="42.0" y="581" width="21.1" height="15.0" fill="rgb(241,170,14)" rx="2" ry="2" />
<text  x="44.98" y="591.5" ></text>
</g>
<g >
<title>ext4_lookup.part.0 (1 samples, 0.01%)</title><rect x="11.8" y="421" width="0.1" height="15.0" fill="rgb(253,23,27)" rx="2" ry="2" />
<text  x="14.80" y="431.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (5 samples, 0.05%)</title><rect x="680.0" y="229" width="0.6" height="15.0" fill="rgb(248,213,52)" rx="2" ry="2" />
<text  x="682.96" y="239.5" ></text>
</g>
<g >
<title>jbd2__journal_start (3 samples, 0.03%)</title><rect x="742.2" y="261" width="0.4" height="15.0" fill="rgb(250,225,49)" rx="2" ry="2" />
<text  x="745.24" y="271.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.01%)</title><rect x="310.2" y="549" width="0.1" height="15.0" fill="rgb(216,139,20)" rx="2" ry="2" />
<text  x="313.18" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.01%)</title><rect x="35.4" y="485" width="0.1" height="15.0" fill="rgb(220,179,4)" rx="2" ry="2" />
<text  x="38.39" y="495.5" ></text>
</g>
<g >
<title>ktime_get (3 samples, 0.03%)</title><rect x="1188.0" y="421" width="0.3" height="15.0" fill="rgb(225,182,25)" rx="2" ry="2" />
<text  x="1190.96" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (11 samples, 0.11%)</title><rect x="1022.8" y="549" width="1.3" height="15.0" fill="rgb(240,172,25)" rx="2" ry="2" />
<text  x="1025.78" y="559.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u64 (3 samples, 0.03%)</title><rect x="1076.9" y="565" width="0.4" height="15.0" fill="rgb(219,41,1)" rx="2" ry="2" />
<text  x="1079.92" y="575.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.01%)</title><rect x="331.5" y="469" width="0.1" height="15.0" fill="rgb(238,199,33)" rx="2" ry="2" />
<text  x="334.50" y="479.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (13 samples, 0.13%)</title><rect x="758.5" y="213" width="1.6" height="15.0" fill="rgb(222,19,18)" rx="2" ry="2" />
<text  x="761.54" y="223.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.01%)</title><rect x="1026.5" y="341" width="0.1" height="15.0" fill="rgb(215,158,3)" rx="2" ry="2" />
<text  x="1029.49" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (11 samples, 0.11%)</title><rect x="1022.8" y="501" width="1.3" height="15.0" fill="rgb(211,158,36)" rx="2" ry="2" />
<text  x="1025.78" y="511.5" ></text>
</g>
<g >
<title>NaClMutexLock (233 samples, 2.37%)</title><rect x="125.6" y="565" width="27.9" height="15.0" fill="rgb(232,111,11)" rx="2" ry="2" />
<text  x="128.59" y="575.5" >N..</text>
</g>
<g >
<title>ovl_inode_upper (1 samples, 0.01%)</title><rect x="559.9" y="437" width="0.2" height="15.0" fill="rgb(218,132,12)" rx="2" ry="2" />
<text  x="562.93" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="1139.8" y="389" width="0.2" height="15.0" fill="rgb(245,43,28)" rx="2" ry="2" />
<text  x="1142.81" y="399.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="1069.1" y="485" width="0.2" height="15.0" fill="rgb(230,38,49)" rx="2" ry="2" />
<text  x="1072.14" y="495.5" ></text>
</g>
<g >
<title>vm_unmapped_area (1 samples, 0.01%)</title><rect x="18.3" y="421" width="0.1" height="15.0" fill="rgb(248,170,23)" rx="2" ry="2" />
<text  x="21.27" y="431.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.01%)</title><rect x="1105.3" y="485" width="0.1" height="15.0" fill="rgb(248,75,36)" rx="2" ry="2" />
<text  x="1108.31" y="495.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (494 samples, 5.01%)</title><rect x="743.7" y="277" width="59.2" height="15.0" fill="rgb(238,148,0)" rx="2" ry="2" />
<text  x="746.68" y="287.5" >__ext4..</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="1054.5" y="437" width="0.1" height="15.0" fill="rgb(236,161,37)" rx="2" ry="2" />
<text  x="1057.52" y="447.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.01%)</title><rect x="35.9" y="325" width="0.1" height="15.0" fill="rgb(219,202,45)" rx="2" ry="2" />
<text  x="38.87" y="335.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="800.8" y="197" width="0.1" height="15.0" fill="rgb(215,149,28)" rx="2" ry="2" />
<text  x="803.82" y="207.5" ></text>
</g>
<g >
<title>sched_clock_cpu (4 samples, 0.04%)</title><rect x="1167.8" y="373" width="0.5" height="15.0" fill="rgb(238,149,50)" rx="2" ry="2" />
<text  x="1170.84" y="383.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.01%)</title><rect x="62.7" y="277" width="0.1" height="15.0" fill="rgb(229,206,22)" rx="2" ry="2" />
<text  x="65.71" y="287.5" ></text>
</g>
<g >
<title>file_remove_privs (10 samples, 0.10%)</title><rect x="629.0" y="437" width="1.2" height="15.0" fill="rgb(232,195,23)" rx="2" ry="2" />
<text  x="632.05" y="447.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="66.8" y="389" width="0.1" height="15.0" fill="rgb(225,21,29)" rx="2" ry="2" />
<text  x="69.78" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="471.8" y="485" width="0.1" height="15.0" fill="rgb(213,204,47)" rx="2" ry="2" />
<text  x="474.77" y="495.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.01%)</title><rect x="708.8" y="245" width="0.1" height="15.0" fill="rgb(213,70,14)" rx="2" ry="2" />
<text  x="711.82" y="255.5" ></text>
</g>
<g >
<title>__es_remove_extent (1 samples, 0.01%)</title><rect x="683.9" y="245" width="0.1" height="15.0" fill="rgb(246,16,35)" rx="2" ry="2" />
<text  x="686.91" y="255.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (6 samples, 0.06%)</title><rect x="1071.4" y="517" width="0.7" height="15.0" fill="rgb(251,106,24)" rx="2" ry="2" />
<text  x="1074.41" y="527.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (102 samples, 1.04%)</title><rect x="997.4" y="245" width="12.2" height="15.0" fill="rgb(220,83,46)" rx="2" ry="2" />
<text  x="1000.39" y="255.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (7 samples, 0.07%)</title><rect x="810.0" y="325" width="0.9" height="15.0" fill="rgb(233,43,50)" rx="2" ry="2" />
<text  x="813.04" y="335.5" ></text>
</g>
<g >
<title>aa_file_perm (1 samples, 0.01%)</title><rect x="818.7" y="373" width="0.1" height="15.0" fill="rgb(238,6,11)" rx="2" ry="2" />
<text  x="821.67" y="383.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.01%)</title><rect x="62.7" y="261" width="0.1" height="15.0" fill="rgb(237,38,8)" rx="2" ry="2" />
<text  x="65.71" y="271.5" ></text>
</g>
<g >
<title>finish_fault (2 samples, 0.02%)</title><rect x="833.9" y="421" width="0.2" height="15.0" fill="rgb(227,72,17)" rx="2" ry="2" />
<text  x="836.88" y="431.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="1058.8" y="485" width="0.2" height="15.0" fill="rgb(233,41,41)" rx="2" ry="2" />
<text  x="1061.84" y="495.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (4 samples, 0.04%)</title><rect x="1069.0" y="549" width="0.5" height="15.0" fill="rgb(254,31,8)" rx="2" ry="2" />
<text  x="1072.02" y="559.5" ></text>
</g>
<g >
<title>__ext4_find_entry (1 samples, 0.01%)</title><rect x="11.8" y="405" width="0.1" height="15.0" fill="rgb(241,81,17)" rx="2" ry="2" />
<text  x="14.80" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (22 samples, 0.22%)</title><rect x="1031.5" y="501" width="2.7" height="15.0" fill="rgb(217,8,32)" rx="2" ry="2" />
<text  x="1034.52" y="511.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="35.9" y="357" width="0.1" height="15.0" fill="rgb(228,186,15)" rx="2" ry="2" />
<text  x="38.87" y="367.5" ></text>
</g>
<g >
<title>cpuidle_enter (251 samples, 2.55%)</title><rect x="1107.6" y="485" width="30.1" height="15.0" fill="rgb(208,166,16)" rx="2" ry="2" />
<text  x="1110.59" y="495.5" >cp..</text>
</g>
<g >
<title>generic_file_llseek_size (2 samples, 0.02%)</title><rect x="541.2" y="437" width="0.3" height="15.0" fill="rgb(213,155,36)" rx="2" ry="2" />
<text  x="544.25" y="447.5" ></text>
</g>
<g >
<title>ovl_file_accessed.part.0 (1 samples, 0.01%)</title><rect x="556.8" y="453" width="0.1" height="15.0" fill="rgb(225,207,20)" rx="2" ry="2" />
<text  x="559.82" y="463.5" ></text>
</g>
<g >
<title>xas_start (14 samples, 0.14%)</title><rect x="583.1" y="309" width="1.6" height="15.0" fill="rgb(213,117,4)" rx="2" ry="2" />
<text  x="586.05" y="319.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="1034.5" y="533" width="0.1" height="15.0" fill="rgb(224,74,54)" rx="2" ry="2" />
<text  x="1037.52" y="543.5" ></text>
</g>
<g >
<title>from_kgid (3 samples, 0.03%)</title><rect x="784.6" y="229" width="0.4" height="15.0" fill="rgb(237,227,9)" rx="2" ry="2" />
<text  x="787.65" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="19.6" y="389" width="0.1" height="15.0" fill="rgb(254,120,21)" rx="2" ry="2" />
<text  x="22.58" y="399.5" ></text>
</g>
<g >
<title>process_vm_writev (2 samples, 0.02%)</title><rect x="1037.8" y="565" width="0.2" height="15.0" fill="rgb(247,117,14)" rx="2" ry="2" />
<text  x="1040.75" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="1061.8" y="517" width="0.4" height="15.0" fill="rgb(233,138,46)" rx="2" ry="2" />
<text  x="1064.83" y="527.5" ></text>
</g>
<g >
<title>crypto_shash_update (84 samples, 0.85%)</title><rect x="774.6" y="197" width="10.0" height="15.0" fill="rgb(232,82,8)" rx="2" ry="2" />
<text  x="777.59" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.02%)</title><rect x="1076.2" y="373" width="0.2" height="15.0" fill="rgb(247,108,47)" rx="2" ry="2" />
<text  x="1079.20" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="522.6" y="469" width="0.1" height="15.0" fill="rgb(222,208,34)" rx="2" ry="2" />
<text  x="525.56" y="479.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (4 samples, 0.04%)</title><rect x="59.1" y="325" width="0.5" height="15.0" fill="rgb(228,50,22)" rx="2" ry="2" />
<text  x="62.11" y="335.5" ></text>
</g>
<g >
<title>llist_reverse_order (3 samples, 0.03%)</title><rect x="39.8" y="421" width="0.4" height="15.0" fill="rgb(207,145,39)" rx="2" ry="2" />
<text  x="42.83" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (9 samples, 0.09%)</title><rect x="1022.8" y="469" width="1.1" height="15.0" fill="rgb(244,125,45)" rx="2" ry="2" />
<text  x="1025.78" y="479.5" ></text>
</g>
<g >
<title>generic_perform_write (1,390 samples, 14.11%)</title><rect x="646.9" y="357" width="166.5" height="15.0" fill="rgb(254,38,3)" rx="2" ry="2" />
<text  x="649.90" y="367.5" >generic_perform_write</text>
</g>
<g >
<title>__wrgsbase_inactive (1 samples, 0.01%)</title><rect x="17.9" y="565" width="0.1" height="15.0" fill="rgb(224,80,6)" rx="2" ry="2" />
<text  x="20.91" y="575.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.01%)</title><rect x="1185.4" y="389" width="0.2" height="15.0" fill="rgb(211,188,32)" rx="2" ry="2" />
<text  x="1188.45" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.02%)</title><rect x="1037.8" y="373" width="0.2" height="15.0" fill="rgb(220,201,38)" rx="2" ry="2" />
<text  x="1040.75" y="383.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.01%)</title><rect x="714.9" y="293" width="0.2" height="15.0" fill="rgb(249,180,0)" rx="2" ry="2" />
<text  x="717.93" y="303.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (8 samples, 0.08%)</title><rect x="1105.7" y="421" width="0.9" height="15.0" fill="rgb(209,145,44)" rx="2" ry="2" />
<text  x="1108.67" y="431.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 0.02%)</title><rect x="1026.6" y="213" width="0.3" height="15.0" fill="rgb(229,7,28)" rx="2" ry="2" />
<text  x="1029.61" y="223.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.01%)</title><rect x="1105.4" y="453" width="0.2" height="15.0" fill="rgb(244,69,18)" rx="2" ry="2" />
<text  x="1108.43" y="463.5" ></text>
</g>
<g >
<title>rcu_idle_exit (6 samples, 0.06%)</title><rect x="1168.4" y="389" width="0.8" height="15.0" fill="rgb(226,132,50)" rx="2" ry="2" />
<text  x="1171.44" y="399.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.07%)</title><rect x="1018.6" y="533" width="0.8" height="15.0" fill="rgb(216,227,8)" rx="2" ry="2" />
<text  x="1021.59" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (2 samples, 0.02%)</title><rect x="692.3" y="261" width="0.2" height="15.0" fill="rgb(243,3,31)" rx="2" ry="2" />
<text  x="695.29" y="271.5" ></text>
</g>
<g >
<title>perf_swevent_stop (1 samples, 0.01%)</title><rect x="522.6" y="293" width="0.1" height="15.0" fill="rgb(216,26,45)" rx="2" ry="2" />
<text  x="525.56" y="303.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (13 samples, 0.13%)</title><rect x="1067.5" y="533" width="1.5" height="15.0" fill="rgb(231,157,20)" rx="2" ry="2" />
<text  x="1070.46" y="543.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (20 samples, 0.20%)</title><rect x="830.3" y="549" width="2.4" height="15.0" fill="rgb(244,139,20)" rx="2" ry="2" />
<text  x="833.29" y="559.5" ></text>
</g>
<g >
<title>pick_next_task_fair (38 samples, 0.39%)</title><rect x="1143.5" y="469" width="4.6" height="15.0" fill="rgb(222,220,44)" rx="2" ry="2" />
<text  x="1146.52" y="479.5" ></text>
</g>
<g >
<title>down_write (10 samples, 0.10%)</title><rect x="640.4" y="357" width="1.2" height="15.0" fill="rgb(250,19,1)" rx="2" ry="2" />
<text  x="643.43" y="367.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (8 samples, 0.08%)</title><rect x="742.7" y="261" width="1.0" height="15.0" fill="rgb(211,39,26)" rx="2" ry="2" />
<text  x="745.72" y="271.5" ></text>
</g>
<g >
<title>cgroup_release (1 samples, 0.01%)</title><rect x="1027.7" y="389" width="0.1" height="15.0" fill="rgb(226,178,40)" rx="2" ry="2" />
<text  x="1030.69" y="399.5" ></text>
</g>
<g >
<title>down_write (3 samples, 0.03%)</title><rect x="638.4" y="373" width="0.4" height="15.0" fill="rgb(210,60,27)" rx="2" ry="2" />
<text  x="641.39" y="383.5" ></text>
</g>
<g >
<title>open_last_lookups (1 samples, 0.01%)</title><rect x="11.8" y="469" width="0.1" height="15.0" fill="rgb(208,204,46)" rx="2" ry="2" />
<text  x="14.80" y="479.5" ></text>
</g>
<g >
<title>alloc_pages_current (91 samples, 0.92%)</title><rect x="698.2" y="293" width="10.9" height="15.0" fill="rgb(231,52,34)" rx="2" ry="2" />
<text  x="701.16" y="303.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.01%)</title><rect x="1168.3" y="389" width="0.1" height="15.0" fill="rgb(245,221,19)" rx="2" ry="2" />
<text  x="1171.32" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,927 samples, 19.56%)</title><rect x="599.3" y="549" width="230.9" height="15.0" fill="rgb(247,126,13)" rx="2" ry="2" />
<text  x="602.34" y="559.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="1069.0" y="469" width="0.1" height="15.0" fill="rgb(220,153,26)" rx="2" ry="2" />
<text  x="1072.02" y="479.5" ></text>
</g>
<g >
<title>mutex_lock (5 samples, 0.05%)</title><rect x="553.0" y="469" width="0.6" height="15.0" fill="rgb(206,22,49)" rx="2" ry="2" />
<text  x="555.98" y="479.5" ></text>
</g>
<g >
<title>__GI___poll (8 samples, 0.08%)</title><rect x="42.0" y="565" width="0.9" height="15.0" fill="rgb(213,83,9)" rx="2" ry="2" />
<text  x="44.98" y="575.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (4 samples, 0.04%)</title><rect x="1066.0" y="517" width="0.5" height="15.0" fill="rgb(253,177,41)" rx="2" ry="2" />
<text  x="1069.02" y="527.5" ></text>
</g>
<g >
<title>eventfd_poll (1 samples, 0.01%)</title><rect x="42.2" y="469" width="0.1" height="15.0" fill="rgb(239,202,23)" rx="2" ry="2" />
<text  x="45.22" y="479.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.01%)</title><rect x="1169.0" y="373" width="0.2" height="15.0" fill="rgb(221,172,9)" rx="2" ry="2" />
<text  x="1172.04" y="383.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (37 samples, 0.38%)</title><rect x="1072.5" y="565" width="4.4" height="15.0" fill="rgb(233,65,44)" rx="2" ry="2" />
<text  x="1075.49" y="575.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (61 samples, 0.62%)</title><rect x="1002.2" y="197" width="7.3" height="15.0" fill="rgb(254,108,30)" rx="2" ry="2" />
<text  x="1005.18" y="207.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (8 samples, 0.08%)</title><rect x="1076.0" y="517" width="0.9" height="15.0" fill="rgb(208,150,3)" rx="2" ry="2" />
<text  x="1078.96" y="527.5" ></text>
</g>
<g >
<title>put_ctx (4 samples, 0.04%)</title><rect x="51.9" y="501" width="0.5" height="15.0" fill="rgb(233,177,2)" rx="2" ry="2" />
<text  x="54.92" y="511.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.01%)</title><rect x="561.7" y="437" width="0.1" height="15.0" fill="rgb(239,55,21)" rx="2" ry="2" />
<text  x="564.73" y="447.5" ></text>
</g>
<g >
<title>do_shared_fault (1 samples, 0.01%)</title><rect x="1037.9" y="325" width="0.1" height="15.0" fill="rgb(245,107,16)" rx="2" ry="2" />
<text  x="1040.87" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="1020.6" y="549" width="0.3" height="15.0" fill="rgb(209,57,23)" rx="2" ry="2" />
<text  x="1023.62" y="559.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (3 samples, 0.03%)</title><rect x="678.6" y="213" width="0.4" height="15.0" fill="rgb(216,197,35)" rx="2" ry="2" />
<text  x="681.64" y="223.5" ></text>
</g>
<g >
<title>start_secondary (369 samples, 3.75%)</title><rect x="1106.6" y="549" width="44.2" height="15.0" fill="rgb(229,176,20)" rx="2" ry="2" />
<text  x="1109.63" y="559.5" >star..</text>
</g>
<g >
<title>ext4_fc_track_template (2 samples, 0.02%)</title><rect x="787.3" y="245" width="0.2" height="15.0" fill="rgb(210,74,12)" rx="2" ry="2" />
<text  x="790.28" y="255.5" ></text>
</g>
<g >
<title>security_file_permission (9 samples, 0.09%)</title><rect x="586.2" y="389" width="1.0" height="15.0" fill="rgb(242,7,34)" rx="2" ry="2" />
<text  x="589.16" y="399.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1066.6" y="533" width="0.1" height="15.0" fill="rgb(253,6,52)" rx="2" ry="2" />
<text  x="1069.62" y="543.5" ></text>
</g>
<g >
<title>apparmor_file_permission (21 samples, 0.21%)</title><rect x="818.8" y="373" width="2.5" height="15.0" fill="rgb(239,205,15)" rx="2" ry="2" />
<text  x="821.79" y="383.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="18.9" y="485" width="0.1" height="15.0" fill="rgb(231,197,3)" rx="2" ry="2" />
<text  x="21.86" y="495.5" ></text>
</g>
<g >
<title>std::thread::panicking (5 samples, 0.05%)</title><rect x="1062.2" y="501" width="0.6" height="15.0" fill="rgb(213,192,23)" rx="2" ry="2" />
<text  x="1065.19" y="511.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (251 samples, 2.55%)</title><rect x="1107.6" y="469" width="30.1" height="15.0" fill="rgb(247,93,54)" rx="2" ry="2" />
<text  x="1110.59" y="479.5" >cp..</text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 0.65%)</title><rect x="44.3" y="309" width="7.6" height="15.0" fill="rgb(231,147,24)" rx="2" ry="2" />
<text  x="47.26" y="319.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (2 samples, 0.02%)</title><rect x="1009.0" y="69" width="0.2" height="15.0" fill="rgb(250,7,27)" rx="2" ry="2" />
<text  x="1012.01" y="79.5" ></text>
</g>
<g >
<title>__find_get_block (30 samples, 0.30%)</title><rect x="797.2" y="197" width="3.6" height="15.0" fill="rgb(226,121,23)" rx="2" ry="2" />
<text  x="800.23" y="207.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.01%)</title><rect x="1180.9" y="341" width="0.1" height="15.0" fill="rgb(227,159,20)" rx="2" ry="2" />
<text  x="1183.90" y="351.5" ></text>
</g>
<g >
<title>apparmor_file_permission (21 samples, 0.21%)</title><rect x="824.9" y="437" width="2.5" height="15.0" fill="rgb(223,228,15)" rx="2" ry="2" />
<text  x="827.90" y="447.5" ></text>
</g>
<g >
<title>&lt;std::lazy::SyncLazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="68.3" y="565" width="0.2" height="15.0" fill="rgb(241,212,43)" rx="2" ry="2" />
<text  x="71.34" y="575.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (3 samples, 0.03%)</title><rect x="117.8" y="565" width="0.4" height="15.0" fill="rgb(229,202,31)" rx="2" ry="2" />
<text  x="120.81" y="575.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="465.9" y="389" width="0.1" height="15.0" fill="rgb(220,117,39)" rx="2" ry="2" />
<text  x="468.90" y="399.5" ></text>
</g>
<g >
<title>workingset_update_node (1 samples, 0.01%)</title><rect x="693.6" y="261" width="0.1" height="15.0" fill="rgb(230,25,45)" rx="2" ry="2" />
<text  x="696.61" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="1066.6" y="485" width="0.1" height="15.0" fill="rgb(230,212,51)" rx="2" ry="2" />
<text  x="1069.62" y="495.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.01%)</title><rect x="1037.9" y="341" width="0.1" height="15.0" fill="rgb(211,162,1)" rx="2" ry="2" />
<text  x="1040.87" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_write (7 samples, 0.07%)</title><rect x="602.1" y="533" width="0.8" height="15.0" fill="rgb(218,85,41)" rx="2" ry="2" />
<text  x="605.10" y="543.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (19 samples, 0.19%)</title><rect x="757.8" y="229" width="2.3" height="15.0" fill="rgb(225,43,23)" rx="2" ry="2" />
<text  x="760.82" y="239.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="1105.7" y="261" width="0.1" height="15.0" fill="rgb(243,113,19)" rx="2" ry="2" />
<text  x="1108.67" y="271.5" ></text>
</g>
<g >
<title>__libc_write (80 samples, 0.81%)</title><rect x="52.6" y="565" width="9.6" height="15.0" fill="rgb(211,76,23)" rx="2" ry="2" />
<text  x="55.64" y="575.5" ></text>
</g>
<g >
<title>ThreadPoolForeg (244 samples, 2.48%)</title><rect x="12.5" y="581" width="29.2" height="15.0" fill="rgb(227,109,41)" rx="2" ry="2" />
<text  x="15.52" y="591.5" >Th..</text>
</g>
<g >
<title>seq_read (1 samples, 0.01%)</title><rect x="52.5" y="469" width="0.1" height="15.0" fill="rgb(219,137,8)" rx="2" ry="2" />
<text  x="55.52" y="479.5" ></text>
</g>
<g >
<title>ovl_inode_realdata (7 samples, 0.07%)</title><rect x="538.6" y="437" width="0.8" height="15.0" fill="rgb(225,186,10)" rx="2" ry="2" />
<text  x="541.61" y="447.5" ></text>
</g>
<g >
<title>touch_atime (8 samples, 0.08%)</title><rect x="559.0" y="421" width="0.9" height="15.0" fill="rgb(205,88,16)" rx="2" ry="2" />
<text  x="561.97" y="431.5" ></text>
</g>
<g >
<title>menu_update (2 samples, 0.02%)</title><rect x="1138.6" y="453" width="0.3" height="15.0" fill="rgb(213,158,25)" rx="2" ry="2" />
<text  x="1141.61" y="463.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (1 samples, 0.01%)</title><rect x="564.0" y="373" width="0.1" height="15.0" fill="rgb(244,124,10)" rx="2" ry="2" />
<text  x="567.00" y="383.5" ></text>
</g>
<g >
<title>rcu_needs_cpu (1 samples, 0.01%)</title><rect x="1140.0" y="421" width="0.2" height="15.0" fill="rgb(220,23,5)" rx="2" ry="2" />
<text  x="1143.05" y="431.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1058.8" y="533" width="0.2" height="15.0" fill="rgb(216,65,53)" rx="2" ry="2" />
<text  x="1061.84" y="543.5" ></text>
</g>
<g >
<title>newidle_balance (9 samples, 0.09%)</title><rect x="34.2" y="453" width="1.1" height="15.0" fill="rgb(236,122,36)" rx="2" ry="2" />
<text  x="37.20" y="463.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="1137.5" y="453" width="0.2" height="15.0" fill="rgb(226,34,24)" rx="2" ry="2" />
<text  x="1140.53" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.01%)</title><rect x="1071.2" y="485" width="0.1" height="15.0" fill="rgb(250,199,54)" rx="2" ry="2" />
<text  x="1074.17" y="495.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.01%)</title><rect x="18.1" y="469" width="0.2" height="15.0" fill="rgb(226,72,3)" rx="2" ry="2" />
<text  x="21.15" y="479.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (7 samples, 0.07%)</title><rect x="1026.6" y="277" width="0.9" height="15.0" fill="rgb(250,100,10)" rx="2" ry="2" />
<text  x="1029.61" y="287.5" ></text>
</g>
<g >
<title>fold_diff (1 samples, 0.01%)</title><rect x="1140.4" y="437" width="0.1" height="15.0" fill="rgb(218,131,37)" rx="2" ry="2" />
<text  x="1143.41" y="447.5" ></text>
</g>
<g >
<title>llist_reverse_order (2 samples, 0.02%)</title><rect x="33.8" y="485" width="0.3" height="15.0" fill="rgb(239,109,30)" rx="2" ry="2" />
<text  x="36.84" y="495.5" ></text>
</g>
<g >
<title>ovl_real_fdget (3 samples, 0.03%)</title><rect x="622.2" y="453" width="0.4" height="15.0" fill="rgb(224,124,1)" rx="2" ry="2" />
<text  x="625.22" y="463.5" ></text>
</g>
<g >
<title>security_file_permission (26 samples, 0.26%)</title><rect x="824.3" y="453" width="3.1" height="15.0" fill="rgb(219,94,38)" rx="2" ry="2" />
<text  x="827.30" y="463.5" ></text>
</g>
<g >
<title>xas_store (4 samples, 0.04%)</title><rect x="1001.1" y="181" width="0.5" height="15.0" fill="rgb(248,68,13)" rx="2" ry="2" />
<text  x="1004.10" y="191.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="1077.2" y="485" width="0.1" height="15.0" fill="rgb(245,32,32)" rx="2" ry="2" />
<text  x="1080.16" y="495.5" ></text>
</g>
<g >
<title>get_unmapped_area (1 samples, 0.01%)</title><rect x="18.3" y="469" width="0.1" height="15.0" fill="rgb(233,228,25)" rx="2" ry="2" />
<text  x="21.27" y="479.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (3 samples, 0.03%)</title><rect x="1059.0" y="533" width="0.3" height="15.0" fill="rgb(247,47,30)" rx="2" ry="2" />
<text  x="1061.96" y="543.5" ></text>
</g>
<g >
<title>__sys_recvmsg (2 samples, 0.02%)</title><rect x="1105.1" y="517" width="0.2" height="15.0" fill="rgb(248,44,32)" rx="2" ry="2" />
<text  x="1108.07" y="527.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (2 samples, 0.02%)</title><rect x="1170.7" y="389" width="0.3" height="15.0" fill="rgb(235,110,39)" rx="2" ry="2" />
<text  x="1173.71" y="399.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.05%)</title><rect x="614.2" y="485" width="0.6" height="15.0" fill="rgb(237,211,31)" rx="2" ry="2" />
<text  x="617.19" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (344 samples, 3.49%)</title><rect x="550.2" y="533" width="41.2" height="15.0" fill="rgb(214,200,54)" rx="2" ry="2" />
<text  x="553.23" y="543.5" >do_..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="39.0" y="373" width="0.1" height="15.0" fill="rgb(253,101,46)" rx="2" ry="2" />
<text  x="41.99" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="596.0" y="533" width="0.1" height="15.0" fill="rgb(218,88,4)" rx="2" ry="2" />
<text  x="598.99" y="543.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (3 samples, 0.03%)</title><rect x="57.1" y="245" width="0.3" height="15.0" fill="rgb(223,5,25)" rx="2" ry="2" />
<text  x="60.08" y="255.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (7 samples, 0.07%)</title><rect x="1056.9" y="469" width="0.9" height="15.0" fill="rgb(216,72,6)" rx="2" ry="2" />
<text  x="1059.92" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="65.7" y="501" width="0.2" height="15.0" fill="rgb(209,43,13)" rx="2" ry="2" />
<text  x="68.70" y="511.5" ></text>
</g>
<g >
<title>leave_mm (1 samples, 0.01%)</title><rect x="1107.8" y="453" width="0.1" height="15.0" fill="rgb(249,29,14)" rx="2" ry="2" />
<text  x="1110.83" y="463.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="1054.5" y="469" width="0.1" height="15.0" fill="rgb(212,152,37)" rx="2" ry="2" />
<text  x="1057.52" y="479.5" ></text>
</g>
<g >
<title>start_kernel (327 samples, 3.32%)</title><rect x="1150.8" y="517" width="39.2" height="15.0" fill="rgb(245,64,8)" rx="2" ry="2" />
<text  x="1153.83" y="527.5" >sta..</text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="567.0" y="341" width="0.1" height="15.0" fill="rgb(205,224,44)" rx="2" ry="2" />
<text  x="570.00" y="351.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (6 samples, 0.06%)</title><rect x="61.4" y="325" width="0.7" height="15.0" fill="rgb(206,122,29)" rx="2" ry="2" />
<text  x="64.39" y="335.5" ></text>
</g>
<g >
<title>xas_nomem (1 samples, 0.01%)</title><rect x="694.6" y="261" width="0.1" height="15.0" fill="rgb(209,119,29)" rx="2" ry="2" />
<text  x="697.57" y="271.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.01%)</title><rect x="42.3" y="469" width="0.2" height="15.0" fill="rgb(252,226,0)" rx="2" ry="2" />
<text  x="45.34" y="479.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="1029.6" y="469" width="0.1" height="15.0" fill="rgb(231,20,1)" rx="2" ry="2" />
<text  x="1032.61" y="479.5" ></text>
</g>
<g >
<title>__xa_set_mark (1 samples, 0.01%)</title><rect x="736.6" y="261" width="0.1" height="15.0" fill="rgb(240,100,19)" rx="2" ry="2" />
<text  x="739.61" y="271.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.01%)</title><rect x="1037.9" y="277" width="0.1" height="15.0" fill="rgb(213,1,30)" rx="2" ry="2" />
<text  x="1040.87" y="287.5" ></text>
</g>
<g >
<title>worker_thread (9 samples, 0.09%)</title><rect x="1105.6" y="533" width="1.0" height="15.0" fill="rgb(244,76,47)" rx="2" ry="2" />
<text  x="1108.55" y="543.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.01%)</title><rect x="801.1" y="197" width="0.1" height="15.0" fill="rgb(206,184,27)" rx="2" ry="2" />
<text  x="804.06" y="207.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.01%)</title><rect x="33.4" y="421" width="0.1" height="15.0" fill="rgb(219,55,9)" rx="2" ry="2" />
<text  x="36.36" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="1054.5" y="453" width="0.1" height="15.0" fill="rgb(209,173,14)" rx="2" ry="2" />
<text  x="1057.52" y="463.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="1054.5" y="485" width="0.1" height="15.0" fill="rgb(219,168,19)" rx="2" ry="2" />
<text  x="1057.52" y="495.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.01%)</title><rect x="1026.5" y="325" width="0.1" height="15.0" fill="rgb(223,65,41)" rx="2" ry="2" />
<text  x="1029.49" y="335.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="1064.0" y="453" width="0.2" height="15.0" fill="rgb(228,202,51)" rx="2" ry="2" />
<text  x="1066.99" y="463.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (6 samples, 0.06%)</title><rect x="1080.8" y="565" width="0.7" height="15.0" fill="rgb(210,216,45)" rx="2" ry="2" />
<text  x="1083.76" y="575.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (25 samples, 0.25%)</title><rect x="677.7" y="261" width="3.0" height="15.0" fill="rgb(230,6,53)" rx="2" ry="2" />
<text  x="680.68" y="271.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u16 (1 samples, 0.01%)</title><rect x="1059.7" y="469" width="0.1" height="15.0" fill="rgb(246,176,26)" rx="2" ry="2" />
<text  x="1062.67" y="479.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (194 samples, 1.97%)</title><rect x="1151.4" y="437" width="23.3" height="15.0" fill="rgb(231,17,39)" rx="2" ry="2" />
<text  x="1154.43" y="447.5" >c..</text>
</g>
<g >
<title>jbd2_journal_get_write_access (1 samples, 0.01%)</title><rect x="62.7" y="245" width="0.1" height="15.0" fill="rgb(221,154,54)" rx="2" ry="2" />
<text  x="65.71" y="255.5" ></text>
</g>
<g >
<title>__msecs_to_jiffies (1 samples, 0.01%)</title><rect x="1143.5" y="453" width="0.1" height="15.0" fill="rgb(230,50,10)" rx="2" ry="2" />
<text  x="1146.52" y="463.5" ></text>
</g>
<g >
<title>__fget_light (21 samples, 0.21%)</title><rect x="610.2" y="469" width="2.6" height="15.0" fill="rgb(212,14,12)" rx="2" ry="2" />
<text  x="613.24" y="479.5" ></text>
</g>
<g >
<title>get_typical_interval (4 samples, 0.04%)</title><rect x="1171.0" y="389" width="0.4" height="15.0" fill="rgb(217,4,15)" rx="2" ry="2" />
<text  x="1173.95" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (102 samples, 1.04%)</title><rect x="997.4" y="517" width="12.2" height="15.0" fill="rgb(248,24,35)" rx="2" ry="2" />
<text  x="1000.39" y="527.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.01%)</title><rect x="19.6" y="261" width="0.1" height="15.0" fill="rgb(234,215,0)" rx="2" ry="2" />
<text  x="22.58" y="271.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (1 samples, 0.01%)</title><rect x="1172.2" y="373" width="0.1" height="15.0" fill="rgb(205,139,14)" rx="2" ry="2" />
<text  x="1175.15" y="383.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.01%)</title><rect x="528.9" y="453" width="0.1" height="15.0" fill="rgb(211,123,14)" rx="2" ry="2" />
<text  x="531.91" y="463.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.01%)</title><rect x="1137.7" y="469" width="0.1" height="15.0" fill="rgb(241,137,33)" rx="2" ry="2" />
<text  x="1140.65" y="479.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (1 samples, 0.01%)</title><rect x="802.6" y="245" width="0.1" height="15.0" fill="rgb(221,126,5)" rx="2" ry="2" />
<text  x="805.62" y="255.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (2 samples, 0.02%)</title><rect x="36.0" y="389" width="0.2" height="15.0" fill="rgb(207,12,1)" rx="2" ry="2" />
<text  x="38.99" y="399.5" ></text>
</g>
<g >
<title>__fdget_pos (41 samples, 0.42%)</title><rect x="609.3" y="485" width="4.9" height="15.0" fill="rgb(222,56,25)" rx="2" ry="2" />
<text  x="612.28" y="495.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (247 samples, 2.51%)</title><rect x="153.5" y="565" width="29.6" height="15.0" fill="rgb(212,205,37)" rx="2" ry="2" />
<text  x="156.50" y="575.5" >Na..</text>
</g>
<g >
<title>__put_user_nocheck_4 (1 samples, 0.01%)</title><rect x="1105.0" y="485" width="0.1" height="15.0" fill="rgb(225,132,23)" rx="2" ry="2" />
<text  x="1107.95" y="495.5" ></text>
</g>
<g >
<title>drain_obj_stock (1 samples, 0.01%)</title><rect x="1009.1" y="37" width="0.1" height="15.0" fill="rgb(241,134,23)" rx="2" ry="2" />
<text  x="1012.12" y="47.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (3 samples, 0.03%)</title><rect x="40.5" y="357" width="0.4" height="15.0" fill="rgb(249,134,18)" rx="2" ry="2" />
<text  x="43.55" y="367.5" ></text>
</g>
<g >
<title>ext4_get_reserved_space (1 samples, 0.01%)</title><rect x="683.3" y="245" width="0.1" height="15.0" fill="rgb(236,29,12)" rx="2" ry="2" />
<text  x="686.31" y="255.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (4 samples, 0.04%)</title><rect x="646.2" y="309" width="0.5" height="15.0" fill="rgb(249,79,34)" rx="2" ry="2" />
<text  x="649.18" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.02%)</title><rect x="833.9" y="517" width="0.2" height="15.0" fill="rgb(215,217,54)" rx="2" ry="2" />
<text  x="836.88" y="527.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (20 samples, 0.20%)</title><rect x="651.1" y="341" width="2.4" height="15.0" fill="rgb(224,177,39)" rx="2" ry="2" />
<text  x="654.09" y="351.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.01%)</title><rect x="19.6" y="357" width="0.1" height="15.0" fill="rgb(254,213,42)" rx="2" ry="2" />
<text  x="22.58" y="367.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (51 samples, 0.52%)</title><rect x="35.6" y="549" width="6.1" height="15.0" fill="rgb(231,186,29)" rx="2" ry="2" />
<text  x="38.63" y="559.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.03%)</title><rect x="1008.6" y="69" width="0.4" height="15.0" fill="rgb(240,185,37)" rx="2" ry="2" />
<text  x="1011.65" y="79.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.01%)</title><rect x="821.2" y="357" width="0.1" height="15.0" fill="rgb(226,97,54)" rx="2" ry="2" />
<text  x="824.18" y="367.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="628.9" y="421" width="0.1" height="15.0" fill="rgb(252,46,11)" rx="2" ry="2" />
<text  x="631.93" y="431.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u8 (1 samples, 0.01%)</title><rect x="1059.7" y="453" width="0.1" height="15.0" fill="rgb(246,137,45)" rx="2" ry="2" />
<text  x="1062.67" y="463.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.01%)</title><rect x="53.6" y="309" width="0.1" height="15.0" fill="rgb(209,211,10)" rx="2" ry="2" />
<text  x="56.60" y="319.5" ></text>
</g>
<g >
<title>exec_binprm (1 samples, 0.01%)</title><rect x="41.9" y="453" width="0.1" height="15.0" fill="rgb(230,209,52)" rx="2" ry="2" />
<text  x="44.86" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="324.8" y="565" width="0.1" height="15.0" fill="rgb(230,97,19)" rx="2" ry="2" />
<text  x="327.79" y="575.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1107.7" y="437" width="0.1" height="15.0" fill="rgb(215,183,52)" rx="2" ry="2" />
<text  x="1110.71" y="447.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_some (1 samples, 0.01%)</title><rect x="1077.5" y="501" width="0.1" height="15.0" fill="rgb(226,82,53)" rx="2" ry="2" />
<text  x="1080.52" y="511.5" ></text>
</g>
<g >
<title>NaClSysRead (30 samples, 0.30%)</title><rect x="185.5" y="565" width="3.6" height="15.0" fill="rgb(254,59,40)" rx="2" ry="2" />
<text  x="188.48" y="575.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.01%)</title><rect x="41.9" y="405" width="0.1" height="15.0" fill="rgb(241,4,6)" rx="2" ry="2" />
<text  x="44.86" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.08%)</title><rect x="42.0" y="549" width="0.9" height="15.0" fill="rgb(250,131,39)" rx="2" ry="2" />
<text  x="44.98" y="559.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="19.3" y="405" width="0.3" height="15.0" fill="rgb(211,68,46)" rx="2" ry="2" />
<text  x="22.34" y="415.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.01%)</title><rect x="62.7" y="293" width="0.1" height="15.0" fill="rgb(246,39,41)" rx="2" ry="2" />
<text  x="65.71" y="303.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.01%)</title><rect x="18.6" y="469" width="0.1" height="15.0" fill="rgb(231,52,38)" rx="2" ry="2" />
<text  x="21.62" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="1029.7" y="469" width="0.1" height="15.0" fill="rgb(217,228,11)" rx="2" ry="2" />
<text  x="1032.73" y="479.5" ></text>
</g>
<g >
<title>start_this_handle (1 samples, 0.01%)</title><rect x="54.1" y="293" width="0.1" height="15.0" fill="rgb(241,8,29)" rx="2" ry="2" />
<text  x="57.08" y="303.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (11 samples, 0.11%)</title><rect x="811.5" y="341" width="1.3" height="15.0" fill="rgb(251,37,35)" rx="2" ry="2" />
<text  x="814.48" y="351.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="42.1" y="453" width="0.1" height="15.0" fill="rgb(240,192,36)" rx="2" ry="2" />
<text  x="45.10" y="463.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (3 samples, 0.03%)</title><rect x="1139.7" y="405" width="0.3" height="15.0" fill="rgb(249,131,30)" rx="2" ry="2" />
<text  x="1142.69" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="1019.8" y="549" width="0.1" height="15.0" fill="rgb(207,44,27)" rx="2" ry="2" />
<text  x="1022.79" y="559.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (1 samples, 0.01%)</title><rect x="1077.5" y="517" width="0.1" height="15.0" fill="rgb(230,44,46)" rx="2" ry="2" />
<text  x="1080.52" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (11 samples, 0.11%)</title><rect x="1138.9" y="453" width="1.3" height="15.0" fill="rgb(239,179,43)" rx="2" ry="2" />
<text  x="1141.85" y="463.5" ></text>
</g>
<g >
<title>path_lookupat (1 samples, 0.01%)</title><rect x="18.5" y="453" width="0.1" height="15.0" fill="rgb(244,92,37)" rx="2" ry="2" />
<text  x="21.50" y="463.5" ></text>
</g>
<g >
<title>BitmapClearBit (1 samples, 0.01%)</title><rect x="69.4" y="549" width="0.1" height="15.0" fill="rgb(238,45,26)" rx="2" ry="2" />
<text  x="72.41" y="559.5" ></text>
</g>
<g >
<title>__fget_files (8 samples, 0.08%)</title><rect x="552.0" y="453" width="1.0" height="15.0" fill="rgb(248,172,6)" rx="2" ry="2" />
<text  x="555.03" y="463.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (2 samples, 0.02%)</title><rect x="18.3" y="501" width="0.2" height="15.0" fill="rgb(246,93,16)" rx="2" ry="2" />
<text  x="21.27" y="511.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.01%)</title><rect x="1140.3" y="453" width="0.1" height="15.0" fill="rgb(205,161,44)" rx="2" ry="2" />
<text  x="1143.29" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="19.6" y="453" width="0.2" height="15.0" fill="rgb(238,136,4)" rx="2" ry="2" />
<text  x="22.58" y="463.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (6 samples, 0.06%)</title><rect x="680.0" y="245" width="0.7" height="15.0" fill="rgb(234,92,42)" rx="2" ry="2" />
<text  x="682.96" y="255.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (50 samples, 0.51%)</title><rect x="690.0" y="277" width="6.0" height="15.0" fill="rgb(228,196,2)" rx="2" ry="2" />
<text  x="693.02" y="287.5" ></text>
</g>
<g >
<title>ext4_fc_start_update (4 samples, 0.04%)</title><rect x="643.2" y="357" width="0.5" height="15.0" fill="rgb(247,6,44)" rx="2" ry="2" />
<text  x="646.18" y="367.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="1172.4" y="357" width="0.2" height="15.0" fill="rgb(251,131,28)" rx="2" ry="2" />
<text  x="1175.39" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (13 samples, 0.13%)</title><rect x="1067.5" y="485" width="1.5" height="15.0" fill="rgb(227,0,35)" rx="2" ry="2" />
<text  x="1070.46" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (33 samples, 0.33%)</title><rect x="327.5" y="565" width="4.0" height="15.0" fill="rgb(246,86,12)" rx="2" ry="2" />
<text  x="330.55" y="575.5" ></text>
</g>
<g >
<title>do_iter_write (78 samples, 0.79%)</title><rect x="52.9" y="421" width="9.3" height="15.0" fill="rgb(239,37,47)" rx="2" ry="2" />
<text  x="55.88" y="431.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (2 samples, 0.02%)</title><rect x="62.5" y="341" width="0.2" height="15.0" fill="rgb(229,94,11)" rx="2" ry="2" />
<text  x="65.47" y="351.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.01%)</title><rect x="18.6" y="421" width="0.1" height="15.0" fill="rgb(237,33,7)" rx="2" ry="2" />
<text  x="21.62" y="431.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.01%)</title><rect x="62.7" y="341" width="0.1" height="15.0" fill="rgb(253,105,22)" rx="2" ry="2" />
<text  x="65.71" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.06%)</title><rect x="1071.4" y="501" width="0.7" height="15.0" fill="rgb(230,51,0)" rx="2" ry="2" />
<text  x="1074.41" y="511.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.03%)</title><rect x="997.9" y="181" width="0.3" height="15.0" fill="rgb(245,84,16)" rx="2" ry="2" />
<text  x="1000.87" y="191.5" ></text>
</g>
<g >
<title>ext4_has_free_clusters (1 samples, 0.01%)</title><rect x="683.4" y="245" width="0.1" height="15.0" fill="rgb(219,185,0)" rx="2" ry="2" />
<text  x="686.43" y="255.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (4 samples, 0.04%)</title><rect x="39.8" y="437" width="0.5" height="15.0" fill="rgb(230,10,49)" rx="2" ry="2" />
<text  x="42.83" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 0.65%)</title><rect x="44.3" y="325" width="7.6" height="15.0" fill="rgb(233,206,20)" rx="2" ry="2" />
<text  x="47.26" y="335.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.01%)</title><rect x="565.3" y="357" width="0.1" height="15.0" fill="rgb(228,71,29)" rx="2" ry="2" />
<text  x="568.32" y="367.5" ></text>
</g>
<g >
<title>xas_alloc (1 samples, 0.01%)</title><rect x="695.9" y="229" width="0.1" height="15.0" fill="rgb(241,109,5)" rx="2" ry="2" />
<text  x="698.89" y="239.5" ></text>
</g>
<g >
<title>__schedule (68 samples, 0.69%)</title><rect x="1178.1" y="421" width="8.2" height="15.0" fill="rgb(233,30,0)" rx="2" ry="2" />
<text  x="1181.14" y="431.5" ></text>
</g>
<g >
<title>page_cache_delete_batch (10 samples, 0.10%)</title><rect x="1000.4" y="197" width="1.2" height="15.0" fill="rgb(235,73,46)" rx="2" ry="2" />
<text  x="1003.38" y="207.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (6 samples, 0.06%)</title><rect x="241.3" y="565" width="0.7" height="15.0" fill="rgb(230,7,39)" rx="2" ry="2" />
<text  x="244.30" y="575.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.02%)</title><rect x="666.7" y="261" width="0.2" height="15.0" fill="rgb(208,159,29)" rx="2" ry="2" />
<text  x="669.66" y="271.5" ></text>
</g>
<g >
<title>ovl_real_fdget (1 samples, 0.01%)</title><rect x="541.6" y="485" width="0.1" height="15.0" fill="rgb(218,96,42)" rx="2" ry="2" />
<text  x="544.60" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.02%)</title><rect x="1037.8" y="389" width="0.2" height="15.0" fill="rgb(228,169,5)" rx="2" ry="2" />
<text  x="1040.75" y="399.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.03%)</title><rect x="727.3" y="245" width="0.3" height="15.0" fill="rgb(229,193,29)" rx="2" ry="2" />
<text  x="730.27" y="255.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (24 samples, 0.24%)</title><rect x="64.4" y="549" width="2.9" height="15.0" fill="rgb(247,224,52)" rx="2" ry="2" />
<text  x="67.38" y="559.5" ></text>
</g>
<g >
<title>__free_one_page (9 samples, 0.09%)</title><rect x="999.1" y="133" width="1.0" height="15.0" fill="rgb(222,120,9)" rx="2" ry="2" />
<text  x="1002.06" y="143.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (8 samples, 0.08%)</title><rect x="545.2" y="517" width="1.0" height="15.0" fill="rgb(240,111,0)" rx="2" ry="2" />
<text  x="548.20" y="527.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.01%)</title><rect x="1069.1" y="501" width="0.2" height="15.0" fill="rgb(224,14,43)" rx="2" ry="2" />
<text  x="1072.14" y="511.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (2 samples, 0.02%)</title><rect x="54.0" y="325" width="0.2" height="15.0" fill="rgb(241,219,7)" rx="2" ry="2" />
<text  x="56.96" y="335.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.01%)</title><rect x="1105.2" y="453" width="0.1" height="15.0" fill="rgb(237,193,23)" rx="2" ry="2" />
<text  x="1108.19" y="463.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="1067.0" y="453" width="0.1" height="15.0" fill="rgb(239,95,34)" rx="2" ry="2" />
<text  x="1069.98" y="463.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="1037.8" y="277" width="0.1" height="15.0" fill="rgb(239,125,23)" rx="2" ry="2" />
<text  x="1040.75" y="287.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.01%)</title><rect x="693.4" y="245" width="0.1" height="15.0" fill="rgb(224,209,41)" rx="2" ry="2" />
<text  x="696.37" y="255.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="19.3" y="453" width="0.3" height="15.0" fill="rgb(226,62,32)" rx="2" ry="2" />
<text  x="22.34" y="463.5" ></text>
</g>
<g >
<title>ovl_real_fdget (7 samples, 0.07%)</title><rect x="560.8" y="437" width="0.8" height="15.0" fill="rgb(231,129,24)" rx="2" ry="2" />
<text  x="563.77" y="447.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="522.6" y="341" width="0.1" height="15.0" fill="rgb(239,24,23)" rx="2" ry="2" />
<text  x="525.56" y="351.5" ></text>
</g>
<g >
<title>prepend_path (1 samples, 0.01%)</title><rect x="18.4" y="389" width="0.1" height="15.0" fill="rgb(236,175,45)" rx="2" ry="2" />
<text  x="21.38" y="399.5" ></text>
</g>
<g >
<title>RegFromModRM (1 samples, 0.01%)</title><rect x="309.5" y="549" width="0.1" height="15.0" fill="rgb(253,65,49)" rx="2" ry="2" />
<text  x="312.46" y="559.5" ></text>
</g>
<g >
<title>rw_verify_area (31 samples, 0.31%)</title><rect x="823.7" y="469" width="3.7" height="15.0" fill="rgb(217,30,41)" rx="2" ry="2" />
<text  x="826.70" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="728.7" y="261" width="0.1" height="15.0" fill="rgb(232,210,29)" rx="2" ry="2" />
<text  x="731.71" y="271.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.01%)</title><rect x="1026.5" y="469" width="0.1" height="15.0" fill="rgb(231,145,48)" rx="2" ry="2" />
<text  x="1029.49" y="479.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.01%)</title><rect x="588.7" y="453" width="0.1" height="15.0" fill="rgb(254,228,51)" rx="2" ry="2" />
<text  x="591.68" y="463.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="65.5" y="501" width="0.2" height="15.0" fill="rgb(223,0,23)" rx="2" ry="2" />
<text  x="68.46" y="511.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="1029.7" y="405" width="0.1" height="15.0" fill="rgb(229,83,2)" rx="2" ry="2" />
<text  x="1032.73" y="415.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (8 samples, 0.08%)</title><rect x="1105.7" y="341" width="0.9" height="15.0" fill="rgb(237,206,37)" rx="2" ry="2" />
<text  x="1108.67" y="351.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.01%)</title><rect x="465.9" y="469" width="0.1" height="15.0" fill="rgb(226,180,8)" rx="2" ry="2" />
<text  x="468.90" y="479.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (89 samples, 0.90%)</title><rect x="19.8" y="453" width="10.7" height="15.0" fill="rgb(248,99,49)" rx="2" ry="2" />
<text  x="22.82" y="463.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (17 samples, 0.17%)</title><rect x="653.7" y="341" width="2.1" height="15.0" fill="rgb(242,8,44)" rx="2" ry="2" />
<text  x="656.72" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (3 samples, 0.03%)</title><rect x="68.7" y="469" width="0.4" height="15.0" fill="rgb(238,115,10)" rx="2" ry="2" />
<text  x="71.69" y="479.5" ></text>
</g>
<g >
<title>submit_bio_noacct (1 samples, 0.01%)</title><rect x="1106.2" y="277" width="0.1" height="15.0" fill="rgb(219,106,54)" rx="2" ry="2" />
<text  x="1109.15" y="287.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.01%)</title><rect x="11.7" y="501" width="0.1" height="15.0" fill="rgb(225,173,15)" rx="2" ry="2" />
<text  x="14.68" y="511.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (2 samples, 0.02%)</title><rect x="54.7" y="229" width="0.2" height="15.0" fill="rgb(218,144,20)" rx="2" ry="2" />
<text  x="57.68" y="239.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.01%)</title><rect x="43.1" y="501" width="0.1" height="15.0" fill="rgb(211,174,22)" rx="2" ry="2" />
<text  x="46.06" y="511.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.01%)</title><rect x="1170.8" y="373" width="0.2" height="15.0" fill="rgb(207,143,22)" rx="2" ry="2" />
<text  x="1173.83" y="383.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (2 samples, 0.02%)</title><rect x="1027.6" y="501" width="0.2" height="15.0" fill="rgb(205,102,38)" rx="2" ry="2" />
<text  x="1030.57" y="511.5" ></text>
</g>
<g >
<title>wait_for_stable_page (3 samples, 0.03%)</title><rect x="813.0" y="341" width="0.4" height="15.0" fill="rgb(206,144,13)" rx="2" ry="2" />
<text  x="816.04" y="351.5" ></text>
</g>
<g >
<title>ovl_write_iter (5 samples, 0.05%)</title><rect x="823.1" y="469" width="0.6" height="15.0" fill="rgb(234,158,46)" rx="2" ry="2" />
<text  x="826.10" y="479.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (8 samples, 0.08%)</title><rect x="118.2" y="565" width="0.9" height="15.0" fill="rgb(226,42,5)" rx="2" ry="2" />
<text  x="121.17" y="575.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.01%)</title><rect x="1001.9" y="165" width="0.2" height="15.0" fill="rgb(233,101,14)" rx="2" ry="2" />
<text  x="1004.94" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.01%)</title><rect x="1027.7" y="373" width="0.1" height="15.0" fill="rgb(228,219,22)" rx="2" ry="2" />
<text  x="1030.69" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="1059.7" y="325" width="0.1" height="15.0" fill="rgb(241,124,15)" rx="2" ry="2" />
<text  x="1062.67" y="335.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.0 (1 samples, 0.01%)</title><rect x="62.7" y="229" width="0.1" height="15.0" fill="rgb(249,72,7)" rx="2" ry="2" />
<text  x="65.71" y="239.5" ></text>
</g>
<g >
<title>security_file_permission (17 samples, 0.17%)</title><rect x="588.9" y="453" width="2.1" height="15.0" fill="rgb(238,129,26)" rx="2" ry="2" />
<text  x="591.92" y="463.5" ></text>
</g>
<g >
<title>lookup_open.isra.0 (1 samples, 0.01%)</title><rect x="11.8" y="453" width="0.1" height="15.0" fill="rgb(232,172,47)" rx="2" ry="2" />
<text  x="14.80" y="463.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (2 samples, 0.02%)</title><rect x="591.2" y="517" width="0.2" height="15.0" fill="rgb(214,211,32)" rx="2" ry="2" />
<text  x="594.20" y="527.5" ></text>
</g>
<g >
<title>____sys_recvmsg (2 samples, 0.02%)</title><rect x="1105.1" y="485" width="0.2" height="15.0" fill="rgb(212,181,46)" rx="2" ry="2" />
<text  x="1108.07" y="495.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.01%)</title><rect x="19.6" y="277" width="0.1" height="15.0" fill="rgb(238,129,53)" rx="2" ry="2" />
<text  x="22.58" y="287.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.02%)</title><rect x="1186.4" y="421" width="0.2" height="15.0" fill="rgb(210,197,33)" rx="2" ry="2" />
<text  x="1189.41" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (10 samples, 0.10%)</title><rect x="1173.0" y="373" width="1.2" height="15.0" fill="rgb(222,28,23)" rx="2" ry="2" />
<text  x="1175.99" y="383.5" ></text>
</g>
<g >
<title>get_signal (2 samples, 0.02%)</title><rect x="1027.6" y="469" width="0.2" height="15.0" fill="rgb(221,197,44)" rx="2" ry="2" />
<text  x="1030.57" y="479.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (2 samples, 0.02%)</title><rect x="1027.6" y="485" width="0.2" height="15.0" fill="rgb(224,203,11)" rx="2" ry="2" />
<text  x="1030.57" y="495.5" ></text>
</g>
<g >
<title>ovl_write_iter (1,661 samples, 16.86%)</title><rect x="622.6" y="453" width="198.9" height="15.0" fill="rgb(230,34,36)" rx="2" ry="2" />
<text  x="625.58" y="463.5" >ovl_write_iter</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="19.6" y="421" width="0.2" height="15.0" fill="rgb(254,203,17)" rx="2" ry="2" />
<text  x="22.58" y="431.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (29 samples, 0.29%)</title><rect x="306.2" y="565" width="3.5" height="15.0" fill="rgb(237,59,40)" rx="2" ry="2" />
<text  x="309.23" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_newlstat (1 samples, 0.01%)</title><rect x="18.5" y="533" width="0.1" height="15.0" fill="rgb(220,18,34)" rx="2" ry="2" />
<text  x="21.50" y="543.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="66.9" y="517" width="0.2" height="15.0" fill="rgb(212,85,15)" rx="2" ry="2" />
<text  x="69.90" y="527.5" ></text>
</g>
<g >
<title>__fsnotify_parent (15 samples, 0.15%)</title><rect x="618.4" y="469" width="1.8" height="15.0" fill="rgb(243,196,19)" rx="2" ry="2" />
<text  x="621.39" y="479.5" ></text>
</g>
<g >
<title>ext4_bio_write_page (3 samples, 0.03%)</title><rect x="1105.9" y="309" width="0.4" height="15.0" fill="rgb(239,83,38)" rx="2" ry="2" />
<text  x="1108.91" y="319.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.01%)</title><rect x="52.9" y="293" width="0.1" height="15.0" fill="rgb(206,146,46)" rx="2" ry="2" />
<text  x="55.88" y="303.5" ></text>
</g>
<g >
<title>ovl_d_real (10 samples, 0.10%)</title><rect x="534.3" y="453" width="1.2" height="15.0" fill="rgb(242,84,37)" rx="2" ry="2" />
<text  x="537.30" y="463.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.01%)</title><rect x="1026.5" y="373" width="0.1" height="15.0" fill="rgb(230,22,4)" rx="2" ry="2" />
<text  x="1029.49" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (2 samples, 0.02%)</title><rect x="696.0" y="277" width="0.2" height="15.0" fill="rgb(239,48,1)" rx="2" ry="2" />
<text  x="699.01" y="287.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (6 samples, 0.06%)</title><rect x="61.4" y="341" width="0.7" height="15.0" fill="rgb(213,18,7)" rx="2" ry="2" />
<text  x="64.39" y="351.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="596.0" y="517" width="0.1" height="15.0" fill="rgb(245,174,18)" rx="2" ry="2" />
<text  x="598.99" y="527.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.01%)</title><rect x="1139.0" y="405" width="0.1" height="15.0" fill="rgb(254,91,38)" rx="2" ry="2" />
<text  x="1141.97" y="415.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.10%)</title><rect x="1056.9" y="533" width="1.2" height="15.0" fill="rgb(225,156,16)" rx="2" ry="2" />
<text  x="1059.92" y="543.5" ></text>
</g>
<g >
<title>clear_page_dirty_for_io (2 samples, 0.02%)</title><rect x="1105.7" y="309" width="0.2" height="15.0" fill="rgb(205,4,19)" rx="2" ry="2" />
<text  x="1108.67" y="319.5" ></text>
</g>
<g >
<title>[unknown]  (66 samples, 0.67%)</title><rect x="316.9" y="565" width="7.9" height="15.0" fill="rgb(207,29,11)" rx="2" ry="2" />
<text  x="319.89" y="575.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.01%)</title><rect x="41.3" y="405" width="0.1" height="15.0" fill="rgb(233,225,20)" rx="2" ry="2" />
<text  x="44.26" y="415.5" ></text>
</g>
<g >
<title>override_creds (8 samples, 0.08%)</title><rect x="631.9" y="421" width="1.0" height="15.0" fill="rgb(221,64,5)" rx="2" ry="2" />
<text  x="634.92" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 0.81%)</title><rect x="42.9" y="549" width="9.6" height="15.0" fill="rgb(252,144,1)" rx="2" ry="2" />
<text  x="45.94" y="559.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="1059.7" y="437" width="0.1" height="15.0" fill="rgb(245,208,31)" rx="2" ry="2" />
<text  x="1062.67" y="447.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.01%)</title><rect x="1105.2" y="469" width="0.1" height="15.0" fill="rgb(229,0,4)" rx="2" ry="2" />
<text  x="1108.19" y="479.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.01%)</title><rect x="596.0" y="437" width="0.1" height="15.0" fill="rgb(213,123,5)" rx="2" ry="2" />
<text  x="598.99" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="1034.4" y="501" width="0.1" height="15.0" fill="rgb(254,184,22)" rx="2" ry="2" />
<text  x="1037.40" y="511.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.01%)</title><rect x="19.6" y="245" width="0.1" height="15.0" fill="rgb(208,88,28)" rx="2" ry="2" />
<text  x="22.58" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="1062.0" y="485" width="0.2" height="15.0" fill="rgb(233,168,46)" rx="2" ry="2" />
<text  x="1064.95" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (10 samples, 0.10%)</title><rect x="1186.8" y="437" width="1.2" height="15.0" fill="rgb(219,34,28)" rx="2" ry="2" />
<text  x="1189.77" y="447.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (238 samples, 2.42%)</title><rect x="686.5" y="325" width="28.6" height="15.0" fill="rgb(249,64,13)" rx="2" ry="2" />
<text  x="689.54" y="335.5" >gr..</text>
</g>
<g >
<title>generic_exec_single (5 samples, 0.05%)</title><rect x="1146.5" y="389" width="0.6" height="15.0" fill="rgb(245,133,37)" rx="2" ry="2" />
<text  x="1149.52" y="399.5" ></text>
</g>
<g >
<title>vfs_iter_read (216 samples, 2.19%)</title><rect x="561.8" y="437" width="25.9" height="15.0" fill="rgb(212,215,54)" rx="2" ry="2" />
<text  x="564.85" y="447.5" >v..</text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (13 samples, 0.13%)</title><rect x="1027.8" y="565" width="1.6" height="15.0" fill="rgb(221,84,26)" rx="2" ry="2" />
<text  x="1030.81" y="575.5" ></text>
</g>
<g >
<title>refill_obj_stock (2 samples, 0.02%)</title><rect x="1009.0" y="53" width="0.2" height="15.0" fill="rgb(241,7,38)" rx="2" ry="2" />
<text  x="1012.01" y="63.5" ></text>
</g>
<g >
<title>copyout (2 samples, 0.02%)</title><rect x="576.5" y="309" width="0.2" height="15.0" fill="rgb(208,119,49)" rx="2" ry="2" />
<text  x="579.46" y="319.5" ></text>
</g>
<g >
<title>cpuidle_select (8 samples, 0.08%)</title><rect x="32.5" y="485" width="1.0" height="15.0" fill="rgb(222,163,29)" rx="2" ry="2" />
<text  x="35.52" y="495.5" ></text>
</g>
<g >
<title>copyin (5 samples, 0.05%)</title><rect x="810.9" y="325" width="0.6" height="15.0" fill="rgb(245,128,48)" rx="2" ry="2" />
<text  x="813.88" y="335.5" ></text>
</g>
<g >
<title>kick_ilb (19 samples, 0.19%)</title><rect x="1145.7" y="421" width="2.3" height="15.0" fill="rgb(217,35,18)" rx="2" ry="2" />
<text  x="1148.68" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="66.8" y="469" width="0.1" height="15.0" fill="rgb(231,112,43)" rx="2" ry="2" />
<text  x="69.78" y="479.5" ></text>
</g>
<g >
<title>jbd2__journal_start (1 samples, 0.01%)</title><rect x="715.1" y="325" width="0.1" height="15.0" fill="rgb(212,97,45)" rx="2" ry="2" />
<text  x="718.05" y="335.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (16 samples, 0.16%)</title><rect x="866.5" y="565" width="1.9" height="15.0" fill="rgb(241,44,35)" rx="2" ry="2" />
<text  x="869.46" y="575.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="1054.5" y="533" width="0.1" height="15.0" fill="rgb(206,36,12)" rx="2" ry="2" />
<text  x="1057.52" y="543.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.01%)</title><rect x="596.0" y="485" width="0.1" height="15.0" fill="rgb(235,148,30)" rx="2" ry="2" />
<text  x="598.99" y="495.5" ></text>
</g>
<g >
<title>ovl_d_real (23 samples, 0.23%)</title><rect x="529.3" y="469" width="2.7" height="15.0" fill="rgb(254,71,3)" rx="2" ry="2" />
<text  x="532.27" y="479.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.08%)</title><rect x="68.5" y="565" width="0.9" height="15.0" fill="rgb(216,125,32)" rx="2" ry="2" />
<text  x="71.45" y="575.5" ></text>
</g>
<g >
<title>NaClXMutexLock (125 samples, 1.27%)</title><rect x="267.9" y="565" width="15.0" height="15.0" fill="rgb(250,144,42)" rx="2" ry="2" />
<text  x="270.90" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 0.81%)</title><rect x="42.9" y="533" width="9.6" height="15.0" fill="rgb(236,41,5)" rx="2" ry="2" />
<text  x="45.94" y="543.5" ></text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.03%)</title><rect x="38.4" y="389" width="0.3" height="15.0" fill="rgb(242,76,1)" rx="2" ry="2" />
<text  x="41.39" y="399.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.01%)</title><rect x="1136.8" y="453" width="0.1" height="15.0" fill="rgb(205,139,3)" rx="2" ry="2" />
<text  x="1139.82" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (5 samples, 0.05%)</title><rect x="1148.6" y="501" width="0.6" height="15.0" fill="rgb(244,185,14)" rx="2" ry="2" />
<text  x="1151.55" y="511.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.01%)</title><rect x="692.1" y="245" width="0.1" height="15.0" fill="rgb(209,201,14)" rx="2" ry="2" />
<text  x="695.05" y="255.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.01%)</title><rect x="706.1" y="229" width="0.1" height="15.0" fill="rgb(254,21,37)" rx="2" ry="2" />
<text  x="709.07" y="239.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.01%)</title><rect x="38.3" y="373" width="0.1" height="15.0" fill="rgb(252,22,33)" rx="2" ry="2" />
<text  x="41.27" y="383.5" ></text>
</g>
<g >
<title>menu_update (4 samples, 0.04%)</title><rect x="1171.4" y="389" width="0.5" height="15.0" fill="rgb(249,28,17)" rx="2" ry="2" />
<text  x="1174.43" y="399.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (4 samples, 0.04%)</title><rect x="121.3" y="565" width="0.5" height="15.0" fill="rgb(231,17,54)" rx="2" ry="2" />
<text  x="124.28" y="575.5" ></text>
</g>
<g >
<title>cpuidle_select (37 samples, 0.38%)</title><rect x="1170.1" y="421" width="4.4" height="15.0" fill="rgb(249,175,21)" rx="2" ry="2" />
<text  x="1173.12" y="431.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (12 samples, 0.12%)</title><rect x="1000.4" y="213" width="1.4" height="15.0" fill="rgb(208,85,22)" rx="2" ry="2" />
<text  x="1003.38" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="1029.7" y="453" width="0.1" height="15.0" fill="rgb(246,69,18)" rx="2" ry="2" />
<text  x="1032.73" y="463.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="1077.2" y="501" width="0.1" height="15.0" fill="rgb(232,108,38)" rx="2" ry="2" />
<text  x="1080.16" y="511.5" ></text>
</g>
<g >
<title>perf_ioctl (73 samples, 0.74%)</title><rect x="43.2" y="501" width="8.7" height="15.0" fill="rgb(243,102,7)" rx="2" ry="2" />
<text  x="46.18" y="511.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="465.9" y="517" width="0.1" height="15.0" fill="rgb(238,69,48)" rx="2" ry="2" />
<text  x="468.90" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="66.8" y="437" width="0.1" height="15.0" fill="rgb(229,154,17)" rx="2" ry="2" />
<text  x="69.78" y="447.5" ></text>
</g>
<g >
<title>iput (8 samples, 0.08%)</title><rect x="1026.6" y="373" width="1.0" height="15.0" fill="rgb(225,164,41)" rx="2" ry="2" />
<text  x="1029.61" y="383.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (15 samples, 0.15%)</title><rect x="246.7" y="565" width="1.8" height="15.0" fill="rgb(228,38,51)" rx="2" ry="2" />
<text  x="249.69" y="575.5" ></text>
</g>
<g >
<title>refill_obj_stock (1 samples, 0.01%)</title><rect x="596.0" y="357" width="0.1" height="15.0" fill="rgb(208,17,43)" rx="2" ry="2" />
<text  x="598.99" y="367.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (6 samples, 0.06%)</title><rect x="679.0" y="245" width="0.7" height="15.0" fill="rgb(226,213,51)" rx="2" ry="2" />
<text  x="682.00" y="255.5" ></text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (1 samples, 0.01%)</title><rect x="1106.2" y="165" width="0.1" height="15.0" fill="rgb(211,96,39)" rx="2" ry="2" />
<text  x="1109.15" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="1076.2" y="389" width="0.2" height="15.0" fill="rgb(232,72,27)" rx="2" ry="2" />
<text  x="1079.20" y="399.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u64 (1 samples, 0.01%)</title><rect x="1060.3" y="533" width="0.1" height="15.0" fill="rgb(238,101,18)" rx="2" ry="2" />
<text  x="1063.27" y="543.5" ></text>
</g>
<g >
<title>vfs_iter_write (1,546 samples, 15.69%)</title><rect x="636.4" y="437" width="185.1" height="15.0" fill="rgb(230,11,10)" rx="2" ry="2" />
<text  x="639.35" y="447.5" >vfs_iter_write</text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u32 (1 samples, 0.01%)</title><rect x="64.3" y="517" width="0.1" height="15.0" fill="rgb(246,94,24)" rx="2" ry="2" />
<text  x="67.26" y="527.5" ></text>
</g>
<g >
<title>current_time (1 samples, 0.01%)</title><rect x="644.5" y="341" width="0.1" height="15.0" fill="rgb(212,204,15)" rx="2" ry="2" />
<text  x="647.50" y="351.5" ></text>
</g>
<g >
<title>DynArrayGet (183 samples, 1.86%)</title><rect x="72.4" y="565" width="21.9" height="15.0" fill="rgb(210,187,24)" rx="2" ry="2" />
<text  x="75.41" y="575.5" >D..</text>
</g>
<g >
<title>copy_page_to_iter (81 samples, 0.82%)</title><rect x="567.1" y="341" width="9.7" height="15.0" fill="rgb(252,147,37)" rx="2" ry="2" />
<text  x="570.12" y="351.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (56 samples, 0.57%)</title><rect x="1178.7" y="373" width="6.7" height="15.0" fill="rgb(253,180,2)" rx="2" ry="2" />
<text  x="1181.74" y="383.5" ></text>
</g>
<g >
<title>blk_mq_sched_insert_requests (1 samples, 0.01%)</title><rect x="1106.2" y="197" width="0.1" height="15.0" fill="rgb(246,122,40)" rx="2" ry="2" />
<text  x="1109.15" y="207.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (7 samples, 0.07%)</title><rect x="683.5" y="261" width="0.9" height="15.0" fill="rgb(213,120,33)" rx="2" ry="2" />
<text  x="686.55" y="271.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.01%)</title><rect x="1037.8" y="325" width="0.1" height="15.0" fill="rgb(241,154,43)" rx="2" ry="2" />
<text  x="1040.75" y="335.5" ></text>
</g>
<g >
<title>alloc_buffer_head (28 samples, 0.28%)</title><rect x="677.3" y="277" width="3.4" height="15.0" fill="rgb(228,169,21)" rx="2" ry="2" />
<text  x="680.32" y="287.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="640.2" y="357" width="0.1" height="15.0" fill="rgb(208,207,9)" rx="2" ry="2" />
<text  x="643.19" y="367.5" ></text>
</g>
<g >
<title>mutex_unlock (27 samples, 0.27%)</title><rect x="522.7" y="485" width="3.2" height="15.0" fill="rgb(208,12,32)" rx="2" ry="2" />
<text  x="525.68" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="62.3" y="565" width="0.5" height="15.0" fill="rgb(236,223,8)" rx="2" ry="2" />
<text  x="65.35" y="575.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.01%)</title><rect x="59.6" y="261" width="0.1" height="15.0" fill="rgb(206,84,8)" rx="2" ry="2" />
<text  x="62.59" y="271.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (87 samples, 0.88%)</title><rect x="791.7" y="229" width="10.4" height="15.0" fill="rgb(231,216,0)" rx="2" ry="2" />
<text  x="794.72" y="239.5" ></text>
</g>
<g >
<title>try_to_free_buffers (4 samples, 0.04%)</title><rect x="1027.0" y="165" width="0.5" height="15.0" fill="rgb(250,37,15)" rx="2" ry="2" />
<text  x="1029.97" y="175.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (1 samples, 0.01%)</title><rect x="1059.7" y="485" width="0.1" height="15.0" fill="rgb(216,85,36)" rx="2" ry="2" />
<text  x="1062.67" y="495.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="627.6" y="437" width="0.1" height="15.0" fill="rgb(215,58,14)" rx="2" ry="2" />
<text  x="630.61" y="447.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.01%)</title><rect x="1105.7" y="293" width="0.1" height="15.0" fill="rgb(248,91,21)" rx="2" ry="2" />
<text  x="1108.67" y="303.5" ></text>
</g>
<g >
<title>iput.part.0 (102 samples, 1.04%)</title><rect x="997.4" y="309" width="12.2" height="15.0" fill="rgb(213,130,3)" rx="2" ry="2" />
<text  x="1000.39" y="319.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (5 samples, 0.05%)</title><rect x="54.3" y="261" width="0.6" height="15.0" fill="rgb(210,64,37)" rx="2" ry="2" />
<text  x="57.32" y="271.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.04%)</title><rect x="613.7" y="453" width="0.5" height="15.0" fill="rgb(222,194,37)" rx="2" ry="2" />
<text  x="616.72" y="463.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.01%)</title><rect x="38.3" y="389" width="0.1" height="15.0" fill="rgb(223,217,22)" rx="2" ry="2" />
<text  x="41.27" y="399.5" ></text>
</g>
<g >
<title>ovl_d_real (1 samples, 0.01%)</title><rect x="52.8" y="421" width="0.1" height="15.0" fill="rgb(236,11,45)" rx="2" ry="2" />
<text  x="55.76" y="431.5" ></text>
</g>
<g >
<title>unfreeze_partials (1 samples, 0.01%)</title><rect x="1008.9" y="37" width="0.1" height="15.0" fill="rgb(222,105,44)" rx="2" ry="2" />
<text  x="1011.89" y="47.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="19.6" y="437" width="0.2" height="15.0" fill="rgb(243,191,13)" rx="2" ry="2" />
<text  x="22.58" y="447.5" ></text>
</g>
<g >
<title>__inc_node_page_state (1 samples, 0.01%)</title><rect x="737.2" y="245" width="0.1" height="15.0" fill="rgb(225,211,37)" rx="2" ry="2" />
<text  x="740.21" y="255.5" ></text>
</g>
<g >
<title>rest_init (327 samples, 3.32%)</title><rect x="1150.8" y="485" width="39.2" height="15.0" fill="rgb(241,153,46)" rx="2" ry="2" />
<text  x="1153.83" y="495.5" >res..</text>
</g>
<g >
<title>ext4_file_write_iter (1,490 samples, 15.13%)</title><rect x="638.3" y="389" width="178.5" height="15.0" fill="rgb(246,143,15)" rx="2" ry="2" />
<text  x="641.27" y="399.5" >ext4_file_write_iter</text>
</g>
<g >
<title>from_kuid (1 samples, 0.01%)</title><rect x="788.0" y="245" width="0.1" height="15.0" fill="rgb(213,67,39)" rx="2" ry="2" />
<text  x="791.00" y="255.5" ></text>
</g>
<g >
<title>pagecache_get_page (236 samples, 2.40%)</title><rect x="686.8" y="309" width="28.3" height="15.0" fill="rgb(254,53,18)" rx="2" ry="2" />
<text  x="689.78" y="319.5" >p..</text>
</g>
<g >
<title>ret_from_fork (10 samples, 0.10%)</title><rect x="1105.4" y="565" width="1.2" height="15.0" fill="rgb(217,198,2)" rx="2" ry="2" />
<text  x="1108.43" y="575.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.01%)</title><rect x="1027.5" y="293" width="0.1" height="15.0" fill="rgb(205,107,29)" rx="2" ry="2" />
<text  x="1030.45" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (40 samples, 0.41%)</title><rect x="1029.8" y="565" width="4.8" height="15.0" fill="rgb(216,75,15)" rx="2" ry="2" />
<text  x="1032.85" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (7 samples, 0.07%)</title><rect x="1059.4" y="533" width="0.9" height="15.0" fill="rgb(243,71,18)" rx="2" ry="2" />
<text  x="1062.43" y="543.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.01%)</title><rect x="35.9" y="341" width="0.1" height="15.0" fill="rgb(209,198,37)" rx="2" ry="2" />
<text  x="38.87" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="1077.2" y="437" width="0.1" height="15.0" fill="rgb(211,194,0)" rx="2" ry="2" />
<text  x="1080.16" y="447.5" ></text>
</g>
<g >
<title>__schedule (45 samples, 0.46%)</title><rect x="1143.2" y="485" width="5.4" height="15.0" fill="rgb(220,109,30)" rx="2" ry="2" />
<text  x="1146.16" y="495.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.02%)</title><rect x="997.9" y="165" width="0.2" height="15.0" fill="rgb(250,61,49)" rx="2" ry="2" />
<text  x="1000.87" y="175.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (1 samples, 0.01%)</title><rect x="1058.8" y="517" width="0.2" height="15.0" fill="rgb(215,9,9)" rx="2" ry="2" />
<text  x="1061.84" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="998.2" y="181" width="0.1" height="15.0" fill="rgb(237,27,44)" rx="2" ry="2" />
<text  x="1001.22" y="191.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.01%)</title><rect x="717.8" y="293" width="0.1" height="15.0" fill="rgb(232,73,9)" rx="2" ry="2" />
<text  x="720.81" y="303.5" ></text>
</g>
<g >
<title>current_time (8 samples, 0.08%)</title><rect x="645.7" y="325" width="1.0" height="15.0" fill="rgb(222,19,24)" rx="2" ry="2" />
<text  x="648.70" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (51 samples, 0.52%)</title><rect x="35.6" y="533" width="6.1" height="15.0" fill="rgb(220,155,3)" rx="2" ry="2" />
<text  x="38.63" y="543.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.01%)</title><rect x="52.5" y="501" width="0.1" height="15.0" fill="rgb(250,116,7)" rx="2" ry="2" />
<text  x="55.52" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="1172.6" y="357" width="0.2" height="15.0" fill="rgb(218,121,52)" rx="2" ry="2" />
<text  x="1175.63" y="367.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (1 samples, 0.01%)</title><rect x="11.6" y="453" width="0.1" height="15.0" fill="rgb(211,168,38)" rx="2" ry="2" />
<text  x="14.56" y="463.5" ></text>
</g>
<g >
<title>file_remove_privs (1 samples, 0.01%)</title><rect x="646.7" y="357" width="0.1" height="15.0" fill="rgb(229,97,43)" rx="2" ry="2" />
<text  x="649.66" y="367.5" ></text>
</g>
<g >
<title>blk_flush_plug_list (1 samples, 0.01%)</title><rect x="1106.2" y="229" width="0.1" height="15.0" fill="rgb(250,220,42)" rx="2" ry="2" />
<text  x="1109.15" y="239.5" ></text>
</g>
<g >
<title>__blk_mq_run_hw_queue (1 samples, 0.01%)</title><rect x="1106.2" y="149" width="0.1" height="15.0" fill="rgb(206,138,31)" rx="2" ry="2" />
<text  x="1109.15" y="159.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (2 samples, 0.02%)</title><rect x="18.3" y="517" width="0.2" height="15.0" fill="rgb(220,197,18)" rx="2" ry="2" />
<text  x="21.27" y="527.5" ></text>
</g>
<g >
<title>poll_idle (68 samples, 0.69%)</title><rect x="1128.7" y="453" width="8.1" height="15.0" fill="rgb(220,74,7)" rx="2" ry="2" />
<text  x="1131.67" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.07%)</title><rect x="1076.1" y="421" width="0.8" height="15.0" fill="rgb(206,136,2)" rx="2" ry="2" />
<text  x="1079.08" y="431.5" ></text>
</g>
<g >
<title>xas_create (4 samples, 0.04%)</title><rect x="695.5" y="245" width="0.5" height="15.0" fill="rgb(223,222,51)" rx="2" ry="2" />
<text  x="698.53" y="255.5" ></text>
</g>
<g >
<title>load_new_mm_cr3 (1 samples, 0.01%)</title><rect x="1148.2" y="453" width="0.1" height="15.0" fill="rgb(240,79,32)" rx="2" ry="2" />
<text  x="1151.20" y="463.5" ></text>
</g>
<g >
<title>schedule_idle (72 samples, 0.73%)</title><rect x="1178.0" y="437" width="8.6" height="15.0" fill="rgb(219,173,7)" rx="2" ry="2" />
<text  x="1181.02" y="447.5" ></text>
</g>
<g >
<title>cpumask_next (2 samples, 0.02%)</title><rect x="1180.7" y="341" width="0.2" height="15.0" fill="rgb(232,61,29)" rx="2" ry="2" />
<text  x="1183.66" y="351.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (24 samples, 0.24%)</title><rect x="35.9" y="405" width="2.8" height="15.0" fill="rgb(224,137,2)" rx="2" ry="2" />
<text  x="38.87" y="415.5" ></text>
</g>
<g >
<title>cpuidle_enter (111 samples, 1.13%)</title><rect x="19.2" y="485" width="13.3" height="15.0" fill="rgb(221,75,41)" rx="2" ry="2" />
<text  x="22.22" y="495.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (13 samples, 0.13%)</title><rect x="789.2" y="229" width="1.6" height="15.0" fill="rgb(237,202,17)" rx="2" ry="2" />
<text  x="792.20" y="239.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u64 (3 samples, 0.03%)</title><rect x="1077.6" y="517" width="0.4" height="15.0" fill="rgb(242,184,26)" rx="2" ry="2" />
<text  x="1080.64" y="527.5" ></text>
</g>
<g >
<title>proc_pid_status (1 samples, 0.01%)</title><rect x="52.5" y="421" width="0.1" height="15.0" fill="rgb(217,201,6)" rx="2" ry="2" />
<text  x="55.52" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="1059.7" y="341" width="0.1" height="15.0" fill="rgb(222,119,19)" rx="2" ry="2" />
<text  x="1062.67" y="351.5" ></text>
</g>
<g >
<title>propagate_protected_usage (1 samples, 0.01%)</title><rect x="1000.3" y="133" width="0.1" height="15.0" fill="rgb(205,179,12)" rx="2" ry="2" />
<text  x="1003.26" y="143.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (72 samples, 0.73%)</title><rect x="776.0" y="181" width="8.6" height="15.0" fill="rgb(238,156,29)" rx="2" ry="2" />
<text  x="779.02" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_pwrite64 (1 samples, 0.01%)</title><rect x="18.6" y="533" width="0.1" height="15.0" fill="rgb(251,178,46)" rx="2" ry="2" />
<text  x="21.62" y="543.5" ></text>
</g>
<g >
<title>_int_malloc (35 samples, 0.36%)</title><rect x="1013.1" y="565" width="4.2" height="15.0" fill="rgb(214,136,42)" rx="2" ry="2" />
<text  x="1016.08" y="575.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.01%)</title><rect x="52.5" y="373" width="0.1" height="15.0" fill="rgb(252,148,34)" rx="2" ry="2" />
<text  x="55.52" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.10%)</title><rect x="1031.9" y="485" width="1.2" height="15.0" fill="rgb(234,139,12)" rx="2" ry="2" />
<text  x="1034.88" y="495.5" ></text>
</g>
<g >
<title>memset_erms (10 samples, 0.10%)</title><rect x="667.1" y="293" width="1.2" height="15.0" fill="rgb(205,225,4)" rx="2" ry="2" />
<text  x="670.14" y="303.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (7 samples, 0.07%)</title><rect x="1074.5" y="533" width="0.9" height="15.0" fill="rgb(243,21,23)" rx="2" ry="2" />
<text  x="1077.53" y="543.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (25 samples, 0.25%)</title><rect x="1174.9" y="437" width="3.0" height="15.0" fill="rgb(245,153,10)" rx="2" ry="2" />
<text  x="1177.91" y="447.5" ></text>
</g>
<g >
<title>do_group_exit (9 samples, 0.09%)</title><rect x="1026.5" y="517" width="1.1" height="15.0" fill="rgb(216,212,4)" rx="2" ry="2" />
<text  x="1029.49" y="527.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (2 samples, 0.02%)</title><rect x="740.4" y="293" width="0.3" height="15.0" fill="rgb(233,48,49)" rx="2" ry="2" />
<text  x="743.45" y="303.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.01%)</title><rect x="1105.3" y="501" width="0.1" height="15.0" fill="rgb(228,27,52)" rx="2" ry="2" />
<text  x="1108.31" y="511.5" ></text>
</g>
<g >
<title>intercept_process_vm_writev (2 samples, 0.02%)</title><rect x="1037.8" y="517" width="0.2" height="15.0" fill="rgb(235,108,27)" rx="2" ry="2" />
<text  x="1040.75" y="527.5" ></text>
</g>
<g >
<title>perf (1 samples, 0.01%)</title><rect x="41.7" y="581" width="0.2" height="15.0" fill="rgb(220,221,34)" rx="2" ry="2" />
<text  x="44.74" y="591.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (11 samples, 0.11%)</title><rect x="1022.8" y="517" width="1.3" height="15.0" fill="rgb(239,30,10)" rx="2" ry="2" />
<text  x="1025.78" y="527.5" ></text>
</g>
<g >
<title>find_get_pages_range (1 samples, 0.01%)</title><rect x="1106.5" y="309" width="0.1" height="15.0" fill="rgb(223,151,40)" rx="2" ry="2" />
<text  x="1109.51" y="319.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="19.6" y="309" width="0.1" height="15.0" fill="rgb(233,142,27)" rx="2" ry="2" />
<text  x="22.58" y="319.5" ></text>
</g>
<g >
<title>nohz_csd_func (6 samples, 0.06%)</title><rect x="1142.2" y="485" width="0.7" height="15.0" fill="rgb(251,8,32)" rx="2" ry="2" />
<text  x="1145.21" y="495.5" ></text>
</g>
<g >
<title>ext4_has_free_clusters (1 samples, 0.01%)</title><rect x="683.2" y="229" width="0.1" height="15.0" fill="rgb(213,219,22)" rx="2" ry="2" />
<text  x="686.19" y="239.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt (7 samples, 0.07%)</title><rect x="1079.4" y="517" width="0.9" height="15.0" fill="rgb(206,46,21)" rx="2" ry="2" />
<text  x="1082.44" y="527.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.07%)</title><rect x="1074.5" y="501" width="0.9" height="15.0" fill="rgb(235,64,28)" rx="2" ry="2" />
<text  x="1077.53" y="511.5" ></text>
</g>
<g >
<title>__fsnotify_parent (3 samples, 0.03%)</title><rect x="555.5" y="469" width="0.4" height="15.0" fill="rgb(228,218,8)" rx="2" ry="2" />
<text  x="558.50" y="479.5" ></text>
</g>
<g >
<title>schedule_idle (11 samples, 0.11%)</title><rect x="34.1" y="501" width="1.3" height="15.0" fill="rgb(210,25,9)" rx="2" ry="2" />
<text  x="37.08" y="511.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (2 samples, 0.02%)</title><rect x="802.3" y="229" width="0.2" height="15.0" fill="rgb(232,83,16)" rx="2" ry="2" />
<text  x="805.26" y="239.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (542 samples, 5.50%)</title><rect x="738.4" y="309" width="64.9" height="15.0" fill="rgb(222,144,30)" rx="2" ry="2" />
<text  x="741.41" y="319.5" >__mark_..</text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (3 samples, 0.03%)</title><rect x="1066.0" y="469" width="0.4" height="15.0" fill="rgb(248,59,28)" rx="2" ry="2" />
<text  x="1069.02" y="479.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.01%)</title><rect x="692.5" y="261" width="0.2" height="15.0" fill="rgb(228,176,33)" rx="2" ry="2" />
<text  x="695.53" y="271.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (8 samples, 0.08%)</title><rect x="1105.7" y="357" width="0.9" height="15.0" fill="rgb(226,188,23)" rx="2" ry="2" />
<text  x="1108.67" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.06%)</title><rect x="1066.7" y="501" width="0.8" height="15.0" fill="rgb(232,225,54)" rx="2" ry="2" />
<text  x="1069.74" y="511.5" ></text>
</g>
<g >
<title>process_one_work (9 samples, 0.09%)</title><rect x="1105.6" y="517" width="1.0" height="15.0" fill="rgb(239,39,8)" rx="2" ry="2" />
<text  x="1108.55" y="527.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="522.6" y="325" width="0.1" height="15.0" fill="rgb(239,43,41)" rx="2" ry="2" />
<text  x="525.56" y="335.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (11 samples, 0.11%)</title><rect x="816.8" y="405" width="1.3" height="15.0" fill="rgb(216,186,20)" rx="2" ry="2" />
<text  x="819.75" y="415.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (10 samples, 0.10%)</title><rect x="97.0" y="565" width="1.2" height="15.0" fill="rgb(238,148,14)" rx="2" ry="2" />
<text  x="99.96" y="575.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.01%)</title><rect x="41.9" y="581" width="0.1" height="15.0" fill="rgb(251,130,20)" rx="2" ry="2" />
<text  x="44.86" y="591.5" ></text>
</g>
<g >
<title>rest_init (51 samples, 0.52%)</title><rect x="35.6" y="485" width="6.1" height="15.0" fill="rgb(220,205,13)" rx="2" ry="2" />
<text  x="38.63" y="495.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.01%)</title><rect x="714.8" y="277" width="0.1" height="15.0" fill="rgb(215,172,0)" rx="2" ry="2" />
<text  x="717.81" y="287.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (2 samples, 0.02%)</title><rect x="680.8" y="293" width="0.2" height="15.0" fill="rgb(211,198,45)" rx="2" ry="2" />
<text  x="683.79" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.03%)</title><rect x="1077.6" y="373" width="0.4" height="15.0" fill="rgb(231,29,0)" rx="2" ry="2" />
<text  x="1080.64" y="383.5" ></text>
</g>
<g >
<title>ksys_write (1,840 samples, 18.68%)</title><rect x="607.1" y="501" width="220.4" height="15.0" fill="rgb(239,10,22)" rx="2" ry="2" />
<text  x="610.13" y="511.5" >ksys_write</text>
</g>
<g >
<title>cpuidle_enter (3 samples, 0.03%)</title><rect x="12.2" y="485" width="0.3" height="15.0" fill="rgb(217,73,53)" rx="2" ry="2" />
<text  x="15.16" y="495.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="1060.3" y="421" width="0.1" height="15.0" fill="rgb(245,171,34)" rx="2" ry="2" />
<text  x="1063.27" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (49 samples, 0.50%)</title><rect x="466.0" y="565" width="5.9" height="15.0" fill="rgb(232,182,34)" rx="2" ry="2" />
<text  x="469.02" y="575.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (5 samples, 0.05%)</title><rect x="692.7" y="245" width="0.6" height="15.0" fill="rgb(217,33,7)" rx="2" ry="2" />
<text  x="695.65" y="255.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.01%)</title><rect x="1005.5" y="53" width="0.2" height="15.0" fill="rgb(216,64,4)" rx="2" ry="2" />
<text  x="1008.53" y="63.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.01%)</title><rect x="18.4" y="453" width="0.1" height="15.0" fill="rgb(214,150,18)" rx="2" ry="2" />
<text  x="21.38" y="463.5" ></text>
</g>
<g >
<title>alloc_page_buffers (1 samples, 0.01%)</title><rect x="18.6" y="389" width="0.1" height="15.0" fill="rgb(250,79,43)" rx="2" ry="2" />
<text  x="21.62" y="399.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (4 samples, 0.04%)</title><rect x="1004.7" y="117" width="0.5" height="15.0" fill="rgb(234,168,44)" rx="2" ry="2" />
<text  x="1007.69" y="127.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (3 samples, 0.03%)</title><rect x="69.1" y="549" width="0.3" height="15.0" fill="rgb(230,25,8)" rx="2" ry="2" />
<text  x="72.05" y="559.5" ></text>
</g>
<g >
<title>ovl_real_fdget (11 samples, 0.11%)</title><rect x="632.9" y="437" width="1.3" height="15.0" fill="rgb(220,79,23)" rx="2" ry="2" />
<text  x="635.88" y="447.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.01%)</title><rect x="18.7" y="469" width="0.2" height="15.0" fill="rgb(236,207,2)" rx="2" ry="2" />
<text  x="21.74" y="479.5" ></text>
</g>
<g >
<title>ext4_fc_track_template (4 samples, 0.04%)</title><rect x="786.4" y="229" width="0.5" height="15.0" fill="rgb(207,87,45)" rx="2" ry="2" />
<text  x="789.45" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="11.6" y="533" width="0.1" height="15.0" fill="rgb(232,62,13)" rx="2" ry="2" />
<text  x="14.56" y="543.5" ></text>
</g>
</g>
</svg>
