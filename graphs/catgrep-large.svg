<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>swapper (18 samples, 13.64%)</title><rect x="1029.1" y="581" width="160.9" height="15.0" fill="rgb(207,79,12)" rx="2" ry="2" />
<text  x="1032.09" y="591.5" >swapper</text>
</g>
<g >
<title>__task_rq_lock (1 samples, 0.76%)</title><rect x="930.8" y="69" width="8.9" height="15.0" fill="rgb(231,213,14)" rx="2" ry="2" />
<text  x="933.76" y="79.5" ></text>
</g>
<g >
<title>sys_ioctl (64 samples, 48.48%)</title><rect x="27.9" y="421" width="572.1" height="15.0" fill="rgb(250,135,14)" rx="2" ry="2" />
<text  x="30.88" y="431.5" >sys_ioctl</text>
</g>
<g >
<title>sync_regs (2 samples, 1.52%)</title><rect x="841.4" y="181" width="17.8" height="15.0" fill="rgb(214,115,15)" rx="2" ry="2" />
<text  x="844.36" y="191.5" ></text>
</g>
<g >
<title>NaClValidateImage (1 samples, 0.76%)</title><rect x="698.3" y="245" width="9.0" height="15.0" fill="rgb(216,52,34)" rx="2" ry="2" />
<text  x="701.33" y="255.5" ></text>
</g>
<g >
<title>sel_ldr (46 samples, 34.85%)</title><rect x="608.9" y="581" width="411.3" height="15.0" fill="rgb(238,45,25)" rx="2" ry="2" />
<text  x="611.94" y="591.5" >sel_ldr</text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.76%)</title><rect x="984.4" y="405" width="8.9" height="15.0" fill="rgb(235,150,12)" rx="2" ry="2" />
<text  x="987.39" y="415.5" ></text>
</g>
<g >
<title>start_kernel (1 samples, 0.76%)</title><rect x="1181.1" y="517" width="8.9" height="15.0" fill="rgb(250,54,48)" rx="2" ry="2" />
<text  x="1184.06" y="527.5" ></text>
</g>
<g >
<title>[unknown]  (29 samples, 21.97%)</title><rect x="698.3" y="421" width="259.3" height="15.0" fill="rgb(225,48,48)" rx="2" ry="2" />
<text  x="701.33" y="431.5" >[unknown] </text>
</g>
<g >
<title>__perf_event_enable (64 samples, 48.48%)</title><rect x="27.9" y="261" width="572.1" height="15.0" fill="rgb(207,69,29)" rx="2" ry="2" />
<text  x="30.88" y="271.5" >__perf_event_enable</text>
</g>
<g >
<title>perf_output_begin (1 samples, 0.76%)</title><rect x="1011.2" y="389" width="9.0" height="15.0" fill="rgb(237,195,28)" rx="2" ry="2" />
<text  x="1014.21" y="399.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.76%)</title><rect x="680.5" y="373" width="8.9" height="15.0" fill="rgb(205,34,49)" rx="2" ry="2" />
<text  x="683.45" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.76%)</title><rect x="993.3" y="565" width="9.0" height="15.0" fill="rgb(236,156,42)" rx="2" ry="2" />
<text  x="996.33" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.76%)</title><rect x="1029.1" y="549" width="8.9" height="15.0" fill="rgb(235,227,43)" rx="2" ry="2" />
<text  x="1032.09" y="559.5" ></text>
</g>
<g >
<title>NaClSysLindSyscall (1 samples, 0.76%)</title><rect x="689.4" y="421" width="8.9" height="15.0" fill="rgb(221,213,24)" rx="2" ry="2" />
<text  x="692.39" y="431.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.76%)</title><rect x="984.4" y="485" width="8.9" height="15.0" fill="rgb(248,44,4)" rx="2" ry="2" />
<text  x="987.39" y="495.5" ></text>
</g>
<g >
<title>[perf-442.map] (1 samples, 0.76%)</title><rect x="680.5" y="501" width="8.9" height="15.0" fill="rgb(245,141,8)" rx="2" ry="2" />
<text  x="683.45" y="511.5" ></text>
</g>
<g >
<title>secondary_startup_64 (17 samples, 12.88%)</title><rect x="1038.0" y="565" width="152.0" height="15.0" fill="rgb(219,182,41)" rx="2" ry="2" />
<text  x="1041.03" y="575.5" >secondary_startup_64</text>
</g>
<g >
<title>do_syscall_64 (64 samples, 48.48%)</title><rect x="27.9" y="437" width="572.1" height="15.0" fill="rgb(208,20,53)" rx="2" ry="2" />
<text  x="30.88" y="447.5" >do_syscall_64</text>
</g>
<g >
<title>do_idle (16 samples, 12.12%)</title><rect x="1038.0" y="517" width="143.1" height="15.0" fill="rgb(212,46,26)" rx="2" ry="2" />
<text  x="1041.03" y="527.5" >do_idle</text>
</g>
<g >
<title>[unknown] (1 samples, 0.76%)</title><rect x="1029.1" y="517" width="8.9" height="15.0" fill="rgb(250,61,8)" rx="2" ry="2" />
<text  x="1032.09" y="527.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.76%)</title><rect x="1002.3" y="325" width="8.9" height="15.0" fill="rgb(244,17,29)" rx="2" ry="2" />
<text  x="1005.27" y="335.5" ></text>
</g>
<g >
<title>PyDict_GetItem (1 samples, 0.76%)</title><rect x="644.7" y="549" width="8.9" height="15.0" fill="rgb(215,125,28)" rx="2" ry="2" />
<text  x="647.70" y="559.5" ></text>
</g>
<g >
<title>[perf-442.map] (1 samples, 0.76%)</title><rect x="680.5" y="517" width="8.9" height="15.0" fill="rgb(235,135,42)" rx="2" ry="2" />
<text  x="683.45" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.76%)</title><rect x="600.0" y="469" width="8.9" height="15.0" fill="rgb(221,110,7)" rx="2" ry="2" />
<text  x="603.00" y="479.5" ></text>
</g>
<g >
<title>call_cpuidle (1 samples, 0.76%)</title><rect x="1181.1" y="453" width="8.9" height="15.0" fill="rgb(235,141,16)" rx="2" ry="2" />
<text  x="1184.06" y="463.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.76%)</title><rect x="698.3" y="197" width="9.0" height="15.0" fill="rgb(223,205,52)" rx="2" ry="2" />
<text  x="701.33" y="207.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 48.48%)</title><rect x="27.9" y="213" width="572.1" height="15.0" fill="rgb(220,28,32)" rx="2" ry="2" />
<text  x="30.88" y="223.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>do_wp_page (1 samples, 0.76%)</title><rect x="984.4" y="437" width="8.9" height="15.0" fill="rgb(228,128,24)" rx="2" ry="2" />
<text  x="987.39" y="447.5" ></text>
</g>
<g >
<title>NaClCopyDynamicText (26 samples, 19.70%)</title><rect x="707.3" y="245" width="232.4" height="15.0" fill="rgb(208,56,44)" rx="2" ry="2" />
<text  x="710.27" y="255.5" >NaClCopyDynamicText</text>
</g>
<g >
<title>[unknown] (1 samples, 0.76%)</title><rect x="1029.1" y="565" width="8.9" height="15.0" fill="rgb(242,28,35)" rx="2" ry="2" />
<text  x="1032.09" y="575.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (64 samples, 48.48%)</title><rect x="27.9" y="405" width="572.1" height="15.0" fill="rgb(214,142,27)" rx="2" ry="2" />
<text  x="30.88" y="415.5" >do_vfs_ioctl</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.76%)</title><rect x="689.4" y="357" width="8.9" height="15.0" fill="rgb(251,208,19)" rx="2" ry="2" />
<text  x="692.39" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.76%)</title><rect x="1002.3" y="549" width="8.9" height="15.0" fill="rgb(252,48,20)" rx="2" ry="2" />
<text  x="1005.27" y="559.5" ></text>
</g>
<g >
<title>[unknown] (33 samples, 25.00%)</title><rect x="671.5" y="549" width="295.0" height="15.0" fill="rgb(216,163,30)" rx="2" ry="2" />
<text  x="674.52" y="559.5" >[unknown]</text>
</g>
<g >
<title>arch_tlb_finish_mmu (1 samples, 0.76%)</title><rect x="1002.3" y="389" width="8.9" height="15.0" fill="rgb(209,94,27)" rx="2" ry="2" />
<text  x="1005.27" y="399.5" ></text>
</g>
<g >
<title>inode_permission (1 samples, 0.76%)</title><rect x="600.0" y="341" width="8.9" height="15.0" fill="rgb(229,84,14)" rx="2" ry="2" />
<text  x="603.00" y="351.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.76%)</title><rect x="1002.3" y="405" width="8.9" height="15.0" fill="rgb(213,204,8)" rx="2" ry="2" />
<text  x="1005.27" y="415.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.76%)</title><rect x="1002.3" y="373" width="8.9" height="15.0" fill="rgb(237,91,29)" rx="2" ry="2" />
<text  x="1005.27" y="383.5" ></text>
</g>
<g >
<title>__inode_permission (1 samples, 0.76%)</title><rect x="600.0" y="325" width="8.9" height="15.0" fill="rgb(226,195,33)" rx="2" ry="2" />
<text  x="603.00" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.76%)</title><rect x="984.4" y="501" width="8.9" height="15.0" fill="rgb(222,37,35)" rx="2" ry="2" />
<text  x="987.39" y="511.5" ></text>
</g>
<g >
<title>rest_init (1 samples, 0.76%)</title><rect x="1181.1" y="501" width="8.9" height="15.0" fill="rgb(219,162,48)" rx="2" ry="2" />
<text  x="1184.06" y="511.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.76%)</title><rect x="1002.3" y="421" width="8.9" height="15.0" fill="rgb(210,115,24)" rx="2" ry="2" />
<text  x="1005.27" y="431.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.76%)</title><rect x="984.4" y="549" width="8.9" height="15.0" fill="rgb(210,95,15)" rx="2" ry="2" />
<text  x="987.39" y="559.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.76%)</title><rect x="1002.3" y="453" width="8.9" height="15.0" fill="rgb(241,18,34)" rx="2" ry="2" />
<text  x="1005.27" y="463.5" ></text>
</g>
<g >
<title>[itertools.so] (1 samples, 0.76%)</title><rect x="635.8" y="565" width="8.9" height="15.0" fill="rgb(250,86,43)" rx="2" ry="2" />
<text  x="638.76" y="575.5" ></text>
</g>
<g >
<title>native_irq_return_iret (3 samples, 2.27%)</title><rect x="859.2" y="197" width="26.9" height="15.0" fill="rgb(213,50,36)" rx="2" ry="2" />
<text  x="862.24" y="207.5" >n..</text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.76%)</title><rect x="1011.2" y="421" width="9.0" height="15.0" fill="rgb(224,129,41)" rx="2" ry="2" />
<text  x="1014.21" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 48.48%)</title><rect x="27.9" y="453" width="572.1" height="15.0" fill="rgb(243,197,3)" rx="2" ry="2" />
<text  x="30.88" y="463.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>call_cpuidle (14 samples, 10.61%)</title><rect x="1038.0" y="501" width="125.2" height="15.0" fill="rgb(242,88,38)" rx="2" ry="2" />
<text  x="1041.03" y="511.5" >call_cpuidle</text>
</g>
<g >
<title>NaClSysLindSyscallDecoder (1 samples, 0.76%)</title><rect x="689.4" y="437" width="8.9" height="15.0" fill="rgb(239,142,34)" rx="2" ry="2" />
<text  x="692.39" y="447.5" ></text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.76%)</title><rect x="18.9" y="373" width="9.0" height="15.0" fill="rgb(214,159,30)" rx="2" ry="2" />
<text  x="21.94" y="383.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 4.55%)</title><rect x="886.1" y="197" width="53.6" height="15.0" fill="rgb(225,182,51)" rx="2" ry="2" />
<text  x="889.06" y="207.5" >page_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.76%)</title><rect x="18.9" y="469" width="9.0" height="15.0" fill="rgb(207,112,46)" rx="2" ry="2" />
<text  x="21.94" y="479.5" ></text>
</g>
<g >
<title>NaClPatchAddr (1 samples, 0.76%)</title><rect x="939.7" y="245" width="8.9" height="15.0" fill="rgb(236,163,26)" rx="2" ry="2" />
<text  x="942.70" y="255.5" ></text>
</g>
<g >
<title>perf_event_task (1 samples, 0.76%)</title><rect x="1011.2" y="437" width="9.0" height="15.0" fill="rgb(232,104,17)" rx="2" ry="2" />
<text  x="1014.21" y="447.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (1 samples, 0.76%)</title><rect x="689.4" y="389" width="8.9" height="15.0" fill="rgb(220,216,25)" rx="2" ry="2" />
<text  x="692.39" y="399.5" ></text>
</g>
<g >
<title>[unknown]  (29 samples, 21.97%)</title><rect x="698.3" y="469" width="259.3" height="15.0" fill="rgb(247,212,31)" rx="2" ry="2" />
<text  x="701.33" y="479.5" >[unknown] </text>
</g>
<g >
<title>do_page_fault (1 samples, 0.76%)</title><rect x="10.0" y="533" width="8.9" height="15.0" fill="rgb(222,34,45)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.76%)</title><rect x="930.8" y="149" width="8.9" height="15.0" fill="rgb(228,92,1)" rx="2" ry="2" />
<text  x="933.76" y="159.5" ></text>
</g>
<g >
<title>smp_call_function_single (64 samples, 48.48%)</title><rect x="27.9" y="325" width="572.1" height="15.0" fill="rgb(238,172,39)" rx="2" ry="2" />
<text  x="30.88" y="335.5" >smp_call_function_single</text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.76%)</title><rect x="10.0" y="469" width="8.9" height="15.0" fill="rgb(244,127,39)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>sh (1 samples, 0.76%)</title><rect x="1020.2" y="581" width="8.9" height="15.0" fill="rgb(238,58,3)" rx="2" ry="2" />
<text  x="1023.15" y="591.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (1 samples, 0.76%)</title><rect x="689.4" y="453" width="8.9" height="15.0" fill="rgb(206,168,1)" rx="2" ry="2" />
<text  x="692.39" y="463.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.76%)</title><rect x="912.9" y="85" width="8.9" height="15.0" fill="rgb(230,211,50)" rx="2" ry="2" />
<text  x="915.88" y="95.5" ></text>
</g>
<g >
<title>__poll (1 samples, 0.76%)</title><rect x="18.9" y="485" width="9.0" height="15.0" fill="rgb(235,52,51)" rx="2" ry="2" />
<text  x="21.94" y="495.5" ></text>
</g>
<g >
<title>NaClForkThreadContextSetup (27 samples, 20.45%)</title><rect x="707.3" y="277" width="241.3" height="15.0" fill="rgb(220,84,5)" rx="2" ry="2" />
<text  x="710.27" y="287.5" >NaClForkThreadContextSetup</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.76%)</title><rect x="921.8" y="101" width="9.0" height="15.0" fill="rgb(221,87,18)" rx="2" ry="2" />
<text  x="924.82" y="111.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.76%)</title><rect x="698.3" y="261" width="9.0" height="15.0" fill="rgb(223,12,16)" rx="2" ry="2" />
<text  x="701.33" y="271.5" ></text>
</g>
<g >
<title>perf_poll (1 samples, 0.76%)</title><rect x="18.9" y="405" width="9.0" height="15.0" fill="rgb(212,158,0)" rx="2" ry="2" />
<text  x="21.94" y="415.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.76%)</title><rect x="1002.3" y="485" width="8.9" height="15.0" fill="rgb(247,222,15)" rx="2" ry="2" />
<text  x="1005.27" y="495.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.76%)</title><rect x="18.9" y="421" width="9.0" height="15.0" fill="rgb(242,8,17)" rx="2" ry="2" />
<text  x="21.94" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.76%)</title><rect x="600.0" y="453" width="8.9" height="15.0" fill="rgb(223,195,36)" rx="2" ry="2" />
<text  x="603.00" y="463.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.76%)</title><rect x="930.8" y="37" width="8.9" height="15.0" fill="rgb(248,80,28)" rx="2" ry="2" />
<text  x="933.76" y="47.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 0.76%)</title><rect x="1181.1" y="549" width="8.9" height="15.0" fill="rgb(212,172,42)" rx="2" ry="2" />
<text  x="1184.06" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.76%)</title><rect x="1029.1" y="469" width="8.9" height="15.0" fill="rgb(249,132,49)" rx="2" ry="2" />
<text  x="1032.09" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.76%)</title><rect x="930.8" y="53" width="8.9" height="15.0" fill="rgb(220,88,19)" rx="2" ry="2" />
<text  x="933.76" y="63.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (28 samples, 21.21%)</title><rect x="698.3" y="341" width="250.3" height="15.0" fill="rgb(217,110,16)" rx="2" ry="2" />
<text  x="701.33" y="351.5" >NaClSysForkDecoder</text>
</g>
<g >
<title>shmem_fault (1 samples, 0.76%)</title><rect x="903.9" y="101" width="9.0" height="15.0" fill="rgb(229,73,1)" rx="2" ry="2" />
<text  x="906.94" y="111.5" ></text>
</g>
<g >
<title>run_builtin (65 samples, 49.24%)</title><rect x="18.9" y="517" width="581.1" height="15.0" fill="rgb(225,122,44)" rx="2" ry="2" />
<text  x="21.94" y="527.5" >run_builtin</text>
</g>
<g >
<title>NaClAppThreadSpawn (27 samples, 20.45%)</title><rect x="707.3" y="293" width="241.3" height="15.0" fill="rgb(213,155,0)" rx="2" ry="2" />
<text  x="710.27" y="303.5" >NaClAppThreadSpawn</text>
</g>
<g >
<title>[unknown]  (30 samples, 22.73%)</title><rect x="689.4" y="485" width="268.2" height="15.0" fill="rgb(247,90,34)" rx="2" ry="2" />
<text  x="692.39" y="495.5" >[unknown] </text>
</g>
<g >
<title>NaClVmmapVisit (26 samples, 19.70%)</title><rect x="707.3" y="229" width="232.4" height="15.0" fill="rgb(238,82,19)" rx="2" ry="2" />
<text  x="710.27" y="239.5" >NaClVmmapVisit</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (64 samples, 48.48%)</title><rect x="27.9" y="197" width="572.1" height="15.0" fill="rgb(205,75,46)" rx="2" ry="2" />
<text  x="30.88" y="207.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>perf_ioctl (64 samples, 48.48%)</title><rect x="27.9" y="389" width="572.1" height="15.0" fill="rgb(246,101,0)" rx="2" ry="2" />
<text  x="30.88" y="399.5" >perf_ioctl</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.76%)</title><rect x="1011.2" y="565" width="9.0" height="15.0" fill="rgb(247,86,9)" rx="2" ry="2" />
<text  x="1014.21" y="575.5" ></text>
</g>
<g >
<title>__libc_start_main (65 samples, 49.24%)</title><rect x="18.9" y="549" width="581.1" height="15.0" fill="rgb(232,107,1)" rx="2" ry="2" />
<text  x="21.94" y="559.5" >__libc_start_main</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.76%)</title><rect x="984.4" y="469" width="8.9" height="15.0" fill="rgb(231,144,8)" rx="2" ry="2" />
<text  x="987.39" y="479.5" ></text>
</g>
<g >
<title>perf_event_task_output (1 samples, 0.76%)</title><rect x="1011.2" y="405" width="9.0" height="15.0" fill="rgb(242,43,32)" rx="2" ry="2" />
<text  x="1014.21" y="415.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 49.24%)</title><rect x="18.9" y="565" width="581.1" height="15.0" fill="rgb(210,24,28)" rx="2" ry="2" />
<text  x="21.94" y="575.5" >[unknown]</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.76%)</title><rect x="1002.3" y="533" width="8.9" height="15.0" fill="rgb(248,43,17)" rx="2" ry="2" />
<text  x="1005.27" y="543.5" ></text>
</g>
<g >
<title>rwsem_wake (1 samples, 0.76%)</title><rect x="930.8" y="117" width="8.9" height="15.0" fill="rgb(208,175,16)" rx="2" ry="2" />
<text  x="933.76" y="127.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.76%)</title><rect x="1011.2" y="485" width="9.0" height="15.0" fill="rgb(225,6,27)" rx="2" ry="2" />
<text  x="1014.21" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.76%)</title><rect x="18.9" y="453" width="9.0" height="15.0" fill="rgb(230,30,4)" rx="2" ry="2" />
<text  x="21.94" y="463.5" ></text>
</g>
<g >
<title>do_signal (1 samples, 0.76%)</title><rect x="1011.2" y="517" width="9.0" height="15.0" fill="rgb(242,181,35)" rx="2" ry="2" />
<text  x="1014.21" y="527.5" ></text>
</g>
<g >
<title>__put_user_4 (1 samples, 0.76%)</title><rect x="984.4" y="533" width="8.9" height="15.0" fill="rgb(223,54,2)" rx="2" ry="2" />
<text  x="987.39" y="543.5" ></text>
</g>
<g >
<title>sys_execve (1 samples, 0.76%)</title><rect x="600.0" y="437" width="8.9" height="15.0" fill="rgb(254,81,26)" rx="2" ry="2" />
<text  x="603.00" y="447.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (28 samples, 21.21%)</title><rect x="698.3" y="357" width="250.3" height="15.0" fill="rgb(212,101,40)" rx="2" ry="2" />
<text  x="701.33" y="367.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.76%)</title><rect x="930.8" y="85" width="8.9" height="15.0" fill="rgb(217,74,29)" rx="2" ry="2" />
<text  x="933.76" y="95.5" ></text>
</g>
<g >
<title>sys_mmap (1 samples, 0.76%)</title><rect x="1002.3" y="517" width="8.9" height="15.0" fill="rgb(243,9,32)" rx="2" ry="2" />
<text  x="1005.27" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.76%)</title><rect x="10.0" y="485" width="8.9" height="15.0" fill="rgb(206,9,39)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>__GI___execve (1 samples, 0.76%)</title><rect x="600.0" y="485" width="8.9" height="15.0" fill="rgb(224,192,12)" rx="2" ry="2" />
<text  x="603.00" y="495.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.76%)</title><rect x="1002.3" y="293" width="8.9" height="15.0" fill="rgb(209,218,4)" rx="2" ry="2" />
<text  x="1005.27" y="303.5" ></text>
</g>
<g >
<title>[perf-442.map] (31 samples, 23.48%)</title><rect x="680.5" y="533" width="277.1" height="15.0" fill="rgb(251,99,49)" rx="2" ry="2" />
<text  x="683.45" y="543.5" >[perf-442.map]</text>
</g>
<g >
<title>[sel_ldr] (1 samples, 0.76%)</title><rect x="680.5" y="485" width="8.9" height="15.0" fill="rgb(253,181,44)" rx="2" ry="2" />
<text  x="683.45" y="495.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.76%)</title><rect x="930.8" y="101" width="8.9" height="15.0" fill="rgb(230,82,33)" rx="2" ry="2" />
<text  x="933.76" y="111.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 28.79%)</title><rect x="644.7" y="565" width="339.7" height="15.0" fill="rgb(239,118,51)" rx="2" ry="2" />
<text  x="647.70" y="575.5" >[unknown]</text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.76%)</title><rect x="1181.1" y="437" width="8.9" height="15.0" fill="rgb(232,145,54)" rx="2" ry="2" />
<text  x="1184.06" y="447.5" ></text>
</g>
<g >
<title>[unknown]  (30 samples, 22.73%)</title><rect x="689.4" y="517" width="268.2" height="15.0" fill="rgb(225,98,28)" rx="2" ry="2" />
<text  x="692.39" y="527.5" >[unknown] </text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.76%)</title><rect x="1002.3" y="357" width="8.9" height="15.0" fill="rgb(237,70,15)" rx="2" ry="2" />
<text  x="1005.27" y="367.5" ></text>
</g>
<g >
<title>[unknown]  (30 samples, 22.73%)</title><rect x="689.4" y="501" width="268.2" height="15.0" fill="rgb(239,170,0)" rx="2" ry="2" />
<text  x="692.39" y="511.5" >[unknown] </text>
</g>
<g >
<title>sys_poll (1 samples, 0.76%)</title><rect x="18.9" y="437" width="9.0" height="15.0" fill="rgb(251,102,13)" rx="2" ry="2" />
<text  x="21.94" y="447.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 4.55%)</title><rect x="886.1" y="165" width="53.6" height="15.0" fill="rgb(235,43,8)" rx="2" ry="2" />
<text  x="889.06" y="175.5" >__do_..</text>
</g>
<g >
<title>[sel_ldr] (1 samples, 0.76%)</title><rect x="689.4" y="469" width="8.9" height="15.0" fill="rgb(229,213,46)" rx="2" ry="2" />
<text  x="692.39" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.76%)</title><rect x="984.4" y="453" width="8.9" height="15.0" fill="rgb(224,215,17)" rx="2" ry="2" />
<text  x="987.39" y="463.5" ></text>
</g>
<g >
<title>[sel_ldr] (28 samples, 21.21%)</title><rect x="698.3" y="373" width="250.3" height="15.0" fill="rgb(215,11,45)" rx="2" ry="2" />
<text  x="701.33" y="383.5" >[sel_ldr]</text>
</g>
<g >
<title>evlist__enable (64 samples, 48.48%)</title><rect x="27.9" y="485" width="572.1" height="15.0" fill="rgb(245,166,37)" rx="2" ry="2" />
<text  x="30.88" y="495.5" >evlist__enable</text>
</g>
<g >
<title>menu_select (2 samples, 1.52%)</title><rect x="1163.2" y="485" width="17.9" height="15.0" fill="rgb(245,222,40)" rx="2" ry="2" />
<text  x="1166.18" y="495.5" ></text>
</g>
<g >
<title>do_munmap (1 samples, 0.76%)</title><rect x="1002.3" y="437" width="8.9" height="15.0" fill="rgb(228,136,35)" rx="2" ry="2" />
<text  x="1005.27" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.76%)</title><rect x="1181.1" y="421" width="8.9" height="15.0" fill="rgb(228,130,44)" rx="2" ry="2" />
<text  x="1184.06" y="431.5" ></text>
</g>
<g >
<title>tuplesubscript.lto_priv.0 (1 samples, 0.76%)</title><rect x="975.5" y="549" width="8.9" height="15.0" fill="rgb(220,215,30)" rx="2" ry="2" />
<text  x="978.45" y="559.5" ></text>
</g>
<g >
<title>[unknown]  (29 samples, 21.97%)</title><rect x="698.3" y="453" width="259.3" height="15.0" fill="rgb(227,223,13)" rx="2" ry="2" />
<text  x="701.33" y="463.5" >[unknown] </text>
</g>
<g >
<title>NaClCopyInFromUser (1 samples, 0.76%)</title><rect x="689.4" y="405" width="8.9" height="15.0" fill="rgb(210,139,41)" rx="2" ry="2" />
<text  x="692.39" y="415.5" ></text>
</g>
<g >
<title>call_rwsem_wake (1 samples, 0.76%)</title><rect x="930.8" y="133" width="8.9" height="15.0" fill="rgb(213,106,5)" rx="2" ry="2" />
<text  x="933.76" y="143.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.76%)</title><rect x="1002.3" y="469" width="8.9" height="15.0" fill="rgb(229,53,40)" rx="2" ry="2" />
<text  x="1005.27" y="479.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.76%)</title><rect x="1002.3" y="341" width="8.9" height="15.0" fill="rgb(230,185,36)" rx="2" ry="2" />
<text  x="1005.27" y="351.5" ></text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.76%)</title><rect x="698.3" y="229" width="9.0" height="15.0" fill="rgb(218,161,48)" rx="2" ry="2" />
<text  x="701.33" y="239.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.76%)</title><rect x="1181.1" y="469" width="8.9" height="15.0" fill="rgb(236,74,12)" rx="2" ry="2" />
<text  x="1184.06" y="479.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.76%)</title><rect x="1011.2" y="469" width="9.0" height="15.0" fill="rgb(219,124,40)" rx="2" ry="2" />
<text  x="1014.21" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.76%)</title><rect x="1029.1" y="501" width="8.9" height="15.0" fill="rgb(249,93,10)" rx="2" ry="2" />
<text  x="1032.09" y="511.5" ></text>
</g>
<g >
<title>native_write_msr (48 samples, 36.36%)</title><rect x="27.9" y="181" width="429.1" height="15.0" fill="rgb(229,11,42)" rx="2" ry="2" />
<text  x="30.88" y="191.5" >native_write_msr</text>
</g>
<g >
<title>__libc_fork (1 samples, 0.76%)</title><rect x="984.4" y="565" width="8.9" height="15.0" fill="rgb(205,148,26)" rx="2" ry="2" />
<text  x="987.39" y="575.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.76%)</title><rect x="1011.2" y="501" width="9.0" height="15.0" fill="rgb(220,191,51)" rx="2" ry="2" />
<text  x="1014.21" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.76%)</title><rect x="1029.1" y="421" width="8.9" height="15.0" fill="rgb(244,118,19)" rx="2" ry="2" />
<text  x="1032.09" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.76%)</title><rect x="1011.2" y="549" width="9.0" height="15.0" fill="rgb(214,26,16)" rx="2" ry="2" />
<text  x="1014.21" y="559.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.76%)</title><rect x="680.5" y="389" width="8.9" height="15.0" fill="rgb(215,123,26)" rx="2" ry="2" />
<text  x="683.45" y="399.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 48.48%)</title><rect x="27.9" y="373" width="572.1" height="15.0" fill="rgb(247,118,13)" rx="2" ry="2" />
<text  x="30.88" y="383.5" >perf_event_for_each_child</text>
</g>
<g >
<title>NaClXMutexUnlock (1 samples, 0.76%)</title><rect x="689.4" y="373" width="8.9" height="15.0" fill="rgb(237,207,53)" rx="2" ry="2" />
<text  x="692.39" y="383.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.76%)</title><rect x="600.0" y="565" width="8.9" height="15.0" fill="rgb(237,94,20)" rx="2" ry="2" />
<text  x="603.00" y="575.5" ></text>
</g>
<g >
<title>perf (66 samples, 50.00%)</title><rect x="18.9" y="581" width="590.0" height="15.0" fill="rgb(213,99,45)" rx="2" ry="2" />
<text  x="21.94" y="591.5" >perf</text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 48.48%)</title><rect x="27.9" y="229" width="572.1" height="15.0" fill="rgb(220,42,35)" rx="2" ry="2" />
<text  x="30.88" y="239.5" >x86_pmu_enable</text>
</g>
<g >
<title>[unknown] (1 samples, 0.76%)</title><rect x="1029.1" y="533" width="8.9" height="15.0" fill="rgb(251,125,31)" rx="2" ry="2" />
<text  x="1032.09" y="543.5" ></text>
</g>
<g >
<title>perf_event_exit_task (1 samples, 0.76%)</title><rect x="1011.2" y="453" width="9.0" height="15.0" fill="rgb(226,34,22)" rx="2" ry="2" />
<text  x="1014.21" y="463.5" ></text>
</g>
<g >
<title>all (132 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(234,115,18)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>nmi_restore (15 samples, 11.36%)</title><rect x="465.9" y="181" width="134.1" height="15.0" fill="rgb(218,6,9)" rx="2" ry="2" />
<text  x="468.91" y="191.5" >nmi_restore</text>
</g>
<g >
<title>_PyObject_Str (1 samples, 0.76%)</title><rect x="966.5" y="549" width="9.0" height="15.0" fill="rgb(220,121,37)" rx="2" ry="2" />
<text  x="969.52" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.76%)</title><rect x="1029.1" y="437" width="8.9" height="15.0" fill="rgb(251,66,27)" rx="2" ry="2" />
<text  x="1032.09" y="447.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 0.76%)</title><rect x="1181.1" y="405" width="8.9" height="15.0" fill="rgb(217,88,23)" rx="2" ry="2" />
<text  x="1184.06" y="415.5" ></text>
</g>
<g >
<title>[unknown]  (29 samples, 21.97%)</title><rect x="698.3" y="405" width="259.3" height="15.0" fill="rgb(208,139,30)" rx="2" ry="2" />
<text  x="701.33" y="415.5" >[unknown] </text>
</g>
<g >
<title>NaClVmCopyEntry (5 samples, 3.79%)</title><rect x="707.3" y="213" width="44.7" height="15.0" fill="rgb(222,138,54)" rx="2" ry="2" />
<text  x="710.27" y="223.5" >NaCl..</text>
</g>
<g >
<title>NaClSysFork (28 samples, 21.21%)</title><rect x="698.3" y="325" width="250.3" height="15.0" fill="rgb(212,10,29)" rx="2" ry="2" />
<text  x="701.33" y="335.5" >NaClSysFork</text>
</g>
<g >
<title>cmd_record (1 samples, 0.76%)</title><rect x="600.0" y="517" width="8.9" height="15.0" fill="rgb(212,72,21)" rx="2" ry="2" />
<text  x="603.00" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.76%)</title><rect x="1029.1" y="453" width="8.9" height="15.0" fill="rgb(207,45,34)" rx="2" ry="2" />
<text  x="1032.09" y="463.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 3.03%)</title><rect x="895.0" y="133" width="35.8" height="15.0" fill="rgb(236,151,51)" rx="2" ry="2" />
<text  x="898.00" y="143.5" >__h..</text>
</g>
<g >
<title>error_entry (2 samples, 1.52%)</title><rect x="841.4" y="197" width="17.8" height="15.0" fill="rgb(233,29,44)" rx="2" ry="2" />
<text  x="844.36" y="207.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.76%)</title><rect x="10.0" y="549" width="8.9" height="15.0" fill="rgb(220,2,13)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.76%)</title><rect x="1181.1" y="485" width="8.9" height="15.0" fill="rgb(252,11,29)" rx="2" ry="2" />
<text  x="1184.06" y="495.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.76%)</title><rect x="903.9" y="117" width="9.0" height="15.0" fill="rgb(225,195,44)" rx="2" ry="2" />
<text  x="906.94" y="127.5" ></text>
</g>
<g >
<title>NaClPatchAddr (5 samples, 3.79%)</title><rect x="707.3" y="197" width="44.7" height="15.0" fill="rgb(221,85,19)" rx="2" ry="2" />
<text  x="710.27" y="207.5" >NaCl..</text>
</g>
<g >
<title>NaClSysDyncodeCreate (1 samples, 0.76%)</title><rect x="680.5" y="437" width="8.9" height="15.0" fill="rgb(227,160,7)" rx="2" ry="2" />
<text  x="683.45" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (14 samples, 10.61%)</title><rect x="1038.0" y="469" width="125.2" height="15.0" fill="rgb(254,2,41)" rx="2" ry="2" />
<text  x="1041.03" y="479.5" >cpuidle_enter_s..</text>
</g>
<g >
<title>xmalloc (1 samples, 0.76%)</title><rect x="10.0" y="565" width="8.9" height="15.0" fill="rgb(206,175,18)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (1 samples, 0.76%)</title><rect x="680.5" y="469" width="8.9" height="15.0" fill="rgb(239,222,38)" rx="2" ry="2" />
<text  x="683.45" y="479.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 48.48%)</title><rect x="27.9" y="293" width="572.1" height="15.0" fill="rgb(235,226,47)" rx="2" ry="2" />
<text  x="30.88" y="303.5" >remote_function</text>
</g>
<g >
<title>perf_evlist__prepare_workload (1 samples, 0.76%)</title><rect x="600.0" y="501" width="8.9" height="15.0" fill="rgb(247,124,40)" rx="2" ry="2" />
<text  x="603.00" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.76%)</title><rect x="984.4" y="389" width="8.9" height="15.0" fill="rgb(216,8,0)" rx="2" ry="2" />
<text  x="987.39" y="399.5" ></text>
</g>
<g >
<title>do_open_execat (1 samples, 0.76%)</title><rect x="600.0" y="405" width="8.9" height="15.0" fill="rgb(210,105,39)" rx="2" ry="2" />
<text  x="603.00" y="415.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.76%)</title><rect x="698.3" y="309" width="9.0" height="15.0" fill="rgb(218,73,49)" rx="2" ry="2" />
<text  x="701.33" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 1.52%)</title><rect x="912.9" y="117" width="17.9" height="15.0" fill="rgb(219,161,23)" rx="2" ry="2" />
<text  x="915.88" y="127.5" ></text>
</g>
<g >
<title>nmi_cpu_backtrace (1 samples, 0.76%)</title><rect x="457.0" y="181" width="8.9" height="15.0" fill="rgb(236,99,35)" rx="2" ry="2" />
<text  x="459.97" y="191.5" ></text>
</g>
<g >
<title>link_path_walk (1 samples, 0.76%)</title><rect x="600.0" y="357" width="8.9" height="15.0" fill="rgb(232,207,24)" rx="2" ry="2" />
<text  x="603.00" y="367.5" ></text>
</g>
<g >
<title>sys_mmap_pgoff (1 samples, 0.76%)</title><rect x="1002.3" y="501" width="8.9" height="15.0" fill="rgb(223,22,40)" rx="2" ry="2" />
<text  x="1005.27" y="511.5" ></text>
</g>
<g >
<title>cpu_startup_entry (16 samples, 12.12%)</title><rect x="1038.0" y="533" width="143.1" height="15.0" fill="rgb(221,13,39)" rx="2" ry="2" />
<text  x="1041.03" y="543.5" >cpu_startup_entry</text>
</g>
<g >
<title>PyNumber_Divide (1 samples, 0.76%)</title><rect x="662.6" y="549" width="8.9" height="15.0" fill="rgb(254,176,6)" rx="2" ry="2" />
<text  x="665.58" y="559.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.76%)</title><rect x="698.3" y="293" width="9.0" height="15.0" fill="rgb(244,146,52)" rx="2" ry="2" />
<text  x="701.33" y="303.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 0.76%)</title><rect x="1181.1" y="533" width="8.9" height="15.0" fill="rgb(249,83,1)" rx="2" ry="2" />
<text  x="1184.06" y="543.5" ></text>
</g>
<g >
<title>[unknown]  (1 samples, 0.76%)</title><rect x="948.6" y="373" width="9.0" height="15.0" fill="rgb(244,49,47)" rx="2" ry="2" />
<text  x="951.64" y="383.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.76%)</title><rect x="600.0" y="389" width="8.9" height="15.0" fill="rgb(220,103,39)" rx="2" ry="2" />
<text  x="603.00" y="399.5" ></text>
</g>
<g >
<title>lind (1 samples, 0.76%)</title><rect x="10.0" y="581" width="8.9" height="15.0" fill="rgb(222,113,14)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (27 samples, 20.45%)</title><rect x="707.3" y="261" width="241.3" height="15.0" fill="rgb(228,124,4)" rx="2" ry="2" />
<text  x="710.27" y="271.5" >NaClCopyExecutionContext</text>
</g>
<g >
<title>NaClCreateThread (27 samples, 20.45%)</title><rect x="707.3" y="309" width="241.3" height="15.0" fill="rgb(237,44,1)" rx="2" ry="2" />
<text  x="710.27" y="319.5" >NaClCreateThread</text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.76%)</title><rect x="600.0" y="421" width="8.9" height="15.0" fill="rgb(238,64,0)" rx="2" ry="2" />
<text  x="603.00" y="431.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (1 samples, 0.76%)</title><rect x="680.5" y="421" width="8.9" height="15.0" fill="rgb(243,138,33)" rx="2" ry="2" />
<text  x="683.45" y="431.5" ></text>
</g>
<g >
<title>intel_idle (14 samples, 10.61%)</title><rect x="1038.0" y="453" width="125.2" height="15.0" fill="rgb(213,150,18)" rx="2" ry="2" />
<text  x="1041.03" y="463.5" >intel_idle</text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.76%)</title><rect x="1002.3" y="309" width="8.9" height="15.0" fill="rgb(214,103,34)" rx="2" ry="2" />
<text  x="1005.27" y="319.5" ></text>
</g>
<g >
<title>cmd_record (65 samples, 49.24%)</title><rect x="18.9" y="501" width="581.1" height="15.0" fill="rgb(242,187,43)" rx="2" ry="2" />
<text  x="21.94" y="511.5" >cmd_record</text>
</g>
<g >
<title>[unknown]  (29 samples, 21.97%)</title><rect x="698.3" y="437" width="259.3" height="15.0" fill="rgb(232,192,42)" rx="2" ry="2" />
<text  x="701.33" y="447.5" >[unknown] </text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.76%)</title><rect x="984.4" y="421" width="8.9" height="15.0" fill="rgb(247,12,47)" rx="2" ry="2" />
<text  x="987.39" y="431.5" ></text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.76%)</title><rect x="680.5" y="405" width="8.9" height="15.0" fill="rgb(248,1,9)" rx="2" ry="2" />
<text  x="683.45" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 2.27%)</title><rect x="608.9" y="565" width="26.9" height="15.0" fill="rgb(209,44,15)" rx="2" ry="2" />
<text  x="611.94" y="575.5" >P..</text>
</g>
<g >
<title>main (1 samples, 0.76%)</title><rect x="600.0" y="549" width="8.9" height="15.0" fill="rgb(209,187,12)" rx="2" ry="2" />
<text  x="603.00" y="559.5" ></text>
</g>
<g >
<title>__GI___ioctl (64 samples, 48.48%)</title><rect x="27.9" y="469" width="572.1" height="15.0" fill="rgb(224,220,15)" rx="2" ry="2" />
<text  x="30.88" y="479.5" >__GI___ioctl</text>
</g>
<g >
<title>__mmap (1 samples, 0.76%)</title><rect x="1002.3" y="565" width="8.9" height="15.0" fill="rgb(212,74,10)" rx="2" ry="2" />
<text  x="1005.27" y="575.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (21 samples, 15.91%)</title><rect x="752.0" y="213" width="187.7" height="15.0" fill="rgb(211,32,15)" rx="2" ry="2" />
<text  x="754.97" y="223.5" >__memmove_avx_unaligned_..</text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.76%)</title><rect x="698.3" y="213" width="9.0" height="15.0" fill="rgb(219,185,46)" rx="2" ry="2" />
<text  x="701.33" y="223.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.76%)</title><rect x="18.9" y="389" width="9.0" height="15.0" fill="rgb(228,24,53)" rx="2" ry="2" />
<text  x="21.94" y="399.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.76%)</title><rect x="984.4" y="517" width="8.9" height="15.0" fill="rgb(238,49,35)" rx="2" ry="2" />
<text  x="987.39" y="527.5" ></text>
</g>
<g >
<title>hash_search (1 samples, 0.76%)</title><rect x="1020.2" y="565" width="8.9" height="15.0" fill="rgb(217,18,36)" rx="2" ry="2" />
<text  x="1023.15" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.76%)</title><rect x="653.6" y="549" width="9.0" height="15.0" fill="rgb(211,76,23)" rx="2" ry="2" />
<text  x="656.64" y="559.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 48.48%)</title><rect x="27.9" y="245" width="572.1" height="15.0" fill="rgb(237,82,40)" rx="2" ry="2" />
<text  x="30.88" y="255.5" >ctx_resched</text>
</g>
<g >
<title>_perf_event_enable (64 samples, 48.48%)</title><rect x="27.9" y="357" width="572.1" height="15.0" fill="rgb(211,42,1)" rx="2" ry="2" />
<text  x="30.88" y="367.5" >_perf_event_enable</text>
</g>
<g >
<title>generic_exec_single (64 samples, 48.48%)</title><rect x="27.9" y="309" width="572.1" height="15.0" fill="rgb(218,27,6)" rx="2" ry="2" />
<text  x="30.88" y="319.5" >generic_exec_single</text>
</g>
<g >
<title>run_builtin (1 samples, 0.76%)</title><rect x="600.0" y="533" width="8.9" height="15.0" fill="rgb(211,113,37)" rx="2" ry="2" />
<text  x="603.00" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 4.55%)</title><rect x="886.1" y="181" width="53.6" height="15.0" fill="rgb(237,171,26)" rx="2" ry="2" />
<text  x="889.06" y="191.5" >do_pa..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.76%)</title><rect x="1029.1" y="485" width="8.9" height="15.0" fill="rgb(220,103,21)" rx="2" ry="2" />
<text  x="1032.09" y="495.5" ></text>
</g>
<g >
<title>[unknown]  (29 samples, 21.97%)</title><rect x="698.3" y="389" width="259.3" height="15.0" fill="rgb(235,10,18)" rx="2" ry="2" />
<text  x="701.33" y="399.5" >[unknown] </text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.76%)</title><rect x="912.9" y="101" width="8.9" height="15.0" fill="rgb(227,192,15)" rx="2" ry="2" />
<text  x="915.88" y="111.5" ></text>
</g>
<g >
<title>event_function (64 samples, 48.48%)</title><rect x="27.9" y="277" width="572.1" height="15.0" fill="rgb(234,151,24)" rx="2" ry="2" />
<text  x="30.88" y="287.5" >event_function</text>
</g>
<g >
<title>path_openat (1 samples, 0.76%)</title><rect x="600.0" y="373" width="8.9" height="15.0" fill="rgb(245,188,3)" rx="2" ry="2" />
<text  x="603.00" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.76%)</title><rect x="671.5" y="533" width="9.0" height="15.0" fill="rgb(227,123,36)" rx="2" ry="2" />
<text  x="674.52" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.76%)</title><rect x="18.9" y="357" width="9.0" height="15.0" fill="rgb(214,110,26)" rx="2" ry="2" />
<text  x="21.94" y="367.5" ></text>
</g>
<g >
<title>cpuidle_enter (14 samples, 10.61%)</title><rect x="1038.0" y="485" width="125.2" height="15.0" fill="rgb(208,35,49)" rx="2" ry="2" />
<text  x="1041.03" y="495.5" >cpuidle_enter</text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.76%)</title><rect x="10.0" y="517" width="8.9" height="15.0" fill="rgb(243,122,51)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.76%)</title><rect x="1011.2" y="533" width="9.0" height="15.0" fill="rgb(236,1,41)" rx="2" ry="2" />
<text  x="1014.21" y="543.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.76%)</title><rect x="698.3" y="277" width="9.0" height="15.0" fill="rgb(208,63,26)" rx="2" ry="2" />
<text  x="701.33" y="287.5" ></text>
</g>
<g >
<title>cpuidle_select (2 samples, 1.52%)</title><rect x="1163.2" y="501" width="17.9" height="15.0" fill="rgb(216,137,17)" rx="2" ry="2" />
<text  x="1166.18" y="511.5" ></text>
</g>
<g >
<title>start_secondary (16 samples, 12.12%)</title><rect x="1038.0" y="549" width="143.1" height="15.0" fill="rgb(212,82,3)" rx="2" ry="2" />
<text  x="1041.03" y="559.5" >start_secondary</text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (1 samples, 0.76%)</title><rect x="680.5" y="453" width="8.9" height="15.0" fill="rgb(232,170,27)" rx="2" ry="2" />
<text  x="683.45" y="463.5" ></text>
</g>
<g >
<title>main (65 samples, 49.24%)</title><rect x="18.9" y="533" width="581.1" height="15.0" fill="rgb(211,28,7)" rx="2" ry="2" />
<text  x="21.94" y="543.5" >main</text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.76%)</title><rect x="903.9" y="85" width="9.0" height="15.0" fill="rgb(224,55,42)" rx="2" ry="2" />
<text  x="906.94" y="95.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.76%)</title><rect x="10.0" y="501" width="8.9" height="15.0" fill="rgb(214,113,47)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>vgetargskeywords (1 samples, 0.76%)</title><rect x="957.6" y="533" width="8.9" height="15.0" fill="rgb(231,198,3)" rx="2" ry="2" />
<text  x="960.58" y="543.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 3.79%)</title><rect x="886.1" y="149" width="44.7" height="15.0" fill="rgb(235,145,4)" rx="2" ry="2" />
<text  x="889.06" y="159.5" >hand..</text>
</g>
<g >
<title>event_function_call (64 samples, 48.48%)</title><rect x="27.9" y="341" width="572.1" height="15.0" fill="rgb(249,135,3)" rx="2" ry="2" />
<text  x="30.88" y="351.5" >event_function_call</text>
</g>
</g>
</svg>
