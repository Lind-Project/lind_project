<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="950.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="933" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="933" > </text>
<g id="frames">
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.05%)</title><rect x="662.1" y="661" width="12.4" height="15.0" fill="rgb(205,136,32)" rx="2" ry="2" />
<text  x="665.11" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (6 samples, 3.16%)</title><rect x="848.4" y="773" width="37.3" height="15.0" fill="rgb(209,182,49)" rx="2" ry="2" />
<text  x="851.42" y="783.5" >PyE..</text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 33.16%)</title><rect x="22.4" y="581" width="391.3" height="15.0" fill="rgb(240,87,54)" rx="2" ry="2" />
<text  x="25.42" y="591.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 2.11%)</title><rect x="817.4" y="677" width="24.8" height="15.0" fill="rgb(249,48,48)" rx="2" ry="2" />
<text  x="820.37" y="687.5" >P..</text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 1.05%)</title><rect x="1165.2" y="709" width="12.4" height="15.0" fill="rgb(242,223,40)" rx="2" ry="2" />
<text  x="1168.16" y="719.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6 samples, 3.16%)</title><rect x="742.8" y="757" width="37.3" height="15.0" fill="rgb(212,33,0)" rx="2" ry="2" />
<text  x="745.84" y="767.5" >__a..</text>
</g>
<g >
<title>exit_to_usermode_loop (9 samples, 4.74%)</title><rect x="885.7" y="837" width="55.9" height="15.0" fill="rgb(208,207,39)" rx="2" ry="2" />
<text  x="888.68" y="847.5" >exit_..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.53%)</title><rect x="985.1" y="805" width="6.2" height="15.0" fill="rgb(248,208,49)" rx="2" ry="2" />
<text  x="988.05" y="815.5" ></text>
</g>
<g >
<title>string_join.lto_priv.0 (2 samples, 1.05%)</title><rect x="662.1" y="565" width="12.4" height="15.0" fill="rgb(236,4,36)" rx="2" ry="2" />
<text  x="665.11" y="575.5" ></text>
</g>
<g >
<title>tick_irq_enter (1 samples, 0.53%)</title><rect x="1009.9" y="709" width="6.2" height="15.0" fill="rgb(249,166,24)" rx="2" ry="2" />
<text  x="1012.89" y="719.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (2 samples, 1.05%)</title><rect x="662.1" y="693" width="12.4" height="15.0" fill="rgb(206,104,23)" rx="2" ry="2" />
<text  x="665.11" y="703.5" ></text>
</g>
<g >
<title>PyImport_ExecCodeModuleEx (1 samples, 0.53%)</title><rect x="811.2" y="565" width="6.2" height="15.0" fill="rgb(253,211,34)" rx="2" ry="2" />
<text  x="814.16" y="575.5" ></text>
</g>
<g >
<title>ast_for_suite.lto_priv.0 (1 samples, 0.53%)</title><rect x="842.2" y="469" width="6.2" height="15.0" fill="rgb(222,212,25)" rx="2" ry="2" />
<text  x="845.21" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="842.2" y="725" width="6.2" height="15.0" fill="rgb(235,131,10)" rx="2" ry="2" />
<text  x="845.21" y="735.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (4 samples, 2.11%)</title><rect x="817.4" y="773" width="24.8" height="15.0" fill="rgb(235,39,23)" rx="2" ry="2" />
<text  x="820.37" y="783.5" >P..</text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.53%)</title><rect x="575.2" y="789" width="6.2" height="15.0" fill="rgb(216,10,13)" rx="2" ry="2" />
<text  x="578.16" y="799.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.53%)</title><rect x="488.2" y="741" width="6.2" height="15.0" fill="rgb(219,115,12)" rx="2" ry="2" />
<text  x="491.21" y="751.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.53%)</title><rect x="1183.8" y="773" width="6.2" height="15.0" fill="rgb(224,44,26)" rx="2" ry="2" />
<text  x="1186.79" y="783.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.53%)</title><rect x="1171.4" y="645" width="6.2" height="15.0" fill="rgb(245,155,27)" rx="2" ry="2" />
<text  x="1174.37" y="655.5" ></text>
</g>
<g >
<title>do_exit (9 samples, 4.74%)</title><rect x="885.7" y="773" width="55.9" height="15.0" fill="rgb(234,86,4)" rx="2" ry="2" />
<text  x="888.68" y="783.5" >do_exit</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 2.11%)</title><rect x="817.4" y="693" width="24.8" height="15.0" fill="rgb(234,63,27)" rx="2" ry="2" />
<text  x="820.37" y="703.5" >P..</text>
</g>
<g >
<title>sel_ldr (85 samples, 44.74%)</title><rect x="413.7" y="885" width="527.9" height="15.0" fill="rgb(224,101,39)" rx="2" ry="2" />
<text  x="416.68" y="895.5" >sel_ldr</text>
</g>
<g >
<title>ep_poll (1 samples, 0.53%)</title><rect x="985.1" y="821" width="6.2" height="15.0" fill="rgb(234,166,41)" rx="2" ry="2" />
<text  x="988.05" y="831.5" ></text>
</g>
<g >
<title>load_next (1 samples, 0.53%)</title><rect x="811.2" y="597" width="6.2" height="15.0" fill="rgb(254,181,28)" rx="2" ry="2" />
<text  x="814.16" y="607.5" ></text>
</g>
<g >
<title>ast_for_exprlist.isra.0 (1 samples, 0.53%)</title><rect x="842.2" y="437" width="6.2" height="15.0" fill="rgb(249,46,19)" rx="2" ry="2" />
<text  x="845.21" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="867.1" y="485" width="6.2" height="15.0" fill="rgb(235,132,5)" rx="2" ry="2" />
<text  x="870.05" y="495.5" ></text>
</g>
<g >
<title>page_fault (13 samples, 6.84%)</title><rect x="469.6" y="837" width="80.7" height="15.0" fill="rgb(210,163,19)" rx="2" ry="2" />
<text  x="472.58" y="847.5" >page_fault</text>
</g>
<g >
<title>call_cpuidle (27 samples, 14.21%)</title><rect x="1009.9" y="805" width="167.7" height="15.0" fill="rgb(251,94,14)" rx="2" ry="2" />
<text  x="1012.89" y="815.5" >call_cpuidle</text>
</g>
<g >
<title>handle_mm_fault (11 samples, 5.79%)</title><rect x="742.8" y="805" width="68.4" height="15.0" fill="rgb(243,135,46)" rx="2" ry="2" />
<text  x="745.84" y="815.5" >handle_..</text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.53%)</title><rect x="1171.4" y="549" width="6.2" height="15.0" fill="rgb(239,31,10)" rx="2" ry="2" />
<text  x="1174.37" y="559.5" ></text>
</g>
<g >
<title>function_call.lto_priv.0 (2 samples, 1.05%)</title><rect x="662.1" y="709" width="12.4" height="15.0" fill="rgb(214,117,43)" rx="2" ry="2" />
<text  x="665.11" y="719.5" ></text>
</g>
<g >
<title>NaClSysRead (2 samples, 1.05%)</title><rect x="662.1" y="821" width="12.4" height="15.0" fill="rgb(208,1,30)" rx="2" ry="2" />
<text  x="665.11" y="831.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.53%)</title><rect x="444.7" y="741" width="6.2" height="15.0" fill="rgb(220,220,47)" rx="2" ry="2" />
<text  x="447.74" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="811.2" y="517" width="6.2" height="15.0" fill="rgb(245,58,33)" rx="2" ry="2" />
<text  x="814.16" y="527.5" ></text>
</g>
<g >
<title>ast_for_stmt.lto_priv.0 (1 samples, 0.53%)</title><rect x="842.2" y="453" width="6.2" height="15.0" fill="rgb(238,153,52)" rx="2" ry="2" />
<text  x="845.21" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="811.2" y="245" width="6.2" height="15.0" fill="rgb(241,79,4)" rx="2" ry="2" />
<text  x="814.16" y="255.5" ></text>
</g>
<g >
<title>native_write_msr (47 samples, 24.74%)</title><rect x="103.2" y="549" width="291.9" height="15.0" fill="rgb(233,131,47)" rx="2" ry="2" />
<text  x="106.16" y="559.5" >native_write_msr</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="854.6" y="517" width="6.2" height="15.0" fill="rgb(234,90,6)" rx="2" ry="2" />
<text  x="857.63" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="674.5" y="677" width="6.2" height="15.0" fill="rgb(233,63,13)" rx="2" ry="2" />
<text  x="677.53" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 2.11%)</title><rect x="817.4" y="597" width="24.8" height="15.0" fill="rgb(250,182,49)" rx="2" ry="2" />
<text  x="820.37" y="607.5" >P..</text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.53%)</title><rect x="811.2" y="485" width="6.2" height="15.0" fill="rgb(251,220,52)" rx="2" ry="2" />
<text  x="814.16" y="495.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.53%)</title><rect x="1183.8" y="741" width="6.2" height="15.0" fill="rgb(253,78,20)" rx="2" ry="2" />
<text  x="1186.79" y="751.5" ></text>
</g>
<g >
<title>shmem_evict_inode (2 samples, 1.05%)</title><rect x="929.2" y="613" width="12.4" height="15.0" fill="rgb(224,192,23)" rx="2" ry="2" />
<text  x="932.16" y="623.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.53%)</title><rect x="1171.4" y="629" width="6.2" height="15.0" fill="rgb(215,225,31)" rx="2" ry="2" />
<text  x="1174.37" y="639.5" ></text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.53%)</title><rect x="811.2" y="645" width="6.2" height="15.0" fill="rgb(213,199,20)" rx="2" ry="2" />
<text  x="814.16" y="655.5" ></text>
</g>
<g >
<title>do_signal (9 samples, 4.74%)</title><rect x="885.7" y="821" width="55.9" height="15.0" fill="rgb(251,156,45)" rx="2" ry="2" />
<text  x="888.68" y="831.5" >do_si..</text>
</g>
<g >
<title>[_collections.so] (1 samples, 0.53%)</title><rect x="674.5" y="565" width="6.2" height="15.0" fill="rgb(223,92,54)" rx="2" ry="2" />
<text  x="677.53" y="575.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevel (1 samples, 0.53%)</title><rect x="811.2" y="773" width="6.2" height="15.0" fill="rgb(243,158,12)" rx="2" ry="2" />
<text  x="814.16" y="783.5" ></text>
</g>
<g >
<title>unmap_vmas (7 samples, 3.68%)</title><rect x="885.7" y="725" width="43.5" height="15.0" fill="rgb(239,30,17)" rx="2" ry="2" />
<text  x="888.68" y="735.5" >unma..</text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 0.53%)</title><rect x="1183.8" y="837" width="6.2" height="15.0" fill="rgb(219,215,30)" rx="2" ry="2" />
<text  x="1186.79" y="847.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (1 samples, 0.53%)</title><rect x="811.2" y="821" width="6.2" height="15.0" fill="rgb(235,30,43)" rx="2" ry="2" />
<text  x="814.16" y="831.5" ></text>
</g>
<g >
<title>crypto_shash_update (1 samples, 0.53%)</title><rect x="16.2" y="549" width="6.2" height="15.0" fill="rgb(235,125,31)" rx="2" ry="2" />
<text  x="19.21" y="559.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.53%)</title><rect x="444.7" y="789" width="6.2" height="15.0" fill="rgb(222,28,17)" rx="2" ry="2" />
<text  x="447.74" y="799.5" ></text>
</g>
<g >
<title>builtin_compile.lto_priv.0 (1 samples, 0.53%)</title><rect x="842.2" y="549" width="6.2" height="15.0" fill="rgb(217,30,49)" rx="2" ry="2" />
<text  x="845.21" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (4 samples, 2.11%)</title><rect x="817.4" y="725" width="24.8" height="15.0" fill="rgb(233,88,2)" rx="2" ry="2" />
<text  x="820.37" y="735.5" >P..</text>
</g>
<g >
<title>string_split.lto_priv.0 (2 samples, 1.05%)</title><rect x="873.3" y="581" width="12.4" height="15.0" fill="rgb(237,179,23)" rx="2" ry="2" />
<text  x="876.26" y="591.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (13 samples, 6.84%)</title><rect x="581.4" y="757" width="80.7" height="15.0" fill="rgb(226,191,10)" rx="2" ry="2" />
<text  x="584.37" y="767.5" >NaClCopyE..</text>
</g>
<g >
<title>unmap_single_vma (7 samples, 3.68%)</title><rect x="885.7" y="709" width="43.5" height="15.0" fill="rgb(215,145,53)" rx="2" ry="2" />
<text  x="888.68" y="719.5" >unma..</text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.53%)</title><rect x="674.5" y="725" width="6.2" height="15.0" fill="rgb(235,121,53)" rx="2" ry="2" />
<text  x="677.53" y="735.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (6 samples, 3.16%)</title><rect x="848.4" y="661" width="37.3" height="15.0" fill="rgb(251,63,32)" rx="2" ry="2" />
<text  x="851.42" y="671.5" >PyE..</text>
</g>
<g >
<title>do_page_fault (11 samples, 5.79%)</title><rect x="742.8" y="837" width="68.4" height="15.0" fill="rgb(228,210,2)" rx="2" ry="2" />
<text  x="745.84" y="847.5" >do_page..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 2.11%)</title><rect x="848.4" y="613" width="24.9" height="15.0" fill="rgb(253,165,15)" rx="2" ry="2" />
<text  x="851.42" y="623.5" >P..</text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.53%)</title><rect x="811.2" y="805" width="6.2" height="15.0" fill="rgb(239,152,27)" rx="2" ry="2" />
<text  x="814.16" y="815.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.53%)</title><rect x="544.1" y="789" width="6.2" height="15.0" fill="rgb(213,159,12)" rx="2" ry="2" />
<text  x="547.11" y="799.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.53%)</title><rect x="1183.8" y="789" width="6.2" height="15.0" fill="rgb(241,66,4)" rx="2" ry="2" />
<text  x="1186.79" y="799.5" ></text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.53%)</title><rect x="842.2" y="613" width="6.2" height="15.0" fill="rgb(208,20,21)" rx="2" ry="2" />
<text  x="845.21" y="623.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (2 samples, 1.05%)</title><rect x="662.1" y="805" width="12.4" height="15.0" fill="rgb(233,19,14)" rx="2" ry="2" />
<text  x="665.11" y="815.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (11 samples, 5.79%)</title><rect x="817.4" y="821" width="68.3" height="15.0" fill="rgb(215,26,23)" rx="2" ry="2" />
<text  x="820.37" y="831.5" >NaClSel..</text>
</g>
<g >
<title>NaClDescIoDescWrite (1 samples, 0.53%)</title><rect x="674.5" y="805" width="6.2" height="15.0" fill="rgb(225,83,44)" rx="2" ry="2" />
<text  x="677.53" y="815.5" ></text>
</g>
<g >
<title>cpu_startup_entry (28 samples, 14.74%)</title><rect x="1009.9" y="837" width="173.9" height="15.0" fill="rgb(251,228,20)" rx="2" ry="2" />
<text  x="1012.89" y="847.5" >cpu_startup_entry</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 2.11%)</title><rect x="817.4" y="613" width="24.8" height="15.0" fill="rgb(249,88,21)" rx="2" ry="2" />
<text  x="820.37" y="623.5" >P..</text>
</g>
<g >
<title>start_kernel (1 samples, 0.53%)</title><rect x="1183.8" y="821" width="6.2" height="15.0" fill="rgb(243,204,12)" rx="2" ry="2" />
<text  x="1186.79" y="831.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (2 samples, 1.05%)</title><rect x="662.1" y="597" width="12.4" height="15.0" fill="rgb(239,61,14)" rx="2" ry="2" />
<text  x="665.11" y="607.5" ></text>
</g>
<g >
<title>PyDict_GetItem (1 samples, 0.53%)</title><rect x="836.0" y="533" width="6.2" height="15.0" fill="rgb(213,53,54)" rx="2" ry="2" />
<text  x="839.00" y="543.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.53%)</title><rect x="475.8" y="789" width="6.2" height="15.0" fill="rgb(219,10,52)" rx="2" ry="2" />
<text  x="478.79" y="799.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.53%)</title><rect x="991.3" y="789" width="6.2" height="15.0" fill="rgb(242,64,21)" rx="2" ry="2" />
<text  x="994.26" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="811.2" y="229" width="6.2" height="15.0" fill="rgb(219,82,39)" rx="2" ry="2" />
<text  x="814.16" y="239.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.53%)</title><rect x="724.2" y="853" width="6.2" height="15.0" fill="rgb(219,185,29)" rx="2" ry="2" />
<text  x="727.21" y="863.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 1.05%)</title><rect x="1165.2" y="693" width="12.4" height="15.0" fill="rgb(242,206,17)" rx="2" ry="2" />
<text  x="1168.16" y="703.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.53%)</title><rect x="997.5" y="773" width="6.2" height="15.0" fill="rgb(212,153,22)" rx="2" ry="2" />
<text  x="1000.47" y="783.5" ></text>
</g>
<g >
<title>get_signal (9 samples, 4.74%)</title><rect x="885.7" y="805" width="55.9" height="15.0" fill="rgb(212,148,45)" rx="2" ry="2" />
<text  x="888.68" y="815.5" >get_s..</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.53%)</title><rect x="444.7" y="773" width="6.2" height="15.0" fill="rgb(249,213,10)" rx="2" ry="2" />
<text  x="447.74" y="783.5" ></text>
</g>
<g >
<title>kthread (3 samples, 1.58%)</title><rect x="991.3" y="853" width="18.6" height="15.0" fill="rgb(240,180,6)" rx="2" ry="2" />
<text  x="994.26" y="863.5" ></text>
</g>
<g >
<title>__do_page_fault (12 samples, 6.32%)</title><rect x="475.8" y="805" width="74.5" height="15.0" fill="rgb(226,43,3)" rx="2" ry="2" />
<text  x="478.79" y="815.5" >__do_pag..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="842.2" y="741" width="6.2" height="15.0" fill="rgb(211,210,39)" rx="2" ry="2" />
<text  x="845.21" y="751.5" ></text>
</g>
<g >
<title>PyImport_ExecCodeModuleEx (1 samples, 0.53%)</title><rect x="811.2" y="405" width="6.2" height="15.0" fill="rgb(214,42,16)" rx="2" ry="2" />
<text  x="814.16" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (6 samples, 3.16%)</title><rect x="848.4" y="757" width="37.3" height="15.0" fill="rgb(232,89,45)" rx="2" ry="2" />
<text  x="851.42" y="767.5" >PyE..</text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.53%)</title><rect x="842.2" y="693" width="6.2" height="15.0" fill="rgb(216,58,28)" rx="2" ry="2" />
<text  x="845.21" y="703.5" ></text>
</g>
<g >
<title>default_do_nmi (5 samples, 2.63%)</title><rect x="22.4" y="549" width="31.1" height="15.0" fill="rgb(241,9,33)" rx="2" ry="2" />
<text  x="25.42" y="559.5" >de..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 2.11%)</title><rect x="817.4" y="629" width="24.8" height="15.0" fill="rgb(219,190,54)" rx="2" ry="2" />
<text  x="820.37" y="639.5" >P..</text>
</g>
<g >
<title>PySequence_GetItem (1 samples, 0.53%)</title><rect x="550.3" y="853" width="6.2" height="15.0" fill="rgb(211,57,53)" rx="2" ry="2" />
<text  x="553.32" y="863.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (63 samples, 33.16%)</title><rect x="22.4" y="853" width="391.3" height="15.0" fill="rgb(215,2,48)" rx="2" ry="2" />
<text  x="25.42" y="863.5" >perf_evsel__run_ioctl</text>
</g>
<g >
<title>ext4_mark_inode_dirty (1 samples, 0.53%)</title><rect x="16.2" y="629" width="6.2" height="15.0" fill="rgb(217,169,34)" rx="2" ry="2" />
<text  x="19.21" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.53%)</title><rect x="985.1" y="869" width="6.2" height="15.0" fill="rgb(232,185,52)" rx="2" ry="2" />
<text  x="988.05" y="879.5" ></text>
</g>
<g >
<title>shmem_truncate_range (2 samples, 1.05%)</title><rect x="929.2" y="597" width="12.4" height="15.0" fill="rgb(227,56,39)" rx="2" ry="2" />
<text  x="932.16" y="607.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.53%)</title><rect x="16.2" y="677" width="6.2" height="15.0" fill="rgb(245,222,13)" rx="2" ry="2" />
<text  x="19.21" y="687.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.53%)</title><rect x="500.6" y="725" width="6.2" height="15.0" fill="rgb(244,85,24)" rx="2" ry="2" />
<text  x="503.63" y="735.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (2 samples, 1.05%)</title><rect x="662.1" y="629" width="12.4" height="15.0" fill="rgb(224,165,37)" rx="2" ry="2" />
<text  x="665.11" y="639.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.53%)</title><rect x="444.7" y="677" width="6.2" height="15.0" fill="rgb(216,155,20)" rx="2" ry="2" />
<text  x="447.74" y="687.5" ></text>
</g>
<g >
<title>PyThread_release_lock (1 samples, 0.53%)</title><rect x="823.6" y="549" width="6.2" height="15.0" fill="rgb(214,119,10)" rx="2" ry="2" />
<text  x="826.58" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 4.74%)</title><rect x="885.7" y="869" width="55.9" height="15.0" fill="rgb(221,34,37)" rx="2" ry="2" />
<text  x="888.68" y="879.5" >entry..</text>
</g>
<g >
<title>sync_regs (1 samples, 0.53%)</title><rect x="457.2" y="821" width="6.2" height="15.0" fill="rgb(207,128,32)" rx="2" ry="2" />
<text  x="460.16" y="831.5" ></text>
</g>
<g >
<title>__do_page_fault (11 samples, 5.79%)</title><rect x="742.8" y="821" width="68.4" height="15.0" fill="rgb(223,106,44)" rx="2" ry="2" />
<text  x="745.84" y="831.5" >__do_pa..</text>
</g>
<g >
<title>generic_exec_single (63 samples, 33.16%)</title><rect x="22.4" y="677" width="391.3" height="15.0" fill="rgb(226,58,20)" rx="2" ry="2" />
<text  x="25.42" y="687.5" >generic_exec_single</text>
</g>
<g >
<title>do_page_fault (12 samples, 6.32%)</title><rect x="475.8" y="821" width="74.5" height="15.0" fill="rgb(214,0,20)" rx="2" ry="2" />
<text  x="478.79" y="831.5" >do_page_..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="811.2" y="677" width="6.2" height="15.0" fill="rgb(250,130,17)" rx="2" ry="2" />
<text  x="814.16" y="687.5" ></text>
</g>
<g >
<title>all (190 samples, 100%)</title><rect x="10.0" y="901" width="1180.0" height="15.0" fill="rgb(254,60,47)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="842.2" y="565" width="6.2" height="15.0" fill="rgb(246,125,15)" rx="2" ry="2" />
<text  x="845.21" y="575.5" ></text>
</g>
<g >
<title>function_call.lto_priv.0 (1 samples, 0.53%)</title><rect x="674.5" y="709" width="6.2" height="15.0" fill="rgb(235,112,1)" rx="2" ry="2" />
<text  x="677.53" y="719.5" ></text>
</g>
<g >
<title>__vfs_write (1 samples, 0.53%)</title><rect x="16.2" y="773" width="6.2" height="15.0" fill="rgb(214,211,34)" rx="2" ry="2" />
<text  x="19.21" y="783.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.53%)</title><rect x="804.9" y="757" width="6.3" height="15.0" fill="rgb(244,65,51)" rx="2" ry="2" />
<text  x="807.95" y="767.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.53%)</title><rect x="16.2" y="709" width="6.2" height="15.0" fill="rgb(246,137,18)" rx="2" ry="2" />
<text  x="19.21" y="719.5" ></text>
</g>
<g >
<title>evict (2 samples, 1.05%)</title><rect x="929.2" y="629" width="12.4" height="15.0" fill="rgb(228,97,11)" rx="2" ry="2" />
<text  x="932.16" y="639.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.53%)</title><rect x="575.2" y="757" width="6.2" height="15.0" fill="rgb(236,90,45)" rx="2" ry="2" />
<text  x="578.16" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 2.11%)</title><rect x="817.4" y="661" width="24.8" height="15.0" fill="rgb(237,115,33)" rx="2" ry="2" />
<text  x="820.37" y="671.5" >P..</text>
</g>
<g >
<title>ast_for_funcdef.lto_priv.0 (1 samples, 0.53%)</title><rect x="842.2" y="485" width="6.2" height="15.0" fill="rgb(245,75,24)" rx="2" ry="2" />
<text  x="845.21" y="495.5" ></text>
</g>
<g >
<title>shmem_undo_range (2 samples, 1.05%)</title><rect x="929.2" y="581" width="12.4" height="15.0" fill="rgb(229,145,45)" rx="2" ry="2" />
<text  x="932.16" y="591.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (2 samples, 1.05%)</title><rect x="662.1" y="741" width="12.4" height="15.0" fill="rgb(238,86,10)" rx="2" ry="2" />
<text  x="665.11" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="811.2" y="181" width="6.2" height="15.0" fill="rgb(253,20,43)" rx="2" ry="2" />
<text  x="814.16" y="191.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 2.11%)</title><rect x="817.4" y="709" width="24.8" height="15.0" fill="rgb(245,179,48)" rx="2" ry="2" />
<text  x="820.37" y="719.5" >P..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 2.11%)</title><rect x="848.4" y="581" width="24.9" height="15.0" fill="rgb(213,118,14)" rx="2" ry="2" />
<text  x="851.42" y="591.5" >P..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.53%)</title><rect x="16.2" y="837" width="6.2" height="15.0" fill="rgb(219,43,31)" rx="2" ry="2" />
<text  x="19.21" y="847.5" ></text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.53%)</title><rect x="811.2" y="117" width="6.2" height="15.0" fill="rgb(245,152,18)" rx="2" ry="2" />
<text  x="814.16" y="127.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (1 samples, 0.53%)</title><rect x="1009.9" y="693" width="6.2" height="15.0" fill="rgb(208,63,40)" rx="2" ry="2" />
<text  x="1012.89" y="703.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (1 samples, 0.53%)</title><rect x="444.7" y="869" width="6.2" height="15.0" fill="rgb(240,140,12)" rx="2" ry="2" />
<text  x="447.74" y="879.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.05%)</title><rect x="873.3" y="645" width="12.4" height="15.0" fill="rgb(249,87,41)" rx="2" ry="2" />
<text  x="876.26" y="655.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.53%)</title><rect x="444.7" y="853" width="6.2" height="15.0" fill="rgb(248,66,13)" rx="2" ry="2" />
<text  x="447.74" y="863.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.05%)</title><rect x="873.3" y="597" width="12.4" height="15.0" fill="rgb(209,223,42)" rx="2" ry="2" />
<text  x="876.26" y="607.5" ></text>
</g>
<g >
<title>handle_mm_fault (10 samples, 5.26%)</title><rect x="482.0" y="789" width="62.1" height="15.0" fill="rgb(234,51,31)" rx="2" ry="2" />
<text  x="485.00" y="799.5" >handle..</text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (2 samples, 1.05%)</title><rect x="568.9" y="837" width="12.5" height="15.0" fill="rgb(220,3,23)" rx="2" ry="2" />
<text  x="571.95" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="867.1" y="469" width="6.2" height="15.0" fill="rgb(239,13,21)" rx="2" ry="2" />
<text  x="870.05" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="811.2" y="853" width="6.2" height="15.0" fill="rgb(235,130,51)" rx="2" ry="2" />
<text  x="814.16" y="863.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 1.05%)</title><rect x="749.1" y="741" width="12.4" height="15.0" fill="rgb(205,82,21)" rx="2" ry="2" />
<text  x="752.05" y="751.5" ></text>
</g>
<g >
<title>PyObject_Call (4 samples, 2.11%)</title><rect x="817.4" y="757" width="24.8" height="15.0" fill="rgb(226,2,46)" rx="2" ry="2" />
<text  x="820.37" y="767.5" >P..</text>
</g>
<g >
<title>perf (65 samples, 34.21%)</title><rect x="10.0" y="885" width="403.7" height="15.0" fill="rgb(211,181,12)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >perf</text>
</g>
<g >
<title>filemap_map_pages (5 samples, 2.63%)</title><rect x="513.1" y="757" width="31.0" height="15.0" fill="rgb(222,42,49)" rx="2" ry="2" />
<text  x="516.05" y="767.5" >fi..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.05%)</title><rect x="860.8" y="517" width="12.5" height="15.0" fill="rgb(245,23,40)" rx="2" ry="2" />
<text  x="863.84" y="527.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="811.2" y="373" width="6.2" height="15.0" fill="rgb(241,214,51)" rx="2" ry="2" />
<text  x="814.16" y="383.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.53%)</title><rect x="804.9" y="773" width="6.3" height="15.0" fill="rgb(246,48,21)" rx="2" ry="2" />
<text  x="807.95" y="783.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.53%)</title><rect x="16.2" y="645" width="6.2" height="15.0" fill="rgb(252,164,18)" rx="2" ry="2" />
<text  x="19.21" y="655.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (13 samples, 6.84%)</title><rect x="581.4" y="837" width="80.7" height="15.0" fill="rgb(216,89,11)" rx="2" ry="2" />
<text  x="584.37" y="847.5" >NaClSysFo..</text>
</g>
<g >
<title>PyEval_EvalCode (1 samples, 0.53%)</title><rect x="811.2" y="549" width="6.2" height="15.0" fill="rgb(221,11,7)" rx="2" ry="2" />
<text  x="814.16" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.53%)</title><rect x="562.7" y="725" width="6.2" height="15.0" fill="rgb(241,49,9)" rx="2" ry="2" />
<text  x="565.74" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (1 samples, 0.53%)</title><rect x="811.2" y="133" width="6.2" height="15.0" fill="rgb(223,72,40)" rx="2" ry="2" />
<text  x="814.16" y="143.5" ></text>
</g>
<g >
<title>__GI___mprotect (1 samples, 0.53%)</title><rect x="674.5" y="485" width="6.2" height="15.0" fill="rgb(205,51,46)" rx="2" ry="2" />
<text  x="677.53" y="495.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10 samples, 5.26%)</title><rect x="482.0" y="773" width="62.1" height="15.0" fill="rgb(210,91,37)" rx="2" ry="2" />
<text  x="485.00" y="783.5" >__hand..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="848.4" y="549" width="6.2" height="15.0" fill="rgb(232,66,38)" rx="2" ry="2" />
<text  x="851.42" y="559.5" ></text>
</g>
<g >
<title>load_next (1 samples, 0.53%)</title><rect x="811.2" y="757" width="6.2" height="15.0" fill="rgb(241,209,50)" rx="2" ry="2" />
<text  x="814.16" y="767.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (27 samples, 14.21%)</title><rect x="1009.9" y="773" width="167.7" height="15.0" fill="rgb(246,143,25)" rx="2" ry="2" />
<text  x="1012.89" y="783.5" >cpuidle_enter_state</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.53%)</title><rect x="450.9" y="853" width="6.3" height="15.0" fill="rgb(221,226,52)" rx="2" ry="2" />
<text  x="453.95" y="863.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 2.11%)</title><rect x="848.4" y="565" width="24.9" height="15.0" fill="rgb(219,205,37)" rx="2" ry="2" />
<text  x="851.42" y="575.5" >P..</text>
</g>
<g >
<title>function_call.lto_priv.0 (4 samples, 2.11%)</title><rect x="817.4" y="741" width="24.8" height="15.0" fill="rgb(232,203,54)" rx="2" ry="2" />
<text  x="820.37" y="751.5" >f..</text>
</g>
<g >
<title>ext4_inode_csum_set (1 samples, 0.53%)</title><rect x="16.2" y="581" width="6.2" height="15.0" fill="rgb(226,27,24)" rx="2" ry="2" />
<text  x="19.21" y="591.5" ></text>
</g>
<g >
<title>____fput (2 samples, 1.05%)</title><rect x="929.2" y="741" width="12.4" height="15.0" fill="rgb(241,107,3)" rx="2" ry="2" />
<text  x="932.16" y="751.5" ></text>
</g>
<g >
<title>call_cpuidle (1 samples, 0.53%)</title><rect x="1183.8" y="757" width="6.2" height="15.0" fill="rgb(247,126,38)" rx="2" ry="2" />
<text  x="1186.79" y="767.5" ></text>
</g>
<g >
<title>iter_iternext.lto_priv.0 (1 samples, 0.53%)</title><rect x="811.2" y="165" width="6.2" height="15.0" fill="rgb(239,83,38)" rx="2" ry="2" />
<text  x="814.16" y="175.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (1 samples, 0.53%)</title><rect x="450.9" y="869" width="6.3" height="15.0" fill="rgb(237,185,53)" rx="2" ry="2" />
<text  x="453.95" y="879.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.05%)</title><rect x="662.1" y="677" width="12.4" height="15.0" fill="rgb(216,53,36)" rx="2" ry="2" />
<text  x="665.11" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="811.2" y="261" width="6.2" height="15.0" fill="rgb(206,18,17)" rx="2" ry="2" />
<text  x="814.16" y="271.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.53%)</title><rect x="16.2" y="789" width="6.2" height="15.0" fill="rgb(239,173,42)" rx="2" ry="2" />
<text  x="19.21" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.53%)</title><rect x="16.2" y="821" width="6.2" height="15.0" fill="rgb(245,217,49)" rx="2" ry="2" />
<text  x="19.21" y="831.5" ></text>
</g>
<g >
<title>instancemethod_call.lto_priv.0 (1 samples, 0.53%)</title><rect x="842.2" y="629" width="6.2" height="15.0" fill="rgb(237,73,2)" rx="2" ry="2" />
<text  x="845.21" y="639.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.53%)</title><rect x="997.5" y="741" width="6.2" height="15.0" fill="rgb(209,157,43)" rx="2" ry="2" />
<text  x="1000.47" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="842.2" y="581" width="6.2" height="15.0" fill="rgb(243,38,41)" rx="2" ry="2" />
<text  x="845.21" y="591.5" ></text>
</g>
<g >
<title>schedule_timeout (2 samples, 1.05%)</title><rect x="997.5" y="821" width="12.4" height="15.0" fill="rgb(242,209,35)" rx="2" ry="2" />
<text  x="1000.47" y="831.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.53%)</title><rect x="444.7" y="725" width="6.2" height="15.0" fill="rgb(246,179,6)" rx="2" ry="2" />
<text  x="447.74" y="735.5" ></text>
</g>
<g >
<title>truncate_inode_page (2 samples, 1.05%)</title><rect x="929.2" y="565" width="12.4" height="15.0" fill="rgb(224,172,11)" rx="2" ry="2" />
<text  x="932.16" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="811.2" y="357" width="6.2" height="15.0" fill="rgb(249,188,0)" rx="2" ry="2" />
<text  x="814.16" y="367.5" ></text>
</g>
<g >
<title>schedule (2 samples, 1.05%)</title><rect x="997.5" y="805" width="12.4" height="15.0" fill="rgb(224,121,28)" rx="2" ry="2" />
<text  x="1000.47" y="815.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.53%)</title><rect x="1171.4" y="581" width="6.2" height="15.0" fill="rgb(222,129,25)" rx="2" ry="2" />
<text  x="1174.37" y="591.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 0.53%)</title><rect x="1183.8" y="853" width="6.2" height="15.0" fill="rgb(226,83,4)" rx="2" ry="2" />
<text  x="1186.79" y="863.5" ></text>
</g>
<g >
<title>__new_sem_post (1 samples, 0.53%)</title><rect x="823.6" y="533" width="6.2" height="15.0" fill="rgb(235,88,32)" rx="2" ry="2" />
<text  x="826.58" y="543.5" ></text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.53%)</title><rect x="842.2" y="773" width="6.2" height="15.0" fill="rgb(211,110,54)" rx="2" ry="2" />
<text  x="845.21" y="783.5" ></text>
</g>
<g >
<title>page_remove_rmap (2 samples, 1.05%)</title><rect x="904.3" y="677" width="12.4" height="15.0" fill="rgb(249,109,6)" rx="2" ry="2" />
<text  x="907.32" y="687.5" ></text>
</g>
<g >
<title>swapper (40 samples, 21.05%)</title><rect x="941.6" y="885" width="248.4" height="15.0" fill="rgb(207,143,33)" rx="2" ry="2" />
<text  x="944.58" y="895.5" >swapper</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.53%)</title><rect x="444.7" y="645" width="6.2" height="15.0" fill="rgb(227,114,46)" rx="2" ry="2" />
<text  x="447.74" y="655.5" ></text>
</g>
<g >
<title>[itertools.so] (1 samples, 0.53%)</title><rect x="668.3" y="501" width="6.2" height="15.0" fill="rgb(226,15,26)" rx="2" ry="2" />
<text  x="671.32" y="511.5" ></text>
</g>
<g >
<title>NaClVmCopyEntry (15 samples, 7.89%)</title><rect x="457.2" y="869" width="93.1" height="15.0" fill="rgb(233,17,12)" rx="2" ry="2" />
<text  x="460.16" y="879.5" >NaClVmCopyE..</text>
</g>
<g >
<title>NaClCreateThread (13 samples, 6.84%)</title><rect x="581.4" y="805" width="80.7" height="15.0" fill="rgb(222,46,28)" rx="2" ry="2" />
<text  x="584.37" y="815.5" >NaClCreat..</text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.53%)</title><rect x="575.2" y="773" width="6.2" height="15.0" fill="rgb(227,222,4)" rx="2" ry="2" />
<text  x="578.16" y="783.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.53%)</title><rect x="991.3" y="805" width="6.2" height="15.0" fill="rgb(247,49,34)" rx="2" ry="2" />
<text  x="994.26" y="815.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (15 samples, 7.89%)</title><rect x="457.2" y="853" width="93.1" height="15.0" fill="rgb(205,71,26)" rx="2" ry="2" />
<text  x="460.16" y="863.5" >__memmove_a..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="811.2" y="277" width="6.2" height="15.0" fill="rgb(226,205,20)" rx="2" ry="2" />
<text  x="814.16" y="287.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="842.2" y="709" width="6.2" height="15.0" fill="rgb(252,48,32)" rx="2" ry="2" />
<text  x="845.21" y="719.5" ></text>
</g>
<g >
<title>builtin___import__.lto_priv.0 (1 samples, 0.53%)</title><rect x="811.2" y="469" width="6.2" height="15.0" fill="rgb(213,11,18)" rx="2" ry="2" />
<text  x="814.16" y="479.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.53%)</title><rect x="898.1" y="677" width="6.2" height="15.0" fill="rgb(248,64,38)" rx="2" ry="2" />
<text  x="901.11" y="687.5" ></text>
</g>
<g >
<title>instancemethod_call.lto_priv.0 (1 samples, 0.53%)</title><rect x="811.2" y="101" width="6.2" height="15.0" fill="rgb(214,213,41)" rx="2" ry="2" />
<text  x="814.16" y="111.5" ></text>
</g>
<g >
<title>sys_ioctl (63 samples, 33.16%)</title><rect x="22.4" y="789" width="391.3" height="15.0" fill="rgb(226,19,30)" rx="2" ry="2" />
<text  x="25.42" y="799.5" >sys_ioctl</text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 1.58%)</title><rect x="854.6" y="549" width="18.7" height="15.0" fill="rgb(240,68,31)" rx="2" ry="2" />
<text  x="857.63" y="559.5" ></text>
</g>
<g >
<title>function_call.lto_priv.0 (1 samples, 0.53%)</title><rect x="842.2" y="757" width="6.2" height="15.0" fill="rgb(222,45,54)" rx="2" ry="2" />
<text  x="845.21" y="767.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (3 samples, 1.58%)</title><rect x="991.3" y="837" width="18.6" height="15.0" fill="rgb(252,100,7)" rx="2" ry="2" />
<text  x="994.26" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="836.0" y="565" width="6.2" height="15.0" fill="rgb(235,138,53)" rx="2" ry="2" />
<text  x="839.00" y="575.5" ></text>
</g>
<g >
<title>get_task_policy.part.31 (1 samples, 0.53%)</title><rect x="506.8" y="725" width="6.3" height="15.0" fill="rgb(227,125,43)" rx="2" ry="2" />
<text  x="509.84" y="735.5" ></text>
</g>
<g >
<title>error_entry (3 samples, 1.58%)</title><rect x="705.6" y="853" width="18.6" height="15.0" fill="rgb(251,75,52)" rx="2" ry="2" />
<text  x="708.58" y="863.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.53%)</title><rect x="16.2" y="693" width="6.2" height="15.0" fill="rgb(216,44,4)" rx="2" ry="2" />
<text  x="19.21" y="703.5" ></text>
</g>
<g >
<title>PyString_InternFromString (1 samples, 0.53%)</title><rect x="842.2" y="405" width="6.2" height="15.0" fill="rgb(238,202,53)" rx="2" ry="2" />
<text  x="845.21" y="415.5" ></text>
</g>
<g >
<title>[itertools.so] (1 samples, 0.53%)</title><rect x="556.5" y="853" width="6.2" height="15.0" fill="rgb(211,121,11)" rx="2" ry="2" />
<text  x="559.53" y="863.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="811.2" y="309" width="6.2" height="15.0" fill="rgb(208,9,6)" rx="2" ry="2" />
<text  x="814.16" y="319.5" ></text>
</g>
<g >
<title>CallPythonFunc (1 samples, 0.53%)</title><rect x="674.5" y="757" width="6.2" height="15.0" fill="rgb(227,219,52)" rx="2" ry="2" />
<text  x="677.53" y="767.5" ></text>
</g>
<g >
<title>PySequence_List (1 samples, 0.53%)</title><rect x="668.3" y="533" width="6.2" height="15.0" fill="rgb(235,66,26)" rx="2" ry="2" />
<text  x="671.32" y="543.5" ></text>
</g>
<g >
<title>PyFrame_New (1 samples, 0.53%)</title><rect x="836.0" y="549" width="6.2" height="15.0" fill="rgb(213,65,26)" rx="2" ry="2" />
<text  x="839.00" y="559.5" ></text>
</g>
<g >
<title>__libc_start_main (11 samples, 5.79%)</title><rect x="817.4" y="853" width="68.3" height="15.0" fill="rgb(230,184,49)" rx="2" ry="2" />
<text  x="820.37" y="863.5" >__libc_..</text>
</g>
<g >
<title>nmi_handle (1 samples, 0.53%)</title><rect x="407.5" y="549" width="6.2" height="15.0" fill="rgb(238,20,2)" rx="2" ry="2" />
<text  x="410.47" y="559.5" ></text>
</g>
<g >
<title>mmput (7 samples, 3.68%)</title><rect x="885.7" y="757" width="43.5" height="15.0" fill="rgb(226,116,20)" rx="2" ry="2" />
<text  x="888.68" y="767.5" >mmput</text>
</g>
<g >
<title>smp_call_function_single (63 samples, 33.16%)</title><rect x="22.4" y="693" width="391.3" height="15.0" fill="rgb(238,13,5)" rx="2" ry="2" />
<text  x="25.42" y="703.5" >smp_call_function_single</text>
</g>
<g >
<title>cpuidle_enter (27 samples, 14.21%)</title><rect x="1009.9" y="789" width="167.7" height="15.0" fill="rgb(215,82,53)" rx="2" ry="2" />
<text  x="1012.89" y="799.5" >cpuidle_enter</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="854.6" y="501" width="6.2" height="15.0" fill="rgb(243,204,3)" rx="2" ry="2" />
<text  x="857.63" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.05%)</title><rect x="662.1" y="581" width="12.4" height="15.0" fill="rgb(230,38,54)" rx="2" ry="2" />
<text  x="665.11" y="591.5" ></text>
</g>
<g >
<title>event_function (63 samples, 33.16%)</title><rect x="22.4" y="645" width="391.3" height="15.0" fill="rgb(215,210,23)" rx="2" ry="2" />
<text  x="25.42" y="655.5" >event_function</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (63 samples, 33.16%)</title><rect x="22.4" y="821" width="391.3" height="15.0" fill="rgb(241,121,46)" rx="2" ry="2" />
<text  x="25.42" y="831.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="811.2" y="837" width="6.2" height="15.0" fill="rgb(227,2,3)" rx="2" ry="2" />
<text  x="814.16" y="847.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.53%)</title><rect x="1177.6" y="789" width="6.2" height="15.0" fill="rgb(229,75,6)" rx="2" ry="2" />
<text  x="1180.58" y="799.5" ></text>
</g>
<g >
<title>intel_idle (24 samples, 12.63%)</title><rect x="1016.1" y="757" width="149.1" height="15.0" fill="rgb(218,132,4)" rx="2" ry="2" />
<text  x="1019.11" y="767.5" >intel_idle</text>
</g>
<g >
<title>_int_malloc (1 samples, 0.53%)</title><rect x="674.5" y="517" width="6.2" height="15.0" fill="rgb(229,9,24)" rx="2" ry="2" />
<text  x="677.53" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 1.05%)</title><rect x="873.3" y="549" width="12.4" height="15.0" fill="rgb(233,73,46)" rx="2" ry="2" />
<text  x="876.26" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (4 samples, 2.11%)</title><rect x="848.4" y="645" width="24.9" height="15.0" fill="rgb(250,1,26)" rx="2" ry="2" />
<text  x="851.42" y="655.5" >P..</text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 1.58%)</title><rect x="761.5" y="741" width="18.6" height="15.0" fill="rgb(215,133,10)" rx="2" ry="2" />
<text  x="764.47" y="751.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 1.05%)</title><rect x="786.3" y="757" width="12.4" height="15.0" fill="rgb(252,65,7)" rx="2" ry="2" />
<text  x="789.32" y="767.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.53%)</title><rect x="16.2" y="757" width="6.2" height="15.0" fill="rgb(226,0,38)" rx="2" ry="2" />
<text  x="19.21" y="767.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (3 samples, 1.58%)</title><rect x="780.1" y="773" width="18.6" height="15.0" fill="rgb(219,140,35)" rx="2" ry="2" />
<text  x="783.11" y="783.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 1.05%)</title><rect x="916.7" y="629" width="12.5" height="15.0" fill="rgb(221,187,2)" rx="2" ry="2" />
<text  x="919.74" y="639.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.53%)</title><rect x="444.7" y="757" width="6.2" height="15.0" fill="rgb(232,131,8)" rx="2" ry="2" />
<text  x="447.74" y="767.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.53%)</title><rect x="537.9" y="741" width="6.2" height="15.0" fill="rgb(227,142,39)" rx="2" ry="2" />
<text  x="540.89" y="751.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (1 samples, 0.53%)</title><rect x="811.2" y="661" width="6.2" height="15.0" fill="rgb(207,19,49)" rx="2" ry="2" />
<text  x="814.16" y="671.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.56 (1 samples, 0.53%)</title><rect x="16.2" y="565" width="6.2" height="15.0" fill="rgb(244,62,50)" rx="2" ry="2" />
<text  x="19.21" y="575.5" ></text>
</g>
<g >
<title>PyDict_GetItem (1 samples, 0.53%)</title><rect x="842.2" y="373" width="6.2" height="15.0" fill="rgb(234,79,29)" rx="2" ry="2" />
<text  x="845.21" y="383.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.53%)</title><rect x="674.5" y="469" width="6.2" height="15.0" fill="rgb(208,71,45)" rx="2" ry="2" />
<text  x="677.53" y="479.5" ></text>
</g>
<g >
<title>builtin___import__.lto_priv.0 (1 samples, 0.53%)</title><rect x="811.2" y="789" width="6.2" height="15.0" fill="rgb(249,224,40)" rx="2" ry="2" />
<text  x="814.16" y="799.5" ></text>
</g>
<g >
<title>ret_from_fork (3 samples, 1.58%)</title><rect x="991.3" y="869" width="18.6" height="15.0" fill="rgb(245,217,18)" rx="2" ry="2" />
<text  x="994.26" y="879.5" ></text>
</g>
<g >
<title>secondary_startup_64 (29 samples, 15.26%)</title><rect x="1009.9" y="869" width="180.1" height="15.0" fill="rgb(213,129,1)" rx="2" ry="2" />
<text  x="1012.89" y="879.5" >secondary_startup_64</text>
</g>
<g >
<title>LindPythonInit (7 samples, 3.68%)</title><rect x="842.2" y="805" width="43.5" height="15.0" fill="rgb(230,196,45)" rx="2" ry="2" />
<text  x="845.21" y="815.5" >Lind..</text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.53%)</title><rect x="1171.4" y="565" width="6.2" height="15.0" fill="rgb(233,200,21)" rx="2" ry="2" />
<text  x="1174.37" y="575.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (1 samples, 0.53%)</title><rect x="811.2" y="501" width="6.2" height="15.0" fill="rgb(252,173,36)" rx="2" ry="2" />
<text  x="814.16" y="511.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.53%)</title><rect x="674.5" y="501" width="6.2" height="15.0" fill="rgb(244,71,4)" rx="2" ry="2" />
<text  x="677.53" y="511.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.53%)</title><rect x="444.7" y="837" width="6.2" height="15.0" fill="rgb(224,64,0)" rx="2" ry="2" />
<text  x="447.74" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="674.5" y="661" width="6.2" height="15.0" fill="rgb(222,183,20)" rx="2" ry="2" />
<text  x="677.53" y="671.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.53%)</title><rect x="16.2" y="613" width="6.2" height="15.0" fill="rgb(248,158,44)" rx="2" ry="2" />
<text  x="19.21" y="623.5" ></text>
</g>
<g >
<title>ast_for_expr.lto_priv.0 (1 samples, 0.53%)</title><rect x="842.2" y="421" width="6.2" height="15.0" fill="rgb(226,73,26)" rx="2" ry="2" />
<text  x="845.21" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.05%)</title><rect x="662.1" y="645" width="12.4" height="15.0" fill="rgb(244,84,33)" rx="2" ry="2" />
<text  x="665.11" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="674.5" y="645" width="6.2" height="15.0" fill="rgb(225,135,44)" rx="2" ry="2" />
<text  x="677.53" y="655.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 1.05%)</title><rect x="494.4" y="741" width="12.4" height="15.0" fill="rgb(211,118,22)" rx="2" ry="2" />
<text  x="497.42" y="751.5" ></text>
</g>
<g >
<title>alloc_pages_vma (6 samples, 3.16%)</title><rect x="742.8" y="773" width="37.3" height="15.0" fill="rgb(242,195,47)" rx="2" ry="2" />
<text  x="745.84" y="783.5" >all..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="674.5" y="693" width="6.2" height="15.0" fill="rgb(211,51,38)" rx="2" ry="2" />
<text  x="677.53" y="703.5" ></text>
</g>
<g >
<title>exit_mmap (7 samples, 3.68%)</title><rect x="885.7" y="741" width="43.5" height="15.0" fill="rgb(237,98,31)" rx="2" ry="2" />
<text  x="888.68" y="751.5" >exit..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (6 samples, 3.16%)</title><rect x="848.4" y="677" width="37.3" height="15.0" fill="rgb(236,42,41)" rx="2" ry="2" />
<text  x="851.42" y="687.5" >PyE..</text>
</g>
<g >
<title>NaClVmCopyEntry (13 samples, 6.84%)</title><rect x="581.4" y="709" width="80.7" height="15.0" fill="rgb(231,207,5)" rx="2" ry="2" />
<text  x="584.37" y="719.5" >NaClVmCop..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 2.11%)</title><rect x="817.4" y="645" width="24.8" height="15.0" fill="rgb(236,44,25)" rx="2" ry="2" />
<text  x="820.37" y="655.5" >P..</text>
</g>
<g >
<title>NaClSysWrite (1 samples, 0.53%)</title><rect x="674.5" y="821" width="6.2" height="15.0" fill="rgb(220,86,6)" rx="2" ry="2" />
<text  x="677.53" y="831.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevel (1 samples, 0.53%)</title><rect x="811.2" y="613" width="6.2" height="15.0" fill="rgb(230,209,42)" rx="2" ry="2" />
<text  x="814.16" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="811.2" y="53" width="6.2" height="15.0" fill="rgb(213,186,36)" rx="2" ry="2" />
<text  x="814.16" y="63.5" ></text>
</g>
<g >
<title>__delete_from_page_cache (2 samples, 1.05%)</title><rect x="929.2" y="533" width="12.4" height="15.0" fill="rgb(225,72,16)" rx="2" ry="2" />
<text  x="932.16" y="543.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.53%)</title><rect x="444.7" y="693" width="6.2" height="15.0" fill="rgb(253,190,32)" rx="2" ry="2" />
<text  x="447.74" y="703.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.53%)</title><rect x="786.3" y="725" width="6.2" height="15.0" fill="rgb(232,95,17)" rx="2" ry="2" />
<text  x="789.32" y="735.5" ></text>
</g>
<g >
<title>delete_from_page_cache (2 samples, 1.05%)</title><rect x="929.2" y="549" width="12.4" height="15.0" fill="rgb(213,49,37)" rx="2" ry="2" />
<text  x="932.16" y="559.5" ></text>
</g>
<g >
<title>_start (11 samples, 5.79%)</title><rect x="817.4" y="869" width="68.3" height="15.0" fill="rgb(214,89,20)" rx="2" ry="2" />
<text  x="820.37" y="879.5" >_start</text>
</g>
<g >
<title>PyImport_ImportModuleLevel (1 samples, 0.53%)</title><rect x="811.2" y="453" width="6.2" height="15.0" fill="rgb(218,55,13)" rx="2" ry="2" />
<text  x="814.16" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="823.6" y="565" width="6.2" height="15.0" fill="rgb(218,210,11)" rx="2" ry="2" />
<text  x="826.58" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 2.11%)</title><rect x="848.4" y="597" width="24.9" height="15.0" fill="rgb(231,102,50)" rx="2" ry="2" />
<text  x="851.42" y="607.5" >P..</text>
</g>
<g >
<title>instance_item.lto_priv.0 (1 samples, 0.53%)</title><rect x="811.2" y="149" width="6.2" height="15.0" fill="rgb(210,201,42)" rx="2" ry="2" />
<text  x="814.16" y="159.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (63 samples, 33.16%)</title><rect x="22.4" y="869" width="391.3" height="15.0" fill="rgb(219,92,53)" rx="2" ry="2" />
<text  x="25.42" y="879.5" >perf_evsel__enable_cpu</text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.53%)</title><rect x="450.9" y="837" width="6.3" height="15.0" fill="rgb(211,129,15)" rx="2" ry="2" />
<text  x="453.95" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (2 samples, 1.05%)</title><rect x="823.6" y="581" width="12.4" height="15.0" fill="rgb(229,133,19)" rx="2" ry="2" />
<text  x="826.58" y="591.5" ></text>
</g>
<g >
<title>sync_regs (3 samples, 1.58%)</title><rect x="705.6" y="837" width="18.6" height="15.0" fill="rgb(227,84,48)" rx="2" ry="2" />
<text  x="708.58" y="847.5" ></text>
</g>
<g >
<title>load_source_module (1 samples, 0.53%)</title><rect x="811.2" y="741" width="6.2" height="15.0" fill="rgb(229,165,12)" rx="2" ry="2" />
<text  x="814.16" y="751.5" ></text>
</g>
<g >
<title>PyAST_FromNode (1 samples, 0.53%)</title><rect x="842.2" y="501" width="6.2" height="15.0" fill="rgb(250,222,7)" rx="2" ry="2" />
<text  x="845.21" y="511.5" ></text>
</g>
<g >
<title>CallPythonFunc0 (4 samples, 2.11%)</title><rect x="817.4" y="789" width="24.8" height="15.0" fill="rgb(217,126,38)" rx="2" ry="2" />
<text  x="820.37" y="799.5" >C..</text>
</g>
<g >
<title>iput (2 samples, 1.05%)</title><rect x="929.2" y="645" width="12.4" height="15.0" fill="rgb(243,211,38)" rx="2" ry="2" />
<text  x="932.16" y="655.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 33.16%)</title><rect x="22.4" y="597" width="391.3" height="15.0" fill="rgb(250,83,2)" rx="2" ry="2" />
<text  x="25.42" y="607.5" >x86_pmu_enable</text>
</g>
<g >
<title>update_curr (1 samples, 0.53%)</title><rect x="991.3" y="741" width="6.2" height="15.0" fill="rgb(237,195,7)" rx="2" ry="2" />
<text  x="994.26" y="751.5" ></text>
</g>
<g >
<title>_perf_event_enable (63 samples, 33.16%)</title><rect x="22.4" y="725" width="391.3" height="15.0" fill="rgb(214,103,46)" rx="2" ry="2" />
<text  x="25.42" y="735.5" >_perf_event_enable</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 3.68%)</title><rect x="618.6" y="693" width="43.5" height="15.0" fill="rgb(229,190,4)" rx="2" ry="2" />
<text  x="621.63" y="703.5" >__me..</text>
</g>
<g >
<title>__perf_event_enable (63 samples, 33.16%)</title><rect x="22.4" y="629" width="391.3" height="15.0" fill="rgb(238,29,38)" rx="2" ry="2" />
<text  x="25.42" y="639.5" >__perf_event_enable</text>
</g>
<g >
<title>nmi_cpu_backtrace (2 samples, 1.05%)</title><rect x="395.1" y="549" width="12.4" height="15.0" fill="rgb(213,9,9)" rx="2" ry="2" />
<text  x="398.05" y="559.5" ></text>
</g>
<g >
<title>lind_write (1 samples, 0.53%)</title><rect x="674.5" y="773" width="6.2" height="15.0" fill="rgb(236,174,0)" rx="2" ry="2" />
<text  x="677.53" y="783.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.53%)</title><rect x="562.7" y="757" width="6.2" height="15.0" fill="rgb(231,224,3)" rx="2" ry="2" />
<text  x="565.74" y="767.5" ></text>
</g>
<g >
<title>do_nmi (1 samples, 0.53%)</title><rect x="53.5" y="549" width="6.2" height="15.0" fill="rgb(206,176,21)" rx="2" ry="2" />
<text  x="56.47" y="559.5" ></text>
</g>
<g >
<title>PySequence_Fast (1 samples, 0.53%)</title><rect x="668.3" y="549" width="6.2" height="15.0" fill="rgb(234,119,4)" rx="2" ry="2" />
<text  x="671.32" y="559.5" ></text>
</g>
<g >
<title>PyParser_ASTFromString (1 samples, 0.53%)</title><rect x="842.2" y="517" width="6.2" height="15.0" fill="rgb(231,37,10)" rx="2" ry="2" />
<text  x="845.21" y="527.5" ></text>
</g>
<g >
<title>PyImport_ExecCodeModuleEx (1 samples, 0.53%)</title><rect x="811.2" y="725" width="6.2" height="15.0" fill="rgb(218,186,20)" rx="2" ry="2" />
<text  x="814.16" y="735.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (1 samples, 0.53%)</title><rect x="16.2" y="725" width="6.2" height="15.0" fill="rgb(228,183,4)" rx="2" ry="2" />
<text  x="19.21" y="735.5" ></text>
</g>
<g >
<title>sys_epoll_pwait (1 samples, 0.53%)</title><rect x="985.1" y="837" width="6.2" height="15.0" fill="rgb(232,152,39)" rx="2" ry="2" />
<text  x="988.05" y="847.5" ></text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.53%)</title><rect x="811.2" y="85" width="6.2" height="15.0" fill="rgb(214,124,54)" rx="2" ry="2" />
<text  x="814.16" y="95.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1 samples, 0.53%)</title><rect x="674.5" y="837" width="6.2" height="15.0" fill="rgb(208,142,54)" rx="2" ry="2" />
<text  x="677.53" y="847.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (1 samples, 0.53%)</title><rect x="674.5" y="741" width="6.2" height="15.0" fill="rgb(205,146,7)" rx="2" ry="2" />
<text  x="677.53" y="751.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 1.05%)</title><rect x="916.7" y="661" width="12.5" height="15.0" fill="rgb(213,33,28)" rx="2" ry="2" />
<text  x="919.74" y="671.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.53%)</title><rect x="1003.7" y="773" width="6.2" height="15.0" fill="rgb(213,197,15)" rx="2" ry="2" />
<text  x="1006.68" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.05%)</title><rect x="873.3" y="629" width="12.4" height="15.0" fill="rgb(227,158,31)" rx="2" ry="2" />
<text  x="876.26" y="639.5" ></text>
</g>
<g >
<title>Py_CompileStringFlags (1 samples, 0.53%)</title><rect x="842.2" y="533" width="6.2" height="15.0" fill="rgb(234,93,14)" rx="2" ry="2" />
<text  x="845.21" y="543.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.53%)</title><rect x="1183.8" y="725" width="6.2" height="15.0" fill="rgb(225,142,15)" rx="2" ry="2" />
<text  x="1186.79" y="735.5" ></text>
</g>
<g >
<title>CallPythonFunc (2 samples, 1.05%)</title><rect x="662.1" y="757" width="12.4" height="15.0" fill="rgb(224,225,1)" rx="2" ry="2" />
<text  x="665.11" y="767.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.53%)</title><rect x="991.3" y="757" width="6.2" height="15.0" fill="rgb(237,97,14)" rx="2" ry="2" />
<text  x="994.26" y="767.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.53%)</title><rect x="475.8" y="773" width="6.2" height="15.0" fill="rgb(227,12,15)" rx="2" ry="2" />
<text  x="478.79" y="783.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.53%)</title><rect x="1177.6" y="773" width="6.2" height="15.0" fill="rgb(246,6,4)" rx="2" ry="2" />
<text  x="1180.58" y="783.5" ></text>
</g>
<g >
<title>load_next (1 samples, 0.53%)</title><rect x="811.2" y="437" width="6.2" height="15.0" fill="rgb(225,57,24)" rx="2" ry="2" />
<text  x="814.16" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="674.5" y="597" width="6.2" height="15.0" fill="rgb(210,7,10)" rx="2" ry="2" />
<text  x="677.53" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.53%)</title><rect x="985.1" y="853" width="6.2" height="15.0" fill="rgb(252,135,41)" rx="2" ry="2" />
<text  x="988.05" y="863.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.53%)</title><rect x="792.5" y="725" width="6.2" height="15.0" fill="rgb(225,36,14)" rx="2" ry="2" />
<text  x="795.53" y="735.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="811.2" y="197" width="6.2" height="15.0" fill="rgb(208,229,40)" rx="2" ry="2" />
<text  x="814.16" y="207.5" ></text>
</g>
<g >
<title>lind_read (2 samples, 1.05%)</title><rect x="662.1" y="773" width="12.4" height="15.0" fill="rgb(234,28,3)" rx="2" ry="2" />
<text  x="665.11" y="783.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.53%)</title><rect x="16.2" y="853" width="6.2" height="15.0" fill="rgb(237,13,39)" rx="2" ry="2" />
<text  x="19.21" y="863.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.53%)</title><rect x="444.7" y="821" width="6.2" height="15.0" fill="rgb(243,102,28)" rx="2" ry="2" />
<text  x="447.74" y="831.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.53%)</title><rect x="1171.4" y="661" width="6.2" height="15.0" fill="rgb(234,63,27)" rx="2" ry="2" />
<text  x="1174.37" y="671.5" ></text>
</g>
<g >
<title>start_secondary (28 samples, 14.74%)</title><rect x="1009.9" y="853" width="173.9" height="15.0" fill="rgb(230,70,28)" rx="2" ry="2" />
<text  x="1012.89" y="863.5" >start_secondary</text>
</g>
<g >
<title>NaClCopyDynamicText (13 samples, 6.84%)</title><rect x="581.4" y="741" width="80.7" height="15.0" fill="rgb(246,105,2)" rx="2" ry="2" />
<text  x="584.37" y="751.5" >NaClCopyD..</text>
</g>
<g >
<title>PyFrame_New (1 samples, 0.53%)</title><rect x="829.8" y="565" width="6.2" height="15.0" fill="rgb(235,214,47)" rx="2" ry="2" />
<text  x="832.79" y="575.5" ></text>
</g>
<g >
<title>native_write_cr2 (1 samples, 0.53%)</title><rect x="96.9" y="549" width="6.3" height="15.0" fill="rgb(250,87,46)" rx="2" ry="2" />
<text  x="99.95" y="559.5" ></text>
</g>
<g >
<title>__fput (2 samples, 1.05%)</title><rect x="929.2" y="725" width="12.4" height="15.0" fill="rgb(216,42,26)" rx="2" ry="2" />
<text  x="932.16" y="735.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.53%)</title><rect x="1009.9" y="741" width="6.2" height="15.0" fill="rgb(207,90,30)" rx="2" ry="2" />
<text  x="1012.89" y="751.5" ></text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.53%)</title><rect x="997.5" y="725" width="6.2" height="15.0" fill="rgb(252,93,11)" rx="2" ry="2" />
<text  x="1000.47" y="735.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="674.5" y="629" width="6.2" height="15.0" fill="rgb(227,97,4)" rx="2" ry="2" />
<text  x="677.53" y="639.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.53%)</title><rect x="457.2" y="837" width="6.2" height="15.0" fill="rgb(223,105,49)" rx="2" ry="2" />
<text  x="460.16" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (63 samples, 33.16%)</title><rect x="22.4" y="805" width="391.3" height="15.0" fill="rgb(212,110,12)" rx="2" ry="2" />
<text  x="25.42" y="815.5" >do_syscall_64</text>
</g>
<g >
<title>sys_write (1 samples, 0.53%)</title><rect x="16.2" y="805" width="6.2" height="15.0" fill="rgb(239,103,13)" rx="2" ry="2" />
<text  x="19.21" y="815.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="674.5" y="581" width="6.2" height="15.0" fill="rgb(229,153,1)" rx="2" ry="2" />
<text  x="677.53" y="591.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (1 samples, 0.53%)</title><rect x="929.2" y="517" width="6.2" height="15.0" fill="rgb(211,216,27)" rx="2" ry="2" />
<text  x="932.16" y="527.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.53%)</title><rect x="798.7" y="757" width="6.2" height="15.0" fill="rgb(238,165,28)" rx="2" ry="2" />
<text  x="801.74" y="767.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.53%)</title><rect x="1009.9" y="757" width="6.2" height="15.0" fill="rgb(238,48,14)" rx="2" ry="2" />
<text  x="1012.89" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="674.5" y="613" width="6.2" height="15.0" fill="rgb(224,19,10)" rx="2" ry="2" />
<text  x="677.53" y="623.5" ></text>
</g>
<g >
<title>builtin___import__.lto_priv.0 (1 samples, 0.53%)</title><rect x="811.2" y="629" width="6.2" height="15.0" fill="rgb(254,116,26)" rx="2" ry="2" />
<text  x="814.16" y="639.5" ></text>
</g>
<g >
<title>NaClSetDescMu (1 samples, 0.53%)</title><rect x="562.7" y="789" width="6.2" height="15.0" fill="rgb(221,56,33)" rx="2" ry="2" />
<text  x="565.74" y="799.5" ></text>
</g>
<g >
<title>dput.part.26 (2 samples, 1.05%)</title><rect x="929.2" y="693" width="12.4" height="15.0" fill="rgb(242,153,14)" rx="2" ry="2" />
<text  x="932.16" y="703.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.53%)</title><rect x="444.7" y="805" width="6.2" height="15.0" fill="rgb(209,226,21)" rx="2" ry="2" />
<text  x="447.74" y="815.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (2 samples, 1.05%)</title><rect x="916.7" y="597" width="12.5" height="15.0" fill="rgb(242,193,38)" rx="2" ry="2" />
<text  x="919.74" y="607.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="811.2" y="325" width="6.2" height="15.0" fill="rgb(252,207,6)" rx="2" ry="2" />
<text  x="814.16" y="335.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 1.05%)</title><rect x="916.7" y="677" width="12.5" height="15.0" fill="rgb(234,56,24)" rx="2" ry="2" />
<text  x="919.74" y="687.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.53%)</title><rect x="991.3" y="821" width="6.2" height="15.0" fill="rgb(251,43,24)" rx="2" ry="2" />
<text  x="994.26" y="831.5" ></text>
</g>
<g >
<title>task_work_run (2 samples, 1.05%)</title><rect x="929.2" y="757" width="12.4" height="15.0" fill="rgb(240,47,5)" rx="2" ry="2" />
<text  x="932.16" y="767.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.53%)</title><rect x="488.2" y="725" width="6.2" height="15.0" fill="rgb(230,30,18)" rx="2" ry="2" />
<text  x="491.21" y="735.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 1.05%)</title><rect x="1165.2" y="741" width="12.4" height="15.0" fill="rgb(234,58,11)" rx="2" ry="2" />
<text  x="1168.16" y="751.5" ></text>
</g>
<g >
<title>NaClPatchAddr (6 samples, 3.16%)</title><rect x="581.4" y="693" width="37.2" height="15.0" fill="rgb(209,148,15)" rx="2" ry="2" />
<text  x="584.37" y="703.5" >NaC..</text>
</g>
<g >
<title>ctx_resched (63 samples, 33.16%)</title><rect x="22.4" y="613" width="391.3" height="15.0" fill="rgb(207,22,42)" rx="2" ry="2" />
<text  x="25.42" y="623.5" >ctx_resched</text>
</g>
<g >
<title>NaClSetDesc (1 samples, 0.53%)</title><rect x="562.7" y="805" width="6.2" height="15.0" fill="rgb(246,16,3)" rx="2" ry="2" />
<text  x="565.74" y="815.5" ></text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.53%)</title><rect x="842.2" y="645" width="6.2" height="15.0" fill="rgb(234,130,0)" rx="2" ry="2" />
<text  x="845.21" y="655.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.53%)</title><rect x="488.2" y="757" width="6.2" height="15.0" fill="rgb(206,33,46)" rx="2" ry="2" />
<text  x="491.21" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="811.2" y="213" width="6.2" height="15.0" fill="rgb(238,185,10)" rx="2" ry="2" />
<text  x="814.16" y="223.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="811.2" y="693" width="6.2" height="15.0" fill="rgb(217,167,30)" rx="2" ry="2" />
<text  x="814.16" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (11 samples, 5.79%)</title><rect x="742.8" y="789" width="68.4" height="15.0" fill="rgb(226,116,52)" rx="2" ry="2" />
<text  x="745.84" y="799.5" >__handl..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (6 samples, 3.16%)</title><rect x="848.4" y="741" width="37.3" height="15.0" fill="rgb(226,147,49)" rx="2" ry="2" />
<text  x="851.42" y="751.5" >PyE..</text>
</g>
<g >
<title>irq_enter (1 samples, 0.53%)</title><rect x="1009.9" y="725" width="6.2" height="15.0" fill="rgb(226,136,43)" rx="2" ry="2" />
<text  x="1012.89" y="735.5" ></text>
</g>
<g >
<title>PyString_InternInPlace (1 samples, 0.53%)</title><rect x="842.2" y="389" width="6.2" height="15.0" fill="rgb(227,9,44)" rx="2" ry="2" />
<text  x="845.21" y="399.5" ></text>
</g>
<g >
<title>NaClForkThreadContextSetup (13 samples, 6.84%)</title><rect x="581.4" y="773" width="80.7" height="15.0" fill="rgb(226,126,15)" rx="2" ry="2" />
<text  x="584.37" y="783.5" >NaClForkT..</text>
</g>
<g >
<title>NaClAppThreadSpawn (13 samples, 6.84%)</title><rect x="581.4" y="789" width="80.7" height="15.0" fill="rgb(231,54,9)" rx="2" ry="2" />
<text  x="584.37" y="799.5" >NaClAppTh..</text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.53%)</title><rect x="16.2" y="661" width="6.2" height="15.0" fill="rgb(214,209,13)" rx="2" ry="2" />
<text  x="19.21" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="867.1" y="501" width="6.2" height="15.0" fill="rgb(223,217,52)" rx="2" ry="2" />
<text  x="870.05" y="511.5" ></text>
</g>
<g >
<title>[unknown]  (21 samples, 11.05%)</title><rect x="680.7" y="869" width="130.5" height="15.0" fill="rgb(243,21,35)" rx="2" ry="2" />
<text  x="683.74" y="879.5" >[unknown] </text>
</g>
<g >
<title>ion (1 samples, 0.53%)</title><rect x="16.2" y="869" width="6.2" height="15.0" fill="rgb(213,15,49)" rx="2" ry="2" />
<text  x="19.21" y="879.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 1.05%)</title><rect x="1165.2" y="725" width="12.4" height="15.0" fill="rgb(246,85,34)" rx="2" ry="2" />
<text  x="1168.16" y="735.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="836.0" y="581" width="6.2" height="15.0" fill="rgb(246,70,42)" rx="2" ry="2" />
<text  x="839.00" y="591.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.53%)</title><rect x="463.4" y="837" width="6.2" height="15.0" fill="rgb(235,56,22)" rx="2" ry="2" />
<text  x="466.37" y="847.5" ></text>
</g>
<g >
<title>PageHuge (1 samples, 0.53%)</title><rect x="935.4" y="501" width="6.2" height="15.0" fill="rgb(249,117,13)" rx="2" ry="2" />
<text  x="938.37" y="511.5" ></text>
</g>
<g >
<title>__dentry_kill (2 samples, 1.05%)</title><rect x="929.2" y="677" width="12.4" height="15.0" fill="rgb(239,79,42)" rx="2" ry="2" />
<text  x="932.16" y="687.5" ></text>
</g>
<g >
<title>NaClSysDup2Decoder (1 samples, 0.53%)</title><rect x="562.7" y="837" width="6.2" height="15.0" fill="rgb(207,88,6)" rx="2" ry="2" />
<text  x="565.74" y="847.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (1 samples, 0.53%)</title><rect x="674.5" y="789" width="6.2" height="15.0" fill="rgb(246,171,12)" rx="2" ry="2" />
<text  x="677.53" y="799.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (2 samples, 1.05%)</title><rect x="568.9" y="821" width="12.5" height="15.0" fill="rgb(222,220,16)" rx="2" ry="2" />
<text  x="571.95" y="831.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (19 samples, 10.00%)</title><rect x="562.7" y="853" width="118.0" height="15.0" fill="rgb(220,145,19)" rx="2" ry="2" />
<text  x="565.74" y="863.5" >NaClSyscallCSe..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (63 samples, 33.16%)</title><rect x="22.4" y="565" width="391.3" height="15.0" fill="rgb(215,107,4)" rx="2" ry="2" />
<text  x="25.42" y="575.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>PyEval_EvalFrameEx (6 samples, 3.16%)</title><rect x="848.4" y="709" width="37.3" height="15.0" fill="rgb(236,63,37)" rx="2" ry="2" />
<text  x="851.42" y="719.5" >PyE..</text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 1.05%)</title><rect x="786.3" y="741" width="12.4" height="15.0" fill="rgb(239,123,45)" rx="2" ry="2" />
<text  x="789.32" y="751.5" ></text>
</g>
<g >
<title>dput (2 samples, 1.05%)</title><rect x="929.2" y="709" width="12.4" height="15.0" fill="rgb(240,168,15)" rx="2" ry="2" />
<text  x="932.16" y="719.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.53%)</title><rect x="811.2" y="533" width="6.2" height="15.0" fill="rgb(237,47,51)" rx="2" ry="2" />
<text  x="814.16" y="543.5" ></text>
</g>
<g >
<title>NaClHostDescRead (2 samples, 1.05%)</title><rect x="662.1" y="789" width="12.4" height="15.0" fill="rgb(211,156,44)" rx="2" ry="2" />
<text  x="665.11" y="799.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="811.2" y="341" width="6.2" height="15.0" fill="rgb(214,48,42)" rx="2" ry="2" />
<text  x="814.16" y="351.5" ></text>
</g>
<g >
<title>do_idle (28 samples, 14.74%)</title><rect x="1009.9" y="821" width="173.9" height="15.0" fill="rgb(229,142,26)" rx="2" ry="2" />
<text  x="1012.89" y="831.5" >do_idle</text>
</g>
<g >
<title>function_call.lto_priv.0 (1 samples, 0.53%)</title><rect x="842.2" y="597" width="6.2" height="15.0" fill="rgb(248,46,8)" rx="2" ry="2" />
<text  x="845.21" y="607.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (2 samples, 1.05%)</title><rect x="662.1" y="837" width="12.4" height="15.0" fill="rgb(249,18,5)" rx="2" ry="2" />
<text  x="665.11" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (1 samples, 0.53%)</title><rect x="811.2" y="709" width="6.2" height="15.0" fill="rgb(223,133,41)" rx="2" ry="2" />
<text  x="814.16" y="719.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (63 samples, 33.16%)</title><rect x="22.4" y="741" width="391.3" height="15.0" fill="rgb(209,99,34)" rx="2" ry="2" />
<text  x="25.42" y="751.5" >perf_event_for_each_child</text>
</g>
<g >
<title>CopyCodeSafelyInitial (1 samples, 0.53%)</title><rect x="568.9" y="789" width="6.3" height="15.0" fill="rgb(210,28,18)" rx="2" ry="2" />
<text  x="571.95" y="799.5" ></text>
</g>
<g >
<title>PyString_FromStringAndSize (2 samples, 1.05%)</title><rect x="873.3" y="565" width="12.4" height="15.0" fill="rgb(250,179,11)" rx="2" ry="2" />
<text  x="876.26" y="575.5" ></text>
</g>
<g >
<title>unmap_page_range (7 samples, 3.68%)</title><rect x="885.7" y="693" width="43.5" height="15.0" fill="rgb(239,187,40)" rx="2" ry="2" />
<text  x="888.68" y="703.5" >unma..</text>
</g>
<g >
<title>type_call.lto_priv.0 (1 samples, 0.53%)</title><rect x="842.2" y="677" width="6.2" height="15.0" fill="rgb(246,29,32)" rx="2" ry="2" />
<text  x="845.21" y="687.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.53%)</title><rect x="798.7" y="773" width="6.2" height="15.0" fill="rgb(222,76,7)" rx="2" ry="2" />
<text  x="801.74" y="783.5" ></text>
</g>
<g >
<title>[anon] (2 samples, 1.05%)</title><rect x="550.3" y="869" width="12.4" height="15.0" fill="rgb(216,169,14)" rx="2" ry="2" />
<text  x="553.32" y="879.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (6 samples, 3.16%)</title><rect x="848.4" y="789" width="37.3" height="15.0" fill="rgb(209,12,34)" rx="2" ry="2" />
<text  x="851.42" y="799.5" >PyE..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (6 samples, 3.16%)</title><rect x="848.4" y="725" width="37.3" height="15.0" fill="rgb(252,49,7)" rx="2" ry="2" />
<text  x="851.42" y="735.5" >PyE..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 1.58%)</title><rect x="854.6" y="533" width="18.7" height="15.0" fill="rgb(241,103,0)" rx="2" ry="2" />
<text  x="857.63" y="543.5" ></text>
</g>
<g >
<title>function_call.lto_priv.0 (1 samples, 0.53%)</title><rect x="811.2" y="69" width="6.2" height="15.0" fill="rgb(244,210,6)" rx="2" ry="2" />
<text  x="814.16" y="79.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (1 samples, 0.53%)</title><rect x="16.2" y="597" width="6.2" height="15.0" fill="rgb(236,221,5)" rx="2" ry="2" />
<text  x="19.21" y="607.5" ></text>
</g>
<g >
<title>page_fault (13 samples, 6.84%)</title><rect x="730.4" y="853" width="80.8" height="15.0" fill="rgb(233,6,30)" rx="2" ry="2" />
<text  x="733.42" y="863.5" >page_fault</text>
</g>
<g >
<title>alx_poll (2 samples, 1.05%)</title><rect x="1165.2" y="677" width="12.4" height="15.0" fill="rgb(235,89,33)" rx="2" ry="2" />
<text  x="1168.16" y="687.5" ></text>
</g>
<g >
<title>get_vma_policy.part.35 (1 samples, 0.53%)</title><rect x="506.8" y="741" width="6.3" height="15.0" fill="rgb(236,17,49)" rx="2" ry="2" />
<text  x="509.84" y="751.5" ></text>
</g>
<g >
<title>NaClVmmapVisit (13 samples, 6.84%)</title><rect x="581.4" y="725" width="80.7" height="15.0" fill="rgb(245,153,32)" rx="2" ry="2" />
<text  x="584.37" y="735.5" >NaClVmmap..</text>
</g>
<g >
<title>remote_function (63 samples, 33.16%)</title><rect x="22.4" y="661" width="391.3" height="15.0" fill="rgb(217,199,13)" rx="2" ry="2" />
<text  x="25.42" y="671.5" >remote_function</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.53%)</title><rect x="1171.4" y="597" width="6.2" height="15.0" fill="rgb(235,60,4)" rx="2" ry="2" />
<text  x="1174.37" y="607.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (6 samples, 3.16%)</title><rect x="848.4" y="693" width="37.3" height="15.0" fill="rgb(211,52,50)" rx="2" ry="2" />
<text  x="851.42" y="703.5" >PyE..</text>
</g>
<g >
<title>release_pages (2 samples, 1.05%)</title><rect x="916.7" y="645" width="12.5" height="15.0" fill="rgb(213,118,42)" rx="2" ry="2" />
<text  x="919.74" y="655.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 1.05%)</title><rect x="1165.2" y="757" width="12.4" height="15.0" fill="rgb(245,59,11)" rx="2" ry="2" />
<text  x="1168.16" y="767.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (63 samples, 33.16%)</title><rect x="22.4" y="773" width="391.3" height="15.0" fill="rgb(223,35,19)" rx="2" ry="2" />
<text  x="25.42" y="783.5" >do_vfs_ioctl</text>
</g>
<g >
<title>native_sched_clock (6 samples, 3.16%)</title><rect x="59.7" y="549" width="37.2" height="15.0" fill="rgb(213,164,7)" rx="2" ry="2" />
<text  x="62.68" y="559.5" >nat..</text>
</g>
<g >
<title>intel_idle (1 samples, 0.53%)</title><rect x="1183.8" y="709" width="6.2" height="15.0" fill="rgb(206,34,13)" rx="2" ry="2" />
<text  x="1186.79" y="719.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (2 samples, 1.05%)</title><rect x="568.9" y="805" width="12.5" height="15.0" fill="rgb(248,155,48)" rx="2" ry="2" />
<text  x="571.95" y="815.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 1.05%)</title><rect x="916.7" y="613" width="12.5" height="15.0" fill="rgb(247,165,32)" rx="2" ry="2" />
<text  x="919.74" y="623.5" ></text>
</g>
<g >
<title>_PyList_Extend (1 samples, 0.53%)</title><rect x="668.3" y="517" width="6.2" height="15.0" fill="rgb(230,8,46)" rx="2" ry="2" />
<text  x="671.32" y="527.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.53%)</title><rect x="444.7" y="661" width="6.2" height="15.0" fill="rgb(238,147,45)" rx="2" ry="2" />
<text  x="447.74" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 4.74%)</title><rect x="885.7" y="853" width="55.9" height="15.0" fill="rgb(239,92,32)" rx="2" ry="2" />
<text  x="888.68" y="863.5" >do_sy..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.53%)</title><rect x="1171.4" y="613" width="6.2" height="15.0" fill="rgb(230,93,2)" rx="2" ry="2" />
<text  x="1174.37" y="623.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (2 samples, 1.05%)</title><rect x="929.2" y="661" width="12.4" height="15.0" fill="rgb(214,115,50)" rx="2" ry="2" />
<text  x="932.16" y="671.5" ></text>
</g>
<g >
<title>unaccount_page_cache_page (1 samples, 0.53%)</title><rect x="935.4" y="517" width="6.2" height="15.0" fill="rgb(206,12,6)" rx="2" ry="2" />
<text  x="938.37" y="527.5" ></text>
</g>
<g >
<title>__ioctl (63 samples, 33.16%)</title><rect x="22.4" y="837" width="391.3" height="15.0" fill="rgb(226,96,5)" rx="2" ry="2" />
<text  x="25.42" y="847.5" >__ioctl</text>
</g>
<g >
<title>[sel_ldr] (19 samples, 10.00%)</title><rect x="562.7" y="869" width="118.0" height="15.0" fill="rgb(251,70,10)" rx="2" ry="2" />
<text  x="565.74" y="879.5" >[sel_ldr]</text>
</g>
<g >
<title>NaClSysFork (13 samples, 6.84%)</title><rect x="581.4" y="821" width="80.7" height="15.0" fill="rgb(239,10,0)" rx="2" ry="2" />
<text  x="584.37" y="831.5" >NaClSysFork</text>
</g>
<g >
<title>__sched_text_start (2 samples, 1.05%)</title><rect x="997.5" y="789" width="12.4" height="15.0" fill="rgb(215,153,34)" rx="2" ry="2" />
<text  x="1000.47" y="799.5" ></text>
</g>
<g >
<title>load_source_module (1 samples, 0.53%)</title><rect x="811.2" y="581" width="6.2" height="15.0" fill="rgb(252,16,52)" rx="2" ry="2" />
<text  x="814.16" y="591.5" ></text>
</g>
<g >
<title>perf_ioctl (63 samples, 33.16%)</title><rect x="22.4" y="757" width="391.3" height="15.0" fill="rgb(215,140,12)" rx="2" ry="2" />
<text  x="25.42" y="767.5" >perf_ioctl</text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.05%)</title><rect x="873.3" y="613" width="12.4" height="15.0" fill="rgb(208,45,9)" rx="2" ry="2" />
<text  x="876.26" y="623.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.53%)</title><rect x="674.5" y="533" width="6.2" height="15.0" fill="rgb(212,220,6)" rx="2" ry="2" />
<text  x="677.53" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="811.2" y="293" width="6.2" height="15.0" fill="rgb(208,47,43)" rx="2" ry="2" />
<text  x="814.16" y="303.5" ></text>
</g>
<g >
<title>CopyBundleTails (1 samples, 0.53%)</title><rect x="568.9" y="773" width="6.3" height="15.0" fill="rgb(241,146,17)" rx="2" ry="2" />
<text  x="571.95" y="783.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.53%)</title><rect x="1177.6" y="805" width="6.2" height="15.0" fill="rgb(246,161,32)" rx="2" ry="2" />
<text  x="1180.58" y="815.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.53%)</title><rect x="811.2" y="37" width="6.2" height="15.0" fill="rgb(239,143,44)" rx="2" ry="2" />
<text  x="814.16" y="47.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.53%)</title><rect x="997.5" y="757" width="6.2" height="15.0" fill="rgb(241,177,7)" rx="2" ry="2" />
<text  x="1000.47" y="767.5" ></text>
</g>
<g >
<title>LindPythonFinalize (4 samples, 2.11%)</title><rect x="817.4" y="805" width="24.8" height="15.0" fill="rgb(254,211,22)" rx="2" ry="2" />
<text  x="820.37" y="815.5" >L..</text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.53%)</title><rect x="562.7" y="741" width="6.2" height="15.0" fill="rgb(254,134,11)" rx="2" ry="2" />
<text  x="565.74" y="751.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.53%)</title><rect x="16.2" y="741" width="6.2" height="15.0" fill="rgb(222,14,2)" rx="2" ry="2" />
<text  x="19.21" y="751.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (1 samples, 0.53%)</title><rect x="842.2" y="789" width="6.2" height="15.0" fill="rgb(239,37,31)" rx="2" ry="2" />
<text  x="845.21" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.53%)</title><rect x="811.2" y="869" width="6.2" height="15.0" fill="rgb(229,141,21)" rx="2" ry="2" />
<text  x="814.16" y="879.5" ></text>
</g>
<g >
<title>[_collections.so] (1 samples, 0.53%)</title><rect x="674.5" y="549" width="6.2" height="15.0" fill="rgb(212,210,5)" rx="2" ry="2" />
<text  x="677.53" y="559.5" ></text>
</g>
<g >
<title>main (11 samples, 5.79%)</title><rect x="817.4" y="837" width="68.3" height="15.0" fill="rgb(224,100,42)" rx="2" ry="2" />
<text  x="820.37" y="847.5" >main</text>
</g>
<g >
<title>do_group_exit (9 samples, 4.74%)</title><rect x="885.7" y="789" width="55.9" height="15.0" fill="rgb(206,7,9)" rx="2" ry="2" />
<text  x="888.68" y="799.5" >do_gr..</text>
</g>
<g >
<title>radix_tree_next_chunk (2 samples, 1.05%)</title><rect x="525.5" y="741" width="12.4" height="15.0" fill="rgb(233,215,10)" rx="2" ry="2" />
<text  x="528.47" y="751.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.53%)</title><rect x="444.7" y="709" width="6.2" height="15.0" fill="rgb(205,223,15)" rx="2" ry="2" />
<text  x="447.74" y="719.5" ></text>
</g>
<g >
<title>NaClSysDup2 (1 samples, 0.53%)</title><rect x="562.7" y="821" width="6.2" height="15.0" fill="rgb(235,63,3)" rx="2" ry="2" />
<text  x="565.74" y="831.5" ></text>
</g>
<g >
<title>load_source_module (1 samples, 0.53%)</title><rect x="811.2" y="421" width="6.2" height="15.0" fill="rgb(240,125,9)" rx="2" ry="2" />
<text  x="814.16" y="431.5" ></text>
</g>
<g >
<title>rest_init (1 samples, 0.53%)</title><rect x="1183.8" y="805" width="6.2" height="15.0" fill="rgb(226,120,32)" rx="2" ry="2" />
<text  x="1186.79" y="815.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 1.58%)</title><rect x="494.4" y="757" width="18.7" height="15.0" fill="rgb(234,36,33)" rx="2" ry="2" />
<text  x="497.42" y="767.5" ></text>
</g>
<g >
<title>PyObject_Call (2 samples, 1.05%)</title><rect x="662.1" y="725" width="12.4" height="15.0" fill="rgb(227,80,8)" rx="2" ry="2" />
<text  x="665.11" y="735.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.53%)</title><rect x="991.3" y="773" width="6.2" height="15.0" fill="rgb(210,226,34)" rx="2" ry="2" />
<text  x="994.26" y="783.5" ></text>
</g>
<g >
<title>NaClDescSafeUnref (1 samples, 0.53%)</title><rect x="562.7" y="773" width="6.2" height="15.0" fill="rgb(225,5,49)" rx="2" ry="2" />
<text  x="565.74" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.05%)</title><rect x="662.1" y="613" width="12.4" height="15.0" fill="rgb(212,159,8)" rx="2" ry="2" />
<text  x="665.11" y="623.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.53%)</title><rect x="494.4" y="725" width="6.2" height="15.0" fill="rgb(213,163,54)" rx="2" ry="2" />
<text  x="497.42" y="735.5" ></text>
</g>
<g >
<title>slot_tp_init.lto_priv.0 (1 samples, 0.53%)</title><rect x="842.2" y="661" width="6.2" height="15.0" fill="rgb(227,118,9)" rx="2" ry="2" />
<text  x="845.21" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (1 samples, 0.53%)</title><rect x="811.2" y="389" width="6.2" height="15.0" fill="rgb(208,77,34)" rx="2" ry="2" />
<text  x="814.16" y="399.5" ></text>
</g>
<g >
<title>event_function_call (63 samples, 33.16%)</title><rect x="22.4" y="709" width="391.3" height="15.0" fill="rgb(246,157,35)" rx="2" ry="2" />
<text  x="25.42" y="719.5" >event_function_call</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 2.11%)</title><rect x="848.4" y="629" width="24.9" height="15.0" fill="rgb(225,173,15)" rx="2" ry="2" />
<text  x="851.42" y="639.5" >P..</text>
</g>
</g>
</svg>
