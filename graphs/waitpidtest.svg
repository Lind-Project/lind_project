<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1622" onload="init(evt)" viewBox="0 0 1200 1622" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1622.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1605" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1605" > </text>
<g id="frames">
<g >
<title>irqentry_exit (3 samples, 0.26%)</title><rect x="960.1" y="1493" width="3.0" height="15.0" fill="rgb(252,32,16)" rx="2" ry="2" />
<text  x="963.08" y="1503.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (83 samples, 7.12%)</title><rect x="352.4" y="1413" width="84.0" height="15.0" fill="rgb(223,151,16)" rx="2" ry="2" />
<text  x="355.35" y="1423.5" >ringbuf::..</text>
</g>
<g >
<title>cgroup_rstat_flush_irqsafe (1 samples, 0.09%)</title><rect x="1088.7" y="1397" width="1.0" height="15.0" fill="rgb(232,11,52)" rx="2" ry="2" />
<text  x="1091.71" y="1407.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="1004.6" y="965" width="2.1" height="15.0" fill="rgb(215,61,9)" rx="2" ry="2" />
<text  x="1007.64" y="975.5" ></text>
</g>
<g >
<title>reweight_entity (1 samples, 0.09%)</title><rect x="1159.6" y="1173" width="1.0" height="15.0" fill="rgb(235,99,27)" rx="2" ry="2" />
<text  x="1162.61" y="1183.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.09%)</title><rect x="337.2" y="1365" width="1.0" height="15.0" fill="rgb(219,179,3)" rx="2" ry="2" />
<text  x="340.16" y="1375.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (1 samples, 0.09%)</title><rect x="1005.7" y="37" width="1.0" height="15.0" fill="rgb(246,214,14)" rx="2" ry="2" />
<text  x="1008.66" y="47.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_locked (2 samples, 0.17%)</title><rect x="25.2" y="1317" width="2.0" height="15.0" fill="rgb(229,86,50)" rx="2" ry="2" />
<text  x="28.19" y="1327.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.09%)</title><rect x="321.0" y="1269" width="1.0" height="15.0" fill="rgb(225,121,18)" rx="2" ry="2" />
<text  x="323.95" y="1279.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.09%)</title><rect x="164.0" y="1093" width="1.0" height="15.0" fill="rgb(228,119,10)" rx="2" ry="2" />
<text  x="166.96" y="1103.5" ></text>
</g>
<g >
<title>ep_poll (2 samples, 0.17%)</title><rect x="1076.6" y="1477" width="2.0" height="15.0" fill="rgb(219,186,48)" rx="2" ry="2" />
<text  x="1079.56" y="1487.5" ></text>
</g>
<g >
<title>cgroup_memory_pressure_show (1 samples, 0.09%)</title><rect x="24.2" y="1381" width="1.0" height="15.0" fill="rgb(229,29,41)" rx="2" ry="2" />
<text  x="27.18" y="1391.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (6 samples, 0.52%)</title><rect x="890.2" y="1381" width="6.1" height="15.0" fill="rgb(232,183,34)" rx="2" ry="2" />
<text  x="893.19" y="1391.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="1001.6" y="1141" width="1.0" height="15.0" fill="rgb(230,147,12)" rx="2" ry="2" />
<text  x="1004.61" y="1151.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1 samples, 0.09%)</title><rect x="73.8" y="1413" width="1.0" height="15.0" fill="rgb(246,89,2)" rx="2" ry="2" />
<text  x="76.81" y="1423.5" ></text>
</g>
<g >
<title>cpu_startup_entry (43 samples, 3.69%)</title><rect x="30.3" y="1509" width="43.5" height="15.0" fill="rgb(252,160,29)" rx="2" ry="2" />
<text  x="33.26" y="1519.5" >cpu_..</text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (2 samples, 0.17%)</title><rect x="312.8" y="1365" width="2.1" height="15.0" fill="rgb(216,16,12)" rx="2" ry="2" />
<text  x="315.85" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="75.8" y="1333" width="1.0" height="15.0" fill="rgb(224,68,0)" rx="2" ry="2" />
<text  x="78.84" y="1343.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.09%)</title><rect x="37.3" y="1173" width="1.1" height="15.0" fill="rgb(207,124,2)" rx="2" ry="2" />
<text  x="40.35" y="1183.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1 samples, 0.09%)</title><rect x="78.9" y="1413" width="1.0" height="15.0" fill="rgb(205,216,39)" rx="2" ry="2" />
<text  x="81.88" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.09%)</title><rect x="250.1" y="1381" width="1.0" height="15.0" fill="rgb(229,226,41)" rx="2" ry="2" />
<text  x="253.05" y="1391.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.09%)</title><rect x="160.9" y="1317" width="1.0" height="15.0" fill="rgb(221,206,13)" rx="2" ry="2" />
<text  x="163.92" y="1327.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.09%)</title><rect x="982.4" y="1237" width="1.0" height="15.0" fill="rgb(233,215,46)" rx="2" ry="2" />
<text  x="985.36" y="1247.5" ></text>
</g>
<g >
<title>ttwu_do_activate (4 samples, 0.34%)</title><rect x="32.3" y="1301" width="4.0" height="15.0" fill="rgb(239,122,36)" rx="2" ry="2" />
<text  x="35.28" y="1311.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.17%)</title><rect x="1076.6" y="1429" width="2.0" height="15.0" fill="rgb(242,210,51)" rx="2" ry="2" />
<text  x="1079.56" y="1439.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.09%)</title><rect x="77.9" y="1429" width="1.0" height="15.0" fill="rgb(217,149,22)" rx="2" ry="2" />
<text  x="80.86" y="1439.5" ></text>
</g>
<g >
<title>__activate_page (1 samples, 0.09%)</title><rect x="221.7" y="1173" width="1.0" height="15.0" fill="rgb(221,56,8)" rx="2" ry="2" />
<text  x="224.69" y="1183.5" ></text>
</g>
<g >
<title>lru_cache_add (14 samples, 1.20%)</title><rect x="938.8" y="1397" width="14.2" height="15.0" fill="rgb(220,178,25)" rx="2" ry="2" />
<text  x="941.81" y="1407.5" ></text>
</g>
<g >
<title>ovl_do_remove (1 samples, 0.09%)</title><rect x="1000.6" y="1285" width="1.0" height="15.0" fill="rgb(246,20,47)" rx="2" ry="2" />
<text  x="1003.59" y="1295.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="1001.6" y="1125" width="1.0" height="15.0" fill="rgb(215,48,33)" rx="2" ry="2" />
<text  x="1004.61" y="1135.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.17%)</title><rect x="1076.6" y="1413" width="2.0" height="15.0" fill="rgb(253,105,7)" rx="2" ry="2" />
<text  x="1079.56" y="1423.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 0.09%)</title><rect x="74.8" y="1397" width="1.0" height="15.0" fill="rgb(238,133,41)" rx="2" ry="2" />
<text  x="77.82" y="1407.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (4 samples, 0.34%)</title><rect x="276.4" y="1461" width="4.0" height="15.0" fill="rgb(228,190,44)" rx="2" ry="2" />
<text  x="279.39" y="1471.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (2 samples, 0.17%)</title><rect x="1004.6" y="949" width="2.1" height="15.0" fill="rgb(226,149,21)" rx="2" ry="2" />
<text  x="1007.64" y="959.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::consumer::Consumer&lt;u8&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="337.2" y="1413" width="1.0" height="15.0" fill="rgb(246,139,35)" rx="2" ry="2" />
<text  x="340.16" y="1423.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.26%)</title><rect x="1001.6" y="1381" width="3.0" height="15.0" fill="rgb(254,92,46)" rx="2" ry="2" />
<text  x="1004.61" y="1391.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.09%)</title><rect x="1094.8" y="1333" width="1.0" height="15.0" fill="rgb(236,159,37)" rx="2" ry="2" />
<text  x="1097.79" y="1343.5" ></text>
</g>
<g >
<title>ctx_resched (71 samples, 6.09%)</title><rect x="87.0" y="1237" width="71.9" height="15.0" fill="rgb(244,67,19)" rx="2" ry="2" />
<text  x="89.98" y="1247.5" >ctx_resc..</text>
</g>
<g >
<title>wb_workfn (1 samples, 0.09%)</title><rect x="1088.7" y="1477" width="1.0" height="15.0" fill="rgb(207,39,49)" rx="2" ry="2" />
<text  x="1091.71" y="1487.5" ></text>
</g>
<g >
<title>start_secondary (65 samples, 5.58%)</title><rect x="1090.7" y="1525" width="65.9" height="15.0" fill="rgb(224,214,1)" rx="2" ry="2" />
<text  x="1093.74" y="1535.5" >start_s..</text>
</g>
<g >
<title>rmqueue (7 samples, 0.60%)</title><rect x="930.7" y="1365" width="7.1" height="15.0" fill="rgb(223,12,24)" rx="2" ry="2" />
<text  x="933.70" y="1375.5" ></text>
</g>
<g >
<title>make_child (1 samples, 0.09%)</title><rect x="74.8" y="1413" width="1.0" height="15.0" fill="rgb(233,221,23)" rx="2" ry="2" />
<text  x="77.82" y="1423.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (1 samples, 0.09%)</title><rect x="37.3" y="1333" width="1.1" height="15.0" fill="rgb(234,171,44)" rx="2" ry="2" />
<text  x="40.35" y="1343.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (14 samples, 1.20%)</title><rect x="938.8" y="1413" width="14.2" height="15.0" fill="rgb(225,14,45)" rx="2" ry="2" />
<text  x="941.81" y="1423.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.09%)</title><rect x="164.0" y="1189" width="1.0" height="15.0" fill="rgb(227,131,38)" rx="2" ry="2" />
<text  x="166.96" y="1199.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.09%)</title><rect x="161.9" y="1077" width="1.0" height="15.0" fill="rgb(211,105,54)" rx="2" ry="2" />
<text  x="164.93" y="1087.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (3 samples, 0.26%)</title><rect x="187.3" y="1461" width="3.0" height="15.0" fill="rgb(247,60,32)" rx="2" ry="2" />
<text  x="190.25" y="1471.5" ></text>
</g>
<g >
<title>lookup_one_unlocked (1 samples, 0.09%)</title><rect x="1000.6" y="1237" width="1.0" height="15.0" fill="rgb(241,198,51)" rx="2" ry="2" />
<text  x="1003.59" y="1247.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 0.17%)</title><rect x="998.6" y="1381" width="2.0" height="15.0" fill="rgb(218,70,37)" rx="2" ry="2" />
<text  x="1001.57" y="1391.5" ></text>
</g>
<g >
<title>wb_over_bg_thresh (1 samples, 0.09%)</title><rect x="1088.7" y="1445" width="1.0" height="15.0" fill="rgb(208,9,6)" rx="2" ry="2" />
<text  x="1091.71" y="1455.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.09%)</title><rect x="1096.8" y="1301" width="1.0" height="15.0" fill="rgb(219,37,38)" rx="2" ry="2" />
<text  x="1099.82" y="1311.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="37.3" y="1205" width="1.1" height="15.0" fill="rgb(242,182,43)" rx="2" ry="2" />
<text  x="40.35" y="1215.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init::{{closure}} (2 samples, 0.17%)</title><rect x="1004.6" y="1285" width="2.1" height="15.0" fill="rgb(224,27,31)" rx="2" ry="2" />
<text  x="1007.64" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (25 samples, 2.15%)</title><rect x="251.1" y="1381" width="25.3" height="15.0" fill="rgb(224,73,35)" rx="2" ry="2" />
<text  x="254.06" y="1391.5" >d..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.09%)</title><rect x="310.8" y="1317" width="1.0" height="15.0" fill="rgb(212,142,6)" rx="2" ry="2" />
<text  x="313.82" y="1327.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1 samples, 0.09%)</title><rect x="73.8" y="1477" width="1.0" height="15.0" fill="rgb(214,7,41)" rx="2" ry="2" />
<text  x="76.81" y="1487.5" ></text>
</g>
<g >
<title>perf (85 samples, 7.30%)</title><rect x="79.9" y="1557" width="86.1" height="15.0" fill="rgb(248,144,52)" rx="2" ry="2" />
<text  x="82.89" y="1567.5" >perf</text>
</g>
<g >
<title>event_function_call (76 samples, 6.52%)</title><rect x="82.9" y="1333" width="77.0" height="15.0" fill="rgb(243,21,25)" rx="2" ry="2" />
<text  x="85.93" y="1343.5" >event_fu..</text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.09%)</title><rect x="221.7" y="1189" width="1.0" height="15.0" fill="rgb(235,49,43)" rx="2" ry="2" />
<text  x="224.69" y="1199.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (2 samples, 0.17%)</title><rect x="312.8" y="1349" width="2.1" height="15.0" fill="rgb(240,182,38)" rx="2" ry="2" />
<text  x="315.85" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="77.9" y="1525" width="1.0" height="15.0" fill="rgb(232,42,17)" rx="2" ry="2" />
<text  x="80.86" y="1535.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.09%)</title><rect x="291.6" y="1093" width="1.0" height="15.0" fill="rgb(228,21,15)" rx="2" ry="2" />
<text  x="294.58" y="1103.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.09%)</title><rect x="164.0" y="1141" width="1.0" height="15.0" fill="rgb(212,94,7)" rx="2" ry="2" />
<text  x="166.96" y="1151.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::VariantAccessMap&lt;T&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (2 samples, 0.17%)</title><rect x="1004.6" y="693" width="2.1" height="15.0" fill="rgb(225,1,13)" rx="2" ry="2" />
<text  x="1007.64" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (12 samples, 1.03%)</title><rect x="316.9" y="1381" width="12.2" height="15.0" fill="rgb(249,107,49)" rx="2" ry="2" />
<text  x="319.90" y="1391.5" ></text>
</g>
<g >
<title>generic_perform_write (3 samples, 0.26%)</title><rect x="161.9" y="1205" width="3.1" height="15.0" fill="rgb(239,139,54)" rx="2" ry="2" />
<text  x="164.93" y="1215.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.09%)</title><rect x="78.9" y="1557" width="1.0" height="15.0" fill="rgb(211,147,40)" rx="2" ry="2" />
<text  x="81.88" y="1567.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4 samples, 0.34%)</title><rect x="1158.6" y="1301" width="4.1" height="15.0" fill="rgb(216,107,31)" rx="2" ry="2" />
<text  x="1161.60" y="1311.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (28 samples, 2.40%)</title><rect x="221.7" y="1461" width="28.4" height="15.0" fill="rgb(205,16,28)" rx="2" ry="2" />
<text  x="224.69" y="1471.5" >Na..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.09%)</title><rect x="955.0" y="1365" width="1.0" height="15.0" fill="rgb(215,25,23)" rx="2" ry="2" />
<text  x="958.01" y="1375.5" ></text>
</g>
<g >
<title>memory_stat_format (1 samples, 0.09%)</title><rect x="1084.7" y="1365" width="1.0" height="15.0" fill="rgb(223,37,54)" rx="2" ry="2" />
<text  x="1087.66" y="1375.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c (1 samples, 0.09%)</title><rect x="1005.7" y="197" width="1.0" height="15.0" fill="rgb(234,159,9)" rx="2" ry="2" />
<text  x="1008.66" y="207.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.26%)</title><rect x="1001.6" y="1333" width="3.0" height="15.0" fill="rgb(235,105,3)" rx="2" ry="2" />
<text  x="1004.61" y="1343.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::FilesystemMetadata::init_fs_metadata (2 samples, 0.17%)</title><rect x="1004.6" y="1205" width="2.1" height="15.0" fill="rgb(235,2,37)" rx="2" ry="2" />
<text  x="1007.64" y="1215.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (1 samples, 0.09%)</title><rect x="160.9" y="1205" width="1.0" height="15.0" fill="rgb(245,151,35)" rx="2" ry="2" />
<text  x="163.92" y="1215.5" ></text>
</g>
<g >
<title>kernfs_seq_show (3 samples, 0.26%)</title><rect x="24.2" y="1413" width="3.0" height="15.0" fill="rgb(237,190,47)" rx="2" ry="2" />
<text  x="27.18" y="1423.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1 samples, 0.09%)</title><rect x="1181.9" y="1365" width="1.0" height="15.0" fill="rgb(210,153,16)" rx="2" ry="2" />
<text  x="1184.90" y="1375.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2 samples, 0.17%)</title><rect x="1076.6" y="1445" width="2.0" height="15.0" fill="rgb(242,156,48)" rx="2" ry="2" />
<text  x="1079.56" y="1455.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (1 samples, 0.09%)</title><rect x="190.3" y="1413" width="1.0" height="15.0" fill="rgb(245,220,37)" rx="2" ry="2" />
<text  x="193.29" y="1423.5" ></text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (1 samples, 0.09%)</title><rect x="190.3" y="1429" width="1.0" height="15.0" fill="rgb(235,200,44)" rx="2" ry="2" />
<text  x="193.29" y="1439.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.09%)</title><rect x="308.8" y="1477" width="1.0" height="15.0" fill="rgb(221,155,51)" rx="2" ry="2" />
<text  x="311.80" y="1487.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.09%)</title><rect x="39.4" y="1349" width="1.0" height="15.0" fill="rgb(221,65,34)" rx="2" ry="2" />
<text  x="42.37" y="1359.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.09%)</title><rect x="984.4" y="1429" width="1.0" height="15.0" fill="rgb(232,108,6)" rx="2" ry="2" />
<text  x="987.39" y="1439.5" ></text>
</g>
<g >
<title>_perf_ioctl (79 samples, 6.78%)</title><rect x="79.9" y="1381" width="80.0" height="15.0" fill="rgb(229,173,53)" rx="2" ry="2" />
<text  x="82.89" y="1391.5" >_perf_ioctl</text>
</g>
<g >
<title>cpuidle_enter_state (22 samples, 1.89%)</title><rect x="1157.6" y="1381" width="22.3" height="15.0" fill="rgb(210,36,48)" rx="2" ry="2" />
<text  x="1160.59" y="1391.5" >c..</text>
</g>
<g >
<title>unmap_single_vma (26 samples, 2.23%)</title><rect x="281.5" y="1205" width="26.3" height="15.0" fill="rgb(253,164,24)" rx="2" ry="2" />
<text  x="284.45" y="1215.5" >u..</text>
</g>
<g >
<title>do_epoll_pwait.part.0 (1 samples, 0.09%)</title><rect x="1075.5" y="1493" width="1.1" height="15.0" fill="rgb(216,86,15)" rx="2" ry="2" />
<text  x="1078.55" y="1503.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize (2 samples, 0.17%)</title><rect x="1004.6" y="805" width="2.1" height="15.0" fill="rgb(216,90,50)" rx="2" ry="2" />
<text  x="1007.64" y="815.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.09%)</title><rect x="1004.6" y="309" width="1.1" height="15.0" fill="rgb(220,87,3)" rx="2" ry="2" />
<text  x="1007.64" y="319.5" ></text>
</g>
<g >
<title>__evlist__enable (80 samples, 6.87%)</title><rect x="79.9" y="1509" width="81.0" height="15.0" fill="rgb(245,64,45)" rx="2" ry="2" />
<text  x="82.89" y="1519.5" >__evlist_..</text>
</g>
<g >
<title>ksys_read (3 samples, 0.26%)</title><rect x="24.2" y="1493" width="3.0" height="15.0" fill="rgb(212,157,12)" rx="2" ry="2" />
<text  x="27.18" y="1503.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.09%)</title><rect x="31.3" y="1429" width="1.0" height="15.0" fill="rgb(252,77,14)" rx="2" ry="2" />
<text  x="34.27" y="1439.5" ></text>
</g>
<g >
<title>balance_dirty_pages (1 samples, 0.09%)</title><rect x="160.9" y="1189" width="1.0" height="15.0" fill="rgb(254,118,42)" rx="2" ry="2" />
<text  x="163.92" y="1199.5" ></text>
</g>
<g >
<title>process_vm_writev (3 samples, 0.26%)</title><rect x="981.3" y="1493" width="3.1" height="15.0" fill="rgb(237,88,43)" rx="2" ry="2" />
<text  x="984.35" y="1503.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 0.09%)</title><rect x="73.8" y="1525" width="1.0" height="15.0" fill="rgb(233,143,33)" rx="2" ry="2" />
<text  x="76.81" y="1535.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (2 samples, 0.17%)</title><rect x="1004.6" y="1045" width="2.1" height="15.0" fill="rgb(226,206,46)" rx="2" ry="2" />
<text  x="1007.64" y="1055.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.09%)</title><rect x="285.5" y="1093" width="1.0" height="15.0" fill="rgb(240,49,13)" rx="2" ry="2" />
<text  x="288.50" y="1103.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.09%)</title><rect x="1089.7" y="1429" width="1.0" height="15.0" fill="rgb(233,229,36)" rx="2" ry="2" />
<text  x="1092.73" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="250.1" y="1397" width="1.0" height="15.0" fill="rgb(225,128,15)" rx="2" ry="2" />
<text  x="253.05" y="1407.5" ></text>
</g>
<g >
<title>xas_find (1 samples, 0.09%)</title><rect x="956.0" y="1381" width="1.0" height="15.0" fill="rgb(219,23,36)" rx="2" ry="2" />
<text  x="959.03" y="1391.5" ></text>
</g>
<g >
<title>write (4 samples, 0.34%)</title><rect x="161.9" y="1413" width="4.1" height="15.0" fill="rgb(241,182,39)" rx="2" ry="2" />
<text  x="164.93" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.26%)</title><rect x="330.1" y="1365" width="3.0" height="15.0" fill="rgb(215,88,2)" rx="2" ry="2" />
<text  x="333.07" y="1375.5" ></text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force (2 samples, 0.17%)</title><rect x="1004.6" y="1413" width="2.1" height="15.0" fill="rgb(247,40,3)" rx="2" ry="2" />
<text  x="1007.64" y="1423.5" ></text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.09%)</title><rect x="161.9" y="1109" width="1.0" height="15.0" fill="rgb(230,221,15)" rx="2" ry="2" />
<text  x="164.93" y="1119.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::libc_mmap (26 samples, 2.23%)</title><rect x="281.5" y="1397" width="26.3" height="15.0" fill="rgb(228,120,52)" rx="2" ry="2" />
<text  x="284.45" y="1407.5" >r..</text>
</g>
<g >
<title>__x64_sys_ioctl (1 samples, 0.09%)</title><rect x="1081.6" y="1509" width="1.0" height="15.0" fill="rgb(250,23,53)" rx="2" ry="2" />
<text  x="1084.62" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 6.87%)</title><rect x="79.9" y="1429" width="81.0" height="15.0" fill="rgb(242,160,32)" rx="2" ry="2" />
<text  x="82.89" y="1439.5" >do_syscal..</text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="318.9" y="1349" width="1.0" height="15.0" fill="rgb(214,61,7)" rx="2" ry="2" />
<text  x="321.93" y="1359.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (9 samples, 0.77%)</title><rect x="171.0" y="1477" width="9.2" height="15.0" fill="rgb(249,102,26)" rx="2" ry="2" />
<text  x="174.05" y="1487.5" ></text>
</g>
<g >
<title>up_read (3 samples, 0.26%)</title><rect x="963.1" y="1493" width="3.1" height="15.0" fill="rgb(212,120,26)" rx="2" ry="2" />
<text  x="966.12" y="1503.5" ></text>
</g>
<g >
<title>llseek (4 samples, 0.34%)</title><rect x="329.1" y="1381" width="4.0" height="15.0" fill="rgb(223,52,52)" rx="2" ry="2" />
<text  x="332.06" y="1391.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (1 samples, 0.09%)</title><rect x="1082.6" y="1493" width="1.0" height="15.0" fill="rgb(214,126,41)" rx="2" ry="2" />
<text  x="1085.64" y="1503.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.09%)</title><rect x="39.4" y="1285" width="1.0" height="15.0" fill="rgb(226,143,49)" rx="2" ry="2" />
<text  x="42.37" y="1295.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.09%)</title><rect x="1181.9" y="1349" width="1.0" height="15.0" fill="rgb(228,172,43)" rx="2" ry="2" />
<text  x="1184.90" y="1359.5" ></text>
</g>
<g >
<title>alloc_pages_vma (37 samples, 3.18%)</title><rect x="901.3" y="1413" width="37.5" height="15.0" fill="rgb(214,202,29)" rx="2" ry="2" />
<text  x="904.33" y="1423.5" >all..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="310.8" y="1333" width="1.0" height="15.0" fill="rgb(251,96,21)" rx="2" ry="2" />
<text  x="313.82" y="1343.5" ></text>
</g>
<g >
<title>pm_qos_read_value (1 samples, 0.09%)</title><rect x="1180.9" y="1365" width="1.0" height="15.0" fill="rgb(216,45,20)" rx="2" ry="2" />
<text  x="1183.88" y="1375.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.09%)</title><rect x="160.9" y="1365" width="1.0" height="15.0" fill="rgb(217,192,30)" rx="2" ry="2" />
<text  x="163.92" y="1375.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.09%)</title><rect x="190.3" y="1189" width="1.0" height="15.0" fill="rgb(235,183,19)" rx="2" ry="2" />
<text  x="193.29" y="1199.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.09%)</title><rect x="21.1" y="1381" width="1.1" height="15.0" fill="rgb(240,86,46)" rx="2" ry="2" />
<text  x="24.14" y="1391.5" ></text>
</g>
<g >
<title>_rl_init_terminal_io (1 samples, 0.09%)</title><rect x="75.8" y="1381" width="1.0" height="15.0" fill="rgb(239,56,45)" rx="2" ry="2" />
<text  x="78.84" y="1391.5" ></text>
</g>
<g >
<title>psi_show (1 samples, 0.09%)</title><rect x="24.2" y="1365" width="1.0" height="15.0" fill="rgb(238,218,31)" rx="2" ry="2" />
<text  x="27.18" y="1375.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (1 samples, 0.09%)</title><rect x="1189.0" y="1429" width="1.0" height="15.0" fill="rgb(217,133,14)" rx="2" ry="2" />
<text  x="1191.99" y="1439.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.09%)</title><rect x="311.8" y="1365" width="1.0" height="15.0" fill="rgb(225,28,54)" rx="2" ry="2" />
<text  x="314.84" y="1375.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.09%)</title><rect x="1004.6" y="245" width="1.1" height="15.0" fill="rgb(225,134,19)" rx="2" ry="2" />
<text  x="1007.64" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="984.4" y="1333" width="1.0" height="15.0" fill="rgb(225,172,38)" rx="2" ry="2" />
<text  x="987.39" y="1343.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.09%)</title><rect x="31.3" y="1381" width="1.0" height="15.0" fill="rgb(246,99,49)" rx="2" ry="2" />
<text  x="34.27" y="1391.5" ></text>
</g>
<g >
<title>NaClSysMmapDecoder (1 samples, 0.09%)</title><rect x="280.4" y="1509" width="1.1" height="15.0" fill="rgb(225,128,50)" rx="2" ry="2" />
<text  x="283.44" y="1519.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.09%)</title><rect x="221.7" y="1237" width="1.0" height="15.0" fill="rgb(225,194,46)" rx="2" ry="2" />
<text  x="224.69" y="1247.5" ></text>
</g>
<g >
<title>rcu_segcblist_accelerate (1 samples, 0.09%)</title><rect x="1095.8" y="1317" width="1.0" height="15.0" fill="rgb(225,143,50)" rx="2" ry="2" />
<text  x="1098.80" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (2 samples, 0.17%)</title><rect x="1044.1" y="1509" width="2.1" height="15.0" fill="rgb(216,168,51)" rx="2" ry="2" />
<text  x="1047.15" y="1519.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4 samples, 0.34%)</title><rect x="1158.6" y="1317" width="4.1" height="15.0" fill="rgb(225,191,2)" rx="2" ry="2" />
<text  x="1161.60" y="1327.5" ></text>
</g>
<g >
<title>CopyBundleTails (3 samples, 0.26%)</title><rect x="187.3" y="1445" width="3.0" height="15.0" fill="rgb(242,19,37)" rx="2" ry="2" />
<text  x="190.25" y="1455.5" ></text>
</g>
<g >
<title>ovl_lower_positive (1 samples, 0.09%)</title><rect x="1000.6" y="1269" width="1.0" height="15.0" fill="rgb(251,103,33)" rx="2" ry="2" />
<text  x="1003.59" y="1279.5" ></text>
</g>
<g >
<title>__do_munmap (26 samples, 2.23%)</title><rect x="281.5" y="1253" width="26.3" height="15.0" fill="rgb(242,208,32)" rx="2" ry="2" />
<text  x="284.45" y="1263.5" >_..</text>
</g>
<g >
<title>DynArrayGet (1 samples, 0.09%)</title><rect x="980.3" y="1525" width="1.0" height="15.0" fill="rgb(251,37,40)" rx="2" ry="2" />
<text  x="983.33" y="1535.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="1004.6" y="981" width="2.1" height="15.0" fill="rgb(243,63,23)" rx="2" ry="2" />
<text  x="1007.64" y="991.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (2 samples, 0.17%)</title><rect x="1004.6" y="1381" width="2.1" height="15.0" fill="rgb(244,224,13)" rx="2" ry="2" />
<text  x="1007.64" y="1391.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.09%)</title><rect x="314.9" y="1365" width="1.0" height="15.0" fill="rgb(234,212,5)" rx="2" ry="2" />
<text  x="317.88" y="1375.5" ></text>
</g>
<g >
<title>ioctl (80 samples, 6.87%)</title><rect x="79.9" y="1461" width="81.0" height="15.0" fill="rgb(208,65,13)" rx="2" ry="2" />
<text  x="82.89" y="1471.5" >ioctl</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.09%)</title><rect x="1003.6" y="1157" width="1.0" height="15.0" fill="rgb(242,156,33)" rx="2" ry="2" />
<text  x="1006.63" y="1167.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.09%)</title><rect x="1158.6" y="1285" width="1.0" height="15.0" fill="rgb(212,34,28)" rx="2" ry="2" />
<text  x="1161.60" y="1295.5" ></text>
</g>
<g >
<title>copy_p4d_range (1 samples, 0.09%)</title><rect x="74.8" y="1221" width="1.0" height="15.0" fill="rgb(236,53,35)" rx="2" ry="2" />
<text  x="77.82" y="1231.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.09%)</title><rect x="72.8" y="1397" width="1.0" height="15.0" fill="rgb(209,190,48)" rx="2" ry="2" />
<text  x="75.80" y="1407.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (4 samples, 0.34%)</title><rect x="276.4" y="1365" width="4.0" height="15.0" fill="rgb(226,77,10)" rx="2" ry="2" />
<text  x="279.39" y="1375.5" ></text>
</g>
<g >
<title>__irqentry_text_end (1 samples, 0.09%)</title><rect x="866.9" y="1525" width="1.0" height="15.0" fill="rgb(247,198,4)" rx="2" ry="2" />
<text  x="869.89" y="1535.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (1 samples, 0.09%)</title><rect x="70.8" y="1445" width="1.0" height="15.0" fill="rgb(233,77,17)" rx="2" ry="2" />
<text  x="73.77" y="1455.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.09%)</title><rect x="1091.8" y="1429" width="1.0" height="15.0" fill="rgb(243,43,43)" rx="2" ry="2" />
<text  x="1094.75" y="1439.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (3 samples, 0.26%)</title><rect x="161.9" y="1253" width="3.1" height="15.0" fill="rgb(237,15,11)" rx="2" ry="2" />
<text  x="164.93" y="1263.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::ser::Serialize for dashmap::DashMap&lt;K,V,H&gt;&gt;::serialize (3 samples, 0.26%)</title><rect x="1001.6" y="1221" width="3.0" height="15.0" fill="rgb(228,185,20)" rx="2" ry="2" />
<text  x="1004.61" y="1231.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3 samples, 0.26%)</title><rect x="1092.8" y="1397" width="3.0" height="15.0" fill="rgb(232,203,13)" rx="2" ry="2" />
<text  x="1095.76" y="1407.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="1004.6" y="437" width="2.1" height="15.0" fill="rgb(234,129,1)" rx="2" ry="2" />
<text  x="1007.64" y="447.5" ></text>
</g>
<g >
<title>rest_init (33 samples, 2.83%)</title><rect x="1156.6" y="1461" width="33.4" height="15.0" fill="rgb(221,203,14)" rx="2" ry="2" />
<text  x="1159.58" y="1471.5" >re..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.09%)</title><rect x="1002.6" y="1173" width="1.0" height="15.0" fill="rgb(231,100,6)" rx="2" ry="2" />
<text  x="1005.62" y="1183.5" ></text>
</g>
<g >
<title>__x64_sys_read (8 samples, 0.69%)</title><rect x="319.9" y="1317" width="8.1" height="15.0" fill="rgb(239,49,9)" rx="2" ry="2" />
<text  x="322.94" y="1327.5" ></text>
</g>
<g >
<title>cpuidle_enter (59 samples, 5.06%)</title><rect x="1090.7" y="1461" width="59.8" height="15.0" fill="rgb(218,82,6)" rx="2" ry="2" />
<text  x="1093.74" y="1471.5" >cpuidl..</text>
</g>
<g >
<title>std::sync::once::Once::call_inner (2 samples, 0.17%)</title><rect x="1004.6" y="1333" width="2.1" height="15.0" fill="rgb(239,229,30)" rx="2" ry="2" />
<text  x="1007.64" y="1343.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (3 samples, 0.26%)</title><rect x="981.3" y="1365" width="3.1" height="15.0" fill="rgb(208,127,16)" rx="2" ry="2" />
<text  x="984.35" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.09%)</title><rect x="1005.7" y="101" width="1.0" height="15.0" fill="rgb(237,190,33)" rx="2" ry="2" />
<text  x="1008.66" y="111.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (3 samples, 0.26%)</title><rect x="1001.6" y="1397" width="3.0" height="15.0" fill="rgb(230,12,1)" rx="2" ry="2" />
<text  x="1004.61" y="1407.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.09%)</title><rect x="311.8" y="1381" width="1.0" height="15.0" fill="rgb(223,133,19)" rx="2" ry="2" />
<text  x="314.84" y="1391.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.09%)</title><rect x="936.8" y="1333" width="1.0" height="15.0" fill="rgb(242,143,0)" rx="2" ry="2" />
<text  x="939.78" y="1343.5" ></text>
</g>
<g >
<title>reweight_entity (1 samples, 0.09%)</title><rect x="32.3" y="1221" width="1.0" height="15.0" fill="rgb(236,167,29)" rx="2" ry="2" />
<text  x="35.28" y="1231.5" ></text>
</g>
<g >
<title>dup_mmap (1 samples, 0.09%)</title><rect x="74.8" y="1253" width="1.0" height="15.0" fill="rgb(211,219,31)" rx="2" ry="2" />
<text  x="77.82" y="1263.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (1 samples, 0.09%)</title><rect x="30.3" y="1477" width="1.0" height="15.0" fill="rgb(206,8,22)" rx="2" ry="2" />
<text  x="33.26" y="1487.5" ></text>
</g>
<g >
<title>do_read_fault (1 samples, 0.09%)</title><rect x="956.0" y="1413" width="1.0" height="15.0" fill="rgb(240,3,41)" rx="2" ry="2" />
<text  x="959.03" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.09%)</title><rect x="77.9" y="1509" width="1.0" height="15.0" fill="rgb(237,121,39)" rx="2" ry="2" />
<text  x="80.86" y="1519.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.09%)</title><rect x="1087.7" y="1413" width="1.0" height="15.0" fill="rgb(225,99,49)" rx="2" ry="2" />
<text  x="1090.70" y="1423.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3 samples, 0.26%)</title><rect x="1092.8" y="1365" width="3.0" height="15.0" fill="rgb(214,35,17)" rx="2" ry="2" />
<text  x="1095.76" y="1375.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (27 samples, 2.32%)</title><rect x="222.7" y="1301" width="27.4" height="15.0" fill="rgb(236,202,46)" rx="2" ry="2" />
<text  x="225.70" y="1311.5" >r..</text>
</g>
<g >
<title>vfs_write (4 samples, 0.34%)</title><rect x="161.9" y="1333" width="4.1" height="15.0" fill="rgb(216,118,43)" rx="2" ry="2" />
<text  x="164.93" y="1343.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.09%)</title><rect x="328.0" y="1301" width="1.1" height="15.0" fill="rgb(214,79,2)" rx="2" ry="2" />
<text  x="331.04" y="1311.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::multiple::RefMulti&lt;alloc::string::String,usize&gt;&gt; (1 samples, 0.09%)</title><rect x="1003.6" y="1205" width="1.0" height="15.0" fill="rgb(252,184,38)" rx="2" ry="2" />
<text  x="1006.63" y="1215.5" ></text>
</g>
<g >
<title>seq_read_iter (3 samples, 0.26%)</title><rect x="24.2" y="1429" width="3.0" height="15.0" fill="rgb(252,193,3)" rx="2" ry="2" />
<text  x="27.18" y="1439.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (13 samples, 1.12%)</title><rect x="488.1" y="1365" width="13.1" height="15.0" fill="rgb(225,182,11)" rx="2" ry="2" />
<text  x="491.08" y="1375.5" ></text>
</g>
<g >
<title>CachedMapWritableText (1 samples, 0.09%)</title><rect x="190.3" y="1445" width="1.0" height="15.0" fill="rgb(250,81,11)" rx="2" ry="2" />
<text  x="193.29" y="1455.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (51 samples, 4.38%)</title><rect x="1098.8" y="1429" width="51.7" height="15.0" fill="rgb(250,153,44)" rx="2" ry="2" />
<text  x="1101.84" y="1439.5" >mwait..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (26 samples, 2.23%)</title><rect x="40.4" y="1429" width="26.3" height="15.0" fill="rgb(221,229,26)" rx="2" ry="2" />
<text  x="43.39" y="1439.5" >m..</text>
</g>
<g >
<title>do_filp_open (1 samples, 0.09%)</title><rect x="1005.7" y="69" width="1.0" height="15.0" fill="rgb(215,44,20)" rx="2" ry="2" />
<text  x="1008.66" y="79.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="1002.6" y="1157" width="1.0" height="15.0" fill="rgb(252,95,40)" rx="2" ry="2" />
<text  x="1005.62" y="1167.5" ></text>
</g>
<g >
<title>rebalance_domains (2 samples, 0.17%)</title><rect x="1165.7" y="1285" width="2.0" height="15.0" fill="rgb(250,221,38)" rx="2" ry="2" />
<text  x="1168.69" y="1295.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.constprop.0.isra.0 (2 samples, 0.17%)</title><rect x="1151.5" y="1461" width="2.0" height="15.0" fill="rgb(251,151,7)" rx="2" ry="2" />
<text  x="1154.51" y="1471.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3 samples, 0.26%)</title><rect x="1092.8" y="1381" width="3.0" height="15.0" fill="rgb(209,165,48)" rx="2" ry="2" />
<text  x="1095.76" y="1391.5" ></text>
</g>
<g >
<title>lind_write (323 samples, 27.73%)</title><rect x="436.4" y="1477" width="327.2" height="15.0" fill="rgb(254,123,30)" rx="2" ry="2" />
<text  x="439.42" y="1487.5" >lind_write</text>
</g>
<g >
<title>__schedule (1 samples, 0.09%)</title><rect x="1089.7" y="1477" width="1.0" height="15.0" fill="rgb(250,147,12)" rx="2" ry="2" />
<text  x="1092.73" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_read (3 samples, 0.26%)</title><rect x="24.2" y="1509" width="3.0" height="15.0" fill="rgb(220,188,8)" rx="2" ry="2" />
<text  x="27.18" y="1519.5" ></text>
</g>
<g >
<title>set_next_task_idle (1 samples, 0.09%)</title><rect x="1078.6" y="1381" width="1.0" height="15.0" fill="rgb(222,115,10)" rx="2" ry="2" />
<text  x="1081.58" y="1391.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.09%)</title><rect x="337.2" y="1381" width="1.0" height="15.0" fill="rgb(243,148,26)" rx="2" ry="2" />
<text  x="340.16" y="1391.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_enum (2 samples, 0.17%)</title><rect x="1004.6" y="789" width="2.1" height="15.0" fill="rgb(249,100,20)" rx="2" ry="2" />
<text  x="1007.64" y="799.5" ></text>
</g>
<g >
<title>unmap_region (26 samples, 2.23%)</title><rect x="281.5" y="1237" width="26.3" height="15.0" fill="rgb(222,15,36)" rx="2" ry="2" />
<text  x="284.45" y="1247.5" >u..</text>
</g>
<g >
<title>dequeue_task (1 samples, 0.09%)</title><rect x="29.2" y="1461" width="1.1" height="15.0" fill="rgb(205,160,13)" rx="2" ry="2" />
<text  x="32.24" y="1471.5" ></text>
</g>
<g >
<title>copy_page_range (1 samples, 0.09%)</title><rect x="74.8" y="1237" width="1.0" height="15.0" fill="rgb(209,133,46)" rx="2" ry="2" />
<text  x="77.82" y="1247.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.26%)</title><rect x="1001.6" y="1253" width="3.0" height="15.0" fill="rgb(240,214,14)" rx="2" ry="2" />
<text  x="1004.61" y="1263.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="984.4" y="1317" width="1.0" height="15.0" fill="rgb(238,86,35)" rx="2" ry="2" />
<text  x="987.39" y="1327.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.17%)</title><rect x="1187.0" y="1413" width="2.0" height="15.0" fill="rgb(239,154,44)" rx="2" ry="2" />
<text  x="1189.96" y="1423.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.09%)</title><rect x="1002.6" y="1141" width="1.0" height="15.0" fill="rgb(230,64,38)" rx="2" ry="2" />
<text  x="1005.62" y="1151.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (25 samples, 2.15%)</title><rect x="251.1" y="1301" width="25.3" height="15.0" fill="rgb(213,211,51)" rx="2" ry="2" />
<text  x="254.06" y="1311.5" >r..</text>
</g>
<g >
<title>lind_mmap (26 samples, 2.23%)</title><rect x="281.5" y="1461" width="26.3" height="15.0" fill="rgb(242,97,16)" rx="2" ry="2" />
<text  x="284.45" y="1471.5" >l..</text>
</g>
<g >
<title>timerfd_tmrproc (1 samples, 0.09%)</title><rect x="37.3" y="1349" width="1.1" height="15.0" fill="rgb(242,189,9)" rx="2" ry="2" />
<text  x="40.35" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (27 samples, 2.32%)</title><rect x="1156.6" y="1413" width="27.3" height="15.0" fill="rgb(233,176,5)" rx="2" ry="2" />
<text  x="1159.58" y="1423.5" >c..</text>
</g>
<g >
<title>seq_read_iter (2 samples, 0.17%)</title><rect x="1085.7" y="1429" width="2.0" height="15.0" fill="rgb(213,229,51)" rx="2" ry="2" />
<text  x="1088.67" y="1439.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.09%)</title><rect x="190.3" y="1253" width="1.0" height="15.0" fill="rgb(239,13,49)" rx="2" ry="2" />
<text  x="193.29" y="1263.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1 samples, 0.09%)</title><rect x="73.8" y="1365" width="1.0" height="15.0" fill="rgb(212,214,43)" rx="2" ry="2" />
<text  x="76.81" y="1375.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.09%)</title><rect x="37.3" y="1253" width="1.1" height="15.0" fill="rgb(230,30,6)" rx="2" ry="2" />
<text  x="40.35" y="1263.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once_force (2 samples, 0.17%)</title><rect x="1004.6" y="1349" width="2.1" height="15.0" fill="rgb(225,116,37)" rx="2" ry="2" />
<text  x="1007.64" y="1359.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.09%)</title><rect x="1044.1" y="1397" width="1.1" height="15.0" fill="rgb(244,147,50)" rx="2" ry="2" />
<text  x="1047.15" y="1407.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (1 samples, 0.09%)</title><rect x="1161.6" y="1221" width="1.1" height="15.0" fill="rgb(224,126,9)" rx="2" ry="2" />
<text  x="1164.64" y="1231.5" ></text>
</g>
<g >
<title>need_update (1 samples, 0.09%)</title><rect x="1182.9" y="1349" width="1.0" height="15.0" fill="rgb(247,226,10)" rx="2" ry="2" />
<text  x="1185.91" y="1359.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.09%)</title><rect x="1078.6" y="1461" width="1.0" height="15.0" fill="rgb(237,173,2)" rx="2" ry="2" />
<text  x="1081.58" y="1471.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.09%)</title><rect x="1079.6" y="1461" width="1.0" height="15.0" fill="rgb(208,84,19)" rx="2" ry="2" />
<text  x="1082.60" y="1471.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_enum_map::{{closure}} (2 samples, 0.17%)</title><rect x="1004.6" y="741" width="2.1" height="15.0" fill="rgb(229,206,25)" rx="2" ry="2" />
<text  x="1007.64" y="751.5" ></text>
</g>
<g >
<title>Process0Operands (1 samples, 0.09%)</title><rect x="999.6" y="1349" width="1.0" height="15.0" fill="rgb(228,28,38)" rx="2" ry="2" />
<text  x="1002.58" y="1359.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.09%)</title><rect x="1080.6" y="1477" width="1.0" height="15.0" fill="rgb(251,64,41)" rx="2" ry="2" />
<text  x="1083.61" y="1487.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.09%)</title><rect x="23.2" y="1461" width="1.0" height="15.0" fill="rgb(244,153,15)" rx="2" ry="2" />
<text  x="26.17" y="1471.5" ></text>
</g>
<g >
<title>psi_group_change (2 samples, 0.17%)</title><rect x="1153.5" y="1429" width="2.1" height="15.0" fill="rgb(252,201,8)" rx="2" ry="2" />
<text  x="1156.54" y="1439.5" ></text>
</g>
<g >
<title>rest_init (1 samples, 0.09%)</title><rect x="73.8" y="1461" width="1.0" height="15.0" fill="rgb(220,81,54)" rx="2" ry="2" />
<text  x="76.81" y="1471.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (2 samples, 0.17%)</title><rect x="289.6" y="1093" width="2.0" height="15.0" fill="rgb(237,75,25)" rx="2" ry="2" />
<text  x="292.55" y="1103.5" ></text>
</g>
<g >
<title>__cmd_record (1 samples, 0.09%)</title><rect x="78.9" y="1525" width="1.0" height="15.0" fill="rgb(237,17,3)" rx="2" ry="2" />
<text  x="81.88" y="1535.5" ></text>
</g>
<g >
<title>try_charge_memcg (1 samples, 0.09%)</title><rect x="896.3" y="1381" width="1.0" height="15.0" fill="rgb(212,211,51)" rx="2" ry="2" />
<text  x="899.27" y="1391.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.09%)</title><rect x="67.7" y="1461" width="1.0" height="15.0" fill="rgb(237,191,45)" rx="2" ry="2" />
<text  x="70.73" y="1471.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.09%)</title><rect x="1161.6" y="1237" width="1.1" height="15.0" fill="rgb(217,161,49)" rx="2" ry="2" />
<text  x="1164.64" y="1247.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (25 samples, 2.15%)</title><rect x="251.1" y="1285" width="25.3" height="15.0" fill="rgb(223,209,13)" rx="2" ry="2" />
<text  x="254.06" y="1295.5" >r..</text>
</g>
<g >
<title>rmqueue_bulk (5 samples, 0.43%)</title><rect x="932.7" y="1349" width="5.1" height="15.0" fill="rgb(209,173,50)" rx="2" ry="2" />
<text  x="935.73" y="1359.5" ></text>
</g>
<g >
<title>lookup_one_common (1 samples, 0.09%)</title><rect x="1000.6" y="1221" width="1.0" height="15.0" fill="rgb(233,111,12)" rx="2" ry="2" />
<text  x="1003.59" y="1231.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.09%)</title><rect x="221.7" y="1141" width="1.0" height="15.0" fill="rgb(215,5,9)" rx="2" ry="2" />
<text  x="224.69" y="1151.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (1 samples, 0.09%)</title><rect x="1082.6" y="1509" width="1.0" height="15.0" fill="rgb(205,168,46)" rx="2" ry="2" />
<text  x="1085.64" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="984.4" y="1493" width="1.0" height="15.0" fill="rgb(208,38,27)" rx="2" ry="2" />
<text  x="987.39" y="1503.5" ></text>
</g>
<g >
<title>do_idle (43 samples, 3.69%)</title><rect x="30.3" y="1493" width="43.5" height="15.0" fill="rgb(210,54,6)" rx="2" ry="2" />
<text  x="33.26" y="1503.5" >do_i..</text>
</g>
<g >
<title>NaClMakeDynamicTextShared (1 samples, 0.09%)</title><rect x="250.1" y="1461" width="1.0" height="15.0" fill="rgb(215,88,30)" rx="2" ry="2" />
<text  x="253.05" y="1471.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.17%)</title><rect x="357.4" y="1365" width="2.0" height="15.0" fill="rgb(223,110,46)" rx="2" ry="2" />
<text  x="360.42" y="1375.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.09%)</title><rect x="1155.6" y="1477" width="1.0" height="15.0" fill="rgb(226,178,36)" rx="2" ry="2" />
<text  x="1158.56" y="1487.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.17%)</title><rect x="1167.7" y="1285" width="2.0" height="15.0" fill="rgb(224,45,20)" rx="2" ry="2" />
<text  x="1170.72" y="1295.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.09%)</title><rect x="22.2" y="1477" width="1.0" height="15.0" fill="rgb(208,96,44)" rx="2" ry="2" />
<text  x="25.15" y="1487.5" ></text>
</g>
<g >
<title>wb_do_writeback (1 samples, 0.09%)</title><rect x="1088.7" y="1461" width="1.0" height="15.0" fill="rgb(252,216,39)" rx="2" ry="2" />
<text  x="1091.71" y="1471.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.09%)</title><rect x="160.9" y="1301" width="1.0" height="15.0" fill="rgb(215,122,35)" rx="2" ry="2" />
<text  x="163.92" y="1311.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.09%)</title><rect x="1075.5" y="1397" width="1.1" height="15.0" fill="rgb(211,221,41)" rx="2" ry="2" />
<text  x="1078.55" y="1407.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (4 samples, 0.34%)</title><rect x="276.4" y="1381" width="4.0" height="15.0" fill="rgb(214,27,48)" rx="2" ry="2" />
<text  x="279.39" y="1391.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (2 samples, 0.17%)</title><rect x="1004.6" y="1253" width="2.1" height="15.0" fill="rgb(232,212,35)" rx="2" ry="2" />
<text  x="1007.64" y="1263.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (2 samples, 0.17%)</title><rect x="1076.6" y="1509" width="2.0" height="15.0" fill="rgb(230,111,10)" rx="2" ry="2" />
<text  x="1079.56" y="1519.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.09%)</title><rect x="21.1" y="1397" width="1.1" height="15.0" fill="rgb(226,161,0)" rx="2" ry="2" />
<text  x="24.14" y="1407.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.09%)</title><rect x="221.7" y="1125" width="1.0" height="15.0" fill="rgb(209,209,30)" rx="2" ry="2" />
<text  x="224.69" y="1135.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.34%)</title><rect x="161.9" y="1381" width="4.1" height="15.0" fill="rgb(239,14,20)" rx="2" ry="2" />
<text  x="164.93" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (1 samples, 0.09%)</title><rect x="21.1" y="1509" width="1.1" height="15.0" fill="rgb(207,6,25)" rx="2" ry="2" />
<text  x="24.14" y="1519.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_irqsafe (1 samples, 0.09%)</title><rect x="1084.7" y="1333" width="1.0" height="15.0" fill="rgb(234,193,52)" rx="2" ry="2" />
<text  x="1087.66" y="1343.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.09%)</title><rect x="983.4" y="1301" width="1.0" height="15.0" fill="rgb(247,25,17)" rx="2" ry="2" />
<text  x="986.37" y="1311.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.17%)</title><rect x="981.3" y="1333" width="2.1" height="15.0" fill="rgb(207,9,12)" rx="2" ry="2" />
<text  x="984.35" y="1343.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.09%)</title><rect x="23.2" y="1413" width="1.0" height="15.0" fill="rgb(251,23,15)" rx="2" ry="2" />
<text  x="26.17" y="1423.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (1 samples, 0.09%)</title><rect x="31.3" y="1333" width="1.0" height="15.0" fill="rgb(245,184,48)" rx="2" ry="2" />
<text  x="34.27" y="1343.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (1 samples, 0.09%)</title><rect x="436.4" y="1397" width="1.0" height="15.0" fill="rgb(216,11,7)" rx="2" ry="2" />
<text  x="439.42" y="1407.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.09%)</title><rect x="1079.6" y="1477" width="1.0" height="15.0" fill="rgb(211,174,18)" rx="2" ry="2" />
<text  x="1082.60" y="1487.5" ></text>
</g>
<g >
<title>__munmap (25 samples, 2.15%)</title><rect x="251.1" y="1413" width="25.3" height="15.0" fill="rgb(235,152,25)" rx="2" ry="2" />
<text  x="254.06" y="1423.5" >_..</text>
</g>
<g >
<title>write (1 samples, 0.09%)</title><rect x="160.9" y="1429" width="1.0" height="15.0" fill="rgb(215,78,29)" rx="2" ry="2" />
<text  x="163.92" y="1439.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::ser::Serialize for dashmap::DashMap&lt;K,V,H&gt;&gt;::serialize (3 samples, 0.26%)</title><rect x="1001.6" y="1349" width="3.0" height="15.0" fill="rgb(253,71,5)" rx="2" ry="2" />
<text  x="1004.61" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (37 samples, 3.18%)</title><rect x="31.3" y="1477" width="37.4" height="15.0" fill="rgb(212,31,4)" rx="2" ry="2" />
<text  x="34.27" y="1487.5" >cpu..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.09%)</title><rect x="314.9" y="1301" width="1.0" height="15.0" fill="rgb(219,132,0)" rx="2" ry="2" />
<text  x="317.88" y="1311.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (2 samples, 0.17%)</title><rect x="1004.6" y="597" width="2.1" height="15.0" fill="rgb(218,104,33)" rx="2" ry="2" />
<text  x="1007.64" y="607.5" ></text>
</g>
<g >
<title>_Fork (1 samples, 0.09%)</title><rect x="74.8" y="1381" width="1.0" height="15.0" fill="rgb(209,206,51)" rx="2" ry="2" />
<text  x="77.82" y="1391.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::available_parallelism (1 samples, 0.09%)</title><rect x="1005.7" y="293" width="1.0" height="15.0" fill="rgb(205,46,42)" rx="2" ry="2" />
<text  x="1008.66" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.09%)</title><rect x="160.9" y="1381" width="1.0" height="15.0" fill="rgb(217,67,19)" rx="2" ry="2" />
<text  x="163.92" y="1391.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.17%)</title><rect x="897.3" y="1397" width="2.0" height="15.0" fill="rgb(234,177,32)" rx="2" ry="2" />
<text  x="900.28" y="1407.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open (1 samples, 0.09%)</title><rect x="1005.7" y="213" width="1.0" height="15.0" fill="rgb(217,32,29)" rx="2" ry="2" />
<text  x="1008.66" y="223.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.09%)</title><rect x="982.4" y="1253" width="1.0" height="15.0" fill="rgb(210,73,37)" rx="2" ry="2" />
<text  x="985.36" y="1263.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::de::Deserialize for dashmap::DashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.17%)</title><rect x="1004.6" y="997" width="2.1" height="15.0" fill="rgb(212,50,28)" rx="2" ry="2" />
<text  x="1007.64" y="1007.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (2 samples, 0.17%)</title><rect x="161.9" y="1189" width="2.1" height="15.0" fill="rgb(227,113,26)" rx="2" ry="2" />
<text  x="164.93" y="1199.5" ></text>
</g>
<g >
<title>.NET_ThreadPool (64 samples, 5.49%)</title><rect x="10.0" y="1557" width="64.8" height="15.0" fill="rgb(206,7,18)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" >.NET_Th..</text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.09%)</title><rect x="285.5" y="1125" width="1.0" height="15.0" fill="rgb(241,146,47)" rx="2" ry="2" />
<text  x="288.50" y="1135.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.09%)</title><rect x="21.1" y="1461" width="1.1" height="15.0" fill="rgb(254,31,45)" rx="2" ry="2" />
<text  x="24.14" y="1471.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.09%)</title><rect x="250.1" y="1429" width="1.0" height="15.0" fill="rgb(235,97,20)" rx="2" ry="2" />
<text  x="253.05" y="1439.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_irqsafe (1 samples, 0.09%)</title><rect x="160.9" y="1141" width="1.0" height="15.0" fill="rgb(233,61,14)" rx="2" ry="2" />
<text  x="163.92" y="1151.5" ></text>
</g>
<g >
<title>do_mmap (26 samples, 2.23%)</title><rect x="281.5" y="1285" width="26.3" height="15.0" fill="rgb(232,94,34)" rx="2" ry="2" />
<text  x="284.45" y="1295.5" >d..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.09%)</title><rect x="332.1" y="1317" width="1.0" height="15.0" fill="rgb(234,89,28)" rx="2" ry="2" />
<text  x="335.09" y="1327.5" ></text>
</g>
<g >
<title>pagecache_get_page (2 samples, 0.17%)</title><rect x="161.9" y="1157" width="2.1" height="15.0" fill="rgb(242,105,53)" rx="2" ry="2" />
<text  x="164.93" y="1167.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.17%)</title><rect x="1153.5" y="1461" width="2.1" height="15.0" fill="rgb(218,56,49)" rx="2" ry="2" />
<text  x="1156.54" y="1471.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (81 samples, 6.95%)</title><rect x="352.4" y="1381" width="82.0" height="15.0" fill="rgb(224,151,52)" rx="2" ry="2" />
<text  x="355.35" y="1391.5" >ringbuf::..</text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.09%)</title><rect x="1005.7" y="165" width="1.0" height="15.0" fill="rgb(240,31,26)" rx="2" ry="2" />
<text  x="1008.66" y="175.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::with_capacity_and_hasher (1 samples, 0.09%)</title><rect x="1005.7" y="341" width="1.0" height="15.0" fill="rgb(236,0,28)" rx="2" ry="2" />
<text  x="1008.66" y="351.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.09%)</title><rect x="1075.5" y="1381" width="1.1" height="15.0" fill="rgb(218,211,41)" rx="2" ry="2" />
<text  x="1078.55" y="1391.5" ></text>
</g>
<g >
<title>process_synthesized_event (1 samples, 0.09%)</title><rect x="160.9" y="1477" width="1.0" height="15.0" fill="rgb(214,89,7)" rx="2" ry="2" />
<text  x="163.92" y="1487.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.09%)</title><rect x="31.3" y="1413" width="1.0" height="15.0" fill="rgb(252,184,1)" rx="2" ry="2" />
<text  x="34.27" y="1423.5" ></text>
</g>
<g >
<title>core::cmp::min (18 samples, 1.55%)</title><rect x="446.5" y="1413" width="18.3" height="15.0" fill="rgb(208,210,17)" rx="2" ry="2" />
<text  x="449.55" y="1423.5" ></text>
</g>
<g >
<title>swapper (142 samples, 12.19%)</title><rect x="1046.2" y="1557" width="143.8" height="15.0" fill="rgb(220,163,8)" rx="2" ry="2" />
<text  x="1049.17" y="1567.5" >swapper</text>
</g>
<g >
<title>BaseExtentionFromVEX (1 samples, 0.09%)</title><rect x="278.4" y="1349" width="1.0" height="15.0" fill="rgb(235,143,13)" rx="2" ry="2" />
<text  x="281.41" y="1359.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="1003.6" y="1173" width="1.0" height="15.0" fill="rgb(242,116,18)" rx="2" ry="2" />
<text  x="1006.63" y="1183.5" ></text>
</g>
<g >
<title>NaClValidateCode (2 samples, 0.17%)</title><rect x="998.6" y="1397" width="2.0" height="15.0" fill="rgb(229,113,30)" rx="2" ry="2" />
<text  x="1001.57" y="1407.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.09%)</title><rect x="322.0" y="1221" width="1.0" height="15.0" fill="rgb(227,30,51)" rx="2" ry="2" />
<text  x="324.97" y="1231.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.17%)</title><rect x="38.4" y="1381" width="2.0" height="15.0" fill="rgb(219,124,40)" rx="2" ry="2" />
<text  x="41.36" y="1391.5" ></text>
</g>
<g >
<title>reader_loop (3 samples, 0.26%)</title><rect x="74.8" y="1477" width="3.1" height="15.0" fill="rgb(206,69,46)" rx="2" ry="2" />
<text  x="77.82" y="1487.5" ></text>
</g>
<g >
<title>[libc.so.6] (3 samples, 0.26%)</title><rect x="167.0" y="1525" width="3.0" height="15.0" fill="rgb(231,83,16)" rx="2" ry="2" />
<text  x="170.00" y="1535.5" ></text>
</g>
<g >
<title>blkcg_rstat_flush (1 samples, 0.09%)</title><rect x="26.2" y="1301" width="1.0" height="15.0" fill="rgb(213,75,46)" rx="2" ry="2" />
<text  x="29.21" y="1311.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.09%)</title><rect x="160.9" y="1237" width="1.0" height="15.0" fill="rgb(228,98,40)" rx="2" ry="2" />
<text  x="163.92" y="1247.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.09%)</title><rect x="75.8" y="1349" width="1.0" height="15.0" fill="rgb(253,45,31)" rx="2" ry="2" />
<text  x="78.84" y="1359.5" ></text>
</g>
<g >
<title>get_page_from_freelist (30 samples, 2.58%)</title><rect x="907.4" y="1381" width="30.4" height="15.0" fill="rgb(218,153,53)" rx="2" ry="2" />
<text  x="910.41" y="1391.5" >ge..</text>
</g>
<g >
<title>perf_tool__process_synth_event (1 samples, 0.09%)</title><rect x="160.9" y="1493" width="1.0" height="15.0" fill="rgb(217,116,39)" rx="2" ry="2" />
<text  x="163.92" y="1503.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.09%)</title><rect x="39.4" y="1269" width="1.0" height="15.0" fill="rgb(226,207,21)" rx="2" ry="2" />
<text  x="42.37" y="1279.5" ></text>
</g>
<g >
<title>NaClValidateImage (4 samples, 0.34%)</title><rect x="276.4" y="1413" width="4.0" height="15.0" fill="rgb(240,226,47)" rx="2" ry="2" />
<text  x="279.39" y="1423.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.09%)</title><rect x="66.7" y="1397" width="1.0" height="15.0" fill="rgb(205,209,50)" rx="2" ry="2" />
<text  x="69.72" y="1407.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.09%)</title><rect x="328.0" y="1317" width="1.1" height="15.0" fill="rgb(239,12,4)" rx="2" ry="2" />
<text  x="331.04" y="1327.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.09%)</title><rect x="29.2" y="1445" width="1.1" height="15.0" fill="rgb(226,32,28)" rx="2" ry="2" />
<text  x="32.24" y="1455.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.09%)</title><rect x="1158.6" y="1269" width="1.0" height="15.0" fill="rgb(253,13,47)" rx="2" ry="2" />
<text  x="1161.60" y="1279.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.09%)</title><rect x="1044.1" y="1413" width="1.1" height="15.0" fill="rgb(229,169,37)" rx="2" ry="2" />
<text  x="1047.15" y="1423.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="190.3" y="1301" width="1.0" height="15.0" fill="rgb(206,83,3)" rx="2" ry="2" />
<text  x="193.29" y="1311.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="1004.6" y="453" width="2.1" height="15.0" fill="rgb(221,30,43)" rx="2" ry="2" />
<text  x="1007.64" y="463.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (2 samples, 0.17%)</title><rect x="1004.6" y="917" width="2.1" height="15.0" fill="rgb(207,153,31)" rx="2" ry="2" />
<text  x="1007.64" y="927.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="1004.6" y="629" width="2.1" height="15.0" fill="rgb(240,92,40)" rx="2" ry="2" />
<text  x="1007.64" y="639.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (2 samples, 0.17%)</title><rect x="1004.6" y="517" width="2.1" height="15.0" fill="rgb(246,119,47)" rx="2" ry="2" />
<text  x="1007.64" y="527.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (28 samples, 2.40%)</title><rect x="221.7" y="1445" width="28.4" height="15.0" fill="rgb(246,4,40)" rx="2" ry="2" />
<text  x="224.69" y="1455.5" >Na..</text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.34%)</title><rect x="465.8" y="1413" width="4.0" height="15.0" fill="rgb(214,218,7)" rx="2" ry="2" />
<text  x="468.79" y="1423.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.17%)</title><rect x="869.9" y="1477" width="2.1" height="15.0" fill="rgb(212,111,43)" rx="2" ry="2" />
<text  x="872.93" y="1487.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (3 samples, 0.26%)</title><rect x="960.1" y="1461" width="3.0" height="15.0" fill="rgb(222,205,54)" rx="2" ry="2" />
<text  x="963.08" y="1471.5" ></text>
</g>
<g >
<title>sync_regs (12 samples, 1.03%)</title><rect x="968.2" y="1525" width="12.1" height="15.0" fill="rgb(214,124,16)" rx="2" ry="2" />
<text  x="971.18" y="1535.5" ></text>
</g>
<g >
<title>MunmapInternal (26 samples, 2.23%)</title><rect x="281.5" y="1477" width="26.3" height="15.0" fill="rgb(231,168,16)" rx="2" ry="2" />
<text  x="284.45" y="1487.5" >M..</text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.60%)</title><rect x="21.1" y="1525" width="7.1" height="15.0" fill="rgb(253,79,1)" rx="2" ry="2" />
<text  x="24.14" y="1535.5" ></text>
</g>
<g >
<title>lind (4 samples, 0.34%)</title><rect x="74.8" y="1557" width="4.1" height="15.0" fill="rgb(239,134,46)" rx="2" ry="2" />
<text  x="77.82" y="1567.5" ></text>
</g>
<g >
<title>mem_cgroup_wb_stats (1 samples, 0.09%)</title><rect x="160.9" y="1173" width="1.0" height="15.0" fill="rgb(239,189,33)" rx="2" ry="2" />
<text  x="163.92" y="1183.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.09%)</title><rect x="36.3" y="1349" width="1.0" height="15.0" fill="rgb(240,203,20)" rx="2" ry="2" />
<text  x="39.33" y="1359.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.09%)</title><rect x="982.4" y="1269" width="1.0" height="15.0" fill="rgb(210,61,35)" rx="2" ry="2" />
<text  x="985.36" y="1279.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.09%)</title><rect x="1167.7" y="1253" width="1.0" height="15.0" fill="rgb(208,134,43)" rx="2" ry="2" />
<text  x="1170.72" y="1263.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.09%)</title><rect x="1079.6" y="1269" width="1.0" height="15.0" fill="rgb(207,148,33)" rx="2" ry="2" />
<text  x="1082.60" y="1279.5" ></text>
</g>
<g >
<title>blk_stat_add (1 samples, 0.09%)</title><rect x="1091.8" y="1253" width="1.0" height="15.0" fill="rgb(230,112,21)" rx="2" ry="2" />
<text  x="1094.75" y="1263.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.09%)</title><rect x="327.0" y="1189" width="1.0" height="15.0" fill="rgb(230,61,24)" rx="2" ry="2" />
<text  x="330.03" y="1199.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.09%)</title><rect x="1005.7" y="53" width="1.0" height="15.0" fill="rgb(232,134,38)" rx="2" ry="2" />
<text  x="1008.66" y="63.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (2 samples, 0.17%)</title><rect x="312.8" y="1397" width="2.1" height="15.0" fill="rgb(225,144,0)" rx="2" ry="2" />
<text  x="315.85" y="1407.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.09%)</title><rect x="314.9" y="1285" width="1.0" height="15.0" fill="rgb(207,176,18)" rx="2" ry="2" />
<text  x="317.88" y="1295.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.09%)</title><rect x="1045.2" y="1461" width="1.0" height="15.0" fill="rgb(218,151,22)" rx="2" ry="2" />
<text  x="1048.16" y="1471.5" ></text>
</g>
<g >
<title>__vm_munmap (25 samples, 2.15%)</title><rect x="251.1" y="1349" width="25.3" height="15.0" fill="rgb(221,98,29)" rx="2" ry="2" />
<text  x="254.06" y="1359.5" >_..</text>
</g>
<g >
<title>do_iter_write (1 samples, 0.09%)</title><rect x="160.9" y="1285" width="1.0" height="15.0" fill="rgb(213,112,35)" rx="2" ry="2" />
<text  x="163.92" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="160.9" y="1397" width="1.0" height="15.0" fill="rgb(236,21,3)" rx="2" ry="2" />
<text  x="163.92" y="1407.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.09%)</title><rect x="1155.6" y="1445" width="1.0" height="15.0" fill="rgb(213,109,2)" rx="2" ry="2" />
<text  x="1158.56" y="1455.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.09%)</title><rect x="1167.7" y="1269" width="1.0" height="15.0" fill="rgb(251,172,13)" rx="2" ry="2" />
<text  x="1170.72" y="1279.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.09%)</title><rect x="1163.7" y="1205" width="1.0" height="15.0" fill="rgb(246,193,23)" rx="2" ry="2" />
<text  x="1166.67" y="1215.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (125 samples, 10.73%)</title><rect x="469.8" y="1381" width="126.7" height="15.0" fill="rgb(229,25,48)" rx="2" ry="2" />
<text  x="472.85" y="1391.5" >ringbuf::produc..</text>
</g>
<g >
<title>tlb_flush_mmu (20 samples, 1.72%)</title><rect x="286.5" y="1141" width="20.3" height="15.0" fill="rgb(242,71,1)" rx="2" ry="2" />
<text  x="289.52" y="1151.5" ></text>
</g>
<g >
<title>blk_complete_reqs (1 samples, 0.09%)</title><rect x="1091.8" y="1349" width="1.0" height="15.0" fill="rgb(208,91,1)" rx="2" ry="2" />
<text  x="1094.75" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (8 samples, 0.69%)</title><rect x="998.6" y="1509" width="8.1" height="15.0" fill="rgb(243,188,26)" rx="2" ry="2" />
<text  x="1001.57" y="1519.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.09%)</title><rect x="190.3" y="1365" width="1.0" height="15.0" fill="rgb(249,21,44)" rx="2" ry="2" />
<text  x="193.29" y="1375.5" ></text>
</g>
<g >
<title>[unknown]  (214 samples, 18.37%)</title><rect x="763.6" y="1541" width="216.7" height="15.0" fill="rgb(254,4,34)" rx="2" ry="2" />
<text  x="766.58" y="1551.5" >[unknown] </text>
</g>
<g >
<title>std::sys::unix::fs::File::seek (4 samples, 0.34%)</title><rect x="329.1" y="1397" width="4.0" height="15.0" fill="rgb(234,168,26)" rx="2" ry="2" />
<text  x="332.06" y="1407.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.09%)</title><rect x="160.9" y="1253" width="1.0" height="15.0" fill="rgb(248,159,38)" rx="2" ry="2" />
<text  x="163.92" y="1263.5" ></text>
</g>
<g >
<title>std::thread::available_parallelism (1 samples, 0.09%)</title><rect x="1005.7" y="309" width="1.0" height="15.0" fill="rgb(211,91,27)" rx="2" ry="2" />
<text  x="1008.66" y="319.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.constprop.0.isra.0 (2 samples, 0.17%)</title><rect x="1162.7" y="1285" width="2.0" height="15.0" fill="rgb(251,166,20)" rx="2" ry="2" />
<text  x="1165.65" y="1295.5" ></text>
</g>
<g >
<title>pmd_val (1 samples, 0.09%)</title><rect x="958.1" y="1429" width="1.0" height="15.0" fill="rgb(230,108,43)" rx="2" ry="2" />
<text  x="961.05" y="1439.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (4 samples, 0.34%)</title><rect x="161.9" y="1493" width="4.1" height="15.0" fill="rgb(211,34,21)" rx="2" ry="2" />
<text  x="164.93" y="1503.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.09%)</title><rect x="37.3" y="1189" width="1.1" height="15.0" fill="rgb(253,121,38)" rx="2" ry="2" />
<text  x="40.35" y="1199.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.09%)</title><rect x="21.1" y="1445" width="1.1" height="15.0" fill="rgb(230,211,36)" rx="2" ry="2" />
<text  x="24.14" y="1455.5" ></text>
</g>
<g >
<title>xas_store (1 samples, 0.09%)</title><rect x="982.4" y="1205" width="1.0" height="15.0" fill="rgb(213,119,28)" rx="2" ry="2" />
<text  x="985.36" y="1215.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.09%)</title><rect x="221.7" y="1301" width="1.0" height="15.0" fill="rgb(224,16,48)" rx="2" ry="2" />
<text  x="224.69" y="1311.5" ></text>
</g>
<g >
<title>NaClSysMunmapDecoder (26 samples, 2.23%)</title><rect x="281.5" y="1509" width="26.3" height="15.0" fill="rgb(231,149,13)" rx="2" ry="2" />
<text  x="284.45" y="1519.5" >N..</text>
</g>
<g >
<title>update_sg_lb_stats (2 samples, 0.17%)</title><rect x="1165.7" y="1221" width="2.0" height="15.0" fill="rgb(214,14,40)" rx="2" ry="2" />
<text  x="1168.69" y="1231.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (10 samples, 0.86%)</title><rect x="942.9" y="1381" width="10.1" height="15.0" fill="rgb(239,200,7)" rx="2" ry="2" />
<text  x="945.86" y="1391.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (1 samples, 0.09%)</title><rect x="250.1" y="1333" width="1.0" height="15.0" fill="rgb(244,204,10)" rx="2" ry="2" />
<text  x="253.05" y="1343.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.09%)</title><rect x="87.0" y="1221" width="1.0" height="15.0" fill="rgb(230,135,52)" rx="2" ry="2" />
<text  x="89.98" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="464.8" y="1413" width="1.0" height="15.0" fill="rgb(229,19,38)" rx="2" ry="2" />
<text  x="467.78" y="1423.5" ></text>
</g>
<g >
<title>filemap_get_pages (1 samples, 0.09%)</title><rect x="326.0" y="1141" width="1.0" height="15.0" fill="rgb(242,171,52)" rx="2" ry="2" />
<text  x="329.02" y="1151.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (83 samples, 7.12%)</title><rect x="352.4" y="1397" width="84.0" height="15.0" fill="rgb(226,80,2)" rx="2" ry="2" />
<text  x="355.35" y="1407.5" >ringbuf::..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (1 samples, 0.09%)</title><rect x="1001.6" y="1157" width="1.0" height="15.0" fill="rgb(233,201,28)" rx="2" ry="2" />
<text  x="1004.61" y="1167.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="314.9" y="1349" width="1.0" height="15.0" fill="rgb(231,208,25)" rx="2" ry="2" />
<text  x="317.88" y="1359.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (2 samples, 0.17%)</title><rect x="1004.6" y="581" width="2.1" height="15.0" fill="rgb(238,90,51)" rx="2" ry="2" />
<text  x="1007.64" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (1 samples, 0.09%)</title><rect x="1003.6" y="1141" width="1.0" height="15.0" fill="rgb(245,177,49)" rx="2" ry="2" />
<text  x="1006.63" y="1151.5" ></text>
</g>
<g >
<title>pick_next_task (1 samples, 0.09%)</title><rect x="27.2" y="1445" width="1.0" height="15.0" fill="rgb(210,98,37)" rx="2" ry="2" />
<text  x="30.22" y="1455.5" ></text>
</g>
<g >
<title>load_balance (2 samples, 0.17%)</title><rect x="1162.7" y="1253" width="2.0" height="15.0" fill="rgb(247,66,16)" rx="2" ry="2" />
<text  x="1165.65" y="1263.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.09%)</title><rect x="1155.6" y="1461" width="1.0" height="15.0" fill="rgb(229,60,35)" rx="2" ry="2" />
<text  x="1158.56" y="1471.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.17%)</title><rect x="951.0" y="1365" width="2.0" height="15.0" fill="rgb(245,167,54)" rx="2" ry="2" />
<text  x="953.96" y="1375.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.09%)</title><rect x="487.1" y="1349" width="1.0" height="15.0" fill="rgb(225,3,51)" rx="2" ry="2" />
<text  x="490.06" y="1359.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.09%)</title><rect x="464.8" y="1365" width="1.0" height="15.0" fill="rgb(232,12,35)" rx="2" ry="2" />
<text  x="467.78" y="1375.5" ></text>
</g>
<g >
<title>NaClSysMmap (1 samples, 0.09%)</title><rect x="280.4" y="1493" width="1.1" height="15.0" fill="rgb(253,114,9)" rx="2" ry="2" />
<text  x="283.44" y="1503.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.09%)</title><rect x="877.0" y="1445" width="1.0" height="15.0" fill="rgb(250,56,46)" rx="2" ry="2" />
<text  x="880.02" y="1455.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.09%)</title><rect x="1079.6" y="1333" width="1.0" height="15.0" fill="rgb(243,206,46)" rx="2" ry="2" />
<text  x="1082.60" y="1343.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="1090.7" y="1445" width="1.1" height="15.0" fill="rgb(250,162,44)" rx="2" ry="2" />
<text  x="1093.74" y="1455.5" ></text>
</g>
<g >
<title>mm_init (1 samples, 0.09%)</title><rect x="78.9" y="1365" width="1.0" height="15.0" fill="rgb(254,221,52)" rx="2" ry="2" />
<text  x="81.88" y="1375.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (18 samples, 1.55%)</title><rect x="446.5" y="1397" width="18.3" height="15.0" fill="rgb(247,100,13)" rx="2" ry="2" />
<text  x="449.55" y="1407.5" ></text>
</g>
<g >
<title>NaClValidateCode (30 samples, 2.58%)</title><rect x="191.3" y="1461" width="30.4" height="15.0" fill="rgb(208,220,10)" rx="2" ry="2" />
<text  x="194.30" y="1471.5" >Na..</text>
</g>
<g >
<title>kthread (1 samples, 0.09%)</title><rect x="29.2" y="1525" width="1.1" height="15.0" fill="rgb(254,211,22)" rx="2" ry="2" />
<text  x="32.24" y="1535.5" ></text>
</g>
<g >
<title>__perf_event_enable (71 samples, 6.09%)</title><rect x="87.0" y="1253" width="71.9" height="15.0" fill="rgb(207,124,36)" rx="2" ry="2" />
<text  x="89.98" y="1263.5" >__perf_e..</text>
</g>
<g >
<title>xas_load (1 samples, 0.09%)</title><rect x="956.0" y="1365" width="1.0" height="15.0" fill="rgb(206,146,9)" rx="2" ry="2" />
<text  x="959.03" y="1375.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.09%)</title><rect x="1188.0" y="1397" width="1.0" height="15.0" fill="rgb(247,106,17)" rx="2" ry="2" />
<text  x="1190.97" y="1407.5" ></text>
</g>
<g >
<title>[sel_ldr] (3 samples, 0.26%)</title><rect x="863.9" y="1525" width="3.0" height="15.0" fill="rgb(216,16,30)" rx="2" ry="2" />
<text  x="866.85" y="1535.5" ></text>
</g>
<g >
<title>execve (1 samples, 0.09%)</title><rect x="78.9" y="1477" width="1.0" height="15.0" fill="rgb(252,57,14)" rx="2" ry="2" />
<text  x="81.88" y="1487.5" ></text>
</g>
<g >
<title>unlink_file_vma (1 samples, 0.09%)</title><rect x="77.9" y="1397" width="1.0" height="15.0" fill="rgb(254,68,9)" rx="2" ry="2" />
<text  x="80.86" y="1407.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.09%)</title><rect x="464.8" y="1381" width="1.0" height="15.0" fill="rgb(246,17,49)" rx="2" ry="2" />
<text  x="467.78" y="1391.5" ></text>
</g>
<g >
<title>alloc_empty_file (1 samples, 0.09%)</title><rect x="23.2" y="1445" width="1.0" height="15.0" fill="rgb(251,210,49)" rx="2" ry="2" />
<text  x="26.17" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="1005.7" y="133" width="1.0" height="15.0" fill="rgb(237,179,24)" rx="2" ry="2" />
<text  x="1008.66" y="143.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (2 samples, 0.17%)</title><rect x="1004.6" y="1397" width="2.1" height="15.0" fill="rgb(247,113,32)" rx="2" ry="2" />
<text  x="1007.64" y="1407.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (5 samples, 0.43%)</title><rect x="474.9" y="1349" width="5.1" height="15.0" fill="rgb(252,134,46)" rx="2" ry="2" />
<text  x="477.91" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.09%)</title><rect x="73.8" y="1381" width="1.0" height="15.0" fill="rgb(251,91,30)" rx="2" ry="2" />
<text  x="76.81" y="1391.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.09%)</title><rect x="160.9" y="1221" width="1.0" height="15.0" fill="rgb(236,213,44)" rx="2" ry="2" />
<text  x="163.92" y="1231.5" ></text>
</g>
<g >
<title>mmap_region (26 samples, 2.23%)</title><rect x="281.5" y="1269" width="26.3" height="15.0" fill="rgb(223,31,19)" rx="2" ry="2" />
<text  x="284.45" y="1279.5" >m..</text>
</g>
<g >
<title>enqueue_task (1 samples, 0.09%)</title><rect x="1159.6" y="1221" width="1.0" height="15.0" fill="rgb(230,164,33)" rx="2" ry="2" />
<text  x="1162.61" y="1231.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1 samples, 0.09%)</title><rect x="336.1" y="1381" width="1.1" height="15.0" fill="rgb(228,75,39)" rx="2" ry="2" />
<text  x="339.15" y="1391.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.09%)</title><rect x="1075.5" y="1445" width="1.1" height="15.0" fill="rgb(242,184,35)" rx="2" ry="2" />
<text  x="1078.55" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter (22 samples, 1.89%)</title><rect x="1157.6" y="1397" width="22.3" height="15.0" fill="rgb(223,0,4)" rx="2" ry="2" />
<text  x="1160.59" y="1407.5" >c..</text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.09%)</title><rect x="1079.6" y="1285" width="1.0" height="15.0" fill="rgb(253,108,30)" rx="2" ry="2" />
<text  x="1082.60" y="1295.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4 samples, 0.34%)</title><rect x="1158.6" y="1333" width="4.1" height="15.0" fill="rgb(249,87,27)" rx="2" ry="2" />
<text  x="1161.60" y="1343.5" ></text>
</g>
<g >
<title>__mem_cgroup_flush_stats (2 samples, 0.17%)</title><rect x="25.2" y="1349" width="2.0" height="15.0" fill="rgb(220,66,48)" rx="2" ry="2" />
<text  x="28.19" y="1359.5" ></text>
</g>
<g >
<title>put_task_stack (1 samples, 0.09%)</title><rect x="68.7" y="1429" width="1.1" height="15.0" fill="rgb(222,204,10)" rx="2" ry="2" />
<text  x="71.75" y="1439.5" ></text>
</g>
<g >
<title>calc_load_nohz_stop (1 samples, 0.09%)</title><rect x="1187.0" y="1397" width="1.0" height="15.0" fill="rgb(224,191,34)" rx="2" ry="2" />
<text  x="1189.96" y="1407.5" ></text>
</g>
<g >
<title>load_new_mm_cr3 (1 samples, 0.09%)</title><rect x="70.8" y="1429" width="1.0" height="15.0" fill="rgb(211,208,2)" rx="2" ry="2" />
<text  x="73.77" y="1439.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::initialize::{{closure}} (2 samples, 0.17%)</title><rect x="1004.6" y="1301" width="2.1" height="15.0" fill="rgb(208,190,6)" rx="2" ry="2" />
<text  x="1007.64" y="1311.5" ></text>
</g>
<g >
<title>core::cmp::min_by (4 samples, 0.34%)</title><rect x="446.5" y="1381" width="4.1" height="15.0" fill="rgb(222,3,23)" rx="2" ry="2" />
<text  x="449.55" y="1391.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="1159.6" y="1253" width="1.0" height="15.0" fill="rgb(219,190,51)" rx="2" ry="2" />
<text  x="1162.61" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (26 samples, 2.23%)</title><rect x="281.5" y="1349" width="26.3" height="15.0" fill="rgb(206,51,26)" rx="2" ry="2" />
<text  x="284.45" y="1359.5" >d..</text>
</g>
<g >
<title>alloc_pages (1 samples, 0.09%)</title><rect x="161.9" y="1125" width="1.0" height="15.0" fill="rgb(215,218,49)" rx="2" ry="2" />
<text  x="164.93" y="1135.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.09%)</title><rect x="39.4" y="1301" width="1.0" height="15.0" fill="rgb(207,88,47)" rx="2" ry="2" />
<text  x="42.37" y="1311.5" ></text>
</g>
<g >
<title>Process1Operand (1 samples, 0.09%)</title><rect x="279.4" y="1349" width="1.0" height="15.0" fill="rgb(244,193,13)" rx="2" ry="2" />
<text  x="282.42" y="1359.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="314.9" y="1317" width="1.0" height="15.0" fill="rgb(233,197,10)" rx="2" ry="2" />
<text  x="317.88" y="1327.5" ></text>
</g>
<g >
<title>meminfo_proc_show (2 samples, 0.17%)</title><rect x="1085.7" y="1413" width="2.0" height="15.0" fill="rgb(211,191,3)" rx="2" ry="2" />
<text  x="1088.67" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.09%)</title><rect x="436.4" y="1381" width="1.0" height="15.0" fill="rgb(232,215,16)" rx="2" ry="2" />
<text  x="439.42" y="1391.5" ></text>
</g>
<g >
<title>get_new_window_size (1 samples, 0.09%)</title><rect x="75.8" y="1413" width="1.0" height="15.0" fill="rgb(223,223,25)" rx="2" ry="2" />
<text  x="78.84" y="1423.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="75.8" y="1317" width="1.0" height="15.0" fill="rgb(223,118,36)" rx="2" ry="2" />
<text  x="78.84" y="1327.5" ></text>
</g>
<g >
<title>alx_mask_msix (1 samples, 0.09%)</title><rect x="31.3" y="1317" width="1.0" height="15.0" fill="rgb(243,77,44)" rx="2" ry="2" />
<text  x="34.27" y="1327.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.09%)</title><rect x="164.0" y="1173" width="1.0" height="15.0" fill="rgb(253,80,41)" rx="2" ry="2" />
<text  x="166.96" y="1183.5" ></text>
</g>
<g >
<title>new_sync_write (4 samples, 0.34%)</title><rect x="161.9" y="1317" width="4.1" height="15.0" fill="rgb(230,124,50)" rx="2" ry="2" />
<text  x="164.93" y="1327.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.09%)</title><rect x="29.2" y="1493" width="1.1" height="15.0" fill="rgb(222,158,5)" rx="2" ry="2" />
<text  x="32.24" y="1503.5" ></text>
</g>
<g >
<title>all (1,165 samples, 100%)</title><rect x="10.0" y="1573" width="1180.0" height="15.0" fill="rgb(219,121,27)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.09%)</title><rect x="285.5" y="1109" width="1.0" height="15.0" fill="rgb(232,122,50)" rx="2" ry="2" />
<text  x="288.50" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 7.30%)</title><rect x="79.9" y="1541" width="86.1" height="15.0" fill="rgb(227,60,8)" rx="2" ry="2" />
<text  x="82.89" y="1551.5" >[unknown]</text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.26%)</title><rect x="1095.8" y="1381" width="3.0" height="15.0" fill="rgb(242,223,28)" rx="2" ry="2" />
<text  x="1098.80" y="1391.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.09%)</title><rect x="325.0" y="1141" width="1.0" height="15.0" fill="rgb(226,12,11)" rx="2" ry="2" />
<text  x="328.00" y="1151.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.09%)</title><rect x="1096.8" y="1333" width="1.0" height="15.0" fill="rgb(242,132,45)" rx="2" ry="2" />
<text  x="1099.82" y="1343.5" ></text>
</g>
<g >
<title>ksys_read (8 samples, 0.69%)</title><rect x="319.9" y="1301" width="8.1" height="15.0" fill="rgb(233,167,50)" rx="2" ry="2" />
<text  x="322.94" y="1311.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.09%)</title><rect x="22.2" y="1461" width="1.0" height="15.0" fill="rgb(227,65,9)" rx="2" ry="2" />
<text  x="25.15" y="1471.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (30 samples, 2.58%)</title><rect x="191.3" y="1429" width="30.4" height="15.0" fill="rgb(254,50,29)" rx="2" ry="2" />
<text  x="194.30" y="1439.5" >Va..</text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.09%)</title><rect x="1075.5" y="1477" width="1.1" height="15.0" fill="rgb(206,167,14)" rx="2" ry="2" />
<text  x="1078.55" y="1487.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.09%)</title><rect x="1045.2" y="1381" width="1.0" height="15.0" fill="rgb(215,118,33)" rx="2" ry="2" />
<text  x="1048.16" y="1391.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.17%)</title><rect x="38.4" y="1397" width="2.0" height="15.0" fill="rgb(244,138,6)" rx="2" ry="2" />
<text  x="41.36" y="1407.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.09%)</title><rect x="1044.1" y="1461" width="1.1" height="15.0" fill="rgb(206,31,53)" rx="2" ry="2" />
<text  x="1047.15" y="1471.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (2 samples, 0.17%)</title><rect x="894.2" y="1365" width="2.1" height="15.0" fill="rgb(210,175,25)" rx="2" ry="2" />
<text  x="897.24" y="1375.5" ></text>
</g>
<g >
<title>execute_command_internal (3 samples, 0.26%)</title><rect x="74.8" y="1445" width="3.1" height="15.0" fill="rgb(210,185,30)" rx="2" ry="2" />
<text  x="77.82" y="1455.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (3 samples, 0.26%)</title><rect x="312.8" y="1429" width="3.1" height="15.0" fill="rgb(237,15,12)" rx="2" ry="2" />
<text  x="315.85" y="1439.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (1 samples, 0.09%)</title><rect x="190.3" y="1461" width="1.0" height="15.0" fill="rgb(222,58,45)" rx="2" ry="2" />
<text  x="193.29" y="1471.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.09%)</title><rect x="1045.2" y="1445" width="1.0" height="15.0" fill="rgb(217,63,16)" rx="2" ry="2" />
<text  x="1048.16" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="190.3" y="1397" width="1.0" height="15.0" fill="rgb(229,119,22)" rx="2" ry="2" />
<text  x="193.29" y="1407.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (1 samples, 0.09%)</title><rect x="170.0" y="1525" width="1.0" height="15.0" fill="rgb(236,135,50)" rx="2" ry="2" />
<text  x="173.03" y="1535.5" ></text>
</g>
<g >
<title>core::cmp::min (1 samples, 0.09%)</title><rect x="336.1" y="1413" width="1.1" height="15.0" fill="rgb(215,202,46)" rx="2" ry="2" />
<text  x="339.15" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (3 samples, 0.26%)</title><rect x="1001.6" y="1269" width="3.0" height="15.0" fill="rgb(231,74,44)" rx="2" ry="2" />
<text  x="1004.61" y="1279.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.09%)</title><rect x="984.4" y="1413" width="1.0" height="15.0" fill="rgb(223,120,10)" rx="2" ry="2" />
<text  x="987.39" y="1423.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="984.4" y="1349" width="1.0" height="15.0" fill="rgb(220,187,21)" rx="2" ry="2" />
<text  x="987.39" y="1359.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (9 samples, 0.77%)</title><rect x="171.0" y="1525" width="9.2" height="15.0" fill="rgb(245,219,54)" rx="2" ry="2" />
<text  x="174.05" y="1535.5" ></text>
</g>
<g >
<title>vfs_iter_write (4 samples, 0.34%)</title><rect x="161.9" y="1285" width="4.1" height="15.0" fill="rgb(240,129,31)" rx="2" ry="2" />
<text  x="164.93" y="1295.5" ></text>
</g>
<g >
<title>[sel_ldr] (576 samples, 49.44%)</title><rect x="180.2" y="1541" width="583.4" height="15.0" fill="rgb(253,108,49)" rx="2" ry="2" />
<text  x="183.16" y="1551.5" >[sel_ldr]</text>
</g>
<g >
<title>do_fault (1 samples, 0.09%)</title><rect x="190.3" y="1285" width="1.0" height="15.0" fill="rgb(234,158,51)" rx="2" ry="2" />
<text  x="193.29" y="1295.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (12 samples, 1.03%)</title><rect x="340.2" y="1413" width="12.2" height="15.0" fill="rgb(240,44,23)" rx="2" ry="2" />
<text  x="343.20" y="1423.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.09%)</title><rect x="1183.9" y="1397" width="1.0" height="15.0" fill="rgb(215,37,26)" rx="2" ry="2" />
<text  x="1186.92" y="1407.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (3 samples, 0.26%)</title><rect x="1001.6" y="1237" width="3.0" height="15.0" fill="rgb(224,99,18)" rx="2" ry="2" />
<text  x="1004.61" y="1247.5" ></text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force::{{closure}} (2 samples, 0.17%)</title><rect x="1004.6" y="1269" width="2.1" height="15.0" fill="rgb(233,175,38)" rx="2" ry="2" />
<text  x="1007.64" y="1279.5" ></text>
</g>
<g >
<title>handle_pte_fault (76 samples, 6.52%)</title><rect x="882.1" y="1445" width="77.0" height="15.0" fill="rgb(215,33,49)" rx="2" ry="2" />
<text  x="885.09" y="1455.5" >handle_p..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.43%)</title><rect x="474.9" y="1365" width="5.1" height="15.0" fill="rgb(245,158,11)" rx="2" ry="2" />
<text  x="477.91" y="1375.5" ></text>
</g>
<g >
<title>vfs_unlink (1 samples, 0.09%)</title><rect x="1000.6" y="1317" width="1.0" height="15.0" fill="rgb(250,147,17)" rx="2" ry="2" />
<text  x="1003.59" y="1327.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.09%)</title><rect x="1045.2" y="1429" width="1.0" height="15.0" fill="rgb(234,85,42)" rx="2" ry="2" />
<text  x="1048.16" y="1439.5" ></text>
</g>
<g >
<title>worker_thread (2 samples, 0.17%)</title><rect x="1088.7" y="1509" width="2.0" height="15.0" fill="rgb(237,138,48)" rx="2" ry="2" />
<text  x="1091.71" y="1519.5" ></text>
</g>
<g >
<title>serde_cbor::de::from_slice (2 samples, 0.17%)</title><rect x="1004.6" y="1189" width="2.1" height="15.0" fill="rgb(228,44,39)" rx="2" ry="2" />
<text  x="1007.64" y="1199.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.09%)</title><rect x="190.3" y="1221" width="1.0" height="15.0" fill="rgb(233,133,41)" rx="2" ry="2" />
<text  x="193.29" y="1231.5" ></text>
</g>
<g >
<title>NaClAppDtor (28 samples, 2.40%)</title><rect x="221.7" y="1429" width="28.4" height="15.0" fill="rgb(211,16,9)" rx="2" ry="2" />
<text  x="224.69" y="1439.5" >Na..</text>
</g>
<g >
<title>NaClAppLoadFileAslr (4 samples, 0.34%)</title><rect x="276.4" y="1429" width="4.0" height="15.0" fill="rgb(208,26,9)" rx="2" ry="2" />
<text  x="279.39" y="1439.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (7 samples, 0.60%)</title><rect x="1162.7" y="1317" width="7.0" height="15.0" fill="rgb(232,130,24)" rx="2" ry="2" />
<text  x="1165.65" y="1327.5" ></text>
</g>
<g >
<title>load_balance (2 samples, 0.17%)</title><rect x="1165.7" y="1269" width="2.0" height="15.0" fill="rgb(233,217,35)" rx="2" ry="2" />
<text  x="1168.69" y="1279.5" ></text>
</g>
<g >
<title>NaClAppDtor (25 samples, 2.15%)</title><rect x="251.1" y="1445" width="25.3" height="15.0" fill="rgb(242,8,48)" rx="2" ry="2" />
<text  x="254.06" y="1455.5" >N..</text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="1004.6" y="613" width="2.1" height="15.0" fill="rgb(213,144,11)" rx="2" ry="2" />
<text  x="1007.64" y="623.5" ></text>
</g>
<g >
<title>rcu_accelerate_cbs (1 samples, 0.09%)</title><rect x="1095.8" y="1333" width="1.0" height="15.0" fill="rgb(220,140,26)" rx="2" ry="2" />
<text  x="1098.80" y="1343.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_insert (1 samples, 0.09%)</title><rect x="1004.6" y="325" width="1.1" height="15.0" fill="rgb(210,43,10)" rx="2" ry="2" />
<text  x="1007.64" y="335.5" ></text>
</g>
<g >
<title>__blk_mq_end_request (1 samples, 0.09%)</title><rect x="1091.8" y="1269" width="1.0" height="15.0" fill="rgb(221,107,13)" rx="2" ry="2" />
<text  x="1094.75" y="1279.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::open (1 samples, 0.09%)</title><rect x="1005.7" y="245" width="1.0" height="15.0" fill="rgb(219,81,2)" rx="2" ry="2" />
<text  x="1008.66" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.09%)</title><rect x="900.3" y="1365" width="1.0" height="15.0" fill="rgb(251,204,22)" rx="2" ry="2" />
<text  x="903.32" y="1375.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.09%)</title><rect x="75.8" y="1221" width="1.0" height="15.0" fill="rgb(227,188,45)" rx="2" ry="2" />
<text  x="78.84" y="1231.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.17%)</title><rect x="1004.6" y="501" width="2.1" height="15.0" fill="rgb(251,195,37)" rx="2" ry="2" />
<text  x="1007.64" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="78.9" y="1445" width="1.0" height="15.0" fill="rgb(221,218,50)" rx="2" ry="2" />
<text  x="81.88" y="1455.5" ></text>
</g>
<g >
<title>NaClSysMunmap (26 samples, 2.23%)</title><rect x="281.5" y="1493" width="26.3" height="15.0" fill="rgb(206,148,24)" rx="2" ry="2" />
<text  x="284.45" y="1503.5" >N..</text>
</g>
<g >
<title>NaClAddrSpaceFree (25 samples, 2.15%)</title><rect x="251.1" y="1429" width="25.3" height="15.0" fill="rgb(247,18,37)" rx="2" ry="2" />
<text  x="254.06" y="1439.5" >N..</text>
</g>
<g >
<title>NaClSysRead (126 samples, 10.82%)</title><rect x="308.8" y="1493" width="127.6" height="15.0" fill="rgb(207,15,18)" rx="2" ry="2" />
<text  x="311.80" y="1503.5" >NaClSysRead</text>
</g>
<g >
<title>remote_function (1 samples, 0.09%)</title><rect x="158.9" y="1301" width="1.0" height="15.0" fill="rgb(233,145,3)" rx="2" ry="2" />
<text  x="161.89" y="1311.5" ></text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.09%)</title><rect x="190.3" y="1173" width="1.0" height="15.0" fill="rgb(229,114,10)" rx="2" ry="2" />
<text  x="193.29" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.17%)</title><rect x="357.4" y="1333" width="2.0" height="15.0" fill="rgb(241,216,38)" rx="2" ry="2" />
<text  x="360.42" y="1343.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.09%)</title><rect x="982.4" y="1285" width="1.0" height="15.0" fill="rgb(238,122,1)" rx="2" ry="2" />
<text  x="985.36" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="74.8" y="1349" width="1.0" height="15.0" fill="rgb(226,173,53)" rx="2" ry="2" />
<text  x="77.82" y="1359.5" ></text>
</g>
<g >
<title>&lt;dashmap::serde::DashMapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="1004.6" y="885" width="2.1" height="15.0" fill="rgb(216,215,29)" rx="2" ry="2" />
<text  x="1007.64" y="895.5" ></text>
</g>
<g >
<title>xmalloc (1 samples, 0.09%)</title><rect x="75.8" y="1365" width="1.0" height="15.0" fill="rgb(205,172,42)" rx="2" ry="2" />
<text  x="78.84" y="1375.5" ></text>
</g>
<g >
<title>mem_cgroup_css_rstat_flush (1 samples, 0.09%)</title><rect x="1088.7" y="1365" width="1.0" height="15.0" fill="rgb(218,151,49)" rx="2" ry="2" />
<text  x="1091.71" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 6.87%)</title><rect x="79.9" y="1445" width="81.0" height="15.0" fill="rgb(251,215,48)" rx="2" ry="2" />
<text  x="82.89" y="1455.5" >entry_SYS..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="76.8" y="1381" width="1.1" height="15.0" fill="rgb(246,44,51)" rx="2" ry="2" />
<text  x="79.85" y="1391.5" ></text>
</g>
<g >
<title>kthread (2 samples, 0.17%)</title><rect x="1088.7" y="1525" width="2.0" height="15.0" fill="rgb(244,4,54)" rx="2" ry="2" />
<text  x="1091.71" y="1535.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 0.17%)</title><rect x="1078.6" y="1493" width="2.0" height="15.0" fill="rgb(214,66,44)" rx="2" ry="2" />
<text  x="1081.58" y="1503.5" ></text>
</g>
<g >
<title>record__write (4 samples, 0.34%)</title><rect x="161.9" y="1445" width="4.1" height="15.0" fill="rgb(222,189,18)" rx="2" ry="2" />
<text  x="164.93" y="1455.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.09%)</title><rect x="1075.5" y="1429" width="1.1" height="15.0" fill="rgb(223,175,0)" rx="2" ry="2" />
<text  x="1078.55" y="1439.5" ></text>
</g>
<g >
<title>__free_one_page (5 samples, 0.43%)</title><rect x="300.7" y="1045" width="5.1" height="15.0" fill="rgb(252,173,54)" rx="2" ry="2" />
<text  x="303.70" y="1055.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.09%)</title><rect x="190.3" y="1237" width="1.0" height="15.0" fill="rgb(215,188,0)" rx="2" ry="2" />
<text  x="193.29" y="1247.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (3 samples, 0.26%)</title><rect x="161.9" y="1221" width="3.1" height="15.0" fill="rgb(224,106,23)" rx="2" ry="2" />
<text  x="164.93" y="1231.5" ></text>
</g>
<g >
<title>__common_interrupt (1 samples, 0.09%)</title><rect x="31.3" y="1397" width="1.0" height="15.0" fill="rgb(217,134,1)" rx="2" ry="2" />
<text  x="34.27" y="1407.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.09%)</title><rect x="291.6" y="1077" width="1.0" height="15.0" fill="rgb(236,226,53)" rx="2" ry="2" />
<text  x="294.58" y="1087.5" ></text>
</g>
<g >
<title>charge_memcg (9 samples, 0.77%)</title><rect x="888.2" y="1397" width="9.1" height="15.0" fill="rgb(218,105,6)" rx="2" ry="2" />
<text  x="891.16" y="1407.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.09%)</title><rect x="885.1" y="1429" width="1.0" height="15.0" fill="rgb(222,87,29)" rx="2" ry="2" />
<text  x="888.12" y="1439.5" ></text>
</g>
<g >
<title>ret_from_fork (2 samples, 0.17%)</title><rect x="1088.7" y="1541" width="2.0" height="15.0" fill="rgb(205,182,50)" rx="2" ry="2" />
<text  x="1091.71" y="1551.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.09%)</title><rect x="160.9" y="1509" width="1.0" height="15.0" fill="rgb(224,113,19)" rx="2" ry="2" />
<text  x="163.92" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (1 samples, 0.09%)</title><rect x="28.2" y="1541" width="1.0" height="15.0" fill="rgb(237,225,18)" rx="2" ry="2" />
<text  x="31.23" y="1551.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.09%)</title><rect x="29.2" y="1413" width="1.1" height="15.0" fill="rgb(210,38,8)" rx="2" ry="2" />
<text  x="32.24" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.09%)</title><rect x="312.8" y="1317" width="1.1" height="15.0" fill="rgb(208,121,23)" rx="2" ry="2" />
<text  x="315.85" y="1327.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (1 samples, 0.09%)</title><rect x="1000.6" y="1413" width="1.0" height="15.0" fill="rgb(211,112,48)" rx="2" ry="2" />
<text  x="1003.59" y="1423.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.26%)</title><rect x="1001.6" y="1413" width="3.0" height="15.0" fill="rgb(218,67,28)" rx="2" ry="2" />
<text  x="1004.61" y="1423.5" ></text>
</g>
<g >
<title>do_group_exit (2 samples, 0.17%)</title><rect x="1044.1" y="1493" width="2.1" height="15.0" fill="rgb(253,35,41)" rx="2" ry="2" />
<text  x="1047.15" y="1503.5" ></text>
</g>
<g >
<title>pick_next_task (1 samples, 0.09%)</title><rect x="1089.7" y="1461" width="1.0" height="15.0" fill="rgb(229,80,24)" rx="2" ry="2" />
<text  x="1092.73" y="1471.5" ></text>
</g>
<g >
<title>clear_page_erms (21 samples, 1.80%)</title><rect x="909.4" y="1365" width="21.3" height="15.0" fill="rgb(232,205,24)" rx="2" ry="2" />
<text  x="912.43" y="1375.5" >c..</text>
</g>
<g >
<title>cgroup_rstat_flush_locked (1 samples, 0.09%)</title><rect x="1084.7" y="1317" width="1.0" height="15.0" fill="rgb(214,113,4)" rx="2" ry="2" />
<text  x="1087.66" y="1327.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.09%)</title><rect x="1044.1" y="1445" width="1.1" height="15.0" fill="rgb(236,141,1)" rx="2" ry="2" />
<text  x="1047.15" y="1455.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.09%)</title><rect x="1044.1" y="1381" width="1.1" height="15.0" fill="rgb(232,91,21)" rx="2" ry="2" />
<text  x="1047.15" y="1391.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.09%)</title><rect x="162.9" y="1125" width="1.1" height="15.0" fill="rgb(208,173,42)" rx="2" ry="2" />
<text  x="165.94" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.09%)</title><rect x="78.9" y="1541" width="1.0" height="15.0" fill="rgb(233,3,14)" rx="2" ry="2" />
<text  x="81.88" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="22.2" y="1509" width="1.0" height="15.0" fill="rgb(227,51,7)" rx="2" ry="2" />
<text  x="25.15" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (13 samples, 1.12%)</title><rect x="985.4" y="1525" width="13.2" height="15.0" fill="rgb(236,195,11)" rx="2" ry="2" />
<text  x="988.40" y="1535.5" ></text>
</g>
<g >
<title>page_mapping (2 samples, 0.17%)</title><rect x="948.9" y="1349" width="2.1" height="15.0" fill="rgb(206,207,51)" rx="2" ry="2" />
<text  x="951.94" y="1359.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6 samples, 0.52%)</title><rect x="1092.8" y="1413" width="6.0" height="15.0" fill="rgb(248,36,36)" rx="2" ry="2" />
<text  x="1095.76" y="1423.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.09%)</title><rect x="1045.2" y="1333" width="1.0" height="15.0" fill="rgb(222,108,23)" rx="2" ry="2" />
<text  x="1048.16" y="1343.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.09%)</title><rect x="30.3" y="1461" width="1.0" height="15.0" fill="rgb(226,108,3)" rx="2" ry="2" />
<text  x="33.26" y="1471.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="190.3" y="1157" width="1.0" height="15.0" fill="rgb(232,48,33)" rx="2" ry="2" />
<text  x="193.29" y="1167.5" ></text>
</g>
<g >
<title>error_entry (2 samples, 0.17%)</title><rect x="966.2" y="1525" width="2.0" height="15.0" fill="rgb(246,225,25)" rx="2" ry="2" />
<text  x="969.15" y="1535.5" ></text>
</g>
<g >
<title>NaClAddrSpaceFree (28 samples, 2.40%)</title><rect x="221.7" y="1413" width="28.4" height="15.0" fill="rgb(252,221,43)" rx="2" ry="2" />
<text  x="224.69" y="1423.5" >Na..</text>
</g>
<g >
<title>worker_thread (1 samples, 0.09%)</title><rect x="29.2" y="1509" width="1.1" height="15.0" fill="rgb(254,113,32)" rx="2" ry="2" />
<text  x="32.24" y="1519.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (2 samples, 0.17%)</title><rect x="1004.6" y="709" width="2.1" height="15.0" fill="rgb(253,47,42)" rx="2" ry="2" />
<text  x="1007.64" y="719.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="1079.6" y="1413" width="1.0" height="15.0" fill="rgb(227,43,10)" rx="2" ry="2" />
<text  x="1082.60" y="1423.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.09%)</title><rect x="221.7" y="1221" width="1.0" height="15.0" fill="rgb(220,186,22)" rx="2" ry="2" />
<text  x="224.69" y="1231.5" ></text>
</g>
<g >
<title>_perf_event_enable (77 samples, 6.61%)</title><rect x="81.9" y="1349" width="78.0" height="15.0" fill="rgb(206,158,37)" rx="2" ry="2" />
<text  x="84.91" y="1359.5" >_perf_eve..</text>
</g>
<g >
<title>find_busiest_group (2 samples, 0.17%)</title><rect x="1162.7" y="1237" width="2.0" height="15.0" fill="rgb(208,116,48)" rx="2" ry="2" />
<text  x="1165.65" y="1247.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.09%)</title><rect x="955.0" y="1397" width="1.0" height="15.0" fill="rgb(213,76,31)" rx="2" ry="2" />
<text  x="958.01" y="1407.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.09%)</title><rect x="160.9" y="1445" width="1.0" height="15.0" fill="rgb(215,212,7)" rx="2" ry="2" />
<text  x="163.92" y="1455.5" ></text>
</g>
<g >
<title>ksys_write (4 samples, 0.34%)</title><rect x="161.9" y="1349" width="4.1" height="15.0" fill="rgb(250,58,1)" rx="2" ry="2" />
<text  x="164.93" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (2 samples, 0.17%)</title><rect x="330.1" y="1333" width="2.0" height="15.0" fill="rgb(240,170,9)" rx="2" ry="2" />
<text  x="333.07" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1000.6" y="1365" width="1.0" height="15.0" fill="rgb(243,181,33)" rx="2" ry="2" />
<text  x="1003.59" y="1375.5" ></text>
</g>
<g >
<title>release_pages (17 samples, 1.46%)</title><rect x="288.5" y="1109" width="17.3" height="15.0" fill="rgb(226,71,36)" rx="2" ry="2" />
<text  x="291.54" y="1119.5" ></text>
</g>
<g >
<title>schedule_idle (2 samples, 0.17%)</title><rect x="1153.5" y="1477" width="2.1" height="15.0" fill="rgb(226,55,42)" rx="2" ry="2" />
<text  x="1156.54" y="1487.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (109 samples, 9.36%)</title><rect x="653.2" y="1381" width="110.4" height="15.0" fill="rgb(222,182,53)" rx="2" ry="2" />
<text  x="656.18" y="1391.5" >ringbuf::ring..</text>
</g>
<g >
<title>pthread_sigmask (1 samples, 0.09%)</title><rect x="76.8" y="1397" width="1.1" height="15.0" fill="rgb(248,128,26)" rx="2" ry="2" />
<text  x="79.85" y="1407.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (1 samples, 0.09%)</title><rect x="900.3" y="1349" width="1.0" height="15.0" fill="rgb(235,184,35)" rx="2" ry="2" />
<text  x="903.32" y="1359.5" ></text>
</g>
<g >
<title>psi_task_switch (1 samples, 0.09%)</title><rect x="1183.9" y="1381" width="1.0" height="15.0" fill="rgb(233,174,42)" rx="2" ry="2" />
<text  x="1186.92" y="1391.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (26 samples, 2.23%)</title><rect x="281.5" y="1429" width="26.3" height="15.0" fill="rgb(245,30,48)" rx="2" ry="2" />
<text  x="284.45" y="1439.5" >r..</text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.09%)</title><rect x="38.4" y="1365" width="1.0" height="15.0" fill="rgb(225,179,26)" rx="2" ry="2" />
<text  x="41.36" y="1375.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="190.3" y="1381" width="1.0" height="15.0" fill="rgb(251,173,24)" rx="2" ry="2" />
<text  x="193.29" y="1391.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="1001.6" y="1173" width="1.0" height="15.0" fill="rgb(244,136,13)" rx="2" ry="2" />
<text  x="1004.61" y="1183.5" ></text>
</g>
<g >
<title>wake_up_process (4 samples, 0.34%)</title><rect x="32.3" y="1333" width="4.0" height="15.0" fill="rgb(222,69,54)" rx="2" ry="2" />
<text  x="35.28" y="1343.5" ></text>
</g>
<g >
<title>cpuidle_enter (36 samples, 3.09%)</title><rect x="31.3" y="1461" width="36.4" height="15.0" fill="rgb(226,215,52)" rx="2" ry="2" />
<text  x="34.27" y="1471.5" >cpu..</text>
</g>
<g >
<title>__do_fault (1 samples, 0.09%)</title><rect x="190.3" y="1269" width="1.0" height="15.0" fill="rgb(232,110,28)" rx="2" ry="2" />
<text  x="193.29" y="1279.5" ></text>
</g>
<g >
<title>collect_percpu_times (1 samples, 0.09%)</title><rect x="24.2" y="1349" width="1.0" height="15.0" fill="rgb(248,165,8)" rx="2" ry="2" />
<text  x="27.18" y="1359.5" ></text>
</g>
<g >
<title>nohz_balance_enter_idle (1 samples, 0.09%)</title><rect x="1150.5" y="1461" width="1.0" height="15.0" fill="rgb(216,61,12)" rx="2" ry="2" />
<text  x="1153.50" y="1471.5" ></text>
</g>
<g >
<title>perf_ioctl (79 samples, 6.78%)</title><rect x="79.9" y="1397" width="80.0" height="15.0" fill="rgb(236,89,35)" rx="2" ry="2" />
<text  x="82.89" y="1407.5" >perf_ioctl</text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.26%)</title><rect x="981.3" y="1461" width="3.1" height="15.0" fill="rgb(231,146,36)" rx="2" ry="2" />
<text  x="984.35" y="1471.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.09%)</title><rect x="984.4" y="1397" width="1.0" height="15.0" fill="rgb(226,222,53)" rx="2" ry="2" />
<text  x="987.39" y="1407.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.09%)</title><rect x="73.8" y="1397" width="1.0" height="15.0" fill="rgb(249,86,11)" rx="2" ry="2" />
<text  x="76.81" y="1407.5" ></text>
</g>
<g >
<title>__get_vma_policy (1 samples, 0.09%)</title><rect x="887.2" y="1413" width="1.0" height="15.0" fill="rgb(247,99,0)" rx="2" ry="2" />
<text  x="890.15" y="1423.5" ></text>
</g>
<g >
<title>psi_flags_change (1 samples, 0.09%)</title><rect x="35.3" y="1253" width="1.0" height="15.0" fill="rgb(229,223,11)" rx="2" ry="2" />
<text  x="38.32" y="1263.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::deserialize (2 samples, 0.17%)</title><rect x="1004.6" y="645" width="2.1" height="15.0" fill="rgb(212,125,39)" rx="2" ry="2" />
<text  x="1007.64" y="655.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once_force::{{closure}} (2 samples, 0.17%)</title><rect x="1004.6" y="1317" width="2.1" height="15.0" fill="rgb(249,144,21)" rx="2" ry="2" />
<text  x="1007.64" y="1327.5" ></text>
</g>
<g >
<title>dispatcher (125 samples, 10.73%)</title><rect x="309.8" y="1461" width="126.6" height="15.0" fill="rgb(247,101,19)" rx="2" ry="2" />
<text  x="312.81" y="1471.5" >dispatcher</text>
</g>
<g >
<title>alloc_pages (1 samples, 0.09%)</title><rect x="900.3" y="1381" width="1.0" height="15.0" fill="rgb(236,61,23)" rx="2" ry="2" />
<text  x="903.32" y="1391.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (2 samples, 0.17%)</title><rect x="1162.7" y="1221" width="2.0" height="15.0" fill="rgb(236,146,44)" rx="2" ry="2" />
<text  x="1165.65" y="1231.5" ></text>
</g>
<g >
<title>atime_needs_update (1 samples, 0.09%)</title><rect x="322.0" y="1205" width="1.0" height="15.0" fill="rgb(220,76,3)" rx="2" ry="2" />
<text  x="324.97" y="1215.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.09%)</title><rect x="39.4" y="1237" width="1.0" height="15.0" fill="rgb(253,187,50)" rx="2" ry="2" />
<text  x="42.37" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3 samples, 0.26%)</title><rect x="1078.6" y="1509" width="3.0" height="15.0" fill="rgb(234,52,20)" rx="2" ry="2" />
<text  x="1081.58" y="1519.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (7 samples, 0.60%)</title><rect x="646.1" y="1381" width="7.1" height="15.0" fill="rgb(224,181,15)" rx="2" ry="2" />
<text  x="649.09" y="1391.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.09%)</title><rect x="360.5" y="1365" width="1.0" height="15.0" fill="rgb(243,33,45)" rx="2" ry="2" />
<text  x="363.45" y="1375.5" ></text>
</g>
<g >
<title>page_remove_rmap (2 samples, 0.17%)</title><rect x="284.5" y="1141" width="2.0" height="15.0" fill="rgb(246,133,8)" rx="2" ry="2" />
<text  x="287.49" y="1151.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.09%)</title><rect x="359.4" y="1365" width="1.1" height="15.0" fill="rgb(253,192,4)" rx="2" ry="2" />
<text  x="362.44" y="1375.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="1004.6" y="1141" width="2.1" height="15.0" fill="rgb(224,212,10)" rx="2" ry="2" />
<text  x="1007.64" y="1151.5" ></text>
</g>
<g >
<title>__vm_munmap (28 samples, 2.40%)</title><rect x="221.7" y="1333" width="28.4" height="15.0" fill="rgb(251,113,41)" rx="2" ry="2" />
<text  x="224.69" y="1343.5" >__..</text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.09%)</title><rect x="165.0" y="1221" width="1.0" height="15.0" fill="rgb(241,31,40)" rx="2" ry="2" />
<text  x="167.97" y="1231.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 0.09%)</title><rect x="68.7" y="1445" width="1.1" height="15.0" fill="rgb(206,64,47)" rx="2" ry="2" />
<text  x="71.75" y="1455.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (6 samples, 0.52%)</title><rect x="299.7" y="1061" width="6.1" height="15.0" fill="rgb(235,66,27)" rx="2" ry="2" />
<text  x="302.68" y="1071.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7 samples, 0.60%)</title><rect x="1162.7" y="1333" width="7.0" height="15.0" fill="rgb(240,146,45)" rx="2" ry="2" />
<text  x="1165.65" y="1343.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt_r (1 samples, 0.09%)</title><rect x="1005.7" y="181" width="1.0" height="15.0" fill="rgb(253,167,2)" rx="2" ry="2" />
<text  x="1008.66" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="161.9" y="1093" width="1.0" height="15.0" fill="rgb(251,177,10)" rx="2" ry="2" />
<text  x="164.93" y="1103.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.09%)</title><rect x="250.1" y="1365" width="1.0" height="15.0" fill="rgb(252,100,44)" rx="2" ry="2" />
<text  x="253.05" y="1375.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.09%)</title><rect x="1044.1" y="1349" width="1.1" height="15.0" fill="rgb(231,200,50)" rx="2" ry="2" />
<text  x="1047.15" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="78.9" y="1493" width="1.0" height="15.0" fill="rgb(207,130,10)" rx="2" ry="2" />
<text  x="81.88" y="1503.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (98 samples, 8.41%)</title><rect x="1090.7" y="1541" width="99.3" height="15.0" fill="rgb(224,128,6)" rx="2" ry="2" />
<text  x="1093.74" y="1551.5" >secondary_st..</text>
</g>
<g >
<title>rwsem_down_write_slowpath (25 samples, 2.15%)</title><rect x="251.1" y="1317" width="25.3" height="15.0" fill="rgb(243,52,17)" rx="2" ry="2" />
<text  x="254.06" y="1327.5" >r..</text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (1 samples, 0.09%)</title><rect x="1182.9" y="1397" width="1.0" height="15.0" fill="rgb(244,200,1)" rx="2" ry="2" />
<text  x="1185.91" y="1407.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="1004.6" y="261" width="1.1" height="15.0" fill="rgb(232,87,43)" rx="2" ry="2" />
<text  x="1007.64" y="271.5" ></text>
</g>
<g >
<title>exc_page_fault (96 samples, 8.24%)</title><rect x="868.9" y="1509" width="97.3" height="15.0" fill="rgb(221,49,27)" rx="2" ry="2" />
<text  x="871.92" y="1519.5" >exc_page_fa..</text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::insert (1 samples, 0.09%)</title><rect x="1004.6" y="341" width="1.1" height="15.0" fill="rgb(239,155,37)" rx="2" ry="2" />
<text  x="1007.64" y="351.5" ></text>
</g>
<g >
<title>sigprocmask (1 samples, 0.09%)</title><rect x="76.8" y="1413" width="1.1" height="15.0" fill="rgb(252,8,3)" rx="2" ry="2" />
<text  x="79.85" y="1423.5" ></text>
</g>
<g >
<title>__alloc_file (1 samples, 0.09%)</title><rect x="23.2" y="1429" width="1.0" height="15.0" fill="rgb(210,142,33)" rx="2" ry="2" />
<text  x="26.17" y="1439.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.09%)</title><rect x="77.9" y="1477" width="1.0" height="15.0" fill="rgb(234,42,1)" rx="2" ry="2" />
<text  x="80.86" y="1487.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (2 samples, 0.17%)</title><rect x="1004.6" y="757" width="2.1" height="15.0" fill="rgb(247,116,10)" rx="2" ry="2" />
<text  x="1007.64" y="767.5" ></text>
</g>
<g >
<title>memory_stat_format (2 samples, 0.17%)</title><rect x="25.2" y="1365" width="2.0" height="15.0" fill="rgb(249,168,14)" rx="2" ry="2" />
<text  x="28.19" y="1375.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (1 samples, 0.09%)</title><rect x="331.1" y="1269" width="1.0" height="15.0" fill="rgb(213,83,42)" rx="2" ry="2" />
<text  x="334.08" y="1279.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.09%)</title><rect x="877.0" y="1461" width="1.0" height="15.0" fill="rgb(235,206,8)" rx="2" ry="2" />
<text  x="880.02" y="1471.5" ></text>
</g>
<g >
<title>_start (8 samples, 0.69%)</title><rect x="998.6" y="1541" width="8.1" height="15.0" fill="rgb(212,16,16)" rx="2" ry="2" />
<text  x="1001.57" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.34%)</title><rect x="161.9" y="1397" width="4.1" height="15.0" fill="rgb(224,134,48)" rx="2" ry="2" />
<text  x="164.93" y="1407.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.09%)</title><rect x="29.2" y="1541" width="1.1" height="15.0" fill="rgb(244,78,36)" rx="2" ry="2" />
<text  x="32.24" y="1551.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (2 samples, 0.17%)</title><rect x="998.6" y="1461" width="2.0" height="15.0" fill="rgb(208,11,9)" rx="2" ry="2" />
<text  x="1001.57" y="1471.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.09%)</title><rect x="292.6" y="1093" width="1.0" height="15.0" fill="rgb(215,125,46)" rx="2" ry="2" />
<text  x="295.59" y="1103.5" ></text>
</g>
<g >
<title>main (3 samples, 0.26%)</title><rect x="74.8" y="1493" width="3.1" height="15.0" fill="rgb(248,172,32)" rx="2" ry="2" />
<text  x="77.82" y="1503.5" ></text>
</g>
<g >
<title>__mmap (26 samples, 2.23%)</title><rect x="281.5" y="1381" width="26.3" height="15.0" fill="rgb(242,194,42)" rx="2" ry="2" />
<text  x="284.45" y="1391.5" >_..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt; (1 samples, 0.09%)</title><rect x="436.4" y="1429" width="1.0" height="15.0" fill="rgb(205,102,31)" rx="2" ry="2" />
<text  x="439.42" y="1439.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.09%)</title><rect x="36.3" y="1333" width="1.0" height="15.0" fill="rgb(242,58,32)" rx="2" ry="2" />
<text  x="39.33" y="1343.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (3 samples, 0.26%)</title><rect x="981.3" y="1413" width="3.1" height="15.0" fill="rgb(210,166,5)" rx="2" ry="2" />
<text  x="984.35" y="1423.5" ></text>
</g>
<g >
<title>free_unref_page_list (12 samples, 1.03%)</title><rect x="293.6" y="1093" width="12.2" height="15.0" fill="rgb(252,187,33)" rx="2" ry="2" />
<text  x="296.61" y="1103.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (2 samples, 0.17%)</title><rect x="1004.6" y="421" width="2.1" height="15.0" fill="rgb(252,130,16)" rx="2" ry="2" />
<text  x="1007.64" y="431.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::de::Deserialize for dashmap::DashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.17%)</title><rect x="1004.6" y="469" width="2.1" height="15.0" fill="rgb(243,211,19)" rx="2" ry="2" />
<text  x="1007.64" y="479.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (12 samples, 1.03%)</title><rect x="316.9" y="1413" width="12.2" height="15.0" fill="rgb(250,131,5)" rx="2" ry="2" />
<text  x="319.90" y="1423.5" ></text>
</g>
<g >
<title>NaClSysExecve (29 samples, 2.49%)</title><rect x="221.7" y="1493" width="29.4" height="15.0" fill="rgb(234,31,43)" rx="2" ry="2" />
<text  x="224.69" y="1503.5" >Na..</text>
</g>
<g >
<title>new_sync_write (1 samples, 0.09%)</title><rect x="160.9" y="1333" width="1.0" height="15.0" fill="rgb(249,39,0)" rx="2" ry="2" />
<text  x="163.92" y="1343.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.09%)</title><rect x="304.7" y="1029" width="1.1" height="15.0" fill="rgb(211,101,18)" rx="2" ry="2" />
<text  x="307.75" y="1039.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (4 samples, 0.34%)</title><rect x="323.0" y="1189" width="4.0" height="15.0" fill="rgb(205,72,17)" rx="2" ry="2" />
<text  x="325.98" y="1199.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.09%)</title><rect x="77.9" y="1493" width="1.0" height="15.0" fill="rgb(222,115,38)" rx="2" ry="2" />
<text  x="80.86" y="1503.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (26 samples, 2.23%)</title><rect x="281.5" y="1173" width="26.3" height="15.0" fill="rgb(216,171,33)" rx="2" ry="2" />
<text  x="284.45" y="1183.5" >z..</text>
</g>
<g >
<title>do_exit (2 samples, 0.17%)</title><rect x="1044.1" y="1477" width="2.1" height="15.0" fill="rgb(244,23,35)" rx="2" ry="2" />
<text  x="1047.15" y="1487.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.09%)</title><rect x="338.2" y="1397" width="1.0" height="15.0" fill="rgb(214,197,47)" rx="2" ry="2" />
<text  x="341.17" y="1407.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (1 samples, 0.09%)</title><rect x="336.1" y="1397" width="1.1" height="15.0" fill="rgb(224,138,41)" rx="2" ry="2" />
<text  x="339.15" y="1407.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1 samples, 0.09%)</title><rect x="185.2" y="1509" width="1.0" height="15.0" fill="rgb(220,130,34)" rx="2" ry="2" />
<text  x="188.23" y="1519.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="75.8" y="1253" width="1.0" height="15.0" fill="rgb(211,193,51)" rx="2" ry="2" />
<text  x="78.84" y="1263.5" ></text>
</g>
<g >
<title>remote_function (73 samples, 6.27%)</title><rect x="85.0" y="1285" width="73.9" height="15.0" fill="rgb(220,163,28)" rx="2" ry="2" />
<text  x="87.95" y="1295.5" >remote_f..</text>
</g>
<g >
<title>vfs_write (1 samples, 0.09%)</title><rect x="160.9" y="1349" width="1.0" height="15.0" fill="rgb(243,104,43)" rx="2" ry="2" />
<text  x="163.92" y="1359.5" ></text>
</g>
<g >
<title>si_meminfo (1 samples, 0.09%)</title><rect x="1086.7" y="1397" width="1.0" height="15.0" fill="rgb(241,122,15)" rx="2" ry="2" />
<text  x="1089.69" y="1407.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.09%)</title><rect x="1097.8" y="1365" width="1.0" height="15.0" fill="rgb(251,37,54)" rx="2" ry="2" />
<text  x="1100.83" y="1375.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.09%)</title><rect x="1169.7" y="1333" width="1.1" height="15.0" fill="rgb(207,47,23)" rx="2" ry="2" />
<text  x="1172.74" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.77%)</title><rect x="319.9" y="1349" width="9.2" height="15.0" fill="rgb(241,115,32)" rx="2" ry="2" />
<text  x="322.94" y="1359.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.09%)</title><rect x="321.0" y="1253" width="1.0" height="15.0" fill="rgb(223,15,53)" rx="2" ry="2" />
<text  x="323.95" y="1263.5" ></text>
</g>
<g >
<title>copy_pte_range (1 samples, 0.09%)</title><rect x="74.8" y="1189" width="1.0" height="15.0" fill="rgb(248,36,3)" rx="2" ry="2" />
<text  x="77.82" y="1199.5" ></text>
</g>
<g >
<title>do_user_addr_fault (89 samples, 7.64%)</title><rect x="869.9" y="1493" width="90.2" height="15.0" fill="rgb(215,118,25)" rx="2" ry="2" />
<text  x="872.93" y="1503.5" >do_user_ad..</text>
</g>
<g >
<title>perf_mmap__push (4 samples, 0.34%)</title><rect x="161.9" y="1477" width="4.1" height="15.0" fill="rgb(239,48,50)" rx="2" ry="2" />
<text  x="164.93" y="1487.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 0.26%)</title><rect x="24.2" y="1461" width="3.0" height="15.0" fill="rgb(253,151,36)" rx="2" ry="2" />
<text  x="27.18" y="1471.5" ></text>
</g>
<g >
<title>vm_normal_page (1 samples, 0.09%)</title><rect x="306.8" y="1141" width="1.0" height="15.0" fill="rgb(219,69,1)" rx="2" ry="2" />
<text  x="309.77" y="1151.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.09%)</title><rect x="330.1" y="1285" width="1.0" height="15.0" fill="rgb(236,119,35)" rx="2" ry="2" />
<text  x="333.07" y="1295.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.17%)</title><rect x="1160.6" y="1269" width="2.1" height="15.0" fill="rgb(243,1,11)" rx="2" ry="2" />
<text  x="1163.63" y="1279.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="351.3" y="1365" width="1.1" height="15.0" fill="rgb(240,103,43)" rx="2" ry="2" />
<text  x="354.34" y="1375.5" ></text>
</g>
<g >
<title>ovl_unlink (1 samples, 0.09%)</title><rect x="1000.6" y="1301" width="1.0" height="15.0" fill="rgb(229,129,18)" rx="2" ry="2" />
<text  x="1003.59" y="1311.5" ></text>
</g>
<g >
<title>kernel_clone (1 samples, 0.09%)</title><rect x="74.8" y="1301" width="1.0" height="15.0" fill="rgb(252,63,12)" rx="2" ry="2" />
<text  x="77.82" y="1311.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (25 samples, 2.15%)</title><rect x="251.1" y="1509" width="25.3" height="15.0" fill="rgb(219,119,20)" rx="2" ry="2" />
<text  x="254.06" y="1519.5" >N..</text>
</g>
<g >
<title>arch_call_rest_init (33 samples, 2.83%)</title><rect x="1156.6" y="1477" width="33.4" height="15.0" fill="rgb(243,220,10)" rx="2" ry="2" />
<text  x="1159.58" y="1487.5" >ar..</text>
</g>
<g >
<title>iput (1 samples, 0.09%)</title><rect x="1045.2" y="1349" width="1.0" height="15.0" fill="rgb(234,168,9)" rx="2" ry="2" />
<text  x="1048.16" y="1359.5" ></text>
</g>
<g >
<title>new_sync_read (4 samples, 0.34%)</title><rect x="1083.6" y="1461" width="4.1" height="15.0" fill="rgb(237,101,6)" rx="2" ry="2" />
<text  x="1086.65" y="1471.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="1079.6" y="1429" width="1.0" height="15.0" fill="rgb(239,187,49)" rx="2" ry="2" />
<text  x="1082.60" y="1439.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (3 samples, 0.26%)</title><rect x="161.9" y="1237" width="3.1" height="15.0" fill="rgb(211,201,33)" rx="2" ry="2" />
<text  x="164.93" y="1247.5" ></text>
</g>
<g >
<title>start_secondary (43 samples, 3.69%)</title><rect x="30.3" y="1525" width="43.5" height="15.0" fill="rgb(227,174,50)" rx="2" ry="2" />
<text  x="33.26" y="1535.5" >star..</text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (3 samples, 0.26%)</title><rect x="312.8" y="1413" width="3.1" height="15.0" fill="rgb(221,218,54)" rx="2" ry="2" />
<text  x="315.85" y="1423.5" ></text>
</g>
<g >
<title>scsi_end_request (1 samples, 0.09%)</title><rect x="1091.8" y="1285" width="1.0" height="15.0" fill="rgb(212,86,14)" rx="2" ry="2" />
<text  x="1094.75" y="1295.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.09%)</title><rect x="37.3" y="1221" width="1.1" height="15.0" fill="rgb(241,189,5)" rx="2" ry="2" />
<text  x="40.35" y="1231.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="1079.6" y="1381" width="1.0" height="15.0" fill="rgb(245,191,22)" rx="2" ry="2" />
<text  x="1082.60" y="1391.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (2 samples, 0.17%)</title><rect x="1004.6" y="1109" width="2.1" height="15.0" fill="rgb(235,26,16)" rx="2" ry="2" />
<text  x="1007.64" y="1119.5" ></text>
</g>
<g >
<title>vfs_read (5 samples, 0.43%)</title><rect x="1083.6" y="1477" width="5.1" height="15.0" fill="rgb(215,223,52)" rx="2" ry="2" />
<text  x="1086.65" y="1487.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.09%)</title><rect x="37.3" y="1157" width="1.1" height="15.0" fill="rgb(236,183,40)" rx="2" ry="2" />
<text  x="40.35" y="1167.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.09%)</title><rect x="1087.7" y="1429" width="1.0" height="15.0" fill="rgb(230,86,35)" rx="2" ry="2" />
<text  x="1090.70" y="1439.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (2 samples, 0.17%)</title><rect x="1151.5" y="1477" width="2.0" height="15.0" fill="rgb(220,161,31)" rx="2" ry="2" />
<text  x="1154.51" y="1487.5" ></text>
</g>
<g >
<title>hugetlb_total_pages (1 samples, 0.09%)</title><rect x="1085.7" y="1397" width="1.0" height="15.0" fill="rgb(248,206,16)" rx="2" ry="2" />
<text  x="1088.67" y="1407.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (34 samples, 2.92%)</title><rect x="187.3" y="1477" width="34.4" height="15.0" fill="rgb(215,157,11)" rx="2" ry="2" />
<text  x="190.25" y="1487.5" >Na..</text>
</g>
<g >
<title>_start (3 samples, 0.26%)</title><rect x="74.8" y="1541" width="3.1" height="15.0" fill="rgb(251,52,33)" rx="2" ry="2" />
<text  x="77.82" y="1551.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.09%)</title><rect x="1088.7" y="1493" width="1.0" height="15.0" fill="rgb(249,153,37)" rx="2" ry="2" />
<text  x="1091.71" y="1503.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (1 samples, 0.09%)</title><rect x="166.0" y="1525" width="1.0" height="15.0" fill="rgb(216,68,32)" rx="2" ry="2" />
<text  x="168.98" y="1535.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (573 samples, 49.18%)</title><rect x="183.2" y="1525" width="580.4" height="15.0" fill="rgb(252,44,25)" rx="2" ry="2" />
<text  x="186.20" y="1535.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="78.9" y="1461" width="1.0" height="15.0" fill="rgb(205,62,38)" rx="2" ry="2" />
<text  x="81.88" y="1471.5" ></text>
</g>
<g >
<title>unmap_vmas (26 samples, 2.23%)</title><rect x="281.5" y="1221" width="26.3" height="15.0" fill="rgb(252,88,45)" rx="2" ry="2" />
<text  x="284.45" y="1231.5" >u..</text>
</g>
<g >
<title>x86_64_start_kernel (33 samples, 2.83%)</title><rect x="1156.6" y="1525" width="33.4" height="15.0" fill="rgb(222,163,24)" rx="2" ry="2" />
<text  x="1159.58" y="1535.5" >x8..</text>
</g>
<g >
<title>filemap_get_read_batch (1 samples, 0.09%)</title><rect x="326.0" y="1125" width="1.0" height="15.0" fill="rgb(244,100,10)" rx="2" ry="2" />
<text  x="329.02" y="1135.5" ></text>
</g>
<g >
<title>copy_pmd_range (1 samples, 0.09%)</title><rect x="74.8" y="1205" width="1.0" height="15.0" fill="rgb(214,224,29)" rx="2" ry="2" />
<text  x="77.82" y="1215.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.09%)</title><rect x="32.3" y="1237" width="1.0" height="15.0" fill="rgb(211,95,17)" rx="2" ry="2" />
<text  x="35.28" y="1247.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.09%)</title><rect x="1168.7" y="1269" width="1.0" height="15.0" fill="rgb(229,159,44)" rx="2" ry="2" />
<text  x="1171.73" y="1279.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (2 samples, 0.17%)</title><rect x="1165.7" y="1237" width="2.0" height="15.0" fill="rgb(216,19,36)" rx="2" ry="2" />
<text  x="1168.69" y="1247.5" ></text>
</g>
<g >
<title>native_set_pte (1 samples, 0.09%)</title><rect x="953.0" y="1413" width="1.0" height="15.0" fill="rgb(244,34,35)" rx="2" ry="2" />
<text  x="955.99" y="1423.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (34 samples, 2.92%)</title><rect x="187.3" y="1493" width="34.4" height="15.0" fill="rgb(211,178,10)" rx="2" ry="2" />
<text  x="190.25" y="1503.5" >Na..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (17 samples, 1.46%)</title><rect x="315.9" y="1429" width="17.2" height="15.0" fill="rgb(214,11,3)" rx="2" ry="2" />
<text  x="318.89" y="1439.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.09%)</title><rect x="72.8" y="1413" width="1.0" height="15.0" fill="rgb(242,126,16)" rx="2" ry="2" />
<text  x="75.80" y="1423.5" ></text>
</g>
<g >
<title>__cmd_record (85 samples, 7.30%)</title><rect x="79.9" y="1525" width="86.1" height="15.0" fill="rgb(239,23,54)" rx="2" ry="2" />
<text  x="82.89" y="1535.5" >__cmd_record</text>
</g>
<g >
<title>[bash] (1 samples, 0.09%)</title><rect x="74.8" y="1429" width="1.0" height="15.0" fill="rgb(246,217,15)" rx="2" ry="2" />
<text  x="77.82" y="1439.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (3 samples, 0.26%)</title><rect x="1001.6" y="1301" width="3.0" height="15.0" fill="rgb(215,37,19)" rx="2" ry="2" />
<text  x="1004.61" y="1311.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (1 samples, 0.09%)</title><rect x="1169.7" y="1349" width="1.1" height="15.0" fill="rgb(242,226,11)" rx="2" ry="2" />
<text  x="1172.74" y="1359.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (26 samples, 2.23%)</title><rect x="281.5" y="1413" width="26.3" height="15.0" fill="rgb(222,104,11)" rx="2" ry="2" />
<text  x="284.45" y="1423.5" >r..</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.09%)</title><rect x="984.4" y="1365" width="1.0" height="15.0" fill="rgb(206,65,34)" rx="2" ry="2" />
<text  x="987.39" y="1375.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.09%)</title><rect x="1078.6" y="1365" width="1.0" height="15.0" fill="rgb(254,180,22)" rx="2" ry="2" />
<text  x="1081.58" y="1375.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (2 samples, 0.17%)</title><rect x="1004.6" y="405" width="2.1" height="15.0" fill="rgb(210,206,27)" rx="2" ry="2" />
<text  x="1007.64" y="415.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1 samples, 0.09%)</title><rect x="182.2" y="1525" width="1.0" height="15.0" fill="rgb(235,86,6)" rx="2" ry="2" />
<text  x="185.19" y="1535.5" ></text>
</g>
<g >
<title>NaClPageFree (1 samples, 0.09%)</title><rect x="250.1" y="1445" width="1.0" height="15.0" fill="rgb(240,144,46)" rx="2" ry="2" />
<text  x="253.05" y="1455.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.09%)</title><rect x="27.2" y="1397" width="1.0" height="15.0" fill="rgb(209,188,37)" rx="2" ry="2" />
<text  x="30.22" y="1407.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.17%)</title><rect x="1004.6" y="485" width="2.1" height="15.0" fill="rgb(206,8,4)" rx="2" ry="2" />
<text  x="1007.64" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (25 samples, 2.15%)</title><rect x="251.1" y="1365" width="25.3" height="15.0" fill="rgb(212,102,17)" rx="2" ry="2" />
<text  x="254.06" y="1375.5" >_..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (102 samples, 8.76%)</title><rect x="333.1" y="1429" width="103.3" height="15.0" fill="rgb(237,123,38)" rx="2" ry="2" />
<text  x="336.11" y="1439.5" >rustposix::i..</text>
</g>
<g >
<title>MarkValidJumpTarget (3 samples, 0.26%)</title><rect x="218.7" y="1413" width="3.0" height="15.0" fill="rgb(212,170,0)" rx="2" ry="2" />
<text  x="221.65" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.09%)</title><rect x="339.2" y="1413" width="1.0" height="15.0" fill="rgb(228,165,14)" rx="2" ry="2" />
<text  x="342.18" y="1423.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (2 samples, 0.17%)</title><rect x="1004.6" y="1077" width="2.1" height="15.0" fill="rgb(249,85,37)" rx="2" ry="2" />
<text  x="1007.64" y="1087.5" ></text>
</g>
<g >
<title>[libc.so.6] (79 samples, 6.78%)</title><rect x="516.4" y="1333" width="80.1" height="15.0" fill="rgb(212,58,31)" rx="2" ry="2" />
<text  x="519.44" y="1343.5" >[libc.so.6]</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.09%)</title><rect x="311.8" y="1333" width="1.0" height="15.0" fill="rgb(218,118,42)" rx="2" ry="2" />
<text  x="314.84" y="1343.5" ></text>
</g>
<g >
<title>dup_mm (1 samples, 0.09%)</title><rect x="74.8" y="1269" width="1.0" height="15.0" fill="rgb(230,102,1)" rx="2" ry="2" />
<text  x="77.82" y="1279.5" ></text>
</g>
<g >
<title>vfs_read (6 samples, 0.52%)</title><rect x="322.0" y="1285" width="6.0" height="15.0" fill="rgb(211,52,1)" rx="2" ry="2" />
<text  x="324.97" y="1295.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (4 samples, 0.34%)</title><rect x="759.5" y="1365" width="4.1" height="15.0" fill="rgb(205,197,36)" rx="2" ry="2" />
<text  x="762.53" y="1375.5" ></text>
</g>
<g >
<title>__memcg_kmem_uncharge_page (1 samples, 0.09%)</title><rect x="68.7" y="1413" width="1.1" height="15.0" fill="rgb(225,69,28)" rx="2" ry="2" />
<text  x="71.75" y="1423.5" ></text>
</g>
<g >
<title>__do_sys_clone (1 samples, 0.09%)</title><rect x="74.8" y="1317" width="1.0" height="15.0" fill="rgb(249,190,40)" rx="2" ry="2" />
<text  x="77.82" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="74.8" y="1365" width="1.0" height="15.0" fill="rgb(248,206,49)" rx="2" ry="2" />
<text  x="77.82" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (28 samples, 2.40%)</title><rect x="221.7" y="1365" width="28.4" height="15.0" fill="rgb(209,208,2)" rx="2" ry="2" />
<text  x="224.69" y="1375.5" >do..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.09%)</title><rect x="1079.6" y="1301" width="1.0" height="15.0" fill="rgb(239,180,44)" rx="2" ry="2" />
<text  x="1082.60" y="1311.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (2 samples, 0.17%)</title><rect x="312.8" y="1381" width="2.1" height="15.0" fill="rgb(245,129,18)" rx="2" ry="2" />
<text  x="315.85" y="1391.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (8 samples, 0.69%)</title><rect x="32.3" y="1413" width="8.1" height="15.0" fill="rgb(252,123,43)" rx="2" ry="2" />
<text  x="35.28" y="1423.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="1004.6" y="1157" width="2.1" height="15.0" fill="rgb(244,53,21)" rx="2" ry="2" />
<text  x="1007.64" y="1167.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (85 samples, 7.30%)</title><rect x="510.4" y="1349" width="86.1" height="15.0" fill="rgb(245,57,15)" rx="2" ry="2" />
<text  x="513.36" y="1359.5" >core::intr..</text>
</g>
<g >
<title>dispatcher (26 samples, 2.23%)</title><rect x="281.5" y="1445" width="26.3" height="15.0" fill="rgb(215,219,51)" rx="2" ry="2" />
<text  x="284.45" y="1455.5" >d..</text>
</g>
<g >
<title>cpuidle_idle_call (60 samples, 5.15%)</title><rect x="1090.7" y="1477" width="60.8" height="15.0" fill="rgb(250,9,8)" rx="2" ry="2" />
<text  x="1093.74" y="1487.5" >cpuidl..</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (12 samples, 1.03%)</title><rect x="340.2" y="1397" width="12.2" height="15.0" fill="rgb(214,34,28)" rx="2" ry="2" />
<text  x="343.20" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.77%)</title><rect x="319.9" y="1333" width="9.2" height="15.0" fill="rgb(253,201,18)" rx="2" ry="2" />
<text  x="322.94" y="1343.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (1 samples, 0.09%)</title><rect x="314.9" y="1397" width="1.0" height="15.0" fill="rgb(220,57,24)" rx="2" ry="2" />
<text  x="317.88" y="1407.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.09%)</title><rect x="1091.8" y="1397" width="1.0" height="15.0" fill="rgb(216,23,27)" rx="2" ry="2" />
<text  x="1094.75" y="1407.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="1004.6" y="293" width="1.1" height="15.0" fill="rgb(238,215,51)" rx="2" ry="2" />
<text  x="1007.64" y="303.5" ></text>
</g>
<g >
<title>scsi_finish_command (1 samples, 0.09%)</title><rect x="1091.8" y="1317" width="1.0" height="15.0" fill="rgb(223,15,18)" rx="2" ry="2" />
<text  x="1094.75" y="1327.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (2 samples, 0.17%)</title><rect x="357.4" y="1349" width="2.0" height="15.0" fill="rgb(209,77,25)" rx="2" ry="2" />
<text  x="360.42" y="1359.5" ></text>
</g>
<g >
<title>&lt;dashmap::serde::DashMapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="1004.6" y="357" width="2.1" height="15.0" fill="rgb(215,83,19)" rx="2" ry="2" />
<text  x="1007.64" y="367.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_locked (1 samples, 0.09%)</title><rect x="1088.7" y="1381" width="1.0" height="15.0" fill="rgb(207,6,18)" rx="2" ry="2" />
<text  x="1091.71" y="1391.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="1001.6" y="1189" width="1.0" height="15.0" fill="rgb(236,81,30)" rx="2" ry="2" />
<text  x="1004.61" y="1199.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.09%)</title><rect x="983.4" y="1317" width="1.0" height="15.0" fill="rgb(250,48,12)" rx="2" ry="2" />
<text  x="986.37" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.09%)</title><rect x="23.2" y="1509" width="1.0" height="15.0" fill="rgb(224,174,35)" rx="2" ry="2" />
<text  x="26.17" y="1519.5" ></text>
</g>
<g >
<title>NaClSysExecv (29 samples, 2.49%)</title><rect x="221.7" y="1477" width="29.4" height="15.0" fill="rgb(236,123,32)" rx="2" ry="2" />
<text  x="224.69" y="1487.5" >Na..</text>
</g>
<g >
<title>NaClAppLoadFile (4 samples, 0.34%)</title><rect x="276.4" y="1445" width="4.0" height="15.0" fill="rgb(246,116,12)" rx="2" ry="2" />
<text  x="279.39" y="1455.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (8 samples, 0.69%)</title><rect x="998.6" y="1477" width="8.1" height="15.0" fill="rgb(212,179,44)" rx="2" ry="2" />
<text  x="1001.57" y="1487.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.09%)</title><rect x="27.2" y="1477" width="1.0" height="15.0" fill="rgb(222,47,23)" rx="2" ry="2" />
<text  x="30.22" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (28 samples, 2.40%)</title><rect x="221.7" y="1349" width="28.4" height="15.0" fill="rgb(205,62,50)" rx="2" ry="2" />
<text  x="224.69" y="1359.5" >__..</text>
</g>
<g >
<title>wake_up_process (1 samples, 0.09%)</title><rect x="1159.6" y="1269" width="1.0" height="15.0" fill="rgb(235,129,18)" rx="2" ry="2" />
<text  x="1162.61" y="1279.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.09%)</title><rect x="76.8" y="1349" width="1.1" height="15.0" fill="rgb(221,190,40)" rx="2" ry="2" />
<text  x="79.85" y="1359.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (5 samples, 0.43%)</title><rect x="323.0" y="1205" width="5.0" height="15.0" fill="rgb(221,144,43)" rx="2" ry="2" />
<text  x="325.98" y="1215.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (7 samples, 0.60%)</title><rect x="480.0" y="1349" width="7.1" height="15.0" fill="rgb(206,96,10)" rx="2" ry="2" />
<text  x="482.97" y="1359.5" ></text>
</g>
<g >
<title>mem_cgroup_wb_stats (1 samples, 0.09%)</title><rect x="1088.7" y="1429" width="1.0" height="15.0" fill="rgb(254,69,11)" rx="2" ry="2" />
<text  x="1091.71" y="1439.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (2 samples, 0.17%)</title><rect x="1004.6" y="869" width="2.1" height="15.0" fill="rgb(240,33,27)" rx="2" ry="2" />
<text  x="1007.64" y="879.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (26 samples, 2.23%)</title><rect x="281.5" y="1317" width="26.3" height="15.0" fill="rgb(248,80,30)" rx="2" ry="2" />
<text  x="284.45" y="1327.5" >k..</text>
</g>
<g >
<title>__pagevec_lru_add_fn (8 samples, 0.69%)</title><rect x="942.9" y="1365" width="8.1" height="15.0" fill="rgb(229,97,36)" rx="2" ry="2" />
<text  x="945.86" y="1375.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (7 samples, 0.60%)</title><rect x="480.0" y="1365" width="7.1" height="15.0" fill="rgb(234,147,6)" rx="2" ry="2" />
<text  x="482.97" y="1375.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.09%)</title><rect x="23.2" y="1477" width="1.0" height="15.0" fill="rgb(223,117,51)" rx="2" ry="2" />
<text  x="26.17" y="1487.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.09%)</title><rect x="296.6" y="1077" width="1.1" height="15.0" fill="rgb(239,36,11)" rx="2" ry="2" />
<text  x="299.64" y="1087.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.17%)</title><rect x="1004.6" y="837" width="2.1" height="15.0" fill="rgb(229,122,38)" rx="2" ry="2" />
<text  x="1007.64" y="847.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.09%)</title><rect x="165.0" y="1253" width="1.0" height="15.0" fill="rgb(246,17,51)" rx="2" ry="2" />
<text  x="167.97" y="1263.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="339.2" y="1397" width="1.0" height="15.0" fill="rgb(222,172,36)" rx="2" ry="2" />
<text  x="342.18" y="1407.5" ></text>
</g>
<g >
<title>psi_group_change (2 samples, 0.17%)</title><rect x="1076.6" y="1381" width="2.0" height="15.0" fill="rgb(229,26,1)" rx="2" ry="2" />
<text  x="1079.56" y="1391.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.09%)</title><rect x="310.8" y="1301" width="1.0" height="15.0" fill="rgb(237,109,29)" rx="2" ry="2" />
<text  x="313.82" y="1311.5" ></text>
</g>
<g >
<title>__activate_page.part.0 (1 samples, 0.09%)</title><rect x="221.7" y="1157" width="1.0" height="15.0" fill="rgb(226,49,41)" rx="2" ry="2" />
<text  x="224.69" y="1167.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (78 samples, 6.70%)</title><rect x="80.9" y="1365" width="79.0" height="15.0" fill="rgb(250,165,36)" rx="2" ry="2" />
<text  x="83.90" y="1375.5" >perf_even..</text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.09%)</title><rect x="29.2" y="1429" width="1.1" height="15.0" fill="rgb(247,47,51)" rx="2" ry="2" />
<text  x="32.24" y="1439.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (25 samples, 2.15%)</title><rect x="251.1" y="1461" width="25.3" height="15.0" fill="rgb(232,96,34)" rx="2" ry="2" />
<text  x="254.06" y="1471.5" >N..</text>
</g>
<g >
<title>wait_for (2 samples, 0.17%)</title><rect x="75.8" y="1429" width="2.1" height="15.0" fill="rgb(253,70,15)" rx="2" ry="2" />
<text  x="78.84" y="1439.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::cgroup2_quota (1 samples, 0.09%)</title><rect x="1005.7" y="277" width="1.0" height="15.0" fill="rgb(227,75,3)" rx="2" ry="2" />
<text  x="1008.66" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.09%)</title><rect x="311.8" y="1317" width="1.0" height="15.0" fill="rgb(228,75,51)" rx="2" ry="2" />
<text  x="314.84" y="1327.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (97 samples, 8.33%)</title><rect x="867.9" y="1525" width="98.3" height="15.0" fill="rgb(246,196,31)" rx="2" ry="2" />
<text  x="870.91" y="1535.5" >asm_exc_pag..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 1.12%)</title><rect x="1075.5" y="1541" width="13.2" height="15.0" fill="rgb(218,15,12)" rx="2" ry="2" />
<text  x="1078.55" y="1551.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.09%)</title><rect x="1005.7" y="85" width="1.0" height="15.0" fill="rgb(231,212,13)" rx="2" ry="2" />
<text  x="1008.66" y="95.5" ></text>
</g>
<g >
<title>_find_first_bit (1 samples, 0.09%)</title><rect x="25.2" y="1301" width="1.0" height="15.0" fill="rgb(205,11,7)" rx="2" ry="2" />
<text  x="28.19" y="1311.5" ></text>
</g>
<g >
<title>std::fs::File::open (1 samples, 0.09%)</title><rect x="1005.7" y="261" width="1.0" height="15.0" fill="rgb(241,10,46)" rx="2" ry="2" />
<text  x="1008.66" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26 samples, 2.23%)</title><rect x="281.5" y="1365" width="26.3" height="15.0" fill="rgb(234,10,54)" rx="2" ry="2" />
<text  x="284.45" y="1375.5" >e..</text>
</g>
<g >
<title>__switch_to (1 samples, 0.09%)</title><rect x="19.1" y="1541" width="1.0" height="15.0" fill="rgb(222,44,52)" rx="2" ry="2" />
<text  x="22.12" y="1551.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.09%)</title><rect x="221.7" y="1269" width="1.0" height="15.0" fill="rgb(209,133,27)" rx="2" ry="2" />
<text  x="224.69" y="1279.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.09%)</title><rect x="984.4" y="1445" width="1.0" height="15.0" fill="rgb(236,99,4)" rx="2" ry="2" />
<text  x="987.39" y="1455.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.09%)</title><rect x="221.7" y="1205" width="1.0" height="15.0" fill="rgb(207,32,33)" rx="2" ry="2" />
<text  x="224.69" y="1215.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (1 samples, 0.09%)</title><rect x="1096.8" y="1285" width="1.0" height="15.0" fill="rgb(251,58,12)" rx="2" ry="2" />
<text  x="1099.82" y="1295.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (2 samples, 0.17%)</title><rect x="998.6" y="1429" width="2.0" height="15.0" fill="rgb(208,168,1)" rx="2" ry="2" />
<text  x="1001.57" y="1439.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (2 samples, 0.17%)</title><rect x="434.4" y="1381" width="2.0" height="15.0" fill="rgb(220,64,43)" rx="2" ry="2" />
<text  x="437.39" y="1391.5" ></text>
</g>
<g >
<title>find_busiest_group (2 samples, 0.17%)</title><rect x="1165.7" y="1253" width="2.0" height="15.0" fill="rgb(245,143,23)" rx="2" ry="2" />
<text  x="1168.69" y="1263.5" ></text>
</g>
<g >
<title>_rl_set_screen_size (1 samples, 0.09%)</title><rect x="75.8" y="1397" width="1.0" height="15.0" fill="rgb(221,176,8)" rx="2" ry="2" />
<text  x="78.84" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1005.7" y="117" width="1.0" height="15.0" fill="rgb(250,191,2)" rx="2" ry="2" />
<text  x="1008.66" y="127.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.09%)</title><rect x="221.7" y="1285" width="1.0" height="15.0" fill="rgb(217,71,32)" rx="2" ry="2" />
<text  x="224.69" y="1295.5" ></text>
</g>
<g >
<title>down_write_killable (25 samples, 2.15%)</title><rect x="251.1" y="1333" width="25.3" height="15.0" fill="rgb(253,20,32)" rx="2" ry="2" />
<text  x="254.06" y="1343.5" >d..</text>
</g>
<g >
<title>lind_read (125 samples, 10.73%)</title><rect x="309.8" y="1477" width="126.6" height="15.0" fill="rgb(222,26,37)" rx="2" ry="2" />
<text  x="312.81" y="1487.5" >lind_read</text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.09%)</title><rect x="1045.2" y="1365" width="1.0" height="15.0" fill="rgb(211,0,17)" rx="2" ry="2" />
<text  x="1048.16" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (68 samples, 5.84%)</title><rect x="365.5" y="1333" width="68.9" height="15.0" fill="rgb(234,59,25)" rx="2" ry="2" />
<text  x="368.52" y="1343.5" >[libc.s..</text>
</g>
<g >
<title>sched_clock (1 samples, 0.09%)</title><rect x="66.7" y="1413" width="1.0" height="15.0" fill="rgb(208,17,50)" rx="2" ry="2" />
<text  x="69.72" y="1423.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.09%)</title><rect x="937.8" y="1397" width="1.0" height="15.0" fill="rgb(252,42,44)" rx="2" ry="2" />
<text  x="940.79" y="1407.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (26 samples, 2.23%)</title><rect x="281.5" y="1301" width="26.3" height="15.0" fill="rgb(250,127,34)" rx="2" ry="2" />
<text  x="284.45" y="1311.5" >v..</text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="1004.6" y="1061" width="2.1" height="15.0" fill="rgb(239,14,17)" rx="2" ry="2" />
<text  x="1007.64" y="1071.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8 samples, 0.69%)</title><rect x="32.3" y="1429" width="8.1" height="15.0" fill="rgb(207,94,20)" rx="2" ry="2" />
<text  x="35.28" y="1439.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (72 samples, 6.18%)</title><rect x="361.5" y="1365" width="72.9" height="15.0" fill="rgb(220,6,39)" rx="2" ry="2" />
<text  x="364.47" y="1375.5" >ringbuf:..</text>
</g>
<g >
<title>do_sched_yield (1 samples, 0.09%)</title><rect x="27.2" y="1493" width="1.0" height="15.0" fill="rgb(242,214,2)" rx="2" ry="2" />
<text  x="30.22" y="1503.5" ></text>
</g>
<g >
<title>cpu_startup_entry (65 samples, 5.58%)</title><rect x="1090.7" y="1509" width="65.9" height="15.0" fill="rgb(252,20,50)" rx="2" ry="2" />
<text  x="1093.74" y="1519.5" >cpu_sta..</text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.09%)</title><rect x="1159.6" y="1205" width="1.0" height="15.0" fill="rgb(213,39,14)" rx="2" ry="2" />
<text  x="1162.61" y="1215.5" ></text>
</g>
<g >
<title>ksys_lseek (2 samples, 0.17%)</title><rect x="330.1" y="1317" width="2.0" height="15.0" fill="rgb(216,133,46)" rx="2" ry="2" />
<text  x="333.07" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (1 samples, 0.09%)</title><rect x="1075.5" y="1509" width="1.1" height="15.0" fill="rgb(242,95,9)" rx="2" ry="2" />
<text  x="1078.55" y="1519.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.09%)</title><rect x="23.2" y="1493" width="1.0" height="15.0" fill="rgb(220,8,18)" rx="2" ry="2" />
<text  x="26.17" y="1503.5" ></text>
</g>
<g >
<title>__page_cache_alloc (1 samples, 0.09%)</title><rect x="161.9" y="1141" width="1.0" height="15.0" fill="rgb(229,148,24)" rx="2" ry="2" />
<text  x="164.93" y="1151.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::_open (1 samples, 0.09%)</title><rect x="1005.7" y="229" width="1.0" height="15.0" fill="rgb(214,192,0)" rx="2" ry="2" />
<text  x="1008.66" y="239.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (9 samples, 0.77%)</title><rect x="171.0" y="1445" width="9.2" height="15.0" fill="rgb(222,56,53)" rx="2" ry="2" />
<text  x="174.05" y="1455.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3 samples, 0.26%)</title><rect x="1095.8" y="1397" width="3.0" height="15.0" fill="rgb(229,178,38)" rx="2" ry="2" />
<text  x="1098.80" y="1407.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.09%)</title><rect x="1004.6" y="229" width="1.1" height="15.0" fill="rgb(226,67,41)" rx="2" ry="2" />
<text  x="1007.64" y="239.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.09%)</title><rect x="29.2" y="1477" width="1.1" height="15.0" fill="rgb(245,140,12)" rx="2" ry="2" />
<text  x="32.24" y="1487.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.09%)</title><rect x="160.9" y="1269" width="1.0" height="15.0" fill="rgb(218,186,23)" rx="2" ry="2" />
<text  x="163.92" y="1279.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.09%)</title><rect x="164.0" y="1157" width="1.0" height="15.0" fill="rgb(211,36,4)" rx="2" ry="2" />
<text  x="166.96" y="1167.5" ></text>
</g>
<g >
<title>kernfs_seq_show (1 samples, 0.09%)</title><rect x="1084.7" y="1413" width="1.0" height="15.0" fill="rgb(225,168,17)" rx="2" ry="2" />
<text  x="1087.66" y="1423.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="1079.6" y="1397" width="1.0" height="15.0" fill="rgb(206,223,53)" rx="2" ry="2" />
<text  x="1082.60" y="1407.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 0.09%)</title><rect x="73.8" y="1509" width="1.0" height="15.0" fill="rgb(243,93,46)" rx="2" ry="2" />
<text  x="76.81" y="1519.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.09%)</title><rect x="37.3" y="1237" width="1.1" height="15.0" fill="rgb(233,80,33)" rx="2" ry="2" />
<text  x="40.35" y="1247.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.09%)</title><rect x="221.7" y="1253" width="1.0" height="15.0" fill="rgb(242,14,17)" rx="2" ry="2" />
<text  x="224.69" y="1263.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (7 samples, 0.60%)</title><rect x="646.1" y="1365" width="7.1" height="15.0" fill="rgb(225,37,5)" rx="2" ry="2" />
<text  x="649.09" y="1375.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.09%)</title><rect x="1159.6" y="1189" width="1.0" height="15.0" fill="rgb(249,139,0)" rx="2" ry="2" />
<text  x="1162.61" y="1199.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (6 samples, 0.52%)</title><rect x="32.3" y="1365" width="6.1" height="15.0" fill="rgb(216,158,10)" rx="2" ry="2" />
<text  x="35.28" y="1375.5" ></text>
</g>
<g >
<title>scsi_complete (1 samples, 0.09%)</title><rect x="1091.8" y="1333" width="1.0" height="15.0" fill="rgb(236,143,44)" rx="2" ry="2" />
<text  x="1094.75" y="1343.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::FS_METADATA::{{closure}} (2 samples, 0.17%)</title><rect x="1004.6" y="1221" width="2.1" height="15.0" fill="rgb(208,147,33)" rx="2" ry="2" />
<text  x="1007.64" y="1231.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (149 samples, 12.79%)</title><rect x="469.8" y="1397" width="151.0" height="15.0" fill="rgb(221,157,24)" rx="2" ry="2" />
<text  x="472.85" y="1407.5" >ringbuf::producer::..</text>
</g>
<g >
<title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="1001.6" y="1109" width="1.0" height="15.0" fill="rgb(228,108,4)" rx="2" ry="2" />
<text  x="1004.61" y="1119.5" ></text>
</g>
<g >
<title>cgroup_seqfile_show (3 samples, 0.26%)</title><rect x="24.2" y="1397" width="3.0" height="15.0" fill="rgb(248,176,40)" rx="2" ry="2" />
<text  x="27.18" y="1407.5" ></text>
</g>
<g >
<title>[anon] (14 samples, 1.20%)</title><rect x="166.0" y="1541" width="14.2" height="15.0" fill="rgb(239,136,29)" rx="2" ry="2" />
<text  x="168.98" y="1551.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (4 samples, 0.34%)</title><rect x="981.3" y="1525" width="4.1" height="15.0" fill="rgb(233,216,0)" rx="2" ry="2" />
<text  x="984.35" y="1535.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.09%)</title><rect x="162.9" y="1141" width="1.1" height="15.0" fill="rgb(205,215,7)" rx="2" ry="2" />
<text  x="165.94" y="1151.5" ></text>
</g>
<g >
<title>generic_file_read_iter (4 samples, 0.34%)</title><rect x="323.0" y="1173" width="4.0" height="15.0" fill="rgb(210,146,4)" rx="2" ry="2" />
<text  x="325.98" y="1183.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_irqsafe (2 samples, 0.17%)</title><rect x="25.2" y="1333" width="2.0" height="15.0" fill="rgb(227,208,1)" rx="2" ry="2" />
<text  x="28.19" y="1343.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.17%)</title><rect x="1004.6" y="1029" width="2.1" height="15.0" fill="rgb(233,149,26)" rx="2" ry="2" />
<text  x="1007.64" y="1039.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.09%)</title><rect x="21.1" y="1477" width="1.1" height="15.0" fill="rgb(253,221,40)" rx="2" ry="2" />
<text  x="24.14" y="1487.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (44 samples, 3.78%)</title><rect x="30.3" y="1541" width="44.5" height="15.0" fill="rgb(237,1,50)" rx="2" ry="2" />
<text  x="33.26" y="1551.5" >seco..</text>
</g>
<g >
<title>&lt;dashmap::iter::Iter&lt;K,V,S,M&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="1001.6" y="1205" width="2.0" height="15.0" fill="rgb(230,131,39)" rx="2" ry="2" />
<text  x="1004.61" y="1215.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="77.9" y="1541" width="1.0" height="15.0" fill="rgb(254,25,17)" rx="2" ry="2" />
<text  x="80.86" y="1551.5" ></text>
</g>
<g >
<title>profile_tick (1 samples, 0.09%)</title><rect x="1160.6" y="1253" width="1.0" height="15.0" fill="rgb(226,11,32)" rx="2" ry="2" />
<text  x="1163.63" y="1263.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="1004.6" y="533" width="2.1" height="15.0" fill="rgb(210,191,7)" rx="2" ry="2" />
<text  x="1007.64" y="543.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.09%)</title><rect x="190.3" y="1141" width="1.0" height="15.0" fill="rgb(235,33,51)" rx="2" ry="2" />
<text  x="193.29" y="1151.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::initialize (2 samples, 0.17%)</title><rect x="1004.6" y="1365" width="2.1" height="15.0" fill="rgb(231,190,50)" rx="2" ry="2" />
<text  x="1007.64" y="1375.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.09%)</title><rect x="464.8" y="1349" width="1.0" height="15.0" fill="rgb(208,197,50)" rx="2" ry="2" />
<text  x="467.78" y="1359.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.09%)</title><rect x="1002.6" y="1189" width="1.0" height="15.0" fill="rgb(244,154,4)" rx="2" ry="2" />
<text  x="1005.62" y="1199.5" ></text>
</g>
<g >
<title>__x64_sys_write (4 samples, 0.34%)</title><rect x="161.9" y="1365" width="4.1" height="15.0" fill="rgb(215,139,22)" rx="2" ry="2" />
<text  x="164.93" y="1375.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="76.8" y="1365" width="1.1" height="15.0" fill="rgb(219,55,31)" rx="2" ry="2" />
<text  x="79.85" y="1375.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="308.8" y="1461" width="1.0" height="15.0" fill="rgb(241,117,54)" rx="2" ry="2" />
<text  x="311.80" y="1471.5" ></text>
</g>
<g >
<title>handle_mm_fault (87 samples, 7.47%)</title><rect x="872.0" y="1477" width="88.1" height="15.0" fill="rgb(247,105,39)" rx="2" ry="2" />
<text  x="874.96" y="1487.5" >handle_mm_..</text>
</g>
<g >
<title>rwsem_optimistic_spin (1 samples, 0.09%)</title><rect x="250.1" y="1317" width="1.0" height="15.0" fill="rgb(229,224,19)" rx="2" ry="2" />
<text  x="253.05" y="1327.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="190.3" y="1333" width="1.0" height="15.0" fill="rgb(213,150,44)" rx="2" ry="2" />
<text  x="193.29" y="1343.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.09%)</title><rect x="1182.9" y="1365" width="1.0" height="15.0" fill="rgb(249,159,45)" rx="2" ry="2" />
<text  x="1185.91" y="1375.5" ></text>
</g>
<g >
<title>&lt;std::sync::lazy_lock::LazyLock&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.17%)</title><rect x="1004.6" y="1429" width="2.1" height="15.0" fill="rgb(243,134,25)" rx="2" ry="2" />
<text  x="1007.64" y="1439.5" ></text>
</g>
<g >
<title>[libc.so.6] (3 samples, 0.26%)</title><rect x="74.8" y="1509" width="3.1" height="15.0" fill="rgb(232,74,16)" rx="2" ry="2" />
<text  x="77.82" y="1519.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.09%)</title><rect x="1078.6" y="1477" width="1.0" height="15.0" fill="rgb(220,224,13)" rx="2" ry="2" />
<text  x="1081.58" y="1487.5" ></text>
</g>
<g >
<title>unmap_page_range (26 samples, 2.23%)</title><rect x="281.5" y="1189" width="26.3" height="15.0" fill="rgb(229,187,7)" rx="2" ry="2" />
<text  x="284.45" y="1199.5" >u..</text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.09%)</title><rect x="31.3" y="1349" width="1.0" height="15.0" fill="rgb(248,67,24)" rx="2" ry="2" />
<text  x="34.27" y="1359.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="337.2" y="1397" width="1.0" height="15.0" fill="rgb(208,162,44)" rx="2" ry="2" />
<text  x="340.16" y="1407.5" ></text>
</g>
<g >
<title>nr_blockdev_pages (1 samples, 0.09%)</title><rect x="1086.7" y="1381" width="1.0" height="15.0" fill="rgb(235,109,19)" rx="2" ry="2" />
<text  x="1089.69" y="1391.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.17%)</title><rect x="981.3" y="1317" width="2.1" height="15.0" fill="rgb(220,192,30)" rx="2" ry="2" />
<text  x="984.35" y="1327.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (1 samples, 0.09%)</title><rect x="75.8" y="1205" width="1.0" height="15.0" fill="rgb(229,106,9)" rx="2" ry="2" />
<text  x="78.84" y="1215.5" ></text>
</g>
<g >
<title>down_write_killable (27 samples, 2.32%)</title><rect x="222.7" y="1317" width="27.4" height="15.0" fill="rgb(230,17,46)" rx="2" ry="2" />
<text  x="225.70" y="1327.5" >d..</text>
</g>
<g >
<title>__schedule (1 samples, 0.09%)</title><rect x="27.2" y="1461" width="1.0" height="15.0" fill="rgb(215,12,24)" rx="2" ry="2" />
<text  x="30.22" y="1471.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.09%)</title><rect x="1181.9" y="1333" width="1.0" height="15.0" fill="rgb(205,113,0)" rx="2" ry="2" />
<text  x="1184.90" y="1343.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (2 samples, 0.17%)</title><rect x="1004.6" y="373" width="2.1" height="15.0" fill="rgb(205,24,49)" rx="2" ry="2" />
<text  x="1007.64" y="383.5" ></text>
</g>
<g >
<title>poll_idle (1 samples, 0.09%)</title><rect x="1178.9" y="1365" width="1.0" height="15.0" fill="rgb(252,74,13)" rx="2" ry="2" />
<text  x="1181.86" y="1375.5" ></text>
</g>
<g >
<title>ovl_write_iter (4 samples, 0.34%)</title><rect x="161.9" y="1301" width="4.1" height="15.0" fill="rgb(233,186,1)" rx="2" ry="2" />
<text  x="164.93" y="1311.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_enum_map (2 samples, 0.17%)</title><rect x="1004.6" y="773" width="2.1" height="15.0" fill="rgb(246,167,24)" rx="2" ry="2" />
<text  x="1007.64" y="783.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (3 samples, 0.26%)</title><rect x="981.3" y="1509" width="3.1" height="15.0" fill="rgb(228,165,0)" rx="2" ry="2" />
<text  x="984.35" y="1519.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 6.87%)</title><rect x="79.9" y="1493" width="81.0" height="15.0" fill="rgb(206,225,12)" rx="2" ry="2" />
<text  x="82.89" y="1503.5" >perf_evse..</text>
</g>
<g >
<title>__x64_sys_mmap (26 samples, 2.23%)</title><rect x="281.5" y="1333" width="26.3" height="15.0" fill="rgb(234,106,8)" rx="2" ry="2" />
<text  x="284.45" y="1343.5" >_..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (24 samples, 2.06%)</title><rect x="596.5" y="1381" width="24.3" height="15.0" fill="rgb(223,75,11)" rx="2" ry="2" />
<text  x="599.45" y="1391.5" >r..</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (9 samples, 0.77%)</title><rect x="171.0" y="1509" width="9.2" height="15.0" fill="rgb(208,175,7)" rx="2" ry="2" />
<text  x="174.05" y="1519.5" ></text>
</g>
<g >
<title>do_idle (65 samples, 5.58%)</title><rect x="1090.7" y="1493" width="65.9" height="15.0" fill="rgb(218,128,47)" rx="2" ry="2" />
<text  x="1093.74" y="1503.5" >do_idle</text>
</g>
<g >
<title>new_sync_read (6 samples, 0.52%)</title><rect x="322.0" y="1269" width="6.0" height="15.0" fill="rgb(212,203,15)" rx="2" ry="2" />
<text  x="324.97" y="1279.5" ></text>
</g>
<g >
<title>prepare_task_switch (1 samples, 0.09%)</title><rect x="69.8" y="1445" width="1.0" height="15.0" fill="rgb(205,220,14)" rx="2" ry="2" />
<text  x="72.76" y="1455.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (30 samples, 2.58%)</title><rect x="191.3" y="1445" width="30.4" height="15.0" fill="rgb(233,149,48)" rx="2" ry="2" />
<text  x="194.30" y="1455.5" >Ap..</text>
</g>
<g >
<title>std::fs::remove_file (1 samples, 0.09%)</title><rect x="1000.6" y="1429" width="1.0" height="15.0" fill="rgb(221,66,3)" rx="2" ry="2" />
<text  x="1003.59" y="1439.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (29 samples, 2.49%)</title><rect x="221.7" y="1509" width="29.4" height="15.0" fill="rgb(247,169,37)" rx="2" ry="2" />
<text  x="224.69" y="1519.5" >Na..</text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.09%)</title><rect x="1093.8" y="1349" width="1.0" height="15.0" fill="rgb(235,33,33)" rx="2" ry="2" />
<text  x="1096.78" y="1359.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.09%)</title><rect x="37.3" y="1301" width="1.1" height="15.0" fill="rgb(218,172,15)" rx="2" ry="2" />
<text  x="40.35" y="1311.5" ></text>
</g>
<g >
<title>lindrustinit (2 samples, 0.17%)</title><rect x="1004.6" y="1461" width="2.1" height="15.0" fill="rgb(216,188,18)" rx="2" ry="2" />
<text  x="1007.64" y="1471.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="313.9" y="1317" width="1.0" height="15.0" fill="rgb(221,46,33)" rx="2" ry="2" />
<text  x="316.86" y="1327.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (149 samples, 12.79%)</title><rect x="469.8" y="1413" width="151.0" height="15.0" fill="rgb(209,6,8)" rx="2" ry="2" />
<text  x="472.85" y="1423.5" >ringbuf::producer::..</text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (2 samples, 0.17%)</title><rect x="1004.6" y="1125" width="2.1" height="15.0" fill="rgb(220,41,26)" rx="2" ry="2" />
<text  x="1007.64" y="1135.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="75.8" y="1269" width="1.0" height="15.0" fill="rgb(207,0,18)" rx="2" ry="2" />
<text  x="78.84" y="1279.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (1 samples, 0.09%)</title><rect x="164.0" y="1125" width="1.0" height="15.0" fill="rgb(213,192,30)" rx="2" ry="2" />
<text  x="166.96" y="1135.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.09%)</title><rect x="1183.9" y="1413" width="1.0" height="15.0" fill="rgb(244,85,47)" rx="2" ry="2" />
<text  x="1186.92" y="1423.5" ></text>
</g>
<g >
<title>pfn_pte (1 samples, 0.09%)</title><rect x="957.0" y="1429" width="1.1" height="15.0" fill="rgb(210,200,5)" rx="2" ry="2" />
<text  x="960.04" y="1439.5" ></text>
</g>
<g >
<title>NaClSysWrite (323 samples, 27.73%)</title><rect x="436.4" y="1493" width="327.2" height="15.0" fill="rgb(216,203,18)" rx="2" ry="2" />
<text  x="439.42" y="1503.5" >NaClSysWrite</text>
</g>
<g >
<title>dput (1 samples, 0.09%)</title><rect x="1045.2" y="1413" width="1.0" height="15.0" fill="rgb(209,174,48)" rx="2" ry="2" />
<text  x="1048.16" y="1423.5" ></text>
</g>
<g >
<title>__mem_cgroup_flush_stats (1 samples, 0.09%)</title><rect x="160.9" y="1157" width="1.0" height="15.0" fill="rgb(232,153,27)" rx="2" ry="2" />
<text  x="163.92" y="1167.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (2 samples, 0.17%)</title><rect x="1004.6" y="389" width="2.1" height="15.0" fill="rgb(250,220,43)" rx="2" ry="2" />
<text  x="1007.64" y="399.5" ></text>
</g>
<g >
<title>schedule_idle (3 samples, 0.26%)</title><rect x="68.7" y="1477" width="3.1" height="15.0" fill="rgb(219,208,4)" rx="2" ry="2" />
<text  x="71.75" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.09%)</title><rect x="78.9" y="1429" width="1.0" height="15.0" fill="rgb(213,75,25)" rx="2" ry="2" />
<text  x="81.88" y="1439.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.09%)</title><rect x="1087.7" y="1445" width="1.0" height="15.0" fill="rgb(237,197,31)" rx="2" ry="2" />
<text  x="1090.70" y="1455.5" ></text>
</g>
<g >
<title>smp_call_function_single (76 samples, 6.52%)</title><rect x="82.9" y="1317" width="77.0" height="15.0" fill="rgb(216,167,0)" rx="2" ry="2" />
<text  x="85.93" y="1327.5" >smp_call..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (322 samples, 27.64%)</title><rect x="437.4" y="1429" width="326.2" height="15.0" fill="rgb(208,195,5)" rx="2" ry="2" />
<text  x="440.43" y="1439.5" >rustposix::interface::pipe::EmulatedPipe::wr..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="160.9" y="1413" width="1.0" height="15.0" fill="rgb(245,138,41)" rx="2" ry="2" />
<text  x="163.92" y="1423.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (36 samples, 3.09%)</title><rect x="31.3" y="1445" width="36.4" height="15.0" fill="rgb(246,130,20)" rx="2" ry="2" />
<text  x="34.27" y="1455.5" >cpu..</text>
</g>
<g >
<title>psi_task_change (2 samples, 0.17%)</title><rect x="34.3" y="1269" width="2.0" height="15.0" fill="rgb(249,218,49)" rx="2" ry="2" />
<text  x="37.31" y="1279.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.17%)</title><rect x="1004.6" y="677" width="2.1" height="15.0" fill="rgb(210,159,31)" rx="2" ry="2" />
<text  x="1007.64" y="687.5" ></text>
</g>
<g >
<title>pick_next_task (1 samples, 0.09%)</title><rect x="1078.6" y="1413" width="1.0" height="15.0" fill="rgb(241,76,51)" rx="2" ry="2" />
<text  x="1081.58" y="1423.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.09%)</title><rect x="39.4" y="1365" width="1.0" height="15.0" fill="rgb(206,72,42)" rx="2" ry="2" />
<text  x="42.37" y="1375.5" ></text>
</g>
<g >
<title>proc_reg_read_iter (2 samples, 0.17%)</title><rect x="1085.7" y="1445" width="2.0" height="15.0" fill="rgb(230,65,45)" rx="2" ry="2" />
<text  x="1088.67" y="1455.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (94 samples, 8.07%)</title><rect x="501.2" y="1365" width="95.3" height="15.0" fill="rgb(253,84,21)" rx="2" ry="2" />
<text  x="504.24" y="1375.5" >ringbuf::pr..</text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.09%)</title><rect x="1078.6" y="1397" width="1.0" height="15.0" fill="rgb(215,81,4)" rx="2" ry="2" />
<text  x="1081.58" y="1407.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.09%)</title><rect x="76.8" y="1333" width="1.1" height="15.0" fill="rgb(232,22,32)" rx="2" ry="2" />
<text  x="79.85" y="1343.5" ></text>
</g>
<g >
<title>__libc_start_main (3 samples, 0.26%)</title><rect x="74.8" y="1525" width="3.1" height="15.0" fill="rgb(222,226,20)" rx="2" ry="2" />
<text  x="77.82" y="1535.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="1091.8" y="1381" width="1.0" height="15.0" fill="rgb(225,90,21)" rx="2" ry="2" />
<text  x="1094.75" y="1391.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (12 samples, 1.03%)</title><rect x="316.9" y="1397" width="12.2" height="15.0" fill="rgb(206,114,51)" rx="2" ry="2" />
<text  x="319.90" y="1407.5" ></text>
</g>
<g >
<title>seq_read_iter (2 samples, 0.17%)</title><rect x="1083.6" y="1429" width="2.1" height="15.0" fill="rgb(239,203,13)" rx="2" ry="2" />
<text  x="1086.65" y="1439.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (8 samples, 0.69%)</title><rect x="297.7" y="1077" width="8.1" height="15.0" fill="rgb(219,97,1)" rx="2" ry="2" />
<text  x="300.66" y="1087.5" ></text>
</g>
<g >
<title>NaClSysExit (25 samples, 2.15%)</title><rect x="251.1" y="1493" width="25.3" height="15.0" fill="rgb(212,79,49)" rx="2" ry="2" />
<text  x="254.06" y="1503.5" >N..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (72 samples, 6.18%)</title><rect x="361.5" y="1349" width="72.9" height="15.0" fill="rgb(224,145,23)" rx="2" ry="2" />
<text  x="364.47" y="1359.5" >core::in..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (1 samples, 0.09%)</title><rect x="311.8" y="1301" width="1.0" height="15.0" fill="rgb(221,164,45)" rx="2" ry="2" />
<text  x="314.84" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1 samples, 0.09%)</title><rect x="74.8" y="1333" width="1.0" height="15.0" fill="rgb(217,169,20)" rx="2" ry="2" />
<text  x="77.82" y="1343.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.09%)</title><rect x="321.0" y="1285" width="1.0" height="15.0" fill="rgb(253,83,50)" rx="2" ry="2" />
<text  x="323.95" y="1295.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Seek&gt;::seek (4 samples, 0.34%)</title><rect x="329.1" y="1413" width="4.0" height="15.0" fill="rgb(207,225,31)" rx="2" ry="2" />
<text  x="332.06" y="1423.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.17%)</title><rect x="71.8" y="1477" width="2.0" height="15.0" fill="rgb(217,52,2)" rx="2" ry="2" />
<text  x="74.79" y="1487.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (1 samples, 0.09%)</title><rect x="1000.6" y="1445" width="1.0" height="15.0" fill="rgb(235,163,35)" rx="2" ry="2" />
<text  x="1003.59" y="1455.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 0.17%)</title><rect x="998.6" y="1365" width="2.0" height="15.0" fill="rgb(242,24,16)" rx="2" ry="2" />
<text  x="1001.57" y="1375.5" ></text>
</g>
<g >
<title>NaClValidateCode (4 samples, 0.34%)</title><rect x="276.4" y="1397" width="4.0" height="15.0" fill="rgb(218,99,10)" rx="2" ry="2" />
<text  x="279.39" y="1407.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (69 samples, 5.92%)</title><rect x="89.0" y="1205" width="69.9" height="15.0" fill="rgb(213,86,20)" rx="2" ry="2" />
<text  x="92.00" y="1215.5" >intel_p..</text>
</g>
<g >
<title>find_lock_entries (1 samples, 0.09%)</title><rect x="1045.2" y="1285" width="1.0" height="15.0" fill="rgb(254,151,25)" rx="2" ry="2" />
<text  x="1048.16" y="1295.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (13 samples, 1.12%)</title><rect x="488.1" y="1349" width="13.1" height="15.0" fill="rgb(250,39,18)" rx="2" ry="2" />
<text  x="491.08" y="1359.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.09%)</title><rect x="436.4" y="1365" width="1.0" height="15.0" fill="rgb(221,103,34)" rx="2" ry="2" />
<text  x="439.42" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="250.1" y="1413" width="1.0" height="15.0" fill="rgb(223,125,24)" rx="2" ry="2" />
<text  x="253.05" y="1423.5" ></text>
</g>
<g >
<title>vfs_statx (1 samples, 0.09%)</title><rect x="1082.6" y="1477" width="1.0" height="15.0" fill="rgb(228,208,27)" rx="2" ry="2" />
<text  x="1085.64" y="1487.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="1169.7" y="1317" width="1.1" height="15.0" fill="rgb(234,150,49)" rx="2" ry="2" />
<text  x="1172.74" y="1327.5" ></text>
</g>
<g >
<title>enqueue_task (4 samples, 0.34%)</title><rect x="32.3" y="1285" width="4.0" height="15.0" fill="rgb(234,224,27)" rx="2" ry="2" />
<text  x="35.28" y="1295.5" ></text>
</g>
<g >
<title>run_rebalance_domains (7 samples, 0.60%)</title><rect x="1162.7" y="1301" width="7.0" height="15.0" fill="rgb(240,54,40)" rx="2" ry="2" />
<text  x="1165.65" y="1311.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="984.4" y="1381" width="1.0" height="15.0" fill="rgb(244,8,41)" rx="2" ry="2" />
<text  x="987.39" y="1391.5" ></text>
</g>
<g >
<title>record__mmap_read_all (4 samples, 0.34%)</title><rect x="161.9" y="1509" width="4.1" height="15.0" fill="rgb(239,211,8)" rx="2" ry="2" />
<text  x="164.93" y="1519.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.09%)</title><rect x="37.3" y="1317" width="1.1" height="15.0" fill="rgb(240,24,11)" rx="2" ry="2" />
<text  x="40.35" y="1327.5" ></text>
</g>
<g >
<title>do_iter_read (5 samples, 0.43%)</title><rect x="323.0" y="1221" width="5.0" height="15.0" fill="rgb(232,183,49)" rx="2" ry="2" />
<text  x="325.98" y="1231.5" ></text>
</g>
<g >
<title>read (12 samples, 1.03%)</title><rect x="316.9" y="1365" width="12.2" height="15.0" fill="rgb(223,171,14)" rx="2" ry="2" />
<text  x="319.90" y="1375.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.09%)</title><rect x="1079.6" y="1365" width="1.0" height="15.0" fill="rgb(223,13,15)" rx="2" ry="2" />
<text  x="1082.60" y="1375.5" ></text>
</g>
<g >
<title>NaClSysFork (4 samples, 0.34%)</title><rect x="276.4" y="1493" width="4.0" height="15.0" fill="rgb(236,221,20)" rx="2" ry="2" />
<text  x="279.39" y="1503.5" ></text>
</g>
<g >
<title>alloc_bprm (1 samples, 0.09%)</title><rect x="78.9" y="1397" width="1.0" height="15.0" fill="rgb(218,135,15)" rx="2" ry="2" />
<text  x="81.88" y="1407.5" ></text>
</g>
<g >
<title>lookup_positive_unlocked (1 samples, 0.09%)</title><rect x="1000.6" y="1253" width="1.0" height="15.0" fill="rgb(233,21,41)" rx="2" ry="2" />
<text  x="1003.59" y="1263.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.09%)</title><rect x="165.0" y="1237" width="1.0" height="15.0" fill="rgb(223,76,35)" rx="2" ry="2" />
<text  x="167.97" y="1247.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="75.8" y="1285" width="1.0" height="15.0" fill="rgb(224,182,39)" rx="2" ry="2" />
<text  x="78.84" y="1295.5" ></text>
</g>
<g >
<title>cpumask_next_wrap (1 samples, 0.09%)</title><rect x="1164.7" y="1285" width="1.0" height="15.0" fill="rgb(216,85,33)" rx="2" ry="2" />
<text  x="1167.68" y="1295.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.09%)</title><rect x="27.2" y="1429" width="1.0" height="15.0" fill="rgb(254,124,28)" rx="2" ry="2" />
<text  x="30.22" y="1439.5" ></text>
</g>
<g >
<title>event_function (73 samples, 6.27%)</title><rect x="85.0" y="1269" width="73.9" height="15.0" fill="rgb(246,198,52)" rx="2" ry="2" />
<text  x="87.95" y="1279.5" >event_fu..</text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (2 samples, 0.17%)</title><rect x="1004.6" y="549" width="2.1" height="15.0" fill="rgb(209,142,33)" rx="2" ry="2" />
<text  x="1007.64" y="559.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_locked (1 samples, 0.09%)</title><rect x="160.9" y="1125" width="1.0" height="15.0" fill="rgb(252,185,43)" rx="2" ry="2" />
<text  x="163.92" y="1135.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.09%)</title><rect x="311.8" y="1349" width="1.0" height="15.0" fill="rgb(206,104,15)" rx="2" ry="2" />
<text  x="314.84" y="1359.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.09%)</title><rect x="351.3" y="1381" width="1.1" height="15.0" fill="rgb(246,112,33)" rx="2" ry="2" />
<text  x="354.34" y="1391.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.09%)</title><rect x="38.4" y="1349" width="1.0" height="15.0" fill="rgb(251,142,30)" rx="2" ry="2" />
<text  x="41.36" y="1359.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.09%)</title><rect x="1079.6" y="1317" width="1.0" height="15.0" fill="rgb(219,34,17)" rx="2" ry="2" />
<text  x="1082.60" y="1327.5" ></text>
</g>
<g >
<title>free_swap_cache (1 samples, 0.09%)</title><rect x="305.8" y="1125" width="1.0" height="15.0" fill="rgb(230,188,6)" rx="2" ry="2" />
<text  x="308.76" y="1135.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.09%)</title><rect x="1075.5" y="1413" width="1.1" height="15.0" fill="rgb(250,75,51)" rx="2" ry="2" />
<text  x="1078.55" y="1423.5" ></text>
</g>
<g >
<title>ovl_read_iter (6 samples, 0.52%)</title><rect x="322.0" y="1253" width="6.0" height="15.0" fill="rgb(245,170,8)" rx="2" ry="2" />
<text  x="324.97" y="1263.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.09%)</title><rect x="1159.6" y="1285" width="1.0" height="15.0" fill="rgb(225,177,44)" rx="2" ry="2" />
<text  x="1162.61" y="1295.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.09%)</title><rect x="190.3" y="1205" width="1.0" height="15.0" fill="rgb(206,142,50)" rx="2" ry="2" />
<text  x="193.29" y="1215.5" ></text>
</g>
<g >
<title>shmem_add_to_page_cache (1 samples, 0.09%)</title><rect x="982.4" y="1221" width="1.0" height="15.0" fill="rgb(224,35,26)" rx="2" ry="2" />
<text  x="985.36" y="1231.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.09%)</title><rect x="956.0" y="1429" width="1.0" height="15.0" fill="rgb(208,136,4)" rx="2" ry="2" />
<text  x="959.03" y="1439.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (1 samples, 0.09%)</title><rect x="1184.9" y="1413" width="1.0" height="15.0" fill="rgb(254,216,53)" rx="2" ry="2" />
<text  x="1187.94" y="1423.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.09%)</title><rect x="73.8" y="1429" width="1.0" height="15.0" fill="rgb(238,206,12)" rx="2" ry="2" />
<text  x="76.81" y="1439.5" ></text>
</g>
<g >
<title>do_iter_write (4 samples, 0.34%)</title><rect x="161.9" y="1269" width="4.1" height="15.0" fill="rgb(215,162,11)" rx="2" ry="2" />
<text  x="164.93" y="1279.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.09%)</title><rect x="76.8" y="1317" width="1.1" height="15.0" fill="rgb(236,102,33)" rx="2" ry="2" />
<text  x="79.85" y="1327.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (37 samples, 3.18%)</title><rect x="1006.7" y="1541" width="37.4" height="15.0" fill="rgb(243,210,26)" rx="2" ry="2" />
<text  x="1009.67" y="1551.5" >asm..</text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (3 samples, 0.26%)</title><rect x="1001.6" y="1285" width="3.0" height="15.0" fill="rgb(207,58,35)" rx="2" ry="2" />
<text  x="1004.61" y="1295.5" ></text>
</g>
<g >
<title>x86_pmu_enable (70 samples, 6.01%)</title><rect x="88.0" y="1221" width="70.9" height="15.0" fill="rgb(229,215,41)" rx="2" ry="2" />
<text  x="90.99" y="1231.5" >x86_pmu_..</text>
</g>
<g >
<title>ovl_file_accessed.part.0 (1 samples, 0.09%)</title><rect x="322.0" y="1237" width="1.0" height="15.0" fill="rgb(233,103,3)" rx="2" ry="2" />
<text  x="324.97" y="1247.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (1 samples, 0.09%)</title><rect x="78.9" y="1509" width="1.0" height="15.0" fill="rgb(250,204,38)" rx="2" ry="2" />
<text  x="81.88" y="1519.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (2 samples, 0.17%)</title><rect x="310.8" y="1413" width="2.0" height="15.0" fill="rgb(214,170,27)" rx="2" ry="2" />
<text  x="313.82" y="1423.5" ></text>
</g>
<g >
<title>rwsem_down_read_slowpath (1 samples, 0.09%)</title><rect x="983.4" y="1333" width="1.0" height="15.0" fill="rgb(235,219,22)" rx="2" ry="2" />
<text  x="986.37" y="1343.5" ></text>
</g>
<g >
<title>unlink (1 samples, 0.09%)</title><rect x="1000.6" y="1397" width="1.0" height="15.0" fill="rgb(242,80,26)" rx="2" ry="2" />
<text  x="1003.59" y="1407.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="464.8" y="1397" width="1.0" height="15.0" fill="rgb(219,144,15)" rx="2" ry="2" />
<text  x="467.78" y="1407.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="982.4" y="1301" width="1.0" height="15.0" fill="rgb(247,28,38)" rx="2" ry="2" />
<text  x="985.36" y="1311.5" ></text>
</g>
<g >
<title>__mem_cgroup_flush_stats (1 samples, 0.09%)</title><rect x="1084.7" y="1349" width="1.0" height="15.0" fill="rgb(216,184,53)" rx="2" ry="2" />
<text  x="1087.66" y="1359.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (2 samples, 0.17%)</title><rect x="1004.6" y="1237" width="2.1" height="15.0" fill="rgb(205,16,31)" rx="2" ry="2" />
<text  x="1007.64" y="1247.5" ></text>
</g>
<g >
<title>sel_ldr (869 samples, 74.59%)</title><rect x="166.0" y="1557" width="880.2" height="15.0" fill="rgb(220,65,8)" rx="2" ry="2" />
<text  x="168.98" y="1567.5" >sel_ldr</text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.09%)</title><rect x="1159.6" y="1237" width="1.0" height="15.0" fill="rgb(230,150,29)" rx="2" ry="2" />
<text  x="1162.61" y="1247.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (27 samples, 2.32%)</title><rect x="222.7" y="1285" width="27.4" height="15.0" fill="rgb(227,50,6)" rx="2" ry="2" />
<text  x="225.70" y="1295.5" >r..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.09%)</title><rect x="1094.8" y="1349" width="1.0" height="15.0" fill="rgb(250,163,3)" rx="2" ry="2" />
<text  x="1097.79" y="1359.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (2 samples, 0.17%)</title><rect x="310.8" y="1429" width="2.0" height="15.0" fill="rgb(245,133,30)" rx="2" ry="2" />
<text  x="313.82" y="1439.5" ></text>
</g>
<g >
<title>do_epoll_wait (2 samples, 0.17%)</title><rect x="1076.6" y="1493" width="2.0" height="15.0" fill="rgb(230,66,2)" rx="2" ry="2" />
<text  x="1079.56" y="1503.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.09%)</title><rect x="186.2" y="1509" width="1.1" height="15.0" fill="rgb(221,48,5)" rx="2" ry="2" />
<text  x="189.24" y="1519.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.09%)</title><rect x="955.0" y="1381" width="1.0" height="15.0" fill="rgb(212,165,3)" rx="2" ry="2" />
<text  x="958.01" y="1391.5" ></text>
</g>
<g >
<title>__entry_text_start (1 samples, 0.09%)</title><rect x="329.1" y="1365" width="1.0" height="15.0" fill="rgb(247,223,38)" rx="2" ry="2" />
<text  x="332.06" y="1375.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.17%)</title><rect x="954.0" y="1413" width="2.0" height="15.0" fill="rgb(236,152,9)" rx="2" ry="2" />
<text  x="957.00" y="1423.5" ></text>
</g>
<g >
<title>cgroup_seqfile_show (1 samples, 0.09%)</title><rect x="1084.7" y="1397" width="1.0" height="15.0" fill="rgb(243,11,46)" rx="2" ry="2" />
<text  x="1087.66" y="1407.5" ></text>
</g>
<g >
<title>psi_task_switch (2 samples, 0.17%)</title><rect x="1153.5" y="1445" width="2.1" height="15.0" fill="rgb(216,20,17)" rx="2" ry="2" />
<text  x="1156.54" y="1455.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.09%)</title><rect x="310.8" y="1381" width="1.0" height="15.0" fill="rgb(225,188,24)" rx="2" ry="2" />
<text  x="313.82" y="1391.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (12 samples, 1.03%)</title><rect x="888.2" y="1413" width="12.1" height="15.0" fill="rgb(217,223,3)" rx="2" ry="2" />
<text  x="891.16" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_read (5 samples, 0.43%)</title><rect x="1083.6" y="1509" width="5.1" height="15.0" fill="rgb(227,222,0)" rx="2" ry="2" />
<text  x="1086.65" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.17%)</title><rect x="1044.1" y="1541" width="2.1" height="15.0" fill="rgb(235,173,2)" rx="2" ry="2" />
<text  x="1047.15" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (3 samples, 0.26%)</title><rect x="981.3" y="1445" width="3.1" height="15.0" fill="rgb(247,38,22)" rx="2" ry="2" />
<text  x="984.35" y="1455.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="314.9" y="1333" width="1.0" height="15.0" fill="rgb(216,69,21)" rx="2" ry="2" />
<text  x="317.88" y="1343.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (141 samples, 12.10%)</title><rect x="620.8" y="1397" width="142.8" height="15.0" fill="rgb(246,146,5)" rx="2" ry="2" />
<text  x="623.76" y="1407.5" >ringbuf::ring_buff..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="1000.6" y="1381" width="1.0" height="15.0" fill="rgb(226,48,45)" rx="2" ry="2" />
<text  x="1003.59" y="1391.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (1 samples, 0.09%)</title><rect x="1169.7" y="1365" width="1.1" height="15.0" fill="rgb(218,72,23)" rx="2" ry="2" />
<text  x="1172.74" y="1375.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (25 samples, 2.15%)</title><rect x="251.1" y="1477" width="25.3" height="15.0" fill="rgb(218,192,24)" rx="2" ry="2" />
<text  x="254.06" y="1487.5" >N..</text>
</g>
<g >
<title>__x64_sys_sched_yield (1 samples, 0.09%)</title><rect x="27.2" y="1509" width="1.0" height="15.0" fill="rgb(216,220,12)" rx="2" ry="2" />
<text  x="30.22" y="1519.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (323 samples, 27.73%)</title><rect x="436.4" y="1445" width="327.2" height="15.0" fill="rgb(236,126,24)" rx="2" ry="2" />
<text  x="439.42" y="1455.5" >rustposix::safeposix::syscalls::fs_calls::&lt;i..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="309.8" y="1445" width="1.0" height="15.0" fill="rgb(215,56,43)" rx="2" ry="2" />
<text  x="312.81" y="1455.5" ></text>
</g>
<g >
<title>pte_alloc_one (1 samples, 0.09%)</title><rect x="900.3" y="1397" width="1.0" height="15.0" fill="rgb(228,82,10)" rx="2" ry="2" />
<text  x="903.32" y="1407.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (1 samples, 0.09%)</title><rect x="1044.1" y="1365" width="1.1" height="15.0" fill="rgb(209,99,40)" rx="2" ry="2" />
<text  x="1047.15" y="1375.5" ></text>
</g>
<g >
<title>vfs_iter_read (5 samples, 0.43%)</title><rect x="323.0" y="1237" width="5.0" height="15.0" fill="rgb(231,204,32)" rx="2" ry="2" />
<text  x="325.98" y="1247.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (3 samples, 0.26%)</title><rect x="1001.6" y="1429" width="3.0" height="15.0" fill="rgb(244,7,34)" rx="2" ry="2" />
<text  x="1004.61" y="1439.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (3 samples, 0.26%)</title><rect x="981.3" y="1381" width="3.1" height="15.0" fill="rgb(222,30,14)" rx="2" ry="2" />
<text  x="984.35" y="1391.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6 samples, 0.52%)</title><rect x="32.3" y="1381" width="6.1" height="15.0" fill="rgb(220,69,43)" rx="2" ry="2" />
<text  x="35.28" y="1391.5" ></text>
</g>
<g >
<title>filemap_read (4 samples, 0.34%)</title><rect x="323.0" y="1157" width="4.0" height="15.0" fill="rgb(244,211,8)" rx="2" ry="2" />
<text  x="325.98" y="1167.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.09%)</title><rect x="37.3" y="1269" width="1.1" height="15.0" fill="rgb(215,151,17)" rx="2" ry="2" />
<text  x="40.35" y="1279.5" ></text>
</g>
<g >
<title>pmd_val (1 samples, 0.09%)</title><rect x="959.1" y="1445" width="1.0" height="15.0" fill="rgb(220,204,13)" rx="2" ry="2" />
<text  x="962.06" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (58 samples, 4.98%)</title><rect x="1091.8" y="1445" width="58.7" height="15.0" fill="rgb(227,78,52)" rx="2" ry="2" />
<text  x="1094.75" y="1455.5" >cpuidl..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize (2 samples, 0.17%)</title><rect x="1004.6" y="1173" width="2.1" height="15.0" fill="rgb(211,38,44)" rx="2" ry="2" />
<text  x="1007.64" y="1183.5" ></text>
</g>
<g >
<title>enqueue_entity (2 samples, 0.17%)</title><rect x="32.3" y="1253" width="2.0" height="15.0" fill="rgb(240,26,2)" rx="2" ry="2" />
<text  x="35.28" y="1263.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (2 samples, 0.17%)</title><rect x="998.6" y="1445" width="2.0" height="15.0" fill="rgb(211,217,2)" rx="2" ry="2" />
<text  x="1001.57" y="1455.5" ></text>
</g>
<g >
<title>down_write_killable (1 samples, 0.09%)</title><rect x="250.1" y="1349" width="1.0" height="15.0" fill="rgb(248,198,29)" rx="2" ry="2" />
<text  x="253.05" y="1359.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.17%)</title><rect x="1160.6" y="1285" width="2.1" height="15.0" fill="rgb(250,124,28)" rx="2" ry="2" />
<text  x="1163.63" y="1295.5" ></text>
</g>
<g >
<title>ion (4 samples, 0.34%)</title><rect x="161.9" y="1429" width="4.1" height="15.0" fill="rgb(246,167,29)" rx="2" ry="2" />
<text  x="164.93" y="1439.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.09%)</title><rect x="37.3" y="1285" width="1.1" height="15.0" fill="rgb(245,51,49)" rx="2" ry="2" />
<text  x="40.35" y="1295.5" ></text>
</g>
<g >
<title>kernfs_fop_read_iter (3 samples, 0.26%)</title><rect x="24.2" y="1445" width="3.0" height="15.0" fill="rgb(233,23,4)" rx="2" ry="2" />
<text  x="27.18" y="1455.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (33 samples, 2.83%)</title><rect x="1156.6" y="1509" width="33.4" height="15.0" fill="rgb(205,55,1)" rx="2" ry="2" />
<text  x="1159.58" y="1519.5" >x8..</text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.17%)</title><rect x="1151.5" y="1445" width="2.0" height="15.0" fill="rgb(221,51,44)" rx="2" ry="2" />
<text  x="1154.51" y="1455.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.09%)</title><rect x="1155.6" y="1429" width="1.0" height="15.0" fill="rgb(216,64,24)" rx="2" ry="2" />
<text  x="1158.56" y="1439.5" ></text>
</g>
<g >
<title>mm_alloc (1 samples, 0.09%)</title><rect x="78.9" y="1381" width="1.0" height="15.0" fill="rgb(223,207,21)" rx="2" ry="2" />
<text  x="81.88" y="1391.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (2 samples, 0.17%)</title><rect x="1004.6" y="725" width="2.1" height="15.0" fill="rgb(237,169,50)" rx="2" ry="2" />
<text  x="1007.64" y="735.5" ></text>
</g>
<g >
<title>start_kernel (1 samples, 0.09%)</title><rect x="73.8" y="1493" width="1.0" height="15.0" fill="rgb(209,164,38)" rx="2" ry="2" />
<text  x="76.81" y="1503.5" ></text>
</g>
<g >
<title>get_timespec64 (1 samples, 0.09%)</title><rect x="1080.6" y="1493" width="1.0" height="15.0" fill="rgb(254,25,5)" rx="2" ry="2" />
<text  x="1083.61" y="1503.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (14 samples, 1.20%)</title><rect x="450.6" y="1381" width="14.2" height="15.0" fill="rgb(224,180,41)" rx="2" ry="2" />
<text  x="453.60" y="1391.5" ></text>
</g>
<g >
<title>__mem_cgroup_flush_stats (1 samples, 0.09%)</title><rect x="1088.7" y="1413" width="1.0" height="15.0" fill="rgb(223,27,23)" rx="2" ry="2" />
<text  x="1091.71" y="1423.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="190.3" y="1317" width="1.0" height="15.0" fill="rgb(243,134,18)" rx="2" ry="2" />
<text  x="193.29" y="1327.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.09%)</title><rect x="332.1" y="1333" width="1.0" height="15.0" fill="rgb(227,70,31)" rx="2" ry="2" />
<text  x="335.09" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28 samples, 2.40%)</title><rect x="221.7" y="1381" width="28.4" height="15.0" fill="rgb(221,134,0)" rx="2" ry="2" />
<text  x="224.69" y="1391.5" >en..</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="1079.6" y="1445" width="1.0" height="15.0" fill="rgb(232,81,37)" rx="2" ry="2" />
<text  x="1082.60" y="1455.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (127 samples, 10.90%)</title><rect x="307.8" y="1509" width="128.6" height="15.0" fill="rgb(226,227,17)" rx="2" ry="2" />
<text  x="310.79" y="1519.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>psi_task_switch (2 samples, 0.17%)</title><rect x="1076.6" y="1397" width="2.0" height="15.0" fill="rgb(214,85,24)" rx="2" ry="2" />
<text  x="1079.56" y="1407.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (9 samples, 0.77%)</title><rect x="171.0" y="1461" width="9.2" height="15.0" fill="rgb(218,43,43)" rx="2" ry="2" />
<text  x="174.05" y="1471.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.09%)</title><rect x="899.3" y="1397" width="1.0" height="15.0" fill="rgb(246,159,12)" rx="2" ry="2" />
<text  x="902.30" y="1407.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.09%)</title><rect x="75.8" y="1301" width="1.0" height="15.0" fill="rgb(251,141,22)" rx="2" ry="2" />
<text  x="78.84" y="1311.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.09%)</title><rect x="1079.6" y="1349" width="1.0" height="15.0" fill="rgb(216,227,51)" rx="2" ry="2" />
<text  x="1082.60" y="1359.5" ></text>
</g>
<g >
<title>dashmap::default_shard_amount (1 samples, 0.09%)</title><rect x="1005.7" y="325" width="1.0" height="15.0" fill="rgb(241,45,25)" rx="2" ry="2" />
<text  x="1008.66" y="335.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.09%)</title><rect x="1096.8" y="1317" width="1.0" height="15.0" fill="rgb(232,98,22)" rx="2" ry="2" />
<text  x="1099.82" y="1327.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (141 samples, 12.10%)</title><rect x="620.8" y="1413" width="142.8" height="15.0" fill="rgb(237,176,8)" rx="2" ry="2" />
<text  x="623.76" y="1423.5" >ringbuf::producer:..</text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.09%)</title><rect x="71.8" y="1461" width="1.0" height="15.0" fill="rgb(214,89,14)" rx="2" ry="2" />
<text  x="74.79" y="1471.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (19 samples, 1.63%)</title><rect x="286.5" y="1125" width="19.3" height="15.0" fill="rgb(218,154,4)" rx="2" ry="2" />
<text  x="289.52" y="1135.5" ></text>
</g>
<g >
<title>scsi_io_completion (1 samples, 0.09%)</title><rect x="1091.8" y="1301" width="1.0" height="15.0" fill="rgb(221,90,21)" rx="2" ry="2" />
<text  x="1094.75" y="1311.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (8 samples, 0.69%)</title><rect x="1170.8" y="1365" width="8.1" height="15.0" fill="rgb(218,83,16)" rx="2" ry="2" />
<text  x="1173.76" y="1375.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.09%)</title><rect x="1075.5" y="1461" width="1.1" height="15.0" fill="rgb(227,200,53)" rx="2" ry="2" />
<text  x="1078.55" y="1471.5" ></text>
</g>
<g >
<title>__alloc_pages (36 samples, 3.09%)</title><rect x="901.3" y="1397" width="36.5" height="15.0" fill="rgb(208,78,27)" rx="2" ry="2" />
<text  x="904.33" y="1407.5" >__a..</text>
</g>
<g >
<title>schedule (1 samples, 0.09%)</title><rect x="1089.7" y="1493" width="1.0" height="15.0" fill="rgb(212,218,47)" rx="2" ry="2" />
<text  x="1092.73" y="1503.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;alloc::string::String,dashmap::util::SharedValue&lt;usize&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="1003.6" y="1189" width="1.0" height="15.0" fill="rgb(240,52,6)" rx="2" ry="2" />
<text  x="1006.63" y="1199.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (4 samples, 0.34%)</title><rect x="32.3" y="1349" width="4.0" height="15.0" fill="rgb(207,165,21)" rx="2" ry="2" />
<text  x="35.28" y="1359.5" ></text>
</g>
<g >
<title>ksys_read (5 samples, 0.43%)</title><rect x="1083.6" y="1493" width="5.1" height="15.0" fill="rgb(208,56,21)" rx="2" ry="2" />
<text  x="1086.65" y="1503.5" ></text>
</g>
<g >
<title>do_idle (32 samples, 2.75%)</title><rect x="1156.6" y="1429" width="32.4" height="15.0" fill="rgb(223,113,3)" rx="2" ry="2" />
<text  x="1159.58" y="1439.5" >do..</text>
</g>
<g >
<title>open64 (1 samples, 0.09%)</title><rect x="1005.7" y="149" width="1.0" height="15.0" fill="rgb(219,107,26)" rx="2" ry="2" />
<text  x="1008.66" y="159.5" ></text>
</g>
<g >
<title>NaClSysMmapIntern (1 samples, 0.09%)</title><rect x="280.4" y="1477" width="1.1" height="15.0" fill="rgb(253,71,33)" rx="2" ry="2" />
<text  x="283.44" y="1487.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.09%)</title><rect x="1078.6" y="1445" width="1.0" height="15.0" fill="rgb(246,6,29)" rx="2" ry="2" />
<text  x="1081.58" y="1455.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (1 samples, 0.09%)</title><rect x="1097.8" y="1333" width="1.0" height="15.0" fill="rgb(219,63,20)" rx="2" ry="2" />
<text  x="1100.83" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.26%)</title><rect x="981.3" y="1477" width="3.1" height="15.0" fill="rgb(248,105,19)" rx="2" ry="2" />
<text  x="984.35" y="1487.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.09%)</title><rect x="221.7" y="1317" width="1.0" height="15.0" fill="rgb(226,205,42)" rx="2" ry="2" />
<text  x="224.69" y="1327.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (4 samples, 0.34%)</title><rect x="276.4" y="1477" width="4.0" height="15.0" fill="rgb(233,208,26)" rx="2" ry="2" />
<text  x="279.39" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 1.55%)</title><rect x="980.3" y="1541" width="18.3" height="15.0" fill="rgb(208,210,41)" rx="2" ry="2" />
<text  x="983.33" y="1551.5" ></text>
</g>
<g >
<title>__munmap (28 samples, 2.40%)</title><rect x="221.7" y="1397" width="28.4" height="15.0" fill="rgb(229,106,22)" rx="2" ry="2" />
<text  x="224.69" y="1407.5" >__..</text>
</g>
<g >
<title>ovl_llseek (1 samples, 0.09%)</title><rect x="331.1" y="1301" width="1.0" height="15.0" fill="rgb(215,126,29)" rx="2" ry="2" />
<text  x="334.08" y="1311.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (3 samples, 0.26%)</title><rect x="1001.6" y="1365" width="3.0" height="15.0" fill="rgb(214,89,47)" rx="2" ry="2" />
<text  x="1004.61" y="1375.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.09%)</title><rect x="1152.5" y="1429" width="1.0" height="15.0" fill="rgb(215,78,6)" rx="2" ry="2" />
<text  x="1155.52" y="1439.5" ></text>
</g>
<g >
<title>do_epoll_pwait.part.0 (1 samples, 0.09%)</title><rect x="21.1" y="1493" width="1.1" height="15.0" fill="rgb(238,191,33)" rx="2" ry="2" />
<text  x="24.14" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (1 samples, 0.09%)</title><rect x="1000.6" y="1349" width="1.0" height="15.0" fill="rgb(207,213,0)" rx="2" ry="2" />
<text  x="1003.59" y="1359.5" ></text>
</g>
<g >
<title>blk_done_softirq (1 samples, 0.09%)</title><rect x="1091.8" y="1365" width="1.0" height="15.0" fill="rgb(232,5,11)" rx="2" ry="2" />
<text  x="1094.75" y="1375.5" ></text>
</g>
<g >
<title>memory_stat_show (1 samples, 0.09%)</title><rect x="1084.7" y="1381" width="1.0" height="15.0" fill="rgb(219,74,5)" rx="2" ry="2" />
<text  x="1087.66" y="1391.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.09%)</title><rect x="1045.2" y="1317" width="1.0" height="15.0" fill="rgb(222,159,23)" rx="2" ry="2" />
<text  x="1048.16" y="1327.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.09%)</title><rect x="1045.2" y="1397" width="1.0" height="15.0" fill="rgb(205,84,50)" rx="2" ry="2" />
<text  x="1048.16" y="1407.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.09%)</title><rect x="1185.9" y="1413" width="1.1" height="15.0" fill="rgb(236,169,44)" rx="2" ry="2" />
<text  x="1188.95" y="1423.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.09%)</title><rect x="1078.6" y="1429" width="1.0" height="15.0" fill="rgb(220,99,24)" rx="2" ry="2" />
<text  x="1081.58" y="1439.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (1 samples, 0.09%)</title><rect x="39.4" y="1317" width="1.0" height="15.0" fill="rgb(241,23,0)" rx="2" ry="2" />
<text  x="42.37" y="1327.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (323 samples, 27.73%)</title><rect x="436.4" y="1509" width="327.2" height="15.0" fill="rgb(210,130,6)" rx="2" ry="2" />
<text  x="439.42" y="1519.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>NaClSysReadDecoder (1 samples, 0.09%)</title><rect x="181.2" y="1525" width="1.0" height="15.0" fill="rgb(250,5,39)" rx="2" ry="2" />
<text  x="184.18" y="1535.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2 samples, 0.17%)</title><rect x="32.3" y="1269" width="2.0" height="15.0" fill="rgb(247,95,23)" rx="2" ry="2" />
<text  x="35.28" y="1279.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.09%)</title><rect x="21.1" y="1429" width="1.1" height="15.0" fill="rgb(252,61,54)" rx="2" ry="2" />
<text  x="24.14" y="1439.5" ></text>
</g>
<g >
<title>__pte_alloc (1 samples, 0.09%)</title><rect x="900.3" y="1413" width="1.0" height="15.0" fill="rgb(218,193,44)" rx="2" ry="2" />
<text  x="903.32" y="1423.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.17%)</title><rect x="1004.6" y="821" width="2.1" height="15.0" fill="rgb(210,16,6)" rx="2" ry="2" />
<text  x="1007.64" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.17%)</title><rect x="1044.1" y="1525" width="2.1" height="15.0" fill="rgb(246,0,45)" rx="2" ry="2" />
<text  x="1047.15" y="1535.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="310.8" y="1365" width="1.0" height="15.0" fill="rgb(229,138,35)" rx="2" ry="2" />
<text  x="313.82" y="1375.5" ></text>
</g>
<g >
<title>osq_lock (27 samples, 2.32%)</title><rect x="222.7" y="1269" width="27.4" height="15.0" fill="rgb(205,138,32)" rx="2" ry="2" />
<text  x="225.70" y="1279.5" >o..</text>
</g>
<g >
<title>record__write (1 samples, 0.09%)</title><rect x="160.9" y="1461" width="1.0" height="15.0" fill="rgb(235,13,24)" rx="2" ry="2" />
<text  x="163.92" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 1.12%)</title><rect x="1075.5" y="1525" width="13.2" height="15.0" fill="rgb(230,70,32)" rx="2" ry="2" />
<text  x="1078.55" y="1535.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.09%)</title><rect x="312.8" y="1333" width="1.1" height="15.0" fill="rgb(247,164,38)" rx="2" ry="2" />
<text  x="315.85" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (79 samples, 6.78%)</title><rect x="79.9" y="1413" width="80.0" height="15.0" fill="rgb(249,158,20)" rx="2" ry="2" />
<text  x="82.89" y="1423.5" >__x64_sys..</text>
</g>
<g >
<title>grab_cache_page_write_begin (2 samples, 0.17%)</title><rect x="161.9" y="1173" width="2.1" height="15.0" fill="rgb(230,124,25)" rx="2" ry="2" />
<text  x="164.93" y="1183.5" ></text>
</g>
<g >
<title>BitmapSetBit (3 samples, 0.26%)</title><rect x="218.7" y="1397" width="3.0" height="15.0" fill="rgb(211,173,4)" rx="2" ry="2" />
<text  x="221.65" y="1407.5" ></text>
</g>
<g >
<title>CompareAndSwap (1 samples, 0.09%)</title><rect x="185.2" y="1493" width="1.0" height="15.0" fill="rgb(252,108,13)" rx="2" ry="2" />
<text  x="188.23" y="1503.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.09%)</title><rect x="1045.2" y="1301" width="1.0" height="15.0" fill="rgb(239,128,30)" rx="2" ry="2" />
<text  x="1048.16" y="1311.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::incref_root (2 samples, 0.17%)</title><rect x="1004.6" y="1445" width="2.1" height="15.0" fill="rgb(252,20,6)" rx="2" ry="2" />
<text  x="1007.64" y="1455.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6 samples, 0.52%)</title><rect x="1092.8" y="1429" width="6.0" height="15.0" fill="rgb(223,75,36)" rx="2" ry="2" />
<text  x="1095.76" y="1439.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="310.8" y="1349" width="1.0" height="15.0" fill="rgb(244,45,28)" rx="2" ry="2" />
<text  x="313.82" y="1359.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.09%)</title><rect x="313.9" y="1333" width="1.0" height="15.0" fill="rgb(246,48,22)" rx="2" ry="2" />
<text  x="316.86" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.69%)</title><rect x="20.1" y="1541" width="8.1" height="15.0" fill="rgb(217,25,34)" rx="2" ry="2" />
<text  x="23.13" y="1551.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (3 samples, 0.26%)</title><rect x="1001.6" y="1445" width="3.0" height="15.0" fill="rgb(254,58,3)" rx="2" ry="2" />
<text  x="1004.61" y="1455.5" ></text>
</g>
<g >
<title>execute_command (3 samples, 0.26%)</title><rect x="74.8" y="1461" width="3.1" height="15.0" fill="rgb(241,206,48)" rx="2" ry="2" />
<text  x="77.82" y="1471.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.34%)</title><rect x="465.8" y="1397" width="4.0" height="15.0" fill="rgb(236,40,34)" rx="2" ry="2" />
<text  x="468.79" y="1407.5" ></text>
</g>
<g >
<title>__entry_text_start (1 samples, 0.09%)</title><rect x="1074.5" y="1541" width="1.0" height="15.0" fill="rgb(220,167,48)" rx="2" ry="2" />
<text  x="1077.53" y="1551.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.09%)</title><rect x="1087.7" y="1461" width="1.0" height="15.0" fill="rgb(216,155,40)" rx="2" ry="2" />
<text  x="1090.70" y="1471.5" ></text>
</g>
<g >
<title>proc_reg_unlocked_ioctl (1 samples, 0.09%)</title><rect x="1081.6" y="1493" width="1.0" height="15.0" fill="rgb(253,64,0)" rx="2" ry="2" />
<text  x="1084.62" y="1503.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (4 samples, 0.34%)</title><rect x="759.5" y="1349" width="4.1" height="15.0" fill="rgb(221,107,29)" rx="2" ry="2" />
<text  x="762.53" y="1359.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.09%)</title><rect x="31.3" y="1365" width="1.0" height="15.0" fill="rgb(239,133,30)" rx="2" ry="2" />
<text  x="34.27" y="1375.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.09%)</title><rect x="21.1" y="1413" width="1.1" height="15.0" fill="rgb(229,30,47)" rx="2" ry="2" />
<text  x="24.14" y="1423.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.09%)</title><rect x="338.2" y="1413" width="1.0" height="15.0" fill="rgb(208,215,34)" rx="2" ry="2" />
<text  x="341.17" y="1423.5" ></text>
</g>
<g >
<title>try_to_wake_up (4 samples, 0.34%)</title><rect x="32.3" y="1317" width="4.0" height="15.0" fill="rgb(241,174,27)" rx="2" ry="2" />
<text  x="35.28" y="1327.5" ></text>
</g>
<g >
<title>main (8 samples, 0.69%)</title><rect x="998.6" y="1493" width="8.1" height="15.0" fill="rgb(239,89,7)" rx="2" ry="2" />
<text  x="1001.57" y="1503.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.09%)</title><rect x="27.2" y="1413" width="1.0" height="15.0" fill="rgb(249,212,52)" rx="2" ry="2" />
<text  x="30.22" y="1423.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.09%)</title><rect x="39.4" y="1333" width="1.0" height="15.0" fill="rgb(236,86,52)" rx="2" ry="2" />
<text  x="42.37" y="1343.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="436.4" y="1413" width="1.0" height="15.0" fill="rgb(212,120,44)" rx="2" ry="2" />
<text  x="439.42" y="1423.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.09%)</title><rect x="287.5" y="1109" width="1.0" height="15.0" fill="rgb(206,73,37)" rx="2" ry="2" />
<text  x="290.53" y="1119.5" ></text>
</g>
<g >
<title>handle_signal (1 samples, 0.09%)</title><rect x="76.8" y="1301" width="1.1" height="15.0" fill="rgb(237,55,27)" rx="2" ry="2" />
<text  x="79.85" y="1311.5" ></text>
</g>
<g >
<title>do_anonymous_page (69 samples, 5.92%)</title><rect x="886.1" y="1429" width="69.9" height="15.0" fill="rgb(242,72,2)" rx="2" ry="2" />
<text  x="889.14" y="1439.5" >do_anon..</text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.09%)</title><rect x="1097.8" y="1349" width="1.0" height="15.0" fill="rgb(229,56,49)" rx="2" ry="2" />
<text  x="1100.83" y="1359.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (4 samples, 0.34%)</title><rect x="276.4" y="1509" width="4.0" height="15.0" fill="rgb(213,147,10)" rx="2" ry="2" />
<text  x="279.39" y="1519.5" ></text>
</g>
<g >
<title>__libc_start_main (8 samples, 0.69%)</title><rect x="998.6" y="1525" width="8.1" height="15.0" fill="rgb(244,188,27)" rx="2" ry="2" />
<text  x="1001.57" y="1535.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (6 samples, 0.52%)</title><rect x="32.3" y="1397" width="6.1" height="15.0" fill="rgb(220,21,50)" rx="2" ry="2" />
<text  x="35.28" y="1407.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (2 samples, 0.17%)</title><rect x="1004.6" y="933" width="2.1" height="15.0" fill="rgb(236,227,3)" rx="2" ry="2" />
<text  x="1007.64" y="943.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.09%)</title><rect x="1002.6" y="1125" width="1.0" height="15.0" fill="rgb(224,75,12)" rx="2" ry="2" />
<text  x="1005.62" y="1135.5" ></text>
</g>
<g >
<title>__handle_mm_fault (81 samples, 6.95%)</title><rect x="878.0" y="1461" width="82.1" height="15.0" fill="rgb(249,20,19)" rx="2" ry="2" />
<text  x="881.03" y="1471.5" >__handle_..</text>
</g>
<g >
<title>kernfs_fop_read_iter (2 samples, 0.17%)</title><rect x="1083.6" y="1445" width="2.1" height="15.0" fill="rgb(208,44,19)" rx="2" ry="2" />
<text  x="1086.65" y="1455.5" ></text>
</g>
<g >
<title>start_kernel (33 samples, 2.83%)</title><rect x="1156.6" y="1493" width="33.4" height="15.0" fill="rgb(244,48,21)" rx="2" ry="2" />
<text  x="1159.58" y="1503.5" >st..</text>
</g>
<g >
<title>vfs_read (3 samples, 0.26%)</title><rect x="24.2" y="1477" width="3.0" height="15.0" fill="rgb(217,68,51)" rx="2" ry="2" />
<text  x="27.18" y="1487.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="39.4" y="1253" width="1.0" height="15.0" fill="rgb(240,106,35)" rx="2" ry="2" />
<text  x="42.37" y="1263.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.09%)</title><rect x="324.0" y="1141" width="1.0" height="15.0" fill="rgb(240,173,54)" rx="2" ry="2" />
<text  x="326.99" y="1151.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11 samples, 0.94%)</title><rect x="1158.6" y="1349" width="11.1" height="15.0" fill="rgb(243,199,51)" rx="2" ry="2" />
<text  x="1161.60" y="1359.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.09%)</title><rect x="330.1" y="1301" width="1.0" height="15.0" fill="rgb(234,220,12)" rx="2" ry="2" />
<text  x="333.07" y="1311.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.09%)</title><rect x="956.0" y="1397" width="1.0" height="15.0" fill="rgb(254,85,38)" rx="2" ry="2" />
<text  x="959.03" y="1407.5" ></text>
</g>
<g >
<title>_find_first_bit (1 samples, 0.09%)</title><rect x="1182.9" y="1333" width="1.0" height="15.0" fill="rgb(229,179,23)" rx="2" ry="2" />
<text  x="1185.91" y="1343.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.09%)</title><rect x="1089.7" y="1445" width="1.0" height="15.0" fill="rgb(221,95,41)" rx="2" ry="2" />
<text  x="1092.73" y="1455.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="1004.6" y="277" width="1.1" height="15.0" fill="rgb(247,110,53)" rx="2" ry="2" />
<text  x="1007.64" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="984.4" y="1477" width="1.0" height="15.0" fill="rgb(220,129,34)" rx="2" ry="2" />
<text  x="987.39" y="1487.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (1 samples, 0.09%)</title><rect x="68.7" y="1397" width="1.1" height="15.0" fill="rgb(210,88,43)" rx="2" ry="2" />
<text  x="71.75" y="1407.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (3 samples, 0.26%)</title><rect x="960.1" y="1477" width="3.0" height="15.0" fill="rgb(225,193,1)" rx="2" ry="2" />
<text  x="963.08" y="1487.5" ></text>
</g>
<g >
<title>record__pushfn (4 samples, 0.34%)</title><rect x="161.9" y="1461" width="4.1" height="15.0" fill="rgb(226,69,46)" rx="2" ry="2" />
<text  x="164.93" y="1471.5" ></text>
</g>
<g >
<title>lindrustfinalize (4 samples, 0.34%)</title><rect x="1000.6" y="1461" width="4.0" height="15.0" fill="rgb(224,131,44)" rx="2" ry="2" />
<text  x="1003.59" y="1471.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (2 samples, 0.17%)</title><rect x="1004.6" y="565" width="2.1" height="15.0" fill="rgb(226,219,3)" rx="2" ry="2" />
<text  x="1007.64" y="575.5" ></text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.09%)</title><rect x="1000.6" y="1333" width="1.0" height="15.0" fill="rgb(240,156,6)" rx="2" ry="2" />
<text  x="1003.59" y="1343.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.09%)</title><rect x="72.8" y="1429" width="1.0" height="15.0" fill="rgb(237,36,27)" rx="2" ry="2" />
<text  x="75.80" y="1439.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.09%)</title><rect x="72.8" y="1461" width="1.0" height="15.0" fill="rgb(221,93,0)" rx="2" ry="2" />
<text  x="75.80" y="1471.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (2 samples, 0.17%)</title><rect x="1004.6" y="853" width="2.1" height="15.0" fill="rgb(213,116,24)" rx="2" ry="2" />
<text  x="1007.64" y="863.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.17%)</title><rect x="1004.6" y="1013" width="2.1" height="15.0" fill="rgb(218,140,34)" rx="2" ry="2" />
<text  x="1007.64" y="1023.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.09%)</title><rect x="77.9" y="1445" width="1.0" height="15.0" fill="rgb(242,81,24)" rx="2" ry="2" />
<text  x="80.86" y="1455.5" ></text>
</g>
<g >
<title>down_read_killable (1 samples, 0.09%)</title><rect x="983.4" y="1349" width="1.0" height="15.0" fill="rgb(212,65,29)" rx="2" ry="2" />
<text  x="986.37" y="1359.5" ></text>
</g>
<g >
<title>__get_user_pages (2 samples, 0.17%)</title><rect x="981.3" y="1349" width="2.1" height="15.0" fill="rgb(214,20,2)" rx="2" ry="2" />
<text  x="984.35" y="1359.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (2 samples, 0.17%)</title><rect x="1004.6" y="1093" width="2.1" height="15.0" fill="rgb(210,199,1)" rx="2" ry="2" />
<text  x="1007.64" y="1103.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (1 samples, 0.09%)</title><rect x="1182.9" y="1381" width="1.0" height="15.0" fill="rgb(206,145,1)" rx="2" ry="2" />
<text  x="1185.91" y="1391.5" ></text>
</g>
<g >
<title>dispatcher (323 samples, 27.73%)</title><rect x="436.4" y="1461" width="327.2" height="15.0" fill="rgb(207,203,50)" rx="2" ry="2" />
<text  x="439.42" y="1471.5" >dispatcher</text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (2 samples, 0.17%)</title><rect x="310.8" y="1445" width="2.0" height="15.0" fill="rgb(234,211,48)" rx="2" ry="2" />
<text  x="313.82" y="1455.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.09%)</title><rect x="984.4" y="1509" width="1.0" height="15.0" fill="rgb(233,166,44)" rx="2" ry="2" />
<text  x="987.39" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.26%)</title><rect x="330.1" y="1349" width="3.0" height="15.0" fill="rgb(249,63,8)" rx="2" ry="2" />
<text  x="333.07" y="1359.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (3 samples, 0.26%)</title><rect x="981.3" y="1397" width="3.1" height="15.0" fill="rgb(207,50,28)" rx="2" ry="2" />
<text  x="984.35" y="1407.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.09%)</title><rect x="1093.8" y="1333" width="1.0" height="15.0" fill="rgb(246,97,20)" rx="2" ry="2" />
<text  x="1096.78" y="1343.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="190.3" y="1349" width="1.0" height="15.0" fill="rgb(236,141,14)" rx="2" ry="2" />
<text  x="193.29" y="1359.5" ></text>
</g>
<g >
<title>memory_stat_show (2 samples, 0.17%)</title><rect x="25.2" y="1381" width="2.0" height="15.0" fill="rgb(247,31,41)" rx="2" ry="2" />
<text  x="28.19" y="1391.5" ></text>
</g>
<g >
<title>generic_exec_single (73 samples, 6.27%)</title><rect x="85.0" y="1301" width="73.9" height="15.0" fill="rgb(207,4,41)" rx="2" ry="2" />
<text  x="87.95" y="1311.5" >generic_..</text>
</g>
<g >
<title>NaClValidateImage (2 samples, 0.17%)</title><rect x="998.6" y="1413" width="2.0" height="15.0" fill="rgb(226,176,8)" rx="2" ry="2" />
<text  x="1001.57" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.09%)</title><rect x="337.2" y="1349" width="1.0" height="15.0" fill="rgb(213,109,42)" rx="2" ry="2" />
<text  x="340.16" y="1359.5" ></text>
</g>
<g >
<title>rcu_core (2 samples, 0.17%)</title><rect x="1095.8" y="1349" width="2.0" height="15.0" fill="rgb(216,124,29)" rx="2" ry="2" />
<text  x="1098.80" y="1359.5" ></text>
</g>
<g >
<title>zap_pte_range (26 samples, 2.23%)</title><rect x="281.5" y="1157" width="26.3" height="15.0" fill="rgb(238,177,25)" rx="2" ry="2" />
<text  x="284.45" y="1167.5" >z..</text>
</g>
<g >
<title>rcu_core_si (2 samples, 0.17%)</title><rect x="1095.8" y="1365" width="2.0" height="15.0" fill="rgb(227,61,2)" rx="2" ry="2" />
<text  x="1098.80" y="1375.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.09%)</title><rect x="33.3" y="1237" width="1.0" height="15.0" fill="rgb(230,40,25)" rx="2" ry="2" />
<text  x="36.30" y="1247.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (2 samples, 0.17%)</title><rect x="1076.6" y="1461" width="2.0" height="15.0" fill="rgb(240,72,32)" rx="2" ry="2" />
<text  x="1079.56" y="1471.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.09%)</title><rect x="1161.6" y="1253" width="1.1" height="15.0" fill="rgb(209,114,4)" rx="2" ry="2" />
<text  x="1164.64" y="1263.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.09%)</title><rect x="487.1" y="1365" width="1.0" height="15.0" fill="rgb(226,221,27)" rx="2" ry="2" />
<text  x="490.06" y="1375.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.43%)</title><rect x="474.9" y="1333" width="5.1" height="15.0" fill="rgb(247,210,13)" rx="2" ry="2" />
<text  x="477.91" y="1343.5" ></text>
</g>
<g >
<title>cpuidle_select (3 samples, 0.26%)</title><rect x="1179.9" y="1397" width="3.0" height="15.0" fill="rgb(246,89,38)" rx="2" ry="2" />
<text  x="1182.87" y="1407.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.09%)</title><rect x="309.8" y="1429" width="1.0" height="15.0" fill="rgb(219,121,20)" rx="2" ry="2" />
<text  x="312.81" y="1439.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11 samples, 0.94%)</title><rect x="1158.6" y="1365" width="11.1" height="15.0" fill="rgb(230,106,11)" rx="2" ry="2" />
<text  x="1161.60" y="1375.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (1 samples, 0.09%)</title><rect x="1082.6" y="1461" width="1.0" height="15.0" fill="rgb(243,60,12)" rx="2" ry="2" />
<text  x="1085.64" y="1471.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.09%)</title><rect x="36.3" y="1317" width="1.0" height="15.0" fill="rgb(217,61,32)" rx="2" ry="2" />
<text  x="39.33" y="1327.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.09%)</title><rect x="159.9" y="1413" width="1.0" height="15.0" fill="rgb(214,188,51)" rx="2" ry="2" />
<text  x="162.91" y="1423.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.26%)</title><rect x="1001.6" y="1317" width="3.0" height="15.0" fill="rgb(230,203,20)" rx="2" ry="2" />
<text  x="1004.61" y="1327.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.17%)</title><rect x="1004.6" y="661" width="2.1" height="15.0" fill="rgb(249,225,23)" rx="2" ry="2" />
<text  x="1007.64" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.09%)</title><rect x="984.4" y="1461" width="1.0" height="15.0" fill="rgb(220,1,50)" rx="2" ry="2" />
<text  x="987.39" y="1471.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.09%)</title><rect x="77.9" y="1461" width="1.0" height="15.0" fill="rgb(214,34,25)" rx="2" ry="2" />
<text  x="80.86" y="1471.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (122 samples, 10.47%)</title><rect x="312.8" y="1445" width="123.6" height="15.0" fill="rgb(206,78,7)" rx="2" ry="2" />
<text  x="315.85" y="1455.5" >rustposix::safe..</text>
</g>
<g >
<title>calc_global_load_tick (1 samples, 0.09%)</title><rect x="36.3" y="1301" width="1.0" height="15.0" fill="rgb(208,39,35)" rx="2" ry="2" />
<text  x="39.33" y="1311.5" ></text>
</g>
<g >
<title>ovl_real_fdget (1 samples, 0.09%)</title><rect x="331.1" y="1285" width="1.0" height="15.0" fill="rgb(232,222,18)" rx="2" ry="2" />
<text  x="334.08" y="1295.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.09%)</title><rect x="72.8" y="1445" width="1.0" height="15.0" fill="rgb(248,219,27)" rx="2" ry="2" />
<text  x="75.80" y="1455.5" ></text>
</g>
<g >
<title>cpu_startup_entry (33 samples, 2.83%)</title><rect x="1156.6" y="1445" width="33.4" height="15.0" fill="rgb(242,60,44)" rx="2" ry="2" />
<text  x="1159.58" y="1455.5" >cp..</text>
</g>
<g >
<title>do_futex (1 samples, 0.09%)</title><rect x="22.2" y="1493" width="1.0" height="15.0" fill="rgb(223,172,35)" rx="2" ry="2" />
<text  x="25.15" y="1503.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.17%)</title><rect x="310.8" y="1397" width="2.0" height="15.0" fill="rgb(240,195,1)" rx="2" ry="2" />
<text  x="313.82" y="1407.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25 samples, 2.15%)</title><rect x="251.1" y="1397" width="25.3" height="15.0" fill="rgb(252,167,9)" rx="2" ry="2" />
<text  x="254.06" y="1407.5" >e..</text>
</g>
<g >
<title>rebalance_domains (2 samples, 0.17%)</title><rect x="1162.7" y="1269" width="2.0" height="15.0" fill="rgb(218,146,22)" rx="2" ry="2" />
<text  x="1165.65" y="1279.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (2 samples, 0.17%)</title><rect x="1004.6" y="901" width="2.1" height="15.0" fill="rgb(215,173,9)" rx="2" ry="2" />
<text  x="1007.64" y="911.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 6.87%)</title><rect x="79.9" y="1477" width="81.0" height="15.0" fill="rgb(225,60,42)" rx="2" ry="2" />
<text  x="82.89" y="1487.5" >perf_evse..</text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="75.8" y="1237" width="1.0" height="15.0" fill="rgb(207,185,5)" rx="2" ry="2" />
<text  x="78.84" y="1247.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.09%)</title><rect x="73.8" y="1445" width="1.0" height="15.0" fill="rgb(205,185,16)" rx="2" ry="2" />
<text  x="76.81" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="360.5" y="1349" width="1.0" height="15.0" fill="rgb(245,138,12)" rx="2" ry="2" />
<text  x="363.45" y="1359.5" ></text>
</g>
<g >
<title>free_pgtables (1 samples, 0.09%)</title><rect x="77.9" y="1413" width="1.0" height="15.0" fill="rgb(211,203,31)" rx="2" ry="2" />
<text  x="80.86" y="1423.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (1 samples, 0.09%)</title><rect x="164.0" y="1109" width="1.0" height="15.0" fill="rgb(224,20,12)" rx="2" ry="2" />
<text  x="166.96" y="1119.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.09%)</title><rect x="1091.8" y="1413" width="1.0" height="15.0" fill="rgb(254,74,49)" rx="2" ry="2" />
<text  x="1094.75" y="1423.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.09%)</title><rect x="1044.1" y="1429" width="1.1" height="15.0" fill="rgb(205,180,40)" rx="2" ry="2" />
<text  x="1047.15" y="1439.5" ></text>
</g>
<g >
<title>copy_process (1 samples, 0.09%)</title><rect x="74.8" y="1285" width="1.0" height="15.0" fill="rgb(240,28,28)" rx="2" ry="2" />
<text  x="77.82" y="1295.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.09%)</title><rect x="314.9" y="1381" width="1.0" height="15.0" fill="rgb(223,35,27)" rx="2" ry="2" />
<text  x="317.88" y="1391.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (9 samples, 0.77%)</title><rect x="171.0" y="1493" width="9.2" height="15.0" fill="rgb(243,5,39)" rx="2" ry="2" />
<text  x="174.05" y="1503.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (2 samples, 0.17%)</title><rect x="905.4" y="1381" width="2.0" height="15.0" fill="rgb(219,150,0)" rx="2" ry="2" />
<text  x="908.38" y="1391.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (34 samples, 2.92%)</title><rect x="187.3" y="1509" width="34.4" height="15.0" fill="rgb(229,48,20)" rx="2" ry="2" />
<text  x="190.25" y="1519.5" >Na..</text>
</g>
<g >
<title>uncharge_page (1 samples, 0.09%)</title><rect x="290.6" y="1077" width="1.0" height="15.0" fill="rgb(205,58,36)" rx="2" ry="2" />
<text  x="293.57" y="1087.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.09%)</title><rect x="66.7" y="1429" width="1.0" height="15.0" fill="rgb(224,163,10)" rx="2" ry="2" />
<text  x="69.72" y="1439.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1 samples, 0.09%)</title><rect x="309.8" y="1413" width="1.0" height="15.0" fill="rgb(231,71,37)" rx="2" ry="2" />
<text  x="312.81" y="1423.5" ></text>
</g>
<g >
<title>menu_select (3 samples, 0.26%)</title><rect x="1179.9" y="1381" width="3.0" height="15.0" fill="rgb(237,173,6)" rx="2" ry="2" />
<text  x="1182.87" y="1391.5" ></text>
</g>
<g >
<title>process_vm_rw (3 samples, 0.26%)</title><rect x="981.3" y="1429" width="3.1" height="15.0" fill="rgb(207,77,48)" rx="2" ry="2" />
<text  x="984.35" y="1439.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.26%)</title><rect x="68.7" y="1461" width="3.1" height="15.0" fill="rgb(254,79,22)" rx="2" ry="2" />
<text  x="71.75" y="1471.5" ></text>
</g>
<g >
<title>native_write_msr (69 samples, 5.92%)</title><rect x="89.0" y="1189" width="69.9" height="15.0" fill="rgb(210,88,9)" rx="2" ry="2" />
<text  x="92.00" y="1199.5" >native_..</text>
</g>
</g>
</svg>
