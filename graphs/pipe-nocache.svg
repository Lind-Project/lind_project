<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>do_syscall_64 (454,788,885 samples, 0.02%)</title><rect x="42.4" y="117" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="45.40" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (671,672,639 samples, 0.03%)</title><rect x="1078.3" y="277" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1081.26" y="287.5" ></text>
</g>
<g >
<title>cpuidle_enter (236,725,282 samples, 0.01%)</title><rect x="42.0" y="213" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="45.02" y="223.5" ></text>
</g>
<g >
<title>read_tsc (11,564,885,803 samples, 0.44%)</title><rect x="1115.4" y="245" width="5.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1118.40" y="255.5" ></text>
</g>
<g >
<title>populate_seccomp_data (2,503,984,603 samples, 0.10%)</title><rect x="1144.9" y="197" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1147.92" y="207.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (2,058,410,202 samples, 0.08%)</title><rect x="688.1" y="277" width="1.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="691.15" y="287.5" ></text>
</g>
<g >
<title>cpu_startup_entry (8,357,341,764 samples, 0.32%)</title><rect x="1166.8" y="261" width="3.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1169.79" y="271.5" ></text>
</g>
<g >
<title>vfs_write (280,652,976 samples, 0.01%)</title><rect x="38.7" y="229" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="41.67" y="239.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3,627,013,535 samples, 0.14%)</title><rect x="1188.2" y="229" width="1.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1191.24" y="239.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (1,201,631,871 samples, 0.05%)</title><rect x="1160.9" y="261" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1163.87" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (250,988,095 samples, 0.01%)</title><rect x="668.3" y="149" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="671.31" y="159.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (454,788,885 samples, 0.02%)</title><rect x="42.4" y="85" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="45.40" y="95.5" ></text>
</g>
<g >
<title>do_idle (8,339,950,254 samples, 0.32%)</title><rect x="1166.8" y="245" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1169.79" y="255.5" ></text>
</g>
<g >
<title>__libc_start_main (454,788,885 samples, 0.02%)</title><rect x="42.4" y="277" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="45.40" y="287.5" ></text>
</g>
<g >
<title>__secure_computing (1,652,009,162 samples, 0.06%)</title><rect x="1127.0" y="245" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1129.99" y="255.5" ></text>
</g>
<g >
<title>__do_sys_waitid (801,346,995 samples, 0.03%)</title><rect x="1121.6" y="245" width="0.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1124.58" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (2,153,225,288 samples, 0.08%)</title><rect x="36.9" y="261" width="0.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="39.86" y="271.5" ></text>
</g>
<g >
<title>NaClSysRead (427,988,837,764 samples, 16.32%)</title><rect x="275.7" y="245" width="192.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="278.70" y="255.5" >NaClSysRead</text>
</g>
<g >
<title>vfs_write (1,630,767,591 samples, 0.06%)</title><rect x="1122.0" y="229" width="0.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1124.96" y="239.5" ></text>
</g>
<g >
<title>quick_read@plt (1,305,478,245 samples, 0.05%)</title><rect x="290.1" y="229" width="0.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="293.07" y="239.5" ></text>
</g>
<g >
<title>NaClSysRead (1,154,699,338 samples, 0.04%)</title><rect x="690.4" y="277" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="693.43" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (413,755,004 samples, 0.02%)</title><rect x="1078.3" y="245" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1081.26" y="255.5" ></text>
</g>
<g >
<title>cpuidle_select (511,059,730 samples, 0.02%)</title><rect x="1189.6" y="213" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1192.64" y="223.5" ></text>
</g>
<g >
<title>put_timespec64 (500,690,054 samples, 0.02%)</title><rect x="1124.9" y="261" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1127.87" y="271.5" ></text>
</g>
<g >
<title>futex_wake (538,335,181 samples, 0.02%)</title><rect x="1110.1" y="229" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1113.09" y="239.5" ></text>
</g>
<g >
<title>[anon] (12,501,381,318 samples, 0.48%)</title><rect x="42.9" y="293" width="5.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="45.90" y="303.5" ></text>
</g>
<g >
<title>mem_rw.isra.0 (450,584,631 samples, 0.02%)</title><rect x="1120.8" y="213" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1123.83" y="223.5" ></text>
</g>
<g >
<title>put_timespec64 (12,765,948,250 samples, 0.49%)</title><rect x="1103.6" y="245" width="5.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1106.61" y="255.5" ></text>
</g>
<g >
<title>NaClLog (22,479,820,315 samples, 0.86%)</title><rect x="251.4" y="261" width="10.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="254.37" y="271.5" ></text>
</g>
<g >
<title>generic_perform_write (1,401,758,702 samples, 0.05%)</title><rect x="1122.0" y="117" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1125.03" y="127.5" ></text>
</g>
<g >
<title>NaClSysBrkDecoder (526,877,163 samples, 0.02%)</title><rect x="265.5" y="261" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="268.55" y="271.5" ></text>
</g>
<g >
<title>pick_next_task (292,846,152 samples, 0.01%)</title><rect x="1109.9" y="165" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1112.87" y="175.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (1,254,615,682 samples, 0.05%)</title><rect x="183.5" y="245" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="186.49" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_gettimeofday (22,779,674,065 samples, 0.87%)</title><rect x="1110.4" y="261" width="10.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1113.35" y="271.5" ></text>
</g>
<g >
<title>__put_user_8 (14,268,596,085 samples, 0.54%)</title><rect x="1085.5" y="261" width="6.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1088.52" y="271.5" ></text>
</g>
<g >
<title>ext4_do_writepages (330,598,444 samples, 0.01%)</title><rect x="1166.6" y="101" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1169.64" y="111.5" ></text>
</g>
<g >
<title>wb_writeback (335,954,880 samples, 0.01%)</title><rect x="1166.6" y="197" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1169.64" y="207.5" ></text>
</g>
<g >
<title>ktime_get_real_ts64 (300,506,359 samples, 0.01%)</title><rect x="1124.5" y="261" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1127.54" y="271.5" ></text>
</g>
<g >
<title>all (2,622,510,101,316 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>HandleStackContext (2,207,694,305 samples, 0.08%)</title><rect x="681.5" y="277" width="1.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="684.46" y="287.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (246,972,265 samples, 0.01%)</title><rect x="1166.5" y="229" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1169.49" y="239.5" ></text>
</g>
<g >
<title>do_idle (393,717,131 samples, 0.02%)</title><rect x="42.0" y="245" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="45.02" y="255.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (300,651,806 samples, 0.01%)</title><rect x="42.3" y="293" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="45.27" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,849,165,799 samples, 0.07%)</title><rect x="1109.5" y="261" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1112.52" y="271.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1,929,197,815 samples, 0.07%)</title><rect x="1170.6" y="245" width="0.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1173.55" y="255.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (1,003,886,744 samples, 0.04%)</title><rect x="689.1" y="277" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="692.07" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (12,366,782,163 samples, 0.47%)</title><rect x="36.2" y="277" width="5.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="39.18" y="287.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (6,927,860,154 samples, 0.26%)</title><rect x="262.4" y="261" width="3.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="265.43" y="271.5" ></text>
</g>
<g >
<title>split_map_pages (341,124,274 samples, 0.01%)</title><rect x="1166.0" y="149" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1169.02" y="159.5" ></text>
</g>
<g >
<title>__schedule (300,413,039 samples, 0.01%)</title><rect x="1160.7" y="165" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1163.71" y="175.5" ></text>
</g>
<g >
<title>NaClSysWrite (420,027,694,045 samples, 16.02%)</title><rect x="479.4" y="245" width="189.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="482.43" y="255.5" >NaClSysWrite</text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (1,958,339,233 samples, 0.07%)</title><rect x="145.7" y="277" width="0.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="148.66" y="287.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (1,402,289,715 samples, 0.05%)</title><rect x="1164.6" y="293" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1167.55" y="303.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (3,721,122,287 samples, 0.14%)</title><rect x="1188.2" y="293" width="1.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1191.24" y="303.5" ></text>
</g>
<g >
<title>cpuidle_reflect (581,521,707 samples, 0.02%)</title><rect x="1189.4" y="213" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1192.38" y="223.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (345,720,650 samples, 0.01%)</title><rect x="1122.2" y="85" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1125.16" y="95.5" ></text>
</g>
<g >
<title>ptrace_request (400,698,385 samples, 0.02%)</title><rect x="1121.1" y="229" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1124.08" y="239.5" ></text>
</g>
<g >
<title>reader_loop (454,788,885 samples, 0.02%)</title><rect x="42.4" y="229" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="45.40" y="239.5" ></text>
</g>
<g >
<title>__gup_longterm_locked (250,318,208 samples, 0.01%)</title><rect x="1120.9" y="149" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1123.90" y="159.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (1,606,295,515 samples, 0.06%)</title><rect x="190.1" y="261" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="193.11" y="271.5" ></text>
</g>
<g >
<title>record__mmap_read_all (313,297,174 samples, 0.01%)</title><rect x="42.8" y="261" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="45.76" y="271.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (2,008,102,311 samples, 0.08%)</title><rect x="693.2" y="277" width="0.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="696.23" y="287.5" ></text>
</g>
<g >
<title>pagecache_get_page (342,721,619 samples, 0.01%)</title><rect x="1122.3" y="69" width="0.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1125.32" y="79.5" ></text>
</g>
<g >
<title>record__pushfn (230,841,407 samples, 0.01%)</title><rect x="42.8" y="213" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="45.77" y="223.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (10,062,191,726 samples, 0.38%)</title><rect x="1104.8" y="229" width="4.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1107.82" y="239.5" ></text>
</g>
<g >
<title>do_iter_write (1,447,017,184 samples, 0.06%)</title><rect x="1122.0" y="181" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1125.01" y="191.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,929,197,815 samples, 0.07%)</title><rect x="1170.6" y="213" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1173.55" y="223.5" ></text>
</g>
<g >
<title>[unknown] (3,805,262,701 samples, 0.15%)</title><rect x="1140.5" y="197" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1143.51" y="207.5" ></text>
</g>
<g >
<title>migrate_enable (6,006,724,350 samples, 0.23%)</title><rect x="1142.2" y="197" width="2.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1145.22" y="207.5" ></text>
</g>
<g >
<title>[bash] (454,788,885 samples, 0.02%)</title><rect x="42.4" y="181" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="45.40" y="191.5" ></text>
</g>
<g >
<title>ext4_release_io_end (240,328,483 samples, 0.01%)</title><rect x="1166.5" y="213" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1169.50" y="223.5" ></text>
</g>
<g >
<title>HandleStackContext (2,409,595,131 samples, 0.09%)</title><rect x="140.1" y="277" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="143.11" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (2,403,673,780 samples, 0.09%)</title><rect x="1163.5" y="293" width="1.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1166.47" y="303.5" ></text>
</g>
<g >
<title>ret_from_fork (3,553,353,840 samples, 0.14%)</title><rect x="1165.2" y="293" width="1.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1168.20" y="303.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (2,610,214,733 samples, 0.10%)</title><rect x="685.0" y="277" width="1.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="688.03" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (853,639,039 samples, 0.03%)</title><rect x="45.3" y="277" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.25" y="287.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (13,554,092,821 samples, 0.52%)</title><rect x="269.6" y="245" width="6.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="272.60" y="255.5" ></text>
</g>
<g >
<title>isolate_freepages (1,293,592,467 samples, 0.05%)</title><rect x="1165.6" y="165" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1168.59" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (250,988,095 samples, 0.01%)</title><rect x="668.3" y="165" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="671.31" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_ptrace (851,550,689 samples, 0.03%)</title><rect x="1121.0" y="261" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1124.03" y="271.5" ></text>
</g>
<g >
<title>wb_workfn (335,954,880 samples, 0.01%)</title><rect x="1166.6" y="229" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1169.64" y="239.5" ></text>
</g>
<g >
<title>_copy_to_user (900,955,423 samples, 0.03%)</title><rect x="1093.5" y="245" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1096.49" y="255.5" ></text>
</g>
<g >
<title>do_idle (3,704,732,955 samples, 0.14%)</title><rect x="1188.2" y="245" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1191.24" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,903,175,744 samples, 0.23%)</title><rect x="1185.4" y="293" width="2.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1188.43" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (24,379,901,855 samples, 0.93%)</title><rect x="1149.9" y="261" width="11.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1152.90" y="271.5" ></text>
</g>
<g >
<title>vfs_iter_write (1,447,017,184 samples, 0.06%)</title><rect x="1122.0" y="197" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1125.01" y="207.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (55,120,143,759 samples, 2.10%)</title><rect x="1125.1" y="261" width="24.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1128.10" y="271.5" >s..</text>
</g>
<g >
<title>ksys_write (280,652,976 samples, 0.01%)</title><rect x="38.7" y="245" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="41.67" y="255.5" ></text>
</g>
<g >
<title>__secure_computing (1,502,135,184 samples, 0.06%)</title><rect x="1187.1" y="229" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1190.06" y="239.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (6,422,496,944 samples, 0.24%)</title><rect x="1166.9" y="229" width="2.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1169.87" y="239.5" ></text>
</g>
<g >
<title>__put_user_8 (250,423,400 samples, 0.01%)</title><rect x="1185.6" y="261" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1188.59" y="271.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (5,021,688,079 samples, 0.19%)</title><rect x="475.1" y="229" width="2.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="478.05" y="239.5" ></text>
</g>
<g >
<title>memcpy@plt (1,155,009,358 samples, 0.04%)</title><rect x="478.9" y="229" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="481.91" y="239.5" ></text>
</g>
<g >
<title>_copy_to_user (851,215,966 samples, 0.03%)</title><rect x="1104.4" y="229" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1107.44" y="239.5" ></text>
</g>
<g >
<title>menu_select (727,435,937 samples, 0.03%)</title><rect x="1169.3" y="197" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1172.34" y="207.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (350,328,367 samples, 0.01%)</title><rect x="37.1" y="229" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="40.13" y="239.5" ></text>
</g>
<g >
<title>kernel_waitid (600,973,502 samples, 0.02%)</title><rect x="1121.6" y="229" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1124.65" y="239.5" ></text>
</g>
<g >
<title>read_tsc (12,516,074,143 samples, 0.48%)</title><rect x="1097.5" y="229" width="5.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1100.55" y="239.5" ></text>
</g>
<g >
<title>[perf-365396.map] (200,677,772,146 samples, 7.65%)</title><rect x="48.5" y="293" width="90.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="51.53" y="303.5" >[perf-3653..</text>
</g>
<g >
<title>start_secondary (3,704,732,955 samples, 0.14%)</title><rect x="1188.2" y="277" width="1.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1191.24" y="287.5" ></text>
</g>
<g >
<title>[sel_ldr] (194,102,161,916 samples, 7.40%)</title><rect x="51.5" y="277" width="87.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="54.48" y="287.5" >[sel_ldr]</text>
</g>
<g >
<title>ktime_get_ts64 (4,756,474,452 samples, 0.18%)</title><rect x="1095.4" y="229" width="2.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1098.41" y="239.5" ></text>
</g>
<g >
<title>__schedule (693,526,862 samples, 0.03%)</title><rect x="1170.1" y="213" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1173.06" y="223.5" ></text>
</g>
<g >
<title>ext4_finish_bio (240,328,483 samples, 0.01%)</title><rect x="1166.5" y="197" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1169.50" y="207.5" ></text>
</g>
<g >
<title>read_tsc (600,931,215 samples, 0.02%)</title><rect x="37.3" y="229" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="40.28" y="239.5" ></text>
</g>
<g >
<title>__seccomp_filter (575,282,108 samples, 0.02%)</title><rect x="1186.8" y="229" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1189.81" y="239.5" ></text>
</g>
<g >
<title>record__write (230,841,407 samples, 0.01%)</title><rect x="42.8" y="197" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="45.77" y="207.5" ></text>
</g>
<g >
<title>perf_ioctl (250,428,207 samples, 0.01%)</title><rect x="1120.6" y="245" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1123.62" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,783,343,250 samples, 0.07%)</title><rect x="1078.6" y="293" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1081.56" y="303.5" ></text>
</g>
<g >
<title>memcpy@plt (803,123,682 samples, 0.03%)</title><rect x="275.3" y="229" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="278.34" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (283,359,942 samples, 0.01%)</title><rect x="42.6" y="213" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="45.62" y="223.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (4,565,355,830 samples, 0.17%)</title><rect x="1167.2" y="181" width="2.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1170.24" y="191.5" ></text>
</g>
<g >
<title>ptrace_do_notify (650,856,257 samples, 0.02%)</title><rect x="1160.6" y="213" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1163.56" y="223.5" ></text>
</g>
<g >
<title>__poll (343,282,704 samples, 0.01%)</title><rect x="42.6" y="245" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="45.60" y="255.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (3,111,976,615 samples, 0.12%)</title><rect x="698.8" y="277" width="1.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="701.83" y="287.5" ></text>
</g>
<g >
<title>ptrace_stop.part.0 (300,238,378 samples, 0.01%)</title><rect x="1146.0" y="165" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1149.05" y="175.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (132,533,023,483 samples, 5.05%)</title><rect x="190.8" y="261" width="59.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="193.83" y="271.5" >NaClAp..</text>
</g>
<g >
<title>update_process_times (310,317,057 samples, 0.01%)</title><rect x="1078.3" y="181" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1081.29" y="191.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (641,054,399 samples, 0.02%)</title><rect x="1169.8" y="229" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1172.76" y="239.5" ></text>
</g>
<g >
<title>[sel_ldr] (1,177,130,877,856 samples, 44.89%)</title><rect x="138.8" y="293" width="529.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="141.82" y="303.5" >[sel_ldr]</text>
</g>
<g >
<title>__access_remote_vm (300,356,201 samples, 0.01%)</title><rect x="1120.9" y="181" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1123.90" y="191.5" ></text>
</g>
<g >
<title>__seccomp_filter (28,736,756,322 samples, 1.10%)</title><rect x="1133.3" y="213" width="12.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1136.25" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_write (280,652,976 samples, 0.01%)</title><rect x="38.7" y="261" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="41.67" y="271.5" ></text>
</g>
<g >
<title>sel_ldr (1,462,005,980,193 samples, 55.75%)</title><rect x="42.9" y="309" width="657.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="45.90" y="319.5" >sel_ldr</text>
</g>
<g >
<title>_start (454,788,885 samples, 0.02%)</title><rect x="42.4" y="293" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="45.40" y="303.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (450,178,555 samples, 0.02%)</title><rect x="1124.7" y="261" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1127.67" y="271.5" ></text>
</g>
<g >
<title>proactive_compact_node (2,168,279,235 samples, 0.08%)</title><rect x="1165.2" y="245" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1168.20" y="255.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,204,756,787 samples, 0.05%)</title><rect x="691.8" y="277" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="694.80" y="287.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (449,127,342,521 samples, 17.13%)</title><rect x="266.2" y="261" width="202.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="269.19" y="271.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>main (454,788,885 samples, 0.02%)</title><rect x="42.4" y="245" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="45.40" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,702,746,318 samples, 0.06%)</title><rect x="41.0" y="261" width="0.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="43.98" y="271.5" ></text>
</g>
<g >
<title>populate_seccomp_data (300,439,486 samples, 0.01%)</title><rect x="40.8" y="213" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="43.84" y="223.5" ></text>
</g>
<g >
<title>do_idle (1,929,197,815 samples, 0.07%)</title><rect x="1170.6" y="197" width="0.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1173.55" y="207.5" ></text>
</g>
<g >
<title>cpuidle_enter (5,386,825,219 samples, 0.21%)</title><rect x="1166.9" y="213" width="2.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1169.90" y="223.5" ></text>
</g>
<g >
<title>schedule (1,008,861,818 samples, 0.04%)</title><rect x="1109.6" y="197" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1112.60" y="207.5" ></text>
</g>
<g >
<title>NaClVmmapFindPageIter (526,877,163 samples, 0.02%)</title><rect x="265.5" y="229" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="268.55" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,961,677,019 samples, 0.11%)</title><rect x="694.1" y="277" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="697.14" y="287.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,602,373,598 samples, 0.06%)</title><rect x="1159.8" y="245" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1162.83" y="255.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (400,557,721 samples, 0.02%)</title><rect x="37.6" y="229" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="40.62" y="239.5" ></text>
</g>
<g >
<title>move_to_new_folio (592,541,644 samples, 0.02%)</title><rect x="1165.3" y="165" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1168.30" y="175.5" ></text>
</g>
<g >
<title>dequeue_task_fair (361,082,529 samples, 0.01%)</title><rect x="1109.7" y="149" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1112.67" y="159.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (689,330,024 samples, 0.03%)</title><rect x="1166.2" y="213" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1169.18" y="223.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (234,748,803 samples, 0.01%)</title><rect x="42.0" y="197" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="45.02" y="207.5" ></text>
</g>
<g >
<title>menu_reflect (581,521,707 samples, 0.02%)</title><rect x="1189.4" y="197" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1192.38" y="207.5" ></text>
</g>
<g >
<title>quick_write@plt (853,536,554 samples, 0.03%)</title><rect x="495.6" y="229" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="498.56" y="239.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (951,259,582 samples, 0.04%)</title><rect x="37.1" y="245" width="0.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="40.13" y="255.5" ></text>
</g>
<g >
<title>ptrace_stop.part.0 (600,800,193 samples, 0.02%)</title><rect x="1160.6" y="197" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1163.58" y="207.5" ></text>
</g>
<g >
<title>cpuidle_select (737,712,102 samples, 0.03%)</title><rect x="1169.3" y="213" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1172.34" y="223.5" ></text>
</g>
<g >
<title>worker_thread (680,567,679 samples, 0.03%)</title><rect x="1166.5" y="261" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1169.49" y="271.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,373,071,213 samples, 0.05%)</title><rect x="1170.6" y="181" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1173.57" y="191.5" ></text>
</g>
<g >
<title>read_tsc (651,070,507 samples, 0.02%)</title><rect x="38.3" y="245" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="41.31" y="255.5" ></text>
</g>
<g >
<title>menu_select (511,059,730 samples, 0.02%)</title><rect x="1189.6" y="197" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1192.64" y="207.5" ></text>
</g>
<g >
<title>CompareAndSwap (93,275,005,145 samples, 3.56%)</title><rect x="208.5" y="245" width="42.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="211.49" y="255.5" >Com..</text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (2,108,711,124 samples, 0.08%)</title><rect x="261.5" y="261" width="0.9" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="264.48" y="271.5" ></text>
</g>
<g >
<title>clear_page_erms (284,304,671 samples, 0.01%)</title><rect x="1166.0" y="133" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1169.04" y="143.5" ></text>
</g>
<g >
<title>schedule (300,709,136 samples, 0.01%)</title><rect x="1121.7" y="197" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1124.69" y="207.5" ></text>
</g>
<g >
<title>tick_sched_handle (310,317,057 samples, 0.01%)</title><rect x="1078.3" y="197" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1081.29" y="207.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (1,159,962,344,420 samples, 44.23%)</title><rect x="146.5" y="277" width="522.0" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="149.55" y="287.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>migrate_enable (2,103,098,148 samples, 0.08%)</title><rect x="1147.6" y="213" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1150.60" y="223.5" ></text>
</g>
<g >
<title>ttwu_do_activate (487,264,953 samples, 0.02%)</title><rect x="1169.8" y="181" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1172.79" y="191.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,101,776,724 samples, 0.04%)</title><rect x="41.2" y="245" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="44.23" y="255.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (250,558,013 samples, 0.01%)</title><rect x="41.6" y="229" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="44.61" y="239.5" ></text>
</g>
<g >
<title>filemap_add_folio (223,540,841 samples, 0.01%)</title><rect x="1122.3" y="37" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1125.32" y="47.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,807,459,232 samples, 0.07%)</title><rect x="274.5" y="229" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="277.53" y="239.5" ></text>
</g>
<g >
<title>ksys_write (1,678,664,366 samples, 0.06%)</title><rect x="1121.9" y="245" width="0.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1124.94" y="255.5" ></text>
</g>
<g >
<title>__schedule (1,008,861,818 samples, 0.04%)</title><rect x="1109.6" y="181" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1112.60" y="191.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (2,428,051,968 samples, 0.09%)</title><rect x="1186.6" y="261" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1189.65" y="271.5" ></text>
</g>
<g >
<title>syscall_exit_work (700,927,749 samples, 0.03%)</title><rect x="1160.6" y="245" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1163.56" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_gettimeofday (715,806,141 samples, 0.03%)</title><rect x="1186.2" y="261" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1189.17" y="271.5" ></text>
</g>
<g >
<title>migrate_enable (500,806,338 samples, 0.02%)</title><rect x="40.2" y="197" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="43.21" y="207.5" ></text>
</g>
<g >
<title>[unknown] (656,579,893 samples, 0.03%)</title><rect x="42.6" y="293" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="45.60" y="303.5" ></text>
</g>
<g >
<title>__entry_text_start (1,602,588,769 samples, 0.06%)</title><rect x="35.1" y="293" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="38.06" y="303.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (2,352,744,593 samples, 0.09%)</title><rect x="1161.4" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1164.41" y="287.5" ></text>
</g>
<g >
<title>__buffer_migrate_folio (482,865,256 samples, 0.02%)</title><rect x="1165.3" y="133" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1168.30" y="143.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (4,116,685,706 samples, 0.16%)</title><rect x="695.5" y="277" width="1.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="698.47" y="287.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (650,890,617 samples, 0.02%)</title><rect x="1093.9" y="245" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1096.90" y="255.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (292,874,922 samples, 0.01%)</title><rect x="1166.3" y="117" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1169.31" y="127.5" ></text>
</g>
<g >
<title>shrink_folio_list (512,953,551 samples, 0.02%)</title><rect x="1166.2" y="165" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1169.22" y="175.5" ></text>
</g>
<g >
<title>schedule_idle (730,995,836 samples, 0.03%)</title><rect x="1170.1" y="229" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1173.06" y="239.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (1,006,337,213 samples, 0.04%)</title><rect x="682.5" y="277" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="685.45" y="287.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (49,212,457,784 samples, 1.88%)</title><rect x="1127.8" y="245" width="22.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1130.76" y="255.5" >s..</text>
</g>
<g >
<title>__secure_computing (41,051,759,008 samples, 1.57%)</title><rect x="1131.4" y="229" width="18.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1134.43" y="239.5" ></text>
</g>
<g >
<title>__seccomp_filter (1,451,695,374 samples, 0.06%)</title><rect x="1130.8" y="229" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1133.78" y="239.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (4,005,212,107 samples, 0.15%)</title><rect x="39.2" y="245" width="1.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="42.18" y="255.5" ></text>
</g>
<g >
<title>execute_command (454,788,885 samples, 0.02%)</title><rect x="42.4" y="213" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="45.40" y="223.5" ></text>
</g>
<g >
<title>shell_execve (454,788,885 samples, 0.02%)</title><rect x="42.4" y="165" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="45.40" y="175.5" ></text>
</g>
<g >
<title>kcompactd (2,168,279,235 samples, 0.08%)</title><rect x="1165.2" y="261" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1168.20" y="271.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (4,718,715,796 samples, 0.18%)</title><rect x="272.4" y="229" width="2.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="275.40" y="239.5" ></text>
</g>
<g >
<title>__filemap_get_folio (315,949,845 samples, 0.01%)</title><rect x="1122.3" y="53" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1125.32" y="63.5" ></text>
</g>
<g >
<title>ptrace_notify (300,238,378 samples, 0.01%)</title><rect x="1146.0" y="197" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1149.05" y="207.5" ></text>
</g>
<g >
<title>HandleStackContext (37,448,998,891 samples, 1.43%)</title><rect x="173.3" y="261" width="16.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="176.26" y="271.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (10,286,539,579 samples, 0.39%)</title><rect x="1166.8" y="293" width="4.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1169.79" y="303.5" ></text>
</g>
<g >
<title>process_one_work (680,567,679 samples, 0.03%)</title><rect x="1166.5" y="245" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1169.49" y="255.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (1,908,320,195 samples, 0.07%)</title><rect x="42.9" y="277" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="45.92" y="287.5" ></text>
</g>
<g >
<title>ptrace_notify (700,927,749 samples, 0.03%)</title><rect x="1160.6" y="229" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1163.56" y="239.5" ></text>
</g>
<g >
<title>__seccomp_filter (2,253,114,698 samples, 0.09%)</title><rect x="39.5" y="213" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="42.51" y="223.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (679,696,370 samples, 0.03%)</title><rect x="1187.7" y="261" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1190.74" y="271.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (3,363,563,386 samples, 0.13%)</title><rect x="697.3" y="277" width="1.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="700.32" y="287.5" ></text>
</g>
<g >
<title>enqueue_task (455,312,617 samples, 0.02%)</title><rect x="1169.8" y="165" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1172.79" y="175.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (1,757,409,328 samples, 0.07%)</title><rect x="44.5" y="277" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="47.46" y="287.5" ></text>
</g>
<g >
<title>compact_zone (2,168,279,235 samples, 0.08%)</title><rect x="1165.2" y="229" width="1.0" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1168.20" y="239.5" ></text>
</g>
<g >
<title>[unknown] (45,943,238,276 samples, 1.75%)</title><rect x="679.6" y="293" width="20.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="682.56" y="303.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (300,960,728,939 samples, 11.48%)</title><rect x="533.0" y="213" width="135.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="536.01" y="223.5" >rustposix::interf..</text>
</g>
<g >
<title>NaClSysWrite (1,155,284,778 samples, 0.04%)</title><rect x="468.3" y="261" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="471.27" y="271.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (16,420,426,543 samples, 0.63%)</title><rect x="281.1" y="229" width="7.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="284.14" y="239.5" ></text>
</g>
<g >
<title>isolate_freepages_block (849,620,416 samples, 0.03%)</title><rect x="1165.6" y="149" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1168.64" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_waitid (801,346,995 samples, 0.03%)</title><rect x="1121.6" y="261" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1124.58" y="271.5" ></text>
</g>
<g >
<title>sshd (1,050,579,966,720 samples, 40.06%)</title><rect x="700.7" y="309" width="472.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="703.73" y="319.5" >sshd</text>
</g>
<g >
<title>shrink_node (689,330,024 samples, 0.03%)</title><rect x="1166.2" y="229" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1169.18" y="239.5" ></text>
</g>
<g >
<title>ovl_write_iter (237,326,458 samples, 0.01%)</title><rect x="38.7" y="213" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="41.69" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,552,503,902 samples, 0.21%)</title><rect x="1185.5" y="277" width="2.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1188.55" y="287.5" ></text>
</g>
<g >
<title>mem_read (450,584,631 samples, 0.02%)</title><rect x="1120.8" y="229" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1123.83" y="239.5" ></text>
</g>
<g >
<title>start_kernel (1,929,197,815 samples, 0.07%)</title><rect x="1170.6" y="261" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1173.55" y="271.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (1,505,583,578 samples, 0.06%)</title><rect x="47.2" y="277" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="50.22" y="287.5" ></text>
</g>
<g >
<title>put_timespec64 (550,788,725 samples, 0.02%)</title><rect x="37.6" y="245" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="40.55" y="255.5" ></text>
</g>
<g >
<title>__writeback_single_inode (332,342,090 samples, 0.01%)</title><rect x="1166.6" y="149" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1169.64" y="159.5" ></text>
</g>
<g >
<title>amd_clear_divider (1,301,801,448 samples, 0.05%)</title><rect x="1122.7" y="261" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1125.69" y="271.5" ></text>
</g>
<g >
<title>swapper (36,804,124,257 samples, 1.40%)</title><rect x="1173.4" y="309" width="16.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1176.44" y="319.5" ></text>
</g>
<g >
<title>__entry_text_start (23,221,265,406 samples, 0.89%)</title><rect x="1067.7" y="293" width="10.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1070.66" y="303.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1,447,017,184 samples, 0.06%)</title><rect x="1122.0" y="149" width="0.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1125.01" y="159.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (4,482,983,526 samples, 0.17%)</title><rect x="1171.4" y="293" width="2.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1174.42" y="303.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (20,927,231,895 samples, 0.80%)</title><rect x="1094.2" y="245" width="9.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1097.19" y="255.5" ></text>
</g>
<g >
<title>read_tsc (300,957,722 samples, 0.01%)</title><rect x="1186.4" y="245" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1189.35" y="255.5" ></text>
</g>
<g >
<title>perf (656,579,893 samples, 0.03%)</title><rect x="42.6" y="309" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="45.60" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,564,648,949 samples, 0.14%)</title><rect x="666.7" y="197" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="669.71" y="207.5" ></text>
</g>
<g >
<title>shrink_inactive_list (613,777,577 samples, 0.02%)</title><rect x="1166.2" y="181" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1169.18" y="191.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (2,108,108,824 samples, 0.08%)</title><rect x="144.7" y="277" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="147.72" y="287.5" ></text>
</g>
<g >
<title>__put_user_8 (1,101,719,219 samples, 0.04%)</title><rect x="36.4" y="261" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="39.36" y="271.5" ></text>
</g>
<g >
<title>cpu_startup_entry (393,717,131 samples, 0.02%)</title><rect x="42.0" y="261" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="45.02" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (234,463,772 samples, 0.01%)</title><rect x="1167.0" y="165" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1170.03" y="175.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1,447,017,184 samples, 0.06%)</title><rect x="1122.0" y="165" width="0.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1125.01" y="175.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (2,007,815,763 samples, 0.08%)</title><rect x="250.5" y="261" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="253.46" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (384,244,007 samples, 0.01%)</title><rect x="1078.3" y="229" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1081.26" y="239.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (4,405,844,541 samples, 0.17%)</title><rect x="39.0" y="261" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="42.00" y="271.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,741,649,410 samples, 0.10%)</title><rect x="1123.3" y="261" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1126.28" y="271.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (355,611,083 samples, 0.01%)</title><rect x="42.0" y="229" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="45.02" y="239.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (443,673,945,189 samples, 16.92%)</title><rect x="468.8" y="261" width="199.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="471.79" y="271.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (8,484,080,579 samples, 0.32%)</title><rect x="284.7" y="213" width="3.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="287.69" y="223.5" ></text>
</g>
<g >
<title>ext4_release_folio (292,874,922 samples, 0.01%)</title><rect x="1166.3" y="133" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1169.31" y="143.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1,447,017,184 samples, 0.06%)</title><rect x="1122.0" y="133" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1125.01" y="143.5" ></text>
</g>
<g >
<title>do_wait (400,820,712 samples, 0.02%)</title><rect x="1121.6" y="213" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1124.65" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,565,043,489 samples, 0.14%)</title><rect x="477.3" y="229" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="480.31" y="239.5" ></text>
</g>
<g >
<title>[unknown] (1,452,379,869 samples, 0.06%)</title><rect x="1132.6" y="213" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1135.60" y="223.5" ></text>
</g>
<g >
<title>start_secondary (8,357,341,764 samples, 0.32%)</title><rect x="1166.8" y="277" width="3.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1169.79" y="287.5" ></text>
</g>
<g >
<title>vfs_read (450,584,631 samples, 0.02%)</title><rect x="1120.8" y="245" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1123.83" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (283,359,942 samples, 0.01%)</title><rect x="42.6" y="229" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="45.62" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,637,279,605 samples, 0.37%)</title><rect x="463.7" y="197" width="4.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="466.74" y="207.5" ></text>
</g>
<g >
<title>NaClSysBrk (526,877,163 samples, 0.02%)</title><rect x="265.5" y="245" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="268.55" y="255.5" ></text>
</g>
<g >
<title>read_tsc (662,778,806 samples, 0.03%)</title><rect x="1185.8" y="229" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1188.82" y="239.5" ></text>
</g>
<g >
<title>__unmap_and_move.constprop.0 (718,424,956 samples, 0.03%)</title><rect x="1165.3" y="181" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1168.27" y="191.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (566,582,765 samples, 0.02%)</title><rect x="1169.8" y="213" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1172.76" y="223.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (313,297,174 samples, 0.01%)</title><rect x="42.8" y="245" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="45.76" y="255.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (2,159,102,472 samples, 0.08%)</title><rect x="189.1" y="245" width="1.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="192.13" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_gettimeofday (1,702,823,195 samples, 0.06%)</title><rect x="37.8" y="261" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="40.83" y="271.5" ></text>
</g>
<g >
<title>filemap_release_folio (292,874,922 samples, 0.01%)</title><rect x="1166.3" y="149" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1169.31" y="159.5" ></text>
</g>
<g >
<title>CompareAndSwap (4,938,740,515 samples, 0.19%)</title><rect x="171.0" y="261" width="2.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="174.03" y="271.5" ></text>
</g>
<g >
<title>migrate_pages (2,130,374,285 samples, 0.08%)</title><rect x="1165.2" y="213" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1168.21" y="223.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (394,750,712,590 samples, 15.05%)</title><rect x="290.7" y="229" width="177.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="293.66" y="239.5" >rustposix::safeposix::s..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (312,723,430,830 samples, 11.92%)</title><rect x="327.6" y="213" width="140.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="330.56" y="223.5" >rustposix::interf..</text>
</g>
<g >
<title>__secure_computing (3,554,600,668 samples, 0.14%)</title><rect x="39.4" y="229" width="1.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="42.38" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,222,150,081 samples, 0.08%)</title><rect x="1162.5" y="277" width="1.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1165.47" y="287.5" ></text>
</g>
<g >
<title>[unknown]  (24,648,329,098 samples, 0.94%)</title><rect x="668.5" y="293" width="11.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="671.47" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (237,010,011 samples, 0.01%)</title><rect x="1170.6" y="133" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1173.58" y="143.5" ></text>
</g>
<g >
<title>execve (454,788,885 samples, 0.02%)</title><rect x="42.4" y="149" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="45.40" y="159.5" ></text>
</g>
<g >
<title>get_user_pages_remote (250,318,208 samples, 0.01%)</title><rect x="1120.9" y="165" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1123.90" y="175.5" ></text>
</g>
<g >
<title>buffer_migrate_folio (482,865,256 samples, 0.02%)</title><rect x="1165.3" y="149" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1168.30" y="159.5" ></text>
</g>
<g >
<title>ptrace_do_notify (300,238,378 samples, 0.01%)</title><rect x="1146.0" y="181" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1149.05" y="191.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (383,339,405,008 samples, 14.62%)</title><rect x="495.9" y="229" width="172.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="498.94" y="239.5" >rustposix::safeposix::..</text>
</g>
<g >
<title>generic_write_end (354,488,381 samples, 0.01%)</title><rect x="1122.5" y="85" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1125.47" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (454,788,885 samples, 0.02%)</title><rect x="42.4" y="133" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="45.40" y="143.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1,405,858,654 samples, 0.05%)</title><rect x="47.9" y="277" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="50.89" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (250,988,095 samples, 0.01%)</title><rect x="668.3" y="197" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="671.31" y="207.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (812,947,332 samples, 0.03%)</title><rect x="1185.8" y="245" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1188.75" y="255.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (15,665,638,419 samples, 0.60%)</title><rect x="472.4" y="245" width="7.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="475.39" y="255.5" ></text>
</g>
<g >
<title>journal-offline (72,008,661,368 samples, 2.75%)</title><rect x="10.0" y="309" width="32.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >jo..</text>
</g>
<g >
<title>unmap_and_move (2,130,374,285 samples, 0.08%)</title><rect x="1165.2" y="197" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1168.21" y="207.5" ></text>
</g>
<g >
<title>__cmd_record (656,579,893 samples, 0.03%)</title><rect x="42.6" y="277" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="45.60" y="287.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (3,714,204,742 samples, 0.14%)</title><rect x="141.2" y="277" width="1.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="144.19" y="287.5" ></text>
</g>
<g >
<title>lind (454,788,885 samples, 0.02%)</title><rect x="42.4" y="309" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="45.40" y="319.5" ></text>
</g>
<g >
<title>do_futex (1,803,632,936 samples, 0.07%)</title><rect x="1109.5" y="245" width="0.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1112.52" y="255.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (652,606,990 samples, 0.02%)</title><rect x="690.9" y="277" width="0.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="693.95" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (172,426,051,738 samples, 6.57%)</title><rect x="1083.8" y="277" width="77.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1086.83" y="287.5" >do_sysca..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1,104,381,499 samples, 0.04%)</title><rect x="700.2" y="293" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="703.23" y="303.5" ></text>
</g>
<g >
<title>ext4_writepages (330,598,444 samples, 0.01%)</title><rect x="1166.6" y="117" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1169.64" y="127.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (564,538,701 samples, 0.02%)</title><rect x="1169.8" y="197" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1172.76" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (700,591,427 samples, 0.03%)</title><rect x="1078.2" y="293" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1081.24" y="303.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (332,342,090 samples, 0.01%)</title><rect x="1166.6" y="165" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1169.64" y="175.5" ></text>
</g>
<g >
<title>ktime_get_real_ts64 (5,707,593,188 samples, 0.22%)</title><rect x="1112.8" y="245" width="2.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1115.83" y="255.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (2,053,009,999 samples, 0.08%)</title><rect x="1158.8" y="229" width="1.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1161.83" y="239.5" ></text>
</g>
<g >
<title>dequeue_task (361,082,529 samples, 0.01%)</title><rect x="1109.7" y="165" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1112.67" y="175.5" ></text>
</g>
<g >
<title>dequeue_entity (317,492,379 samples, 0.01%)</title><rect x="1109.7" y="133" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1112.67" y="143.5" ></text>
</g>
<g >
<title>tick_sched_timer (334,101,703 samples, 0.01%)</title><rect x="1078.3" y="213" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1081.28" y="223.5" ></text>
</g>
<g >
<title>shrink_lruvec (613,777,577 samples, 0.02%)</title><rect x="1166.2" y="197" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1169.18" y="207.5" ></text>
</g>
<g >
<title>do_notify_parent_cldstop (300,387,154 samples, 0.01%)</title><rect x="1160.6" y="181" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1163.58" y="191.5" ></text>
</g>
<g >
<title>schedule (300,413,039 samples, 0.01%)</title><rect x="1160.7" y="181" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1163.71" y="191.5" ></text>
</g>
<g >
<title>quick_write (4,217,395,184 samples, 0.16%)</title><rect x="493.7" y="229" width="1.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="496.66" y="239.5" ></text>
</g>
<g >
<title>[unknown] (678,703,587 samples, 0.03%)</title><rect x="1067.4" y="293" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1070.36" y="303.5" ></text>
</g>
<g >
<title>arch_ptrace (400,698,385 samples, 0.02%)</title><rect x="1121.1" y="245" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1124.08" y="255.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (342,721,619 samples, 0.01%)</title><rect x="1122.3" y="85" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1125.32" y="95.5" ></text>
</g>
<g >
<title>NaClLog (4,116,406,925 samples, 0.16%)</title><rect x="142.9" y="277" width="1.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="145.86" y="287.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (18,465,161,730 samples, 0.70%)</title><rect x="485.4" y="229" width="8.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="488.35" y="239.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (8,423,976,368 samples, 0.32%)</title><rect x="489.9" y="213" width="3.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="492.87" y="223.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (2,227,801,766 samples, 0.08%)</title><rect x="1186.7" y="245" width="1.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1189.74" y="255.5" ></text>
</g>
<g >
<title>__get_user_8 (454,788,885 samples, 0.02%)</title><rect x="42.4" y="69" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="45.40" y="79.5" ></text>
</g>
<g >
<title>kswapd (689,330,024 samples, 0.03%)</title><rect x="1166.2" y="261" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1169.18" y="271.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,057,097,716 samples, 0.04%)</title><rect x="1170.6" y="149" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1173.58" y="159.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (4,718,827,950 samples, 0.18%)</title><rect x="682.9" y="277" width="2.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="685.91" y="287.5" ></text>
</g>
<g >
<title>populate_seccomp_data (3,003,777,236 samples, 0.11%)</title><rect x="1148.5" y="213" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1151.55" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (276,600,997 samples, 0.01%)</title><rect x="1120.6" y="261" width="0.1" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="1123.60" y="271.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (17,219,367,982 samples, 0.66%)</title><rect x="1152.1" y="245" width="7.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1155.09" y="255.5" ></text>
</g>
<g >
<title>kthread (3,553,353,840 samples, 0.14%)</title><rect x="1165.2" y="277" width="1.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1168.20" y="287.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,008,407,156 samples, 0.08%)</title><rect x="1188.5" y="197" width="0.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1191.47" y="207.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (2,005,185,316 samples, 0.08%)</title><rect x="1188.5" y="181" width="0.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1191.47" y="191.5" ></text>
</g>
<g >
<title>ovl_write_iter (1,510,442,490 samples, 0.06%)</title><rect x="1122.0" y="213" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1124.98" y="223.5" ></text>
</g>
<g >
<title>[unknown] (250,345,269 samples, 0.01%)</title><rect x="40.1" y="197" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="43.08" y="207.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (1,506,207,455 samples, 0.06%)</title><rect x="43.8" y="277" width="0.7" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="46.78" y="287.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (751,388,504 samples, 0.03%)</title><rect x="1170.7" y="133" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1173.71" y="143.5" ></text>
</g>
<g >
<title>rest_init (1,929,197,815 samples, 0.07%)</title><rect x="1170.6" y="229" width="0.8" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1173.55" y="239.5" ></text>
</g>
<g >
<title>__entry_text_start (800,680,473 samples, 0.03%)</title><rect x="1185.0" y="293" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1188.02" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (500,914,323 samples, 0.02%)</title><rect x="1187.8" y="245" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1190.76" y="255.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (332,342,090 samples, 0.01%)</title><rect x="1166.6" y="181" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1169.64" y="191.5" ></text>
</g>
<g >
<title>copy_page (235,439,622 samples, 0.01%)</title><rect x="1165.4" y="117" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1168.36" y="127.5" ></text>
</g>
<g >
<title>NaClLog (4,316,968,006 samples, 0.16%)</title><rect x="686.2" y="277" width="1.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="689.20" y="287.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (5,339,665,463 samples, 0.20%)</title><rect x="1166.9" y="197" width="2.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1169.92" y="207.5" ></text>
</g>
<g >
<title>execute_command_internal (454,788,885 samples, 0.02%)</title><rect x="42.4" y="197" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="45.40" y="207.5" ></text>
</g>
<g >
<title>__schedule (300,709,136 samples, 0.01%)</title><rect x="1121.7" y="181" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1124.69" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (186,924,420,835 samples, 7.13%)</title><rect x="1079.4" y="293" width="84.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1082.36" y="303.5" >entry_SYS..</text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (1,966,672,746 samples, 0.07%)</title><rect x="692.3" y="277" width="0.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="695.35" y="287.5" ></text>
</g>
<g >
<title>fdarray__poll (343,282,704 samples, 0.01%)</title><rect x="42.6" y="261" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="45.60" y="271.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (3,514,085,140 samples, 0.13%)</title><rect x="45.6" y="277" width="1.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="48.63" y="287.5" ></text>
</g>
<g >
<title>wake_up_q (444,906,410 samples, 0.02%)</title><rect x="1110.1" y="213" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1113.13" y="223.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (538,841,327 samples, 0.02%)</title><rect x="42.0" y="293" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="45.02" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (250,988,095 samples, 0.01%)</title><rect x="668.3" y="181" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="671.31" y="191.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (951,206,317 samples, 0.04%)</title><rect x="1103.2" y="229" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1106.18" y="239.5" ></text>
</g>
<g >
<title>balance_pgdat (689,330,024 samples, 0.03%)</title><rect x="1166.2" y="245" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1169.18" y="255.5" ></text>
</g>
<g >
<title>NaClSysRead (853,250,046 samples, 0.03%)</title><rect x="265.8" y="261" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="268.81" y="271.5" ></text>
</g>
<g >
<title>wb_do_writeback (335,954,880 samples, 0.01%)</title><rect x="1166.6" y="213" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1169.64" y="223.5" ></text>
</g>
<g >
<title>futex_wait (1,220,112,409 samples, 0.05%)</title><rect x="1109.5" y="229" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1112.54" y="239.5" ></text>
</g>
<g >
<title>try_to_wake_up (444,906,410 samples, 0.02%)</title><rect x="1110.1" y="197" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1113.13" y="207.5" ></text>
</g>
<g >
<title>__seccomp_filter (1,101,362,797 samples, 0.04%)</title><rect x="1187.1" y="213" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1190.11" y="223.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,008,407,156 samples, 0.08%)</title><rect x="1188.5" y="213" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1191.47" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (454,788,885 samples, 0.02%)</title><rect x="42.4" y="261" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="45.40" y="271.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (688,442,269 samples, 0.03%)</title><rect x="1122.2" y="101" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1125.16" y="111.5" ></text>
</g>
<g >
<title>access_remote_vm (300,356,201 samples, 0.01%)</title><rect x="1120.9" y="197" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1123.90" y="207.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,704,732,955 samples, 0.14%)</title><rect x="1188.2" y="261" width="1.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1191.24" y="271.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1,929,197,815 samples, 0.07%)</title><rect x="1170.6" y="277" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1173.55" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_execve (454,788,885 samples, 0.02%)</title><rect x="42.4" y="101" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="45.40" y="111.5" ></text>
</g>
<g >
<title>perf_mmap__push (249,009,061 samples, 0.01%)</title><rect x="42.8" y="229" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="45.76" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (285,353,537 samples, 0.01%)</title><rect x="1078.3" y="165" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1081.30" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (450,584,631 samples, 0.02%)</title><rect x="1120.8" y="261" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1123.83" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (413,755,004 samples, 0.02%)</title><rect x="1078.3" y="261" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1081.26" y="271.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (2,008,280,439 samples, 0.08%)</title><rect x="689.5" y="277" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="692.52" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_gettimeofday (1,001,336,991 samples, 0.04%)</title><rect x="1083.4" y="277" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1086.37" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,418,475,500 samples, 0.51%)</title><rect x="35.9" y="293" width="6.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="38.89" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (1,051,410,262 samples, 0.04%)</title><rect x="1082.9" y="277" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1085.88" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (273,306,352 samples, 0.01%)</title><rect x="1170.4" y="229" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1173.39" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (963,098,550 samples, 0.04%)</title><rect x="1185.7" y="261" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1188.71" y="271.5" ></text>
</g>
<g >
<title>start_secondary (393,717,131 samples, 0.02%)</title><rect x="42.0" y="277" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="45.02" y="287.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,255,080,200 samples, 0.05%)</title><rect x="691.2" y="277" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="694.24" y="287.5" ></text>
</g>
<g >
<title>compaction_alloc (1,293,592,467 samples, 0.05%)</title><rect x="1165.6" y="181" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1168.59" y="191.5" ></text>
</g>
<g >
<title>migrate_disable (600,594,310 samples, 0.02%)</title><rect x="40.5" y="213" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="43.53" y="223.5" ></text>
</g>
<g >
<title>quick_read (3,413,734,263 samples, 0.13%)</title><rect x="288.5" y="229" width="1.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="291.53" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (237,010,011 samples, 0.01%)</title><rect x="1170.6" y="117" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1173.58" y="127.5" ></text>
</g>
<g >
<title>CompareAndSwap (4,216,797,586 samples, 0.16%)</title><rect x="679.6" y="277" width="1.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="682.56" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_write (1,678,664,366 samples, 0.06%)</title><rect x="1121.9" y="261" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1124.94" y="271.5" ></text>
</g>
<g >
<title>ktime_get_real_ts64 (500,711,555 samples, 0.02%)</title><rect x="38.1" y="245" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="41.08" y="255.5" ></text>
</g>
<g >
<title>ext4_da_write_end (354,488,381 samples, 0.01%)</title><rect x="1122.5" y="101" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1125.47" y="111.5" ></text>
</g>
<g >
<title>do_writepages (330,598,444 samples, 0.01%)</title><rect x="1166.6" y="133" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1169.64" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (38,699,803,056 samples, 1.48%)</title><rect x="1092.0" y="261" width="17.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1095.01" y="271.5" ></text>
</g>
<g >
<title>migrate_disable (3,154,006,257 samples, 0.12%)</title><rect x="1146.2" y="213" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1149.18" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (234,463,772 samples, 0.01%)</title><rect x="1167.0" y="181" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1170.03" y="191.5" ></text>
</g>
<g >
<title>futex_wait_queue (1,023,567,582 samples, 0.04%)</title><rect x="1109.6" y="213" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1112.59" y="223.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,076,951,260 samples, 0.04%)</title><rect x="1170.6" y="165" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1173.57" y="175.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (11,295,233,082 samples, 0.43%)</title><rect x="184.1" y="245" width="5.0" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="187.05" y="255.5" ></text>
</g>
</g>
</svg>
