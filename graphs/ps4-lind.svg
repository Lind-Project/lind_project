<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>do_group_exit (44 samples, 0.08%)</title><rect x="991.8" y="485" width="1.0" height="15.0" fill="rgb(216,74,10)" rx="2" ry="2" />
<text  x="994.84" y="495.5" ></text>
</g>
<g >
<title>create_empty_buffers (15 samples, 0.03%)</title><rect x="13.2" y="133" width="0.3" height="15.0" fill="rgb(240,170,18)" rx="2" ry="2" />
<text  x="16.23" y="143.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (644 samples, 1.16%)</title><rect x="691.7" y="341" width="13.7" height="15.0" fill="rgb(247,154,1)" rx="2" ry="2" />
<text  x="694.70" y="351.5" ></text>
</g>
<g >
<title>do_writepages (10 samples, 0.02%)</title><rect x="1096.8" y="373" width="0.2" height="15.0" fill="rgb(244,194,1)" rx="2" ry="2" />
<text  x="1099.82" y="383.5" ></text>
</g>
<g >
<title>std::thread::panicking (10 samples, 0.02%)</title><rect x="720.6" y="325" width="0.2" height="15.0" fill="rgb(210,146,10)" rx="2" ry="2" />
<text  x="723.60" y="335.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (9 samples, 0.02%)</title><rect x="1171.1" y="341" width="0.2" height="15.0" fill="rgb(226,19,19)" rx="2" ry="2" />
<text  x="1174.10" y="351.5" ></text>
</g>
<g >
<title>DynArrayGet (53 samples, 0.10%)</title><rect x="915.9" y="453" width="1.2" height="15.0" fill="rgb(232,14,13)" rx="2" ry="2" />
<text  x="918.93" y="463.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (18 samples, 0.03%)</title><rect x="796.8" y="325" width="0.4" height="15.0" fill="rgb(214,210,10)" rx="2" ry="2" />
<text  x="799.83" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (569 samples, 1.02%)</title><rect x="27.0" y="517" width="12.1" height="15.0" fill="rgb(228,156,45)" rx="2" ry="2" />
<text  x="30.03" y="527.5" ></text>
</g>
<g >
<title>page_cache_delete (34 samples, 0.06%)</title><rect x="1092.0" y="357" width="0.7" height="15.0" fill="rgb(222,13,50)" rx="2" ry="2" />
<text  x="1094.98" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (5 samples, 0.01%)</title><rect x="1147.3" y="405" width="0.1" height="15.0" fill="rgb(207,138,36)" rx="2" ry="2" />
<text  x="1150.34" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (26 samples, 0.05%)</title><rect x="966.4" y="517" width="0.6" height="15.0" fill="rgb(254,25,0)" rx="2" ry="2" />
<text  x="969.45" y="527.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 0.12%)</title><rect x="10.3" y="261" width="1.3" height="15.0" fill="rgb(233,162,18)" rx="2" ry="2" />
<text  x="13.28" y="271.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (235 samples, 0.42%)</title><rect x="149.3" y="357" width="5.0" height="15.0" fill="rgb(230,174,5)" rx="2" ry="2" />
<text  x="152.30" y="367.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (6 samples, 0.01%)</title><rect x="15.0" y="53" width="0.1" height="15.0" fill="rgb(235,63,3)" rx="2" ry="2" />
<text  x="17.99" y="63.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (31 samples, 0.06%)</title><rect x="13.2" y="149" width="0.7" height="15.0" fill="rgb(249,224,35)" rx="2" ry="2" />
<text  x="16.23" y="159.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (372 samples, 0.67%)</title><rect x="900.0" y="453" width="7.9" height="15.0" fill="rgb(215,128,45)" rx="2" ry="2" />
<text  x="903.05" y="463.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_try_init (25 samples, 0.04%)</title><rect x="661.8" y="325" width="0.5" height="15.0" fill="rgb(241,207,11)" rx="2" ry="2" />
<text  x="664.76" y="335.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (8,002 samples, 14.40%)</title><rect x="172.6" y="357" width="169.9" height="15.0" fill="rgb(235,36,12)" rx="2" ry="2" />
<text  x="175.57" y="367.5" >ringbuf::consumer::Co..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (5 samples, 0.01%)</title><rect x="1143.4" y="389" width="0.1" height="15.0" fill="rgb(228,97,27)" rx="2" ry="2" />
<text  x="1146.37" y="399.5" ></text>
</g>
<g >
<title>do_idle (2,623 samples, 4.72%)</title><rect x="1097.1" y="485" width="55.7" height="15.0" fill="rgb(241,12,29)" rx="2" ry="2" />
<text  x="1100.10" y="495.5" >do_idle</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (64 samples, 0.12%)</title><rect x="882.8" y="325" width="1.3" height="15.0" fill="rgb(236,89,6)" rx="2" ry="2" />
<text  x="885.79" y="335.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (5 samples, 0.01%)</title><rect x="790.8" y="309" width="0.1" height="15.0" fill="rgb(252,90,16)" rx="2" ry="2" />
<text  x="793.78" y="319.5" ></text>
</g>
<g >
<title>lind_read (20,407 samples, 36.72%)</title><rect x="126.0" y="437" width="433.4" height="15.0" fill="rgb(228,227,12)" rx="2" ry="2" />
<text  x="129.04" y="447.5" >lind_read</text>
</g>
<g >
<title>NaClGetThreadCtxSp (37 samples, 0.07%)</title><rect x="85.3" y="485" width="0.8" height="15.0" fill="rgb(246,0,53)" rx="2" ry="2" />
<text  x="88.30" y="495.5" ></text>
</g>
<g >
<title>swapper (9,287 samples, 16.71%)</title><rect x="992.8" y="549" width="197.2" height="15.0" fill="rgb(233,159,48)" rx="2" ry="2" />
<text  x="995.80" y="559.5" >swapper</text>
</g>
<g >
<title>iput_final (13 samples, 0.02%)</title><rect x="1095.3" y="277" width="0.3" height="15.0" fill="rgb(233,62,51)" rx="2" ry="2" />
<text  x="1098.32" y="287.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (49 samples, 0.09%)</title><rect x="448.1" y="277" width="1.1" height="15.0" fill="rgb(251,133,12)" rx="2" ry="2" />
<text  x="451.14" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (77 samples, 0.14%)</title><rect x="10.0" y="421" width="1.7" height="15.0" fill="rgb(218,151,33)" rx="2" ry="2" />
<text  x="13.02" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (462 samples, 0.83%)</title><rect x="797.2" y="309" width="9.8" height="15.0" fill="rgb(205,55,46)" rx="2" ry="2" />
<text  x="800.21" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1,079 samples, 1.94%)</title><rect x="319.2" y="325" width="22.9" height="15.0" fill="rgb(227,156,8)" rx="2" ry="2" />
<text  x="322.19" y="335.5" >c..</text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 0.01%)</title><rect x="1093.0" y="277" width="0.1" height="15.0" fill="rgb(238,168,8)" rx="2" ry="2" />
<text  x="1095.96" y="287.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (14 samples, 0.03%)</title><rect x="561.6" y="485" width="0.3" height="15.0" fill="rgb(243,172,15)" rx="2" ry="2" />
<text  x="564.62" y="495.5" ></text>
</g>
<g >
<title>__schedule (379 samples, 0.68%)</title><rect x="1179.5" y="389" width="8.1" height="15.0" fill="rgb(219,227,1)" rx="2" ry="2" />
<text  x="1182.53" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (9 samples, 0.02%)</title><rect x="1144.0" y="357" width="0.2" height="15.0" fill="rgb(249,182,11)" rx="2" ry="2" />
<text  x="1147.05" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (54 samples, 0.10%)</title><rect x="879.3" y="261" width="1.1" height="15.0" fill="rgb(251,126,51)" rx="2" ry="2" />
<text  x="882.28" y="271.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.04%)</title><rect x="59.5" y="485" width="0.5" height="15.0" fill="rgb(225,6,45)" rx="2" ry="2" />
<text  x="62.48" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (303 samples, 0.55%)</title><rect x="705.6" y="309" width="6.5" height="15.0" fill="rgb(223,185,3)" rx="2" ry="2" />
<text  x="708.63" y="319.5" ></text>
</g>
<g >
<title>dispatcher (13,714 samples, 24.68%)</title><rect x="607.4" y="421" width="291.2" height="15.0" fill="rgb(221,26,38)" rx="2" ry="2" />
<text  x="610.38" y="431.5" >dispatcher</text>
</g>
<g >
<title>x86_64_start_kernel (1,713 samples, 3.08%)</title><rect x="1153.5" y="517" width="36.4" height="15.0" fill="rgb(208,131,16)" rx="2" ry="2" />
<text  x="1156.54" y="527.5" >x86..</text>
</g>
<g >
<title>xas_clear_mark (6 samples, 0.01%)</title><rect x="1092.1" y="341" width="0.1" height="15.0" fill="rgb(228,14,25)" rx="2" ry="2" />
<text  x="1095.09" y="351.5" ></text>
</g>
<g >
<title>generic_exec_single (43 samples, 0.08%)</title><rect x="1184.9" y="293" width="0.9" height="15.0" fill="rgb(231,204,40)" rx="2" ry="2" />
<text  x="1187.93" y="303.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (6 samples, 0.01%)</title><rect x="1141.2" y="405" width="0.1" height="15.0" fill="rgb(229,8,43)" rx="2" ry="2" />
<text  x="1144.18" y="415.5" ></text>
</g>
<g >
<title>std::panicking::panicking (22 samples, 0.04%)</title><rect x="825.3" y="309" width="0.5" height="15.0" fill="rgb(241,125,7)" rx="2" ry="2" />
<text  x="828.33" y="319.5" ></text>
</g>
<g >
<title>prune_icache_sb (37 samples, 0.07%)</title><rect x="1095.7" y="373" width="0.8" height="15.0" fill="rgb(226,229,7)" rx="2" ry="2" />
<text  x="1098.70" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (53 samples, 0.10%)</title><rect x="815.6" y="309" width="1.1" height="15.0" fill="rgb(217,56,19)" rx="2" ry="2" />
<text  x="818.62" y="319.5" ></text>
</g>
<g >
<title>inode_lru_isolate (32 samples, 0.06%)</title><rect x="1095.8" y="325" width="0.7" height="15.0" fill="rgb(247,213,24)" rx="2" ry="2" />
<text  x="1098.81" y="335.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::is_initialized (25 samples, 0.04%)</title><rect x="661.8" y="293" width="0.5" height="15.0" fill="rgb(226,50,48)" rx="2" ry="2" />
<text  x="664.76" y="303.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (6 samples, 0.01%)</title><rect x="20.5" y="517" width="0.1" height="15.0" fill="rgb(219,4,37)" rx="2" ry="2" />
<text  x="23.51" y="527.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11 samples, 0.02%)</title><rect x="1099.9" y="389" width="0.3" height="15.0" fill="rgb(220,169,26)" rx="2" ry="2" />
<text  x="1102.92" y="399.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="125.9" y="245" width="0.1" height="15.0" fill="rgb(235,192,6)" rx="2" ry="2" />
<text  x="128.90" y="255.5" ></text>
</g>
<g >
<title>NaClMutexLock (11 samples, 0.02%)</title><rect x="963.0" y="517" width="0.2" height="15.0" fill="rgb(227,210,0)" rx="2" ry="2" />
<text  x="966.01" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7 samples, 0.01%)</title><rect x="1090.1" y="501" width="0.1" height="15.0" fill="rgb(225,142,1)" rx="2" ry="2" />
<text  x="1093.05" y="511.5" ></text>
</g>
<g >
<title>native_sched_clock (15 samples, 0.03%)</title><rect x="1170.2" y="325" width="0.3" height="15.0" fill="rgb(253,40,1)" rx="2" ry="2" />
<text  x="1173.19" y="335.5" ></text>
</g>
<g >
<title>poll_idle (629 samples, 1.13%)</title><rect x="1157.2" y="357" width="13.3" height="15.0" fill="rgb(215,134,26)" rx="2" ry="2" />
<text  x="1160.15" y="367.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (6 samples, 0.01%)</title><rect x="17.0" y="389" width="0.1" height="15.0" fill="rgb(246,21,43)" rx="2" ry="2" />
<text  x="19.99" y="399.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (7 samples, 0.01%)</title><rect x="1096.8" y="341" width="0.2" height="15.0" fill="rgb(230,202,54)" rx="2" ry="2" />
<text  x="1099.82" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (10 samples, 0.02%)</title><rect x="746.0" y="245" width="0.2" height="15.0" fill="rgb(239,190,8)" rx="2" ry="2" />
<text  x="748.97" y="255.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (9 samples, 0.02%)</title><rect x="64.7" y="517" width="0.2" height="15.0" fill="rgb(214,81,26)" rx="2" ry="2" />
<text  x="67.70" y="527.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (5 samples, 0.01%)</title><rect x="125.9" y="373" width="0.1" height="15.0" fill="rgb(227,69,14)" rx="2" ry="2" />
<text  x="128.90" y="383.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (8 samples, 0.01%)</title><rect x="449.0" y="261" width="0.2" height="15.0" fill="rgb(247,138,21)" rx="2" ry="2" />
<text  x="452.01" y="271.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.03%)</title><rect x="990.8" y="485" width="0.3" height="15.0" fill="rgb(244,80,20)" rx="2" ry="2" />
<text  x="993.78" y="495.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (23 samples, 0.04%)</title><rect x="1175.5" y="309" width="0.5" height="15.0" fill="rgb(238,184,47)" rx="2" ry="2" />
<text  x="1178.50" y="319.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (21 samples, 0.04%)</title><rect x="992.3" y="309" width="0.5" height="15.0" fill="rgb(220,65,52)" rx="2" ry="2" />
<text  x="995.33" y="319.5" ></text>
</g>
<g >
<title>isolate_freepages_block (5 samples, 0.01%)</title><rect x="1090.9" y="389" width="0.1" height="15.0" fill="rgb(244,218,11)" rx="2" ry="2" />
<text  x="1093.88" y="399.5" ></text>
</g>
<g >
<title>poll_idle (403 samples, 0.73%)</title><rect x="1132.2" y="421" width="8.6" height="15.0" fill="rgb(235,211,23)" rx="2" ry="2" />
<text  x="1135.22" y="431.5" ></text>
</g>
<g >
<title>process_one_work (24 samples, 0.04%)</title><rect x="1096.5" y="485" width="0.5" height="15.0" fill="rgb(234,42,43)" rx="2" ry="2" />
<text  x="1099.53" y="495.5" ></text>
</g>
<g >
<title>__handle_mm_fault (94 samples, 0.17%)</title><rect x="958.5" y="453" width="2.0" height="15.0" fill="rgb(232,174,23)" rx="2" ry="2" />
<text  x="961.53" y="463.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (20 samples, 0.04%)</title><rect x="1098.5" y="325" width="0.4" height="15.0" fill="rgb(208,55,34)" rx="2" ry="2" />
<text  x="1101.48" y="335.5" ></text>
</g>
<g >
<title>newidle_balance (193 samples, 0.35%)</title><rect x="1147.3" y="421" width="4.1" height="15.0" fill="rgb(207,181,33)" rx="2" ry="2" />
<text  x="1150.26" y="431.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (13 samples, 0.02%)</title><rect x="19.0" y="517" width="0.3" height="15.0" fill="rgb(253,81,5)" rx="2" ry="2" />
<text  x="21.98" y="527.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (27 samples, 0.05%)</title><rect x="56.9" y="453" width="0.6" height="15.0" fill="rgb(238,151,2)" rx="2" ry="2" />
<text  x="59.88" y="463.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (5 samples, 0.01%)</title><rect x="907.9" y="453" width="0.2" height="15.0" fill="rgb(211,89,15)" rx="2" ry="2" />
<text  x="910.95" y="463.5" ></text>
</g>
<g >
<title>add_wait_queue (5 samples, 0.01%)</title><rect x="11.9" y="341" width="0.1" height="15.0" fill="rgb(252,33,4)" rx="2" ry="2" />
<text  x="14.93" y="351.5" ></text>
</g>
<g >
<title>do_idle (1,666 samples, 3.00%)</title><rect x="1153.6" y="421" width="35.4" height="15.0" fill="rgb(238,67,45)" rx="2" ry="2" />
<text  x="1156.60" y="431.5" >do..</text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (13 samples, 0.02%)</title><rect x="18.3" y="517" width="0.3" height="15.0" fill="rgb(224,100,36)" rx="2" ry="2" />
<text  x="21.35" y="527.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (18 samples, 0.03%)</title><rect x="16.4" y="149" width="0.4" height="15.0" fill="rgb(247,150,44)" rx="2" ry="2" />
<text  x="19.43" y="159.5" ></text>
</g>
<g >
<title>dispatcher (20,407 samples, 36.72%)</title><rect x="126.0" y="421" width="433.4" height="15.0" fill="rgb(223,118,10)" rx="2" ry="2" />
<text  x="129.04" y="431.5" >dispatcher</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (11 samples, 0.02%)</title><rect x="60.9" y="469" width="0.3" height="15.0" fill="rgb(233,51,46)" rx="2" ry="2" />
<text  x="63.94" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock (5 samples, 0.01%)</title><rect x="1143.7" y="389" width="0.1" height="15.0" fill="rgb(215,74,13)" rx="2" ry="2" />
<text  x="1146.67" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (20,404 samples, 36.72%)</title><rect x="126.1" y="373" width="433.2" height="15.0" fill="rgb(254,162,52)" rx="2" ry="2" />
<text  x="129.09" y="383.5" >rustposix::interface::pipe::EmulatedPipe::read_from_pipe</text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (10 samples, 0.02%)</title><rect x="720.6" y="293" width="0.2" height="15.0" fill="rgb(224,23,14)" rx="2" ry="2" />
<text  x="723.60" y="303.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (23 samples, 0.04%)</title><rect x="879.6" y="245" width="0.5" height="15.0" fill="rgb(227,141,38)" rx="2" ry="2" />
<text  x="882.58" y="255.5" ></text>
</g>
<g >
<title>sync_regs (17 samples, 0.03%)</title><rect x="960.6" y="517" width="0.4" height="15.0" fill="rgb(224,90,31)" rx="2" ry="2" />
<text  x="963.61" y="527.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (16 samples, 0.03%)</title><rect x="13.5" y="133" width="0.4" height="15.0" fill="rgb(212,217,39)" rx="2" ry="2" />
<text  x="16.55" y="143.5" ></text>
</g>
<g >
<title>newidle_balance (313 samples, 0.56%)</title><rect x="1180.4" y="357" width="6.6" height="15.0" fill="rgb(236,65,13)" rx="2" ry="2" />
<text  x="1183.40" y="367.5" ></text>
</g>
<g >
<title>perf_mmap__push (212 samples, 0.38%)</title><rect x="12.4" y="453" width="4.5" height="15.0" fill="rgb(251,173,20)" rx="2" ry="2" />
<text  x="15.40" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (7 samples, 0.01%)</title><rect x="125.9" y="437" width="0.1" height="15.0" fill="rgb(243,1,45)" rx="2" ry="2" />
<text  x="128.85" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (78 samples, 0.14%)</title><rect x="808.7" y="261" width="1.6" height="15.0" fill="rgb(213,16,7)" rx="2" ry="2" />
<text  x="811.66" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2,603 samples, 4.68%)</title><rect x="495.3" y="277" width="55.3" height="15.0" fill="rgb(238,215,9)" rx="2" ry="2" />
<text  x="498.35" y="287.5" >__mem..</text>
</g>
<g >
<title>exc_page_fault (105 samples, 0.19%)</title><rect x="958.4" y="501" width="2.2" height="15.0" fill="rgb(217,180,27)" rx="2" ry="2" />
<text  x="961.36" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (27 samples, 0.05%)</title><rect x="1187.7" y="405" width="0.5" height="15.0" fill="rgb(238,176,51)" rx="2" ry="2" />
<text  x="1190.66" y="415.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (30 samples, 0.05%)</title><rect x="880.4" y="261" width="0.7" height="15.0" fill="rgb(251,68,32)" rx="2" ry="2" />
<text  x="883.43" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.08%)</title><rect x="991.8" y="533" width="1.0" height="15.0" fill="rgb(227,143,25)" rx="2" ry="2" />
<text  x="994.84" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (120 samples, 0.22%)</title><rect x="816.9" y="245" width="2.5" height="15.0" fill="rgb(224,52,22)" rx="2" ry="2" />
<text  x="819.90" y="255.5" ></text>
</g>
<g >
<title>sched_clock_cpu (16 samples, 0.03%)</title><rect x="1170.2" y="341" width="0.3" height="15.0" fill="rgb(216,47,9)" rx="2" ry="2" />
<text  x="1173.17" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (576 samples, 1.04%)</title><rect x="859.9" y="341" width="12.3" height="15.0" fill="rgb(212,59,11)" rx="2" ry="2" />
<text  x="862.94" y="351.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (462 samples, 0.83%)</title><rect x="797.2" y="341" width="9.8" height="15.0" fill="rgb(251,132,43)" rx="2" ry="2" />
<text  x="800.21" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (15 samples, 0.03%)</title><rect x="566.1" y="421" width="0.3" height="15.0" fill="rgb(227,1,49)" rx="2" ry="2" />
<text  x="569.08" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (44 samples, 0.08%)</title><rect x="991.8" y="501" width="1.0" height="15.0" fill="rgb(219,11,20)" rx="2" ry="2" />
<text  x="994.84" y="511.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (151 samples, 0.27%)</title><rect x="878.5" y="341" width="3.2" height="15.0" fill="rgb(238,45,12)" rx="2" ry="2" />
<text  x="881.50" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="874.5" y="277" width="0.3" height="15.0" fill="rgb(251,157,3)" rx="2" ry="2" />
<text  x="877.53" y="287.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (17 samples, 0.03%)</title><rect x="89.9" y="485" width="0.3" height="15.0" fill="rgb(243,59,28)" rx="2" ry="2" />
<text  x="92.88" y="495.5" ></text>
</g>
<g >
<title>read_tsc (8 samples, 0.01%)</title><rect x="1152.1" y="453" width="0.2" height="15.0" fill="rgb(248,1,25)" rx="2" ry="2" />
<text  x="1155.10" y="463.5" ></text>
</g>
<g >
<title>clear_page_erms (27 samples, 0.05%)</title><rect x="958.9" y="357" width="0.5" height="15.0" fill="rgb(212,229,7)" rx="2" ry="2" />
<text  x="961.87" y="367.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (667 samples, 1.20%)</title><rect x="561.9" y="485" width="14.2" height="15.0" fill="rgb(232,124,13)" rx="2" ry="2" />
<text  x="564.92" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (12 samples, 0.02%)</title><rect x="1174.6" y="325" width="0.3" height="15.0" fill="rgb(242,126,51)" rx="2" ry="2" />
<text  x="1177.65" y="335.5" ></text>
</g>
<g >
<title>vfs_write (6 samples, 0.01%)</title><rect x="17.0" y="469" width="0.1" height="15.0" fill="rgb(228,144,51)" rx="2" ry="2" />
<text  x="19.99" y="479.5" ></text>
</g>
<g >
<title>do_shrink_slab (81 samples, 0.15%)</title><rect x="1094.8" y="405" width="1.7" height="15.0" fill="rgb(237,200,36)" rx="2" ry="2" />
<text  x="1097.77" y="415.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (10 samples, 0.02%)</title><rect x="12.7" y="165" width="0.3" height="15.0" fill="rgb(208,170,47)" rx="2" ry="2" />
<text  x="15.74" y="175.5" ></text>
</g>
<g >
<title>__ioctl (77 samples, 0.14%)</title><rect x="10.0" y="437" width="1.7" height="15.0" fill="rgb(219,32,6)" rx="2" ry="2" />
<text  x="13.02" y="447.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (431 samples, 0.78%)</title><rect x="564.1" y="453" width="9.1" height="15.0" fill="rgb(218,108,35)" rx="2" ry="2" />
<text  x="567.08" y="463.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (7 samples, 0.01%)</title><rect x="125.9" y="501" width="0.1" height="15.0" fill="rgb(215,119,43)" rx="2" ry="2" />
<text  x="128.85" y="511.5" ></text>
</g>
<g >
<title>wb_do_writeback (10 samples, 0.02%)</title><rect x="1096.8" y="453" width="0.2" height="15.0" fill="rgb(217,47,11)" rx="2" ry="2" />
<text  x="1099.82" y="463.5" ></text>
</g>
<g >
<title>menu_select (190 samples, 0.34%)</title><rect x="1172.1" y="373" width="4.1" height="15.0" fill="rgb(219,158,34)" rx="2" ry="2" />
<text  x="1175.12" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1,333 samples, 2.40%)</title><rect x="456.4" y="309" width="28.4" height="15.0" fill="rgb(212,7,17)" rx="2" ry="2" />
<text  x="459.45" y="319.5" >c..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (271 samples, 0.49%)</title><rect x="909.3" y="453" width="5.8" height="15.0" fill="rgb(221,138,17)" rx="2" ry="2" />
<text  x="912.33" y="463.5" ></text>
</g>
<g >
<title>sched_clock_cpu (14 samples, 0.03%)</title><rect x="1141.3" y="421" width="0.3" height="15.0" fill="rgb(217,88,9)" rx="2" ry="2" />
<text  x="1144.33" y="431.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (601 samples, 1.08%)</title><rect x="859.4" y="373" width="12.8" height="15.0" fill="rgb(248,52,21)" rx="2" ry="2" />
<text  x="862.41" y="383.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (387 samples, 0.70%)</title><rect x="712.1" y="309" width="8.2" height="15.0" fill="rgb(210,41,9)" rx="2" ry="2" />
<text  x="715.06" y="319.5" ></text>
</g>
<g >
<title>rcu_idle_exit (31 samples, 0.06%)</title><rect x="1170.8" y="357" width="0.6" height="15.0" fill="rgb(223,115,43)" rx="2" ry="2" />
<text  x="1173.76" y="367.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.02%)</title><rect x="990.5" y="469" width="0.3" height="15.0" fill="rgb(233,217,4)" rx="2" ry="2" />
<text  x="993.53" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (13 samples, 0.02%)</title><rect x="60.4" y="501" width="0.2" height="15.0" fill="rgb(240,126,7)" rx="2" ry="2" />
<text  x="63.37" y="511.5" ></text>
</g>
<g >
<title>rcu_do_batch (5 samples, 0.01%)</title><rect x="1093.0" y="229" width="0.1" height="15.0" fill="rgb(225,81,38)" rx="2" ry="2" />
<text  x="1095.96" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="125.9" y="85" width="0.1" height="15.0" fill="rgb(217,196,42)" rx="2" ry="2" />
<text  x="128.90" y="95.5" ></text>
</g>
<g >
<title>do_epoll_pwait.part.0 (5 samples, 0.01%)</title><rect x="1089.9" y="485" width="0.2" height="15.0" fill="rgb(236,19,32)" rx="2" ry="2" />
<text  x="1092.94" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (62 samples, 0.11%)</title><rect x="23.4" y="517" width="1.3" height="15.0" fill="rgb(250,13,15)" rx="2" ry="2" />
<text  x="26.42" y="527.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (8 samples, 0.01%)</title><rect x="15.3" y="133" width="0.2" height="15.0" fill="rgb(252,72,30)" rx="2" ry="2" />
<text  x="18.31" y="143.5" ></text>
</g>
<g >
<title>alx_clean_tx_irq (6 samples, 0.01%)</title><rect x="1099.1" y="277" width="0.1" height="15.0" fill="rgb(239,43,8)" rx="2" ry="2" />
<text  x="1102.12" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.02%)</title><rect x="16.9" y="517" width="0.2" height="15.0" fill="rgb(240,36,44)" rx="2" ry="2" />
<text  x="19.90" y="527.5" ></text>
</g>
<g >
<title>xas_store (23 samples, 0.04%)</title><rect x="1092.2" y="341" width="0.5" height="15.0" fill="rgb(207,103,52)" rx="2" ry="2" />
<text  x="1095.22" y="351.5" ></text>
</g>
<g >
<title>kcompactd (16 samples, 0.03%)</title><rect x="1090.7" y="501" width="0.3" height="15.0" fill="rgb(231,42,14)" rx="2" ry="2" />
<text  x="1093.67" y="511.5" ></text>
</g>
<g >
<title>CompareAndSwap (659 samples, 1.19%)</title><rect x="96.6" y="485" width="13.9" height="15.0" fill="rgb(253,83,14)" rx="2" ry="2" />
<text  x="99.55" y="495.5" ></text>
</g>
<g >
<title>dispatcher (47 samples, 0.08%)</title><rect x="965.4" y="517" width="1.0" height="15.0" fill="rgb(218,31,33)" rx="2" ry="2" />
<text  x="968.45" y="527.5" ></text>
</g>
<g >
<title>sched_clock_cpu (7 samples, 0.01%)</title><rect x="1152.3" y="437" width="0.1" height="15.0" fill="rgb(242,179,42)" rx="2" ry="2" />
<text  x="1155.27" y="447.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1,583 samples, 2.85%)</title><rect x="825.8" y="357" width="33.6" height="15.0" fill="rgb(243,203,5)" rx="2" ry="2" />
<text  x="828.79" y="367.5" >st..</text>
</g>
<g >
<title>NaClXMutexLock (15 samples, 0.03%)</title><rect x="922.3" y="501" width="0.4" height="15.0" fill="rgb(243,14,46)" rx="2" ry="2" />
<text  x="925.34" y="511.5" ></text>
</g>
<g >
<title>__invalidate_mapping_pages (31 samples, 0.06%)</title><rect x="1095.8" y="293" width="0.7" height="15.0" fill="rgb(235,209,54)" rx="2" ry="2" />
<text  x="1098.81" y="303.5" ></text>
</g>
<g >
<title>net_rx_action (23 samples, 0.04%)</title><rect x="1099.0" y="325" width="0.5" height="15.0" fill="rgb(247,218,20)" rx="2" ry="2" />
<text  x="1101.99" y="335.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (32 samples, 0.06%)</title><rect x="1174.2" y="341" width="0.7" height="15.0" fill="rgb(221,82,35)" rx="2" ry="2" />
<text  x="1177.24" y="351.5" ></text>
</g>
<g >
<title>llist_reverse_order (27 samples, 0.05%)</title><rect x="1177.9" y="389" width="0.5" height="15.0" fill="rgb(219,185,33)" rx="2" ry="2" />
<text  x="1180.88" y="399.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (202 samples, 0.36%)</title><rect x="12.6" y="213" width="4.3" height="15.0" fill="rgb(246,193,16)" rx="2" ry="2" />
<text  x="15.61" y="223.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (11 samples, 0.02%)</title><rect x="881.1" y="261" width="0.2" height="15.0" fill="rgb(233,26,32)" rx="2" ry="2" />
<text  x="884.07" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (10 samples, 0.02%)</title><rect x="1174.4" y="325" width="0.2" height="15.0" fill="rgb(229,60,36)" rx="2" ry="2" />
<text  x="1177.37" y="335.5" ></text>
</g>
<g >
<title>generic_perform_write (6 samples, 0.01%)</title><rect x="17.0" y="341" width="0.1" height="15.0" fill="rgb(244,153,18)" rx="2" ry="2" />
<text  x="19.99" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (433 samples, 0.78%)</title><rect x="872.5" y="357" width="9.2" height="15.0" fill="rgb(230,177,43)" rx="2" ry="2" />
<text  x="875.51" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (14 samples, 0.03%)</title><rect x="796.3" y="293" width="0.3" height="15.0" fill="rgb(245,199,26)" rx="2" ry="2" />
<text  x="799.26" y="303.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (250 samples, 0.45%)</title><rect x="810.3" y="261" width="5.3" height="15.0" fill="rgb(230,33,11)" rx="2" ry="2" />
<text  x="813.31" y="271.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (25 samples, 0.04%)</title><rect x="788.2" y="277" width="0.5" height="15.0" fill="rgb(235,100,25)" rx="2" ry="2" />
<text  x="791.21" y="287.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (19 samples, 0.03%)</title><rect x="16.4" y="165" width="0.4" height="15.0" fill="rgb(245,70,19)" rx="2" ry="2" />
<text  x="19.41" y="175.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1,791 samples, 3.22%)</title><rect x="746.4" y="293" width="38.0" height="15.0" fill="rgb(250,185,41)" rx="2" ry="2" />
<text  x="749.38" y="303.5" >__p..</text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (16 samples, 0.03%)</title><rect x="825.0" y="309" width="0.3" height="15.0" fill="rgb(229,44,27)" rx="2" ry="2" />
<text  x="827.99" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (49 samples, 0.09%)</title><rect x="876.7" y="277" width="1.0" height="15.0" fill="rgb(222,56,5)" rx="2" ry="2" />
<text  x="879.67" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (249 samples, 0.45%)</title><rect x="438.4" y="277" width="5.3" height="15.0" fill="rgb(241,44,49)" rx="2" ry="2" />
<text  x="441.44" y="287.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.03%)</title><rect x="990.8" y="469" width="0.3" height="15.0" fill="rgb(232,17,45)" rx="2" ry="2" />
<text  x="993.78" y="479.5" ></text>
</g>
<g >
<title>file_update_time (5 samples, 0.01%)</title><rect x="12.6" y="165" width="0.1" height="15.0" fill="rgb(210,55,23)" rx="2" ry="2" />
<text  x="15.61" y="175.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (5 samples, 0.01%)</title><rect x="1142.2" y="421" width="0.1" height="15.0" fill="rgb(216,10,8)" rx="2" ry="2" />
<text  x="1145.20" y="431.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (6 samples, 0.01%)</title><rect x="959.9" y="405" width="0.1" height="15.0" fill="rgb(254,59,32)" rx="2" ry="2" />
<text  x="962.86" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (1,800 samples, 3.24%)</title><rect x="746.2" y="309" width="38.2" height="15.0" fill="rgb(211,20,3)" rx="2" ry="2" />
<text  x="749.19" y="319.5" >std..</text>
</g>
<g >
<title>get_typical_interval (17 samples, 0.03%)</title><rect x="1142.4" y="421" width="0.3" height="15.0" fill="rgb(220,117,7)" rx="2" ry="2" />
<text  x="1145.35" y="431.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (51 samples, 0.09%)</title><rect x="1148.1" y="389" width="1.1" height="15.0" fill="rgb(222,61,49)" rx="2" ry="2" />
<text  x="1151.15" y="399.5" ></text>
</g>
<g >
<title>NaClHostDescRead (20,407 samples, 36.72%)</title><rect x="126.0" y="453" width="433.4" height="15.0" fill="rgb(250,2,27)" rx="2" ry="2" />
<text  x="129.04" y="463.5" >NaClHostDescRead</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (1,827 samples, 3.29%)</title><rect x="746.0" y="357" width="38.8" height="15.0" fill="rgb(207,223,24)" rx="2" ry="2" />
<text  x="748.97" y="367.5" >cor..</text>
</g>
<g >
<title>exit_mm (44 samples, 0.08%)</title><rect x="991.8" y="453" width="1.0" height="15.0" fill="rgb(241,3,34)" rx="2" ry="2" />
<text  x="994.84" y="463.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (214 samples, 0.39%)</title><rect x="12.4" y="469" width="4.5" height="15.0" fill="rgb(241,148,16)" rx="2" ry="2" />
<text  x="15.36" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (1,384 samples, 2.49%)</title><rect x="662.3" y="373" width="29.4" height="15.0" fill="rgb(244,223,16)" rx="2" ry="2" />
<text  x="665.31" y="383.5" >co..</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (20 samples, 0.04%)</title><rect x="1099.5" y="389" width="0.4" height="15.0" fill="rgb(249,99,13)" rx="2" ry="2" />
<text  x="1102.48" y="399.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (24 samples, 0.04%)</title><rect x="20.9" y="517" width="0.5" height="15.0" fill="rgb(205,134,30)" rx="2" ry="2" />
<text  x="23.89" y="527.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (9 samples, 0.02%)</title><rect x="859.7" y="293" width="0.2" height="15.0" fill="rgb(214,162,53)" rx="2" ry="2" />
<text  x="862.66" y="303.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (16 samples, 0.03%)</title><rect x="13.5" y="117" width="0.4" height="15.0" fill="rgb(244,97,4)" rx="2" ry="2" />
<text  x="16.55" y="127.5" ></text>
</g>
<g >
<title>worker_thread (25 samples, 0.04%)</title><rect x="1096.5" y="501" width="0.6" height="15.0" fill="rgb(222,190,18)" rx="2" ry="2" />
<text  x="1099.53" y="511.5" ></text>
</g>
<g >
<title>ret_from_fork (301 samples, 0.54%)</title><rect x="1090.7" y="533" width="6.4" height="15.0" fill="rgb(205,163,46)" rx="2" ry="2" />
<text  x="1093.67" y="543.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (6 samples, 0.01%)</title><rect x="1171.3" y="341" width="0.1" height="15.0" fill="rgb(235,193,31)" rx="2" ry="2" />
<text  x="1174.29" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.02%)</title><rect x="990.5" y="453" width="0.3" height="15.0" fill="rgb(245,154,19)" rx="2" ry="2" />
<text  x="993.53" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (349 samples, 0.63%)</title><rect x="698.0" y="309" width="7.4" height="15.0" fill="rgb(216,73,32)" rx="2" ry="2" />
<text  x="700.96" y="319.5" ></text>
</g>
<g >
<title>generic_exec_single (21 samples, 0.04%)</title><rect x="1149.9" y="357" width="0.5" height="15.0" fill="rgb(229,76,44)" rx="2" ry="2" />
<text  x="1152.93" y="367.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (21 samples, 0.04%)</title><rect x="859.4" y="357" width="0.5" height="15.0" fill="rgb(221,135,24)" rx="2" ry="2" />
<text  x="862.41" y="367.5" ></text>
</g>
<g >
<title>ovl_write_iter (6 samples, 0.01%)</title><rect x="17.0" y="437" width="0.1" height="15.0" fill="rgb(236,65,29)" rx="2" ry="2" />
<text  x="19.99" y="447.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (16 samples, 0.03%)</title><rect x="1143.9" y="373" width="0.3" height="15.0" fill="rgb(225,95,14)" rx="2" ry="2" />
<text  x="1146.90" y="383.5" ></text>
</g>
<g >
<title>xas_create (13 samples, 0.02%)</title><rect x="1092.4" y="325" width="0.3" height="15.0" fill="rgb(216,65,50)" rx="2" ry="2" />
<text  x="1095.43" y="335.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (1,058 samples, 1.90%)</title><rect x="720.8" y="341" width="22.5" height="15.0" fill="rgb(220,56,5)" rx="2" ry="2" />
<text  x="723.81" y="351.5" >s..</text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (5 samples, 0.01%)</title><rect x="125.9" y="165" width="0.1" height="15.0" fill="rgb(241,139,39)" rx="2" ry="2" />
<text  x="128.90" y="175.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (10,213 samples, 18.38%)</title><rect x="342.5" y="357" width="216.8" height="15.0" fill="rgb(214,98,24)" rx="2" ry="2" />
<text  x="345.48" y="367.5" >ringbuf::consumer::Consumer&lt;..</text>
</g>
<g >
<title>tick_nohz_get_sleep_length (54 samples, 0.10%)</title><rect x="1143.1" y="421" width="1.2" height="15.0" fill="rgb(231,217,7)" rx="2" ry="2" />
<text  x="1146.14" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (118 samples, 0.21%)</title><rect x="878.8" y="277" width="2.5" height="15.0" fill="rgb(248,142,18)" rx="2" ry="2" />
<text  x="881.79" y="287.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (10 samples, 0.02%)</title><rect x="1099.3" y="245" width="0.2" height="15.0" fill="rgb(225,132,28)" rx="2" ry="2" />
<text  x="1102.27" y="255.5" ></text>
</g>
<g >
<title>fdarray__poll (31 samples, 0.06%)</title><rect x="11.7" y="485" width="0.6" height="15.0" fill="rgb(225,107,45)" rx="2" ry="2" />
<text  x="14.66" y="495.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (179 samples, 0.32%)</title><rect x="150.5" y="325" width="3.8" height="15.0" fill="rgb(207,74,36)" rx="2" ry="2" />
<text  x="153.48" y="335.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (18 samples, 0.03%)</title><rect x="110.5" y="501" width="0.4" height="15.0" fill="rgb(230,65,39)" rx="2" ry="2" />
<text  x="113.54" y="511.5" ></text>
</g>
<g >
<title>shrink_inactive_list (164 samples, 0.30%)</title><rect x="1091.2" y="421" width="3.5" height="15.0" fill="rgb(249,92,31)" rx="2" ry="2" />
<text  x="1094.18" y="431.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (5 samples, 0.01%)</title><rect x="125.9" y="213" width="0.1" height="15.0" fill="rgb(247,19,2)" rx="2" ry="2" />
<text  x="128.90" y="223.5" ></text>
</g>
<g >
<title>vfs_iter_write (6 samples, 0.01%)</title><rect x="17.0" y="421" width="0.1" height="15.0" fill="rgb(210,28,6)" rx="2" ry="2" />
<text  x="19.99" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (644 samples, 1.16%)</title><rect x="691.7" y="373" width="13.7" height="15.0" fill="rgb(242,199,25)" rx="2" ry="2" />
<text  x="694.70" y="383.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (425 samples, 0.76%)</title><rect x="899.0" y="469" width="9.1" height="15.0" fill="rgb(222,121,48)" rx="2" ry="2" />
<text  x="902.03" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1,036 samples, 1.86%)</title><rect x="721.3" y="309" width="22.0" height="15.0" fill="rgb(237,147,31)" rx="2" ry="2" />
<text  x="724.28" y="319.5" >s..</text>
</g>
<g >
<title>read_tsc (13 samples, 0.02%)</title><rect x="1187.8" y="389" width="0.3" height="15.0" fill="rgb(243,50,36)" rx="2" ry="2" />
<text  x="1190.79" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (29 samples, 0.05%)</title><rect x="11.7" y="437" width="0.6" height="15.0" fill="rgb(224,157,12)" rx="2" ry="2" />
<text  x="14.68" y="447.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,660 samples, 4.79%)</title><rect x="1097.1" y="501" width="56.4" height="15.0" fill="rgb(227,107,49)" rx="2" ry="2" />
<text  x="1100.06" y="511.5" >cpu_s..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (374 samples, 0.67%)</title><rect x="625.9" y="341" width="8.0" height="15.0" fill="rgb(219,87,33)" rx="2" ry="2" />
<text  x="628.92" y="351.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (17 samples, 0.03%)</title><rect x="784.4" y="341" width="0.4" height="15.0" fill="rgb(212,131,24)" rx="2" ry="2" />
<text  x="787.41" y="351.5" ></text>
</g>
<g >
<title>get_page_from_freelist (29 samples, 0.05%)</title><rect x="14.5" y="85" width="0.6" height="15.0" fill="rgb(225,5,52)" rx="2" ry="2" />
<text  x="17.50" y="95.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.01%)</title><rect x="125.9" y="261" width="0.1" height="15.0" fill="rgb(250,7,34)" rx="2" ry="2" />
<text  x="128.90" y="271.5" ></text>
</g>
<g >
<title>___sys_recvmsg (5 samples, 0.01%)</title><rect x="1090.4" y="469" width="0.1" height="15.0" fill="rgb(243,195,19)" rx="2" ry="2" />
<text  x="1093.37" y="479.5" ></text>
</g>
<g >
<title>wb_workfn (10 samples, 0.02%)</title><rect x="1096.8" y="469" width="0.2" height="15.0" fill="rgb(227,73,18)" rx="2" ry="2" />
<text  x="1099.82" y="479.5" ></text>
</g>
<g >
<title>evict (9 samples, 0.02%)</title><rect x="1095.4" y="261" width="0.2" height="15.0" fill="rgb(213,43,34)" rx="2" ry="2" />
<text  x="1098.36" y="271.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (235 samples, 0.42%)</title><rect x="149.3" y="341" width="5.0" height="15.0" fill="rgb(235,153,11)" rx="2" ry="2" />
<text  x="152.30" y="351.5" ></text>
</g>
<g >
<title>event_function (64 samples, 0.12%)</title><rect x="10.3" y="245" width="1.3" height="15.0" fill="rgb(229,182,18)" rx="2" ry="2" />
<text  x="13.28" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5 samples, 0.01%)</title><rect x="1093.0" y="341" width="0.1" height="15.0" fill="rgb(223,191,4)" rx="2" ry="2" />
<text  x="1095.96" y="351.5" ></text>
</g>
<g >
<title>__remove_mapping (8 samples, 0.01%)</title><rect x="1096.0" y="245" width="0.2" height="15.0" fill="rgb(238,128,30)" rx="2" ry="2" />
<text  x="1099.02" y="255.5" ></text>
</g>
<g >
<title>native_sched_clock (6 samples, 0.01%)</title><rect x="1188.1" y="357" width="0.1" height="15.0" fill="rgb(240,204,50)" rx="2" ry="2" />
<text  x="1191.07" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,384 samples, 2.49%)</title><rect x="662.3" y="357" width="29.4" height="15.0" fill="rgb(248,174,28)" rx="2" ry="2" />
<text  x="665.31" y="367.5" >&lt;a..</text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (127 samples, 0.23%)</title><rect x="816.7" y="277" width="2.7" height="15.0" fill="rgb(205,1,12)" rx="2" ry="2" />
<text  x="819.75" y="287.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (23 samples, 0.04%)</title><rect x="816.3" y="277" width="0.4" height="15.0" fill="rgb(219,131,10)" rx="2" ry="2" />
<text  x="819.26" y="287.5" ></text>
</g>
<g >
<title>NaClValidateCode (35 samples, 0.06%)</title><rect x="125.0" y="453" width="0.8" height="15.0" fill="rgb(230,208,50)" rx="2" ry="2" />
<text  x="128.05" y="463.5" ></text>
</g>
<g >
<title>generic_write_end (40 samples, 0.07%)</title><rect x="15.5" y="149" width="0.8" height="15.0" fill="rgb(211,136,15)" rx="2" ry="2" />
<text  x="18.50" y="159.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (120 samples, 0.22%)</title><rect x="816.9" y="261" width="2.5" height="15.0" fill="rgb(253,26,1)" rx="2" ry="2" />
<text  x="819.90" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (112 samples, 0.20%)</title><rect x="821.9" y="261" width="2.4" height="15.0" fill="rgb(214,222,54)" rx="2" ry="2" />
<text  x="824.93" y="271.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.05%)</title><rect x="820.9" y="261" width="0.6" height="15.0" fill="rgb(208,162,3)" rx="2" ry="2" />
<text  x="823.91" y="271.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (5 samples, 0.01%)</title><rect x="125.9" y="341" width="0.1" height="15.0" fill="rgb(232,100,31)" rx="2" ry="2" />
<text  x="128.90" y="351.5" ></text>
</g>
<g >
<title>native_sched_clock (12 samples, 0.02%)</title><rect x="1187.3" y="341" width="0.3" height="15.0" fill="rgb(244,10,49)" rx="2" ry="2" />
<text  x="1190.32" y="351.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (6,793 samples, 12.22%)</title><rect x="198.2" y="341" width="144.3" height="15.0" fill="rgb(206,154,50)" rx="2" ry="2" />
<text  x="201.24" y="351.5" >ringbuf::ring_buff..</text>
</g>
<g >
<title>rcu_do_batch (7 samples, 0.01%)</title><rect x="1099.9" y="293" width="0.2" height="15.0" fill="rgb(227,213,35)" rx="2" ry="2" />
<text  x="1102.92" y="303.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (13 samples, 0.02%)</title><rect x="60.4" y="453" width="0.2" height="15.0" fill="rgb(232,161,51)" rx="2" ry="2" />
<text  x="63.37" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (20,406 samples, 36.72%)</title><rect x="126.1" y="389" width="433.3" height="15.0" fill="rgb(207,219,51)" rx="2" ry="2" />
<text  x="129.07" y="399.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (156 samples, 0.28%)</title><rect x="57.9" y="517" width="3.3" height="15.0" fill="rgb(219,123,13)" rx="2" ry="2" />
<text  x="60.86" y="527.5" ></text>
</g>
<g >
<title>page_remove_rmap (5 samples, 0.01%)</title><rect x="992.2" y="325" width="0.1" height="15.0" fill="rgb(254,91,48)" rx="2" ry="2" />
<text  x="995.23" y="335.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (12 samples, 0.02%)</title><rect x="576.8" y="485" width="0.2" height="15.0" fill="rgb(217,16,18)" rx="2" ry="2" />
<text  x="579.76" y="495.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (20,408 samples, 36.72%)</title><rect x="126.0" y="501" width="433.4" height="15.0" fill="rgb(239,91,43)" rx="2" ry="2" />
<text  x="129.04" y="511.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>wake_up_process (10 samples, 0.02%)</title><rect x="1099.5" y="293" width="0.2" height="15.0" fill="rgb(252,16,26)" rx="2" ry="2" />
<text  x="1102.52" y="303.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (369 samples, 0.66%)</title><rect x="807.8" y="309" width="7.8" height="15.0" fill="rgb(234,39,31)" rx="2" ry="2" />
<text  x="810.79" y="319.5" ></text>
</g>
<g >
<title>irq_exit_rcu (5 samples, 0.01%)</title><rect x="1093.0" y="325" width="0.1" height="15.0" fill="rgb(245,16,19)" rx="2" ry="2" />
<text  x="1095.96" y="335.5" ></text>
</g>
<g >
<title>rcu_idle_exit (18 samples, 0.03%)</title><rect x="1140.9" y="421" width="0.4" height="15.0" fill="rgb(249,151,7)" rx="2" ry="2" />
<text  x="1143.93" y="431.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (63 samples, 0.11%)</title><rect x="13.9" y="149" width="1.3" height="15.0" fill="rgb(227,102,38)" rx="2" ry="2" />
<text  x="16.89" y="159.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (10 samples, 0.02%)</title><rect x="720.6" y="261" width="0.2" height="15.0" fill="rgb(248,163,23)" rx="2" ry="2" />
<text  x="723.60" y="271.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (11 samples, 0.02%)</title><rect x="1154.0" y="405" width="0.2" height="15.0" fill="rgb(235,150,10)" rx="2" ry="2" />
<text  x="1157.01" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (11,223 samples, 20.20%)</title><rect x="633.9" y="405" width="238.3" height="15.0" fill="rgb(229,174,37)" rx="2" ry="2" />
<text  x="636.86" y="415.5" >rustposix::safeposix::dispatche..</text>
</g>
<g >
<title>tsc_verify_tsc_adjust (9 samples, 0.02%)</title><rect x="1154.1" y="389" width="0.1" height="15.0" fill="rgb(241,56,34)" rx="2" ry="2" />
<text  x="1157.05" y="399.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (580 samples, 1.04%)</title><rect x="859.9" y="357" width="12.3" height="15.0" fill="rgb(239,90,17)" rx="2" ry="2" />
<text  x="862.85" y="367.5" ></text>
</g>
<g >
<title>lind_write (7 samples, 0.01%)</title><rect x="898.9" y="453" width="0.1" height="15.0" fill="rgb(226,0,53)" rx="2" ry="2" />
<text  x="901.88" y="463.5" ></text>
</g>
<g >
<title>do_iter_write (202 samples, 0.36%)</title><rect x="12.6" y="245" width="4.3" height="15.0" fill="rgb(221,81,15)" rx="2" ry="2" />
<text  x="15.61" y="255.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (179 samples, 0.32%)</title><rect x="150.5" y="309" width="3.8" height="15.0" fill="rgb(225,140,45)" rx="2" ry="2" />
<text  x="153.48" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (77 samples, 0.14%)</title><rect x="10.0" y="405" width="1.7" height="15.0" fill="rgb(230,93,14)" rx="2" ry="2" />
<text  x="13.02" y="415.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.08%)</title><rect x="881.9" y="325" width="0.9" height="15.0" fill="rgb(249,117,46)" rx="2" ry="2" />
<text  x="884.89" y="335.5" ></text>
</g>
<g >
<title>NaClSysRead (20,408 samples, 36.72%)</title><rect x="126.0" y="485" width="433.4" height="15.0" fill="rgb(231,152,37)" rx="2" ry="2" />
<text  x="129.04" y="495.5" >NaClSysRead</text>
</g>
<g >
<title>sel_ldr (45,949 samples, 82.69%)</title><rect x="17.1" y="549" width="975.7" height="15.0" fill="rgb(238,52,0)" rx="2" ry="2" />
<text  x="20.11" y="559.5" >sel_ldr</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.01%)</title><rect x="884.0" y="261" width="0.1" height="15.0" fill="rgb(247,127,9)" rx="2" ry="2" />
<text  x="887.02" y="271.5" ></text>
</g>
<g >
<title>kick_ilb (170 samples, 0.31%)</title><rect x="1183.4" y="325" width="3.6" height="15.0" fill="rgb(246,9,8)" rx="2" ry="2" />
<text  x="1186.44" y="335.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (10 samples, 0.02%)</title><rect x="1096.8" y="405" width="0.2" height="15.0" fill="rgb(214,96,3)" rx="2" ry="2" />
<text  x="1099.82" y="415.5" ></text>
</g>
<g >
<title>__free_one_page (6 samples, 0.01%)</title><rect x="992.6" y="229" width="0.1" height="15.0" fill="rgb(215,115,15)" rx="2" ry="2" />
<text  x="995.61" y="239.5" ></text>
</g>
<g >
<title>zap_pte_range (43 samples, 0.08%)</title><rect x="991.9" y="341" width="0.9" height="15.0" fill="rgb(219,129,18)" rx="2" ry="2" />
<text  x="994.86" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (295 samples, 0.53%)</title><rect x="691.7" y="293" width="6.3" height="15.0" fill="rgb(224,112,38)" rx="2" ry="2" />
<text  x="694.70" y="303.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (17 samples, 0.03%)</title><rect x="880.1" y="245" width="0.3" height="15.0" fill="rgb(222,173,20)" rx="2" ry="2" />
<text  x="883.07" y="255.5" ></text>
</g>
<g >
<title>free_unref_page_commit (10 samples, 0.02%)</title><rect x="992.5" y="261" width="0.3" height="15.0" fill="rgb(240,133,19)" rx="2" ry="2" />
<text  x="995.54" y="271.5" ></text>
</g>
<g >
<title>menu_update (18 samples, 0.03%)</title><rect x="1142.7" y="421" width="0.4" height="15.0" fill="rgb(252,112,0)" rx="2" ry="2" />
<text  x="1145.73" y="431.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (480 samples, 0.86%)</title><rect x="796.8" y="357" width="10.2" height="15.0" fill="rgb(232,117,28)" rx="2" ry="2" />
<text  x="799.83" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (207 samples, 0.37%)</title><rect x="12.5" y="373" width="4.4" height="15.0" fill="rgb(232,106,37)" rx="2" ry="2" />
<text  x="15.51" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.05%)</title><rect x="11.7" y="453" width="0.6" height="15.0" fill="rgb(250,72,12)" rx="2" ry="2" />
<text  x="14.66" y="463.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (32 samples, 0.06%)</title><rect x="816.1" y="293" width="0.6" height="15.0" fill="rgb(223,176,5)" rx="2" ry="2" />
<text  x="819.07" y="303.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (18 samples, 0.03%)</title><rect x="796.8" y="277" width="0.4" height="15.0" fill="rgb(236,94,27)" rx="2" ry="2" />
<text  x="799.83" y="287.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (5 samples, 0.01%)</title><rect x="1089.7" y="533" width="0.1" height="15.0" fill="rgb(234,0,36)" rx="2" ry="2" />
<text  x="1092.71" y="543.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (234 samples, 0.42%)</title><rect x="791.9" y="341" width="4.9" height="15.0" fill="rgb(230,1,46)" rx="2" ry="2" />
<text  x="794.86" y="351.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (31 samples, 0.06%)</title><rect x="991.1" y="533" width="0.7" height="15.0" fill="rgb(210,181,35)" rx="2" ry="2" />
<text  x="994.14" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (462 samples, 0.83%)</title><rect x="797.2" y="325" width="9.8" height="15.0" fill="rgb(252,195,23)" rx="2" ry="2" />
<text  x="800.21" y="335.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (12 samples, 0.02%)</title><rect x="963.3" y="517" width="0.3" height="15.0" fill="rgb(222,162,45)" rx="2" ry="2" />
<text  x="966.30" y="527.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (12 samples, 0.02%)</title><rect x="15.5" y="133" width="0.3" height="15.0" fill="rgb(208,223,16)" rx="2" ry="2" />
<text  x="18.52" y="143.5" ></text>
</g>
<g >
<title>ext4_finish_bio (8 samples, 0.01%)</title><rect x="1096.5" y="421" width="0.2" height="15.0" fill="rgb(212,208,10)" rx="2" ry="2" />
<text  x="1099.55" y="431.5" ></text>
</g>
<g >
<title>kthread (301 samples, 0.54%)</title><rect x="1090.7" y="517" width="6.4" height="15.0" fill="rgb(234,90,18)" rx="2" ry="2" />
<text  x="1093.67" y="527.5" ></text>
</g>
<g >
<title>ksys_write (6 samples, 0.01%)</title><rect x="17.0" y="485" width="0.1" height="15.0" fill="rgb(221,42,39)" rx="2" ry="2" />
<text  x="19.99" y="495.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (26 samples, 0.05%)</title><rect x="1098.9" y="373" width="0.6" height="15.0" fill="rgb(219,63,19)" rx="2" ry="2" />
<text  x="1101.93" y="383.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (690 samples, 1.24%)</title><rect x="705.6" y="341" width="14.7" height="15.0" fill="rgb(219,135,29)" rx="2" ry="2" />
<text  x="708.63" y="351.5" ></text>
</g>
<g >
<title>cmd_record (324 samples, 0.58%)</title><rect x="10.0" y="517" width="6.9" height="15.0" fill="rgb(231,59,6)" rx="2" ry="2" />
<text  x="13.02" y="527.5" ></text>
</g>
<g >
<title>file_modified (5 samples, 0.01%)</title><rect x="12.6" y="181" width="0.1" height="15.0" fill="rgb(253,177,21)" rx="2" ry="2" />
<text  x="15.61" y="191.5" ></text>
</g>
<g >
<title>__delete_from_page_cache (48 samples, 0.09%)</title><rect x="1091.9" y="373" width="1.0" height="15.0" fill="rgb(243,27,32)" rx="2" ry="2" />
<text  x="1094.92" y="383.5" ></text>
</g>
<g >
<title>CompareAndSwap (26 samples, 0.05%)</title><rect x="961.0" y="517" width="0.5" height="15.0" fill="rgb(247,222,12)" rx="2" ry="2" />
<text  x="963.97" y="527.5" ></text>
</g>
<g >
<title>sched_clock_cpu (8 samples, 0.01%)</title><rect x="1188.1" y="373" width="0.1" height="15.0" fill="rgb(246,76,44)" rx="2" ry="2" />
<text  x="1191.07" y="383.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (11 samples, 0.02%)</title><rect x="60.9" y="501" width="0.3" height="15.0" fill="rgb(226,194,37)" rx="2" ry="2" />
<text  x="63.94" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1,178 samples, 2.12%)</title><rect x="636.7" y="373" width="25.1" height="15.0" fill="rgb(206,220,29)" rx="2" ry="2" />
<text  x="639.75" y="383.5" >&lt;..</text>
</g>
<g >
<title>__lock_text_start (5 samples, 0.01%)</title><rect x="1143.9" y="357" width="0.1" height="15.0" fill="rgb(217,31,1)" rx="2" ry="2" />
<text  x="1146.94" y="367.5" ></text>
</g>
<g >
<title>pagecache_get_page (63 samples, 0.11%)</title><rect x="13.9" y="133" width="1.3" height="15.0" fill="rgb(205,49,19)" rx="2" ry="2" />
<text  x="16.89" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (13 samples, 0.02%)</title><rect x="883.7" y="277" width="0.3" height="15.0" fill="rgb(241,35,41)" rx="2" ry="2" />
<text  x="886.74" y="287.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (40 samples, 0.07%)</title><rect x="124.9" y="469" width="0.9" height="15.0" fill="rgb(243,180,26)" rx="2" ry="2" />
<text  x="127.94" y="479.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (5 samples, 0.01%)</title><rect x="16.2" y="53" width="0.1" height="15.0" fill="rgb(219,39,27)" rx="2" ry="2" />
<text  x="19.20" y="63.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (38 samples, 0.07%)</title><rect x="825.0" y="341" width="0.8" height="15.0" fill="rgb(224,177,13)" rx="2" ry="2" />
<text  x="827.99" y="351.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (6 samples, 0.01%)</title><rect x="884.0" y="229" width="0.1" height="15.0" fill="rgb(218,226,50)" rx="2" ry="2" />
<text  x="887.02" y="239.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (11 samples, 0.02%)</title><rect x="60.9" y="485" width="0.3" height="15.0" fill="rgb(240,67,0)" rx="2" ry="2" />
<text  x="63.94" y="495.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,508 samples, 2.71%)</title><rect x="1100.2" y="421" width="32.0" height="15.0" fill="rgb(231,69,54)" rx="2" ry="2" />
<text  x="1103.20" y="431.5" >mw..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (13 samples, 0.02%)</title><rect x="60.4" y="437" width="0.2" height="15.0" fill="rgb(241,166,20)" rx="2" ry="2" />
<text  x="63.37" y="447.5" ></text>
</g>
<g >
<title>try_to_free_buffers (11 samples, 0.02%)</title><rect x="1094.4" y="341" width="0.2" height="15.0" fill="rgb(246,135,20)" rx="2" ry="2" />
<text  x="1097.36" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (274 samples, 0.49%)</title><rect x="892.8" y="357" width="5.8" height="15.0" fill="rgb(209,119,8)" rx="2" ry="2" />
<text  x="895.77" y="367.5" ></text>
</g>
<g >
<title>common_interrupt (50 samples, 0.09%)</title><rect x="1098.4" y="405" width="1.1" height="15.0" fill="rgb(206,170,47)" rx="2" ry="2" />
<text  x="1101.42" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (702 samples, 1.26%)</title><rect x="705.4" y="373" width="14.9" height="15.0" fill="rgb(223,217,12)" rx="2" ry="2" />
<text  x="708.37" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (52 samples, 0.09%)</title><rect x="789.6" y="277" width="1.1" height="15.0" fill="rgb(253,140,2)" rx="2" ry="2" />
<text  x="792.63" y="287.5" ></text>
</g>
<g >
<title>kick_ilb (97 samples, 0.17%)</title><rect x="1149.3" y="389" width="2.1" height="15.0" fill="rgb(207,200,51)" rx="2" ry="2" />
<text  x="1152.29" y="399.5" ></text>
</g>
<g >
<title>NaClLog (52 samples, 0.09%)</title><rect x="19.4" y="517" width="1.1" height="15.0" fill="rgb(210,145,19)" rx="2" ry="2" />
<text  x="22.41" y="527.5" ></text>
</g>
<g >
<title>get_typical_interval (18 samples, 0.03%)</title><rect x="1173.0" y="357" width="0.4" height="15.0" fill="rgb(210,30,23)" rx="2" ry="2" />
<text  x="1175.97" y="367.5" ></text>
</g>
<g >
<title>std::sync::once::Once::is_completed (25 samples, 0.04%)</title><rect x="661.8" y="277" width="0.5" height="15.0" fill="rgb(211,87,26)" rx="2" ry="2" />
<text  x="664.76" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (1,083 samples, 1.95%)</title><rect x="720.3" y="373" width="23.0" height="15.0" fill="rgb(241,173,20)" rx="2" ry="2" />
<text  x="723.28" y="383.5" >c..</text>
</g>
<g >
<title>NaClFastMutexUnlock (19 samples, 0.03%)</title><rect x="576.4" y="485" width="0.4" height="15.0" fill="rgb(239,180,38)" rx="2" ry="2" />
<text  x="579.36" y="495.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (19 samples, 0.03%)</title><rect x="792.3" y="325" width="0.4" height="15.0" fill="rgb(253,180,9)" rx="2" ry="2" />
<text  x="795.33" y="335.5" ></text>
</g>
<g >
<title>NaClSysWrite (16 samples, 0.03%)</title><rect x="559.5" y="501" width="0.3" height="15.0" fill="rgb(245,161,29)" rx="2" ry="2" />
<text  x="562.47" y="511.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (17 samples, 0.03%)</title><rect x="18.6" y="517" width="0.4" height="15.0" fill="rgb(215,206,7)" rx="2" ry="2" />
<text  x="21.62" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (13 samples, 0.02%)</title><rect x="909.1" y="453" width="0.2" height="15.0" fill="rgb(216,23,46)" rx="2" ry="2" />
<text  x="912.05" y="463.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (10 samples, 0.02%)</title><rect x="15.9" y="69" width="0.3" height="15.0" fill="rgb(229,130,13)" rx="2" ry="2" />
<text  x="18.95" y="79.5" ></text>
</g>
<g >
<title>[perf-161583.map] (65 samples, 0.12%)</title><rect x="61.2" y="533" width="1.4" height="15.0" fill="rgb(229,106,45)" rx="2" ry="2" />
<text  x="64.17" y="543.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1,713 samples, 3.08%)</title><rect x="1153.5" y="469" width="36.4" height="15.0" fill="rgb(240,155,40)" rx="2" ry="2" />
<text  x="1156.54" y="479.5" >arc..</text>
</g>
<g >
<title>std::lazy::SyncLazy&lt;T,F&gt;::force (25 samples, 0.04%)</title><rect x="661.8" y="357" width="0.5" height="15.0" fill="rgb(213,184,14)" rx="2" ry="2" />
<text  x="664.76" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (23 samples, 0.04%)</title><rect x="59.5" y="501" width="0.5" height="15.0" fill="rgb(232,27,18)" rx="2" ry="2" />
<text  x="62.48" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (50 samples, 0.09%)</title><rect x="40.5" y="517" width="1.0" height="15.0" fill="rgb(223,203,5)" rx="2" ry="2" />
<text  x="43.47" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (91 samples, 0.16%)</title><rect x="813.7" y="245" width="1.9" height="15.0" fill="rgb(237,181,35)" rx="2" ry="2" />
<text  x="816.69" y="255.5" ></text>
</g>
<g >
<title>release_pages (6 samples, 0.01%)</title><rect x="1095.8" y="261" width="0.2" height="15.0" fill="rgb(254,58,38)" rx="2" ry="2" />
<text  x="1098.85" y="271.5" ></text>
</g>
<g >
<title>ext4_release_io_end (8 samples, 0.01%)</title><rect x="1096.5" y="437" width="0.2" height="15.0" fill="rgb(233,226,8)" rx="2" ry="2" />
<text  x="1099.55" y="447.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (16 samples, 0.03%)</title><rect x="959.5" y="325" width="0.3" height="15.0" fill="rgb(216,120,22)" rx="2" ry="2" />
<text  x="962.50" y="335.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (460 samples, 0.83%)</title><rect x="563.5" y="469" width="9.7" height="15.0" fill="rgb(253,71,32)" rx="2" ry="2" />
<text  x="566.47" y="479.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (9 samples, 0.02%)</title><rect x="966.4" y="469" width="0.2" height="15.0" fill="rgb(222,171,42)" rx="2" ry="2" />
<text  x="969.45" y="479.5" ></text>
</g>
<g >
<title>std::thread::panicking (22 samples, 0.04%)</title><rect x="825.3" y="325" width="0.5" height="15.0" fill="rgb(241,32,12)" rx="2" ry="2" />
<text  x="828.33" y="335.5" ></text>
</g>
<g >
<title>release_pages (18 samples, 0.03%)</title><rect x="992.4" y="293" width="0.4" height="15.0" fill="rgb(225,60,13)" rx="2" ry="2" />
<text  x="995.40" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_free (11 samples, 0.02%)</title><rect x="1094.4" y="309" width="0.2" height="15.0" fill="rgb(220,50,28)" rx="2" ry="2" />
<text  x="1097.36" y="319.5" ></text>
</g>
<g >
<title>core::cmp::min (150 samples, 0.27%)</title><rect x="146.1" y="357" width="3.2" height="15.0" fill="rgb(224,27,18)" rx="2" ry="2" />
<text  x="149.09" y="367.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.01%)</title><rect x="125.9" y="133" width="0.1" height="15.0" fill="rgb(222,4,24)" rx="2" ry="2" />
<text  x="128.90" y="143.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1,177 samples, 2.12%)</title><rect x="636.8" y="341" width="25.0" height="15.0" fill="rgb(244,180,51)" rx="2" ry="2" />
<text  x="639.77" y="351.5" >c..</text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (5 samples, 0.01%)</title><rect x="1096.2" y="229" width="0.1" height="15.0" fill="rgb(243,124,31)" rx="2" ry="2" />
<text  x="1099.19" y="239.5" ></text>
</g>
<g >
<title>smp_call_function_single (68 samples, 0.12%)</title><rect x="10.2" y="293" width="1.4" height="15.0" fill="rgb(252,184,2)" rx="2" ry="2" />
<text  x="13.19" y="303.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (15 samples, 0.03%)</title><rect x="39.9" y="501" width="0.3" height="15.0" fill="rgb(240,173,19)" rx="2" ry="2" />
<text  x="42.92" y="511.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (5 samples, 0.01%)</title><rect x="1170.5" y="357" width="0.1" height="15.0" fill="rgb(252,17,0)" rx="2" ry="2" />
<text  x="1173.51" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1,333 samples, 2.40%)</title><rect x="456.4" y="293" width="28.4" height="15.0" fill="rgb(246,52,16)" rx="2" ry="2" />
<text  x="459.45" y="303.5" >c..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (30 samples, 0.05%)</title><rect x="883.1" y="277" width="0.6" height="15.0" fill="rgb(226,36,33)" rx="2" ry="2" />
<text  x="886.10" y="287.5" ></text>
</g>
<g >
<title>NaClLog (55 samples, 0.10%)</title><rect x="961.8" y="517" width="1.2" height="15.0" fill="rgb(205,132,50)" rx="2" ry="2" />
<text  x="964.84" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="125.9" y="293" width="0.1" height="15.0" fill="rgb(231,96,0)" rx="2" ry="2" />
<text  x="128.90" y="303.5" ></text>
</g>
<g >
<title>std::panicking::panicking (10 samples, 0.02%)</title><rect x="746.0" y="293" width="0.2" height="15.0" fill="rgb(208,130,23)" rx="2" ry="2" />
<text  x="748.97" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (548 samples, 0.99%)</title><rect x="872.5" y="373" width="11.6" height="15.0" fill="rgb(209,160,51)" rx="2" ry="2" />
<text  x="875.51" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (33 samples, 0.06%)</title><rect x="1099.5" y="405" width="0.7" height="15.0" fill="rgb(224,23,25)" rx="2" ry="2" />
<text  x="1102.48" y="415.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (5 samples, 0.01%)</title><rect x="1141.1" y="405" width="0.1" height="15.0" fill="rgb(213,209,54)" rx="2" ry="2" />
<text  x="1144.08" y="415.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (10 samples, 0.02%)</title><rect x="720.6" y="341" width="0.2" height="15.0" fill="rgb(247,197,10)" rx="2" ry="2" />
<text  x="723.60" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock (9 samples, 0.02%)</title><rect x="1180.6" y="341" width="0.2" height="15.0" fill="rgb(249,70,9)" rx="2" ry="2" />
<text  x="1183.61" y="351.5" ></text>
</g>
<g >
<title>new_sync_write (204 samples, 0.37%)</title><rect x="12.6" y="293" width="4.3" height="15.0" fill="rgb(209,81,44)" rx="2" ry="2" />
<text  x="15.57" y="303.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (96 samples, 0.17%)</title><rect x="55.4" y="517" width="2.1" height="15.0" fill="rgb(238,107,39)" rx="2" ry="2" />
<text  x="58.42" y="527.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.08%)</title><rect x="881.9" y="309" width="0.9" height="15.0" fill="rgb(220,156,39)" rx="2" ry="2" />
<text  x="884.89" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (570 samples, 1.03%)</title><rect x="807.3" y="325" width="12.1" height="15.0" fill="rgb(230,144,37)" rx="2" ry="2" />
<text  x="810.34" y="335.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (13 samples, 0.02%)</title><rect x="21.4" y="517" width="0.3" height="15.0" fill="rgb(224,4,30)" rx="2" ry="2" />
<text  x="24.40" y="527.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (10 samples, 0.02%)</title><rect x="1099.3" y="229" width="0.2" height="15.0" fill="rgb(205,229,54)" rx="2" ry="2" />
<text  x="1102.27" y="239.5" ></text>
</g>
<g >
<title>all (55,571 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(210,128,21)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (72 samples, 0.13%)</title><rect x="557.8" y="325" width="1.5" height="15.0" fill="rgb(244,34,17)" rx="2" ry="2" />
<text  x="560.82" y="335.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (13 samples, 0.02%)</title><rect x="123.5" y="501" width="0.3" height="15.0" fill="rgb(244,38,13)" rx="2" ry="2" />
<text  x="126.50" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.02%)</title><rect x="60.6" y="485" width="0.3" height="15.0" fill="rgb(219,55,10)" rx="2" ry="2" />
<text  x="63.64" y="495.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (13 samples, 0.02%)</title><rect x="60.4" y="469" width="0.2" height="15.0" fill="rgb(252,164,50)" rx="2" ry="2" />
<text  x="63.37" y="479.5" ></text>
</g>
<g >
<title>isolate_lru_pages (19 samples, 0.03%)</title><rect x="1091.2" y="405" width="0.4" height="15.0" fill="rgb(228,199,33)" rx="2" ry="2" />
<text  x="1094.20" y="415.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="819.3" y="197" width="0.1" height="15.0" fill="rgb(206,218,23)" rx="2" ry="2" />
<text  x="822.32" y="207.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,810 samples, 3.26%)</title><rect x="746.0" y="341" width="38.4" height="15.0" fill="rgb(208,191,16)" rx="2" ry="2" />
<text  x="748.97" y="351.5" >&lt;st..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (3,002 samples, 5.40%)</title><rect x="743.3" y="373" width="63.7" height="15.0" fill="rgb(217,22,51)" rx="2" ry="2" />
<text  x="746.28" y="383.5" >rustpos..</text>
</g>
<g >
<title>DynArrayGet (12 samples, 0.02%)</title><rect x="961.5" y="517" width="0.3" height="15.0" fill="rgb(210,96,21)" rx="2" ry="2" />
<text  x="964.52" y="527.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (5 samples, 0.01%)</title><rect x="16.2" y="85" width="0.1" height="15.0" fill="rgb(240,9,51)" rx="2" ry="2" />
<text  x="19.20" y="95.5" ></text>
</g>
<g >
<title>NaClXMutexLock (441 samples, 0.79%)</title><rect x="111.4" y="485" width="9.3" height="15.0" fill="rgb(216,153,46)" rx="2" ry="2" />
<text  x="114.37" y="495.5" ></text>
</g>
<g >
<title>alx_poll (23 samples, 0.04%)</title><rect x="1099.0" y="293" width="0.5" height="15.0" fill="rgb(222,31,2)" rx="2" ry="2" />
<text  x="1101.99" y="303.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (183 samples, 0.33%)</title><rect x="1147.5" y="405" width="3.9" height="15.0" fill="rgb(209,134,10)" rx="2" ry="2" />
<text  x="1150.47" y="415.5" ></text>
</g>
<g >
<title>start_secondary (2,660 samples, 4.79%)</title><rect x="1097.1" y="517" width="56.4" height="15.0" fill="rgb(239,224,14)" rx="2" ry="2" />
<text  x="1100.06" y="527.5" >start..</text>
</g>
<g >
<title>cpumask_next_and (5 samples, 0.01%)</title><rect x="1183.3" y="325" width="0.1" height="15.0" fill="rgb(217,227,10)" rx="2" ry="2" />
<text  x="1186.27" y="335.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (13 samples, 0.02%)</title><rect x="878.2" y="309" width="0.3" height="15.0" fill="rgb(216,175,16)" rx="2" ry="2" />
<text  x="881.22" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (20 samples, 0.04%)</title><rect x="821.5" y="293" width="0.4" height="15.0" fill="rgb(246,11,32)" rx="2" ry="2" />
<text  x="824.48" y="303.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="60.4" y="485" width="0.2" height="15.0" fill="rgb(233,178,28)" rx="2" ry="2" />
<text  x="63.37" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (5 samples, 0.01%)</title><rect x="1089.9" y="501" width="0.2" height="15.0" fill="rgb(227,219,24)" rx="2" ry="2" />
<text  x="1092.94" y="511.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.02%)</title><rect x="883.7" y="261" width="0.3" height="15.0" fill="rgb(242,142,52)" rx="2" ry="2" />
<text  x="886.74" y="271.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (294 samples, 0.53%)</title><rect x="1180.8" y="341" width="6.2" height="15.0" fill="rgb(223,97,5)" rx="2" ry="2" />
<text  x="1183.81" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (37 samples, 0.07%)</title><rect x="1143.5" y="405" width="0.8" height="15.0" fill="rgb(232,135,40)" rx="2" ry="2" />
<text  x="1146.48" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (308 samples, 0.55%)</title><rect x="619.4" y="341" width="6.5" height="15.0" fill="rgb(235,54,45)" rx="2" ry="2" />
<text  x="622.38" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (7 samples, 0.01%)</title><rect x="125.9" y="421" width="0.1" height="15.0" fill="rgb(225,141,14)" rx="2" ry="2" />
<text  x="128.85" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (682 samples, 1.23%)</title><rect x="619.4" y="405" width="14.5" height="15.0" fill="rgb(216,97,45)" rx="2" ry="2" />
<text  x="622.38" y="415.5" ></text>
</g>
<g >
<title>&lt;std::lazy::SyncLazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (25 samples, 0.04%)</title><rect x="661.8" y="373" width="0.5" height="15.0" fill="rgb(223,133,9)" rx="2" ry="2" />
<text  x="664.76" y="383.5" ></text>
</g>
<g >
<title>__schedule (233 samples, 0.42%)</title><rect x="1146.8" y="453" width="5.0" height="15.0" fill="rgb(245,7,4)" rx="2" ry="2" />
<text  x="1149.83" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (18 samples, 0.03%)</title><rect x="788.8" y="309" width="0.4" height="15.0" fill="rgb(227,39,24)" rx="2" ry="2" />
<text  x="791.80" y="319.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (16 samples, 0.03%)</title><rect x="13.9" y="101" width="0.4" height="15.0" fill="rgb(239,43,45)" rx="2" ry="2" />
<text  x="16.93" y="111.5" ></text>
</g>
<g >
<title>HandleStackContext (744 samples, 1.34%)</title><rect x="74.4" y="501" width="15.8" height="15.0" fill="rgb(211,185,3)" rx="2" ry="2" />
<text  x="77.45" y="511.5" ></text>
</g>
<g >
<title>vfs_write (205 samples, 0.37%)</title><rect x="12.5" y="309" width="4.4" height="15.0" fill="rgb(210,106,4)" rx="2" ry="2" />
<text  x="15.55" y="319.5" ></text>
</g>
<g >
<title>sched_clock_cpu (14 samples, 0.03%)</title><rect x="1187.3" y="357" width="0.3" height="15.0" fill="rgb(249,30,47)" rx="2" ry="2" />
<text  x="1190.28" y="367.5" ></text>
</g>
<g >
<title>NaClLog (14 samples, 0.03%)</title><rect x="64.4" y="517" width="0.3" height="15.0" fill="rgb(236,149,40)" rx="2" ry="2" />
<text  x="67.38" y="527.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (5 samples, 0.01%)</title><rect x="1093.0" y="309" width="0.1" height="15.0" fill="rgb(241,59,38)" rx="2" ry="2" />
<text  x="1095.96" y="319.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,713 samples, 3.08%)</title><rect x="1153.5" y="437" width="36.4" height="15.0" fill="rgb(244,210,4)" rx="2" ry="2" />
<text  x="1156.54" y="447.5" >cpu..</text>
</g>
<g >
<title>smp_call_function_single_async (68 samples, 0.12%)</title><rect x="1149.9" y="373" width="1.5" height="15.0" fill="rgb(220,20,47)" rx="2" ry="2" />
<text  x="1152.91" y="383.5" ></text>
</g>
<g >
<title>ext4_inode_csum (5 samples, 0.01%)</title><rect x="16.0" y="37" width="0.1" height="15.0" fill="rgb(216,39,39)" rx="2" ry="2" />
<text  x="19.01" y="47.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.01%)</title><rect x="125.9" y="277" width="0.1" height="15.0" fill="rgb(207,6,35)" rx="2" ry="2" />
<text  x="128.90" y="287.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (23 samples, 0.04%)</title><rect x="816.3" y="261" width="0.4" height="15.0" fill="rgb(221,205,12)" rx="2" ry="2" />
<text  x="819.26" y="271.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (6 samples, 0.01%)</title><rect x="17.0" y="357" width="0.1" height="15.0" fill="rgb(247,190,35)" rx="2" ry="2" />
<text  x="19.99" y="367.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (150 samples, 0.27%)</title><rect x="146.1" y="341" width="3.2" height="15.0" fill="rgb(231,65,38)" rx="2" ry="2" />
<text  x="149.09" y="351.5" ></text>
</g>
<g >
<title>cpumask_next (9 samples, 0.02%)</title><rect x="1183.0" y="309" width="0.2" height="15.0" fill="rgb(253,5,43)" rx="2" ry="2" />
<text  x="1185.97" y="319.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1,621 samples, 2.92%)</title><rect x="825.0" y="373" width="34.4" height="15.0" fill="rgb(252,194,28)" rx="2" ry="2" />
<text  x="827.99" y="383.5" >st..</text>
</g>
<g >
<title>hrtimer_next_event_without (12 samples, 0.02%)</title><rect x="1143.2" y="405" width="0.3" height="15.0" fill="rgb(233,150,5)" rx="2" ry="2" />
<text  x="1146.22" y="415.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (24 samples, 0.04%)</title><rect x="784.8" y="341" width="0.5" height="15.0" fill="rgb(248,120,30)" rx="2" ry="2" />
<text  x="787.77" y="351.5" ></text>
</g>
<g >
<title>mmput (44 samples, 0.08%)</title><rect x="991.8" y="437" width="1.0" height="15.0" fill="rgb(247,29,44)" rx="2" ry="2" />
<text  x="994.84" y="447.5" ></text>
</g>
<g >
<title>schedule (6 samples, 0.01%)</title><rect x="12.0" y="341" width="0.2" height="15.0" fill="rgb(253,3,12)" rx="2" ry="2" />
<text  x="15.04" y="351.5" ></text>
</g>
<g >
<title>shrink_lruvec (165 samples, 0.30%)</title><rect x="1091.2" y="437" width="3.5" height="15.0" fill="rgb(251,140,23)" rx="2" ry="2" />
<text  x="1094.16" y="447.5" ></text>
</g>
<g >
<title>lind_write (14,184 samples, 25.52%)</title><rect x="597.7" y="437" width="301.2" height="15.0" fill="rgb(252,85,32)" rx="2" ry="2" />
<text  x="600.70" y="447.5" >lind_write</text>
</g>
<g >
<title>native_sched_clock (10 samples, 0.02%)</title><rect x="1141.4" y="405" width="0.2" height="15.0" fill="rgb(249,222,51)" rx="2" ry="2" />
<text  x="1144.42" y="415.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (193 samples, 0.35%)</title><rect x="792.7" y="325" width="4.1" height="15.0" fill="rgb(229,84,15)" rx="2" ry="2" />
<text  x="795.73" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (18 samples, 0.03%)</title><rect x="796.8" y="245" width="0.4" height="15.0" fill="rgb(235,55,27)" rx="2" ry="2" />
<text  x="799.83" y="255.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (861 samples, 1.55%)</title><rect x="154.3" y="357" width="18.3" height="15.0" fill="rgb(253,148,26)" rx="2" ry="2" />
<text  x="157.29" y="367.5" ></text>
</g>
<g >
<title>rest_init (1,713 samples, 3.08%)</title><rect x="1153.5" y="453" width="36.4" height="15.0" fill="rgb(231,207,47)" rx="2" ry="2" />
<text  x="1156.54" y="463.5" >res..</text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (303 samples, 0.55%)</title><rect x="705.6" y="293" width="6.5" height="15.0" fill="rgb(213,98,10)" rx="2" ry="2" />
<text  x="708.63" y="303.5" ></text>
</g>
<g >
<title>[sel_ldr] (40,506 samples, 72.89%)</title><rect x="62.6" y="533" width="860.1" height="15.0" fill="rgb(219,50,1)" rx="2" ry="2" />
<text  x="65.55" y="543.5" >[sel_ldr]</text>
</g>
<g >
<title>destroy_inode (7 samples, 0.01%)</title><rect x="1095.4" y="245" width="0.1" height="15.0" fill="rgb(205,72,4)" rx="2" ry="2" />
<text  x="1098.38" y="255.5" ></text>
</g>
<g >
<title>ext4_da_write_end (54 samples, 0.10%)</title><rect x="15.2" y="165" width="1.2" height="15.0" fill="rgb(249,175,6)" rx="2" ry="2" />
<text  x="18.24" y="175.5" ></text>
</g>
<g >
<title>do_sys_poll (29 samples, 0.05%)</title><rect x="11.7" y="405" width="0.6" height="15.0" fill="rgb(213,22,2)" rx="2" ry="2" />
<text  x="14.68" y="415.5" ></text>
</g>
<g >
<title>_perf_ioctl (73 samples, 0.13%)</title><rect x="10.1" y="357" width="1.5" height="15.0" fill="rgb(241,92,33)" rx="2" ry="2" />
<text  x="13.08" y="367.5" ></text>
</g>
<g >
<title>std::panicking::panicking (10 samples, 0.02%)</title><rect x="720.6" y="309" width="0.2" height="15.0" fill="rgb(242,96,34)" rx="2" ry="2" />
<text  x="723.60" y="319.5" ></text>
</g>
<g >
<title>nohz_csd_func (26 samples, 0.05%)</title><rect x="1146.2" y="453" width="0.5" height="15.0" fill="rgb(222,11,33)" rx="2" ry="2" />
<text  x="1149.15" y="463.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (341 samples, 0.61%)</title><rect x="908.1" y="469" width="7.2" height="15.0" fill="rgb(227,107,17)" rx="2" ry="2" />
<text  x="911.05" y="479.5" ></text>
</g>
<g >
<title>[anon] (2,062 samples, 3.71%)</title><rect x="17.4" y="533" width="43.8" height="15.0" fill="rgb(226,174,20)" rx="2" ry="2" />
<text  x="20.39" y="543.5" >[anon]</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (3,102 samples, 5.58%)</title><rect x="484.8" y="309" width="65.8" height="15.0" fill="rgb(225,205,12)" rx="2" ry="2" />
<text  x="487.77" y="319.5" >ringbuf..</text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (17 samples, 0.03%)</title><rect x="966.6" y="485" width="0.4" height="15.0" fill="rgb(239,229,34)" rx="2" ry="2" />
<text  x="969.64" y="495.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (41 samples, 0.07%)</title><rect x="822.8" y="229" width="0.8" height="15.0" fill="rgb(213,175,40)" rx="2" ry="2" />
<text  x="825.76" y="239.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (295 samples, 0.53%)</title><rect x="691.7" y="309" width="6.3" height="15.0" fill="rgb(218,206,41)" rx="2" ry="2" />
<text  x="694.70" y="319.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (14,353 samples, 25.83%)</title><rect x="594.1" y="453" width="304.8" height="15.0" fill="rgb(242,229,25)" rx="2" ry="2" />
<text  x="597.11" y="463.5" >NaClHostDescWrite</text>
</g>
<g >
<title>free_unref_page_list (12 samples, 0.02%)</title><rect x="992.5" y="277" width="0.3" height="15.0" fill="rgb(225,85,6)" rx="2" ry="2" />
<text  x="995.50" y="287.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (22 samples, 0.04%)</title><rect x="11.7" y="389" width="0.5" height="15.0" fill="rgb(253,182,7)" rx="2" ry="2" />
<text  x="14.70" y="399.5" ></text>
</g>
<g >
<title>generic_exec_single (67 samples, 0.12%)</title><rect x="10.2" y="277" width="1.4" height="15.0" fill="rgb(230,67,37)" rx="2" ry="2" />
<text  x="13.21" y="287.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (24 samples, 0.04%)</title><rect x="990.0" y="501" width="0.5" height="15.0" fill="rgb(244,104,22)" rx="2" ry="2" />
<text  x="993.02" y="511.5" ></text>
</g>
<g >
<title>do_anonymous_page (88 samples, 0.16%)</title><rect x="958.6" y="421" width="1.9" height="15.0" fill="rgb(225,15,32)" rx="2" ry="2" />
<text  x="961.63" y="431.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (22 samples, 0.04%)</title><rect x="825.3" y="293" width="0.5" height="15.0" fill="rgb(205,91,23)" rx="2" ry="2" />
<text  x="828.33" y="303.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (10 samples, 0.02%)</title><rect x="1099.5" y="309" width="0.2" height="15.0" fill="rgb(238,191,23)" rx="2" ry="2" />
<text  x="1102.52" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.07%)</title><rect x="1089.9" y="533" width="0.8" height="15.0" fill="rgb(243,209,14)" rx="2" ry="2" />
<text  x="1092.86" y="543.5" ></text>
</g>
<g >
<title>dispatcher (64 samples, 0.12%)</title><rect x="39.1" y="517" width="1.4" height="15.0" fill="rgb(252,5,22)" rx="2" ry="2" />
<text  x="42.11" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (369 samples, 0.66%)</title><rect x="807.8" y="293" width="7.8" height="15.0" fill="rgb(250,127,18)" rx="2" ry="2" />
<text  x="810.79" y="303.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (42 samples, 0.08%)</title><rect x="809.1" y="245" width="0.9" height="15.0" fill="rgb(239,150,31)" rx="2" ry="2" />
<text  x="812.06" y="255.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (254 samples, 0.46%)</title><rect x="791.4" y="357" width="5.4" height="15.0" fill="rgb(247,65,32)" rx="2" ry="2" />
<text  x="794.44" y="367.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (81 samples, 0.15%)</title><rect x="596.0" y="437" width="1.7" height="15.0" fill="rgb(247,66,40)" rx="2" ry="2" />
<text  x="598.98" y="447.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (13 samples, 0.02%)</title><rect x="18.0" y="517" width="0.3" height="15.0" fill="rgb(243,36,38)" rx="2" ry="2" />
<text  x="21.05" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1,418 samples, 2.55%)</title><rect x="961.0" y="533" width="30.1" height="15.0" fill="rgb(221,214,18)" rx="2" ry="2" />
<text  x="963.97" y="543.5" >[u..</text>
</g>
<g >
<title>pthread_mutex_lock@plt (16 samples, 0.03%)</title><rect x="120.4" y="453" width="0.3" height="15.0" fill="rgb(220,48,24)" rx="2" ry="2" />
<text  x="123.40" y="463.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (255 samples, 0.46%)</title><rect x="50.0" y="501" width="5.4" height="15.0" fill="rgb(206,214,30)" rx="2" ry="2" />
<text  x="53.01" y="511.5" ></text>
</g>
<g >
<title>NaClSysWrite (12 samples, 0.02%)</title><rect x="20.6" y="517" width="0.3" height="15.0" fill="rgb(237,188,42)" rx="2" ry="2" />
<text  x="23.64" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (45 samples, 0.08%)</title><rect x="991.8" y="517" width="1.0" height="15.0" fill="rgb(228,229,45)" rx="2" ry="2" />
<text  x="994.84" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (845 samples, 1.52%)</title><rect x="807.0" y="341" width="18.0" height="15.0" fill="rgb(249,46,16)" rx="2" ry="2" />
<text  x="810.04" y="351.5" ></text>
</g>
<g >
<title>menu_select (116 samples, 0.21%)</title><rect x="1141.8" y="437" width="2.5" height="15.0" fill="rgb(213,90,21)" rx="2" ry="2" />
<text  x="1144.84" y="447.5" ></text>
</g>
<g >
<title>nf_hook_slow_list (5 samples, 0.01%)</title><rect x="1099.3" y="181" width="0.1" height="15.0" fill="rgb(235,36,50)" rx="2" ry="2" />
<text  x="1102.33" y="191.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.01%)</title><rect x="449.0" y="229" width="0.2" height="15.0" fill="rgb(237,149,2)" rx="2" ry="2" />
<text  x="452.01" y="239.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (26 samples, 0.05%)</title><rect x="15.8" y="117" width="0.5" height="15.0" fill="rgb(247,167,24)" rx="2" ry="2" />
<text  x="18.80" y="127.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (16 samples, 0.03%)</title><rect x="825.0" y="325" width="0.3" height="15.0" fill="rgb(232,144,13)" rx="2" ry="2" />
<text  x="827.99" y="335.5" ></text>
</g>
<g >
<title>start_kernel (1,713 samples, 3.08%)</title><rect x="1153.5" y="485" width="36.4" height="15.0" fill="rgb(254,229,1)" rx="2" ry="2" />
<text  x="1156.54" y="495.5" >sta..</text>
</g>
<g >
<title>NaClSysExit (7 samples, 0.01%)</title><rect x="125.9" y="485" width="0.1" height="15.0" fill="rgb(212,32,8)" rx="2" ry="2" />
<text  x="128.85" y="495.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (11 samples, 0.02%)</title><rect x="1099.9" y="341" width="0.3" height="15.0" fill="rgb(241,99,41)" rx="2" ry="2" />
<text  x="1102.92" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (115 samples, 0.21%)</title><rect x="881.7" y="357" width="2.4" height="15.0" fill="rgb(242,38,17)" rx="2" ry="2" />
<text  x="884.70" y="367.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (12 samples, 0.02%)</title><rect x="884.1" y="373" width="0.3" height="15.0" fill="rgb(211,9,49)" rx="2" ry="2" />
<text  x="887.14" y="383.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (702 samples, 1.26%)</title><rect x="705.4" y="357" width="14.9" height="15.0" fill="rgb(226,7,44)" rx="2" ry="2" />
<text  x="708.37" y="367.5" ></text>
</g>
<g >
<title>[sel_ldr] (1,283 samples, 2.31%)</title><rect x="931.1" y="517" width="27.3" height="15.0" fill="rgb(243,138,21)" rx="2" ry="2" />
<text  x="934.11" y="527.5" >[..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (112 samples, 0.20%)</title><rect x="821.9" y="293" width="2.4" height="15.0" fill="rgb(214,10,22)" rx="2" ry="2" />
<text  x="824.93" y="303.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (37 samples, 0.07%)</title><rect x="877.7" y="341" width="0.8" height="15.0" fill="rgb(237,160,34)" rx="2" ry="2" />
<text  x="880.71" y="351.5" ></text>
</g>
<g >
<title>sched_clock_cpu (7 samples, 0.01%)</title><rect x="1140.6" y="405" width="0.2" height="15.0" fill="rgb(250,174,6)" rx="2" ry="2" />
<text  x="1143.63" y="415.5" ></text>
</g>
<g >
<title>balance_pgdat (257 samples, 0.46%)</title><rect x="1091.0" y="485" width="5.5" height="15.0" fill="rgb(254,19,4)" rx="2" ry="2" />
<text  x="1094.03" y="495.5" ></text>
</g>
<g >
<title>remove_mapping (8 samples, 0.01%)</title><rect x="1096.0" y="261" width="0.2" height="15.0" fill="rgb(215,129,2)" rx="2" ry="2" />
<text  x="1099.02" y="271.5" ></text>
</g>
<g >
<title>alx_mask_msix (20 samples, 0.04%)</title><rect x="1098.5" y="309" width="0.4" height="15.0" fill="rgb(205,124,40)" rx="2" ry="2" />
<text  x="1101.48" y="319.5" ></text>
</g>
<g >
<title>super_cache_scan (74 samples, 0.13%)</title><rect x="1094.9" y="389" width="1.6" height="15.0" fill="rgb(216,115,38)" rx="2" ry="2" />
<text  x="1097.91" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.05%)</title><rect x="17.4" y="517" width="0.6" height="15.0" fill="rgb(251,182,22)" rx="2" ry="2" />
<text  x="20.39" y="527.5" ></text>
</g>
<g >
<title>exc_page_fault (5 samples, 0.01%)</title><rect x="1089.7" y="517" width="0.1" height="15.0" fill="rgb(230,179,15)" rx="2" ry="2" />
<text  x="1092.71" y="527.5" ></text>
</g>
<g >
<title>shrink_page_list (139 samples, 0.25%)</title><rect x="1091.7" y="405" width="2.9" height="15.0" fill="rgb(251,64,1)" rx="2" ry="2" />
<text  x="1094.66" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.03%)</title><rect x="819.0" y="197" width="0.3" height="15.0" fill="rgb(232,53,36)" rx="2" ry="2" />
<text  x="822.00" y="207.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (17 samples, 0.03%)</title><rect x="810.0" y="245" width="0.3" height="15.0" fill="rgb(231,194,0)" rx="2" ry="2" />
<text  x="812.95" y="255.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (61 samples, 0.11%)</title><rect x="818.1" y="213" width="1.3" height="15.0" fill="rgb(233,2,14)" rx="2" ry="2" />
<text  x="821.15" y="223.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (5 samples, 0.01%)</title><rect x="1176.3" y="389" width="0.1" height="15.0" fill="rgb(250,87,11)" rx="2" ry="2" />
<text  x="1179.30" y="399.5" ></text>
</g>
<g >
<title>rmqueue (7 samples, 0.01%)</title><rect x="15.0" y="69" width="0.1" height="15.0" fill="rgb(228,62,20)" rx="2" ry="2" />
<text  x="17.97" y="79.5" ></text>
</g>
<g >
<title>native_sched_clock (8 samples, 0.01%)</title><rect x="1151.6" y="405" width="0.2" height="15.0" fill="rgb(239,140,6)" rx="2" ry="2" />
<text  x="1154.59" y="415.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (6 samples, 0.01%)</title><rect x="17.0" y="373" width="0.1" height="15.0" fill="rgb(211,146,7)" rx="2" ry="2" />
<text  x="19.99" y="383.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (5 samples, 0.01%)</title><rect x="125.9" y="229" width="0.1" height="15.0" fill="rgb(242,182,17)" rx="2" ry="2" />
<text  x="128.90" y="239.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (12 samples, 0.02%)</title><rect x="884.1" y="389" width="0.3" height="15.0" fill="rgb(237,119,6)" rx="2" ry="2" />
<text  x="887.14" y="399.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (40,396 samples, 72.69%)</title><rect x="64.9" y="517" width="857.8" height="15.0" fill="rgb(253,191,14)" rx="2" ry="2" />
<text  x="67.89" y="527.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>do_exit (44 samples, 0.08%)</title><rect x="991.8" y="469" width="1.0" height="15.0" fill="rgb(222,51,40)" rx="2" ry="2" />
<text  x="994.84" y="479.5" ></text>
</g>
<g >
<title>__pollwait (5 samples, 0.01%)</title><rect x="11.9" y="357" width="0.1" height="15.0" fill="rgb(241,14,15)" rx="2" ry="2" />
<text  x="14.93" y="367.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.10%)</title><rect x="820.4" y="277" width="1.1" height="15.0" fill="rgb(213,173,32)" rx="2" ry="2" />
<text  x="823.36" y="287.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (9 samples, 0.02%)</title><rect x="1183.0" y="293" width="0.2" height="15.0" fill="rgb(211,212,10)" rx="2" ry="2" />
<text  x="1185.97" y="303.5" ></text>
</g>
<g >
<title>ext4_do_flush_completed_IO.isra.0 (8 samples, 0.01%)</title><rect x="1096.5" y="453" width="0.2" height="15.0" fill="rgb(240,24,53)" rx="2" ry="2" />
<text  x="1099.55" y="463.5" ></text>
</g>
<g >
<title>std::thread::panicking (12 samples, 0.02%)</title><rect x="884.1" y="357" width="0.3" height="15.0" fill="rgb(243,80,16)" rx="2" ry="2" />
<text  x="887.14" y="367.5" ></text>
</g>
<g >
<title>move_to_new_page (5 samples, 0.01%)</title><rect x="1090.7" y="405" width="0.1" height="15.0" fill="rgb(250,150,18)" rx="2" ry="2" />
<text  x="1093.69" y="415.5" ></text>
</g>
<g >
<title>invalidate_inode_page (14 samples, 0.03%)</title><rect x="1096.0" y="277" width="0.3" height="15.0" fill="rgb(227,19,12)" rx="2" ry="2" />
<text  x="1099.00" y="287.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (62 samples, 0.11%)</title><rect x="10.3" y="181" width="1.3" height="15.0" fill="rgb(213,37,15)" rx="2" ry="2" />
<text  x="13.32" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (20 samples, 0.04%)</title><rect x="822.3" y="245" width="0.5" height="15.0" fill="rgb(218,185,54)" rx="2" ry="2" />
<text  x="825.33" y="255.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (5 samples, 0.01%)</title><rect x="1089.9" y="437" width="0.2" height="15.0" fill="rgb(209,105,7)" rx="2" ry="2" />
<text  x="1092.94" y="447.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (32 samples, 0.06%)</title><rect x="823.6" y="229" width="0.7" height="15.0" fill="rgb(208,72,50)" rx="2" ry="2" />
<text  x="826.63" y="239.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (127 samples, 0.23%)</title><rect x="816.7" y="293" width="2.7" height="15.0" fill="rgb(242,182,24)" rx="2" ry="2" />
<text  x="819.75" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (242 samples, 0.44%)</title><rect x="614.2" y="373" width="5.2" height="15.0" fill="rgb(226,51,6)" rx="2" ry="2" />
<text  x="617.22" y="383.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (8 samples, 0.01%)</title><rect x="1188.1" y="389" width="0.1" height="15.0" fill="rgb(243,75,4)" rx="2" ry="2" />
<text  x="1191.07" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (255 samples, 0.46%)</title><rect x="50.0" y="453" width="5.4" height="15.0" fill="rgb(243,161,18)" rx="2" ry="2" />
<text  x="53.01" y="463.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (5 samples, 0.01%)</title><rect x="12.6" y="117" width="0.1" height="15.0" fill="rgb(239,58,49)" rx="2" ry="2" />
<text  x="15.61" y="127.5" ></text>
</g>
<g >
<title>unmap_vmas (43 samples, 0.08%)</title><rect x="991.9" y="405" width="0.9" height="15.0" fill="rgb(229,208,3)" rx="2" ry="2" />
<text  x="994.86" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (52 samples, 0.09%)</title><rect x="22.3" y="517" width="1.1" height="15.0" fill="rgb(223,194,44)" rx="2" ry="2" />
<text  x="25.32" y="527.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (43 samples, 0.08%)</title><rect x="991.9" y="357" width="0.9" height="15.0" fill="rgb(243,64,19)" rx="2" ry="2" />
<text  x="994.86" y="367.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (41 samples, 0.07%)</title><rect x="124.9" y="501" width="0.9" height="15.0" fill="rgb(213,91,7)" rx="2" ry="2" />
<text  x="127.94" y="511.5" ></text>
</g>
<g >
<title>mpage_submit_page (5 samples, 0.01%)</title><rect x="1096.8" y="309" width="0.2" height="15.0" fill="rgb(248,229,49)" rx="2" ry="2" />
<text  x="1099.85" y="319.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="125.9" y="53" width="0.1" height="15.0" fill="rgb(221,173,13)" rx="2" ry="2" />
<text  x="128.90" y="63.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (32 samples, 0.06%)</title><rect x="823.6" y="213" width="0.7" height="15.0" fill="rgb(248,83,16)" rx="2" ry="2" />
<text  x="826.63" y="223.5" ></text>
</g>
<g >
<title>rcu_core_si (5 samples, 0.01%)</title><rect x="1093.0" y="261" width="0.1" height="15.0" fill="rgb(237,70,4)" rx="2" ry="2" />
<text  x="1095.96" y="271.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (6 samples, 0.01%)</title><rect x="12.0" y="373" width="0.2" height="15.0" fill="rgb(237,21,2)" rx="2" ry="2" />
<text  x="15.04" y="383.5" ></text>
</g>
<g >
<title>ovl_write_iter (204 samples, 0.37%)</title><rect x="12.6" y="277" width="4.3" height="15.0" fill="rgb(243,42,25)" rx="2" ry="2" />
<text  x="15.57" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_write (207 samples, 0.37%)</title><rect x="12.5" y="341" width="4.4" height="15.0" fill="rgb(232,52,10)" rx="2" ry="2" />
<text  x="15.51" y="351.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (127 samples, 0.23%)</title><rect x="816.7" y="309" width="2.7" height="15.0" fill="rgb(252,71,9)" rx="2" ry="2" />
<text  x="819.75" y="319.5" ></text>
</g>
<g >
<title>[unknown] (324 samples, 0.58%)</title><rect x="10.0" y="533" width="6.9" height="15.0" fill="rgb(215,222,51)" rx="2" ry="2" />
<text  x="13.02" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (644 samples, 1.16%)</title><rect x="691.7" y="325" width="13.7" height="15.0" fill="rgb(214,96,14)" rx="2" ry="2" />
<text  x="694.70" y="335.5" ></text>
</g>
<g >
<title>record__mmap_read_all (215 samples, 0.39%)</title><rect x="12.3" y="485" width="4.6" height="15.0" fill="rgb(207,134,3)" rx="2" ry="2" />
<text  x="15.34" y="495.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (845 samples, 1.52%)</title><rect x="807.0" y="373" width="18.0" height="15.0" fill="rgb(205,226,46)" rx="2" ry="2" />
<text  x="810.04" y="383.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (17 samples, 0.03%)</title><rect x="959.5" y="341" width="0.3" height="15.0" fill="rgb(206,48,0)" rx="2" ry="2" />
<text  x="962.48" y="351.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.02%)</title><rect x="40.2" y="501" width="0.3" height="15.0" fill="rgb(217,210,44)" rx="2" ry="2" />
<text  x="43.24" y="511.5" ></text>
</g>
<g >
<title>cpuidle_not_available (5 samples, 0.01%)</title><rect x="1176.5" y="405" width="0.1" height="15.0" fill="rgb(218,56,40)" rx="2" ry="2" />
<text  x="1179.47" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (10 samples, 0.02%)</title><rect x="746.0" y="261" width="0.2" height="15.0" fill="rgb(235,92,39)" rx="2" ry="2" />
<text  x="748.97" y="271.5" ></text>
</g>
<g >
<title>free_unref_page_commit (18 samples, 0.03%)</title><rect x="1093.6" y="373" width="0.3" height="15.0" fill="rgb(211,170,0)" rx="2" ry="2" />
<text  x="1096.55" y="383.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (12 samples, 0.02%)</title><rect x="884.1" y="325" width="0.3" height="15.0" fill="rgb(225,62,25)" rx="2" ry="2" />
<text  x="887.14" y="335.5" ></text>
</g>
<g >
<title>__evlist__enable (77 samples, 0.14%)</title><rect x="10.0" y="485" width="1.7" height="15.0" fill="rgb(226,35,13)" rx="2" ry="2" />
<text  x="13.02" y="495.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (5 samples, 0.01%)</title><rect x="12.6" y="133" width="0.1" height="15.0" fill="rgb(213,194,32)" rx="2" ry="2" />
<text  x="15.61" y="143.5" ></text>
</g>
<g >
<title>invalidate_mapping_pages (31 samples, 0.06%)</title><rect x="1095.8" y="309" width="0.7" height="15.0" fill="rgb(213,106,13)" rx="2" ry="2" />
<text  x="1098.81" y="319.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (17 samples, 0.03%)</title><rect x="64.0" y="517" width="0.4" height="15.0" fill="rgb(222,227,52)" rx="2" ry="2" />
<text  x="67.02" y="527.5" ></text>
</g>
<g >
<title>std::thread::panicking (9 samples, 0.02%)</title><rect x="859.7" y="325" width="0.2" height="15.0" fill="rgb(246,57,10)" rx="2" ry="2" />
<text  x="862.66" y="335.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (23 samples, 0.04%)</title><rect x="39.4" y="453" width="0.5" height="15.0" fill="rgb(215,193,2)" rx="2" ry="2" />
<text  x="42.43" y="463.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (9 samples, 0.02%)</title><rect x="15.3" y="149" width="0.2" height="15.0" fill="rgb(248,130,50)" rx="2" ry="2" />
<text  x="18.29" y="159.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (10 samples, 0.02%)</title><rect x="1099.3" y="261" width="0.2" height="15.0" fill="rgb(214,211,36)" rx="2" ry="2" />
<text  x="1102.27" y="271.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (23 samples, 0.04%)</title><rect x="1098.4" y="389" width="0.5" height="15.0" fill="rgb(241,193,47)" rx="2" ry="2" />
<text  x="1101.44" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (19 samples, 0.03%)</title><rect x="60.0" y="501" width="0.4" height="15.0" fill="rgb(241,103,27)" rx="2" ry="2" />
<text  x="62.96" y="511.5" ></text>
</g>
<g >
<title>__list_lru_walk_one (5 samples, 0.01%)</title><rect x="1094.9" y="341" width="0.1" height="15.0" fill="rgb(220,6,20)" rx="2" ry="2" />
<text  x="1097.93" y="351.5" ></text>
</g>
<g >
<title>ext4_releasepage (5 samples, 0.01%)</title><rect x="1096.2" y="245" width="0.1" height="15.0" fill="rgb(240,138,32)" rx="2" ry="2" />
<text  x="1099.19" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (18 samples, 0.03%)</title><rect x="1099.5" y="357" width="0.4" height="15.0" fill="rgb(238,164,52)" rx="2" ry="2" />
<text  x="1102.50" y="367.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (14,438 samples, 25.98%)</title><rect x="592.5" y="469" width="306.5" height="15.0" fill="rgb(253,92,35)" rx="2" ry="2" />
<text  x="595.45" y="479.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>unmap_page_range (43 samples, 0.08%)</title><rect x="991.9" y="373" width="0.9" height="15.0" fill="rgb(219,83,44)" rx="2" ry="2" />
<text  x="994.86" y="383.5" ></text>
</g>
<g >
<title>kswapd (257 samples, 0.46%)</title><rect x="1091.0" y="501" width="5.5" height="15.0" fill="rgb(250,176,23)" rx="2" ry="2" />
<text  x="1094.03" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (242 samples, 0.44%)</title><rect x="614.2" y="389" width="5.2" height="15.0" fill="rgb(233,184,38)" rx="2" ry="2" />
<text  x="617.22" y="399.5" ></text>
</g>
<g >
<title>shrink_slab_memcg (82 samples, 0.15%)</title><rect x="1094.7" y="421" width="1.8" height="15.0" fill="rgb(219,16,34)" rx="2" ry="2" />
<text  x="1097.74" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (9 samples, 0.02%)</title><rect x="746.2" y="293" width="0.2" height="15.0" fill="rgb(246,79,45)" rx="2" ry="2" />
<text  x="749.19" y="303.5" ></text>
</g>
<g >
<title>alloc_pages_vma (55 samples, 0.10%)</title><rect x="958.7" y="405" width="1.2" height="15.0" fill="rgb(209,22,51)" rx="2" ry="2" />
<text  x="961.70" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (5 samples, 0.01%)</title><rect x="1090.4" y="501" width="0.1" height="15.0" fill="rgb(220,199,28)" rx="2" ry="2" />
<text  x="1093.37" y="511.5" ></text>
</g>
<g >
<title>stop_this_handle (5 samples, 0.01%)</title><rect x="15.4" y="117" width="0.1" height="15.0" fill="rgb(251,186,18)" rx="2" ry="2" />
<text  x="18.37" y="127.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (26 samples, 0.05%)</title><rect x="63.5" y="517" width="0.5" height="15.0" fill="rgb(218,140,27)" rx="2" ry="2" />
<text  x="66.47" y="527.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (5 samples, 0.01%)</title><rect x="1092.7" y="309" width="0.1" height="15.0" fill="rgb(253,101,4)" rx="2" ry="2" />
<text  x="1095.73" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (668 samples, 1.20%)</title><rect x="884.4" y="373" width="14.2" height="15.0" fill="rgb(222,3,4)" rx="2" ry="2" />
<text  x="887.40" y="383.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (668 samples, 1.20%)</title><rect x="884.4" y="389" width="14.2" height="15.0" fill="rgb(212,224,51)" rx="2" ry="2" />
<text  x="887.40" y="399.5" ></text>
</g>
<g >
<title>__list_lru_walk_one (33 samples, 0.06%)</title><rect x="1095.8" y="341" width="0.7" height="15.0" fill="rgb(242,149,18)" rx="2" ry="2" />
<text  x="1098.78" y="351.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (833 samples, 1.50%)</title><rect x="967.0" y="517" width="17.7" height="15.0" fill="rgb(210,50,16)" rx="2" ry="2" />
<text  x="970.00" y="527.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (89 samples, 0.16%)</title><rect x="920.2" y="469" width="1.9" height="15.0" fill="rgb(251,13,43)" rx="2" ry="2" />
<text  x="923.20" y="479.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (255 samples, 0.46%)</title><rect x="50.0" y="485" width="5.4" height="15.0" fill="rgb(241,66,46)" rx="2" ry="2" />
<text  x="53.01" y="495.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.02%)</title><rect x="60.6" y="501" width="0.3" height="15.0" fill="rgb(232,116,48)" rx="2" ry="2" />
<text  x="63.64" y="511.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (338 samples, 0.61%)</title><rect x="550.6" y="309" width="7.2" height="15.0" fill="rgb(209,143,14)" rx="2" ry="2" />
<text  x="553.64" y="319.5" ></text>
</g>
<g >
<title>lind_write (7 samples, 0.01%)</title><rect x="41.5" y="517" width="0.2" height="15.0" fill="rgb(206,101,38)" rx="2" ry="2" />
<text  x="44.53" y="527.5" ></text>
</g>
<g >
<title>wb_writeback (10 samples, 0.02%)</title><rect x="1096.8" y="437" width="0.2" height="15.0" fill="rgb(223,36,9)" rx="2" ry="2" />
<text  x="1099.82" y="447.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (680 samples, 1.22%)</title><rect x="884.1" y="405" width="14.5" height="15.0" fill="rgb(226,131,51)" rx="2" ry="2" />
<text  x="887.14" y="415.5" ></text>
</g>
<g >
<title>unaccount_page_cache_page (8 samples, 0.01%)</title><rect x="1092.7" y="357" width="0.2" height="15.0" fill="rgb(244,150,39)" rx="2" ry="2" />
<text  x="1095.71" y="367.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (65 samples, 0.12%)</title><rect x="989.7" y="517" width="1.4" height="15.0" fill="rgb(219,226,8)" rx="2" ry="2" />
<text  x="992.70" y="527.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (202 samples, 0.36%)</title><rect x="12.6" y="229" width="4.3" height="15.0" fill="rgb(216,95,29)" rx="2" ry="2" />
<text  x="15.61" y="239.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (5 samples, 0.01%)</title><rect x="125.9" y="69" width="0.1" height="15.0" fill="rgb(216,133,5)" rx="2" ry="2" />
<text  x="128.90" y="79.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (10 samples, 0.02%)</title><rect x="746.0" y="277" width="0.2" height="15.0" fill="rgb(231,77,28)" rx="2" ry="2" />
<text  x="748.97" y="287.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (819 samples, 1.47%)</title><rect x="826.6" y="325" width="17.4" height="15.0" fill="rgb(245,197,14)" rx="2" ry="2" />
<text  x="829.60" y="335.5" ></text>
</g>
<g >
<title>ip_list_rcv (7 samples, 0.01%)</title><rect x="1099.3" y="213" width="0.1" height="15.0" fill="rgb(253,201,35)" rx="2" ry="2" />
<text  x="1102.29" y="223.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (369 samples, 0.66%)</title><rect x="807.8" y="277" width="7.8" height="15.0" fill="rgb(214,106,9)" rx="2" ry="2" />
<text  x="810.79" y="287.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (232 samples, 0.42%)</title><rect x="872.8" y="341" width="4.9" height="15.0" fill="rgb(231,175,50)" rx="2" ry="2" />
<text  x="875.78" y="351.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (21 samples, 0.04%)</title><rect x="1098.5" y="341" width="0.4" height="15.0" fill="rgb(238,51,52)" rx="2" ry="2" />
<text  x="1101.46" y="351.5" ></text>
</g>
<g >
<title>pick_next_task_fair (201 samples, 0.36%)</title><rect x="1147.1" y="437" width="4.3" height="15.0" fill="rgb(232,24,26)" rx="2" ry="2" />
<text  x="1150.15" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (10 samples, 0.02%)</title><rect x="720.6" y="277" width="0.2" height="15.0" fill="rgb(251,216,43)" rx="2" ry="2" />
<text  x="723.60" y="287.5" ></text>
</g>
<g >
<title>NaClXMutexLock (8 samples, 0.01%)</title><rect x="21.8" y="517" width="0.2" height="15.0" fill="rgb(235,215,42)" rx="2" ry="2" />
<text  x="24.83" y="527.5" ></text>
</g>
<g >
<title>update_rq_clock (17 samples, 0.03%)</title><rect x="1187.2" y="373" width="0.4" height="15.0" fill="rgb(234,180,42)" rx="2" ry="2" />
<text  x="1190.22" y="383.5" ></text>
</g>
<g >
<title>std::panicking::panicking (12 samples, 0.02%)</title><rect x="884.1" y="341" width="0.3" height="15.0" fill="rgb(208,48,27)" rx="2" ry="2" />
<text  x="887.14" y="351.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (105 samples, 0.19%)</title><rect x="958.4" y="517" width="2.2" height="15.0" fill="rgb(247,47,11)" rx="2" ry="2" />
<text  x="961.36" y="527.5" ></text>
</g>
<g >
<title>read_tsc (15 samples, 0.03%)</title><rect x="1188.6" y="389" width="0.3" height="15.0" fill="rgb(228,94,41)" rx="2" ry="2" />
<text  x="1191.60" y="399.5" ></text>
</g>
<g >
<title>native_sched_clock (10 samples, 0.02%)</title><rect x="1171.5" y="341" width="0.2" height="15.0" fill="rgb(222,223,41)" rx="2" ry="2" />
<text  x="1174.53" y="351.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.04%)</title><rect x="39.4" y="485" width="0.5" height="15.0" fill="rgb(254,58,6)" rx="2" ry="2" />
<text  x="42.43" y="495.5" ></text>
</g>
<g >
<title>HandleStackContext (11 samples, 0.02%)</title><rect x="63.2" y="517" width="0.3" height="15.0" fill="rgb(252,178,6)" rx="2" ry="2" />
<text  x="66.23" y="527.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (27 samples, 0.05%)</title><rect x="56.9" y="501" width="0.6" height="15.0" fill="rgb(208,79,40)" rx="2" ry="2" />
<text  x="59.88" y="511.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (22 samples, 0.04%)</title><rect x="1143.8" y="389" width="0.4" height="15.0" fill="rgb(253,77,34)" rx="2" ry="2" />
<text  x="1146.77" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (106 samples, 0.19%)</title><rect x="1173.9" y="357" width="2.2" height="15.0" fill="rgb(222,11,14)" rx="2" ry="2" />
<text  x="1176.86" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (48 samples, 0.09%)</title><rect x="1176.9" y="389" width="1.0" height="15.0" fill="rgb(238,141,36)" rx="2" ry="2" />
<text  x="1179.86" y="399.5" ></text>
</g>
<g >
<title>NaClSysWrite (16,251 samples, 29.24%)</title><rect x="577.0" y="485" width="345.1" height="15.0" fill="rgb(220,88,51)" rx="2" ry="2" />
<text  x="580.01" y="495.5" >NaClSysWrite</text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (12 samples, 0.02%)</title><rect x="859.4" y="309" width="0.3" height="15.0" fill="rgb(245,151,38)" rx="2" ry="2" />
<text  x="862.41" y="319.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (5 samples, 0.01%)</title><rect x="14.3" y="69" width="0.1" height="15.0" fill="rgb(240,61,54)" rx="2" ry="2" />
<text  x="17.29" y="79.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.02%)</title><rect x="60.6" y="469" width="0.3" height="15.0" fill="rgb(249,92,19)" rx="2" ry="2" />
<text  x="63.64" y="479.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (35 samples, 0.06%)</title><rect x="125.0" y="421" width="0.8" height="15.0" fill="rgb(206,176,5)" rx="2" ry="2" />
<text  x="128.05" y="431.5" ></text>
</g>
<g >
<title>shrink_slab (86 samples, 0.15%)</title><rect x="1094.7" y="437" width="1.8" height="15.0" fill="rgb(249,130,4)" rx="2" ry="2" />
<text  x="1097.66" y="447.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (5 samples, 0.01%)</title><rect x="19.3" y="517" width="0.1" height="15.0" fill="rgb(239,228,23)" rx="2" ry="2" />
<text  x="22.26" y="527.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (6 samples, 0.01%)</title><rect x="745.8" y="341" width="0.2" height="15.0" fill="rgb(211,103,7)" rx="2" ry="2" />
<text  x="748.85" y="351.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.03%)</title><rect x="881.3" y="277" width="0.4" height="15.0" fill="rgb(244,49,35)" rx="2" ry="2" />
<text  x="884.30" y="287.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (26 samples, 0.05%)</title><rect x="790.9" y="325" width="0.5" height="15.0" fill="rgb(232,175,43)" rx="2" ry="2" />
<text  x="793.88" y="335.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (7 samples, 0.01%)</title><rect x="21.7" y="517" width="0.1" height="15.0" fill="rgb(231,113,2)" rx="2" ry="2" />
<text  x="24.68" y="527.5" ></text>
</g>
<g >
<title>NaClMutexLock (402 samples, 0.72%)</title><rect x="112.2" y="469" width="8.5" height="15.0" fill="rgb(222,78,1)" rx="2" ry="2" />
<text  x="115.20" y="479.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (10 samples, 0.02%)</title><rect x="746.0" y="325" width="0.2" height="15.0" fill="rgb(254,196,15)" rx="2" ry="2" />
<text  x="748.97" y="335.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (9 samples, 0.02%)</title><rect x="966.4" y="501" width="0.2" height="15.0" fill="rgb(215,111,21)" rx="2" ry="2" />
<text  x="969.45" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (1,036 samples, 1.86%)</title><rect x="721.3" y="325" width="22.0" height="15.0" fill="rgb(208,157,5)" rx="2" ry="2" />
<text  x="724.28" y="335.5" >s..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (138 samples, 0.25%)</title><rect x="874.8" y="293" width="2.9" height="15.0" fill="rgb(216,17,49)" rx="2" ry="2" />
<text  x="877.78" y="303.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (12 samples, 0.02%)</title><rect x="859.4" y="325" width="0.3" height="15.0" fill="rgb(242,67,30)" rx="2" ry="2" />
<text  x="862.41" y="335.5" ></text>
</g>
<g >
<title>std::panicking::panicking (18 samples, 0.03%)</title><rect x="796.8" y="293" width="0.4" height="15.0" fill="rgb(218,35,13)" rx="2" ry="2" />
<text  x="799.83" y="303.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (17 samples, 0.03%)</title><rect x="1094.2" y="357" width="0.4" height="15.0" fill="rgb(254,215,17)" rx="2" ry="2" />
<text  x="1097.23" y="367.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="125.9" y="117" width="0.1" height="15.0" fill="rgb(207,30,32)" rx="2" ry="2" />
<text  x="128.90" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14 samples, 0.03%)</title><rect x="1155.6" y="341" width="0.3" height="15.0" fill="rgb(222,105,33)" rx="2" ry="2" />
<text  x="1158.62" y="351.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (10 samples, 0.02%)</title><rect x="1096.8" y="421" width="0.2" height="15.0" fill="rgb(229,150,5)" rx="2" ry="2" />
<text  x="1099.82" y="431.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (17 samples, 0.03%)</title><rect x="963.6" y="517" width="0.3" height="15.0" fill="rgb(236,225,44)" rx="2" ry="2" />
<text  x="966.56" y="527.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.01%)</title><rect x="449.0" y="245" width="0.2" height="15.0" fill="rgb(228,75,40)" rx="2" ry="2" />
<text  x="452.01" y="255.5" ></text>
</g>
<g >
<title>alloc_page_buffers (13 samples, 0.02%)</title><rect x="13.2" y="117" width="0.3" height="15.0" fill="rgb(247,205,34)" rx="2" ry="2" />
<text  x="16.25" y="127.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (23 samples, 0.04%)</title><rect x="39.4" y="437" width="0.5" height="15.0" fill="rgb(243,37,41)" rx="2" ry="2" />
<text  x="42.43" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (232 samples, 0.42%)</title><rect x="872.8" y="325" width="4.9" height="15.0" fill="rgb(216,145,52)" rx="2" ry="2" />
<text  x="875.78" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (845 samples, 1.52%)</title><rect x="807.0" y="357" width="18.0" height="15.0" fill="rgb(249,152,27)" rx="2" ry="2" />
<text  x="810.04" y="367.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (25 samples, 0.04%)</title><rect x="788.2" y="293" width="0.5" height="15.0" fill="rgb(210,20,14)" rx="2" ry="2" />
<text  x="791.21" y="303.5" ></text>
</g>
<g >
<title>workingset_eviction (8 samples, 0.01%)</title><rect x="1093.2" y="373" width="0.2" height="15.0" fill="rgb(242,84,38)" rx="2" ry="2" />
<text  x="1096.24" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (25 samples, 0.04%)</title><rect x="788.2" y="309" width="0.5" height="15.0" fill="rgb(212,114,10)" rx="2" ry="2" />
<text  x="791.21" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (16 samples, 0.03%)</title><rect x="882.4" y="277" width="0.4" height="15.0" fill="rgb(231,215,36)" rx="2" ry="2" />
<text  x="885.45" y="287.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (10,040 samples, 18.07%)</title><rect x="344.6" y="325" width="213.2" height="15.0" fill="rgb(224,64,29)" rx="2" ry="2" />
<text  x="347.63" y="335.5" >ringbuf::consumer::Consumer&lt;..</text>
</g>
<g >
<title>ext4_buffered_write_iter (202 samples, 0.36%)</title><rect x="12.6" y="197" width="4.3" height="15.0" fill="rgb(240,158,2)" rx="2" ry="2" />
<text  x="15.61" y="207.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (39 samples, 0.07%)</title><rect x="1185.0" y="277" width="0.8" height="15.0" fill="rgb(227,54,31)" rx="2" ry="2" />
<text  x="1188.01" y="287.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,061 samples, 3.71%)</title><rect x="1098.0" y="453" width="43.8" height="15.0" fill="rgb(219,117,26)" rx="2" ry="2" />
<text  x="1101.01" y="463.5" >cpui..</text>
</g>
<g >
<title>__pagevec_lru_add_fn (9 samples, 0.02%)</title><rect x="960.0" y="357" width="0.2" height="15.0" fill="rgb(209,25,22)" rx="2" ry="2" />
<text  x="963.03" y="367.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,083 samples, 1.95%)</title><rect x="720.3" y="357" width="23.0" height="15.0" fill="rgb(214,34,35)" rx="2" ry="2" />
<text  x="723.28" y="367.5" >&lt;..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (115 samples, 0.21%)</title><rect x="881.7" y="341" width="2.4" height="15.0" fill="rgb(251,202,40)" rx="2" ry="2" />
<text  x="884.70" y="351.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.03%)</title><rect x="60.0" y="485" width="0.4" height="15.0" fill="rgb(215,19,35)" rx="2" ry="2" />
<text  x="62.96" y="495.5" ></text>
</g>
<g >
<title>isolate_freepages (6 samples, 0.01%)</title><rect x="1090.9" y="405" width="0.1" height="15.0" fill="rgb(229,58,49)" rx="2" ry="2" />
<text  x="1093.86" y="415.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (12 samples, 0.02%)</title><rect x="922.1" y="485" width="0.2" height="15.0" fill="rgb(227,158,25)" rx="2" ry="2" />
<text  x="925.09" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (326 samples, 0.59%)</title><rect x="113.5" y="453" width="6.9" height="15.0" fill="rgb(240,46,37)" rx="2" ry="2" />
<text  x="116.47" y="463.5" ></text>
</g>
<g >
<title>try_to_release_page (5 samples, 0.01%)</title><rect x="1096.2" y="261" width="0.1" height="15.0" fill="rgb(232,152,49)" rx="2" ry="2" />
<text  x="1099.19" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (861 samples, 1.55%)</title><rect x="154.3" y="341" width="18.3" height="15.0" fill="rgb(233,200,42)" rx="2" ry="2" />
<text  x="157.29" y="351.5" ></text>
</g>
<g >
<title>exit_mmap (44 samples, 0.08%)</title><rect x="991.8" y="421" width="1.0" height="15.0" fill="rgb(234,115,18)" rx="2" ry="2" />
<text  x="994.84" y="431.5" ></text>
</g>
<g >
<title>enqueue_task (5 samples, 0.01%)</title><rect x="1099.6" y="245" width="0.1" height="15.0" fill="rgb(241,18,30)" rx="2" ry="2" />
<text  x="1102.59" y="255.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (9 samples, 0.02%)</title><rect x="573.0" y="421" width="0.2" height="15.0" fill="rgb(236,226,20)" rx="2" ry="2" />
<text  x="576.04" y="431.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (5 samples, 0.01%)</title><rect x="1174.1" y="341" width="0.1" height="15.0" fill="rgb(214,66,1)" rx="2" ry="2" />
<text  x="1177.12" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (137 samples, 0.25%)</title><rect x="878.8" y="293" width="2.9" height="15.0" fill="rgb(208,203,24)" rx="2" ry="2" />
<text  x="881.79" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (19 samples, 0.03%)</title><rect x="1099.5" y="373" width="0.4" height="15.0" fill="rgb(247,75,6)" rx="2" ry="2" />
<text  x="1102.50" y="383.5" ></text>
</g>
<g >
<title>dispatcher (7 samples, 0.01%)</title><rect x="125.9" y="453" width="0.1" height="15.0" fill="rgb(217,96,49)" rx="2" ry="2" />
<text  x="128.85" y="463.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (8 samples, 0.01%)</title><rect x="992.6" y="245" width="0.2" height="15.0" fill="rgb(249,85,11)" rx="2" ry="2" />
<text  x="995.59" y="255.5" ></text>
</g>
<g >
<title>handle_edge_irq (23 samples, 0.04%)</title><rect x="1098.4" y="373" width="0.5" height="15.0" fill="rgb(220,13,47)" rx="2" ry="2" />
<text  x="1101.44" y="383.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.01%)</title><rect x="125.9" y="197" width="0.1" height="15.0" fill="rgb(211,193,11)" rx="2" ry="2" />
<text  x="128.90" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (41 samples, 0.07%)</title><rect x="822.8" y="245" width="0.8" height="15.0" fill="rgb(217,123,35)" rx="2" ry="2" />
<text  x="825.76" y="255.5" ></text>
</g>
<g >
<title>unmap_single_vma (43 samples, 0.08%)</title><rect x="991.9" y="389" width="0.9" height="15.0" fill="rgb(250,86,47)" rx="2" ry="2" />
<text  x="994.86" y="399.5" ></text>
</g>
<g >
<title>account_page_dirtied (5 samples, 0.01%)</title><rect x="15.6" y="85" width="0.1" height="15.0" fill="rgb(209,117,4)" rx="2" ry="2" />
<text  x="18.63" y="95.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="990.5" y="485" width="0.3" height="15.0" fill="rgb(238,219,54)" rx="2" ry="2" />
<text  x="993.53" y="495.5" ></text>
</g>
<g >
<title>migrate_pages (15 samples, 0.03%)</title><rect x="1090.7" y="453" width="0.3" height="15.0" fill="rgb(248,159,27)" rx="2" ry="2" />
<text  x="1093.67" y="463.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (7 samples, 0.01%)</title><rect x="960.2" y="405" width="0.2" height="15.0" fill="rgb(241,188,34)" rx="2" ry="2" />
<text  x="963.25" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (33 samples, 0.06%)</title><rect x="1099.5" y="421" width="0.7" height="15.0" fill="rgb(208,90,15)" rx="2" ry="2" />
<text  x="1102.48" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (369 samples, 0.66%)</title><rect x="884.9" y="357" width="7.9" height="15.0" fill="rgb(229,77,9)" rx="2" ry="2" />
<text  x="887.93" y="367.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (41 samples, 0.07%)</title><rect x="124.9" y="485" width="0.9" height="15.0" fill="rgb(231,207,49)" rx="2" ry="2" />
<text  x="127.94" y="495.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="125.9" y="325" width="0.1" height="15.0" fill="rgb(237,153,31)" rx="2" ry="2" />
<text  x="128.90" y="335.5" ></text>
</g>
<g >
<title>__GI___poll (31 samples, 0.06%)</title><rect x="11.7" y="469" width="0.6" height="15.0" fill="rgb(214,165,5)" rx="2" ry="2" />
<text  x="14.66" y="479.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (98 samples, 0.18%)</title><rect x="1144.6" y="469" width="2.1" height="15.0" fill="rgb(250,112,23)" rx="2" ry="2" />
<text  x="1147.62" y="479.5" ></text>
</g>
<g >
<title>asm_common_interrupt (50 samples, 0.09%)</title><rect x="1098.4" y="421" width="1.1" height="15.0" fill="rgb(222,49,25)" rx="2" ry="2" />
<text  x="1101.42" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (52 samples, 0.09%)</title><rect x="1175.0" y="341" width="1.1" height="15.0" fill="rgb(222,10,0)" rx="2" ry="2" />
<text  x="1178.01" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (19 samples, 0.03%)</title><rect x="60.0" y="453" width="0.4" height="15.0" fill="rgb(230,52,2)" rx="2" ry="2" />
<text  x="62.96" y="463.5" ></text>
</g>
<g >
<title>try_to_release_page (19 samples, 0.03%)</title><rect x="1094.2" y="389" width="0.4" height="15.0" fill="rgb(238,201,20)" rx="2" ry="2" />
<text  x="1097.19" y="399.5" ></text>
</g>
<g >
<title>__set_page_dirty (7 samples, 0.01%)</title><rect x="15.6" y="101" width="0.2" height="15.0" fill="rgb(226,179,23)" rx="2" ry="2" />
<text  x="18.61" y="111.5" ></text>
</g>
<g >
<title>lind_exit (7 samples, 0.01%)</title><rect x="125.9" y="469" width="0.1" height="15.0" fill="rgb(227,90,19)" rx="2" ry="2" />
<text  x="128.85" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (64 samples, 0.12%)</title><rect x="873.4" y="293" width="1.4" height="15.0" fill="rgb(240,103,28)" rx="2" ry="2" />
<text  x="876.42" y="303.5" ></text>
</g>
<g >
<title>rmqueue (19 samples, 0.03%)</title><rect x="959.4" y="357" width="0.4" height="15.0" fill="rgb(232,112,20)" rx="2" ry="2" />
<text  x="962.44" y="367.5" ></text>
</g>
<g >
<title>ext4_releasepage (17 samples, 0.03%)</title><rect x="1094.2" y="373" width="0.4" height="15.0" fill="rgb(221,29,38)" rx="2" ry="2" />
<text  x="1097.23" y="383.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (38 samples, 0.07%)</title><rect x="825.0" y="357" width="0.8" height="15.0" fill="rgb(248,23,3)" rx="2" ry="2" />
<text  x="827.99" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (112 samples, 0.20%)</title><rect x="821.9" y="277" width="2.4" height="15.0" fill="rgb(240,40,0)" rx="2" ry="2" />
<text  x="824.93" y="287.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (151 samples, 0.27%)</title><rect x="878.5" y="325" width="3.2" height="15.0" fill="rgb(250,27,8)" rx="2" ry="2" />
<text  x="881.50" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (32 samples, 0.06%)</title><rect x="823.6" y="245" width="0.7" height="15.0" fill="rgb(216,154,43)" rx="2" ry="2" />
<text  x="826.63" y="255.5" ></text>
</g>
<g >
<title>cpuidle_select (196 samples, 0.35%)</title><rect x="1172.1" y="389" width="4.2" height="15.0" fill="rgb(234,37,26)" rx="2" ry="2" />
<text  x="1175.10" y="399.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,045 samples, 1.88%)</title><rect x="1154.3" y="405" width="22.2" height="15.0" fill="rgb(245,118,13)" rx="2" ry="2" />
<text  x="1157.28" y="415.5" >c..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (18 samples, 0.03%)</title><rect x="796.8" y="261" width="0.4" height="15.0" fill="rgb(238,166,31)" rx="2" ry="2" />
<text  x="799.83" y="271.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (5 samples, 0.01%)</title><rect x="16.0" y="53" width="0.1" height="15.0" fill="rgb(226,108,3)" rx="2" ry="2" />
<text  x="19.01" y="63.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (290 samples, 0.52%)</title><rect x="785.3" y="341" width="6.1" height="15.0" fill="rgb(207,80,22)" rx="2" ry="2" />
<text  x="788.28" y="351.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (14 samples, 0.03%)</title><rect x="1095.3" y="325" width="0.3" height="15.0" fill="rgb(225,156,27)" rx="2" ry="2" />
<text  x="1098.30" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (64 samples, 0.12%)</title><rect x="882.8" y="293" width="1.3" height="15.0" fill="rgb(231,73,6)" rx="2" ry="2" />
<text  x="885.79" y="303.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (28 samples, 0.05%)</title><rect x="1175.4" y="325" width="0.6" height="15.0" fill="rgb(213,222,45)" rx="2" ry="2" />
<text  x="1178.39" y="335.5" ></text>
</g>
<g >
<title>cpuidle_select (118 samples, 0.21%)</title><rect x="1141.8" y="453" width="2.5" height="15.0" fill="rgb(235,87,13)" rx="2" ry="2" />
<text  x="1144.84" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (207 samples, 0.37%)</title><rect x="12.5" y="357" width="4.4" height="15.0" fill="rgb(249,5,17)" rx="2" ry="2" />
<text  x="15.51" y="367.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (5 samples, 0.01%)</title><rect x="1093.0" y="293" width="0.1" height="15.0" fill="rgb(219,60,17)" rx="2" ry="2" />
<text  x="1095.96" y="303.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (11 samples, 0.02%)</title><rect x="15.5" y="117" width="0.3" height="15.0" fill="rgb(243,188,28)" rx="2" ry="2" />
<text  x="18.54" y="127.5" ></text>
</g>
<g >
<title>compact_zone (16 samples, 0.03%)</title><rect x="1090.7" y="469" width="0.3" height="15.0" fill="rgb(234,33,16)" rx="2" ry="2" />
<text  x="1093.67" y="479.5" ></text>
</g>
<g >
<title>napi_complete_done (10 samples, 0.02%)</title><rect x="1099.3" y="277" width="0.2" height="15.0" fill="rgb(243,107,48)" rx="2" ry="2" />
<text  x="1102.27" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (138 samples, 0.25%)</title><rect x="810.8" y="245" width="2.9" height="15.0" fill="rgb(229,108,16)" rx="2" ry="2" />
<text  x="813.76" y="255.5" ></text>
</g>
<g >
<title>llist_reverse_order (30 samples, 0.05%)</title><rect x="1145.5" y="453" width="0.7" height="15.0" fill="rgb(221,225,50)" rx="2" ry="2" />
<text  x="1148.51" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (14 samples, 0.03%)</title><rect x="796.3" y="309" width="0.3" height="15.0" fill="rgb(218,152,16)" rx="2" ry="2" />
<text  x="799.26" y="319.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (5 samples, 0.01%)</title><rect x="16.2" y="69" width="0.1" height="15.0" fill="rgb(209,98,47)" rx="2" ry="2" />
<text  x="19.20" y="79.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (21 samples, 0.04%)</title><rect x="992.3" y="325" width="0.5" height="15.0" fill="rgb(221,133,9)" rx="2" ry="2" />
<text  x="995.33" y="335.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (11 samples, 0.02%)</title><rect x="1099.9" y="373" width="0.3" height="15.0" fill="rgb(209,189,23)" rx="2" ry="2" />
<text  x="1102.92" y="383.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (17 samples, 0.03%)</title><rect x="966.6" y="501" width="0.4" height="15.0" fill="rgb(239,161,28)" rx="2" ry="2" />
<text  x="969.64" y="511.5" ></text>
</g>
<g >
<title>perf (334 samples, 0.60%)</title><rect x="10.0" y="549" width="7.1" height="15.0" fill="rgb(206,135,0)" rx="2" ry="2" />
<text  x="13.02" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (1,382 samples, 2.49%)</title><rect x="662.4" y="325" width="29.3" height="15.0" fill="rgb(206,63,16)" rx="2" ry="2" />
<text  x="665.35" y="335.5" >co..</text>
</g>
<g >
<title>compaction_alloc (6 samples, 0.01%)</title><rect x="1090.9" y="421" width="0.1" height="15.0" fill="rgb(254,32,6)" rx="2" ry="2" />
<text  x="1093.86" y="431.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (77 samples, 0.14%)</title><rect x="10.0" y="469" width="1.7" height="15.0" fill="rgb(246,35,2)" rx="2" ry="2" />
<text  x="13.02" y="479.5" ></text>
</g>
<g >
<title>__pagevec_release (6 samples, 0.01%)</title><rect x="1095.8" y="277" width="0.2" height="15.0" fill="rgb(217,229,6)" rx="2" ry="2" />
<text  x="1098.85" y="287.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (27 samples, 0.05%)</title><rect x="56.9" y="469" width="0.6" height="15.0" fill="rgb(252,103,42)" rx="2" ry="2" />
<text  x="59.88" y="479.5" ></text>
</g>
<g >
<title>get_page_from_freelist (48 samples, 0.09%)</title><rect x="958.8" y="373" width="1.0" height="15.0" fill="rgb(207,9,19)" rx="2" ry="2" />
<text  x="961.82" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="990.5" y="501" width="0.3" height="15.0" fill="rgb(215,193,8)" rx="2" ry="2" />
<text  x="993.53" y="511.5" ></text>
</g>
<g >
<title>alloc_buffer_head (10 samples, 0.02%)</title><rect x="13.3" y="101" width="0.2" height="15.0" fill="rgb(218,194,20)" rx="2" ry="2" />
<text  x="16.27" y="111.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (15 samples, 0.03%)</title><rect x="22.0" y="517" width="0.3" height="15.0" fill="rgb(233,32,23)" rx="2" ry="2" />
<text  x="25.00" y="527.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14 samples, 0.03%)</title><rect x="1155.6" y="357" width="0.3" height="15.0" fill="rgb(227,171,26)" rx="2" ry="2" />
<text  x="1158.62" y="367.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (264 samples, 0.48%)</title><rect x="785.3" y="325" width="5.6" height="15.0" fill="rgb(249,68,32)" rx="2" ry="2" />
<text  x="788.28" y="335.5" ></text>
</g>
<g >
<title>new_sync_write (6 samples, 0.01%)</title><rect x="17.0" y="453" width="0.1" height="15.0" fill="rgb(250,212,2)" rx="2" ry="2" />
<text  x="19.99" y="463.5" ></text>
</g>
<g >
<title>_perf_event_enable (73 samples, 0.13%)</title><rect x="10.1" y="325" width="1.5" height="15.0" fill="rgb(243,34,45)" rx="2" ry="2" />
<text  x="13.08" y="335.5" ></text>
</g>
<g >
<title>cpuidle_enter (797 samples, 1.43%)</title><rect x="1155.1" y="389" width="16.9" height="15.0" fill="rgb(208,143,42)" rx="2" ry="2" />
<text  x="1158.11" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (236 samples, 0.42%)</title><rect x="984.7" y="517" width="5.0" height="15.0" fill="rgb(243,83,7)" rx="2" ry="2" />
<text  x="987.69" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (18 samples, 0.03%)</title><rect x="963.9" y="517" width="0.4" height="15.0" fill="rgb(241,106,13)" rx="2" ry="2" />
<text  x="966.92" y="527.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (15 samples, 0.03%)</title><rect x="1093.6" y="357" width="0.3" height="15.0" fill="rgb(236,94,20)" rx="2" ry="2" />
<text  x="1096.62" y="367.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (26 samples, 0.05%)</title><rect x="1098.9" y="357" width="0.6" height="15.0" fill="rgb(252,54,45)" rx="2" ry="2" />
<text  x="1101.93" y="367.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (682 samples, 1.23%)</title><rect x="619.4" y="373" width="14.5" height="15.0" fill="rgb(242,7,28)" rx="2" ry="2" />
<text  x="622.38" y="383.5" ></text>
</g>
<g >
<title>vfs_iter_write (202 samples, 0.36%)</title><rect x="12.6" y="261" width="4.3" height="15.0" fill="rgb(222,218,22)" rx="2" ry="2" />
<text  x="15.61" y="271.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (74 samples, 0.13%)</title><rect x="90.2" y="501" width="1.6" height="15.0" fill="rgb(220,38,54)" rx="2" ry="2" />
<text  x="93.24" y="511.5" ></text>
</g>
<g >
<title>psi_task_switch (5 samples, 0.01%)</title><rect x="1151.4" y="437" width="0.1" height="15.0" fill="rgb(233,126,0)" rx="2" ry="2" />
<text  x="1154.42" y="447.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (4,373 samples, 7.87%)</title><rect x="1097.1" y="533" width="92.8" height="15.0" fill="rgb(229,56,15)" rx="2" ry="2" />
<text  x="1100.06" y="543.5" >secondary_s..</text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (5 samples, 0.01%)</title><rect x="1170.6" y="341" width="0.1" height="15.0" fill="rgb(212,158,28)" rx="2" ry="2" />
<text  x="1173.63" y="351.5" ></text>
</g>
<g >
<title>list_lru_walk_one (33 samples, 0.06%)</title><rect x="1095.8" y="357" width="0.7" height="15.0" fill="rgb(218,60,48)" rx="2" ry="2" />
<text  x="1098.78" y="367.5" ></text>
</g>
<g >
<title>perf_ioctl (74 samples, 0.13%)</title><rect x="10.1" y="373" width="1.5" height="15.0" fill="rgb(213,0,41)" rx="2" ry="2" />
<text  x="13.06" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1,177 samples, 2.12%)</title><rect x="636.8" y="357" width="25.0" height="15.0" fill="rgb(237,104,50)" rx="2" ry="2" />
<text  x="639.77" y="367.5" >c..</text>
</g>
<g >
<title>__x64_sys_ioctl (77 samples, 0.14%)</title><rect x="10.0" y="389" width="1.7" height="15.0" fill="rgb(247,215,13)" rx="2" ry="2" />
<text  x="13.02" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (242 samples, 0.44%)</title><rect x="614.2" y="405" width="5.2" height="15.0" fill="rgb(220,111,43)" rx="2" ry="2" />
<text  x="617.22" y="415.5" ></text>
</g>
<g >
<title>__delete_from_page_cache (7 samples, 0.01%)</title><rect x="1096.0" y="229" width="0.2" height="15.0" fill="rgb(211,53,41)" rx="2" ry="2" />
<text  x="1099.02" y="239.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (255 samples, 0.46%)</title><rect x="50.0" y="469" width="5.4" height="15.0" fill="rgb(227,96,15)" rx="2" ry="2" />
<text  x="53.01" y="479.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (100 samples, 0.18%)</title><rect x="1184.9" y="309" width="2.1" height="15.0" fill="rgb(217,75,30)" rx="2" ry="2" />
<text  x="1187.93" y="319.5" ></text>
</g>
<g >
<title>core::cmp::min (6 samples, 0.01%)</title><rect x="745.8" y="357" width="0.2" height="15.0" fill="rgb(238,131,15)" rx="2" ry="2" />
<text  x="748.85" y="367.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (77 samples, 0.14%)</title><rect x="10.0" y="453" width="1.7" height="15.0" fill="rgb(252,187,14)" rx="2" ry="2" />
<text  x="13.02" y="463.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (41 samples, 0.07%)</title><rect x="822.8" y="213" width="0.8" height="15.0" fill="rgb(227,200,4)" rx="2" ry="2" />
<text  x="825.76" y="223.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (12 samples, 0.02%)</title><rect x="859.4" y="293" width="0.3" height="15.0" fill="rgb(227,181,0)" rx="2" ry="2" />
<text  x="862.41" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (53 samples, 0.10%)</title><rect x="964.3" y="517" width="1.1" height="15.0" fill="rgb(217,208,41)" rx="2" ry="2" />
<text  x="967.32" y="527.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (13 samples, 0.02%)</title><rect x="634.3" y="389" width="0.2" height="15.0" fill="rgb(220,207,10)" rx="2" ry="2" />
<text  x="637.26" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (21 samples, 0.04%)</title><rect x="1152.0" y="469" width="0.4" height="15.0" fill="rgb(233,174,33)" rx="2" ry="2" />
<text  x="1154.97" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (374 samples, 0.67%)</title><rect x="625.9" y="325" width="8.0" height="15.0" fill="rgb(215,45,11)" rx="2" ry="2" />
<text  x="628.92" y="335.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,221 samples, 4.00%)</title><rect x="1097.4" y="469" width="47.1" height="15.0" fill="rgb(242,79,41)" rx="2" ry="2" />
<text  x="1100.38" y="479.5" >cpui..</text>
</g>
<g >
<title>list_lru_walk_one (5 samples, 0.01%)</title><rect x="1094.9" y="357" width="0.1" height="15.0" fill="rgb(254,199,14)" rx="2" ry="2" />
<text  x="1097.93" y="367.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (17 samples, 0.03%)</title><rect x="123.8" y="501" width="0.3" height="15.0" fill="rgb(216,160,11)" rx="2" ry="2" />
<text  x="126.77" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (5 samples, 0.01%)</title><rect x="125.9" y="309" width="0.1" height="15.0" fill="rgb(239,170,21)" rx="2" ry="2" />
<text  x="128.90" y="319.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (137 samples, 0.25%)</title><rect x="878.8" y="309" width="2.9" height="15.0" fill="rgb(232,196,9)" rx="2" ry="2" />
<text  x="881.79" y="319.5" ></text>
</g>
<g >
<title>rcu_core (8 samples, 0.01%)</title><rect x="1099.9" y="309" width="0.2" height="15.0" fill="rgb(239,32,51)" rx="2" ry="2" />
<text  x="1102.92" y="319.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 0.11%)</title><rect x="10.3" y="213" width="1.3" height="15.0" fill="rgb(215,184,18)" rx="2" ry="2" />
<text  x="13.30" y="223.5" ></text>
</g>
<g >
<title>__remove_mapping (75 samples, 0.13%)</title><rect x="1091.8" y="389" width="1.6" height="15.0" fill="rgb(210,214,42)" rx="2" ry="2" />
<text  x="1094.81" y="399.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (5 samples, 0.01%)</title><rect x="1172.9" y="357" width="0.1" height="15.0" fill="rgb(252,227,10)" rx="2" ry="2" />
<text  x="1175.86" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (308 samples, 0.55%)</title><rect x="619.4" y="325" width="6.5" height="15.0" fill="rgb(236,29,53)" rx="2" ry="2" />
<text  x="622.38" y="335.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.01%)</title><rect x="125.9" y="149" width="0.1" height="15.0" fill="rgb(225,209,0)" rx="2" ry="2" />
<text  x="128.90" y="159.5" ></text>
</g>
<g >
<title>std::panicking::panicking (9 samples, 0.02%)</title><rect x="859.7" y="309" width="0.2" height="15.0" fill="rgb(236,65,39)" rx="2" ry="2" />
<text  x="862.66" y="319.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (6 samples, 0.01%)</title><rect x="1184.7" y="293" width="0.1" height="15.0" fill="rgb(243,74,12)" rx="2" ry="2" />
<text  x="1187.67" y="303.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (39 samples, 0.07%)</title><rect x="1189.0" y="421" width="0.8" height="15.0" fill="rgb(224,44,4)" rx="2" ry="2" />
<text  x="1191.98" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.02%)</title><rect x="40.2" y="469" width="0.3" height="15.0" fill="rgb(254,57,50)" rx="2" ry="2" />
<text  x="43.24" y="479.5" ></text>
</g>
<g >
<title>__free_one_page (11 samples, 0.02%)</title><rect x="1093.7" y="341" width="0.2" height="15.0" fill="rgb(215,200,54)" rx="2" ry="2" />
<text  x="1096.68" y="351.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="883.7" y="245" width="0.3" height="15.0" fill="rgb(253,229,26)" rx="2" ry="2" />
<text  x="886.74" y="255.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (20,406 samples, 36.72%)</title><rect x="126.1" y="405" width="433.3" height="15.0" fill="rgb(234,50,51)" rx="2" ry="2" />
<text  x="129.07" y="415.5" >rustposix::safeposix::dispatcher::dispatcher::{{closure}}</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1,382 samples, 2.49%)</title><rect x="662.4" y="341" width="29.3" height="15.0" fill="rgb(205,178,7)" rx="2" ry="2" />
<text  x="665.35" y="351.5" >co..</text>
</g>
<g >
<title>pick_next_task_fair (327 samples, 0.59%)</title><rect x="1180.2" y="373" width="6.9" height="15.0" fill="rgb(238,171,37)" rx="2" ry="2" />
<text  x="1183.19" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (229 samples, 0.41%)</title><rect x="819.4" y="309" width="4.9" height="15.0" fill="rgb(217,139,47)" rx="2" ry="2" />
<text  x="822.44" y="319.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (9 samples, 0.02%)</title><rect x="966.4" y="485" width="0.2" height="15.0" fill="rgb(237,53,32)" rx="2" ry="2" />
<text  x="969.45" y="495.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (8 samples, 0.01%)</title><rect x="1096.5" y="469" width="0.2" height="15.0" fill="rgb(239,92,34)" rx="2" ry="2" />
<text  x="1099.55" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (120 samples, 0.22%)</title><rect x="816.9" y="229" width="2.5" height="15.0" fill="rgb(219,67,0)" rx="2" ry="2" />
<text  x="819.90" y="239.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (24 samples, 0.04%)</title><rect x="15.8" y="101" width="0.5" height="15.0" fill="rgb(236,42,52)" rx="2" ry="2" />
<text  x="18.80" y="111.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (882 samples, 1.59%)</title><rect x="91.8" y="501" width="18.7" height="15.0" fill="rgb(218,118,20)" rx="2" ry="2" />
<text  x="94.81" y="511.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (26 samples, 0.05%)</title><rect x="1098.9" y="341" width="0.6" height="15.0" fill="rgb(211,65,14)" rx="2" ry="2" />
<text  x="1101.93" y="351.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 0.01%)</title><rect x="12.0" y="325" width="0.2" height="15.0" fill="rgb(252,225,43)" rx="2" ry="2" />
<text  x="15.04" y="335.5" ></text>
</g>
<g >
<title>perf_poll (10 samples, 0.02%)</title><rect x="11.8" y="373" width="0.2" height="15.0" fill="rgb(252,147,49)" rx="2" ry="2" />
<text  x="14.83" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (8 samples, 0.01%)</title><rect x="1092.7" y="341" width="0.2" height="15.0" fill="rgb(225,184,36)" rx="2" ry="2" />
<text  x="1095.71" y="351.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (13 samples, 0.02%)</title><rect x="878.2" y="293" width="0.3" height="15.0" fill="rgb(250,169,48)" rx="2" ry="2" />
<text  x="881.22" y="303.5" ></text>
</g>
<g >
<title>proactive_compact_node (16 samples, 0.03%)</title><rect x="1090.7" y="485" width="0.3" height="15.0" fill="rgb(220,174,35)" rx="2" ry="2" />
<text  x="1093.67" y="495.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (19 samples, 0.03%)</title><rect x="1150.0" y="341" width="0.4" height="15.0" fill="rgb(219,1,20)" rx="2" ry="2" />
<text  x="1152.97" y="351.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (27 samples, 0.05%)</title><rect x="15.8" y="133" width="0.5" height="15.0" fill="rgb(242,80,41)" rx="2" ry="2" />
<text  x="18.78" y="143.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (57 samples, 0.10%)</title><rect x="1155.9" y="357" width="1.3" height="15.0" fill="rgb(223,27,14)" rx="2" ry="2" />
<text  x="1158.94" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (37 samples, 0.07%)</title><rect x="1144.7" y="453" width="0.8" height="15.0" fill="rgb(254,150,44)" rx="2" ry="2" />
<text  x="1147.73" y="463.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (75 samples, 0.13%)</title><rect x="789.2" y="309" width="1.6" height="15.0" fill="rgb(247,127,12)" rx="2" ry="2" />
<text  x="792.19" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_write (6 samples, 0.01%)</title><rect x="17.0" y="501" width="0.1" height="15.0" fill="rgb(238,208,36)" rx="2" ry="2" />
<text  x="19.99" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (30 samples, 0.05%)</title><rect x="14.5" y="101" width="0.6" height="15.0" fill="rgb(246,114,45)" rx="2" ry="2" />
<text  x="17.48" y="111.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (26 samples, 0.05%)</title><rect x="13.9" y="117" width="0.6" height="15.0" fill="rgb(207,22,35)" rx="2" ry="2" />
<text  x="16.93" y="127.5" ></text>
</g>
<g >
<title>NaClLog (130 samples, 0.23%)</title><rect x="917.4" y="469" width="2.8" height="15.0" fill="rgb(219,167,41)" rx="2" ry="2" />
<text  x="920.44" y="479.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,048 samples, 3.69%)</title><rect x="1098.2" y="437" width="43.4" height="15.0" fill="rgb(239,77,29)" rx="2" ry="2" />
<text  x="1101.16" y="447.5" >cpui..</text>
</g>
<g >
<title>__libc_write (208 samples, 0.37%)</title><rect x="12.5" y="389" width="4.4" height="15.0" fill="rgb(217,47,41)" rx="2" ry="2" />
<text  x="15.48" y="399.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (208 samples, 0.37%)</title><rect x="443.7" y="277" width="4.4" height="15.0" fill="rgb(218,15,19)" rx="2" ry="2" />
<text  x="446.73" y="287.5" ></text>
</g>
<g >
<title>do_futex (7 samples, 0.01%)</title><rect x="1090.1" y="485" width="0.1" height="15.0" fill="rgb(212,77,35)" rx="2" ry="2" />
<text  x="1093.05" y="495.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_init (25 samples, 0.04%)</title><rect x="661.8" y="341" width="0.5" height="15.0" fill="rgb(246,192,51)" rx="2" ry="2" />
<text  x="664.76" y="351.5" ></text>
</g>
<g >
<title>dispatcher (16 samples, 0.03%)</title><rect x="872.2" y="373" width="0.3" height="15.0" fill="rgb(216,97,49)" rx="2" ry="2" />
<text  x="875.17" y="383.5" ></text>
</g>
<g >
<title>native_write_msr (62 samples, 0.11%)</title><rect x="10.3" y="165" width="1.3" height="15.0" fill="rgb(239,48,34)" rx="2" ry="2" />
<text  x="13.32" y="175.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (64 samples, 0.12%)</title><rect x="882.8" y="309" width="1.3" height="15.0" fill="rgb(207,167,51)" rx="2" ry="2" />
<text  x="885.79" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (726 samples, 1.31%)</title><rect x="844.0" y="325" width="15.4" height="15.0" fill="rgb(209,179,49)" rx="2" ry="2" />
<text  x="846.99" y="335.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (257 samples, 0.46%)</title><rect x="1091.0" y="453" width="5.5" height="15.0" fill="rgb(219,132,42)" rx="2" ry="2" />
<text  x="1094.03" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (726 samples, 1.31%)</title><rect x="844.0" y="309" width="15.4" height="15.0" fill="rgb(213,186,50)" rx="2" ry="2" />
<text  x="846.99" y="319.5" ></text>
</g>
<g >
<title>record__write (209 samples, 0.38%)</title><rect x="12.5" y="421" width="4.4" height="15.0" fill="rgb(236,29,54)" rx="2" ry="2" />
<text  x="15.46" y="431.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (34 samples, 0.06%)</title><rect x="1152.8" y="485" width="0.7" height="15.0" fill="rgb(231,203,1)" rx="2" ry="2" />
<text  x="1155.80" y="495.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (104 samples, 0.19%)</title><rect x="13.0" y="165" width="2.2" height="15.0" fill="rgb(209,229,41)" rx="2" ry="2" />
<text  x="16.04" y="175.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (32 samples, 0.06%)</title><rect x="824.3" y="309" width="0.7" height="15.0" fill="rgb(224,184,42)" rx="2" ry="2" />
<text  x="827.31" y="319.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (7 samples, 0.01%)</title><rect x="1152.3" y="453" width="0.1" height="15.0" fill="rgb(227,109,11)" rx="2" ry="2" />
<text  x="1155.27" y="463.5" ></text>
</g>
<g >
<title>dispatcher@plt (14 samples, 0.03%)</title><rect x="898.6" y="421" width="0.3" height="15.0" fill="rgb(227,194,47)" rx="2" ry="2" />
<text  x="901.58" y="431.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1,713 samples, 3.08%)</title><rect x="1153.5" y="501" width="36.4" height="15.0" fill="rgb(209,41,11)" rx="2" ry="2" />
<text  x="1156.54" y="511.5" >x86..</text>
</g>
<g >
<title>iput.part.0 (13 samples, 0.02%)</title><rect x="1095.3" y="293" width="0.3" height="15.0" fill="rgb(212,35,0)" rx="2" ry="2" />
<text  x="1098.32" y="303.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (18 samples, 0.03%)</title><rect x="917.1" y="469" width="0.3" height="15.0" fill="rgb(215,203,35)" rx="2" ry="2" />
<text  x="920.06" y="479.5" ></text>
</g>
<g >
<title>rcu_core (5 samples, 0.01%)</title><rect x="1093.0" y="245" width="0.1" height="15.0" fill="rgb(232,79,15)" rx="2" ry="2" />
<text  x="1095.96" y="255.5" ></text>
</g>
<g >
<title>free_unref_page_list (23 samples, 0.04%)</title><rect x="1093.4" y="389" width="0.5" height="15.0" fill="rgb(214,71,25)" rx="2" ry="2" />
<text  x="1096.45" y="399.5" ></text>
</g>
<g >
<title>sched_clock_cpu (9 samples, 0.02%)</title><rect x="1151.6" y="421" width="0.2" height="15.0" fill="rgb(213,13,4)" rx="2" ry="2" />
<text  x="1154.59" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (15 samples, 0.03%)</title><rect x="1099.5" y="341" width="0.3" height="15.0" fill="rgb(236,196,52)" rx="2" ry="2" />
<text  x="1102.50" y="351.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (10 samples, 0.02%)</title><rect x="915.1" y="453" width="0.2" height="15.0" fill="rgb(248,204,3)" rx="2" ry="2" />
<text  x="918.08" y="463.5" ></text>
</g>
<g >
<title>ext4_writepages (10 samples, 0.02%)</title><rect x="1096.8" y="357" width="0.2" height="15.0" fill="rgb(240,47,22)" rx="2" ry="2" />
<text  x="1099.82" y="367.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (83 samples, 0.15%)</title><rect x="915.3" y="469" width="1.8" height="15.0" fill="rgb(221,140,17)" rx="2" ry="2" />
<text  x="918.29" y="479.5" ></text>
</g>
<g >
<title>sched_clock_cpu (16 samples, 0.03%)</title><rect x="1171.4" y="357" width="0.4" height="15.0" fill="rgb(208,174,2)" rx="2" ry="2" />
<text  x="1174.42" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (53 samples, 0.10%)</title><rect x="958.7" y="389" width="1.2" height="15.0" fill="rgb(215,204,28)" rx="2" ry="2" />
<text  x="961.74" y="399.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (21 samples, 0.04%)</title><rect x="859.4" y="341" width="0.5" height="15.0" fill="rgb(220,48,28)" rx="2" ry="2" />
<text  x="862.41" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (19 samples, 0.03%)</title><rect x="60.0" y="437" width="0.4" height="15.0" fill="rgb(221,89,3)" rx="2" ry="2" />
<text  x="62.96" y="447.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (38 samples, 0.07%)</title><rect x="124.1" y="501" width="0.8" height="15.0" fill="rgb(224,9,44)" rx="2" ry="2" />
<text  x="127.13" y="511.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (57 samples, 0.10%)</title><rect x="1182.0" y="325" width="1.2" height="15.0" fill="rgb(230,172,4)" rx="2" ry="2" />
<text  x="1185.04" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5 samples, 0.01%)</title><rect x="1093.0" y="357" width="0.1" height="15.0" fill="rgb(237,177,48)" rx="2" ry="2" />
<text  x="1095.96" y="367.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (11 samples, 0.02%)</title><rect x="1099.9" y="357" width="0.3" height="15.0" fill="rgb(226,208,0)" rx="2" ry="2" />
<text  x="1102.92" y="367.5" ></text>
</g>
<g >
<title>__run_hrtimer (14 samples, 0.03%)</title><rect x="1099.5" y="325" width="0.3" height="15.0" fill="rgb(233,156,37)" rx="2" ry="2" />
<text  x="1102.52" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (18 samples, 0.03%)</title><rect x="788.8" y="293" width="0.4" height="15.0" fill="rgb(217,122,25)" rx="2" ry="2" />
<text  x="791.80" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (23 samples, 0.04%)</title><rect x="39.4" y="501" width="0.5" height="15.0" fill="rgb(219,154,4)" rx="2" ry="2" />
<text  x="42.43" y="511.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (49 samples, 0.09%)</title><rect x="448.1" y="293" width="1.1" height="15.0" fill="rgb(236,76,12)" rx="2" ry="2" />
<text  x="451.14" y="303.5" ></text>
</g>
<g >
<title>jbd2__journal_start (6 samples, 0.01%)</title><rect x="13.1" y="133" width="0.1" height="15.0" fill="rgb(235,12,53)" rx="2" ry="2" />
<text  x="16.10" y="143.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (20,407 samples, 36.72%)</title><rect x="126.0" y="469" width="433.4" height="15.0" fill="rgb(232,31,49)" rx="2" ry="2" />
<text  x="129.04" y="479.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>std::thread::panicking (18 samples, 0.03%)</title><rect x="796.8" y="309" width="0.4" height="15.0" fill="rgb(225,107,41)" rx="2" ry="2" />
<text  x="799.83" y="319.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (32 samples, 0.06%)</title><rect x="823.6" y="197" width="0.7" height="15.0" fill="rgb(222,61,9)" rx="2" ry="2" />
<text  x="826.63" y="207.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (5 samples, 0.01%)</title><rect x="1092.7" y="325" width="0.1" height="15.0" fill="rgb(239,40,54)" rx="2" ry="2" />
<text  x="1095.73" y="335.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (6 samples, 0.01%)</title><rect x="12.0" y="357" width="0.2" height="15.0" fill="rgb(222,119,17)" rx="2" ry="2" />
<text  x="15.04" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.01%)</title><rect x="884.0" y="277" width="0.1" height="15.0" fill="rgb(237,49,40)" rx="2" ry="2" />
<text  x="887.02" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (36 samples, 0.06%)</title><rect x="1089.9" y="517" width="0.8" height="15.0" fill="rgb(214,42,44)" rx="2" ry="2" />
<text  x="1092.90" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (457 samples, 0.82%)</title><rect x="438.4" y="293" width="9.7" height="15.0" fill="rgb(206,113,28)" rx="2" ry="2" />
<text  x="441.44" y="303.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (6 samples, 0.01%)</title><rect x="1155.6" y="325" width="0.1" height="15.0" fill="rgb(214,91,45)" rx="2" ry="2" />
<text  x="1158.62" y="335.5" ></text>
</g>
<g >
<title>ion (209 samples, 0.38%)</title><rect x="12.5" y="405" width="4.4" height="15.0" fill="rgb(236,165,9)" rx="2" ry="2" />
<text  x="15.46" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1,079 samples, 1.94%)</title><rect x="319.2" y="309" width="22.9" height="15.0" fill="rgb(221,11,46)" rx="2" ry="2" />
<text  x="322.19" y="319.5" >c..</text>
</g>
<g >
<title>handle_mm_fault (98 samples, 0.18%)</title><rect x="958.4" y="469" width="2.1" height="15.0" fill="rgb(228,112,19)" rx="2" ry="2" />
<text  x="961.44" y="479.5" ></text>
</g>
<g >
<title>free_buffer_head (11 samples, 0.02%)</title><rect x="1094.4" y="325" width="0.2" height="15.0" fill="rgb(254,113,51)" rx="2" ry="2" />
<text  x="1097.36" y="335.5" ></text>
</g>
<g >
<title>shrink_node (257 samples, 0.46%)</title><rect x="1091.0" y="469" width="5.5" height="15.0" fill="rgb(254,18,41)" rx="2" ry="2" />
<text  x="1094.03" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (274 samples, 0.49%)</title><rect x="892.8" y="341" width="5.8" height="15.0" fill="rgb(228,229,0)" rx="2" ry="2" />
<text  x="895.77" y="351.5" ></text>
</g>
<g >
<title>handle_pte_fault (91 samples, 0.16%)</title><rect x="958.6" y="437" width="1.9" height="15.0" fill="rgb(225,16,23)" rx="2" ry="2" />
<text  x="961.59" y="447.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (647 samples, 1.16%)</title><rect x="41.7" y="517" width="13.7" height="15.0" fill="rgb(239,226,27)" rx="2" ry="2" />
<text  x="44.68" y="527.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3,088 samples, 5.56%)</title><rect x="485.0" y="293" width="65.6" height="15.0" fill="rgb(237,18,49)" rx="2" ry="2" />
<text  x="488.05" y="303.5" >core::i..</text>
</g>
<g >
<title>update_rq_clock (10 samples, 0.02%)</title><rect x="1151.6" y="437" width="0.2" height="15.0" fill="rgb(244,97,13)" rx="2" ry="2" />
<text  x="1154.57" y="447.5" ></text>
</g>
<g >
<title>schedule_idle (243 samples, 0.44%)</title><rect x="1146.8" y="469" width="5.1" height="15.0" fill="rgb(221,148,36)" rx="2" ry="2" />
<text  x="1149.79" y="479.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (19 samples, 0.03%)</title><rect x="60.0" y="469" width="0.4" height="15.0" fill="rgb(237,4,37)" rx="2" ry="2" />
<text  x="62.96" y="479.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (24 samples, 0.04%)</title><rect x="784.8" y="357" width="0.5" height="15.0" fill="rgb(235,228,35)" rx="2" ry="2" />
<text  x="787.77" y="367.5" ></text>
</g>
<g >
<title>do_user_addr_fault (102 samples, 0.18%)</title><rect x="958.4" y="485" width="2.2" height="15.0" fill="rgb(222,40,13)" rx="2" ry="2" />
<text  x="961.40" y="495.5" ></text>
</g>
<g >
<title>__writeback_single_inode (10 samples, 0.02%)</title><rect x="1096.8" y="389" width="0.2" height="15.0" fill="rgb(253,134,54)" rx="2" ry="2" />
<text  x="1099.82" y="399.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.01%)</title><rect x="1092.9" y="373" width="0.2" height="15.0" fill="rgb(226,171,37)" rx="2" ry="2" />
<text  x="1095.94" y="383.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (17,073 samples, 30.72%)</title><rect x="559.8" y="501" width="362.5" height="15.0" fill="rgb(251,122,19)" rx="2" ry="2" />
<text  x="562.81" y="511.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (1,800 samples, 3.24%)</title><rect x="746.2" y="325" width="38.2" height="15.0" fill="rgb(210,60,10)" rx="2" ry="2" />
<text  x="749.19" y="335.5" >std..</text>
</g>
<g >
<title>x86_pmu_enable (62 samples, 0.11%)</title><rect x="10.3" y="197" width="1.3" height="15.0" fill="rgb(243,229,44)" rx="2" ry="2" />
<text  x="13.32" y="207.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (564 samples, 1.01%)</title><rect x="872.2" y="389" width="11.9" height="15.0" fill="rgb(221,51,44)" rx="2" ry="2" />
<text  x="875.17" y="399.5" ></text>
</g>
<g >
<title>std::thread::panicking (10 samples, 0.02%)</title><rect x="746.0" y="309" width="0.2" height="15.0" fill="rgb(232,185,39)" rx="2" ry="2" />
<text  x="748.97" y="319.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (58 samples, 0.10%)</title><rect x="789.5" y="293" width="1.2" height="15.0" fill="rgb(232,76,32)" rx="2" ry="2" />
<text  x="792.50" y="303.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (85 samples, 0.15%)</title><rect x="573.2" y="469" width="1.8" height="15.0" fill="rgb(206,52,37)" rx="2" ry="2" />
<text  x="576.23" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (35 samples, 0.06%)</title><rect x="26.3" y="517" width="0.7" height="15.0" fill="rgb(227,189,23)" rx="2" ry="2" />
<text  x="29.29" y="527.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (23 samples, 0.04%)</title><rect x="59.5" y="469" width="0.5" height="15.0" fill="rgb(230,87,11)" rx="2" ry="2" />
<text  x="62.48" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (682 samples, 1.23%)</title><rect x="619.4" y="357" width="14.5" height="15.0" fill="rgb(242,60,31)" rx="2" ry="2" />
<text  x="622.38" y="367.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (7 samples, 0.01%)</title><rect x="1099.3" y="197" width="0.1" height="15.0" fill="rgb(252,71,5)" rx="2" ry="2" />
<text  x="1102.29" y="207.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get (25 samples, 0.04%)</title><rect x="661.8" y="309" width="0.5" height="15.0" fill="rgb(237,183,51)" rx="2" ry="2" />
<text  x="664.76" y="319.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (7 samples, 0.01%)</title><rect x="125.9" y="389" width="0.1" height="15.0" fill="rgb(207,200,9)" rx="2" ry="2" />
<text  x="128.85" y="399.5" ></text>
</g>
<g >
<title>try_to_wake_up (9 samples, 0.02%)</title><rect x="1099.5" y="277" width="0.2" height="15.0" fill="rgb(219,154,46)" rx="2" ry="2" />
<text  x="1102.52" y="287.5" ></text>
</g>
<g >
<title>__sys_recvmsg (5 samples, 0.01%)</title><rect x="1090.4" y="485" width="0.1" height="15.0" fill="rgb(205,10,31)" rx="2" ry="2" />
<text  x="1093.37" y="495.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (23 samples, 0.04%)</title><rect x="39.4" y="469" width="0.5" height="15.0" fill="rgb(217,146,28)" rx="2" ry="2" />
<text  x="42.43" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.02%)</title><rect x="16.9" y="533" width="0.2" height="15.0" fill="rgb(242,182,19)" rx="2" ry="2" />
<text  x="19.90" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (23 samples, 0.04%)</title><rect x="59.5" y="453" width="0.5" height="15.0" fill="rgb(233,182,28)" rx="2" ry="2" />
<text  x="62.48" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (506 samples, 0.91%)</title><rect x="438.4" y="309" width="10.8" height="15.0" fill="rgb(249,70,9)" rx="2" ry="2" />
<text  x="441.44" y="319.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (7 samples, 0.01%)</title><rect x="125.9" y="405" width="0.1" height="15.0" fill="rgb(205,213,20)" rx="2" ry="2" />
<text  x="128.85" y="415.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (7 samples, 0.01%)</title><rect x="13.1" y="149" width="0.1" height="15.0" fill="rgb(235,170,47)" rx="2" ry="2" />
<text  x="16.08" y="159.5" ></text>
</g>
<g >
<title>unmap_and_move (15 samples, 0.03%)</title><rect x="1090.7" y="437" width="0.3" height="15.0" fill="rgb(241,205,3)" rx="2" ry="2" />
<text  x="1093.67" y="447.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (682 samples, 1.23%)</title><rect x="619.4" y="389" width="14.5" height="15.0" fill="rgb(213,103,35)" rx="2" ry="2" />
<text  x="622.38" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (14 samples, 0.03%)</title><rect x="1175.7" y="293" width="0.3" height="15.0" fill="rgb(243,113,38)" rx="2" ry="2" />
<text  x="1178.69" y="303.5" ></text>
</g>
<g >
<title>__perf_event_enable (63 samples, 0.11%)</title><rect x="10.3" y="229" width="1.3" height="15.0" fill="rgb(243,223,1)" rx="2" ry="2" />
<text  x="13.30" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (261 samples, 0.47%)</title><rect x="819.4" y="325" width="5.6" height="15.0" fill="rgb(210,50,51)" rx="2" ry="2" />
<text  x="822.44" y="335.5" ></text>
</g>
<g >
<title>irq_exit_rcu (26 samples, 0.05%)</title><rect x="1098.9" y="389" width="0.6" height="15.0" fill="rgb(213,18,27)" rx="2" ry="2" />
<text  x="1101.93" y="399.5" ></text>
</g>
<g >
<title>rcu_idle_enter (6 samples, 0.01%)</title><rect x="1170.6" y="357" width="0.2" height="15.0" fill="rgb(251,195,31)" rx="2" ry="2" />
<text  x="1173.63" y="367.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.04%)</title><rect x="873.7" y="277" width="0.5" height="15.0" fill="rgb(241,3,13)" rx="2" ry="2" />
<text  x="876.74" y="287.5" ></text>
</g>
<g >
<title>ttwu_do_activate (6 samples, 0.01%)</title><rect x="1099.6" y="261" width="0.1" height="15.0" fill="rgb(211,83,3)" rx="2" ry="2" />
<text  x="1102.59" y="271.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (18 samples, 0.03%)</title><rect x="15.8" y="85" width="0.4" height="15.0" fill="rgb(254,162,11)" rx="2" ry="2" />
<text  x="18.82" y="95.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (24 samples, 0.04%)</title><rect x="990.0" y="485" width="0.5" height="15.0" fill="rgb(208,5,25)" rx="2" ry="2" />
<text  x="993.02" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.03%)</title><rect x="817.7" y="213" width="0.4" height="15.0" fill="rgb(215,174,6)" rx="2" ry="2" />
<text  x="820.75" y="223.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (23 samples, 0.04%)</title><rect x="59.5" y="437" width="0.5" height="15.0" fill="rgb(210,2,46)" rx="2" ry="2" />
<text  x="62.48" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (232 samples, 0.42%)</title><rect x="872.8" y="309" width="4.9" height="15.0" fill="rgb(247,102,6)" rx="2" ry="2" />
<text  x="875.78" y="319.5" ></text>
</g>
<g >
<title>prune_dcache_sb (37 samples, 0.07%)</title><rect x="1094.9" y="373" width="0.8" height="15.0" fill="rgb(241,201,54)" rx="2" ry="2" />
<text  x="1097.91" y="383.5" ></text>
</g>
<g >
<title>menu_update (23 samples, 0.04%)</title><rect x="1173.4" y="357" width="0.4" height="15.0" fill="rgb(240,40,12)" rx="2" ry="2" />
<text  x="1176.35" y="367.5" ></text>
</g>
<g >
<title>read_tsc (5 samples, 0.01%)</title><rect x="1152.6" y="453" width="0.1" height="15.0" fill="rgb(210,51,8)" rx="2" ry="2" />
<text  x="1155.61" y="463.5" ></text>
</g>
<g >
<title>lru_cache_add (11 samples, 0.02%)</title><rect x="960.0" y="389" width="0.2" height="15.0" fill="rgb(235,53,37)" rx="2" ry="2" />
<text  x="963.01" y="399.5" ></text>
</g>
<g >
<title>llist_add_batch (57 samples, 0.10%)</title><rect x="1185.8" y="293" width="1.2" height="15.0" fill="rgb(253,44,46)" rx="2" ry="2" />
<text  x="1188.84" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (34 samples, 0.06%)</title><rect x="1188.2" y="405" width="0.8" height="15.0" fill="rgb(248,226,48)" rx="2" ry="2" />
<text  x="1191.24" y="415.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (5 samples, 0.01%)</title><rect x="125.9" y="181" width="0.1" height="15.0" fill="rgb(249,91,53)" rx="2" ry="2" />
<text  x="128.90" y="191.5" ></text>
</g>
<g >
<title>handle_irq_event (21 samples, 0.04%)</title><rect x="1098.5" y="357" width="0.4" height="15.0" fill="rgb(211,203,7)" rx="2" ry="2" />
<text  x="1101.46" y="367.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (462 samples, 0.83%)</title><rect x="110.9" y="501" width="9.8" height="15.0" fill="rgb(242,95,30)" rx="2" ry="2" />
<text  x="113.93" y="511.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (18 samples, 0.03%)</title><rect x="796.8" y="341" width="0.4" height="15.0" fill="rgb(241,215,2)" rx="2" ry="2" />
<text  x="799.83" y="351.5" ></text>
</g>
<g >
<title>lru_cache_add (10 samples, 0.02%)</title><rect x="14.3" y="101" width="0.2" height="15.0" fill="rgb(223,10,24)" rx="2" ry="2" />
<text  x="17.27" y="111.5" ></text>
</g>
<g >
<title>__cmd_record (324 samples, 0.58%)</title><rect x="10.0" y="501" width="6.9" height="15.0" fill="rgb(235,111,46)" rx="2" ry="2" />
<text  x="13.02" y="511.5" ></text>
</g>
<g >
<title>__lock_text_start (7 samples, 0.01%)</title><rect x="1175.5" y="293" width="0.2" height="15.0" fill="rgb(228,19,48)" rx="2" ry="2" />
<text  x="1178.54" y="303.5" ></text>
</g>
<g >
<title>generic_perform_write (197 samples, 0.35%)</title><rect x="12.7" y="181" width="4.2" height="15.0" fill="rgb(212,17,0)" rx="2" ry="2" />
<text  x="15.72" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_lock (9 samples, 0.02%)</title><rect x="1175.2" y="325" width="0.2" height="15.0" fill="rgb(207,25,14)" rx="2" ry="2" />
<text  x="1178.20" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (17 samples, 0.03%)</title><rect x="1152.4" y="469" width="0.4" height="15.0" fill="rgb(252,66,39)" rx="2" ry="2" />
<text  x="1155.42" y="479.5" ></text>
</g>
<g >
<title>napi_poll (23 samples, 0.04%)</title><rect x="1099.0" y="309" width="0.5" height="15.0" fill="rgb(246,78,54)" rx="2" ry="2" />
<text  x="1101.99" y="319.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (35 samples, 0.06%)</title><rect x="125.0" y="437" width="0.8" height="15.0" fill="rgb(243,30,0)" rx="2" ry="2" />
<text  x="128.05" y="447.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (15 samples, 0.03%)</title><rect x="123.2" y="501" width="0.3" height="15.0" fill="rgb(213,167,8)" rx="2" ry="2" />
<text  x="126.18" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (349 samples, 0.63%)</title><rect x="698.0" y="293" width="7.4" height="15.0" fill="rgb(242,46,13)" rx="2" ry="2" />
<text  x="700.96" y="303.5" ></text>
</g>
<g >
<title>nohz_csd_func (45 samples, 0.08%)</title><rect x="1178.4" y="389" width="1.0" height="15.0" fill="rgb(219,202,41)" rx="2" ry="2" />
<text  x="1181.45" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (786 samples, 1.41%)</title><rect x="1155.1" y="373" width="16.7" height="15.0" fill="rgb(214,64,3)" rx="2" ry="2" />
<text  x="1158.11" y="383.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (564 samples, 1.01%)</title><rect x="872.2" y="405" width="11.9" height="15.0" fill="rgb(236,64,39)" rx="2" ry="2" />
<text  x="875.17" y="415.5" ></text>
</g>
<g >
<title>event_function_call (73 samples, 0.13%)</title><rect x="10.1" y="309" width="1.5" height="15.0" fill="rgb(230,31,22)" rx="2" ry="2" />
<text  x="13.08" y="319.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (5 samples, 0.01%)</title><rect x="125.9" y="101" width="0.1" height="15.0" fill="rgb(226,141,14)" rx="2" ry="2" />
<text  x="128.90" y="111.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (14 samples, 0.03%)</title><rect x="575.0" y="469" width="0.3" height="15.0" fill="rgb(243,70,41)" rx="2" ry="2" />
<text  x="578.04" y="479.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (9 samples, 0.02%)</title><rect x="576.2" y="485" width="0.2" height="15.0" fill="rgb(209,123,26)" rx="2" ry="2" />
<text  x="579.16" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (33 samples, 0.06%)</title><rect x="575.3" y="469" width="0.7" height="15.0" fill="rgb(223,112,42)" rx="2" ry="2" />
<text  x="578.34" y="479.5" ></text>
</g>
<g >
<title>generic_update_time (5 samples, 0.01%)</title><rect x="12.6" y="149" width="0.1" height="15.0" fill="rgb(218,116,3)" rx="2" ry="2" />
<text  x="15.61" y="159.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.03%)</title><rect x="990.8" y="501" width="0.3" height="15.0" fill="rgb(227,155,28)" rx="2" ry="2" />
<text  x="993.78" y="511.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.01%)</title><rect x="884.0" y="245" width="0.1" height="15.0" fill="rgb(214,164,24)" rx="2" ry="2" />
<text  x="887.02" y="255.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (27 samples, 0.05%)</title><rect x="56.9" y="485" width="0.6" height="15.0" fill="rgb(242,94,42)" rx="2" ry="2" />
<text  x="59.88" y="495.5" ></text>
</g>
<g >
<title>page_check_dirty_writeback (6 samples, 0.01%)</title><rect x="1094.0" y="389" width="0.1" height="15.0" fill="rgb(240,79,28)" rx="2" ry="2" />
<text  x="1097.02" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_poll (29 samples, 0.05%)</title><rect x="11.7" y="421" width="0.6" height="15.0" fill="rgb(254,5,28)" rx="2" ry="2" />
<text  x="14.68" y="431.5" ></text>
</g>
<g >
<title>alloc_pages_current (31 samples, 0.06%)</title><rect x="14.5" y="117" width="0.6" height="15.0" fill="rgb(240,81,13)" rx="2" ry="2" />
<text  x="17.48" y="127.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (56 samples, 0.10%)</title><rect x="875.5" y="277" width="1.2" height="15.0" fill="rgb(237,43,7)" rx="2" ry="2" />
<text  x="878.48" y="287.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (19 samples, 0.03%)</title><rect x="57.5" y="517" width="0.4" height="15.0" fill="rgb(248,116,50)" rx="2" ry="2" />
<text  x="60.46" y="527.5" ></text>
</g>
<g >
<title>llist_add_batch (45 samples, 0.08%)</title><rect x="1150.4" y="357" width="0.9" height="15.0" fill="rgb(239,74,32)" rx="2" ry="2" />
<text  x="1153.38" y="367.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.01%)</title><rect x="125.9" y="37" width="0.1" height="15.0" fill="rgb(210,83,46)" rx="2" ry="2" />
<text  x="128.90" y="47.5" ></text>
</g>
<g >
<title>NaClLog (115 samples, 0.21%)</title><rect x="120.7" y="501" width="2.5" height="15.0" fill="rgb(246,161,31)" rx="2" ry="2" />
<text  x="123.74" y="511.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (18 samples, 0.03%)</title><rect x="342.1" y="325" width="0.4" height="15.0" fill="rgb(210,194,44)" rx="2" ry="2" />
<text  x="345.10" y="335.5" ></text>
</g>
<g >
<title>do_iter_write (6 samples, 0.01%)</title><rect x="17.0" y="405" width="0.1" height="15.0" fill="rgb(236,125,13)" rx="2" ry="2" />
<text  x="19.99" y="415.5" ></text>
</g>
<g >
<title>___d_drop (8 samples, 0.01%)</title><rect x="1095.1" y="325" width="0.1" height="15.0" fill="rgb(239,149,27)" rx="2" ry="2" />
<text  x="1098.06" y="335.5" ></text>
</g>
<g >
<title>__unmap_and_move (9 samples, 0.02%)</title><rect x="1090.7" y="421" width="0.2" height="15.0" fill="rgb(209,185,27)" rx="2" ry="2" />
<text  x="1093.67" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (556 samples, 1.00%)</title><rect x="860.4" y="325" width="11.8" height="15.0" fill="rgb(212,61,38)" rx="2" ry="2" />
<text  x="863.36" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (5 samples, 0.01%)</title><rect x="1089.7" y="501" width="0.1" height="15.0" fill="rgb(211,28,43)" rx="2" ry="2" />
<text  x="1092.71" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (73 samples, 0.13%)</title><rect x="24.7" y="517" width="1.6" height="15.0" fill="rgb(222,20,9)" rx="2" ry="2" />
<text  x="27.74" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (387 samples, 0.70%)</title><rect x="712.1" y="293" width="8.2" height="15.0" fill="rgb(253,176,25)" rx="2" ry="2" />
<text  x="715.06" y="303.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (13 samples, 0.02%)</title><rect x="796.6" y="309" width="0.2" height="15.0" fill="rgb(221,56,51)" rx="2" ry="2" />
<text  x="799.55" y="319.5" ></text>
</g>
<g >
<title>shrink_dentry_list (31 samples, 0.06%)</title><rect x="1095.0" y="357" width="0.7" height="15.0" fill="rgb(209,194,45)" rx="2" ry="2" />
<text  x="1098.04" y="367.5" ></text>
</g>
<g >
<title>schedule_idle (384 samples, 0.69%)</title><rect x="1179.5" y="405" width="8.1" height="15.0" fill="rgb(215,18,42)" rx="2" ry="2" />
<text  x="1182.47" y="415.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (6 samples, 0.01%)</title><rect x="13.7" y="101" width="0.2" height="15.0" fill="rgb(249,206,19)" rx="2" ry="2" />
<text  x="16.74" y="111.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.10%)</title><rect x="820.4" y="293" width="1.1" height="15.0" fill="rgb(253,132,40)" rx="2" ry="2" />
<text  x="823.36" y="303.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (13 samples, 0.02%)</title><rect x="874.2" y="277" width="0.3" height="15.0" fill="rgb(242,154,36)" rx="2" ry="2" />
<text  x="877.25" y="287.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (19 samples, 0.03%)</title><rect x="593.7" y="453" width="0.4" height="15.0" fill="rgb(233,179,35)" rx="2" ry="2" />
<text  x="596.70" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (1,036 samples, 1.86%)</title><rect x="721.3" y="293" width="22.0" height="15.0" fill="rgb(210,180,24)" rx="2" ry="2" />
<text  x="724.28" y="303.5" >_..</text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (25 samples, 0.04%)</title><rect x="878.0" y="325" width="0.5" height="15.0" fill="rgb(249,28,22)" rx="2" ry="2" />
<text  x="880.96" y="335.5" ></text>
</g>
<g >
<title>rcu_core_si (8 samples, 0.01%)</title><rect x="1099.9" y="325" width="0.2" height="15.0" fill="rgb(233,212,42)" rx="2" ry="2" />
<text  x="1102.92" y="335.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (11 samples, 0.02%)</title><rect x="960.0" y="373" width="0.2" height="15.0" fill="rgb(235,40,11)" rx="2" ry="2" />
<text  x="963.01" y="383.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (179 samples, 0.32%)</title><rect x="86.1" y="485" width="3.8" height="15.0" fill="rgb(240,169,27)" rx="2" ry="2" />
<text  x="89.08" y="495.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (10,112 samples, 18.20%)</title><rect x="344.6" y="341" width="214.7" height="15.0" fill="rgb(217,169,14)" rx="2" ry="2" />
<text  x="347.63" y="351.5" >ringbuf::consumer::Consumer&lt;..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.02%)</title><rect x="40.2" y="485" width="0.3" height="15.0" fill="rgb(209,229,4)" rx="2" ry="2" />
<text  x="43.24" y="495.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (179 samples, 0.32%)</title><rect x="150.5" y="293" width="3.8" height="15.0" fill="rgb(243,45,30)" rx="2" ry="2" />
<text  x="153.48" y="303.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (150 samples, 0.27%)</title><rect x="146.1" y="325" width="3.2" height="15.0" fill="rgb(223,56,35)" rx="2" ry="2" />
<text  x="149.09" y="335.5" ></text>
</g>
<g >
<title>ksys_write (207 samples, 0.37%)</title><rect x="12.5" y="325" width="4.4" height="15.0" fill="rgb(216,104,53)" rx="2" ry="2" />
<text  x="15.51" y="335.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (12 samples, 0.02%)</title><rect x="960.0" y="405" width="0.2" height="15.0" fill="rgb(237,47,48)" rx="2" ry="2" />
<text  x="962.99" y="415.5" ></text>
</g>
<g >
<title>ep_poll (5 samples, 0.01%)</title><rect x="1089.9" y="453" width="0.2" height="15.0" fill="rgb(213,54,25)" rx="2" ry="2" />
<text  x="1092.94" y="463.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (131 samples, 0.24%)</title><rect x="1176.6" y="405" width="2.8" height="15.0" fill="rgb(223,159,15)" rx="2" ry="2" />
<text  x="1179.62" y="415.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (313 samples, 0.56%)</title><rect x="566.4" y="421" width="6.6" height="15.0" fill="rgb(214,226,16)" rx="2" ry="2" />
<text  x="569.40" y="431.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.05%)</title><rect x="882.2" y="293" width="0.6" height="15.0" fill="rgb(230,47,14)" rx="2" ry="2" />
<text  x="885.17" y="303.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (690 samples, 1.24%)</title><rect x="705.6" y="325" width="14.7" height="15.0" fill="rgb(233,26,46)" rx="2" ry="2" />
<text  x="708.63" y="335.5" ></text>
</g>
<g >
<title>[unknown]  (1,804 samples, 3.25%)</title><rect x="922.7" y="533" width="38.3" height="15.0" fill="rgb(243,116,28)" rx="2" ry="2" />
<text  x="925.66" y="543.5" >[un..</text>
</g>
<g >
<title>iput (13 samples, 0.02%)</title><rect x="1095.3" y="309" width="0.3" height="15.0" fill="rgb(214,174,12)" rx="2" ry="2" />
<text  x="1098.32" y="319.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (73 samples, 0.13%)</title><rect x="10.1" y="341" width="1.5" height="15.0" fill="rgb(243,46,12)" rx="2" ry="2" />
<text  x="13.08" y="351.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (5 samples, 0.01%)</title><rect x="125.9" y="357" width="0.1" height="15.0" fill="rgb(214,50,53)" rx="2" ry="2" />
<text  x="128.90" y="367.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (644 samples, 1.16%)</title><rect x="691.7" y="357" width="13.7" height="15.0" fill="rgb(247,110,14)" rx="2" ry="2" />
<text  x="694.70" y="367.5" ></text>
</g>
<g >
<title>do_epoll_wait (5 samples, 0.01%)</title><rect x="1089.9" y="469" width="0.2" height="15.0" fill="rgb(222,219,42)" rx="2" ry="2" />
<text  x="1092.94" y="479.5" ></text>
</g>
<g >
<title>clear_page_erms (19 samples, 0.03%)</title><rect x="14.5" y="69" width="0.4" height="15.0" fill="rgb(251,30,6)" rx="2" ry="2" />
<text  x="17.52" y="79.5" ></text>
</g>
<g >
<title>__dentry_kill (27 samples, 0.05%)</title><rect x="1095.0" y="341" width="0.6" height="15.0" fill="rgb(209,204,27)" rx="2" ry="2" />
<text  x="1098.04" y="351.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (6 samples, 0.01%)</title><rect x="1096.8" y="325" width="0.2" height="15.0" fill="rgb(234,109,14)" rx="2" ry="2" />
<text  x="1099.82" y="335.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (290 samples, 0.52%)</title><rect x="785.3" y="357" width="6.1" height="15.0" fill="rgb(244,165,22)" rx="2" ry="2" />
<text  x="788.28" y="367.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (342 samples, 0.62%)</title><rect x="449.2" y="309" width="7.2" height="15.0" fill="rgb(244,200,24)" rx="2" ry="2" />
<text  x="452.18" y="319.5" ></text>
</g>
<g >
<title>record__pushfn (210 samples, 0.38%)</title><rect x="12.4" y="437" width="4.5" height="15.0" fill="rgb(207,59,13)" rx="2" ry="2" />
<text  x="15.44" y="447.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (10 samples, 0.02%)</title><rect x="14.3" y="85" width="0.2" height="15.0" fill="rgb(227,9,16)" rx="2" ry="2" />
<text  x="17.27" y="95.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (386 samples, 0.69%)</title><rect x="565.0" y="437" width="8.2" height="15.0" fill="rgb(235,12,15)" rx="2" ry="2" />
<text  x="568.04" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (9 samples, 0.02%)</title><rect x="13.3" y="85" width="0.2" height="15.0" fill="rgb(227,145,35)" rx="2" ry="2" />
<text  x="16.29" y="95.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (11,191 samples, 20.14%)</title><rect x="634.5" y="389" width="237.7" height="15.0" fill="rgb(251,197,31)" rx="2" ry="2" />
<text  x="637.54" y="399.5" >rustposix::safeposix::syscalls:..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1,583 samples, 2.85%)</title><rect x="825.8" y="341" width="33.6" height="15.0" fill="rgb(215,18,9)" rx="2" ry="2" />
<text  x="828.79" y="351.5" >st..</text>
</g>
<g >
<title>cpumask_next_and (8 samples, 0.01%)</title><rect x="1184.6" y="309" width="0.2" height="15.0" fill="rgb(249,226,50)" rx="2" ry="2" />
<text  x="1187.63" y="319.5" ></text>
</g>
</g>
</svg>
