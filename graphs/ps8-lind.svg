<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="902.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="885" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="885" > </text>
<g id="frames">
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="10.0" y="693" width="0.3" height="15.0" fill="rgb(212,119,15)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="861.8" y="581" width="0.8" height="15.0" fill="rgb(223,44,27)" rx="2" ry="2" />
<text  x="864.78" y="591.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="139.0" y="453" width="0.3" height="15.0" fill="rgb(250,180,48)" rx="2" ry="2" />
<text  x="142.03" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (4 samples, 0.09%)</title><rect x="150.0" y="597" width="1.1" height="15.0" fill="rgb(218,77,41)" rx="2" ry="2" />
<text  x="153.04" y="607.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (9 samples, 0.21%)</title><rect x="768.2" y="597" width="2.5" height="15.0" fill="rgb(220,51,11)" rx="2" ry="2" />
<text  x="771.24" y="607.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.02%)</title><rect x="34.2" y="341" width="0.3" height="15.0" fill="rgb(205,17,45)" rx="2" ry="2" />
<text  x="37.21" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="988.1" y="805" width="0.2" height="15.0" fill="rgb(212,197,8)" rx="2" ry="2" />
<text  x="991.06" y="815.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (1 samples, 0.02%)</title><rect x="1075.0" y="501" width="0.3" height="15.0" fill="rgb(245,122,26)" rx="2" ry="2" />
<text  x="1078.00" y="511.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="953.4" y="693" width="0.3" height="15.0" fill="rgb(247,91,25)" rx="2" ry="2" />
<text  x="956.39" y="703.5" ></text>
</g>
<g >
<title>execute_command (2 samples, 0.05%)</title><rect x="10.3" y="757" width="0.5" height="15.0" fill="rgb(252,200,2)" rx="2" ry="2" />
<text  x="13.28" y="767.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="817.5" y="549" width="0.3" height="15.0" fill="rgb(252,68,50)" rx="2" ry="2" />
<text  x="820.48" y="559.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.02%)</title><rect x="1134.2" y="693" width="0.2" height="15.0" fill="rgb(229,225,41)" rx="2" ry="2" />
<text  x="1137.15" y="703.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.02%)</title><rect x="1185.6" y="581" width="0.3" height="15.0" fill="rgb(229,87,34)" rx="2" ry="2" />
<text  x="1188.60" y="591.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1007.9" y="597" width="0.2" height="15.0" fill="rgb(216,107,51)" rx="2" ry="2" />
<text  x="1010.87" y="607.5" ></text>
</g>
<g >
<title>swapper (583 samples, 13.59%)</title><rect x="1029.6" y="837" width="160.4" height="15.0" fill="rgb(236,86,23)" rx="2" ry="2" />
<text  x="1032.60" y="847.5" >swapper</text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="150.6" y="245" width="0.3" height="15.0" fill="rgb(229,60,52)" rx="2" ry="2" />
<text  x="153.59" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="1069.5" y="517" width="0.3" height="15.0" fill="rgb(248,29,40)" rx="2" ry="2" />
<text  x="1072.50" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.09%)</title><rect x="1056.0" y="805" width="1.1" height="15.0" fill="rgb(207,38,32)" rx="2" ry="2" />
<text  x="1059.02" y="815.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (404 samples, 9.42%)</title><rect x="1078.9" y="821" width="111.1" height="15.0" fill="rgb(244,37,38)" rx="2" ry="2" />
<text  x="1081.85" y="831.5" >secondary_sta..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (4 samples, 0.09%)</title><rect x="150.0" y="469" width="1.1" height="15.0" fill="rgb(249,99,7)" rx="2" ry="2" />
<text  x="153.04" y="479.5" ></text>
</g>
<g >
<title>down_read_trylock (3 samples, 0.07%)</title><rect x="949.3" y="757" width="0.8" height="15.0" fill="rgb(220,27,1)" rx="2" ry="2" />
<text  x="952.27" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (70 samples, 1.63%)</title><rect x="832.9" y="629" width="19.2" height="15.0" fill="rgb(250,204,20)" rx="2" ry="2" />
<text  x="835.89" y="639.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (13 samples, 0.30%)</title><rect x="968.5" y="693" width="3.6" height="15.0" fill="rgb(238,196,52)" rx="2" ry="2" />
<text  x="971.53" y="703.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="59.2" y="789" width="0.3" height="15.0" fill="rgb(252,207,10)" rx="2" ry="2" />
<text  x="62.25" y="799.5" ></text>
</g>
<g >
<title>ext4_free_in_core_inode (1 samples, 0.02%)</title><rect x="1073.3" y="357" width="0.3" height="15.0" fill="rgb(223,200,14)" rx="2" ry="2" />
<text  x="1076.35" y="367.5" ></text>
</g>
<g >
<title>menu_select (8 samples, 0.19%)</title><rect x="1133.6" y="725" width="2.2" height="15.0" fill="rgb(234,21,42)" rx="2" ry="2" />
<text  x="1136.60" y="735.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (41 samples, 0.96%)</title><rect x="796.6" y="645" width="11.3" height="15.0" fill="rgb(226,110,23)" rx="2" ry="2" />
<text  x="799.57" y="655.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.09%)</title><rect x="150.0" y="373" width="1.1" height="15.0" fill="rgb(249,80,50)" rx="2" ry="2" />
<text  x="153.04" y="383.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.02%)</title><rect x="85.1" y="789" width="0.3" height="15.0" fill="rgb(230,213,48)" rx="2" ry="2" />
<text  x="88.11" y="799.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.35%)</title><rect x="811.2" y="533" width="4.1" height="15.0" fill="rgb(216,61,44)" rx="2" ry="2" />
<text  x="814.16" y="543.5" ></text>
</g>
<g >
<title>NaClDescImcShmMap (1 samples, 0.02%)</title><rect x="139.9" y="709" width="0.2" height="15.0" fill="rgb(245,90,28)" rx="2" ry="2" />
<text  x="142.86" y="719.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="149.8" y="501" width="0.2" height="15.0" fill="rgb(216,41,46)" rx="2" ry="2" />
<text  x="152.76" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (27 samples, 0.63%)</title><rect x="808.7" y="565" width="7.4" height="15.0" fill="rgb(240,164,5)" rx="2" ry="2" />
<text  x="811.68" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.30%)</title><rect x="643.1" y="597" width="3.5" height="15.0" fill="rgb(231,187,34)" rx="2" ry="2" />
<text  x="646.06" y="607.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="10.8" y="485" width="0.3" height="15.0" fill="rgb(243,115,48)" rx="2" ry="2" />
<text  x="13.83" y="495.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="983.7" y="805" width="0.2" height="15.0" fill="rgb(225,109,42)" rx="2" ry="2" />
<text  x="986.66" y="815.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize (1 samples, 0.02%)</title><rect x="1008.4" y="469" width="0.3" height="15.0" fill="rgb(209,33,26)" rx="2" ry="2" />
<text  x="1011.42" y="479.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (1 samples, 0.02%)</title><rect x="151.4" y="709" width="0.3" height="15.0" fill="rgb(227,113,15)" rx="2" ry="2" />
<text  x="154.41" y="719.5" ></text>
</g>
<g >
<title>free_buffer_head (3 samples, 0.07%)</title><rect x="1075.8" y="485" width="0.8" height="15.0" fill="rgb(212,123,27)" rx="2" ry="2" />
<text  x="1078.82" y="495.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1147.1" y="405" width="0.3" height="15.0" fill="rgb(244,51,25)" rx="2" ry="2" />
<text  x="1150.08" y="415.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (3 samples, 0.07%)</title><rect x="35.0" y="453" width="0.9" height="15.0" fill="rgb(228,10,50)" rx="2" ry="2" />
<text  x="38.04" y="463.5" ></text>
</g>
<g >
<title>__schedule (29 samples, 0.68%)</title><rect x="1179.5" y="677" width="8.0" height="15.0" fill="rgb(249,88,46)" rx="2" ry="2" />
<text  x="1182.55" y="687.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (4 samples, 0.09%)</title><rect x="150.0" y="661" width="1.1" height="15.0" fill="rgb(230,131,7)" rx="2" ry="2" />
<text  x="153.04" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (48 samples, 1.12%)</title><rect x="652.1" y="661" width="13.2" height="15.0" fill="rgb(230,91,31)" rx="2" ry="2" />
<text  x="655.14" y="671.5" ></text>
</g>
<g >
<title>__alloc_file (1 samples, 0.02%)</title><rect x="10.8" y="501" width="0.3" height="15.0" fill="rgb(223,6,2)" rx="2" ry="2" />
<text  x="13.83" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (83 samples, 1.94%)</title><rect x="426.0" y="597" width="22.8" height="15.0" fill="rgb(229,216,20)" rx="2" ry="2" />
<text  x="428.99" y="607.5" >c..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="150.6" y="149" width="0.3" height="15.0" fill="rgb(247,228,42)" rx="2" ry="2" />
<text  x="153.59" y="159.5" ></text>
</g>
<g >
<title>rest_init (174 samples, 4.06%)</title><rect x="1142.1" y="741" width="47.9" height="15.0" fill="rgb(227,176,41)" rx="2" ry="2" />
<text  x="1145.13" y="751.5" >rest..</text>
</g>
<g >
<title>lind (3 samples, 0.07%)</title><rect x="10.0" y="837" width="0.8" height="15.0" fill="rgb(211,196,17)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1077.8" y="709" width="0.2" height="15.0" fill="rgb(244,62,20)" rx="2" ry="2" />
<text  x="1080.75" y="719.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="1080.0" y="709" width="0.2" height="15.0" fill="rgb(213,20,54)" rx="2" ry="2" />
<text  x="1082.95" y="719.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.12%)</title><rect x="867.0" y="549" width="1.4" height="15.0" fill="rgb(251,143,16)" rx="2" ry="2" />
<text  x="870.01" y="559.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 1.87%)</title><rect x="11.1" y="741" width="22.0" height="15.0" fill="rgb(222,92,2)" rx="2" ry="2" />
<text  x="14.10" y="751.5" >p..</text>
</g>
<g >
<title>ksys_write (8 samples, 0.19%)</title><rect x="33.7" y="613" width="2.2" height="15.0" fill="rgb(235,190,47)" rx="2" ry="2" />
<text  x="36.66" y="623.5" ></text>
</g>
<g >
<title>__bitmap_and (1 samples, 0.02%)</title><rect x="1147.9" y="517" width="0.3" height="15.0" fill="rgb(219,48,36)" rx="2" ry="2" />
<text  x="1150.91" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1170.2" y="629" width="0.3" height="15.0" fill="rgb(235,107,34)" rx="2" ry="2" />
<text  x="1173.19" y="639.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="1029.3" y="597" width="0.3" height="15.0" fill="rgb(216,140,36)" rx="2" ry="2" />
<text  x="1032.33" y="607.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.05%)</title><rect x="1078.3" y="709" width="0.6" height="15.0" fill="rgb(233,89,19)" rx="2" ry="2" />
<text  x="1081.30" y="719.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.02%)</title><rect x="1007.9" y="805" width="0.2" height="15.0" fill="rgb(229,154,38)" rx="2" ry="2" />
<text  x="1010.87" y="815.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1174.9" y="597" width="0.2" height="15.0" fill="rgb(213,108,30)" rx="2" ry="2" />
<text  x="1177.87" y="607.5" ></text>
</g>
<g >
<title>[sel_ldr] (71 samples, 1.66%)</title><rect x="928.1" y="805" width="19.5" height="15.0" fill="rgb(216,84,3)" rx="2" ry="2" />
<text  x="931.08" y="815.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="1007.9" y="645" width="0.2" height="15.0" fill="rgb(240,4,42)" rx="2" ry="2" />
<text  x="1010.87" y="655.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.02%)</title><rect x="1029.3" y="565" width="0.3" height="15.0" fill="rgb(250,131,39)" rx="2" ry="2" />
<text  x="1032.33" y="575.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.02%)</title><rect x="1143.0" y="677" width="0.2" height="15.0" fill="rgb(227,73,6)" rx="2" ry="2" />
<text  x="1145.95" y="687.5" ></text>
</g>
<g >
<title>cpuidle_select (20 samples, 0.47%)</title><rect x="1170.7" y="677" width="5.5" height="15.0" fill="rgb(220,29,27)" rx="2" ry="2" />
<text  x="1173.74" y="687.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="34.2" y="389" width="0.3" height="15.0" fill="rgb(236,103,33)" rx="2" ry="2" />
<text  x="37.21" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (3 samples, 0.07%)</title><rect x="1176.2" y="661" width="0.9" height="15.0" fill="rgb(231,42,46)" rx="2" ry="2" />
<text  x="1179.24" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.14%)</title><rect x="868.7" y="645" width="1.6" height="15.0" fill="rgb(216,84,5)" rx="2" ry="2" />
<text  x="871.66" y="655.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (190 samples, 4.43%)</title><rect x="690.9" y="581" width="52.3" height="15.0" fill="rgb(205,228,18)" rx="2" ry="2" />
<text  x="693.93" y="591.5" >__pth..</text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="10.6" y="597" width="0.2" height="15.0" fill="rgb(217,152,10)" rx="2" ry="2" />
<text  x="13.55" y="607.5" ></text>
</g>
<g >
<title>page_remove_rmap (4 samples, 0.09%)</title><rect x="1022.2" y="613" width="1.1" height="15.0" fill="rgb(206,189,51)" rx="2" ry="2" />
<text  x="1025.18" y="623.5" ></text>
</g>
<g >
<title>inode_lru_isolate (18 samples, 0.42%)</title><rect x="1072.2" y="613" width="5.0" height="15.0" fill="rgb(248,162,46)" rx="2" ry="2" />
<text  x="1075.25" y="623.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1080.0" y="693" width="0.2" height="15.0" fill="rgb(211,211,7)" rx="2" ry="2" />
<text  x="1082.95" y="703.5" ></text>
</g>
<g >
<title>&lt;u32 as itoa::Integer&gt;::write (1 samples, 0.02%)</title><rect x="150.9" y="229" width="0.2" height="15.0" fill="rgb(248,44,45)" rx="2" ry="2" />
<text  x="153.86" y="239.5" ></text>
</g>
<g >
<title>__d_free (2 samples, 0.05%)</title><rect x="1081.1" y="565" width="0.5" height="15.0" fill="rgb(249,13,9)" rx="2" ry="2" />
<text  x="1084.05" y="575.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.09%)</title><rect x="150.0" y="613" width="1.1" height="15.0" fill="rgb(236,56,8)" rx="2" ry="2" />
<text  x="153.04" y="623.5" ></text>
</g>
<g >
<title>NaClValidateCode (2 samples, 0.05%)</title><rect x="983.9" y="725" width="0.6" height="15.0" fill="rgb(214,190,46)" rx="2" ry="2" />
<text  x="986.93" y="735.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.09%)</title><rect x="754.2" y="565" width="1.1" height="15.0" fill="rgb(235,14,2)" rx="2" ry="2" />
<text  x="757.21" y="575.5" ></text>
</g>
<g >
<title>__remove_mapping (3 samples, 0.07%)</title><rect x="1074.2" y="533" width="0.8" height="15.0" fill="rgb(237,86,48)" rx="2" ry="2" />
<text  x="1077.17" y="543.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.02%)</title><rect x="1067.8" y="661" width="0.3" height="15.0" fill="rgb(238,80,13)" rx="2" ry="2" />
<text  x="1070.85" y="671.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.02%)</title><rect x="1008.1" y="757" width="0.3" height="15.0" fill="rgb(226,159,7)" rx="2" ry="2" />
<text  x="1011.14" y="767.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="1055.7" y="741" width="0.3" height="15.0" fill="rgb(238,70,3)" rx="2" ry="2" />
<text  x="1058.74" y="751.5" ></text>
</g>
<g >
<title>fold_diff (1 samples, 0.02%)</title><rect x="1135.8" y="677" width="0.3" height="15.0" fill="rgb(246,177,3)" rx="2" ry="2" />
<text  x="1138.80" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="544.0" y="757" width="0.3" height="15.0" fill="rgb(243,130,24)" rx="2" ry="2" />
<text  x="547.01" y="767.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="151.4" y="645" width="0.3" height="15.0" fill="rgb(249,186,45)" rx="2" ry="2" />
<text  x="154.41" y="655.5" ></text>
</g>
<g >
<title>core::cmp::min (6 samples, 0.14%)</title><rect x="164.9" y="645" width="1.6" height="15.0" fill="rgb(240,221,37)" rx="2" ry="2" />
<text  x="167.89" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="538.0" y="709" width="0.5" height="15.0" fill="rgb(213,17,51)" rx="2" ry="2" />
<text  x="540.96" y="719.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.02%)</title><rect x="149.8" y="453" width="0.2" height="15.0" fill="rgb(250,135,1)" rx="2" ry="2" />
<text  x="152.76" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.12%)</title><rect x="829.3" y="533" width="1.4" height="15.0" fill="rgb(252,39,41)" rx="2" ry="2" />
<text  x="832.31" y="543.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (2 samples, 0.05%)</title><rect x="150.0" y="277" width="0.6" height="15.0" fill="rgb(220,191,8)" rx="2" ry="2" />
<text  x="153.04" y="287.5" ></text>
</g>
<g >
<title>free_unref_page_list (12 samples, 0.28%)</title><rect x="1025.8" y="565" width="3.3" height="15.0" fill="rgb(231,224,47)" rx="2" ry="2" />
<text  x="1028.75" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="10.8" y="709" width="0.3" height="15.0" fill="rgb(239,43,33)" rx="2" ry="2" />
<text  x="13.83" y="719.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 2.10%)</title><rect x="11.1" y="821" width="24.8" height="15.0" fill="rgb(223,150,26)" rx="2" ry="2" />
<text  x="14.10" y="831.5" >[..</text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (2 samples, 0.05%)</title><rect x="135.2" y="789" width="0.5" height="15.0" fill="rgb(247,151,14)" rx="2" ry="2" />
<text  x="138.18" y="799.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.09%)</title><rect x="150.0" y="421" width="1.1" height="15.0" fill="rgb(254,221,24)" rx="2" ry="2" />
<text  x="153.04" y="431.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.02%)</title><rect x="1065.9" y="645" width="0.3" height="15.0" fill="rgb(238,8,30)" rx="2" ry="2" />
<text  x="1068.92" y="655.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.05%)</title><rect x="983.9" y="805" width="0.6" height="15.0" fill="rgb(220,15,2)" rx="2" ry="2" />
<text  x="986.93" y="815.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (435 samples, 10.14%)</title><rect x="218.5" y="629" width="119.7" height="15.0" fill="rgb(232,57,42)" rx="2" ry="2" />
<text  x="221.54" y="639.5" >ringbuf::ring_..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (5 samples, 0.12%)</title><rect x="167.4" y="613" width="1.3" height="15.0" fill="rgb(212,60,24)" rx="2" ry="2" />
<text  x="170.37" y="623.5" ></text>
</g>
<g >
<title>schedule_idle (15 samples, 0.35%)</title><rect x="1136.6" y="757" width="4.2" height="15.0" fill="rgb(236,191,49)" rx="2" ry="2" />
<text  x="1139.63" y="767.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.02%)</title><rect x="10.6" y="645" width="0.2" height="15.0" fill="rgb(215,186,26)" rx="2" ry="2" />
<text  x="13.55" y="655.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="1029.3" y="485" width="0.3" height="15.0" fill="rgb(206,103,32)" rx="2" ry="2" />
<text  x="1032.33" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="534.1" y="613" width="0.3" height="15.0" fill="rgb(218,60,51)" rx="2" ry="2" />
<text  x="537.11" y="623.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.02%)</title><rect x="149.8" y="597" width="0.2" height="15.0" fill="rgb(242,71,27)" rx="2" ry="2" />
<text  x="152.76" y="607.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (14 samples, 0.33%)</title><rect x="416.1" y="565" width="3.8" height="15.0" fill="rgb(223,211,5)" rx="2" ry="2" />
<text  x="419.08" y="575.5" ></text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.02%)</title><rect x="139.6" y="597" width="0.3" height="15.0" fill="rgb(243,134,28)" rx="2" ry="2" />
<text  x="142.58" y="607.5" ></text>
</g>
<g >
<title>__cmd_record (90 samples, 2.10%)</title><rect x="11.1" y="789" width="24.8" height="15.0" fill="rgb(220,9,38)" rx="2" ry="2" />
<text  x="14.10" y="799.5" >_..</text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (4 samples, 0.09%)</title><rect x="150.0" y="453" width="1.1" height="15.0" fill="rgb(206,77,25)" rx="2" ry="2" />
<text  x="153.04" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (2 samples, 0.05%)</title><rect x="1056.3" y="789" width="0.5" height="15.0" fill="rgb(215,45,36)" rx="2" ry="2" />
<text  x="1059.29" y="799.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.02%)</title><rect x="33.1" y="773" width="0.3" height="15.0" fill="rgb(235,45,46)" rx="2" ry="2" />
<text  x="36.11" y="783.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="1140.5" y="725" width="0.3" height="15.0" fill="rgb(246,207,28)" rx="2" ry="2" />
<text  x="1143.48" y="735.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize::MapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="1008.4" y="549" width="0.3" height="15.0" fill="rgb(208,207,3)" rx="2" ry="2" />
<text  x="1011.42" y="559.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="139.6" y="549" width="0.3" height="15.0" fill="rgb(246,159,4)" rx="2" ry="2" />
<text  x="142.58" y="559.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="149.8" y="517" width="0.2" height="15.0" fill="rgb(209,119,32)" rx="2" ry="2" />
<text  x="152.76" y="527.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (77 samples, 1.80%)</title><rect x="775.4" y="613" width="21.2" height="15.0" fill="rgb(235,84,5)" rx="2" ry="2" />
<text  x="778.39" y="623.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.05%)</title><rect x="150.0" y="341" width="0.6" height="15.0" fill="rgb(229,28,40)" rx="2" ry="2" />
<text  x="153.04" y="351.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.02%)</title><rect x="138.8" y="613" width="0.2" height="15.0" fill="rgb(227,55,35)" rx="2" ry="2" />
<text  x="141.76" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (20 samples, 0.47%)</title><rect x="652.1" y="581" width="5.5" height="15.0" fill="rgb(227,22,27)" rx="2" ry="2" />
<text  x="655.14" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="10.8" y="693" width="0.3" height="15.0" fill="rgb(228,121,30)" rx="2" ry="2" />
<text  x="13.83" y="703.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::GenericInode&gt;::deserialize (1 samples, 0.02%)</title><rect x="1008.4" y="373" width="0.3" height="15.0" fill="rgb(228,149,41)" rx="2" ry="2" />
<text  x="1011.42" y="383.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (2 samples, 0.05%)</title><rect x="1142.7" y="693" width="0.5" height="15.0" fill="rgb(234,54,21)" rx="2" ry="2" />
<text  x="1145.68" y="703.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.02%)</title><rect x="420.5" y="549" width="0.3" height="15.0" fill="rgb(215,197,39)" rx="2" ry="2" />
<text  x="423.48" y="559.5" ></text>
</g>
<g >
<title>NaClSimpleServiceAcceptAndSpawnHandler (1 samples, 0.02%)</title><rect x="1007.9" y="757" width="0.2" height="15.0" fill="rgb(245,42,29)" rx="2" ry="2" />
<text  x="1010.87" y="767.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.02%)</title><rect x="148.7" y="549" width="0.2" height="15.0" fill="rgb(253,65,45)" rx="2" ry="2" />
<text  x="151.66" y="559.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.12%)</title><rect x="829.3" y="501" width="1.4" height="15.0" fill="rgb(243,74,23)" rx="2" ry="2" />
<text  x="832.31" y="511.5" ></text>
</g>
<g >
<title>remove_mapping (3 samples, 0.07%)</title><rect x="1074.2" y="549" width="0.8" height="15.0" fill="rgb(235,76,29)" rx="2" ry="2" />
<text  x="1077.17" y="559.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (5 samples, 0.12%)</title><rect x="556.4" y="725" width="1.4" height="15.0" fill="rgb(240,173,1)" rx="2" ry="2" />
<text  x="559.39" y="735.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1078.0" y="757" width="0.3" height="15.0" fill="rgb(212,69,16)" rx="2" ry="2" />
<text  x="1081.03" y="767.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.02%)</title><rect x="1008.7" y="773" width="0.3" height="15.0" fill="rgb(227,86,46)" rx="2" ry="2" />
<text  x="1011.69" y="783.5" ></text>
</g>
<g >
<title>__fopen_internal (1 samples, 0.02%)</title><rect x="10.0" y="789" width="0.3" height="15.0" fill="rgb(221,89,16)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.02%)</title><rect x="1188.6" y="661" width="0.3" height="15.0" fill="rgb(209,131,29)" rx="2" ry="2" />
<text  x="1191.62" y="671.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="1073.6" y="517" width="0.3" height="15.0" fill="rgb(212,175,17)" rx="2" ry="2" />
<text  x="1076.62" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.02%)</title><rect x="59.2" y="741" width="0.3" height="15.0" fill="rgb(222,134,26)" rx="2" ry="2" />
<text  x="62.25" y="751.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="1008.4" y="581" width="0.3" height="15.0" fill="rgb(209,135,4)" rx="2" ry="2" />
<text  x="1011.42" y="591.5" ></text>
</g>
<g >
<title>reader_loop (2 samples, 0.05%)</title><rect x="10.3" y="773" width="0.5" height="15.0" fill="rgb(226,55,34)" rx="2" ry="2" />
<text  x="13.28" y="783.5" ></text>
</g>
<g >
<title>tick_sched_timer (6 samples, 0.14%)</title><rect x="1145.7" y="533" width="1.7" height="15.0" fill="rgb(220,152,7)" rx="2" ry="2" />
<text  x="1148.71" y="543.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="84.8" y="773" width="0.3" height="15.0" fill="rgb(238,31,27)" rx="2" ry="2" />
<text  x="87.83" y="783.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.09%)</title><rect x="150.0" y="437" width="1.1" height="15.0" fill="rgb(235,193,12)" rx="2" ry="2" />
<text  x="153.04" y="447.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="150.0" y="117" width="0.3" height="15.0" fill="rgb(222,33,20)" rx="2" ry="2" />
<text  x="153.04" y="127.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Seek&gt;::seek (1 samples, 0.02%)</title><rect x="149.5" y="645" width="0.3" height="15.0" fill="rgb(241,175,11)" rx="2" ry="2" />
<text  x="152.49" y="655.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (3 samples, 0.07%)</title><rect x="690.1" y="613" width="0.8" height="15.0" fill="rgb(237,206,32)" rx="2" ry="2" />
<text  x="693.10" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 1.87%)</title><rect x="11.1" y="693" width="22.0" height="15.0" fill="rgb(242,72,39)" rx="2" ry="2" />
<text  x="14.10" y="703.5" >d..</text>
</g>
<g >
<title>load_balance (3 samples, 0.07%)</title><rect x="1180.4" y="629" width="0.8" height="15.0" fill="rgb(231,184,41)" rx="2" ry="2" />
<text  x="1183.37" y="639.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (5 samples, 0.12%)</title><rect x="1066.5" y="645" width="1.3" height="15.0" fill="rgb(213,139,43)" rx="2" ry="2" />
<text  x="1069.47" y="655.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (1 samples, 0.02%)</title><rect x="544.6" y="773" width="0.2" height="15.0" fill="rgb(242,136,0)" rx="2" ry="2" />
<text  x="547.56" y="783.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="1008.4" y="613" width="0.3" height="15.0" fill="rgb(237,127,3)" rx="2" ry="2" />
<text  x="1011.42" y="623.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (40 samples, 0.93%)</title><rect x="137.4" y="757" width="11.0" height="15.0" fill="rgb(216,1,1)" rx="2" ry="2" />
<text  x="140.38" y="767.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.02%)</title><rect x="148.7" y="565" width="0.2" height="15.0" fill="rgb(252,39,21)" rx="2" ry="2" />
<text  x="151.66" y="575.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1133.0" y="709" width="0.3" height="15.0" fill="rgb(221,54,26)" rx="2" ry="2" />
<text  x="1136.05" y="719.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (2 samples, 0.05%)</title><rect x="1187.5" y="693" width="0.6" height="15.0" fill="rgb(220,23,23)" rx="2" ry="2" />
<text  x="1190.52" y="703.5" ></text>
</g>
<g >
<title>do_user_addr_fault (103 samples, 2.40%)</title><rect x="948.4" y="773" width="28.4" height="15.0" fill="rgb(242,113,53)" rx="2" ry="2" />
<text  x="951.44" y="783.5" >do..</text>
</g>
<g >
<title>path_openat (1 samples, 0.02%)</title><rect x="10.8" y="533" width="0.3" height="15.0" fill="rgb(235,7,20)" rx="2" ry="2" />
<text  x="13.83" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.02%)</title><rect x="983.4" y="741" width="0.3" height="15.0" fill="rgb(223,226,6)" rx="2" ry="2" />
<text  x="986.38" y="751.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (3 samples, 0.07%)</title><rect x="135.7" y="789" width="0.9" height="15.0" fill="rgb(246,44,44)" rx="2" ry="2" />
<text  x="138.73" y="799.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1073.3" y="517" width="0.3" height="15.0" fill="rgb(252,206,27)" rx="2" ry="2" />
<text  x="1076.35" y="527.5" ></text>
</g>
<g >
<title>dispatcher (1,137 samples, 26.51%)</title><rect x="567.9" y="709" width="312.9" height="15.0" fill="rgb(251,53,41)" rx="2" ry="2" />
<text  x="570.95" y="719.5" >dispatcher</text>
</g>
<g >
<title>kswapd (74 samples, 1.73%)</title><rect x="1057.1" y="789" width="20.4" height="15.0" fill="rgb(219,214,39)" rx="2" ry="2" />
<text  x="1060.12" y="799.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (22 samples, 0.51%)</title><rect x="888.5" y="757" width="6.0" height="15.0" fill="rgb(247,130,33)" rx="2" ry="2" />
<text  x="891.47" y="767.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::load_fs (1 samples, 0.02%)</title><rect x="1008.4" y="741" width="0.3" height="15.0" fill="rgb(247,48,42)" rx="2" ry="2" />
<text  x="1011.42" y="751.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="821.3" y="581" width="1.4" height="15.0" fill="rgb(225,7,2)" rx="2" ry="2" />
<text  x="824.34" y="591.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="953.7" y="661" width="0.2" height="15.0" fill="rgb(250,67,46)" rx="2" ry="2" />
<text  x="956.67" y="671.5" ></text>
</g>
<g >
<title>cpu_startup_entry (174 samples, 4.06%)</title><rect x="1142.1" y="725" width="47.9" height="15.0" fill="rgb(224,17,2)" rx="2" ry="2" />
<text  x="1145.13" y="735.5" >cpu_..</text>
</g>
<g >
<title>radix_tree_lookup (1 samples, 0.02%)</title><rect x="1056.0" y="613" width="0.3" height="15.0" fill="rgb(218,132,52)" rx="2" ry="2" />
<text  x="1059.02" y="623.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.05%)</title><rect x="150.0" y="197" width="0.6" height="15.0" fill="rgb(217,5,50)" rx="2" ry="2" />
<text  x="153.04" y="207.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (2 samples, 0.05%)</title><rect x="982.8" y="789" width="0.6" height="15.0" fill="rgb(228,22,42)" rx="2" ry="2" />
<text  x="985.83" y="799.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="59.2" y="773" width="0.3" height="15.0" fill="rgb(208,201,28)" rx="2" ry="2" />
<text  x="62.25" y="783.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (3 samples, 0.07%)</title><rect x="982.8" y="805" width="0.9" height="15.0" fill="rgb(225,19,29)" rx="2" ry="2" />
<text  x="985.83" y="815.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (41 samples, 0.96%)</title><rect x="808.4" y="613" width="11.3" height="15.0" fill="rgb(245,66,53)" rx="2" ry="2" />
<text  x="811.41" y="623.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.09%)</title><rect x="150.0" y="565" width="1.1" height="15.0" fill="rgb(245,2,42)" rx="2" ry="2" />
<text  x="153.04" y="575.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.02%)</title><rect x="85.1" y="773" width="0.3" height="15.0" fill="rgb(240,105,37)" rx="2" ry="2" />
<text  x="88.11" y="783.5" ></text>
</g>
<g >
<title>NaClMprotect (1 samples, 0.02%)</title><rect x="139.6" y="693" width="0.3" height="15.0" fill="rgb(217,131,38)" rx="2" ry="2" />
<text  x="142.58" y="703.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1188.1" y="677" width="0.2" height="15.0" fill="rgb(216,75,44)" rx="2" ry="2" />
<text  x="1191.07" y="687.5" ></text>
</g>
<g >
<title>invalidate_inode_page (9 samples, 0.21%)</title><rect x="1074.2" y="565" width="2.4" height="15.0" fill="rgb(228,67,30)" rx="2" ry="2" />
<text  x="1077.17" y="575.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.05%)</title><rect x="1007.3" y="805" width="0.6" height="15.0" fill="rgb(248,49,48)" rx="2" ry="2" />
<text  x="1010.32" y="815.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="1080.2" y="613" width="0.3" height="15.0" fill="rgb(237,92,30)" rx="2" ry="2" />
<text  x="1083.23" y="623.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="150.6" y="293" width="0.3" height="15.0" fill="rgb(216,127,20)" rx="2" ry="2" />
<text  x="153.59" y="303.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.02%)</title><rect x="139.0" y="501" width="0.3" height="15.0" fill="rgb(240,165,13)" rx="2" ry="2" />
<text  x="142.03" y="511.5" ></text>
</g>
<g >
<title>do_anonymous_page (81 samples, 1.89%)</title><rect x="952.8" y="709" width="22.3" height="15.0" fill="rgb(241,159,4)" rx="2" ry="2" />
<text  x="955.84" y="719.5" >d..</text>
</g>
<g >
<title>prune_icache_sb (24 samples, 0.56%)</title><rect x="1070.6" y="661" width="6.6" height="15.0" fill="rgb(229,151,4)" rx="2" ry="2" />
<text  x="1073.60" y="671.5" ></text>
</g>
<g >
<title>_start (3 samples, 0.07%)</title><rect x="1008.1" y="821" width="0.9" height="15.0" fill="rgb(247,162,49)" rx="2" ry="2" />
<text  x="1011.14" y="831.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (4 samples, 0.09%)</title><rect x="831.8" y="629" width="1.1" height="15.0" fill="rgb(247,152,31)" rx="2" ry="2" />
<text  x="834.79" y="639.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="1064.8" y="581" width="0.3" height="15.0" fill="rgb(205,99,18)" rx="2" ry="2" />
<text  x="1067.82" y="591.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampoline (1 samples, 0.02%)</title><rect x="1008.1" y="693" width="0.3" height="15.0" fill="rgb(218,95,14)" rx="2" ry="2" />
<text  x="1011.14" y="703.5" ></text>
</g>
<g >
<title>shrink_slab_memcg (35 samples, 0.82%)</title><rect x="1067.8" y="709" width="9.7" height="15.0" fill="rgb(230,70,26)" rx="2" ry="2" />
<text  x="1070.85" y="719.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="976.8" y="757" width="0.3" height="15.0" fill="rgb(218,53,23)" rx="2" ry="2" />
<text  x="979.78" y="767.5" ></text>
</g>
<g >
<title>pmd_val (1 samples, 0.02%)</title><rect x="975.4" y="741" width="0.3" height="15.0" fill="rgb(230,0,24)" rx="2" ry="2" />
<text  x="978.40" y="751.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="1176.5" y="597" width="0.3" height="15.0" fill="rgb(236,174,12)" rx="2" ry="2" />
<text  x="1179.52" y="607.5" ></text>
</g>
<g >
<title>do_idle (172 samples, 4.01%)</title><rect x="1142.1" y="709" width="47.3" height="15.0" fill="rgb(220,19,0)" rx="2" ry="2" />
<text  x="1145.13" y="719.5" >do_i..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1055.7" y="773" width="0.3" height="15.0" fill="rgb(225,13,48)" rx="2" ry="2" />
<text  x="1058.74" y="783.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (17 samples, 0.40%)</title><rect x="889.8" y="741" width="4.7" height="15.0" fill="rgb(254,112,8)" rx="2" ry="2" />
<text  x="892.84" y="751.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="1008.4" y="245" width="0.3" height="15.0" fill="rgb(223,218,28)" rx="2" ry="2" />
<text  x="1011.42" y="255.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (2 samples, 0.05%)</title><rect x="1082.2" y="565" width="0.5" height="15.0" fill="rgb(244,103,9)" rx="2" ry="2" />
<text  x="1085.15" y="575.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="1055.7" y="725" width="0.3" height="15.0" fill="rgb(252,64,1)" rx="2" ry="2" />
<text  x="1058.74" y="735.5" ></text>
</g>
<g >
<title>main (2 samples, 0.05%)</title><rect x="10.3" y="789" width="0.5" height="15.0" fill="rgb(245,98,15)" rx="2" ry="2" />
<text  x="13.28" y="799.5" ></text>
</g>
<g >
<title>exc_page_fault (2 samples, 0.05%)</title><rect x="138.8" y="645" width="0.5" height="15.0" fill="rgb(230,172,1)" rx="2" ry="2" />
<text  x="141.76" y="655.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (1 samples, 0.02%)</title><rect x="1071.7" y="597" width="0.3" height="15.0" fill="rgb(239,38,16)" rx="2" ry="2" />
<text  x="1074.70" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.84%)</title><rect x="1019.7" y="821" width="9.9" height="15.0" fill="rgb(242,58,49)" rx="2" ry="2" />
<text  x="1022.70" y="831.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="755.3" y="597" width="0.3" height="15.0" fill="rgb(238,99,44)" rx="2" ry="2" />
<text  x="758.31" y="607.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="139.0" y="597" width="0.3" height="15.0" fill="rgb(233,35,21)" rx="2" ry="2" />
<text  x="142.03" y="607.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (43 samples, 1.00%)</title><rect x="47.1" y="805" width="11.9" height="15.0" fill="rgb(220,179,31)" rx="2" ry="2" />
<text  x="50.14" y="815.5" ></text>
</g>
<g >
<title>NaClValidateImage (2 samples, 0.05%)</title><rect x="983.9" y="741" width="0.6" height="15.0" fill="rgb(243,71,2)" rx="2" ry="2" />
<text  x="986.93" y="751.5" ></text>
</g>
<g >
<title>__handle_mm_fault (90 samples, 2.10%)</title><rect x="950.6" y="741" width="24.8" height="15.0" fill="rgb(225,136,16)" rx="2" ry="2" />
<text  x="953.64" y="751.5" >_..</text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="1077.5" y="709" width="0.3" height="15.0" fill="rgb(242,50,17)" rx="2" ry="2" />
<text  x="1080.47" y="719.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="1064.8" y="549" width="0.3" height="15.0" fill="rgb(245,61,43)" rx="2" ry="2" />
<text  x="1067.82" y="559.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="1055.7" y="709" width="0.3" height="15.0" fill="rgb(243,216,34)" rx="2" ry="2" />
<text  x="1058.74" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (86 samples, 2.01%)</title><rect x="808.1" y="645" width="23.7" height="15.0" fill="rgb(254,30,13)" rx="2" ry="2" />
<text  x="811.13" y="655.5" >h..</text>
</g>
<g >
<title>__evlist__enable (80 samples, 1.87%)</title><rect x="11.1" y="773" width="22.0" height="15.0" fill="rgb(241,62,35)" rx="2" ry="2" />
<text  x="14.10" y="783.5" >_..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (86 samples, 2.01%)</title><rect x="808.1" y="629" width="23.7" height="15.0" fill="rgb(244,53,33)" rx="2" ry="2" />
<text  x="811.13" y="639.5" >h..</text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="868.9" y="613" width="0.6" height="15.0" fill="rgb(249,145,37)" rx="2" ry="2" />
<text  x="871.93" y="623.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="148.7" y="645" width="0.2" height="15.0" fill="rgb(209,172,29)" rx="2" ry="2" />
<text  x="151.66" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="149.8" y="565" width="0.2" height="15.0" fill="rgb(207,192,53)" rx="2" ry="2" />
<text  x="152.76" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="150.6" y="165" width="0.3" height="15.0" fill="rgb(239,137,3)" rx="2" ry="2" />
<text  x="153.59" y="175.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (193 samples, 4.50%)</title><rect x="690.1" y="629" width="53.1" height="15.0" fill="rgb(216,117,2)" rx="2" ry="2" />
<text  x="693.10" y="639.5" >&lt;std:..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (40 samples, 0.93%)</title><rect x="819.7" y="597" width="11.0" height="15.0" fill="rgb(221,112,12)" rx="2" ry="2" />
<text  x="822.69" y="607.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="151.4" y="677" width="0.3" height="15.0" fill="rgb(252,152,12)" rx="2" ry="2" />
<text  x="154.41" y="687.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="852.1" y="581" width="0.3" height="15.0" fill="rgb(223,161,35)" rx="2" ry="2" />
<text  x="855.15" y="591.5" ></text>
</g>
<g >
<title>proc_root_lookup (1 samples, 0.02%)</title><rect x="1056.0" y="677" width="0.3" height="15.0" fill="rgb(217,43,52)" rx="2" ry="2" />
<text  x="1059.02" y="687.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="1029.3" y="517" width="0.3" height="15.0" fill="rgb(238,6,15)" rx="2" ry="2" />
<text  x="1032.33" y="527.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="148.7" y="709" width="0.5" height="15.0" fill="rgb(228,94,11)" rx="2" ry="2" />
<text  x="151.66" y="719.5" ></text>
</g>
<g >
<title>i_callback (1 samples, 0.02%)</title><rect x="1064.8" y="501" width="0.3" height="15.0" fill="rgb(252,72,29)" rx="2" ry="2" />
<text  x="1067.82" y="511.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.02%)</title><rect x="1008.4" y="565" width="0.3" height="15.0" fill="rgb(218,79,37)" rx="2" ry="2" />
<text  x="1011.42" y="575.5" ></text>
</g>
<g >
<title>isolate_lru_pages (7 samples, 0.16%)</title><rect x="1059.6" y="693" width="1.9" height="15.0" fill="rgb(208,59,10)" rx="2" ry="2" />
<text  x="1062.59" y="703.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (1,391 samples, 32.43%)</title><rect x="151.7" y="757" width="382.7" height="15.0" fill="rgb(222,192,24)" rx="2" ry="2" />
<text  x="154.69" y="767.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (8 samples, 0.19%)</title><rect x="964.9" y="613" width="2.3" height="15.0" fill="rgb(223,31,32)" rx="2" ry="2" />
<text  x="967.95" y="623.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.02%)</title><rect x="1188.6" y="629" width="0.3" height="15.0" fill="rgb(252,81,36)" rx="2" ry="2" />
<text  x="1191.62" y="639.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="149.8" y="421" width="0.2" height="15.0" fill="rgb(240,172,28)" rx="2" ry="2" />
<text  x="152.76" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (38 samples, 0.89%)</title><rect x="870.3" y="661" width="10.5" height="15.0" fill="rgb(214,105,46)" rx="2" ry="2" />
<text  x="873.31" y="671.5" ></text>
</g>
<g >
<title>__GI___mmap64 (1 samples, 0.02%)</title><rect x="139.9" y="677" width="0.2" height="15.0" fill="rgb(218,126,36)" rx="2" ry="2" />
<text  x="142.86" y="687.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.02%)</title><rect x="1056.0" y="741" width="0.3" height="15.0" fill="rgb(213,62,52)" rx="2" ry="2" />
<text  x="1059.02" y="751.5" ></text>
</g>
<g >
<title>std::panicking::panicking (3 samples, 0.07%)</title><rect x="690.1" y="581" width="0.8" height="15.0" fill="rgb(252,117,33)" rx="2" ry="2" />
<text  x="693.10" y="591.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1077.8" y="757" width="0.2" height="15.0" fill="rgb(228,104,34)" rx="2" ry="2" />
<text  x="1080.75" y="767.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="862.3" y="565" width="0.3" height="15.0" fill="rgb(247,213,34)" rx="2" ry="2" />
<text  x="865.33" y="575.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.02%)</title><rect x="689.8" y="613" width="0.3" height="15.0" fill="rgb(248,121,42)" rx="2" ry="2" />
<text  x="692.83" y="623.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="1007.9" y="613" width="0.2" height="15.0" fill="rgb(253,66,32)" rx="2" ry="2" />
<text  x="1010.87" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (1,390 samples, 32.41%)</title><rect x="152.0" y="677" width="382.4" height="15.0" fill="rgb(249,76,2)" rx="2" ry="2" />
<text  x="154.96" y="687.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rust..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.12%)</title><rect x="167.4" y="581" width="1.3" height="15.0" fill="rgb(232,143,50)" rx="2" ry="2" />
<text  x="170.37" y="591.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (712 samples, 16.60%)</title><rect x="338.2" y="645" width="195.9" height="15.0" fill="rgb(213,223,22)" rx="2" ry="2" />
<text  x="341.22" y="655.5" >ringbuf::consumer::Consum..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (95 samples, 2.21%)</title><rect x="591.6" y="661" width="26.1" height="15.0" fill="rgb(254,74,20)" rx="2" ry="2" />
<text  x="594.61" y="671.5" >&lt;..</text>
</g>
<g >
<title>call_rcu (1 samples, 0.02%)</title><rect x="1068.7" y="597" width="0.2" height="15.0" fill="rgb(236,178,31)" rx="2" ry="2" />
<text  x="1071.67" y="607.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="975.1" y="629" width="0.3" height="15.0" fill="rgb(226,101,26)" rx="2" ry="2" />
<text  x="978.13" y="639.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="148.7" y="581" width="0.2" height="15.0" fill="rgb(232,0,41)" rx="2" ry="2" />
<text  x="151.66" y="591.5" ></text>
</g>
<g >
<title>__update_blocked_fair (2 samples, 0.05%)</title><rect x="1180.4" y="549" width="0.5" height="15.0" fill="rgb(214,19,30)" rx="2" ry="2" />
<text  x="1183.37" y="559.5" ></text>
</g>
<g >
<title>workingset_age_nonresident (1 samples, 0.02%)</title><rect x="1065.4" y="645" width="0.2" height="15.0" fill="rgb(241,139,14)" rx="2" ry="2" />
<text  x="1068.37" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (60 samples, 1.40%)</title><rect x="168.7" y="645" width="16.6" height="15.0" fill="rgb(249,90,50)" rx="2" ry="2" />
<text  x="171.75" y="655.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.02%)</title><rect x="34.2" y="325" width="0.3" height="15.0" fill="rgb(220,94,9)" rx="2" ry="2" />
<text  x="37.21" y="335.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.05%)</title><rect x="1078.3" y="725" width="0.6" height="15.0" fill="rgb(206,64,1)" rx="2" ry="2" />
<text  x="1081.30" y="735.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (65 samples, 1.52%)</title><rect x="15.2" y="469" width="17.9" height="15.0" fill="rgb(239,52,34)" rx="2" ry="2" />
<text  x="18.23" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.16%)</title><rect x="817.8" y="533" width="1.9" height="15.0" fill="rgb(248,85,43)" rx="2" ry="2" />
<text  x="820.76" y="543.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1073.3" y="501" width="0.3" height="15.0" fill="rgb(215,71,50)" rx="2" ry="2" />
<text  x="1076.35" y="511.5" ></text>
</g>
<g >
<title>core::cmp::min_by (1 samples, 0.02%)</title><rect x="689.6" y="613" width="0.2" height="15.0" fill="rgb(239,61,0)" rx="2" ry="2" />
<text  x="692.55" y="623.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (9 samples, 0.21%)</title><rect x="33.4" y="757" width="2.5" height="15.0" fill="rgb(240,150,5)" rx="2" ry="2" />
<text  x="36.39" y="767.5" ></text>
</g>
<g >
<title>do_open_execat (1 samples, 0.02%)</title><rect x="10.8" y="565" width="0.3" height="15.0" fill="rgb(207,43,20)" rx="2" ry="2" />
<text  x="13.83" y="575.5" ></text>
</g>
<g >
<title>remote_function (66 samples, 1.54%)</title><rect x="15.0" y="549" width="18.1" height="15.0" fill="rgb(223,17,0)" rx="2" ry="2" />
<text  x="17.95" y="559.5" ></text>
</g>
<g >
<title>ext4_free_in_core_inode (2 samples, 0.05%)</title><rect x="1081.6" y="549" width="0.6" height="15.0" fill="rgb(215,34,14)" rx="2" ry="2" />
<text  x="1084.60" y="559.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1079.7" y="725" width="0.3" height="15.0" fill="rgb(208,10,34)" rx="2" ry="2" />
<text  x="1082.68" y="735.5" ></text>
</g>
<g >
<title>refill_obj_stock (1 samples, 0.02%)</title><rect x="1081.3" y="517" width="0.3" height="15.0" fill="rgb(248,42,11)" rx="2" ry="2" />
<text  x="1084.33" y="527.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="138.8" y="629" width="0.5" height="15.0" fill="rgb(215,87,24)" rx="2" ry="2" />
<text  x="141.76" y="639.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="1073.3" y="485" width="0.3" height="15.0" fill="rgb(242,151,19)" rx="2" ry="2" />
<text  x="1076.35" y="495.5" ></text>
</g>
<g >
<title>std::panicking::panicking (3 samples, 0.07%)</title><rect x="832.1" y="597" width="0.8" height="15.0" fill="rgb(228,0,6)" rx="2" ry="2" />
<text  x="835.07" y="607.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (20 samples, 0.47%)</title><rect x="646.6" y="581" width="5.5" height="15.0" fill="rgb(242,57,46)" rx="2" ry="2" />
<text  x="649.63" y="591.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.02%)</title><rect x="1077.5" y="693" width="0.3" height="15.0" fill="rgb(220,83,6)" rx="2" ry="2" />
<text  x="1080.47" y="703.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.02%)</title><rect x="1056.8" y="725" width="0.3" height="15.0" fill="rgb(220,94,9)" rx="2" ry="2" />
<text  x="1059.84" y="735.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (4 samples, 0.09%)</title><rect x="150.0" y="501" width="1.1" height="15.0" fill="rgb(237,61,53)" rx="2" ry="2" />
<text  x="153.04" y="511.5" ></text>
</g>
<g >
<title>bprm_execve (1 samples, 0.02%)</title><rect x="10.8" y="661" width="0.3" height="15.0" fill="rgb(246,107,2)" rx="2" ry="2" />
<text  x="13.83" y="671.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (1 samples, 0.02%)</title><rect x="150.3" y="117" width="0.3" height="15.0" fill="rgb(237,20,26)" rx="2" ry="2" />
<text  x="153.31" y="127.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.02%)</title><rect x="1189.4" y="709" width="0.3" height="15.0" fill="rgb(215,218,16)" rx="2" ry="2" />
<text  x="1192.45" y="719.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (6 samples, 0.14%)</title><rect x="1147.6" y="565" width="1.7" height="15.0" fill="rgb(224,13,15)" rx="2" ry="2" />
<text  x="1150.63" y="575.5" ></text>
</g>
<g >
<title>NaClStoreMem (1 samples, 0.02%)</title><rect x="1008.1" y="629" width="0.3" height="15.0" fill="rgb(242,209,24)" rx="2" ry="2" />
<text  x="1011.14" y="639.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (31 samples, 0.72%)</title><rect x="1149.3" y="645" width="8.5" height="15.0" fill="rgb(254,172,20)" rx="2" ry="2" />
<text  x="1152.28" y="655.5" ></text>
</g>
<g >
<title>unmap_vmas (35 samples, 0.82%)</title><rect x="1019.7" y="693" width="9.6" height="15.0" fill="rgb(223,20,35)" rx="2" ry="2" />
<text  x="1022.70" y="703.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="974.6" y="693" width="0.3" height="15.0" fill="rgb(253,120,10)" rx="2" ry="2" />
<text  x="977.58" y="703.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="865.9" y="613" width="0.3" height="15.0" fill="rgb(251,31,27)" rx="2" ry="2" />
<text  x="868.91" y="623.5" ></text>
</g>
<g >
<title>cmd_record (90 samples, 2.10%)</title><rect x="11.1" y="805" width="24.8" height="15.0" fill="rgb(205,55,52)" rx="2" ry="2" />
<text  x="14.10" y="815.5" >c..</text>
</g>
<g >
<title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect x="1008.4" y="325" width="0.3" height="15.0" fill="rgb(217,58,49)" rx="2" ry="2" />
<text  x="1011.42" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (92 samples, 2.15%)</title><rect x="617.7" y="645" width="25.4" height="15.0" fill="rgb(228,103,22)" rx="2" ry="2" />
<text  x="620.75" y="655.5" >&lt;..</text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 1.12%)</title><rect x="652.1" y="645" width="13.2" height="15.0" fill="rgb(236,173,40)" rx="2" ry="2" />
<text  x="655.14" y="655.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="37.8" y="805" width="0.3" height="15.0" fill="rgb(245,70,45)" rx="2" ry="2" />
<text  x="40.79" y="815.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="1080.8" y="629" width="0.3" height="15.0" fill="rgb(234,208,21)" rx="2" ry="2" />
<text  x="1083.78" y="639.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.05%)</title><rect x="1187.0" y="629" width="0.5" height="15.0" fill="rgb(228,42,26)" rx="2" ry="2" />
<text  x="1189.97" y="639.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (1 samples, 0.02%)</title><rect x="1071.7" y="613" width="0.3" height="15.0" fill="rgb(240,208,46)" rx="2" ry="2" />
<text  x="1074.70" y="623.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.02%)</title><rect x="1008.1" y="741" width="0.3" height="15.0" fill="rgb(225,178,27)" rx="2" ry="2" />
<text  x="1011.14" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="983.4" y="773" width="0.3" height="15.0" fill="rgb(233,143,54)" rx="2" ry="2" />
<text  x="986.38" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 1.87%)</title><rect x="11.1" y="709" width="22.0" height="15.0" fill="rgb(252,70,41)" rx="2" ry="2" />
<text  x="14.10" y="719.5" >e..</text>
</g>
<g >
<title>rcu_gp_fqs_loop (1 samples, 0.02%)</title><rect x="1077.5" y="773" width="0.3" height="15.0" fill="rgb(213,6,29)" rx="2" ry="2" />
<text  x="1080.47" y="783.5" ></text>
</g>
<g >
<title>NaClForkThreadContextSetup (1 samples, 0.02%)</title><rect x="151.4" y="725" width="0.3" height="15.0" fill="rgb(246,191,50)" rx="2" ry="2" />
<text  x="154.41" y="735.5" ></text>
</g>
<g >
<title>dispatcher (6 samples, 0.14%)</title><rect x="149.5" y="741" width="1.6" height="15.0" fill="rgb(217,200,18)" rx="2" ry="2" />
<text  x="152.49" y="751.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="34.2" y="405" width="0.3" height="15.0" fill="rgb(238,173,48)" rx="2" ry="2" />
<text  x="37.21" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (36 samples, 0.84%)</title><rect x="1019.7" y="789" width="9.9" height="15.0" fill="rgb(237,14,18)" rx="2" ry="2" />
<text  x="1022.70" y="799.5" ></text>
</g>
<g >
<title>__GI__IO_file_fopen (1 samples, 0.02%)</title><rect x="10.0" y="773" width="0.3" height="15.0" fill="rgb(205,205,39)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (32 samples, 0.75%)</title><rect x="61.4" y="805" width="8.9" height="15.0" fill="rgb(220,144,24)" rx="2" ry="2" />
<text  x="64.45" y="815.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="1029.3" y="469" width="0.3" height="15.0" fill="rgb(236,41,43)" rx="2" ry="2" />
<text  x="1032.33" y="479.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="1008.4" y="597" width="0.3" height="15.0" fill="rgb(210,81,5)" rx="2" ry="2" />
<text  x="1011.42" y="607.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (1 samples, 0.02%)</title><rect x="38.3" y="805" width="0.3" height="15.0" fill="rgb(249,67,20)" rx="2" ry="2" />
<text  x="41.34" y="815.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (1 samples, 0.02%)</title><rect x="34.8" y="421" width="0.2" height="15.0" fill="rgb(217,210,0)" rx="2" ry="2" />
<text  x="37.76" y="431.5" ></text>
</g>
<g >
<title>rcu_pending (1 samples, 0.02%)</title><rect x="1146.3" y="469" width="0.2" height="15.0" fill="rgb(250,75,36)" rx="2" ry="2" />
<text  x="1149.26" y="479.5" ></text>
</g>
<g >
<title>__list_lru_walk_one (1 samples, 0.02%)</title><rect x="1068.1" y="629" width="0.3" height="15.0" fill="rgb(253,181,46)" rx="2" ry="2" />
<text  x="1071.12" y="639.5" ></text>
</g>
<g >
<title>NaClMutexLock (25 samples, 0.58%)</title><rect x="125.0" y="757" width="6.9" height="15.0" fill="rgb(236,219,6)" rx="2" ry="2" />
<text  x="128.00" y="767.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="1008.4" y="485" width="0.3" height="15.0" fill="rgb(212,128,38)" rx="2" ry="2" />
<text  x="1011.42" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.02%)</title><rect x="975.7" y="757" width="0.3" height="15.0" fill="rgb(247,108,9)" rx="2" ry="2" />
<text  x="978.68" y="767.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (7 samples, 0.16%)</title><rect x="149.2" y="789" width="1.9" height="15.0" fill="rgb(218,103,21)" rx="2" ry="2" />
<text  x="152.21" y="799.5" ></text>
</g>
<g >
<title>list_lru_add (1 samples, 0.02%)</title><rect x="1074.4" y="453" width="0.3" height="15.0" fill="rgb(212,85,22)" rx="2" ry="2" />
<text  x="1077.45" y="463.5" ></text>
</g>
<g >
<title>uncharge_batch (1 samples, 0.02%)</title><rect x="1073.9" y="517" width="0.3" height="15.0" fill="rgb(209,162,48)" rx="2" ry="2" />
<text  x="1076.90" y="527.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.02%)</title><rect x="1077.8" y="725" width="0.2" height="15.0" fill="rgb(254,38,8)" rx="2" ry="2" />
<text  x="1080.75" y="735.5" ></text>
</g>
<g >
<title>__execvpe_common (1 samples, 0.02%)</title><rect x="10.8" y="757" width="0.3" height="15.0" fill="rgb(233,150,1)" rx="2" ry="2" />
<text  x="13.83" y="767.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="1029.3" y="661" width="0.3" height="15.0" fill="rgb(235,76,12)" rx="2" ry="2" />
<text  x="1032.33" y="671.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="1008.4" y="645" width="0.3" height="15.0" fill="rgb(212,178,33)" rx="2" ry="2" />
<text  x="1011.42" y="655.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (1 samples, 0.02%)</title><rect x="149.2" y="757" width="0.3" height="15.0" fill="rgb(207,108,3)" rx="2" ry="2" />
<text  x="152.21" y="767.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (38 samples, 0.89%)</title><rect x="833.4" y="613" width="10.5" height="15.0" fill="rgb(207,220,32)" rx="2" ry="2" />
<text  x="836.44" y="623.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.07%)</title><rect x="1180.4" y="565" width="0.8" height="15.0" fill="rgb(227,182,37)" rx="2" ry="2" />
<text  x="1183.37" y="575.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.05%)</title><rect x="150.0" y="325" width="0.6" height="15.0" fill="rgb(212,88,53)" rx="2" ry="2" />
<text  x="153.04" y="335.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.02%)</title><rect x="975.1" y="661" width="0.3" height="15.0" fill="rgb(245,92,36)" rx="2" ry="2" />
<text  x="978.13" y="671.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="35.9" y="805" width="0.8" height="15.0" fill="rgb(235,157,45)" rx="2" ry="2" />
<text  x="38.86" y="815.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="150.0" y="101" width="0.3" height="15.0" fill="rgb(242,17,23)" rx="2" ry="2" />
<text  x="153.04" y="111.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (14 samples, 0.33%)</title><rect x="529.2" y="597" width="3.8" height="15.0" fill="rgb(209,19,9)" rx="2" ry="2" />
<text  x="532.16" y="607.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (70 samples, 1.63%)</title><rect x="832.9" y="645" width="19.2" height="15.0" fill="rgb(248,63,50)" rx="2" ry="2" />
<text  x="835.89" y="655.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.05%)</title><rect x="150.6" y="341" width="0.5" height="15.0" fill="rgb(211,3,16)" rx="2" ry="2" />
<text  x="153.59" y="351.5" ></text>
</g>
<g >
<title>try_to_free_buffers (5 samples, 0.12%)</title><rect x="1075.3" y="501" width="1.3" height="15.0" fill="rgb(217,156,2)" rx="2" ry="2" />
<text  x="1078.27" y="511.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (1 samples, 0.02%)</title><rect x="34.8" y="405" width="0.2" height="15.0" fill="rgb(252,128,13)" rx="2" ry="2" />
<text  x="37.76" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (19 samples, 0.44%)</title><rect x="824.1" y="533" width="5.2" height="15.0" fill="rgb(212,226,11)" rx="2" ry="2" />
<text  x="827.09" y="543.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="818.0" y="501" width="0.9" height="15.0" fill="rgb(236,142,25)" rx="2" ry="2" />
<text  x="821.03" y="511.5" ></text>
</g>
<g >
<title>CopyBundleHeads (2 samples, 0.05%)</title><rect x="137.4" y="725" width="0.5" height="15.0" fill="rgb(224,201,27)" rx="2" ry="2" />
<text  x="140.38" y="735.5" ></text>
</g>
<g >
<title>NaClSysExit (7 samples, 0.16%)</title><rect x="149.2" y="773" width="1.9" height="15.0" fill="rgb(218,83,21)" rx="2" ry="2" />
<text  x="152.21" y="783.5" ></text>
</g>
<g >
<title>native_write_msr (65 samples, 1.52%)</title><rect x="15.2" y="453" width="17.9" height="15.0" fill="rgb(208,222,20)" rx="2" ry="2" />
<text  x="18.23" y="463.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.02%)</title><rect x="148.9" y="613" width="0.3" height="15.0" fill="rgb(249,22,24)" rx="2" ry="2" />
<text  x="151.94" y="623.5" ></text>
</g>
<g >
<title>follow_pmd_mask.isra.0 (1 samples, 0.02%)</title><rect x="983.1" y="581" width="0.3" height="15.0" fill="rgb(224,89,25)" rx="2" ry="2" />
<text  x="986.11" y="591.5" ></text>
</g>
<g >
<title>dentry_free (1 samples, 0.02%)</title><rect x="1068.7" y="613" width="0.2" height="15.0" fill="rgb(252,188,37)" rx="2" ry="2" />
<text  x="1071.67" y="623.5" ></text>
</g>
<g >
<title>__cmd_record (1 samples, 0.02%)</title><rect x="10.8" y="789" width="0.3" height="15.0" fill="rgb(243,225,45)" rx="2" ry="2" />
<text  x="13.83" y="799.5" ></text>
</g>
<g >
<title>arena_get2.part.0 (1 samples, 0.02%)</title><rect x="1007.9" y="677" width="0.2" height="15.0" fill="rgb(233,59,23)" rx="2" ry="2" />
<text  x="1010.87" y="687.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (26 samples, 0.61%)</title><rect x="861.5" y="645" width="7.2" height="15.0" fill="rgb(252,17,22)" rx="2" ry="2" />
<text  x="864.50" y="655.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.02%)</title><rect x="534.1" y="645" width="0.3" height="15.0" fill="rgb(228,40,31)" rx="2" ry="2" />
<text  x="537.11" y="655.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.02%)</title><rect x="983.4" y="709" width="0.3" height="15.0" fill="rgb(235,131,8)" rx="2" ry="2" />
<text  x="986.38" y="719.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (21 samples, 0.49%)</title><rect x="77.4" y="757" width="5.8" height="15.0" fill="rgb(213,215,46)" rx="2" ry="2" />
<text  x="80.40" y="767.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.02%)</title><rect x="1083.5" y="581" width="0.3" height="15.0" fill="rgb(210,100,8)" rx="2" ry="2" />
<text  x="1086.53" y="591.5" ></text>
</g>
<g >
<title>__remove_mapping (14 samples, 0.33%)</title><rect x="1061.8" y="677" width="3.8" height="15.0" fill="rgb(230,196,13)" rx="2" ry="2" />
<text  x="1064.79" y="687.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="1187.5" y="677" width="0.3" height="15.0" fill="rgb(219,39,49)" rx="2" ry="2" />
<text  x="1190.52" y="687.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="1029.3" y="581" width="0.3" height="15.0" fill="rgb(212,198,25)" rx="2" ry="2" />
<text  x="1032.33" y="591.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1131.9" y="693" width="0.3" height="15.0" fill="rgb(219,104,49)" rx="2" ry="2" />
<text  x="1134.95" y="703.5" ></text>
</g>
<g >
<title>__lookup_slow (1 samples, 0.02%)</title><rect x="1056.0" y="693" width="0.3" height="15.0" fill="rgb(211,123,50)" rx="2" ry="2" />
<text  x="1059.02" y="703.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (92 samples, 2.15%)</title><rect x="617.7" y="661" width="25.4" height="15.0" fill="rgb(210,93,0)" rx="2" ry="2" />
<text  x="620.75" y="671.5" >c..</text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="953.7" y="613" width="0.2" height="15.0" fill="rgb(210,5,6)" rx="2" ry="2" />
<text  x="956.67" y="623.5" ></text>
</g>
<g >
<title>llist_add_batch (2 samples, 0.05%)</title><rect x="1139.9" y="645" width="0.6" height="15.0" fill="rgb(240,152,22)" rx="2" ry="2" />
<text  x="1142.93" y="655.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10 samples, 0.23%)</title><rect x="1081.1" y="677" width="2.7" height="15.0" fill="rgb(212,53,41)" rx="2" ry="2" />
<text  x="1084.05" y="687.5" ></text>
</g>
<g >
<title>cpu_startup_entry (230 samples, 5.36%)</title><rect x="1078.9" y="789" width="63.2" height="15.0" fill="rgb(251,15,19)" rx="2" ry="2" />
<text  x="1081.85" y="799.5" >cpu_st..</text>
</g>
<g >
<title>follow_pmd_mask.isra.0 (1 samples, 0.02%)</title><rect x="983.4" y="597" width="0.3" height="15.0" fill="rgb(210,109,4)" rx="2" ry="2" />
<text  x="986.38" y="607.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (7 samples, 0.16%)</title><rect x="1174.3" y="629" width="1.9" height="15.0" fill="rgb(229,48,35)" rx="2" ry="2" />
<text  x="1177.32" y="639.5" ></text>
</g>
<g >
<title>do_fault_around (1 samples, 0.02%)</title><rect x="148.9" y="629" width="0.3" height="15.0" fill="rgb(243,199,52)" rx="2" ry="2" />
<text  x="151.94" y="639.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.02%)</title><rect x="84.8" y="757" width="0.3" height="15.0" fill="rgb(205,77,51)" rx="2" ry="2" />
<text  x="87.83" y="767.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1080.2" y="581" width="0.3" height="15.0" fill="rgb(253,214,31)" rx="2" ry="2" />
<text  x="1083.23" y="591.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.02%)</title><rect x="1029.3" y="709" width="0.3" height="15.0" fill="rgb(209,92,17)" rx="2" ry="2" />
<text  x="1032.33" y="719.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="151.4" y="613" width="0.3" height="15.0" fill="rgb(220,214,40)" rx="2" ry="2" />
<text  x="154.41" y="623.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (10 samples, 0.23%)</title><rect x="1173.5" y="645" width="2.7" height="15.0" fill="rgb(249,24,42)" rx="2" ry="2" />
<text  x="1176.49" y="655.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="1188.9" y="629" width="0.3" height="15.0" fill="rgb(231,169,5)" rx="2" ry="2" />
<text  x="1191.90" y="639.5" ></text>
</g>
<g >
<title>unmap_page_range (35 samples, 0.82%)</title><rect x="1019.7" y="661" width="9.6" height="15.0" fill="rgb(217,7,38)" rx="2" ry="2" />
<text  x="1022.70" y="671.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (11 samples, 0.26%)</title><rect x="67.2" y="789" width="3.1" height="15.0" fill="rgb(213,139,46)" rx="2" ry="2" />
<text  x="70.23" y="799.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (1 samples, 0.02%)</title><rect x="87.6" y="805" width="0.3" height="15.0" fill="rgb(221,174,48)" rx="2" ry="2" />
<text  x="90.58" y="815.5" ></text>
</g>
<g >
<title>kick_ilb (5 samples, 0.12%)</title><rect x="1185.0" y="613" width="1.4" height="15.0" fill="rgb(208,73,42)" rx="2" ry="2" />
<text  x="1188.05" y="623.5" ></text>
</g>
<g >
<title>__call_rcu (1 samples, 0.02%)</title><rect x="1069.8" y="501" width="0.2" height="15.0" fill="rgb(240,105,45)" rx="2" ry="2" />
<text  x="1072.77" y="511.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="139.0" y="405" width="0.3" height="15.0" fill="rgb(218,4,20)" rx="2" ry="2" />
<text  x="142.03" y="415.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.05%)</title><rect x="150.6" y="325" width="0.5" height="15.0" fill="rgb(219,201,28)" rx="2" ry="2" />
<text  x="153.59" y="335.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.05%)</title><rect x="1064.3" y="613" width="0.5" height="15.0" fill="rgb(223,114,35)" rx="2" ry="2" />
<text  x="1067.27" y="623.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="449.1" y="565" width="0.3" height="15.0" fill="rgb(208,50,48)" rx="2" ry="2" />
<text  x="452.10" y="575.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (3 samples, 0.07%)</title><rect x="104.1" y="773" width="0.8" height="15.0" fill="rgb(205,33,17)" rx="2" ry="2" />
<text  x="107.09" y="783.5" ></text>
</g>
<g >
<title>ctx_resched (65 samples, 1.52%)</title><rect x="15.2" y="501" width="17.9" height="15.0" fill="rgb(226,167,14)" rx="2" ry="2" />
<text  x="18.23" y="511.5" ></text>
</g>
<g >
<title>blk_finish_plug (1 samples, 0.02%)</title><rect x="1057.7" y="709" width="0.2" height="15.0" fill="rgb(224,179,9)" rx="2" ry="2" />
<text  x="1060.67" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (6 samples, 0.14%)</title><rect x="149.5" y="693" width="1.6" height="15.0" fill="rgb(225,145,36)" rx="2" ry="2" />
<text  x="152.49" y="703.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (35 samples, 0.82%)</title><rect x="1019.7" y="645" width="9.6" height="15.0" fill="rgb(229,218,38)" rx="2" ry="2" />
<text  x="1022.70" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.37%)</title><rect x="575.4" y="677" width="4.4" height="15.0" fill="rgb(216,206,36)" rx="2" ry="2" />
<text  x="578.38" y="687.5" ></text>
</g>
<g >
<title>generic_perform_write (8 samples, 0.19%)</title><rect x="33.7" y="469" width="2.2" height="15.0" fill="rgb(242,167,29)" rx="2" ry="2" />
<text  x="36.66" y="479.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="1008.4" y="629" width="0.3" height="15.0" fill="rgb(210,183,38)" rx="2" ry="2" />
<text  x="1011.42" y="639.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (68 samples, 1.59%)</title><rect x="665.6" y="629" width="18.7" height="15.0" fill="rgb(210,75,23)" rx="2" ry="2" />
<text  x="668.62" y="639.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (1 samples, 0.02%)</title><rect x="973.8" y="693" width="0.2" height="15.0" fill="rgb(211,222,15)" rx="2" ry="2" />
<text  x="976.75" y="703.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (30 samples, 0.70%)</title><rect x="843.9" y="597" width="8.2" height="15.0" fill="rgb(244,215,3)" rx="2" ry="2" />
<text  x="846.90" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (92 samples, 2.15%)</title><rect x="617.7" y="613" width="25.4" height="15.0" fill="rgb(218,21,34)" rx="2" ry="2" />
<text  x="620.75" y="623.5" >c..</text>
</g>
<g >
<title>process_vm_rw (2 samples, 0.05%)</title><rect x="982.8" y="709" width="0.6" height="15.0" fill="rgb(212,97,43)" rx="2" ry="2" />
<text  x="985.83" y="719.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1080.2" y="549" width="0.3" height="15.0" fill="rgb(219,99,53)" rx="2" ry="2" />
<text  x="1083.23" y="559.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (989 samples, 23.06%)</title><rect x="588.3" y="693" width="272.1" height="15.0" fill="rgb(248,187,5)" rx="2" ry="2" />
<text  x="591.31" y="703.5" >rustposix::safeposix::dispatcher::di..</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="139.0" y="421" width="0.3" height="15.0" fill="rgb(244,4,4)" rx="2" ry="2" />
<text  x="142.03" y="431.5" ></text>
</g>
<g >
<title>proc_pid_lookup (1 samples, 0.02%)</title><rect x="1056.0" y="661" width="0.3" height="15.0" fill="rgb(228,26,22)" rx="2" ry="2" />
<text  x="1059.02" y="671.5" ></text>
</g>
<g >
<title>find_get_entries (2 samples, 0.05%)</title><rect x="1076.6" y="549" width="0.6" height="15.0" fill="rgb(225,26,5)" rx="2" ry="2" />
<text  x="1079.65" y="559.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1141.3" y="741" width="0.3" height="15.0" fill="rgb(229,89,43)" rx="2" ry="2" />
<text  x="1144.30" y="751.5" ></text>
</g>
<g >
<title>prune_dcache_sb (9 samples, 0.21%)</title><rect x="1068.1" y="661" width="2.5" height="15.0" fill="rgb(242,71,46)" rx="2" ry="2" />
<text  x="1071.12" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_unwind (1 samples, 0.02%)</title><rect x="149.2" y="709" width="0.3" height="15.0" fill="rgb(231,44,10)" rx="2" ry="2" />
<text  x="152.21" y="719.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (8 samples, 0.19%)</title><rect x="104.9" y="773" width="2.2" height="15.0" fill="rgb(227,101,18)" rx="2" ry="2" />
<text  x="107.92" y="783.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.02%)</title><rect x="1008.4" y="277" width="0.3" height="15.0" fill="rgb(250,38,53)" rx="2" ry="2" />
<text  x="1011.42" y="287.5" ></text>
</g>
<g >
<title>[libreadline.so.8.1] (1 samples, 0.02%)</title><rect x="10.3" y="661" width="0.3" height="15.0" fill="rgb(215,15,4)" rx="2" ry="2" />
<text  x="13.28" y="671.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.02%)</title><rect x="139.0" y="533" width="0.3" height="15.0" fill="rgb(208,178,30)" rx="2" ry="2" />
<text  x="142.03" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.14%)</title><rect x="59.8" y="805" width="1.6" height="15.0" fill="rgb(244,165,28)" rx="2" ry="2" />
<text  x="62.80" y="815.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="150.6" y="197" width="0.3" height="15.0" fill="rgb(247,188,22)" rx="2" ry="2" />
<text  x="153.59" y="207.5" ></text>
</g>
<g >
<title>follow_page_mask (1 samples, 0.02%)</title><rect x="983.4" y="629" width="0.3" height="15.0" fill="rgb(228,35,51)" rx="2" ry="2" />
<text  x="986.38" y="639.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.05%)</title><rect x="1078.3" y="757" width="0.6" height="15.0" fill="rgb(251,154,43)" rx="2" ry="2" />
<text  x="1081.30" y="767.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (1 samples, 0.02%)</title><rect x="665.3" y="629" width="0.3" height="15.0" fill="rgb(211,161,39)" rx="2" ry="2" />
<text  x="668.34" y="639.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.05%)</title><rect x="972.7" y="677" width="0.5" height="15.0" fill="rgb(242,55,8)" rx="2" ry="2" />
<text  x="975.65" y="687.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_enum (1 samples, 0.02%)</title><rect x="1008.4" y="453" width="0.3" height="15.0" fill="rgb(209,148,1)" rx="2" ry="2" />
<text  x="1011.42" y="463.5" ></text>
</g>
<g >
<title>dequeue_task (2 samples, 0.05%)</title><rect x="1078.3" y="741" width="0.6" height="15.0" fill="rgb(207,140,44)" rx="2" ry="2" />
<text  x="1081.30" y="751.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (8 samples, 0.19%)</title><rect x="166.5" y="645" width="2.2" height="15.0" fill="rgb(249,16,42)" rx="2" ry="2" />
<text  x="169.54" y="655.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1064.8" y="629" width="0.3" height="15.0" fill="rgb(233,130,29)" rx="2" ry="2" />
<text  x="1067.82" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.47%)</title><rect x="652.1" y="597" width="5.5" height="15.0" fill="rgb(217,139,43)" rx="2" ry="2" />
<text  x="655.14" y="607.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.19%)</title><rect x="743.5" y="645" width="2.2" height="15.0" fill="rgb(230,208,26)" rx="2" ry="2" />
<text  x="746.48" y="655.5" ></text>
</g>
<g >
<title>__GI_execve (1 samples, 0.02%)</title><rect x="10.8" y="741" width="0.3" height="15.0" fill="rgb(252,150,2)" rx="2" ry="2" />
<text  x="13.83" y="751.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="150.6" y="261" width="0.3" height="15.0" fill="rgb(224,175,21)" rx="2" ry="2" />
<text  x="153.59" y="271.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (207 samples, 4.83%)</title><rect x="1079.1" y="757" width="57.0" height="15.0" fill="rgb(217,30,52)" rx="2" ry="2" />
<text  x="1082.13" y="767.5" >cpuidl..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14 samples, 0.33%)</title><rect x="1145.4" y="645" width="3.9" height="15.0" fill="rgb(213,1,41)" rx="2" ry="2" />
<text  x="1148.43" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.07%)</title><rect x="869.5" y="613" width="0.8" height="15.0" fill="rgb(241,13,3)" rx="2" ry="2" />
<text  x="872.48" y="623.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.05%)</title><rect x="974.0" y="661" width="0.6" height="15.0" fill="rgb(252,102,35)" rx="2" ry="2" />
<text  x="977.03" y="671.5" ></text>
</g>
<g >
<title>irq_work_tick (1 samples, 0.02%)</title><rect x="1145.7" y="501" width="0.3" height="15.0" fill="rgb(215,7,2)" rx="2" ry="2" />
<text  x="1148.71" y="511.5" ></text>
</g>
<g >
<title>do_shrink_slab (34 samples, 0.79%)</title><rect x="1067.8" y="693" width="9.4" height="15.0" fill="rgb(232,30,51)" rx="2" ry="2" />
<text  x="1070.85" y="703.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1175.4" y="581" width="0.3" height="15.0" fill="rgb(248,83,46)" rx="2" ry="2" />
<text  x="1178.42" y="591.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.05%)</title><rect x="1169.9" y="645" width="0.6" height="15.0" fill="rgb(208,166,22)" rx="2" ry="2" />
<text  x="1172.92" y="655.5" ></text>
</g>
<g >
<title>unaccount_page_cache_page (2 samples, 0.05%)</title><rect x="1064.3" y="645" width="0.5" height="15.0" fill="rgb(243,18,22)" rx="2" ry="2" />
<text  x="1067.27" y="655.5" ></text>
</g>
<g >
<title>cpuidle_enter (96 samples, 2.24%)</title><rect x="1144.3" y="677" width="26.4" height="15.0" fill="rgb(233,128,40)" rx="2" ry="2" />
<text  x="1147.33" y="687.5" >c..</text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="1077.5" y="613" width="0.3" height="15.0" fill="rgb(221,180,53)" rx="2" ry="2" />
<text  x="1080.47" y="623.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.02%)</title><rect x="33.1" y="709" width="0.3" height="15.0" fill="rgb(254,4,41)" rx="2" ry="2" />
<text  x="36.11" y="719.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.05%)</title><rect x="974.0" y="693" width="0.6" height="15.0" fill="rgb(206,19,14)" rx="2" ry="2" />
<text  x="977.03" y="703.5" ></text>
</g>
<g >
<title>scheduler_tick (3 samples, 0.07%)</title><rect x="1146.5" y="485" width="0.9" height="15.0" fill="rgb(250,18,50)" rx="2" ry="2" />
<text  x="1149.53" y="495.5" ></text>
</g>
<g >
<title>__sys_recvmsg (2 samples, 0.05%)</title><rect x="1056.3" y="773" width="0.5" height="15.0" fill="rgb(254,129,9)" rx="2" ry="2" />
<text  x="1059.29" y="783.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="150.3" y="53" width="0.3" height="15.0" fill="rgb(230,4,16)" rx="2" ry="2" />
<text  x="153.31" y="63.5" ></text>
</g>
<g >
<title>NaClLog (2 samples, 0.05%)</title><rect x="87.9" y="805" width="0.5" height="15.0" fill="rgb(241,94,22)" rx="2" ry="2" />
<text  x="90.86" y="815.5" ></text>
</g>
<g >
<title>uncharge_batch (1 samples, 0.02%)</title><rect x="1065.9" y="661" width="0.3" height="15.0" fill="rgb(245,4,26)" rx="2" ry="2" />
<text  x="1068.92" y="671.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.02%)</title><rect x="1073.3" y="405" width="0.3" height="15.0" fill="rgb(229,157,2)" rx="2" ry="2" />
<text  x="1076.35" y="415.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="149.8" y="293" width="0.2" height="15.0" fill="rgb(208,0,30)" rx="2" ry="2" />
<text  x="152.76" y="303.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.02%)</title><rect x="1169.1" y="645" width="0.3" height="15.0" fill="rgb(241,56,26)" rx="2" ry="2" />
<text  x="1172.09" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (13 samples, 0.30%)</title><rect x="643.1" y="581" width="3.5" height="15.0" fill="rgb(248,209,37)" rx="2" ry="2" />
<text  x="646.06" y="591.5" ></text>
</g>
<g >
<title>__isolate_lru_page_prepare (1 samples, 0.02%)</title><rect x="1059.0" y="693" width="0.3" height="15.0" fill="rgb(208,92,9)" rx="2" ry="2" />
<text  x="1062.04" y="703.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (19 samples, 0.44%)</title><rect x="420.8" y="597" width="5.2" height="15.0" fill="rgb(227,54,42)" rx="2" ry="2" />
<text  x="423.76" y="607.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (4 samples, 0.09%)</title><rect x="754.2" y="581" width="1.1" height="15.0" fill="rgb(217,36,52)" rx="2" ry="2" />
<text  x="757.21" y="591.5" ></text>
</g>
<g >
<title>release_pages (20 samples, 0.47%)</title><rect x="1023.8" y="581" width="5.5" height="15.0" fill="rgb(236,169,17)" rx="2" ry="2" />
<text  x="1026.83" y="591.5" ></text>
</g>
<g >
<title>kmem_cache_free (3 samples, 0.07%)</title><rect x="1075.8" y="469" width="0.8" height="15.0" fill="rgb(232,81,36)" rx="2" ry="2" />
<text  x="1078.82" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (985 samples, 22.97%)</title><rect x="589.4" y="677" width="271.0" height="15.0" fill="rgb(254,84,54)" rx="2" ry="2" />
<text  x="592.41" y="687.5" >rustposix::safeposix::syscalls::fs_c..</text>
</g>
<g >
<title>__update_blocked_fair (4 samples, 0.09%)</title><rect x="1148.2" y="517" width="1.1" height="15.0" fill="rgb(241,152,50)" rx="2" ry="2" />
<text  x="1151.18" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="150.0" y="133" width="0.3" height="15.0" fill="rgb(249,202,18)" rx="2" ry="2" />
<text  x="153.04" y="143.5" ></text>
</g>
<g >
<title>find_task_by_pid_ns (1 samples, 0.02%)</title><rect x="1056.0" y="645" width="0.3" height="15.0" fill="rgb(205,18,20)" rx="2" ry="2" />
<text  x="1059.02" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (83 samples, 1.94%)</title><rect x="426.0" y="581" width="22.8" height="15.0" fill="rgb(230,212,41)" rx="2" ry="2" />
<text  x="428.99" y="591.5" >c..</text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 0.05%)</title><rect x="983.9" y="709" width="0.6" height="15.0" fill="rgb(210,146,3)" rx="2" ry="2" />
<text  x="986.93" y="719.5" ></text>
</g>
<g >
<title>llist_reverse_order (2 samples, 0.05%)</title><rect x="1178.4" y="677" width="0.6" height="15.0" fill="rgb(218,175,15)" rx="2" ry="2" />
<text  x="1181.44" y="687.5" ></text>
</g>
<g >
<title>shrink_dentry_list (8 samples, 0.19%)</title><rect x="1068.4" y="645" width="2.2" height="15.0" fill="rgb(248,61,35)" rx="2" ry="2" />
<text  x="1071.40" y="655.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (3 samples, 0.07%)</title><rect x="896.4" y="757" width="0.9" height="15.0" fill="rgb(228,224,52)" rx="2" ry="2" />
<text  x="899.44" y="767.5" ></text>
</g>
<g >
<title>&lt;u32 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (1 samples, 0.02%)</title><rect x="150.9" y="213" width="0.2" height="15.0" fill="rgb(251,57,9)" rx="2" ry="2" />
<text  x="153.86" y="223.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="971.3" y="629" width="0.3" height="15.0" fill="rgb(219,186,7)" rx="2" ry="2" />
<text  x="974.28" y="639.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (2 samples, 0.05%)</title><rect x="982.8" y="677" width="0.6" height="15.0" fill="rgb(248,32,21)" rx="2" ry="2" />
<text  x="985.83" y="687.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (1 samples, 0.02%)</title><rect x="150.9" y="245" width="0.2" height="15.0" fill="rgb(250,29,1)" rx="2" ry="2" />
<text  x="153.86" y="255.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="149.8" y="357" width="0.2" height="15.0" fill="rgb(220,179,5)" rx="2" ry="2" />
<text  x="152.76" y="367.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (15 samples, 0.35%)</title><rect x="538.5" y="709" width="4.1" height="15.0" fill="rgb(247,164,29)" rx="2" ry="2" />
<text  x="541.51" y="719.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="864.5" y="565" width="0.9" height="15.0" fill="rgb(248,219,18)" rx="2" ry="2" />
<text  x="867.53" y="575.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1174.3" y="613" width="0.3" height="15.0" fill="rgb(232,35,6)" rx="2" ry="2" />
<text  x="1177.32" y="623.5" ></text>
</g>
<g >
<title>_rl_init_terminal_io (1 samples, 0.02%)</title><rect x="10.3" y="677" width="0.3" height="15.0" fill="rgb(230,33,9)" rx="2" ry="2" />
<text  x="13.28" y="687.5" ></text>
</g>
<g >
<title>CopyBundleTails (3 samples, 0.07%)</title><rect x="137.9" y="725" width="0.9" height="15.0" fill="rgb(236,143,3)" rx="2" ry="2" />
<text  x="140.93" y="735.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (2 samples, 0.05%)</title><rect x="149.5" y="661" width="0.5" height="15.0" fill="rgb(248,162,31)" rx="2" ry="2" />
<text  x="152.49" y="671.5" ></text>
</g>
<g >
<title>NaClSysRead (1,391 samples, 32.43%)</title><rect x="151.7" y="773" width="382.7" height="15.0" fill="rgb(226,91,21)" rx="2" ry="2" />
<text  x="154.69" y="783.5" >NaClSysRead</text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.02%)</title><rect x="151.1" y="709" width="0.3" height="15.0" fill="rgb(208,228,20)" rx="2" ry="2" />
<text  x="154.14" y="719.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.02%)</title><rect x="1008.1" y="725" width="0.3" height="15.0" fill="rgb(247,26,51)" rx="2" ry="2" />
<text  x="1011.14" y="735.5" ></text>
</g>
<g >
<title>_Unwind_ForcedUnwind_Phase2 (1 samples, 0.02%)</title><rect x="149.2" y="677" width="0.3" height="15.0" fill="rgb(230,36,48)" rx="2" ry="2" />
<text  x="152.21" y="687.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1064.8" y="469" width="0.3" height="15.0" fill="rgb(229,96,9)" rx="2" ry="2" />
<text  x="1067.82" y="479.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.02%)</title><rect x="1179.3" y="693" width="0.2" height="15.0" fill="rgb(213,73,7)" rx="2" ry="2" />
<text  x="1182.27" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="34.8" y="373" width="0.2" height="15.0" fill="rgb(249,143,34)" rx="2" ry="2" />
<text  x="37.76" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="809.5" y="533" width="0.6" height="15.0" fill="rgb(232,99,14)" rx="2" ry="2" />
<text  x="812.51" y="543.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.02%)</title><rect x="449.1" y="517" width="0.3" height="15.0" fill="rgb(232,149,51)" rx="2" ry="2" />
<text  x="452.10" y="527.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1144.3" y="661" width="0.6" height="15.0" fill="rgb(210,5,12)" rx="2" ry="2" />
<text  x="1147.33" y="671.5" ></text>
</g>
<g >
<title>get_page_from_freelist (42 samples, 0.98%)</title><rect x="955.6" y="661" width="11.6" height="15.0" fill="rgb(232,49,18)" rx="2" ry="2" />
<text  x="958.60" y="671.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (47 samples, 1.10%)</title><rect x="70.3" y="805" width="12.9" height="15.0" fill="rgb(236,178,25)" rx="2" ry="2" />
<text  x="73.25" y="815.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="796.6" y="629" width="0.5" height="15.0" fill="rgb(241,35,2)" rx="2" ry="2" />
<text  x="799.57" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (20 samples, 0.47%)</title><rect x="646.6" y="597" width="5.5" height="15.0" fill="rgb(207,169,23)" rx="2" ry="2" />
<text  x="649.63" y="607.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (8 samples, 0.19%)</title><rect x="1177.1" y="693" width="2.2" height="15.0" fill="rgb(216,100,44)" rx="2" ry="2" />
<text  x="1180.07" y="703.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="1147.1" y="437" width="0.3" height="15.0" fill="rgb(250,107,51)" rx="2" ry="2" />
<text  x="1150.08" y="447.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampolineCall (1 samples, 0.02%)</title><rect x="1008.1" y="677" width="0.3" height="15.0" fill="rgb(213,90,1)" rx="2" ry="2" />
<text  x="1011.14" y="687.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.05%)</title><rect x="1141.6" y="773" width="0.5" height="15.0" fill="rgb(254,97,14)" rx="2" ry="2" />
<text  x="1144.58" y="783.5" ></text>
</g>
<g >
<title>mem_cgroup_iter (2 samples, 0.05%)</title><rect x="1057.1" y="725" width="0.6" height="15.0" fill="rgb(222,19,19)" rx="2" ry="2" />
<text  x="1060.12" y="735.5" ></text>
</g>
<g >
<title>[anon] (180 samples, 4.20%)</title><rect x="35.9" y="821" width="49.5" height="15.0" fill="rgb(219,54,7)" rx="2" ry="2" />
<text  x="38.86" y="831.5" >[anon]</text>
</g>
<g >
<title>follow_page_pte (1 samples, 0.02%)</title><rect x="983.1" y="565" width="0.3" height="15.0" fill="rgb(217,34,9)" rx="2" ry="2" />
<text  x="986.11" y="575.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.02%)</title><rect x="983.4" y="661" width="0.3" height="15.0" fill="rgb(236,133,14)" rx="2" ry="2" />
<text  x="986.38" y="671.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="852.4" y="581" width="0.3" height="15.0" fill="rgb(227,13,34)" rx="2" ry="2" />
<text  x="855.42" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (190 samples, 4.43%)</title><rect x="690.9" y="597" width="52.3" height="15.0" fill="rgb(207,9,5)" rx="2" ry="2" />
<text  x="693.93" y="607.5" >std::..</text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.05%)</title><rect x="10.3" y="805" width="0.5" height="15.0" fill="rgb(228,147,2)" rx="2" ry="2" />
<text  x="13.28" y="815.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (7 samples, 0.16%)</title><rect x="985.0" y="805" width="2.0" height="15.0" fill="rgb(222,219,22)" rx="2" ry="2" />
<text  x="988.03" y="815.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (2 samples, 0.05%)</title><rect x="1188.9" y="645" width="0.5" height="15.0" fill="rgb(209,13,43)" rx="2" ry="2" />
<text  x="1191.90" y="655.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (8 samples, 0.19%)</title><rect x="33.7" y="485" width="2.2" height="15.0" fill="rgb(244,66,11)" rx="2" ry="2" />
<text  x="36.66" y="495.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.02%)</title><rect x="1132.5" y="693" width="0.3" height="15.0" fill="rgb(231,101,42)" rx="2" ry="2" />
<text  x="1135.50" y="703.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (1 samples, 0.02%)</title><rect x="1056.6" y="693" width="0.2" height="15.0" fill="rgb(209,32,2)" rx="2" ry="2" />
<text  x="1059.57" y="703.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (28 samples, 0.65%)</title><rect x="852.7" y="645" width="7.7" height="15.0" fill="rgb(218,22,7)" rx="2" ry="2" />
<text  x="855.70" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.07%)</title><rect x="869.5" y="581" width="0.8" height="15.0" fill="rgb(252,191,41)" rx="2" ry="2" />
<text  x="872.48" y="591.5" ></text>
</g>
<g >
<title>schedule_idle (29 samples, 0.68%)</title><rect x="1179.5" y="693" width="8.0" height="15.0" fill="rgb(237,162,16)" rx="2" ry="2" />
<text  x="1182.55" y="703.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (6 samples, 0.14%)</title><rect x="1147.6" y="597" width="1.7" height="15.0" fill="rgb(221,105,37)" rx="2" ry="2" />
<text  x="1150.63" y="607.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.02%)</title><rect x="1029.3" y="725" width="0.3" height="15.0" fill="rgb(244,178,50)" rx="2" ry="2" />
<text  x="1032.33" y="735.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (88 samples, 2.05%)</title><rect x="772.4" y="629" width="24.2" height="15.0" fill="rgb(231,206,42)" rx="2" ry="2" />
<text  x="775.36" y="639.5" >r..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="139.9" y="661" width="0.2" height="15.0" fill="rgb(239,145,34)" rx="2" ry="2" />
<text  x="142.86" y="671.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.05%)</title><rect x="150.0" y="309" width="0.6" height="15.0" fill="rgb(239,98,54)" rx="2" ry="2" />
<text  x="153.04" y="319.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (1 samples, 0.02%)</title><rect x="1056.6" y="709" width="0.2" height="15.0" fill="rgb(232,193,33)" rx="2" ry="2" />
<text  x="1059.57" y="719.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="449.1" y="549" width="0.3" height="15.0" fill="rgb(246,123,26)" rx="2" ry="2" />
<text  x="452.10" y="559.5" ></text>
</g>
<g >
<title>list_lru_walk_one (19 samples, 0.44%)</title><rect x="1072.0" y="645" width="5.2" height="15.0" fill="rgb(215,121,11)" rx="2" ry="2" />
<text  x="1074.97" y="655.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="10.0" y="661" width="0.3" height="15.0" fill="rgb(242,50,16)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="665.3" y="549" width="0.3" height="15.0" fill="rgb(239,117,12)" rx="2" ry="2" />
<text  x="668.34" y="559.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="150.6" y="277" width="0.3" height="15.0" fill="rgb(248,54,39)" rx="2" ry="2" />
<text  x="153.59" y="287.5" ></text>
</g>
<g >
<title>__schedule (15 samples, 0.35%)</title><rect x="1136.6" y="741" width="4.2" height="15.0" fill="rgb(242,4,49)" rx="2" ry="2" />
<text  x="1139.63" y="751.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="975.1" y="613" width="0.3" height="15.0" fill="rgb(230,39,26)" rx="2" ry="2" />
<text  x="978.13" y="623.5" ></text>
</g>
<g >
<title>HandleStackContext (46 samples, 1.07%)</title><rect x="95.3" y="789" width="12.6" height="15.0" fill="rgb(241,144,3)" rx="2" ry="2" />
<text  x="98.29" y="799.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (123 samples, 2.87%)</title><rect x="1143.2" y="693" width="33.9" height="15.0" fill="rgb(206,102,43)" rx="2" ry="2" />
<text  x="1146.23" y="703.5" >cp..</text>
</g>
<g >
<title>update_curr (2 samples, 0.05%)</title><rect x="1078.3" y="693" width="0.6" height="15.0" fill="rgb(215,178,14)" rx="2" ry="2" />
<text  x="1081.30" y="703.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="149.8" y="533" width="0.2" height="15.0" fill="rgb(231,80,21)" rx="2" ry="2" />
<text  x="152.76" y="543.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (80 samples, 1.87%)</title><rect x="11.1" y="629" width="22.0" height="15.0" fill="rgb(238,172,35)" rx="2" ry="2" />
<text  x="14.10" y="639.5" >p..</text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="1007.9" y="709" width="0.2" height="15.0" fill="rgb(254,76,24)" rx="2" ry="2" />
<text  x="1010.87" y="719.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3 samples, 0.07%)</title><rect x="1080.2" y="661" width="0.9" height="15.0" fill="rgb(220,85,34)" rx="2" ry="2" />
<text  x="1083.23" y="671.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (1 samples, 0.02%)</title><rect x="755.6" y="597" width="0.3" height="15.0" fill="rgb(243,185,49)" rx="2" ry="2" />
<text  x="758.58" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::restore_metadata (1 samples, 0.02%)</title><rect x="1008.4" y="725" width="0.3" height="15.0" fill="rgb(254,190,38)" rx="2" ry="2" />
<text  x="1011.42" y="735.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (1 samples, 0.02%)</title><rect x="988.1" y="757" width="0.2" height="15.0" fill="rgb(226,39,49)" rx="2" ry="2" />
<text  x="991.06" y="767.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="1176.5" y="581" width="0.3" height="15.0" fill="rgb(235,22,37)" rx="2" ry="2" />
<text  x="1179.52" y="591.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.02%)</title><rect x="1064.8" y="533" width="0.3" height="15.0" fill="rgb(208,150,31)" rx="2" ry="2" />
<text  x="1067.82" y="543.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (4 samples, 0.09%)</title><rect x="533.0" y="613" width="1.1" height="15.0" fill="rgb(218,162,27)" rx="2" ry="2" />
<text  x="536.01" y="623.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (3 samples, 0.07%)</title><rect x="1176.2" y="677" width="0.9" height="15.0" fill="rgb(254,71,20)" rx="2" ry="2" />
<text  x="1179.24" y="687.5" ></text>
</g>
<g >
<title>sync_regs (17 samples, 0.40%)</title><rect x="977.6" y="805" width="4.7" height="15.0" fill="rgb(237,228,43)" rx="2" ry="2" />
<text  x="980.61" y="815.5" ></text>
</g>
<g >
<title>_Unwind_ForcedUnwind (1 samples, 0.02%)</title><rect x="149.2" y="693" width="0.3" height="15.0" fill="rgb(226,208,12)" rx="2" ry="2" />
<text  x="152.21" y="703.5" ></text>
</g>
<g >
<title>free_unref_page_commit (10 samples, 0.23%)</title><rect x="1026.3" y="549" width="2.8" height="15.0" fill="rgb(217,149,7)" rx="2" ry="2" />
<text  x="1029.30" y="559.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="149.8" y="325" width="0.2" height="15.0" fill="rgb(208,195,20)" rx="2" ry="2" />
<text  x="152.76" y="335.5" ></text>
</g>
<g >
<title>dispatcher (1,390 samples, 32.41%)</title><rect x="152.0" y="709" width="382.4" height="15.0" fill="rgb(217,29,49)" rx="2" ry="2" />
<text  x="154.96" y="719.5" >dispatcher</text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (7 samples, 0.16%)</title><rect x="817.8" y="565" width="1.9" height="15.0" fill="rgb(229,86,48)" rx="2" ry="2" />
<text  x="820.76" y="575.5" ></text>
</g>
<g >
<title>ion (9 samples, 0.21%)</title><rect x="33.4" y="693" width="2.5" height="15.0" fill="rgb(208,190,12)" rx="2" ry="2" />
<text  x="36.39" y="703.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (21 samples, 0.49%)</title><rect x="77.4" y="773" width="5.8" height="15.0" fill="rgb(252,134,18)" rx="2" ry="2" />
<text  x="80.40" y="783.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="151.4" y="693" width="0.3" height="15.0" fill="rgb(249,213,50)" rx="2" ry="2" />
<text  x="154.41" y="703.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.02%)</title><rect x="139.0" y="469" width="0.3" height="15.0" fill="rgb(234,28,34)" rx="2" ry="2" />
<text  x="142.03" y="479.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (2 samples, 0.05%)</title><rect x="151.1" y="789" width="0.6" height="15.0" fill="rgb(207,26,40)" rx="2" ry="2" />
<text  x="154.14" y="799.5" ></text>
</g>
<g >
<title>perf_mmap__push (9 samples, 0.21%)</title><rect x="33.4" y="741" width="2.5" height="15.0" fill="rgb(211,125,2)" rx="2" ry="2" />
<text  x="36.39" y="751.5" ></text>
</g>
<g >
<title>tick_nohz_restart (3 samples, 0.07%)</title><rect x="1188.6" y="677" width="0.8" height="15.0" fill="rgb(229,180,50)" rx="2" ry="2" />
<text  x="1191.62" y="687.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (8 samples, 0.19%)</title><rect x="166.5" y="629" width="2.2" height="15.0" fill="rgb(241,136,52)" rx="2" ry="2" />
<text  x="169.54" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="59.5" y="789" width="0.3" height="15.0" fill="rgb(239,84,51)" rx="2" ry="2" />
<text  x="62.52" y="799.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 0.05%)</title><rect x="1188.9" y="661" width="0.5" height="15.0" fill="rgb(239,133,0)" rx="2" ry="2" />
<text  x="1191.90" y="671.5" ></text>
</g>
<g >
<title>rl_bind_keyseq_if_unbound_in_map (1 samples, 0.02%)</title><rect x="10.3" y="645" width="0.3" height="15.0" fill="rgb(223,133,53)" rx="2" ry="2" />
<text  x="13.28" y="655.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1064.8" y="661" width="0.3" height="15.0" fill="rgb(216,190,32)" rx="2" ry="2" />
<text  x="1067.82" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.19%)</title><rect x="33.7" y="661" width="2.2" height="15.0" fill="rgb(246,132,54)" rx="2" ry="2" />
<text  x="36.66" y="671.5" ></text>
</g>
<g >
<title>NaClSimpleServiceAcceptConnection (1 samples, 0.02%)</title><rect x="1007.9" y="725" width="0.2" height="15.0" fill="rgb(227,138,23)" rx="2" ry="2" />
<text  x="1010.87" y="735.5" ></text>
</g>
<g >
<title>lru_cache_add (13 samples, 0.30%)</title><rect x="968.5" y="677" width="3.6" height="15.0" fill="rgb(208,48,11)" rx="2" ry="2" />
<text  x="971.53" y="687.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (86 samples, 2.01%)</title><rect x="313.2" y="597" width="23.6" height="15.0" fill="rgb(205,119,13)" rx="2" ry="2" />
<text  x="316.18" y="607.5" >c..</text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.02%)</title><rect x="149.8" y="469" width="0.2" height="15.0" fill="rgb(224,126,53)" rx="2" ry="2" />
<text  x="152.76" y="479.5" ></text>
</g>
<g >
<title>__free_one_page (6 samples, 0.14%)</title><rect x="1027.4" y="517" width="1.7" height="15.0" fill="rgb(254,37,44)" rx="2" ry="2" />
<text  x="1030.40" y="527.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="10.6" y="581" width="0.2" height="15.0" fill="rgb(240,9,49)" rx="2" ry="2" />
<text  x="13.55" y="591.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2,953 samples, 68.85%)</title><rect x="88.4" y="805" width="812.4" height="15.0" fill="rgb(250,174,39)" rx="2" ry="2" />
<text  x="91.41" y="815.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="822.2" y="549" width="0.5" height="15.0" fill="rgb(218,104,20)" rx="2" ry="2" />
<text  x="825.16" y="559.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.02%)</title><rect x="983.4" y="645" width="0.3" height="15.0" fill="rgb(249,22,24)" rx="2" ry="2" />
<text  x="986.38" y="655.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (10 samples, 0.23%)</title><rect x="1026.3" y="533" width="2.8" height="15.0" fill="rgb(210,80,33)" rx="2" ry="2" />
<text  x="1029.30" y="543.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (19 samples, 0.44%)</title><rect x="824.1" y="517" width="5.2" height="15.0" fill="rgb(225,123,50)" rx="2" ry="2" />
<text  x="827.09" y="527.5" ></text>
</g>
<g >
<title>cpuidle_select (8 samples, 0.19%)</title><rect x="1133.6" y="741" width="2.2" height="15.0" fill="rgb(223,29,48)" rx="2" ry="2" />
<text  x="1136.60" y="751.5" ></text>
</g>
<g >
<title>handle_pte_fault (87 samples, 2.03%)</title><rect x="951.5" y="725" width="23.9" height="15.0" fill="rgb(218,214,1)" rx="2" ry="2" />
<text  x="954.47" y="735.5" >h..</text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.05%)</title><rect x="1187.0" y="661" width="0.5" height="15.0" fill="rgb(216,101,26)" rx="2" ry="2" />
<text  x="1189.97" y="671.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="150.3" y="181" width="0.3" height="15.0" fill="rgb(248,123,24)" rx="2" ry="2" />
<text  x="153.31" y="191.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (27 samples, 0.63%)</title><rect x="853.0" y="613" width="7.4" height="15.0" fill="rgb(213,34,20)" rx="2" ry="2" />
<text  x="855.98" y="623.5" ></text>
</g>
<g >
<title>serde_json::de::from_trait (1 samples, 0.02%)</title><rect x="1008.4" y="693" width="0.3" height="15.0" fill="rgb(214,104,21)" rx="2" ry="2" />
<text  x="1011.42" y="703.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (4 samples, 0.09%)</title><rect x="898.9" y="757" width="1.1" height="15.0" fill="rgb(213,169,49)" rx="2" ry="2" />
<text  x="901.92" y="767.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (60 samples, 1.40%)</title><rect x="168.7" y="629" width="16.6" height="15.0" fill="rgb(234,220,26)" rx="2" ry="2" />
<text  x="171.75" y="639.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1080.2" y="629" width="0.3" height="15.0" fill="rgb(237,174,54)" rx="2" ry="2" />
<text  x="1083.23" y="639.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.02%)</title><rect x="973.2" y="661" width="0.3" height="15.0" fill="rgb(212,10,3)" rx="2" ry="2" />
<text  x="976.20" y="671.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="1029.1" y="565" width="0.2" height="15.0" fill="rgb(221,86,35)" rx="2" ry="2" />
<text  x="1032.05" y="575.5" ></text>
</g>
<g >
<title>xas_store (2 samples, 0.05%)</title><rect x="1063.7" y="629" width="0.6" height="15.0" fill="rgb(253,104,53)" rx="2" ry="2" />
<text  x="1066.72" y="639.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.02%)</title><rect x="150.3" y="133" width="0.3" height="15.0" fill="rgb(244,124,47)" rx="2" ry="2" />
<text  x="153.31" y="143.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.09%)</title><rect x="150.0" y="581" width="1.1" height="15.0" fill="rgb(226,155,11)" rx="2" ry="2" />
<text  x="153.04" y="591.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="150.0" y="245" width="0.6" height="15.0" fill="rgb(251,52,43)" rx="2" ry="2" />
<text  x="153.04" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (44 samples, 1.03%)</title><rect x="819.7" y="613" width="12.1" height="15.0" fill="rgb(215,84,23)" rx="2" ry="2" />
<text  x="822.69" y="623.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="953.7" y="629" width="0.2" height="15.0" fill="rgb(211,14,29)" rx="2" ry="2" />
<text  x="956.67" y="639.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="151.4" y="661" width="0.3" height="15.0" fill="rgb(220,63,34)" rx="2" ry="2" />
<text  x="154.41" y="671.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (9 samples, 0.21%)</title><rect x="866.2" y="629" width="2.5" height="15.0" fill="rgb(236,26,12)" rx="2" ry="2" />
<text  x="869.18" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize (1 samples, 0.02%)</title><rect x="1008.4" y="677" width="0.3" height="15.0" fill="rgb(250,215,24)" rx="2" ry="2" />
<text  x="1011.42" y="687.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.05%)</title><rect x="150.0" y="261" width="0.6" height="15.0" fill="rgb(242,213,44)" rx="2" ry="2" />
<text  x="153.04" y="271.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.05%)</title><rect x="1139.4" y="645" width="0.5" height="15.0" fill="rgb(221,103,14)" rx="2" ry="2" />
<text  x="1142.38" y="655.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="1184.8" y="613" width="0.2" height="15.0" fill="rgb(237,201,12)" rx="2" ry="2" />
<text  x="1187.77" y="623.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.02%)</title><rect x="151.1" y="725" width="0.3" height="15.0" fill="rgb(226,11,37)" rx="2" ry="2" />
<text  x="154.14" y="735.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1077.5" y="645" width="0.3" height="15.0" fill="rgb(233,15,16)" rx="2" ry="2" />
<text  x="1080.47" y="655.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.14%)</title><rect x="809.0" y="549" width="1.6" height="15.0" fill="rgb(247,99,35)" rx="2" ry="2" />
<text  x="811.96" y="559.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.02%)</title><rect x="1134.2" y="709" width="0.2" height="15.0" fill="rgb(242,198,36)" rx="2" ry="2" />
<text  x="1137.15" y="719.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.02%)</title><rect x="149.8" y="485" width="0.2" height="15.0" fill="rgb(232,14,44)" rx="2" ry="2" />
<text  x="152.76" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1080.0" y="661" width="0.2" height="15.0" fill="rgb(240,220,31)" rx="2" ry="2" />
<text  x="1082.95" y="671.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.77%)</title><rect x="643.1" y="645" width="9.0" height="15.0" fill="rgb(253,166,40)" rx="2" ry="2" />
<text  x="646.06" y="655.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.02%)</title><rect x="1029.3" y="501" width="0.3" height="15.0" fill="rgb(211,207,37)" rx="2" ry="2" />
<text  x="1032.33" y="511.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (2 samples, 0.05%)</title><rect x="150.0" y="293" width="0.6" height="15.0" fill="rgb(232,79,21)" rx="2" ry="2" />
<text  x="153.04" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (15 samples, 0.35%)</title><rect x="584.2" y="613" width="4.1" height="15.0" fill="rgb(205,75,29)" rx="2" ry="2" />
<text  x="587.18" y="623.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.02%)</title><rect x="1136.1" y="741" width="0.3" height="15.0" fill="rgb(249,37,53)" rx="2" ry="2" />
<text  x="1139.08" y="751.5" ></text>
</g>
<g >
<title>__call_rcu (1 samples, 0.02%)</title><rect x="1068.7" y="581" width="0.2" height="15.0" fill="rgb(254,121,40)" rx="2" ry="2" />
<text  x="1071.67" y="591.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1077.8" y="773" width="0.2" height="15.0" fill="rgb(250,223,20)" rx="2" ry="2" />
<text  x="1080.75" y="783.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (11 samples, 0.26%)</title><rect x="67.2" y="773" width="3.1" height="15.0" fill="rgb(247,156,39)" rx="2" ry="2" />
<text  x="70.23" y="783.5" ></text>
</g>
<g >
<title>free_buffer_head (3 samples, 0.07%)</title><rect x="1067.0" y="613" width="0.8" height="15.0" fill="rgb(238,31,38)" rx="2" ry="2" />
<text  x="1070.02" y="623.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (1 samples, 0.02%)</title><rect x="1186.7" y="661" width="0.3" height="15.0" fill="rgb(230,182,19)" rx="2" ry="2" />
<text  x="1189.70" y="671.5" ></text>
</g>
<g >
<title>dquot_drop (2 samples, 0.05%)</title><rect x="1070.9" y="597" width="0.5" height="15.0" fill="rgb(239,171,37)" rx="2" ry="2" />
<text  x="1073.87" y="607.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="1008.4" y="389" width="0.3" height="15.0" fill="rgb(246,33,43)" rx="2" ry="2" />
<text  x="1011.42" y="399.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (97 samples, 2.26%)</title><rect x="745.7" y="629" width="26.7" height="15.0" fill="rgb(220,136,15)" rx="2" ry="2" />
<text  x="748.68" y="639.5" >r..</text>
</g>
<g >
<title>llist_add_batch (2 samples, 0.05%)</title><rect x="1185.9" y="581" width="0.5" height="15.0" fill="rgb(236,173,23)" rx="2" ry="2" />
<text  x="1188.87" y="591.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="1055.7" y="693" width="0.3" height="15.0" fill="rgb(251,85,28)" rx="2" ry="2" />
<text  x="1058.74" y="703.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (190 samples, 4.43%)</title><rect x="690.9" y="613" width="52.3" height="15.0" fill="rgb(234,181,12)" rx="2" ry="2" />
<text  x="693.93" y="623.5" >std::..</text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.05%)</title><rect x="1073.3" y="533" width="0.6" height="15.0" fill="rgb(215,200,36)" rx="2" ry="2" />
<text  x="1076.35" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (9 samples, 0.21%)</title><rect x="41.9" y="805" width="2.5" height="15.0" fill="rgb(218,28,47)" rx="2" ry="2" />
<text  x="44.91" y="815.5" ></text>
</g>
<g >
<title>new_heap (1 samples, 0.02%)</title><rect x="1007.9" y="661" width="0.2" height="15.0" fill="rgb(233,109,35)" rx="2" ry="2" />
<text  x="1010.87" y="671.5" ></text>
</g>
<g >
<title>isolate_lru_pages (4 samples, 0.09%)</title><rect x="1057.9" y="693" width="1.1" height="15.0" fill="rgb(208,212,39)" rx="2" ry="2" />
<text  x="1060.94" y="703.5" ></text>
</g>
<g >
<title>xas_create (2 samples, 0.05%)</title><rect x="1063.7" y="613" width="0.6" height="15.0" fill="rgb(235,15,35)" rx="2" ry="2" />
<text  x="1066.72" y="623.5" ></text>
</g>
<g >
<title>generic_exec_single (70 samples, 1.63%)</title><rect x="13.9" y="565" width="19.2" height="15.0" fill="rgb(205,211,34)" rx="2" ry="2" />
<text  x="16.85" y="575.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="1055.7" y="789" width="0.3" height="15.0" fill="rgb(215,71,30)" rx="2" ry="2" />
<text  x="1058.74" y="799.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (556 samples, 12.96%)</title><rect x="185.3" y="645" width="152.9" height="15.0" fill="rgb(224,187,38)" rx="2" ry="2" />
<text  x="188.25" y="655.5" >ringbuf::consumer::..</text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.02%)</title><rect x="983.4" y="789" width="0.3" height="15.0" fill="rgb(205,70,35)" rx="2" ry="2" />
<text  x="986.38" y="799.5" ></text>
</g>
<g >
<title>kick_ilb (6 samples, 0.14%)</title><rect x="1138.8" y="677" width="1.7" height="15.0" fill="rgb(237,103,14)" rx="2" ry="2" />
<text  x="1141.83" y="687.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (27 samples, 0.63%)</title><rect x="808.7" y="597" width="7.4" height="15.0" fill="rgb(213,136,25)" rx="2" ry="2" />
<text  x="811.68" y="607.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (4 samples, 0.09%)</title><rect x="1139.4" y="661" width="1.1" height="15.0" fill="rgb(218,26,3)" rx="2" ry="2" />
<text  x="1142.38" y="671.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.02%)</title><rect x="1136.4" y="741" width="0.2" height="15.0" fill="rgb(244,141,53)" rx="2" ry="2" />
<text  x="1139.35" y="751.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect x="1008.4" y="517" width="0.3" height="15.0" fill="rgb(250,168,29)" rx="2" ry="2" />
<text  x="1011.42" y="527.5" ></text>
</g>
<g >
<title>__update_blocked_fair (2 samples, 0.05%)</title><rect x="1082.7" y="581" width="0.6" height="15.0" fill="rgb(229,18,15)" rx="2" ry="2" />
<text  x="1085.70" y="591.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.02%)</title><rect x="1135.8" y="709" width="0.3" height="15.0" fill="rgb(218,52,22)" rx="2" ry="2" />
<text  x="1138.80" y="719.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="1025.5" y="565" width="0.3" height="15.0" fill="rgb(226,217,35)" rx="2" ry="2" />
<text  x="1028.48" y="575.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="976.0" y="757" width="0.2" height="15.0" fill="rgb(233,181,45)" rx="2" ry="2" />
<text  x="978.95" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (2 samples, 0.05%)</title><rect x="982.8" y="725" width="0.6" height="15.0" fill="rgb(244,8,44)" rx="2" ry="2" />
<text  x="985.83" y="735.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.05%)</title><rect x="1141.0" y="757" width="0.6" height="15.0" fill="rgb(233,12,47)" rx="2" ry="2" />
<text  x="1144.03" y="767.5" ></text>
</g>
<g >
<title>get_typical_interval (2 samples, 0.05%)</title><rect x="1134.4" y="709" width="0.6" height="15.0" fill="rgb(221,129,50)" rx="2" ry="2" />
<text  x="1137.43" y="719.5" ></text>
</g>
<g >
<title>CompareAndSwap (1 samples, 0.02%)</title><rect x="982.3" y="805" width="0.3" height="15.0" fill="rgb(209,139,38)" rx="2" ry="2" />
<text  x="985.28" y="815.5" ></text>
</g>
<g >
<title>sel_ldr (3,612 samples, 84.22%)</title><rect x="35.9" y="837" width="993.7" height="15.0" fill="rgb(218,147,36)" rx="2" ry="2" />
<text  x="38.86" y="847.5" >sel_ldr</text>
</g>
<g >
<title>ext4_da_write_end (2 samples, 0.05%)</title><rect x="34.5" y="453" width="0.5" height="15.0" fill="rgb(223,66,40)" rx="2" ry="2" />
<text  x="37.49" y="463.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1133.0" y="693" width="0.3" height="15.0" fill="rgb(220,190,50)" rx="2" ry="2" />
<text  x="1136.05" y="703.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampolineCall (1 samples, 0.02%)</title><rect x="151.1" y="661" width="0.3" height="15.0" fill="rgb(222,157,5)" rx="2" ry="2" />
<text  x="154.14" y="671.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (21 samples, 0.49%)</title><rect x="77.4" y="789" width="5.8" height="15.0" fill="rgb(209,185,21)" rx="2" ry="2" />
<text  x="80.40" y="799.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.02%)</title><rect x="971.8" y="629" width="0.3" height="15.0" fill="rgb(250,108,21)" rx="2" ry="2" />
<text  x="974.83" y="639.5" ></text>
</g>
<g >
<title>lind_write (2 samples, 0.05%)</title><rect x="881.0" y="741" width="0.6" height="15.0" fill="rgb(230,215,29)" rx="2" ry="2" />
<text  x="884.04" y="751.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (1 samples, 0.02%)</title><rect x="988.1" y="773" width="0.2" height="15.0" fill="rgb(240,183,13)" rx="2" ry="2" />
<text  x="991.06" y="783.5" ></text>
</g>
<g >
<title>sock_recvmsg (2 samples, 0.05%)</title><rect x="1056.3" y="725" width="0.5" height="15.0" fill="rgb(245,13,35)" rx="2" ry="2" />
<text  x="1059.29" y="735.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.05%)</title><rect x="1078.3" y="773" width="0.6" height="15.0" fill="rgb(239,169,1)" rx="2" ry="2" />
<text  x="1081.30" y="783.5" ></text>
</g>
<g >
<title>exc_page_fault (104 samples, 2.42%)</title><rect x="948.4" y="789" width="28.7" height="15.0" fill="rgb(242,151,26)" rx="2" ry="2" />
<text  x="951.44" y="799.5" >ex..</text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.05%)</title><rect x="954.2" y="645" width="0.6" height="15.0" fill="rgb(252,182,7)" rx="2" ry="2" />
<text  x="957.22" y="655.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.02%)</title><rect x="1077.8" y="741" width="0.2" height="15.0" fill="rgb(223,74,54)" rx="2" ry="2" />
<text  x="1080.75" y="751.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 1.61%)</title><rect x="665.3" y="645" width="19.0" height="15.0" fill="rgb(254,133,14)" rx="2" ry="2" />
<text  x="668.34" y="655.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.02%)</title><rect x="139.3" y="661" width="0.3" height="15.0" fill="rgb(235,13,40)" rx="2" ry="2" />
<text  x="142.31" y="671.5" ></text>
</g>
<g >
<title>__GI___mprotect (1 samples, 0.02%)</title><rect x="139.6" y="677" width="0.3" height="15.0" fill="rgb(254,91,35)" rx="2" ry="2" />
<text  x="142.58" y="687.5" ></text>
</g>
<g >
<title>poll_idle (41 samples, 0.96%)</title><rect x="1157.8" y="645" width="11.3" height="15.0" fill="rgb(213,74,7)" rx="2" ry="2" />
<text  x="1160.81" y="655.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.05%)</title><rect x="1064.3" y="597" width="0.5" height="15.0" fill="rgb(253,159,16)" rx="2" ry="2" />
<text  x="1067.27" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (36 samples, 0.84%)</title><rect x="1019.7" y="805" width="9.9" height="15.0" fill="rgb(243,137,49)" rx="2" ry="2" />
<text  x="1022.70" y="815.5" ></text>
</g>
<g >
<title>DynArrayGet (4 samples, 0.09%)</title><rect x="895.3" y="741" width="1.1" height="15.0" fill="rgb(209,211,30)" rx="2" ry="2" />
<text  x="898.34" y="751.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.47%)</title><rect x="810.6" y="549" width="5.5" height="15.0" fill="rgb(238,11,45)" rx="2" ry="2" />
<text  x="813.61" y="559.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (93 samples, 2.17%)</title><rect x="1144.9" y="661" width="25.6" height="15.0" fill="rgb(210,70,45)" rx="2" ry="2" />
<text  x="1147.88" y="671.5" >c..</text>
</g>
<g >
<title>ext4_get_dquots (1 samples, 0.02%)</title><rect x="1071.4" y="597" width="0.3" height="15.0" fill="rgb(226,221,5)" rx="2" ry="2" />
<text  x="1074.42" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (6 samples, 0.14%)</title><rect x="149.5" y="725" width="1.6" height="15.0" fill="rgb(253,167,39)" rx="2" ry="2" />
<text  x="152.49" y="735.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="149.8" y="309" width="0.2" height="15.0" fill="rgb(205,118,27)" rx="2" ry="2" />
<text  x="152.76" y="319.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="150.6" y="213" width="0.3" height="15.0" fill="rgb(210,108,39)" rx="2" ry="2" />
<text  x="153.59" y="223.5" ></text>
</g>
<g >
<title>menu_select (20 samples, 0.47%)</title><rect x="1170.7" y="661" width="5.5" height="15.0" fill="rgb(214,131,44)" rx="2" ry="2" />
<text  x="1173.74" y="671.5" ></text>
</g>
<g >
<title>event_function_call (75 samples, 1.75%)</title><rect x="12.5" y="597" width="20.6" height="15.0" fill="rgb(250,55,28)" rx="2" ry="2" />
<text  x="15.48" y="607.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (5 samples, 0.12%)</title><rect x="138.8" y="741" width="1.3" height="15.0" fill="rgb(216,224,29)" rx="2" ry="2" />
<text  x="141.76" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="150.3" y="69" width="0.3" height="15.0" fill="rgb(207,114,31)" rx="2" ry="2" />
<text  x="153.31" y="79.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (1 samples, 0.02%)</title><rect x="1056.0" y="725" width="0.3" height="15.0" fill="rgb(239,200,13)" rx="2" ry="2" />
<text  x="1059.02" y="735.5" ></text>
</g>
<g >
<title>shrink_active_list (4 samples, 0.09%)</title><rect x="1057.9" y="709" width="1.1" height="15.0" fill="rgb(238,152,37)" rx="2" ry="2" />
<text  x="1060.94" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.09%)</title><rect x="1056.0" y="821" width="1.1" height="15.0" fill="rgb(237,157,7)" rx="2" ry="2" />
<text  x="1059.02" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="952.6" y="709" width="0.2" height="15.0" fill="rgb(245,82,6)" rx="2" ry="2" />
<text  x="955.57" y="719.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="34.2" y="437" width="0.3" height="15.0" fill="rgb(229,155,2)" rx="2" ry="2" />
<text  x="37.21" y="447.5" ></text>
</g>
<g >
<title>dispatcher (4 samples, 0.09%)</title><rect x="860.4" y="661" width="1.1" height="15.0" fill="rgb(221,9,35)" rx="2" ry="2" />
<text  x="863.40" y="671.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1080.8" y="597" width="0.3" height="15.0" fill="rgb(226,204,52)" rx="2" ry="2" />
<text  x="1083.78" y="607.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1073.3" y="341" width="0.3" height="15.0" fill="rgb(211,187,50)" rx="2" ry="2" />
<text  x="1076.35" y="351.5" ></text>
</g>
<g >
<title>uw_frame_state_for (1 samples, 0.02%)</title><rect x="149.2" y="661" width="0.3" height="15.0" fill="rgb(212,35,53)" rx="2" ry="2" />
<text  x="152.21" y="671.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1070.0" y="533" width="0.3" height="15.0" fill="rgb(233,72,7)" rx="2" ry="2" />
<text  x="1073.05" y="543.5" ></text>
</g>
<g >
<title>__free_one_page (1 samples, 0.02%)</title><rect x="1029.3" y="453" width="0.3" height="15.0" fill="rgb(219,159,7)" rx="2" ry="2" />
<text  x="1032.33" y="463.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1187.8" y="661" width="0.3" height="15.0" fill="rgb(226,34,5)" rx="2" ry="2" />
<text  x="1190.80" y="671.5" ></text>
</g>
<g >
<title>__pthread_exit (1 samples, 0.02%)</title><rect x="149.2" y="725" width="0.3" height="15.0" fill="rgb(235,1,18)" rx="2" ry="2" />
<text  x="152.21" y="735.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (10 samples, 0.23%)</title><rect x="1081.1" y="645" width="2.7" height="15.0" fill="rgb(239,168,41)" rx="2" ry="2" />
<text  x="1084.05" y="655.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="150.0" y="181" width="0.3" height="15.0" fill="rgb(242,79,9)" rx="2" ry="2" />
<text  x="153.04" y="191.5" ></text>
</g>
<g >
<title>lind_write (1,175 samples, 27.40%)</title><rect x="557.8" y="725" width="323.2" height="15.0" fill="rgb(214,115,15)" rx="2" ry="2" />
<text  x="560.77" y="735.5" >lind_write</text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="139.6" y="613" width="0.3" height="15.0" fill="rgb(245,179,22)" rx="2" ry="2" />
<text  x="142.58" y="623.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.07%)</title><rect x="35.0" y="437" width="0.9" height="15.0" fill="rgb(211,77,37)" rx="2" ry="2" />
<text  x="38.04" y="447.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1 samples, 0.02%)</title><rect x="87.3" y="805" width="0.3" height="15.0" fill="rgb(214,42,46)" rx="2" ry="2" />
<text  x="90.31" y="815.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (5 samples, 0.12%)</title><rect x="829.3" y="485" width="1.4" height="15.0" fill="rgb(209,159,5)" rx="2" ry="2" />
<text  x="832.31" y="495.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.05%)</title><rect x="10.3" y="741" width="0.5" height="15.0" fill="rgb(219,2,51)" rx="2" ry="2" />
<text  x="13.28" y="751.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.02%)</title><rect x="1077.5" y="757" width="0.3" height="15.0" fill="rgb(223,77,38)" rx="2" ry="2" />
<text  x="1080.47" y="767.5" ></text>
</g>
<g >
<title>list_lru_walk_one (1 samples, 0.02%)</title><rect x="1068.1" y="645" width="0.3" height="15.0" fill="rgb(240,14,39)" rx="2" ry="2" />
<text  x="1071.12" y="655.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="10.6" y="517" width="0.2" height="15.0" fill="rgb(253,56,16)" rx="2" ry="2" />
<text  x="13.55" y="527.5" ></text>
</g>
<g >
<title>poll_idle (25 samples, 0.58%)</title><rect x="1125.3" y="709" width="6.9" height="15.0" fill="rgb(210,81,3)" rx="2" ry="2" />
<text  x="1128.35" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_write (8 samples, 0.19%)</title><rect x="33.7" y="629" width="2.2" height="15.0" fill="rgb(208,166,36)" rx="2" ry="2" />
<text  x="36.66" y="639.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (3 samples, 0.07%)</title><rect x="1185.6" y="597" width="0.8" height="15.0" fill="rgb(234,45,24)" rx="2" ry="2" />
<text  x="1188.60" y="607.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (7 samples, 0.16%)</title><rect x="1182.8" y="613" width="2.0" height="15.0" fill="rgb(250,113,46)" rx="2" ry="2" />
<text  x="1185.85" y="623.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="10.0" y="757" width="0.3" height="15.0" fill="rgb(210,6,22)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (2 samples, 0.05%)</title><rect x="983.9" y="789" width="0.6" height="15.0" fill="rgb(212,153,17)" rx="2" ry="2" />
<text  x="986.93" y="799.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (1 samples, 0.02%)</title><rect x="150.9" y="277" width="0.2" height="15.0" fill="rgb(251,183,1)" rx="2" ry="2" />
<text  x="153.86" y="287.5" ></text>
</g>
<g >
<title>invalidate_mapping_pages (18 samples, 0.42%)</title><rect x="1072.2" y="597" width="5.0" height="15.0" fill="rgb(234,1,32)" rx="2" ry="2" />
<text  x="1075.25" y="607.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.02%)</title><rect x="139.0" y="517" width="0.3" height="15.0" fill="rgb(227,83,54)" rx="2" ry="2" />
<text  x="142.03" y="527.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="665.3" y="597" width="0.3" height="15.0" fill="rgb(237,68,16)" rx="2" ry="2" />
<text  x="668.34" y="607.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="1147.1" y="469" width="0.3" height="15.0" fill="rgb(244,41,22)" rx="2" ry="2" />
<text  x="1150.08" y="479.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (1 samples, 0.02%)</title><rect x="1068.9" y="565" width="0.3" height="15.0" fill="rgb(207,49,0)" rx="2" ry="2" />
<text  x="1071.95" y="575.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (8 samples, 0.19%)</title><rect x="33.7" y="517" width="2.2" height="15.0" fill="rgb(253,112,13)" rx="2" ry="2" />
<text  x="36.66" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (95 samples, 2.21%)</title><rect x="591.6" y="645" width="26.1" height="15.0" fill="rgb(231,112,3)" rx="2" ry="2" />
<text  x="594.61" y="655.5" >c..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="10.6" y="549" width="0.2" height="15.0" fill="rgb(247,19,8)" rx="2" ry="2" />
<text  x="13.55" y="559.5" ></text>
</g>
<g >
<title>load_script (1 samples, 0.02%)</title><rect x="10.8" y="597" width="0.3" height="15.0" fill="rgb(224,210,35)" rx="2" ry="2" />
<text  x="13.83" y="607.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="1180.1" y="629" width="0.3" height="15.0" fill="rgb(244,66,54)" rx="2" ry="2" />
<text  x="1183.10" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (9 samples, 0.21%)</title><rect x="794.1" y="597" width="2.5" height="15.0" fill="rgb(240,145,42)" rx="2" ry="2" />
<text  x="797.10" y="607.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="139.0" y="437" width="0.3" height="15.0" fill="rgb(238,29,40)" rx="2" ry="2" />
<text  x="142.03" y="447.5" ></text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.05%)</title><rect x="796.6" y="597" width="0.5" height="15.0" fill="rgb(240,215,25)" rx="2" ry="2" />
<text  x="799.57" y="607.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="976.8" y="741" width="0.3" height="15.0" fill="rgb(225,166,13)" rx="2" ry="2" />
<text  x="979.78" y="751.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.02%)</title><rect x="1056.8" y="757" width="0.3" height="15.0" fill="rgb(247,181,44)" rx="2" ry="2" />
<text  x="1059.84" y="767.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (14 samples, 0.33%)</title><rect x="876.9" y="629" width="3.9" height="15.0" fill="rgb(213,225,42)" rx="2" ry="2" />
<text  x="879.91" y="639.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.02%)</title><rect x="1064.8" y="517" width="0.3" height="15.0" fill="rgb(231,58,38)" rx="2" ry="2" />
<text  x="1067.82" y="527.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.02%)</title><rect x="1056.0" y="773" width="0.3" height="15.0" fill="rgb(217,163,53)" rx="2" ry="2" />
<text  x="1059.02" y="783.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="889.6" y="741" width="0.2" height="15.0" fill="rgb(245,225,32)" rx="2" ry="2" />
<text  x="892.57" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="983.4" y="581" width="0.3" height="15.0" fill="rgb(217,13,42)" rx="2" ry="2" />
<text  x="986.38" y="591.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (88 samples, 2.05%)</title><rect x="772.4" y="645" width="24.2" height="15.0" fill="rgb(238,192,26)" rx="2" ry="2" />
<text  x="775.36" y="655.5" >r..</text>
</g>
<g >
<title>cpuidle_enter (195 samples, 4.55%)</title><rect x="1079.7" y="741" width="53.6" height="15.0" fill="rgb(242,15,35)" rx="2" ry="2" />
<text  x="1082.68" y="751.5" >cpuid..</text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.07%)</title><rect x="822.7" y="581" width="0.8" height="15.0" fill="rgb(220,228,9)" rx="2" ry="2" />
<text  x="825.71" y="591.5" ></text>
</g>
<g >
<title>__libc_write (9 samples, 0.21%)</title><rect x="33.4" y="677" width="2.5" height="15.0" fill="rgb(235,167,46)" rx="2" ry="2" />
<text  x="36.39" y="687.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="1064.8" y="613" width="0.3" height="15.0" fill="rgb(212,193,21)" rx="2" ry="2" />
<text  x="1067.82" y="623.5" ></text>
</g>
<g >
<title>workingset_eviction (2 samples, 0.05%)</title><rect x="1065.1" y="661" width="0.5" height="15.0" fill="rgb(246,108,3)" rx="2" ry="2" />
<text  x="1068.09" y="671.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (3 samples, 0.07%)</title><rect x="107.1" y="773" width="0.8" height="15.0" fill="rgb(242,12,25)" rx="2" ry="2" />
<text  x="110.12" y="783.5" ></text>
</g>
<g >
<title>update_blocked_averages (4 samples, 0.09%)</title><rect x="1082.7" y="597" width="1.1" height="15.0" fill="rgb(233,125,39)" rx="2" ry="2" />
<text  x="1085.70" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (36 samples, 0.84%)</title><rect x="860.4" y="677" width="9.9" height="15.0" fill="rgb(229,67,40)" rx="2" ry="2" />
<text  x="863.40" y="687.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (33 samples, 0.77%)</title><rect x="643.1" y="629" width="9.0" height="15.0" fill="rgb(252,71,17)" rx="2" ry="2" />
<text  x="646.06" y="639.5" ></text>
</g>
<g >
<title>evict (2 samples, 0.05%)</title><rect x="1069.5" y="549" width="0.5" height="15.0" fill="rgb(245,89,54)" rx="2" ry="2" />
<text  x="1072.50" y="559.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.02%)</title><rect x="1146.3" y="485" width="0.2" height="15.0" fill="rgb(254,77,32)" rx="2" ry="2" />
<text  x="1149.26" y="495.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="1188.6" y="613" width="0.3" height="15.0" fill="rgb(237,67,43)" rx="2" ry="2" />
<text  x="1191.62" y="623.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (1 samples, 0.02%)</title><rect x="150.0" y="85" width="0.3" height="15.0" fill="rgb(205,91,11)" rx="2" ry="2" />
<text  x="153.04" y="95.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (4 samples, 0.09%)</title><rect x="831.8" y="645" width="1.1" height="15.0" fill="rgb(206,37,52)" rx="2" ry="2" />
<text  x="834.79" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::seek (1 samples, 0.02%)</title><rect x="149.5" y="629" width="0.3" height="15.0" fill="rgb(231,221,29)" rx="2" ry="2" />
<text  x="152.49" y="639.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="1180.9" y="549" width="0.3" height="15.0" fill="rgb(211,98,40)" rx="2" ry="2" />
<text  x="1183.92" y="559.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.02%)</title><rect x="1067.8" y="645" width="0.3" height="15.0" fill="rgb(206,70,28)" rx="2" ry="2" />
<text  x="1070.85" y="655.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (4 samples, 0.09%)</title><rect x="754.2" y="597" width="1.1" height="15.0" fill="rgb(211,135,17)" rx="2" ry="2" />
<text  x="757.21" y="607.5" ></text>
</g>
<g >
<title>__pte_alloc (1 samples, 0.02%)</title><rect x="953.7" y="693" width="0.2" height="15.0" fill="rgb(214,110,44)" rx="2" ry="2" />
<text  x="956.67" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (1 samples, 0.02%)</title><rect x="149.8" y="613" width="0.2" height="15.0" fill="rgb(218,30,19)" rx="2" ry="2" />
<text  x="152.76" y="623.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (3 samples, 0.07%)</title><rect x="1176.2" y="645" width="0.9" height="15.0" fill="rgb(227,225,6)" rx="2" ry="2" />
<text  x="1179.24" y="655.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="151.4" y="597" width="0.3" height="15.0" fill="rgb(231,209,27)" rx="2" ry="2" />
<text  x="154.41" y="607.5" ></text>
</g>
<g >
<title>refresh_cpu_vm_stats (1 samples, 0.02%)</title><rect x="1135.8" y="693" width="0.3" height="15.0" fill="rgb(241,1,7)" rx="2" ry="2" />
<text  x="1138.80" y="703.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.02%)</title><rect x="1080.2" y="533" width="0.3" height="15.0" fill="rgb(213,108,50)" rx="2" ry="2" />
<text  x="1083.23" y="543.5" ></text>
</g>
<g >
<title>try_to_release_page (6 samples, 0.14%)</title><rect x="1075.0" y="549" width="1.6" height="15.0" fill="rgb(206,199,28)" rx="2" ry="2" />
<text  x="1078.00" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (63 samples, 1.47%)</title><rect x="667.0" y="581" width="17.3" height="15.0" fill="rgb(251,200,34)" rx="2" ry="2" />
<text  x="669.99" y="591.5" ></text>
</g>
<g >
<title>update_blocked_averages (4 samples, 0.09%)</title><rect x="1148.2" y="533" width="1.1" height="15.0" fill="rgb(235,111,42)" rx="2" ry="2" />
<text  x="1151.18" y="543.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="1077.5" y="629" width="0.3" height="15.0" fill="rgb(236,8,9)" rx="2" ry="2" />
<text  x="1080.47" y="639.5" ></text>
</g>
<g >
<title>[libncursesw.so.6.2] (1 samples, 0.02%)</title><rect x="10.0" y="805" width="0.3" height="15.0" fill="rgb(213,168,45)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (33 samples, 0.77%)</title><rect x="643.1" y="661" width="9.0" height="15.0" fill="rgb(234,53,11)" rx="2" ry="2" />
<text  x="646.06" y="671.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2 samples, 0.05%)</title><rect x="148.7" y="741" width="0.5" height="15.0" fill="rgb(224,95,8)" rx="2" ry="2" />
<text  x="151.66" y="751.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (4 samples, 0.09%)</title><rect x="150.0" y="389" width="1.1" height="15.0" fill="rgb(217,174,0)" rx="2" ry="2" />
<text  x="153.04" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (21 samples, 0.49%)</title><rect x="77.4" y="741" width="5.8" height="15.0" fill="rgb(237,132,7)" rx="2" ry="2" />
<text  x="80.40" y="751.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.02%)</title><rect x="150.0" y="149" width="0.3" height="15.0" fill="rgb(250,108,14)" rx="2" ry="2" />
<text  x="153.04" y="159.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (3 samples, 0.07%)</title><rect x="588.6" y="677" width="0.8" height="15.0" fill="rgb(250,9,19)" rx="2" ry="2" />
<text  x="591.58" y="687.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.02%)</title><rect x="139.9" y="581" width="0.2" height="15.0" fill="rgb(233,60,54)" rx="2" ry="2" />
<text  x="142.86" y="591.5" ></text>
</g>
<g >
<title>run_rebalance_domains (6 samples, 0.14%)</title><rect x="1147.6" y="549" width="1.7" height="15.0" fill="rgb(244,184,45)" rx="2" ry="2" />
<text  x="1150.63" y="559.5" ></text>
</g>
<g >
<title>___sys_recvmsg (2 samples, 0.05%)</title><rect x="1056.3" y="757" width="0.5" height="15.0" fill="rgb(254,192,21)" rx="2" ry="2" />
<text  x="1059.29" y="767.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.02%)</title><rect x="1056.8" y="709" width="0.3" height="15.0" fill="rgb(223,44,45)" rx="2" ry="2" />
<text  x="1059.84" y="719.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1007.9" y="581" width="0.2" height="15.0" fill="rgb(214,116,4)" rx="2" ry="2" />
<text  x="1010.87" y="591.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (1 samples, 0.02%)</title><rect x="544.3" y="773" width="0.3" height="15.0" fill="rgb(216,162,8)" rx="2" ry="2" />
<text  x="547.29" y="783.5" ></text>
</g>
<g >
<title>__delete_from_page_cache (7 samples, 0.16%)</title><rect x="1062.9" y="661" width="1.9" height="15.0" fill="rgb(221,154,39)" rx="2" ry="2" />
<text  x="1065.89" y="671.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="449.1" y="533" width="0.3" height="15.0" fill="rgb(248,45,10)" rx="2" ry="2" />
<text  x="452.10" y="543.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1077.5" y="741" width="0.3" height="15.0" fill="rgb(246,150,15)" rx="2" ry="2" />
<text  x="1080.47" y="751.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.05%)</title><rect x="1008.1" y="805" width="0.6" height="15.0" fill="rgb(219,158,33)" rx="2" ry="2" />
<text  x="1011.14" y="815.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (7 samples, 0.16%)</title><rect x="40.0" y="805" width="1.9" height="15.0" fill="rgb(227,90,26)" rx="2" ry="2" />
<text  x="42.99" y="815.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (290 samples, 6.76%)</title><rect x="449.4" y="581" width="79.8" height="15.0" fill="rgb(254,107,18)" rx="2" ry="2" />
<text  x="452.37" y="591.5" >core::int..</text>
</g>
<g >
<title>__ioctl (80 samples, 1.87%)</title><rect x="11.1" y="725" width="22.0" height="15.0" fill="rgb(240,61,21)" rx="2" ry="2" />
<text  x="14.10" y="735.5" >_..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (1 samples, 0.02%)</title><rect x="150.3" y="149" width="0.3" height="15.0" fill="rgb(207,146,31)" rx="2" ry="2" />
<text  x="153.31" y="159.5" ></text>
</g>
<g >
<title>NaClSysFork (2 samples, 0.05%)</title><rect x="151.1" y="773" width="0.6" height="15.0" fill="rgb(231,96,26)" rx="2" ry="2" />
<text  x="154.14" y="783.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (194 samples, 4.52%)</title><rect x="1080.0" y="725" width="53.3" height="15.0" fill="rgb(213,70,39)" rx="2" ry="2" />
<text  x="1082.95" y="735.5" >cpuid..</text>
</g>
<g >
<title>std::thread::panicking (3 samples, 0.07%)</title><rect x="832.1" y="613" width="0.8" height="15.0" fill="rgb(245,174,8)" rx="2" ry="2" />
<text  x="835.07" y="623.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (33 samples, 0.77%)</title><rect x="759.2" y="565" width="9.0" height="15.0" fill="rgb(252,165,0)" rx="2" ry="2" />
<text  x="762.16" y="575.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (19 samples, 0.44%)</title><rect x="824.1" y="501" width="5.2" height="15.0" fill="rgb(214,178,10)" rx="2" ry="2" />
<text  x="827.09" y="511.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="1083.3" y="581" width="0.2" height="15.0" fill="rgb(206,185,39)" rx="2" ry="2" />
<text  x="1086.25" y="591.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (2 samples, 0.05%)</title><rect x="37.2" y="805" width="0.6" height="15.0" fill="rgb(249,109,31)" rx="2" ry="2" />
<text  x="40.24" y="815.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.02%)</title><rect x="10.0" y="597" width="0.3" height="15.0" fill="rgb(251,153,10)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (151 samples, 3.52%)</title><rect x="1083.8" y="709" width="41.5" height="15.0" fill="rgb(246,152,42)" rx="2" ry="2" />
<text  x="1086.80" y="719.5" >mwa..</text>
</g>
<g >
<title>__hrtimer_start_range_ns (2 samples, 0.05%)</title><rect x="1176.2" y="629" width="0.6" height="15.0" fill="rgb(209,24,46)" rx="2" ry="2" />
<text  x="1179.24" y="639.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.02%)</title><rect x="976.5" y="757" width="0.3" height="15.0" fill="rgb(230,222,29)" rx="2" ry="2" />
<text  x="979.51" y="767.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (1 samples, 0.02%)</title><rect x="1081.3" y="533" width="0.3" height="15.0" fill="rgb(238,16,33)" rx="2" ry="2" />
<text  x="1084.33" y="543.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (1 samples, 0.02%)</title><rect x="1008.4" y="533" width="0.3" height="15.0" fill="rgb(215,148,47)" rx="2" ry="2" />
<text  x="1011.42" y="543.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.02%)</title><rect x="1147.4" y="613" width="0.2" height="15.0" fill="rgb(237,59,26)" rx="2" ry="2" />
<text  x="1150.36" y="623.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.02%)</title><rect x="1189.7" y="709" width="0.3" height="15.0" fill="rgb(251,74,5)" rx="2" ry="2" />
<text  x="1192.72" y="719.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (1 samples, 0.02%)</title><rect x="1056.0" y="597" width="0.3" height="15.0" fill="rgb(216,117,34)" rx="2" ry="2" />
<text  x="1059.02" y="607.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (3 samples, 0.07%)</title><rect x="832.1" y="581" width="0.8" height="15.0" fill="rgb(207,30,34)" rx="2" ry="2" />
<text  x="835.07" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (1 samples, 0.02%)</title><rect x="755.6" y="581" width="0.3" height="15.0" fill="rgb(218,139,17)" rx="2" ry="2" />
<text  x="758.58" y="591.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.02%)</title><rect x="1077.8" y="789" width="0.2" height="15.0" fill="rgb(228,2,31)" rx="2" ry="2" />
<text  x="1080.75" y="799.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (7 samples, 0.16%)</title><rect x="1145.4" y="581" width="2.0" height="15.0" fill="rgb(238,224,51)" rx="2" ry="2" />
<text  x="1148.43" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (33 samples, 0.77%)</title><rect x="643.1" y="613" width="9.0" height="15.0" fill="rgb(224,73,53)" rx="2" ry="2" />
<text  x="646.06" y="623.5" ></text>
</g>
<g >
<title>main (2 samples, 0.05%)</title><rect x="1008.1" y="789" width="0.6" height="15.0" fill="rgb(225,75,54)" rx="2" ry="2" />
<text  x="1011.14" y="799.5" ></text>
</g>
<g >
<title>shrink_slab (35 samples, 0.82%)</title><rect x="1067.8" y="725" width="9.7" height="15.0" fill="rgb(222,20,54)" rx="2" ry="2" />
<text  x="1070.85" y="735.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (91 samples, 2.12%)</title><rect x="745.7" y="613" width="25.0" height="15.0" fill="rgb(221,191,37)" rx="2" ry="2" />
<text  x="748.68" y="623.5" >r..</text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 1.87%)</title><rect x="11.1" y="757" width="22.0" height="15.0" fill="rgb(232,125,51)" rx="2" ry="2" />
<text  x="14.10" y="767.5" >p..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.37%)</title><rect x="575.4" y="693" width="4.4" height="15.0" fill="rgb(247,94,23)" rx="2" ry="2" />
<text  x="578.38" y="703.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.02%)</title><rect x="1133.3" y="725" width="0.3" height="15.0" fill="rgb(223,158,27)" rx="2" ry="2" />
<text  x="1136.32" y="735.5" ></text>
</g>
<g >
<title>workingset_update_node (1 samples, 0.02%)</title><rect x="1074.4" y="469" width="0.3" height="15.0" fill="rgb(214,175,29)" rx="2" ry="2" />
<text  x="1077.45" y="479.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1140.8" y="709" width="0.2" height="15.0" fill="rgb(215,113,15)" rx="2" ry="2" />
<text  x="1143.75" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (1 samples, 0.02%)</title><rect x="149.8" y="629" width="0.2" height="15.0" fill="rgb(243,28,28)" rx="2" ry="2" />
<text  x="152.76" y="639.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.02%)</title><rect x="1056.0" y="757" width="0.3" height="15.0" fill="rgb(218,203,36)" rx="2" ry="2" />
<text  x="1059.02" y="767.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1024.9" y="565" width="0.3" height="15.0" fill="rgb(225,181,19)" rx="2" ry="2" />
<text  x="1027.93" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1073.3" y="437" width="0.3" height="15.0" fill="rgb(208,75,29)" rx="2" ry="2" />
<text  x="1076.35" y="447.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="868.9" y="581" width="0.6" height="15.0" fill="rgb(232,7,13)" rx="2" ry="2" />
<text  x="871.93" y="591.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.05%)</title><rect x="1136.1" y="757" width="0.5" height="15.0" fill="rgb(233,51,2)" rx="2" ry="2" />
<text  x="1139.08" y="767.5" ></text>
</g>
<g >
<title>exec_binprm (1 samples, 0.02%)</title><rect x="10.8" y="629" width="0.3" height="15.0" fill="rgb(209,33,35)" rx="2" ry="2" />
<text  x="13.83" y="639.5" ></text>
</g>
<g >
<title>ovl_write_iter (8 samples, 0.19%)</title><rect x="33.7" y="565" width="2.2" height="15.0" fill="rgb(231,192,32)" rx="2" ry="2" />
<text  x="36.66" y="575.5" ></text>
</g>
<g >
<title>do_group_exit (36 samples, 0.84%)</title><rect x="1019.7" y="773" width="9.9" height="15.0" fill="rgb(237,66,46)" rx="2" ry="2" />
<text  x="1022.70" y="783.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (1 samples, 0.02%)</title><rect x="1070.3" y="613" width="0.3" height="15.0" fill="rgb(218,221,29)" rx="2" ry="2" />
<text  x="1073.32" y="623.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.14%)</title><rect x="816.1" y="597" width="1.7" height="15.0" fill="rgb(248,114,45)" rx="2" ry="2" />
<text  x="819.11" y="607.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.02%)</title><rect x="1074.7" y="469" width="0.3" height="15.0" fill="rgb(212,208,28)" rx="2" ry="2" />
<text  x="1077.72" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.02%)</title><rect x="852.1" y="597" width="0.3" height="15.0" fill="rgb(241,30,26)" rx="2" ry="2" />
<text  x="855.15" y="607.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (1 samples, 0.02%)</title><rect x="147.8" y="693" width="0.3" height="15.0" fill="rgb(232,137,30)" rx="2" ry="2" />
<text  x="150.84" y="703.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.09%)</title><rect x="816.7" y="581" width="1.1" height="15.0" fill="rgb(244,39,35)" rx="2" ry="2" />
<text  x="819.66" y="591.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="151.4" y="629" width="0.3" height="15.0" fill="rgb(216,145,52)" rx="2" ry="2" />
<text  x="154.41" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (22 samples, 0.51%)</title><rect x="870.9" y="645" width="6.0" height="15.0" fill="rgb(224,134,17)" rx="2" ry="2" />
<text  x="873.86" y="655.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7 samples, 0.16%)</title><rect x="1145.4" y="597" width="2.0" height="15.0" fill="rgb(254,167,3)" rx="2" ry="2" />
<text  x="1148.43" y="607.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (4 samples, 0.09%)</title><rect x="542.6" y="757" width="1.1" height="15.0" fill="rgb(239,170,4)" rx="2" ry="2" />
<text  x="545.64" y="767.5" ></text>
</g>
<g >
<title>start_kernel (174 samples, 4.06%)</title><rect x="1142.1" y="773" width="47.9" height="15.0" fill="rgb(242,116,1)" rx="2" ry="2" />
<text  x="1145.13" y="783.5" >star..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="449.1" y="581" width="0.3" height="15.0" fill="rgb(235,14,47)" rx="2" ry="2" />
<text  x="452.10" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.02%)</title><rect x="84.8" y="741" width="0.3" height="15.0" fill="rgb(222,148,32)" rx="2" ry="2" />
<text  x="87.83" y="751.5" ></text>
</g>
<g >
<title>kmem_cache_free (3 samples, 0.07%)</title><rect x="1067.0" y="597" width="0.8" height="15.0" fill="rgb(216,217,2)" rx="2" ry="2" />
<text  x="1070.02" y="607.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (107 samples, 2.49%)</title><rect x="947.6" y="805" width="29.5" height="15.0" fill="rgb(211,206,18)" rx="2" ry="2" />
<text  x="950.62" y="815.5" >as..</text>
</g>
<g >
<title>NaClMap (1 samples, 0.02%)</title><rect x="139.9" y="693" width="0.2" height="15.0" fill="rgb(244,32,8)" rx="2" ry="2" />
<text  x="142.86" y="703.5" ></text>
</g>
<g >
<title>balance_pgdat (74 samples, 1.73%)</title><rect x="1057.1" y="773" width="20.4" height="15.0" fill="rgb(236,210,28)" rx="2" ry="2" />
<text  x="1060.12" y="783.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (1,191 samples, 27.77%)</title><rect x="553.9" y="757" width="327.7" height="15.0" fill="rgb(226,84,4)" rx="2" ry="2" />
<text  x="556.92" y="767.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (2 samples, 0.05%)</title><rect x="150.0" y="357" width="0.6" height="15.0" fill="rgb(219,207,5)" rx="2" ry="2" />
<text  x="153.04" y="367.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (11 samples, 0.26%)</title><rect x="67.2" y="741" width="3.1" height="15.0" fill="rgb(235,173,25)" rx="2" ry="2" />
<text  x="70.23" y="751.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (2 samples, 0.05%)</title><rect x="982.8" y="661" width="0.6" height="15.0" fill="rgb(218,4,49)" rx="2" ry="2" />
<text  x="985.83" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (24 samples, 0.56%)</title><rect x="409.5" y="565" width="6.6" height="15.0" fill="rgb(220,33,13)" rx="2" ry="2" />
<text  x="412.48" y="575.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (5 samples, 0.12%)</title><rect x="137.4" y="741" width="1.4" height="15.0" fill="rgb(238,50,19)" rx="2" ry="2" />
<text  x="140.38" y="751.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_constants::is_rdonly (1 samples, 0.02%)</title><rect x="807.9" y="661" width="0.2" height="15.0" fill="rgb(222,193,34)" rx="2" ry="2" />
<text  x="810.85" y="671.5" ></text>
</g>
<g >
<title>___d_drop (1 samples, 0.02%)</title><rect x="1068.4" y="613" width="0.3" height="15.0" fill="rgb(212,156,38)" rx="2" ry="2" />
<text  x="1071.40" y="623.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2 samples, 0.05%)</title><rect x="138.8" y="661" width="0.5" height="15.0" fill="rgb(209,212,1)" rx="2" ry="2" />
<text  x="141.76" y="671.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (3 samples, 0.07%)</title><rect x="138.8" y="693" width="0.8" height="15.0" fill="rgb(217,76,0)" rx="2" ry="2" />
<text  x="141.76" y="703.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.07%)</title><rect x="865.4" y="629" width="0.8" height="15.0" fill="rgb(230,229,11)" rx="2" ry="2" />
<text  x="868.36" y="639.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.19%)</title><rect x="866.5" y="565" width="2.2" height="15.0" fill="rgb(234,161,39)" rx="2" ry="2" />
<text  x="869.46" y="575.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,291 samples, 30.10%)</title><rect x="544.8" y="773" width="355.2" height="15.0" fill="rgb(239,221,48)" rx="2" ry="2" />
<text  x="547.84" y="783.5" >NaClSysWrite</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (6 samples, 0.14%)</title><rect x="149.5" y="677" width="1.6" height="15.0" fill="rgb(223,118,21)" rx="2" ry="2" />
<text  x="152.49" y="687.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.02%)</title><rect x="1065.6" y="677" width="0.3" height="15.0" fill="rgb(221,204,5)" rx="2" ry="2" />
<text  x="1068.64" y="687.5" ></text>
</g>
<g >
<title>shrink_lock_dentry.part.0 (1 samples, 0.02%)</title><rect x="1070.3" y="629" width="0.3" height="15.0" fill="rgb(208,179,14)" rx="2" ry="2" />
<text  x="1073.32" y="639.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (38 samples, 0.89%)</title><rect x="409.5" y="581" width="10.4" height="15.0" fill="rgb(254,70,41)" rx="2" ry="2" />
<text  x="412.48" y="591.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="852.1" y="645" width="0.6" height="15.0" fill="rgb(222,167,0)" rx="2" ry="2" />
<text  x="855.15" y="655.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (1 samples, 0.02%)</title><rect x="34.5" y="437" width="0.3" height="15.0" fill="rgb(251,67,1)" rx="2" ry="2" />
<text  x="37.49" y="447.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1188.3" y="677" width="0.3" height="15.0" fill="rgb(250,50,7)" rx="2" ry="2" />
<text  x="1191.35" y="687.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (5 samples, 0.12%)</title><rect x="336.8" y="613" width="1.4" height="15.0" fill="rgb(237,11,9)" rx="2" ry="2" />
<text  x="339.85" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (92 samples, 2.15%)</title><rect x="617.7" y="629" width="25.4" height="15.0" fill="rgb(216,82,27)" rx="2" ry="2" />
<text  x="620.75" y="639.5" >c..</text>
</g>
<g >
<title>__list_lru_walk_one (19 samples, 0.44%)</title><rect x="1072.0" y="629" width="5.2" height="15.0" fill="rgb(235,159,23)" rx="2" ry="2" />
<text  x="1074.97" y="639.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="1081.1" y="549" width="0.5" height="15.0" fill="rgb(209,114,31)" rx="2" ry="2" />
<text  x="1084.05" y="559.5" ></text>
</g>
<g >
<title>clear_inode (1 samples, 0.02%)</title><rect x="1069.5" y="533" width="0.3" height="15.0" fill="rgb(252,42,43)" rx="2" ry="2" />
<text  x="1072.50" y="543.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="1147.1" y="421" width="0.3" height="15.0" fill="rgb(237,20,48)" rx="2" ry="2" />
<text  x="1150.08" y="431.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 2.17%)</title><rect x="982.3" y="821" width="25.6" height="15.0" fill="rgb(232,170,7)" rx="2" ry="2" />
<text  x="985.28" y="831.5" >[..</text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (86 samples, 2.01%)</title><rect x="808.1" y="661" width="23.7" height="15.0" fill="rgb(210,137,36)" rx="2" ry="2" />
<text  x="811.13" y="671.5" >s..</text>
</g>
<g >
<title>NaClFastMutexLock (25 samples, 0.58%)</title><rect x="881.6" y="757" width="6.9" height="15.0" fill="rgb(253,111,11)" rx="2" ry="2" />
<text  x="884.59" y="767.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (8 samples, 0.19%)</title><rect x="33.7" y="501" width="2.2" height="15.0" fill="rgb(213,41,8)" rx="2" ry="2" />
<text  x="36.66" y="511.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="1186.4" y="613" width="0.3" height="15.0" fill="rgb(239,6,38)" rx="2" ry="2" />
<text  x="1189.42" y="623.5" ></text>
</g>
<g >
<title>pte_alloc_one (1 samples, 0.02%)</title><rect x="953.7" y="677" width="0.2" height="15.0" fill="rgb(225,138,46)" rx="2" ry="2" />
<text  x="956.67" y="687.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (69 samples, 1.61%)</title><rect x="665.3" y="661" width="19.0" height="15.0" fill="rgb(239,25,35)" rx="2" ry="2" />
<text  x="668.34" y="671.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.02%)</title><rect x="983.4" y="725" width="0.3" height="15.0" fill="rgb(225,89,13)" rx="2" ry="2" />
<text  x="986.38" y="735.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (7 samples, 0.16%)</title><rect x="1145.4" y="565" width="2.0" height="15.0" fill="rgb(253,26,14)" rx="2" ry="2" />
<text  x="1148.43" y="575.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect x="150.0" y="165" width="0.3" height="15.0" fill="rgb(212,123,16)" rx="2" ry="2" />
<text  x="153.04" y="175.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (55 samples, 1.28%)</title><rect x="108.8" y="789" width="15.1" height="15.0" fill="rgb(221,169,31)" rx="2" ry="2" />
<text  x="111.77" y="799.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (2 samples, 0.05%)</title><rect x="150.0" y="213" width="0.6" height="15.0" fill="rgb(254,209,4)" rx="2" ry="2" />
<text  x="153.04" y="223.5" ></text>
</g>
<g >
<title>NaClHostDescRead (1,390 samples, 32.41%)</title><rect x="152.0" y="741" width="382.4" height="15.0" fill="rgb(224,222,41)" rx="2" ry="2" />
<text  x="154.96" y="751.5" >NaClHostDescRead</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (2 samples, 0.05%)</title><rect x="150.6" y="357" width="0.5" height="15.0" fill="rgb(227,77,12)" rx="2" ry="2" />
<text  x="153.59" y="367.5" ></text>
</g>
<g >
<title>release_pages (4 samples, 0.09%)</title><rect x="1073.1" y="549" width="1.1" height="15.0" fill="rgb(221,41,27)" rx="2" ry="2" />
<text  x="1076.07" y="559.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.02%)</title><rect x="1077.5" y="677" width="0.3" height="15.0" fill="rgb(239,157,8)" rx="2" ry="2" />
<text  x="1080.47" y="687.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect x="150.3" y="165" width="0.3" height="15.0" fill="rgb(242,3,24)" rx="2" ry="2" />
<text  x="153.31" y="175.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="1008.4" y="661" width="0.3" height="15.0" fill="rgb(223,124,13)" rx="2" ry="2" />
<text  x="1011.42" y="671.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (1 samples, 0.02%)</title><rect x="37.0" y="805" width="0.2" height="15.0" fill="rgb(227,211,46)" rx="2" ry="2" />
<text  x="39.96" y="815.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (1 samples, 0.02%)</title><rect x="984.5" y="805" width="0.3" height="15.0" fill="rgb(208,173,51)" rx="2" ry="2" />
<text  x="987.48" y="815.5" ></text>
</g>
<g >
<title>iput_final (4 samples, 0.09%)</title><rect x="1069.2" y="565" width="1.1" height="15.0" fill="rgb(218,123,39)" rx="2" ry="2" />
<text  x="1072.22" y="575.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="148.7" y="677" width="0.5" height="15.0" fill="rgb(236,38,16)" rx="2" ry="2" />
<text  x="151.66" y="687.5" ></text>
</g>
<g >
<title>rmqueue (13 samples, 0.30%)</title><rect x="963.6" y="645" width="3.6" height="15.0" fill="rgb(207,33,21)" rx="2" ry="2" />
<text  x="966.57" y="655.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (7 samples, 0.16%)</title><rect x="894.5" y="757" width="1.9" height="15.0" fill="rgb(208,100,46)" rx="2" ry="2" />
<text  x="897.52" y="767.5" ></text>
</g>
<g >
<title>ext4_evict_inode (4 samples, 0.09%)</title><rect x="1070.9" y="629" width="1.1" height="15.0" fill="rgb(219,7,31)" rx="2" ry="2" />
<text  x="1073.87" y="639.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.02%)</title><rect x="10.8" y="613" width="0.3" height="15.0" fill="rgb(225,93,5)" rx="2" ry="2" />
<text  x="13.83" y="623.5" ></text>
</g>
<g >
<title>do_idle (228 samples, 5.32%)</title><rect x="1078.9" y="773" width="62.7" height="15.0" fill="rgb(206,135,54)" rx="2" ry="2" />
<text  x="1081.85" y="783.5" >do_idle</text>
</g>
<g >
<title>exit_mm (35 samples, 0.82%)</title><rect x="1019.7" y="741" width="9.6" height="15.0" fill="rgb(243,202,43)" rx="2" ry="2" />
<text  x="1022.70" y="751.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (64 samples, 1.49%)</title><rect x="666.7" y="613" width="17.6" height="15.0" fill="rgb(208,180,38)" rx="2" ry="2" />
<text  x="669.72" y="623.5" ></text>
</g>
<g >
<title>update_process_times (4 samples, 0.09%)</title><rect x="1146.3" y="501" width="1.1" height="15.0" fill="rgb(250,220,15)" rx="2" ry="2" />
<text  x="1149.26" y="511.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.02%)</title><rect x="1132.8" y="709" width="0.2" height="15.0" fill="rgb(213,196,17)" rx="2" ry="2" />
<text  x="1135.77" y="719.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.02%)</title><rect x="983.4" y="677" width="0.3" height="15.0" fill="rgb(247,13,48)" rx="2" ry="2" />
<text  x="986.38" y="687.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.02%)</title><rect x="975.1" y="677" width="0.3" height="15.0" fill="rgb(213,18,42)" rx="2" ry="2" />
<text  x="978.13" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="10.8" y="725" width="0.3" height="15.0" fill="rgb(229,149,31)" rx="2" ry="2" />
<text  x="13.83" y="735.5" ></text>
</g>
<g >
<title>__delete_from_page_cache (3 samples, 0.07%)</title><rect x="1074.2" y="517" width="0.8" height="15.0" fill="rgb(248,120,45)" rx="2" ry="2" />
<text  x="1077.17" y="527.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.02%)</title><rect x="10.0" y="629" width="0.3" height="15.0" fill="rgb(213,154,38)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (30 samples, 0.70%)</title><rect x="852.1" y="661" width="8.3" height="15.0" fill="rgb(223,207,14)" rx="2" ry="2" />
<text  x="855.15" y="671.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (3 samples, 0.07%)</title><rect x="1173.5" y="629" width="0.8" height="15.0" fill="rgb(211,51,19)" rx="2" ry="2" />
<text  x="1176.49" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (14 samples, 0.33%)</title><rect x="876.9" y="645" width="3.9" height="15.0" fill="rgb(223,184,19)" rx="2" ry="2" />
<text  x="879.91" y="655.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (5 samples, 0.12%)</title><rect x="1068.9" y="613" width="1.4" height="15.0" fill="rgb(238,133,25)" rx="2" ry="2" />
<text  x="1071.95" y="623.5" ></text>
</g>
<g >
<title>idr_find (1 samples, 0.02%)</title><rect x="1056.0" y="629" width="0.3" height="15.0" fill="rgb(242,121,36)" rx="2" ry="2" />
<text  x="1059.02" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (24 samples, 0.56%)</title><rect x="881.9" y="741" width="6.6" height="15.0" fill="rgb(238,138,53)" rx="2" ry="2" />
<text  x="884.86" y="751.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (20 samples, 0.47%)</title><rect x="126.1" y="741" width="5.5" height="15.0" fill="rgb(237,208,39)" rx="2" ry="2" />
<text  x="129.10" y="751.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1,389 samples, 32.39%)</title><rect x="152.0" y="661" width="382.1" height="15.0" fill="rgb(216,184,41)" rx="2" ry="2" />
<text  x="154.96" y="671.5" >rustposix::interface::pipe::EmulatedPipe::read_from..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="150.9" y="197" width="0.2" height="15.0" fill="rgb(220,89,53)" rx="2" ry="2" />
<text  x="153.86" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="139.6" y="645" width="0.3" height="15.0" fill="rgb(246,21,31)" rx="2" ry="2" />
<text  x="142.58" y="655.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (1 samples, 0.02%)</title><rect x="1080.2" y="517" width="0.3" height="15.0" fill="rgb(207,111,21)" rx="2" ry="2" />
<text  x="1083.23" y="527.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.02%)</title><rect x="1023.6" y="581" width="0.2" height="15.0" fill="rgb(227,26,3)" rx="2" ry="2" />
<text  x="1026.55" y="591.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.02%)</title><rect x="34.8" y="437" width="0.2" height="15.0" fill="rgb(248,103,28)" rx="2" ry="2" />
<text  x="37.76" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (27 samples, 0.63%)</title><rect x="853.0" y="629" width="7.4" height="15.0" fill="rgb(252,33,3)" rx="2" ry="2" />
<text  x="855.98" y="639.5" ></text>
</g>
<g >
<title>NaClLoadTrampoline (1 samples, 0.02%)</title><rect x="1008.1" y="709" width="0.3" height="15.0" fill="rgb(243,84,50)" rx="2" ry="2" />
<text  x="1011.14" y="719.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (1 samples, 0.02%)</title><rect x="1008.4" y="421" width="0.3" height="15.0" fill="rgb(217,9,31)" rx="2" ry="2" />
<text  x="1011.42" y="431.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1140.8" y="725" width="0.2" height="15.0" fill="rgb(209,92,10)" rx="2" ry="2" />
<text  x="1143.75" y="735.5" ></text>
</g>
<g >
<title>shmem_mmap (1 samples, 0.02%)</title><rect x="139.9" y="549" width="0.2" height="15.0" fill="rgb(230,212,36)" rx="2" ry="2" />
<text  x="142.86" y="559.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (22 samples, 0.51%)</title><rect x="1023.3" y="597" width="6.0" height="15.0" fill="rgb(211,33,27)" rx="2" ry="2" />
<text  x="1026.28" y="607.5" ></text>
</g>
<g >
<title>walk_component (1 samples, 0.02%)</title><rect x="1056.0" y="709" width="0.3" height="15.0" fill="rgb(254,103,26)" rx="2" ry="2" />
<text  x="1059.02" y="719.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="150.9" y="309" width="0.2" height="15.0" fill="rgb(234,32,30)" rx="2" ry="2" />
<text  x="153.86" y="319.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1176.5" y="565" width="0.3" height="15.0" fill="rgb(238,68,4)" rx="2" ry="2" />
<text  x="1179.52" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="1008.4" y="261" width="0.3" height="15.0" fill="rgb(253,66,40)" rx="2" ry="2" />
<text  x="1011.42" y="271.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (9 samples, 0.21%)</title><rect x="866.2" y="613" width="2.5" height="15.0" fill="rgb(247,7,50)" rx="2" ry="2" />
<text  x="869.18" y="623.5" ></text>
</g>
<g >
<title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="1055.5" y="821" width="0.2" height="15.0" fill="rgb(221,74,16)" rx="2" ry="2" />
<text  x="1058.47" y="831.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (3 samples, 0.07%)</title><rect x="107.9" y="789" width="0.9" height="15.0" fill="rgb(239,147,9)" rx="2" ry="2" />
<text  x="110.94" y="799.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.07%)</title><rect x="869.5" y="597" width="0.8" height="15.0" fill="rgb(251,62,40)" rx="2" ry="2" />
<text  x="872.48" y="607.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (699 samples, 16.30%)</title><rect x="340.7" y="613" width="192.3" height="15.0" fill="rgb(254,90,24)" rx="2" ry="2" />
<text  x="343.70" y="623.5" >ringbuf::consumer::Consum..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="59.2" y="725" width="0.3" height="15.0" fill="rgb(248,62,22)" rx="2" ry="2" />
<text  x="62.25" y="735.5" ></text>
</g>
<g >
<title>do_fault_around (1 samples, 0.02%)</title><rect x="975.1" y="693" width="0.3" height="15.0" fill="rgb(253,119,5)" rx="2" ry="2" />
<text  x="978.13" y="703.5" ></text>
</g>
<g >
<title>page_cache_delete (2 samples, 0.05%)</title><rect x="1074.4" y="501" width="0.6" height="15.0" fill="rgb(218,187,47)" rx="2" ry="2" />
<text  x="1077.45" y="511.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="420.5" y="533" width="0.3" height="15.0" fill="rgb(244,126,32)" rx="2" ry="2" />
<text  x="423.48" y="543.5" ></text>
</g>
<g >
<title>inet6_recvmsg (1 samples, 0.02%)</title><rect x="1056.3" y="709" width="0.3" height="15.0" fill="rgb(208,50,13)" rx="2" ry="2" />
<text  x="1059.29" y="719.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="131.6" y="741" width="0.3" height="15.0" fill="rgb(237,63,10)" rx="2" ry="2" />
<text  x="134.60" y="751.5" ></text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.05%)</title><rect x="796.6" y="581" width="0.5" height="15.0" fill="rgb(208,40,39)" rx="2" ry="2" />
<text  x="799.57" y="591.5" ></text>
</g>
<g >
<title>check_tsc_unstable (1 samples, 0.02%)</title><rect x="1142.7" y="677" width="0.3" height="15.0" fill="rgb(214,211,3)" rx="2" ry="2" />
<text  x="1145.68" y="687.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (2 samples, 0.05%)</title><rect x="796.6" y="613" width="0.5" height="15.0" fill="rgb(245,69,46)" rx="2" ry="2" />
<text  x="799.57" y="623.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (6 samples, 0.14%)</title><rect x="164.9" y="629" width="1.6" height="15.0" fill="rgb(243,187,20)" rx="2" ry="2" />
<text  x="167.89" y="639.5" ></text>
</g>
<g >
<title>exc_page_fault (2 samples, 0.05%)</title><rect x="148.7" y="725" width="0.5" height="15.0" fill="rgb(247,181,36)" rx="2" ry="2" />
<text  x="151.66" y="735.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (6 samples, 0.14%)</title><rect x="770.7" y="613" width="1.7" height="15.0" fill="rgb(250,187,47)" rx="2" ry="2" />
<text  x="773.71" y="623.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.02%)</title><rect x="151.1" y="741" width="0.3" height="15.0" fill="rgb(244,24,36)" rx="2" ry="2" />
<text  x="154.14" y="751.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (6 samples, 0.14%)</title><rect x="164.9" y="613" width="1.6" height="15.0" fill="rgb(205,147,1)" rx="2" ry="2" />
<text  x="167.89" y="623.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.02%)</title><rect x="1187.8" y="677" width="0.3" height="15.0" fill="rgb(226,115,33)" rx="2" ry="2" />
<text  x="1190.80" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.02%)</title><rect x="1056.0" y="789" width="0.3" height="15.0" fill="rgb(206,47,9)" rx="2" ry="2" />
<text  x="1059.02" y="799.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (4 samples, 0.09%)</title><rect x="1175.1" y="597" width="1.1" height="15.0" fill="rgb(235,69,17)" rx="2" ry="2" />
<text  x="1178.14" y="607.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (17 samples, 0.40%)</title><rect x="1002.6" y="805" width="4.7" height="15.0" fill="rgb(209,150,37)" rx="2" ry="2" />
<text  x="1005.64" y="815.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="1173.5" y="613" width="0.3" height="15.0" fill="rgb(218,208,32)" rx="2" ry="2" />
<text  x="1176.49" y="623.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (1 samples, 0.02%)</title><rect x="36.7" y="805" width="0.3" height="15.0" fill="rgb(245,72,33)" rx="2" ry="2" />
<text  x="39.69" y="815.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="139.0" y="565" width="0.3" height="15.0" fill="rgb(232,9,7)" rx="2" ry="2" />
<text  x="142.03" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="150.6" y="181" width="0.3" height="15.0" fill="rgb(211,143,21)" rx="2" ry="2" />
<text  x="153.59" y="191.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="1080.0" y="677" width="0.2" height="15.0" fill="rgb(223,129,8)" rx="2" ry="2" />
<text  x="1082.95" y="687.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.02%)</title><rect x="10.6" y="677" width="0.2" height="15.0" fill="rgb(209,154,51)" rx="2" ry="2" />
<text  x="13.55" y="687.5" ></text>
</g>
<g >
<title>newidle_balance (24 samples, 0.56%)</title><rect x="1180.1" y="645" width="6.6" height="15.0" fill="rgb(231,58,24)" rx="2" ry="2" />
<text  x="1183.10" y="655.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="10.0" y="709" width="0.3" height="15.0" fill="rgb(252,37,12)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="139.9" y="645" width="0.2" height="15.0" fill="rgb(245,228,39)" rx="2" ry="2" />
<text  x="142.86" y="655.5" ></text>
</g>
<g >
<title>start_secondary (230 samples, 5.36%)</title><rect x="1078.9" y="805" width="63.2" height="15.0" fill="rgb(205,112,26)" rx="2" ry="2" />
<text  x="1081.85" y="815.5" >start_..</text>
</g>
<g >
<title>NaClLog (6 samples, 0.14%)</title><rect x="897.3" y="757" width="1.6" height="15.0" fill="rgb(227,177,40)" rx="2" ry="2" />
<text  x="900.27" y="767.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.16%)</title><rect x="817.8" y="517" width="1.9" height="15.0" fill="rgb(207,27,43)" rx="2" ry="2" />
<text  x="820.76" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (9 samples, 0.21%)</title><rect x="794.1" y="581" width="2.5" height="15.0" fill="rgb(209,190,4)" rx="2" ry="2" />
<text  x="797.10" y="591.5" ></text>
</g>
<g >
<title>smp_call_function_single (72 samples, 1.68%)</title><rect x="13.3" y="581" width="19.8" height="15.0" fill="rgb(244,206,13)" rx="2" ry="2" />
<text  x="16.30" y="591.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (2 samples, 0.05%)</title><rect x="852.1" y="629" width="0.6" height="15.0" fill="rgb(242,151,32)" rx="2" ry="2" />
<text  x="855.15" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="149.8" y="581" width="0.2" height="15.0" fill="rgb(238,22,29)" rx="2" ry="2" />
<text  x="152.76" y="591.5" ></text>
</g>
<g >
<title>record__mmap_read_all (9 samples, 0.21%)</title><rect x="33.4" y="773" width="2.5" height="15.0" fill="rgb(248,100,44)" rx="2" ry="2" />
<text  x="36.39" y="783.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="1056.8" y="693" width="0.3" height="15.0" fill="rgb(233,10,36)" rx="2" ry="2" />
<text  x="1059.84" y="703.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.02%)</title><rect x="900.0" y="773" width="0.3" height="15.0" fill="rgb(222,41,26)" rx="2" ry="2" />
<text  x="903.02" y="783.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (41 samples, 0.96%)</title><rect x="409.5" y="597" width="11.3" height="15.0" fill="rgb(224,117,47)" rx="2" ry="2" />
<text  x="412.48" y="607.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.02%)</title><rect x="1078.0" y="773" width="0.3" height="15.0" fill="rgb(248,192,37)" rx="2" ry="2" />
<text  x="1081.03" y="783.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.05%)</title><rect x="1173.8" y="613" width="0.5" height="15.0" fill="rgb(240,227,40)" rx="2" ry="2" />
<text  x="1176.77" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="1059.3" y="693" width="0.3" height="15.0" fill="rgb(218,172,33)" rx="2" ry="2" />
<text  x="1062.32" y="703.5" ></text>
</g>
<g >
<title>vfs_iter_write (8 samples, 0.19%)</title><rect x="33.7" y="549" width="2.2" height="15.0" fill="rgb(217,167,28)" rx="2" ry="2" />
<text  x="36.66" y="559.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (4 samples, 0.09%)</title><rect x="830.7" y="597" width="1.1" height="15.0" fill="rgb(215,67,30)" rx="2" ry="2" />
<text  x="833.69" y="607.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (21 samples, 0.49%)</title><rect x="536.9" y="741" width="5.7" height="15.0" fill="rgb(246,69,14)" rx="2" ry="2" />
<text  x="539.86" y="751.5" ></text>
</g>
<g >
<title>do_shared_fault (1 samples, 0.02%)</title><rect x="139.0" y="549" width="0.3" height="15.0" fill="rgb(230,208,30)" rx="2" ry="2" />
<text  x="142.03" y="559.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.02%)</title><rect x="1025.2" y="565" width="0.3" height="15.0" fill="rgb(225,67,5)" rx="2" ry="2" />
<text  x="1028.20" y="575.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (2 samples, 0.05%)</title><rect x="974.0" y="677" width="0.6" height="15.0" fill="rgb(210,48,11)" rx="2" ry="2" />
<text  x="977.03" y="687.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="1135.0" y="677" width="0.3" height="15.0" fill="rgb(250,102,45)" rx="2" ry="2" />
<text  x="1137.98" y="687.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="1056.8" y="741" width="0.3" height="15.0" fill="rgb(215,179,43)" rx="2" ry="2" />
<text  x="1059.84" y="751.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (22 samples, 0.51%)</title><rect x="1023.3" y="613" width="6.0" height="15.0" fill="rgb(216,16,43)" rx="2" ry="2" />
<text  x="1026.28" y="623.5" ></text>
</g>
<g >
<title>Process0Operands (1 samples, 0.02%)</title><rect x="39.4" y="805" width="0.3" height="15.0" fill="rgb(226,142,41)" rx="2" ry="2" />
<text  x="42.44" y="815.5" ></text>
</g>
<g >
<title>perf_event_mmap_event (1 samples, 0.02%)</title><rect x="139.6" y="565" width="0.3" height="15.0" fill="rgb(220,42,54)" rx="2" ry="2" />
<text  x="142.58" y="575.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="34.5" y="421" width="0.3" height="15.0" fill="rgb(227,115,1)" rx="2" ry="2" />
<text  x="37.49" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.37%)</title><rect x="579.8" y="629" width="4.4" height="15.0" fill="rgb(244,91,4)" rx="2" ry="2" />
<text  x="582.78" y="639.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.02%)</title><rect x="33.1" y="741" width="0.3" height="15.0" fill="rgb(226,73,38)" rx="2" ry="2" />
<text  x="36.11" y="751.5" ></text>
</g>
<g >
<title>all (4,289 samples, 100%)</title><rect x="10.0" y="853" width="1180.0" height="15.0" fill="rgb(230,219,18)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="983.4" y="757" width="0.3" height="15.0" fill="rgb(223,162,0)" rx="2" ry="2" />
<text  x="986.38" y="767.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1180.6" y="533" width="0.3" height="15.0" fill="rgb(251,160,53)" rx="2" ry="2" />
<text  x="1183.65" y="543.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.02%)</title><rect x="1008.4" y="293" width="0.3" height="15.0" fill="rgb(220,10,18)" rx="2" ry="2" />
<text  x="1011.42" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (16 samples, 0.37%)</title><rect x="579.8" y="613" width="4.4" height="15.0" fill="rgb(215,134,12)" rx="2" ry="2" />
<text  x="582.78" y="623.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (4 samples, 0.09%)</title><rect x="150.0" y="645" width="1.1" height="15.0" fill="rgb(239,11,0)" rx="2" ry="2" />
<text  x="153.04" y="655.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1080.2" y="597" width="0.3" height="15.0" fill="rgb(236,182,20)" rx="2" ry="2" />
<text  x="1083.23" y="607.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (48 samples, 1.12%)</title><rect x="652.1" y="629" width="13.2" height="15.0" fill="rgb(216,110,50)" rx="2" ry="2" />
<text  x="655.14" y="639.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (1 samples, 0.02%)</title><rect x="1147.4" y="597" width="0.2" height="15.0" fill="rgb(238,147,35)" rx="2" ry="2" />
<text  x="1150.36" y="607.5" ></text>
</g>
<g >
<title>__mnt_drop_write (1 samples, 0.02%)</title><rect x="139.9" y="533" width="0.2" height="15.0" fill="rgb(252,74,39)" rx="2" ry="2" />
<text  x="142.86" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="823.8" y="533" width="0.3" height="15.0" fill="rgb(244,181,10)" rx="2" ry="2" />
<text  x="826.81" y="543.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="10.6" y="613" width="0.2" height="15.0" fill="rgb(246,143,39)" rx="2" ry="2" />
<text  x="13.55" y="623.5" ></text>
</g>
<g >
<title>xas_store (2 samples, 0.05%)</title><rect x="1074.4" y="485" width="0.6" height="15.0" fill="rgb(214,206,28)" rx="2" ry="2" />
<text  x="1077.45" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="84.8" y="725" width="0.3" height="15.0" fill="rgb(229,131,30)" rx="2" ry="2" />
<text  x="87.83" y="735.5" ></text>
</g>
<g >
<title>i_callback (2 samples, 0.05%)</title><rect x="1081.6" y="565" width="0.6" height="15.0" fill="rgb(243,15,15)" rx="2" ry="2" />
<text  x="1084.60" y="575.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (1,187 samples, 27.68%)</title><rect x="554.5" y="741" width="326.5" height="15.0" fill="rgb(246,83,41)" rx="2" ry="2" />
<text  x="557.47" y="751.5" >NaClHostDescWrite</text>
</g>
<g >
<title>__invalidate_mapping_pages (18 samples, 0.42%)</title><rect x="1072.2" y="581" width="5.0" height="15.0" fill="rgb(223,117,17)" rx="2" ry="2" />
<text  x="1075.25" y="591.5" ></text>
</g>
<g >
<title>CheckValidityOfRegularInstruction (1 samples, 0.02%)</title><rect x="148.1" y="677" width="0.3" height="15.0" fill="rgb(239,9,0)" rx="2" ry="2" />
<text  x="151.11" y="687.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (1 samples, 0.02%)</title><rect x="1066.7" y="629" width="0.3" height="15.0" fill="rgb(229,24,8)" rx="2" ry="2" />
<text  x="1069.75" y="639.5" ></text>
</g>
<g >
<title>rl_generic_bind (1 samples, 0.02%)</title><rect x="10.3" y="629" width="0.3" height="15.0" fill="rgb(215,70,37)" rx="2" ry="2" />
<text  x="13.28" y="639.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.02%)</title><rect x="973.5" y="677" width="0.3" height="15.0" fill="rgb(230,70,49)" rx="2" ry="2" />
<text  x="976.48" y="687.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.05%)</title><rect x="796.6" y="533" width="0.5" height="15.0" fill="rgb(244,129,33)" rx="2" ry="2" />
<text  x="799.57" y="543.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="1170.5" y="661" width="0.2" height="15.0" fill="rgb(213,177,5)" rx="2" ry="2" />
<text  x="1173.47" y="671.5" ></text>
</g>
<g >
<title>shrink_page_list (23 samples, 0.54%)</title><rect x="1061.5" y="693" width="6.3" height="15.0" fill="rgb(241,149,8)" rx="2" ry="2" />
<text  x="1064.52" y="703.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="1077.8" y="693" width="0.2" height="15.0" fill="rgb(239,100,14)" rx="2" ry="2" />
<text  x="1080.75" y="703.5" ></text>
</g>
<g >
<title>__mem_cgroup_threshold (1 samples, 0.02%)</title><rect x="1065.9" y="629" width="0.3" height="15.0" fill="rgb(238,191,16)" rx="2" ry="2" />
<text  x="1068.92" y="639.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="150.6" y="133" width="0.3" height="15.0" fill="rgb(246,54,7)" rx="2" ry="2" />
<text  x="153.59" y="143.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (5 samples, 0.12%)</title><rect x="1188.1" y="693" width="1.3" height="15.0" fill="rgb(243,86,53)" rx="2" ry="2" />
<text  x="1191.07" y="703.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="953.7" y="645" width="0.2" height="15.0" fill="rgb(224,6,30)" rx="2" ry="2" />
<text  x="956.67" y="655.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="1024.9" y="549" width="0.3" height="15.0" fill="rgb(217,193,28)" rx="2" ry="2" />
<text  x="1027.93" y="559.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::VariantAccess&lt;R&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (1 samples, 0.02%)</title><rect x="1008.4" y="405" width="0.3" height="15.0" fill="rgb(242,179,19)" rx="2" ry="2" />
<text  x="1011.42" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14 samples, 0.33%)</title><rect x="1145.4" y="629" width="3.9" height="15.0" fill="rgb(245,132,34)" rx="2" ry="2" />
<text  x="1148.43" y="639.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (3 samples, 0.07%)</title><rect x="954.8" y="661" width="0.8" height="15.0" fill="rgb(232,17,43)" rx="2" ry="2" />
<text  x="957.77" y="671.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="819.4" y="485" width="0.3" height="15.0" fill="rgb(233,61,36)" rx="2" ry="2" />
<text  x="822.41" y="495.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (1 samples, 0.02%)</title><rect x="150.9" y="261" width="0.2" height="15.0" fill="rgb(227,134,29)" rx="2" ry="2" />
<text  x="153.86" y="271.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="138.8" y="597" width="0.2" height="15.0" fill="rgb(212,97,0)" rx="2" ry="2" />
<text  x="141.76" y="607.5" ></text>
</g>
<g >
<title>unmap_single_vma (35 samples, 0.82%)</title><rect x="1019.7" y="677" width="9.6" height="15.0" fill="rgb(210,75,38)" rx="2" ry="2" />
<text  x="1022.70" y="687.5" ></text>
</g>
<g >
<title>NaClSysWrite (1 samples, 0.02%)</title><rect x="38.1" y="805" width="0.2" height="15.0" fill="rgb(251,82,42)" rx="2" ry="2" />
<text  x="41.06" y="815.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (7 samples, 0.16%)</title><rect x="817.8" y="581" width="1.9" height="15.0" fill="rgb(215,29,46)" rx="2" ry="2" />
<text  x="820.76" y="591.5" ></text>
</g>
<g >
<title>iput (5 samples, 0.12%)</title><rect x="1068.9" y="597" width="1.4" height="15.0" fill="rgb(205,87,28)" rx="2" ry="2" />
<text  x="1071.95" y="607.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="976.2" y="757" width="0.3" height="15.0" fill="rgb(205,74,1)" rx="2" ry="2" />
<text  x="979.23" y="767.5" ></text>
</g>
<g >
<title>__get_user_pages (2 samples, 0.05%)</title><rect x="982.8" y="629" width="0.6" height="15.0" fill="rgb(237,110,18)" rx="2" ry="2" />
<text  x="985.83" y="639.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="139.9" y="597" width="0.2" height="15.0" fill="rgb(213,113,26)" rx="2" ry="2" />
<text  x="142.86" y="607.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (74 samples, 1.73%)</title><rect x="831.8" y="661" width="20.3" height="15.0" fill="rgb(207,97,53)" rx="2" ry="2" />
<text  x="834.79" y="671.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (1 samples, 0.02%)</title><rect x="150.6" y="229" width="0.3" height="15.0" fill="rgb(230,103,6)" rx="2" ry="2" />
<text  x="153.59" y="239.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.02%)</title><rect x="743.2" y="629" width="0.3" height="15.0" fill="rgb(211,191,14)" rx="2" ry="2" />
<text  x="746.20" y="639.5" ></text>
</g>
<g >
<title>mmput (35 samples, 0.82%)</title><rect x="1019.7" y="725" width="9.6" height="15.0" fill="rgb(219,93,42)" rx="2" ry="2" />
<text  x="1022.70" y="735.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="1029.3" y="677" width="0.3" height="15.0" fill="rgb(211,46,4)" rx="2" ry="2" />
<text  x="1032.33" y="687.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.02%)</title><rect x="983.4" y="693" width="0.3" height="15.0" fill="rgb(229,155,41)" rx="2" ry="2" />
<text  x="986.38" y="703.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.02%)</title><rect x="149.8" y="405" width="0.2" height="15.0" fill="rgb(239,158,44)" rx="2" ry="2" />
<text  x="152.76" y="415.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.02%)</title><rect x="971.6" y="629" width="0.2" height="15.0" fill="rgb(221,39,20)" rx="2" ry="2" />
<text  x="974.55" y="639.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (449 samples, 10.47%)</title><rect x="684.3" y="661" width="123.6" height="15.0" fill="rgb(254,141,34)" rx="2" ry="2" />
<text  x="687.33" y="671.5" >rustposix::inte..</text>
</g>
<g >
<title>core::sync::atomic::atomic_add (16 samples, 0.37%)</title><rect x="575.4" y="661" width="4.4" height="15.0" fill="rgb(232,170,31)" rx="2" ry="2" />
<text  x="578.38" y="671.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (1 samples, 0.02%)</title><rect x="1067.6" y="581" width="0.2" height="15.0" fill="rgb(228,22,31)" rx="2" ry="2" />
<text  x="1070.57" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (6 samples, 0.14%)</title><rect x="149.5" y="709" width="1.6" height="15.0" fill="rgb(233,53,34)" rx="2" ry="2" />
<text  x="152.49" y="719.5" ></text>
</g>
<g >
<title>do_exit (36 samples, 0.84%)</title><rect x="1019.7" y="757" width="9.9" height="15.0" fill="rgb(251,64,3)" rx="2" ry="2" />
<text  x="1022.70" y="767.5" ></text>
</g>
<g >
<title>check_cpu_stall (1 samples, 0.02%)</title><rect x="1146.3" y="453" width="0.2" height="15.0" fill="rgb(242,175,28)" rx="2" ry="2" />
<text  x="1149.26" y="463.5" ></text>
</g>
<g >
<title>__run_hrtimer (7 samples, 0.16%)</title><rect x="1145.4" y="549" width="2.0" height="15.0" fill="rgb(216,48,24)" rx="2" ry="2" />
<text  x="1148.43" y="559.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (38 samples, 0.89%)</title><rect x="870.3" y="677" width="10.5" height="15.0" fill="rgb(225,42,31)" rx="2" ry="2" />
<text  x="873.31" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (63 samples, 1.47%)</title><rect x="667.0" y="597" width="17.3" height="15.0" fill="rgb(217,168,6)" rx="2" ry="2" />
<text  x="669.99" y="607.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (1 samples, 0.02%)</title><rect x="38.9" y="805" width="0.3" height="15.0" fill="rgb(237,94,53)" rx="2" ry="2" />
<text  x="41.89" y="815.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.02%)</title><rect x="1146.0" y="501" width="0.3" height="15.0" fill="rgb(248,131,25)" rx="2" ry="2" />
<text  x="1148.98" y="511.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="34.2" y="357" width="0.3" height="15.0" fill="rgb(245,32,17)" rx="2" ry="2" />
<text  x="37.21" y="367.5" ></text>
</g>
<g >
<title>dispatcher (3 samples, 0.07%)</title><rect x="59.0" y="805" width="0.8" height="15.0" fill="rgb(243,183,8)" rx="2" ry="2" />
<text  x="61.97" y="815.5" ></text>
</g>
<g >
<title>xas_find (1 samples, 0.02%)</title><rect x="10.0" y="613" width="0.3" height="15.0" fill="rgb(224,176,10)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (43 samples, 1.00%)</title><rect x="137.4" y="789" width="11.8" height="15.0" fill="rgb(215,48,25)" rx="2" ry="2" />
<text  x="140.38" y="799.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.09%)</title><rect x="150.0" y="405" width="1.1" height="15.0" fill="rgb(215,185,29)" rx="2" ry="2" />
<text  x="153.04" y="415.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (5 samples, 0.12%)</title><rect x="967.2" y="693" width="1.3" height="15.0" fill="rgb(228,75,40)" rx="2" ry="2" />
<text  x="970.15" y="703.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (3 samples, 0.07%)</title><rect x="1177.6" y="677" width="0.8" height="15.0" fill="rgb(215,41,51)" rx="2" ry="2" />
<text  x="1180.62" y="687.5" ></text>
</g>
<g >
<title>pagevec_lookup_entries (2 samples, 0.05%)</title><rect x="1076.6" y="565" width="0.6" height="15.0" fill="rgb(207,173,34)" rx="2" ry="2" />
<text  x="1079.65" y="575.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.05%)</title><rect x="1184.2" y="597" width="0.6" height="15.0" fill="rgb(228,187,28)" rx="2" ry="2" />
<text  x="1187.22" y="607.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.02%)</title><rect x="1140.8" y="757" width="0.2" height="15.0" fill="rgb(249,203,47)" rx="2" ry="2" />
<text  x="1143.75" y="767.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1083.3" y="549" width="0.2" height="15.0" fill="rgb(222,5,12)" rx="2" ry="2" />
<text  x="1086.25" y="559.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.02%)</title><rect x="139.0" y="485" width="0.3" height="15.0" fill="rgb(247,13,33)" rx="2" ry="2" />
<text  x="142.03" y="495.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (3 samples, 0.07%)</title><rect x="1180.4" y="597" width="0.8" height="15.0" fill="rgb(216,166,2)" rx="2" ry="2" />
<text  x="1183.37" y="607.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="868.9" y="597" width="0.6" height="15.0" fill="rgb(223,162,16)" rx="2" ry="2" />
<text  x="871.93" y="607.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (2 samples, 0.05%)</title><rect x="150.0" y="229" width="0.6" height="15.0" fill="rgb(237,182,9)" rx="2" ry="2" />
<text  x="153.04" y="239.5" ></text>
</g>
<g >
<title>dispatcher (4 samples, 0.09%)</title><rect x="987.0" y="805" width="1.1" height="15.0" fill="rgb(214,176,44)" rx="2" ry="2" />
<text  x="989.96" y="815.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (1 samples, 0.02%)</title><rect x="33.7" y="453" width="0.2" height="15.0" fill="rgb(247,132,37)" rx="2" ry="2" />
<text  x="36.66" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (38 samples, 0.89%)</title><rect x="797.4" y="597" width="10.5" height="15.0" fill="rgb(236,189,50)" rx="2" ry="2" />
<text  x="800.40" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (3 samples, 0.07%)</title><rect x="690.1" y="533" width="0.8" height="15.0" fill="rgb(233,54,22)" rx="2" ry="2" />
<text  x="693.10" y="543.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (36 samples, 0.84%)</title><rect x="860.4" y="693" width="9.9" height="15.0" fill="rgb(224,23,19)" rx="2" ry="2" />
<text  x="863.40" y="703.5" ></text>
</g>
<g >
<title>irq_exit_rcu (6 samples, 0.14%)</title><rect x="1147.6" y="613" width="1.7" height="15.0" fill="rgb(205,79,11)" rx="2" ry="2" />
<text  x="1150.63" y="623.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="148.7" y="597" width="0.2" height="15.0" fill="rgb(247,7,42)" rx="2" ry="2" />
<text  x="151.66" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (38 samples, 0.89%)</title><rect x="797.4" y="613" width="10.5" height="15.0" fill="rgb(205,15,10)" rx="2" ry="2" />
<text  x="800.40" y="623.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (29 samples, 0.68%)</title><rect x="123.9" y="789" width="8.0" height="15.0" fill="rgb(241,137,28)" rx="2" ry="2" />
<text  x="126.90" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.8" y="821" width="0.3" height="15.0" fill="rgb(245,220,19)" rx="2" ry="2" />
<text  x="13.83" y="831.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (10 samples, 0.23%)</title><rect x="969.4" y="661" width="2.7" height="15.0" fill="rgb(236,122,51)" rx="2" ry="2" />
<text  x="972.35" y="671.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="1189.2" y="629" width="0.2" height="15.0" fill="rgb(228,3,44)" rx="2" ry="2" />
<text  x="1192.17" y="639.5" ></text>
</g>
<g >
<title>CachedMapWritableText (5 samples, 0.12%)</title><rect x="138.8" y="725" width="1.3" height="15.0" fill="rgb(231,114,17)" rx="2" ry="2" />
<text  x="141.76" y="735.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="1065.6" y="661" width="0.3" height="15.0" fill="rgb(252,86,10)" rx="2" ry="2" />
<text  x="1068.64" y="671.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (2 samples, 0.05%)</title><rect x="1135.3" y="693" width="0.5" height="15.0" fill="rgb(211,204,3)" rx="2" ry="2" />
<text  x="1138.25" y="703.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.16%)</title><rect x="817.8" y="549" width="1.9" height="15.0" fill="rgb(233,87,12)" rx="2" ry="2" />
<text  x="820.76" y="559.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="665.3" y="581" width="0.3" height="15.0" fill="rgb(217,116,29)" rx="2" ry="2" />
<text  x="668.34" y="591.5" ></text>
</g>
<g >
<title>NaClThreadInterfaceStart (1 samples, 0.02%)</title><rect x="1007.9" y="789" width="0.2" height="15.0" fill="rgb(240,35,2)" rx="2" ry="2" />
<text  x="1010.87" y="799.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="1077.5" y="661" width="0.3" height="15.0" fill="rgb(224,203,50)" rx="2" ry="2" />
<text  x="1080.47" y="671.5" ></text>
</g>
<g >
<title>drop_buffers (2 samples, 0.05%)</title><rect x="1075.3" y="485" width="0.5" height="15.0" fill="rgb(211,57,8)" rx="2" ry="2" />
<text  x="1078.27" y="495.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.02%)</title><rect x="38.6" y="805" width="0.3" height="15.0" fill="rgb(224,61,11)" rx="2" ry="2" />
<text  x="41.61" y="815.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.05%)</title><rect x="796.6" y="565" width="0.5" height="15.0" fill="rgb(213,48,21)" rx="2" ry="2" />
<text  x="799.57" y="575.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 0.05%)</title><rect x="983.9" y="693" width="0.6" height="15.0" fill="rgb(252,163,8)" rx="2" ry="2" />
<text  x="986.93" y="703.5" ></text>
</g>
<g >
<title>lindrustinit (1 samples, 0.02%)</title><rect x="1008.4" y="757" width="0.3" height="15.0" fill="rgb(224,1,13)" rx="2" ry="2" />
<text  x="1011.42" y="767.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="139.0" y="613" width="0.3" height="15.0" fill="rgb(249,14,9)" rx="2" ry="2" />
<text  x="142.03" y="623.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="1080.8" y="613" width="0.3" height="15.0" fill="rgb(223,84,1)" rx="2" ry="2" />
<text  x="1083.78" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.19%)</title><rect x="33.7" y="645" width="2.2" height="15.0" fill="rgb(244,108,13)" rx="2" ry="2" />
<text  x="36.66" y="655.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1064.8" y="645" width="0.3" height="15.0" fill="rgb(220,201,43)" rx="2" ry="2" />
<text  x="1067.82" y="655.5" ></text>
</g>
<g >
<title>shrink_node (74 samples, 1.73%)</title><rect x="1057.1" y="757" width="20.4" height="15.0" fill="rgb(205,12,0)" rx="2" ry="2" />
<text  x="1060.12" y="767.5" ></text>
</g>
<g >
<title>lind_exit (6 samples, 0.14%)</title><rect x="149.5" y="757" width="1.6" height="15.0" fill="rgb(211,77,22)" rx="2" ry="2" />
<text  x="152.49" y="767.5" ></text>
</g>
<g >
<title>[perf-161748.map] (2 samples, 0.05%)</title><rect x="85.4" y="821" width="0.5" height="15.0" fill="rgb(211,226,20)" rx="2" ry="2" />
<text  x="88.38" y="831.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="1056.8" y="789" width="0.3" height="15.0" fill="rgb(211,128,29)" rx="2" ry="2" />
<text  x="1059.84" y="799.5" ></text>
</g>
<g >
<title>vfs_write (8 samples, 0.19%)</title><rect x="33.7" y="597" width="2.2" height="15.0" fill="rgb(248,97,2)" rx="2" ry="2" />
<text  x="36.66" y="607.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.05%)</title><rect x="1169.4" y="645" width="0.5" height="15.0" fill="rgb(244,70,47)" rx="2" ry="2" />
<text  x="1172.37" y="655.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (1 samples, 0.02%)</title><rect x="1132.2" y="693" width="0.3" height="15.0" fill="rgb(217,150,48)" rx="2" ry="2" />
<text  x="1135.22" y="703.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.05%)</title><rect x="869.8" y="565" width="0.5" height="15.0" fill="rgb(233,206,38)" rx="2" ry="2" />
<text  x="872.76" y="575.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (7 samples, 0.16%)</title><rect x="1145.4" y="613" width="2.0" height="15.0" fill="rgb(221,184,14)" rx="2" ry="2" />
<text  x="1148.43" y="623.5" ></text>
</g>
<g >
<title>rebalance_domains (2 samples, 0.05%)</title><rect x="1147.6" y="533" width="0.6" height="15.0" fill="rgb(228,4,31)" rx="2" ry="2" />
<text  x="1150.63" y="543.5" ></text>
</g>
<g >
<title>base_from_cb_data (1 samples, 0.02%)</title><rect x="149.2" y="597" width="0.3" height="15.0" fill="rgb(240,52,7)" rx="2" ry="2" />
<text  x="152.21" y="607.5" ></text>
</g>
<g >
<title>__pagevec_release (5 samples, 0.12%)</title><rect x="1072.8" y="565" width="1.4" height="15.0" fill="rgb(228,219,2)" rx="2" ry="2" />
<text  x="1075.80" y="575.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (2 samples, 0.05%)</title><rect x="982.8" y="645" width="0.6" height="15.0" fill="rgb(215,12,46)" rx="2" ry="2" />
<text  x="985.83" y="655.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.05%)</title><rect x="1187.0" y="645" width="0.5" height="15.0" fill="rgb(207,61,44)" rx="2" ry="2" />
<text  x="1189.97" y="655.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="84.8" y="789" width="0.3" height="15.0" fill="rgb(207,216,4)" rx="2" ry="2" />
<text  x="87.83" y="799.5" ></text>
</g>
<g >
<title>NaClValidateCode (30 samples, 0.70%)</title><rect x="140.1" y="741" width="8.3" height="15.0" fill="rgb(207,111,49)" rx="2" ry="2" />
<text  x="143.13" y="751.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1077.5" y="725" width="0.3" height="15.0" fill="rgb(220,140,13)" rx="2" ry="2" />
<text  x="1080.47" y="735.5" ></text>
</g>
<g >
<title>__dl_iterate_phdr (1 samples, 0.02%)</title><rect x="149.2" y="629" width="0.3" height="15.0" fill="rgb(205,73,25)" rx="2" ry="2" />
<text  x="152.21" y="639.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (1 samples, 0.02%)</title><rect x="1077.5" y="789" width="0.3" height="15.0" fill="rgb(209,62,40)" rx="2" ry="2" />
<text  x="1080.47" y="799.5" ></text>
</g>
<g >
<title>exit_mmap (35 samples, 0.82%)</title><rect x="1019.7" y="709" width="9.6" height="15.0" fill="rgb(205,17,1)" rx="2" ry="2" />
<text  x="1022.70" y="719.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (39 samples, 0.91%)</title><rect x="1009.0" y="821" width="10.7" height="15.0" fill="rgb(206,135,34)" rx="2" ry="2" />
<text  x="1011.97" y="831.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="974.3" y="645" width="0.3" height="15.0" fill="rgb(214,194,0)" rx="2" ry="2" />
<text  x="977.30" y="655.5" ></text>
</g>
<g >
<title>NaClThreadExit (1 samples, 0.02%)</title><rect x="149.2" y="741" width="0.3" height="15.0" fill="rgb(205,180,15)" rx="2" ry="2" />
<text  x="152.21" y="751.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (14 samples, 0.33%)</title><rect x="861.5" y="629" width="3.9" height="15.0" fill="rgb(220,194,53)" rx="2" ry="2" />
<text  x="864.50" y="639.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1168.8" y="613" width="0.3" height="15.0" fill="rgb(228,219,1)" rx="2" ry="2" />
<text  x="1171.82" y="623.5" ></text>
</g>
<g >
<title>__dentry_kill (7 samples, 0.16%)</title><rect x="1068.4" y="629" width="1.9" height="15.0" fill="rgb(213,189,44)" rx="2" ry="2" />
<text  x="1071.40" y="639.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (2 samples, 0.05%)</title><rect x="1064.3" y="629" width="0.5" height="15.0" fill="rgb(241,66,18)" rx="2" ry="2" />
<text  x="1067.27" y="639.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="149.8" y="341" width="0.2" height="15.0" fill="rgb(217,181,45)" rx="2" ry="2" />
<text  x="152.76" y="351.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="1008.4" y="357" width="0.3" height="15.0" fill="rgb(224,130,30)" rx="2" ry="2" />
<text  x="1011.42" y="367.5" ></text>
</g>
<g >
<title>get_new_window_size (2 samples, 0.05%)</title><rect x="10.3" y="709" width="0.5" height="15.0" fill="rgb(209,160,34)" rx="2" ry="2" />
<text  x="13.28" y="719.5" ></text>
</g>
<g >
<title>i_callback (1 samples, 0.02%)</title><rect x="1073.3" y="373" width="0.3" height="15.0" fill="rgb(217,5,49)" rx="2" ry="2" />
<text  x="1076.35" y="383.5" ></text>
</g>
<g >
<title>rcu_do_batch (6 samples, 0.14%)</title><rect x="1081.1" y="581" width="1.6" height="15.0" fill="rgb(227,32,12)" rx="2" ry="2" />
<text  x="1084.05" y="591.5" ></text>
</g>
<g >
<title>_Unwind_IteratePhdrCallback (1 samples, 0.02%)</title><rect x="149.2" y="613" width="0.3" height="15.0" fill="rgb(221,17,12)" rx="2" ry="2" />
<text  x="152.21" y="623.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.09%)</title><rect x="863.4" y="565" width="1.1" height="15.0" fill="rgb(218,91,43)" rx="2" ry="2" />
<text  x="866.43" y="575.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (6 samples, 0.14%)</title><rect x="1147.6" y="581" width="1.7" height="15.0" fill="rgb(239,128,39)" rx="2" ry="2" />
<text  x="1150.63" y="591.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1080.2" y="565" width="0.3" height="15.0" fill="rgb(205,170,16)" rx="2" ry="2" />
<text  x="1083.23" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.02%)</title><rect x="85.1" y="757" width="0.3" height="15.0" fill="rgb(252,157,24)" rx="2" ry="2" />
<text  x="88.11" y="767.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.02%)</title><rect x="1029.3" y="549" width="0.3" height="15.0" fill="rgb(215,85,36)" rx="2" ry="2" />
<text  x="1032.33" y="559.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.02%)</title><rect x="1140.8" y="741" width="0.2" height="15.0" fill="rgb(229,62,41)" rx="2" ry="2" />
<text  x="1143.75" y="751.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (4 samples, 0.09%)</title><rect x="150.0" y="533" width="1.1" height="15.0" fill="rgb(217,107,10)" rx="2" ry="2" />
<text  x="153.04" y="543.5" ></text>
</g>
<g >
<title>truncate_exceptional_pvec_entries.part.0 (1 samples, 0.02%)</title><rect x="1071.7" y="581" width="0.3" height="15.0" fill="rgb(214,165,18)" rx="2" ry="2" />
<text  x="1074.70" y="591.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1067.3" y="581" width="0.3" height="15.0" fill="rgb(235,182,14)" rx="2" ry="2" />
<text  x="1070.30" y="591.5" ></text>
</g>
<g >
<title>arch_call_rest_init (174 samples, 4.06%)</title><rect x="1142.1" y="757" width="47.9" height="15.0" fill="rgb(228,176,25)" rx="2" ry="2" />
<text  x="1145.13" y="767.5" >arch..</text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::GenericInode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="1008.4" y="341" width="0.3" height="15.0" fill="rgb(210,93,35)" rx="2" ry="2" />
<text  x="1011.42" y="351.5" ></text>
</g>
<g >
<title>ext4_releasepage (5 samples, 0.12%)</title><rect x="1066.5" y="661" width="1.3" height="15.0" fill="rgb(250,182,28)" rx="2" ry="2" />
<text  x="1069.47" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (80 samples, 1.87%)</title><rect x="11.1" y="677" width="22.0" height="15.0" fill="rgb(247,14,16)" rx="2" ry="2" />
<text  x="14.10" y="687.5" >_..</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (4 samples, 0.09%)</title><rect x="774.3" y="613" width="1.1" height="15.0" fill="rgb(243,113,37)" rx="2" ry="2" />
<text  x="777.29" y="623.5" ></text>
</g>
<g >
<title>get_typical_interval (5 samples, 0.12%)</title><rect x="1171.3" y="645" width="1.4" height="15.0" fill="rgb(251,3,50)" rx="2" ry="2" />
<text  x="1174.29" y="655.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1063.4" y="629" width="0.3" height="15.0" fill="rgb(229,75,4)" rx="2" ry="2" />
<text  x="1066.44" y="639.5" ></text>
</g>
<g >
<title>serde_json::de::from_str (1 samples, 0.02%)</title><rect x="1008.4" y="709" width="0.3" height="15.0" fill="rgb(211,13,18)" rx="2" ry="2" />
<text  x="1011.42" y="719.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="867.8" y="533" width="0.6" height="15.0" fill="rgb(252,33,3)" rx="2" ry="2" />
<text  x="870.83" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="139.9" y="629" width="0.2" height="15.0" fill="rgb(232,48,21)" rx="2" ry="2" />
<text  x="142.86" y="639.5" ></text>
</g>
<g >
<title>menu_update (3 samples, 0.07%)</title><rect x="1172.7" y="645" width="0.8" height="15.0" fill="rgb(207,21,39)" rx="2" ry="2" />
<text  x="1175.67" y="655.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.02%)</title><rect x="976.8" y="773" width="0.3" height="15.0" fill="rgb(250,168,33)" rx="2" ry="2" />
<text  x="979.78" y="783.5" ></text>
</g>
<g >
<title>x86_pmu_enable (65 samples, 1.52%)</title><rect x="15.2" y="485" width="17.9" height="15.0" fill="rgb(254,30,45)" rx="2" ry="2" />
<text  x="18.23" y="495.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.02%)</title><rect x="10.8" y="837" width="0.3" height="15.0" fill="rgb(242,17,43)" rx="2" ry="2" />
<text  x="13.83" y="847.5" ></text>
</g>
<g >
<title>destroy_inode (1 samples, 0.02%)</title><rect x="1069.8" y="533" width="0.2" height="15.0" fill="rgb(214,167,8)" rx="2" ry="2" />
<text  x="1072.77" y="543.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.05%)</title><rect x="148.7" y="693" width="0.5" height="15.0" fill="rgb(210,101,53)" rx="2" ry="2" />
<text  x="151.66" y="703.5" ></text>
</g>
<g >
<title>kthread (79 samples, 1.84%)</title><rect x="1057.1" y="805" width="21.8" height="15.0" fill="rgb(206,113,42)" rx="2" ry="2" />
<text  x="1060.12" y="815.5" >k..</text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="1029.3" y="629" width="0.3" height="15.0" fill="rgb(207,123,32)" rx="2" ry="2" />
<text  x="1032.33" y="639.5" ></text>
</g>
<g >
<title>new_sync_write (8 samples, 0.19%)</title><rect x="33.7" y="581" width="2.2" height="15.0" fill="rgb(217,2,30)" rx="2" ry="2" />
<text  x="36.66" y="591.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.02%)</title><rect x="1135.0" y="693" width="0.3" height="15.0" fill="rgb(230,20,47)" rx="2" ry="2" />
<text  x="1137.98" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="982.8" y="741" width="0.6" height="15.0" fill="rgb(222,9,2)" rx="2" ry="2" />
<text  x="985.83" y="751.5" ></text>
</g>
<g >
<title>read (1 samples, 0.02%)</title><rect x="33.1" y="725" width="0.3" height="15.0" fill="rgb(240,50,13)" rx="2" ry="2" />
<text  x="36.11" y="735.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="821.3" y="565" width="1.4" height="15.0" fill="rgb(245,159,21)" rx="2" ry="2" />
<text  x="824.34" y="575.5" ></text>
</g>
<g >
<title>NaClApplyPatchToMemory (1 samples, 0.02%)</title><rect x="1008.1" y="661" width="0.3" height="15.0" fill="rgb(205,160,12)" rx="2" ry="2" />
<text  x="1011.14" y="671.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.23%)</title><rect x="862.6" y="581" width="2.8" height="15.0" fill="rgb(210,124,16)" rx="2" ry="2" />
<text  x="865.60" y="591.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="862.1" y="565" width="0.2" height="15.0" fill="rgb(251,47,5)" rx="2" ry="2" />
<text  x="865.05" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (32 samples, 0.75%)</title><rect x="861.5" y="661" width="8.8" height="15.0" fill="rgb(221,2,14)" rx="2" ry="2" />
<text  x="864.50" y="671.5" ></text>
</g>
<g >
<title>NaClXMutexLock (28 samples, 0.65%)</title><rect x="124.2" y="773" width="7.7" height="15.0" fill="rgb(250,194,53)" rx="2" ry="2" />
<text  x="127.18" y="783.5" ></text>
</g>
<g >
<title>__alloc_pages_slowpath.constprop.0 (2 samples, 0.05%)</title><rect x="954.2" y="661" width="0.6" height="15.0" fill="rgb(254,83,54)" rx="2" ry="2" />
<text  x="957.22" y="671.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (14 samples, 0.33%)</title><rect x="861.5" y="613" width="3.9" height="15.0" fill="rgb(243,74,38)" rx="2" ry="2" />
<text  x="864.50" y="623.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.72%)</title><rect x="579.8" y="677" width="8.5" height="15.0" fill="rgb(254,26,33)" rx="2" ry="2" />
<text  x="582.78" y="687.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13 samples, 0.30%)</title><rect x="1080.2" y="693" width="3.6" height="15.0" fill="rgb(244,176,10)" rx="2" ry="2" />
<text  x="1083.23" y="703.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.05%)</title><rect x="1168.5" y="629" width="0.6" height="15.0" fill="rgb(236,199,38)" rx="2" ry="2" />
<text  x="1171.54" y="639.5" ></text>
</g>
<g >
<title>follow_pud_mask.isra.0 (1 samples, 0.02%)</title><rect x="983.4" y="613" width="0.3" height="15.0" fill="rgb(236,190,26)" rx="2" ry="2" />
<text  x="986.38" y="623.5" ></text>
</g>
<g >
<title>NaClAppThreadSpawn (1 samples, 0.02%)</title><rect x="151.4" y="741" width="0.3" height="15.0" fill="rgb(227,215,33)" rx="2" ry="2" />
<text  x="154.41" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.05%)</title><rect x="1175.7" y="581" width="0.5" height="15.0" fill="rgb(252,151,52)" rx="2" ry="2" />
<text  x="1178.69" y="591.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (1 samples, 0.02%)</title><rect x="852.1" y="613" width="0.3" height="15.0" fill="rgb(234,125,43)" rx="2" ry="2" />
<text  x="855.15" y="623.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="1138.6" y="677" width="0.2" height="15.0" fill="rgb(238,116,3)" rx="2" ry="2" />
<text  x="1141.55" y="687.5" ></text>
</g>
<g >
<title>ext4_free_in_core_inode (1 samples, 0.02%)</title><rect x="1064.8" y="485" width="0.3" height="15.0" fill="rgb(248,63,42)" rx="2" ry="2" />
<text  x="1067.82" y="495.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="1145.4" y="533" width="0.3" height="15.0" fill="rgb(210,14,32)" rx="2" ry="2" />
<text  x="1148.43" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3 samples, 0.07%)</title><rect x="1080.2" y="645" width="0.9" height="15.0" fill="rgb(222,196,28)" rx="2" ry="2" />
<text  x="1083.23" y="655.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (174 samples, 4.06%)</title><rect x="1142.1" y="805" width="47.9" height="15.0" fill="rgb(227,206,23)" rx="2" ry="2" />
<text  x="1145.13" y="815.5" >x86_..</text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="1077.2" y="693" width="0.3" height="15.0" fill="rgb(205,175,34)" rx="2" ry="2" />
<text  x="1080.20" y="703.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="984.8" y="805" width="0.2" height="15.0" fill="rgb(247,108,25)" rx="2" ry="2" />
<text  x="987.76" y="815.5" ></text>
</g>
<g >
<title>inode_add_lru (1 samples, 0.02%)</title><rect x="1070.0" y="549" width="0.3" height="15.0" fill="rgb(239,100,22)" rx="2" ry="2" />
<text  x="1073.05" y="559.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="852.4" y="613" width="0.3" height="15.0" fill="rgb(208,193,39)" rx="2" ry="2" />
<text  x="855.42" y="623.5" ></text>
</g>
<g >
<title>rcu_core_si (6 samples, 0.14%)</title><rect x="1081.1" y="613" width="1.6" height="15.0" fill="rgb(244,124,20)" rx="2" ry="2" />
<text  x="1084.05" y="623.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (38 samples, 0.89%)</title><rect x="870.3" y="693" width="10.5" height="15.0" fill="rgb(224,214,46)" rx="2" ry="2" />
<text  x="873.31" y="703.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (86 samples, 2.01%)</title><rect x="313.2" y="613" width="23.6" height="15.0" fill="rgb(230,201,26)" rx="2" ry="2" />
<text  x="316.18" y="623.5" >c..</text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="1029.3" y="645" width="0.3" height="15.0" fill="rgb(215,215,52)" rx="2" ry="2" />
<text  x="1032.33" y="655.5" ></text>
</g>
<g >
<title>shrink_lruvec (37 samples, 0.86%)</title><rect x="1057.7" y="725" width="10.1" height="15.0" fill="rgb(237,89,3)" rx="2" ry="2" />
<text  x="1060.67" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.02%)</title><rect x="831.8" y="597" width="0.3" height="15.0" fill="rgb(231,32,34)" rx="2" ry="2" />
<text  x="834.79" y="607.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (1 samples, 0.02%)</title><rect x="39.7" y="805" width="0.3" height="15.0" fill="rgb(221,53,54)" rx="2" ry="2" />
<text  x="42.71" y="815.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (22 samples, 0.51%)</title><rect x="536.6" y="757" width="6.0" height="15.0" fill="rgb(207,5,52)" rx="2" ry="2" />
<text  x="539.58" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (15 samples, 0.35%)</title><rect x="584.2" y="629" width="4.1" height="15.0" fill="rgb(221,221,19)" rx="2" ry="2" />
<text  x="587.18" y="639.5" ></text>
</g>
<g >
<title>stop_this_handle (1 samples, 0.02%)</title><rect x="34.5" y="405" width="0.3" height="15.0" fill="rgb(244,81,3)" rx="2" ry="2" />
<text  x="37.49" y="415.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (1 samples, 0.02%)</title><rect x="543.7" y="757" width="0.3" height="15.0" fill="rgb(249,33,5)" rx="2" ry="2" />
<text  x="546.74" y="767.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.14%)</title><rect x="868.7" y="629" width="1.6" height="15.0" fill="rgb(220,49,49)" rx="2" ry="2" />
<text  x="871.66" y="639.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="1180.6" y="517" width="0.3" height="15.0" fill="rgb(236,193,16)" rx="2" ry="2" />
<text  x="1183.65" y="527.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13 samples, 0.30%)</title><rect x="1080.2" y="709" width="3.6" height="15.0" fill="rgb(235,136,37)" rx="2" ry="2" />
<text  x="1083.23" y="719.5" ></text>
</g>
<g >
<title>rl_make_bare_keymap (1 samples, 0.02%)</title><rect x="10.3" y="613" width="0.3" height="15.0" fill="rgb(214,223,36)" rx="2" ry="2" />
<text  x="13.28" y="623.5" ></text>
</g>
<g >
<title>mem_cgroup_from_obj (1 samples, 0.02%)</title><rect x="1074.4" y="437" width="0.3" height="15.0" fill="rgb(234,151,11)" rx="2" ry="2" />
<text  x="1077.45" y="447.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="139.9" y="613" width="0.2" height="15.0" fill="rgb(209,139,22)" rx="2" ry="2" />
<text  x="142.86" y="623.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (26 samples, 0.61%)</title><rect x="823.5" y="581" width="7.2" height="15.0" fill="rgb(231,64,39)" rx="2" ry="2" />
<text  x="826.54" y="591.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.02%)</title><rect x="1133.3" y="741" width="0.3" height="15.0" fill="rgb(228,76,45)" rx="2" ry="2" />
<text  x="1136.32" y="751.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (12 samples, 0.28%)</title><rect x="1137.2" y="693" width="3.3" height="15.0" fill="rgb(205,145,25)" rx="2" ry="2" />
<text  x="1140.18" y="703.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.19%)</title><rect x="866.5" y="597" width="2.2" height="15.0" fill="rgb(216,90,3)" rx="2" ry="2" />
<text  x="869.46" y="607.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="1188.9" y="613" width="0.3" height="15.0" fill="rgb(229,45,51)" rx="2" ry="2" />
<text  x="1191.90" y="623.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.02%)</title><rect x="1132.8" y="693" width="0.2" height="15.0" fill="rgb(227,220,54)" rx="2" ry="2" />
<text  x="1135.77" y="703.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (19 samples, 0.44%)</title><rect x="1181.2" y="629" width="5.2" height="15.0" fill="rgb(229,133,48)" rx="2" ry="2" />
<text  x="1184.20" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (3 samples, 0.07%)</title><rect x="690.1" y="549" width="0.8" height="15.0" fill="rgb(224,208,37)" rx="2" ry="2" />
<text  x="693.10" y="559.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (12 samples, 0.28%)</title><rect x="963.8" y="629" width="3.4" height="15.0" fill="rgb(228,220,3)" rx="2" ry="2" />
<text  x="966.85" y="639.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (1 samples, 0.02%)</title><rect x="973.2" y="677" width="0.3" height="15.0" fill="rgb(219,24,26)" rx="2" ry="2" />
<text  x="976.20" y="687.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.02%)</title><rect x="1077.8" y="661" width="0.2" height="15.0" fill="rgb(235,73,13)" rx="2" ry="2" />
<text  x="1080.75" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1055.7" y="757" width="0.3" height="15.0" fill="rgb(242,91,10)" rx="2" ry="2" />
<text  x="1058.74" y="767.5" ></text>
</g>
<g >
<title>page_cache_delete (5 samples, 0.12%)</title><rect x="1062.9" y="645" width="1.4" height="15.0" fill="rgb(241,146,54)" rx="2" ry="2" />
<text  x="1065.89" y="655.5" ></text>
</g>
<g >
<title>std::thread::panicking (3 samples, 0.07%)</title><rect x="690.1" y="597" width="0.8" height="15.0" fill="rgb(241,52,20)" rx="2" ry="2" />
<text  x="693.10" y="607.5" ></text>
</g>
<g >
<title>handle_mm_fault (93 samples, 2.17%)</title><rect x="950.1" y="757" width="25.6" height="15.0" fill="rgb(226,21,5)" rx="2" ry="2" />
<text  x="953.09" y="767.5" >h..</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="1077.8" y="677" width="0.2" height="15.0" fill="rgb(246,53,20)" rx="2" ry="2" />
<text  x="1080.75" y="687.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="10.0" y="677" width="0.3" height="15.0" fill="rgb(252,195,19)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.02%)</title><rect x="139.9" y="565" width="0.2" height="15.0" fill="rgb(224,111,2)" rx="2" ry="2" />
<text  x="142.86" y="575.5" ></text>
</g>
<g >
<title>page_add_file_rmap (1 samples, 0.02%)</title><rect x="975.1" y="645" width="0.3" height="15.0" fill="rgb(227,50,31)" rx="2" ry="2" />
<text  x="978.13" y="655.5" ></text>
</g>
<g >
<title>HandleStackContext (1 samples, 0.02%)</title><rect x="87.0" y="805" width="0.3" height="15.0" fill="rgb(234,15,23)" rx="2" ry="2" />
<text  x="90.03" y="815.5" ></text>
</g>
<g >
<title>record__write (9 samples, 0.21%)</title><rect x="33.4" y="709" width="2.5" height="15.0" fill="rgb(233,31,27)" rx="2" ry="2" />
<text  x="36.39" y="719.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.02%)</title><rect x="1179.0" y="677" width="0.3" height="15.0" fill="rgb(244,225,42)" rx="2" ry="2" />
<text  x="1182.00" y="687.5" ></text>
</g>
<g >
<title>perf_event__prepare_comm (1 samples, 0.02%)</title><rect x="33.1" y="757" width="0.3" height="15.0" fill="rgb(226,74,51)" rx="2" ry="2" />
<text  x="36.11" y="767.5" ></text>
</g>
<g >
<title>NaClXMutexLock (2 samples, 0.05%)</title><rect x="900.3" y="789" width="0.5" height="15.0" fill="rgb(205,170,16)" rx="2" ry="2" />
<text  x="903.30" y="799.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.07%)</title><rect x="148.4" y="757" width="0.8" height="15.0" fill="rgb(224,16,40)" rx="2" ry="2" />
<text  x="151.39" y="767.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (6 samples, 0.14%)</title><rect x="1174.6" y="613" width="1.6" height="15.0" fill="rgb(254,200,39)" rx="2" ry="2" />
<text  x="1177.59" y="623.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (292 samples, 6.81%)</title><rect x="448.8" y="597" width="80.4" height="15.0" fill="rgb(224,134,6)" rx="2" ry="2" />
<text  x="451.82" y="607.5" >ringbuf::..</text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1083.3" y="565" width="0.2" height="15.0" fill="rgb(211,50,46)" rx="2" ry="2" />
<text  x="1086.25" y="575.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="10.6" y="565" width="0.2" height="15.0" fill="rgb(252,146,7)" rx="2" ry="2" />
<text  x="13.55" y="575.5" ></text>
</g>
<g >
<title>_Unwind_Find_FDE (1 samples, 0.02%)</title><rect x="149.2" y="645" width="0.3" height="15.0" fill="rgb(247,117,22)" rx="2" ry="2" />
<text  x="152.21" y="655.5" ></text>
</g>
<g >
<title>shrink_inactive_list (32 samples, 0.75%)</title><rect x="1059.0" y="709" width="8.8" height="15.0" fill="rgb(217,226,34)" rx="2" ry="2" />
<text  x="1062.04" y="719.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.02%)</title><rect x="151.1" y="757" width="0.3" height="15.0" fill="rgb(240,191,27)" rx="2" ry="2" />
<text  x="154.14" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (194 samples, 4.52%)</title><rect x="690.1" y="645" width="53.4" height="15.0" fill="rgb(224,162,15)" rx="2" ry="2" />
<text  x="693.10" y="655.5" >core:..</text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (1 samples, 0.02%)</title><rect x="1008.4" y="437" width="0.3" height="15.0" fill="rgb(239,54,44)" rx="2" ry="2" />
<text  x="1011.42" y="447.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1064.8" y="565" width="0.3" height="15.0" fill="rgb(218,170,11)" rx="2" ry="2" />
<text  x="1067.82" y="575.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="1073.3" y="421" width="0.3" height="15.0" fill="rgb(244,220,44)" rx="2" ry="2" />
<text  x="1076.35" y="431.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.02%)</title><rect x="1176.5" y="613" width="0.3" height="15.0" fill="rgb(222,78,32)" rx="2" ry="2" />
<text  x="1179.52" y="623.5" ></text>
</g>
<g >
<title>DynArrayGet (1 samples, 0.02%)</title><rect x="982.6" y="805" width="0.2" height="15.0" fill="rgb(213,189,11)" rx="2" ry="2" />
<text  x="985.56" y="815.5" ></text>
</g>
<g >
<title>try_to_release_page (5 samples, 0.12%)</title><rect x="1066.5" y="677" width="1.3" height="15.0" fill="rgb(221,210,21)" rx="2" ry="2" />
<text  x="1069.47" y="687.5" ></text>
</g>
<g >
<title>__perf_event_enable (65 samples, 1.52%)</title><rect x="15.2" y="517" width="17.9" height="15.0" fill="rgb(242,225,1)" rx="2" ry="2" />
<text  x="18.23" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="150.6" y="309" width="0.3" height="15.0" fill="rgb(240,154,3)" rx="2" ry="2" />
<text  x="153.59" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="151.4" y="581" width="0.3" height="15.0" fill="rgb(231,200,3)" rx="2" ry="2" />
<text  x="154.41" y="591.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="139.0" y="581" width="0.3" height="15.0" fill="rgb(254,168,48)" rx="2" ry="2" />
<text  x="142.03" y="591.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.12%)</title><rect x="167.4" y="597" width="1.3" height="15.0" fill="rgb(248,82,21)" rx="2" ry="2" />
<text  x="170.37" y="607.5" ></text>
</g>
<g >
<title>find_busiest_group (3 samples, 0.07%)</title><rect x="1180.4" y="613" width="0.8" height="15.0" fill="rgb(246,6,33)" rx="2" ry="2" />
<text  x="1183.37" y="623.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 0.02%)</title><rect x="10.8" y="805" width="0.3" height="15.0" fill="rgb(242,181,21)" rx="2" ry="2" />
<text  x="13.83" y="815.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.02%)</title><rect x="149.8" y="645" width="0.2" height="15.0" fill="rgb(244,134,44)" rx="2" ry="2" />
<text  x="152.76" y="655.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.02%)</title><rect x="149.8" y="373" width="0.2" height="15.0" fill="rgb(215,70,45)" rx="2" ry="2" />
<text  x="152.76" y="383.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,330 samples, 31.01%)</title><rect x="534.4" y="789" width="365.9" height="15.0" fill="rgb(229,168,22)" rx="2" ry="2" />
<text  x="537.38" y="799.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.07%)</title><rect x="419.9" y="565" width="0.9" height="15.0" fill="rgb(220,159,46)" rx="2" ry="2" />
<text  x="422.93" y="575.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (36 samples, 0.84%)</title><rect x="758.3" y="581" width="9.9" height="15.0" fill="rgb(241,170,9)" rx="2" ry="2" />
<text  x="761.33" y="591.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (7 samples, 0.16%)</title><rect x="817.8" y="597" width="1.9" height="15.0" fill="rgb(222,152,49)" rx="2" ry="2" />
<text  x="820.76" y="607.5" ></text>
</g>
<g >
<title>drop_buffers (1 samples, 0.02%)</title><rect x="1066.5" y="629" width="0.2" height="15.0" fill="rgb(211,83,34)" rx="2" ry="2" />
<text  x="1069.47" y="639.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="1073.6" y="501" width="0.3" height="15.0" fill="rgb(238,55,43)" rx="2" ry="2" />
<text  x="1076.62" y="511.5" ></text>
</g>
<g >
<title>ext4_clear_inode (3 samples, 0.07%)</title><rect x="1070.9" y="613" width="0.8" height="15.0" fill="rgb(209,101,20)" rx="2" ry="2" />
<text  x="1073.87" y="623.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (2 samples, 0.05%)</title><rect x="983.9" y="757" width="0.6" height="15.0" fill="rgb(249,44,31)" rx="2" ry="2" />
<text  x="986.93" y="767.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (3 samples, 0.07%)</title><rect x="535.2" y="773" width="0.8" height="15.0" fill="rgb(233,125,39)" rx="2" ry="2" />
<text  x="538.21" y="783.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (47 samples, 1.10%)</title><rect x="954.2" y="677" width="13.0" height="15.0" fill="rgb(238,222,49)" rx="2" ry="2" />
<text  x="957.22" y="687.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1131.9" y="677" width="0.3" height="15.0" fill="rgb(228,222,13)" rx="2" ry="2" />
<text  x="1134.95" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="982.8" y="757" width="0.6" height="15.0" fill="rgb(249,10,12)" rx="2" ry="2" />
<text  x="985.83" y="767.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2 samples, 0.05%)</title><rect x="796.6" y="549" width="0.5" height="15.0" fill="rgb(234,183,9)" rx="2" ry="2" />
<text  x="799.57" y="559.5" ></text>
</g>
<g >
<title>ret_from_fork (79 samples, 1.84%)</title><rect x="1057.1" y="821" width="21.8" height="15.0" fill="rgb(253,1,26)" rx="2" ry="2" />
<text  x="1060.12" y="831.5" >r..</text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="852.4" y="597" width="0.3" height="15.0" fill="rgb(242,104,14)" rx="2" ry="2" />
<text  x="855.42" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="665.3" y="565" width="0.3" height="15.0" fill="rgb(217,45,29)" rx="2" ry="2" />
<text  x="668.34" y="575.5" ></text>
</g>
<g >
<title>call_rcu (1 samples, 0.02%)</title><rect x="1069.8" y="517" width="0.2" height="15.0" fill="rgb(242,161,4)" rx="2" ry="2" />
<text  x="1072.77" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1,390 samples, 32.41%)</title><rect x="152.0" y="693" width="382.4" height="15.0" fill="rgb(237,176,7)" rx="2" ry="2" />
<text  x="154.96" y="703.5" >rustposix::safeposix::dispatcher::dispatcher::{{clos..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.09%)</title><rect x="150.0" y="549" width="1.1" height="15.0" fill="rgb(248,143,51)" rx="2" ry="2" />
<text  x="153.04" y="559.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (30 samples, 0.70%)</title><rect x="140.1" y="725" width="8.3" height="15.0" fill="rgb(212,204,5)" rx="2" ry="2" />
<text  x="143.13" y="735.5" ></text>
</g>
<g >
<title>perf_ioctl (80 samples, 1.87%)</title><rect x="11.1" y="661" width="22.0" height="15.0" fill="rgb(208,140,0)" rx="2" ry="2" />
<text  x="14.10" y="671.5" >p..</text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (4 samples, 0.09%)</title><rect x="150.0" y="517" width="1.1" height="15.0" fill="rgb(212,80,28)" rx="2" ry="2" />
<text  x="153.04" y="527.5" ></text>
</g>
<g >
<title>wait_for (2 samples, 0.05%)</title><rect x="10.3" y="725" width="0.5" height="15.0" fill="rgb(232,170,42)" rx="2" ry="2" />
<text  x="13.28" y="735.5" ></text>
</g>
<g >
<title>process_vm_writev (2 samples, 0.05%)</title><rect x="982.8" y="773" width="0.6" height="15.0" fill="rgb(244,3,13)" rx="2" ry="2" />
<text  x="985.83" y="783.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.05%)</title><rect x="954.2" y="629" width="0.6" height="15.0" fill="rgb(253,100,33)" rx="2" ry="2" />
<text  x="957.22" y="639.5" ></text>
</g>
<g >
<title>zap_pte_range (35 samples, 0.82%)</title><rect x="1019.7" y="629" width="9.6" height="15.0" fill="rgb(242,77,48)" rx="2" ry="2" />
<text  x="1022.70" y="639.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.19%)</title><rect x="743.5" y="629" width="2.2" height="15.0" fill="rgb(205,80,37)" rx="2" ry="2" />
<text  x="746.48" y="639.5" ></text>
</g>
<g >
<title>refill_obj_stock (1 samples, 0.02%)</title><rect x="1067.6" y="565" width="0.2" height="15.0" fill="rgb(205,106,42)" rx="2" ry="2" />
<text  x="1070.57" y="575.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="817.5" y="565" width="0.3" height="15.0" fill="rgb(249,9,20)" rx="2" ry="2" />
<text  x="820.48" y="575.5" ></text>
</g>
<g >
<title>_rl_set_screen_size (1 samples, 0.02%)</title><rect x="10.3" y="693" width="0.3" height="15.0" fill="rgb(216,200,25)" rx="2" ry="2" />
<text  x="13.28" y="703.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (11 samples, 0.26%)</title><rect x="67.2" y="757" width="3.1" height="15.0" fill="rgb(236,29,43)" rx="2" ry="2" />
<text  x="70.23" y="767.5" ></text>
</g>
<g >
<title>rcu_idle_enter (2 samples, 0.05%)</title><rect x="1132.2" y="709" width="0.6" height="15.0" fill="rgb(238,125,32)" rx="2" ry="2" />
<text  x="1135.22" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="139.6" y="661" width="0.3" height="15.0" fill="rgb(221,167,54)" rx="2" ry="2" />
<text  x="142.58" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (3 samples, 0.07%)</title><rect x="46.3" y="805" width="0.8" height="15.0" fill="rgb(246,225,18)" rx="2" ry="2" />
<text  x="49.32" y="815.5" ></text>
</g>
<g >
<title>lind_read (1,390 samples, 32.41%)</title><rect x="152.0" y="725" width="382.4" height="15.0" fill="rgb(227,186,22)" rx="2" ry="2" />
<text  x="154.96" y="735.5" >lind_read</text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (1 samples, 0.02%)</title><rect x="1188.6" y="645" width="0.3" height="15.0" fill="rgb(223,59,0)" rx="2" ry="2" />
<text  x="1191.62" y="655.5" ></text>
</g>
<g >
<title>do_iter_write (8 samples, 0.19%)</title><rect x="33.7" y="533" width="2.2" height="15.0" fill="rgb(236,198,39)" rx="2" ry="2" />
<text  x="36.66" y="543.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="1055.7" y="821" width="0.3" height="15.0" fill="rgb(247,74,42)" rx="2" ry="2" />
<text  x="1058.74" y="831.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="755.3" y="581" width="0.3" height="15.0" fill="rgb(213,205,8)" rx="2" ry="2" />
<text  x="758.31" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="150.3" y="37" width="0.3" height="15.0" fill="rgb(251,13,40)" rx="2" ry="2" />
<text  x="153.31" y="47.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="10.0" y="741" width="0.3" height="15.0" fill="rgb(253,101,1)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (30 samples, 0.70%)</title><rect x="536.0" y="773" width="8.3" height="15.0" fill="rgb(243,177,47)" rx="2" ry="2" />
<text  x="539.03" y="783.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="1007.9" y="565" width="0.2" height="15.0" fill="rgb(251,153,38)" rx="2" ry="2" />
<text  x="1010.87" y="575.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="1029.3" y="741" width="0.3" height="15.0" fill="rgb(207,123,38)" rx="2" ry="2" />
<text  x="1032.33" y="751.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="1073.9" y="533" width="0.3" height="15.0" fill="rgb(211,47,53)" rx="2" ry="2" />
<text  x="1076.90" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="139.6" y="629" width="0.3" height="15.0" fill="rgb(219,42,1)" rx="2" ry="2" />
<text  x="142.58" y="639.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.02%)</title><rect x="149.8" y="389" width="0.2" height="15.0" fill="rgb(243,105,16)" rx="2" ry="2" />
<text  x="152.76" y="399.5" ></text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (4 samples, 0.09%)</title><rect x="138.8" y="709" width="1.1" height="15.0" fill="rgb(253,57,13)" rx="2" ry="2" />
<text  x="141.76" y="719.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="975.1" y="709" width="0.3" height="15.0" fill="rgb(216,117,4)" rx="2" ry="2" />
<text  x="978.13" y="719.5" ></text>
</g>
<g >
<title>xmalloc (1 samples, 0.02%)</title><rect x="10.6" y="629" width="0.2" height="15.0" fill="rgb(248,187,24)" rx="2" ry="2" />
<text  x="13.55" y="639.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (3 samples, 0.07%)</title><rect x="138.8" y="677" width="0.8" height="15.0" fill="rgb(218,63,21)" rx="2" ry="2" />
<text  x="141.76" y="687.5" ></text>
</g>
<g >
<title>[unknown]  (296 samples, 6.90%)</title><rect x="900.8" y="821" width="81.5" height="15.0" fill="rgb(222,135,17)" rx="2" ry="2" />
<text  x="903.85" y="831.5" >[unknown] </text>
</g>
<g >
<title>NaClMutexUnlock (18 samples, 0.42%)</title><rect x="537.7" y="725" width="4.9" height="15.0" fill="rgb(205,212,15)" rx="2" ry="2" />
<text  x="540.68" y="735.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="1008.4" y="309" width="0.3" height="15.0" fill="rgb(207,94,0)" rx="2" ry="2" />
<text  x="1011.42" y="319.5" ></text>
</g>
<g >
<title>dispatcher@plt (1 samples, 0.02%)</title><rect x="880.8" y="709" width="0.2" height="15.0" fill="rgb(205,224,49)" rx="2" ry="2" />
<text  x="883.76" y="719.5" ></text>
</g>
<g >
<title>super_cache_scan (33 samples, 0.77%)</title><rect x="1068.1" y="677" width="9.1" height="15.0" fill="rgb(207,56,17)" rx="2" ry="2" />
<text  x="1071.12" y="687.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="148.7" y="629" width="0.2" height="15.0" fill="rgb(219,43,4)" rx="2" ry="2" />
<text  x="151.66" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (26 samples, 0.61%)</title><rect x="823.5" y="565" width="7.2" height="15.0" fill="rgb(248,106,14)" rx="2" ry="2" />
<text  x="826.54" y="575.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1064.8" y="597" width="0.3" height="15.0" fill="rgb(233,124,25)" rx="2" ry="2" />
<text  x="1067.82" y="607.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (43 samples, 1.00%)</title><rect x="137.4" y="773" width="11.8" height="15.0" fill="rgb(216,197,49)" rx="2" ry="2" />
<text  x="140.38" y="783.5" ></text>
</g>
<g >
<title>__GI___clone (1 samples, 0.02%)</title><rect x="1007.9" y="821" width="0.2" height="15.0" fill="rgb(224,144,9)" rx="2" ry="2" />
<text  x="1010.87" y="831.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.02%)</title><rect x="1008.7" y="757" width="0.3" height="15.0" fill="rgb(242,216,26)" rx="2" ry="2" />
<text  x="1011.69" y="767.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.02%)</title><rect x="534.1" y="661" width="0.3" height="15.0" fill="rgb(212,203,20)" rx="2" ry="2" />
<text  x="537.11" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (31 samples, 0.72%)</title><rect x="579.8" y="693" width="8.5" height="15.0" fill="rgb(238,3,22)" rx="2" ry="2" />
<text  x="582.78" y="703.5" ></text>
</g>
<g >
<title>pick_next_task_fair (24 samples, 0.56%)</title><rect x="1180.1" y="661" width="6.6" height="15.0" fill="rgb(227,208,3)" rx="2" ry="2" />
<text  x="1183.10" y="671.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.19%)</title><rect x="866.5" y="581" width="2.2" height="15.0" fill="rgb(248,38,13)" rx="2" ry="2" />
<text  x="869.46" y="591.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (260 samples, 6.06%)</title><rect x="457.6" y="565" width="71.6" height="15.0" fill="rgb(243,45,36)" rx="2" ry="2" />
<text  x="460.62" y="575.5" >__memmov..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (52 samples, 1.21%)</title><rect x="988.3" y="805" width="14.3" height="15.0" fill="rgb(226,91,12)" rx="2" ry="2" />
<text  x="991.34" y="815.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="150.3" y="101" width="0.3" height="15.0" fill="rgb(251,35,36)" rx="2" ry="2" />
<text  x="153.31" y="111.5" ></text>
</g>
<g >
<title>run_rebalance_domains (4 samples, 0.09%)</title><rect x="1082.7" y="613" width="1.1" height="15.0" fill="rgb(221,7,4)" rx="2" ry="2" />
<text  x="1085.70" y="623.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.02%)</title><rect x="139.6" y="581" width="0.3" height="15.0" fill="rgb(239,98,39)" rx="2" ry="2" />
<text  x="142.58" y="591.5" ></text>
</g>
<g >
<title>iput.part.0 (5 samples, 0.12%)</title><rect x="1068.9" y="581" width="1.4" height="15.0" fill="rgb(211,41,42)" rx="2" ry="2" />
<text  x="1071.95" y="591.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.07%)</title><rect x="419.9" y="581" width="0.9" height="15.0" fill="rgb(220,128,40)" rx="2" ry="2" />
<text  x="422.93" y="591.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (2 samples, 0.05%)</title><rect x="689.6" y="629" width="0.5" height="15.0" fill="rgb(245,80,43)" rx="2" ry="2" />
<text  x="692.55" y="639.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="148.7" y="613" width="0.2" height="15.0" fill="rgb(229,139,14)" rx="2" ry="2" />
<text  x="151.66" y="623.5" ></text>
</g>
<g >
<title>NaClXMutexLock (1 samples, 0.02%)</title><rect x="39.2" y="805" width="0.2" height="15.0" fill="rgb(220,79,38)" rx="2" ry="2" />
<text  x="42.16" y="815.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (174 samples, 4.06%)</title><rect x="1142.1" y="789" width="47.9" height="15.0" fill="rgb(215,13,31)" rx="2" ry="2" />
<text  x="1145.13" y="799.5" >x86_..</text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.02%)</title><rect x="1029.3" y="533" width="0.3" height="15.0" fill="rgb(223,174,21)" rx="2" ry="2" />
<text  x="1032.33" y="543.5" ></text>
</g>
<g >
<title>__set_page_dirty (1 samples, 0.02%)</title><rect x="34.8" y="389" width="0.2" height="15.0" fill="rgb(221,229,53)" rx="2" ry="2" />
<text  x="37.76" y="399.5" ></text>
</g>
<g >
<title>[sel_ldr] (2,962 samples, 69.06%)</title><rect x="85.9" y="821" width="814.9" height="15.0" fill="rgb(240,38,2)" rx="2" ry="2" />
<text  x="88.93" y="831.5" >[sel_ldr]</text>
</g>
<g >
<title>do_fault_around (1 samples, 0.02%)</title><rect x="10.0" y="645" width="0.3" height="15.0" fill="rgb(242,169,54)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.02%)</title><rect x="1171.0" y="645" width="0.3" height="15.0" fill="rgb(218,175,34)" rx="2" ry="2" />
<text  x="1174.02" y="655.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.02%)</title><rect x="10.8" y="549" width="0.3" height="15.0" fill="rgb(215,155,13)" rx="2" ry="2" />
<text  x="13.83" y="559.5" ></text>
</g>
<g >
<title>worker_thread (3 samples, 0.07%)</title><rect x="1078.0" y="789" width="0.9" height="15.0" fill="rgb(249,192,36)" rx="2" ry="2" />
<text  x="1081.03" y="799.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (95 samples, 2.21%)</title><rect x="591.6" y="629" width="26.1" height="15.0" fill="rgb(248,189,22)" rx="2" ry="2" />
<text  x="594.61" y="639.5" >c..</text>
</g>
<g >
<title>NaClSimpleLtdServiceAcceptConnection (1 samples, 0.02%)</title><rect x="1007.9" y="741" width="0.2" height="15.0" fill="rgb(220,50,23)" rx="2" ry="2" />
<text  x="1010.87" y="751.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (1 samples, 0.02%)</title><rect x="150.9" y="293" width="0.2" height="15.0" fill="rgb(206,126,21)" rx="2" ry="2" />
<text  x="153.86" y="303.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="1029.3" y="693" width="0.3" height="15.0" fill="rgb(220,128,3)" rx="2" ry="2" />
<text  x="1032.33" y="703.5" ></text>
</g>
<g >
<title>NaClApplyPatchToMemory (1 samples, 0.02%)</title><rect x="151.1" y="645" width="0.3" height="15.0" fill="rgb(218,191,29)" rx="2" ry="2" />
<text  x="154.14" y="655.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.02%)</title><rect x="10.6" y="661" width="0.2" height="15.0" fill="rgb(246,141,27)" rx="2" ry="2" />
<text  x="13.55" y="671.5" ></text>
</g>
<g >
<title>error_entry (2 samples, 0.05%)</title><rect x="977.1" y="805" width="0.5" height="15.0" fill="rgb(254,207,2)" rx="2" ry="2" />
<text  x="980.06" y="815.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="665.3" y="613" width="0.3" height="15.0" fill="rgb(223,67,9)" rx="2" ry="2" />
<text  x="668.34" y="623.5" ></text>
</g>
<g >
<title>evict (4 samples, 0.09%)</title><rect x="1070.9" y="645" width="1.1" height="15.0" fill="rgb(243,71,9)" rx="2" ry="2" />
<text  x="1073.87" y="655.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="34.2" y="421" width="0.3" height="15.0" fill="rgb(229,95,50)" rx="2" ry="2" />
<text  x="37.21" y="431.5" ></text>
</g>
<g >
<title>newidle_balance (13 samples, 0.30%)</title><rect x="1136.9" y="709" width="3.6" height="15.0" fill="rgb(241,46,2)" rx="2" ry="2" />
<text  x="1139.90" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.0" y="821" width="0.3" height="15.0" fill="rgb(235,210,42)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (1 samples, 0.02%)</title><rect x="1135.8" y="741" width="0.3" height="15.0" fill="rgb(217,203,21)" rx="2" ry="2" />
<text  x="1138.80" y="751.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="972.9" y="661" width="0.3" height="15.0" fill="rgb(237,144,4)" rx="2" ry="2" />
<text  x="975.93" y="671.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (28 samples, 0.65%)</title><rect x="657.6" y="597" width="7.7" height="15.0" fill="rgb(207,210,54)" rx="2" ry="2" />
<text  x="660.64" y="607.5" ></text>
</g>
<g >
<title>_perf_event_enable (76 samples, 1.77%)</title><rect x="12.2" y="613" width="20.9" height="15.0" fill="rgb(220,91,16)" rx="2" ry="2" />
<text  x="15.20" y="623.5" ></text>
</g>
<g >
<title>NaClLoadTrampoline (1 samples, 0.02%)</title><rect x="151.1" y="693" width="0.3" height="15.0" fill="rgb(230,78,13)" rx="2" ry="2" />
<text  x="154.14" y="703.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="10.0" y="725" width="0.3" height="15.0" fill="rgb(224,173,10)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (3 samples, 0.07%)</title><rect x="134.4" y="789" width="0.8" height="15.0" fill="rgb(239,229,12)" rx="2" ry="2" />
<text  x="137.36" y="799.5" ></text>
</g>
<g >
<title>alloc_empty_file (1 samples, 0.02%)</title><rect x="10.8" y="517" width="0.3" height="15.0" fill="rgb(208,166,33)" rx="2" ry="2" />
<text  x="13.83" y="527.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.12%)</title><rect x="829.3" y="517" width="1.4" height="15.0" fill="rgb(246,138,2)" rx="2" ry="2" />
<text  x="832.31" y="527.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (1 samples, 0.02%)</title><rect x="988.1" y="789" width="0.2" height="15.0" fill="rgb(230,225,3)" rx="2" ry="2" />
<text  x="991.06" y="799.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (7 samples, 0.16%)</title><rect x="44.4" y="805" width="1.9" height="15.0" fill="rgb(212,203,37)" rx="2" ry="2" />
<text  x="47.39" y="815.5" ></text>
</g>
<g >
<title>page_check_references.isra.0 (1 samples, 0.02%)</title><rect x="1066.2" y="677" width="0.3" height="15.0" fill="rgb(239,200,33)" rx="2" ry="2" />
<text  x="1069.19" y="687.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (6 samples, 0.14%)</title><rect x="1075.0" y="517" width="1.6" height="15.0" fill="rgb(219,58,17)" rx="2" ry="2" />
<text  x="1078.00" y="527.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="1055.7" y="805" width="0.3" height="15.0" fill="rgb(217,117,33)" rx="2" ry="2" />
<text  x="1058.74" y="815.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.02%)</title><rect x="1147.1" y="453" width="0.3" height="15.0" fill="rgb(223,78,40)" rx="2" ry="2" />
<text  x="1150.08" y="463.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="150.3" y="85" width="0.3" height="15.0" fill="rgb(249,197,32)" rx="2" ry="2" />
<text  x="153.31" y="95.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 0.07%)</title><rect x="1080.2" y="677" width="0.9" height="15.0" fill="rgb(214,27,34)" rx="2" ry="2" />
<text  x="1083.23" y="687.5" ></text>
</g>
<g >
<title>follow_pud_mask.isra.0 (1 samples, 0.02%)</title><rect x="983.1" y="597" width="0.3" height="15.0" fill="rgb(241,219,3)" rx="2" ry="2" />
<text  x="986.11" y="607.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (28 samples, 0.65%)</title><rect x="657.6" y="581" width="7.7" height="15.0" fill="rgb(249,49,32)" rx="2" ry="2" />
<text  x="660.64" y="591.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.02%)</title><rect x="1176.8" y="629" width="0.3" height="15.0" fill="rgb(229,3,37)" rx="2" ry="2" />
<text  x="1179.79" y="639.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.02%)</title><rect x="1029.1" y="549" width="0.2" height="15.0" fill="rgb(230,210,38)" rx="2" ry="2" />
<text  x="1032.05" y="559.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (3 samples, 0.07%)</title><rect x="136.6" y="789" width="0.8" height="15.0" fill="rgb(236,148,10)" rx="2" ry="2" />
<text  x="139.56" y="799.5" ></text>
</g>
<g >
<title>_start (2 samples, 0.05%)</title><rect x="10.3" y="821" width="0.5" height="15.0" fill="rgb(231,83,37)" rx="2" ry="2" />
<text  x="13.28" y="831.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (31 samples, 0.72%)</title><rect x="579.8" y="661" width="8.5" height="15.0" fill="rgb(209,207,25)" rx="2" ry="2" />
<text  x="582.78" y="671.5" ></text>
</g>
<g >
<title>____sys_recvmsg (2 samples, 0.05%)</title><rect x="1056.3" y="741" width="0.5" height="15.0" fill="rgb(233,200,20)" rx="2" ry="2" />
<text  x="1059.29" y="751.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (2 samples, 0.05%)</title><rect x="982.8" y="693" width="0.6" height="15.0" fill="rgb(231,177,17)" rx="2" ry="2" />
<text  x="985.83" y="703.5" ></text>
</g>
<g >
<title>core::cmp::min (2 samples, 0.05%)</title><rect x="689.6" y="645" width="0.5" height="15.0" fill="rgb(225,151,47)" rx="2" ry="2" />
<text  x="692.55" y="655.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (3 samples, 0.07%)</title><rect x="818.9" y="501" width="0.8" height="15.0" fill="rgb(218,69,30)" rx="2" ry="2" />
<text  x="821.86" y="511.5" ></text>
</g>
<g >
<title>sh_set_lines_and_columns (1 samples, 0.02%)</title><rect x="10.6" y="693" width="0.2" height="15.0" fill="rgb(221,174,9)" rx="2" ry="2" />
<text  x="13.55" y="703.5" ></text>
</g>
<g >
<title>pick_next_task_fair (13 samples, 0.30%)</title><rect x="1136.9" y="725" width="3.6" height="15.0" fill="rgb(209,112,16)" rx="2" ry="2" />
<text  x="1139.90" y="735.5" ></text>
</g>
<g >
<title>rcu_core (6 samples, 0.14%)</title><rect x="1081.1" y="597" width="1.6" height="15.0" fill="rgb(212,115,51)" rx="2" ry="2" />
<text  x="1084.05" y="607.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="1073.3" y="453" width="0.3" height="15.0" fill="rgb(232,184,20)" rx="2" ry="2" />
<text  x="1076.35" y="463.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1186.4" y="629" width="0.3" height="15.0" fill="rgb(219,35,25)" rx="2" ry="2" />
<text  x="1189.42" y="639.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.02%)</title><rect x="1080.5" y="629" width="0.3" height="15.0" fill="rgb(234,214,28)" rx="2" ry="2" />
<text  x="1083.50" y="639.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.02%)</title><rect x="1008.7" y="805" width="0.3" height="15.0" fill="rgb(222,157,48)" rx="2" ry="2" />
<text  x="1011.69" y="815.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (39 samples, 0.91%)</title><rect x="797.1" y="629" width="10.8" height="15.0" fill="rgb(225,100,52)" rx="2" ry="2" />
<text  x="800.13" y="639.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="868.4" y="549" width="0.3" height="15.0" fill="rgb(216,49,26)" rx="2" ry="2" />
<text  x="871.38" y="559.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (1 samples, 0.02%)</title><rect x="831.8" y="613" width="0.3" height="15.0" fill="rgb(205,207,20)" rx="2" ry="2" />
<text  x="834.79" y="623.5" ></text>
</g>
<g >
<title>event_function (65 samples, 1.52%)</title><rect x="15.2" y="533" width="17.9" height="15.0" fill="rgb(249,21,13)" rx="2" ry="2" />
<text  x="18.23" y="543.5" ></text>
</g>
<g >
<title>NaClCreateThread (1 samples, 0.02%)</title><rect x="151.4" y="757" width="0.3" height="15.0" fill="rgb(234,154,44)" rx="2" ry="2" />
<text  x="154.41" y="767.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (1,391 samples, 32.43%)</title><rect x="151.7" y="789" width="382.7" height="15.0" fill="rgb(209,14,24)" rx="2" ry="2" />
<text  x="154.69" y="799.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>blk_flush_plug_list (1 samples, 0.02%)</title><rect x="1057.7" y="693" width="0.2" height="15.0" fill="rgb(208,226,32)" rx="2" ry="2" />
<text  x="1060.67" y="703.5" ></text>
</g>
<g >
<title>alloc_pages_vma (48 samples, 1.12%)</title><rect x="953.9" y="693" width="13.3" height="15.0" fill="rgb(235,89,52)" rx="2" ry="2" />
<text  x="956.94" y="703.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (4 samples, 0.09%)</title><rect x="150.0" y="629" width="1.1" height="15.0" fill="rgb(229,48,47)" rx="2" ry="2" />
<text  x="153.04" y="639.5" ></text>
</g>
<g >
<title>NaClStore64 (1 samples, 0.02%)</title><rect x="1008.1" y="645" width="0.3" height="15.0" fill="rgb(246,71,37)" rx="2" ry="2" />
<text  x="1011.14" y="655.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="1081.9" y="533" width="0.3" height="15.0" fill="rgb(228,152,3)" rx="2" ry="2" />
<text  x="1084.88" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_idle_got_tick (1 samples, 0.02%)</title><rect x="1133.3" y="709" width="0.3" height="15.0" fill="rgb(251,113,53)" rx="2" ry="2" />
<text  x="1136.32" y="719.5" ></text>
</g>
<g >
<title>try_to_free_buffers (3 samples, 0.07%)</title><rect x="1067.0" y="629" width="0.8" height="15.0" fill="rgb(225,41,26)" rx="2" ry="2" />
<text  x="1070.02" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (31 samples, 0.72%)</title><rect x="579.8" y="645" width="8.5" height="15.0" fill="rgb(245,195,14)" rx="2" ry="2" />
<text  x="582.78" y="655.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.02%)</title><rect x="59.2" y="757" width="0.3" height="15.0" fill="rgb(214,93,24)" rx="2" ry="2" />
<text  x="62.25" y="767.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1073.3" y="469" width="0.3" height="15.0" fill="rgb(252,136,43)" rx="2" ry="2" />
<text  x="1076.35" y="479.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (10 samples, 0.23%)</title><rect x="1081.1" y="629" width="2.7" height="15.0" fill="rgb(241,222,29)" rx="2" ry="2" />
<text  x="1084.05" y="639.5" ></text>
</g>
<g >
<title>do_execveat_common (1 samples, 0.02%)</title><rect x="10.8" y="677" width="0.3" height="15.0" fill="rgb(221,225,48)" rx="2" ry="2" />
<text  x="13.83" y="687.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.02%)</title><rect x="1176.2" y="613" width="0.3" height="15.0" fill="rgb(226,157,0)" rx="2" ry="2" />
<text  x="1179.24" y="623.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (1 samples, 0.02%)</title><rect x="10.8" y="773" width="0.3" height="15.0" fill="rgb(209,96,19)" rx="2" ry="2" />
<text  x="13.83" y="783.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (8 samples, 0.19%)</title><rect x="83.2" y="805" width="2.2" height="15.0" fill="rgb(217,167,45)" rx="2" ry="2" />
<text  x="86.18" y="815.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (6 samples, 0.14%)</title><rect x="972.1" y="693" width="1.7" height="15.0" fill="rgb(231,220,46)" rx="2" ry="2" />
<text  x="975.10" y="703.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="1008.4" y="501" width="0.3" height="15.0" fill="rgb(232,186,27)" rx="2" ry="2" />
<text  x="1011.42" y="511.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (10 samples, 0.23%)</title><rect x="1081.1" y="661" width="2.7" height="15.0" fill="rgb(218,210,44)" rx="2" ry="2" />
<text  x="1084.05" y="671.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (30 samples, 0.70%)</title><rect x="843.9" y="613" width="8.2" height="15.0" fill="rgb(252,197,36)" rx="2" ry="2" />
<text  x="846.90" y="623.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="1065.9" y="677" width="0.3" height="15.0" fill="rgb(244,99,0)" rx="2" ry="2" />
<text  x="1068.92" y="687.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="1029.3" y="613" width="0.3" height="15.0" fill="rgb(242,203,30)" rx="2" ry="2" />
<text  x="1032.33" y="623.5" ></text>
</g>
<g >
<title>clear_page_erms (27 samples, 0.63%)</title><rect x="956.1" y="645" width="7.5" height="15.0" fill="rgb(245,149,40)" rx="2" ry="2" />
<text  x="959.15" y="655.5" ></text>
</g>
<g >
<title>ext4_releasepage (6 samples, 0.14%)</title><rect x="1075.0" y="533" width="1.6" height="15.0" fill="rgb(219,153,34)" rx="2" ry="2" />
<text  x="1078.00" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="33.9" y="421" width="0.3" height="15.0" fill="rgb(251,160,2)" rx="2" ry="2" />
<text  x="36.94" y="431.5" ></text>
</g>
<g >
<title>tcache_init.part.0 (1 samples, 0.02%)</title><rect x="1007.9" y="693" width="0.2" height="15.0" fill="rgb(241,104,48)" rx="2" ry="2" />
<text  x="1010.87" y="703.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="810.1" y="533" width="0.5" height="15.0" fill="rgb(218,147,18)" rx="2" ry="2" />
<text  x="813.06" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (26 samples, 0.61%)</title><rect x="823.5" y="549" width="7.2" height="15.0" fill="rgb(216,227,20)" rx="2" ry="2" />
<text  x="826.54" y="559.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.02%)</title><rect x="1185.6" y="565" width="0.3" height="15.0" fill="rgb(230,178,8)" rx="2" ry="2" />
<text  x="1188.60" y="575.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (30 samples, 0.70%)</title><rect x="140.1" y="709" width="8.3" height="15.0" fill="rgb(223,65,44)" rx="2" ry="2" />
<text  x="143.13" y="719.5" ></text>
</g>
<g >
<title>record__pushfn (9 samples, 0.21%)</title><rect x="33.4" y="725" width="2.5" height="15.0" fill="rgb(231,7,48)" rx="2" ry="2" />
<text  x="36.39" y="735.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (74 samples, 1.73%)</title><rect x="1057.1" y="741" width="20.4" height="15.0" fill="rgb(250,8,28)" rx="2" ry="2" />
<text  x="1060.12" y="751.5" ></text>
</g>
<g >
<title>tick_sched_handle (6 samples, 0.14%)</title><rect x="1145.7" y="517" width="1.7" height="15.0" fill="rgb(252,176,22)" rx="2" ry="2" />
<text  x="1148.71" y="527.5" ></text>
</g>
<g >
<title>cpuidle_poll_time (1 samples, 0.02%)</title><rect x="1168.3" y="629" width="0.2" height="15.0" fill="rgb(250,80,52)" rx="2" ry="2" />
<text  x="1171.27" y="639.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (2 samples, 0.05%)</title><rect x="1169.4" y="629" width="0.5" height="15.0" fill="rgb(212,16,39)" rx="2" ry="2" />
<text  x="1172.37" y="639.5" ></text>
</g>
<g >
<title>NaClLog (9 samples, 0.21%)</title><rect x="131.9" y="789" width="2.5" height="15.0" fill="rgb(223,79,21)" rx="2" ry="2" />
<text  x="134.88" y="799.5" ></text>
</g>
<g >
<title>AcceptThread (1 samples, 0.02%)</title><rect x="1007.9" y="773" width="0.2" height="15.0" fill="rgb(250,24,14)" rx="2" ry="2" />
<text  x="1010.87" y="783.5" ></text>
</g>
<g >
<title>CompareAndSwap (48 samples, 1.12%)</title><rect x="110.7" y="773" width="13.2" height="15.0" fill="rgb(252,227,5)" rx="2" ry="2" />
<text  x="113.69" y="783.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="10.6" y="533" width="0.2" height="15.0" fill="rgb(207,210,48)" rx="2" ry="2" />
<text  x="13.55" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (14 samples, 0.33%)</title><rect x="861.5" y="597" width="3.9" height="15.0" fill="rgb(252,173,52)" rx="2" ry="2" />
<text  x="864.50" y="607.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (45 samples, 1.05%)</title><rect x="755.9" y="597" width="12.3" height="15.0" fill="rgb(218,193,19)" rx="2" ry="2" />
<text  x="758.86" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="149.8" y="549" width="0.2" height="15.0" fill="rgb(219,44,33)" rx="2" ry="2" />
<text  x="152.76" y="559.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="420.5" y="517" width="0.3" height="15.0" fill="rgb(235,163,32)" rx="2" ry="2" />
<text  x="423.48" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (1 samples, 0.02%)</title><rect x="1135.8" y="725" width="0.3" height="15.0" fill="rgb(250,193,0)" rx="2" ry="2" />
<text  x="1138.80" y="735.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (3 samples, 0.07%)</title><rect x="690.1" y="565" width="0.8" height="15.0" fill="rgb(233,62,48)" rx="2" ry="2" />
<text  x="693.10" y="575.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="33.9" y="437" width="0.3" height="15.0" fill="rgb(209,132,46)" rx="2" ry="2" />
<text  x="36.94" y="447.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.09%)</title><rect x="150.0" y="485" width="1.1" height="15.0" fill="rgb(222,144,38)" rx="2" ry="2" />
<text  x="153.04" y="495.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="34.2" y="373" width="0.3" height="15.0" fill="rgb(236,198,8)" rx="2" ry="2" />
<text  x="37.21" y="383.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (1 samples, 0.02%)</title><rect x="10.8" y="645" width="0.3" height="15.0" fill="rgb(240,183,45)" rx="2" ry="2" />
<text  x="13.83" y="655.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.05%)</title><rect x="1008.1" y="773" width="0.6" height="15.0" fill="rgb(239,94,46)" rx="2" ry="2" />
<text  x="1011.14" y="783.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (703 samples, 16.39%)</title><rect x="340.7" y="629" width="193.4" height="15.0" fill="rgb(222,61,50)" rx="2" ry="2" />
<text  x="343.70" y="639.5" >ringbuf::consumer::Consum..</text>
</g>
<g >
<title>_perf_ioctl (80 samples, 1.87%)</title><rect x="11.1" y="645" width="22.0" height="15.0" fill="rgb(250,208,48)" rx="2" ry="2" />
<text  x="14.10" y="655.5" >_..</text>
</g>
<g >
<title>perf (90 samples, 2.10%)</title><rect x="11.1" y="837" width="24.8" height="15.0" fill="rgb(236,186,40)" rx="2" ry="2" />
<text  x="14.10" y="847.5" >p..</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="1007.9" y="629" width="0.2" height="15.0" fill="rgb(238,50,14)" rx="2" ry="2" />
<text  x="1010.87" y="639.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (2 samples, 0.05%)</title><rect x="983.9" y="773" width="0.6" height="15.0" fill="rgb(250,98,20)" rx="2" ry="2" />
<text  x="986.93" y="783.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="1056.8" y="773" width="0.3" height="15.0" fill="rgb(239,87,46)" rx="2" ry="2" />
<text  x="1059.84" y="783.5" ></text>
</g>
<g >
<title>follow_page_mask (1 samples, 0.02%)</title><rect x="983.1" y="613" width="0.3" height="15.0" fill="rgb(248,80,52)" rx="2" ry="2" />
<text  x="986.11" y="623.5" ></text>
</g>
<g >
<title>count_shadow_nodes (1 samples, 0.02%)</title><rect x="1067.8" y="677" width="0.3" height="15.0" fill="rgb(211,104,43)" rx="2" ry="2" />
<text  x="1070.85" y="687.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (2 samples, 0.05%)</title><rect x="33.9" y="453" width="0.6" height="15.0" fill="rgb(234,175,32)" rx="2" ry="2" />
<text  x="36.94" y="463.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="148.9" y="645" width="0.3" height="15.0" fill="rgb(237,227,54)" rx="2" ry="2" />
<text  x="151.94" y="655.5" ></text>
</g>
<g >
<title>Process0Operands (1 samples, 0.02%)</title><rect x="148.1" y="693" width="0.3" height="15.0" fill="rgb(229,161,41)" rx="2" ry="2" />
<text  x="151.11" y="703.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (27 samples, 0.63%)</title><rect x="808.7" y="581" width="7.4" height="15.0" fill="rgb(237,191,39)" rx="2" ry="2" />
<text  x="811.68" y="591.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampoline (1 samples, 0.02%)</title><rect x="151.1" y="677" width="0.3" height="15.0" fill="rgb(232,147,19)" rx="2" ry="2" />
<text  x="154.14" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (48 samples, 1.12%)</title><rect x="652.1" y="613" width="13.2" height="15.0" fill="rgb(244,74,30)" rx="2" ry="2" />
<text  x="655.14" y="623.5" ></text>
</g>
<g >
<title>open_exec (1 samples, 0.02%)</title><rect x="10.8" y="581" width="0.3" height="15.0" fill="rgb(253,118,3)" rx="2" ry="2" />
<text  x="13.83" y="591.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="815.3" y="533" width="0.8" height="15.0" fill="rgb(217,168,31)" rx="2" ry="2" />
<text  x="818.28" y="543.5" ></text>
</g>
<g >
<title>BitmapSetBit (1 samples, 0.02%)</title><rect x="147.8" y="677" width="0.3" height="15.0" fill="rgb(253,61,13)" rx="2" ry="2" />
<text  x="150.84" y="687.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="149.8" y="437" width="0.2" height="15.0" fill="rgb(240,215,39)" rx="2" ry="2" />
<text  x="152.76" y="447.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="1008.7" y="789" width="0.3" height="15.0" fill="rgb(223,217,5)" rx="2" ry="2" />
<text  x="1011.69" y="799.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (3 samples, 0.07%)</title><rect x="1180.4" y="581" width="0.8" height="15.0" fill="rgb(212,49,3)" rx="2" ry="2" />
<text  x="1183.37" y="591.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (10 samples, 0.23%)</title><rect x="969.4" y="645" width="2.7" height="15.0" fill="rgb(217,11,50)" rx="2" ry="2" />
<text  x="972.35" y="655.5" ></text>
</g>
<g >
<title>ip6_datagram_recv_common_ctl (1 samples, 0.02%)</title><rect x="1056.3" y="693" width="0.3" height="15.0" fill="rgb(219,208,50)" rx="2" ry="2" />
<text  x="1059.29" y="703.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.05%)</title><rect x="148.7" y="661" width="0.5" height="15.0" fill="rgb(223,123,13)" rx="2" ry="2" />
<text  x="151.66" y="671.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (97 samples, 2.26%)</title><rect x="745.7" y="645" width="26.7" height="15.0" fill="rgb(224,19,0)" rx="2" ry="2" />
<text  x="748.68" y="655.5" >r..</text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.02%)</title><rect x="1171.0" y="629" width="0.3" height="15.0" fill="rgb(220,1,27)" rx="2" ry="2" />
<text  x="1174.02" y="639.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.02%)</title><rect x="1073.3" y="389" width="0.3" height="15.0" fill="rgb(246,118,20)" rx="2" ry="2" />
<text  x="1076.35" y="399.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (2 samples, 0.05%)</title><rect x="1139.4" y="629" width="0.5" height="15.0" fill="rgb(230,117,54)" rx="2" ry="2" />
<text  x="1142.38" y="639.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (3 samples, 0.07%)</title><rect x="1135.0" y="709" width="0.8" height="15.0" fill="rgb(221,13,34)" rx="2" ry="2" />
<text  x="1137.98" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.02%)</title><rect x="534.1" y="629" width="0.3" height="15.0" fill="rgb(208,168,27)" rx="2" ry="2" />
<text  x="537.11" y="639.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="974.9" y="693" width="0.2" height="15.0" fill="rgb(230,95,9)" rx="2" ry="2" />
<text  x="977.85" y="703.5" ></text>
</g>
</g>
</svg>
