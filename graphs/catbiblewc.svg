<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>shmem_add_to_page_cache (1 samples, 0.71%)</title><rect x="913.8" y="69" width="8.4" height="15.0" fill="rgb(211,67,43)" rx="2" ry="2" />
<text  x="916.83" y="79.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.71%)</title><rect x="905.5" y="53" width="8.3" height="15.0" fill="rgb(224,134,39)" rx="2" ry="2" />
<text  x="908.46" y="63.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.71%)</title><rect x="846.9" y="197" width="8.3" height="15.0" fill="rgb(236,109,39)" rx="2" ry="2" />
<text  x="849.88" y="207.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.42%)</title><rect x="562.3" y="565" width="16.8" height="15.0" fill="rgb(245,191,44)" rx="2" ry="2" />
<text  x="565.34" y="575.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 0.71%)</title><rect x="1181.6" y="549" width="8.4" height="15.0" fill="rgb(229,54,49)" rx="2" ry="2" />
<text  x="1184.63" y="559.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.71%)</title><rect x="1064.5" y="181" width="8.3" height="15.0" fill="rgb(218,197,11)" rx="2" ry="2" />
<text  x="1067.47" y="191.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (2 samples, 1.42%)</title><rect x="687.9" y="325" width="16.7" height="15.0" fill="rgb(254,157,14)" rx="2" ry="2" />
<text  x="690.87" y="335.5" ></text>
</g>
<g >
<title>find_attach.isra.7 (1 samples, 0.71%)</title><rect x="554.0" y="341" width="8.3" height="15.0" fill="rgb(246,204,53)" rx="2" ry="2" />
<text  x="556.97" y="351.5" ></text>
</g>
<g >
<title>[unknown]  (34 samples, 24.11%)</title><rect x="687.9" y="453" width="284.5" height="15.0" fill="rgb(219,106,48)" rx="2" ry="2" />
<text  x="690.87" y="463.5" >[unknown] </text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.71%)</title><rect x="1014.3" y="373" width="8.3" height="15.0" fill="rgb(235,8,21)" rx="2" ry="2" />
<text  x="1017.26" y="383.5" ></text>
</g>
<g >
<title>sock_alloc (1 samples, 0.71%)</title><rect x="687.9" y="133" width="8.3" height="15.0" fill="rgb(219,188,9)" rx="2" ry="2" />
<text  x="690.87" y="143.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 2.84%)</title><rect x="913.8" y="133" width="33.5" height="15.0" fill="rgb(235,129,32)" rx="2" ry="2" />
<text  x="916.83" y="143.5" >__..</text>
</g>
<g >
<title>generic_exec_single (64 samples, 45.39%)</title><rect x="18.4" y="309" width="535.6" height="15.0" fill="rgb(229,157,45)" rx="2" ry="2" />
<text  x="21.37" y="319.5" >generic_exec_single</text>
</g>
<g >
<title>page_fault (7 samples, 4.96%)</title><rect x="897.1" y="197" width="58.6" height="15.0" fill="rgb(212,214,36)" rx="2" ry="2" />
<text  x="900.09" y="207.5" >page_f..</text>
</g>
<g >
<title>NaClSysFork (32 samples, 22.70%)</title><rect x="704.6" y="325" width="267.8" height="15.0" fill="rgb(211,169,54)" rx="2" ry="2" />
<text  x="707.61" y="335.5" >NaClSysFork</text>
</g>
<g >
<title>__vfs_getxattr (1 samples, 0.71%)</title><rect x="10.0" y="405" width="8.4" height="15.0" fill="rgb(205,85,18)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 4.26%)</title><rect x="905.5" y="165" width="50.2" height="15.0" fill="rgb(210,57,4)" rx="2" ry="2" />
<text  x="908.46" y="175.5" >__do_..</text>
</g>
<g >
<title>secondary_startup_64 (14 samples, 9.93%)</title><rect x="1072.8" y="565" width="117.2" height="15.0" fill="rgb(207,164,14)" rx="2" ry="2" />
<text  x="1075.84" y="575.5" >secondary_star..</text>
</g>
<g >
<title>[perf-1555.map] (2 samples, 1.42%)</title><rect x="687.9" y="389" width="16.7" height="15.0" fill="rgb(251,218,6)" rx="2" ry="2" />
<text  x="690.87" y="399.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.71%)</title><rect x="1064.5" y="213" width="8.3" height="15.0" fill="rgb(244,221,41)" rx="2" ry="2" />
<text  x="1067.47" y="223.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.71%)</title><rect x="1022.6" y="341" width="8.4" height="15.0" fill="rgb(237,44,51)" rx="2" ry="2" />
<text  x="1025.62" y="351.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.71%)</title><rect x="696.2" y="261" width="8.4" height="15.0" fill="rgb(232,55,14)" rx="2" ry="2" />
<text  x="699.24" y="271.5" ></text>
</g>
<g >
<title>start_kernel (1 samples, 0.71%)</title><rect x="1181.6" y="517" width="8.4" height="15.0" fill="rgb(229,103,0)" rx="2" ry="2" />
<text  x="1184.63" y="527.5" ></text>
</g>
<g >
<title>vfs_getxattr_alloc (1 samples, 0.71%)</title><rect x="10.0" y="293" width="8.4" height="15.0" fill="rgb(230,179,44)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 1.42%)</title><rect x="955.7" y="245" width="16.7" height="15.0" fill="rgb(213,169,6)" rx="2" ry="2" />
<text  x="958.67" y="255.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 45.39%)</title><rect x="18.4" y="229" width="535.6" height="15.0" fill="rgb(252,205,39)" rx="2" ry="2" />
<text  x="21.37" y="239.5" >x86_pmu_enable</text>
</g>
<g >
<title>sel_ldr (58 samples, 41.13%)</title><rect x="562.3" y="581" width="485.4" height="15.0" fill="rgb(240,219,16)" rx="2" ry="2" />
<text  x="565.34" y="591.5" >sel_ldr</text>
</g>
<g >
<title>intel_idle (1 samples, 0.71%)</title><rect x="1181.6" y="405" width="8.4" height="15.0" fill="rgb(231,205,35)" rx="2" ry="2" />
<text  x="1184.63" y="415.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.71%)</title><rect x="554.0" y="565" width="8.3" height="15.0" fill="rgb(232,48,12)" rx="2" ry="2" />
<text  x="556.97" y="575.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.71%)</title><rect x="947.3" y="133" width="8.4" height="15.0" fill="rgb(232,41,5)" rx="2" ry="2" />
<text  x="950.30" y="143.5" ></text>
</g>
<g >
<title>event_function (64 samples, 45.39%)</title><rect x="18.4" y="277" width="535.6" height="15.0" fill="rgb(244,105,32)" rx="2" ry="2" />
<text  x="21.37" y="287.5" >event_function</text>
</g>
<g >
<title>security_bprm_set_creds (1 samples, 0.71%)</title><rect x="554.0" y="389" width="8.3" height="15.0" fill="rgb(232,69,48)" rx="2" ry="2" />
<text  x="556.97" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter (13 samples, 9.22%)</title><rect x="1072.8" y="485" width="108.8" height="15.0" fill="rgb(208,177,49)" rx="2" ry="2" />
<text  x="1075.84" y="495.5" >cpuidle_enter</text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.71%)</title><rect x="938.9" y="117" width="8.4" height="15.0" fill="rgb(234,40,32)" rx="2" ry="2" />
<text  x="941.94" y="127.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 1.42%)</title><rect x="922.2" y="101" width="16.7" height="15.0" fill="rgb(210,163,15)" rx="2" ry="2" />
<text  x="925.20" y="111.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.71%)</title><rect x="1181.6" y="437" width="8.4" height="15.0" fill="rgb(246,111,35)" rx="2" ry="2" />
<text  x="1184.63" y="447.5" ></text>
</g>
<g >
<title>cap_inode_getsecurity (1 samples, 0.71%)</title><rect x="10.0" y="309" width="8.4" height="15.0" fill="rgb(223,1,15)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.71%)</title><rect x="1181.6" y="485" width="8.4" height="15.0" fill="rgb(211,66,17)" rx="2" ry="2" />
<text  x="1184.63" y="495.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 1.42%)</title><rect x="1014.3" y="421" width="16.7" height="15.0" fill="rgb(209,88,30)" rx="2" ry="2" />
<text  x="1017.26" y="431.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.71%)</title><rect x="1031.0" y="309" width="8.4" height="15.0" fill="rgb(231,180,8)" rx="2" ry="2" />
<text  x="1033.99" y="319.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.71%)</title><rect x="1022.6" y="373" width="8.4" height="15.0" fill="rgb(213,80,9)" rx="2" ry="2" />
<text  x="1025.62" y="383.5" ></text>
</g>
<g >
<title>__radix_tree_insert (1 samples, 0.71%)</title><rect x="913.8" y="53" width="8.4" height="15.0" fill="rgb(241,153,30)" rx="2" ry="2" />
<text  x="916.83" y="63.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (30 samples, 21.28%)</title><rect x="704.6" y="261" width="251.1" height="15.0" fill="rgb(212,179,11)" rx="2" ry="2" />
<text  x="707.61" y="271.5" >NaClCopyExecutionContext</text>
</g>
<g >
<title>apparmor_bprm_set_creds (1 samples, 0.71%)</title><rect x="554.0" y="373" width="8.3" height="15.0" fill="rgb(238,2,29)" rx="2" ry="2" />
<text  x="556.97" y="383.5" ></text>
</g>
<g >
<title>run_builtin (64 samples, 45.39%)</title><rect x="18.4" y="517" width="535.6" height="15.0" fill="rgb(229,42,8)" rx="2" ry="2" />
<text  x="21.37" y="527.5" >run_builtin</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.71%)</title><rect x="687.9" y="197" width="8.3" height="15.0" fill="rgb(206,12,47)" rx="2" ry="2" />
<text  x="690.87" y="207.5" ></text>
</g>
<g >
<title>all (141 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(244,191,15)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 45.39%)</title><rect x="18.4" y="261" width="535.6" height="15.0" fill="rgb(238,217,2)" rx="2" ry="2" />
<text  x="21.37" y="271.5" >__perf_event_enable</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.71%)</title><rect x="554.0" y="453" width="8.3" height="15.0" fill="rgb(245,153,19)" rx="2" ry="2" />
<text  x="556.97" y="463.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 1.42%)</title><rect x="922.2" y="117" width="16.7" height="15.0" fill="rgb(209,149,30)" rx="2" ry="2" />
<text  x="925.20" y="127.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (1 samples, 0.71%)</title><rect x="10.0" y="229" width="8.4" height="15.0" fill="rgb(220,13,54)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>native_irq_return_iret (5 samples, 3.55%)</title><rect x="855.2" y="197" width="41.9" height="15.0" fill="rgb(208,184,21)" rx="2" ry="2" />
<text  x="858.25" y="207.5" >nat..</text>
</g>
<g >
<title>vfs_getxattr (1 samples, 0.71%)</title><rect x="10.0" y="357" width="8.4" height="15.0" fill="rgb(234,92,5)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>NaClSysExecve (2 samples, 1.42%)</title><rect x="687.9" y="309" width="16.7" height="15.0" fill="rgb(237,73,27)" rx="2" ry="2" />
<text  x="690.87" y="319.5" ></text>
</g>
<g >
<title>event_function_call (64 samples, 45.39%)</title><rect x="18.4" y="341" width="535.6" height="15.0" fill="rgb(217,18,9)" rx="2" ry="2" />
<text  x="21.37" y="351.5" >event_function_call</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.71%)</title><rect x="980.8" y="549" width="8.3" height="15.0" fill="rgb(227,89,54)" rx="2" ry="2" />
<text  x="983.78" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="1064.5" y="453" width="8.3" height="15.0" fill="rgb(246,116,39)" rx="2" ry="2" />
<text  x="1067.47" y="463.5" ></text>
</g>
<g >
<title>[unknown]  (37 samples, 26.24%)</title><rect x="662.8" y="485" width="309.6" height="15.0" fill="rgb(218,120,22)" rx="2" ry="2" />
<text  x="665.77" y="495.5" >[unknown] </text>
</g>
<g >
<title>nmi_restore (15 samples, 10.64%)</title><rect x="428.4" y="181" width="125.6" height="15.0" fill="rgb(239,89,37)" rx="2" ry="2" />
<text  x="431.44" y="191.5" >nmi_restore</text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 45.39%)</title><rect x="18.4" y="213" width="535.6" height="15.0" fill="rgb(219,171,35)" rx="2" ry="2" />
<text  x="21.37" y="223.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.71%)</title><rect x="696.2" y="197" width="8.4" height="15.0" fill="rgb(251,227,38)" rx="2" ry="2" />
<text  x="699.24" y="207.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.71%)</title><rect x="905.5" y="85" width="8.3" height="15.0" fill="rgb(211,193,36)" rx="2" ry="2" />
<text  x="908.46" y="95.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="1064.5" y="469" width="8.3" height="15.0" fill="rgb(243,16,47)" rx="2" ry="2" />
<text  x="1067.47" y="479.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 1.42%)</title><rect x="955.7" y="229" width="16.7" height="15.0" fill="rgb(247,117,14)" rx="2" ry="2" />
<text  x="958.67" y="239.5" ></text>
</g>
<g >
<title>new_inode_pseudo (1 samples, 0.71%)</title><rect x="687.9" y="117" width="8.3" height="15.0" fill="rgb(234,86,0)" rx="2" ry="2" />
<text  x="690.87" y="127.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (13 samples, 9.22%)</title><rect x="1072.8" y="469" width="108.8" height="15.0" fill="rgb(225,195,42)" rx="2" ry="2" />
<text  x="1075.84" y="479.5" >cpuidle_enter..</text>
</g>
<g >
<title>__sock_create (1 samples, 0.71%)</title><rect x="687.9" y="149" width="8.3" height="15.0" fill="rgb(243,181,26)" rx="2" ry="2" />
<text  x="690.87" y="159.5" ></text>
</g>
<g >
<title>lookdict_string.lto_priv.0 (1 samples, 0.71%)</title><rect x="989.1" y="549" width="8.4" height="15.0" fill="rgb(229,214,47)" rx="2" ry="2" />
<text  x="992.15" y="559.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2 samples, 1.42%)</title><rect x="687.9" y="341" width="16.7" height="15.0" fill="rgb(225,66,21)" rx="2" ry="2" />
<text  x="690.87" y="351.5" ></text>
</g>
<g >
<title>call_cpuidle (13 samples, 9.22%)</title><rect x="1072.8" y="501" width="108.8" height="15.0" fill="rgb(246,120,9)" rx="2" ry="2" />
<text  x="1075.84" y="511.5" >call_cpuidle</text>
</g>
<g >
<title>PySequence_Tuple (1 samples, 0.71%)</title><rect x="579.1" y="565" width="8.3" height="15.0" fill="rgb(215,93,38)" rx="2" ry="2" />
<text  x="582.08" y="575.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.71%)</title><rect x="1064.5" y="149" width="8.3" height="15.0" fill="rgb(208,178,16)" rx="2" ry="2" />
<text  x="1067.47" y="159.5" ></text>
</g>
<g >
<title>do_group_exit (3 samples, 2.13%)</title><rect x="1014.3" y="485" width="25.1" height="15.0" fill="rgb(254,194,45)" rx="2" ry="2" />
<text  x="1017.26" y="495.5" >d..</text>
</g>
<g >
<title>NaClVmCopyEntry (8 samples, 5.67%)</title><rect x="704.6" y="213" width="67.0" height="15.0" fill="rgb(205,217,12)" rx="2" ry="2" />
<text  x="707.61" y="223.5" >NaClVmC..</text>
</g>
<g >
<title>rwsem_down_read_failed (1 samples, 0.71%)</title><rect x="905.5" y="117" width="8.3" height="15.0" fill="rgb(240,164,40)" rx="2" ry="2" />
<text  x="908.46" y="127.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (2 samples, 1.42%)</title><rect x="687.9" y="293" width="16.7" height="15.0" fill="rgb(224,36,10)" rx="2" ry="2" />
<text  x="690.87" y="303.5" ></text>
</g>
<g >
<title>string_join.lto_priv.0 (1 samples, 0.71%)</title><rect x="1039.4" y="565" width="8.3" height="15.0" fill="rgb(228,119,13)" rx="2" ry="2" />
<text  x="1042.36" y="575.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.71%)</title><rect x="696.2" y="245" width="8.4" height="15.0" fill="rgb(212,120,27)" rx="2" ry="2" />
<text  x="699.24" y="255.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 0.71%)</title><rect x="554.0" y="517" width="8.3" height="15.0" fill="rgb(232,223,38)" rx="2" ry="2" />
<text  x="556.97" y="527.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.71%)</title><rect x="1031.0" y="325" width="8.4" height="15.0" fill="rgb(218,144,11)" rx="2" ry="2" />
<text  x="1033.99" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 0.71%)</title><rect x="1181.6" y="533" width="8.4" height="15.0" fill="rgb(245,187,35)" rx="2" ry="2" />
<text  x="1184.63" y="543.5" ></text>
</g>
<g >
<title>_perf_event_enable (64 samples, 45.39%)</title><rect x="18.4" y="357" width="535.6" height="15.0" fill="rgb(215,5,50)" rx="2" ry="2" />
<text  x="21.37" y="367.5" >_perf_event_enable</text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.71%)</title><rect x="913.8" y="85" width="8.4" height="15.0" fill="rgb(233,52,8)" rx="2" ry="2" />
<text  x="916.83" y="95.5" ></text>
</g>
<g >
<title>[unknown]  (34 samples, 24.11%)</title><rect x="687.9" y="421" width="284.5" height="15.0" fill="rgb(210,182,14)" rx="2" ry="2" />
<text  x="690.87" y="431.5" >[unknown] </text>
</g>
<g >
<title>__vfs_write (1 samples, 0.71%)</title><rect x="1064.5" y="293" width="8.3" height="15.0" fill="rgb(207,192,53)" rx="2" ry="2" />
<text  x="1067.47" y="303.5" ></text>
</g>
<g >
<title>sys_rt_sigaction (1 samples, 0.71%)</title><rect x="1005.9" y="501" width="8.4" height="15.0" fill="rgb(215,140,34)" rx="2" ry="2" />
<text  x="1008.89" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.71%)</title><rect x="1005.9" y="517" width="8.4" height="15.0" fill="rgb(249,186,23)" rx="2" ry="2" />
<text  x="1008.89" y="527.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.71%)</title><rect x="1031.0" y="453" width="8.4" height="15.0" fill="rgb(213,121,27)" rx="2" ry="2" />
<text  x="1033.99" y="463.5" ></text>
</g>
<g >
<title>[itertools.so] (1 samples, 0.71%)</title><rect x="646.0" y="549" width="8.4" height="15.0" fill="rgb(207,196,36)" rx="2" ry="2" />
<text  x="649.03" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.71%)</title><rect x="1064.5" y="341" width="8.3" height="15.0" fill="rgb(216,109,24)" rx="2" ry="2" />
<text  x="1067.47" y="351.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="1064.5" y="549" width="8.3" height="15.0" fill="rgb(220,133,37)" rx="2" ry="2" />
<text  x="1067.47" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="972.4" y="533" width="8.4" height="15.0" fill="rgb(254,58,0)" rx="2" ry="2" />
<text  x="975.41" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.42%)</title><rect x="604.2" y="549" width="16.7" height="15.0" fill="rgb(254,137,50)" rx="2" ry="2" />
<text  x="607.18" y="559.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 45.39%)</title><rect x="18.4" y="293" width="535.6" height="15.0" fill="rgb(228,12,16)" rx="2" ry="2" />
<text  x="21.37" y="303.5" >remote_function</text>
</g>
<g >
<title>__libc_start_main (64 samples, 45.39%)</title><rect x="18.4" y="549" width="535.6" height="15.0" fill="rgb(216,146,37)" rx="2" ry="2" />
<text  x="21.37" y="559.5" >__libc_start_main</text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.71%)</title><rect x="1064.5" y="165" width="8.3" height="15.0" fill="rgb(253,12,19)" rx="2" ry="2" />
<text  x="1067.47" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="1064.5" y="389" width="8.3" height="15.0" fill="rgb(249,90,4)" rx="2" ry="2" />
<text  x="1067.47" y="399.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="1064.5" y="437" width="8.3" height="15.0" fill="rgb(232,145,19)" rx="2" ry="2" />
<text  x="1067.47" y="447.5" ></text>
</g>
<g >
<title>NaClForkThreadContextSetup (32 samples, 22.70%)</title><rect x="704.6" y="277" width="267.8" height="15.0" fill="rgb(220,38,18)" rx="2" ry="2" />
<text  x="707.61" y="287.5" >NaClForkThreadContextSetup</text>
</g>
<g >
<title>lind (1 samples, 0.71%)</title><rect x="10.0" y="581" width="8.4" height="15.0" fill="rgb(213,189,46)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>do_idle (13 samples, 9.22%)</title><rect x="1072.8" y="517" width="108.8" height="15.0" fill="rgb(229,220,22)" rx="2" ry="2" />
<text  x="1075.84" y="527.5" >do_idle</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.71%)</title><rect x="687.9" y="101" width="8.3" height="15.0" fill="rgb(243,140,46)" rx="2" ry="2" />
<text  x="690.87" y="111.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (32 samples, 22.70%)</title><rect x="704.6" y="341" width="267.8" height="15.0" fill="rgb(210,105,40)" rx="2" ry="2" />
<text  x="707.61" y="351.5" >NaClSysForkDecoder</text>
</g>
<g >
<title>new_sync_write (1 samples, 0.71%)</title><rect x="1064.5" y="277" width="8.3" height="15.0" fill="rgb(239,202,4)" rx="2" ry="2" />
<text  x="1067.47" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 1.42%)</title><rect x="955.7" y="261" width="16.7" height="15.0" fill="rgb(246,146,2)" rx="2" ry="2" />
<text  x="958.67" y="271.5" ></text>
</g>
<g >
<title>sys_write (1 samples, 0.71%)</title><rect x="1064.5" y="325" width="8.3" height="15.0" fill="rgb(238,64,17)" rx="2" ry="2" />
<text  x="1067.47" y="335.5" ></text>
</g>
<g >
<title>__getblk_gfp (1 samples, 0.71%)</title><rect x="10.0" y="197" width="8.4" height="15.0" fill="rgb(217,79,42)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>__clone (1 samples, 0.71%)</title><rect x="1005.9" y="565" width="8.4" height="15.0" fill="rgb(215,2,0)" rx="2" ry="2" />
<text  x="1008.89" y="575.5" ></text>
</g>
<g >
<title>[unknown]  (32 samples, 22.70%)</title><rect x="704.6" y="389" width="267.8" height="15.0" fill="rgb(219,226,17)" rx="2" ry="2" />
<text  x="707.61" y="399.5" >[unknown] </text>
</g>
<g >
<title>shmem_truncate_range (1 samples, 0.71%)</title><rect x="1031.0" y="293" width="8.4" height="15.0" fill="rgb(214,84,14)" rx="2" ry="2" />
<text  x="1033.99" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 45.39%)</title><rect x="18.4" y="453" width="535.6" height="15.0" fill="rgb(208,90,41)" rx="2" ry="2" />
<text  x="21.37" y="463.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>do_vfs_ioctl (64 samples, 45.39%)</title><rect x="18.4" y="405" width="535.6" height="15.0" fill="rgb(214,140,37)" rx="2" ry="2" />
<text  x="21.37" y="415.5" >do_vfs_ioctl</text>
</g>
<g >
<title>unmap_single_vma (2 samples, 1.42%)</title><rect x="1014.3" y="405" width="16.7" height="15.0" fill="rgb(250,194,24)" rx="2" ry="2" />
<text  x="1017.26" y="415.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (32 samples, 22.70%)</title><rect x="704.6" y="357" width="267.8" height="15.0" fill="rgb(219,217,40)" rx="2" ry="2" />
<text  x="707.61" y="367.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.71%)</title><rect x="1031.0" y="229" width="8.4" height="15.0" fill="rgb(227,226,32)" rx="2" ry="2" />
<text  x="1033.99" y="239.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="1064.5" y="373" width="8.3" height="15.0" fill="rgb(226,195,33)" rx="2" ry="2" />
<text  x="1067.47" y="383.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.71%)</title><rect x="1031.0" y="421" width="8.4" height="15.0" fill="rgb(236,188,2)" rx="2" ry="2" />
<text  x="1033.99" y="431.5" ></text>
</g>
<g >
<title>__GI___execve (1 samples, 0.71%)</title><rect x="10.0" y="549" width="8.4" height="15.0" fill="rgb(228,135,21)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (64 samples, 45.39%)</title><rect x="18.4" y="437" width="535.6" height="15.0" fill="rgb(230,167,6)" rx="2" ry="2" />
<text  x="21.37" y="447.5" >do_syscall_64</text>
</g>
<g >
<title>[unknown] (39 samples, 27.66%)</title><rect x="654.4" y="549" width="326.4" height="15.0" fill="rgb(218,227,46)" rx="2" ry="2" />
<text  x="657.40" y="559.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="1064.5" y="533" width="8.3" height="15.0" fill="rgb(222,78,15)" rx="2" ry="2" />
<text  x="1067.47" y="543.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (3 samples, 2.13%)</title><rect x="1014.3" y="533" width="25.1" height="15.0" fill="rgb(220,62,18)" rx="2" ry="2" />
<text  x="1017.26" y="543.5" >e..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="1064.5" y="421" width="8.3" height="15.0" fill="rgb(251,25,40)" rx="2" ry="2" />
<text  x="1067.47" y="431.5" ></text>
</g>
<g >
<title>tupledealloc.lto_priv.0 (1 samples, 0.71%)</title><rect x="997.5" y="549" width="8.4" height="15.0" fill="rgb(220,140,43)" rx="2" ry="2" />
<text  x="1000.52" y="559.5" ></text>
</g>
<g >
<title>swapper (17 samples, 12.06%)</title><rect x="1047.7" y="581" width="142.3" height="15.0" fill="rgb(229,6,25)" rx="2" ry="2" />
<text  x="1050.73" y="591.5" >swapper</text>
</g>
<g >
<title>[unknown]  (37 samples, 26.24%)</title><rect x="662.8" y="469" width="309.6" height="15.0" fill="rgb(228,24,11)" rx="2" ry="2" />
<text  x="665.77" y="479.5" >[unknown] </text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="972.4" y="517" width="8.4" height="15.0" fill="rgb(225,8,4)" rx="2" ry="2" />
<text  x="975.41" y="527.5" ></text>
</g>
<g >
<title>__task_rq_lock (1 samples, 0.71%)</title><rect x="905.5" y="69" width="8.3" height="15.0" fill="rgb(211,211,46)" rx="2" ry="2" />
<text  x="908.46" y="79.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.71%)</title><rect x="1031.0" y="213" width="8.4" height="15.0" fill="rgb(221,199,54)" rx="2" ry="2" />
<text  x="1033.99" y="223.5" ></text>
</g>
<g >
<title>NaClSimpleServiceCtor (1 samples, 0.71%)</title><rect x="687.9" y="245" width="8.3" height="15.0" fill="rgb(220,121,30)" rx="2" ry="2" />
<text  x="690.87" y="255.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 4.26%)</title><rect x="905.5" y="181" width="50.2" height="15.0" fill="rgb(213,88,2)" rx="2" ry="2" />
<text  x="908.46" y="191.5" >do_pa..</text>
</g>
<g >
<title>prepare_binprm (1 samples, 0.71%)</title><rect x="10.0" y="469" width="8.4" height="15.0" fill="rgb(245,74,42)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.71%)</title><rect x="1031.0" y="373" width="8.4" height="15.0" fill="rgb(232,4,46)" rx="2" ry="2" />
<text  x="1033.99" y="383.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.71%)</title><rect x="905.5" y="101" width="8.3" height="15.0" fill="rgb(227,93,10)" rx="2" ry="2" />
<text  x="908.46" y="111.5" ></text>
</g>
<g >
<title>native_write_msr (48 samples, 34.04%)</title><rect x="26.7" y="181" width="401.7" height="15.0" fill="rgb(250,184,13)" rx="2" ry="2" />
<text  x="29.74" y="191.5" >native_write_msr</text>
</g>
<g >
<title>dput (1 samples, 0.71%)</title><rect x="1031.0" y="405" width="8.4" height="15.0" fill="rgb(241,199,38)" rx="2" ry="2" />
<text  x="1033.99" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (22 samples, 15.60%)</title><rect x="771.6" y="213" width="184.1" height="15.0" fill="rgb(227,185,13)" rx="2" ry="2" />
<text  x="774.56" y="223.5" >__memmove_avx_unaligned_..</text>
</g>
<g >
<title>mmput (2 samples, 1.42%)</title><rect x="1014.3" y="453" width="16.7" height="15.0" fill="rgb(235,2,36)" rx="2" ry="2" />
<text  x="1017.26" y="463.5" ></text>
</g>
<g >
<title>perf (65 samples, 46.10%)</title><rect x="18.4" y="581" width="543.9" height="15.0" fill="rgb(234,101,15)" rx="2" ry="2" />
<text  x="21.37" y="591.5" >perf</text>
</g>
<g >
<title>__GI___ioctl (64 samples, 45.39%)</title><rect x="18.4" y="469" width="535.6" height="15.0" fill="rgb(216,64,43)" rx="2" ry="2" />
<text  x="21.37" y="479.5" >__GI___ioctl</text>
</g>
<g >
<title>sys_execve (1 samples, 0.71%)</title><rect x="554.0" y="437" width="8.3" height="15.0" fill="rgb(225,93,28)" rx="2" ry="2" />
<text  x="556.97" y="447.5" ></text>
</g>
<g >
<title>[sel_ldr] (32 samples, 22.70%)</title><rect x="704.6" y="373" width="267.8" height="15.0" fill="rgb(228,39,5)" rx="2" ry="2" />
<text  x="707.61" y="383.5" >[sel_ldr]</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.71%)</title><rect x="654.4" y="533" width="8.4" height="15.0" fill="rgb(236,193,14)" rx="2" ry="2" />
<text  x="657.40" y="543.5" ></text>
</g>
<g >
<title>sys_socketpair (1 samples, 0.71%)</title><rect x="687.9" y="165" width="8.3" height="15.0" fill="rgb(227,190,52)" rx="2" ry="2" />
<text  x="690.87" y="175.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.71%)</title><rect x="1064.5" y="197" width="8.3" height="15.0" fill="rgb(250,175,36)" rx="2" ry="2" />
<text  x="1067.47" y="207.5" ></text>
</g>
<g >
<title>NaClKernelServiceCtor (1 samples, 0.71%)</title><rect x="687.9" y="261" width="8.3" height="15.0" fill="rgb(251,195,39)" rx="2" ry="2" />
<text  x="690.87" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="1064.5" y="517" width="8.3" height="15.0" fill="rgb(239,117,0)" rx="2" ry="2" />
<text  x="1067.47" y="527.5" ></text>
</g>
<g >
<title>smp_call_function_single (64 samples, 45.39%)</title><rect x="18.4" y="325" width="535.6" height="15.0" fill="rgb(215,75,27)" rx="2" ry="2" />
<text  x="21.37" y="335.5" >smp_call_function_single</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.71%)</title><rect x="1064.5" y="357" width="8.3" height="15.0" fill="rgb(217,117,53)" rx="2" ry="2" />
<text  x="1067.47" y="367.5" ></text>
</g>
<g >
<title>main (1 samples, 0.71%)</title><rect x="554.0" y="549" width="8.3" height="15.0" fill="rgb(223,162,13)" rx="2" ry="2" />
<text  x="556.97" y="559.5" ></text>
</g>
<g >
<title>PyObject_Size (1 samples, 0.71%)</title><rect x="629.3" y="549" width="8.4" height="15.0" fill="rgb(245,107,4)" rx="2" ry="2" />
<text  x="632.29" y="559.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.71%)</title><rect x="905.5" y="149" width="8.3" height="15.0" fill="rgb(206,2,25)" rx="2" ry="2" />
<text  x="908.46" y="159.5" ></text>
</g>
<g >
<title>get_vfs_caps_from_disk (1 samples, 0.71%)</title><rect x="10.0" y="421" width="8.4" height="15.0" fill="rgb(253,52,53)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>__GI___execve (1 samples, 0.71%)</title><rect x="554.0" y="485" width="8.3" height="15.0" fill="rgb(237,150,52)" rx="2" ry="2" />
<text  x="556.97" y="495.5" ></text>
</g>
<g >
<title>PyCFunction_Call (2 samples, 1.42%)</title><rect x="587.4" y="549" width="16.8" height="15.0" fill="rgb(232,13,22)" rx="2" ry="2" />
<text  x="590.45" y="559.5" ></text>
</g>
<g >
<title>__GI___socketpair (1 samples, 0.71%)</title><rect x="687.9" y="213" width="8.3" height="15.0" fill="rgb(218,31,31)" rx="2" ry="2" />
<text  x="690.87" y="223.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 45.39%)</title><rect x="18.4" y="245" width="535.6" height="15.0" fill="rgb(249,116,52)" rx="2" ry="2" />
<text  x="21.37" y="255.5" >ctx_resched</text>
</g>
<g >
<title>iput (1 samples, 0.71%)</title><rect x="1031.0" y="341" width="8.4" height="15.0" fill="rgb(216,136,27)" rx="2" ry="2" />
<text  x="1033.99" y="351.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.71%)</title><rect x="1181.6" y="469" width="8.4" height="15.0" fill="rgb(241,210,3)" rx="2" ry="2" />
<text  x="1184.63" y="479.5" ></text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.71%)</title><rect x="1031.0" y="261" width="8.4" height="15.0" fill="rgb(242,113,39)" rx="2" ry="2" />
<text  x="1033.99" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="972.4" y="485" width="8.4" height="15.0" fill="rgb(222,92,53)" rx="2" ry="2" />
<text  x="975.41" y="495.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (64 samples, 45.39%)</title><rect x="18.4" y="197" width="535.6" height="15.0" fill="rgb(241,114,23)" rx="2" ry="2" />
<text  x="21.37" y="207.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.71%)</title><rect x="696.2" y="277" width="8.4" height="15.0" fill="rgb(223,73,34)" rx="2" ry="2" />
<text  x="699.24" y="287.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.71%)</title><rect x="696.2" y="181" width="8.4" height="15.0" fill="rgb(213,228,45)" rx="2" ry="2" />
<text  x="699.24" y="191.5" ></text>
</g>
<g >
<title>xattr_getsecurity (1 samples, 0.71%)</title><rect x="10.0" y="341" width="8.4" height="15.0" fill="rgb(241,107,27)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.71%)</title><rect x="846.9" y="181" width="8.3" height="15.0" fill="rgb(214,177,22)" rx="2" ry="2" />
<text  x="849.88" y="191.5" ></text>
</g>
<g >
<title>start_secondary (13 samples, 9.22%)</title><rect x="1072.8" y="549" width="108.8" height="15.0" fill="rgb(216,69,9)" rx="2" ry="2" />
<text  x="1075.84" y="559.5" >start_secondary</text>
</g>
<g >
<title>do_exit (3 samples, 2.13%)</title><rect x="1014.3" y="469" width="25.1" height="15.0" fill="rgb(244,193,30)" rx="2" ry="2" />
<text  x="1017.26" y="479.5" >d..</text>
</g>
<g >
<title>shmem_fault (1 samples, 0.71%)</title><rect x="913.8" y="101" width="8.4" height="15.0" fill="rgb(232,218,49)" rx="2" ry="2" />
<text  x="916.83" y="111.5" ></text>
</g>
<g >
<title>get_signal (3 samples, 2.13%)</title><rect x="1014.3" y="501" width="25.1" height="15.0" fill="rgb(226,141,41)" rx="2" ry="2" />
<text  x="1017.26" y="511.5" >g..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="1064.5" y="485" width="8.3" height="15.0" fill="rgb(225,3,52)" rx="2" ry="2" />
<text  x="1067.47" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.71%)</title><rect x="1005.9" y="533" width="8.4" height="15.0" fill="rgb(206,195,44)" rx="2" ry="2" />
<text  x="1008.89" y="543.5" ></text>
</g>
<g >
<title>cmd_record (64 samples, 45.39%)</title><rect x="18.4" y="501" width="535.6" height="15.0" fill="rgb(242,93,14)" rx="2" ry="2" />
<text  x="21.37" y="511.5" >cmd_record</text>
</g>
<g >
<title>ovl_xattr_get (1 samples, 0.71%)</title><rect x="10.0" y="373" width="8.4" height="15.0" fill="rgb(221,64,23)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 1.42%)</title><rect x="922.2" y="85" width="16.7" height="15.0" fill="rgb(221,200,44)" rx="2" ry="2" />
<text  x="925.20" y="95.5" ></text>
</g>
<g >
<title>security_inode_getsecurity (1 samples, 0.71%)</title><rect x="10.0" y="325" width="8.4" height="15.0" fill="rgb(236,126,32)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>rest_init (1 samples, 0.71%)</title><rect x="1181.6" y="501" width="8.4" height="15.0" fill="rgb(229,83,5)" rx="2" ry="2" />
<text  x="1184.63" y="511.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (1 samples, 0.71%)</title><rect x="10.0" y="213" width="8.4" height="15.0" fill="rgb(246,168,11)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 2.13%)</title><rect x="1014.3" y="565" width="25.1" height="15.0" fill="rgb(221,121,19)" rx="2" ry="2" />
<text  x="1017.26" y="575.5" >e..</text>
</g>
<g >
<title>exit_mmap (2 samples, 1.42%)</title><rect x="1014.3" y="437" width="16.7" height="15.0" fill="rgb(230,37,48)" rx="2" ry="2" />
<text  x="1017.26" y="447.5" ></text>
</g>
<g >
<title>NaClCreateThread (32 samples, 22.70%)</title><rect x="704.6" y="309" width="267.8" height="15.0" fill="rgb(239,132,2)" rx="2" ry="2" />
<text  x="707.61" y="319.5" >NaClCreateThread</text>
</g>
<g >
<title>dput.part.26 (1 samples, 0.71%)</title><rect x="1031.0" y="389" width="8.4" height="15.0" fill="rgb(229,219,30)" rx="2" ry="2" />
<text  x="1033.99" y="399.5" ></text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.71%)</title><rect x="696.2" y="213" width="8.4" height="15.0" fill="rgb(222,197,45)" rx="2" ry="2" />
<text  x="699.24" y="223.5" ></text>
</g>
<g >
<title>cpu_startup_entry (13 samples, 9.22%)</title><rect x="1072.8" y="533" width="108.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1075.84" y="543.5" >cpu_startup_e..</text>
</g>
<g >
<title>NaClCommonDescMakeBoundSock (1 samples, 0.71%)</title><rect x="687.9" y="229" width="8.3" height="15.0" fill="rgb(240,137,32)" rx="2" ry="2" />
<text  x="690.87" y="239.5" ></text>
</g>
<g >
<title>[sel_ldr] (2 samples, 1.42%)</title><rect x="687.9" y="357" width="16.7" height="15.0" fill="rgb(233,171,37)" rx="2" ry="2" />
<text  x="690.87" y="367.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.71%)</title><rect x="1031.0" y="357" width="8.4" height="15.0" fill="rgb(223,53,43)" rx="2" ry="2" />
<text  x="1033.99" y="367.5" ></text>
</g>
<g >
<title>PyString_Concat (1 samples, 0.71%)</title><rect x="637.7" y="549" width="8.3" height="15.0" fill="rgb(236,36,32)" rx="2" ry="2" />
<text  x="640.66" y="559.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 45.39%)</title><rect x="18.4" y="373" width="535.6" height="15.0" fill="rgb(254,105,3)" rx="2" ry="2" />
<text  x="21.37" y="383.5" >perf_event_for_each_child</text>
</g>
<g >
<title>unmap_page_range (2 samples, 1.42%)</title><rect x="1014.3" y="389" width="16.7" height="15.0" fill="rgb(252,153,6)" rx="2" ry="2" />
<text  x="1017.26" y="399.5" ></text>
</g>
<g >
<title>sys_ioctl (64 samples, 45.39%)</title><rect x="18.4" y="421" width="535.6" height="15.0" fill="rgb(205,217,4)" rx="2" ry="2" />
<text  x="21.37" y="431.5" >sys_ioctl</text>
</g>
<g >
<title>call_cpuidle (1 samples, 0.71%)</title><rect x="1181.6" y="453" width="8.4" height="15.0" fill="rgb(253,206,15)" rx="2" ry="2" />
<text  x="1184.63" y="463.5" ></text>
</g>
<g >
<title>ext4_xattr_ibody_get (1 samples, 0.71%)</title><rect x="10.0" y="245" width="8.4" height="15.0" fill="rgb(211,4,36)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.71%)</title><rect x="913.8" y="117" width="8.4" height="15.0" fill="rgb(206,80,33)" rx="2" ry="2" />
<text  x="916.83" y="127.5" ></text>
</g>
<g >
<title>[perf-1555.map] (2 samples, 1.42%)</title><rect x="687.9" y="373" width="16.7" height="15.0" fill="rgb(208,119,34)" rx="2" ry="2" />
<text  x="690.87" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="10.0" y="565" width="8.4" height="15.0" fill="rgb(220,123,52)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>[perf-1555.map] (37 samples, 26.24%)</title><rect x="662.8" y="533" width="309.6" height="15.0" fill="rgb(249,135,40)" rx="2" ry="2" />
<text  x="665.77" y="543.5" >[perf-1555.map]</text>
</g>
<g >
<title>cap_bprm_set_creds (1 samples, 0.71%)</title><rect x="10.0" y="437" width="8.4" height="15.0" fill="rgb(245,188,0)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>NaClPatchAddr (8 samples, 5.67%)</title><rect x="704.6" y="197" width="67.0" height="15.0" fill="rgb(222,128,33)" rx="2" ry="2" />
<text  x="707.61" y="207.5" >NaClPat..</text>
</g>
<g >
<title>do_signal (3 samples, 2.13%)</title><rect x="1014.3" y="517" width="25.1" height="15.0" fill="rgb(220,89,4)" rx="2" ry="2" />
<text  x="1017.26" y="527.5" >d..</text>
</g>
<g >
<title>[unknown]  (37 samples, 26.24%)</title><rect x="662.8" y="517" width="309.6" height="15.0" fill="rgb(240,47,39)" rx="2" ry="2" />
<text  x="665.77" y="527.5" >[unknown] </text>
</g>
<g >
<title>sys_execve (1 samples, 0.71%)</title><rect x="10.0" y="501" width="8.4" height="15.0" fill="rgb(211,42,50)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.71%)</title><rect x="10.0" y="485" width="8.4" height="15.0" fill="rgb(208,109,32)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.71%)</title><rect x="1181.6" y="421" width="8.4" height="15.0" fill="rgb(250,100,6)" rx="2" ry="2" />
<text  x="1184.63" y="431.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.71%)</title><rect x="964.0" y="197" width="8.4" height="15.0" fill="rgb(209,226,28)" rx="2" ry="2" />
<text  x="967.04" y="207.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.71%)</title><rect x="554.0" y="421" width="8.3" height="15.0" fill="rgb(243,92,29)" rx="2" ry="2" />
<text  x="556.97" y="431.5" ></text>
</g>
<g >
<title>NaClAppLaunchServiceThreads (1 samples, 0.71%)</title><rect x="687.9" y="277" width="8.3" height="15.0" fill="rgb(215,219,38)" rx="2" ry="2" />
<text  x="690.87" y="287.5" ></text>
</g>
<g >
<title>profile_transition.isra.8 (1 samples, 0.71%)</title><rect x="554.0" y="357" width="8.3" height="15.0" fill="rgb(237,202,37)" rx="2" ry="2" />
<text  x="556.97" y="367.5" ></text>
</g>
<g >
<title>evlist__enable (64 samples, 45.39%)</title><rect x="18.4" y="485" width="535.6" height="15.0" fill="rgb(234,199,30)" rx="2" ry="2" />
<text  x="21.37" y="495.5" >evlist__enable</text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.71%)</title><rect x="1064.5" y="245" width="8.3" height="15.0" fill="rgb(235,17,5)" rx="2" ry="2" />
<text  x="1067.47" y="255.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 1.42%)</title><rect x="955.7" y="213" width="16.7" height="15.0" fill="rgb(227,222,51)" rx="2" ry="2" />
<text  x="958.67" y="223.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.71%)</title><rect x="1022.6" y="357" width="8.4" height="15.0" fill="rgb(207,132,43)" rx="2" ry="2" />
<text  x="1025.62" y="367.5" ></text>
</g>
<g >
<title>[unknown]  (34 samples, 24.11%)</title><rect x="687.9" y="437" width="284.5" height="15.0" fill="rgb(213,229,51)" rx="2" ry="2" />
<text  x="690.87" y="447.5" >[unknown] </text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.71%)</title><rect x="1031.0" y="277" width="8.4" height="15.0" fill="rgb(250,45,0)" rx="2" ry="2" />
<text  x="1033.99" y="287.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 35.46%)</title><rect x="587.4" y="565" width="418.5" height="15.0" fill="rgb(233,82,23)" rx="2" ry="2" />
<text  x="590.45" y="575.5" >[unknown]</text>
</g>
<g >
<title>__GI___libc_sigaction (1 samples, 0.71%)</title><rect x="1005.9" y="549" width="8.4" height="15.0" fill="rgb(231,65,32)" rx="2" ry="2" />
<text  x="1008.89" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 2.13%)</title><rect x="1014.3" y="549" width="25.1" height="15.0" fill="rgb(254,24,29)" rx="2" ry="2" />
<text  x="1017.26" y="559.5" >d..</text>
</g>
<g >
<title>[unknown] (3 samples, 2.13%)</title><rect x="1047.7" y="565" width="25.1" height="15.0" fill="rgb(251,44,37)" rx="2" ry="2" />
<text  x="1050.73" y="575.5" >[..</text>
</g>
<g >
<title>vfs_write (1 samples, 0.71%)</title><rect x="1064.5" y="309" width="8.3" height="15.0" fill="rgb(241,28,3)" rx="2" ry="2" />
<text  x="1067.47" y="319.5" ></text>
</g>
<g >
<title>[unknown]  (34 samples, 24.11%)</title><rect x="687.9" y="405" width="284.5" height="15.0" fill="rgb(217,203,9)" rx="2" ry="2" />
<text  x="690.87" y="415.5" >[unknown] </text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.71%)</title><rect x="554.0" y="469" width="8.3" height="15.0" fill="rgb(250,128,14)" rx="2" ry="2" />
<text  x="556.97" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.71%)</title><rect x="687.9" y="181" width="8.3" height="15.0" fill="rgb(247,99,32)" rx="2" ry="2" />
<text  x="690.87" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.71%)</title><rect x="10.0" y="517" width="8.4" height="15.0" fill="rgb(224,172,47)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>security_bprm_set_creds (1 samples, 0.71%)</title><rect x="10.0" y="453" width="8.4" height="15.0" fill="rgb(241,10,3)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (1 samples, 0.71%)</title><rect x="1064.5" y="229" width="8.3" height="15.0" fill="rgb(240,109,28)" rx="2" ry="2" />
<text  x="1067.47" y="239.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.71%)</title><rect x="1031.0" y="437" width="8.4" height="15.0" fill="rgb(247,4,10)" rx="2" ry="2" />
<text  x="1033.99" y="447.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.71%)</title><rect x="905.5" y="37" width="8.3" height="15.0" fill="rgb(213,30,10)" rx="2" ry="2" />
<text  x="908.46" y="47.5" ></text>
</g>
<g >
<title>__find_get_block (1 samples, 0.71%)</title><rect x="10.0" y="181" width="8.4" height="15.0" fill="rgb(217,204,22)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>NaClValidateImage (1 samples, 0.71%)</title><rect x="696.2" y="229" width="8.4" height="15.0" fill="rgb(228,46,47)" rx="2" ry="2" />
<text  x="699.24" y="239.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.71%)</title><rect x="1031.0" y="245" width="8.4" height="15.0" fill="rgb(247,173,24)" rx="2" ry="2" />
<text  x="1033.99" y="255.5" ></text>
</g>
<g >
<title>[unknown] (64 samples, 45.39%)</title><rect x="18.4" y="565" width="535.6" height="15.0" fill="rgb(251,111,13)" rx="2" ry="2" />
<text  x="21.37" y="575.5" >[unknown]</text>
</g>
<g >
<title>perf_ioctl (64 samples, 45.39%)</title><rect x="18.4" y="389" width="535.6" height="15.0" fill="rgb(234,174,27)" rx="2" ry="2" />
<text  x="21.37" y="399.5" >perf_ioctl</text>
</g>
<g >
<title>sock_write_iter (1 samples, 0.71%)</title><rect x="1064.5" y="261" width="8.3" height="15.0" fill="rgb(236,139,7)" rx="2" ry="2" />
<text  x="1067.47" y="271.5" ></text>
</g>
<g >
<title>ovl_other_xattr_get (1 samples, 0.71%)</title><rect x="10.0" y="389" width="8.4" height="15.0" fill="rgb(214,143,43)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 3.55%)</title><rect x="913.8" y="149" width="41.9" height="15.0" fill="rgb(226,61,6)" rx="2" ry="2" />
<text  x="916.83" y="159.5" >han..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="1064.5" y="501" width="8.3" height="15.0" fill="rgb(249,10,36)" rx="2" ry="2" />
<text  x="1067.47" y="511.5" ></text>
</g>
<g >
<title>ext4_xattr_get (1 samples, 0.71%)</title><rect x="10.0" y="261" width="8.4" height="15.0" fill="rgb(223,205,14)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>main (64 samples, 45.39%)</title><rect x="18.4" y="533" width="535.6" height="15.0" fill="rgb(208,52,32)" rx="2" ry="2" />
<text  x="21.37" y="543.5" >main</text>
</g>
<g >
<title>default_do_nmi (1 samples, 0.71%)</title><rect x="18.4" y="181" width="8.3" height="15.0" fill="rgb(244,13,1)" rx="2" ry="2" />
<text  x="21.37" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="972.4" y="501" width="8.4" height="15.0" fill="rgb(217,156,8)" rx="2" ry="2" />
<text  x="975.41" y="511.5" ></text>
</g>
<g >
<title>PyObject_GetItem (1 samples, 0.71%)</title><rect x="620.9" y="549" width="8.4" height="15.0" fill="rgb(253,179,44)" rx="2" ry="2" />
<text  x="623.92" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.71%)</title><rect x="1064.5" y="405" width="8.3" height="15.0" fill="rgb(254,194,35)" rx="2" ry="2" />
<text  x="1067.47" y="415.5" ></text>
</g>
<g >
<title>run_builtin (1 samples, 0.71%)</title><rect x="554.0" y="533" width="8.3" height="15.0" fill="rgb(227,3,50)" rx="2" ry="2" />
<text  x="556.97" y="543.5" ></text>
</g>
<g >
<title>[unknown]  (37 samples, 26.24%)</title><rect x="662.8" y="501" width="309.6" height="15.0" fill="rgb(225,211,6)" rx="2" ry="2" />
<text  x="665.77" y="511.5" >[unknown] </text>
</g>
<g >
<title>perf_evlist__prepare_workload (1 samples, 0.71%)</title><rect x="554.0" y="501" width="8.3" height="15.0" fill="rgb(221,134,47)" rx="2" ry="2" />
<text  x="556.97" y="511.5" ></text>
</g>
<g >
<title>prepare_binprm (1 samples, 0.71%)</title><rect x="554.0" y="405" width="8.3" height="15.0" fill="rgb(213,195,21)" rx="2" ry="2" />
<text  x="556.97" y="415.5" ></text>
</g>
<g >
<title>NaClCopyDynamicText (30 samples, 21.28%)</title><rect x="704.6" y="245" width="251.1" height="15.0" fill="rgb(207,164,51)" rx="2" ry="2" />
<text  x="707.61" y="255.5" >NaClCopyDynamicText</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.71%)</title><rect x="10.0" y="533" width="8.4" height="15.0" fill="rgb(238,187,39)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>NaClVmmapVisit (30 samples, 21.28%)</title><rect x="704.6" y="229" width="251.1" height="15.0" fill="rgb(249,193,12)" rx="2" ry="2" />
<text  x="707.61" y="239.5" >NaClVmmapVisit</text>
</g>
<g >
<title>ext4_xattr_security_get (1 samples, 0.71%)</title><rect x="10.0" y="277" width="8.4" height="15.0" fill="rgb(205,190,18)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>call_rwsem_down_read_failed (1 samples, 0.71%)</title><rect x="905.5" y="133" width="8.3" height="15.0" fill="rgb(241,17,21)" rx="2" ry="2" />
<text  x="908.46" y="143.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.71%)</title><rect x="972.4" y="469" width="8.4" height="15.0" fill="rgb(214,168,22)" rx="2" ry="2" />
<text  x="975.41" y="479.5" ></text>
</g>
<g >
<title>NaClAppThreadSpawn (32 samples, 22.70%)</title><rect x="704.6" y="293" width="267.8" height="15.0" fill="rgb(246,73,24)" rx="2" ry="2" />
<text  x="707.61" y="303.5" >NaClAppThreadSpawn</text>
</g>
<g >
<title>intel_idle (13 samples, 9.22%)</title><rect x="1072.8" y="453" width="108.8" height="15.0" fill="rgb(235,11,6)" rx="2" ry="2" />
<text  x="1075.84" y="463.5" >intel_idle</text>
</g>
</g>
</svg>
