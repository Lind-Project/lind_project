<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>__fput (1 samples, 0.68%)</title><rect x="955.6" y="437" width="8.1" height="15.0" fill="rgb(231,8,16)" rx="2" ry="2" />
<text  x="958.62" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.68%)</title><rect x="907.1" y="533" width="8.1" height="15.0" fill="rgb(206,129,45)" rx="2" ry="2" />
<text  x="910.12" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.68%)</title><rect x="987.9" y="421" width="8.1" height="15.0" fill="rgb(221,203,11)" rx="2" ry="2" />
<text  x="990.95" y="431.5" ></text>
</g>
<g >
<title>call_cpuidle (3 samples, 2.05%)</title><rect x="1165.8" y="469" width="24.2" height="15.0" fill="rgb(219,208,22)" rx="2" ry="2" />
<text  x="1168.75" y="479.5" >c..</text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.68%)</title><rect x="955.6" y="325" width="8.1" height="15.0" fill="rgb(206,144,43)" rx="2" ry="2" />
<text  x="958.62" y="335.5" ></text>
</g>
<g >
<title>cmd_record (64 samples, 43.84%)</title><rect x="10.0" y="517" width="517.3" height="15.0" fill="rgb(254,198,0)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >cmd_record</text>
</g>
<g >
<title>call_rwsem_wake (1 samples, 0.68%)</title><rect x="931.4" y="485" width="8.1" height="15.0" fill="rgb(238,143,31)" rx="2" ry="2" />
<text  x="934.37" y="495.5" ></text>
</g>
<g >
<title>NaClVmmapVisit (25 samples, 17.12%)</title><rect x="664.7" y="245" width="202.0" height="15.0" fill="rgb(228,79,40)" rx="2" ry="2" />
<text  x="667.66" y="255.5" >NaClVmmapVisit</text>
</g>
<g >
<title>shmem_truncate_range (1 samples, 0.68%)</title><rect x="955.6" y="309" width="8.1" height="15.0" fill="rgb(223,67,39)" rx="2" ry="2" />
<text  x="958.62" y="319.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.68%)</title><rect x="955.6" y="453" width="8.1" height="15.0" fill="rgb(205,63,10)" rx="2" ry="2" />
<text  x="958.62" y="463.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.68%)</title><rect x="931.4" y="421" width="8.1" height="15.0" fill="rgb(221,193,17)" rx="2" ry="2" />
<text  x="934.37" y="431.5" ></text>
</g>
<g >
<title>[unknown]  (26 samples, 17.81%)</title><rect x="656.6" y="421" width="210.1" height="15.0" fill="rgb(239,124,37)" rx="2" ry="2" />
<text  x="659.58" y="431.5" >[unknown] </text>
</g>
<g >
<title>NaClForkThreadContextSetup (25 samples, 17.12%)</title><rect x="664.7" y="293" width="202.0" height="15.0" fill="rgb(240,29,53)" rx="2" ry="2" />
<text  x="667.66" y="303.5" >NaClForkThreadContextSetup</text>
</g>
<g >
<title>[unknown] (3 samples, 2.05%)</title><rect x="963.7" y="437" width="24.2" height="15.0" fill="rgb(229,156,34)" rx="2" ry="2" />
<text  x="966.70" y="447.5" >[..</text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.68%)</title><rect x="955.6" y="373" width="8.1" height="15.0" fill="rgb(244,22,54)" rx="2" ry="2" />
<text  x="958.62" y="383.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (26 samples, 17.81%)</title><rect x="656.6" y="357" width="210.1" height="15.0" fill="rgb(218,182,17)" rx="2" ry="2" />
<text  x="659.58" y="367.5" >NaClSysForkDecoder</text>
</g>
<g >
<title>NaClCopyDynamicText (25 samples, 17.12%)</title><rect x="664.7" y="261" width="202.0" height="15.0" fill="rgb(221,151,41)" rx="2" ry="2" />
<text  x="667.66" y="271.5" >NaClCopyDynamicText</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 43.84%)</title><rect x="10.0" y="469" width="517.3" height="15.0" fill="rgb(212,15,51)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>exit_mmap (2 samples, 1.37%)</title><rect x="939.5" y="453" width="16.1" height="15.0" fill="rgb(253,168,37)" rx="2" ry="2" />
<text  x="942.45" y="463.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.68%)</title><rect x="963.7" y="213" width="8.1" height="15.0" fill="rgb(237,157,32)" rx="2" ry="2" />
<text  x="966.70" y="223.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.68%)</title><rect x="527.3" y="389" width="8.0" height="15.0" fill="rgb(228,93,9)" rx="2" ry="2" />
<text  x="530.26" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (22 samples, 15.07%)</title><rect x="987.9" y="485" width="177.9" height="15.0" fill="rgb(239,3,48)" rx="2" ry="2" />
<text  x="990.95" y="495.5" >cpuidle_enter_state</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (64 samples, 43.84%)</title><rect x="10.0" y="213" width="517.3" height="15.0" fill="rgb(247,36,30)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>call_cpuidle (22 samples, 15.07%)</title><rect x="987.9" y="517" width="177.9" height="15.0" fill="rgb(211,163,51)" rx="2" ry="2" />
<text  x="990.95" y="527.5" >call_cpuidle</text>
</g>
<g >
<title>do_idle (3 samples, 2.05%)</title><rect x="1165.8" y="485" width="24.2" height="15.0" fill="rgb(246,42,53)" rx="2" ry="2" />
<text  x="1168.75" y="495.5" >d..</text>
</g>
<g >
<title>link_path_walk (1 samples, 0.68%)</title><rect x="527.3" y="373" width="8.0" height="15.0" fill="rgb(215,192,39)" rx="2" ry="2" />
<text  x="530.26" y="383.5" ></text>
</g>
<g >
<title>intel_idle (20 samples, 13.70%)</title><rect x="996.0" y="469" width="161.7" height="15.0" fill="rgb(221,94,49)" rx="2" ry="2" />
<text  x="999.03" y="479.5" >intel_idle</text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.68%)</title><rect x="955.6" y="293" width="8.1" height="15.0" fill="rgb(227,227,52)" rx="2" ry="2" />
<text  x="958.62" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 1.37%)</title><rect x="923.3" y="549" width="16.2" height="15.0" fill="rgb(249,176,18)" rx="2" ry="2" />
<text  x="926.29" y="559.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 2.05%)</title><rect x="963.7" y="549" width="24.2" height="15.0" fill="rgb(218,170,36)" rx="2" ry="2" />
<text  x="966.70" y="559.5" >[..</text>
</g>
<g >
<title>[unknown] (2 samples, 1.37%)</title><rect x="963.7" y="421" width="16.2" height="15.0" fill="rgb(218,122,31)" rx="2" ry="2" />
<text  x="966.70" y="431.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 1.37%)</title><rect x="939.5" y="389" width="16.1" height="15.0" fill="rgb(213,142,44)" rx="2" ry="2" />
<text  x="942.45" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter (22 samples, 15.07%)</title><rect x="987.9" y="501" width="177.9" height="15.0" fill="rgb(242,210,4)" rx="2" ry="2" />
<text  x="990.95" y="511.5" >cpuidle_enter</text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 43.84%)</title><rect x="10.0" y="245" width="517.3" height="15.0" fill="rgb(250,55,29)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >x86_pmu_enable</text>
</g>
<g >
<title>do_open_execat (1 samples, 0.68%)</title><rect x="527.3" y="421" width="8.0" height="15.0" fill="rgb(224,219,5)" rx="2" ry="2" />
<text  x="530.26" y="431.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 29.45%)</title><rect x="575.8" y="581" width="347.5" height="15.0" fill="rgb(236,95,40)" rx="2" ry="2" />
<text  x="578.75" y="591.5" >[unknown]</text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.68%)</title><rect x="842.5" y="133" width="8.0" height="15.0" fill="rgb(213,96,34)" rx="2" ry="2" />
<text  x="845.47" y="143.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (3 samples, 2.05%)</title><rect x="1165.8" y="565" width="24.2" height="15.0" fill="rgb(230,96,23)" rx="2" ry="2" />
<text  x="1168.75" y="575.5" >x..</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.68%)</title><rect x="826.3" y="117" width="8.1" height="15.0" fill="rgb(225,86,52)" rx="2" ry="2" />
<text  x="829.30" y="127.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.68%)</title><rect x="656.6" y="213" width="8.1" height="15.0" fill="rgb(231,194,8)" rx="2" ry="2" />
<text  x="659.58" y="223.5" ></text>
</g>
<g >
<title>NaClCreateThread (25 samples, 17.12%)</title><rect x="664.7" y="325" width="202.0" height="15.0" fill="rgb(205,191,24)" rx="2" ry="2" />
<text  x="667.66" y="335.5" >NaClCreateThread</text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="963.7" y="357" width="8.1" height="15.0" fill="rgb(229,110,2)" rx="2" ry="2" />
<text  x="966.70" y="367.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.68%)</title><rect x="987.9" y="325" width="8.1" height="15.0" fill="rgb(222,111,34)" rx="2" ry="2" />
<text  x="990.95" y="335.5" ></text>
</g>
<g >
<title>[unknown]  (26 samples, 17.81%)</title><rect x="656.6" y="453" width="210.1" height="15.0" fill="rgb(221,150,44)" rx="2" ry="2" />
<text  x="659.58" y="463.5" >[unknown] </text>
</g>
<g >
<title>[perf-388.map] (28 samples, 19.18%)</title><rect x="640.4" y="549" width="226.3" height="15.0" fill="rgb(208,63,11)" rx="2" ry="2" />
<text  x="643.41" y="559.5" >[perf-388.map]</text>
</g>
<g >
<title>__GI___ioctl (64 samples, 43.84%)</title><rect x="10.0" y="485" width="517.3" height="15.0" fill="rgb(216,116,21)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >__GI___ioctl</text>
</g>
<g >
<title>rwsem_wake (1 samples, 0.68%)</title><rect x="931.4" y="469" width="8.1" height="15.0" fill="rgb(233,229,42)" rx="2" ry="2" />
<text  x="934.37" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.68%)</title><rect x="963.7" y="309" width="8.1" height="15.0" fill="rgb(251,223,45)" rx="2" ry="2" />
<text  x="966.70" y="319.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.68%)</title><rect x="907.1" y="437" width="8.1" height="15.0" fill="rgb(247,3,34)" rx="2" ry="2" />
<text  x="910.12" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.68%)</title><rect x="987.9" y="437" width="8.1" height="15.0" fill="rgb(252,33,19)" rx="2" ry="2" />
<text  x="990.95" y="447.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.68%)</title><rect x="527.3" y="405" width="8.0" height="15.0" fill="rgb(208,65,37)" rx="2" ry="2" />
<text  x="530.26" y="415.5" ></text>
</g>
<g >
<title>__mprotect (2 samples, 1.37%)</title><rect x="923.3" y="581" width="16.2" height="15.0" fill="rgb(254,13,26)" rx="2" ry="2" />
<text  x="926.29" y="591.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.68%)</title><rect x="971.8" y="341" width="8.1" height="15.0" fill="rgb(248,132,10)" rx="2" ry="2" />
<text  x="974.78" y="351.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.68%)</title><rect x="955.6" y="213" width="8.1" height="15.0" fill="rgb(211,149,40)" rx="2" ry="2" />
<text  x="958.62" y="223.5" ></text>
</g>
<g >
<title>NaClSysFork (26 samples, 17.81%)</title><rect x="656.6" y="341" width="210.1" height="15.0" fill="rgb(248,171,53)" rx="2" ry="2" />
<text  x="659.58" y="351.5" >NaClSysFork</text>
</g>
<g >
<title>run_builtin (1 samples, 0.68%)</title><rect x="527.3" y="549" width="8.0" height="15.0" fill="rgb(227,147,0)" rx="2" ry="2" />
<text  x="530.26" y="559.5" ></text>
</g>
<g >
<title>gup_pgd_range (1 samples, 0.68%)</title><rect x="979.9" y="309" width="8.0" height="15.0" fill="rgb(209,133,22)" rx="2" ry="2" />
<text  x="982.86" y="319.5" ></text>
</g>
<g >
<title>sys_ioctl (64 samples, 43.84%)</title><rect x="10.0" y="437" width="517.3" height="15.0" fill="rgb(218,182,18)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >sys_ioctl</text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.68%)</title><rect x="955.6" y="277" width="8.1" height="15.0" fill="rgb(226,84,27)" rx="2" ry="2" />
<text  x="958.62" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.68%)</title><rect x="971.8" y="405" width="8.1" height="15.0" fill="rgb(237,147,36)" rx="2" ry="2" />
<text  x="974.78" y="415.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.68%)</title><rect x="979.9" y="373" width="8.0" height="15.0" fill="rgb(218,179,28)" rx="2" ry="2" />
<text  x="982.86" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (9 samples, 6.16%)</title><rect x="794.0" y="197" width="72.7" height="15.0" fill="rgb(254,146,52)" rx="2" ry="2" />
<text  x="796.97" y="207.5" >do_page_..</text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 43.84%)</title><rect x="10.0" y="389" width="517.3" height="15.0" fill="rgb(252,157,7)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >perf_event_for_each_child</text>
</g>
<g >
<title>rcu_irq_enter (1 samples, 0.68%)</title><rect x="575.8" y="501" width="8.0" height="15.0" fill="rgb(239,165,54)" rx="2" ry="2" />
<text  x="578.75" y="511.5" ></text>
</g>
<g >
<title>do_signal (3 samples, 2.05%)</title><rect x="939.5" y="533" width="24.2" height="15.0" fill="rgb(227,211,1)" rx="2" ry="2" />
<text  x="942.45" y="543.5" >d..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.68%)</title><rect x="527.3" y="485" width="8.0" height="15.0" fill="rgb(243,22,53)" rx="2" ry="2" />
<text  x="530.26" y="495.5" ></text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.68%)</title><rect x="656.6" y="245" width="8.1" height="15.0" fill="rgb(229,31,41)" rx="2" ry="2" />
<text  x="659.58" y="255.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.68%)</title><rect x="955.6" y="245" width="8.1" height="15.0" fill="rgb(218,169,28)" rx="2" ry="2" />
<text  x="958.62" y="255.5" ></text>
</g>
<g >
<title>perf (65 samples, 44.52%)</title><rect x="10.0" y="597" width="525.3" height="15.0" fill="rgb(219,170,38)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >perf</text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.68%)</title><rect x="955.6" y="389" width="8.1" height="15.0" fill="rgb(232,116,38)" rx="2" ry="2" />
<text  x="958.62" y="399.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.68%)</title><rect x="987.9" y="309" width="8.1" height="15.0" fill="rgb(208,186,7)" rx="2" ry="2" />
<text  x="990.95" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 2.05%)</title><rect x="591.9" y="565" width="24.3" height="15.0" fill="rgb(249,77,46)" rx="2" ry="2" />
<text  x="594.92" y="575.5" >P..</text>
</g>
<g >
<title>__GI___execve (1 samples, 0.68%)</title><rect x="527.3" y="501" width="8.0" height="15.0" fill="rgb(209,135,28)" rx="2" ry="2" />
<text  x="530.26" y="511.5" ></text>
</g>
<g >
<title>PyDict_GetItem (1 samples, 0.68%)</title><rect x="583.8" y="565" width="8.1" height="15.0" fill="rgb(222,32,18)" rx="2" ry="2" />
<text  x="586.84" y="575.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.68%)</title><rect x="826.3" y="133" width="8.1" height="15.0" fill="rgb(207,146,29)" rx="2" ry="2" />
<text  x="829.30" y="143.5" ></text>
</g>
<g >
<title>intel_idle (3 samples, 2.05%)</title><rect x="1165.8" y="421" width="24.2" height="15.0" fill="rgb(234,8,53)" rx="2" ry="2" />
<text  x="1168.75" y="431.5" >i..</text>
</g>
<g >
<title>mmput (2 samples, 1.37%)</title><rect x="939.5" y="469" width="16.1" height="15.0" fill="rgb(238,211,28)" rx="2" ry="2" />
<text  x="942.45" y="479.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.68%)</title><rect x="850.5" y="133" width="8.1" height="15.0" fill="rgb(228,15,36)" rx="2" ry="2" />
<text  x="853.55" y="143.5" ></text>
</g>
<g >
<title>perf_ioctl (64 samples, 43.84%)</title><rect x="10.0" y="405" width="517.3" height="15.0" fill="rgb(227,90,40)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >perf_ioctl</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.68%)</title><rect x="979.9" y="405" width="8.0" height="15.0" fill="rgb(234,14,3)" rx="2" ry="2" />
<text  x="982.86" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.68%)</title><rect x="527.3" y="469" width="8.0" height="15.0" fill="rgb(222,157,16)" rx="2" ry="2" />
<text  x="530.26" y="479.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.68%)</title><rect x="575.8" y="533" width="8.0" height="15.0" fill="rgb(223,148,25)" rx="2" ry="2" />
<text  x="578.75" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="963.7" y="373" width="8.1" height="15.0" fill="rgb(221,30,47)" rx="2" ry="2" />
<text  x="966.70" y="383.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.68%)</title><rect x="931.4" y="437" width="8.1" height="15.0" fill="rgb(230,109,22)" rx="2" ry="2" />
<text  x="934.37" y="447.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.68%)</title><rect x="955.6" y="229" width="8.1" height="15.0" fill="rgb(243,59,8)" rx="2" ry="2" />
<text  x="958.62" y="239.5" ></text>
</g>
<g >
<title>rest_init (3 samples, 2.05%)</title><rect x="1165.8" y="517" width="24.2" height="15.0" fill="rgb(223,29,18)" rx="2" ry="2" />
<text  x="1168.75" y="527.5" >r..</text>
</g>
<g >
<title>touch_atime (1 samples, 0.68%)</title><rect x="527.3" y="357" width="8.0" height="15.0" fill="rgb(231,1,33)" rx="2" ry="2" />
<text  x="530.26" y="367.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.68%)</title><rect x="575.8" y="549" width="8.0" height="15.0" fill="rgb(231,164,31)" rx="2" ry="2" />
<text  x="578.75" y="559.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.68%)</title><rect x="979.9" y="341" width="8.0" height="15.0" fill="rgb(236,166,3)" rx="2" ry="2" />
<text  x="982.86" y="351.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 43.84%)</title><rect x="10.0" y="309" width="517.3" height="15.0" fill="rgb(225,212,6)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >remote_function</text>
</g>
<g >
<title>resched_curr (1 samples, 0.68%)</title><rect x="931.4" y="373" width="8.1" height="15.0" fill="rgb(207,158,26)" rx="2" ry="2" />
<text  x="934.37" y="383.5" ></text>
</g>
<g >
<title>event_function (64 samples, 43.84%)</title><rect x="10.0" y="293" width="517.3" height="15.0" fill="rgb(212,41,35)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >event_function</text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 43.84%)</title><rect x="10.0" y="229" width="517.3" height="15.0" fill="rgb(224,176,52)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.68%)</title><rect x="818.2" y="85" width="8.1" height="15.0" fill="rgb(238,181,5)" rx="2" ry="2" />
<text  x="821.22" y="95.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (3 samples, 2.05%)</title><rect x="1165.8" y="437" width="24.2" height="15.0" fill="rgb(239,183,34)" rx="2" ry="2" />
<text  x="1168.75" y="447.5" >c..</text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.68%)</title><rect x="785.9" y="213" width="8.1" height="15.0" fill="rgb(231,164,4)" rx="2" ry="2" />
<text  x="788.89" y="223.5" ></text>
</g>
<g >
<title>dput.part.26 (1 samples, 0.68%)</title><rect x="955.6" y="405" width="8.1" height="15.0" fill="rgb(237,222,21)" rx="2" ry="2" />
<text  x="958.62" y="415.5" ></text>
</g>
<g >
<title>smp_call_function_single (64 samples, 43.84%)</title><rect x="10.0" y="341" width="517.3" height="15.0" fill="rgb(218,176,31)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >smp_call_function_single</text>
</g>
<g >
<title>do_idle (22 samples, 15.07%)</title><rect x="987.9" y="533" width="177.9" height="15.0" fill="rgb(236,124,4)" rx="2" ry="2" />
<text  x="990.95" y="543.5" >do_idle</text>
</g>
<g >
<title>task_work_run (1 samples, 0.68%)</title><rect x="955.6" y="469" width="8.1" height="15.0" fill="rgb(252,82,47)" rx="2" ry="2" />
<text  x="958.62" y="479.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.68%)</title><rect x="842.5" y="101" width="8.0" height="15.0" fill="rgb(218,221,9)" rx="2" ry="2" />
<text  x="845.47" y="111.5" ></text>
</g>
<g >
<title>irq_enter (1 samples, 0.68%)</title><rect x="575.8" y="517" width="8.0" height="15.0" fill="rgb(250,72,49)" rx="2" ry="2" />
<text  x="578.75" y="527.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.68%)</title><rect x="963.7" y="181" width="8.1" height="15.0" fill="rgb(210,64,18)" rx="2" ry="2" />
<text  x="966.70" y="191.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.68%)</title><rect x="656.6" y="309" width="8.1" height="15.0" fill="rgb(216,196,49)" rx="2" ry="2" />
<text  x="659.58" y="319.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.68%)</title><rect x="818.2" y="101" width="8.1" height="15.0" fill="rgb(218,194,0)" rx="2" ry="2" />
<text  x="821.22" y="111.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.68%)</title><rect x="1157.7" y="421" width="8.1" height="15.0" fill="rgb(249,140,39)" rx="2" ry="2" />
<text  x="1160.67" y="431.5" ></text>
</g>
<g >
<title>run_builtin (64 samples, 43.84%)</title><rect x="10.0" y="533" width="517.3" height="15.0" fill="rgb(205,204,42)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >run_builtin</text>
</g>
<g >
<title>ovl_d_real (1 samples, 0.68%)</title><rect x="527.3" y="325" width="8.0" height="15.0" fill="rgb(233,29,1)" rx="2" ry="2" />
<text  x="530.26" y="335.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="963.7" y="389" width="8.1" height="15.0" fill="rgb(237,70,8)" rx="2" ry="2" />
<text  x="966.70" y="399.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.68%)</title><rect x="979.9" y="357" width="8.0" height="15.0" fill="rgb(246,84,1)" rx="2" ry="2" />
<text  x="982.86" y="367.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.68%)</title><rect x="987.9" y="341" width="8.1" height="15.0" fill="rgb(213,196,49)" rx="2" ry="2" />
<text  x="990.95" y="351.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.68%)</title><rect x="656.6" y="293" width="8.1" height="15.0" fill="rgb(251,83,28)" rx="2" ry="2" />
<text  x="659.58" y="303.5" ></text>
</g>
<g >
<title>all (146 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(251,85,42)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>native_write_msr (48 samples, 32.88%)</title><rect x="10.0" y="197" width="387.9" height="15.0" fill="rgb(226,219,48)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >native_write_msr</text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.68%)</title><rect x="987.9" y="405" width="8.1" height="15.0" fill="rgb(238,203,42)" rx="2" ry="2" />
<text  x="990.95" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.68%)</title><rect x="963.7" y="325" width="8.1" height="15.0" fill="rgb(243,199,44)" rx="2" ry="2" />
<text  x="966.70" y="335.5" ></text>
</g>
<g >
<title>sys_execve (1 samples, 0.68%)</title><rect x="527.3" y="453" width="8.0" height="15.0" fill="rgb(214,43,36)" rx="2" ry="2" />
<text  x="530.26" y="463.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.68%)</title><rect x="656.6" y="229" width="8.1" height="15.0" fill="rgb(216,171,18)" rx="2" ry="2" />
<text  x="659.58" y="239.5" ></text>
</g>
<g >
<title>[unknown] (64 samples, 43.84%)</title><rect x="10.0" y="581" width="517.3" height="15.0" fill="rgb(230,21,34)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >[unknown]</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.68%)</title><rect x="987.9" y="453" width="8.1" height="15.0" fill="rgb(212,209,1)" rx="2" ry="2" />
<text  x="990.95" y="463.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (64 samples, 43.84%)</title><rect x="10.0" y="421" width="517.3" height="15.0" fill="rgb(249,163,17)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >do_vfs_ioctl</text>
</g>
<g >
<title>do_group_exit (3 samples, 2.05%)</title><rect x="939.5" y="501" width="24.2" height="15.0" fill="rgb(224,87,13)" rx="2" ry="2" />
<text  x="942.45" y="511.5" >d..</text>
</g>
<g >
<title>[unknown] (3 samples, 2.05%)</title><rect x="963.7" y="533" width="24.2" height="15.0" fill="rgb(242,60,38)" rx="2" ry="2" />
<text  x="966.70" y="543.5" >[..</text>
</g>
<g >
<title>ep_poll (1 samples, 0.68%)</title><rect x="963.7" y="277" width="8.1" height="15.0" fill="rgb(205,98,48)" rx="2" ry="2" />
<text  x="966.70" y="287.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="963.7" y="341" width="8.1" height="15.0" fill="rgb(239,140,29)" rx="2" ry="2" />
<text  x="966.70" y="351.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (25 samples, 17.12%)</title><rect x="664.7" y="277" width="202.0" height="15.0" fill="rgb(222,35,8)" rx="2" ry="2" />
<text  x="667.66" y="287.5" >NaClCopyExecutionContext</text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 2.05%)</title><rect x="535.3" y="581" width="24.3" height="15.0" fill="rgb(241,123,16)" rx="2" ry="2" />
<text  x="538.34" y="591.5" >P..</text>
</g>
<g >
<title>alx_poll (1 samples, 0.68%)</title><rect x="1157.7" y="389" width="8.1" height="15.0" fill="rgb(251,203,51)" rx="2" ry="2" />
<text  x="1160.67" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (8 samples, 5.48%)</title><rect x="794.0" y="149" width="64.6" height="15.0" fill="rgb(225,136,42)" rx="2" ry="2" />
<text  x="796.97" y="159.5" >__handl..</text>
</g>
<g >
<title>__vfs_read (1 samples, 0.68%)</title><rect x="907.1" y="485" width="8.1" height="15.0" fill="rgb(205,49,40)" rx="2" ry="2" />
<text  x="910.12" y="495.5" ></text>
</g>
<g >
<title>do_exit (3 samples, 2.05%)</title><rect x="939.5" y="485" width="24.2" height="15.0" fill="rgb(222,50,26)" rx="2" ry="2" />
<text  x="942.45" y="495.5" >d..</text>
</g>
<g >
<title>unmap_page_range (2 samples, 1.37%)</title><rect x="939.5" y="405" width="16.1" height="15.0" fill="rgb(222,150,29)" rx="2" ry="2" />
<text  x="942.45" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3 samples, 2.05%)</title><rect x="1165.8" y="501" width="24.2" height="15.0" fill="rgb(254,101,51)" rx="2" ry="2" />
<text  x="1168.75" y="511.5" >c..</text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.68%)</title><rect x="842.5" y="85" width="8.0" height="15.0" fill="rgb(246,50,34)" rx="2" ry="2" />
<text  x="845.47" y="95.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 2.05%)</title><rect x="963.7" y="469" width="24.2" height="15.0" fill="rgb(210,122,37)" rx="2" ry="2" />
<text  x="966.70" y="479.5" >[..</text>
</g>
<g >
<title>wake_up_q (1 samples, 0.68%)</title><rect x="931.4" y="453" width="8.1" height="15.0" fill="rgb(238,125,49)" rx="2" ry="2" />
<text  x="934.37" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.68%)</title><rect x="971.8" y="389" width="8.1" height="15.0" fill="rgb(240,32,32)" rx="2" ry="2" />
<text  x="974.78" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter (3 samples, 2.05%)</title><rect x="1165.8" y="453" width="24.2" height="15.0" fill="rgb(225,122,39)" rx="2" ry="2" />
<text  x="1168.75" y="463.5" >c..</text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.68%)</title><rect x="931.4" y="405" width="8.1" height="15.0" fill="rgb(210,171,18)" rx="2" ry="2" />
<text  x="934.37" y="415.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.68%)</title><rect x="963.7" y="405" width="8.1" height="15.0" fill="rgb(229,100,5)" rx="2" ry="2" />
<text  x="966.70" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (22 samples, 15.07%)</title><rect x="987.9" y="549" width="177.9" height="15.0" fill="rgb(236,17,40)" rx="2" ry="2" />
<text  x="990.95" y="559.5" >cpu_startup_entry</text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.68%)</title><rect x="858.6" y="149" width="8.1" height="15.0" fill="rgb(205,82,12)" rx="2" ry="2" />
<text  x="861.63" y="159.5" ></text>
</g>
<g >
<title>[unknown]  (28 samples, 19.18%)</title><rect x="640.4" y="533" width="226.3" height="15.0" fill="rgb(253,82,53)" rx="2" ry="2" />
<text  x="643.41" y="543.5" >[unknown] </text>
</g>
<g >
<title>cmd_record (1 samples, 0.68%)</title><rect x="527.3" y="533" width="8.0" height="15.0" fill="rgb(232,64,15)" rx="2" ry="2" />
<text  x="530.26" y="543.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.68%)</title><rect x="818.2" y="69" width="8.1" height="15.0" fill="rgb(229,120,43)" rx="2" ry="2" />
<text  x="821.22" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 2.05%)</title><rect x="939.5" y="565" width="24.2" height="15.0" fill="rgb(214,36,24)" rx="2" ry="2" />
<text  x="942.45" y="575.5" >d..</text>
</g>
<g >
<title>PyCFunction_Call (1 samples, 0.68%)</title><rect x="575.8" y="565" width="8.0" height="15.0" fill="rgb(252,157,1)" rx="2" ry="2" />
<text  x="578.75" y="575.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.68%)</title><rect x="947.5" y="309" width="8.1" height="15.0" fill="rgb(226,0,43)" rx="2" ry="2" />
<text  x="950.53" y="319.5" ></text>
</g>
<g >
<title>sys_read (1 samples, 0.68%)</title><rect x="907.1" y="517" width="8.1" height="15.0" fill="rgb(229,189,51)" rx="2" ry="2" />
<text  x="910.12" y="527.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.68%)</title><rect x="527.3" y="581" width="8.0" height="15.0" fill="rgb(231,36,50)" rx="2" ry="2" />
<text  x="530.26" y="591.5" ></text>
</g>
<g >
<title>[unknown]  (26 samples, 17.81%)</title><rect x="656.6" y="405" width="210.1" height="15.0" fill="rgb(252,134,7)" rx="2" ry="2" />
<text  x="659.58" y="415.5" >[unknown] </text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.68%)</title><rect x="907.1" y="549" width="8.1" height="15.0" fill="rgb(254,10,31)" rx="2" ry="2" />
<text  x="910.12" y="559.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.68%)</title><rect x="656.6" y="277" width="8.1" height="15.0" fill="rgb(254,44,4)" rx="2" ry="2" />
<text  x="659.58" y="287.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.68%)</title><rect x="1157.7" y="405" width="8.1" height="15.0" fill="rgb(250,210,16)" rx="2" ry="2" />
<text  x="1160.67" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (64 samples, 43.84%)</title><rect x="10.0" y="453" width="517.3" height="15.0" fill="rgb(234,78,25)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >do_syscall_64</text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.68%)</title><rect x="826.3" y="101" width="8.1" height="15.0" fill="rgb(209,157,34)" rx="2" ry="2" />
<text  x="829.30" y="111.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.68%)</title><rect x="907.1" y="469" width="8.1" height="15.0" fill="rgb(217,70,25)" rx="2" ry="2" />
<text  x="910.12" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (18 samples, 12.33%)</title><rect x="721.2" y="229" width="145.5" height="15.0" fill="rgb(237,88,51)" rx="2" ry="2" />
<text  x="724.23" y="239.5" >__memmove_avx_unal..</text>
</g>
<g >
<title>sys_futex (1 samples, 0.68%)</title><rect x="979.9" y="389" width="8.0" height="15.0" fill="rgb(224,48,38)" rx="2" ry="2" />
<text  x="982.86" y="399.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.68%)</title><rect x="955.6" y="341" width="8.1" height="15.0" fill="rgb(233,62,29)" rx="2" ry="2" />
<text  x="958.62" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.68%)</title><rect x="834.4" y="101" width="8.1" height="15.0" fill="rgb(240,177,24)" rx="2" ry="2" />
<text  x="837.38" y="111.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.68%)</title><rect x="987.9" y="389" width="8.1" height="15.0" fill="rgb(239,170,33)" rx="2" ry="2" />
<text  x="990.95" y="399.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.68%)</title><rect x="963.7" y="229" width="8.1" height="15.0" fill="rgb(242,102,33)" rx="2" ry="2" />
<text  x="966.70" y="239.5" ></text>
</g>
<g >
<title>__do_fault (3 samples, 2.05%)</title><rect x="802.1" y="133" width="24.2" height="15.0" fill="rgb(224,178,12)" rx="2" ry="2" />
<text  x="805.05" y="143.5" >_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 2.05%)</title><rect x="939.5" y="581" width="24.2" height="15.0" fill="rgb(225,91,25)" rx="2" ry="2" />
<text  x="942.45" y="591.5" >e..</text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.68%)</title><rect x="834.4" y="117" width="8.1" height="15.0" fill="rgb(241,221,45)" rx="2" ry="2" />
<text  x="837.38" y="127.5" ></text>
</g>
<g >
<title>main (64 samples, 43.84%)</title><rect x="10.0" y="549" width="517.3" height="15.0" fill="rgb(210,190,54)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >main</text>
</g>
<g >
<title>__libc_start_main (64 samples, 43.84%)</title><rect x="10.0" y="565" width="517.3" height="15.0" fill="rgb(254,62,21)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>get_user_pages_fast (1 samples, 0.68%)</title><rect x="979.9" y="325" width="8.0" height="15.0" fill="rgb(223,96,24)" rx="2" ry="2" />
<text  x="982.86" y="335.5" ></text>
</g>
<g >
<title>__do_page_fault (9 samples, 6.16%)</title><rect x="794.0" y="181" width="72.7" height="15.0" fill="rgb(218,19,19)" rx="2" ry="2" />
<text  x="796.97" y="191.5" >__do_pag..</text>
</g>
<g >
<title>perf_evlist__prepare_workload (1 samples, 0.68%)</title><rect x="527.3" y="517" width="8.0" height="15.0" fill="rgb(208,191,23)" rx="2" ry="2" />
<text  x="530.26" y="527.5" ></text>
</g>
<g >
<title>NaClValidateImage (1 samples, 0.68%)</title><rect x="656.6" y="261" width="8.1" height="15.0" fill="rgb(225,6,37)" rx="2" ry="2" />
<text  x="659.58" y="271.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 43.84%)</title><rect x="10.0" y="261" width="517.3" height="15.0" fill="rgb(232,129,27)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >ctx_resched</text>
</g>
<g >
<title>handle_mm_fault (9 samples, 6.16%)</title><rect x="794.0" y="165" width="72.7" height="15.0" fill="rgb(206,26,17)" rx="2" ry="2" />
<text  x="796.97" y="175.5" >handle_m..</text>
</g>
<g >
<title>__atime_needs_update (1 samples, 0.68%)</title><rect x="527.3" y="341" width="8.0" height="15.0" fill="rgb(247,127,41)" rx="2" ry="2" />
<text  x="530.26" y="351.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.68%)</title><rect x="907.1" y="501" width="8.1" height="15.0" fill="rgb(210,216,17)" rx="2" ry="2" />
<text  x="910.12" y="511.5" ></text>
</g>
<g >
<title>ovl_dentry_upper (1 samples, 0.68%)</title><rect x="527.3" y="309" width="8.0" height="15.0" fill="rgb(239,56,22)" rx="2" ry="2" />
<text  x="530.26" y="319.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (3 samples, 2.05%)</title><rect x="939.5" y="549" width="24.2" height="15.0" fill="rgb(219,67,30)" rx="2" ry="2" />
<text  x="942.45" y="559.5" >e..</text>
</g>
<g >
<title>__get_vma_policy (1 samples, 0.68%)</title><rect x="818.2" y="37" width="8.1" height="15.0" fill="rgb(213,18,46)" rx="2" ry="2" />
<text  x="821.22" y="47.5" ></text>
</g>
<g >
<title>page_fault (9 samples, 6.16%)</title><rect x="794.0" y="213" width="72.7" height="15.0" fill="rgb(220,132,10)" rx="2" ry="2" />
<text  x="796.97" y="223.5" >page_fault</text>
</g>
<g >
<title>generic_exec_single (64 samples, 43.84%)</title><rect x="10.0" y="325" width="517.3" height="15.0" fill="rgb(236,228,12)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >generic_exec_single</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.68%)</title><rect x="979.9" y="421" width="8.0" height="15.0" fill="rgb(213,216,4)" rx="2" ry="2" />
<text  x="982.86" y="431.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 2.05%)</title><rect x="963.7" y="501" width="24.2" height="15.0" fill="rgb(243,28,10)" rx="2" ry="2" />
<text  x="966.70" y="511.5" >[..</text>
</g>
<g >
<title>swapper (28 samples, 19.18%)</title><rect x="963.7" y="597" width="226.3" height="15.0" fill="rgb(253,212,53)" rx="2" ry="2" />
<text  x="966.70" y="607.5" >swapper</text>
</g>
<g >
<title>release_pages (1 samples, 0.68%)</title><rect x="955.6" y="261" width="8.1" height="15.0" fill="rgb(226,123,1)" rx="2" ry="2" />
<text  x="958.62" y="271.5" ></text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.68%)</title><rect x="931.4" y="389" width="8.1" height="15.0" fill="rgb(220,2,3)" rx="2" ry="2" />
<text  x="934.37" y="399.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.68%)</title><rect x="963.7" y="261" width="8.1" height="15.0" fill="rgb(239,181,1)" rx="2" ry="2" />
<text  x="966.70" y="271.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.68%)</title><rect x="963.7" y="165" width="8.1" height="15.0" fill="rgb(218,151,43)" rx="2" ry="2" />
<text  x="966.70" y="175.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.68%)</title><rect x="1157.7" y="469" width="8.1" height="15.0" fill="rgb(221,208,25)" rx="2" ry="2" />
<text  x="1160.67" y="479.5" ></text>
</g>
<g >
<title>[unknown]  (28 samples, 19.18%)</title><rect x="640.4" y="501" width="226.3" height="15.0" fill="rgb(238,10,54)" rx="2" ry="2" />
<text  x="643.41" y="511.5" >[unknown] </text>
</g>
<g >
<title>get_signal (3 samples, 2.05%)</title><rect x="939.5" y="517" width="24.2" height="15.0" fill="rgb(222,5,11)" rx="2" ry="2" />
<text  x="942.45" y="527.5" >g..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 1.37%)</title><rect x="923.3" y="565" width="16.2" height="15.0" fill="rgb(223,9,54)" rx="2" ry="2" />
<text  x="926.29" y="575.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.68%)</title><rect x="802.1" y="101" width="8.0" height="15.0" fill="rgb(215,178,26)" rx="2" ry="2" />
<text  x="805.05" y="111.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.68%)</title><rect x="963.7" y="149" width="8.1" height="15.0" fill="rgb(237,204,40)" rx="2" ry="2" />
<text  x="966.70" y="159.5" ></text>
</g>
<g >
<title>nmi_cpu_backtrace (1 samples, 0.68%)</title><rect x="397.9" y="197" width="8.1" height="15.0" fill="rgb(248,8,53)" rx="2" ry="2" />
<text  x="400.95" y="207.5" ></text>
</g>
<g >
<title>start_secondary (22 samples, 15.07%)</title><rect x="987.9" y="565" width="177.9" height="15.0" fill="rgb(234,89,11)" rx="2" ry="2" />
<text  x="990.95" y="575.5" >start_secondary</text>
</g>
<g >
<title>string_richcompare.lto_priv.0 (1 samples, 0.68%)</title><rect x="866.7" y="549" width="8.1" height="15.0" fill="rgb(206,53,15)" rx="2" ry="2" />
<text  x="869.71" y="559.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 1.37%)</title><rect x="939.5" y="421" width="16.1" height="15.0" fill="rgb(250,216,29)" rx="2" ry="2" />
<text  x="942.45" y="431.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 2.05%)</title><rect x="963.7" y="581" width="24.2" height="15.0" fill="rgb(237,2,36)" rx="2" ry="2" />
<text  x="966.70" y="591.5" >[..</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.68%)</title><rect x="987.9" y="373" width="8.1" height="15.0" fill="rgb(213,175,51)" rx="2" ry="2" />
<text  x="990.95" y="383.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.68%)</title><rect x="1157.7" y="437" width="8.1" height="15.0" fill="rgb(205,7,15)" rx="2" ry="2" />
<text  x="1160.67" y="447.5" ></text>
</g>
<g >
<title>read (1 samples, 0.68%)</title><rect x="907.1" y="565" width="8.1" height="15.0" fill="rgb(238,94,20)" rx="2" ry="2" />
<text  x="910.12" y="575.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.68%)</title><rect x="882.9" y="565" width="8.1" height="15.0" fill="rgb(210,12,34)" rx="2" ry="2" />
<text  x="885.88" y="575.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.68%)</title><rect x="527.3" y="437" width="8.0" height="15.0" fill="rgb(227,42,47)" rx="2" ry="2" />
<text  x="530.26" y="447.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (3 samples, 2.05%)</title><rect x="1165.8" y="549" width="24.2" height="15.0" fill="rgb(208,77,32)" rx="2" ry="2" />
<text  x="1168.75" y="559.5" >x..</text>
</g>
<g >
<title>unmap_vmas (2 samples, 1.37%)</title><rect x="939.5" y="437" width="16.1" height="15.0" fill="rgb(205,106,8)" rx="2" ry="2" />
<text  x="942.45" y="447.5" ></text>
</g>
<g >
<title>NaClVmCopyEntry (7 samples, 4.79%)</title><rect x="664.7" y="229" width="56.5" height="15.0" fill="rgb(233,205,12)" rx="2" ry="2" />
<text  x="667.66" y="239.5" >NaClV..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.68%)</title><rect x="1157.7" y="453" width="8.1" height="15.0" fill="rgb(248,155,1)" rx="2" ry="2" />
<text  x="1160.67" y="463.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.68%)</title><rect x="963.7" y="197" width="8.1" height="15.0" fill="rgb(225,215,3)" rx="2" ry="2" />
<text  x="966.70" y="207.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.68%)</title><rect x="818.2" y="53" width="8.1" height="15.0" fill="rgb(234,57,53)" rx="2" ry="2" />
<text  x="821.22" y="63.5" ></text>
</g>
<g >
<title>[sel_ldr] (26 samples, 17.81%)</title><rect x="656.6" y="389" width="210.1" height="15.0" fill="rgb(216,165,15)" rx="2" ry="2" />
<text  x="659.58" y="399.5" >[sel_ldr]</text>
</g>
<g >
<title>lookdict_string.lto_priv.0 (2 samples, 1.37%)</title><rect x="891.0" y="565" width="16.1" height="15.0" fill="rgb(223,223,46)" rx="2" ry="2" />
<text  x="893.96" y="575.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 43.84%)</title><rect x="10.0" y="277" width="517.3" height="15.0" fill="rgb(254,167,23)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >__perf_event_enable</text>
</g>
<g >
<title>event_function_call (64 samples, 43.84%)</title><rect x="10.0" y="357" width="517.3" height="15.0" fill="rgb(252,209,54)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >event_function_call</text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.68%)</title><rect x="656.6" y="325" width="8.1" height="15.0" fill="rgb(233,198,47)" rx="2" ry="2" />
<text  x="659.58" y="335.5" ></text>
</g>
<g >
<title>main (1 samples, 0.68%)</title><rect x="527.3" y="565" width="8.0" height="15.0" fill="rgb(219,190,27)" rx="2" ry="2" />
<text  x="530.26" y="575.5" ></text>
</g>
<g >
<title>NaClPatchAddr (7 samples, 4.79%)</title><rect x="664.7" y="213" width="56.5" height="15.0" fill="rgb(217,126,41)" rx="2" ry="2" />
<text  x="667.66" y="223.5" >NaClP..</text>
</g>
<g >
<title>[_collections.so] (2 samples, 1.37%)</title><rect x="616.2" y="565" width="16.1" height="15.0" fill="rgb(242,17,4)" rx="2" ry="2" />
<text  x="619.16" y="575.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.68%)</title><rect x="947.5" y="325" width="8.1" height="15.0" fill="rgb(216,4,2)" rx="2" ry="2" />
<text  x="950.53" y="335.5" ></text>
</g>
<g >
<title>sys_mprotect (2 samples, 1.37%)</title><rect x="923.3" y="533" width="16.2" height="15.0" fill="rgb(252,68,10)" rx="2" ry="2" />
<text  x="926.29" y="543.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (2 samples, 1.37%)</title><rect x="923.3" y="517" width="16.2" height="15.0" fill="rgb(221,139,18)" rx="2" ry="2" />
<text  x="926.29" y="527.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 1.37%)</title><rect x="939.5" y="373" width="16.1" height="15.0" fill="rgb(250,9,17)" rx="2" ry="2" />
<text  x="942.45" y="383.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.68%)</title><rect x="947.5" y="357" width="8.1" height="15.0" fill="rgb(223,2,48)" rx="2" ry="2" />
<text  x="950.53" y="367.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.68%)</title><rect x="955.6" y="421" width="8.1" height="15.0" fill="rgb(218,122,35)" rx="2" ry="2" />
<text  x="958.62" y="431.5" ></text>
</g>
<g >
<title>PyTuple_New (2 samples, 1.37%)</title><rect x="559.6" y="581" width="16.2" height="15.0" fill="rgb(217,112,6)" rx="2" ry="2" />
<text  x="562.59" y="591.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.68%)</title><rect x="963.7" y="245" width="8.1" height="15.0" fill="rgb(254,156,4)" rx="2" ry="2" />
<text  x="966.70" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.68%)</title><rect x="874.8" y="565" width="8.1" height="15.0" fill="rgb(223,67,4)" rx="2" ry="2" />
<text  x="877.79" y="575.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 2.05%)</title><rect x="963.7" y="453" width="24.2" height="15.0" fill="rgb(249,175,52)" rx="2" ry="2" />
<text  x="966.70" y="463.5" >[..</text>
</g>
<g >
<title>[unknown] (3 samples, 2.05%)</title><rect x="963.7" y="565" width="24.2" height="15.0" fill="rgb(248,170,7)" rx="2" ry="2" />
<text  x="966.70" y="575.5" >[..</text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.68%)</title><rect x="842.5" y="117" width="8.0" height="15.0" fill="rgb(246,225,34)" rx="2" ry="2" />
<text  x="845.47" y="127.5" ></text>
</g>
<g >
<title>evlist__enable (64 samples, 43.84%)</title><rect x="10.0" y="501" width="517.3" height="15.0" fill="rgb(229,30,2)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >evlist__enable</text>
</g>
<g >
<title>iput (1 samples, 0.68%)</title><rect x="955.6" y="357" width="8.1" height="15.0" fill="rgb(226,176,40)" rx="2" ry="2" />
<text  x="958.62" y="367.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.68%)</title><rect x="971.8" y="325" width="8.1" height="15.0" fill="rgb(223,22,50)" rx="2" ry="2" />
<text  x="974.78" y="335.5" ></text>
</g>
<g >
<title>finish_fault (1 samples, 0.68%)</title><rect x="834.4" y="133" width="8.1" height="15.0" fill="rgb(236,197,39)" rx="2" ry="2" />
<text  x="837.38" y="143.5" ></text>
</g>
<g >
<title>secondary_startup_64 (25 samples, 17.12%)</title><rect x="987.9" y="581" width="202.1" height="15.0" fill="rgb(247,49,5)" rx="2" ry="2" />
<text  x="990.95" y="591.5" >secondary_startup_64</text>
</g>
<g >
<title>NaClAppThreadSpawn (25 samples, 17.12%)</title><rect x="664.7" y="309" width="202.0" height="15.0" fill="rgb(248,190,29)" rx="2" ry="2" />
<text  x="667.66" y="319.5" >NaClAppThreadSpawn</text>
</g>
<g >
<title>[unknown] (30 samples, 20.55%)</title><rect x="632.3" y="565" width="242.5" height="15.0" fill="rgb(250,137,31)" rx="2" ry="2" />
<text  x="635.33" y="575.5" >[unknown]</text>
</g>
<g >
<title>nmi_restore (15 samples, 10.27%)</title><rect x="406.0" y="197" width="121.3" height="15.0" fill="rgb(237,131,14)" rx="2" ry="2" />
<text  x="409.03" y="207.5" >nmi_restore</text>
</g>
<g >
<title>[unknown] (3 samples, 2.05%)</title><rect x="963.7" y="517" width="24.2" height="15.0" fill="rgb(216,42,24)" rx="2" ry="2" />
<text  x="966.70" y="527.5" >[..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.68%)</title><rect x="987.9" y="469" width="8.1" height="15.0" fill="rgb(223,218,27)" rx="2" ry="2" />
<text  x="990.95" y="479.5" ></text>
</g>
<g >
<title>_perf_event_enable (64 samples, 43.84%)</title><rect x="10.0" y="373" width="517.3" height="15.0" fill="rgb(211,38,26)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >_perf_event_enable</text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.68%)</title><rect x="907.1" y="453" width="8.1" height="15.0" fill="rgb(225,175,38)" rx="2" ry="2" />
<text  x="910.12" y="463.5" ></text>
</g>
<g >
<title>[unknown]  (28 samples, 19.18%)</title><rect x="640.4" y="485" width="226.3" height="15.0" fill="rgb(218,83,26)" rx="2" ry="2" />
<text  x="643.41" y="495.5" >[unknown] </text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.68%)</title><rect x="947.5" y="341" width="8.1" height="15.0" fill="rgb(241,13,16)" rx="2" ry="2" />
<text  x="950.53" y="351.5" ></text>
</g>
<g >
<title>up_write (2 samples, 1.37%)</title><rect x="923.3" y="501" width="16.2" height="15.0" fill="rgb(212,173,24)" rx="2" ry="2" />
<text  x="926.29" y="511.5" ></text>
</g>
<g >
<title>string_item.lto_priv.0 (1 samples, 0.68%)</title><rect x="915.2" y="565" width="8.1" height="15.0" fill="rgb(225,185,45)" rx="2" ry="2" />
<text  x="918.21" y="575.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (26 samples, 17.81%)</title><rect x="656.6" y="373" width="210.1" height="15.0" fill="rgb(206,27,29)" rx="2" ry="2" />
<text  x="659.58" y="383.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>[unknown]  (28 samples, 19.18%)</title><rect x="640.4" y="517" width="226.3" height="15.0" fill="rgb(254,177,21)" rx="2" ry="2" />
<text  x="643.41" y="527.5" >[unknown] </text>
</g>
<g >
<title>[unknown]  (26 samples, 17.81%)</title><rect x="656.6" y="469" width="210.1" height="15.0" fill="rgb(252,82,16)" rx="2" ry="2" />
<text  x="659.58" y="479.5" >[unknown] </text>
</g>
<g >
<title>start_kernel (3 samples, 2.05%)</title><rect x="1165.8" y="533" width="24.2" height="15.0" fill="rgb(217,14,52)" rx="2" ry="2" />
<text  x="1168.75" y="543.5" >s..</text>
</g>
<g >
<title>[unknown]  (26 samples, 17.81%)</title><rect x="656.6" y="437" width="210.1" height="15.0" fill="rgb(253,41,35)" rx="2" ry="2" />
<text  x="659.58" y="447.5" >[unknown] </text>
</g>
<g >
<title>sel_ldr (53 samples, 36.30%)</title><rect x="535.3" y="597" width="428.4" height="15.0" fill="rgb(211,30,17)" rx="2" ry="2" />
<text  x="538.34" y="607.5" >sel_ldr</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.68%)</title><rect x="632.3" y="549" width="8.1" height="15.0" fill="rgb(240,70,43)" rx="2" ry="2" />
<text  x="635.33" y="559.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.68%)</title><rect x="810.1" y="101" width="8.1" height="15.0" fill="rgb(240,164,24)" rx="2" ry="2" />
<text  x="813.14" y="111.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.68%)</title><rect x="987.9" y="357" width="8.1" height="15.0" fill="rgb(230,15,54)" rx="2" ry="2" />
<text  x="990.95" y="367.5" ></text>
</g>
<g >
<title>sys_read (1 samples, 0.68%)</title><rect x="971.8" y="373" width="8.1" height="15.0" fill="rgb(212,91,18)" rx="2" ry="2" />
<text  x="974.78" y="383.5" ></text>
</g>
<g >
<title>sys_epoll_pwait (1 samples, 0.68%)</title><rect x="963.7" y="293" width="8.1" height="15.0" fill="rgb(238,162,42)" rx="2" ry="2" />
<text  x="966.70" y="303.5" ></text>
</g>
<g >
<title>shmem_fault (3 samples, 2.05%)</title><rect x="802.1" y="117" width="24.2" height="15.0" fill="rgb(210,178,36)" rx="2" ry="2" />
<text  x="805.05" y="127.5" >s..</text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.68%)</title><rect x="971.8" y="357" width="8.1" height="15.0" fill="rgb(244,227,27)" rx="2" ry="2" />
<text  x="974.78" y="367.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 2.05%)</title><rect x="963.7" y="485" width="24.2" height="15.0" fill="rgb(223,162,5)" rx="2" ry="2" />
<text  x="966.70" y="495.5" >[..</text>
</g>
</g>
</svg>
