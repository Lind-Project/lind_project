<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="726.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="709" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="709" > </text>
<g id="frames">
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (52,275,735 samples, 0.47%)</title><rect x="281.4" y="501" width="5.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="284.35" y="511.5" ></text>
</g>
<g >
<title>force_page_cache_ra (576,736,632 samples, 5.20%)</title><rect x="506.7" y="389" width="61.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="509.67" y="399.5" >force_..</text>
</g>
<g >
<title>vfs_write (426,777,074 samples, 3.85%)</title><rect x="741.5" y="581" width="45.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="744.49" y="591.5" >vfs_..</text>
</g>
<g >
<title>do_syscall_64 (418,598,416 samples, 3.77%)</title><rect x="286.9" y="453" width="44.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="289.91" y="463.5" >do_s..</text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (54,027,857 samples, 0.49%)</title><rect x="331.4" y="501" width="5.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="334.45" y="511.5" ></text>
</g>
<g >
<title>read_pages (52,328,369 samples, 0.47%)</title><rect x="529.0" y="357" width="5.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="532.02" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (115,384,248 samples, 1.04%)</title><rect x="590.6" y="453" width="12.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="593.62" y="463.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (636,540,710 samples, 5.74%)</title><rect x="786.9" y="581" width="67.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="789.90" y="591.5" >exit_to..</text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (52,312,053 samples, 0.47%)</title><rect x="309.2" y="117" width="5.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="312.17" y="127.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (261,397,000 samples, 2.36%)</title><rect x="259.1" y="581" width="27.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="262.11" y="591.5" >r..</text>
</g>
<g >
<title>madvise_walk_vmas (841,487,280 samples, 7.59%)</title><rect x="501.1" y="453" width="89.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="504.10" y="463.5" >madvise_wa..</text>
</g>
<g >
<title>truncate_cleanup_folio (261,696,006 samples, 2.36%)</title><rect x="303.6" y="213" width="27.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="306.61" y="223.5" >t..</text>
</g>
<g >
<title>NaClSysOpen (733,315,045 samples, 6.61%)</title><rect x="181.1" y="597" width="78.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="184.10" y="607.5" >NaClSysOpen</text>
</g>
<g >
<title>__x64_sys_write (426,777,074 samples, 3.85%)</title><rect x="741.5" y="613" width="45.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="744.49" y="623.5" >__x6..</text>
</g>
<g >
<title>NaClSysReadDecoder (261,397,000 samples, 2.36%)</title><rect x="259.1" y="613" width="27.8" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="262.11" y="623.5" >N..</text>
</g>
<g >
<title>[libc.so.6] (1,540,713,544 samples, 13.89%)</title><rect x="337.2" y="517" width="163.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="340.19" y="527.5" >[libc.so.6]</text>
</g>
<g >
<title>free_unref_page_list (52,278,178 samples, 0.47%)</title><rect x="286.9" y="181" width="5.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="289.91" y="191.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (426,777,074 samples, 3.85%)</title><rect x="741.5" y="533" width="45.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="744.49" y="543.5" >secu..</text>
</g>
<g >
<title>destroy_inode (418,598,416 samples, 3.77%)</title><rect x="286.9" y="373" width="44.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="289.91" y="383.5" >dest..</text>
</g>
<g >
<title>ext4_inode_journal_mode (52,323,049 samples, 0.47%)</title><rect x="473.3" y="357" width="5.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="476.28" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (52,168,566 samples, 0.47%)</title><rect x="614.0" y="277" width="5.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="617.03" y="287.5" ></text>
</g>
<g >
<title>generic_fadvise (576,736,632 samples, 5.20%)</title><rect x="506.7" y="405" width="61.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="509.67" y="415.5" >generi..</text>
</g>
<g >
<title>__mod_lruvec_page_state (52,236,814 samples, 0.47%)</title><rect x="456.6" y="277" width="5.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="459.59" y="287.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (52,345,267 samples, 0.47%)</title><rect x="411.5" y="341" width="5.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="414.48" y="351.5" ></text>
</g>
<g >
<title>page_vma_mkclean_one.constprop.0 (1,681,455 samples, 0.02%)</title><rect x="921.9" y="309" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="924.93" y="319.5" ></text>
</g>
<g >
<title>filename_lookup (780,135,063 samples, 7.03%)</title><rect x="658.5" y="549" width="83.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="661.50" y="559.5" >filename_..</text>
</g>
<g >
<title>sel_ldr (4,808,960,251 samples, 43.35%)</title><rect x="146.9" y="661" width="511.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="149.89" y="671.5" >sel_ldr</text>
</g>
<g >
<title>__filemap_add_folio (733,315,045 samples, 6.61%)</title><rect x="181.1" y="309" width="78.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="184.10" y="319.5" >__filemap..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (636,540,710 samples, 5.74%)</title><rect x="786.9" y="597" width="67.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="789.90" y="607.5" >exit_to..</text>
</g>
<g >
<title>_raw_read_unlock (52,328,369 samples, 0.47%)</title><rect x="529.0" y="277" width="5.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="532.02" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (52,315,481 samples, 0.47%)</title><rect x="75.2" y="437" width="5.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="78.23" y="447.5" ></text>
</g>
<g >
<title>release_pages (52,278,178 samples, 0.47%)</title><rect x="286.9" y="197" width="5.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="289.91" y="207.5" ></text>
</g>
<g >
<title>walk_p4d_range (212,411,641 samples, 1.91%)</title><rect x="568.0" y="373" width="22.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="571.02" y="383.5" >w..</text>
</g>
<g >
<title>page_mkclean_one (1,681,455 samples, 0.02%)</title><rect x="921.9" y="325" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="924.93" y="335.5" ></text>
</g>
<g >
<title>dispatcher (156,931,729 samples, 1.41%)</title><rect x="164.4" y="565" width="16.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="167.40" y="575.5" ></text>
</g>
<g >
<title>security_file_ioctl (52,315,481 samples, 0.47%)</title><rect x="75.2" y="405" width="5.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="78.23" y="415.5" ></text>
</g>
<g >
<title>NaClSysRead (261,397,000 samples, 2.36%)</title><rect x="259.1" y="597" width="27.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="262.11" y="607.5" >N..</text>
</g>
<g >
<title>free_pcppages_bulk (52,278,178 samples, 0.47%)</title><rect x="286.9" y="149" width="5.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="289.91" y="159.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (52,315,065 samples, 0.47%)</title><rect x="602.9" y="549" width="5.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="605.89" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (54,027,857 samples, 0.49%)</title><rect x="331.4" y="517" width="5.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="334.45" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (52,168,566 samples, 0.47%)</title><rect x="614.0" y="133" width="5.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="617.03" y="143.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (52,350,202 samples, 0.47%)</title><rect x="608.5" y="277" width="5.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="611.46" y="287.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (657,847,854 samples, 5.93%)</title><rect x="1078.0" y="565" width="69.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1080.96" y="575.5" >sched_c..</text>
</g>
<g >
<title>lru_add_fn (53,212,116 samples, 0.48%)</title><rect x="523.4" y="309" width="5.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="526.36" y="319.5" ></text>
</g>
<g >
<title>charge_memcg (52,346,559 samples, 0.47%)</title><rect x="394.8" y="245" width="5.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="397.81" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (52,350,202 samples, 0.47%)</title><rect x="608.5" y="101" width="5.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="611.46" y="111.5" ></text>
</g>
<g >
<title>__dentry_kill (418,598,416 samples, 3.77%)</title><rect x="286.9" y="325" width="44.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="289.91" y="335.5" >__de..</text>
</g>
<g >
<title>__x64_sys_execve (621,287,644 samples, 5.60%)</title><rect x="80.8" y="613" width="66.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="83.80" y="623.5" >__x64_s..</text>
</g>
<g >
<title>page_cache_ra_unbounded (418,463,005 samples, 3.77%)</title><rect x="367.0" y="309" width="44.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="369.96" y="319.5" >page..</text>
</g>
<g >
<title>do_syscall_64 (1,843,452,847 samples, 16.62%)</title><rect x="658.5" y="629" width="196.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="661.50" y="639.5" >do_syscall_64</text>
</g>
<g >
<title>tick_nohz_get_sleep_length (767,787,278 samples, 6.92%)</title><rect x="981.8" y="533" width="81.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="984.83" y="543.5" >tick_nohz..</text>
</g>
<g >
<title>[libc.so.6] (52,315,481 samples, 0.47%)</title><rect x="75.2" y="613" width="5.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="78.23" y="623.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (52,370,088 samples, 0.47%)</title><rect x="314.7" y="37" width="5.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="317.74" y="47.5" ></text>
</g>
<g >
<title>do_syscall_64 (156,931,729 samples, 1.41%)</title><rect x="164.4" y="469" width="16.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="167.40" y="479.5" ></text>
</g>
<g >
<title>xas_load (52,352,091 samples, 0.47%)</title><rect x="405.9" y="229" width="5.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="408.91" y="239.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (631,142,972 samples, 5.69%)</title><rect x="854.6" y="581" width="67.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="857.61" y="591.5" >ext4_en..</text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (52,275,735 samples, 0.47%)</title><rect x="281.4" y="533" width="5.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="284.35" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (52,168,566 samples, 0.47%)</title><rect x="614.0" y="165" width="5.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="617.03" y="175.5" ></text>
</g>
<g >
<title>clear_page_dirty_for_io (3,362,910 samples, 0.03%)</title><rect x="921.8" y="389" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="924.75" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (2,497,585,072 samples, 22.52%)</title><rect x="337.2" y="565" width="265.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="340.19" y="575.5" >rustposix::interface::file::Emulate..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (393,640,419 samples, 3.55%)</title><rect x="1148.0" y="469" width="41.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1151.02" y="479.5" >sys..</text>
</g>
<g >
<title>kthread (642,679,825 samples, 5.79%)</title><rect x="854.6" y="629" width="68.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="857.61" y="639.5" >kthread</text>
</g>
<g >
<title>__xa_set_mark (57,218,390 samples, 0.52%)</title><rect x="450.5" y="293" width="6.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="453.51" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (52,350,202 samples, 0.47%)</title><rect x="608.5" y="181" width="5.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="611.46" y="191.5" ></text>
</g>
<g >
<title>xas_load (52,193,671 samples, 0.47%)</title><rect x="562.5" y="357" width="5.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="565.47" y="367.5" ></text>
</g>
<g >
<title>ext4_dirty_folio (52,290,122 samples, 0.47%)</title><rect x="478.8" y="341" width="5.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="481.85" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (2,708,446,762 samples, 24.42%)</title><rect x="331.4" y="581" width="288.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="334.45" y="591.5" >rustposix::safeposix::syscalls::fs_cal..</text>
</g>
<g >
<title>sched_clock (657,847,854 samples, 5.93%)</title><rect x="1078.0" y="549" width="69.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1080.96" y="559.5" >sched_c..</text>
</g>
<g >
<title>__x64_sys_madvise (841,487,280 samples, 7.59%)</title><rect x="501.1" y="485" width="89.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="504.10" y="495.5" >__x64_sys_..</text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (52,315,065 samples, 0.47%)</title><rect x="602.9" y="501" width="5.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="605.89" y="511.5" ></text>
</g>
<g >
<title>__mod_node_page_state (52,345,267 samples, 0.47%)</title><rect x="411.5" y="309" width="5.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="414.48" y="319.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (11,536,853 samples, 0.10%)</title><rect x="921.8" y="533" width="1.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="924.75" y="543.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (52,350,202 samples, 0.47%)</title><rect x="608.5" y="357" width="5.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="611.46" y="367.5" ></text>
</g>
<g >
<title>block_page_mkwrite (476,300,062 samples, 4.29%)</title><rect x="422.6" y="357" width="50.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="425.61" y="367.5" >block..</text>
</g>
<g >
<title>mpage_map_and_submit_buffers (11,536,853 samples, 0.10%)</title><rect x="921.8" y="421" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="924.75" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (52,350,202 samples, 0.47%)</title><rect x="608.5" y="149" width="5.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="611.46" y="159.5" ></text>
</g>
<g >
<title>lookup_fast (780,135,063 samples, 7.03%)</title><rect x="658.5" y="485" width="83.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="661.50" y="495.5" >lookup_fast</text>
</g>
<g >
<title>free_unref_page_commit (52,278,178 samples, 0.47%)</title><rect x="286.9" y="165" width="5.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="289.91" y="175.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (104,518,768 samples, 0.94%)</title><rect x="608.5" y="549" width="11.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="611.46" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::truncate (115,384,248 samples, 1.04%)</title><rect x="590.6" y="517" width="12.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="593.62" y="527.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (52,275,735 samples, 0.47%)</title><rect x="281.4" y="549" width="5.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="284.35" y="559.5" ></text>
</g>
<g >
<title>arch_call_rest_init (395,324,904 samples, 3.56%)</title><rect x="1147.9" y="597" width="42.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1150.94" y="607.5" >arc..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (52,168,566 samples, 0.47%)</title><rect x="614.0" y="293" width="5.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="617.03" y="303.5" ></text>
</g>
<g >
<title>__filemap_get_folio (52,252,687 samples, 0.47%)</title><rect x="361.4" y="357" width="5.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="364.40" y="367.5" ></text>
</g>
<g >
<title>dentry_needs_remove_privs (52,191,422 samples, 0.47%)</title><rect x="590.6" y="373" width="5.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="593.62" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (621,287,644 samples, 5.60%)</title><rect x="80.8" y="629" width="66.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="83.80" y="639.5" >do_sysc..</text>
</g>
<g >
<title>zap_pte_range (156,931,729 samples, 1.41%)</title><rect x="164.4" y="309" width="16.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="167.40" y="319.5" ></text>
</g>
<g >
<title>__folio_end_writeback (631,142,972 samples, 5.69%)</title><rect x="854.6" y="501" width="67.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="857.61" y="511.5" >__folio..</text>
</g>
<g >
<title>vfs_fadvise (733,315,045 samples, 6.61%)</title><rect x="181.1" y="389" width="78.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="184.10" y="399.5" >vfs_fadvise</text>
</g>
<g >
<title>cpu_startup_entry (395,324,904 samples, 3.56%)</title><rect x="1147.9" y="565" width="42.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1150.94" y="575.5" >cpu..</text>
</g>
<g >
<title>wait_for (52,315,481 samples, 0.47%)</title><rect x="75.2" y="533" width="5.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="78.23" y="543.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (11,536,853 samples, 0.10%)</title><rect x="921.8" y="517" width="1.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="924.75" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (52,315,065 samples, 0.47%)</title><rect x="602.9" y="437" width="5.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="605.89" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (156,931,729 samples, 1.41%)</title><rect x="164.4" y="549" width="16.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="167.40" y="559.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for  (104,518,768 samples, 0.94%)</title><rect x="608.5" y="533" width="11.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="611.46" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (52,301,169 samples, 0.47%)</title><rect x="625.1" y="629" width="5.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="628.15" y="639.5" ></text>
</g>
<g >
<title>wb_do_writeback (11,536,853 samples, 0.10%)</title><rect x="921.8" y="565" width="1.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="924.75" y="575.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (52,168,566 samples, 0.47%)</title><rect x="614.0" y="405" width="5.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="617.03" y="415.5" ></text>
</g>
<g >
<title>wb_workfn (11,536,853 samples, 0.10%)</title><rect x="921.8" y="581" width="1.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="924.75" y="591.5" ></text>
</g>
<g >
<title>kmem_cache_free (104,702,279 samples, 0.94%)</title><rect x="320.3" y="85" width="11.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="323.31" y="95.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (52,370,088 samples, 0.47%)</title><rect x="314.7" y="53" width="5.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="317.74" y="63.5" ></text>
</g>
<g >
<title>alloc_buffer_head (105,502,546 samples, 0.95%)</title><rect x="428.2" y="277" width="11.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="431.16" y="287.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (4,338,303,864 samples, 39.11%)</title><rect x="158.1" y="629" width="461.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="161.06" y="639.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (52,350,202 samples, 0.47%)</title><rect x="608.5" y="421" width="5.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="611.46" y="431.5" ></text>
</g>
<g >
<title>sock_write_iter (426,777,074 samples, 3.85%)</title><rect x="741.5" y="565" width="45.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="744.49" y="575.5" >sock..</text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (52,168,566 samples, 0.47%)</title><rect x="614.0" y="421" width="5.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="617.03" y="431.5" ></text>
</g>
<g >
<title>ext4_page_mkwrite (580,944,496 samples, 5.24%)</title><rect x="417.0" y="373" width="61.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="420.05" y="383.5" >ext4_p..</text>
</g>
<g >
<title>unmap_vmas (156,931,729 samples, 1.41%)</title><rect x="164.4" y="373" width="16.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="167.40" y="383.5" ></text>
</g>
<g >
<title>notify_change (63,192,826 samples, 0.57%)</title><rect x="596.2" y="373" width="6.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="599.17" y="383.5" ></text>
</g>
<g >
<title>ext4_mpage_readpages (52,328,369 samples, 0.47%)</title><rect x="529.0" y="325" width="5.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="532.02" y="335.5" ></text>
</g>
<g >
<title>walk_pmd_range.isra.0 (212,411,641 samples, 1.91%)</title><rect x="568.0" y="341" width="22.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="571.02" y="351.5" >w..</text>
</g>
<g >
<title>lru_add_fn (51,940,971 samples, 0.47%)</title><rect x="400.4" y="245" width="5.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="403.38" y="255.5" ></text>
</g>
<g >
<title>alloc_page_buffers (105,502,546 samples, 0.95%)</title><rect x="428.2" y="293" width="11.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="431.16" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (52,168,566 samples, 0.47%)</title><rect x="614.0" y="117" width="5.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="617.03" y="127.5" ></text>
</g>
<g >
<title>__cond_resched (52,335,913 samples, 0.47%)</title><rect x="568.0" y="325" width="5.6" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="571.02" y="335.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (52,315,065 samples, 0.47%)</title><rect x="602.9" y="517" width="5.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="605.89" y="527.5" ></text>
</g>
<g >
<title>ioctl (52,315,481 samples, 0.47%)</title><rect x="75.2" y="453" width="5.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="78.23" y="463.5" ></text>
</g>
<g >
<title>folio_mkclean (1,681,455 samples, 0.02%)</title><rect x="921.9" y="357" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="924.93" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (733,315,045 samples, 6.61%)</title><rect x="181.1" y="453" width="78.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="184.10" y="463.5" >__x64_sys..</text>
</g>
<g >
<title>unmap_page_range (156,931,729 samples, 1.41%)</title><rect x="164.4" y="341" width="16.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="167.40" y="351.5" ></text>
</g>
<g >
<title>exit_task_stack_account (613,194,209 samples, 5.53%)</title><rect x="10.0" y="581" width="65.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >exit_ta..</text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (52,350,202 samples, 0.47%)</title><rect x="608.5" y="293" width="5.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="611.46" y="303.5" ></text>
</g>
<g >
<title>__get_user_8 (636,540,710 samples, 5.74%)</title><rect x="786.9" y="533" width="67.7" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="789.90" y="543.5" >__get_u..</text>
</g>
<g >
<title>ret_from_fork (642,679,825 samples, 5.79%)</title><rect x="854.6" y="645" width="68.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="857.61" y="655.5" >ret_fro..</text>
</g>
<g >
<title>get_new_window_size (52,315,481 samples, 0.47%)</title><rect x="75.2" y="517" width="5.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="78.23" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (613,194,209 samples, 5.53%)</title><rect x="10.0" y="645" width="65.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >entry_S..</text>
</g>
<g >
<title>wb_writeback (11,536,853 samples, 0.10%)</title><rect x="921.8" y="549" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="924.75" y="559.5" ></text>
</g>
<g >
<title>evict (418,598,416 samples, 3.77%)</title><rect x="286.9" y="389" width="44.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="289.91" y="399.5" >evict</text>
</g>
<g >
<title>walk_component (780,135,063 samples, 7.03%)</title><rect x="658.5" y="501" width="83.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="661.50" y="511.5" >walk_comp..</text>
</g>
<g >
<title>xas_start (52,340,279 samples, 0.47%)</title><rect x="556.9" y="341" width="5.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="559.90" y="351.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (104,560,685 samples, 0.94%)</title><rect x="439.4" y="325" width="11.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="442.38" y="335.5" ></text>
</g>
<g >
<title>generic_fadvise (733,315,045 samples, 6.61%)</title><rect x="181.1" y="373" width="78.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="184.10" y="383.5" >generic_f..</text>
</g>
<g >
<title>do_mas_munmap (156,931,729 samples, 1.41%)</title><rect x="164.4" y="421" width="16.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="167.40" y="431.5" ></text>
</g>
<g >
<title>mod_lruvec_page_state.constprop.0 (52,345,267 samples, 0.47%)</title><rect x="411.5" y="357" width="5.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="414.48" y="367.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (576,736,632 samples, 5.20%)</title><rect x="506.7" y="373" width="61.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="509.67" y="383.5" >page_c..</text>
</g>
<g >
<title>asm_exc_page_fault (261,039,082 samples, 2.35%)</title><rect x="630.7" y="645" width="27.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="633.71" y="655.5" >a..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (52,350,202 samples, 0.47%)</title><rect x="608.5" y="213" width="5.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="611.46" y="223.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (52,315,065 samples, 0.47%)</title><rect x="602.9" y="469" width="5.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="605.89" y="479.5" ></text>
</g>
<g >
<title>ext4_finish_bio (631,142,972 samples, 5.69%)</title><rect x="854.6" y="549" width="67.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="857.61" y="559.5" >ext4_fi..</text>
</g>
<g >
<title>_start (52,315,481 samples, 0.47%)</title><rect x="75.2" y="645" width="5.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="78.23" y="655.5" ></text>
</g>
<g >
<title>lind (52,315,481 samples, 0.47%)</title><rect x="75.2" y="661" width="5.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="78.23" y="671.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (209,121,265 samples, 1.89%)</title><rect x="259.1" y="549" width="22.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="262.11" y="559.5" >c..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::open_syscall (733,315,045 samples, 6.61%)</title><rect x="181.1" y="549" width="78.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="184.10" y="559.5" >rustposix..</text>
</g>
<g >
<title>folio_add_lru (53,212,116 samples, 0.48%)</title><rect x="523.4" y="341" width="5.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="526.36" y="351.5" ></text>
</g>
<g >
<title>NaClSysUnlink (418,598,416 samples, 3.77%)</title><rect x="286.9" y="597" width="44.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="289.91" y="607.5" >NaCl..</text>
</g>
<g >
<title>__mem_cgroup_charge (52,346,559 samples, 0.47%)</title><rect x="394.8" y="261" width="5.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="397.81" y="271.5" ></text>
</g>
<g >
<title>set_page_dirty (52,290,122 samples, 0.47%)</title><rect x="478.8" y="373" width="5.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="481.85" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (52,345,267 samples, 0.47%)</title><rect x="411.5" y="325" width="5.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="414.48" y="335.5" ></text>
</g>
<g >
<title>set_page_dirty (104,617,775 samples, 0.94%)</title><rect x="170.0" y="293" width="11.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="172.97" y="303.5" ></text>
</g>
<g >
<title>rmap_walk_file (1,681,455 samples, 0.02%)</title><rect x="921.9" y="341" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="924.93" y="351.5" ></text>
</g>
<g >
<title>std::fs::remove_file (418,598,416 samples, 3.77%)</title><rect x="286.9" y="517" width="44.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="289.91" y="527.5" >std:..</text>
</g>
<g >
<title>kmem_cache_alloc (105,502,546 samples, 0.95%)</title><rect x="428.2" y="261" width="11.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="431.16" y="271.5" ></text>
</g>
<g >
<title>NaClSysUnlinkDecoder (418,598,416 samples, 3.77%)</title><rect x="286.9" y="613" width="44.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="289.91" y="623.5" >NaCl..</text>
</g>
<g >
<title>folio_batch_move_lru (51,940,971 samples, 0.47%)</title><rect x="400.4" y="261" width="5.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="403.38" y="271.5" ></text>
</g>
<g >
<title>page_cache_async_ra (418,463,005 samples, 3.77%)</title><rect x="367.0" y="357" width="44.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="369.96" y="367.5" >page..</text>
</g>
<g >
<title>_rl_get_screen_size (52,315,481 samples, 0.47%)</title><rect x="75.2" y="469" width="5.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="78.23" y="479.5" ></text>
</g>
<g >
<title>ext4_release_folio (209,384,420 samples, 1.89%)</title><rect x="309.2" y="149" width="22.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="312.17" y="159.5" >e..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (841,487,280 samples, 7.59%)</title><rect x="501.1" y="517" width="89.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="504.10" y="527.5" >entry_SYSC..</text>
</g>
<g >
<title>ext4_setattr (63,192,826 samples, 0.57%)</title><rect x="596.2" y="325" width="6.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="599.17" y="335.5" ></text>
</g>
<g >
<title>begin_new_exec (621,287,644 samples, 5.60%)</title><rect x="80.8" y="501" width="66.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="83.80" y="511.5" >begin_n..</text>
</g>
<g >
<title>iput (418,598,416 samples, 3.77%)</title><rect x="286.9" y="293" width="44.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="289.91" y="303.5" >iput</text>
</g>
<g >
<title>exec_mmap (621,287,644 samples, 5.60%)</title><rect x="80.8" y="485" width="66.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="83.80" y="495.5" >exec_mmap</text>
</g>
<g >
<title>__d_lookup (780,135,063 samples, 7.03%)</title><rect x="658.5" y="469" width="83.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="661.50" y="479.5" >__d_lookup</text>
</g>
<g >
<title>mark_buffer_dirty (214,104,276 samples, 1.93%)</title><rect x="450.5" y="325" width="22.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="453.51" y="335.5" >m..</text>
</g>
<g >
<title>truncate_pagecache (63,192,826 samples, 0.57%)</title><rect x="596.2" y="309" width="6.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="599.17" y="319.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (156,931,729 samples, 1.41%)</title><rect x="164.4" y="405" width="16.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="167.40" y="415.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (418,598,416 samples, 3.77%)</title><rect x="286.9" y="309" width="44.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="289.91" y="319.5" >dent..</text>
</g>
<g >
<title>folio_mark_dirty (104,617,775 samples, 0.94%)</title><rect x="170.0" y="277" width="11.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="172.97" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (52,350,202 samples, 0.47%)</title><rect x="608.5" y="229" width="5.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="611.46" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_ftruncate (115,384,248 samples, 1.04%)</title><rect x="590.6" y="421" width="12.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="593.62" y="431.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (394,876,904 samples, 3.56%)</title><rect x="1147.9" y="533" width="42.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1150.94" y="543.5" >cpu..</text>
</g>
<g >
<title>swapper (4,996,335,048 samples, 45.04%)</title><rect x="658.5" y="661" width="531.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="661.48" y="671.5" >swapper</text>
</g>
<g >
<title>perf-exec (621,287,644 samples, 5.60%)</title><rect x="80.8" y="661" width="66.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="83.80" y="671.5" >perf-exec</text>
</g>
<g >
<title>_raw_spin_lock (160,075,728 samples, 1.44%)</title><rect x="573.6" y="325" width="17.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="576.59" y="335.5" ></text>
</g>
<g >
<title>xas_start (57,218,390 samples, 0.52%)</title><rect x="450.5" y="261" width="6.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="453.51" y="271.5" ></text>
</g>
<g >
<title>__irqentry_text_start (553,173,174 samples, 4.99%)</title><rect x="923.0" y="549" width="58.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="925.98" y="559.5" >__irqe..</text>
</g>
<g >
<title>mem_cgroup_update_lru_size (53,212,116 samples, 0.48%)</title><rect x="523.4" y="293" width="5.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="526.36" y="303.5" ></text>
</g>
<g >
<title>block_dirty_folio (104,617,775 samples, 0.94%)</title><rect x="170.0" y="245" width="11.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="172.97" y="255.5" ></text>
</g>
<g >
<title>do_writepages (11,536,853 samples, 0.10%)</title><rect x="921.8" y="485" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="924.75" y="495.5" ></text>
</g>
<g >
<title>__writeback_single_inode (11,536,853 samples, 0.10%)</title><rect x="921.8" y="501" width="1.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="924.75" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (156,931,729 samples, 1.41%)</title><rect x="164.4" y="453" width="16.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="167.40" y="463.5" ></text>
</g>
<g >
<title>find_lock_entries (52,294,534 samples, 0.47%)</title><rect x="298.0" y="213" width="5.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="301.04" y="223.5" ></text>
</g>
<g >
<title>xas_find (8,173,943 samples, 0.07%)</title><rect x="922.1" y="405" width="0.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="925.11" y="415.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (767,787,278 samples, 6.92%)</title><rect x="981.8" y="501" width="81.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="984.83" y="511.5" >get_next_..</text>
</g>
<g >
<title>smp_call_function_many_cond (1,681,455 samples, 0.02%)</title><rect x="921.9" y="229" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="924.93" y="239.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (621,287,644 samples, 5.60%)</title><rect x="80.8" y="373" width="66.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="83.80" y="383.5" >zap_pmd..</text>
</g>
<g >
<title>mpage_map_and_submit_extent (11,536,853 samples, 0.10%)</title><rect x="921.8" y="437" width="1.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="924.75" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,313,150,939 samples, 11.84%)</title><rect x="361.4" y="453" width="139.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="364.40" y="463.5" >handle_mm_fault</text>
</g>
<g >
<title>execute_command_internal (52,315,481 samples, 0.47%)</title><rect x="75.2" y="549" width="5.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="78.23" y="559.5" ></text>
</g>
<g >
<title>walk_pgd_range (212,411,641 samples, 1.91%)</title><rect x="568.0" y="389" width="22.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="571.02" y="399.5" >w..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (52,168,566 samples, 0.47%)</title><rect x="614.0" y="149" width="5.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="617.03" y="159.5" ></text>
</g>
<g >
<title>_rl_init_terminal_io (52,315,481 samples, 0.47%)</title><rect x="75.2" y="485" width="5.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="78.23" y="495.5" ></text>
</g>
<g >
<title>ext4_do_writepages (11,536,853 samples, 0.10%)</title><rect x="921.8" y="453" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="924.75" y="463.5" ></text>
</g>
<g >
<title>psi_task_switch (135,856,407 samples, 1.22%)</title><rect x="1063.5" y="549" width="14.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1066.51" y="559.5" ></text>
</g>
<g >
<title>__vm_munmap (156,931,729 samples, 1.41%)</title><rect x="164.4" y="437" width="16.7" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="167.40" y="447.5" ></text>
</g>
<g >
<title>path_lookupat (780,135,063 samples, 7.03%)</title><rect x="658.5" y="533" width="83.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="661.50" y="543.5" >path_look..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (52,168,566 samples, 0.47%)</title><rect x="614.0" y="261" width="5.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="617.03" y="271.5" ></text>
</g>
<g >
<title>execute_command (52,315,481 samples, 0.47%)</title><rect x="75.2" y="565" width="5.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="78.23" y="575.5" ></text>
</g>
<g >
<title>_raw_spin_lock (52,290,122 samples, 0.47%)</title><rect x="478.8" y="325" width="5.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="481.85" y="335.5" ></text>
</g>
<g >
<title>rustposix::interface::file::openfile (733,315,045 samples, 6.61%)</title><rect x="181.1" y="533" width="78.0" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="184.10" y="543.5" >rustposix..</text>
</g>
<g >
<title>mpage_submit_page (3,362,910 samples, 0.03%)</title><rect x="921.8" y="405" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="924.75" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::unlink_syscall (418,598,416 samples, 3.77%)</title><rect x="286.9" y="549" width="44.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="289.91" y="559.5" >rust..</text>
</g>
<g >
<title>free_buffer_head (104,702,279 samples, 0.94%)</title><rect x="320.3" y="101" width="11.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="323.31" y="111.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (418,598,416 samples, 3.77%)</title><rect x="286.9" y="501" width="44.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="289.91" y="511.5" >std:..</text>
</g>
<g >
<title>xas_find (63,192,826 samples, 0.57%)</title><rect x="596.2" y="261" width="6.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="599.17" y="271.5" ></text>
</g>
<g >
<title>do_exit (613,194,209 samples, 5.53%)</title><rect x="10.0" y="597" width="65.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >do_exit</text>
</g>
<g >
<title>start_secondary (2,114,664,713 samples, 19.06%)</title><rect x="923.0" y="629" width="224.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="925.98" y="639.5" >start_secondary</text>
</g>
<g >
<title>create_page_buffers (105,502,546 samples, 0.95%)</title><rect x="428.2" y="325" width="11.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="431.16" y="335.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (621,287,644 samples, 5.60%)</title><rect x="80.8" y="597" width="66.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="83.80" y="607.5" >do_exec..</text>
</g>
<g >
<title>update_rq_clock (393,349,934 samples, 3.55%)</title><rect x="1148.0" y="341" width="41.9" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1151.05" y="351.5" >upd..</text>
</g>
<g >
<title>__irq_exit_rcu (393,349,934 samples, 3.55%)</title><rect x="1148.0" y="437" width="41.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1151.05" y="447.5" >__i..</text>
</g>
<g >
<title>ext4_evict_inode (418,598,416 samples, 3.77%)</title><rect x="286.9" y="261" width="44.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="289.91" y="271.5" >ext4..</text>
</g>
<g >
<title>ext4_ext_map_blocks (52,213,058 samples, 0.47%)</title><rect x="445.0" y="293" width="5.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="447.95" y="303.5" ></text>
</g>
<g >
<title>ext4_invalidate_folio (261,696,006 samples, 2.36%)</title><rect x="303.6" y="197" width="27.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="306.61" y="207.5" >e..</text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u64 (52,168,566 samples, 0.47%)</title><rect x="614.0" y="373" width="5.6" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="617.03" y="383.5" ></text>
</g>
<g >
<title>do_unlinkat (418,598,416 samples, 3.77%)</title><rect x="286.9" y="421" width="44.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="289.91" y="431.5" >do_u..</text>
</g>
<g >
<title>down_read_trylock (52,261,012 samples, 0.47%)</title><rect x="355.8" y="453" width="5.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="358.84" y="463.5" ></text>
</g>
<g >
<title>ext4_readahead (52,352,091 samples, 0.47%)</title><rect x="405.9" y="277" width="5.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="408.91" y="287.5" ></text>
</g>
<g >
<title>NaClSysClose (156,931,729 samples, 1.41%)</title><rect x="164.4" y="597" width="16.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="167.40" y="607.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (104,518,768 samples, 0.94%)</title><rect x="608.5" y="501" width="11.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="611.46" y="511.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (733,315,045 samples, 6.61%)</title><rect x="181.1" y="293" width="78.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="184.10" y="303.5" >__mem_cgr..</text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (780,135,063 samples, 7.03%)</title><rect x="658.5" y="517" width="83.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="661.50" y="527.5" >link_path..</text>
</g>
<g >
<title>cpuidle_enter (553,173,174 samples, 4.99%)</title><rect x="923.0" y="565" width="58.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="925.98" y="575.5" >cpuidl..</text>
</g>
<g >
<title>__rseq_handle_notify_resume (636,540,710 samples, 5.74%)</title><rect x="786.9" y="565" width="67.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="789.90" y="575.5" >__rseq_..</text>
</g>
<g >
<title>__schedule (135,856,407 samples, 1.22%)</title><rect x="1063.5" y="565" width="14.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1066.51" y="575.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (156,931,729 samples, 1.41%)</title><rect x="164.4" y="325" width="16.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="167.40" y="335.5" ></text>
</g>
<g >
<title>folio_add_lru (51,940,971 samples, 0.47%)</title><rect x="400.4" y="277" width="5.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="403.38" y="287.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (418,598,416 samples, 3.77%)</title><rect x="286.9" y="245" width="44.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="289.91" y="255.5" >trun..</text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (52,350,202 samples, 0.47%)</title><rect x="608.5" y="325" width="5.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="611.46" y="335.5" ></text>
</g>
<g >
<title>ext4_release_io_end (631,142,972 samples, 5.69%)</title><rect x="854.6" y="565" width="67.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="857.61" y="575.5" >ext4_re..</text>
</g>
<g >
<title>__walk_page_range (212,411,641 samples, 1.91%)</title><rect x="568.0" y="405" width="22.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="571.02" y="415.5" >_..</text>
</g>
<g >
<title>load_elf_binary (621,287,644 samples, 5.60%)</title><rect x="80.8" y="517" width="66.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="83.80" y="527.5" >load_el..</text>
</g>
<g >
<title>consume_stock (52,346,559 samples, 0.47%)</title><rect x="394.8" y="229" width="5.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="397.81" y="239.5" ></text>
</g>
<g >
<title>xas_load (57,218,390 samples, 0.52%)</title><rect x="450.5" y="277" width="6.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="453.51" y="287.5" ></text>
</g>
<g >
<title>__pagevec_release (52,278,178 samples, 0.47%)</title><rect x="286.9" y="213" width="5.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="289.91" y="223.5" ></text>
</g>
<g >
<title>__libc_start_main (52,315,481 samples, 0.47%)</title><rect x="75.2" y="629" width="5.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="78.23" y="639.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (52,350,202 samples, 0.47%)</title><rect x="608.5" y="405" width="5.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="611.46" y="415.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (104,518,768 samples, 0.94%)</title><rect x="608.5" y="517" width="11.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="611.46" y="527.5" ></text>
</g>
<g >
<title>rest_init (395,324,904 samples, 3.56%)</title><rect x="1147.9" y="581" width="42.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1150.94" y="591.5" >res..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (636,540,710 samples, 5.74%)</title><rect x="786.9" y="613" width="67.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="789.90" y="623.5" >syscall..</text>
</g>
<g >
<title>std::sys::unix::fs::File::truncate::{{closure}} (115,384,248 samples, 1.04%)</title><rect x="590.6" y="485" width="12.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="593.62" y="495.5" ></text>
</g>
<g >
<title>unmap_single_vma (156,931,729 samples, 1.41%)</title><rect x="164.4" y="357" width="16.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="167.40" y="367.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (52,329,698 samples, 0.47%)</title><rect x="292.5" y="149" width="5.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="295.48" y="159.5" ></text>
</g>
<g >
<title>dispatcher (733,315,045 samples, 6.61%)</title><rect x="181.1" y="565" width="78.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="184.10" y="575.5" >dispatcher</text>
</g>
<g >
<title>_nohz_idle_balance.isra.0 (393,349,934 samples, 3.55%)</title><rect x="1148.0" y="389" width="41.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1151.05" y="399.5" >_no..</text>
</g>
<g >
<title>__do_fault (523,060,959 samples, 4.72%)</title><rect x="361.4" y="389" width="55.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="364.40" y="399.5" >__do_..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (52,315,065 samples, 0.47%)</title><rect x="602.9" y="453" width="5.6" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="605.89" y="463.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (54,027,857 samples, 0.49%)</title><rect x="331.4" y="533" width="5.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="334.45" y="543.5" ></text>
</g>
<g >
<title>:-1____-1_[002]_6534717.586583: (613,194,209 samples, 5.53%)</title><rect x="10.0" y="661" width="65.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >:-1____..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (52,350,202 samples, 0.47%)</title><rect x="608.5" y="197" width="5.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="611.46" y="207.5" ></text>
</g>
<g >
<title>ext4_ext_map_blocks (52,328,369 samples, 0.47%)</title><rect x="529.0" y="293" width="5.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="532.02" y="303.5" ></text>
</g>
<g >
<title>folio_memcg_unlock (621,287,644 samples, 5.60%)</title><rect x="80.8" y="325" width="66.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="83.80" y="335.5" >folio_m..</text>
</g>
<g >
<title>rebalance_domains (393,349,934 samples, 3.55%)</title><rect x="1148.0" y="373" width="41.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1151.05" y="383.5" >reb..</text>
</g>
<g >
<title>try_to_free_buffers (157,072,367 samples, 1.42%)</title><rect x="314.7" y="117" width="16.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="317.74" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (115,384,248 samples, 1.04%)</title><rect x="590.6" y="437" width="12.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="593.62" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (780,135,063 samples, 7.03%)</title><rect x="658.5" y="613" width="83.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="661.50" y="623.5" >__x64_sys..</text>
</g>
<g >
<title>__rcu_read_unlock (52,288,544 samples, 0.47%)</title><rect x="512.2" y="357" width="5.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="515.23" y="367.5" ></text>
</g>
<g >
<title>xas_load (209,700,690 samples, 1.89%)</title><rect x="534.6" y="341" width="22.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="537.59" y="351.5" >x..</text>
</g>
<g >
<title>all (11,092,092,649 samples, 100%)</title><rect x="10.0" y="677" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>__filemap_add_folio (52,330,498 samples, 0.47%)</title><rect x="517.8" y="341" width="5.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="520.80" y="351.5" ></text>
</g>
<g >
<title>page_remove_rmap (621,287,644 samples, 5.60%)</title><rect x="80.8" y="341" width="66.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="83.80" y="351.5" >page_re..</text>
</g>
<g >
<title>ext4_readahead (52,328,369 samples, 0.47%)</title><rect x="529.0" y="341" width="5.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="532.02" y="351.5" ></text>
</g>
<g >
<title>NaClSysWrite (2,708,446,762 samples, 24.42%)</title><rect x="331.4" y="597" width="288.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="334.45" y="607.5" >NaClSysWrite</text>
</g>
<g >
<title>NaClSysWriteDecoder (2,708,446,762 samples, 24.42%)</title><rect x="331.4" y="613" width="288.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="334.45" y="623.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (52,168,566 samples, 0.47%)</title><rect x="614.0" y="437" width="5.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="617.03" y="447.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (104,560,685 samples, 0.94%)</title><rect x="439.4" y="309" width="11.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="442.38" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_lock (105,038,159 samples, 0.95%)</title><rect x="367.0" y="293" width="11.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="369.96" y="303.5" ></text>
</g>
<g >
<title>exc_page_fault (1,417,639,440 samples, 12.78%)</title><rect x="350.3" y="485" width="150.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="353.29" y="495.5" >exc_page_fault</text>
</g>
<g >
<title>ovl_destroy_inode (418,598,416 samples, 3.77%)</title><rect x="286.9" y="357" width="44.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="289.91" y="367.5" >ovl_..</text>
</g>
<g >
<title>__mmput (621,287,644 samples, 5.60%)</title><rect x="80.8" y="453" width="66.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="83.80" y="463.5" >__mmput</text>
</g>
<g >
<title>filemap_add_folio (208,800,646 samples, 1.88%)</title><rect x="383.7" y="293" width="22.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="386.70" y="303.5" >f..</text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (52,350,202 samples, 0.47%)</title><rect x="608.5" y="309" width="5.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="611.46" y="319.5" ></text>
</g>
<g >
<title>cpuidle_select (767,787,278 samples, 6.92%)</title><rect x="981.8" y="565" width="81.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="984.83" y="575.5" >cpuidle_s..</text>
</g>
<g >
<title>xa_load (262,040,969 samples, 2.36%)</title><rect x="534.6" y="357" width="27.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="537.59" y="367.5" >x..</text>
</g>
<g >
<title>realloc (52,350,202 samples, 0.47%)</title><rect x="608.5" y="69" width="5.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="611.46" y="79.5" ></text>
</g>
<g >
<title>ftruncate64 (115,384,248 samples, 1.04%)</title><rect x="590.6" y="469" width="12.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="593.62" y="479.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_some (104,518,768 samples, 0.94%)</title><rect x="608.5" y="485" width="11.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="611.46" y="495.5" ></text>
</g>
<g >
<title>__free_one_page (52,278,178 samples, 0.47%)</title><rect x="286.9" y="133" width="5.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="289.91" y="143.5" ></text>
</g>
<g >
<title>madvise_vma_behavior (733,315,045 samples, 6.61%)</title><rect x="181.1" y="405" width="78.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="184.10" y="415.5" >madvise_v..</text>
</g>
<g >
<title>__do_sys_newfstatat (780,135,063 samples, 7.03%)</title><rect x="658.5" y="597" width="83.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="661.50" y="607.5" >__do_sys_..</text>
</g>
<g >
<title>__folio_cancel_dirty (52,370,088 samples, 0.47%)</title><rect x="314.7" y="101" width="5.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="317.74" y="111.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (52,329,698 samples, 0.47%)</title><rect x="292.5" y="181" width="5.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="295.48" y="191.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (54,027,857 samples, 0.49%)</title><rect x="331.4" y="549" width="5.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="334.45" y="559.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (621,287,644 samples, 5.60%)</title><rect x="80.8" y="565" width="66.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="83.80" y="575.5" >bprm_ex..</text>
</g>
<g >
<title>ksys_write (426,777,074 samples, 3.85%)</title><rect x="741.5" y="597" width="45.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="744.49" y="607.5" >ksys..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::new (733,315,045 samples, 6.61%)</title><rect x="181.1" y="517" width="78.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="184.10" y="527.5" >rustposix..</text>
</g>
<g >
<title>folio_clear_dirty_for_io (3,362,910 samples, 0.03%)</title><rect x="921.8" y="373" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="924.75" y="383.5" ></text>
</g>
<g >
<title>madvise_vma_behavior (841,487,280 samples, 7.59%)</title><rect x="501.1" y="437" width="89.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="504.10" y="447.5" >madvise_vm..</text>
</g>
<g >
<title>ext4_map_blocks (52,328,369 samples, 0.47%)</title><rect x="529.0" y="309" width="5.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="532.02" y="319.5" ></text>
</g>
<g >
<title>unmap_page_range (621,287,644 samples, 5.60%)</title><rect x="80.8" y="389" width="66.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="83.80" y="399.5" >unmap_p..</text>
</g>
<g >
<title>cpuidle_enter_state (394,212,202 samples, 3.55%)</title><rect x="1148.0" y="501" width="42.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1151.02" y="511.5" >cpu..</text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (52,168,566 samples, 0.47%)</title><rect x="614.0" y="389" width="5.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="617.03" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (52,168,566 samples, 0.47%)</title><rect x="614.0" y="197" width="5.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="617.03" y="207.5" ></text>
</g>
<g >
<title>_rl_set_screen_size (52,315,481 samples, 0.47%)</title><rect x="75.2" y="501" width="5.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="78.23" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt_r (115,384,248 samples, 1.04%)</title><rect x="590.6" y="501" width="12.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="593.62" y="511.5" ></text>
</g>
<g >
<title>schedule_idle (135,856,407 samples, 1.22%)</title><rect x="1063.5" y="581" width="14.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1066.51" y="591.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (52,319,003 samples, 0.47%)</title><rect x="462.1" y="293" width="5.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="465.15" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (613,194,209 samples, 5.53%)</title><rect x="10.0" y="629" width="65.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >do_sysc..</text>
</g>
<g >
<title>irq_exit_rcu (393,349,934 samples, 3.55%)</title><rect x="1148.0" y="453" width="41.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1151.05" y="463.5" >irq..</text>
</g>
<g >
<title>filemap_unaccount_folio (52,329,698 samples, 0.47%)</title><rect x="292.5" y="197" width="5.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="295.48" y="207.5" ></text>
</g>
<g >
<title>mmput (621,287,644 samples, 5.60%)</title><rect x="80.8" y="469" width="66.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="83.80" y="479.5" >mmput</text>
</g>
<g >
<title>filemap_release_folio (209,384,420 samples, 1.89%)</title><rect x="309.2" y="165" width="22.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="312.17" y="175.5" >f..</text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (52,350,202 samples, 0.47%)</title><rect x="608.5" y="133" width="5.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="611.46" y="143.5" ></text>
</g>
<g >
<title>menu_select (767,787,278 samples, 6.92%)</title><rect x="981.8" y="549" width="81.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="984.83" y="559.5" >menu_select</text>
</g>
<g >
<title>tick_nohz_idle_enter (657,847,854 samples, 5.93%)</title><rect x="1078.0" y="581" width="69.9" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1080.96" y="591.5" >tick_no..</text>
</g>
<g >
<title>xa_load (52,352,091 samples, 0.47%)</title><rect x="405.9" y="245" width="5.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="408.91" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (52,168,566 samples, 0.47%)</title><rect x="614.0" y="245" width="5.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="617.03" y="255.5" ></text>
</g>
<g >
<title>page_add_file_rmap (52,212,222 samples, 0.47%)</title><rect x="484.4" y="357" width="5.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="487.41" y="367.5" ></text>
</g>
<g >
<title>finish_fault (52,212,222 samples, 0.47%)</title><rect x="484.4" y="389" width="5.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="487.41" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (209,121,265 samples, 1.89%)</title><rect x="259.1" y="533" width="22.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="262.11" y="543.5" >c..</text>
</g>
<g >
<title>process_one_work (642,679,825 samples, 5.79%)</title><rect x="854.6" y="597" width="68.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="857.61" y="607.5" >process..</text>
</g>
<g >
<title>pte_alloc_one (52,345,267 samples, 0.47%)</title><rect x="411.5" y="373" width="5.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="414.48" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (52,168,566 samples, 0.47%)</title><rect x="614.0" y="213" width="5.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="617.03" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (418,598,416 samples, 3.77%)</title><rect x="286.9" y="469" width="44.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="289.91" y="479.5" >entr..</text>
</g>
<g >
<title>madvise_walk_vmas (733,315,045 samples, 6.61%)</title><rect x="181.1" y="421" width="78.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="184.10" y="431.5" >madvise_w..</text>
</g>
<g >
<title>exec_binprm (621,287,644 samples, 5.60%)</title><rect x="80.8" y="549" width="66.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="83.80" y="559.5" >exec_bi..</text>
</g>
<g >
<title>ext4_writepages (11,536,853 samples, 0.10%)</title><rect x="921.8" y="469" width="1.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="924.75" y="479.5" ></text>
</g>
<g >
<title>__block_write_begin_int (476,300,062 samples, 4.29%)</title><rect x="422.6" y="341" width="50.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="425.61" y="351.5" >__blo..</text>
</g>
<g >
<title>filemap_fault (470,715,692 samples, 4.24%)</title><rect x="361.4" y="373" width="50.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="364.40" y="383.5" >filem..</text>
</g>
<g >
<title>__mod_lruvec_page_state (613,194,209 samples, 5.53%)</title><rect x="10.0" y="549" width="65.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >__mod_l..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::close (156,931,729 samples, 1.41%)</title><rect x="164.4" y="517" width="16.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="167.40" y="527.5" ></text>
</g>
<g >
<title>realloc (52,168,566 samples, 0.47%)</title><rect x="614.0" y="101" width="5.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="617.03" y="111.5" ></text>
</g>
<g >
<title>find_get_entries (63,192,826 samples, 0.57%)</title><rect x="596.2" y="277" width="6.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="599.17" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (733,315,045 samples, 6.61%)</title><rect x="181.1" y="469" width="78.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="184.10" y="479.5" >do_syscal..</text>
</g>
<g >
<title>evict (418,598,416 samples, 3.77%)</title><rect x="286.9" y="277" width="44.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="289.91" y="287.5" >evict</text>
</g>
<g >
<title>__mod_lruvec_state (52,329,698 samples, 0.47%)</title><rect x="292.5" y="165" width="5.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="295.48" y="175.5" ></text>
</g>
<g >
<title>vfs_statx (780,135,063 samples, 7.03%)</title><rect x="658.5" y="565" width="83.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="661.50" y="575.5" >vfs_statx</text>
</g>
<g >
<title>delete_from_page_cache_batch (52,329,698 samples, 0.47%)</title><rect x="292.5" y="213" width="5.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="295.48" y="223.5" ></text>
</g>
<g >
<title>block_invalidate_folio (209,384,420 samples, 1.89%)</title><rect x="309.2" y="181" width="22.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="312.17" y="191.5" >b..</text>
</g>
<g >
<title>folio_account_dirtied (52,236,814 samples, 0.47%)</title><rect x="456.6" y="293" width="5.5" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="459.59" y="303.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,540,713,544 samples, 13.89%)</title><rect x="337.2" y="549" width="163.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="340.19" y="559.5" >core::slice::&lt;impl [T..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (52,168,566 samples, 0.47%)</title><rect x="614.0" y="309" width="5.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="617.03" y="319.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (63,192,826 samples, 0.57%)</title><rect x="596.2" y="293" width="6.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="599.17" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_exit (613,194,209 samples, 5.53%)</title><rect x="10.0" y="613" width="65.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >__x64_s..</text>
</g>
<g >
<title>__do_softirq (393,349,934 samples, 3.55%)</title><rect x="1148.0" y="421" width="41.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1151.05" y="431.5" >__d..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (261,397,000 samples, 2.36%)</title><rect x="259.1" y="565" width="27.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="262.11" y="575.5" >r..</text>
</g>
<g >
<title>notify_change (63,192,826 samples, 0.57%)</title><rect x="596.2" y="341" width="6.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="599.17" y="351.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (52,350,202 samples, 0.47%)</title><rect x="608.5" y="373" width="5.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="611.46" y="383.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (53,212,116 samples, 0.48%)</title><rect x="523.4" y="325" width="5.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="526.36" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,417,639,440 samples, 12.78%)</title><rect x="350.3" y="469" width="150.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="353.29" y="479.5" >do_user_addr_fault</text>
</g>
<g >
<title>do_idle (2,114,664,713 samples, 19.06%)</title><rect x="923.0" y="597" width="224.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="925.98" y="607.5" >do_idle</text>
</g>
<g >
<title>pmd_page_vaddr (52,292,518 samples, 0.47%)</title><rect x="495.5" y="405" width="5.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="498.54" y="415.5" ></text>
</g>
<g >
<title>vfs_fadvise (576,736,632 samples, 5.20%)</title><rect x="506.7" y="421" width="61.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="509.67" y="431.5" >vfs_fa..</text>
</g>
<g >
<title>ext4_mpage_readpages (52,352,091 samples, 0.47%)</title><rect x="405.9" y="261" width="5.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="408.91" y="271.5" ></text>
</g>
<g >
<title>[unknown] (104,651,408 samples, 0.94%)</title><rect x="619.6" y="645" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="622.58" y="655.5" ></text>
</g>
<g >
<title>__madvise (733,315,045 samples, 6.61%)</title><rect x="181.1" y="501" width="78.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="184.10" y="511.5" >__madvise</text>
</g>
<g >
<title>__folio_mark_dirty (214,104,276 samples, 1.93%)</title><rect x="450.5" y="309" width="22.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="453.51" y="319.5" >_..</text>
</g>
<g >
<title>ondemand_readahead (418,463,005 samples, 3.77%)</title><rect x="367.0" y="341" width="44.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="369.96" y="351.5" >onde..</text>
</g>
<g >
<title>lind_open (733,315,045 samples, 6.61%)</title><rect x="181.1" y="581" width="78.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="184.10" y="591.5" >lind_open</text>
</g>
<g >
<title>reader_loop (52,315,481 samples, 0.47%)</title><rect x="75.2" y="581" width="5.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="78.23" y="591.5" ></text>
</g>
<g >
<title>___slab_alloc (53,474,660 samples, 0.48%)</title><rect x="428.2" y="245" width="5.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="431.16" y="255.5" ></text>
</g>
<g >
<title>__filemap_add_folio (156,859,675 samples, 1.41%)</title><rect x="383.7" y="277" width="16.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="386.70" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (52,168,566 samples, 0.47%)</title><rect x="614.0" y="181" width="5.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="617.03" y="191.5" ></text>
</g>
<g >
<title>NaClSysOpenDecoder (733,315,045 samples, 6.61%)</title><rect x="181.1" y="613" width="78.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="184.10" y="623.5" >NaClSysOp..</text>
</g>
<g >
<title>cpuidle_enter (394,463,122 samples, 3.56%)</title><rect x="1148.0" y="517" width="42.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1150.99" y="527.5" >cpu..</text>
</g>
<g >
<title>zap_pte_range (621,287,644 samples, 5.60%)</title><rect x="80.8" y="357" width="66.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="83.80" y="367.5" >zap_pte..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (52,350,239 samples, 0.47%)</title><rect x="619.6" y="629" width="5.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="622.58" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (209,121,265 samples, 1.89%)</title><rect x="259.1" y="517" width="22.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="262.11" y="527.5" >[..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (104,518,768 samples, 0.94%)</title><rect x="608.5" y="453" width="11.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="611.46" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (156,931,729 samples, 1.41%)</title><rect x="164.4" y="485" width="16.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="167.40" y="495.5" ></text>
</g>
<g >
<title>vfs_fstatat (780,135,063 samples, 7.03%)</title><rect x="658.5" y="581" width="83.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="661.50" y="591.5" >vfs_fstatat</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt; (54,027,857 samples, 0.49%)</title><rect x="331.4" y="565" width="5.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="334.45" y="575.5" ></text>
</g>
<g >
<title>do_madvise.part.0 (841,487,280 samples, 7.59%)</title><rect x="501.1" y="469" width="89.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="504.10" y="479.5" >do_madvise..</text>
</g>
<g >
<title>charge_memcg (733,315,045 samples, 6.61%)</title><rect x="181.1" y="277" width="78.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="184.10" y="287.5" >charge_me..</text>
</g>
<g >
<title>truncate_inode_pages_range (418,598,416 samples, 3.77%)</title><rect x="286.9" y="229" width="44.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="289.91" y="239.5" >trun..</text>
</g>
<g >
<title>folio_account_cleaned (52,370,088 samples, 0.47%)</title><rect x="314.7" y="85" width="5.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="317.74" y="95.5" ></text>
</g>
<g >
<title>read_pages (52,352,091 samples, 0.47%)</title><rect x="405.9" y="293" width="5.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="408.91" y="303.5" ></text>
</g>
<g >
<title>unmap_region (156,931,729 samples, 1.41%)</title><rect x="164.4" y="389" width="16.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="167.40" y="399.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (52,027,886 samples, 0.47%)</title><rect x="433.8" y="245" width="5.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="436.85" y="255.5" ></text>
</g>
<g >
<title>do_fault (1,260,858,421 samples, 11.37%)</title><rect x="361.4" y="405" width="134.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="364.40" y="415.5" >do_fault</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (104,518,768 samples, 0.94%)</title><rect x="608.5" y="469" width="11.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="611.46" y="479.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (52,350,202 samples, 0.47%)</title><rect x="608.5" y="261" width="5.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="611.46" y="271.5" ></text>
</g>
<g >
<title>bprm_execve (621,287,644 samples, 5.60%)</title><rect x="80.8" y="581" width="66.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="83.80" y="591.5" >bprm_ex..</text>
</g>
<g >
<title>handle_pte_fault (1,313,150,939 samples, 11.84%)</title><rect x="361.4" y="421" width="139.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="364.40" y="431.5" >handle_pte_fault</text>
</g>
<g >
<title>__madvise (841,487,280 samples, 7.59%)</title><rect x="501.1" y="533" width="89.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="504.10" y="543.5" >__madvise</text>
</g>
<g >
<title>__munmap (156,931,729 samples, 1.41%)</title><rect x="164.4" y="501" width="16.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="167.40" y="511.5" ></text>
</g>
<g >
<title>folio_mark_dirty (52,290,122 samples, 0.47%)</title><rect x="478.8" y="357" width="5.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="481.85" y="367.5" ></text>
</g>
<g >
<title>lind_close (156,931,729 samples, 1.41%)</title><rect x="164.4" y="581" width="16.7" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="167.40" y="591.5" ></text>
</g>
<g >
<title>__fprop_add_percpu_max (631,142,972 samples, 5.69%)</title><rect x="854.6" y="485" width="67.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="857.61" y="495.5" >__fprop..</text>
</g>
<g >
<title>walk_pud_range.isra.0 (212,411,641 samples, 1.91%)</title><rect x="568.0" y="357" width="22.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="571.02" y="367.5" >w..</text>
</g>
<g >
<title>do_idle (395,324,904 samples, 3.56%)</title><rect x="1147.9" y="549" width="42.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1150.94" y="559.5" >do_..</text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (52,315,065 samples, 0.47%)</title><rect x="602.9" y="485" width="5.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="605.89" y="495.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (636,540,710 samples, 5.74%)</title><rect x="786.9" y="549" width="67.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="789.90" y="559.5" >rseq_ip..</text>
</g>
<g >
<title>filemap_add_folio (105,542,614 samples, 0.95%)</title><rect x="517.8" y="357" width="11.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="520.80" y="367.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::remap_file (956,871,528 samples, 8.63%)</title><rect x="501.1" y="549" width="101.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="504.10" y="559.5" >rustposix::i..</text>
</g>
<g >
<title>do_sys_ftruncate (115,384,248 samples, 1.04%)</title><rect x="590.6" y="405" width="12.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="593.62" y="415.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (395,324,904 samples, 3.56%)</title><rect x="1147.9" y="629" width="42.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1150.94" y="639.5" >x86..</text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (52,350,202 samples, 0.47%)</title><rect x="608.5" y="437" width="5.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="611.46" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (52,350,202 samples, 0.47%)</title><rect x="608.5" y="165" width="5.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="611.46" y="175.5" ></text>
</g>
<g >
<title>page_cache_ra_order (418,463,005 samples, 3.77%)</title><rect x="367.0" y="325" width="44.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="369.96" y="335.5" >page..</text>
</g>
<g >
<title>main (52,315,481 samples, 0.47%)</title><rect x="75.2" y="597" width="5.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="78.23" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (52,350,202 samples, 0.47%)</title><rect x="608.5" y="117" width="5.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="611.46" y="127.5" ></text>
</g>
<g >
<title>fault_dirty_shared_page (52,290,122 samples, 0.47%)</title><rect x="478.8" y="389" width="5.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="481.85" y="399.5" ></text>
</g>
<g >
<title>force_page_cache_ra (733,315,045 samples, 6.61%)</title><rect x="181.1" y="357" width="78.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="184.10" y="367.5" >force_pag..</text>
</g>
<g >
<title>do_truncate (115,384,248 samples, 1.04%)</title><rect x="590.6" y="389" width="12.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="593.62" y="399.5" ></text>
</g>
<g >
<title>dispatcher (418,598,416 samples, 3.77%)</title><rect x="286.9" y="565" width="44.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="289.91" y="575.5" >disp..</text>
</g>
<g >
<title>create_empty_buffers (105,502,546 samples, 0.95%)</title><rect x="428.2" y="309" width="11.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="431.16" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (52,350,202 samples, 0.47%)</title><rect x="608.5" y="245" width="5.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="611.46" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (418,598,416 samples, 3.77%)</title><rect x="286.9" y="437" width="44.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="289.91" y="447.5" >__x6..</text>
</g>
<g >
<title>rustposix::interface::file::removefile (418,598,416 samples, 3.77%)</title><rect x="286.9" y="533" width="44.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="289.91" y="543.5" >rust..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (733,315,045 samples, 6.61%)</title><rect x="181.1" y="485" width="78.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="184.10" y="495.5" >entry_SYS..</text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u64 (52,350,202 samples, 0.47%)</title><rect x="608.5" y="341" width="5.5" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="611.46" y="351.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (209,384,420 samples, 1.89%)</title><rect x="309.2" y="133" width="22.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="312.17" y="143.5" >j..</text>
</g>
<g >
<title>load_balance (393,349,934 samples, 3.55%)</title><rect x="1148.0" y="357" width="41.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1151.05" y="367.5" >loa..</text>
</g>
<g >
<title>lind_unlink (418,598,416 samples, 3.77%)</title><rect x="286.9" y="581" width="44.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="289.91" y="591.5" >lind..</text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (52,168,566 samples, 0.47%)</title><rect x="614.0" y="357" width="5.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="617.03" y="367.5" ></text>
</g>
<g >
<title>run_rebalance_domains (393,349,934 samples, 3.55%)</title><rect x="1148.0" y="405" width="41.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1151.05" y="415.5" >run..</text>
</g>
<g >
<title>do_syscall_64 (841,487,280 samples, 7.59%)</title><rect x="501.1" y="501" width="89.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="504.10" y="511.5" >do_syscall..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (52,168,566 samples, 0.47%)</title><rect x="614.0" y="229" width="5.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="617.03" y="239.5" ></text>
</g>
<g >
<title>NaClSysCloseDecoder (156,931,729 samples, 1.41%)</title><rect x="164.4" y="613" width="16.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="167.40" y="623.5" ></text>
</g>
<g >
<title>end_page_writeback (631,142,972 samples, 5.69%)</title><rect x="854.6" y="533" width="67.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="857.61" y="543.5" >end_pag..</text>
</g>
<g >
<title>do_madvise.part.0 (733,315,045 samples, 6.61%)</title><rect x="181.1" y="437" width="78.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="184.10" y="447.5" >do_madvis..</text>
</g>
<g >
<title>worker_thread (642,679,825 samples, 5.79%)</title><rect x="854.6" y="613" width="68.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="857.61" y="623.5" >worker_..</text>
</g>
<g >
<title>unmap_vmas (621,287,644 samples, 5.60%)</title><rect x="80.8" y="421" width="66.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="83.80" y="431.5" >unmap_v..</text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (52,350,202 samples, 0.47%)</title><rect x="608.5" y="389" width="5.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="611.46" y="399.5" ></text>
</g>
<g >
<title>setattr_should_drop_suidgid (52,191,422 samples, 0.47%)</title><rect x="590.6" y="357" width="5.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="593.62" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,843,452,847 samples, 16.62%)</title><rect x="658.5" y="645" width="196.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="661.50" y="655.5" >entry_SYSCALL_64_after_hw..</text>
</g>
<g >
<title>start_kernel (395,324,904 samples, 3.56%)</title><rect x="1147.9" y="613" width="42.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1150.94" y="623.5" >sta..</text>
</g>
<g >
<title>unlink (418,598,416 samples, 3.77%)</title><rect x="286.9" y="485" width="44.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="289.91" y="495.5" >unlink</text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (52,168,566 samples, 0.47%)</title><rect x="614.0" y="325" width="5.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="617.03" y="335.5" ></text>
</g>
<g >
<title>xas_load (52,330,069 samples, 0.47%)</title><rect x="467.7" y="293" width="5.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="470.72" y="303.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::log_metadata (156,833,833 samples, 1.41%)</title><rect x="602.9" y="565" width="16.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="605.89" y="575.5" ></text>
</g>
<g >
<title>ovl_setattr (63,192,826 samples, 0.57%)</title><rect x="596.2" y="357" width="6.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="599.17" y="367.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (1,681,455 samples, 0.02%)</title><rect x="921.9" y="245" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="924.93" y="255.5" ></text>
</g>
<g >
<title>dput (418,598,416 samples, 3.77%)</title><rect x="286.9" y="341" width="44.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="289.91" y="351.5" >dput</text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (52,275,735 samples, 0.47%)</title><rect x="281.4" y="517" width="5.5" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="284.35" y="527.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (733,315,045 samples, 6.61%)</title><rect x="181.1" y="261" width="78.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="184.10" y="271.5" >cgroup_rs..</text>
</g>
<g >
<title>asm_exc_page_fault (1,417,639,440 samples, 12.78%)</title><rect x="350.3" y="501" width="150.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="353.29" y="511.5" >asm_exc_page_fault</text>
</g>
<g >
<title>do_syscall_64 (52,315,481 samples, 0.47%)</title><rect x="75.2" y="421" width="5.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="78.23" y="431.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (52,323,773 samples, 0.47%)</title><rect x="175.5" y="229" width="5.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="178.53" y="239.5" ></text>
</g>
<g >
<title>mod_lruvec_page_state.constprop.0 (613,194,209 samples, 5.53%)</title><rect x="10.0" y="565" width="65.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >mod_lru..</text>
</g>
<g >
<title>cpu_startup_entry (2,114,664,713 samples, 19.06%)</title><rect x="923.0" y="613" width="224.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="925.98" y="623.5" >cpu_startup_entry</text>
</g>
<g >
<title>ptep_clear_flush (1,681,455 samples, 0.02%)</title><rect x="921.9" y="293" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="924.93" y="303.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper_inner (156,931,729 samples, 1.41%)</title><rect x="164.4" y="533" width="16.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="167.40" y="543.5" ></text>
</g>
<g >
<title>walk_page_range (212,411,641 samples, 1.91%)</title><rect x="568.0" y="421" width="22.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="571.02" y="431.5" >w..</text>
</g>
<g >
<title>unmap_single_vma (621,287,644 samples, 5.60%)</title><rect x="80.8" y="405" width="66.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="83.80" y="415.5" >unmap_s..</text>
</g>
<g >
<title>std::fs::File::set_len (115,384,248 samples, 1.04%)</title><rect x="590.6" y="533" width="12.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="593.62" y="543.5" ></text>
</g>
<g >
<title>search_binary_handler (621,287,644 samples, 5.60%)</title><rect x="80.8" y="533" width="66.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="83.80" y="543.5" >search_..</text>
</g>
<g >
<title>do_page_mkwrite (580,944,496 samples, 5.24%)</title><rect x="417.0" y="389" width="61.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="420.05" y="399.5" >do_pag..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (393,640,419 samples, 3.55%)</title><rect x="1148.0" y="485" width="41.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1151.02" y="495.5" >asm..</text>
</g>
<g >
<title>unlock_page (52,350,622 samples, 0.47%)</title><rect x="490.0" y="389" width="5.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="492.97" y="399.5" ></text>
</g>
<g >
<title>iput (418,598,416 samples, 3.77%)</title><rect x="286.9" y="405" width="44.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="289.91" y="415.5" >iput</text>
</g>
<g >
<title>folio_end_writeback (631,142,972 samples, 5.69%)</title><rect x="854.6" y="517" width="67.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="857.61" y="527.5" >folio_e..</text>
</g>
<g >
<title>__handle_mm_fault (1,313,150,939 samples, 11.84%)</title><rect x="361.4" y="437" width="139.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="364.40" y="447.5" >__handle_mm_fault</text>
</g>
<g >
<title>native_flush_tlb_multi (1,681,455 samples, 0.02%)</title><rect x="921.9" y="261" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="924.93" y="271.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (733,315,045 samples, 6.61%)</title><rect x="181.1" y="341" width="78.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="184.10" y="351.5" >page_cach..</text>
</g>
<g >
<title>tick_nohz_next_event (767,787,278 samples, 6.92%)</title><rect x="981.8" y="517" width="81.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="984.83" y="527.5" >tick_nohz..</text>
</g>
<g >
<title>__mem_cgroup_charge (52,330,498 samples, 0.47%)</title><rect x="517.8" y="325" width="5.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="520.80" y="335.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (52,370,088 samples, 0.47%)</title><rect x="314.7" y="69" width="5.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="317.74" y="79.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,320,960,452 samples, 11.91%)</title><rect x="923.0" y="581" width="140.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="925.98" y="591.5" >cpuidle_idle_call</text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (52,315,065 samples, 0.47%)</title><rect x="602.9" y="533" width="5.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="605.89" y="543.5" ></text>
</g>
<g >
<title>sock_sendmsg (426,777,074 samples, 3.85%)</title><rect x="741.5" y="549" width="45.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="744.49" y="559.5" >sock..</text>
</g>
<g >
<title>alloc::alloc::realloc (52,350,202 samples, 0.47%)</title><rect x="608.5" y="85" width="5.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="611.46" y="95.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1,540,713,544 samples, 13.89%)</title><rect x="337.2" y="533" width="163.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="340.19" y="543.5" >core::intrinsics::cop..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (2,509,989,617 samples, 22.63%)</title><rect x="923.0" y="645" width="267.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="925.98" y="655.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>exit_mmap (621,287,644 samples, 5.60%)</title><rect x="80.8" y="437" width="66.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="83.80" y="447.5" >exit_mmap</text>
</g>
<g >
<title>flush_tlb_mm_range (1,681,455 samples, 0.02%)</title><rect x="921.9" y="277" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="924.93" y="287.5" ></text>
</g>
<g >
<title>ext4_dirty_folio (104,617,775 samples, 0.94%)</title><rect x="170.0" y="261" width="11.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="172.97" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (621,287,644 samples, 5.60%)</title><rect x="80.8" y="645" width="66.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="83.80" y="655.5" >entry_S..</text>
</g>
<g >
<title>cache_from_obj (104,702,279 samples, 0.94%)</title><rect x="320.3" y="69" width="11.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="323.31" y="79.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (52,168,566 samples, 0.47%)</title><rect x="614.0" y="341" width="5.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="617.03" y="351.5" ></text>
</g>
<g >
<title>filemap_add_folio (733,315,045 samples, 6.61%)</title><rect x="181.1" y="325" width="78.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="184.10" y="335.5" >filemap_a..</text>
</g>
<g >
<title>__rcu_read_unlock (52,272,109 samples, 0.47%)</title><rect x="378.1" y="293" width="5.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="381.14" y="303.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (52,212,222 samples, 0.47%)</title><rect x="484.4" y="341" width="5.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="487.41" y="351.5" ></text>
</g>
<g >
<title>[sel_ldr] (4,443,269,761 samples, 40.06%)</title><rect x="146.9" y="645" width="472.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="149.89" y="655.5" >[sel_ldr]</text>
</g>
<g >
<title>do_set_pte (52,212,222 samples, 0.47%)</title><rect x="484.4" y="373" width="5.6" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="487.41" y="383.5" ></text>
</g>
</g>
</svg>
