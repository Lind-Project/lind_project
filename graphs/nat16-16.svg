<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>__free_one_page (5 samples, 0.53%)</title><rect x="201.9" y="181" width="6.2" height="15.0" fill="rgb(206,24,27)" rx="2" ry="2" />
<text  x="204.86" y="191.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.11%)</title><rect x="802.5" y="325" width="1.3" height="15.0" fill="rgb(233,33,2)" rx="2" ry="2" />
<text  x="805.52" y="335.5" ></text>
</g>
<g >
<title>page_counter_uncharge (31 samples, 3.29%)</title><rect x="225.7" y="197" width="38.9" height="15.0" fill="rgb(231,6,27)" rx="2" ry="2" />
<text  x="228.69" y="207.5" >pag..</text>
</g>
<g >
<title>arch_call_rest_init (72 samples, 7.65%)</title><rect x="742.3" y="389" width="90.3" height="15.0" fill="rgb(254,170,23)" rx="2" ry="2" />
<text  x="745.33" y="399.5" >arch_call_..</text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.11%)</title><rect x="664.6" y="341" width="1.2" height="15.0" fill="rgb(239,123,43)" rx="2" ry="2" />
<text  x="667.58" y="351.5" ></text>
</g>
<g >
<title>refill_stock (1 samples, 0.11%)</title><rect x="968.0" y="181" width="1.3" height="15.0" fill="rgb(247,165,9)" rx="2" ry="2" />
<text  x="971.04" y="191.5" ></text>
</g>
<g >
<title>__schedule (45 samples, 4.78%)</title><rect x="673.4" y="373" width="56.4" height="15.0" fill="rgb(208,26,28)" rx="2" ry="2" />
<text  x="676.36" y="383.5" >__sch..</text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 6.80%)</title><rect x="15.0" y="117" width="80.3" height="15.0" fill="rgb(206,108,26)" rx="2" ry="2" />
<text  x="18.02" y="127.5" >intel_pmu..</text>
</g>
<g >
<title>tick_nohz_idle_exit (3 samples, 0.32%)</title><rect x="734.8" y="389" width="3.8" height="15.0" fill="rgb(231,85,53)" rx="2" ry="2" />
<text  x="737.80" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.21%)</title><rect x="457.7" y="453" width="2.5" height="15.0" fill="rgb(205,44,37)" rx="2" ry="2" />
<text  x="460.67" y="463.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.11%)</title><rect x="151.7" y="69" width="1.3" height="15.0" fill="rgb(253,94,54)" rx="2" ry="2" />
<text  x="154.70" y="79.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.11%)</title><rect x="712.2" y="325" width="1.3" height="15.0" fill="rgb(222,171,5)" rx="2" ry="2" />
<text  x="715.23" y="335.5" ></text>
</g>
<g >
<title>mutex_lock (45 samples, 4.78%)</title><rect x="1107.2" y="261" width="56.5" height="15.0" fill="rgb(223,55,4)" rx="2" ry="2" />
<text  x="1110.24" y="271.5" >mutex..</text>
</g>
<g >
<title>autoremove_wake_function (19 samples, 2.02%)</title><rect x="855.2" y="213" width="23.8" height="15.0" fill="rgb(238,6,29)" rx="2" ry="2" />
<text  x="858.19" y="223.5" >a..</text>
</g>
<g >
<title>_nohz_idle_balance (2 samples, 0.21%)</title><rect x="811.3" y="245" width="2.5" height="15.0" fill="rgb(225,198,25)" rx="2" ry="2" />
<text  x="814.30" y="255.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.21%)</title><rect x="738.6" y="405" width="2.5" height="15.0" fill="rgb(241,84,42)" rx="2" ry="2" />
<text  x="741.57" y="415.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.11%)</title><rect x="457.7" y="309" width="1.2" height="15.0" fill="rgb(206,226,49)" rx="2" ry="2" />
<text  x="460.67" y="319.5" ></text>
</g>
<g >
<title>find_attach (1 samples, 0.11%)</title><rect x="13.8" y="229" width="1.2" height="15.0" fill="rgb(234,26,24)" rx="2" ry="2" />
<text  x="16.76" y="239.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.11%)</title><rect x="865.2" y="101" width="1.3" height="15.0" fill="rgb(208,187,34)" rx="2" ry="2" />
<text  x="868.22" y="111.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (5 samples, 0.53%)</title><rect x="792.5" y="277" width="6.3" height="15.0" fill="rgb(223,172,47)" rx="2" ry="2" />
<text  x="795.49" y="287.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.11%)</title><rect x="690.9" y="293" width="1.3" height="15.0" fill="rgb(241,183,30)" rx="2" ry="2" />
<text  x="693.91" y="303.5" ></text>
</g>
<g >
<title>__cmd_record (1 samples, 0.11%)</title><rect x="13.8" y="437" width="1.2" height="15.0" fill="rgb(222,22,27)" rx="2" ry="2" />
<text  x="16.76" y="447.5" ></text>
</g>
<g >
<title>ksys_read (283 samples, 30.07%)</title><rect x="100.3" y="325" width="354.9" height="15.0" fill="rgb(250,159,37)" rx="2" ry="2" />
<text  x="103.29" y="335.5" >ksys_read</text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.11%)</title><rect x="1186.2" y="229" width="1.3" height="15.0" fill="rgb(229,61,24)" rx="2" ry="2" />
<text  x="1189.24" y="239.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.11%)</title><rect x="12.5" y="277" width="1.3" height="15.0" fill="rgb(221,116,21)" rx="2" ry="2" />
<text  x="15.51" y="287.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (1 samples, 0.11%)</title><rect x="99.0" y="373" width="1.3" height="15.0" fill="rgb(253,168,36)" rx="2" ry="2" />
<text  x="102.03" y="383.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.11%)</title><rect x="1163.7" y="245" width="1.2" height="15.0" fill="rgb(206,28,10)" rx="2" ry="2" />
<text  x="1166.67" y="255.5" ></text>
</g>
<g >
<title>__mutex_lock_slowpath (39 samples, 4.14%)</title><rect x="383.7" y="245" width="48.9" height="15.0" fill="rgb(219,207,9)" rx="2" ry="2" />
<text  x="386.69" y="255.5" >__mu..</text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.11%)</title><rect x="12.5" y="245" width="1.3" height="15.0" fill="rgb(236,132,8)" rx="2" ry="2" />
<text  x="15.51" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (280 samples, 29.76%)</title><rect x="838.9" y="373" width="351.1" height="15.0" fill="rgb(229,90,14)" rx="2" ry="2" />
<text  x="841.88" y="383.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>copy_fpregs_to_fpstate (2 samples, 0.21%)</title><rect x="836.4" y="373" width="2.5" height="15.0" fill="rgb(249,134,44)" rx="2" ry="2" />
<text  x="839.38" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (4 samples, 0.43%)</title><rect x="729.8" y="389" width="5.0" height="15.0" fill="rgb(211,174,19)" rx="2" ry="2" />
<text  x="732.79" y="399.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (1 samples, 0.11%)</title><rect x="455.2" y="277" width="1.2" height="15.0" fill="rgb(211,164,43)" rx="2" ry="2" />
<text  x="458.16" y="287.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.11%)</title><rect x="12.5" y="261" width="1.3" height="15.0" fill="rgb(233,134,14)" rx="2" ry="2" />
<text  x="15.51" y="271.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.11%)</title><rect x="213.1" y="213" width="1.3" height="15.0" fill="rgb(209,50,11)" rx="2" ry="2" />
<text  x="216.15" y="223.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.21%)</title><rect x="10.0" y="437" width="2.5" height="15.0" fill="rgb(252,115,6)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>clear_page_erms (42 samples, 4.46%)</title><rect x="981.8" y="213" width="52.7" height="15.0" fill="rgb(252,161,36)" rx="2" ry="2" />
<text  x="984.84" y="223.5" >clear..</text>
</g>
<g >
<title>default_wake_function (19 samples, 2.02%)</title><rect x="855.2" y="197" width="23.8" height="15.0" fill="rgb(210,182,48)" rx="2" ry="2" />
<text  x="858.19" y="207.5" >d..</text>
</g>
<g >
<title>update_load_avg (1 samples, 0.11%)</title><rect x="1176.2" y="181" width="1.3" height="15.0" fill="rgb(219,138,8)" rx="2" ry="2" />
<text  x="1179.21" y="191.5" ></text>
</g>
<g >
<title>kick_ilb (8 samples, 0.85%)</title><rect x="813.8" y="245" width="10.0" height="15.0" fill="rgb(208,166,31)" rx="2" ry="2" />
<text  x="816.80" y="255.5" ></text>
</g>
<g >
<title>__write_once_size (1 samples, 0.11%)</title><rect x="95.3" y="325" width="1.2" height="15.0" fill="rgb(219,18,0)" rx="2" ry="2" />
<text  x="98.27" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="13.8" y="357" width="1.2" height="15.0" fill="rgb(205,181,30)" rx="2" ry="2" />
<text  x="16.76" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_write (277 samples, 29.44%)</title><rect x="840.1" y="341" width="347.4" height="15.0" fill="rgb(211,96,2)" rx="2" ry="2" />
<text  x="843.14" y="351.5" >__x64_sys_write</text>
</g>
<g >
<title>update_curr (2 samples, 0.21%)</title><rect x="1173.7" y="181" width="2.5" height="15.0" fill="rgb(207,182,33)" rx="2" ry="2" />
<text  x="1176.70" y="191.5" ></text>
</g>
<g >
<title>psi_group_change (4 samples, 0.43%)</title><rect x="1180.0" y="197" width="5.0" height="15.0" fill="rgb(244,219,2)" rx="2" ry="2" />
<text  x="1182.97" y="207.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.21%)</title><rect x="662.1" y="277" width="2.5" height="15.0" fill="rgb(232,226,26)" rx="2" ry="2" />
<text  x="665.07" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.11%)</title><rect x="737.3" y="373" width="1.3" height="15.0" fill="rgb(227,193,51)" rx="2" ry="2" />
<text  x="740.31" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="855.2" y="165" width="1.2" height="15.0" fill="rgb(244,76,7)" rx="2" ry="2" />
<text  x="858.19" y="175.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.11%)</title><rect x="10.0" y="293" width="1.3" height="15.0" fill="rgb(209,145,45)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.11%)</title><rect x="1176.2" y="165" width="1.3" height="15.0" fill="rgb(240,53,28)" rx="2" ry="2" />
<text  x="1179.21" y="175.5" ></text>
</g>
<g >
<title>start_kernel (72 samples, 7.65%)</title><rect x="742.3" y="405" width="90.3" height="15.0" fill="rgb(232,83,9)" rx="2" ry="2" />
<text  x="745.33" y="415.5" >start_kernel</text>
</g>
<g >
<title>newidle_balance (13 samples, 1.38%)</title><rect x="683.4" y="341" width="16.3" height="15.0" fill="rgb(250,126,26)" rx="2" ry="2" />
<text  x="686.39" y="351.5" ></text>
</g>
<g >
<title>swapper (297 samples, 31.56%)</title><rect x="460.2" y="469" width="372.4" height="15.0" fill="rgb(210,169,27)" rx="2" ry="2" />
<text  x="463.18" y="479.5" >swapper</text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.11%)</title><rect x="734.8" y="373" width="1.3" height="15.0" fill="rgb(222,54,37)" rx="2" ry="2" />
<text  x="737.80" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="95.3" y="277" width="1.2" height="15.0" fill="rgb(208,163,38)" rx="2" ry="2" />
<text  x="98.27" y="287.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge (50 samples, 5.31%)</title><rect x="209.4" y="229" width="62.7" height="15.0" fill="rgb(245,137,2)" rx="2" ry="2" />
<text  x="212.38" y="239.5" >mem_cg..</text>
</g>
<g >
<title>__memcg_kmem_charge_page (61 samples, 6.48%)</title><rect x="894.1" y="229" width="76.5" height="15.0" fill="rgb(239,211,12)" rx="2" ry="2" />
<text  x="897.06" y="239.5" >__memcg_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (285 samples, 30.29%)</title><rect x="100.3" y="373" width="357.4" height="15.0" fill="rgb(234,166,2)" rx="2" ry="2" />
<text  x="103.29" y="383.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>newidle_balance (11 samples, 1.17%)</title><rect x="810.0" y="277" width="13.8" height="15.0" fill="rgb(225,147,21)" rx="2" ry="2" />
<text  x="813.04" y="287.5" ></text>
</g>
<g >
<title>__switch_to_asm (1 samples, 0.11%)</title><rect x="482.8" y="453" width="1.2" height="15.0" fill="rgb(210,225,38)" rx="2" ry="2" />
<text  x="485.75" y="463.5" ></text>
</g>
<g >
<title>autoremove_wake_function (23 samples, 2.44%)</title><rect x="127.9" y="213" width="28.8" height="15.0" fill="rgb(219,144,35)" rx="2" ry="2" />
<text  x="130.87" y="223.5" >au..</text>
</g>
<g >
<title>main (2 samples, 0.21%)</title><rect x="10.0" y="405" width="2.5" height="15.0" fill="rgb(253,14,27)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.11%)</title><rect x="866.5" y="85" width="1.2" height="15.0" fill="rgb(228,75,12)" rx="2" ry="2" />
<text  x="869.47" y="95.5" ></text>
</g>
<g >
<title>uncharge_batch (43 samples, 4.57%)</title><rect x="214.4" y="213" width="53.9" height="15.0" fill="rgb(224,131,29)" rx="2" ry="2" />
<text  x="217.40" y="223.5" >uncha..</text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.11%)</title><rect x="828.9" y="277" width="1.2" height="15.0" fill="rgb(244,105,45)" rx="2" ry="2" />
<text  x="831.85" y="287.5" ></text>
</g>
<g >
<title>__wake_up_common (21 samples, 2.23%)</title><rect x="852.7" y="229" width="26.3" height="15.0" fill="rgb(221,228,23)" rx="2" ry="2" />
<text  x="855.68" y="239.5" >_..</text>
</g>
<g >
<title>nohz_csd_func (2 samples, 0.21%)</title><rect x="806.3" y="309" width="2.5" height="15.0" fill="rgb(236,178,27)" rx="2" ry="2" />
<text  x="809.28" y="319.5" ></text>
</g>
<g >
<title>copy_page_to_iter (2 samples, 0.21%)</title><rect x="457.7" y="341" width="2.5" height="15.0" fill="rgb(226,125,10)" rx="2" ry="2" />
<text  x="460.67" y="351.5" ></text>
</g>
<g >
<title>find_next_bit (1 samples, 0.11%)</title><rect x="812.6" y="213" width="1.2" height="15.0" fill="rgb(217,87,41)" rx="2" ry="2" />
<text  x="815.55" y="223.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 6.80%)</title><rect x="15.0" y="197" width="80.3" height="15.0" fill="rgb(238,64,49)" rx="2" ry="2" />
<text  x="18.02" y="207.5" >remote_fu..</text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.11%)</title><rect x="12.5" y="293" width="1.3" height="15.0" fill="rgb(209,145,32)" rx="2" ry="2" />
<text  x="15.51" y="303.5" ></text>
</g>
<g >
<title>read (287 samples, 30.50%)</title><rect x="97.8" y="389" width="359.9" height="15.0" fill="rgb(219,151,38)" rx="2" ry="2" />
<text  x="100.78" y="399.5" >read</text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.11%)</title><rect x="119.1" y="277" width="1.3" height="15.0" fill="rgb(205,34,3)" rx="2" ry="2" />
<text  x="122.10" y="287.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 6.80%)</title><rect x="15.0" y="165" width="80.3" height="15.0" fill="rgb(226,12,36)" rx="2" ry="2" />
<text  x="18.02" y="175.5" >__perf_ev..</text>
</g>
<g >
<title>__fget_light (1 samples, 0.11%)</title><rect x="100.3" y="309" width="1.2" height="15.0" fill="rgb(237,228,31)" rx="2" ry="2" />
<text  x="103.29" y="319.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (33 samples, 3.51%)</title><rect x="1062.1" y="229" width="41.4" height="15.0" fill="rgb(225,85,39)" rx="2" ry="2" />
<text  x="1065.09" y="239.5" >cop..</text>
</g>
<g >
<title>ksys_write (277 samples, 29.44%)</title><rect x="840.1" y="325" width="347.4" height="15.0" fill="rgb(253,64,9)" rx="2" ry="2" />
<text  x="843.14" y="335.5" >ksys_write</text>
</g>
<g >
<title>__wake_up_common (24 samples, 2.55%)</title><rect x="126.6" y="229" width="30.1" height="15.0" fill="rgb(234,171,33)" rx="2" ry="2" />
<text  x="129.62" y="239.5" >__..</text>
</g>
<g >
<title>evlist__prepare_workload (1 samples, 0.11%)</title><rect x="13.8" y="421" width="1.2" height="15.0" fill="rgb(243,206,11)" rx="2" ry="2" />
<text  x="16.76" y="431.5" ></text>
</g>
<g >
<title>menu_update (3 samples, 0.32%)</title><rect x="652.0" y="341" width="3.8" height="15.0" fill="rgb(223,73,54)" rx="2" ry="2" />
<text  x="655.04" y="351.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (5 samples, 0.53%)</title><rect x="667.1" y="389" width="6.3" height="15.0" fill="rgb(221,83,31)" rx="2" ry="2" />
<text  x="670.09" y="399.5" ></text>
</g>
<g >
<title>write16 (285 samples, 30.29%)</title><rect x="832.6" y="469" width="357.4" height="15.0" fill="rgb(230,180,52)" rx="2" ry="2" />
<text  x="835.61" y="479.5" >write16</text>
</g>
<g >
<title>vfs_write (274 samples, 29.12%)</title><rect x="843.9" y="309" width="343.6" height="15.0" fill="rgb(241,147,17)" rx="2" ry="2" />
<text  x="846.90" y="319.5" >vfs_write</text>
</g>
<g >
<title>cpuidle_enter (119 samples, 12.65%)</title><rect x="496.5" y="373" width="149.3" height="15.0" fill="rgb(205,182,13)" rx="2" ry="2" />
<text  x="499.55" y="383.5" >cpuidle_enter</text>
</g>
<g >
<title>read16 (289 samples, 30.71%)</title><rect x="97.8" y="469" width="362.4" height="15.0" fill="rgb(211,88,32)" rx="2" ry="2" />
<text  x="100.78" y="479.5" >read16</text>
</g>
<g >
<title>smp_call_function_single (64 samples, 6.80%)</title><rect x="15.0" y="229" width="80.3" height="15.0" fill="rgb(213,11,15)" rx="2" ry="2" />
<text  x="18.02" y="239.5" >smp_call_..</text>
</g>
<g >
<title>update_curr (1 samples, 0.11%)</title><rect x="441.4" y="197" width="1.2" height="15.0" fill="rgb(216,55,43)" rx="2" ry="2" />
<text  x="444.37" y="207.5" ></text>
</g>
<g >
<title>profile_transition (1 samples, 0.11%)</title><rect x="13.8" y="245" width="1.2" height="15.0" fill="rgb(245,145,37)" rx="2" ry="2" />
<text  x="16.76" y="255.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.11%)</title><rect x="208.1" y="229" width="1.3" height="15.0" fill="rgb(223,192,10)" rx="2" ry="2" />
<text  x="211.13" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 6.80%)</title><rect x="15.0" y="357" width="80.3" height="15.0" fill="rgb(234,104,18)" rx="2" ry="2" />
<text  x="18.02" y="367.5" >entry_SYS..</text>
</g>
<g >
<title>bash (3 samples, 0.32%)</title><rect x="10.0" y="469" width="3.8" height="15.0" fill="rgb(241,185,41)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 6.80%)</title><rect x="15.0" y="149" width="80.3" height="15.0" fill="rgb(248,50,51)" rx="2" ry="2" />
<text  x="18.02" y="159.5" >ctx_resched</text>
</g>
<g >
<title>copyin (2 samples, 0.21%)</title><rect x="1103.5" y="229" width="2.5" height="15.0" fill="rgb(234,164,52)" rx="2" ry="2" />
<text  x="1106.48" y="239.5" ></text>
</g>
<g >
<title>reweight_entity (2 samples, 0.21%)</title><rect x="862.7" y="85" width="2.5" height="15.0" fill="rgb(234,117,47)" rx="2" ry="2" />
<text  x="865.71" y="95.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.11%)</title><rect x="95.3" y="293" width="1.2" height="15.0" fill="rgb(254,120,39)" rx="2" ry="2" />
<text  x="98.27" y="303.5" ></text>
</g>
<g >
<title>_start (287 samples, 30.50%)</title><rect x="97.8" y="453" width="359.9" height="15.0" fill="rgb(220,164,41)" rx="2" ry="2" />
<text  x="100.78" y="463.5" >_start</text>
</g>
<g >
<title>tick_nohz_idle_enter (2 samples, 0.21%)</title><rect x="827.6" y="325" width="2.5" height="15.0" fill="rgb(250,52,5)" rx="2" ry="2" />
<text  x="830.60" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_read (283 samples, 30.07%)</title><rect x="100.3" y="341" width="354.9" height="15.0" fill="rgb(243,105,33)" rx="2" ry="2" />
<text  x="103.29" y="351.5" >__x64_sys_read</text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.11%)</title><rect x="96.5" y="133" width="1.3" height="15.0" fill="rgb(221,0,41)" rx="2" ry="2" />
<text  x="99.52" y="143.5" ></text>
</g>
<g >
<title>__mutex_lock.constprop.0 (45 samples, 4.78%)</title><rect x="1107.2" y="229" width="56.5" height="15.0" fill="rgb(206,27,10)" rx="2" ry="2" />
<text  x="1110.24" y="239.5" >__mut..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (276 samples, 29.33%)</title><rect x="486.5" y="453" width="346.1" height="15.0" fill="rgb(254,130,45)" rx="2" ry="2" />
<text  x="489.51" y="463.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>security_bprm_creds_for_exec (1 samples, 0.11%)</title><rect x="13.8" y="277" width="1.2" height="15.0" fill="rgb(213,5,10)" rx="2" ry="2" />
<text  x="16.76" y="287.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.11%)</title><rect x="1175.0" y="165" width="1.2" height="15.0" fill="rgb(253,21,44)" rx="2" ry="2" />
<text  x="1177.95" y="175.5" ></text>
</g>
<g >
<title>pipe_read (2 samples, 0.21%)</title><rect x="457.7" y="357" width="2.5" height="15.0" fill="rgb(238,162,21)" rx="2" ry="2" />
<text  x="460.67" y="367.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (2 samples, 0.21%)</title><rect x="95.3" y="405" width="2.5" height="15.0" fill="rgb(231,8,32)" rx="2" ry="2" />
<text  x="98.27" y="415.5" ></text>
</g>
<g >
<title>anon_pipe_buf_release (85 samples, 9.03%)</title><rect x="165.5" y="261" width="106.6" height="15.0" fill="rgb(217,128,41)" rx="2" ry="2" />
<text  x="168.49" y="271.5" >anon_pipe_buf..</text>
</g>
<g >
<title>__wrgsbase_inactive (2 samples, 0.21%)</title><rect x="484.0" y="453" width="2.5" height="15.0" fill="rgb(205,113,45)" rx="2" ry="2" />
<text  x="487.01" y="463.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (25 samples, 2.66%)</title><rect x="125.4" y="245" width="31.3" height="15.0" fill="rgb(240,75,29)" rx="2" ry="2" />
<text  x="128.37" y="255.5" >__..</text>
</g>
<g >
<title>[unknown] (66 samples, 7.01%)</title><rect x="15.0" y="453" width="82.8" height="15.0" fill="rgb(239,14,16)" rx="2" ry="2" />
<text  x="18.02" y="463.5" >[unknown]</text>
</g>
<g >
<title>schedule (18 samples, 1.91%)</title><rect x="1164.9" y="261" width="22.6" height="15.0" fill="rgb(223,112,38)" rx="2" ry="2" />
<text  x="1167.92" y="271.5" >s..</text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.11%)</title><rect x="1182.5" y="149" width="1.2" height="15.0" fill="rgb(241,111,46)" rx="2" ry="2" />
<text  x="1185.48" y="159.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.11%)</title><rect x="733.5" y="373" width="1.3" height="15.0" fill="rgb(230,94,45)" rx="2" ry="2" />
<text  x="736.55" y="383.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (6 samples, 0.64%)</title><rect x="747.3" y="277" width="7.6" height="15.0" fill="rgb(248,173,5)" rx="2" ry="2" />
<text  x="750.34" y="287.5" ></text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.11%)</title><rect x="650.8" y="341" width="1.2" height="15.0" fill="rgb(237,148,24)" rx="2" ry="2" />
<text  x="653.79" y="351.5" ></text>
</g>
<g >
<title>cpu_startup_entry (72 samples, 7.65%)</title><rect x="742.3" y="357" width="90.3" height="15.0" fill="rgb(238,25,33)" rx="2" ry="2" />
<text  x="745.33" y="367.5" >cpu_startu..</text>
</g>
<g >
<title>perf (66 samples, 7.01%)</title><rect x="15.0" y="469" width="82.8" height="15.0" fill="rgb(213,223,9)" rx="2" ry="2" />
<text  x="18.02" y="479.5" >perf</text>
</g>
<g >
<title>_start (2 samples, 0.21%)</title><rect x="10.0" y="453" width="2.5" height="15.0" fill="rgb(208,119,17)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>__evlist__enable (64 samples, 6.80%)</title><rect x="15.0" y="421" width="80.3" height="15.0" fill="rgb(213,2,44)" rx="2" ry="2" />
<text  x="18.02" y="431.5" >__evlist_..</text>
</g>
<g >
<title>get_next_timer_interrupt (4 samples, 0.43%)</title><rect x="659.6" y="309" width="5.0" height="15.0" fill="rgb(233,32,54)" rx="2" ry="2" />
<text  x="662.56" y="319.5" ></text>
</g>
<g >
<title>update_load_avg (3 samples, 0.32%)</title><rect x="713.5" y="325" width="3.7" height="15.0" fill="rgb(208,9,48)" rx="2" ry="2" />
<text  x="716.49" y="335.5" ></text>
</g>
<g >
<title>arch_cpu_idle_exit (1 samples, 0.11%)</title><rect x="486.5" y="405" width="1.3" height="15.0" fill="rgb(211,99,44)" rx="2" ry="2" />
<text  x="489.51" y="415.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.21%)</title><rect x="132.9" y="165" width="2.5" height="15.0" fill="rgb(240,77,14)" rx="2" ry="2" />
<text  x="135.89" y="175.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.11%)</title><rect x="1171.2" y="181" width="1.2" height="15.0" fill="rgb(224,214,7)" rx="2" ry="2" />
<text  x="1174.19" y="191.5" ></text>
</g>
<g >
<title>new_sync_write (272 samples, 28.91%)</title><rect x="846.4" y="293" width="341.1" height="15.0" fill="rgb(243,140,12)" rx="2" ry="2" />
<text  x="849.41" y="303.5" >new_sync_write</text>
</g>
<g >
<title>default_wake_function (23 samples, 2.44%)</title><rect x="127.9" y="197" width="28.8" height="15.0" fill="rgb(218,166,40)" rx="2" ry="2" />
<text  x="130.87" y="207.5" >de..</text>
</g>
<g >
<title>smp_call_function_single_async (6 samples, 0.64%)</title><rect x="816.3" y="229" width="7.5" height="15.0" fill="rgb(212,92,25)" rx="2" ry="2" />
<text  x="819.31" y="239.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (25 samples, 2.66%)</title><rect x="125.4" y="261" width="31.3" height="15.0" fill="rgb(239,198,7)" rx="2" ry="2" />
<text  x="128.37" y="271.5" >__..</text>
</g>
<g >
<title>do_execveat_common (1 samples, 0.11%)</title><rect x="13.8" y="325" width="1.2" height="15.0" fill="rgb(253,122,24)" rx="2" ry="2" />
<text  x="16.76" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.21%)</title><rect x="457.7" y="421" width="2.5" height="15.0" fill="rgb(236,78,52)" rx="2" ry="2" />
<text  x="460.67" y="431.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 6.80%)</title><rect x="15.0" y="133" width="80.3" height="15.0" fill="rgb(223,109,38)" rx="2" ry="2" />
<text  x="18.02" y="143.5" >x86_pmu_e..</text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="788.7" y="277" width="1.3" height="15.0" fill="rgb(244,105,50)" rx="2" ry="2" />
<text  x="791.72" y="287.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="1182.5" y="165" width="1.2" height="15.0" fill="rgb(224,213,34)" rx="2" ry="2" />
<text  x="1185.48" y="175.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (119 samples, 12.65%)</title><rect x="496.5" y="357" width="149.3" height="15.0" fill="rgb(254,16,50)" rx="2" ry="2" />
<text  x="499.55" y="367.5" >cpuidle_enter_state</text>
</g>
<g >
<title>rmqueue (1 samples, 0.11%)</title><rect x="1054.6" y="229" width="1.2" height="15.0" fill="rgb(214,28,9)" rx="2" ry="2" />
<text  x="1057.57" y="239.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.11%)</title><rect x="672.1" y="373" width="1.3" height="15.0" fill="rgb(232,138,44)" rx="2" ry="2" />
<text  x="675.10" y="383.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.11%)</title><rect x="728.5" y="357" width="1.3" height="15.0" fill="rgb(241,223,51)" rx="2" ry="2" />
<text  x="731.53" y="367.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.21%)</title><rect x="10.0" y="357" width="2.5" height="15.0" fill="rgb(227,62,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>try_charge (22 samples, 2.34%)</title><rect x="941.7" y="197" width="27.6" height="15.0" fill="rgb(206,56,16)" rx="2" ry="2" />
<text  x="944.71" y="207.5" >t..</text>
</g>
<g >
<title>fsnotify (1 samples, 0.11%)</title><rect x="845.2" y="293" width="1.2" height="15.0" fill="rgb(248,117,19)" rx="2" ry="2" />
<text  x="848.15" y="303.5" ></text>
</g>
<g >
<title>free_unref_page_commit (16 samples, 1.70%)</title><rect x="188.1" y="213" width="20.0" height="15.0" fill="rgb(221,31,43)" rx="2" ry="2" />
<text  x="191.07" y="223.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.11%)</title><rect x="455.2" y="341" width="1.2" height="15.0" fill="rgb(228,79,0)" rx="2" ry="2" />
<text  x="458.16" y="351.5" ></text>
</g>
<g >
<title>psi_task_change (7 samples, 0.74%)</title><rect x="144.2" y="133" width="8.8" height="15.0" fill="rgb(208,92,20)" rx="2" ry="2" />
<text  x="147.18" y="143.5" ></text>
</g>
<g >
<title>copy_page_from_iter_iovec (37 samples, 3.93%)</title><rect x="1059.6" y="245" width="46.4" height="15.0" fill="rgb(252,177,10)" rx="2" ry="2" />
<text  x="1062.59" y="255.5" >copy..</text>
</g>
<g >
<title>x86_64_start_reservations (72 samples, 7.65%)</title><rect x="742.3" y="421" width="90.3" height="15.0" fill="rgb(216,85,0)" rx="2" ry="2" />
<text  x="745.33" y="431.5" >x86_64_sta..</text>
</g>
<g >
<title>dequeue_task_fair (7 samples, 0.74%)</title><rect x="1169.9" y="213" width="8.8" height="15.0" fill="rgb(249,219,40)" rx="2" ry="2" />
<text  x="1172.94" y="223.5" ></text>
</g>
<g >
<title>alloc_pages_current (137 samples, 14.56%)</title><rect x="886.5" y="261" width="171.8" height="15.0" fill="rgb(220,105,39)" rx="2" ry="2" />
<text  x="889.54" y="271.5" >alloc_pages_current</text>
</g>
<g >
<title>__libc_start_main (287 samples, 30.50%)</title><rect x="97.8" y="437" width="359.9" height="15.0" fill="rgb(211,19,41)" rx="2" ry="2" />
<text  x="100.78" y="447.5" >__libc_start_main</text>
</g>
<g >
<title>record_times (1 samples, 0.11%)</title><rect x="871.5" y="101" width="1.2" height="15.0" fill="rgb(254,216,14)" rx="2" ry="2" />
<text  x="874.49" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (64 samples, 6.80%)</title><rect x="15.0" y="341" width="80.3" height="15.0" fill="rgb(244,102,19)" rx="2" ry="2" />
<text  x="18.02" y="351.5" >do_syscal..</text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.11%)</title><rect x="800.0" y="309" width="1.3" height="15.0" fill="rgb(224,9,6)" rx="2" ry="2" />
<text  x="803.01" y="319.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.11%)</title><rect x="1188.7" y="325" width="1.3" height="15.0" fill="rgb(234,229,14)" rx="2" ry="2" />
<text  x="1191.75" y="335.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.11%)</title><rect x="455.2" y="309" width="1.2" height="15.0" fill="rgb(217,200,9)" rx="2" ry="2" />
<text  x="458.16" y="319.5" ></text>
</g>
<g >
<title>ioctl (64 samples, 6.80%)</title><rect x="15.0" y="373" width="80.3" height="15.0" fill="rgb(242,60,37)" rx="2" ry="2" />
<text  x="18.02" y="383.5" >ioctl</text>
</g>
<g >
<title>record_times (1 samples, 0.11%)</title><rect x="151.7" y="101" width="1.3" height="15.0" fill="rgb(214,100,36)" rx="2" ry="2" />
<text  x="154.70" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_close (1 samples, 0.11%)</title><rect x="11.3" y="213" width="1.2" height="15.0" fill="rgb(205,2,51)" rx="2" ry="2" />
<text  x="14.25" y="223.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (132 samples, 14.03%)</title><rect x="890.3" y="245" width="165.5" height="15.0" fill="rgb(251,51,33)" rx="2" ry="2" />
<text  x="893.30" y="255.5" >__alloc_pages_nodemask</text>
</g>
<g >
<title>__schedule (16 samples, 1.70%)</title><rect x="432.6" y="245" width="20.1" height="15.0" fill="rgb(205,103,28)" rx="2" ry="2" />
<text  x="435.59" y="255.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (15 samples, 1.59%)</title><rect x="1035.8" y="197" width="18.8" height="15.0" fill="rgb(231,35,0)" rx="2" ry="2" />
<text  x="1038.76" y="207.5" ></text>
</g>
<g >
<title>copy_word_list (1 samples, 0.11%)</title><rect x="10.0" y="277" width="1.3" height="15.0" fill="rgb(240,227,36)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.11%)</title><rect x="1188.7" y="341" width="1.3" height="15.0" fill="rgb(206,161,31)" rx="2" ry="2" />
<text  x="1191.75" y="351.5" ></text>
</g>
<g >
<title>cpuidle_select (15 samples, 1.59%)</title><rect x="647.0" y="373" width="18.8" height="15.0" fill="rgb(226,86,1)" rx="2" ry="2" />
<text  x="650.02" y="383.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.21%)</title><rect x="448.9" y="229" width="2.5" height="15.0" fill="rgb(219,215,4)" rx="2" ry="2" />
<text  x="451.89" y="239.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.11%)</title><rect x="436.4" y="181" width="1.2" height="15.0" fill="rgb(250,55,12)" rx="2" ry="2" />
<text  x="439.35" y="191.5" ></text>
</g>
<g >
<title>dequeue_task_fair (5 samples, 0.53%)</title><rect x="436.4" y="213" width="6.2" height="15.0" fill="rgb(227,1,13)" rx="2" ry="2" />
<text  x="439.35" y="223.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (2 samples, 0.21%)</title><rect x="457.7" y="325" width="2.5" height="15.0" fill="rgb(220,86,12)" rx="2" ry="2" />
<text  x="460.67" y="335.5" ></text>
</g>
<g >
<title>mutex_lock (41 samples, 4.36%)</title><rect x="381.2" y="261" width="51.4" height="15.0" fill="rgb(210,24,15)" rx="2" ry="2" />
<text  x="384.18" y="271.5" >mutex..</text>
</g>
<g >
<title>copy_page_to_iter (87 samples, 9.25%)</title><rect x="272.1" y="261" width="109.1" height="15.0" fill="rgb(231,134,20)" rx="2" ry="2" />
<text  x="275.08" y="271.5" >copy_page_to_..</text>
</g>
<g >
<title>vfs_write (1 samples, 0.11%)</title><rect x="96.5" y="245" width="1.3" height="15.0" fill="rgb(241,193,52)" rx="2" ry="2" />
<text  x="99.52" y="255.5" ></text>
</g>
<g >
<title>vfs_read (282 samples, 29.97%)</title><rect x="101.5" y="309" width="353.7" height="15.0" fill="rgb(230,138,25)" rx="2" ry="2" />
<text  x="104.54" y="319.5" >vfs_read</text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 0.11%)</title><rect x="1185.0" y="229" width="1.2" height="15.0" fill="rgb(251,147,2)" rx="2" ry="2" />
<text  x="1187.98" y="239.5" ></text>
</g>
<g >
<title>dequeue_task (13 samples, 1.38%)</title><rect x="1168.7" y="229" width="16.3" height="15.0" fill="rgb(225,16,53)" rx="2" ry="2" />
<text  x="1171.68" y="239.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.11%)</title><rect x="12.5" y="405" width="1.3" height="15.0" fill="rgb(236,89,45)" rx="2" ry="2" />
<text  x="15.51" y="415.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.11%)</title><rect x="741.1" y="421" width="1.2" height="15.0" fill="rgb(232,153,10)" rx="2" ry="2" />
<text  x="744.07" y="431.5" ></text>
</g>
<g >
<title>make_child (1 samples, 0.11%)</title><rect x="11.3" y="293" width="1.2" height="15.0" fill="rgb(246,197,29)" rx="2" ry="2" />
<text  x="14.25" y="303.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.11%)</title><rect x="840.1" y="309" width="1.3" height="15.0" fill="rgb(235,204,42)" rx="2" ry="2" />
<text  x="843.14" y="319.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 6.80%)</title><rect x="15.0" y="277" width="80.3" height="15.0" fill="rgb(237,52,7)" rx="2" ry="2" />
<text  x="18.02" y="287.5" >perf_even..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.11%)</title><rect x="456.4" y="357" width="1.3" height="15.0" fill="rgb(238,129,35)" rx="2" ry="2" />
<text  x="459.42" y="367.5" ></text>
</g>
<g >
<title>prepare_to_wait_event (1 samples, 0.11%)</title><rect x="1163.7" y="261" width="1.2" height="15.0" fill="rgb(246,204,45)" rx="2" ry="2" />
<text  x="1166.67" y="271.5" ></text>
</g>
<g >
<title>rest_init (72 samples, 7.65%)</title><rect x="742.3" y="373" width="90.3" height="15.0" fill="rgb(249,133,7)" rx="2" ry="2" />
<text  x="745.33" y="383.5" >rest_init</text>
</g>
<g >
<title>arch_cpu_idle_enter (1 samples, 0.11%)</title><rect x="742.3" y="325" width="1.3" height="15.0" fill="rgb(223,19,34)" rx="2" ry="2" />
<text  x="745.33" y="335.5" ></text>
</g>
<g >
<title>rcu_needs_cpu (1 samples, 0.11%)</title><rect x="658.3" y="325" width="1.3" height="15.0" fill="rgb(208,153,49)" rx="2" ry="2" />
<text  x="661.31" y="335.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (64 samples, 6.80%)</title><rect x="15.0" y="389" width="80.3" height="15.0" fill="rgb(225,4,35)" rx="2" ry="2" />
<text  x="18.02" y="399.5" >perf_evse..</text>
</g>
<g >
<title>update_load_avg (1 samples, 0.11%)</title><rect x="440.1" y="181" width="1.3" height="15.0" fill="rgb(221,182,35)" rx="2" ry="2" />
<text  x="443.12" y="191.5" ></text>
</g>
<g >
<title>enqueue_task (14 samples, 1.49%)</title><rect x="135.4" y="149" width="17.6" height="15.0" fill="rgb(216,167,2)" rx="2" ry="2" />
<text  x="138.40" y="159.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.21%)</title><rect x="816.3" y="213" width="2.5" height="15.0" fill="rgb(237,89,42)" rx="2" ry="2" />
<text  x="819.31" y="223.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (46 samples, 4.89%)</title><rect x="743.6" y="325" width="57.7" height="15.0" fill="rgb(228,146,29)" rx="2" ry="2" />
<text  x="746.58" y="335.5" >cpuidl..</text>
</g>
<g >
<title>read_tsc (2 samples, 0.21%)</title><rect x="731.0" y="373" width="2.5" height="15.0" fill="rgb(215,220,32)" rx="2" ry="2" />
<text  x="734.04" y="383.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.11%)</title><rect x="440.1" y="165" width="1.3" height="15.0" fill="rgb(231,15,0)" rx="2" ry="2" />
<text  x="443.12" y="175.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.11%)</title><rect x="96.5" y="181" width="1.3" height="15.0" fill="rgb(253,132,51)" rx="2" ry="2" />
<text  x="99.52" y="191.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.11%)</title><rect x="96.5" y="341" width="1.3" height="15.0" fill="rgb(241,36,37)" rx="2" ry="2" />
<text  x="99.52" y="351.5" ></text>
</g>
<g >
<title>pick_next_task_fair (12 samples, 1.28%)</title><rect x="810.0" y="293" width="15.1" height="15.0" fill="rgb(217,179,23)" rx="2" ry="2" />
<text  x="813.04" y="303.5" ></text>
</g>
<g >
<title>record__mmap_read_all (2 samples, 0.21%)</title><rect x="95.3" y="421" width="2.5" height="15.0" fill="rgb(223,134,30)" rx="2" ry="2" />
<text  x="98.27" y="431.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (2 samples, 0.21%)</title><rect x="655.8" y="325" width="2.5" height="15.0" fill="rgb(239,0,16)" rx="2" ry="2" />
<text  x="658.80" y="335.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.11%)</title><rect x="96.5" y="69" width="1.3" height="15.0" fill="rgb(246,7,25)" rx="2" ry="2" />
<text  x="99.52" y="79.5" ></text>
</g>
<g >
<title>newidle_balance (2 samples, 0.21%)</title><rect x="448.9" y="213" width="2.5" height="15.0" fill="rgb(223,69,50)" rx="2" ry="2" />
<text  x="451.89" y="223.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="828.9" y="293" width="1.2" height="15.0" fill="rgb(244,109,38)" rx="2" ry="2" />
<text  x="831.85" y="303.5" ></text>
</g>
<g >
<title>enqueue_task_fair (10 samples, 1.06%)</title><rect x="856.4" y="133" width="12.6" height="15.0" fill="rgb(254,221,31)" rx="2" ry="2" />
<text  x="859.44" y="143.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (88 samples, 9.35%)</title><rect x="497.8" y="341" width="110.4" height="15.0" fill="rgb(241,46,0)" rx="2" ry="2" />
<text  x="500.80" y="351.5" >mwait_idle_wi..</text>
</g>
<g >
<title>perf_mmap__consume (1 samples, 0.11%)</title><rect x="95.3" y="373" width="1.2" height="15.0" fill="rgb(207,85,46)" rx="2" ry="2" />
<text  x="98.27" y="383.5" ></text>
</g>
<g >
<title>unset_bash_input (1 samples, 0.11%)</title><rect x="11.3" y="277" width="1.2" height="15.0" fill="rgb(211,27,17)" rx="2" ry="2" />
<text  x="14.25" y="287.5" ></text>
</g>
<g >
<title>clear_buddies (1 samples, 0.11%)</title><rect x="682.1" y="341" width="1.3" height="15.0" fill="rgb(235,226,11)" rx="2" ry="2" />
<text  x="685.14" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.11%)</title><rect x="96.5" y="277" width="1.3" height="15.0" fill="rgb(235,71,15)" rx="2" ry="2" />
<text  x="99.52" y="287.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.11%)</title><rect x="13.8" y="469" width="1.2" height="15.0" fill="rgb(217,182,54)" rx="2" ry="2" />
<text  x="16.76" y="479.5" ></text>
</g>
<g >
<title>enqueue_task (13 samples, 1.38%)</title><rect x="856.4" y="149" width="16.3" height="15.0" fill="rgb(210,105,54)" rx="2" ry="2" />
<text  x="859.44" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="797.5" y="213" width="1.3" height="15.0" fill="rgb(210,145,10)" rx="2" ry="2" />
<text  x="800.50" y="223.5" ></text>
</g>
<g >
<title>bprm_execve (1 samples, 0.11%)</title><rect x="13.8" y="309" width="1.2" height="15.0" fill="rgb(224,10,30)" rx="2" ry="2" />
<text  x="16.76" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (284 samples, 30.18%)</title><rect x="100.3" y="357" width="356.1" height="15.0" fill="rgb(229,26,16)" rx="2" ry="2" />
<text  x="103.29" y="367.5" >do_syscall_64</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="13.8" y="373" width="1.2" height="15.0" fill="rgb(232,182,30)" rx="2" ry="2" />
<text  x="16.76" y="383.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.11%)</title><rect x="455.2" y="245" width="1.2" height="15.0" fill="rgb(205,67,51)" rx="2" ry="2" />
<text  x="458.16" y="255.5" ></text>
</g>
<g >
<title>page_counter_try_charge (5 samples, 0.53%)</title><rect x="961.8" y="181" width="6.2" height="15.0" fill="rgb(223,113,2)" rx="2" ry="2" />
<text  x="964.77" y="191.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.11%)</title><rect x="867.7" y="117" width="1.3" height="15.0" fill="rgb(222,7,53)" rx="2" ry="2" />
<text  x="870.73" y="127.5" ></text>
</g>
<g >
<title>schedule_idle (15 samples, 1.59%)</title><rect x="808.8" y="325" width="18.8" height="15.0" fill="rgb(222,229,30)" rx="2" ry="2" />
<text  x="811.79" y="335.5" ></text>
</g>
<g >
<title>update_cfs_group (2 samples, 0.21%)</title><rect x="862.7" y="101" width="2.5" height="15.0" fill="rgb(228,159,26)" rx="2" ry="2" />
<text  x="865.71" y="111.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.11%)</title><rect x="96.5" y="149" width="1.3" height="15.0" fill="rgb(219,31,47)" rx="2" ry="2" />
<text  x="99.52" y="159.5" ></text>
</g>
<g >
<title>pick_next_entity (2 samples, 0.21%)</title><rect x="699.7" y="341" width="2.5" height="15.0" fill="rgb(223,71,13)" rx="2" ry="2" />
<text  x="702.69" y="351.5" ></text>
</g>
<g >
<title>execute_command (2 samples, 0.21%)</title><rect x="10.0" y="373" width="2.5" height="15.0" fill="rgb(219,61,42)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.11%)</title><rect x="96.5" y="229" width="1.3" height="15.0" fill="rgb(210,32,27)" rx="2" ry="2" />
<text  x="99.52" y="239.5" ></text>
</g>
<g >
<title>dnotify_flush (1 samples, 0.11%)</title><rect x="11.3" y="181" width="1.2" height="15.0" fill="rgb(223,178,18)" rx="2" ry="2" />
<text  x="14.25" y="191.5" ></text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.11%)</title><rect x="153.0" y="133" width="1.2" height="15.0" fill="rgb(224,129,53)" rx="2" ry="2" />
<text  x="155.95" y="143.5" ></text>
</g>
<g >
<title>psi_task_change (4 samples, 0.43%)</title><rect x="442.6" y="213" width="5.0" height="15.0" fill="rgb(222,219,34)" rx="2" ry="2" />
<text  x="445.62" y="223.5" ></text>
</g>
<g >
<title>apparmor_bprm_creds_for_exec (1 samples, 0.11%)</title><rect x="13.8" y="261" width="1.2" height="15.0" fill="rgb(245,166,13)" rx="2" ry="2" />
<text  x="16.76" y="271.5" ></text>
</g>
<g >
<title>resched_curr (1 samples, 0.11%)</title><rect x="153.0" y="117" width="1.2" height="15.0" fill="rgb(235,50,54)" rx="2" ry="2" />
<text  x="155.95" y="127.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (1 samples, 0.11%)</title><rect x="835.1" y="373" width="1.3" height="15.0" fill="rgb(233,51,15)" rx="2" ry="2" />
<text  x="838.12" y="383.5" ></text>
</g>
<g >
<title>check_preempt_curr (2 samples, 0.21%)</title><rect x="872.7" y="133" width="2.5" height="15.0" fill="rgb(206,59,15)" rx="2" ry="2" />
<text  x="875.74" y="143.5" ></text>
</g>
<g >
<title>pm_qos_read_value (1 samples, 0.11%)</title><rect x="791.2" y="277" width="1.3" height="15.0" fill="rgb(248,76,25)" rx="2" ry="2" />
<text  x="794.23" y="287.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.11%)</title><rect x="1106.0" y="245" width="1.2" height="15.0" fill="rgb(236,112,34)" rx="2" ry="2" />
<text  x="1108.98" y="255.5" ></text>
</g>
<g >
<title>get_page_from_freelist (65 samples, 6.91%)</title><rect x="973.1" y="229" width="81.5" height="15.0" fill="rgb(220,86,12)" rx="2" ry="2" />
<text  x="976.06" y="239.5" >get_page_..</text>
</g>
<g >
<title>_raw_spin_lock_irq (7 samples, 0.74%)</title><rect x="156.7" y="261" width="8.8" height="15.0" fill="rgb(227,141,7)" rx="2" ry="2" />
<text  x="159.72" y="271.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (80 samples, 8.50%)</title><rect x="275.8" y="229" width="100.4" height="15.0" fill="rgb(246,115,31)" rx="2" ry="2" />
<text  x="278.84" y="239.5" >copy_user_en..</text>
</g>
<g >
<title>pick_next_task_fair (29 samples, 3.08%)</title><rect x="680.9" y="357" width="36.3" height="15.0" fill="rgb(231,36,20)" rx="2" ry="2" />
<text  x="683.88" y="367.5" >pic..</text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.11%)</title><rect x="645.8" y="373" width="1.2" height="15.0" fill="rgb(216,186,36)" rx="2" ry="2" />
<text  x="648.77" y="383.5" ></text>
</g>
<g >
<title>psi_group_change (2 samples, 0.21%)</title><rect x="445.1" y="197" width="2.5" height="15.0" fill="rgb(243,48,48)" rx="2" ry="2" />
<text  x="448.13" y="207.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.11%)</title><rect x="12.5" y="373" width="1.3" height="15.0" fill="rgb(247,221,48)" rx="2" ry="2" />
<text  x="15.51" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="96.5" y="309" width="1.3" height="15.0" fill="rgb(251,17,15)" rx="2" ry="2" />
<text  x="99.52" y="319.5" ></text>
</g>
<g >
<title>new_sync_read (281 samples, 29.86%)</title><rect x="102.8" y="293" width="352.4" height="15.0" fill="rgb(211,113,15)" rx="2" ry="2" />
<text  x="105.79" y="303.5" >new_sync_read</text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.11%)</title><rect x="644.5" y="325" width="1.3" height="15.0" fill="rgb(222,212,35)" rx="2" ry="2" />
<text  x="647.52" y="335.5" ></text>
</g>
<g >
<title>all (941 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(246,64,14)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>rmqueue (16 samples, 1.70%)</title><rect x="1034.5" y="213" width="20.1" height="15.0" fill="rgb(236,127,20)" rx="2" ry="2" />
<text  x="1037.51" y="223.5" ></text>
</g>
<g >
<title>dequeue_entity (6 samples, 0.64%)</title><rect x="1169.9" y="197" width="7.6" height="15.0" fill="rgb(230,87,36)" rx="2" ry="2" />
<text  x="1172.94" y="207.5" ></text>
</g>
<g >
<title>update_curr (2 samples, 0.21%)</title><rect x="437.6" y="181" width="2.5" height="15.0" fill="rgb(209,130,31)" rx="2" ry="2" />
<text  x="440.61" y="191.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.11%)</title><rect x="458.9" y="309" width="1.3" height="15.0" fill="rgb(235,196,35)" rx="2" ry="2" />
<text  x="461.93" y="319.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.11%)</title><rect x="96.5" y="165" width="1.3" height="15.0" fill="rgb(208,175,38)" rx="2" ry="2" />
<text  x="99.52" y="175.5" ></text>
</g>
<g >
<title>__mutex_lock_slowpath (45 samples, 4.78%)</title><rect x="1107.2" y="245" width="56.5" height="15.0" fill="rgb(207,72,39)" rx="2" ry="2" />
<text  x="1110.24" y="255.5" >__mut..</text>
</g>
<g >
<title>copy_page_to_iter_iovec (85 samples, 9.03%)</title><rect x="273.3" y="245" width="106.6" height="15.0" fill="rgb(215,83,27)" rx="2" ry="2" />
<text  x="276.34" y="255.5" >copy_page_to_..</text>
</g>
<g >
<title>pipe_read (266 samples, 28.27%)</title><rect x="120.4" y="277" width="333.5" height="15.0" fill="rgb(206,124,6)" rx="2" ry="2" />
<text  x="123.35" y="287.5" >pipe_read</text>
</g>
<g >
<title>propagate_protected_usage (3 samples, 0.32%)</title><rect x="264.6" y="197" width="3.7" height="15.0" fill="rgb(227,133,2)" rx="2" ry="2" />
<text  x="267.56" y="207.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.21%)</title><rect x="10.0" y="309" width="2.5" height="15.0" fill="rgb(213,189,28)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (2 samples, 0.21%)</title><rect x="726.0" y="357" width="2.5" height="15.0" fill="rgb(232,97,50)" rx="2" ry="2" />
<text  x="729.03" y="367.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (11 samples, 1.17%)</title><rect x="810.0" y="261" width="13.8" height="15.0" fill="rgb(216,224,13)" rx="2" ry="2" />
<text  x="813.04" y="271.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (1 samples, 0.11%)</title><rect x="737.3" y="357" width="1.3" height="15.0" fill="rgb(213,75,23)" rx="2" ry="2" />
<text  x="740.31" y="367.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.11%)</title><rect x="1188.7" y="309" width="1.3" height="15.0" fill="rgb(225,148,24)" rx="2" ry="2" />
<text  x="1191.75" y="319.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.11%)</title><rect x="452.7" y="261" width="1.2" height="15.0" fill="rgb(244,198,32)" rx="2" ry="2" />
<text  x="455.66" y="271.5" ></text>
</g>
<g >
<title>__put_page (75 samples, 7.97%)</title><rect x="178.0" y="245" width="94.1" height="15.0" fill="rgb(229,7,9)" rx="2" ry="2" />
<text  x="181.03" y="255.5" >__put_page</text>
</g>
<g >
<title>try_to_wake_up (19 samples, 2.02%)</title><rect x="855.2" y="181" width="23.8" height="15.0" fill="rgb(232,143,41)" rx="2" ry="2" />
<text  x="858.19" y="191.5" >t..</text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.11%)</title><rect x="10.0" y="245" width="1.3" height="15.0" fill="rgb(251,115,18)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>try_to_wake_up (22 samples, 2.34%)</title><rect x="129.1" y="181" width="27.6" height="15.0" fill="rgb(205,163,27)" rx="2" ry="2" />
<text  x="132.13" y="191.5" >t..</text>
</g>
<g >
<title>[bash] (2 samples, 0.21%)</title><rect x="10.0" y="325" width="2.5" height="15.0" fill="rgb(214,46,52)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>pipe_write (272 samples, 28.91%)</title><rect x="846.4" y="277" width="341.1" height="15.0" fill="rgb(216,173,19)" rx="2" ry="2" />
<text  x="849.41" y="287.5" >pipe_write</text>
</g>
<g >
<title>event_function (64 samples, 6.80%)</title><rect x="15.0" y="181" width="80.3" height="15.0" fill="rgb(230,229,26)" rx="2" ry="2" />
<text  x="18.02" y="191.5" >event_fun..</text>
</g>
<g >
<title>write (1 samples, 0.11%)</title><rect x="96.5" y="325" width="1.3" height="15.0" fill="rgb(243,185,11)" rx="2" ry="2" />
<text  x="99.52" y="335.5" ></text>
</g>
<g >
<title>generic_exec_single (4 samples, 0.43%)</title><rect x="694.7" y="277" width="5.0" height="15.0" fill="rgb(205,121,19)" rx="2" ry="2" />
<text  x="697.68" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="127.9" y="181" width="1.2" height="15.0" fill="rgb(244,29,52)" rx="2" ry="2" />
<text  x="130.87" y="191.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (21 samples, 2.23%)</title><rect x="852.7" y="261" width="26.3" height="15.0" fill="rgb(210,211,50)" rx="2" ry="2" />
<text  x="855.68" y="271.5" >_..</text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="826.3" y="277" width="1.3" height="15.0" fill="rgb(212,188,35)" rx="2" ry="2" />
<text  x="829.34" y="287.5" ></text>
</g>
<g >
<title>menu_select (15 samples, 1.59%)</title><rect x="647.0" y="357" width="18.8" height="15.0" fill="rgb(221,208,20)" rx="2" ry="2" />
<text  x="650.02" y="367.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.11%)</title><rect x="969.3" y="213" width="1.3" height="15.0" fill="rgb(239,114,24)" rx="2" ry="2" />
<text  x="972.30" y="223.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (2 samples, 0.21%)</title><rect x="970.6" y="229" width="2.5" height="15.0" fill="rgb(222,179,36)" rx="2" ry="2" />
<text  x="973.55" y="239.5" ></text>
</g>
<g >
<title>update_rq_clock (3 samples, 0.32%)</title><rect x="875.2" y="165" width="3.8" height="15.0" fill="rgb(236,44,34)" rx="2" ry="2" />
<text  x="878.25" y="175.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (2 samples, 0.21%)</title><rect x="210.6" y="213" width="2.5" height="15.0" fill="rgb(245,179,52)" rx="2" ry="2" />
<text  x="213.64" y="223.5" ></text>
</g>
<g >
<title>do_idle (200 samples, 21.25%)</title><rect x="487.8" y="405" width="250.8" height="15.0" fill="rgb(230,87,34)" rx="2" ry="2" />
<text  x="490.77" y="415.5" >do_idle</text>
</g>
<g >
<title>_perf_event_enable (64 samples, 6.80%)</title><rect x="15.0" y="261" width="80.3" height="15.0" fill="rgb(217,167,23)" rx="2" ry="2" />
<text  x="18.02" y="271.5" >_perf_eve..</text>
</g>
<g >
<title>psi_task_change (3 samples, 0.32%)</title><rect x="869.0" y="133" width="3.7" height="15.0" fill="rgb(206,131,2)" rx="2" ry="2" />
<text  x="871.98" y="143.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.11%)</title><rect x="153.0" y="149" width="1.2" height="15.0" fill="rgb(212,125,10)" rx="2" ry="2" />
<text  x="155.95" y="159.5" ></text>
</g>
<g >
<title>resched_curr (2 samples, 0.21%)</title><rect x="872.7" y="117" width="2.5" height="15.0" fill="rgb(218,172,38)" rx="2" ry="2" />
<text  x="875.74" y="127.5" ></text>
</g>
<g >
<title>__libc_start_main (285 samples, 30.29%)</title><rect x="832.6" y="437" width="357.4" height="15.0" fill="rgb(230,134,4)" rx="2" ry="2" />
<text  x="835.61" y="447.5" >__libc_start_main</text>
</g>
<g >
<title>schedule (16 samples, 1.70%)</title><rect x="432.6" y="261" width="20.1" height="15.0" fill="rgb(227,72,52)" rx="2" ry="2" />
<text  x="435.59" y="271.5" ></text>
</g>
<g >
<title>main (287 samples, 30.50%)</title><rect x="97.8" y="405" width="359.9" height="15.0" fill="rgb(231,94,45)" rx="2" ry="2" />
<text  x="100.78" y="415.5" >main</text>
</g>
<g >
<title>__schedule (16 samples, 1.70%)</title><rect x="1167.4" y="245" width="20.1" height="15.0" fill="rgb(225,1,3)" rx="2" ry="2" />
<text  x="1170.43" y="255.5" ></text>
</g>
<g >
<title>copy_page_from_iter (39 samples, 4.14%)</title><rect x="1058.3" y="261" width="48.9" height="15.0" fill="rgb(212,130,29)" rx="2" ry="2" />
<text  x="1061.33" y="271.5" >copy..</text>
</g>
<g >
<title>__mutex_lock.constprop.0 (39 samples, 4.14%)</title><rect x="383.7" y="229" width="48.9" height="15.0" fill="rgb(232,219,48)" rx="2" ry="2" />
<text  x="386.69" y="239.5" >__mu..</text>
</g>
<g >
<title>start_secondary (204 samples, 21.68%)</title><rect x="486.5" y="437" width="255.8" height="15.0" fill="rgb(221,216,41)" rx="2" ry="2" />
<text  x="489.51" y="447.5" >start_secondary</text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.11%)</title><rect x="12.5" y="309" width="1.3" height="15.0" fill="rgb(253,8,44)" rx="2" ry="2" />
<text  x="15.51" y="319.5" ></text>
</g>
<g >
<title>_perf_ioctl (64 samples, 6.80%)</title><rect x="15.0" y="293" width="80.3" height="15.0" fill="rgb(226,210,0)" rx="2" ry="2" />
<text  x="18.02" y="303.5" >_perf_ioctl</text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.11%)</title><rect x="787.5" y="277" width="1.2" height="15.0" fill="rgb(206,45,48)" rx="2" ry="2" />
<text  x="790.47" y="287.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.11%)</title><rect x="96.5" y="101" width="1.3" height="15.0" fill="rgb(225,189,0)" rx="2" ry="2" />
<text  x="99.52" y="111.5" ></text>
</g>
<g >
<title>free_unref_page (21 samples, 2.23%)</title><rect x="181.8" y="229" width="26.3" height="15.0" fill="rgb(205,110,8)" rx="2" ry="2" />
<text  x="184.80" y="239.5" >f..</text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.11%)</title><rect x="798.8" y="277" width="1.2" height="15.0" fill="rgb(224,154,43)" rx="2" ry="2" />
<text  x="801.76" y="287.5" ></text>
</g>
<g >
<title>dequeue_entity (4 samples, 0.43%)</title><rect x="436.4" y="197" width="5.0" height="15.0" fill="rgb(221,153,11)" rx="2" ry="2" />
<text  x="439.35" y="207.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (16 samples, 1.70%)</title><rect x="188.1" y="197" width="20.0" height="15.0" fill="rgb(238,225,15)" rx="2" ry="2" />
<text  x="191.07" y="207.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="1183.7" y="181" width="1.3" height="15.0" fill="rgb(223,109,18)" rx="2" ry="2" />
<text  x="1186.73" y="191.5" ></text>
</g>
<g >
<title>kick_ilb (6 samples, 0.64%)</title><rect x="692.2" y="309" width="7.5" height="15.0" fill="rgb(244,19,30)" rx="2" ry="2" />
<text  x="695.17" y="319.5" ></text>
</g>
<g >
<title>enqueue_entity (4 samples, 0.43%)</title><rect x="139.2" y="117" width="5.0" height="15.0" fill="rgb(240,189,48)" rx="2" ry="2" />
<text  x="142.16" y="127.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.11%)</title><rect x="481.5" y="453" width="1.3" height="15.0" fill="rgb(245,1,13)" rx="2" ry="2" />
<text  x="484.50" y="463.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.11%)</title><rect x="1186.2" y="213" width="1.3" height="15.0" fill="rgb(215,30,20)" rx="2" ry="2" />
<text  x="1189.24" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.11%)</title><rect x="95.3" y="261" width="1.2" height="15.0" fill="rgb(247,5,34)" rx="2" ry="2" />
<text  x="98.27" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="12.5" y="453" width="1.3" height="15.0" fill="rgb(231,161,28)" rx="2" ry="2" />
<text  x="15.51" y="463.5" ></text>
</g>
<g >
<title>new_sync_read (2 samples, 0.21%)</title><rect x="457.7" y="373" width="2.5" height="15.0" fill="rgb(211,132,18)" rx="2" ry="2" />
<text  x="460.67" y="383.5" ></text>
</g>
<g >
<title>current_time (1 samples, 0.11%)</title><rect x="452.7" y="229" width="1.2" height="15.0" fill="rgb(222,22,30)" rx="2" ry="2" />
<text  x="455.66" y="239.5" ></text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.11%)</title><rect x="1177.5" y="197" width="1.2" height="15.0" fill="rgb(254,14,4)" rx="2" ry="2" />
<text  x="1180.46" y="207.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.11%)</title><rect x="96.5" y="213" width="1.3" height="15.0" fill="rgb(209,197,18)" rx="2" ry="2" />
<text  x="99.52" y="223.5" ></text>
</g>
<g >
<title>enqueue_entity (6 samples, 0.64%)</title><rect x="860.2" y="117" width="7.5" height="15.0" fill="rgb(243,205,28)" rx="2" ry="2" />
<text  x="863.20" y="127.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.11%)</title><rect x="96.5" y="85" width="1.3" height="15.0" fill="rgb(244,204,14)" rx="2" ry="2" />
<text  x="99.52" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="11.3" y="245" width="1.2" height="15.0" fill="rgb(242,30,18)" rx="2" ry="2" />
<text  x="14.25" y="255.5" ></text>
</g>
<g >
<title>ring_buffer_write_tail (1 samples, 0.11%)</title><rect x="95.3" y="341" width="1.2" height="15.0" fill="rgb(208,135,23)" rx="2" ry="2" />
<text  x="98.27" y="351.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.11%)</title><rect x="724.8" y="325" width="1.2" height="15.0" fill="rgb(215,32,47)" rx="2" ry="2" />
<text  x="727.77" y="335.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (3 samples, 0.32%)</title><rect x="795.0" y="229" width="3.8" height="15.0" fill="rgb(221,195,2)" rx="2" ry="2" />
<text  x="797.99" y="239.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (3 samples, 0.32%)</title><rect x="688.4" y="309" width="3.8" height="15.0" fill="rgb(250,114,21)" rx="2" ry="2" />
<text  x="691.41" y="319.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (21 samples, 2.23%)</title><rect x="852.7" y="245" width="26.3" height="15.0" fill="rgb(248,2,7)" rx="2" ry="2" />
<text  x="855.68" y="255.5" >_..</text>
</g>
<g >
<title>policy_nodemask (1 samples, 0.11%)</title><rect x="1057.1" y="245" width="1.2" height="15.0" fill="rgb(239,8,44)" rx="2" ry="2" />
<text  x="1060.08" y="255.5" ></text>
</g>
<g >
<title>prepare_task_switch (5 samples, 0.53%)</title><rect x="717.2" y="357" width="6.3" height="15.0" fill="rgb(238,78,36)" rx="2" ry="2" />
<text  x="720.25" y="367.5" ></text>
</g>
<g >
<title>__cmd_record (66 samples, 7.01%)</title><rect x="15.0" y="437" width="82.8" height="15.0" fill="rgb(209,103,34)" rx="2" ry="2" />
<text  x="18.02" y="447.5" >__cmd_rec..</text>
</g>
<g >
<title>flush_smp_call_function_from_idle (4 samples, 0.43%)</title><rect x="803.8" y="325" width="5.0" height="15.0" fill="rgb(216,179,2)" rx="2" ry="2" />
<text  x="806.77" y="335.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (1 samples, 0.11%)</title><rect x="13.8" y="293" width="1.2" height="15.0" fill="rgb(217,64,38)" rx="2" ry="2" />
<text  x="16.76" y="303.5" ></text>
</g>
<g >
<title>propagate_protected_usage (5 samples, 0.53%)</title><rect x="935.4" y="181" width="6.3" height="15.0" fill="rgb(213,24,45)" rx="2" ry="2" />
<text  x="938.44" y="191.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (34 samples, 3.61%)</title><rect x="747.3" y="293" width="42.7" height="15.0" fill="rgb(230,13,46)" rx="2" ry="2" />
<text  x="750.34" y="303.5" >cpui..</text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.11%)</title><rect x="451.4" y="229" width="1.3" height="15.0" fill="rgb(252,139,34)" rx="2" ry="2" />
<text  x="454.40" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (64 samples, 6.80%)</title><rect x="15.0" y="325" width="80.3" height="15.0" fill="rgb(223,173,53)" rx="2" ry="2" />
<text  x="18.02" y="335.5" >__x64_sys..</text>
</g>
<g >
<title>__rseq_handle_notify_resume (1 samples, 0.11%)</title><rect x="455.2" y="293" width="1.2" height="15.0" fill="rgb(240,155,2)" rx="2" ry="2" />
<text  x="458.16" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="96.5" y="37" width="1.3" height="15.0" fill="rgb(238,118,24)" rx="2" ry="2" />
<text  x="99.52" y="47.5" ></text>
</g>
<g >
<title>propagate_protected_usage (2 samples, 0.21%)</title><rect x="262.1" y="181" width="2.5" height="15.0" fill="rgb(253,139,26)" rx="2" ry="2" />
<text  x="265.05" y="191.5" ></text>
</g>
<g >
<title>available_idle_cpu (1 samples, 0.11%)</title><rect x="134.1" y="149" width="1.3" height="15.0" fill="rgb(207,84,0)" rx="2" ry="2" />
<text  x="137.14" y="159.5" ></text>
</g>
<g >
<title>do_idle (72 samples, 7.65%)</title><rect x="742.3" y="341" width="90.3" height="15.0" fill="rgb(231,214,5)" rx="2" ry="2" />
<text  x="745.33" y="351.5" >do_idle</text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="733.5" y="357" width="1.3" height="15.0" fill="rgb(247,137,16)" rx="2" ry="2" />
<text  x="736.55" y="367.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.11%)</title><rect x="812.6" y="229" width="1.2" height="15.0" fill="rgb(212,219,39)" rx="2" ry="2" />
<text  x="815.55" y="239.5" ></text>
</g>
<g >
<title>write (284 samples, 30.18%)</title><rect x="833.9" y="389" width="356.1" height="15.0" fill="rgb(210,77,36)" rx="2" ry="2" />
<text  x="836.87" y="399.5" >write</text>
</g>
<g >
<title>copyout (1 samples, 0.11%)</title><rect x="379.9" y="245" width="1.3" height="15.0" fill="rgb(232,132,11)" rx="2" ry="2" />
<text  x="382.93" y="255.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (4 samples, 0.43%)</title><rect x="659.6" y="325" width="5.0" height="15.0" fill="rgb(214,216,2)" rx="2" ry="2" />
<text  x="662.56" y="335.5" ></text>
</g>
<g >
<title>psi_task_switch (2 samples, 0.21%)</title><rect x="723.5" y="357" width="2.5" height="15.0" fill="rgb(208,215,39)" rx="2" ry="2" />
<text  x="726.52" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="12.5" y="437" width="1.3" height="15.0" fill="rgb(242,142,35)" rx="2" ry="2" />
<text  x="15.51" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.21%)</title><rect x="457.7" y="437" width="2.5" height="15.0" fill="rgb(221,193,41)" rx="2" ry="2" />
<text  x="460.67" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="131.6" y="165" width="1.3" height="15.0" fill="rgb(240,126,8)" rx="2" ry="2" />
<text  x="134.64" y="175.5" ></text>
</g>
<g >
<title>__close (1 samples, 0.11%)</title><rect x="11.3" y="261" width="1.2" height="15.0" fill="rgb(231,62,8)" rx="2" ry="2" />
<text  x="14.25" y="271.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.11%)</title><rect x="828.9" y="309" width="1.2" height="15.0" fill="rgb(242,176,23)" rx="2" ry="2" />
<text  x="831.85" y="319.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.11%)</title><rect x="378.7" y="229" width="1.2" height="15.0" fill="rgb(206,48,24)" rx="2" ry="2" />
<text  x="381.67" y="239.5" ></text>
</g>
<g >
<title>psi_task_change (5 samples, 0.53%)</title><rect x="1178.7" y="213" width="6.3" height="15.0" fill="rgb(222,57,17)" rx="2" ry="2" />
<text  x="1181.71" y="223.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (56 samples, 5.95%)</title><rect x="899.1" y="213" width="70.2" height="15.0" fill="rgb(240,73,9)" rx="2" ry="2" />
<text  x="902.08" y="223.5" >__memcg..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.11%)</title><rect x="455.2" y="325" width="1.2" height="15.0" fill="rgb(246,107,40)" rx="2" ry="2" />
<text  x="458.16" y="335.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.11%)</title><rect x="815.1" y="213" width="1.2" height="15.0" fill="rgb(220,47,44)" rx="2" ry="2" />
<text  x="818.06" y="223.5" ></text>
</g>
<g >
<title>perf_mmap__push (2 samples, 0.21%)</title><rect x="95.3" y="389" width="2.5" height="15.0" fill="rgb(215,48,22)" rx="2" ry="2" />
<text  x="98.27" y="399.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.11%)</title><rect x="95.3" y="309" width="1.2" height="15.0" fill="rgb(227,164,37)" rx="2" ry="2" />
<text  x="98.27" y="319.5" ></text>
</g>
<g >
<title>cpuidle_enter (34 samples, 3.61%)</title><rect x="747.3" y="309" width="42.7" height="15.0" fill="rgb(244,52,31)" rx="2" ry="2" />
<text  x="750.34" y="319.5" >cpui..</text>
</g>
<g >
<title>x86_64_start_kernel (72 samples, 7.65%)</title><rect x="742.3" y="437" width="90.3" height="15.0" fill="rgb(228,92,43)" rx="2" ry="2" />
<text  x="745.33" y="447.5" >x86_64_sta..</text>
</g>
<g >
<title>copyout (2 samples, 0.21%)</title><rect x="376.2" y="229" width="2.5" height="15.0" fill="rgb(223,130,42)" rx="2" ry="2" />
<text  x="379.16" y="239.5" ></text>
</g>
<g >
<title>policy_node (1 samples, 0.11%)</title><rect x="1055.8" y="245" width="1.3" height="15.0" fill="rgb(238,134,0)" rx="2" ry="2" />
<text  x="1058.82" y="255.5" ></text>
</g>
<g >
<title>cpu_startup_entry (203 samples, 21.57%)</title><rect x="486.5" y="421" width="254.6" height="15.0" fill="rgb(207,140,17)" rx="2" ry="2" />
<text  x="489.51" y="431.5" >cpu_startup_entry</text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.11%)</title><rect x="96.5" y="53" width="1.3" height="15.0" fill="rgb(217,80,12)" rx="2" ry="2" />
<text  x="99.52" y="63.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="877.8" y="149" width="1.2" height="15.0" fill="rgb(230,112,12)" rx="2" ry="2" />
<text  x="880.76" y="159.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.11%)</title><rect x="877.8" y="133" width="1.2" height="15.0" fill="rgb(250,162,25)" rx="2" ry="2" />
<text  x="880.76" y="143.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.11%)</title><rect x="724.8" y="293" width="1.2" height="15.0" fill="rgb(247,24,0)" rx="2" ry="2" />
<text  x="727.77" y="303.5" ></text>
</g>
<g >
<title>rcu_idle_exit (5 samples, 0.53%)</title><rect x="639.5" y="341" width="6.3" height="15.0" fill="rgb(208,20,7)" rx="2" ry="2" />
<text  x="642.50" y="351.5" ></text>
</g>
<g >
<title>anon_pipe_buf_release (13 samples, 1.38%)</title><rect x="102.8" y="277" width="16.3" height="15.0" fill="rgb(246,4,34)" rx="2" ry="2" />
<text  x="105.79" y="287.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (1 samples, 0.11%)</title><rect x="833.9" y="373" width="1.2" height="15.0" fill="rgb(209,97,15)" rx="2" ry="2" />
<text  x="836.87" y="383.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.11%)</title><rect x="827.6" y="309" width="1.3" height="15.0" fill="rgb(241,151,50)" rx="2" ry="2" />
<text  x="830.60" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_idle_got_tick (1 samples, 0.11%)</title><rect x="645.8" y="357" width="1.2" height="15.0" fill="rgb(222,183,5)" rx="2" ry="2" />
<text  x="648.77" y="367.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.11%)</title><rect x="742.3" y="309" width="1.3" height="15.0" fill="rgb(231,184,21)" rx="2" ry="2" />
<text  x="745.33" y="319.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.11%)</title><rect x="815.1" y="229" width="1.2" height="15.0" fill="rgb(244,107,2)" rx="2" ry="2" />
<text  x="818.06" y="239.5" ></text>
</g>
<g >
<title>page_counter_try_charge (31 samples, 3.29%)</title><rect x="902.8" y="197" width="38.9" height="15.0" fill="rgb(206,65,6)" rx="2" ry="2" />
<text  x="905.84" y="207.5" >pag..</text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.21%)</title><rect x="154.2" y="165" width="2.5" height="15.0" fill="rgb(236,78,33)" rx="2" ry="2" />
<text  x="157.21" y="175.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (2 samples, 0.21%)</title><rect x="816.3" y="197" width="2.5" height="15.0" fill="rgb(221,154,38)" rx="2" ry="2" />
<text  x="819.31" y="207.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.21%)</title><rect x="457.7" y="389" width="2.5" height="15.0" fill="rgb(245,58,42)" rx="2" ry="2" />
<text  x="460.67" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="683.4" y="325" width="1.2" height="15.0" fill="rgb(249,80,17)" rx="2" ry="2" />
<text  x="686.39" y="335.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (10 samples, 1.06%)</title><rect x="1042.0" y="181" width="12.6" height="15.0" fill="rgb(234,80,39)" rx="2" ry="2" />
<text  x="1045.03" y="191.5" ></text>
</g>
<g >
<title>reweight_entity (1 samples, 0.11%)</title><rect x="436.4" y="165" width="1.2" height="15.0" fill="rgb(231,158,23)" rx="2" ry="2" />
<text  x="439.35" y="175.5" ></text>
</g>
<g >
<title>atime_needs_update (1 samples, 0.11%)</title><rect x="452.7" y="245" width="1.2" height="15.0" fill="rgb(250,197,36)" rx="2" ry="2" />
<text  x="455.66" y="255.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.21%)</title><rect x="795.0" y="213" width="2.5" height="15.0" fill="rgb(245,114,48)" rx="2" ry="2" />
<text  x="797.99" y="223.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (4 samples, 0.43%)</title><rect x="793.7" y="245" width="5.1" height="15.0" fill="rgb(235,134,54)" rx="2" ry="2" />
<text  x="796.74" y="255.5" ></text>
</g>
<g >
<title>cpuidle_select (8 samples, 0.85%)</title><rect x="790.0" y="309" width="10.0" height="15.0" fill="rgb(252,118,25)" rx="2" ry="2" />
<text  x="792.98" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (6 samples, 0.64%)</title><rect x="879.0" y="261" width="7.5" height="15.0" fill="rgb(211,208,47)" rx="2" ry="2" />
<text  x="882.01" y="271.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.11%)</title><rect x="453.9" y="277" width="1.3" height="15.0" fill="rgb(254,55,31)" rx="2" ry="2" />
<text  x="456.91" y="287.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (12 samples, 1.28%)</title><rect x="684.6" y="325" width="15.1" height="15.0" fill="rgb(226,53,18)" rx="2" ry="2" />
<text  x="687.64" y="335.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.11%)</title><rect x="1187.5" y="341" width="1.2" height="15.0" fill="rgb(209,171,33)" rx="2" ry="2" />
<text  x="1190.49" y="351.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (64 samples, 6.80%)</title><rect x="15.0" y="405" width="80.3" height="15.0" fill="rgb(233,6,11)" rx="2" ry="2" />
<text  x="18.02" y="415.5" >perf_evse..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.21%)</title><rect x="655.8" y="309" width="2.5" height="15.0" fill="rgb(218,10,2)" rx="2" ry="2" />
<text  x="658.80" y="319.5" ></text>
</g>
<g >
<title>execve (1 samples, 0.11%)</title><rect x="13.8" y="389" width="1.2" height="15.0" fill="rgb(231,193,18)" rx="2" ry="2" />
<text  x="16.76" y="399.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (2 samples, 0.21%)</title><rect x="662.1" y="293" width="2.5" height="15.0" fill="rgb(231,220,31)" rx="2" ry="2" />
<text  x="665.07" y="303.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.11%)</title><rect x="788.7" y="261" width="1.3" height="15.0" fill="rgb(231,44,20)" rx="2" ry="2" />
<text  x="791.72" y="271.5" ></text>
</g>
<g >
<title>record_times (3 samples, 0.32%)</title><rect x="1180.0" y="181" width="3.7" height="15.0" fill="rgb(236,60,12)" rx="2" ry="2" />
<text  x="1182.97" y="191.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.11%)</title><rect x="866.5" y="101" width="1.2" height="15.0" fill="rgb(224,202,17)" rx="2" ry="2" />
<text  x="869.47" y="111.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (4 samples, 0.43%)</title><rect x="694.7" y="293" width="5.0" height="15.0" fill="rgb(232,81,34)" rx="2" ry="2" />
<text  x="697.68" y="303.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="151.7" y="85" width="1.3" height="15.0" fill="rgb(229,74,23)" rx="2" ry="2" />
<text  x="154.70" y="95.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.11%)</title><rect x="736.1" y="373" width="1.2" height="15.0" fill="rgb(214,123,30)" rx="2" ry="2" />
<text  x="739.06" y="383.5" ></text>
</g>
<g >
<title>menu_select (8 samples, 0.85%)</title><rect x="790.0" y="293" width="10.0" height="15.0" fill="rgb(254,98,33)" rx="2" ry="2" />
<text  x="792.98" y="303.5" ></text>
</g>
<g >
<title>psi_group_change (3 samples, 0.32%)</title><rect x="869.0" y="117" width="3.7" height="15.0" fill="rgb(250,5,33)" rx="2" ry="2" />
<text  x="871.98" y="127.5" ></text>
</g>
<g >
<title>make_bare_word (1 samples, 0.11%)</title><rect x="10.0" y="261" width="1.3" height="15.0" fill="rgb(205,57,38)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.11%)</title><rect x="1173.7" y="165" width="1.3" height="15.0" fill="rgb(243,5,2)" rx="2" ry="2" />
<text  x="1176.70" y="175.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.21%)</title><rect x="457.7" y="405" width="2.5" height="15.0" fill="rgb(216,186,40)" rx="2" ry="2" />
<text  x="460.67" y="415.5" ></text>
</g>
<g >
<title>dequeue_task (9 samples, 0.96%)</title><rect x="436.4" y="229" width="11.2" height="15.0" fill="rgb(219,137,10)" rx="2" ry="2" />
<text  x="439.35" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.11%)</title><rect x="13.8" y="341" width="1.2" height="15.0" fill="rgb(251,222,29)" rx="2" ry="2" />
<text  x="16.76" y="351.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.21%)</title><rect x="10.0" y="341" width="2.5" height="15.0" fill="rgb(223,74,28)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.11%)</title><rect x="12.5" y="357" width="1.3" height="15.0" fill="rgb(230,216,1)" rx="2" ry="2" />
<text  x="15.51" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (287 samples, 30.50%)</title><rect x="97.8" y="421" width="359.9" height="15.0" fill="rgb(248,30,25)" rx="2" ry="2" />
<text  x="100.78" y="431.5" >[libc.so.6]</text>
</g>
<g >
<title>poll_idle (25 samples, 2.66%)</title><rect x="754.9" y="277" width="31.3" height="15.0" fill="rgb(242,199,48)" rx="2" ry="2" />
<text  x="757.87" y="287.5" >po..</text>
</g>
<g >
<title>[libc.so.6] (285 samples, 30.29%)</title><rect x="832.6" y="421" width="357.4" height="15.0" fill="rgb(245,109,38)" rx="2" ry="2" />
<text  x="835.61" y="431.5" >[libc.so.6]</text>
</g>
<g >
<title>close_fd (1 samples, 0.11%)</title><rect x="11.3" y="197" width="1.2" height="15.0" fill="rgb(252,98,25)" rx="2" ry="2" />
<text  x="14.25" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (279 samples, 29.65%)</title><rect x="840.1" y="357" width="349.9" height="15.0" fill="rgb(208,131,7)" rx="2" ry="2" />
<text  x="843.14" y="367.5" >do_syscall_64</text>
</g>
<g >
<title>event_function_call (64 samples, 6.80%)</title><rect x="15.0" y="245" width="80.3" height="15.0" fill="rgb(221,141,53)" rx="2" ry="2" />
<text  x="18.02" y="255.5" >event_fun..</text>
</g>
<g >
<title>generic_exec_single (64 samples, 6.80%)</title><rect x="15.0" y="213" width="80.3" height="15.0" fill="rgb(228,8,14)" rx="2" ry="2" />
<text  x="18.02" y="223.5" >generic_e..</text>
</g>
<g >
<title>llist_add_batch (4 samples, 0.43%)</title><rect x="818.8" y="213" width="5.0" height="15.0" fill="rgb(253,31,48)" rx="2" ry="2" />
<text  x="821.82" y="223.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="724.8" y="309" width="1.2" height="15.0" fill="rgb(212,38,29)" rx="2" ry="2" />
<text  x="727.77" y="319.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.11%)</title><rect x="649.5" y="341" width="1.3" height="15.0" fill="rgb(246,103,26)" rx="2" ry="2" />
<text  x="652.53" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.11%)</title><rect x="13.8" y="405" width="1.2" height="15.0" fill="rgb(243,147,11)" rx="2" ry="2" />
<text  x="16.76" y="415.5" ></text>
</g>
<g >
<title>reweight_entity (1 samples, 0.11%)</title><rect x="1172.4" y="165" width="1.3" height="15.0" fill="rgb(220,179,48)" rx="2" ry="2" />
<text  x="1175.44" y="175.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 6.80%)</title><rect x="15.0" y="101" width="80.3" height="15.0" fill="rgb(216,42,49)" rx="2" ry="2" />
<text  x="18.02" y="111.5" >native_wr..</text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.11%)</title><rect x="805.0" y="309" width="1.3" height="15.0" fill="rgb(247,157,38)" rx="2" ry="2" />
<text  x="808.03" y="319.5" ></text>
</g>
<g >
<title>perf_mmap__write_tail (1 samples, 0.11%)</title><rect x="95.3" y="357" width="1.2" height="15.0" fill="rgb(241,46,29)" rx="2" ry="2" />
<text  x="98.27" y="367.5" ></text>
</g>
<g >
<title>rseq_get_rseq_cs (1 samples, 0.11%)</title><rect x="455.2" y="261" width="1.2" height="15.0" fill="rgb(243,203,47)" rx="2" ry="2" />
<text  x="458.16" y="271.5" ></text>
</g>
<g >
<title>psi_group_change (2 samples, 0.21%)</title><rect x="723.5" y="341" width="2.5" height="15.0" fill="rgb(227,35,51)" rx="2" ry="2" />
<text  x="726.52" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (7 samples, 0.74%)</title><rect x="655.8" y="341" width="8.8" height="15.0" fill="rgb(218,66,36)" rx="2" ry="2" />
<text  x="658.80" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="96.5" y="293" width="1.3" height="15.0" fill="rgb(237,45,7)" rx="2" ry="2" />
<text  x="99.52" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="11.3" y="229" width="1.2" height="15.0" fill="rgb(236,179,16)" rx="2" ry="2" />
<text  x="14.25" y="239.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.11%)</title><rect x="96.5" y="261" width="1.3" height="15.0" fill="rgb(253,50,13)" rx="2" ry="2" />
<text  x="99.52" y="271.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (2 samples, 0.21%)</title><rect x="872.7" y="149" width="2.5" height="15.0" fill="rgb(210,155,43)" rx="2" ry="2" />
<text  x="875.74" y="159.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (138 samples, 14.67%)</title><rect x="492.8" y="389" width="173.0" height="15.0" fill="rgb(205,220,53)" rx="2" ry="2" />
<text  x="495.78" y="399.5" >cpuidle_idle_call</text>
</g>
<g >
<title>_start (285 samples, 30.29%)</title><rect x="832.6" y="453" width="357.4" height="15.0" fill="rgb(251,74,24)" rx="2" ry="2" />
<text  x="835.61" y="463.5" >_start</text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.11%)</title><rect x="12.5" y="421" width="1.3" height="15.0" fill="rgb(228,109,31)" rx="2" ry="2" />
<text  x="15.51" y="431.5" ></text>
</g>
<g >
<title>perf_ioctl (64 samples, 6.80%)</title><rect x="15.0" y="309" width="80.3" height="15.0" fill="rgb(238,220,7)" rx="2" ry="2" />
<text  x="18.02" y="319.5" >perf_ioctl</text>
</g>
<g >
<title>mutex_spin_on_owner (38 samples, 4.04%)</title><rect x="384.9" y="213" width="47.7" height="15.0" fill="rgb(251,54,45)" rx="2" ry="2" />
<text  x="387.94" y="223.5" >mute..</text>
</g>
<g >
<title>set_next_entity (12 samples, 1.28%)</title><rect x="702.2" y="341" width="15.0" height="15.0" fill="rgb(248,184,28)" rx="2" ry="2" />
<text  x="705.20" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (4 samples, 0.43%)</title><rect x="793.7" y="261" width="5.1" height="15.0" fill="rgb(215,99,47)" rx="2" ry="2" />
<text  x="796.74" y="271.5" ></text>
</g>
<g >
<title>reader_loop (2 samples, 0.21%)</title><rect x="10.0" y="389" width="2.5" height="15.0" fill="rgb(248,10,31)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 0.11%)</title><rect x="447.6" y="229" width="1.3" height="15.0" fill="rgb(214,211,23)" rx="2" ry="2" />
<text  x="450.64" y="239.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.21%)</title><rect x="830.1" y="325" width="2.5" height="15.0" fill="rgb(247,56,46)" rx="2" ry="2" />
<text  x="833.11" y="335.5" ></text>
</g>
<g >
<title>schedule_idle (45 samples, 4.78%)</title><rect x="673.4" y="389" width="56.4" height="15.0" fill="rgb(228,81,18)" rx="2" ry="2" />
<text  x="676.36" y="399.5" >sched..</text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.11%)</title><rect x="12.5" y="325" width="1.3" height="15.0" fill="rgb(238,86,16)" rx="2" ry="2" />
<text  x="15.51" y="335.5" ></text>
</g>
<g >
<title>ttwu_do_activate (15 samples, 1.59%)</title><rect x="135.4" y="165" width="18.8" height="15.0" fill="rgb(243,23,9)" rx="2" ry="2" />
<text  x="138.40" y="175.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.11%)</title><rect x="12.5" y="341" width="1.3" height="15.0" fill="rgb(218,63,16)" rx="2" ry="2" />
<text  x="15.51" y="351.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (1 samples, 0.11%)</title><rect x="825.1" y="293" width="1.2" height="15.0" fill="rgb(248,180,30)" rx="2" ry="2" />
<text  x="828.09" y="303.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.11%)</title><rect x="665.8" y="389" width="1.3" height="15.0" fill="rgb(248,86,5)" rx="2" ry="2" />
<text  x="668.83" y="399.5" ></text>
</g>
<g >
<title>record__pushfn (1 samples, 0.11%)</title><rect x="96.5" y="373" width="1.3" height="15.0" fill="rgb(210,195,49)" rx="2" ry="2" />
<text  x="99.52" y="383.5" ></text>
</g>
<g >
<title>uncharge_page (3 samples, 0.32%)</title><rect x="268.3" y="213" width="3.8" height="15.0" fill="rgb(240,139,27)" rx="2" ry="2" />
<text  x="271.32" y="223.5" ></text>
</g>
<g >
<title>__schedule (15 samples, 1.59%)</title><rect x="808.8" y="309" width="18.8" height="15.0" fill="rgb(247,154,28)" rx="2" ry="2" />
<text  x="811.79" y="319.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.11%)</title><rect x="96.5" y="197" width="1.3" height="15.0" fill="rgb(212,195,18)" rx="2" ry="2" />
<text  x="99.52" y="207.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.21%)</title><rect x="841.4" y="309" width="2.5" height="15.0" fill="rgb(219,27,46)" rx="2" ry="2" />
<text  x="844.39" y="319.5" ></text>
</g>
<g >
<title>record__write (1 samples, 0.11%)</title><rect x="96.5" y="357" width="1.3" height="15.0" fill="rgb(250,99,14)" rx="2" ry="2" />
<text  x="99.52" y="367.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.11%)</title><rect x="786.2" y="277" width="1.3" height="15.0" fill="rgb(229,37,38)" rx="2" ry="2" />
<text  x="789.22" y="287.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.11%)</title><rect x="96.5" y="117" width="1.3" height="15.0" fill="rgb(224,113,48)" rx="2" ry="2" />
<text  x="99.52" y="127.5" ></text>
</g>
<g >
<title>set_next_entity (1 samples, 0.11%)</title><rect x="823.8" y="277" width="1.3" height="15.0" fill="rgb(207,25,31)" rx="2" ry="2" />
<text  x="826.84" y="287.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.11%)</title><rect x="792.5" y="245" width="1.2" height="15.0" fill="rgb(254,90,50)" rx="2" ry="2" />
<text  x="795.49" y="255.5" ></text>
</g>
<g >
<title>main (285 samples, 30.29%)</title><rect x="832.6" y="405" width="357.4" height="15.0" fill="rgb(210,221,12)" rx="2" ry="2" />
<text  x="835.61" y="415.5" >main</text>
</g>
<g >
<title>do_exit (1 samples, 0.11%)</title><rect x="12.5" y="389" width="1.3" height="15.0" fill="rgb(246,192,41)" rx="2" ry="2" />
<text  x="15.51" y="399.5" ></text>
</g>
<g >
<title>mutex_spin_on_owner (45 samples, 4.78%)</title><rect x="1107.2" y="213" width="56.5" height="15.0" fill="rgb(226,10,53)" rx="2" ry="2" />
<text  x="1110.24" y="223.5" >mutex..</text>
</g>
<g >
<title>send_call_function_single_ipi (4 samples, 0.43%)</title><rect x="694.7" y="261" width="5.0" height="15.0" fill="rgb(247,63,42)" rx="2" ry="2" />
<text  x="697.68" y="271.5" ></text>
</g>
<g >
<title>enqueue_task_fair (6 samples, 0.64%)</title><rect x="136.7" y="133" width="7.5" height="15.0" fill="rgb(243,224,45)" rx="2" ry="2" />
<text  x="139.65" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.21%)</title><rect x="10.0" y="421" width="2.5" height="15.0" fill="rgb(221,11,30)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.11%)</title><rect x="660.8" y="293" width="1.3" height="15.0" fill="rgb(232,207,53)" rx="2" ry="2" />
<text  x="663.82" y="303.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.11%)</title><rect x="801.3" y="325" width="1.2" height="15.0" fill="rgb(229,18,20)" rx="2" ry="2" />
<text  x="804.26" y="335.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.11%)</title><rect x="1172.4" y="181" width="1.3" height="15.0" fill="rgb(211,199,7)" rx="2" ry="2" />
<text  x="1175.44" y="191.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.11%)</title><rect x="826.3" y="293" width="1.3" height="15.0" fill="rgb(241,179,54)" rx="2" ry="2" />
<text  x="829.34" y="303.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (3 samples, 0.32%)</title><rect x="640.8" y="325" width="3.7" height="15.0" fill="rgb(234,101,52)" rx="2" ry="2" />
<text  x="643.75" y="335.5" ></text>
</g>
<g >
<title>ttwu_do_activate (15 samples, 1.59%)</title><rect x="856.4" y="165" width="18.8" height="15.0" fill="rgb(248,141,9)" rx="2" ry="2" />
<text  x="859.44" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.11%)</title><rect x="13.8" y="453" width="1.2" height="15.0" fill="rgb(215,69,36)" rx="2" ry="2" />
<text  x="16.76" y="463.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.11%)</title><rect x="1034.5" y="197" width="1.3" height="15.0" fill="rgb(216,184,9)" rx="2" ry="2" />
<text  x="1037.51" y="207.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.43%)</title><rect x="667.1" y="373" width="5.0" height="15.0" fill="rgb(210,54,35)" rx="2" ry="2" />
<text  x="670.09" y="383.5" ></text>
</g>
<g >
<title>poll_idle (25 samples, 2.66%)</title><rect x="608.2" y="341" width="31.3" height="15.0" fill="rgb(232,60,11)" rx="2" ry="2" />
<text  x="611.15" y="351.5" >po..</text>
</g>
<g >
<title>psi_group_change (5 samples, 0.53%)</title><rect x="146.7" y="117" width="6.3" height="15.0" fill="rgb(220,178,16)" rx="2" ry="2" />
<text  x="149.68" y="127.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.11%)</title><rect x="792.5" y="261" width="1.2" height="15.0" fill="rgb(206,40,42)" rx="2" ry="2" />
<text  x="795.49" y="271.5" ></text>
</g>
</g>
</svg>
