<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="742.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="725" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="725" > </text>
<g id="frames">
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="775.1" y="357" width="21.6" height="15.0" fill="rgb(213,107,29)" rx="2" ry="2" />
<text  x="778.11" y="367.5" >P..</text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.46%)</title><rect x="807.4" y="229" width="5.4" height="15.0" fill="rgb(246,94,13)" rx="2" ry="2" />
<text  x="810.44" y="239.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="775.1" y="373" width="21.6" height="15.0" fill="rgb(243,68,15)" rx="2" ry="2" />
<text  x="778.11" y="383.5" >P..</text>
</g>
<g >
<title>string_new.lto_priv.0 (1 samples, 0.46%)</title><rect x="753.6" y="341" width="5.3" height="15.0" fill="rgb(233,68,14)" rx="2" ry="2" />
<text  x="756.56" y="351.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (3 samples, 1.37%)</title><rect x="591.9" y="629" width="16.2" height="15.0" fill="rgb(245,71,36)" rx="2" ry="2" />
<text  x="594.92" y="639.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 1.37%)</title><rect x="710.5" y="565" width="16.1" height="15.0" fill="rgb(219,43,30)" rx="2" ry="2" />
<text  x="713.46" y="575.5" ></text>
</g>
<g >
<title>NaClSysMmapDecoder (1 samples, 0.46%)</title><rect x="586.5" y="629" width="5.4" height="15.0" fill="rgb(219,89,5)" rx="2" ry="2" />
<text  x="589.53" y="639.5" ></text>
</g>
<g >
<title>evict (2 samples, 0.91%)</title><rect x="845.2" y="421" width="10.7" height="15.0" fill="rgb(232,115,37)" rx="2" ry="2" />
<text  x="848.16" y="431.5" ></text>
</g>
<g >
<title>load_source_module (1 samples, 0.46%)</title><rect x="807.4" y="485" width="5.4" height="15.0" fill="rgb(229,105,4)" rx="2" ry="2" />
<text  x="810.44" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.46%)</title><rect x="796.7" y="357" width="5.4" height="15.0" fill="rgb(250,70,42)" rx="2" ry="2" />
<text  x="799.67" y="367.5" ></text>
</g>
<g >
<title>PyImport_Import (1 samples, 0.46%)</title><rect x="807.4" y="581" width="5.4" height="15.0" fill="rgb(249,223,11)" rx="2" ry="2" />
<text  x="810.44" y="591.5" ></text>
</g>
<g >
<title>unmap_single_vma (6 samples, 2.74%)</title><rect x="812.8" y="501" width="32.4" height="15.0" fill="rgb(218,132,53)" rx="2" ry="2" />
<text  x="815.83" y="511.5" >un..</text>
</g>
<g >
<title>cpuidle_enter_state (4 samples, 1.83%)</title><rect x="1168.4" y="517" width="21.6" height="15.0" fill="rgb(213,185,16)" rx="2" ry="2" />
<text  x="1171.45" y="527.5" >c..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.46%)</title><rect x="419.5" y="549" width="5.4" height="15.0" fill="rgb(218,119,47)" rx="2" ry="2" />
<text  x="422.50" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 1.37%)</title><rect x="758.9" y="501" width="16.2" height="15.0" fill="rgb(224,73,0)" rx="2" ry="2" />
<text  x="761.95" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="775.1" y="341" width="21.6" height="15.0" fill="rgb(222,123,41)" rx="2" ry="2" />
<text  x="778.11" y="351.5" >P..</text>
</g>
<g >
<title>task_work_run (2 samples, 0.91%)</title><rect x="845.2" y="549" width="10.7" height="15.0" fill="rgb(226,222,39)" rx="2" ry="2" />
<text  x="848.16" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.46%)</title><rect x="893.7" y="453" width="5.3" height="15.0" fill="rgb(215,201,9)" rx="2" ry="2" />
<text  x="896.65" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 0.91%)</title><rect x="796.7" y="405" width="10.7" height="15.0" fill="rgb(230,156,53)" rx="2" ry="2" />
<text  x="799.67" y="415.5" ></text>
</g>
<g >
<title>PyObject_Free.localalias.lto_priv.0 (1 samples, 0.46%)</title><rect x="586.5" y="373" width="5.4" height="15.0" fill="rgb(249,227,23)" rx="2" ry="2" />
<text  x="589.53" y="383.5" ></text>
</g>
<g >
<title>swapper (62 samples, 28.31%)</title><rect x="855.9" y="677" width="334.1" height="15.0" fill="rgb(235,144,28)" rx="2" ry="2" />
<text  x="858.94" y="687.5" >swapper</text>
</g>
<g >
<title>dput.part.26 (2 samples, 0.91%)</title><rect x="845.2" y="485" width="10.7" height="15.0" fill="rgb(254,167,48)" rx="2" ry="2" />
<text  x="848.16" y="495.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (28 samples, 12.79%)</title><rect x="478.8" y="645" width="150.8" height="15.0" fill="rgb(244,114,52)" rx="2" ry="2" />
<text  x="481.77" y="655.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>activate_task (1 samples, 0.46%)</title><rect x="462.6" y="485" width="5.4" height="15.0" fill="rgb(216,126,51)" rx="2" ry="2" />
<text  x="465.60" y="495.5" ></text>
</g>
<g >
<title>NaClSysMmapIntern (1 samples, 0.46%)</title><rect x="586.5" y="597" width="5.4" height="15.0" fill="rgb(213,210,8)" rx="2" ry="2" />
<text  x="589.53" y="607.5" ></text>
</g>
<g >
<title>type_call.lto_priv.0 (3 samples, 1.37%)</title><rect x="758.9" y="469" width="16.2" height="15.0" fill="rgb(220,177,8)" rx="2" ry="2" />
<text  x="761.95" y="479.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (3 samples, 1.37%)</title><rect x="591.9" y="597" width="16.2" height="15.0" fill="rgb(217,8,10)" rx="2" ry="2" />
<text  x="594.92" y="607.5" ></text>
</g>
<g >
<title>page_mapped (1 samples, 0.46%)</title><rect x="850.5" y="325" width="5.4" height="15.0" fill="rgb(206,177,12)" rx="2" ry="2" />
<text  x="853.55" y="335.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.46%)</title><rect x="462.6" y="533" width="5.4" height="15.0" fill="rgb(220,217,46)" rx="2" ry="2" />
<text  x="465.60" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (1 samples, 0.46%)</title><rect x="807.4" y="133" width="5.4" height="15.0" fill="rgb(221,67,33)" rx="2" ry="2" />
<text  x="810.44" y="143.5" ></text>
</g>
<g >
<title>init_types.lto_priv.0 (1 samples, 0.46%)</title><rect x="758.9" y="309" width="5.4" height="15.0" fill="rgb(234,22,48)" rx="2" ry="2" />
<text  x="761.95" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.46%)</title><rect x="807.4" y="101" width="5.4" height="15.0" fill="rgb(249,96,36)" rx="2" ry="2" />
<text  x="810.44" y="111.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="608.1" y="373" width="21.5" height="15.0" fill="rgb(241,27,26)" rx="2" ry="2" />
<text  x="611.08" y="383.5" >P..</text>
</g>
<g >
<title>perf_event_for_each_child (63 samples, 28.77%)</title><rect x="20.8" y="533" width="339.4" height="15.0" fill="rgb(208,153,28)" rx="2" ry="2" />
<text  x="23.78" y="543.5" >perf_event_for_each_child</text>
</g>
<g >
<title>PyEval_EvalCode (6 samples, 2.74%)</title><rect x="775.1" y="581" width="32.3" height="15.0" fill="rgb(251,3,12)" rx="2" ry="2" />
<text  x="778.11" y="591.5" >Py..</text>
</g>
<g >
<title>parsetok (1 samples, 0.46%)</title><rect x="769.7" y="293" width="5.4" height="15.0" fill="rgb(249,28,12)" rx="2" ry="2" />
<text  x="772.73" y="303.5" ></text>
</g>
<g >
<title>native_sched_clock (7 samples, 3.20%)</title><rect x="20.8" y="341" width="37.7" height="15.0" fill="rgb(223,87,48)" rx="2" ry="2" />
<text  x="23.78" y="351.5" >nat..</text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 1.37%)</title><rect x="613.5" y="213" width="16.1" height="15.0" fill="rgb(237,113,2)" rx="2" ry="2" />
<text  x="616.47" y="223.5" ></text>
</g>
<g >
<title>lind_mmap (1 samples, 0.46%)</title><rect x="586.5" y="533" width="5.4" height="15.0" fill="rgb(254,108,32)" rx="2" ry="2" />
<text  x="589.53" y="543.5" ></text>
</g>
<g >
<title>PyObject_Call (4 samples, 1.83%)</title><rect x="737.4" y="549" width="21.5" height="15.0" fill="rgb(249,144,36)" rx="2" ry="2" />
<text  x="740.40" y="559.5" >P..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="737.4" y="437" width="21.5" height="15.0" fill="rgb(212,158,10)" rx="2" ry="2" />
<text  x="740.40" y="447.5" >P..</text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (1 samples, 0.46%)</title><rect x="586.5" y="501" width="5.4" height="15.0" fill="rgb(232,153,3)" rx="2" ry="2" />
<text  x="589.53" y="511.5" ></text>
</g>
<g >
<title>NaClHostDescRead (3 samples, 1.37%)</title><rect x="591.9" y="581" width="16.2" height="15.0" fill="rgb(236,150,50)" rx="2" ry="2" />
<text  x="594.92" y="591.5" ></text>
</g>
<g >
<title>load_next (1 samples, 0.46%)</title><rect x="807.4" y="501" width="5.4" height="15.0" fill="rgb(234,82,23)" rx="2" ry="2" />
<text  x="810.44" y="511.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 1.37%)</title><rect x="613.5" y="261" width="16.1" height="15.0" fill="rgb(251,143,15)" rx="2" ry="2" />
<text  x="616.47" y="271.5" ></text>
</g>
<g >
<title>lind_write (4 samples, 1.83%)</title><rect x="608.1" y="565" width="21.5" height="15.0" fill="rgb(237,17,19)" rx="2" ry="2" />
<text  x="611.08" y="575.5" >l..</text>
</g>
<g >
<title>[anon] (2 samples, 0.91%)</title><rect x="468.0" y="661" width="10.8" height="15.0" fill="rgb(214,25,24)" rx="2" ry="2" />
<text  x="470.99" y="671.5" ></text>
</g>
<g >
<title>sys_ioctl (63 samples, 28.77%)</title><rect x="20.8" y="581" width="339.4" height="15.0" fill="rgb(249,91,54)" rx="2" ry="2" />
<text  x="23.78" y="591.5" >sys_ioctl</text>
</g>
<g >
<title>PyObject_Call (3 samples, 1.37%)</title><rect x="758.9" y="437" width="16.2" height="15.0" fill="rgb(224,89,51)" rx="2" ry="2" />
<text  x="761.95" y="447.5" ></text>
</g>
<g >
<title>lind_read (3 samples, 1.37%)</title><rect x="591.9" y="565" width="16.2" height="15.0" fill="rgb(208,108,38)" rx="2" ry="2" />
<text  x="594.92" y="575.5" ></text>
</g>
<g >
<title>NaClSysFork (17 samples, 7.76%)</title><rect x="494.9" y="613" width="91.6" height="15.0" fill="rgb(227,186,15)" rx="2" ry="2" />
<text  x="497.93" y="623.5" >NaClSysFork</text>
</g>
<g >
<title>PyParser_AddToken (1 samples, 0.46%)</title><rect x="769.7" y="277" width="5.4" height="15.0" fill="rgb(218,100,2)" rx="2" ry="2" />
<text  x="772.73" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (10 samples, 4.57%)</title><rect x="414.1" y="613" width="53.9" height="15.0" fill="rgb(209,139,1)" rx="2" ry="2" />
<text  x="417.11" y="623.5" >do_pa..</text>
</g>
<g >
<title>____fput (2 samples, 0.91%)</title><rect x="845.2" y="533" width="10.7" height="15.0" fill="rgb(234,176,40)" rx="2" ry="2" />
<text  x="848.16" y="543.5" ></text>
</g>
<g >
<title>PyImport_ExecCodeModuleEx (1 samples, 0.46%)</title><rect x="807.4" y="309" width="5.4" height="15.0" fill="rgb(209,123,44)" rx="2" ry="2" />
<text  x="810.44" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 1.37%)</title><rect x="613.5" y="325" width="16.1" height="15.0" fill="rgb(254,200,47)" rx="2" ry="2" />
<text  x="616.47" y="335.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.91%)</title><rect x="834.4" y="421" width="10.8" height="15.0" fill="rgb(249,117,41)" rx="2" ry="2" />
<text  x="837.38" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (4 samples, 1.83%)</title><rect x="608.1" y="421" width="21.5" height="15.0" fill="rgb(209,15,45)" rx="2" ry="2" />
<text  x="611.08" y="431.5" >P..</text>
</g>
<g >
<title>do_syscall_64 (63 samples, 28.77%)</title><rect x="20.8" y="597" width="339.4" height="15.0" fill="rgb(217,24,22)" rx="2" ry="2" />
<text  x="23.78" y="607.5" >do_syscall_64</text>
</g>
<g >
<title>PyObject_Call (4 samples, 1.83%)</title><rect x="608.1" y="517" width="21.5" height="15.0" fill="rgb(253,46,24)" rx="2" ry="2" />
<text  x="611.08" y="527.5" >P..</text>
</g>
<g >
<title>__handle_mm_fault (8 samples, 3.65%)</title><rect x="419.5" y="565" width="43.1" height="15.0" fill="rgb(218,170,9)" rx="2" ry="2" />
<text  x="422.50" y="575.5" >__ha..</text>
</g>
<g >
<title>ValidateChunkAMD64 (3 samples, 1.37%)</title><rect x="478.8" y="549" width="16.1" height="15.0" fill="rgb(250,53,16)" rx="2" ry="2" />
<text  x="481.77" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (4 samples, 1.83%)</title><rect x="608.1" y="485" width="21.5" height="15.0" fill="rgb(244,175,29)" rx="2" ry="2" />
<text  x="611.08" y="495.5" >P..</text>
</g>
<g >
<title>NaClAppThreadSpawn (17 samples, 7.76%)</title><rect x="494.9" y="581" width="91.6" height="15.0" fill="rgb(211,109,15)" rx="2" ry="2" />
<text  x="497.93" y="591.5" >NaClAppThr..</text>
</g>
<g >
<title>NaClForkThreadContextSetup (17 samples, 7.76%)</title><rect x="494.9" y="565" width="91.6" height="15.0" fill="rgb(242,184,48)" rx="2" ry="2" />
<text  x="497.93" y="575.5" >NaClForkTh..</text>
</g>
<g >
<title>page_fault (3 samples, 1.37%)</title><rect x="613.5" y="277" width="16.1" height="15.0" fill="rgb(208,171,26)" rx="2" ry="2" />
<text  x="616.47" y="287.5" ></text>
</g>
<g >
<title>delete_from_page_cache (1 samples, 0.46%)</title><rect x="845.2" y="341" width="5.3" height="15.0" fill="rgb(236,166,21)" rx="2" ry="2" />
<text  x="848.16" y="351.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (1 samples, 0.46%)</title><rect x="15.4" y="517" width="5.4" height="15.0" fill="rgb(249,29,48)" rx="2" ry="2" />
<text  x="18.39" y="527.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.46%)</title><rect x="613.5" y="181" width="5.4" height="15.0" fill="rgb(235,33,13)" rx="2" ry="2" />
<text  x="616.47" y="191.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.46%)</title><rect x="624.2" y="165" width="5.4" height="15.0" fill="rgb(234,202,0)" rx="2" ry="2" />
<text  x="627.25" y="175.5" ></text>
</g>
<g >
<title>type_call.lto_priv.0 (1 samples, 0.46%)</title><rect x="473.4" y="645" width="5.4" height="15.0" fill="rgb(242,228,51)" rx="2" ry="2" />
<text  x="476.38" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 1.37%)</title><rect x="742.8" y="389" width="16.1" height="15.0" fill="rgb(206,198,22)" rx="2" ry="2" />
<text  x="745.79" y="399.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.46%)</title><rect x="1157.7" y="549" width="5.4" height="15.0" fill="rgb(214,190,46)" rx="2" ry="2" />
<text  x="1160.67" y="559.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 0.91%)</title><rect x="834.4" y="405" width="10.8" height="15.0" fill="rgb(244,222,52)" rx="2" ry="2" />
<text  x="837.38" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 0.91%)</title><rect x="742.8" y="341" width="10.8" height="15.0" fill="rgb(212,122,22)" rx="2" ry="2" />
<text  x="745.79" y="351.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.46%)</title><rect x="888.3" y="549" width="5.4" height="15.0" fill="rgb(211,24,3)" rx="2" ry="2" />
<text  x="891.26" y="559.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.46%)</title><rect x="15.4" y="581" width="5.4" height="15.0" fill="rgb(232,158,20)" rx="2" ry="2" />
<text  x="18.39" y="591.5" ></text>
</g>
<g >
<title>__do_page_fault (8 samples, 3.65%)</title><rect x="694.3" y="613" width="43.1" height="15.0" fill="rgb(251,202,29)" rx="2" ry="2" />
<text  x="697.29" y="623.5" >__do..</text>
</g>
<g >
<title>PyParser_ASTFromString (1 samples, 0.46%)</title><rect x="769.7" y="309" width="5.4" height="15.0" fill="rgb(220,51,22)" rx="2" ry="2" />
<text  x="772.73" y="319.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (3 samples, 1.37%)</title><rect x="478.8" y="613" width="16.1" height="15.0" fill="rgb(243,171,29)" rx="2" ry="2" />
<text  x="481.77" y="623.5" ></text>
</g>
<g >
<title>PyObject_Call (3 samples, 1.37%)</title><rect x="591.9" y="517" width="16.2" height="15.0" fill="rgb(236,116,9)" rx="2" ry="2" />
<text  x="594.92" y="527.5" ></text>
</g>
<g >
<title>load_source_module (1 samples, 0.46%)</title><rect x="807.4" y="165" width="5.4" height="15.0" fill="rgb(211,222,47)" rx="2" ry="2" />
<text  x="810.44" y="175.5" ></text>
</g>
<g >
<title>string_item.lto_priv.0 (1 samples, 0.46%)</title><rect x="608.1" y="309" width="5.4" height="15.0" fill="rgb(234,70,16)" rx="2" ry="2" />
<text  x="611.08" y="319.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (1 samples, 0.46%)</title><rect x="807.4" y="405" width="5.4" height="15.0" fill="rgb(243,202,32)" rx="2" ry="2" />
<text  x="810.44" y="415.5" ></text>
</g>
<g >
<title>compiler_enter_scope.lto_priv.0 (1 samples, 0.46%)</title><rect x="764.3" y="245" width="5.4" height="15.0" fill="rgb(227,98,29)" rx="2" ry="2" />
<text  x="767.34" y="255.5" ></text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.46%)</title><rect x="807.4" y="389" width="5.4" height="15.0" fill="rgb(232,138,44)" rx="2" ry="2" />
<text  x="810.44" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.46%)</title><rect x="791.3" y="277" width="5.4" height="15.0" fill="rgb(244,68,25)" rx="2" ry="2" />
<text  x="794.28" y="287.5" ></text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.46%)</title><rect x="586.5" y="485" width="5.4" height="15.0" fill="rgb(207,27,13)" rx="2" ry="2" />
<text  x="589.53" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 0.91%)</title><rect x="742.8" y="373" width="10.8" height="15.0" fill="rgb(254,223,23)" rx="2" ry="2" />
<text  x="745.79" y="383.5" ></text>
</g>
<g >
<title>NaClDescIoDescMapAnon (1 samples, 0.46%)</title><rect x="586.5" y="581" width="5.4" height="15.0" fill="rgb(235,183,7)" rx="2" ry="2" />
<text  x="589.53" y="591.5" ></text>
</g>
<g >
<title>PyAST_Compile (1 samples, 0.46%)</title><rect x="764.3" y="309" width="5.4" height="15.0" fill="rgb(211,159,4)" rx="2" ry="2" />
<text  x="767.34" y="319.5" ></text>
</g>
<g >
<title>int_to_decimal_string.lto_priv.0 (1 samples, 0.46%)</title><rect x="753.6" y="293" width="5.3" height="15.0" fill="rgb(209,68,24)" rx="2" ry="2" />
<text  x="756.56" y="303.5" ></text>
</g>
<g >
<title>__ioctl (63 samples, 28.77%)</title><rect x="20.8" y="629" width="339.4" height="15.0" fill="rgb(217,119,17)" rx="2" ry="2" />
<text  x="23.78" y="639.5" >__ioctl</text>
</g>
<g >
<title>schedule_idle (1 samples, 0.46%)</title><rect x="1163.1" y="597" width="5.3" height="15.0" fill="rgb(236,207,20)" rx="2" ry="2" />
<text  x="1166.06" y="607.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (17 samples, 7.76%)</title><rect x="494.9" y="549" width="91.6" height="15.0" fill="rgb(240,209,24)" rx="2" ry="2" />
<text  x="497.93" y="559.5" >NaClCopyEx..</text>
</g>
<g >
<title>PySequence_Fast (3 samples, 1.37%)</title><rect x="591.9" y="341" width="16.2" height="15.0" fill="rgb(220,183,35)" rx="2" ry="2" />
<text  x="594.92" y="351.5" ></text>
</g>
<g >
<title>__perf_event_enable (63 samples, 28.77%)</title><rect x="20.8" y="421" width="339.4" height="15.0" fill="rgb(249,128,30)" rx="2" ry="2" />
<text  x="23.78" y="431.5" >__perf_event_enable</text>
</g>
<g >
<title>epi_rcu_free (1 samples, 0.46%)</title><rect x="893.7" y="469" width="5.3" height="15.0" fill="rgb(238,16,27)" rx="2" ry="2" />
<text  x="896.65" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="737.4" y="421" width="21.5" height="15.0" fill="rgb(232,163,36)" rx="2" ry="2" />
<text  x="740.40" y="431.5" >P..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (63 samples, 28.77%)</title><rect x="20.8" y="613" width="339.4" height="15.0" fill="rgb(206,49,10)" rx="2" ry="2" />
<text  x="23.78" y="623.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>PyObject_CallFunction (1 samples, 0.46%)</title><rect x="807.4" y="565" width="5.4" height="15.0" fill="rgb(210,168,12)" rx="2" ry="2" />
<text  x="810.44" y="575.5" ></text>
</g>
<g >
<title>_start (14 samples, 6.39%)</title><rect x="737.4" y="661" width="75.4" height="15.0" fill="rgb(237,161,21)" rx="2" ry="2" />
<text  x="740.40" y="671.5" >_start</text>
</g>
<g >
<title>PyEval_EvalCode (1 samples, 0.46%)</title><rect x="807.4" y="453" width="5.4" height="15.0" fill="rgb(210,214,26)" rx="2" ry="2" />
<text  x="810.44" y="463.5" ></text>
</g>
<g >
<title>native_write_cr2 (1 samples, 0.46%)</title><rect x="58.5" y="341" width="5.4" height="15.0" fill="rgb(230,16,42)" rx="2" ry="2" />
<text  x="61.49" y="351.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 28.77%)</title><rect x="20.8" y="389" width="339.4" height="15.0" fill="rgb(213,158,37)" rx="2" ry="2" />
<text  x="23.78" y="399.5" >x86_pmu_enable</text>
</g>
<g >
<title>__libc_write (1 samples, 0.46%)</title><rect x="15.4" y="645" width="5.4" height="15.0" fill="rgb(245,164,7)" rx="2" ry="2" />
<text  x="18.39" y="655.5" ></text>
</g>
<g >
<title>call_cpuidle (50 samples, 22.83%)</title><rect x="893.7" y="597" width="269.4" height="15.0" fill="rgb(238,95,27)" rx="2" ry="2" />
<text  x="896.65" y="607.5" >call_cpuidle</text>
</g>
<g >
<title>NaClCreateThread (17 samples, 7.76%)</title><rect x="494.9" y="597" width="91.6" height="15.0" fill="rgb(238,34,24)" rx="2" ry="2" />
<text  x="497.93" y="607.5" >NaClCreate..</text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.46%)</title><rect x="624.2" y="181" width="5.4" height="15.0" fill="rgb(221,157,20)" rx="2" ry="2" />
<text  x="627.25" y="191.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (4 samples, 1.83%)</title><rect x="823.6" y="453" width="21.6" height="15.0" fill="rgb(228,165,20)" rx="2" ry="2" />
<text  x="826.61" y="463.5" >f..</text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.46%)</title><rect x="462.6" y="469" width="5.4" height="15.0" fill="rgb(245,37,26)" rx="2" ry="2" />
<text  x="465.60" y="479.5" ></text>
</g>
<g >
<title>NaClValidateCode (3 samples, 1.37%)</title><rect x="478.8" y="581" width="16.1" height="15.0" fill="rgb(236,102,36)" rx="2" ry="2" />
<text  x="481.77" y="591.5" ></text>
</g>
<g >
<title>PyAST_Check (1 samples, 0.46%)</title><rect x="758.9" y="325" width="5.4" height="15.0" fill="rgb(249,111,25)" rx="2" ry="2" />
<text  x="761.95" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (3 samples, 1.37%)</title><rect x="758.9" y="373" width="16.2" height="15.0" fill="rgb(236,178,1)" rx="2" ry="2" />
<text  x="761.95" y="383.5" ></text>
</g>
<g >
<title>intel_idle (4 samples, 1.83%)</title><rect x="1168.4" y="501" width="21.6" height="15.0" fill="rgb(250,125,12)" rx="2" ry="2" />
<text  x="1171.45" y="511.5" >i..</text>
</g>
<g >
<title>try_3way_compare (1 samples, 0.46%)</title><rect x="468.0" y="645" width="5.4" height="15.0" fill="rgb(250,30,24)" rx="2" ry="2" />
<text  x="470.99" y="655.5" ></text>
</g>
<g >
<title>do_page_fault (8 samples, 3.65%)</title><rect x="694.3" y="629" width="43.1" height="15.0" fill="rgb(207,100,49)" rx="2" ry="2" />
<text  x="697.29" y="639.5" >do_p..</text>
</g>
<g >
<title>slot_tp_init.lto_priv.0 (3 samples, 1.37%)</title><rect x="758.9" y="453" width="16.2" height="15.0" fill="rgb(248,95,54)" rx="2" ry="2" />
<text  x="761.95" y="463.5" ></text>
</g>
<g >
<title>[_collections.so] (4 samples, 1.83%)</title><rect x="608.1" y="357" width="21.5" height="15.0" fill="rgb(229,151,26)" rx="2" ry="2" />
<text  x="611.08" y="367.5" >[..</text>
</g>
<g >
<title>NaClDescIoDescWrite (4 samples, 1.83%)</title><rect x="608.1" y="597" width="21.5" height="15.0" fill="rgb(239,19,44)" rx="2" ry="2" />
<text  x="611.08" y="607.5" >N..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 1.37%)</title><rect x="591.9" y="437" width="16.2" height="15.0" fill="rgb(251,64,33)" rx="2" ry="2" />
<text  x="594.92" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 5.94%)</title><rect x="397.9" y="645" width="70.1" height="15.0" fill="rgb(231,113,10)" rx="2" ry="2" />
<text  x="400.95" y="655.5" >__memmo..</text>
</g>
<g >
<title>builtin_compile.lto_priv.0 (3 samples, 1.37%)</title><rect x="758.9" y="341" width="16.2" height="15.0" fill="rgb(229,114,45)" rx="2" ry="2" />
<text  x="761.95" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (6 samples, 2.74%)</title><rect x="775.1" y="469" width="32.3" height="15.0" fill="rgb(220,51,50)" rx="2" ry="2" />
<text  x="778.11" y="479.5" >Py..</text>
</g>
<g >
<title>PyImport_ImportModuleLevel (1 samples, 0.46%)</title><rect x="807.4" y="357" width="5.4" height="15.0" fill="rgb(232,105,33)" rx="2" ry="2" />
<text  x="810.44" y="367.5" ></text>
</g>
<g >
<title>builtin___import__.lto_priv.0 (1 samples, 0.46%)</title><rect x="807.4" y="533" width="5.4" height="15.0" fill="rgb(237,174,28)" rx="2" ry="2" />
<text  x="810.44" y="543.5" ></text>
</g>
<g >
<title>sysmalloc (3 samples, 1.37%)</title><rect x="613.5" y="293" width="16.1" height="15.0" fill="rgb(245,54,35)" rx="2" ry="2" />
<text  x="616.47" y="303.5" ></text>
</g>
<g >
<title>block_write_end (1 samples, 0.46%)</title><rect x="15.4" y="453" width="5.4" height="15.0" fill="rgb(224,46,50)" rx="2" ry="2" />
<text  x="18.39" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (1 samples, 0.46%)</title><rect x="807.4" y="293" width="5.4" height="15.0" fill="rgb(253,165,33)" rx="2" ry="2" />
<text  x="810.44" y="303.5" ></text>
</g>
<g >
<title>load_next (1 samples, 0.46%)</title><rect x="807.4" y="341" width="5.4" height="15.0" fill="rgb(232,194,25)" rx="2" ry="2" />
<text  x="810.44" y="351.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 28.77%)</title><rect x="20.8" y="405" width="339.4" height="15.0" fill="rgb(243,89,46)" rx="2" ry="2" />
<text  x="23.78" y="415.5" >ctx_resched</text>
</g>
<g >
<title>native_irq_return_iret (3 samples, 1.37%)</title><rect x="678.1" y="645" width="16.2" height="15.0" fill="rgb(214,21,54)" rx="2" ry="2" />
<text  x="681.13" y="655.5" ></text>
</g>
<g >
<title>cpu_startup_entry (4 samples, 1.83%)</title><rect x="1168.4" y="581" width="21.6" height="15.0" fill="rgb(237,219,46)" rx="2" ry="2" />
<text  x="1171.45" y="591.5" >c..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.46%)</title><rect x="807.4" y="277" width="5.4" height="15.0" fill="rgb(241,216,22)" rx="2" ry="2" />
<text  x="810.44" y="287.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="737.4" y="501" width="21.5" height="15.0" fill="rgb(232,199,3)" rx="2" ry="2" />
<text  x="740.40" y="511.5" >P..</text>
</g>
<g >
<title>exit_to_usermode_loop (8 samples, 3.65%)</title><rect x="812.8" y="629" width="43.1" height="15.0" fill="rgb(243,38,9)" rx="2" ry="2" />
<text  x="815.83" y="639.5" >exit..</text>
</g>
<g >
<title>handle_mm_fault (3 samples, 1.37%)</title><rect x="613.5" y="229" width="16.1" height="15.0" fill="rgb(221,9,49)" rx="2" ry="2" />
<text  x="616.47" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.46%)</title><rect x="15.4" y="629" width="5.4" height="15.0" fill="rgb(243,36,50)" rx="2" ry="2" />
<text  x="18.39" y="639.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (63 samples, 28.77%)</title><rect x="20.8" y="645" width="339.4" height="15.0" fill="rgb(231,51,38)" rx="2" ry="2" />
<text  x="23.78" y="655.5" >perf_evsel__run_ioctl</text>
</g>
<g >
<title>truncate_inode_page (2 samples, 0.91%)</title><rect x="845.2" y="357" width="10.7" height="15.0" fill="rgb(226,189,30)" rx="2" ry="2" />
<text  x="848.16" y="367.5" ></text>
</g>
<g >
<title>PyNode_AddChild (1 samples, 0.46%)</title><rect x="769.7" y="261" width="5.4" height="15.0" fill="rgb(224,90,15)" rx="2" ry="2" />
<text  x="772.73" y="271.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (6 samples, 2.74%)</title><rect x="775.1" y="501" width="32.3" height="15.0" fill="rgb(233,175,29)" rx="2" ry="2" />
<text  x="778.11" y="511.5" >Py..</text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 1.37%)</title><rect x="424.9" y="549" width="16.2" height="15.0" fill="rgb(205,8,20)" rx="2" ry="2" />
<text  x="427.89" y="559.5" ></text>
</g>
<g >
<title>[_collections.so] (3 samples, 1.37%)</title><rect x="613.5" y="341" width="16.1" height="15.0" fill="rgb(230,97,20)" rx="2" ry="2" />
<text  x="616.47" y="351.5" ></text>
</g>
<g >
<title>event_function_call (63 samples, 28.77%)</title><rect x="20.8" y="501" width="339.4" height="15.0" fill="rgb(205,212,27)" rx="2" ry="2" />
<text  x="23.78" y="511.5" >event_function_call</text>
</g>
<g >
<title>sel_ldr (92 samples, 42.01%)</title><rect x="360.2" y="677" width="495.7" height="15.0" fill="rgb(238,99,23)" rx="2" ry="2" />
<text  x="363.23" y="687.5" >sel_ldr</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (63 samples, 28.77%)</title><rect x="20.8" y="357" width="339.4" height="15.0" fill="rgb(207,143,46)" rx="2" ry="2" />
<text  x="23.78" y="367.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="608.1" y="437" width="21.5" height="15.0" fill="rgb(242,176,48)" rx="2" ry="2" />
<text  x="611.08" y="447.5" >P..</text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.46%)</title><rect x="726.6" y="565" width="5.4" height="15.0" fill="rgb(238,90,26)" rx="2" ry="2" />
<text  x="729.62" y="575.5" ></text>
</g>
<g >
<title>do_group_exit (8 samples, 3.65%)</title><rect x="812.8" y="581" width="43.1" height="15.0" fill="rgb(231,43,21)" rx="2" ry="2" />
<text  x="815.83" y="591.5" >do_g..</text>
</g>
<g >
<title>perf_ioctl (63 samples, 28.77%)</title><rect x="20.8" y="549" width="339.4" height="15.0" fill="rgb(208,26,46)" rx="2" ry="2" />
<text  x="23.78" y="559.5" >perf_ioctl</text>
</g>
<g >
<title>page_fault (10 samples, 4.57%)</title><rect x="414.1" y="629" width="53.9" height="15.0" fill="rgb(240,73,12)" rx="2" ry="2" />
<text  x="417.11" y="639.5" >page_..</text>
</g>
<g >
<title>error_entry (1 samples, 0.46%)</title><rect x="397.9" y="629" width="5.4" height="15.0" fill="rgb(205,152,9)" rx="2" ry="2" />
<text  x="400.95" y="639.5" ></text>
</g>
<g >
<title>type_call.lto_priv.0 (1 samples, 0.46%)</title><rect x="753.6" y="357" width="5.3" height="15.0" fill="rgb(221,163,4)" rx="2" ry="2" />
<text  x="756.56" y="367.5" ></text>
</g>
<g >
<title>compiler_visit_stmt (1 samples, 0.46%)</title><rect x="764.3" y="277" width="5.4" height="15.0" fill="rgb(206,179,10)" rx="2" ry="2" />
<text  x="767.34" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 3.20%)</title><rect x="694.3" y="581" width="37.7" height="15.0" fill="rgb(241,137,5)" rx="2" ry="2" />
<text  x="697.29" y="591.5" >__h..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (6 samples, 2.74%)</title><rect x="775.1" y="565" width="32.3" height="15.0" fill="rgb(218,116,38)" rx="2" ry="2" />
<text  x="778.11" y="575.5" >Py..</text>
</g>
<g >
<title>PyImport_ImportModuleLevel (1 samples, 0.46%)</title><rect x="807.4" y="197" width="5.4" height="15.0" fill="rgb(241,88,52)" rx="2" ry="2" />
<text  x="810.44" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.46%)</title><rect x="15.4" y="613" width="5.4" height="15.0" fill="rgb(216,58,48)" rx="2" ry="2" />
<text  x="18.39" y="623.5" ></text>
</g>
<g >
<title>PyObject_Str (1 samples, 0.46%)</title><rect x="753.6" y="325" width="5.3" height="15.0" fill="rgb(215,46,33)" rx="2" ry="2" />
<text  x="756.56" y="335.5" ></text>
</g>
<g >
<title>LindPythonInit (10 samples, 4.57%)</title><rect x="758.9" y="597" width="53.9" height="15.0" fill="rgb(252,175,42)" rx="2" ry="2" />
<text  x="761.95" y="607.5" >LindP..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.46%)</title><rect x="807.4" y="261" width="5.4" height="15.0" fill="rgb(231,11,45)" rx="2" ry="2" />
<text  x="810.44" y="271.5" ></text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.46%)</title><rect x="758.9" y="261" width="5.4" height="15.0" fill="rgb(227,134,23)" rx="2" ry="2" />
<text  x="761.95" y="271.5" ></text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.46%)</title><rect x="807.4" y="69" width="5.4" height="15.0" fill="rgb(251,44,11)" rx="2" ry="2" />
<text  x="810.44" y="79.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.46%)</title><rect x="888.3" y="661" width="5.4" height="15.0" fill="rgb(215,40,42)" rx="2" ry="2" />
<text  x="891.26" y="671.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.46%)</title><rect x="15.4" y="661" width="5.4" height="15.0" fill="rgb(246,88,12)" rx="2" ry="2" />
<text  x="18.39" y="671.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 1.37%)</title><rect x="591.9" y="453" width="16.2" height="15.0" fill="rgb(235,14,30)" rx="2" ry="2" />
<text  x="594.92" y="463.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="608.1" y="469" width="21.5" height="15.0" fill="rgb(222,168,16)" rx="2" ry="2" />
<text  x="611.08" y="479.5" >P..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 1.37%)</title><rect x="758.9" y="357" width="16.2" height="15.0" fill="rgb(251,171,3)" rx="2" ry="2" />
<text  x="761.95" y="367.5" ></text>
</g>
<g >
<title>type_new.lto_priv.0 (1 samples, 0.46%)</title><rect x="748.2" y="293" width="5.4" height="15.0" fill="rgb(246,115,38)" rx="2" ry="2" />
<text  x="751.17" y="303.5" ></text>
</g>
<g >
<title>cpuidle_enter (50 samples, 22.83%)</title><rect x="893.7" y="581" width="269.4" height="15.0" fill="rgb(225,42,7)" rx="2" ry="2" />
<text  x="896.65" y="591.5" >cpuidle_enter</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.46%)</title><rect x="807.4" y="117" width="5.4" height="15.0" fill="rgb(253,220,49)" rx="2" ry="2" />
<text  x="810.44" y="127.5" ></text>
</g>
<g >
<title>iter_iternext.lto_priv.0 (1 samples, 0.46%)</title><rect x="608.1" y="325" width="5.4" height="15.0" fill="rgb(217,217,39)" rx="2" ry="2" />
<text  x="611.08" y="335.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.46%)</title><rect x="710.5" y="533" width="5.3" height="15.0" fill="rgb(249,166,46)" rx="2" ry="2" />
<text  x="713.46" y="543.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.91%)</title><rect x="618.9" y="197" width="10.7" height="15.0" fill="rgb(231,181,17)" rx="2" ry="2" />
<text  x="621.86" y="207.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="737.4" y="405" width="21.5" height="15.0" fill="rgb(250,54,40)" rx="2" ry="2" />
<text  x="740.40" y="415.5" >P..</text>
</g>
<g >
<title>__dec_node_page_state (1 samples, 0.46%)</title><rect x="818.2" y="453" width="5.4" height="15.0" fill="rgb(240,174,16)" rx="2" ry="2" />
<text  x="821.22" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 3.65%)</title><rect x="812.8" y="645" width="43.1" height="15.0" fill="rgb(250,200,30)" rx="2" ry="2" />
<text  x="815.83" y="655.5" >do_s..</text>
</g>
<g >
<title>NaClHostDescMap (1 samples, 0.46%)</title><rect x="586.5" y="549" width="5.4" height="15.0" fill="rgb(232,54,49)" rx="2" ry="2" />
<text  x="589.53" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="608.1" y="453" width="21.5" height="15.0" fill="rgb(254,53,5)" rx="2" ry="2" />
<text  x="611.08" y="463.5" >P..</text>
</g>
<g >
<title>perf_evsel__enable_cpu (63 samples, 28.77%)</title><rect x="20.8" y="661" width="339.4" height="15.0" fill="rgb(253,25,34)" rx="2" ry="2" />
<text  x="23.78" y="671.5" >perf_evsel__enable_cpu</text>
</g>
<g >
<title>PyString_FromStringAndSize (1 samples, 0.46%)</title><rect x="802.1" y="357" width="5.3" height="15.0" fill="rgb(231,57,34)" rx="2" ry="2" />
<text  x="805.05" y="367.5" ></text>
</g>
<g >
<title>NaClVmCopyEntry (13 samples, 5.94%)</title><rect x="397.9" y="661" width="70.1" height="15.0" fill="rgb(245,97,49)" rx="2" ry="2" />
<text  x="400.95" y="671.5" >NaClVmC..</text>
</g>
<g >
<title>PyObject_Call (3 samples, 1.37%)</title><rect x="758.9" y="405" width="16.2" height="15.0" fill="rgb(226,70,51)" rx="2" ry="2" />
<text  x="761.95" y="415.5" ></text>
</g>
<g >
<title>type_new.lto_priv.0 (1 samples, 0.46%)</title><rect x="758.9" y="229" width="5.4" height="15.0" fill="rgb(209,169,37)" rx="2" ry="2" />
<text  x="761.95" y="239.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 0.91%)</title><rect x="796.7" y="437" width="10.7" height="15.0" fill="rgb(211,45,51)" rx="2" ry="2" />
<text  x="799.67" y="447.5" ></text>
</g>
<g >
<title>__fput (2 samples, 0.91%)</title><rect x="845.2" y="517" width="10.7" height="15.0" fill="rgb(221,134,5)" rx="2" ry="2" />
<text  x="848.16" y="527.5" ></text>
</g>
<g >
<title>NaClDescIoDescMap (1 samples, 0.46%)</title><rect x="586.5" y="565" width="5.4" height="15.0" fill="rgb(251,79,3)" rx="2" ry="2" />
<text  x="589.53" y="575.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (4 samples, 1.83%)</title><rect x="823.6" y="469" width="21.6" height="15.0" fill="rgb(248,88,32)" rx="2" ry="2" />
<text  x="826.61" y="479.5" >t..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="775.1" y="421" width="21.6" height="15.0" fill="rgb(208,164,13)" rx="2" ry="2" />
<text  x="778.11" y="431.5" >P..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (6 samples, 2.74%)</title><rect x="775.1" y="517" width="32.3" height="15.0" fill="rgb(215,135,11)" rx="2" ry="2" />
<text  x="778.11" y="527.5" >Py..</text>
</g>
<g >
<title>NaClVmCopyEntry (16 samples, 7.31%)</title><rect x="494.9" y="501" width="86.2" height="15.0" fill="rgb(215,88,34)" rx="2" ry="2" />
<text  x="497.93" y="511.5" >NaClVmCopy..</text>
</g>
<g >
<title>PyObject_CallFunction (1 samples, 0.46%)</title><rect x="758.9" y="277" width="5.4" height="15.0" fill="rgb(239,31,27)" rx="2" ry="2" />
<text  x="761.95" y="287.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="737.4" y="453" width="21.5" height="15.0" fill="rgb(248,77,4)" rx="2" ry="2" />
<text  x="740.40" y="463.5" >P..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="737.4" y="469" width="21.5" height="15.0" fill="rgb(228,196,9)" rx="2" ry="2" />
<text  x="740.40" y="479.5" >P..</text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.46%)</title><rect x="888.3" y="565" width="5.4" height="15.0" fill="rgb(246,92,30)" rx="2" ry="2" />
<text  x="891.26" y="575.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.34 (1 samples, 0.46%)</title><rect x="15.4" y="437" width="5.4" height="15.0" fill="rgb(233,144,30)" rx="2" ry="2" />
<text  x="18.39" y="447.5" ></text>
</g>
<g >
<title>LindPythonFinalize (4 samples, 1.83%)</title><rect x="737.4" y="597" width="21.5" height="15.0" fill="rgb(248,206,49)" rx="2" ry="2" />
<text  x="740.40" y="607.5" >L..</text>
</g>
<g >
<title>__dec_node_state (1 samples, 0.46%)</title><rect x="818.2" y="437" width="5.4" height="15.0" fill="rgb(207,131,47)" rx="2" ry="2" />
<text  x="821.22" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (8 samples, 3.65%)</title><rect x="694.3" y="597" width="43.1" height="15.0" fill="rgb(224,30,51)" rx="2" ry="2" />
<text  x="697.29" y="607.5" >hand..</text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.46%)</title><rect x="1157.7" y="517" width="5.4" height="15.0" fill="rgb(214,173,16)" rx="2" ry="2" />
<text  x="1160.67" y="527.5" ></text>
</g>
<g >
<title>__dentry_kill (2 samples, 0.91%)</title><rect x="845.2" y="469" width="10.7" height="15.0" fill="rgb(250,83,19)" rx="2" ry="2" />
<text  x="848.16" y="479.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 28.77%)</title><rect x="20.8" y="373" width="339.4" height="15.0" fill="rgb(220,225,45)" rx="2" ry="2" />
<text  x="23.78" y="383.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>sync_regs (1 samples, 0.46%)</title><rect x="672.7" y="629" width="5.4" height="15.0" fill="rgb(222,123,45)" rx="2" ry="2" />
<text  x="675.74" y="639.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="737.4" y="485" width="21.5" height="15.0" fill="rgb(222,95,7)" rx="2" ry="2" />
<text  x="740.40" y="495.5" >P..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (3 samples, 1.37%)</title><rect x="591.9" y="389" width="16.2" height="15.0" fill="rgb(208,121,27)" rx="2" ry="2" />
<text  x="594.92" y="399.5" ></text>
</g>
<g >
<title>string_split.lto_priv.0 (1 samples, 0.46%)</title><rect x="802.1" y="373" width="5.3" height="15.0" fill="rgb(233,86,9)" rx="2" ry="2" />
<text  x="805.05" y="383.5" ></text>
</g>
<g >
<title>PyFrame_New (1 samples, 0.46%)</title><rect x="737.4" y="373" width="5.4" height="15.0" fill="rgb(223,138,29)" rx="2" ry="2" />
<text  x="740.40" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.46%)</title><rect x="796.7" y="373" width="5.4" height="15.0" fill="rgb(211,209,6)" rx="2" ry="2" />
<text  x="799.67" y="383.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 1.37%)</title><rect x="424.9" y="517" width="16.2" height="15.0" fill="rgb(214,71,51)" rx="2" ry="2" />
<text  x="427.89" y="527.5" ></text>
</g>
<g >
<title>function_call.lto_priv.0 (4 samples, 1.83%)</title><rect x="608.1" y="501" width="21.5" height="15.0" fill="rgb(225,84,24)" rx="2" ry="2" />
<text  x="611.08" y="511.5" >f..</text>
</g>
<g >
<title>PyImport_ExecCodeModuleEx (1 samples, 0.46%)</title><rect x="807.4" y="469" width="5.4" height="15.0" fill="rgb(246,135,23)" rx="2" ry="2" />
<text  x="810.44" y="479.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (1 samples, 0.46%)</title><rect x="845.2" y="309" width="5.3" height="15.0" fill="rgb(212,65,14)" rx="2" ry="2" />
<text  x="848.16" y="319.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.46%)</title><rect x="893.7" y="501" width="5.3" height="15.0" fill="rgb(235,142,9)" rx="2" ry="2" />
<text  x="896.65" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 3.65%)</title><rect x="812.8" y="661" width="43.1" height="15.0" fill="rgb(223,4,26)" rx="2" ry="2" />
<text  x="815.83" y="671.5" >entr..</text>
</g>
<g >
<title>sys_write (1 samples, 0.46%)</title><rect x="888.3" y="629" width="5.4" height="15.0" fill="rgb(254,217,4)" rx="2" ry="2" />
<text  x="891.26" y="639.5" ></text>
</g>
<g >
<title>get_signal (8 samples, 3.65%)</title><rect x="812.8" y="597" width="43.1" height="15.0" fill="rgb(244,59,33)" rx="2" ry="2" />
<text  x="815.83" y="607.5" >get_..</text>
</g>
<g >
<title>start_secondary (51 samples, 23.29%)</title><rect x="893.7" y="645" width="274.7" height="15.0" fill="rgb(244,11,11)" rx="2" ry="2" />
<text  x="896.65" y="655.5" >start_secondary</text>
</g>
<g >
<title>builtin___import__.lto_priv.0 (1 samples, 0.46%)</title><rect x="807.4" y="373" width="5.4" height="15.0" fill="rgb(236,166,18)" rx="2" ry="2" />
<text  x="810.44" y="383.5" ></text>
</g>
<g >
<title>sys_write (1 samples, 0.46%)</title><rect x="15.4" y="597" width="5.4" height="15.0" fill="rgb(228,135,49)" rx="2" ry="2" />
<text  x="18.39" y="607.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (17 samples, 7.76%)</title><rect x="494.9" y="629" width="91.6" height="15.0" fill="rgb(212,143,22)" rx="2" ry="2" />
<text  x="497.93" y="639.5" >NaClSysFor..</text>
</g>
<g >
<title>filemap_map_pages (2 samples, 0.91%)</title><rect x="441.1" y="549" width="10.7" height="15.0" fill="rgb(211,105,6)" rx="2" ry="2" />
<text  x="444.05" y="559.5" ></text>
</g>
<g >
<title>smp_call_function_single (63 samples, 28.77%)</title><rect x="20.8" y="485" width="339.4" height="15.0" fill="rgb(242,195,43)" rx="2" ry="2" />
<text  x="23.78" y="495.5" >smp_call_function_single</text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (3 samples, 1.37%)</title><rect x="478.8" y="565" width="16.1" height="15.0" fill="rgb(223,98,7)" rx="2" ry="2" />
<text  x="481.77" y="575.5" ></text>
</g>
<g >
<title>make_type (1 samples, 0.46%)</title><rect x="758.9" y="293" width="5.4" height="15.0" fill="rgb(248,134,20)" rx="2" ry="2" />
<text  x="761.95" y="303.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.46%)</title><rect x="893.7" y="549" width="5.3" height="15.0" fill="rgb(236,63,41)" rx="2" ry="2" />
<text  x="896.65" y="559.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.46%)</title><rect x="451.8" y="549" width="5.4" height="15.0" fill="rgb(206,96,19)" rx="2" ry="2" />
<text  x="454.83" y="559.5" ></text>
</g>
<g >
<title>_perf_event_enable (63 samples, 28.77%)</title><rect x="20.8" y="517" width="339.4" height="15.0" fill="rgb(220,33,6)" rx="2" ry="2" />
<text  x="23.78" y="527.5" >_perf_event_enable</text>
</g>
<g >
<title>Py_CompileStringFlags (2 samples, 0.91%)</title><rect x="764.3" y="325" width="10.8" height="15.0" fill="rgb(215,142,52)" rx="2" ry="2" />
<text  x="767.34" y="335.5" ></text>
</g>
<g >
<title>unmap_vmas (6 samples, 2.74%)</title><rect x="812.8" y="517" width="32.4" height="15.0" fill="rgb(240,53,51)" rx="2" ry="2" />
<text  x="815.83" y="527.5" >un..</text>
</g>
<g >
<title>do_signal (8 samples, 3.65%)</title><rect x="812.8" y="613" width="43.1" height="15.0" fill="rgb(233,191,17)" rx="2" ry="2" />
<text  x="815.83" y="623.5" >do_s..</text>
</g>
<g >
<title>compiler_visit_stmt (1 samples, 0.46%)</title><rect x="764.3" y="261" width="5.4" height="15.0" fill="rgb(241,163,41)" rx="2" ry="2" />
<text  x="767.34" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (9 samples, 4.11%)</title><rect x="414.1" y="581" width="48.5" height="15.0" fill="rgb(230,109,40)" rx="2" ry="2" />
<text  x="417.11" y="591.5" >hand..</text>
</g>
<g >
<title>PyObject_Malloc (1 samples, 0.46%)</title><rect x="764.3" y="229" width="5.4" height="15.0" fill="rgb(238,0,33)" rx="2" ry="2" />
<text  x="767.34" y="239.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.46%)</title><rect x="586.5" y="437" width="5.4" height="15.0" fill="rgb(219,90,39)" rx="2" ry="2" />
<text  x="589.53" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 1.37%)</title><rect x="710.5" y="549" width="16.1" height="15.0" fill="rgb(213,27,35)" rx="2" ry="2" />
<text  x="713.46" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 1.37%)</title><rect x="780.5" y="325" width="16.2" height="15.0" fill="rgb(227,45,18)" rx="2" ry="2" />
<text  x="783.50" y="335.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.46%)</title><rect x="462.6" y="581" width="5.4" height="15.0" fill="rgb(217,199,5)" rx="2" ry="2" />
<text  x="465.60" y="591.5" ></text>
</g>
<g >
<title>__libc_start_main (14 samples, 6.39%)</title><rect x="737.4" y="645" width="75.4" height="15.0" fill="rgb(220,66,17)" rx="2" ry="2" />
<text  x="740.40" y="655.5" >__libc_s..</text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.46%)</title><rect x="15.4" y="533" width="5.4" height="15.0" fill="rgb(215,68,17)" rx="2" ry="2" />
<text  x="18.39" y="543.5" ></text>
</g>
<g >
<title>_PyObject_Str (1 samples, 0.46%)</title><rect x="753.6" y="309" width="5.3" height="15.0" fill="rgb(214,39,28)" rx="2" ry="2" />
<text  x="756.56" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.46%)</title><rect x="888.3" y="645" width="5.4" height="15.0" fill="rgb(241,59,4)" rx="2" ry="2" />
<text  x="891.26" y="655.5" ></text>
</g>
<g >
<title>function_call.lto_priv.0 (1 samples, 0.46%)</title><rect x="586.5" y="469" width="5.4" height="15.0" fill="rgb(238,68,3)" rx="2" ry="2" />
<text  x="589.53" y="479.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (3 samples, 1.37%)</title><rect x="478.8" y="629" width="16.1" height="15.0" fill="rgb(212,78,9)" rx="2" ry="2" />
<text  x="481.77" y="639.5" ></text>
</g>
<g >
<title>mmput (6 samples, 2.74%)</title><rect x="812.8" y="549" width="32.4" height="15.0" fill="rgb(248,1,16)" rx="2" ry="2" />
<text  x="815.83" y="559.5" >mm..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (4 samples, 1.83%)</title><rect x="737.4" y="517" width="21.5" height="15.0" fill="rgb(222,153,11)" rx="2" ry="2" />
<text  x="740.40" y="527.5" >P..</text>
</g>
<g >
<title>PyObject_Call (3 samples, 1.37%)</title><rect x="591.9" y="277" width="16.2" height="15.0" fill="rgb(213,163,5)" rx="2" ry="2" />
<text  x="594.92" y="287.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.46%)</title><rect x="15.4" y="485" width="5.4" height="15.0" fill="rgb(242,184,51)" rx="2" ry="2" />
<text  x="18.39" y="495.5" ></text>
</g>
<g >
<title>__vfs_write (1 samples, 0.46%)</title><rect x="15.4" y="565" width="5.4" height="15.0" fill="rgb(222,226,39)" rx="2" ry="2" />
<text  x="18.39" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (3 samples, 1.37%)</title><rect x="591.9" y="485" width="16.2" height="15.0" fill="rgb(253,78,8)" rx="2" ry="2" />
<text  x="594.92" y="495.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (4 samples, 1.83%)</title><rect x="608.1" y="581" width="21.5" height="15.0" fill="rgb(229,206,28)" rx="2" ry="2" />
<text  x="611.08" y="591.5" >N..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.46%)</title><rect x="807.4" y="421" width="5.4" height="15.0" fill="rgb(249,221,34)" rx="2" ry="2" />
<text  x="810.44" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (3 samples, 1.37%)</title><rect x="591.9" y="421" width="16.2" height="15.0" fill="rgb(212,37,1)" rx="2" ry="2" />
<text  x="594.92" y="431.5" ></text>
</g>
<g >
<title>function_call.lto_priv.0 (3 samples, 1.37%)</title><rect x="758.9" y="549" width="16.2" height="15.0" fill="rgb(215,46,28)" rx="2" ry="2" />
<text  x="761.95" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="608.1" y="405" width="21.5" height="15.0" fill="rgb(245,164,22)" rx="2" ry="2" />
<text  x="611.08" y="415.5" >P..</text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.46%)</title><rect x="462.6" y="501" width="5.4" height="15.0" fill="rgb(207,64,7)" rx="2" ry="2" />
<text  x="465.60" y="511.5" ></text>
</g>
<g >
<title>call_cpuidle (4 samples, 1.83%)</title><rect x="1168.4" y="549" width="21.6" height="15.0" fill="rgb(248,108,2)" rx="2" ry="2" />
<text  x="1171.45" y="559.5" >c..</text>
</g>
<g >
<title>security_file_permission (1 samples, 0.46%)</title><rect x="888.3" y="581" width="5.4" height="15.0" fill="rgb(209,117,12)" rx="2" ry="2" />
<text  x="891.26" y="591.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (3 samples, 1.37%)</title><rect x="478.8" y="597" width="16.1" height="15.0" fill="rgb(245,40,34)" rx="2" ry="2" />
<text  x="481.77" y="607.5" ></text>
</g>
<g >
<title>CallPythonFunc0 (4 samples, 1.83%)</title><rect x="737.4" y="581" width="21.5" height="15.0" fill="rgb(227,72,18)" rx="2" ry="2" />
<text  x="740.40" y="591.5" >C..</text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.46%)</title><rect x="753.6" y="373" width="5.3" height="15.0" fill="rgb(244,41,37)" rx="2" ry="2" />
<text  x="756.56" y="383.5" ></text>
</g>
<g >
<title>type_call.lto_priv.0 (1 samples, 0.46%)</title><rect x="758.9" y="245" width="5.4" height="15.0" fill="rgb(227,213,12)" rx="2" ry="2" />
<text  x="761.95" y="255.5" ></text>
</g>
<g >
<title>function_call.lto_priv.0 (3 samples, 1.37%)</title><rect x="591.9" y="501" width="16.2" height="15.0" fill="rgb(234,75,14)" rx="2" ry="2" />
<text  x="594.92" y="511.5" ></text>
</g>
<g >
<title>type_call.lto_priv.0 (1 samples, 0.46%)</title><rect x="748.2" y="309" width="5.4" height="15.0" fill="rgb(220,112,20)" rx="2" ry="2" />
<text  x="751.17" y="319.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (63 samples, 28.77%)</title><rect x="20.8" y="565" width="339.4" height="15.0" fill="rgb(209,1,20)" rx="2" ry="2" />
<text  x="23.78" y="575.5" >do_vfs_ioctl</text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 1.37%)</title><rect x="424.9" y="533" width="16.2" height="15.0" fill="rgb(254,180,9)" rx="2" ry="2" />
<text  x="427.89" y="543.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.46%)</title><rect x="893.7" y="533" width="5.3" height="15.0" fill="rgb(242,194,3)" rx="2" ry="2" />
<text  x="896.65" y="543.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (4 samples, 1.83%)</title><rect x="608.1" y="629" width="21.5" height="15.0" fill="rgb(254,108,51)" rx="2" ry="2" />
<text  x="611.08" y="639.5" >N..</text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (4 samples, 1.83%)</title><rect x="608.1" y="533" width="21.5" height="15.0" fill="rgb(237,156,37)" rx="2" ry="2" />
<text  x="611.08" y="543.5" >P..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="775.1" y="389" width="21.6" height="15.0" fill="rgb(208,48,45)" rx="2" ry="2" />
<text  x="778.11" y="399.5" >P..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 0.91%)</title><rect x="785.9" y="309" width="10.8" height="15.0" fill="rgb(225,1,10)" rx="2" ry="2" />
<text  x="788.89" y="319.5" ></text>
</g>
<g >
<title>CallPythonFunc (1 samples, 0.46%)</title><rect x="586.5" y="517" width="5.4" height="15.0" fill="rgb(238,3,4)" rx="2" ry="2" />
<text  x="589.53" y="527.5" ></text>
</g>
<g >
<title>all (219 samples, 100%)</title><rect x="10.0" y="693" width="1180.0" height="15.0" fill="rgb(237,184,48)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.46%)</title><rect x="15.4" y="421" width="5.4" height="15.0" fill="rgb(220,38,52)" rx="2" ry="2" />
<text  x="18.39" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevel (1 samples, 0.46%)</title><rect x="807.4" y="37" width="5.4" height="15.0" fill="rgb(214,111,1)" rx="2" ry="2" />
<text  x="810.44" y="47.5" ></text>
</g>
<g >
<title>rwsem_wake (1 samples, 0.46%)</title><rect x="462.6" y="549" width="5.4" height="15.0" fill="rgb(221,192,30)" rx="2" ry="2" />
<text  x="465.60" y="559.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.46%)</title><rect x="15.4" y="549" width="5.4" height="15.0" fill="rgb(222,95,54)" rx="2" ry="2" />
<text  x="18.39" y="559.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.46%)</title><rect x="807.4" y="437" width="5.4" height="15.0" fill="rgb(240,144,19)" rx="2" ry="2" />
<text  x="810.44" y="447.5" ></text>
</g>
<g >
<title>PyImport_ExecCodeModuleEx (1 samples, 0.46%)</title><rect x="807.4" y="149" width="5.4" height="15.0" fill="rgb(229,29,18)" rx="2" ry="2" />
<text  x="810.44" y="159.5" ></text>
</g>
<g >
<title>NaClPatchAddr (1 samples, 0.46%)</title><rect x="581.1" y="533" width="5.4" height="15.0" fill="rgb(248,146,30)" rx="2" ry="2" />
<text  x="584.14" y="543.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.46%)</title><rect x="802.1" y="341" width="5.3" height="15.0" fill="rgb(214,33,28)" rx="2" ry="2" />
<text  x="805.05" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.46%)</title><rect x="586.5" y="421" width="5.4" height="15.0" fill="rgb(233,188,29)" rx="2" ry="2" />
<text  x="589.53" y="431.5" ></text>
</g>
<g >
<title>event_function (63 samples, 28.77%)</title><rect x="20.8" y="437" width="339.4" height="15.0" fill="rgb(237,134,12)" rx="2" ry="2" />
<text  x="23.78" y="447.5" >event_function</text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (1 samples, 0.46%)</title><rect x="807.4" y="85" width="5.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="810.44" y="95.5" ></text>
</g>
<g >
<title>remote_function (63 samples, 28.77%)</title><rect x="20.8" y="453" width="339.4" height="15.0" fill="rgb(213,221,18)" rx="2" ry="2" />
<text  x="23.78" y="463.5" >remote_function</text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 0.91%)</title><rect x="796.7" y="421" width="10.7" height="15.0" fill="rgb(209,165,32)" rx="2" ry="2" />
<text  x="799.67" y="431.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.46%)</title><rect x="462.6" y="517" width="5.4" height="15.0" fill="rgb(207,142,17)" rx="2" ry="2" />
<text  x="465.60" y="527.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.46%)</title><rect x="893.7" y="485" width="5.3" height="15.0" fill="rgb(251,3,35)" rx="2" ry="2" />
<text  x="896.65" y="495.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.46%)</title><rect x="613.5" y="197" width="5.4" height="15.0" fill="rgb(243,129,35)" rx="2" ry="2" />
<text  x="616.47" y="207.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.46%)</title><rect x="586.5" y="405" width="5.4" height="15.0" fill="rgb(209,67,36)" rx="2" ry="2" />
<text  x="589.53" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevel (1 samples, 0.46%)</title><rect x="807.4" y="517" width="5.4" height="15.0" fill="rgb(227,59,33)" rx="2" ry="2" />
<text  x="810.44" y="527.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (1 samples, 0.46%)</title><rect x="796.7" y="309" width="5.4" height="15.0" fill="rgb(219,133,48)" rx="2" ry="2" />
<text  x="799.67" y="319.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.46%)</title><rect x="893.7" y="517" width="5.3" height="15.0" fill="rgb(253,152,52)" rx="2" ry="2" />
<text  x="896.65" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 3.65%)</title><rect x="538.0" y="485" width="43.1" height="15.0" fill="rgb(251,175,32)" rx="2" ry="2" />
<text  x="541.04" y="495.5" >__me..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.46%)</title><rect x="796.7" y="341" width="5.4" height="15.0" fill="rgb(233,164,21)" rx="2" ry="2" />
<text  x="799.67" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (6 samples, 2.74%)</title><rect x="775.1" y="533" width="32.3" height="15.0" fill="rgb(213,207,15)" rx="2" ry="2" />
<text  x="778.11" y="543.5" >Py..</text>
</g>
<g >
<title>NaClSysMmap (1 samples, 0.46%)</title><rect x="586.5" y="613" width="5.4" height="15.0" fill="rgb(254,169,17)" rx="2" ry="2" />
<text  x="589.53" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (3 samples, 1.37%)</title><rect x="758.9" y="533" width="16.2" height="15.0" fill="rgb(243,93,0)" rx="2" ry="2" />
<text  x="761.95" y="543.5" ></text>
</g>
<g >
<title>native_write_msr (47 samples, 21.46%)</title><rect x="63.9" y="341" width="253.2" height="15.0" fill="rgb(245,103,33)" rx="2" ry="2" />
<text  x="66.88" y="351.5" >native_write_msr</text>
</g>
<g >
<title>compiler_body (1 samples, 0.46%)</title><rect x="764.3" y="293" width="5.4" height="15.0" fill="rgb(240,214,42)" rx="2" ry="2" />
<text  x="767.34" y="303.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (4 samples, 1.83%)</title><rect x="608.1" y="389" width="21.5" height="15.0" fill="rgb(231,166,40)" rx="2" ry="2" />
<text  x="611.08" y="399.5" >P..</text>
</g>
<g >
<title>nmi_cpu_backtrace (7 samples, 3.20%)</title><rect x="317.1" y="341" width="37.7" height="15.0" fill="rgb(216,178,3)" rx="2" ry="2" />
<text  x="320.12" y="351.5" >nmi..</text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.46%)</title><rect x="613.5" y="165" width="5.4" height="15.0" fill="rgb(252,188,43)" rx="2" ry="2" />
<text  x="616.47" y="175.5" ></text>
</g>
<g >
<title>perf (65 samples, 29.68%)</title><rect x="10.0" y="677" width="350.2" height="15.0" fill="rgb(221,129,15)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >perf</text>
</g>
<g >
<title>nmi_cpu_backtrace_handler (1 samples, 0.46%)</title><rect x="354.8" y="341" width="5.4" height="15.0" fill="rgb(208,92,42)" rx="2" ry="2" />
<text  x="357.84" y="351.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 1.37%)</title><rect x="591.9" y="373" width="16.2" height="15.0" fill="rgb(209,47,23)" rx="2" ry="2" />
<text  x="594.92" y="383.5" ></text>
</g>
<g >
<title>load_next (1 samples, 0.46%)</title><rect x="807.4" y="181" width="5.4" height="15.0" fill="rgb(225,173,31)" rx="2" ry="2" />
<text  x="810.44" y="191.5" ></text>
</g>
<g >
<title>[unknown]  (20 samples, 9.13%)</title><rect x="629.6" y="661" width="107.8" height="15.0" fill="rgb(229,184,23)" rx="2" ry="2" />
<text  x="632.63" y="671.5" >[unknown] </text>
</g>
<g >
<title>call_rwsem_wake (1 samples, 0.46%)</title><rect x="462.6" y="565" width="5.4" height="15.0" fill="rgb(236,16,3)" rx="2" ry="2" />
<text  x="465.60" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 1.37%)</title><rect x="591.9" y="405" width="16.2" height="15.0" fill="rgb(209,86,0)" rx="2" ry="2" />
<text  x="594.92" y="415.5" ></text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.46%)</title><rect x="748.2" y="325" width="5.4" height="15.0" fill="rgb(246,106,16)" rx="2" ry="2" />
<text  x="751.17" y="335.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.46%)</title><rect x="586.5" y="389" width="5.4" height="15.0" fill="rgb(216,171,41)" rx="2" ry="2" />
<text  x="589.53" y="399.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (3 samples, 1.37%)</title><rect x="758.9" y="581" width="16.2" height="15.0" fill="rgb(208,5,46)" rx="2" ry="2" />
<text  x="761.95" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.46%)</title><rect x="796.7" y="325" width="5.4" height="15.0" fill="rgb(214,12,15)" rx="2" ry="2" />
<text  x="799.67" y="335.5" ></text>
</g>
<g >
<title>shmem_evict_inode (2 samples, 0.91%)</title><rect x="845.2" y="405" width="10.7" height="15.0" fill="rgb(236,22,40)" rx="2" ry="2" />
<text  x="848.16" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (4 samples, 1.83%)</title><rect x="775.1" y="405" width="21.6" height="15.0" fill="rgb(221,131,30)" rx="2" ry="2" />
<text  x="778.11" y="415.5" >P..</text>
</g>
<g >
<title>builtin___import__.lto_priv.0 (1 samples, 0.46%)</title><rect x="807.4" y="53" width="5.4" height="15.0" fill="rgb(245,54,25)" rx="2" ry="2" />
<text  x="810.44" y="63.5" ></text>
</g>
<g >
<title>string_join.lto_priv.0 (3 samples, 1.37%)</title><rect x="591.9" y="357" width="16.2" height="15.0" fill="rgb(217,215,4)" rx="2" ry="2" />
<text  x="594.92" y="367.5" ></text>
</g>
<g >
<title>iput (2 samples, 0.91%)</title><rect x="845.2" y="437" width="10.7" height="15.0" fill="rgb(236,134,42)" rx="2" ry="2" />
<text  x="848.16" y="447.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (4 samples, 1.83%)</title><rect x="737.4" y="565" width="21.5" height="15.0" fill="rgb(208,190,40)" rx="2" ry="2" />
<text  x="740.40" y="575.5" >P..</text>
</g>
<g >
<title>main (14 samples, 6.39%)</title><rect x="737.4" y="629" width="75.4" height="15.0" fill="rgb(212,189,38)" rx="2" ry="2" />
<text  x="740.40" y="639.5" >main</text>
</g>
<g >
<title>PyEval_EvalCodeEx (4 samples, 1.83%)</title><rect x="775.1" y="437" width="21.6" height="15.0" fill="rgb(236,197,50)" rx="2" ry="2" />
<text  x="778.11" y="447.5" >P..</text>
</g>
<g >
<title>secondary_startup_64 (55 samples, 25.11%)</title><rect x="893.7" y="661" width="296.3" height="15.0" fill="rgb(221,171,13)" rx="2" ry="2" />
<text  x="896.65" y="671.5" >secondary_startup_64</text>
</g>
<g >
<title>rest_init (4 samples, 1.83%)</title><rect x="1168.4" y="597" width="21.6" height="15.0" fill="rgb(217,112,47)" rx="2" ry="2" />
<text  x="1171.45" y="607.5" >r..</text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.46%)</title><rect x="1163.1" y="581" width="5.3" height="15.0" fill="rgb(250,165,25)" rx="2" ry="2" />
<text  x="1166.06" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.46%)</title><rect x="586.5" y="453" width="5.4" height="15.0" fill="rgb(228,63,40)" rx="2" ry="2" />
<text  x="589.53" y="463.5" ></text>
</g>
<g >
<title>intel_idle (48 samples, 21.92%)</title><rect x="899.0" y="549" width="258.7" height="15.0" fill="rgb(224,9,53)" rx="2" ry="2" />
<text  x="902.04" y="559.5" >intel_idle</text>
</g>
<g >
<title>vfs_write (1 samples, 0.46%)</title><rect x="888.3" y="613" width="5.4" height="15.0" fill="rgb(238,23,6)" rx="2" ry="2" />
<text  x="891.26" y="623.5" ></text>
</g>
<g >
<title>shmem_truncate_range (2 samples, 0.91%)</title><rect x="845.2" y="389" width="10.7" height="15.0" fill="rgb(235,181,13)" rx="2" ry="2" />
<text  x="848.16" y="399.5" ></text>
</g>
<g >
<title>exit_mmap (6 samples, 2.74%)</title><rect x="812.8" y="533" width="32.4" height="15.0" fill="rgb(218,89,18)" rx="2" ry="2" />
<text  x="815.83" y="543.5" >ex..</text>
</g>
<g >
<title>do_idle (4 samples, 1.83%)</title><rect x="1168.4" y="565" width="21.6" height="15.0" fill="rgb(205,228,10)" rx="2" ry="2" />
<text  x="1171.45" y="575.5" >d..</text>
</g>
<g >
<title>[sel_ldr] (28 samples, 12.79%)</title><rect x="478.8" y="661" width="150.8" height="15.0" fill="rgb(213,220,3)" rx="2" ry="2" />
<text  x="481.77" y="671.5" >[sel_ldr]</text>
</g>
<g >
<title>page_fault (8 samples, 3.65%)</title><rect x="694.3" y="645" width="43.1" height="15.0" fill="rgb(248,102,30)" rx="2" ry="2" />
<text  x="697.29" y="655.5" >page..</text>
</g>
<g >
<title>__do_page_fault (3 samples, 1.37%)</title><rect x="613.5" y="245" width="16.1" height="15.0" fill="rgb(241,213,15)" rx="2" ry="2" />
<text  x="616.47" y="255.5" ></text>
</g>
<g >
<title>unmap_page_range (6 samples, 2.74%)</title><rect x="812.8" y="485" width="32.4" height="15.0" fill="rgb(213,128,34)" rx="2" ry="2" />
<text  x="815.83" y="495.5" >un..</text>
</g>
<g >
<title>[itertools.so] (3 samples, 1.37%)</title><rect x="591.9" y="293" width="16.2" height="15.0" fill="rgb(251,9,16)" rx="2" ry="2" />
<text  x="594.92" y="303.5" ></text>
</g>
<g >
<title>PyString_FromStringAndSize (1 samples, 0.46%)</title><rect x="753.6" y="277" width="5.3" height="15.0" fill="rgb(221,117,51)" rx="2" ry="2" />
<text  x="756.56" y="287.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 0.91%)</title><rect x="796.7" y="389" width="10.7" height="15.0" fill="rgb(222,154,20)" rx="2" ry="2" />
<text  x="799.67" y="399.5" ></text>
</g>
<g >
<title>string_richcompare.lto_priv.0 (1 samples, 0.46%)</title><rect x="796.7" y="293" width="5.4" height="15.0" fill="rgb(225,69,42)" rx="2" ry="2" />
<text  x="799.67" y="303.5" ></text>
</g>
<g >
<title>NaClVmmapVisit (16 samples, 7.31%)</title><rect x="494.9" y="517" width="86.2" height="15.0" fill="rgb(221,105,52)" rx="2" ry="2" />
<text  x="497.93" y="527.5" >NaClVmmapV..</text>
</g>
<g >
<title>start_kernel (4 samples, 1.83%)</title><rect x="1168.4" y="613" width="21.6" height="15.0" fill="rgb(214,107,4)" rx="2" ry="2" />
<text  x="1171.45" y="623.5" >s..</text>
</g>
<g >
<title>cpuidle_enter_state (50 samples, 22.83%)</title><rect x="893.7" y="565" width="269.4" height="15.0" fill="rgb(251,10,35)" rx="2" ry="2" />
<text  x="896.65" y="575.5" >cpuidle_enter_state</text>
</g>
<g >
<title>PyType_IsSubtype (1 samples, 0.46%)</title><rect x="737.4" y="357" width="5.4" height="15.0" fill="rgb(214,222,12)" rx="2" ry="2" />
<text  x="740.40" y="367.5" ></text>
</g>
<g >
<title>NaClSysRead (3 samples, 1.37%)</title><rect x="591.9" y="613" width="16.2" height="15.0" fill="rgb(218,127,27)" rx="2" ry="2" />
<text  x="594.92" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 1.37%)</title><rect x="591.9" y="469" width="16.2" height="15.0" fill="rgb(247,40,22)" rx="2" ry="2" />
<text  x="594.92" y="479.5" ></text>
</g>
<g >
<title>function_call.lto_priv.0 (4 samples, 1.83%)</title><rect x="737.4" y="533" width="21.5" height="15.0" fill="rgb(242,137,39)" rx="2" ry="2" />
<text  x="740.40" y="543.5" >f..</text>
</g>
<g >
<title>dput (2 samples, 0.91%)</title><rect x="845.2" y="501" width="10.7" height="15.0" fill="rgb(236,86,34)" rx="2" ry="2" />
<text  x="848.16" y="511.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (2 samples, 0.91%)</title><rect x="834.4" y="389" width="10.8" height="15.0" fill="rgb(242,66,30)" rx="2" ry="2" />
<text  x="837.38" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter (4 samples, 1.83%)</title><rect x="1168.4" y="533" width="21.6" height="15.0" fill="rgb(215,152,36)" rx="2" ry="2" />
<text  x="1171.45" y="543.5" >c..</text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.46%)</title><rect x="624.2" y="149" width="5.4" height="15.0" fill="rgb(212,31,23)" rx="2" ry="2" />
<text  x="627.25" y="159.5" ></text>
</g>
<g >
<title>PyIter_Next (1 samples, 0.46%)</title><rect x="608.1" y="341" width="5.4" height="15.0" fill="rgb(249,166,47)" rx="2" ry="2" />
<text  x="611.08" y="351.5" ></text>
</g>
<g >
<title>do_idle (51 samples, 23.29%)</title><rect x="893.7" y="613" width="274.7" height="15.0" fill="rgb(208,164,10)" rx="2" ry="2" />
<text  x="896.65" y="623.5" >do_idle</text>
</g>
<g >
<title>PyObject_Call (1 samples, 0.46%)</title><rect x="807.4" y="549" width="5.4" height="15.0" fill="rgb(218,161,21)" rx="2" ry="2" />
<text  x="810.44" y="559.5" ></text>
</g>
<g >
<title>cpu_startup_entry (51 samples, 23.29%)</title><rect x="893.7" y="629" width="274.7" height="15.0" fill="rgb(216,49,39)" rx="2" ry="2" />
<text  x="896.65" y="639.5" >cpu_startup_entry</text>
</g>
<g >
<title>PyObject_Call (3 samples, 1.37%)</title><rect x="758.9" y="565" width="16.2" height="15.0" fill="rgb(245,202,39)" rx="2" ry="2" />
<text  x="761.95" y="575.5" ></text>
</g>
<g >
<title>instancemethod_call.lto_priv.0 (3 samples, 1.37%)</title><rect x="758.9" y="421" width="16.2" height="15.0" fill="rgb(248,221,3)" rx="2" ry="2" />
<text  x="761.95" y="431.5" ></text>
</g>
<g >
<title>PySequence_List (3 samples, 1.37%)</title><rect x="591.9" y="325" width="16.2" height="15.0" fill="rgb(247,56,20)" rx="2" ry="2" />
<text  x="594.92" y="335.5" ></text>
</g>
<g >
<title>NaClSysWrite (4 samples, 1.83%)</title><rect x="608.1" y="613" width="21.5" height="15.0" fill="rgb(247,198,39)" rx="2" ry="2" />
<text  x="611.08" y="623.5" >N..</text>
</g>
<g >
<title>builtin___import__.lto_priv.0 (1 samples, 0.46%)</title><rect x="807.4" y="213" width="5.4" height="15.0" fill="rgb(219,90,51)" rx="2" ry="2" />
<text  x="810.44" y="223.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 0.91%)</title><rect x="785.9" y="293" width="10.8" height="15.0" fill="rgb(222,58,37)" rx="2" ry="2" />
<text  x="788.89" y="303.5" ></text>
</g>
<g >
<title>page_remove_rmap (2 samples, 0.91%)</title><rect x="812.8" y="469" width="10.8" height="15.0" fill="rgb(225,196,23)" rx="2" ry="2" />
<text  x="815.83" y="479.5" ></text>
</g>
<g >
<title>put_prev_task_idle (1 samples, 0.46%)</title><rect x="1163.1" y="565" width="5.3" height="15.0" fill="rgb(241,67,44)" rx="2" ry="2" />
<text  x="1166.06" y="575.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.46%)</title><rect x="15.4" y="501" width="5.4" height="15.0" fill="rgb(212,84,52)" rx="2" ry="2" />
<text  x="18.39" y="511.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (3 samples, 1.37%)</title><rect x="591.9" y="533" width="16.2" height="15.0" fill="rgb(246,104,41)" rx="2" ry="2" />
<text  x="594.92" y="543.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (4 samples, 1.83%)</title><rect x="1168.4" y="645" width="21.6" height="15.0" fill="rgb(220,184,20)" rx="2" ry="2" />
<text  x="1171.45" y="655.5" >x..</text>
</g>
<g >
<title>native_irq_return_iret (2 samples, 0.91%)</title><rect x="403.3" y="629" width="10.8" height="15.0" fill="rgb(241,116,25)" rx="2" ry="2" />
<text  x="406.33" y="639.5" ></text>
</g>
<g >
<title>function_call.lto_priv.0 (3 samples, 1.37%)</title><rect x="758.9" y="389" width="16.2" height="15.0" fill="rgb(238,165,43)" rx="2" ry="2" />
<text  x="761.95" y="399.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (1 samples, 0.46%)</title><rect x="850.5" y="341" width="5.4" height="15.0" fill="rgb(222,88,24)" rx="2" ry="2" />
<text  x="853.55" y="351.5" ></text>
</g>
<g >
<title>PyObject_Call (3 samples, 1.37%)</title><rect x="758.9" y="485" width="16.2" height="15.0" fill="rgb(210,97,11)" rx="2" ry="2" />
<text  x="761.95" y="495.5" ></text>
</g>
<g >
<title>shmem_undo_range (2 samples, 0.91%)</title><rect x="845.2" y="373" width="10.7" height="15.0" fill="rgb(246,114,45)" rx="2" ry="2" />
<text  x="848.16" y="383.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.46%)</title><rect x="888.3" y="597" width="5.4" height="15.0" fill="rgb(247,17,40)" rx="2" ry="2" />
<text  x="891.26" y="607.5" ></text>
</g>
<g >
<title>generic_exec_single (63 samples, 28.77%)</title><rect x="20.8" y="469" width="339.4" height="15.0" fill="rgb(216,169,3)" rx="2" ry="2" />
<text  x="23.78" y="479.5" >generic_exec_single</text>
</g>
<g >
<title>do_exit (8 samples, 3.65%)</title><rect x="812.8" y="565" width="43.1" height="15.0" fill="rgb(230,53,13)" rx="2" ry="2" />
<text  x="815.83" y="575.5" >do_e..</text>
</g>
<g >
<title>sync_regs (1 samples, 0.46%)</title><rect x="397.9" y="613" width="5.4" height="15.0" fill="rgb(234,227,30)" rx="2" ry="2" />
<text  x="400.95" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCodeEx (6 samples, 2.74%)</title><rect x="775.1" y="485" width="32.3" height="15.0" fill="rgb(232,161,16)" rx="2" ry="2" />
<text  x="778.11" y="495.5" >Py..</text>
</g>
<g >
<title>PyEval_EvalFrameEx (6 samples, 2.74%)</title><rect x="775.1" y="549" width="32.3" height="15.0" fill="rgb(224,6,35)" rx="2" ry="2" />
<text  x="778.11" y="559.5" >Py..</text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.91%)</title><rect x="715.8" y="533" width="10.8" height="15.0" fill="rgb(211,168,40)" rx="2" ry="2" />
<text  x="718.84" y="543.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.46%)</title><rect x="15.4" y="469" width="5.4" height="15.0" fill="rgb(225,159,24)" rx="2" ry="2" />
<text  x="18.39" y="479.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (4 samples, 1.83%)</title><rect x="1168.4" y="629" width="21.6" height="15.0" fill="rgb(254,218,10)" rx="2" ry="2" />
<text  x="1171.45" y="639.5" >x..</text>
</g>
<g >
<title>_int_malloc (3 samples, 1.37%)</title><rect x="613.5" y="309" width="16.1" height="15.0" fill="rgb(224,18,17)" rx="2" ry="2" />
<text  x="616.47" y="319.5" ></text>
</g>
<g >
<title>__delete_from_page_cache (1 samples, 0.46%)</title><rect x="845.2" y="325" width="5.3" height="15.0" fill="rgb(218,45,4)" rx="2" ry="2" />
<text  x="848.16" y="335.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 1.37%)</title><rect x="829.0" y="437" width="16.2" height="15.0" fill="rgb(211,191,23)" rx="2" ry="2" />
<text  x="832.00" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 1.37%)</title><rect x="758.9" y="517" width="16.2" height="15.0" fill="rgb(210,201,4)" rx="2" ry="2" />
<text  x="761.95" y="527.5" ></text>
</g>
<g >
<title>pfn_pte (1 samples, 0.46%)</title><rect x="732.0" y="581" width="5.4" height="15.0" fill="rgb(209,63,42)" rx="2" ry="2" />
<text  x="735.01" y="591.5" ></text>
</g>
<g >
<title>pmd_devmap_trans_unstable (1 samples, 0.46%)</title><rect x="457.2" y="549" width="5.4" height="15.0" fill="rgb(244,87,25)" rx="2" ry="2" />
<text  x="460.21" y="559.5" ></text>
</g>
<g >
<title>load_source_module (1 samples, 0.46%)</title><rect x="807.4" y="325" width="5.4" height="15.0" fill="rgb(231,187,28)" rx="2" ry="2" />
<text  x="810.44" y="335.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (14 samples, 6.39%)</title><rect x="737.4" y="613" width="75.4" height="15.0" fill="rgb(246,96,9)" rx="2" ry="2" />
<text  x="740.40" y="623.5" >NaClSelL..</text>
</g>
<g >
<title>CallPythonFunc (3 samples, 1.37%)</title><rect x="591.9" y="549" width="16.2" height="15.0" fill="rgb(240,140,24)" rx="2" ry="2" />
<text  x="594.92" y="559.5" ></text>
</g>
<g >
<title>__do_page_fault (10 samples, 4.57%)</title><rect x="414.1" y="597" width="53.9" height="15.0" fill="rgb(237,164,35)" rx="2" ry="2" />
<text  x="417.11" y="607.5" >__do_..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (1 samples, 0.46%)</title><rect x="737.4" y="389" width="5.4" height="15.0" fill="rgb(223,210,46)" rx="2" ry="2" />
<text  x="740.40" y="399.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (6 samples, 2.74%)</title><rect x="775.1" y="453" width="32.3" height="15.0" fill="rgb(245,149,49)" rx="2" ry="2" />
<text  x="778.11" y="463.5" >Py..</text>
</g>
<g >
<title>dentry_unlink_inode (2 samples, 0.91%)</title><rect x="845.2" y="453" width="10.7" height="15.0" fill="rgb(213,88,20)" rx="2" ry="2" />
<text  x="848.16" y="463.5" ></text>
</g>
<g >
<title>NaClCopyDynamicText (16 samples, 7.31%)</title><rect x="494.9" y="533" width="86.2" height="15.0" fill="rgb(216,200,40)" rx="2" ry="2" />
<text  x="497.93" y="543.5" >NaClCopyDy..</text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (1 samples, 0.46%)</title><rect x="807.4" y="245" width="5.4" height="15.0" fill="rgb(229,51,10)" rx="2" ry="2" />
<text  x="810.44" y="255.5" ></text>
</g>
<g >
<title>NaClPatchAddr (8 samples, 3.65%)</title><rect x="494.9" y="485" width="43.1" height="15.0" fill="rgb(230,229,1)" rx="2" ry="2" />
<text  x="497.93" y="495.5" >NaCl..</text>
</g>
<g >
<title>sched_clock (1 samples, 0.46%)</title><rect x="1157.7" y="533" width="5.4" height="15.0" fill="rgb(235,65,16)" rx="2" ry="2" />
<text  x="1160.67" y="543.5" ></text>
</g>
<g >
<title>CallPythonFunc (4 samples, 1.83%)</title><rect x="608.1" y="549" width="21.5" height="15.0" fill="rgb(248,104,50)" rx="2" ry="2" />
<text  x="611.08" y="559.5" >C..</text>
</g>
<g >
<title>PyEval_EvalCodeEx (2 samples, 0.91%)</title><rect x="742.8" y="357" width="10.8" height="15.0" fill="rgb(243,140,35)" rx="2" ry="2" />
<text  x="745.79" y="367.5" ></text>
</g>
<g >
<title>_PyList_Extend (3 samples, 1.37%)</title><rect x="591.9" y="309" width="16.2" height="15.0" fill="rgb(241,110,23)" rx="2" ry="2" />
<text  x="594.92" y="319.5" ></text>
</g>
<g >
<title>error_entry (2 samples, 0.91%)</title><rect x="667.4" y="645" width="10.7" height="15.0" fill="rgb(208,195,17)" rx="2" ry="2" />
<text  x="670.35" y="655.5" ></text>
</g>
</g>
</svg>
