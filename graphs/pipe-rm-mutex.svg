<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="774.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="757" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="757" > </text>
<g id="frames">
<g >
<title>dm_crtc_high_irq (14 samples, 0.22%)</title><rect x="959.7" y="421" width="2.6" height="15.0" fill="rgb(237,225,18)" rx="2" ry="2" />
<text  x="962.75" y="431.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.02%)</title><rect x="10.5" y="677" width="0.2" height="15.0" fill="rgb(253,4,32)" rx="2" ry="2" />
<text  x="13.55" y="687.5" ></text>
</g>
<g >
<title>unmap_vmas (26 samples, 0.40%)</title><rect x="727.3" y="565" width="4.8" height="15.0" fill="rgb(217,144,28)" rx="2" ry="2" />
<text  x="730.30" y="575.5" ></text>
</g>
<g >
<title>newidle_balance (7 samples, 0.11%)</title><rect x="1187.6" y="517" width="1.3" height="15.0" fill="rgb(238,157,54)" rx="2" ry="2" />
<text  x="1190.62" y="527.5" ></text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.02%)</title><rect x="1185.6" y="517" width="0.2" height="15.0" fill="rgb(228,132,18)" rx="2" ry="2" />
<text  x="1188.61" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.09%)</title><rect x="602.5" y="453" width="1.1" height="15.0" fill="rgb(211,136,32)" rx="2" ry="2" />
<text  x="605.47" y="463.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect x="720.5" y="549" width="0.2" height="15.0" fill="rgb(250,95,21)" rx="2" ry="2" />
<text  x="723.53" y="559.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1174.1" y="549" width="0.2" height="15.0" fill="rgb(242,60,35)" rx="2" ry="2" />
<text  x="1177.08" y="559.5" ></text>
</g>
<g >
<title>scsi_finish_command (2 samples, 0.03%)</title><rect x="968.2" y="453" width="0.3" height="15.0" fill="rgb(246,18,43)" rx="2" ry="2" />
<text  x="971.17" y="463.5" ></text>
</g>
<g >
<title>NaClSysFork (1 samples, 0.02%)</title><rect x="104.1" y="645" width="0.2" height="15.0" fill="rgb(243,98,24)" rx="2" ry="2" />
<text  x="107.08" y="655.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.03%)</title><rect x="103.7" y="293" width="0.4" height="15.0" fill="rgb(206,88,32)" rx="2" ry="2" />
<text  x="106.71" y="303.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="103.7" y="53" width="0.2" height="15.0" fill="rgb(243,144,12)" rx="2" ry="2" />
<text  x="106.71" y="63.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.05%)</title><rect x="942.7" y="485" width="0.6" height="15.0" fill="rgb(210,30,53)" rx="2" ry="2" />
<text  x="945.73" y="495.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="102.1" y="389" width="0.1" height="15.0" fill="rgb(217,73,30)" rx="2" ry="2" />
<text  x="105.06" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (30 samples, 0.47%)</title><rect x="612.7" y="581" width="5.5" height="15.0" fill="rgb(243,103,7)" rx="2" ry="2" />
<text  x="615.72" y="591.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="985.6" y="373" width="0.1" height="15.0" fill="rgb(241,75,44)" rx="2" ry="2" />
<text  x="988.55" y="383.5" ></text>
</g>
<g >
<title>new_sync_write (36 samples, 0.56%)</title><rect x="26.7" y="453" width="6.5" height="15.0" fill="rgb(253,63,11)" rx="2" ry="2" />
<text  x="29.66" y="463.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,151 samples, 17.85%)</title><rect x="954.3" y="629" width="210.6" height="15.0" fill="rgb(252,108,12)" rx="2" ry="2" />
<text  x="957.26" y="639.5" >cpuidle_idle_call</text>
</g>
<g >
<title>NaClValidateImage (3 samples, 0.05%)</title><rect x="702.8" y="613" width="0.5" height="15.0" fill="rgb(236,144,23)" rx="2" ry="2" />
<text  x="705.77" y="623.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="591.3" y="469" width="0.2" height="15.0" fill="rgb(242,114,19)" rx="2" ry="2" />
<text  x="594.31" y="479.5" ></text>
</g>
<g >
<title>__GI_munmap (1 samples, 0.02%)</title><rect x="102.1" y="613" width="0.1" height="15.0" fill="rgb(219,56,31)" rx="2" ry="2" />
<text  x="105.06" y="623.5" ></text>
</g>
<g >
<title>intercept_process_vm_writev (1 samples, 0.02%)</title><rect x="702.6" y="613" width="0.2" height="15.0" fill="rgb(216,197,33)" rx="2" ry="2" />
<text  x="705.59" y="623.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (7 samples, 0.11%)</title><rect x="31.8" y="309" width="1.3" height="15.0" fill="rgb(216,1,44)" rx="2" ry="2" />
<text  x="34.78" y="319.5" ></text>
</g>
<g >
<title>psi_task_change (3 samples, 0.05%)</title><rect x="874.5" y="549" width="0.5" height="15.0" fill="rgb(224,99,38)" rx="2" ry="2" />
<text  x="877.45" y="559.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (6 samples, 0.09%)</title><rect x="944.6" y="645" width="1.1" height="15.0" fill="rgb(236,141,49)" rx="2" ry="2" />
<text  x="947.56" y="655.5" ></text>
</g>
<g >
<title>__perf_event_enable (63 samples, 0.98%)</title><rect x="13.5" y="389" width="11.5" height="15.0" fill="rgb(246,14,20)" rx="2" ry="2" />
<text  x="16.48" y="399.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.02%)</title><rect x="102.8" y="309" width="0.2" height="15.0" fill="rgb(244,5,5)" rx="2" ry="2" />
<text  x="105.80" y="319.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (2 samples, 0.03%)</title><rect x="947.1" y="549" width="0.4" height="15.0" fill="rgb(248,114,27)" rx="2" ry="2" />
<text  x="950.12" y="559.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="951.0" y="517" width="0.3" height="15.0" fill="rgb(240,79,18)" rx="2" ry="2" />
<text  x="953.96" y="527.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.02%)</title><rect x="720.5" y="453" width="0.2" height="15.0" fill="rgb(252,211,19)" rx="2" ry="2" />
<text  x="723.53" y="463.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="693.3" y="469" width="0.1" height="15.0" fill="rgb(232,142,26)" rx="2" ry="2" />
<text  x="696.25" y="479.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.02%)</title><rect x="33.2" y="357" width="0.2" height="15.0" fill="rgb(247,3,18)" rx="2" ry="2" />
<text  x="36.24" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1178.8" y="517" width="0.2" height="15.0" fill="rgb(225,59,21)" rx="2" ry="2" />
<text  x="1181.84" y="527.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.03%)</title><rect x="719.4" y="629" width="0.4" height="15.0" fill="rgb(233,52,46)" rx="2" ry="2" />
<text  x="722.43" y="639.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (584 samples, 9.06%)</title><rect x="271.0" y="517" width="106.9" height="15.0" fill="rgb(225,122,48)" rx="2" ry="2" />
<text  x="274.00" y="527.5" >ringbuf::cons..</text>
</g>
<g >
<title>azx_get_pos_skl (98 samples, 1.52%)</title><rect x="892.9" y="517" width="18.0" height="15.0" fill="rgb(231,191,30)" rx="2" ry="2" />
<text  x="895.94" y="527.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (8 samples, 0.12%)</title><rect x="402.2" y="597" width="1.5" height="15.0" fill="rgb(253,21,13)" rx="2" ry="2" />
<text  x="405.24" y="607.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.02%)</title><rect x="1188.7" y="437" width="0.2" height="15.0" fill="rgb(216,36,19)" rx="2" ry="2" />
<text  x="1191.72" y="447.5" ></text>
</g>
<g >
<title>__kmalloc_track_caller (2 samples, 0.03%)</title><rect x="883.2" y="597" width="0.4" height="15.0" fill="rgb(227,7,16)" rx="2" ry="2" />
<text  x="886.24" y="607.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,097 samples, 17.02%)</title><rect x="954.6" y="613" width="200.8" height="15.0" fill="rgb(215,97,8)" rx="2" ry="2" />
<text  x="957.62" y="623.5" >cpuidle_enter</text>
</g>
<g >
<title>cpuidle_enter_state (1,085 samples, 16.83%)</title><rect x="955.9" y="597" width="198.6" height="15.0" fill="rgb(245,188,42)" rx="2" ry="2" />
<text  x="958.90" y="607.5" >cpuidle_enter_state</text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="966.2" y="229" width="0.1" height="15.0" fill="rgb(232,167,47)" rx="2" ry="2" />
<text  x="969.15" y="239.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="938.7" y="581" width="0.2" height="15.0" fill="rgb(216,152,42)" rx="2" ry="2" />
<text  x="941.70" y="591.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.03%)</title><rect x="719.1" y="645" width="0.3" height="15.0" fill="rgb(233,223,22)" rx="2" ry="2" />
<text  x="722.06" y="655.5" ></text>
</g>
<g >
<title>hrtimer_forward (1 samples, 0.02%)</title><rect x="973.3" y="469" width="0.2" height="15.0" fill="rgb(239,128,32)" rx="2" ry="2" />
<text  x="976.29" y="479.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="985.9" y="501" width="0.2" height="15.0" fill="rgb(236,67,36)" rx="2" ry="2" />
<text  x="988.92" y="511.5" ></text>
</g>
<g >
<title>psi_flags_change (3 samples, 0.05%)</title><rect x="975.7" y="389" width="0.5" height="15.0" fill="rgb(221,70,6)" rx="2" ry="2" />
<text  x="978.67" y="399.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampoline (1 samples, 0.02%)</title><rect x="103.3" y="613" width="0.2" height="15.0" fill="rgb(249,59,47)" rx="2" ry="2" />
<text  x="106.35" y="623.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2 samples, 0.03%)</title><rect x="995.1" y="437" width="0.3" height="15.0" fill="rgb(252,201,6)" rx="2" ry="2" />
<text  x="998.07" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.16%)</title><rect x="597.5" y="469" width="1.9" height="15.0" fill="rgb(230,185,54)" rx="2" ry="2" />
<text  x="600.53" y="479.5" ></text>
</g>
<g >
<title>record__pushfn (37 samples, 0.57%)</title><rect x="26.5" y="597" width="6.7" height="15.0" fill="rgb(237,210,1)" rx="2" ry="2" />
<text  x="29.47" y="607.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (30 samples, 0.47%)</title><rect x="634.5" y="565" width="5.5" height="15.0" fill="rgb(248,111,40)" rx="2" ry="2" />
<text  x="637.50" y="575.5" ></text>
</g>
<g >
<title>do_sys_poll (62 samples, 0.96%)</title><rect x="926.4" y="645" width="11.4" height="15.0" fill="rgb(212,39,47)" rx="2" ry="2" />
<text  x="929.44" y="655.5" ></text>
</g>
<g >
<title>tick_sched_timer (28 samples, 0.43%)</title><rect x="980.2" y="469" width="5.2" height="15.0" fill="rgb(235,52,20)" rx="2" ry="2" />
<text  x="983.25" y="479.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (5 samples, 0.08%)</title><rect x="961.2" y="197" width="0.9" height="15.0" fill="rgb(234,15,52)" rx="2" ry="2" />
<text  x="964.21" y="207.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.02%)</title><rect x="103.2" y="469" width="0.1" height="15.0" fill="rgb(221,7,37)" rx="2" ry="2" />
<text  x="106.16" y="479.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (2 samples, 0.03%)</title><rect x="942.0" y="453" width="0.4" height="15.0" fill="rgb(215,71,24)" rx="2" ry="2" />
<text  x="944.99" y="463.5" ></text>
</g>
<g >
<title>__netdev_alloc_skb (1 samples, 0.02%)</title><rect x="968.9" y="405" width="0.2" height="15.0" fill="rgb(239,143,48)" rx="2" ry="2" />
<text  x="971.90" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="102.8" y="341" width="0.2" height="15.0" fill="rgb(229,169,10)" rx="2" ry="2" />
<text  x="105.80" y="351.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="948.0" y="501" width="0.2" height="15.0" fill="rgb(228,205,36)" rx="2" ry="2" />
<text  x="951.03" y="511.5" ></text>
</g>
<g >
<title>__switch_to_asm (3 samples, 0.05%)</title><rect x="868.6" y="693" width="0.5" height="15.0" fill="rgb(219,12,27)" rx="2" ry="2" />
<text  x="871.60" y="703.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (1 samples, 0.02%)</title><rect x="720.5" y="565" width="0.2" height="15.0" fill="rgb(236,210,27)" rx="2" ry="2" />
<text  x="723.53" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="26.1" y="549" width="0.2" height="15.0" fill="rgb(244,132,35)" rx="2" ry="2" />
<text  x="29.11" y="559.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (1 samples, 0.02%)</title><rect x="622.8" y="581" width="0.2" height="15.0" fill="rgb(206,55,17)" rx="2" ry="2" />
<text  x="625.79" y="591.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (9 samples, 0.14%)</title><rect x="118.7" y="517" width="1.7" height="15.0" fill="rgb(249,204,38)" rx="2" ry="2" />
<text  x="121.72" y="527.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (2 samples, 0.03%)</title><rect x="969.4" y="405" width="0.4" height="15.0" fill="rgb(205,66,2)" rx="2" ry="2" />
<text  x="972.45" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (26 samples, 0.40%)</title><rect x="551.0" y="469" width="4.8" height="15.0" fill="rgb(229,135,24)" rx="2" ry="2" />
<text  x="554.04" y="479.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (1 samples, 0.02%)</title><rect x="103.5" y="533" width="0.2" height="15.0" fill="rgb(246,51,36)" rx="2" ry="2" />
<text  x="106.53" y="543.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="104.3" y="597" width="0.1" height="15.0" fill="rgb(209,121,27)" rx="2" ry="2" />
<text  x="107.26" y="607.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="720.7" y="661" width="0.2" height="15.0" fill="rgb(252,75,2)" rx="2" ry="2" />
<text  x="723.71" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (922 samples, 14.30%)</title><rect x="428.6" y="549" width="168.7" height="15.0" fill="rgb(205,72,26)" rx="2" ry="2" />
<text  x="431.59" y="559.5" >rustposix::safeposix:..</text>
</g>
<g >
<title>select_task_rq_rt.part.0 (2 samples, 0.03%)</title><rect x="878.1" y="421" width="0.4" height="15.0" fill="rgb(229,53,12)" rx="2" ry="2" />
<text  x="881.12" y="431.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (2 samples, 0.03%)</title><rect x="103.7" y="389" width="0.4" height="15.0" fill="rgb(212,131,7)" rx="2" ry="2" />
<text  x="106.71" y="399.5" ></text>
</g>
<g >
<title>enter_lazy_tlb (1 samples, 0.02%)</title><rect x="935.0" y="549" width="0.2" height="15.0" fill="rgb(217,6,4)" rx="2" ry="2" />
<text  x="938.04" y="559.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="1189.6" y="485" width="0.2" height="15.0" fill="rgb(216,117,17)" rx="2" ry="2" />
<text  x="1192.63" y="495.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.02%)</title><rect x="377.9" y="533" width="0.2" height="15.0" fill="rgb(227,209,31)" rx="2" ry="2" />
<text  x="380.89" y="543.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.02%)</title><rect x="1186.0" y="549" width="0.2" height="15.0" fill="rgb(224,161,54)" rx="2" ry="2" />
<text  x="1188.97" y="559.5" ></text>
</g>
<g >
<title>find_get_pages_range_tag (1 samples, 0.02%)</title><rect x="952.6" y="469" width="0.2" height="15.0" fill="rgb(224,195,13)" rx="2" ry="2" />
<text  x="955.61" y="479.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.02%)</title><rect x="979.7" y="469" width="0.2" height="15.0" fill="rgb(234,157,27)" rx="2" ry="2" />
<text  x="982.70" y="479.5" ></text>
</g>
<g >
<title>do_pcm_hwsync (129 samples, 2.00%)</title><rect x="887.4" y="597" width="23.7" height="15.0" fill="rgb(243,68,19)" rx="2" ry="2" />
<text  x="890.45" y="607.5" >d..</text>
</g>
<g >
<title>__set_page_dirty (1 samples, 0.02%)</title><rect x="30.3" y="261" width="0.2" height="15.0" fill="rgb(209,50,36)" rx="2" ry="2" />
<text  x="33.32" y="271.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.02%)</title><rect x="10.0" y="517" width="0.2" height="15.0" fill="rgb(239,67,1)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="477.5" y="421" width="0.1" height="15.0" fill="rgb(218,31,13)" rx="2" ry="2" />
<text  x="480.46" y="431.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (1 samples, 0.02%)</title><rect x="948.4" y="549" width="0.2" height="15.0" fill="rgb(216,124,30)" rx="2" ry="2" />
<text  x="951.40" y="559.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (4 samples, 0.06%)</title><rect x="942.5" y="517" width="0.8" height="15.0" fill="rgb(211,172,12)" rx="2" ry="2" />
<text  x="945.54" y="527.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1155.2" y="597" width="0.2" height="15.0" fill="rgb(221,87,49)" rx="2" ry="2" />
<text  x="1158.22" y="607.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="618.2" y="581" width="0.2" height="15.0" fill="rgb(246,101,30)" rx="2" ry="2" />
<text  x="621.21" y="591.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="102.1" y="405" width="0.1" height="15.0" fill="rgb(220,76,45)" rx="2" ry="2" />
<text  x="105.06" y="415.5" ></text>
</g>
<g >
<title>nf_conntrack_in (1 samples, 0.02%)</title><rect x="969.6" y="293" width="0.2" height="15.0" fill="rgb(207,200,31)" rx="2" ry="2" />
<text  x="972.63" y="303.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="104.3" y="405" width="0.1" height="15.0" fill="rgb(250,133,24)" rx="2" ry="2" />
<text  x="107.26" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="270.8" y="469" width="0.2" height="15.0" fill="rgb(230,140,4)" rx="2" ry="2" />
<text  x="273.82" y="479.5" ></text>
</g>
<g >
<title>[unknown] (125 samples, 1.94%)</title><rect x="10.7" y="693" width="22.9" height="15.0" fill="rgb(224,165,26)" rx="2" ry="2" />
<text  x="13.73" y="703.5" >[..</text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="985.6" y="341" width="0.1" height="15.0" fill="rgb(231,195,15)" rx="2" ry="2" />
<text  x="988.55" y="351.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="1189.1" y="517" width="0.2" height="15.0" fill="rgb(218,118,31)" rx="2" ry="2" />
<text  x="1192.08" y="527.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (2 samples, 0.03%)</title><rect x="930.5" y="549" width="0.3" height="15.0" fill="rgb(253,72,20)" rx="2" ry="2" />
<text  x="933.46" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="603.4" y="437" width="0.2" height="15.0" fill="rgb(237,20,24)" rx="2" ry="2" />
<text  x="606.39" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="570.6" y="405" width="2.2" height="15.0" fill="rgb(216,101,12)" rx="2" ry="2" />
<text  x="573.62" y="415.5" ></text>
</g>
<g >
<title>enqueue_task_rt (4 samples, 0.06%)</title><rect x="974.8" y="389" width="0.7" height="15.0" fill="rgb(229,45,35)" rx="2" ry="2" />
<text  x="977.76" y="399.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (43 samples, 0.67%)</title><rect x="420.2" y="533" width="7.8" height="15.0" fill="rgb(246,81,19)" rx="2" ry="2" />
<text  x="423.17" y="543.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (2 samples, 0.03%)</title><rect x="31.4" y="245" width="0.4" height="15.0" fill="rgb(226,180,14)" rx="2" ry="2" />
<text  x="34.41" y="255.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (37 samples, 0.57%)</title><rect x="555.8" y="517" width="6.8" height="15.0" fill="rgb(250,1,30)" rx="2" ry="2" />
<text  x="558.80" y="527.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="1153.2" y="405" width="0.2" height="15.0" fill="rgb(218,63,45)" rx="2" ry="2" />
<text  x="1156.21" y="415.5" ></text>
</g>
<g >
<title>dm_vblank_get_counter (3 samples, 0.05%)</title><rect x="960.7" y="325" width="0.5" height="15.0" fill="rgb(233,43,52)" rx="2" ry="2" />
<text  x="963.66" y="335.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (89 samples, 1.38%)</title><rect x="510.2" y="501" width="16.3" height="15.0" fill="rgb(254,178,52)" rx="2" ry="2" />
<text  x="513.22" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="102.1" y="629" width="0.1" height="15.0" fill="rgb(248,118,50)" rx="2" ry="2" />
<text  x="105.06" y="639.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="103.7" y="69" width="0.2" height="15.0" fill="rgb(252,67,2)" rx="2" ry="2" />
<text  x="106.71" y="79.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.02%)</title><rect x="104.1" y="629" width="0.2" height="15.0" fill="rgb(215,51,25)" rx="2" ry="2" />
<text  x="107.08" y="639.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (2 samples, 0.03%)</title><rect x="92.9" y="661" width="0.4" height="15.0" fill="rgb(248,128,36)" rx="2" ry="2" />
<text  x="95.91" y="671.5" ></text>
</g>
<g >
<title>pick_next_task_rt (2 samples, 0.03%)</title><rect x="1170.4" y="597" width="0.4" height="15.0" fill="rgb(244,192,54)" rx="2" ry="2" />
<text  x="1173.42" y="607.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (1 samples, 0.02%)</title><rect x="26.8" y="325" width="0.2" height="15.0" fill="rgb(237,53,18)" rx="2" ry="2" />
<text  x="29.84" y="335.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.02%)</title><rect x="104.1" y="597" width="0.2" height="15.0" fill="rgb(211,228,20)" rx="2" ry="2" />
<text  x="107.08" y="607.5" ></text>
</g>
<g >
<title>open_path (1 samples, 0.02%)</title><rect x="10.5" y="565" width="0.2" height="15.0" fill="rgb(206,11,1)" rx="2" ry="2" />
<text  x="13.55" y="575.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (3 samples, 0.05%)</title><rect x="962.3" y="357" width="0.6" height="15.0" fill="rgb(207,34,54)" rx="2" ry="2" />
<text  x="965.31" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="937.4" y="597" width="0.2" height="15.0" fill="rgb(234,43,27)" rx="2" ry="2" />
<text  x="940.42" y="607.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (12 samples, 0.19%)</title><rect x="268.8" y="485" width="2.2" height="15.0" fill="rgb(219,198,18)" rx="2" ry="2" />
<text  x="271.81" y="495.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (5 samples, 0.08%)</title><rect x="965.2" y="245" width="1.0" height="15.0" fill="rgb(207,121,29)" rx="2" ry="2" />
<text  x="968.24" y="255.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.03%)</title><rect x="574.8" y="453" width="0.4" height="15.0" fill="rgb(254,228,4)" rx="2" ry="2" />
<text  x="577.83" y="463.5" ></text>
</g>
<g >
<title>nohz_csd_func (2 samples, 0.03%)</title><rect x="1187.1" y="549" width="0.3" height="15.0" fill="rgb(249,23,25)" rx="2" ry="2" />
<text  x="1190.07" y="559.5" ></text>
</g>
<g >
<title>exc_page_fault (112 samples, 1.74%)</title><rect x="679.2" y="661" width="20.5" height="15.0" fill="rgb(237,85,8)" rx="2" ry="2" />
<text  x="682.16" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (1 samples, 0.02%)</title><rect x="59.4" y="661" width="0.2" height="15.0" fill="rgb(220,199,1)" rx="2" ry="2" />
<text  x="62.42" y="671.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.02%)</title><rect x="1170.0" y="581" width="0.2" height="15.0" fill="rgb(225,181,8)" rx="2" ry="2" />
<text  x="1173.05" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (88 samples, 1.36%)</title><rect x="575.2" y="501" width="16.1" height="15.0" fill="rgb(234,48,2)" rx="2" ry="2" />
<text  x="578.20" y="511.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (2 samples, 0.03%)</title><rect x="871.5" y="485" width="0.4" height="15.0" fill="rgb(233,169,32)" rx="2" ry="2" />
<text  x="874.53" y="495.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (37 samples, 0.57%)</title><rect x="555.8" y="501" width="6.8" height="15.0" fill="rgb(233,222,25)" rx="2" ry="2" />
<text  x="558.80" y="511.5" ></text>
</g>
<g >
<title>dequeue_rt_stack (3 samples, 0.05%)</title><rect x="974.9" y="373" width="0.6" height="15.0" fill="rgb(249,33,33)" rx="2" ry="2" />
<text  x="977.94" y="383.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (5 samples, 0.08%)</title><rect x="965.2" y="277" width="1.0" height="15.0" fill="rgb(247,94,26)" rx="2" ry="2" />
<text  x="968.24" y="287.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (15 samples, 0.23%)</title><rect x="55.6" y="645" width="2.7" height="15.0" fill="rgb(236,192,28)" rx="2" ry="2" />
<text  x="58.57" y="655.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.08%)</title><rect x="569.5" y="469" width="0.9" height="15.0" fill="rgb(224,146,12)" rx="2" ry="2" />
<text  x="572.53" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1186.3" y="501" width="0.2" height="15.0" fill="rgb(231,20,11)" rx="2" ry="2" />
<text  x="1189.34" y="511.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.02%)</title><rect x="925.5" y="485" width="0.2" height="15.0" fill="rgb(213,65,4)" rx="2" ry="2" />
<text  x="928.52" y="495.5" ></text>
</g>
<g >
<title>enqueue_task_rt (1 samples, 0.02%)</title><rect x="878.5" y="405" width="0.2" height="15.0" fill="rgb(225,82,14)" rx="2" ry="2" />
<text  x="881.48" y="415.5" ></text>
</g>
<g >
<title>ttwu_do_activate (30 samples, 0.47%)</title><rect x="974.2" y="421" width="5.5" height="15.0" fill="rgb(211,72,52)" rx="2" ry="2" />
<text  x="977.21" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (2 samples, 0.03%)</title><rect x="45.3" y="597" width="0.4" height="15.0" fill="rgb(234,152,33)" rx="2" ry="2" />
<text  x="48.32" y="607.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (2 samples, 0.03%)</title><rect x="952.4" y="565" width="0.4" height="15.0" fill="rgb(233,85,27)" rx="2" ry="2" />
<text  x="955.43" y="575.5" ></text>
</g>
<g >
<title>drm_atomic_helper_commit (4 samples, 0.06%)</title><rect x="880.3" y="549" width="0.7" height="15.0" fill="rgb(216,228,41)" rx="2" ry="2" />
<text  x="883.31" y="559.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="732.1" y="549" width="0.1" height="15.0" fill="rgb(234,58,46)" rx="2" ry="2" />
<text  x="735.06" y="559.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="720.5" y="277" width="0.2" height="15.0" fill="rgb(226,21,38)" rx="2" ry="2" />
<text  x="723.53" y="287.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="103.5" y="197" width="0.2" height="15.0" fill="rgb(242,182,30)" rx="2" ry="2" />
<text  x="106.53" y="207.5" ></text>
</g>
<g >
<title>alloc_pages_current (3 samples, 0.05%)</title><rect x="29.0" y="277" width="0.6" height="15.0" fill="rgb(244,4,38)" rx="2" ry="2" />
<text  x="32.04" y="287.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.02%)</title><rect x="1153.6" y="581" width="0.2" height="15.0" fill="rgb(225,25,49)" rx="2" ry="2" />
<text  x="1156.58" y="591.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (1 samples, 0.02%)</title><rect x="26.7" y="405" width="0.1" height="15.0" fill="rgb(252,147,40)" rx="2" ry="2" />
<text  x="29.66" y="415.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (44 samples, 0.68%)</title><rect x="94.6" y="661" width="8.0" height="15.0" fill="rgb(228,146,2)" rx="2" ry="2" />
<text  x="97.56" y="671.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.11%)</title><rect x="566.4" y="405" width="1.3" height="15.0" fill="rgb(251,11,31)" rx="2" ry="2" />
<text  x="569.41" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="10.0" y="597" width="0.2" height="15.0" fill="rgb(220,53,6)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.02%)</title><rect x="992.9" y="405" width="0.2" height="15.0" fill="rgb(221,62,1)" rx="2" ry="2" />
<text  x="995.88" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1153.2" y="485" width="0.2" height="15.0" fill="rgb(219,100,43)" rx="2" ry="2" />
<text  x="1156.21" y="495.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="102.1" y="533" width="0.1" height="15.0" fill="rgb(227,46,38)" rx="2" ry="2" />
<text  x="105.06" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (79 samples, 1.23%)</title><rect x="10.7" y="581" width="14.5" height="15.0" fill="rgb(232,33,7)" rx="2" ry="2" />
<text  x="13.73" y="591.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.02%)</title><rect x="702.4" y="549" width="0.2" height="15.0" fill="rgb(243,143,23)" rx="2" ry="2" />
<text  x="705.41" y="559.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="27.4" y="149" width="0.2" height="15.0" fill="rgb(245,125,49)" rx="2" ry="2" />
<text  x="30.39" y="159.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (43 samples, 0.67%)</title><rect x="420.2" y="517" width="7.8" height="15.0" fill="rgb(216,119,11)" rx="2" ry="2" />
<text  x="423.17" y="527.5" ></text>
</g>
<g >
<title>drm_atomic_nonblocking_commit (7 samples, 0.11%)</title><rect x="879.9" y="565" width="1.3" height="15.0" fill="rgb(218,1,49)" rx="2" ry="2" />
<text  x="882.95" y="575.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="720.5" y="261" width="0.2" height="15.0" fill="rgb(217,29,25)" rx="2" ry="2" />
<text  x="723.53" y="271.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="959.6" y="357" width="0.1" height="15.0" fill="rgb(239,86,53)" rx="2" ry="2" />
<text  x="962.56" y="367.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="308.5" y="437" width="0.2" height="15.0" fill="rgb(248,132,0)" rx="2" ry="2" />
<text  x="311.52" y="447.5" ></text>
</g>
<g >
<title>mpage_prepare_extent_to_map (1 samples, 0.02%)</title><rect x="952.6" y="501" width="0.2" height="15.0" fill="rgb(240,29,28)" rx="2" ry="2" />
<text  x="955.61" y="511.5" ></text>
</g>
<g >
<title>amdgpu_dm_atomic_check (1 samples, 0.02%)</title><rect x="879.9" y="533" width="0.2" height="15.0" fill="rgb(224,103,41)" rx="2" ry="2" />
<text  x="882.95" y="543.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="693.6" y="517" width="0.2" height="15.0" fill="rgb(250,0,0)" rx="2" ry="2" />
<text  x="696.62" y="527.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.0 (2 samples, 0.03%)</title><rect x="980.4" y="437" width="0.4" height="15.0" fill="rgb(223,180,13)" rx="2" ry="2" />
<text  x="983.43" y="447.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="959.6" y="373" width="0.1" height="15.0" fill="rgb(229,170,19)" rx="2" ry="2" />
<text  x="962.56" y="383.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="34.0" y="677" width="0.2" height="15.0" fill="rgb(249,108,34)" rx="2" ry="2" />
<text  x="36.98" y="687.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="1164.0" y="549" width="0.2" height="15.0" fill="rgb(221,52,27)" rx="2" ry="2" />
<text  x="1167.01" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="937.6" y="597" width="0.2" height="15.0" fill="rgb(241,75,1)" rx="2" ry="2" />
<text  x="940.60" y="607.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="1164.2" y="533" width="0.2" height="15.0" fill="rgb(254,91,12)" rx="2" ry="2" />
<text  x="1167.19" y="543.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="986.5" y="485" width="0.2" height="15.0" fill="rgb(215,115,25)" rx="2" ry="2" />
<text  x="989.47" y="495.5" ></text>
</g>
<g >
<title>amdgpu_bo_list_create (1 samples, 0.02%)</title><rect x="877.0" y="565" width="0.2" height="15.0" fill="rgb(229,81,5)" rx="2" ry="2" />
<text  x="880.02" y="575.5" ></text>
</g>
<g >
<title>dispatcher@plt (2 samples, 0.03%)</title><rect x="609.8" y="581" width="0.4" height="15.0" fill="rgb(233,132,32)" rx="2" ry="2" />
<text  x="612.79" y="591.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="103.5" y="389" width="0.2" height="15.0" fill="rgb(246,135,25)" rx="2" ry="2" />
<text  x="106.53" y="399.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.03%)</title><rect x="103.7" y="485" width="0.4" height="15.0" fill="rgb(212,33,32)" rx="2" ry="2" />
<text  x="106.71" y="495.5" ></text>
</g>
<g >
<title>amdgpu_dm_irq_handler (40 samples, 0.62%)</title><rect x="959.6" y="437" width="7.3" height="15.0" fill="rgb(247,72,50)" rx="2" ry="2" />
<text  x="962.56" y="447.5" ></text>
</g>
<g >
<title>__run_hrtimer (72 samples, 1.12%)</title><rect x="972.6" y="485" width="13.1" height="15.0" fill="rgb(218,54,37)" rx="2" ry="2" />
<text  x="975.56" y="495.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (2 samples, 0.03%)</title><rect x="95.1" y="565" width="0.4" height="15.0" fill="rgb(231,71,45)" rx="2" ry="2" />
<text  x="98.11" y="575.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1178.8" y="421" width="0.2" height="15.0" fill="rgb(220,103,1)" rx="2" ry="2" />
<text  x="1181.84" y="431.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="985.6" y="389" width="0.1" height="15.0" fill="rgb(222,87,45)" rx="2" ry="2" />
<text  x="988.55" y="399.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="968.0" y="453" width="0.2" height="15.0" fill="rgb(242,75,1)" rx="2" ry="2" />
<text  x="970.98" y="463.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (1 samples, 0.02%)</title><rect x="102.8" y="453" width="0.2" height="15.0" fill="rgb(216,61,45)" rx="2" ry="2" />
<text  x="105.80" y="463.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="940.0" y="469" width="0.2" height="15.0" fill="rgb(215,191,2)" rx="2" ry="2" />
<text  x="942.98" y="479.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="27.2" y="229" width="0.4" height="15.0" fill="rgb(230,217,44)" rx="2" ry="2" />
<text  x="30.20" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.02%)</title><rect x="720.5" y="309" width="0.2" height="15.0" fill="rgb(240,152,16)" rx="2" ry="2" />
<text  x="723.53" y="319.5" ></text>
</g>
<g >
<title>drm_crtc_vblank_helper_get_vblank_timestamp (6 samples, 0.09%)</title><rect x="961.2" y="341" width="1.1" height="15.0" fill="rgb(216,4,30)" rx="2" ry="2" />
<text  x="964.21" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (22 samples, 0.34%)</title><rect x="473.4" y="453" width="4.1" height="15.0" fill="rgb(212,173,17)" rx="2" ry="2" />
<text  x="476.43" y="463.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="986.5" y="469" width="0.2" height="15.0" fill="rgb(238,176,45)" rx="2" ry="2" />
<text  x="989.47" y="479.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (33 samples, 0.51%)</title><rect x="612.4" y="597" width="6.0" height="15.0" fill="rgb(228,143,10)" rx="2" ry="2" />
<text  x="615.35" y="607.5" ></text>
</g>
<g >
<title>NaClPatchInfoCtor (1 samples, 0.02%)</title><rect x="104.1" y="517" width="0.2" height="15.0" fill="rgb(223,25,37)" rx="2" ry="2" />
<text  x="107.08" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (26 samples, 0.40%)</title><rect x="551.0" y="453" width="4.8" height="15.0" fill="rgb(250,146,36)" rx="2" ry="2" />
<text  x="554.04" y="463.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (38 samples, 0.59%)</title><rect x="929.9" y="597" width="7.0" height="15.0" fill="rgb(250,157,46)" rx="2" ry="2" />
<text  x="932.91" y="607.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="940.0" y="437" width="0.2" height="15.0" fill="rgb(239,45,33)" rx="2" ry="2" />
<text  x="942.98" y="447.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.02%)</title><rect x="29.6" y="277" width="0.2" height="15.0" fill="rgb(233,20,7)" rx="2" ry="2" />
<text  x="32.58" y="287.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="940.5" y="629" width="0.2" height="15.0" fill="rgb(216,80,27)" rx="2" ry="2" />
<text  x="943.53" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="102.1" y="581" width="0.1" height="15.0" fill="rgb(229,135,30)" rx="2" ry="2" />
<text  x="105.06" y="591.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="985.2" y="453" width="0.2" height="15.0" fill="rgb(210,161,29)" rx="2" ry="2" />
<text  x="988.19" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="1177.2" y="533" width="0.2" height="15.0" fill="rgb(219,86,38)" rx="2" ry="2" />
<text  x="1180.19" y="543.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="978.6" y="341" width="0.2" height="15.0" fill="rgb(207,113,12)" rx="2" ry="2" />
<text  x="981.60" y="351.5" ></text>
</g>
<g >
<title>dc_stream_get_vblank_counter (3 samples, 0.05%)</title><rect x="948.6" y="533" width="0.5" height="15.0" fill="rgb(245,213,27)" rx="2" ry="2" />
<text  x="951.58" y="543.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="727.8" y="453" width="0.2" height="15.0" fill="rgb(214,124,24)" rx="2" ry="2" />
<text  x="730.85" y="463.5" ></text>
</g>
<g >
<title>enqueue_task (2 samples, 0.03%)</title><rect x="942.7" y="405" width="0.4" height="15.0" fill="rgb(236,29,12)" rx="2" ry="2" />
<text  x="945.73" y="415.5" ></text>
</g>
<g >
<title>_perf_event_enable (66 samples, 1.02%)</title><rect x="12.9" y="485" width="12.1" height="15.0" fill="rgb(231,159,48)" rx="2" ry="2" />
<text  x="15.93" y="495.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="103.7" y="213" width="0.2" height="15.0" fill="rgb(230,137,48)" rx="2" ry="2" />
<text  x="106.71" y="223.5" ></text>
</g>
<g >
<title>try_to_wake_up (34 samples, 0.53%)</title><rect x="973.5" y="437" width="6.2" height="15.0" fill="rgb(236,83,36)" rx="2" ry="2" />
<text  x="976.47" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.14%)</title><rect x="600.1" y="437" width="1.6" height="15.0" fill="rgb(224,129,16)" rx="2" ry="2" />
<text  x="603.09" y="447.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (1 samples, 0.02%)</title><rect x="591.3" y="501" width="0.2" height="15.0" fill="rgb(212,211,12)" rx="2" ry="2" />
<text  x="594.31" y="511.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (34 samples, 0.53%)</title><rect x="603.6" y="565" width="6.2" height="15.0" fill="rgb(216,142,7)" rx="2" ry="2" />
<text  x="606.57" y="575.5" ></text>
</g>
<g >
<title>NaClElfImageLoad (1 samples, 0.02%)</title><rect x="102.8" y="565" width="0.2" height="15.0" fill="rgb(230,112,30)" rx="2" ry="2" />
<text  x="105.80" y="575.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (4 samples, 0.06%)</title><rect x="942.5" y="501" width="0.8" height="15.0" fill="rgb(240,27,37)" rx="2" ry="2" />
<text  x="945.54" y="511.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1153.2" y="565" width="0.2" height="15.0" fill="rgb(252,200,31)" rx="2" ry="2" />
<text  x="1156.21" y="575.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (15 samples, 0.23%)</title><rect x="51.0" y="613" width="2.7" height="15.0" fill="rgb(245,122,50)" rx="2" ry="2" />
<text  x="54.00" y="623.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (34 samples, 0.53%)</title><rect x="597.3" y="565" width="6.3" height="15.0" fill="rgb(212,28,45)" rx="2" ry="2" />
<text  x="600.35" y="575.5" ></text>
</g>
<g >
<title>free_unref_page_commit (9 samples, 0.14%)</title><rect x="729.9" y="421" width="1.6" height="15.0" fill="rgb(207,183,42)" rx="2" ry="2" />
<text  x="732.86" y="431.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (2 samples, 0.03%)</title><rect x="101.1" y="565" width="0.4" height="15.0" fill="rgb(210,88,32)" rx="2" ry="2" />
<text  x="104.15" y="575.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="940.2" y="581" width="0.1" height="15.0" fill="rgb(212,108,44)" rx="2" ry="2" />
<text  x="943.16" y="591.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (4 samples, 0.06%)</title><rect x="1160.7" y="565" width="0.7" height="15.0" fill="rgb(245,193,48)" rx="2" ry="2" />
<text  x="1163.72" y="575.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (9 samples, 0.14%)</title><rect x="692.2" y="533" width="1.6" height="15.0" fill="rgb(236,104,51)" rx="2" ry="2" />
<text  x="695.16" y="543.5" ></text>
</g>
<g >
<title>clocksource_watchdog (1 samples, 0.02%)</title><rect x="995.8" y="437" width="0.2" height="15.0" fill="rgb(215,157,26)" rx="2" ry="2" />
<text  x="998.80" y="447.5" ></text>
</g>
<g >
<title>restore_regs_and_return_to_kernel (1 samples, 0.02%)</title><rect x="1155.0" y="597" width="0.2" height="15.0" fill="rgb(251,19,6)" rx="2" ry="2" />
<text  x="1158.04" y="607.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="719.4" y="645" width="0.4" height="15.0" fill="rgb(206,209,26)" rx="2" ry="2" />
<text  x="722.43" y="655.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="732.2" y="661" width="0.2" height="15.0" fill="rgb(207,4,6)" rx="2" ry="2" />
<text  x="735.24" y="671.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (3 samples, 0.05%)</title><rect x="703.3" y="677" width="0.6" height="15.0" fill="rgb(218,122,40)" rx="2" ry="2" />
<text  x="706.32" y="687.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (35 samples, 0.54%)</title><rect x="26.8" y="389" width="6.4" height="15.0" fill="rgb(239,150,53)" rx="2" ry="2" />
<text  x="29.84" y="399.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="34.0" y="645" width="0.2" height="15.0" fill="rgb(222,55,2)" rx="2" ry="2" />
<text  x="36.98" y="655.5" ></text>
</g>
<g >
<title>azx_get_delay_from_lpib (21 samples, 0.33%)</title><rect x="889.1" y="517" width="3.8" height="15.0" fill="rgb(226,222,37)" rx="2" ry="2" />
<text  x="892.10" y="527.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (6 samples, 0.09%)</title><rect x="30.7" y="277" width="1.1" height="15.0" fill="rgb(246,127,38)" rx="2" ry="2" />
<text  x="33.68" y="287.5" ></text>
</g>
<g >
<title>drm_update_vblank_count (13 samples, 0.20%)</title><rect x="959.9" y="373" width="2.4" height="15.0" fill="rgb(205,189,0)" rx="2" ry="2" />
<text  x="962.93" y="383.5" ></text>
</g>
<g >
<title>dispatcher (3 samples, 0.05%)</title><rect x="103.5" y="613" width="0.6" height="15.0" fill="rgb(250,220,5)" rx="2" ry="2" />
<text  x="106.53" y="623.5" ></text>
</g>
<g >
<title>error_entry (3 samples, 0.05%)</title><rect x="699.7" y="677" width="0.5" height="15.0" fill="rgb(219,153,14)" rx="2" ry="2" />
<text  x="702.66" y="687.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.02%)</title><rect x="968.3" y="309" width="0.2" height="15.0" fill="rgb(226,159,50)" rx="2" ry="2" />
<text  x="971.35" y="319.5" ></text>
</g>
<g >
<title>gfx_v8_0_eop_irq (4 samples, 0.06%)</title><rect x="966.9" y="437" width="0.7" height="15.0" fill="rgb(220,179,3)" rx="2" ry="2" />
<text  x="969.89" y="447.5" ></text>
</g>
<g >
<title>NaClRefCountRef (73 samples, 1.13%)</title><rect x="627.2" y="581" width="13.3" height="15.0" fill="rgb(250,174,15)" rx="2" ry="2" />
<text  x="630.18" y="591.5" ></text>
</g>
<g >
<title>____sys_recvmsg (7 samples, 0.11%)</title><rect x="938.9" y="613" width="1.3" height="15.0" fill="rgb(209,46,13)" rx="2" ry="2" />
<text  x="941.88" y="623.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.02%)</title><rect x="26.1" y="501" width="0.2" height="15.0" fill="rgb(243,183,54)" rx="2" ry="2" />
<text  x="29.11" y="511.5" ></text>
</g>
<g >
<title>dc_stream_release (1 samples, 0.02%)</title><rect x="951.3" y="565" width="0.2" height="15.0" fill="rgb(216,215,45)" rx="2" ry="2" />
<text  x="954.33" y="575.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="996.0" y="389" width="0.2" height="15.0" fill="rgb(241,0,12)" rx="2" ry="2" />
<text  x="998.99" y="399.5" ></text>
</g>
<g >
<title>schedule_idle (11 samples, 0.17%)</title><rect x="1187.4" y="565" width="2.1" height="15.0" fill="rgb(218,225,26)" rx="2" ry="2" />
<text  x="1190.44" y="575.5" ></text>
</g>
<g >
<title>add_module.constprop.0 (1 samples, 0.02%)</title><rect x="10.4" y="549" width="0.1" height="15.0" fill="rgb(227,99,20)" rx="2" ry="2" />
<text  x="13.37" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (97 samples, 1.50%)</title><rect x="444.1" y="501" width="17.8" height="15.0" fill="rgb(240,156,23)" rx="2" ry="2" />
<text  x="447.15" y="511.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (2 samples, 0.03%)</title><rect x="103.7" y="325" width="0.4" height="15.0" fill="rgb(245,67,50)" rx="2" ry="2" />
<text  x="106.71" y="335.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (3 samples, 0.05%)</title><rect x="959.9" y="309" width="0.6" height="15.0" fill="rgb(232,32,20)" rx="2" ry="2" />
<text  x="962.93" y="319.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.02%)</title><rect x="308.5" y="453" width="0.2" height="15.0" fill="rgb(209,29,27)" rx="2" ry="2" />
<text  x="311.52" y="463.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (4 samples, 0.06%)</title><rect x="379.7" y="645" width="0.8" height="15.0" fill="rgb(254,114,15)" rx="2" ry="2" />
<text  x="382.72" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (18 samples, 0.28%)</title><rect x="88.3" y="613" width="3.3" height="15.0" fill="rgb(205,19,7)" rx="2" ry="2" />
<text  x="91.34" y="623.5" ></text>
</g>
<g >
<title>snd_ctl_elem_read (16 samples, 0.25%)</title><rect x="883.8" y="613" width="2.9" height="15.0" fill="rgb(220,135,15)" rx="2" ry="2" />
<text  x="886.79" y="623.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (1 samples, 0.02%)</title><rect x="103.9" y="101" width="0.2" height="15.0" fill="rgb(210,147,35)" rx="2" ry="2" />
<text  x="106.89" y="111.5" ></text>
</g>
<g >
<title>asm_common_interrupt (62 samples, 0.96%)</title><rect x="958.6" y="581" width="11.4" height="15.0" fill="rgb(234,143,20)" rx="2" ry="2" />
<text  x="961.65" y="591.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (1 samples, 0.02%)</title><rect x="31.6" y="197" width="0.2" height="15.0" fill="rgb(245,110,21)" rx="2" ry="2" />
<text  x="34.60" y="207.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="934.1" y="469" width="0.4" height="15.0" fill="rgb(230,59,10)" rx="2" ry="2" />
<text  x="937.12" y="479.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="1178.8" y="389" width="0.2" height="15.0" fill="rgb(219,93,33)" rx="2" ry="2" />
<text  x="1181.84" y="399.5" ></text>
</g>
<g >
<title>ovl_write_iter (2 samples, 0.03%)</title><rect x="33.2" y="469" width="0.4" height="15.0" fill="rgb(246,167,30)" rx="2" ry="2" />
<text  x="36.24" y="479.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_vblank_counter (3 samples, 0.05%)</title><rect x="960.7" y="293" width="0.5" height="15.0" fill="rgb(235,181,47)" rx="2" ry="2" />
<text  x="963.66" y="303.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.02%)</title><rect x="936.3" y="549" width="0.2" height="15.0" fill="rgb(233,67,49)" rx="2" ry="2" />
<text  x="939.32" y="559.5" ></text>
</g>
<g >
<title>policy_nodemask (1 samples, 0.02%)</title><rect x="690.0" y="549" width="0.1" height="15.0" fill="rgb(239,76,9)" rx="2" ry="2" />
<text  x="692.96" y="559.5" ></text>
</g>
<g >
<title>delete_from_page_cache (1 samples, 0.02%)</title><rect x="732.1" y="389" width="0.1" height="15.0" fill="rgb(222,82,39)" rx="2" ry="2" />
<text  x="735.06" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="940.5" y="661" width="0.2" height="15.0" fill="rgb(243,12,21)" rx="2" ry="2" />
<text  x="943.53" y="671.5" ></text>
</g>
<g >
<title>pagecache_get_page (9 samples, 0.14%)</title><rect x="28.1" y="293" width="1.7" height="15.0" fill="rgb(209,111,13)" rx="2" ry="2" />
<text  x="31.12" y="303.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="967.4" y="261" width="0.2" height="15.0" fill="rgb(233,112,4)" rx="2" ry="2" />
<text  x="970.43" y="271.5" ></text>
</g>
<g >
<title>amdgpu_crtc_get_scanout_position (6 samples, 0.09%)</title><rect x="961.2" y="309" width="1.1" height="15.0" fill="rgb(241,180,46)" rx="2" ry="2" />
<text  x="964.21" y="319.5" ></text>
</g>
<g >
<title>quiet_vmstat (2 samples, 0.03%)</title><rect x="1164.6" y="581" width="0.3" height="15.0" fill="rgb(209,180,44)" rx="2" ry="2" />
<text  x="1167.56" y="591.5" ></text>
</g>
<g >
<title>__get_vma_policy (1 samples, 0.02%)</title><rect x="682.1" y="565" width="0.2" height="15.0" fill="rgb(246,20,34)" rx="2" ry="2" />
<text  x="685.09" y="575.5" ></text>
</g>
<g >
<title>open_verify.constprop.0 (1 samples, 0.02%)</title><rect x="10.5" y="549" width="0.2" height="15.0" fill="rgb(253,118,44)" rx="2" ry="2" />
<text  x="13.55" y="559.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="883.4" y="565" width="0.2" height="15.0" fill="rgb(243,185,11)" rx="2" ry="2" />
<text  x="886.42" y="575.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.02%)</title><rect x="104.1" y="613" width="0.2" height="15.0" fill="rgb(243,49,14)" rx="2" ry="2" />
<text  x="107.08" y="623.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (23 samples, 0.36%)</title><rect x="87.4" y="661" width="4.2" height="15.0" fill="rgb(234,198,42)" rx="2" ry="2" />
<text  x="90.42" y="671.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (2 samples, 0.03%)</title><rect x="33.2" y="389" width="0.4" height="15.0" fill="rgb(214,99,44)" rx="2" ry="2" />
<text  x="36.24" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (413 samples, 6.41%)</title><rect x="870.6" y="677" width="75.6" height="15.0" fill="rgb(229,126,35)" rx="2" ry="2" />
<text  x="873.61" y="687.5" >do_sysca..</text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.02%)</title><rect x="33.6" y="565" width="0.2" height="15.0" fill="rgb(215,224,7)" rx="2" ry="2" />
<text  x="36.61" y="575.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.02%)</title><rect x="992.3" y="421" width="0.2" height="15.0" fill="rgb(209,90,54)" rx="2" ry="2" />
<text  x="995.33" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="26.1" y="533" width="0.2" height="15.0" fill="rgb(246,163,39)" rx="2" ry="2" />
<text  x="29.11" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (3 samples, 0.05%)</title><rect x="602.8" y="437" width="0.6" height="15.0" fill="rgb(222,29,14)" rx="2" ry="2" />
<text  x="605.84" y="447.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="702.4" y="437" width="0.2" height="15.0" fill="rgb(211,143,13)" rx="2" ry="2" />
<text  x="705.41" y="447.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="516.6" y="405" width="0.2" height="15.0" fill="rgb(214,55,1)" rx="2" ry="2" />
<text  x="519.63" y="415.5" ></text>
</g>
<g >
<title>__secure_computing (5 samples, 0.08%)</title><rect x="944.7" y="629" width="1.0" height="15.0" fill="rgb(212,174,29)" rx="2" ry="2" />
<text  x="947.74" y="639.5" ></text>
</g>
<g >
<title>update_plane_addr (2 samples, 0.03%)</title><rect x="949.7" y="533" width="0.3" height="15.0" fill="rgb(230,8,37)" rx="2" ry="2" />
<text  x="952.68" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="104.3" y="501" width="0.1" height="15.0" fill="rgb(205,148,43)" rx="2" ry="2" />
<text  x="107.26" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="27.8" y="229" width="0.1" height="15.0" fill="rgb(210,84,44)" rx="2" ry="2" />
<text  x="30.75" y="239.5" ></text>
</g>
<g >
<title>NaClAppThreadDelete (1 samples, 0.02%)</title><rect x="102.6" y="613" width="0.2" height="15.0" fill="rgb(250,28,0)" rx="2" ry="2" />
<text  x="105.61" y="623.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.02%)</title><rect x="10.5" y="437" width="0.2" height="15.0" fill="rgb(247,118,44)" rx="2" ry="2" />
<text  x="13.55" y="447.5" ></text>
</g>
<g >
<title>generic_reg_update_ex (2 samples, 0.03%)</title><rect x="949.7" y="501" width="0.3" height="15.0" fill="rgb(254,64,52)" rx="2" ry="2" />
<text  x="952.68" y="511.5" ></text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.05%)</title><rect x="942.7" y="437" width="0.6" height="15.0" fill="rgb(240,35,54)" rx="2" ry="2" />
<text  x="945.73" y="447.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="876.7" y="565" width="0.1" height="15.0" fill="rgb(208,68,47)" rx="2" ry="2" />
<text  x="879.65" y="575.5" ></text>
</g>
<g >
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="873.9" y="613" width="0.2" height="15.0" fill="rgb(212,79,42)" rx="2" ry="2" />
<text  x="876.91" y="623.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.02%)</title><rect x="1174.8" y="597" width="0.2" height="15.0" fill="rgb(206,71,34)" rx="2" ry="2" />
<text  x="1177.81" y="607.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (1 samples, 0.02%)</title><rect x="930.3" y="581" width="0.2" height="15.0" fill="rgb(233,174,14)" rx="2" ry="2" />
<text  x="933.28" y="591.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (3 samples, 0.05%)</title><rect x="30.0" y="293" width="0.5" height="15.0" fill="rgb(226,78,7)" rx="2" ry="2" />
<text  x="32.95" y="303.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (3 samples, 0.05%)</title><rect x="25.2" y="549" width="0.5" height="15.0" fill="rgb(233,21,15)" rx="2" ry="2" />
<text  x="28.19" y="559.5" ></text>
</g>
<g >
<title>swake_up_all_locked (1 samples, 0.02%)</title><rect x="966.7" y="341" width="0.2" height="15.0" fill="rgb(223,131,14)" rx="2" ry="2" />
<text  x="969.70" y="351.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampolineCall (1 samples, 0.02%)</title><rect x="104.1" y="533" width="0.2" height="15.0" fill="rgb(214,52,21)" rx="2" ry="2" />
<text  x="107.08" y="543.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (6 samples, 0.09%)</title><rect x="692.3" y="517" width="1.1" height="15.0" fill="rgb(251,213,25)" rx="2" ry="2" />
<text  x="695.34" y="527.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (1 samples, 0.02%)</title><rect x="10.5" y="421" width="0.2" height="15.0" fill="rgb(232,70,53)" rx="2" ry="2" />
<text  x="13.55" y="431.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="103.5" y="357" width="0.2" height="15.0" fill="rgb(251,226,28)" rx="2" ry="2" />
<text  x="106.53" y="367.5" ></text>
</g>
<g >
<title>schedule (6 samples, 0.09%)</title><rect x="872.8" y="597" width="1.1" height="15.0" fill="rgb(216,66,14)" rx="2" ry="2" />
<text  x="875.81" y="607.5" ></text>
</g>
<g >
<title>check_tsc_unstable (1 samples, 0.02%)</title><rect x="953.9" y="613" width="0.2" height="15.0" fill="rgb(208,32,26)" rx="2" ry="2" />
<text  x="956.89" y="623.5" ></text>
</g>
<g >
<title>dm_read_reg_func (3 samples, 0.05%)</title><rect x="948.6" y="501" width="0.5" height="15.0" fill="rgb(245,45,8)" rx="2" ry="2" />
<text  x="951.58" y="511.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (21 samples, 0.33%)</title><rect x="308.7" y="469" width="3.9" height="15.0" fill="rgb(249,49,37)" rx="2" ry="2" />
<text  x="311.71" y="479.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (2 samples, 0.03%)</title><rect x="31.4" y="213" width="0.4" height="15.0" fill="rgb(254,39,15)" rx="2" ry="2" />
<text  x="34.41" y="223.5" ></text>
</g>
<g >
<title>native_load_tls (1 samples, 0.02%)</title><rect x="946.6" y="693" width="0.2" height="15.0" fill="rgb(247,187,53)" rx="2" ry="2" />
<text  x="949.57" y="703.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (33 samples, 0.51%)</title><rect x="382.3" y="613" width="6.0" height="15.0" fill="rgb(253,93,16)" rx="2" ry="2" />
<text  x="385.28" y="623.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (415 samples, 6.44%)</title><rect x="486.6" y="533" width="76.0" height="15.0" fill="rgb(244,178,3)" rx="2" ry="2" />
<text  x="489.61" y="543.5" >rustposi..</text>
</g>
<g >
<title>intel_pmu_disable_all (2 samples, 0.03%)</title><rect x="984.1" y="373" width="0.4" height="15.0" fill="rgb(210,193,23)" rx="2" ry="2" />
<text  x="987.09" y="383.5" ></text>
</g>
<g >
<title>[sel_ldr] (3,181 samples, 49.34%)</title><rect x="61.1" y="693" width="582.2" height="15.0" fill="rgb(234,84,5)" rx="2" ry="2" />
<text  x="64.07" y="703.5" >[sel_ldr]</text>
</g>
<g >
<title>apic_ack_edge (1 samples, 0.02%)</title><rect x="967.8" y="501" width="0.2" height="15.0" fill="rgb(222,115,41)" rx="2" ry="2" />
<text  x="970.80" y="511.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="927.9" y="613" width="0.4" height="15.0" fill="rgb(223,219,7)" rx="2" ry="2" />
<text  x="930.90" y="623.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="980.8" y="437" width="0.2" height="15.0" fill="rgb(237,212,53)" rx="2" ry="2" />
<text  x="983.80" y="447.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (20 samples, 0.31%)</title><rect x="304.9" y="437" width="3.6" height="15.0" fill="rgb(243,18,37)" rx="2" ry="2" />
<text  x="307.86" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (29 samples, 0.45%)</title><rect x="519.6" y="437" width="5.3" height="15.0" fill="rgb(214,46,27)" rx="2" ry="2" />
<text  x="522.56" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (1 samples, 0.02%)</title><rect x="103.2" y="309" width="0.1" height="15.0" fill="rgb(231,201,36)" rx="2" ry="2" />
<text  x="106.16" y="319.5" ></text>
</g>
<g >
<title>snd_pcm_update_hw_ptr0 (65 samples, 1.01%)</title><rect x="911.6" y="565" width="11.9" height="15.0" fill="rgb(225,15,9)" rx="2" ry="2" />
<text  x="914.61" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1 samples, 0.02%)</title><rect x="1185.8" y="517" width="0.2" height="15.0" fill="rgb(246,228,43)" rx="2" ry="2" />
<text  x="1188.79" y="527.5" ></text>
</g>
<g >
<title>__dequeue_rt_entity (1 samples, 0.02%)</title><rect x="933.2" y="501" width="0.2" height="15.0" fill="rgb(222,124,37)" rx="2" ry="2" />
<text  x="936.21" y="511.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="102.8" y="133" width="0.2" height="15.0" fill="rgb(224,30,12)" rx="2" ry="2" />
<text  x="105.80" y="143.5" ></text>
</g>
<g >
<title>[[heap]] (2 samples, 0.03%)</title><rect x="33.8" y="693" width="0.4" height="15.0" fill="rgb(223,67,22)" rx="2" ry="2" />
<text  x="36.79" y="703.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="102.2" y="629" width="0.4" height="15.0" fill="rgb(251,103,51)" rx="2" ry="2" />
<text  x="105.25" y="639.5" ></text>
</g>
<g >
<title>ttm_bo_validate (1 samples, 0.02%)</title><rect x="876.1" y="533" width="0.2" height="15.0" fill="rgb(212,183,23)" rx="2" ry="2" />
<text  x="879.10" y="543.5" ></text>
</g>
<g >
<title>error_return (1 samples, 0.02%)</title><rect x="1154.5" y="597" width="0.2" height="15.0" fill="rgb(241,207,11)" rx="2" ry="2" />
<text  x="1157.49" y="607.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="968.0" y="421" width="0.2" height="15.0" fill="rgb(251,193,6)" rx="2" ry="2" />
<text  x="970.98" y="431.5" ></text>
</g>
<g >
<title>start_secondary (1,228 samples, 19.05%)</title><rect x="953.3" y="677" width="224.8" height="15.0" fill="rgb(206,54,13)" rx="2" ry="2" />
<text  x="956.34" y="687.5" >start_secondary</text>
</g>
<g >
<title>__memcg_kmem_charge (1 samples, 0.02%)</title><rect x="941.6" y="437" width="0.2" height="15.0" fill="rgb(240,124,20)" rx="2" ry="2" />
<text  x="944.63" y="447.5" ></text>
</g>
<g >
<title>find_busiest_group (6 samples, 0.09%)</title><rect x="992.5" y="437" width="1.1" height="15.0" fill="rgb(241,86,26)" rx="2" ry="2" />
<text  x="995.51" y="447.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1178.8" y="501" width="0.2" height="15.0" fill="rgb(245,107,29)" rx="2" ry="2" />
<text  x="1181.84" y="511.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.02%)</title><rect x="731.5" y="437" width="0.2" height="15.0" fill="rgb(231,44,51)" rx="2" ry="2" />
<text  x="734.51" y="447.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="870.6" y="533" width="0.2" height="15.0" fill="rgb(254,215,13)" rx="2" ry="2" />
<text  x="873.61" y="543.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (36 samples, 0.56%)</title><rect x="95.5" y="597" width="6.6" height="15.0" fill="rgb(236,175,40)" rx="2" ry="2" />
<text  x="98.48" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="102.8" y="373" width="0.2" height="15.0" fill="rgb(242,25,25)" rx="2" ry="2" />
<text  x="105.80" y="383.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="27.4" y="133" width="0.2" height="15.0" fill="rgb(231,57,0)" rx="2" ry="2" />
<text  x="30.39" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="33.6" y="677" width="0.2" height="15.0" fill="rgb(217,159,5)" rx="2" ry="2" />
<text  x="36.61" y="687.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (2 samples, 0.03%)</title><rect x="34.9" y="677" width="0.4" height="15.0" fill="rgb(232,184,39)" rx="2" ry="2" />
<text  x="37.89" y="687.5" ></text>
</g>
<g >
<title>dm_drm_plane_duplicate_state (1 samples, 0.02%)</title><rect x="881.2" y="533" width="0.2" height="15.0" fill="rgb(251,31,30)" rx="2" ry="2" />
<text  x="884.23" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (2 samples, 0.03%)</title><rect x="1175.7" y="629" width="0.4" height="15.0" fill="rgb(210,184,38)" rx="2" ry="2" />
<text  x="1178.72" y="639.5" ></text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.05%)</title><rect x="967.1" y="277" width="0.5" height="15.0" fill="rgb(248,188,50)" rx="2" ry="2" />
<text  x="970.07" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (9 samples, 0.14%)</title><rect x="938.9" y="661" width="1.6" height="15.0" fill="rgb(250,18,51)" rx="2" ry="2" />
<text  x="941.88" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (40 samples, 0.62%)</title><rect x="461.9" y="533" width="7.3" height="15.0" fill="rgb(229,29,20)" rx="2" ry="2" />
<text  x="464.90" y="543.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (1 samples, 0.02%)</title><rect x="93.6" y="661" width="0.2" height="15.0" fill="rgb(219,17,1)" rx="2" ry="2" />
<text  x="96.65" y="671.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (5 samples, 0.08%)</title><rect x="516.8" y="469" width="0.9" height="15.0" fill="rgb(219,162,28)" rx="2" ry="2" />
<text  x="519.81" y="479.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (1 samples, 0.02%)</title><rect x="720.5" y="581" width="0.2" height="15.0" fill="rgb(219,55,39)" rx="2" ry="2" />
<text  x="723.53" y="591.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.02%)</title><rect x="702.6" y="661" width="0.2" height="15.0" fill="rgb(229,200,13)" rx="2" ry="2" />
<text  x="705.59" y="671.5" ></text>
</g>
<g >
<title>wb_writeback (2 samples, 0.03%)</title><rect x="952.4" y="597" width="0.4" height="15.0" fill="rgb(235,227,27)" rx="2" ry="2" />
<text  x="955.43" y="607.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (5 samples, 0.08%)</title><rect x="515.7" y="453" width="0.9" height="15.0" fill="rgb(214,174,24)" rx="2" ry="2" />
<text  x="518.71" y="463.5" ></text>
</g>
<g >
<title>kvfree (1 samples, 0.02%)</title><rect x="989.9" y="421" width="0.2" height="15.0" fill="rgb(226,45,44)" rx="2" ry="2" />
<text  x="992.95" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (45 samples, 0.70%)</title><rect x="469.2" y="485" width="8.3" height="15.0" fill="rgb(251,219,47)" rx="2" ry="2" />
<text  x="472.22" y="495.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="728.8" y="437" width="0.3" height="15.0" fill="rgb(220,152,15)" rx="2" ry="2" />
<text  x="731.76" y="447.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="720.5" y="213" width="0.2" height="15.0" fill="rgb(241,179,48)" rx="2" ry="2" />
<text  x="723.53" y="223.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::pread_syscall (1 samples, 0.02%)</title><rect x="102.8" y="469" width="0.2" height="15.0" fill="rgb(211,27,15)" rx="2" ry="2" />
<text  x="105.80" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="489.0" y="405" width="0.2" height="15.0" fill="rgb(243,90,38)" rx="2" ry="2" />
<text  x="491.99" y="415.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.02%)</title><rect x="103.2" y="213" width="0.1" height="15.0" fill="rgb(226,48,21)" rx="2" ry="2" />
<text  x="106.16" y="223.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (1 samples, 0.02%)</title><rect x="720.5" y="533" width="0.2" height="15.0" fill="rgb(214,175,31)" rx="2" ry="2" />
<text  x="723.53" y="543.5" ></text>
</g>
<g >
<title>snd_ctl_elem_read_user (25 samples, 0.39%)</title><rect x="882.3" y="629" width="4.6" height="15.0" fill="rgb(250,194,40)" rx="2" ry="2" />
<text  x="885.33" y="639.5" ></text>
</g>
<g >
<title>cpuidle_reflect (6 samples, 0.09%)</title><rect x="1165.3" y="629" width="1.1" height="15.0" fill="rgb(241,36,13)" rx="2" ry="2" />
<text  x="1168.29" y="639.5" ></text>
</g>
<g >
<title>azx_get_position (65 samples, 1.01%)</title><rect x="911.6" y="533" width="11.9" height="15.0" fill="rgb(247,63,5)" rx="2" ry="2" />
<text  x="914.61" y="543.5" ></text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.02%)</title><rect x="979.3" y="389" width="0.2" height="15.0" fill="rgb(233,216,19)" rx="2" ry="2" />
<text  x="982.33" y="399.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="477.5" y="485" width="0.1" height="15.0" fill="rgb(218,111,42)" rx="2" ry="2" />
<text  x="480.46" y="495.5" ></text>
</g>
<g >
<title>do_iter_write (12 samples, 0.19%)</title><rect x="941.1" y="613" width="2.2" height="15.0" fill="rgb(237,201,16)" rx="2" ry="2" />
<text  x="944.08" y="623.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="571.4" y="373" width="0.3" height="15.0" fill="rgb(221,91,44)" rx="2" ry="2" />
<text  x="574.36" y="383.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (32 samples, 0.50%)</title><rect x="591.5" y="501" width="5.8" height="15.0" fill="rgb(241,34,30)" rx="2" ry="2" />
<text  x="594.49" y="511.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="925.5" y="517" width="0.2" height="15.0" fill="rgb(243,54,17)" rx="2" ry="2" />
<text  x="928.52" y="527.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="103.0" y="469" width="0.2" height="15.0" fill="rgb(238,56,2)" rx="2" ry="2" />
<text  x="105.98" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="516.6" y="469" width="0.2" height="15.0" fill="rgb(231,74,7)" rx="2" ry="2" />
<text  x="519.63" y="479.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (1 samples, 0.02%)</title><rect x="876.7" y="549" width="0.1" height="15.0" fill="rgb(226,86,21)" rx="2" ry="2" />
<text  x="879.65" y="559.5" ></text>
</g>
<g >
<title>try_to_wake_up (5 samples, 0.08%)</title><rect x="874.5" y="597" width="0.9" height="15.0" fill="rgb(213,1,16)" rx="2" ry="2" />
<text  x="877.45" y="607.5" ></text>
</g>
<g >
<title>dma_fence_signal (3 samples, 0.05%)</title><rect x="967.1" y="341" width="0.5" height="15.0" fill="rgb(248,46,46)" rx="2" ry="2" />
<text  x="970.07" y="351.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (2 samples, 0.03%)</title><rect x="962.3" y="293" width="0.4" height="15.0" fill="rgb(216,181,37)" rx="2" ry="2" />
<text  x="965.31" y="303.5" ></text>
</g>
<g >
<title>pick_next_task_rt (2 samples, 0.03%)</title><rect x="935.4" y="549" width="0.4" height="15.0" fill="rgb(250,114,16)" rx="2" ry="2" />
<text  x="938.40" y="559.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.02%)</title><rect x="703.9" y="677" width="0.2" height="15.0" fill="rgb(237,97,42)" rx="2" ry="2" />
<text  x="706.87" y="687.5" ></text>
</g>
<g >
<title>mblen (1 samples, 0.02%)</title><rect x="10.4" y="629" width="0.1" height="15.0" fill="rgb(214,32,19)" rx="2" ry="2" />
<text  x="13.37" y="639.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="948.4" y="453" width="0.2" height="15.0" fill="rgb(219,89,32)" rx="2" ry="2" />
<text  x="951.40" y="463.5" ></text>
</g>
<g >
<title>__fget_files (2 samples, 0.03%)</title><rect x="924.1" y="581" width="0.3" height="15.0" fill="rgb(243,62,48)" rx="2" ry="2" />
<text  x="927.06" y="591.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="489.0" y="469" width="0.2" height="15.0" fill="rgb(210,87,3)" rx="2" ry="2" />
<text  x="491.99" y="479.5" ></text>
</g>
<g >
<title>poll_select_finish (1 samples, 0.02%)</title><rect x="944.0" y="661" width="0.2" height="15.0" fill="rgb(223,66,38)" rx="2" ry="2" />
<text  x="947.01" y="671.5" ></text>
</g>
<g >
<title>dm_read_reg_func (2 samples, 0.03%)</title><rect x="949.7" y="485" width="0.3" height="15.0" fill="rgb(210,120,41)" rx="2" ry="2" />
<text  x="952.68" y="495.5" ></text>
</g>
<g >
<title>CompareAndSwap (44 samples, 0.68%)</title><rect x="79.2" y="645" width="8.0" height="15.0" fill="rgb(246,118,5)" rx="2" ry="2" />
<text  x="82.19" y="655.5" ></text>
</g>
<g >
<title>psi_group_change (11 samples, 0.17%)</title><rect x="1172.2" y="581" width="2.1" height="15.0" fill="rgb(219,117,19)" rx="2" ry="2" />
<text  x="1175.25" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (1 samples, 0.02%)</title><rect x="103.5" y="437" width="0.2" height="15.0" fill="rgb(205,47,10)" rx="2" ry="2" />
<text  x="106.53" y="447.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (1 samples, 0.02%)</title><rect x="103.0" y="437" width="0.2" height="15.0" fill="rgb(228,141,52)" rx="2" ry="2" />
<text  x="105.98" y="447.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.02%)</title><rect x="702.4" y="645" width="0.2" height="15.0" fill="rgb(212,118,38)" rx="2" ry="2" />
<text  x="705.41" y="655.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.02%)</title><rect x="938.7" y="597" width="0.2" height="15.0" fill="rgb(210,200,44)" rx="2" ry="2" />
<text  x="941.70" y="607.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="939.1" y="597" width="0.1" height="15.0" fill="rgb(228,216,35)" rx="2" ry="2" />
<text  x="942.06" y="607.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (79 samples, 1.23%)</title><rect x="10.7" y="629" width="14.5" height="15.0" fill="rgb(205,85,28)" rx="2" ry="2" />
<text  x="13.73" y="639.5" ></text>
</g>
<g >
<title>std::fs::remove_file (1 samples, 0.02%)</title><rect x="103.5" y="517" width="0.2" height="15.0" fill="rgb(234,160,22)" rx="2" ry="2" />
<text  x="106.53" y="527.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (1 samples, 0.02%)</title><rect x="878.8" y="437" width="0.2" height="15.0" fill="rgb(207,15,45)" rx="2" ry="2" />
<text  x="881.85" y="447.5" ></text>
</g>
<g >
<title>drm_crtc_send_vblank_event (1 samples, 0.02%)</title><rect x="966.7" y="405" width="0.2" height="15.0" fill="rgb(229,211,8)" rx="2" ry="2" />
<text  x="969.70" y="415.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (1 samples, 0.02%)</title><rect x="968.0" y="293" width="0.2" height="15.0" fill="rgb(246,139,3)" rx="2" ry="2" />
<text  x="970.98" y="303.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="603.4" y="405" width="0.2" height="15.0" fill="rgb(216,174,13)" rx="2" ry="2" />
<text  x="606.39" y="415.5" ></text>
</g>
<g >
<title>rcu_idle_enter (2 samples, 0.03%)</title><rect x="1154.7" y="597" width="0.3" height="15.0" fill="rgb(205,74,7)" rx="2" ry="2" />
<text  x="1157.68" y="607.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="973.8" y="421" width="0.4" height="15.0" fill="rgb(226,177,20)" rx="2" ry="2" />
<text  x="976.84" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.16%)</title><rect x="563.5" y="421" width="1.8" height="15.0" fill="rgb(247,53,15)" rx="2" ry="2" />
<text  x="566.49" y="431.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="927.2" y="597" width="0.2" height="15.0" fill="rgb(223,45,20)" rx="2" ry="2" />
<text  x="930.17" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (67 samples, 1.04%)</title><rect x="562.6" y="517" width="12.2" height="15.0" fill="rgb(217,8,4)" rx="2" ry="2" />
<text  x="565.57" y="527.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (621 samples, 9.63%)</title><rect x="157.3" y="501" width="113.7" height="15.0" fill="rgb(229,15,36)" rx="2" ry="2" />
<text  x="160.34" y="511.5" >ringbuf::ring_..</text>
</g>
<g >
<title>wake_up_process (2 samples, 0.03%)</title><rect x="996.0" y="421" width="0.4" height="15.0" fill="rgb(232,202,19)" rx="2" ry="2" />
<text  x="998.99" y="431.5" ></text>
</g>
<g >
<title>do_shared_fault (1 samples, 0.02%)</title><rect x="702.4" y="405" width="0.2" height="15.0" fill="rgb(254,73,24)" rx="2" ry="2" />
<text  x="705.41" y="415.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.02%)</title><rect x="378.1" y="565" width="0.2" height="15.0" fill="rgb(214,40,51)" rx="2" ry="2" />
<text  x="381.08" y="575.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="728.0" y="453" width="0.4" height="15.0" fill="rgb(243,132,19)" rx="2" ry="2" />
<text  x="731.03" y="463.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (49 samples, 0.76%)</title><rect x="477.6" y="501" width="9.0" height="15.0" fill="rgb(249,17,27)" rx="2" ry="2" />
<text  x="480.64" y="511.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (741 samples, 11.49%)</title><rect x="135.4" y="517" width="135.6" height="15.0" fill="rgb(224,168,45)" rx="2" ry="2" />
<text  x="138.38" y="527.5" >ringbuf::consumer..</text>
</g>
<g >
<title>blk_update_request (1 samples, 0.02%)</title><rect x="968.3" y="405" width="0.2" height="15.0" fill="rgb(242,218,0)" rx="2" ry="2" />
<text  x="971.35" y="415.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (50 samples, 0.78%)</title><rect x="958.6" y="501" width="9.2" height="15.0" fill="rgb(208,158,20)" rx="2" ry="2" />
<text  x="961.65" y="511.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.02%)</title><rect x="29.6" y="261" width="0.2" height="15.0" fill="rgb(214,94,36)" rx="2" ry="2" />
<text  x="32.58" y="271.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.02%)</title><rect x="104.3" y="325" width="0.1" height="15.0" fill="rgb(235,188,39)" rx="2" ry="2" />
<text  x="107.26" y="335.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (2 samples, 0.03%)</title><rect x="59.6" y="661" width="0.4" height="15.0" fill="rgb(251,133,45)" rx="2" ry="2" />
<text  x="62.60" y="671.5" ></text>
</g>
<g >
<title>snd_pcm_common_ioctl (201 samples, 3.12%)</title><rect x="886.9" y="629" width="36.8" height="15.0" fill="rgb(208,87,27)" rx="2" ry="2" />
<text  x="889.90" y="639.5" >snd..</text>
</g>
<g >
<title>get_scaling_info_update_type (1 samples, 0.02%)</title><rect x="950.0" y="533" width="0.2" height="15.0" fill="rgb(243,171,48)" rx="2" ry="2" />
<text  x="953.05" y="543.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (1 samples, 0.02%)</title><rect x="950.6" y="565" width="0.2" height="15.0" fill="rgb(254,22,20)" rx="2" ry="2" />
<text  x="953.60" y="575.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="95.3" y="357" width="0.2" height="15.0" fill="rgb(236,47,2)" rx="2" ry="2" />
<text  x="98.29" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (2 samples, 0.03%)</title><rect x="1186.2" y="533" width="0.3" height="15.0" fill="rgb(216,84,27)" rx="2" ry="2" />
<text  x="1189.16" y="543.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (39 samples, 0.60%)</title><rect x="929.7" y="613" width="7.2" height="15.0" fill="rgb(211,227,39)" rx="2" ry="2" />
<text  x="932.73" y="623.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="941.8" y="469" width="0.2" height="15.0" fill="rgb(236,95,28)" rx="2" ry="2" />
<text  x="944.81" y="479.5" ></text>
</g>
<g >
<title>smp_call_function_single (64 samples, 0.99%)</title><rect x="13.3" y="453" width="11.7" height="15.0" fill="rgb(231,174,48)" rx="2" ry="2" />
<text  x="16.29" y="463.5" ></text>
</g>
<g >
<title>menu_update (2 samples, 0.03%)</title><rect x="1160.2" y="581" width="0.3" height="15.0" fill="rgb(216,229,12)" rx="2" ry="2" />
<text  x="1163.17" y="591.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.02%)</title><rect x="702.6" y="565" width="0.2" height="15.0" fill="rgb(254,130,29)" rx="2" ry="2" />
<text  x="705.59" y="575.5" ></text>
</g>
<g >
<title>dc_stream_get_vblank_counter (2 samples, 0.03%)</title><rect x="962.9" y="373" width="0.3" height="15.0" fill="rgb(218,129,0)" rx="2" ry="2" />
<text  x="965.86" y="383.5" ></text>
</g>
<g >
<title>iovec_from_user (1 samples, 0.02%)</title><rect x="940.3" y="581" width="0.2" height="15.0" fill="rgb(218,153,18)" rx="2" ry="2" />
<text  x="943.35" y="591.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.02%)</title><rect x="720.7" y="597" width="0.2" height="15.0" fill="rgb(229,140,51)" rx="2" ry="2" />
<text  x="723.71" y="607.5" ></text>
</g>
<g >
<title>dispatcher (7 samples, 0.11%)</title><rect x="44.6" y="677" width="1.3" height="15.0" fill="rgb(220,43,6)" rx="2" ry="2" />
<text  x="47.59" y="687.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="698.7" y="629" width="0.2" height="15.0" fill="rgb(252,84,13)" rx="2" ry="2" />
<text  x="701.75" y="639.5" ></text>
</g>
<g >
<title>drm_sched_wakeup (5 samples, 0.08%)</title><rect x="878.1" y="549" width="0.9" height="15.0" fill="rgb(219,98,6)" rx="2" ry="2" />
<text  x="881.12" y="559.5" ></text>
</g>
<g >
<title>NaClSysWrite (2 samples, 0.03%)</title><rect x="378.3" y="661" width="0.3" height="15.0" fill="rgb(239,70,22)" rx="2" ry="2" />
<text  x="381.26" y="671.5" ></text>
</g>
<g >
<title>follow_pmd_mask.isra.0 (1 samples, 0.02%)</title><rect x="702.6" y="453" width="0.2" height="15.0" fill="rgb(233,188,52)" rx="2" ry="2" />
<text  x="705.59" y="463.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="882.5" y="565" width="0.2" height="15.0" fill="rgb(230,43,16)" rx="2" ry="2" />
<text  x="885.51" y="575.5" ></text>
</g>
<g >
<title>amdgpu_ih_process (1 samples, 0.02%)</title><rect x="968.0" y="389" width="0.2" height="15.0" fill="rgb(233,139,35)" rx="2" ry="2" />
<text  x="970.98" y="399.5" ></text>
</g>
<g >
<title>main (1 samples, 0.02%)</title><rect x="720.5" y="661" width="0.2" height="15.0" fill="rgb(212,27,53)" rx="2" ry="2" />
<text  x="723.53" y="671.5" ></text>
</g>
<g >
<title>xas_store (1 samples, 0.02%)</title><rect x="28.9" y="245" width="0.1" height="15.0" fill="rgb(230,59,47)" rx="2" ry="2" />
<text  x="31.85" y="255.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (6 samples, 0.09%)</title><rect x="961.2" y="261" width="1.1" height="15.0" fill="rgb(216,148,4)" rx="2" ry="2" />
<text  x="964.21" y="271.5" ></text>
</g>
<g >
<title>drm_handle_vblank_events (1 samples, 0.02%)</title><rect x="959.7" y="373" width="0.2" height="15.0" fill="rgb(240,209,53)" rx="2" ry="2" />
<text  x="962.75" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (107 samples, 1.66%)</title><rect x="679.3" y="645" width="19.6" height="15.0" fill="rgb(231,204,43)" rx="2" ry="2" />
<text  x="682.34" y="655.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (3 samples, 0.05%)</title><rect x="979.1" y="405" width="0.6" height="15.0" fill="rgb(238,33,40)" rx="2" ry="2" />
<text  x="982.15" y="415.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (33 samples, 0.51%)</title><rect x="591.3" y="533" width="6.0" height="15.0" fill="rgb(244,23,52)" rx="2" ry="2" />
<text  x="594.31" y="543.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (5 samples, 0.08%)</title><rect x="878.1" y="517" width="0.9" height="15.0" fill="rgb(211,139,3)" rx="2" ry="2" />
<text  x="881.12" y="527.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (9 samples, 0.14%)</title><rect x="118.7" y="501" width="1.7" height="15.0" fill="rgb(237,93,4)" rx="2" ry="2" />
<text  x="121.72" y="511.5" ></text>
</g>
<g >
<title>drm_atomic_helper_prepare_planes (2 samples, 0.03%)</title><rect x="880.3" y="533" width="0.4" height="15.0" fill="rgb(221,196,29)" rx="2" ry="2" />
<text  x="883.31" y="543.5" ></text>
</g>
<g >
<title>lind_pread (1 samples, 0.02%)</title><rect x="102.8" y="517" width="0.2" height="15.0" fill="rgb(216,70,21)" rx="2" ry="2" />
<text  x="105.80" y="527.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="959.6" y="389" width="0.1" height="15.0" fill="rgb(246,55,36)" rx="2" ry="2" />
<text  x="962.56" y="399.5" ></text>
</g>
<g >
<title>dm_plane_helper_prepare_fb (1 samples, 0.02%)</title><rect x="880.3" y="517" width="0.2" height="15.0" fill="rgb(218,147,19)" rx="2" ry="2" />
<text  x="883.31" y="527.5" ></text>
</g>
<g >
<title>seccomp_run_filters (3 samples, 0.05%)</title><rect x="945.1" y="597" width="0.6" height="15.0" fill="rgb(240,101,32)" rx="2" ry="2" />
<text  x="948.10" y="607.5" ></text>
</g>
<g >
<title>put_prev_task_rt (1 samples, 0.02%)</title><rect x="936.0" y="549" width="0.1" height="15.0" fill="rgb(210,160,43)" rx="2" ry="2" />
<text  x="938.95" y="559.5" ></text>
</g>
<g >
<title>DynArrayGet (3 samples, 0.05%)</title><rect x="624.6" y="613" width="0.6" height="15.0" fill="rgb(224,133,44)" rx="2" ry="2" />
<text  x="627.62" y="623.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (10 samples, 0.16%)</title><rect x="923.9" y="629" width="1.8" height="15.0" fill="rgb(250,53,14)" rx="2" ry="2" />
<text  x="926.87" y="639.5" ></text>
</g>
<g >
<title>__schedule (11 samples, 0.17%)</title><rect x="1187.4" y="549" width="2.1" height="15.0" fill="rgb(251,88,21)" rx="2" ry="2" />
<text  x="1190.44" y="559.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (925 samples, 14.35%)</title><rect x="428.0" y="565" width="169.3" height="15.0" fill="rgb(205,185,29)" rx="2" ry="2" />
<text  x="431.04" y="575.5" >rustposix::safeposix:..</text>
</g>
<g >
<title>NaClHostDescRead (1,495 samples, 23.19%)</title><rect x="104.4" y="613" width="273.7" height="15.0" fill="rgb(249,95,0)" rx="2" ry="2" />
<text  x="107.44" y="623.5" >NaClHostDescRead</text>
</g>
<g >
<title>zap_pte_range (26 samples, 0.40%)</title><rect x="727.3" y="501" width="4.8" height="15.0" fill="rgb(215,28,40)" rx="2" ry="2" />
<text  x="730.30" y="511.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.02%)</title><rect x="868.4" y="693" width="0.2" height="15.0" fill="rgb(235,71,13)" rx="2" ry="2" />
<text  x="871.41" y="703.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="702.4" y="421" width="0.2" height="15.0" fill="rgb(232,209,31)" rx="2" ry="2" />
<text  x="705.41" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="981.3" y="421" width="0.2" height="15.0" fill="rgb(250,164,29)" rx="2" ry="2" />
<text  x="984.34" y="431.5" ></text>
</g>
<g >
<title>snd_pcm_status64 (67 samples, 1.04%)</title><rect x="911.2" y="597" width="12.3" height="15.0" fill="rgb(227,107,40)" rx="2" ry="2" />
<text  x="914.24" y="607.5" ></text>
</g>
<g >
<title>enqueue_task (2 samples, 0.03%)</title><rect x="878.5" y="421" width="0.3" height="15.0" fill="rgb(207,193,46)" rx="2" ry="2" />
<text  x="881.48" y="431.5" ></text>
</g>
<g >
<title>prepare_task_switch (4 samples, 0.06%)</title><rect x="1170.8" y="597" width="0.7" height="15.0" fill="rgb(223,55,4)" rx="2" ry="2" />
<text  x="1173.78" y="607.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="989.6" y="389" width="0.3" height="15.0" fill="rgb(220,78,46)" rx="2" ry="2" />
<text  x="992.58" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="635.8" y="549" width="0.2" height="15.0" fill="rgb(208,31,22)" rx="2" ry="2" />
<text  x="638.78" y="559.5" ></text>
</g>
<g >
<title>do_readlinkat (1 samples, 0.02%)</title><rect x="103.2" y="293" width="0.1" height="15.0" fill="rgb(218,23,10)" rx="2" ry="2" />
<text  x="106.16" y="303.5" ></text>
</g>
<g >
<title>__cmd_record (125 samples, 1.94%)</title><rect x="10.7" y="661" width="22.9" height="15.0" fill="rgb(222,190,37)" rx="2" ry="2" />
<text  x="13.73" y="671.5" >_..</text>
</g>
<g >
<title>clear_page_dirty_for_io (1 samples, 0.02%)</title><rect x="952.4" y="453" width="0.2" height="15.0" fill="rgb(232,143,54)" rx="2" ry="2" />
<text  x="955.43" y="463.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="966.2" y="197" width="0.1" height="15.0" fill="rgb(220,170,17)" rx="2" ry="2" />
<text  x="969.15" y="207.5" ></text>
</g>
<g >
<title>NaClMprotect (1 samples, 0.02%)</title><rect x="103.0" y="549" width="0.2" height="15.0" fill="rgb(234,77,37)" rx="2" ry="2" />
<text  x="105.98" y="559.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (1 samples, 0.02%)</title><rect x="103.2" y="229" width="0.1" height="15.0" fill="rgb(247,92,22)" rx="2" ry="2" />
<text  x="106.16" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="681.7" y="581" width="0.2" height="15.0" fill="rgb(250,6,39)" rx="2" ry="2" />
<text  x="684.72" y="591.5" ></text>
</g>
<g >
<title>NaClHostDescPRead (1 samples, 0.02%)</title><rect x="102.8" y="533" width="0.2" height="15.0" fill="rgb(221,166,6)" rx="2" ry="2" />
<text  x="105.80" y="543.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.02%)</title><rect x="702.4" y="485" width="0.2" height="15.0" fill="rgb(223,83,42)" rx="2" ry="2" />
<text  x="705.41" y="495.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (65 samples, 1.01%)</title><rect x="1178.1" y="677" width="11.9" height="15.0" fill="rgb(210,58,5)" rx="2" ry="2" />
<text  x="1181.10" y="687.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (2 samples, 0.03%)</title><rect x="27.8" y="293" width="0.3" height="15.0" fill="rgb(224,99,15)" rx="2" ry="2" />
<text  x="30.75" y="303.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (109 samples, 1.69%)</title><rect x="489.2" y="485" width="19.9" height="15.0" fill="rgb(212,35,17)" rx="2" ry="2" />
<text  x="492.17" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="938.7" y="661" width="0.2" height="15.0" fill="rgb(246,218,43)" rx="2" ry="2" />
<text  x="941.70" y="671.5" ></text>
</g>
<g >
<title>NaClDescIoDescPRead (1 samples, 0.02%)</title><rect x="102.8" y="549" width="0.2" height="15.0" fill="rgb(236,124,25)" rx="2" ry="2" />
<text  x="105.80" y="559.5" ></text>
</g>
<g >
<title>ext4_evict_inode (1 samples, 0.02%)</title><rect x="103.5" y="181" width="0.2" height="15.0" fill="rgb(243,176,1)" rx="2" ry="2" />
<text  x="106.53" y="191.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (3 samples, 0.05%)</title><rect x="960.7" y="261" width="0.5" height="15.0" fill="rgb(242,63,49)" rx="2" ry="2" />
<text  x="963.66" y="271.5" ></text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.02%)</title><rect x="25.9" y="533" width="0.2" height="15.0" fill="rgb(233,18,23)" rx="2" ry="2" />
<text  x="28.92" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.02%)</title><rect x="930.1" y="565" width="0.2" height="15.0" fill="rgb(244,45,37)" rx="2" ry="2" />
<text  x="933.10" y="575.5" ></text>
</g>
<g >
<title>_perf_ioctl (1 samples, 0.02%)</title><rect x="33.6" y="629" width="0.2" height="15.0" fill="rgb(231,31,38)" rx="2" ry="2" />
<text  x="36.61" y="639.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (1 samples, 0.02%)</title><rect x="732.2" y="485" width="0.2" height="15.0" fill="rgb(220,146,9)" rx="2" ry="2" />
<text  x="735.24" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (67 samples, 1.04%)</title><rect x="562.6" y="501" width="12.2" height="15.0" fill="rgb(248,91,21)" rx="2" ry="2" />
<text  x="565.57" y="511.5" ></text>
</g>
<g >
<title>alx_mask_msix (1 samples, 0.02%)</title><rect x="969.3" y="437" width="0.1" height="15.0" fill="rgb(245,137,54)" rx="2" ry="2" />
<text  x="972.26" y="447.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (2 samples, 0.03%)</title><rect x="95.1" y="613" width="0.4" height="15.0" fill="rgb(235,16,50)" rx="2" ry="2" />
<text  x="98.11" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (1 samples, 0.02%)</title><rect x="104.3" y="565" width="0.1" height="15.0" fill="rgb(246,200,10)" rx="2" ry="2" />
<text  x="107.26" y="575.5" ></text>
</g>
<g >
<title>psi_task_switch (1 samples, 0.02%)</title><rect x="935.8" y="549" width="0.2" height="15.0" fill="rgb(229,54,1)" rx="2" ry="2" />
<text  x="938.77" y="559.5" ></text>
</g>
<g >
<title>poll_idle (20 samples, 0.31%)</title><rect x="1181.0" y="517" width="3.7" height="15.0" fill="rgb(238,173,37)" rx="2" ry="2" />
<text  x="1184.03" y="527.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="940.5" y="645" width="0.2" height="15.0" fill="rgb(251,194,4)" rx="2" ry="2" />
<text  x="943.53" y="655.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (2 samples, 0.03%)</title><rect x="949.7" y="437" width="0.3" height="15.0" fill="rgb(213,47,17)" rx="2" ry="2" />
<text  x="952.68" y="447.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (3 samples, 0.05%)</title><rect x="966.2" y="277" width="0.5" height="15.0" fill="rgb(223,208,22)" rx="2" ry="2" />
<text  x="969.15" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.05%)</title><rect x="601.0" y="405" width="0.6" height="15.0" fill="rgb(245,25,46)" rx="2" ry="2" />
<text  x="604.01" y="415.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="1176.6" y="581" width="0.2" height="15.0" fill="rgb(205,50,52)" rx="2" ry="2" />
<text  x="1179.64" y="591.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.02%)</title><rect x="872.3" y="533" width="0.1" height="15.0" fill="rgb(246,15,12)" rx="2" ry="2" />
<text  x="875.26" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (82 samples, 1.27%)</title><rect x="120.4" y="501" width="15.0" height="15.0" fill="rgb(235,65,1)" rx="2" ry="2" />
<text  x="123.37" y="511.5" ></text>
</g>
<g >
<title>amdgpu_irq_dispatch (1 samples, 0.02%)</title><rect x="967.6" y="469" width="0.2" height="15.0" fill="rgb(223,88,25)" rx="2" ry="2" />
<text  x="970.62" y="479.5" ></text>
</g>
<g >
<title>objects_lookup (1 samples, 0.02%)</title><rect x="877.0" y="533" width="0.2" height="15.0" fill="rgb(231,10,16)" rx="2" ry="2" />
<text  x="880.02" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="574.3" y="405" width="0.2" height="15.0" fill="rgb(244,94,18)" rx="2" ry="2" />
<text  x="577.28" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (34 samples, 0.53%)</title><rect x="603.6" y="533" width="6.2" height="15.0" fill="rgb(228,177,34)" rx="2" ry="2" />
<text  x="606.57" y="543.5" ></text>
</g>
<g >
<title>alloc_empty_file (1 samples, 0.02%)</title><rect x="10.0" y="501" width="0.2" height="15.0" fill="rgb(226,209,20)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (1 samples, 0.02%)</title><rect x="980.6" y="373" width="0.2" height="15.0" fill="rgb(238,39,6)" rx="2" ry="2" />
<text  x="983.61" y="383.5" ></text>
</g>
<g >
<title>timekeeping_advance (1 samples, 0.02%)</title><rect x="1176.6" y="565" width="0.2" height="15.0" fill="rgb(226,112,16)" rx="2" ry="2" />
<text  x="1179.64" y="575.5" ></text>
</g>
<g >
<title>page_remove_rmap (2 samples, 0.03%)</title><rect x="728.0" y="485" width="0.4" height="15.0" fill="rgb(233,141,13)" rx="2" ry="2" />
<text  x="731.03" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (264 samples, 4.09%)</title><rect x="875.4" y="661" width="48.3" height="15.0" fill="rgb(205,64,3)" rx="2" ry="2" />
<text  x="878.37" y="671.5" >__x6..</text>
</g>
<g >
<title>import_iovec (1 samples, 0.02%)</title><rect x="943.3" y="613" width="0.2" height="15.0" fill="rgb(208,71,27)" rx="2" ry="2" />
<text  x="946.27" y="623.5" ></text>
</g>
<g >
<title>sock_write_iter (11 samples, 0.17%)</title><rect x="941.3" y="581" width="2.0" height="15.0" fill="rgb(212,113,33)" rx="2" ry="2" />
<text  x="944.26" y="591.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1153.2" y="437" width="0.2" height="15.0" fill="rgb(254,163,36)" rx="2" ry="2" />
<text  x="1156.21" y="447.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6 samples, 0.09%)</title><rect x="954.8" y="597" width="1.1" height="15.0" fill="rgb(238,93,28)" rx="2" ry="2" />
<text  x="957.81" y="607.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (2 samples, 0.03%)</title><rect x="948.6" y="469" width="0.3" height="15.0" fill="rgb(212,192,43)" rx="2" ry="2" />
<text  x="951.58" y="479.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="574.3" y="357" width="0.2" height="15.0" fill="rgb(230,100,6)" rx="2" ry="2" />
<text  x="577.28" y="367.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.02%)</title><rect x="702.6" y="501" width="0.2" height="15.0" fill="rgb(242,141,30)" rx="2" ry="2" />
<text  x="705.59" y="511.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (6 samples, 0.09%)</title><rect x="1187.8" y="501" width="1.1" height="15.0" fill="rgb(205,71,6)" rx="2" ry="2" />
<text  x="1190.80" y="511.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (93 samples, 1.44%)</title><rect x="509.5" y="517" width="17.0" height="15.0" fill="rgb(253,68,51)" rx="2" ry="2" />
<text  x="512.49" y="527.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_vblank_counter (5 samples, 0.08%)</title><rect x="965.2" y="309" width="1.0" height="15.0" fill="rgb(243,147,7)" rx="2" ry="2" />
<text  x="968.24" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (32 samples, 0.50%)</title><rect x="38.7" y="677" width="5.9" height="15.0" fill="rgb(254,100,32)" rx="2" ry="2" />
<text  x="41.74" y="687.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="966.9" y="293" width="0.2" height="15.0" fill="rgb(244,76,26)" rx="2" ry="2" />
<text  x="969.89" y="303.5" ></text>
</g>
<g >
<title>task_woken_rt (2 samples, 0.03%)</title><rect x="978.8" y="405" width="0.3" height="15.0" fill="rgb(226,60,19)" rx="2" ry="2" />
<text  x="981.78" y="415.5" ></text>
</g>
<g >
<title>drm_atomic_helper_setup_commit (2 samples, 0.03%)</title><rect x="880.7" y="533" width="0.3" height="15.0" fill="rgb(253,93,14)" rx="2" ry="2" />
<text  x="883.68" y="543.5" ></text>
</g>
<g >
<title>psi_avgs_work (1 samples, 0.02%)</title><rect x="952.2" y="629" width="0.2" height="15.0" fill="rgb(254,0,22)" rx="2" ry="2" />
<text  x="955.24" y="639.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="973.1" y="469" width="0.2" height="15.0" fill="rgb(234,178,54)" rx="2" ry="2" />
<text  x="976.11" y="479.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="102.8" y="165" width="0.2" height="15.0" fill="rgb(240,20,18)" rx="2" ry="2" />
<text  x="105.80" y="175.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="934.5" y="501" width="0.2" height="15.0" fill="rgb(236,130,10)" rx="2" ry="2" />
<text  x="937.49" y="511.5" ></text>
</g>
<g >
<title>ovl_write_iter (36 samples, 0.56%)</title><rect x="26.7" y="437" width="6.5" height="15.0" fill="rgb(226,229,39)" rx="2" ry="2" />
<text  x="29.66" y="447.5" ></text>
</g>
<g >
<title>dispatcher (1,495 samples, 23.19%)</title><rect x="104.4" y="581" width="273.7" height="15.0" fill="rgb(237,155,42)" rx="2" ry="2" />
<text  x="107.44" y="591.5" >dispatcher</text>
</g>
<g >
<title>NaClGetDescMu (1 samples, 0.02%)</title><rect x="378.1" y="613" width="0.2" height="15.0" fill="rgb(229,144,8)" rx="2" ry="2" />
<text  x="381.08" y="623.5" ></text>
</g>
<g >
<title>alx_poll (8 samples, 0.12%)</title><rect x="968.5" y="453" width="1.5" height="15.0" fill="rgb(248,35,26)" rx="2" ry="2" />
<text  x="971.53" y="463.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.02%)</title><rect x="1188.7" y="453" width="0.2" height="15.0" fill="rgb(237,195,11)" rx="2" ry="2" />
<text  x="1191.72" y="463.5" ></text>
</g>
<g >
<title>drm_send_event_locked (1 samples, 0.02%)</title><rect x="966.7" y="373" width="0.2" height="15.0" fill="rgb(238,71,54)" rx="2" ry="2" />
<text  x="969.70" y="383.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="962.7" y="325" width="0.2" height="15.0" fill="rgb(250,77,29)" rx="2" ry="2" />
<text  x="965.68" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="720.5" y="405" width="0.2" height="15.0" fill="rgb(247,38,1)" rx="2" ry="2" />
<text  x="723.53" y="415.5" ></text>
</g>
<g >
<title>NaClLoadTrampoline (1 samples, 0.02%)</title><rect x="104.1" y="565" width="0.2" height="15.0" fill="rgb(216,50,8)" rx="2" ry="2" />
<text  x="107.08" y="575.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (6 samples, 0.09%)</title><rect x="961.2" y="245" width="1.1" height="15.0" fill="rgb(221,204,41)" rx="2" ry="2" />
<text  x="964.21" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="527.4" y="373" width="0.2" height="15.0" fill="rgb(237,104,18)" rx="2" ry="2" />
<text  x="530.43" y="383.5" ></text>
</g>
<g >
<title>__do_fault (2 samples, 0.03%)</title><rect x="95.1" y="405" width="0.4" height="15.0" fill="rgb(207,30,26)" rx="2" ry="2" />
<text  x="98.11" y="415.5" ></text>
</g>
<g >
<title>dm_read_reg_func (2 samples, 0.03%)</title><rect x="962.9" y="341" width="0.3" height="15.0" fill="rgb(244,81,3)" rx="2" ry="2" />
<text  x="965.86" y="351.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1154.3" y="581" width="0.2" height="15.0" fill="rgb(235,29,51)" rx="2" ry="2" />
<text  x="1157.31" y="591.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="103.7" y="181" width="0.2" height="15.0" fill="rgb(241,176,30)" rx="2" ry="2" />
<text  x="106.71" y="191.5" ></text>
</g>
<g >
<title>down_write_killable (1 samples, 0.02%)</title><rect x="103.0" y="453" width="0.2" height="15.0" fill="rgb(228,152,45)" rx="2" ry="2" />
<text  x="105.98" y="463.5" ></text>
</g>
<g >
<title>NaClSysRead (1,496 samples, 23.20%)</title><rect x="104.4" y="645" width="273.9" height="15.0" fill="rgb(211,19,32)" rx="2" ry="2" />
<text  x="107.44" y="655.5" >NaClSysRead</text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="948.4" y="437" width="0.2" height="15.0" fill="rgb(244,87,38)" rx="2" ry="2" />
<text  x="951.40" y="447.5" ></text>
</g>
<g >
<title>snd_pcm_ioctl (201 samples, 3.12%)</title><rect x="886.9" y="645" width="36.8" height="15.0" fill="rgb(210,143,6)" rx="2" ry="2" />
<text  x="889.90" y="655.5" >snd..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (108 samples, 1.68%)</title><rect x="489.4" y="453" width="19.7" height="15.0" fill="rgb(215,136,37)" rx="2" ry="2" />
<text  x="492.36" y="463.5" ></text>
</g>
<g >
<title>scsi_end_request (2 samples, 0.03%)</title><rect x="968.2" y="421" width="0.3" height="15.0" fill="rgb(254,129,14)" rx="2" ry="2" />
<text  x="971.17" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.02%)</title><rect x="954.1" y="629" width="0.2" height="15.0" fill="rgb(244,25,51)" rx="2" ry="2" />
<text  x="957.07" y="639.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="872.3" y="549" width="0.1" height="15.0" fill="rgb(223,224,25)" rx="2" ry="2" />
<text  x="875.26" y="559.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1 samples, 0.02%)</title><rect x="87.2" y="661" width="0.2" height="15.0" fill="rgb(235,154,18)" rx="2" ry="2" />
<text  x="90.24" y="671.5" ></text>
</g>
<g >
<title>lru_cache_add (11 samples, 0.17%)</title><rect x="691.8" y="549" width="2.0" height="15.0" fill="rgb(224,48,32)" rx="2" ry="2" />
<text  x="694.79" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.11%)</title><rect x="598.1" y="453" width="1.3" height="15.0" fill="rgb(222,195,48)" rx="2" ry="2" />
<text  x="601.08" y="463.5" ></text>
</g>
<g >
<title>stop_one_cpu_nowait (1 samples, 0.02%)</title><rect x="985.6" y="453" width="0.1" height="15.0" fill="rgb(211,74,40)" rx="2" ry="2" />
<text  x="988.55" y="463.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="732.2" y="501" width="0.2" height="15.0" fill="rgb(248,160,27)" rx="2" ry="2" />
<text  x="735.24" y="511.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (7 samples, 0.11%)</title><rect x="871.2" y="613" width="1.2" height="15.0" fill="rgb(217,83,41)" rx="2" ry="2" />
<text  x="874.16" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="10.5" y="501" width="0.2" height="15.0" fill="rgb(228,78,0)" rx="2" ry="2" />
<text  x="13.55" y="511.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="936.5" y="565" width="0.2" height="15.0" fill="rgb(227,112,41)" rx="2" ry="2" />
<text  x="939.50" y="575.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (2 samples, 0.03%)</title><rect x="962.9" y="309" width="0.3" height="15.0" fill="rgb(205,33,44)" rx="2" ry="2" />
<text  x="965.86" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (11 samples, 0.17%)</title><rect x="418.2" y="533" width="2.0" height="15.0" fill="rgb(239,91,38)" rx="2" ry="2" />
<text  x="421.16" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (30 samples, 0.47%)</title><rect x="628.8" y="549" width="5.5" height="15.0" fill="rgb(210,67,19)" rx="2" ry="2" />
<text  x="631.83" y="559.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (2 samples, 0.03%)</title><rect x="988.3" y="485" width="0.4" height="15.0" fill="rgb(249,22,51)" rx="2" ry="2" />
<text  x="991.30" y="495.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (5 samples, 0.08%)</title><rect x="941.6" y="533" width="0.9" height="15.0" fill="rgb(254,186,27)" rx="2" ry="2" />
<text  x="944.63" y="543.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="970.5" y="517" width="0.2" height="15.0" fill="rgb(235,133,36)" rx="2" ry="2" />
<text  x="973.55" y="527.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (28 samples, 0.43%)</title><rect x="383.0" y="581" width="5.1" height="15.0" fill="rgb(223,20,3)" rx="2" ry="2" />
<text  x="386.02" y="591.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="702.4" y="469" width="0.2" height="15.0" fill="rgb(217,72,14)" rx="2" ry="2" />
<text  x="705.41" y="479.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="10.5" y="613" width="0.2" height="15.0" fill="rgb(248,179,45)" rx="2" ry="2" />
<text  x="13.55" y="623.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.03%)</title><rect x="696.9" y="565" width="0.4" height="15.0" fill="rgb(233,6,29)" rx="2" ry="2" />
<text  x="699.91" y="575.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="974.6" y="389" width="0.2" height="15.0" fill="rgb(211,11,38)" rx="2" ry="2" />
<text  x="977.57" y="399.5" ></text>
</g>
<g >
<title>follow_pud_mask.isra.0 (1 samples, 0.02%)</title><rect x="702.6" y="469" width="0.2" height="15.0" fill="rgb(231,164,37)" rx="2" ry="2" />
<text  x="705.59" y="479.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.02%)</title><rect x="1177.2" y="549" width="0.2" height="15.0" fill="rgb(245,43,53)" rx="2" ry="2" />
<text  x="1180.19" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="879.6" y="517" width="0.2" height="15.0" fill="rgb(254,135,16)" rx="2" ry="2" />
<text  x="882.58" y="527.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.08%)</title><rect x="573.0" y="437" width="0.9" height="15.0" fill="rgb(254,132,27)" rx="2" ry="2" />
<text  x="576.00" y="447.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (4 samples, 0.06%)</title><rect x="932.1" y="517" width="0.7" height="15.0" fill="rgb(240,65,34)" rx="2" ry="2" />
<text  x="935.11" y="527.5" ></text>
</g>
<g >
<title>azx_get_pos_lpib (21 samples, 0.33%)</title><rect x="889.1" y="501" width="3.8" height="15.0" fill="rgb(237,138,44)" rx="2" ry="2" />
<text  x="892.10" y="511.5" ></text>
</g>
<g >
<title>dc_stream_get_vblank_counter (3 samples, 0.05%)</title><rect x="960.7" y="309" width="0.5" height="15.0" fill="rgb(240,101,14)" rx="2" ry="2" />
<text  x="963.66" y="319.5" ></text>
</g>
<g >
<title>drm_atomic_get_plane_state (1 samples, 0.02%)</title><rect x="881.2" y="549" width="0.2" height="15.0" fill="rgb(214,180,23)" rx="2" ry="2" />
<text  x="884.23" y="559.5" ></text>
</g>
<g >
<title>swake_up_one (2 samples, 0.03%)</title><rect x="989.6" y="421" width="0.3" height="15.0" fill="rgb(244,113,11)" rx="2" ry="2" />
<text  x="992.58" y="431.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (3 samples, 0.05%)</title><rect x="702.8" y="565" width="0.5" height="15.0" fill="rgb(233,163,22)" rx="2" ry="2" />
<text  x="705.77" y="575.5" ></text>
</g>
<g >
<title>amdgpu_get_vblank_counter_kms (7 samples, 0.11%)</title><rect x="959.9" y="341" width="1.3" height="15.0" fill="rgb(215,205,46)" rx="2" ry="2" />
<text  x="962.93" y="351.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.02%)</title><rect x="952.2" y="613" width="0.2" height="15.0" fill="rgb(244,120,16)" rx="2" ry="2" />
<text  x="955.24" y="623.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (87 samples, 1.35%)</title><rect x="970.7" y="517" width="16.0" height="15.0" fill="rgb(231,136,25)" rx="2" ry="2" />
<text  x="973.73" y="527.5" ></text>
</g>
<g >
<title>rcu_core (9 samples, 0.14%)</title><rect x="988.7" y="469" width="1.6" height="15.0" fill="rgb(243,228,7)" rx="2" ry="2" />
<text  x="991.67" y="479.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (2 samples, 0.03%)</title><rect x="93.3" y="661" width="0.3" height="15.0" fill="rgb(232,120,52)" rx="2" ry="2" />
<text  x="96.28" y="671.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (2 samples, 0.03%)</title><rect x="947.9" y="549" width="0.3" height="15.0" fill="rgb(236,26,8)" rx="2" ry="2" />
<text  x="950.85" y="559.5" ></text>
</g>
<g >
<title>balance_fair (5 samples, 0.08%)</title><rect x="931.9" y="549" width="0.9" height="15.0" fill="rgb(211,54,52)" rx="2" ry="2" />
<text  x="934.93" y="559.5" ></text>
</g>
<g >
<title>psi_group_change (4 samples, 0.06%)</title><rect x="978.1" y="373" width="0.7" height="15.0" fill="rgb(220,189,3)" rx="2" ry="2" />
<text  x="981.05" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (9 samples, 0.14%)</title><rect x="870.8" y="661" width="1.6" height="15.0" fill="rgb(246,217,40)" rx="2" ry="2" />
<text  x="873.79" y="671.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (4 samples, 0.06%)</title><rect x="964.5" y="261" width="0.7" height="15.0" fill="rgb(222,191,8)" rx="2" ry="2" />
<text  x="967.51" y="271.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (2 samples, 0.03%)</title><rect x="59.6" y="645" width="0.4" height="15.0" fill="rgb(210,229,24)" rx="2" ry="2" />
<text  x="62.60" y="655.5" ></text>
</g>
<g >
<title>__GI___mmap64 (1 samples, 0.02%)</title><rect x="104.3" y="533" width="0.1" height="15.0" fill="rgb(212,225,24)" rx="2" ry="2" />
<text  x="107.26" y="543.5" ></text>
</g>
<g >
<title>allocate_slab (1 samples, 0.02%)</title><rect x="27.4" y="197" width="0.2" height="15.0" fill="rgb(226,124,33)" rx="2" ry="2" />
<text  x="30.39" y="207.5" ></text>
</g>
<g >
<title>dc_commit_updates_for_stream (6 samples, 0.09%)</title><rect x="949.1" y="565" width="1.1" height="15.0" fill="rgb(245,40,28)" rx="2" ry="2" />
<text  x="952.13" y="575.5" ></text>
</g>
<g >
<title>__schedule (39 samples, 0.60%)</title><rect x="1167.9" y="613" width="7.1" height="15.0" fill="rgb(246,187,35)" rx="2" ry="2" />
<text  x="1170.85" y="623.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.02%)</title><rect x="10.5" y="645" width="0.2" height="15.0" fill="rgb(242,79,47)" rx="2" ry="2" />
<text  x="13.55" y="655.5" ></text>
</g>
<g >
<title>all (6,447 samples, 100%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(229,40,2)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="1164.2" y="517" width="0.2" height="15.0" fill="rgb(234,169,5)" rx="2" ry="2" />
<text  x="1167.19" y="527.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="989.6" y="373" width="0.2" height="15.0" fill="rgb(236,37,17)" rx="2" ry="2" />
<text  x="992.58" y="383.5" ></text>
</g>
<g >
<title>pick_next_task_fair (8 samples, 0.12%)</title><rect x="1187.6" y="533" width="1.5" height="15.0" fill="rgb(243,228,2)" rx="2" ry="2" />
<text  x="1190.62" y="543.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (2 samples, 0.03%)</title><rect x="61.4" y="677" width="0.4" height="15.0" fill="rgb(244,219,28)" rx="2" ry="2" />
<text  x="64.43" y="687.5" ></text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.02%)</title><rect x="26.1" y="469" width="0.2" height="15.0" fill="rgb(236,115,50)" rx="2" ry="2" />
<text  x="29.11" y="479.5" ></text>
</g>
<g >
<title>cpuidle_select (42 samples, 0.65%)</title><rect x="1155.8" y="613" width="7.7" height="15.0" fill="rgb(250,192,34)" rx="2" ry="2" />
<text  x="1158.77" y="623.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (11 samples, 0.17%)</title><rect x="968.0" y="517" width="2.0" height="15.0" fill="rgb(251,168,38)" rx="2" ry="2" />
<text  x="970.98" y="527.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.02%)</title><rect x="873.9" y="597" width="0.2" height="15.0" fill="rgb(232,69,23)" rx="2" ry="2" />
<text  x="876.91" y="607.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (3 samples, 0.05%)</title><rect x="74.4" y="645" width="0.6" height="15.0" fill="rgb(229,71,3)" rx="2" ry="2" />
<text  x="77.43" y="655.5" ></text>
</g>
<g >
<title>check_cpu_stall (1 samples, 0.02%)</title><rect x="982.3" y="405" width="0.1" height="15.0" fill="rgb(251,146,37)" rx="2" ry="2" />
<text  x="985.26" y="415.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (4 samples, 0.06%)</title><rect x="980.2" y="453" width="0.8" height="15.0" fill="rgb(247,122,12)" rx="2" ry="2" />
<text  x="983.25" y="463.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="728.9" y="421" width="0.2" height="15.0" fill="rgb(253,218,46)" rx="2" ry="2" />
<text  x="731.95" y="431.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="731.3" y="373" width="0.2" height="15.0" fill="rgb(225,69,40)" rx="2" ry="2" />
<text  x="734.32" y="383.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.02%)</title><rect x="933.4" y="501" width="0.2" height="15.0" fill="rgb(248,148,20)" rx="2" ry="2" />
<text  x="936.39" y="511.5" ></text>
</g>
<g >
<title>amdgpu_get_vblank_counter_kms (5 samples, 0.08%)</title><rect x="962.3" y="405" width="0.9" height="15.0" fill="rgb(254,129,39)" rx="2" ry="2" />
<text  x="965.31" y="415.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.02%)</title><rect x="1155.4" y="613" width="0.2" height="15.0" fill="rgb(244,47,12)" rx="2" ry="2" />
<text  x="1158.41" y="623.5" ></text>
</g>
<g >
<title>__seccomp_filter (4 samples, 0.06%)</title><rect x="944.9" y="613" width="0.8" height="15.0" fill="rgb(210,60,27)" rx="2" ry="2" />
<text  x="947.92" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (1 samples, 0.02%)</title><rect x="870.6" y="661" width="0.2" height="15.0" fill="rgb(230,216,18)" rx="2" ry="2" />
<text  x="873.61" y="671.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.02%)</title><rect x="875.4" y="613" width="0.2" height="15.0" fill="rgb(227,42,0)" rx="2" ry="2" />
<text  x="878.37" y="623.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.05%)</title><rect x="27.2" y="245" width="0.6" height="15.0" fill="rgb(248,172,45)" rx="2" ry="2" />
<text  x="30.20" y="255.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="986.7" y="517" width="0.1" height="15.0" fill="rgb(233,144,51)" rx="2" ry="2" />
<text  x="989.65" y="527.5" ></text>
</g>
<g >
<title>dm_read_reg_func (4 samples, 0.06%)</title><rect x="964.5" y="277" width="0.7" height="15.0" fill="rgb(231,75,47)" rx="2" ry="2" />
<text  x="967.51" y="287.5" ></text>
</g>
<g >
<title>dc_release_state (1 samples, 0.02%)</title><rect x="951.3" y="581" width="0.2" height="15.0" fill="rgb(233,199,33)" rx="2" ry="2" />
<text  x="954.33" y="591.5" ></text>
</g>
<g >
<title>dce_pipe_control_lock (3 samples, 0.05%)</title><rect x="949.1" y="533" width="0.6" height="15.0" fill="rgb(214,38,44)" rx="2" ry="2" />
<text  x="952.13" y="543.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (32 samples, 0.50%)</title><rect x="591.5" y="517" width="5.8" height="15.0" fill="rgb(235,182,5)" rx="2" ry="2" />
<text  x="594.49" y="527.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (1 samples, 0.02%)</title><rect x="980.4" y="389" width="0.2" height="15.0" fill="rgb(249,26,35)" rx="2" ry="2" />
<text  x="983.43" y="399.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (2 samples, 0.03%)</title><rect x="873.4" y="565" width="0.3" height="15.0" fill="rgb(253,106,51)" rx="2" ry="2" />
<text  x="876.36" y="575.5" ></text>
</g>
<g >
<title>dm_vblank_get_counter (2 samples, 0.03%)</title><rect x="962.9" y="389" width="0.3" height="15.0" fill="rgb(235,30,24)" rx="2" ry="2" />
<text  x="965.86" y="399.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="911.1" y="597" width="0.1" height="15.0" fill="rgb(254,134,4)" rx="2" ry="2" />
<text  x="914.06" y="607.5" ></text>
</g>
<g >
<title>irq_enter_rcu (7 samples, 0.11%)</title><rect x="987.0" y="549" width="1.3" height="15.0" fill="rgb(213,19,48)" rx="2" ry="2" />
<text  x="990.02" y="559.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampoline (1 samples, 0.02%)</title><rect x="104.1" y="549" width="0.2" height="15.0" fill="rgb(225,119,49)" rx="2" ry="2" />
<text  x="107.08" y="559.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="928.3" y="613" width="0.1" height="15.0" fill="rgb(207,205,47)" rx="2" ry="2" />
<text  x="931.27" y="623.5" ></text>
</g>
<g >
<title>__enqueue_rt_entity (1 samples, 0.02%)</title><rect x="974.8" y="373" width="0.1" height="15.0" fill="rgb(232,122,12)" rx="2" ry="2" />
<text  x="977.76" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="270.8" y="437" width="0.2" height="15.0" fill="rgb(232,10,29)" rx="2" ry="2" />
<text  x="273.82" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::PIPE_TABLE (2 samples, 0.03%)</title><rect x="732.4" y="693" width="0.4" height="15.0" fill="rgb(241,118,19)" rx="2" ry="2" />
<text  x="735.42" y="703.5" ></text>
</g>
<g >
<title>blk_account_io_done (1 samples, 0.02%)</title><rect x="968.2" y="389" width="0.1" height="15.0" fill="rgb(254,73,19)" rx="2" ry="2" />
<text  x="971.17" y="399.5" ></text>
</g>
<g >
<title>__unlink (1 samples, 0.02%)</title><rect x="103.5" y="485" width="0.2" height="15.0" fill="rgb(225,129,16)" rx="2" ry="2" />
<text  x="106.53" y="495.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="34.0" y="629" width="0.2" height="15.0" fill="rgb(215,150,11)" rx="2" ry="2" />
<text  x="36.98" y="639.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (160 samples, 2.48%)</title><rect x="526.5" y="517" width="29.3" height="15.0" fill="rgb(219,135,25)" rx="2" ry="2" />
<text  x="529.51" y="527.5" >ri..</text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1164.2" y="501" width="0.2" height="15.0" fill="rgb(244,173,31)" rx="2" ry="2" />
<text  x="1167.19" y="511.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.02%)</title><rect x="102.1" y="549" width="0.1" height="15.0" fill="rgb(239,120,52)" rx="2" ry="2" />
<text  x="105.06" y="559.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (1 samples, 0.02%)</title><rect x="732.2" y="517" width="0.2" height="15.0" fill="rgb(215,167,17)" rx="2" ry="2" />
<text  x="735.24" y="527.5" ></text>
</g>
<g >
<title>ipv4_confirm (1 samples, 0.02%)</title><rect x="969.4" y="277" width="0.2" height="15.0" fill="rgb(213,121,18)" rx="2" ry="2" />
<text  x="972.45" y="287.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (13 samples, 0.20%)</title><rect x="570.4" y="437" width="2.4" height="15.0" fill="rgb(250,64,42)" rx="2" ry="2" />
<text  x="573.44" y="447.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="936.1" y="533" width="0.2" height="15.0" fill="rgb(209,56,46)" rx="2" ry="2" />
<text  x="939.14" y="543.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (2 samples, 0.03%)</title><rect x="962.9" y="325" width="0.3" height="15.0" fill="rgb(224,48,45)" rx="2" ry="2" />
<text  x="965.86" y="335.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (1 samples, 0.02%)</title><rect x="103.5" y="501" width="0.2" height="15.0" fill="rgb(219,196,1)" rx="2" ry="2" />
<text  x="106.53" y="511.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="1186.3" y="469" width="0.2" height="15.0" fill="rgb(209,165,48)" rx="2" ry="2" />
<text  x="1189.34" y="479.5" ></text>
</g>
<g >
<title>schedule_timeout (4 samples, 0.06%)</title><rect x="946.9" y="629" width="0.8" height="15.0" fill="rgb(254,157,17)" rx="2" ry="2" />
<text  x="949.94" y="639.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (1 samples, 0.02%)</title><rect x="927.2" y="613" width="0.2" height="15.0" fill="rgb(222,107,46)" rx="2" ry="2" />
<text  x="930.17" y="623.5" ></text>
</g>
<g >
<title>record__mmap_read_all (40 samples, 0.62%)</title><rect x="26.3" y="645" width="7.3" height="15.0" fill="rgb(226,217,18)" rx="2" ry="2" />
<text  x="29.29" y="655.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 0.98%)</title><rect x="13.5" y="357" width="11.5" height="15.0" fill="rgb(222,135,42)" rx="2" ry="2" />
<text  x="16.48" y="367.5" ></text>
</g>
<g >
<title>rcu_idle_exit (3 samples, 0.05%)</title><rect x="1153.8" y="581" width="0.5" height="15.0" fill="rgb(229,229,53)" rx="2" ry="2" />
<text  x="1156.76" y="591.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="1153.2" y="469" width="0.2" height="15.0" fill="rgb(254,61,48)" rx="2" ry="2" />
<text  x="1156.21" y="479.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (35 samples, 0.54%)</title><rect x="26.8" y="357" width="6.4" height="15.0" fill="rgb(232,210,53)" rx="2" ry="2" />
<text  x="29.84" y="367.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.02%)</title><rect x="1164.2" y="549" width="0.2" height="15.0" fill="rgb(243,195,28)" rx="2" ry="2" />
<text  x="1167.19" y="559.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="103.7" y="197" width="0.2" height="15.0" fill="rgb(236,94,19)" rx="2" ry="2" />
<text  x="106.71" y="207.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.16%)</title><rect x="567.7" y="405" width="1.8" height="15.0" fill="rgb(219,189,41)" rx="2" ry="2" />
<text  x="570.70" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (56 samples, 0.87%)</title><rect x="562.6" y="485" width="10.2" height="15.0" fill="rgb(222,228,14)" rx="2" ry="2" />
<text  x="565.57" y="495.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (1 samples, 0.02%)</title><rect x="1176.6" y="549" width="0.2" height="15.0" fill="rgb(230,81,29)" rx="2" ry="2" />
<text  x="1179.64" y="559.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="940.7" y="629" width="0.2" height="15.0" fill="rgb(220,123,11)" rx="2" ry="2" />
<text  x="943.71" y="639.5" ></text>
</g>
<g >
<title>internal_get_user_pages_fast (1 samples, 0.02%)</title><rect x="873.9" y="565" width="0.2" height="15.0" fill="rgb(230,216,13)" rx="2" ry="2" />
<text  x="876.91" y="575.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (2 samples, 0.03%)</title><rect x="35.4" y="677" width="0.4" height="15.0" fill="rgb(233,119,37)" rx="2" ry="2" />
<text  x="38.44" y="687.5" ></text>
</g>
<g >
<title>generic_write_end (10 samples, 0.16%)</title><rect x="30.0" y="309" width="1.8" height="15.0" fill="rgb(231,172,31)" rx="2" ry="2" />
<text  x="32.95" y="319.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.02%)</title><rect x="10.5" y="469" width="0.2" height="15.0" fill="rgb(218,97,43)" rx="2" ry="2" />
<text  x="13.55" y="479.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3 samples, 0.05%)</title><rect x="945.7" y="661" width="0.5" height="15.0" fill="rgb(215,215,24)" rx="2" ry="2" />
<text  x="948.65" y="671.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="31.2" y="165" width="0.2" height="15.0" fill="rgb(244,19,37)" rx="2" ry="2" />
<text  x="34.23" y="175.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="960.3" y="213" width="0.2" height="15.0" fill="rgb(212,47,32)" rx="2" ry="2" />
<text  x="963.30" y="223.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (3 samples, 0.05%)</title><rect x="966.2" y="293" width="0.5" height="15.0" fill="rgb(246,110,13)" rx="2" ry="2" />
<text  x="969.15" y="303.5" ></text>
</g>
<g >
<title>dm_read_reg_func (2 samples, 0.03%)</title><rect x="966.3" y="245" width="0.4" height="15.0" fill="rgb(226,217,16)" rx="2" ry="2" />
<text  x="969.34" y="255.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.02%)</title><rect x="26.1" y="485" width="0.2" height="15.0" fill="rgb(212,110,38)" rx="2" ry="2" />
<text  x="29.11" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (98 samples, 1.52%)</title><rect x="680.6" y="629" width="18.0" height="15.0" fill="rgb(249,64,8)" rx="2" ry="2" />
<text  x="683.63" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (1 samples, 0.02%)</title><rect x="102.8" y="405" width="0.2" height="15.0" fill="rgb(209,141,8)" rx="2" ry="2" />
<text  x="105.80" y="415.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (1,496 samples, 23.20%)</title><rect x="104.4" y="661" width="273.9" height="15.0" fill="rgb(236,111,5)" rx="2" ry="2" />
<text  x="107.44" y="671.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="996.0" y="373" width="0.2" height="15.0" fill="rgb(221,153,3)" rx="2" ry="2" />
<text  x="998.99" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_idle_got_tick (1 samples, 0.02%)</title><rect x="1155.6" y="597" width="0.2" height="15.0" fill="rgb(238,51,35)" rx="2" ry="2" />
<text  x="1158.59" y="607.5" ></text>
</g>
<g >
<title>drm_sched_fence_release_scheduled (5 samples, 0.08%)</title><rect x="877.2" y="501" width="0.9" height="15.0" fill="rgb(238,12,20)" rx="2" ry="2" />
<text  x="880.20" y="511.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="967.8" y="517" width="0.2" height="15.0" fill="rgb(247,69,51)" rx="2" ry="2" />
<text  x="970.80" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.43%)</title><rect x="727.3" y="693" width="5.1" height="15.0" fill="rgb(233,113,16)" rx="2" ry="2" />
<text  x="730.30" y="703.5" ></text>
</g>
<g >
<title>exc_page_fault (2 samples, 0.03%)</title><rect x="95.1" y="517" width="0.4" height="15.0" fill="rgb(226,131,26)" rx="2" ry="2" />
<text  x="98.11" y="527.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="103.5" y="293" width="0.2" height="15.0" fill="rgb(250,29,20)" rx="2" ry="2" />
<text  x="106.53" y="303.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.02%)</title><rect x="720.7" y="677" width="0.2" height="15.0" fill="rgb(235,102,30)" rx="2" ry="2" />
<text  x="723.71" y="687.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1,494 samples, 23.17%)</title><rect x="104.4" y="533" width="273.5" height="15.0" fill="rgb(212,197,20)" rx="2" ry="2" />
<text  x="107.44" y="543.5" >rustposix::interface::pipe::Emulated..</text>
</g>
<g >
<title>NaClValidateCode (36 samples, 0.56%)</title><rect x="95.5" y="613" width="6.6" height="15.0" fill="rgb(251,127,42)" rx="2" ry="2" />
<text  x="98.48" y="623.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.02%)</title><rect x="1169.9" y="517" width="0.1" height="15.0" fill="rgb(245,33,11)" rx="2" ry="2" />
<text  x="1172.87" y="527.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (1 samples, 0.02%)</title><rect x="103.2" y="437" width="0.1" height="15.0" fill="rgb(244,207,24)" rx="2" ry="2" />
<text  x="106.16" y="447.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="924.8" y="565" width="0.2" height="15.0" fill="rgb(243,150,44)" rx="2" ry="2" />
<text  x="927.79" y="575.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (2 samples, 0.03%)</title><rect x="27.8" y="277" width="0.3" height="15.0" fill="rgb(248,229,46)" rx="2" ry="2" />
<text  x="30.75" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.02%)</title><rect x="26.1" y="581" width="0.2" height="15.0" fill="rgb(211,177,53)" rx="2" ry="2" />
<text  x="29.11" y="591.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="962.1" y="181" width="0.2" height="15.0" fill="rgb(243,63,52)" rx="2" ry="2" />
<text  x="965.13" y="191.5" ></text>
</g>
<g >
<title>rcu_segcblist_pend_cbs (1 samples, 0.02%)</title><rect x="989.4" y="437" width="0.2" height="15.0" fill="rgb(247,220,4)" rx="2" ry="2" />
<text  x="992.40" y="447.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="948.4" y="469" width="0.2" height="15.0" fill="rgb(205,165,5)" rx="2" ry="2" />
<text  x="951.40" y="479.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (2 samples, 0.03%)</title><rect x="31.0" y="213" width="0.4" height="15.0" fill="rgb(221,119,18)" rx="2" ry="2" />
<text  x="34.05" y="223.5" ></text>
</g>
<g >
<title>kthread (36 samples, 0.56%)</title><rect x="946.8" y="677" width="6.5" height="15.0" fill="rgb(252,121,12)" rx="2" ry="2" />
<text  x="949.75" y="687.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,379 samples, 21.39%)</title><rect x="390.9" y="645" width="252.4" height="15.0" fill="rgb(249,221,7)" rx="2" ry="2" />
<text  x="393.89" y="655.5" >NaClSysWrite</text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1189.6" y="533" width="0.2" height="15.0" fill="rgb(249,179,11)" rx="2" ry="2" />
<text  x="1192.63" y="543.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="966.2" y="213" width="0.1" height="15.0" fill="rgb(224,138,38)" rx="2" ry="2" />
<text  x="969.15" y="223.5" ></text>
</g>
<g >
<title>do_sys_poll (5 samples, 0.08%)</title><rect x="25.2" y="565" width="0.9" height="15.0" fill="rgb(218,1,5)" rx="2" ry="2" />
<text  x="28.19" y="575.5" ></text>
</g>
<g >
<title>wake_up_q (5 samples, 0.08%)</title><rect x="874.5" y="613" width="0.9" height="15.0" fill="rgb(242,61,2)" rx="2" ry="2" />
<text  x="877.45" y="623.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="996.0" y="405" width="0.2" height="15.0" fill="rgb(223,22,53)" rx="2" ry="2" />
<text  x="998.99" y="415.5" ></text>
</g>
<g >
<title>note_gp_changes (3 samples, 0.05%)</title><rect x="989.0" y="453" width="0.6" height="15.0" fill="rgb(240,104,15)" rx="2" ry="2" />
<text  x="992.03" y="463.5" ></text>
</g>
<g >
<title>sock_poll (2 samples, 0.03%)</title><rect x="925.3" y="613" width="0.4" height="15.0" fill="rgb(238,0,24)" rx="2" ry="2" />
<text  x="928.34" y="623.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (1 samples, 0.02%)</title><rect x="720.5" y="645" width="0.2" height="15.0" fill="rgb(235,103,4)" rx="2" ry="2" />
<text  x="723.53" y="655.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.02%)</title><rect x="985.7" y="485" width="0.2" height="15.0" fill="rgb(213,217,16)" rx="2" ry="2" />
<text  x="988.74" y="495.5" ></text>
</g>
<g >
<title>ttwu_do_activate (5 samples, 0.08%)</title><rect x="874.5" y="581" width="0.9" height="15.0" fill="rgb(230,100,51)" rx="2" ry="2" />
<text  x="877.45" y="591.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="962.1" y="213" width="0.2" height="15.0" fill="rgb(231,52,13)" rx="2" ry="2" />
<text  x="965.13" y="223.5" ></text>
</g>
<g >
<title>follow_page_pte (1 samples, 0.02%)</title><rect x="702.6" y="437" width="0.2" height="15.0" fill="rgb(254,41,46)" rx="2" ry="2" />
<text  x="705.59" y="447.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="732.1" y="453" width="0.1" height="15.0" fill="rgb(217,144,40)" rx="2" ry="2" />
<text  x="735.06" y="463.5" ></text>
</g>
<g >
<title>schedule (7 samples, 0.11%)</title><rect x="871.2" y="581" width="1.2" height="15.0" fill="rgb(245,138,42)" rx="2" ry="2" />
<text  x="874.16" y="591.5" ></text>
</g>
<g >
<title>generic_exec_single (64 samples, 0.99%)</title><rect x="13.3" y="437" width="11.7" height="15.0" fill="rgb(222,123,8)" rx="2" ry="2" />
<text  x="16.29" y="447.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="103.5" y="309" width="0.2" height="15.0" fill="rgb(212,147,27)" rx="2" ry="2" />
<text  x="106.53" y="319.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.16%)</title><rect x="597.5" y="501" width="1.9" height="15.0" fill="rgb(212,206,52)" rx="2" ry="2" />
<text  x="600.53" y="511.5" ></text>
</g>
<g >
<title>__pollwait (4 samples, 0.06%)</title><rect x="928.8" y="597" width="0.7" height="15.0" fill="rgb(227,31,19)" rx="2" ry="2" />
<text  x="931.81" y="607.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="934.1" y="485" width="0.4" height="15.0" fill="rgb(221,128,23)" rx="2" ry="2" />
<text  x="937.12" y="495.5" ></text>
</g>
<g >
<title>commit_planes_for_stream (5 samples, 0.08%)</title><rect x="949.1" y="549" width="0.9" height="15.0" fill="rgb(246,126,46)" rx="2" ry="2" />
<text  x="952.13" y="559.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="591.3" y="517" width="0.2" height="15.0" fill="rgb(235,150,26)" rx="2" ry="2" />
<text  x="594.31" y="527.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (1 samples, 0.02%)</title><rect x="952.4" y="485" width="0.2" height="15.0" fill="rgb(209,137,48)" rx="2" ry="2" />
<text  x="955.43" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (1 samples, 0.02%)</title><rect x="102.8" y="421" width="0.2" height="15.0" fill="rgb(209,103,28)" rx="2" ry="2" />
<text  x="105.80" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.02%)</title><rect x="1189.6" y="549" width="0.2" height="15.0" fill="rgb(232,12,52)" rx="2" ry="2" />
<text  x="1192.63" y="559.5" ></text>
</g>
<g >
<title>update_blocked_averages (12 samples, 0.19%)</title><rect x="993.6" y="469" width="2.2" height="15.0" fill="rgb(213,64,12)" rx="2" ry="2" />
<text  x="996.61" y="479.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (836 samples, 12.97%)</title><rect x="997.8" y="581" width="153.0" height="15.0" fill="rgb(247,113,36)" rx="2" ry="2" />
<text  x="1000.82" y="591.5" >mwait_idle_with_hin..</text>
</g>
<g >
<title>memdup_user (7 samples, 0.11%)</title><rect x="882.5" y="613" width="1.3" height="15.0" fill="rgb(243,174,25)" rx="2" ry="2" />
<text  x="885.51" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (2 samples, 0.03%)</title><rect x="574.5" y="469" width="0.3" height="15.0" fill="rgb(205,109,42)" rx="2" ry="2" />
<text  x="577.47" y="479.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="924.8" y="517" width="0.2" height="15.0" fill="rgb(231,228,3)" rx="2" ry="2" />
<text  x="927.79" y="527.5" ></text>
</g>
<g >
<title>update_curr (4 samples, 0.06%)</title><rect x="871.3" y="501" width="0.8" height="15.0" fill="rgb(247,160,51)" rx="2" ry="2" />
<text  x="874.34" y="511.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.02%)</title><rect x="103.9" y="37" width="0.2" height="15.0" fill="rgb(225,145,41)" rx="2" ry="2" />
<text  x="106.89" y="47.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.02%)</title><rect x="103.7" y="85" width="0.2" height="15.0" fill="rgb(225,76,30)" rx="2" ry="2" />
<text  x="106.71" y="95.5" ></text>
</g>
<g >
<title>enqueue_task (3 samples, 0.05%)</title><rect x="874.5" y="565" width="0.5" height="15.0" fill="rgb(238,188,6)" rx="2" ry="2" />
<text  x="877.45" y="575.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (2 samples, 0.03%)</title><rect x="966.3" y="229" width="0.4" height="15.0" fill="rgb(228,186,3)" rx="2" ry="2" />
<text  x="969.34" y="239.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="697.8" y="565" width="0.2" height="15.0" fill="rgb(250,54,36)" rx="2" ry="2" />
<text  x="700.83" y="575.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.02%)</title><rect x="697.1" y="549" width="0.2" height="15.0" fill="rgb(248,84,50)" rx="2" ry="2" />
<text  x="700.10" y="559.5" ></text>
</g>
<g >
<title>rcu_pending (1 samples, 0.02%)</title><rect x="982.4" y="405" width="0.2" height="15.0" fill="rgb(251,125,6)" rx="2" ry="2" />
<text  x="985.44" y="415.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="103.5" y="229" width="0.2" height="15.0" fill="rgb(223,143,31)" rx="2" ry="2" />
<text  x="106.53" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_futex (16 samples, 0.25%)</title><rect x="872.4" y="661" width="3.0" height="15.0" fill="rgb(232,65,27)" rx="2" ry="2" />
<text  x="875.44" y="671.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (2 samples, 0.03%)</title><rect x="45.3" y="613" width="0.4" height="15.0" fill="rgb(251,44,24)" rx="2" ry="2" />
<text  x="48.32" y="623.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="509.3" y="485" width="0.2" height="15.0" fill="rgb(207,153,49)" rx="2" ry="2" />
<text  x="512.31" y="495.5" ></text>
</g>
<g >
<title>__enqueue_rt_entity (1 samples, 0.02%)</title><rect x="878.5" y="389" width="0.2" height="15.0" fill="rgb(223,143,21)" rx="2" ry="2" />
<text  x="881.48" y="399.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1178.8" y="469" width="0.2" height="15.0" fill="rgb(225,21,29)" rx="2" ry="2" />
<text  x="1181.84" y="479.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="603.4" y="421" width="0.2" height="15.0" fill="rgb(219,38,49)" rx="2" ry="2" />
<text  x="606.39" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="377.9" y="485" width="0.2" height="15.0" fill="rgb(244,49,30)" rx="2" ry="2" />
<text  x="380.89" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="693.4" y="501" width="0.2" height="15.0" fill="rgb(249,160,20)" rx="2" ry="2" />
<text  x="696.44" y="511.5" ></text>
</g>
<g >
<title>poll_freewait (2 samples, 0.03%)</title><rect x="925.7" y="629" width="0.4" height="15.0" fill="rgb(220,118,19)" rx="2" ry="2" />
<text  x="928.70" y="639.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (34 samples, 0.53%)</title><rect x="603.6" y="549" width="6.2" height="15.0" fill="rgb(244,215,7)" rx="2" ry="2" />
<text  x="606.57" y="559.5" ></text>
</g>
<g >
<title>NaClMemoryProtection (1 samples, 0.02%)</title><rect x="103.0" y="565" width="0.2" height="15.0" fill="rgb(224,48,13)" rx="2" ry="2" />
<text  x="105.98" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="10.5" y="517" width="0.2" height="15.0" fill="rgb(234,42,4)" rx="2" ry="2" />
<text  x="13.55" y="527.5" ></text>
</g>
<g >
<title>core::cmp::min (4 samples, 0.06%)</title><rect x="488.3" y="517" width="0.7" height="15.0" fill="rgb(254,76,45)" rx="2" ry="2" />
<text  x="491.26" y="527.5" ></text>
</g>
<g >
<title>cpuidle_not_available (2 samples, 0.03%)</title><rect x="1164.9" y="629" width="0.4" height="15.0" fill="rgb(213,174,46)" rx="2" ry="2" />
<text  x="1167.92" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.0" y="693" width="0.2" height="15.0" fill="rgb(214,201,38)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>NaClGetDescMu (1 samples, 0.02%)</title><rect x="640.7" y="629" width="0.2" height="15.0" fill="rgb(226,106,15)" rx="2" ry="2" />
<text  x="643.72" y="639.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (4 samples, 0.06%)</title><rect x="93.8" y="661" width="0.8" height="15.0" fill="rgb(215,114,48)" rx="2" ry="2" />
<text  x="96.83" y="671.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,293 samples, 20.06%)</title><rect x="953.3" y="693" width="236.7" height="15.0" fill="rgb(248,152,53)" rx="2" ry="2" />
<text  x="956.34" y="703.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>sync_mm_rss (1 samples, 0.02%)</title><rect x="698.4" y="613" width="0.2" height="15.0" fill="rgb(251,146,42)" rx="2" ry="2" />
<text  x="701.38" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (45 samples, 0.70%)</title><rect x="469.2" y="533" width="8.3" height="15.0" fill="rgb(243,23,51)" rx="2" ry="2" />
<text  x="472.22" y="543.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (5 samples, 0.08%)</title><rect x="694.7" y="549" width="0.9" height="15.0" fill="rgb(230,97,32)" rx="2" ry="2" />
<text  x="697.72" y="559.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.02%)</title><rect x="732.2" y="581" width="0.2" height="15.0" fill="rgb(231,94,39)" rx="2" ry="2" />
<text  x="735.24" y="591.5" ></text>
</g>
<g >
<title>process_one_work (27 samples, 0.42%)</title><rect x="947.9" y="645" width="4.9" height="15.0" fill="rgb(227,181,44)" rx="2" ry="2" />
<text  x="950.85" y="655.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="570.6" y="421" width="2.2" height="15.0" fill="rgb(230,31,42)" rx="2" ry="2" />
<text  x="573.62" y="431.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.02%)</title><rect x="1169.9" y="533" width="0.1" height="15.0" fill="rgb(230,220,34)" rx="2" ry="2" />
<text  x="1172.87" y="543.5" ></text>
</g>
<g >
<title>event_function_call (66 samples, 1.02%)</title><rect x="12.9" y="469" width="12.1" height="15.0" fill="rgb(212,95,14)" rx="2" ry="2" />
<text  x="15.93" y="479.5" ></text>
</g>
<g >
<title>__xa_set_mark (1 samples, 0.02%)</title><rect x="30.3" y="245" width="0.2" height="15.0" fill="rgb(219,86,9)" rx="2" ry="2" />
<text  x="33.32" y="255.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="31.4" y="197" width="0.2" height="15.0" fill="rgb(235,188,42)" rx="2" ry="2" />
<text  x="34.41" y="207.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (3 samples, 0.05%)</title><rect x="987.6" y="533" width="0.5" height="15.0" fill="rgb(229,143,17)" rx="2" ry="2" />
<text  x="990.57" y="543.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="947.9" y="485" width="0.1" height="15.0" fill="rgb(247,5,26)" rx="2" ry="2" />
<text  x="950.85" y="495.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1175.9" y="613" width="0.2" height="15.0" fill="rgb(234,64,24)" rx="2" ry="2" />
<text  x="1178.91" y="623.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.02%)</title><rect x="873.7" y="549" width="0.2" height="15.0" fill="rgb(222,85,35)" rx="2" ry="2" />
<text  x="876.72" y="559.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="30.7" y="261" width="0.2" height="15.0" fill="rgb(234,151,48)" rx="2" ry="2" />
<text  x="33.68" y="271.5" ></text>
</g>
<g >
<title>dm_read_reg_func (7 samples, 0.11%)</title><rect x="963.2" y="261" width="1.3" height="15.0" fill="rgb(230,158,42)" rx="2" ry="2" />
<text  x="966.22" y="271.5" ></text>
</g>
<g >
<title>perf_ioctl (78 samples, 1.21%)</title><rect x="10.7" y="533" width="14.3" height="15.0" fill="rgb(216,59,19)" rx="2" ry="2" />
<text  x="13.73" y="543.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="876.5" y="565" width="0.2" height="15.0" fill="rgb(223,105,54)" rx="2" ry="2" />
<text  x="879.47" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.02%)</title><rect x="103.2" y="453" width="0.1" height="15.0" fill="rgb(230,217,46)" rx="2" ry="2" />
<text  x="106.16" y="463.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="103.2" y="517" width="0.1" height="15.0" fill="rgb(205,76,15)" rx="2" ry="2" />
<text  x="106.16" y="527.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (35 samples, 0.54%)</title><rect x="381.9" y="629" width="6.4" height="15.0" fill="rgb(253,176,1)" rx="2" ry="2" />
<text  x="384.92" y="639.5" ></text>
</g>
<g >
<title>menu_select (3 samples, 0.05%)</title><rect x="1163.5" y="613" width="0.5" height="15.0" fill="rgb(223,84,33)" rx="2" ry="2" />
<text  x="1166.46" y="623.5" ></text>
</g>
<g >
<title>ovl_real_fdget (1 samples, 0.02%)</title><rect x="26.7" y="421" width="0.1" height="15.0" fill="rgb(254,166,53)" rx="2" ry="2" />
<text  x="29.66" y="431.5" ></text>
</g>
<g >
<title>drm_crtc_vblank_helper_get_vblank_timestamp_internal (3 samples, 0.05%)</title><rect x="966.2" y="341" width="0.5" height="15.0" fill="rgb(243,114,40)" rx="2" ry="2" />
<text  x="969.15" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.02%)</title><rect x="702.6" y="597" width="0.2" height="15.0" fill="rgb(241,140,16)" rx="2" ry="2" />
<text  x="705.59" y="607.5" ></text>
</g>
<g >
<title>rb_next (2 samples, 0.03%)</title><rect x="979.9" y="469" width="0.3" height="15.0" fill="rgb(242,65,23)" rx="2" ry="2" />
<text  x="982.88" y="479.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="936.1" y="517" width="0.2" height="15.0" fill="rgb(247,3,36)" rx="2" ry="2" />
<text  x="939.14" y="527.5" ></text>
</g>
<g >
<title>lind_read (1,495 samples, 23.19%)</title><rect x="104.4" y="597" width="273.7" height="15.0" fill="rgb(206,185,20)" rx="2" ry="2" />
<text  x="107.44" y="607.5" >lind_read</text>
</g>
<g >
<title>__x64_sys_poll (5 samples, 0.08%)</title><rect x="25.2" y="581" width="0.9" height="15.0" fill="rgb(213,201,2)" rx="2" ry="2" />
<text  x="28.19" y="591.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="390.7" y="645" width="0.2" height="15.0" fill="rgb(206,114,18)" rx="2" ry="2" />
<text  x="393.70" y="655.5" ></text>
</g>
<g >
<title>poll_freewait (1 samples, 0.02%)</title><rect x="937.6" y="629" width="0.2" height="15.0" fill="rgb(208,77,26)" rx="2" ry="2" />
<text  x="940.60" y="639.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="1177.9" y="549" width="0.2" height="15.0" fill="rgb(242,227,14)" rx="2" ry="2" />
<text  x="1180.92" y="559.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="947.9" y="437" width="0.1" height="15.0" fill="rgb(209,142,6)" rx="2" ry="2" />
<text  x="950.85" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (110 samples, 1.71%)</title><rect x="489.0" y="517" width="20.1" height="15.0" fill="rgb(240,184,43)" rx="2" ry="2" />
<text  x="491.99" y="527.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="985.6" y="405" width="0.1" height="15.0" fill="rgb(212,70,0)" rx="2" ry="2" />
<text  x="988.55" y="415.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="696.9" y="549" width="0.2" height="15.0" fill="rgb(246,48,4)" rx="2" ry="2" />
<text  x="699.91" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.14%)</title><rect x="601.9" y="517" width="1.7" height="15.0" fill="rgb(229,46,8)" rx="2" ry="2" />
<text  x="604.92" y="527.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (7 samples, 0.11%)</title><rect x="963.2" y="245" width="1.3" height="15.0" fill="rgb(228,117,54)" rx="2" ry="2" />
<text  x="966.22" y="255.5" ></text>
</g>
<g >
<title>ww_mutex_lock_interruptible (1 samples, 0.02%)</title><rect x="876.3" y="549" width="0.2" height="15.0" fill="rgb(250,133,36)" rx="2" ry="2" />
<text  x="879.29" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (11 samples, 0.17%)</title><rect x="1176.1" y="629" width="2.0" height="15.0" fill="rgb(211,38,34)" rx="2" ry="2" />
<text  x="1179.09" y="639.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.02%)</title><rect x="732.2" y="565" width="0.2" height="15.0" fill="rgb(214,4,0)" rx="2" ry="2" />
<text  x="735.24" y="575.5" ></text>
</g>
<g >
<title>__get_free_pages (1 samples, 0.02%)</title><rect x="925.5" y="565" width="0.2" height="15.0" fill="rgb(227,132,24)" rx="2" ry="2" />
<text  x="928.52" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (7 samples, 0.11%)</title><rect x="58.7" y="677" width="1.3" height="15.0" fill="rgb(229,126,44)" rx="2" ry="2" />
<text  x="61.69" y="687.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.26%)</title><rect x="461.9" y="469" width="3.1" height="15.0" fill="rgb(241,219,18)" rx="2" ry="2" />
<text  x="464.90" y="479.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="930.8" y="549" width="0.2" height="15.0" fill="rgb(242,82,42)" rx="2" ry="2" />
<text  x="933.83" y="559.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="103.9" y="181" width="0.2" height="15.0" fill="rgb(235,126,52)" rx="2" ry="2" />
<text  x="106.89" y="191.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.17%)</title><rect x="418.2" y="549" width="2.0" height="15.0" fill="rgb(222,164,31)" rx="2" ry="2" />
<text  x="421.16" y="559.5" ></text>
</g>
<g >
<title>rcu_qs (1 samples, 0.02%)</title><rect x="1174.3" y="597" width="0.1" height="15.0" fill="rgb(237,160,24)" rx="2" ry="2" />
<text  x="1177.26" y="607.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="985.6" y="357" width="0.1" height="15.0" fill="rgb(233,201,50)" rx="2" ry="2" />
<text  x="988.55" y="367.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (3 samples, 0.05%)</title><rect x="94.6" y="613" width="0.5" height="15.0" fill="rgb(217,195,13)" rx="2" ry="2" />
<text  x="97.56" y="623.5" ></text>
</g>
<g >
<title>do_iter_write (35 samples, 0.54%)</title><rect x="26.8" y="405" width="6.4" height="15.0" fill="rgb(226,81,47)" rx="2" ry="2" />
<text  x="29.84" y="415.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.03%)</title><rect x="25.4" y="453" width="0.3" height="15.0" fill="rgb(205,56,16)" rx="2" ry="2" />
<text  x="28.37" y="463.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.02%)</title><rect x="1185.1" y="501" width="0.1" height="15.0" fill="rgb(213,38,45)" rx="2" ry="2" />
<text  x="1188.06" y="511.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (1 samples, 0.02%)</title><rect x="35.3" y="677" width="0.1" height="15.0" fill="rgb(252,93,3)" rx="2" ry="2" />
<text  x="38.26" y="687.5" ></text>
</g>
<g >
<title>balance_rt (2 samples, 0.03%)</title><rect x="932.8" y="549" width="0.4" height="15.0" fill="rgb(241,103,24)" rx="2" ry="2" />
<text  x="935.84" y="559.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (18 samples, 0.28%)</title><rect x="728.4" y="469" width="3.3" height="15.0" fill="rgb(228,19,29)" rx="2" ry="2" />
<text  x="731.40" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (40 samples, 0.62%)</title><rect x="461.9" y="485" width="7.3" height="15.0" fill="rgb(235,61,53)" rx="2" ry="2" />
<text  x="464.90" y="495.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1185.2" y="517" width="0.2" height="15.0" fill="rgb(218,20,4)" rx="2" ry="2" />
<text  x="1188.24" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (97 samples, 1.50%)</title><rect x="444.1" y="485" width="17.8" height="15.0" fill="rgb(215,73,46)" rx="2" ry="2" />
<text  x="447.15" y="495.5" ></text>
</g>
<g >
<title>newidle_balance (5 samples, 0.08%)</title><rect x="931.9" y="533" width="0.9" height="15.0" fill="rgb(243,0,7)" rx="2" ry="2" />
<text  x="934.93" y="543.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.02%)</title><rect x="702.6" y="581" width="0.2" height="15.0" fill="rgb(247,91,54)" rx="2" ry="2" />
<text  x="705.59" y="591.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="527.4" y="485" width="0.2" height="15.0" fill="rgb(210,188,52)" rx="2" ry="2" />
<text  x="530.43" y="495.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="968.3" y="245" width="0.2" height="15.0" fill="rgb(241,34,37)" rx="2" ry="2" />
<text  x="971.35" y="255.5" ></text>
</g>
<g >
<title>load_balance (10 samples, 0.16%)</title><rect x="991.8" y="453" width="1.8" height="15.0" fill="rgb(205,113,22)" rx="2" ry="2" />
<text  x="994.78" y="463.5" ></text>
</g>
<g >
<title>pm_qos_read_value (1 samples, 0.02%)</title><rect x="1160.5" y="581" width="0.2" height="15.0" fill="rgb(242,196,25)" rx="2" ry="2" />
<text  x="1163.53" y="591.5" ></text>
</g>
<g >
<title>ext4_end_bio (1 samples, 0.02%)</title><rect x="968.3" y="373" width="0.2" height="15.0" fill="rgb(236,227,12)" rx="2" ry="2" />
<text  x="971.35" y="383.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (17 samples, 0.26%)</title><rect x="693.8" y="565" width="3.1" height="15.0" fill="rgb(242,14,12)" rx="2" ry="2" />
<text  x="696.80" y="575.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (2 samples, 0.03%)</title><rect x="969.4" y="357" width="0.4" height="15.0" fill="rgb(236,0,37)" rx="2" ry="2" />
<text  x="972.45" y="367.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (20 samples, 0.31%)</title><rect x="371.3" y="469" width="3.7" height="15.0" fill="rgb(224,30,14)" rx="2" ry="2" />
<text  x="374.30" y="479.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="947.3" y="517" width="0.2" height="15.0" fill="rgb(227,191,44)" rx="2" ry="2" />
<text  x="950.30" y="527.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="103.7" y="117" width="0.2" height="15.0" fill="rgb(253,31,47)" rx="2" ry="2" />
<text  x="106.71" y="127.5" ></text>
</g>
<g >
<title>azx_pcm_pointer (65 samples, 1.01%)</title><rect x="911.6" y="549" width="11.9" height="15.0" fill="rgb(239,140,14)" rx="2" ry="2" />
<text  x="914.61" y="559.5" ></text>
</g>
<g >
<title>perf (126 samples, 1.95%)</title><rect x="10.7" y="709" width="23.1" height="15.0" fill="rgb(217,194,45)" rx="2" ry="2" />
<text  x="13.73" y="719.5" >p..</text>
</g>
<g >
<title>schedule (3 samples, 0.05%)</title><rect x="25.2" y="501" width="0.5" height="15.0" fill="rgb(221,138,11)" rx="2" ry="2" />
<text  x="28.19" y="511.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (4 samples, 0.06%)</title><rect x="1186.7" y="565" width="0.7" height="15.0" fill="rgb(254,181,22)" rx="2" ry="2" />
<text  x="1189.71" y="575.5" ></text>
</g>
<g >
<title>rcu_gp_fqs_loop (4 samples, 0.06%)</title><rect x="946.9" y="645" width="0.8" height="15.0" fill="rgb(252,81,12)" rx="2" ry="2" />
<text  x="949.94" y="655.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (6 samples, 0.09%)</title><rect x="961.2" y="293" width="1.1" height="15.0" fill="rgb(241,176,7)" rx="2" ry="2" />
<text  x="964.21" y="303.5" ></text>
</g>
<g >
<title>__GI___mprotect (1 samples, 0.02%)</title><rect x="103.0" y="533" width="0.2" height="15.0" fill="rgb(220,7,39)" rx="2" ry="2" />
<text  x="105.98" y="543.5" ></text>
</g>
<g >
<title>__pollwait (2 samples, 0.03%)</title><rect x="937.1" y="597" width="0.3" height="15.0" fill="rgb(228,151,42)" rx="2" ry="2" />
<text  x="940.05" y="607.5" ></text>
</g>
<g >
<title>dispatcher (2 samples, 0.03%)</title><rect x="706.6" y="677" width="0.4" height="15.0" fill="rgb(208,143,22)" rx="2" ry="2" />
<text  x="709.62" y="687.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (2 samples, 0.03%)</title><rect x="1174.4" y="597" width="0.4" height="15.0" fill="rgb(209,98,41)" rx="2" ry="2" />
<text  x="1177.44" y="607.5" ></text>
</g>
<g >
<title>get_l4proto (1 samples, 0.02%)</title><rect x="969.6" y="277" width="0.2" height="15.0" fill="rgb(254,191,7)" rx="2" ry="2" />
<text  x="972.63" y="287.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2 samples, 0.03%)</title><rect x="878.5" y="437" width="0.3" height="15.0" fill="rgb(214,9,17)" rx="2" ry="2" />
<text  x="881.48" y="447.5" ></text>
</g>
<g >
<title>amdgpu_sync_fence (1 samples, 0.02%)</title><rect x="879.6" y="549" width="0.2" height="15.0" fill="rgb(220,150,39)" rx="2" ry="2" />
<text  x="882.58" y="559.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (5 samples, 0.08%)</title><rect x="75.0" y="645" width="0.9" height="15.0" fill="rgb(234,184,12)" rx="2" ry="2" />
<text  x="77.98" y="655.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="103.9" y="117" width="0.2" height="15.0" fill="rgb(250,150,22)" rx="2" ry="2" />
<text  x="106.89" y="127.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (48 samples, 0.74%)</title><rect x="477.8" y="485" width="8.8" height="15.0" fill="rgb(253,23,22)" rx="2" ry="2" />
<text  x="480.83" y="495.5" ></text>
</g>
<g >
<title>__secure_computing (1 samples, 0.02%)</title><rect x="944.4" y="645" width="0.2" height="15.0" fill="rgb(239,9,48)" rx="2" ry="2" />
<text  x="947.37" y="655.5" ></text>
</g>
<g >
<title>azx_get_position (120 samples, 1.86%)</title><rect x="888.9" y="533" width="22.0" height="15.0" fill="rgb(243,163,8)" rx="2" ry="2" />
<text  x="891.91" y="543.5" >a..</text>
</g>
<g >
<title>NaClSysExitDecoder (3 samples, 0.05%)</title><rect x="103.5" y="661" width="0.6" height="15.0" fill="rgb(241,207,11)" rx="2" ry="2" />
<text  x="106.53" y="671.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (11 samples, 0.17%)</title><rect x="963.2" y="341" width="2.0" height="15.0" fill="rgb(209,130,50)" rx="2" ry="2" />
<text  x="966.22" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (417 samples, 6.47%)</title><rect x="870.2" y="693" width="76.4" height="15.0" fill="rgb(238,100,2)" rx="2" ry="2" />
<text  x="873.25" y="703.5" >entry_SY..</text>
</g>
<g >
<title>amdgpu_device_rreg (2 samples, 0.03%)</title><rect x="966.3" y="213" width="0.4" height="15.0" fill="rgb(245,217,42)" rx="2" ry="2" />
<text  x="969.34" y="223.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (2 samples, 0.03%)</title><rect x="103.7" y="501" width="0.4" height="15.0" fill="rgb(212,167,22)" rx="2" ry="2" />
<text  x="106.71" y="511.5" ></text>
</g>
<g >
<title>copy_fpregs_to_fpstate (1 samples, 0.02%)</title><rect x="869.3" y="693" width="0.2" height="15.0" fill="rgb(254,113,25)" rx="2" ry="2" />
<text  x="872.33" y="703.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="27.2" y="213" width="0.4" height="15.0" fill="rgb(233,152,3)" rx="2" ry="2" />
<text  x="30.20" y="223.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (3 samples, 0.05%)</title><rect x="995.8" y="469" width="0.6" height="15.0" fill="rgb(237,52,14)" rx="2" ry="2" />
<text  x="998.80" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (4 samples, 0.06%)</title><rect x="37.1" y="677" width="0.7" height="15.0" fill="rgb(208,33,25)" rx="2" ry="2" />
<text  x="40.09" y="687.5" ></text>
</g>
<g >
<title>NaClRefCountRef (1 samples, 0.02%)</title><rect x="640.5" y="597" width="0.2" height="15.0" fill="rgb(223,10,6)" rx="2" ry="2" />
<text  x="643.54" y="607.5" ></text>
</g>
<g >
<title>napi_complete_done (2 samples, 0.03%)</title><rect x="969.4" y="437" width="0.4" height="15.0" fill="rgb(254,109,21)" rx="2" ry="2" />
<text  x="972.45" y="447.5" ></text>
</g>
<g >
<title>mmput (26 samples, 0.40%)</title><rect x="727.3" y="597" width="4.8" height="15.0" fill="rgb(231,151,54)" rx="2" ry="2" />
<text  x="730.30" y="607.5" ></text>
</g>
<g >
<title>perf_swevent_stop (1 samples, 0.02%)</title><rect x="984.6" y="389" width="0.2" height="15.0" fill="rgb(233,159,50)" rx="2" ry="2" />
<text  x="987.64" y="399.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.02%)</title><rect x="702.4" y="533" width="0.2" height="15.0" fill="rgb(218,49,7)" rx="2" ry="2" />
<text  x="705.41" y="543.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (2 samples, 0.03%)</title><rect x="1170.4" y="581" width="0.4" height="15.0" fill="rgb(220,40,35)" rx="2" ry="2" />
<text  x="1173.42" y="591.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1178.8" y="437" width="0.2" height="15.0" fill="rgb(211,108,12)" rx="2" ry="2" />
<text  x="1181.84" y="447.5" ></text>
</g>
<g >
<title>amdgpu_drm_ioctl (33 samples, 0.51%)</title><rect x="875.6" y="645" width="6.0" height="15.0" fill="rgb(214,2,44)" rx="2" ry="2" />
<text  x="878.55" y="655.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="270.8" y="421" width="0.2" height="15.0" fill="rgb(224,153,25)" rx="2" ry="2" />
<text  x="273.82" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (79 samples, 1.23%)</title><rect x="10.7" y="565" width="14.5" height="15.0" fill="rgb(228,110,11)" rx="2" ry="2" />
<text  x="13.73" y="575.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="927.2" y="629" width="0.2" height="15.0" fill="rgb(254,4,21)" rx="2" ry="2" />
<text  x="930.17" y="639.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="887.3" y="613" width="0.1" height="15.0" fill="rgb(253,47,35)" rx="2" ry="2" />
<text  x="890.27" y="623.5" ></text>
</g>
<g >
<title>__writeback_single_inode (2 samples, 0.03%)</title><rect x="952.4" y="549" width="0.4" height="15.0" fill="rgb(229,70,13)" rx="2" ry="2" />
<text  x="955.43" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (43 samples, 0.67%)</title><rect x="420.2" y="565" width="7.8" height="15.0" fill="rgb(214,42,40)" rx="2" ry="2" />
<text  x="423.17" y="575.5" ></text>
</g>
<g >
<title>update_io_ticks (1 samples, 0.02%)</title><rect x="968.2" y="373" width="0.1" height="15.0" fill="rgb(247,84,34)" rx="2" ry="2" />
<text  x="971.17" y="383.5" ></text>
</g>
<g >
<title>ip_list_rcv_finish.constprop.0 (1 samples, 0.02%)</title><rect x="969.4" y="341" width="0.2" height="15.0" fill="rgb(253,34,40)" rx="2" ry="2" />
<text  x="972.45" y="351.5" ></text>
</g>
<g >
<title>perf_mmap__push (37 samples, 0.57%)</title><rect x="26.5" y="613" width="6.7" height="15.0" fill="rgb(228,86,23)" rx="2" ry="2" />
<text  x="29.47" y="623.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.02%)</title><rect x="95.3" y="325" width="0.2" height="15.0" fill="rgb(225,75,14)" rx="2" ry="2" />
<text  x="98.29" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (1 samples, 0.02%)</title><rect x="103.9" y="229" width="0.2" height="15.0" fill="rgb(216,191,3)" rx="2" ry="2" />
<text  x="106.89" y="239.5" ></text>
</g>
<g >
<title>amdgpu_irq_handler (45 samples, 0.70%)</title><rect x="959.6" y="485" width="8.2" height="15.0" fill="rgb(205,123,18)" rx="2" ry="2" />
<text  x="962.56" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="937.1" y="565" width="0.3" height="15.0" fill="rgb(248,120,21)" rx="2" ry="2" />
<text  x="940.05" y="575.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (3,174 samples, 49.23%)</title><rect x="62.3" y="677" width="581.0" height="15.0" fill="rgb(224,96,54)" rx="2" ry="2" />
<text  x="65.35" y="687.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (2 samples, 0.03%)</title><rect x="574.8" y="517" width="0.4" height="15.0" fill="rgb(216,97,34)" rx="2" ry="2" />
<text  x="577.83" y="527.5" ></text>
</g>
<g >
<title>dequeue_entity (4 samples, 0.06%)</title><rect x="871.3" y="517" width="0.8" height="15.0" fill="rgb(233,30,5)" rx="2" ry="2" />
<text  x="874.34" y="527.5" ></text>
</g>
<g >
<title>switch_fpu_return (1 samples, 0.02%)</title><rect x="946.0" y="645" width="0.2" height="15.0" fill="rgb(252,168,1)" rx="2" ry="2" />
<text  x="949.02" y="655.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="973.1" y="453" width="0.2" height="15.0" fill="rgb(243,156,45)" rx="2" ry="2" />
<text  x="976.11" y="463.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="968.3" y="261" width="0.2" height="15.0" fill="rgb(237,44,1)" rx="2" ry="2" />
<text  x="971.35" y="271.5" ></text>
</g>
<g >
<title>CopyBundleTails (3 samples, 0.05%)</title><rect x="94.6" y="597" width="0.5" height="15.0" fill="rgb(221,46,2)" rx="2" ry="2" />
<text  x="97.56" y="607.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="732.1" y="501" width="0.1" height="15.0" fill="rgb(218,147,31)" rx="2" ry="2" />
<text  x="735.06" y="511.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (2 samples, 0.03%)</title><rect x="1169.1" y="549" width="0.4" height="15.0" fill="rgb(225,159,3)" rx="2" ry="2" />
<text  x="1172.13" y="559.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="925.9" y="597" width="0.2" height="15.0" fill="rgb(216,48,0)" rx="2" ry="2" />
<text  x="928.89" y="607.5" ></text>
</g>
<g >
<title>unix_poll (1 samples, 0.02%)</title><rect x="925.5" y="597" width="0.2" height="15.0" fill="rgb(221,113,53)" rx="2" ry="2" />
<text  x="928.52" y="607.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (1 samples, 0.02%)</title><rect x="27.8" y="261" width="0.1" height="15.0" fill="rgb(218,20,30)" rx="2" ry="2" />
<text  x="30.75" y="271.5" ></text>
</g>
<g >
<title>rcu_accelerate_cbs_unlocked (2 samples, 0.03%)</title><rect x="989.6" y="453" width="0.3" height="15.0" fill="rgb(215,11,42)" rx="2" ry="2" />
<text  x="992.58" y="463.5" ></text>
</g>
<g >
<title>drm_ioctl (31 samples, 0.48%)</title><rect x="875.9" y="629" width="5.7" height="15.0" fill="rgb(250,15,44)" rx="2" ry="2" />
<text  x="878.92" y="639.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_vblank_counter (3 samples, 0.05%)</title><rect x="948.6" y="517" width="0.5" height="15.0" fill="rgb(248,109,24)" rx="2" ry="2" />
<text  x="951.58" y="527.5" ></text>
</g>
<g >
<title>schedule (32 samples, 0.50%)</title><rect x="931.0" y="581" width="5.9" height="15.0" fill="rgb(210,95,3)" rx="2" ry="2" />
<text  x="934.01" y="591.5" ></text>
</g>
<g >
<title>dc_create_state (2 samples, 0.03%)</title><rect x="951.0" y="581" width="0.3" height="15.0" fill="rgb(236,225,43)" rx="2" ry="2" />
<text  x="953.96" y="591.5" ></text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.02%)</title><rect x="929.5" y="597" width="0.2" height="15.0" fill="rgb(243,23,34)" rx="2" ry="2" />
<text  x="932.55" y="607.5" ></text>
</g>
<g >
<title>dc_stream_get_vblank_counter (5 samples, 0.08%)</title><rect x="965.2" y="325" width="1.0" height="15.0" fill="rgb(219,178,36)" rx="2" ry="2" />
<text  x="968.24" y="335.5" ></text>
</g>
<g >
<title>watchdog_timer_fn (1 samples, 0.02%)</title><rect x="985.6" y="469" width="0.1" height="15.0" fill="rgb(248,197,16)" rx="2" ry="2" />
<text  x="988.55" y="479.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1 samples, 0.02%)</title><rect x="62.2" y="677" width="0.1" height="15.0" fill="rgb(249,198,35)" rx="2" ry="2" />
<text  x="65.16" y="687.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (2 samples, 0.03%)</title><rect x="947.1" y="533" width="0.4" height="15.0" fill="rgb(225,56,54)" rx="2" ry="2" />
<text  x="950.12" y="543.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="947.5" y="581" width="0.2" height="15.0" fill="rgb(226,187,45)" rx="2" ry="2" />
<text  x="950.48" y="591.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.03%)</title><rect x="103.7" y="277" width="0.4" height="15.0" fill="rgb(244,147,18)" rx="2" ry="2" />
<text  x="106.71" y="287.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.02%)</title><rect x="720.7" y="645" width="0.2" height="15.0" fill="rgb(212,108,8)" rx="2" ry="2" />
<text  x="723.71" y="655.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (5 samples, 0.08%)</title><rect x="939.2" y="565" width="1.0" height="15.0" fill="rgb(251,101,15)" rx="2" ry="2" />
<text  x="942.25" y="575.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (1,139 samples, 17.67%)</title><rect x="401.7" y="613" width="208.5" height="15.0" fill="rgb(234,98,36)" rx="2" ry="2" />
<text  x="404.69" y="623.5" >NaClHostDescWrite</text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="948.4" y="421" width="0.2" height="15.0" fill="rgb(223,87,53)" rx="2" ry="2" />
<text  x="951.40" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (2 samples, 0.03%)</title><rect x="1163.1" y="597" width="0.4" height="15.0" fill="rgb(214,216,8)" rx="2" ry="2" />
<text  x="1166.09" y="607.5" ></text>
</g>
<g >
<title>security_file_ioctl (1 samples, 0.02%)</title><rect x="881.8" y="645" width="0.2" height="15.0" fill="rgb(244,193,19)" rx="2" ry="2" />
<text  x="884.78" y="655.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="527.4" y="357" width="0.2" height="15.0" fill="rgb(237,84,24)" rx="2" ry="2" />
<text  x="530.43" y="367.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="947.7" y="597" width="0.2" height="15.0" fill="rgb(252,168,5)" rx="2" ry="2" />
<text  x="950.67" y="607.5" ></text>
</g>
<g >
<title>worker_thread (30 samples, 0.47%)</title><rect x="947.9" y="661" width="5.4" height="15.0" fill="rgb(223,194,24)" rx="2" ry="2" />
<text  x="950.85" y="671.5" ></text>
</g>
<g >
<title>dequeue_task_rt (2 samples, 0.03%)</title><rect x="933.2" y="533" width="0.4" height="15.0" fill="rgb(222,52,17)" rx="2" ry="2" />
<text  x="936.21" y="543.5" ></text>
</g>
<g >
<title>irq_exit_rcu (44 samples, 0.68%)</title><rect x="988.3" y="549" width="8.1" height="15.0" fill="rgb(231,162,15)" rx="2" ry="2" />
<text  x="991.30" y="559.5" ></text>
</g>
<g >
<title>dequeue_task_fair (5 samples, 0.08%)</title><rect x="871.3" y="533" width="1.0" height="15.0" fill="rgb(232,201,8)" rx="2" ry="2" />
<text  x="874.34" y="543.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="720.5" y="421" width="0.2" height="15.0" fill="rgb(253,214,28)" rx="2" ry="2" />
<text  x="723.53" y="431.5" ></text>
</g>
<g >
<title>record__write (2 samples, 0.03%)</title><rect x="33.2" y="613" width="0.4" height="15.0" fill="rgb(246,147,8)" rx="2" ry="2" />
<text  x="36.24" y="623.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.02%)</title><rect x="95.1" y="325" width="0.2" height="15.0" fill="rgb(218,104,21)" rx="2" ry="2" />
<text  x="98.11" y="335.5" ></text>
</g>
<g >
<title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="678.6" y="677" width="0.2" height="15.0" fill="rgb(222,61,33)" rx="2" ry="2" />
<text  x="681.61" y="687.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (3 samples, 0.05%)</title><rect x="959.9" y="293" width="0.6" height="15.0" fill="rgb(244,60,7)" rx="2" ry="2" />
<text  x="962.93" y="303.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.02%)</title><rect x="938.7" y="645" width="0.2" height="15.0" fill="rgb(225,202,43)" rx="2" ry="2" />
<text  x="941.70" y="655.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.08%)</title><rect x="600.6" y="421" width="1.0" height="15.0" fill="rgb(206,3,0)" rx="2" ry="2" />
<text  x="603.64" y="431.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (54 samples, 0.84%)</title><rect x="380.5" y="645" width="9.8" height="15.0" fill="rgb(207,140,16)" rx="2" ry="2" />
<text  x="383.45" y="655.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (1 samples, 0.02%)</title><rect x="61.8" y="677" width="0.2" height="15.0" fill="rgb(216,195,7)" rx="2" ry="2" />
<text  x="64.80" y="687.5" ></text>
</g>
<g >
<title>__switch_to_xtra (1 samples, 0.02%)</title><rect x="931.6" y="533" width="0.1" height="15.0" fill="rgb(210,225,21)" rx="2" ry="2" />
<text  x="934.56" y="543.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (2 samples, 0.03%)</title><rect x="969.4" y="421" width="0.4" height="15.0" fill="rgb(224,23,45)" rx="2" ry="2" />
<text  x="972.45" y="431.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.54%)</title><rect x="702.4" y="693" width="18.1" height="15.0" fill="rgb(207,156,17)" rx="2" ry="2" />
<text  x="705.41" y="703.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="527.4" y="325" width="0.2" height="15.0" fill="rgb(213,150,25)" rx="2" ry="2" />
<text  x="530.43" y="335.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.02%)</title><rect x="10.4" y="517" width="0.1" height="15.0" fill="rgb(252,27,29)" rx="2" ry="2" />
<text  x="13.37" y="527.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2 samples, 0.03%)</title><rect x="942.7" y="389" width="0.4" height="15.0" fill="rgb(246,149,13)" rx="2" ry="2" />
<text  x="945.73" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.05%)</title><rect x="29.0" y="261" width="0.6" height="15.0" fill="rgb(249,77,47)" rx="2" ry="2" />
<text  x="32.04" y="271.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="947.9" y="469" width="0.1" height="15.0" fill="rgb(238,163,50)" rx="2" ry="2" />
<text  x="950.85" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (32 samples, 0.50%)</title><rect x="591.5" y="485" width="5.8" height="15.0" fill="rgb(233,64,29)" rx="2" ry="2" />
<text  x="594.49" y="495.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (2 samples, 0.03%)</title><rect x="1175.2" y="613" width="0.3" height="15.0" fill="rgb(205,151,27)" rx="2" ry="2" />
<text  x="1178.17" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_poll (13 samples, 0.20%)</title><rect x="923.7" y="661" width="2.4" height="15.0" fill="rgb(253,104,44)" rx="2" ry="2" />
<text  x="926.69" y="671.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (70 samples, 1.09%)</title><rect x="611.1" y="613" width="12.8" height="15.0" fill="rgb(234,191,46)" rx="2" ry="2" />
<text  x="614.07" y="623.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="103.9" y="133" width="0.2" height="15.0" fill="rgb(208,199,21)" rx="2" ry="2" />
<text  x="106.89" y="143.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="10.5" y="661" width="0.2" height="15.0" fill="rgb(248,84,36)" rx="2" ry="2" />
<text  x="13.55" y="671.5" ></text>
</g>
<g >
<title>drm_atomic_helper_page_flip (9 samples, 0.14%)</title><rect x="879.8" y="581" width="1.6" height="15.0" fill="rgb(211,176,23)" rx="2" ry="2" />
<text  x="882.76" y="591.5" ></text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.02%)</title><rect x="103.5" y="421" width="0.2" height="15.0" fill="rgb(210,108,35)" rx="2" ry="2" />
<text  x="106.53" y="431.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (1 samples, 0.02%)</title><rect x="969.6" y="309" width="0.2" height="15.0" fill="rgb(225,68,50)" rx="2" ry="2" />
<text  x="972.63" y="319.5" ></text>
</g>
<g >
<title>revert_creds (1 samples, 0.02%)</title><rect x="10.5" y="373" width="0.2" height="15.0" fill="rgb(232,208,45)" rx="2" ry="2" />
<text  x="13.55" y="383.5" ></text>
</g>
<g >
<title>rcu_do_batch (2 samples, 0.03%)</title><rect x="989.9" y="453" width="0.4" height="15.0" fill="rgb(207,150,7)" rx="2" ry="2" />
<text  x="992.95" y="463.5" ></text>
</g>
<g >
<title>openaux (1 samples, 0.02%)</title><rect x="10.5" y="597" width="0.2" height="15.0" fill="rgb(218,141,48)" rx="2" ry="2" />
<text  x="13.55" y="607.5" ></text>
</g>
<g >
<title>__evlist__enable (79 samples, 1.23%)</title><rect x="10.7" y="645" width="14.5" height="15.0" fill="rgb(232,229,12)" rx="2" ry="2" />
<text  x="13.73" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (3 samples, 0.05%)</title><rect x="103.5" y="565" width="0.6" height="15.0" fill="rgb(234,208,1)" rx="2" ry="2" />
<text  x="106.53" y="575.5" ></text>
</g>
<g >
<title>wb_do_writeback (2 samples, 0.03%)</title><rect x="952.4" y="613" width="0.4" height="15.0" fill="rgb(212,109,26)" rx="2" ry="2" />
<text  x="955.43" y="623.5" ></text>
</g>
<g >
<title>__libc_write (37 samples, 0.57%)</title><rect x="26.5" y="549" width="6.7" height="15.0" fill="rgb(232,3,0)" rx="2" ry="2" />
<text  x="29.47" y="559.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.02%)</title><rect x="986.3" y="501" width="0.2" height="15.0" fill="rgb(208,225,16)" rx="2" ry="2" />
<text  x="989.29" y="511.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="939.6" y="517" width="0.2" height="15.0" fill="rgb(211,43,24)" rx="2" ry="2" />
<text  x="942.61" y="527.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (1 samples, 0.02%)</title><rect x="36.0" y="677" width="0.2" height="15.0" fill="rgb(231,210,52)" rx="2" ry="2" />
<text  x="38.99" y="687.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 0.02%)</title><rect x="935.2" y="549" width="0.2" height="15.0" fill="rgb(214,210,46)" rx="2" ry="2" />
<text  x="938.22" y="559.5" ></text>
</g>
<g >
<title>skb_put (1 samples, 0.02%)</title><rect x="969.8" y="437" width="0.2" height="15.0" fill="rgb(207,26,52)" rx="2" ry="2" />
<text  x="972.81" y="447.5" ></text>
</g>
<g >
<title>__fget_files (2 samples, 0.03%)</title><rect x="927.9" y="581" width="0.4" height="15.0" fill="rgb(212,57,16)" rx="2" ry="2" />
<text  x="930.90" y="591.5" ></text>
</g>
<g >
<title>unix_destruct_scm (1 samples, 0.02%)</title><rect x="940.0" y="517" width="0.2" height="15.0" fill="rgb(252,99,43)" rx="2" ry="2" />
<text  x="942.98" y="527.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="570.3" y="437" width="0.1" height="15.0" fill="rgb(252,212,39)" rx="2" ry="2" />
<text  x="573.26" y="447.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="872.1" y="517" width="0.2" height="15.0" fill="rgb(229,18,44)" rx="2" ry="2" />
<text  x="875.08" y="527.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.05%)</title><rect x="932.3" y="485" width="0.5" height="15.0" fill="rgb(252,176,6)" rx="2" ry="2" />
<text  x="935.29" y="495.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="924.8" y="549" width="0.2" height="15.0" fill="rgb(227,64,3)" rx="2" ry="2" />
<text  x="927.79" y="559.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="969.4" y="309" width="0.2" height="15.0" fill="rgb(253,17,17)" rx="2" ry="2" />
<text  x="972.45" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="570.6" y="389" width="2.2" height="15.0" fill="rgb(206,174,35)" rx="2" ry="2" />
<text  x="573.62" y="399.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.08%)</title><rect x="573.0" y="453" width="0.9" height="15.0" fill="rgb(226,71,14)" rx="2" ry="2" />
<text  x="576.00" y="463.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.03%)</title><rect x="719.1" y="661" width="0.3" height="15.0" fill="rgb(231,219,34)" rx="2" ry="2" />
<text  x="722.06" y="671.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="103.5" y="405" width="0.2" height="15.0" fill="rgb(229,217,44)" rx="2" ry="2" />
<text  x="106.53" y="415.5" ></text>
</g>
<g >
<title>dm_read_reg_func (3 samples, 0.05%)</title><rect x="960.7" y="277" width="0.5" height="15.0" fill="rgb(213,49,21)" rx="2" ry="2" />
<text  x="963.66" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (1 samples, 0.02%)</title><rect x="870.4" y="677" width="0.2" height="15.0" fill="rgb(235,163,8)" rx="2" ry="2" />
<text  x="873.43" y="687.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (68 samples, 1.05%)</title><rect x="12.6" y="501" width="12.4" height="15.0" fill="rgb(234,133,8)" rx="2" ry="2" />
<text  x="15.56" y="511.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="946.8" y="645" width="0.1" height="15.0" fill="rgb(212,21,14)" rx="2" ry="2" />
<text  x="949.75" y="655.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (7 samples, 0.11%)</title><rect x="31.8" y="325" width="1.3" height="15.0" fill="rgb(234,91,21)" rx="2" ry="2" />
<text  x="34.78" y="335.5" ></text>
</g>
<g >
<title>drm_atomic_helper_swap_state (1 samples, 0.02%)</title><rect x="881.0" y="549" width="0.2" height="15.0" fill="rgb(234,126,1)" rx="2" ry="2" />
<text  x="884.04" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="990.1" y="421" width="0.2" height="15.0" fill="rgb(231,106,45)" rx="2" ry="2" />
<text  x="993.13" y="431.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="720.5" y="357" width="0.2" height="15.0" fill="rgb(210,151,39)" rx="2" ry="2" />
<text  x="723.53" y="367.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.02%)</title><rect x="626.4" y="581" width="0.2" height="15.0" fill="rgb(230,105,40)" rx="2" ry="2" />
<text  x="629.45" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (12 samples, 0.19%)</title><rect x="116.5" y="485" width="2.2" height="15.0" fill="rgb(247,145,0)" rx="2" ry="2" />
<text  x="119.52" y="495.5" ></text>
</g>
<g >
<title>newidle_balance (6 samples, 0.09%)</title><rect x="1169.0" y="581" width="1.0" height="15.0" fill="rgb(230,65,33)" rx="2" ry="2" />
<text  x="1171.95" y="591.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (2 samples, 0.03%)</title><rect x="952.4" y="581" width="0.4" height="15.0" fill="rgb(227,109,36)" rx="2" ry="2" />
<text  x="955.43" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="103.0" y="485" width="0.2" height="15.0" fill="rgb(209,31,41)" rx="2" ry="2" />
<text  x="105.98" y="495.5" ></text>
</g>
<g >
<title>__check_object_size (4 samples, 0.06%)</title><rect x="882.5" y="597" width="0.7" height="15.0" fill="rgb(231,38,17)" rx="2" ry="2" />
<text  x="885.51" y="607.5" ></text>
</g>
<g >
<title>drm_dev_enter (1 samples, 0.02%)</title><rect x="875.7" y="629" width="0.2" height="15.0" fill="rgb(241,31,8)" rx="2" ry="2" />
<text  x="878.74" y="639.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="45.3" y="645" width="0.4" height="15.0" fill="rgb(245,195,18)" rx="2" ry="2" />
<text  x="48.32" y="655.5" ></text>
</g>
<g >
<title>NaClSysWrite (1 samples, 0.02%)</title><rect x="35.8" y="677" width="0.2" height="15.0" fill="rgb(242,165,11)" rx="2" ry="2" />
<text  x="38.81" y="687.5" ></text>
</g>
<g >
<title>handle_edge_irq (51 samples, 0.79%)</title><rect x="958.6" y="533" width="9.4" height="15.0" fill="rgb(251,214,21)" rx="2" ry="2" />
<text  x="961.65" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 1.50%)</title><rect x="444.1" y="517" width="17.8" height="15.0" fill="rgb(230,198,50)" rx="2" ry="2" />
<text  x="447.15" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.56%)</title><rect x="26.7" y="533" width="6.5" height="15.0" fill="rgb(230,121,0)" rx="2" ry="2" />
<text  x="29.66" y="543.5" ></text>
</g>
<g >
<title>irqentry_enter_from_user_mode (1 samples, 0.02%)</title><rect x="699.1" y="645" width="0.2" height="15.0" fill="rgb(216,102,19)" rx="2" ry="2" />
<text  x="702.11" y="655.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (2 samples, 0.03%)</title><rect x="962.9" y="293" width="0.3" height="15.0" fill="rgb(229,100,0)" rx="2" ry="2" />
<text  x="965.86" y="303.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (5 samples, 0.08%)</title><rect x="961.2" y="165" width="0.9" height="15.0" fill="rgb(213,216,21)" rx="2" ry="2" />
<text  x="964.21" y="175.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="720.5" y="469" width="0.2" height="15.0" fill="rgb(253,68,28)" rx="2" ry="2" />
<text  x="723.53" y="479.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (1 samples, 0.02%)</title><rect x="953.9" y="629" width="0.2" height="15.0" fill="rgb(229,227,10)" rx="2" ry="2" />
<text  x="956.89" y="639.5" ></text>
</g>
<g >
<title>find_lock_entry (1 samples, 0.02%)</title><rect x="95.1" y="357" width="0.2" height="15.0" fill="rgb(239,43,7)" rx="2" ry="2" />
<text  x="98.11" y="367.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (1 samples, 0.02%)</title><rect x="1153.6" y="565" width="0.2" height="15.0" fill="rgb(248,7,49)" rx="2" ry="2" />
<text  x="1156.58" y="575.5" ></text>
</g>
<g >
<title>scheduler_tick (13 samples, 0.20%)</title><rect x="982.6" y="421" width="2.4" height="15.0" fill="rgb(207,142,40)" rx="2" ry="2" />
<text  x="985.63" y="431.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.02%)</title><rect x="720.5" y="389" width="0.2" height="15.0" fill="rgb(231,70,36)" rx="2" ry="2" />
<text  x="723.53" y="399.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (3 samples, 0.05%)</title><rect x="966.2" y="309" width="0.5" height="15.0" fill="rgb(221,35,17)" rx="2" ry="2" />
<text  x="969.15" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_vma (43 samples, 0.67%)</title><rect x="682.3" y="565" width="7.8" height="15.0" fill="rgb(244,41,9)" rx="2" ry="2" />
<text  x="685.27" y="575.5" ></text>
</g>
<g >
<title>amdgpu_cs_vm_handling (3 samples, 0.05%)</title><rect x="879.2" y="581" width="0.6" height="15.0" fill="rgb(231,94,32)" rx="2" ry="2" />
<text  x="882.21" y="591.5" ></text>
</g>
<g >
<title>do_idle (1,228 samples, 19.05%)</title><rect x="953.3" y="645" width="224.8" height="15.0" fill="rgb(212,220,15)" rx="2" ry="2" />
<text  x="956.34" y="655.5" >do_idle</text>
</g>
<g >
<title>__x64_sys_write (36 samples, 0.56%)</title><rect x="26.7" y="501" width="6.5" height="15.0" fill="rgb(249,19,20)" rx="2" ry="2" />
<text  x="29.66" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="27.4" y="165" width="0.2" height="15.0" fill="rgb(219,49,44)" rx="2" ry="2" />
<text  x="30.39" y="175.5" ></text>
</g>
<g >
<title>__kmalloc_node (2 samples, 0.03%)</title><rect x="951.0" y="549" width="0.3" height="15.0" fill="rgb(246,154,13)" rx="2" ry="2" />
<text  x="953.96" y="559.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (6 samples, 0.09%)</title><rect x="571.7" y="373" width="1.1" height="15.0" fill="rgb(209,201,33)" rx="2" ry="2" />
<text  x="574.72" y="383.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.02%)</title><rect x="1186.5" y="565" width="0.2" height="15.0" fill="rgb(220,61,10)" rx="2" ry="2" />
<text  x="1189.52" y="575.5" ></text>
</g>
<g >
<title>dma_fence_signal_locked (4 samples, 0.06%)</title><rect x="966.9" y="389" width="0.7" height="15.0" fill="rgb(217,46,35)" rx="2" ry="2" />
<text  x="969.89" y="399.5" ></text>
</g>
<g >
<title>drm_ioctl_kernel (31 samples, 0.48%)</title><rect x="875.9" y="613" width="5.7" height="15.0" fill="rgb(235,225,52)" rx="2" ry="2" />
<text  x="878.92" y="623.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="732.1" y="469" width="0.1" height="15.0" fill="rgb(209,10,12)" rx="2" ry="2" />
<text  x="735.06" y="479.5" ></text>
</g>
<g >
<title>memcpy_erms (2 samples, 0.03%)</title><rect x="951.7" y="581" width="0.4" height="15.0" fill="rgb(232,80,16)" rx="2" ry="2" />
<text  x="954.69" y="591.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (2 samples, 0.03%)</title><rect x="45.3" y="629" width="0.4" height="15.0" fill="rgb(237,186,48)" rx="2" ry="2" />
<text  x="48.32" y="639.5" ></text>
</g>
<g >
<title>update_curr_rt (1 samples, 0.02%)</title><rect x="934.7" y="533" width="0.2" height="15.0" fill="rgb(220,157,26)" rx="2" ry="2" />
<text  x="937.67" y="543.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (35 samples, 0.54%)</title><rect x="720.9" y="693" width="6.4" height="15.0" fill="rgb(220,87,39)" rx="2" ry="2" />
<text  x="723.89" y="703.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (2 samples, 0.03%)</title><rect x="1186.2" y="549" width="0.3" height="15.0" fill="rgb(210,64,49)" rx="2" ry="2" />
<text  x="1189.16" y="559.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="953.2" y="565" width="0.1" height="15.0" fill="rgb(223,54,13)" rx="2" ry="2" />
<text  x="956.16" y="575.5" ></text>
</g>
<g >
<title>event_function (64 samples, 0.99%)</title><rect x="13.3" y="405" width="11.7" height="15.0" fill="rgb(221,179,13)" rx="2" ry="2" />
<text  x="16.29" y="415.5" ></text>
</g>
<g >
<title>NaClDescRef (77 samples, 1.19%)</title><rect x="626.4" y="597" width="14.1" height="15.0" fill="rgb(243,130,37)" rx="2" ry="2" />
<text  x="629.45" y="607.5" ></text>
</g>
<g >
<title>path_lookupat (1 samples, 0.02%)</title><rect x="103.2" y="245" width="0.1" height="15.0" fill="rgb(212,5,26)" rx="2" ry="2" />
<text  x="106.16" y="255.5" ></text>
</g>
<g >
<title>psi_group_change (6 samples, 0.09%)</title><rect x="933.6" y="517" width="1.1" height="15.0" fill="rgb(246,173,24)" rx="2" ry="2" />
<text  x="936.57" y="527.5" ></text>
</g>
<g >
<title>wq_worker_sleeping (1 samples, 0.02%)</title><rect x="950.4" y="485" width="0.2" height="15.0" fill="rgb(212,86,22)" rx="2" ry="2" />
<text  x="953.41" y="495.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (2 samples, 0.03%)</title><rect x="942.0" y="469" width="0.4" height="15.0" fill="rgb(206,27,52)" rx="2" ry="2" />
<text  x="944.99" y="479.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (1 samples, 0.02%)</title><rect x="940.3" y="549" width="0.2" height="15.0" fill="rgb(239,103,45)" rx="2" ry="2" />
<text  x="943.35" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.14%)</title><rect x="601.9" y="501" width="1.7" height="15.0" fill="rgb(209,214,23)" rx="2" ry="2" />
<text  x="604.92" y="511.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.03%)</title><rect x="103.7" y="437" width="0.4" height="15.0" fill="rgb(223,60,7)" rx="2" ry="2" />
<text  x="106.71" y="447.5" ></text>
</g>
<g >
<title>set_default_locale (1 samples, 0.02%)</title><rect x="10.4" y="645" width="0.1" height="15.0" fill="rgb(210,163,14)" rx="2" ry="2" />
<text  x="13.37" y="655.5" ></text>
</g>
<g >
<title>newidle_balance (2 samples, 0.03%)</title><rect x="947.1" y="565" width="0.4" height="15.0" fill="rgb(205,195,7)" rx="2" ry="2" />
<text  x="950.12" y="575.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.03%)</title><rect x="95.1" y="453" width="0.4" height="15.0" fill="rgb(236,48,2)" rx="2" ry="2" />
<text  x="98.11" y="463.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.02%)</title><rect x="102.1" y="437" width="0.1" height="15.0" fill="rgb(253,76,22)" rx="2" ry="2" />
<text  x="105.06" y="447.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.02%)</title><rect x="695.8" y="533" width="0.2" height="15.0" fill="rgb(209,81,50)" rx="2" ry="2" />
<text  x="698.82" y="543.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (1 samples, 0.02%)</title><rect x="388.1" y="581" width="0.2" height="15.0" fill="rgb(238,77,19)" rx="2" ry="2" />
<text  x="391.14" y="591.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (4 samples, 0.06%)</title><rect x="997.1" y="565" width="0.7" height="15.0" fill="rgb(246,111,5)" rx="2" ry="2" />
<text  x="1000.09" y="575.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (56 samples, 0.87%)</title><rect x="927.4" y="629" width="10.2" height="15.0" fill="rgb(252,172,47)" rx="2" ry="2" />
<text  x="930.35" y="639.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="966.7" y="293" width="0.2" height="15.0" fill="rgb(220,64,47)" rx="2" ry="2" />
<text  x="969.70" y="303.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (7 samples, 0.11%)</title><rect x="388.3" y="629" width="1.3" height="15.0" fill="rgb(226,95,51)" rx="2" ry="2" />
<text  x="391.32" y="639.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (37 samples, 0.57%)</title><rect x="1178.7" y="533" width="6.7" height="15.0" fill="rgb(215,181,48)" rx="2" ry="2" />
<text  x="1181.65" y="543.5" ></text>
</g>
<g >
<title>dc_check_update_surfaces_for_stream (1 samples, 0.02%)</title><rect x="950.0" y="549" width="0.2" height="15.0" fill="rgb(253,225,1)" rx="2" ry="2" />
<text  x="953.05" y="559.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.03%)</title><rect x="58.3" y="661" width="0.4" height="15.0" fill="rgb(213,145,23)" rx="2" ry="2" />
<text  x="61.32" y="671.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="704.1" y="677" width="0.1" height="15.0" fill="rgb(247,218,6)" rx="2" ry="2" />
<text  x="707.05" y="687.5" ></text>
</g>
<g >
<title>timerqueue_add (2 samples, 0.03%)</title><rect x="930.5" y="533" width="0.3" height="15.0" fill="rgb(245,137,22)" rx="2" ry="2" />
<text  x="933.46" y="543.5" ></text>
</g>
<g >
<title>record__write (37 samples, 0.57%)</title><rect x="26.5" y="581" width="6.7" height="15.0" fill="rgb(216,156,9)" rx="2" ry="2" />
<text  x="29.47" y="591.5" ></text>
</g>
<g >
<title>NaClLog (3 samples, 0.05%)</title><rect x="640.0" y="565" width="0.5" height="15.0" fill="rgb(228,86,15)" rx="2" ry="2" />
<text  x="642.99" y="575.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="591.3" y="485" width="0.2" height="15.0" fill="rgb(222,104,29)" rx="2" ry="2" />
<text  x="594.31" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="986.1" y="501" width="0.2" height="15.0" fill="rgb(221,44,14)" rx="2" ry="2" />
<text  x="989.10" y="511.5" ></text>
</g>
<g >
<title>free_unref_page_list (10 samples, 0.16%)</title><rect x="729.7" y="437" width="1.8" height="15.0" fill="rgb(223,172,7)" rx="2" ry="2" />
<text  x="732.68" y="447.5" ></text>
</g>
<g >
<title>HandleStackContext (42 samples, 0.65%)</title><rect x="68.8" y="661" width="7.6" height="15.0" fill="rgb(212,91,36)" rx="2" ry="2" />
<text  x="71.75" y="671.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (1 samples, 0.02%)</title><rect x="968.0" y="309" width="0.2" height="15.0" fill="rgb(246,133,52)" rx="2" ry="2" />
<text  x="970.98" y="319.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.02%)</title><rect x="1157.1" y="565" width="0.1" height="15.0" fill="rgb(209,207,47)" rx="2" ry="2" />
<text  x="1160.05" y="575.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (79 samples, 1.23%)</title><rect x="10.7" y="613" width="14.5" height="15.0" fill="rgb(213,80,21)" rx="2" ry="2" />
<text  x="13.73" y="623.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="1177.4" y="549" width="0.2" height="15.0" fill="rgb(230,228,47)" rx="2" ry="2" />
<text  x="1180.37" y="559.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.03%)</title><rect x="33.2" y="485" width="0.4" height="15.0" fill="rgb(236,167,18)" rx="2" ry="2" />
<text  x="36.24" y="495.5" ></text>
</g>
<g >
<title>snd_power_wait (1 samples, 0.02%)</title><rect x="923.5" y="613" width="0.2" height="15.0" fill="rgb(209,143,5)" rx="2" ry="2" />
<text  x="926.51" y="623.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1153.2" y="501" width="0.2" height="15.0" fill="rgb(210,72,5)" rx="2" ry="2" />
<text  x="1156.21" y="511.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="103.5" y="149" width="0.2" height="15.0" fill="rgb(218,185,46)" rx="2" ry="2" />
<text  x="106.53" y="159.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (7 samples, 0.11%)</title><rect x="30.5" y="293" width="1.3" height="15.0" fill="rgb(237,15,25)" rx="2" ry="2" />
<text  x="33.50" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (5 samples, 0.08%)</title><rect x="1164.0" y="597" width="0.9" height="15.0" fill="rgb(249,183,31)" rx="2" ry="2" />
<text  x="1167.01" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (97 samples, 1.50%)</title><rect x="444.1" y="533" width="17.8" height="15.0" fill="rgb(243,113,13)" rx="2" ry="2" />
<text  x="447.15" y="543.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.02%)</title><rect x="26.1" y="613" width="0.2" height="15.0" fill="rgb(227,52,3)" rx="2" ry="2" />
<text  x="29.11" y="623.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.09%)</title><rect x="602.5" y="469" width="1.1" height="15.0" fill="rgb(234,173,18)" rx="2" ry="2" />
<text  x="605.47" y="479.5" ></text>
</g>
<g >
<title>net_rx_action (8 samples, 0.12%)</title><rect x="968.5" y="485" width="1.5" height="15.0" fill="rgb(218,155,46)" rx="2" ry="2" />
<text  x="971.53" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.17%)</title><rect x="418.2" y="565" width="2.0" height="15.0" fill="rgb(250,147,43)" rx="2" ry="2" />
<text  x="421.16" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.05%)</title><rect x="597.5" y="453" width="0.6" height="15.0" fill="rgb(216,142,46)" rx="2" ry="2" />
<text  x="600.53" y="463.5" ></text>
</g>
<g >
<title>find_vma (3 samples, 0.05%)</title><rect x="680.1" y="629" width="0.5" height="15.0" fill="rgb(224,101,24)" rx="2" ry="2" />
<text  x="683.08" y="639.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2 samples, 0.03%)</title><rect x="95.1" y="533" width="0.4" height="15.0" fill="rgb(211,195,41)" rx="2" ry="2" />
<text  x="98.11" y="543.5" ></text>
</g>
<g >
<title>do_idle (64 samples, 0.99%)</title><rect x="1178.1" y="581" width="11.7" height="15.0" fill="rgb(223,97,1)" rx="2" ry="2" />
<text  x="1181.10" y="591.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="968.3" y="229" width="0.2" height="15.0" fill="rgb(226,193,10)" rx="2" ry="2" />
<text  x="971.35" y="239.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (31 samples, 0.48%)</title><rect x="382.7" y="597" width="5.6" height="15.0" fill="rgb(208,14,50)" rx="2" ry="2" />
<text  x="385.65" y="607.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.02%)</title><rect x="950.8" y="565" width="0.2" height="15.0" fill="rgb(247,219,41)" rx="2" ry="2" />
<text  x="953.78" y="575.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="938.3" y="613" width="0.2" height="15.0" fill="rgb(207,166,44)" rx="2" ry="2" />
<text  x="941.33" y="623.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (18 samples, 0.28%)</title><rect x="728.4" y="485" width="3.3" height="15.0" fill="rgb(253,92,48)" rx="2" ry="2" />
<text  x="731.40" y="495.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="870.6" y="565" width="0.2" height="15.0" fill="rgb(249,152,45)" rx="2" ry="2" />
<text  x="873.61" y="575.5" ></text>
</g>
<g >
<title>drm_sched_process_job (4 samples, 0.06%)</title><rect x="966.9" y="373" width="0.7" height="15.0" fill="rgb(236,56,21)" rx="2" ry="2" />
<text  x="969.89" y="383.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.02%)</title><rect x="732.1" y="437" width="0.1" height="15.0" fill="rgb(244,68,28)" rx="2" ry="2" />
<text  x="735.06" y="447.5" ></text>
</g>
<g >
<title>arch_call_rest_init (65 samples, 1.01%)</title><rect x="1178.1" y="629" width="11.9" height="15.0" fill="rgb(227,63,15)" rx="2" ry="2" />
<text  x="1181.10" y="639.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (11 samples, 0.17%)</title><rect x="968.0" y="533" width="2.0" height="15.0" fill="rgb(254,122,19)" rx="2" ry="2" />
<text  x="970.98" y="543.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="932.5" y="453" width="0.2" height="15.0" fill="rgb(253,167,54)" rx="2" ry="2" />
<text  x="935.48" y="463.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.02%)</title><rect x="10.0" y="549" width="0.2" height="15.0" fill="rgb(245,91,11)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>call_timer_fn (3 samples, 0.05%)</title><rect x="995.8" y="453" width="0.6" height="15.0" fill="rgb(211,153,1)" rx="2" ry="2" />
<text  x="998.80" y="463.5" ></text>
</g>
<g >
<title>snd_ctl_ioctl (27 samples, 0.42%)</title><rect x="882.0" y="645" width="4.9" height="15.0" fill="rgb(214,126,3)" rx="2" ry="2" />
<text  x="884.96" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.02%)</title><rect x="10.0" y="565" width="0.2" height="15.0" fill="rgb(224,219,43)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="510.0" y="501" width="0.2" height="15.0" fill="rgb(242,223,42)" rx="2" ry="2" />
<text  x="513.04" y="511.5" ></text>
</g>
<g >
<title>__GI___poll (5 samples, 0.08%)</title><rect x="25.2" y="629" width="0.9" height="15.0" fill="rgb(219,138,3)" rx="2" ry="2" />
<text  x="28.19" y="639.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.02%)</title><rect x="104.3" y="293" width="0.1" height="15.0" fill="rgb(246,220,27)" rx="2" ry="2" />
<text  x="107.26" y="303.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="943.6" y="661" width="0.2" height="15.0" fill="rgb(225,160,41)" rx="2" ry="2" />
<text  x="946.64" y="671.5" ></text>
</g>
<g >
<title>dequeue_task (5 samples, 0.08%)</title><rect x="871.3" y="549" width="1.0" height="15.0" fill="rgb(208,121,49)" rx="2" ry="2" />
<text  x="874.34" y="559.5" ></text>
</g>
<g >
<title>__gconv_read_conf (1 samples, 0.02%)</title><rect x="10.4" y="565" width="0.1" height="15.0" fill="rgb(240,111,34)" rx="2" ry="2" />
<text  x="13.37" y="575.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.02%)</title><rect x="1178.3" y="565" width="0.2" height="15.0" fill="rgb(230,11,13)" rx="2" ry="2" />
<text  x="1181.29" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="103.2" y="325" width="0.1" height="15.0" fill="rgb(245,102,15)" rx="2" ry="2" />
<text  x="106.16" y="335.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (110 samples, 1.71%)</title><rect x="489.0" y="501" width="20.1" height="15.0" fill="rgb(229,95,1)" rx="2" ry="2" />
<text  x="491.99" y="511.5" ></text>
</g>
<g >
<title>__schedule (7 samples, 0.11%)</title><rect x="871.2" y="565" width="1.2" height="15.0" fill="rgb(234,156,39)" rx="2" ry="2" />
<text  x="874.16" y="575.5" ></text>
</g>
<g >
<title>do_iter_read (1 samples, 0.02%)</title><rect x="102.8" y="245" width="0.2" height="15.0" fill="rgb(232,40,52)" rx="2" ry="2" />
<text  x="105.80" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="1161.1" y="549" width="0.2" height="15.0" fill="rgb(205,166,28)" rx="2" ry="2" />
<text  x="1164.08" y="559.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (4 samples, 0.06%)</title><rect x="964.5" y="229" width="0.7" height="15.0" fill="rgb(253,226,13)" rx="2" ry="2" />
<text  x="967.51" y="239.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="947.7" y="629" width="0.2" height="15.0" fill="rgb(230,182,4)" rx="2" ry="2" />
<text  x="950.67" y="639.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="950.8" y="549" width="0.2" height="15.0" fill="rgb(208,91,32)" rx="2" ry="2" />
<text  x="953.78" y="559.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="966.9" y="357" width="0.2" height="15.0" fill="rgb(231,215,54)" rx="2" ry="2" />
<text  x="969.89" y="367.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (65 samples, 1.01%)</title><rect x="1178.1" y="661" width="11.9" height="15.0" fill="rgb(225,94,27)" rx="2" ry="2" />
<text  x="1181.10" y="671.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (160 samples, 2.48%)</title><rect x="526.5" y="501" width="29.3" height="15.0" fill="rgb(247,162,18)" rx="2" ry="2" />
<text  x="529.51" y="511.5" >ri..</text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.02%)</title><rect x="103.2" y="565" width="0.1" height="15.0" fill="rgb(205,173,43)" rx="2" ry="2" />
<text  x="106.16" y="575.5" ></text>
</g>
<g >
<title>rcu_idle_exit (3 samples, 0.05%)</title><rect x="1184.7" y="517" width="0.5" height="15.0" fill="rgb(217,29,10)" rx="2" ry="2" />
<text  x="1187.69" y="527.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (67 samples, 1.04%)</title><rect x="562.6" y="533" width="12.2" height="15.0" fill="rgb(218,118,53)" rx="2" ry="2" />
<text  x="565.57" y="543.5" ></text>
</g>
<g >
<title>lock_page_lruvec_irqsave (1 samples, 0.02%)</title><rect x="693.4" y="517" width="0.2" height="15.0" fill="rgb(254,17,0)" rx="2" ry="2" />
<text  x="696.44" y="527.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (15 samples, 0.23%)</title><rect x="55.6" y="629" width="2.7" height="15.0" fill="rgb(248,29,41)" rx="2" ry="2" />
<text  x="58.57" y="639.5" ></text>
</g>
<g >
<title>amdgpu_cs_submit (11 samples, 0.17%)</title><rect x="877.2" y="581" width="2.0" height="15.0" fill="rgb(227,81,49)" rx="2" ry="2" />
<text  x="880.20" y="591.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (90 samples, 1.40%)</title><rect x="970.5" y="549" width="16.5" height="15.0" fill="rgb(248,67,22)" rx="2" ry="2" />
<text  x="973.55" y="559.5" ></text>
</g>
<g >
<title>__enqueue_rt_entity (2 samples, 0.03%)</title><rect x="974.2" y="389" width="0.4" height="15.0" fill="rgb(242,96,45)" rx="2" ry="2" />
<text  x="977.21" y="399.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.02%)</title><rect x="966.9" y="309" width="0.2" height="15.0" fill="rgb(252,150,43)" rx="2" ry="2" />
<text  x="969.89" y="319.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (1 samples, 0.02%)</title><rect x="941.6" y="453" width="0.2" height="15.0" fill="rgb(233,6,2)" rx="2" ry="2" />
<text  x="944.63" y="463.5" ></text>
</g>
<g >
<title>__note_gp_changes (1 samples, 0.02%)</title><rect x="989.2" y="437" width="0.2" height="15.0" fill="rgb(252,65,40)" rx="2" ry="2" />
<text  x="992.22" y="447.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.05%)</title><rect x="947.1" y="597" width="0.6" height="15.0" fill="rgb(221,48,29)" rx="2" ry="2" />
<text  x="950.12" y="607.5" ></text>
</g>
<g >
<title>dc_resource_state_copy_construct_current (1 samples, 0.02%)</title><rect x="951.5" y="581" width="0.2" height="15.0" fill="rgb(245,85,26)" rx="2" ry="2" />
<text  x="954.51" y="591.5" ></text>
</g>
<g >
<title>pagevec_lookup_range_tag (1 samples, 0.02%)</title><rect x="952.6" y="485" width="0.2" height="15.0" fill="rgb(226,43,53)" rx="2" ry="2" />
<text  x="955.61" y="495.5" ></text>
</g>
<g >
<title>sock_def_readable (4 samples, 0.06%)</title><rect x="942.5" y="533" width="0.8" height="15.0" fill="rgb(242,229,47)" rx="2" ry="2" />
<text  x="945.54" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="527.4" y="437" width="0.2" height="15.0" fill="rgb(241,156,35)" rx="2" ry="2" />
<text  x="530.43" y="447.5" ></text>
</g>
<g >
<title>ttm_eu_backoff_reservation (1 samples, 0.02%)</title><rect x="880.5" y="485" width="0.2" height="15.0" fill="rgb(214,37,12)" rx="2" ry="2" />
<text  x="883.49" y="495.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="947.7" y="613" width="0.2" height="15.0" fill="rgb(254,132,25)" rx="2" ry="2" />
<text  x="950.67" y="623.5" ></text>
</g>
<g >
<title>dequeue_task_rt (1 samples, 0.02%)</title><rect x="934.9" y="549" width="0.1" height="15.0" fill="rgb(233,91,22)" rx="2" ry="2" />
<text  x="937.85" y="559.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (2 samples, 0.03%)</title><rect x="30.1" y="277" width="0.4" height="15.0" fill="rgb(216,8,21)" rx="2" ry="2" />
<text  x="33.13" y="287.5" ></text>
</g>
<g >
<title>dal_irq_service_ack (1 samples, 0.02%)</title><rect x="959.6" y="405" width="0.1" height="15.0" fill="rgb(254,122,1)" rx="2" ry="2" />
<text  x="962.56" y="415.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="870.6" y="581" width="0.2" height="15.0" fill="rgb(246,114,21)" rx="2" ry="2" />
<text  x="873.61" y="591.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="477.5" y="469" width="0.1" height="15.0" fill="rgb(205,88,24)" rx="2" ry="2" />
<text  x="480.46" y="479.5" ></text>
</g>
<g >
<title>tick_sched_handle (23 samples, 0.36%)</title><rect x="981.0" y="453" width="4.2" height="15.0" fill="rgb(218,157,23)" rx="2" ry="2" />
<text  x="983.98" y="463.5" ></text>
</g>
<g >
<title>lind_write (1 samples, 0.02%)</title><rect x="46.4" y="677" width="0.2" height="15.0" fill="rgb(246,213,6)" rx="2" ry="2" />
<text  x="49.42" y="687.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="34.0" y="613" width="0.2" height="15.0" fill="rgb(211,20,24)" rx="2" ry="2" />
<text  x="36.98" y="623.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (3 samples, 0.05%)</title><rect x="962.3" y="341" width="0.6" height="15.0" fill="rgb(212,216,49)" rx="2" ry="2" />
<text  x="965.31" y="351.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="938.7" y="613" width="0.2" height="15.0" fill="rgb(224,221,31)" rx="2" ry="2" />
<text  x="941.70" y="623.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 0.99%)</title><rect x="13.3" y="421" width="11.7" height="15.0" fill="rgb(237,11,35)" rx="2" ry="2" />
<text  x="16.29" y="431.5" ></text>
</g>
<g >
<title>amdgpu_sync_vm_fence (1 samples, 0.02%)</title><rect x="879.6" y="565" width="0.2" height="15.0" fill="rgb(219,94,52)" rx="2" ry="2" />
<text  x="882.58" y="575.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::is_initialized (1 samples, 0.02%)</title><rect x="444.0" y="453" width="0.1" height="15.0" fill="rgb(221,10,39)" rx="2" ry="2" />
<text  x="446.97" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (143 samples, 2.22%)</title><rect x="970.4" y="565" width="26.1" height="15.0" fill="rgb(243,195,37)" rx="2" ry="2" />
<text  x="973.36" y="575.5" >s..</text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (2 samples, 0.03%)</title><rect x="947.9" y="517" width="0.3" height="15.0" fill="rgb(219,16,35)" rx="2" ry="2" />
<text  x="950.85" y="527.5" ></text>
</g>
<g >
<title>dc_stream_get_vblank_counter (1 samples, 0.02%)</title><rect x="960.5" y="325" width="0.2" height="15.0" fill="rgb(232,35,14)" rx="2" ry="2" />
<text  x="963.48" y="335.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (1 samples, 0.02%)</title><rect x="33.1" y="325" width="0.1" height="15.0" fill="rgb(247,80,45)" rx="2" ry="2" />
<text  x="36.06" y="335.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (11 samples, 0.17%)</title><rect x="963.2" y="293" width="2.0" height="15.0" fill="rgb(226,219,40)" rx="2" ry="2" />
<text  x="966.22" y="303.5" ></text>
</g>
<g >
<title>plist_del (1 samples, 0.02%)</title><rect x="975.5" y="389" width="0.2" height="15.0" fill="rgb(252,197,20)" rx="2" ry="2" />
<text  x="978.49" y="399.5" ></text>
</g>
<g >
<title>__wake_up (5 samples, 0.08%)</title><rect x="878.1" y="533" width="0.9" height="15.0" fill="rgb(205,89,41)" rx="2" ry="2" />
<text  x="881.12" y="543.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (1 samples, 0.02%)</title><rect x="981.5" y="421" width="0.2" height="15.0" fill="rgb(240,32,35)" rx="2" ry="2" />
<text  x="984.53" y="431.5" ></text>
</g>
<g >
<title>seq_printf (1 samples, 0.02%)</title><rect x="26.1" y="421" width="0.2" height="15.0" fill="rgb(251,110,22)" rx="2" ry="2" />
<text  x="29.11" y="431.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (2 samples, 0.03%)</title><rect x="31.4" y="229" width="0.4" height="15.0" fill="rgb(233,223,18)" rx="2" ry="2" />
<text  x="34.41" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (76 samples, 1.18%)</title><rect x="430.1" y="533" width="13.9" height="15.0" fill="rgb(215,223,8)" rx="2" ry="2" />
<text  x="433.06" y="543.5" ></text>
</g>
<g >
<title>alx_mask_msix (5 samples, 0.08%)</title><rect x="958.6" y="469" width="1.0" height="15.0" fill="rgb(253,209,6)" rx="2" ry="2" />
<text  x="961.65" y="479.5" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 0.02%)</title><rect x="26.1" y="453" width="0.2" height="15.0" fill="rgb(217,127,20)" rx="2" ry="2" />
<text  x="29.11" y="463.5" ></text>
</g>
<g >
<title>snd_pcm_hwsync (129 samples, 2.00%)</title><rect x="887.4" y="613" width="23.7" height="15.0" fill="rgb(245,210,43)" rx="2" ry="2" />
<text  x="890.45" y="623.5" >s..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect x="720.5" y="341" width="0.2" height="15.0" fill="rgb(208,129,40)" rx="2" ry="2" />
<text  x="723.53" y="351.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="1189.6" y="501" width="0.2" height="15.0" fill="rgb(235,167,53)" rx="2" ry="2" />
<text  x="1192.63" y="511.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="30.9" y="213" width="0.1" height="15.0" fill="rgb(250,122,10)" rx="2" ry="2" />
<text  x="33.87" y="223.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="509.3" y="469" width="0.2" height="15.0" fill="rgb(254,185,39)" rx="2" ry="2" />
<text  x="512.31" y="479.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="570.3" y="421" width="0.1" height="15.0" fill="rgb(244,49,51)" rx="2" ry="2" />
<text  x="573.26" y="431.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="879.6" y="501" width="0.2" height="15.0" fill="rgb(206,225,14)" rx="2" ry="2" />
<text  x="882.58" y="511.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.02%)</title><rect x="1188.7" y="469" width="0.2" height="15.0" fill="rgb(221,223,38)" rx="2" ry="2" />
<text  x="1191.72" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.16%)</title><rect x="600.1" y="453" width="1.8" height="15.0" fill="rgb(220,55,15)" rx="2" ry="2" />
<text  x="603.09" y="463.5" ></text>
</g>
<g >
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="31.0" y="197" width="0.2" height="15.0" fill="rgb(205,56,41)" rx="2" ry="2" />
<text  x="34.05" y="207.5" ></text>
</g>
<g >
<title>NaClStoreMem (1 samples, 0.02%)</title><rect x="103.3" y="549" width="0.2" height="15.0" fill="rgb(230,32,15)" rx="2" ry="2" />
<text  x="106.35" y="559.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (42 samples, 0.65%)</title><rect x="707.2" y="677" width="7.7" height="15.0" fill="rgb(214,59,19)" rx="2" ry="2" />
<text  x="710.16" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (11 samples, 0.17%)</title><rect x="704.6" y="677" width="2.0" height="15.0" fill="rgb(237,143,7)" rx="2" ry="2" />
<text  x="707.60" y="687.5" ></text>
</g>
<g >
<title>[libncursesw.so.6.2] (1 samples, 0.02%)</title><rect x="10.0" y="677" width="0.2" height="15.0" fill="rgb(229,167,22)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="948.0" y="469" width="0.2" height="15.0" fill="rgb(219,72,26)" rx="2" ry="2" />
<text  x="951.03" y="479.5" ></text>
</g>
<g >
<title>default_wake_function (3 samples, 0.05%)</title><rect x="942.7" y="453" width="0.6" height="15.0" fill="rgb(232,14,13)" rx="2" ry="2" />
<text  x="945.73" y="463.5" ></text>
</g>
<g >
<title>kick_ilb (3 samples, 0.05%)</title><rect x="1169.5" y="549" width="0.5" height="15.0" fill="rgb(254,216,17)" rx="2" ry="2" />
<text  x="1172.50" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="929.2" y="565" width="0.3" height="15.0" fill="rgb(251,202,52)" rx="2" ry="2" />
<text  x="932.18" y="575.5" ></text>
</g>
<g >
<title>update_pvclock_gtod (1 samples, 0.02%)</title><rect x="980.6" y="357" width="0.2" height="15.0" fill="rgb(242,123,39)" rx="2" ry="2" />
<text  x="983.61" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (3 samples, 0.05%)</title><rect x="1177.6" y="581" width="0.5" height="15.0" fill="rgb(244,38,29)" rx="2" ry="2" />
<text  x="1180.55" y="591.5" ></text>
</g>
<g >
<title>dequeue_task (2 samples, 0.03%)</title><rect x="953.0" y="613" width="0.3" height="15.0" fill="rgb(205,73,24)" rx="2" ry="2" />
<text  x="955.98" y="623.5" ></text>
</g>
<g >
<title>call_rcu (1 samples, 0.02%)</title><rect x="877.9" y="453" width="0.2" height="15.0" fill="rgb(249,115,50)" rx="2" ry="2" />
<text  x="880.93" y="463.5" ></text>
</g>
<g >
<title>sel_ldr (3,819 samples, 59.24%)</title><rect x="33.8" y="709" width="699.0" height="15.0" fill="rgb(254,101,17)" rx="2" ry="2" />
<text  x="36.79" y="719.5" >sel_ldr</text>
</g>
<g >
<title>NaClXMutexUnlock (2 samples, 0.03%)</title><rect x="36.2" y="677" width="0.3" height="15.0" fill="rgb(248,201,36)" rx="2" ry="2" />
<text  x="39.17" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (23 samples, 0.36%)</title><rect x="465.0" y="469" width="4.2" height="15.0" fill="rgb(227,193,21)" rx="2" ry="2" />
<text  x="468.01" y="479.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1153.2" y="453" width="0.2" height="15.0" fill="rgb(216,55,19)" rx="2" ry="2" />
<text  x="1156.21" y="463.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (250 samples, 3.88%)</title><rect x="325.5" y="469" width="45.8" height="15.0" fill="rgb(233,113,29)" rx="2" ry="2" />
<text  x="328.55" y="479.5" >ring..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (1 samples, 0.02%)</title><rect x="720.5" y="293" width="0.2" height="15.0" fill="rgb(240,159,46)" rx="2" ry="2" />
<text  x="723.53" y="303.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (1 samples, 0.02%)</title><rect x="1176.6" y="613" width="0.2" height="15.0" fill="rgb(229,7,26)" rx="2" ry="2" />
<text  x="1179.64" y="623.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="720.5" y="373" width="0.2" height="15.0" fill="rgb(231,32,45)" rx="2" ry="2" />
<text  x="723.53" y="383.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.02%)</title><rect x="1153.8" y="565" width="0.1" height="15.0" fill="rgb(235,60,36)" rx="2" ry="2" />
<text  x="1156.76" y="575.5" ></text>
</g>
<g >
<title>pollwake (3 samples, 0.05%)</title><rect x="942.7" y="469" width="0.6" height="15.0" fill="rgb(222,127,38)" rx="2" ry="2" />
<text  x="945.73" y="479.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (6 samples, 0.09%)</title><rect x="730.4" y="405" width="1.1" height="15.0" fill="rgb(208,155,2)" rx="2" ry="2" />
<text  x="733.41" y="415.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1174.1" y="533" width="0.2" height="15.0" fill="rgb(217,186,43)" rx="2" ry="2" />
<text  x="1177.08" y="543.5" ></text>
</g>
<g >
<title>core::cmp::min_by (7 samples, 0.11%)</title><rect x="115.2" y="485" width="1.3" height="15.0" fill="rgb(254,181,14)" rx="2" ry="2" />
<text  x="118.24" y="495.5" ></text>
</g>
<g >
<title>ksys_write (2 samples, 0.03%)</title><rect x="33.2" y="517" width="0.4" height="15.0" fill="rgb(215,4,42)" rx="2" ry="2" />
<text  x="36.24" y="527.5" ></text>
</g>
<g >
<title>__call_rcu (1 samples, 0.02%)</title><rect x="877.9" y="437" width="0.2" height="15.0" fill="rgb(222,3,27)" rx="2" ry="2" />
<text  x="880.93" y="447.5" ></text>
</g>
<g >
<title>__schedule (28 samples, 0.43%)</title><rect x="931.4" y="565" width="5.1" height="15.0" fill="rgb(219,55,16)" rx="2" ry="2" />
<text  x="934.38" y="575.5" ></text>
</g>
<g >
<title>rcu_core_si (9 samples, 0.14%)</title><rect x="988.7" y="485" width="1.6" height="15.0" fill="rgb(205,122,6)" rx="2" ry="2" />
<text  x="991.67" y="495.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (45 samples, 0.70%)</title><rect x="469.2" y="501" width="8.3" height="15.0" fill="rgb(248,197,31)" rx="2" ry="2" />
<text  x="472.22" y="511.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (2 samples, 0.03%)</title><rect x="959.9" y="229" width="0.4" height="15.0" fill="rgb(226,6,28)" rx="2" ry="2" />
<text  x="962.93" y="239.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (2 samples, 0.03%)</title><rect x="33.2" y="405" width="0.4" height="15.0" fill="rgb(222,209,11)" rx="2" ry="2" />
<text  x="36.24" y="415.5" ></text>
</g>
<g >
<title>NaClGetDesc (1 samples, 0.02%)</title><rect x="378.1" y="629" width="0.2" height="15.0" fill="rgb(244,6,54)" rx="2" ry="2" />
<text  x="381.08" y="639.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="1164.0" y="533" width="0.2" height="15.0" fill="rgb(250,192,43)" rx="2" ry="2" />
<text  x="1167.01" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="702.6" y="645" width="0.2" height="15.0" fill="rgb(213,97,44)" rx="2" ry="2" />
<text  x="705.59" y="655.5" ></text>
</g>
<g >
<title>__import_iovec (2 samples, 0.03%)</title><rect x="940.2" y="597" width="0.3" height="15.0" fill="rgb(251,173,33)" rx="2" ry="2" />
<text  x="943.16" y="607.5" ></text>
</g>
<g >
<title>__blk_mq_end_request (1 samples, 0.02%)</title><rect x="968.2" y="405" width="0.1" height="15.0" fill="rgb(244,166,35)" rx="2" ry="2" />
<text  x="971.17" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="510.0" y="469" width="0.2" height="15.0" fill="rgb(253,207,34)" rx="2" ry="2" />
<text  x="513.04" y="479.5" ></text>
</g>
<g >
<title>remote_function (1 samples, 0.02%)</title><rect x="33.6" y="533" width="0.2" height="15.0" fill="rgb(212,179,24)" rx="2" ry="2" />
<text  x="36.61" y="543.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1153.2" y="421" width="0.2" height="15.0" fill="rgb(216,4,2)" rx="2" ry="2" />
<text  x="1156.21" y="431.5" ></text>
</g>
<g >
<title>send_vblank_event (1 samples, 0.02%)</title><rect x="966.7" y="389" width="0.2" height="15.0" fill="rgb(222,144,22)" rx="2" ry="2" />
<text  x="969.70" y="399.5" ></text>
</g>
<g >
<title>cpu_stop_queue_work (1 samples, 0.02%)</title><rect x="985.6" y="437" width="0.1" height="15.0" fill="rgb(214,101,23)" rx="2" ry="2" />
<text  x="988.55" y="447.5" ></text>
</g>
<g >
<title>unix_write_space (1 samples, 0.02%)</title><rect x="940.0" y="485" width="0.2" height="15.0" fill="rgb(243,64,11)" rx="2" ry="2" />
<text  x="942.98" y="495.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="929.7" y="597" width="0.2" height="15.0" fill="rgb(240,132,16)" rx="2" ry="2" />
<text  x="932.73" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.03%)</title><rect x="719.4" y="613" width="0.4" height="15.0" fill="rgb(247,202,52)" rx="2" ry="2" />
<text  x="722.43" y="623.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="102.8" y="213" width="0.2" height="15.0" fill="rgb(238,180,12)" rx="2" ry="2" />
<text  x="105.80" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (89 samples, 1.38%)</title><rect x="970.5" y="533" width="16.3" height="15.0" fill="rgb(216,65,20)" rx="2" ry="2" />
<text  x="973.55" y="543.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="573.6" y="421" width="0.3" height="15.0" fill="rgb(220,91,52)" rx="2" ry="2" />
<text  x="576.55" y="431.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (1 samples, 0.02%)</title><rect x="948.4" y="517" width="0.2" height="15.0" fill="rgb(235,204,13)" rx="2" ry="2" />
<text  x="951.40" y="527.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1178.8" y="405" width="0.2" height="15.0" fill="rgb(237,57,39)" rx="2" ry="2" />
<text  x="1181.84" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="951.0" y="501" width="0.3" height="15.0" fill="rgb(239,83,30)" rx="2" ry="2" />
<text  x="953.96" y="511.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="489.0" y="453" width="0.2" height="15.0" fill="rgb(243,39,31)" rx="2" ry="2" />
<text  x="491.99" y="463.5" ></text>
</g>
<g >
<title>drm_atomic_check_only (2 samples, 0.03%)</title><rect x="879.9" y="549" width="0.4" height="15.0" fill="rgb(213,157,35)" rx="2" ry="2" />
<text  x="882.95" y="559.5" ></text>
</g>
<g >
<title>alloc_buffer_head (3 samples, 0.05%)</title><rect x="27.2" y="261" width="0.6" height="15.0" fill="rgb(232,110,47)" rx="2" ry="2" />
<text  x="30.20" y="271.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="969.4" y="293" width="0.2" height="15.0" fill="rgb(250,34,0)" rx="2" ry="2" />
<text  x="972.45" y="303.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (1 samples, 0.02%)</title><rect x="477.5" y="501" width="0.1" height="15.0" fill="rgb(228,210,48)" rx="2" ry="2" />
<text  x="480.46" y="511.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (22 samples, 0.34%)</title><rect x="636.0" y="549" width="4.0" height="15.0" fill="rgb(252,110,2)" rx="2" ry="2" />
<text  x="638.97" y="559.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="270.8" y="453" width="0.2" height="15.0" fill="rgb(252,195,39)" rx="2" ry="2" />
<text  x="273.82" y="463.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (1 samples, 0.02%)</title><rect x="881.4" y="581" width="0.2" height="15.0" fill="rgb(231,186,14)" rx="2" ry="2" />
<text  x="884.41" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.14%)</title><rect x="572.8" y="469" width="1.7" height="15.0" fill="rgb(228,28,31)" rx="2" ry="2" />
<text  x="575.82" y="479.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.02%)</title><rect x="1174.1" y="565" width="0.2" height="15.0" fill="rgb(213,160,30)" rx="2" ry="2" />
<text  x="1177.08" y="575.5" ></text>
</g>
<g >
<title>run_timer_softirq (3 samples, 0.05%)</title><rect x="995.8" y="485" width="0.6" height="15.0" fill="rgb(250,208,14)" rx="2" ry="2" />
<text  x="998.80" y="495.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (3 samples, 0.05%)</title><rect x="959.9" y="325" width="0.6" height="15.0" fill="rgb(207,44,45)" rx="2" ry="2" />
<text  x="962.93" y="335.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.02%)</title><rect x="985.6" y="421" width="0.1" height="15.0" fill="rgb(216,144,20)" rx="2" ry="2" />
<text  x="988.55" y="431.5" ></text>
</g>
<g >
<title>rmqueue (9 samples, 0.14%)</title><rect x="687.8" y="517" width="1.6" height="15.0" fill="rgb(207,127,31)" rx="2" ry="2" />
<text  x="690.76" y="527.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (3 samples, 0.05%)</title><rect x="962.3" y="373" width="0.6" height="15.0" fill="rgb(227,213,18)" rx="2" ry="2" />
<text  x="965.31" y="383.5" ></text>
</g>
<g >
<title>add_wait_queue (2 samples, 0.03%)</title><rect x="929.2" y="581" width="0.3" height="15.0" fill="rgb(224,194,6)" rx="2" ry="2" />
<text  x="932.18" y="591.5" ></text>
</g>
<g >
<title>CheckValidityOfRegularInstruction (1 samples, 0.02%)</title><rect x="101.5" y="549" width="0.2" height="15.0" fill="rgb(238,21,28)" rx="2" ry="2" />
<text  x="104.52" y="559.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="984.8" y="389" width="0.2" height="15.0" fill="rgb(225,25,17)" rx="2" ry="2" />
<text  x="987.82" y="399.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="527.4" y="341" width="0.2" height="15.0" fill="rgb(223,48,7)" rx="2" ry="2" />
<text  x="530.43" y="351.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.02%)</title><rect x="102.1" y="453" width="0.1" height="15.0" fill="rgb(243,19,4)" rx="2" ry="2" />
<text  x="105.06" y="463.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.03%)</title><rect x="509.1" y="517" width="0.4" height="15.0" fill="rgb(247,65,4)" rx="2" ry="2" />
<text  x="512.13" y="527.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 0.03%)</title><rect x="1186.2" y="517" width="0.3" height="15.0" fill="rgb(244,214,44)" rx="2" ry="2" />
<text  x="1189.16" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.02%)</title><rect x="702.4" y="581" width="0.2" height="15.0" fill="rgb(234,190,33)" rx="2" ry="2" />
<text  x="705.41" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.17%)</title><rect x="572.8" y="485" width="2.0" height="15.0" fill="rgb(206,81,30)" rx="2" ry="2" />
<text  x="575.82" y="495.5" ></text>
</g>
<g >
<title>complete_all (1 samples, 0.02%)</title><rect x="966.7" y="357" width="0.2" height="15.0" fill="rgb(222,136,32)" rx="2" ry="2" />
<text  x="969.70" y="367.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (44 samples, 0.68%)</title><rect x="988.3" y="533" width="8.1" height="15.0" fill="rgb(252,149,41)" rx="2" ry="2" />
<text  x="991.30" y="543.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (39 samples, 0.60%)</title><rect x="517.7" y="469" width="7.2" height="15.0" fill="rgb(229,58,44)" rx="2" ry="2" />
<text  x="520.73" y="479.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (2 samples, 0.03%)</title><rect x="728.0" y="469" width="0.4" height="15.0" fill="rgb(232,213,1)" rx="2" ry="2" />
<text  x="731.03" y="479.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="946.4" y="677" width="0.2" height="15.0" fill="rgb(230,150,22)" rx="2" ry="2" />
<text  x="949.39" y="687.5" ></text>
</g>
<g >
<title>irq_work_tick (3 samples, 0.05%)</title><rect x="981.7" y="421" width="0.6" height="15.0" fill="rgb(209,105,54)" rx="2" ry="2" />
<text  x="984.71" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (11 samples, 0.17%)</title><rect x="1160.7" y="581" width="2.0" height="15.0" fill="rgb(213,12,23)" rx="2" ry="2" />
<text  x="1163.72" y="591.5" ></text>
</g>
<g >
<title>scsi_softirq_done (2 samples, 0.03%)</title><rect x="968.2" y="469" width="0.3" height="15.0" fill="rgb(242,186,4)" rx="2" ry="2" />
<text  x="971.17" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="719.4" y="661" width="0.4" height="15.0" fill="rgb(236,131,48)" rx="2" ry="2" />
<text  x="722.43" y="671.5" ></text>
</g>
<g >
<title>azx_pcm_pointer (123 samples, 1.91%)</title><rect x="888.4" y="549" width="22.5" height="15.0" fill="rgb(228,105,47)" rx="2" ry="2" />
<text  x="891.37" y="559.5" >a..</text>
</g>
<g >
<title>ttwu_do_wakeup (2 samples, 0.03%)</title><rect x="875.0" y="565" width="0.4" height="15.0" fill="rgb(230,216,0)" rx="2" ry="2" />
<text  x="878.00" y="575.5" ></text>
</g>
<g >
<title>amdgpu_get_vblank_counter_kms (1 samples, 0.02%)</title><rect x="968.0" y="325" width="0.2" height="15.0" fill="rgb(228,32,3)" rx="2" ry="2" />
<text  x="970.98" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.02%)</title><rect x="720.5" y="437" width="0.2" height="15.0" fill="rgb(231,227,21)" rx="2" ry="2" />
<text  x="723.53" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1189.6" y="517" width="0.2" height="15.0" fill="rgb(209,104,39)" rx="2" ry="2" />
<text  x="1192.63" y="527.5" ></text>
</g>
<g >
<title>amdgpu_irq_dispatch (44 samples, 0.68%)</title><rect x="959.6" y="453" width="8.0" height="15.0" fill="rgb(247,24,12)" rx="2" ry="2" />
<text  x="962.56" y="463.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="693.3" y="485" width="0.1" height="15.0" fill="rgb(239,114,44)" rx="2" ry="2" />
<text  x="696.25" y="495.5" ></text>
</g>
<g >
<title>std::fs::canonicalize (1 samples, 0.02%)</title><rect x="103.2" y="421" width="0.1" height="15.0" fill="rgb(238,150,14)" rx="2" ry="2" />
<text  x="106.16" y="431.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (3 samples, 0.05%)</title><rect x="1164.0" y="581" width="0.6" height="15.0" fill="rgb(231,172,44)" rx="2" ry="2" />
<text  x="1167.01" y="591.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (1 samples, 0.02%)</title><rect x="104.1" y="661" width="0.2" height="15.0" fill="rgb(245,62,51)" rx="2" ry="2" />
<text  x="107.08" y="671.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="102.8" y="229" width="0.2" height="15.0" fill="rgb(238,39,42)" rx="2" ry="2" />
<text  x="105.80" y="239.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (44 samples, 0.68%)</title><rect x="988.3" y="501" width="8.1" height="15.0" fill="rgb(218,166,48)" rx="2" ry="2" />
<text  x="991.30" y="511.5" ></text>
</g>
<g >
<title>__gconv_load_conf (1 samples, 0.02%)</title><rect x="10.4" y="581" width="0.1" height="15.0" fill="rgb(217,150,51)" rx="2" ry="2" />
<text  x="13.37" y="591.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (2 samples, 0.03%)</title><rect x="103.7" y="405" width="0.4" height="15.0" fill="rgb(230,202,9)" rx="2" ry="2" />
<text  x="106.71" y="415.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (1 samples, 0.02%)</title><rect x="925.2" y="613" width="0.1" height="15.0" fill="rgb(254,229,48)" rx="2" ry="2" />
<text  x="928.15" y="623.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="728.0" y="437" width="0.2" height="15.0" fill="rgb(238,85,24)" rx="2" ry="2" />
<text  x="731.03" y="447.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (5 samples, 0.08%)</title><rect x="28.1" y="277" width="0.9" height="15.0" fill="rgb(238,178,34)" rx="2" ry="2" />
<text  x="31.12" y="287.5" ></text>
</g>
<g >
<title>amdgpu_fence_process (4 samples, 0.06%)</title><rect x="966.9" y="421" width="0.7" height="15.0" fill="rgb(228,58,16)" rx="2" ry="2" />
<text  x="969.89" y="431.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="875.4" y="629" width="0.2" height="15.0" fill="rgb(253,129,4)" rx="2" ry="2" />
<text  x="878.37" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (28 samples, 0.43%)</title><rect x="422.9" y="501" width="5.1" height="15.0" fill="rgb(212,190,14)" rx="2" ry="2" />
<text  x="425.92" y="511.5" ></text>
</g>
<g >
<title>amdgpu_cs_sync_rings (2 samples, 0.03%)</title><rect x="879.2" y="565" width="0.4" height="15.0" fill="rgb(227,97,33)" rx="2" ry="2" />
<text  x="882.21" y="575.5" ></text>
</g>
<g >
<title>dispatcher (1,093 samples, 16.95%)</title><rect x="409.7" y="581" width="200.1" height="15.0" fill="rgb(219,67,14)" rx="2" ry="2" />
<text  x="412.74" y="591.5" >dispatcher</text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="103.5" y="373" width="0.2" height="15.0" fill="rgb(235,127,47)" rx="2" ry="2" />
<text  x="106.53" y="383.5" ></text>
</g>
<g >
<title>drm_atomic_plane_check (1 samples, 0.02%)</title><rect x="880.1" y="533" width="0.2" height="15.0" fill="rgb(213,130,45)" rx="2" ry="2" />
<text  x="883.13" y="543.5" ></text>
</g>
<g >
<title>MunmapInternal (1 samples, 0.02%)</title><rect x="104.3" y="629" width="0.1" height="15.0" fill="rgb(238,112,32)" rx="2" ry="2" />
<text  x="107.26" y="639.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.02%)</title><rect x="102.8" y="293" width="0.2" height="15.0" fill="rgb(231,87,8)" rx="2" ry="2" />
<text  x="105.80" y="303.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.03%)</title><rect x="103.7" y="373" width="0.4" height="15.0" fill="rgb(250,96,37)" rx="2" ry="2" />
<text  x="106.71" y="383.5" ></text>
</g>
<g >
<title>alx_clean_tx_irq (1 samples, 0.02%)</title><rect x="969.1" y="437" width="0.2" height="15.0" fill="rgb(254,192,11)" rx="2" ry="2" />
<text  x="972.08" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (34 samples, 0.53%)</title><rect x="597.3" y="549" width="6.3" height="15.0" fill="rgb(211,48,33)" rx="2" ry="2" />
<text  x="600.35" y="559.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (3 samples, 0.05%)</title><rect x="1177.6" y="597" width="0.5" height="15.0" fill="rgb(213,82,16)" rx="2" ry="2" />
<text  x="1180.55" y="607.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.02%)</title><rect x="10.5" y="453" width="0.2" height="15.0" fill="rgb(239,28,34)" rx="2" ry="2" />
<text  x="13.55" y="463.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.02%)</title><rect x="102.8" y="325" width="0.2" height="15.0" fill="rgb(245,123,38)" rx="2" ry="2" />
<text  x="105.80" y="335.5" ></text>
</g>
<g >
<title>drm_get_last_vbltimestamp (3 samples, 0.05%)</title><rect x="966.2" y="373" width="0.5" height="15.0" fill="rgb(215,144,35)" rx="2" ry="2" />
<text  x="969.15" y="383.5" ></text>
</g>
<g >
<title>process_timeout (2 samples, 0.03%)</title><rect x="996.0" y="437" width="0.4" height="15.0" fill="rgb(242,11,17)" rx="2" ry="2" />
<text  x="998.99" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="103.2" y="341" width="0.1" height="15.0" fill="rgb(236,123,13)" rx="2" ry="2" />
<text  x="106.16" y="351.5" ></text>
</g>
<g >
<title>load_new_mm_cr3 (2 samples, 0.03%)</title><rect x="997.5" y="549" width="0.3" height="15.0" fill="rgb(218,10,21)" rx="2" ry="2" />
<text  x="1000.45" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (69 samples, 1.07%)</title><rect x="926.1" y="661" width="12.6" height="15.0" fill="rgb(219,89,52)" rx="2" ry="2" />
<text  x="929.07" y="671.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="444.0" y="469" width="0.1" height="15.0" fill="rgb(211,122,32)" rx="2" ry="2" />
<text  x="446.97" y="479.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.62%)</title><rect x="461.9" y="517" width="7.3" height="15.0" fill="rgb(231,159,29)" rx="2" ry="2" />
<text  x="464.90" y="527.5" ></text>
</g>
<g >
<title>dequeue_task (2 samples, 0.03%)</title><rect x="873.0" y="565" width="0.4" height="15.0" fill="rgb(251,61,33)" rx="2" ry="2" />
<text  x="875.99" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (5 samples, 0.08%)</title><rect x="1161.8" y="565" width="0.9" height="15.0" fill="rgb(231,100,33)" rx="2" ry="2" />
<text  x="1164.81" y="575.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (2 samples, 0.03%)</title><rect x="103.7" y="245" width="0.4" height="15.0" fill="rgb(235,109,24)" rx="2" ry="2" />
<text  x="106.71" y="255.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (7 samples, 0.11%)</title><rect x="872.6" y="613" width="1.3" height="15.0" fill="rgb(233,228,21)" rx="2" ry="2" />
<text  x="875.62" y="623.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="1178.8" y="453" width="0.2" height="15.0" fill="rgb(254,179,27)" rx="2" ry="2" />
<text  x="1181.84" y="463.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.02%)</title><rect x="729.7" y="421" width="0.2" height="15.0" fill="rgb(221,75,27)" rx="2" ry="2" />
<text  x="732.68" y="431.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (3 samples, 0.05%)</title><rect x="949.1" y="469" width="0.6" height="15.0" fill="rgb(219,55,26)" rx="2" ry="2" />
<text  x="952.13" y="479.5" ></text>
</g>
<g >
<title>read_hpet.part.0 (1 samples, 0.02%)</title><rect x="995.8" y="389" width="0.2" height="15.0" fill="rgb(239,204,37)" rx="2" ry="2" />
<text  x="998.80" y="399.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="634.3" y="549" width="0.2" height="15.0" fill="rgb(210,108,8)" rx="2" ry="2" />
<text  x="637.32" y="559.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (2 samples, 0.03%)</title><rect x="982.3" y="421" width="0.3" height="15.0" fill="rgb(226,83,42)" rx="2" ry="2" />
<text  x="985.26" y="431.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (3 samples, 0.05%)</title><rect x="702.8" y="677" width="0.5" height="15.0" fill="rgb(235,119,28)" rx="2" ry="2" />
<text  x="705.77" y="687.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.05%)</title><rect x="952.8" y="629" width="0.5" height="15.0" fill="rgb(228,141,23)" rx="2" ry="2" />
<text  x="955.79" y="639.5" ></text>
</g>
<g >
<title>[anon] (141 samples, 2.19%)</title><rect x="34.2" y="693" width="25.8" height="15.0" fill="rgb(242,4,10)" rx="2" ry="2" />
<text  x="37.16" y="703.5" >[..</text>
</g>
<g >
<title>amdgpu_cs_ioctl (21 samples, 0.33%)</title><rect x="875.9" y="597" width="3.9" height="15.0" fill="rgb(232,133,40)" rx="2" ry="2" />
<text  x="878.92" y="607.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1189.3" y="517" width="0.2" height="15.0" fill="rgb(251,137,2)" rx="2" ry="2" />
<text  x="1192.27" y="527.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="102.1" y="485" width="0.1" height="15.0" fill="rgb(210,208,49)" rx="2" ry="2" />
<text  x="105.06" y="495.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.02%)</title><rect x="30.3" y="229" width="0.2" height="15.0" fill="rgb(240,193,2)" rx="2" ry="2" />
<text  x="33.32" y="239.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (1 samples, 0.02%)</title><rect x="966.2" y="245" width="0.1" height="15.0" fill="rgb(208,27,18)" rx="2" ry="2" />
<text  x="969.15" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.05%)</title><rect x="389.6" y="629" width="0.6" height="15.0" fill="rgb(211,147,48)" rx="2" ry="2" />
<text  x="392.61" y="639.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (1 samples, 0.02%)</title><rect x="33.6" y="613" width="0.2" height="15.0" fill="rgb(222,67,31)" rx="2" ry="2" />
<text  x="36.61" y="623.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.02%)</title><rect x="26.1" y="517" width="0.2" height="15.0" fill="rgb(210,9,1)" rx="2" ry="2" />
<text  x="29.11" y="527.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="102.8" y="197" width="0.2" height="15.0" fill="rgb(246,74,50)" rx="2" ry="2" />
<text  x="105.80" y="207.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="104.3" y="469" width="0.1" height="15.0" fill="rgb(241,176,21)" rx="2" ry="2" />
<text  x="107.26" y="479.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="947.7" y="581" width="0.2" height="15.0" fill="rgb(254,68,47)" rx="2" ry="2" />
<text  x="950.67" y="591.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (248 samples, 3.85%)</title><rect x="325.9" y="453" width="45.4" height="15.0" fill="rgb(228,36,29)" rx="2" ry="2" />
<text  x="328.91" y="463.5" >core..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1185.8" y="485" width="0.2" height="15.0" fill="rgb(206,117,33)" rx="2" ry="2" />
<text  x="1188.79" y="495.5" ></text>
</g>
<g >
<title>NaClStore32 (1 samples, 0.02%)</title><rect x="103.3" y="565" width="0.2" height="15.0" fill="rgb(233,104,40)" rx="2" ry="2" />
<text  x="106.35" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1 samples, 0.02%)</title><rect x="33.8" y="677" width="0.2" height="15.0" fill="rgb(233,228,44)" rx="2" ry="2" />
<text  x="36.79" y="687.5" ></text>
</g>
<g >
<title>__perf_event_enable (1 samples, 0.02%)</title><rect x="33.6" y="501" width="0.2" height="15.0" fill="rgb(241,39,48)" rx="2" ry="2" />
<text  x="36.61" y="511.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.08%)</title><rect x="515.7" y="437" width="0.9" height="15.0" fill="rgb(230,229,33)" rx="2" ry="2" />
<text  x="518.71" y="447.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.02%)</title><rect x="943.8" y="661" width="0.2" height="15.0" fill="rgb(234,2,15)" rx="2" ry="2" />
<text  x="946.82" y="671.5" ></text>
</g>
<g >
<title>ext4_da_write_end (11 samples, 0.17%)</title><rect x="29.8" y="325" width="2.0" height="15.0" fill="rgb(243,101,53)" rx="2" ry="2" />
<text  x="32.77" y="335.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="968.0" y="181" width="0.2" height="15.0" fill="rgb(253,157,10)" rx="2" ry="2" />
<text  x="970.98" y="191.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (1 samples, 0.02%)</title><rect x="948.4" y="533" width="0.2" height="15.0" fill="rgb(215,215,32)" rx="2" ry="2" />
<text  x="951.40" y="543.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (36 samples, 0.56%)</title><rect x="95.5" y="581" width="6.6" height="15.0" fill="rgb(228,123,37)" rx="2" ry="2" />
<text  x="98.48" y="591.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.02%)</title><rect x="732.2" y="629" width="0.2" height="15.0" fill="rgb(248,21,34)" rx="2" ry="2" />
<text  x="735.24" y="639.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.67%)</title><rect x="420.2" y="549" width="7.8" height="15.0" fill="rgb(241,213,31)" rx="2" ry="2" />
<text  x="423.17" y="559.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="927.9" y="597" width="0.4" height="15.0" fill="rgb(249,227,13)" rx="2" ry="2" />
<text  x="930.90" y="607.5" ></text>
</g>
<g >
<title>snd_pcm_update_hw_ptr (129 samples, 2.00%)</title><rect x="887.4" y="581" width="23.7" height="15.0" fill="rgb(210,58,49)" rx="2" ry="2" />
<text  x="890.45" y="591.5" >s..</text>
</g>
<g >
<title>drm_atomic_helper_prepare_planes.part.0 (1 samples, 0.02%)</title><rect x="880.5" y="517" width="0.2" height="15.0" fill="rgb(219,46,50)" rx="2" ry="2" />
<text  x="883.49" y="527.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (54 samples, 0.84%)</title><rect x="77.4" y="661" width="9.8" height="15.0" fill="rgb(239,73,52)" rx="2" ry="2" />
<text  x="80.36" y="671.5" ></text>
</g>
<g >
<title>ext4_inode_csum (1 samples, 0.02%)</title><rect x="31.2" y="197" width="0.2" height="15.0" fill="rgb(209,67,23)" rx="2" ry="2" />
<text  x="34.23" y="207.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="924.8" y="581" width="0.4" height="15.0" fill="rgb(211,208,52)" rx="2" ry="2" />
<text  x="927.79" y="591.5" ></text>
</g>
<g >
<title>ProcessInvalidJumpTargets (1 samples, 0.02%)</title><rect x="101.7" y="565" width="0.2" height="15.0" fill="rgb(213,137,52)" rx="2" ry="2" />
<text  x="104.70" y="575.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (5 samples, 0.08%)</title><rect x="487.3" y="517" width="1.0" height="15.0" fill="rgb(213,29,22)" rx="2" ry="2" />
<text  x="490.34" y="527.5" ></text>
</g>
<g >
<title>dm_plane_helper_prepare_fb (1 samples, 0.02%)</title><rect x="880.5" y="501" width="0.2" height="15.0" fill="rgb(208,159,26)" rx="2" ry="2" />
<text  x="883.49" y="511.5" ></text>
</g>
<g >
<title>amdgpu_bo_list_free_rcu (1 samples, 0.02%)</title><rect x="989.9" y="437" width="0.2" height="15.0" fill="rgb(247,45,7)" rx="2" ry="2" />
<text  x="992.95" y="447.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (4 samples, 0.06%)</title><rect x="924.4" y="613" width="0.8" height="15.0" fill="rgb(230,166,13)" rx="2" ry="2" />
<text  x="927.42" y="623.5" ></text>
</g>
<g >
<title>__call_rcu (1 samples, 0.02%)</title><rect x="877.6" y="469" width="0.1" height="15.0" fill="rgb(239,164,30)" rx="2" ry="2" />
<text  x="880.57" y="479.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (580 samples, 9.00%)</title><rect x="271.7" y="501" width="106.2" height="15.0" fill="rgb(253,68,28)" rx="2" ry="2" />
<text  x="274.73" y="511.5" >ringbuf::con..</text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.02%)</title><rect x="720.7" y="629" width="0.2" height="15.0" fill="rgb(244,43,11)" rx="2" ry="2" />
<text  x="723.71" y="639.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (37 samples, 0.57%)</title><rect x="562.8" y="453" width="6.7" height="15.0" fill="rgb(241,216,17)" rx="2" ry="2" />
<text  x="565.75" y="463.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="968.0" y="437" width="0.2" height="15.0" fill="rgb(248,206,28)" rx="2" ry="2" />
<text  x="970.98" y="447.5" ></text>
</g>
<g >
<title>try_to_wake_up (5 samples, 0.08%)</title><rect x="878.1" y="453" width="0.9" height="15.0" fill="rgb(247,222,23)" rx="2" ry="2" />
<text  x="881.12" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.02%)</title><rect x="1185.8" y="501" width="0.2" height="15.0" fill="rgb(234,17,18)" rx="2" ry="2" />
<text  x="1188.79" y="511.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.03%)</title><rect x="597.7" y="437" width="0.4" height="15.0" fill="rgb(221,41,16)" rx="2" ry="2" />
<text  x="600.71" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.03%)</title><rect x="564.6" y="405" width="0.3" height="15.0" fill="rgb(207,147,1)" rx="2" ry="2" />
<text  x="567.58" y="415.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (15 samples, 0.23%)</title><rect x="51.0" y="645" width="2.7" height="15.0" fill="rgb(211,113,32)" rx="2" ry="2" />
<text  x="54.00" y="655.5" ></text>
</g>
<g >
<title>drm_mode_object_get (1 samples, 0.02%)</title><rect x="881.2" y="501" width="0.2" height="15.0" fill="rgb(249,147,16)" rx="2" ry="2" />
<text  x="884.23" y="511.5" ></text>
</g>
<g >
<title>__wcsmbs_load_conv (1 samples, 0.02%)</title><rect x="10.4" y="613" width="0.1" height="15.0" fill="rgb(247,19,54)" rx="2" ry="2" />
<text  x="13.37" y="623.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="1178.8" y="485" width="0.2" height="15.0" fill="rgb(219,137,16)" rx="2" ry="2" />
<text  x="1181.84" y="495.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (7 samples, 0.11%)</title><rect x="963.2" y="213" width="1.3" height="15.0" fill="rgb(213,0,39)" rx="2" ry="2" />
<text  x="966.22" y="223.5" ></text>
</g>
<g >
<title>NaClGetDesc (1 samples, 0.02%)</title><rect x="390.5" y="645" width="0.2" height="15.0" fill="rgb(217,187,32)" rx="2" ry="2" />
<text  x="393.52" y="655.5" ></text>
</g>
<g >
<title>switch_fpu_return (2 samples, 0.03%)</title><rect x="945.7" y="629" width="0.3" height="15.0" fill="rgb(223,1,45)" rx="2" ry="2" />
<text  x="948.65" y="639.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,228 samples, 19.05%)</title><rect x="953.3" y="661" width="224.8" height="15.0" fill="rgb(245,96,2)" rx="2" ry="2" />
<text  x="956.34" y="671.5" >cpu_startup_entry</text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (2 samples, 0.03%)</title><rect x="95.1" y="581" width="0.4" height="15.0" fill="rgb(219,93,52)" rx="2" ry="2" />
<text  x="98.11" y="591.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.02%)</title><rect x="10.2" y="645" width="0.2" height="15.0" fill="rgb(228,64,14)" rx="2" ry="2" />
<text  x="13.18" y="655.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.03%)</title><rect x="58.3" y="677" width="0.4" height="15.0" fill="rgb(224,207,40)" rx="2" ry="2" />
<text  x="61.32" y="687.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="732.1" y="613" width="0.1" height="15.0" fill="rgb(221,214,22)" rx="2" ry="2" />
<text  x="735.06" y="623.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.02%)</title><rect x="1166.4" y="629" width="0.2" height="15.0" fill="rgb(243,33,49)" rx="2" ry="2" />
<text  x="1169.39" y="639.5" ></text>
</g>
<g >
<title>kthread_is_per_cpu (1 samples, 0.02%)</title><rect x="966.9" y="261" width="0.2" height="15.0" fill="rgb(223,219,5)" rx="2" ry="2" />
<text  x="969.89" y="271.5" ></text>
</g>
<g >
<title>truncate_inode_page (1 samples, 0.02%)</title><rect x="732.1" y="405" width="0.1" height="15.0" fill="rgb(224,16,12)" rx="2" ry="2" />
<text  x="735.06" y="415.5" ></text>
</g>
<g >
<title>NaClApplyPatchToMemory (1 samples, 0.02%)</title><rect x="103.3" y="581" width="0.2" height="15.0" fill="rgb(207,87,1)" rx="2" ry="2" />
<text  x="106.35" y="591.5" ></text>
</g>
<g >
<title>nf_hook_slow_list (1 samples, 0.02%)</title><rect x="969.6" y="341" width="0.2" height="15.0" fill="rgb(247,54,14)" rx="2" ry="2" />
<text  x="972.63" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="10.0" y="581" width="0.2" height="15.0" fill="rgb(214,0,43)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>tick_nohz_restart (7 samples, 0.11%)</title><rect x="1176.8" y="613" width="1.3" height="15.0" fill="rgb(252,53,1)" rx="2" ry="2" />
<text  x="1179.82" y="623.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (35 samples, 0.54%)</title><rect x="518.5" y="453" width="6.4" height="15.0" fill="rgb(216,147,23)" rx="2" ry="2" />
<text  x="521.46" y="463.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.02%)</title><rect x="1155.8" y="597" width="0.2" height="15.0" fill="rgb(250,197,25)" rx="2" ry="2" />
<text  x="1158.77" y="607.5" ></text>
</g>
<g >
<title>amdgpu_cs_parser_init (3 samples, 0.05%)</title><rect x="876.7" y="581" width="0.5" height="15.0" fill="rgb(243,159,42)" rx="2" ry="2" />
<text  x="879.65" y="591.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (3 samples, 0.05%)</title><rect x="626.6" y="581" width="0.6" height="15.0" fill="rgb(235,51,44)" rx="2" ry="2" />
<text  x="629.63" y="591.5" ></text>
</g>
<g >
<title>hrtimer_cancel (4 samples, 0.06%)</title><rect x="1176.8" y="597" width="0.8" height="15.0" fill="rgb(246,155,21)" rx="2" ry="2" />
<text  x="1179.82" y="607.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (2 samples, 0.03%)</title><rect x="993.1" y="405" width="0.3" height="15.0" fill="rgb(221,50,42)" rx="2" ry="2" />
<text  x="996.06" y="415.5" ></text>
</g>
<g >
<title>ion (2 samples, 0.03%)</title><rect x="33.2" y="597" width="0.4" height="15.0" fill="rgb(237,6,41)" rx="2" ry="2" />
<text  x="36.24" y="607.5" ></text>
</g>
<g >
<title>wake_up_process (2 samples, 0.03%)</title><rect x="989.6" y="405" width="0.3" height="15.0" fill="rgb(231,54,11)" rx="2" ry="2" />
<text  x="992.58" y="415.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="102.1" y="469" width="0.1" height="15.0" fill="rgb(244,81,32)" rx="2" ry="2" />
<text  x="105.06" y="479.5" ></text>
</g>
<g >
<title>format_decode (1 samples, 0.02%)</title><rect x="26.1" y="389" width="0.2" height="15.0" fill="rgb(227,45,48)" rx="2" ry="2" />
<text  x="29.11" y="399.5" ></text>
</g>
<g >
<title>sync_regs (12 samples, 0.19%)</title><rect x="700.2" y="677" width="2.2" height="15.0" fill="rgb(233,113,41)" rx="2" ry="2" />
<text  x="703.21" y="687.5" ></text>
</g>
<g >
<title>__update_blocked_fair (11 samples, 0.17%)</title><rect x="993.8" y="453" width="2.0" height="15.0" fill="rgb(225,186,10)" rx="2" ry="2" />
<text  x="996.79" y="463.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (2 samples, 0.03%)</title><rect x="33.2" y="421" width="0.4" height="15.0" fill="rgb(221,218,12)" rx="2" ry="2" />
<text  x="36.24" y="431.5" ></text>
</g>
<g >
<title>drm_crtc_accurate_vblank_count (19 samples, 0.29%)</title><rect x="963.2" y="405" width="3.5" height="15.0" fill="rgb(243,105,25)" rx="2" ry="2" />
<text  x="966.22" y="415.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="931.7" y="533" width="0.2" height="15.0" fill="rgb(245,4,46)" rx="2" ry="2" />
<text  x="934.74" y="543.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (11 samples, 0.17%)</title><rect x="599.9" y="501" width="2.0" height="15.0" fill="rgb(215,84,17)" rx="2" ry="2" />
<text  x="602.91" y="511.5" ></text>
</g>
<g >
<title>azx_get_delay_from_lpib (21 samples, 0.33%)</title><rect x="911.6" y="517" width="3.9" height="15.0" fill="rgb(207,33,8)" rx="2" ry="2" />
<text  x="914.61" y="527.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="732.2" y="645" width="0.2" height="15.0" fill="rgb(234,112,20)" rx="2" ry="2" />
<text  x="735.24" y="655.5" ></text>
</g>
<g >
<title>drm_sched_fence_release_finished (5 samples, 0.08%)</title><rect x="877.2" y="533" width="0.9" height="15.0" fill="rgb(248,23,11)" rx="2" ry="2" />
<text  x="880.20" y="543.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.02%)</title><rect x="1185.4" y="517" width="0.2" height="15.0" fill="rgb(230,174,9)" rx="2" ry="2" />
<text  x="1188.42" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (15 samples, 0.23%)</title><rect x="302.1" y="437" width="2.8" height="15.0" fill="rgb(252,131,5)" rx="2" ry="2" />
<text  x="305.12" y="447.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="720.5" y="229" width="0.2" height="15.0" fill="rgb(225,142,37)" rx="2" ry="2" />
<text  x="723.53" y="239.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.02%)</title><rect x="732.2" y="597" width="0.2" height="15.0" fill="rgb(227,70,36)" rx="2" ry="2" />
<text  x="735.24" y="607.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (2 samples, 0.03%)</title><rect x="103.7" y="517" width="0.4" height="15.0" fill="rgb(235,181,12)" rx="2" ry="2" />
<text  x="106.71" y="527.5" ></text>
</g>
<g >
<title>task_tick_idle (1 samples, 0.02%)</title><rect x="985.0" y="421" width="0.2" height="15.0" fill="rgb(220,129,53)" rx="2" ry="2" />
<text  x="988.01" y="431.5" ></text>
</g>
<g >
<title>exit_notify (1 samples, 0.02%)</title><rect x="732.2" y="549" width="0.2" height="15.0" fill="rgb(216,191,42)" rx="2" ry="2" />
<text  x="735.24" y="559.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (33 samples, 0.51%)</title><rect x="628.5" y="565" width="6.0" height="15.0" fill="rgb(233,88,29)" rx="2" ry="2" />
<text  x="631.46" y="575.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.02%)</title><rect x="732.1" y="421" width="0.1" height="15.0" fill="rgb(244,87,38)" rx="2" ry="2" />
<text  x="735.06" y="431.5" ></text>
</g>
<g >
<title>amdgpu_cs_parser_bos (3 samples, 0.05%)</title><rect x="875.9" y="581" width="0.6" height="15.0" fill="rgb(205,77,6)" rx="2" ry="2" />
<text  x="878.92" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (48 samples, 0.74%)</title><rect x="477.8" y="469" width="8.8" height="15.0" fill="rgb(240,225,42)" rx="2" ry="2" />
<text  x="480.83" y="479.5" ></text>
</g>
<g >
<title>do_shared_fault (2 samples, 0.03%)</title><rect x="95.1" y="421" width="0.4" height="15.0" fill="rgb(220,209,39)" rx="2" ry="2" />
<text  x="98.11" y="431.5" ></text>
</g>
<g >
<title>snd_pcm_poll (4 samples, 0.06%)</title><rect x="936.9" y="613" width="0.7" height="15.0" fill="rgb(254,166,19)" rx="2" ry="2" />
<text  x="939.87" y="623.5" ></text>
</g>
<g >
<title>ret_from_fork (36 samples, 0.56%)</title><rect x="946.8" y="693" width="6.5" height="15.0" fill="rgb(231,173,20)" rx="2" ry="2" />
<text  x="949.75" y="703.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="104.3" y="453" width="0.1" height="15.0" fill="rgb(252,16,5)" rx="2" ry="2" />
<text  x="107.26" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (5 samples, 0.08%)</title><rect x="516.8" y="453" width="0.9" height="15.0" fill="rgb(217,53,19)" rx="2" ry="2" />
<text  x="519.81" y="463.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="968.3" y="277" width="0.2" height="15.0" fill="rgb(241,23,25)" rx="2" ry="2" />
<text  x="971.35" y="287.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="924.1" y="613" width="0.3" height="15.0" fill="rgb(233,155,1)" rx="2" ry="2" />
<text  x="927.06" y="623.5" ></text>
</g>
<g >
<title>amdgpu_dm_commit_cursors (1 samples, 0.02%)</title><rect x="948.2" y="565" width="0.2" height="15.0" fill="rgb(244,178,40)" rx="2" ry="2" />
<text  x="951.22" y="575.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="62.0" y="677" width="0.2" height="15.0" fill="rgb(237,147,33)" rx="2" ry="2" />
<text  x="64.98" y="687.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.02%)</title><rect x="10.0" y="533" width="0.2" height="15.0" fill="rgb(230,33,31)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>update_curr_rt (1 samples, 0.02%)</title><rect x="936.0" y="533" width="0.1" height="15.0" fill="rgb(205,108,54)" rx="2" ry="2" />
<text  x="938.95" y="543.5" ></text>
</g>
<g >
<title>dma_fence_signal_locked (3 samples, 0.05%)</title><rect x="967.1" y="325" width="0.5" height="15.0" fill="rgb(254,76,7)" rx="2" ry="2" />
<text  x="970.07" y="335.5" ></text>
</g>
<g >
<title>dma_resv_wait_timeout_rcu (2 samples, 0.03%)</title><rect x="950.2" y="565" width="0.4" height="15.0" fill="rgb(247,168,45)" rx="2" ry="2" />
<text  x="953.23" y="575.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="698.9" y="645" width="0.2" height="15.0" fill="rgb(230,7,10)" rx="2" ry="2" />
<text  x="701.93" y="655.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (1 samples, 0.02%)</title><rect x="390.3" y="645" width="0.2" height="15.0" fill="rgb(241,96,11)" rx="2" ry="2" />
<text  x="393.34" y="655.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="444.0" y="485" width="0.1" height="15.0" fill="rgb(252,124,5)" rx="2" ry="2" />
<text  x="446.97" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (78 samples, 1.21%)</title><rect x="10.7" y="549" width="14.3" height="15.0" fill="rgb(208,79,26)" rx="2" ry="2" />
<text  x="13.73" y="559.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (5 samples, 0.08%)</title><rect x="102.6" y="661" width="0.9" height="15.0" fill="rgb(246,215,5)" rx="2" ry="2" />
<text  x="105.61" y="671.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="603.4" y="389" width="0.2" height="15.0" fill="rgb(226,134,13)" rx="2" ry="2" />
<text  x="606.39" y="399.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (564 samples, 8.75%)</title><rect x="271.7" y="485" width="103.3" height="15.0" fill="rgb(254,39,38)" rx="2" ry="2" />
<text  x="274.73" y="495.5" >ringbuf::con..</text>
</g>
<g >
<title>read (1 samples, 0.02%)</title><rect x="26.1" y="597" width="0.2" height="15.0" fill="rgb(214,27,13)" rx="2" ry="2" />
<text  x="29.11" y="607.5" ></text>
</g>
<g >
<title>dm_pflip_high_irq (25 samples, 0.39%)</title><rect x="962.3" y="421" width="4.6" height="15.0" fill="rgb(224,161,4)" rx="2" ry="2" />
<text  x="965.31" y="431.5" ></text>
</g>
<g >
<title>dequeue_task (9 samples, 0.14%)</title><rect x="933.2" y="549" width="1.7" height="15.0" fill="rgb(218,110,11)" rx="2" ry="2" />
<text  x="936.21" y="559.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="925.5" y="501" width="0.2" height="15.0" fill="rgb(214,49,54)" rx="2" ry="2" />
<text  x="928.52" y="511.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2 samples, 0.03%)</title><rect x="942.7" y="421" width="0.4" height="15.0" fill="rgb(216,33,39)" rx="2" ry="2" />
<text  x="945.73" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter (37 samples, 0.57%)</title><rect x="1178.7" y="549" width="6.7" height="15.0" fill="rgb(236,183,42)" rx="2" ry="2" />
<text  x="1181.65" y="559.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="103.7" y="165" width="0.2" height="15.0" fill="rgb(232,160,29)" rx="2" ry="2" />
<text  x="106.71" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="702.4" y="613" width="0.2" height="15.0" fill="rgb(247,87,27)" rx="2" ry="2" />
<text  x="705.41" y="623.5" ></text>
</g>
<g >
<title>update_audio_tstamp (1 samples, 0.02%)</title><rect x="910.9" y="565" width="0.2" height="15.0" fill="rgb(235,95,6)" rx="2" ry="2" />
<text  x="913.88" y="575.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="940.5" y="613" width="0.2" height="15.0" fill="rgb(228,14,38)" rx="2" ry="2" />
<text  x="943.53" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="25.2" y="613" width="0.9" height="15.0" fill="rgb(211,119,24)" rx="2" ry="2" />
<text  x="28.19" y="623.5" ></text>
</g>
<g >
<title>lockless_pages_from_mm (1 samples, 0.02%)</title><rect x="873.9" y="549" width="0.2" height="15.0" fill="rgb(227,70,22)" rx="2" ry="2" />
<text  x="876.91" y="559.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (3 samples, 0.05%)</title><rect x="962.3" y="389" width="0.6" height="15.0" fill="rgb(221,21,46)" rx="2" ry="2" />
<text  x="965.31" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.02%)</title><rect x="377.9" y="501" width="0.2" height="15.0" fill="rgb(214,15,53)" rx="2" ry="2" />
<text  x="380.89" y="511.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="95.1" y="469" width="0.4" height="15.0" fill="rgb(238,101,52)" rx="2" ry="2" />
<text  x="98.11" y="479.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.02%)</title><rect x="870.6" y="613" width="0.2" height="15.0" fill="rgb(224,10,51)" rx="2" ry="2" />
<text  x="873.61" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="103.0" y="501" width="0.2" height="15.0" fill="rgb(227,94,37)" rx="2" ry="2" />
<text  x="105.98" y="511.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="34.0" y="661" width="0.2" height="15.0" fill="rgb(217,88,39)" rx="2" ry="2" />
<text  x="36.98" y="671.5" ></text>
</g>
<g >
<title>sock_sendmsg (11 samples, 0.17%)</title><rect x="941.3" y="565" width="2.0" height="15.0" fill="rgb(238,1,11)" rx="2" ry="2" />
<text  x="944.26" y="575.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="104.3" y="373" width="0.1" height="15.0" fill="rgb(231,36,45)" rx="2" ry="2" />
<text  x="107.26" y="383.5" ></text>
</g>
<g >
<title>default_wake_function (5 samples, 0.08%)</title><rect x="878.1" y="469" width="0.9" height="15.0" fill="rgb(238,131,23)" rx="2" ry="2" />
<text  x="881.12" y="479.5" ></text>
</g>
<g >
<title>exit_mm (26 samples, 0.40%)</title><rect x="727.3" y="613" width="4.8" height="15.0" fill="rgb(252,220,7)" rx="2" ry="2" />
<text  x="730.30" y="623.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="720.5" y="197" width="0.2" height="15.0" fill="rgb(242,170,15)" rx="2" ry="2" />
<text  x="723.53" y="207.5" ></text>
</g>
<g >
<title>snd_ctl_elem_read (1 samples, 0.02%)</title><rect x="882.1" y="629" width="0.2" height="15.0" fill="rgb(243,95,45)" rx="2" ry="2" />
<text  x="885.14" y="639.5" ></text>
</g>
<g >
<title>do_futex (16 samples, 0.25%)</title><rect x="872.4" y="645" width="3.0" height="15.0" fill="rgb(216,102,23)" rx="2" ry="2" />
<text  x="875.44" y="655.5" ></text>
</g>
<g >
<title>resched_curr (1 samples, 0.02%)</title><rect x="979.5" y="389" width="0.2" height="15.0" fill="rgb(209,194,4)" rx="2" ry="2" />
<text  x="982.51" y="399.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.02%)</title><rect x="26.1" y="645" width="0.2" height="15.0" fill="rgb(244,191,33)" rx="2" ry="2" />
<text  x="29.11" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (27 samples, 0.42%)</title><rect x="727.3" y="661" width="4.9" height="15.0" fill="rgb(218,117,16)" rx="2" ry="2" />
<text  x="730.30" y="671.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="939.8" y="533" width="0.2" height="15.0" fill="rgb(225,209,19)" rx="2" ry="2" />
<text  x="942.80" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="104.3" y="581" width="0.1" height="15.0" fill="rgb(223,196,25)" rx="2" ry="2" />
<text  x="107.26" y="591.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (48 samples, 0.74%)</title><rect x="477.8" y="453" width="8.8" height="15.0" fill="rgb(249,85,35)" rx="2" ry="2" />
<text  x="480.83" y="463.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.02%)</title><rect x="102.1" y="421" width="0.1" height="15.0" fill="rgb(229,22,31)" rx="2" ry="2" />
<text  x="105.06" y="431.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="878.7" y="405" width="0.1" height="15.0" fill="rgb(207,154,14)" rx="2" ry="2" />
<text  x="881.66" y="415.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.02%)</title><rect x="27.4" y="101" width="0.2" height="15.0" fill="rgb(245,33,22)" rx="2" ry="2" />
<text  x="30.39" y="111.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="984.5" y="357" width="0.1" height="15.0" fill="rgb(225,164,24)" rx="2" ry="2" />
<text  x="987.46" y="367.5" ></text>
</g>
<g >
<title>__gconv_find_transform (1 samples, 0.02%)</title><rect x="10.4" y="597" width="0.1" height="15.0" fill="rgb(225,7,14)" rx="2" ry="2" />
<text  x="13.37" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="707.0" y="677" width="0.2" height="15.0" fill="rgb(250,19,33)" rx="2" ry="2" />
<text  x="709.98" y="687.5" ></text>
</g>
<g >
<title>lind_close (1 samples, 0.02%)</title><rect x="103.2" y="533" width="0.1" height="15.0" fill="rgb(252,162,32)" rx="2" ry="2" />
<text  x="106.16" y="543.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (5 samples, 0.08%)</title><rect x="28.1" y="261" width="0.9" height="15.0" fill="rgb(231,167,34)" rx="2" ry="2" />
<text  x="31.12" y="271.5" ></text>
</g>
<g >
<title>_perf_event_enable (1 samples, 0.02%)</title><rect x="33.6" y="597" width="0.2" height="15.0" fill="rgb(251,203,30)" rx="2" ry="2" />
<text  x="36.61" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::canonicalize (1 samples, 0.02%)</title><rect x="103.2" y="405" width="0.1" height="15.0" fill="rgb(249,160,11)" rx="2" ry="2" />
<text  x="106.16" y="415.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="574.3" y="373" width="0.2" height="15.0" fill="rgb(223,203,27)" rx="2" ry="2" />
<text  x="577.28" y="383.5" ></text>
</g>
<g >
<title>__get_vblank_counter (16 samples, 0.25%)</title><rect x="963.2" y="373" width="3.0" height="15.0" fill="rgb(242,112,8)" rx="2" ry="2" />
<text  x="966.22" y="383.5" ></text>
</g>
<g >
<title>handle_pte_fault (89 samples, 1.38%)</title><rect x="681.7" y="597" width="16.3" height="15.0" fill="rgb(228,85,52)" rx="2" ry="2" />
<text  x="684.72" y="607.5" ></text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.03%)</title><rect x="574.8" y="469" width="0.4" height="15.0" fill="rgb(213,187,32)" rx="2" ry="2" />
<text  x="577.83" y="479.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="947.9" y="453" width="0.1" height="15.0" fill="rgb(218,11,17)" rx="2" ry="2" />
<text  x="950.85" y="463.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (3 samples, 0.05%)</title><rect x="941.8" y="485" width="0.6" height="15.0" fill="rgb(240,173,8)" rx="2" ry="2" />
<text  x="944.81" y="495.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="960.3" y="245" width="0.2" height="15.0" fill="rgb(252,34,37)" rx="2" ry="2" />
<text  x="963.30" y="255.5" ></text>
</g>
<g >
<title>try_charge (5 samples, 0.08%)</title><rect x="696.0" y="549" width="0.9" height="15.0" fill="rgb(229,39,10)" rx="2" ry="2" />
<text  x="699.00" y="559.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="25.0" y="549" width="0.2" height="15.0" fill="rgb(220,59,17)" rx="2" ry="2" />
<text  x="28.01" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (15 samples, 0.23%)</title><rect x="420.2" y="485" width="2.7" height="15.0" fill="rgb(232,64,53)" rx="2" ry="2" />
<text  x="423.17" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="601.7" y="437" width="0.2" height="15.0" fill="rgb(218,73,25)" rx="2" ry="2" />
<text  x="604.74" y="447.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.02%)</title><rect x="1153.4" y="581" width="0.2" height="15.0" fill="rgb(239,84,47)" rx="2" ry="2" />
<text  x="1156.39" y="591.5" ></text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.02%)</title><rect x="103.2" y="549" width="0.1" height="15.0" fill="rgb(247,134,18)" rx="2" ry="2" />
<text  x="106.16" y="559.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.02%)</title><rect x="1155.6" y="613" width="0.2" height="15.0" fill="rgb(253,101,12)" rx="2" ry="2" />
<text  x="1158.59" y="623.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="12.2" y="501" width="0.4" height="15.0" fill="rgb(227,40,23)" rx="2" ry="2" />
<text  x="15.20" y="511.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="870.6" y="549" width="0.2" height="15.0" fill="rgb(212,124,17)" rx="2" ry="2" />
<text  x="873.61" y="559.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="102.1" y="517" width="0.1" height="15.0" fill="rgb(216,9,9)" rx="2" ry="2" />
<text  x="105.06" y="527.5" ></text>
</g>
<g >
<title>amdgpu_display_get_crtc_scanoutpos (2 samples, 0.03%)</title><rect x="947.9" y="565" width="0.3" height="15.0" fill="rgb(254,99,19)" rx="2" ry="2" />
<text  x="950.85" y="575.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="510.0" y="485" width="0.2" height="15.0" fill="rgb(249,101,38)" rx="2" ry="2" />
<text  x="513.04" y="495.5" ></text>
</g>
<g >
<title>ep_poll (9 samples, 0.14%)</title><rect x="870.8" y="629" width="1.6" height="15.0" fill="rgb(229,17,11)" rx="2" ry="2" />
<text  x="873.79" y="639.5" ></text>
</g>
<g >
<title>__wake_up_common (5 samples, 0.08%)</title><rect x="878.1" y="501" width="0.9" height="15.0" fill="rgb(221,19,33)" rx="2" ry="2" />
<text  x="881.12" y="511.5" ></text>
</g>
<g >
<title>drm_handle_vblank (14 samples, 0.22%)</title><rect x="959.7" y="389" width="2.6" height="15.0" fill="rgb(244,71,26)" rx="2" ry="2" />
<text  x="962.75" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (2 samples, 0.03%)</title><rect x="59.6" y="629" width="0.4" height="15.0" fill="rgb(251,50,26)" rx="2" ry="2" />
<text  x="62.60" y="639.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="966.9" y="277" width="0.2" height="15.0" fill="rgb(207,71,45)" rx="2" ry="2" />
<text  x="969.89" y="287.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_vblank_counter (2 samples, 0.03%)</title><rect x="962.9" y="357" width="0.3" height="15.0" fill="rgb(232,223,2)" rx="2" ry="2" />
<text  x="965.86" y="367.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (13 samples, 0.20%)</title><rect x="570.4" y="469" width="2.4" height="15.0" fill="rgb(246,201,1)" rx="2" ry="2" />
<text  x="573.44" y="479.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (39 samples, 0.60%)</title><rect x="682.3" y="549" width="7.1" height="15.0" fill="rgb(213,13,20)" rx="2" ry="2" />
<text  x="685.27" y="559.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="103.9" y="165" width="0.2" height="15.0" fill="rgb(228,39,7)" rx="2" ry="2" />
<text  x="106.89" y="175.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="968.0" y="229" width="0.2" height="15.0" fill="rgb(224,209,44)" rx="2" ry="2" />
<text  x="970.98" y="239.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (50 samples, 0.78%)</title><rect x="575.6" y="485" width="9.1" height="15.0" fill="rgb(215,165,52)" rx="2" ry="2" />
<text  x="578.57" y="495.5" ></text>
</g>
<g >
<title>dm_pflip_high_irq (1 samples, 0.02%)</title><rect x="968.0" y="341" width="0.2" height="15.0" fill="rgb(208,15,38)" rx="2" ry="2" />
<text  x="970.98" y="351.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.02%)</title><rect x="702.4" y="517" width="0.2" height="15.0" fill="rgb(210,45,24)" rx="2" ry="2" />
<text  x="705.41" y="527.5" ></text>
</g>
<g >
<title>NaClDescUnref (75 samples, 1.16%)</title><rect x="610.2" y="629" width="13.7" height="15.0" fill="rgb(237,62,23)" rx="2" ry="2" />
<text  x="613.16" y="639.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (4 samples, 0.06%)</title><rect x="932.1" y="501" width="0.7" height="15.0" fill="rgb(234,84,40)" rx="2" ry="2" />
<text  x="935.11" y="511.5" ></text>
</g>
<g >
<title>drm_update_vblank_count (19 samples, 0.29%)</title><rect x="963.2" y="389" width="3.5" height="15.0" fill="rgb(230,226,6)" rx="2" ry="2" />
<text  x="966.22" y="399.5" ></text>
</g>
<g >
<title>bio_endio (1 samples, 0.02%)</title><rect x="968.3" y="389" width="0.2" height="15.0" fill="rgb(249,138,15)" rx="2" ry="2" />
<text  x="971.35" y="399.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.02%)</title><rect x="968.3" y="293" width="0.2" height="15.0" fill="rgb(245,98,19)" rx="2" ry="2" />
<text  x="971.35" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="29.2" y="245" width="0.4" height="15.0" fill="rgb(212,160,7)" rx="2" ry="2" />
<text  x="32.22" y="255.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.16%)</title><rect x="597.5" y="485" width="1.9" height="15.0" fill="rgb(220,5,50)" rx="2" ry="2" />
<text  x="600.53" y="495.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="883.6" y="597" width="0.2" height="15.0" fill="rgb(221,38,8)" rx="2" ry="2" />
<text  x="886.61" y="607.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (28 samples, 0.43%)</title><rect x="422.9" y="485" width="5.1" height="15.0" fill="rgb(227,46,7)" rx="2" ry="2" />
<text  x="425.92" y="495.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.03%)</title><rect x="873.0" y="549" width="0.4" height="15.0" fill="rgb(242,218,53)" rx="2" ry="2" />
<text  x="875.99" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (36 samples, 0.56%)</title><rect x="584.7" y="469" width="6.6" height="15.0" fill="rgb(245,173,4)" rx="2" ry="2" />
<text  x="587.72" y="479.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.03%)</title><rect x="33.2" y="501" width="0.4" height="15.0" fill="rgb(253,114,50)" rx="2" ry="2" />
<text  x="36.24" y="511.5" ></text>
</g>
<g >
<title>drm_sched_main (1 samples, 0.02%)</title><rect x="946.8" y="661" width="0.1" height="15.0" fill="rgb(230,83,32)" rx="2" ry="2" />
<text  x="949.75" y="671.5" ></text>
</g>
<g >
<title>unmap_single_vma (26 samples, 0.40%)</title><rect x="727.3" y="549" width="4.8" height="15.0" fill="rgb(229,108,32)" rx="2" ry="2" />
<text  x="730.30" y="559.5" ></text>
</g>
<g >
<title>timekeeping_advance (2 samples, 0.03%)</title><rect x="980.4" y="405" width="0.4" height="15.0" fill="rgb(247,10,8)" rx="2" ry="2" />
<text  x="983.43" y="415.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (39 samples, 0.60%)</title><rect x="46.6" y="677" width="7.1" height="15.0" fill="rgb(244,196,4)" rx="2" ry="2" />
<text  x="49.61" y="687.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="489.0" y="421" width="0.2" height="15.0" fill="rgb(207,121,1)" rx="2" ry="2" />
<text  x="491.99" y="431.5" ></text>
</g>
<g >
<title>wake_up_state (3 samples, 0.05%)</title><rect x="967.1" y="293" width="0.5" height="15.0" fill="rgb(237,97,9)" rx="2" ry="2" />
<text  x="970.07" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="527.4" y="421" width="0.2" height="15.0" fill="rgb(230,16,41)" rx="2" ry="2" />
<text  x="530.43" y="431.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="966.9" y="341" width="0.2" height="15.0" fill="rgb(207,125,8)" rx="2" ry="2" />
<text  x="969.89" y="351.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (1 samples, 0.02%)</title><rect x="732.2" y="533" width="0.2" height="15.0" fill="rgb(221,74,25)" rx="2" ry="2" />
<text  x="735.24" y="543.5" ></text>
</g>
<g >
<title>unmap_page_range (26 samples, 0.40%)</title><rect x="727.3" y="533" width="4.8" height="15.0" fill="rgb(234,130,26)" rx="2" ry="2" />
<text  x="730.30" y="543.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="925.5" y="533" width="0.2" height="15.0" fill="rgb(221,93,13)" rx="2" ry="2" />
<text  x="928.52" y="543.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.02%)</title><rect x="103.7" y="133" width="0.2" height="15.0" fill="rgb(220,179,47)" rx="2" ry="2" />
<text  x="106.71" y="143.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (4 samples, 0.06%)</title><rect x="688.7" y="485" width="0.7" height="15.0" fill="rgb(228,12,13)" rx="2" ry="2" />
<text  x="691.68" y="495.5" ></text>
</g>
<g >
<title>dma_fence_default_wait (2 samples, 0.03%)</title><rect x="950.2" y="533" width="0.4" height="15.0" fill="rgb(230,169,30)" rx="2" ry="2" />
<text  x="953.23" y="543.5" ></text>
</g>
<g >
<title>generic_reg_get4 (3 samples, 0.05%)</title><rect x="949.1" y="517" width="0.6" height="15.0" fill="rgb(208,101,21)" rx="2" ry="2" />
<text  x="952.13" y="527.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="984.5" y="373" width="0.1" height="15.0" fill="rgb(227,205,32)" rx="2" ry="2" />
<text  x="987.46" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (50 samples, 0.78%)</title><rect x="477.5" y="533" width="9.1" height="15.0" fill="rgb(248,139,19)" rx="2" ry="2" />
<text  x="480.46" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="26.1" y="565" width="0.2" height="15.0" fill="rgb(223,191,34)" rx="2" ry="2" />
<text  x="29.11" y="575.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.05%)</title><rect x="599.4" y="501" width="0.5" height="15.0" fill="rgb(245,186,9)" rx="2" ry="2" />
<text  x="602.36" y="511.5" ></text>
</g>
<g >
<title>queued_spin_unlock (1 samples, 0.02%)</title><rect x="697.6" y="565" width="0.2" height="15.0" fill="rgb(233,202,1)" rx="2" ry="2" />
<text  x="700.65" y="575.5" ></text>
</g>
<g >
<title>psi_task_switch (1 samples, 0.02%)</title><rect x="1189.1" y="533" width="0.2" height="15.0" fill="rgb(244,134,45)" rx="2" ry="2" />
<text  x="1192.08" y="543.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (1 samples, 0.02%)</title><rect x="102.6" y="629" width="0.2" height="15.0" fill="rgb(247,83,6)" rx="2" ry="2" />
<text  x="105.61" y="639.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (5 samples, 0.08%)</title><rect x="27.2" y="309" width="0.9" height="15.0" fill="rgb(210,102,30)" rx="2" ry="2" />
<text  x="30.20" y="319.5" ></text>
</g>
<g >
<title>add_wait_queue (2 samples, 0.03%)</title><rect x="937.1" y="581" width="0.3" height="15.0" fill="rgb(236,59,33)" rx="2" ry="2" />
<text  x="940.05" y="591.5" ></text>
</g>
<g >
<title>swapper (2,498 samples, 38.75%)</title><rect x="732.8" y="709" width="457.2" height="15.0" fill="rgb(210,189,50)" rx="2" ry="2" />
<text  x="735.79" y="719.5" >swapper</text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (23 samples, 0.36%)</title><rect x="469.2" y="453" width="4.2" height="15.0" fill="rgb(213,65,0)" rx="2" ry="2" />
<text  x="472.22" y="463.5" ></text>
</g>
<g >
<title>pick_next_entity (1 samples, 0.02%)</title><rect x="1188.9" y="517" width="0.2" height="15.0" fill="rgb(225,81,21)" rx="2" ry="2" />
<text  x="1191.90" y="527.5" ></text>
</g>
<g >
<title>vfs_write (36 samples, 0.56%)</title><rect x="26.7" y="469" width="6.5" height="15.0" fill="rgb(216,34,36)" rx="2" ry="2" />
<text  x="29.66" y="479.5" ></text>
</g>
<g >
<title>poll_idle (14 samples, 0.22%)</title><rect x="1150.8" y="581" width="2.6" height="15.0" fill="rgb(226,9,45)" rx="2" ry="2" />
<text  x="1153.83" y="591.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="932.7" y="469" width="0.1" height="15.0" fill="rgb(251,213,44)" rx="2" ry="2" />
<text  x="935.66" y="479.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="516.6" y="437" width="0.2" height="15.0" fill="rgb(223,36,33)" rx="2" ry="2" />
<text  x="519.63" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (3 samples, 0.05%)</title><rect x="103.5" y="581" width="0.6" height="15.0" fill="rgb(250,158,43)" rx="2" ry="2" />
<text  x="106.53" y="591.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (2 samples, 0.03%)</title><rect x="981.0" y="437" width="0.3" height="15.0" fill="rgb(212,2,38)" rx="2" ry="2" />
<text  x="983.98" y="447.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.02%)</title><rect x="989.8" y="373" width="0.1" height="15.0" fill="rgb(216,57,6)" rx="2" ry="2" />
<text  x="992.76" y="383.5" ></text>
</g>
<g >
<title>dm_read_reg_func (2 samples, 0.03%)</title><rect x="962.3" y="309" width="0.4" height="15.0" fill="rgb(210,163,3)" rx="2" ry="2" />
<text  x="965.31" y="319.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="874.8" y="533" width="0.2" height="15.0" fill="rgb(245,155,53)" rx="2" ry="2" />
<text  x="877.82" y="543.5" ></text>
</g>
<g >
<title>cpuidle_select (3 samples, 0.05%)</title><rect x="1185.4" y="549" width="0.6" height="15.0" fill="rgb(249,227,34)" rx="2" ry="2" />
<text  x="1188.42" y="559.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="876.8" y="549" width="0.2" height="15.0" fill="rgb(221,91,36)" rx="2" ry="2" />
<text  x="879.83" y="559.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (4 samples, 0.06%)</title><rect x="992.7" y="421" width="0.7" height="15.0" fill="rgb(242,93,41)" rx="2" ry="2" />
<text  x="995.69" y="431.5" ></text>
</g>
<g >
<title>vm_normal_page (2 samples, 0.03%)</title><rect x="731.7" y="485" width="0.4" height="15.0" fill="rgb(232,229,18)" rx="2" ry="2" />
<text  x="734.69" y="495.5" ></text>
</g>
<g >
<title>amdgpu_cs_parser_fini (1 samples, 0.02%)</title><rect x="876.5" y="581" width="0.2" height="15.0" fill="rgb(241,68,40)" rx="2" ry="2" />
<text  x="879.47" y="591.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="527.4" y="405" width="0.2" height="15.0" fill="rgb(253,143,6)" rx="2" ry="2" />
<text  x="530.43" y="415.5" ></text>
</g>
<g >
<title>dm_vblank_get_counter (3 samples, 0.05%)</title><rect x="948.6" y="549" width="0.5" height="15.0" fill="rgb(222,82,38)" rx="2" ry="2" />
<text  x="951.58" y="559.5" ></text>
</g>
<g >
<title>__msecs_to_jiffies (1 samples, 0.02%)</title><rect x="990.3" y="469" width="0.2" height="15.0" fill="rgb(234,38,40)" rx="2" ry="2" />
<text  x="993.31" y="479.5" ></text>
</g>
<g >
<title>drm_sched_entity_push_job (5 samples, 0.08%)</title><rect x="878.1" y="565" width="0.9" height="15.0" fill="rgb(229,73,30)" rx="2" ry="2" />
<text  x="881.12" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="573.9" y="453" width="0.2" height="15.0" fill="rgb(214,53,40)" rx="2" ry="2" />
<text  x="576.92" y="463.5" ></text>
</g>
<g >
<title>ttm_bo_move_to_lru_tail (1 samples, 0.02%)</title><rect x="879.0" y="565" width="0.2" height="15.0" fill="rgb(221,32,35)" rx="2" ry="2" />
<text  x="882.03" y="575.5" ></text>
</g>
<g >
<title>hrtimer_init_sleeper (1 samples, 0.02%)</title><rect x="930.1" y="581" width="0.2" height="15.0" fill="rgb(205,8,43)" rx="2" ry="2" />
<text  x="933.10" y="591.5" ></text>
</g>
<g >
<title>amdgpu_fence_free (1 samples, 0.02%)</title><rect x="990.1" y="437" width="0.2" height="15.0" fill="rgb(215,183,44)" rx="2" ry="2" />
<text  x="993.13" y="447.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (15 samples, 0.23%)</title><rect x="51.0" y="661" width="2.7" height="15.0" fill="rgb(230,123,13)" rx="2" ry="2" />
<text  x="54.00" y="671.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="390.2" y="629" width="0.1" height="15.0" fill="rgb(227,19,42)" rx="2" ry="2" />
<text  x="393.16" y="639.5" ></text>
</g>
<g >
<title>__handle_mm_fault (94 samples, 1.46%)</title><rect x="680.8" y="613" width="17.2" height="15.0" fill="rgb(215,224,34)" rx="2" ry="2" />
<text  x="683.81" y="623.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="599.7" y="485" width="0.2" height="15.0" fill="rgb(213,103,27)" rx="2" ry="2" />
<text  x="602.73" y="495.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="883.4" y="581" width="0.2" height="15.0" fill="rgb(234,228,44)" rx="2" ry="2" />
<text  x="886.42" y="591.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (2 samples, 0.03%)</title><rect x="1188.2" y="485" width="0.3" height="15.0" fill="rgb(218,60,48)" rx="2" ry="2" />
<text  x="1191.17" y="495.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1153.2" y="517" width="0.2" height="15.0" fill="rgb(248,217,41)" rx="2" ry="2" />
<text  x="1156.21" y="527.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="943.1" y="421" width="0.2" height="15.0" fill="rgb(250,182,3)" rx="2" ry="2" />
<text  x="946.09" y="431.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (40 samples, 0.62%)</title><rect x="26.3" y="629" width="7.3" height="15.0" fill="rgb(235,51,39)" rx="2" ry="2" />
<text  x="29.29" y="639.5" ></text>
</g>
<g >
<title>NaClSysMunmap (1 samples, 0.02%)</title><rect x="104.3" y="645" width="0.1" height="15.0" fill="rgb(210,65,17)" rx="2" ry="2" />
<text  x="107.26" y="655.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.02%)</title><rect x="102.8" y="437" width="0.2" height="15.0" fill="rgb(231,184,54)" rx="2" ry="2" />
<text  x="105.80" y="447.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="873.2" y="517" width="0.2" height="15.0" fill="rgb(249,84,43)" rx="2" ry="2" />
<text  x="876.17" y="527.5" ></text>
</g>
<g >
<title>sock_wfree (1 samples, 0.02%)</title><rect x="940.0" y="501" width="0.2" height="15.0" fill="rgb(254,185,42)" rx="2" ry="2" />
<text  x="942.98" y="511.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11 samples, 0.17%)</title><rect x="968.0" y="549" width="2.0" height="15.0" fill="rgb(242,96,48)" rx="2" ry="2" />
<text  x="970.98" y="559.5" ></text>
</g>
<g >
<title>__GI__IO_file_open (1 samples, 0.02%)</title><rect x="10.0" y="629" width="0.2" height="15.0" fill="rgb(218,39,24)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="104.3" y="517" width="0.1" height="15.0" fill="rgb(208,17,1)" rx="2" ry="2" />
<text  x="107.26" y="527.5" ></text>
</g>
<g >
<title>vmacache_find (2 samples, 0.03%)</title><rect x="680.3" y="613" width="0.3" height="15.0" fill="rgb(251,26,11)" rx="2" ry="2" />
<text  x="683.26" y="623.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.05%)</title><rect x="952.8" y="645" width="0.5" height="15.0" fill="rgb(226,155,11)" rx="2" ry="2" />
<text  x="955.79" y="655.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (5 samples, 0.08%)</title><rect x="1169.1" y="565" width="0.9" height="15.0" fill="rgb(220,152,25)" rx="2" ry="2" />
<text  x="1172.13" y="575.5" ></text>
</g>
<g >
<title>kvmalloc_node (2 samples, 0.03%)</title><rect x="951.0" y="565" width="0.3" height="15.0" fill="rgb(236,57,54)" rx="2" ry="2" />
<text  x="953.96" y="575.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="95.3" y="309" width="0.2" height="15.0" fill="rgb(210,51,46)" rx="2" ry="2" />
<text  x="98.29" y="319.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (1 samples, 0.02%)</title><rect x="103.7" y="229" width="0.2" height="15.0" fill="rgb(219,5,43)" rx="2" ry="2" />
<text  x="106.71" y="239.5" ></text>
</g>
<g >
<title>NaClLog (8 samples, 0.12%)</title><rect x="640.9" y="629" width="1.5" height="15.0" fill="rgb(245,111,44)" rx="2" ry="2" />
<text  x="643.91" y="639.5" ></text>
</g>
<g >
<title>pick_next_task_dl (1 samples, 0.02%)</title><rect x="946.8" y="629" width="0.1" height="15.0" fill="rgb(205,227,19)" rx="2" ry="2" />
<text  x="949.75" y="639.5" ></text>
</g>
<g >
<title>__bitmap_and (1 samples, 0.02%)</title><rect x="991.4" y="453" width="0.2" height="15.0" fill="rgb(225,132,44)" rx="2" ry="2" />
<text  x="994.41" y="463.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (4 samples, 0.06%)</title><rect x="867.7" y="693" width="0.7" height="15.0" fill="rgb(233,213,23)" rx="2" ry="2" />
<text  x="870.68" y="703.5" ></text>
</g>
<g >
<title>queue_work_on (1 samples, 0.02%)</title><rect x="968.3" y="325" width="0.2" height="15.0" fill="rgb(237,79,3)" rx="2" ry="2" />
<text  x="971.35" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="1162.2" y="549" width="0.5" height="15.0" fill="rgb(217,203,39)" rx="2" ry="2" />
<text  x="1165.18" y="559.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="103.5" y="165" width="0.2" height="15.0" fill="rgb(220,173,27)" rx="2" ry="2" />
<text  x="106.53" y="175.5" ></text>
</g>
<g >
<title>poll_select_finish (2 samples, 0.03%)</title><rect x="938.1" y="645" width="0.4" height="15.0" fill="rgb(254,152,18)" rx="2" ry="2" />
<text  x="941.15" y="655.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (75 samples, 1.16%)</title><rect x="972.2" y="501" width="13.7" height="15.0" fill="rgb(205,48,43)" rx="2" ry="2" />
<text  x="975.19" y="511.5" ></text>
</g>
<g >
<title>native_write_msr (63 samples, 0.98%)</title><rect x="13.5" y="325" width="11.5" height="15.0" fill="rgb(251,146,44)" rx="2" ry="2" />
<text  x="16.48" y="335.5" ></text>
</g>
<g >
<title>destroy_inode (1 samples, 0.02%)</title><rect x="103.5" y="341" width="0.2" height="15.0" fill="rgb(219,17,26)" rx="2" ry="2" />
<text  x="106.53" y="351.5" ></text>
</g>
<g >
<title>vfs_iter_read (1 samples, 0.02%)</title><rect x="102.8" y="261" width="0.2" height="15.0" fill="rgb(220,131,36)" rx="2" ry="2" />
<text  x="105.80" y="271.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.02%)</title><rect x="874.3" y="613" width="0.2" height="15.0" fill="rgb(222,88,49)" rx="2" ry="2" />
<text  x="877.27" y="623.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (5 samples, 0.08%)</title><rect x="37.8" y="677" width="0.9" height="15.0" fill="rgb(231,133,9)" rx="2" ry="2" />
<text  x="40.82" y="687.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (2 samples, 0.03%)</title><rect x="947.9" y="533" width="0.3" height="15.0" fill="rgb(207,121,32)" rx="2" ry="2" />
<text  x="950.85" y="543.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1185.2" y="501" width="0.2" height="15.0" fill="rgb(235,101,18)" rx="2" ry="2" />
<text  x="1188.24" y="511.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (1 samples, 0.02%)</title><rect x="969.4" y="325" width="0.2" height="15.0" fill="rgb(229,182,22)" rx="2" ry="2" />
<text  x="972.45" y="335.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (2 samples, 0.03%)</title><rect x="1177.2" y="581" width="0.4" height="15.0" fill="rgb(249,133,35)" rx="2" ry="2" />
<text  x="1180.19" y="591.5" ></text>
</g>
<g >
<title>psi_task_change (6 samples, 0.09%)</title><rect x="933.6" y="533" width="1.1" height="15.0" fill="rgb(205,176,46)" rx="2" ry="2" />
<text  x="936.57" y="543.5" ></text>
</g>
<g >
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="31.2" y="181" width="0.2" height="15.0" fill="rgb(231,6,3)" rx="2" ry="2" />
<text  x="34.23" y="191.5" ></text>
</g>
<g >
<title>ctx_resched (1 samples, 0.02%)</title><rect x="33.6" y="485" width="0.2" height="15.0" fill="rgb(215,135,24)" rx="2" ry="2" />
<text  x="36.61" y="495.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (4 samples, 0.06%)</title><rect x="964.5" y="245" width="0.7" height="15.0" fill="rgb(216,191,54)" rx="2" ry="2" />
<text  x="967.51" y="255.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (76 samples, 1.18%)</title><rect x="430.1" y="517" width="13.9" height="15.0" fill="rgb(251,33,27)" rx="2" ry="2" />
<text  x="433.06" y="527.5" ></text>
</g>
<g >
<title>update_process_times (21 samples, 0.33%)</title><rect x="981.3" y="437" width="3.9" height="15.0" fill="rgb(209,105,16)" rx="2" ry="2" />
<text  x="984.34" y="447.5" ></text>
</g>
<g >
<title>dm_read_reg_func (5 samples, 0.08%)</title><rect x="961.2" y="213" width="0.9" height="15.0" fill="rgb(254,85,45)" rx="2" ry="2" />
<text  x="964.21" y="223.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (5 samples, 0.08%)</title><rect x="642.4" y="629" width="0.9" height="15.0" fill="rgb(239,115,47)" rx="2" ry="2" />
<text  x="645.37" y="639.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.02%)</title><rect x="1157.1" y="581" width="0.1" height="15.0" fill="rgb(253,166,36)" rx="2" ry="2" />
<text  x="1160.05" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (36 samples, 0.56%)</title><rect x="556.0" y="485" width="6.6" height="15.0" fill="rgb(215,88,49)" rx="2" ry="2" />
<text  x="558.98" y="495.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="953.0" y="565" width="0.2" height="15.0" fill="rgb(221,133,47)" rx="2" ry="2" />
<text  x="955.98" y="575.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (15 samples, 0.23%)</title><rect x="27.0" y="325" width="2.8" height="15.0" fill="rgb(238,203,11)" rx="2" ry="2" />
<text  x="30.02" y="335.5" ></text>
</g>
<g >
<title>pmd_pfn (1 samples, 0.02%)</title><rect x="697.5" y="565" width="0.1" height="15.0" fill="rgb(229,214,16)" rx="2" ry="2" />
<text  x="700.46" y="575.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (2 samples, 0.03%)</title><rect x="1153.9" y="565" width="0.4" height="15.0" fill="rgb(232,141,44)" rx="2" ry="2" />
<text  x="1156.94" y="575.5" ></text>
</g>
<g >
<title>exit_mmap (26 samples, 0.40%)</title><rect x="727.3" y="581" width="4.8" height="15.0" fill="rgb(228,35,13)" rx="2" ry="2" />
<text  x="730.30" y="591.5" ></text>
</g>
<g >
<title>page_frag_alloc (1 samples, 0.02%)</title><rect x="968.9" y="389" width="0.2" height="15.0" fill="rgb(235,72,7)" rx="2" ry="2" />
<text  x="971.90" y="399.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="59.4" y="645" width="0.2" height="15.0" fill="rgb(241,85,29)" rx="2" ry="2" />
<text  x="62.42" y="655.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.02%)</title><rect x="727.8" y="485" width="0.2" height="15.0" fill="rgb(219,82,15)" rx="2" ry="2" />
<text  x="730.85" y="495.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.02%)</title><rect x="27.6" y="229" width="0.2" height="15.0" fill="rgb(250,22,7)" rx="2" ry="2" />
<text  x="30.57" y="239.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.02%)</title><rect x="1189.6" y="565" width="0.2" height="15.0" fill="rgb(241,205,9)" rx="2" ry="2" />
<text  x="1192.63" y="575.5" ></text>
</g>
<g >
<title>dma_fence_default_wait_cb (3 samples, 0.05%)</title><rect x="967.1" y="309" width="0.5" height="15.0" fill="rgb(228,70,38)" rx="2" ry="2" />
<text  x="970.07" y="319.5" ></text>
</g>
<g >
<title>ovl_read_iter (1 samples, 0.02%)</title><rect x="102.8" y="277" width="0.2" height="15.0" fill="rgb(208,84,11)" rx="2" ry="2" />
<text  x="105.80" y="287.5" ></text>
</g>
<g >
<title>ext4_add_complete_io (1 samples, 0.02%)</title><rect x="968.3" y="341" width="0.2" height="15.0" fill="rgb(232,127,41)" rx="2" ry="2" />
<text  x="971.35" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (143 samples, 2.22%)</title><rect x="242.6" y="469" width="26.2" height="15.0" fill="rgb(250,126,13)" rx="2" ry="2" />
<text  x="245.63" y="479.5" >c..</text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.02%)</title><rect x="696.7" y="533" width="0.2" height="15.0" fill="rgb(237,163,22)" rx="2" ry="2" />
<text  x="699.73" y="543.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="601.6" y="421" width="0.1" height="15.0" fill="rgb(248,142,9)" rx="2" ry="2" />
<text  x="604.56" y="431.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (12 samples, 0.19%)</title><rect x="691.6" y="565" width="2.2" height="15.0" fill="rgb(248,152,35)" rx="2" ry="2" />
<text  x="694.61" y="575.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (1 samples, 0.02%)</title><rect x="27.8" y="245" width="0.1" height="15.0" fill="rgb(244,129,8)" rx="2" ry="2" />
<text  x="30.75" y="255.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (1 samples, 0.02%)</title><rect x="869.1" y="693" width="0.2" height="15.0" fill="rgb(245,30,11)" rx="2" ry="2" />
<text  x="872.15" y="703.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (90 samples, 1.40%)</title><rect x="574.8" y="533" width="16.5" height="15.0" fill="rgb(238,152,16)" rx="2" ry="2" />
<text  x="577.83" y="543.5" ></text>
</g>
<g >
<title>realpath_stk (1 samples, 0.02%)</title><rect x="103.2" y="373" width="0.1" height="15.0" fill="rgb(216,135,29)" rx="2" ry="2" />
<text  x="106.16" y="383.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (25 samples, 0.39%)</title><rect x="53.7" y="677" width="4.6" height="15.0" fill="rgb(212,19,47)" rx="2" ry="2" />
<text  x="56.74" y="687.5" ></text>
</g>
<g >
<title>std::lazy::SyncLazy&lt;T,F&gt;::force (1 samples, 0.02%)</title><rect x="444.0" y="517" width="0.1" height="15.0" fill="rgb(223,36,25)" rx="2" ry="2" />
<text  x="446.97" y="527.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.02%)</title><rect x="103.7" y="149" width="0.2" height="15.0" fill="rgb(249,28,41)" rx="2" ry="2" />
<text  x="106.71" y="159.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (83 samples, 1.29%)</title><rect x="510.2" y="485" width="15.2" height="15.0" fill="rgb(245,20,34)" rx="2" ry="2" />
<text  x="513.22" y="495.5" ></text>
</g>
<g >
<title>generic_perform_write (35 samples, 0.54%)</title><rect x="26.8" y="341" width="6.4" height="15.0" fill="rgb(222,191,54)" rx="2" ry="2" />
<text  x="29.84" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.03%)</title><rect x="574.1" y="453" width="0.4" height="15.0" fill="rgb(235,73,9)" rx="2" ry="2" />
<text  x="577.10" y="463.5" ></text>
</g>
<g >
<title>common_interrupt (62 samples, 0.96%)</title><rect x="958.6" y="565" width="11.4" height="15.0" fill="rgb(234,95,30)" rx="2" ry="2" />
<text  x="961.65" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.16%)</title><rect x="608.0" y="517" width="1.8" height="15.0" fill="rgb(213,116,44)" rx="2" ry="2" />
<text  x="610.96" y="527.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (11 samples, 0.17%)</title><rect x="963.2" y="325" width="2.0" height="15.0" fill="rgb(205,168,34)" rx="2" ry="2" />
<text  x="966.22" y="335.5" ></text>
</g>
<g >
<title>NaClSysExecve (5 samples, 0.08%)</title><rect x="102.6" y="645" width="0.9" height="15.0" fill="rgb(240,0,4)" rx="2" ry="2" />
<text  x="105.61" y="655.5" ></text>
</g>
<g >
<title>lind_mmap (1 samples, 0.02%)</title><rect x="104.3" y="613" width="0.1" height="15.0" fill="rgb(231,88,51)" rx="2" ry="2" />
<text  x="107.26" y="623.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="103.5" y="245" width="0.2" height="15.0" fill="rgb(230,104,34)" rx="2" ry="2" />
<text  x="106.53" y="255.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="27.4" y="181" width="0.2" height="15.0" fill="rgb(207,144,45)" rx="2" ry="2" />
<text  x="30.39" y="191.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (10 samples, 0.16%)</title><rect x="608.0" y="501" width="1.8" height="15.0" fill="rgb(212,226,54)" rx="2" ry="2" />
<text  x="610.96" y="511.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 0.98%)</title><rect x="13.5" y="341" width="11.5" height="15.0" fill="rgb(207,57,34)" rx="2" ry="2" />
<text  x="16.48" y="351.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (13 samples, 0.20%)</title><rect x="570.4" y="453" width="2.4" height="15.0" fill="rgb(216,168,47)" rx="2" ry="2" />
<text  x="573.44" y="463.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="969.6" y="325" width="0.2" height="15.0" fill="rgb(234,167,0)" rx="2" ry="2" />
<text  x="972.63" y="335.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (2 samples, 0.03%)</title><rect x="962.3" y="277" width="0.4" height="15.0" fill="rgb(248,98,26)" rx="2" ry="2" />
<text  x="965.31" y="287.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.02%)</title><rect x="942.9" y="373" width="0.2" height="15.0" fill="rgb(240,210,2)" rx="2" ry="2" />
<text  x="945.91" y="383.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (3 samples, 0.05%)</title><rect x="949.1" y="453" width="0.6" height="15.0" fill="rgb(218,117,15)" rx="2" ry="2" />
<text  x="952.13" y="463.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="1164.4" y="549" width="0.2" height="15.0" fill="rgb(223,99,31)" rx="2" ry="2" />
<text  x="1167.38" y="559.5" ></text>
</g>
<g >
<title>commit_work (24 samples, 0.37%)</title><rect x="947.9" y="629" width="4.3" height="15.0" fill="rgb(235,219,0)" rx="2" ry="2" />
<text  x="950.85" y="639.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (6 samples, 0.09%)</title><rect x="688.3" y="501" width="1.1" height="15.0" fill="rgb(243,208,6)" rx="2" ry="2" />
<text  x="691.31" y="511.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (44 samples, 0.68%)</title><rect x="988.3" y="517" width="8.1" height="15.0" fill="rgb(219,29,25)" rx="2" ry="2" />
<text  x="991.30" y="527.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="972.9" y="469" width="0.2" height="15.0" fill="rgb(213,162,12)" rx="2" ry="2" />
<text  x="975.93" y="479.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (41 samples, 0.64%)</title><rect x="94.6" y="629" width="7.5" height="15.0" fill="rgb(217,50,15)" rx="2" ry="2" />
<text  x="97.56" y="639.5" ></text>
</g>
<g >
<title>page_cache_delete (1 samples, 0.02%)</title><rect x="732.1" y="373" width="0.1" height="15.0" fill="rgb(219,225,16)" rx="2" ry="2" />
<text  x="735.06" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="95.1" y="485" width="0.4" height="15.0" fill="rgb(218,39,25)" rx="2" ry="2" />
<text  x="98.11" y="495.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="959.6" y="341" width="0.1" height="15.0" fill="rgb(252,48,10)" rx="2" ry="2" />
<text  x="962.56" y="351.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="952.4" y="437" width="0.2" height="15.0" fill="rgb(212,52,42)" rx="2" ry="2" />
<text  x="955.43" y="447.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.02%)</title><rect x="28.7" y="245" width="0.2" height="15.0" fill="rgb(206,223,25)" rx="2" ry="2" />
<text  x="31.67" y="255.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.02%)</title><rect x="102.8" y="389" width="0.2" height="15.0" fill="rgb(249,225,52)" rx="2" ry="2" />
<text  x="105.80" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="102.1" y="597" width="0.1" height="15.0" fill="rgb(221,114,6)" rx="2" ry="2" />
<text  x="105.06" y="607.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (35 samples, 0.54%)</title><rect x="26.8" y="373" width="6.4" height="15.0" fill="rgb(210,66,51)" rx="2" ry="2" />
<text  x="29.84" y="383.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="720.5" y="517" width="0.2" height="15.0" fill="rgb(208,187,25)" rx="2" ry="2" />
<text  x="723.53" y="527.5" ></text>
</g>
<g >
<title>snd_pcm_status_user64 (68 samples, 1.05%)</title><rect x="911.1" y="613" width="12.4" height="15.0" fill="rgb(248,74,14)" rx="2" ry="2" />
<text  x="914.06" y="623.5" ></text>
</g>
<g >
<title>amdgpu_cs_list_validate (2 samples, 0.03%)</title><rect x="875.9" y="565" width="0.4" height="15.0" fill="rgb(237,16,47)" rx="2" ry="2" />
<text  x="878.92" y="575.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (2 samples, 0.03%)</title><rect x="704.2" y="677" width="0.4" height="15.0" fill="rgb(222,113,31)" rx="2" ry="2" />
<text  x="707.24" y="687.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.02%)</title><rect x="946.2" y="677" width="0.2" height="15.0" fill="rgb(244,159,37)" rx="2" ry="2" />
<text  x="949.20" y="687.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="102.1" y="373" width="0.1" height="15.0" fill="rgb(251,141,33)" rx="2" ry="2" />
<text  x="105.06" y="383.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (1 samples, 0.02%)</title><rect x="489.0" y="485" width="0.2" height="15.0" fill="rgb(216,204,9)" rx="2" ry="2" />
<text  x="491.99" y="495.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (1 samples, 0.02%)</title><rect x="881.6" y="645" width="0.2" height="15.0" fill="rgb(251,24,17)" rx="2" ry="2" />
<text  x="884.59" y="655.5" ></text>
</g>
<g >
<title>amdgpu_cs_bo_validate (2 samples, 0.03%)</title><rect x="875.9" y="549" width="0.4" height="15.0" fill="rgb(215,228,10)" rx="2" ry="2" />
<text  x="878.92" y="559.5" ></text>
</g>
<g >
<title>ep_send_events (1 samples, 0.02%)</title><rect x="871.0" y="613" width="0.2" height="15.0" fill="rgb(232,122,31)" rx="2" ry="2" />
<text  x="873.98" y="623.5" ></text>
</g>
<g >
<title>snd_pcm_update_hw_ptr0 (127 samples, 1.97%)</title><rect x="887.6" y="565" width="23.3" height="15.0" fill="rgb(220,227,43)" rx="2" ry="2" />
<text  x="890.63" y="575.5" >s..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (1,495 samples, 23.19%)</title><rect x="104.4" y="549" width="273.7" height="15.0" fill="rgb(223,134,23)" rx="2" ry="2" />
<text  x="107.44" y="559.5" >rustposix::safeposix::syscalls::fs_c..</text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1175.7" y="613" width="0.2" height="15.0" fill="rgb(225,194,1)" rx="2" ry="2" />
<text  x="1178.72" y="623.5" ></text>
</g>
<g >
<title>do_writepages (2 samples, 0.03%)</title><rect x="952.4" y="533" width="0.4" height="15.0" fill="rgb(252,85,13)" rx="2" ry="2" />
<text  x="955.43" y="543.5" ></text>
</g>
<g >
<title>ttm_bo_del_from_lru (1 samples, 0.02%)</title><rect x="880.5" y="469" width="0.2" height="15.0" fill="rgb(231,66,21)" rx="2" ry="2" />
<text  x="883.49" y="479.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (154 samples, 2.39%)</title><rect x="527.6" y="485" width="28.2" height="15.0" fill="rgb(248,27,12)" rx="2" ry="2" />
<text  x="530.61" y="495.5" >r..</text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (3 samples, 0.05%)</title><rect x="959.9" y="277" width="0.6" height="15.0" fill="rgb(216,105,51)" rx="2" ry="2" />
<text  x="962.93" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="702.4" y="629" width="0.2" height="15.0" fill="rgb(225,27,38)" rx="2" ry="2" />
<text  x="705.41" y="639.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1189.3" y="501" width="0.2" height="15.0" fill="rgb(219,19,52)" rx="2" ry="2" />
<text  x="1192.27" y="511.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="1169.3" y="533" width="0.2" height="15.0" fill="rgb(238,35,31)" rx="2" ry="2" />
<text  x="1172.32" y="543.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="103.7" y="101" width="0.2" height="15.0" fill="rgb(233,59,22)" rx="2" ry="2" />
<text  x="106.71" y="111.5" ></text>
</g>
<g >
<title>NaClMutexLock (22 samples, 0.34%)</title><rect x="87.6" y="629" width="4.0" height="15.0" fill="rgb(233,106,0)" rx="2" ry="2" />
<text  x="90.61" y="639.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.02%)</title><rect x="1168.8" y="597" width="0.2" height="15.0" fill="rgb(231,64,46)" rx="2" ry="2" />
<text  x="1171.77" y="607.5" ></text>
</g>
<g >
<title>azx_get_pos_lpib (21 samples, 0.33%)</title><rect x="911.6" y="501" width="3.9" height="15.0" fill="rgb(241,44,10)" rx="2" ry="2" />
<text  x="914.61" y="511.5" ></text>
</g>
<g >
<title>__ioctl (79 samples, 1.23%)</title><rect x="10.7" y="597" width="14.5" height="15.0" fill="rgb(207,191,6)" rx="2" ry="2" />
<text  x="13.73" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="59.4" y="597" width="0.2" height="15.0" fill="rgb(213,179,7)" rx="2" ry="2" />
<text  x="62.42" y="607.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.02%)</title><rect x="732.1" y="597" width="0.1" height="15.0" fill="rgb(212,202,30)" rx="2" ry="2" />
<text  x="735.06" y="607.5" ></text>
</g>
<g >
<title>drm_get_last_vbltimestamp (6 samples, 0.09%)</title><rect x="961.2" y="357" width="1.1" height="15.0" fill="rgb(217,122,7)" rx="2" ry="2" />
<text  x="964.21" y="367.5" ></text>
</g>
<g >
<title>record_times (2 samples, 0.03%)</title><rect x="934.1" y="501" width="0.4" height="15.0" fill="rgb(218,102,53)" rx="2" ry="2" />
<text  x="937.12" y="511.5" ></text>
</g>
<g >
<title>__free_one_page (4 samples, 0.06%)</title><rect x="730.8" y="389" width="0.7" height="15.0" fill="rgb(252,175,31)" rx="2" ry="2" />
<text  x="733.78" y="399.5" ></text>
</g>
<g >
<title>cmd_record (125 samples, 1.94%)</title><rect x="10.7" y="677" width="22.9" height="15.0" fill="rgb(252,34,40)" rx="2" ry="2" />
<text  x="13.73" y="687.5" >c..</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.02%)</title><rect x="103.9" y="85" width="0.2" height="15.0" fill="rgb(239,221,49)" rx="2" ry="2" />
<text  x="106.89" y="95.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="732.1" y="565" width="0.1" height="15.0" fill="rgb(225,36,13)" rx="2" ry="2" />
<text  x="735.06" y="575.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (25 samples, 0.39%)</title><rect x="618.4" y="597" width="4.6" height="15.0" fill="rgb(251,126,24)" rx="2" ry="2" />
<text  x="621.39" y="607.5" ></text>
</g>
<g >
<title>update_load_avg (2 samples, 0.03%)</title><rect x="995.4" y="437" width="0.4" height="15.0" fill="rgb(243,109,17)" rx="2" ry="2" />
<text  x="998.44" y="447.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="966.9" y="325" width="0.2" height="15.0" fill="rgb(227,29,29)" rx="2" ry="2" />
<text  x="969.89" y="335.5" ></text>
</g>
<g >
<title>azx_get_delay_from_lpib (2 samples, 0.03%)</title><rect x="888.5" y="533" width="0.4" height="15.0" fill="rgb(239,77,51)" rx="2" ry="2" />
<text  x="891.55" y="543.5" ></text>
</g>
<g >
<title>futex_wake (6 samples, 0.09%)</title><rect x="874.3" y="629" width="1.1" height="15.0" fill="rgb(219,124,7)" rx="2" ry="2" />
<text  x="877.27" y="639.5" ></text>
</g>
<g >
<title>calc_global_load (1 samples, 0.02%)</title><rect x="980.2" y="437" width="0.2" height="15.0" fill="rgb(237,120,53)" rx="2" ry="2" />
<text  x="983.25" y="447.5" ></text>
</g>
<g >
<title>fdarray__poll (5 samples, 0.08%)</title><rect x="25.2" y="645" width="0.9" height="15.0" fill="rgb(242,205,40)" rx="2" ry="2" />
<text  x="28.19" y="655.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampolineCall (1 samples, 0.02%)</title><rect x="103.3" y="597" width="0.2" height="15.0" fill="rgb(219,6,45)" rx="2" ry="2" />
<text  x="106.35" y="607.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (5 samples, 0.08%)</title><rect x="961.2" y="181" width="0.9" height="15.0" fill="rgb(233,152,47)" rx="2" ry="2" />
<text  x="964.21" y="191.5" ></text>
</g>
<g >
<title>amdgpu_get_vblank_counter_kms (16 samples, 0.25%)</title><rect x="963.2" y="357" width="3.0" height="15.0" fill="rgb(223,150,37)" rx="2" ry="2" />
<text  x="966.22" y="367.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="987.4" y="533" width="0.2" height="15.0" fill="rgb(216,83,36)" rx="2" ry="2" />
<text  x="990.38" y="543.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (3 samples, 0.05%)</title><rect x="25.2" y="517" width="0.5" height="15.0" fill="rgb(250,92,44)" rx="2" ry="2" />
<text  x="28.19" y="527.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="882.3" y="613" width="0.2" height="15.0" fill="rgb(237,52,15)" rx="2" ry="2" />
<text  x="885.33" y="623.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="960.3" y="261" width="0.2" height="15.0" fill="rgb(226,147,10)" rx="2" ry="2" />
<text  x="963.30" y="271.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="941.6" y="469" width="0.2" height="15.0" fill="rgb(208,162,46)" rx="2" ry="2" />
<text  x="944.63" y="479.5" ></text>
</g>
<g >
<title>activate_page (1 samples, 0.02%)</title><rect x="727.8" y="469" width="0.2" height="15.0" fill="rgb(215,89,54)" rx="2" ry="2" />
<text  x="730.85" y="479.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="699.5" y="645" width="0.2" height="15.0" fill="rgb(209,54,13)" rx="2" ry="2" />
<text  x="702.48" y="655.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (6 samples, 0.09%)</title><rect x="961.2" y="277" width="1.1" height="15.0" fill="rgb(206,142,41)" rx="2" ry="2" />
<text  x="964.21" y="287.5" ></text>
</g>
<g >
<title>generic_perform_write (2 samples, 0.03%)</title><rect x="33.2" y="373" width="0.4" height="15.0" fill="rgb(205,84,40)" rx="2" ry="2" />
<text  x="36.24" y="383.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (1 samples, 0.02%)</title><rect x="968.0" y="261" width="0.2" height="15.0" fill="rgb(231,189,14)" rx="2" ry="2" />
<text  x="970.98" y="271.5" ></text>
</g>
<g >
<title>perf_ioctl (1 samples, 0.02%)</title><rect x="33.6" y="645" width="0.2" height="15.0" fill="rgb(210,184,8)" rx="2" ry="2" />
<text  x="36.61" y="655.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.02%)</title><rect x="27.4" y="117" width="0.2" height="15.0" fill="rgb(217,14,22)" rx="2" ry="2" />
<text  x="30.39" y="127.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.02%)</title><rect x="104.3" y="421" width="0.1" height="15.0" fill="rgb(216,131,3)" rx="2" ry="2" />
<text  x="107.26" y="431.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="574.3" y="389" width="0.2" height="15.0" fill="rgb(247,129,53)" rx="2" ry="2" />
<text  x="577.28" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="702.6" y="629" width="0.2" height="15.0" fill="rgb(240,169,21)" rx="2" ry="2" />
<text  x="705.59" y="639.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 0.02%)</title><rect x="996.5" y="581" width="0.2" height="15.0" fill="rgb(246,66,5)" rx="2" ry="2" />
<text  x="999.54" y="591.5" ></text>
</g>
<g >
<title>CompareAndSwap (1 samples, 0.02%)</title><rect x="68.6" y="661" width="0.2" height="15.0" fill="rgb(227,78,43)" rx="2" ry="2" />
<text  x="71.57" y="671.5" ></text>
</g>
<g >
<title>ttm_eu_reserve_buffers (1 samples, 0.02%)</title><rect x="876.3" y="565" width="0.2" height="15.0" fill="rgb(240,74,53)" rx="2" ry="2" />
<text  x="879.29" y="575.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (11 samples, 0.17%)</title><rect x="599.9" y="485" width="2.0" height="15.0" fill="rgb(252,163,33)" rx="2" ry="2" />
<text  x="602.91" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="103.5" y="453" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="106.53" y="463.5" ></text>
</g>
<g >
<title>menu_select (39 samples, 0.60%)</title><rect x="1156.0" y="597" width="7.1" height="15.0" fill="rgb(224,64,47)" rx="2" ry="2" />
<text  x="1158.96" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1,495 samples, 23.19%)</title><rect x="104.4" y="565" width="273.7" height="15.0" fill="rgb(227,52,36)" rx="2" ry="2" />
<text  x="107.44" y="575.5" >rustposix::safeposix::dispatcher::di..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="720.5" y="485" width="0.2" height="15.0" fill="rgb(212,13,21)" rx="2" ry="2" />
<text  x="723.53" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.09%)</title><rect x="602.5" y="485" width="1.1" height="15.0" fill="rgb(239,6,40)" rx="2" ry="2" />
<text  x="605.47" y="495.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (88 samples, 1.36%)</title><rect x="575.2" y="517" width="16.1" height="15.0" fill="rgb(228,145,27)" rx="2" ry="2" />
<text  x="578.20" y="527.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.02%)</title><rect x="1189.8" y="581" width="0.2" height="15.0" fill="rgb(243,61,7)" rx="2" ry="2" />
<text  x="1192.82" y="591.5" ></text>
</g>
<g >
<title>Rel32Operand (1 samples, 0.02%)</title><rect x="101.9" y="565" width="0.2" height="15.0" fill="rgb(249,66,38)" rx="2" ry="2" />
<text  x="104.88" y="575.5" ></text>
</g>
<g >
<title>dce_mi_program_surface_flip_and_addr (2 samples, 0.03%)</title><rect x="949.7" y="517" width="0.3" height="15.0" fill="rgb(237,95,26)" rx="2" ry="2" />
<text  x="952.68" y="527.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="941.6" y="421" width="0.2" height="15.0" fill="rgb(239,93,19)" rx="2" ry="2" />
<text  x="944.63" y="431.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="729.5" y="437" width="0.2" height="15.0" fill="rgb(243,17,8)" rx="2" ry="2" />
<text  x="732.49" y="447.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (34 samples, 0.53%)</title><rect x="973.5" y="469" width="6.2" height="15.0" fill="rgb(220,112,53)" rx="2" ry="2" />
<text  x="976.47" y="479.5" ></text>
</g>
<g >
<title>drm_crtc_vblank_helper_get_vblank_timestamp (3 samples, 0.05%)</title><rect x="966.2" y="357" width="0.5" height="15.0" fill="rgb(212,31,30)" rx="2" ry="2" />
<text  x="969.15" y="367.5" ></text>
</g>
<g >
<title>dequeue_rt_stack (1 samples, 0.02%)</title><rect x="933.2" y="517" width="0.2" height="15.0" fill="rgb(227,20,33)" rx="2" ry="2" />
<text  x="936.21" y="527.5" ></text>
</g>
<g >
<title>do_setitimer (1 samples, 0.02%)</title><rect x="943.5" y="661" width="0.1" height="15.0" fill="rgb(241,90,52)" rx="2" ry="2" />
<text  x="946.46" y="671.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1176.5" y="613" width="0.1" height="15.0" fill="rgb(213,93,5)" rx="2" ry="2" />
<text  x="1179.46" y="623.5" ></text>
</g>
<g >
<title>mpage_submit_page (1 samples, 0.02%)</title><rect x="952.4" y="469" width="0.2" height="15.0" fill="rgb(248,108,44)" rx="2" ry="2" />
<text  x="955.43" y="479.5" ></text>
</g>
<g >
<title>__import_iovec (1 samples, 0.02%)</title><rect x="943.3" y="597" width="0.2" height="15.0" fill="rgb(221,26,36)" rx="2" ry="2" />
<text  x="946.27" y="607.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="939.6" y="533" width="0.2" height="15.0" fill="rgb(209,123,41)" rx="2" ry="2" />
<text  x="942.61" y="543.5" ></text>
</g>
<g >
<title>intercept_process_vm_writev (1 samples, 0.02%)</title><rect x="702.4" y="597" width="0.2" height="15.0" fill="rgb(253,19,40)" rx="2" ry="2" />
<text  x="705.41" y="607.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.02%)</title><rect x="870.6" y="629" width="0.2" height="15.0" fill="rgb(221,74,32)" rx="2" ry="2" />
<text  x="873.61" y="639.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="940.3" y="533" width="0.2" height="15.0" fill="rgb(221,124,35)" rx="2" ry="2" />
<text  x="943.35" y="543.5" ></text>
</g>
<g >
<title>proc_pid_status (1 samples, 0.02%)</title><rect x="26.1" y="437" width="0.2" height="15.0" fill="rgb(223,37,52)" rx="2" ry="2" />
<text  x="29.11" y="447.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.02%)</title><rect x="702.4" y="501" width="0.2" height="15.0" fill="rgb(228,115,43)" rx="2" ry="2" />
<text  x="705.41" y="511.5" ></text>
</g>
<g >
<title>[perf-3080.map] (6 samples, 0.09%)</title><rect x="60.0" y="693" width="1.1" height="15.0" fill="rgb(239,193,46)" rx="2" ry="2" />
<text  x="62.97" y="703.5" ></text>
</g>
<g >
<title>NaClValidateCode (3 samples, 0.05%)</title><rect x="702.8" y="597" width="0.5" height="15.0" fill="rgb(242,222,32)" rx="2" ry="2" />
<text  x="705.77" y="607.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.03%)</title><rect x="103.7" y="453" width="0.4" height="15.0" fill="rgb(233,196,29)" rx="2" ry="2" />
<text  x="106.71" y="463.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="962.7" y="309" width="0.2" height="15.0" fill="rgb(218,25,34)" rx="2" ry="2" />
<text  x="965.68" y="319.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (114 samples, 1.77%)</title><rect x="678.8" y="677" width="20.9" height="15.0" fill="rgb(217,83,43)" rx="2" ry="2" />
<text  x="681.79" y="687.5" ></text>
</g>
<g >
<title>psi_task_switch (15 samples, 0.23%)</title><rect x="1171.5" y="597" width="2.8" height="15.0" fill="rgb(227,115,52)" rx="2" ry="2" />
<text  x="1174.51" y="607.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (11 samples, 0.17%)</title><rect x="982.6" y="389" width="2.0" height="15.0" fill="rgb(225,22,25)" rx="2" ry="2" />
<text  x="985.63" y="399.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="948.9" y="485" width="0.2" height="15.0" fill="rgb(218,98,24)" rx="2" ry="2" />
<text  x="951.95" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="25.2" y="597" width="0.9" height="15.0" fill="rgb(214,122,22)" rx="2" ry="2" />
<text  x="28.19" y="607.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (5 samples, 0.08%)</title><rect x="939.2" y="581" width="1.0" height="15.0" fill="rgb(243,167,20)" rx="2" ry="2" />
<text  x="942.25" y="591.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (1,495 samples, 23.19%)</title><rect x="104.4" y="629" width="273.7" height="15.0" fill="rgb(205,6,14)" rx="2" ry="2" />
<text  x="107.44" y="639.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>check_cpu_stall (1 samples, 0.02%)</title><rect x="982.4" y="389" width="0.2" height="15.0" fill="rgb(212,109,29)" rx="2" ry="2" />
<text  x="985.44" y="399.5" ></text>
</g>
<g >
<title>amdgpu_ctx_add_fence (5 samples, 0.08%)</title><rect x="877.2" y="565" width="0.9" height="15.0" fill="rgb(233,222,25)" rx="2" ry="2" />
<text  x="880.20" y="575.5" ></text>
</g>
<g >
<title>__remove_hrtimer (2 samples, 0.03%)</title><rect x="1177.2" y="565" width="0.4" height="15.0" fill="rgb(229,119,19)" rx="2" ry="2" />
<text  x="1180.19" y="575.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="947.7" y="645" width="0.2" height="15.0" fill="rgb(221,198,52)" rx="2" ry="2" />
<text  x="950.67" y="655.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.02%)</title><rect x="103.2" y="581" width="0.1" height="15.0" fill="rgb(245,79,38)" rx="2" ry="2" />
<text  x="106.16" y="591.5" ></text>
</g>
<g >
<title>vfs_iter_write (2 samples, 0.03%)</title><rect x="33.2" y="453" width="0.4" height="15.0" fill="rgb(212,222,6)" rx="2" ry="2" />
<text  x="36.24" y="463.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (2 samples, 0.03%)</title><rect x="574.8" y="501" width="0.4" height="15.0" fill="rgb(212,209,47)" rx="2" ry="2" />
<text  x="577.83" y="511.5" ></text>
</g>
<g >
<title>rest_init (65 samples, 1.01%)</title><rect x="1178.1" y="613" width="11.9" height="15.0" fill="rgb(212,174,0)" rx="2" ry="2" />
<text  x="1181.10" y="623.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (3 samples, 0.05%)</title><rect x="930.5" y="581" width="0.5" height="15.0" fill="rgb(224,5,20)" rx="2" ry="2" />
<text  x="933.46" y="591.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (11 samples, 0.17%)</title><rect x="941.3" y="597" width="2.0" height="15.0" fill="rgb(227,33,50)" rx="2" ry="2" />
<text  x="944.26" y="607.5" ></text>
</g>
<g >
<title>dma_fence_wait_timeout (2 samples, 0.03%)</title><rect x="950.2" y="549" width="0.4" height="15.0" fill="rgb(213,184,4)" rx="2" ry="2" />
<text  x="953.23" y="559.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (1 samples, 0.02%)</title><rect x="102.8" y="149" width="0.2" height="15.0" fill="rgb(248,217,35)" rx="2" ry="2" />
<text  x="105.80" y="159.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (4 samples, 0.06%)</title><rect x="488.3" y="501" width="0.7" height="15.0" fill="rgb(249,147,4)" rx="2" ry="2" />
<text  x="491.26" y="511.5" ></text>
</g>
<g >
<title>cpu_startup_entry (65 samples, 1.01%)</title><rect x="1178.1" y="597" width="11.9" height="15.0" fill="rgb(209,200,51)" rx="2" ry="2" />
<text  x="1181.10" y="607.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="679.9" y="629" width="0.2" height="15.0" fill="rgb(234,31,48)" rx="2" ry="2" />
<text  x="682.89" y="639.5" ></text>
</g>
<g >
<title>lind_exit (3 samples, 0.05%)</title><rect x="103.5" y="629" width="0.6" height="15.0" fill="rgb(236,101,21)" rx="2" ry="2" />
<text  x="106.53" y="639.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::libc_mmap (1 samples, 0.02%)</title><rect x="104.3" y="549" width="0.1" height="15.0" fill="rgb(231,31,11)" rx="2" ry="2" />
<text  x="107.26" y="559.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (1 samples, 0.02%)</title><rect x="10.5" y="629" width="0.2" height="15.0" fill="rgb(225,98,1)" rx="2" ry="2" />
<text  x="13.55" y="639.5" ></text>
</g>
<g >
<title>core::cmp::min (19 samples, 0.29%)</title><rect x="115.2" y="517" width="3.5" height="15.0" fill="rgb(218,209,44)" rx="2" ry="2" />
<text  x="118.24" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="33.2" y="565" width="0.4" height="15.0" fill="rgb(242,185,48)" rx="2" ry="2" />
<text  x="36.24" y="575.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="104.3" y="341" width="0.1" height="15.0" fill="rgb(218,29,8)" rx="2" ry="2" />
<text  x="107.26" y="351.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.02%)</title><rect x="33.6" y="549" width="0.2" height="15.0" fill="rgb(248,34,22)" rx="2" ry="2" />
<text  x="36.61" y="559.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (5 samples, 0.08%)</title><rect x="946.9" y="661" width="1.0" height="15.0" fill="rgb(245,55,25)" rx="2" ry="2" />
<text  x="949.94" y="671.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="732.1" y="485" width="0.1" height="15.0" fill="rgb(234,134,35)" rx="2" ry="2" />
<text  x="735.06" y="495.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="1186.3" y="485" width="0.2" height="15.0" fill="rgb(208,84,44)" rx="2" ry="2" />
<text  x="1189.34" y="495.5" ></text>
</g>
<g >
<title>NaClSysExit (3 samples, 0.05%)</title><rect x="103.5" y="645" width="0.6" height="15.0" fill="rgb(249,130,8)" rx="2" ry="2" />
<text  x="106.53" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (3 samples, 0.05%)</title><rect x="103.5" y="597" width="0.6" height="15.0" fill="rgb(229,133,8)" rx="2" ry="2" />
<text  x="106.53" y="607.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (2 samples, 0.03%)</title><rect x="695.6" y="549" width="0.4" height="15.0" fill="rgb(229,21,19)" rx="2" ry="2" />
<text  x="698.63" y="559.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.02%)</title><rect x="992.3" y="437" width="0.2" height="15.0" fill="rgb(239,184,17)" rx="2" ry="2" />
<text  x="995.33" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (3 samples, 0.05%)</title><rect x="930.5" y="565" width="0.5" height="15.0" fill="rgb(208,188,23)" rx="2" ry="2" />
<text  x="933.46" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.02%)</title><rect x="10.5" y="485" width="0.2" height="15.0" fill="rgb(224,86,33)" rx="2" ry="2" />
<text  x="13.55" y="495.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="103.5" y="213" width="0.2" height="15.0" fill="rgb(247,121,32)" rx="2" ry="2" />
<text  x="106.53" y="223.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.05%)</title><rect x="598.3" y="437" width="0.5" height="15.0" fill="rgb(242,1,21)" rx="2" ry="2" />
<text  x="601.26" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="33.6" y="469" width="0.2" height="15.0" fill="rgb(248,190,42)" rx="2" ry="2" />
<text  x="36.61" y="479.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (11 samples, 0.17%)</title><rect x="963.2" y="309" width="2.0" height="15.0" fill="rgb(211,163,14)" rx="2" ry="2" />
<text  x="966.22" y="319.5" ></text>
</g>
<g >
<title>_dl_map_object (1 samples, 0.02%)</title><rect x="10.5" y="581" width="0.2" height="15.0" fill="rgb(215,88,25)" rx="2" ry="2" />
<text  x="13.55" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1 samples, 0.02%)</title><rect x="720.5" y="325" width="0.2" height="15.0" fill="rgb(216,95,36)" rx="2" ry="2" />
<text  x="723.53" y="335.5" ></text>
</g>
<g >
<title>_start (3 samples, 0.05%)</title><rect x="10.2" y="693" width="0.5" height="15.0" fill="rgb(252,145,42)" rx="2" ry="2" />
<text  x="13.18" y="703.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (2 samples, 0.03%)</title><rect x="102.8" y="581" width="0.4" height="15.0" fill="rgb(210,211,32)" rx="2" ry="2" />
<text  x="105.80" y="591.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (145 samples, 2.25%)</title><rect x="970.0" y="581" width="26.5" height="15.0" fill="rgb(253,130,40)" rx="2" ry="2" />
<text  x="973.00" y="591.5" >a..</text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="270.8" y="405" width="0.2" height="15.0" fill="rgb(214,26,13)" rx="2" ry="2" />
<text  x="273.82" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="986.8" y="533" width="0.2" height="15.0" fill="rgb(217,63,28)" rx="2" ry="2" />
<text  x="989.84" y="543.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="938.7" y="565" width="0.2" height="15.0" fill="rgb(215,205,19)" rx="2" ry="2" />
<text  x="941.70" y="575.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (2 samples, 0.03%)</title><rect x="989.6" y="437" width="0.3" height="15.0" fill="rgb(232,47,28)" rx="2" ry="2" />
<text  x="992.58" y="447.5" ></text>
</g>
<g >
<title>eventfd_poll (1 samples, 0.02%)</title><rect x="25.7" y="549" width="0.2" height="15.0" fill="rgb(207,79,45)" rx="2" ry="2" />
<text  x="28.74" y="559.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (37 samples, 0.57%)</title><rect x="562.8" y="469" width="6.7" height="15.0" fill="rgb(217,37,18)" rx="2" ry="2" />
<text  x="565.75" y="479.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.02%)</title><rect x="720.7" y="613" width="0.2" height="15.0" fill="rgb(231,117,38)" rx="2" ry="2" />
<text  x="723.71" y="623.5" ></text>
</g>
<g >
<title>amdgpu_dm_atomic_commit_tail (23 samples, 0.36%)</title><rect x="947.9" y="597" width="4.2" height="15.0" fill="rgb(237,124,16)" rx="2" ry="2" />
<text  x="950.85" y="607.5" ></text>
</g>
<g >
<title>do_epoll_wait (9 samples, 0.14%)</title><rect x="870.8" y="645" width="1.6" height="15.0" fill="rgb(223,39,32)" rx="2" ry="2" />
<text  x="873.79" y="655.5" ></text>
</g>
<g >
<title>wake_up_process (34 samples, 0.53%)</title><rect x="973.5" y="453" width="6.2" height="15.0" fill="rgb(218,45,41)" rx="2" ry="2" />
<text  x="976.47" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (23 samples, 0.36%)</title><rect x="469.2" y="469" width="4.2" height="15.0" fill="rgb(230,143,28)" rx="2" ry="2" />
<text  x="472.22" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="378.1" y="549" width="0.2" height="15.0" fill="rgb(224,152,34)" rx="2" ry="2" />
<text  x="381.08" y="559.5" ></text>
</g>
<g >
<title>[unknown]  (323 samples, 5.01%)</title><rect x="643.3" y="693" width="59.1" height="15.0" fill="rgb(251,161,8)" rx="2" ry="2" />
<text  x="646.29" y="703.5" >[unkno..</text>
</g>
<g >
<title>run_rebalance_domains (30 samples, 0.47%)</title><rect x="990.3" y="485" width="5.5" height="15.0" fill="rgb(207,180,22)" rx="2" ry="2" />
<text  x="993.31" y="495.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (3 samples, 0.05%)</title><rect x="30.9" y="245" width="0.5" height="15.0" fill="rgb(247,204,33)" rx="2" ry="2" />
<text  x="33.87" y="255.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (2 samples, 0.03%)</title><rect x="969.4" y="389" width="0.4" height="15.0" fill="rgb(211,216,4)" rx="2" ry="2" />
<text  x="972.45" y="399.5" ></text>
</g>
<g >
<title>prepare_task_switch (1 samples, 0.02%)</title><rect x="925.0" y="565" width="0.2" height="15.0" fill="rgb(224,128,17)" rx="2" ry="2" />
<text  x="927.97" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="102.8" y="357" width="0.2" height="15.0" fill="rgb(218,59,5)" rx="2" ry="2" />
<text  x="105.80" y="367.5" ></text>
</g>
<g >
<title>main (2 samples, 0.03%)</title><rect x="10.2" y="661" width="0.3" height="15.0" fill="rgb(239,175,44)" rx="2" ry="2" />
<text  x="13.18" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (28 samples, 0.43%)</title><rect x="727.3" y="677" width="5.1" height="15.0" fill="rgb(245,5,40)" rx="2" ry="2" />
<text  x="730.30" y="687.5" ></text>
</g>
<g >
<title>DynArrayGet (3 samples, 0.05%)</title><rect x="625.9" y="597" width="0.5" height="15.0" fill="rgb(219,107,45)" rx="2" ry="2" />
<text  x="628.90" y="607.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (8 samples, 0.12%)</title><rect x="690.1" y="565" width="1.5" height="15.0" fill="rgb(252,107,11)" rx="2" ry="2" />
<text  x="693.14" y="575.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="104.3" y="357" width="0.1" height="15.0" fill="rgb(253,163,23)" rx="2" ry="2" />
<text  x="107.26" y="367.5" ></text>
</g>
<g >
<title>kick_ilb (2 samples, 0.03%)</title><rect x="1188.5" y="485" width="0.4" height="15.0" fill="rgb(207,90,53)" rx="2" ry="2" />
<text  x="1191.54" y="495.5" ></text>
</g>
<g >
<title>NaClGetDesc (92 samples, 1.43%)</title><rect x="623.9" y="629" width="16.8" height="15.0" fill="rgb(249,51,26)" rx="2" ry="2" />
<text  x="626.89" y="639.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="95.1" y="501" width="0.4" height="15.0" fill="rgb(218,214,23)" rx="2" ry="2" />
<text  x="98.11" y="511.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.03%)</title><rect x="947.1" y="581" width="0.4" height="15.0" fill="rgb(232,91,53)" rx="2" ry="2" />
<text  x="950.12" y="591.5" ></text>
</g>
<g >
<title>vfs_iter_write (35 samples, 0.54%)</title><rect x="26.8" y="421" width="6.4" height="15.0" fill="rgb(235,172,40)" rx="2" ry="2" />
<text  x="29.84" y="431.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="33.6" y="453" width="0.2" height="15.0" fill="rgb(210,22,10)" rx="2" ry="2" />
<text  x="36.61" y="463.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (3 samples, 0.05%)</title><rect x="75.9" y="645" width="0.5" height="15.0" fill="rgb(236,217,38)" rx="2" ry="2" />
<text  x="78.89" y="655.5" ></text>
</g>
<g >
<title>cpupri_set (1 samples, 0.02%)</title><rect x="878.5" y="373" width="0.2" height="15.0" fill="rgb(215,172,9)" rx="2" ry="2" />
<text  x="881.48" y="383.5" ></text>
</g>
<g >
<title>ext4_writepages (2 samples, 0.03%)</title><rect x="952.4" y="517" width="0.4" height="15.0" fill="rgb(215,171,42)" rx="2" ry="2" />
<text  x="955.43" y="527.5" ></text>
</g>
<g >
<title>NaClLog (5 samples, 0.08%)</title><rect x="623.0" y="597" width="0.9" height="15.0" fill="rgb(252,54,37)" rx="2" ry="2" />
<text  x="625.97" y="607.5" ></text>
</g>
<g >
<title>tick_irq_enter (1 samples, 0.02%)</title><rect x="988.1" y="533" width="0.2" height="15.0" fill="rgb(226,89,6)" rx="2" ry="2" />
<text  x="991.12" y="543.5" ></text>
</g>
<g >
<title>__GI___open64 (1 samples, 0.02%)</title><rect x="10.0" y="613" width="0.2" height="15.0" fill="rgb(221,156,16)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>dma_fence_release (5 samples, 0.08%)</title><rect x="877.2" y="517" width="0.9" height="15.0" fill="rgb(226,97,40)" rx="2" ry="2" />
<text  x="880.20" y="527.5" ></text>
</g>
<g >
<title>set_next_entity (1 samples, 0.02%)</title><rect x="1170.2" y="581" width="0.2" height="15.0" fill="rgb(208,89,17)" rx="2" ry="2" />
<text  x="1173.23" y="591.5" ></text>
</g>
<g >
<title>update_stream_irq_parameters (1 samples, 0.02%)</title><rect x="952.1" y="597" width="0.1" height="15.0" fill="rgb(244,152,13)" rx="2" ry="2" />
<text  x="955.06" y="607.5" ></text>
</g>
<g >
<title>pmd_val (2 samples, 0.03%)</title><rect x="698.0" y="613" width="0.4" height="15.0" fill="rgb(225,94,31)" rx="2" ry="2" />
<text  x="701.01" y="623.5" ></text>
</g>
<g >
<title>CachedMapWritableText (2 samples, 0.03%)</title><rect x="95.1" y="597" width="0.4" height="15.0" fill="rgb(254,179,12)" rx="2" ry="2" />
<text  x="98.11" y="607.5" ></text>
</g>
<g >
<title>cs_watchdog_read (1 samples, 0.02%)</title><rect x="995.8" y="421" width="0.2" height="15.0" fill="rgb(237,140,24)" rx="2" ry="2" />
<text  x="998.80" y="431.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.03%)</title><rect x="103.7" y="357" width="0.4" height="15.0" fill="rgb(238,27,3)" rx="2" ry="2" />
<text  x="106.71" y="367.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (2 samples, 0.03%)</title><rect x="962.3" y="261" width="0.4" height="15.0" fill="rgb(243,163,26)" rx="2" ry="2" />
<text  x="965.31" y="271.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="932.3" y="453" width="0.2" height="15.0" fill="rgb(222,126,47)" rx="2" ry="2" />
<text  x="935.29" y="463.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="875.4" y="645" width="0.2" height="15.0" fill="rgb(229,150,16)" rx="2" ry="2" />
<text  x="878.37" y="655.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (10 samples, 0.16%)</title><rect x="718.0" y="677" width="1.8" height="15.0" fill="rgb(223,159,32)" rx="2" ry="2" />
<text  x="720.96" y="687.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,446 samples, 22.43%)</title><rect x="378.6" y="661" width="264.7" height="15.0" fill="rgb(206,146,34)" rx="2" ry="2" />
<text  x="381.62" y="671.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="948.0" y="453" width="0.2" height="15.0" fill="rgb(205,92,1)" rx="2" ry="2" />
<text  x="951.03" y="463.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.02%)</title><rect x="702.6" y="533" width="0.2" height="15.0" fill="rgb(221,143,7)" rx="2" ry="2" />
<text  x="705.59" y="543.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (1 samples, 0.02%)</title><rect x="102.8" y="181" width="0.2" height="15.0" fill="rgb(242,117,38)" rx="2" ry="2" />
<text  x="105.80" y="191.5" ></text>
</g>
<g >
<title>alx_refill_rx_ring (2 samples, 0.03%)</title><rect x="968.7" y="421" width="0.4" height="15.0" fill="rgb(206,215,32)" rx="2" ry="2" />
<text  x="971.72" y="431.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="966.7" y="325" width="0.2" height="15.0" fill="rgb(218,227,32)" rx="2" ry="2" />
<text  x="969.70" y="335.5" ></text>
</g>
<g >
<title>ovl_permission (1 samples, 0.02%)</title><rect x="10.5" y="389" width="0.2" height="15.0" fill="rgb(216,192,10)" rx="2" ry="2" />
<text  x="13.55" y="399.5" ></text>
</g>
<g >
<title>lind (4 samples, 0.06%)</title><rect x="10.0" y="709" width="0.7" height="15.0" fill="rgb(254,173,50)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (5 samples, 0.08%)</title><rect x="961.2" y="229" width="0.9" height="15.0" fill="rgb(207,143,4)" rx="2" ry="2" />
<text  x="964.21" y="239.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (109 samples, 1.69%)</title><rect x="489.2" y="469" width="19.9" height="15.0" fill="rgb(241,190,1)" rx="2" ry="2" />
<text  x="492.17" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.06%)</title><rect x="563.9" y="405" width="0.7" height="15.0" fill="rgb(224,184,8)" rx="2" ry="2" />
<text  x="566.85" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (39 samples, 0.60%)</title><rect x="682.3" y="533" width="7.1" height="15.0" fill="rgb(248,160,38)" rx="2" ry="2" />
<text  x="685.27" y="543.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (15 samples, 0.23%)</title><rect x="55.6" y="613" width="2.7" height="15.0" fill="rgb(212,223,3)" rx="2" ry="2" />
<text  x="58.57" y="623.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="968.0" y="197" width="0.2" height="15.0" fill="rgb(217,38,35)" rx="2" ry="2" />
<text  x="970.98" y="207.5" ></text>
</g>
<g >
<title>clear_page_erms (29 samples, 0.45%)</title><rect x="682.5" y="517" width="5.3" height="15.0" fill="rgb(245,215,20)" rx="2" ry="2" />
<text  x="685.46" y="527.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="102.1" y="357" width="0.1" height="15.0" fill="rgb(226,132,54)" rx="2" ry="2" />
<text  x="105.06" y="367.5" ></text>
</g>
<g >
<title>gup_pgd_range (1 samples, 0.02%)</title><rect x="874.3" y="549" width="0.2" height="15.0" fill="rgb(206,18,20)" rx="2" ry="2" />
<text  x="877.27" y="559.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.05%)</title><rect x="569.9" y="453" width="0.5" height="15.0" fill="rgb(246,152,38)" rx="2" ry="2" />
<text  x="572.89" y="463.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="968.0" y="485" width="0.2" height="15.0" fill="rgb(228,33,14)" rx="2" ry="2" />
<text  x="970.98" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (218 samples, 3.38%)</title><rect x="331.4" y="437" width="39.9" height="15.0" fill="rgb(251,63,9)" rx="2" ry="2" />
<text  x="334.40" y="447.5" >__m..</text>
</g>
<g >
<title>[sel_ldr] (104 samples, 1.61%)</title><rect x="659.6" y="677" width="19.0" height="15.0" fill="rgb(254,207,1)" rx="2" ry="2" />
<text  x="662.58" y="687.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (7 samples, 0.11%)</title><rect x="963.2" y="277" width="1.3" height="15.0" fill="rgb(216,68,15)" rx="2" ry="2" />
<text  x="966.22" y="287.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.02%)</title><rect x="103.9" y="69" width="0.2" height="15.0" fill="rgb(238,56,47)" rx="2" ry="2" />
<text  x="106.89" y="79.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="941.6" y="485" width="0.2" height="15.0" fill="rgb(250,203,51)" rx="2" ry="2" />
<text  x="944.63" y="495.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.03%)</title><rect x="10.2" y="677" width="0.3" height="15.0" fill="rgb(207,189,48)" rx="2" ry="2" />
<text  x="13.18" y="687.5" ></text>
</g>
<g >
<title>dm_vblank_get_counter (5 samples, 0.08%)</title><rect x="965.2" y="341" width="1.0" height="15.0" fill="rgb(249,28,38)" rx="2" ry="2" />
<text  x="968.24" y="351.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.02%)</title><rect x="488.8" y="485" width="0.2" height="15.0" fill="rgb(254,132,6)" rx="2" ry="2" />
<text  x="491.81" y="495.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="33.6" y="437" width="0.2" height="15.0" fill="rgb(252,173,34)" rx="2" ry="2" />
<text  x="36.61" y="447.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="924.1" y="597" width="0.3" height="15.0" fill="rgb(253,200,52)" rx="2" ry="2" />
<text  x="927.06" y="607.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (2 samples, 0.03%)</title><rect x="95.1" y="549" width="0.4" height="15.0" fill="rgb(210,62,6)" rx="2" ry="2" />
<text  x="98.11" y="559.5" ></text>
</g>
<g >
<title>event_function (1 samples, 0.02%)</title><rect x="33.6" y="517" width="0.2" height="15.0" fill="rgb(235,214,51)" rx="2" ry="2" />
<text  x="36.61" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (23 samples, 0.36%)</title><rect x="565.3" y="421" width="4.2" height="15.0" fill="rgb(213,138,12)" rx="2" ry="2" />
<text  x="568.32" y="431.5" ></text>
</g>
<g >
<title>pfn_pte (1 samples, 0.02%)</title><rect x="697.3" y="565" width="0.2" height="15.0" fill="rgb(245,195,16)" rx="2" ry="2" />
<text  x="700.28" y="575.5" ></text>
</g>
<g >
<title>drm_mode_page_flip_ioctl (10 samples, 0.16%)</title><rect x="879.8" y="597" width="1.8" height="15.0" fill="rgb(217,216,28)" rx="2" ry="2" />
<text  x="882.76" y="607.5" ></text>
</g>
<g >
<title>insert_module (1 samples, 0.02%)</title><rect x="10.4" y="533" width="0.1" height="15.0" fill="rgb(218,68,45)" rx="2" ry="2" />
<text  x="13.37" y="543.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.02%)</title><rect x="978.6" y="357" width="0.2" height="15.0" fill="rgb(236,225,22)" rx="2" ry="2" />
<text  x="981.60" y="367.5" ></text>
</g>
<g >
<title>vfs_writev (14 samples, 0.22%)</title><rect x="940.9" y="629" width="2.6" height="15.0" fill="rgb(241,117,30)" rx="2" ry="2" />
<text  x="943.89" y="639.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (15 samples, 0.23%)</title><rect x="51.0" y="629" width="2.7" height="15.0" fill="rgb(210,116,31)" rx="2" ry="2" />
<text  x="54.00" y="639.5" ></text>
</g>
<g >
<title>lindrustfinalize (1 samples, 0.02%)</title><rect x="720.5" y="629" width="0.2" height="15.0" fill="rgb(243,40,10)" rx="2" ry="2" />
<text  x="723.53" y="639.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (25 samples, 0.39%)</title><rect x="597.3" y="517" width="4.6" height="15.0" fill="rgb(230,29,6)" rx="2" ry="2" />
<text  x="600.35" y="527.5" ></text>
</g>
<g >
<title>schedule_timeout (2 samples, 0.03%)</title><rect x="950.2" y="517" width="0.4" height="15.0" fill="rgb(209,17,11)" rx="2" ry="2" />
<text  x="953.23" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.05%)</title><rect x="598.8" y="437" width="0.6" height="15.0" fill="rgb(231,34,44)" rx="2" ry="2" />
<text  x="601.81" y="447.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="950.2" y="501" width="0.4" height="15.0" fill="rgb(246,174,29)" rx="2" ry="2" />
<text  x="953.23" y="511.5" ></text>
</g>
<g >
<title>put_timespec64 (1 samples, 0.02%)</title><rect x="938.5" y="645" width="0.2" height="15.0" fill="rgb(215,80,50)" rx="2" ry="2" />
<text  x="941.52" y="655.5" ></text>
</g>
<g >
<title>timekeeping_update (1 samples, 0.02%)</title><rect x="980.6" y="389" width="0.2" height="15.0" fill="rgb(222,125,29)" rx="2" ry="2" />
<text  x="983.61" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="45.3" y="661" width="0.4" height="15.0" fill="rgb(242,19,41)" rx="2" ry="2" />
<text  x="48.32" y="671.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.02%)</title><rect x="103.2" y="597" width="0.1" height="15.0" fill="rgb(241,109,2)" rx="2" ry="2" />
<text  x="106.16" y="607.5" ></text>
</g>
<g >
<title>drm_crtc_handle_vblank (14 samples, 0.22%)</title><rect x="959.7" y="405" width="2.6" height="15.0" fill="rgb(228,228,26)" rx="2" ry="2" />
<text  x="962.75" y="415.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.02%)</title><rect x="702.4" y="373" width="0.2" height="15.0" fill="rgb(245,18,25)" rx="2" ry="2" />
<text  x="705.41" y="383.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (2 samples, 0.03%)</title><rect x="949.7" y="453" width="0.3" height="15.0" fill="rgb(249,55,8)" rx="2" ry="2" />
<text  x="952.68" y="463.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="873.7" y="565" width="0.2" height="15.0" fill="rgb(252,216,50)" rx="2" ry="2" />
<text  x="876.72" y="575.5" ></text>
</g>
<g >
<title>get_user_pages_fast (1 samples, 0.02%)</title><rect x="874.3" y="597" width="0.2" height="15.0" fill="rgb(217,19,22)" rx="2" ry="2" />
<text  x="877.27" y="607.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="960.3" y="229" width="0.2" height="15.0" fill="rgb(207,159,12)" rx="2" ry="2" />
<text  x="963.30" y="239.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="325.4" y="469" width="0.1" height="15.0" fill="rgb(218,226,54)" rx="2" ry="2" />
<text  x="328.36" y="479.5" ></text>
</g>
<g >
<title>get_user_pages_fast (1 samples, 0.02%)</title><rect x="873.9" y="581" width="0.2" height="15.0" fill="rgb(240,205,18)" rx="2" ry="2" />
<text  x="876.91" y="591.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="689.4" y="549" width="0.2" height="15.0" fill="rgb(206,157,48)" rx="2" ry="2" />
<text  x="692.41" y="559.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1153.2" y="549" width="0.2" height="15.0" fill="rgb(210,71,29)" rx="2" ry="2" />
<text  x="1156.21" y="559.5" ></text>
</g>
<g >
<title>switch_ldt (2 samples, 0.03%)</title><rect x="996.7" y="565" width="0.4" height="15.0" fill="rgb(231,114,7)" rx="2" ry="2" />
<text  x="999.72" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="103.2" y="501" width="0.1" height="15.0" fill="rgb(225,38,50)" rx="2" ry="2" />
<text  x="106.16" y="511.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="990.5" y="469" width="0.2" height="15.0" fill="rgb(229,156,28)" rx="2" ry="2" />
<text  x="993.50" y="479.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.02%)</title><rect x="26.1" y="405" width="0.2" height="15.0" fill="rgb(229,141,15)" rx="2" ry="2" />
<text  x="29.11" y="415.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.03%)</title><rect x="509.1" y="501" width="0.4" height="15.0" fill="rgb(250,197,26)" rx="2" ry="2" />
<text  x="512.13" y="511.5" ></text>
</g>
<g >
<title>__update_blocked_fair (2 samples, 0.03%)</title><rect x="932.3" y="469" width="0.4" height="15.0" fill="rgb(243,179,50)" rx="2" ry="2" />
<text  x="935.29" y="479.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (2 samples, 0.03%)</title><rect x="948.6" y="453" width="0.3" height="15.0" fill="rgb(240,12,52)" rx="2" ry="2" />
<text  x="951.58" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (17 samples, 0.26%)</title><rect x="461.9" y="453" width="3.1" height="15.0" fill="rgb(238,48,18)" rx="2" ry="2" />
<text  x="464.90" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_writev (15 samples, 0.23%)</title><rect x="940.7" y="661" width="2.8" height="15.0" fill="rgb(217,9,33)" rx="2" ry="2" />
<text  x="943.71" y="671.5" ></text>
</g>
<g >
<title>amdgpu_dm_irq_handler (1 samples, 0.02%)</title><rect x="968.0" y="357" width="0.2" height="15.0" fill="rgb(208,29,53)" rx="2" ry="2" />
<text  x="970.98" y="367.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="940.0" y="453" width="0.2" height="15.0" fill="rgb(214,57,9)" rx="2" ry="2" />
<text  x="942.98" y="463.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.0 (1 samples, 0.02%)</title><rect x="1176.6" y="597" width="0.2" height="15.0" fill="rgb(217,92,5)" rx="2" ry="2" />
<text  x="1179.64" y="607.5" ></text>
</g>
<g >
<title>plist_add (1 samples, 0.02%)</title><rect x="874.1" y="613" width="0.2" height="15.0" fill="rgb(252,216,15)" rx="2" ry="2" />
<text  x="877.09" y="623.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (3 samples, 0.05%)</title><rect x="702.8" y="645" width="0.5" height="15.0" fill="rgb(215,53,9)" rx="2" ry="2" />
<text  x="705.77" y="655.5" ></text>
</g>
<g >
<title>consume_skb (4 samples, 0.06%)</title><rect x="939.4" y="549" width="0.8" height="15.0" fill="rgb(252,94,34)" rx="2" ry="2" />
<text  x="942.43" y="559.5" ></text>
</g>
<g >
<title>amdgpu_get_vblank_counter_kms (4 samples, 0.06%)</title><rect x="948.4" y="565" width="0.7" height="15.0" fill="rgb(245,195,36)" rx="2" ry="2" />
<text  x="951.40" y="575.5" ></text>
</g>
<g >
<title>drm_poll (1 samples, 0.02%)</title><rect x="871.0" y="597" width="0.2" height="15.0" fill="rgb(232,100,38)" rx="2" ry="2" />
<text  x="873.98" y="607.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="940.0" y="533" width="0.2" height="15.0" fill="rgb(227,154,11)" rx="2" ry="2" />
<text  x="942.98" y="543.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (7 samples, 0.11%)</title><rect x="871.2" y="597" width="1.2" height="15.0" fill="rgb(230,117,44)" rx="2" ry="2" />
<text  x="874.16" y="607.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (44 samples, 0.68%)</title><rect x="1178.5" y="565" width="8.0" height="15.0" fill="rgb(253,133,28)" rx="2" ry="2" />
<text  x="1181.47" y="575.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.02%)</title><rect x="925.5" y="581" width="0.2" height="15.0" fill="rgb(219,6,28)" rx="2" ry="2" />
<text  x="928.52" y="591.5" ></text>
</g>
<g >
<title>amdgpu_dm_commit_planes (17 samples, 0.26%)</title><rect x="947.9" y="581" width="3.1" height="15.0" fill="rgb(238,155,27)" rx="2" ry="2" />
<text  x="950.85" y="591.5" ></text>
</g>
<g >
<title>amdgpu_fence_release (1 samples, 0.02%)</title><rect x="877.9" y="469" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="880.93" y="479.5" ></text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.02%)</title><rect x="937.6" y="613" width="0.2" height="15.0" fill="rgb(219,113,42)" rx="2" ry="2" />
<text  x="940.60" y="623.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.02%)</title><rect x="699.3" y="645" width="0.2" height="15.0" fill="rgb(208,219,48)" rx="2" ry="2" />
<text  x="702.29" y="655.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="991.6" y="453" width="0.2" height="15.0" fill="rgb(229,213,6)" rx="2" ry="2" />
<text  x="994.59" y="463.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="948.0" y="485" width="0.2" height="15.0" fill="rgb(228,223,21)" rx="2" ry="2" />
<text  x="951.03" y="495.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="951.5" y="565" width="0.2" height="15.0" fill="rgb(206,116,48)" rx="2" ry="2" />
<text  x="954.51" y="575.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (6 samples, 0.09%)</title><rect x="714.9" y="677" width="1.1" height="15.0" fill="rgb(219,90,51)" rx="2" ry="2" />
<text  x="717.85" y="687.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (3 samples, 0.05%)</title><rect x="702.8" y="629" width="0.5" height="15.0" fill="rgb(207,9,15)" rx="2" ry="2" />
<text  x="705.77" y="639.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (11 samples, 0.17%)</title><rect x="968.0" y="501" width="2.0" height="15.0" fill="rgb(231,193,1)" rx="2" ry="2" />
<text  x="970.98" y="511.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (11 samples, 0.17%)</title><rect x="716.0" y="677" width="2.0" height="15.0" fill="rgb(225,154,15)" rx="2" ry="2" />
<text  x="718.95" y="687.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="938.0" y="629" width="0.1" height="15.0" fill="rgb(254,136,8)" rx="2" ry="2" />
<text  x="940.97" y="639.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (1 samples, 0.02%)</title><rect x="952.4" y="501" width="0.2" height="15.0" fill="rgb(242,119,35)" rx="2" ry="2" />
<text  x="955.43" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="102.1" y="565" width="0.1" height="15.0" fill="rgb(215,23,40)" rx="2" ry="2" />
<text  x="105.06" y="575.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.03%)</title><rect x="729.1" y="437" width="0.4" height="15.0" fill="rgb(234,51,54)" rx="2" ry="2" />
<text  x="732.13" y="447.5" ></text>
</g>
<g >
<title>ksys_write (36 samples, 0.56%)</title><rect x="26.7" y="485" width="6.5" height="15.0" fill="rgb(247,81,12)" rx="2" ry="2" />
<text  x="29.66" y="495.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (1 samples, 0.02%)</title><rect x="59.4" y="629" width="0.2" height="15.0" fill="rgb(251,165,39)" rx="2" ry="2" />
<text  x="62.42" y="639.5" ></text>
</g>
<g >
<title>account_idle_ticks (1 samples, 0.02%)</title><rect x="1176.3" y="613" width="0.2" height="15.0" fill="rgb(226,41,25)" rx="2" ry="2" />
<text  x="1179.27" y="623.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (40 samples, 0.62%)</title><rect x="461.9" y="501" width="7.3" height="15.0" fill="rgb(250,29,2)" rx="2" ry="2" />
<text  x="464.90" y="511.5" ></text>
</g>
<g >
<title>nohz_csd_func (3 samples, 0.05%)</title><rect x="1167.1" y="613" width="0.6" height="15.0" fill="rgb(249,229,22)" rx="2" ry="2" />
<text  x="1170.12" y="623.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="527.4" y="309" width="0.2" height="15.0" fill="rgb(238,31,18)" rx="2" ry="2" />
<text  x="530.43" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.23%)</title><rect x="420.2" y="501" width="2.7" height="15.0" fill="rgb(217,45,54)" rx="2" ry="2" />
<text  x="423.17" y="511.5" ></text>
</g>
<g >
<title>do_sys_poll (12 samples, 0.19%)</title><rect x="923.9" y="645" width="2.2" height="15.0" fill="rgb(234,174,46)" rx="2" ry="2" />
<text  x="926.87" y="655.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="883.2" y="581" width="0.2" height="15.0" fill="rgb(251,218,27)" rx="2" ry="2" />
<text  x="886.24" y="591.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.02%)</title><rect x="873.2" y="501" width="0.2" height="15.0" fill="rgb(211,214,29)" rx="2" ry="2" />
<text  x="876.17" y="511.5" ></text>
</g>
<g >
<title>llist_reverse_order (3 samples, 0.05%)</title><rect x="1166.6" y="613" width="0.5" height="15.0" fill="rgb(244,32,5)" rx="2" ry="2" />
<text  x="1169.57" y="623.5" ></text>
</g>
<g >
<title>set_bashopts (1 samples, 0.02%)</title><rect x="10.2" y="629" width="0.2" height="15.0" fill="rgb(215,224,22)" rx="2" ry="2" />
<text  x="13.18" y="639.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="591.3" y="453" width="0.2" height="15.0" fill="rgb(247,210,6)" rx="2" ry="2" />
<text  x="594.31" y="463.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (2 samples, 0.03%)</title><rect x="1161.4" y="565" width="0.4" height="15.0" fill="rgb(209,96,7)" rx="2" ry="2" />
<text  x="1164.45" y="575.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1169.0" y="565" width="0.1" height="15.0" fill="rgb(241,38,53)" rx="2" ry="2" />
<text  x="1171.95" y="575.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (2 samples, 0.03%)</title><rect x="962.3" y="325" width="0.4" height="15.0" fill="rgb(241,14,10)" rx="2" ry="2" />
<text  x="965.31" y="335.5" ></text>
</g>
<g >
<title>kthread_is_per_cpu (2 samples, 0.03%)</title><rect x="967.1" y="261" width="0.3" height="15.0" fill="rgb(232,174,17)" rx="2" ry="2" />
<text  x="970.07" y="271.5" ></text>
</g>
<g >
<title>dc_interrupt_ack (1 samples, 0.02%)</title><rect x="959.6" y="421" width="0.1" height="15.0" fill="rgb(233,64,6)" rx="2" ry="2" />
<text  x="962.56" y="431.5" ></text>
</g>
<g >
<title>ttwu_stat (1 samples, 0.02%)</title><rect x="996.2" y="405" width="0.2" height="15.0" fill="rgb(249,190,4)" rx="2" ry="2" />
<text  x="999.17" y="415.5" ></text>
</g>
<g >
<title>next_online_pgdat (1 samples, 0.02%)</title><rect x="1164.6" y="565" width="0.1" height="15.0" fill="rgb(205,62,49)" rx="2" ry="2" />
<text  x="1167.56" y="575.5" ></text>
</g>
<g >
<title>std::sync::once::Once::is_completed (1 samples, 0.02%)</title><rect x="444.0" y="437" width="0.1" height="15.0" fill="rgb(240,182,49)" rx="2" ry="2" />
<text  x="446.97" y="447.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="1153.2" y="533" width="0.2" height="15.0" fill="rgb(242,207,30)" rx="2" ry="2" />
<text  x="1156.21" y="543.5" ></text>
</g>
<g >
<title>amdgpu_sync_fence.part.0 (1 samples, 0.02%)</title><rect x="879.6" y="533" width="0.2" height="15.0" fill="rgb(232,121,54)" rx="2" ry="2" />
<text  x="882.58" y="543.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (16 samples, 0.25%)</title><rect x="375.0" y="485" width="2.9" height="15.0" fill="rgb(217,114,44)" rx="2" ry="2" />
<text  x="377.96" y="495.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (3 samples, 0.05%)</title><rect x="102.8" y="613" width="0.5" height="15.0" fill="rgb(218,35,31)" rx="2" ry="2" />
<text  x="105.80" y="623.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="527.4" y="453" width="0.2" height="15.0" fill="rgb(208,30,7)" rx="2" ry="2" />
<text  x="530.43" y="463.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.70%)</title><rect x="469.2" y="517" width="8.3" height="15.0" fill="rgb(223,136,33)" rx="2" ry="2" />
<text  x="472.22" y="527.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="873.0" y="517" width="0.2" height="15.0" fill="rgb(229,4,44)" rx="2" ry="2" />
<text  x="875.99" y="527.5" ></text>
</g>
<g >
<title>Process0Operands (1 samples, 0.02%)</title><rect x="101.5" y="565" width="0.2" height="15.0" fill="rgb(230,33,30)" rx="2" ry="2" />
<text  x="104.52" y="575.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.02%)</title><rect x="950.2" y="485" width="0.2" height="15.0" fill="rgb(216,9,14)" rx="2" ry="2" />
<text  x="953.23" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (1 samples, 0.02%)</title><rect x="33.6" y="661" width="0.2" height="15.0" fill="rgb(233,124,34)" rx="2" ry="2" />
<text  x="36.61" y="671.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (3 samples, 0.05%)</title><rect x="949.1" y="485" width="0.6" height="15.0" fill="rgb(251,4,7)" rx="2" ry="2" />
<text  x="952.13" y="495.5" ></text>
</g>
<g >
<title>page_flip_common (1 samples, 0.02%)</title><rect x="881.2" y="565" width="0.2" height="15.0" fill="rgb(217,164,9)" rx="2" ry="2" />
<text  x="884.23" y="575.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (51 samples, 0.79%)</title><rect x="958.6" y="549" width="9.4" height="15.0" fill="rgb(247,40,54)" rx="2" ry="2" />
<text  x="961.65" y="559.5" ></text>
</g>
<g >
<title>_start (2 samples, 0.03%)</title><rect x="720.5" y="693" width="0.4" height="15.0" fill="rgb(232,192,37)" rx="2" ry="2" />
<text  x="723.53" y="703.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (1 samples, 0.02%)</title><rect x="948.4" y="485" width="0.2" height="15.0" fill="rgb(229,107,23)" rx="2" ry="2" />
<text  x="951.40" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (2 samples, 0.03%)</title><rect x="103.7" y="261" width="0.4" height="15.0" fill="rgb(253,229,50)" rx="2" ry="2" />
<text  x="106.71" y="271.5" ></text>
</g>
<g >
<title>snd_pcm_update_hw_ptr (65 samples, 1.01%)</title><rect x="911.6" y="581" width="11.9" height="15.0" fill="rgb(239,126,24)" rx="2" ry="2" />
<text  x="914.61" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="103.0" y="517" width="0.2" height="15.0" fill="rgb(227,193,24)" rx="2" ry="2" />
<text  x="105.98" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1154.3" y="565" width="0.2" height="15.0" fill="rgb(218,205,8)" rx="2" ry="2" />
<text  x="1157.31" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="103.9" y="213" width="0.2" height="15.0" fill="rgb(226,96,5)" rx="2" ry="2" />
<text  x="106.89" y="223.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (7 samples, 0.11%)</title><rect x="963.2" y="229" width="1.3" height="15.0" fill="rgb(227,135,9)" rx="2" ry="2" />
<text  x="966.22" y="239.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.03%)</title><rect x="58.3" y="645" width="0.4" height="15.0" fill="rgb(216,149,1)" rx="2" ry="2" />
<text  x="61.32" y="655.5" ></text>
</g>
<g >
<title>azx_get_pos_skl (44 samples, 0.68%)</title><rect x="915.5" y="517" width="8.0" height="15.0" fill="rgb(246,74,17)" rx="2" ry="2" />
<text  x="918.45" y="527.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1170.2" y="565" width="0.2" height="15.0" fill="rgb(239,106,37)" rx="2" ry="2" />
<text  x="1173.23" y="575.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.03%)</title><rect x="945.7" y="645" width="0.3" height="15.0" fill="rgb(252,194,13)" rx="2" ry="2" />
<text  x="948.65" y="655.5" ></text>
</g>
<g >
<title>dm_read_reg_func (2 samples, 0.03%)</title><rect x="959.9" y="245" width="0.4" height="15.0" fill="rgb(253,121,18)" rx="2" ry="2" />
<text  x="962.93" y="255.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.02%)</title><rect x="720.5" y="677" width="0.2" height="15.0" fill="rgb(227,178,49)" rx="2" ry="2" />
<text  x="723.53" y="687.5" ></text>
</g>
<g >
<title>__switch_to (2 samples, 0.03%)</title><rect x="931.6" y="549" width="0.3" height="15.0" fill="rgb(241,66,0)" rx="2" ry="2" />
<text  x="934.56" y="559.5" ></text>
</g>
<g >
<title>start_kernel (65 samples, 1.01%)</title><rect x="1178.1" y="645" width="11.9" height="15.0" fill="rgb(242,138,20)" rx="2" ry="2" />
<text  x="1181.10" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="489.2" y="453" width="0.2" height="15.0" fill="rgb(242,197,39)" rx="2" ry="2" />
<text  x="492.17" y="463.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (26 samples, 0.40%)</title><rect x="727.3" y="517" width="4.8" height="15.0" fill="rgb(246,57,54)" rx="2" ry="2" />
<text  x="730.30" y="527.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.02%)</title><rect x="1157.2" y="581" width="0.2" height="15.0" fill="rgb(211,190,41)" rx="2" ry="2" />
<text  x="1160.24" y="591.5" ></text>
</g>
<g >
<title>__get_vblank_counter (7 samples, 0.11%)</title><rect x="959.9" y="357" width="1.3" height="15.0" fill="rgb(213,56,50)" rx="2" ry="2" />
<text  x="962.93" y="367.5" ></text>
</g>
<g >
<title>do_writev (15 samples, 0.23%)</title><rect x="940.7" y="645" width="2.8" height="15.0" fill="rgb(212,105,36)" rx="2" ry="2" />
<text  x="943.71" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="104.3" y="485" width="0.1" height="15.0" fill="rgb(238,195,24)" rx="2" ry="2" />
<text  x="107.26" y="495.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (1 samples, 0.02%)</title><rect x="947.9" y="501" width="0.1" height="15.0" fill="rgb(233,191,3)" rx="2" ry="2" />
<text  x="950.85" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1187.6" y="501" width="0.2" height="15.0" fill="rgb(212,157,22)" rx="2" ry="2" />
<text  x="1190.62" y="511.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.78%)</title><rect x="477.5" y="517" width="9.1" height="15.0" fill="rgb(211,137,12)" rx="2" ry="2" />
<text  x="480.46" y="527.5" ></text>
</g>
<g >
<title>perf_event_task_tick (13 samples, 0.20%)</title><rect x="982.6" y="405" width="2.4" height="15.0" fill="rgb(218,164,26)" rx="2" ry="2" />
<text  x="985.63" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (1 samples, 0.02%)</title><rect x="59.4" y="613" width="0.2" height="15.0" fill="rgb(212,14,32)" rx="2" ry="2" />
<text  x="62.42" y="623.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="102.1" y="501" width="0.1" height="15.0" fill="rgb(220,105,51)" rx="2" ry="2" />
<text  x="105.06" y="511.5" ></text>
</g>
<g >
<title>__GI___open_nocancel (1 samples, 0.02%)</title><rect x="10.5" y="533" width="0.2" height="15.0" fill="rgb(236,51,5)" rx="2" ry="2" />
<text  x="13.55" y="543.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (2 samples, 0.03%)</title><rect x="95.1" y="373" width="0.4" height="15.0" fill="rgb(210,121,17)" rx="2" ry="2" />
<text  x="98.11" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="477.5" y="437" width="0.1" height="15.0" fill="rgb(237,73,12)" rx="2" ry="2" />
<text  x="480.46" y="447.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (19 samples, 0.29%)</title><rect x="115.2" y="501" width="3.5" height="15.0" fill="rgb(221,68,18)" rx="2" ry="2" />
<text  x="118.24" y="511.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="720.5" y="501" width="0.2" height="15.0" fill="rgb(223,122,53)" rx="2" ry="2" />
<text  x="723.53" y="511.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="966.2" y="181" width="0.1" height="15.0" fill="rgb(248,1,1)" rx="2" ry="2" />
<text  x="969.15" y="191.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (1 samples, 0.02%)</title><rect x="948.4" y="501" width="0.2" height="15.0" fill="rgb(240,112,44)" rx="2" ry="2" />
<text  x="951.40" y="511.5" ></text>
</g>
<g >
<title>to_drm_sched_fence (1 samples, 0.02%)</title><rect x="879.4" y="549" width="0.2" height="15.0" fill="rgb(216,40,1)" rx="2" ry="2" />
<text  x="882.40" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (76 samples, 1.18%)</title><rect x="430.1" y="501" width="13.9" height="15.0" fill="rgb(209,49,28)" rx="2" ry="2" />
<text  x="433.06" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (23 samples, 0.36%)</title><rect x="603.8" y="517" width="4.2" height="15.0" fill="rgb(236,205,36)" rx="2" ry="2" />
<text  x="606.75" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="978.6" y="325" width="0.2" height="15.0" fill="rgb(207,72,43)" rx="2" ry="2" />
<text  x="981.60" y="335.5" ></text>
</g>
<g >
<title>refresh_cpu_vm_stats (1 samples, 0.02%)</title><rect x="1164.7" y="565" width="0.2" height="15.0" fill="rgb(244,45,36)" rx="2" ry="2" />
<text  x="1167.74" y="575.5" ></text>
</g>
<g >
<title>BitmapSetBit (2 samples, 0.03%)</title><rect x="101.1" y="549" width="0.4" height="15.0" fill="rgb(244,74,35)" rx="2" ry="2" />
<text  x="104.15" y="559.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (11 samples, 0.17%)</title><rect x="1179.0" y="517" width="2.0" height="15.0" fill="rgb(231,182,11)" rx="2" ry="2" />
<text  x="1182.02" y="527.5" ></text>
</g>
<g >
<title>NaClLog (7 samples, 0.11%)</title><rect x="91.6" y="661" width="1.3" height="15.0" fill="rgb(205,176,18)" rx="2" ry="2" />
<text  x="94.63" y="671.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (3 samples, 0.05%)</title><rect x="102.8" y="629" width="0.5" height="15.0" fill="rgb(242,227,20)" rx="2" ry="2" />
<text  x="105.80" y="639.5" ></text>
</g>
<g >
<title>kmalloc_large_node (2 samples, 0.03%)</title><rect x="951.0" y="533" width="0.3" height="15.0" fill="rgb(228,52,46)" rx="2" ry="2" />
<text  x="953.96" y="543.5" ></text>
</g>
<g >
<title>enter_lazy_tlb (1 samples, 0.02%)</title><rect x="1175.0" y="613" width="0.2" height="15.0" fill="rgb(214,33,27)" rx="2" ry="2" />
<text  x="1177.99" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (35 samples, 0.54%)</title><rect x="302.1" y="453" width="6.4" height="15.0" fill="rgb(211,55,14)" rx="2" ry="2" />
<text  x="305.12" y="463.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (5 samples, 0.08%)</title><rect x="30.9" y="261" width="0.9" height="15.0" fill="rgb(226,59,38)" rx="2" ry="2" />
<text  x="33.87" y="271.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (15 samples, 0.23%)</title><rect x="55.6" y="661" width="2.7" height="15.0" fill="rgb(245,31,49)" rx="2" ry="2" />
<text  x="58.57" y="671.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (2 samples, 0.03%)</title><rect x="103.7" y="341" width="0.4" height="15.0" fill="rgb(244,68,38)" rx="2" ry="2" />
<text  x="106.71" y="351.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="937.8" y="629" width="0.2" height="15.0" fill="rgb(232,178,36)" rx="2" ry="2" />
<text  x="940.78" y="639.5" ></text>
</g>
<g >
<title>follow_page_mask (1 samples, 0.02%)</title><rect x="702.6" y="485" width="0.2" height="15.0" fill="rgb(230,101,17)" rx="2" ry="2" />
<text  x="705.59" y="495.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="870.6" y="597" width="0.2" height="15.0" fill="rgb(243,2,50)" rx="2" ry="2" />
<text  x="873.61" y="607.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.02%)</title><rect x="702.4" y="565" width="0.2" height="15.0" fill="rgb(224,137,30)" rx="2" ry="2" />
<text  x="705.41" y="575.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="962.7" y="293" width="0.2" height="15.0" fill="rgb(248,200,25)" rx="2" ry="2" />
<text  x="965.68" y="303.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (1 samples, 0.02%)</title><rect x="702.4" y="661" width="0.2" height="15.0" fill="rgb(247,89,4)" rx="2" ry="2" />
<text  x="705.41" y="671.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.02%)</title><rect x="1169.9" y="501" width="0.1" height="15.0" fill="rgb(238,194,24)" rx="2" ry="2" />
<text  x="1172.87" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (37 samples, 0.57%)</title><rect x="562.8" y="437" width="6.7" height="15.0" fill="rgb(211,169,2)" rx="2" ry="2" />
<text  x="565.75" y="447.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.02%)</title><rect x="104.1" y="581" width="0.2" height="15.0" fill="rgb(230,0,51)" rx="2" ry="2" />
<text  x="107.08" y="591.5" ></text>
</g>
<g >
<title>NaClXMutexLock (23 samples, 0.36%)</title><rect x="87.4" y="645" width="4.2" height="15.0" fill="rgb(246,7,1)" rx="2" ry="2" />
<text  x="90.42" y="655.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="689.6" y="549" width="0.4" height="15.0" fill="rgb(235,119,41)" rx="2" ry="2" />
<text  x="692.59" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="730.2" y="405" width="0.2" height="15.0" fill="rgb(230,205,51)" rx="2" ry="2" />
<text  x="733.23" y="415.5" ></text>
</g>
<g >
<title>NaClGetDescMu (85 samples, 1.32%)</title><rect x="625.2" y="613" width="15.5" height="15.0" fill="rgb(218,130,27)" rx="2" ry="2" />
<text  x="628.17" y="623.5" ></text>
</g>
<g >
<title>psi_task_change (14 samples, 0.22%)</title><rect x="976.2" y="389" width="2.6" height="15.0" fill="rgb(252,104,42)" rx="2" ry="2" />
<text  x="979.22" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (3 samples, 0.05%)</title><rect x="1164.0" y="565" width="0.6" height="15.0" fill="rgb(240,161,46)" rx="2" ry="2" />
<text  x="1167.01" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (2 samples, 0.03%)</title><rect x="103.7" y="469" width="0.4" height="15.0" fill="rgb(205,46,19)" rx="2" ry="2" />
<text  x="106.71" y="479.5" ></text>
</g>
<g >
<title>pick_next_task_stop (1 samples, 0.02%)</title><rect x="1175.5" y="613" width="0.2" height="15.0" fill="rgb(234,74,50)" rx="2" ry="2" />
<text  x="1178.54" y="623.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="939.2" y="549" width="0.2" height="15.0" fill="rgb(248,201,37)" rx="2" ry="2" />
<text  x="942.25" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (5 samples, 0.08%)</title><rect x="1164.0" y="613" width="0.9" height="15.0" fill="rgb(250,169,29)" rx="2" ry="2" />
<text  x="1167.01" y="623.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (1,146 samples, 17.78%)</title><rect x="400.4" y="629" width="209.8" height="15.0" fill="rgb(244,109,20)" rx="2" ry="2" />
<text  x="403.40" y="639.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>amdgpu_device_rreg (2 samples, 0.03%)</title><rect x="959.9" y="213" width="0.4" height="15.0" fill="rgb(205,12,27)" rx="2" ry="2" />
<text  x="962.93" y="223.5" ></text>
</g>
<g >
<title>drm_sched_fence_finished (3 samples, 0.05%)</title><rect x="967.1" y="357" width="0.5" height="15.0" fill="rgb(246,61,13)" rx="2" ry="2" />
<text  x="970.07" y="367.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="103.9" y="149" width="0.2" height="15.0" fill="rgb(243,118,6)" rx="2" ry="2" />
<text  x="106.89" y="159.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.02%)</title><rect x="993.4" y="421" width="0.2" height="15.0" fill="rgb(236,156,32)" rx="2" ry="2" />
<text  x="996.42" y="431.5" ></text>
</g>
<g >
<title>__libc_write (2 samples, 0.03%)</title><rect x="33.2" y="581" width="0.4" height="15.0" fill="rgb(244,157,0)" rx="2" ry="2" />
<text  x="36.24" y="591.5" ></text>
</g>
<g >
<title>ext4_put_io_end_defer (1 samples, 0.02%)</title><rect x="968.3" y="357" width="0.2" height="15.0" fill="rgb(230,50,44)" rx="2" ry="2" />
<text  x="971.35" y="367.5" ></text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.02%)</title><rect x="925.9" y="613" width="0.2" height="15.0" fill="rgb(213,102,50)" rx="2" ry="2" />
<text  x="928.89" y="623.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.02%)</title><rect x="95.1" y="341" width="0.2" height="15.0" fill="rgb(212,45,40)" rx="2" ry="2" />
<text  x="98.11" y="351.5" ></text>
</g>
<g >
<title>amdgpu_ih_process (44 samples, 0.68%)</title><rect x="959.6" y="469" width="8.0" height="15.0" fill="rgb(239,13,20)" rx="2" ry="2" />
<text  x="962.56" y="479.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="966.7" y="309" width="0.2" height="15.0" fill="rgb(205,69,52)" rx="2" ry="2" />
<text  x="969.70" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (5 samples, 0.08%)</title><rect x="515.7" y="469" width="0.9" height="15.0" fill="rgb(215,131,6)" rx="2" ry="2" />
<text  x="518.71" y="479.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (34 samples, 0.53%)</title><rect x="597.3" y="533" width="6.3" height="15.0" fill="rgb(216,116,9)" rx="2" ry="2" />
<text  x="600.35" y="543.5" ></text>
</g>
<g >
<title>ip_list_rcv (2 samples, 0.03%)</title><rect x="969.4" y="373" width="0.4" height="15.0" fill="rgb(223,23,9)" rx="2" ry="2" />
<text  x="972.45" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="693.3" y="501" width="0.1" height="15.0" fill="rgb(244,90,44)" rx="2" ry="2" />
<text  x="696.25" y="511.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.02%)</title><rect x="871.9" y="485" width="0.2" height="15.0" fill="rgb(225,150,23)" rx="2" ry="2" />
<text  x="874.89" y="495.5" ></text>
</g>
<g >
<title>commit_tail (24 samples, 0.37%)</title><rect x="947.9" y="613" width="4.3" height="15.0" fill="rgb(254,78,5)" rx="2" ry="2" />
<text  x="950.85" y="623.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.16%)</title><rect x="600.1" y="469" width="1.8" height="15.0" fill="rgb(238,167,6)" rx="2" ry="2" />
<text  x="603.09" y="479.5" ></text>
</g>
<g >
<title>autoremove_wake_function (5 samples, 0.08%)</title><rect x="878.1" y="485" width="0.9" height="15.0" fill="rgb(207,124,38)" rx="2" ry="2" />
<text  x="881.12" y="495.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="702.4" y="453" width="0.2" height="15.0" fill="rgb(226,4,23)" rx="2" ry="2" />
<text  x="705.41" y="463.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.02%)</title><rect x="974.6" y="373" width="0.2" height="15.0" fill="rgb(243,207,44)" rx="2" ry="2" />
<text  x="977.57" y="383.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (1 samples, 0.02%)</title><rect x="962.1" y="197" width="0.2" height="15.0" fill="rgb(208,197,38)" rx="2" ry="2" />
<text  x="965.13" y="207.5" ></text>
</g>
<g >
<title>leave_mm (6 samples, 0.09%)</title><rect x="996.7" y="581" width="1.1" height="15.0" fill="rgb(226,129,35)" rx="2" ry="2" />
<text  x="999.72" y="591.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (1 samples, 0.02%)</title><rect x="732.2" y="613" width="0.2" height="15.0" fill="rgb(231,17,29)" rx="2" ry="2" />
<text  x="735.24" y="623.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.05%)</title><rect x="572.3" y="357" width="0.5" height="15.0" fill="rgb(206,46,53)" rx="2" ry="2" />
<text  x="575.27" y="367.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="610.9" y="613" width="0.2" height="15.0" fill="rgb(206,13,32)" rx="2" ry="2" />
<text  x="613.89" y="623.5" ></text>
</g>
<g >
<title>dm_read_reg_func (5 samples, 0.08%)</title><rect x="965.2" y="293" width="1.0" height="15.0" fill="rgb(234,207,19)" rx="2" ry="2" />
<text  x="968.24" y="303.5" ></text>
</g>
<g >
<title>scsi_io_completion (2 samples, 0.03%)</title><rect x="968.2" y="437" width="0.3" height="15.0" fill="rgb(216,175,34)" rx="2" ry="2" />
<text  x="971.17" y="447.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="104.3" y="389" width="0.1" height="15.0" fill="rgb(214,155,0)" rx="2" ry="2" />
<text  x="107.26" y="399.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="102.8" y="485" width="0.2" height="15.0" fill="rgb(217,50,31)" rx="2" ry="2" />
<text  x="105.80" y="495.5" ></text>
</g>
<g >
<title>handle_irq_event (50 samples, 0.78%)</title><rect x="958.6" y="517" width="9.2" height="15.0" fill="rgb(236,151,32)" rx="2" ry="2" />
<text  x="961.65" y="527.5" ></text>
</g>
<g >
<title>__note_gp_changes (1 samples, 0.02%)</title><rect x="988.8" y="453" width="0.2" height="15.0" fill="rgb(205,133,16)" rx="2" ry="2" />
<text  x="991.85" y="463.5" ></text>
</g>
<g >
<title>amdgpu_crtc_get_scanout_position (3 samples, 0.05%)</title><rect x="966.2" y="325" width="0.5" height="15.0" fill="rgb(252,119,48)" rx="2" ry="2" />
<text  x="969.15" y="335.5" ></text>
</g>
<g >
<title>__GI__IO_file_fopen (1 samples, 0.02%)</title><rect x="10.0" y="645" width="0.2" height="15.0" fill="rgb(248,192,43)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (4 samples, 0.06%)</title><rect x="882.5" y="581" width="0.7" height="15.0" fill="rgb(239,161,28)" rx="2" ry="2" />
<text  x="885.51" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.03%)</title><rect x="564.9" y="405" width="0.4" height="15.0" fill="rgb(228,162,34)" rx="2" ry="2" />
<text  x="567.95" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (3 samples, 0.05%)</title><rect x="103.5" y="549" width="0.6" height="15.0" fill="rgb(232,156,35)" rx="2" ry="2" />
<text  x="106.53" y="559.5" ></text>
</g>
<g >
<title>do_exit (27 samples, 0.42%)</title><rect x="727.3" y="629" width="4.9" height="15.0" fill="rgb(246,47,5)" rx="2" ry="2" />
<text  x="730.30" y="639.5" ></text>
</g>
<g >
<title>futex_wait (10 samples, 0.16%)</title><rect x="872.4" y="629" width="1.9" height="15.0" fill="rgb(236,219,3)" rx="2" ry="2" />
<text  x="875.44" y="639.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 0.98%)</title><rect x="13.5" y="373" width="11.5" height="15.0" fill="rgb(247,89,11)" rx="2" ry="2" />
<text  x="16.48" y="383.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (2 samples, 0.03%)</title><rect x="959.9" y="261" width="0.4" height="15.0" fill="rgb(235,9,6)" rx="2" ry="2" />
<text  x="962.93" y="271.5" ></text>
</g>
<g >
<title>enqueue_task (25 samples, 0.39%)</title><rect x="974.2" y="405" width="4.6" height="15.0" fill="rgb(252,127,51)" rx="2" ry="2" />
<text  x="977.21" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="527.4" y="469" width="0.2" height="15.0" fill="rgb(231,64,30)" rx="2" ry="2" />
<text  x="530.43" y="479.5" ></text>
</g>
<g >
<title>sock_recvmsg (5 samples, 0.08%)</title><rect x="939.2" y="597" width="1.0" height="15.0" fill="rgb(251,139,23)" rx="2" ry="2" />
<text  x="942.25" y="607.5" ></text>
</g>
<g >
<title>NaClRefCountRef (1 samples, 0.02%)</title><rect x="378.1" y="581" width="0.2" height="15.0" fill="rgb(217,214,46)" rx="2" ry="2" />
<text  x="381.08" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="945.5" y="581" width="0.2" height="15.0" fill="rgb(251,38,19)" rx="2" ry="2" />
<text  x="948.47" y="591.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="988.1" y="517" width="0.2" height="15.0" fill="rgb(235,35,23)" rx="2" ry="2" />
<text  x="991.12" y="527.5" ></text>
</g>
<g >
<title>drm_gem_object_lookup (1 samples, 0.02%)</title><rect x="877.0" y="549" width="0.2" height="15.0" fill="rgb(228,119,13)" rx="2" ry="2" />
<text  x="880.02" y="559.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="940.3" y="565" width="0.2" height="15.0" fill="rgb(235,112,10)" rx="2" ry="2" />
<text  x="943.35" y="575.5" ></text>
</g>
<g >
<title>NaClLoadTrampoline (1 samples, 0.02%)</title><rect x="103.3" y="629" width="0.2" height="15.0" fill="rgb(229,175,49)" rx="2" ry="2" />
<text  x="106.35" y="639.5" ></text>
</g>
<g >
<title>&lt;std::lazy::SyncLazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="444.0" y="533" width="0.1" height="15.0" fill="rgb(249,62,50)" rx="2" ry="2" />
<text  x="446.97" y="543.5" ></text>
</g>
<g >
<title>nf_ct_deliver_cached_events (1 samples, 0.02%)</title><rect x="969.4" y="261" width="0.2" height="15.0" fill="rgb(221,177,21)" rx="2" ry="2" />
<text  x="972.45" y="271.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="936.1" y="549" width="0.2" height="15.0" fill="rgb(234,119,47)" rx="2" ry="2" />
<text  x="939.14" y="559.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (2 samples, 0.03%)</title><rect x="702.4" y="677" width="0.4" height="15.0" fill="rgb(236,145,23)" rx="2" ry="2" />
<text  x="705.41" y="687.5" ></text>
</g>
<g >
<title>filename_lookup (1 samples, 0.02%)</title><rect x="103.2" y="261" width="0.1" height="15.0" fill="rgb(217,139,4)" rx="2" ry="2" />
<text  x="106.16" y="271.5" ></text>
</g>
<g >
<title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="962.1" y="229" width="0.2" height="15.0" fill="rgb(223,8,28)" rx="2" ry="2" />
<text  x="965.13" y="239.5" ></text>
</g>
<g >
<title>__realpath (1 samples, 0.02%)</title><rect x="103.2" y="389" width="0.1" height="15.0" fill="rgb(211,17,14)" rx="2" ry="2" />
<text  x="106.16" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.03%)</title><rect x="732.4" y="677" width="0.4" height="15.0" fill="rgb(252,208,28)" rx="2" ry="2" />
<text  x="735.42" y="687.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (22 samples, 0.34%)</title><rect x="618.8" y="581" width="4.0" height="15.0" fill="rgb(245,27,21)" rx="2" ry="2" />
<text  x="621.76" y="591.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (1 samples, 0.02%)</title><rect x="720.5" y="597" width="0.2" height="15.0" fill="rgb(243,116,29)" rx="2" ry="2" />
<text  x="723.53" y="607.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="985.4" y="469" width="0.2" height="15.0" fill="rgb(219,2,12)" rx="2" ry="2" />
<text  x="988.37" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.02%)</title><rect x="1189.5" y="565" width="0.1" height="15.0" fill="rgb(240,219,45)" rx="2" ry="2" />
<text  x="1192.45" y="575.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (2 samples, 0.03%)</title><rect x="966.3" y="197" width="0.4" height="15.0" fill="rgb(219,206,24)" rx="2" ry="2" />
<text  x="969.34" y="207.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.03%)</title><rect x="25.4" y="485" width="0.3" height="15.0" fill="rgb(208,125,22)" rx="2" ry="2" />
<text  x="28.37" y="495.5" ></text>
</g>
<g >
<title>update_curr_rt (1 samples, 0.02%)</title><rect x="933.4" y="517" width="0.2" height="15.0" fill="rgb(215,187,7)" rx="2" ry="2" />
<text  x="936.39" y="527.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="968.3" y="213" width="0.2" height="15.0" fill="rgb(247,101,35)" rx="2" ry="2" />
<text  x="971.35" y="223.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="995.6" y="421" width="0.2" height="15.0" fill="rgb(230,53,4)" rx="2" ry="2" />
<text  x="998.62" y="431.5" ></text>
</g>
<g >
<title>eventfd_poll (7 samples, 0.11%)</title><rect x="928.4" y="613" width="1.3" height="15.0" fill="rgb(218,75,48)" rx="2" ry="2" />
<text  x="931.45" y="623.5" ></text>
</g>
<g >
<title>amdgpu_irq_handler (1 samples, 0.02%)</title><rect x="968.0" y="405" width="0.2" height="15.0" fill="rgb(246,11,5)" rx="2" ry="2" />
<text  x="970.98" y="415.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (2 samples, 0.03%)</title><rect x="103.7" y="533" width="0.4" height="15.0" fill="rgb(211,146,31)" rx="2" ry="2" />
<text  x="106.71" y="543.5" ></text>
</g>
<g >
<title>dma_fence_release (2 samples, 0.03%)</title><rect x="877.7" y="485" width="0.4" height="15.0" fill="rgb(245,61,23)" rx="2" ry="2" />
<text  x="880.75" y="495.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="968.0" y="469" width="0.2" height="15.0" fill="rgb(233,148,16)" rx="2" ry="2" />
<text  x="970.98" y="479.5" ></text>
</g>
<g >
<title>amdgpu_bo_create_list_entry_array (1 samples, 0.02%)</title><rect x="876.8" y="565" width="0.2" height="15.0" fill="rgb(232,116,33)" rx="2" ry="2" />
<text  x="879.83" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.03%)</title><rect x="103.7" y="421" width="0.4" height="15.0" fill="rgb(215,76,48)" rx="2" ry="2" />
<text  x="106.71" y="431.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.02%)</title><rect x="720.5" y="613" width="0.2" height="15.0" fill="rgb(243,170,10)" rx="2" ry="2" />
<text  x="723.53" y="623.5" ></text>
</g>
<g >
<title>__GI___readlink (1 samples, 0.02%)</title><rect x="103.2" y="357" width="0.1" height="15.0" fill="rgb(219,193,38)" rx="2" ry="2" />
<text  x="106.16" y="367.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 0.09%)</title><rect x="872.8" y="581" width="1.1" height="15.0" fill="rgb(226,64,12)" rx="2" ry="2" />
<text  x="875.81" y="591.5" ></text>
</g>
<g >
<title>do_anonymous_page (88 samples, 1.36%)</title><rect x="681.9" y="581" width="16.1" height="15.0" fill="rgb(236,206,30)" rx="2" ry="2" />
<text  x="684.91" y="591.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="527.4" y="293" width="0.2" height="15.0" fill="rgb(253,112,21)" rx="2" ry="2" />
<text  x="530.43" y="303.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (12 samples, 0.19%)</title><rect x="113.0" y="517" width="2.2" height="15.0" fill="rgb(222,20,47)" rx="2" ry="2" />
<text  x="116.05" y="527.5" ></text>
</g>
<g >
<title>alloc_page_buffers (3 samples, 0.05%)</title><rect x="27.2" y="277" width="0.6" height="15.0" fill="rgb(235,94,52)" rx="2" ry="2" />
<text  x="30.20" y="287.5" ></text>
</g>
<g >
<title>put_timespec64 (1 samples, 0.02%)</title><rect x="938.3" y="629" width="0.2" height="15.0" fill="rgb(232,79,36)" rx="2" ry="2" />
<text  x="941.33" y="639.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (2 samples, 0.03%)</title><rect x="1162.7" y="581" width="0.4" height="15.0" fill="rgb(228,11,38)" rx="2" ry="2" />
<text  x="1165.73" y="591.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (2 samples, 0.03%)</title><rect x="959.9" y="197" width="0.4" height="15.0" fill="rgb(217,107,53)" rx="2" ry="2" />
<text  x="962.93" y="207.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="925.5" y="549" width="0.2" height="15.0" fill="rgb(208,210,44)" rx="2" ry="2" />
<text  x="928.52" y="559.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (3 samples, 0.05%)</title><rect x="524.9" y="469" width="0.5" height="15.0" fill="rgb(220,50,1)" rx="2" ry="2" />
<text  x="527.87" y="479.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (6 samples, 0.09%)</title><rect x="1166.6" y="629" width="1.1" height="15.0" fill="rgb(244,101,44)" rx="2" ry="2" />
<text  x="1169.57" y="639.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="968.3" y="181" width="0.2" height="15.0" fill="rgb(216,209,11)" rx="2" ry="2" />
<text  x="971.35" y="191.5" ></text>
</g>
<g >
<title>osq_lock (1 samples, 0.02%)</title><rect x="103.0" y="421" width="0.2" height="15.0" fill="rgb(247,35,7)" rx="2" ry="2" />
<text  x="105.98" y="431.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="527.4" y="389" width="0.2" height="15.0" fill="rgb(217,140,44)" rx="2" ry="2" />
<text  x="530.43" y="399.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (1 samples, 0.02%)</title><rect x="968.0" y="245" width="0.2" height="15.0" fill="rgb(231,77,52)" rx="2" ry="2" />
<text  x="970.98" y="255.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.02%)</title><rect x="377.9" y="517" width="0.2" height="15.0" fill="rgb(238,69,54)" rx="2" ry="2" />
<text  x="380.89" y="527.5" ></text>
</g>
<g >
<title>get_timespec64 (2 samples, 0.03%)</title><rect x="937.8" y="645" width="0.3" height="15.0" fill="rgb(234,73,20)" rx="2" ry="2" />
<text  x="940.78" y="655.5" ></text>
</g>
<g >
<title>core::cmp::min_by (3 samples, 0.05%)</title><rect x="488.3" y="485" width="0.5" height="15.0" fill="rgb(233,205,28)" rx="2" ry="2" />
<text  x="491.26" y="495.5" ></text>
</g>
<g >
<title>wb_workfn (2 samples, 0.03%)</title><rect x="952.4" y="629" width="0.4" height="15.0" fill="rgb(245,30,12)" rx="2" ry="2" />
<text  x="955.43" y="639.5" ></text>
</g>
<g >
<title>do_iter_write (2 samples, 0.03%)</title><rect x="33.2" y="437" width="0.4" height="15.0" fill="rgb(238,217,41)" rx="2" ry="2" />
<text  x="36.24" y="447.5" ></text>
</g>
<g >
<title>snd_ctl_elem_user_get (1 samples, 0.02%)</title><rect x="886.7" y="613" width="0.2" height="15.0" fill="rgb(253,122,12)" rx="2" ry="2" />
<text  x="889.72" y="623.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="924.8" y="533" width="0.2" height="15.0" fill="rgb(210,0,26)" rx="2" ry="2" />
<text  x="927.79" y="543.5" ></text>
</g>
<g >
<title>kthread_data (1 samples, 0.02%)</title><rect x="950.4" y="469" width="0.2" height="15.0" fill="rgb(208,208,42)" rx="2" ry="2" />
<text  x="953.41" y="479.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (2 samples, 0.03%)</title><rect x="401.3" y="613" width="0.4" height="15.0" fill="rgb(240,177,19)" rx="2" ry="2" />
<text  x="404.32" y="623.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.02%)</title><rect x="702.6" y="549" width="0.2" height="15.0" fill="rgb(232,83,8)" rx="2" ry="2" />
<text  x="705.59" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (82 samples, 1.27%)</title><rect x="120.4" y="517" width="15.0" height="15.0" fill="rgb(240,90,47)" rx="2" ry="2" />
<text  x="123.37" y="527.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="732.1" y="517" width="0.1" height="15.0" fill="rgb(215,14,42)" rx="2" ry="2" />
<text  x="735.06" y="527.5" ></text>
</g>
<g >
<title>user_path_at_empty (1 samples, 0.02%)</title><rect x="103.2" y="277" width="0.1" height="15.0" fill="rgb(206,214,26)" rx="2" ry="2" />
<text  x="106.16" y="287.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="732.1" y="533" width="0.1" height="15.0" fill="rgb(218,67,44)" rx="2" ry="2" />
<text  x="735.06" y="543.5" ></text>
</g>
<g >
<title>perf_event__prepare_comm (1 samples, 0.02%)</title><rect x="26.1" y="629" width="0.2" height="15.0" fill="rgb(205,120,25)" rx="2" ry="2" />
<text  x="29.11" y="639.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (1 samples, 0.02%)</title><rect x="428.4" y="549" width="0.2" height="15.0" fill="rgb(237,150,22)" rx="2" ry="2" />
<text  x="431.41" y="559.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (3 samples, 0.05%)</title><rect x="960.7" y="245" width="0.5" height="15.0" fill="rgb(210,47,32)" rx="2" ry="2" />
<text  x="963.66" y="255.5" ></text>
</g>
<g >
<title>dma_fence_signal (4 samples, 0.06%)</title><rect x="966.9" y="405" width="0.7" height="15.0" fill="rgb(249,45,16)" rx="2" ry="2" />
<text  x="969.89" y="415.5" ></text>
</g>
<g >
<title>do_epoll_pwait.part.0 (1 samples, 0.02%)</title><rect x="870.6" y="645" width="0.2" height="15.0" fill="rgb(238,118,47)" rx="2" ry="2" />
<text  x="873.61" y="655.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (3 samples, 0.05%)</title><rect x="25.2" y="533" width="0.5" height="15.0" fill="rgb(218,191,52)" rx="2" ry="2" />
<text  x="28.19" y="543.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.03%)</title><rect x="953.0" y="597" width="0.3" height="15.0" fill="rgb(205,147,14)" rx="2" ry="2" />
<text  x="955.98" y="607.5" ></text>
</g>
<g >
<title>get_typical_interval (15 samples, 0.23%)</title><rect x="1157.4" y="581" width="2.8" height="15.0" fill="rgb(214,11,37)" rx="2" ry="2" />
<text  x="1160.42" y="591.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="103.5" y="261" width="0.2" height="15.0" fill="rgb(221,152,22)" rx="2" ry="2" />
<text  x="106.53" y="271.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="102.8" y="501" width="0.2" height="15.0" fill="rgb(228,3,48)" rx="2" ry="2" />
<text  x="105.80" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.02%)</title><rect x="103.2" y="485" width="0.1" height="15.0" fill="rgb(207,200,16)" rx="2" ry="2" />
<text  x="106.16" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="33.2" y="549" width="0.4" height="15.0" fill="rgb(227,82,22)" rx="2" ry="2" />
<text  x="36.24" y="559.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="986.5" y="501" width="0.2" height="15.0" fill="rgb(225,149,34)" rx="2" ry="2" />
<text  x="989.47" y="511.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (1 samples, 0.02%)</title><rect x="968.0" y="277" width="0.2" height="15.0" fill="rgb(214,60,21)" rx="2" ry="2" />
<text  x="970.98" y="287.5" ></text>
</g>
<g >
<title>internal_get_user_pages_fast (1 samples, 0.02%)</title><rect x="874.3" y="581" width="0.2" height="15.0" fill="rgb(211,129,49)" rx="2" ry="2" />
<text  x="877.27" y="591.5" ></text>
</g>
<g >
<title>NaClDescRef (1 samples, 0.02%)</title><rect x="378.1" y="597" width="0.2" height="15.0" fill="rgb(253,193,24)" rx="2" ry="2" />
<text  x="381.08" y="607.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="516.6" y="421" width="0.2" height="15.0" fill="rgb(239,13,11)" rx="2" ry="2" />
<text  x="519.63" y="431.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="1177.9" y="565" width="0.2" height="15.0" fill="rgb(254,165,48)" rx="2" ry="2" />
<text  x="1180.92" y="575.5" ></text>
</g>
<g >
<title>release_pages (18 samples, 0.28%)</title><rect x="728.4" y="453" width="3.3" height="15.0" fill="rgb(206,141,4)" rx="2" ry="2" />
<text  x="731.40" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (36 samples, 0.56%)</title><rect x="302.1" y="469" width="6.6" height="15.0" fill="rgb(213,7,43)" rx="2" ry="2" />
<text  x="305.12" y="479.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="989.9" y="405" width="0.2" height="15.0" fill="rgb(243,62,3)" rx="2" ry="2" />
<text  x="992.95" y="415.5" ></text>
</g>
<g >
<title>azx_pcm_pointer (1 samples, 0.02%)</title><rect x="887.4" y="565" width="0.2" height="15.0" fill="rgb(237,0,17)" rx="2" ry="2" />
<text  x="890.45" y="575.5" ></text>
</g>
<g >
<title>rcu_irq_exit (1 samples, 0.02%)</title><rect x="996.4" y="549" width="0.1" height="15.0" fill="rgb(239,228,6)" rx="2" ry="2" />
<text  x="999.35" y="559.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1161.3" y="549" width="0.1" height="15.0" fill="rgb(240,199,42)" rx="2" ry="2" />
<text  x="1164.26" y="559.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1 samples, 0.02%)</title><rect x="95.3" y="341" width="0.2" height="15.0" fill="rgb(250,58,29)" rx="2" ry="2" />
<text  x="98.29" y="351.5" ></text>
</g>
<g >
<title>update_cfs_group (2 samples, 0.03%)</title><rect x="25.4" y="437" width="0.3" height="15.0" fill="rgb(223,28,46)" rx="2" ry="2" />
<text  x="28.37" y="447.5" ></text>
</g>
<g >
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="882.7" y="565" width="0.5" height="15.0" fill="rgb(216,22,1)" rx="2" ry="2" />
<text  x="885.69" y="575.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="947.3" y="501" width="0.2" height="15.0" fill="rgb(217,110,14)" rx="2" ry="2" />
<text  x="950.30" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (143 samples, 2.22%)</title><rect x="242.6" y="485" width="26.2" height="15.0" fill="rgb(220,225,17)" rx="2" ry="2" />
<text  x="245.63" y="495.5" >c..</text>
</g>
<g >
<title>NaClSysMunmapDecoder (1 samples, 0.02%)</title><rect x="104.3" y="661" width="0.1" height="15.0" fill="rgb(218,46,48)" rx="2" ry="2" />
<text  x="107.26" y="671.5" ></text>
</g>
<g >
<title>event_function_call (1 samples, 0.02%)</title><rect x="33.6" y="581" width="0.2" height="15.0" fill="rgb(206,163,26)" rx="2" ry="2" />
<text  x="36.61" y="591.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.02%)</title><rect x="104.3" y="437" width="0.1" height="15.0" fill="rgb(244,57,10)" rx="2" ry="2" />
<text  x="107.26" y="447.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.02%)</title><rect x="103.5" y="133" width="0.2" height="15.0" fill="rgb(236,89,31)" rx="2" ry="2" />
<text  x="106.53" y="143.5" ></text>
</g>
<g >
<title>ktime_get (2 samples, 0.03%)</title><rect x="987.0" y="533" width="0.4" height="15.0" fill="rgb(218,55,28)" rx="2" ry="2" />
<text  x="990.02" y="543.5" ></text>
</g>
<g >
<title>dequeue_task (2 samples, 0.03%)</title><rect x="25.4" y="469" width="0.3" height="15.0" fill="rgb(245,48,40)" rx="2" ry="2" />
<text  x="28.37" y="479.5" ></text>
</g>
<g >
<title>dm_read_reg_func (3 samples, 0.05%)</title><rect x="949.1" y="501" width="0.6" height="15.0" fill="rgb(235,118,8)" rx="2" ry="2" />
<text  x="952.13" y="511.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="27.9" y="261" width="0.2" height="15.0" fill="rgb(252,179,54)" rx="2" ry="2" />
<text  x="30.94" y="271.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (1 samples, 0.02%)</title><rect x="962.7" y="277" width="0.2" height="15.0" fill="rgb(254,13,9)" rx="2" ry="2" />
<text  x="965.68" y="287.5" ></text>
</g>
<g >
<title>__alloc_skb (4 samples, 0.06%)</title><rect x="941.6" y="501" width="0.8" height="15.0" fill="rgb(228,220,42)" rx="2" ry="2" />
<text  x="944.63" y="511.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (11 samples, 0.17%)</title><rect x="941.3" y="549" width="2.0" height="15.0" fill="rgb(234,121,49)" rx="2" ry="2" />
<text  x="944.26" y="559.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (4 samples, 0.06%)</title><rect x="924.4" y="597" width="0.8" height="15.0" fill="rgb(226,179,50)" rx="2" ry="2" />
<text  x="927.42" y="607.5" ></text>
</g>
<g >
<title>select_task_rq_rt (2 samples, 0.03%)</title><rect x="878.1" y="437" width="0.4" height="15.0" fill="rgb(230,138,25)" rx="2" ry="2" />
<text  x="881.12" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (70 samples, 1.09%)</title><rect x="312.6" y="453" width="12.8" height="15.0" fill="rgb(220,56,10)" rx="2" ry="2" />
<text  x="315.55" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (3 samples, 0.05%)</title><rect x="971.6" y="501" width="0.6" height="15.0" fill="rgb(222,205,51)" rx="2" ry="2" />
<text  x="974.64" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (4 samples, 0.06%)</title><rect x="869.5" y="693" width="0.7" height="15.0" fill="rgb(214,40,28)" rx="2" ry="2" />
<text  x="872.51" y="703.5" ></text>
</g>
<g >
<title>dma_fence_release (5 samples, 0.08%)</title><rect x="877.2" y="549" width="0.9" height="15.0" fill="rgb(243,28,43)" rx="2" ry="2" />
<text  x="880.20" y="559.5" ></text>
</g>
<g >
<title>do_group_exit (27 samples, 0.42%)</title><rect x="727.3" y="645" width="4.9" height="15.0" fill="rgb(235,194,28)" rx="2" ry="2" />
<text  x="730.30" y="655.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (5 samples, 0.08%)</title><rect x="76.4" y="661" width="1.0" height="15.0" fill="rgb(226,219,15)" rx="2" ry="2" />
<text  x="79.44" y="671.5" ></text>
</g>
<g >
<title>__fopen_internal (1 samples, 0.02%)</title><rect x="10.0" y="661" width="0.2" height="15.0" fill="rgb(240,24,32)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="103.9" y="197" width="0.2" height="15.0" fill="rgb(245,174,5)" rx="2" ry="2" />
<text  x="106.89" y="207.5" ></text>
</g>
<g >
<title>read_hpet (1 samples, 0.02%)</title><rect x="995.8" y="405" width="0.2" height="15.0" fill="rgb(248,81,16)" rx="2" ry="2" />
<text  x="998.80" y="415.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg (5 samples, 0.08%)</title><rect x="965.2" y="261" width="1.0" height="15.0" fill="rgb(248,120,23)" rx="2" ry="2" />
<text  x="968.24" y="271.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.02%)</title><rect x="702.6" y="517" width="0.2" height="15.0" fill="rgb(206,180,10)" rx="2" ry="2" />
<text  x="705.59" y="527.5" ></text>
</g>
<g >
<title>amdgpu_device_rreg.part.0 (3 samples, 0.05%)</title><rect x="960.7" y="229" width="0.5" height="15.0" fill="rgb(238,184,34)" rx="2" ry="2" />
<text  x="963.66" y="239.5" ></text>
</g>
<g >
<title>ion (37 samples, 0.57%)</title><rect x="26.5" y="565" width="6.7" height="15.0" fill="rgb(205,40,7)" rx="2" ry="2" />
<text  x="29.47" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (36 samples, 0.56%)</title><rect x="584.7" y="485" width="6.6" height="15.0" fill="rgb(218,100,21)" rx="2" ry="2" />
<text  x="587.72" y="495.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="29.2" y="229" width="0.4" height="15.0" fill="rgb(241,173,16)" rx="2" ry="2" />
<text  x="32.22" y="239.5" ></text>
</g>
<g >
<title>pick_next_task_fair (8 samples, 0.12%)</title><rect x="1169.0" y="597" width="1.4" height="15.0" fill="rgb(233,165,44)" rx="2" ry="2" />
<text  x="1171.95" y="607.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="728.2" y="437" width="0.2" height="15.0" fill="rgb(244,220,48)" rx="2" ry="2" />
<text  x="731.21" y="447.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.02%)</title><rect x="10.5" y="405" width="0.2" height="15.0" fill="rgb(215,29,15)" rx="2" ry="2" />
<text  x="13.55" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (22 samples, 0.34%)</title><rect x="473.4" y="469" width="4.1" height="15.0" fill="rgb(219,144,34)" rx="2" ry="2" />
<text  x="476.43" y="479.5" ></text>
</g>
<g >
<title>CheckMemoryAccess (1 samples, 0.02%)</title><rect x="101.0" y="565" width="0.1" height="15.0" fill="rgb(254,24,15)" rx="2" ry="2" />
<text  x="103.97" y="575.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.02%)</title><rect x="103.9" y="53" width="0.2" height="15.0" fill="rgb(249,43,28)" rx="2" ry="2" />
<text  x="106.89" y="63.5" ></text>
</g>
<g >
<title>update_wall_time (2 samples, 0.03%)</title><rect x="980.4" y="421" width="0.4" height="15.0" fill="rgb(212,49,29)" rx="2" ry="2" />
<text  x="983.43" y="431.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.02%)</title><rect x="936.7" y="565" width="0.2" height="15.0" fill="rgb(220,63,5)" rx="2" ry="2" />
<text  x="939.69" y="575.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (36 samples, 0.56%)</title><rect x="556.0" y="469" width="6.6" height="15.0" fill="rgb(215,176,33)" rx="2" ry="2" />
<text  x="558.98" y="479.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (5 samples, 0.08%)</title><rect x="958.6" y="485" width="1.0" height="15.0" fill="rgb(249,169,35)" rx="2" ry="2" />
<text  x="961.65" y="495.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (4 samples, 0.06%)</title><rect x="941.6" y="517" width="0.8" height="15.0" fill="rgb(213,9,10)" rx="2" ry="2" />
<text  x="944.63" y="527.5" ></text>
</g>
<g >
<title>call_rcu (1 samples, 0.02%)</title><rect x="877.6" y="485" width="0.1" height="15.0" fill="rgb(243,58,52)" rx="2" ry="2" />
<text  x="880.57" y="495.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="968.0" y="213" width="0.2" height="15.0" fill="rgb(228,154,29)" rx="2" ry="2" />
<text  x="970.98" y="223.5" ></text>
</g>
<g >
<title>__drm_atomic_helper_plane_duplicate_state (1 samples, 0.02%)</title><rect x="881.2" y="517" width="0.2" height="15.0" fill="rgb(219,174,1)" rx="2" ry="2" />
<text  x="884.23" y="527.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.02%)</title><rect x="102.4" y="613" width="0.2" height="15.0" fill="rgb(212,38,25)" rx="2" ry="2" />
<text  x="105.43" y="623.5" ></text>
</g>
<g >
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="33.4" y="357" width="0.2" height="15.0" fill="rgb(225,90,46)" rx="2" ry="2" />
<text  x="36.43" y="367.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.02%)</title><rect x="968.3" y="197" width="0.2" height="15.0" fill="rgb(230,222,12)" rx="2" ry="2" />
<text  x="971.35" y="207.5" ></text>
</g>
<g >
<title>alx_clean_rx_irq (2 samples, 0.03%)</title><rect x="968.7" y="437" width="0.4" height="15.0" fill="rgb(234,94,51)" rx="2" ry="2" />
<text  x="971.72" y="447.5" ></text>
</g>
<g >
<title>__get_user_nocheck_4 (1 samples, 0.02%)</title><rect x="872.4" y="613" width="0.2" height="15.0" fill="rgb(251,123,14)" rx="2" ry="2" />
<text  x="875.44" y="623.5" ></text>
</g>
<g >
<title>rebalance_domains (16 samples, 0.25%)</title><rect x="990.7" y="469" width="2.9" height="15.0" fill="rgb(229,185,41)" rx="2" ry="2" />
<text  x="993.68" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (23 samples, 0.36%)</title><rect x="465.0" y="453" width="4.2" height="15.0" fill="rgb(236,26,49)" rx="2" ry="2" />
<text  x="468.01" y="463.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="951.1" y="485" width="0.2" height="15.0" fill="rgb(217,76,38)" rx="2" ry="2" />
<text  x="954.14" y="495.5" ></text>
</g>
<g >
<title>drm_crtc_vblank_helper_get_vblank_timestamp_internal (6 samples, 0.09%)</title><rect x="961.2" y="325" width="1.1" height="15.0" fill="rgb(234,152,40)" rx="2" ry="2" />
<text  x="964.21" y="335.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (3 samples, 0.05%)</title><rect x="702.8" y="581" width="0.5" height="15.0" fill="rgb(245,59,21)" rx="2" ry="2" />
<text  x="705.77" y="591.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.02%)</title><rect x="104.3" y="309" width="0.1" height="15.0" fill="rgb(220,68,24)" rx="2" ry="2" />
<text  x="107.26" y="319.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="951.0" y="485" width="0.1" height="15.0" fill="rgb(232,118,33)" rx="2" ry="2" />
<text  x="953.96" y="495.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="103.5" y="277" width="0.2" height="15.0" fill="rgb(237,217,53)" rx="2" ry="2" />
<text  x="106.53" y="287.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.02%)</title><rect x="938.7" y="629" width="0.2" height="15.0" fill="rgb(207,215,25)" rx="2" ry="2" />
<text  x="941.70" y="639.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.03%)</title><rect x="953.0" y="581" width="0.3" height="15.0" fill="rgb(243,31,43)" rx="2" ry="2" />
<text  x="955.98" y="591.5" ></text>
</g>
<g >
<title>snd_ctl_find_id (16 samples, 0.25%)</title><rect x="883.8" y="597" width="2.9" height="15.0" fill="rgb(214,40,8)" rx="2" ry="2" />
<text  x="886.79" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="33.6" y="693" width="0.2" height="15.0" fill="rgb(243,191,39)" rx="2" ry="2" />
<text  x="36.61" y="703.5" ></text>
</g>
<g >
<title>irq_enter_rcu (2 samples, 0.03%)</title><rect x="970.0" y="565" width="0.4" height="15.0" fill="rgb(205,132,29)" rx="2" ry="2" />
<text  x="973.00" y="575.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (2 samples, 0.03%)</title><rect x="102.8" y="597" width="0.4" height="15.0" fill="rgb(236,138,8)" rx="2" ry="2" />
<text  x="105.80" y="607.5" ></text>
</g>
<g >
<title>create_empty_buffers (3 samples, 0.05%)</title><rect x="27.2" y="293" width="0.6" height="15.0" fill="rgb(228,33,46)" rx="2" ry="2" />
<text  x="30.20" y="303.5" ></text>
</g>
<g >
<title>schedule_idle (44 samples, 0.68%)</title><rect x="1167.7" y="629" width="8.0" height="15.0" fill="rgb(214,137,7)" rx="2" ry="2" />
<text  x="1170.67" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_write (2 samples, 0.03%)</title><rect x="33.2" y="533" width="0.4" height="15.0" fill="rgb(223,21,31)" rx="2" ry="2" />
<text  x="36.24" y="543.5" ></text>
</g>
<g >
<title>poll_freewait (1 samples, 0.02%)</title><rect x="25.9" y="549" width="0.2" height="15.0" fill="rgb(245,90,33)" rx="2" ry="2" />
<text  x="28.92" y="559.5" ></text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.02%)</title><rect x="875.2" y="549" width="0.2" height="15.0" fill="rgb(207,47,52)" rx="2" ry="2" />
<text  x="878.19" y="559.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (9 samples, 0.14%)</title><rect x="28.1" y="309" width="1.7" height="15.0" fill="rgb(232,218,33)" rx="2" ry="2" />
<text  x="31.12" y="319.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="509.3" y="453" width="0.2" height="15.0" fill="rgb(211,90,22)" rx="2" ry="2" />
<text  x="512.31" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (36 samples, 0.56%)</title><rect x="26.7" y="517" width="6.5" height="15.0" fill="rgb(229,165,37)" rx="2" ry="2" />
<text  x="29.66" y="527.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.03%)</title><rect x="95.1" y="437" width="0.4" height="15.0" fill="rgb(229,212,48)" rx="2" ry="2" />
<text  x="98.11" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (70 samples, 1.09%)</title><rect x="312.6" y="469" width="12.8" height="15.0" fill="rgb(230,89,23)" rx="2" ry="2" />
<text  x="315.55" y="479.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="720.5" y="245" width="0.2" height="15.0" fill="rgb(233,34,54)" rx="2" ry="2" />
<text  x="723.53" y="255.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (3 samples, 0.05%)</title><rect x="30.9" y="229" width="0.5" height="15.0" fill="rgb(222,190,22)" rx="2" ry="2" />
<text  x="33.87" y="239.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.06%)</title><rect x="34.2" y="677" width="0.7" height="15.0" fill="rgb(239,96,37)" rx="2" ry="2" />
<text  x="37.16" y="687.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (1 samples, 0.02%)</title><rect x="103.5" y="325" width="0.2" height="15.0" fill="rgb(248,110,53)" rx="2" ry="2" />
<text  x="106.53" y="335.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.03%)</title><rect x="873.0" y="533" width="0.4" height="15.0" fill="rgb(251,193,25)" rx="2" ry="2" />
<text  x="875.99" y="543.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="953.2" y="549" width="0.1" height="15.0" fill="rgb(235,162,6)" rx="2" ry="2" />
<text  x="956.16" y="559.5" ></text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.02%)</title><rect x="982.1" y="405" width="0.2" height="15.0" fill="rgb(216,61,10)" rx="2" ry="2" />
<text  x="985.08" y="415.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (2 samples, 0.03%)</title><rect x="948.6" y="485" width="0.3" height="15.0" fill="rgb(246,94,35)" rx="2" ry="2" />
<text  x="951.58" y="495.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (3 samples, 0.05%)</title><rect x="702.8" y="661" width="0.5" height="15.0" fill="rgb(246,171,8)" rx="2" ry="2" />
<text  x="705.77" y="671.5" ></text>
</g>
<g >
<title>lind_write (1,128 samples, 17.50%)</title><rect x="403.7" y="597" width="206.5" height="15.0" fill="rgb(244,63,13)" rx="2" ry="2" />
<text  x="406.70" y="607.5" >lind_write</text>
</g>
<g >
<title>menu_select (3 samples, 0.05%)</title><rect x="1185.4" y="533" width="0.6" height="15.0" fill="rgb(245,164,8)" rx="2" ry="2" />
<text  x="1188.42" y="543.5" ></text>
</g>
<g >
<title>import_iovec (2 samples, 0.03%)</title><rect x="940.2" y="613" width="0.3" height="15.0" fill="rgb(246,60,31)" rx="2" ry="2" />
<text  x="943.16" y="623.5" ></text>
</g>
<g >
<title>cpupri_set (1 samples, 0.02%)</title><rect x="974.8" y="357" width="0.1" height="15.0" fill="rgb(237,218,17)" rx="2" ry="2" />
<text  x="977.76" y="367.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="45.7" y="661" width="0.2" height="15.0" fill="rgb(210,174,44)" rx="2" ry="2" />
<text  x="48.69" y="671.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_init (1 samples, 0.02%)</title><rect x="444.0" y="501" width="0.1" height="15.0" fill="rgb(242,150,31)" rx="2" ry="2" />
<text  x="446.97" y="511.5" ></text>
</g>
<g >
<title>lockless_pages_from_mm (1 samples, 0.02%)</title><rect x="874.3" y="565" width="0.2" height="15.0" fill="rgb(247,201,45)" rx="2" ry="2" />
<text  x="877.27" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.05%)</title><rect x="45.9" y="677" width="0.5" height="15.0" fill="rgb(223,161,35)" rx="2" ry="2" />
<text  x="48.87" y="687.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (2 samples, 0.03%)</title><rect x="949.7" y="469" width="0.3" height="15.0" fill="rgb(250,43,25)" rx="2" ry="2" />
<text  x="952.68" y="479.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="477.5" y="453" width="0.1" height="15.0" fill="rgb(234,166,32)" rx="2" ry="2" />
<text  x="480.46" y="463.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.06%)</title><rect x="946.9" y="613" width="0.8" height="15.0" fill="rgb(241,214,26)" rx="2" ry="2" />
<text  x="949.94" y="623.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="516.6" y="453" width="0.2" height="15.0" fill="rgb(214,221,10)" rx="2" ry="2" />
<text  x="519.63" y="463.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="1189.5" y="549" width="0.1" height="15.0" fill="rgb(228,103,42)" rx="2" ry="2" />
<text  x="1192.45" y="559.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.02%)</title><rect x="732.1" y="581" width="0.1" height="15.0" fill="rgb(243,96,31)" rx="2" ry="2" />
<text  x="735.06" y="591.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (44 samples, 0.68%)</title><rect x="94.6" y="645" width="8.0" height="15.0" fill="rgb(234,32,49)" rx="2" ry="2" />
<text  x="97.56" y="655.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (8 samples, 0.12%)</title><rect x="944.2" y="661" width="1.5" height="15.0" fill="rgb(241,20,50)" rx="2" ry="2" />
<text  x="947.19" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.03%)</title><rect x="574.1" y="421" width="0.4" height="15.0" fill="rgb(249,218,13)" rx="2" ry="2" />
<text  x="577.10" y="431.5" ></text>
</g>
<g >
<title>napi_poll (8 samples, 0.12%)</title><rect x="968.5" y="469" width="1.5" height="15.0" fill="rgb(226,106,28)" rx="2" ry="2" />
<text  x="971.53" y="479.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="698.6" y="629" width="0.1" height="15.0" fill="rgb(223,147,54)" rx="2" ry="2" />
<text  x="701.56" y="639.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (6 samples, 0.09%)</title><rect x="525.4" y="485" width="1.1" height="15.0" fill="rgb(239,224,3)" rx="2" ry="2" />
<text  x="528.41" y="495.5" ></text>
</g>
<g >
<title>skb_set_owner_w (1 samples, 0.02%)</title><rect x="942.4" y="517" width="0.1" height="15.0" fill="rgb(244,217,1)" rx="2" ry="2" />
<text  x="945.36" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (3 samples, 0.05%)</title><rect x="36.5" y="677" width="0.6" height="15.0" fill="rgb(222,136,0)" rx="2" ry="2" />
<text  x="39.54" y="687.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="1189.3" y="533" width="0.2" height="15.0" fill="rgb(224,62,27)" rx="2" ry="2" />
<text  x="1192.27" y="543.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (3 samples, 0.05%)</title><rect x="966.2" y="261" width="0.5" height="15.0" fill="rgb(231,37,25)" rx="2" ry="2" />
<text  x="969.15" y="271.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="1177.0" y="581" width="0.2" height="15.0" fill="rgb(211,164,17)" rx="2" ry="2" />
<text  x="1180.00" y="591.5" ></text>
</g>
<g >
<title>_perf_ioctl (77 samples, 1.19%)</title><rect x="10.9" y="517" width="14.1" height="15.0" fill="rgb(253,102,11)" rx="2" ry="2" />
<text  x="13.92" y="527.5" ></text>
</g>
<g >
<title>blk_done_softirq (2 samples, 0.03%)</title><rect x="968.2" y="485" width="0.3" height="15.0" fill="rgb(212,147,47)" rx="2" ry="2" />
<text  x="971.17" y="495.5" ></text>
</g>
<g >
<title>___sys_recvmsg (9 samples, 0.14%)</title><rect x="938.9" y="629" width="1.6" height="15.0" fill="rgb(246,183,42)" rx="2" ry="2" />
<text  x="941.88" y="639.5" ></text>
</g>
<g >
<title>amdgpu_irq_dispatch (1 samples, 0.02%)</title><rect x="968.0" y="373" width="0.2" height="15.0" fill="rgb(218,89,48)" rx="2" ry="2" />
<text  x="970.98" y="383.5" ></text>
</g>
<g >
<title>fault_dirty_shared_page (1 samples, 0.02%)</title><rect x="702.4" y="389" width="0.2" height="15.0" fill="rgb(252,47,26)" rx="2" ry="2" />
<text  x="705.41" y="399.5" ></text>
</g>
<g >
<title>shmem_fault (2 samples, 0.03%)</title><rect x="95.1" y="389" width="0.4" height="15.0" fill="rgb(236,50,27)" rx="2" ry="2" />
<text  x="98.11" y="399.5" ></text>
</g>
<g >
<title>drm_atomic_helper_check_modeset (1 samples, 0.02%)</title><rect x="879.9" y="517" width="0.2" height="15.0" fill="rgb(250,54,45)" rx="2" ry="2" />
<text  x="882.95" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.03%)</title><rect x="574.1" y="437" width="0.4" height="15.0" fill="rgb(228,172,46)" rx="2" ry="2" />
<text  x="577.10" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="103.5" y="469" width="0.2" height="15.0" fill="rgb(213,69,17)" rx="2" ry="2" />
<text  x="106.53" y="479.5" ></text>
</g>
<g >
<title>__sys_recvmsg (9 samples, 0.14%)</title><rect x="938.9" y="645" width="1.6" height="15.0" fill="rgb(214,68,46)" rx="2" ry="2" />
<text  x="941.88" y="655.5" ></text>
</g>
<g >
<title>__pm_runtime_resume (1 samples, 0.02%)</title><rect x="875.6" y="629" width="0.1" height="15.0" fill="rgb(225,215,33)" rx="2" ry="2" />
<text  x="878.55" y="639.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="489.0" y="437" width="0.2" height="15.0" fill="rgb(240,12,46)" rx="2" ry="2" />
<text  x="491.99" y="447.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.03%)</title><rect x="103.7" y="309" width="0.4" height="15.0" fill="rgb(241,152,48)" rx="2" ry="2" />
<text  x="106.71" y="319.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (4 samples, 0.06%)</title><rect x="719.8" y="677" width="0.7" height="15.0" fill="rgb(229,50,21)" rx="2" ry="2" />
<text  x="722.79" y="687.5" ></text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.03%)</title><rect x="574.8" y="485" width="0.4" height="15.0" fill="rgb(247,218,44)" rx="2" ry="2" />
<text  x="577.83" y="495.5" ></text>
</g>
</g>
</svg>
