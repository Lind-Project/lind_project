<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>idle_cpu (1 samples, 0.06%)</title><rect x="1077.1" y="277" width="0.7" height="15.0" fill="rgb(215,109,25)" rx="2" ry="2" />
<text  x="1080.08" y="287.5" ></text>
</g>
<g >
<title>alloc_page_buffers (21 samples, 1.35%)</title><rect x="514.7" y="309" width="16.0" height="15.0" fill="rgb(245,179,40)" rx="2" ry="2" />
<text  x="517.74" y="319.5" ></text>
</g>
<g >
<title>all (1,557 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(222,25,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.06%)</title><rect x="776.2" y="469" width="0.8" height="15.0" fill="rgb(205,185,11)" rx="2" ry="2" />
<text  x="779.20" y="479.5" ></text>
</g>
<g >
<title>mark_page_accessed (30 samples, 1.93%)</title><rect x="459.4" y="357" width="22.8" height="15.0" fill="rgb(238,81,30)" rx="2" ry="2" />
<text  x="462.42" y="367.5" >m..</text>
</g>
<g >
<title>__libc_write (338 samples, 21.71%)</title><rect x="483.7" y="581" width="256.1" height="15.0" fill="rgb(214,223,54)" rx="2" ry="2" />
<text  x="486.67" y="591.5" >__libc_write</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="11.5" y="501" width="0.8" height="15.0" fill="rgb(205,228,11)" rx="2" ry="2" />
<text  x="14.52" y="511.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (3 samples, 0.19%)</title><rect x="946.7" y="85" width="2.3" height="15.0" fill="rgb(238,150,21)" rx="2" ry="2" />
<text  x="949.72" y="95.5" ></text>
</g>
<g >
<title>new_sync_read (119 samples, 7.64%)</title><rect x="392.7" y="485" width="90.2" height="15.0" fill="rgb(205,200,50)" rx="2" ry="2" />
<text  x="395.72" y="495.5" >new_sync_r..</text>
</g>
<g >
<title>ksys_read (1 samples, 0.06%)</title><rect x="72.9" y="517" width="0.8" height="15.0" fill="rgb(250,227,38)" rx="2" ry="2" />
<text  x="75.90" y="527.5" ></text>
</g>
<g >
<title>ovl_llseek (2 samples, 0.13%)</title><rect x="388.9" y="501" width="1.5" height="15.0" fill="rgb(215,185,8)" rx="2" ry="2" />
<text  x="391.93" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.06%)</title><rect x="995.2" y="549" width="0.8" height="15.0" fill="rgb(221,114,38)" rx="2" ry="2" />
<text  x="998.23" y="559.5" ></text>
</g>
<g >
<title>__cancel_dirty_page (6 samples, 0.39%)</title><rect x="946.7" y="117" width="4.6" height="15.0" fill="rgb(220,156,53)" rx="2" ry="2" />
<text  x="949.72" y="127.5" ></text>
</g>
<g >
<title>ovl_write_iter (2 samples, 0.13%)</title><rect x="73.7" y="469" width="1.5" height="15.0" fill="rgb(254,144,44)" rx="2" ry="2" />
<text  x="76.66" y="479.5" ></text>
</g>
<g >
<title>drain_obj_stock (2 samples, 0.13%)</title><rect x="967.2" y="53" width="1.5" height="15.0" fill="rgb(240,22,11)" rx="2" ry="2" />
<text  x="970.19" y="63.5" ></text>
</g>
<g >
<title>start_this_handle (6 samples, 0.39%)</title><rect x="506.4" y="309" width="4.6" height="15.0" fill="rgb(254,186,10)" rx="2" ry="2" />
<text  x="509.40" y="319.5" ></text>
</g>
<g >
<title>find_get_entry (2 samples, 0.13%)</title><rect x="627.7" y="309" width="1.5" height="15.0" fill="rgb(234,140,8)" rx="2" ry="2" />
<text  x="630.66" y="319.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.06%)</title><rect x="73.7" y="341" width="0.7" height="15.0" fill="rgb(219,221,8)" rx="2" ry="2" />
<text  x="76.66" y="351.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (38 samples, 2.44%)</title><rect x="512.5" y="341" width="28.8" height="15.0" fill="rgb(247,113,19)" rx="2" ry="2" />
<text  x="515.47" y="351.5" >ex..</text>
</g>
<g >
<title>ext4_file_write_iter (2 samples, 0.13%)</title><rect x="73.7" y="405" width="1.5" height="15.0" fill="rgb(211,215,33)" rx="2" ry="2" />
<text  x="76.66" y="415.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_page (1 samples, 0.06%)</title><rect x="529.9" y="293" width="0.8" height="15.0" fill="rgb(244,179,52)" rx="2" ry="2" />
<text  x="532.90" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (5 samples, 0.32%)</title><rect x="556.4" y="277" width="3.8" height="15.0" fill="rgb(225,4,1)" rx="2" ry="2" />
<text  x="559.42" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.06%)</title><rect x="386.7" y="533" width="0.7" height="15.0" fill="rgb(252,205,36)" rx="2" ry="2" />
<text  x="389.66" y="543.5" ></text>
</g>
<g >
<title>alx_mask_msix (1 samples, 0.06%)</title><rect x="1073.3" y="357" width="0.7" height="15.0" fill="rgb(221,170,22)" rx="2" ry="2" />
<text  x="1076.29" y="367.5" ></text>
</g>
<g >
<title>do_iter_write (2 samples, 0.13%)</title><rect x="73.7" y="437" width="1.5" height="15.0" fill="rgb(241,41,35)" rx="2" ry="2" />
<text  x="76.66" y="447.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.19%)</title><rect x="657.2" y="245" width="2.3" height="15.0" fill="rgb(239,66,15)" rx="2" ry="2" />
<text  x="660.22" y="255.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="74.4" y="277" width="0.8" height="15.0" fill="rgb(253,88,44)" rx="2" ry="2" />
<text  x="77.42" y="287.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.06%)</title><rect x="1062.7" y="517" width="0.7" height="15.0" fill="rgb(239,131,12)" rx="2" ry="2" />
<text  x="1065.68" y="527.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.19%)</title><rect x="916.4" y="181" width="2.3" height="15.0" fill="rgb(236,27,33)" rx="2" ry="2" />
<text  x="919.41" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="776.2" y="549" width="0.8" height="15.0" fill="rgb(227,164,49)" rx="2" ry="2" />
<text  x="779.20" y="559.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.06%)</title><rect x="897.5" y="181" width="0.7" height="15.0" fill="rgb(251,165,27)" rx="2" ry="2" />
<text  x="900.46" y="191.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (28 samples, 1.80%)</title><rect x="643.6" y="325" width="21.2" height="15.0" fill="rgb(206,226,9)" rx="2" ry="2" />
<text  x="646.58" y="335.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.06%)</title><rect x="543.5" y="309" width="0.8" height="15.0" fill="rgb(253,41,26)" rx="2" ry="2" />
<text  x="546.54" y="319.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.13%)</title><rect x="75.2" y="453" width="1.5" height="15.0" fill="rgb(253,0,16)" rx="2" ry="2" />
<text  x="78.18" y="463.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (21 samples, 1.35%)</title><rect x="698.9" y="277" width="15.9" height="15.0" fill="rgb(226,156,16)" rx="2" ry="2" />
<text  x="701.90" y="287.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (2 samples, 0.13%)</title><rect x="683.7" y="245" width="1.6" height="15.0" fill="rgb(231,214,41)" rx="2" ry="2" />
<text  x="686.74" y="255.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.06%)</title><rect x="974.8" y="389" width="0.7" height="15.0" fill="rgb(223,12,25)" rx="2" ry="2" />
<text  x="977.77" y="399.5" ></text>
</g>
<g >
<title>wait_for_stable_page (1 samples, 0.06%)</title><rect x="629.2" y="341" width="0.7" height="15.0" fill="rgb(209,33,1)" rx="2" ry="2" />
<text  x="632.18" y="351.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (3 samples, 0.19%)</title><rect x="1164.2" y="437" width="2.3" height="15.0" fill="rgb(224,215,48)" rx="2" ry="2" />
<text  x="1167.23" y="447.5" ></text>
</g>
<g >
<title>radix_tree_node_rcu_free (1 samples, 0.06%)</title><rect x="1076.3" y="325" width="0.8" height="15.0" fill="rgb(244,42,50)" rx="2" ry="2" />
<text  x="1079.32" y="335.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (1 samples, 0.06%)</title><rect x="996.0" y="549" width="0.7" height="15.0" fill="rgb(225,133,26)" rx="2" ry="2" />
<text  x="998.99" y="559.5" ></text>
</g>
<g >
<title>ext4_fc_track_inode (1 samples, 0.06%)</title><rect x="668.6" y="277" width="0.7" height="15.0" fill="rgb(215,36,25)" rx="2" ry="2" />
<text  x="671.59" y="287.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (5 samples, 0.32%)</title><rect x="1160.4" y="453" width="3.8" height="15.0" fill="rgb(239,19,40)" rx="2" ry="2" />
<text  x="1163.44" y="463.5" ></text>
</g>
<g >
<title>destroy_inode (107 samples, 6.87%)</title><rect x="889.1" y="437" width="81.1" height="15.0" fill="rgb(223,90,8)" rx="2" ry="2" />
<text  x="892.13" y="447.5" >destroy_i..</text>
</g>
<g >
<title>newidle_balance (16 samples, 1.03%)</title><rect x="1171.1" y="469" width="12.1" height="15.0" fill="rgb(247,23,19)" rx="2" ry="2" />
<text  x="1174.05" y="479.5" ></text>
</g>
<g >
<title>_perf_event_enable (2 samples, 0.13%)</title><rect x="75.2" y="485" width="1.5" height="15.0" fill="rgb(215,58,16)" rx="2" ry="2" />
<text  x="78.18" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.06%)</title><rect x="1074.8" y="389" width="0.8" height="15.0" fill="rgb(243,91,3)" rx="2" ry="2" />
<text  x="1077.80" y="399.5" ></text>
</g>
<g >
<title>exit_mm (4 samples, 0.26%)</title><rect x="971.7" y="501" width="3.1" height="15.0" fill="rgb(228,118,10)" rx="2" ry="2" />
<text  x="974.73" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (2 samples, 0.13%)</title><rect x="75.2" y="549" width="1.5" height="15.0" fill="rgb(237,107,35)" rx="2" ry="2" />
<text  x="78.18" y="559.5" ></text>
</g>
<g >
<title>__dentry_kill (107 samples, 6.87%)</title><rect x="889.1" y="373" width="81.1" height="15.0" fill="rgb(241,169,43)" rx="2" ry="2" />
<text  x="892.13" y="383.5" >__dentry_..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4 samples, 0.26%)</title><rect x="1074.8" y="453" width="3.0" height="15.0" fill="rgb(234,181,34)" rx="2" ry="2" />
<text  x="1077.80" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.06%)</title><rect x="385.9" y="581" width="0.8" height="15.0" fill="rgb(236,170,52)" rx="2" ry="2" />
<text  x="388.90" y="591.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (2 samples, 0.13%)</title><rect x="666.3" y="293" width="1.5" height="15.0" fill="rgb(206,56,51)" rx="2" ry="2" />
<text  x="669.31" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.06%)</title><rect x="996.0" y="437" width="0.7" height="15.0" fill="rgb(226,98,13)" rx="2" ry="2" />
<text  x="998.99" y="447.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.06%)</title><rect x="485.2" y="485" width="0.7" height="15.0" fill="rgb(229,86,35)" rx="2" ry="2" />
<text  x="488.18" y="495.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (166 samples, 10.66%)</title><rect x="1064.2" y="581" width="125.8" height="15.0" fill="rgb(222,169,35)" rx="2" ry="2" />
<text  x="1067.19" y="591.5" >secondary_start..</text>
</g>
<g >
<title>security_file_permission (1 samples, 0.06%)</title><rect x="482.9" y="469" width="0.8" height="15.0" fill="rgb(242,192,13)" rx="2" ry="2" />
<text  x="485.91" y="479.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (5 samples, 0.32%)</title><rect x="915.7" y="197" width="3.7" height="15.0" fill="rgb(214,121,36)" rx="2" ry="2" />
<text  x="918.65" y="207.5" ></text>
</g>
<g >
<title>lind (5 samples, 0.32%)</title><rect x="10.0" y="597" width="3.8" height="15.0" fill="rgb(219,43,28)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (77 samples, 4.95%)</title><rect x="14.5" y="533" width="58.4" height="15.0" fill="rgb(242,7,50)" rx="2" ry="2" />
<text  x="17.55" y="543.5" >__x64_..</text>
</g>
<g >
<title>__GI___tunables_init (1 samples, 0.06%)</title><rect x="12.3" y="581" width="0.7" height="15.0" fill="rgb(230,193,17)" rx="2" ry="2" />
<text  x="15.27" y="591.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.06%)</title><rect x="996.0" y="581" width="0.7" height="15.0" fill="rgb(242,99,38)" rx="2" ry="2" />
<text  x="998.99" y="591.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.06%)</title><rect x="1076.3" y="341" width="0.8" height="15.0" fill="rgb(231,118,8)" rx="2" ry="2" />
<text  x="1079.32" y="351.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.06%)</title><rect x="996.0" y="501" width="0.7" height="15.0" fill="rgb(249,194,34)" rx="2" ry="2" />
<text  x="998.99" y="511.5" ></text>
</g>
<g >
<title>iput (107 samples, 6.87%)</title><rect x="889.1" y="341" width="81.1" height="15.0" fill="rgb(232,203,24)" rx="2" ry="2" />
<text  x="892.13" y="351.5" >iput</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (2 samples, 0.13%)</title><rect x="973.2" y="405" width="1.6" height="15.0" fill="rgb(223,191,29)" rx="2" ry="2" />
<text  x="976.25" y="415.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.06%)</title><rect x="484.4" y="517" width="0.8" height="15.0" fill="rgb(220,223,47)" rx="2" ry="2" />
<text  x="487.43" y="527.5" ></text>
</g>
<g >
<title>CopyBundleHeads (1 samples, 0.06%)</title><rect x="78.2" y="581" width="0.8" height="15.0" fill="rgb(248,88,26)" rx="2" ry="2" />
<text  x="81.21" y="591.5" ></text>
</g>
<g >
<title>create_empty_buffers (1 samples, 0.06%)</title><rect x="511.7" y="341" width="0.8" height="15.0" fill="rgb(246,217,42)" rx="2" ry="2" />
<text  x="514.71" y="351.5" ></text>
</g>
<g >
<title>ovl_real_fdget (1 samples, 0.06%)</title><rect x="388.9" y="485" width="0.8" height="15.0" fill="rgb(230,155,15)" rx="2" ry="2" />
<text  x="391.93" y="495.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (4 samples, 0.26%)</title><rect x="899.7" y="165" width="3.1" height="15.0" fill="rgb(223,130,45)" rx="2" ry="2" />
<text  x="902.74" y="175.5" ></text>
</g>
<g >
<title>__slab_alloc (4 samples, 0.26%)</title><rect x="517.0" y="261" width="3.0" height="15.0" fill="rgb(244,197,34)" rx="2" ry="2" />
<text  x="520.01" y="271.5" ></text>
</g>
<g >
<title>ksys_write (2 samples, 0.13%)</title><rect x="73.7" y="517" width="1.5" height="15.0" fill="rgb(231,63,15)" rx="2" ry="2" />
<text  x="76.66" y="527.5" ></text>
</g>
<g >
<title>ext4_releasepage (31 samples, 1.99%)</title><rect x="945.2" y="165" width="23.5" height="15.0" fill="rgb(242,128,38)" rx="2" ry="2" />
<text  x="948.21" y="175.5" >e..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.13%)</title><rect x="73.7" y="565" width="1.5" height="15.0" fill="rgb(207,222,30)" rx="2" ry="2" />
<text  x="76.66" y="575.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.06%)</title><rect x="1073.3" y="389" width="0.7" height="15.0" fill="rgb(214,83,17)" rx="2" ry="2" />
<text  x="1076.29" y="399.5" ></text>
</g>
<g >
<title>try_to_release_page (31 samples, 1.99%)</title><rect x="945.2" y="181" width="23.5" height="15.0" fill="rgb(211,4,35)" rx="2" ry="2" />
<text  x="948.21" y="191.5" >t..</text>
</g>
<g >
<title>ovl_update_time (1 samples, 0.06%)</title><rect x="392.7" y="421" width="0.8" height="15.0" fill="rgb(218,32,54)" rx="2" ry="2" />
<text  x="395.72" y="431.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.13%)</title><rect x="73.7" y="485" width="1.5" height="15.0" fill="rgb(230,113,18)" rx="2" ry="2" />
<text  x="76.66" y="495.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (2 samples, 0.13%)</title><rect x="992.2" y="469" width="1.5" height="15.0" fill="rgb(249,226,3)" rx="2" ry="2" />
<text  x="995.20" y="479.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (1 samples, 0.06%)</title><rect x="992.2" y="421" width="0.8" height="15.0" fill="rgb(206,14,6)" rx="2" ry="2" />
<text  x="995.20" y="431.5" ></text>
</g>
<g >
<title>uncharge_batch (3 samples, 0.19%)</title><rect x="902.8" y="181" width="2.2" height="15.0" fill="rgb(213,119,6)" rx="2" ry="2" />
<text  x="905.77" y="191.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.06%)</title><rect x="1187.7" y="437" width="0.8" height="15.0" fill="rgb(254,156,27)" rx="2" ry="2" />
<text  x="1190.73" y="447.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.13%)</title><rect x="992.2" y="485" width="1.5" height="15.0" fill="rgb(213,110,10)" rx="2" ry="2" />
<text  x="995.20" y="495.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="742.9" y="405" width="0.7" height="15.0" fill="rgb(241,120,1)" rx="2" ry="2" />
<text  x="745.86" y="415.5" ></text>
</g>
<g >
<title>remote_function (2 samples, 0.13%)</title><rect x="75.2" y="421" width="1.5" height="15.0" fill="rgb(223,75,14)" rx="2" ry="2" />
<text  x="78.18" y="431.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (81 samples, 5.20%)</title><rect x="394.2" y="325" width="61.4" height="15.0" fill="rgb(220,125,30)" rx="2" ry="2" />
<text  x="397.24" y="335.5" >copy_u..</text>
</g>
<g >
<title>__perf_event_enable (2 samples, 0.13%)</title><rect x="75.2" y="389" width="1.5" height="15.0" fill="rgb(224,154,43)" rx="2" ry="2" />
<text  x="78.18" y="399.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (2 samples, 0.13%)</title><rect x="975.5" y="469" width="1.5" height="15.0" fill="rgb(253,100,31)" rx="2" ry="2" />
<text  x="978.52" y="479.5" ></text>
</g>
<g >
<title>__find_get_block (1 samples, 0.06%)</title><rect x="392.7" y="277" width="0.8" height="15.0" fill="rgb(236,153,17)" rx="2" ry="2" />
<text  x="395.72" y="287.5" ></text>
</g>
<g >
<title>workingset_age_nonresident (4 samples, 0.26%)</title><rect x="479.1" y="325" width="3.1" height="15.0" fill="rgb(214,224,25)" rx="2" ry="2" />
<text  x="482.12" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="11.5" y="517" width="0.8" height="15.0" fill="rgb(237,10,33)" rx="2" ry="2" />
<text  x="14.52" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="512.5" y="325" width="0.7" height="15.0" fill="rgb(248,101,15)" rx="2" ry="2" />
<text  x="515.47" y="335.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.06%)</title><rect x="386.7" y="469" width="0.7" height="15.0" fill="rgb(216,103,7)" rx="2" ry="2" />
<text  x="389.66" y="479.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.06%)</title><rect x="992.2" y="389" width="0.8" height="15.0" fill="rgb(219,179,29)" rx="2" ry="2" />
<text  x="995.20" y="399.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.0 (1 samples, 0.06%)</title><rect x="700.4" y="229" width="0.8" height="15.0" fill="rgb(232,104,0)" rx="2" ry="2" />
<text  x="703.42" y="239.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.06%)</title><rect x="972.5" y="437" width="0.7" height="15.0" fill="rgb(208,25,33)" rx="2" ry="2" />
<text  x="975.49" y="447.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.06%)</title><rect x="392.7" y="373" width="0.8" height="15.0" fill="rgb(227,125,41)" rx="2" ry="2" />
<text  x="395.72" y="383.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.06%)</title><rect x="529.1" y="277" width="0.8" height="15.0" fill="rgb(227,199,47)" rx="2" ry="2" />
<text  x="532.14" y="287.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.13%)</title><rect x="664.8" y="277" width="1.5" height="15.0" fill="rgb(220,27,22)" rx="2" ry="2" />
<text  x="667.80" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.06%)</title><rect x="996.0" y="469" width="0.7" height="15.0" fill="rgb(218,215,36)" rx="2" ry="2" />
<text  x="998.99" y="479.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.13%)</title><rect x="701.9" y="261" width="1.5" height="15.0" fill="rgb(241,113,38)" rx="2" ry="2" />
<text  x="704.93" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (5 samples, 0.32%)</title><rect x="971.7" y="549" width="3.8" height="15.0" fill="rgb(209,90,4)" rx="2" ry="2" />
<text  x="974.73" y="559.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.06%)</title><rect x="213.9" y="581" width="0.7" height="15.0" fill="rgb(217,105,54)" rx="2" ry="2" />
<text  x="216.87" y="591.5" ></text>
</g>
<g >
<title>__GI___fork (1 samples, 0.06%)</title><rect x="11.5" y="581" width="0.8" height="15.0" fill="rgb(253,23,19)" rx="2" ry="2" />
<text  x="14.52" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;rustposix::safeposix::filesystem::FilesystemMetadata&gt;&gt; (1 samples, 0.06%)</title><rect x="994.5" y="565" width="0.7" height="15.0" fill="rgb(245,62,27)" rx="2" ry="2" />
<text  x="997.47" y="575.5" ></text>
</g>
<g >
<title>kick_ilb (7 samples, 0.45%)</title><rect x="1177.9" y="437" width="5.3" height="15.0" fill="rgb(210,221,45)" rx="2" ry="2" />
<text  x="1180.87" y="447.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.06%)</title><rect x="640.5" y="277" width="0.8" height="15.0" fill="rgb(253,176,14)" rx="2" ry="2" />
<text  x="643.55" y="287.5" ></text>
</g>
<g >
<title>proc_pid_status (1 samples, 0.06%)</title><rect x="72.9" y="437" width="0.8" height="15.0" fill="rgb(216,58,48)" rx="2" ry="2" />
<text  x="75.90" y="447.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.06%)</title><rect x="972.5" y="421" width="0.7" height="15.0" fill="rgb(216,205,38)" rx="2" ry="2" />
<text  x="975.49" y="431.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.06%)</title><rect x="1166.5" y="517" width="0.8" height="15.0" fill="rgb(252,2,54)" rx="2" ry="2" />
<text  x="1169.51" y="527.5" ></text>
</g>
<g >
<title>native_write_msr (63 samples, 4.05%)</title><rect x="23.6" y="309" width="47.8" height="15.0" fill="rgb(208,109,47)" rx="2" ry="2" />
<text  x="26.64" y="319.5" >nati..</text>
</g>
<g >
<title>unlock_page (2 samples, 0.13%)</title><rect x="736.0" y="357" width="1.6" height="15.0" fill="rgb(212,166,52)" rx="2" ry="2" />
<text  x="739.04" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (60 samples, 3.85%)</title><rect x="582.2" y="293" width="45.5" height="15.0" fill="rgb(224,0,8)" rx="2" ry="2" />
<text  x="585.19" y="303.5" >__al..</text>
</g>
<g >
<title>load_balance (1 samples, 0.06%)</title><rect x="1062.7" y="469" width="0.7" height="15.0" fill="rgb(230,77,43)" rx="2" ry="2" />
<text  x="1065.68" y="479.5" ></text>
</g>
<g >
<title>__pagevec_release (21 samples, 1.35%)</title><rect x="890.6" y="229" width="16.0" height="15.0" fill="rgb(229,224,49)" rx="2" ry="2" />
<text  x="893.64" y="239.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (35 samples, 2.25%)</title><rect x="153.2" y="581" width="26.6" height="15.0" fill="rgb(209,98,45)" rx="2" ry="2" />
<text  x="156.24" y="591.5" >N..</text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.13%)</title><rect x="557.9" y="245" width="1.6" height="15.0" fill="rgb(250,213,38)" rx="2" ry="2" />
<text  x="560.94" y="255.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.06%)</title><rect x="995.2" y="533" width="0.8" height="15.0" fill="rgb(221,229,5)" rx="2" ry="2" />
<text  x="998.23" y="543.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="388.2" y="501" width="0.7" height="15.0" fill="rgb(215,43,20)" rx="2" ry="2" />
<text  x="391.18" y="511.5" ></text>
</g>
<g >
<title>unlock_page_memcg (1 samples, 0.06%)</title><rect x="664.0" y="293" width="0.8" height="15.0" fill="rgb(208,223,19)" rx="2" ry="2" />
<text  x="667.04" y="303.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.06%)</title><rect x="72.9" y="485" width="0.8" height="15.0" fill="rgb(237,55,21)" rx="2" ry="2" />
<text  x="75.90" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (4 samples, 0.26%)</title><rect x="1183.2" y="517" width="3.0" height="15.0" fill="rgb(234,73,4)" rx="2" ry="2" />
<text  x="1186.18" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="511.0" y="325" width="0.7" height="15.0" fill="rgb(215,173,42)" rx="2" ry="2" />
<text  x="513.95" y="335.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.06%)</title><rect x="1185.5" y="469" width="0.7" height="15.0" fill="rgb(250,207,0)" rx="2" ry="2" />
<text  x="1188.45" y="479.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (112 samples, 7.19%)</title><rect x="1071.8" y="485" width="84.9" height="15.0" fill="rgb(240,103,27)" rx="2" ry="2" />
<text  x="1074.77" y="495.5" >cpuidle_e..</text>
</g>
<g >
<title>find_get_entry (1 samples, 0.06%)</title><rect x="743.6" y="373" width="0.8" height="15.0" fill="rgb(215,118,26)" rx="2" ry="2" />
<text  x="746.62" y="383.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (1 samples, 0.06%)</title><rect x="996.0" y="533" width="0.7" height="15.0" fill="rgb(234,220,22)" rx="2" ry="2" />
<text  x="998.99" y="543.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (1 samples, 0.06%)</title><rect x="276.8" y="565" width="0.7" height="15.0" fill="rgb(215,12,19)" rx="2" ry="2" />
<text  x="279.77" y="575.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.06%)</title><rect x="475.3" y="261" width="0.8" height="15.0" fill="rgb(225,17,16)" rx="2" ry="2" />
<text  x="478.33" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (1 samples, 0.06%)</title><rect x="994.5" y="485" width="0.7" height="15.0" fill="rgb(208,176,9)" rx="2" ry="2" />
<text  x="997.47" y="495.5" ></text>
</g>
<g >
<title>PageHuge (1 samples, 0.06%)</title><rect x="457.9" y="325" width="0.8" height="15.0" fill="rgb(220,182,37)" rx="2" ry="2" />
<text  x="460.90" y="335.5" ></text>
</g>
<g >
<title>node_page_state (1 samples, 0.06%)</title><rect x="611.0" y="261" width="0.7" height="15.0" fill="rgb(227,229,46)" rx="2" ry="2" />
<text  x="613.99" y="271.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (67 samples, 4.30%)</title><rect x="664.8" y="309" width="50.8" height="15.0" fill="rgb(215,8,53)" rx="2" ry="2" />
<text  x="667.80" y="319.5" >ext4_..</text>
</g>
<g >
<title>ext4_buffered_write_iter (332 samples, 21.32%)</title><rect x="487.5" y="389" width="251.6" height="15.0" fill="rgb(252,206,53)" rx="2" ry="2" />
<text  x="490.46" y="399.5" >ext4_buffered_write_iter</text>
</g>
<g >
<title>itoa::&lt;impl itoa::private::Sealed for u64&gt;::write (1 samples, 0.06%)</title><rect x="992.2" y="405" width="0.8" height="15.0" fill="rgb(227,161,26)" rx="2" ry="2" />
<text  x="995.20" y="415.5" ></text>
</g>
<g >
<title>iput.part.0 (107 samples, 6.87%)</title><rect x="889.1" y="325" width="81.1" height="15.0" fill="rgb(224,124,4)" rx="2" ry="2" />
<text  x="892.13" y="335.5" >iput.part.0</text>
</g>
<g >
<title>ext4_da_write_end (114 samples, 7.32%)</title><rect x="629.9" y="357" width="86.4" height="15.0" fill="rgb(227,226,45)" rx="2" ry="2" />
<text  x="632.94" y="367.5" >ext4_da_wr..</text>
</g>
<g >
<title>ovl_d_real (1 samples, 0.06%)</title><rect x="486.7" y="437" width="0.8" height="15.0" fill="rgb(214,13,16)" rx="2" ry="2" />
<text  x="489.70" y="447.5" ></text>
</g>
<g >
<title>__unlink (107 samples, 6.87%)</title><rect x="889.1" y="581" width="81.1" height="15.0" fill="rgb(222,194,54)" rx="2" ry="2" />
<text  x="892.13" y="591.5" >__unlink</text>
</g>
<g >
<title>ext4_es_lookup_extent (1 samples, 0.06%)</title><rect x="540.5" y="309" width="0.8" height="15.0" fill="rgb(219,17,9)" rx="2" ry="2" />
<text  x="543.51" y="319.5" ></text>
</g>
<g >
<title>llist_reverse_order (1 samples, 0.06%)</title><rect x="1168.8" y="501" width="0.7" height="15.0" fill="rgb(253,78,21)" rx="2" ry="2" />
<text  x="1171.78" y="511.5" ></text>
</g>
<g >
<title>__getblk_gfp (1 samples, 0.06%)</title><rect x="392.7" y="293" width="0.8" height="15.0" fill="rgb(236,125,52)" rx="2" ry="2" />
<text  x="395.72" y="303.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.06%)</title><rect x="1074.8" y="309" width="0.8" height="15.0" fill="rgb(212,38,39)" rx="2" ry="2" />
<text  x="1077.80" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.06%)</title><rect x="996.0" y="389" width="0.7" height="15.0" fill="rgb(246,137,6)" rx="2" ry="2" />
<text  x="998.99" y="399.5" ></text>
</g>
<g >
<title>__brelse (2 samples, 0.13%)</title><rect x="672.4" y="261" width="1.5" height="15.0" fill="rgb(250,204,12)" rx="2" ry="2" />
<text  x="675.38" y="271.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (2 samples, 0.13%)</title><rect x="664.8" y="293" width="1.5" height="15.0" fill="rgb(237,6,42)" rx="2" ry="2" />
<text  x="667.80" y="303.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (118 samples, 7.58%)</title><rect x="393.5" y="405" width="89.4" height="15.0" fill="rgb(240,151,49)" rx="2" ry="2" />
<text  x="396.48" y="415.5" >ext4_file_..</text>
</g>
<g >
<title>__do_munmap (1 samples, 0.06%)</title><rect x="386.7" y="501" width="0.7" height="15.0" fill="rgb(210,128,12)" rx="2" ry="2" />
<text  x="389.66" y="511.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (131 samples, 8.41%)</title><rect x="1067.2" y="517" width="99.3" height="15.0" fill="rgb(232,25,43)" rx="2" ry="2" />
<text  x="1070.23" y="527.5" >cpuidle_idle..</text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.06%)</title><rect x="503.4" y="309" width="0.7" height="15.0" fill="rgb(205,72,9)" rx="2" ry="2" />
<text  x="506.37" y="319.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.06%)</title><rect x="1075.6" y="389" width="0.7" height="15.0" fill="rgb(247,132,17)" rx="2" ry="2" />
<text  x="1078.56" y="399.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (2 samples, 0.13%)</title><rect x="992.2" y="533" width="1.5" height="15.0" fill="rgb(253,14,35)" rx="2" ry="2" />
<text  x="995.20" y="543.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="11.5" y="421" width="0.8" height="15.0" fill="rgb(238,159,22)" rx="2" ry="2" />
<text  x="14.52" y="431.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (4 samples, 0.26%)</title><rect x="698.9" y="261" width="3.0" height="15.0" fill="rgb(248,170,36)" rx="2" ry="2" />
<text  x="701.90" y="271.5" ></text>
</g>
<g >
<title>event_function (64 samples, 4.11%)</title><rect x="22.9" y="389" width="48.5" height="15.0" fill="rgb(220,138,45)" rx="2" ry="2" />
<text  x="25.88" y="399.5" >even..</text>
</g>
<g >
<title>jbd2_journal_stop (14 samples, 0.90%)</title><rect x="630.7" y="325" width="10.6" height="15.0" fill="rgb(207,84,10)" rx="2" ry="2" />
<text  x="633.69" y="335.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (24 samples, 1.54%)</title><rect x="717.1" y="357" width="18.2" height="15.0" fill="rgb(228,31,50)" rx="2" ry="2" />
<text  x="720.09" y="367.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.06%)</title><rect x="776.2" y="437" width="0.8" height="15.0" fill="rgb(228,211,23)" rx="2" ry="2" />
<text  x="779.20" y="447.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="476.1" y="261" width="0.7" height="15.0" fill="rgb(222,16,36)" rx="2" ry="2" />
<text  x="479.09" y="271.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (2 samples, 0.13%)</title><rect x="1165.0" y="421" width="1.5" height="15.0" fill="rgb(212,98,31)" rx="2" ry="2" />
<text  x="1167.99" y="431.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.06%)</title><rect x="1073.3" y="437" width="0.7" height="15.0" fill="rgb(223,228,16)" rx="2" ry="2" />
<text  x="1076.29" y="447.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.06%)</title><rect x="1076.3" y="373" width="0.8" height="15.0" fill="rgb(247,195,10)" rx="2" ry="2" />
<text  x="1079.32" y="383.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.06%)</title><rect x="391.2" y="517" width="0.8" height="15.0" fill="rgb(253,146,0)" rx="2" ry="2" />
<text  x="394.21" y="527.5" ></text>
</g>
<g >
<title>ksys_read (121 samples, 7.77%)</title><rect x="392.0" y="517" width="91.7" height="15.0" fill="rgb(244,7,26)" rx="2" ry="2" />
<text  x="394.97" y="527.5" >ksys_read</text>
</g>
<g >
<title>ext4_get_inode_loc (1 samples, 0.06%)</title><rect x="392.7" y="325" width="0.8" height="15.0" fill="rgb(228,98,2)" rx="2" ry="2" />
<text  x="395.72" y="335.5" ></text>
</g>
<g >
<title>_perf_event_enable (64 samples, 4.11%)</title><rect x="22.9" y="469" width="48.5" height="15.0" fill="rgb(244,141,45)" rx="2" ry="2" />
<text  x="25.88" y="479.5" >_per..</text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.06%)</title><rect x="1187.7" y="501" width="0.8" height="15.0" fill="rgb(238,190,12)" rx="2" ry="2" />
<text  x="1190.73" y="511.5" ></text>
</g>
<g >
<title>ext4_es_can_be_merged.isra.0 (1 samples, 0.06%)</title><rect x="538.2" y="245" width="0.8" height="15.0" fill="rgb(248,121,12)" rx="2" ry="2" />
<text  x="541.23" y="255.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 4.05%)</title><rect x="23.6" y="325" width="47.8" height="15.0" fill="rgb(239,50,11)" rx="2" ry="2" />
<text  x="26.64" y="335.5" >inte..</text>
</g>
<g >
<title>_perf_ioctl (2 samples, 0.13%)</title><rect x="75.2" y="517" width="1.5" height="15.0" fill="rgb(221,212,15)" rx="2" ry="2" />
<text  x="78.18" y="527.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.06%)</title><rect x="1062.7" y="485" width="0.7" height="15.0" fill="rgb(209,47,17)" rx="2" ry="2" />
<text  x="1065.68" y="495.5" ></text>
</g>
<g >
<title>do_shared_fault (2 samples, 0.13%)</title><rect x="742.9" y="453" width="1.5" height="15.0" fill="rgb(223,113,6)" rx="2" ry="2" />
<text  x="745.86" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (337 samples, 21.64%)</title><rect x="484.4" y="549" width="255.4" height="15.0" fill="rgb(233,176,27)" rx="2" ry="2" />
<text  x="487.43" y="559.5" >do_syscall_64</text>
</g>
<g >
<title>native_write_msr (2 samples, 0.13%)</title><rect x="75.2" y="325" width="1.5" height="15.0" fill="rgb(249,210,35)" rx="2" ry="2" />
<text  x="78.18" y="335.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2 samples, 0.13%)</title><rect x="1073.3" y="469" width="1.5" height="15.0" fill="rgb(234,174,12)" rx="2" ry="2" />
<text  x="1076.29" y="479.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.06%)</title><rect x="1187.0" y="501" width="0.7" height="15.0" fill="rgb(217,126,35)" rx="2" ry="2" />
<text  x="1189.97" y="511.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (78 samples, 5.01%)</title><rect x="1077.8" y="469" width="59.1" height="15.0" fill="rgb(239,33,13)" rx="2" ry="2" />
<text  x="1080.84" y="479.5" >mwait_..</text>
</g>
<g >
<title>mark_buffer_dirty (26 samples, 1.67%)</title><rect x="645.1" y="309" width="19.7" height="15.0" fill="rgb(208,226,31)" rx="2" ry="2" />
<text  x="648.09" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.13%)</title><rect x="975.5" y="565" width="1.5" height="15.0" fill="rgb(229,167,16)" rx="2" ry="2" />
<text  x="978.52" y="575.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (57 samples, 3.66%)</title><rect x="926.3" y="229" width="43.2" height="15.0" fill="rgb(254,217,2)" rx="2" ry="2" />
<text  x="929.26" y="239.5" >trun..</text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.13%)</title><rect x="1179.4" y="405" width="1.5" height="15.0" fill="rgb(239,221,34)" rx="2" ry="2" />
<text  x="1182.39" y="415.5" ></text>
</g>
<g >
<title>generic_update_time (1 samples, 0.06%)</title><rect x="488.2" y="341" width="0.8" height="15.0" fill="rgb(236,163,2)" rx="2" ry="2" />
<text  x="491.21" y="351.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (116 samples, 7.45%)</title><rect x="541.3" y="341" width="87.9" height="15.0" fill="rgb(249,212,36)" rx="2" ry="2" />
<text  x="544.27" y="351.5" >grab_cache..</text>
</g>
<g >
<title>__set_page_dirty (18 samples, 1.16%)</title><rect x="649.6" y="293" width="13.7" height="15.0" fill="rgb(232,22,5)" rx="2" ry="2" />
<text  x="652.64" y="303.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.06%)</title><rect x="1077.1" y="373" width="0.7" height="15.0" fill="rgb(233,121,12)" rx="2" ry="2" />
<text  x="1080.08" y="383.5" ></text>
</g>
<g >
<title>iput_final (107 samples, 6.87%)</title><rect x="889.1" y="309" width="81.1" height="15.0" fill="rgb(236,213,38)" rx="2" ry="2" />
<text  x="892.13" y="319.5" >iput_final</text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (1 samples, 0.06%)</title><rect x="179.8" y="581" width="0.7" height="15.0" fill="rgb(216,54,16)" rx="2" ry="2" />
<text  x="182.76" y="591.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.06%)</title><rect x="969.5" y="245" width="0.7" height="15.0" fill="rgb(223,28,40)" rx="2" ry="2" />
<text  x="972.46" y="255.5" ></text>
</g>
<g >
<title>xas_find (1 samples, 0.06%)</title><rect x="925.5" y="213" width="0.8" height="15.0" fill="rgb(205,99,18)" rx="2" ry="2" />
<text  x="928.50" y="223.5" ></text>
</g>
<g >
<title>zap_pte_range (2 samples, 0.13%)</title><rect x="973.2" y="389" width="1.6" height="15.0" fill="rgb(233,152,1)" rx="2" ry="2" />
<text  x="976.25" y="399.5" ></text>
</g>
<g >
<title>dec_zone_page_state (1 samples, 0.06%)</title><rect x="949.8" y="101" width="0.7" height="15.0" fill="rgb(239,104,19)" rx="2" ry="2" />
<text  x="952.76" y="111.5" ></text>
</g>
<g >
<title>perf_ioctl (2 samples, 0.13%)</title><rect x="75.2" y="533" width="1.5" height="15.0" fill="rgb(219,65,40)" rx="2" ry="2" />
<text  x="78.18" y="543.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3 samples, 0.19%)</title><rect x="916.4" y="165" width="2.3" height="15.0" fill="rgb(247,97,21)" rx="2" ry="2" />
<text  x="919.41" y="175.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (18 samples, 1.16%)</title><rect x="515.5" y="277" width="13.6" height="15.0" fill="rgb(232,91,29)" rx="2" ry="2" />
<text  x="518.50" y="287.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.06%)</title><rect x="971.0" y="581" width="0.7" height="15.0" fill="rgb(216,51,10)" rx="2" ry="2" />
<text  x="973.98" y="591.5" ></text>
</g>
<g >
<title>free_buffer_head (20 samples, 1.28%)</title><rect x="953.5" y="117" width="15.2" height="15.0" fill="rgb(244,39,26)" rx="2" ry="2" />
<text  x="956.55" y="127.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.06%)</title><rect x="386.7" y="421" width="0.7" height="15.0" fill="rgb(240,170,7)" rx="2" ry="2" />
<text  x="389.66" y="431.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.06%)</title><rect x="974.8" y="341" width="0.7" height="15.0" fill="rgb(209,55,44)" rx="2" ry="2" />
<text  x="977.77" y="351.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="735.3" y="357" width="0.7" height="15.0" fill="rgb(237,173,42)" rx="2" ry="2" />
<text  x="738.28" y="367.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (20 samples, 1.28%)</title><rect x="464.0" y="325" width="15.1" height="15.0" fill="rgb(246,106,46)" rx="2" ry="2" />
<text  x="466.96" y="335.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.06%)</title><rect x="917.9" y="149" width="0.8" height="15.0" fill="rgb(213,180,0)" rx="2" ry="2" />
<text  x="920.93" y="159.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="658.7" y="229" width="0.8" height="15.0" fill="rgb(218,16,43)" rx="2" ry="2" />
<text  x="661.73" y="239.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (148 samples, 9.51%)</title><rect x="777.0" y="581" width="112.1" height="15.0" fill="rgb(222,110,16)" rx="2" ry="2" />
<text  x="779.96" y="591.5" >__pthread_mut..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="72.9" y="549" width="0.8" height="15.0" fill="rgb(241,192,2)" rx="2" ry="2" />
<text  x="75.90" y="559.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (3 samples, 0.19%)</title><rect x="538.2" y="277" width="2.3" height="15.0" fill="rgb(252,116,14)" rx="2" ry="2" />
<text  x="541.23" y="287.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (15 samples, 0.96%)</title><rect x="703.4" y="261" width="11.4" height="15.0" fill="rgb(250,72,48)" rx="2" ry="2" />
<text  x="706.45" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (3 samples, 0.19%)</title><rect x="1160.4" y="437" width="2.3" height="15.0" fill="rgb(243,225,0)" rx="2" ry="2" />
<text  x="1163.44" y="447.5" ></text>
</g>
<g >
<title>file_modified (1 samples, 0.06%)</title><rect x="488.2" y="373" width="0.8" height="15.0" fill="rgb(218,184,44)" rx="2" ry="2" />
<text  x="491.21" y="383.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (2 samples, 0.13%)</title><rect x="75.2" y="501" width="1.5" height="15.0" fill="rgb(242,206,31)" rx="2" ry="2" />
<text  x="78.18" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.06%)</title><rect x="483.7" y="565" width="0.7" height="15.0" fill="rgb(226,23,24)" rx="2" ry="2" />
<text  x="486.67" y="575.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.06%)</title><rect x="458.7" y="325" width="0.7" height="15.0" fill="rgb(246,201,41)" rx="2" ry="2" />
<text  x="461.66" y="335.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (1 samples, 0.06%)</title><rect x="488.2" y="277" width="0.8" height="15.0" fill="rgb(249,205,29)" rx="2" ry="2" />
<text  x="491.21" y="287.5" ></text>
</g>
<g >
<title>add_transaction_credits (1 samples, 0.06%)</title><rect x="510.2" y="293" width="0.8" height="15.0" fill="rgb(223,36,30)" rx="2" ry="2" />
<text  x="513.19" y="303.5" ></text>
</g>
<g >
<title>unaccount_page_cache_page (6 samples, 0.39%)</title><rect x="914.9" y="213" width="4.5" height="15.0" fill="rgb(218,107,10)" rx="2" ry="2" />
<text  x="917.89" y="223.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (81 samples, 5.20%)</title><rect x="394.2" y="341" width="61.4" height="15.0" fill="rgb(226,139,28)" rx="2" ry="2" />
<text  x="397.24" y="351.5" >copy_p..</text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.06%)</title><rect x="579.2" y="245" width="0.7" height="15.0" fill="rgb(243,223,5)" rx="2" ry="2" />
<text  x="582.16" y="255.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (43 samples, 2.76%)</title><rect x="744.4" y="581" width="32.6" height="15.0" fill="rgb(245,105,27)" rx="2" ry="2" />
<text  x="747.37" y="591.5" >__..</text>
</g>
<g >
<title>process_vm_writev (2 samples, 0.13%)</title><rect x="975.5" y="581" width="1.5" height="15.0" fill="rgb(232,158,22)" rx="2" ry="2" />
<text  x="978.52" y="591.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (5 samples, 0.32%)</title><rect x="525.4" y="261" width="3.7" height="15.0" fill="rgb(207,85,13)" rx="2" ry="2" />
<text  x="528.35" y="271.5" ></text>
</g>
<g >
<title>xa_get_order (3 samples, 0.19%)</title><rect x="567.8" y="277" width="2.3" height="15.0" fill="rgb(242,147,31)" rx="2" ry="2" />
<text  x="570.79" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.06%)</title><rect x="776.2" y="453" width="0.8" height="15.0" fill="rgb(209,209,8)" rx="2" ry="2" />
<text  x="779.20" y="463.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.13%)</title><rect x="647.4" y="293" width="1.5" height="15.0" fill="rgb(219,182,46)" rx="2" ry="2" />
<text  x="650.37" y="303.5" ></text>
</g>
<g >
<title>xas_load (2 samples, 0.13%)</title><rect x="568.5" y="261" width="1.6" height="15.0" fill="rgb(248,169,41)" rx="2" ry="2" />
<text  x="571.55" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="776.2" y="533" width="0.8" height="15.0" fill="rgb(220,82,16)" rx="2" ry="2" />
<text  x="779.20" y="543.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.19%)</title><rect x="892.9" y="197" width="2.3" height="15.0" fill="rgb(205,66,35)" rx="2" ry="2" />
<text  x="895.92" y="207.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (2 samples, 0.13%)</title><rect x="992.2" y="437" width="1.5" height="15.0" fill="rgb(237,168,4)" rx="2" ry="2" />
<text  x="995.20" y="447.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.06%)</title><rect x="974.0" y="373" width="0.8" height="15.0" fill="rgb(242,123,45)" rx="2" ry="2" />
<text  x="977.01" y="383.5" ></text>
</g>
<g >
<title>get_page_from_freelist (57 samples, 3.66%)</title><rect x="583.7" y="277" width="43.2" height="15.0" fill="rgb(206,0,50)" rx="2" ry="2" />
<text  x="586.71" y="287.5" >get_..</text>
</g>
<g >
<title>sched_clock_idle_sleep_event (2 samples, 0.13%)</title><rect x="1184.7" y="501" width="1.5" height="15.0" fill="rgb(208,186,16)" rx="2" ry="2" />
<text  x="1187.69" y="511.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.06%)</title><rect x="743.6" y="357" width="0.8" height="15.0" fill="rgb(233,57,21)" rx="2" ry="2" />
<text  x="746.62" y="367.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (332 samples, 21.32%)</title><rect x="487.5" y="421" width="251.6" height="15.0" fill="rgb(243,54,52)" rx="2" ry="2" />
<text  x="490.46" y="431.5" >do_iter_readv_writev</text>
</g>
<g >
<title>__do_fault (1 samples, 0.06%)</title><rect x="73.7" y="229" width="0.7" height="15.0" fill="rgb(213,135,54)" rx="2" ry="2" />
<text  x="76.66" y="239.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (1 samples, 0.06%)</title><rect x="667.1" y="277" width="0.7" height="15.0" fill="rgb(208,2,41)" rx="2" ry="2" />
<text  x="670.07" y="287.5" ></text>
</g>
<g >
<title>try_to_free_buffers (29 samples, 1.86%)</title><rect x="946.7" y="133" width="22.0" height="15.0" fill="rgb(212,109,36)" rx="2" ry="2" />
<text  x="949.72" y="143.5" >t..</text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.06%)</title><rect x="386.7" y="437" width="0.7" height="15.0" fill="rgb(238,176,18)" rx="2" ry="2" />
<text  x="389.66" y="447.5" ></text>
</g>
<g >
<title>vfs_read (120 samples, 7.71%)</title><rect x="392.7" y="501" width="91.0" height="15.0" fill="rgb(223,27,25)" rx="2" ry="2" />
<text  x="395.72" y="511.5" >vfs_read</text>
</g>
<g >
<title>flush_smp_call_function_queue (2 samples, 0.13%)</title><rect x="1167.3" y="501" width="1.5" height="15.0" fill="rgb(229,128,36)" rx="2" ry="2" />
<text  x="1170.26" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.06%)</title><rect x="560.2" y="277" width="0.8" height="15.0" fill="rgb(219,198,52)" rx="2" ry="2" />
<text  x="563.21" y="287.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.06%)</title><rect x="993.0" y="405" width="0.7" height="15.0" fill="rgb(239,116,50)" rx="2" ry="2" />
<text  x="995.95" y="415.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.06%)</title><rect x="388.2" y="485" width="0.7" height="15.0" fill="rgb(254,185,54)" rx="2" ry="2" />
<text  x="391.18" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (4 samples, 0.26%)</title><rect x="902.8" y="197" width="3.0" height="15.0" fill="rgb(221,101,49)" rx="2" ry="2" />
<text  x="905.77" y="207.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.06%)</title><rect x="711.8" y="213" width="0.7" height="15.0" fill="rgb(239,218,6)" rx="2" ry="2" />
<text  x="714.79" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="946.0" y="133" width="0.7" height="15.0" fill="rgb(218,21,13)" rx="2" ry="2" />
<text  x="948.97" y="143.5" ></text>
</g>
<g >
<title>page_counter_uncharge (1 samples, 0.06%)</title><rect x="967.9" y="37" width="0.8" height="15.0" fill="rgb(243,102,44)" rx="2" ry="2" />
<text  x="970.94" y="47.5" ></text>
</g>
<g >
<title>activate_page (1 samples, 0.06%)</title><rect x="974.0" y="357" width="0.8" height="15.0" fill="rgb(218,135,52)" rx="2" ry="2" />
<text  x="977.01" y="367.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="485.2" y="501" width="0.7" height="15.0" fill="rgb(208,136,44)" rx="2" ry="2" />
<text  x="488.18" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_read (121 samples, 7.77%)</title><rect x="392.0" y="533" width="91.7" height="15.0" fill="rgb(246,127,29)" rx="2" ry="2" />
<text  x="394.97" y="543.5" >__x64_sys_..</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.06%)</title><rect x="11.5" y="549" width="0.8" height="15.0" fill="rgb(236,220,12)" rx="2" ry="2" />
<text  x="14.52" y="559.5" ></text>
</g>
<g >
<title>___slab_alloc (4 samples, 0.26%)</title><rect x="517.0" y="245" width="3.0" height="15.0" fill="rgb(233,17,54)" rx="2" ry="2" />
<text  x="520.01" y="255.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.06%)</title><rect x="1077.1" y="325" width="0.7" height="15.0" fill="rgb(254,26,42)" rx="2" ry="2" />
<text  x="1080.08" y="335.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (17 samples, 1.09%)</title><rect x="906.6" y="229" width="12.8" height="15.0" fill="rgb(240,25,51)" rx="2" ry="2" />
<text  x="909.56" y="239.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (2 samples, 0.13%)</title><rect x="992.2" y="549" width="1.5" height="15.0" fill="rgb(236,36,14)" rx="2" ry="2" />
<text  x="995.20" y="559.5" ></text>
</g>
<g >
<title>perf_mmap_fault (1 samples, 0.06%)</title><rect x="73.7" y="213" width="0.7" height="15.0" fill="rgb(210,206,21)" rx="2" ry="2" />
<text  x="76.66" y="223.5" ></text>
</g>
<g >
<title>release_pages (21 samples, 1.35%)</title><rect x="890.6" y="213" width="16.0" height="15.0" fill="rgb(239,183,0)" rx="2" ry="2" />
<text  x="893.64" y="223.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (39 samples, 2.50%)</title><rect x="669.3" y="277" width="29.6" height="15.0" fill="rgb(222,158,14)" rx="2" ry="2" />
<text  x="672.34" y="287.5" >ex..</text>
</g>
<g >
<title>do_idle (163 samples, 10.47%)</title><rect x="1065.0" y="533" width="123.5" height="15.0" fill="rgb(250,85,41)" rx="2" ry="2" />
<text  x="1067.95" y="543.5" >do_idle</text>
</g>
<g >
<title>__activate_page (11 samples, 0.71%)</title><rect x="468.5" y="309" width="8.3" height="15.0" fill="rgb(211,106,15)" rx="2" ry="2" />
<text  x="471.51" y="319.5" ></text>
</g>
<g >
<title>delete_from_page_cache (1 samples, 0.06%)</title><rect x="974.8" y="277" width="0.7" height="15.0" fill="rgb(229,51,5)" rx="2" ry="2" />
<text  x="977.77" y="287.5" ></text>
</g>
<g >
<title>rmqueue (20 samples, 1.28%)</title><rect x="611.7" y="261" width="15.2" height="15.0" fill="rgb(243,209,13)" rx="2" ry="2" />
<text  x="614.75" y="271.5" ></text>
</g>
<g >
<title>find_lock_entry (1 samples, 0.06%)</title><rect x="743.6" y="389" width="0.8" height="15.0" fill="rgb(242,52,33)" rx="2" ry="2" />
<text  x="746.62" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.06%)</title><rect x="994.5" y="517" width="0.7" height="15.0" fill="rgb(237,30,19)" rx="2" ry="2" />
<text  x="997.47" y="527.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.06%)</title><rect x="388.2" y="469" width="0.7" height="15.0" fill="rgb(211,118,1)" rx="2" ry="2" />
<text  x="391.18" y="479.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.06%)</title><rect x="972.5" y="453" width="0.7" height="15.0" fill="rgb(219,136,51)" rx="2" ry="2" />
<text  x="975.49" y="463.5" ></text>
</g>
<g >
<title>cpu_latency_qos_limit (1 samples, 0.06%)</title><rect x="1158.2" y="469" width="0.7" height="15.0" fill="rgb(209,47,20)" rx="2" ry="2" />
<text  x="1161.17" y="479.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.06%)</title><rect x="1074.0" y="437" width="0.8" height="15.0" fill="rgb(243,46,21)" rx="2" ry="2" />
<text  x="1077.05" y="447.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.06%)</title><rect x="392.7" y="437" width="0.8" height="15.0" fill="rgb(250,29,51)" rx="2" ry="2" />
<text  x="395.72" y="447.5" ></text>
</g>
<g >
<title>__getblk_gfp (5 samples, 0.32%)</title><rect x="709.5" y="229" width="3.8" height="15.0" fill="rgb(230,52,26)" rx="2" ry="2" />
<text  x="712.51" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_current (62 samples, 3.98%)</title><rect x="580.7" y="309" width="47.0" height="15.0" fill="rgb(254,169,18)" rx="2" ry="2" />
<text  x="583.67" y="319.5" >allo..</text>
</g>
<g >
<title>ext4_fc_track_inode (1 samples, 0.06%)</title><rect x="698.1" y="261" width="0.8" height="15.0" fill="rgb(246,132,36)" rx="2" ry="2" />
<text  x="701.14" y="271.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.06%)</title><rect x="392.7" y="357" width="0.8" height="15.0" fill="rgb(230,4,2)" rx="2" ry="2" />
<text  x="395.72" y="367.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.19%)</title><rect x="564.8" y="261" width="2.2" height="15.0" fill="rgb(215,177,31)" rx="2" ry="2" />
<text  x="567.76" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (2 samples, 0.13%)</title><rect x="975.5" y="517" width="1.5" height="15.0" fill="rgb(238,201,15)" rx="2" ry="2" />
<text  x="978.52" y="527.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@plt (4 samples, 0.26%)</title><rect x="977.0" y="581" width="3.1" height="15.0" fill="rgb(212,205,39)" rx="2" ry="2" />
<text  x="980.04" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.32%)</title><rect x="971.7" y="581" width="3.8" height="15.0" fill="rgb(207,151,47)" rx="2" ry="2" />
<text  x="974.73" y="591.5" ></text>
</g>
<g >
<title>xas_load (3 samples, 0.19%)</title><rect x="651.9" y="261" width="2.3" height="15.0" fill="rgb(246,23,3)" rx="2" ry="2" />
<text  x="654.91" y="271.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.06%)</title><rect x="392.7" y="341" width="0.8" height="15.0" fill="rgb(232,23,10)" rx="2" ry="2" />
<text  x="395.72" y="351.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.06%)</title><rect x="974.8" y="309" width="0.7" height="15.0" fill="rgb(227,202,5)" rx="2" ry="2" />
<text  x="977.77" y="319.5" ></text>
</g>
<g >
<title>__perf_event_enable (63 samples, 4.05%)</title><rect x="23.6" y="373" width="47.8" height="15.0" fill="rgb(225,71,47)" rx="2" ry="2" />
<text  x="26.64" y="383.5" >__pe..</text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.06%)</title><rect x="557.2" y="229" width="0.7" height="15.0" fill="rgb(205,172,25)" rx="2" ry="2" />
<text  x="560.18" y="239.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (6 samples, 0.39%)</title><rect x="494.3" y="357" width="4.5" height="15.0" fill="rgb(236,40,36)" rx="2" ry="2" />
<text  x="497.28" y="367.5" ></text>
</g>
<g >
<title>ovl_read_iter (119 samples, 7.64%)</title><rect x="392.7" y="469" width="90.2" height="15.0" fill="rgb(214,115,21)" rx="2" ry="2" />
<text  x="395.72" y="479.5" >ovl_read_i..</text>
</g>
<g >
<title>n_tty_receive_buf2 (1 samples, 0.06%)</title><rect x="1063.4" y="469" width="0.8" height="15.0" fill="rgb(248,101,31)" rx="2" ry="2" />
<text  x="1066.44" y="479.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.13%)</title><rect x="475.3" y="277" width="1.5" height="15.0" fill="rgb(216,59,38)" rx="2" ry="2" />
<text  x="478.33" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (9 samples, 0.58%)</title><rect x="1159.7" y="469" width="6.8" height="15.0" fill="rgb(210,79,10)" rx="2" ry="2" />
<text  x="1162.69" y="479.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.06%)</title><rect x="1077.1" y="357" width="0.7" height="15.0" fill="rgb(247,179,37)" rx="2" ry="2" />
<text  x="1080.08" y="367.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (13 samples, 0.83%)</title><rect x="530.7" y="309" width="9.8" height="15.0" fill="rgb(247,65,52)" rx="2" ry="2" />
<text  x="533.66" y="319.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (5 samples, 0.32%)</title><rect x="1179.4" y="421" width="3.8" height="15.0" fill="rgb(249,20,42)" rx="2" ry="2" />
<text  x="1182.39" y="431.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.06%)</title><rect x="564.0" y="261" width="0.8" height="15.0" fill="rgb(248,190,46)" rx="2" ry="2" />
<text  x="567.00" y="271.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.13%)</title><rect x="1076.3" y="405" width="1.5" height="15.0" fill="rgb(249,65,39)" rx="2" ry="2" />
<text  x="1079.32" y="415.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (1 samples, 0.06%)</title><rect x="991.4" y="581" width="0.8" height="15.0" fill="rgb(237,200,32)" rx="2" ry="2" />
<text  x="994.44" y="591.5" ></text>
</g>
<g >
<title>dentry_kill (107 samples, 6.87%)</title><rect x="889.1" y="389" width="81.1" height="15.0" fill="rgb(221,72,17)" rx="2" ry="2" />
<text  x="892.13" y="399.5" >dentry_kill</text>
</g>
<g >
<title>sel_ldr (1,214 samples, 77.97%)</title><rect x="76.7" y="597" width="920.0" height="15.0" fill="rgb(227,50,42)" rx="2" ry="2" />
<text  x="79.69" y="607.5" >sel_ldr</text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.06%)</title><rect x="534.4" y="293" width="0.8" height="15.0" fill="rgb(223,74,24)" rx="2" ry="2" />
<text  x="537.44" y="303.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (48 samples, 3.08%)</title><rect x="544.3" y="309" width="36.4" height="15.0" fill="rgb(206,109,13)" rx="2" ry="2" />
<text  x="547.30" y="319.5" >add..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.06%)</title><rect x="993.0" y="373" width="0.7" height="15.0" fill="rgb(230,99,8)" rx="2" ry="2" />
<text  x="995.95" y="383.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (107 samples, 6.87%)</title><rect x="889.1" y="357" width="81.1" height="15.0" fill="rgb(250,65,40)" rx="2" ry="2" />
<text  x="892.13" y="367.5" >dentry_un..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (107 samples, 6.87%)</title><rect x="889.1" y="565" width="81.1" height="15.0" fill="rgb(228,201,27)" rx="2" ry="2" />
<text  x="892.13" y="575.5" >entry_SYS..</text>
</g>
<g >
<title>intercept_process_vm_writev (2 samples, 0.13%)</title><rect x="975.5" y="533" width="1.5" height="15.0" fill="rgb(229,21,0)" rx="2" ry="2" />
<text  x="978.52" y="543.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (16 samples, 1.03%)</title><rect x="1171.1" y="453" width="12.1" height="15.0" fill="rgb(228,110,34)" rx="2" ry="2" />
<text  x="1174.05" y="463.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (172 samples, 11.05%)</title><rect x="499.6" y="357" width="130.3" height="15.0" fill="rgb(212,213,40)" rx="2" ry="2" />
<text  x="502.58" y="367.5" >ext4_da_write_be..</text>
</g>
<g >
<title>iput.part.0 (107 samples, 6.87%)</title><rect x="889.1" y="485" width="81.1" height="15.0" fill="rgb(237,189,42)" rx="2" ry="2" />
<text  x="892.13" y="495.5" >iput.part.0</text>
</g>
<g >
<title>tick_nohz_next_event (3 samples, 0.19%)</title><rect x="1164.2" y="453" width="2.3" height="15.0" fill="rgb(243,102,42)" rx="2" ry="2" />
<text  x="1167.23" y="463.5" ></text>
</g>
<g >
<title>__libc_read (121 samples, 7.77%)</title><rect x="392.0" y="581" width="91.7" height="15.0" fill="rgb(222,55,23)" rx="2" ry="2" />
<text  x="394.97" y="591.5" >__libc_read</text>
</g>
<g >
<title>x86_pmu_enable (2 samples, 0.13%)</title><rect x="75.2" y="357" width="1.5" height="15.0" fill="rgb(244,9,46)" rx="2" ry="2" />
<text  x="78.18" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (3 samples, 0.19%)</title><rect x="1186.2" y="517" width="2.3" height="15.0" fill="rgb(211,221,48)" rx="2" ry="2" />
<text  x="1189.21" y="527.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.06%)</title><rect x="392.7" y="245" width="0.8" height="15.0" fill="rgb(237,20,41)" rx="2" ry="2" />
<text  x="395.72" y="255.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.06%)</title><rect x="974.8" y="469" width="0.7" height="15.0" fill="rgb(206,202,26)" rx="2" ry="2" />
<text  x="977.77" y="479.5" ></text>
</g>
<g >
<title>do_iter_read (118 samples, 7.58%)</title><rect x="393.5" y="437" width="89.4" height="15.0" fill="rgb(223,30,20)" rx="2" ry="2" />
<text  x="396.48" y="447.5" >do_iter_read</text>
</g>
<g >
<title>release_pages (2 samples, 0.13%)</title><rect x="477.6" y="309" width="1.5" height="15.0" fill="rgb(212,41,19)" rx="2" ry="2" />
<text  x="480.60" y="319.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 4.05%)</title><rect x="23.6" y="357" width="47.8" height="15.0" fill="rgb(222,179,48)" rx="2" ry="2" />
<text  x="26.64" y="367.5" >ctx_..</text>
</g>
<g >
<title>release_pages (1 samples, 0.06%)</title><rect x="579.9" y="261" width="0.8" height="15.0" fill="rgb(230,138,14)" rx="2" ry="2" />
<text  x="582.92" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="11.5" y="437" width="0.8" height="15.0" fill="rgb(208,42,44)" rx="2" ry="2" />
<text  x="14.52" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.19%)</title><rect x="739.8" y="581" width="2.3" height="15.0" fill="rgb(227,129,49)" rx="2" ry="2" />
<text  x="742.83" y="591.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (4 samples, 0.26%)</title><rect x="576.9" y="261" width="3.0" height="15.0" fill="rgb(217,26,8)" rx="2" ry="2" />
<text  x="579.89" y="271.5" ></text>
</g>
<g >
<title>pick_next_task_fair (16 samples, 1.03%)</title><rect x="1171.1" y="485" width="12.1" height="15.0" fill="rgb(229,21,16)" rx="2" ry="2" />
<text  x="1174.05" y="495.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (1 samples, 0.06%)</title><rect x="265.4" y="581" width="0.8" height="15.0" fill="rgb(251,106,52)" rx="2" ry="2" />
<text  x="268.40" y="591.5" ></text>
</g>
<g >
<title>perf (83 samples, 5.33%)</title><rect x="13.8" y="597" width="62.9" height="15.0" fill="rgb(238,223,31)" rx="2" ry="2" />
<text  x="16.79" y="607.5" >perf</text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.13%)</title><rect x="973.2" y="453" width="1.6" height="15.0" fill="rgb(245,192,0)" rx="2" ry="2" />
<text  x="976.25" y="463.5" ></text>
</g>
<g >
<title>cpuidle_select (13 samples, 0.83%)</title><rect x="1156.7" y="501" width="9.8" height="15.0" fill="rgb(225,162,28)" rx="2" ry="2" />
<text  x="1159.65" y="511.5" ></text>
</g>
<g >
<title>NaClMutexLock (38 samples, 2.44%)</title><rect x="124.4" y="581" width="28.8" height="15.0" fill="rgb(251,184,35)" rx="2" ry="2" />
<text  x="127.44" y="591.5" >Na..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.06%)</title><rect x="996.0" y="485" width="0.7" height="15.0" fill="rgb(206,222,24)" rx="2" ry="2" />
<text  x="998.99" y="495.5" ></text>
</g>
<g >
<title>kmem_cache_free (6 samples, 0.39%)</title><rect x="630.7" y="309" width="4.5" height="15.0" fill="rgb(254,223,46)" rx="2" ry="2" />
<text  x="633.69" y="319.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (1 samples, 0.06%)</title><rect x="776.2" y="405" width="0.8" height="15.0" fill="rgb(240,112,43)" rx="2" ry="2" />
<text  x="779.20" y="415.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (24 samples, 1.54%)</title><rect x="247.2" y="581" width="18.2" height="15.0" fill="rgb(232,8,1)" rx="2" ry="2" />
<text  x="250.21" y="591.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (9 samples, 0.58%)</title><rect x="980.1" y="581" width="6.8" height="15.0" fill="rgb(219,143,50)" rx="2" ry="2" />
<text  x="983.07" y="591.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.06%)</title><rect x="628.4" y="293" width="0.8" height="15.0" fill="rgb(221,74,8)" rx="2" ry="2" />
<text  x="631.42" y="303.5" ></text>
</g>
<g >
<title>vfs_llseek (1 samples, 0.06%)</title><rect x="389.7" y="485" width="0.7" height="15.0" fill="rgb(248,216,26)" rx="2" ry="2" />
<text  x="392.69" y="495.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.06%)</title><rect x="658.0" y="213" width="0.7" height="15.0" fill="rgb(240,207,14)" rx="2" ry="2" />
<text  x="660.98" y="223.5" ></text>
</g>
<g >
<title>vfs_iter_read (118 samples, 7.58%)</title><rect x="393.5" y="453" width="89.4" height="15.0" fill="rgb(238,55,13)" rx="2" ry="2" />
<text  x="396.48" y="463.5" >vfs_iter_r..</text>
</g>
<g >
<title>__ext4_get_inode_loc (15 samples, 0.96%)</title><rect x="703.4" y="245" width="11.4" height="15.0" fill="rgb(238,109,11)" rx="2" ry="2" />
<text  x="706.45" y="255.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="948.2" y="69" width="0.8" height="15.0" fill="rgb(254,31,50)" rx="2" ry="2" />
<text  x="951.24" y="79.5" ></text>
</g>
<g >
<title>kernel_init_free_pages (1 samples, 0.06%)</title><rect x="626.9" y="277" width="0.8" height="15.0" fill="rgb(253,127,3)" rx="2" ry="2" />
<text  x="629.90" y="287.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (56 samples, 3.60%)</title><rect x="927.0" y="213" width="42.5" height="15.0" fill="rgb(242,136,52)" rx="2" ry="2" />
<text  x="930.02" y="223.5" >ext..</text>
</g>
<g >
<title>flush_smp_call_function_from_idle (4 samples, 0.26%)</title><rect x="1167.3" y="517" width="3.0" height="15.0" fill="rgb(246,166,8)" rx="2" ry="2" />
<text  x="1170.26" y="527.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (1 samples, 0.06%)</title><rect x="392.7" y="309" width="0.8" height="15.0" fill="rgb(214,118,13)" rx="2" ry="2" />
<text  x="395.72" y="319.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.06%)</title><rect x="714.8" y="293" width="0.8" height="15.0" fill="rgb(229,145,50)" rx="2" ry="2" />
<text  x="717.82" y="303.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.06%)</title><rect x="1062.7" y="501" width="0.7" height="15.0" fill="rgb(218,80,32)" rx="2" ry="2" />
<text  x="1065.68" y="511.5" ></text>
</g>
<g >
<title>clear_page_erms (34 samples, 2.18%)</title><rect x="584.5" y="261" width="25.7" height="15.0" fill="rgb(236,196,33)" rx="2" ry="2" />
<text  x="587.46" y="271.5" >c..</text>
</g>
<g >
<title>alx_intr_msix_ring (1 samples, 0.06%)</title><rect x="1073.3" y="373" width="0.7" height="15.0" fill="rgb(248,176,24)" rx="2" ry="2" />
<text  x="1076.29" y="383.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2 samples, 0.13%)</title><rect x="212.4" y="581" width="1.5" height="15.0" fill="rgb(211,28,38)" rx="2" ry="2" />
<text  x="215.35" y="591.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="11.5" y="405" width="0.8" height="15.0" fill="rgb(236,176,30)" rx="2" ry="2" />
<text  x="14.52" y="415.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (8 samples, 0.51%)</title><rect x="691.3" y="197" width="6.1" height="15.0" fill="rgb(241,132,16)" rx="2" ry="2" />
<text  x="694.32" y="207.5" ></text>
</g>
<g >
<title>copy_page_from_iter_iovec (2 samples, 0.13%)</title><rect x="975.5" y="437" width="1.5" height="15.0" fill="rgb(224,119,18)" rx="2" ry="2" />
<text  x="978.52" y="447.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.06%)</title><rect x="1076.3" y="357" width="0.8" height="15.0" fill="rgb(238,39,45)" rx="2" ry="2" />
<text  x="1079.32" y="367.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.06%)</title><rect x="974.8" y="501" width="0.7" height="15.0" fill="rgb(228,217,26)" rx="2" ry="2" />
<text  x="977.77" y="511.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.06%)</title><rect x="699.7" y="245" width="0.7" height="15.0" fill="rgb(216,134,4)" rx="2" ry="2" />
<text  x="702.66" y="255.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.0 (1 samples, 0.06%)</title><rect x="701.2" y="245" width="0.7" height="15.0" fill="rgb(217,28,11)" rx="2" ry="2" />
<text  x="704.18" y="255.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.06%)</title><rect x="993.0" y="421" width="0.7" height="15.0" fill="rgb(244,145,4)" rx="2" ry="2" />
<text  x="995.95" y="431.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.06%)</title><rect x="1062.7" y="453" width="0.7" height="15.0" fill="rgb(243,29,39)" rx="2" ry="2" />
<text  x="1065.68" y="463.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.06%)</title><rect x="1073.3" y="405" width="0.7" height="15.0" fill="rgb(211,113,10)" rx="2" ry="2" />
<text  x="1076.29" y="415.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="894.4" y="181" width="0.8" height="15.0" fill="rgb(219,226,47)" rx="2" ry="2" />
<text  x="897.43" y="191.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (67 samples, 4.30%)</title><rect x="664.8" y="325" width="50.8" height="15.0" fill="rgb(240,51,38)" rx="2" ry="2" />
<text  x="667.80" y="335.5" >__mar..</text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.13%)</title><rect x="75.2" y="437" width="1.5" height="15.0" fill="rgb(237,84,9)" rx="2" ry="2" />
<text  x="78.18" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="996.0" y="405" width="0.7" height="15.0" fill="rgb(235,85,9)" rx="2" ry="2" />
<text  x="998.99" y="415.5" ></text>
</g>
<g >
<title>__do_fault (2 samples, 0.13%)</title><rect x="742.9" y="437" width="1.5" height="15.0" fill="rgb(216,93,24)" rx="2" ry="2" />
<text  x="745.86" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.13%)</title><rect x="742.9" y="501" width="1.5" height="15.0" fill="rgb(252,83,15)" rx="2" ry="2" />
<text  x="745.86" y="511.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.13%)</title><rect x="975.5" y="421" width="1.5" height="15.0" fill="rgb(253,2,48)" rx="2" ry="2" />
<text  x="978.52" y="431.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.06%)</title><rect x="520.0" y="261" width="0.8" height="15.0" fill="rgb(247,154,15)" rx="2" ry="2" />
<text  x="523.04" y="271.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (2 samples, 0.13%)</title><rect x="1179.4" y="389" width="1.5" height="15.0" fill="rgb(252,48,22)" rx="2" ry="2" />
<text  x="1182.39" y="399.5" ></text>
</g>
<g >
<title>xas_store (1 samples, 0.06%)</title><rect x="570.8" y="277" width="0.8" height="15.0" fill="rgb(205,17,31)" rx="2" ry="2" />
<text  x="573.82" y="287.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.13%)</title><rect x="73.7" y="501" width="1.5" height="15.0" fill="rgb(235,99,33)" rx="2" ry="2" />
<text  x="76.66" y="511.5" ></text>
</g>
<g >
<title>alloc_buffer_head (19 samples, 1.22%)</title><rect x="515.5" y="293" width="14.4" height="15.0" fill="rgb(249,198,5)" rx="2" ry="2" />
<text  x="518.50" y="303.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.06%)</title><rect x="392.0" y="485" width="0.7" height="15.0" fill="rgb(254,29,47)" rx="2" ry="2" />
<text  x="394.97" y="495.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.06%)</title><rect x="474.6" y="277" width="0.7" height="15.0" fill="rgb(246,159,41)" rx="2" ry="2" />
<text  x="477.57" y="287.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.06%)</title><rect x="911.9" y="181" width="0.7" height="15.0" fill="rgb(252,119,7)" rx="2" ry="2" />
<text  x="914.86" y="191.5" ></text>
</g>
<g >
<title>lookup_bh_lru (1 samples, 0.06%)</title><rect x="710.3" y="197" width="0.7" height="15.0" fill="rgb(217,105,37)" rx="2" ry="2" />
<text  x="713.27" y="207.5" ></text>
</g>
<g >
<title>common_interrupt (2 samples, 0.13%)</title><rect x="1073.3" y="453" width="1.5" height="15.0" fill="rgb(244,213,5)" rx="2" ry="2" />
<text  x="1076.29" y="463.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.06%)</title><rect x="1074.8" y="341" width="0.8" height="15.0" fill="rgb(212,27,34)" rx="2" ry="2" />
<text  x="1077.80" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.06%)</title><rect x="993.0" y="357" width="0.7" height="15.0" fill="rgb(245,63,27)" rx="2" ry="2" />
<text  x="995.95" y="367.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.06%)</title><rect x="1073.3" y="421" width="0.7" height="15.0" fill="rgb(210,158,8)" rx="2" ry="2" />
<text  x="1076.29" y="431.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.13%)</title><rect x="742.9" y="469" width="1.5" height="15.0" fill="rgb(252,159,5)" rx="2" ry="2" />
<text  x="745.86" y="479.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.06%)</title><rect x="1177.1" y="421" width="0.8" height="15.0" fill="rgb(213,42,6)" rx="2" ry="2" />
<text  x="1180.12" y="431.5" ></text>
</g>
<g >
<title>poll_idle (26 samples, 1.67%)</title><rect x="1136.9" y="469" width="19.8" height="15.0" fill="rgb(249,2,39)" rx="2" ry="2" />
<text  x="1139.95" y="479.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.06%)</title><rect x="11.5" y="373" width="0.8" height="15.0" fill="rgb(243,111,22)" rx="2" ry="2" />
<text  x="14.52" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.06%)</title><rect x="970.2" y="581" width="0.8" height="15.0" fill="rgb(226,73,22)" rx="2" ry="2" />
<text  x="973.22" y="591.5" ></text>
</g>
<g >
<title>kmem_cache_free (18 samples, 1.16%)</title><rect x="955.1" y="101" width="13.6" height="15.0" fill="rgb(218,65,29)" rx="2" ry="2" />
<text  x="958.06" y="111.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.06%)</title><rect x="11.5" y="469" width="0.8" height="15.0" fill="rgb(224,202,44)" rx="2" ry="2" />
<text  x="14.52" y="479.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (2 samples, 0.13%)</title><rect x="975.5" y="485" width="1.5" height="15.0" fill="rgb(229,60,24)" rx="2" ry="2" />
<text  x="978.52" y="495.5" ></text>
</g>
<g >
<title>page_counter_uncharge (1 samples, 0.06%)</title><rect x="904.3" y="165" width="0.7" height="15.0" fill="rgb(234,72,31)" rx="2" ry="2" />
<text  x="907.28" y="175.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (16 samples, 1.03%)</title><rect x="266.2" y="581" width="12.1" height="15.0" fill="rgb(230,143,49)" rx="2" ry="2" />
<text  x="269.16" y="591.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.06%)</title><rect x="950.5" y="101" width="0.8" height="15.0" fill="rgb(211,228,25)" rx="2" ry="2" />
<text  x="953.51" y="111.5" ></text>
</g>
<g >
<title>tty_port_default_receive_buf (1 samples, 0.06%)</title><rect x="1063.4" y="501" width="0.8" height="15.0" fill="rgb(238,91,46)" rx="2" ry="2" />
<text  x="1066.44" y="511.5" ></text>
</g>
<g >
<title>ext4_evict_inode (107 samples, 6.87%)</title><rect x="889.1" y="277" width="81.1" height="15.0" fill="rgb(221,195,28)" rx="2" ry="2" />
<text  x="892.13" y="287.5" >ext4_evic..</text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (29 samples, 1.86%)</title><rect x="676.2" y="261" width="21.9" height="15.0" fill="rgb(243,32,4)" rx="2" ry="2" />
<text  x="679.17" y="271.5" >e..</text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.06%)</title><rect x="1074.8" y="357" width="0.8" height="15.0" fill="rgb(250,152,41)" rx="2" ry="2" />
<text  x="1077.80" y="367.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (12 samples, 0.77%)</title><rect x="502.6" y="341" width="9.1" height="15.0" fill="rgb(233,185,44)" rx="2" ry="2" />
<text  x="505.61" y="351.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.06%)</title><rect x="1077.1" y="341" width="0.7" height="15.0" fill="rgb(207,143,33)" rx="2" ry="2" />
<text  x="1080.08" y="351.5" ></text>
</g>
<g >
<title>__free_one_page (2 samples, 0.13%)</title><rect x="901.3" y="149" width="1.5" height="15.0" fill="rgb(229,190,6)" rx="2" ry="2" />
<text  x="904.25" y="159.5" ></text>
</g>
<g >
<title>iput_final (107 samples, 6.87%)</title><rect x="889.1" y="469" width="81.1" height="15.0" fill="rgb(218,78,3)" rx="2" ry="2" />
<text  x="892.13" y="479.5" >iput_final</text>
</g>
<g >
<title>process_one_work (1 samples, 0.06%)</title><rect x="1063.4" y="533" width="0.8" height="15.0" fill="rgb(207,67,47)" rx="2" ry="2" />
<text  x="1066.44" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.32%)</title><rect x="388.2" y="565" width="3.8" height="15.0" fill="rgb(230,13,21)" rx="2" ry="2" />
<text  x="391.18" y="575.5" ></text>
</g>
<g >
<title>xas_find_conflict (1 samples, 0.06%)</title><rect x="570.1" y="277" width="0.7" height="15.0" fill="rgb(209,102,44)" rx="2" ry="2" />
<text  x="573.06" y="287.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.13%)</title><rect x="1076.3" y="389" width="1.5" height="15.0" fill="rgb(236,227,7)" rx="2" ry="2" />
<text  x="1079.32" y="399.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.06%)</title><rect x="1187.7" y="453" width="0.8" height="15.0" fill="rgb(224,172,4)" rx="2" ry="2" />
<text  x="1190.73" y="463.5" ></text>
</g>
<g >
<title>__find_get_block (1 samples, 0.06%)</title><rect x="710.3" y="213" width="0.7" height="15.0" fill="rgb(242,51,48)" rx="2" ry="2" />
<text  x="713.27" y="223.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.06%)</title><rect x="663.3" y="293" width="0.7" height="15.0" fill="rgb(247,120,39)" rx="2" ry="2" />
<text  x="666.28" y="303.5" ></text>
</g>
<g >
<title>put_ctx (2 samples, 0.13%)</title><rect x="71.4" y="517" width="1.5" height="15.0" fill="rgb(225,89,32)" rx="2" ry="2" />
<text  x="74.39" y="527.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.06%)</title><rect x="488.2" y="325" width="0.8" height="15.0" fill="rgb(231,75,40)" rx="2" ry="2" />
<text  x="491.21" y="335.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.06%)</title><rect x="482.2" y="357" width="0.7" height="15.0" fill="rgb(241,226,40)" rx="2" ry="2" />
<text  x="485.15" y="367.5" ></text>
</g>
<g >
<title>dec_zone_page_state (1 samples, 0.06%)</title><rect x="949.0" y="85" width="0.8" height="15.0" fill="rgb(225,160,24)" rx="2" ry="2" />
<text  x="952.00" y="95.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.06%)</title><rect x="557.2" y="245" width="0.7" height="15.0" fill="rgb(242,150,26)" rx="2" ry="2" />
<text  x="560.18" y="255.5" ></text>
</g>
<g >
<title>truncate_inode_page (1 samples, 0.06%)</title><rect x="974.8" y="293" width="0.7" height="15.0" fill="rgb(228,144,45)" rx="2" ry="2" />
<text  x="977.77" y="303.5" ></text>
</g>
<g >
<title>copy_page_to_iter (81 samples, 5.20%)</title><rect x="394.2" y="357" width="61.4" height="15.0" fill="rgb(227,223,15)" rx="2" ry="2" />
<text  x="397.24" y="367.5" >copy_p..</text>
</g>
<g >
<title>get_obj_cgroup_from_current (1 samples, 0.06%)</title><rect x="527.6" y="245" width="0.8" height="15.0" fill="rgb(217,71,13)" rx="2" ry="2" />
<text  x="530.62" y="255.5" ></text>
</g>
<g >
<title>account_page_cleaned (4 samples, 0.26%)</title><rect x="946.7" y="101" width="3.1" height="15.0" fill="rgb(220,23,43)" rx="2" ry="2" />
<text  x="949.72" y="111.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.06%)</title><rect x="524.6" y="229" width="0.8" height="15.0" fill="rgb(224,4,0)" rx="2" ry="2" />
<text  x="527.59" y="239.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.06%)</title><rect x="579.2" y="213" width="0.7" height="15.0" fill="rgb(229,208,17)" rx="2" ry="2" />
<text  x="582.16" y="223.5" ></text>
</g>
<g >
<title>evict (107 samples, 6.87%)</title><rect x="889.1" y="293" width="81.1" height="15.0" fill="rgb(238,127,6)" rx="2" ry="2" />
<text  x="892.13" y="303.5" >evict</text>
</g>
<g >
<title>ext4_inode_csum_set (16 samples, 1.03%)</title><rect x="685.3" y="245" width="12.1" height="15.0" fill="rgb(225,191,43)" rx="2" ry="2" />
<text  x="688.26" y="255.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.06%)</title><rect x="974.8" y="325" width="0.7" height="15.0" fill="rgb(207,54,14)" rx="2" ry="2" />
<text  x="977.77" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.19%)</title><rect x="742.1" y="533" width="2.3" height="15.0" fill="rgb(242,62,2)" rx="2" ry="2" />
<text  x="745.10" y="543.5" ></text>
</g>
<g >
<title>__ioctl (78 samples, 5.01%)</title><rect x="13.8" y="581" width="59.1" height="15.0" fill="rgb(225,157,47)" rx="2" ry="2" />
<text  x="16.79" y="591.5" >__ioctl</text>
</g>
<g >
<title>vfs_write (334 samples, 21.45%)</title><rect x="485.9" y="501" width="253.2" height="15.0" fill="rgb(231,108,16)" rx="2" ry="2" />
<text  x="488.94" y="511.5" >vfs_write</text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.13%)</title><rect x="1076.3" y="437" width="1.5" height="15.0" fill="rgb(254,11,19)" rx="2" ry="2" />
<text  x="1079.32" y="447.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3 samples, 0.19%)</title><rect x="742.1" y="565" width="2.3" height="15.0" fill="rgb(213,50,43)" rx="2" ry="2" />
<text  x="745.10" y="575.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.06%)</title><rect x="487.5" y="373" width="0.7" height="15.0" fill="rgb(234,106,26)" rx="2" ry="2" />
<text  x="490.46" y="383.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.06%)</title><rect x="661.0" y="261" width="0.8" height="15.0" fill="rgb(228,83,23)" rx="2" ry="2" />
<text  x="664.01" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (77 samples, 4.95%)</title><rect x="14.5" y="549" width="58.4" height="15.0" fill="rgb(241,185,5)" rx="2" ry="2" />
<text  x="17.55" y="559.5" >do_sys..</text>
</g>
<g >
<title>up_write (1 samples, 0.06%)</title><rect x="738.3" y="373" width="0.8" height="15.0" fill="rgb(236,213,32)" rx="2" ry="2" />
<text  x="741.31" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.13%)</title><rect x="75.2" y="565" width="1.5" height="15.0" fill="rgb(228,71,0)" rx="2" ry="2" />
<text  x="78.18" y="575.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (7 samples, 0.45%)</title><rect x="1172.6" y="437" width="5.3" height="15.0" fill="rgb(207,16,20)" rx="2" ry="2" />
<text  x="1175.57" y="447.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.13%)</title><rect x="1188.5" y="533" width="1.5" height="15.0" fill="rgb(239,79,24)" rx="2" ry="2" />
<text  x="1191.48" y="543.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.06%)</title><rect x="974.0" y="341" width="0.8" height="15.0" fill="rgb(223,217,4)" rx="2" ry="2" />
<text  x="977.01" y="351.5" ></text>
</g>
<g >
<title>__es_remove_extent (2 samples, 0.13%)</title><rect x="539.0" y="261" width="1.5" height="15.0" fill="rgb(230,74,24)" rx="2" ry="2" />
<text  x="541.99" y="271.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.13%)</title><rect x="504.1" y="309" width="1.5" height="15.0" fill="rgb(227,25,49)" rx="2" ry="2" />
<text  x="507.13" y="319.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="918.7" y="181" width="0.7" height="15.0" fill="rgb(232,85,51)" rx="2" ry="2" />
<text  x="921.68" y="191.5" ></text>
</g>
<g >
<title>generic_perform_write (329 samples, 21.13%)</title><rect x="489.0" y="373" width="249.3" height="15.0" fill="rgb(245,61,25)" rx="2" ry="2" />
<text  x="491.97" y="383.5" >generic_perform_write</text>
</g>
<g >
<title>do_iter_readv_writev (118 samples, 7.58%)</title><rect x="393.5" y="421" width="89.4" height="15.0" fill="rgb(217,227,52)" rx="2" ry="2" />
<text  x="396.48" y="431.5" >do_iter_re..</text>
</g>
<g >
<title>crypto_shash_update (2 samples, 0.13%)</title><rect x="685.3" y="229" width="1.5" height="15.0" fill="rgb(237,193,15)" rx="2" ry="2" />
<text  x="688.26" y="239.5" ></text>
</g>
<g >
<title>kthread (2 samples, 0.13%)</title><rect x="1062.7" y="565" width="1.5" height="15.0" fill="rgb(242,107,10)" rx="2" ry="2" />
<text  x="1065.68" y="575.5" ></text>
</g>
<g >
<title>generic_exec_single (64 samples, 4.11%)</title><rect x="22.9" y="421" width="48.5" height="15.0" fill="rgb(237,59,29)" rx="2" ry="2" />
<text  x="25.88" y="431.5" >gene..</text>
</g>
<g >
<title>do_group_exit (5 samples, 0.32%)</title><rect x="971.7" y="533" width="3.8" height="15.0" fill="rgb(219,14,26)" rx="2" ry="2" />
<text  x="974.73" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.06%)</title><rect x="996.0" y="453" width="0.7" height="15.0" fill="rgb(239,87,11)" rx="2" ry="2" />
<text  x="998.99" y="463.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.06%)</title><rect x="1063.4" y="549" width="0.8" height="15.0" fill="rgb(231,120,47)" rx="2" ry="2" />
<text  x="1066.44" y="559.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.06%)</title><rect x="995.2" y="565" width="0.8" height="15.0" fill="rgb(211,52,40)" rx="2" ry="2" />
<text  x="998.23" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="386.7" y="549" width="0.7" height="15.0" fill="rgb(237,102,8)" rx="2" ry="2" />
<text  x="389.66" y="559.5" ></text>
</g>
<g >
<title>lock_page_lruvec_irqsave (1 samples, 0.06%)</title><rect x="476.8" y="309" width="0.8" height="15.0" fill="rgb(232,30,52)" rx="2" ry="2" />
<text  x="479.85" y="319.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.06%)</title><rect x="72.9" y="581" width="0.8" height="15.0" fill="rgb(243,54,37)" rx="2" ry="2" />
<text  x="75.90" y="591.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.06%)</title><rect x="74.4" y="309" width="0.8" height="15.0" fill="rgb(214,169,28)" rx="2" ry="2" />
<text  x="77.42" y="319.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (1 samples, 0.06%)</title><rect x="697.4" y="245" width="0.7" height="15.0" fill="rgb(237,212,11)" rx="2" ry="2" />
<text  x="700.39" y="255.5" ></text>
</g>
<g >
<title>lru_cache_add (12 samples, 0.77%)</title><rect x="571.6" y="293" width="9.1" height="15.0" fill="rgb(247,147,50)" rx="2" ry="2" />
<text  x="574.58" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (121 samples, 7.77%)</title><rect x="392.0" y="565" width="91.7" height="15.0" fill="rgb(254,38,23)" rx="2" ry="2" />
<text  x="394.97" y="575.5" >entry_SYSC..</text>
</g>
<g >
<title>NaClCondVarBroadcast (20 samples, 1.28%)</title><rect x="109.3" y="581" width="15.1" height="15.0" fill="rgb(223,211,14)" rx="2" ry="2" />
<text  x="112.28" y="591.5" ></text>
</g>
<g >
<title>ksys_write (335 samples, 21.52%)</title><rect x="485.2" y="517" width="253.9" height="15.0" fill="rgb(237,221,0)" rx="2" ry="2" />
<text  x="488.18" y="527.5" >ksys_write</text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="1165.0" y="405" width="0.7" height="15.0" fill="rgb(214,91,31)" rx="2" ry="2" />
<text  x="1167.99" y="415.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.06%)</title><rect x="11.5" y="389" width="0.8" height="15.0" fill="rgb(206,171,45)" rx="2" ry="2" />
<text  x="14.52" y="399.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.06%)</title><rect x="541.3" y="325" width="0.7" height="15.0" fill="rgb(226,141,12)" rx="2" ry="2" />
<text  x="544.27" y="335.5" ></text>
</g>
<g >
<title>ovl_llseek (1 samples, 0.06%)</title><rect x="390.4" y="517" width="0.8" height="15.0" fill="rgb(233,163,4)" rx="2" ry="2" />
<text  x="393.45" y="527.5" ></text>
</g>
<g >
<title>find_get_pages_contig (5 samples, 0.32%)</title><rect x="455.6" y="341" width="3.8" height="15.0" fill="rgb(213,58,49)" rx="2" ry="2" />
<text  x="458.63" y="351.5" ></text>
</g>
<g >
<title>_perf_ioctl (74 samples, 4.75%)</title><rect x="15.3" y="501" width="56.1" height="15.0" fill="rgb(211,162,40)" rx="2" ry="2" />
<text  x="18.31" y="511.5" >_perf..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="1159.7" y="453" width="0.7" height="15.0" fill="rgb(250,201,32)" rx="2" ry="2" />
<text  x="1162.69" y="463.5" ></text>
</g>
<g >
<title>mmput (3 samples, 0.19%)</title><rect x="972.5" y="485" width="2.3" height="15.0" fill="rgb(206,149,51)" rx="2" ry="2" />
<text  x="975.49" y="495.5" ></text>
</g>
<g >
<title>menu_select (13 samples, 0.83%)</title><rect x="1156.7" y="485" width="9.8" height="15.0" fill="rgb(231,12,36)" rx="2" ry="2" />
<text  x="1159.65" y="495.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.06%)</title><rect x="1158.9" y="469" width="0.8" height="15.0" fill="rgb(218,144,46)" rx="2" ry="2" />
<text  x="1161.93" y="479.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.06%)</title><rect x="386.7" y="405" width="0.7" height="15.0" fill="rgb(218,84,53)" rx="2" ry="2" />
<text  x="389.66" y="415.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.06%)</title><rect x="386.7" y="453" width="0.7" height="15.0" fill="rgb(217,135,53)" rx="2" ry="2" />
<text  x="389.66" y="463.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (2 samples, 0.13%)</title><rect x="713.3" y="229" width="1.5" height="15.0" fill="rgb(214,33,16)" rx="2" ry="2" />
<text  x="716.30" y="239.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (14 samples, 0.90%)</title><rect x="630.7" y="341" width="10.6" height="15.0" fill="rgb(236,118,28)" rx="2" ry="2" />
<text  x="633.69" y="351.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.06%)</title><rect x="386.7" y="485" width="0.7" height="15.0" fill="rgb(209,149,33)" rx="2" ry="2" />
<text  x="389.66" y="495.5" ></text>
</g>
<g >
<title>__free_one_page (1 samples, 0.06%)</title><rect x="899.0" y="165" width="0.7" height="15.0" fill="rgb(224,180,6)" rx="2" ry="2" />
<text  x="901.98" y="175.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.06%)</title><rect x="579.2" y="229" width="0.7" height="15.0" fill="rgb(214,123,1)" rx="2" ry="2" />
<text  x="582.16" y="239.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.06%)</title><rect x="478.4" y="293" width="0.7" height="15.0" fill="rgb(205,181,19)" rx="2" ry="2" />
<text  x="481.36" y="303.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.06%)</title><rect x="1062.7" y="437" width="0.7" height="15.0" fill="rgb(227,40,36)" rx="2" ry="2" />
<text  x="1065.68" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="535.2" y="277" width="0.8" height="15.0" fill="rgb(242,229,17)" rx="2" ry="2" />
<text  x="538.20" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (3 samples, 0.19%)</title><rect x="742.1" y="581" width="2.3" height="15.0" fill="rgb(242,53,27)" rx="2" ry="2" />
<text  x="745.10" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.32%)</title><rect x="971.7" y="565" width="3.8" height="15.0" fill="rgb(206,90,50)" rx="2" ry="2" />
<text  x="974.73" y="575.5" ></text>
</g>
<g >
<title>cpu_startup_entry (166 samples, 10.66%)</title><rect x="1064.2" y="549" width="125.8" height="15.0" fill="rgb(227,205,23)" rx="2" ry="2" />
<text  x="1067.19" y="559.5" >cpu_startup_entry</text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.06%)</title><rect x="994.5" y="533" width="0.7" height="15.0" fill="rgb(231,166,16)" rx="2" ry="2" />
<text  x="997.47" y="543.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.06%)</title><rect x="391.2" y="533" width="0.8" height="15.0" fill="rgb(251,220,44)" rx="2" ry="2" />
<text  x="394.21" y="543.5" ></text>
</g>
<g >
<title>CheckMemoryAccess (1 samples, 0.06%)</title><rect x="77.5" y="581" width="0.7" height="15.0" fill="rgb(244,72,34)" rx="2" ry="2" />
<text  x="80.45" y="591.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.06%)</title><rect x="905.8" y="197" width="0.8" height="15.0" fill="rgb(232,133,37)" rx="2" ry="2" />
<text  x="908.80" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.13%)</title><rect x="975.5" y="549" width="1.5" height="15.0" fill="rgb(212,212,42)" rx="2" ry="2" />
<text  x="978.52" y="559.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (1 samples, 0.06%)</title><rect x="488.2" y="293" width="0.8" height="15.0" fill="rgb(232,174,7)" rx="2" ry="2" />
<text  x="491.21" y="303.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (68 samples, 4.37%)</title><rect x="19.9" y="485" width="51.5" height="15.0" fill="rgb(207,202,33)" rx="2" ry="2" />
<text  x="22.85" y="495.5" >perf_..</text>
</g>
<g >
<title>[libc-2.33.so] (1 samples, 0.06%)</title><rect x="10.8" y="581" width="0.7" height="15.0" fill="rgb(205,33,9)" rx="2" ry="2" />
<text  x="13.76" y="591.5" ></text>
</g>
<g >
<title>mutex_unlock (3 samples, 0.19%)</title><rect x="17.6" y="485" width="2.3" height="15.0" fill="rgb(250,210,51)" rx="2" ry="2" />
<text  x="20.58" y="495.5" ></text>
</g>
<g >
<title>crypto_shash_update (10 samples, 0.64%)</title><rect x="689.8" y="213" width="7.6" height="15.0" fill="rgb(224,105,11)" rx="2" ry="2" />
<text  x="692.81" y="223.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (20 samples, 1.28%)</title><rect x="611.7" y="245" width="15.2" height="15.0" fill="rgb(221,144,46)" rx="2" ry="2" />
<text  x="614.75" y="255.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.06%)</title><rect x="567.0" y="277" width="0.8" height="15.0" fill="rgb(215,117,13)" rx="2" ry="2" />
<text  x="570.03" y="287.5" ></text>
</g>
<g >
<title>jbd2__journal_start (10 samples, 0.64%)</title><rect x="503.4" y="325" width="7.6" height="15.0" fill="rgb(209,57,42)" rx="2" ry="2" />
<text  x="506.37" y="335.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeTuple&gt;::serialize_element (2 samples, 0.13%)</title><rect x="992.2" y="501" width="1.5" height="15.0" fill="rgb(235,155,38)" rx="2" ry="2" />
<text  x="995.20" y="511.5" ></text>
</g>
<g >
<title>mm_update_next_owner (1 samples, 0.06%)</title><rect x="971.7" y="485" width="0.8" height="15.0" fill="rgb(229,48,15)" rx="2" ry="2" />
<text  x="974.73" y="495.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.06%)</title><rect x="1183.9" y="501" width="0.8" height="15.0" fill="rgb(221,152,20)" rx="2" ry="2" />
<text  x="1186.94" y="511.5" ></text>
</g>
<g >
<title>generic_write_end (98 samples, 6.29%)</title><rect x="641.3" y="341" width="74.3" height="15.0" fill="rgb(234,56,2)" rx="2" ry="2" />
<text  x="644.30" y="351.5" >generic_..</text>
</g>
<g >
<title>xas_set_mark (2 samples, 0.13%)</title><rect x="661.8" y="277" width="1.5" height="15.0" fill="rgb(224,203,18)" rx="2" ry="2" />
<text  x="664.77" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="74.4" y="293" width="0.8" height="15.0" fill="rgb(216,79,31)" rx="2" ry="2" />
<text  x="77.42" y="303.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::log_metadata (2 samples, 0.13%)</title><rect x="992.2" y="581" width="1.5" height="15.0" fill="rgb(237,75,40)" rx="2" ry="2" />
<text  x="995.20" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="72.9" y="565" width="0.8" height="15.0" fill="rgb(251,227,22)" rx="2" ry="2" />
<text  x="75.90" y="575.5" ></text>
</g>
<g >
<title>__activate_page.part.0 (1 samples, 0.06%)</title><rect x="974.0" y="309" width="0.8" height="15.0" fill="rgb(236,192,42)" rx="2" ry="2" />
<text  x="977.01" y="319.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (1 samples, 0.06%)</title><rect x="528.4" y="245" width="0.7" height="15.0" fill="rgb(227,190,23)" rx="2" ry="2" />
<text  x="531.38" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="73.7" y="309" width="0.7" height="15.0" fill="rgb(208,116,10)" rx="2" ry="2" />
<text  x="76.66" y="319.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.06%)</title><rect x="488.2" y="309" width="0.8" height="15.0" fill="rgb(250,37,15)" rx="2" ry="2" />
<text  x="491.21" y="319.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (1 samples, 0.06%)</title><rect x="519.3" y="229" width="0.7" height="15.0" fill="rgb(240,63,27)" rx="2" ry="2" />
<text  x="522.29" y="239.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.06%)</title><rect x="392.7" y="213" width="0.8" height="15.0" fill="rgb(225,153,2)" rx="2" ry="2" />
<text  x="395.72" y="223.5" ></text>
</g>
<g >
<title>block_invalidatepage (46 samples, 2.95%)</title><rect x="934.6" y="197" width="34.9" height="15.0" fill="rgb(226,45,6)" rx="2" ry="2" />
<text  x="937.60" y="207.5" >bl..</text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.13%)</title><rect x="973.2" y="437" width="1.6" height="15.0" fill="rgb(221,31,44)" rx="2" ry="2" />
<text  x="976.25" y="447.5" ></text>
</g>
<g >
<title>llist_add_batch (3 samples, 0.19%)</title><rect x="1180.9" y="405" width="2.3" height="15.0" fill="rgb(206,217,32)" rx="2" ry="2" />
<text  x="1183.91" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.19%)</title><rect x="742.1" y="517" width="2.3" height="15.0" fill="rgb(210,28,4)" rx="2" ry="2" />
<text  x="745.10" y="527.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (106 samples, 6.81%)</title><rect x="889.1" y="245" width="80.4" height="15.0" fill="rgb(232,190,36)" rx="2" ry="2" />
<text  x="892.13" y="255.5" >truncate_..</text>
</g>
<g >
<title>propagate_protected_usage (1 samples, 0.06%)</title><rect x="566.3" y="229" width="0.7" height="15.0" fill="rgb(228,80,1)" rx="2" ry="2" />
<text  x="569.27" y="239.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (107 samples, 6.87%)</title><rect x="889.1" y="421" width="81.1" height="15.0" fill="rgb(221,98,3)" rx="2" ry="2" />
<text  x="892.13" y="431.5" >ovl_destr..</text>
</g>
<g >
<title>__x64_sys_unlink (107 samples, 6.87%)</title><rect x="889.1" y="533" width="81.1" height="15.0" fill="rgb(244,89,9)" rx="2" ry="2" />
<text  x="892.13" y="543.5" >__x64_sys..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.06%)</title><rect x="776.2" y="501" width="0.8" height="15.0" fill="rgb(208,6,39)" rx="2" ry="2" />
<text  x="779.20" y="511.5" ></text>
</g>
<g >
<title>ext4_inode_csum (14 samples, 0.90%)</title><rect x="686.8" y="229" width="10.6" height="15.0" fill="rgb(227,97,23)" rx="2" ry="2" />
<text  x="689.78" y="239.5" ></text>
</g>
<g >
<title>mem_cgroup_track_foreign_dirty_slowpath (2 samples, 0.13%)</title><rect x="659.5" y="261" width="1.5" height="15.0" fill="rgb(218,206,31)" rx="2" ry="2" />
<text  x="662.49" y="271.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (2 samples, 0.13%)</title><rect x="1174.8" y="405" width="1.6" height="15.0" fill="rgb(219,44,51)" rx="2" ry="2" />
<text  x="1177.84" y="415.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (2 samples, 0.13%)</title><rect x="73.7" y="389" width="1.5" height="15.0" fill="rgb(214,207,5)" rx="2" ry="2" />
<text  x="76.66" y="399.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.06%)</title><rect x="277.5" y="565" width="0.8" height="15.0" fill="rgb(244,80,37)" rx="2" ry="2" />
<text  x="280.53" y="575.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.06%)</title><rect x="74.4" y="357" width="0.8" height="15.0" fill="rgb(250,196,37)" rx="2" ry="2" />
<text  x="77.42" y="367.5" ></text>
</g>
<g >
<title>refill_obj_stock (3 samples, 0.19%)</title><rect x="966.4" y="69" width="2.3" height="15.0" fill="rgb(231,209,6)" rx="2" ry="2" />
<text  x="969.43" y="79.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="73.7" y="293" width="0.7" height="15.0" fill="rgb(225,173,10)" rx="2" ry="2" />
<text  x="76.66" y="303.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.06%)</title><rect x="482.9" y="453" width="0.8" height="15.0" fill="rgb(232,113,50)" rx="2" ry="2" />
<text  x="485.91" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (107 samples, 6.87%)</title><rect x="889.1" y="549" width="81.1" height="15.0" fill="rgb(251,160,13)" rx="2" ry="2" />
<text  x="892.13" y="559.5" >do_syscal..</text>
</g>
<g >
<title>generic_file_buffered_read (118 samples, 7.58%)</title><rect x="393.5" y="373" width="89.4" height="15.0" fill="rgb(225,14,46)" rx="2" ry="2" />
<text  x="396.48" y="383.5" >generic_fi..</text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.06%)</title><rect x="1077.1" y="293" width="0.7" height="15.0" fill="rgb(234,190,21)" rx="2" ry="2" />
<text  x="1080.08" y="303.5" ></text>
</g>
<g >
<title>generic_perform_write (2 samples, 0.13%)</title><rect x="73.7" y="373" width="1.5" height="15.0" fill="rgb(210,33,27)" rx="2" ry="2" />
<text  x="76.66" y="383.5" ></text>
</g>
<g >
<title>xas_store (1 samples, 0.06%)</title><rect x="974.8" y="245" width="0.7" height="15.0" fill="rgb(234,75,3)" rx="2" ry="2" />
<text  x="977.77" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4 samples, 0.26%)</title><rect x="1074.8" y="469" width="3.0" height="15.0" fill="rgb(214,210,32)" rx="2" ry="2" />
<text  x="1077.80" y="479.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.13%)</title><rect x="1076.3" y="421" width="1.5" height="15.0" fill="rgb(230,76,52)" rx="2" ry="2" />
<text  x="1079.32" y="431.5" ></text>
</g>
<g >
<title>pagevec_lookup_entries (9 samples, 0.58%)</title><rect x="919.4" y="229" width="6.9" height="15.0" fill="rgb(246,55,38)" rx="2" ry="2" />
<text  x="922.44" y="239.5" ></text>
</g>
<g >
<title>create_empty_buffers (23 samples, 1.48%)</title><rect x="513.2" y="325" width="17.5" height="15.0" fill="rgb(205,192,23)" rx="2" ry="2" />
<text  x="516.22" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="73.7" y="277" width="0.7" height="15.0" fill="rgb(235,0,48)" rx="2" ry="2" />
<text  x="76.66" y="287.5" ></text>
</g>
<g >
<title>page_cache_free_page.isra.0 (3 samples, 0.19%)</title><rect x="912.6" y="213" width="2.3" height="15.0" fill="rgb(214,25,22)" rx="2" ry="2" />
<text  x="915.62" y="223.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.06%)</title><rect x="974.8" y="357" width="0.7" height="15.0" fill="rgb(222,226,27)" rx="2" ry="2" />
<text  x="977.77" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (337 samples, 21.64%)</title><rect x="484.4" y="565" width="255.4" height="15.0" fill="rgb(245,121,5)" rx="2" ry="2" />
<text  x="487.43" y="575.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (6 samples, 0.39%)</title><rect x="520.8" y="261" width="4.6" height="15.0" fill="rgb(251,129,5)" rx="2" ry="2" />
<text  x="523.80" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.06%)</title><rect x="1165.7" y="405" width="0.8" height="15.0" fill="rgb(211,220,37)" rx="2" ry="2" />
<text  x="1168.75" y="415.5" ></text>
</g>
<g >
<title>__strncmp_avx2 (1 samples, 0.06%)</title><rect x="13.0" y="581" width="0.8" height="15.0" fill="rgb(216,113,15)" rx="2" ry="2" />
<text  x="16.03" y="591.5" ></text>
</g>
<g >
<title>find_get_entries (8 samples, 0.51%)</title><rect x="919.4" y="213" width="6.1" height="15.0" fill="rgb(213,196,2)" rx="2" ry="2" />
<text  x="922.44" y="223.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (1 samples, 0.06%)</title><rect x="996.0" y="517" width="0.7" height="15.0" fill="rgb(206,220,20)" rx="2" ry="2" />
<text  x="998.99" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.32%)</title><rect x="388.2" y="549" width="3.8" height="15.0" fill="rgb(219,114,2)" rx="2" ry="2" />
<text  x="391.18" y="559.5" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 0.06%)</title><rect x="72.9" y="453" width="0.8" height="15.0" fill="rgb(218,163,23)" rx="2" ry="2" />
<text  x="75.90" y="463.5" ></text>
</g>
<g >
<title>cpumask_next (2 samples, 0.13%)</title><rect x="1174.8" y="421" width="1.6" height="15.0" fill="rgb(239,89,20)" rx="2" ry="2" />
<text  x="1177.84" y="431.5" ></text>
</g>
<g >
<title>BitmapSetBit (1 samples, 0.06%)</title><rect x="276.8" y="549" width="0.7" height="15.0" fill="rgb(207,40,53)" rx="2" ry="2" />
<text  x="279.77" y="559.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.06%)</title><rect x="72.9" y="501" width="0.8" height="15.0" fill="rgb(242,78,7)" rx="2" ry="2" />
<text  x="75.90" y="511.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="650.4" y="277" width="0.8" height="15.0" fill="rgb(242,2,29)" rx="2" ry="2" />
<text  x="653.40" y="287.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.06%)</title><rect x="974.8" y="485" width="0.7" height="15.0" fill="rgb(221,170,38)" rx="2" ry="2" />
<text  x="977.77" y="495.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.06%)</title><rect x="739.1" y="533" width="0.7" height="15.0" fill="rgb(245,98,30)" rx="2" ry="2" />
<text  x="742.07" y="543.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.06%)</title><rect x="648.9" y="293" width="0.7" height="15.0" fill="rgb(237,70,34)" rx="2" ry="2" />
<text  x="651.88" y="303.5" ></text>
</g>
<g >
<title>exit_mmap (3 samples, 0.19%)</title><rect x="972.5" y="469" width="2.3" height="15.0" fill="rgb(233,100,17)" rx="2" ry="2" />
<text  x="975.49" y="479.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (2 samples, 0.13%)</title><rect x="73.7" y="421" width="1.5" height="15.0" fill="rgb(217,27,53)" rx="2" ry="2" />
<text  x="76.66" y="431.5" ></text>
</g>
<g >
<title>event_function (2 samples, 0.13%)</title><rect x="75.2" y="405" width="1.5" height="15.0" fill="rgb(229,166,15)" rx="2" ry="2" />
<text  x="78.18" y="415.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.06%)</title><rect x="1187.7" y="485" width="0.8" height="15.0" fill="rgb(219,167,20)" rx="2" ry="2" />
<text  x="1190.73" y="495.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for  (2 samples, 0.13%)</title><rect x="992.2" y="517" width="1.5" height="15.0" fill="rgb(229,145,22)" rx="2" ry="2" />
<text  x="995.20" y="527.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.06%)</title><rect x="954.3" y="101" width="0.8" height="15.0" fill="rgb(220,156,24)" rx="2" ry="2" />
<text  x="957.30" y="111.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.06%)</title><rect x="996.0" y="421" width="0.7" height="15.0" fill="rgb(233,69,0)" rx="2" ry="2" />
<text  x="998.99" y="431.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (6 samples, 0.39%)</title><rect x="489.7" y="357" width="4.6" height="15.0" fill="rgb(254,75,49)" rx="2" ry="2" />
<text  x="492.73" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3 samples, 0.19%)</title><rect x="654.2" y="277" width="2.3" height="15.0" fill="rgb(230,1,25)" rx="2" ry="2" />
<text  x="657.19" y="287.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.06%)</title><rect x="893.7" y="165" width="0.7" height="15.0" fill="rgb(245,67,16)" rx="2" ry="2" />
<text  x="896.67" y="175.5" ></text>
</g>
<g >
<title>activate_page (23 samples, 1.48%)</title><rect x="461.7" y="341" width="17.4" height="15.0" fill="rgb(231,63,25)" rx="2" ry="2" />
<text  x="464.69" y="351.5" ></text>
</g>
<g >
<title>NaClSysWaitpid (41 samples, 2.63%)</title><rect x="181.3" y="581" width="31.1" height="15.0" fill="rgb(250,92,42)" rx="2" ry="2" />
<text  x="184.28" y="591.5" >Na..</text>
</g>
<g >
<title>evict (107 samples, 6.87%)</title><rect x="889.1" y="453" width="81.1" height="15.0" fill="rgb(250,130,53)" rx="2" ry="2" />
<text  x="892.13" y="463.5" >evict</text>
</g>
<g >
<title>swapper (255 samples, 16.38%)</title><rect x="996.7" y="597" width="193.3" height="15.0" fill="rgb(206,217,35)" rx="2" ry="2" />
<text  x="999.74" y="607.5" >swapper</text>
</g>
<g >
<title>do_iter_write (332 samples, 21.32%)</title><rect x="487.5" y="437" width="251.6" height="15.0" fill="rgb(241,111,24)" rx="2" ry="2" />
<text  x="490.46" y="447.5" >do_iter_write</text>
</g>
<g >
<title>__ext4_mark_inode_dirty (62 samples, 3.98%)</title><rect x="667.8" y="293" width="47.0" height="15.0" fill="rgb(217,7,5)" rx="2" ry="2" />
<text  x="670.83" y="303.5" >__ex..</text>
</g>
<g >
<title>[bash] (1 samples, 0.06%)</title><rect x="10.0" y="581" width="0.8" height="15.0" fill="rgb(206,146,30)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (107 samples, 6.87%)</title><rect x="889.1" y="261" width="81.1" height="15.0" fill="rgb(228,214,41)" rx="2" ry="2" />
<text  x="892.13" y="271.5" >truncate_..</text>
</g>
<g >
<title>find_get_entry (1 samples, 0.06%)</title><rect x="392.7" y="229" width="0.8" height="15.0" fill="rgb(237,224,48)" rx="2" ry="2" />
<text  x="395.72" y="239.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.06%)</title><rect x="74.4" y="341" width="0.8" height="15.0" fill="rgb(209,175,48)" rx="2" ry="2" />
<text  x="77.42" y="351.5" ></text>
</g>
<g >
<title>ovl_write_iter (333 samples, 21.39%)</title><rect x="486.7" y="469" width="252.4" height="15.0" fill="rgb(233,52,48)" rx="2" ry="2" />
<text  x="489.70" y="479.5" >ovl_write_iter</text>
</g>
<g >
<title>__x64_sys_lseek (4 samples, 0.26%)</title><rect x="388.2" y="533" width="3.0" height="15.0" fill="rgb(219,169,33)" rx="2" ry="2" />
<text  x="391.18" y="543.5" ></text>
</g>
<g >
<title>event_function_call (64 samples, 4.11%)</title><rect x="22.9" y="453" width="48.5" height="15.0" fill="rgb(243,83,34)" rx="2" ry="2" />
<text  x="25.88" y="463.5" >even..</text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.06%)</title><rect x="392.7" y="389" width="0.8" height="15.0" fill="rgb(223,69,24)" rx="2" ry="2" />
<text  x="395.72" y="399.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook.constprop.0 (2 samples, 0.13%)</title><rect x="633.7" y="293" width="1.5" height="15.0" fill="rgb(243,23,35)" rx="2" ry="2" />
<text  x="636.73" y="303.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (332 samples, 21.32%)</title><rect x="487.5" y="405" width="251.6" height="15.0" fill="rgb(232,1,21)" rx="2" ry="2" />
<text  x="490.46" y="415.5" >ext4_file_write_iter</text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.06%)</title><rect x="903.5" y="165" width="0.8" height="15.0" fill="rgb(233,197,34)" rx="2" ry="2" />
<text  x="906.53" y="175.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.06%)</title><rect x="946.7" y="53" width="0.8" height="15.0" fill="rgb(234,9,39)" rx="2" ry="2" />
<text  x="949.72" y="63.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.06%)</title><rect x="993.0" y="389" width="0.7" height="15.0" fill="rgb(234,116,37)" rx="2" ry="2" />
<text  x="995.95" y="399.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 4.05%)</title><rect x="23.6" y="341" width="47.8" height="15.0" fill="rgb(224,31,24)" rx="2" ry="2" />
<text  x="26.64" y="351.5" >x86_..</text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.06%)</title><rect x="1062.7" y="421" width="0.7" height="15.0" fill="rgb(219,33,47)" rx="2" ry="2" />
<text  x="1065.68" y="431.5" ></text>
</g>
<g >
<title>ovl_file_accessed.part.0 (1 samples, 0.06%)</title><rect x="392.7" y="453" width="0.8" height="15.0" fill="rgb(216,44,9)" rx="2" ry="2" />
<text  x="395.72" y="463.5" ></text>
</g>
<g >
<title>find_next_and_bit (1 samples, 0.06%)</title><rect x="1062.7" y="405" width="0.7" height="15.0" fill="rgb(251,72,24)" rx="2" ry="2" />
<text  x="1065.68" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.13%)</title><rect x="1162.7" y="437" width="1.5" height="15.0" fill="rgb(245,147,36)" rx="2" ry="2" />
<text  x="1165.72" y="447.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.13%)</title><rect x="1074.8" y="421" width="1.5" height="15.0" fill="rgb(236,26,26)" rx="2" ry="2" />
<text  x="1077.80" y="431.5" ></text>
</g>
<g >
<title>account_page_dirtied (7 samples, 0.45%)</title><rect x="656.5" y="277" width="5.3" height="15.0" fill="rgb(254,143,31)" rx="2" ry="2" />
<text  x="659.46" y="287.5" ></text>
</g>
<g >
<title>ovl_inode_realdata (1 samples, 0.06%)</title><rect x="388.9" y="469" width="0.8" height="15.0" fill="rgb(236,70,27)" rx="2" ry="2" />
<text  x="391.93" y="479.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.06%)</title><rect x="1169.5" y="501" width="0.8" height="15.0" fill="rgb(254,160,43)" rx="2" ry="2" />
<text  x="1172.54" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.06%)</title><rect x="278.3" y="581" width="0.7" height="15.0" fill="rgb(236,128,48)" rx="2" ry="2" />
<text  x="281.29" y="591.5" ></text>
</g>
<g >
<title>flush_to_ldisc (1 samples, 0.06%)</title><rect x="1063.4" y="517" width="0.8" height="15.0" fill="rgb(251,102,13)" rx="2" ry="2" />
<text  x="1066.44" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.13%)</title><rect x="75.2" y="581" width="1.5" height="15.0" fill="rgb(244,119,16)" rx="2" ry="2" />
<text  x="78.18" y="591.5" ></text>
</g>
<g >
<title>vfs_iter_write (332 samples, 21.32%)</title><rect x="487.5" y="453" width="251.6" height="15.0" fill="rgb(251,210,6)" rx="2" ry="2" />
<text  x="490.46" y="463.5" >vfs_iter_write</text>
</g>
<g >
<title>vfs_iter_write (2 samples, 0.13%)</title><rect x="73.7" y="453" width="1.5" height="15.0" fill="rgb(221,47,42)" rx="2" ry="2" />
<text  x="76.66" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (3 samples, 0.19%)</title><rect x="993.7" y="581" width="2.3" height="15.0" fill="rgb(244,145,38)" rx="2" ry="2" />
<text  x="996.71" y="591.5" ></text>
</g>
<g >
<title>page_cache_delete (1 samples, 0.06%)</title><rect x="974.8" y="261" width="0.7" height="15.0" fill="rgb(228,9,29)" rx="2" ry="2" />
<text  x="977.77" y="271.5" ></text>
</g>
<g >
<title>iput (107 samples, 6.87%)</title><rect x="889.1" y="501" width="81.1" height="15.0" fill="rgb(234,149,28)" rx="2" ry="2" />
<text  x="892.13" y="511.5" >iput</text>
</g>
<g >
<title>cpuidle_enter (112 samples, 7.19%)</title><rect x="1071.8" y="501" width="84.9" height="15.0" fill="rgb(210,28,2)" rx="2" ry="2" />
<text  x="1074.77" y="511.5" >cpuidle_e..</text>
</g>
<g >
<title>new_sync_write (333 samples, 21.39%)</title><rect x="486.7" y="485" width="252.4" height="15.0" fill="rgb(209,110,15)" rx="2" ry="2" />
<text  x="489.70" y="495.5" >new_sync_write</text>
</g>
<g >
<title>__get_user_nocheck_1 (1 samples, 0.06%)</title><rect x="73.7" y="357" width="0.7" height="15.0" fill="rgb(219,45,42)" rx="2" ry="2" />
<text  x="76.66" y="367.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.13%)</title><rect x="561.0" y="277" width="1.5" height="15.0" fill="rgb(251,50,25)" rx="2" ry="2" />
<text  x="563.97" y="287.5" ></text>
</g>
<g >
<title>xas_store (3 samples, 0.19%)</title><rect x="910.3" y="197" width="2.3" height="15.0" fill="rgb(209,81,17)" rx="2" ry="2" />
<text  x="913.35" y="207.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.06%)</title><rect x="524.6" y="245" width="0.8" height="15.0" fill="rgb(222,4,51)" rx="2" ry="2" />
<text  x="527.59" y="255.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.06%)</title><rect x="974.8" y="453" width="0.7" height="15.0" fill="rgb(250,32,10)" rx="2" ry="2" />
<text  x="977.77" y="463.5" ></text>
</g>
<g >
<title>schedule_idle (17 samples, 1.09%)</title><rect x="1170.3" y="517" width="12.9" height="15.0" fill="rgb(212,49,38)" rx="2" ry="2" />
<text  x="1173.30" y="527.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.06%)</title><rect x="11.5" y="485" width="0.8" height="15.0" fill="rgb(254,158,50)" rx="2" ry="2" />
<text  x="14.52" y="495.5" ></text>
</g>
<g >
<title>__libc_lseek (6 samples, 0.39%)</title><rect x="387.4" y="581" width="4.6" height="15.0" fill="rgb(219,103,42)" rx="2" ry="2" />
<text  x="390.42" y="591.5" ></text>
</g>
<g >
<title>render_sigset_t (1 samples, 0.06%)</title><rect x="72.9" y="421" width="0.8" height="15.0" fill="rgb(217,158,25)" rx="2" ry="2" />
<text  x="75.90" y="431.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.06%)</title><rect x="974.8" y="437" width="0.7" height="15.0" fill="rgb(239,214,1)" rx="2" ry="2" />
<text  x="977.77" y="447.5" ></text>
</g>
<g >
<title>ext4_llseek (1 samples, 0.06%)</title><rect x="389.7" y="469" width="0.7" height="15.0" fill="rgb(244,167,15)" rx="2" ry="2" />
<text  x="392.69" y="479.5" ></text>
</g>
<g >
<title>pagecache_get_page (115 samples, 7.39%)</title><rect x="542.0" y="325" width="87.2" height="15.0" fill="rgb(253,185,26)" rx="2" ry="2" />
<text  x="545.02" y="335.5" >pagecache_..</text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (31 samples, 1.99%)</title><rect x="945.2" y="149" width="23.5" height="15.0" fill="rgb(244,10,49)" rx="2" ry="2" />
<text  x="948.21" y="159.5" >j..</text>
</g>
<g >
<title>DynArrayGet (38 samples, 2.44%)</title><rect x="79.7" y="581" width="28.8" height="15.0" fill="rgb(224,69,38)" rx="2" ry="2" />
<text  x="82.72" y="591.5" >Dy..</text>
</g>
<g >
<title>__libc_write (2 samples, 0.13%)</title><rect x="73.7" y="581" width="1.5" height="15.0" fill="rgb(241,130,42)" rx="2" ry="2" />
<text  x="76.66" y="591.5" ></text>
</g>
<g >
<title>do_exit (5 samples, 0.32%)</title><rect x="971.7" y="517" width="3.8" height="15.0" fill="rgb(240,146,24)" rx="2" ry="2" />
<text  x="974.73" y="527.5" ></text>
</g>
<g >
<title>__find_get_block_slow (1 samples, 0.06%)</title><rect x="392.7" y="261" width="0.8" height="15.0" fill="rgb(247,174,18)" rx="2" ry="2" />
<text  x="395.72" y="271.5" ></text>
</g>
<g >
<title>NaClXCondVarBroadcast (30 samples, 1.93%)</title><rect x="214.6" y="581" width="22.8" height="15.0" fill="rgb(247,86,11)" rx="2" ry="2" />
<text  x="217.62" y="591.5" >N..</text>
</g>
<g >
<title>file_update_time (1 samples, 0.06%)</title><rect x="488.2" y="357" width="0.8" height="15.0" fill="rgb(251,159,14)" rx="2" ry="2" />
<text  x="491.21" y="367.5" ></text>
</g>
<g >
<title>NaClSysRead (1 samples, 0.06%)</title><rect x="180.5" y="581" width="0.8" height="15.0" fill="rgb(217,88,26)" rx="2" ry="2" />
<text  x="183.52" y="591.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.06%)</title><rect x="776.2" y="389" width="0.8" height="15.0" fill="rgb(207,182,40)" rx="2" ry="2" />
<text  x="779.20" y="399.5" ></text>
</g>
<g >
<title>perf_ioctl (75 samples, 4.82%)</title><rect x="14.5" y="517" width="56.9" height="15.0" fill="rgb(242,83,2)" rx="2" ry="2" />
<text  x="17.55" y="527.5" >perf_i..</text>
</g>
<g >
<title>uncharge_page (1 samples, 0.06%)</title><rect x="905.0" y="181" width="0.8" height="15.0" fill="rgb(213,226,19)" rx="2" ry="2" />
<text  x="908.04" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.06%)</title><rect x="776.2" y="421" width="0.8" height="15.0" fill="rgb(235,10,15)" rx="2" ry="2" />
<text  x="779.20" y="431.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.06%)</title><rect x="658.0" y="229" width="0.7" height="15.0" fill="rgb(220,167,48)" rx="2" ry="2" />
<text  x="660.98" y="239.5" ></text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.06%)</title><rect x="11.5" y="453" width="0.8" height="15.0" fill="rgb(240,32,32)" rx="2" ry="2" />
<text  x="14.52" y="463.5" ></text>
</g>
<g >
<title>generic_file_buffered_read_get_pages (5 samples, 0.32%)</title><rect x="455.6" y="357" width="3.8" height="15.0" fill="rgb(233,44,10)" rx="2" ry="2" />
<text  x="458.63" y="367.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.06%)</title><rect x="392.7" y="405" width="0.8" height="15.0" fill="rgb(224,184,22)" rx="2" ry="2" />
<text  x="395.72" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.06%)</title><rect x="994.5" y="501" width="0.7" height="15.0" fill="rgb(210,70,48)" rx="2" ry="2" />
<text  x="997.47" y="511.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (14 samples, 0.90%)</title><rect x="530.7" y="325" width="10.6" height="15.0" fill="rgb(234,83,20)" rx="2" ry="2" />
<text  x="533.66" y="335.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 4.11%)</title><rect x="22.9" y="405" width="48.5" height="15.0" fill="rgb(225,59,50)" rx="2" ry="2" />
<text  x="25.88" y="415.5" >remo..</text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.06%)</title><rect x="386.7" y="517" width="0.7" height="15.0" fill="rgb(215,89,30)" rx="2" ry="2" />
<text  x="389.66" y="527.5" ></text>
</g>
<g >
<title>__activate_page (1 samples, 0.06%)</title><rect x="974.0" y="325" width="0.8" height="15.0" fill="rgb(253,99,41)" rx="2" ry="2" />
<text  x="977.01" y="335.5" ></text>
</g>
<g >
<title>ksys_lseek (3 samples, 0.19%)</title><rect x="388.2" y="517" width="2.2" height="15.0" fill="rgb(227,21,43)" rx="2" ry="2" />
<text  x="391.18" y="527.5" ></text>
</g>
<g >
<title>ctx_resched (2 samples, 0.13%)</title><rect x="75.2" y="373" width="1.5" height="15.0" fill="rgb(241,82,0)" rx="2" ry="2" />
<text  x="78.18" y="383.5" ></text>
</g>
<g >
<title>exc_page_fault (3 samples, 0.19%)</title><rect x="742.1" y="549" width="2.3" height="15.0" fill="rgb(251,19,29)" rx="2" ry="2" />
<text  x="745.10" y="559.5" ></text>
</g>
<g >
<title>dput (107 samples, 6.87%)</title><rect x="889.1" y="405" width="81.1" height="15.0" fill="rgb(208,97,51)" rx="2" ry="2" />
<text  x="892.13" y="415.5" >dput</text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.06%)</title><rect x="743.6" y="405" width="0.8" height="15.0" fill="rgb(241,79,54)" rx="2" ry="2" />
<text  x="746.62" y="415.5" ></text>
</g>
<g >
<title>lookup_bh_lru (1 samples, 0.06%)</title><rect x="711.0" y="213" width="0.8" height="15.0" fill="rgb(205,47,12)" rx="2" ry="2" />
<text  x="714.03" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.06%)</title><rect x="1187.7" y="469" width="0.8" height="15.0" fill="rgb(231,223,37)" rx="2" ry="2" />
<text  x="1190.73" y="479.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (35 samples, 2.25%)</title><rect x="545.1" y="293" width="26.5" height="15.0" fill="rgb(233,21,29)" rx="2" ry="2" />
<text  x="548.05" y="303.5" >_..</text>
</g>
<g >
<title>__GI_munmap (1 samples, 0.06%)</title><rect x="386.7" y="581" width="0.7" height="15.0" fill="rgb(237,174,7)" rx="2" ry="2" />
<text  x="389.66" y="591.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.06%)</title><rect x="907.3" y="213" width="0.8" height="15.0" fill="rgb(224,29,24)" rx="2" ry="2" />
<text  x="910.32" y="223.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.13%)</title><rect x="892.9" y="181" width="1.5" height="15.0" fill="rgb(231,34,5)" rx="2" ry="2" />
<text  x="895.92" y="191.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.13%)</title><rect x="973.2" y="421" width="1.6" height="15.0" fill="rgb(206,72,26)" rx="2" ry="2" />
<text  x="976.25" y="431.5" ></text>
</g>
<g >
<title>ext4_nonda_switch (1 samples, 0.06%)</title><rect x="716.3" y="357" width="0.8" height="15.0" fill="rgb(234,119,44)" rx="2" ry="2" />
<text  x="719.33" y="367.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.06%)</title><rect x="1074.8" y="373" width="0.8" height="15.0" fill="rgb(247,51,26)" rx="2" ry="2" />
<text  x="1077.80" y="383.5" ></text>
</g>
<g >
<title>do_unlinkat (107 samples, 6.87%)</title><rect x="889.1" y="517" width="81.1" height="15.0" fill="rgb(233,227,26)" rx="2" ry="2" />
<text  x="892.13" y="527.5" >do_unlinkat</text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.13%)</title><rect x="742.9" y="485" width="1.5" height="15.0" fill="rgb(223,81,1)" rx="2" ry="2" />
<text  x="745.86" y="495.5" ></text>
</g>
<g >
<title>smp_call_function_single (64 samples, 4.11%)</title><rect x="22.9" y="437" width="48.5" height="15.0" fill="rgb(220,59,15)" rx="2" ry="2" />
<text  x="25.88" y="447.5" >smp_..</text>
</g>
<g >
<title>xas_clear_mark (2 samples, 0.13%)</title><rect x="908.8" y="197" width="1.5" height="15.0" fill="rgb(207,97,6)" rx="2" ry="2" />
<text  x="911.83" y="207.5" ></text>
</g>
<g >
<title>wake_up_bit (1 samples, 0.06%)</title><rect x="968.7" y="181" width="0.8" height="15.0" fill="rgb(253,186,32)" rx="2" ry="2" />
<text  x="971.70" y="191.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (24 samples, 1.54%)</title><rect x="717.1" y="341" width="18.2" height="15.0" fill="rgb(219,45,44)" rx="2" ry="2" />
<text  x="720.09" y="351.5" ></text>
</g>
<g >
<title>copy_page_from_iter (2 samples, 0.13%)</title><rect x="975.5" y="453" width="1.5" height="15.0" fill="rgb(205,115,26)" rx="2" ry="2" />
<text  x="978.52" y="463.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.06%)</title><rect x="946.7" y="37" width="0.8" height="15.0" fill="rgb(222,56,27)" rx="2" ry="2" />
<text  x="949.72" y="47.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.06%)</title><rect x="974.8" y="405" width="0.7" height="15.0" fill="rgb(254,160,2)" rx="2" ry="2" />
<text  x="977.77" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.06%)</title><rect x="387.4" y="565" width="0.8" height="15.0" fill="rgb(252,183,5)" rx="2" ry="2" />
<text  x="390.42" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.13%)</title><rect x="73.7" y="549" width="1.5" height="15.0" fill="rgb(243,101,34)" rx="2" ry="2" />
<text  x="76.66" y="559.5" ></text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.06%)</title><rect x="72.9" y="469" width="0.8" height="15.0" fill="rgb(236,67,30)" rx="2" ry="2" />
<text  x="75.90" y="479.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.06%)</title><rect x="482.9" y="485" width="0.8" height="15.0" fill="rgb(245,113,42)" rx="2" ry="2" />
<text  x="485.91" y="495.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.06%)</title><rect x="11.5" y="565" width="0.8" height="15.0" fill="rgb(214,41,20)" rx="2" ry="2" />
<text  x="14.52" y="575.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.06%)</title><rect x="715.6" y="341" width="0.7" height="15.0" fill="rgb(224,218,2)" rx="2" ry="2" />
<text  x="718.57" y="351.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.13%)</title><rect x="1184.7" y="485" width="1.5" height="15.0" fill="rgb(247,176,37)" rx="2" ry="2" />
<text  x="1187.69" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.13%)</title><rect x="1074.8" y="405" width="1.5" height="15.0" fill="rgb(243,166,35)" rx="2" ry="2" />
<text  x="1077.80" y="415.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (17 samples, 1.09%)</title><rect x="614.0" y="229" width="12.9" height="15.0" fill="rgb(228,16,10)" rx="2" ry="2" />
<text  x="617.02" y="239.5" ></text>
</g>
<g >
<title>__activate_page.part.0 (11 samples, 0.71%)</title><rect x="468.5" y="293" width="8.3" height="15.0" fill="rgb(217,120,16)" rx="2" ry="2" />
<text  x="471.51" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="11.5" y="533" width="0.8" height="15.0" fill="rgb(236,12,34)" rx="2" ry="2" />
<text  x="14.52" y="543.5" ></text>
</g>
<g >
<title>event_function_call (2 samples, 0.13%)</title><rect x="75.2" y="469" width="1.5" height="15.0" fill="rgb(242,0,44)" rx="2" ry="2" />
<text  x="78.18" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (121 samples, 7.77%)</title><rect x="392.0" y="549" width="91.7" height="15.0" fill="rgb(218,28,7)" rx="2" ry="2" />
<text  x="394.97" y="559.5" >do_syscall..</text>
</g>
<g >
<title>HandleStackContext (1 samples, 0.06%)</title><rect x="108.5" y="581" width="0.8" height="15.0" fill="rgb(248,180,18)" rx="2" ry="2" />
<text  x="111.52" y="591.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="776.2" y="565" width="0.8" height="15.0" fill="rgb(247,214,48)" rx="2" ry="2" />
<text  x="779.20" y="575.5" ></text>
</g>
<g >
<title>tty_ldisc_receive_buf (1 samples, 0.06%)</title><rect x="1063.4" y="485" width="0.8" height="15.0" fill="rgb(227,69,9)" rx="2" ry="2" />
<text  x="1066.44" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (4 samples, 0.26%)</title><rect x="382.9" y="581" width="3.0" height="15.0" fill="rgb(253,46,43)" rx="2" ry="2" />
<text  x="385.87" y="591.5" ></text>
</g>
<g >
<title>free_unref_page_list (10 samples, 0.64%)</title><rect x="895.2" y="197" width="7.6" height="15.0" fill="rgb(212,69,8)" rx="2" ry="2" />
<text  x="898.19" y="207.5" ></text>
</g>
<g >
<title>find_next_bit (1 samples, 0.06%)</title><rect x="1176.4" y="421" width="0.7" height="15.0" fill="rgb(212,29,42)" rx="2" ry="2" />
<text  x="1179.36" y="431.5" ></text>
</g>
<g >
<title>page_cache_delete_batch (6 samples, 0.39%)</title><rect x="908.1" y="213" width="4.5" height="15.0" fill="rgb(252,85,23)" rx="2" ry="2" />
<text  x="911.07" y="223.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (2 samples, 0.13%)</title><rect x="504.1" y="293" width="1.5" height="15.0" fill="rgb(212,90,19)" rx="2" ry="2" />
<text  x="507.13" y="303.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.06%)</title><rect x="974.8" y="373" width="0.7" height="15.0" fill="rgb(205,196,22)" rx="2" ry="2" />
<text  x="977.77" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.13%)</title><rect x="946.7" y="69" width="1.5" height="15.0" fill="rgb(205,71,24)" rx="2" ry="2" />
<text  x="949.72" y="79.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.06%)</title><rect x="974.8" y="421" width="0.7" height="15.0" fill="rgb(238,186,39)" rx="2" ry="2" />
<text  x="977.77" y="431.5" ></text>
</g>
<g >
<title>workingset_activation (4 samples, 0.26%)</title><rect x="479.1" y="341" width="3.1" height="15.0" fill="rgb(244,176,50)" rx="2" ry="2" />
<text  x="482.12" y="351.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.06%)</title><rect x="974.8" y="229" width="0.7" height="15.0" fill="rgb(229,181,11)" rx="2" ry="2" />
<text  x="977.77" y="239.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.06%)</title><rect x="73.7" y="261" width="0.7" height="15.0" fill="rgb(215,9,21)" rx="2" ry="2" />
<text  x="76.66" y="271.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.06%)</title><rect x="498.8" y="357" width="0.8" height="15.0" fill="rgb(209,77,5)" rx="2" ry="2" />
<text  x="501.82" y="367.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.06%)</title><rect x="73.7" y="245" width="0.7" height="15.0" fill="rgb(231,18,18)" rx="2" ry="2" />
<text  x="76.66" y="255.5" ></text>
</g>
<g >
<title>process_vm_rw (2 samples, 0.13%)</title><rect x="975.5" y="501" width="1.5" height="15.0" fill="rgb(226,52,35)" rx="2" ry="2" />
<text  x="978.52" y="511.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.06%)</title><rect x="640.5" y="293" width="0.8" height="15.0" fill="rgb(231,15,22)" rx="2" ry="2" />
<text  x="643.55" y="303.5" ></text>
</g>
<g >
<title>shmem_fault (2 samples, 0.13%)</title><rect x="742.9" y="421" width="1.5" height="15.0" fill="rgb(216,24,17)" rx="2" ry="2" />
<text  x="745.86" y="431.5" ></text>
</g>
<g >
<title>activate_page (1 samples, 0.06%)</title><rect x="393.5" y="357" width="0.7" height="15.0" fill="rgb(219,159,26)" rx="2" ry="2" />
<text  x="396.48" y="367.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="947.5" y="53" width="0.7" height="15.0" fill="rgb(247,12,20)" rx="2" ry="2" />
<text  x="950.48" y="63.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.06%)</title><rect x="1062.7" y="549" width="0.7" height="15.0" fill="rgb(212,123,39)" rx="2" ry="2" />
<text  x="1065.68" y="559.5" ></text>
</g>
<g >
<title>ret_from_fork (2 samples, 0.13%)</title><rect x="1062.7" y="581" width="1.5" height="15.0" fill="rgb(230,62,43)" rx="2" ry="2" />
<text  x="1065.68" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_write (2 samples, 0.13%)</title><rect x="73.7" y="533" width="1.5" height="15.0" fill="rgb(227,140,52)" rx="2" ry="2" />
<text  x="76.66" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.06%)</title><rect x="776.2" y="517" width="0.8" height="15.0" fill="rgb(230,4,11)" rx="2" ry="2" />
<text  x="779.20" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_write (336 samples, 21.58%)</title><rect x="484.4" y="533" width="254.7" height="15.0" fill="rgb(219,140,22)" rx="2" ry="2" />
<text  x="487.43" y="543.5" >__x64_sys_write</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.06%)</title><rect x="1077.1" y="309" width="0.7" height="15.0" fill="rgb(225,115,40)" rx="2" ry="2" />
<text  x="1080.08" y="319.5" ></text>
</g>
<g >
<title>file_remove_privs (1 samples, 0.06%)</title><rect x="486.7" y="453" width="0.8" height="15.0" fill="rgb(243,211,43)" rx="2" ry="2" />
<text  x="489.70" y="463.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (6 samples, 0.39%)</title><rect x="562.5" y="277" width="4.5" height="15.0" fill="rgb(232,6,32)" rx="2" ry="2" />
<text  x="565.49" y="287.5" ></text>
</g>
<g >
<title>__xa_set_mark (4 samples, 0.26%)</title><rect x="651.2" y="277" width="3.0" height="15.0" fill="rgb(227,103,33)" rx="2" ry="2" />
<text  x="654.16" y="287.5" ></text>
</g>
<g >
<title>__schedule (17 samples, 1.09%)</title><rect x="1170.3" y="501" width="12.9" height="15.0" fill="rgb(249,155,48)" rx="2" ry="2" />
<text  x="1173.30" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="386.7" y="565" width="0.7" height="15.0" fill="rgb(225,199,14)" rx="2" ry="2" />
<text  x="389.66" y="575.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="1074.8" y="325" width="0.8" height="15.0" fill="rgb(227,29,1)" rx="2" ry="2" />
<text  x="1077.80" y="335.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (1 samples, 0.06%)</title><rect x="700.4" y="245" width="0.8" height="15.0" fill="rgb(226,184,0)" rx="2" ry="2" />
<text  x="703.42" y="255.5" ></text>
</g>
<g >
<title>_raw_write_lock (3 samples, 0.19%)</title><rect x="536.0" y="277" width="2.2" height="15.0" fill="rgb(230,226,1)" rx="2" ry="2" />
<text  x="538.96" y="287.5" ></text>
</g>
<g >
<title>start_secondary (166 samples, 10.66%)</title><rect x="1064.2" y="565" width="125.8" height="15.0" fill="rgb(238,139,20)" rx="2" ry="2" />
<text  x="1067.19" y="575.5" >start_secondary</text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.06%)</title><rect x="566.3" y="245" width="0.7" height="15.0" fill="rgb(241,49,13)" rx="2" ry="2" />
<text  x="569.27" y="255.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (3 samples, 0.19%)</title><rect x="966.4" y="85" width="2.3" height="15.0" fill="rgb(245,114,16)" rx="2" ry="2" />
<text  x="969.43" y="95.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.06%)</title><rect x="996.0" y="565" width="0.7" height="15.0" fill="rgb(212,73,39)" rx="2" ry="2" />
<text  x="998.99" y="575.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.06%)</title><rect x="1178.6" y="421" width="0.8" height="15.0" fill="rgb(208,155,53)" rx="2" ry="2" />
<text  x="1181.63" y="431.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="994.5" y="549" width="0.7" height="15.0" fill="rgb(235,82,14)" rx="2" ry="2" />
<text  x="997.47" y="559.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="392.0" y="501" width="0.7" height="15.0" fill="rgb(226,52,47)" rx="2" ry="2" />
<text  x="394.97" y="511.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.13%)</title><rect x="1074.8" y="437" width="1.5" height="15.0" fill="rgb(233,83,28)" rx="2" ry="2" />
<text  x="1077.80" y="447.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (7 samples, 0.45%)</title><rect x="575.4" y="277" width="5.3" height="15.0" fill="rgb(233,122,32)" rx="2" ry="2" />
<text  x="578.37" y="287.5" ></text>
</g>
<g >
<title>generic_file_read_iter (118 samples, 7.58%)</title><rect x="393.5" y="389" width="89.4" height="15.0" fill="rgb(228,76,29)" rx="2" ry="2" />
<text  x="396.48" y="399.5" >generic_fi..</text>
</g>
<g >
<title>serde_json::ser::to_string (2 samples, 0.13%)</title><rect x="992.2" y="565" width="1.5" height="15.0" fill="rgb(215,148,48)" rx="2" ry="2" />
<text  x="995.20" y="575.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="712.5" y="213" width="0.8" height="15.0" fill="rgb(222,219,9)" rx="2" ry="2" />
<text  x="715.54" y="223.5" ></text>
</g>
<g >
<title>stop_this_handle (8 samples, 0.51%)</title><rect x="635.2" y="309" width="6.1" height="15.0" fill="rgb(240,29,40)" rx="2" ry="2" />
<text  x="638.24" y="319.5" ></text>
</g>
<g >
<title>NaClXMutexLock (13 samples, 0.83%)</title><rect x="237.4" y="581" width="9.8" height="15.0" fill="rgb(254,206,38)" rx="2" ry="2" />
<text  x="240.36" y="591.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.06%)</title><rect x="1062.7" y="533" width="0.7" height="15.0" fill="rgb(236,212,42)" rx="2" ry="2" />
<text  x="1065.68" y="543.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (3 samples, 0.19%)</title><rect x="657.2" y="261" width="2.3" height="15.0" fill="rgb(249,101,38)" rx="2" ry="2" />
<text  x="660.22" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.06%)</title><rect x="72.9" y="533" width="0.8" height="15.0" fill="rgb(232,68,1)" rx="2" ry="2" />
<text  x="75.90" y="543.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (2 samples, 0.13%)</title><rect x="992.2" y="453" width="1.5" height="15.0" fill="rgb(206,69,49)" rx="2" ry="2" />
<text  x="995.20" y="463.5" ></text>
</g>
<g >
<title>node_dirty_ok (1 samples, 0.06%)</title><rect x="610.2" y="261" width="0.8" height="15.0" fill="rgb(205,71,21)" rx="2" ry="2" />
<text  x="613.23" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (78 samples, 5.01%)</title><rect x="13.8" y="565" width="59.1" height="15.0" fill="rgb(236,84,42)" rx="2" ry="2" />
<text  x="16.79" y="575.5" >entry_..</text>
</g>
<g >
<title>ext4_insert_delayed_block (7 samples, 0.45%)</title><rect x="535.2" y="293" width="5.3" height="15.0" fill="rgb(221,110,29)" rx="2" ry="2" />
<text  x="538.20" y="303.5" ></text>
</g>
<g >
<title>CopyBundleTails (1 samples, 0.06%)</title><rect x="79.0" y="581" width="0.7" height="15.0" fill="rgb(250,97,27)" rx="2" ry="2" />
<text  x="81.97" y="591.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (137 samples, 8.80%)</title><rect x="279.0" y="581" width="103.9" height="15.0" fill="rgb(252,63,48)" rx="2" ry="2" />
<text  x="282.04" y="591.5" >__GI___pthre..</text>
</g>
<g >
<title>memset_erms (1 samples, 0.06%)</title><rect x="505.6" y="309" width="0.8" height="15.0" fill="rgb(232,10,14)" rx="2" ry="2" />
<text  x="508.65" y="319.5" ></text>
</g>
<g >
<title>wait_for_stable_page (1 samples, 0.06%)</title><rect x="737.6" y="357" width="0.7" height="15.0" fill="rgb(212,51,4)" rx="2" ry="2" />
<text  x="740.55" y="367.5" ></text>
</g>
<g >
<title>ext4_inode_journal_mode (1 samples, 0.06%)</title><rect x="698.1" y="245" width="0.8" height="15.0" fill="rgb(239,80,26)" rx="2" ry="2" />
<text  x="701.14" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.19%)</title><rect x="673.9" y="261" width="2.3" height="15.0" fill="rgb(219,226,5)" rx="2" ry="2" />
<text  x="676.89" y="271.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (6 samples, 0.39%)</title><rect x="986.9" y="581" width="4.5" height="15.0" fill="rgb(211,214,46)" rx="2" ry="2" />
<text  x="989.89" y="591.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (2 samples, 0.13%)</title><rect x="75.2" y="341" width="1.5" height="15.0" fill="rgb(243,74,43)" rx="2" ry="2" />
<text  x="78.18" y="351.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.19%)</title><rect x="557.2" y="261" width="2.3" height="15.0" fill="rgb(233,198,20)" rx="2" ry="2" />
<text  x="560.18" y="271.5" ></text>
</g>
<g >
<title>CheckValidityOfRegularInstruction (1 samples, 0.06%)</title><rect x="265.4" y="565" width="0.8" height="15.0" fill="rgb(252,159,46)" rx="2" ry="2" />
<text  x="268.40" y="575.5" ></text>
</g>
<g >
<title>__es_insert_extent (1 samples, 0.06%)</title><rect x="538.2" y="261" width="0.8" height="15.0" fill="rgb(217,215,17)" rx="2" ry="2" />
<text  x="541.23" y="271.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="559.5" y="261" width="0.7" height="15.0" fill="rgb(205,55,53)" rx="2" ry="2" />
<text  x="562.45" y="271.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.06%)</title><rect x="73.7" y="325" width="0.7" height="15.0" fill="rgb(252,88,24)" rx="2" ry="2" />
<text  x="76.66" y="335.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.06%)</title><rect x="689.0" y="213" width="0.8" height="15.0" fill="rgb(208,100,19)" rx="2" ry="2" />
<text  x="692.05" y="223.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.06%)</title><rect x="776.2" y="485" width="0.8" height="15.0" fill="rgb(231,92,40)" rx="2" ry="2" />
<text  x="779.20" y="495.5" ></text>
</g>
<g >
<title>n_tty_receive_buf_common (1 samples, 0.06%)</title><rect x="1063.4" y="453" width="0.8" height="15.0" fill="rgb(221,105,2)" rx="2" ry="2" />
<text  x="1066.44" y="463.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.06%)</title><rect x="965.7" y="85" width="0.7" height="15.0" fill="rgb(208,69,24)" rx="2" ry="2" />
<text  x="968.67" y="95.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.06%)</title><rect x="74.4" y="325" width="0.8" height="15.0" fill="rgb(209,197,4)" rx="2" ry="2" />
<text  x="77.42" y="335.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.06%)</title><rect x="485.2" y="469" width="0.7" height="15.0" fill="rgb(208,229,46)" rx="2" ry="2" />
<text  x="488.18" y="479.5" ></text>
</g>
<g >
<title>free_unref_page_commit (6 samples, 0.39%)</title><rect x="898.2" y="181" width="4.6" height="15.0" fill="rgb(234,210,49)" rx="2" ry="2" />
<text  x="901.22" y="191.5" ></text>
</g>
<g >
<title>drop_buffers (3 samples, 0.19%)</title><rect x="951.3" y="117" width="2.2" height="15.0" fill="rgb(237,131,39)" rx="2" ry="2" />
<text  x="954.27" y="127.5" ></text>
</g>
</g>
</svg>
