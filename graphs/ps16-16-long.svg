<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="600.0" y="357" width="3.0" height="15.0" fill="rgb(223,128,13)" rx="2" ry="2" />
<text  x="603.00" y="367.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 16.33%)</title><rect x="10.0" y="181" width="192.7" height="15.0" fill="rgb(220,62,5)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >x86_pmu_enable</text>
</g>
<g >
<title>event_function_call (64 samples, 16.33%)</title><rect x="10.0" y="293" width="192.7" height="15.0" fill="rgb(247,111,48)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >event_function_call</text>
</g>
<g >
<title>write (1 samples, 0.26%)</title><rect x="202.7" y="373" width="3.0" height="15.0" fill="rgb(223,63,40)" rx="2" ry="2" />
<text  x="205.65" y="383.5" ></text>
</g>
<g >
<title>start_kernel (26 samples, 6.63%)</title><rect x="1111.7" y="453" width="78.3" height="15.0" fill="rgb(212,181,28)" rx="2" ry="2" />
<text  x="1114.73" y="463.5" >start_ker..</text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.26%)</title><rect x="274.9" y="309" width="3.0" height="15.0" fill="rgb(208,118,10)" rx="2" ry="2" />
<text  x="277.90" y="319.5" ></text>
</g>
<g >
<title>_perf_event_enable (64 samples, 16.33%)</title><rect x="10.0" y="309" width="192.7" height="15.0" fill="rgb(221,4,47)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >_perf_event_enable</text>
</g>
<g >
<title>cpuidle_enter (35 samples, 8.93%)</title><rect x="1003.4" y="421" width="105.3" height="15.0" fill="rgb(228,127,28)" rx="2" ry="2" />
<text  x="1006.37" y="431.5" >cpuidle_enter</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (61 samples, 15.56%)</title><rect x="618.1" y="325" width="183.6" height="15.0" fill="rgb(232,44,49)" rx="2" ry="2" />
<text  x="621.06" y="335.5" >ringbuf::producer::Prod..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.26%)</title><rect x="259.8" y="309" width="3.1" height="15.0" fill="rgb(243,95,32)" rx="2" ry="2" />
<text  x="262.85" y="319.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.26%)</title><rect x="991.3" y="357" width="3.0" height="15.0" fill="rgb(243,70,10)" rx="2" ry="2" />
<text  x="994.33" y="367.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (3 samples, 0.77%)</title><rect x="819.7" y="325" width="9.1" height="15.0" fill="rgb(237,220,3)" rx="2" ry="2" />
<text  x="822.74" y="335.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.26%)</title><rect x="1108.7" y="389" width="3.0" height="15.0" fill="rgb(209,97,35)" rx="2" ry="2" />
<text  x="1111.72" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (13 samples, 3.32%)</title><rect x="1114.7" y="341" width="39.2" height="15.0" fill="rgb(232,133,13)" rx="2" ry="2" />
<text  x="1117.74" y="351.5" >cpu..</text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.26%)</title><rect x="970.3" y="293" width="3.0" height="15.0" fill="rgb(244,81,27)" rx="2" ry="2" />
<text  x="973.26" y="303.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (66 samples, 16.84%)</title><rect x="606.0" y="341" width="198.7" height="15.0" fill="rgb(220,107,52)" rx="2" ry="2" />
<text  x="609.02" y="351.5" >ringbuf::producer::Produce..</text>
</g>
<g >
<title>NaClSysRead (116 samples, 29.59%)</title><rect x="232.8" y="453" width="349.1" height="15.0" fill="rgb(251,11,2)" rx="2" ry="2" />
<text  x="235.76" y="463.5" >NaClSysRead</text>
</g>
<g >
<title>set_task_cpu (2 samples, 0.51%)</title><rect x="997.3" y="405" width="6.1" height="15.0" fill="rgb(228,224,21)" rx="2" ry="2" />
<text  x="1000.35" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (64 samples, 16.33%)</title><rect x="10.0" y="373" width="192.7" height="15.0" fill="rgb(210,156,31)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>____fput (1 samples, 0.26%)</title><rect x="970.3" y="405" width="3.0" height="15.0" fill="rgb(243,60,41)" rx="2" ry="2" />
<text  x="973.26" y="415.5" ></text>
</g>
<g >
<title>NaClValidateImage (1 samples, 0.26%)</title><rect x="229.7" y="357" width="3.1" height="15.0" fill="rgb(209,80,45)" rx="2" ry="2" />
<text  x="232.74" y="367.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (35 samples, 8.93%)</title><rect x="1003.4" y="437" width="105.3" height="15.0" fill="rgb(216,0,2)" rx="2" ry="2" />
<text  x="1006.37" y="447.5" >cpuidle_idle..</text>
</g>
<g >
<title>new_sync_write (1 samples, 0.26%)</title><rect x="991.3" y="421" width="3.0" height="15.0" fill="rgb(206,86,0)" rx="2" ry="2" />
<text  x="994.33" y="431.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.26%)</title><rect x="970.3" y="341" width="3.0" height="15.0" fill="rgb(245,154,38)" rx="2" ry="2" />
<text  x="973.26" y="351.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.26%)</title><rect x="202.7" y="133" width="3.0" height="15.0" fill="rgb(217,171,48)" rx="2" ry="2" />
<text  x="205.65" y="143.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.26%)</title><rect x="244.8" y="293" width="3.0" height="15.0" fill="rgb(219,34,25)" rx="2" ry="2" />
<text  x="247.80" y="303.5" ></text>
</g>
<g >
<title>core::cmp::min (1 samples, 0.26%)</title><rect x="597.0" y="373" width="3.0" height="15.0" fill="rgb(230,30,45)" rx="2" ry="2" />
<text  x="599.99" y="383.5" ></text>
</g>
<g >
<title>sel_ldr (255 samples, 65.05%)</title><rect x="205.7" y="517" width="767.6" height="15.0" fill="rgb(247,175,49)" rx="2" ry="2" />
<text  x="208.66" y="527.5" >sel_ldr</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.51%)</title><rect x="609.0" y="325" width="6.1" height="15.0" fill="rgb(244,109,54)" rx="2" ry="2" />
<text  x="612.03" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.26%)</title><rect x="259.8" y="245" width="3.1" height="15.0" fill="rgb(226,65,33)" rx="2" ry="2" />
<text  x="262.85" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.26%)</title><rect x="970.3" y="501" width="3.0" height="15.0" fill="rgb(248,71,25)" rx="2" ry="2" />
<text  x="973.26" y="511.5" ></text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.26%)</title><rect x="229.7" y="341" width="3.1" height="15.0" fill="rgb(247,108,28)" rx="2" ry="2" />
<text  x="232.74" y="351.5" ></text>
</g>
<g >
<title>poll_idle (12 samples, 3.06%)</title><rect x="1114.7" y="325" width="36.2" height="15.0" fill="rgb(210,76,41)" rx="2" ry="2" />
<text  x="1117.74" y="335.5" >pol..</text>
</g>
<g >
<title>do_exit (1 samples, 0.26%)</title><rect x="970.3" y="437" width="3.0" height="15.0" fill="rgb(207,99,6)" rx="2" ry="2" />
<text  x="973.26" y="447.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.26%)</title><rect x="578.9" y="133" width="3.0" height="15.0" fill="rgb(250,150,31)" rx="2" ry="2" />
<text  x="581.93" y="143.5" ></text>
</g>
<g >
<title>pick_next_task_fair (7 samples, 1.79%)</title><rect x="1159.9" y="341" width="21.1" height="15.0" fill="rgb(214,4,7)" rx="2" ry="2" />
<text  x="1162.90" y="351.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (1 samples, 0.26%)</title><rect x="606.0" y="309" width="3.0" height="15.0" fill="rgb(221,40,10)" rx="2" ry="2" />
<text  x="609.02" y="319.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (13 samples, 3.32%)</title><rect x="1114.7" y="373" width="39.2" height="15.0" fill="rgb(238,98,4)" rx="2" ry="2" />
<text  x="1117.74" y="383.5" >cpu..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (1 samples, 0.26%)</title><rect x="256.8" y="325" width="3.0" height="15.0" fill="rgb(223,103,12)" rx="2" ry="2" />
<text  x="259.84" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.26%)</title><rect x="588.0" y="277" width="3.0" height="15.0" fill="rgb(206,189,51)" rx="2" ry="2" />
<text  x="590.96" y="287.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.26%)</title><rect x="202.7" y="245" width="3.0" height="15.0" fill="rgb(216,175,21)" rx="2" ry="2" />
<text  x="205.65" y="255.5" ></text>
</g>
<g >
<title>dispatcher (113 samples, 28.83%)</title><rect x="241.8" y="421" width="340.1" height="15.0" fill="rgb(219,114,38)" rx="2" ry="2" />
<text  x="244.79" y="431.5" >dispatcher</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.26%)</title><rect x="259.8" y="229" width="3.1" height="15.0" fill="rgb(209,30,21)" rx="2" ry="2" />
<text  x="262.85" y="239.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.26%)</title><rect x="970.3" y="389" width="3.0" height="15.0" fill="rgb(236,88,48)" rx="2" ry="2" />
<text  x="973.26" y="399.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.26%)</title><rect x="202.7" y="149" width="3.0" height="15.0" fill="rgb(231,48,0)" rx="2" ry="2" />
<text  x="205.65" y="159.5" ></text>
</g>
<g >
<title>NaClSysExecve (1 samples, 0.26%)</title><rect x="229.7" y="453" width="3.1" height="15.0" fill="rgb(241,84,49)" rx="2" ry="2" />
<text  x="232.74" y="463.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (2 samples, 0.51%)</title><rect x="232.8" y="421" width="6.0" height="15.0" fill="rgb(243,14,6)" rx="2" ry="2" />
<text  x="235.76" y="431.5" ></text>
</g>
<g >
<title>__evlist__enable (64 samples, 16.33%)</title><rect x="10.0" y="469" width="192.7" height="15.0" fill="rgb(208,68,47)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >__evlist__enable</text>
</g>
<g >
<title>dput (1 samples, 0.26%)</title><rect x="970.3" y="373" width="3.0" height="15.0" fill="rgb(243,180,14)" rx="2" ry="2" />
<text  x="973.26" y="383.5" ></text>
</g>
<g >
<title>all (392 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(233,88,53)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.26%)</title><rect x="274.9" y="325" width="3.0" height="15.0" fill="rgb(232,58,0)" rx="2" ry="2" />
<text  x="277.90" y="335.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (2 samples, 0.51%)</title><rect x="241.8" y="405" width="6.0" height="15.0" fill="rgb(211,136,26)" rx="2" ry="2" />
<text  x="244.79" y="415.5" ></text>
</g>
<g >
<title>swapper (72 samples, 18.37%)</title><rect x="973.3" y="517" width="216.7" height="15.0" fill="rgb(233,155,34)" rx="2" ry="2" />
<text  x="976.27" y="527.5" >swapper</text>
</g>
<g >
<title>kthread (3 samples, 0.77%)</title><rect x="994.3" y="485" width="9.1" height="15.0" fill="rgb(222,156,10)" rx="2" ry="2" />
<text  x="997.34" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.26%)</title><rect x="1184.0" y="373" width="3.0" height="15.0" fill="rgb(223,164,47)" rx="2" ry="2" />
<text  x="1186.98" y="383.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.26%)</title><rect x="256.8" y="357" width="3.0" height="15.0" fill="rgb(248,151,35)" rx="2" ry="2" />
<text  x="259.84" y="367.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.26%)</title><rect x="1108.7" y="373" width="3.0" height="15.0" fill="rgb(237,198,47)" rx="2" ry="2" />
<text  x="1111.72" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.26%)</title><rect x="578.9" y="229" width="3.0" height="15.0" fill="rgb(224,146,19)" rx="2" ry="2" />
<text  x="581.93" y="239.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (1 samples, 0.26%)</title><rect x="202.7" y="453" width="3.0" height="15.0" fill="rgb(239,28,36)" rx="2" ry="2" />
<text  x="205.65" y="463.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.26%)</title><rect x="588.0" y="325" width="3.0" height="15.0" fill="rgb(233,148,20)" rx="2" ry="2" />
<text  x="590.96" y="335.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (3 samples, 0.77%)</title><rect x="819.7" y="341" width="9.1" height="15.0" fill="rgb(229,126,53)" rx="2" ry="2" />
<text  x="822.74" y="351.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.26%)</title><rect x="970.3" y="309" width="3.0" height="15.0" fill="rgb(208,67,39)" rx="2" ry="2" />
<text  x="973.26" y="319.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.26%)</title><rect x="229.7" y="389" width="3.1" height="15.0" fill="rgb(244,148,5)" rx="2" ry="2" />
<text  x="232.74" y="399.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.26%)</title><rect x="994.3" y="389" width="3.0" height="15.0" fill="rgb(210,12,20)" rx="2" ry="2" />
<text  x="997.34" y="399.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (4 samples, 1.02%)</title><rect x="250.8" y="389" width="12.1" height="15.0" fill="rgb(225,152,9)" rx="2" ry="2" />
<text  x="253.82" y="399.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.26%)</title><rect x="229.7" y="405" width="3.1" height="15.0" fill="rgb(217,76,19)" rx="2" ry="2" />
<text  x="232.74" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.26%)</title><rect x="615.1" y="309" width="3.0" height="15.0" fill="rgb(254,55,32)" rx="2" ry="2" />
<text  x="618.05" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.51%)</title><rect x="250.8" y="293" width="6.0" height="15.0" fill="rgb(234,149,49)" rx="2" ry="2" />
<text  x="253.82" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="202.7" y="341" width="3.0" height="15.0" fill="rgb(221,167,52)" rx="2" ry="2" />
<text  x="205.65" y="351.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (2 samples, 0.51%)</title><rect x="232.8" y="437" width="6.0" height="15.0" fill="rgb(210,123,23)" rx="2" ry="2" />
<text  x="235.76" y="447.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.26%)</title><rect x="578.9" y="277" width="3.0" height="15.0" fill="rgb(230,203,14)" rx="2" ry="2" />
<text  x="581.93" y="287.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 16.33%)</title><rect x="10.0" y="325" width="192.7" height="15.0" fill="rgb(209,74,22)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >perf_event_for_each_child</text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.26%)</title><rect x="581.9" y="421" width="3.0" height="15.0" fill="rgb(222,103,45)" rx="2" ry="2" />
<text  x="584.94" y="431.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (40 samples, 10.20%)</title><rect x="277.9" y="357" width="120.4" height="15.0" fill="rgb(251,94,49)" rx="2" ry="2" />
<text  x="280.91" y="367.5" >ringbuf::ring_b..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.26%)</title><rect x="578.9" y="213" width="3.0" height="15.0" fill="rgb(236,64,23)" rx="2" ry="2" />
<text  x="581.93" y="223.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.26%)</title><rect x="241.8" y="341" width="3.0" height="15.0" fill="rgb(214,49,13)" rx="2" ry="2" />
<text  x="244.79" y="351.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (1 samples, 0.26%)</title><rect x="241.8" y="373" width="3.0" height="15.0" fill="rgb(241,78,53)" rx="2" ry="2" />
<text  x="244.79" y="383.5" ></text>
</g>
<g >
<title>migration_cpu_stop (3 samples, 0.77%)</title><rect x="994.3" y="437" width="9.1" height="15.0" fill="rgb(222,201,10)" rx="2" ry="2" />
<text  x="997.34" y="447.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.26%)</title><rect x="991.3" y="261" width="3.0" height="15.0" fill="rgb(212,176,42)" rx="2" ry="2" />
<text  x="994.33" y="271.5" ></text>
</g>
<g >
<title>[sel_ldr] (228 samples, 58.16%)</title><rect x="217.7" y="501" width="686.3" height="15.0" fill="rgb(221,163,53)" rx="2" ry="2" />
<text  x="220.70" y="511.5" >[sel_ldr]</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (111 samples, 28.32%)</title><rect x="247.8" y="405" width="334.1" height="15.0" fill="rgb(215,41,28)" rx="2" ry="2" />
<text  x="250.81" y="415.5" >rustposix::safeposix::syscalls::fs_calls::&lt;im..</text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1 samples, 0.26%)</title><rect x="223.7" y="469" width="3.0" height="15.0" fill="rgb(234,62,47)" rx="2" ry="2" />
<text  x="226.72" y="479.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.26%)</title><rect x="1108.7" y="437" width="3.0" height="15.0" fill="rgb(249,119,31)" rx="2" ry="2" />
<text  x="1111.72" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.26%)</title><rect x="241.8" y="309" width="3.0" height="15.0" fill="rgb(224,0,40)" rx="2" ry="2" />
<text  x="244.79" y="319.5" ></text>
</g>
<g >
<title>schedule_idle (8 samples, 2.04%)</title><rect x="1159.9" y="373" width="24.1" height="15.0" fill="rgb(223,2,54)" rx="2" ry="2" />
<text  x="1162.90" y="383.5" >s..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (1 samples, 0.26%)</title><rect x="262.9" y="373" width="3.0" height="15.0" fill="rgb(246,134,2)" rx="2" ry="2" />
<text  x="265.86" y="383.5" ></text>
</g>
<g >
<title>rest_init (26 samples, 6.63%)</title><rect x="1111.7" y="421" width="78.3" height="15.0" fill="rgb(248,100,52)" rx="2" ry="2" />
<text  x="1114.73" y="431.5" >rest_init</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.26%)</title><rect x="588.0" y="293" width="3.0" height="15.0" fill="rgb(240,98,32)" rx="2" ry="2" />
<text  x="590.96" y="303.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.26%)</title><rect x="1162.9" y="293" width="3.0" height="15.0" fill="rgb(217,89,52)" rx="2" ry="2" />
<text  x="1165.91" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (5 samples, 1.28%)</title><rect x="1165.9" y="277" width="15.1" height="15.0" fill="rgb(211,71,36)" rx="2" ry="2" />
<text  x="1168.92" y="287.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.26%)</title><rect x="202.7" y="389" width="3.0" height="15.0" fill="rgb(246,96,44)" rx="2" ry="2" />
<text  x="205.65" y="399.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (40 samples, 10.20%)</title><rect x="277.9" y="373" width="120.4" height="15.0" fill="rgb(228,135,48)" rx="2" ry="2" />
<text  x="280.91" y="383.5" >ringbuf::consum..</text>
</g>
<g >
<title>evict (1 samples, 0.26%)</title><rect x="970.3" y="261" width="3.0" height="15.0" fill="rgb(240,10,37)" rx="2" ry="2" />
<text  x="973.26" y="271.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 16.58%)</title><rect x="10.0" y="501" width="195.7" height="15.0" fill="rgb(215,180,33)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >[unknown]</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (29 samples, 7.40%)</title><rect x="816.7" y="357" width="87.3" height="15.0" fill="rgb(224,173,17)" rx="2" ry="2" />
<text  x="819.73" y="367.5" >ringbuf::r..</text>
</g>
<g >
<title>__perf_event_enable (64 samples, 16.33%)</title><rect x="10.0" y="213" width="192.7" height="15.0" fill="rgb(243,13,49)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >__perf_event_enable</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (1 samples, 0.26%)</title><rect x="244.8" y="373" width="3.0" height="15.0" fill="rgb(252,173,4)" rx="2" ry="2" />
<text  x="247.80" y="383.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.26%)</title><rect x="991.3" y="277" width="3.0" height="15.0" fill="rgb(251,143,12)" rx="2" ry="2" />
<text  x="994.33" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.26%)</title><rect x="991.3" y="293" width="3.0" height="15.0" fill="rgb(232,81,46)" rx="2" ry="2" />
<text  x="994.33" y="303.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.26%)</title><rect x="226.7" y="405" width="3.0" height="15.0" fill="rgb(241,109,21)" rx="2" ry="2" />
<text  x="229.73" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.26%)</title><rect x="244.8" y="325" width="3.0" height="15.0" fill="rgb(224,171,35)" rx="2" ry="2" />
<text  x="247.80" y="335.5" ></text>
</g>
<g >
<title>cpu_startup_entry (36 samples, 9.18%)</title><rect x="1003.4" y="469" width="108.3" height="15.0" fill="rgb(208,56,27)" rx="2" ry="2" />
<text  x="1006.37" y="479.5" >cpu_startup_e..</text>
</g>
<g >
<title>start_secondary (36 samples, 9.18%)</title><rect x="1003.4" y="485" width="108.3" height="15.0" fill="rgb(233,6,27)" rx="2" ry="2" />
<text  x="1006.37" y="495.5" >start_secondary</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (3 samples, 0.77%)</title><rect x="205.7" y="469" width="9.0" height="15.0" fill="rgb(215,125,15)" rx="2" ry="2" />
<text  x="208.66" y="479.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.26%)</title><rect x="202.7" y="213" width="3.0" height="15.0" fill="rgb(230,3,41)" rx="2" ry="2" />
<text  x="205.65" y="223.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.26%)</title><rect x="991.3" y="245" width="3.0" height="15.0" fill="rgb(243,65,15)" rx="2" ry="2" />
<text  x="994.33" y="255.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (2 samples, 0.51%)</title><rect x="584.9" y="389" width="6.1" height="15.0" fill="rgb(214,212,6)" rx="2" ry="2" />
<text  x="587.95" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.26%)</title><rect x="241.8" y="293" width="3.0" height="15.0" fill="rgb(215,79,3)" rx="2" ry="2" />
<text  x="244.79" y="303.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.26%)</title><rect x="1108.7" y="405" width="3.0" height="15.0" fill="rgb(216,220,19)" rx="2" ry="2" />
<text  x="1111.72" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.26%)</title><rect x="247.8" y="373" width="3.0" height="15.0" fill="rgb(207,195,11)" rx="2" ry="2" />
<text  x="250.81" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.26%)</title><rect x="991.3" y="309" width="3.0" height="15.0" fill="rgb(232,168,34)" rx="2" ry="2" />
<text  x="994.33" y="319.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.26%)</title><rect x="991.3" y="325" width="3.0" height="15.0" fill="rgb(238,197,33)" rx="2" ry="2" />
<text  x="994.33" y="335.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.26%)</title><rect x="1153.9" y="357" width="3.0" height="15.0" fill="rgb(211,28,45)" rx="2" ry="2" />
<text  x="1156.88" y="367.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.26%)</title><rect x="603.0" y="357" width="3.0" height="15.0" fill="rgb(216,20,4)" rx="2" ry="2" />
<text  x="606.01" y="367.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (62 samples, 15.82%)</title><rect x="1003.4" y="501" width="186.6" height="15.0" fill="rgb(229,170,19)" rx="2" ry="2" />
<text  x="1006.37" y="511.5" >secondary_startup_64_no_..</text>
</g>
<g >
<title>iput_final (1 samples, 0.26%)</title><rect x="970.3" y="277" width="3.0" height="15.0" fill="rgb(235,8,19)" rx="2" ry="2" />
<text  x="973.26" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.26%)</title><rect x="202.7" y="357" width="3.0" height="15.0" fill="rgb(235,102,25)" rx="2" ry="2" />
<text  x="205.65" y="367.5" ></text>
</g>
<g >
<title>CompareAndSwap (1 samples, 0.26%)</title><rect x="223.7" y="453" width="3.0" height="15.0" fill="rgb(210,176,25)" rx="2" ry="2" />
<text  x="226.72" y="463.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.26%)</title><rect x="801.7" y="325" width="3.0" height="15.0" fill="rgb(205,48,45)" rx="2" ry="2" />
<text  x="804.68" y="335.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (61 samples, 15.56%)</title><rect x="398.3" y="373" width="183.6" height="15.0" fill="rgb(229,165,44)" rx="2" ry="2" />
<text  x="401.32" y="383.5" >ringbuf::consumer::Cons..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (61 samples, 15.56%)</title><rect x="398.3" y="309" width="183.6" height="15.0" fill="rgb(234,186,41)" rx="2" ry="2" />
<text  x="401.32" y="319.5" >core::intrinsics::copy_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.26%)</title><rect x="991.3" y="501" width="3.0" height="15.0" fill="rgb(220,31,25)" rx="2" ry="2" />
<text  x="994.33" y="511.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.26%)</title><rect x="202.7" y="261" width="3.0" height="15.0" fill="rgb(236,34,37)" rx="2" ry="2" />
<text  x="205.65" y="271.5" ></text>
</g>
<g >
<title>cpu_startup_entry (26 samples, 6.63%)</title><rect x="1111.7" y="405" width="78.3" height="15.0" fill="rgb(221,149,33)" rx="2" ry="2" />
<text  x="1114.73" y="415.5" >cpu_start..</text>
</g>
<g >
<title>task_work_run (1 samples, 0.26%)</title><rect x="970.3" y="421" width="3.0" height="15.0" fill="rgb(206,35,47)" rx="2" ry="2" />
<text  x="973.26" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (61 samples, 15.56%)</title><rect x="398.3" y="293" width="183.6" height="15.0" fill="rgb(236,226,36)" rx="2" ry="2" />
<text  x="401.32" y="303.5" >[libc.so.6]</text>
</g>
<g >
<title>ioctl (64 samples, 16.33%)</title><rect x="10.0" y="421" width="192.7" height="15.0" fill="rgb(216,31,31)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >ioctl</text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="274.9" y="357" width="3.0" height="15.0" fill="rgb(228,205,18)" rx="2" ry="2" />
<text  x="277.90" y="367.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.26%)</title><rect x="229.7" y="325" width="3.1" height="15.0" fill="rgb(242,53,49)" rx="2" ry="2" />
<text  x="232.74" y="335.5" ></text>
</g>
<g >
<title>llist_reverse_order (1 samples, 0.26%)</title><rect x="1156.9" y="357" width="3.0" height="15.0" fill="rgb(233,84,49)" rx="2" ry="2" />
<text  x="1159.89" y="367.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (32 samples, 8.16%)</title><rect x="1003.4" y="389" width="96.3" height="15.0" fill="rgb(231,87,47)" rx="2" ry="2" />
<text  x="1006.37" y="399.5" >mwait_idle_..</text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.26%)</title><rect x="588.0" y="341" width="3.0" height="15.0" fill="rgb(246,60,50)" rx="2" ry="2" />
<text  x="590.96" y="351.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (70 samples, 17.86%)</title><rect x="606.0" y="373" width="210.7" height="15.0" fill="rgb(210,81,19)" rx="2" ry="2" />
<text  x="609.02" y="383.5" >ringbuf::producer::Producer..</text>
</g>
<g >
<title>[unknown] (8 samples, 2.04%)</title><rect x="946.2" y="501" width="24.1" height="15.0" fill="rgb(215,48,0)" rx="2" ry="2" />
<text  x="949.17" y="511.5" >[..</text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.26%)</title><rect x="202.7" y="165" width="3.0" height="15.0" fill="rgb(226,70,28)" rx="2" ry="2" />
<text  x="205.65" y="175.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (1 samples, 0.26%)</title><rect x="600.0" y="373" width="3.0" height="15.0" fill="rgb(227,152,36)" rx="2" ry="2" />
<text  x="603.00" y="383.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.26%)</title><rect x="970.3" y="245" width="3.0" height="15.0" fill="rgb(211,69,44)" rx="2" ry="2" />
<text  x="973.26" y="255.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (26 samples, 6.63%)</title><rect x="1111.7" y="485" width="78.3" height="15.0" fill="rgb(225,146,33)" rx="2" ry="2" />
<text  x="1114.73" y="495.5" >x86_64_st..</text>
</g>
<g >
<title>new_sync_write (1 samples, 0.26%)</title><rect x="202.7" y="277" width="3.0" height="15.0" fill="rgb(240,105,32)" rx="2" ry="2" />
<text  x="205.65" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (57 samples, 14.54%)</title><rect x="630.1" y="293" width="171.6" height="15.0" fill="rgb(237,75,48)" rx="2" ry="2" />
<text  x="633.10" y="303.5" >[libc.so.6]</text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.26%)</title><rect x="600.0" y="325" width="3.0" height="15.0" fill="rgb(226,99,46)" rx="2" ry="2" />
<text  x="603.00" y="335.5" ></text>
</g>
<g >
<title>perf_mmap__push (1 samples, 0.26%)</title><rect x="202.7" y="437" width="3.0" height="15.0" fill="rgb(210,8,51)" rx="2" ry="2" />
<text  x="205.65" y="447.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 16.33%)</title><rect x="10.0" y="245" width="192.7" height="15.0" fill="rgb(251,215,31)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >remote_function</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (3 samples, 0.77%)</title><rect x="205.7" y="453" width="9.0" height="15.0" fill="rgb(239,130,52)" rx="2" ry="2" />
<text  x="208.66" y="463.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.26%)</title><rect x="991.3" y="389" width="3.0" height="15.0" fill="rgb(233,18,31)" rx="2" ry="2" />
<text  x="994.33" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.26%)</title><rect x="244.8" y="309" width="3.0" height="15.0" fill="rgb(242,8,36)" rx="2" ry="2" />
<text  x="247.80" y="319.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (26 samples, 6.63%)</title><rect x="1111.7" y="469" width="78.3" height="15.0" fill="rgb(225,10,34)" rx="2" ry="2" />
<text  x="1114.73" y="479.5" >x86_64_st..</text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (2 samples, 0.51%)</title><rect x="241.8" y="389" width="6.0" height="15.0" fill="rgb(254,143,8)" rx="2" ry="2" />
<text  x="244.79" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.26%)</title><rect x="991.3" y="469" width="3.0" height="15.0" fill="rgb(251,140,41)" rx="2" ry="2" />
<text  x="994.33" y="479.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.26%)</title><rect x="581.9" y="437" width="3.0" height="15.0" fill="rgb(219,161,30)" rx="2" ry="2" />
<text  x="584.94" y="447.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (1 samples, 0.26%)</title><rect x="578.9" y="165" width="3.0" height="15.0" fill="rgb(236,100,3)" rx="2" ry="2" />
<text  x="581.93" y="175.5" ></text>
</g>
<g >
<title>poll_idle (3 samples, 0.77%)</title><rect x="1099.7" y="389" width="9.0" height="15.0" fill="rgb(225,144,37)" rx="2" ry="2" />
<text  x="1102.69" y="399.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.26%)</title><rect x="1187.0" y="389" width="3.0" height="15.0" fill="rgb(218,228,50)" rx="2" ry="2" />
<text  x="1189.99" y="399.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.26%)</title><rect x="600.0" y="341" width="3.0" height="15.0" fill="rgb(216,172,49)" rx="2" ry="2" />
<text  x="603.00" y="351.5" ></text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.26%)</title><rect x="970.3" y="213" width="3.0" height="15.0" fill="rgb(206,26,14)" rx="2" ry="2" />
<text  x="973.26" y="223.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.77%)</title><rect x="205.7" y="405" width="9.0" height="15.0" fill="rgb(244,219,20)" rx="2" ry="2" />
<text  x="208.66" y="415.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.26%)</title><rect x="241.8" y="357" width="3.0" height="15.0" fill="rgb(251,227,5)" rx="2" ry="2" />
<text  x="244.79" y="367.5" ></text>
</g>
<g >
<title>perf (65 samples, 16.58%)</title><rect x="10.0" y="517" width="195.7" height="15.0" fill="rgb(222,199,48)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >perf</text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (1 samples, 0.26%)</title><rect x="256.8" y="293" width="3.0" height="15.0" fill="rgb(242,60,32)" rx="2" ry="2" />
<text  x="259.84" y="303.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (25 samples, 6.38%)</title><rect x="828.8" y="341" width="75.2" height="15.0" fill="rgb(228,68,25)" rx="2" ry="2" />
<text  x="831.78" y="351.5" >ringbuf:..</text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.26%)</title><rect x="991.3" y="341" width="3.0" height="15.0" fill="rgb(206,228,15)" rx="2" ry="2" />
<text  x="994.33" y="351.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (1 samples, 0.26%)</title><rect x="606.0" y="325" width="3.0" height="15.0" fill="rgb(227,2,6)" rx="2" ry="2" />
<text  x="609.02" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="970.3" y="485" width="3.0" height="15.0" fill="rgb(211,50,25)" rx="2" ry="2" />
<text  x="973.26" y="495.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.26%)</title><rect x="262.9" y="341" width="3.0" height="15.0" fill="rgb(223,26,2)" rx="2" ry="2" />
<text  x="265.86" y="351.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (29 samples, 7.40%)</title><rect x="816.7" y="373" width="87.3" height="15.0" fill="rgb(223,81,20)" rx="2" ry="2" />
<text  x="819.73" y="383.5" >ringbuf::p..</text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (1 samples, 0.26%)</title><rect x="588.0" y="357" width="3.0" height="15.0" fill="rgb(252,121,41)" rx="2" ry="2" />
<text  x="590.96" y="367.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (7 samples, 1.79%)</title><rect x="377.2" y="341" width="21.1" height="15.0" fill="rgb(212,221,34)" rx="2" ry="2" />
<text  x="380.24" y="351.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (2 samples, 0.51%)</title><rect x="250.8" y="309" width="6.0" height="15.0" fill="rgb(237,26,52)" rx="2" ry="2" />
<text  x="253.82" y="319.5" ></text>
</g>
<g >
<title>newidle_balance (7 samples, 1.79%)</title><rect x="1159.9" y="325" width="21.1" height="15.0" fill="rgb(245,85,38)" rx="2" ry="2" />
<text  x="1162.90" y="335.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.26%)</title><rect x="202.7" y="309" width="3.0" height="15.0" fill="rgb(209,124,51)" rx="2" ry="2" />
<text  x="205.65" y="319.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (2 samples, 0.51%)</title><rect x="250.8" y="325" width="6.0" height="15.0" fill="rgb(241,167,12)" rx="2" ry="2" />
<text  x="253.82" y="335.5" ></text>
</g>
<g >
<title>event_function (64 samples, 16.33%)</title><rect x="10.0" y="229" width="192.7" height="15.0" fill="rgb(225,185,46)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >event_function</text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 16.33%)</title><rect x="10.0" y="165" width="192.7" height="15.0" fill="rgb(222,140,22)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>NaClSysExecveDecoder (1 samples, 0.26%)</title><rect x="229.7" y="469" width="3.1" height="15.0" fill="rgb(239,85,28)" rx="2" ry="2" />
<text  x="232.74" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.26%)</title><rect x="970.3" y="469" width="3.0" height="15.0" fill="rgb(242,76,38)" rx="2" ry="2" />
<text  x="973.26" y="479.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (4 samples, 1.02%)</title><rect x="804.7" y="341" width="12.0" height="15.0" fill="rgb(207,212,21)" rx="2" ry="2" />
<text  x="807.69" y="351.5" ></text>
</g>
<g >
<title>cpuidle_enter (13 samples, 3.32%)</title><rect x="1114.7" y="357" width="39.2" height="15.0" fill="rgb(236,221,0)" rx="2" ry="2" />
<text  x="1117.74" y="367.5" >cpu..</text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.26%)</title><rect x="226.7" y="389" width="3.0" height="15.0" fill="rgb(233,76,52)" rx="2" ry="2" />
<text  x="229.73" y="399.5" ></text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.26%)</title><rect x="226.7" y="421" width="3.0" height="15.0" fill="rgb(243,62,18)" rx="2" ry="2" />
<text  x="229.73" y="431.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (105 samples, 26.79%)</title><rect x="265.9" y="389" width="316.0" height="15.0" fill="rgb(252,46,1)" rx="2" ry="2" />
<text  x="268.87" y="399.5" >rustposix::interface::pipe::EmulatedPipe::..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (1 samples, 0.26%)</title><rect x="262.9" y="389" width="3.0" height="15.0" fill="rgb(252,70,9)" rx="2" ry="2" />
<text  x="265.86" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.26%)</title><rect x="262.9" y="309" width="3.0" height="15.0" fill="rgb(205,191,5)" rx="2" ry="2" />
<text  x="265.86" y="319.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.51%)</title><rect x="1165.9" y="261" width="6.0" height="15.0" fill="rgb(208,209,14)" rx="2" ry="2" />
<text  x="1168.92" y="271.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.26%)</title><rect x="991.3" y="373" width="3.0" height="15.0" fill="rgb(252,193,27)" rx="2" ry="2" />
<text  x="994.33" y="383.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (70 samples, 17.86%)</title><rect x="606.0" y="357" width="210.7" height="15.0" fill="rgb(231,73,24)" rx="2" ry="2" />
<text  x="609.02" y="367.5" >ringbuf::producer::Producer..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.51%)</title><rect x="609.0" y="309" width="6.1" height="15.0" fill="rgb(223,136,13)" rx="2" ry="2" />
<text  x="612.03" y="319.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (107 samples, 27.30%)</title><rect x="581.9" y="469" width="322.1" height="15.0" fill="rgb(253,10,29)" rx="2" ry="2" />
<text  x="584.94" y="479.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.26%)</title><rect x="229.7" y="309" width="3.1" height="15.0" fill="rgb(236,132,52)" rx="2" ry="2" />
<text  x="232.74" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.26%)</title><rect x="244.8" y="341" width="3.0" height="15.0" fill="rgb(223,125,3)" rx="2" ry="2" />
<text  x="247.80" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.26%)</title><rect x="262.9" y="325" width="3.0" height="15.0" fill="rgb(224,90,45)" rx="2" ry="2" />
<text  x="265.86" y="335.5" ></text>
</g>
<g >
<title>alloc_buffer_head (1 samples, 0.26%)</title><rect x="202.7" y="85" width="3.0" height="15.0" fill="rgb(229,185,4)" rx="2" ry="2" />
<text  x="205.65" y="95.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (106 samples, 27.04%)</title><rect x="584.9" y="405" width="319.1" height="15.0" fill="rgb(213,161,28)" rx="2" ry="2" />
<text  x="587.95" y="415.5" >rustposix::safeposix::syscalls::fs_calls::&lt;..</text>
</g>
<g >
<title>NaClSandboxCodeAddr (1 samples, 0.26%)</title><rect x="220.7" y="453" width="3.0" height="15.0" fill="rgb(206,4,16)" rx="2" ry="2" />
<text  x="223.71" y="463.5" ></text>
</g>
<g >
<title>generic_exec_single (64 samples, 16.33%)</title><rect x="10.0" y="261" width="192.7" height="15.0" fill="rgb(248,69,46)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >generic_exec_single</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.26%)</title><rect x="578.9" y="181" width="3.0" height="15.0" fill="rgb(223,145,23)" rx="2" ry="2" />
<text  x="581.93" y="191.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (228 samples, 58.16%)</title><rect x="217.7" y="485" width="686.3" height="15.0" fill="rgb(231,46,13)" rx="2" ry="2" />
<text  x="220.70" y="495.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>__schedule (1 samples, 0.26%)</title><rect x="1108.7" y="421" width="3.0" height="15.0" fill="rgb(206,121,28)" rx="2" ry="2" />
<text  x="1111.72" y="431.5" ></text>
</g>
<g >
<title>do_idle (36 samples, 9.18%)</title><rect x="1003.4" y="453" width="108.3" height="15.0" fill="rgb(213,226,26)" rx="2" ry="2" />
<text  x="1006.37" y="463.5" >do_idle</text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (1 samples, 0.26%)</title><rect x="256.8" y="309" width="3.0" height="15.0" fill="rgb(212,31,43)" rx="2" ry="2" />
<text  x="259.84" y="319.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.26%)</title><rect x="202.7" y="197" width="3.0" height="15.0" fill="rgb(247,178,47)" rx="2" ry="2" />
<text  x="205.65" y="207.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (1 samples, 0.26%)</title><rect x="226.7" y="453" width="3.0" height="15.0" fill="rgb(215,113,13)" rx="2" ry="2" />
<text  x="229.73" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.26%)</title><rect x="600.0" y="309" width="3.0" height="15.0" fill="rgb(229,29,48)" rx="2" ry="2" />
<text  x="603.00" y="319.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (61 samples, 15.56%)</title><rect x="398.3" y="357" width="183.6" height="15.0" fill="rgb(212,37,48)" rx="2" ry="2" />
<text  x="401.32" y="367.5" >ringbuf::consumer::Cons..</text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.26%)</title><rect x="970.3" y="229" width="3.0" height="15.0" fill="rgb(232,51,6)" rx="2" ry="2" />
<text  x="973.26" y="239.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.26%)</title><rect x="970.3" y="357" width="3.0" height="15.0" fill="rgb(205,93,22)" rx="2" ry="2" />
<text  x="973.26" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.26%)</title><rect x="202.7" y="325" width="3.0" height="15.0" fill="rgb(235,140,38)" rx="2" ry="2" />
<text  x="205.65" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.26%)</title><rect x="247.8" y="389" width="3.0" height="15.0" fill="rgb(212,229,14)" rx="2" ry="2" />
<text  x="250.81" y="399.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (1 samples, 0.26%)</title><rect x="597.0" y="357" width="3.0" height="15.0" fill="rgb(210,183,3)" rx="2" ry="2" />
<text  x="599.99" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.26%)</title><rect x="244.8" y="357" width="3.0" height="15.0" fill="rgb(248,182,16)" rx="2" ry="2" />
<text  x="247.80" y="367.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (1 samples, 0.26%)</title><rect x="202.7" y="37" width="3.0" height="15.0" fill="rgb(248,26,29)" rx="2" ry="2" />
<text  x="205.65" y="47.5" ></text>
</g>
<g >
<title>NaClSysWrite (107 samples, 27.30%)</title><rect x="581.9" y="453" width="322.1" height="15.0" fill="rgb(217,151,14)" rx="2" ry="2" />
<text  x="584.94" y="463.5" >NaClSysWrite</text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.26%)</title><rect x="970.3" y="325" width="3.0" height="15.0" fill="rgb(210,101,6)" rx="2" ry="2" />
<text  x="973.26" y="335.5" ></text>
</g>
<g >
<title>llist_add_batch (3 samples, 0.77%)</title><rect x="1171.9" y="261" width="9.1" height="15.0" fill="rgb(205,83,14)" rx="2" ry="2" />
<text  x="1174.94" y="271.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.26%)</title><rect x="578.9" y="197" width="3.0" height="15.0" fill="rgb(225,209,49)" rx="2" ry="2" />
<text  x="581.93" y="207.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.26%)</title><rect x="244.8" y="277" width="3.0" height="15.0" fill="rgb(217,52,3)" rx="2" ry="2" />
<text  x="247.80" y="287.5" ></text>
</g>
<g >
<title>perf_ioctl (64 samples, 16.33%)</title><rect x="10.0" y="357" width="192.7" height="15.0" fill="rgb(249,13,18)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >perf_ioctl</text>
</g>
<g >
<title>record__write (1 samples, 0.26%)</title><rect x="202.7" y="405" width="3.0" height="15.0" fill="rgb(227,98,45)" rx="2" ry="2" />
<text  x="205.65" y="415.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (3 samples, 0.77%)</title><rect x="994.3" y="453" width="9.1" height="15.0" fill="rgb(237,16,15)" rx="2" ry="2" />
<text  x="997.34" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.26%)</title><rect x="578.9" y="261" width="3.0" height="15.0" fill="rgb(212,125,52)" rx="2" ry="2" />
<text  x="581.93" y="271.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (116 samples, 29.59%)</title><rect x="232.8" y="469" width="349.1" height="15.0" fill="rgb(214,90,17)" rx="2" ry="2" />
<text  x="235.76" y="479.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>do_syscall_64 (64 samples, 16.33%)</title><rect x="10.0" y="389" width="192.7" height="15.0" fill="rgb(246,173,5)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >do_syscall_64</text>
</g>
<g >
<title>dispatcher (106 samples, 27.04%)</title><rect x="584.9" y="421" width="319.1" height="15.0" fill="rgb(239,212,14)" rx="2" ry="2" />
<text  x="587.95" y="431.5" >dispatcher</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.26%)</title><rect x="256.8" y="341" width="3.0" height="15.0" fill="rgb(253,133,24)" rx="2" ry="2" />
<text  x="259.84" y="351.5" ></text>
</g>
<g >
<title>timekeeping_advance (1 samples, 0.26%)</title><rect x="578.9" y="117" width="3.0" height="15.0" fill="rgb(213,56,10)" rx="2" ry="2" />
<text  x="581.93" y="127.5" ></text>
</g>
<g >
<title>lind_read (113 samples, 28.83%)</title><rect x="241.8" y="437" width="340.1" height="15.0" fill="rgb(205,167,37)" rx="2" ry="2" />
<text  x="244.79" y="447.5" >lind_read</text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (2 samples, 0.51%)</title><rect x="584.9" y="373" width="6.1" height="15.0" fill="rgb(234,126,12)" rx="2" ry="2" />
<text  x="587.95" y="383.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.26%)</title><rect x="597.0" y="341" width="3.0" height="15.0" fill="rgb(239,39,29)" rx="2" ry="2" />
<text  x="599.99" y="351.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (1 samples, 0.26%)</title><rect x="259.8" y="293" width="3.1" height="15.0" fill="rgb(249,202,25)" rx="2" ry="2" />
<text  x="262.85" y="303.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.26%)</title><rect x="229.7" y="421" width="3.1" height="15.0" fill="rgb(239,198,27)" rx="2" ry="2" />
<text  x="232.74" y="431.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (4 samples, 1.02%)</title><rect x="250.8" y="373" width="12.1" height="15.0" fill="rgb(225,205,31)" rx="2" ry="2" />
<text  x="253.82" y="383.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.26%)</title><rect x="202.7" y="69" width="3.0" height="15.0" fill="rgb(250,112,52)" rx="2" ry="2" />
<text  x="205.65" y="79.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.26%)</title><rect x="259.8" y="341" width="3.1" height="15.0" fill="rgb(224,25,4)" rx="2" ry="2" />
<text  x="262.85" y="351.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (3 samples, 0.77%)</title><rect x="205.7" y="421" width="9.0" height="15.0" fill="rgb(217,120,53)" rx="2" ry="2" />
<text  x="208.66" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.26%)</title><rect x="259.8" y="325" width="3.1" height="15.0" fill="rgb(234,181,0)" rx="2" ry="2" />
<text  x="262.85" y="335.5" ></text>
</g>
<g >
<title>HandleStackContext (1 samples, 0.26%)</title><rect x="220.7" y="469" width="3.0" height="15.0" fill="rgb(206,90,54)" rx="2" ry="2" />
<text  x="223.71" y="479.5" ></text>
</g>
<g >
<title>kick_ilb (5 samples, 1.28%)</title><rect x="1165.9" y="293" width="15.1" height="15.0" fill="rgb(216,49,48)" rx="2" ry="2" />
<text  x="1168.92" y="303.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.26%)</title><rect x="1150.9" y="325" width="3.0" height="15.0" fill="rgb(247,40,10)" rx="2" ry="2" />
<text  x="1153.87" y="335.5" ></text>
</g>
<g >
<title>migrate_task_rq_fair (2 samples, 0.51%)</title><rect x="997.3" y="389" width="6.1" height="15.0" fill="rgb(245,207,39)" rx="2" ry="2" />
<text  x="1000.35" y="399.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.0 (1 samples, 0.26%)</title><rect x="578.9" y="149" width="3.0" height="15.0" fill="rgb(222,157,40)" rx="2" ry="2" />
<text  x="581.93" y="159.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.26%)</title><rect x="1184.0" y="357" width="3.0" height="15.0" fill="rgb(234,174,8)" rx="2" ry="2" />
<text  x="1186.98" y="367.5" ></text>
</g>
<g >
<title>detach_entity_cfs_rq (1 samples, 0.26%)</title><rect x="1000.4" y="373" width="3.0" height="15.0" fill="rgb(248,136,28)" rx="2" ry="2" />
<text  x="1003.36" y="383.5" ></text>
</g>
<g >
<title>propagate_entity_cfs_rq (1 samples, 0.26%)</title><rect x="1000.4" y="357" width="3.0" height="15.0" fill="rgb(249,96,3)" rx="2" ry="2" />
<text  x="1003.36" y="367.5" ></text>
</g>
<g >
<title>__schedule (7 samples, 1.79%)</title><rect x="1159.9" y="357" width="21.1" height="15.0" fill="rgb(242,204,23)" rx="2" ry="2" />
<text  x="1162.90" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 16.33%)</title><rect x="10.0" y="405" width="192.7" height="15.0" fill="rgb(220,17,37)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >entry_SYSCALL_64_after_hw..</text>
</g>
<g >
<title>do_group_exit (1 samples, 0.26%)</title><rect x="970.3" y="453" width="3.0" height="15.0" fill="rgb(254,24,7)" rx="2" ry="2" />
<text  x="973.26" y="463.5" ></text>
</g>
<g >
<title>record__mmap_read_all (1 samples, 0.26%)</title><rect x="202.7" y="469" width="3.0" height="15.0" fill="rgb(252,159,28)" rx="2" ry="2" />
<text  x="205.65" y="479.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (35 samples, 8.93%)</title><rect x="1003.4" y="405" width="105.3" height="15.0" fill="rgb(249,108,26)" rx="2" ry="2" />
<text  x="1006.37" y="415.5" >cpuidle_ente..</text>
</g>
<g >
<title>do_idle (25 samples, 6.38%)</title><rect x="1111.7" y="389" width="75.3" height="15.0" fill="rgb(253,66,32)" rx="2" ry="2" />
<text  x="1114.73" y="399.5" >do_idle</text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.26%)</title><rect x="1150.9" y="309" width="3.0" height="15.0" fill="rgb(252,20,30)" rx="2" ry="2" />
<text  x="1153.87" y="319.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.26%)</title><rect x="256.8" y="277" width="3.0" height="15.0" fill="rgb(223,50,39)" rx="2" ry="2" />
<text  x="259.84" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.26%)</title><rect x="244.8" y="261" width="3.0" height="15.0" fill="rgb(242,55,23)" rx="2" ry="2" />
<text  x="247.80" y="271.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.51%)</title><rect x="1153.9" y="373" width="6.0" height="15.0" fill="rgb(225,101,24)" rx="2" ry="2" />
<text  x="1156.88" y="383.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.26%)</title><rect x="202.7" y="181" width="3.0" height="15.0" fill="rgb(210,16,54)" rx="2" ry="2" />
<text  x="205.65" y="191.5" ></text>
</g>
<g >
<title>NaClSysExecv (1 samples, 0.26%)</title><rect x="229.7" y="437" width="3.1" height="15.0" fill="rgb(238,71,19)" rx="2" ry="2" />
<text  x="232.74" y="447.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.26%)</title><rect x="991.3" y="437" width="3.0" height="15.0" fill="rgb(245,132,19)" rx="2" ry="2" />
<text  x="994.33" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (1 samples, 0.26%)</title><rect x="259.8" y="357" width="3.1" height="15.0" fill="rgb(208,223,1)" rx="2" ry="2" />
<text  x="262.85" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::consumer::Consumer&lt;u8&gt;&gt;&gt; (1 samples, 0.26%)</title><rect x="274.9" y="373" width="3.0" height="15.0" fill="rgb(254,62,53)" rx="2" ry="2" />
<text  x="277.90" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1 samples, 0.26%)</title><rect x="247.8" y="357" width="3.0" height="15.0" fill="rgb(214,170,18)" rx="2" ry="2" />
<text  x="250.81" y="367.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 16.33%)</title><rect x="10.0" y="149" width="192.7" height="15.0" fill="rgb(213,43,38)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >native_write_msr</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (61 samples, 15.56%)</title><rect x="398.3" y="325" width="183.6" height="15.0" fill="rgb(222,136,9)" rx="2" ry="2" />
<text  x="401.32" y="335.5" >ringbuf::consumer::Cons..</text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.26%)</title><rect x="1168.9" y="245" width="3.0" height="15.0" fill="rgb(222,48,30)" rx="2" ry="2" />
<text  x="1171.93" y="255.5" ></text>
</g>
<g >
<title>arch_call_rest_init (26 samples, 6.63%)</title><rect x="1111.7" y="437" width="78.3" height="15.0" fill="rgb(205,223,47)" rx="2" ry="2" />
<text  x="1114.73" y="447.5" >arch_call..</text>
</g>
<g >
<title>ret_from_fork (3 samples, 0.77%)</title><rect x="994.3" y="501" width="9.1" height="15.0" fill="rgb(241,195,44)" rx="2" ry="2" />
<text  x="997.34" y="511.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.26%)</title><rect x="970.3" y="197" width="3.0" height="15.0" fill="rgb(224,203,20)" rx="2" ry="2" />
<text  x="973.26" y="207.5" ></text>
</g>
<g >
<title>[perf-12170.map] (1 samples, 0.26%)</title><rect x="214.7" y="501" width="3.0" height="15.0" fill="rgb(249,32,46)" rx="2" ry="2" />
<text  x="217.69" y="511.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="262.9" y="357" width="3.0" height="15.0" fill="rgb(216,147,2)" rx="2" ry="2" />
<text  x="265.86" y="367.5" ></text>
</g>
<g >
<title>[unknown]  (14 samples, 3.57%)</title><rect x="904.0" y="501" width="42.2" height="15.0" fill="rgb(254,192,51)" rx="2" ry="2" />
<text  x="907.03" y="511.5" >[un..</text>
</g>
<g >
<title>ksys_write (1 samples, 0.26%)</title><rect x="991.3" y="453" width="3.0" height="15.0" fill="rgb(219,59,42)" rx="2" ry="2" />
<text  x="994.33" y="463.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.26%)</title><rect x="202.7" y="53" width="3.0" height="15.0" fill="rgb(246,91,19)" rx="2" ry="2" />
<text  x="205.65" y="63.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.26%)</title><rect x="1181.0" y="357" width="3.0" height="15.0" fill="rgb(222,184,27)" rx="2" ry="2" />
<text  x="1183.97" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (8 samples, 2.04%)</title><rect x="946.2" y="485" width="24.1" height="15.0" fill="rgb(215,56,13)" rx="2" ry="2" />
<text  x="949.17" y="495.5" >[..</text>
</g>
<g >
<title>move_queued_task (3 samples, 0.77%)</title><rect x="994.3" y="421" width="9.1" height="15.0" fill="rgb(246,204,16)" rx="2" ry="2" />
<text  x="997.34" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.26%)</title><rect x="259.8" y="261" width="3.1" height="15.0" fill="rgb(208,225,8)" rx="2" ry="2" />
<text  x="262.85" y="271.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (1 samples, 0.26%)</title><rect x="226.7" y="469" width="3.0" height="15.0" fill="rgb(206,200,42)" rx="2" ry="2" />
<text  x="229.73" y="479.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (2 samples, 0.51%)</title><rect x="250.8" y="341" width="6.0" height="15.0" fill="rgb(207,217,5)" rx="2" ry="2" />
<text  x="253.82" y="351.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.77%)</title><rect x="265.9" y="373" width="9.0" height="15.0" fill="rgb(236,70,0)" rx="2" ry="2" />
<text  x="268.87" y="383.5" ></text>
</g>
<g >
<title>lind_write (106 samples, 27.04%)</title><rect x="584.9" y="437" width="319.1" height="15.0" fill="rgb(229,11,49)" rx="2" ry="2" />
<text  x="587.95" y="447.5" >lind_write</text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.26%)</title><rect x="603.0" y="373" width="3.0" height="15.0" fill="rgb(215,88,7)" rx="2" ry="2" />
<text  x="606.01" y="383.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (61 samples, 15.56%)</title><rect x="398.3" y="341" width="183.6" height="15.0" fill="rgb(241,158,9)" rx="2" ry="2" />
<text  x="401.32" y="351.5" >ringbuf::consumer::Cons..</text>
</g>
<g >
<title>ctx_resched (64 samples, 16.33%)</title><rect x="10.0" y="197" width="192.7" height="15.0" fill="rgb(218,79,25)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >ctx_resched</text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (2 samples, 0.51%)</title><rect x="250.8" y="357" width="6.0" height="15.0" fill="rgb(211,151,20)" rx="2" ry="2" />
<text  x="253.82" y="367.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (64 samples, 16.33%)</title><rect x="10.0" y="453" width="192.7" height="15.0" fill="rgb(241,77,46)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >perf_evsel__enable_cpu</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.26%)</title><rect x="578.9" y="245" width="3.0" height="15.0" fill="rgb(216,152,27)" rx="2" ry="2" />
<text  x="581.93" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="991.3" y="485" width="3.0" height="15.0" fill="rgb(208,45,5)" rx="2" ry="2" />
<text  x="994.33" y="495.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (1 samples, 0.26%)</title><rect x="588.0" y="309" width="3.0" height="15.0" fill="rgb(223,27,4)" rx="2" ry="2" />
<text  x="590.96" y="319.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.26%)</title><rect x="229.7" y="373" width="3.1" height="15.0" fill="rgb(247,52,31)" rx="2" ry="2" />
<text  x="232.74" y="383.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.26%)</title><rect x="202.7" y="293" width="3.0" height="15.0" fill="rgb(222,151,31)" rx="2" ry="2" />
<text  x="205.65" y="303.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.26%)</title><rect x="991.3" y="405" width="3.0" height="15.0" fill="rgb(226,154,48)" rx="2" ry="2" />
<text  x="994.33" y="415.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.26%)</title><rect x="994.3" y="405" width="3.0" height="15.0" fill="rgb(246,77,39)" rx="2" ry="2" />
<text  x="997.34" y="415.5" ></text>
</g>
<g >
<title>record__pushfn (1 samples, 0.26%)</title><rect x="202.7" y="421" width="3.0" height="15.0" fill="rgb(228,24,8)" rx="2" ry="2" />
<text  x="205.65" y="431.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (1 samples, 0.26%)</title><rect x="241.8" y="325" width="3.0" height="15.0" fill="rgb(250,93,19)" rx="2" ry="2" />
<text  x="244.79" y="335.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (3 samples, 0.77%)</title><rect x="205.7" y="485" width="9.0" height="15.0" fill="rgb(225,38,8)" rx="2" ry="2" />
<text  x="208.66" y="495.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (104 samples, 26.53%)</title><rect x="591.0" y="389" width="313.0" height="15.0" fill="rgb(210,195,54)" rx="2" ry="2" />
<text  x="593.97" y="399.5" >rustposix::interface::pipe::EmulatedPipe::..</text>
</g>
<g >
<title>do_iter_write (1 samples, 0.26%)</title><rect x="202.7" y="229" width="3.0" height="15.0" fill="rgb(241,183,19)" rx="2" ry="2" />
<text  x="205.65" y="239.5" ></text>
</g>
<g >
<title>create_empty_buffers (1 samples, 0.26%)</title><rect x="202.7" y="117" width="3.0" height="15.0" fill="rgb(211,82,50)" rx="2" ry="2" />
<text  x="205.65" y="127.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (3 samples, 0.77%)</title><rect x="205.7" y="437" width="9.0" height="15.0" fill="rgb(236,211,26)" rx="2" ry="2" />
<text  x="208.66" y="447.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.26%)</title><rect x="259.8" y="277" width="3.1" height="15.0" fill="rgb(252,97,31)" rx="2" ry="2" />
<text  x="262.85" y="287.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (59 samples, 15.05%)</title><rect x="624.1" y="309" width="177.6" height="15.0" fill="rgb(251,178,3)" rx="2" ry="2" />
<text  x="627.08" y="319.5" >core::intrinsics::copy_..</text>
</g>
<g >
<title>nohz_newidle_balance (7 samples, 1.79%)</title><rect x="1159.9" y="309" width="21.1" height="15.0" fill="rgb(225,164,12)" rx="2" ry="2" />
<text  x="1162.90" y="319.5" ></text>
</g>
<g >
<title>_perf_ioctl (64 samples, 16.33%)</title><rect x="10.0" y="341" width="192.7" height="15.0" fill="rgb(225,229,1)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >_perf_ioctl</text>
</g>
<g >
<title>alloc_page_buffers (1 samples, 0.26%)</title><rect x="202.7" y="101" width="3.0" height="15.0" fill="rgb(227,33,13)" rx="2" ry="2" />
<text  x="205.65" y="111.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (1 samples, 0.26%)</title><rect x="238.8" y="437" width="3.0" height="15.0" fill="rgb(253,56,17)" rx="2" ry="2" />
<text  x="241.78" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.51%)</title><rect x="250.8" y="277" width="6.0" height="15.0" fill="rgb(209,108,5)" rx="2" ry="2" />
<text  x="253.82" y="287.5" ></text>
</g>
<g >
<title>smp_call_function_single (64 samples, 16.33%)</title><rect x="10.0" y="277" width="192.7" height="15.0" fill="rgb(207,8,40)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >smp_call_function_single</text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.26%)</title><rect x="274.9" y="341" width="3.0" height="15.0" fill="rgb(248,7,30)" rx="2" ry="2" />
<text  x="277.90" y="351.5" ></text>
</g>
<g >
<title>[anon] (3 samples, 0.77%)</title><rect x="205.7" y="501" width="9.0" height="15.0" fill="rgb(239,99,51)" rx="2" ry="2" />
<text  x="208.66" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.26%)</title><rect x="615.1" y="325" width="3.0" height="15.0" fill="rgb(237,66,8)" rx="2" ry="2" />
<text  x="618.05" y="335.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (3 samples, 0.77%)</title><rect x="994.3" y="469" width="9.1" height="15.0" fill="rgb(224,81,6)" rx="2" ry="2" />
<text  x="997.34" y="479.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (1 samples, 0.26%)</title><rect x="226.7" y="437" width="3.0" height="15.0" fill="rgb(206,56,40)" rx="2" ry="2" />
<text  x="229.73" y="447.5" ></text>
</g>
<g >
<title>__cmd_record (65 samples, 16.58%)</title><rect x="10.0" y="485" width="195.7" height="15.0" fill="rgb(244,112,45)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >__cmd_record</text>
</g>
<g >
<title>perf_evsel__run_ioctl (64 samples, 16.33%)</title><rect x="10.0" y="437" width="192.7" height="15.0" fill="rgb(250,140,0)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >perf_evsel__run_ioctl</text>
</g>
</g>
</svg>
