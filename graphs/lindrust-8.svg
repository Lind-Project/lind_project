<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="838.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="821" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="821" > </text>
<g id="frames">
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="166.1" y="533" width="0.3" height="15.0" fill="rgb(211,201,53)" rx="2" ry="2" />
<text  x="169.08" y="543.5" ></text>
</g>
<g >
<title>start_secondary (92 samples, 2.26%)</title><rect x="1112.4" y="741" width="26.6" height="15.0" fill="rgb(209,54,28)" rx="2" ry="2" />
<text  x="1115.40" y="751.5" >s..</text>
</g>
<g >
<title>NaClDescUnref (65 samples, 1.60%)</title><rect x="870.6" y="693" width="18.8" height="15.0" fill="rgb(229,211,31)" rx="2" ry="2" />
<text  x="873.60" y="703.5" ></text>
</g>
<g >
<title>__libc_close (1 samples, 0.02%)</title><rect x="33.5" y="661" width="0.2" height="15.0" fill="rgb(233,220,17)" rx="2" ry="2" />
<text  x="36.46" y="671.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="152.8" y="389" width="0.2" height="15.0" fill="rgb(205,109,18)" rx="2" ry="2" />
<text  x="155.76" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.10%)</title><rect x="855.8" y="533" width="1.2" height="15.0" fill="rgb(210,81,12)" rx="2" ry="2" />
<text  x="858.84" y="543.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="1078.2" y="325" width="0.3" height="15.0" fill="rgb(219,192,11)" rx="2" ry="2" />
<text  x="1081.23" y="335.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (11 samples, 0.27%)</title><rect x="83.6" y="693" width="3.1" height="15.0" fill="rgb(207,48,3)" rx="2" ry="2" />
<text  x="86.55" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="166.1" y="613" width="0.3" height="15.0" fill="rgb(224,92,26)" rx="2" ry="2" />
<text  x="169.08" y="623.5" ></text>
</g>
<g >
<title>unfreeze_partials (1 samples, 0.02%)</title><rect x="1109.5" y="485" width="0.3" height="15.0" fill="rgb(243,99,46)" rx="2" ry="2" />
<text  x="1112.50" y="495.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="1078.2" y="549" width="0.3" height="15.0" fill="rgb(228,49,8)" rx="2" ry="2" />
<text  x="1081.23" y="559.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1112.4" y="581" width="0.3" height="15.0" fill="rgb(236,45,36)" rx="2" ry="2" />
<text  x="1115.40" y="591.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (29 samples, 0.71%)</title><rect x="930.5" y="629" width="8.4" height="15.0" fill="rgb(245,189,13)" rx="2" ry="2" />
<text  x="933.54" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.10%)</title><rect x="855.8" y="517" width="1.2" height="15.0" fill="rgb(209,10,12)" rx="2" ry="2" />
<text  x="858.84" y="527.5" ></text>
</g>
<g >
<title>_perf_event_enable (66 samples, 1.62%)</title><rect x="13.8" y="549" width="19.1" height="15.0" fill="rgb(215,109,51)" rx="2" ry="2" />
<text  x="16.76" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="36.4" y="757" width="0.5" height="15.0" fill="rgb(210,100,49)" rx="2" ry="2" />
<text  x="39.35" y="767.5" ></text>
</g>
<g >
<title>NaClSysExecve (1 samples, 0.02%)</title><rect x="163.5" y="709" width="0.3" height="15.0" fill="rgb(250,43,23)" rx="2" ry="2" />
<text  x="166.47" y="719.5" ></text>
</g>
<g >
<title>event_function_call (65 samples, 1.60%)</title><rect x="14.1" y="533" width="18.8" height="15.0" fill="rgb(240,16,48)" rx="2" ry="2" />
<text  x="17.05" y="543.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.02%)</title><rect x="1111.5" y="693" width="0.3" height="15.0" fill="rgb(210,19,33)" rx="2" ry="2" />
<text  x="1114.53" y="703.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.12%)</title><rect x="205.2" y="533" width="1.4" height="15.0" fill="rgb(224,136,38)" rx="2" ry="2" />
<text  x="208.17" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1008.1" y="645" width="0.3" height="15.0" fill="rgb(242,146,36)" rx="2" ry="2" />
<text  x="1011.15" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1 samples, 0.02%)</title><rect x="557.9" y="533" width="0.3" height="15.0" fill="rgb(242,81,47)" rx="2" ry="2" />
<text  x="560.87" y="543.5" ></text>
</g>
<g >
<title>__dentry_kill (2 samples, 0.05%)</title><rect x="1110.9" y="565" width="0.6" height="15.0" fill="rgb(249,155,25)" rx="2" ry="2" />
<text  x="1113.95" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.29%)</title><rect x="848.3" y="549" width="3.5" height="15.0" fill="rgb(205,81,17)" rx="2" ry="2" />
<text  x="851.31" y="559.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.02%)</title><rect x="1106.9" y="581" width="0.3" height="15.0" fill="rgb(245,8,42)" rx="2" ry="2" />
<text  x="1109.89" y="591.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="564.5" y="645" width="0.3" height="15.0" fill="rgb(246,150,25)" rx="2" ry="2" />
<text  x="567.53" y="655.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="35.8" y="373" width="0.3" height="15.0" fill="rgb(247,150,48)" rx="2" ry="2" />
<text  x="38.77" y="383.5" ></text>
</g>
<g >
<title>NaClSysWrite (2 samples, 0.05%)</title><rect x="559.3" y="725" width="0.6" height="15.0" fill="rgb(239,213,39)" rx="2" ry="2" />
<text  x="562.32" y="735.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="815.6" y="437" width="0.3" height="15.0" fill="rgb(217,171,14)" rx="2" ry="2" />
<text  x="818.59" y="447.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (9 samples, 0.22%)</title><rect x="33.7" y="693" width="2.7" height="15.0" fill="rgb(224,192,42)" rx="2" ry="2" />
<text  x="36.74" y="703.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.02%)</title><rect x="164.6" y="437" width="0.3" height="15.0" fill="rgb(209,163,46)" rx="2" ry="2" />
<text  x="167.63" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.07%)</title><rect x="814.4" y="517" width="0.9" height="15.0" fill="rgb(209,183,48)" rx="2" ry="2" />
<text  x="817.43" y="527.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (62 samples, 1.52%)</title><rect x="871.5" y="677" width="17.9" height="15.0" fill="rgb(222,56,32)" rx="2" ry="2" />
<text  x="874.47" y="687.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="35.2" y="325" width="0.3" height="15.0" fill="rgb(251,11,26)" rx="2" ry="2" />
<text  x="38.19" y="335.5" ></text>
</g>
<g >
<title>vfs_iter_write (8 samples, 0.20%)</title><rect x="34.0" y="485" width="2.4" height="15.0" fill="rgb(243,47,20)" rx="2" ry="2" />
<text  x="37.03" y="495.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="672.0" y="533" width="0.2" height="15.0" fill="rgb(227,111,39)" rx="2" ry="2" />
<text  x="674.96" y="543.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (1 samples, 0.02%)</title><rect x="149.6" y="725" width="0.3" height="15.0" fill="rgb(210,174,28)" rx="2" ry="2" />
<text  x="152.57" y="735.5" ></text>
</g>
<g >
<title>record__mmap_read_all (9 samples, 0.22%)</title><rect x="33.7" y="709" width="2.7" height="15.0" fill="rgb(214,24,54)" rx="2" ry="2" />
<text  x="36.74" y="719.5" ></text>
</g>
<g >
<title>jbd2__journal_start (1 samples, 0.02%)</title><rect x="163.8" y="277" width="0.3" height="15.0" fill="rgb(222,161,19)" rx="2" ry="2" />
<text  x="166.76" y="287.5" ></text>
</g>
<g >
<title>perf_event_task_tick (4 samples, 0.10%)</title><rect x="1146.3" y="405" width="1.1" height="15.0" fill="rgb(224,68,32)" rx="2" ry="2" />
<text  x="1149.27" y="415.5" ></text>
</g>
<g >
<title>pm_qos_read_value (1 samples, 0.02%)</title><rect x="1182.8" y="581" width="0.3" height="15.0" fill="rgb(238,167,22)" rx="2" ry="2" />
<text  x="1185.76" y="591.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (2 samples, 0.05%)</title><rect x="946.8" y="677" width="0.5" height="15.0" fill="rgb(220,229,52)" rx="2" ry="2" />
<text  x="949.76" y="687.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (11 samples, 0.27%)</title><rect x="1025.5" y="629" width="3.2" height="15.0" fill="rgb(225,201,21)" rx="2" ry="2" />
<text  x="1028.52" y="639.5" ></text>
</g>
<g >
<title>NaClLog (4 samples, 0.10%)</title><rect x="148.1" y="725" width="1.2" height="15.0" fill="rgb(248,125,46)" rx="2" ry="2" />
<text  x="151.13" y="735.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.02%)</title><rect x="1148.3" y="501" width="0.3" height="15.0" fill="rgb(233,208,38)" rx="2" ry="2" />
<text  x="1151.30" y="511.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (68 samples, 1.67%)</title><rect x="122.1" y="725" width="19.7" height="15.0" fill="rgb(219,27,49)" rx="2" ry="2" />
<text  x="125.06" y="735.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.02%)</title><rect x="150.4" y="277" width="0.3" height="15.0" fill="rgb(215,9,16)" rx="2" ry="2" />
<text  x="153.44" y="287.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::open (1 samples, 0.02%)</title><rect x="164.3" y="565" width="0.3" height="15.0" fill="rgb(224,9,48)" rx="2" ry="2" />
<text  x="167.34" y="575.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (11 samples, 0.27%)</title><rect x="1073.0" y="741" width="3.2" height="15.0" fill="rgb(212,17,24)" rx="2" ry="2" />
<text  x="1076.01" y="751.5" ></text>
</g>
<g >
<title>newidle_balance (2 samples, 0.05%)</title><rect x="1187.1" y="581" width="0.6" height="15.0" fill="rgb(241,86,20)" rx="2" ry="2" />
<text  x="1190.10" y="591.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.02%)</title><rect x="165.8" y="661" width="0.3" height="15.0" fill="rgb(225,82,13)" rx="2" ry="2" />
<text  x="168.79" y="671.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="152.8" y="501" width="0.2" height="15.0" fill="rgb(248,55,49)" rx="2" ry="2" />
<text  x="155.76" y="511.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="164.9" y="421" width="0.9" height="15.0" fill="rgb(218,99,43)" rx="2" ry="2" />
<text  x="167.92" y="431.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (11 samples, 0.27%)</title><rect x="83.6" y="709" width="3.1" height="15.0" fill="rgb(222,64,40)" rx="2" ry="2" />
<text  x="86.55" y="719.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1109.5" y="517" width="0.3" height="15.0" fill="rgb(209,178,37)" rx="2" ry="2" />
<text  x="1112.50" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (774 samples, 18.99%)</title><rect x="623.6" y="629" width="224.1" height="15.0" fill="rgb(207,207,22)" rx="2" ry="2" />
<text  x="626.60" y="639.5" >rustposix::safeposix::dispatc..</text>
</g>
<g >
<title>NaClFastMutexLock (2 samples, 0.05%)</title><rect x="38.7" y="741" width="0.5" height="15.0" fill="rgb(221,40,0)" rx="2" ry="2" />
<text  x="41.67" y="751.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (25 samples, 0.61%)</title><rect x="881.3" y="645" width="7.3" height="15.0" fill="rgb(215,227,16)" rx="2" ry="2" />
<text  x="884.32" y="655.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1 samples, 0.02%)</title><rect x="141.8" y="725" width="0.2" height="15.0" fill="rgb(239,191,50)" rx="2" ry="2" />
<text  x="144.75" y="735.5" ></text>
</g>
<g >
<title>NaClValidateCode (2 samples, 0.05%)</title><rect x="1041.2" y="661" width="0.5" height="15.0" fill="rgb(245,39,43)" rx="2" ry="2" />
<text  x="1044.16" y="671.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.02%)</title><rect x="1137.3" y="661" width="0.3" height="15.0" fill="rgb(231,11,14)" rx="2" ry="2" />
<text  x="1140.30" y="671.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (13 samples, 0.32%)</title><rect x="793.0" y="533" width="3.8" height="15.0" fill="rgb(238,224,10)" rx="2" ry="2" />
<text  x="796.00" y="543.5" ></text>
</g>
<g >
<title>remote_function (2 samples, 0.05%)</title><rect x="36.4" y="597" width="0.5" height="15.0" fill="rgb(252,114,33)" rx="2" ry="2" />
<text  x="39.35" y="607.5" ></text>
</g>
<g >
<title>__do_sys_clone (1 samples, 0.02%)</title><rect x="1077.4" y="693" width="0.2" height="15.0" fill="rgb(242,149,34)" rx="2" ry="2" />
<text  x="1080.36" y="703.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (3 samples, 0.07%)</title><rect x="43.3" y="741" width="0.9" height="15.0" fill="rgb(242,192,41)" rx="2" ry="2" />
<text  x="46.30" y="751.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (46 samples, 1.13%)</title><rect x="802.8" y="565" width="13.4" height="15.0" fill="rgb(233,153,41)" rx="2" ry="2" />
<text  x="805.84" y="575.5" ></text>
</g>
<g >
<title>openaux (1 samples, 0.02%)</title><rect x="10.3" y="661" width="0.3" height="15.0" fill="rgb(222,164,26)" rx="2" ry="2" />
<text  x="13.29" y="671.5" ></text>
</g>
<g >
<title>fdarray__poll (1 samples, 0.02%)</title><rect x="33.2" y="709" width="0.3" height="15.0" fill="rgb(207,104,35)" rx="2" ry="2" />
<text  x="36.17" y="719.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (2 samples, 0.05%)</title><rect x="1188.3" y="629" width="0.5" height="15.0" fill="rgb(241,87,10)" rx="2" ry="2" />
<text  x="1191.26" y="639.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.02%)</title><rect x="35.5" y="389" width="0.3" height="15.0" fill="rgb(237,229,7)" rx="2" ry="2" />
<text  x="38.48" y="399.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.02%)</title><rect x="1088.9" y="677" width="0.3" height="15.0" fill="rgb(246,126,26)" rx="2" ry="2" />
<text  x="1091.94" y="687.5" ></text>
</g>
<g >
<title>NaClVmmapAddWithOverwrite (1 samples, 0.02%)</title><rect x="166.4" y="677" width="0.3" height="15.0" fill="rgb(246,168,9)" rx="2" ry="2" />
<text  x="169.37" y="687.5" ></text>
</g>
<g >
<title>NaClMutexLock (1 samples, 0.02%)</title><rect x="558.7" y="645" width="0.3" height="15.0" fill="rgb(238,203,6)" rx="2" ry="2" />
<text  x="561.74" y="655.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.02%)</title><rect x="1039.7" y="469" width="0.3" height="15.0" fill="rgb(241,54,54)" rx="2" ry="2" />
<text  x="1042.71" y="479.5" ></text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.02%)</title><rect x="1107.2" y="677" width="0.3" height="15.0" fill="rgb(232,178,43)" rx="2" ry="2" />
<text  x="1110.18" y="687.5" ></text>
</g>
<g >
<title>open_last_lookups (1 samples, 0.02%)</title><rect x="164.3" y="357" width="0.3" height="15.0" fill="rgb(240,203,50)" rx="2" ry="2" />
<text  x="167.34" y="367.5" ></text>
</g>
<g >
<title>NaClSysFork (2 samples, 0.05%)</title><rect x="165.8" y="709" width="0.6" height="15.0" fill="rgb(246,51,13)" rx="2" ry="2" />
<text  x="168.79" y="719.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (61 samples, 1.50%)</title><rect x="49.7" y="741" width="17.6" height="15.0" fill="rgb(209,30,7)" rx="2" ry="2" />
<text  x="52.67" y="751.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="152.8" y="517" width="0.2" height="15.0" fill="rgb(222,17,37)" rx="2" ry="2" />
<text  x="155.76" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.52%)</title><rect x="628.2" y="581" width="6.1" height="15.0" fill="rgb(242,219,40)" rx="2" ry="2" />
<text  x="631.23" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (79 samples, 1.94%)</title><rect x="343.6" y="549" width="22.9" height="15.0" fill="rgb(245,92,17)" rx="2" ry="2" />
<text  x="346.59" y="559.5" >c..</text>
</g>
<g >
<title>std::sync::once::Once::is_completed (2 samples, 0.05%)</title><rect x="627.7" y="501" width="0.5" height="15.0" fill="rgb(219,46,49)" rx="2" ry="2" />
<text  x="630.65" y="511.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1023.8" y="597" width="0.3" height="15.0" fill="rgb(229,69,39)" rx="2" ry="2" />
<text  x="1026.79" y="607.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="623.3" y="533" width="0.3" height="15.0" fill="rgb(242,161,17)" rx="2" ry="2" />
<text  x="626.31" y="543.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.02%)</title><rect x="938.7" y="533" width="0.2" height="15.0" fill="rgb(208,52,46)" rx="2" ry="2" />
<text  x="941.65" y="543.5" ></text>
</g>
<g >
<title>rcu_gp_fqs_loop (1 samples, 0.02%)</title><rect x="1111.5" y="709" width="0.3" height="15.0" fill="rgb(231,48,39)" rx="2" ry="2" />
<text  x="1114.53" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="164.6" y="517" width="0.3" height="15.0" fill="rgb(218,123,34)" rx="2" ry="2" />
<text  x="167.63" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1077.4" y="741" width="0.2" height="15.0" fill="rgb(253,127,14)" rx="2" ry="2" />
<text  x="1080.36" y="751.5" ></text>
</g>
<g >
<title>dispatcher (4 samples, 0.10%)</title><rect x="1048.7" y="741" width="1.1" height="15.0" fill="rgb(252,73,42)" rx="2" ry="2" />
<text  x="1051.69" y="751.5" ></text>
</g>
<g >
<title>dispatcher (5 samples, 0.12%)</title><rect x="67.3" y="741" width="1.5" height="15.0" fill="rgb(250,209,2)" rx="2" ry="2" />
<text  x="70.33" y="751.5" ></text>
</g>
<g >
<title>main (1 samples, 0.02%)</title><rect x="10.0" y="725" width="0.3" height="15.0" fill="rgb(218,10,8)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (2 samples, 0.05%)</title><rect x="165.8" y="725" width="0.6" height="15.0" fill="rgb(228,44,37)" rx="2" ry="2" />
<text  x="168.79" y="735.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (6 samples, 0.15%)</title><rect x="736.2" y="517" width="1.8" height="15.0" fill="rgb(224,227,38)" rx="2" ry="2" />
<text  x="739.24" y="527.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (5 samples, 0.12%)</title><rect x="205.2" y="549" width="1.4" height="15.0" fill="rgb(241,222,28)" rx="2" ry="2" />
<text  x="208.17" y="559.5" ></text>
</g>
<g >
<title>NaClSysMmap (1 samples, 0.02%)</title><rect x="166.4" y="709" width="0.3" height="15.0" fill="rgb(244,50,38)" rx="2" ry="2" />
<text  x="169.37" y="719.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (37 samples, 0.91%)</title><rect x="634.3" y="565" width="10.7" height="15.0" fill="rgb(238,130,5)" rx="2" ry="2" />
<text  x="637.31" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::PIPE_TABLE (2 samples, 0.05%)</title><rect x="1095.9" y="757" width="0.6" height="15.0" fill="rgb(239,27,44)" rx="2" ry="2" />
<text  x="1098.89" y="767.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="857.0" y="613" width="0.3" height="15.0" fill="rgb(226,81,30)" rx="2" ry="2" />
<text  x="859.99" y="623.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="165.5" y="245" width="0.3" height="15.0" fill="rgb(249,157,22)" rx="2" ry="2" />
<text  x="168.50" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="163.2" y="645" width="0.3" height="15.0" fill="rgb(249,213,40)" rx="2" ry="2" />
<text  x="166.18" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (9 samples, 0.22%)</title><rect x="91.1" y="741" width="2.6" height="15.0" fill="rgb(221,184,1)" rx="2" ry="2" />
<text  x="94.08" y="751.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="1112.1" y="549" width="0.3" height="15.0" fill="rgb(247,57,49)" rx="2" ry="2" />
<text  x="1115.11" y="559.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="34.0" y="309" width="0.3" height="15.0" fill="rgb(208,224,9)" rx="2" ry="2" />
<text  x="37.03" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="916.9" y="613" width="0.3" height="15.0" fill="rgb(206,73,25)" rx="2" ry="2" />
<text  x="919.93" y="623.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (30 samples, 0.74%)</title><rect x="563.4" y="677" width="8.7" height="15.0" fill="rgb(229,100,41)" rx="2" ry="2" />
<text  x="566.37" y="687.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get (2 samples, 0.05%)</title><rect x="627.7" y="533" width="0.5" height="15.0" fill="rgb(248,11,48)" rx="2" ry="2" />
<text  x="630.65" y="543.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,351 samples, 33.15%)</title><rect x="559.9" y="725" width="391.2" height="15.0" fill="rgb(220,112,22)" rx="2" ry="2" />
<text  x="562.89" y="735.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.02%)</title><rect x="1039.7" y="613" width="0.3" height="15.0" fill="rgb(227,177,51)" rx="2" ry="2" />
<text  x="1042.71" y="623.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (8 samples, 0.20%)</title><rect x="1021.5" y="565" width="2.3" height="15.0" fill="rgb(235,26,54)" rx="2" ry="2" />
<text  x="1024.47" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1040.0" y="565" width="0.3" height="15.0" fill="rgb(245,68,26)" rx="2" ry="2" />
<text  x="1043.00" y="575.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.07%)</title><rect x="164.9" y="373" width="0.9" height="15.0" fill="rgb(246,115,22)" rx="2" ry="2" />
<text  x="167.92" y="383.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="728.1" y="533" width="0.3" height="15.0" fill="rgb(229,13,19)" rx="2" ry="2" />
<text  x="731.13" y="543.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.07%)</title><rect x="164.9" y="549" width="0.9" height="15.0" fill="rgb(206,91,35)" rx="2" ry="2" />
<text  x="167.92" y="559.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="853.8" y="485" width="0.3" height="15.0" fill="rgb(218,211,18)" rx="2" ry="2" />
<text  x="856.81" y="495.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1137.9" y="661" width="0.3" height="15.0" fill="rgb(247,198,54)" rx="2" ry="2" />
<text  x="1140.88" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="164.3" y="437" width="0.3" height="15.0" fill="rgb(239,16,32)" rx="2" ry="2" />
<text  x="167.34" y="447.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.07%)</title><rect x="164.9" y="341" width="0.9" height="15.0" fill="rgb(253,77,2)" rx="2" ry="2" />
<text  x="167.92" y="351.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="728.1" y="549" width="0.3" height="15.0" fill="rgb(215,72,35)" rx="2" ry="2" />
<text  x="731.13" y="559.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.07%)</title><rect x="164.9" y="485" width="0.9" height="15.0" fill="rgb(230,19,13)" rx="2" ry="2" />
<text  x="167.92" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (12 samples, 0.29%)</title><rect x="624.2" y="565" width="3.5" height="15.0" fill="rgb(217,40,0)" rx="2" ry="2" />
<text  x="627.18" y="575.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="35.2" y="341" width="0.3" height="15.0" fill="rgb(218,191,9)" rx="2" ry="2" />
<text  x="38.19" y="351.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.05%)</title><rect x="90.5" y="741" width="0.6" height="15.0" fill="rgb(221,106,36)" rx="2" ry="2" />
<text  x="93.50" y="751.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (10 samples, 0.25%)</title><rect x="1025.8" y="597" width="2.9" height="15.0" fill="rgb(253,87,29)" rx="2" ry="2" />
<text  x="1028.81" y="607.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="33.2" y="629" width="0.3" height="15.0" fill="rgb(219,116,10)" rx="2" ry="2" />
<text  x="36.17" y="639.5" ></text>
</g>
<g >
<title>balance_pgdat (11 samples, 0.27%)</title><rect x="1108.3" y="709" width="3.2" height="15.0" fill="rgb(230,5,20)" rx="2" ry="2" />
<text  x="1111.34" y="719.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="409.6" y="469" width="0.3" height="15.0" fill="rgb(244,189,37)" rx="2" ry="2" />
<text  x="412.61" y="479.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (57 samples, 1.40%)</title><rect x="70.2" y="741" width="16.5" height="15.0" fill="rgb(241,141,2)" rx="2" ry="2" />
<text  x="73.23" y="751.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (974 samples, 23.90%)</title><rect x="588.3" y="677" width="282.0" height="15.0" fill="rgb(229,112,39)" rx="2" ry="2" />
<text  x="591.27" y="687.5" >NaClHostDescWrite</text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="1095.6" y="485" width="0.3" height="15.0" fill="rgb(206,26,31)" rx="2" ry="2" />
<text  x="1098.60" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (46 samples, 1.13%)</title><rect x="802.8" y="581" width="13.4" height="15.0" fill="rgb(205,89,54)" rx="2" ry="2" />
<text  x="805.84" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.02%)</title><rect x="150.4" y="565" width="0.3" height="15.0" fill="rgb(229,169,49)" rx="2" ry="2" />
<text  x="153.44" y="575.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.07%)</title><rect x="164.9" y="501" width="0.9" height="15.0" fill="rgb(209,8,41)" rx="2" ry="2" />
<text  x="167.92" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (20 samples, 0.49%)</title><rect x="610.3" y="549" width="5.8" height="15.0" fill="rgb(247,99,34)" rx="2" ry="2" />
<text  x="613.28" y="559.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.07%)</title><rect x="1027.8" y="581" width="0.9" height="15.0" fill="rgb(245,220,3)" rx="2" ry="2" />
<text  x="1030.84" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.20%)</title><rect x="34.0" y="581" width="2.4" height="15.0" fill="rgb(234,95,37)" rx="2" ry="2" />
<text  x="37.03" y="591.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (7 samples, 0.17%)</title><rect x="1021.8" y="549" width="2.0" height="15.0" fill="rgb(239,40,54)" rx="2" ry="2" />
<text  x="1024.76" y="559.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (25 samples, 0.61%)</title><rect x="1142.2" y="533" width="7.3" height="15.0" fill="rgb(214,36,17)" rx="2" ry="2" />
<text  x="1145.22" y="543.5" ></text>
</g>
<g >
<title>NaClXMutexLock (21 samples, 0.52%)</title><rect x="142.0" y="709" width="6.1" height="15.0" fill="rgb(242,77,19)" rx="2" ry="2" />
<text  x="145.04" y="719.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.02%)</title><rect x="164.6" y="389" width="0.3" height="15.0" fill="rgb(225,216,14)" rx="2" ry="2" />
<text  x="167.63" y="399.5" ></text>
</g>
<g >
<title>NaClVmmapUpdate (1 samples, 0.02%)</title><rect x="166.4" y="661" width="0.3" height="15.0" fill="rgb(213,6,32)" rx="2" ry="2" />
<text  x="169.37" y="671.5" ></text>
</g>
<g >
<title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="1077.6" y="757" width="0.3" height="15.0" fill="rgb(251,58,29)" rx="2" ry="2" />
<text  x="1080.65" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (38 samples, 0.93%)</title><rect x="656.0" y="533" width="11.0" height="15.0" fill="rgb(250,105,28)" rx="2" ry="2" />
<text  x="659.03" y="543.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (44 samples, 1.08%)</title><rect x="150.7" y="725" width="12.8" height="15.0" fill="rgb(217,23,12)" rx="2" ry="2" />
<text  x="153.73" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (33 samples, 0.81%)</title><rect x="830.4" y="549" width="9.5" height="15.0" fill="rgb(229,120,34)" rx="2" ry="2" />
<text  x="833.35" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (1 samples, 0.02%)</title><rect x="150.4" y="485" width="0.3" height="15.0" fill="rgb(216,223,1)" rx="2" ry="2" />
<text  x="153.44" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.02%)</title><rect x="557.9" y="549" width="0.3" height="15.0" fill="rgb(241,63,39)" rx="2" ry="2" />
<text  x="560.87" y="559.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (11 samples, 0.27%)</title><rect x="200.0" y="549" width="3.1" height="15.0" fill="rgb(247,224,50)" rx="2" ry="2" />
<text  x="202.96" y="559.5" ></text>
</g>
<g >
<title>__list_lru_walk_one (1 samples, 0.02%)</title><rect x="1110.7" y="581" width="0.2" height="15.0" fill="rgb(213,105,31)" rx="2" ry="2" />
<text  x="1113.66" y="591.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (80 samples, 1.96%)</title><rect x="728.4" y="549" width="23.2" height="15.0" fill="rgb(234,166,22)" rx="2" ry="2" />
<text  x="731.42" y="559.5" >r..</text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1187.4" y="501" width="0.3" height="15.0" fill="rgb(236,190,43)" rx="2" ry="2" />
<text  x="1190.39" y="511.5" ></text>
</g>
<g >
<title>generic_permission (1 samples, 0.02%)</title><rect x="10.3" y="453" width="0.3" height="15.0" fill="rgb(220,89,3)" rx="2" ry="2" />
<text  x="13.29" y="463.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="1095.6" y="565" width="0.3" height="15.0" fill="rgb(208,145,2)" rx="2" ry="2" />
<text  x="1098.60" y="575.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (17 samples, 0.42%)</title><rect x="911.4" y="613" width="5.0" height="15.0" fill="rgb(205,127,52)" rx="2" ry="2" />
<text  x="914.43" y="623.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.17%)</title><rect x="849.8" y="517" width="2.0" height="15.0" fill="rgb(254,225,19)" rx="2" ry="2" />
<text  x="852.75" y="527.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1109.5" y="501" width="0.3" height="15.0" fill="rgb(235,170,12)" rx="2" ry="2" />
<text  x="1112.50" y="511.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.02%)</title><rect x="33.5" y="677" width="0.2" height="15.0" fill="rgb(220,75,51)" rx="2" ry="2" />
<text  x="36.46" y="687.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.02%)</title><rect x="1029.6" y="613" width="0.3" height="15.0" fill="rgb(230,144,31)" rx="2" ry="2" />
<text  x="1032.58" y="623.5" ></text>
</g>
<g >
<title>handle_pte_fault (87 samples, 2.13%)</title><rect x="1007.3" y="661" width="25.2" height="15.0" fill="rgb(251,212,20)" rx="2" ry="2" />
<text  x="1010.28" y="671.5" >h..</text>
</g>
<g >
<title>shrink_page_list (4 samples, 0.10%)</title><rect x="1108.9" y="629" width="1.2" height="15.0" fill="rgb(251,114,30)" rx="2" ry="2" />
<text  x="1111.92" y="639.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.05%)</title><rect x="1077.9" y="741" width="0.6" height="15.0" fill="rgb(208,74,28)" rx="2" ry="2" />
<text  x="1080.94" y="751.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="1078.2" y="229" width="0.3" height="15.0" fill="rgb(250,54,39)" rx="2" ry="2" />
<text  x="1081.23" y="239.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.07%)</title><rect x="727.6" y="581" width="0.8" height="15.0" fill="rgb(213,22,47)" rx="2" ry="2" />
<text  x="730.56" y="591.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (1 samples, 0.02%)</title><rect x="1039.7" y="725" width="0.3" height="15.0" fill="rgb(242,33,33)" rx="2" ry="2" />
<text  x="1042.71" y="735.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.05%)</title><rect x="164.9" y="245" width="0.6" height="15.0" fill="rgb(241,199,42)" rx="2" ry="2" />
<text  x="167.92" y="255.5" ></text>
</g>
<g >
<title>perf (91 samples, 2.23%)</title><rect x="10.6" y="773" width="26.3" height="15.0" fill="rgb(236,110,18)" rx="2" ry="2" />
<text  x="13.58" y="783.5" >p..</text>
</g>
<g >
<title>__memset_avx2_erms (3 samples, 0.07%)</title><rect x="152.2" y="613" width="0.8" height="15.0" fill="rgb(251,63,33)" rx="2" ry="2" />
<text  x="155.18" y="623.5" ></text>
</g>
<g >
<title>std::lazy::SyncLazy&lt;T,F&gt;::force (2 samples, 0.05%)</title><rect x="627.7" y="581" width="0.5" height="15.0" fill="rgb(215,55,35)" rx="2" ry="2" />
<text  x="630.65" y="591.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="750.7" y="373" width="0.3" height="15.0" fill="rgb(250,72,41)" rx="2" ry="2" />
<text  x="753.72" y="383.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1112.1" y="645" width="0.3" height="15.0" fill="rgb(206,35,22)" rx="2" ry="2" />
<text  x="1115.11" y="655.5" ></text>
</g>
<g >
<title>filp_close (1 samples, 0.02%)</title><rect x="33.5" y="581" width="0.2" height="15.0" fill="rgb(237,44,32)" rx="2" ry="2" />
<text  x="36.46" y="591.5" ></text>
</g>
<g >
<title>pick_next_task_rt (1 samples, 0.02%)</title><rect x="1111.8" y="693" width="0.3" height="15.0" fill="rgb(218,145,11)" rx="2" ry="2" />
<text  x="1114.82" y="703.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.15%)</title><rect x="736.2" y="501" width="1.8" height="15.0" fill="rgb(231,44,20)" rx="2" ry="2" />
<text  x="739.24" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (25 samples, 0.61%)</title><rect x="840.5" y="581" width="7.2" height="15.0" fill="rgb(231,214,16)" rx="2" ry="2" />
<text  x="843.49" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="92.8" y="661" width="0.3" height="15.0" fill="rgb(226,61,9)" rx="2" ry="2" />
<text  x="95.82" y="671.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.02%)</title><rect x="1077.9" y="693" width="0.3" height="15.0" fill="rgb(248,169,35)" rx="2" ry="2" />
<text  x="1080.94" y="703.5" ></text>
</g>
<g >
<title>get_acl (1 samples, 0.02%)</title><rect x="10.3" y="437" width="0.3" height="15.0" fill="rgb(223,97,44)" rx="2" ry="2" />
<text  x="13.29" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (7 samples, 0.17%)</title><rect x="1042.9" y="741" width="2.0" height="15.0" fill="rgb(205,142,29)" rx="2" ry="2" />
<text  x="1045.90" y="751.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (7 samples, 0.17%)</title><rect x="44.2" y="741" width="2.0" height="15.0" fill="rgb(231,152,31)" rx="2" ry="2" />
<text  x="47.17" y="751.5" ></text>
</g>
<g >
<title>cmd_record (89 samples, 2.18%)</title><rect x="10.6" y="741" width="25.8" height="15.0" fill="rgb(207,93,30)" rx="2" ry="2" />
<text  x="13.58" y="751.5" >c..</text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="813.6" y="501" width="0.8" height="15.0" fill="rgb(230,23,13)" rx="2" ry="2" />
<text  x="816.56" y="511.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.02%)</title><rect x="10.3" y="741" width="0.3" height="15.0" fill="rgb(231,156,6)" rx="2" ry="2" />
<text  x="13.29" y="751.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (1 samples, 0.02%)</title><rect x="588.0" y="677" width="0.3" height="15.0" fill="rgb(217,128,12)" rx="2" ry="2" />
<text  x="590.98" y="687.5" ></text>
</g>
<g >
<title>capable_wrt_inode_uidgid (1 samples, 0.02%)</title><rect x="164.6" y="357" width="0.3" height="15.0" fill="rgb(245,217,16)" rx="2" ry="2" />
<text  x="167.63" y="367.5" ></text>
</g>
<g >
<title>intel_idle (2 samples, 0.05%)</title><rect x="1154.7" y="581" width="0.6" height="15.0" fill="rgb(229,224,42)" rx="2" ry="2" />
<text  x="1157.67" y="591.5" ></text>
</g>
<g >
<title>__ioctl (78 samples, 1.91%)</title><rect x="10.6" y="661" width="22.6" height="15.0" fill="rgb(242,227,49)" rx="2" ry="2" />
<text  x="13.58" y="671.5" >_..</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1112.4" y="533" width="0.3" height="15.0" fill="rgb(217,54,29)" rx="2" ry="2" />
<text  x="1115.40" y="543.5" ></text>
</g>
<g >
<title>do_shared_fault (1 samples, 0.02%)</title><rect x="152.8" y="485" width="0.2" height="15.0" fill="rgb(205,13,2)" rx="2" ry="2" />
<text  x="155.76" y="495.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="1148.9" y="485" width="0.3" height="15.0" fill="rgb(223,100,30)" rx="2" ry="2" />
<text  x="1151.88" y="495.5" ></text>
</g>
<g >
<title>HandleStackContext (1 samples, 0.02%)</title><rect x="96.0" y="741" width="0.3" height="15.0" fill="rgb(239,70,15)" rx="2" ry="2" />
<text  x="99.00" y="751.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.17%)</title><rect x="810.7" y="453" width="2.0" height="15.0" fill="rgb(245,60,50)" rx="2" ry="2" />
<text  x="813.66" y="463.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="150.4" y="405" width="0.3" height="15.0" fill="rgb(244,5,37)" rx="2" ry="2" />
<text  x="153.44" y="415.5" ></text>
</g>
<g >
<title>__handle_mm_fault (89 samples, 2.18%)</title><rect x="1006.7" y="677" width="25.8" height="15.0" fill="rgb(210,64,6)" rx="2" ry="2" />
<text  x="1009.70" y="687.5" >_..</text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.02%)</title><rect x="1040.0" y="661" width="0.3" height="15.0" fill="rgb(239,25,53)" rx="2" ry="2" />
<text  x="1043.00" y="671.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="840.2" y="549" width="0.3" height="15.0" fill="rgb(232,160,19)" rx="2" ry="2" />
<text  x="843.20" y="559.5" ></text>
</g>
<g >
<title>free_unref_page_commit (4 samples, 0.10%)</title><rect x="1093.6" y="437" width="1.1" height="15.0" fill="rgb(213,37,42)" rx="2" ry="2" />
<text  x="1096.57" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="558.7" y="597" width="0.3" height="15.0" fill="rgb(213,49,51)" rx="2" ry="2" />
<text  x="561.74" y="607.5" ></text>
</g>
<g >
<title>super_cache_scan (2 samples, 0.05%)</title><rect x="1110.9" y="613" width="0.6" height="15.0" fill="rgb(212,61,42)" rx="2" ry="2" />
<text  x="1113.95" y="623.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="916.4" y="613" width="0.2" height="15.0" fill="rgb(237,157,34)" rx="2" ry="2" />
<text  x="919.36" y="623.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="815.6" y="469" width="0.3" height="15.0" fill="rgb(215,197,47)" rx="2" ry="2" />
<text  x="818.59" y="479.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.05%)</title><rect x="1076.8" y="693" width="0.6" height="15.0" fill="rgb(237,185,5)" rx="2" ry="2" />
<text  x="1079.78" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.05%)</title><rect x="1076.8" y="677" width="0.6" height="15.0" fill="rgb(233,199,23)" rx="2" ry="2" />
<text  x="1079.78" y="687.5" ></text>
</g>
<g >
<title>isolate_lru_pages (1 samples, 0.02%)</title><rect x="1108.6" y="629" width="0.3" height="15.0" fill="rgb(250,89,21)" rx="2" ry="2" />
<text  x="1111.63" y="639.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="1154.4" y="533" width="0.3" height="15.0" fill="rgb(245,174,13)" rx="2" ry="2" />
<text  x="1157.38" y="543.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 1.55%)</title><rect x="14.6" y="437" width="18.3" height="15.0" fill="rgb(250,53,49)" rx="2" ry="2" />
<text  x="17.63" y="447.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="1078.2" y="581" width="0.3" height="15.0" fill="rgb(221,145,45)" rx="2" ry="2" />
<text  x="1081.23" y="591.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (1 samples, 0.02%)</title><rect x="654.3" y="565" width="0.3" height="15.0" fill="rgb(239,188,0)" rx="2" ry="2" />
<text  x="657.29" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (33 samples, 0.81%)</title><rect x="830.4" y="533" width="9.5" height="15.0" fill="rgb(240,122,1)" rx="2" ry="2" />
<text  x="833.35" y="543.5" ></text>
</g>
<g >
<title>NaClSysMmapIntern (1 samples, 0.02%)</title><rect x="166.4" y="693" width="0.3" height="15.0" fill="rgb(207,50,54)" rx="2" ry="2" />
<text  x="169.37" y="703.5" ></text>
</g>
<g >
<title>vfs_iter_write (2 samples, 0.05%)</title><rect x="163.8" y="405" width="0.5" height="15.0" fill="rgb(235,17,43)" rx="2" ry="2" />
<text  x="166.76" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_close (1 samples, 0.02%)</title><rect x="33.5" y="613" width="0.2" height="15.0" fill="rgb(252,0,37)" rx="2" ry="2" />
<text  x="36.46" y="623.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (1 samples, 0.02%)</title><rect x="116.6" y="709" width="0.3" height="15.0" fill="rgb(240,104,26)" rx="2" ry="2" />
<text  x="119.56" y="719.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="1106.9" y="661" width="0.3" height="15.0" fill="rgb(246,23,52)" rx="2" ry="2" />
<text  x="1109.89" y="671.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1 samples, 0.02%)</title><rect x="96.3" y="741" width="0.3" height="15.0" fill="rgb(220,141,16)" rx="2" ry="2" />
<text  x="99.29" y="751.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (14 samples, 0.34%)</title><rect x="1091.0" y="501" width="4.0" height="15.0" fill="rgb(233,60,6)" rx="2" ry="2" />
<text  x="1093.97" y="511.5" ></text>
</g>
<g >
<title>ext4_releasepage (3 samples, 0.07%)</title><rect x="1109.2" y="597" width="0.9" height="15.0" fill="rgb(249,37,46)" rx="2" ry="2" />
<text  x="1112.21" y="607.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (46 samples, 1.13%)</title><rect x="857.0" y="629" width="13.3" height="15.0" fill="rgb(230,212,29)" rx="2" ry="2" />
<text  x="859.99" y="639.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="813.6" y="517" width="0.8" height="15.0" fill="rgb(253,1,47)" rx="2" ry="2" />
<text  x="816.56" y="527.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (2 samples, 0.05%)</title><rect x="42.1" y="741" width="0.6" height="15.0" fill="rgb(227,134,17)" rx="2" ry="2" />
<text  x="45.14" y="751.5" ></text>
</g>
<g >
<title>perf_event__prepare_comm (1 samples, 0.02%)</title><rect x="33.5" y="693" width="0.2" height="15.0" fill="rgb(205,64,47)" rx="2" ry="2" />
<text  x="36.46" y="703.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (7 samples, 0.17%)</title><rect x="590.3" y="661" width="2.0" height="15.0" fill="rgb(227,11,0)" rx="2" ry="2" />
<text  x="593.30" y="671.5" ></text>
</g>
<g >
<title>NaClLogLock (39 samples, 0.96%)</title><rect x="927.6" y="677" width="11.3" height="15.0" fill="rgb(253,142,44)" rx="2" ry="2" />
<text  x="930.65" y="687.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.02%)</title><rect x="165.2" y="149" width="0.3" height="15.0" fill="rgb(241,194,3)" rx="2" ry="2" />
<text  x="168.21" y="159.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (28 samples, 0.69%)</title><rect x="549.8" y="549" width="8.1" height="15.0" fill="rgb(245,141,11)" rx="2" ry="2" />
<text  x="552.76" y="559.5" ></text>
</g>
<g >
<title>get_acl.part.0 (1 samples, 0.02%)</title><rect x="10.3" y="421" width="0.3" height="15.0" fill="rgb(208,210,42)" rx="2" ry="2" />
<text  x="13.29" y="431.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.02%)</title><rect x="1095.6" y="437" width="0.3" height="15.0" fill="rgb(243,213,19)" rx="2" ry="2" />
<text  x="1098.60" y="447.5" ></text>
</g>
<g >
<title>NaClLogGetVerbosity (2 samples, 0.05%)</title><rect x="558.7" y="693" width="0.6" height="15.0" fill="rgb(241,140,48)" rx="2" ry="2" />
<text  x="561.74" y="703.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="1039.7" y="501" width="0.3" height="15.0" fill="rgb(244,223,15)" rx="2" ry="2" />
<text  x="1042.71" y="511.5" ></text>
</g>
<g >
<title>ovl_write_iter (2 samples, 0.05%)</title><rect x="163.8" y="421" width="0.5" height="15.0" fill="rgb(246,153,1)" rx="2" ry="2" />
<text  x="166.76" y="431.5" ></text>
</g>
<g >
<title>__gconv_load_conf (1 samples, 0.02%)</title><rect x="10.0" y="645" width="0.3" height="15.0" fill="rgb(239,99,51)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize::MapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="1078.2" y="485" width="0.3" height="15.0" fill="rgb(240,184,53)" rx="2" ry="2" />
<text  x="1081.23" y="495.5" ></text>
</g>
<g >
<title>rustposix::interface::file::openfile (1 samples, 0.02%)</title><rect x="164.3" y="597" width="0.3" height="15.0" fill="rgb(207,72,50)" rx="2" ry="2" />
<text  x="167.34" y="607.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (82 samples, 2.01%)</title><rect x="816.2" y="597" width="23.7" height="15.0" fill="rgb(244,214,29)" rx="2" ry="2" />
<text  x="819.16" y="607.5" >s..</text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="1094.7" y="453" width="0.3" height="15.0" fill="rgb(239,106,2)" rx="2" ry="2" />
<text  x="1097.73" y="463.5" ></text>
</g>
<g >
<title>NaClApplyPatchToMemory (1 samples, 0.02%)</title><rect x="1077.9" y="597" width="0.3" height="15.0" fill="rgb(243,132,39)" rx="2" ry="2" />
<text  x="1080.94" y="607.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (2 samples, 0.05%)</title><rect x="889.4" y="693" width="0.6" height="15.0" fill="rgb(218,197,30)" rx="2" ry="2" />
<text  x="892.43" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1107.2" y="661" width="0.3" height="15.0" fill="rgb(230,213,49)" rx="2" ry="2" />
<text  x="1110.18" y="671.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="163.2" y="581" width="0.3" height="15.0" fill="rgb(243,91,10)" rx="2" ry="2" />
<text  x="166.18" y="591.5" ></text>
</g>
<g >
<title>file_modified (1 samples, 0.02%)</title><rect x="34.0" y="405" width="0.3" height="15.0" fill="rgb(243,52,14)" rx="2" ry="2" />
<text  x="37.03" y="415.5" ></text>
</g>
<g >
<title>start_this_handle (1 samples, 0.02%)</title><rect x="163.8" y="261" width="0.3" height="15.0" fill="rgb(206,93,29)" rx="2" ry="2" />
<text  x="166.76" y="271.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1111.5" y="677" width="0.3" height="15.0" fill="rgb(226,162,24)" rx="2" ry="2" />
<text  x="1114.53" y="687.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="164.1" y="213" width="0.2" height="15.0" fill="rgb(220,42,53)" rx="2" ry="2" />
<text  x="167.05" y="223.5" ></text>
</g>
<g >
<title>NaClSysExit (7 samples, 0.17%)</title><rect x="163.8" y="709" width="2.0" height="15.0" fill="rgb(250,175,5)" rx="2" ry="2" />
<text  x="166.76" y="719.5" ></text>
</g>
<g >
<title>xas_store (1 samples, 0.02%)</title><rect x="1108.9" y="565" width="0.3" height="15.0" fill="rgb(222,228,5)" rx="2" ry="2" />
<text  x="1111.92" y="575.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="13.2" y="565" width="0.3" height="15.0" fill="rgb(211,56,18)" rx="2" ry="2" />
<text  x="16.19" y="575.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_try_init (2 samples, 0.05%)</title><rect x="627.7" y="549" width="0.5" height="15.0" fill="rgb(207,135,10)" rx="2" ry="2" />
<text  x="630.65" y="559.5" ></text>
</g>
<g >
<title>try_to_free_buffers (3 samples, 0.07%)</title><rect x="1109.2" y="565" width="0.9" height="15.0" fill="rgb(208,72,30)" rx="2" ry="2" />
<text  x="1112.21" y="575.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="1078.2" y="245" width="0.3" height="15.0" fill="rgb(223,19,31)" rx="2" ry="2" />
<text  x="1081.23" y="255.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.02%)</title><rect x="1184.2" y="549" width="0.3" height="15.0" fill="rgb(241,25,3)" rx="2" ry="2" />
<text  x="1187.21" y="559.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (1 samples, 0.02%)</title><rect x="36.1" y="405" width="0.3" height="15.0" fill="rgb(210,169,15)" rx="2" ry="2" />
<text  x="39.06" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="165.5" y="85" width="0.3" height="15.0" fill="rgb(207,145,41)" rx="2" ry="2" />
<text  x="168.50" y="95.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (26 samples, 0.64%)</title><rect x="616.1" y="565" width="7.5" height="15.0" fill="rgb(253,115,37)" rx="2" ry="2" />
<text  x="619.07" y="575.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="839.9" y="581" width="0.6" height="15.0" fill="rgb(246,35,24)" rx="2" ry="2" />
<text  x="842.91" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (2 samples, 0.05%)</title><rect x="163.8" y="597" width="0.5" height="15.0" fill="rgb(237,179,25)" rx="2" ry="2" />
<text  x="166.76" y="607.5" ></text>
</g>
<g >
<title>fault_in_kernel_space (1 samples, 0.02%)</title><rect x="1034.8" y="725" width="0.3" height="15.0" fill="rgb(205,188,52)" rx="2" ry="2" />
<text  x="1037.79" y="735.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (5 samples, 0.12%)</title><rect x="670.5" y="565" width="1.5" height="15.0" fill="rgb(238,227,47)" rx="2" ry="2" />
<text  x="673.51" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (32 samples, 0.79%)</title><rect x="645.0" y="549" width="9.3" height="15.0" fill="rgb(205,72,36)" rx="2" ry="2" />
<text  x="648.03" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (79 samples, 1.94%)</title><rect x="343.6" y="533" width="22.9" height="15.0" fill="rgb(231,167,14)" rx="2" ry="2" />
<text  x="346.59" y="543.5" >c..</text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.05%)</title><rect x="36.4" y="629" width="0.5" height="15.0" fill="rgb(246,129,53)" rx="2" ry="2" />
<text  x="39.35" y="639.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="164.9" y="133" width="0.3" height="15.0" fill="rgb(227,151,41)" rx="2" ry="2" />
<text  x="167.92" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="750.7" y="341" width="0.3" height="15.0" fill="rgb(209,124,21)" rx="2" ry="2" />
<text  x="753.72" y="351.5" ></text>
</g>
<g >
<title>NaClValidateImage (2 samples, 0.05%)</title><rect x="1041.2" y="677" width="0.5" height="15.0" fill="rgb(210,142,1)" rx="2" ry="2" />
<text  x="1044.16" y="687.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (640 samples, 15.71%)</title><rect x="372.5" y="565" width="185.4" height="15.0" fill="rgb(220,64,3)" rx="2" ry="2" />
<text  x="375.54" y="575.5" >ringbuf::consumer::Consu..</text>
</g>
<g >
<title>_dl_map_object (1 samples, 0.02%)</title><rect x="10.3" y="645" width="0.3" height="15.0" fill="rgb(215,217,33)" rx="2" ry="2" />
<text  x="13.29" y="655.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (2 samples, 0.05%)</title><rect x="163.8" y="581" width="0.5" height="15.0" fill="rgb(233,207,41)" rx="2" ry="2" />
<text  x="166.76" y="591.5" ></text>
</g>
<g >
<title>swapper (323 samples, 7.93%)</title><rect x="1096.5" y="773" width="93.5" height="15.0" fill="rgb(228,8,3)" rx="2" ry="2" />
<text  x="1099.47" y="783.5" >swapper</text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="559.0" y="581" width="0.3" height="15.0" fill="rgb(207,175,39)" rx="2" ry="2" />
<text  x="562.03" y="591.5" ></text>
</g>
<g >
<title>NaClLogGetVerbosity (1 samples, 0.02%)</title><rect x="574.7" y="709" width="0.3" height="15.0" fill="rgb(228,85,48)" rx="2" ry="2" />
<text  x="577.66" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.12%)</title><rect x="68.8" y="741" width="1.4" height="15.0" fill="rgb(239,121,40)" rx="2" ry="2" />
<text  x="71.78" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="166.1" y="645" width="0.3" height="15.0" fill="rgb(250,120,20)" rx="2" ry="2" />
<text  x="169.08" y="655.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="165.2" y="37" width="0.3" height="15.0" fill="rgb(225,150,54)" rx="2" ry="2" />
<text  x="168.21" y="47.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampolineCall (1 samples, 0.02%)</title><rect x="1077.9" y="613" width="0.3" height="15.0" fill="rgb(249,115,34)" rx="2" ry="2" />
<text  x="1080.94" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="10.3" y="581" width="0.3" height="15.0" fill="rgb(236,189,54)" rx="2" ry="2" />
<text  x="13.29" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (11 samples, 0.27%)</title><rect x="645.0" y="517" width="3.2" height="15.0" fill="rgb(228,121,14)" rx="2" ry="2" />
<text  x="648.03" y="527.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="840.2" y="533" width="0.3" height="15.0" fill="rgb(210,141,30)" rx="2" ry="2" />
<text  x="843.20" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="672.0" y="469" width="0.2" height="15.0" fill="rgb(233,68,42)" rx="2" ry="2" />
<text  x="674.96" y="479.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="1112.7" y="581" width="0.3" height="15.0" fill="rgb(215,95,8)" rx="2" ry="2" />
<text  x="1115.68" y="591.5" ></text>
</g>
<g >
<title>__gconv_find_transform (1 samples, 0.02%)</title><rect x="10.0" y="661" width="0.3" height="15.0" fill="rgb(243,219,37)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>CachedMapWritableText (3 samples, 0.07%)</title><rect x="152.2" y="661" width="0.8" height="15.0" fill="rgb(253,42,19)" rx="2" ry="2" />
<text  x="155.18" y="671.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="1035.1" y="741" width="0.3" height="15.0" fill="rgb(211,190,32)" rx="2" ry="2" />
<text  x="1038.08" y="751.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.02%)</title><rect x="1188.8" y="629" width="0.3" height="15.0" fill="rgb(239,141,2)" rx="2" ry="2" />
<text  x="1191.84" y="639.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (44 samples, 1.08%)</title><rect x="1141.9" y="581" width="12.8" height="15.0" fill="rgb(254,7,30)" rx="2" ry="2" />
<text  x="1144.93" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (22 samples, 0.54%)</title><rect x="638.7" y="533" width="6.3" height="15.0" fill="rgb(251,205,39)" rx="2" ry="2" />
<text  x="641.66" y="543.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (2 samples, 0.05%)</title><rect x="164.9" y="165" width="0.6" height="15.0" fill="rgb(239,191,38)" rx="2" ry="2" />
<text  x="167.92" y="175.5" ></text>
</g>
<g >
<title>sel_ldr (3,659 samples, 89.79%)</title><rect x="36.9" y="773" width="1059.6" height="15.0" fill="rgb(213,188,49)" rx="2" ry="2" />
<text  x="39.93" y="783.5" >sel_ldr</text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="34.6" y="389" width="0.3" height="15.0" fill="rgb(237,65,45)" rx="2" ry="2" />
<text  x="37.61" y="399.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1 samples, 0.02%)</title><rect x="1078.2" y="357" width="0.3" height="15.0" fill="rgb(241,172,16)" rx="2" ry="2" />
<text  x="1081.23" y="367.5" ></text>
</g>
<g >
<title>serde_json::de::from_trait (1 samples, 0.02%)</title><rect x="1078.2" y="629" width="0.3" height="15.0" fill="rgb(253,199,54)" rx="2" ry="2" />
<text  x="1081.23" y="639.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (3 samples, 0.07%)</title><rect x="164.9" y="405" width="0.9" height="15.0" fill="rgb(237,214,21)" rx="2" ry="2" />
<text  x="167.92" y="415.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="1095.6" y="517" width="0.3" height="15.0" fill="rgb(219,50,43)" rx="2" ry="2" />
<text  x="1098.60" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.02%)</title><rect x="150.4" y="549" width="0.3" height="15.0" fill="rgb(241,29,12)" rx="2" ry="2" />
<text  x="153.44" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (45 samples, 1.10%)</title><rect x="817.3" y="549" width="13.1" height="15.0" fill="rgb(211,187,53)" rx="2" ry="2" />
<text  x="820.32" y="559.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (12 samples, 0.29%)</title><rect x="1150.6" y="501" width="3.5" height="15.0" fill="rgb(230,35,46)" rx="2" ry="2" />
<text  x="1153.62" y="511.5" ></text>
</g>
<g >
<title>__switch_to_asm (1 samples, 0.02%)</title><rect x="1106.0" y="757" width="0.3" height="15.0" fill="rgb(227,1,0)" rx="2" ry="2" />
<text  x="1109.02" y="767.5" ></text>
</g>
<g >
<title>do_idle (92 samples, 2.26%)</title><rect x="1112.4" y="709" width="26.6" height="15.0" fill="rgb(238,61,30)" rx="2" ry="2" />
<text  x="1115.40" y="719.5" >d..</text>
</g>
<g >
<title>hashbrown::map::make_hash (31 samples, 0.76%)</title><rect x="803.7" y="549" width="9.0" height="15.0" fill="rgb(226,122,17)" rx="2" ry="2" />
<text  x="806.71" y="559.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.02%)</title><rect x="1181.0" y="581" width="0.3" height="15.0" fill="rgb(234,138,32)" rx="2" ry="2" />
<text  x="1184.02" y="591.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.02%)</title><rect x="1185.1" y="533" width="0.3" height="15.0" fill="rgb(253,50,34)" rx="2" ry="2" />
<text  x="1188.08" y="543.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (35 samples, 0.86%)</title><rect x="539.6" y="533" width="10.2" height="15.0" fill="rgb(241,127,5)" rx="2" ry="2" />
<text  x="542.62" y="543.5" ></text>
</g>
<g >
<title>start_kernel (176 samples, 4.32%)</title><rect x="1139.0" y="709" width="51.0" height="15.0" fill="rgb(216,156,40)" rx="2" ry="2" />
<text  x="1142.04" y="719.5" >start..</text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="900.1" y="661" width="0.3" height="15.0" fill="rgb(227,19,24)" rx="2" ry="2" />
<text  x="903.14" y="671.5" ></text>
</g>
<g >
<title>shrink_dentry_list (2 samples, 0.05%)</title><rect x="1110.9" y="581" width="0.6" height="15.0" fill="rgb(230,5,39)" rx="2" ry="2" />
<text  x="1113.95" y="591.5" ></text>
</g>
<g >
<title>get_page_from_freelist (42 samples, 1.03%)</title><rect x="1011.6" y="597" width="12.2" height="15.0" fill="rgb(244,54,37)" rx="2" ry="2" />
<text  x="1014.62" y="607.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.02%)</title><rect x="150.4" y="325" width="0.3" height="15.0" fill="rgb(249,5,30)" rx="2" ry="2" />
<text  x="153.44" y="335.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.17%)</title><rect x="810.7" y="485" width="2.0" height="15.0" fill="rgb(223,204,14)" rx="2" ry="2" />
<text  x="813.66" y="495.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="165.2" y="133" width="0.3" height="15.0" fill="rgb(230,59,20)" rx="2" ry="2" />
<text  x="168.21" y="143.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (25 samples, 0.61%)</title><rect x="840.5" y="565" width="7.2" height="15.0" fill="rgb(250,41,52)" rx="2" ry="2" />
<text  x="843.49" y="575.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (46 samples, 1.13%)</title><rect x="610.3" y="629" width="13.3" height="15.0" fill="rgb(246,62,53)" rx="2" ry="2" />
<text  x="613.28" y="639.5" ></text>
</g>
<g >
<title>CopyBundleHeads (1 samples, 0.02%)</title><rect x="150.7" y="661" width="0.3" height="15.0" fill="rgb(246,30,1)" rx="2" ry="2" />
<text  x="153.73" y="671.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.02%)</title><rect x="1179.6" y="597" width="0.3" height="15.0" fill="rgb(231,169,22)" rx="2" ry="2" />
<text  x="1182.58" y="607.5" ></text>
</g>
<g >
<title>ext4_es_scan (1 samples, 0.02%)</title><rect x="1110.4" y="629" width="0.3" height="15.0" fill="rgb(214,51,20)" rx="2" ry="2" />
<text  x="1113.37" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (2 samples, 0.05%)</title><rect x="1106.3" y="725" width="0.6" height="15.0" fill="rgb(236,72,50)" rx="2" ry="2" />
<text  x="1109.31" y="735.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (43 samples, 1.06%)</title><rect x="561.6" y="709" width="12.5" height="15.0" fill="rgb(252,69,18)" rx="2" ry="2" />
<text  x="564.63" y="719.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.05%)</title><rect x="1041.2" y="741" width="0.5" height="15.0" fill="rgb(208,13,37)" rx="2" ry="2" />
<text  x="1044.16" y="751.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (45 samples, 1.10%)</title><rect x="857.3" y="597" width="13.0" height="15.0" fill="rgb(251,221,26)" rx="2" ry="2" />
<text  x="860.28" y="607.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (1 samples, 0.02%)</title><rect x="164.1" y="229" width="0.2" height="15.0" fill="rgb(206,111,0)" rx="2" ry="2" />
<text  x="167.05" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (1 samples, 0.02%)</title><rect x="164.6" y="501" width="0.3" height="15.0" fill="rgb(226,219,37)" rx="2" ry="2" />
<text  x="167.63" y="511.5" ></text>
</g>
<g >
<title>copy_page_from_iter_iovec (1 samples, 0.02%)</title><rect x="1088.9" y="645" width="0.3" height="15.0" fill="rgb(223,27,0)" rx="2" ry="2" />
<text  x="1091.94" y="655.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.02%)</title><rect x="1189.4" y="629" width="0.3" height="15.0" fill="rgb(249,143,29)" rx="2" ry="2" />
<text  x="1192.42" y="639.5" ></text>
</g>
<g >
<title>profile_tick (1 samples, 0.02%)</title><rect x="1143.7" y="453" width="0.3" height="15.0" fill="rgb(210,189,15)" rx="2" ry="2" />
<text  x="1146.67" y="463.5" ></text>
</g>
<g >
<title>copy_process (1 samples, 0.02%)</title><rect x="1077.4" y="661" width="0.2" height="15.0" fill="rgb(218,136,41)" rx="2" ry="2" />
<text  x="1080.36" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (6 samples, 0.15%)</title><rect x="402.9" y="501" width="1.8" height="15.0" fill="rgb(210,126,37)" rx="2" ry="2" />
<text  x="405.95" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="559.0" y="597" width="0.3" height="15.0" fill="rgb(244,31,7)" rx="2" ry="2" />
<text  x="562.03" y="607.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (3 samples, 0.07%)</title><rect x="1109.2" y="581" width="0.9" height="15.0" fill="rgb(247,50,17)" rx="2" ry="2" />
<text  x="1112.21" y="591.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (32 samples, 0.79%)</title><rect x="645.0" y="565" width="9.3" height="15.0" fill="rgb(218,224,52)" rx="2" ry="2" />
<text  x="648.03" y="575.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::_open (1 samples, 0.02%)</title><rect x="164.3" y="549" width="0.3" height="15.0" fill="rgb(229,79,34)" rx="2" ry="2" />
<text  x="167.34" y="559.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.02%)</title><rect x="1039.7" y="581" width="0.3" height="15.0" fill="rgb(238,209,11)" rx="2" ry="2" />
<text  x="1042.71" y="591.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (3 samples, 0.07%)</title><rect x="164.9" y="453" width="0.9" height="15.0" fill="rgb(210,105,15)" rx="2" ry="2" />
<text  x="167.92" y="463.5" ></text>
</g>
<g >
<title>NaClDescRef (57 samples, 1.40%)</title><rect x="907.4" y="661" width="16.5" height="15.0" fill="rgb(254,201,12)" rx="2" ry="2" />
<text  x="910.38" y="671.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.02%)</title><rect x="1107.5" y="661" width="0.3" height="15.0" fill="rgb(248,146,38)" rx="2" ry="2" />
<text  x="1110.47" y="671.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.02%)</title><rect x="1147.7" y="469" width="0.3" height="15.0" fill="rgb(229,139,3)" rx="2" ry="2" />
<text  x="1150.72" y="479.5" ></text>
</g>
<g >
<title>tick_sched_timer (14 samples, 0.34%)</title><rect x="1143.7" y="469" width="4.0" height="15.0" fill="rgb(207,17,51)" rx="2" ry="2" />
<text  x="1146.67" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="67.9" y="725" width="0.3" height="15.0" fill="rgb(254,8,10)" rx="2" ry="2" />
<text  x="70.91" y="735.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.05%)</title><rect x="36.4" y="501" width="0.5" height="15.0" fill="rgb(245,97,20)" rx="2" ry="2" />
<text  x="39.35" y="511.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="409.6" y="453" width="0.3" height="15.0" fill="rgb(232,118,10)" rx="2" ry="2" />
<text  x="412.61" y="463.5" ></text>
</g>
<g >
<title>NaClLogUnlock (1 samples, 0.02%)</title><rect x="559.0" y="677" width="0.3" height="15.0" fill="rgb(211,226,21)" rx="2" ry="2" />
<text  x="562.03" y="687.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (4 samples, 0.10%)</title><rect x="1152.4" y="405" width="1.1" height="15.0" fill="rgb(242,174,0)" rx="2" ry="2" />
<text  x="1155.36" y="415.5" ></text>
</g>
<g >
<title>do_exit (23 samples, 0.56%)</title><rect x="1089.2" y="629" width="6.7" height="15.0" fill="rgb(225,168,21)" rx="2" ry="2" />
<text  x="1092.23" y="639.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="163.2" y="661" width="0.3" height="15.0" fill="rgb(207,106,26)" rx="2" ry="2" />
<text  x="166.18" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="150.4" y="453" width="0.3" height="15.0" fill="rgb(227,101,18)" rx="2" ry="2" />
<text  x="153.44" y="463.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.07%)</title><rect x="164.9" y="277" width="0.9" height="15.0" fill="rgb(232,149,10)" rx="2" ry="2" />
<text  x="167.92" y="287.5" ></text>
</g>
<g >
<title>event_function (2 samples, 0.05%)</title><rect x="36.4" y="581" width="0.5" height="15.0" fill="rgb(207,34,1)" rx="2" ry="2" />
<text  x="39.35" y="591.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.10%)</title><rect x="1137.9" y="677" width="1.1" height="15.0" fill="rgb(246,75,41)" rx="2" ry="2" />
<text  x="1140.88" y="687.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="163.8" y="293" width="0.3" height="15.0" fill="rgb(254,178,45)" rx="2" ry="2" />
<text  x="166.76" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (4 samples, 0.10%)</title><rect x="1185.1" y="597" width="1.1" height="15.0" fill="rgb(251,95,4)" rx="2" ry="2" />
<text  x="1188.08" y="607.5" ></text>
</g>
<g >
<title>BitmapSetBit (4 samples, 0.10%)</title><rect x="161.4" y="613" width="1.2" height="15.0" fill="rgb(211,111,45)" rx="2" ry="2" />
<text  x="164.45" y="623.5" ></text>
</g>
<g >
<title>perf_poll (1 samples, 0.02%)</title><rect x="33.2" y="597" width="0.3" height="15.0" fill="rgb(230,152,51)" rx="2" ry="2" />
<text  x="36.17" y="607.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (1 samples, 0.02%)</title><rect x="41.0" y="741" width="0.3" height="15.0" fill="rgb(239,120,20)" rx="2" ry="2" />
<text  x="43.98" y="751.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (1 samples, 0.02%)</title><rect x="672.0" y="549" width="0.2" height="15.0" fill="rgb(243,17,41)" rx="2" ry="2" />
<text  x="674.96" y="559.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (151 samples, 3.71%)</title><rect x="753.3" y="565" width="43.8" height="15.0" fill="rgb(206,229,22)" rx="2" ry="2" />
<text  x="756.33" y="575.5" >ring..</text>
</g>
<g >
<title>kernel_clone (1 samples, 0.02%)</title><rect x="1077.4" y="677" width="0.2" height="15.0" fill="rgb(242,6,7)" rx="2" ry="2" />
<text  x="1080.36" y="687.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="1106.6" y="661" width="0.3" height="15.0" fill="rgb(250,177,25)" rx="2" ry="2" />
<text  x="1109.60" y="671.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="35.5" y="277" width="0.3" height="15.0" fill="rgb(252,38,30)" rx="2" ry="2" />
<text  x="38.48" y="287.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="1078.2" y="533" width="0.3" height="15.0" fill="rgb(251,138,33)" rx="2" ry="2" />
<text  x="1081.23" y="543.5" ></text>
</g>
<g >
<title>psi_task_switch (2 samples, 0.05%)</title><rect x="1138.5" y="661" width="0.5" height="15.0" fill="rgb(207,97,16)" rx="2" ry="2" />
<text  x="1141.46" y="671.5" ></text>
</g>
<g >
<title>arch_call_rest_init (176 samples, 4.32%)</title><rect x="1139.0" y="693" width="51.0" height="15.0" fill="rgb(246,15,34)" rx="2" ry="2" />
<text  x="1142.04" y="703.5" >arch_..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="750.7" y="421" width="0.3" height="15.0" fill="rgb(251,18,7)" rx="2" ry="2" />
<text  x="753.72" y="431.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="35.2" y="309" width="0.3" height="15.0" fill="rgb(224,198,14)" rx="2" ry="2" />
<text  x="38.19" y="319.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="672.0" y="517" width="0.2" height="15.0" fill="rgb(252,109,20)" rx="2" ry="2" />
<text  x="674.96" y="527.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="10.6" y="597" width="0.6" height="15.0" fill="rgb(217,99,35)" rx="2" ry="2" />
<text  x="13.58" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (44 samples, 1.08%)</title><rect x="654.3" y="597" width="12.7" height="15.0" fill="rgb(225,191,16)" rx="2" ry="2" />
<text  x="657.29" y="607.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (23 samples, 0.56%)</title><rect x="1089.2" y="693" width="6.7" height="15.0" fill="rgb(214,167,2)" rx="2" ry="2" />
<text  x="1092.23" y="703.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="1138.7" y="645" width="0.3" height="15.0" fill="rgb(213,202,22)" rx="2" ry="2" />
<text  x="1141.75" y="655.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.17%)</title><rect x="852.4" y="533" width="2.0" height="15.0" fill="rgb(249,51,46)" rx="2" ry="2" />
<text  x="855.36" y="543.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (1 samples, 0.02%)</title><rect x="1183.3" y="565" width="0.3" height="15.0" fill="rgb(220,117,20)" rx="2" ry="2" />
<text  x="1186.34" y="575.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1031.0" y="613" width="0.3" height="15.0" fill="rgb(213,74,47)" rx="2" ry="2" />
<text  x="1034.03" y="623.5" ></text>
</g>
<g >
<title>dispatcher (934 samples, 22.92%)</title><rect x="599.9" y="645" width="270.4" height="15.0" fill="rgb(241,173,7)" rx="2" ry="2" />
<text  x="602.86" y="655.5" >dispatcher</text>
</g>
<g >
<title>__x64_sys_exit (1 samples, 0.02%)</title><rect x="1088.7" y="725" width="0.2" height="15.0" fill="rgb(222,67,52)" rx="2" ry="2" />
<text  x="1091.65" y="735.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (191 samples, 4.69%)</title><rect x="672.2" y="549" width="55.4" height="15.0" fill="rgb(216,86,10)" rx="2" ry="2" />
<text  x="675.25" y="559.5" >std::..</text>
</g>
<g >
<title>error_entry (2 samples, 0.05%)</title><rect x="1179.0" y="597" width="0.6" height="15.0" fill="rgb(217,69,39)" rx="2" ry="2" />
<text  x="1182.00" y="607.5" ></text>
</g>
<g >
<title>tick_irq_enter (1 samples, 0.02%)</title><rect x="1112.7" y="597" width="0.3" height="15.0" fill="rgb(252,81,35)" rx="2" ry="2" />
<text  x="1115.68" y="607.5" ></text>
</g>
<g >
<title>list_lru_walk_one_irq (1 samples, 0.02%)</title><rect x="1110.7" y="597" width="0.2" height="15.0" fill="rgb(232,74,44)" rx="2" ry="2" />
<text  x="1113.66" y="607.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="1095.6" y="613" width="0.3" height="15.0" fill="rgb(253,42,47)" rx="2" ry="2" />
<text  x="1098.60" y="623.5" ></text>
</g>
<g >
<title>rmqueue (9 samples, 0.22%)</title><rect x="1021.2" y="581" width="2.6" height="15.0" fill="rgb(222,181,8)" rx="2" ry="2" />
<text  x="1024.18" y="591.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (1 samples, 0.02%)</title><rect x="1188.0" y="597" width="0.3" height="15.0" fill="rgb(217,189,37)" rx="2" ry="2" />
<text  x="1190.97" y="607.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.02%)</title><rect x="1090.7" y="501" width="0.3" height="15.0" fill="rgb(234,117,46)" rx="2" ry="2" />
<text  x="1093.68" y="511.5" ></text>
</g>
<g >
<title>lind_write (960 samples, 23.56%)</title><rect x="592.3" y="661" width="278.0" height="15.0" fill="rgb(213,226,30)" rx="2" ry="2" />
<text  x="595.33" y="671.5" >lind_write</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="165.5" y="117" width="0.3" height="15.0" fill="rgb(249,187,7)" rx="2" ry="2" />
<text  x="168.50" y="127.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.07%)</title><rect x="727.6" y="565" width="0.8" height="15.0" fill="rgb(233,173,30)" rx="2" ry="2" />
<text  x="730.56" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="150.4" y="597" width="0.3" height="15.0" fill="rgb(248,202,21)" rx="2" ry="2" />
<text  x="153.44" y="607.5" ></text>
</g>
<g >
<title>sched_autogroup_exit_task (1 samples, 0.02%)</title><rect x="1095.3" y="613" width="0.3" height="15.0" fill="rgb(207,122,33)" rx="2" ry="2" />
<text  x="1098.31" y="623.5" ></text>
</g>
<g >
<title>unmap_page_range (21 samples, 0.52%)</title><rect x="1089.2" y="533" width="6.1" height="15.0" fill="rgb(249,34,35)" rx="2" ry="2" />
<text  x="1092.23" y="543.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="559.0" y="629" width="0.3" height="15.0" fill="rgb(239,5,6)" rx="2" ry="2" />
<text  x="562.03" y="639.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (3 samples, 0.07%)</title><rect x="1144.2" y="421" width="0.9" height="15.0" fill="rgb(221,132,50)" rx="2" ry="2" />
<text  x="1147.25" y="431.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.02%)</title><rect x="1039.7" y="405" width="0.3" height="15.0" fill="rgb(236,91,45)" rx="2" ry="2" />
<text  x="1042.71" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (24 samples, 0.59%)</title><rect x="840.8" y="549" width="6.9" height="15.0" fill="rgb(228,56,2)" rx="2" ry="2" />
<text  x="843.78" y="559.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1106.9" y="629" width="0.3" height="15.0" fill="rgb(205,121,19)" rx="2" ry="2" />
<text  x="1109.89" y="639.5" ></text>
</g>
<g >
<title>ns_capable_common (1 samples, 0.02%)</title><rect x="164.6" y="341" width="0.3" height="15.0" fill="rgb(213,72,1)" rx="2" ry="2" />
<text  x="167.63" y="351.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (44 samples, 1.08%)</title><rect x="150.7" y="709" width="12.8" height="15.0" fill="rgb(222,114,16)" rx="2" ry="2" />
<text  x="153.73" y="719.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (1 samples, 0.02%)</title><rect x="10.0" y="581" width="0.3" height="15.0" fill="rgb(210,146,21)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="1112.1" y="613" width="0.3" height="15.0" fill="rgb(250,107,51)" rx="2" ry="2" />
<text  x="1115.11" y="623.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="166.1" y="549" width="0.3" height="15.0" fill="rgb(228,41,27)" rx="2" ry="2" />
<text  x="169.08" y="559.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (1 samples, 0.02%)</title><rect x="571.8" y="645" width="0.3" height="15.0" fill="rgb(208,158,17)" rx="2" ry="2" />
<text  x="574.77" y="655.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.49%)</title><rect x="797.1" y="581" width="5.7" height="15.0" fill="rgb(233,97,20)" rx="2" ry="2" />
<text  x="800.05" y="591.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (1 samples, 0.02%)</title><rect x="149.9" y="725" width="0.3" height="15.0" fill="rgb(205,29,24)" rx="2" ry="2" />
<text  x="152.86" y="735.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.02%)</title><rect x="166.1" y="565" width="0.3" height="15.0" fill="rgb(227,126,5)" rx="2" ry="2" />
<text  x="169.08" y="575.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (2 samples, 0.05%)</title><rect x="1149.5" y="533" width="0.5" height="15.0" fill="rgb(214,194,9)" rx="2" ry="2" />
<text  x="1152.46" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="163.8" y="517" width="0.5" height="15.0" fill="rgb(231,69,29)" rx="2" ry="2" />
<text  x="166.76" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="559.0" y="613" width="0.3" height="15.0" fill="rgb(208,170,22)" rx="2" ry="2" />
<text  x="562.03" y="623.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.10%)</title><rect x="848.3" y="501" width="1.2" height="15.0" fill="rgb(210,184,25)" rx="2" ry="2" />
<text  x="851.31" y="511.5" ></text>
</g>
<g >
<title>NaClGetDescMu (61 samples, 1.50%)</title><rect x="906.2" y="677" width="17.7" height="15.0" fill="rgb(213,56,16)" rx="2" ry="2" />
<text  x="909.22" y="687.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="150.4" y="613" width="0.3" height="15.0" fill="rgb(218,212,26)" rx="2" ry="2" />
<text  x="153.44" y="623.5" ></text>
</g>
<g >
<title>tick_irq_enter (2 samples, 0.05%)</title><rect x="1150.0" y="533" width="0.6" height="15.0" fill="rgb(211,189,0)" rx="2" ry="2" />
<text  x="1153.04" y="543.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (81 samples, 1.99%)</title><rect x="816.5" y="581" width="23.4" height="15.0" fill="rgb(228,141,20)" rx="2" ry="2" />
<text  x="819.45" y="591.5" >s..</text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (1 samples, 0.02%)</title><rect x="164.1" y="261" width="0.2" height="15.0" fill="rgb(231,166,48)" rx="2" ry="2" />
<text  x="167.05" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1039.7" y="677" width="0.3" height="15.0" fill="rgb(244,6,26)" rx="2" ry="2" />
<text  x="1042.71" y="687.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="815.3" y="485" width="0.6" height="15.0" fill="rgb(232,56,13)" rx="2" ry="2" />
<text  x="818.30" y="495.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 1.13%)</title><rect x="610.3" y="613" width="13.3" height="15.0" fill="rgb(224,99,22)" rx="2" ry="2" />
<text  x="613.28" y="623.5" ></text>
</g>
<g >
<title>ext4_rename2 (1 samples, 0.02%)</title><rect x="164.3" y="245" width="0.3" height="15.0" fill="rgb(236,117,4)" rx="2" ry="2" />
<text  x="167.34" y="255.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::restore_metadata (1 samples, 0.02%)</title><rect x="1078.2" y="661" width="0.3" height="15.0" fill="rgb(206,71,29)" rx="2" ry="2" />
<text  x="1081.23" y="671.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (1 samples, 0.02%)</title><rect x="164.1" y="277" width="0.2" height="15.0" fill="rgb(225,131,51)" rx="2" ry="2" />
<text  x="167.05" y="287.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="1039.7" y="389" width="0.3" height="15.0" fill="rgb(205,3,1)" rx="2" ry="2" />
<text  x="1042.71" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="67.6" y="661" width="0.3" height="15.0" fill="rgb(240,158,4)" rx="2" ry="2" />
<text  x="70.62" y="671.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (2 samples, 0.05%)</title><rect x="163.8" y="309" width="0.5" height="15.0" fill="rgb(230,38,45)" rx="2" ry="2" />
<text  x="166.76" y="319.5" ></text>
</g>
<g >
<title>leave_mm (1 samples, 0.02%)</title><rect x="1113.0" y="645" width="0.3" height="15.0" fill="rgb(219,46,27)" rx="2" ry="2" />
<text  x="1115.97" y="655.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.02%)</title><rect x="165.5" y="213" width="0.3" height="15.0" fill="rgb(253,84,28)" rx="2" ry="2" />
<text  x="168.50" y="223.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.02%)</title><rect x="1110.1" y="629" width="0.3" height="15.0" fill="rgb(223,84,4)" rx="2" ry="2" />
<text  x="1113.08" y="639.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1106.6" y="629" width="0.3" height="15.0" fill="rgb(215,20,26)" rx="2" ry="2" />
<text  x="1109.60" y="639.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (2 samples, 0.05%)</title><rect x="1032.5" y="693" width="0.6" height="15.0" fill="rgb(207,161,12)" rx="2" ry="2" />
<text  x="1035.47" y="703.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="1095.6" y="501" width="0.3" height="15.0" fill="rgb(230,135,5)" rx="2" ry="2" />
<text  x="1098.60" y="511.5" ></text>
</g>
<g >
<title>nohz_balance_enter_idle (1 samples, 0.02%)</title><rect x="1184.8" y="597" width="0.3" height="15.0" fill="rgb(250,201,9)" rx="2" ry="2" />
<text  x="1187.79" y="607.5" ></text>
</g>
<g >
<title>sched_move_task (1 samples, 0.02%)</title><rect x="1088.7" y="677" width="0.2" height="15.0" fill="rgb(253,196,39)" rx="2" ry="2" />
<text  x="1091.65" y="687.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="1106.9" y="677" width="0.3" height="15.0" fill="rgb(218,87,43)" rx="2" ry="2" />
<text  x="1109.89" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.20%)</title><rect x="34.0" y="597" width="2.4" height="15.0" fill="rgb(226,160,40)" rx="2" ry="2" />
<text  x="37.03" y="607.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (151 samples, 3.71%)</title><rect x="753.3" y="581" width="43.8" height="15.0" fill="rgb(232,155,45)" rx="2" ry="2" />
<text  x="756.33" y="591.5" >ring..</text>
</g>
<g >
<title>ovl_create_over_whiteout (1 samples, 0.02%)</title><rect x="164.3" y="277" width="0.3" height="15.0" fill="rgb(245,46,3)" rx="2" ry="2" />
<text  x="167.34" y="287.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.02%)</title><rect x="166.1" y="597" width="0.3" height="15.0" fill="rgb(206,28,48)" rx="2" ry="2" />
<text  x="169.08" y="607.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.05%)</title><rect x="164.9" y="229" width="0.6" height="15.0" fill="rgb(229,24,4)" rx="2" ry="2" />
<text  x="167.92" y="239.5" ></text>
</g>
<g >
<title>check_cpu_stall (2 samples, 0.05%)</title><rect x="1144.5" y="389" width="0.6" height="15.0" fill="rgb(205,192,39)" rx="2" ry="2" />
<text  x="1147.54" y="399.5" ></text>
</g>
<g >
<title>kernfs_put (2 samples, 0.05%)</title><rect x="1110.9" y="469" width="0.6" height="15.0" fill="rgb(247,134,14)" rx="2" ry="2" />
<text  x="1113.95" y="479.5" ></text>
</g>
<g >
<title>[sel_ldr] (88 samples, 2.16%)</title><rect x="979.2" y="741" width="25.5" height="15.0" fill="rgb(211,113,25)" rx="2" ry="2" />
<text  x="982.19" y="751.5" >[..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="165.5" y="165" width="0.3" height="15.0" fill="rgb(225,160,47)" rx="2" ry="2" />
<text  x="168.50" y="175.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="654.3" y="501" width="0.3" height="15.0" fill="rgb(223,70,18)" rx="2" ry="2" />
<text  x="657.29" y="511.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="1138.2" y="661" width="0.3" height="15.0" fill="rgb(251,214,41)" rx="2" ry="2" />
<text  x="1141.17" y="671.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="165.2" y="53" width="0.3" height="15.0" fill="rgb(208,41,47)" rx="2" ry="2" />
<text  x="168.21" y="63.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.61%)</title><rect x="1088.7" y="757" width="7.2" height="15.0" fill="rgb(244,161,11)" rx="2" ry="2" />
<text  x="1091.65" y="767.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.02%)</title><rect x="10.3" y="549" width="0.3" height="15.0" fill="rgb(242,212,46)" rx="2" ry="2" />
<text  x="13.29" y="559.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (10 samples, 0.25%)</title><rect x="116.9" y="709" width="2.8" height="15.0" fill="rgb(207,13,26)" rx="2" ry="2" />
<text  x="119.85" y="719.5" ></text>
</g>
<g >
<title>__es_shrink (1 samples, 0.02%)</title><rect x="1110.4" y="613" width="0.3" height="15.0" fill="rgb(225,93,28)" rx="2" ry="2" />
<text  x="1113.37" y="623.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="857.0" y="581" width="0.3" height="15.0" fill="rgb(226,199,3)" rx="2" ry="2" />
<text  x="859.99" y="591.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1112.4" y="565" width="0.3" height="15.0" fill="rgb(228,92,26)" rx="2" ry="2" />
<text  x="1115.40" y="575.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (27 samples, 0.66%)</title><rect x="743.2" y="501" width="7.8" height="15.0" fill="rgb(252,5,41)" rx="2" ry="2" />
<text  x="746.19" y="511.5" ></text>
</g>
<g >
<title>xas_clear_mark (1 samples, 0.02%)</title><rect x="1095.6" y="341" width="0.3" height="15.0" fill="rgb(246,56,7)" rx="2" ry="2" />
<text  x="1098.60" y="351.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (549 samples, 13.47%)</title><rect x="207.8" y="581" width="159.0" height="15.0" fill="rgb(225,192,21)" rx="2" ry="2" />
<text  x="210.78" y="591.5" >ringbuf::consumer::C..</text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1106.9" y="645" width="0.3" height="15.0" fill="rgb(251,140,48)" rx="2" ry="2" />
<text  x="1109.89" y="655.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (339 samples, 8.32%)</title><rect x="441.5" y="517" width="98.1" height="15.0" fill="rgb(218,93,1)" rx="2" ry="2" />
<text  x="444.46" y="527.5" >core::intri..</text>
</g>
<g >
<title>__activate_page (1 samples, 0.02%)</title><rect x="1090.4" y="453" width="0.3" height="15.0" fill="rgb(251,106,1)" rx="2" ry="2" />
<text  x="1093.39" y="463.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (1 samples, 0.02%)</title><rect x="1180.7" y="581" width="0.3" height="15.0" fill="rgb(233,210,10)" rx="2" ry="2" />
<text  x="1183.73" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.02%)</title><rect x="164.3" y="485" width="0.3" height="15.0" fill="rgb(238,38,50)" rx="2" ry="2" />
<text  x="167.34" y="495.5" ></text>
</g>
<g >
<title>shrink_slab_memcg (3 samples, 0.07%)</title><rect x="1110.7" y="645" width="0.8" height="15.0" fill="rgb(226,53,20)" rx="2" ry="2" />
<text  x="1113.66" y="655.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (11 samples, 0.27%)</title><rect x="83.6" y="677" width="3.1" height="15.0" fill="rgb(209,191,6)" rx="2" ry="2" />
<text  x="86.55" y="687.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (36 samples, 0.88%)</title><rect x="409.9" y="533" width="10.4" height="15.0" fill="rgb(238,46,7)" rx="2" ry="2" />
<text  x="412.90" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.17%)</title><rect x="1106.3" y="757" width="2.0" height="15.0" fill="rgb(207,229,14)" rx="2" ry="2" />
<text  x="1109.31" y="767.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="623.3" y="485" width="0.3" height="15.0" fill="rgb(253,122,46)" rx="2" ry="2" />
<text  x="626.31" y="495.5" ></text>
</g>
<g >
<title>vfs_rename (1 samples, 0.02%)</title><rect x="164.3" y="261" width="0.3" height="15.0" fill="rgb(233,108,39)" rx="2" ry="2" />
<text  x="167.34" y="271.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="654.3" y="533" width="0.3" height="15.0" fill="rgb(229,111,43)" rx="2" ry="2" />
<text  x="657.29" y="543.5" ></text>
</g>
<g >
<title>x86_pmu_enable (2 samples, 0.05%)</title><rect x="36.4" y="533" width="0.5" height="15.0" fill="rgb(245,102,5)" rx="2" ry="2" />
<text  x="39.35" y="543.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.02%)</title><rect x="1039.7" y="709" width="0.3" height="15.0" fill="rgb(205,229,50)" rx="2" ry="2" />
<text  x="1042.71" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1 samples, 0.02%)</title><rect x="815.9" y="533" width="0.3" height="15.0" fill="rgb(206,38,33)" rx="2" ry="2" />
<text  x="818.87" y="543.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1088.7" y="629" width="0.2" height="15.0" fill="rgb(225,89,34)" rx="2" ry="2" />
<text  x="1091.65" y="639.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.02%)</title><rect x="10.3" y="533" width="0.3" height="15.0" fill="rgb(253,43,30)" rx="2" ry="2" />
<text  x="13.29" y="543.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (1 samples, 0.02%)</title><rect x="150.4" y="245" width="0.3" height="15.0" fill="rgb(209,4,48)" rx="2" ry="2" />
<text  x="153.44" y="255.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.02%)</title><rect x="1095.3" y="565" width="0.3" height="15.0" fill="rgb(240,96,26)" rx="2" ry="2" />
<text  x="1098.31" y="575.5" ></text>
</g>
<g >
<title>rcu_pending (2 samples, 0.05%)</title><rect x="1144.5" y="405" width="0.6" height="15.0" fill="rgb(213,187,2)" rx="2" ry="2" />
<text  x="1147.54" y="415.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (1 samples, 0.02%)</title><rect x="35.8" y="389" width="0.3" height="15.0" fill="rgb(218,166,0)" rx="2" ry="2" />
<text  x="38.77" y="399.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (1 samples, 0.02%)</title><rect x="1178.1" y="565" width="0.3" height="15.0" fill="rgb(232,144,29)" rx="2" ry="2" />
<text  x="1181.13" y="575.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (2 samples, 0.05%)</title><rect x="1041.2" y="709" width="0.5" height="15.0" fill="rgb(214,0,25)" rx="2" ry="2" />
<text  x="1044.16" y="719.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.02%)</title><rect x="33.2" y="613" width="0.3" height="15.0" fill="rgb(253,4,15)" rx="2" ry="2" />
<text  x="36.17" y="623.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.02%)</title><rect x="1112.1" y="725" width="0.3" height="15.0" fill="rgb(211,146,27)" rx="2" ry="2" />
<text  x="1115.11" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.49%)</title><rect x="610.3" y="565" width="5.8" height="15.0" fill="rgb(237,31,22)" rx="2" ry="2" />
<text  x="613.28" y="575.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1110.4" y="549" width="0.3" height="15.0" fill="rgb(237,60,51)" rx="2" ry="2" />
<text  x="1113.37" y="559.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (3 samples, 0.07%)</title><rect x="164.9" y="565" width="0.9" height="15.0" fill="rgb(227,31,21)" rx="2" ry="2" />
<text  x="167.92" y="575.5" ></text>
</g>
<g >
<title>do_idle (174 samples, 4.27%)</title><rect x="1139.3" y="645" width="50.4" height="15.0" fill="rgb(233,176,34)" rx="2" ry="2" />
<text  x="1142.33" y="655.5" >do_idle</text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1187.4" y="565" width="0.3" height="15.0" fill="rgb(213,106,12)" rx="2" ry="2" />
<text  x="1190.39" y="575.5" ></text>
</g>
<g >
<title>event_function (64 samples, 1.57%)</title><rect x="14.3" y="469" width="18.6" height="15.0" fill="rgb(234,196,29)" rx="2" ry="2" />
<text  x="17.34" y="479.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.05%)</title><rect x="164.9" y="213" width="0.6" height="15.0" fill="rgb(252,72,47)" rx="2" ry="2" />
<text  x="167.92" y="223.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (984 samples, 24.15%)</title><rect x="585.7" y="693" width="284.9" height="15.0" fill="rgb(213,156,52)" rx="2" ry="2" />
<text  x="588.67" y="703.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>NaClFastMutexLock (19 samples, 0.47%)</title><rect x="874.4" y="661" width="5.5" height="15.0" fill="rgb(247,99,11)" rx="2" ry="2" />
<text  x="877.37" y="671.5" ></text>
</g>
<g >
<title>ep_item_poll (1 samples, 0.02%)</title><rect x="1106.3" y="645" width="0.3" height="15.0" fill="rgb(228,214,53)" rx="2" ry="2" />
<text  x="1109.31" y="655.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="35.5" y="325" width="0.3" height="15.0" fill="rgb(228,170,40)" rx="2" ry="2" />
<text  x="38.48" y="335.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (2 samples, 0.05%)</title><rect x="34.9" y="373" width="0.6" height="15.0" fill="rgb(246,44,37)" rx="2" ry="2" />
<text  x="37.90" y="383.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="150.4" y="229" width="0.3" height="15.0" fill="rgb(220,112,6)" rx="2" ry="2" />
<text  x="153.44" y="239.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1112.1" y="581" width="0.3" height="15.0" fill="rgb(215,171,52)" rx="2" ry="2" />
<text  x="1115.11" y="591.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.02%)</title><rect x="1077.9" y="661" width="0.3" height="15.0" fill="rgb(253,162,39)" rx="2" ry="2" />
<text  x="1080.94" y="671.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="855.0" y="549" width="0.8" height="15.0" fill="rgb(249,150,26)" rx="2" ry="2" />
<text  x="857.97" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.02%)</title><rect x="839.9" y="533" width="0.3" height="15.0" fill="rgb(219,30,49)" rx="2" ry="2" />
<text  x="842.91" y="543.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.05%)</title><rect x="163.8" y="453" width="0.5" height="15.0" fill="rgb(207,27,46)" rx="2" ry="2" />
<text  x="166.76" y="463.5" ></text>
</g>
<g >
<title>lindrustinit (1 samples, 0.02%)</title><rect x="1078.2" y="693" width="0.3" height="15.0" fill="rgb(246,76,15)" rx="2" ry="2" />
<text  x="1081.23" y="703.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="35.5" y="309" width="0.3" height="15.0" fill="rgb(248,122,26)" rx="2" ry="2" />
<text  x="38.48" y="319.5" ></text>
</g>
<g >
<title>perf_ioctl (75 samples, 1.84%)</title><rect x="11.2" y="597" width="21.7" height="15.0" fill="rgb(243,105,31)" rx="2" ry="2" />
<text  x="14.16" y="607.5" >p..</text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.02%)</title><rect x="1077.9" y="677" width="0.3" height="15.0" fill="rgb(248,76,25)" rx="2" ry="2" />
<text  x="1080.94" y="687.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (1 samples, 0.02%)</title><rect x="149.3" y="725" width="0.3" height="15.0" fill="rgb(211,135,36)" rx="2" ry="2" />
<text  x="152.28" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (7 samples, 0.17%)</title><rect x="163.8" y="613" width="2.0" height="15.0" fill="rgb(210,169,52)" rx="2" ry="2" />
<text  x="166.76" y="623.5" ></text>
</g>
<g >
<title>prep_new_page (33 samples, 0.81%)</title><rect x="1011.6" y="581" width="9.6" height="15.0" fill="rgb(223,203,3)" rx="2" ry="2" />
<text  x="1014.62" y="591.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (21 samples, 0.52%)</title><rect x="648.2" y="517" width="6.1" height="15.0" fill="rgb(219,102,17)" rx="2" ry="2" />
<text  x="651.21" y="527.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (1 samples, 0.02%)</title><rect x="164.6" y="597" width="0.3" height="15.0" fill="rgb(213,78,36)" rx="2" ry="2" />
<text  x="167.63" y="607.5" ></text>
</g>
<g >
<title>check_cpu_stall (1 samples, 0.02%)</title><rect x="1144.2" y="405" width="0.3" height="15.0" fill="rgb(207,19,35)" rx="2" ry="2" />
<text  x="1147.25" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c (1 samples, 0.02%)</title><rect x="164.3" y="517" width="0.3" height="15.0" fill="rgb(246,6,23)" rx="2" ry="2" />
<text  x="167.34" y="527.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.02%)</title><rect x="409.6" y="485" width="0.3" height="15.0" fill="rgb(215,45,22)" rx="2" ry="2" />
<text  x="412.61" y="495.5" ></text>
</g>
<g >
<title>vfs_write (8 samples, 0.20%)</title><rect x="34.0" y="533" width="2.4" height="15.0" fill="rgb(237,169,19)" rx="2" ry="2" />
<text  x="37.03" y="543.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.02%)</title><rect x="1078.2" y="501" width="0.3" height="15.0" fill="rgb(220,117,38)" rx="2" ry="2" />
<text  x="1081.23" y="511.5" ></text>
</g>
<g >
<title>NaClLogLock (1 samples, 0.02%)</title><rect x="558.7" y="677" width="0.3" height="15.0" fill="rgb(221,106,46)" rx="2" ry="2" />
<text  x="561.74" y="687.5" ></text>
</g>
<g >
<title>get_typical_interval (5 samples, 0.12%)</title><rect x="1181.3" y="581" width="1.5" height="15.0" fill="rgb(253,30,51)" rx="2" ry="2" />
<text  x="1184.31" y="591.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.02%)</title><rect x="558.7" y="549" width="0.3" height="15.0" fill="rgb(223,91,23)" rx="2" ry="2" />
<text  x="561.74" y="559.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (1 samples, 0.02%)</title><rect x="888.6" y="645" width="0.2" height="15.0" fill="rgb(238,208,30)" rx="2" ry="2" />
<text  x="891.56" y="655.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="1112.1" y="629" width="0.3" height="15.0" fill="rgb(223,81,24)" rx="2" ry="2" />
<text  x="1115.11" y="639.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="750.7" y="437" width="0.3" height="15.0" fill="rgb(236,29,31)" rx="2" ry="2" />
<text  x="753.72" y="447.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (1 samples, 0.02%)</title><rect x="1112.1" y="533" width="0.3" height="15.0" fill="rgb(241,60,31)" rx="2" ry="2" />
<text  x="1115.11" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="852.9" y="469" width="0.6" height="15.0" fill="rgb(220,171,22)" rx="2" ry="2" />
<text  x="855.94" y="479.5" ></text>
</g>
<g >
<title>exit_mm (21 samples, 0.52%)</title><rect x="1089.2" y="613" width="6.1" height="15.0" fill="rgb(242,0,12)" rx="2" ry="2" />
<text  x="1092.23" y="623.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="750.7" y="469" width="0.3" height="15.0" fill="rgb(231,142,51)" rx="2" ry="2" />
<text  x="753.72" y="479.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (6 samples, 0.15%)</title><rect x="88.8" y="677" width="1.7" height="15.0" fill="rgb(250,66,23)" rx="2" ry="2" />
<text  x="91.76" y="687.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="1078.2" y="565" width="0.3" height="15.0" fill="rgb(222,138,31)" rx="2" ry="2" />
<text  x="1081.23" y="575.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="1187.4" y="533" width="0.3" height="15.0" fill="rgb(248,138,2)" rx="2" ry="2" />
<text  x="1190.39" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.02%)</title><rect x="92.8" y="677" width="0.3" height="15.0" fill="rgb(222,86,25)" rx="2" ry="2" />
<text  x="95.82" y="687.5" ></text>
</g>
<g >
<title>find_busiest_group (4 samples, 0.10%)</title><rect x="1152.4" y="437" width="1.1" height="15.0" fill="rgb(229,132,18)" rx="2" ry="2" />
<text  x="1155.36" y="447.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.02%)</title><rect x="1039.7" y="437" width="0.3" height="15.0" fill="rgb(219,84,21)" rx="2" ry="2" />
<text  x="1042.71" y="447.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (3 samples, 0.07%)</title><rect x="152.2" y="629" width="0.8" height="15.0" fill="rgb(232,147,23)" rx="2" ry="2" />
<text  x="155.18" y="639.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (1 samples, 0.02%)</title><rect x="796.8" y="533" width="0.3" height="15.0" fill="rgb(239,56,26)" rx="2" ry="2" />
<text  x="799.76" y="543.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (3 samples, 0.07%)</title><rect x="1093.9" y="421" width="0.8" height="15.0" fill="rgb(236,27,30)" rx="2" ry="2" />
<text  x="1096.86" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (20 samples, 0.49%)</title><rect x="402.9" y="517" width="5.8" height="15.0" fill="rgb(236,75,5)" rx="2" ry="2" />
<text  x="405.95" y="527.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.02%)</title><rect x="1078.5" y="677" width="0.3" height="15.0" fill="rgb(217,26,3)" rx="2" ry="2" />
<text  x="1081.52" y="687.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="163.2" y="613" width="0.3" height="15.0" fill="rgb(213,224,40)" rx="2" ry="2" />
<text  x="166.18" y="623.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="857.0" y="549" width="0.3" height="15.0" fill="rgb(214,197,7)" rx="2" ry="2" />
<text  x="859.99" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.02%)</title><rect x="1184.5" y="597" width="0.3" height="15.0" fill="rgb(248,189,20)" rx="2" ry="2" />
<text  x="1187.50" y="607.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (78 samples, 1.91%)</title><rect x="10.6" y="677" width="22.6" height="15.0" fill="rgb(233,218,44)" rx="2" ry="2" />
<text  x="13.58" y="687.5" >p..</text>
</g>
<g >
<title>unmap_single_vma (21 samples, 0.52%)</title><rect x="1089.2" y="549" width="6.1" height="15.0" fill="rgb(230,124,29)" rx="2" ry="2" />
<text  x="1092.23" y="559.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::load_fs (1 samples, 0.02%)</title><rect x="1078.2" y="677" width="0.3" height="15.0" fill="rgb(252,92,46)" rx="2" ry="2" />
<text  x="1081.23" y="687.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="840.2" y="517" width="0.3" height="15.0" fill="rgb(232,117,17)" rx="2" ry="2" />
<text  x="843.20" y="527.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (2 samples, 0.05%)</title><rect x="1039.7" y="741" width="0.6" height="15.0" fill="rgb(211,94,48)" rx="2" ry="2" />
<text  x="1042.71" y="751.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.02%)</title><rect x="1039.7" y="629" width="0.3" height="15.0" fill="rgb(245,150,25)" rx="2" ry="2" />
<text  x="1042.71" y="639.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (12 samples, 0.29%)</title><rect x="203.1" y="581" width="3.5" height="15.0" fill="rgb(230,58,29)" rx="2" ry="2" />
<text  x="206.14" y="591.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.02%)</title><rect x="165.8" y="677" width="0.3" height="15.0" fill="rgb(251,40,32)" rx="2" ry="2" />
<text  x="168.79" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="164.6" y="533" width="0.3" height="15.0" fill="rgb(253,67,20)" rx="2" ry="2" />
<text  x="167.63" y="543.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (12 samples, 0.29%)</title><rect x="1069.5" y="741" width="3.5" height="15.0" fill="rgb(226,160,39)" rx="2" ry="2" />
<text  x="1072.54" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1112.1" y="565" width="0.3" height="15.0" fill="rgb(205,60,51)" rx="2" ry="2" />
<text  x="1115.11" y="575.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.02%)</title><rect x="558.7" y="533" width="0.3" height="15.0" fill="rgb(225,40,39)" rx="2" ry="2" />
<text  x="561.74" y="543.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (1 samples, 0.02%)</title><rect x="39.2" y="741" width="0.3" height="15.0" fill="rgb(208,4,54)" rx="2" ry="2" />
<text  x="42.25" y="751.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.02%)</title><rect x="33.2" y="693" width="0.3" height="15.0" fill="rgb(252,33,48)" rx="2" ry="2" />
<text  x="36.17" y="703.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (4 samples, 0.10%)</title><rect x="119.7" y="709" width="1.2" height="15.0" fill="rgb(242,203,5)" rx="2" ry="2" />
<text  x="122.75" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.05%)</title><rect x="1049.8" y="741" width="0.6" height="15.0" fill="rgb(240,39,31)" rx="2" ry="2" />
<text  x="1052.85" y="751.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.07%)</title><rect x="164.9" y="437" width="0.9" height="15.0" fill="rgb(208,30,13)" rx="2" ry="2" />
<text  x="167.92" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1078.2" y="261" width="0.3" height="15.0" fill="rgb(252,57,52)" rx="2" ry="2" />
<text  x="1081.23" y="271.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (1 samples, 0.02%)</title><rect x="1113.0" y="629" width="0.3" height="15.0" fill="rgb(218,186,46)" rx="2" ry="2" />
<text  x="1115.97" y="639.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (6 samples, 0.15%)</title><rect x="88.8" y="709" width="1.7" height="15.0" fill="rgb(227,106,30)" rx="2" ry="2" />
<text  x="91.76" y="719.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (34 samples, 0.83%)</title><rect x="153.0" y="661" width="9.9" height="15.0" fill="rgb(214,220,20)" rx="2" ry="2" />
<text  x="156.05" y="671.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.02%)</title><rect x="1106.6" y="597" width="0.3" height="15.0" fill="rgb(252,73,37)" rx="2" ry="2" />
<text  x="1109.60" y="607.5" ></text>
</g>
<g >
<title>try_to_release_page (3 samples, 0.07%)</title><rect x="1109.2" y="613" width="0.9" height="15.0" fill="rgb(217,99,18)" rx="2" ry="2" />
<text  x="1112.21" y="623.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (38 samples, 0.93%)</title><rect x="656.0" y="517" width="11.0" height="15.0" fill="rgb(210,102,6)" rx="2" ry="2" />
<text  x="659.03" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.02%)</title><rect x="1188.8" y="613" width="0.3" height="15.0" fill="rgb(212,120,17)" rx="2" ry="2" />
<text  x="1191.84" y="623.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (2 samples, 0.05%)</title><rect x="163.8" y="357" width="0.5" height="15.0" fill="rgb(235,68,34)" rx="2" ry="2" />
<text  x="166.76" y="367.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.02%)</title><rect x="1040.0" y="629" width="0.3" height="15.0" fill="rgb(242,25,53)" rx="2" ry="2" />
<text  x="1043.00" y="639.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="150.4" y="309" width="0.3" height="15.0" fill="rgb(229,29,26)" rx="2" ry="2" />
<text  x="153.44" y="319.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="165.2" y="117" width="0.3" height="15.0" fill="rgb(210,194,49)" rx="2" ry="2" />
<text  x="168.21" y="127.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 1.55%)</title><rect x="14.6" y="405" width="18.3" height="15.0" fill="rgb(229,225,53)" rx="2" ry="2" />
<text  x="17.63" y="415.5" ></text>
</g>
<g >
<title>CompareAndSwap (3 samples, 0.07%)</title><rect x="1038.6" y="741" width="0.8" height="15.0" fill="rgb(207,220,37)" rx="2" ry="2" />
<text  x="1041.55" y="751.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="164.1" y="293" width="0.2" height="15.0" fill="rgb(226,108,42)" rx="2" ry="2" />
<text  x="167.05" y="303.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (2 samples, 0.05%)</title><rect x="572.1" y="693" width="0.5" height="15.0" fill="rgb(216,86,15)" rx="2" ry="2" />
<text  x="575.06" y="703.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (3 samples, 0.07%)</title><rect x="164.9" y="309" width="0.9" height="15.0" fill="rgb(248,51,0)" rx="2" ry="2" />
<text  x="167.92" y="319.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1027.0" y="565" width="0.3" height="15.0" fill="rgb(207,13,32)" rx="2" ry="2" />
<text  x="1029.97" y="575.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.02%)</title><rect x="1137.6" y="677" width="0.3" height="15.0" fill="rgb(254,40,36)" rx="2" ry="2" />
<text  x="1140.59" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1 samples, 0.02%)</title><rect x="1077.4" y="709" width="0.2" height="15.0" fill="rgb(227,15,32)" rx="2" ry="2" />
<text  x="1080.36" y="719.5" ></text>
</g>
<g >
<title>set_next_entity (1 samples, 0.02%)</title><rect x="1138.2" y="645" width="0.3" height="15.0" fill="rgb(230,14,26)" rx="2" ry="2" />
<text  x="1141.17" y="655.5" ></text>
</g>
<g >
<title>lind_close (1 samples, 0.02%)</title><rect x="150.4" y="629" width="0.3" height="15.0" fill="rgb(245,18,5)" rx="2" ry="2" />
<text  x="153.44" y="639.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="1095.3" y="549" width="0.3" height="15.0" fill="rgb(250,131,20)" rx="2" ry="2" />
<text  x="1098.31" y="559.5" ></text>
</g>
<g >
<title>NaClLog (10 samples, 0.25%)</title><rect x="924.2" y="693" width="2.9" height="15.0" fill="rgb(222,155,5)" rx="2" ry="2" />
<text  x="927.17" y="703.5" ></text>
</g>
<g >
<title>activate_page (1 samples, 0.02%)</title><rect x="1090.4" y="485" width="0.3" height="15.0" fill="rgb(216,81,22)" rx="2" ry="2" />
<text  x="1093.39" y="495.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="1088.7" y="661" width="0.2" height="15.0" fill="rgb(244,156,2)" rx="2" ry="2" />
<text  x="1091.65" y="671.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open (1 samples, 0.02%)</title><rect x="164.3" y="533" width="0.3" height="15.0" fill="rgb(243,127,42)" rx="2" ry="2" />
<text  x="167.34" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (77 samples, 1.89%)</title><rect x="10.6" y="629" width="22.3" height="15.0" fill="rgb(205,202,1)" rx="2" ry="2" />
<text  x="13.58" y="639.5" >d..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="36.4" y="741" width="0.5" height="15.0" fill="rgb(212,119,26)" rx="2" ry="2" />
<text  x="39.35" y="751.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (7 samples, 0.17%)</title><rect x="46.5" y="741" width="2.0" height="15.0" fill="rgb(224,113,33)" rx="2" ry="2" />
<text  x="49.49" y="751.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="163.2" y="629" width="0.3" height="15.0" fill="rgb(217,100,24)" rx="2" ry="2" />
<text  x="166.18" y="639.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="34.0" y="325" width="0.3" height="15.0" fill="rgb(212,156,24)" rx="2" ry="2" />
<text  x="37.03" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="672.0" y="485" width="0.2" height="15.0" fill="rgb(243,178,29)" rx="2" ry="2" />
<text  x="674.96" y="495.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (2 samples, 0.05%)</title><rect x="1008.4" y="645" width="0.6" height="15.0" fill="rgb(221,77,26)" rx="2" ry="2" />
<text  x="1011.44" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (26 samples, 0.64%)</title><rect x="616.1" y="549" width="7.5" height="15.0" fill="rgb(237,2,0)" rx="2" ry="2" />
<text  x="619.07" y="559.5" ></text>
</g>
<g >
<title>security_capable (1 samples, 0.02%)</title><rect x="164.6" y="325" width="0.3" height="15.0" fill="rgb(223,62,1)" rx="2" ry="2" />
<text  x="167.63" y="335.5" ></text>
</g>
<g >
<title>ovl_permission (1 samples, 0.02%)</title><rect x="10.3" y="469" width="0.3" height="15.0" fill="rgb(243,59,8)" rx="2" ry="2" />
<text  x="13.29" y="479.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (11 samples, 0.27%)</title><rect x="1108.3" y="677" width="3.2" height="15.0" fill="rgb(213,89,51)" rx="2" ry="2" />
<text  x="1111.34" y="687.5" ></text>
</g>
<g >
<title>load_balance (5 samples, 0.12%)</title><rect x="1152.1" y="453" width="1.4" height="15.0" fill="rgb(235,206,46)" rx="2" ry="2" />
<text  x="1155.07" y="463.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1139.6" y="629" width="0.3" height="15.0" fill="rgb(227,35,4)" rx="2" ry="2" />
<text  x="1142.61" y="639.5" ></text>
</g>
<g >
<title>finish_fault (1 samples, 0.02%)</title><rect x="152.8" y="469" width="0.2" height="15.0" fill="rgb(224,70,38)" rx="2" ry="2" />
<text  x="155.76" y="479.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (176 samples, 4.32%)</title><rect x="1139.0" y="725" width="51.0" height="15.0" fill="rgb(235,68,17)" rx="2" ry="2" />
<text  x="1142.04" y="735.5" >x86_6..</text>
</g>
<g >
<title>NaClUserToSysAddrRange (11 samples, 0.27%)</title><rect x="947.9" y="693" width="3.2" height="15.0" fill="rgb(208,158,24)" rx="2" ry="2" />
<text  x="950.92" y="703.5" ></text>
</g>
<g >
<title>poll_freewait (1 samples, 0.02%)</title><rect x="1107.2" y="693" width="0.3" height="15.0" fill="rgb(220,62,11)" rx="2" ry="2" />
<text  x="1110.18" y="703.5" ></text>
</g>
<g >
<title>ovl_create_object (1 samples, 0.02%)</title><rect x="164.3" y="309" width="0.3" height="15.0" fill="rgb(250,64,14)" rx="2" ry="2" />
<text  x="167.34" y="319.5" ></text>
</g>
<g >
<title>may_delete (1 samples, 0.02%)</title><rect x="164.6" y="453" width="0.3" height="15.0" fill="rgb(240,213,40)" rx="2" ry="2" />
<text  x="167.63" y="463.5" ></text>
</g>
<g >
<title>alloc_pid (1 samples, 0.02%)</title><rect x="1077.4" y="645" width="0.2" height="15.0" fill="rgb(222,161,13)" rx="2" ry="2" />
<text  x="1080.36" y="655.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1106.6" y="645" width="0.3" height="15.0" fill="rgb(244,206,25)" rx="2" ry="2" />
<text  x="1109.60" y="655.5" ></text>
</g>
<g >
<title>account_kernel_stack (1 samples, 0.02%)</title><rect x="1137.9" y="629" width="0.3" height="15.0" fill="rgb(227,109,34)" rx="2" ry="2" />
<text  x="1140.88" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (77 samples, 1.89%)</title><rect x="10.6" y="645" width="22.3" height="15.0" fill="rgb(217,41,47)" rx="2" ry="2" />
<text  x="13.58" y="655.5" >e..</text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="908.0" y="645" width="0.2" height="15.0" fill="rgb(226,169,50)" rx="2" ry="2" />
<text  x="910.96" y="655.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.02%)</title><rect x="1078.5" y="741" width="0.3" height="15.0" fill="rgb(215,189,53)" rx="2" ry="2" />
<text  x="1081.52" y="751.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.42%)</title><rect x="803.7" y="517" width="4.9" height="15.0" fill="rgb(247,81,46)" rx="2" ry="2" />
<text  x="806.71" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (7 samples, 0.17%)</title><rect x="163.8" y="629" width="2.0" height="15.0" fill="rgb(227,109,49)" rx="2" ry="2" />
<text  x="166.76" y="639.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.02%)</title><rect x="150.4" y="517" width="0.3" height="15.0" fill="rgb(222,189,13)" rx="2" ry="2" />
<text  x="153.44" y="527.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="1076.8" y="709" width="0.6" height="15.0" fill="rgb(234,90,6)" rx="2" ry="2" />
<text  x="1079.78" y="719.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (7 samples, 0.17%)</title><rect x="1028.7" y="629" width="2.0" height="15.0" fill="rgb(207,77,12)" rx="2" ry="2" />
<text  x="1031.71" y="639.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.02%)</title><rect x="150.4" y="469" width="0.3" height="15.0" fill="rgb(226,137,38)" rx="2" ry="2" />
<text  x="153.44" y="479.5" ></text>
</g>
<g >
<title>vm_normal_page (1 samples, 0.02%)</title><rect x="1095.0" y="501" width="0.3" height="15.0" fill="rgb(232,127,24)" rx="2" ry="2" />
<text  x="1098.02" y="511.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="152.8" y="405" width="0.2" height="15.0" fill="rgb(205,129,33)" rx="2" ry="2" />
<text  x="155.76" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (16 samples, 0.39%)</title><rect x="605.6" y="597" width="4.7" height="15.0" fill="rgb(233,139,10)" rx="2" ry="2" />
<text  x="608.65" y="607.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (20 samples, 0.49%)</title><rect x="941.0" y="629" width="5.8" height="15.0" fill="rgb(221,216,9)" rx="2" ry="2" />
<text  x="943.97" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (37 samples, 0.91%)</title><rect x="634.3" y="549" width="10.7" height="15.0" fill="rgb(214,143,9)" rx="2" ry="2" />
<text  x="637.31" y="559.5" ></text>
</g>
<g >
<title>ext4_inode_csum (1 samples, 0.02%)</title><rect x="34.0" y="261" width="0.3" height="15.0" fill="rgb(227,1,54)" rx="2" ry="2" />
<text  x="37.03" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="67.6" y="725" width="0.3" height="15.0" fill="rgb(221,20,50)" rx="2" ry="2" />
<text  x="70.62" y="735.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.02%)</title><rect x="166.1" y="581" width="0.3" height="15.0" fill="rgb(219,79,31)" rx="2" ry="2" />
<text  x="169.08" y="591.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 2.18%)</title><rect x="10.6" y="757" width="25.8" height="15.0" fill="rgb(222,143,2)" rx="2" ry="2" />
<text  x="13.58" y="767.5" >[..</text>
</g>
<g >
<title>std::sync::poison::Flag::get (1 samples, 0.02%)</title><rect x="839.9" y="549" width="0.3" height="15.0" fill="rgb(243,177,36)" rx="2" ry="2" />
<text  x="842.91" y="559.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1106.9" y="565" width="0.3" height="15.0" fill="rgb(235,182,28)" rx="2" ry="2" />
<text  x="1109.89" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (32 samples, 0.79%)</title><rect x="847.7" y="613" width="9.3" height="15.0" fill="rgb(251,218,28)" rx="2" ry="2" />
<text  x="850.73" y="623.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="152.8" y="421" width="0.2" height="15.0" fill="rgb(217,160,4)" rx="2" ry="2" />
<text  x="155.76" y="431.5" ></text>
</g>
<g >
<title>record__pushfn (9 samples, 0.22%)</title><rect x="33.7" y="661" width="2.7" height="15.0" fill="rgb(210,31,3)" rx="2" ry="2" />
<text  x="36.74" y="671.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.02%)</title><rect x="1039.7" y="453" width="0.3" height="15.0" fill="rgb(252,117,4)" rx="2" ry="2" />
<text  x="1042.71" y="463.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (2 samples, 0.05%)</title><rect x="36.4" y="677" width="0.5" height="15.0" fill="rgb(226,57,43)" rx="2" ry="2" />
<text  x="39.35" y="687.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (27 samples, 0.66%)</title><rect x="857.3" y="581" width="7.8" height="15.0" fill="rgb(238,184,45)" rx="2" ry="2" />
<text  x="860.28" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="815.3" y="517" width="0.6" height="15.0" fill="rgb(251,104,33)" rx="2" ry="2" />
<text  x="818.30" y="527.5" ></text>
</g>
<g >
<title>rest_init (176 samples, 4.32%)</title><rect x="1139.0" y="677" width="51.0" height="15.0" fill="rgb(246,28,44)" rx="2" ry="2" />
<text  x="1142.04" y="687.5" >rest_..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (9 samples, 0.22%)</title><rect x="851.8" y="565" width="2.6" height="15.0" fill="rgb(224,38,19)" rx="2" ry="2" />
<text  x="854.78" y="575.5" ></text>
</g>
<g >
<title>NaClVmmapCmpEntries (1 samples, 0.02%)</title><rect x="166.4" y="581" width="0.3" height="15.0" fill="rgb(216,150,13)" rx="2" ry="2" />
<text  x="169.37" y="591.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.10%)</title><rect x="850.6" y="501" width="1.2" height="15.0" fill="rgb(209,184,4)" rx="2" ry="2" />
<text  x="853.62" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (4 samples, 0.10%)</title><rect x="811.5" y="437" width="1.2" height="15.0" fill="rgb(240,142,36)" rx="2" ry="2" />
<text  x="814.53" y="447.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (660 samples, 16.20%)</title><rect x="366.8" y="581" width="191.1" height="15.0" fill="rgb(217,168,34)" rx="2" ry="2" />
<text  x="369.75" y="591.5" >ringbuf::consumer::Consu..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="1078.2" y="437" width="0.3" height="15.0" fill="rgb(218,36,36)" rx="2" ry="2" />
<text  x="1081.23" y="447.5" ></text>
</g>
<g >
<title>NaClLogLock (1 samples, 0.02%)</title><rect x="40.7" y="741" width="0.3" height="15.0" fill="rgb(252,171,1)" rx="2" ry="2" />
<text  x="43.69" y="751.5" ></text>
</g>
<g >
<title>free_unref_page_list (6 samples, 0.15%)</title><rect x="1093.0" y="453" width="1.7" height="15.0" fill="rgb(252,57,1)" rx="2" ry="2" />
<text  x="1095.99" y="463.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (469 samples, 11.51%)</title><rect x="667.0" y="597" width="135.8" height="15.0" fill="rgb(240,114,8)" rx="2" ry="2" />
<text  x="670.04" y="607.5" >rustposix::interf..</text>
</g>
<g >
<title>do_shared_fault (1 samples, 0.02%)</title><rect x="1039.7" y="485" width="0.3" height="15.0" fill="rgb(238,58,50)" rx="2" ry="2" />
<text  x="1042.71" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (3 samples, 0.07%)</title><rect x="1183.6" y="565" width="0.9" height="15.0" fill="rgb(215,131,41)" rx="2" ry="2" />
<text  x="1186.63" y="575.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (191 samples, 4.69%)</title><rect x="672.2" y="517" width="55.4" height="15.0" fill="rgb(243,50,13)" rx="2" ry="2" />
<text  x="675.25" y="527.5" >__pth..</text>
</g>
<g >
<title>_start (2 samples, 0.05%)</title><rect x="10.0" y="757" width="0.6" height="15.0" fill="rgb(242,200,37)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>do_group_exit (23 samples, 0.56%)</title><rect x="1089.2" y="645" width="6.7" height="15.0" fill="rgb(210,208,0)" rx="2" ry="2" />
<text  x="1092.23" y="655.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (14 samples, 0.34%)</title><rect x="1091.0" y="485" width="4.0" height="15.0" fill="rgb(241,24,19)" rx="2" ry="2" />
<text  x="1093.97" y="495.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.02%)</title><rect x="165.8" y="693" width="0.3" height="15.0" fill="rgb(215,48,8)" rx="2" ry="2" />
<text  x="168.79" y="703.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="1040.0" y="533" width="0.3" height="15.0" fill="rgb(246,62,28)" rx="2" ry="2" />
<text  x="1043.00" y="543.5" ></text>
</g>
<g >
<title>rb_next (2 samples, 0.05%)</title><rect x="1143.1" y="469" width="0.6" height="15.0" fill="rgb(243,105,7)" rx="2" ry="2" />
<text  x="1146.09" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (73 samples, 1.79%)</title><rect x="420.3" y="533" width="21.2" height="15.0" fill="rgb(230,37,8)" rx="2" ry="2" />
<text  x="423.32" y="543.5" ></text>
</g>
<g >
<title>NaClSysCloseDecoder (1 samples, 0.02%)</title><rect x="150.4" y="725" width="0.3" height="15.0" fill="rgb(252,101,25)" rx="2" ry="2" />
<text  x="153.44" y="735.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="849.5" y="501" width="0.3" height="15.0" fill="rgb(254,122,39)" rx="2" ry="2" />
<text  x="852.47" y="511.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (1 samples, 0.02%)</title><rect x="1146.0" y="405" width="0.3" height="15.0" fill="rgb(234,210,27)" rx="2" ry="2" />
<text  x="1148.99" y="415.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.02%)</title><rect x="164.3" y="373" width="0.3" height="15.0" fill="rgb(208,88,21)" rx="2" ry="2" />
<text  x="167.34" y="383.5" ></text>
</g>
<g >
<title>shrink_node (11 samples, 0.27%)</title><rect x="1108.3" y="693" width="3.2" height="15.0" fill="rgb(215,24,46)" rx="2" ry="2" />
<text  x="1111.34" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="10.3" y="597" width="0.3" height="15.0" fill="rgb(236,228,2)" rx="2" ry="2" />
<text  x="13.29" y="607.5" ></text>
</g>
<g >
<title>generic_perform_write (2 samples, 0.05%)</title><rect x="163.8" y="325" width="0.5" height="15.0" fill="rgb(237,202,23)" rx="2" ry="2" />
<text  x="166.76" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_select (1 samples, 0.02%)</title><rect x="1107.8" y="725" width="0.3" height="15.0" fill="rgb(211,15,1)" rx="2" ry="2" />
<text  x="1110.76" y="735.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1112.4" y="597" width="0.3" height="15.0" fill="rgb(225,7,43)" rx="2" ry="2" />
<text  x="1115.40" y="607.5" ></text>
</g>
<g >
<title>ovl_create (1 samples, 0.02%)</title><rect x="164.3" y="325" width="0.3" height="15.0" fill="rgb(236,225,8)" rx="2" ry="2" />
<text  x="167.34" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="33.5" y="629" width="0.2" height="15.0" fill="rgb(247,105,29)" rx="2" ry="2" />
<text  x="36.46" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (7 samples, 0.17%)</title><rect x="163.8" y="661" width="2.0" height="15.0" fill="rgb(238,118,2)" rx="2" ry="2" />
<text  x="166.76" y="671.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="10.3" y="725" width="0.3" height="15.0" fill="rgb(234,133,10)" rx="2" ry="2" />
<text  x="13.29" y="735.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="1095.3" y="581" width="0.3" height="15.0" fill="rgb(242,117,20)" rx="2" ry="2" />
<text  x="1098.31" y="591.5" ></text>
</g>
<g >
<title>kern_select (1 samples, 0.02%)</title><rect x="1107.8" y="709" width="0.3" height="15.0" fill="rgb(240,197,13)" rx="2" ry="2" />
<text  x="1110.76" y="719.5" ></text>
</g>
<g >
<title>DynArrayGet (1 samples, 0.02%)</title><rect x="907.1" y="661" width="0.3" height="15.0" fill="rgb(221,53,14)" rx="2" ry="2" />
<text  x="910.09" y="671.5" ></text>
</g>
<g >
<title>available_idle_cpu (1 samples, 0.02%)</title><rect x="166.1" y="517" width="0.3" height="15.0" fill="rgb(231,147,15)" rx="2" ry="2" />
<text  x="169.08" y="527.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="856.4" y="469" width="0.3" height="15.0" fill="rgb(213,219,18)" rx="2" ry="2" />
<text  x="859.41" y="479.5" ></text>
</g>
<g >
<title>irqentry_exit (2 samples, 0.05%)</title><rect x="1034.2" y="709" width="0.6" height="15.0" fill="rgb(216,111,41)" rx="2" ry="2" />
<text  x="1037.21" y="719.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (23 samples, 0.56%)</title><rect x="940.1" y="661" width="6.7" height="15.0" fill="rgb(228,149,23)" rx="2" ry="2" />
<text  x="943.10" y="671.5" ></text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.02%)</title><rect x="1137.3" y="645" width="0.3" height="15.0" fill="rgb(213,104,36)" rx="2" ry="2" />
<text  x="1140.30" y="655.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.02%)</title><rect x="557.9" y="597" width="0.3" height="15.0" fill="rgb(233,187,38)" rx="2" ry="2" />
<text  x="560.87" y="607.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.02%)</title><rect x="1177.8" y="581" width="0.3" height="15.0" fill="rgb(232,221,22)" rx="2" ry="2" />
<text  x="1180.84" y="591.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (4 samples, 0.10%)</title><rect x="120.9" y="725" width="1.2" height="15.0" fill="rgb(206,106,54)" rx="2" ry="2" />
<text  x="123.91" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (16 samples, 0.39%)</title><rect x="875.2" y="645" width="4.7" height="15.0" fill="rgb(244,37,52)" rx="2" ry="2" />
<text  x="878.24" y="655.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.02%)</title><rect x="1095.6" y="597" width="0.3" height="15.0" fill="rgb(233,222,14)" rx="2" ry="2" />
<text  x="1098.60" y="607.5" ></text>
</g>
<g >
<title>schedule_idle (7 samples, 0.17%)</title><rect x="1186.2" y="629" width="2.1" height="15.0" fill="rgb(217,113,44)" rx="2" ry="2" />
<text  x="1189.24" y="639.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (1 samples, 0.02%)</title><rect x="166.4" y="597" width="0.3" height="15.0" fill="rgb(242,187,50)" rx="2" ry="2" />
<text  x="169.37" y="607.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (3 samples, 0.07%)</title><rect x="97.5" y="741" width="0.8" height="15.0" fill="rgb(214,66,38)" rx="2" ry="2" />
<text  x="100.45" y="751.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.17%)</title><rect x="805.2" y="469" width="2.0" height="15.0" fill="rgb(233,12,1)" rx="2" ry="2" />
<text  x="808.16" y="479.5" ></text>
</g>
<g >
<title>NaClGetDescMu (1 samples, 0.02%)</title><rect x="558.4" y="693" width="0.3" height="15.0" fill="rgb(254,62,53)" rx="2" ry="2" />
<text  x="561.45" y="703.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (1 samples, 0.02%)</title><rect x="165.5" y="229" width="0.3" height="15.0" fill="rgb(246,36,1)" rx="2" ry="2" />
<text  x="168.50" y="239.5" ></text>
</g>
<g >
<title>__remove_mapping (1 samples, 0.02%)</title><rect x="1108.9" y="613" width="0.3" height="15.0" fill="rgb(240,4,0)" rx="2" ry="2" />
<text  x="1111.92" y="623.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (2 samples, 0.05%)</title><rect x="34.9" y="389" width="0.6" height="15.0" fill="rgb(234,58,38)" rx="2" ry="2" />
<text  x="37.90" y="399.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (192 samples, 4.71%)</title><rect x="672.0" y="565" width="55.6" height="15.0" fill="rgb(243,113,39)" rx="2" ry="2" />
<text  x="674.96" y="575.5" >&lt;std:..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="1078.2" y="405" width="0.3" height="15.0" fill="rgb(229,87,36)" rx="2" ry="2" />
<text  x="1081.23" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (2 samples, 0.05%)</title><rect x="1076.8" y="725" width="0.6" height="15.0" fill="rgb(251,11,17)" rx="2" ry="2" />
<text  x="1079.78" y="735.5" ></text>
</g>
<g >
<title>_perf_event_enable (2 samples, 0.05%)</title><rect x="36.4" y="661" width="0.5" height="15.0" fill="rgb(230,81,47)" rx="2" ry="2" />
<text  x="39.35" y="671.5" ></text>
</g>
<g >
<title>update_process_times (11 samples, 0.27%)</title><rect x="1144.2" y="437" width="3.2" height="15.0" fill="rgb(253,4,4)" rx="2" ry="2" />
<text  x="1147.25" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="815.3" y="469" width="0.3" height="15.0" fill="rgb(207,51,40)" rx="2" ry="2" />
<text  x="818.30" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="853.5" y="469" width="0.3" height="15.0" fill="rgb(224,33,53)" rx="2" ry="2" />
<text  x="856.52" y="479.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="1150.3" y="517" width="0.3" height="15.0" fill="rgb(246,80,30)" rx="2" ry="2" />
<text  x="1153.33" y="527.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (66 samples, 1.62%)</title><rect x="1050.4" y="741" width="19.1" height="15.0" fill="rgb(247,228,25)" rx="2" ry="2" />
<text  x="1053.43" y="751.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="93.1" y="693" width="0.3" height="15.0" fill="rgb(230,127,18)" rx="2" ry="2" />
<text  x="96.11" y="703.5" ></text>
</g>
<g >
<title>generic_perform_write (6 samples, 0.15%)</title><rect x="34.3" y="405" width="1.8" height="15.0" fill="rgb(205,191,37)" rx="2" ry="2" />
<text  x="37.32" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1039.7" y="549" width="0.3" height="15.0" fill="rgb(254,166,25)" rx="2" ry="2" />
<text  x="1042.71" y="559.5" ></text>
</g>
<g >
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="34.0" y="245" width="0.3" height="15.0" fill="rgb(222,64,8)" rx="2" ry="2" />
<text  x="37.03" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (8 samples, 0.20%)</title><rect x="1145.1" y="421" width="2.3" height="15.0" fill="rgb(217,61,31)" rx="2" ry="2" />
<text  x="1148.12" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (22 samples, 0.54%)</title><rect x="638.7" y="517" width="6.3" height="15.0" fill="rgb(206,96,31)" rx="2" ry="2" />
<text  x="641.66" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="33.2" y="661" width="0.3" height="15.0" fill="rgb(234,208,31)" rx="2" ry="2" />
<text  x="36.17" y="671.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (1 samples, 0.02%)</title><rect x="559.0" y="661" width="0.3" height="15.0" fill="rgb(232,227,53)" rx="2" ry="2" />
<text  x="562.03" y="671.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="1147.1" y="373" width="0.3" height="15.0" fill="rgb(210,185,35)" rx="2" ry="2" />
<text  x="1150.14" y="383.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::is_initialized (2 samples, 0.05%)</title><rect x="627.7" y="517" width="0.5" height="15.0" fill="rgb(220,228,31)" rx="2" ry="2" />
<text  x="630.65" y="527.5" ></text>
</g>
<g >
<title>ovl_permission (1 samples, 0.02%)</title><rect x="164.6" y="421" width="0.3" height="15.0" fill="rgb(242,210,35)" rx="2" ry="2" />
<text  x="167.63" y="431.5" ></text>
</g>
<g >
<title>[anon] (196 samples, 4.81%)</title><rect x="36.9" y="757" width="56.8" height="15.0" fill="rgb(213,120,20)" rx="2" ry="2" />
<text  x="39.93" y="767.5" >[anon]</text>
</g>
<g >
<title>hashbrown::map::make_hash (21 samples, 0.52%)</title><rect x="848.3" y="581" width="6.1" height="15.0" fill="rgb(240,207,22)" rx="2" ry="2" />
<text  x="851.31" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (1 samples, 0.02%)</title><rect x="164.6" y="565" width="0.3" height="15.0" fill="rgb(241,121,25)" rx="2" ry="2" />
<text  x="167.63" y="575.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="147.8" y="677" width="0.3" height="15.0" fill="rgb(231,212,23)" rx="2" ry="2" />
<text  x="150.84" y="687.5" ></text>
</g>
<g >
<title>up_read (4 samples, 0.10%)</title><rect x="1033.1" y="693" width="1.1" height="15.0" fill="rgb(224,28,22)" rx="2" ry="2" />
<text  x="1036.05" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="166.1" y="629" width="0.3" height="15.0" fill="rgb(242,45,47)" rx="2" ry="2" />
<text  x="169.08" y="639.5" ></text>
</g>
<g >
<title>free_buffer_head (3 samples, 0.07%)</title><rect x="1109.2" y="549" width="0.9" height="15.0" fill="rgb(253,36,8)" rx="2" ry="2" />
<text  x="1112.21" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.17%)</title><rect x="1106.3" y="741" width="2.0" height="15.0" fill="rgb(208,216,7)" rx="2" ry="2" />
<text  x="1109.31" y="751.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (25 samples, 0.61%)</title><rect x="1142.2" y="549" width="7.3" height="15.0" fill="rgb(205,103,8)" rx="2" ry="2" />
<text  x="1145.22" y="559.5" ></text>
</g>
<g >
<title>NaClXMutexLock (2 samples, 0.05%)</title><rect x="42.7" y="741" width="0.6" height="15.0" fill="rgb(208,171,10)" rx="2" ry="2" />
<text  x="45.72" y="751.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="36.9" y="741" width="1.2" height="15.0" fill="rgb(249,57,30)" rx="2" ry="2" />
<text  x="39.93" y="751.5" ></text>
</g>
<g >
<title>serde_json::de::from_str (1 samples, 0.02%)</title><rect x="1078.2" y="645" width="0.3" height="15.0" fill="rgb(244,23,6)" rx="2" ry="2" />
<text  x="1081.23" y="655.5" ></text>
</g>
<g >
<title>do_iter_write (8 samples, 0.20%)</title><rect x="34.0" y="469" width="2.4" height="15.0" fill="rgb(227,207,53)" rx="2" ry="2" />
<text  x="37.03" y="479.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="1095.6" y="549" width="0.3" height="15.0" fill="rgb(248,2,4)" rx="2" ry="2" />
<text  x="1098.60" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="150.4" y="437" width="0.3" height="15.0" fill="rgb(248,20,35)" rx="2" ry="2" />
<text  x="153.44" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.12%)</title><rect x="808.9" y="517" width="1.5" height="15.0" fill="rgb(217,110,15)" rx="2" ry="2" />
<text  x="811.93" y="527.5" ></text>
</g>
<g >
<title>run_rebalance_domains (11 samples, 0.27%)</title><rect x="1150.9" y="485" width="3.2" height="15.0" fill="rgb(213,113,53)" rx="2" ry="2" />
<text  x="1153.91" y="495.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (2 samples, 0.05%)</title><rect x="163.8" y="373" width="0.5" height="15.0" fill="rgb(205,155,45)" rx="2" ry="2" />
<text  x="166.76" y="383.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="1039.7" y="517" width="0.3" height="15.0" fill="rgb(217,132,35)" rx="2" ry="2" />
<text  x="1042.71" y="527.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="1106.6" y="677" width="0.3" height="15.0" fill="rgb(243,106,20)" rx="2" ry="2" />
<text  x="1109.60" y="687.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.02%)</title><rect x="1040.0" y="725" width="0.3" height="15.0" fill="rgb(206,181,40)" rx="2" ry="2" />
<text  x="1043.00" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1040.0" y="693" width="0.3" height="15.0" fill="rgb(206,116,40)" rx="2" ry="2" />
<text  x="1043.00" y="703.5" ></text>
</g>
<g >
<title>NaClSysMmapDecoder (1 samples, 0.02%)</title><rect x="166.4" y="725" width="0.3" height="15.0" fill="rgb(240,157,22)" rx="2" ry="2" />
<text  x="169.37" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (13 samples, 0.32%)</title><rect x="793.0" y="517" width="3.8" height="15.0" fill="rgb(233,227,21)" rx="2" ry="2" />
<text  x="796.00" y="527.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="1150.6" y="485" width="0.3" height="15.0" fill="rgb(241,130,46)" rx="2" ry="2" />
<text  x="1153.62" y="495.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="623.3" y="469" width="0.3" height="15.0" fill="rgb(241,69,40)" rx="2" ry="2" />
<text  x="626.31" y="479.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (32 samples, 0.79%)</title><rect x="562.8" y="693" width="9.3" height="15.0" fill="rgb(254,103,39)" rx="2" ry="2" />
<text  x="565.79" y="703.5" ></text>
</g>
<g >
<title>mem_cgroup_iter (1 samples, 0.02%)</title><rect x="1108.3" y="661" width="0.3" height="15.0" fill="rgb(226,220,54)" rx="2" ry="2" />
<text  x="1111.34" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1040.0" y="549" width="0.3" height="15.0" fill="rgb(231,55,49)" rx="2" ry="2" />
<text  x="1043.00" y="559.5" ></text>
</g>
<g >
<title>__GI___tfind (1 samples, 0.02%)</title><rect x="10.0" y="597" width="0.3" height="15.0" fill="rgb(230,89,28)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>get_signal (23 samples, 0.56%)</title><rect x="1089.2" y="661" width="6.7" height="15.0" fill="rgb(241,32,31)" rx="2" ry="2" />
<text  x="1092.23" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (774 samples, 18.99%)</title><rect x="623.6" y="613" width="224.1" height="15.0" fill="rgb(210,16,28)" rx="2" ry="2" />
<text  x="626.60" y="623.5" >rustposix::safeposix::syscall..</text>
</g>
<g >
<title>NaClAppLoadFileAslr (2 samples, 0.05%)</title><rect x="1041.2" y="693" width="0.5" height="15.0" fill="rgb(212,64,32)" rx="2" ry="2" />
<text  x="1044.16" y="703.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (3 samples, 0.07%)</title><rect x="164.9" y="581" width="0.9" height="15.0" fill="rgb(250,219,27)" rx="2" ry="2" />
<text  x="167.92" y="591.5" ></text>
</g>
<g >
<title>lru_cache_add (11 samples, 0.27%)</title><rect x="1025.5" y="613" width="3.2" height="15.0" fill="rgb(234,70,36)" rx="2" ry="2" />
<text  x="1028.52" y="623.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (1 samples, 0.02%)</title><rect x="10.3" y="485" width="0.3" height="15.0" fill="rgb(209,21,50)" rx="2" ry="2" />
<text  x="13.29" y="495.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1026.7" y="565" width="0.3" height="15.0" fill="rgb(245,125,45)" rx="2" ry="2" />
<text  x="1029.68" y="575.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.02%)</title><rect x="1095.6" y="421" width="0.3" height="15.0" fill="rgb(241,120,20)" rx="2" ry="2" />
<text  x="1098.60" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (24 samples, 0.59%)</title><rect x="402.9" y="533" width="7.0" height="15.0" fill="rgb(211,167,0)" rx="2" ry="2" />
<text  x="405.95" y="543.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.02%)</title><rect x="1040.0" y="501" width="0.3" height="15.0" fill="rgb(228,216,48)" rx="2" ry="2" />
<text  x="1043.00" y="511.5" ></text>
</g>
<g >
<title>do_shrink_slab (3 samples, 0.07%)</title><rect x="1110.7" y="629" width="0.8" height="15.0" fill="rgb(232,198,30)" rx="2" ry="2" />
<text  x="1113.66" y="639.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="10.3" y="677" width="0.3" height="15.0" fill="rgb(213,64,49)" rx="2" ry="2" />
<text  x="13.29" y="687.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.07%)</title><rect x="669.6" y="581" width="0.9" height="15.0" fill="rgb(226,59,46)" rx="2" ry="2" />
<text  x="672.64" y="591.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="1112.4" y="549" width="0.3" height="15.0" fill="rgb(225,27,15)" rx="2" ry="2" />
<text  x="1115.40" y="559.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="856.7" y="485" width="0.3" height="15.0" fill="rgb(224,49,35)" rx="2" ry="2" />
<text  x="859.70" y="495.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.02%)</title><rect x="1088.9" y="693" width="0.3" height="15.0" fill="rgb(253,155,7)" rx="2" ry="2" />
<text  x="1091.94" y="703.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (1,352 samples, 33.18%)</title><rect x="166.7" y="613" width="391.5" height="15.0" fill="rgb(230,144,48)" rx="2" ry="2" />
<text  x="169.66" y="623.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustp..</text>
</g>
<g >
<title>iput.part.0 (2 samples, 0.05%)</title><rect x="1110.9" y="517" width="0.6" height="15.0" fill="rgb(223,147,46)" rx="2" ry="2" />
<text  x="1113.95" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (3 samples, 0.07%)</title><rect x="164.9" y="293" width="0.9" height="15.0" fill="rgb(208,40,27)" rx="2" ry="2" />
<text  x="167.92" y="303.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="1078.5" y="725" width="0.3" height="15.0" fill="rgb(245,72,36)" rx="2" ry="2" />
<text  x="1081.52" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (21 samples, 0.52%)</title><rect x="628.2" y="565" width="6.1" height="15.0" fill="rgb(247,93,3)" rx="2" ry="2" />
<text  x="631.23" y="575.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 1.57%)</title><rect x="14.3" y="453" width="18.6" height="15.0" fill="rgb(248,137,44)" rx="2" ry="2" />
<text  x="17.34" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30 samples, 0.74%)</title><rect x="848.3" y="597" width="8.7" height="15.0" fill="rgb(210,4,39)" rx="2" ry="2" />
<text  x="851.31" y="607.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.12%)</title><rect x="848.3" y="517" width="1.5" height="15.0" fill="rgb(243,66,3)" rx="2" ry="2" />
<text  x="851.31" y="527.5" ></text>
</g>
<g >
<title>record__write (9 samples, 0.22%)</title><rect x="33.7" y="645" width="2.7" height="15.0" fill="rgb(238,199,33)" rx="2" ry="2" />
<text  x="36.74" y="655.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="816.2" y="533" width="0.3" height="15.0" fill="rgb(239,190,9)" rx="2" ry="2" />
<text  x="819.16" y="543.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (2 samples, 0.05%)</title><rect x="898.7" y="661" width="0.6" height="15.0" fill="rgb(243,0,37)" rx="2" ry="2" />
<text  x="901.69" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (3 samples, 0.07%)</title><rect x="164.9" y="533" width="0.9" height="15.0" fill="rgb(235,59,40)" rx="2" ry="2" />
<text  x="167.92" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (191 samples, 4.69%)</title><rect x="672.2" y="533" width="55.4" height="15.0" fill="rgb(242,106,46)" rx="2" ry="2" />
<text  x="675.25" y="543.5" >std::..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.02%)</title><rect x="166.7" y="581" width="0.2" height="15.0" fill="rgb(223,142,24)" rx="2" ry="2" />
<text  x="169.66" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (15 samples, 0.37%)</title><rect x="634.3" y="517" width="4.4" height="15.0" fill="rgb(226,133,26)" rx="2" ry="2" />
<text  x="637.31" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.29%)</title><rect x="624.2" y="597" width="3.5" height="15.0" fill="rgb(220,37,48)" rx="2" ry="2" />
<text  x="627.18" y="607.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (12 samples, 0.29%)</title><rect x="203.1" y="565" width="3.5" height="15.0" fill="rgb(215,119,4)" rx="2" ry="2" />
<text  x="206.14" y="575.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (1 samples, 0.02%)</title><rect x="10.3" y="501" width="0.3" height="15.0" fill="rgb(253,165,45)" rx="2" ry="2" />
<text  x="13.29" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (5 samples, 0.12%)</title><rect x="1183.1" y="581" width="1.4" height="15.0" fill="rgb(238,166,9)" rx="2" ry="2" />
<text  x="1186.05" y="591.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="1034.5" y="677" width="0.3" height="15.0" fill="rgb(224,50,25)" rx="2" ry="2" />
<text  x="1037.50" y="687.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="857.0" y="565" width="0.3" height="15.0" fill="rgb(230,188,43)" rx="2" ry="2" />
<text  x="859.99" y="575.5" ></text>
</g>
<g >
<title>core::cmp::min (11 samples, 0.27%)</title><rect x="200.0" y="581" width="3.1" height="15.0" fill="rgb(232,28,32)" rx="2" ry="2" />
<text  x="202.96" y="591.5" ></text>
</g>
<g >
<title>NaClStoreMem (1 samples, 0.02%)</title><rect x="1077.9" y="565" width="0.3" height="15.0" fill="rgb(216,63,12)" rx="2" ry="2" />
<text  x="1080.94" y="575.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (105 samples, 2.58%)</title><rect x="1004.7" y="741" width="30.4" height="15.0" fill="rgb(230,117,17)" rx="2" ry="2" />
<text  x="1007.67" y="751.5" >as..</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="815.6" y="453" width="0.3" height="15.0" fill="rgb(248,46,8)" rx="2" ry="2" />
<text  x="818.59" y="463.5" ></text>
</g>
<g >
<title>pmd_pfn (1 samples, 0.02%)</title><rect x="1031.9" y="629" width="0.3" height="15.0" fill="rgb(246,203,1)" rx="2" ry="2" />
<text  x="1034.89" y="639.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (13 samples, 0.32%)</title><rect x="1150.6" y="533" width="3.8" height="15.0" fill="rgb(207,174,33)" rx="2" ry="2" />
<text  x="1153.62" y="543.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="816.2" y="517" width="0.3" height="15.0" fill="rgb(228,27,21)" rx="2" ry="2" />
<text  x="819.16" y="527.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="1032.2" y="645" width="0.3" height="15.0" fill="rgb(254,14,12)" rx="2" ry="2" />
<text  x="1035.18" y="655.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (3 samples, 0.07%)</title><rect x="164.9" y="469" width="0.9" height="15.0" fill="rgb(217,39,43)" rx="2" ry="2" />
<text  x="167.92" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_get_next_event (1 samples, 0.02%)</title><rect x="1142.2" y="501" width="0.3" height="15.0" fill="rgb(218,172,53)" rx="2" ry="2" />
<text  x="1145.22" y="511.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (1 samples, 0.02%)</title><rect x="1111.5" y="725" width="0.3" height="15.0" fill="rgb(237,4,53)" rx="2" ry="2" />
<text  x="1114.53" y="735.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (1 samples, 0.02%)</title><rect x="166.1" y="677" width="0.3" height="15.0" fill="rgb(251,47,50)" rx="2" ry="2" />
<text  x="169.08" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="150.4" y="421" width="0.3" height="15.0" fill="rgb(220,66,23)" rx="2" ry="2" />
<text  x="153.44" y="431.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.02%)</title><rect x="1095.6" y="581" width="0.3" height="15.0" fill="rgb(207,207,51)" rx="2" ry="2" />
<text  x="1098.60" y="591.5" ></text>
</g>
<g >
<title>lind (2 samples, 0.05%)</title><rect x="10.0" y="773" width="0.6" height="15.0" fill="rgb(247,75,34)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (24 samples, 0.59%)</title><rect x="1142.2" y="517" width="7.0" height="15.0" fill="rgb(218,4,28)" rx="2" ry="2" />
<text  x="1145.22" y="527.5" ></text>
</g>
<g >
<title>NaClLoadTrampoline (1 samples, 0.02%)</title><rect x="1077.9" y="645" width="0.3" height="15.0" fill="rgb(245,37,28)" rx="2" ry="2" />
<text  x="1080.94" y="655.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="1078.2" y="517" width="0.3" height="15.0" fill="rgb(234,209,26)" rx="2" ry="2" />
<text  x="1081.23" y="527.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="35.5" y="341" width="0.3" height="15.0" fill="rgb(224,197,6)" rx="2" ry="2" />
<text  x="38.48" y="351.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (6 samples, 0.15%)</title><rect x="88.8" y="725" width="1.7" height="15.0" fill="rgb(218,123,26)" rx="2" ry="2" />
<text  x="91.76" y="735.5" ></text>
</g>
<g >
<title>shmem_add_to_page_cache (1 samples, 0.02%)</title><rect x="1039.7" y="421" width="0.3" height="15.0" fill="rgb(236,227,25)" rx="2" ry="2" />
<text  x="1042.71" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="165.5" y="133" width="0.3" height="15.0" fill="rgb(209,169,7)" rx="2" ry="2" />
<text  x="168.50" y="143.5" ></text>
</g>
<g >
<title>__update_idle_core (3 samples, 0.07%)</title><rect x="1186.2" y="597" width="0.9" height="15.0" fill="rgb(254,13,34)" rx="2" ry="2" />
<text  x="1189.24" y="607.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (1 samples, 0.02%)</title><rect x="34.0" y="277" width="0.3" height="15.0" fill="rgb(245,117,51)" rx="2" ry="2" />
<text  x="37.03" y="287.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.02%)</title><rect x="1090.4" y="501" width="0.3" height="15.0" fill="rgb(206,70,28)" rx="2" ry="2" />
<text  x="1093.39" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.32%)</title><rect x="1044.9" y="741" width="3.8" height="15.0" fill="rgb(238,120,44)" rx="2" ry="2" />
<text  x="1047.93" y="751.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (8 samples, 0.20%)</title><rect x="34.0" y="437" width="2.4" height="15.0" fill="rgb(232,217,32)" rx="2" ry="2" />
<text  x="37.03" y="447.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="150.4" y="293" width="0.3" height="15.0" fill="rgb(238,179,23)" rx="2" ry="2" />
<text  x="153.44" y="303.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (27 samples, 0.66%)</title><rect x="564.2" y="661" width="7.9" height="15.0" fill="rgb(245,139,3)" rx="2" ry="2" />
<text  x="567.24" y="671.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (1 samples, 0.02%)</title><rect x="1050.1" y="693" width="0.3" height="15.0" fill="rgb(230,111,42)" rx="2" ry="2" />
<text  x="1053.14" y="703.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 1.57%)</title><rect x="14.3" y="485" width="18.6" height="15.0" fill="rgb(230,74,12)" rx="2" ry="2" />
<text  x="17.34" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1187.4" y="485" width="0.3" height="15.0" fill="rgb(245,68,6)" rx="2" ry="2" />
<text  x="1190.39" y="495.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (14 samples, 0.34%)</title><rect x="404.7" y="501" width="4.0" height="15.0" fill="rgb(254,171,40)" rx="2" ry="2" />
<text  x="407.68" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.29%)</title><rect x="624.2" y="581" width="3.5" height="15.0" fill="rgb(220,159,50)" rx="2" ry="2" />
<text  x="627.18" y="591.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampoline (1 samples, 0.02%)</title><rect x="165.8" y="613" width="0.3" height="15.0" fill="rgb(220,135,2)" rx="2" ry="2" />
<text  x="168.79" y="623.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.12%)</title><rect x="807.2" y="469" width="1.4" height="15.0" fill="rgb(213,189,24)" rx="2" ry="2" />
<text  x="810.19" y="479.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.02%)</title><rect x="164.3" y="389" width="0.3" height="15.0" fill="rgb(250,136,7)" rx="2" ry="2" />
<text  x="167.34" y="399.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="1031.0" y="597" width="0.3" height="15.0" fill="rgb(251,141,22)" rx="2" ry="2" />
<text  x="1034.03" y="607.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (4 samples, 0.10%)</title><rect x="1076.2" y="741" width="1.2" height="15.0" fill="rgb(219,18,36)" rx="2" ry="2" />
<text  x="1079.20" y="751.5" ></text>
</g>
<g >
<title>[perf-30719.map] (6 samples, 0.15%)</title><rect x="93.7" y="757" width="1.7" height="15.0" fill="rgb(213,211,30)" rx="2" ry="2" />
<text  x="96.69" y="767.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="163.5" y="693" width="0.3" height="15.0" fill="rgb(240,221,19)" rx="2" ry="2" />
<text  x="166.47" y="703.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="67.6" y="709" width="0.3" height="15.0" fill="rgb(254,117,45)" rx="2" ry="2" />
<text  x="70.62" y="719.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="816.2" y="549" width="0.3" height="15.0" fill="rgb(210,128,7)" rx="2" ry="2" />
<text  x="819.16" y="559.5" ></text>
</g>
<g >
<title>lookup_open.isra.0 (1 samples, 0.02%)</title><rect x="164.3" y="341" width="0.3" height="15.0" fill="rgb(235,24,19)" rx="2" ry="2" />
<text  x="167.34" y="351.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="815.6" y="421" width="0.3" height="15.0" fill="rgb(233,211,37)" rx="2" ry="2" />
<text  x="818.59" y="431.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2 samples, 0.05%)</title><rect x="41.6" y="741" width="0.5" height="15.0" fill="rgb(235,76,30)" rx="2" ry="2" />
<text  x="44.56" y="751.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.02%)</title><rect x="1040.0" y="645" width="0.3" height="15.0" fill="rgb(214,131,13)" rx="2" ry="2" />
<text  x="1043.00" y="655.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (2 samples, 0.05%)</title><rect x="163.8" y="341" width="0.5" height="15.0" fill="rgb(206,139,34)" rx="2" ry="2" />
<text  x="166.76" y="351.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.02%)</title><rect x="1040.0" y="613" width="0.3" height="15.0" fill="rgb(236,39,49)" rx="2" ry="2" />
<text  x="1043.00" y="623.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (23 samples, 0.56%)</title><rect x="1089.2" y="709" width="6.7" height="15.0" fill="rgb(244,16,52)" rx="2" ry="2" />
<text  x="1092.23" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.02%)</title><rect x="1040.0" y="677" width="0.3" height="15.0" fill="rgb(246,142,25)" rx="2" ry="2" />
<text  x="1043.00" y="687.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.42%)</title><rect x="803.7" y="501" width="4.9" height="15.0" fill="rgb(237,137,19)" rx="2" ry="2" />
<text  x="806.71" y="511.5" ></text>
</g>
<g >
<title>vfs_unlink (1 samples, 0.02%)</title><rect x="164.6" y="469" width="0.3" height="15.0" fill="rgb(236,179,48)" rx="2" ry="2" />
<text  x="167.63" y="479.5" ></text>
</g>
<g >
<title>kmem_cache_free (3 samples, 0.07%)</title><rect x="1109.2" y="533" width="0.9" height="15.0" fill="rgb(226,151,13)" rx="2" ry="2" />
<text  x="1112.21" y="543.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="623.3" y="501" width="0.3" height="15.0" fill="rgb(241,212,35)" rx="2" ry="2" />
<text  x="626.31" y="511.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="163.2" y="597" width="0.3" height="15.0" fill="rgb(208,223,17)" rx="2" ry="2" />
<text  x="166.18" y="607.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2,945 samples, 72.27%)</title><rect x="98.3" y="741" width="852.8" height="15.0" fill="rgb(241,113,3)" rx="2" ry="2" />
<text  x="101.32" y="751.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (21 samples, 0.52%)</title><rect x="628.2" y="549" width="6.1" height="15.0" fill="rgb(214,127,30)" rx="2" ry="2" />
<text  x="631.23" y="559.5" ></text>
</g>
<g >
<title>perf_ioctl (2 samples, 0.05%)</title><rect x="36.4" y="709" width="0.5" height="15.0" fill="rgb(247,53,28)" rx="2" ry="2" />
<text  x="39.35" y="719.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.39%)</title><rect x="605.6" y="629" width="4.7" height="15.0" fill="rgb(232,109,11)" rx="2" ry="2" />
<text  x="608.65" y="639.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="654.3" y="517" width="0.3" height="15.0" fill="rgb(242,69,7)" rx="2" ry="2" />
<text  x="657.29" y="527.5" ></text>
</g>
<g >
<title>ovl_create_or_link (1 samples, 0.02%)</title><rect x="164.3" y="293" width="0.3" height="15.0" fill="rgb(217,91,32)" rx="2" ry="2" />
<text  x="167.34" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="93.1" y="709" width="0.3" height="15.0" fill="rgb(244,15,9)" rx="2" ry="2" />
<text  x="96.11" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (81 samples, 1.99%)</title><rect x="816.5" y="565" width="23.4" height="15.0" fill="rgb(238,165,53)" rx="2" ry="2" />
<text  x="819.45" y="575.5" >s..</text>
</g>
<g >
<title>ext4_es_free_extent (1 samples, 0.02%)</title><rect x="1110.4" y="565" width="0.3" height="15.0" fill="rgb(231,186,42)" rx="2" ry="2" />
<text  x="1113.37" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (7 samples, 0.17%)</title><rect x="738.0" y="517" width="2.0" height="15.0" fill="rgb(243,212,39)" rx="2" ry="2" />
<text  x="740.98" y="527.5" ></text>
</g>
<g >
<title>do_sys_poll (2 samples, 0.05%)</title><rect x="1106.9" y="709" width="0.6" height="15.0" fill="rgb(230,76,42)" rx="2" ry="2" />
<text  x="1109.89" y="719.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (1 samples, 0.02%)</title><rect x="1189.7" y="645" width="0.3" height="15.0" fill="rgb(239,18,7)" rx="2" ry="2" />
<text  x="1192.71" y="655.5" ></text>
</g>
<g >
<title>event_function_call (2 samples, 0.05%)</title><rect x="36.4" y="645" width="0.5" height="15.0" fill="rgb(232,59,23)" rx="2" ry="2" />
<text  x="39.35" y="655.5" ></text>
</g>
<g >
<title>unmap_vmas (21 samples, 0.52%)</title><rect x="1089.2" y="565" width="6.1" height="15.0" fill="rgb(230,117,17)" rx="2" ry="2" />
<text  x="1092.23" y="575.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (268 samples, 6.58%)</title><rect x="1112.4" y="757" width="77.6" height="15.0" fill="rgb(208,104,17)" rx="2" ry="2" />
<text  x="1115.40" y="767.5" >secondar..</text>
</g>
<g >
<title>NaClPatchOneTrampoline (1 samples, 0.02%)</title><rect x="1077.9" y="629" width="0.3" height="15.0" fill="rgb(220,85,11)" rx="2" ry="2" />
<text  x="1080.94" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="46.2" y="741" width="0.3" height="15.0" fill="rgb(226,41,29)" rx="2" ry="2" />
<text  x="49.20" y="751.5" ></text>
</g>
<g >
<title>smp_call_function_single (65 samples, 1.60%)</title><rect x="14.1" y="517" width="18.8" height="15.0" fill="rgb(229,171,40)" rx="2" ry="2" />
<text  x="17.05" y="527.5" ></text>
</g>
<g >
<title>__GI___clone (1 samples, 0.02%)</title><rect x="1077.4" y="757" width="0.2" height="15.0" fill="rgb(209,61,9)" rx="2" ry="2" />
<text  x="1080.36" y="767.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.07%)</title><rect x="573.2" y="693" width="0.9" height="15.0" fill="rgb(234,181,12)" rx="2" ry="2" />
<text  x="576.21" y="703.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1112.4" y="629" width="0.6" height="15.0" fill="rgb(230,17,34)" rx="2" ry="2" />
<text  x="1115.40" y="639.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.02%)</title><rect x="558.2" y="629" width="0.2" height="15.0" fill="rgb(237,147,11)" rx="2" ry="2" />
<text  x="561.16" y="639.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="1107.5" y="677" width="0.3" height="15.0" fill="rgb(219,92,43)" rx="2" ry="2" />
<text  x="1110.47" y="687.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (2 samples, 0.05%)</title><rect x="1091.5" y="469" width="0.6" height="15.0" fill="rgb(215,178,7)" rx="2" ry="2" />
<text  x="1094.55" y="479.5" ></text>
</g>
<g >
<title>scan_shadow_nodes (1 samples, 0.02%)</title><rect x="1110.7" y="613" width="0.2" height="15.0" fill="rgb(206,163,29)" rx="2" ry="2" />
<text  x="1113.66" y="623.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.02%)</title><rect x="1107.5" y="693" width="0.3" height="15.0" fill="rgb(213,68,30)" rx="2" ry="2" />
<text  x="1110.47" y="703.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 1.08%)</title><rect x="654.3" y="581" width="12.7" height="15.0" fill="rgb(218,158,22)" rx="2" ry="2" />
<text  x="657.29" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.07%)</title><rect x="152.2" y="565" width="0.8" height="15.0" fill="rgb(235,52,25)" rx="2" ry="2" />
<text  x="155.18" y="575.5" ></text>
</g>
<g >
<title>[unknown]  (302 samples, 7.41%)</title><rect x="951.1" y="757" width="87.5" height="15.0" fill="rgb(238,87,30)" rx="2" ry="2" />
<text  x="954.10" y="767.5" >[unknown] </text>
</g>
<g >
<title>__unlink (1 samples, 0.02%)</title><rect x="164.6" y="549" width="0.3" height="15.0" fill="rgb(226,132,20)" rx="2" ry="2" />
<text  x="167.63" y="559.5" ></text>
</g>
<g >
<title>__run_hrtimer (18 samples, 0.44%)</title><rect x="1142.8" y="485" width="5.2" height="15.0" fill="rgb(223,223,8)" rx="2" ry="2" />
<text  x="1145.80" y="495.5" ></text>
</g>
<g >
<title>__remove_hrtimer (2 samples, 0.05%)</title><rect x="1185.1" y="549" width="0.6" height="15.0" fill="rgb(227,9,18)" rx="2" ry="2" />
<text  x="1188.08" y="559.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (67 samples, 1.64%)</title><rect x="13.5" y="565" width="19.4" height="15.0" fill="rgb(208,167,17)" rx="2" ry="2" />
<text  x="16.47" y="575.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1188.6" y="613" width="0.2" height="15.0" fill="rgb(228,192,41)" rx="2" ry="2" />
<text  x="1191.55" y="623.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (14 samples, 0.34%)</title><rect x="143.8" y="677" width="4.0" height="15.0" fill="rgb(222,147,1)" rx="2" ry="2" />
<text  x="146.78" y="687.5" ></text>
</g>
<g >
<title>NaClSysRead (1,356 samples, 33.28%)</title><rect x="166.7" y="709" width="392.6" height="15.0" fill="rgb(207,113,5)" rx="2" ry="2" />
<text  x="169.66" y="719.5" >NaClSysRead</text>
</g>
<g >
<title>do_iter_readv_writev (8 samples, 0.20%)</title><rect x="34.0" y="453" width="2.4" height="15.0" fill="rgb(229,122,15)" rx="2" ry="2" />
<text  x="37.03" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="856.7" y="501" width="0.3" height="15.0" fill="rgb(214,48,27)" rx="2" ry="2" />
<text  x="859.70" y="511.5" ></text>
</g>
<g >
<title>copy_page_from_iter (1 samples, 0.02%)</title><rect x="1088.9" y="661" width="0.3" height="15.0" fill="rgb(242,183,49)" rx="2" ry="2" />
<text  x="1091.94" y="671.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (1 samples, 0.02%)</title><rect x="164.1" y="245" width="0.2" height="15.0" fill="rgb(216,117,49)" rx="2" ry="2" />
<text  x="167.05" y="255.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (83 samples, 2.04%)</title><rect x="1113.3" y="645" width="24.0" height="15.0" fill="rgb(221,21,42)" rx="2" ry="2" />
<text  x="1116.26" y="655.5" >m..</text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.02%)</title><rect x="34.0" y="293" width="0.3" height="15.0" fill="rgb(217,6,28)" rx="2" ry="2" />
<text  x="37.03" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.02%)</title><rect x="1189.1" y="629" width="0.3" height="15.0" fill="rgb(229,102,32)" rx="2" ry="2" />
<text  x="1192.13" y="639.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.05%)</title><rect x="1178.4" y="581" width="0.6" height="15.0" fill="rgb(206,219,49)" rx="2" ry="2" />
<text  x="1181.42" y="591.5" ></text>
</g>
<g >
<title>put_task_stack (1 samples, 0.02%)</title><rect x="1137.9" y="645" width="0.3" height="15.0" fill="rgb(223,126,24)" rx="2" ry="2" />
<text  x="1140.88" y="655.5" ></text>
</g>
<g >
<title>tick_sched_handle (12 samples, 0.29%)</title><rect x="1144.0" y="453" width="3.4" height="15.0" fill="rgb(250,95,39)" rx="2" ry="2" />
<text  x="1146.96" y="463.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (6 samples, 0.15%)</title><rect x="88.8" y="693" width="1.7" height="15.0" fill="rgb(206,6,47)" rx="2" ry="2" />
<text  x="91.76" y="703.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="1142.2" y="485" width="0.3" height="15.0" fill="rgb(219,116,10)" rx="2" ry="2" />
<text  x="1145.22" y="495.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook (1 samples, 0.02%)</title><rect x="1109.8" y="517" width="0.3" height="15.0" fill="rgb(242,68,30)" rx="2" ry="2" />
<text  x="1112.79" y="527.5" ></text>
</g>
<g >
<title>cpu_startup_entry (92 samples, 2.26%)</title><rect x="1112.4" y="725" width="26.6" height="15.0" fill="rgb(214,36,4)" rx="2" ry="2" />
<text  x="1115.40" y="735.5" >c..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (20 samples, 0.49%)</title><rect x="797.1" y="533" width="5.7" height="15.0" fill="rgb(217,159,21)" rx="2" ry="2" />
<text  x="800.05" y="543.5" ></text>
</g>
<g >
<title>xas_create (1 samples, 0.02%)</title><rect x="1108.9" y="549" width="0.3" height="15.0" fill="rgb(222,174,48)" rx="2" ry="2" />
<text  x="1111.92" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="166.7" y="597" width="0.2" height="15.0" fill="rgb(216,208,28)" rx="2" ry="2" />
<text  x="169.66" y="607.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (2 samples, 0.05%)</title><rect x="572.6" y="693" width="0.6" height="15.0" fill="rgb(228,128,45)" rx="2" ry="2" />
<text  x="575.64" y="703.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (1,353 samples, 33.20%)</title><rect x="166.7" y="693" width="391.7" height="15.0" fill="rgb(210,93,38)" rx="2" ry="2" />
<text  x="169.66" y="703.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (73 samples, 1.79%)</title><rect x="420.3" y="517" width="21.2" height="15.0" fill="rgb(209,157,9)" rx="2" ry="2" />
<text  x="423.32" y="527.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="35.2" y="293" width="0.3" height="15.0" fill="rgb(253,221,14)" rx="2" ry="2" />
<text  x="38.19" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.22%)</title><rect x="854.4" y="565" width="2.6" height="15.0" fill="rgb(219,112,28)" rx="2" ry="2" />
<text  x="857.39" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.44%)</title><rect x="865.1" y="581" width="5.2" height="15.0" fill="rgb(206,121,34)" rx="2" ry="2" />
<text  x="868.10" y="591.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1148.9" y="469" width="0.3" height="15.0" fill="rgb(245,42,47)" rx="2" ry="2" />
<text  x="1151.88" y="479.5" ></text>
</g>
<g >
<title>shrink_slab (4 samples, 0.10%)</title><rect x="1110.4" y="661" width="1.1" height="15.0" fill="rgb(252,135,29)" rx="2" ry="2" />
<text  x="1113.37" y="671.5" ></text>
</g>
<g >
<title>NaClHostDescRead (1,353 samples, 33.20%)</title><rect x="166.7" y="677" width="391.7" height="15.0" fill="rgb(213,10,34)" rx="2" ry="2" />
<text  x="169.66" y="687.5" >NaClHostDescRead</text>
</g>
<g >
<title>mblen (1 samples, 0.02%)</title><rect x="10.0" y="693" width="0.3" height="15.0" fill="rgb(217,137,45)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="558.7" y="565" width="0.3" height="15.0" fill="rgb(226,23,33)" rx="2" ry="2" />
<text  x="561.74" y="575.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (21 samples, 0.52%)</title><rect x="193.9" y="581" width="6.1" height="15.0" fill="rgb(207,20,51)" rx="2" ry="2" />
<text  x="196.88" y="591.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (8 samples, 0.20%)</title><rect x="810.4" y="517" width="2.3" height="15.0" fill="rgb(231,74,3)" rx="2" ry="2" />
<text  x="813.37" y="527.5" ></text>
</g>
<g >
<title>exc_page_fault (101 samples, 2.48%)</title><rect x="1005.5" y="725" width="29.3" height="15.0" fill="rgb(230,123,28)" rx="2" ry="2" />
<text  x="1008.54" y="735.5" >ex..</text>
</g>
<g >
<title>truncate_inode_page (1 samples, 0.02%)</title><rect x="1095.6" y="405" width="0.3" height="15.0" fill="rgb(212,152,43)" rx="2" ry="2" />
<text  x="1098.60" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (7 samples, 0.17%)</title><rect x="163.8" y="645" width="2.0" height="15.0" fill="rgb(205,195,19)" rx="2" ry="2" />
<text  x="166.76" y="655.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.02%)</title><rect x="164.3" y="405" width="0.3" height="15.0" fill="rgb(231,76,33)" rx="2" ry="2" />
<text  x="167.34" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (3 samples, 0.07%)</title><rect x="164.9" y="325" width="0.9" height="15.0" fill="rgb(252,90,45)" rx="2" ry="2" />
<text  x="167.92" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.29%)</title><rect x="812.7" y="549" width="3.5" height="15.0" fill="rgb(209,122,13)" rx="2" ry="2" />
<text  x="815.69" y="559.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (78 samples, 1.91%)</title><rect x="10.6" y="693" width="22.6" height="15.0" fill="rgb(250,88,19)" rx="2" ry="2" />
<text  x="13.58" y="703.5" >p..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="812.1" y="421" width="0.6" height="15.0" fill="rgb(240,214,21)" rx="2" ry="2" />
<text  x="815.11" y="431.5" ></text>
</g>
<g >
<title>__perf_event_enable (2 samples, 0.05%)</title><rect x="36.4" y="565" width="0.5" height="15.0" fill="rgb(236,207,49)" rx="2" ry="2" />
<text  x="39.35" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.05%)</title><rect x="68.2" y="709" width="0.6" height="15.0" fill="rgb(210,147,35)" rx="2" ry="2" />
<text  x="71.20" y="719.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (20 samples, 0.49%)</title><rect x="1142.5" y="501" width="5.8" height="15.0" fill="rgb(207,207,30)" rx="2" ry="2" />
<text  x="1145.51" y="511.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="750.7" y="389" width="0.3" height="15.0" fill="rgb(245,225,7)" rx="2" ry="2" />
<text  x="753.72" y="399.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="35.5" y="293" width="0.3" height="15.0" fill="rgb(238,170,12)" rx="2" ry="2" />
<text  x="38.48" y="303.5" ></text>
</g>
<g >
<title>NaClLog (7 samples, 0.17%)</title><rect x="921.9" y="629" width="2.0" height="15.0" fill="rgb(209,205,24)" rx="2" ry="2" />
<text  x="924.86" y="639.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (2 samples, 0.05%)</title><rect x="1041.2" y="725" width="0.5" height="15.0" fill="rgb(219,120,50)" rx="2" ry="2" />
<text  x="1044.16" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (4 samples, 0.10%)</title><rect x="48.5" y="741" width="1.2" height="15.0" fill="rgb(254,74,32)" rx="2" ry="2" />
<text  x="51.51" y="751.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (1 samples, 0.02%)</title><rect x="1078.2" y="373" width="0.3" height="15.0" fill="rgb(222,1,23)" rx="2" ry="2" />
<text  x="1081.23" y="383.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.49%)</title><rect x="797.1" y="565" width="5.7" height="15.0" fill="rgb(213,63,40)" rx="2" ry="2" />
<text  x="800.05" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="938.7" y="581" width="0.2" height="15.0" fill="rgb(254,186,36)" rx="2" ry="2" />
<text  x="941.65" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.02%)</title><rect x="855.5" y="501" width="0.3" height="15.0" fill="rgb(231,56,13)" rx="2" ry="2" />
<text  x="858.55" y="511.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.05%)</title><rect x="36.4" y="613" width="0.5" height="15.0" fill="rgb(238,128,31)" rx="2" ry="2" />
<text  x="39.35" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="938.7" y="565" width="0.2" height="15.0" fill="rgb(246,60,0)" rx="2" ry="2" />
<text  x="941.65" y="575.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="1187.7" y="597" width="0.3" height="15.0" fill="rgb(234,52,15)" rx="2" ry="2" />
<text  x="1190.68" y="607.5" ></text>
</g>
<g >
<title>irq_exit_rcu (14 samples, 0.34%)</title><rect x="1150.6" y="549" width="4.1" height="15.0" fill="rgb(206,8,36)" rx="2" ry="2" />
<text  x="1153.62" y="559.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (45 samples, 1.10%)</title><rect x="857.3" y="613" width="13.0" height="15.0" fill="rgb(220,102,45)" rx="2" ry="2" />
<text  x="860.28" y="623.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="1185.4" y="533" width="0.3" height="15.0" fill="rgb(224,79,7)" rx="2" ry="2" />
<text  x="1188.37" y="543.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="856.4" y="485" width="0.3" height="15.0" fill="rgb(205,124,24)" rx="2" ry="2" />
<text  x="859.41" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.17%)</title><rect x="852.4" y="517" width="2.0" height="15.0" fill="rgb(222,109,38)" rx="2" ry="2" />
<text  x="855.36" y="527.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.05%)</title><rect x="1187.1" y="597" width="0.6" height="15.0" fill="rgb(216,39,35)" rx="2" ry="2" />
<text  x="1190.10" y="607.5" ></text>
</g>
<g >
<title>NaClMutexLock (19 samples, 0.47%)</title><rect x="142.6" y="693" width="5.5" height="15.0" fill="rgb(247,134,21)" rx="2" ry="2" />
<text  x="145.62" y="703.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="1042.6" y="741" width="0.3" height="15.0" fill="rgb(251,117,28)" rx="2" ry="2" />
<text  x="1045.61" y="751.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="1078.2" y="213" width="0.3" height="15.0" fill="rgb(226,186,28)" rx="2" ry="2" />
<text  x="1081.23" y="223.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (28 samples, 0.69%)</title><rect x="890.6" y="661" width="8.1" height="15.0" fill="rgb(226,97,13)" rx="2" ry="2" />
<text  x="893.58" y="671.5" ></text>
</g>
<g >
<title>arch_do_signal (23 samples, 0.56%)</title><rect x="1089.2" y="677" width="6.7" height="15.0" fill="rgb(227,225,27)" rx="2" ry="2" />
<text  x="1092.23" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.02%)</title><rect x="33.2" y="645" width="0.3" height="15.0" fill="rgb(239,28,38)" rx="2" ry="2" />
<text  x="36.17" y="655.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.02%)</title><rect x="92.8" y="693" width="0.3" height="15.0" fill="rgb(228,51,19)" rx="2" ry="2" />
<text  x="95.82" y="703.5" ></text>
</g>
<g >
<title>std::fs::remove_file (1 samples, 0.02%)</title><rect x="164.6" y="581" width="0.3" height="15.0" fill="rgb(217,107,40)" rx="2" ry="2" />
<text  x="167.63" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.39%)</title><rect x="605.6" y="613" width="4.7" height="15.0" fill="rgb(225,206,37)" rx="2" ry="2" />
<text  x="608.65" y="623.5" ></text>
</g>
<g >
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="558.7" y="517" width="0.3" height="15.0" fill="rgb(219,76,32)" rx="2" ry="2" />
<text  x="561.74" y="527.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.02%)</title><rect x="1095.3" y="533" width="0.3" height="15.0" fill="rgb(241,162,47)" rx="2" ry="2" />
<text  x="1098.31" y="543.5" ></text>
</g>
<g >
<title>cpuidle_select (17 samples, 0.42%)</title><rect x="1179.9" y="613" width="4.9" height="15.0" fill="rgb(235,158,40)" rx="2" ry="2" />
<text  x="1182.87" y="623.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.02%)</title><rect x="150.4" y="341" width="0.3" height="15.0" fill="rgb(241,72,44)" rx="2" ry="2" />
<text  x="153.44" y="351.5" ></text>
</g>
<g >
<title>kthread (14 samples, 0.34%)</title><rect x="1108.3" y="741" width="4.1" height="15.0" fill="rgb(211,118,12)" rx="2" ry="2" />
<text  x="1111.34" y="751.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (21 samples, 0.52%)</title><rect x="910.6" y="629" width="6.0" height="15.0" fill="rgb(209,69,25)" rx="2" ry="2" />
<text  x="913.56" y="639.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="150.4" y="389" width="0.3" height="15.0" fill="rgb(227,66,32)" rx="2" ry="2" />
<text  x="153.44" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="1078.2" y="341" width="0.3" height="15.0" fill="rgb(220,159,10)" rx="2" ry="2" />
<text  x="1081.23" y="351.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.02%)</title><rect x="558.2" y="613" width="0.2" height="15.0" fill="rgb(212,89,17)" rx="2" ry="2" />
<text  x="561.16" y="623.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.02%)</title><rect x="1108.1" y="677" width="0.2" height="15.0" fill="rgb(238,162,51)" rx="2" ry="2" />
<text  x="1111.05" y="687.5" ></text>
</g>
<g >
<title>page_cache_delete (1 samples, 0.02%)</title><rect x="1095.6" y="357" width="0.3" height="15.0" fill="rgb(240,132,52)" rx="2" ry="2" />
<text  x="1098.60" y="367.5" ></text>
</g>
<g >
<title>NaClXMutexLock (36 samples, 0.88%)</title><rect x="928.5" y="661" width="10.4" height="15.0" fill="rgb(251,102,22)" rx="2" ry="2" />
<text  x="931.52" y="671.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (612 samples, 15.02%)</title><rect x="372.5" y="549" width="177.3" height="15.0" fill="rgb(253,153,46)" rx="2" ry="2" />
<text  x="375.54" y="559.5" >ringbuf::consumer::Cons..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1,350 samples, 33.13%)</title><rect x="166.9" y="597" width="391.0" height="15.0" fill="rgb(206,127,53)" rx="2" ry="2" />
<text  x="169.95" y="607.5" >rustposix::interface::pipe::EmulatedPipe::read_from_p..</text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="1185.1" y="517" width="0.3" height="15.0" fill="rgb(208,78,48)" rx="2" ry="2" />
<text  x="1188.08" y="527.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.02%)</title><rect x="557.9" y="581" width="0.3" height="15.0" fill="rgb(227,1,21)" rx="2" ry="2" />
<text  x="560.87" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="1078.2" y="389" width="0.3" height="15.0" fill="rgb(226,109,1)" rx="2" ry="2" />
<text  x="1081.23" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (1 samples, 0.02%)</title><rect x="150.4" y="533" width="0.3" height="15.0" fill="rgb(222,63,49)" rx="2" ry="2" />
<text  x="153.44" y="543.5" ></text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.02%)</title><rect x="150.4" y="645" width="0.3" height="15.0" fill="rgb(253,102,1)" rx="2" ry="2" />
<text  x="153.44" y="655.5" ></text>
</g>
<g >
<title>iput_final (2 samples, 0.05%)</title><rect x="1110.9" y="501" width="0.6" height="15.0" fill="rgb(209,1,7)" rx="2" ry="2" />
<text  x="1113.95" y="511.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (24 samples, 0.59%)</title><rect x="564.8" y="645" width="7.0" height="15.0" fill="rgb(242,203,3)" rx="2" ry="2" />
<text  x="567.82" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1077.4" y="725" width="0.2" height="15.0" fill="rgb(206,216,17)" rx="2" ry="2" />
<text  x="1080.36" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="558.7" y="629" width="0.3" height="15.0" fill="rgb(224,127,5)" rx="2" ry="2" />
<text  x="561.74" y="639.5" ></text>
</g>
<g >
<title>__close_fd (1 samples, 0.02%)</title><rect x="33.5" y="597" width="0.2" height="15.0" fill="rgb(235,175,31)" rx="2" ry="2" />
<text  x="36.46" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (77 samples, 1.89%)</title><rect x="10.6" y="613" width="22.3" height="15.0" fill="rgb(242,113,17)" rx="2" ry="2" />
<text  x="13.58" y="623.5" >_..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="750.7" y="357" width="0.3" height="15.0" fill="rgb(251,81,39)" rx="2" ry="2" />
<text  x="753.72" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="1078.2" y="453" width="0.3" height="15.0" fill="rgb(222,130,19)" rx="2" ry="2" />
<text  x="1081.23" y="463.5" ></text>
</g>
<g >
<title>__GI___open_nocancel (1 samples, 0.02%)</title><rect x="10.3" y="613" width="0.3" height="15.0" fill="rgb(236,222,26)" rx="2" ry="2" />
<text  x="13.29" y="623.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (1 samples, 0.02%)</title><rect x="150.2" y="725" width="0.2" height="15.0" fill="rgb(224,90,11)" rx="2" ry="2" />
<text  x="153.15" y="735.5" ></text>
</g>
<g >
<title>sched_autogroup_exit_task (1 samples, 0.02%)</title><rect x="1088.7" y="693" width="0.2" height="15.0" fill="rgb(221,198,47)" rx="2" ry="2" />
<text  x="1091.65" y="703.5" ></text>
</g>
<g >
<title>shrink_inactive_list (6 samples, 0.15%)</title><rect x="1108.6" y="645" width="1.8" height="15.0" fill="rgb(214,54,11)" rx="2" ry="2" />
<text  x="1111.63" y="655.5" ></text>
</g>
<g >
<title>new_sync_write (8 samples, 0.20%)</title><rect x="34.0" y="517" width="2.4" height="15.0" fill="rgb(222,23,13)" rx="2" ry="2" />
<text  x="37.03" y="527.5" ></text>
</g>
<g >
<title>arch_cpu_idle_exit (1 samples, 0.02%)</title><rect x="1139.0" y="645" width="0.3" height="15.0" fill="rgb(226,129,4)" rx="2" ry="2" />
<text  x="1142.04" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (43 samples, 1.06%)</title><rect x="654.6" y="549" width="12.4" height="15.0" fill="rgb(223,127,30)" rx="2" ry="2" />
<text  x="657.58" y="559.5" ></text>
</g>
<g >
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="938.7" y="517" width="0.2" height="15.0" fill="rgb(230,150,21)" rx="2" ry="2" />
<text  x="941.65" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.37%)</title><rect x="634.3" y="533" width="4.4" height="15.0" fill="rgb(217,79,29)" rx="2" ry="2" />
<text  x="637.31" y="543.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.79%)</title><rect x="645.0" y="581" width="9.3" height="15.0" fill="rgb(213,132,7)" rx="2" ry="2" />
<text  x="648.03" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt_r (1 samples, 0.02%)</title><rect x="164.3" y="501" width="0.3" height="15.0" fill="rgb(223,35,39)" rx="2" ry="2" />
<text  x="167.34" y="511.5" ></text>
</g>
<g >
<title>dispatcher (1,353 samples, 33.20%)</title><rect x="166.7" y="645" width="391.7" height="15.0" fill="rgb(227,86,22)" rx="2" ry="2" />
<text  x="169.66" y="655.5" >dispatcher</text>
</g>
<g >
<title>handle_mm_fault (91 samples, 2.23%)</title><rect x="1006.1" y="693" width="26.4" height="15.0" fill="rgb(223,113,21)" rx="2" ry="2" />
<text  x="1009.12" y="703.5" >h..</text>
</g>
<g >
<title>delete_from_page_cache (1 samples, 0.02%)</title><rect x="1095.6" y="389" width="0.3" height="15.0" fill="rgb(221,107,15)" rx="2" ry="2" />
<text  x="1098.60" y="399.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (21 samples, 0.52%)</title><rect x="142.0" y="725" width="6.1" height="15.0" fill="rgb(218,206,35)" rx="2" ry="2" />
<text  x="145.04" y="735.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (18 samples, 0.44%)</title><rect x="916.6" y="629" width="5.3" height="15.0" fill="rgb(223,122,3)" rx="2" ry="2" />
<text  x="919.65" y="639.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::new (1 samples, 0.02%)</title><rect x="164.3" y="581" width="0.3" height="15.0" fill="rgb(235,50,30)" rx="2" ry="2" />
<text  x="167.34" y="591.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="1026.7" y="533" width="0.3" height="15.0" fill="rgb(223,33,26)" rx="2" ry="2" />
<text  x="1029.68" y="543.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.02%)</title><rect x="1178.1" y="581" width="0.3" height="15.0" fill="rgb(214,21,20)" rx="2" ry="2" />
<text  x="1181.13" y="591.5" ></text>
</g>
<g >
<title>inode_permission (1 samples, 0.02%)</title><rect x="164.6" y="405" width="0.3" height="15.0" fill="rgb(208,51,13)" rx="2" ry="2" />
<text  x="167.63" y="415.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (1 samples, 0.02%)</title><rect x="1145.7" y="405" width="0.3" height="15.0" fill="rgb(254,185,6)" rx="2" ry="2" />
<text  x="1148.70" y="415.5" ></text>
</g>
<g >
<title>es_do_reclaim_extents (1 samples, 0.02%)</title><rect x="1110.4" y="581" width="0.3" height="15.0" fill="rgb(249,209,7)" rx="2" ry="2" />
<text  x="1113.37" y="591.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.02%)</title><rect x="150.4" y="357" width="0.3" height="15.0" fill="rgb(223,107,9)" rx="2" ry="2" />
<text  x="153.44" y="367.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="1187.4" y="469" width="0.3" height="15.0" fill="rgb(253,223,46)" rx="2" ry="2" />
<text  x="1190.39" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="163.8" y="501" width="0.5" height="15.0" fill="rgb(240,108,25)" rx="2" ry="2" />
<text  x="166.76" y="511.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (5 samples, 0.12%)</title><rect x="670.5" y="549" width="1.5" height="15.0" fill="rgb(206,205,7)" rx="2" ry="2" />
<text  x="673.51" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.27%)</title><rect x="645.0" y="533" width="3.2" height="15.0" fill="rgb(253,43,8)" rx="2" ry="2" />
<text  x="648.03" y="543.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="1090.4" y="469" width="0.3" height="15.0" fill="rgb(224,195,17)" rx="2" ry="2" />
<text  x="1093.39" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (2 samples, 0.05%)</title><rect x="1185.1" y="565" width="0.6" height="15.0" fill="rgb(238,218,40)" rx="2" ry="2" />
<text  x="1188.08" y="575.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.02%)</title><rect x="1187.7" y="581" width="0.3" height="15.0" fill="rgb(234,169,9)" rx="2" ry="2" />
<text  x="1190.68" y="591.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.05%)</title><rect x="164.9" y="197" width="0.6" height="15.0" fill="rgb(245,145,21)" rx="2" ry="2" />
<text  x="167.92" y="207.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (2 samples, 0.05%)</title><rect x="947.3" y="693" width="0.6" height="15.0" fill="rgb(228,80,7)" rx="2" ry="2" />
<text  x="950.34" y="703.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (38 samples, 0.93%)</title><rect x="740.0" y="533" width="11.0" height="15.0" fill="rgb(205,143,2)" rx="2" ry="2" />
<text  x="743.01" y="543.5" ></text>
</g>
<g >
<title>rebalance_domains (8 samples, 0.20%)</title><rect x="1151.2" y="469" width="2.3" height="15.0" fill="rgb(236,115,8)" rx="2" ry="2" />
<text  x="1154.20" y="479.5" ></text>
</g>
<g >
<title>release_pages (10 samples, 0.25%)</title><rect x="1092.1" y="469" width="2.9" height="15.0" fill="rgb(229,190,34)" rx="2" ry="2" />
<text  x="1095.13" y="479.5" ></text>
</g>
<g >
<title>core::cmp::min (5 samples, 0.12%)</title><rect x="670.5" y="581" width="1.5" height="15.0" fill="rgb(243,128,2)" rx="2" ry="2" />
<text  x="673.51" y="591.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (1 samples, 0.02%)</title><rect x="166.4" y="613" width="0.3" height="15.0" fill="rgb(211,222,27)" rx="2" ry="2" />
<text  x="169.37" y="623.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (1 samples, 0.02%)</title><rect x="96.6" y="741" width="0.3" height="15.0" fill="rgb(227,131,5)" rx="2" ry="2" />
<text  x="99.58" y="751.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_init (2 samples, 0.05%)</title><rect x="627.7" y="565" width="0.5" height="15.0" fill="rgb(242,35,10)" rx="2" ry="2" />
<text  x="630.65" y="575.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.02%)</title><rect x="1145.7" y="389" width="0.3" height="15.0" fill="rgb(231,223,46)" rx="2" ry="2" />
<text  x="1148.70" y="399.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (8 samples, 0.20%)</title><rect x="34.0" y="421" width="2.4" height="15.0" fill="rgb(230,129,18)" rx="2" ry="2" />
<text  x="37.03" y="431.5" ></text>
</g>
<g >
<title>NaClLog (2 samples, 0.05%)</title><rect x="888.8" y="661" width="0.6" height="15.0" fill="rgb(233,38,11)" rx="2" ry="2" />
<text  x="891.85" y="671.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.07%)</title><rect x="164.9" y="261" width="0.9" height="15.0" fill="rgb(225,40,40)" rx="2" ry="2" />
<text  x="167.92" y="271.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (1 samples, 0.02%)</title><rect x="1187.4" y="453" width="0.3" height="15.0" fill="rgb(222,217,49)" rx="2" ry="2" />
<text  x="1190.39" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (1 samples, 0.02%)</title><rect x="93.4" y="693" width="0.3" height="15.0" fill="rgb(244,69,16)" rx="2" ry="2" />
<text  x="96.40" y="703.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.02%)</title><rect x="1178.4" y="565" width="0.3" height="15.0" fill="rgb(249,180,3)" rx="2" ry="2" />
<text  x="1181.42" y="575.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.02%)</title><rect x="871.2" y="677" width="0.3" height="15.0" fill="rgb(226,106,1)" rx="2" ry="2" />
<text  x="874.18" y="687.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (2 samples, 0.05%)</title><rect x="36.4" y="517" width="0.5" height="15.0" fill="rgb(233,184,4)" rx="2" ry="2" />
<text  x="39.35" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1 samples, 0.02%)</title><rect x="166.7" y="565" width="0.2" height="15.0" fill="rgb(216,171,54)" rx="2" ry="2" />
<text  x="169.66" y="575.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="1040.0" y="517" width="0.3" height="15.0" fill="rgb(243,135,16)" rx="2" ry="2" />
<text  x="1043.00" y="527.5" ></text>
</g>
<g >
<title>NaClSysWrite (1 samples, 0.02%)</title><rect x="41.3" y="741" width="0.3" height="15.0" fill="rgb(216,152,36)" rx="2" ry="2" />
<text  x="44.27" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_write (8 samples, 0.20%)</title><rect x="34.0" y="565" width="2.4" height="15.0" fill="rgb(249,31,29)" rx="2" ry="2" />
<text  x="37.03" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.27%)</title><rect x="812.7" y="533" width="3.2" height="15.0" fill="rgb(251,90,24)" rx="2" ry="2" />
<text  x="815.69" y="543.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.05%)</title><rect x="1095.9" y="741" width="0.6" height="15.0" fill="rgb(213,11,49)" rx="2" ry="2" />
<text  x="1098.89" y="751.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="90.8" y="709" width="0.3" height="15.0" fill="rgb(216,190,7)" rx="2" ry="2" />
<text  x="93.79" y="719.5" ></text>
</g>
<g >
<title>shrink_lruvec (6 samples, 0.15%)</title><rect x="1108.6" y="661" width="1.8" height="15.0" fill="rgb(254,221,34)" rx="2" ry="2" />
<text  x="1111.63" y="671.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.02%)</title><rect x="10.0" y="741" width="0.3" height="15.0" fill="rgb(252,73,11)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (18 samples, 0.44%)</title><rect x="865.1" y="565" width="5.2" height="15.0" fill="rgb(212,13,3)" rx="2" ry="2" />
<text  x="868.10" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.15%)</title><rect x="852.4" y="501" width="1.7" height="15.0" fill="rgb(243,92,12)" rx="2" ry="2" />
<text  x="855.36" y="511.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="1034.5" y="693" width="0.3" height="15.0" fill="rgb(249,11,20)" rx="2" ry="2" />
<text  x="1037.50" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_write (2 samples, 0.05%)</title><rect x="163.8" y="485" width="0.5" height="15.0" fill="rgb(205,159,49)" rx="2" ry="2" />
<text  x="166.76" y="495.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (1 samples, 0.02%)</title><rect x="1188.8" y="597" width="0.3" height="15.0" fill="rgb(219,34,36)" rx="2" ry="2" />
<text  x="1191.84" y="607.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (1 samples, 0.02%)</title><rect x="816.2" y="565" width="0.3" height="15.0" fill="rgb(252,164,35)" rx="2" ry="2" />
<text  x="819.16" y="575.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (2 samples, 0.05%)</title><rect x="1110.9" y="549" width="0.6" height="15.0" fill="rgb(247,201,24)" rx="2" ry="2" />
<text  x="1113.95" y="559.5" ></text>
</g>
<g >
<title>open_verify.constprop.0 (1 samples, 0.02%)</title><rect x="10.3" y="629" width="0.3" height="15.0" fill="rgb(229,132,42)" rx="2" ry="2" />
<text  x="13.29" y="639.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="750.7" y="405" width="0.3" height="15.0" fill="rgb(252,25,5)" rx="2" ry="2" />
<text  x="753.72" y="415.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (34 samples, 0.83%)</title><rect x="153.0" y="645" width="9.9" height="15.0" fill="rgb(242,102,50)" rx="2" ry="2" />
<text  x="156.05" y="655.5" ></text>
</g>
<g >
<title>dispatcher (2 samples, 0.05%)</title><rect x="847.7" y="597" width="0.6" height="15.0" fill="rgb(211,151,22)" rx="2" ry="2" />
<text  x="850.73" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_poll (2 samples, 0.05%)</title><rect x="1106.9" y="725" width="0.6" height="15.0" fill="rgb(224,207,52)" rx="2" ry="2" />
<text  x="1109.89" y="735.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="1026.7" y="549" width="0.3" height="15.0" fill="rgb(211,201,54)" rx="2" ry="2" />
<text  x="1029.68" y="559.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="162.9" y="693" width="0.6" height="15.0" fill="rgb(218,170,53)" rx="2" ry="2" />
<text  x="165.89" y="703.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.02%)</title><rect x="1078.5" y="709" width="0.3" height="15.0" fill="rgb(222,169,39)" rx="2" ry="2" />
<text  x="1081.52" y="719.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.05%)</title><rect x="1077.9" y="709" width="0.6" height="15.0" fill="rgb(241,229,37)" rx="2" ry="2" />
<text  x="1080.94" y="719.5" ></text>
</g>
<g >
<title>ret_from_fork (14 samples, 0.34%)</title><rect x="1108.3" y="757" width="4.1" height="15.0" fill="rgb(241,91,12)" rx="2" ry="2" />
<text  x="1111.34" y="767.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1148.0" y="485" width="0.3" height="15.0" fill="rgb(220,130,25)" rx="2" ry="2" />
<text  x="1151.01" y="495.5" ></text>
</g>
<g >
<title>do_select (1 samples, 0.02%)</title><rect x="1107.8" y="677" width="0.3" height="15.0" fill="rgb(211,229,33)" rx="2" ry="2" />
<text  x="1110.76" y="687.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.02%)</title><rect x="1039.7" y="645" width="0.3" height="15.0" fill="rgb(253,61,16)" rx="2" ry="2" />
<text  x="1042.71" y="655.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (2 samples, 0.05%)</title><rect x="38.1" y="741" width="0.6" height="15.0" fill="rgb(216,69,15)" rx="2" ry="2" />
<text  x="41.09" y="751.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.02%)</title><rect x="1147.1" y="341" width="0.3" height="15.0" fill="rgb(253,225,33)" rx="2" ry="2" />
<text  x="1150.14" y="351.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.02%)</title><rect x="1107.5" y="709" width="0.3" height="15.0" fill="rgb(209,30,47)" rx="2" ry="2" />
<text  x="1110.47" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.02%)</title><rect x="150.4" y="581" width="0.3" height="15.0" fill="rgb(215,134,38)" rx="2" ry="2" />
<text  x="153.44" y="591.5" ></text>
</g>
<g >
<title>__free_one_page (2 samples, 0.05%)</title><rect x="1094.2" y="405" width="0.5" height="15.0" fill="rgb(212,2,2)" rx="2" ry="2" />
<text  x="1097.15" y="415.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="93.4" y="725" width="0.3" height="15.0" fill="rgb(217,125,22)" rx="2" ry="2" />
<text  x="96.40" y="735.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.02%)</title><rect x="1031.3" y="613" width="0.3" height="15.0" fill="rgb(243,74,22)" rx="2" ry="2" />
<text  x="1034.32" y="623.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.02%)</title><rect x="1088.7" y="645" width="0.2" height="15.0" fill="rgb(244,182,35)" rx="2" ry="2" />
<text  x="1091.65" y="655.5" ></text>
</g>
<g >
<title>[unknown] (134 samples, 3.29%)</title><rect x="1038.6" y="757" width="38.8" height="15.0" fill="rgb(218,193,3)" rx="2" ry="2" />
<text  x="1041.55" y="767.5" >[un..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.22%)</title><rect x="854.4" y="581" width="2.6" height="15.0" fill="rgb(244,15,11)" rx="2" ry="2" />
<text  x="857.39" y="591.5" ></text>
</g>
<g >
<title>mmput (21 samples, 0.52%)</title><rect x="1089.2" y="597" width="6.1" height="15.0" fill="rgb(237,191,18)" rx="2" ry="2" />
<text  x="1092.23" y="607.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="14.1" y="501" width="0.2" height="15.0" fill="rgb(242,4,11)" rx="2" ry="2" />
<text  x="17.05" y="511.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (3 samples, 0.07%)</title><rect x="164.9" y="597" width="0.9" height="15.0" fill="rgb(254,146,45)" rx="2" ry="2" />
<text  x="167.92" y="607.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (31 samples, 0.76%)</title><rect x="879.9" y="661" width="8.9" height="15.0" fill="rgb(225,43,50)" rx="2" ry="2" />
<text  x="882.87" y="671.5" ></text>
</g>
<g >
<title>tick_program_event (2 samples, 0.05%)</title><rect x="1148.6" y="501" width="0.6" height="15.0" fill="rgb(233,206,22)" rx="2" ry="2" />
<text  x="1151.59" y="511.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (7 samples, 0.17%)</title><rect x="163.8" y="725" width="2.0" height="15.0" fill="rgb(244,86,19)" rx="2" ry="2" />
<text  x="166.76" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (21 samples, 0.52%)</title><rect x="628.2" y="597" width="6.1" height="15.0" fill="rgb(216,172,40)" rx="2" ry="2" />
<text  x="631.23" y="607.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.02%)</title><rect x="35.2" y="277" width="0.3" height="15.0" fill="rgb(221,163,17)" rx="2" ry="2" />
<text  x="38.19" y="287.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.02%)</title><rect x="150.4" y="693" width="0.3" height="15.0" fill="rgb(253,69,28)" rx="2" ry="2" />
<text  x="153.44" y="703.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (1 samples, 0.02%)</title><rect x="10.3" y="693" width="0.3" height="15.0" fill="rgb(240,181,7)" rx="2" ry="2" />
<text  x="13.29" y="703.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.02%)</title><rect x="1178.7" y="565" width="0.3" height="15.0" fill="rgb(223,121,32)" rx="2" ry="2" />
<text  x="1181.71" y="575.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (1 samples, 0.02%)</title><rect x="1183.1" y="565" width="0.2" height="15.0" fill="rgb(216,131,7)" rx="2" ry="2" />
<text  x="1186.05" y="575.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (37 samples, 0.91%)</title><rect x="634.3" y="597" width="10.7" height="15.0" fill="rgb(246,1,6)" rx="2" ry="2" />
<text  x="637.31" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="68.2" y="693" width="0.6" height="15.0" fill="rgb(215,227,32)" rx="2" ry="2" />
<text  x="71.20" y="703.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.02%)</title><rect x="1078.2" y="469" width="0.3" height="15.0" fill="rgb(218,217,27)" rx="2" ry="2" />
<text  x="1081.23" y="479.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.15%)</title><rect x="808.6" y="533" width="1.8" height="15.0" fill="rgb(240,116,4)" rx="2" ry="2" />
<text  x="811.64" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="152.5" y="517" width="0.3" height="15.0" fill="rgb(205,30,44)" rx="2" ry="2" />
<text  x="155.47" y="527.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="34.3" y="373" width="0.3" height="15.0" fill="rgb(245,148,50)" rx="2" ry="2" />
<text  x="37.32" y="383.5" ></text>
</g>
<g >
<title>DynArrayGet (1 samples, 0.02%)</title><rect x="1039.4" y="741" width="0.3" height="15.0" fill="rgb(243,54,27)" rx="2" ry="2" />
<text  x="1042.42" y="751.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (2 samples, 0.05%)</title><rect x="839.9" y="565" width="0.6" height="15.0" fill="rgb(244,170,12)" rx="2" ry="2" />
<text  x="842.91" y="575.5" ></text>
</g>
<g >
<title>do_user_addr_fault (99 samples, 2.43%)</title><rect x="1005.5" y="709" width="28.7" height="15.0" fill="rgb(215,104,25)" rx="2" ry="2" />
<text  x="1008.54" y="719.5" >do..</text>
</g>
<g >
<title>CopyCodeSafelyInitial (5 samples, 0.12%)</title><rect x="150.7" y="677" width="1.5" height="15.0" fill="rgb(220,127,29)" rx="2" ry="2" />
<text  x="153.73" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (25 samples, 0.61%)</title><rect x="1088.7" y="741" width="7.2" height="15.0" fill="rgb(252,26,45)" rx="2" ry="2" />
<text  x="1091.65" y="751.5" ></text>
</g>
<g >
<title>dispatcher (7 samples, 0.17%)</title><rect x="163.8" y="677" width="2.0" height="15.0" fill="rgb(225,166,25)" rx="2" ry="2" />
<text  x="166.76" y="687.5" ></text>
</g>
<g >
<title>generic_exec_single (64 samples, 1.57%)</title><rect x="14.3" y="501" width="18.6" height="15.0" fill="rgb(236,141,24)" rx="2" ry="2" />
<text  x="17.34" y="511.5" ></text>
</g>
<g >
<title>NaClStoreMem (1 samples, 0.02%)</title><rect x="165.8" y="549" width="0.3" height="15.0" fill="rgb(235,82,2)" rx="2" ry="2" />
<text  x="168.79" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="33.5" y="645" width="0.2" height="15.0" fill="rgb(247,142,25)" rx="2" ry="2" />
<text  x="36.46" y="655.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1154.1" y="501" width="0.3" height="15.0" fill="rgb(240,26,44)" rx="2" ry="2" />
<text  x="1157.09" y="511.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (9 samples, 0.22%)</title><rect x="851.8" y="549" width="2.6" height="15.0" fill="rgb(237,34,38)" rx="2" ry="2" />
<text  x="854.78" y="559.5" ></text>
</g>
<g >
<title>es_reclaim_extents (1 samples, 0.02%)</title><rect x="1110.4" y="597" width="0.3" height="15.0" fill="rgb(205,93,19)" rx="2" ry="2" />
<text  x="1113.37" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1040.0" y="709" width="0.3" height="15.0" fill="rgb(229,63,6)" rx="2" ry="2" />
<text  x="1043.00" y="719.5" ></text>
</g>
<g >
<title>ovl_write_iter (8 samples, 0.20%)</title><rect x="34.0" y="501" width="2.4" height="15.0" fill="rgb(230,225,27)" rx="2" ry="2" />
<text  x="37.03" y="511.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (1 samples, 0.02%)</title><rect x="857.0" y="597" width="0.3" height="15.0" fill="rgb(247,175,20)" rx="2" ry="2" />
<text  x="859.99" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="938.7" y="597" width="0.2" height="15.0" fill="rgb(250,46,32)" rx="2" ry="2" />
<text  x="941.65" y="607.5" ></text>
</g>
<g >
<title>do_anonymous_page (80 samples, 1.96%)</title><rect x="1009.0" y="645" width="23.2" height="15.0" fill="rgb(246,146,46)" rx="2" ry="2" />
<text  x="1012.02" y="655.5" >d..</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (86 samples, 2.11%)</title><rect x="728.4" y="581" width="24.9" height="15.0" fill="rgb(237,60,24)" rx="2" ry="2" />
<text  x="731.42" y="591.5" >r..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="558.7" y="581" width="0.3" height="15.0" fill="rgb(211,137,54)" rx="2" ry="2" />
<text  x="561.74" y="591.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.02%)</title><rect x="150.4" y="677" width="0.3" height="15.0" fill="rgb(225,176,2)" rx="2" ry="2" />
<text  x="153.44" y="687.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="34.0" y="341" width="0.3" height="15.0" fill="rgb(221,224,10)" rx="2" ry="2" />
<text  x="37.03" y="351.5" ></text>
</g>
<g >
<title>NaClLog (2 samples, 0.05%)</title><rect x="96.9" y="741" width="0.6" height="15.0" fill="rgb(247,201,12)" rx="2" ry="2" />
<text  x="99.87" y="751.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (6 samples, 0.15%)</title><rect x="751.6" y="549" width="1.7" height="15.0" fill="rgb(210,97,44)" rx="2" ry="2" />
<text  x="754.59" y="559.5" ></text>
</g>
<g >
<title>__evlist__enable (78 samples, 1.91%)</title><rect x="10.6" y="709" width="22.6" height="15.0" fill="rgb(234,102,10)" rx="2" ry="2" />
<text  x="13.58" y="719.5" >_..</text>
</g>
<g >
<title>ep_send_events_proc (1 samples, 0.02%)</title><rect x="1106.3" y="661" width="0.3" height="15.0" fill="rgb(250,198,1)" rx="2" ry="2" />
<text  x="1109.31" y="671.5" ></text>
</g>
<g >
<title>__delete_from_page_cache (1 samples, 0.02%)</title><rect x="1108.9" y="597" width="0.3" height="15.0" fill="rgb(233,103,50)" rx="2" ry="2" />
<text  x="1111.92" y="607.5" ></text>
</g>
<g >
<title>Process0Operands (1 samples, 0.02%)</title><rect x="162.6" y="629" width="0.3" height="15.0" fill="rgb(250,209,37)" rx="2" ry="2" />
<text  x="165.60" y="639.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.02%)</title><rect x="1040.0" y="597" width="0.3" height="15.0" fill="rgb(225,85,53)" rx="2" ry="2" />
<text  x="1043.00" y="607.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.10%)</title><rect x="855.8" y="549" width="1.2" height="15.0" fill="rgb(222,92,27)" rx="2" ry="2" />
<text  x="858.84" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (1 samples, 0.02%)</title><rect x="150.4" y="501" width="0.3" height="15.0" fill="rgb(241,169,47)" rx="2" ry="2" />
<text  x="153.44" y="511.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (3 samples, 0.07%)</title><rect x="164.9" y="389" width="0.9" height="15.0" fill="rgb(243,174,11)" rx="2" ry="2" />
<text  x="167.92" y="399.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.02%)</title><rect x="1027.6" y="565" width="0.2" height="15.0" fill="rgb(237,168,13)" rx="2" ry="2" />
<text  x="1030.55" y="575.5" ></text>
</g>
<g >
<title>cpuidle_enter (134 samples, 3.29%)</title><rect x="1141.1" y="613" width="38.8" height="15.0" fill="rgb(244,126,10)" rx="2" ry="2" />
<text  x="1144.06" y="623.5" >cpu..</text>
</g>
<g >
<title>sync_regs (11 samples, 0.27%)</title><rect x="1035.4" y="741" width="3.2" height="15.0" fill="rgb(212,97,33)" rx="2" ry="2" />
<text  x="1038.37" y="751.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.02%)</title><rect x="938.7" y="549" width="0.2" height="15.0" fill="rgb(223,129,48)" rx="2" ry="2" />
<text  x="941.65" y="559.5" ></text>
</g>
<g >
<title>NaClStore64 (1 samples, 0.02%)</title><rect x="1077.9" y="581" width="0.3" height="15.0" fill="rgb(236,218,2)" rx="2" ry="2" />
<text  x="1080.94" y="591.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="1095.6" y="453" width="0.3" height="15.0" fill="rgb(207,170,28)" rx="2" ry="2" />
<text  x="1098.60" y="463.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="166.1" y="661" width="0.3" height="15.0" fill="rgb(233,120,54)" rx="2" ry="2" />
<text  x="169.08" y="671.5" ></text>
</g>
<g >
<title>__libc_open64 (1 samples, 0.02%)</title><rect x="164.3" y="469" width="0.3" height="15.0" fill="rgb(214,45,23)" rx="2" ry="2" />
<text  x="167.34" y="479.5" ></text>
</g>
<g >
<title>all (4,075 samples, 100%)</title><rect x="10.0" y="789" width="1180.0" height="15.0" fill="rgb(228,52,52)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="165.2" y="85" width="0.3" height="15.0" fill="rgb(222,111,21)" rx="2" ry="2" />
<text  x="168.21" y="95.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (46 samples, 1.13%)</title><rect x="610.3" y="597" width="13.3" height="15.0" fill="rgb(245,73,26)" rx="2" ry="2" />
<text  x="613.28" y="607.5" ></text>
</g>
<g >
<title>_perf_ioctl (71 samples, 1.74%)</title><rect x="12.3" y="581" width="20.6" height="15.0" fill="rgb(238,69,22)" rx="2" ry="2" />
<text  x="15.32" y="591.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (86 samples, 2.11%)</title><rect x="1112.4" y="661" width="24.9" height="15.0" fill="rgb(254,21,8)" rx="2" ry="2" />
<text  x="1115.40" y="671.5" >c..</text>
</g>
<g >
<title>NaClFastMutexUnlock (24 samples, 0.59%)</title><rect x="899.3" y="677" width="6.9" height="15.0" fill="rgb(207,8,41)" rx="2" ry="2" />
<text  x="902.27" y="687.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="34.3" y="357" width="0.3" height="15.0" fill="rgb(207,134,51)" rx="2" ry="2" />
<text  x="37.32" y="367.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1112.1" y="709" width="0.3" height="15.0" fill="rgb(249,203,12)" rx="2" ry="2" />
<text  x="1115.11" y="719.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.02%)</title><rect x="1040.0" y="581" width="0.3" height="15.0" fill="rgb(221,61,50)" rx="2" ry="2" />
<text  x="1043.00" y="591.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (13 samples, 0.32%)</title><rect x="86.7" y="741" width="3.8" height="15.0" fill="rgb(209,180,0)" rx="2" ry="2" />
<text  x="89.74" y="751.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (5 samples, 0.12%)</title><rect x="1024.1" y="629" width="1.4" height="15.0" fill="rgb(244,84,45)" rx="2" ry="2" />
<text  x="1027.08" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (4 samples, 0.10%)</title><rect x="206.6" y="581" width="1.2" height="15.0" fill="rgb(208,186,21)" rx="2" ry="2" />
<text  x="209.62" y="591.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.07%)</title><rect x="164.9" y="357" width="0.9" height="15.0" fill="rgb(206,0,8)" rx="2" ry="2" />
<text  x="167.92" y="367.5" ></text>
</g>
<g >
<title>perf_mmap__push (9 samples, 0.22%)</title><rect x="33.7" y="677" width="2.7" height="15.0" fill="rgb(213,199,46)" rx="2" ry="2" />
<text  x="36.74" y="687.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (33 samples, 0.81%)</title><rect x="741.5" y="517" width="9.5" height="15.0" fill="rgb(247,135,21)" rx="2" ry="2" />
<text  x="744.46" y="527.5" ></text>
</g>
<g >
<title>_start (3 samples, 0.07%)</title><rect x="1077.9" y="757" width="0.9" height="15.0" fill="rgb(221,223,7)" rx="2" ry="2" />
<text  x="1080.94" y="767.5" ></text>
</g>
<g >
<title>NaClXMutexLock (1 samples, 0.02%)</title><rect x="558.7" y="661" width="0.3" height="15.0" fill="rgb(251,100,54)" rx="2" ry="2" />
<text  x="561.74" y="671.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1112.4" y="645" width="0.6" height="15.0" fill="rgb(220,3,9)" rx="2" ry="2" />
<text  x="1115.40" y="655.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.02%)</title><rect x="558.7" y="613" width="0.3" height="15.0" fill="rgb(206,38,23)" rx="2" ry="2" />
<text  x="561.74" y="623.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1111.8" y="709" width="0.3" height="15.0" fill="rgb(235,57,17)" rx="2" ry="2" />
<text  x="1114.82" y="719.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.02%)</title><rect x="1112.7" y="613" width="0.3" height="15.0" fill="rgb(231,109,7)" rx="2" ry="2" />
<text  x="1115.68" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.49%)</title><rect x="797.1" y="549" width="5.7" height="15.0" fill="rgb(250,227,30)" rx="2" ry="2" />
<text  x="800.05" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.29%)</title><rect x="848.3" y="533" width="3.5" height="15.0" fill="rgb(221,69,54)" rx="2" ry="2" />
<text  x="851.31" y="543.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.02%)</title><rect x="1112.1" y="661" width="0.3" height="15.0" fill="rgb(214,127,7)" rx="2" ry="2" />
<text  x="1115.11" y="671.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.02%)</title><rect x="654.3" y="549" width="0.3" height="15.0" fill="rgb(234,219,54)" rx="2" ry="2" />
<text  x="657.29" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.05%)</title><rect x="1185.7" y="565" width="0.5" height="15.0" fill="rgb(225,193,31)" rx="2" ry="2" />
<text  x="1188.66" y="575.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (1 samples, 0.02%)</title><rect x="1050.1" y="725" width="0.3" height="15.0" fill="rgb(215,176,7)" rx="2" ry="2" />
<text  x="1053.14" y="735.5" ></text>
</g>
<g >
<title>NaClDescUnref (2 samples, 0.05%)</title><rect x="574.1" y="709" width="0.6" height="15.0" fill="rgb(208,83,24)" rx="2" ry="2" />
<text  x="577.08" y="719.5" ></text>
</g>
<g >
<title>clear_page_erms (30 samples, 0.74%)</title><rect x="1012.2" y="565" width="8.7" height="15.0" fill="rgb(250,138,33)" rx="2" ry="2" />
<text  x="1015.20" y="575.5" ></text>
</g>
<g >
<title>lind_read (1,353 samples, 33.20%)</title><rect x="166.7" y="661" width="391.7" height="15.0" fill="rgb(243,23,0)" rx="2" ry="2" />
<text  x="169.66" y="671.5" >lind_read</text>
</g>
<g >
<title>__delete_from_page_cache (1 samples, 0.02%)</title><rect x="1095.6" y="373" width="0.3" height="15.0" fill="rgb(221,60,38)" rx="2" ry="2" />
<text  x="1098.60" y="383.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (145 samples, 3.56%)</title><rect x="755.1" y="549" width="42.0" height="15.0" fill="rgb(236,157,26)" rx="2" ry="2" />
<text  x="758.07" y="559.5" >rin..</text>
</g>
<g >
<title>__gconv_read_conf (1 samples, 0.02%)</title><rect x="10.0" y="629" width="0.3" height="15.0" fill="rgb(208,175,5)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>set_default_locale (1 samples, 0.02%)</title><rect x="10.0" y="709" width="0.3" height="15.0" fill="rgb(254,170,7)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>_perf_ioctl (2 samples, 0.05%)</title><rect x="36.4" y="693" width="0.5" height="15.0" fill="rgb(225,116,2)" rx="2" ry="2" />
<text  x="39.35" y="703.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="856.7" y="469" width="0.3" height="15.0" fill="rgb(245,219,17)" rx="2" ry="2" />
<text  x="859.70" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="815.3" y="501" width="0.6" height="15.0" fill="rgb(228,201,45)" rx="2" ry="2" />
<text  x="818.30" y="511.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="1078.2" y="293" width="0.3" height="15.0" fill="rgb(217,155,50)" rx="2" ry="2" />
<text  x="1081.23" y="303.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (3 samples, 0.07%)</title><rect x="152.2" y="677" width="0.8" height="15.0" fill="rgb(249,59,22)" rx="2" ry="2" />
<text  x="155.18" y="687.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (43 samples, 1.06%)</title><rect x="1142.2" y="565" width="12.5" height="15.0" fill="rgb(231,188,47)" rx="2" ry="2" />
<text  x="1145.22" y="575.5" ></text>
</g>
<g >
<title>__schedule (7 samples, 0.17%)</title><rect x="1186.2" y="613" width="2.1" height="15.0" fill="rgb(224,162,34)" rx="2" ry="2" />
<text  x="1189.24" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.02%)</title><rect x="1088.9" y="725" width="0.3" height="15.0" fill="rgb(234,214,34)" rx="2" ry="2" />
<text  x="1091.94" y="735.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (23 samples, 0.56%)</title><rect x="1089.2" y="725" width="6.7" height="15.0" fill="rgb(226,212,26)" rx="2" ry="2" />
<text  x="1092.23" y="735.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="1078.2" y="597" width="0.3" height="15.0" fill="rgb(224,106,1)" rx="2" ry="2" />
<text  x="1081.23" y="607.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (32 samples, 0.79%)</title><rect x="847.7" y="629" width="9.3" height="15.0" fill="rgb(241,126,13)" rx="2" ry="2" />
<text  x="850.73" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.02%)</title><rect x="1039.7" y="661" width="0.3" height="15.0" fill="rgb(221,156,37)" rx="2" ry="2" />
<text  x="1042.71" y="671.5" ></text>
</g>
<g >
<title>exit_mmap (21 samples, 0.52%)</title><rect x="1089.2" y="581" width="6.1" height="15.0" fill="rgb(235,172,8)" rx="2" ry="2" />
<text  x="1092.23" y="591.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.02%)</title><rect x="67.6" y="693" width="0.3" height="15.0" fill="rgb(229,41,5)" rx="2" ry="2" />
<text  x="70.62" y="703.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (88 samples, 2.16%)</title><rect x="1112.4" y="693" width="25.5" height="15.0" fill="rgb(239,226,41)" rx="2" ry="2" />
<text  x="1115.40" y="703.5" >c..</text>
</g>
<g >
<title>CopyBundleTails (4 samples, 0.10%)</title><rect x="151.0" y="661" width="1.2" height="15.0" fill="rgb(242,229,52)" rx="2" ry="2" />
<text  x="154.02" y="671.5" ></text>
</g>
<g >
<title>NaClVmmapMakeSorted (1 samples, 0.02%)</title><rect x="166.4" y="645" width="0.3" height="15.0" fill="rgb(237,51,11)" rx="2" ry="2" />
<text  x="169.37" y="655.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (22 samples, 0.54%)</title><rect x="940.4" y="645" width="6.4" height="15.0" fill="rgb(243,204,44)" rx="2" ry="2" />
<text  x="943.39" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (7 samples, 0.17%)</title><rect x="738.0" y="533" width="2.0" height="15.0" fill="rgb(207,121,7)" rx="2" ry="2" />
<text  x="740.98" y="543.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (8 samples, 0.20%)</title><rect x="810.4" y="533" width="2.3" height="15.0" fill="rgb(220,181,48)" rx="2" ry="2" />
<text  x="813.37" y="543.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="93.1" y="725" width="0.3" height="15.0" fill="rgb(246,200,11)" rx="2" ry="2" />
<text  x="96.11" y="735.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="804.3" y="469" width="0.3" height="15.0" fill="rgb(214,185,9)" rx="2" ry="2" />
<text  x="807.29" y="479.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="1147.1" y="357" width="0.3" height="15.0" fill="rgb(212,60,52)" rx="2" ry="2" />
<text  x="1150.14" y="367.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1 samples, 0.02%)</title><rect x="938.7" y="613" width="0.2" height="15.0" fill="rgb(211,51,54)" rx="2" ry="2" />
<text  x="941.65" y="623.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.02%)</title><rect x="1112.1" y="597" width="0.3" height="15.0" fill="rgb(206,207,42)" rx="2" ry="2" />
<text  x="1115.11" y="607.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (4 samples, 0.10%)</title><rect x="809.2" y="485" width="1.2" height="15.0" fill="rgb(228,158,29)" rx="2" ry="2" />
<text  x="812.21" y="495.5" ></text>
</g>
<g >
<title>NaClStore64 (1 samples, 0.02%)</title><rect x="165.8" y="565" width="0.3" height="15.0" fill="rgb(229,122,2)" rx="2" ry="2" />
<text  x="168.79" y="575.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (4 samples, 0.10%)</title><rect x="1185.1" y="581" width="1.1" height="15.0" fill="rgb(228,136,26)" rx="2" ry="2" />
<text  x="1188.08" y="591.5" ></text>
</g>
<g >
<title>__cmd_record (89 samples, 2.18%)</title><rect x="10.6" y="725" width="25.8" height="15.0" fill="rgb(220,125,24)" rx="2" ry="2" />
<text  x="13.58" y="735.5" >_..</text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="1153.8" y="453" width="0.3" height="15.0" fill="rgb(250,159,38)" rx="2" ry="2" />
<text  x="1156.80" y="463.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.02%)</title><rect x="165.8" y="645" width="0.3" height="15.0" fill="rgb(224,160,14)" rx="2" ry="2" />
<text  x="168.79" y="655.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (176 samples, 4.32%)</title><rect x="1139.0" y="741" width="51.0" height="15.0" fill="rgb(224,206,52)" rx="2" ry="2" />
<text  x="1142.04" y="751.5" >x86_6..</text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.02%)</title><rect x="164.6" y="485" width="0.3" height="15.0" fill="rgb(205,20,9)" rx="2" ry="2" />
<text  x="167.63" y="495.5" ></text>
</g>
<g >
<title>NaClMutexLock (34 samples, 0.83%)</title><rect x="929.1" y="645" width="9.8" height="15.0" fill="rgb(215,75,14)" rx="2" ry="2" />
<text  x="932.10" y="655.5" ></text>
</g>
<g >
<title>HandleStackContext (53 samples, 1.30%)</title><rect x="105.6" y="725" width="15.3" height="15.0" fill="rgb(248,160,50)" rx="2" ry="2" />
<text  x="108.56" y="735.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="1027.3" y="565" width="0.3" height="15.0" fill="rgb(237,178,4)" rx="2" ry="2" />
<text  x="1030.26" y="575.5" ></text>
</g>
<g >
<title>main (2 samples, 0.05%)</title><rect x="1077.9" y="725" width="0.6" height="15.0" fill="rgb(207,102,4)" rx="2" ry="2" />
<text  x="1080.94" y="735.5" ></text>
</g>
<g >
<title>__activate_page.part.0 (1 samples, 0.02%)</title><rect x="1090.4" y="437" width="0.3" height="15.0" fill="rgb(251,19,12)" rx="2" ry="2" />
<text  x="1093.39" y="447.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="1107.8" y="661" width="0.3" height="15.0" fill="rgb(206,153,1)" rx="2" ry="2" />
<text  x="1110.76" y="671.5" ></text>
</g>
<g >
<title>ksys_write (2 samples, 0.05%)</title><rect x="163.8" y="469" width="0.5" height="15.0" fill="rgb(241,98,38)" rx="2" ry="2" />
<text  x="166.76" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.05%)</title><rect x="152.5" y="549" width="0.5" height="15.0" fill="rgb(222,207,6)" rx="2" ry="2" />
<text  x="155.47" y="559.5" ></text>
</g>
<g >
<title>cpu_startup_entry (176 samples, 4.32%)</title><rect x="1139.0" y="661" width="51.0" height="15.0" fill="rgb(248,192,37)" rx="2" ry="2" />
<text  x="1142.04" y="671.5" >cpu_s..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="92.8" y="725" width="0.3" height="15.0" fill="rgb(215,124,33)" rx="2" ry="2" />
<text  x="95.82" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (4 samples, 0.10%)</title><rect x="206.6" y="565" width="1.2" height="15.0" fill="rgb(248,79,16)" rx="2" ry="2" />
<text  x="209.62" y="575.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.02%)</title><rect x="1106.3" y="677" width="0.3" height="15.0" fill="rgb(229,25,26)" rx="2" ry="2" />
<text  x="1109.31" y="687.5" ></text>
</g>
<g >
<title>ep_poll (2 samples, 0.05%)</title><rect x="1106.3" y="693" width="0.6" height="15.0" fill="rgb(245,16,34)" rx="2" ry="2" />
<text  x="1109.31" y="703.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (86 samples, 2.11%)</title><rect x="728.4" y="565" width="24.9" height="15.0" fill="rgb(210,211,45)" rx="2" ry="2" />
<text  x="731.42" y="575.5" >r..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.17%)</title><rect x="810.7" y="469" width="2.0" height="15.0" fill="rgb(245,24,42)" rx="2" ry="2" />
<text  x="813.66" y="479.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.02%)</title><rect x="1106.9" y="693" width="0.3" height="15.0" fill="rgb(218,156,11)" rx="2" ry="2" />
<text  x="1109.89" y="703.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="165.2" y="101" width="0.3" height="15.0" fill="rgb(207,66,22)" rx="2" ry="2" />
<text  x="168.21" y="111.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (1 samples, 0.02%)</title><rect x="366.5" y="549" width="0.3" height="15.0" fill="rgb(220,208,28)" rx="2" ry="2" />
<text  x="369.46" y="559.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.02%)</title><rect x="10.3" y="709" width="0.3" height="15.0" fill="rgb(217,60,9)" rx="2" ry="2" />
<text  x="13.29" y="719.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (4 samples, 0.10%)</title><rect x="408.7" y="517" width="1.2" height="15.0" fill="rgb(236,102,11)" rx="2" ry="2" />
<text  x="411.74" y="527.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="750.7" y="453" width="0.3" height="15.0" fill="rgb(230,190,19)" rx="2" ry="2" />
<text  x="753.72" y="463.5" ></text>
</g>
<g >
<title>ctx_resched (2 samples, 0.05%)</title><rect x="36.4" y="549" width="0.5" height="15.0" fill="rgb(247,146,54)" rx="2" ry="2" />
<text  x="39.35" y="559.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (1 samples, 0.02%)</title><rect x="165.5" y="197" width="0.3" height="15.0" fill="rgb(244,12,43)" rx="2" ry="2" />
<text  x="168.50" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="1108.1" y="725" width="0.2" height="15.0" fill="rgb(241,113,8)" rx="2" ry="2" />
<text  x="1111.05" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="839.9" y="517" width="0.3" height="15.0" fill="rgb(251,58,33)" rx="2" ry="2" />
<text  x="842.91" y="527.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.42%)</title><rect x="803.7" y="533" width="4.9" height="15.0" fill="rgb(228,58,21)" rx="2" ry="2" />
<text  x="806.71" y="543.5" ></text>
</g>
<g >
<title>BaseExtentionFromVEX (1 samples, 0.02%)</title><rect x="1041.5" y="613" width="0.2" height="15.0" fill="rgb(223,195,27)" rx="2" ry="2" />
<text  x="1044.45" y="623.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (4 samples, 0.10%)</title><rect x="1152.4" y="421" width="1.1" height="15.0" fill="rgb(245,8,29)" rx="2" ry="2" />
<text  x="1155.36" y="431.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="1095.6" y="533" width="0.3" height="15.0" fill="rgb(245,36,3)" rx="2" ry="2" />
<text  x="1098.60" y="543.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (2 samples, 0.05%)</title><rect x="561.1" y="709" width="0.5" height="15.0" fill="rgb(226,17,34)" rx="2" ry="2" />
<text  x="564.05" y="719.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.02%)</title><rect x="1184.2" y="533" width="0.3" height="15.0" fill="rgb(206,165,43)" rx="2" ry="2" />
<text  x="1187.21" y="543.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.02%)</title><rect x="152.8" y="453" width="0.2" height="15.0" fill="rgb(214,129,24)" rx="2" ry="2" />
<text  x="155.76" y="463.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="1112.1" y="677" width="0.3" height="15.0" fill="rgb(243,46,11)" rx="2" ry="2" />
<text  x="1115.11" y="687.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="816.2" y="581" width="0.3" height="15.0" fill="rgb(216,161,5)" rx="2" ry="2" />
<text  x="819.16" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (46 samples, 1.13%)</title><rect x="610.3" y="581" width="13.3" height="15.0" fill="rgb(245,153,2)" rx="2" ry="2" />
<text  x="613.28" y="591.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="623.3" y="517" width="0.3" height="15.0" fill="rgb(222,86,34)" rx="2" ry="2" />
<text  x="626.31" y="527.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (130 samples, 3.19%)</title><rect x="1141.4" y="597" width="37.6" height="15.0" fill="rgb(229,194,13)" rx="2" ry="2" />
<text  x="1144.35" y="607.5" >cpu..</text>
</g>
<g >
<title>NaClFastMutexLock (31 samples, 0.76%)</title><rect x="890.3" y="677" width="9.0" height="15.0" fill="rgb(251,71,27)" rx="2" ry="2" />
<text  x="893.29" y="687.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="558.2" y="581" width="0.2" height="15.0" fill="rgb(220,215,52)" rx="2" ry="2" />
<text  x="561.16" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="654.3" y="485" width="0.3" height="15.0" fill="rgb(236,88,27)" rx="2" ry="2" />
<text  x="657.29" y="495.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.02%)</title><rect x="90.8" y="725" width="0.3" height="15.0" fill="rgb(233,108,6)" rx="2" ry="2" />
<text  x="93.79" y="735.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="804.3" y="485" width="0.3" height="15.0" fill="rgb(214,30,2)" rx="2" ry="2" />
<text  x="807.29" y="495.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.02%)</title><rect x="35.5" y="373" width="0.3" height="15.0" fill="rgb(212,85,38)" rx="2" ry="2" />
<text  x="38.48" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1,352 samples, 33.18%)</title><rect x="166.7" y="629" width="391.5" height="15.0" fill="rgb(206,224,44)" rx="2" ry="2" />
<text  x="169.66" y="639.5" >rustposix::safeposix::dispatcher::dispatcher::{{closu..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (192 samples, 4.71%)</title><rect x="672.0" y="581" width="55.6" height="15.0" fill="rgb(223,226,42)" rx="2" ry="2" />
<text  x="674.96" y="591.5" >core:..</text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="855.0" y="533" width="0.8" height="15.0" fill="rgb(227,7,34)" rx="2" ry="2" />
<text  x="857.97" y="543.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (160 samples, 3.93%)</title><rect x="1139.9" y="629" width="46.3" height="15.0" fill="rgb(229,89,12)" rx="2" ry="2" />
<text  x="1142.90" y="639.5" >cpui..</text>
</g>
<g >
<title>NaClSysClose (1 samples, 0.02%)</title><rect x="150.4" y="709" width="0.3" height="15.0" fill="rgb(246,94,26)" rx="2" ry="2" />
<text  x="153.44" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.02%)</title><rect x="67.6" y="677" width="0.3" height="15.0" fill="rgb(243,178,25)" rx="2" ry="2" />
<text  x="70.62" y="687.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1144.0" y="437" width="0.2" height="15.0" fill="rgb(241,184,14)" rx="2" ry="2" />
<text  x="1146.96" y="447.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (4 samples, 0.10%)</title><rect x="161.4" y="629" width="1.2" height="15.0" fill="rgb(234,113,45)" rx="2" ry="2" />
<text  x="164.45" y="639.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (27 samples, 0.66%)</title><rect x="839.9" y="597" width="7.8" height="15.0" fill="rgb(234,152,5)" rx="2" ry="2" />
<text  x="842.91" y="607.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (34 samples, 0.83%)</title><rect x="1078.8" y="757" width="9.9" height="15.0" fill="rgb(209,159,28)" rx="2" ry="2" />
<text  x="1081.80" y="767.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="35.5" y="357" width="0.3" height="15.0" fill="rgb(208,80,39)" rx="2" ry="2" />
<text  x="38.48" y="367.5" ></text>
</g>
<g >
<title>alloc_pages_vma (49 samples, 1.20%)</title><rect x="1009.9" y="629" width="14.2" height="15.0" fill="rgb(251,190,44)" rx="2" ry="2" />
<text  x="1012.89" y="639.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.29%)</title><rect x="848.3" y="565" width="3.5" height="15.0" fill="rgb(250,172,31)" rx="2" ry="2" />
<text  x="851.31" y="575.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (48 samples, 1.18%)</title><rect x="1010.2" y="613" width="13.9" height="15.0" fill="rgb(217,54,21)" rx="2" ry="2" />
<text  x="1013.18" y="623.5" ></text>
</g>
<g >
<title>__libc_write (8 samples, 0.20%)</title><rect x="34.0" y="613" width="2.4" height="15.0" fill="rgb(239,32,21)" rx="2" ry="2" />
<text  x="37.03" y="623.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="1106.9" y="597" width="0.3" height="15.0" fill="rgb(220,147,39)" rx="2" ry="2" />
<text  x="1109.89" y="607.5" ></text>
</g>
<g >
<title>evict (2 samples, 0.05%)</title><rect x="1110.9" y="485" width="0.6" height="15.0" fill="rgb(230,218,23)" rx="2" ry="2" />
<text  x="1113.95" y="495.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="1078.2" y="309" width="0.3" height="15.0" fill="rgb(213,177,39)" rx="2" ry="2" />
<text  x="1081.23" y="319.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="1108.1" y="709" width="0.2" height="15.0" fill="rgb(246,54,9)" rx="2" ry="2" />
<text  x="1111.05" y="719.5" ></text>
</g>
<g >
<title>ksys_write (8 samples, 0.20%)</title><rect x="34.0" y="549" width="2.4" height="15.0" fill="rgb(217,44,7)" rx="2" ry="2" />
<text  x="37.03" y="559.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,299 samples, 31.88%)</title><rect x="575.0" y="709" width="376.1" height="15.0" fill="rgb(254,85,42)" rx="2" ry="2" />
<text  x="577.95" y="719.5" >NaClSysWrite</text>
</g>
<g >
<title>NaClLogUnlock (27 samples, 0.66%)</title><rect x="938.9" y="677" width="7.9" height="15.0" fill="rgb(226,187,36)" rx="2" ry="2" />
<text  x="941.94" y="687.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="672.0" y="501" width="0.2" height="15.0" fill="rgb(205,150,30)" rx="2" ry="2" />
<text  x="674.96" y="511.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.02%)</title><rect x="1106.6" y="581" width="0.3" height="15.0" fill="rgb(211,33,48)" rx="2" ry="2" />
<text  x="1109.60" y="591.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.10%)</title><rect x="408.7" y="501" width="1.2" height="15.0" fill="rgb(211,79,42)" rx="2" ry="2" />
<text  x="411.74" y="511.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="1106.9" y="613" width="0.3" height="15.0" fill="rgb(230,129,0)" rx="2" ry="2" />
<text  x="1109.89" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="164.3" y="453" width="0.3" height="15.0" fill="rgb(223,88,21)" rx="2" ry="2" />
<text  x="167.34" y="463.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="164.9" y="149" width="0.3" height="15.0" fill="rgb(208,53,10)" rx="2" ry="2" />
<text  x="167.92" y="159.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (549 samples, 13.47%)</title><rect x="207.8" y="565" width="159.0" height="15.0" fill="rgb(245,96,19)" rx="2" ry="2" />
<text  x="210.78" y="575.5" >ringbuf::ring_buffer..</text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.02%)</title><rect x="1039.7" y="565" width="0.3" height="15.0" fill="rgb(243,84,20)" rx="2" ry="2" />
<text  x="1042.71" y="575.5" ></text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (3 samples, 0.07%)</title><rect x="152.2" y="645" width="0.8" height="15.0" fill="rgb(219,51,51)" rx="2" ry="2" />
<text  x="155.18" y="655.5" ></text>
</g>
<g >
<title>page_cache_delete (1 samples, 0.02%)</title><rect x="1108.9" y="581" width="0.3" height="15.0" fill="rgb(228,138,14)" rx="2" ry="2" />
<text  x="1111.92" y="591.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="1149.2" y="517" width="0.3" height="15.0" fill="rgb(245,194,17)" rx="2" ry="2" />
<text  x="1152.17" y="527.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="1108.1" y="693" width="0.2" height="15.0" fill="rgb(213,193,47)" rx="2" ry="2" />
<text  x="1111.05" y="703.5" ></text>
</g>
<g >
<title>prune_dcache_sb (2 samples, 0.05%)</title><rect x="1110.9" y="597" width="0.6" height="15.0" fill="rgb(246,24,5)" rx="2" ry="2" />
<text  x="1113.95" y="607.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="1106.6" y="613" width="0.3" height="15.0" fill="rgb(217,224,23)" rx="2" ry="2" />
<text  x="1109.60" y="623.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (11 samples, 0.27%)</title><rect x="200.0" y="565" width="3.1" height="15.0" fill="rgb(219,219,53)" rx="2" ry="2" />
<text  x="202.96" y="575.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.02%)</title><rect x="1094.7" y="437" width="0.3" height="15.0" fill="rgb(222,226,10)" rx="2" ry="2" />
<text  x="1097.73" y="447.5" ></text>
</g>
<g >
<title>NaClApplyPatchToMemory (1 samples, 0.02%)</title><rect x="165.8" y="581" width="0.3" height="15.0" fill="rgb(236,159,41)" rx="2" ry="2" />
<text  x="168.79" y="591.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="35.2" y="261" width="0.3" height="15.0" fill="rgb(208,55,5)" rx="2" ry="2" />
<text  x="38.19" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="152.5" y="533" width="0.5" height="15.0" fill="rgb(217,91,49)" rx="2" ry="2" />
<text  x="155.47" y="543.5" ></text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.02%)</title><rect x="1090.7" y="485" width="0.3" height="15.0" fill="rgb(243,143,34)" rx="2" ry="2" />
<text  x="1093.68" y="495.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="728.1" y="517" width="0.3" height="15.0" fill="rgb(226,58,29)" rx="2" ry="2" />
<text  x="731.13" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="940.7" y="629" width="0.3" height="15.0" fill="rgb(216,168,1)" rx="2" ry="2" />
<text  x="943.68" y="639.5" ></text>
</g>
<g >
<title>file_update_time (1 samples, 0.02%)</title><rect x="34.0" y="389" width="0.3" height="15.0" fill="rgb(212,91,45)" rx="2" ry="2" />
<text  x="37.03" y="399.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1090.4" y="421" width="0.3" height="15.0" fill="rgb(218,224,40)" rx="2" ry="2" />
<text  x="1093.39" y="431.5" ></text>
</g>
<g >
<title>menu_select (16 samples, 0.39%)</title><rect x="1179.9" y="597" width="4.6" height="15.0" fill="rgb(239,224,45)" rx="2" ry="2" />
<text  x="1182.87" y="607.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.02%)</title><rect x="1088.7" y="709" width="0.2" height="15.0" fill="rgb(223,87,45)" rx="2" ry="2" />
<text  x="1091.65" y="719.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3 samples, 0.07%)</title><rect x="152.2" y="597" width="0.8" height="15.0" fill="rgb(239,43,17)" rx="2" ry="2" />
<text  x="155.18" y="607.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.02%)</title><rect x="150.4" y="261" width="0.3" height="15.0" fill="rgb(237,216,21)" rx="2" ry="2" />
<text  x="153.44" y="271.5" ></text>
</g>
<g >
<title>zap_pte_range (21 samples, 0.52%)</title><rect x="1089.2" y="517" width="6.1" height="15.0" fill="rgb(208,51,10)" rx="2" ry="2" />
<text  x="1092.23" y="527.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1141.1" y="597" width="0.3" height="15.0" fill="rgb(237,17,10)" rx="2" ry="2" />
<text  x="1144.06" y="607.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (339 samples, 8.32%)</title><rect x="441.5" y="533" width="98.1" height="15.0" fill="rgb(250,28,26)" rx="2" ry="2" />
<text  x="444.46" y="543.5" >ringbuf::co..</text>
</g>
<g >
<title>NaClSysExecveDecoder (1 samples, 0.02%)</title><rect x="163.5" y="725" width="0.3" height="15.0" fill="rgb(233,170,11)" rx="2" ry="2" />
<text  x="166.47" y="735.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1112.1" y="693" width="0.3" height="15.0" fill="rgb(226,197,17)" rx="2" ry="2" />
<text  x="1115.11" y="703.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="1088.9" y="629" width="0.3" height="15.0" fill="rgb(210,164,32)" rx="2" ry="2" />
<text  x="1091.94" y="639.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="150.4" y="373" width="0.3" height="15.0" fill="rgb(226,0,35)" rx="2" ry="2" />
<text  x="153.44" y="383.5" ></text>
</g>
<g >
<title>NaClValidateCode (34 samples, 0.83%)</title><rect x="153.0" y="677" width="9.9" height="15.0" fill="rgb(254,224,25)" rx="2" ry="2" />
<text  x="156.05" y="687.5" ></text>
</g>
<g >
<title>native_write_msr (63 samples, 1.55%)</title><rect x="14.6" y="389" width="18.3" height="15.0" fill="rgb(223,132,6)" rx="2" ry="2" />
<text  x="17.63" y="399.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (1 samples, 0.02%)</title><rect x="559.0" y="645" width="0.3" height="15.0" fill="rgb(209,102,28)" rx="2" ry="2" />
<text  x="562.03" y="655.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1078.2" y="277" width="0.3" height="15.0" fill="rgb(210,117,5)" rx="2" ry="2" />
<text  x="1081.23" y="287.5" ></text>
</g>
<g >
<title>core_sys_select (1 samples, 0.02%)</title><rect x="1107.8" y="693" width="0.3" height="15.0" fill="rgb(205,229,19)" rx="2" ry="2" />
<text  x="1110.76" y="703.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1147.4" y="453" width="0.3" height="15.0" fill="rgb(238,43,45)" rx="2" ry="2" />
<text  x="1150.43" y="463.5" ></text>
</g>
<g >
<title>CompareAndSwap (49 samples, 1.20%)</title><rect x="127.6" y="709" width="14.2" height="15.0" fill="rgb(217,91,50)" rx="2" ry="2" />
<text  x="130.57" y="719.5" ></text>
</g>
<g >
<title>NaClLogGetVerbosity (70 samples, 1.72%)</title><rect x="927.1" y="693" width="20.2" height="15.0" fill="rgb(211,106,41)" rx="2" ry="2" />
<text  x="930.07" y="703.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.07%)</title><rect x="164.9" y="517" width="0.9" height="15.0" fill="rgb(217,147,33)" rx="2" ry="2" />
<text  x="167.92" y="527.5" ></text>
</g>
<g >
<title>schedule_idle (4 samples, 0.10%)</title><rect x="1137.9" y="693" width="1.1" height="15.0" fill="rgb(227,10,11)" rx="2" ry="2" />
<text  x="1140.88" y="703.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="165.5" y="149" width="0.3" height="15.0" fill="rgb(220,168,22)" rx="2" ry="2" />
<text  x="168.50" y="159.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.02%)</title><rect x="1142.8" y="469" width="0.3" height="15.0" fill="rgb(252,109,0)" rx="2" ry="2" />
<text  x="1145.80" y="479.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (78 samples, 1.91%)</title><rect x="1155.3" y="581" width="22.5" height="15.0" fill="rgb(245,228,1)" rx="2" ry="2" />
<text  x="1158.25" y="591.5" >m..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (3 samples, 0.07%)</title><rect x="1041.7" y="741" width="0.9" height="15.0" fill="rgb(223,32,10)" rx="2" ry="2" />
<text  x="1044.74" y="751.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (3 samples, 0.07%)</title><rect x="1030.7" y="629" width="0.9" height="15.0" fill="rgb(212,61,23)" rx="2" ry="2" />
<text  x="1033.74" y="639.5" ></text>
</g>
<g >
<title>load_new_mm_cr3 (1 samples, 0.02%)</title><rect x="1113.0" y="613" width="0.3" height="15.0" fill="rgb(228,29,33)" rx="2" ry="2" />
<text  x="1115.97" y="623.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.02%)</title><rect x="10.3" y="517" width="0.3" height="15.0" fill="rgb(251,107,19)" rx="2" ry="2" />
<text  x="13.29" y="527.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="165.5" y="101" width="0.3" height="15.0" fill="rgb(244,127,30)" rx="2" ry="2" />
<text  x="168.50" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.02%)</title><rect x="164.3" y="421" width="0.3" height="15.0" fill="rgb(245,101,37)" rx="2" ry="2" />
<text  x="167.34" y="431.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1039.7" y="533" width="0.3" height="15.0" fill="rgb(218,33,34)" rx="2" ry="2" />
<text  x="1042.71" y="543.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (11 samples, 0.27%)</title><rect x="83.6" y="725" width="3.1" height="15.0" fill="rgb(219,34,19)" rx="2" ry="2" />
<text  x="86.55" y="735.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.02%)</title><rect x="1078.5" y="693" width="0.3" height="15.0" fill="rgb(226,38,19)" rx="2" ry="2" />
<text  x="1081.52" y="703.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="1107.5" y="645" width="0.3" height="15.0" fill="rgb(226,189,12)" rx="2" ry="2" />
<text  x="1110.47" y="655.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="163.2" y="549" width="0.3" height="15.0" fill="rgb(253,152,6)" rx="2" ry="2" />
<text  x="166.18" y="559.5" ></text>
</g>
<g >
<title>kernel_init_free_pages (1 samples, 0.02%)</title><rect x="1020.9" y="565" width="0.3" height="15.0" fill="rgb(254,164,34)" rx="2" ry="2" />
<text  x="1023.89" y="575.5" ></text>
</g>
<g >
<title>__bitmap_and (2 samples, 0.05%)</title><rect x="1151.5" y="453" width="0.6" height="15.0" fill="rgb(219,11,36)" rx="2" ry="2" />
<text  x="1154.49" y="463.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (281 samples, 6.90%)</title><rect x="458.3" y="501" width="81.3" height="15.0" fill="rgb(244,122,4)" rx="2" ry="2" />
<text  x="461.26" y="511.5" >__memmove..</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (2 samples, 0.05%)</title><rect x="751.0" y="533" width="0.6" height="15.0" fill="rgb(248,148,53)" rx="2" ry="2" />
<text  x="754.01" y="543.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="32.9" y="645" width="0.3" height="15.0" fill="rgb(218,33,12)" rx="2" ry="2" />
<text  x="35.88" y="655.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (46 samples, 1.13%)</title><rect x="802.8" y="597" width="13.4" height="15.0" fill="rgb(238,47,43)" rx="2" ry="2" />
<text  x="805.84" y="607.5" ></text>
</g>
<g >
<title>lind_write (1 samples, 0.02%)</title><rect x="870.3" y="677" width="0.3" height="15.0" fill="rgb(246,197,43)" rx="2" ry="2" />
<text  x="873.31" y="687.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.02%)</title><rect x="163.2" y="565" width="0.3" height="15.0" fill="rgb(232,41,29)" rx="2" ry="2" />
<text  x="166.18" y="575.5" ></text>
</g>
<g >
<title>page_add_file_rmap (1 samples, 0.02%)</title><rect x="152.8" y="437" width="0.2" height="15.0" fill="rgb(250,219,20)" rx="2" ry="2" />
<text  x="155.76" y="447.5" ></text>
</g>
<g >
<title>kswapd (11 samples, 0.27%)</title><rect x="1108.3" y="725" width="3.2" height="15.0" fill="rgb(217,23,48)" rx="2" ry="2" />
<text  x="1111.34" y="735.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (2 samples, 0.05%)</title><rect x="164.9" y="181" width="0.6" height="15.0" fill="rgb(243,53,43)" rx="2" ry="2" />
<text  x="167.92" y="191.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="1106.3" y="629" width="0.3" height="15.0" fill="rgb(205,92,46)" rx="2" ry="2" />
<text  x="1109.31" y="639.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.02%)</title><rect x="1088.9" y="709" width="0.3" height="15.0" fill="rgb(248,137,16)" rx="2" ry="2" />
<text  x="1091.94" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="33.2" y="677" width="0.3" height="15.0" fill="rgb(205,228,9)" rx="2" ry="2" />
<text  x="36.17" y="687.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (6 samples, 0.15%)</title><rect x="736.2" y="533" width="1.8" height="15.0" fill="rgb(213,158,42)" rx="2" ry="2" />
<text  x="739.24" y="543.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 0.05%)</title><rect x="1041.2" y="645" width="0.5" height="15.0" fill="rgb(227,173,31)" rx="2" ry="2" />
<text  x="1044.16" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (21 samples, 0.52%)</title><rect x="648.2" y="533" width="6.1" height="15.0" fill="rgb(217,168,36)" rx="2" ry="2" />
<text  x="651.21" y="543.5" ></text>
</g>
<g >
<title>&lt;std::lazy::SyncLazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.05%)</title><rect x="627.7" y="597" width="0.5" height="15.0" fill="rgb(206,153,6)" rx="2" ry="2" />
<text  x="630.65" y="607.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.02%)</title><rect x="33.5" y="709" width="0.2" height="15.0" fill="rgb(208,169,22)" rx="2" ry="2" />
<text  x="36.46" y="719.5" ></text>
</g>
<g >
<title>irq_enter_rcu (4 samples, 0.10%)</title><rect x="1149.5" y="549" width="1.1" height="15.0" fill="rgb(229,69,49)" rx="2" ry="2" />
<text  x="1152.46" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="1077.4" y="629" width="0.2" height="15.0" fill="rgb(228,141,17)" rx="2" ry="2" />
<text  x="1080.36" y="639.5" ></text>
</g>
<g >
<title>NaClRefCountRef (54 samples, 1.33%)</title><rect x="908.2" y="645" width="15.7" height="15.0" fill="rgb(213,93,4)" rx="2" ry="2" />
<text  x="911.25" y="655.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (1 samples, 0.02%)</title><rect x="34.3" y="389" width="0.3" height="15.0" fill="rgb(242,92,53)" rx="2" ry="2" />
<text  x="37.32" y="399.5" ></text>
</g>
<g >
<title>lind_exit (7 samples, 0.17%)</title><rect x="163.8" y="693" width="2.0" height="15.0" fill="rgb(209,142,26)" rx="2" ry="2" />
<text  x="166.76" y="703.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.05%)</title><rect x="68.2" y="725" width="0.6" height="15.0" fill="rgb(230,185,32)" rx="2" ry="2" />
<text  x="71.20" y="735.5" ></text>
</g>
<g >
<title>add_module.constprop.0 (1 samples, 0.02%)</title><rect x="10.0" y="613" width="0.3" height="15.0" fill="rgb(207,141,1)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (43 samples, 1.06%)</title><rect x="654.6" y="565" width="12.4" height="15.0" fill="rgb(238,138,31)" rx="2" ry="2" />
<text  x="657.58" y="575.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4 samples, 0.10%)</title><rect x="809.2" y="501" width="1.2" height="15.0" fill="rgb(232,27,5)" rx="2" ry="2" />
<text  x="812.21" y="511.5" ></text>
</g>
<g >
<title>[sel_ldr] (2,955 samples, 72.52%)</title><rect x="95.4" y="757" width="855.7" height="15.0" fill="rgb(247,18,13)" rx="2" ry="2" />
<text  x="98.42" y="767.5" >[sel_ldr]</text>
</g>
<g >
<title>do_epoll_wait (2 samples, 0.05%)</title><rect x="1106.3" y="709" width="0.6" height="15.0" fill="rgb(205,39,52)" rx="2" ry="2" />
<text  x="1109.31" y="719.5" ></text>
</g>
<g >
<title>iput (2 samples, 0.05%)</title><rect x="1110.9" y="533" width="0.6" height="15.0" fill="rgb(233,90,49)" rx="2" ry="2" />
<text  x="1113.95" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="165.2" y="69" width="0.3" height="15.0" fill="rgb(238,60,29)" rx="2" ry="2" />
<text  x="168.21" y="79.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="1095.6" y="469" width="0.3" height="15.0" fill="rgb(245,53,8)" rx="2" ry="2" />
<text  x="1098.60" y="479.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.07%)</title><rect x="1029.9" y="613" width="0.8" height="15.0" fill="rgb(235,77,50)" rx="2" ry="2" />
<text  x="1032.87" y="623.5" ></text>
</g>
<g >
<title>ext4_rename (1 samples, 0.02%)</title><rect x="164.3" y="229" width="0.3" height="15.0" fill="rgb(221,75,21)" rx="2" ry="2" />
<text  x="167.34" y="239.5" ></text>
</g>
<g >
<title>ovl_get_acl (1 samples, 0.02%)</title><rect x="10.3" y="405" width="0.3" height="15.0" fill="rgb(235,91,12)" rx="2" ry="2" />
<text  x="13.29" y="415.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (13 samples, 0.32%)</title><rect x="1150.6" y="517" width="3.8" height="15.0" fill="rgb(240,228,34)" rx="2" ry="2" />
<text  x="1153.62" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="856.1" y="501" width="0.3" height="15.0" fill="rgb(242,164,49)" rx="2" ry="2" />
<text  x="859.13" y="511.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="34.0" y="357" width="0.3" height="15.0" fill="rgb(249,184,4)" rx="2" ry="2" />
<text  x="37.03" y="367.5" ></text>
</g>
<g >
<title>exc_page_fault (3 samples, 0.07%)</title><rect x="152.2" y="581" width="0.8" height="15.0" fill="rgb(207,179,20)" rx="2" ry="2" />
<text  x="155.18" y="591.5" ></text>
</g>
<g >
<title>cpuidle_enter (86 samples, 2.11%)</title><rect x="1112.4" y="677" width="24.9" height="15.0" fill="rgb(247,167,34)" rx="2" ry="2" />
<text  x="1115.40" y="687.5" >c..</text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (5 samples, 0.12%)</title><rect x="1184.8" y="613" width="1.4" height="15.0" fill="rgb(235,15,30)" rx="2" ry="2" />
<text  x="1187.79" y="623.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="92.8" y="709" width="0.3" height="15.0" fill="rgb(239,106,0)" rx="2" ry="2" />
<text  x="95.82" y="719.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="856.7" y="453" width="0.3" height="15.0" fill="rgb(241,128,5)" rx="2" ry="2" />
<text  x="859.70" y="463.5" ></text>
</g>
<g >
<title>NaClLoadTrampoline (1 samples, 0.02%)</title><rect x="165.8" y="629" width="0.3" height="15.0" fill="rgb(233,62,24)" rx="2" ry="2" />
<text  x="168.79" y="639.5" ></text>
</g>
<g >
<title>do_iter_write (2 samples, 0.05%)</title><rect x="163.8" y="389" width="0.5" height="15.0" fill="rgb(224,66,38)" rx="2" ry="2" />
<text  x="166.76" y="399.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="814.1" y="485" width="0.3" height="15.0" fill="rgb(239,101,37)" rx="2" ry="2" />
<text  x="817.14" y="495.5" ></text>
</g>
<g >
<title>__wcsmbs_load_conv (1 samples, 0.02%)</title><rect x="10.0" y="677" width="0.3" height="15.0" fill="rgb(245,45,35)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (20 samples, 0.49%)</title><rect x="900.4" y="661" width="5.8" height="15.0" fill="rgb(208,59,17)" rx="2" ry="2" />
<text  x="903.43" y="671.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 1.55%)</title><rect x="14.6" y="421" width="18.3" height="15.0" fill="rgb(236,130,12)" rx="2" ry="2" />
<text  x="17.63" y="431.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.05%)</title><rect x="1153.5" y="469" width="0.6" height="15.0" fill="rgb(223,22,10)" rx="2" ry="2" />
<text  x="1156.51" y="479.5" ></text>
</g>
<g >
<title>NaClGetDescMu (1 samples, 0.02%)</title><rect x="923.9" y="693" width="0.3" height="15.0" fill="rgb(212,128,9)" rx="2" ry="2" />
<text  x="926.88" y="703.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (4 samples, 0.10%)</title><rect x="1146.3" y="389" width="1.1" height="15.0" fill="rgb(249,87,26)" rx="2" ry="2" />
<text  x="1149.27" y="399.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (1,356 samples, 33.28%)</title><rect x="166.7" y="725" width="392.6" height="15.0" fill="rgb(215,82,3)" rx="2" ry="2" />
<text  x="169.66" y="735.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1078.2" y="421" width="0.3" height="15.0" fill="rgb(223,212,11)" rx="2" ry="2" />
<text  x="1081.23" y="431.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampolineCall (1 samples, 0.02%)</title><rect x="165.8" y="597" width="0.3" height="15.0" fill="rgb(253,80,37)" rx="2" ry="2" />
<text  x="168.79" y="607.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="850.0" y="501" width="0.6" height="15.0" fill="rgb(253,38,9)" rx="2" ry="2" />
<text  x="853.04" y="511.5" ></text>
</g>
<g >
<title>__libc_write (2 samples, 0.05%)</title><rect x="163.8" y="533" width="0.5" height="15.0" fill="rgb(227,50,35)" rx="2" ry="2" />
<text  x="166.76" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="750.7" y="485" width="0.3" height="15.0" fill="rgb(205,119,38)" rx="2" ry="2" />
<text  x="753.72" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="854.1" y="501" width="0.3" height="15.0" fill="rgb(246,174,37)" rx="2" ry="2" />
<text  x="857.10" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1039.7" y="693" width="0.3" height="15.0" fill="rgb(219,121,5)" rx="2" ry="2" />
<text  x="1042.71" y="703.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.02%)</title><rect x="907.7" y="645" width="0.3" height="15.0" fill="rgb(205,145,2)" rx="2" ry="2" />
<text  x="910.67" y="655.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (1 samples, 0.02%)</title><rect x="166.1" y="693" width="0.3" height="15.0" fill="rgb(238,144,10)" rx="2" ry="2" />
<text  x="169.08" y="703.5" ></text>
</g>
<g >
<title>ion (8 samples, 0.20%)</title><rect x="34.0" y="629" width="2.4" height="15.0" fill="rgb(240,224,27)" rx="2" ry="2" />
<text  x="37.03" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (32 samples, 0.79%)</title><rect x="645.0" y="597" width="9.3" height="15.0" fill="rgb(205,22,0)" rx="2" ry="2" />
<text  x="648.03" y="607.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.91%)</title><rect x="634.3" y="581" width="10.7" height="15.0" fill="rgb(247,193,6)" rx="2" ry="2" />
<text  x="637.31" y="591.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="1040.3" y="741" width="0.3" height="15.0" fill="rgb(226,34,43)" rx="2" ry="2" />
<text  x="1043.29" y="751.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.02%)</title><rect x="1137.3" y="677" width="0.3" height="15.0" fill="rgb(216,165,34)" rx="2" ry="2" />
<text  x="1140.30" y="687.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (8 samples, 0.20%)</title><rect x="810.4" y="501" width="2.3" height="15.0" fill="rgb(215,153,3)" rx="2" ry="2" />
<text  x="813.37" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="1107.5" y="725" width="0.3" height="15.0" fill="rgb(211,48,36)" rx="2" ry="2" />
<text  x="1110.47" y="735.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.02%)</title><rect x="1031.6" y="629" width="0.3" height="15.0" fill="rgb(223,74,29)" rx="2" ry="2" />
<text  x="1034.60" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (2 samples, 0.05%)</title><rect x="163.8" y="565" width="0.5" height="15.0" fill="rgb(216,36,34)" rx="2" ry="2" />
<text  x="166.76" y="575.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.02%)</title><rect x="1039.7" y="597" width="0.3" height="15.0" fill="rgb(211,219,49)" rx="2" ry="2" />
<text  x="1042.71" y="607.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (16 samples, 0.39%)</title><rect x="917.2" y="613" width="4.7" height="15.0" fill="rgb(241,16,17)" rx="2" ry="2" />
<text  x="920.22" y="623.5" ></text>
</g>
<g >
<title>NaClMutexLock (2 samples, 0.05%)</title><rect x="1040.6" y="741" width="0.6" height="15.0" fill="rgb(209,187,50)" rx="2" ry="2" />
<text  x="1043.58" y="751.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (2 samples, 0.05%)</title><rect x="163.8" y="549" width="0.5" height="15.0" fill="rgb(250,192,50)" rx="2" ry="2" />
<text  x="166.76" y="559.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1111.5" y="661" width="0.3" height="15.0" fill="rgb(224,93,25)" rx="2" ry="2" />
<text  x="1114.53" y="671.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="1141.9" y="565" width="0.3" height="15.0" fill="rgb(228,215,45)" rx="2" ry="2" />
<text  x="1144.93" y="575.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.02%)</title><rect x="1187.4" y="517" width="0.3" height="15.0" fill="rgb(222,0,26)" rx="2" ry="2" />
<text  x="1190.39" y="527.5" ></text>
</g>
<g >
<title>sched_move_task (1 samples, 0.02%)</title><rect x="1095.3" y="597" width="0.3" height="15.0" fill="rgb(247,22,19)" rx="2" ry="2" />
<text  x="1098.31" y="607.5" ></text>
</g>
<g >
<title>NaClGetDesc (117 samples, 2.87%)</title><rect x="890.0" y="693" width="33.9" height="15.0" fill="rgb(251,95,26)" rx="2" ry="2" />
<text  x="893.00" y="703.5" >Na..</text>
</g>
<g >
<title>__pagevec_lru_add_fn (7 samples, 0.17%)</title><rect x="1025.8" y="581" width="2.0" height="15.0" fill="rgb(233,157,50)" rx="2" ry="2" />
<text  x="1028.81" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.02%)</title><rect x="10.3" y="565" width="0.3" height="15.0" fill="rgb(222,140,9)" rx="2" ry="2" />
<text  x="13.29" y="575.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (42 samples, 1.03%)</title><rect x="150.7" y="693" width="12.2" height="15.0" fill="rgb(248,99,1)" rx="2" ry="2" />
<text  x="153.73" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.02%)</title><rect x="557.9" y="565" width="0.3" height="15.0" fill="rgb(208,157,25)" rx="2" ry="2" />
<text  x="560.87" y="575.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="1005.3" y="725" width="0.2" height="15.0" fill="rgb(220,55,49)" rx="2" ry="2" />
<text  x="1008.25" y="735.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (1 samples, 0.02%)</title><rect x="93.4" y="709" width="0.3" height="15.0" fill="rgb(247,148,34)" rx="2" ry="2" />
<text  x="96.40" y="719.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.02%)</title><rect x="150.4" y="661" width="0.3" height="15.0" fill="rgb(206,62,13)" rx="2" ry="2" />
<text  x="153.44" y="671.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.34%)</title><rect x="804.6" y="485" width="4.0" height="15.0" fill="rgb(233,194,30)" rx="2" ry="2" />
<text  x="807.58" y="495.5" ></text>
</g>
<g >
<title>do_shrink_slab (1 samples, 0.02%)</title><rect x="1110.4" y="645" width="0.3" height="15.0" fill="rgb(236,207,15)" rx="2" ry="2" />
<text  x="1113.37" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (2 samples, 0.05%)</title><rect x="36.4" y="725" width="0.5" height="15.0" fill="rgb(232,131,16)" rx="2" ry="2" />
<text  x="39.35" y="735.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="852.9" y="485" width="0.9" height="15.0" fill="rgb(222,160,6)" rx="2" ry="2" />
<text  x="855.94" y="495.5" ></text>
</g>
<g >
<title>list_lru_isolate (1 samples, 0.02%)</title><rect x="1110.7" y="565" width="0.2" height="15.0" fill="rgb(240,128,6)" rx="2" ry="2" />
<text  x="1113.66" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.02%)</title><rect x="558.2" y="597" width="0.2" height="15.0" fill="rgb(254,151,12)" rx="2" ry="2" />
<text  x="561.16" y="607.5" ></text>
</g>
<g >
<title>pagecache_get_page (2 samples, 0.05%)</title><rect x="34.9" y="357" width="0.6" height="15.0" fill="rgb(230,73,35)" rx="2" ry="2" />
<text  x="37.90" y="367.5" ></text>
</g>
<g >
<title>NaClLog (4 samples, 0.10%)</title><rect x="39.5" y="741" width="1.2" height="15.0" fill="rgb(208,159,30)" rx="2" ry="2" />
<text  x="42.54" y="751.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="1112.4" y="613" width="0.3" height="15.0" fill="rgb(228,72,50)" rx="2" ry="2" />
<text  x="1115.40" y="623.5" ></text>
</g>
<g >
<title>generic_permission (1 samples, 0.02%)</title><rect x="164.6" y="373" width="0.3" height="15.0" fill="rgb(208,84,2)" rx="2" ry="2" />
<text  x="167.63" y="383.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="1187.4" y="549" width="0.3" height="15.0" fill="rgb(236,105,50)" rx="2" ry="2" />
<text  x="1190.39" y="559.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="163.2" y="677" width="0.3" height="15.0" fill="rgb(208,102,46)" rx="2" ry="2" />
<text  x="166.18" y="687.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (1 samples, 0.02%)</title><rect x="1050.1" y="709" width="0.3" height="15.0" fill="rgb(232,125,47)" rx="2" ry="2" />
<text  x="1053.14" y="719.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.12%)</title><rect x="205.2" y="517" width="1.4" height="15.0" fill="rgb(205,122,16)" rx="2" ry="2" />
<text  x="208.17" y="527.5" ></text>
</g>
<g >
<title>__GI___qsort_r (1 samples, 0.02%)</title><rect x="166.4" y="629" width="0.3" height="15.0" fill="rgb(226,18,44)" rx="2" ry="2" />
<text  x="169.37" y="639.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.02%)</title><rect x="1111.8" y="725" width="0.3" height="15.0" fill="rgb(212,133,2)" rx="2" ry="2" />
<text  x="1114.82" y="735.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 0.05%)</title><rect x="1041.2" y="629" width="0.5" height="15.0" fill="rgb(215,41,39)" rx="2" ry="2" />
<text  x="1044.16" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize (1 samples, 0.02%)</title><rect x="1078.2" y="613" width="0.3" height="15.0" fill="rgb(223,126,25)" rx="2" ry="2" />
<text  x="1081.23" y="623.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="855.5" y="517" width="0.3" height="15.0" fill="rgb(214,192,25)" rx="2" ry="2" />
<text  x="858.55" y="527.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.05%)</title><rect x="163.8" y="437" width="0.5" height="15.0" fill="rgb(229,220,34)" rx="2" ry="2" />
<text  x="166.76" y="447.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="623.3" y="453" width="0.3" height="15.0" fill="rgb(206,200,13)" rx="2" ry="2" />
<text  x="626.31" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="856.4" y="501" width="0.3" height="15.0" fill="rgb(237,107,39)" rx="2" ry="2" />
<text  x="859.41" y="511.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="165.5" y="181" width="0.3" height="15.0" fill="rgb(245,196,52)" rx="2" ry="2" />
<text  x="168.50" y="191.5" ></text>
</g>
<g >
<title>generic_update_time (1 samples, 0.02%)</title><rect x="34.0" y="373" width="0.3" height="15.0" fill="rgb(245,60,12)" rx="2" ry="2" />
<text  x="37.03" y="383.5" ></text>
</g>
</g>
</svg>
