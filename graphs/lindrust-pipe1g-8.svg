<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>do_syscall_64 (64 samples, 9.30%)</title><rect x="11.7" y="325" width="109.8" height="15.0" fill="rgb(227,190,53)" rx="2" ry="2" />
<text  x="14.72" y="335.5" >do_syscall_64</text>
</g>
<g >
<title>[sel_ldr] (5 samples, 0.73%)</title><rect x="838.4" y="437" width="8.6" height="15.0" fill="rgb(249,159,47)" rx="2" ry="2" />
<text  x="841.40" y="447.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (2 samples, 0.29%)</title><rect x="972.2" y="165" width="3.4" height="15.0" fill="rgb(253,68,32)" rx="2" ry="2" />
<text  x="975.18" y="175.5" ></text>
</g>
<g >
<title>load_balance (3 samples, 0.44%)</title><rect x="1011.6" y="149" width="5.2" height="15.0" fill="rgb(251,116,33)" rx="2" ry="2" />
<text  x="1014.63" y="159.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreePrint (1 samples, 0.15%)</title><rect x="864.1" y="437" width="1.7" height="15.0" fill="rgb(241,113,33)" rx="2" ry="2" />
<text  x="867.13" y="447.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (2 samples, 0.29%)</title><rect x="733.8" y="357" width="3.4" height="15.0" fill="rgb(222,62,26)" rx="2" ry="2" />
<text  x="736.78" y="367.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (20 samples, 2.91%)</title><rect x="963.6" y="245" width="34.3" height="15.0" fill="rgb(209,58,50)" rx="2" ry="2" />
<text  x="966.60" y="255.5" >as..</text>
</g>
<g >
<title>smp_call_function_single (64 samples, 9.30%)</title><rect x="11.7" y="213" width="109.8" height="15.0" fill="rgb(224,81,47)" rx="2" ry="2" />
<text  x="14.72" y="223.5" >smp_call_func..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (1 samples, 0.15%)</title><rect x="142.1" y="437" width="1.7" height="15.0" fill="rgb(208,13,11)" rx="2" ry="2" />
<text  x="145.06" y="447.5" ></text>
</g>
<g >
<title>cpuidle_select (10 samples, 1.45%)</title><rect x="1148.8" y="309" width="17.2" height="15.0" fill="rgb(248,153,18)" rx="2" ry="2" />
<text  x="1151.84" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.15%)</title><rect x="1188.3" y="341" width="1.7" height="15.0" fill="rgb(205,122,23)" rx="2" ry="2" />
<text  x="1191.28" y="351.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (135 samples, 19.62%)</title><rect x="958.5" y="421" width="231.5" height="15.0" fill="rgb(238,107,9)" rx="2" ry="2" />
<text  x="961.46" y="431.5" >x86_64_start_reservations</text>
</g>
<g >
<title>start_secondary (21 samples, 3.05%)</title><rect x="922.4" y="437" width="36.1" height="15.0" fill="rgb(211,15,49)" rx="2" ry="2" />
<text  x="925.44" y="447.5" >sta..</text>
</g>
<g >
<title>do_nanosleep (1 samples, 0.15%)</title><rect x="917.3" y="389" width="1.7" height="15.0" fill="rgb(229,7,20)" rx="2" ry="2" />
<text  x="920.30" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (5 samples, 0.73%)</title><rect x="886.4" y="437" width="8.6" height="15.0" fill="rgb(211,130,33)" rx="2" ry="2" />
<text  x="889.42" y="447.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 9.30%)</title><rect x="11.7" y="181" width="109.8" height="15.0" fill="rgb(236,165,51)" rx="2" ry="2" />
<text  x="14.72" y="191.5" >remote_function</text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeInit (5 samples, 0.73%)</title><rect x="802.4" y="341" width="8.6" height="15.0" fill="rgb(218,60,8)" rx="2" ry="2" />
<text  x="805.38" y="351.5" ></text>
</g>
<g >
<title>do_anonymous_page (6 samples, 0.87%)</title><rect x="853.8" y="341" width="10.3" height="15.0" fill="rgb(237,37,22)" rx="2" ry="2" />
<text  x="856.84" y="351.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.15%)</title><rect x="984.2" y="117" width="1.7" height="15.0" fill="rgb(216,128,48)" rx="2" ry="2" />
<text  x="987.19" y="127.5" ></text>
</g>
<g >
<title>perf_ioctl (64 samples, 9.30%)</title><rect x="11.7" y="293" width="109.8" height="15.0" fill="rgb(210,83,54)" rx="2" ry="2" />
<text  x="14.72" y="303.5" >perf_ioctl</text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.29%)</title><rect x="811.0" y="341" width="3.4" height="15.0" fill="rgb(245,61,45)" rx="2" ry="2" />
<text  x="813.96" y="351.5" ></text>
</g>
<g >
<title>NaClAvlTreeInsert (1 samples, 0.15%)</title><rect x="797.2" y="341" width="1.8" height="15.0" fill="rgb(227,202,4)" rx="2" ry="2" />
<text  x="800.24" y="351.5" ></text>
</g>
<g >
<title>error_return (1 samples, 0.15%)</title><rect x="1143.7" y="293" width="1.7" height="15.0" fill="rgb(237,138,2)" rx="2" ry="2" />
<text  x="1146.69" y="303.5" ></text>
</g>
<g >
<title>NaClLogGetVerbosity (5 samples, 0.73%)</title><rect x="728.6" y="389" width="8.6" height="15.0" fill="rgb(251,179,35)" rx="2" ry="2" />
<text  x="731.63" y="399.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.15%)</title><rect x="121.5" y="229" width="1.7" height="15.0" fill="rgb(229,86,49)" rx="2" ry="2" />
<text  x="124.48" y="239.5" ></text>
</g>
<g >
<title>NaClLogGetVerbosity (1 samples, 0.15%)</title><rect x="512.5" y="405" width="1.7" height="15.0" fill="rgb(216,175,16)" rx="2" ry="2" />
<text  x="515.53" y="415.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (10 samples, 1.45%)</title><rect x="847.0" y="437" width="17.1" height="15.0" fill="rgb(217,44,50)" rx="2" ry="2" />
<text  x="849.98" y="447.5" ></text>
</g>
<g >
<title>NaClRefCountRef (5 samples, 0.73%)</title><rect x="718.3" y="341" width="8.6" height="15.0" fill="rgb(209,178,4)" rx="2" ry="2" />
<text  x="721.34" y="351.5" ></text>
</g>
<g >
<title>__get_user_8 (1 samples, 0.15%)</title><rect x="10.0" y="293" width="1.7" height="15.0" fill="rgb(236,53,29)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.15%)</title><rect x="1184.9" y="293" width="1.7" height="15.0" fill="rgb(210,184,50)" rx="2" ry="2" />
<text  x="1187.85" y="303.5" ></text>
</g>
<g >
<title>_start (2 samples, 0.29%)</title><rect x="896.7" y="453" width="3.4" height="15.0" fill="rgb(237,34,53)" rx="2" ry="2" />
<text  x="899.72" y="463.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.15%)</title><rect x="121.5" y="133" width="1.7" height="15.0" fill="rgb(246,171,24)" rx="2" ry="2" />
<text  x="124.48" y="143.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (21 samples, 3.05%)</title><rect x="922.4" y="357" width="36.1" height="15.0" fill="rgb(226,83,48)" rx="2" ry="2" />
<text  x="925.44" y="367.5" >cpu..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (21 samples, 3.05%)</title><rect x="922.4" y="341" width="36.1" height="15.0" fill="rgb(221,148,52)" rx="2" ry="2" />
<text  x="925.44" y="351.5" >mwa..</text>
</g>
<g >
<title>newidle_balance (2 samples, 0.29%)</title><rect x="1178.0" y="277" width="3.4" height="15.0" fill="rgb(216,179,15)" rx="2" ry="2" />
<text  x="1180.99" y="287.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (3 samples, 0.44%)</title><rect x="778.4" y="373" width="5.1" height="15.0" fill="rgb(216,64,6)" rx="2" ry="2" />
<text  x="781.37" y="383.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.15%)</title><rect x="977.3" y="165" width="1.7" height="15.0" fill="rgb(220,89,27)" rx="2" ry="2" />
<text  x="980.33" y="175.5" ></text>
</g>
<g >
<title>cpu_startup_entry (135 samples, 19.62%)</title><rect x="958.5" y="357" width="231.5" height="15.0" fill="rgb(250,53,52)" rx="2" ry="2" />
<text  x="961.46" y="367.5" >cpu_startup_entry</text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.15%)</title><rect x="1021.9" y="245" width="1.7" height="15.0" fill="rgb(215,65,37)" rx="2" ry="2" />
<text  x="1024.92" y="255.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.15%)</title><rect x="704.6" y="357" width="1.7" height="15.0" fill="rgb(254,193,50)" rx="2" ry="2" />
<text  x="707.62" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.29%)</title><rect x="1172.8" y="325" width="3.5" height="15.0" fill="rgb(242,124,6)" rx="2" ry="2" />
<text  x="1175.85" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.29%)</title><rect x="171.2" y="373" width="3.5" height="15.0" fill="rgb(216,151,38)" rx="2" ry="2" />
<text  x="174.22" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.15%)</title><rect x="10.0" y="325" width="1.7" height="15.0" fill="rgb(206,75,3)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (1 samples, 0.15%)</title><rect x="10.0" y="405" width="1.7" height="15.0" fill="rgb(245,189,29)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.15%)</title><rect x="907.0" y="325" width="1.7" height="15.0" fill="rgb(207,3,44)" rx="2" ry="2" />
<text  x="910.01" y="335.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.15%)</title><rect x="860.7" y="309" width="1.7" height="15.0" fill="rgb(254,99,8)" rx="2" ry="2" />
<text  x="863.70" y="319.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.15%)</title><rect x="907.0" y="213" width="1.7" height="15.0" fill="rgb(234,188,19)" rx="2" ry="2" />
<text  x="910.01" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.73%)</title><rect x="131.8" y="437" width="8.5" height="15.0" fill="rgb(208,134,8)" rx="2" ry="2" />
<text  x="134.77" y="447.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.15%)</title><rect x="1183.1" y="293" width="1.8" height="15.0" fill="rgb(231,197,7)" rx="2" ry="2" />
<text  x="1186.14" y="303.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.15%)</title><rect x="174.7" y="421" width="1.7" height="15.0" fill="rgb(210,46,21)" rx="2" ry="2" />
<text  x="177.65" y="431.5" ></text>
</g>
<g >
<title>rebalance_domains (8 samples, 1.16%)</title><rect x="1003.1" y="165" width="13.7" height="15.0" fill="rgb(246,162,51)" rx="2" ry="2" />
<text  x="1006.05" y="175.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.15%)</title><rect x="896.7" y="325" width="1.7" height="15.0" fill="rgb(240,94,17)" rx="2" ry="2" />
<text  x="899.72" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_get_next_event (1 samples, 0.15%)</title><rect x="967.0" y="197" width="1.8" height="15.0" fill="rgb(246,74,32)" rx="2" ry="2" />
<text  x="970.03" y="207.5" ></text>
</g>
<g >
<title>dispatcher (96 samples, 13.95%)</title><rect x="528.0" y="341" width="164.6" height="15.0" fill="rgb(229,155,2)" rx="2" ry="2" />
<text  x="530.97" y="351.5" >dispatcher</text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.15%)</title><rect x="997.9" y="245" width="1.7" height="15.0" fill="rgb(244,136,16)" rx="2" ry="2" />
<text  x="1000.91" y="255.5" ></text>
</g>
<g >
<title>get_energy_counter (1 samples, 0.15%)</title><rect x="919.0" y="261" width="1.7" height="15.0" fill="rgb(244,48,5)" rx="2" ry="2" />
<text  x="922.01" y="271.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (65 samples, 9.45%)</title><rect x="389.0" y="293" width="111.5" height="15.0" fill="rgb(205,170,23)" rx="2" ry="2" />
<text  x="392.04" y="303.5" >ringbuf::cons..</text>
</g>
<g >
<title>do_softirq_own_stack (13 samples, 1.89%)</title><rect x="999.6" y="229" width="22.3" height="15.0" fill="rgb(213,131,39)" rx="2" ry="2" />
<text  x="1002.62" y="239.5" >d..</text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.15%)</title><rect x="869.3" y="437" width="1.7" height="15.0" fill="rgb(244,5,44)" rx="2" ry="2" />
<text  x="872.27" y="447.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.15%)</title><rect x="862.4" y="293" width="1.7" height="15.0" fill="rgb(248,125,10)" rx="2" ry="2" />
<text  x="865.41" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.29%)</title><rect x="709.8" y="357" width="3.4" height="15.0" fill="rgb(218,156,52)" rx="2" ry="2" />
<text  x="712.77" y="367.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.15%)</title><rect x="1181.4" y="277" width="1.7" height="15.0" fill="rgb(228,201,38)" rx="2" ry="2" />
<text  x="1184.42" y="287.5" ></text>
</g>
<g >
<title>kernfs_fop_read (1 samples, 0.15%)</title><rect x="919.0" y="373" width="1.7" height="15.0" fill="rgb(251,89,1)" rx="2" ry="2" />
<text  x="922.01" y="383.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.15%)</title><rect x="859.0" y="325" width="1.7" height="15.0" fill="rgb(251,42,34)" rx="2" ry="2" />
<text  x="861.98" y="335.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (5 samples, 0.73%)</title><rect x="696.0" y="357" width="8.6" height="15.0" fill="rgb(227,213,20)" rx="2" ry="2" />
<text  x="699.05" y="367.5" ></text>
</g>
<g >
<title>NaClLogLock (3 samples, 0.44%)</title><rect x="728.6" y="373" width="5.2" height="15.0" fill="rgb(234,158,17)" rx="2" ry="2" />
<text  x="731.63" y="383.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.15%)</title><rect x="1015.1" y="101" width="1.7" height="15.0" fill="rgb(254,200,26)" rx="2" ry="2" />
<text  x="1018.06" y="111.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (104 samples, 15.12%)</title><rect x="963.6" y="293" width="178.4" height="15.0" fill="rgb(219,36,43)" rx="2" ry="2" />
<text  x="966.60" y="303.5" >cpuidle_enter_state</text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 1.02%)</title><rect x="852.1" y="373" width="12.0" height="15.0" fill="rgb(227,168,26)" rx="2" ry="2" />
<text  x="855.12" y="383.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.15%)</title><rect x="1159.1" y="245" width="1.7" height="15.0" fill="rgb(219,28,28)" rx="2" ry="2" />
<text  x="1162.13" y="255.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.15%)</title><rect x="862.4" y="325" width="1.7" height="15.0" fill="rgb(226,15,53)" rx="2" ry="2" />
<text  x="865.41" y="335.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.29%)</title><rect x="853.8" y="325" width="3.5" height="15.0" fill="rgb(209,74,12)" rx="2" ry="2" />
<text  x="856.84" y="335.5" ></text>
</g>
<g >
<title>NaClGetDesc (11 samples, 1.60%)</title><rect x="708.1" y="389" width="18.8" height="15.0" fill="rgb(248,180,34)" rx="2" ry="2" />
<text  x="711.05" y="399.5" ></text>
</g>
<g >
<title>cmd_record (65 samples, 9.45%)</title><rect x="11.7" y="437" width="111.5" height="15.0" fill="rgb(207,149,10)" rx="2" ry="2" />
<text  x="14.72" y="447.5" >cmd_record</text>
</g>
<g >
<title>cpu_startup_entry (21 samples, 3.05%)</title><rect x="922.4" y="421" width="36.1" height="15.0" fill="rgb(236,201,18)" rx="2" ry="2" />
<text  x="925.44" y="431.5" >cpu..</text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 9.30%)</title><rect x="11.7" y="117" width="109.8" height="15.0" fill="rgb(223,133,41)" rx="2" ry="2" />
<text  x="14.72" y="127.5" >x86_pmu_enable</text>
</g>
<g >
<title>perf_event_task_tick (3 samples, 0.44%)</title><rect x="987.6" y="101" width="5.2" height="15.0" fill="rgb(247,92,39)" rx="2" ry="2" />
<text  x="990.62" y="111.5" ></text>
</g>
<g >
<title>sel_ldr (458 samples, 66.57%)</title><rect x="123.2" y="469" width="785.5" height="15.0" fill="rgb(241,81,0)" rx="2" ry="2" />
<text  x="126.20" y="479.5" >sel_ldr</text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.29%)</title><rect x="552.0" y="325" width="3.4" height="15.0" fill="rgb(222,136,43)" rx="2" ry="2" />
<text  x="554.98" y="335.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeFactory (10 samples, 1.45%)</title><rect x="799.0" y="357" width="17.1" height="15.0" fill="rgb(246,196,30)" rx="2" ry="2" />
<text  x="801.95" y="367.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.15%)</title><rect x="915.6" y="389" width="1.7" height="15.0" fill="rgb(238,180,49)" rx="2" ry="2" />
<text  x="918.58" y="399.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.29%)</title><rect x="1136.8" y="277" width="3.5" height="15.0" fill="rgb(245,3,52)" rx="2" ry="2" />
<text  x="1139.83" y="287.5" ></text>
</g>
<g >
<title>dev_attr_show (1 samples, 0.15%)</title><rect x="919.0" y="293" width="1.7" height="15.0" fill="rgb(212,84,35)" rx="2" ry="2" />
<text  x="922.01" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (3 samples, 0.44%)</title><rect x="987.6" y="117" width="5.2" height="15.0" fill="rgb(244,41,32)" rx="2" ry="2" />
<text  x="990.62" y="127.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (8 samples, 1.16%)</title><rect x="692.6" y="373" width="13.7" height="15.0" fill="rgb(233,62,25)" rx="2" ry="2" />
<text  x="695.62" y="383.5" ></text>
</g>
<g >
<title>main (2 samples, 0.29%)</title><rect x="896.7" y="421" width="3.4" height="15.0" fill="rgb(211,112,18)" rx="2" ry="2" />
<text  x="899.72" y="431.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (1 samples, 0.15%)</title><rect x="524.5" y="357" width="1.7" height="15.0" fill="rgb(235,126,54)" rx="2" ry="2" />
<text  x="527.53" y="367.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 9.45%)</title><rect x="11.7" y="453" width="111.5" height="15.0" fill="rgb(240,184,51)" rx="2" ry="2" />
<text  x="14.72" y="463.5" >[unknown]</text>
</g>
<g >
<title>menu_reflect (2 samples, 0.29%)</title><rect x="1166.0" y="309" width="3.4" height="15.0" fill="rgb(220,64,14)" rx="2" ry="2" />
<text  x="1168.99" y="319.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.15%)</title><rect x="920.7" y="437" width="1.7" height="15.0" fill="rgb(217,121,27)" rx="2" ry="2" />
<text  x="923.73" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.15%)</title><rect x="991.0" y="69" width="1.8" height="15.0" fill="rgb(224,176,42)" rx="2" ry="2" />
<text  x="994.05" y="79.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (3 samples, 0.44%)</title><rect x="504.0" y="357" width="5.1" height="15.0" fill="rgb(225,179,29)" rx="2" ry="2" />
<text  x="506.95" y="367.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (1 samples, 0.15%)</title><rect x="176.4" y="421" width="1.7" height="15.0" fill="rgb(216,95,42)" rx="2" ry="2" />
<text  x="179.37" y="431.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.15%)</title><rect x="985.9" y="117" width="1.7" height="15.0" fill="rgb(247,91,32)" rx="2" ry="2" />
<text  x="988.90" y="127.5" ></text>
</g>
<g >
<title>start_kernel (135 samples, 19.62%)</title><rect x="958.5" y="405" width="231.5" height="15.0" fill="rgb(254,130,29)" rx="2" ry="2" />
<text  x="961.46" y="415.5" >start_kernel</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.15%)</title><rect x="704.6" y="341" width="1.7" height="15.0" fill="rgb(209,161,7)" rx="2" ry="2" />
<text  x="707.62" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.15%)</title><rect x="919.0" y="421" width="1.7" height="15.0" fill="rgb(250,105,36)" rx="2" ry="2" />
<text  x="922.01" y="431.5" ></text>
</g>
<g >
<title>calc_global_load_tick (1 samples, 0.15%)</title><rect x="982.5" y="117" width="1.7" height="15.0" fill="rgb(229,131,34)" rx="2" ry="2" />
<text  x="985.47" y="127.5" ></text>
</g>
<g >
<title>sysfs_kf_seq_show (1 samples, 0.15%)</title><rect x="919.0" y="309" width="1.7" height="15.0" fill="rgb(240,123,31)" rx="2" ry="2" />
<text  x="922.01" y="319.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (2 samples, 0.29%)</title><rect x="723.5" y="325" width="3.4" height="15.0" fill="rgb(218,176,13)" rx="2" ry="2" />
<text  x="726.49" y="335.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.15%)</title><rect x="915.6" y="341" width="1.7" height="15.0" fill="rgb(216,197,24)" rx="2" ry="2" />
<text  x="918.58" y="351.5" ></text>
</g>
<g >
<title>update_process_times (6 samples, 0.87%)</title><rect x="982.5" y="133" width="10.3" height="15.0" fill="rgb(210,42,38)" rx="2" ry="2" />
<text  x="985.47" y="143.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.15%)</title><rect x="121.5" y="309" width="1.7" height="15.0" fill="rgb(225,17,13)" rx="2" ry="2" />
<text  x="124.48" y="319.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.15%)</title><rect x="1142.0" y="293" width="1.7" height="15.0" fill="rgb(229,108,4)" rx="2" ry="2" />
<text  x="1144.98" y="303.5" ></text>
</g>
<g >
<title>NaClXMutexLock (3 samples, 0.44%)</title><rect x="728.6" y="357" width="5.2" height="15.0" fill="rgb(221,32,48)" rx="2" ry="2" />
<text  x="731.63" y="367.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (156 samples, 22.67%)</title><rect x="922.4" y="453" width="267.6" height="15.0" fill="rgb(239,135,28)" rx="2" ry="2" />
<text  x="925.44" y="463.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>native_write_msr (2 samples, 0.29%)</title><rect x="994.5" y="165" width="3.4" height="15.0" fill="rgb(226,67,37)" rx="2" ry="2" />
<text  x="997.48" y="175.5" ></text>
</g>
<g >
<title>generic_exec_single (64 samples, 9.30%)</title><rect x="11.7" y="197" width="109.8" height="15.0" fill="rgb(252,212,35)" rx="2" ry="2" />
<text  x="14.72" y="207.5" >generic_exec_..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (80 samples, 11.63%)</title><rect x="555.4" y="325" width="137.2" height="15.0" fill="rgb(205,174,52)" rx="2" ry="2" />
<text  x="558.41" y="335.5" >rustposix::safepo..</text>
</g>
<g >
<title>clockevents_program_event (2 samples, 0.29%)</title><rect x="994.5" y="181" width="3.4" height="15.0" fill="rgb(218,137,8)" rx="2" ry="2" />
<text  x="997.48" y="191.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.15%)</title><rect x="919.0" y="389" width="1.7" height="15.0" fill="rgb(216,120,37)" rx="2" ry="2" />
<text  x="922.01" y="399.5" ></text>
</g>
<g >
<title>arch_call_rest_init (135 samples, 19.62%)</title><rect x="958.5" y="389" width="231.5" height="15.0" fill="rgb(251,73,25)" rx="2" ry="2" />
<text  x="961.46" y="399.5" >arch_call_rest_init</text>
</g>
<g >
<title>event_function_call (64 samples, 9.30%)</title><rect x="11.7" y="229" width="109.8" height="15.0" fill="rgb(230,81,4)" rx="2" ry="2" />
<text  x="14.72" y="239.5" >event_functio..</text>
</g>
<g >
<title>run_rebalance_domains (12 samples, 1.74%)</title><rect x="1001.3" y="181" width="20.6" height="15.0" fill="rgb(214,133,2)" rx="2" ry="2" />
<text  x="1004.34" y="191.5" ></text>
</g>
<g >
<title>__run_hrtimer (14 samples, 2.03%)</title><rect x="970.5" y="181" width="24.0" height="15.0" fill="rgb(215,194,54)" rx="2" ry="2" />
<text  x="973.47" y="191.5" >_..</text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.15%)</title><rect x="907.0" y="229" width="1.7" height="15.0" fill="rgb(246,106,2)" rx="2" ry="2" />
<text  x="910.01" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.15%)</title><rect x="961.9" y="293" width="1.7" height="15.0" fill="rgb(212,210,51)" rx="2" ry="2" />
<text  x="964.89" y="303.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (2 samples, 0.29%)</title><rect x="171.2" y="421" width="3.5" height="15.0" fill="rgb(240,148,39)" rx="2" ry="2" />
<text  x="174.22" y="431.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.15%)</title><rect x="907.0" y="341" width="1.7" height="15.0" fill="rgb(210,24,2)" rx="2" ry="2" />
<text  x="910.01" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (4 samples, 0.58%)</title><rect x="603.4" y="309" width="6.9" height="15.0" fill="rgb(231,86,30)" rx="2" ry="2" />
<text  x="606.43" y="319.5" ></text>
</g>
<g >
<title>do_idle (21 samples, 3.05%)</title><rect x="922.4" y="405" width="36.1" height="15.0" fill="rgb(229,173,32)" rx="2" ry="2" />
<text  x="925.44" y="415.5" >do_..</text>
</g>
<g >
<title>NaClMutexLock (1 samples, 0.15%)</title><rect x="867.6" y="437" width="1.7" height="15.0" fill="rgb(230,199,53)" rx="2" ry="2" />
<text  x="870.56" y="447.5" ></text>
</g>
<g >
<title>add_timer (1 samples, 0.15%)</title><rect x="920.7" y="341" width="1.7" height="15.0" fill="rgb(219,156,15)" rx="2" ry="2" />
<text  x="923.73" y="351.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (186 samples, 27.03%)</title><rect x="181.5" y="389" width="319.0" height="15.0" fill="rgb(238,173,18)" rx="2" ry="2" />
<text  x="184.51" y="399.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>nohz_newidle_balance (2 samples, 0.29%)</title><rect x="1178.0" y="261" width="3.4" height="15.0" fill="rgb(216,160,7)" rx="2" ry="2" />
<text  x="1180.99" y="271.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.15%)</title><rect x="1184.9" y="245" width="1.7" height="15.0" fill="rgb(250,18,42)" rx="2" ry="2" />
<text  x="1187.85" y="255.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.15%)</title><rect x="992.8" y="165" width="1.7" height="15.0" fill="rgb(215,171,52)" rx="2" ry="2" />
<text  x="995.76" y="175.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.15%)</title><rect x="553.7" y="309" width="1.7" height="15.0" fill="rgb(249,65,25)" rx="2" ry="2" />
<text  x="556.69" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (64 samples, 9.30%)</title><rect x="11.7" y="309" width="109.8" height="15.0" fill="rgb(250,158,37)" rx="2" ry="2" />
<text  x="14.72" y="319.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1 samples, 0.15%)</title><rect x="169.5" y="421" width="1.7" height="15.0" fill="rgb(220,74,36)" rx="2" ry="2" />
<text  x="172.51" y="431.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.15%)</title><rect x="1186.6" y="277" width="1.7" height="15.0" fill="rgb(241,87,18)" rx="2" ry="2" />
<text  x="1189.57" y="287.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.15%)</title><rect x="10.0" y="453" width="1.7" height="15.0" fill="rgb(217,12,23)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.15%)</title><rect x="896.7" y="309" width="1.7" height="15.0" fill="rgb(232,69,19)" rx="2" ry="2" />
<text  x="899.72" y="319.5" ></text>
</g>
<g >
<title>lind_read (186 samples, 27.03%)</title><rect x="181.5" y="357" width="319.0" height="15.0" fill="rgb(248,179,50)" rx="2" ry="2" />
<text  x="184.51" y="367.5" >lind_read</text>
</g>
<g >
<title>run_posix_cpu_timers (2 samples, 0.29%)</title><rect x="979.0" y="133" width="3.5" height="15.0" fill="rgb(217,204,47)" rx="2" ry="2" />
<text  x="982.04" y="143.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (8 samples, 1.16%)</title><rect x="871.0" y="437" width="13.7" height="15.0" fill="rgb(225,112,47)" rx="2" ry="2" />
<text  x="873.99" y="447.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.15%)</title><rect x="121.5" y="117" width="1.7" height="15.0" fill="rgb(218,92,1)" rx="2" ry="2" />
<text  x="124.48" y="127.5" ></text>
</g>
<g >
<title>swapper (164 samples, 23.84%)</title><rect x="908.7" y="469" width="281.3" height="15.0" fill="rgb(253,156,22)" rx="2" ry="2" />
<text  x="911.72" y="479.5" >swapper</text>
</g>
<g >
<title>do_execveat_common (1 samples, 0.15%)</title><rect x="10.0" y="309" width="1.7" height="15.0" fill="rgb(237,69,42)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>rest_init (135 samples, 19.62%)</title><rect x="958.5" y="373" width="231.5" height="15.0" fill="rgb(211,124,50)" rx="2" ry="2" />
<text  x="961.46" y="383.5" >rest_init</text>
</g>
<g >
<title>tick_sched_timer (8 samples, 1.16%)</title><rect x="979.0" y="165" width="13.8" height="15.0" fill="rgb(220,45,31)" rx="2" ry="2" />
<text  x="982.04" y="175.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.15%)</title><rect x="860.7" y="325" width="1.7" height="15.0" fill="rgb(239,190,5)" rx="2" ry="2" />
<text  x="863.70" y="335.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (1 samples, 0.15%)</title><rect x="1157.4" y="261" width="1.7" height="15.0" fill="rgb(238,76,23)" rx="2" ry="2" />
<text  x="1160.41" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.15%)</title><rect x="967.0" y="181" width="1.8" height="15.0" fill="rgb(219,72,23)" rx="2" ry="2" />
<text  x="970.03" y="191.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 9.30%)</title><rect x="11.7" y="133" width="109.8" height="15.0" fill="rgb(221,188,27)" rx="2" ry="2" />
<text  x="14.72" y="143.5" >ctx_resched</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.44%)</title><rect x="915.6" y="453" width="5.1" height="15.0" fill="rgb(215,118,54)" rx="2" ry="2" />
<text  x="918.58" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (8 samples, 1.16%)</title><rect x="589.7" y="309" width="13.7" height="15.0" fill="rgb(214,156,54)" rx="2" ry="2" />
<text  x="592.71" y="319.5" ></text>
</g>
<g >
<title>NaClDescRef (1 samples, 0.15%)</title><rect x="708.1" y="373" width="1.7" height="15.0" fill="rgb(222,73,17)" rx="2" ry="2" />
<text  x="711.05" y="383.5" ></text>
</g>
<g >
<title>need_update (1 samples, 0.15%)</title><rect x="1169.4" y="277" width="1.7" height="15.0" fill="rgb(240,225,31)" rx="2" ry="2" />
<text  x="1172.42" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (3 samples, 0.44%)</title><rect x="1183.1" y="325" width="5.2" height="15.0" fill="rgb(207,175,39)" rx="2" ry="2" />
<text  x="1186.14" y="335.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.15%)</title><rect x="859.0" y="309" width="1.7" height="15.0" fill="rgb(252,0,12)" rx="2" ry="2" />
<text  x="861.98" y="319.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.15%)</title><rect x="121.5" y="181" width="1.7" height="15.0" fill="rgb(254,8,42)" rx="2" ry="2" />
<text  x="124.48" y="191.5" ></text>
</g>
<g >
<title>record__pushfn (1 samples, 0.15%)</title><rect x="121.5" y="357" width="1.7" height="15.0" fill="rgb(252,153,27)" rx="2" ry="2" />
<text  x="124.48" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.15%)</title><rect x="915.6" y="421" width="1.7" height="15.0" fill="rgb(224,78,51)" rx="2" ry="2" />
<text  x="918.58" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.15%)</title><rect x="776.7" y="341" width="1.7" height="15.0" fill="rgb(223,18,16)" rx="2" ry="2" />
<text  x="779.66" y="351.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.15%)</title><rect x="915.6" y="293" width="1.7" height="15.0" fill="rgb(220,156,46)" rx="2" ry="2" />
<text  x="918.58" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (3 samples, 0.44%)</title><rect x="543.4" y="325" width="5.1" height="15.0" fill="rgb(220,16,52)" rx="2" ry="2" />
<text  x="546.40" y="335.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.15%)</title><rect x="917.3" y="373" width="1.7" height="15.0" fill="rgb(224,61,28)" rx="2" ry="2" />
<text  x="920.30" y="383.5" ></text>
</g>
<g >
<title>NaClMutexLock (3 samples, 0.44%)</title><rect x="728.6" y="341" width="5.2" height="15.0" fill="rgb(216,72,54)" rx="2" ry="2" />
<text  x="731.63" y="351.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (13 samples, 1.89%)</title><rect x="999.6" y="213" width="22.3" height="15.0" fill="rgb(219,27,51)" rx="2" ry="2" />
<text  x="1002.62" y="223.5" >a..</text>
</g>
<g >
<title>__evlist__enable (64 samples, 9.30%)</title><rect x="11.7" y="405" width="109.8" height="15.0" fill="rgb(212,1,29)" rx="2" ry="2" />
<text  x="14.72" y="415.5" >__evlist__ena..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.15%)</title><rect x="148.9" y="437" width="1.7" height="15.0" fill="rgb(248,57,11)" rx="2" ry="2" />
<text  x="151.92" y="447.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.15%)</title><rect x="121.5" y="85" width="1.7" height="15.0" fill="rgb(205,208,44)" rx="2" ry="2" />
<text  x="124.48" y="95.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (1 samples, 0.15%)</title><rect x="884.7" y="437" width="1.7" height="15.0" fill="rgb(230,42,48)" rx="2" ry="2" />
<text  x="887.71" y="447.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (124 samples, 18.02%)</title><rect x="960.2" y="325" width="212.6" height="15.0" fill="rgb(250,146,14)" rx="2" ry="2" />
<text  x="963.17" y="335.5" >cpuidle_idle_call</text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.15%)</title><rect x="859.0" y="293" width="1.7" height="15.0" fill="rgb(242,135,53)" rx="2" ry="2" />
<text  x="861.98" y="303.5" ></text>
</g>
<g >
<title>timerqueue_add (2 samples, 0.29%)</title><rect x="972.2" y="149" width="3.4" height="15.0" fill="rgb(231,62,44)" rx="2" ry="2" />
<text  x="975.18" y="159.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.15%)</title><rect x="919.0" y="405" width="1.7" height="15.0" fill="rgb(236,170,36)" rx="2" ry="2" />
<text  x="922.01" y="415.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.15%)</title><rect x="920.7" y="421" width="1.7" height="15.0" fill="rgb(218,219,8)" rx="2" ry="2" />
<text  x="923.73" y="431.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.15%)</title><rect x="907.0" y="357" width="1.7" height="15.0" fill="rgb(216,130,14)" rx="2" ry="2" />
<text  x="910.01" y="367.5" ></text>
</g>
<g >
<title>NaClDescUnref (8 samples, 1.16%)</title><rect x="692.6" y="389" width="13.7" height="15.0" fill="rgb(225,100,19)" rx="2" ry="2" />
<text  x="695.62" y="399.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeRemoveVal (21 samples, 3.05%)</title><rect x="740.6" y="357" width="36.1" height="15.0" fill="rgb(218,27,18)" rx="2" ry="2" />
<text  x="743.64" y="367.5" >NaC..</text>
</g>
<g >
<title>timekeeping_max_deferment (1 samples, 0.15%)</title><rect x="1160.8" y="261" width="1.8" height="15.0" fill="rgb(229,159,39)" rx="2" ry="2" />
<text  x="1163.84" y="271.5" ></text>
</g>
<g >
<title>[perf-192.map] (1 samples, 0.15%)</title><rect x="154.1" y="453" width="1.7" height="15.0" fill="rgb(247,182,49)" rx="2" ry="2" />
<text  x="157.07" y="463.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeAddInterval (16 samples, 2.33%)</title><rect x="790.4" y="373" width="27.4" height="15.0" fill="rgb(210,20,26)" rx="2" ry="2" />
<text  x="793.38" y="383.5" >N..</text>
</g>
<g >
<title>lind_write (97 samples, 14.10%)</title><rect x="526.2" y="357" width="166.4" height="15.0" fill="rgb(245,73,35)" rx="2" ry="2" />
<text  x="529.25" y="367.5" >lind_write</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.15%)</title><rect x="855.6" y="293" width="1.7" height="15.0" fill="rgb(248,61,41)" rx="2" ry="2" />
<text  x="858.55" y="303.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.15%)</title><rect x="991.0" y="85" width="1.8" height="15.0" fill="rgb(244,74,48)" rx="2" ry="2" />
<text  x="994.05" y="95.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.15%)</title><rect x="917.3" y="357" width="1.7" height="15.0" fill="rgb(236,114,11)" rx="2" ry="2" />
<text  x="920.30" y="367.5" ></text>
</g>
<g >
<title>cpuidle_enter (21 samples, 3.05%)</title><rect x="922.4" y="373" width="36.1" height="15.0" fill="rgb(254,39,26)" rx="2" ry="2" />
<text  x="925.44" y="383.5" >cpu..</text>
</g>
<g >
<title>kernfs_seq_show (1 samples, 0.15%)</title><rect x="919.0" y="325" width="1.7" height="15.0" fill="rgb(239,171,18)" rx="2" ry="2" />
<text  x="922.01" y="335.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.15%)</title><rect x="1154.0" y="277" width="1.7" height="15.0" fill="rgb(230,69,47)" rx="2" ry="2" />
<text  x="1156.98" y="287.5" ></text>
</g>
<g >
<title>NaClAvlTreeInsert (3 samples, 0.44%)</title><rect x="793.8" y="357" width="5.2" height="15.0" fill="rgb(243,169,13)" rx="2" ry="2" />
<text  x="796.81" y="367.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.29%)</title><rect x="780.1" y="341" width="3.4" height="15.0" fill="rgb(254,70,40)" rx="2" ry="2" />
<text  x="783.09" y="351.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.15%)</title><rect x="735.5" y="325" width="1.7" height="15.0" fill="rgb(215,94,16)" rx="2" ry="2" />
<text  x="738.49" y="335.5" ></text>
</g>
<g >
<title>exc_page_fault (9 samples, 1.31%)</title><rect x="848.7" y="421" width="15.4" height="15.0" fill="rgb(226,92,39)" rx="2" ry="2" />
<text  x="851.69" y="431.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (3 samples, 0.44%)</title><rect x="143.8" y="437" width="5.1" height="15.0" fill="rgb(247,132,34)" rx="2" ry="2" />
<text  x="146.78" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (34 samples, 4.94%)</title><rect x="442.2" y="277" width="58.3" height="15.0" fill="rgb(207,138,31)" rx="2" ry="2" />
<text  x="445.21" y="287.5" >__memm..</text>
</g>
<g >
<title>__softirqentry_text_start (13 samples, 1.89%)</title><rect x="999.6" y="197" width="22.3" height="15.0" fill="rgb(222,80,2)" rx="2" ry="2" />
<text  x="1002.62" y="207.5" >_..</text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (1 samples, 0.15%)</title><rect x="1184.9" y="277" width="1.7" height="15.0" fill="rgb(252,36,50)" rx="2" ry="2" />
<text  x="1187.85" y="287.5" ></text>
</g>
<g >
<title>__execvpe_common (1 samples, 0.15%)</title><rect x="10.0" y="389" width="1.7" height="15.0" fill="rgb(216,60,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>irq_exit_rcu (13 samples, 1.89%)</title><rect x="999.6" y="245" width="22.3" height="15.0" fill="rgb(225,220,39)" rx="2" ry="2" />
<text  x="1002.62" y="255.5" >i..</text>
</g>
<g >
<title>NaClSysWriteDecoder (189 samples, 27.47%)</title><rect x="500.5" y="421" width="324.2" height="15.0" fill="rgb(239,57,28)" rx="2" ry="2" />
<text  x="503.52" y="431.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>NaClSyscallCSegHook (2 samples, 0.29%)</title><rect x="126.6" y="437" width="3.5" height="15.0" fill="rgb(206,189,30)" rx="2" ry="2" />
<text  x="129.63" y="447.5" ></text>
</g>
<g >
<title>event_function (64 samples, 9.30%)</title><rect x="11.7" y="165" width="109.8" height="15.0" fill="rgb(240,197,42)" rx="2" ry="2" />
<text  x="14.72" y="175.5" >event_function</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (35 samples, 5.09%)</title><rect x="963.6" y="261" width="60.0" height="15.0" fill="rgb(244,60,25)" rx="2" ry="2" />
<text  x="966.60" y="271.5" >sysvec..</text>
</g>
<g >
<title>NaClIntervalRangeTreePrint (2 samples, 0.29%)</title><rect x="123.2" y="437" width="3.4" height="15.0" fill="rgb(213,187,34)" rx="2" ry="2" />
<text  x="126.20" y="447.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (101 samples, 14.68%)</title><rect x="519.4" y="389" width="173.2" height="15.0" fill="rgb(213,196,4)" rx="2" ry="2" />
<text  x="522.39" y="399.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (3 samples, 0.44%)</title><rect x="699.5" y="341" width="5.1" height="15.0" fill="rgb(236,60,29)" rx="2" ry="2" />
<text  x="702.48" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.15%)</title><rect x="10.0" y="341" width="1.7" height="15.0" fill="rgb(207,207,11)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.15%)</title><rect x="706.3" y="389" width="1.8" height="15.0" fill="rgb(229,179,16)" rx="2" ry="2" />
<text  x="709.34" y="399.5" ></text>
</g>
<g >
<title>perf (65 samples, 9.45%)</title><rect x="11.7" y="469" width="111.5" height="15.0" fill="rgb(207,190,22)" rx="2" ry="2" />
<text  x="14.72" y="479.5" >perf</text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (5 samples, 0.73%)</title><rect x="502.2" y="405" width="8.6" height="15.0" fill="rgb(234,46,32)" rx="2" ry="2" />
<text  x="505.24" y="415.5" ></text>
</g>
<g >
<title>NaClGetDesc (1 samples, 0.15%)</title><rect x="510.8" y="405" width="1.7" height="15.0" fill="rgb(242,229,54)" rx="2" ry="2" />
<text  x="513.81" y="415.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (135 samples, 19.62%)</title><rect x="958.5" y="437" width="231.5" height="15.0" fill="rgb(237,152,50)" rx="2" ry="2" />
<text  x="961.46" y="447.5" >x86_64_start_kernel</text>
</g>
<g >
<title>NaClMutexUnlock (1 samples, 0.15%)</title><rect x="735.5" y="341" width="1.7" height="15.0" fill="rgb(210,209,28)" rx="2" ry="2" />
<text  x="738.49" y="351.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (98 samples, 14.24%)</title><rect x="524.5" y="373" width="168.1" height="15.0" fill="rgb(249,84,21)" rx="2" ry="2" />
<text  x="527.53" y="383.5" >NaClHostDescWrite</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (20 samples, 2.91%)</title><rect x="963.6" y="229" width="34.3" height="15.0" fill="rgb(250,108,19)" rx="2" ry="2" />
<text  x="966.60" y="239.5" >__..</text>
</g>
<g >
<title>malloc@plt (1 samples, 0.15%)</title><rect x="814.4" y="341" width="1.7" height="15.0" fill="rgb(242,63,11)" rx="2" ry="2" />
<text  x="817.39" y="351.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (21 samples, 3.05%)</title><rect x="922.4" y="389" width="36.1" height="15.0" fill="rgb(234,68,16)" rx="2" ry="2" />
<text  x="925.44" y="399.5" >cpu..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.29%)</title><rect x="720.1" y="309" width="3.4" height="15.0" fill="rgb(208,163,49)" rx="2" ry="2" />
<text  x="723.06" y="319.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.15%)</title><rect x="1178.0" y="229" width="1.7" height="15.0" fill="rgb(224,130,12)" rx="2" ry="2" />
<text  x="1180.99" y="239.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.58%)</title><rect x="1176.3" y="309" width="6.8" height="15.0" fill="rgb(236,200,21)" rx="2" ry="2" />
<text  x="1179.28" y="319.5" ></text>
</g>
<g >
<title>rapl_unit_xlate.isra.0 (1 samples, 0.15%)</title><rect x="919.0" y="245" width="1.7" height="15.0" fill="rgb(241,211,1)" rx="2" ry="2" />
<text  x="922.01" y="255.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 0.29%)</title><rect x="178.1" y="357" width="3.4" height="15.0" fill="rgb(209,228,39)" rx="2" ry="2" />
<text  x="181.08" y="367.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (4 samples, 0.58%)</title><rect x="900.1" y="453" width="6.9" height="15.0" fill="rgb(237,144,43)" rx="2" ry="2" />
<text  x="903.15" y="463.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.15%)</title><rect x="907.0" y="405" width="1.7" height="15.0" fill="rgb(252,6,37)" rx="2" ry="2" />
<text  x="910.01" y="415.5" ></text>
</g>
<g >
<title>menu_update (2 samples, 0.29%)</title><rect x="1162.6" y="293" width="3.4" height="15.0" fill="rgb(224,77,28)" rx="2" ry="2" />
<text  x="1165.56" y="303.5" ></text>
</g>
<g >
<title>NaClMutexLock (3 samples, 0.44%)</title><rect x="817.8" y="357" width="5.2" height="15.0" fill="rgb(211,7,23)" rx="2" ry="2" />
<text  x="820.82" y="367.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (2 samples, 0.29%)</title><rect x="896.7" y="373" width="3.4" height="15.0" fill="rgb(253,55,35)" rx="2" ry="2" />
<text  x="899.72" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="690.9" y="277" width="1.7" height="15.0" fill="rgb(210,149,45)" rx="2" ry="2" />
<text  x="693.90" y="287.5" ></text>
</g>
<g >
<title>NaClGetDescMu (6 samples, 0.87%)</title><rect x="716.6" y="373" width="10.3" height="15.0" fill="rgb(206,52,39)" rx="2" ry="2" />
<text  x="719.63" y="383.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.15%)</title><rect x="917.3" y="325" width="1.7" height="15.0" fill="rgb(238,16,31)" rx="2" ry="2" />
<text  x="920.30" y="335.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (1 samples, 0.15%)</title><rect x="997.9" y="229" width="1.7" height="15.0" fill="rgb(221,33,46)" rx="2" ry="2" />
<text  x="1000.91" y="239.5" ></text>
</g>
<g >
<title>NaClSysRead (186 samples, 27.03%)</title><rect x="181.5" y="405" width="319.0" height="15.0" fill="rgb(254,17,31)" rx="2" ry="2" />
<text  x="184.51" y="415.5" >NaClSysRead</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.15%)</title><rect x="121.5" y="293" width="1.7" height="15.0" fill="rgb(246,215,34)" rx="2" ry="2" />
<text  x="124.48" y="303.5" ></text>
</g>
<g >
<title>NaClRangeStatsUpdate (1 samples, 0.15%)</title><rect x="762.9" y="309" width="1.8" height="15.0" fill="rgb(244,32,54)" rx="2" ry="2" />
<text  x="765.94" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="509.1" y="389" width="1.7" height="15.0" fill="rgb(217,103,46)" rx="2" ry="2" />
<text  x="512.10" y="399.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (2 samples, 0.29%)</title><rect x="178.1" y="405" width="3.4" height="15.0" fill="rgb(222,80,37)" rx="2" ry="2" />
<text  x="181.08" y="415.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (45 samples, 6.54%)</title><rect x="615.4" y="309" width="77.2" height="15.0" fill="rgb(214,51,20)" rx="2" ry="2" />
<text  x="618.44" y="319.5" >rustposi..</text>
</g>
<g >
<title>update_cpu_capacity (1 samples, 0.15%)</title><rect x="1013.3" y="101" width="1.8" height="15.0" fill="rgb(222,184,24)" rx="2" ry="2" />
<text  x="1016.34" y="111.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (2 samples, 0.29%)</title><rect x="1169.4" y="293" width="3.4" height="15.0" fill="rgb(245,22,32)" rx="2" ry="2" />
<text  x="1172.42" y="303.5" ></text>
</g>
<g >
<title>dispatcher (186 samples, 27.03%)</title><rect x="181.5" y="341" width="319.0" height="15.0" fill="rgb(236,186,7)" rx="2" ry="2" />
<text  x="184.51" y="351.5" >dispatcher</text>
</g>
<g >
<title>cmd_record (1 samples, 0.15%)</title><rect x="10.0" y="437" width="1.7" height="15.0" fill="rgb(218,37,29)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreePrint (1 samples, 0.15%)</title><rect x="816.1" y="357" width="1.7" height="15.0" fill="rgb(236,154,1)" rx="2" ry="2" />
<text  x="819.10" y="367.5" ></text>
</g>
<g >
<title>NaClLogUnlock (2 samples, 0.29%)</title><rect x="733.8" y="373" width="3.4" height="15.0" fill="rgb(254,137,23)" rx="2" ry="2" />
<text  x="736.78" y="383.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.15%)</title><rect x="121.5" y="101" width="1.7" height="15.0" fill="rgb(242,77,25)" rx="2" ry="2" />
<text  x="124.48" y="111.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (186 samples, 27.03%)</title><rect x="181.5" y="325" width="319.0" height="15.0" fill="rgb(249,205,48)" rx="2" ry="2" />
<text  x="184.51" y="335.5" >rustposix::safeposix::syscalls::fs_calls::&lt;..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.15%)</title><rect x="130.1" y="437" width="1.7" height="15.0" fill="rgb(252,180,41)" rx="2" ry="2" />
<text  x="133.06" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (15 samples, 2.18%)</title><rect x="968.8" y="197" width="25.7" height="15.0" fill="rgb(219,106,14)" rx="2" ry="2" />
<text  x="971.75" y="207.5" >_..</text>
</g>
<g >
<title>[sel_ldr] (390 samples, 56.69%)</title><rect x="155.8" y="453" width="668.9" height="15.0" fill="rgb(250,180,3)" rx="2" ry="2" />
<text  x="158.78" y="463.5" >[sel_ldr]</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.15%)</title><rect x="507.4" y="341" width="1.7" height="15.0" fill="rgb(209,119,21)" rx="2" ry="2" />
<text  x="510.38" y="351.5" ></text>
</g>
<g >
<title>record__write (1 samples, 0.15%)</title><rect x="121.5" y="341" width="1.7" height="15.0" fill="rgb(234,122,23)" rx="2" ry="2" />
<text  x="124.48" y="351.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 0.29%)</title><rect x="178.1" y="341" width="3.4" height="15.0" fill="rgb(223,226,40)" rx="2" ry="2" />
<text  x="181.08" y="351.5" ></text>
</g>
<g >
<title>first_online_pgdat (1 samples, 0.15%)</title><rect x="1171.1" y="261" width="1.7" height="15.0" fill="rgb(252,210,15)" rx="2" ry="2" />
<text  x="1174.13" y="271.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.15%)</title><rect x="999.6" y="181" width="1.7" height="15.0" fill="rgb(232,30,14)" rx="2" ry="2" />
<text  x="1002.62" y="191.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.15%)</title><rect x="907.0" y="309" width="1.7" height="15.0" fill="rgb(238,74,28)" rx="2" ry="2" />
<text  x="910.01" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.29%)</title><rect x="773.2" y="341" width="3.5" height="15.0" fill="rgb(246,140,49)" rx="2" ry="2" />
<text  x="776.23" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.15%)</title><rect x="121.5" y="277" width="1.7" height="15.0" fill="rgb(210,9,7)" rx="2" ry="2" />
<text  x="124.48" y="287.5" ></text>
</g>
<g >
<title>__cmd_record (65 samples, 9.45%)</title><rect x="11.7" y="421" width="111.5" height="15.0" fill="rgb(222,213,43)" rx="2" ry="2" />
<text  x="14.72" y="431.5" >__cmd_record</text>
</g>
<g >
<title>find_busiest_group (2 samples, 0.29%)</title><rect x="1013.3" y="133" width="3.5" height="15.0" fill="rgb(224,163,11)" rx="2" ry="2" />
<text  x="1016.34" y="143.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.44%)</title><rect x="1178.0" y="293" width="5.1" height="15.0" fill="rgb(240,78,31)" rx="2" ry="2" />
<text  x="1180.99" y="303.5" ></text>
</g>
<g >
<title>__update_blocked_fair (2 samples, 0.29%)</title><rect x="1018.5" y="149" width="3.4" height="15.0" fill="rgb(206,229,53)" rx="2" ry="2" />
<text  x="1021.49" y="159.5" ></text>
</g>
<g >
<title>rcu_nmi_exit (1 samples, 0.15%)</title><rect x="1021.9" y="229" width="1.7" height="15.0" fill="rgb(226,73,20)" rx="2" ry="2" />
<text  x="1024.92" y="239.5" ></text>
</g>
<g >
<title>energy_uj_show (1 samples, 0.15%)</title><rect x="919.0" y="277" width="1.7" height="15.0" fill="rgb(230,183,24)" rx="2" ry="2" />
<text  x="922.01" y="287.5" ></text>
</g>
<g >
<title>restore_regs_and_return_to_kernel (1 samples, 0.15%)</title><rect x="1147.1" y="293" width="1.7" height="15.0" fill="rgb(207,184,31)" rx="2" ry="2" />
<text  x="1150.12" y="303.5" ></text>
</g>
<g >
<title>NaClVmIoHasEnded (27 samples, 3.92%)</title><rect x="737.2" y="389" width="46.3" height="15.0" fill="rgb(239,56,11)" rx="2" ry="2" />
<text  x="740.21" y="399.5" >NaCl..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1 samples, 0.15%)</title><rect x="150.6" y="437" width="1.8" height="15.0" fill="rgb(211,16,33)" rx="2" ry="2" />
<text  x="153.64" y="447.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.15%)</title><rect x="1178.0" y="213" width="1.7" height="15.0" fill="rgb(215,190,7)" rx="2" ry="2" />
<text  x="1180.99" y="223.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 9.30%)</title><rect x="11.7" y="85" width="109.8" height="15.0" fill="rgb(210,201,34)" rx="2" ry="2" />
<text  x="14.72" y="95.5" >native_write_..</text>
</g>
<g >
<title>__cmd_record (1 samples, 0.15%)</title><rect x="10.0" y="421" width="1.7" height="15.0" fill="rgb(213,229,54)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.15%)</title><rect x="121.5" y="261" width="1.7" height="15.0" fill="rgb(226,142,50)" rx="2" ry="2" />
<text  x="124.48" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (8 samples, 1.16%)</title><rect x="979.0" y="149" width="13.8" height="15.0" fill="rgb(237,83,26)" rx="2" ry="2" />
<text  x="982.04" y="159.5" ></text>
</g>
<g >
<title>NaClXMutexLock (3 samples, 0.44%)</title><rect x="817.8" y="373" width="5.2" height="15.0" fill="rgb(234,147,21)" rx="2" ry="2" />
<text  x="820.82" y="383.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.15%)</title><rect x="907.0" y="245" width="1.7" height="15.0" fill="rgb(245,40,34)" rx="2" ry="2" />
<text  x="910.01" y="255.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.15%)</title><rect x="855.6" y="261" width="1.7" height="15.0" fill="rgb(226,204,44)" rx="2" ry="2" />
<text  x="858.55" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.15%)</title><rect x="855.6" y="309" width="1.7" height="15.0" fill="rgb(249,20,5)" rx="2" ry="2" />
<text  x="858.55" y="319.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.15%)</title><rect x="140.3" y="437" width="1.8" height="15.0" fill="rgb(250,7,53)" rx="2" ry="2" />
<text  x="143.35" y="447.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (2 samples, 0.29%)</title><rect x="780.1" y="357" width="3.4" height="15.0" fill="rgb(232,102,44)" rx="2" ry="2" />
<text  x="783.09" y="367.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (1 samples, 0.15%)</title><rect x="917.3" y="405" width="1.7" height="15.0" fill="rgb(229,166,49)" rx="2" ry="2" />
<text  x="920.30" y="415.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.15%)</title><rect x="121.5" y="325" width="1.7" height="15.0" fill="rgb(212,100,37)" rx="2" ry="2" />
<text  x="124.48" y="335.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (7 samples, 1.02%)</title><rect x="680.6" y="293" width="12.0" height="15.0" fill="rgb(209,92,46)" rx="2" ry="2" />
<text  x="683.61" y="303.5" ></text>
</g>
<g >
<title>NaClVmIoWillStart (24 samples, 3.49%)</title><rect x="783.5" y="389" width="41.2" height="15.0" fill="rgb(235,162,40)" rx="2" ry="2" />
<text  x="786.52" y="399.5" >NaC..</text>
</g>
<g >
<title>NaClXMutexLock (1 samples, 0.15%)</title><rect x="776.7" y="373" width="1.7" height="15.0" fill="rgb(250,119,9)" rx="2" ry="2" />
<text  x="779.66" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (35 samples, 5.09%)</title><rect x="963.6" y="277" width="60.0" height="15.0" fill="rgb(233,198,19)" rx="2" ry="2" />
<text  x="966.60" y="287.5" >asm_sy..</text>
</g>
<g >
<title>NaClCopyDropLock (4 samples, 0.58%)</title><rect x="502.2" y="389" width="6.9" height="15.0" fill="rgb(245,57,34)" rx="2" ry="2" />
<text  x="505.24" y="399.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.15%)</title><rect x="1179.7" y="213" width="1.7" height="15.0" fill="rgb(215,225,22)" rx="2" ry="2" />
<text  x="1182.71" y="223.5" ></text>
</g>
<g >
<title>NaClAvlTreeInsert (1 samples, 0.15%)</title><rect x="788.7" y="373" width="1.7" height="15.0" fill="rgb(248,184,34)" rx="2" ry="2" />
<text  x="791.66" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.15%)</title><rect x="10.0" y="357" width="1.7" height="15.0" fill="rgb(234,141,0)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.29%)</title><rect x="896.7" y="357" width="3.4" height="15.0" fill="rgb(240,128,12)" rx="2" ry="2" />
<text  x="899.72" y="367.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.29%)</title><rect x="723.5" y="309" width="3.4" height="15.0" fill="rgb(212,221,22)" rx="2" ry="2" />
<text  x="726.49" y="319.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.15%)</title><rect x="121.5" y="165" width="1.7" height="15.0" fill="rgb(211,26,0)" rx="2" ry="2" />
<text  x="124.48" y="175.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 9.30%)</title><rect x="11.7" y="261" width="109.8" height="15.0" fill="rgb(232,34,52)" rx="2" ry="2" />
<text  x="14.72" y="271.5" >perf_event_fo..</text>
</g>
<g >
<title>HandleStackContext (2 samples, 0.29%)</title><rect x="160.9" y="421" width="3.5" height="15.0" fill="rgb(234,222,1)" rx="2" ry="2" />
<text  x="163.93" y="431.5" ></text>
</g>
<g >
<title>__bitmap_and (2 samples, 0.29%)</title><rect x="1008.2" y="149" width="3.4" height="15.0" fill="rgb(223,218,34)" rx="2" ry="2" />
<text  x="1011.20" y="159.5" ></text>
</g>
<g >
<title>NaClAvlTreeExtract (11 samples, 1.60%)</title><rect x="745.8" y="325" width="18.9" height="15.0" fill="rgb(249,221,5)" rx="2" ry="2" />
<text  x="748.78" y="335.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (2 samples, 0.29%)</title><rect x="1013.3" y="117" width="3.5" height="15.0" fill="rgb(246,170,54)" rx="2" ry="2" />
<text  x="1016.34" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.44%)</title><rect x="915.6" y="437" width="5.1" height="15.0" fill="rgb(225,152,42)" rx="2" ry="2" />
<text  x="918.58" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.15%)</title><rect x="907.0" y="437" width="1.7" height="15.0" fill="rgb(233,97,50)" rx="2" ry="2" />
<text  x="910.01" y="447.5" ></text>
</g>
<g >
<title>llist_reverse_order (1 samples, 0.15%)</title><rect x="1172.8" y="309" width="1.8" height="15.0" fill="rgb(244,180,0)" rx="2" ry="2" />
<text  x="1175.85" y="319.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (389 samples, 56.54%)</title><rect x="157.5" y="437" width="667.2" height="15.0" fill="rgb(223,172,17)" rx="2" ry="2" />
<text  x="160.50" y="447.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.15%)</title><rect x="898.4" y="325" width="1.7" height="15.0" fill="rgb(214,214,3)" rx="2" ry="2" />
<text  x="901.43" y="335.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (23 samples, 3.34%)</title><rect x="641.2" y="293" width="39.4" height="15.0" fill="rgb(248,73,12)" rx="2" ry="2" />
<text  x="644.16" y="303.5" >__p..</text>
</g>
<g >
<title>NaClXMutexUnlock (1 samples, 0.15%)</title><rect x="823.0" y="373" width="1.7" height="15.0" fill="rgb(250,162,11)" rx="2" ry="2" />
<text  x="825.97" y="383.5" ></text>
</g>
<g >
<title>wait_for_stable_page (1 samples, 0.15%)</title><rect x="121.5" y="69" width="1.7" height="15.0" fill="rgb(212,24,21)" rx="2" ry="2" />
<text  x="124.48" y="79.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.44%)</title><rect x="610.3" y="309" width="5.1" height="15.0" fill="rgb(238,177,28)" rx="2" ry="2" />
<text  x="613.29" y="319.5" ></text>
</g>
<g >
<title>__GI_execve (1 samples, 0.15%)</title><rect x="10.0" y="373" width="1.7" height="15.0" fill="rgb(228,181,19)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.15%)</title><rect x="907.0" y="389" width="1.7" height="15.0" fill="rgb(234,36,9)" rx="2" ry="2" />
<text  x="910.01" y="399.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.29%)</title><rect x="896.7" y="437" width="3.4" height="15.0" fill="rgb(246,201,11)" rx="2" ry="2" />
<text  x="899.72" y="447.5" ></text>
</g>
<g >
<title>perf_mmap__push (1 samples, 0.15%)</title><rect x="121.5" y="373" width="1.7" height="15.0" fill="rgb(215,114,53)" rx="2" ry="2" />
<text  x="124.48" y="383.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.15%)</title><rect x="915.6" y="325" width="1.7" height="15.0" fill="rgb(247,157,2)" rx="2" ry="2" />
<text  x="918.58" y="335.5" ></text>
</g>
<g >
<title>NaClXMutexLock (2 samples, 0.29%)</title><rect x="171.2" y="405" width="3.5" height="15.0" fill="rgb(249,144,13)" rx="2" ry="2" />
<text  x="174.22" y="415.5" ></text>
</g>
<g >
<title>lindrustfinalize (2 samples, 0.29%)</title><rect x="896.7" y="389" width="3.4" height="15.0" fill="rgb(218,168,19)" rx="2" ry="2" />
<text  x="899.72" y="399.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.15%)</title><rect x="1186.6" y="293" width="1.7" height="15.0" fill="rgb(218,4,36)" rx="2" ry="2" />
<text  x="1189.57" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (3 samples, 0.44%)</title><rect x="817.8" y="341" width="5.2" height="15.0" fill="rgb(222,183,25)" rx="2" ry="2" />
<text  x="820.82" y="351.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.15%)</title><rect x="920.7" y="405" width="1.7" height="15.0" fill="rgb(227,9,6)" rx="2" ry="2" />
<text  x="923.73" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.15%)</title><rect x="989.3" y="85" width="1.7" height="15.0" fill="rgb(229,104,35)" rx="2" ry="2" />
<text  x="992.33" y="95.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.15%)</title><rect x="152.4" y="437" width="1.7" height="15.0" fill="rgb(241,18,31)" rx="2" ry="2" />
<text  x="155.35" y="447.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.15%)</title><rect x="975.6" y="165" width="1.7" height="15.0" fill="rgb(217,20,11)" rx="2" ry="2" />
<text  x="978.61" y="175.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.15%)</title><rect x="907.0" y="261" width="1.7" height="15.0" fill="rgb(226,216,23)" rx="2" ry="2" />
<text  x="910.01" y="271.5" ></text>
</g>
<g >
<title>record__mmap_read_all (1 samples, 0.15%)</title><rect x="121.5" y="405" width="1.7" height="15.0" fill="rgb(241,182,37)" rx="2" ry="2" />
<text  x="124.48" y="415.5" ></text>
</g>
<g >
<title>NaClAvlTreeBalanceRight (4 samples, 0.58%)</title><rect x="752.6" y="309" width="6.9" height="15.0" fill="rgb(239,184,19)" rx="2" ry="2" />
<text  x="755.65" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (1 samples, 0.15%)</title><rect x="917.3" y="421" width="1.7" height="15.0" fill="rgb(229,196,3)" rx="2" ry="2" />
<text  x="920.30" y="431.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.15%)</title><rect x="907.0" y="293" width="1.7" height="15.0" fill="rgb(242,38,19)" rx="2" ry="2" />
<text  x="910.01" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (4 samples, 0.58%)</title><rect x="582.8" y="309" width="6.9" height="15.0" fill="rgb(245,51,43)" rx="2" ry="2" />
<text  x="585.85" y="319.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (2 samples, 0.29%)</title><rect x="896.7" y="341" width="3.4" height="15.0" fill="rgb(223,68,13)" rx="2" ry="2" />
<text  x="899.72" y="351.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 2.76%)</title><rect x="864.1" y="453" width="32.6" height="15.0" fill="rgb(212,184,42)" rx="2" ry="2" />
<text  x="867.13" y="463.5" >[u..</text>
</g>
<g >
<title>NaClMutexLock (1 samples, 0.15%)</title><rect x="776.7" y="357" width="1.7" height="15.0" fill="rgb(224,81,6)" rx="2" ry="2" />
<text  x="779.66" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (20 samples, 2.91%)</title><rect x="963.6" y="213" width="34.3" height="15.0" fill="rgb(244,67,50)" rx="2" ry="2" />
<text  x="966.60" y="223.5" >hr..</text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.44%)</title><rect x="1016.8" y="165" width="5.1" height="15.0" fill="rgb(209,21,44)" rx="2" ry="2" />
<text  x="1019.77" y="175.5" ></text>
</g>
<g >
<title>NaClHostDescRead (186 samples, 27.03%)</title><rect x="181.5" y="373" width="319.0" height="15.0" fill="rgb(231,227,3)" rx="2" ry="2" />
<text  x="184.51" y="383.5" >NaClHostDescRead</text>
</g>
<g >
<title>native_write_msr (1 samples, 0.15%)</title><rect x="991.0" y="37" width="1.8" height="15.0" fill="rgb(224,33,29)" rx="2" ry="2" />
<text  x="994.05" y="47.5" ></text>
</g>
<g >
<title>cpuidle_enter (109 samples, 15.84%)</title><rect x="961.9" y="309" width="186.9" height="15.0" fill="rgb(253,35,29)" rx="2" ry="2" />
<text  x="964.89" y="319.5" >cpuidle_enter</text>
</g>
<g >
<title>__perf_event_enable (64 samples, 9.30%)</title><rect x="11.7" y="149" width="109.8" height="15.0" fill="rgb(207,91,23)" rx="2" ry="2" />
<text  x="14.72" y="159.5" >__perf_event_..</text>
</g>
<g >
<title>_perf_ioctl (64 samples, 9.30%)</title><rect x="11.7" y="277" width="109.8" height="15.0" fill="rgb(237,157,54)" rx="2" ry="2" />
<text  x="14.72" y="287.5" >_perf_ioctl</text>
</g>
<g >
<title>pm_qos_read_value (1 samples, 0.15%)</title><rect x="1155.7" y="277" width="1.7" height="15.0" fill="rgb(230,95,3)" rx="2" ry="2" />
<text  x="1158.70" y="287.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.15%)</title><rect x="919.0" y="357" width="1.7" height="15.0" fill="rgb(218,16,2)" rx="2" ry="2" />
<text  x="922.01" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.29%)</title><rect x="730.3" y="325" width="3.5" height="15.0" fill="rgb(214,212,29)" rx="2" ry="2" />
<text  x="733.35" y="335.5" ></text>
</g>
<g >
<title>[anon] (18 samples, 2.62%)</title><rect x="123.2" y="453" width="30.9" height="15.0" fill="rgb(246,184,54)" rx="2" ry="2" />
<text  x="126.20" y="463.5" >[a..</text>
</g>
<g >
<title>NaClSysReadDecoder (186 samples, 27.03%)</title><rect x="181.5" y="421" width="319.0" height="15.0" fill="rgb(239,99,17)" rx="2" ry="2" />
<text  x="184.51" y="431.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.15%)</title><rect x="862.4" y="309" width="1.7" height="15.0" fill="rgb(251,141,14)" rx="2" ry="2" />
<text  x="865.41" y="319.5" ></text>
</g>
<g >
<title>menu_select (8 samples, 1.16%)</title><rect x="1148.8" y="293" width="13.8" height="15.0" fill="rgb(207,185,3)" rx="2" ry="2" />
<text  x="1151.84" y="303.5" ></text>
</g>
<g >
<title>tick_program_event (2 samples, 0.29%)</title><rect x="994.5" y="197" width="3.4" height="15.0" fill="rgb(206,119,15)" rx="2" ry="2" />
<text  x="997.48" y="207.5" ></text>
</g>
<g >
<title>__mod_timer (1 samples, 0.15%)</title><rect x="920.7" y="325" width="1.7" height="15.0" fill="rgb(246,110,10)" rx="2" ry="2" />
<text  x="923.73" y="335.5" ></text>
</g>
<g >
<title>__ioctl (64 samples, 9.30%)</title><rect x="11.7" y="357" width="109.8" height="15.0" fill="rgb(243,30,1)" rx="2" ry="2" />
<text  x="14.72" y="367.5" >__ioctl</text>
</g>
<g >
<title>dequeue_task (1 samples, 0.15%)</title><rect x="917.3" y="341" width="1.7" height="15.0" fill="rgb(228,191,35)" rx="2" ry="2" />
<text  x="920.30" y="351.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (2 samples, 0.29%)</title><rect x="1136.8" y="261" width="3.5" height="15.0" fill="rgb(233,56,4)" rx="2" ry="2" />
<text  x="1139.83" y="271.5" ></text>
</g>
<g >
<title>[unknown]  (23 samples, 3.34%)</title><rect x="824.7" y="453" width="39.4" height="15.0" fill="rgb(244,102,12)" rx="2" ry="2" />
<text  x="827.68" y="463.5" >[un..</text>
</g>
<g >
<title>ksys_write (1 samples, 0.15%)</title><rect x="121.5" y="245" width="1.7" height="15.0" fill="rgb(250,216,34)" rx="2" ry="2" />
<text  x="124.48" y="255.5" ></text>
</g>
<g >
<title>handle_pte_fault (6 samples, 0.87%)</title><rect x="853.8" y="357" width="10.3" height="15.0" fill="rgb(218,40,8)" rx="2" ry="2" />
<text  x="856.84" y="367.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.15%)</title><rect x="915.6" y="405" width="1.7" height="15.0" fill="rgb(247,160,19)" rx="2" ry="2" />
<text  x="918.58" y="415.5" ></text>
</g>
<g >
<title>enqueue_timer (1 samples, 0.15%)</title><rect x="920.7" y="309" width="1.7" height="15.0" fill="rgb(230,74,28)" rx="2" ry="2" />
<text  x="923.73" y="319.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (2 samples, 0.29%)</title><rect x="713.2" y="373" width="3.4" height="15.0" fill="rgb(250,81,30)" rx="2" ry="2" />
<text  x="716.20" y="383.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.15%)</title><rect x="907.0" y="421" width="1.7" height="15.0" fill="rgb(216,74,22)" rx="2" ry="2" />
<text  x="910.01" y="431.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.15%)</title><rect x="1150.6" y="277" width="1.7" height="15.0" fill="rgb(212,126,3)" rx="2" ry="2" />
<text  x="1153.55" y="287.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.15%)</title><rect x="895.0" y="437" width="1.7" height="15.0" fill="rgb(207,193,43)" rx="2" ry="2" />
<text  x="898.00" y="447.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.29%)</title><rect x="713.2" y="357" width="3.4" height="15.0" fill="rgb(227,211,39)" rx="2" ry="2" />
<text  x="716.20" y="367.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.15%)</title><rect x="915.6" y="357" width="1.7" height="15.0" fill="rgb(222,79,16)" rx="2" ry="2" />
<text  x="918.58" y="367.5" ></text>
</g>
<g >
<title>CompareAndSwap (2 samples, 0.29%)</title><rect x="166.1" y="405" width="3.4" height="15.0" fill="rgb(228,191,50)" rx="2" ry="2" />
<text  x="169.08" y="415.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (2 samples, 0.29%)</title><rect x="709.8" y="373" width="3.4" height="15.0" fill="rgb(222,123,51)" rx="2" ry="2" />
<text  x="712.77" y="383.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.15%)</title><rect x="915.6" y="309" width="1.7" height="15.0" fill="rgb(214,102,14)" rx="2" ry="2" />
<text  x="918.58" y="319.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (66 samples, 9.59%)</title><rect x="1023.6" y="277" width="113.2" height="15.0" fill="rgb(246,174,13)" rx="2" ry="2" />
<text  x="1026.63" y="287.5" >mwait_idle_wi..</text>
</g>
<g >
<title>schedule_idle (4 samples, 0.58%)</title><rect x="1176.3" y="325" width="6.8" height="15.0" fill="rgb(229,65,10)" rx="2" ry="2" />
<text  x="1179.28" y="335.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.15%)</title><rect x="1171.1" y="277" width="1.7" height="15.0" fill="rgb(227,111,13)" rx="2" ry="2" />
<text  x="1174.13" y="287.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.15%)</title><rect x="774.9" y="325" width="1.8" height="15.0" fill="rgb(211,224,25)" rx="2" ry="2" />
<text  x="777.94" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.15%)</title><rect x="1159.1" y="261" width="1.7" height="15.0" fill="rgb(252,213,4)" rx="2" ry="2" />
<text  x="1162.13" y="271.5" ></text>
</g>
<g >
<title>NaClDescRef (5 samples, 0.73%)</title><rect x="718.3" y="357" width="8.6" height="15.0" fill="rgb(220,45,47)" rx="2" ry="2" />
<text  x="721.34" y="367.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (4 samples, 0.58%)</title><rect x="502.2" y="373" width="6.9" height="15.0" fill="rgb(211,3,10)" rx="2" ry="2" />
<text  x="505.24" y="383.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (186 samples, 27.03%)</title><rect x="181.5" y="309" width="319.0" height="15.0" fill="rgb(222,194,21)" rx="2" ry="2" />
<text  x="184.51" y="319.5" >rustposix::interface::pipe::EmulatedPipe::r..</text>
</g>
<g >
<title>perf_evsel__enable_cpu (64 samples, 9.30%)</title><rect x="11.7" y="389" width="109.8" height="15.0" fill="rgb(253,12,37)" rx="2" ry="2" />
<text  x="14.72" y="399.5" >perf_evsel__e..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.15%)</title><rect x="907.0" y="453" width="1.7" height="15.0" fill="rgb(241,100,13)" rx="2" ry="2" />
<text  x="910.01" y="463.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 9.30%)</title><rect x="11.7" y="101" width="109.8" height="15.0" fill="rgb(211,167,44)" rx="2" ry="2" />
<text  x="14.72" y="111.5" >intel_pmu_ena..</text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (2 samples, 0.29%)</title><rect x="178.1" y="421" width="3.4" height="15.0" fill="rgb(224,120,4)" rx="2" ry="2" />
<text  x="181.08" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 9.30%)</title><rect x="11.7" y="341" width="109.8" height="15.0" fill="rgb(240,165,23)" rx="2" ry="2" />
<text  x="14.72" y="351.5" >entry_SYSCALL..</text>
</g>
<g >
<title>sched_idle_set_state (1 samples, 0.15%)</title><rect x="1140.3" y="277" width="1.7" height="15.0" fill="rgb(206,169,14)" rx="2" ry="2" />
<text  x="1143.26" y="287.5" ></text>
</g>
<g >
<title>kick_ilb (2 samples, 0.29%)</title><rect x="1178.0" y="245" width="3.4" height="15.0" fill="rgb(237,31,53)" rx="2" ry="2" />
<text  x="1180.99" y="255.5" ></text>
</g>
<g >
<title>__queue_delayed_work (1 samples, 0.15%)</title><rect x="920.7" y="357" width="1.7" height="15.0" fill="rgb(254,56,53)" rx="2" ry="2" />
<text  x="923.73" y="367.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeAddInterval (1 samples, 0.15%)</title><rect x="726.9" y="389" width="1.7" height="15.0" fill="rgb(251,159,7)" rx="2" ry="2" />
<text  x="729.92" y="399.5" ></text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.15%)</title><rect x="1152.3" y="277" width="1.7" height="15.0" fill="rgb(251,115,0)" rx="2" ry="2" />
<text  x="1155.27" y="287.5" ></text>
</g>
<g >
<title>vmstat_shepherd (1 samples, 0.15%)</title><rect x="920.7" y="389" width="1.7" height="15.0" fill="rgb(254,58,2)" rx="2" ry="2" />
<text  x="923.73" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 1.02%)</title><rect x="852.1" y="389" width="12.0" height="15.0" fill="rgb(232,46,11)" rx="2" ry="2" />
<text  x="855.12" y="399.5" ></text>
</g>
<g >
<title>NaClSysWrite (181 samples, 26.31%)</title><rect x="514.2" y="405" width="310.5" height="15.0" fill="rgb(245,100,8)" rx="2" ry="2" />
<text  x="517.24" y="415.5" >NaClSysWrite</text>
</g>
<g >
<title>NaClAvlTreeExtract (2 samples, 0.29%)</title><rect x="759.5" y="309" width="3.4" height="15.0" fill="rgb(222,209,42)" rx="2" ry="2" />
<text  x="762.51" y="319.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.15%)</title><rect x="915.6" y="373" width="1.7" height="15.0" fill="rgb(245,100,3)" rx="2" ry="2" />
<text  x="918.58" y="383.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.15%)</title><rect x="121.5" y="149" width="1.7" height="15.0" fill="rgb(227,27,7)" rx="2" ry="2" />
<text  x="124.48" y="159.5" ></text>
</g>
<g >
<title>NaClMutexLock (2 samples, 0.29%)</title><rect x="171.2" y="389" width="3.5" height="15.0" fill="rgb(216,28,50)" rx="2" ry="2" />
<text  x="174.22" y="399.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.15%)</title><rect x="121.5" y="197" width="1.7" height="15.0" fill="rgb(219,219,34)" rx="2" ry="2" />
<text  x="124.48" y="207.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (1 samples, 0.15%)</title><rect x="121.5" y="389" width="1.7" height="15.0" fill="rgb(235,16,11)" rx="2" ry="2" />
<text  x="124.48" y="399.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeInit (5 samples, 0.73%)</title><rect x="764.7" y="341" width="8.5" height="15.0" fill="rgb(230,77,49)" rx="2" ry="2" />
<text  x="767.65" y="351.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.15%)</title><rect x="855.6" y="277" width="1.7" height="15.0" fill="rgb(244,51,2)" rx="2" ry="2" />
<text  x="858.55" y="287.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.15%)</title><rect x="865.8" y="437" width="1.8" height="15.0" fill="rgb(235,17,54)" rx="2" ry="2" />
<text  x="868.84" y="447.5" ></text>
</g>
<g >
<title>_perf_event_enable (64 samples, 9.30%)</title><rect x="11.7" y="245" width="109.8" height="15.0" fill="rgb(235,64,47)" rx="2" ry="2" />
<text  x="14.72" y="255.5" >_perf_event_e..</text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.15%)</title><rect x="919.0" y="341" width="1.7" height="15.0" fill="rgb(217,91,53)" rx="2" ry="2" />
<text  x="922.01" y="351.5" ></text>
</g>
<g >
<title>arch_do_signal (1 samples, 0.15%)</title><rect x="907.0" y="373" width="1.7" height="15.0" fill="rgb(226,98,10)" rx="2" ry="2" />
<text  x="910.01" y="383.5" ></text>
</g>
<g >
<title>queue_delayed_work_on (1 samples, 0.15%)</title><rect x="920.7" y="373" width="1.7" height="15.0" fill="rgb(225,205,49)" rx="2" ry="2" />
<text  x="923.73" y="383.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (3 samples, 0.44%)</title><rect x="164.4" y="421" width="5.1" height="15.0" fill="rgb(214,18,23)" rx="2" ry="2" />
<text  x="167.36" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (2 samples, 0.29%)</title><rect x="548.5" y="325" width="3.5" height="15.0" fill="rgb(207,35,14)" rx="2" ry="2" />
<text  x="551.55" y="335.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.15%)</title><rect x="920.7" y="453" width="1.7" height="15.0" fill="rgb(237,83,6)" rx="2" ry="2" />
<text  x="923.73" y="463.5" ></text>
</g>
<g >
<title>do_user_addr_fault (9 samples, 1.31%)</title><rect x="848.7" y="405" width="15.4" height="15.0" fill="rgb(243,13,39)" rx="2" ry="2" />
<text  x="851.69" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_restart (3 samples, 0.44%)</title><rect x="1183.1" y="309" width="5.2" height="15.0" fill="rgb(238,69,4)" rx="2" ry="2" />
<text  x="1186.14" y="319.5" ></text>
</g>
<g >
<title>all (688 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(231,67,38)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeExtract (11 samples, 1.60%)</title><rect x="745.8" y="341" width="18.9" height="15.0" fill="rgb(239,113,16)" rx="2" ry="2" />
<text  x="748.78" y="351.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.29%)</title><rect x="896.7" y="405" width="3.4" height="15.0" fill="rgb(251,149,0)" rx="2" ry="2" />
<text  x="899.72" y="415.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.15%)</title><rect x="1184.9" y="261" width="1.7" height="15.0" fill="rgb(251,21,51)" rx="2" ry="2" />
<text  x="1187.85" y="271.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeRemoveInterval (23 samples, 3.34%)</title><rect x="737.2" y="373" width="39.5" height="15.0" fill="rgb(224,188,50)" rx="2" ry="2" />
<text  x="740.21" y="383.5" >NaC..</text>
</g>
<g >
<title>exit_mmap (1 samples, 0.15%)</title><rect x="907.0" y="277" width="1.7" height="15.0" fill="rgb(227,104,15)" rx="2" ry="2" />
<text  x="910.01" y="287.5" ></text>
</g>
<g >
<title>do_idle (134 samples, 19.48%)</title><rect x="958.5" y="341" width="229.8" height="15.0" fill="rgb(228,80,43)" rx="2" ry="2" />
<text  x="961.46" y="351.5" >do_idle</text>
</g>
<g >
<title>NaClValidateCode (2 samples, 0.29%)</title><rect x="178.1" y="373" width="3.4" height="15.0" fill="rgb(237,46,22)" rx="2" ry="2" />
<text  x="181.08" y="383.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.15%)</title><rect x="1001.3" y="165" width="1.8" height="15.0" fill="rgb(225,202,2)" rx="2" ry="2" />
<text  x="1004.34" y="175.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.15%)</title><rect x="1145.4" y="293" width="1.7" height="15.0" fill="rgb(206,62,19)" rx="2" ry="2" />
<text  x="1148.41" y="303.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.15%)</title><rect x="10.0" y="469" width="1.7" height="15.0" fill="rgb(234,198,32)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (2 samples, 0.29%)</title><rect x="1169.4" y="309" width="3.4" height="15.0" fill="rgb(225,65,26)" rx="2" ry="2" />
<text  x="1172.42" y="319.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.15%)</title><rect x="991.0" y="53" width="1.8" height="15.0" fill="rgb(229,122,31)" rx="2" ry="2" />
<text  x="994.05" y="63.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (2 samples, 0.29%)</title><rect x="720.1" y="325" width="3.4" height="15.0" fill="rgb(248,183,12)" rx="2" ry="2" />
<text  x="723.06" y="335.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (1 samples, 0.15%)</title><rect x="857.3" y="325" width="1.7" height="15.0" fill="rgb(235,193,37)" rx="2" ry="2" />
<text  x="860.27" y="335.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.15%)</title><rect x="1179.7" y="229" width="1.7" height="15.0" fill="rgb(209,47,19)" rx="2" ry="2" />
<text  x="1182.71" y="239.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.15%)</title><rect x="1174.6" y="309" width="1.7" height="15.0" fill="rgb(228,174,6)" rx="2" ry="2" />
<text  x="1177.56" y="319.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (64 samples, 9.30%)</title><rect x="11.7" y="373" width="109.8" height="15.0" fill="rgb(217,210,37)" rx="2" ry="2" />
<text  x="14.72" y="383.5" >perf_evsel__r..</text>
</g>
<g >
<title>tick_nohz_get_sleep_length (3 samples, 0.44%)</title><rect x="1157.4" y="277" width="5.2" height="15.0" fill="rgb(217,225,0)" rx="2" ry="2" />
<text  x="1160.41" y="287.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.15%)</title><rect x="121.5" y="213" width="1.7" height="15.0" fill="rgb(235,144,43)" rx="2" ry="2" />
<text  x="124.48" y="223.5" ></text>
</g>
<g >
<title>check_cpu_stall (1 samples, 0.15%)</title><rect x="985.9" y="101" width="1.7" height="15.0" fill="rgb(232,82,1)" rx="2" ry="2" />
<text  x="988.90" y="111.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (2 samples, 0.29%)</title><rect x="178.1" y="389" width="3.4" height="15.0" fill="rgb(239,68,1)" rx="2" ry="2" />
<text  x="181.08" y="399.5" ></text>
</g>
</g>
</svg>
