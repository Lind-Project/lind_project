<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (51 samples, 0.10%; +0.04%)</title><rect x="999.0" y="277" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1001.99" y="287.5" ></text>
</g>
<g >
<title>llist_add_batch (10 samples, 0.02%; +0.02%)</title><rect x="1180.7" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1183.70" y="367.5" ></text>
</g>
<g >
<title>update_rq_clock (10 samples, 0.02%; +0.01%)</title><rect x="1189.3" y="373" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1192.26" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (95 samples, 0.19%; +0.01%)</title><rect x="1090.2" y="469" width="2.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1093.21" y="479.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (254 samples, 0.50%; 0.00%)</title><rect x="901.3" y="341" width="5.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.32" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (642 samples, 1.26%; 0.00%)</title><rect x="815.0" y="325" width="15.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="818.03" y="335.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (15 samples, 0.03%; 0.00%)</title><rect x="904.0" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="906.97" y="303.5" ></text>
</g>
<g >
<title>ktime_get (5 samples, 0.01%; +0.01%)</title><rect x="190.2" y="389" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="193.19" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (18 samples, 0.04%; +0.02%)</title><rect x="228.7" y="437" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="231.72" y="447.5" ></text>
</g>
<g >
<title>run_rebalance_domains (5 samples, 0.01%; 0.00%)</title><rect x="128.3" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.28" y="335.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_try_init (9 samples, 0.02%; 0.00%)</title><rect x="809.5" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.50" y="335.5" ></text>
</g>
<g >
<title>CompareAndSwap (30 samples, 0.06%; +0.01%)</title><rect x="1092.8" y="517" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1095.84" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (11 samples, 0.02%; +0.02%)</title><rect x="179.8" y="293" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="182.80" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (31 samples, 0.06%; 0.00%)</title><rect x="945.4" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="948.43" y="287.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (138 samples, 0.27%; 0.00%)</title><rect x="12.4" y="229" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.39" y="239.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (60 samples, 0.12%; -0.00%)</title><rect x="1139.9" y="517" width="1.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1142.89" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (231 samples, 0.46%; 0.00%)</title><rect x="780.5" y="389" width="5.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="783.51" y="399.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (35,149 samples, 69.26%; -0.16%)</title><rect x="234.1" y="517" width="817.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="237.09" y="527.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>page_remove_rmap (6 samples, 0.01%; +0.01%)</title><rect x="1142.4" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1145.38" y="271.5" ></text>
</g>
<g >
<title>vfs_iter_write (138 samples, 0.27%; 0.00%)</title><rect x="12.4" y="261" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.39" y="271.5" ></text>
</g>
<g >
<title>native_sched_clock (11 samples, 0.02%; +0.02%)</title><rect x="176.7" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="179.66" y="351.5" ></text>
</g>
<g >
<title>rest_init (356 samples, 0.70%; 0.00%)</title><rect x="1181.7" y="453" width="8.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1184.72" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (56 samples, 0.11%; -0.01%)</title><rect x="199.0" y="517" width="1.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="201.98" y="527.5" ></text>
</g>
<g >
<title>__set_page_dirty (10 samples, 0.02%; 0.00%)</title><rect x="14.7" y="101" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.72" y="111.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (231 samples, 0.46%; +0.05%)</title><rect x="780.5" y="373" width="5.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="783.51" y="383.5" ></text>
</g>
<g >
<title>unmap_vmas (35 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="341" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (19 samples, 0.04%; +0.00%)</title><rect x="162.1" y="469" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="165.13" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (19 samples, 0.04%; +0.02%)</title><rect x="996.3" y="277" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="999.25" y="287.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (56 samples, 0.11%; +0.09%)</title><rect x="184.7" y="325" width="1.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="187.73" y="335.5" ></text>
</g>
<g >
<title>arch_call_rest_init (356 samples, 0.70%; 0.00%)</title><rect x="1181.7" y="469" width="8.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1184.72" y="479.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (311 samples, 0.61%; 0.00%)</title><rect x="322.9" y="341" width="7.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="325.93" y="351.5" ></text>
</g>
<g >
<title>get_typical_interval (20 samples, 0.04%; +0.04%)</title><rect x="177.7" y="357" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="180.73" y="367.5" ></text>
</g>
<g >
<title>generic_exec_single (7 samples, 0.01%; 0.00%)</title><rect x="1188.8" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.79" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (261 samples, 0.51%; 0.00%)</title><rect x="949.9" y="325" width="6.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="952.89" y="335.5" ></text>
</g>
<g >
<title>__libc_write (145 samples, 0.29%; 0.00%)</title><rect x="12.3" y="389" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.28" y="399.5" ></text>
</g>
<g >
<title>ext4_inode_csum (7 samples, 0.01%; -0.01%)</title><rect x="15.1" y="37" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="18.07" y="47.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (5 samples, 0.01%; +0.01%)</title><rect x="862.4" y="325" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="865.40" y="335.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (6 samples, 0.01%; 0.00%)</title><rect x="14.5" y="149" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.46" y="159.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (360 samples, 0.71%; +0.00%)</title><rect x="1170.7" y="469" width="8.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1173.75" y="479.5" ></text>
</g>
<g >
<title>do_idle (1,198 samples, 2.36%; +0.04%)</title><rect x="162.9" y="421" width="27.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="165.92" y="431.5" >d..</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (9 samples, 0.02%; -0.02%)</title><rect x="862.5" y="245" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="865.51" y="255.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (7 samples, 0.01%; 0.00%)</title><rect x="1112.6" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.64" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (229 samples, 0.45%; -1.91%)</title><rect x="809.7" y="325" width="5.3" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="812.71" y="335.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (13 samples, 0.03%; +0.01%)</title><rect x="193.1" y="517" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="196.15" y="527.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (18 samples, 0.04%; 0.00%)</title><rect x="843.7" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.66" y="303.5" ></text>
</g>
<g >
<title>cpuidle_enter (142 samples, 0.28%; 0.00%)</title><rect x="1182.2" y="389" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1185.19" y="399.5" ></text>
</g>
<g >
<title>start_secondary (1,575 samples, 3.10%; 0.00%)</title><rect x="126.3" y="517" width="36.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.30" y="527.5" >sta..</text>
</g>
<g >
<title>tick_nohz_next_event (42 samples, 0.08%; +0.01%)</title><rect x="179.1" y="341" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="182.13" y="351.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (102 samples, 0.20%; +0.01%)</title><rect x="1048.2" y="469" width="2.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1051.24" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (18 samples, 0.04%; +0.01%)</title><rect x="843.7" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="846.66" y="271.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (134 samples, 0.26%; -0.07%)</title><rect x="327.0" y="325" width="3.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="330.05" y="335.5" ></text>
</g>
<g >
<title>menu_select (31 samples, 0.06%; +0.02%)</title><rect x="1178.3" y="437" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1181.33" y="447.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (839 samples, 1.65%; -0.01%)</title><rect x="907.2" y="341" width="19.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="910.22" y="351.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (69 samples, 0.14%; +0.04%)</title><rect x="905.0" y="293" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="908.04" y="303.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (142 samples, 0.28%; +0.06%)</title><rect x="158.0" y="405" width="3.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="161.01" y="415.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (8 samples, 0.02%; -0.00%)</title><rect x="15.3" y="85" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="18.28" y="95.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (22 samples, 0.04%; -0.01%)</title><rect x="15.0" y="133" width="0.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="17.95" y="143.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (14 samples, 0.03%; -1.45%)</title><rect x="203.5" y="517" width="0.4" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="206.54" y="527.5" ></text>
</g>
<g >
<title>schedule_idle (64 samples, 0.13%; 0.00%)</title><rect x="1179.7" y="469" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1182.70" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (353 samples, 0.70%; 0.00%)</title><rect x="936.3" y="293" width="8.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="939.29" y="303.5" ></text>
</g>
<g >
<title>dispatcher@plt (11 samples, 0.02%; -0.00%)</title><rect x="1023.1" y="421" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1026.11" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (8 samples, 0.02%; +0.01%)</title><rect x="1189.7" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1192.67" y="415.5" ></text>
</g>
<g >
<title>enqueue_task (12 samples, 0.02%; 0.00%)</title><rect x="127.7" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.72" y="255.5" ></text>
</g>
<g >
<title>schedule_idle (85 samples, 0.17%; 0.00%)</title><rect x="1187.6" y="405" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.56" y="415.5" ></text>
</g>
<g >
<title>sched_clock_cpu (7 samples, 0.01%; +0.00%)</title><rect x="151.2" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="154.25" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (116 samples, 0.23%; +0.00%)</title><rect x="1004.4" y="341" width="2.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1007.39" y="351.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (620 samples, 1.22%; -0.14%)</title><rect x="206.4" y="517" width="14.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="209.45" y="527.5" ></text>
</g>
<g >
<title>std::panicking::panicking (17 samples, 0.03%; 0.00%)</title><rect x="985.5" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="988.46" y="319.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (11 samples, 0.02%; 0.00%)</title><rect x="128.3" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.28" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (12 samples, 0.02%; +0.02%)</title><rect x="162.6" y="485" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="165.59" y="495.5" ></text>
</g>
<g >
<title>pick_next_task_fair (157 samples, 0.31%; +0.00%)</title><rect x="157.7" y="437" width="3.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="160.69" y="447.5" ></text>
</g>
<g >
<title>do_idle (465 samples, 0.92%; +0.01%)</title><rect x="1170.6" y="485" width="10.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1173.61" y="495.5" ></text>
</g>
<g >
<title>NaClXMutexLock (18 samples, 0.04%; +0.02%)</title><rect x="196.7" y="517" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="199.68" y="527.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (24 samples, 0.05%; 0.00%)</title><rect x="127.7" y="373" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.67" y="383.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (24 samples, 0.05%; 0.00%)</title><rect x="127.7" y="389" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.67" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (569 samples, 1.12%; +1.12%)</title><rect x="1098.0" y="517" width="13.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1100.95" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (18 samples, 0.04%; 0.00%)</title><rect x="228.7" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="231.72" y="463.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (15 samples, 0.03%; 0.00%)</title><rect x="226.6" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="229.63" y="511.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (138 samples, 0.27%; 0.00%)</title><rect x="12.4" y="197" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.39" y="207.5" ></text>
</g>
<g >
<title>[unknown] (241 samples, 0.47%; 0.00%)</title><rect x="10.1" y="533" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.07" y="543.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (201 samples, 0.40%; 0.00%)</title><rect x="995.5" y="341" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="998.51" y="351.5" ></text>
</g>
<g >
<title>[unknown]  (1,785 samples, 3.52%; +0.04%)</title><rect x="1051.3" y="533" width="41.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1054.33" y="543.5" >[un..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (143 samples, 0.28%; 0.00%)</title><rect x="946.6" y="245" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="949.56" y="255.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (15 samples, 0.03%; +0.03%)</title><rect x="1143.0" y="517" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1145.99" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (19 samples, 0.04%; 0.00%)</title><rect x="204.3" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="207.26" y="511.5" ></text>
</g>
<g >
<title>lru_cache_add (13 samples, 0.03%; -0.00%)</title><rect x="1091.7" y="389" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1094.67" y="399.5" ></text>
</g>
<g >
<title>new_sync_read (5 samples, 0.01%; 0.00%)</title><rect x="125.4" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.42" y="463.5" ></text>
</g>
<g >
<title>native_sched_clock (7 samples, 0.01%; +0.01%)</title><rect x="161.6" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="164.60" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (19 samples, 0.04%; 0.00%)</title><rect x="204.3" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="207.26" y="463.5" ></text>
</g>
<g >
<title>lind_exit (5 samples, 0.01%; 0.00%)</title><rect x="300.2" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.22" y="479.5" ></text>
</g>
<g >
<title>NaClSysRead (17,883 samples, 35.24%; 0.00%)</title><rect x="300.3" y="485" width="415.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.33" y="495.5" >NaClSysRead</text>
</g>
<g >
<title>enqueue_entity (5 samples, 0.01%; +0.00%)</title><rect x="127.7" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="130.72" y="223.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (103 samples, 0.20%; +0.01%)</title><rect x="1042.0" y="469" width="2.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1044.99" y="479.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1,228 samples, 2.42%; 0.00%)</title><rect x="162.9" y="469" width="28.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="165.92" y="479.5" >ar..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (271 samples, 0.53%; -0.23%)</title><rect x="703.0" y="309" width="6.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="706.01" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (116 samples, 0.23%; 0.00%)</title><rect x="1004.4" y="357" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1007.39" y="367.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (12 samples, 0.02%; 0.00%)</title><rect x="229.6" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="232.63" y="511.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (834 samples, 1.64%; 0.00%)</title><rect x="1170.6" y="533" width="19.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1173.61" y="543.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (99 samples, 0.20%; +0.04%)</title><rect x="757.5" y="437" width="2.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="760.54" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (118 samples, 0.23%; 0.00%)</title><rect x="952.5" y="277" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="955.49" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (16 samples, 0.03%; 0.00%)</title><rect x="1006.4" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1009.37" y="287.5" ></text>
</g>
<g >
<title>NaClXMutexLock (436 samples, 0.86%; -0.02%)</title><rect x="285.5" y="485" width="10.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="288.48" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (122 samples, 0.24%; +0.09%)</title><rect x="1001.2" y="277" width="2.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1004.23" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (38 samples, 0.07%; +0.02%)</title><rect x="734.7" y="469" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="737.68" y="479.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (9 samples, 0.02%; 0.00%)</title><rect x="126.1" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.09" y="399.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (13 samples, 0.03%; 0.00%)</title><rect x="1091.7" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1094.67" y="415.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (15 samples, 0.03%; 0.00%)</title><rect x="1006.7" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1009.74" y="255.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (12 samples, 0.02%; -0.11%)</title><rect x="926.7" y="277" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="929.73" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (332 samples, 0.65%; 0.00%)</title><rect x="919.0" y="309" width="7.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="922.01" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (33 samples, 0.07%; +0.02%)</title><rect x="190.0" y="405" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="192.96" y="415.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.04%; 0.00%)</title><rect x="204.3" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="207.26" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (1,658 samples, 3.27%; 0.00%)</title><rect x="862.7" y="309" width="38.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.72" y="319.5" >std..</text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (15 samples, 0.03%; +0.03%)</title><rect x="226.6" y="485" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="229.63" y="495.5" ></text>
</g>
<g >
<title>perf (243 samples, 0.48%; 0.00%)</title><rect x="10.0" y="549" width="5.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.05" y="559.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (7 samples, 0.01%; -0.01%)</title><rect x="996.9" y="277" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="999.95" y="287.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (5 samples, 0.01%; 0.00%)</title><rect x="300.2" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.22" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (390 samples, 0.77%; +0.08%)</title><rect x="1008.1" y="357" width="9.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1011.09" y="367.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (12 samples, 0.02%; 0.00%)</title><rect x="926.7" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="929.73" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.02%; -0.01%)</title><rect x="996.7" y="277" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="999.69" y="287.5" ></text>
</g>
<g >
<title>remote_function (67 samples, 0.13%; +0.00%)</title><rect x="10.4" y="261" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="13.40" y="271.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (161 samples, 0.32%; +0.02%)</title><rect x="946.1" y="277" width="3.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="949.15" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (37 samples, 0.07%; 0.00%)</title><rect x="127.7" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.67" y="431.5" ></text>
</g>
<g >
<title>event_function (66 samples, 0.13%; -0.00%)</title><rect x="10.4" y="245" width="1.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="13.42" y="255.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (62 samples, 0.12%; -0.01%)</title><rect x="197.5" y="517" width="1.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="200.54" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (399 samples, 0.79%; +0.00%)</title><rect x="995.1" y="357" width="9.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="998.11" y="367.5" ></text>
</g>
<g >
<title>update_rq_clock (13 samples, 0.03%; +0.00%)</title><rect x="189.0" y="373" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="191.98" y="383.5" ></text>
</g>
<g >
<title>read_tsc (9 samples, 0.02%; +0.02%)</title><rect x="189.7" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="192.66" y="399.5" ></text>
</g>
<g >
<title>NaClValidateCode (15 samples, 0.03%; 0.00%)</title><rect x="299.8" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="302.82" y="463.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (62 samples, 0.12%; 0.00%)</title><rect x="953.1" y="229" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="956.12" y="239.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (98 samples, 0.19%; +0.01%)</title><rect x="180.5" y="405" width="2.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="183.54" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (5 samples, 0.01%; +0.01%)</title><rect x="183.7" y="341" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="186.71" y="351.5" ></text>
</g>
<g >
<title>nohz_csd_func (13 samples, 0.03%; +0.03%)</title><rect x="1179.4" y="453" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1182.40" y="463.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,575 samples, 3.10%; 0.00%)</title><rect x="126.3" y="501" width="36.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.30" y="511.5" >cpu..</text>
</g>
<g >
<title>do_iter_write (138 samples, 0.27%; 0.00%)</title><rect x="12.4" y="245" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.39" y="255.5" ></text>
</g>
<g >
<title>NaClHostDescRead (17,883 samples, 35.24%; 0.00%)</title><rect x="300.3" y="453" width="415.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.33" y="463.5" >NaClHostDescRead</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (9,579 samples, 18.87%; +1.76%)</title><rect x="339.9" y="341" width="222.7" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="342.93" y="351.5" >ringbuf::ring_buffer::RingBuf..</text>
</g>
<g >
<title>tick_nohz_next_event (34 samples, 0.07%; +0.02%)</title><rect x="154.1" y="405" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="157.13" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (213 samples, 0.42%; -1.72%)</title><rect x="804.5" y="341" width="5.0" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="807.55" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (20 samples, 0.04%; +0.01%)</title><rect x="952.0" y="293" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="954.98" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (457 samples, 0.90%; 0.00%)</title><rect x="591.1" y="309" width="10.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="594.08" y="319.5" ></text>
</g>
<g >
<title>do_epoll_pwait.part.0 (6 samples, 0.01%; 0.00%)</title><rect x="124.9" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.93" y="495.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (7 samples, 0.01%; -0.00%)</title><rect x="13.9" y="85" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="16.91" y="95.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (9 samples, 0.02%; 0.00%)</title><rect x="862.5" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.51" y="335.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (15 samples, 0.03%; 0.00%)</title><rect x="1006.7" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1009.74" y="271.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (237 samples, 0.47%; -0.03%)</title><rect x="594.5" y="277" width="5.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="597.48" y="287.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (10 samples, 0.02%; +0.00%)</title><rect x="1091.7" y="357" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1094.72" y="367.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (65 samples, 0.13%; 0.00%)</title><rect x="330.2" y="357" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="333.16" y="367.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (642 samples, 1.26%; 0.00%)</title><rect x="815.0" y="357" width="15.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="818.03" y="367.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (10 samples, 0.02%; -0.01%)</title><rect x="13.2" y="117" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="16.21" y="127.5" ></text>
</g>
<g >
<title>get_typical_interval (8 samples, 0.02%; +0.02%)</title><rect x="1185.7" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1188.75" y="367.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (68 samples, 0.13%; 0.00%)</title><rect x="187.2" y="309" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.17" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (346 samples, 0.68%; -2.47%)</title><rect x="927.2" y="309" width="8.0" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="930.17" y="319.5" ></text>
</g>
<g >
<title>run_timer_softirq (6 samples, 0.01%; 0.00%)</title><rect x="128.4" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.39" y="335.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,218 samples, 2.40%; +0.03%)</title><rect x="126.8" y="469" width="28.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="129.84" y="479.5" >c..</text>
</g>
<g >
<title>wb_writeback (9 samples, 0.02%; 0.00%)</title><rect x="126.1" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.09" y="431.5" ></text>
</g>
<g >
<title>lru_cache_add (8 samples, 0.02%; -0.01%)</title><rect x="13.9" y="101" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="16.88" y="111.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (70 samples, 0.14%; +0.00%)</title><rect x="937.2" y="261" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="940.22" y="271.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (216 samples, 0.43%; +0.36%)</title><rect x="222.0" y="517" width="5.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="224.95" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (22 samples, 0.04%; 0.00%)</title><rect x="127.7" y="341" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.67" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (661 samples, 1.30%; 0.00%)</title><rect x="844.4" y="309" width="15.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="847.40" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7 samples, 0.01%; +0.01%)</title><rect x="178.9" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="181.89" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (13 samples, 0.03%; 0.00%)</title><rect x="1140.3" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.34" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (8,321 samples, 16.40%; +0.00%)</title><rect x="801.4" y="405" width="193.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="804.36" y="415.5" >rustposix::safeposix::dis..</text>
</g>
<g >
<title>send_call_function_single_ipi (9 samples, 0.02%; +0.02%)</title><rect x="1180.5" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1183.49" y="351.5" ></text>
</g>
<g >
<title>start_kernel (1,228 samples, 2.42%; 0.00%)</title><rect x="162.9" y="485" width="28.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="165.92" y="495.5" >st..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (161 samples, 0.32%; 0.00%)</title><rect x="946.1" y="309" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="949.15" y="319.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (141 samples, 0.28%; 0.00%)</title><rect x="1182.2" y="373" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1185.19" y="383.5" ></text>
</g>
<g >
<title>menu_select (47 samples, 0.09%; +0.01%)</title><rect x="1185.5" y="373" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1188.51" y="383.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (45 samples, 0.09%; 0.00%)</title><rect x="956.0" y="341" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="958.96" y="351.5" ></text>
</g>
<g >
<title>update_process_times (6 samples, 0.01%; 0.00%)</title><rect x="128.0" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.02" y="287.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (65 samples, 0.13%; 0.00%)</title><rect x="10.4" y="181" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.44" y="191.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (11,656 samples, 22.97%; +0.06%)</title><rect x="752.5" y="469" width="271.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="755.49" y="479.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>get_page_from_freelist (12 samples, 0.02%; -0.01%)</title><rect x="14.2" y="85" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="17.16" y="95.5" ></text>
</g>
<g >
<title>__x64_sys_poll (8 samples, 0.02%; 0.00%)</title><rect x="12.0" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.00" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (6 samples, 0.01%; 0.00%)</title><rect x="180.3" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.29" y="383.5" ></text>
</g>
<g >
<title>sched_clock_cpu (15 samples, 0.03%; +0.01%)</title><rect x="176.6" y="357" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="179.59" y="367.5" ></text>
</g>
<g >
<title>std::panicking::panicking (18 samples, 0.04%; 0.00%)</title><rect x="843.7" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.66" y="319.5" ></text>
</g>
<g >
<title>core::cmp::min (15 samples, 0.03%; 0.00%)</title><rect x="862.2" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.16" y="367.5" ></text>
</g>
<g >
<title>account_page_dirtied (10 samples, 0.02%; +0.01%)</title><rect x="14.7" y="85" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="17.72" y="95.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (136 samples, 0.27%; 0.00%)</title><rect x="1001.2" y="293" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1004.23" y="303.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (6 samples, 0.01%; +0.01%)</title><rect x="176.2" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="179.22" y="351.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (236 samples, 0.47%; 0.00%)</title><rect x="215.4" y="485" width="5.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.37" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (495 samples, 0.98%; 0.00%)</title><rect x="973.6" y="325" width="11.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="976.56" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (661 samples, 1.30%; +0.11%)</title><rect x="844.4" y="293" width="15.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="847.40" y="303.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (264 samples, 0.52%; +0.52%)</title><rect x="316.8" y="357" width="6.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="319.79" y="367.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (905 samples, 1.78%; +0.06%)</title><rect x="263.6" y="501" width="21.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="266.64" y="511.5" ></text>
</g>
<g >
<title>std::thread::panicking (17 samples, 0.03%; 0.00%)</title><rect x="985.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="988.46" y="335.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (5 samples, 0.01%; 0.00%)</title><rect x="601.6" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="604.59" y="271.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (17 samples, 0.03%; +0.01%)</title><rect x="938.3" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="941.33" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (6 samples, 0.01%; 0.00%)</title><rect x="128.0" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.02" y="303.5" ></text>
</g>
<g >
<title>rcu_idle_enter (7 samples, 0.01%; 0.00%)</title><rect x="175.9" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="178.87" y="367.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (22 samples, 0.04%; +0.00%)</title><rect x="179.5" y="309" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="182.54" y="319.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (143 samples, 0.28%; 0.00%)</title><rect x="946.6" y="261" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="949.56" y="271.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,228 samples, 2.42%; 0.00%)</title><rect x="162.9" y="437" width="28.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="165.92" y="447.5" >cp..</text>
</g>
<g >
<title>NaClUserToSysAddrRange (18 samples, 0.04%; +0.01%)</title><rect x="1050.6" y="485" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1053.61" y="495.5" ></text>
</g>
<g >
<title>fdarray__poll (9 samples, 0.02%; 0.00%)</title><rect x="12.0" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.98" y="495.5" ></text>
</g>
<g >
<title>NaClLog (102 samples, 0.20%; -0.01%)</title><rect x="295.6" y="501" width="2.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="298.61" y="511.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (13 samples, 0.03%; -0.00%)</title><rect x="15.0" y="85" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="17.98" y="95.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (36 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="501" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_read (6 samples, 0.01%; 0.00%)</title><rect x="125.4" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.39" y="511.5" ></text>
</g>
<g >
<title>newidle_balance (228 samples, 0.45%; +0.02%)</title><rect x="183.5" y="357" width="5.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="186.47" y="367.5" ></text>
</g>
<g >
<title>kthread (21 samples, 0.04%; 0.00%)</title><rect x="125.8" y="517" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.81" y="527.5" ></text>
</g>
<g >
<title>std::panicking::panicking (9 samples, 0.02%; 0.00%)</title><rect x="862.5" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.51" y="303.5" ></text>
</g>
<g >
<title>__schedule (197 samples, 0.39%; +0.04%)</title><rect x="157.2" y="453" width="4.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="160.20" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (27 samples, 0.05%; +0.00%)</title><rect x="202.9" y="517" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="205.91" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (515 samples, 1.01%; -0.00%)</title><rect x="995.1" y="373" width="12.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="998.11" y="383.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (28 samples, 0.06%; +0.06%)</title><rect x="190.8" y="421" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="193.77" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (59 samples, 0.12%; +0.01%)</title><rect x="1005.7" y="293" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1008.71" y="303.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (6 samples, 0.01%; -0.01%)</title><rect x="1096.3" y="517" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1099.25" y="527.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (42 samples, 0.08%; +0.00%)</title><rect x="945.2" y="293" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="948.17" y="303.5" ></text>
</g>
<g >
<title>std::thread::panicking (30 samples, 0.06%; 0.00%)</title><rect x="956.3" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="959.31" y="335.5" ></text>
</g>
<g >
<title>llist_reverse_order (30 samples, 0.06%; +0.06%)</title><rect x="181.6" y="389" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="184.57" y="399.5" ></text>
</g>
<g >
<title>record__write (145 samples, 0.29%; -0.00%)</title><rect x="12.3" y="421" width="3.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="15.28" y="431.5" ></text>
</g>
<g >
<title>ctx_resched (65 samples, 0.13%; 0.00%)</title><rect x="10.4" y="213" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.44" y="223.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (213 samples, 0.42%; +0.08%)</title><rect x="183.8" y="341" width="5.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="186.82" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (33 samples, 0.07%; -8.96%)</title><rect x="331.7" y="341" width="0.7" height="15.0" fill="rgb(78,78,255)" rx="2" ry="2" />
<text  x="334.67" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (201 samples, 0.40%; +0.00%)</title><rect x="995.5" y="309" width="4.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="998.51" y="319.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (6 samples, 0.01%; -0.00%)</title><rect x="15.5" y="165" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="18.46" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.02%; 0.00%)</title><rect x="12.0" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.00" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2,141 samples, 4.22%; 0.00%)</title><rect x="510.6" y="325" width="49.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="513.64" y="335.5" >core:..</text>
</g>
<g >
<title>do_anonymous_page (83 samples, 0.16%; -0.00%)</title><rect x="1090.5" y="421" width="1.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1093.46" y="431.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (21 samples, 0.04%; 0.00%)</title><rect x="15.0" y="101" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.98" y="111.5" ></text>
</g>
<g >
<title>alloc_page_buffers (18 samples, 0.04%; 0.00%)</title><rect x="12.8" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.79" y="127.5" ></text>
</g>
<g >
<title>get_page_from_freelist (38 samples, 0.07%; -0.00%)</title><rect x="1090.6" y="373" width="0.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1093.65" y="383.5" ></text>
</g>
<g >
<title>NaClLog (73 samples, 0.14%; +0.03%)</title><rect x="1094.3" y="517" width="1.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1097.25" y="527.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (33 samples, 0.07%; +0.00%)</title><rect x="256.4" y="485" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="259.37" y="495.5" ></text>
</g>
<g >
<title>call_timer_fn (6 samples, 0.01%; 0.00%)</title><rect x="128.4" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.39" y="303.5" ></text>
</g>
<g >
<title>__run_hrtimer (21 samples, 0.04%; 0.00%)</title><rect x="127.7" y="325" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.67" y="335.5" ></text>
</g>
<g >
<title>__GI___poll (9 samples, 0.02%; -0.00%)</title><rect x="12.0" y="469" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="14.98" y="479.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (881 samples, 1.74%; -0.26%)</title><rect x="1113.2" y="517" width="20.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1116.20" y="527.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (26 samples, 0.05%; -0.01%)</title><rect x="947.4" y="213" width="0.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="950.42" y="223.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (23 samples, 0.05%; 0.00%)</title><rect x="299.6" y="469" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="302.63" y="479.5" ></text>
</g>
<g >
<title>newidle_balance (52 samples, 0.10%; 0.00%)</title><rect x="1179.7" y="421" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1182.75" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.08%; 0.00%)</title><rect x="124.9" y="533" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.88" y="543.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,667 samples, 3.28%; 0.00%)</title><rect x="862.5" y="341" width="38.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.51" y="351.5" >&lt;st..</text>
</g>
<g >
<title>event_function_call (73 samples, 0.14%; +0.01%)</title><rect x="10.3" y="309" width="1.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="13.26" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (49 samples, 0.10%; +0.04%)</title><rect x="205.3" y="517" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="208.31" y="527.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%; 0.00%)</title><rect x="229.1" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="232.14" y="495.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (6 samples, 0.01%; +0.01%)</title><rect x="175.9" y="341" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="178.87" y="351.5" ></text>
</g>
<g >
<title>rcu_idle_exit (20 samples, 0.04%; +0.02%)</title><rect x="151.5" y="421" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="154.53" y="431.5" ></text>
</g>
<g >
<title>kick_ilb (111 samples, 0.22%; +0.07%)</title><rect x="186.2" y="325" width="2.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="189.17" y="335.5" ></text>
</g>
<g >
<title>rmqueue (12 samples, 0.02%; -0.00%)</title><rect x="1091.3" y="357" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1094.25" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (9 samples, 0.02%; 0.00%)</title><rect x="862.5" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.51" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_write (141 samples, 0.28%; 0.00%)</title><rect x="12.4" y="341" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.37" y="351.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (11 samples, 0.02%; +0.01%)</title><rect x="736.5" y="485" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="739.49" y="495.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (19 samples, 0.04%; +0.00%)</title><rect x="1142.5" y="245" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1145.52" y="255.5" ></text>
</g>
<g >
<title>ion (145 samples, 0.29%; 0.00%)</title><rect x="12.3" y="405" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.28" y="415.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (11,541 samples, 22.74%; +0.01%)</title><rect x="755.0" y="453" width="268.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="758.02" y="463.5" >NaClHostDescWrite</text>
</g>
<g >
<title>free_unref_page_commit (7 samples, 0.01%; 0.00%)</title><rect x="1142.8" y="197" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.78" y="207.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (62 samples, 0.12%; +0.12%)</title><rect x="953.1" y="213" width="1.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="956.12" y="223.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.01%; 0.00%)</title><rect x="1178.2" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1181.21" y="431.5" ></text>
</g>
<g >
<title>menu_select (129 samples, 0.25%; +0.05%)</title><rect x="177.1" y="373" width="3.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="180.15" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (14 samples, 0.03%; +0.01%)</title><rect x="1033.5" y="453" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1036.55" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (325 samples, 0.64%; 0.00%)</title><rect x="835.8" y="309" width="7.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="838.77" y="319.5" ></text>
</g>
<g >
<title>[unknown] (2,084 samples, 4.11%; 0.00%)</title><rect x="1092.8" y="533" width="48.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1095.84" y="543.5" >[unk..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (390 samples, 0.77%; 0.00%)</title><rect x="792.3" y="341" width="9.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="795.30" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (892 samples, 1.76%; 0.00%)</title><rect x="935.2" y="357" width="20.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="938.22" y="367.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (15 samples, 0.03%; -0.00%)</title><rect x="1006.7" y="229" width="0.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1009.74" y="239.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (892 samples, 1.76%; 0.00%)</title><rect x="935.2" y="373" width="20.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="938.22" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter (554 samples, 1.09%; +0.00%)</title><rect x="164.2" y="389" width="12.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="167.15" y="399.5" ></text>
</g>
<g >
<title>core::cmp::min_by (177 samples, 0.35%; +0.35%)</title><rect x="322.9" y="325" width="4.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="325.93" y="335.5" ></text>
</g>
<g >
<title>sched_clock_cpu (12 samples, 0.02%; 0.00%)</title><rect x="189.0" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.01" y="367.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (17,883 samples, 35.24%; 0.00%)</title><rect x="300.3" y="405" width="415.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.33" y="415.5" >rustposix::safeposix::dispatcher::dispatcher::{{closure}}</text>
</g>
<g >
<title>NaClSysReadDecoder (17,883 samples, 35.24%; 0.00%)</title><rect x="300.3" y="501" width="415.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.33" y="511.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>exc_page_fault (98 samples, 0.19%; 0.00%)</title><rect x="1090.2" y="501" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1093.18" y="511.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (13 samples, 0.03%; +0.00%)</title><rect x="754.7" y="453" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="757.72" y="463.5" ></text>
</g>
<g >
<title>lind_read (17,883 samples, 35.24%; 0.00%)</title><rect x="300.3" y="437" width="415.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.33" y="447.5" >lind_read</text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (19 samples, 0.04%; 0.00%)</title><rect x="204.3" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="207.26" y="479.5" ></text>
</g>
<g >
<title>std::panicking::panicking (30 samples, 0.06%; 0.00%)</title><rect x="956.3" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="959.31" y="319.5" ></text>
</g>
<g >
<title>__slab_alloc (6 samples, 0.01%; 0.00%)</title><rect x="12.9" y="69" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.88" y="79.5" ></text>
</g>
<g >
<title>CompareAndSwap (672 samples, 1.32%; +0.01%)</title><rect x="269.1" y="485" width="15.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="272.06" y="495.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.01%; +0.01%)</title><rect x="1181.0" y="405" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1184.03" y="415.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (10 samples, 0.02%; +0.01%)</title><rect x="1000.8" y="293" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1003.83" y="303.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (7 samples, 0.01%; 0.00%)</title><rect x="1112.6" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.64" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (17 samples, 0.03%; +0.01%)</title><rect x="723.9" y="421" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="726.89" y="431.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (28 samples, 0.06%; +0.06%)</title><rect x="861.5" y="357" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="864.51" y="367.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (7 samples, 0.01%; 0.00%)</title><rect x="927.0" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="930.01" y="287.5" ></text>
</g>
<g >
<title>llist_reverse_order (6 samples, 0.01%; +0.01%)</title><rect x="1179.3" y="453" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1182.26" y="463.5" ></text>
</g>
<g >
<title>cmd_record (241 samples, 0.47%; 0.00%)</title><rect x="10.1" y="517" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.07" y="527.5" ></text>
</g>
<g >
<title>new_sync_write (140 samples, 0.28%; -0.00%)</title><rect x="12.4" y="293" width="3.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="15.37" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_single (67 samples, 0.13%; 0.00%)</title><rect x="10.4" y="293" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.40" y="303.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (15 samples, 0.03%; 0.00%)</title><rect x="127.7" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.67" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (8 samples, 0.02%; +0.02%)</title><rect x="153.8" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="156.83" y="399.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (24 samples, 0.05%; +0.05%)</title><rect x="187.2" y="277" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="190.22" y="287.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 0.16%; 0.00%)</title><rect x="10.1" y="469" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.09" y="479.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (22 samples, 0.04%; -0.00%)</title><rect x="15.0" y="117" width="0.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="17.95" y="127.5" ></text>
</g>
<g >
<title>core::cmp::min (311 samples, 0.61%; 0.00%)</title><rect x="322.9" y="357" width="7.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="325.93" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (359 samples, 0.71%; -0.01%)</title><rect x="1024.3" y="453" width="8.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1027.29" y="463.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get (9 samples, 0.02%; 0.00%)</title><rect x="809.5" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.50" y="319.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (29 samples, 0.06%; 0.00%)</title><rect x="954.6" y="229" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="957.56" y="239.5" ></text>
</g>
<g >
<title>__schedule (271 samples, 0.53%; +0.03%)</title><rect x="183.0" y="389" width="6.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="185.99" y="399.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (56 samples, 0.11%; 0.00%)</title><rect x="160.0" y="373" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="163.01" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (39 samples, 0.08%; 0.00%)</title><rect x="124.9" y="517" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.88" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (12 samples, 0.02%; +0.02%)</title><rect x="175.5" y="325" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="178.52" y="335.5" ></text>
</g>
<g >
<title>process_one_work (17 samples, 0.03%; 0.00%)</title><rect x="125.9" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.91" y="495.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (462 samples, 0.91%; +0.01%)</title><rect x="721.4" y="453" width="10.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="724.43" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (132 samples, 0.26%; -0.00%)</title><rect x="997.1" y="293" width="3.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1000.11" y="303.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (7 samples, 0.01%; +0.01%)</title><rect x="1182.2" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1185.19" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (10 samples, 0.02%; +0.02%)</title><rect x="1181.4" y="485" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1184.42" y="495.5" ></text>
</g>
<g >
<title>___slab_alloc (6 samples, 0.01%; 0.00%)</title><rect x="12.9" y="53" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.88" y="63.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (243 samples, 0.48%; -0.06%)</title><rect x="938.8" y="261" width="5.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="941.85" y="271.5" ></text>
</g>
<g >
<title>rest_init (1,228 samples, 2.42%; 0.00%)</title><rect x="162.9" y="453" width="28.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="165.92" y="463.5" >re..</text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (12 samples, 0.02%; -0.00%)</title><rect x="204.7" y="501" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="207.70" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (234 samples, 0.46%; 0.00%)</title><rect x="830.3" y="309" width="5.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="833.33" y="319.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (6 samples, 0.01%; +0.00%)</title><rect x="1186.5" y="309" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1189.47" y="319.5" ></text>
</g>
<g >
<title>release_pages (18 samples, 0.04%; +0.01%)</title><rect x="1142.5" y="229" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1145.55" y="239.5" ></text>
</g>
<g >
<title>NaClLog (11 samples, 0.02%; -0.00%)</title><rect x="233.3" y="517" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="236.35" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.03%; -0.02%)</title><rect x="205.0" y="469" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="207.98" y="479.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (31 samples, 0.06%; +0.06%)</title><rect x="164.5" y="357" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="167.45" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (7 samples, 0.01%; 0.00%)</title><rect x="927.0" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="930.01" y="271.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (176 samples, 0.35%; +0.01%)</title><rect x="257.1" y="485" width="4.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="260.13" y="495.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.01%; +0.01%)</title><rect x="152.0" y="405" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="155.02" y="415.5" ></text>
</g>
<g >
<title>sel_ldr (40,939 samples, 80.67%; +0.00%)</title><rect x="191.5" y="549" width="951.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="194.47" y="559.5" >sel_ldr</text>
</g>
<g >
<title>std::panicking::panicking (7 samples, 0.01%; 0.00%)</title><rect x="927.0" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="930.01" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (13 samples, 0.03%; 0.00%)</title><rect x="1140.6" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.64" y="511.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (79 samples, 0.16%; +0.01%)</title><rect x="155.2" y="469" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="158.20" y="479.5" ></text>
</g>
<g >
<title>ext4_writepages (7 samples, 0.01%; 0.00%)</title><rect x="126.1" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.14" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (5 samples, 0.01%; 0.00%)</title><rect x="904.8" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="907.76" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (15 samples, 0.03%; 0.00%)</title><rect x="1006.7" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1009.74" y="287.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (18 samples, 0.04%; 0.00%)</title><rect x="843.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.66" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (146 samples, 0.29%; -0.23%)</title><rect x="591.1" y="277" width="3.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="594.08" y="287.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3,120 samples, 6.15%; -0.24%)</title><rect x="630.4" y="293" width="72.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="633.40" y="303.5" >core::in..</text>
</g>
<g >
<title>NaClLog (154 samples, 0.30%; +0.04%)</title><rect x="1044.7" y="469" width="3.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1047.66" y="479.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (65 samples, 0.13%; -0.10%)</title><rect x="330.2" y="341" width="1.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="333.16" y="351.5" ></text>
</g>
<g >
<title>start_kernel (356 samples, 0.70%; 0.00%)</title><rect x="1181.7" y="485" width="8.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1184.72" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.03%; +0.03%)</title><rect x="1004.1" y="277" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1007.06" y="287.5" ></text>
</g>
<g >
<title>llist_add_batch (40 samples, 0.08%; +0.08%)</title><rect x="187.8" y="293" width="0.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="190.78" y="303.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (560 samples, 1.10%; +0.00%)</title><rect x="830.3" y="341" width="13.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="833.31" y="351.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (393 samples, 0.77%; -0.02%)</title><rect x="1032.8" y="469" width="9.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1035.85" y="479.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (236 samples, 0.47%; -0.17%)</title><rect x="215.4" y="453" width="5.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="218.37" y="463.5" ></text>
</g>
<g >
<title>pick_next_task_idle (6 samples, 0.01%; +0.00%)</title><rect x="188.8" y="373" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="191.78" y="383.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (18 samples, 0.04%; +0.01%)</title><rect x="196.1" y="517" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="199.12" y="527.5" ></text>
</g>
<g >
<title>do_exit (36 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="405" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="415.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (15 samples, 0.03%; 0.00%)</title><rect x="221.6" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="224.61" y="495.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.01%; +0.00%)</title><rect x="1189.4" y="357" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1192.37" y="367.5" ></text>
</g>
<g >
<title>std::thread::panicking (7 samples, 0.01%; 0.00%)</title><rect x="927.0" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="930.01" y="319.5" ></text>
</g>
<g >
<title>kick_ilb (31 samples, 0.06%; +0.02%)</title><rect x="1180.2" y="389" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1183.21" y="399.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (7 samples, 0.01%; +0.00%)</title><rect x="1186.4" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1189.44" y="335.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (11 samples, 0.02%; 0.00%)</title><rect x="128.3" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.28" y="383.5" ></text>
</g>
<g >
<title>pick_next_task_fair (230 samples, 0.45%; +0.00%)</title><rect x="183.4" y="373" width="5.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="186.43" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (118 samples, 0.23%; +0.01%)</title><rect x="952.5" y="261" width="2.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="955.49" y="271.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 0.16%; 0.00%)</title><rect x="10.1" y="453" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.09" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (666 samples, 1.31%; 0.00%)</title><rect x="785.9" y="357" width="15.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="788.88" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (8 samples, 0.02%; +0.02%)</title><rect x="189.3" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="192.29" y="399.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (8 samples, 0.02%; -0.00%)</title><rect x="15.0" y="53" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="18.05" y="63.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (138 samples, 0.27%; 0.00%)</title><rect x="12.4" y="213" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.39" y="223.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (3,245 samples, 6.39%; -0.24%)</title><rect x="859.8" y="373" width="75.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="862.77" y="383.5" >rustposi..</text>
</g>
<g >
<title>x86_64_start_reservations (356 samples, 0.70%; 0.00%)</title><rect x="1181.7" y="501" width="8.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1184.72" y="511.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (20 samples, 0.04%; +0.01%)</title><rect x="906.8" y="325" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="909.76" y="335.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (143 samples, 0.28%; +0.01%)</title><rect x="1001.1" y="325" width="3.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1004.06" y="335.5" ></text>
</g>
<g >
<title>start_secondary (478 samples, 0.94%; 0.00%)</title><rect x="1170.6" y="517" width="11.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1173.61" y="527.5" ></text>
</g>
<g >
<title>read_tsc (9 samples, 0.02%; +0.02%)</title><rect x="161.9" y="453" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="164.85" y="463.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (34 samples, 0.07%; 0.00%)</title><rect x="985.1" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="988.07" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (42 samples, 0.08%; 0.00%)</title><rect x="1090.6" y="389" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1093.56" y="399.5" ></text>
</g>
<g >
<title>poll_idle (114 samples, 0.22%; +0.21%)</title><rect x="1175.4" y="421" width="2.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1178.38" y="431.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (346 samples, 0.68%; -0.16%)</title><rect x="927.2" y="341" width="8.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="930.17" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (5 samples, 0.01%; 0.00%)</title><rect x="300.2" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.22" y="431.5" ></text>
</g>
<g >
<title>rcu_idle_exit (7 samples, 0.01%; +0.00%)</title><rect x="1185.3" y="357" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1188.26" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (14 samples, 0.03%; +0.00%)</title><rect x="161.8" y="469" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="164.80" y="479.5" ></text>
</g>
<g >
<title>lind_write (6 samples, 0.01%; -0.01%)</title><rect x="1023.4" y="453" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1026.36" y="463.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (71 samples, 0.14%; +0.01%)</title><rect x="944.5" y="309" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="947.50" y="319.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (51 samples, 0.10%; +0.02%)</title><rect x="1179.8" y="405" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1182.77" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (8,284 samples, 16.32%; -0.06%)</title><rect x="802.2" y="389" width="192.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="805.22" y="399.5" >rustposix::safeposix::sys..</text>
</g>
<g >
<title>NaClSysDyncodeCreate (24 samples, 0.05%; 0.00%)</title><rect x="299.6" y="485" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="302.63" y="495.5" ></text>
</g>
<g >
<title>dispatcher (5 samples, 0.01%; 0.00%)</title><rect x="300.2" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.22" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (892 samples, 1.76%; -0.03%)</title><rect x="935.2" y="341" width="20.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="938.22" y="351.5" ></text>
</g>
<g >
<title>llist_reverse_order (21 samples, 0.04%; +0.04%)</title><rect x="155.9" y="453" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="158.85" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (8 samples, 0.02%; +0.00%)</title><rect x="1181.2" y="469" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1184.23" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (677 samples, 1.33%; -0.00%)</title><rect x="1007.4" y="373" width="15.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1010.37" y="383.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (47 samples, 0.09%; -0.10%)</title><rect x="220.9" y="517" width="1.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="223.86" y="527.5" ></text>
</g>
<g >
<title>NaClSysWrite (11 samples, 0.02%; -0.01%)</title><rect x="195.5" y="517" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="198.54" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1,207 samples, 2.38%; -0.01%)</title><rect x="957.0" y="341" width="28.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="960.00" y="351.5" >s..</text>
</g>
<g >
<title>NaClGetDescMuNoRef (19 samples, 0.04%; +0.01%)</title><rect x="193.8" y="517" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="196.82" y="527.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (74 samples, 0.15%; 0.00%)</title><rect x="600.0" y="293" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="602.99" y="303.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (136 samples, 0.27%; 0.00%)</title><rect x="1001.2" y="309" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1004.23" y="319.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.04%; -0.00%)</title><rect x="951.5" y="261" width="0.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="954.47" y="271.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (22 samples, 0.04%; +0.01%)</title><rect x="1000.6" y="325" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1003.55" y="335.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1,645 samples, 3.24%; -3.90%)</title><rect x="863.0" y="293" width="38.3" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="866.02" y="303.5" >__p..</text>
</g>
<g >
<title>generic_write_end (37 samples, 0.07%; -0.01%)</title><rect x="14.6" y="149" width="0.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="17.60" y="159.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (5 samples, 0.01%; +0.00%)</title><rect x="1189.6" y="405" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1192.56" y="415.5" ></text>
</g>
<g >
<title>rcu_idle_exit (21 samples, 0.04%; +0.02%)</title><rect x="176.0" y="357" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="179.03" y="367.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (9 samples, 0.02%; 0.00%)</title><rect x="126.1" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.09" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (6 samples, 0.01%; 0.00%)</title><rect x="124.9" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.93" y="511.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (11 samples, 0.02%; -0.01%)</title><rect x="298.0" y="501" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="300.98" y="511.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (36 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="485" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="495.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (15 samples, 0.03%; -0.03%)</title><rect x="904.0" y="277" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="906.97" y="287.5" ></text>
</g>
<g >
<title>cpuidle_select (31 samples, 0.06%; 0.00%)</title><rect x="1178.3" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1181.33" y="463.5" ></text>
</g>
<g >
<title>DynArrayGet (63 samples, 0.12%; -0.01%)</title><rect x="1042.9" y="453" width="1.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1045.92" y="463.5" ></text>
</g>
<g >
<title>[sel_ldr] (1,276 samples, 2.51%; -0.11%)</title><rect x="1060.4" y="517" width="29.7" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1063.45" y="527.5" >[s..</text>
</g>
<g >
<title>flush_smp_call_function_from_idle (36 samples, 0.07%; +0.01%)</title><rect x="1186.7" y="405" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1189.70" y="415.5" ></text>
</g>
<g >
<title>__free_one_page (5 samples, 0.01%; +0.01%)</title><rect x="1142.8" y="165" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1145.82" y="175.5" ></text>
</g>
<g >
<title>NaClSysExit (5 samples, 0.01%; 0.00%)</title><rect x="300.2" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.22" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (618 samples, 1.22%; +0.01%)</title><rect x="935.5" y="325" width="14.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="938.52" y="335.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (12 samples, 0.02%; -0.00%)</title><rect x="1007.1" y="325" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1010.09" y="335.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (9 samples, 0.02%; -0.02%)</title><rect x="195.3" y="517" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="198.33" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (5 samples, 0.01%; +0.01%)</title><rect x="178.7" y="325" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="181.68" y="335.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (11 samples, 0.02%; -0.01%)</title><rect x="14.7" y="117" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="17.70" y="127.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (7 samples, 0.01%; -0.02%)</title><rect x="735.6" y="485" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="738.56" y="495.5" ></text>
</g>
<g >
<title>cpu_startup_entry (478 samples, 0.94%; 0.00%)</title><rect x="1170.6" y="501" width="11.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1173.61" y="511.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (236 samples, 0.47%; 0.00%)</title><rect x="215.4" y="501" width="5.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.37" y="511.5" ></text>
</g>
<g >
<title>cpuidle_select (116 samples, 0.23%; 0.00%)</title><rect x="152.3" y="453" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.32" y="463.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (7 samples, 0.01%; +0.00%)</title><rect x="12.0" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="15.02" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (18 samples, 0.04%; 0.00%)</title><rect x="228.7" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="231.72" y="511.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (5 samples, 0.01%; 0.00%)</title><rect x="300.2" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.22" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (642 samples, 1.26%; 0.00%)</title><rect x="815.0" y="341" width="15.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="818.03" y="351.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (13 samples, 0.03%; 0.00%)</title><rect x="1041.7" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1044.68" y="463.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (689 samples, 1.36%; 0.00%)</title><rect x="1007.1" y="405" width="16.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1010.09" y="415.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (15 samples, 0.03%; 0.00%)</title><rect x="956.0" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="958.96" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (934 samples, 1.84%; -3.23%)</title><rect x="608.3" y="293" width="21.7" height="15.0" fill="rgb(162,162,255)" rx="2" ry="2" />
<text  x="611.27" y="303.5" >c..</text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.06%; -0.02%)</title><rect x="1005.0" y="293" width="0.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1008.04" y="303.5" ></text>
</g>
<g >
<title>poll_idle (457 samples, 0.90%; +0.87%)</title><rect x="165.2" y="357" width="10.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="168.18" y="367.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (12 samples, 0.02%; 0.00%)</title><rect x="229.6" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="232.63" y="495.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (6 samples, 0.01%; 0.00%)</title><rect x="14.5" y="133" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.46" y="143.5" ></text>
</g>
<g >
<title>tick_sched_timer (6 samples, 0.01%; 0.00%)</title><rect x="128.0" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.02" y="319.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (5 samples, 0.01%; 0.00%)</title><rect x="229.5" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="232.51" y="495.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (7 samples, 0.01%; +0.01%)</title><rect x="1092.0" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1095.02" y="399.5" ></text>
</g>
<g >
<title>menu_update (11 samples, 0.02%; +0.02%)</title><rect x="178.2" y="357" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="181.22" y="367.5" ></text>
</g>
<g >
<title>record__mmap_read_all (149 samples, 0.29%; 0.00%)</title><rect x="12.2" y="485" width="3.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.21" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (213 samples, 0.42%; 0.00%)</title><rect x="804.5" y="373" width="5.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="807.55" y="383.5" ></text>
</g>
<g >
<title>NaClLog (37 samples, 0.07%; +0.01%)</title><rect x="194.4" y="517" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="197.45" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (7 samples, 0.01%; -0.02%)</title><rect x="927.0" y="245" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="930.01" y="255.5" ></text>
</g>
<g >
<title>[sel_ldr] (35,256 samples, 69.47%; +0.01%)</title><rect x="231.6" y="533" width="819.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="234.60" y="543.5" >[sel_ldr]</text>
</g>
<g >
<title>rustposix::interface::types::get_int (13 samples, 0.03%; 0.00%)</title><rect x="801.9" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="804.92" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.03%; 0.00%)</title><rect x="1140.9" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.94" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (31 samples, 0.06%; +0.02%)</title><rect x="955.2" y="309" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="958.24" y="319.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (74 samples, 0.15%; +0.03%)</title><rect x="261.9" y="501" width="1.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="264.92" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (325 samples, 0.64%; -0.20%)</title><rect x="835.8" y="293" width="7.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="838.77" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (229 samples, 0.45%; 0.00%)</title><rect x="809.7" y="341" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.71" y="351.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (6 samples, 0.01%; -0.00%)</title><rect x="196.5" y="517" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="199.54" y="527.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (718 samples, 1.41%; +0.01%)</title><rect x="718.9" y="485" width="16.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="721.87" y="495.5" ></text>
</g>
<g >
<title>alloc_pages_vma (45 samples, 0.09%; +0.00%)</title><rect x="1090.5" y="405" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1093.49" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (559 samples, 1.10%; 0.00%)</title><rect x="830.3" y="325" width="13.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="833.33" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (10 samples, 0.02%; +0.02%)</title><rect x="154.6" y="357" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="157.64" y="367.5" ></text>
</g>
<g >
<title>do_user_addr_fault (98 samples, 0.19%; -0.00%)</title><rect x="1090.2" y="485" width="2.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1093.18" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (666 samples, 1.31%; 0.00%)</title><rect x="785.9" y="405" width="15.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="788.88" y="415.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1,207 samples, 2.38%; 0.00%)</title><rect x="957.0" y="357" width="28.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="960.00" y="367.5" >s..</text>
</g>
<g >
<title>do_epoll_wait (6 samples, 0.01%; +0.00%)</title><rect x="124.9" y="469" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="127.93" y="479.5" ></text>
</g>
<g >
<title>all (50,751 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>sched_clock_cpu (8 samples, 0.02%; 0.00%)</title><rect x="161.6" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="164.60" y="431.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (5 samples, 0.01%; -0.02%)</title><rect x="906.6" y="309" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="909.64" y="319.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (80 samples, 0.16%; -0.01%)</title><rect x="948.0" y="213" width="1.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="951.03" y="223.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (707 samples, 1.39%; -0.02%)</title><rect x="843.3" y="357" width="16.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="846.33" y="367.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (483 samples, 0.95%; +0.01%)</title><rect x="720.9" y="469" width="11.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="723.94" y="479.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (21 samples, 0.04%; +0.01%)</title><rect x="178.6" y="341" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="181.59" y="351.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%; +0.02%)</title><rect x="1003.9" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1006.85" y="271.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (19 samples, 0.04%; +0.01%)</title><rect x="735.7" y="485" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="738.73" y="495.5" ></text>
</g>
<g >
<title>mmput (35 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="373" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="383.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (22 samples, 0.04%; +0.04%)</title><rect x="155.3" y="453" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="158.34" y="463.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.01%; +0.01%)</title><rect x="1178.2" y="405" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1181.21" y="415.5" ></text>
</g>
<g >
<title>poll_idle (333 samples, 0.66%; +0.64%)</title><rect x="143.7" y="421" width="7.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="146.67" y="431.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (10 samples, 0.02%; 0.00%)</title><rect x="1000.8" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1003.83" y="319.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (13 samples, 0.03%; -0.02%)</title><rect x="14.7" y="133" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="17.65" y="143.5" ></text>
</g>
<g >
<title>&lt;std::lazy::SyncLazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.02%; 0.00%)</title><rect x="809.5" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.50" y="383.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (13 samples, 0.03%; -0.00%)</title><rect x="1092.0" y="405" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1094.97" y="415.5" ></text>
</g>
<g >
<title>ksys_read (6 samples, 0.01%; +0.00%)</title><rect x="125.4" y="485" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="128.39" y="495.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (13 samples, 0.03%; -0.04%)</title><rect x="1140.3" y="485" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1143.34" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (17,883 samples, 35.24%; 0.00%)</title><rect x="300.3" y="389" width="415.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.33" y="399.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposi..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (27 samples, 0.05%; 0.00%)</title><rect x="331.0" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="334.05" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (1,667 samples, 3.28%; 0.00%)</title><rect x="862.5" y="357" width="38.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.51" y="367.5" >cor..</text>
</g>
<g >
<title>nohz_csd_func (11 samples, 0.02%; +0.02%)</title><rect x="1187.3" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1190.28" y="399.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (420 samples, 0.83%; 0.00%)</title><rect x="985.1" y="373" width="9.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="988.07" y="383.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14 samples, 0.03%; 0.00%)</title><rect x="205.0" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="207.98" y="495.5" ></text>
</g>
<g >
<title>rmqueue (5 samples, 0.01%; +0.00%)</title><rect x="14.3" y="69" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="17.32" y="79.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (682 samples, 1.34%; +0.03%)</title><rect x="957.7" y="325" width="15.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="960.70" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1,228 samples, 2.42%; 0.00%)</title><rect x="162.9" y="501" width="28.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="165.92" y="511.5" >x8..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (707 samples, 1.39%; 0.00%)</title><rect x="843.3" y="373" width="16.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.33" y="383.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (817 samples, 1.61%; +0.39%)</title><rect x="907.7" y="325" width="19.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="910.74" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (383 samples, 0.75%; 0.00%)</title><rect x="591.1" y="293" width="8.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="594.08" y="303.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (14 samples, 0.03%; +0.00%)</title><rect x="731.8" y="421" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="734.84" y="431.5" ></text>
</g>
<g >
<title>zap_pte_range (35 samples, 0.07%; +0.02%)</title><rect x="1142.1" y="277" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1145.15" y="287.5" ></text>
</g>
<g >
<title>DynArrayGet (22 samples, 0.04%; +0.02%)</title><rect x="1093.5" y="517" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1096.53" y="527.5" ></text>
</g>
<g >
<title>ttwu_do_activate (12 samples, 0.02%; 0.00%)</title><rect x="127.7" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.72" y="271.5" ></text>
</g>
<g >
<title>schedule_idle (281 samples, 0.55%; +0.00%)</title><rect x="182.9" y="405" width="6.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="185.94" y="415.5" ></text>
</g>
<g >
<title>generic_perform_write (134 samples, 0.26%; -0.01%)</title><rect x="12.5" y="181" width="3.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="15.49" y="191.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (264 samples, 0.52%; 0.00%)</title><rect x="815.0" y="309" width="6.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="818.03" y="319.5" ></text>
</g>
<g >
<title>newidle_balance (155 samples, 0.31%; +0.02%)</title><rect x="157.7" y="421" width="3.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="160.71" y="431.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (15 samples, 0.03%; 0.00%)</title><rect x="221.6" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="224.61" y="511.5" ></text>
</g>
<g >
<title>NaClMutexLock (11 samples, 0.02%; +0.00%)</title><rect x="1096.0" y="517" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1098.95" y="527.5" ></text>
</g>
<g >
<title>std::lazy::SyncLazy&lt;T,F&gt;::force (9 samples, 0.02%; 0.00%)</title><rect x="809.5" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.50" y="367.5" ></text>
</g>
<g >
<title>lind_write (11,334 samples, 22.33%; +0.02%)</title><rect x="759.8" y="437" width="263.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="762.84" y="447.5" >lind_write</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (13 samples, 0.03%; +0.03%)</title><rect x="1003.0" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1006.04" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (229 samples, 0.45%; 0.00%)</title><rect x="809.7" y="357" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.71" y="367.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (74 samples, 0.15%; -0.06%)</title><rect x="600.0" y="277" width="1.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="602.99" y="287.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (29 samples, 0.06%; +0.05%)</title><rect x="158.7" y="389" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="161.67" y="399.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (22 samples, 0.04%; +0.02%)</title><rect x="192.6" y="517" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="195.63" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (59 samples, 0.12%; 0.00%)</title><rect x="1005.7" y="325" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1008.71" y="335.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (291 samples, 0.57%; +0.12%)</title><rect x="709.3" y="325" width="6.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="712.31" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (25 samples, 0.05%; 0.00%)</title><rect x="1186.0" y="357" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1189.02" y="367.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (5 samples, 0.01%; +0.00%)</title><rect x="13.3" y="101" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="16.26" y="111.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (378 samples, 0.74%; 0.00%)</title><rect x="821.2" y="309" width="8.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="824.17" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (20 samples, 0.04%; +0.01%)</title><rect x="1005.9" y="277" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1008.90" y="287.5" ></text>
</g>
<g >
<title>exit_mm (35 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="389" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="399.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (17 samples, 0.03%; 0.00%)</title><rect x="1112.8" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.81" y="511.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (17,880 samples, 35.23%; -0.76%)</title><rect x="300.4" y="373" width="415.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="303.36" y="383.5" >rustposix::interface::pipe::EmulatedPipe::read_from_pipe</text>
</g>
<g >
<title>NaClUserToSysStackAddr (30 samples, 0.06%; +0.01%)</title><rect x="261.2" y="485" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="264.22" y="495.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (29 samples, 0.06%; +0.01%)</title><rect x="954.6" y="197" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="957.56" y="207.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (11 samples, 0.02%; -0.01%)</title><rect x="1096.4" y="517" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1099.39" y="527.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (729 samples, 1.44%; +0.06%)</title><rect x="163.5" y="405" width="17.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="166.50" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (47 samples, 0.09%; -0.07%)</title><rect x="905.6" y="277" width="1.0" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="908.55" y="287.5" ></text>
</g>
<g >
<title>native_write_msr (65 samples, 0.13%; +0.00%)</title><rect x="10.4" y="165" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="13.44" y="175.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (6 samples, 0.01%; +0.00%)</title><rect x="1091.5" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1094.53" y="415.5" ></text>
</g>
<g >
<title>worker_thread (17 samples, 0.03%; 0.00%)</title><rect x="125.9" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.91" y="511.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (8 samples, 0.02%; -0.02%)</title><rect x="295.4" y="453" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="298.43" y="463.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (20 samples, 0.04%; +0.01%)</title><rect x="233.6" y="517" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="236.63" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.02%; 0.00%)</title><rect x="12.0" y="437" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.00" y="447.5" ></text>
</g>
<g >
<title>std::sync::once::Once::is_completed (9 samples, 0.02%; -0.01%)</title><rect x="809.5" y="277" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="812.50" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (230 samples, 0.45%; +0.03%)</title><rect x="949.9" y="309" width="5.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="952.89" y="319.5" ></text>
</g>
<g >
<title>poll_idle (125 samples, 0.25%; +0.24%)</title><rect x="1182.4" y="357" width="2.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1185.35" y="367.5" ></text>
</g>
<g >
<title>pagecache_get_page (43 samples, 0.08%; +0.00%)</title><rect x="13.5" y="133" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="16.46" y="143.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (19 samples, 0.04%; 0.00%)</title><rect x="926.7" y="325" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="929.73" y="335.5" ></text>
</g>
<g >
<title>sync_regs (14 samples, 0.03%; -0.00%)</title><rect x="1092.5" y="517" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1095.51" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (229 samples, 0.45%; 0.00%)</title><rect x="809.7" y="373" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.71" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_enable (65 samples, 0.13%; 0.00%)</title><rect x="10.4" y="197" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.44" y="207.5" ></text>
</g>
<g >
<title>get_typical_interval (15 samples, 0.03%; +0.03%)</title><rect x="152.9" y="421" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="155.92" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (390 samples, 0.77%; +0.04%)</title><rect x="792.3" y="325" width="9.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="795.30" y="335.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (17 samples, 0.03%; 0.00%)</title><rect x="985.1" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="988.07" y="335.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (281 samples, 0.55%; -0.20%)</title><rect x="601.7" y="309" width="6.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="604.73" y="319.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (15 samples, 0.03%; 0.00%)</title><rect x="862.2" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.16" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (21 samples, 0.04%; +0.01%)</title><rect x="189.5" y="405" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="192.47" y="415.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (9 samples, 0.02%; +0.00%)</title><rect x="1186.1" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1189.12" y="351.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,075 samples, 2.12%; 0.00%)</title><rect x="127.2" y="453" width="25.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.23" y="463.5" >c..</text>
</g>
<g >
<title>ValidateChunkAMD64 (15 samples, 0.03%; -0.03%)</title><rect x="299.8" y="421" width="0.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="302.82" y="431.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (666 samples, 1.31%; 0.00%)</title><rect x="785.9" y="389" width="15.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="788.88" y="399.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (36 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="469" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="479.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (12 samples, 0.02%; 0.00%)</title><rect x="1007.1" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1010.09" y="383.5" ></text>
</g>
<g >
<title>NaClSysWrite (9 samples, 0.02%; -0.00%)</title><rect x="716.1" y="501" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="719.13" y="511.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (16 samples, 0.03%; +0.01%)</title><rect x="153.8" y="405" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="156.76" y="415.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (43 samples, 0.08%; 0.00%)</title><rect x="13.5" y="149" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.46" y="159.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.01%; 0.00%)</title><rect x="1181.0" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1184.03" y="431.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (6 samples, 0.01%; 0.00%)</title><rect x="128.4" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.39" y="319.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (527 samples, 1.04%; 0.00%)</title><rect x="994.8" y="405" width="12.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="997.83" y="415.5" ></text>
</g>
<g >
<title>swapper (2,007 samples, 3.95%; +2.22%)</title><rect x="1143.3" y="549" width="46.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1146.34" y="559.5" >swap..</text>
</g>
<g >
<title>_nohz_idle_balance (13 samples, 0.03%; +0.02%)</title><rect x="1188.1" y="325" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1191.14" y="335.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (575 samples, 1.13%; +0.00%)</title><rect x="830.0" y="357" width="13.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="832.96" y="367.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (161 samples, 0.32%; 0.00%)</title><rect x="946.1" y="293" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="949.15" y="303.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1,228 samples, 2.42%; 0.00%)</title><rect x="162.9" y="517" width="28.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="165.92" y="527.5" >x8..</text>
</g>
<g >
<title>HandleStackContext (740 samples, 1.46%; -0.08%)</title><rect x="244.7" y="501" width="17.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="247.72" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (7 samples, 0.01%; 0.00%)</title><rect x="180.3" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.27" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (56 samples, 0.11%; +0.01%)</title><rect x="153.6" y="421" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="156.62" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (13 samples, 0.03%; 0.00%)</title><rect x="229.1" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="232.14" y="511.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (12 samples, 0.02%; 0.00%)</title><rect x="154.6" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.60" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (126 samples, 0.25%; +0.04%)</title><rect x="227.0" y="517" width="2.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="229.98" y="527.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (14 samples, 0.03%; +0.01%)</title><rect x="195.8" y="517" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="198.80" y="527.5" ></text>
</g>
<g >
<title>unmap_page_range (35 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="309" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="319.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (14 samples, 0.03%; 0.00%)</title><rect x="205.0" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="207.98" y="511.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (6,257 samples, 12.33%; -0.96%)</title><rect x="563.8" y="325" width="145.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="566.83" y="335.5" >ringbuf::consumer:..</text>
</g>
<g >
<title>add_to_page_cache_lru (26 samples, 0.05%; -0.00%)</title><rect x="13.5" y="117" width="0.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="16.51" y="127.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (2,803 samples, 5.52%; 0.00%)</title><rect x="126.3" y="533" width="65.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.30" y="543.5" >seconda..</text>
</g>
<g >
<title>psi_task_change (6 samples, 0.01%; +0.00%)</title><rect x="127.9" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="130.86" y="239.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%; 0.00%)</title><rect x="1140.6" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.64" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (113 samples, 0.22%; +0.07%)</title><rect x="200.3" y="517" width="2.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="203.28" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (80 samples, 0.16%; 0.00%)</title><rect x="10.1" y="389" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.09" y="399.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (25 samples, 0.05%; +0.00%)</title><rect x="1179.1" y="469" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1182.12" y="479.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (10 samples, 0.02%; -0.00%)</title><rect x="13.2" y="133" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="16.21" y="143.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (213 samples, 0.42%; 0.00%)</title><rect x="804.5" y="357" width="5.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="807.55" y="367.5" ></text>
</g>
<g >
<title>llist_add_batch (11 samples, 0.02%; +0.02%)</title><rect x="1189.0" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1191.95" y="303.5" ></text>
</g>
<g >
<title>do_writepages (9 samples, 0.02%; +0.00%)</title><rect x="126.1" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="129.09" y="367.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.04%; 0.00%)</title><rect x="228.7" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="231.72" y="495.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_init (9 samples, 0.02%; 0.00%)</title><rect x="809.5" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.50" y="351.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.11%; 0.00%)</title><rect x="950.7" y="293" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="953.70" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (12 samples, 0.02%; -0.00%)</title><rect x="926.7" y="293" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="929.73" y="303.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (48 samples, 0.09%; +0.02%)</title><rect x="997.9" y="277" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1000.88" y="287.5" ></text>
</g>
<g >
<title>pool-whoopsie (7,560 samples, 14.90%; +9.23%)</title><rect x="15.7" y="549" width="175.8" height="15.0" fill="rgb(255,74,74)" rx="2" ry="2" />
<text  x="18.70" y="559.5" >pool-whoopsie</text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (19 samples, 0.04%; 0.00%)</title><rect x="926.7" y="341" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="929.73" y="351.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (15 samples, 0.03%; 0.00%)</title><rect x="221.6" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="224.61" y="479.5" ></text>
</g>
<g >
<title>asm_common_interrupt (6 samples, 0.01%; 0.00%)</title><rect x="127.5" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.53" y="431.5" ></text>
</g>
<g >
<title>ext4_da_write_end (43 samples, 0.08%; -0.01%)</title><rect x="14.5" y="165" width="1.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="17.46" y="175.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (143 samples, 0.28%; -0.06%)</title><rect x="946.6" y="229" width="3.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="949.56" y="239.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (356 samples, 0.70%; 0.00%)</title><rect x="1181.7" y="517" width="8.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1184.72" y="527.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (29 samples, 0.06%; 0.00%)</title><rect x="954.6" y="213" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="957.56" y="223.5" ></text>
</g>
<g >
<title>_perf_event_enable (74 samples, 0.15%; +0.00%)</title><rect x="10.2" y="325" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="13.23" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (100 samples, 0.20%; 0.00%)</title><rect x="1090.2" y="517" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1093.16" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (5 samples, 0.01%; 0.00%)</title><rect x="300.2" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.22" y="447.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (19 samples, 0.04%; +0.02%)</title><rect x="197.1" y="517" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="200.10" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (276 samples, 0.54%; -0.04%)</title><rect x="785.9" y="325" width="6.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="788.88" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (256 samples, 0.50%; 0.00%)</title><rect x="1017.2" y="357" width="5.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1020.15" y="367.5" ></text>
</g>
<g >
<title>__perf_event_enable (66 samples, 0.13%; +0.00%)</title><rect x="10.4" y="229" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="13.42" y="239.5" ></text>
</g>
<g >
<title>enqueue_task_fair (5 samples, 0.01%; 0.00%)</title><rect x="127.7" y="229" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.72" y="239.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1,252 samples, 2.47%; 0.00%)</title><rect x="956.0" y="373" width="29.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="958.96" y="383.5" >st..</text>
</g>
<g >
<title>rustposix::safeposix::cage::PIPE_TABLE (15 samples, 0.03%; 0.00%)</title><rect x="1143.0" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.99" y="543.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (17 samples, 0.03%; +0.02%)</title><rect x="985.5" y="293" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="988.46" y="303.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (20 samples, 0.04%; +0.01%)</title><rect x="949.4" y="197" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="952.42" y="207.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.03%; 0.00%)</title><rect x="1140.6" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.64" y="479.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (13 samples, 0.03%; -0.01%)</title><rect x="14.1" y="101" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="17.14" y="111.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (527 samples, 1.04%; 0.00%)</title><rect x="994.8" y="389" width="12.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="997.83" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (15 samples, 0.03%; -0.01%)</title><rect x="952.7" y="245" width="0.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="955.75" y="255.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (202 samples, 0.40%; +0.01%)</title><rect x="1182.0" y="405" width="4.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1185.00" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (5 samples, 0.01%; -0.04%)</title><rect x="904.8" y="293" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="907.76" y="303.5" ></text>
</g>
<g >
<title>__schedule (83 samples, 0.16%; +0.01%)</title><rect x="1187.6" y="389" width="1.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1190.56" y="399.5" ></text>
</g>
<g >
<title>dispatcher (17,883 samples, 35.24%; 0.00%)</title><rect x="300.3" y="421" width="415.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.33" y="431.5" >dispatcher</text>
</g>
<g >
<title>do_syscall_64 (142 samples, 0.28%; 0.00%)</title><rect x="12.3" y="357" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.35" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (33 samples, 0.07%; 0.00%)</title><rect x="331.7" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="334.67" y="367.5" ></text>
</g>
<g >
<title>dispatcher (62 samples, 0.12%; -0.02%)</title><rect x="203.9" y="517" width="1.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="206.86" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (14 samples, 0.03%; 0.00%)</title><rect x="1178.7" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1181.72" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (18 samples, 0.04%; 0.00%)</title><rect x="843.7" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.66" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (934 samples, 1.84%; 0.00%)</title><rect x="608.3" y="309" width="21.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="611.27" y="319.5" >c..</text>
</g>
<g >
<title>__cmd_record (241 samples, 0.47%; -0.00%)</title><rect x="10.1" y="501" width="5.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="13.07" y="511.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (13 samples, 0.03%; 0.00%)</title><rect x="1091.7" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1094.67" y="383.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (10 samples, 0.02%; -0.01%)</title><rect x="233.1" y="517" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="236.11" y="527.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.03%; 0.00%)</title><rect x="1140.9" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.94" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (276 samples, 0.54%; 0.00%)</title><rect x="785.9" y="341" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="788.88" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (17 samples, 0.03%; +0.01%)</title><rect x="985.1" y="293" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="988.07" y="303.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (38 samples, 0.07%; -0.01%)</title><rect x="191.8" y="517" width="0.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="194.75" y="527.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (32 samples, 0.06%; +0.06%)</title><rect x="1133.7" y="517" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1136.69" y="527.5" ></text>
</g>
<g >
<title>kick_ilb (32 samples, 0.06%; +0.02%)</title><rect x="1188.5" y="325" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1191.47" y="335.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (6,548 samples, 12.90%; 0.00%)</title><rect x="563.8" y="341" width="152.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="566.83" y="351.5" >ringbuf::consumer::..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (675 samples, 1.33%; +0.03%)</title><rect x="844.1" y="325" width="15.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="847.07" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (16 samples, 0.03%; +0.01%)</title><rect x="1005.3" y="277" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1008.34" y="287.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (32 samples, 0.06%; -0.01%)</title><rect x="1141.4" y="533" width="0.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1144.41" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.03%; +0.00%)</title><rect x="1140.6" y="453" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1143.64" y="463.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (27 samples, 0.05%; +0.00%)</title><rect x="179.4" y="325" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="182.43" y="335.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (402 samples, 0.79%; -0.03%)</title><rect x="1023.5" y="469" width="9.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1026.50" y="479.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (14,395 samples, 28.36%; +0.02%)</title><rect x="716.3" y="501" width="334.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="719.34" y="511.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>_perf_ioctl (80 samples, 0.16%; -0.01%)</title><rect x="10.1" y="357" width="1.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="13.09" y="367.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (11 samples, 0.02%; -0.02%)</title><rect x="298.2" y="501" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="301.24" y="511.5" ></text>
</g>
<g >
<title>generic_exec_single (21 samples, 0.04%; +0.00%)</title><rect x="160.0" y="357" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="163.01" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (201 samples, 0.40%; 0.00%)</title><rect x="995.5" y="325" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="998.51" y="335.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (20 samples, 0.04%; +0.04%)</title><rect x="160.0" y="341" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="163.04" y="351.5" ></text>
</g>
<g >
<title>psi_group_change (5 samples, 0.01%; +0.01%)</title><rect x="127.9" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="130.88" y="223.5" ></text>
</g>
<g >
<title>cpumask_next_and (6 samples, 0.01%; 0.00%)</title><rect x="187.0" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.96" y="319.5" ></text>
</g>
<g >
<title>std::thread::panicking (9 samples, 0.02%; 0.00%)</title><rect x="862.5" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.51" y="319.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (5 samples, 0.01%; 0.00%)</title><rect x="229.5" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="232.51" y="511.5" ></text>
</g>
<g >
<title>get_signal (36 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="437" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (12 samples, 0.02%; +0.01%)</title><rect x="229.6" y="469" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="232.63" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (140 samples, 0.28%; +0.06%)</title><rect x="939.6" y="245" width="3.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="942.61" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (231 samples, 0.46%; 0.00%)</title><rect x="780.5" y="405" width="5.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="783.51" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (24 samples, 0.05%; 0.00%)</title><rect x="1112.6" y="517" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.64" y="527.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (96 samples, 0.19%; -0.04%)</title><rect x="560.4" y="325" width="2.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="563.42" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (642 samples, 1.26%; 0.00%)</title><rect x="815.0" y="373" width="15.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="818.03" y="383.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (45 samples, 0.09%; 0.00%)</title><rect x="956.0" y="357" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="958.96" y="367.5" ></text>
</g>
<g >
<title>generic_exec_single (26 samples, 0.05%; +0.00%)</title><rect x="187.2" y="293" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="190.17" y="303.5" ></text>
</g>
<g >
<title>nohz_csd_func (30 samples, 0.06%; +0.06%)</title><rect x="156.3" y="453" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="159.34" y="463.5" ></text>
</g>
<g >
<title>kick_ilb (81 samples, 0.16%; +0.05%)</title><rect x="159.4" y="389" width="1.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="162.43" y="399.5" ></text>
</g>
<g >
<title>handle_pte_fault (85 samples, 0.17%; +0.00%)</title><rect x="1090.4" y="437" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1093.42" y="447.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (7 samples, 0.01%; +0.00%)</title><rect x="1142.8" y="181" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1145.78" y="191.5" ></text>
</g>
<g >
<title>ret_from_fork (21 samples, 0.04%; 0.00%)</title><rect x="125.8" y="533" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.81" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (143 samples, 0.28%; 0.00%)</title><rect x="12.3" y="373" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.33" y="383.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (15 samples, 0.03%; -0.02%)</title><rect x="221.6" y="453" width="0.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="224.61" y="463.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.01%; -0.01%)</title><rect x="601.6" y="229" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="604.59" y="239.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.01%; -0.00%)</title><rect x="938.7" y="245" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="941.73" y="255.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (8 samples, 0.02%; 0.00%)</title><rect x="1091.3" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1094.35" y="335.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (234 samples, 0.46%; -0.21%)</title><rect x="901.3" y="325" width="5.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="904.32" y="335.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (666 samples, 1.31%; 0.00%)</title><rect x="785.9" y="373" width="15.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="788.88" y="383.5" ></text>
</g>
<g >
<title>schedule_idle (199 samples, 0.39%; +0.00%)</title><rect x="157.2" y="469" width="4.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="160.18" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (44 samples, 0.09%; -0.01%)</title><rect x="996.1" y="293" width="1.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="999.09" y="303.5" ></text>
</g>
<g >
<title>wb_check_old_data_flush (9 samples, 0.02%; 0.00%)</title><rect x="126.1" y="437" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.09" y="447.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (675 samples, 1.33%; -0.02%)</title><rect x="844.1" y="341" width="15.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="847.07" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (24 samples, 0.05%; 0.00%)</title><rect x="127.7" y="357" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.67" y="367.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (14 samples, 0.03%; -0.01%)</title><rect x="193.5" y="517" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="196.50" y="527.5" ></text>
</g>
<g >
<title>perf_ioctl (80 samples, 0.16%; -0.00%)</title><rect x="10.1" y="373" width="1.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="13.09" y="383.5" ></text>
</g>
<g >
<title>[perf-377219.map] (73 samples, 0.14%; +0.14%)</title><rect x="229.9" y="533" width="1.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="232.91" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (575 samples, 1.13%; 0.00%)</title><rect x="830.0" y="373" width="13.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="832.96" y="383.5" ></text>
</g>
<g >
<title>NaClSysWrite (13,499 samples, 26.60%; +0.03%)</title><rect x="736.7" y="485" width="313.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="739.75" y="495.5" >NaClSysWrite</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (353 samples, 0.70%; 0.00%)</title><rect x="936.3" y="309" width="8.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="939.29" y="319.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (13 samples, 0.03%; -0.01%)</title><rect x="12.8" y="85" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="15.84" y="95.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (35 samples, 0.07%; -0.00%)</title><rect x="12.7" y="149" width="0.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="15.65" y="159.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (16 samples, 0.03%; +0.02%)</title><rect x="1006.4" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1009.37" y="255.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (12 samples, 0.02%; -0.00%)</title><rect x="284.7" y="501" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="287.68" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (677 samples, 1.33%; 0.00%)</title><rect x="1007.4" y="389" width="15.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1010.37" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (19 samples, 0.04%; 0.00%)</title><rect x="904.3" y="309" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="907.32" y="319.5" ></text>
</g>
<g >
<title>dispatcher (10,874 samples, 21.43%; -0.05%)</title><rect x="770.3" y="421" width="252.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="773.28" y="431.5" >dispatcher</text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (234 samples, 0.46%; +0.01%)</title><rect x="830.3" y="293" width="5.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="833.33" y="303.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (76 samples, 0.15%; -0.00%)</title><rect x="10.2" y="341" width="1.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="13.19" y="351.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (81 samples, 0.16%; -0.01%)</title><rect x="12.6" y="165" width="1.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="15.58" y="175.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11 samples, 0.02%; 0.00%)</title><rect x="128.3" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.28" y="399.5" ></text>
</g>
<g >
<title>[anon] (1,641 samples, 3.23%; 0.00%)</title><rect x="191.8" y="533" width="38.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="194.75" y="543.5" >[an..</text>
</g>
<g >
<title>NaClDescIoDescRead (17,883 samples, 35.24%; 0.00%)</title><rect x="300.3" y="469" width="415.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.33" y="479.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (7 samples, 0.01%; +0.01%)</title><rect x="151.8" y="405" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="154.76" y="415.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (11 samples, 0.02%; 0.00%)</title><rect x="128.3" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.28" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (358 samples, 0.71%; -0.01%)</title><rect x="986.5" y="325" width="8.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="989.51" y="335.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.11%; +0.01%)</title><rect x="950.7" y="277" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="953.70" y="287.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (31 samples, 0.06%; -0.02%)</title><rect x="298.9" y="501" width="0.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="301.91" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 0.16%; 0.00%)</title><rect x="10.1" y="405" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.09" y="415.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (839 samples, 1.65%; -0.05%)</title><rect x="907.2" y="357" width="19.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="910.22" y="367.5" ></text>
</g>
<g >
<title>vfs_write (141 samples, 0.28%; -0.00%)</title><rect x="12.4" y="309" width="3.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="15.37" y="319.5" ></text>
</g>
<g >
<title>cpuidle_enter (322 samples, 0.63%; +0.00%)</title><rect x="1170.8" y="453" width="7.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1173.84" y="463.5" ></text>
</g>
<g >
<title>read_tsc (14 samples, 0.03%; +0.03%)</title><rect x="190.3" y="389" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="193.33" y="399.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (23 samples, 0.05%; 0.00%)</title><rect x="232.6" y="517" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="235.58" y="527.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (20 samples, 0.04%; 0.00%)</title><rect x="1180.5" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1183.47" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,069 samples, 2.11%; +0.02%)</title><rect x="127.3" y="437" width="24.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="130.28" y="447.5" >c..</text>
</g>
<g >
<title>pick_next_task_fair (52 samples, 0.10%; 0.00%)</title><rect x="1179.7" y="437" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1182.75" y="447.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (27 samples, 0.05%; -0.26%)</title><rect x="331.0" y="293" width="0.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="334.05" y="303.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (236 samples, 0.47%; 0.00%)</title><rect x="215.4" y="469" width="5.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.37" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (13 samples, 0.03%; +0.01%)</title><rect x="1096.6" y="517" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1099.65" y="527.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (37 samples, 0.07%; 0.00%)</title><rect x="127.7" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.67" y="415.5" ></text>
</g>
<g >
<title>ksys_write (141 samples, 0.28%; 0.00%)</title><rect x="12.4" y="325" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.37" y="335.5" ></text>
</g>
<g >
<title>rcu_idle_exit (6 samples, 0.01%; +0.00%)</title><rect x="1178.0" y="421" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1181.05" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (5 samples, 0.01%; -0.02%)</title><rect x="229.5" y="469" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="232.51" y="479.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (36 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="453" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="463.5" ></text>
</g>
<g >
<title>clear_page_erms (23 samples, 0.05%; +0.01%)</title><rect x="1090.7" y="357" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1093.67" y="367.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (385 samples, 0.76%; -0.01%)</title><rect x="985.9" y="341" width="8.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="988.88" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (353 samples, 0.70%; +0.01%)</title><rect x="936.3" y="277" width="8.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="939.29" y="287.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (9 samples, 0.02%; 0.00%)</title><rect x="1032.6" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1035.64" y="463.5" ></text>
</g>
<g >
<title>wake_up_process (14 samples, 0.03%; 0.00%)</title><rect x="127.7" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.70" y="303.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (12 samples, 0.02%; +0.00%)</title><rect x="1091.3" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1094.25" y="351.5" ></text>
</g>
<g >
<title>create_empty_buffers (19 samples, 0.04%; -0.01%)</title><rect x="12.8" y="133" width="0.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="15.77" y="143.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (7 samples, 0.01%; +0.01%)</title><rect x="176.4" y="341" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="179.36" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (19 samples, 0.04%; -0.02%)</title><rect x="904.3" y="293" width="0.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="907.32" y="303.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (6 samples, 0.01%; +0.01%)</title><rect x="187.0" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="189.96" y="303.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (13 samples, 0.03%; 0.00%)</title><rect x="229.1" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="232.14" y="479.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (19 samples, 0.04%; 0.00%)</title><rect x="1142.5" y="261" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.52" y="271.5" ></text>
</g>
<g >
<title>exit_mmap (35 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="357" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="367.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (18 samples, 0.04%; 0.00%)</title><rect x="228.7" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="231.72" y="479.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (16 samples, 0.03%; 0.00%)</title><rect x="1006.4" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1009.37" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (11 samples, 0.02%; +0.00%)</title><rect x="1186.3" y="341" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1189.35" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (5 samples, 0.01%; 0.00%)</title><rect x="300.2" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.22" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (10 samples, 0.02%; +0.01%)</title><rect x="1178.8" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1181.79" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="533" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="543.5" ></text>
</g>
<g >
<title>__schedule (62 samples, 0.12%; +0.00%)</title><rect x="1179.7" y="453" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1182.70" y="463.5" ></text>
</g>
<g >
<title>std::thread::panicking (12 samples, 0.02%; 0.00%)</title><rect x="1007.1" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1010.09" y="367.5" ></text>
</g>
<g >
<title>pick_next_task_fair (68 samples, 0.13%; 0.00%)</title><rect x="1187.7" y="373" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.65" y="383.5" ></text>
</g>
<g >
<title>sched_clock_cpu (13 samples, 0.03%; +0.00%)</title><rect x="175.5" y="341" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="178.50" y="351.5" ></text>
</g>
<g >
<title>generic_exec_single (67 samples, 0.13%; 0.00%)</title><rect x="10.4" y="277" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.40" y="287.5" ></text>
</g>
<g >
<title>update_rq_clock (5 samples, 0.01%; 0.00%)</title><rect x="1181.0" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1184.03" y="447.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (458 samples, 0.90%; -0.01%)</title><rect x="285.0" y="501" width="10.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="287.96" y="511.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (549 samples, 1.08%; +0.02%)</title><rect x="164.2" y="373" width="12.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="167.18" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2,707 samples, 5.33%; +1.10%)</title><rect x="640.0" y="277" width="62.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="642.98" y="287.5" >__memm..</text>
</g>
<g >
<title>flush_smp_call_function_from_idle (6 samples, 0.01%; +0.01%)</title><rect x="1189.9" y="421" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1192.86" y="431.5" ></text>
</g>
<g >
<title>newidle_balance (67 samples, 0.13%; +0.01%)</title><rect x="1187.7" y="357" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1190.67" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 0.16%; 0.00%)</title><rect x="10.1" y="421" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.09" y="431.5" ></text>
</g>
<g >
<title>dispatcher (63 samples, 0.12%; -0.02%)</title><rect x="1111.2" y="517" width="1.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1114.18" y="527.5" ></text>
</g>
<g >
<title>sched_clock_cpu (6 samples, 0.01%; +0.00%)</title><rect x="152.0" y="421" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="154.99" y="431.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (255 samples, 0.50%; -0.00%)</title><rect x="901.3" y="357" width="5.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="904.30" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (17 samples, 0.03%; 0.00%)</title><rect x="985.1" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="988.07" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (495 samples, 0.98%; +0.10%)</title><rect x="973.6" y="309" width="11.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="976.56" y="319.5" ></text>
</g>
<g >
<title>do_group_exit (36 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="421" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6 samples, 0.01%; +0.01%)</title><rect x="179.3" y="325" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="182.29" y="335.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (12 samples, 0.02%; +0.01%)</title><rect x="1044.4" y="469" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1047.38" y="479.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (31 samples, 0.06%; -0.03%)</title><rect x="945.4" y="261" width="0.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="948.43" y="271.5" ></text>
</g>
<g >
<title>record__pushfn (145 samples, 0.29%; 0.00%)</title><rect x="12.3" y="437" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.28" y="447.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (20 samples, 0.04%; +0.01%)</title><rect x="154.4" y="389" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="157.41" y="399.5" ></text>
</g>
<g >
<title>NaClMutexLock (400 samples, 0.79%; +0.01%)</title><rect x="286.3" y="469" width="9.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="289.31" y="479.5" ></text>
</g>
<g >
<title>wb_workfn (9 samples, 0.02%; 0.00%)</title><rect x="126.1" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.09" y="479.5" ></text>
</g>
<g >
<title>perf_mmap__push (146 samples, 0.29%; -0.00%)</title><rect x="12.3" y="453" width="3.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="15.26" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (256 samples, 0.50%; -0.11%)</title><rect x="1017.2" y="341" width="5.9" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1020.15" y="351.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (7 samples, 0.01%; +0.01%)</title><rect x="1188.8" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1191.79" y="287.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (98 samples, 0.19%; +0.00%)</title><rect x="732.2" y="469" width="2.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="735.17" y="479.5" ></text>
</g>
<g >
<title>cpuidle_select (134 samples, 0.26%; 0.00%)</title><rect x="177.1" y="389" width="3.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="180.13" y="399.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (9,901 samples, 19.51%; +0.62%)</title><rect x="332.4" y="357" width="230.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="335.44" y="367.5" >ringbuf::consumer::Consumer&lt;T&gt;..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (70 samples, 0.14%; -0.00%)</title><rect x="942.9" y="245" width="1.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="945.87" y="255.5" ></text>
</g>
<g >
<title>__writeback_single_inode (9 samples, 0.02%; 0.00%)</title><rect x="126.1" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.09" y="383.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (6,599 samples, 13.00%; -0.20%)</title><rect x="562.6" y="357" width="153.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="565.65" y="367.5" >ringbuf::consumer::..</text>
</g>
<g >
<title>std::panicking::panicking (12 samples, 0.02%; 0.00%)</title><rect x="1007.1" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1010.09" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (29 samples, 0.06%; 0.00%)</title><rect x="954.6" y="245" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="957.56" y="255.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (346 samples, 0.68%; 0.00%)</title><rect x="927.2" y="325" width="8.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="930.17" y="335.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (19 samples, 0.04%; +0.02%)</title><rect x="204.3" y="437" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="207.26" y="447.5" ></text>
</g>
<g >
<title>do_sys_poll (8 samples, 0.02%; 0.00%)</title><rect x="12.0" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.00" y="415.5" ></text>
</g>
<g >
<title>dispatcher (12 samples, 0.02%; -0.01%)</title><rect x="994.8" y="373" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="997.83" y="383.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (648 samples, 1.28%; +1.28%)</title><rect x="128.6" y="421" width="15.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="131.60" y="431.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (33 samples, 0.07%; +0.05%)</title><rect x="937.6" y="245" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="940.57" y="255.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (6 samples, 0.01%; -0.07%)</title><rect x="15.5" y="149" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="18.46" y="159.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (24 samples, 0.05%; 0.00%)</title><rect x="299.6" y="501" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="302.63" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (20 samples, 0.04%; +0.04%)</title><rect x="1003.4" y="261" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1006.39" y="271.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (38 samples, 0.07%; +0.01%)</title><rect x="1000.2" y="341" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1003.18" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2,141 samples, 4.22%; +1.98%)</title><rect x="510.6" y="309" width="49.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="513.64" y="319.5" >core:..</text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (18 samples, 0.04%; +0.01%)</title><rect x="298.5" y="501" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="301.50" y="511.5" ></text>
</g>
<g >
<title>free_unref_page_list (9 samples, 0.02%; +0.00%)</title><rect x="1142.7" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1145.73" y="223.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (378 samples, 0.74%; +0.00%)</title><rect x="821.2" y="293" width="8.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="824.17" y="303.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (3,141 samples, 6.19%; 0.00%)</title><rect x="630.0" y="309" width="73.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="632.98" y="319.5" >ringbuf:..</text>
</g>
<g >
<title>wb_do_writeback (9 samples, 0.02%; 0.00%)</title><rect x="126.1" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.09" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (62 samples, 0.12%; 0.00%)</title><rect x="953.1" y="245" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="956.12" y="255.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (39 samples, 0.08%; -0.01%)</title><rect x="1097.0" y="517" width="1.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1100.04" y="527.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (76 samples, 0.15%; -0.01%)</title><rect x="904.9" y="309" width="1.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="907.88" y="319.5" ></text>
</g>
<g >
<title>ovl_write_iter (139 samples, 0.27%; -0.00%)</title><rect x="12.4" y="277" width="3.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="15.37" y="287.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (46 samples, 0.09%; +0.02%)</title><rect x="1002.3" y="261" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1005.27" y="271.5" ></text>
</g>
<g >
<title>alloc_buffer_head (16 samples, 0.03%; -0.00%)</title><rect x="12.8" y="101" width="0.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="15.84" y="111.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (14 samples, 0.03%; -0.01%)</title><rect x="736.2" y="485" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="739.17" y="495.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (13 samples, 0.03%; +0.03%)</title><rect x="1186.8" y="389" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1189.84" y="399.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (10 samples, 0.02%; +0.02%)</title><rect x="1180.0" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1182.98" y="399.5" ></text>
</g>
<g >
<title>read_tsc (11 samples, 0.02%; +0.02%)</title><rect x="162.2" y="453" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="165.25" y="463.5" ></text>
</g>
<g >
<title>HandleStackContext (12 samples, 0.02%; -0.00%)</title><rect x="232.3" y="517" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="235.30" y="527.5" ></text>
</g>
<g >
<title>idle_cpu (5 samples, 0.01%; +0.01%)</title><rect x="185.9" y="309" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="188.92" y="319.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (16 samples, 0.03%; 0.00%)</title><rect x="718.5" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="721.50" y="495.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.01%; 0.00%)</title><rect x="601.6" y="245" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="604.59" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (15 samples, 0.03%; 0.00%)</title><rect x="904.0" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="906.97" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (36 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="517" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="527.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (15 samples, 0.03%; 0.00%)</title><rect x="299.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="302.82" y="447.5" ></text>
</g>
<g >
<title>native_sched_clock (6 samples, 0.01%; +0.01%)</title><rect x="151.3" y="389" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="154.27" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (68 samples, 0.13%; +0.00%)</title><rect x="178.5" y="357" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="181.52" y="367.5" ></text>
</g>
<g >
<title>cpu_startup_entry (356 samples, 0.70%; 0.00%)</title><rect x="1181.7" y="437" width="8.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1184.72" y="447.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (415 samples, 0.82%; -0.02%)</title><rect x="722.5" y="437" width="9.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="725.52" y="447.5" ></text>
</g>
<g >
<title>llist_reverse_order (6 samples, 0.01%; +0.01%)</title><rect x="1187.1" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1190.14" y="399.5" ></text>
</g>
<g >
<title>try_to_wake_up (14 samples, 0.03%; 0.00%)</title><rect x="127.7" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.70" y="287.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (365 samples, 0.72%; 0.00%)</title><rect x="926.7" y="357" width="8.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="929.73" y="367.5" ></text>
</g>
<g >
<title>__evlist__enable (81 samples, 0.16%; 0.00%)</title><rect x="10.1" y="485" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.07" y="495.5" ></text>
</g>
<g >
<title>nohz_csd_func (24 samples, 0.05%; +0.05%)</title><rect x="182.3" y="389" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="185.26" y="399.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (143 samples, 0.28%; 0.00%)</title><rect x="1001.1" y="341" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1004.06" y="351.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (37 samples, 0.07%; +0.07%)</title><rect x="180.7" y="389" width="0.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="183.71" y="399.5" ></text>
</g>
<g >
<title>NaClXMutexLock (13 samples, 0.03%; -0.01%)</title><rect x="1051.0" y="501" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1054.03" y="511.5" ></text>
</g>
<g >
<title>common_interrupt (6 samples, 0.01%; 0.00%)</title><rect x="127.5" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.53" y="415.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::is_initialized (9 samples, 0.02%; 0.00%)</title><rect x="809.5" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.50" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (18 samples, 0.04%; 0.00%)</title><rect x="1188.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.79" y="319.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (10 samples, 0.02%; -0.02%)</title><rect x="15.0" y="69" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="18.00" y="79.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (13 samples, 0.03%; 0.00%)</title><rect x="229.1" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="232.14" y="463.5" ></text>
</g>
<g >
<title>do_idle (1,557 samples, 3.07%; +0.03%)</title><rect x="126.4" y="485" width="36.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="129.39" y="495.5" >do_..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (324 samples, 0.64%; +0.05%)</title><rect x="287.9" y="453" width="7.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="290.89" y="463.5" ></text>
</g>
<g >
<title>alloc_pages_current (14 samples, 0.03%; -0.01%)</title><rect x="14.1" y="117" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="17.12" y="127.5" ></text>
</g>
<g >
<title>std::thread::panicking (18 samples, 0.04%; 0.00%)</title><rect x="843.7" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.66" y="335.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (63 samples, 0.12%; +0.03%)</title><rect x="1187.8" y="341" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1190.77" y="351.5" ></text>
</g>
<g >
<title>generic_exec_single (10 samples, 0.02%; +0.00%)</title><rect x="1180.5" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1183.47" y="367.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (30 samples, 0.06%; 0.00%)</title><rect x="956.3" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="959.31" y="303.5" ></text>
</g>
<g >
<title>llist_add_batch (35 samples, 0.07%; +0.07%)</title><rect x="160.5" y="357" width="0.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="163.50" y="367.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (149 samples, 0.29%; -0.01%)</title><rect x="12.2" y="469" width="3.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="15.21" y="479.5" ></text>
</g>
<g >
<title>__lock_text_start (10 samples, 0.02%; +0.02%)</title><rect x="179.6" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="182.57" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (264 samples, 0.52%; -0.03%)</title><rect x="815.0" y="293" width="6.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="818.03" y="303.5" ></text>
</g>
<g >
<title>menu_update (13 samples, 0.03%; +0.03%)</title><rect x="153.3" y="421" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="156.27" y="431.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (10 samples, 0.02%; -0.01%)</title><rect x="734.4" y="469" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="737.45" y="479.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (386 samples, 0.76%; +0.00%)</title><rect x="985.9" y="357" width="8.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="988.86" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (59 samples, 0.12%; 0.00%)</title><rect x="1005.7" y="309" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1008.71" y="319.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (34 samples, 0.07%; 0.00%)</title><rect x="985.1" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="988.07" y="351.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (25 samples, 0.05%; +0.05%)</title><rect x="1002.5" y="245" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1005.46" y="255.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (35 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="293" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (90 samples, 0.18%; -0.01%)</title><rect x="1090.3" y="453" width="2.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1093.30" y="463.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.02%; -0.01%)</title><rect x="949.2" y="197" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="952.24" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (118 samples, 0.23%; 0.00%)</title><rect x="952.5" y="293" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="955.49" y="303.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (9 samples, 0.02%; 0.00%)</title><rect x="862.5" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.51" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (15 samples, 0.03%; -0.00%)</title><rect x="956.0" y="309" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="958.96" y="319.5" ></text>
</g>
<g >
<title>vfs_read (5 samples, 0.01%; 0.00%)</title><rect x="125.4" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.42" y="479.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (336 samples, 0.66%; +0.03%)</title><rect x="1033.9" y="453" width="7.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1036.87" y="463.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (5 samples, 0.01%; 0.00%)</title><rect x="15.3" y="69" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.28" y="79.5" ></text>
</g>
<g >
<title>unmap_single_vma (35 samples, 0.07%; 0.00%)</title><rect x="1142.1" y="325" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.15" y="335.5" ></text>
</g>
<g >
<title>cpuidle_select (48 samples, 0.09%; 0.00%)</title><rect x="1185.5" y="389" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1188.51" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (332 samples, 0.65%; +0.14%)</title><rect x="919.0" y="293" width="7.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="922.01" y="303.5" ></text>
</g>
<g >
<title>menu_select (112 samples, 0.22%; +0.04%)</title><rect x="152.3" y="437" width="2.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="155.34" y="447.5" ></text>
</g>
<g >
<title>do_idle (347 samples, 0.68%; +0.02%)</title><rect x="1181.8" y="421" width="8.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1184.79" y="431.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (17 samples, 0.03%; +0.03%)</title><rect x="1112.8" y="485" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1115.81" y="495.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (235 samples, 0.46%; +0.00%)</title><rect x="1134.4" y="517" width="5.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1137.43" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (12 samples, 0.02%; +0.02%)</title><rect x="189.0" y="341" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="192.01" y="351.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (187 samples, 0.37%; +0.31%)</title><rect x="1171.0" y="421" width="4.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1174.03" y="431.5" ></text>
</g>
<g >
<title>core::cmp::min_by (10 samples, 0.02%; +0.01%)</title><rect x="862.2" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="865.16" y="335.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.03%; 0.00%)</title><rect x="1140.9" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.94" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (1,658 samples, 3.27%; -0.07%)</title><rect x="862.7" y="325" width="38.6" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="865.72" y="335.5" >std..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (325 samples, 0.64%; +0.01%)</title><rect x="724.3" y="421" width="7.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="727.29" y="431.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.07%; -0.01%)</title><rect x="1004.8" y="309" width="0.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1007.83" y="319.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.07%; 0.00%)</title><rect x="1004.8" y="325" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1007.83" y="335.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (27 samples, 0.05%; 0.00%)</title><rect x="331.0" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="334.05" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (13 samples, 0.03%; +0.00%)</title><rect x="862.7" y="293" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="865.72" y="303.5" ></text>
</g>
<g >
<title>__ioctl (80 samples, 0.16%; 0.00%)</title><rect x="10.1" y="437" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.09" y="447.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (12 samples, 0.02%; 0.00%)</title><rect x="1007.1" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1010.09" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (321 samples, 0.63%; +0.00%)</title><rect x="1170.9" y="437" width="7.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1173.86" y="447.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (7 samples, 0.01%; -0.00%)</title><rect x="1112.6" y="469" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1115.64" y="479.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (16 samples, 0.03%; -0.01%)</title><rect x="13.5" y="101" width="0.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="16.51" y="111.5" ></text>
</g>
<g >
<title>stop_this_handle (5 samples, 0.01%; -0.00%)</title><rect x="14.5" y="117" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="17.49" y="127.5" ></text>
</g>
<g >
<title>update_rq_clock (9 samples, 0.02%; +0.00%)</title><rect x="161.6" y="437" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="164.57" y="447.5" ></text>
</g>
</g>
</svg>
