<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="918.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="901" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="901" > </text>
<g id="frames">
<g >
<title>get_next_timer_interrupt (4 samples, 0.03%)</title><rect x="1018.1" y="693" width="0.3" height="15.0" fill="rgb(236,218,42)" rx="2" ry="2" />
<text  x="1021.07" y="703.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="81.2" y="821" width="0.2" height="15.0" fill="rgb(222,99,25)" rx="2" ry="2" />
<text  x="84.21" y="831.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="764.0" y="229" width="0.2" height="15.0" fill="rgb(247,101,10)" rx="2" ry="2" />
<text  x="767.01" y="239.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (222 samples, 1.57%)</title><rect x="697.9" y="309" width="18.5" height="15.0" fill="rgb(234,150,51)" rx="2" ry="2" />
<text  x="700.89" y="319.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (223 samples, 1.58%)</title><rect x="697.9" y="405" width="18.6" height="15.0" fill="rgb(220,96,21)" rx="2" ry="2" />
<text  x="700.89" y="415.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (17 samples, 0.12%)</title><rect x="599.9" y="181" width="1.4" height="15.0" fill="rgb(246,88,5)" rx="2" ry="2" />
<text  x="602.92" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.05%)</title><rect x="114.8" y="613" width="0.6" height="15.0" fill="rgb(250,129,13)" rx="2" ry="2" />
<text  x="117.81" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (36 samples, 0.25%)</title><rect x="766.3" y="181" width="3.0" height="15.0" fill="rgb(232,59,43)" rx="2" ry="2" />
<text  x="769.34" y="191.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (317 samples, 2.24%)</title><rect x="1054.3" y="581" width="26.4" height="15.0" fill="rgb(216,193,4)" rx="2" ry="2" />
<text  x="1057.26" y="591.5" >_..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (25 samples, 0.18%)</title><rect x="769.3" y="149" width="2.1" height="15.0" fill="rgb(213,96,18)" rx="2" ry="2" />
<text  x="772.35" y="159.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (14 samples, 0.10%)</title><rect x="765.0" y="293" width="1.2" height="15.0" fill="rgb(230,63,38)" rx="2" ry="2" />
<text  x="768.01" y="303.5" ></text>
</g>
<g >
<title>do_unlinkat (7 samples, 0.05%)</title><rect x="114.8" y="581" width="0.6" height="15.0" fill="rgb(227,45,7)" rx="2" ry="2" />
<text  x="117.81" y="591.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (3 samples, 0.02%)</title><rect x="858.5" y="165" width="0.2" height="15.0" fill="rgb(244,218,50)" rx="2" ry="2" />
<text  x="861.48" y="175.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.04%)</title><rect x="811.9" y="101" width="0.4" height="15.0" fill="rgb(237,187,6)" rx="2" ry="2" />
<text  x="814.87" y="111.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.01%)</title><rect x="688.3" y="341" width="0.2" height="15.0" fill="rgb(208,223,1)" rx="2" ry="2" />
<text  x="691.30" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DeviceInode&gt;::serialize (5 samples, 0.04%)</title><rect x="764.3" y="357" width="0.5" height="15.0" fill="rgb(233,102,52)" rx="2" ry="2" />
<text  x="767.34" y="367.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (7 samples, 0.05%)</title><rect x="1060.3" y="501" width="0.5" height="15.0" fill="rgb(246,219,32)" rx="2" ry="2" />
<text  x="1063.26" y="511.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (142 samples, 1.00%)</title><rect x="581.7" y="229" width="11.9" height="15.0" fill="rgb(222,158,34)" rx="2" ry="2" />
<text  x="584.74" y="239.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (85 samples, 0.60%)</title><rect x="1169.2" y="597" width="7.0" height="15.0" fill="rgb(245,60,48)" rx="2" ry="2" />
<text  x="1172.15" y="607.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.04%)</title><rect x="856.0" y="661" width="0.4" height="15.0" fill="rgb(237,63,43)" rx="2" ry="2" />
<text  x="858.98" y="671.5" ></text>
</g>
<g >
<title>dispatcher (2,298 samples, 16.24%)</title><rect x="493.4" y="725" width="191.6" height="15.0" fill="rgb(213,97,13)" rx="2" ry="2" />
<text  x="496.36" y="735.5" >dispatcher</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="832.2" y="165" width="0.3" height="15.0" fill="rgb(221,145,29)" rx="2" ry="2" />
<text  x="835.21" y="175.5" ></text>
</g>
<g >
<title>mpage_prepare_extent_to_map (2 samples, 0.01%)</title><rect x="979.0" y="645" width="0.1" height="15.0" fill="rgb(221,195,36)" rx="2" ry="2" />
<text  x="981.96" y="655.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (1,946 samples, 13.75%)</title><rect x="520.3" y="373" width="162.2" height="15.0" fill="rgb(214,178,19)" rx="2" ry="2" />
<text  x="523.29" y="383.5" >&lt;&amp;mut serde_json::se..</text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (157 samples, 1.11%)</title><rect x="697.9" y="261" width="13.1" height="15.0" fill="rgb(232,221,50)" rx="2" ry="2" />
<text  x="700.89" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.08%)</title><rect x="743.6" y="197" width="1.0" height="15.0" fill="rgb(234,199,45)" rx="2" ry="2" />
<text  x="746.58" y="207.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (4 samples, 0.03%)</title><rect x="500.2" y="293" width="0.3" height="15.0" fill="rgb(252,95,39)" rx="2" ry="2" />
<text  x="503.19" y="303.5" ></text>
</g>
<g >
<title>__udp4_lib_rcv (2 samples, 0.01%)</title><rect x="986.2" y="389" width="0.2" height="15.0" fill="rgb(207,137,20)" rx="2" ry="2" />
<text  x="989.22" y="399.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (27 samples, 0.19%)</title><rect x="589.2" y="149" width="2.3" height="15.0" fill="rgb(234,7,42)" rx="2" ry="2" />
<text  x="592.24" y="159.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (25 samples, 0.18%)</title><rect x="871.9" y="261" width="2.1" height="15.0" fill="rgb(234,216,42)" rx="2" ry="2" />
<text  x="874.90" y="271.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.02%)</title><rect x="840.8" y="229" width="0.3" height="15.0" fill="rgb(226,24,35)" rx="2" ry="2" />
<text  x="843.80" y="239.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (23 samples, 0.16%)</title><rect x="517.3" y="405" width="1.9" height="15.0" fill="rgb(244,84,11)" rx="2" ry="2" />
<text  x="520.29" y="415.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (46 samples, 0.33%)</title><rect x="482.4" y="789" width="3.8" height="15.0" fill="rgb(235,138,41)" rx="2" ry="2" />
<text  x="485.35" y="799.5" ></text>
</g>
<g >
<title>irq_exit_rcu (24 samples, 0.17%)</title><rect x="988.2" y="693" width="2.0" height="15.0" fill="rgb(243,16,0)" rx="2" ry="2" />
<text  x="991.22" y="703.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (214 samples, 1.51%)</title><rect x="814.0" y="181" width="17.9" height="15.0" fill="rgb(239,78,50)" rx="2" ry="2" />
<text  x="817.04" y="191.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (25 samples, 0.18%)</title><rect x="591.5" y="165" width="2.1" height="15.0" fill="rgb(236,19,49)" rx="2" ry="2" />
<text  x="594.50" y="175.5" ></text>
</g>
<g >
<title>udp_queue_rcv_skb (2 samples, 0.01%)</title><rect x="986.2" y="357" width="0.2" height="15.0" fill="rgb(225,31,51)" rx="2" ry="2" />
<text  x="989.22" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="542.4" y="229" width="0.2" height="15.0" fill="rgb(233,83,50)" rx="2" ry="2" />
<text  x="545.38" y="239.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (248 samples, 1.75%)</title><rect x="743.6" y="293" width="20.7" height="15.0" fill="rgb(222,59,2)" rx="2" ry="2" />
<text  x="746.58" y="303.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt_r (14 samples, 0.10%)</title><rect x="498.5" y="565" width="1.2" height="15.0" fill="rgb(221,62,35)" rx="2" ry="2" />
<text  x="501.53" y="575.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (33 samples, 0.23%)</title><rect x="560.1" y="245" width="2.8" height="15.0" fill="rgb(214,55,11)" rx="2" ry="2" />
<text  x="563.14" y="255.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (4 samples, 0.03%)</title><rect x="696.5" y="773" width="0.3" height="15.0" fill="rgb(246,39,11)" rx="2" ry="2" />
<text  x="699.47" y="783.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (300 samples, 2.12%)</title><rect x="764.3" y="453" width="25.1" height="15.0" fill="rgb(213,216,29)" rx="2" ry="2" />
<text  x="767.34" y="463.5" >s..</text>
</g>
<g >
<title>ext4_insert_delayed_block (2 samples, 0.01%)</title><rect x="496.0" y="309" width="0.2" height="15.0" fill="rgb(226,220,1)" rx="2" ry="2" />
<text  x="499.02" y="319.5" ></text>
</g>
<g >
<title>newidle_balance (31 samples, 0.22%)</title><rect x="66.0" y="661" width="2.6" height="15.0" fill="rgb(209,38,0)" rx="2" ry="2" />
<text  x="69.03" y="671.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.02%)</title><rect x="875.2" y="437" width="0.2" height="15.0" fill="rgb(225,55,31)" rx="2" ry="2" />
<text  x="878.16" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (65 samples, 0.46%)</title><rect x="689.2" y="405" width="5.4" height="15.0" fill="rgb(221,119,39)" rx="2" ry="2" />
<text  x="692.22" y="415.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.04%)</title><rect x="486.6" y="725" width="0.4" height="15.0" fill="rgb(242,27,15)" rx="2" ry="2" />
<text  x="489.60" y="735.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (15 samples, 0.11%)</title><rect x="548.7" y="277" width="1.3" height="15.0" fill="rgb(210,139,51)" rx="2" ry="2" />
<text  x="551.72" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (3 samples, 0.02%)</title><rect x="31.8" y="597" width="0.3" height="15.0" fill="rgb(213,20,16)" rx="2" ry="2" />
<text  x="34.85" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.01%)</title><rect x="683.6" y="277" width="0.2" height="15.0" fill="rgb(206,80,33)" rx="2" ry="2" />
<text  x="686.63" y="287.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (8 samples, 0.06%)</title><rect x="588.5" y="133" width="0.7" height="15.0" fill="rgb(229,101,50)" rx="2" ry="2" />
<text  x="591.49" y="143.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (23 samples, 0.16%)</title><rect x="525.4" y="293" width="1.9" height="15.0" fill="rgb(206,68,20)" rx="2" ry="2" />
<text  x="528.37" y="303.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (14 samples, 0.10%)</title><rect x="874.0" y="277" width="1.2" height="15.0" fill="rgb(226,199,33)" rx="2" ry="2" />
<text  x="876.99" y="287.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (213 samples, 1.51%)</title><rect x="837.9" y="357" width="17.7" height="15.0" fill="rgb(252,0,14)" rx="2" ry="2" />
<text  x="840.88" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.16%)</title><rect x="652.9" y="213" width="1.9" height="15.0" fill="rgb(246,35,36)" rx="2" ry="2" />
<text  x="655.86" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_write (2 samples, 0.01%)</title><rect x="951.9" y="805" width="0.2" height="15.0" fill="rgb(228,79,54)" rx="2" ry="2" />
<text  x="954.95" y="815.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (4 samples, 0.03%)</title><rect x="647.1" y="117" width="0.3" height="15.0" fill="rgb(213,195,25)" rx="2" ry="2" />
<text  x="650.11" y="127.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (8 samples, 0.06%)</title><rect x="857.2" y="213" width="0.7" height="15.0" fill="rgb(219,83,17)" rx="2" ry="2" />
<text  x="860.23" y="223.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (5 samples, 0.04%)</title><rect x="856.0" y="741" width="0.4" height="15.0" fill="rgb(245,100,46)" rx="2" ry="2" />
<text  x="858.98" y="751.5" ></text>
</g>
<g >
<title>set_next_entity (10 samples, 0.07%)</title><rect x="1178.7" y="661" width="0.8" height="15.0" fill="rgb(211,114,33)" rx="2" ry="2" />
<text  x="1181.66" y="671.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1,479 samples, 10.45%)</title><rect x="550.0" y="341" width="123.3" height="15.0" fill="rgb(248,99,11)" rx="2" ry="2" />
<text  x="552.97" y="351.5" >&lt;serde_json::se..</text>
</g>
<g >
<title>NaClMutexLock (1,414 samples, 9.99%)</title><rect x="220.1" y="757" width="117.9" height="15.0" fill="rgb(248,177,23)" rx="2" ry="2" />
<text  x="223.12" y="767.5" >NaClMutexLock</text>
</g>
<g >
<title>finish_swait (3 samples, 0.02%)</title><rect x="956.5" y="773" width="0.3" height="15.0" fill="rgb(217,141,51)" rx="2" ry="2" />
<text  x="959.53" y="783.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (17 samples, 0.12%)</title><rect x="115.4" y="693" width="1.4" height="15.0" fill="rgb(216,188,38)" rx="2" ry="2" />
<text  x="118.39" y="703.5" ></text>
</g>
<g >
<title>wb_check_old_data_flush (30 samples, 0.21%)</title><rect x="976.0" y="741" width="2.5" height="15.0" fill="rgb(241,46,33)" rx="2" ry="2" />
<text  x="978.96" y="751.5" ></text>
</g>
<g >
<title>__ext4_new_inode (2 samples, 0.01%)</title><rect x="499.4" y="277" width="0.2" height="15.0" fill="rgb(215,214,18)" rx="2" ry="2" />
<text  x="502.44" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.04%)</title><rect x="835.3" y="117" width="0.5" height="15.0" fill="rgb(210,215,3)" rx="2" ry="2" />
<text  x="838.30" y="127.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (333 samples, 2.35%)</title><rect x="810.1" y="325" width="27.8" height="15.0" fill="rgb(244,169,27)" rx="2" ry="2" />
<text  x="813.12" y="335.5" >c..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.04%)</title><rect x="697.4" y="309" width="0.5" height="15.0" fill="rgb(240,22,10)" rx="2" ry="2" />
<text  x="700.39" y="319.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (4 samples, 0.03%)</title><rect x="684.2" y="341" width="0.3" height="15.0" fill="rgb(209,86,11)" rx="2" ry="2" />
<text  x="687.21" y="351.5" ></text>
</g>
<g >
<title>schedule_timeout (23 samples, 0.16%)</title><rect x="28.0" y="773" width="1.9" height="15.0" fill="rgb(242,229,21)" rx="2" ry="2" />
<text  x="31.01" y="783.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (4 samples, 0.03%)</title><rect x="875.2" y="757" width="0.3" height="15.0" fill="rgb(213,148,42)" rx="2" ry="2" />
<text  x="878.16" y="767.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (2 samples, 0.01%)</title><rect x="493.9" y="309" width="0.2" height="15.0" fill="rgb(241,88,21)" rx="2" ry="2" />
<text  x="496.94" y="319.5" ></text>
</g>
<g >
<title>get_signal (3 samples, 0.02%)</title><rect x="888.9" y="741" width="0.3" height="15.0" fill="rgb(219,56,42)" rx="2" ry="2" />
<text  x="891.91" y="751.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (3 samples, 0.02%)</title><rect x="676.0" y="261" width="0.2" height="15.0" fill="rgb(207,176,42)" rx="2" ry="2" />
<text  x="678.96" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="837.2" y="165" width="0.4" height="15.0" fill="rgb(251,74,46)" rx="2" ry="2" />
<text  x="840.22" y="175.5" ></text>
</g>
<g >
<title>rebalance_domains (107 samples, 0.76%)</title><rect x="1057.6" y="549" width="8.9" height="15.0" fill="rgb(209,109,29)" rx="2" ry="2" />
<text  x="1060.59" y="559.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (6 samples, 0.04%)</title><rect x="697.4" y="421" width="0.5" height="15.0" fill="rgb(215,126,41)" rx="2" ry="2" />
<text  x="700.39" y="431.5" ></text>
</g>
<g >
<title>psi_flags_change (2 samples, 0.01%)</title><rect x="1078.0" y="421" width="0.2" height="15.0" fill="rgb(235,100,47)" rx="2" ry="2" />
<text  x="1081.02" y="431.5" ></text>
</g>
<g >
<title>local_touch_nmi (2 samples, 0.01%)</title><rect x="1163.5" y="709" width="0.2" height="15.0" fill="rgb(249,137,31)" rx="2" ry="2" />
<text  x="1166.49" y="719.5" ></text>
</g>
<g >
<title>dispatcher (563 samples, 3.98%)</title><rect x="809.5" y="821" width="46.9" height="15.0" fill="rgb(207,186,13)" rx="2" ry="2" />
<text  x="812.45" y="831.5" >disp..</text>
</g>
<g >
<title>serde_json::ser::to_string (221 samples, 1.56%)</title><rect x="856.7" y="741" width="18.5" height="15.0" fill="rgb(240,43,35)" rx="2" ry="2" />
<text  x="859.73" y="751.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.01%)</title><rect x="531.8" y="277" width="0.2" height="15.0" fill="rgb(213,38,0)" rx="2" ry="2" />
<text  x="534.79" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.09%)</title><rect x="103.3" y="821" width="1.1" height="15.0" fill="rgb(248,204,47)" rx="2" ry="2" />
<text  x="106.30" y="831.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (69 samples, 0.49%)</title><rect x="649.0" y="261" width="5.8" height="15.0" fill="rgb(222,190,41)" rx="2" ry="2" />
<text  x="652.03" y="271.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (161 samples, 1.14%)</title><rect x="568.3" y="213" width="13.4" height="15.0" fill="rgb(205,133,6)" rx="2" ry="2" />
<text  x="571.32" y="223.5" ></text>
</g>
<g >
<title>schedule_idle (229 samples, 1.62%)</title><rect x="1163.7" y="709" width="19.0" height="15.0" fill="rgb(241,172,36)" rx="2" ry="2" />
<text  x="1166.65" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.10%)</title><rect x="767.9" y="133" width="1.2" height="15.0" fill="rgb(211,29,40)" rx="2" ry="2" />
<text  x="770.93" y="143.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (300 samples, 2.12%)</title><rect x="764.3" y="613" width="25.1" height="15.0" fill="rgb(242,114,10)" rx="2" ry="2" />
<text  x="767.34" y="623.5" >s..</text>
</g>
<g >
<title>sel_ldr (9,830 samples, 69.46%)</title><rect x="70.2" y="853" width="819.6" height="15.0" fill="rgb(248,166,39)" rx="2" ry="2" />
<text  x="73.20" y="863.5" >sel_ldr</text>
</g>
<g >
<title>nf_conntrack_in (2 samples, 0.01%)</title><rect x="986.6" y="437" width="0.1" height="15.0" fill="rgb(225,115,7)" rx="2" ry="2" />
<text  x="989.55" y="447.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (36 samples, 0.25%)</title><rect x="766.3" y="213" width="3.0" height="15.0" fill="rgb(251,5,10)" rx="2" ry="2" />
<text  x="769.34" y="223.5" ></text>
</g>
<g >
<title>rcu_idle_exit (9 samples, 0.06%)</title><rect x="1141.6" y="661" width="0.8" height="15.0" fill="rgb(221,75,30)" rx="2" ry="2" />
<text  x="1144.64" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.04%)</title><rect x="775.7" y="181" width="0.4" height="15.0" fill="rgb(210,213,43)" rx="2" ry="2" />
<text  x="778.68" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.03%)</title><rect x="859.4" y="117" width="0.3" height="15.0" fill="rgb(218,1,41)" rx="2" ry="2" />
<text  x="862.40" y="127.5" ></text>
</g>
<g >
<title>std::fs::remove_file (7 samples, 0.05%)</title><rect x="114.8" y="677" width="0.6" height="15.0" fill="rgb(218,61,31)" rx="2" ry="2" />
<text  x="117.81" y="687.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.03%)</title><rect x="725.1" y="197" width="0.3" height="15.0" fill="rgb(207,100,44)" rx="2" ry="2" />
<text  x="728.07" y="207.5" ></text>
</g>
<g >
<title>load_balance (3 samples, 0.02%)</title><rect x="988.6" y="597" width="0.3" height="15.0" fill="rgb(219,32,31)" rx="2" ry="2" />
<text  x="991.64" y="607.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (8 samples, 0.06%)</title><rect x="15.3" y="517" width="0.7" height="15.0" fill="rgb(238,191,54)" rx="2" ry="2" />
<text  x="18.34" y="527.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (22 samples, 0.16%)</title><rect x="510.9" y="325" width="1.8" height="15.0" fill="rgb(245,194,47)" rx="2" ry="2" />
<text  x="513.87" y="335.5" ></text>
</g>
<g >
<title>dispatcher (17 samples, 0.12%)</title><rect x="115.4" y="725" width="1.4" height="15.0" fill="rgb(235,210,3)" rx="2" ry="2" />
<text  x="118.39" y="735.5" ></text>
</g>
<g >
<title>iput_final (7 samples, 0.05%)</title><rect x="114.8" y="533" width="0.6" height="15.0" fill="rgb(205,81,41)" rx="2" ry="2" />
<text  x="117.81" y="543.5" ></text>
</g>
<g >
<title>pm_qos_read_value (8 samples, 0.06%)</title><rect x="1152.0" y="661" width="0.6" height="15.0" fill="rgb(233,113,19)" rx="2" ry="2" />
<text  x="1154.98" y="671.5" ></text>
</g>
<g >
<title>__queue_work (2 samples, 0.01%)</title><rect x="975.6" y="725" width="0.2" height="15.0" fill="rgb(236,147,47)" rx="2" ry="2" />
<text  x="978.63" y="735.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.01%)</title><rect x="113.3" y="821" width="0.2" height="15.0" fill="rgb(236,44,12)" rx="2" ry="2" />
<text  x="116.31" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="1153.3" y="629" width="0.2" height="15.0" fill="rgb(250,154,7)" rx="2" ry="2" />
<text  x="1156.31" y="639.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="1175.8" y="565" width="0.2" height="15.0" fill="rgb(214,113,40)" rx="2" ry="2" />
<text  x="1178.83" y="575.5" ></text>
</g>
<g >
<title>alx_clean_tx_irq (2 samples, 0.01%)</title><rect x="31.2" y="581" width="0.1" height="15.0" fill="rgb(253,118,34)" rx="2" ry="2" />
<text  x="34.18" y="591.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (14 samples, 0.10%)</title><rect x="491.9" y="725" width="1.1" height="15.0" fill="rgb(213,110,16)" rx="2" ry="2" />
<text  x="494.86" y="735.5" ></text>
</g>
<g >
<title>wake_up_process (9 samples, 0.06%)</title><rect x="989.5" y="565" width="0.7" height="15.0" fill="rgb(228,180,47)" rx="2" ry="2" />
<text  x="992.47" y="575.5" ></text>
</g>
<g >
<title>new_sync_read (11 samples, 0.08%)</title><rect x="115.5" y="517" width="0.9" height="15.0" fill="rgb(240,8,26)" rx="2" ry="2" />
<text  x="118.48" y="527.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (2 samples, 0.01%)</title><rect x="724.9" y="277" width="0.2" height="15.0" fill="rgb(210,114,44)" rx="2" ry="2" />
<text  x="727.90" y="287.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (2 samples, 0.01%)</title><rect x="973.9" y="693" width="0.1" height="15.0" fill="rgb(247,192,17)" rx="2" ry="2" />
<text  x="976.88" y="703.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (217 samples, 1.53%)</title><rect x="837.9" y="453" width="18.1" height="15.0" fill="rgb(246,76,19)" rx="2" ry="2" />
<text  x="840.88" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (5 samples, 0.04%)</title><rect x="727.4" y="117" width="0.4" height="15.0" fill="rgb(246,32,3)" rx="2" ry="2" />
<text  x="730.41" y="127.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2 samples, 0.01%)</title><rect x="1067.8" y="517" width="0.1" height="15.0" fill="rgb(224,74,30)" rx="2" ry="2" />
<text  x="1070.76" y="527.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (8 samples, 0.06%)</title><rect x="44.3" y="469" width="0.6" height="15.0" fill="rgb(208,132,50)" rx="2" ry="2" />
<text  x="47.27" y="479.5" ></text>
</g>
<g >
<title>start_secondary (490 samples, 3.46%)</title><rect x="979.7" y="821" width="40.9" height="15.0" fill="rgb(244,220,48)" rx="2" ry="2" />
<text  x="982.71" y="831.5" >sta..</text>
</g>
<g >
<title>__softirqentry_text_start (48 samples, 0.34%)</title><rect x="983.2" y="645" width="4.0" height="15.0" fill="rgb(220,46,5)" rx="2" ry="2" />
<text  x="986.22" y="655.5" ></text>
</g>
<g >
<title>ip6_list_rcv_finish.constprop.0 (2 samples, 0.01%)</title><rect x="987.0" y="485" width="0.1" height="15.0" fill="rgb(247,193,9)" rx="2" ry="2" />
<text  x="989.97" y="495.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (8 samples, 0.06%)</title><rect x="524.5" y="261" width="0.6" height="15.0" fill="rgb(214,89,0)" rx="2" ry="2" />
<text  x="527.46" y="271.5" ></text>
</g>
<g >
<title>__note_gp_changes (2 samples, 0.01%)</title><rect x="27.2" y="773" width="0.1" height="15.0" fill="rgb(250,89,19)" rx="2" ry="2" />
<text  x="30.18" y="783.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (51 samples, 0.36%)</title><rect x="366.6" y="741" width="4.3" height="15.0" fill="rgb(217,154,45)" rx="2" ry="2" />
<text  x="369.62" y="751.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (11 samples, 0.08%)</title><rect x="837.0" y="261" width="0.9" height="15.0" fill="rgb(212,105,51)" rx="2" ry="2" />
<text  x="839.97" y="271.5" ></text>
</g>
<g >
<title>__realpath (4 samples, 0.03%)</title><rect x="499.8" y="613" width="0.3" height="15.0" fill="rgb(227,37,37)" rx="2" ry="2" />
<text  x="502.78" y="623.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (3 samples, 0.02%)</title><rect x="1052.8" y="597" width="0.3" height="15.0" fill="rgb(233,122,11)" rx="2" ry="2" />
<text  x="1055.84" y="607.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.04%)</title><rect x="697.4" y="261" width="0.5" height="15.0" fill="rgb(233,180,45)" rx="2" ry="2" />
<text  x="700.39" y="271.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (215 samples, 1.52%)</title><rect x="724.9" y="581" width="17.9" height="15.0" fill="rgb(243,104,47)" rx="2" ry="2" />
<text  x="727.90" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (28 samples, 0.20%)</title><rect x="572.5" y="149" width="2.3" height="15.0" fill="rgb(239,223,17)" rx="2" ry="2" />
<text  x="575.48" y="159.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (76 samples, 0.54%)</title><rect x="688.3" y="485" width="6.3" height="15.0" fill="rgb(240,21,24)" rx="2" ry="2" />
<text  x="691.30" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.05%)</title><rect x="857.9" y="197" width="0.6" height="15.0" fill="rgb(213,118,4)" rx="2" ry="2" />
<text  x="860.90" y="207.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (215 samples, 1.52%)</title><rect x="724.9" y="453" width="17.9" height="15.0" fill="rgb(212,81,39)" rx="2" ry="2" />
<text  x="727.90" y="463.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (7 samples, 0.05%)</title><rect x="1078.9" y="453" width="0.6" height="15.0" fill="rgb(220,133,29)" rx="2" ry="2" />
<text  x="1081.94" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3 samples, 0.02%)</title><rect x="1055.6" y="517" width="0.2" height="15.0" fill="rgb(227,68,50)" rx="2" ry="2" />
<text  x="1058.59" y="527.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (8 samples, 0.06%)</title><rect x="526.5" y="229" width="0.7" height="15.0" fill="rgb(215,44,29)" rx="2" ry="2" />
<text  x="529.54" y="239.5" ></text>
</g>
<g >
<title>ksys_write (8 samples, 0.06%)</title><rect x="15.3" y="629" width="0.7" height="15.0" fill="rgb(243,74,22)" rx="2" ry="2" />
<text  x="18.34" y="639.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.01%)</title><rect x="989.7" y="533" width="0.2" height="15.0" fill="rgb(231,69,6)" rx="2" ry="2" />
<text  x="992.72" y="543.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (3 samples, 0.02%)</title><rect x="875.2" y="181" width="0.2" height="15.0" fill="rgb(240,195,50)" rx="2" ry="2" />
<text  x="878.16" y="191.5" ></text>
</g>
<g >
<title>enqueue_task_fair (10 samples, 0.07%)</title><rect x="49.4" y="437" width="0.8" height="15.0" fill="rgb(206,79,42)" rx="2" ry="2" />
<text  x="52.36" y="447.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.01%)</title><rect x="541.3" y="261" width="0.2" height="15.0" fill="rgb(238,106,4)" rx="2" ry="2" />
<text  x="544.30" y="271.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (24 samples, 0.17%)</title><rect x="682.5" y="405" width="2.0" height="15.0" fill="rgb(228,94,28)" rx="2" ry="2" />
<text  x="685.55" y="415.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.01%)</title><rect x="517.8" y="293" width="0.2" height="15.0" fill="rgb(236,143,35)" rx="2" ry="2" />
<text  x="520.79" y="303.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (12 samples, 0.08%)</title><rect x="743.6" y="245" width="1.0" height="15.0" fill="rgb(246,213,38)" rx="2" ry="2" />
<text  x="746.58" y="255.5" ></text>
</g>
<g >
<title>start_kernel (2,032 samples, 14.36%)</title><rect x="1020.6" y="789" width="169.4" height="15.0" fill="rgb(243,201,51)" rx="2" ry="2" />
<text  x="1023.57" y="799.5" >start_kernel</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (2 samples, 0.01%)</title><rect x="764.6" y="293" width="0.2" height="15.0" fill="rgb(237,27,45)" rx="2" ry="2" />
<text  x="767.59" y="303.5" ></text>
</g>
<g >
<title>destroy_inode (6 samples, 0.04%)</title><rect x="500.2" y="469" width="0.5" height="15.0" fill="rgb(232,27,23)" rx="2" ry="2" />
<text  x="503.19" y="479.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.04%)</title><rect x="868.7" y="245" width="0.5" height="15.0" fill="rgb(250,27,51)" rx="2" ry="2" />
<text  x="871.74" y="255.5" ></text>
</g>
<g >
<title>iput (6 samples, 0.04%)</title><rect x="500.2" y="533" width="0.5" height="15.0" fill="rgb(245,162,6)" rx="2" ry="2" />
<text  x="503.19" y="543.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.10%)</title><rect x="765.0" y="245" width="1.2" height="15.0" fill="rgb(247,180,40)" rx="2" ry="2" />
<text  x="768.01" y="255.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (2 samples, 0.01%)</title><rect x="499.4" y="245" width="0.2" height="15.0" fill="rgb(219,42,22)" rx="2" ry="2" />
<text  x="502.44" y="255.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2 samples, 0.01%)</title><rect x="1076.9" y="389" width="0.2" height="15.0" fill="rgb(217,52,38)" rx="2" ry="2" />
<text  x="1079.94" y="399.5" ></text>
</g>
<g >
<title>iput_final (6 samples, 0.04%)</title><rect x="500.2" y="501" width="0.5" height="15.0" fill="rgb(252,187,2)" rx="2" ry="2" />
<text  x="503.19" y="511.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (2 samples, 0.01%)</title><rect x="875.9" y="821" width="0.2" height="15.0" fill="rgb(231,213,25)" rx="2" ry="2" />
<text  x="878.91" y="831.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (2,032 samples, 14.36%)</title><rect x="1020.6" y="821" width="169.4" height="15.0" fill="rgb(218,198,26)" rx="2" ry="2" />
<text  x="1023.57" y="831.5" >x86_64_start_kernel</text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (557 samples, 3.94%)</title><rect x="809.5" y="549" width="46.5" height="15.0" fill="rgb(243,130,0)" rx="2" ry="2" />
<text  x="812.54" y="559.5" >serd..</text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.01%)</title><rect x="887.8" y="837" width="0.2" height="15.0" fill="rgb(243,229,45)" rx="2" ry="2" />
<text  x="890.83" y="847.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (52 samples, 0.37%)</title><rect x="541.6" y="325" width="4.4" height="15.0" fill="rgb(236,94,25)" rx="2" ry="2" />
<text  x="544.63" y="335.5" ></text>
</g>
<g >
<title>update_load_avg (6 samples, 0.04%)</title><rect x="1179.0" y="645" width="0.5" height="15.0" fill="rgb(251,97,45)" rx="2" ry="2" />
<text  x="1181.99" y="655.5" ></text>
</g>
<g >
<title>rest_init (2,032 samples, 14.36%)</title><rect x="1020.6" y="757" width="169.4" height="15.0" fill="rgb(236,48,43)" rx="2" ry="2" />
<text  x="1023.57" y="767.5" >rest_init</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (2 samples, 0.01%)</title><rect x="889.0" y="597" width="0.2" height="15.0" fill="rgb(249,140,3)" rx="2" ry="2" />
<text  x="892.00" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c::{{closure}} (14 samples, 0.10%)</title><rect x="498.5" y="549" width="1.2" height="15.0" fill="rgb(209,137,47)" rx="2" ry="2" />
<text  x="501.53" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="832.2" y="149" width="0.3" height="15.0" fill="rgb(251,86,17)" rx="2" ry="2" />
<text  x="835.21" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.01%)</title><rect x="535.9" y="165" width="0.1" height="15.0" fill="rgb(253,173,51)" rx="2" ry="2" />
<text  x="538.88" y="175.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.01%)</title><rect x="548.4" y="309" width="0.2" height="15.0" fill="rgb(241,57,36)" rx="2" ry="2" />
<text  x="551.39" y="319.5" ></text>
</g>
<g >
<title>timerqueue_del (4 samples, 0.03%)</title><rect x="1047.8" y="565" width="0.4" height="15.0" fill="rgb(220,109,7)" rx="2" ry="2" />
<text  x="1050.84" y="575.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (4 samples, 0.03%)</title><rect x="857.9" y="165" width="0.3" height="15.0" fill="rgb(223,13,50)" rx="2" ry="2" />
<text  x="860.90" y="175.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.01%)</title><rect x="973.9" y="757" width="0.1" height="15.0" fill="rgb(209,111,10)" rx="2" ry="2" />
<text  x="976.88" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="545.8" y="245" width="0.2" height="15.0" fill="rgb(246,99,3)" rx="2" ry="2" />
<text  x="548.80" y="255.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 0.51%)</title><rect x="10.0" y="837" width="6.0" height="15.0" fill="rgb(244,39,14)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (76 samples, 0.54%)</title><rect x="688.3" y="565" width="6.3" height="15.0" fill="rgb(221,180,44)" rx="2" ry="2" />
<text  x="691.30" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.01%)</title><rect x="835.1" y="117" width="0.2" height="15.0" fill="rgb(248,71,17)" rx="2" ry="2" />
<text  x="838.13" y="127.5" ></text>
</g>
<g >
<title>generic_perform_write (18 samples, 0.13%)</title><rect x="493.4" y="405" width="1.5" height="15.0" fill="rgb(207,190,48)" rx="2" ry="2" />
<text  x="496.44" y="415.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (58 samples, 0.41%)</title><rect x="837.9" y="277" width="4.8" height="15.0" fill="rgb(223,179,24)" rx="2" ry="2" />
<text  x="840.88" y="287.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.04%)</title><rect x="743.1" y="213" width="0.5" height="15.0" fill="rgb(215,85,5)" rx="2" ry="2" />
<text  x="746.08" y="223.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.01%)</title><rect x="811.0" y="69" width="0.1" height="15.0" fill="rgb(253,15,14)" rx="2" ry="2" />
<text  x="813.95" y="79.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.04%)</title><rect x="688.8" y="229" width="0.4" height="15.0" fill="rgb(249,44,46)" rx="2" ry="2" />
<text  x="691.80" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (29 samples, 0.20%)</title><rect x="522.7" y="277" width="2.4" height="15.0" fill="rgb(221,184,46)" rx="2" ry="2" />
<text  x="525.71" y="287.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (37 samples, 0.26%)</title><rect x="649.7" y="213" width="3.1" height="15.0" fill="rgb(226,123,23)" rx="2" ry="2" />
<text  x="652.69" y="223.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (12 samples, 0.08%)</title><rect x="647.4" y="181" width="1.0" height="15.0" fill="rgb(218,12,30)" rx="2" ry="2" />
<text  x="650.44" y="191.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_constants::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::syscalls::fs_constants::DevNo&gt;::serialize (5 samples, 0.04%)</title><rect x="540.7" y="293" width="0.4" height="15.0" fill="rgb(215,175,28)" rx="2" ry="2" />
<text  x="543.72" y="303.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (61 samples, 0.43%)</title><rect x="772.0" y="245" width="5.1" height="15.0" fill="rgb(220,67,51)" rx="2" ry="2" />
<text  x="775.01" y="255.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.03%)</title><rect x="855.6" y="405" width="0.4" height="15.0" fill="rgb(228,147,39)" rx="2" ry="2" />
<text  x="858.64" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="116.6" y="565" width="0.1" height="15.0" fill="rgb(239,181,4)" rx="2" ry="2" />
<text  x="119.56" y="575.5" ></text>
</g>
<g >
<title>NaClSysOpen (7 samples, 0.05%)</title><rect x="114.8" y="789" width="0.6" height="15.0" fill="rgb(221,78,9)" rx="2" ry="2" />
<text  x="117.81" y="799.5" ></text>
</g>
<g >
<title>irq_exit_rcu (54 samples, 0.38%)</title><rect x="46.3" y="629" width="4.5" height="15.0" fill="rgb(240,124,35)" rx="2" ry="2" />
<text  x="49.27" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (338 samples, 2.39%)</title><rect x="809.7" y="453" width="28.2" height="15.0" fill="rgb(216,119,26)" rx="2" ry="2" />
<text  x="812.70" y="463.5" >r..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.08%)</title><rect x="508.6" y="277" width="1.0" height="15.0" fill="rgb(241,104,40)" rx="2" ry="2" />
<text  x="511.62" y="287.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (63 samples, 0.45%)</title><rect x="10.1" y="757" width="5.2" height="15.0" fill="rgb(217,36,33)" rx="2" ry="2" />
<text  x="13.08" y="767.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.01%)</title><rect x="979.5" y="661" width="0.1" height="15.0" fill="rgb(253,164,42)" rx="2" ry="2" />
<text  x="982.46" y="671.5" ></text>
</g>
<g >
<title>load_balance (9 samples, 0.06%)</title><rect x="47.3" y="533" width="0.7" height="15.0" fill="rgb(230,138,43)" rx="2" ry="2" />
<text  x="50.27" y="543.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (146 samples, 1.03%)</title><rect x="636.3" y="293" width="12.1" height="15.0" fill="rgb(222,212,37)" rx="2" ry="2" />
<text  x="639.27" y="303.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (203 samples, 1.43%)</title><rect x="654.8" y="293" width="16.9" height="15.0" fill="rgb(244,112,36)" rx="2" ry="2" />
<text  x="657.78" y="303.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (128 samples, 0.90%)</title><rect x="637.8" y="261" width="10.6" height="15.0" fill="rgb(225,132,48)" rx="2" ry="2" />
<text  x="640.77" y="271.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (52 samples, 0.37%)</title><rect x="832.6" y="261" width="4.4" height="15.0" fill="rgb(241,87,36)" rx="2" ry="2" />
<text  x="835.63" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.09%)</title><rect x="498.6" y="501" width="1.1" height="15.0" fill="rgb(216,22,54)" rx="2" ry="2" />
<text  x="501.61" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.11%)</title><rect x="548.7" y="261" width="1.3" height="15.0" fill="rgb(222,220,29)" rx="2" ry="2" />
<text  x="551.72" y="271.5" ></text>
</g>
<g >
<title>&lt;u32 as itoa::Integer&gt;::write (8 samples, 0.06%)</title><rect x="741.1" y="261" width="0.6" height="15.0" fill="rgb(217,201,42)" rx="2" ry="2" />
<text  x="744.08" y="271.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (229 samples, 1.62%)</title><rect x="697.4" y="597" width="19.1" height="15.0" fill="rgb(231,78,40)" rx="2" ry="2" />
<text  x="700.39" y="607.5" ></text>
</g>
<g >
<title>select_task_rq_fair (12 samples, 0.08%)</title><rect x="1072.9" y="469" width="1.0" height="15.0" fill="rgb(253,200,44)" rx="2" ry="2" />
<text  x="1075.85" y="479.5" ></text>
</g>
<g >
<title>iput (7 samples, 0.05%)</title><rect x="114.8" y="565" width="0.6" height="15.0" fill="rgb(211,86,15)" rx="2" ry="2" />
<text  x="117.81" y="575.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 0.06%)</title><rect x="786.4" y="181" width="0.7" height="15.0" fill="rgb(246,114,41)" rx="2" ry="2" />
<text  x="789.44" y="191.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (8 samples, 0.06%)</title><rect x="15.3" y="501" width="0.7" height="15.0" fill="rgb(218,4,9)" rx="2" ry="2" />
<text  x="18.34" y="511.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="512.5" y="277" width="0.2" height="15.0" fill="rgb(221,198,38)" rx="2" ry="2" />
<text  x="515.53" y="287.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_ptr (5 samples, 0.04%)</title><rect x="792.2" y="805" width="0.4" height="15.0" fill="rgb(207,177,45)" rx="2" ry="2" />
<text  x="795.19" y="815.5" ></text>
</g>
<g >
<title>rcu_gp_cleanup (2 samples, 0.01%)</title><rect x="953.1" y="805" width="0.2" height="15.0" fill="rgb(237,30,17)" rx="2" ry="2" />
<text  x="956.12" y="815.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (333 samples, 2.35%)</title><rect x="810.1" y="357" width="27.8" height="15.0" fill="rgb(241,91,32)" rx="2" ry="2" />
<text  x="813.12" y="367.5" >c..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (7 samples, 0.05%)</title><rect x="518.6" y="341" width="0.6" height="15.0" fill="rgb(207,203,30)" rx="2" ry="2" />
<text  x="521.62" y="351.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (7 samples, 0.05%)</title><rect x="741.2" y="197" width="0.5" height="15.0" fill="rgb(252,108,54)" rx="2" ry="2" />
<text  x="744.16" y="207.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (4 samples, 0.03%)</title><rect x="497.2" y="277" width="0.3" height="15.0" fill="rgb(220,28,5)" rx="2" ry="2" />
<text  x="500.19" y="287.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (17 samples, 0.12%)</title><rect x="830.5" y="149" width="1.4" height="15.0" fill="rgb(212,213,52)" rx="2" ry="2" />
<text  x="833.46" y="159.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (2 samples, 0.01%)</title><rect x="810.0" y="213" width="0.1" height="15.0" fill="rgb(213,189,53)" rx="2" ry="2" />
<text  x="812.95" y="223.5" ></text>
</g>
<g >
<title>hrtimer_active (4 samples, 0.03%)</title><rect x="1185.3" y="661" width="0.4" height="15.0" fill="rgb(224,155,34)" rx="2" ry="2" />
<text  x="1188.33" y="671.5" ></text>
</g>
<g >
<title>newidle_balance (2 samples, 0.01%)</title><rect x="973.9" y="741" width="0.1" height="15.0" fill="rgb(211,97,38)" rx="2" ry="2" />
<text  x="976.88" y="751.5" ></text>
</g>
<g >
<title>NaClHostDescRead (17 samples, 0.12%)</title><rect x="115.4" y="757" width="1.4" height="15.0" fill="rgb(218,101,7)" rx="2" ry="2" />
<text  x="118.39" y="767.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (3 samples, 0.02%)</title><rect x="64.0" y="629" width="0.3" height="15.0" fill="rgb(216,131,31)" rx="2" ry="2" />
<text  x="67.03" y="639.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (76 samples, 0.54%)</title><rect x="648.4" y="293" width="6.4" height="15.0" fill="rgb(239,94,28)" rx="2" ry="2" />
<text  x="651.44" y="303.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="68.4" y="645" width="0.2" height="15.0" fill="rgb(241,181,34)" rx="2" ry="2" />
<text  x="71.45" y="655.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (2 samples, 0.01%)</title><rect x="688.3" y="293" width="0.2" height="15.0" fill="rgb(220,121,21)" rx="2" ry="2" />
<text  x="691.30" y="303.5" ></text>
</g>
<g >
<title>__update_blocked_fair (4 samples, 0.03%)</title><rect x="48.1" y="533" width="0.3" height="15.0" fill="rgb(236,19,6)" rx="2" ry="2" />
<text  x="51.10" y="543.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (4 samples, 0.03%)</title><rect x="837.6" y="165" width="0.3" height="15.0" fill="rgb(227,195,21)" rx="2" ry="2" />
<text  x="840.55" y="175.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (39 samples, 0.28%)</title><rect x="536.9" y="357" width="3.2" height="15.0" fill="rgb(214,69,6)" rx="2" ry="2" />
<text  x="539.88" y="367.5" ></text>
</g>
<g >
<title>process_timeout (18 samples, 0.13%)</title><rect x="49.0" y="517" width="1.5" height="15.0" fill="rgb(205,31,12)" rx="2" ry="2" />
<text  x="52.02" y="527.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (3 samples, 0.02%)</title><rect x="112.5" y="805" width="0.2" height="15.0" fill="rgb(252,222,50)" rx="2" ry="2" />
<text  x="115.47" y="815.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.02%)</title><rect x="712.1" y="229" width="0.3" height="15.0" fill="rgb(232,164,32)" rx="2" ry="2" />
<text  x="715.15" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (98 samples, 0.69%)</title><rect x="42.7" y="645" width="8.2" height="15.0" fill="rgb(251,212,19)" rx="2" ry="2" />
<text  x="45.69" y="655.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (76 samples, 0.54%)</title><rect x="688.3" y="533" width="6.3" height="15.0" fill="rgb(238,50,11)" rx="2" ry="2" />
<text  x="691.30" y="543.5" ></text>
</g>
<g >
<title>nohz_csd_func (14 samples, 0.10%)</title><rect x="1162.3" y="693" width="1.2" height="15.0" fill="rgb(244,213,6)" rx="2" ry="2" />
<text  x="1165.32" y="703.5" ></text>
</g>
<g >
<title>update_cpu_capacity (2 samples, 0.01%)</title><rect x="1168.9" y="597" width="0.2" height="15.0" fill="rgb(229,124,39)" rx="2" ry="2" />
<text  x="1171.90" y="607.5" ></text>
</g>
<g >
<title>dequeue_entity (28 samples, 0.20%)</title><rect x="964.4" y="693" width="2.3" height="15.0" fill="rgb(209,174,25)" rx="2" ry="2" />
<text  x="967.37" y="703.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2,204 samples, 15.57%)</title><rect x="501.1" y="549" width="183.8" height="15.0" fill="rgb(212,67,30)" rx="2" ry="2" />
<text  x="504.11" y="559.5" >&lt;serde_json::ser::Compo..</text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (11 samples, 0.08%)</title><rect x="678.0" y="261" width="1.0" height="15.0" fill="rgb(212,33,42)" rx="2" ry="2" />
<text  x="681.04" y="271.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (4 samples, 0.03%)</title><rect x="524.1" y="213" width="0.4" height="15.0" fill="rgb(212,131,50)" rx="2" ry="2" />
<text  x="527.12" y="223.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (4 samples, 0.03%)</title><rect x="742.5" y="245" width="0.3" height="15.0" fill="rgb(209,96,12)" rx="2" ry="2" />
<text  x="745.50" y="255.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (3 samples, 0.02%)</title><rect x="875.2" y="261" width="0.2" height="15.0" fill="rgb(235,52,8)" rx="2" ry="2" />
<text  x="878.16" y="271.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (3 samples, 0.02%)</title><rect x="493.6" y="341" width="0.3" height="15.0" fill="rgb(223,83,16)" rx="2" ry="2" />
<text  x="496.61" y="351.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (2 samples, 0.01%)</title><rect x="495.4" y="357" width="0.1" height="15.0" fill="rgb(205,75,20)" rx="2" ry="2" />
<text  x="498.36" y="367.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object (35 samples, 0.25%)</title><rect x="673.3" y="357" width="2.9" height="15.0" fill="rgb(246,131,21)" rx="2" ry="2" />
<text  x="676.29" y="367.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (3 samples, 0.02%)</title><rect x="500.9" y="549" width="0.2" height="15.0" fill="rgb(220,153,47)" rx="2" ry="2" />
<text  x="503.86" y="559.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.01%)</title><rect x="1176.1" y="565" width="0.1" height="15.0" fill="rgb(231,41,52)" rx="2" ry="2" />
<text  x="1179.08" y="575.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (6 samples, 0.04%)</title><rect x="811.8" y="117" width="0.5" height="15.0" fill="rgb(218,32,26)" rx="2" ry="2" />
<text  x="814.79" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.01%)</title><rect x="811.5" y="37" width="0.1" height="15.0" fill="rgb(239,101,45)" rx="2" ry="2" />
<text  x="814.45" y="47.5" ></text>
</g>
<g >
<title>__x64_sys_write (37 samples, 0.26%)</title><rect x="495.1" y="549" width="3.1" height="15.0" fill="rgb(252,0,0)" rx="2" ry="2" />
<text  x="498.11" y="559.5" ></text>
</g>
<g >
<title>menu_update (5 samples, 0.04%)</title><rect x="1151.6" y="661" width="0.4" height="15.0" fill="rgb(219,10,19)" rx="2" ry="2" />
<text  x="1154.56" y="671.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 0.01%)</title><rect x="114.5" y="741" width="0.1" height="15.0" fill="rgb(232,128,31)" rx="2" ry="2" />
<text  x="117.48" y="751.5" ></text>
</g>
<g >
<title>update_load_avg (4 samples, 0.03%)</title><rect x="49.8" y="405" width="0.3" height="15.0" fill="rgb(209,158,24)" rx="2" ry="2" />
<text  x="52.77" y="415.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.03%)</title><rect x="503.8" y="405" width="0.3" height="15.0" fill="rgb(253,29,26)" rx="2" ry="2" />
<text  x="506.78" y="415.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::all (2 samples, 0.01%)</title><rect x="498.2" y="613" width="0.2" height="15.0" fill="rgb(237,54,40)" rx="2" ry="2" />
<text  x="501.19" y="623.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (16 samples, 0.11%)</title><rect x="66.8" y="613" width="1.3" height="15.0" fill="rgb(227,130,40)" rx="2" ry="2" />
<text  x="69.78" y="623.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (2,207 samples, 15.59%)</title><rect x="500.9" y="661" width="184.0" height="15.0" fill="rgb(240,12,41)" rx="2" ry="2" />
<text  x="503.86" y="671.5" >serde_json::ser::to_str..</text>
</g>
<g >
<title>dispatcher (221 samples, 1.56%)</title><rect x="856.7" y="805" width="18.5" height="15.0" fill="rgb(250,10,52)" rx="2" ry="2" />
<text  x="859.73" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.04%)</title><rect x="525.8" y="213" width="0.5" height="15.0" fill="rgb(246,12,15)" rx="2" ry="2" />
<text  x="528.79" y="223.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (172 samples, 1.22%)</title><rect x="860.8" y="389" width="14.4" height="15.0" fill="rgb(231,210,19)" rx="2" ry="2" />
<text  x="863.81" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.03%)</title><rect x="494.1" y="325" width="0.3" height="15.0" fill="rgb(212,22,47)" rx="2" ry="2" />
<text  x="497.11" y="335.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="1068.5" y="517" width="0.2" height="15.0" fill="rgb(235,47,37)" rx="2" ry="2" />
<text  x="1071.51" y="527.5" ></text>
</g>
<g >
<title>process_timeout (9 samples, 0.06%)</title><rect x="989.5" y="581" width="0.7" height="15.0" fill="rgb(246,223,39)" rx="2" ry="2" />
<text  x="992.47" y="591.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.07%)</title><rect x="81.5" y="821" width="0.8" height="15.0" fill="rgb(253,17,10)" rx="2" ry="2" />
<text  x="84.46" y="831.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (2 samples, 0.01%)</title><rect x="1065.7" y="453" width="0.1" height="15.0" fill="rgb(229,122,35)" rx="2" ry="2" />
<text  x="1068.68" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.05%)</title><rect x="680.0" y="245" width="0.6" height="15.0" fill="rgb(228,169,50)" rx="2" ry="2" />
<text  x="683.05" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.06%)</title><rect x="546.6" y="229" width="0.7" height="15.0" fill="rgb(253,99,34)" rx="2" ry="2" />
<text  x="549.55" y="239.5" ></text>
</g>
<g >
<title>error_return (5 samples, 0.04%)</title><rect x="1143.4" y="677" width="0.4" height="15.0" fill="rgb(253,82,42)" rx="2" ry="2" />
<text  x="1146.39" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::canonicalize (4 samples, 0.03%)</title><rect x="499.8" y="629" width="0.3" height="15.0" fill="rgb(218,160,5)" rx="2" ry="2" />
<text  x="502.78" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (215 samples, 1.52%)</title><rect x="724.9" y="677" width="17.9" height="15.0" fill="rgb(245,39,28)" rx="2" ry="2" />
<text  x="727.90" y="687.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (5 samples, 0.04%)</title><rect x="809.7" y="357" width="0.4" height="15.0" fill="rgb(248,17,29)" rx="2" ry="2" />
<text  x="812.70" y="367.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (2 samples, 0.01%)</title><rect x="113.1" y="821" width="0.2" height="15.0" fill="rgb(222,161,53)" rx="2" ry="2" />
<text  x="116.14" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (24 samples, 0.17%)</title><rect x="515.3" y="309" width="2.0" height="15.0" fill="rgb(233,1,40)" rx="2" ry="2" />
<text  x="518.29" y="319.5" ></text>
</g>
<g >
<title>[sel_ldr] (6,848 samples, 48.39%)</title><rect x="114.5" y="837" width="571.0" height="15.0" fill="rgb(226,187,1)" rx="2" ry="2" />
<text  x="117.48" y="847.5" >[sel_ldr]</text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (3 samples, 0.02%)</title><rect x="548.1" y="213" width="0.3" height="15.0" fill="rgb(243,156,45)" rx="2" ry="2" />
<text  x="551.14" y="223.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.04%)</title><rect x="743.2" y="197" width="0.4" height="15.0" fill="rgb(238,22,47)" rx="2" ry="2" />
<text  x="746.16" y="207.5" ></text>
</g>
<g >
<title>perf (76 samples, 0.54%)</title><rect x="10.0" y="853" width="6.3" height="15.0" fill="rgb(218,188,52)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.01%)</title><rect x="764.3" y="277" width="0.2" height="15.0" fill="rgb(214,46,29)" rx="2" ry="2" />
<text  x="767.34" y="287.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (54 samples, 0.38%)</title><rect x="541.5" y="357" width="4.5" height="15.0" fill="rgb(235,223,12)" rx="2" ry="2" />
<text  x="544.47" y="367.5" ></text>
</g>
<g >
<title>ksys_write (2 samples, 0.01%)</title><rect x="951.9" y="789" width="0.2" height="15.0" fill="rgb(207,158,26)" rx="2" ry="2" />
<text  x="954.95" y="799.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_pre_routing (3 samples, 0.02%)</title><rect x="986.7" y="453" width="0.3" height="15.0" fill="rgb(228,196,16)" rx="2" ry="2" />
<text  x="989.72" y="463.5" ></text>
</g>
<g >
<title>cpuidle_select (2 samples, 0.01%)</title><rect x="40.4" y="757" width="0.1" height="15.0" fill="rgb(227,161,4)" rx="2" ry="2" />
<text  x="43.35" y="767.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (193 samples, 1.36%)</title><rect x="655.6" y="277" width="16.1" height="15.0" fill="rgb(237,116,43)" rx="2" ry="2" />
<text  x="658.61" y="287.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (131 samples, 0.93%)</title><rect x="506.4" y="373" width="10.9" height="15.0" fill="rgb(234,36,9)" rx="2" ry="2" />
<text  x="509.36" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (4 samples, 0.03%)</title><rect x="855.6" y="133" width="0.4" height="15.0" fill="rgb(240,59,33)" rx="2" ry="2" />
<text  x="858.64" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.07%)</title><rect x="744.6" y="181" width="0.8" height="15.0" fill="rgb(216,35,25)" rx="2" ry="2" />
<text  x="747.58" y="191.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (14 samples, 0.10%)</title><rect x="633.2" y="181" width="1.2" height="15.0" fill="rgb(217,222,49)" rx="2" ry="2" />
<text  x="636.19" y="191.5" ></text>
</g>
<g >
<title>pci_conf1_read (3 samples, 0.02%)</title><rect x="974.9" y="693" width="0.2" height="15.0" fill="rgb(217,91,25)" rx="2" ry="2" />
<text  x="977.88" y="703.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.01%)</title><rect x="546.7" y="213" width="0.2" height="15.0" fill="rgb(221,40,27)" rx="2" ry="2" />
<text  x="549.72" y="223.5" ></text>
</g>
<g >
<title>record__mmap_read_all (8 samples, 0.06%)</title><rect x="15.3" y="789" width="0.7" height="15.0" fill="rgb(214,9,37)" rx="2" ry="2" />
<text  x="18.34" y="799.5" ></text>
</g>
<g >
<title>__update_blocked_fair (4 samples, 0.03%)</title><rect x="969.8" y="613" width="0.3" height="15.0" fill="rgb(235,20,1)" rx="2" ry="2" />
<text  x="972.79" y="623.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (8 samples, 0.06%)</title><rect x="826.1" y="117" width="0.7" height="15.0" fill="rgb(252,190,1)" rx="2" ry="2" />
<text  x="829.13" y="127.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (6 samples, 0.04%)</title><rect x="648.5" y="261" width="0.5" height="15.0" fill="rgb(232,2,5)" rx="2" ry="2" />
<text  x="651.53" y="271.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (2 samples, 0.01%)</title><rect x="497.5" y="261" width="0.2" height="15.0" fill="rgb(240,187,52)" rx="2" ry="2" />
<text  x="500.53" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (215 samples, 1.52%)</title><rect x="724.9" y="533" width="17.9" height="15.0" fill="rgb(234,229,29)" rx="2" ry="2" />
<text  x="727.90" y="543.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (7 samples, 0.05%)</title><rect x="497.1" y="325" width="0.6" height="15.0" fill="rgb(235,79,31)" rx="2" ry="2" />
<text  x="500.11" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (9 samples, 0.06%)</title><rect x="1187.3" y="661" width="0.8" height="15.0" fill="rgb(243,160,30)" rx="2" ry="2" />
<text  x="1190.33" y="671.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (37 samples, 0.26%)</title><rect x="604.0" y="213" width="3.1" height="15.0" fill="rgb(216,22,28)" rx="2" ry="2" />
<text  x="607.00" y="223.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (7 samples, 0.05%)</title><rect x="112.1" y="821" width="0.6" height="15.0" fill="rgb(247,198,5)" rx="2" ry="2" />
<text  x="115.14" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (19 samples, 0.13%)</title><rect x="726.3" y="133" width="1.6" height="15.0" fill="rgb(238,145,6)" rx="2" ry="2" />
<text  x="729.32" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.03%)</title><rect x="857.9" y="181" width="0.3" height="15.0" fill="rgb(225,73,7)" rx="2" ry="2" />
<text  x="860.90" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (95 samples, 0.67%)</title><rect x="628.3" y="213" width="8.0" height="15.0" fill="rgb(236,110,41)" rx="2" ry="2" />
<text  x="631.35" y="223.5" ></text>
</g>
<g >
<title>load_balance (2 samples, 0.01%)</title><rect x="973.9" y="725" width="0.1" height="15.0" fill="rgb(215,41,23)" rx="2" ry="2" />
<text  x="976.88" y="735.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.01%)</title><rect x="697.0" y="789" width="0.1" height="15.0" fill="rgb(205,65,47)" rx="2" ry="2" />
<text  x="699.97" y="799.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (5 samples, 0.04%)</title><rect x="536.1" y="181" width="0.4" height="15.0" fill="rgb(236,108,15)" rx="2" ry="2" />
<text  x="539.13" y="191.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (34 samples, 0.24%)</title><rect x="624.2" y="213" width="2.8" height="15.0" fill="rgb(254,211,19)" rx="2" ry="2" />
<text  x="627.18" y="223.5" ></text>
</g>
<g >
<title>cmd_record (72 samples, 0.51%)</title><rect x="10.0" y="821" width="6.0" height="15.0" fill="rgb(223,130,27)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>path_openat (12 samples, 0.08%)</title><rect x="498.7" y="437" width="1.0" height="15.0" fill="rgb(221,163,8)" rx="2" ry="2" />
<text  x="501.69" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="855.6" y="261" width="0.4" height="15.0" fill="rgb(241,31,9)" rx="2" ry="2" />
<text  x="858.64" y="271.5" ></text>
</g>
<g >
<title>irq_enter_rcu (6 samples, 0.04%)</title><rect x="45.8" y="629" width="0.5" height="15.0" fill="rgb(226,205,30)" rx="2" ry="2" />
<text  x="48.77" y="639.5" ></text>
</g>
<g >
<title>sched_clock_cpu (10 samples, 0.07%)</title><rect x="1142.4" y="661" width="0.8" height="15.0" fill="rgb(239,167,39)" rx="2" ry="2" />
<text  x="1145.39" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (223 samples, 1.58%)</title><rect x="697.9" y="421" width="18.6" height="15.0" fill="rgb(225,113,40)" rx="2" ry="2" />
<text  x="700.89" y="431.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (172 samples, 1.22%)</title><rect x="860.8" y="309" width="14.4" height="15.0" fill="rgb(218,229,14)" rx="2" ry="2" />
<text  x="863.81" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="856.1" y="325" width="0.2" height="15.0" fill="rgb(225,92,21)" rx="2" ry="2" />
<text  x="859.14" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.02%)</title><rect x="676.0" y="245" width="0.2" height="15.0" fill="rgb(245,158,4)" rx="2" ry="2" />
<text  x="678.96" y="255.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (7 samples, 0.05%)</title><rect x="836.4" y="117" width="0.6" height="15.0" fill="rgb(217,43,1)" rx="2" ry="2" />
<text  x="839.38" y="127.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;std::fs::File&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="494.9" y="629" width="0.2" height="15.0" fill="rgb(217,173,53)" rx="2" ry="2" />
<text  x="497.94" y="639.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.01%)</title><rect x="687.2" y="821" width="0.2" height="15.0" fill="rgb(229,130,7)" rx="2" ry="2" />
<text  x="690.22" y="831.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (2 samples, 0.01%)</title><rect x="764.8" y="229" width="0.2" height="15.0" fill="rgb(250,178,18)" rx="2" ry="2" />
<text  x="767.84" y="239.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (8 samples, 0.06%)</title><rect x="675.1" y="277" width="0.7" height="15.0" fill="rgb(212,25,0)" rx="2" ry="2" />
<text  x="678.13" y="287.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.03%)</title><rect x="875.2" y="597" width="0.3" height="15.0" fill="rgb(218,148,3)" rx="2" ry="2" />
<text  x="878.16" y="607.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (10 samples, 0.07%)</title><rect x="744.6" y="165" width="0.8" height="15.0" fill="rgb(237,91,28)" rx="2" ry="2" />
<text  x="747.58" y="175.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.06%)</title><rect x="859.8" y="181" width="0.7" height="15.0" fill="rgb(210,191,17)" rx="2" ry="2" />
<text  x="862.81" y="191.5" ></text>
</g>
<g >
<title>dyntick_save_progress_counter (4 samples, 0.03%)</title><rect x="27.5" y="757" width="0.3" height="15.0" fill="rgb(231,192,29)" rx="2" ry="2" />
<text  x="30.51" y="767.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (32 samples, 0.23%)</title><rect x="1063.3" y="485" width="2.7" height="15.0" fill="rgb(254,212,4)" rx="2" ry="2" />
<text  x="1066.35" y="495.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="960.3" y="757" width="0.2" height="15.0" fill="rgb(247,143,39)" rx="2" ry="2" />
<text  x="963.29" y="767.5" ></text>
</g>
<g >
<title>vfs_iter_read (11 samples, 0.08%)</title><rect x="115.5" y="485" width="0.9" height="15.0" fill="rgb(252,127,42)" rx="2" ry="2" />
<text  x="118.48" y="495.5" ></text>
</g>
<g >
<title>queue_delayed_work_on (3 samples, 0.02%)</title><rect x="975.6" y="757" width="0.3" height="15.0" fill="rgb(237,11,30)" rx="2" ry="2" />
<text  x="978.63" y="767.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (23 samples, 0.16%)</title><rect x="634.4" y="181" width="1.9" height="15.0" fill="rgb(251,121,3)" rx="2" ry="2" />
<text  x="637.35" y="191.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.12%)</title><rect x="834.8" y="149" width="1.4" height="15.0" fill="rgb(231,102,49)" rx="2" ry="2" />
<text  x="837.80" y="159.5" ></text>
</g>
<g >
<title>alx_mask_msix (11 samples, 0.08%)</title><rect x="984.9" y="581" width="0.9" height="15.0" fill="rgb(240,156,33)" rx="2" ry="2" />
<text  x="987.88" y="591.5" ></text>
</g>
<g >
<title>prepare_task_switch (2 samples, 0.01%)</title><rect x="1179.8" y="677" width="0.2" height="15.0" fill="rgb(252,105,54)" rx="2" ry="2" />
<text  x="1182.83" y="687.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1,946 samples, 13.75%)</title><rect x="520.3" y="389" width="162.2" height="15.0" fill="rgb(245,187,21)" rx="2" ry="2" />
<text  x="523.29" y="399.5" >rustposix::safeposix..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2 samples, 0.01%)</title><rect x="116.6" y="581" width="0.1" height="15.0" fill="rgb(241,35,51)" rx="2" ry="2" />
<text  x="119.56" y="591.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (4 samples, 0.03%)</title><rect x="765.0" y="181" width="0.3" height="15.0" fill="rgb(225,225,54)" rx="2" ry="2" />
<text  x="768.01" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.05%)</title><rect x="509.0" y="245" width="0.6" height="15.0" fill="rgb(248,33,47)" rx="2" ry="2" />
<text  x="512.03" y="255.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (4 samples, 0.03%)</title><rect x="743.2" y="181" width="0.4" height="15.0" fill="rgb(217,148,33)" rx="2" ry="2" />
<text  x="746.25" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (2 samples, 0.01%)</title><rect x="955.8" y="773" width="0.2" height="15.0" fill="rgb(234,97,32)" rx="2" ry="2" />
<text  x="958.78" y="783.5" ></text>
</g>
<g >
<title>std::fs::canonicalize (4 samples, 0.03%)</title><rect x="499.8" y="645" width="0.3" height="15.0" fill="rgb(247,52,27)" rx="2" ry="2" />
<text  x="502.78" y="655.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (6 samples, 0.04%)</title><rect x="547.3" y="229" width="0.5" height="15.0" fill="rgb(229,141,49)" rx="2" ry="2" />
<text  x="550.30" y="239.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (20 samples, 0.14%)</title><rect x="868.7" y="261" width="1.7" height="15.0" fill="rgb(230,173,43)" rx="2" ry="2" />
<text  x="871.74" y="271.5" ></text>
</g>
<g >
<title>ret_from_fork (325 samples, 2.30%)</title><rect x="952.6" y="837" width="27.1" height="15.0" fill="rgb(251,55,13)" rx="2" ry="2" />
<text  x="955.62" y="847.5" >r..</text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (7 samples, 0.05%)</title><rect x="547.8" y="229" width="0.6" height="15.0" fill="rgb(209,115,39)" rx="2" ry="2" />
<text  x="550.80" y="239.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.03%)</title><rect x="855.6" y="325" width="0.4" height="15.0" fill="rgb(243,99,23)" rx="2" ry="2" />
<text  x="858.64" y="335.5" ></text>
</g>
<g >
<title>evict (5 samples, 0.04%)</title><rect x="500.2" y="325" width="0.4" height="15.0" fill="rgb(216,101,0)" rx="2" ry="2" />
<text  x="503.19" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.06%)</title><rect x="831.9" y="213" width="0.7" height="15.0" fill="rgb(243,208,46)" rx="2" ry="2" />
<text  x="834.88" y="223.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (76 samples, 0.54%)</title><rect x="688.3" y="757" width="6.3" height="15.0" fill="rgb(241,201,21)" rx="2" ry="2" />
<text  x="691.30" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.10%)</title><rect x="882.8" y="837" width="1.2" height="15.0" fill="rgb(246,200,46)" rx="2" ry="2" />
<text  x="885.83" y="847.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (5 samples, 0.04%)</title><rect x="518.8" y="309" width="0.4" height="15.0" fill="rgb(221,203,51)" rx="2" ry="2" />
<text  x="521.79" y="319.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.03%)</title><rect x="875.2" y="517" width="0.3" height="15.0" fill="rgb(220,127,25)" rx="2" ry="2" />
<text  x="878.16" y="527.5" ></text>
</g>
<g >
<title>kcompactd (4 samples, 0.03%)</title><rect x="952.6" y="805" width="0.3" height="15.0" fill="rgb(249,30,24)" rx="2" ry="2" />
<text  x="955.62" y="815.5" ></text>
</g>
<g >
<title>ip_list_rcv_finish.constprop.0 (2 samples, 0.01%)</title><rect x="31.4" y="485" width="0.2" height="15.0" fill="rgb(223,171,47)" rx="2" ry="2" />
<text  x="34.43" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.01%)</title><rect x="832.4" y="133" width="0.1" height="15.0" fill="rgb(248,173,30)" rx="2" ry="2" />
<text  x="835.38" y="143.5" ></text>
</g>
<g >
<title>irq_exit_rcu (12 samples, 0.08%)</title><rect x="32.3" y="693" width="1.0" height="15.0" fill="rgb(252,155,34)" rx="2" ry="2" />
<text  x="35.26" y="703.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (185 samples, 1.31%)</title><rect x="656.3" y="261" width="15.4" height="15.0" fill="rgb(216,137,28)" rx="2" ry="2" />
<text  x="659.28" y="271.5" ></text>
</g>
<g >
<title>dput (6 samples, 0.04%)</title><rect x="500.2" y="437" width="0.5" height="15.0" fill="rgb(242,56,17)" rx="2" ry="2" />
<text  x="503.19" y="447.5" ></text>
</g>
<g >
<title>ext4_da_write_end (11 samples, 0.08%)</title><rect x="496.8" y="373" width="0.9" height="15.0" fill="rgb(227,206,17)" rx="2" ry="2" />
<text  x="499.78" y="383.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.02%)</title><rect x="875.2" y="421" width="0.2" height="15.0" fill="rgb(220,102,13)" rx="2" ry="2" />
<text  x="878.16" y="431.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (3 samples, 0.02%)</title><rect x="500.3" y="261" width="0.2" height="15.0" fill="rgb(206,55,39)" rx="2" ry="2" />
<text  x="503.28" y="271.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (18 samples, 0.13%)</title><rect x="493.4" y="677" width="1.5" height="15.0" fill="rgb(250,172,49)" rx="2" ry="2" />
<text  x="496.44" y="687.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (4 samples, 0.03%)</title><rect x="68.1" y="645" width="0.3" height="15.0" fill="rgb(253,166,31)" rx="2" ry="2" />
<text  x="71.12" y="655.5" ></text>
</g>
<g >
<title>open_last_lookups (4 samples, 0.03%)</title><rect x="499.4" y="421" width="0.3" height="15.0" fill="rgb(222,39,51)" rx="2" ry="2" />
<text  x="502.36" y="431.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (7 samples, 0.05%)</title><rect x="771.4" y="149" width="0.6" height="15.0" fill="rgb(243,4,0)" rx="2" ry="2" />
<text  x="774.43" y="159.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (76 samples, 0.54%)</title><rect x="688.3" y="629" width="6.3" height="15.0" fill="rgb(225,169,22)" rx="2" ry="2" />
<text  x="691.30" y="639.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (4 samples, 0.03%)</title><rect x="684.2" y="325" width="0.3" height="15.0" fill="rgb(233,13,34)" rx="2" ry="2" />
<text  x="687.21" y="335.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (3 samples, 0.02%)</title><rect x="496.9" y="325" width="0.2" height="15.0" fill="rgb(212,56,5)" rx="2" ry="2" />
<text  x="499.86" y="335.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (172 samples, 1.22%)</title><rect x="860.8" y="325" width="14.4" height="15.0" fill="rgb(243,79,1)" rx="2" ry="2" />
<text  x="863.81" y="335.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.01%)</title><rect x="107.5" y="821" width="0.1" height="15.0" fill="rgb(243,56,10)" rx="2" ry="2" />
<text  x="110.47" y="831.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_ptr (2 samples, 0.01%)</title><rect x="581.6" y="133" width="0.1" height="15.0" fill="rgb(239,54,23)" rx="2" ry="2" />
<text  x="584.57" y="143.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (1,527 samples, 10.79%)</title><rect x="546.0" y="357" width="127.3" height="15.0" fill="rgb(223,88,17)" rx="2" ry="2" />
<text  x="548.97" y="367.5" >rustposix::safe..</text>
</g>
<g >
<title>kick_ilb (3 samples, 0.02%)</title><rect x="68.2" y="629" width="0.2" height="15.0" fill="rgb(219,140,4)" rx="2" ry="2" />
<text  x="71.20" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="855.7" y="101" width="0.3" height="15.0" fill="rgb(238,153,12)" rx="2" ry="2" />
<text  x="858.73" y="111.5" ></text>
</g>
<g >
<title>alx_clean_rx_irq (4 samples, 0.03%)</title><rect x="984.1" y="581" width="0.4" height="15.0" fill="rgb(227,41,34)" rx="2" ry="2" />
<text  x="987.13" y="591.5" ></text>
</g>
<g >
<title>__switch_to (5 samples, 0.04%)</title><rect x="963.2" y="725" width="0.4" height="15.0" fill="rgb(230,107,17)" rx="2" ry="2" />
<text  x="966.21" y="735.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (2 samples, 0.01%)</title><rect x="810.0" y="229" width="0.1" height="15.0" fill="rgb(209,117,33)" rx="2" ry="2" />
<text  x="812.95" y="239.5" ></text>
</g>
<g >
<title>put_prev_task_fair (2 samples, 0.01%)</title><rect x="972.4" y="741" width="0.1" height="15.0" fill="rgb(231,163,7)" rx="2" ry="2" />
<text  x="975.38" y="751.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (9 samples, 0.06%)</title><rect x="506.8" y="357" width="0.7" height="15.0" fill="rgb(215,49,30)" rx="2" ry="2" />
<text  x="509.78" y="367.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (6 samples, 0.04%)</title><rect x="697.4" y="341" width="0.5" height="15.0" fill="rgb(239,192,11)" rx="2" ry="2" />
<text  x="700.39" y="351.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (301 samples, 2.13%)</title><rect x="764.3" y="805" width="25.1" height="15.0" fill="rgb(250,84,40)" rx="2" ry="2" />
<text  x="767.26" y="815.5" >N..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="764.8" y="165" width="0.2" height="15.0" fill="rgb(236,29,19)" rx="2" ry="2" />
<text  x="767.84" y="175.5" ></text>
</g>
<g >
<title>wb_writeback (8 samples, 0.06%)</title><rect x="978.5" y="741" width="0.6" height="15.0" fill="rgb(244,87,14)" rx="2" ry="2" />
<text  x="981.46" y="751.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.08%)</title><rect x="825.8" y="133" width="1.0" height="15.0" fill="rgb(240,40,10)" rx="2" ry="2" />
<text  x="828.79" y="143.5" ></text>
</g>
<g >
<title>rb_next (5 samples, 0.04%)</title><rect x="1186.5" y="629" width="0.4" height="15.0" fill="rgb(214,82,32)" rx="2" ry="2" />
<text  x="1189.50" y="639.5" ></text>
</g>
<g >
<title>pick_next_task_fair (37 samples, 0.26%)</title><rect x="968.0" y="725" width="3.0" height="15.0" fill="rgb(250,107,36)" rx="2" ry="2" />
<text  x="970.96" y="735.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="1153.1" y="629" width="0.2" height="15.0" fill="rgb(253,62,53)" rx="2" ry="2" />
<text  x="1156.15" y="639.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8_unchecked (3 samples, 0.02%)</title><rect x="639.3" y="213" width="0.2" height="15.0" fill="rgb(234,22,33)" rx="2" ry="2" />
<text  x="642.27" y="223.5" ></text>
</g>
<g >
<title>[librustposix.so] (2 samples, 0.01%)</title><rect x="742.8" y="757" width="0.2" height="15.0" fill="rgb(215,131,17)" rx="2" ry="2" />
<text  x="745.83" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.06%)</title><rect x="500.1" y="581" width="0.8" height="15.0" fill="rgb(246,40,7)" rx="2" ry="2" />
<text  x="503.11" y="591.5" ></text>
</g>
<g >
<title>cpuidle_select (9 samples, 0.06%)</title><rect x="1017.7" y="757" width="0.8" height="15.0" fill="rgb(210,4,13)" rx="2" ry="2" />
<text  x="1020.74" y="767.5" ></text>
</g>
<g >
<title>load_balance (3 samples, 0.02%)</title><rect x="979.4" y="725" width="0.2" height="15.0" fill="rgb(244,199,3)" rx="2" ry="2" />
<text  x="982.38" y="735.5" ></text>
</g>
<g >
<title>__queue_delayed_work (3 samples, 0.02%)</title><rect x="975.6" y="741" width="0.3" height="15.0" fill="rgb(221,136,35)" rx="2" ry="2" />
<text  x="978.63" y="751.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (34 samples, 0.24%)</title><rect x="649.7" y="197" width="2.8" height="15.0" fill="rgb(242,72,18)" rx="2" ry="2" />
<text  x="652.69" y="207.5" ></text>
</g>
<g >
<title>raise_softirq (2 samples, 0.01%)</title><rect x="1046.3" y="469" width="0.2" height="15.0" fill="rgb(221,52,46)" rx="2" ry="2" />
<text  x="1049.34" y="479.5" ></text>
</g>
<g >
<title>vfs_write (8 samples, 0.06%)</title><rect x="15.3" y="613" width="0.7" height="15.0" fill="rgb(249,55,21)" rx="2" ry="2" />
<text  x="18.34" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (2,297 samples, 16.23%)</title><rect x="493.4" y="709" width="191.5" height="15.0" fill="rgb(207,6,18)" rx="2" ry="2" />
<text  x="496.36" y="719.5" >rustposix::safeposix::dis..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.04%)</title><rect x="856.0" y="421" width="0.4" height="15.0" fill="rgb(217,117,25)" rx="2" ry="2" />
<text  x="858.98" y="431.5" ></text>
</g>
<g >
<title>vfs_write (37 samples, 0.26%)</title><rect x="495.1" y="517" width="3.1" height="15.0" fill="rgb(236,167,25)" rx="2" ry="2" />
<text  x="498.11" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.04%)</title><rect x="697.4" y="373" width="0.5" height="15.0" fill="rgb(245,152,48)" rx="2" ry="2" />
<text  x="700.39" y="383.5" ></text>
</g>
<g >
<title>update_blocked_averages (36 samples, 0.25%)</title><rect x="1066.5" y="549" width="3.0" height="15.0" fill="rgb(241,69,54)" rx="2" ry="2" />
<text  x="1069.51" y="559.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (300 samples, 2.12%)</title><rect x="764.3" y="565" width="25.1" height="15.0" fill="rgb(254,77,0)" rx="2" ry="2" />
<text  x="767.34" y="575.5" >s..</text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (9 samples, 0.06%)</title><rect x="852.4" y="165" width="0.7" height="15.0" fill="rgb(240,67,10)" rx="2" ry="2" />
<text  x="855.39" y="175.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (12 samples, 0.08%)</title><rect x="533.3" y="293" width="1.0" height="15.0" fill="rgb(227,100,51)" rx="2" ry="2" />
<text  x="536.30" y="303.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="1018.2" y="677" width="0.2" height="15.0" fill="rgb(206,214,2)" rx="2" ry="2" />
<text  x="1021.24" y="687.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (300 samples, 2.12%)</title><rect x="764.3" y="517" width="25.1" height="15.0" fill="rgb(243,227,8)" rx="2" ry="2" />
<text  x="767.34" y="527.5" >s..</text>
</g>
<g >
<title>swapper (3,600 samples, 25.44%)</title><rect x="889.8" y="853" width="300.2" height="15.0" fill="rgb(208,2,10)" rx="2" ry="2" />
<text  x="892.83" y="863.5" >swapper</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.04%)</title><rect x="835.3" y="101" width="0.5" height="15.0" fill="rgb(213,124,18)" rx="2" ry="2" />
<text  x="838.30" y="111.5" ></text>
</g>
<g >
<title>update_min_vruntime (4 samples, 0.03%)</title><rect x="966.1" y="661" width="0.4" height="15.0" fill="rgb(225,134,0)" rx="2" ry="2" />
<text  x="969.12" y="671.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (32 samples, 0.23%)</title><rect x="673.5" y="341" width="2.7" height="15.0" fill="rgb(206,98,10)" rx="2" ry="2" />
<text  x="676.54" y="351.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (37 samples, 0.26%)</title><rect x="522.0" y="325" width="3.1" height="15.0" fill="rgb(216,222,11)" rx="2" ry="2" />
<text  x="525.04" y="335.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (6 samples, 0.04%)</title><rect x="509.9" y="293" width="0.5" height="15.0" fill="rgb(239,183,50)" rx="2" ry="2" />
<text  x="512.95" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.02%)</title><rect x="809.9" y="261" width="0.2" height="15.0" fill="rgb(218,67,29)" rx="2" ry="2" />
<text  x="812.87" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (557 samples, 3.94%)</title><rect x="809.5" y="597" width="46.5" height="15.0" fill="rgb(214,219,22)" rx="2" ry="2" />
<text  x="812.54" y="607.5" >core..</text>
</g>
<g >
<title>link_path_walk.part.0 (2 samples, 0.01%)</title><rect x="499.8" y="453" width="0.1" height="15.0" fill="rgb(219,164,47)" rx="2" ry="2" />
<text  x="502.78" y="463.5" ></text>
</g>
<g >
<title>__unlink (7 samples, 0.05%)</title><rect x="114.8" y="645" width="0.6" height="15.0" fill="rgb(236,209,30)" rx="2" ry="2" />
<text  x="117.81" y="655.5" ></text>
</g>
<g >
<title>load_balance (19 samples, 0.13%)</title><rect x="66.5" y="645" width="1.6" height="15.0" fill="rgb(243,64,52)" rx="2" ry="2" />
<text  x="69.53" y="655.5" ></text>
</g>
<g >
<title>enqueue_task (4 samples, 0.03%)</title><rect x="989.9" y="517" width="0.3" height="15.0" fill="rgb(227,119,43)" rx="2" ry="2" />
<text  x="992.89" y="527.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.06%)</title><rect x="857.2" y="181" width="0.7" height="15.0" fill="rgb(249,29,43)" rx="2" ry="2" />
<text  x="860.23" y="191.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4 samples, 0.03%)</title><rect x="31.8" y="677" width="0.4" height="15.0" fill="rgb(235,55,52)" rx="2" ry="2" />
<text  x="34.85" y="687.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (54 samples, 0.38%)</title><rect x="643.9" y="213" width="4.5" height="15.0" fill="rgb(220,11,35)" rx="2" ry="2" />
<text  x="646.94" y="223.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (8 samples, 0.06%)</title><rect x="688.6" y="325" width="0.6" height="15.0" fill="rgb(217,101,15)" rx="2" ry="2" />
<text  x="691.55" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (4 samples, 0.03%)</title><rect x="499.8" y="533" width="0.3" height="15.0" fill="rgb(224,109,31)" rx="2" ry="2" />
<text  x="502.78" y="543.5" ></text>
</g>
<g >
<title>__libc_write (18 samples, 0.13%)</title><rect x="493.4" y="613" width="1.5" height="15.0" fill="rgb(252,122,38)" rx="2" ry="2" />
<text  x="496.44" y="623.5" ></text>
</g>
<g >
<title>vfs_iter_write (8 samples, 0.06%)</title><rect x="15.3" y="565" width="0.7" height="15.0" fill="rgb(207,131,9)" rx="2" ry="2" />
<text  x="18.34" y="575.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_object_value (19 samples, 0.13%)</title><rect x="671.7" y="293" width="1.6" height="15.0" fill="rgb(216,155,32)" rx="2" ry="2" />
<text  x="674.71" y="303.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (52 samples, 0.37%)</title><rect x="1061.7" y="501" width="4.3" height="15.0" fill="rgb(225,59,11)" rx="2" ry="2" />
<text  x="1064.68" y="511.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.01%)</title><rect x="548.2" y="197" width="0.2" height="15.0" fill="rgb(216,21,1)" rx="2" ry="2" />
<text  x="551.22" y="207.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (2 samples, 0.01%)</title><rect x="512.3" y="261" width="0.2" height="15.0" fill="rgb(242,121,18)" rx="2" ry="2" />
<text  x="515.28" y="271.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (229 samples, 1.62%)</title><rect x="697.4" y="613" width="19.1" height="15.0" fill="rgb(246,61,29)" rx="2" ry="2" />
<text  x="700.39" y="623.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (10 samples, 0.07%)</title><rect x="629.5" y="149" width="0.9" height="15.0" fill="rgb(221,10,46)" rx="2" ry="2" />
<text  x="632.52" y="159.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::as_bytes (3 samples, 0.02%)</title><rect x="638.2" y="245" width="0.2" height="15.0" fill="rgb(206,84,11)" rx="2" ry="2" />
<text  x="641.19" y="255.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.01%)</title><rect x="806.9" y="821" width="0.1" height="15.0" fill="rgb(237,221,14)" rx="2" ry="2" />
<text  x="809.87" y="831.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (2 samples, 0.01%)</title><rect x="494.5" y="325" width="0.2" height="15.0" fill="rgb(245,9,10)" rx="2" ry="2" />
<text  x="497.52" y="335.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (42 samples, 0.30%)</title><rect x="607.3" y="213" width="3.5" height="15.0" fill="rgb(248,105,9)" rx="2" ry="2" />
<text  x="610.25" y="223.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (4 samples, 0.03%)</title><rect x="1188.2" y="661" width="0.3" height="15.0" fill="rgb(220,149,7)" rx="2" ry="2" />
<text  x="1191.17" y="671.5" ></text>
</g>
<g >
<title>scheduler_tick (3 samples, 0.02%)</title><rect x="987.7" y="565" width="0.3" height="15.0" fill="rgb(236,215,52)" rx="2" ry="2" />
<text  x="990.72" y="575.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (557 samples, 3.94%)</title><rect x="809.5" y="757" width="46.5" height="15.0" fill="rgb(228,154,12)" rx="2" ry="2" />
<text  x="812.54" y="767.5" >serd..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (163 samples, 1.15%)</title><rect x="597.2" y="245" width="13.6" height="15.0" fill="rgb(244,145,40)" rx="2" ry="2" />
<text  x="600.17" y="255.5" ></text>
</g>
<g >
<title>__schedule (10 samples, 0.07%)</title><rect x="1019.2" y="757" width="0.8" height="15.0" fill="rgb(236,134,12)" rx="2" ry="2" />
<text  x="1022.15" y="767.5" ></text>
</g>
<g >
<title>event_function_call (63 samples, 0.45%)</title><rect x="10.1" y="613" width="5.2" height="15.0" fill="rgb(242,12,49)" rx="2" ry="2" />
<text  x="13.08" y="623.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (65 samples, 0.46%)</title><rect x="689.2" y="277" width="5.4" height="15.0" fill="rgb(237,92,54)" rx="2" ry="2" />
<text  x="692.22" y="287.5" ></text>
</g>
<g >
<title>__libc_open64 (14 samples, 0.10%)</title><rect x="498.5" y="533" width="1.2" height="15.0" fill="rgb(221,62,18)" rx="2" ry="2" />
<text  x="501.53" y="543.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (300 samples, 2.12%)</title><rect x="764.3" y="629" width="25.1" height="15.0" fill="rgb(253,206,2)" rx="2" ry="2" />
<text  x="767.34" y="639.5" >s..</text>
</g>
<g >
<title>menu_select (19 samples, 0.13%)</title><rect x="62.8" y="677" width="1.6" height="15.0" fill="rgb(225,123,43)" rx="2" ry="2" />
<text  x="65.78" y="687.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (8 samples, 0.06%)</title><rect x="15.3" y="533" width="0.7" height="15.0" fill="rgb(211,114,42)" rx="2" ry="2" />
<text  x="18.34" y="543.5" ></text>
</g>
<g >
<title>rcu_idle_enter (4 samples, 0.03%)</title><rect x="1141.3" y="661" width="0.3" height="15.0" fill="rgb(212,50,2)" rx="2" ry="2" />
<text  x="1144.31" y="671.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (320 samples, 2.26%)</title><rect x="1054.3" y="613" width="26.6" height="15.0" fill="rgb(227,110,22)" rx="2" ry="2" />
<text  x="1057.26" y="623.5" >d..</text>
</g>
<g >
<title>__note_gp_changes (3 samples, 0.02%)</title><rect x="973.5" y="773" width="0.3" height="15.0" fill="rgb(222,167,3)" rx="2" ry="2" />
<text  x="976.54" y="783.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (557 samples, 3.94%)</title><rect x="809.5" y="661" width="46.5" height="15.0" fill="rgb(219,60,28)" rx="2" ry="2" />
<text  x="812.54" y="671.5" >serd..</text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (10 samples, 0.07%)</title><rect x="744.6" y="149" width="0.8" height="15.0" fill="rgb(231,134,11)" rx="2" ry="2" />
<text  x="747.58" y="159.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (4 samples, 0.03%)</title><rect x="1022.2" y="709" width="0.4" height="15.0" fill="rgb(213,217,48)" rx="2" ry="2" />
<text  x="1025.24" y="719.5" ></text>
</g>
<g >
<title>do_iter_read (11 samples, 0.08%)</title><rect x="115.5" y="469" width="0.9" height="15.0" fill="rgb(214,13,1)" rx="2" ry="2" />
<text  x="118.48" y="479.5" ></text>
</g>
<g >
<title>timerqueue_add (6 samples, 0.04%)</title><rect x="1187.6" y="629" width="0.5" height="15.0" fill="rgb(205,210,4)" rx="2" ry="2" />
<text  x="1190.58" y="639.5" ></text>
</g>
<g >
<title>rcu_core_si (5 samples, 0.04%)</title><rect x="46.5" y="565" width="0.4" height="15.0" fill="rgb(232,71,4)" rx="2" ry="2" />
<text  x="49.52" y="575.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (255 samples, 1.80%)</title><rect x="743.0" y="677" width="21.3" height="15.0" fill="rgb(253,130,17)" rx="2" ry="2" />
<text  x="746.00" y="687.5" >s..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (4 samples, 0.03%)</title><rect x="875.2" y="645" width="0.3" height="15.0" fill="rgb(223,40,44)" rx="2" ry="2" />
<text  x="878.16" y="655.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (36 samples, 0.25%)</title><rect x="522.1" y="309" width="3.0" height="15.0" fill="rgb(251,127,22)" rx="2" ry="2" />
<text  x="525.12" y="319.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (7 samples, 0.05%)</title><rect x="743.0" y="373" width="0.6" height="15.0" fill="rgb(217,58,35)" rx="2" ry="2" />
<text  x="746.00" y="383.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (16 samples, 0.11%)</title><rect x="634.9" y="165" width="1.4" height="15.0" fill="rgb(249,152,47)" rx="2" ry="2" />
<text  x="637.94" y="175.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (2 samples, 0.01%)</title><rect x="47.8" y="501" width="0.1" height="15.0" fill="rgb(234,126,16)" rx="2" ry="2" />
<text  x="50.77" y="511.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (32 samples, 0.23%)</title><rect x="679.4" y="325" width="2.6" height="15.0" fill="rgb(206,141,2)" rx="2" ry="2" />
<text  x="682.38" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.02%)</title><rect x="875.2" y="133" width="0.2" height="15.0" fill="rgb(246,129,45)" rx="2" ry="2" />
<text  x="878.16" y="143.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (52 samples, 0.37%)</title><rect x="832.6" y="213" width="4.4" height="15.0" fill="rgb(211,151,10)" rx="2" ry="2" />
<text  x="835.63" y="223.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (6 samples, 0.04%)</title><rect x="697.4" y="277" width="0.5" height="15.0" fill="rgb(246,211,37)" rx="2" ry="2" />
<text  x="700.39" y="287.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (12 samples, 0.08%)</title><rect x="493.4" y="389" width="1.0" height="15.0" fill="rgb(233,170,6)" rx="2" ry="2" />
<text  x="496.44" y="399.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (5 samples, 0.04%)</title><rect x="856.0" y="469" width="0.4" height="15.0" fill="rgb(234,105,2)" rx="2" ry="2" />
<text  x="858.98" y="479.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (221 samples, 1.56%)</title><rect x="856.7" y="501" width="18.5" height="15.0" fill="rgb(226,79,35)" rx="2" ry="2" />
<text  x="859.73" y="511.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::State as core::cmp::PartialEq&gt;::eq (5 samples, 0.04%)</title><rect x="553.2" y="293" width="0.4" height="15.0" fill="rgb(254,79,35)" rx="2" ry="2" />
<text  x="556.22" y="303.5" ></text>
</g>
<g >
<title>ext4_bio_write_page (6 samples, 0.04%)</title><rect x="976.9" y="581" width="0.5" height="15.0" fill="rgb(221,173,7)" rx="2" ry="2" />
<text  x="979.88" y="591.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="764.0" y="181" width="0.2" height="15.0" fill="rgb(222,90,35)" rx="2" ry="2" />
<text  x="767.01" y="191.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (4 samples, 0.03%)</title><rect x="649.3" y="229" width="0.3" height="15.0" fill="rgb(246,42,20)" rx="2" ry="2" />
<text  x="652.28" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.04%)</title><rect x="535.6" y="213" width="0.4" height="15.0" fill="rgb(205,124,45)" rx="2" ry="2" />
<text  x="538.63" y="223.5" ></text>
</g>
<g >
<title>itoa::Buffer::new (40 samples, 0.28%)</title><rect x="639.5" y="245" width="3.4" height="15.0" fill="rgb(226,162,47)" rx="2" ry="2" />
<text  x="642.52" y="255.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (2 samples, 0.01%)</title><rect x="697.7" y="165" width="0.2" height="15.0" fill="rgb(231,120,33)" rx="2" ry="2" />
<text  x="700.72" y="175.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (4 samples, 0.03%)</title><rect x="503.8" y="437" width="0.3" height="15.0" fill="rgb(247,24,8)" rx="2" ry="2" />
<text  x="506.78" y="447.5" ></text>
</g>
<g >
<title>DynArrayGet (182 samples, 1.29%)</title><rect x="159.7" y="773" width="15.1" height="15.0" fill="rgb(226,49,25)" rx="2" ry="2" />
<text  x="162.67" y="783.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (177 samples, 1.25%)</title><rect x="726.3" y="325" width="14.8" height="15.0" fill="rgb(241,60,51)" rx="2" ry="2" />
<text  x="729.32" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.08%)</title><rect x="837.0" y="213" width="0.9" height="15.0" fill="rgb(249,212,40)" rx="2" ry="2" />
<text  x="839.97" y="223.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (35 samples, 0.25%)</title><rect x="507.5" y="357" width="2.9" height="15.0" fill="rgb(228,92,15)" rx="2" ry="2" />
<text  x="510.53" y="367.5" ></text>
</g>
<g >
<title>itoa::Buffer::new (39 samples, 0.28%)</title><rect x="623.8" y="245" width="3.2" height="15.0" fill="rgb(249,63,14)" rx="2" ry="2" />
<text  x="626.76" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;std::fs::File&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="494.9" y="645" width="0.2" height="15.0" fill="rgb(236,184,52)" rx="2" ry="2" />
<text  x="497.94" y="655.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.04%)</title><rect x="856.0" y="453" width="0.4" height="15.0" fill="rgb(243,101,5)" rx="2" ry="2" />
<text  x="858.98" y="463.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.02%)</title><rect x="683.3" y="293" width="0.2" height="15.0" fill="rgb(226,209,25)" rx="2" ry="2" />
<text  x="686.30" y="303.5" ></text>
</g>
<g >
<title>__update_blocked_fair (16 samples, 0.11%)</title><rect x="1066.6" y="533" width="1.3" height="15.0" fill="rgb(220,8,4)" rx="2" ry="2" />
<text  x="1069.60" y="543.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.04%)</title><rect x="764.3" y="341" width="0.5" height="15.0" fill="rgb(218,228,44)" rx="2" ry="2" />
<text  x="767.34" y="351.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (8 samples, 0.06%)</title><rect x="31.2" y="677" width="0.6" height="15.0" fill="rgb(224,85,17)" rx="2" ry="2" />
<text  x="34.18" y="687.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="889.0" y="613" width="0.2" height="15.0" fill="rgb(246,145,28)" rx="2" ry="2" />
<text  x="892.00" y="623.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (4 samples, 0.03%)</title><rect x="1177.3" y="613" width="0.4" height="15.0" fill="rgb(249,181,31)" rx="2" ry="2" />
<text  x="1180.33" y="623.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (5 samples, 0.04%)</title><rect x="69.1" y="709" width="0.4" height="15.0" fill="rgb(213,158,35)" rx="2" ry="2" />
<text  x="72.12" y="719.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (14 samples, 0.10%)</title><rect x="874.0" y="261" width="1.2" height="15.0" fill="rgb(208,30,5)" rx="2" ry="2" />
<text  x="876.99" y="271.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.05%)</title><rect x="857.9" y="229" width="0.6" height="15.0" fill="rgb(218,218,46)" rx="2" ry="2" />
<text  x="860.90" y="239.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (9 samples, 0.06%)</title><rect x="500.1" y="629" width="0.8" height="15.0" fill="rgb(237,45,44)" rx="2" ry="2" />
<text  x="503.11" y="639.5" ></text>
</g>
<g >
<title>__perf_event_enable (63 samples, 0.45%)</title><rect x="10.1" y="533" width="5.2" height="15.0" fill="rgb(239,215,50)" rx="2" ry="2" />
<text  x="13.08" y="543.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (198 samples, 1.40%)</title><rect x="726.3" y="357" width="16.5" height="15.0" fill="rgb(212,119,14)" rx="2" ry="2" />
<text  x="729.32" y="367.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.04%)</title><rect x="675.8" y="293" width="0.4" height="15.0" fill="rgb(234,215,33)" rx="2" ry="2" />
<text  x="678.79" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (69 samples, 0.49%)</title><rect x="585.7" y="165" width="5.8" height="15.0" fill="rgb(214,160,54)" rx="2" ry="2" />
<text  x="588.74" y="175.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (5 samples, 0.04%)</title><rect x="653.8" y="133" width="0.4" height="15.0" fill="rgb(205,197,7)" rx="2" ry="2" />
<text  x="656.78" y="143.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.01%)</title><rect x="30.5" y="773" width="0.2" height="15.0" fill="rgb(222,81,43)" rx="2" ry="2" />
<text  x="33.51" y="783.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (229 samples, 1.62%)</title><rect x="697.4" y="757" width="19.1" height="15.0" fill="rgb(210,84,47)" rx="2" ry="2" />
<text  x="700.39" y="767.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (3 samples, 0.02%)</title><rect x="1019.3" y="709" width="0.3" height="15.0" fill="rgb(228,12,22)" rx="2" ry="2" />
<text  x="1022.32" y="719.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (229 samples, 1.62%)</title><rect x="697.4" y="565" width="19.1" height="15.0" fill="rgb(244,228,19)" rx="2" ry="2" />
<text  x="700.39" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.05%)</title><rect x="743.0" y="357" width="0.6" height="15.0" fill="rgb(215,165,13)" rx="2" ry="2" />
<text  x="746.00" y="367.5" ></text>
</g>
<g >
<title>iput (7 samples, 0.05%)</title><rect x="114.8" y="405" width="0.6" height="15.0" fill="rgb(251,17,30)" rx="2" ry="2" />
<text  x="117.81" y="415.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (2 samples, 0.01%)</title><rect x="43.2" y="517" width="0.2" height="15.0" fill="rgb(228,34,38)" rx="2" ry="2" />
<text  x="46.19" y="527.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (21 samples, 0.15%)</title><rect x="810.5" y="149" width="1.8" height="15.0" fill="rgb(236,103,45)" rx="2" ry="2" />
<text  x="813.54" y="159.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (18 samples, 0.13%)</title><rect x="493.4" y="453" width="1.5" height="15.0" fill="rgb(220,1,19)" rx="2" ry="2" />
<text  x="496.44" y="463.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (2 samples, 0.01%)</title><rect x="512.3" y="277" width="0.2" height="15.0" fill="rgb(214,215,3)" rx="2" ry="2" />
<text  x="515.28" y="287.5" ></text>
</g>
<g >
<title>llist_reverse_order (6 samples, 0.04%)</title><rect x="1161.8" y="693" width="0.5" height="15.0" fill="rgb(210,72,23)" rx="2" ry="2" />
<text  x="1164.82" y="703.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.01%)</title><rect x="809.5" y="437" width="0.2" height="15.0" fill="rgb(221,5,47)" rx="2" ry="2" />
<text  x="812.54" y="447.5" ></text>
</g>
<g >
<title>__update_idle_core (3 samples, 0.02%)</title><rect x="1165.5" y="677" width="0.2" height="15.0" fill="rgb(252,180,10)" rx="2" ry="2" />
<text  x="1168.49" y="687.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (4 samples, 0.03%)</title><rect x="524.1" y="229" width="0.4" height="15.0" fill="rgb(235,194,38)" rx="2" ry="2" />
<text  x="527.12" y="239.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.06%)</title><rect x="688.5" y="389" width="0.7" height="15.0" fill="rgb(248,175,51)" rx="2" ry="2" />
<text  x="691.47" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.03%)</title><rect x="855.6" y="213" width="0.4" height="15.0" fill="rgb(238,182,11)" rx="2" ry="2" />
<text  x="858.64" y="223.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (48 samples, 0.34%)</title><rect x="856.8" y="405" width="4.0" height="15.0" fill="rgb(244,159,36)" rx="2" ry="2" />
<text  x="859.81" y="415.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_object (17 samples, 0.12%)</title><rect x="548.6" y="309" width="1.4" height="15.0" fill="rgb(253,115,2)" rx="2" ry="2" />
<text  x="551.55" y="319.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (3 samples, 0.02%)</title><rect x="986.2" y="469" width="0.3" height="15.0" fill="rgb(208,212,22)" rx="2" ry="2" />
<text  x="989.22" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="632.9" y="149" width="0.2" height="15.0" fill="rgb(245,135,37)" rx="2" ry="2" />
<text  x="635.94" y="159.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.02%)</title><rect x="875.2" y="373" width="0.2" height="15.0" fill="rgb(235,219,32)" rx="2" ry="2" />
<text  x="878.16" y="383.5" ></text>
</g>
<g >
<title>ksys_write (18 samples, 0.13%)</title><rect x="493.4" y="549" width="1.5" height="15.0" fill="rgb(244,32,52)" rx="2" ry="2" />
<text  x="496.44" y="559.5" ></text>
</g>
<g >
<title>rcu_gp_init (5 samples, 0.04%)</title><rect x="29.9" y="789" width="0.4" height="15.0" fill="rgb(249,143,9)" rx="2" ry="2" />
<text  x="32.93" y="799.5" ></text>
</g>
<g >
<title>tick_program_event (2 samples, 0.01%)</title><rect x="69.4" y="645" width="0.1" height="15.0" fill="rgb(250,20,0)" rx="2" ry="2" />
<text  x="72.37" y="655.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.03%)</title><rect x="1155.0" y="629" width="0.3" height="15.0" fill="rgb(207,112,38)" rx="2" ry="2" />
<text  x="1157.98" y="639.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (8 samples, 0.06%)</title><rect x="741.1" y="213" width="0.6" height="15.0" fill="rgb(245,155,16)" rx="2" ry="2" />
<text  x="744.08" y="223.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::len (13 samples, 0.09%)</title><rect x="870.8" y="261" width="1.1" height="15.0" fill="rgb(215,80,45)" rx="2" ry="2" />
<text  x="873.82" y="271.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (2 samples, 0.01%)</title><rect x="1056.0" y="517" width="0.2" height="15.0" fill="rgb(251,100,33)" rx="2" ry="2" />
<text  x="1059.01" y="527.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.03%)</title><rect x="530.2" y="293" width="0.3" height="15.0" fill="rgb(207,56,21)" rx="2" ry="2" />
<text  x="533.21" y="303.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="31.4" y="501" width="0.3" height="15.0" fill="rgb(212,112,31)" rx="2" ry="2" />
<text  x="34.43" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (18 samples, 0.13%)</title><rect x="493.4" y="629" width="1.5" height="15.0" fill="rgb(210,175,31)" rx="2" ry="2" />
<text  x="496.44" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (557 samples, 3.94%)</title><rect x="809.5" y="741" width="46.5" height="15.0" fill="rgb(213,227,51)" rx="2" ry="2" />
<text  x="812.54" y="751.5" >serd..</text>
</g>
<g >
<title>_find_next_bit.constprop.0 (2 samples, 0.01%)</title><rect x="957.3" y="757" width="0.2" height="15.0" fill="rgb(234,12,7)" rx="2" ry="2" />
<text  x="960.29" y="767.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (5 samples, 0.04%)</title><rect x="115.0" y="277" width="0.4" height="15.0" fill="rgb(233,73,39)" rx="2" ry="2" />
<text  x="117.98" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.14%)</title><rect x="522.8" y="261" width="1.7" height="15.0" fill="rgb(222,126,35)" rx="2" ry="2" />
<text  x="525.79" y="271.5" ></text>
</g>
<g >
<title>asm_common_interrupt (11 samples, 0.08%)</title><rect x="30.9" y="725" width="0.9" height="15.0" fill="rgb(254,223,43)" rx="2" ry="2" />
<text  x="33.93" y="735.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (10 samples, 0.07%)</title><rect x="744.6" y="133" width="0.8" height="15.0" fill="rgb(210,146,50)" rx="2" ry="2" />
<text  x="747.58" y="143.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (12 samples, 0.08%)</title><rect x="67.1" y="597" width="1.0" height="15.0" fill="rgb(210,175,28)" rx="2" ry="2" />
<text  x="70.12" y="607.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.01%)</title><rect x="540.2" y="261" width="0.2" height="15.0" fill="rgb(230,133,2)" rx="2" ry="2" />
<text  x="543.22" y="271.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (32 samples, 0.23%)</title><rect x="507.8" y="341" width="2.6" height="15.0" fill="rgb(251,72,47)" rx="2" ry="2" />
<text  x="510.78" y="351.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (2 samples, 0.01%)</title><rect x="545.8" y="293" width="0.2" height="15.0" fill="rgb(206,128,17)" rx="2" ry="2" />
<text  x="548.80" y="303.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (17 samples, 0.12%)</title><rect x="115.4" y="805" width="1.4" height="15.0" fill="rgb(214,220,30)" rx="2" ry="2" />
<text  x="118.39" y="815.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 0.11%)</title><rect x="540.1" y="341" width="1.4" height="15.0" fill="rgb(250,200,37)" rx="2" ry="2" />
<text  x="543.13" y="351.5" ></text>
</g>
<g >
<title>rcu_gp_cleanup (12 samples, 0.08%)</title><rect x="954.2" y="789" width="1.0" height="15.0" fill="rgb(214,210,31)" rx="2" ry="2" />
<text  x="957.20" y="799.5" ></text>
</g>
<g >
<title>rcu_idle_exit (3 samples, 0.02%)</title><rect x="1144.5" y="677" width="0.2" height="15.0" fill="rgb(217,157,40)" rx="2" ry="2" />
<text  x="1147.47" y="687.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (4 samples, 0.03%)</title><rect x="837.6" y="181" width="0.3" height="15.0" fill="rgb(249,55,22)" rx="2" ry="2" />
<text  x="840.55" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.04%)</title><rect x="546.9" y="213" width="0.4" height="15.0" fill="rgb(213,29,36)" rx="2" ry="2" />
<text  x="549.89" y="223.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (10 samples, 0.07%)</title><rect x="533.5" y="277" width="0.8" height="15.0" fill="rgb(215,180,36)" rx="2" ry="2" />
<text  x="536.46" y="287.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (34 samples, 0.24%)</title><rect x="604.3" y="197" width="2.8" height="15.0" fill="rgb(245,57,37)" rx="2" ry="2" />
<text  x="607.25" y="207.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (48 samples, 0.34%)</title><rect x="983.2" y="661" width="4.0" height="15.0" fill="rgb(236,66,54)" rx="2" ry="2" />
<text  x="986.22" y="671.5" ></text>
</g>
<g >
<title>enqueue_entity (5 samples, 0.04%)</title><rect x="32.6" y="485" width="0.4" height="15.0" fill="rgb(207,60,35)" rx="2" ry="2" />
<text  x="35.60" y="495.5" ></text>
</g>
<g >
<title>__set_page_dirty (3 samples, 0.02%)</title><rect x="496.9" y="309" width="0.2" height="15.0" fill="rgb(246,38,19)" rx="2" ry="2" />
<text  x="499.86" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.07%)</title><rect x="677.2" y="277" width="0.8" height="15.0" fill="rgb(210,141,46)" rx="2" ry="2" />
<text  x="680.21" y="287.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (15 samples, 0.11%)</title><rect x="857.2" y="261" width="1.3" height="15.0" fill="rgb(231,27,6)" rx="2" ry="2" />
<text  x="860.23" y="271.5" ></text>
</g>
<g >
<title>get_typical_interval (35 samples, 0.25%)</title><rect x="1148.6" y="661" width="3.0" height="15.0" fill="rgb(207,195,52)" rx="2" ry="2" />
<text  x="1151.64" y="671.5" ></text>
</g>
<g >
<title>poll_idle (44 samples, 0.31%)</title><rect x="1137.3" y="661" width="3.7" height="15.0" fill="rgb(254,157,13)" rx="2" ry="2" />
<text  x="1140.30" y="671.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.02%)</title><rect x="840.8" y="245" width="0.3" height="15.0" fill="rgb(248,33,7)" rx="2" ry="2" />
<text  x="843.80" y="255.5" ></text>
</g>
<g >
<title>schedule_idle (40 samples, 0.28%)</title><rect x="65.5" y="709" width="3.4" height="15.0" fill="rgb(214,124,0)" rx="2" ry="2" />
<text  x="68.53" y="719.5" ></text>
</g>
<g >
<title>set_next_entity (2 samples, 0.01%)</title><rect x="1019.6" y="725" width="0.1" height="15.0" fill="rgb(213,174,39)" rx="2" ry="2" />
<text  x="1022.57" y="735.5" ></text>
</g>
<g >
<title>destroy_inode (7 samples, 0.05%)</title><rect x="114.8" y="501" width="0.6" height="15.0" fill="rgb(226,29,51)" rx="2" ry="2" />
<text  x="117.81" y="511.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (6 samples, 0.04%)</title><rect x="532.7" y="309" width="0.5" height="15.0" fill="rgb(229,41,28)" rx="2" ry="2" />
<text  x="535.71" y="319.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (213 samples, 1.51%)</title><rect x="837.9" y="389" width="17.7" height="15.0" fill="rgb(233,187,42)" rx="2" ry="2" />
<text  x="840.88" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="574.5" y="133" width="0.2" height="15.0" fill="rgb(205,122,53)" rx="2" ry="2" />
<text  x="577.49" y="143.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.02%)</title><rect x="837.0" y="133" width="0.2" height="15.0" fill="rgb(226,95,45)" rx="2" ry="2" />
<text  x="839.97" y="143.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (4 samples, 0.03%)</title><rect x="813.6" y="85" width="0.4" height="15.0" fill="rgb(235,129,22)" rx="2" ry="2" />
<text  x="816.62" y="95.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (12 samples, 0.08%)</title><rect x="32.3" y="661" width="1.0" height="15.0" fill="rgb(218,54,24)" rx="2" ry="2" />
<text  x="35.26" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (563 samples, 3.98%)</title><rect x="809.5" y="805" width="46.9" height="15.0" fill="rgb(215,9,0)" rx="2" ry="2" />
<text  x="812.45" y="815.5" >rust..</text>
</g>
<g >
<title>account_idle_ticks (2 samples, 0.01%)</title><rect x="1184.3" y="693" width="0.2" height="15.0" fill="rgb(226,221,31)" rx="2" ry="2" />
<text  x="1187.33" y="703.5" ></text>
</g>
<g >
<title>kthread (325 samples, 2.30%)</title><rect x="952.6" y="821" width="27.1" height="15.0" fill="rgb(235,65,33)" rx="2" ry="2" />
<text  x="955.62" y="831.5" >k..</text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.01%)</title><rect x="542.8" y="197" width="0.2" height="15.0" fill="rgb(249,111,26)" rx="2" ry="2" />
<text  x="545.80" y="207.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (2,203 samples, 15.57%)</title><rect x="501.1" y="517" width="183.7" height="15.0" fill="rgb(233,149,39)" rx="2" ry="2" />
<text  x="504.11" y="527.5" >serde::ser::Serializer:..</text>
</g>
<g >
<title>std::fs::remove_file (9 samples, 0.06%)</title><rect x="500.1" y="645" width="0.8" height="15.0" fill="rgb(231,74,5)" rx="2" ry="2" />
<text  x="503.11" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (17 samples, 0.12%)</title><rect x="724.9" y="389" width="1.4" height="15.0" fill="rgb(207,85,39)" rx="2" ry="2" />
<text  x="727.90" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.04%)</title><rect x="89.9" y="821" width="0.4" height="15.0" fill="rgb(252,146,5)" rx="2" ry="2" />
<text  x="92.88" y="831.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (557 samples, 3.94%)</title><rect x="809.5" y="709" width="46.5" height="15.0" fill="rgb(205,64,4)" rx="2" ry="2" />
<text  x="812.54" y="719.5" >serd..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (19 samples, 0.13%)</title><rect x="602.1" y="165" width="1.6" height="15.0" fill="rgb(221,42,34)" rx="2" ry="2" />
<text  x="605.08" y="175.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_ptr (2 samples, 0.01%)</title><rect x="610.6" y="197" width="0.2" height="15.0" fill="rgb(247,180,48)" rx="2" ry="2" />
<text  x="613.59" y="207.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (4 samples, 0.03%)</title><rect x="675.5" y="245" width="0.3" height="15.0" fill="rgb(220,42,9)" rx="2" ry="2" />
<text  x="678.46" y="255.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (16 samples, 0.11%)</title><rect x="789.7" y="805" width="1.3" height="15.0" fill="rgb(233,4,0)" rx="2" ry="2" />
<text  x="792.69" y="815.5" ></text>
</g>
<g >
<title>napi_complete_done (4 samples, 0.03%)</title><rect x="31.4" y="581" width="0.4" height="15.0" fill="rgb(210,173,13)" rx="2" ry="2" />
<text  x="34.43" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.01%)</title><rect x="523.8" y="181" width="0.2" height="15.0" fill="rgb(244,29,28)" rx="2" ry="2" />
<text  x="526.79" y="191.5" ></text>
</g>
<g >
<title>schedule_timeout (140 samples, 0.99%)</title><rect x="960.9" y="773" width="11.6" height="15.0" fill="rgb(205,174,46)" rx="2" ry="2" />
<text  x="963.87" y="783.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (4 samples, 0.03%)</title><rect x="837.6" y="149" width="0.3" height="15.0" fill="rgb(242,172,46)" rx="2" ry="2" />
<text  x="840.55" y="159.5" ></text>
</g>
<g >
<title>core::mem::uninitialized (8 samples, 0.06%)</title><rect x="859.1" y="165" width="0.6" height="15.0" fill="rgb(233,85,24)" rx="2" ry="2" />
<text  x="862.06" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (32 samples, 0.23%)</title><rect x="769.3" y="181" width="2.7" height="15.0" fill="rgb(208,163,47)" rx="2" ry="2" />
<text  x="772.35" y="191.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (76 samples, 0.54%)</title><rect x="688.3" y="597" width="6.3" height="15.0" fill="rgb(230,43,0)" rx="2" ry="2" />
<text  x="691.30" y="607.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (300 samples, 2.12%)</title><rect x="764.3" y="405" width="25.1" height="15.0" fill="rgb(242,204,22)" rx="2" ry="2" />
<text  x="767.34" y="415.5" >s..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (76 samples, 0.54%)</title><rect x="688.3" y="421" width="6.3" height="15.0" fill="rgb(209,18,48)" rx="2" ry="2" />
<text  x="691.30" y="431.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (3 samples, 0.02%)</title><rect x="493.9" y="325" width="0.2" height="15.0" fill="rgb(240,131,52)" rx="2" ry="2" />
<text  x="496.86" y="335.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (4 samples, 0.03%)</title><rect x="495.9" y="341" width="0.4" height="15.0" fill="rgb(219,120,9)" rx="2" ry="2" />
<text  x="498.94" y="351.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (2 samples, 0.01%)</title><rect x="549.4" y="213" width="0.2" height="15.0" fill="rgb(221,210,40)" rx="2" ry="2" />
<text  x="552.39" y="223.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (7 samples, 0.05%)</title><rect x="1157.8" y="661" width="0.6" height="15.0" fill="rgb(239,52,24)" rx="2" ry="2" />
<text  x="1160.82" y="671.5" ></text>
</g>
<g >
<title>perf_event_task_tick (54 samples, 0.38%)</title><rect x="1041.6" y="485" width="4.5" height="15.0" fill="rgb(252,206,35)" rx="2" ry="2" />
<text  x="1044.58" y="495.5" ></text>
</g>
<g >
<title>run_timer_softirq (8 samples, 0.06%)</title><rect x="32.5" y="629" width="0.7" height="15.0" fill="rgb(228,217,45)" rx="2" ry="2" />
<text  x="35.51" y="639.5" ></text>
</g>
<g >
<title>task_work_run (4 samples, 0.03%)</title><rect x="952.2" y="757" width="0.3" height="15.0" fill="rgb(209,218,46)" rx="2" ry="2" />
<text  x="955.20" y="767.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (4 samples, 0.03%)</title><rect x="28.8" y="661" width="0.4" height="15.0" fill="rgb(218,103,42)" rx="2" ry="2" />
<text  x="31.84" y="671.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (19 samples, 0.13%)</title><rect x="714.8" y="261" width="1.6" height="15.0" fill="rgb(222,111,41)" rx="2" ry="2" />
<text  x="717.81" y="271.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::len (2 samples, 0.01%)</title><rect x="857.1" y="261" width="0.1" height="15.0" fill="rgb(231,53,32)" rx="2" ry="2" />
<text  x="860.06" y="271.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (18 samples, 0.13%)</title><rect x="827.0" y="133" width="1.5" height="15.0" fill="rgb(233,188,3)" rx="2" ry="2" />
<text  x="830.04" y="143.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (2 samples, 0.01%)</title><rect x="771.8" y="85" width="0.2" height="15.0" fill="rgb(223,29,40)" rx="2" ry="2" />
<text  x="774.85" y="95.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (10 samples, 0.07%)</title><rect x="646.6" y="165" width="0.8" height="15.0" fill="rgb(205,191,35)" rx="2" ry="2" />
<text  x="649.61" y="175.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (42 samples, 0.30%)</title><rect x="839.2" y="261" width="3.5" height="15.0" fill="rgb(222,23,10)" rx="2" ry="2" />
<text  x="842.22" y="271.5" ></text>
</g>
<g >
<title>mpage_submit_page (6 samples, 0.04%)</title><rect x="978.5" y="613" width="0.5" height="15.0" fill="rgb(227,163,0)" rx="2" ry="2" />
<text  x="981.46" y="623.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (6 samples, 0.04%)</title><rect x="114.9" y="293" width="0.5" height="15.0" fill="rgb(246,72,36)" rx="2" ry="2" />
<text  x="117.89" y="303.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (14 samples, 0.10%)</title><rect x="874.0" y="293" width="1.2" height="15.0" fill="rgb(244,101,32)" rx="2" ry="2" />
<text  x="876.99" y="303.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.08%)</title><rect x="837.0" y="229" width="0.9" height="15.0" fill="rgb(228,6,18)" rx="2" ry="2" />
<text  x="839.97" y="239.5" ></text>
</g>
<g >
<title>copy_page_to_iter (10 samples, 0.07%)</title><rect x="115.6" y="389" width="0.8" height="15.0" fill="rgb(222,45,14)" rx="2" ry="2" />
<text  x="118.56" y="399.5" ></text>
</g>
<g >
<title>ext4_evict_inode (4 samples, 0.03%)</title><rect x="500.2" y="309" width="0.3" height="15.0" fill="rgb(245,27,38)" rx="2" ry="2" />
<text  x="503.19" y="319.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (10 samples, 0.07%)</title><rect x="1068.7" y="533" width="0.8" height="15.0" fill="rgb(224,148,37)" rx="2" ry="2" />
<text  x="1071.68" y="543.5" ></text>
</g>
<g >
<title>get_recent_times.isra.0 (3 samples, 0.02%)</title><rect x="975.1" y="741" width="0.3" height="15.0" fill="rgb(225,13,6)" rx="2" ry="2" />
<text  x="978.13" y="751.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (11 samples, 0.08%)</title><rect x="638.6" y="229" width="0.9" height="15.0" fill="rgb(215,153,27)" rx="2" ry="2" />
<text  x="641.61" y="239.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (4 samples, 0.03%)</title><rect x="855.6" y="165" width="0.4" height="15.0" fill="rgb(211,40,48)" rx="2" ry="2" />
<text  x="858.64" y="175.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (3 samples, 0.02%)</title><rect x="527.0" y="197" width="0.2" height="15.0" fill="rgb(226,147,43)" rx="2" ry="2" />
<text  x="529.96" y="207.5" ></text>
</g>
<g >
<title>do_dentry_open (8 samples, 0.06%)</title><rect x="498.7" y="389" width="0.7" height="15.0" fill="rgb(214,172,31)" rx="2" ry="2" />
<text  x="501.69" y="399.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (6 samples, 0.04%)</title><rect x="653.7" y="165" width="0.5" height="15.0" fill="rgb(239,174,6)" rx="2" ry="2" />
<text  x="656.70" y="175.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="856.8" y="277" width="0.3" height="15.0" fill="rgb(218,148,38)" rx="2" ry="2" />
<text  x="859.81" y="287.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (2 samples, 0.01%)</title><rect x="47.4" y="501" width="0.1" height="15.0" fill="rgb(208,25,26)" rx="2" ry="2" />
<text  x="50.35" y="511.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (180 samples, 1.27%)</title><rect x="595.7" y="261" width="15.1" height="15.0" fill="rgb(247,53,49)" rx="2" ry="2" />
<text  x="598.75" y="271.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (76 samples, 0.54%)</title><rect x="648.4" y="277" width="6.4" height="15.0" fill="rgb(254,78,33)" rx="2" ry="2" />
<text  x="651.44" y="287.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (81 samples, 0.57%)</title><rect x="33.3" y="725" width="6.8" height="15.0" fill="rgb(253,158,9)" rx="2" ry="2" />
<text  x="36.35" y="735.5" ></text>
</g>
<g >
<title>tick_sched_handle (150 samples, 1.06%)</title><rect x="1034.2" y="533" width="12.5" height="15.0" fill="rgb(241,163,4)" rx="2" ry="2" />
<text  x="1037.16" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (37 samples, 0.26%)</title><rect x="846.4" y="213" width="3.1" height="15.0" fill="rgb(210,189,41)" rx="2" ry="2" />
<text  x="849.39" y="223.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (44 samples, 0.31%)</title><rect x="607.1" y="229" width="3.7" height="15.0" fill="rgb(221,81,14)" rx="2" ry="2" />
<text  x="610.09" y="239.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 0.02%)</title><rect x="951.4" y="757" width="0.3" height="15.0" fill="rgb(218,116,30)" rx="2" ry="2" />
<text  x="954.45" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.13%)</title><rect x="726.3" y="149" width="1.6" height="15.0" fill="rgb(223,170,2)" rx="2" ry="2" />
<text  x="729.32" y="159.5" ></text>
</g>
<g >
<title>submit_bio (2 samples, 0.01%)</title><rect x="976.0" y="613" width="0.2" height="15.0" fill="rgb(235,70,23)" rx="2" ry="2" />
<text  x="979.05" y="623.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (8 samples, 0.06%)</title><rect x="632.4" y="165" width="0.7" height="15.0" fill="rgb(244,15,38)" rx="2" ry="2" />
<text  x="635.43" y="175.5" ></text>
</g>
<g >
<title>update_process_times (21 samples, 0.15%)</title><rect x="43.4" y="517" width="1.7" height="15.0" fill="rgb(209,40,15)" rx="2" ry="2" />
<text  x="46.35" y="527.5" ></text>
</g>
<g >
<title>__update_idle_core (3 samples, 0.02%)</title><rect x="971.0" y="709" width="0.3" height="15.0" fill="rgb(213,70,40)" rx="2" ry="2" />
<text  x="974.04" y="719.5" ></text>
</g>
<g >
<title>tick_program_event (17 samples, 0.12%)</title><rect x="1048.5" y="581" width="1.4" height="15.0" fill="rgb(214,139,51)" rx="2" ry="2" />
<text  x="1051.50" y="591.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (30 samples, 0.21%)</title><rect x="853.1" y="245" width="2.5" height="15.0" fill="rgb(235,77,33)" rx="2" ry="2" />
<text  x="856.14" y="255.5" ></text>
</g>
<g >
<title>do_unlinkat (8 samples, 0.06%)</title><rect x="500.1" y="549" width="0.7" height="15.0" fill="rgb(218,115,5)" rx="2" ry="2" />
<text  x="503.11" y="559.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.03%)</title><rect x="851.1" y="197" width="0.3" height="15.0" fill="rgb(205,80,3)" rx="2" ry="2" />
<text  x="854.06" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (2 samples, 0.01%)</title><rect x="955.0" y="773" width="0.1" height="15.0" fill="rgb(243,92,49)" rx="2" ry="2" />
<text  x="957.95" y="783.5" ></text>
</g>
<g >
<title>new_sync_write (36 samples, 0.25%)</title><rect x="495.1" y="501" width="3.0" height="15.0" fill="rgb(244,117,19)" rx="2" ry="2" />
<text  x="498.11" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="1156.3" y="597" width="0.2" height="15.0" fill="rgb(212,163,9)" rx="2" ry="2" />
<text  x="1159.31" y="607.5" ></text>
</g>
<g >
<title>cpuidle_enter (112 samples, 0.79%)</title><rect x="30.8" y="757" width="9.4" height="15.0" fill="rgb(221,28,19)" rx="2" ry="2" />
<text  x="33.85" y="767.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (2,203 samples, 15.57%)</title><rect x="501.1" y="533" width="183.7" height="15.0" fill="rgb(231,180,45)" rx="2" ry="2" />
<text  x="504.11" y="543.5" >serde::ser::impls::&lt;imp..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (37 samples, 0.26%)</title><rect x="864.4" y="261" width="3.1" height="15.0" fill="rgb(245,120,13)" rx="2" ry="2" />
<text  x="867.40" y="271.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (248 samples, 1.75%)</title><rect x="743.6" y="373" width="20.7" height="15.0" fill="rgb(209,153,39)" rx="2" ry="2" />
<text  x="746.58" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (4 samples, 0.03%)</title><rect x="875.2" y="789" width="0.3" height="15.0" fill="rgb(241,166,10)" rx="2" ry="2" />
<text  x="878.16" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="542.2" y="181" width="0.2" height="15.0" fill="rgb(217,227,38)" rx="2" ry="2" />
<text  x="545.22" y="191.5" ></text>
</g>
<g >
<title>insert_work (2 samples, 0.01%)</title><rect x="1071.3" y="485" width="0.1" height="15.0" fill="rgb(226,132,51)" rx="2" ry="2" />
<text  x="1074.27" y="495.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (2 samples, 0.01%)</title><rect x="726.0" y="197" width="0.2" height="15.0" fill="rgb(237,61,8)" rx="2" ry="2" />
<text  x="728.99" y="207.5" ></text>
</g>
<g >
<title>psi_task_change (20 samples, 0.14%)</title><rect x="1077.3" y="437" width="1.6" height="15.0" fill="rgb(216,25,34)" rx="2" ry="2" />
<text  x="1080.27" y="447.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (153 samples, 1.08%)</title><rect x="569.0" y="197" width="12.7" height="15.0" fill="rgb(217,24,22)" rx="2" ry="2" />
<text  x="571.98" y="207.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (4 samples, 0.03%)</title><rect x="697.4" y="245" width="0.3" height="15.0" fill="rgb(253,86,30)" rx="2" ry="2" />
<text  x="700.39" y="255.5" ></text>
</g>
<g >
<title>iput.part.0 (5 samples, 0.04%)</title><rect x="500.2" y="357" width="0.4" height="15.0" fill="rgb(250,99,2)" rx="2" ry="2" />
<text  x="503.19" y="367.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (2 samples, 0.01%)</title><rect x="116.6" y="677" width="0.1" height="15.0" fill="rgb(238,133,50)" rx="2" ry="2" />
<text  x="119.56" y="687.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (3 samples, 0.02%)</title><rect x="28.9" y="645" width="0.3" height="15.0" fill="rgb(236,35,0)" rx="2" ry="2" />
<text  x="31.93" y="655.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18 samples, 0.13%)</title><rect x="31.8" y="709" width="1.5" height="15.0" fill="rgb(245,28,7)" rx="2" ry="2" />
<text  x="34.85" y="719.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.04%)</title><rect x="674.5" y="245" width="0.5" height="15.0" fill="rgb(229,214,51)" rx="2" ry="2" />
<text  x="677.54" y="255.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (278 samples, 1.96%)</title><rect x="41.6" y="709" width="23.2" height="15.0" fill="rgb(211,152,12)" rx="2" ry="2" />
<text  x="44.60" y="719.5" >c..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (557 samples, 3.94%)</title><rect x="809.5" y="581" width="46.5" height="15.0" fill="rgb(224,190,47)" rx="2" ry="2" />
<text  x="812.54" y="591.5" >core..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (118 samples, 0.83%)</title><rect x="583.7" y="197" width="9.9" height="15.0" fill="rgb(231,169,31)" rx="2" ry="2" />
<text  x="586.74" y="207.5" ></text>
</g>
<g >
<title>find_busiest_group (2 samples, 0.01%)</title><rect x="988.6" y="581" width="0.2" height="15.0" fill="rgb(250,8,10)" rx="2" ry="2" />
<text  x="991.64" y="591.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.03%)</title><rect x="875.2" y="549" width="0.3" height="15.0" fill="rgb(249,116,52)" rx="2" ry="2" />
<text  x="878.16" y="559.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (8 samples, 0.06%)</title><rect x="776.1" y="197" width="0.7" height="15.0" fill="rgb(217,134,17)" rx="2" ry="2" />
<text  x="779.10" y="207.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (63 samples, 0.45%)</title><rect x="832.6" y="277" width="5.3" height="15.0" fill="rgb(226,42,50)" rx="2" ry="2" />
<text  x="835.63" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_poll (2 samples, 0.01%)</title><rect x="26.4" y="805" width="0.2" height="15.0" fill="rgb(244,7,14)" rx="2" ry="2" />
<text  x="29.43" y="815.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (215 samples, 1.52%)</title><rect x="724.9" y="565" width="17.9" height="15.0" fill="rgb(222,208,35)" rx="2" ry="2" />
<text  x="727.90" y="575.5" ></text>
</g>
<g >
<title>find_busiest_group (2 samples, 0.01%)</title><rect x="973.9" y="709" width="0.1" height="15.0" fill="rgb(246,205,32)" rx="2" ry="2" />
<text  x="976.88" y="719.5" ></text>
</g>
<g >
<title>NaClSysWrite (221 samples, 1.56%)</title><rect x="724.4" y="821" width="18.4" height="15.0" fill="rgb(207,117,15)" rx="2" ry="2" />
<text  x="727.40" y="831.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (63 samples, 0.45%)</title><rect x="10.1" y="645" width="5.2" height="15.0" fill="rgb(245,64,52)" rx="2" ry="2" />
<text  x="13.08" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.10%)</title><rect x="874.0" y="245" width="1.2" height="15.0" fill="rgb(242,30,1)" rx="2" ry="2" />
<text  x="876.99" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (24 samples, 0.17%)</title><rect x="104.4" y="821" width="2.0" height="15.0" fill="rgb(215,53,0)" rx="2" ry="2" />
<text  x="107.39" y="831.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (2 samples, 0.01%)</title><rect x="764.6" y="245" width="0.2" height="15.0" fill="rgb(216,210,16)" rx="2" ry="2" />
<text  x="767.59" y="255.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (368 samples, 2.60%)</title><rect x="562.9" y="245" width="30.7" height="15.0" fill="rgb(249,225,0)" rx="2" ry="2" />
<text  x="565.90" y="255.5" >se..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.08%)</title><rect x="511.3" y="277" width="1.0" height="15.0" fill="rgb(254,72,48)" rx="2" ry="2" />
<text  x="514.28" y="287.5" ></text>
</g>
<g >
<title>rcu_core_si (16 samples, 0.11%)</title><rect x="1054.9" y="565" width="1.4" height="15.0" fill="rgb(247,227,16)" rx="2" ry="2" />
<text  x="1057.92" y="575.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (24 samples, 0.17%)</title><rect x="711.0" y="277" width="2.0" height="15.0" fill="rgb(207,4,6)" rx="2" ry="2" />
<text  x="713.98" y="287.5" ></text>
</g>
<g >
<title>clockevents_program_event (2 samples, 0.01%)</title><rect x="1186.2" y="597" width="0.1" height="15.0" fill="rgb(231,48,17)" rx="2" ry="2" />
<text  x="1189.16" y="607.5" ></text>
</g>
<g >
<title>tick_nohz_restart (3 samples, 0.02%)</title><rect x="41.0" y="757" width="0.3" height="15.0" fill="rgb(224,145,17)" rx="2" ry="2" />
<text  x="44.02" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (29 samples, 0.20%)</title><rect x="644.1" y="181" width="2.4" height="15.0" fill="rgb(209,117,27)" rx="2" ry="2" />
<text  x="647.11" y="191.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (2 samples, 0.01%)</title><rect x="667.5" y="149" width="0.2" height="15.0" fill="rgb(230,112,3)" rx="2" ry="2" />
<text  x="670.54" y="159.5" ></text>
</g>
<g >
<title>perf_event_task_tick (9 samples, 0.06%)</title><rect x="44.2" y="485" width="0.7" height="15.0" fill="rgb(249,188,36)" rx="2" ry="2" />
<text  x="47.19" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (22 samples, 0.16%)</title><rect x="1023.6" y="677" width="1.8" height="15.0" fill="rgb(245,131,41)" rx="2" ry="2" />
<text  x="1026.57" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_write (8 samples, 0.06%)</title><rect x="15.3" y="645" width="0.7" height="15.0" fill="rgb(252,2,41)" rx="2" ry="2" />
<text  x="18.34" y="655.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (3 samples, 0.02%)</title><rect x="67.7" y="549" width="0.2" height="15.0" fill="rgb(252,78,19)" rx="2" ry="2" />
<text  x="70.70" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="494.9" y="453" width="0.2" height="15.0" fill="rgb(225,105,13)" rx="2" ry="2" />
<text  x="497.94" y="463.5" ></text>
</g>
<g >
<title>newidle_balance (6 samples, 0.04%)</title><rect x="28.8" y="709" width="0.5" height="15.0" fill="rgb(220,93,12)" rx="2" ry="2" />
<text  x="31.76" y="719.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (300 samples, 2.12%)</title><rect x="764.3" y="581" width="25.1" height="15.0" fill="rgb(235,79,15)" rx="2" ry="2" />
<text  x="767.34" y="591.5" >&lt;..</text>
</g>
<g >
<title>test_clear_page_writeback (6 samples, 0.04%)</title><rect x="974.4" y="693" width="0.5" height="15.0" fill="rgb(220,48,53)" rx="2" ry="2" />
<text  x="977.38" y="703.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (4 samples, 0.03%)</title><rect x="729.2" y="117" width="0.3" height="15.0" fill="rgb(248,204,21)" rx="2" ry="2" />
<text  x="732.16" y="127.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (14 samples, 0.10%)</title><rect x="765.0" y="261" width="1.2" height="15.0" fill="rgb(246,174,26)" rx="2" ry="2" />
<text  x="768.01" y="271.5" ></text>
</g>
<g >
<title>rcu_idle_enter (2 samples, 0.01%)</title><rect x="62.3" y="677" width="0.1" height="15.0" fill="rgb(217,156,25)" rx="2" ry="2" />
<text  x="65.28" y="687.5" ></text>
</g>
<g >
<title>prepare_task_switch (2 samples, 0.01%)</title><rect x="1182.3" y="693" width="0.2" height="15.0" fill="rgb(219,69,20)" rx="2" ry="2" />
<text  x="1185.33" y="703.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (5 samples, 0.04%)</title><rect x="856.0" y="677" width="0.4" height="15.0" fill="rgb(241,203,15)" rx="2" ry="2" />
<text  x="858.98" y="687.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.01%)</title><rect x="857.1" y="277" width="0.1" height="15.0" fill="rgb(216,159,4)" rx="2" ry="2" />
<text  x="860.06" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="588.3" y="133" width="0.2" height="15.0" fill="rgb(212,26,12)" rx="2" ry="2" />
<text  x="591.33" y="143.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (17 samples, 0.12%)</title><rect x="548.6" y="293" width="1.4" height="15.0" fill="rgb(230,1,36)" rx="2" ry="2" />
<text  x="551.55" y="303.5" ></text>
</g>
<g >
<title>x86_pmu_disable (4 samples, 0.03%)</title><rect x="1045.8" y="469" width="0.3" height="15.0" fill="rgb(219,178,31)" rx="2" ry="2" />
<text  x="1048.75" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.06%)</title><rect x="15.3" y="661" width="0.7" height="15.0" fill="rgb(244,190,42)" rx="2" ry="2" />
<text  x="18.34" y="671.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (16 samples, 0.11%)</title><rect x="837.9" y="261" width="1.3" height="15.0" fill="rgb(251,89,1)" rx="2" ry="2" />
<text  x="840.88" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (25 samples, 0.18%)</title><rect x="640.2" y="197" width="2.1" height="15.0" fill="rgb(209,174,48)" rx="2" ry="2" />
<text  x="643.19" y="207.5" ></text>
</g>
<g >
<title>enqueue_task_fair (34 samples, 0.24%)</title><rect x="1074.4" y="437" width="2.9" height="15.0" fill="rgb(252,207,3)" rx="2" ry="2" />
<text  x="1077.43" y="447.5" ></text>
</g>
<g >
<title>ovl_create_upper (3 samples, 0.02%)</title><rect x="499.4" y="341" width="0.3" height="15.0" fill="rgb(245,214,0)" rx="2" ry="2" />
<text  x="502.44" y="351.5" ></text>
</g>
<g >
<title>rcu_gp_init (2 samples, 0.01%)</title><rect x="953.3" y="805" width="0.1" height="15.0" fill="rgb(227,21,28)" rx="2" ry="2" />
<text  x="956.28" y="815.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.08%)</title><rect x="810.8" y="117" width="1.0" height="15.0" fill="rgb(223,20,5)" rx="2" ry="2" />
<text  x="813.79" y="127.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (557 samples, 3.94%)</title><rect x="809.5" y="629" width="46.5" height="15.0" fill="rgb(246,83,25)" rx="2" ry="2" />
<text  x="812.54" y="639.5" >serd..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.01%)</title><rect x="764.3" y="261" width="0.2" height="15.0" fill="rgb(237,183,36)" rx="2" ry="2" />
<text  x="767.34" y="271.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object (27 samples, 0.19%)</title><rect x="546.1" y="309" width="2.3" height="15.0" fill="rgb(215,78,19)" rx="2" ry="2" />
<text  x="549.14" y="319.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (7 samples, 0.05%)</title><rect x="114.8" y="309" width="0.6" height="15.0" fill="rgb(245,221,24)" rx="2" ry="2" />
<text  x="117.81" y="319.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (10 samples, 0.07%)</title><rect x="516.2" y="261" width="0.8" height="15.0" fill="rgb(220,8,46)" rx="2" ry="2" />
<text  x="519.20" y="271.5" ></text>
</g>
<g >
<title>lind_write (300 samples, 2.12%)</title><rect x="764.3" y="741" width="25.1" height="15.0" fill="rgb(208,173,47)" rx="2" ry="2" />
<text  x="767.34" y="751.5" >l..</text>
</g>
<g >
<title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="31.4" y="565" width="0.4" height="15.0" fill="rgb(225,128,20)" rx="2" ry="2" />
<text  x="34.43" y="575.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (4 samples, 0.03%)</title><rect x="31.8" y="693" width="0.4" height="15.0" fill="rgb(252,25,34)" rx="2" ry="2" />
<text  x="34.85" y="703.5" ></text>
</g>
<g >
<title>ksys_read (4 samples, 0.03%)</title><rect x="951.4" y="789" width="0.3" height="15.0" fill="rgb(244,29,4)" rx="2" ry="2" />
<text  x="954.37" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (43 samples, 0.30%)</title><rect x="857.2" y="309" width="3.6" height="15.0" fill="rgb(215,0,6)" rx="2" ry="2" />
<text  x="860.23" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (37 samples, 0.26%)</title><rect x="495.1" y="565" width="3.1" height="15.0" fill="rgb(216,124,37)" rx="2" ry="2" />
<text  x="498.11" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.20%)</title><rect x="950.1" y="837" width="2.4" height="15.0" fill="rgb(241,119,16)" rx="2" ry="2" />
<text  x="953.11" y="847.5" ></text>
</g>
<g >
<title>dispatcher (229 samples, 1.62%)</title><rect x="697.4" y="789" width="19.1" height="15.0" fill="rgb(233,113,34)" rx="2" ry="2" />
<text  x="700.39" y="799.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.02%)</title><rect x="540.4" y="261" width="0.2" height="15.0" fill="rgb(237,153,51)" rx="2" ry="2" />
<text  x="543.38" y="271.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.03%)</title><rect x="875.2" y="661" width="0.3" height="15.0" fill="rgb(223,52,5)" rx="2" ry="2" />
<text  x="878.16" y="671.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="540.5" y="213" width="0.1" height="15.0" fill="rgb(216,130,40)" rx="2" ry="2" />
<text  x="543.47" y="223.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (300 samples, 2.12%)</title><rect x="764.3" y="709" width="25.1" height="15.0" fill="rgb(244,218,51)" rx="2" ry="2" />
<text  x="767.34" y="719.5" >r..</text>
</g>
<g >
<title>force_qs_rnp (36 samples, 0.25%)</title><rect x="956.8" y="773" width="3.0" height="15.0" fill="rgb(229,112,45)" rx="2" ry="2" />
<text  x="959.78" y="783.5" ></text>
</g>
<g >
<title>irq_enter_rcu (31 samples, 0.22%)</title><rect x="1050.8" y="629" width="2.5" height="15.0" fill="rgb(235,219,9)" rx="2" ry="2" />
<text  x="1053.75" y="639.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (7 samples, 0.05%)</title><rect x="792.6" y="805" width="0.6" height="15.0" fill="rgb(228,42,48)" rx="2" ry="2" />
<text  x="795.61" y="815.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (4 samples, 0.03%)</title><rect x="875.2" y="581" width="0.3" height="15.0" fill="rgb(214,51,41)" rx="2" ry="2" />
<text  x="878.16" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (55 samples, 0.39%)</title><rect x="628.6" y="181" width="4.6" height="15.0" fill="rgb(250,190,13)" rx="2" ry="2" />
<text  x="631.60" y="191.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.01%)</title><rect x="677.5" y="245" width="0.2" height="15.0" fill="rgb(230,66,36)" rx="2" ry="2" />
<text  x="680.54" y="255.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1,947 samples, 13.76%)</title><rect x="520.2" y="405" width="162.3" height="15.0" fill="rgb(215,83,8)" rx="2" ry="2" />
<text  x="523.20" y="415.5" >serde::ser::impls::&lt;..</text>
</g>
<g >
<title>ext4_release_io_end (7 samples, 0.05%)</title><rect x="974.3" y="741" width="0.6" height="15.0" fill="rgb(250,64,28)" rx="2" ry="2" />
<text  x="977.29" y="751.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (7 samples, 0.05%)</title><rect x="1187.5" y="645" width="0.6" height="15.0" fill="rgb(215,185,31)" rx="2" ry="2" />
<text  x="1190.50" y="655.5" ></text>
</g>
<g >
<title>ksys_read (12 samples, 0.08%)</title><rect x="115.5" y="549" width="1.0" height="15.0" fill="rgb(229,137,22)" rx="2" ry="2" />
<text  x="118.48" y="559.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (3 samples, 0.02%)</title><rect x="875.2" y="405" width="0.2" height="15.0" fill="rgb(233,52,5)" rx="2" ry="2" />
<text  x="878.16" y="415.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="676.0" y="277" width="0.2" height="15.0" fill="rgb(237,103,24)" rx="2" ry="2" />
<text  x="678.96" y="287.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (28 samples, 0.20%)</title><rect x="515.0" y="341" width="2.3" height="15.0" fill="rgb(220,156,47)" rx="2" ry="2" />
<text  x="517.95" y="351.5" ></text>
</g>
<g >
<title>psi_group_change (9 samples, 0.06%)</title><rect x="1078.2" y="421" width="0.7" height="15.0" fill="rgb(254,137,7)" rx="2" ry="2" />
<text  x="1081.19" y="431.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (2 samples, 0.01%)</title><rect x="499.4" y="213" width="0.2" height="15.0" fill="rgb(232,127,35)" rx="2" ry="2" />
<text  x="502.44" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.05%)</title><rect x="882.2" y="837" width="0.6" height="15.0" fill="rgb(245,69,12)" rx="2" ry="2" />
<text  x="885.24" y="847.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6 samples, 0.04%)</title><rect x="877.3" y="821" width="0.5" height="15.0" fill="rgb(245,37,19)" rx="2" ry="2" />
<text  x="880.32" y="831.5" ></text>
</g>
<g >
<title>try_to_wake_up (16 samples, 0.11%)</title><rect x="49.1" y="485" width="1.3" height="15.0" fill="rgb(248,36,29)" rx="2" ry="2" />
<text  x="52.11" y="495.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (22 samples, 0.16%)</title><rect x="713.0" y="277" width="1.8" height="15.0" fill="rgb(244,110,39)" rx="2" ry="2" />
<text  x="715.98" y="287.5" ></text>
</g>
<g >
<title>__run_hrtimer (28 samples, 0.20%)</title><rect x="42.9" y="565" width="2.4" height="15.0" fill="rgb(222,220,31)" rx="2" ry="2" />
<text  x="45.94" y="575.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (8 samples, 0.06%)</title><rect x="741.7" y="261" width="0.7" height="15.0" fill="rgb(205,148,38)" rx="2" ry="2" />
<text  x="744.75" y="271.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (261 samples, 1.84%)</title><rect x="810.1" y="229" width="21.8" height="15.0" fill="rgb(243,39,23)" rx="2" ry="2" />
<text  x="813.12" y="239.5" >&lt;..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (229 samples, 1.62%)</title><rect x="697.4" y="645" width="19.1" height="15.0" fill="rgb(236,37,35)" rx="2" ry="2" />
<text  x="700.39" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.11%)</title><rect x="644.9" y="165" width="1.4" height="15.0" fill="rgb(236,132,37)" rx="2" ry="2" />
<text  x="647.94" y="175.5" ></text>
</g>
<g >
<title>NaClXMutexLock (1,554 samples, 10.98%)</title><rect x="208.4" y="773" width="129.6" height="15.0" fill="rgb(235,116,11)" rx="2" ry="2" />
<text  x="211.45" y="783.5" >NaClXMutexLock</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4 samples, 0.03%)</title><rect x="644.6" y="165" width="0.3" height="15.0" fill="rgb(250,218,21)" rx="2" ry="2" />
<text  x="647.61" y="175.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (8 samples, 0.06%)</title><rect x="741.7" y="277" width="0.7" height="15.0" fill="rgb(230,74,26)" rx="2" ry="2" />
<text  x="744.75" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.06%)</title><rect x="674.3" y="261" width="0.7" height="15.0" fill="rgb(218,52,14)" rx="2" ry="2" />
<text  x="677.29" y="271.5" ></text>
</g>
<g >
<title>__note_gp_changes (4 samples, 0.03%)</title><rect x="954.5" y="773" width="0.4" height="15.0" fill="rgb(211,162,31)" rx="2" ry="2" />
<text  x="957.53" y="783.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (10 samples, 0.07%)</title><rect x="1034.4" y="517" width="0.8" height="15.0" fill="rgb(249,115,2)" rx="2" ry="2" />
<text  x="1037.41" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (13 samples, 0.09%)</title><rect x="725.1" y="213" width="1.1" height="15.0" fill="rgb(208,170,1)" rx="2" ry="2" />
<text  x="728.07" y="223.5" ></text>
</g>
<g >
<title>__fput (3 samples, 0.02%)</title><rect x="952.2" y="725" width="0.2" height="15.0" fill="rgb(238,215,54)" rx="2" ry="2" />
<text  x="955.20" y="735.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (2 samples, 0.01%)</title><rect x="1178.1" y="629" width="0.1" height="15.0" fill="rgb(219,198,46)" rx="2" ry="2" />
<text  x="1181.08" y="639.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (6 samples, 0.04%)</title><rect x="743.1" y="309" width="0.5" height="15.0" fill="rgb(231,200,18)" rx="2" ry="2" />
<text  x="746.08" y="319.5" ></text>
</g>
<g >
<title>schedule (123 samples, 0.87%)</title><rect x="962.3" y="757" width="10.2" height="15.0" fill="rgb(216,13,35)" rx="2" ry="2" />
<text  x="965.29" y="767.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.01%)</title><rect x="542.2" y="165" width="0.2" height="15.0" fill="rgb(220,82,17)" rx="2" ry="2" />
<text  x="545.22" y="175.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.01%)</title><rect x="1020.4" y="789" width="0.2" height="15.0" fill="rgb(205,79,48)" rx="2" ry="2" />
<text  x="1023.40" y="799.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (3 samples, 0.02%)</title><rect x="675.5" y="229" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="678.54" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.08%)</title><rect x="834.9" y="133" width="1.0" height="15.0" fill="rgb(240,212,38)" rx="2" ry="2" />
<text  x="837.88" y="143.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (8 samples, 0.06%)</title><rect x="678.3" y="245" width="0.7" height="15.0" fill="rgb(247,169,7)" rx="2" ry="2" />
<text  x="681.29" y="255.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (3 samples, 0.02%)</title><rect x="888.9" y="789" width="0.3" height="15.0" fill="rgb(243,12,48)" rx="2" ry="2" />
<text  x="891.91" y="799.5" ></text>
</g>
<g >
<title>[anon] (314 samples, 2.22%)</title><rect x="88.3" y="837" width="26.2" height="15.0" fill="rgb(235,43,38)" rx="2" ry="2" />
<text  x="91.29" y="847.5" >[..</text>
</g>
<g >
<title>idle_cpu (3 samples, 0.02%)</title><rect x="1066.2" y="517" width="0.2" height="15.0" fill="rgb(213,181,46)" rx="2" ry="2" />
<text  x="1069.18" y="527.5" ></text>
</g>
<g >
<title>update_load_avg (8 samples, 0.06%)</title><rect x="1175.1" y="549" width="0.6" height="15.0" fill="rgb(236,192,23)" rx="2" ry="2" />
<text  x="1178.07" y="559.5" ></text>
</g>
<g >
<title>update_blocked_averages (7 samples, 0.05%)</title><rect x="969.7" y="629" width="0.6" height="15.0" fill="rgb(211,24,38)" rx="2" ry="2" />
<text  x="972.71" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (11 samples, 0.08%)</title><rect x="629.4" y="165" width="1.0" height="15.0" fill="rgb(220,71,15)" rx="2" ry="2" />
<text  x="632.43" y="175.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (2 samples, 0.01%)</title><rect x="500.4" y="181" width="0.1" height="15.0" fill="rgb(231,155,54)" rx="2" ry="2" />
<text  x="503.36" y="191.5" ></text>
</g>
<g >
<title>check_cpu_stall (4 samples, 0.03%)</title><rect x="1038.4" y="485" width="0.3" height="15.0" fill="rgb(231,40,2)" rx="2" ry="2" />
<text  x="1041.41" y="495.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (172 samples, 1.22%)</title><rect x="860.8" y="405" width="14.4" height="15.0" fill="rgb(225,209,31)" rx="2" ry="2" />
<text  x="863.81" y="415.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (14 samples, 0.10%)</title><rect x="976.2" y="613" width="1.2" height="15.0" fill="rgb(248,164,51)" rx="2" ry="2" />
<text  x="979.21" y="623.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (2 samples, 0.01%)</title><rect x="697.7" y="213" width="0.2" height="15.0" fill="rgb(250,205,30)" rx="2" ry="2" />
<text  x="700.72" y="223.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2 samples, 0.01%)</title><rect x="1067.9" y="533" width="0.2" height="15.0" fill="rgb(229,148,31)" rx="2" ry="2" />
<text  x="1070.93" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (2 samples, 0.01%)</title><rect x="494.9" y="501" width="0.2" height="15.0" fill="rgb(233,178,21)" rx="2" ry="2" />
<text  x="497.94" y="511.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (21 samples, 0.15%)</title><rect x="741.1" y="341" width="1.7" height="15.0" fill="rgb(249,118,29)" rx="2" ry="2" />
<text  x="744.08" y="351.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.02%)</title><rect x="875.2" y="453" width="0.2" height="15.0" fill="rgb(227,44,6)" rx="2" ry="2" />
<text  x="878.16" y="463.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.02%)</title><rect x="875.2" y="149" width="0.2" height="15.0" fill="rgb(212,69,27)" rx="2" ry="2" />
<text  x="878.16" y="159.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (7 samples, 0.05%)</title><rect x="635.7" y="149" width="0.6" height="15.0" fill="rgb(253,16,11)" rx="2" ry="2" />
<text  x="638.69" y="159.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (40 samples, 0.28%)</title><rect x="1160.1" y="709" width="3.4" height="15.0" fill="rgb(210,24,19)" rx="2" ry="2" />
<text  x="1163.15" y="719.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (229 samples, 1.62%)</title><rect x="697.4" y="549" width="19.1" height="15.0" fill="rgb(246,137,16)" rx="2" ry="2" />
<text  x="700.39" y="559.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (248 samples, 1.75%)</title><rect x="743.6" y="341" width="20.7" height="15.0" fill="rgb(240,155,15)" rx="2" ry="2" />
<text  x="746.58" y="351.5" ></text>
</g>
<g >
<title>insert_work (2 samples, 0.01%)</title><rect x="975.6" y="709" width="0.2" height="15.0" fill="rgb(249,72,38)" rx="2" ry="2" />
<text  x="978.63" y="719.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (5 samples, 0.04%)</title><rect x="856.8" y="389" width="0.4" height="15.0" fill="rgb(230,114,31)" rx="2" ry="2" />
<text  x="859.81" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.15%)</title><rect x="534.8" y="245" width="1.7" height="15.0" fill="rgb(247,141,6)" rx="2" ry="2" />
<text  x="537.80" y="255.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (7 samples, 0.05%)</title><rect x="114.8" y="421" width="0.6" height="15.0" fill="rgb(243,57,33)" rx="2" ry="2" />
<text  x="117.81" y="431.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (2 samples, 0.01%)</title><rect x="807.0" y="821" width="0.2" height="15.0" fill="rgb(205,135,16)" rx="2" ry="2" />
<text  x="810.03" y="831.5" ></text>
</g>
<g >
<title>enqueue_entity (9 samples, 0.06%)</title><rect x="49.4" y="421" width="0.7" height="15.0" fill="rgb(221,144,9)" rx="2" ry="2" />
<text  x="52.36" y="431.5" ></text>
</g>
<g >
<title>ovl_read_iter (11 samples, 0.08%)</title><rect x="115.5" y="501" width="0.9" height="15.0" fill="rgb(252,144,46)" rx="2" ry="2" />
<text  x="118.48" y="511.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (19 samples, 0.13%)</title><rect x="714.8" y="277" width="1.6" height="15.0" fill="rgb(226,44,40)" rx="2" ry="2" />
<text  x="717.81" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.01%)</title><rect x="674.8" y="213" width="0.2" height="15.0" fill="rgb(252,125,41)" rx="2" ry="2" />
<text  x="677.79" y="223.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::as_bytes (2 samples, 0.01%)</title><rect x="622.3" y="245" width="0.1" height="15.0" fill="rgb(250,16,37)" rx="2" ry="2" />
<text  x="625.26" y="255.5" ></text>
</g>
<g >
<title>handle_irq_event (3 samples, 0.02%)</title><rect x="30.9" y="661" width="0.3" height="15.0" fill="rgb(225,111,3)" rx="2" ry="2" />
<text  x="33.93" y="671.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (2 samples, 0.01%)</title><rect x="524.3" y="197" width="0.2" height="15.0" fill="rgb(210,154,20)" rx="2" ry="2" />
<text  x="527.29" y="207.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,413 samples, 9.98%)</title><rect x="1025.4" y="677" width="117.8" height="15.0" fill="rgb(209,180,47)" rx="2" ry="2" />
<text  x="1028.41" y="687.5" >cpuidle_enter_..</text>
</g>
<g >
<title>find_get_pages_range_tag (2 samples, 0.01%)</title><rect x="979.0" y="613" width="0.1" height="15.0" fill="rgb(240,198,3)" rx="2" ry="2" />
<text  x="981.96" y="623.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (26 samples, 0.18%)</title><rect x="525.1" y="325" width="2.2" height="15.0" fill="rgb(248,47,53)" rx="2" ry="2" />
<text  x="528.12" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="697.4" y="165" width="0.2" height="15.0" fill="rgb(238,65,25)" rx="2" ry="2" />
<text  x="700.39" y="175.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="1184.0" y="677" width="0.2" height="15.0" fill="rgb(221,186,42)" rx="2" ry="2" />
<text  x="1187.00" y="687.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (37 samples, 0.26%)</title><rect x="495.1" y="645" width="3.1" height="15.0" fill="rgb(215,121,37)" rx="2" ry="2" />
<text  x="498.11" y="655.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 0.11%)</title><rect x="725.1" y="341" width="1.2" height="15.0" fill="rgb(246,9,8)" rx="2" ry="2" />
<text  x="728.07" y="351.5" ></text>
</g>
<g >
<title>cpuidle_select (21 samples, 0.15%)</title><rect x="62.8" y="693" width="1.7" height="15.0" fill="rgb(249,158,41)" rx="2" ry="2" />
<text  x="65.78" y="703.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (12 samples, 0.08%)</title><rect x="807.5" y="821" width="1.0" height="15.0" fill="rgb(238,33,12)" rx="2" ry="2" />
<text  x="810.45" y="831.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (15 samples, 0.11%)</title><rect x="867.5" y="261" width="1.2" height="15.0" fill="rgb(240,97,11)" rx="2" ry="2" />
<text  x="870.48" y="271.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2 samples, 0.01%)</title><rect x="1174.9" y="549" width="0.2" height="15.0" fill="rgb(212,168,53)" rx="2" ry="2" />
<text  x="1177.91" y="559.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (22 samples, 0.16%)</title><rect x="832.6" y="181" width="1.9" height="15.0" fill="rgb(253,25,37)" rx="2" ry="2" />
<text  x="835.63" y="191.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (5 samples, 0.04%)</title><rect x="63.9" y="645" width="0.5" height="15.0" fill="rgb(226,14,43)" rx="2" ry="2" />
<text  x="66.95" y="655.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (17 samples, 0.12%)</title><rect x="512.9" y="341" width="1.4" height="15.0" fill="rgb(234,147,27)" rx="2" ry="2" />
<text  x="515.87" y="351.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (19 samples, 0.13%)</title><rect x="495.2" y="373" width="1.6" height="15.0" fill="rgb(246,156,53)" rx="2" ry="2" />
<text  x="498.19" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="683.6" y="309" width="0.2" height="15.0" fill="rgb(226,109,8)" rx="2" ry="2" />
<text  x="686.63" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.12%)</title><rect x="662.9" y="181" width="1.4" height="15.0" fill="rgb(207,59,30)" rx="2" ry="2" />
<text  x="665.87" y="191.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.02%)</title><rect x="494.7" y="373" width="0.2" height="15.0" fill="rgb(251,160,24)" rx="2" ry="2" />
<text  x="497.69" y="383.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (557 samples, 3.94%)</title><rect x="809.5" y="645" width="46.5" height="15.0" fill="rgb(242,114,33)" rx="2" ry="2" />
<text  x="812.54" y="655.5" >&lt;ser..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (201 samples, 1.42%)</title><rect x="619.5" y="293" width="16.8" height="15.0" fill="rgb(241,140,32)" rx="2" ry="2" />
<text  x="622.51" y="303.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 0.45%)</title><rect x="10.1" y="517" width="5.2" height="15.0" fill="rgb(213,21,31)" rx="2" ry="2" />
<text  x="13.08" y="527.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (58 samples, 0.41%)</title><rect x="837.9" y="293" width="4.8" height="15.0" fill="rgb(226,45,46)" rx="2" ry="2" />
<text  x="840.88" y="303.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (333 samples, 2.35%)</title><rect x="810.1" y="373" width="27.8" height="15.0" fill="rgb(223,183,38)" rx="2" ry="2" />
<text  x="813.12" y="383.5" >s..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.08%)</title><rect x="859.8" y="197" width="1.0" height="15.0" fill="rgb(233,107,19)" rx="2" ry="2" />
<text  x="862.81" y="207.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (557 samples, 3.94%)</title><rect x="809.5" y="613" width="46.5" height="15.0" fill="rgb(250,151,54)" rx="2" ry="2" />
<text  x="812.54" y="623.5" >serd..</text>
</g>
<g >
<title>rustposix::interface::file::removefile (13 samples, 0.09%)</title><rect x="499.8" y="661" width="1.1" height="15.0" fill="rgb(238,65,16)" rx="2" ry="2" />
<text  x="502.78" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (4 samples, 0.03%)</title><rect x="523.6" y="197" width="0.4" height="15.0" fill="rgb(236,113,27)" rx="2" ry="2" />
<text  x="526.62" y="207.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (19 samples, 0.13%)</title><rect x="764.8" y="325" width="1.5" height="15.0" fill="rgb(227,146,53)" rx="2" ry="2" />
<text  x="767.76" y="335.5" ></text>
</g>
<g >
<title>native_write_msr (9 samples, 0.06%)</title><rect x="1048.8" y="549" width="0.8" height="15.0" fill="rgb(231,25,13)" rx="2" ry="2" />
<text  x="1051.84" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (5 samples, 0.04%)</title><rect x="1018.0" y="725" width="0.4" height="15.0" fill="rgb(215,171,21)" rx="2" ry="2" />
<text  x="1020.99" y="735.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (10 samples, 0.07%)</title><rect x="765.3" y="165" width="0.9" height="15.0" fill="rgb(213,63,40)" rx="2" ry="2" />
<text  x="768.34" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (101 samples, 0.71%)</title><rect x="585.2" y="181" width="8.4" height="15.0" fill="rgb(249,89,4)" rx="2" ry="2" />
<text  x="588.16" y="191.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (17 samples, 0.12%)</title><rect x="512.9" y="325" width="1.4" height="15.0" fill="rgb(234,119,5)" rx="2" ry="2" />
<text  x="515.87" y="335.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (4 samples, 0.03%)</title><rect x="837.6" y="133" width="0.3" height="15.0" fill="rgb(233,161,11)" rx="2" ry="2" />
<text  x="840.55" y="143.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (4 samples, 0.03%)</title><rect x="649.3" y="245" width="0.3" height="15.0" fill="rgb(221,18,39)" rx="2" ry="2" />
<text  x="652.28" y="255.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (313 samples, 2.21%)</title><rect x="990.3" y="725" width="26.1" height="15.0" fill="rgb(212,146,15)" rx="2" ry="2" />
<text  x="993.30" y="735.5" >m..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.04%)</title><rect x="856.0" y="501" width="0.4" height="15.0" fill="rgb(224,72,2)" rx="2" ry="2" />
<text  x="858.98" y="511.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.07%)</title><rect x="540.6" y="309" width="0.9" height="15.0" fill="rgb(229,90,50)" rx="2" ry="2" />
<text  x="543.63" y="319.5" ></text>
</g>
<g >
<title>__update_blocked_fair (2 samples, 0.01%)</title><rect x="1177.7" y="629" width="0.2" height="15.0" fill="rgb(210,65,30)" rx="2" ry="2" />
<text  x="1180.74" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (3 samples, 0.02%)</title><rect x="765.1" y="165" width="0.2" height="15.0" fill="rgb(212,131,12)" rx="2" ry="2" />
<text  x="768.09" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.04%)</title><rect x="653.2" y="165" width="0.4" height="15.0" fill="rgb(219,94,38)" rx="2" ry="2" />
<text  x="656.20" y="175.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (4 samples, 0.03%)</title><rect x="875.2" y="565" width="0.3" height="15.0" fill="rgb(245,75,53)" rx="2" ry="2" />
<text  x="878.16" y="575.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (2 samples, 0.01%)</title><rect x="764.6" y="229" width="0.2" height="15.0" fill="rgb(249,184,18)" rx="2" ry="2" />
<text  x="767.59" y="239.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (3 samples, 0.02%)</title><rect x="496.4" y="309" width="0.2" height="15.0" fill="rgb(205,195,14)" rx="2" ry="2" />
<text  x="499.36" y="319.5" ></text>
</g>
<g >
<title>__mod_timer (10 samples, 0.07%)</title><rect x="961.0" y="757" width="0.8" height="15.0" fill="rgb(211,175,12)" rx="2" ry="2" />
<text  x="963.95" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (5 samples, 0.04%)</title><rect x="509.2" y="229" width="0.4" height="15.0" fill="rgb(209,123,47)" rx="2" ry="2" />
<text  x="512.20" y="239.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (14 samples, 0.10%)</title><rect x="636.6" y="261" width="1.2" height="15.0" fill="rgb(245,208,24)" rx="2" ry="2" />
<text  x="639.60" y="271.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 0.01%)</title><rect x="1020.2" y="741" width="0.2" height="15.0" fill="rgb(227,162,9)" rx="2" ry="2" />
<text  x="1023.24" y="751.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (3 samples, 0.02%)</title><rect x="540.4" y="293" width="0.2" height="15.0" fill="rgb(218,106,23)" rx="2" ry="2" />
<text  x="543.38" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.02%)</title><rect x="517.7" y="309" width="0.3" height="15.0" fill="rgb(249,136,40)" rx="2" ry="2" />
<text  x="520.70" y="319.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.01%)</title><rect x="1068.5" y="533" width="0.2" height="15.0" fill="rgb(242,189,22)" rx="2" ry="2" />
<text  x="1071.51" y="543.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.05%)</title><rect x="725.4" y="197" width="0.6" height="15.0" fill="rgb(215,134,44)" rx="2" ry="2" />
<text  x="728.40" y="207.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (18 samples, 0.13%)</title><rect x="493.4" y="645" width="1.5" height="15.0" fill="rgb(249,113,18)" rx="2" ry="2" />
<text  x="496.44" y="655.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.03%)</title><rect x="697.4" y="197" width="0.3" height="15.0" fill="rgb(226,85,21)" rx="2" ry="2" />
<text  x="700.39" y="207.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (3 samples, 0.02%)</title><rect x="493.6" y="357" width="0.3" height="15.0" fill="rgb(205,47,51)" rx="2" ry="2" />
<text  x="496.61" y="367.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (4 samples, 0.03%)</title><rect x="689.2" y="245" width="0.4" height="15.0" fill="rgb(249,216,46)" rx="2" ry="2" />
<text  x="692.22" y="255.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="494.1" y="293" width="0.2" height="15.0" fill="rgb(248,190,23)" rx="2" ry="2" />
<text  x="497.11" y="303.5" ></text>
</g>
<g >
<title>put_prev_task_fair (3 samples, 0.02%)</title><rect x="29.3" y="725" width="0.3" height="15.0" fill="rgb(224,177,11)" rx="2" ry="2" />
<text  x="32.34" y="735.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="30.9" y="693" width="0.3" height="15.0" fill="rgb(218,186,2)" rx="2" ry="2" />
<text  x="33.93" y="703.5" ></text>
</g>
<g >
<title>__libc_write (8 samples, 0.06%)</title><rect x="15.3" y="693" width="0.7" height="15.0" fill="rgb(226,88,45)" rx="2" ry="2" />
<text  x="18.34" y="703.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (40 samples, 0.28%)</title><rect x="721.0" y="821" width="3.3" height="15.0" fill="rgb(219,157,11)" rx="2" ry="2" />
<text  x="723.99" y="831.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (2 samples, 0.01%)</title><rect x="495.8" y="277" width="0.1" height="15.0" fill="rgb(242,33,34)" rx="2" ry="2" />
<text  x="498.77" y="287.5" ></text>
</g>
<g >
<title>try_to_wake_up (92 samples, 0.65%)</title><rect x="1072.1" y="485" width="7.7" height="15.0" fill="rgb(234,181,24)" rx="2" ry="2" />
<text  x="1075.10" y="495.5" ></text>
</g>
<g >
<title>lind_write (2,298 samples, 16.24%)</title><rect x="493.4" y="741" width="191.6" height="15.0" fill="rgb(222,45,51)" rx="2" ry="2" />
<text  x="496.36" y="751.5" >lind_write</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (333 samples, 2.35%)</title><rect x="810.1" y="389" width="27.8" height="15.0" fill="rgb(228,141,22)" rx="2" ry="2" />
<text  x="813.12" y="399.5" >s..</text>
</g>
<g >
<title>ktime_get (2 samples, 0.01%)</title><rect x="1183.3" y="693" width="0.2" height="15.0" fill="rgb(253,107,49)" rx="2" ry="2" />
<text  x="1186.33" y="703.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DeviceInode&gt;::serialize (16 samples, 0.11%)</title><rect x="540.1" y="357" width="1.4" height="15.0" fill="rgb(235,223,25)" rx="2" ry="2" />
<text  x="543.13" y="367.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.01%)</title><rect x="540.8" y="213" width="0.2" height="15.0" fill="rgb(249,214,42)" rx="2" ry="2" />
<text  x="543.80" y="223.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (17 samples, 0.12%)</title><rect x="115.4" y="773" width="1.4" height="15.0" fill="rgb(253,110,43)" rx="2" ry="2" />
<text  x="118.39" y="783.5" ></text>
</g>
<g >
<title>__schedule (7 samples, 0.05%)</title><rect x="979.1" y="773" width="0.6" height="15.0" fill="rgb(233,221,27)" rx="2" ry="2" />
<text  x="982.13" y="783.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.04%)</title><rect x="856.0" y="645" width="0.4" height="15.0" fill="rgb(208,175,40)" rx="2" ry="2" />
<text  x="858.98" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (19 samples, 0.13%)</title><rect x="764.8" y="357" width="1.5" height="15.0" fill="rgb(253,220,0)" rx="2" ry="2" />
<text  x="767.76" y="367.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (3 samples, 0.02%)</title><rect x="1182.7" y="709" width="0.3" height="15.0" fill="rgb(249,38,44)" rx="2" ry="2" />
<text  x="1185.75" y="719.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (4 samples, 0.03%)</title><rect x="949.5" y="837" width="0.4" height="15.0" fill="rgb(231,99,40)" rx="2" ry="2" />
<text  x="952.53" y="847.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (61 samples, 0.43%)</title><rect x="614.4" y="293" width="5.1" height="15.0" fill="rgb(244,199,24)" rx="2" ry="2" />
<text  x="617.42" y="303.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_object (36 samples, 0.25%)</title><rect x="679.0" y="357" width="3.0" height="15.0" fill="rgb(239,49,54)" rx="2" ry="2" />
<text  x="682.04" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 0.17%)</title><rect x="630.4" y="149" width="2.0" height="15.0" fill="rgb(219,26,25)" rx="2" ry="2" />
<text  x="633.43" y="159.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (229 samples, 1.62%)</title><rect x="697.4" y="725" width="19.1" height="15.0" fill="rgb(247,213,17)" rx="2" ry="2" />
<text  x="700.39" y="735.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.03%)</title><rect x="960.5" y="757" width="0.3" height="15.0" fill="rgb(248,33,38)" rx="2" ry="2" />
<text  x="963.45" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.04%)</title><rect x="548.9" y="229" width="0.4" height="15.0" fill="rgb(205,15,54)" rx="2" ry="2" />
<text  x="551.89" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.04%)</title><rect x="859.8" y="165" width="0.4" height="15.0" fill="rgb(213,27,40)" rx="2" ry="2" />
<text  x="862.81" y="175.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (11 samples, 0.08%)</title><rect x="667.2" y="165" width="0.9" height="15.0" fill="rgb(231,219,10)" rx="2" ry="2" />
<text  x="670.20" y="175.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::State as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="89.5" y="821" width="0.2" height="15.0" fill="rgb(241,75,27)" rx="2" ry="2" />
<text  x="92.54" y="831.5" ></text>
</g>
<g >
<title>napi_poll (8 samples, 0.06%)</title><rect x="31.2" y="613" width="0.6" height="15.0" fill="rgb(234,227,28)" rx="2" ry="2" />
<text  x="34.18" y="623.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (52 samples, 0.37%)</title><rect x="832.6" y="229" width="4.4" height="15.0" fill="rgb(240,15,4)" rx="2" ry="2" />
<text  x="835.63" y="239.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (248 samples, 1.75%)</title><rect x="1030.1" y="629" width="20.7" height="15.0" fill="rgb(221,91,54)" rx="2" ry="2" />
<text  x="1033.08" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.01%)</title><rect x="535.5" y="213" width="0.1" height="15.0" fill="rgb(215,65,37)" rx="2" ry="2" />
<text  x="538.46" y="223.5" ></text>
</g>
<g >
<title>__pagevec_release (3 samples, 0.02%)</title><rect x="977.5" y="613" width="0.3" height="15.0" fill="rgb(218,206,29)" rx="2" ry="2" />
<text  x="980.55" y="623.5" ></text>
</g>
<g >
<title>run_rebalance_domains (9 samples, 0.06%)</title><rect x="988.5" y="629" width="0.7" height="15.0" fill="rgb(220,103,40)" rx="2" ry="2" />
<text  x="991.47" y="639.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 0.53%)</title><rect x="822.3" y="149" width="6.2" height="15.0" fill="rgb(224,97,12)" rx="2" ry="2" />
<text  x="825.29" y="159.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (35 samples, 0.25%)</title><rect x="495.2" y="405" width="2.9" height="15.0" fill="rgb(244,84,42)" rx="2" ry="2" />
<text  x="498.19" y="415.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (5 samples, 0.04%)</title><rect x="808.5" y="821" width="0.4" height="15.0" fill="rgb(241,159,17)" rx="2" ry="2" />
<text  x="811.45" y="831.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (9 samples, 0.06%)</title><rect x="626.3" y="197" width="0.7" height="15.0" fill="rgb(205,8,9)" rx="2" ry="2" />
<text  x="629.26" y="207.5" ></text>
</g>
<g >
<title>idle_cpu (3 samples, 0.02%)</title><rect x="1172.6" y="581" width="0.2" height="15.0" fill="rgb(232,187,6)" rx="2" ry="2" />
<text  x="1175.57" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="26.4" y="837" width="0.4" height="15.0" fill="rgb(247,154,33)" rx="2" ry="2" />
<text  x="29.43" y="847.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8_unchecked (2 samples, 0.01%)</title><rect x="725.8" y="149" width="0.2" height="15.0" fill="rgb(239,18,54)" rx="2" ry="2" />
<text  x="728.82" y="159.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.02%)</title><rect x="809.9" y="277" width="0.2" height="15.0" fill="rgb(241,129,38)" rx="2" ry="2" />
<text  x="812.87" y="287.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (58 samples, 0.41%)</title><rect x="837.9" y="309" width="4.8" height="15.0" fill="rgb(216,80,20)" rx="2" ry="2" />
<text  x="840.88" y="319.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (8 samples, 0.06%)</title><rect x="646.8" y="149" width="0.6" height="15.0" fill="rgb(250,60,8)" rx="2" ry="2" />
<text  x="649.78" y="159.5" ></text>
</g>
<g >
<title>dyntick_save_progress_counter (25 samples, 0.18%)</title><rect x="957.5" y="757" width="2.0" height="15.0" fill="rgb(224,187,10)" rx="2" ry="2" />
<text  x="960.45" y="767.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (3 samples, 0.02%)</title><rect x="874.9" y="229" width="0.3" height="15.0" fill="rgb(217,218,46)" rx="2" ry="2" />
<text  x="877.91" y="239.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.01%)</title><rect x="542.2" y="197" width="0.2" height="15.0" fill="rgb(230,141,47)" rx="2" ry="2" />
<text  x="545.22" y="207.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,630 samples, 11.52%)</title><rect x="1022.6" y="709" width="135.9" height="15.0" fill="rgb(228,162,43)" rx="2" ry="2" />
<text  x="1025.57" y="719.5" >cpuidle_idle_call</text>
</g>
<g >
<title>__hrtimer_next_event_base (3 samples, 0.02%)</title><rect x="1152.9" y="629" width="0.2" height="15.0" fill="rgb(208,14,32)" rx="2" ry="2" />
<text  x="1155.90" y="639.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="697.2" y="789" width="0.2" height="15.0" fill="rgb(247,86,41)" rx="2" ry="2" />
<text  x="700.22" y="799.5" ></text>
</g>
<g >
<title>cpuacct_charge (6 samples, 0.04%)</title><rect x="965.6" y="661" width="0.5" height="15.0" fill="rgb(244,89,12)" rx="2" ry="2" />
<text  x="968.62" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (221 samples, 1.56%)</title><rect x="856.7" y="773" width="18.5" height="15.0" fill="rgb(205,97,12)" rx="2" ry="2" />
<text  x="859.73" y="783.5" ></text>
</g>
<g >
<title>cpu_startup_entry (129 samples, 0.91%)</title><rect x="30.7" y="805" width="10.7" height="15.0" fill="rgb(247,93,20)" rx="2" ry="2" />
<text  x="33.68" y="815.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (43 samples, 0.30%)</title><rect x="857.2" y="325" width="3.6" height="15.0" fill="rgb(253,87,22)" rx="2" ry="2" />
<text  x="860.23" y="335.5" ></text>
</g>
<g >
<title>ipv6_list_rcv (2 samples, 0.01%)</title><rect x="987.0" y="517" width="0.1" height="15.0" fill="rgb(211,84,41)" rx="2" ry="2" />
<text  x="989.97" y="527.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (15 samples, 0.11%)</title><rect x="1038.2" y="501" width="1.2" height="15.0" fill="rgb(226,142,48)" rx="2" ry="2" />
<text  x="1041.16" y="511.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (2 samples, 0.01%)</title><rect x="860.3" y="149" width="0.2" height="15.0" fill="rgb(243,45,24)" rx="2" ry="2" />
<text  x="863.31" y="159.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (4 samples, 0.03%)</title><rect x="1020.1" y="773" width="0.3" height="15.0" fill="rgb(235,104,50)" rx="2" ry="2" />
<text  x="1023.07" y="783.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.01%)</title><rect x="724.9" y="325" width="0.2" height="15.0" fill="rgb(247,117,8)" rx="2" ry="2" />
<text  x="727.90" y="335.5" ></text>
</g>
<g >
<title>ext4_da_write_end (3 samples, 0.02%)</title><rect x="494.4" y="389" width="0.3" height="15.0" fill="rgb(238,121,34)" rx="2" ry="2" />
<text  x="497.44" y="399.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (7 samples, 0.05%)</title><rect x="792.6" y="789" width="0.6" height="15.0" fill="rgb(225,149,41)" rx="2" ry="2" />
<text  x="795.61" y="799.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.01%)</title><rect x="549.0" y="197" width="0.1" height="15.0" fill="rgb(222,94,9)" rx="2" ry="2" />
<text  x="551.97" y="207.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (76 samples, 0.54%)</title><rect x="688.3" y="645" width="6.3" height="15.0" fill="rgb(227,46,15)" rx="2" ry="2" />
<text  x="691.30" y="655.5" ></text>
</g>
<g >
<title>enqueue_task (5 samples, 0.04%)</title><rect x="32.6" y="517" width="0.4" height="15.0" fill="rgb(226,92,50)" rx="2" ry="2" />
<text  x="35.60" y="527.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (11 samples, 0.08%)</title><rect x="115.5" y="437" width="0.9" height="15.0" fill="rgb(215,117,14)" rx="2" ry="2" />
<text  x="118.48" y="447.5" ></text>
</g>
<g >
<title>do_sys_openat2 (4 samples, 0.03%)</title><rect x="950.9" y="789" width="0.4" height="15.0" fill="rgb(226,44,26)" rx="2" ry="2" />
<text  x="953.95" y="799.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (2 samples, 0.01%)</title><rect x="766.2" y="293" width="0.1" height="15.0" fill="rgb(208,147,16)" rx="2" ry="2" />
<text  x="769.18" y="303.5" ></text>
</g>
<g >
<title>generic_exec_single (63 samples, 0.45%)</title><rect x="10.1" y="581" width="5.2" height="15.0" fill="rgb(249,103,36)" rx="2" ry="2" />
<text  x="13.08" y="591.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.02%)</title><rect x="809.9" y="293" width="0.2" height="15.0" fill="rgb(237,118,37)" rx="2" ry="2" />
<text  x="812.87" y="303.5" ></text>
</g>
<g >
<title>pick_next_task_fair (4 samples, 0.03%)</title><rect x="1182.0" y="693" width="0.3" height="15.0" fill="rgb(222,61,6)" rx="2" ry="2" />
<text  x="1185.00" y="703.5" ></text>
</g>
<g >
<title>lookup_open.isra.0 (4 samples, 0.03%)</title><rect x="499.4" y="405" width="0.3" height="15.0" fill="rgb(207,51,33)" rx="2" ry="2" />
<text  x="502.36" y="415.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (2 samples, 0.01%)</title><rect x="15.5" y="421" width="0.2" height="15.0" fill="rgb(207,27,0)" rx="2" ry="2" />
<text  x="18.50" y="431.5" ></text>
</g>
<g >
<title>pick_next_entity (2 samples, 0.01%)</title><rect x="1178.4" y="661" width="0.2" height="15.0" fill="rgb(242,40,23)" rx="2" ry="2" />
<text  x="1181.41" y="671.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (345 samples, 2.44%)</title><rect x="41.4" y="805" width="28.8" height="15.0" fill="rgb(209,123,43)" rx="2" ry="2" />
<text  x="44.43" y="815.5" >x8..</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (4 samples, 0.03%)</title><rect x="739.4" y="245" width="0.3" height="15.0" fill="rgb(221,159,0)" rx="2" ry="2" />
<text  x="742.41" y="255.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.06%)</title><rect x="687.5" y="773" width="0.7" height="15.0" fill="rgb(229,56,5)" rx="2" ry="2" />
<text  x="690.55" y="783.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (15 samples, 0.11%)</title><rect x="512.9" y="309" width="1.2" height="15.0" fill="rgb(227,48,10)" rx="2" ry="2" />
<text  x="515.87" y="319.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (2 samples, 0.01%)</title><rect x="1184.0" y="693" width="0.2" height="15.0" fill="rgb(249,220,1)" rx="2" ry="2" />
<text  x="1187.00" y="703.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.04%)</title><rect x="764.3" y="325" width="0.5" height="15.0" fill="rgb(254,93,4)" rx="2" ry="2" />
<text  x="767.34" y="335.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (2 samples, 0.01%)</title><rect x="697.7" y="181" width="0.2" height="15.0" fill="rgb(243,54,48)" rx="2" ry="2" />
<text  x="700.72" y="191.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.07%)</title><rect x="543.6" y="197" width="0.8" height="15.0" fill="rgb(239,126,28)" rx="2" ry="2" />
<text  x="546.55" y="207.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (7 samples, 0.05%)</title><rect x="654.2" y="197" width="0.6" height="15.0" fill="rgb(219,168,27)" rx="2" ry="2" />
<text  x="657.20" y="207.5" ></text>
</g>
<g >
<title>vfs_create (3 samples, 0.02%)</title><rect x="499.4" y="309" width="0.3" height="15.0" fill="rgb(218,225,9)" rx="2" ry="2" />
<text  x="502.44" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (63 samples, 0.45%)</title><rect x="10.1" y="693" width="5.2" height="15.0" fill="rgb(215,20,36)" rx="2" ry="2" />
<text  x="13.08" y="703.5" ></text>
</g>
<g >
<title>submit_bio_noacct (2 samples, 0.01%)</title><rect x="976.0" y="597" width="0.2" height="15.0" fill="rgb(232,153,20)" rx="2" ry="2" />
<text  x="979.05" y="607.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (3 samples, 0.02%)</title><rect x="769.1" y="149" width="0.2" height="15.0" fill="rgb(251,141,32)" rx="2" ry="2" />
<text  x="772.10" y="159.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="31.4" y="533" width="0.4" height="15.0" fill="rgb(249,17,54)" rx="2" ry="2" />
<text  x="34.43" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (2 samples, 0.01%)</title><rect x="1018.7" y="741" width="0.1" height="15.0" fill="rgb(209,167,21)" rx="2" ry="2" />
<text  x="1021.65" y="751.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (8 samples, 0.06%)</title><rect x="767.3" y="101" width="0.6" height="15.0" fill="rgb(226,16,4)" rx="2" ry="2" />
<text  x="770.26" y="111.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (2,167 samples, 15.31%)</title><rect x="504.1" y="469" width="180.7" height="15.0" fill="rgb(226,49,13)" rx="2" ry="2" />
<text  x="507.11" y="479.5" >core::iter::traits::ite..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.06%)</title><rect x="515.4" y="277" width="0.7" height="15.0" fill="rgb(251,133,36)" rx="2" ry="2" />
<text  x="518.37" y="287.5" ></text>
</g>
<g >
<title>clockevents_program_event (16 samples, 0.11%)</title><rect x="1048.5" y="565" width="1.3" height="15.0" fill="rgb(222,99,40)" rx="2" ry="2" />
<text  x="1051.50" y="575.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (42 samples, 0.30%)</title><rect x="707.5" y="245" width="3.5" height="15.0" fill="rgb(253,109,49)" rx="2" ry="2" />
<text  x="710.48" y="255.5" ></text>
</g>
<g >
<title>user_path_at_empty (4 samples, 0.03%)</title><rect x="499.8" y="501" width="0.3" height="15.0" fill="rgb(217,62,25)" rx="2" ry="2" />
<text  x="502.78" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.01%)</title><rect x="683.6" y="261" width="0.2" height="15.0" fill="rgb(253,192,33)" rx="2" ry="2" />
<text  x="686.63" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;rustposix::interface::file::EmulatedFile&gt; (2 samples, 0.01%)</title><rect x="494.9" y="661" width="0.2" height="15.0" fill="rgb(236,205,23)" rx="2" ry="2" />
<text  x="497.94" y="671.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="986.2" y="421" width="0.2" height="15.0" fill="rgb(228,107,49)" rx="2" ry="2" />
<text  x="989.22" y="431.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.01%)</title><rect x="856.0" y="373" width="0.1" height="15.0" fill="rgb(214,32,39)" rx="2" ry="2" />
<text  x="858.98" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (155 samples, 1.10%)</title><rect x="842.7" y="261" width="12.9" height="15.0" fill="rgb(253,28,20)" rx="2" ry="2" />
<text  x="845.72" y="271.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (15 samples, 0.11%)</title><rect x="845.1" y="197" width="1.2" height="15.0" fill="rgb(231,20,15)" rx="2" ry="2" />
<text  x="848.06" y="207.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (21 samples, 0.15%)</title><rect x="853.6" y="213" width="1.7" height="15.0" fill="rgb(220,141,6)" rx="2" ry="2" />
<text  x="856.56" y="223.5" ></text>
</g>
<g >
<title>__GI___readlink (4 samples, 0.03%)</title><rect x="499.8" y="581" width="0.3" height="15.0" fill="rgb(252,137,45)" rx="2" ry="2" />
<text  x="502.78" y="591.5" ></text>
</g>
<g >
<title>force_qs_rnp (5 samples, 0.04%)</title><rect x="27.5" y="773" width="0.4" height="15.0" fill="rgb(228,73,34)" rx="2" ry="2" />
<text  x="30.51" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.08%)</title><rect x="115.5" y="581" width="1.0" height="15.0" fill="rgb(250,82,19)" rx="2" ry="2" />
<text  x="118.48" y="591.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.01%)</title><rect x="511.6" y="245" width="0.2" height="15.0" fill="rgb(247,143,40)" rx="2" ry="2" />
<text  x="514.62" y="255.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (59 samples, 0.42%)</title><rect x="576.8" y="165" width="4.9" height="15.0" fill="rgb(244,164,54)" rx="2" ry="2" />
<text  x="579.82" y="175.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (257 samples, 1.82%)</title><rect x="742.8" y="821" width="21.5" height="15.0" fill="rgb(251,36,51)" rx="2" ry="2" />
<text  x="745.83" y="831.5" >N..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (222 samples, 1.57%)</title><rect x="697.9" y="357" width="18.5" height="15.0" fill="rgb(232,215,27)" rx="2" ry="2" />
<text  x="700.89" y="367.5" ></text>
</g>
<g >
<title>del_timer_sync (2 samples, 0.01%)</title><rect x="962.0" y="757" width="0.1" height="15.0" fill="rgb(249,192,53)" rx="2" ry="2" />
<text  x="964.95" y="767.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (5 samples, 0.04%)</title><rect x="1050.9" y="613" width="0.4" height="15.0" fill="rgb(236,34,3)" rx="2" ry="2" />
<text  x="1053.92" y="623.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (7 samples, 0.05%)</title><rect x="857.9" y="245" width="0.6" height="15.0" fill="rgb(244,177,16)" rx="2" ry="2" />
<text  x="860.90" y="255.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (6 samples, 0.04%)</title><rect x="697.4" y="293" width="0.5" height="15.0" fill="rgb(238,184,32)" rx="2" ry="2" />
<text  x="700.39" y="303.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (7 samples, 0.05%)</title><rect x="114.8" y="661" width="0.6" height="15.0" fill="rgb(252,33,9)" rx="2" ry="2" />
<text  x="117.81" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (215 samples, 1.52%)</title><rect x="724.9" y="629" width="17.9" height="15.0" fill="rgb(227,229,20)" rx="2" ry="2" />
<text  x="727.90" y="639.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (33 samples, 0.23%)</title><rect x="640.1" y="213" width="2.8" height="15.0" fill="rgb(222,221,23)" rx="2" ry="2" />
<text  x="643.11" y="223.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (3 samples, 0.02%)</title><rect x="979.4" y="677" width="0.2" height="15.0" fill="rgb(242,11,16)" rx="2" ry="2" />
<text  x="982.38" y="687.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (22 samples, 0.16%)</title><rect x="810.5" y="181" width="1.8" height="15.0" fill="rgb(216,36,44)" rx="2" ry="2" />
<text  x="813.45" y="191.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (2 samples, 0.01%)</title><rect x="970.4" y="693" width="0.1" height="15.0" fill="rgb(253,190,15)" rx="2" ry="2" />
<text  x="973.38" y="703.5" ></text>
</g>
<g >
<title>update_blocked_averages (8 samples, 0.06%)</title><rect x="48.0" y="549" width="0.7" height="15.0" fill="rgb(227,14,0)" rx="2" ry="2" />
<text  x="51.02" y="559.5" ></text>
</g>
<g >
<title>wb_do_writeback (38 samples, 0.27%)</title><rect x="976.0" y="757" width="3.1" height="15.0" fill="rgb(225,22,29)" rx="2" ry="2" />
<text  x="978.96" y="767.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (301 samples, 2.13%)</title><rect x="764.3" y="821" width="25.1" height="15.0" fill="rgb(253,191,40)" rx="2" ry="2" />
<text  x="767.26" y="831.5" >N..</text>
</g>
<g >
<title>rcu_idle_enter (3 samples, 0.02%)</title><rect x="1144.2" y="677" width="0.3" height="15.0" fill="rgb(206,210,2)" rx="2" ry="2" />
<text  x="1147.22" y="687.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (19 samples, 0.13%)</title><rect x="727.9" y="245" width="1.6" height="15.0" fill="rgb(220,61,26)" rx="2" ry="2" />
<text  x="730.91" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.04%)</title><rect x="511.4" y="261" width="0.4" height="15.0" fill="rgb(245,179,37)" rx="2" ry="2" />
<text  x="514.37" y="271.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.01%)</title><rect x="951.9" y="773" width="0.2" height="15.0" fill="rgb(206,160,35)" rx="2" ry="2" />
<text  x="954.95" y="783.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (3 samples, 0.02%)</title><rect x="971.3" y="709" width="0.2" height="15.0" fill="rgb(241,91,53)" rx="2" ry="2" />
<text  x="974.29" y="719.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (21 samples, 0.15%)</title><rect x="830.1" y="165" width="1.8" height="15.0" fill="rgb(220,51,40)" rx="2" ry="2" />
<text  x="833.13" y="175.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (172 samples, 1.22%)</title><rect x="860.8" y="341" width="14.4" height="15.0" fill="rgb(228,60,32)" rx="2" ry="2" />
<text  x="863.81" y="351.5" ></text>
</g>
<g >
<title>_perf_event_enable (63 samples, 0.45%)</title><rect x="10.1" y="629" width="5.2" height="15.0" fill="rgb(227,118,52)" rx="2" ry="2" />
<text  x="13.08" y="639.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (5 samples, 0.04%)</title><rect x="870.4" y="261" width="0.4" height="15.0" fill="rgb(237,180,44)" rx="2" ry="2" />
<text  x="873.40" y="271.5" ></text>
</g>
<g >
<title>evict (7 samples, 0.05%)</title><rect x="114.8" y="517" width="0.6" height="15.0" fill="rgb(208,37,33)" rx="2" ry="2" />
<text  x="117.81" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (18 samples, 0.13%)</title><rect x="511.2" y="309" width="1.5" height="15.0" fill="rgb(216,30,41)" rx="2" ry="2" />
<text  x="514.20" y="319.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (3 samples, 0.02%)</title><rect x="106.9" y="821" width="0.2" height="15.0" fill="rgb(223,15,54)" rx="2" ry="2" />
<text  x="109.89" y="831.5" ></text>
</g>
<g >
<title>rebalance_domains (5 samples, 0.04%)</title><rect x="988.5" y="613" width="0.4" height="15.0" fill="rgb(229,51,24)" rx="2" ry="2" />
<text  x="991.47" y="623.5" ></text>
</g>
<g >
<title>do_sys_openat2 (13 samples, 0.09%)</title><rect x="498.6" y="469" width="1.1" height="15.0" fill="rgb(213,22,20)" rx="2" ry="2" />
<text  x="501.61" y="479.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (2 samples, 0.01%)</title><rect x="47.8" y="485" width="0.1" height="15.0" fill="rgb(251,133,10)" rx="2" ry="2" />
<text  x="50.77" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (6 samples, 0.04%)</title><rect x="645.8" y="133" width="0.5" height="15.0" fill="rgb(217,73,11)" rx="2" ry="2" />
<text  x="648.78" y="143.5" ></text>
</g>
<g >
<title>ovl_write_iter (18 samples, 0.13%)</title><rect x="493.4" y="501" width="1.5" height="15.0" fill="rgb(217,187,41)" rx="2" ry="2" />
<text  x="496.44" y="511.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (23 samples, 0.16%)</title><rect x="968.4" y="661" width="1.9" height="15.0" fill="rgb(251,196,43)" rx="2" ry="2" />
<text  x="971.37" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (9 samples, 0.06%)</title><rect x="500.1" y="565" width="0.8" height="15.0" fill="rgb(234,22,12)" rx="2" ry="2" />
<text  x="503.11" y="575.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (34 samples, 0.24%)</title><rect x="850.3" y="213" width="2.8" height="15.0" fill="rgb(252,226,24)" rx="2" ry="2" />
<text  x="853.31" y="223.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.02%)</title><rect x="875.2" y="165" width="0.2" height="15.0" fill="rgb(226,179,39)" rx="2" ry="2" />
<text  x="878.16" y="175.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (26 samples, 0.18%)</title><rect x="546.2" y="293" width="2.2" height="15.0" fill="rgb(205,36,49)" rx="2" ry="2" />
<text  x="549.22" y="303.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (7 samples, 0.05%)</title><rect x="521.2" y="341" width="0.6" height="15.0" fill="rgb(224,123,25)" rx="2" ry="2" />
<text  x="524.21" y="351.5" ></text>
</g>
<g >
<title>create_empty_buffers (3 samples, 0.02%)</title><rect x="495.7" y="341" width="0.2" height="15.0" fill="rgb(244,3,12)" rx="2" ry="2" />
<text  x="498.69" y="351.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (28 samples, 0.20%)</title><rect x="858.5" y="261" width="2.3" height="15.0" fill="rgb(219,1,5)" rx="2" ry="2" />
<text  x="861.48" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.09%)</title><rect x="535.0" y="229" width="1.0" height="15.0" fill="rgb(228,165,43)" rx="2" ry="2" />
<text  x="537.96" y="239.5" ></text>
</g>
<g >
<title>__run_hrtimer (8 samples, 0.06%)</title><rect x="987.3" y="629" width="0.7" height="15.0" fill="rgb(239,36,48)" rx="2" ry="2" />
<text  x="990.30" y="639.5" ></text>
</g>
<g >
<title>native_sched_clock (8 samples, 0.06%)</title><rect x="1142.6" y="645" width="0.6" height="15.0" fill="rgb(239,229,42)" rx="2" ry="2" />
<text  x="1145.56" y="655.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (8 samples, 0.06%)</title><rect x="741.1" y="277" width="0.6" height="15.0" fill="rgb(254,211,27)" rx="2" ry="2" />
<text  x="744.08" y="287.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (12 samples, 0.08%)</title><rect x="115.5" y="661" width="1.0" height="15.0" fill="rgb(229,5,53)" rx="2" ry="2" />
<text  x="118.48" y="671.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (2 samples, 0.01%)</title><rect x="40.5" y="709" width="0.2" height="15.0" fill="rgb(239,199,29)" rx="2" ry="2" />
<text  x="43.52" y="719.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (3 samples, 0.02%)</title><rect x="764.8" y="245" width="0.2" height="15.0" fill="rgb(218,60,0)" rx="2" ry="2" />
<text  x="767.76" y="255.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.01%)</title><rect x="540.8" y="245" width="0.2" height="15.0" fill="rgb(226,23,17)" rx="2" ry="2" />
<text  x="543.80" y="255.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.06%)</title><rect x="688.6" y="245" width="0.6" height="15.0" fill="rgb(232,91,10)" rx="2" ry="2" />
<text  x="691.55" y="255.5" ></text>
</g>
<g >
<title>kthread_is_per_cpu (3 samples, 0.02%)</title><rect x="1072.5" y="469" width="0.3" height="15.0" fill="rgb(246,61,54)" rx="2" ry="2" />
<text  x="1075.52" y="479.5" ></text>
</g>
<g >
<title>update_load_avg (11 samples, 0.08%)</title><rect x="1076.3" y="405" width="0.9" height="15.0" fill="rgb(240,19,30)" rx="2" ry="2" />
<text  x="1079.27" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (14 samples, 0.10%)</title><rect x="1183.0" y="709" width="1.2" height="15.0" fill="rgb(218,117,15)" rx="2" ry="2" />
<text  x="1186.00" y="719.5" ></text>
</g>
<g >
<title>mpage_process_page_bufs (4 samples, 0.03%)</title><rect x="977.8" y="613" width="0.3" height="15.0" fill="rgb(215,122,41)" rx="2" ry="2" />
<text  x="980.80" y="623.5" ></text>
</g>
<g >
<title>do_iter_write (18 samples, 0.13%)</title><rect x="493.4" y="469" width="1.5" height="15.0" fill="rgb(252,14,24)" rx="2" ry="2" />
<text  x="496.44" y="479.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (300 samples, 2.12%)</title><rect x="764.3" y="549" width="25.1" height="15.0" fill="rgb(232,119,3)" rx="2" ry="2" />
<text  x="767.34" y="559.5" >&lt;..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::end (19 samples, 0.13%)</title><rect x="548.4" y="325" width="1.6" height="15.0" fill="rgb(252,82,36)" rx="2" ry="2" />
<text  x="551.39" y="335.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (5 samples, 0.04%)</title><rect x="664.3" y="197" width="0.4" height="15.0" fill="rgb(253,126,3)" rx="2" ry="2" />
<text  x="667.29" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="677.7" y="261" width="0.3" height="15.0" fill="rgb(212,160,51)" rx="2" ry="2" />
<text  x="680.71" y="271.5" ></text>
</g>
<g >
<title>native_write_msr (63 samples, 0.45%)</title><rect x="10.1" y="469" width="5.2" height="15.0" fill="rgb(239,163,0)" rx="2" ry="2" />
<text  x="13.08" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (3 samples, 0.02%)</title><rect x="41.0" y="773" width="0.3" height="15.0" fill="rgb(216,166,48)" rx="2" ry="2" />
<text  x="44.02" y="783.5" ></text>
</g>
<g >
<title>find_busiest_group (6 samples, 0.04%)</title><rect x="47.5" y="517" width="0.5" height="15.0" fill="rgb(236,157,19)" rx="2" ry="2" />
<text  x="50.52" y="527.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (300 samples, 2.12%)</title><rect x="764.3" y="533" width="25.1" height="15.0" fill="rgb(210,1,29)" rx="2" ry="2" />
<text  x="767.34" y="543.5" >s..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (177 samples, 1.25%)</title><rect x="726.3" y="293" width="14.8" height="15.0" fill="rgb(238,223,42)" rx="2" ry="2" />
<text  x="729.32" y="303.5" ></text>
</g>
<g >
<title>update_blocked_averages (41 samples, 0.29%)</title><rect x="1172.8" y="581" width="3.4" height="15.0" fill="rgb(246,95,17)" rx="2" ry="2" />
<text  x="1175.82" y="591.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.01%)</title><rect x="494.9" y="597" width="0.2" height="15.0" fill="rgb(207,211,22)" rx="2" ry="2" />
<text  x="497.94" y="607.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (201 samples, 1.42%)</title><rect x="619.5" y="277" width="16.8" height="15.0" fill="rgb(231,225,24)" rx="2" ry="2" />
<text  x="622.51" y="287.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (76 samples, 0.54%)</title><rect x="688.3" y="581" width="6.3" height="15.0" fill="rgb(238,31,29)" rx="2" ry="2" />
<text  x="691.30" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (42 samples, 0.30%)</title><rect x="643.9" y="197" width="3.5" height="15.0" fill="rgb(214,204,27)" rx="2" ry="2" />
<text  x="646.94" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.12%)</title><rect x="508.5" y="293" width="1.4" height="15.0" fill="rgb(247,7,31)" rx="2" ry="2" />
<text  x="511.53" y="303.5" ></text>
</g>
<g >
<title>ip6_sublist_rcv (2 samples, 0.01%)</title><rect x="987.0" y="501" width="0.1" height="15.0" fill="rgb(248,5,11)" rx="2" ry="2" />
<text  x="989.97" y="511.5" ></text>
</g>
<g >
<title>menu_select (124 samples, 0.88%)</title><rect x="1146.4" y="677" width="10.3" height="15.0" fill="rgb(246,82,51)" rx="2" ry="2" />
<text  x="1149.39" y="687.5" ></text>
</g>
<g >
<title>handle_irq_event (30 samples, 0.21%)</title><rect x="980.6" y="661" width="2.5" height="15.0" fill="rgb(224,173,52)" rx="2" ry="2" />
<text  x="983.63" y="671.5" ></text>
</g>
<g >
<title>leave_mm (3 samples, 0.02%)</title><rect x="1144.0" y="677" width="0.2" height="15.0" fill="rgb(224,58,50)" rx="2" ry="2" />
<text  x="1146.97" y="687.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (4 samples, 0.03%)</title><rect x="855.6" y="149" width="0.4" height="15.0" fill="rgb(251,18,35)" rx="2" ry="2" />
<text  x="858.64" y="159.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (6 samples, 0.04%)</title><rect x="697.4" y="325" width="0.5" height="15.0" fill="rgb(237,225,43)" rx="2" ry="2" />
<text  x="700.39" y="335.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.02%)</title><rect x="508.7" y="245" width="0.2" height="15.0" fill="rgb(224,214,31)" rx="2" ry="2" />
<text  x="511.70" y="255.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 0.01%)</title><rect x="114.5" y="725" width="0.1" height="15.0" fill="rgb(241,112,38)" rx="2" ry="2" />
<text  x="117.48" y="735.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (10 samples, 0.07%)</title><rect x="744.6" y="101" width="0.8" height="15.0" fill="rgb(253,185,50)" rx="2" ry="2" />
<text  x="747.58" y="111.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (4 samples, 0.03%)</title><rect x="860.5" y="181" width="0.3" height="15.0" fill="rgb(228,86,10)" rx="2" ry="2" />
<text  x="863.48" y="191.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (19 samples, 0.13%)</title><rect x="727.9" y="229" width="1.6" height="15.0" fill="rgb(205,17,16)" rx="2" ry="2" />
<text  x="730.91" y="239.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.01%)</title><rect x="856.1" y="357" width="0.2" height="15.0" fill="rgb(236,144,44)" rx="2" ry="2" />
<text  x="859.14" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.02%)</title><rect x="548.9" y="213" width="0.2" height="15.0" fill="rgb(209,45,2)" rx="2" ry="2" />
<text  x="551.89" y="223.5" ></text>
</g>
<g >
<title>lind_write (221 samples, 1.56%)</title><rect x="856.7" y="821" width="18.5" height="15.0" fill="rgb(219,183,28)" rx="2" ry="2" />
<text  x="859.73" y="831.5" ></text>
</g>
<g >
<title>collect_percpu_times (3 samples, 0.02%)</title><rect x="975.1" y="757" width="0.3" height="15.0" fill="rgb(221,9,22)" rx="2" ry="2" />
<text  x="978.13" y="767.5" ></text>
</g>
<g >
<title>perf_mmap__push (8 samples, 0.06%)</title><rect x="15.3" y="757" width="0.7" height="15.0" fill="rgb(207,159,34)" rx="2" ry="2" />
<text  x="18.34" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (30 samples, 0.21%)</title><rect x="834.5" y="165" width="2.5" height="15.0" fill="rgb(237,213,1)" rx="2" ry="2" />
<text  x="837.47" y="175.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (557 samples, 3.94%)</title><rect x="809.5" y="565" width="46.5" height="15.0" fill="rgb(227,108,30)" rx="2" ry="2" />
<text  x="812.54" y="575.5" >core..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.01%)</title><rect x="540.8" y="197" width="0.2" height="15.0" fill="rgb(244,23,33)" rx="2" ry="2" />
<text  x="543.80" y="207.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (25 samples, 0.18%)</title><rect x="510.6" y="341" width="2.1" height="15.0" fill="rgb(206,124,18)" rx="2" ry="2" />
<text  x="513.62" y="351.5" ></text>
</g>
<g >
<title>__run_hrtimer (3 samples, 0.02%)</title><rect x="31.8" y="629" width="0.3" height="15.0" fill="rgb(247,96,45)" rx="2" ry="2" />
<text  x="34.85" y="639.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.04%)</title><rect x="697.4" y="405" width="0.5" height="15.0" fill="rgb(254,6,37)" rx="2" ry="2" />
<text  x="700.39" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (5 samples, 0.04%)</title><rect x="799.8" y="821" width="0.4" height="15.0" fill="rgb(225,125,21)" rx="2" ry="2" />
<text  x="802.78" y="831.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (16 samples, 0.11%)</title><rect x="858.5" y="229" width="1.3" height="15.0" fill="rgb(225,100,6)" rx="2" ry="2" />
<text  x="861.48" y="239.5" ></text>
</g>
<g >
<title>record__write (8 samples, 0.06%)</title><rect x="15.3" y="725" width="0.7" height="15.0" fill="rgb(246,94,5)" rx="2" ry="2" />
<text  x="18.34" y="735.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (557 samples, 3.94%)</title><rect x="809.5" y="501" width="46.5" height="15.0" fill="rgb(238,15,8)" rx="2" ry="2" />
<text  x="812.54" y="511.5" >serd..</text>
</g>
<g >
<title>__libc_write (37 samples, 0.26%)</title><rect x="495.1" y="597" width="3.1" height="15.0" fill="rgb(216,119,50)" rx="2" ry="2" />
<text  x="498.11" y="607.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.02%)</title><rect x="977.5" y="597" width="0.3" height="15.0" fill="rgb(243,15,44)" rx="2" ry="2" />
<text  x="980.55" y="607.5" ></text>
</g>
<g >
<title>itoa::Buffer::new (12 samples, 0.08%)</title><rect x="858.7" y="181" width="1.0" height="15.0" fill="rgb(212,76,21)" rx="2" ry="2" />
<text  x="861.73" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (156 samples, 1.10%)</title><rect x="658.7" y="245" width="13.0" height="15.0" fill="rgb(248,193,15)" rx="2" ry="2" />
<text  x="661.70" y="255.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (61 samples, 0.43%)</title><rect x="772.0" y="277" width="5.1" height="15.0" fill="rgb(212,211,25)" rx="2" ry="2" />
<text  x="775.01" y="287.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (8 samples, 0.06%)</title><rect x="15.3" y="773" width="0.7" height="15.0" fill="rgb(223,179,48)" rx="2" ry="2" />
<text  x="18.34" y="783.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.01%)</title><rect x="688.3" y="309" width="0.2" height="15.0" fill="rgb(239,220,6)" rx="2" ry="2" />
<text  x="691.30" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.14%)</title><rect x="679.7" y="293" width="1.7" height="15.0" fill="rgb(249,169,2)" rx="2" ry="2" />
<text  x="682.71" y="303.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (181 samples, 1.28%)</title><rect x="621.2" y="261" width="15.1" height="15.0" fill="rgb(212,35,24)" rx="2" ry="2" />
<text  x="624.18" y="271.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (30 samples, 0.21%)</title><rect x="834.5" y="197" width="2.5" height="15.0" fill="rgb(235,8,1)" rx="2" ry="2" />
<text  x="837.47" y="207.5" ></text>
</g>
<g >
<title>ovl_write_iter (36 samples, 0.25%)</title><rect x="495.1" y="485" width="3.0" height="15.0" fill="rgb(223,16,47)" rx="2" ry="2" />
<text  x="498.11" y="495.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (221 samples, 1.56%)</title><rect x="856.7" y="661" width="18.5" height="15.0" fill="rgb(207,105,6)" rx="2" ry="2" />
<text  x="859.73" y="671.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.03%)</title><rect x="855.6" y="181" width="0.4" height="15.0" fill="rgb(209,35,34)" rx="2" ry="2" />
<text  x="858.64" y="191.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (43 samples, 0.30%)</title><rect x="857.2" y="277" width="3.6" height="15.0" fill="rgb(218,173,54)" rx="2" ry="2" />
<text  x="860.23" y="287.5" ></text>
</g>
<g >
<title>ext4_io_submit (2 samples, 0.01%)</title><rect x="976.0" y="629" width="0.2" height="15.0" fill="rgb(220,161,0)" rx="2" ry="2" />
<text  x="979.05" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (557 samples, 3.94%)</title><rect x="809.5" y="485" width="46.5" height="15.0" fill="rgb(253,137,46)" rx="2" ry="2" />
<text  x="812.54" y="495.5" >rust..</text>
</g>
<g >
<title>process_timeout (100 samples, 0.71%)</title><rect x="1071.6" y="517" width="8.3" height="15.0" fill="rgb(205,153,24)" rx="2" ry="2" />
<text  x="1074.60" y="527.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (2 samples, 0.01%)</title><rect x="114.5" y="773" width="0.1" height="15.0" fill="rgb(228,67,26)" rx="2" ry="2" />
<text  x="117.48" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_read (12 samples, 0.08%)</title><rect x="115.5" y="565" width="1.0" height="15.0" fill="rgb(226,31,29)" rx="2" ry="2" />
<text  x="118.48" y="575.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (4 samples, 0.03%)</title><rect x="495.9" y="325" width="0.4" height="15.0" fill="rgb(219,48,50)" rx="2" ry="2" />
<text  x="498.94" y="335.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.18%)</title><rect x="694.6" y="789" width="2.2" height="15.0" fill="rgb(222,228,26)" rx="2" ry="2" />
<text  x="697.64" y="799.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (255 samples, 1.80%)</title><rect x="743.0" y="581" width="21.3" height="15.0" fill="rgb(243,132,8)" rx="2" ry="2" />
<text  x="746.00" y="591.5" >s..</text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.01%)</title><rect x="1181.7" y="677" width="0.1" height="15.0" fill="rgb(229,54,41)" rx="2" ry="2" />
<text  x="1184.66" y="687.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (172 samples, 1.22%)</title><rect x="860.8" y="437" width="14.4" height="15.0" fill="rgb(236,8,54)" rx="2" ry="2" />
<text  x="863.81" y="447.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (557 samples, 3.94%)</title><rect x="809.5" y="725" width="46.5" height="15.0" fill="rgb(228,195,38)" rx="2" ry="2" />
<text  x="812.54" y="735.5" >serd..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (229 samples, 1.62%)</title><rect x="697.4" y="453" width="19.1" height="15.0" fill="rgb(217,97,34)" rx="2" ry="2" />
<text  x="700.39" y="463.5" ></text>
</g>
<g >
<title>tick_program_event (4 samples, 0.03%)</title><rect x="1186.2" y="613" width="0.3" height="15.0" fill="rgb(243,26,48)" rx="2" ry="2" />
<text  x="1189.16" y="623.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (255 samples, 1.80%)</title><rect x="743.0" y="549" width="21.3" height="15.0" fill="rgb(231,208,48)" rx="2" ry="2" />
<text  x="746.00" y="559.5" >s..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (28 samples, 0.20%)</title><rect x="534.5" y="293" width="2.4" height="15.0" fill="rgb(224,15,47)" rx="2" ry="2" />
<text  x="537.55" y="303.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (300 samples, 2.12%)</title><rect x="764.3" y="389" width="25.1" height="15.0" fill="rgb(240,133,22)" rx="2" ry="2" />
<text  x="767.34" y="399.5" >r..</text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (12 samples, 0.08%)</title><rect x="859.8" y="245" width="1.0" height="15.0" fill="rgb(230,164,52)" rx="2" ry="2" />
<text  x="862.81" y="255.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (2 samples, 0.01%)</title><rect x="541.0" y="229" width="0.1" height="15.0" fill="rgb(247,41,26)" rx="2" ry="2" />
<text  x="543.97" y="239.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (14 samples, 0.10%)</title><rect x="765.0" y="229" width="1.2" height="15.0" fill="rgb(206,205,25)" rx="2" ry="2" />
<text  x="768.01" y="239.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (9 samples, 0.06%)</title><rect x="1152.9" y="645" width="0.7" height="15.0" fill="rgb(228,130,51)" rx="2" ry="2" />
<text  x="1155.90" y="655.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (63 samples, 0.45%)</title><rect x="643.2" y="229" width="5.2" height="15.0" fill="rgb(236,12,54)" rx="2" ry="2" />
<text  x="646.19" y="239.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (52 samples, 0.37%)</title><rect x="541.6" y="341" width="4.4" height="15.0" fill="rgb(221,94,12)" rx="2" ry="2" />
<text  x="544.63" y="351.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (177 samples, 1.25%)</title><rect x="726.3" y="341" width="14.8" height="15.0" fill="rgb(248,60,38)" rx="2" ry="2" />
<text  x="729.32" y="351.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.01%)</title><rect x="835.1" y="101" width="0.2" height="15.0" fill="rgb(227,4,45)" rx="2" ry="2" />
<text  x="838.13" y="111.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (7 samples, 0.05%)</title><rect x="493.9" y="373" width="0.5" height="15.0" fill="rgb(252,53,11)" rx="2" ry="2" />
<text  x="496.86" y="383.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.02%)</title><rect x="540.4" y="277" width="0.2" height="15.0" fill="rgb(225,152,27)" rx="2" ry="2" />
<text  x="543.38" y="287.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (6,848 samples, 48.39%)</title><rect x="114.5" y="821" width="571.0" height="15.0" fill="rgb(218,205,53)" rx="2" ry="2" />
<text  x="117.48" y="831.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (5 samples, 0.04%)</title><rect x="859.3" y="133" width="0.4" height="15.0" fill="rgb(205,34,39)" rx="2" ry="2" />
<text  x="862.31" y="143.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (7 samples, 0.05%)</title><rect x="114.8" y="325" width="0.6" height="15.0" fill="rgb(252,191,44)" rx="2" ry="2" />
<text  x="117.81" y="335.5" ></text>
</g>
<g >
<title>pick_next_task_fair (6 samples, 0.04%)</title><rect x="28.8" y="725" width="0.5" height="15.0" fill="rgb(213,215,40)" rx="2" ry="2" />
<text  x="31.76" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.03%)</title><rect x="499.8" y="549" width="0.3" height="15.0" fill="rgb(244,112,35)" rx="2" ry="2" />
<text  x="502.78" y="559.5" ></text>
</g>
<g >
<title>tick_sched_timer (7 samples, 0.05%)</title><rect x="987.4" y="613" width="0.6" height="15.0" fill="rgb(208,17,16)" rx="2" ry="2" />
<text  x="990.39" y="623.5" ></text>
</g>
<g >
<title>check_cpu_stall (6 samples, 0.04%)</title><rect x="1038.9" y="469" width="0.5" height="15.0" fill="rgb(213,115,3)" rx="2" ry="2" />
<text  x="1041.91" y="479.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (300 samples, 2.12%)</title><rect x="764.3" y="469" width="25.1" height="15.0" fill="rgb(211,15,46)" rx="2" ry="2" />
<text  x="767.34" y="479.5" >c..</text>
</g>
<g >
<title>update_group_capacity (4 samples, 0.03%)</title><rect x="1063.0" y="485" width="0.3" height="15.0" fill="rgb(233,111,19)" rx="2" ry="2" />
<text  x="1066.01" y="495.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (5 samples, 0.04%)</title><rect x="497.1" y="293" width="0.4" height="15.0" fill="rgb(221,98,36)" rx="2" ry="2" />
<text  x="500.11" y="303.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (333 samples, 2.35%)</title><rect x="810.1" y="309" width="27.8" height="15.0" fill="rgb(245,10,3)" rx="2" ry="2" />
<text  x="813.12" y="319.5" >s..</text>
</g>
<g >
<title>std::fs::OpenOptions::_open (14 samples, 0.10%)</title><rect x="498.5" y="613" width="1.2" height="15.0" fill="rgb(225,79,36)" rx="2" ry="2" />
<text  x="501.53" y="623.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (222 samples, 1.57%)</title><rect x="697.9" y="341" width="18.5" height="15.0" fill="rgb(221,127,40)" rx="2" ry="2" />
<text  x="700.89" y="351.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (23 samples, 0.16%)</title><rect x="589.6" y="133" width="1.9" height="15.0" fill="rgb(205,67,37)" rx="2" ry="2" />
<text  x="592.58" y="143.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (13 samples, 0.09%)</title><rect x="1051.3" y="613" width="1.1" height="15.0" fill="rgb(217,228,9)" rx="2" ry="2" />
<text  x="1054.34" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.06%)</title><rect x="770.8" y="133" width="0.6" height="15.0" fill="rgb(239,7,28)" rx="2" ry="2" />
<text  x="773.76" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.04%)</title><rect x="511.9" y="261" width="0.4" height="15.0" fill="rgb(225,126,45)" rx="2" ry="2" />
<text  x="514.87" y="271.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (261 samples, 1.84%)</title><rect x="810.1" y="197" width="21.8" height="15.0" fill="rgb(209,32,41)" rx="2" ry="2" />
<text  x="813.12" y="207.5" >s..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (300 samples, 2.12%)</title><rect x="764.3" y="485" width="25.1" height="15.0" fill="rgb(240,51,41)" rx="2" ry="2" />
<text  x="767.34" y="495.5" >c..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.02%)</title><rect x="587.8" y="133" width="0.3" height="15.0" fill="rgb(233,206,30)" rx="2" ry="2" />
<text  x="590.83" y="143.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::as_bytes (6 samples, 0.04%)</title><rect x="871.4" y="245" width="0.5" height="15.0" fill="rgb(228,161,26)" rx="2" ry="2" />
<text  x="874.40" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.02%)</title><rect x="832.0" y="165" width="0.2" height="15.0" fill="rgb(253,194,46)" rx="2" ry="2" />
<text  x="834.96" y="175.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (3 samples, 0.02%)</title><rect x="69.7" y="725" width="0.3" height="15.0" fill="rgb(228,28,51)" rx="2" ry="2" />
<text  x="72.70" y="735.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (12 samples, 0.08%)</title><rect x="743.6" y="117" width="1.0" height="15.0" fill="rgb(206,33,4)" rx="2" ry="2" />
<text  x="746.58" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (19 samples, 0.13%)</title><rect x="766.3" y="133" width="1.6" height="15.0" fill="rgb(205,139,32)" rx="2" ry="2" />
<text  x="769.34" y="143.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (21 samples, 0.15%)</title><rect x="787.6" y="261" width="1.8" height="15.0" fill="rgb(245,54,46)" rx="2" ry="2" />
<text  x="790.61" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (24 samples, 0.17%)</title><rect x="43.1" y="549" width="2.0" height="15.0" fill="rgb(219,36,41)" rx="2" ry="2" />
<text  x="46.10" y="559.5" ></text>
</g>
<g >
<title>exit_mm (3 samples, 0.02%)</title><rect x="888.9" y="693" width="0.3" height="15.0" fill="rgb(221,218,38)" rx="2" ry="2" />
<text  x="891.91" y="703.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (9 samples, 0.06%)</title><rect x="831.9" y="245" width="0.7" height="15.0" fill="rgb(236,56,43)" rx="2" ry="2" />
<text  x="834.88" y="255.5" ></text>
</g>
<g >
<title>pick_next_task_fair (5 samples, 0.04%)</title><rect x="1019.3" y="741" width="0.4" height="15.0" fill="rgb(251,183,2)" rx="2" ry="2" />
<text  x="1022.32" y="751.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (2 samples, 0.01%)</title><rect x="675.6" y="213" width="0.2" height="15.0" fill="rgb(239,213,31)" rx="2" ry="2" />
<text  x="678.63" y="223.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (4 samples, 0.03%)</title><rect x="500.2" y="277" width="0.3" height="15.0" fill="rgb(227,206,43)" rx="2" ry="2" />
<text  x="503.19" y="287.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.03%)</title><rect x="875.2" y="485" width="0.3" height="15.0" fill="rgb(229,213,11)" rx="2" ry="2" />
<text  x="878.16" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.01%)</title><rect x="646.1" y="117" width="0.2" height="15.0" fill="rgb(226,62,29)" rx="2" ry="2" />
<text  x="649.11" y="127.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="688.3" y="261" width="0.2" height="15.0" fill="rgb(244,227,7)" rx="2" ry="2" />
<text  x="691.30" y="271.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (8 samples, 0.06%)</title><rect x="741.1" y="309" width="0.6" height="15.0" fill="rgb(215,182,22)" rx="2" ry="2" />
<text  x="744.08" y="319.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.04%)</title><rect x="770.3" y="101" width="0.5" height="15.0" fill="rgb(252,158,23)" rx="2" ry="2" />
<text  x="773.35" y="111.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (255 samples, 1.80%)</title><rect x="743.0" y="501" width="21.3" height="15.0" fill="rgb(233,146,20)" rx="2" ry="2" />
<text  x="746.00" y="511.5" >c..</text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (12 samples, 0.08%)</title><rect x="885.9" y="837" width="1.0" height="15.0" fill="rgb(251,182,29)" rx="2" ry="2" />
<text  x="888.91" y="847.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (12 samples, 0.08%)</title><rect x="884.9" y="837" width="1.0" height="15.0" fill="rgb(225,133,17)" rx="2" ry="2" />
<text  x="887.91" y="847.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.17%)</title><rect x="502.1" y="469" width="2.0" height="15.0" fill="rgb(229,45,5)" rx="2" ry="2" />
<text  x="505.11" y="479.5" ></text>
</g>
<g >
<title>update_process_times (7 samples, 0.05%)</title><rect x="1046.7" y="533" width="0.6" height="15.0" fill="rgb(220,123,33)" rx="2" ry="2" />
<text  x="1049.67" y="543.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (338 samples, 2.39%)</title><rect x="809.7" y="421" width="28.2" height="15.0" fill="rgb(221,83,8)" rx="2" ry="2" />
<text  x="812.70" y="431.5" >s..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (8 samples, 0.06%)</title><rect x="802.8" y="821" width="0.6" height="15.0" fill="rgb(244,74,50)" rx="2" ry="2" />
<text  x="805.78" y="831.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (2 samples, 0.01%)</title><rect x="684.0" y="293" width="0.2" height="15.0" fill="rgb(226,194,32)" rx="2" ry="2" />
<text  x="687.05" y="303.5" ></text>
</g>
<g >
<title>do_idle (2,016 samples, 14.25%)</title><rect x="1020.9" y="725" width="168.1" height="15.0" fill="rgb(251,36,49)" rx="2" ry="2" />
<text  x="1023.90" y="735.5" >do_idle</text>
</g>
<g >
<title>enqueue_entity (24 samples, 0.17%)</title><rect x="1075.2" y="421" width="2.0" height="15.0" fill="rgb(220,71,40)" rx="2" ry="2" />
<text  x="1078.19" y="431.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (2 samples, 0.01%)</title><rect x="764.6" y="277" width="0.2" height="15.0" fill="rgb(246,102,24)" rx="2" ry="2" />
<text  x="767.59" y="287.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.01%)</title><rect x="541.3" y="277" width="0.2" height="15.0" fill="rgb(217,28,0)" rx="2" ry="2" />
<text  x="544.30" y="287.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.11%)</title><rect x="543.2" y="213" width="1.3" height="15.0" fill="rgb(214,118,33)" rx="2" ry="2" />
<text  x="546.22" y="223.5" ></text>
</g>
<g >
<title>NaClSysOpenDecoder (7 samples, 0.05%)</title><rect x="114.8" y="805" width="0.6" height="15.0" fill="rgb(239,148,52)" rx="2" ry="2" />
<text  x="117.81" y="815.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.01%)</title><rect x="29.0" y="629" width="0.2" height="15.0" fill="rgb(254,76,32)" rx="2" ry="2" />
<text  x="32.01" y="639.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (2 samples, 0.01%)</title><rect x="678.8" y="213" width="0.2" height="15.0" fill="rgb(221,133,52)" rx="2" ry="2" />
<text  x="681.79" y="223.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (5 samples, 0.04%)</title><rect x="532.3" y="277" width="0.4" height="15.0" fill="rgb(206,144,43)" rx="2" ry="2" />
<text  x="535.30" y="287.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (2 samples, 0.01%)</title><rect x="1034.2" y="517" width="0.2" height="15.0" fill="rgb(220,60,30)" rx="2" ry="2" />
<text  x="1037.25" y="527.5" ></text>
</g>
<g >
<title>_perf_ioctl (63 samples, 0.45%)</title><rect x="10.1" y="661" width="5.2" height="15.0" fill="rgb(222,136,48)" rx="2" ry="2" />
<text  x="13.08" y="671.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.01%)</title><rect x="29.6" y="725" width="0.2" height="15.0" fill="rgb(228,89,7)" rx="2" ry="2" />
<text  x="32.59" y="735.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.01%)</title><rect x="832.0" y="149" width="0.2" height="15.0" fill="rgb(219,187,30)" rx="2" ry="2" />
<text  x="835.05" y="159.5" ></text>
</g>
<g >
<title>NaClSysWrite (2,390 samples, 16.89%)</title><rect x="486.2" y="789" width="199.3" height="15.0" fill="rgb(214,88,23)" rx="2" ry="2" />
<text  x="489.19" y="799.5" >NaClSysWrite</text>
</g>
<g >
<title>dispatcher (7 samples, 0.05%)</title><rect x="114.8" y="741" width="0.6" height="15.0" fill="rgb(229,26,9)" rx="2" ry="2" />
<text  x="117.81" y="751.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.01%)</title><rect x="697.7" y="245" width="0.2" height="15.0" fill="rgb(244,17,3)" rx="2" ry="2" />
<text  x="700.72" y="255.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (5 samples, 0.04%)</title><rect x="856.8" y="325" width="0.4" height="15.0" fill="rgb(207,37,42)" rx="2" ry="2" />
<text  x="859.81" y="335.5" ></text>
</g>
<g >
<title>ext4_bio_write_page (4 samples, 0.03%)</title><rect x="978.5" y="597" width="0.4" height="15.0" fill="rgb(229,166,23)" rx="2" ry="2" />
<text  x="981.55" y="607.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (126 samples, 0.89%)</title><rect x="777.1" y="277" width="10.5" height="15.0" fill="rgb(237,5,5)" rx="2" ry="2" />
<text  x="780.10" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.05%)</title><rect x="837.0" y="181" width="0.6" height="15.0" fill="rgb(237,26,19)" rx="2" ry="2" />
<text  x="839.97" y="191.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (30 samples, 0.21%)</title><rect x="834.5" y="181" width="2.5" height="15.0" fill="rgb(232,4,40)" rx="2" ry="2" />
<text  x="837.47" y="191.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (18 samples, 0.13%)</title><rect x="493.4" y="421" width="1.5" height="15.0" fill="rgb(222,141,35)" rx="2" ry="2" />
<text  x="496.44" y="431.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (30 samples, 0.21%)</title><rect x="976.0" y="709" width="2.5" height="15.0" fill="rgb(251,165,28)" rx="2" ry="2" />
<text  x="978.96" y="719.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.01%)</title><rect x="1186.2" y="581" width="0.1" height="15.0" fill="rgb(209,199,4)" rx="2" ry="2" />
<text  x="1189.16" y="591.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,031 samples, 14.35%)</title><rect x="1020.6" y="741" width="169.3" height="15.0" fill="rgb(220,183,6)" rx="2" ry="2" />
<text  x="1023.57" y="751.5" >cpu_startup_entry</text>
</g>
<g >
<title>ext4_file_write_iter (18 samples, 0.13%)</title><rect x="493.4" y="437" width="1.5" height="15.0" fill="rgb(245,5,38)" rx="2" ry="2" />
<text  x="496.44" y="447.5" ></text>
</g>
<g >
<title>load_balance (27 samples, 0.19%)</title><rect x="968.1" y="693" width="2.3" height="15.0" fill="rgb(231,139,40)" rx="2" ry="2" />
<text  x="971.12" y="703.5" ></text>
</g>
<g >
<title>ext4_finish_bio (7 samples, 0.05%)</title><rect x="974.3" y="725" width="0.6" height="15.0" fill="rgb(241,63,27)" rx="2" ry="2" />
<text  x="977.29" y="735.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.01%)</title><rect x="512.1" y="213" width="0.2" height="15.0" fill="rgb(239,118,6)" rx="2" ry="2" />
<text  x="515.12" y="223.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.01%)</title><rect x="498.9" y="293" width="0.2" height="15.0" fill="rgb(249,133,24)" rx="2" ry="2" />
<text  x="501.94" y="303.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (4 samples, 0.03%)</title><rect x="1141.8" y="645" width="0.3" height="15.0" fill="rgb(213,88,36)" rx="2" ry="2" />
<text  x="1144.81" y="655.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (155 samples, 1.10%)</title><rect x="842.7" y="277" width="12.9" height="15.0" fill="rgb(219,93,39)" rx="2" ry="2" />
<text  x="845.72" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (32 samples, 0.23%)</title><rect x="1154.0" y="645" width="2.6" height="15.0" fill="rgb(214,180,32)" rx="2" ry="2" />
<text  x="1156.98" y="655.5" ></text>
</g>
<g >
<title>&lt;u32 as itoa::Integer&gt;::write (11 samples, 0.08%)</title><rect x="622.8" y="229" width="1.0" height="15.0" fill="rgb(225,23,3)" rx="2" ry="2" />
<text  x="625.85" y="239.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.02%)</title><rect x="532.5" y="261" width="0.2" height="15.0" fill="rgb(218,91,31)" rx="2" ry="2" />
<text  x="535.46" y="271.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.01%)</title><rect x="1080.5" y="565" width="0.2" height="15.0" fill="rgb(229,50,33)" rx="2" ry="2" />
<text  x="1083.52" y="575.5" ></text>
</g>
<g >
<title>common_interrupt (79 samples, 0.56%)</title><rect x="980.6" y="709" width="6.6" height="15.0" fill="rgb(245,129,29)" rx="2" ry="2" />
<text  x="983.63" y="719.5" ></text>
</g>
<g >
<title>ext4_releasepage (3 samples, 0.02%)</title><rect x="115.1" y="229" width="0.3" height="15.0" fill="rgb(251,96,44)" rx="2" ry="2" />
<text  x="118.14" y="239.5" ></text>
</g>
<g >
<title>hrtimer_run_queues (2 samples, 0.01%)</title><rect x="1036.9" y="501" width="0.2" height="15.0" fill="rgb(240,208,53)" rx="2" ry="2" />
<text  x="1039.91" y="511.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1,475 samples, 10.42%)</title><rect x="550.3" y="325" width="123.0" height="15.0" fill="rgb(228,69,1)" rx="2" ry="2" />
<text  x="553.31" y="335.5" >serde::ser::Ser..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (21 samples, 0.15%)</title><rect x="517.5" y="373" width="1.7" height="15.0" fill="rgb(217,43,40)" rx="2" ry="2" />
<text  x="520.45" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.06%)</title><rect x="802.1" y="821" width="0.7" height="15.0" fill="rgb(242,206,25)" rx="2" ry="2" />
<text  x="805.11" y="831.5" ></text>
</g>
<g >
<title>iput.part.0 (6 samples, 0.04%)</title><rect x="500.2" y="517" width="0.5" height="15.0" fill="rgb(208,86,40)" rx="2" ry="2" />
<text  x="503.19" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="574.6" y="117" width="0.1" height="15.0" fill="rgb(221,43,3)" rx="2" ry="2" />
<text  x="577.57" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.02%)</title><rect x="653.4" y="133" width="0.2" height="15.0" fill="rgb(214,82,18)" rx="2" ry="2" />
<text  x="656.36" y="143.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::as_bytes (3 samples, 0.02%)</title><rect x="740.8" y="229" width="0.3" height="15.0" fill="rgb(219,19,47)" rx="2" ry="2" />
<text  x="743.83" y="239.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (213 samples, 1.51%)</title><rect x="837.9" y="325" width="17.7" height="15.0" fill="rgb(208,56,33)" rx="2" ry="2" />
<text  x="840.88" y="335.5" ></text>
</g>
<g >
<title>event_function (63 samples, 0.45%)</title><rect x="10.1" y="549" width="5.2" height="15.0" fill="rgb(221,46,45)" rx="2" ry="2" />
<text  x="13.08" y="559.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (3 samples, 0.02%)</title><rect x="653.9" y="117" width="0.3" height="15.0" fill="rgb(242,156,32)" rx="2" ry="2" />
<text  x="656.95" y="127.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (7 samples, 0.05%)</title><rect x="771.4" y="117" width="0.6" height="15.0" fill="rgb(232,42,20)" rx="2" ry="2" />
<text  x="774.43" y="127.5" ></text>
</g>
<g >
<title>calc_load_nohz_stop (4 samples, 0.03%)</title><rect x="1184.5" y="693" width="0.3" height="15.0" fill="rgb(246,164,7)" rx="2" ry="2" />
<text  x="1187.50" y="703.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (4 samples, 0.03%)</title><rect x="509.6" y="277" width="0.3" height="15.0" fill="rgb(254,109,2)" rx="2" ry="2" />
<text  x="512.62" y="287.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (24 samples, 0.17%)</title><rect x="652.8" y="229" width="2.0" height="15.0" fill="rgb(240,21,35)" rx="2" ry="2" />
<text  x="655.78" y="239.5" ></text>
</g>
<g >
<title>alx_intr_msix_misc (2 samples, 0.01%)</title><rect x="980.6" y="629" width="0.2" height="15.0" fill="rgb(229,97,21)" rx="2" ry="2" />
<text  x="983.63" y="639.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (185 samples, 1.31%)</title><rect x="595.3" y="277" width="15.5" height="15.0" fill="rgb(232,70,1)" rx="2" ry="2" />
<text  x="598.33" y="287.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (215 samples, 1.52%)</title><rect x="724.9" y="645" width="17.9" height="15.0" fill="rgb(235,197,29)" rx="2" ry="2" />
<text  x="727.90" y="655.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (14 samples, 0.10%)</title><rect x="976.2" y="629" width="1.2" height="15.0" fill="rgb(228,18,29)" rx="2" ry="2" />
<text  x="979.21" y="639.5" ></text>
</g>
<g >
<title>new_sync_write (18 samples, 0.13%)</title><rect x="493.4" y="517" width="1.5" height="15.0" fill="rgb(242,11,36)" rx="2" ry="2" />
<text  x="496.44" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4 samples, 0.03%)</title><rect x="503.8" y="421" width="0.3" height="15.0" fill="rgb(242,214,7)" rx="2" ry="2" />
<text  x="506.78" y="431.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (474 samples, 3.35%)</title><rect x="30.7" y="837" width="39.5" height="15.0" fill="rgb(219,178,42)" rx="2" ry="2" />
<text  x="33.68" y="847.5" >sec..</text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (10 samples, 0.07%)</title><rect x="744.6" y="117" width="0.8" height="15.0" fill="rgb(225,80,30)" rx="2" ry="2" />
<text  x="747.58" y="127.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (12 samples, 0.08%)</title><rect x="505.3" y="405" width="1.0" height="15.0" fill="rgb(254,178,8)" rx="2" ry="2" />
<text  x="508.28" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (5 samples, 0.04%)</title><rect x="544.0" y="165" width="0.4" height="15.0" fill="rgb(217,218,3)" rx="2" ry="2" />
<text  x="546.97" y="175.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (22 samples, 0.16%)</title><rect x="48.8" y="549" width="1.8" height="15.0" fill="rgb(223,196,21)" rx="2" ry="2" />
<text  x="51.77" y="559.5" ></text>
</g>
<g >
<title>vmstat_shepherd (5 samples, 0.04%)</title><rect x="975.5" y="773" width="0.4" height="15.0" fill="rgb(231,194,26)" rx="2" ry="2" />
<text  x="978.46" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (8 samples, 0.06%)</title><rect x="688.6" y="309" width="0.6" height="15.0" fill="rgb(226,90,3)" rx="2" ry="2" />
<text  x="691.55" y="319.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (4 samples, 0.03%)</title><rect x="875.2" y="773" width="0.3" height="15.0" fill="rgb(241,145,34)" rx="2" ry="2" />
<text  x="878.16" y="783.5" ></text>
</g>
<g >
<title>poll_idle (8 samples, 0.06%)</title><rect x="61.4" y="661" width="0.6" height="15.0" fill="rgb(237,80,41)" rx="2" ry="2" />
<text  x="64.36" y="671.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (4 samples, 0.03%)</title><rect x="860.5" y="165" width="0.3" height="15.0" fill="rgb(219,82,10)" rx="2" ry="2" />
<text  x="863.48" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="499.8" y="565" width="0.3" height="15.0" fill="rgb(217,164,23)" rx="2" ry="2" />
<text  x="502.78" y="575.5" ></text>
</g>
<g >
<title>[librustposix.so] (10 samples, 0.07%)</title><rect x="687.5" y="789" width="0.8" height="15.0" fill="rgb(212,44,46)" rx="2" ry="2" />
<text  x="690.47" y="799.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (11 samples, 0.08%)</title><rect x="837.0" y="245" width="0.9" height="15.0" fill="rgb(205,59,49)" rx="2" ry="2" />
<text  x="839.97" y="255.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_object_value (3 samples, 0.02%)</title><rect x="684.5" y="405" width="0.3" height="15.0" fill="rgb(223,76,1)" rx="2" ry="2" />
<text  x="687.55" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::fs::File&gt;&gt; (2 samples, 0.01%)</title><rect x="494.9" y="565" width="0.2" height="15.0" fill="rgb(251,144,33)" rx="2" ry="2" />
<text  x="497.94" y="575.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (21 samples, 0.15%)</title><rect x="851.4" y="197" width="1.7" height="15.0" fill="rgb(234,68,33)" rx="2" ry="2" />
<text  x="854.39" y="207.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (48 samples, 0.34%)</title><rect x="793.6" y="821" width="4.0" height="15.0" fill="rgb(219,122,43)" rx="2" ry="2" />
<text  x="796.61" y="831.5" ></text>
</g>
<g >
<title>vfs_iter_write (35 samples, 0.25%)</title><rect x="495.2" y="469" width="2.9" height="15.0" fill="rgb(234,12,39)" rx="2" ry="2" />
<text  x="498.19" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (5 samples, 0.04%)</title><rect x="856.0" y="757" width="0.4" height="15.0" fill="rgb(218,182,44)" rx="2" ry="2" />
<text  x="858.98" y="767.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (126 samples, 0.89%)</title><rect x="777.1" y="261" width="10.5" height="15.0" fill="rgb(221,57,54)" rx="2" ry="2" />
<text  x="780.10" y="271.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 0.45%)</title><rect x="10.1" y="501" width="5.2" height="15.0" fill="rgb(224,148,13)" rx="2" ry="2" />
<text  x="13.08" y="511.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (2 samples, 0.01%)</title><rect x="688.6" y="197" width="0.1" height="15.0" fill="rgb(236,66,49)" rx="2" ry="2" />
<text  x="691.55" y="207.5" ></text>
</g>
<g >
<title>__unlink (9 samples, 0.06%)</title><rect x="500.1" y="613" width="0.8" height="15.0" fill="rgb(249,119,20)" rx="2" ry="2" />
<text  x="503.11" y="623.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (5 samples, 0.04%)</title><rect x="849.5" y="213" width="0.4" height="15.0" fill="rgb(229,64,41)" rx="2" ry="2" />
<text  x="852.47" y="223.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (14 samples, 0.10%)</title><rect x="725.1" y="245" width="1.1" height="15.0" fill="rgb(249,127,13)" rx="2" ry="2" />
<text  x="728.07" y="255.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (2,207 samples, 15.59%)</title><rect x="500.9" y="597" width="184.0" height="15.0" fill="rgb(251,177,18)" rx="2" ry="2" />
<text  x="503.86" y="607.5" >rustposix::safeposix::f..</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (215 samples, 1.52%)</title><rect x="724.9" y="597" width="17.9" height="15.0" fill="rgb(237,1,16)" rx="2" ry="2" />
<text  x="727.90" y="607.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (300 samples, 2.12%)</title><rect x="764.3" y="373" width="25.1" height="15.0" fill="rgb(248,75,54)" rx="2" ry="2" />
<text  x="767.34" y="383.5" >&lt;..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.01%)</title><rect x="545.8" y="277" width="0.2" height="15.0" fill="rgb(207,198,24)" rx="2" ry="2" />
<text  x="548.80" y="287.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (19 samples, 0.13%)</title><rect x="714.8" y="245" width="1.6" height="15.0" fill="rgb(241,104,49)" rx="2" ry="2" />
<text  x="717.81" y="255.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (106 samples, 0.75%)</title><rect x="627.4" y="229" width="8.9" height="15.0" fill="rgb(237,94,39)" rx="2" ry="2" />
<text  x="630.43" y="239.5" ></text>
</g>
<g >
<title>rebalance_domains (11 samples, 0.08%)</title><rect x="47.1" y="549" width="0.9" height="15.0" fill="rgb(225,98,22)" rx="2" ry="2" />
<text  x="50.10" y="559.5" ></text>
</g>
<g >
<title>__udp_queue_rcv_skb (2 samples, 0.01%)</title><rect x="986.2" y="325" width="0.2" height="15.0" fill="rgb(214,143,12)" rx="2" ry="2" />
<text  x="989.22" y="335.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (2 samples, 0.01%)</title><rect x="764.6" y="261" width="0.2" height="15.0" fill="rgb(224,218,21)" rx="2" ry="2" />
<text  x="767.59" y="271.5" ></text>
</g>
<g >
<title>run_timer_softirq (12 samples, 0.08%)</title><rect x="989.2" y="629" width="1.0" height="15.0" fill="rgb(211,144,49)" rx="2" ry="2" />
<text  x="992.22" y="639.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (4 samples, 0.03%)</title><rect x="547.5" y="213" width="0.3" height="15.0" fill="rgb(254,50,33)" rx="2" ry="2" />
<text  x="550.47" y="223.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (23 samples, 0.16%)</title><rect x="988.3" y="677" width="1.9" height="15.0" fill="rgb(247,48,45)" rx="2" ry="2" />
<text  x="991.30" y="687.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.06%)</title><rect x="688.6" y="293" width="0.6" height="15.0" fill="rgb(240,214,1)" rx="2" ry="2" />
<text  x="691.55" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="515.8" y="245" width="0.2" height="15.0" fill="rgb(219,186,32)" rx="2" ry="2" />
<text  x="518.79" y="255.5" ></text>
</g>
<g >
<title>schedule (7 samples, 0.05%)</title><rect x="979.1" y="789" width="0.6" height="15.0" fill="rgb(251,223,31)" rx="2" ry="2" />
<text  x="982.13" y="799.5" ></text>
</g>
<g >
<title>cpuidle_reflect (2 samples, 0.01%)</title><rect x="64.9" y="709" width="0.2" height="15.0" fill="rgb(251,206,36)" rx="2" ry="2" />
<text  x="67.95" y="719.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (12 samples, 0.08%)</title><rect x="743.6" y="229" width="1.0" height="15.0" fill="rgb(217,6,15)" rx="2" ry="2" />
<text  x="746.58" y="239.5" ></text>
</g>
<g >
<title>find_busiest_group (3 samples, 0.02%)</title><rect x="979.4" y="709" width="0.2" height="15.0" fill="rgb(231,166,54)" rx="2" ry="2" />
<text  x="982.38" y="719.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.10%)</title><rect x="725.1" y="277" width="1.1" height="15.0" fill="rgb(234,121,0)" rx="2" ry="2" />
<text  x="728.07" y="287.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.04%)</title><rect x="697.4" y="389" width="0.5" height="15.0" fill="rgb(234,228,33)" rx="2" ry="2" />
<text  x="700.39" y="399.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.01%)</title><rect x="111.6" y="821" width="0.1" height="15.0" fill="rgb(216,34,49)" rx="2" ry="2" />
<text  x="114.56" y="831.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (3 samples, 0.02%)</title><rect x="64.5" y="693" width="0.3" height="15.0" fill="rgb(254,45,45)" rx="2" ry="2" />
<text  x="67.53" y="703.5" ></text>
</g>
<g >
<title>x86_pmu_enable (3 samples, 0.02%)</title><rect x="44.7" y="453" width="0.2" height="15.0" fill="rgb(253,178,36)" rx="2" ry="2" />
<text  x="47.69" y="463.5" ></text>
</g>
<g >
<title>account_page_dirtied (2 samples, 0.01%)</title><rect x="496.9" y="293" width="0.2" height="15.0" fill="rgb(243,22,53)" rx="2" ry="2" />
<text  x="499.94" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.03%)</title><rect x="855.6" y="277" width="0.4" height="15.0" fill="rgb(244,1,49)" rx="2" ry="2" />
<text  x="858.64" y="287.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (43 samples, 0.30%)</title><rect x="857.2" y="373" width="3.6" height="15.0" fill="rgb(251,13,38)" rx="2" ry="2" />
<text  x="860.23" y="383.5" ></text>
</g>
<g >
<title>rb_next (2 samples, 0.01%)</title><rect x="42.9" y="549" width="0.2" height="15.0" fill="rgb(236,186,33)" rx="2" ry="2" />
<text  x="45.94" y="559.5" ></text>
</g>
<g >
<title>menu_select (9 samples, 0.06%)</title><rect x="1017.7" y="741" width="0.8" height="15.0" fill="rgb(253,172,20)" rx="2" ry="2" />
<text  x="1020.74" y="751.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.32%)</title><rect x="529.0" y="309" width="3.7" height="15.0" fill="rgb(229,16,6)" rx="2" ry="2" />
<text  x="531.96" y="319.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (4 samples, 0.03%)</title><rect x="742.5" y="229" width="0.3" height="15.0" fill="rgb(254,41,48)" rx="2" ry="2" />
<text  x="745.50" y="239.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.04%)</title><rect x="856.0" y="485" width="0.4" height="15.0" fill="rgb(249,210,5)" rx="2" ry="2" />
<text  x="858.98" y="495.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (2 samples, 0.01%)</title><rect x="811.6" y="101" width="0.2" height="15.0" fill="rgb(231,103,44)" rx="2" ry="2" />
<text  x="814.62" y="111.5" ></text>
</g>
<g >
<title>get_typical_interval (5 samples, 0.04%)</title><rect x="62.9" y="661" width="0.5" height="15.0" fill="rgb(211,48,50)" rx="2" ry="2" />
<text  x="65.95" y="671.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (300 samples, 2.12%)</title><rect x="764.3" y="421" width="25.1" height="15.0" fill="rgb(252,155,3)" rx="2" ry="2" />
<text  x="767.34" y="431.5" >&lt;..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.09%)</title><rect x="830.7" y="101" width="1.1" height="15.0" fill="rgb(235,40,23)" rx="2" ry="2" />
<text  x="833.71" y="111.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (131 samples, 0.93%)</title><rect x="506.4" y="389" width="10.9" height="15.0" fill="rgb(252,214,10)" rx="2" ry="2" />
<text  x="509.36" y="399.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.01%)</title><rect x="764.8" y="197" width="0.2" height="15.0" fill="rgb(252,88,44)" rx="2" ry="2" />
<text  x="767.84" y="207.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.04%)</title><rect x="870.4" y="245" width="0.4" height="15.0" fill="rgb(238,217,47)" rx="2" ry="2" />
<text  x="873.40" y="255.5" ></text>
</g>
<g >
<title>vfs_open (8 samples, 0.06%)</title><rect x="498.7" y="405" width="0.7" height="15.0" fill="rgb(230,98,36)" rx="2" ry="2" />
<text  x="501.69" y="415.5" ></text>
</g>
<g >
<title>rcu_report_qs_rdp (9 samples, 0.06%)</title><rect x="1055.5" y="533" width="0.8" height="15.0" fill="rgb(236,201,10)" rx="2" ry="2" />
<text  x="1058.51" y="543.5" ></text>
</g>
<g >
<title>native_apic_mem_write (2 samples, 0.01%)</title><rect x="45.5" y="613" width="0.2" height="15.0" fill="rgb(208,172,43)" rx="2" ry="2" />
<text  x="48.52" y="623.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (18 samples, 0.13%)</title><rect x="766.4" y="117" width="1.5" height="15.0" fill="rgb(226,95,36)" rx="2" ry="2" />
<text  x="769.43" y="127.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="116.6" y="661" width="0.1" height="15.0" fill="rgb(213,198,50)" rx="2" ry="2" />
<text  x="119.56" y="671.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (3 samples, 0.02%)</title><rect x="111.9" y="821" width="0.2" height="15.0" fill="rgb(244,108,36)" rx="2" ry="2" />
<text  x="114.89" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.07%)</title><rect x="744.6" y="197" width="0.8" height="15.0" fill="rgb(254,27,9)" rx="2" ry="2" />
<text  x="747.58" y="207.5" ></text>
</g>
<g >
<title>find_busiest_group (27 samples, 0.19%)</title><rect x="968.1" y="677" width="2.3" height="15.0" fill="rgb(205,172,0)" rx="2" ry="2" />
<text  x="971.12" y="687.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (19 samples, 0.13%)</title><rect x="727.9" y="213" width="1.6" height="15.0" fill="rgb(211,58,3)" rx="2" ry="2" />
<text  x="730.91" y="223.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (115 samples, 0.81%)</title><rect x="860.8" y="277" width="9.6" height="15.0" fill="rgb(230,114,10)" rx="2" ry="2" />
<text  x="863.81" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.04%)</title><rect x="639.6" y="229" width="0.5" height="15.0" fill="rgb(245,59,47)" rx="2" ry="2" />
<text  x="642.61" y="239.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (6 samples, 0.04%)</title><rect x="654.3" y="181" width="0.5" height="15.0" fill="rgb(239,197,54)" rx="2" ry="2" />
<text  x="657.28" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.03%)</title><rect x="623.8" y="229" width="0.4" height="15.0" fill="rgb(236,207,20)" rx="2" ry="2" />
<text  x="626.85" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (2 samples, 0.01%)</title><rect x="503.4" y="389" width="0.2" height="15.0" fill="rgb(237,42,19)" rx="2" ry="2" />
<text  x="506.45" y="399.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (213 samples, 1.51%)</title><rect x="837.9" y="341" width="17.7" height="15.0" fill="rgb(209,58,0)" rx="2" ry="2" />
<text  x="840.88" y="351.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (14 samples, 0.10%)</title><rect x="765.0" y="213" width="1.2" height="15.0" fill="rgb(226,171,9)" rx="2" ry="2" />
<text  x="768.01" y="223.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (12 samples, 0.08%)</title><rect x="115.5" y="677" width="1.0" height="15.0" fill="rgb(244,184,1)" rx="2" ry="2" />
<text  x="118.48" y="687.5" ></text>
</g>
<g >
<title>zap_pte_range (2 samples, 0.01%)</title><rect x="889.0" y="581" width="0.2" height="15.0" fill="rgb(253,13,36)" rx="2" ry="2" />
<text  x="892.00" y="591.5" ></text>
</g>
<g >
<title>worker_thread (3 samples, 0.02%)</title><rect x="30.4" y="805" width="0.3" height="15.0" fill="rgb(242,111,51)" rx="2" ry="2" />
<text  x="33.43" y="815.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.04%)</title><rect x="836.6" y="101" width="0.4" height="15.0" fill="rgb(217,222,29)" rx="2" ry="2" />
<text  x="839.55" y="111.5" ></text>
</g>
<g >
<title>__dentry_kill (7 samples, 0.05%)</title><rect x="114.8" y="437" width="0.6" height="15.0" fill="rgb(226,88,42)" rx="2" ry="2" />
<text  x="117.81" y="447.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (300 samples, 2.12%)</title><rect x="764.3" y="645" width="25.1" height="15.0" fill="rgb(241,201,40)" rx="2" ry="2" />
<text  x="767.34" y="655.5" >s..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (13 samples, 0.09%)</title><rect x="845.2" y="181" width="1.1" height="15.0" fill="rgb(236,104,42)" rx="2" ry="2" />
<text  x="848.22" y="191.5" ></text>
</g>
<g >
<title>schedule_idle (12 samples, 0.08%)</title><rect x="1019.1" y="773" width="1.0" height="15.0" fill="rgb(243,213,42)" rx="2" ry="2" />
<text  x="1022.07" y="783.5" ></text>
</g>
<g >
<title>core::mem::uninitialized (34 samples, 0.24%)</title><rect x="624.2" y="229" width="2.8" height="15.0" fill="rgb(208,51,43)" rx="2" ry="2" />
<text  x="627.18" y="239.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.04%)</title><rect x="112.7" y="821" width="0.4" height="15.0" fill="rgb(223,220,51)" rx="2" ry="2" />
<text  x="115.72" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="989.6" y="533" width="0.1" height="15.0" fill="rgb(214,28,1)" rx="2" ry="2" />
<text  x="992.55" y="543.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::as_bytes (2 samples, 0.01%)</title><rect x="534.4" y="293" width="0.1" height="15.0" fill="rgb(222,98,27)" rx="2" ry="2" />
<text  x="537.38" y="303.5" ></text>
</g>
<g >
<title>pci_bus_read_config_word (3 samples, 0.02%)</title><rect x="974.9" y="725" width="0.2" height="15.0" fill="rgb(245,228,35)" rx="2" ry="2" />
<text  x="977.88" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (55 samples, 0.39%)</title><rect x="83.7" y="821" width="4.6" height="15.0" fill="rgb(251,177,16)" rx="2" ry="2" />
<text  x="86.71" y="831.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (7 samples, 0.05%)</title><rect x="646.9" y="133" width="0.5" height="15.0" fill="rgb(254,33,41)" rx="2" ry="2" />
<text  x="649.86" y="143.5" ></text>
</g>
<g >
<title>__bitmap_and (3 samples, 0.02%)</title><rect x="1058.7" y="533" width="0.2" height="15.0" fill="rgb(248,40,51)" rx="2" ry="2" />
<text  x="1061.68" y="543.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (229 samples, 1.62%)</title><rect x="697.4" y="709" width="19.1" height="15.0" fill="rgb(225,46,41)" rx="2" ry="2" />
<text  x="700.39" y="719.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (226 samples, 1.60%)</title><rect x="745.4" y="245" width="18.9" height="15.0" fill="rgb(216,117,5)" rx="2" ry="2" />
<text  x="748.42" y="255.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (3 samples, 0.02%)</title><rect x="114.5" y="789" width="0.2" height="15.0" fill="rgb(233,107,39)" rx="2" ry="2" />
<text  x="117.48" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.09%)</title><rect x="498.6" y="517" width="1.1" height="15.0" fill="rgb(243,101,7)" rx="2" ry="2" />
<text  x="501.61" y="527.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (4 samples, 0.03%)</title><rect x="542.1" y="261" width="0.3" height="15.0" fill="rgb(250,50,34)" rx="2" ry="2" />
<text  x="545.05" y="271.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.06%)</title><rect x="543.6" y="181" width="0.8" height="15.0" fill="rgb(236,190,37)" rx="2" ry="2" />
<text  x="546.63" y="191.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (4 samples, 0.03%)</title><rect x="875.2" y="821" width="0.3" height="15.0" fill="rgb(242,143,10)" rx="2" ry="2" />
<text  x="878.16" y="831.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (229 samples, 1.62%)</title><rect x="697.4" y="693" width="19.1" height="15.0" fill="rgb(232,154,16)" rx="2" ry="2" />
<text  x="700.39" y="703.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (557 samples, 3.94%)</title><rect x="809.5" y="789" width="46.5" height="15.0" fill="rgb(231,64,29)" rx="2" ry="2" />
<text  x="812.54" y="799.5" >rust..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (17 samples, 0.12%)</title><rect x="769.3" y="117" width="1.5" height="15.0" fill="rgb(216,75,10)" rx="2" ry="2" />
<text  x="772.35" y="127.5" ></text>
</g>
<g >
<title>newidle_balance (3 samples, 0.02%)</title><rect x="1019.3" y="725" width="0.3" height="15.0" fill="rgb(226,223,22)" rx="2" ry="2" />
<text  x="1022.32" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (7 samples, 0.05%)</title><rect x="114.8" y="725" width="0.6" height="15.0" fill="rgb(233,187,39)" rx="2" ry="2" />
<text  x="117.81" y="735.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (12 samples, 0.08%)</title><rect x="32.3" y="645" width="1.0" height="15.0" fill="rgb(221,46,37)" rx="2" ry="2" />
<text  x="35.26" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="683.6" y="293" width="0.2" height="15.0" fill="rgb(238,143,53)" rx="2" ry="2" />
<text  x="686.63" y="303.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (4 samples, 0.03%)</title><rect x="875.2" y="741" width="0.3" height="15.0" fill="rgb(213,7,14)" rx="2" ry="2" />
<text  x="878.16" y="751.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.01%)</title><rect x="809.7" y="261" width="0.2" height="15.0" fill="rgb(226,156,33)" rx="2" ry="2" />
<text  x="812.70" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_openat (4 samples, 0.03%)</title><rect x="950.9" y="805" width="0.4" height="15.0" fill="rgb(228,192,35)" rx="2" ry="2" />
<text  x="953.95" y="815.5" ></text>
</g>
<g >
<title>find_busiest_group (104 samples, 0.73%)</title><rect x="1167.6" y="629" width="8.6" height="15.0" fill="rgb(226,158,54)" rx="2" ry="2" />
<text  x="1170.57" y="639.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (2 samples, 0.01%)</title><rect x="972.0" y="709" width="0.2" height="15.0" fill="rgb(207,25,10)" rx="2" ry="2" />
<text  x="975.04" y="719.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (6 samples, 0.04%)</title><rect x="653.7" y="181" width="0.5" height="15.0" fill="rgb(210,204,44)" rx="2" ry="2" />
<text  x="656.70" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (6 samples, 0.04%)</title><rect x="743.1" y="245" width="0.5" height="15.0" fill="rgb(252,117,5)" rx="2" ry="2" />
<text  x="746.08" y="255.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (6 samples, 0.04%)</title><rect x="544.6" y="181" width="0.5" height="15.0" fill="rgb(250,128,5)" rx="2" ry="2" />
<text  x="547.55" y="191.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.01%)</title><rect x="540.2" y="277" width="0.2" height="15.0" fill="rgb(251,53,5)" rx="2" ry="2" />
<text  x="543.22" y="287.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (14 samples, 0.10%)</title><rect x="725.1" y="229" width="1.1" height="15.0" fill="rgb(242,174,22)" rx="2" ry="2" />
<text  x="728.07" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="855.6" y="245" width="0.4" height="15.0" fill="rgb(232,103,27)" rx="2" ry="2" />
<text  x="858.64" y="255.5" ></text>
</g>
<g >
<title>dispatcher (300 samples, 2.12%)</title><rect x="764.3" y="725" width="25.1" height="15.0" fill="rgb(220,74,15)" rx="2" ry="2" />
<text  x="767.34" y="735.5" >d..</text>
</g>
<g >
<title>pagecache_get_page (7 samples, 0.05%)</title><rect x="493.9" y="357" width="0.5" height="15.0" fill="rgb(231,58,3)" rx="2" ry="2" />
<text  x="496.86" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.09%)</title><rect x="685.6" y="821" width="1.1" height="15.0" fill="rgb(243,114,16)" rx="2" ry="2" />
<text  x="688.63" y="831.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (37 samples, 0.26%)</title><rect x="495.1" y="629" width="3.1" height="15.0" fill="rgb(243,225,50)" rx="2" ry="2" />
<text  x="498.11" y="639.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (333 samples, 2.35%)</title><rect x="810.1" y="293" width="27.8" height="15.0" fill="rgb(230,76,48)" rx="2" ry="2" />
<text  x="813.12" y="303.5" >s..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.01%)</title><rect x="545.8" y="197" width="0.2" height="15.0" fill="rgb(231,203,20)" rx="2" ry="2" />
<text  x="548.80" y="207.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (6 samples, 0.04%)</title><rect x="681.5" y="277" width="0.5" height="15.0" fill="rgb(246,219,44)" rx="2" ry="2" />
<text  x="684.55" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.02%)</title><rect x="677.8" y="229" width="0.2" height="15.0" fill="rgb(250,15,42)" rx="2" ry="2" />
<text  x="680.79" y="239.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.08%)</title><rect x="821.4" y="149" width="0.9" height="15.0" fill="rgb(235,50,42)" rx="2" ry="2" />
<text  x="824.38" y="159.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (6 samples, 0.04%)</title><rect x="978.5" y="629" width="0.5" height="15.0" fill="rgb(217,139,11)" rx="2" ry="2" />
<text  x="981.46" y="639.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (3 samples, 0.02%)</title><rect x="769.1" y="133" width="0.2" height="15.0" fill="rgb(208,114,11)" rx="2" ry="2" />
<text  x="772.10" y="143.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.01%)</title><rect x="889.0" y="645" width="0.2" height="15.0" fill="rgb(220,128,36)" rx="2" ry="2" />
<text  x="892.00" y="655.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (116 samples, 0.82%)</title><rect x="729.5" y="245" width="9.7" height="15.0" fill="rgb(208,18,19)" rx="2" ry="2" />
<text  x="732.49" y="255.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (5 samples, 0.04%)</title><rect x="856.8" y="373" width="0.4" height="15.0" fill="rgb(250,34,27)" rx="2" ry="2" />
<text  x="859.81" y="383.5" ></text>
</g>
<g >
<title>dentry_kill (7 samples, 0.05%)</title><rect x="114.8" y="453" width="0.6" height="15.0" fill="rgb(209,16,52)" rx="2" ry="2" />
<text  x="117.81" y="463.5" ></text>
</g>
<g >
<title>native_read_msr (3 samples, 0.02%)</title><rect x="43.9" y="485" width="0.3" height="15.0" fill="rgb(206,57,41)" rx="2" ry="2" />
<text  x="46.94" y="495.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (3 samples, 0.02%)</title><rect x="65.1" y="693" width="0.3" height="15.0" fill="rgb(205,168,7)" rx="2" ry="2" />
<text  x="68.11" y="703.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (17 samples, 0.12%)</title><rect x="115.4" y="709" width="1.4" height="15.0" fill="rgb(249,116,24)" rx="2" ry="2" />
<text  x="118.39" y="719.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (3 samples, 0.02%)</title><rect x="500.9" y="533" width="0.2" height="15.0" fill="rgb(228,226,51)" rx="2" ry="2" />
<text  x="503.86" y="543.5" ></text>
</g>
<g >
<title>mpage_prepare_extent_to_map (12 samples, 0.08%)</title><rect x="977.4" y="629" width="1.0" height="15.0" fill="rgb(236,99,19)" rx="2" ry="2" />
<text  x="980.38" y="639.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (5 samples, 0.04%)</title><rect x="856.8" y="341" width="0.4" height="15.0" fill="rgb(205,190,11)" rx="2" ry="2" />
<text  x="859.81" y="351.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.03%)</title><rect x="540.8" y="277" width="0.3" height="15.0" fill="rgb(225,104,3)" rx="2" ry="2" />
<text  x="543.80" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (33 samples, 0.23%)</title><rect x="766.3" y="149" width="2.8" height="15.0" fill="rgb(212,119,35)" rx="2" ry="2" />
<text  x="769.34" y="159.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (21 samples, 0.15%)</title><rect x="787.6" y="277" width="1.8" height="15.0" fill="rgb(242,227,38)" rx="2" ry="2" />
<text  x="790.61" y="287.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (8 samples, 0.06%)</title><rect x="662.1" y="165" width="0.7" height="15.0" fill="rgb(207,162,6)" rx="2" ry="2" />
<text  x="665.12" y="175.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (68 samples, 0.48%)</title><rect x="766.3" y="261" width="5.7" height="15.0" fill="rgb(243,118,42)" rx="2" ry="2" />
<text  x="769.34" y="271.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (215 samples, 1.52%)</title><rect x="724.9" y="469" width="17.9" height="15.0" fill="rgb(233,227,14)" rx="2" ry="2" />
<text  x="727.90" y="479.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (86 samples, 0.61%)</title><rect x="687.5" y="805" width="7.1" height="15.0" fill="rgb(251,211,14)" rx="2" ry="2" />
<text  x="690.47" y="815.5" ></text>
</g>
<g >
<title>perf_ioctl (63 samples, 0.45%)</title><rect x="10.1" y="677" width="5.2" height="15.0" fill="rgb(216,131,43)" rx="2" ry="2" />
<text  x="13.08" y="687.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (7 samples, 0.05%)</title><rect x="524.5" y="245" width="0.6" height="15.0" fill="rgb(217,12,37)" rx="2" ry="2" />
<text  x="527.54" y="255.5" ></text>
</g>
<g >
<title>handle_edge_irq (30 samples, 0.21%)</title><rect x="980.6" y="677" width="2.5" height="15.0" fill="rgb(237,70,23)" rx="2" ry="2" />
<text  x="983.63" y="687.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (13 samples, 0.09%)</title><rect x="533.2" y="309" width="1.1" height="15.0" fill="rgb(248,222,29)" rx="2" ry="2" />
<text  x="536.21" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_restart (3 samples, 0.02%)</title><rect x="1020.2" y="757" width="0.2" height="15.0" fill="rgb(243,37,5)" rx="2" ry="2" />
<text  x="1023.15" y="767.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (2 samples, 0.01%)</title><rect x="68.9" y="709" width="0.2" height="15.0" fill="rgb(222,41,27)" rx="2" ry="2" />
<text  x="71.95" y="719.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (300 samples, 2.12%)</title><rect x="764.3" y="661" width="25.1" height="15.0" fill="rgb(217,222,5)" rx="2" ry="2" />
<text  x="767.34" y="671.5" >s..</text>
</g>
<g >
<title>__netif_receive_skb_list_core (16 samples, 0.11%)</title><rect x="985.8" y="533" width="1.3" height="15.0" fill="rgb(239,83,34)" rx="2" ry="2" />
<text  x="988.80" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.08%)</title><rect x="70.9" y="837" width="0.9" height="15.0" fill="rgb(218,174,29)" rx="2" ry="2" />
<text  x="73.87" y="847.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (17 samples, 0.12%)</title><rect x="724.9" y="357" width="1.4" height="15.0" fill="rgb(211,3,14)" rx="2" ry="2" />
<text  x="727.90" y="367.5" ></text>
</g>
<g >
<title>[librustposix.so] (33 samples, 0.23%)</title><rect x="694.6" y="805" width="2.8" height="15.0" fill="rgb(240,212,5)" rx="2" ry="2" />
<text  x="697.64" y="815.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (2 samples, 0.01%)</title><rect x="1044.8" y="453" width="0.1" height="15.0" fill="rgb(208,136,48)" rx="2" ry="2" />
<text  x="1047.75" y="463.5" ></text>
</g>
<g >
<title>__update_blocked_fair (4 samples, 0.03%)</title><rect x="1057.1" y="549" width="0.3" height="15.0" fill="rgb(249,159,46)" rx="2" ry="2" />
<text  x="1060.09" y="559.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (172 samples, 1.22%)</title><rect x="860.8" y="421" width="14.4" height="15.0" fill="rgb(252,36,11)" rx="2" ry="2" />
<text  x="863.81" y="431.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (177 samples, 1.25%)</title><rect x="726.3" y="277" width="14.8" height="15.0" fill="rgb(220,173,51)" rx="2" ry="2" />
<text  x="729.32" y="287.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (4 samples, 0.03%)</title><rect x="65.1" y="709" width="0.3" height="15.0" fill="rgb(213,211,38)" rx="2" ry="2" />
<text  x="68.11" y="719.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.02%)</title><rect x="535.8" y="181" width="0.2" height="15.0" fill="rgb(224,176,45)" rx="2" ry="2" />
<text  x="538.80" y="191.5" ></text>
</g>
<g >
<title>udp_rcv (2 samples, 0.01%)</title><rect x="986.2" y="405" width="0.2" height="15.0" fill="rgb(227,74,22)" rx="2" ry="2" />
<text  x="989.22" y="415.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (5 samples, 0.04%)</title><rect x="1172.0" y="565" width="0.4" height="15.0" fill="rgb(206,142,31)" rx="2" ry="2" />
<text  x="1174.99" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (300 samples, 2.12%)</title><rect x="764.3" y="677" width="25.1" height="15.0" fill="rgb(234,32,45)" rx="2" ry="2" />
<text  x="767.34" y="687.5" >r..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (9 samples, 0.06%)</title><rect x="741.7" y="325" width="0.8" height="15.0" fill="rgb(229,174,39)" rx="2" ry="2" />
<text  x="744.75" y="335.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (2 samples, 0.01%)</title><rect x="500.9" y="469" width="0.2" height="15.0" fill="rgb(248,210,6)" rx="2" ry="2" />
<text  x="503.94" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (23 samples, 0.16%)</title><rect x="100.3" y="821" width="1.9" height="15.0" fill="rgb(232,161,31)" rx="2" ry="2" />
<text  x="103.30" y="831.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.01%)</title><rect x="1168.7" y="597" width="0.2" height="15.0" fill="rgb(230,76,27)" rx="2" ry="2" />
<text  x="1171.74" y="607.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (31 samples, 0.22%)</title><rect x="673.6" y="325" width="2.6" height="15.0" fill="rgb(233,151,7)" rx="2" ry="2" />
<text  x="676.62" y="335.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (2 samples, 0.01%)</title><rect x="1188.5" y="677" width="0.2" height="15.0" fill="rgb(236,191,47)" rx="2" ry="2" />
<text  x="1191.50" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.13%)</title><rect x="493.4" y="581" width="1.5" height="15.0" fill="rgb(253,71,4)" rx="2" ry="2" />
<text  x="496.44" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.04%)</title><rect x="801.7" y="821" width="0.4" height="15.0" fill="rgb(206,29,11)" rx="2" ry="2" />
<text  x="804.70" y="831.5" ></text>
</g>
<g >
<title>rmqueue (2 samples, 0.01%)</title><rect x="494.3" y="293" width="0.1" height="15.0" fill="rgb(228,202,43)" rx="2" ry="2" />
<text  x="497.27" y="303.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.02%)</title><rect x="712.1" y="245" width="0.3" height="15.0" fill="rgb(253,220,1)" rx="2" ry="2" />
<text  x="715.15" y="255.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (6 samples, 0.04%)</title><rect x="540.1" y="309" width="0.5" height="15.0" fill="rgb(244,203,52)" rx="2" ry="2" />
<text  x="543.13" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (23 samples, 0.16%)</title><rect x="660.9" y="197" width="1.9" height="15.0" fill="rgb(253,211,28)" rx="2" ry="2" />
<text  x="663.87" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="16.1" y="837" width="0.2" height="15.0" fill="rgb(206,104,7)" rx="2" ry="2" />
<text  x="19.09" y="847.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (12 samples, 0.08%)</title><rect x="115.5" y="629" width="1.0" height="15.0" fill="rgb(254,176,32)" rx="2" ry="2" />
<text  x="118.48" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (5 samples, 0.04%)</title><rect x="856.0" y="725" width="0.4" height="15.0" fill="rgb(221,16,41)" rx="2" ry="2" />
<text  x="858.98" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DeviceInode&gt;::serialize (2 samples, 0.01%)</title><rect x="688.3" y="405" width="0.2" height="15.0" fill="rgb(244,112,50)" rx="2" ry="2" />
<text  x="691.30" y="415.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (4 samples, 0.03%)</title><rect x="864.1" y="261" width="0.3" height="15.0" fill="rgb(227,224,50)" rx="2" ry="2" />
<text  x="867.07" y="271.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (3 samples, 0.02%)</title><rect x="593.2" y="133" width="0.2" height="15.0" fill="rgb(224,225,2)" rx="2" ry="2" />
<text  x="596.16" y="143.5" ></text>
</g>
<g >
<title>pagecache_get_page (6 samples, 0.04%)</title><rect x="496.3" y="341" width="0.5" height="15.0" fill="rgb(210,12,5)" rx="2" ry="2" />
<text  x="499.27" y="351.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.01%)</title><rect x="510.3" y="245" width="0.1" height="15.0" fill="rgb(210,124,42)" rx="2" ry="2" />
<text  x="513.28" y="255.5" ></text>
</g>
<g >
<title>run_timer_softirq (23 samples, 0.16%)</title><rect x="48.7" y="565" width="1.9" height="15.0" fill="rgb(229,26,15)" rx="2" ry="2" />
<text  x="51.69" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.06%)</title><rect x="770.8" y="117" width="0.6" height="15.0" fill="rgb(254,70,31)" rx="2" ry="2" />
<text  x="773.76" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="486.2" y="725" width="0.2" height="15.0" fill="rgb(220,57,4)" rx="2" ry="2" />
<text  x="489.19" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.07%)</title><rect x="810.8" y="101" width="0.8" height="15.0" fill="rgb(232,99,50)" rx="2" ry="2" />
<text  x="813.79" y="111.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (6 samples, 0.04%)</title><rect x="1145.9" y="677" width="0.5" height="15.0" fill="rgb(232,210,22)" rx="2" ry="2" />
<text  x="1148.89" y="687.5" ></text>
</g>
<g >
<title>find_busiest_group (63 samples, 0.45%)</title><rect x="1060.8" y="517" width="5.3" height="15.0" fill="rgb(223,227,17)" rx="2" ry="2" />
<text  x="1063.84" y="527.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 0.04%)</title><rect x="1021.7" y="709" width="0.5" height="15.0" fill="rgb(233,146,28)" rx="2" ry="2" />
<text  x="1024.74" y="719.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (8 samples, 0.06%)</title><rect x="978.5" y="725" width="0.6" height="15.0" fill="rgb(244,218,1)" rx="2" ry="2" />
<text  x="981.46" y="735.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (11 samples, 0.08%)</title><rect x="678.0" y="277" width="1.0" height="15.0" fill="rgb(243,109,41)" rx="2" ry="2" />
<text  x="681.04" y="287.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (21 samples, 0.15%)</title><rect x="575.1" y="133" width="1.7" height="15.0" fill="rgb(235,191,3)" rx="2" ry="2" />
<text  x="578.07" y="143.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (7 samples, 0.05%)</title><rect x="542.4" y="293" width="0.6" height="15.0" fill="rgb(224,213,9)" rx="2" ry="2" />
<text  x="545.38" y="303.5" ></text>
</g>
<g >
<title>enqueue_task_fair (5 samples, 0.04%)</title><rect x="32.6" y="501" width="0.4" height="15.0" fill="rgb(252,150,33)" rx="2" ry="2" />
<text  x="35.60" y="511.5" ></text>
</g>
<g >
<title>cpuidle_not_available (10 samples, 0.07%)</title><rect x="1158.5" y="709" width="0.8" height="15.0" fill="rgb(236,12,27)" rx="2" ry="2" />
<text  x="1161.48" y="719.5" ></text>
</g>
<g >
<title>filename_lookup (4 samples, 0.03%)</title><rect x="499.8" y="485" width="0.3" height="15.0" fill="rgb(238,198,8)" rx="2" ry="2" />
<text  x="502.78" y="495.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="106.6" y="821" width="0.3" height="15.0" fill="rgb(244,195,36)" rx="2" ry="2" />
<text  x="109.64" y="831.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (15 samples, 0.11%)</title><rect x="1187.2" y="677" width="1.3" height="15.0" fill="rgb(212,214,4)" rx="2" ry="2" />
<text  x="1190.25" y="687.5" ></text>
</g>
<g >
<title>get_cpu_device (5 samples, 0.04%)</title><rect x="1148.2" y="661" width="0.4" height="15.0" fill="rgb(205,129,22)" rx="2" ry="2" />
<text  x="1151.23" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.01%)</title><rect x="679.9" y="261" width="0.1" height="15.0" fill="rgb(205,42,13)" rx="2" ry="2" />
<text  x="682.88" y="271.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (2 samples, 0.01%)</title><rect x="766.2" y="261" width="0.1" height="15.0" fill="rgb(234,17,44)" rx="2" ry="2" />
<text  x="769.18" y="271.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (4 samples, 0.03%)</title><rect x="15.4" y="453" width="0.4" height="15.0" fill="rgb(234,72,4)" rx="2" ry="2" />
<text  x="18.42" y="463.5" ></text>
</g>
<g >
<title>poll_idle (12 samples, 0.08%)</title><rect x="1016.4" y="725" width="1.0" height="15.0" fill="rgb(249,91,7)" rx="2" ry="2" />
<text  x="1019.40" y="735.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (3 samples, 0.02%)</title><rect x="547.6" y="197" width="0.2" height="15.0" fill="rgb(253,90,6)" rx="2" ry="2" />
<text  x="550.55" y="207.5" ></text>
</g>
<g >
<title>NaClXMutexLock (9 samples, 0.06%)</title><rect x="481.6" y="789" width="0.8" height="15.0" fill="rgb(241,26,0)" rx="2" ry="2" />
<text  x="484.60" y="799.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (5 samples, 0.04%)</title><rect x="542.0" y="293" width="0.4" height="15.0" fill="rgb(249,142,17)" rx="2" ry="2" />
<text  x="544.97" y="303.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (217 samples, 1.53%)</title><rect x="837.9" y="421" width="18.1" height="15.0" fill="rgb(225,227,31)" rx="2" ry="2" />
<text  x="840.88" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.08%)</title><rect x="102.4" y="821" width="0.9" height="15.0" fill="rgb(248,36,26)" rx="2" ry="2" />
<text  x="105.39" y="831.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (8 samples, 0.06%)</title><rect x="533.6" y="261" width="0.7" height="15.0" fill="rgb(247,30,15)" rx="2" ry="2" />
<text  x="536.63" y="271.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (25 samples, 0.18%)</title><rect x="785.0" y="197" width="2.1" height="15.0" fill="rgb(224,123,16)" rx="2" ry="2" />
<text  x="788.02" y="207.5" ></text>
</g>
<g >
<title>update_group_capacity (4 samples, 0.03%)</title><rect x="1061.3" y="501" width="0.4" height="15.0" fill="rgb(246,183,12)" rx="2" ry="2" />
<text  x="1064.34" y="511.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (11 samples, 0.08%)</title><rect x="646.5" y="181" width="0.9" height="15.0" fill="rgb(227,46,46)" rx="2" ry="2" />
<text  x="649.53" y="191.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (8 samples, 0.06%)</title><rect x="491.2" y="725" width="0.7" height="15.0" fill="rgb(206,93,47)" rx="2" ry="2" />
<text  x="494.19" y="735.5" ></text>
</g>
<g >
<title>ovl_permission (2 samples, 0.01%)</title><rect x="499.8" y="421" width="0.1" height="15.0" fill="rgb(206,212,52)" rx="2" ry="2" />
<text  x="502.78" y="431.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (139 samples, 0.98%)</title><rect x="729.5" y="261" width="11.6" height="15.0" fill="rgb(216,103,49)" rx="2" ry="2" />
<text  x="732.49" y="271.5" ></text>
</g>
<g >
<title>pagevec_lookup_range_tag (3 samples, 0.02%)</title><rect x="978.1" y="613" width="0.3" height="15.0" fill="rgb(213,65,50)" rx="2" ry="2" />
<text  x="981.13" y="623.5" ></text>
</g>
<g >
<title>nf_hook_slow (5 samples, 0.04%)</title><rect x="986.6" y="469" width="0.4" height="15.0" fill="rgb(227,34,4)" rx="2" ry="2" />
<text  x="989.55" y="479.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (2 samples, 0.01%)</title><rect x="43.5" y="501" width="0.2" height="15.0" fill="rgb(250,60,24)" rx="2" ry="2" />
<text  x="46.52" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.26%)</title><rect x="495.1" y="581" width="3.1" height="15.0" fill="rgb(222,219,41)" rx="2" ry="2" />
<text  x="498.11" y="591.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (3 samples, 0.02%)</title><rect x="875.2" y="389" width="0.2" height="15.0" fill="rgb(223,105,16)" rx="2" ry="2" />
<text  x="878.16" y="399.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (4 samples, 0.03%)</title><rect x="1189.5" y="725" width="0.3" height="15.0" fill="rgb(240,38,41)" rx="2" ry="2" />
<text  x="1192.50" y="735.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (7 samples, 0.05%)</title><rect x="974.3" y="773" width="0.6" height="15.0" fill="rgb(245,81,31)" rx="2" ry="2" />
<text  x="977.29" y="783.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.06%)</title><rect x="857.2" y="245" width="0.7" height="15.0" fill="rgb(231,187,28)" rx="2" ry="2" />
<text  x="860.23" y="255.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (8 samples, 0.06%)</title><rect x="491.2" y="709" width="0.7" height="15.0" fill="rgb(221,154,6)" rx="2" ry="2" />
<text  x="494.19" y="719.5" ></text>
</g>
<g >
<title>ovl_create (4 samples, 0.03%)</title><rect x="499.4" y="389" width="0.3" height="15.0" fill="rgb(247,124,3)" rx="2" ry="2" />
<text  x="502.36" y="399.5" ></text>
</g>
<g >
<title>tick_irq_enter (6 samples, 0.04%)</title><rect x="1081.4" y="629" width="0.5" height="15.0" fill="rgb(214,14,41)" rx="2" ry="2" />
<text  x="1084.36" y="639.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (4 samples, 0.03%)</title><rect x="813.6" y="101" width="0.4" height="15.0" fill="rgb(228,154,30)" rx="2" ry="2" />
<text  x="816.62" y="111.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.03%)</title><rect x="697.4" y="181" width="0.3" height="15.0" fill="rgb(231,127,44)" rx="2" ry="2" />
<text  x="700.39" y="191.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 0.12%)</title><rect x="724.9" y="373" width="1.4" height="15.0" fill="rgb(254,75,22)" rx="2" ry="2" />
<text  x="727.90" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (63 samples, 0.45%)</title><rect x="10.1" y="725" width="5.2" height="15.0" fill="rgb(209,122,13)" rx="2" ry="2" />
<text  x="13.08" y="735.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (10 samples, 0.07%)</title><rect x="63.5" y="661" width="0.9" height="15.0" fill="rgb(251,191,39)" rx="2" ry="2" />
<text  x="66.53" y="671.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.01%)</title><rect x="809.5" y="421" width="0.2" height="15.0" fill="rgb(238,124,12)" rx="2" ry="2" />
<text  x="812.54" y="431.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (172 samples, 1.22%)</title><rect x="860.8" y="373" width="14.4" height="15.0" fill="rgb(215,176,43)" rx="2" ry="2" />
<text  x="863.81" y="383.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (37 samples, 0.26%)</title><rect x="668.6" y="213" width="3.1" height="15.0" fill="rgb(232,24,24)" rx="2" ry="2" />
<text  x="671.62" y="223.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.03%)</title><rect x="973.8" y="789" width="0.3" height="15.0" fill="rgb(216,105,8)" rx="2" ry="2" />
<text  x="976.79" y="799.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.01%)</title><rect x="495.4" y="325" width="0.1" height="15.0" fill="rgb(224,110,38)" rx="2" ry="2" />
<text  x="498.36" y="335.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (221 samples, 1.56%)</title><rect x="724.4" y="805" width="18.4" height="15.0" fill="rgb(211,173,40)" rx="2" ry="2" />
<text  x="727.40" y="815.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (2 samples, 0.01%)</title><rect x="494.5" y="341" width="0.2" height="15.0" fill="rgb(241,100,1)" rx="2" ry="2" />
<text  x="497.52" y="351.5" ></text>
</g>
<g >
<title>find_get_pages_range_tag (3 samples, 0.02%)</title><rect x="978.1" y="597" width="0.3" height="15.0" fill="rgb(233,21,41)" rx="2" ry="2" />
<text  x="981.13" y="607.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (119 samples, 0.84%)</title><rect x="30.8" y="773" width="9.9" height="15.0" fill="rgb(241,138,14)" rx="2" ry="2" />
<text  x="33.76" y="783.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.02%)</title><rect x="875.2" y="309" width="0.2" height="15.0" fill="rgb(211,168,44)" rx="2" ry="2" />
<text  x="878.16" y="319.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.01%)</title><rect x="593.0" y="133" width="0.2" height="15.0" fill="rgb(245,144,35)" rx="2" ry="2" />
<text  x="596.00" y="143.5" ></text>
</g>
<g >
<title>schedule_timeout (3 samples, 0.02%)</title><rect x="952.7" y="789" width="0.2" height="15.0" fill="rgb(239,116,49)" rx="2" ry="2" />
<text  x="955.70" y="799.5" ></text>
</g>
<g >
<title>update_process_times (3 samples, 0.02%)</title><rect x="31.8" y="581" width="0.3" height="15.0" fill="rgb(224,155,26)" rx="2" ry="2" />
<text  x="34.85" y="591.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (2 samples, 0.01%)</title><rect x="527.0" y="181" width="0.2" height="15.0" fill="rgb(220,18,39)" rx="2" ry="2" />
<text  x="530.04" y="191.5" ></text>
</g>
<g >
<title>pci_pme_list_scan (3 samples, 0.02%)</title><rect x="974.9" y="773" width="0.2" height="15.0" fill="rgb(234,214,34)" rx="2" ry="2" />
<text  x="977.88" y="783.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (3 samples, 0.02%)</title><rect x="82.0" y="805" width="0.3" height="15.0" fill="rgb(206,156,21)" rx="2" ry="2" />
<text  x="85.04" y="815.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (6 samples, 0.04%)</title><rect x="496.3" y="357" width="0.5" height="15.0" fill="rgb(225,91,22)" rx="2" ry="2" />
<text  x="499.27" y="367.5" ></text>
</g>
<g >
<title>enqueue_entity (3 samples, 0.02%)</title><rect x="1074.2" y="437" width="0.2" height="15.0" fill="rgb(224,153,53)" rx="2" ry="2" />
<text  x="1077.18" y="447.5" ></text>
</g>
<g >
<title>del_timer_sync (2 samples, 0.01%)</title><rect x="956.0" y="773" width="0.1" height="15.0" fill="rgb(210,76,31)" rx="2" ry="2" />
<text  x="958.95" y="783.5" ></text>
</g>
<g >
<title>alx_poll (8 samples, 0.06%)</title><rect x="31.2" y="597" width="0.6" height="15.0" fill="rgb(227,180,24)" rx="2" ry="2" />
<text  x="34.18" y="607.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (32 samples, 0.23%)</title><rect x="769.3" y="197" width="2.7" height="15.0" fill="rgb(222,167,30)" rx="2" ry="2" />
<text  x="772.35" y="207.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (248 samples, 1.75%)</title><rect x="743.6" y="325" width="20.7" height="15.0" fill="rgb(213,68,33)" rx="2" ry="2" />
<text  x="746.58" y="335.5" ></text>
</g>
<g >
<title>cpumask_next_and (5 samples, 0.04%)</title><rect x="1172.0" y="581" width="0.4" height="15.0" fill="rgb(219,78,20)" rx="2" ry="2" />
<text  x="1174.99" y="591.5" ></text>
</g>
<g >
<title>cpumask_next_and (3 samples, 0.02%)</title><rect x="1065.6" y="469" width="0.2" height="15.0" fill="rgb(207,146,11)" rx="2" ry="2" />
<text  x="1068.60" y="479.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (9 samples, 0.06%)</title><rect x="495.5" y="357" width="0.8" height="15.0" fill="rgb(214,13,35)" rx="2" ry="2" />
<text  x="498.52" y="367.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (11 samples, 0.08%)</title><rect x="516.1" y="277" width="0.9" height="15.0" fill="rgb(224,115,41)" rx="2" ry="2" />
<text  x="519.12" y="287.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (3 samples, 0.02%)</title><rect x="764.8" y="277" width="0.2" height="15.0" fill="rgb(223,142,3)" rx="2" ry="2" />
<text  x="767.76" y="287.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (12 samples, 0.08%)</title><rect x="647.4" y="197" width="1.0" height="15.0" fill="rgb(236,47,15)" rx="2" ry="2" />
<text  x="650.44" y="207.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (4 samples, 0.03%)</title><rect x="1068.2" y="533" width="0.3" height="15.0" fill="rgb(254,69,8)" rx="2" ry="2" />
<text  x="1071.18" y="543.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (2 samples, 0.01%)</title><rect x="494.3" y="277" width="0.1" height="15.0" fill="rgb(216,189,18)" rx="2" ry="2" />
<text  x="497.27" y="287.5" ></text>
</g>
<g >
<title>pci_check_pme_status (3 samples, 0.02%)</title><rect x="974.9" y="757" width="0.2" height="15.0" fill="rgb(221,139,46)" rx="2" ry="2" />
<text  x="977.88" y="767.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (4 samples, 0.03%)</title><rect x="1041.2" y="485" width="0.4" height="15.0" fill="rgb(230,106,51)" rx="2" ry="2" />
<text  x="1044.25" y="495.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (4 samples, 0.03%)</title><rect x="828.5" y="165" width="0.4" height="15.0" fill="rgb(249,189,1)" rx="2" ry="2" />
<text  x="831.55" y="175.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (10 samples, 0.07%)</title><rect x="744.6" y="229" width="0.8" height="15.0" fill="rgb(229,67,51)" rx="2" ry="2" />
<text  x="747.58" y="239.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (76 samples, 0.54%)</title><rect x="688.3" y="453" width="6.3" height="15.0" fill="rgb(206,55,23)" rx="2" ry="2" />
<text  x="691.30" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.08%)</title><rect x="884.0" y="837" width="0.9" height="15.0" fill="rgb(245,153,12)" rx="2" ry="2" />
<text  x="886.99" y="847.5" ></text>
</g>
<g >
<title>calc_global_load_tick (2 samples, 0.01%)</title><rect x="1036.7" y="501" width="0.2" height="15.0" fill="rgb(249,22,31)" rx="2" ry="2" />
<text  x="1039.75" y="511.5" ></text>
</g>
<g >
<title>dispatcher (215 samples, 1.52%)</title><rect x="724.9" y="757" width="17.9" height="15.0" fill="rgb(234,184,25)" rx="2" ry="2" />
<text  x="727.90" y="767.5" ></text>
</g>
<g >
<title>read_tsc (3 samples, 0.02%)</title><rect x="1053.1" y="597" width="0.2" height="15.0" fill="rgb(247,88,31)" rx="2" ry="2" />
<text  x="1056.09" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.06%)</title><rect x="15.3" y="677" width="0.7" height="15.0" fill="rgb(209,155,25)" rx="2" ry="2" />
<text  x="18.34" y="687.5" ></text>
</g>
<g >
<title>check_tsc_unstable (3 samples, 0.02%)</title><rect x="1022.2" y="693" width="0.3" height="15.0" fill="rgb(243,23,39)" rx="2" ry="2" />
<text  x="1025.24" y="703.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (6 samples, 0.04%)</title><rect x="653.7" y="149" width="0.5" height="15.0" fill="rgb(237,64,37)" rx="2" ry="2" />
<text  x="656.70" y="159.5" ></text>
</g>
<g >
<title>cpu_startup_entry (490 samples, 3.46%)</title><rect x="979.7" y="805" width="40.9" height="15.0" fill="rgb(249,166,29)" rx="2" ry="2" />
<text  x="982.71" y="815.5" >cpu..</text>
</g>
<g >
<title>alx_poll (47 samples, 0.33%)</title><rect x="983.3" y="597" width="3.9" height="15.0" fill="rgb(209,51,19)" rx="2" ry="2" />
<text  x="986.30" y="607.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::wrapping_sub (2 samples, 0.01%)</title><rect x="632.3" y="117" width="0.1" height="15.0" fill="rgb(247,152,5)" rx="2" ry="2" />
<text  x="635.27" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (28 samples, 0.20%)</title><rect x="679.7" y="309" width="2.3" height="15.0" fill="rgb(254,124,25)" rx="2" ry="2" />
<text  x="682.71" y="319.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (2,278 samples, 16.10%)</title><rect x="494.9" y="677" width="190.0" height="15.0" fill="rgb(243,156,0)" rx="2" ry="2" />
<text  x="497.94" y="687.5" >rustposix::safeposix::fi..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (12 samples, 0.08%)</title><rect x="859.8" y="229" width="1.0" height="15.0" fill="rgb(246,177,42)" rx="2" ry="2" />
<text  x="862.81" y="239.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (3 samples, 0.02%)</title><rect x="888.9" y="757" width="0.3" height="15.0" fill="rgb(233,104,40)" rx="2" ry="2" />
<text  x="891.91" y="767.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.05%)</title><rect x="857.9" y="213" width="0.6" height="15.0" fill="rgb(235,71,18)" rx="2" ry="2" />
<text  x="860.90" y="223.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 0.11%)</title><rect x="858.5" y="245" width="1.3" height="15.0" fill="rgb(208,30,7)" rx="2" ry="2" />
<text  x="861.48" y="255.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (164 samples, 1.16%)</title><rect x="568.1" y="229" width="13.6" height="15.0" fill="rgb(236,132,17)" rx="2" ry="2" />
<text  x="571.07" y="239.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (2,297 samples, 16.23%)</title><rect x="493.4" y="693" width="191.5" height="15.0" fill="rgb(230,70,9)" rx="2" ry="2" />
<text  x="496.36" y="703.5" >rustposix::safeposix::sys..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.05%)</title><rect x="680.0" y="261" width="0.6" height="15.0" fill="rgb(232,160,13)" rx="2" ry="2" />
<text  x="683.05" y="271.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (221 samples, 1.56%)</title><rect x="856.7" y="533" width="18.5" height="15.0" fill="rgb(234,149,5)" rx="2" ry="2" />
<text  x="859.73" y="543.5" ></text>
</g>
<g >
<title>timerqueue_add (12 samples, 0.08%)</title><rect x="1032.2" y="533" width="1.0" height="15.0" fill="rgb(240,205,3)" rx="2" ry="2" />
<text  x="1035.16" y="543.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (2 samples, 0.01%)</title><rect x="497.5" y="293" width="0.2" height="15.0" fill="rgb(245,102,52)" rx="2" ry="2" />
<text  x="500.53" y="303.5" ></text>
</g>
<g >
<title>__schedule (116 samples, 0.82%)</title><rect x="962.7" y="741" width="9.7" height="15.0" fill="rgb(227,36,11)" rx="2" ry="2" />
<text  x="965.70" y="751.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (5 samples, 0.04%)</title><rect x="856.0" y="597" width="0.4" height="15.0" fill="rgb(211,210,20)" rx="2" ry="2" />
<text  x="858.98" y="607.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (735 samples, 5.19%)</title><rect x="612.0" y="309" width="61.3" height="15.0" fill="rgb(215,193,9)" rx="2" ry="2" />
<text  x="615.01" y="319.5" >&lt;serde..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (22 samples, 0.16%)</title><rect x="810.5" y="165" width="1.8" height="15.0" fill="rgb(252,31,29)" rx="2" ry="2" />
<text  x="813.45" y="175.5" ></text>
</g>
<g >
<title>ovl_create_or_link (3 samples, 0.02%)</title><rect x="499.4" y="357" width="0.3" height="15.0" fill="rgb(219,109,39)" rx="2" ry="2" />
<text  x="502.44" y="367.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.01%)</title><rect x="724.9" y="341" width="0.2" height="15.0" fill="rgb(223,27,3)" rx="2" ry="2" />
<text  x="727.90" y="351.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (221 samples, 1.56%)</title><rect x="856.7" y="581" width="18.5" height="15.0" fill="rgb(213,13,31)" rx="2" ry="2" />
<text  x="859.73" y="591.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2,207 samples, 15.59%)</title><rect x="500.9" y="613" width="184.0" height="15.0" fill="rgb(217,163,8)" rx="2" ry="2" />
<text  x="503.86" y="623.5" >serde::ser::impls::&lt;imp..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.02%)</title><rect x="776.8" y="197" width="0.2" height="15.0" fill="rgb(236,13,19)" rx="2" ry="2" />
<text  x="779.77" y="207.5" ></text>
</g>
<g >
<title>__update_blocked_fair (7 samples, 0.05%)</title><rect x="67.4" y="565" width="0.6" height="15.0" fill="rgb(250,38,4)" rx="2" ry="2" />
<text  x="70.45" y="575.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (4 samples, 0.03%)</title><rect x="742.5" y="277" width="0.3" height="15.0" fill="rgb(223,145,27)" rx="2" ry="2" />
<text  x="745.50" y="287.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,461 samples, 10.32%)</title><rect x="1023.4" y="693" width="121.8" height="15.0" fill="rgb(234,171,31)" rx="2" ry="2" />
<text  x="1026.41" y="703.5" >cpuidle_enter</text>
</g>
<g >
<title>ktime_get (2 samples, 0.01%)</title><rect x="988.1" y="677" width="0.1" height="15.0" fill="rgb(246,175,35)" rx="2" ry="2" />
<text  x="991.05" y="687.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (8 samples, 0.06%)</title><rect x="857.2" y="229" width="0.7" height="15.0" fill="rgb(232,162,13)" rx="2" ry="2" />
<text  x="860.23" y="239.5" ></text>
</g>
<g >
<title>path_lookupat (3 samples, 0.02%)</title><rect x="499.8" y="469" width="0.2" height="15.0" fill="rgb(230,211,22)" rx="2" ry="2" />
<text  x="502.78" y="479.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="542.7" y="213" width="0.3" height="15.0" fill="rgb(241,45,35)" rx="2" ry="2" />
<text  x="545.72" y="223.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (5 samples, 0.04%)</title><rect x="856.0" y="789" width="0.4" height="15.0" fill="rgb(240,59,31)" rx="2" ry="2" />
<text  x="858.98" y="799.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (43 samples, 0.30%)</title><rect x="857.2" y="293" width="3.6" height="15.0" fill="rgb(228,87,9)" rx="2" ry="2" />
<text  x="860.23" y="303.5" ></text>
</g>
<g >
<title>menu_select (2 samples, 0.01%)</title><rect x="40.4" y="741" width="0.1" height="15.0" fill="rgb(228,81,32)" rx="2" ry="2" />
<text  x="43.35" y="751.5" ></text>
</g>
<g >
<title>irqentry_enter (3 samples, 0.02%)</title><rect x="1029.7" y="645" width="0.2" height="15.0" fill="rgb(229,190,15)" rx="2" ry="2" />
<text  x="1032.66" y="655.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (5 samples, 0.04%)</title><rect x="686.7" y="821" width="0.4" height="15.0" fill="rgb(251,75,19)" rx="2" ry="2" />
<text  x="689.72" y="831.5" ></text>
</g>
<g >
<title>__writeback_single_inode (8 samples, 0.06%)</title><rect x="978.5" y="693" width="0.6" height="15.0" fill="rgb(225,188,3)" rx="2" ry="2" />
<text  x="981.46" y="703.5" ></text>
</g>
<g >
<title>pool-whoopsie (646 samples, 4.56%)</title><rect x="16.3" y="853" width="53.9" height="15.0" fill="rgb(240,173,52)" rx="2" ry="2" />
<text  x="19.34" y="863.5" >pool-..</text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (8 samples, 0.06%)</title><rect x="675.1" y="261" width="0.7" height="15.0" fill="rgb(226,186,21)" rx="2" ry="2" />
<text  x="678.13" y="271.5" ></text>
</g>
<g >
<title>pci_read_config_word (3 samples, 0.02%)</title><rect x="974.9" y="741" width="0.2" height="15.0" fill="rgb(237,202,32)" rx="2" ry="2" />
<text  x="977.88" y="751.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (16 samples, 0.11%)</title><rect x="985.8" y="549" width="1.3" height="15.0" fill="rgb(232,154,44)" rx="2" ry="2" />
<text  x="988.80" y="559.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (9 samples, 0.06%)</title><rect x="831.9" y="229" width="0.7" height="15.0" fill="rgb(246,1,51)" rx="2" ry="2" />
<text  x="834.88" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (29 samples, 0.20%)</title><rect x="673.8" y="309" width="2.4" height="15.0" fill="rgb(211,58,2)" rx="2" ry="2" />
<text  x="676.79" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.02%)</title><rect x="526.0" y="181" width="0.3" height="15.0" fill="rgb(207,119,3)" rx="2" ry="2" />
<text  x="529.04" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.05%)</title><rect x="523.4" y="213" width="0.6" height="15.0" fill="rgb(238,144,7)" rx="2" ry="2" />
<text  x="526.37" y="223.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (4 samples, 0.03%)</title><rect x="542.1" y="277" width="0.3" height="15.0" fill="rgb(232,165,44)" rx="2" ry="2" />
<text  x="545.05" y="287.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8_unchecked (7 samples, 0.05%)</title><rect x="623.2" y="213" width="0.6" height="15.0" fill="rgb(235,58,23)" rx="2" ry="2" />
<text  x="626.18" y="223.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.05%)</title><rect x="1044.9" y="421" width="0.6" height="15.0" fill="rgb(238,131,1)" rx="2" ry="2" />
<text  x="1047.92" y="431.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (12 samples, 0.08%)</title><rect x="986.0" y="501" width="1.0" height="15.0" fill="rgb(227,165,53)" rx="2" ry="2" />
<text  x="988.97" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.04%)</title><rect x="811.1" y="69" width="0.5" height="15.0" fill="rgb(227,181,38)" rx="2" ry="2" />
<text  x="814.12" y="79.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (51 samples, 0.36%)</title><rect x="46.4" y="581" width="4.2" height="15.0" fill="rgb(250,0,10)" rx="2" ry="2" />
<text  x="49.35" y="591.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (333 samples, 2.35%)</title><rect x="810.1" y="341" width="27.8" height="15.0" fill="rgb(243,198,51)" rx="2" ry="2" />
<text  x="813.12" y="351.5" >c..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (12 samples, 0.08%)</title><rect x="743.6" y="213" width="1.0" height="15.0" fill="rgb(217,186,10)" rx="2" ry="2" />
<text  x="746.58" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (8 samples, 0.06%)</title><rect x="987.3" y="645" width="0.7" height="15.0" fill="rgb(231,73,53)" rx="2" ry="2" />
<text  x="990.30" y="655.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (3 samples, 0.02%)</title><rect x="500.9" y="501" width="0.2" height="15.0" fill="rgb(227,12,53)" rx="2" ry="2" />
<text  x="503.86" y="511.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.04%)</title><rect x="743.1" y="261" width="0.5" height="15.0" fill="rgb(217,124,14)" rx="2" ry="2" />
<text  x="746.08" y="271.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (222 samples, 1.57%)</title><rect x="697.9" y="325" width="18.5" height="15.0" fill="rgb(241,216,52)" rx="2" ry="2" />
<text  x="700.89" y="335.5" ></text>
</g>
<g >
<title>start_secondary (129 samples, 0.91%)</title><rect x="30.7" y="821" width="10.7" height="15.0" fill="rgb(227,79,17)" rx="2" ry="2" />
<text  x="33.68" y="831.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (4 samples, 0.03%)</title><rect x="742.1" y="197" width="0.3" height="15.0" fill="rgb(226,110,14)" rx="2" ry="2" />
<text  x="745.08" y="207.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (10 samples, 0.07%)</title><rect x="744.6" y="213" width="0.8" height="15.0" fill="rgb(250,223,41)" rx="2" ry="2" />
<text  x="747.58" y="223.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (229 samples, 1.62%)</title><rect x="697.4" y="661" width="19.1" height="15.0" fill="rgb(242,61,23)" rx="2" ry="2" />
<text  x="700.39" y="671.5" ></text>
</g>
<g >
<title>pick_next_task_idle (2 samples, 0.01%)</title><rect x="1179.7" y="677" width="0.1" height="15.0" fill="rgb(242,119,43)" rx="2" ry="2" />
<text  x="1182.66" y="687.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (29 samples, 0.20%)</title><rect x="676.6" y="341" width="2.4" height="15.0" fill="rgb(219,74,54)" rx="2" ry="2" />
<text  x="679.63" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.08%)</title><rect x="517.6" y="341" width="1.0" height="15.0" fill="rgb(241,128,3)" rx="2" ry="2" />
<text  x="520.62" y="351.5" ></text>
</g>
<g >
<title>__rdgsbase_inactive (2 samples, 0.01%)</title><rect x="948.9" y="837" width="0.1" height="15.0" fill="rgb(230,41,18)" rx="2" ry="2" />
<text  x="951.86" y="847.5" ></text>
</g>
<g >
<title>kick_ilb (9 samples, 0.06%)</title><rect x="1176.9" y="629" width="0.8" height="15.0" fill="rgb(213,176,0)" rx="2" ry="2" />
<text  x="1179.91" y="639.5" ></text>
</g>
<g >
<title>[librustposix.so] (86 samples, 0.61%)</title><rect x="486.2" y="741" width="7.2" height="15.0" fill="rgb(249,126,0)" rx="2" ry="2" />
<text  x="489.19" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (19 samples, 0.13%)</title><rect x="726.3" y="213" width="1.6" height="15.0" fill="rgb(211,173,42)" rx="2" ry="2" />
<text  x="729.32" y="223.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.01%)</title><rect x="697.7" y="229" width="0.2" height="15.0" fill="rgb(218,20,15)" rx="2" ry="2" />
<text  x="700.72" y="239.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.02%)</title><rect x="520.0" y="405" width="0.2" height="15.0" fill="rgb(238,10,8)" rx="2" ry="2" />
<text  x="522.95" y="415.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (320 samples, 2.26%)</title><rect x="1054.3" y="597" width="26.6" height="15.0" fill="rgb(217,195,7)" rx="2" ry="2" />
<text  x="1057.26" y="607.5" >a..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.02%)</title><rect x="835.5" y="85" width="0.3" height="15.0" fill="rgb(219,38,40)" rx="2" ry="2" />
<text  x="838.55" y="95.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 0.03%)</title><rect x="697.4" y="213" width="0.3" height="15.0" fill="rgb(251,202,22)" rx="2" ry="2" />
<text  x="700.39" y="223.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (3 samples, 0.02%)</title><rect x="769.1" y="101" width="0.2" height="15.0" fill="rgb(231,20,54)" rx="2" ry="2" />
<text  x="772.10" y="111.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (248 samples, 1.75%)</title><rect x="743.6" y="261" width="20.7" height="15.0" fill="rgb(247,146,33)" rx="2" ry="2" />
<text  x="746.58" y="271.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (3 samples, 0.02%)</title><rect x="831.5" y="85" width="0.3" height="15.0" fill="rgb(242,146,17)" rx="2" ry="2" />
<text  x="834.55" y="95.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.18%)</title><rect x="601.5" y="181" width="2.2" height="15.0" fill="rgb(213,193,38)" rx="2" ry="2" />
<text  x="604.50" y="191.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (3 samples, 0.02%)</title><rect x="518.4" y="261" width="0.2" height="15.0" fill="rgb(246,46,10)" rx="2" ry="2" />
<text  x="521.37" y="271.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (221 samples, 1.56%)</title><rect x="856.7" y="789" width="18.5" height="15.0" fill="rgb(254,154,16)" rx="2" ry="2" />
<text  x="859.73" y="799.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (229 samples, 1.62%)</title><rect x="697.4" y="501" width="19.1" height="15.0" fill="rgb(216,26,14)" rx="2" ry="2" />
<text  x="700.39" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (7 samples, 0.05%)</title><rect x="848.8" y="165" width="0.6" height="15.0" fill="rgb(216,193,23)" rx="2" ry="2" />
<text  x="851.81" y="175.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (76 samples, 0.54%)</title><rect x="688.3" y="677" width="6.3" height="15.0" fill="rgb(235,130,5)" rx="2" ry="2" />
<text  x="691.30" y="687.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (301 samples, 2.13%)</title><rect x="764.3" y="773" width="25.1" height="15.0" fill="rgb(235,13,53)" rx="2" ry="2" />
<text  x="767.26" y="783.5" >N..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (19 samples, 0.13%)</title><rect x="726.3" y="245" width="1.6" height="15.0" fill="rgb(249,195,13)" rx="2" ry="2" />
<text  x="729.32" y="255.5" ></text>
</g>
<g >
<title>alloc_page_buffers (3 samples, 0.02%)</title><rect x="495.7" y="325" width="0.2" height="15.0" fill="rgb(227,193,37)" rx="2" ry="2" />
<text  x="498.69" y="335.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (3 samples, 0.02%)</title><rect x="875.2" y="325" width="0.2" height="15.0" fill="rgb(237,135,34)" rx="2" ry="2" />
<text  x="878.16" y="335.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (2 samples, 0.01%)</title><rect x="48.4" y="533" width="0.2" height="15.0" fill="rgb(206,64,31)" rx="2" ry="2" />
<text  x="51.44" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (4 samples, 0.03%)</title><rect x="875.2" y="709" width="0.3" height="15.0" fill="rgb(215,96,27)" rx="2" ry="2" />
<text  x="878.16" y="719.5" ></text>
</g>
<g >
<title>update_process_times (136 samples, 0.96%)</title><rect x="1035.3" y="517" width="11.4" height="15.0" fill="rgb(216,228,39)" rx="2" ry="2" />
<text  x="1038.33" y="527.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.01%)</title><rect x="791.0" y="805" width="0.2" height="15.0" fill="rgb(223,188,24)" rx="2" ry="2" />
<text  x="794.02" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (19 samples, 0.13%)</title><rect x="844.7" y="213" width="1.6" height="15.0" fill="rgb(205,169,54)" rx="2" ry="2" />
<text  x="847.72" y="223.5" ></text>
</g>
<g >
<title>__note_gp_changes (2 samples, 0.01%)</title><rect x="953.7" y="789" width="0.2" height="15.0" fill="rgb(246,29,19)" rx="2" ry="2" />
<text  x="956.70" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.10%)</title><rect x="812.9" y="133" width="1.1" height="15.0" fill="rgb(227,60,21)" rx="2" ry="2" />
<text  x="815.87" y="143.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="828.0" y="117" width="0.2" height="15.0" fill="rgb(253,79,52)" rx="2" ry="2" />
<text  x="831.05" y="127.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="514.7" y="277" width="0.3" height="15.0" fill="rgb(242,0,29)" rx="2" ry="2" />
<text  x="517.70" y="287.5" ></text>
</g>
<g >
<title>crypto_shash_update (2 samples, 0.01%)</title><rect x="497.4" y="229" width="0.1" height="15.0" fill="rgb(215,162,19)" rx="2" ry="2" />
<text  x="500.36" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (630 samples, 4.45%)</title><rect x="1029.3" y="661" width="52.6" height="15.0" fill="rgb(254,203,37)" rx="2" ry="2" />
<text  x="1032.33" y="671.5" >asm_s..</text>
</g>
<g >
<title>&lt;u32 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (61 samples, 0.43%)</title><rect x="772.0" y="213" width="5.1" height="15.0" fill="rgb(211,135,0)" rx="2" ry="2" />
<text  x="775.01" y="223.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (3 samples, 0.02%)</title><rect x="875.2" y="197" width="0.2" height="15.0" fill="rgb(207,13,26)" rx="2" ry="2" />
<text  x="878.16" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="980.1" y="741" width="0.3" height="15.0" fill="rgb(243,57,52)" rx="2" ry="2" />
<text  x="983.13" y="751.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::len (3 samples, 0.02%)</title><rect x="805.0" y="821" width="0.3" height="15.0" fill="rgb(235,229,25)" rx="2" ry="2" />
<text  x="808.03" y="831.5" ></text>
</g>
<g >
<title>vfs_read (4 samples, 0.03%)</title><rect x="951.4" y="773" width="0.3" height="15.0" fill="rgb(223,138,7)" rx="2" ry="2" />
<text  x="954.37" y="783.5" ></text>
</g>
<g >
<title>put_prev_task_idle (2 samples, 0.01%)</title><rect x="1182.5" y="693" width="0.2" height="15.0" fill="rgb(243,50,23)" rx="2" ry="2" />
<text  x="1185.50" y="703.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="860.1" y="149" width="0.1" height="15.0" fill="rgb(239,199,13)" rx="2" ry="2" />
<text  x="863.06" y="159.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (9 samples, 0.06%)</title><rect x="688.5" y="405" width="0.7" height="15.0" fill="rgb(224,137,9)" rx="2" ry="2" />
<text  x="691.47" y="415.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.01%)</title><rect x="809.7" y="309" width="0.2" height="15.0" fill="rgb(242,221,5)" rx="2" ry="2" />
<text  x="812.70" y="319.5" ></text>
</g>
<g >
<title>process_timeout (3 samples, 0.02%)</title><rect x="1080.3" y="533" width="0.2" height="15.0" fill="rgb(208,153,27)" rx="2" ry="2" />
<text  x="1083.27" y="543.5" ></text>
</g>
<g >
<title>ext4_ext_tree_init (2 samples, 0.01%)</title><rect x="499.4" y="261" width="0.2" height="15.0" fill="rgb(205,198,34)" rx="2" ry="2" />
<text  x="502.44" y="271.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (38 samples, 0.27%)</title><rect x="870.8" y="277" width="3.2" height="15.0" fill="rgb(243,175,24)" rx="2" ry="2" />
<text  x="873.82" y="287.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (112 samples, 0.79%)</title><rect x="30.8" y="741" width="9.4" height="15.0" fill="rgb(228,72,32)" rx="2" ry="2" />
<text  x="33.85" y="751.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (68 samples, 0.48%)</title><rect x="766.3" y="277" width="5.7" height="15.0" fill="rgb(209,36,32)" rx="2" ry="2" />
<text  x="769.34" y="287.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (19 samples, 0.13%)</title><rect x="865.9" y="245" width="1.6" height="15.0" fill="rgb(234,169,52)" rx="2" ry="2" />
<text  x="868.90" y="255.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (32 samples, 0.23%)</title><rect x="769.3" y="213" width="2.7" height="15.0" fill="rgb(209,105,44)" rx="2" ry="2" />
<text  x="772.35" y="223.5" ></text>
</g>
<g >
<title>__alloc_file (2 samples, 0.01%)</title><rect x="498.9" y="309" width="0.2" height="15.0" fill="rgb(239,158,29)" rx="2" ry="2" />
<text  x="501.94" y="319.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (18 samples, 0.13%)</title><rect x="605.6" y="181" width="1.5" height="15.0" fill="rgb(252,125,29)" rx="2" ry="2" />
<text  x="608.59" y="191.5" ></text>
</g>
<g >
<title>rcu_pending (7 samples, 0.05%)</title><rect x="1038.8" y="485" width="0.6" height="15.0" fill="rgb(209,178,22)" rx="2" ry="2" />
<text  x="1041.83" y="495.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (7 samples, 0.05%)</title><rect x="642.3" y="197" width="0.6" height="15.0" fill="rgb(248,99,11)" rx="2" ry="2" />
<text  x="645.27" y="207.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (65 samples, 0.46%)</title><rect x="553.6" y="293" width="5.5" height="15.0" fill="rgb(225,219,23)" rx="2" ry="2" />
<text  x="556.64" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_idle_got_tick (4 samples, 0.03%)</title><rect x="1145.6" y="677" width="0.3" height="15.0" fill="rgb(244,73,54)" rx="2" ry="2" />
<text  x="1148.56" y="687.5" ></text>
</g>
<g >
<title>prepare_to_swait_event (12 samples, 0.08%)</title><rect x="959.8" y="773" width="1.0" height="15.0" fill="rgb(231,162,31)" rx="2" ry="2" />
<text  x="962.79" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2,203 samples, 15.57%)</title><rect x="501.1" y="485" width="183.7" height="15.0" fill="rgb(205,55,19)" rx="2" ry="2" />
<text  x="504.11" y="495.5" >core::iter::traits::ite..</text>
</g>
<g >
<title>itoa::Buffer::new (8 samples, 0.06%)</title><rect x="514.3" y="341" width="0.7" height="15.0" fill="rgb(222,105,13)" rx="2" ry="2" />
<text  x="517.28" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.01%)</title><rect x="515.5" y="261" width="0.2" height="15.0" fill="rgb(222,151,40)" rx="2" ry="2" />
<text  x="518.54" y="271.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (8 samples, 0.06%)</title><rect x="741.1" y="325" width="0.6" height="15.0" fill="rgb(206,128,8)" rx="2" ry="2" />
<text  x="744.08" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (221 samples, 1.56%)</title><rect x="856.7" y="677" width="18.5" height="15.0" fill="rgb(253,171,11)" rx="2" ry="2" />
<text  x="859.73" y="687.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (3 samples, 0.02%)</title><rect x="764.8" y="261" width="0.2" height="15.0" fill="rgb(210,15,34)" rx="2" ry="2" />
<text  x="767.76" y="271.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::len (8 samples, 0.06%)</title><rect x="841.1" y="245" width="0.7" height="15.0" fill="rgb(246,109,29)" rx="2" ry="2" />
<text  x="844.14" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.03%)</title><rect x="855.6" y="309" width="0.4" height="15.0" fill="rgb(241,118,40)" rx="2" ry="2" />
<text  x="858.64" y="319.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (3 samples, 0.02%)</title><rect x="875.2" y="229" width="0.2" height="15.0" fill="rgb(233,181,9)" rx="2" ry="2" />
<text  x="878.16" y="239.5" ></text>
</g>
<g >
<title>NaClSysWaitpidDecoder (4,430 samples, 31.30%)</title><rect x="116.8" y="805" width="369.4" height="15.0" fill="rgb(206,33,23)" rx="2" ry="2" />
<text  x="119.81" y="815.5" >NaClSysWaitpidDecoder</text>
</g>
<g >
<title>common_interrupt (11 samples, 0.08%)</title><rect x="30.9" y="709" width="0.9" height="15.0" fill="rgb(233,207,51)" rx="2" ry="2" />
<text  x="33.93" y="719.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (5 samples, 0.04%)</title><rect x="809.7" y="325" width="0.4" height="15.0" fill="rgb(228,182,23)" rx="2" ry="2" />
<text  x="812.70" y="335.5" ></text>
</g>
<g >
<title>schedule (22 samples, 0.16%)</title><rect x="28.1" y="757" width="1.8" height="15.0" fill="rgb(231,53,16)" rx="2" ry="2" />
<text  x="31.09" y="767.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.03%)</title><rect x="685.0" y="725" width="0.4" height="15.0" fill="rgb(247,82,5)" rx="2" ry="2" />
<text  x="688.05" y="735.5" ></text>
</g>
<g >
<title>read_tsc (3 samples, 0.02%)</title><rect x="1049.6" y="549" width="0.2" height="15.0" fill="rgb(239,77,7)" rx="2" ry="2" />
<text  x="1052.59" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 0.13%)</title><rect x="726.3" y="197" width="1.6" height="15.0" fill="rgb(205,77,23)" rx="2" ry="2" />
<text  x="729.32" y="207.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.01%)</title><rect x="809.2" y="821" width="0.2" height="15.0" fill="rgb(208,162,22)" rx="2" ry="2" />
<text  x="812.20" y="831.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (16 samples, 0.11%)</title><rect x="858.5" y="213" width="1.3" height="15.0" fill="rgb(242,57,24)" rx="2" ry="2" />
<text  x="861.48" y="223.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (68 samples, 0.48%)</title><rect x="766.3" y="293" width="5.7" height="15.0" fill="rgb(252,11,53)" rx="2" ry="2" />
<text  x="769.34" y="303.5" ></text>
</g>
<g >
<title>__schedule (20 samples, 0.14%)</title><rect x="28.1" y="741" width="1.7" height="15.0" fill="rgb(222,144,12)" rx="2" ry="2" />
<text  x="31.09" y="751.5" ></text>
</g>
<g >
<title>do_idle (488 samples, 3.45%)</title><rect x="979.7" y="789" width="40.7" height="15.0" fill="rgb(231,223,9)" rx="2" ry="2" />
<text  x="982.71" y="799.5" >do_..</text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (2 samples, 0.01%)</title><rect x="766.2" y="213" width="0.1" height="15.0" fill="rgb(214,136,42)" rx="2" ry="2" />
<text  x="769.18" y="223.5" ></text>
</g>
<g >
<title>tick_sched_timer (3 samples, 0.02%)</title><rect x="1047.6" y="565" width="0.2" height="15.0" fill="rgb(241,11,45)" rx="2" ry="2" />
<text  x="1050.59" y="575.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (257 samples, 1.82%)</title><rect x="742.8" y="789" width="21.5" height="15.0" fill="rgb(211,79,18)" rx="2" ry="2" />
<text  x="745.83" y="799.5" >N..</text>
</g>
<g >
<title>psi_task_switch (3 samples, 0.02%)</title><rect x="1019.7" y="741" width="0.3" height="15.0" fill="rgb(206,98,36)" rx="2" ry="2" />
<text  x="1022.74" y="751.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.03%)</title><rect x="688.8" y="213" width="0.3" height="15.0" fill="rgb(226,49,46)" rx="2" ry="2" />
<text  x="691.80" y="223.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.01%)</title><rect x="1018.8" y="773" width="0.2" height="15.0" fill="rgb(231,167,18)" rx="2" ry="2" />
<text  x="1021.82" y="783.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (557 samples, 3.94%)</title><rect x="809.5" y="517" width="46.5" height="15.0" fill="rgb(230,109,42)" rx="2" ry="2" />
<text  x="812.54" y="527.5" >&lt;ser..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (3 samples, 0.02%)</title><rect x="858.2" y="181" width="0.3" height="15.0" fill="rgb(238,201,0)" rx="2" ry="2" />
<text  x="861.23" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.10%)</title><rect x="800.4" y="821" width="1.2" height="15.0" fill="rgb(213,100,51)" rx="2" ry="2" />
<text  x="803.45" y="831.5" ></text>
</g>
<g >
<title>update_curr (20 samples, 0.14%)</title><rect x="964.8" y="677" width="1.7" height="15.0" fill="rgb(215,137,46)" rx="2" ry="2" />
<text  x="967.79" y="687.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (5 samples, 0.04%)</title><rect x="511.9" y="229" width="0.4" height="15.0" fill="rgb(208,102,18)" rx="2" ry="2" />
<text  x="514.87" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (16 samples, 0.11%)</title><rect x="43.7" y="501" width="1.3" height="15.0" fill="rgb(253,22,27)" rx="2" ry="2" />
<text  x="46.69" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (3 samples, 0.02%)</title><rect x="856.4" y="821" width="0.2" height="15.0" fill="rgb(220,163,45)" rx="2" ry="2" />
<text  x="859.39" y="831.5" ></text>
</g>
<g >
<title>inode_permission.part.0 (2 samples, 0.01%)</title><rect x="499.8" y="437" width="0.1" height="15.0" fill="rgb(220,82,16)" rx="2" ry="2" />
<text  x="502.78" y="447.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (18 samples, 0.13%)</title><rect x="803.4" y="821" width="1.5" height="15.0" fill="rgb(215,157,6)" rx="2" ry="2" />
<text  x="806.45" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.04%)</title><rect x="535.6" y="197" width="0.4" height="15.0" fill="rgb(205,95,29)" rx="2" ry="2" />
<text  x="538.63" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="574.3" y="133" width="0.2" height="15.0" fill="rgb(205,45,13)" rx="2" ry="2" />
<text  x="577.32" y="143.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (2 samples, 0.01%)</title><rect x="494.9" y="517" width="0.2" height="15.0" fill="rgb(233,45,46)" rx="2" ry="2" />
<text  x="497.94" y="527.5" ></text>
</g>
<g >
<title>update_blocked_averages (4 samples, 0.03%)</title><rect x="970.6" y="693" width="0.4" height="15.0" fill="rgb(221,142,10)" rx="2" ry="2" />
<text  x="973.63" y="703.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (2,203 samples, 15.57%)</title><rect x="501.1" y="501" width="183.7" height="15.0" fill="rgb(250,205,49)" rx="2" ry="2" />
<text  x="504.11" y="511.5" >core::iter::traits::ite..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.06%)</title><rect x="831.9" y="181" width="0.7" height="15.0" fill="rgb(228,117,39)" rx="2" ry="2" />
<text  x="834.88" y="191.5" ></text>
</g>
<g >
<title>__update_blocked_fair (30 samples, 0.21%)</title><rect x="1173.2" y="565" width="2.5" height="15.0" fill="rgb(219,62,21)" rx="2" ry="2" />
<text  x="1176.24" y="575.5" ></text>
</g>
<g >
<title>ip_list_rcv_finish.constprop.0 (6 samples, 0.04%)</title><rect x="986.0" y="485" width="0.5" height="15.0" fill="rgb(225,211,27)" rx="2" ry="2" />
<text  x="988.97" y="495.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (4 samples, 0.03%)</title><rect x="742.5" y="261" width="0.3" height="15.0" fill="rgb(206,45,3)" rx="2" ry="2" />
<text  x="745.50" y="271.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (206 samples, 1.46%)</title><rect x="593.6" y="293" width="17.2" height="15.0" fill="rgb(212,118,23)" rx="2" ry="2" />
<text  x="596.58" y="303.5" ></text>
</g>
<g >
<title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.02%)</title><rect x="763.8" y="229" width="0.2" height="15.0" fill="rgb(254,156,11)" rx="2" ry="2" />
<text  x="766.76" y="239.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (221 samples, 1.56%)</title><rect x="856.7" y="629" width="18.5" height="15.0" fill="rgb(251,136,1)" rx="2" ry="2" />
<text  x="859.73" y="639.5" ></text>
</g>
<g >
<title>wake_up_process (17 samples, 0.12%)</title><rect x="49.1" y="501" width="1.4" height="15.0" fill="rgb(224,199,45)" rx="2" ry="2" />
<text  x="52.11" y="511.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (255 samples, 1.80%)</title><rect x="743.0" y="533" width="21.3" height="15.0" fill="rgb(213,80,4)" rx="2" ry="2" />
<text  x="746.00" y="543.5" >s..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.01%)</title><rect x="545.8" y="261" width="0.2" height="15.0" fill="rgb(252,14,15)" rx="2" ry="2" />
<text  x="548.80" y="271.5" ></text>
</g>
<g >
<title>net_rx_action (47 samples, 0.33%)</title><rect x="983.3" y="629" width="3.9" height="15.0" fill="rgb(233,148,54)" rx="2" ry="2" />
<text  x="986.30" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (2,207 samples, 15.59%)</title><rect x="500.9" y="629" width="184.0" height="15.0" fill="rgb(225,104,54)" rx="2" ry="2" />
<text  x="503.86" y="639.5" >serde_json::ser::to_wri..</text>
</g>
<g >
<title>__update_load_avg_se (3 samples, 0.02%)</title><rect x="1075.9" y="405" width="0.3" height="15.0" fill="rgb(244,218,40)" rx="2" ry="2" />
<text  x="1078.94" y="415.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (115 samples, 0.81%)</title><rect x="527.3" y="325" width="9.6" height="15.0" fill="rgb(252,194,3)" rx="2" ry="2" />
<text  x="530.29" y="335.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (10 samples, 0.07%)</title><rect x="829.3" y="133" width="0.8" height="15.0" fill="rgb(254,209,48)" rx="2" ry="2" />
<text  x="832.30" y="143.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="1029.5" y="645" width="0.2" height="15.0" fill="rgb(215,22,2)" rx="2" ry="2" />
<text  x="1032.49" y="655.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (222 samples, 1.57%)</title><rect x="697.9" y="293" width="18.5" height="15.0" fill="rgb(209,159,46)" rx="2" ry="2" />
<text  x="700.89" y="303.5" ></text>
</g>
<g >
<title>lind_write (229 samples, 1.62%)</title><rect x="697.4" y="805" width="19.1" height="15.0" fill="rgb(213,101,10)" rx="2" ry="2" />
<text  x="700.39" y="815.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (5 samples, 0.04%)</title><rect x="676.2" y="357" width="0.4" height="15.0" fill="rgb(253,161,8)" rx="2" ry="2" />
<text  x="679.21" y="367.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (8 samples, 0.06%)</title><rect x="1185.8" y="629" width="0.7" height="15.0" fill="rgb(213,116,16)" rx="2" ry="2" />
<text  x="1188.83" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.02%)</title><rect x="540.4" y="245" width="0.2" height="15.0" fill="rgb(233,166,34)" rx="2" ry="2" />
<text  x="543.38" y="255.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (126 samples, 0.89%)</title><rect x="777.1" y="245" width="10.5" height="15.0" fill="rgb(222,111,26)" rx="2" ry="2" />
<text  x="780.10" y="255.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.01%)</title><rect x="644.8" y="149" width="0.1" height="15.0" fill="rgb(214,101,11)" rx="2" ry="2" />
<text  x="647.78" y="159.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.14%)</title><rect x="525.5" y="261" width="1.7" height="15.0" fill="rgb(238,186,21)" rx="2" ry="2" />
<text  x="528.54" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (25 samples, 0.18%)</title><rect x="624.2" y="197" width="2.1" height="15.0" fill="rgb(246,99,8)" rx="2" ry="2" />
<text  x="627.18" y="207.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (8 samples, 0.06%)</title><rect x="741.1" y="229" width="0.6" height="15.0" fill="rgb(245,148,12)" rx="2" ry="2" />
<text  x="744.08" y="239.5" ></text>
</g>
<g >
<title>generic_file_read_iter (11 samples, 0.08%)</title><rect x="115.5" y="421" width="0.9" height="15.0" fill="rgb(205,60,20)" rx="2" ry="2" />
<text  x="118.48" y="431.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.constprop.0 (2 samples, 0.01%)</title><rect x="986.1" y="469" width="0.1" height="15.0" fill="rgb(240,57,36)" rx="2" ry="2" />
<text  x="989.05" y="479.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (3 samples, 0.02%)</title><rect x="30.9" y="645" width="0.3" height="15.0" fill="rgb(208,20,53)" rx="2" ry="2" />
<text  x="33.93" y="655.5" ></text>
</g>
<g >
<title>__update_idle_core (2 samples, 0.01%)</title><rect x="963.6" y="725" width="0.2" height="15.0" fill="rgb(232,171,7)" rx="2" ry="2" />
<text  x="966.62" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.16%)</title><rect x="546.5" y="261" width="1.9" height="15.0" fill="rgb(218,108,48)" rx="2" ry="2" />
<text  x="549.47" y="271.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (14 samples, 0.10%)</title><rect x="765.0" y="277" width="1.2" height="15.0" fill="rgb(207,54,45)" rx="2" ry="2" />
<text  x="768.01" y="287.5" ></text>
</g>
<g >
<title>net_rx_action (8 samples, 0.06%)</title><rect x="31.2" y="629" width="0.6" height="15.0" fill="rgb(241,46,0)" rx="2" ry="2" />
<text  x="34.18" y="639.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (5 samples, 0.04%)</title><rect x="809.7" y="373" width="0.4" height="15.0" fill="rgb(242,140,13)" rx="2" ry="2" />
<text  x="812.70" y="383.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (37 samples, 0.26%)</title><rect x="495.1" y="661" width="3.1" height="15.0" fill="rgb(234,196,31)" rx="2" ry="2" />
<text  x="498.11" y="671.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (221 samples, 1.56%)</title><rect x="856.7" y="693" width="18.5" height="15.0" fill="rgb(242,58,49)" rx="2" ry="2" />
<text  x="859.73" y="703.5" ></text>
</g>
<g >
<title>update_load_avg (3 samples, 0.02%)</title><rect x="32.8" y="469" width="0.2" height="15.0" fill="rgb(207,28,4)" rx="2" ry="2" />
<text  x="35.76" y="479.5" ></text>
</g>
<g >
<title>__update_idle_core (2 samples, 0.01%)</title><rect x="1179.7" y="661" width="0.1" height="15.0" fill="rgb(222,75,37)" rx="2" ry="2" />
<text  x="1182.66" y="671.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.01%)</title><rect x="688.6" y="213" width="0.1" height="15.0" fill="rgb(234,29,10)" rx="2" ry="2" />
<text  x="691.55" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="1187.0" y="645" width="0.2" height="15.0" fill="rgb(233,80,20)" rx="2" ry="2" />
<text  x="1190.00" y="655.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (664 samples, 4.69%)</title><rect x="1081.9" y="661" width="55.4" height="15.0" fill="rgb(219,67,46)" rx="2" ry="2" />
<text  x="1084.94" y="671.5" >mwait..</text>
</g>
<g >
<title>scheduler_tick (86 samples, 0.61%)</title><rect x="1039.4" y="501" width="7.2" height="15.0" fill="rgb(246,180,30)" rx="2" ry="2" />
<text  x="1042.41" y="511.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.01%)</title><rect x="495.8" y="293" width="0.1" height="15.0" fill="rgb(232,6,6)" rx="2" ry="2" />
<text  x="498.77" y="303.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (2,207 samples, 15.59%)</title><rect x="500.9" y="645" width="184.0" height="15.0" fill="rgb(239,95,34)" rx="2" ry="2" />
<text  x="503.86" y="655.5" >serde_json::ser::to_vec</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (31 samples, 0.22%)</title><rect x="543.1" y="261" width="2.5" height="15.0" fill="rgb(250,47,40)" rx="2" ry="2" />
<text  x="546.05" y="271.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (4 samples, 0.03%)</title><rect x="742.5" y="309" width="0.3" height="15.0" fill="rgb(251,140,28)" rx="2" ry="2" />
<text  x="745.50" y="319.5" ></text>
</g>
<g >
<title>generic_perform_write (35 samples, 0.25%)</title><rect x="495.2" y="389" width="2.9" height="15.0" fill="rgb(241,153,45)" rx="2" ry="2" />
<text  x="498.19" y="399.5" ></text>
</g>
<g >
<title>__netdev_alloc_skb (3 samples, 0.02%)</title><rect x="984.1" y="549" width="0.3" height="15.0" fill="rgb(236,24,22)" rx="2" ry="2" />
<text  x="987.13" y="559.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (8 samples, 0.06%)</title><rect x="688.6" y="277" width="0.6" height="15.0" fill="rgb(228,225,12)" rx="2" ry="2" />
<text  x="691.55" y="287.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (11 samples, 0.08%)</title><rect x="841.8" y="245" width="0.9" height="15.0" fill="rgb(215,156,40)" rx="2" ry="2" />
<text  x="844.80" y="255.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (21 samples, 0.15%)</title><rect x="787.6" y="293" width="1.8" height="15.0" fill="rgb(252,70,13)" rx="2" ry="2" />
<text  x="790.61" y="303.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.02%)</title><rect x="952.7" y="773" width="0.2" height="15.0" fill="rgb(231,17,51)" rx="2" ry="2" />
<text  x="955.70" y="783.5" ></text>
</g>
<g >
<title>timerqueue_add (3 samples, 0.02%)</title><rect x="1047.3" y="549" width="0.2" height="15.0" fill="rgb(237,0,6)" rx="2" ry="2" />
<text  x="1050.25" y="559.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (2 samples, 0.01%)</title><rect x="764.6" y="213" width="0.2" height="15.0" fill="rgb(249,180,10)" rx="2" ry="2" />
<text  x="767.59" y="223.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (14 samples, 0.10%)</title><rect x="544.5" y="213" width="1.1" height="15.0" fill="rgb(231,111,51)" rx="2" ry="2" />
<text  x="547.47" y="223.5" ></text>
</g>
<g >
<title>alx_mask_msix (2 samples, 0.01%)</title><rect x="980.6" y="613" width="0.2" height="15.0" fill="rgb(233,154,45)" rx="2" ry="2" />
<text  x="983.63" y="623.5" ></text>
</g>
<g >
<title>pick_next_task_fair (166 samples, 1.17%)</title><rect x="1165.8" y="677" width="13.9" height="15.0" fill="rgb(243,128,47)" rx="2" ry="2" />
<text  x="1168.82" y="687.5" ></text>
</g>
<g >
<title>remote_function (63 samples, 0.45%)</title><rect x="10.1" y="565" width="5.2" height="15.0" fill="rgb(238,162,10)" rx="2" ry="2" />
<text  x="13.08" y="575.5" ></text>
</g>
<g >
<title>dispatcher (76 samples, 0.54%)</title><rect x="688.3" y="773" width="6.3" height="15.0" fill="rgb(217,177,31)" rx="2" ry="2" />
<text  x="691.30" y="783.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (4 samples, 0.03%)</title><rect x="875.2" y="629" width="0.3" height="15.0" fill="rgb(219,92,14)" rx="2" ry="2" />
<text  x="878.16" y="639.5" ></text>
</g>
<g >
<title>irq_work_tick (3 samples, 0.02%)</title><rect x="1037.5" y="501" width="0.2" height="15.0" fill="rgb(235,90,42)" rx="2" ry="2" />
<text  x="1040.50" y="511.5" ></text>
</g>
<g >
<title>__queue_work (2 samples, 0.01%)</title><rect x="1071.3" y="501" width="0.1" height="15.0" fill="rgb(210,145,27)" rx="2" ry="2" />
<text  x="1074.27" y="511.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::wrapping_sub (3 samples, 0.02%)</title><rect x="603.4" y="149" width="0.3" height="15.0" fill="rgb(212,41,32)" rx="2" ry="2" />
<text  x="606.42" y="159.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="545.8" y="229" width="0.2" height="15.0" fill="rgb(213,1,10)" rx="2" ry="2" />
<text  x="548.80" y="239.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (3 samples, 0.02%)</title><rect x="652.5" y="197" width="0.3" height="15.0" fill="rgb(228,111,48)" rx="2" ry="2" />
<text  x="655.53" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.06%)</title><rect x="508.9" y="261" width="0.7" height="15.0" fill="rgb(205,22,54)" rx="2" ry="2" />
<text  x="511.95" y="271.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (2 samples, 0.01%)</title><rect x="766.2" y="277" width="0.1" height="15.0" fill="rgb(248,51,18)" rx="2" ry="2" />
<text  x="769.18" y="287.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (21 samples, 0.15%)</title><rect x="517.5" y="389" width="1.7" height="15.0" fill="rgb(226,31,21)" rx="2" ry="2" />
<text  x="520.45" y="399.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (4 samples, 0.03%)</title><rect x="70.3" y="837" width="0.3" height="15.0" fill="rgb(238,116,43)" rx="2" ry="2" />
<text  x="73.28" y="847.5" ></text>
</g>
<g >
<title>NaClCondVarBroadcast (196 samples, 1.38%)</title><rect x="192.1" y="757" width="16.3" height="15.0" fill="rgb(234,64,34)" rx="2" ry="2" />
<text  x="195.10" y="767.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (132 samples, 0.93%)</title><rect x="506.3" y="405" width="11.0" height="15.0" fill="rgb(233,225,39)" rx="2" ry="2" />
<text  x="509.28" y="415.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (21 samples, 0.15%)</title><rect x="787.6" y="229" width="1.8" height="15.0" fill="rgb(218,115,48)" rx="2" ry="2" />
<text  x="790.61" y="239.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.01%)</title><rect x="793.4" y="805" width="0.2" height="15.0" fill="rgb(223,126,53)" rx="2" ry="2" />
<text  x="796.44" y="815.5" ></text>
</g>
<g >
<title>mpage_submit_page (12 samples, 0.08%)</title><rect x="976.4" y="597" width="1.0" height="15.0" fill="rgb(205,26,51)" rx="2" ry="2" />
<text  x="979.38" y="607.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (4 samples, 0.03%)</title><rect x="855.6" y="357" width="0.4" height="15.0" fill="rgb(206,91,45)" rx="2" ry="2" />
<text  x="858.64" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_restart (41 samples, 0.29%)</title><rect x="1185.2" y="693" width="3.5" height="15.0" fill="rgb(240,34,8)" rx="2" ry="2" />
<text  x="1188.25" y="703.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (6 samples, 0.04%)</title><rect x="825.2" y="117" width="0.5" height="15.0" fill="rgb(252,190,12)" rx="2" ry="2" />
<text  x="828.21" y="127.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="859.1" y="133" width="0.2" height="15.0" fill="rgb(222,5,35)" rx="2" ry="2" />
<text  x="862.06" y="143.5" ></text>
</g>
<g >
<title>do_idle (336 samples, 2.37%)</title><rect x="41.5" y="725" width="28.0" height="15.0" fill="rgb(225,7,36)" rx="2" ry="2" />
<text  x="44.52" y="735.5" >d..</text>
</g>
<g >
<title>x86_64_start_kernel (345 samples, 2.44%)</title><rect x="41.4" y="821" width="28.8" height="15.0" fill="rgb(209,152,40)" rx="2" ry="2" />
<text  x="44.43" y="831.5" >x8..</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (255 samples, 1.80%)</title><rect x="743.0" y="453" width="21.3" height="15.0" fill="rgb(247,93,45)" rx="2" ry="2" />
<text  x="746.00" y="463.5" >s..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (174 samples, 1.23%)</title><rect x="505.0" y="421" width="14.5" height="15.0" fill="rgb(243,190,17)" rx="2" ry="2" />
<text  x="508.03" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (9 samples, 0.06%)</title><rect x="987.3" y="677" width="0.8" height="15.0" fill="rgb(210,199,41)" rx="2" ry="2" />
<text  x="990.30" y="687.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2,207 samples, 15.59%)</title><rect x="500.9" y="581" width="184.0" height="15.0" fill="rgb(238,17,4)" rx="2" ry="2" />
<text  x="503.86" y="591.5" >&lt;serde_json::ser::Compo..</text>
</g>
<g >
<title>account_process_tick (2 samples, 0.01%)</title><rect x="1036.6" y="501" width="0.1" height="15.0" fill="rgb(214,72,19)" rx="2" ry="2" />
<text  x="1039.58" y="511.5" ></text>
</g>
<g >
<title>kthread (46 samples, 0.33%)</title><rect x="26.8" y="821" width="3.9" height="15.0" fill="rgb(239,179,6)" rx="2" ry="2" />
<text  x="29.84" y="831.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (215 samples, 1.52%)</title><rect x="724.9" y="725" width="17.9" height="15.0" fill="rgb(222,156,8)" rx="2" ry="2" />
<text  x="727.90" y="735.5" ></text>
</g>
<g >
<title>NaClSysRead (17 samples, 0.12%)</title><rect x="115.4" y="789" width="1.4" height="15.0" fill="rgb(215,139,47)" rx="2" ry="2" />
<text  x="118.39" y="799.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (146 samples, 1.03%)</title><rect x="636.3" y="277" width="12.1" height="15.0" fill="rgb(208,112,20)" rx="2" ry="2" />
<text  x="639.27" y="287.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (2 samples, 0.01%)</title><rect x="1176.7" y="629" width="0.2" height="15.0" fill="rgb(224,56,4)" rx="2" ry="2" />
<text  x="1179.74" y="639.5" ></text>
</g>
<g >
<title>try_to_release_page (2 samples, 0.01%)</title><rect x="500.4" y="213" width="0.1" height="15.0" fill="rgb(244,136,43)" rx="2" ry="2" />
<text  x="503.36" y="223.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (76 samples, 0.54%)</title><rect x="688.3" y="517" width="6.3" height="15.0" fill="rgb(239,214,33)" rx="2" ry="2" />
<text  x="691.30" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.03%)</title><rect x="875.2" y="693" width="0.3" height="15.0" fill="rgb(242,92,6)" rx="2" ry="2" />
<text  x="878.16" y="703.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.01%)</title><rect x="541.8" y="293" width="0.2" height="15.0" fill="rgb(253,107,10)" rx="2" ry="2" />
<text  x="544.80" y="303.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.02%)</title><rect x="671.5" y="197" width="0.2" height="15.0" fill="rgb(210,188,1)" rx="2" ry="2" />
<text  x="674.46" y="207.5" ></text>
</g>
<g >
<title>rcu_core (15 samples, 0.11%)</title><rect x="1055.0" y="549" width="1.3" height="15.0" fill="rgb(230,202,33)" rx="2" ry="2" />
<text  x="1058.01" y="559.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (18 samples, 0.13%)</title><rect x="1160.3" y="693" width="1.5" height="15.0" fill="rgb(213,193,2)" rx="2" ry="2" />
<text  x="1163.32" y="703.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.15%)</title><rect x="515.3" y="293" width="1.7" height="15.0" fill="rgb(223,104,38)" rx="2" ry="2" />
<text  x="518.29" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (2 samples, 0.01%)</title><rect x="494.9" y="533" width="0.2" height="15.0" fill="rgb(223,201,49)" rx="2" ry="2" />
<text  x="497.94" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (19 samples, 0.13%)</title><rect x="726.3" y="181" width="1.6" height="15.0" fill="rgb(208,6,38)" rx="2" ry="2" />
<text  x="729.32" y="191.5" ></text>
</g>
<g >
<title>ext4_inode_csum (3 samples, 0.02%)</title><rect x="497.3" y="245" width="0.2" height="15.0" fill="rgb(207,220,49)" rx="2" ry="2" />
<text  x="500.28" y="255.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (557 samples, 3.94%)</title><rect x="809.5" y="469" width="46.5" height="15.0" fill="rgb(218,10,19)" rx="2" ry="2" />
<text  x="812.54" y="479.5" >&lt;&amp;mu..</text>
</g>
<g >
<title>realpath_stk (4 samples, 0.03%)</title><rect x="499.8" y="597" width="0.3" height="15.0" fill="rgb(217,141,43)" rx="2" ry="2" />
<text  x="502.78" y="607.5" ></text>
</g>
<g >
<title>__writeback_single_inode (30 samples, 0.21%)</title><rect x="976.0" y="677" width="2.5" height="15.0" fill="rgb(223,72,54)" rx="2" ry="2" />
<text  x="978.96" y="687.5" ></text>
</g>
<g >
<title>[librustposix.so] (3 samples, 0.02%)</title><rect x="786.2" y="181" width="0.2" height="15.0" fill="rgb(214,91,26)" rx="2" ry="2" />
<text  x="789.19" y="191.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (4 samples, 0.03%)</title><rect x="697.4" y="229" width="0.3" height="15.0" fill="rgb(242,209,2)" rx="2" ry="2" />
<text  x="700.39" y="239.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1,217 samples, 8.60%)</title><rect x="370.9" y="741" width="101.4" height="15.0" fill="rgb(210,106,31)" rx="2" ry="2" />
<text  x="373.87" y="751.5" >__pthread_mu..</text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (21 samples, 0.15%)</title><rect x="591.8" y="149" width="1.8" height="15.0" fill="rgb(230,110,46)" rx="2" ry="2" />
<text  x="594.83" y="159.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (3 samples, 0.02%)</title><rect x="888.9" y="773" width="0.3" height="15.0" fill="rgb(235,75,15)" rx="2" ry="2" />
<text  x="891.91" y="783.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (3 samples, 0.02%)</title><rect x="500.9" y="517" width="0.2" height="15.0" fill="rgb(210,139,44)" rx="2" ry="2" />
<text  x="503.86" y="527.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (13 samples, 0.09%)</title><rect x="876.2" y="821" width="1.1" height="15.0" fill="rgb(224,146,3)" rx="2" ry="2" />
<text  x="879.24" y="831.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (3 samples, 0.02%)</title><rect x="500.9" y="485" width="0.2" height="15.0" fill="rgb(244,188,15)" rx="2" ry="2" />
<text  x="503.86" y="495.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2 samples, 0.01%)</title><rect x="974.7" y="677" width="0.2" height="15.0" fill="rgb(206,206,45)" rx="2" ry="2" />
<text  x="977.71" y="687.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.05%)</title><rect x="542.4" y="261" width="0.6" height="15.0" fill="rgb(241,210,45)" rx="2" ry="2" />
<text  x="545.38" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (61 samples, 0.43%)</title><rect x="571.7" y="165" width="5.1" height="15.0" fill="rgb(243,20,5)" rx="2" ry="2" />
<text  x="574.73" y="175.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (4 samples, 0.03%)</title><rect x="855.6" y="389" width="0.4" height="15.0" fill="rgb(242,105,17)" rx="2" ry="2" />
<text  x="858.64" y="399.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (6 samples, 0.04%)</title><rect x="509.9" y="277" width="0.5" height="15.0" fill="rgb(211,3,48)" rx="2" ry="2" />
<text  x="512.95" y="287.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (15 samples, 0.11%)</title><rect x="541.7" y="309" width="1.3" height="15.0" fill="rgb(224,57,18)" rx="2" ry="2" />
<text  x="544.72" y="319.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (7 samples, 0.05%)</title><rect x="547.8" y="245" width="0.6" height="15.0" fill="rgb(220,58,7)" rx="2" ry="2" />
<text  x="550.80" y="255.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (198 samples, 1.40%)</title><rect x="726.3" y="389" width="16.5" height="15.0" fill="rgb(215,141,25)" rx="2" ry="2" />
<text  x="729.32" y="399.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2 samples, 0.01%)</title><rect x="990.0" y="501" width="0.1" height="15.0" fill="rgb(211,170,29)" rx="2" ry="2" />
<text  x="992.97" y="511.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (301 samples, 2.13%)</title><rect x="764.3" y="757" width="25.1" height="15.0" fill="rgb(222,134,22)" rx="2" ry="2" />
<text  x="767.26" y="767.5" >N..</text>
</g>
<g >
<title>update_blocked_averages (4 samples, 0.03%)</title><rect x="988.9" y="613" width="0.3" height="15.0" fill="rgb(252,87,43)" rx="2" ry="2" />
<text  x="991.89" y="623.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (2 samples, 0.01%)</title><rect x="514.0" y="261" width="0.1" height="15.0" fill="rgb(205,183,21)" rx="2" ry="2" />
<text  x="516.95" y="271.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (24 samples, 0.17%)</title><rect x="574.8" y="149" width="2.0" height="15.0" fill="rgb(250,208,43)" rx="2" ry="2" />
<text  x="577.82" y="159.5" ></text>
</g>
<g >
<title>NaCl_trampoline_code_end (109 samples, 0.77%)</title><rect x="72.0" y="837" width="9.1" height="15.0" fill="rgb(243,16,40)" rx="2" ry="2" />
<text  x="75.04" y="847.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (190 samples, 1.34%)</title><rect x="521.0" y="357" width="15.9" height="15.0" fill="rgb(235,141,22)" rx="2" ry="2" />
<text  x="524.04" y="367.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_struct (28 samples, 0.20%)</title><rect x="546.1" y="341" width="2.3" height="15.0" fill="rgb(239,26,50)" rx="2" ry="2" />
<text  x="549.05" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.13%)</title><rect x="727.9" y="149" width="1.6" height="15.0" fill="rgb(221,3,36)" rx="2" ry="2" />
<text  x="730.91" y="159.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (33 samples, 0.23%)</title><rect x="42.8" y="613" width="2.7" height="15.0" fill="rgb(228,127,30)" rx="2" ry="2" />
<text  x="45.77" y="623.5" ></text>
</g>
<g >
<title>core::mem::uninitialized (37 samples, 0.26%)</title><rect x="649.7" y="229" width="3.1" height="15.0" fill="rgb(227,67,45)" rx="2" ry="2" />
<text  x="652.69" y="239.5" ></text>
</g>
<g >
<title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="494.9" y="485" width="0.2" height="15.0" fill="rgb(247,190,47)" rx="2" ry="2" />
<text  x="497.94" y="495.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (270 samples, 1.91%)</title><rect x="810.1" y="277" width="22.5" height="15.0" fill="rgb(239,71,6)" rx="2" ry="2" />
<text  x="813.12" y="287.5" >&lt;..</text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.02%)</title><rect x="855.3" y="213" width="0.3" height="15.0" fill="rgb(213,229,34)" rx="2" ry="2" />
<text  x="858.31" y="223.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (229 samples, 1.62%)</title><rect x="697.4" y="741" width="19.1" height="15.0" fill="rgb(206,18,45)" rx="2" ry="2" />
<text  x="700.39" y="751.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (40 samples, 0.28%)</title><rect x="1042.2" y="469" width="3.3" height="15.0" fill="rgb(250,145,2)" rx="2" ry="2" />
<text  x="1045.17" y="479.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (20 samples, 0.14%)</title><rect x="968.6" y="645" width="1.7" height="15.0" fill="rgb(246,53,0)" rx="2" ry="2" />
<text  x="971.62" y="655.5" ></text>
</g>
<g >
<title>NaClCondVarBroadcast (35 samples, 0.25%)</title><rect x="174.8" y="773" width="3.0" height="15.0" fill="rgb(220,208,41)" rx="2" ry="2" />
<text  x="177.84" y="783.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (414 samples, 2.93%)</title><rect x="559.1" y="293" width="34.5" height="15.0" fill="rgb(252,129,11)" rx="2" ry="2" />
<text  x="562.06" y="303.5" >se..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (215 samples, 1.52%)</title><rect x="724.9" y="421" width="17.9" height="15.0" fill="rgb(236,51,24)" rx="2" ry="2" />
<text  x="727.90" y="431.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (172 samples, 1.22%)</title><rect x="860.8" y="357" width="14.4" height="15.0" fill="rgb(231,198,35)" rx="2" ry="2" />
<text  x="863.81" y="367.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (3 samples, 0.02%)</title><rect x="764.8" y="309" width="0.2" height="15.0" fill="rgb(235,125,15)" rx="2" ry="2" />
<text  x="767.76" y="319.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (6 samples, 0.04%)</title><rect x="516.5" y="229" width="0.5" height="15.0" fill="rgb(226,12,45)" rx="2" ry="2" />
<text  x="519.54" y="239.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.01%)</title><rect x="1080.7" y="581" width="0.2" height="15.0" fill="rgb(221,55,31)" rx="2" ry="2" />
<text  x="1083.69" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="888.9" y="837" width="0.3" height="15.0" fill="rgb(219,86,54)" rx="2" ry="2" />
<text  x="891.91" y="847.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (129 samples, 0.91%)</title><rect x="582.8" y="213" width="10.8" height="15.0" fill="rgb(245,110,52)" rx="2" ry="2" />
<text  x="585.82" y="223.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (12 samples, 0.08%)</title><rect x="1032.2" y="549" width="1.0" height="15.0" fill="rgb(205,133,50)" rx="2" ry="2" />
<text  x="1035.16" y="559.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.01%)</title><rect x="764.8" y="213" width="0.2" height="15.0" fill="rgb(210,71,27)" rx="2" ry="2" />
<text  x="767.84" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="588.9" y="117" width="0.3" height="15.0" fill="rgb(227,180,53)" rx="2" ry="2" />
<text  x="591.91" y="127.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (7 samples, 0.05%)</title><rect x="725.4" y="181" width="0.6" height="15.0" fill="rgb(235,3,26)" rx="2" ry="2" />
<text  x="728.40" y="191.5" ></text>
</g>
<g >
<title>record_times (2 samples, 0.01%)</title><rect x="1180.9" y="645" width="0.2" height="15.0" fill="rgb(242,94,31)" rx="2" ry="2" />
<text  x="1183.91" y="655.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (31 samples, 0.22%)</title><rect x="543.1" y="245" width="2.5" height="15.0" fill="rgb(216,131,44)" rx="2" ry="2" />
<text  x="546.05" y="255.5" ></text>
</g>
<g >
<title>clockevents_program_event (3 samples, 0.02%)</title><rect x="1188.2" y="629" width="0.2" height="15.0" fill="rgb(229,80,27)" rx="2" ry="2" />
<text  x="1191.17" y="639.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (4 samples, 0.03%)</title><rect x="1141.3" y="645" width="0.3" height="15.0" fill="rgb(213,45,30)" rx="2" ry="2" />
<text  x="1144.31" y="655.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.06%)</title><rect x="626.3" y="181" width="0.7" height="15.0" fill="rgb(242,32,7)" rx="2" ry="2" />
<text  x="629.26" y="191.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.16%)</title><rect x="502.2" y="453" width="1.9" height="15.0" fill="rgb(246,159,51)" rx="2" ry="2" />
<text  x="505.19" y="463.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.01%)</title><rect x="972.2" y="725" width="0.2" height="15.0" fill="rgb(251,212,16)" rx="2" ry="2" />
<text  x="975.21" y="735.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (14 samples, 0.10%)</title><rect x="667.0" y="181" width="1.1" height="15.0" fill="rgb(208,217,6)" rx="2" ry="2" />
<text  x="669.95" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="515.7" y="261" width="0.3" height="15.0" fill="rgb(225,126,28)" rx="2" ry="2" />
<text  x="518.70" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="106.4" y="821" width="0.2" height="15.0" fill="rgb(211,195,44)" rx="2" ry="2" />
<text  x="109.39" y="831.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (114 samples, 0.81%)</title><rect x="597.6" y="229" width="9.5" height="15.0" fill="rgb(224,55,36)" rx="2" ry="2" />
<text  x="600.58" y="239.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.01%)</title><rect x="542.2" y="213" width="0.2" height="15.0" fill="rgb(211,95,15)" rx="2" ry="2" />
<text  x="545.22" y="223.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (3 samples, 0.02%)</title><rect x="836.0" y="117" width="0.2" height="15.0" fill="rgb(211,24,51)" rx="2" ry="2" />
<text  x="838.97" y="127.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (221 samples, 1.56%)</title><rect x="856.7" y="565" width="18.5" height="15.0" fill="rgb(236,20,45)" rx="2" ry="2" />
<text  x="859.73" y="575.5" ></text>
</g>
<g >
<title>cpuidle_not_available (2 samples, 0.01%)</title><rect x="64.8" y="709" width="0.1" height="15.0" fill="rgb(215,175,38)" rx="2" ry="2" />
<text  x="67.78" y="719.5" ></text>
</g>
<g >
<title>NaClSysWrite (257 samples, 1.82%)</title><rect x="742.8" y="805" width="21.5" height="15.0" fill="rgb(205,1,11)" rx="2" ry="2" />
<text  x="745.83" y="815.5" >N..</text>
</g>
<g >
<title>NaClMutexLock (54 samples, 0.38%)</title><rect x="716.5" y="821" width="4.5" height="15.0" fill="rgb(214,218,46)" rx="2" ry="2" />
<text  x="719.48" y="831.5" ></text>
</g>
<g >
<title>cpuidle_reflect (5 samples, 0.04%)</title><rect x="1145.5" y="693" width="0.4" height="15.0" fill="rgb(209,95,11)" rx="2" ry="2" />
<text  x="1148.47" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.13%)</title><rect x="493.4" y="597" width="1.5" height="15.0" fill="rgb(225,101,34)" rx="2" ry="2" />
<text  x="496.44" y="607.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (222 samples, 1.57%)</title><rect x="697.9" y="373" width="18.5" height="15.0" fill="rgb(214,180,19)" rx="2" ry="2" />
<text  x="700.89" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="677.7" y="245" width="0.3" height="15.0" fill="rgb(250,159,39)" rx="2" ry="2" />
<text  x="680.71" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (32 samples, 0.23%)</title><rect x="769.3" y="165" width="2.7" height="15.0" fill="rgb(253,52,38)" rx="2" ry="2" />
<text  x="772.35" y="175.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (4 samples, 0.03%)</title><rect x="601.0" y="165" width="0.3" height="15.0" fill="rgb(225,123,19)" rx="2" ry="2" />
<text  x="604.00" y="175.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (248 samples, 1.75%)</title><rect x="743.6" y="309" width="20.7" height="15.0" fill="rgb(215,159,54)" rx="2" ry="2" />
<text  x="746.58" y="319.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (4 samples, 0.03%)</title><rect x="976.4" y="533" width="0.3" height="15.0" fill="rgb(240,151,10)" rx="2" ry="2" />
<text  x="979.38" y="543.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (5 samples, 0.04%)</title><rect x="809.7" y="405" width="0.4" height="15.0" fill="rgb(223,217,12)" rx="2" ry="2" />
<text  x="812.70" y="415.5" ></text>
</g>
<g >
<title>end_page_writeback (6 samples, 0.04%)</title><rect x="974.4" y="709" width="0.5" height="15.0" fill="rgb(234,29,48)" rx="2" ry="2" />
<text  x="977.38" y="719.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (11 samples, 0.08%)</title><rect x="663.4" y="165" width="0.9" height="15.0" fill="rgb(213,121,27)" rx="2" ry="2" />
<text  x="666.37" y="175.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (30 samples, 0.21%)</title><rect x="980.6" y="645" width="2.5" height="15.0" fill="rgb(232,113,50)" rx="2" ry="2" />
<text  x="983.63" y="655.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.01%)</title><rect x="688.3" y="325" width="0.2" height="15.0" fill="rgb(235,216,16)" rx="2" ry="2" />
<text  x="691.30" y="335.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (255 samples, 1.80%)</title><rect x="743.0" y="661" width="21.3" height="15.0" fill="rgb(253,157,49)" rx="2" ry="2" />
<text  x="746.00" y="671.5" >s..</text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (9 samples, 0.06%)</title><rect x="831.9" y="261" width="0.7" height="15.0" fill="rgb(208,121,30)" rx="2" ry="2" />
<text  x="834.88" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.13%)</title><rect x="726.3" y="165" width="1.6" height="15.0" fill="rgb(212,172,28)" rx="2" ry="2" />
<text  x="729.32" y="175.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (125 samples, 0.88%)</title><rect x="842.7" y="245" width="10.4" height="15.0" fill="rgb(243,206,43)" rx="2" ry="2" />
<text  x="845.72" y="255.5" ></text>
</g>
<g >
<title>cpuidle_not_available (2 samples, 0.01%)</title><rect x="1145.3" y="693" width="0.2" height="15.0" fill="rgb(205,124,16)" rx="2" ry="2" />
<text  x="1148.31" y="703.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::open (14 samples, 0.10%)</title><rect x="498.5" y="629" width="1.2" height="15.0" fill="rgb(224,58,23)" rx="2" ry="2" />
<text  x="501.53" y="639.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (255 samples, 1.80%)</title><rect x="743.0" y="597" width="21.3" height="15.0" fill="rgb(231,132,23)" rx="2" ry="2" />
<text  x="746.00" y="607.5" >&lt;..</text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="486.4" y="725" width="0.1" height="15.0" fill="rgb(213,32,7)" rx="2" ry="2" />
<text  x="489.35" y="735.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (12 samples, 0.08%)</title><rect x="1157.4" y="693" width="1.0" height="15.0" fill="rgb(240,214,24)" rx="2" ry="2" />
<text  x="1160.40" y="703.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (181 samples, 1.28%)</title><rect x="521.8" y="341" width="15.1" height="15.0" fill="rgb(211,148,29)" rx="2" ry="2" />
<text  x="524.79" y="351.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (3 samples, 0.02%)</title><rect x="858.5" y="181" width="0.2" height="15.0" fill="rgb(250,203,9)" rx="2" ry="2" />
<text  x="861.48" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (17 samples, 0.12%)</title><rect x="769.3" y="133" width="1.5" height="15.0" fill="rgb(252,38,1)" rx="2" ry="2" />
<text  x="772.35" y="143.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.01%)</title><rect x="541.0" y="245" width="0.1" height="15.0" fill="rgb(238,16,38)" rx="2" ry="2" />
<text  x="543.97" y="255.5" ></text>
</g>
<g >
<title>update_load_avg (2 samples, 0.01%)</title><rect x="966.5" y="677" width="0.1" height="15.0" fill="rgb(239,222,27)" rx="2" ry="2" />
<text  x="969.46" y="687.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (26 samples, 0.18%)</title><rect x="109.4" y="821" width="2.2" height="15.0" fill="rgb(207,43,14)" rx="2" ry="2" />
<text  x="112.39" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="881.9" y="837" width="0.3" height="15.0" fill="rgb(218,30,30)" rx="2" ry="2" />
<text  x="884.91" y="847.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (3 samples, 0.02%)</title><rect x="512.5" y="293" width="0.2" height="15.0" fill="rgb(242,133,45)" rx="2" ry="2" />
<text  x="515.45" y="303.5" ></text>
</g>
<g >
<title>DynArrayGet (61 samples, 0.43%)</title><rect x="116.8" y="789" width="5.1" height="15.0" fill="rgb(205,190,11)" rx="2" ry="2" />
<text  x="119.81" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (229 samples, 1.62%)</title><rect x="697.4" y="533" width="19.1" height="15.0" fill="rgb(227,125,54)" rx="2" ry="2" />
<text  x="700.39" y="543.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 0.03%)</title><rect x="743.2" y="165" width="0.4" height="15.0" fill="rgb(235,154,27)" rx="2" ry="2" />
<text  x="746.25" y="175.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (3 samples, 0.02%)</title><rect x="496.9" y="341" width="0.2" height="15.0" fill="rgb(218,52,3)" rx="2" ry="2" />
<text  x="499.86" y="351.5" ></text>
</g>
<g >
<title>ovl_open_realfile (6 samples, 0.04%)</title><rect x="498.9" y="357" width="0.5" height="15.0" fill="rgb(221,228,43)" rx="2" ry="2" />
<text  x="501.86" y="367.5" ></text>
</g>
<g >
<title>nf_hook_slow_list (6 samples, 0.04%)</title><rect x="986.5" y="485" width="0.5" height="15.0" fill="rgb(252,112,0)" rx="2" ry="2" />
<text  x="989.47" y="495.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="30.5" y="789" width="0.2" height="15.0" fill="rgb(243,102,4)" rx="2" ry="2" />
<text  x="33.51" y="799.5" ></text>
</g>
<g >
<title>enqueue_timer (2 samples, 0.01%)</title><rect x="962.1" y="757" width="0.2" height="15.0" fill="rgb(225,205,8)" rx="2" ry="2" />
<text  x="965.12" y="767.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (221 samples, 1.56%)</title><rect x="856.7" y="485" width="18.5" height="15.0" fill="rgb(231,46,30)" rx="2" ry="2" />
<text  x="859.73" y="495.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (13 samples, 0.09%)</title><rect x="638.4" y="245" width="1.1" height="15.0" fill="rgb(212,38,8)" rx="2" ry="2" />
<text  x="641.44" y="255.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (51 samples, 0.36%)</title><rect x="689.6" y="245" width="4.2" height="15.0" fill="rgb(239,122,47)" rx="2" ry="2" />
<text  x="692.55" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (11 samples, 0.08%)</title><rect x="880.9" y="837" width="0.9" height="15.0" fill="rgb(233,112,25)" rx="2" ry="2" />
<text  x="883.91" y="847.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (3 samples, 0.02%)</title><rect x="497.3" y="261" width="0.2" height="15.0" fill="rgb(217,6,50)" rx="2" ry="2" />
<text  x="500.28" y="271.5" ></text>
</g>
<g >
<title>vfs_read (12 samples, 0.08%)</title><rect x="115.5" y="533" width="1.0" height="15.0" fill="rgb(221,107,40)" rx="2" ry="2" />
<text  x="118.48" y="543.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (257 samples, 1.82%)</title><rect x="742.8" y="773" width="21.5" height="15.0" fill="rgb(225,202,16)" rx="2" ry="2" />
<text  x="745.83" y="783.5" >N..</text>
</g>
<g >
<title>serde_json::ser::Formatter::end_object_key (4 samples, 0.03%)</title><rect x="519.2" y="405" width="0.3" height="15.0" fill="rgb(242,192,54)" rx="2" ry="2" />
<text  x="522.20" y="415.5" ></text>
</g>
<g >
<title>pagecache_get_page (3 samples, 0.02%)</title><rect x="15.5" y="437" width="0.3" height="15.0" fill="rgb(228,222,17)" rx="2" ry="2" />
<text  x="18.50" y="447.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (4 samples, 0.03%)</title><rect x="688.8" y="181" width="0.3" height="15.0" fill="rgb(228,153,18)" rx="2" ry="2" />
<text  x="691.80" y="191.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (37 samples, 0.26%)</title><rect x="495.1" y="613" width="3.1" height="15.0" fill="rgb(206,134,50)" rx="2" ry="2" />
<text  x="498.11" y="623.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (12 samples, 0.08%)</title><rect x="743.6" y="149" width="1.0" height="15.0" fill="rgb(222,31,33)" rx="2" ry="2" />
<text  x="746.58" y="159.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (4 samples, 0.03%)</title><rect x="497.7" y="373" width="0.3" height="15.0" fill="rgb(215,127,39)" rx="2" ry="2" />
<text  x="500.69" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2,312 samples, 16.34%)</title><rect x="685.5" y="837" width="192.7" height="15.0" fill="rgb(229,22,22)" rx="2" ry="2" />
<text  x="688.46" y="847.5" >[unknown]</text>
</g>
<g >
<title>dequeue_task (47 samples, 0.33%)</title><rect x="963.8" y="725" width="3.9" height="15.0" fill="rgb(232,101,40)" rx="2" ry="2" />
<text  x="966.79" y="735.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (6 samples, 0.04%)</title><rect x="576.3" y="117" width="0.5" height="15.0" fill="rgb(236,228,27)" rx="2" ry="2" />
<text  x="579.32" y="127.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.02%)</title><rect x="986.2" y="453" width="0.3" height="15.0" fill="rgb(225,129,51)" rx="2" ry="2" />
<text  x="989.22" y="463.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (2 samples, 0.01%)</title><rect x="26.4" y="773" width="0.2" height="15.0" fill="rgb(235,16,18)" rx="2" ry="2" />
<text  x="29.43" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (255 samples, 1.80%)</title><rect x="743.0" y="485" width="21.3" height="15.0" fill="rgb(252,89,25)" rx="2" ry="2" />
<text  x="746.00" y="495.5" >c..</text>
</g>
<g >
<title>ext4_block_write_begin (4 samples, 0.03%)</title><rect x="493.5" y="373" width="0.4" height="15.0" fill="rgb(244,74,1)" rx="2" ry="2" />
<text  x="496.52" y="383.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (6 samples, 0.04%)</title><rect x="743.1" y="277" width="0.5" height="15.0" fill="rgb(214,47,7)" rx="2" ry="2" />
<text  x="746.08" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.06%)</title><rect x="830.8" y="85" width="0.7" height="15.0" fill="rgb(249,205,30)" rx="2" ry="2" />
<text  x="833.80" y="95.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (4 samples, 0.03%)</title><rect x="680.3" y="229" width="0.3" height="15.0" fill="rgb(241,189,47)" rx="2" ry="2" />
<text  x="683.30" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="16.1" y="821" width="0.2" height="15.0" fill="rgb(232,15,10)" rx="2" ry="2" />
<text  x="19.09" y="831.5" ></text>
</g>
<g >
<title>ttwu_do_activate (13 samples, 0.09%)</title><rect x="49.4" y="469" width="1.0" height="15.0" fill="rgb(244,177,51)" rx="2" ry="2" />
<text  x="52.36" y="479.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (8 samples, 0.06%)</title><rect x="857.2" y="197" width="0.7" height="15.0" fill="rgb(214,218,37)" rx="2" ry="2" />
<text  x="860.23" y="207.5" ></text>
</g>
<g >
<title>ttwu_do_activate (6 samples, 0.04%)</title><rect x="32.6" y="533" width="0.5" height="15.0" fill="rgb(249,112,10)" rx="2" ry="2" />
<text  x="35.60" y="543.5" ></text>
</g>
<g >
<title>do_open (8 samples, 0.06%)</title><rect x="498.7" y="421" width="0.7" height="15.0" fill="rgb(254,226,40)" rx="2" ry="2" />
<text  x="501.69" y="431.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (35 samples, 0.25%)</title><rect x="495.2" y="437" width="2.9" height="15.0" fill="rgb(210,171,34)" rx="2" ry="2" />
<text  x="498.19" y="447.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 0.11%)</title><rect x="765.0" y="309" width="1.3" height="15.0" fill="rgb(240,159,12)" rx="2" ry="2" />
<text  x="768.01" y="319.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (4 samples, 0.03%)</title><rect x="688.8" y="197" width="0.3" height="15.0" fill="rgb(233,129,52)" rx="2" ry="2" />
<text  x="691.80" y="207.5" ></text>
</g>
<g >
<title>clear_page_dirty_for_io (6 samples, 0.04%)</title><rect x="976.4" y="581" width="0.5" height="15.0" fill="rgb(205,18,15)" rx="2" ry="2" />
<text  x="979.38" y="591.5" ></text>
</g>
<g >
<title>put_prev_task_fair (4 samples, 0.03%)</title><rect x="971.9" y="725" width="0.3" height="15.0" fill="rgb(237,69,51)" rx="2" ry="2" />
<text  x="974.88" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (5 samples, 0.04%)</title><rect x="856.0" y="437" width="0.4" height="15.0" fill="rgb(222,77,14)" rx="2" ry="2" />
<text  x="858.98" y="447.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (76 samples, 0.54%)</title><rect x="688.3" y="693" width="6.3" height="15.0" fill="rgb(248,100,44)" rx="2" ry="2" />
<text  x="691.30" y="703.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.02%)</title><rect x="837.0" y="149" width="0.2" height="15.0" fill="rgb(243,105,11)" rx="2" ry="2" />
<text  x="839.97" y="159.5" ></text>
</g>
<g >
<title>alx_mask_msix (3 samples, 0.02%)</title><rect x="30.9" y="613" width="0.3" height="15.0" fill="rgb(212,127,2)" rx="2" ry="2" />
<text  x="33.93" y="623.5" ></text>
</g>
<g >
<title>all (14,152 samples, 100%)</title><rect x="10.0" y="869" width="1180.0" height="15.0" fill="rgb(210,109,8)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.05%)</title><rect x="743.0" y="341" width="0.6" height="15.0" fill="rgb(226,76,47)" rx="2" ry="2" />
<text  x="746.00" y="351.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (18 samples, 0.13%)</title><rect x="1185.7" y="661" width="1.5" height="15.0" fill="rgb(220,22,50)" rx="2" ry="2" />
<text  x="1188.66" y="671.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (2 samples, 0.01%)</title><rect x="742.7" y="197" width="0.1" height="15.0" fill="rgb(215,77,45)" rx="2" ry="2" />
<text  x="745.66" y="207.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (27 samples, 0.19%)</title><rect x="608.3" y="197" width="2.2" height="15.0" fill="rgb(227,83,43)" rx="2" ry="2" />
<text  x="611.25" y="207.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (2,390 samples, 16.89%)</title><rect x="486.2" y="805" width="199.3" height="15.0" fill="rgb(217,22,25)" rx="2" ry="2" />
<text  x="489.19" y="815.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>ext4_evict_inode (7 samples, 0.05%)</title><rect x="114.8" y="341" width="0.6" height="15.0" fill="rgb(254,50,2)" rx="2" ry="2" />
<text  x="117.81" y="351.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (2 samples, 0.01%)</title><rect x="766.2" y="229" width="0.1" height="15.0" fill="rgb(242,109,39)" rx="2" ry="2" />
<text  x="769.18" y="239.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (76 samples, 0.54%)</title><rect x="688.3" y="709" width="6.3" height="15.0" fill="rgb(229,29,16)" rx="2" ry="2" />
<text  x="691.30" y="719.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="542.2" y="149" width="0.2" height="15.0" fill="rgb(236,196,20)" rx="2" ry="2" />
<text  x="545.22" y="159.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (29 samples, 0.20%)</title><rect x="676.6" y="357" width="2.4" height="15.0" fill="rgb(216,79,22)" rx="2" ry="2" />
<text  x="679.63" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.02%)</title><rect x="519.0" y="293" width="0.2" height="15.0" fill="rgb(239,133,21)" rx="2" ry="2" />
<text  x="521.95" y="303.5" ></text>
</g>
<g >
<title>wb_workfn (39 samples, 0.28%)</title><rect x="975.9" y="773" width="3.2" height="15.0" fill="rgb(221,136,22)" rx="2" ry="2" />
<text  x="978.88" y="783.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (19 samples, 0.13%)</title><rect x="727.9" y="181" width="1.6" height="15.0" fill="rgb(205,24,46)" rx="2" ry="2" />
<text  x="730.91" y="191.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (21 samples, 0.15%)</title><rect x="812.3" y="181" width="1.7" height="15.0" fill="rgb(212,157,2)" rx="2" ry="2" />
<text  x="815.29" y="191.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (5 samples, 0.04%)</title><rect x="536.1" y="197" width="0.4" height="15.0" fill="rgb(244,31,30)" rx="2" ry="2" />
<text  x="539.13" y="207.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (40 samples, 0.28%)</title><rect x="664.8" y="213" width="3.3" height="15.0" fill="rgb(226,190,3)" rx="2" ry="2" />
<text  x="667.79" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (5 samples, 0.04%)</title><rect x="674.5" y="229" width="0.5" height="15.0" fill="rgb(231,128,21)" rx="2" ry="2" />
<text  x="677.54" y="239.5" ></text>
</g>
<g >
<title>update_blocked_averages (7 samples, 0.05%)</title><rect x="67.4" y="581" width="0.6" height="15.0" fill="rgb(220,87,46)" rx="2" ry="2" />
<text  x="70.45" y="591.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (19 samples, 0.13%)</title><rect x="812.5" y="165" width="1.5" height="15.0" fill="rgb(249,34,33)" rx="2" ry="2" />
<text  x="815.45" y="175.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (255 samples, 1.80%)</title><rect x="743.0" y="629" width="21.3" height="15.0" fill="rgb(230,71,34)" rx="2" ry="2" />
<text  x="746.00" y="639.5" >s..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (48 samples, 0.34%)</title><rect x="856.8" y="421" width="4.0" height="15.0" fill="rgb(241,153,54)" rx="2" ry="2" />
<text  x="859.81" y="431.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.01%)</title><rect x="532.0" y="261" width="0.1" height="15.0" fill="rgb(250,146,22)" rx="2" ry="2" />
<text  x="534.96" y="271.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (208 samples, 1.47%)</title><rect x="772.0" y="309" width="17.4" height="15.0" fill="rgb(243,170,48)" rx="2" ry="2" />
<text  x="775.01" y="319.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (30 samples, 0.21%)</title><rect x="853.1" y="229" width="2.5" height="15.0" fill="rgb(233,139,49)" rx="2" ry="2" />
<text  x="856.14" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1145.1" y="677" width="0.1" height="15.0" fill="rgb(226,158,49)" rx="2" ry="2" />
<text  x="1148.06" y="687.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (63 samples, 0.45%)</title><rect x="10.1" y="773" width="5.2" height="15.0" fill="rgb(206,51,54)" rx="2" ry="2" />
<text  x="13.08" y="783.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="549.1" y="213" width="0.2" height="15.0" fill="rgb(214,169,30)" rx="2" ry="2" />
<text  x="552.14" y="223.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (4 samples, 0.03%)</title><rect x="31.4" y="549" width="0.4" height="15.0" fill="rgb(214,68,20)" rx="2" ry="2" />
<text  x="34.43" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (2 samples, 0.01%)</title><rect x="40.5" y="741" width="0.2" height="15.0" fill="rgb(224,141,1)" rx="2" ry="2" />
<text  x="43.52" y="751.5" ></text>
</g>
<g >
<title>open_with_fake_path (5 samples, 0.04%)</title><rect x="498.9" y="341" width="0.5" height="15.0" fill="rgb(244,144,44)" rx="2" ry="2" />
<text  x="501.94" y="351.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (7 samples, 0.05%)</title><rect x="497.1" y="309" width="0.6" height="15.0" fill="rgb(212,102,0)" rx="2" ry="2" />
<text  x="500.11" y="319.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="1017.5" y="725" width="0.2" height="15.0" fill="rgb(220,224,7)" rx="2" ry="2" />
<text  x="1020.49" y="735.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (130 samples, 0.92%)</title><rect x="1069.7" y="549" width="10.8" height="15.0" fill="rgb(247,125,35)" rx="2" ry="2" />
<text  x="1072.68" y="559.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (2 samples, 0.01%)</title><rect x="858.1" y="149" width="0.1" height="15.0" fill="rgb(224,83,41)" rx="2" ry="2" />
<text  x="861.06" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="875.2" y="85" width="0.1" height="15.0" fill="rgb(244,25,38)" rx="2" ry="2" />
<text  x="878.16" y="95.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (3 samples, 0.02%)</title><rect x="875.2" y="293" width="0.2" height="15.0" fill="rgb(242,184,5)" rx="2" ry="2" />
<text  x="878.16" y="303.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (229 samples, 1.62%)</title><rect x="697.4" y="517" width="19.1" height="15.0" fill="rgb(233,145,11)" rx="2" ry="2" />
<text  x="700.39" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="856.1" y="309" width="0.2" height="15.0" fill="rgb(233,129,48)" rx="2" ry="2" />
<text  x="859.14" y="319.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (35 samples, 0.25%)</title><rect x="42.8" y="629" width="2.9" height="15.0" fill="rgb(214,76,39)" rx="2" ry="2" />
<text  x="45.77" y="639.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (229 samples, 1.62%)</title><rect x="697.4" y="677" width="19.1" height="15.0" fill="rgb(247,10,50)" rx="2" ry="2" />
<text  x="700.39" y="687.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (4 samples, 0.03%)</title><rect x="496.4" y="325" width="0.3" height="15.0" fill="rgb(253,146,45)" rx="2" ry="2" />
<text  x="499.36" y="335.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (2 samples, 0.01%)</title><rect x="541.3" y="293" width="0.2" height="15.0" fill="rgb(252,215,39)" rx="2" ry="2" />
<text  x="544.30" y="303.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (7 samples, 0.05%)</title><rect x="1044.9" y="437" width="0.6" height="15.0" fill="rgb(243,28,7)" rx="2" ry="2" />
<text  x="1047.92" y="447.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (67 samples, 0.47%)</title><rect x="642.9" y="245" width="5.5" height="15.0" fill="rgb(212,50,14)" rx="2" ry="2" />
<text  x="645.86" y="255.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (255 samples, 1.80%)</title><rect x="743.0" y="469" width="21.3" height="15.0" fill="rgb(231,105,13)" rx="2" ry="2" />
<text  x="746.00" y="479.5" >s..</text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (2 samples, 0.01%)</title><rect x="764.3" y="245" width="0.2" height="15.0" fill="rgb(251,98,44)" rx="2" ry="2" />
<text  x="767.34" y="255.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.08%)</title><rect x="661.8" y="181" width="1.0" height="15.0" fill="rgb(219,17,48)" rx="2" ry="2" />
<text  x="664.78" y="191.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (8 samples, 0.06%)</title><rect x="647.7" y="165" width="0.7" height="15.0" fill="rgb(250,176,44)" rx="2" ry="2" />
<text  x="650.69" y="175.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (215 samples, 1.52%)</title><rect x="724.9" y="693" width="17.9" height="15.0" fill="rgb(228,202,8)" rx="2" ry="2" />
<text  x="727.90" y="703.5" ></text>
</g>
<g >
<title>__remove_hrtimer (14 samples, 0.10%)</title><rect x="1185.8" y="645" width="1.2" height="15.0" fill="rgb(243,148,15)" rx="2" ry="2" />
<text  x="1188.83" y="655.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.04%)</title><rect x="870.4" y="293" width="0.4" height="15.0" fill="rgb(249,220,16)" rx="2" ry="2" />
<text  x="873.40" y="303.5" ></text>
</g>
<g >
<title>ktime_get (3 samples, 0.02%)</title><rect x="1052.6" y="597" width="0.2" height="15.0" fill="rgb(236,209,37)" rx="2" ry="2" />
<text  x="1055.59" y="607.5" ></text>
</g>
<g >
<title>do_filp_open (13 samples, 0.09%)</title><rect x="498.6" y="453" width="1.1" height="15.0" fill="rgb(245,104,33)" rx="2" ry="2" />
<text  x="501.61" y="463.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (11 samples, 0.08%)</title><rect x="824.8" y="133" width="0.9" height="15.0" fill="rgb(227,115,35)" rx="2" ry="2" />
<text  x="827.79" y="143.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.01%)</title><rect x="62.0" y="661" width="0.2" height="15.0" fill="rgb(220,18,29)" rx="2" ry="2" />
<text  x="65.03" y="671.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.01%)</title><rect x="726.0" y="165" width="0.2" height="15.0" fill="rgb(224,227,50)" rx="2" ry="2" />
<text  x="728.99" y="175.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (3 samples, 0.02%)</title><rect x="63.7" y="645" width="0.2" height="15.0" fill="rgb(253,130,18)" rx="2" ry="2" />
<text  x="66.70" y="655.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (48 samples, 0.34%)</title><rect x="1152.6" y="661" width="4.0" height="15.0" fill="rgb(215,113,40)" rx="2" ry="2" />
<text  x="1155.65" y="671.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.08%)</title><rect x="837.0" y="197" width="0.9" height="15.0" fill="rgb(232,73,52)" rx="2" ry="2" />
<text  x="839.97" y="207.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (3 samples, 0.02%)</title><rect x="44.7" y="437" width="0.2" height="15.0" fill="rgb(249,20,40)" rx="2" ry="2" />
<text  x="47.69" y="447.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (10 samples, 0.07%)</title><rect x="693.8" y="261" width="0.8" height="15.0" fill="rgb(223,60,40)" rx="2" ry="2" />
<text  x="696.80" y="271.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (8 samples, 0.06%)</title><rect x="32.5" y="613" width="0.7" height="15.0" fill="rgb(231,17,27)" rx="2" ry="2" />
<text  x="35.51" y="623.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (4 samples, 0.03%)</title><rect x="952.2" y="773" width="0.3" height="15.0" fill="rgb(246,20,21)" rx="2" ry="2" />
<text  x="955.20" y="783.5" ></text>
</g>
<g >
<title>lind_open (7 samples, 0.05%)</title><rect x="114.8" y="757" width="0.6" height="15.0" fill="rgb(216,210,18)" rx="2" ry="2" />
<text  x="117.81" y="767.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (8 samples, 0.06%)</title><rect x="741.7" y="245" width="0.7" height="15.0" fill="rgb(231,135,35)" rx="2" ry="2" />
<text  x="744.75" y="255.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (17 samples, 0.12%)</title><rect x="670.0" y="197" width="1.5" height="15.0" fill="rgb(242,205,7)" rx="2" ry="2" />
<text  x="673.04" y="207.5" ></text>
</g>
<g >
<title>alx_refill_rx_ring (3 samples, 0.02%)</title><rect x="984.1" y="565" width="0.3" height="15.0" fill="rgb(217,203,16)" rx="2" ry="2" />
<text  x="987.13" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 0.13%)</title><rect x="727.9" y="197" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="730.91" y="207.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (30 samples, 0.21%)</title><rect x="976.0" y="693" width="2.5" height="15.0" fill="rgb(212,53,7)" rx="2" ry="2" />
<text  x="978.96" y="703.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (8 samples, 0.06%)</title><rect x="829.5" y="117" width="0.6" height="15.0" fill="rgb(237,67,11)" rx="2" ry="2" />
<text  x="832.46" y="127.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (126 samples, 0.89%)</title><rect x="777.1" y="213" width="10.5" height="15.0" fill="rgb(232,171,52)" rx="2" ry="2" />
<text  x="780.10" y="223.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.01%)</title><rect x="856.9" y="261" width="0.2" height="15.0" fill="rgb(233,97,3)" rx="2" ry="2" />
<text  x="859.90" y="271.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (23 samples, 0.16%)</title><rect x="862.1" y="245" width="2.0" height="15.0" fill="rgb(215,84,12)" rx="2" ry="2" />
<text  x="865.15" y="255.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_object_value (5 samples, 0.04%)</title><rect x="682.1" y="357" width="0.4" height="15.0" fill="rgb(206,87,29)" rx="2" ry="2" />
<text  x="685.13" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="494.9" y="613" width="0.2" height="15.0" fill="rgb(210,33,18)" rx="2" ry="2" />
<text  x="497.94" y="623.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.04%)</title><rect x="532.8" y="293" width="0.4" height="15.0" fill="rgb(219,34,25)" rx="2" ry="2" />
<text  x="535.80" y="303.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (557 samples, 3.94%)</title><rect x="809.5" y="677" width="46.5" height="15.0" fill="rgb(233,30,11)" rx="2" ry="2" />
<text  x="812.54" y="687.5" >&lt;ser..</text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (24 samples, 0.17%)</title><rect x="711.0" y="261" width="2.0" height="15.0" fill="rgb(211,174,10)" rx="2" ry="2" />
<text  x="713.98" y="271.5" ></text>
</g>
<g >
<title>wake_up_process (2 samples, 0.01%)</title><rect x="975.6" y="693" width="0.2" height="15.0" fill="rgb(240,177,4)" rx="2" ry="2" />
<text  x="978.63" y="703.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="532.1" y="277" width="0.2" height="15.0" fill="rgb(207,37,7)" rx="2" ry="2" />
<text  x="535.13" y="287.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (103 samples, 0.73%)</title><rect x="1167.7" y="613" width="8.5" height="15.0" fill="rgb(226,73,24)" rx="2" ry="2" />
<text  x="1170.65" y="623.5" ></text>
</g>
<g >
<title>record__pushfn (8 samples, 0.06%)</title><rect x="15.3" y="741" width="0.7" height="15.0" fill="rgb(253,205,40)" rx="2" ry="2" />
<text  x="18.34" y="751.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (213 samples, 1.51%)</title><rect x="837.9" y="373" width="17.7" height="15.0" fill="rgb(205,85,53)" rx="2" ry="2" />
<text  x="840.88" y="383.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.18%)</title><rect x="530.5" y="293" width="2.2" height="15.0" fill="rgb(229,126,35)" rx="2" ry="2" />
<text  x="533.54" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.11%)</title><rect x="652.9" y="197" width="1.3" height="15.0" fill="rgb(234,216,11)" rx="2" ry="2" />
<text  x="655.86" y="207.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="1180.9" y="629" width="0.2" height="15.0" fill="rgb(254,40,39)" rx="2" ry="2" />
<text  x="1183.91" y="639.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2 samples, 0.01%)</title><rect x="32.8" y="453" width="0.1" height="15.0" fill="rgb(244,207,7)" rx="2" ry="2" />
<text  x="35.76" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (37 samples, 0.26%)</title><rect x="987.2" y="725" width="3.1" height="15.0" fill="rgb(229,214,13)" rx="2" ry="2" />
<text  x="990.22" y="735.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (2 samples, 0.01%)</title><rect x="496.4" y="293" width="0.2" height="15.0" fill="rgb(248,204,27)" rx="2" ry="2" />
<text  x="499.44" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (21 samples, 0.15%)</title><rect x="630.7" y="133" width="1.7" height="15.0" fill="rgb(251,79,48)" rx="2" ry="2" />
<text  x="633.68" y="143.5" ></text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.01%)</title><rect x="116.6" y="629" width="0.1" height="15.0" fill="rgb(242,34,49)" rx="2" ry="2" />
<text  x="119.56" y="639.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (5 samples, 0.04%)</title><rect x="842.3" y="229" width="0.4" height="15.0" fill="rgb(239,186,13)" rx="2" ry="2" />
<text  x="845.30" y="239.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8 samples, 0.06%)</title><rect x="31.2" y="693" width="0.6" height="15.0" fill="rgb(237,0,14)" rx="2" ry="2" />
<text  x="34.18" y="703.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (11 samples, 0.08%)</title><rect x="115.5" y="405" width="0.9" height="15.0" fill="rgb(224,126,41)" rx="2" ry="2" />
<text  x="118.48" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (88 samples, 0.62%)</title><rect x="842.7" y="229" width="7.4" height="15.0" fill="rgb(217,178,25)" rx="2" ry="2" />
<text  x="845.72" y="239.5" ></text>
</g>
<g >
<title>enqueue_timer (4 samples, 0.03%)</title><rect x="961.5" y="741" width="0.3" height="15.0" fill="rgb(228,26,29)" rx="2" ry="2" />
<text  x="964.45" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.02%)</title><rect x="542.4" y="213" width="0.2" height="15.0" fill="rgb(230,15,5)" rx="2" ry="2" />
<text  x="545.38" y="223.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (8 samples, 0.06%)</title><rect x="741.1" y="293" width="0.6" height="15.0" fill="rgb(221,51,22)" rx="2" ry="2" />
<text  x="744.08" y="303.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (155 samples, 1.10%)</title><rect x="842.7" y="309" width="12.9" height="15.0" fill="rgb(209,122,42)" rx="2" ry="2" />
<text  x="845.72" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (3 samples, 0.02%)</title><rect x="1031.5" y="581" width="0.2" height="15.0" fill="rgb(209,226,18)" rx="2" ry="2" />
<text  x="1034.49" y="591.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="666.8" y="181" width="0.2" height="15.0" fill="rgb(238,64,52)" rx="2" ry="2" />
<text  x="669.79" y="191.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.01%)</title><rect x="491.0" y="725" width="0.2" height="15.0" fill="rgb(249,78,22)" rx="2" ry="2" />
<text  x="494.02" y="735.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (8 samples, 0.06%)</title><rect x="741.7" y="213" width="0.7" height="15.0" fill="rgb(219,91,10)" rx="2" ry="2" />
<text  x="744.75" y="223.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (7 samples, 0.05%)</title><rect x="114.8" y="693" width="0.6" height="15.0" fill="rgb(214,221,38)" rx="2" ry="2" />
<text  x="117.81" y="703.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (3 samples, 0.02%)</title><rect x="69.3" y="677" width="0.2" height="15.0" fill="rgb(235,10,21)" rx="2" ry="2" />
<text  x="72.28" y="687.5" ></text>
</g>
<g >
<title>cpumask_next_and (2 samples, 0.01%)</title><rect x="47.4" y="517" width="0.1" height="15.0" fill="rgb(220,203,10)" rx="2" ry="2" />
<text  x="50.35" y="527.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (126 samples, 0.89%)</title><rect x="777.1" y="293" width="10.5" height="15.0" fill="rgb(243,100,42)" rx="2" ry="2" />
<text  x="780.10" y="303.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.01%)</title><rect x="812.1" y="69" width="0.2" height="15.0" fill="rgb(241,132,8)" rx="2" ry="2" />
<text  x="815.12" y="79.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.15%)</title><rect x="677.2" y="293" width="1.8" height="15.0" fill="rgb(239,139,40)" rx="2" ry="2" />
<text  x="680.21" y="303.5" ></text>
</g>
<g >
<title>rcu_gp_fqs_loop (31 samples, 0.22%)</title><rect x="27.3" y="789" width="2.6" height="15.0" fill="rgb(217,68,50)" rx="2" ry="2" />
<text  x="30.34" y="799.5" ></text>
</g>
<g >
<title>napi_poll (47 samples, 0.33%)</title><rect x="983.3" y="613" width="3.9" height="15.0" fill="rgb(209,196,4)" rx="2" ry="2" />
<text  x="986.30" y="623.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (4 samples, 0.03%)</title><rect x="534.0" y="245" width="0.3" height="15.0" fill="rgb(228,166,47)" rx="2" ry="2" />
<text  x="536.96" y="255.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (7 samples, 0.05%)</title><rect x="518.0" y="325" width="0.6" height="15.0" fill="rgb(227,198,11)" rx="2" ry="2" />
<text  x="521.04" y="335.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (3 samples, 0.02%)</title><rect x="534.0" y="229" width="0.3" height="15.0" fill="rgb(242,76,43)" rx="2" ry="2" />
<text  x="537.05" y="239.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (62 samples, 0.44%)</title><rect x="332.8" y="741" width="5.2" height="15.0" fill="rgb(219,108,39)" rx="2" ry="2" />
<text  x="335.85" y="751.5" ></text>
</g>
<g >
<title>menu_reflect (4 samples, 0.03%)</title><rect x="1157.0" y="693" width="0.3" height="15.0" fill="rgb(233,156,37)" rx="2" ry="2" />
<text  x="1159.98" y="703.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (221 samples, 1.56%)</title><rect x="856.7" y="725" width="18.5" height="15.0" fill="rgb(211,120,5)" rx="2" ry="2" />
<text  x="859.73" y="735.5" ></text>
</g>
<g >
<title>&lt;u32 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (8 samples, 0.06%)</title><rect x="741.1" y="245" width="0.6" height="15.0" fill="rgb(230,200,21)" rx="2" ry="2" />
<text  x="744.08" y="255.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (2,522 samples, 17.82%)</title><rect x="979.7" y="837" width="210.3" height="15.0" fill="rgb(219,49,46)" rx="2" ry="2" />
<text  x="982.71" y="847.5" >secondary_startup_64_no_ver..</text>
</g>
<g >
<title>_find_next_bit.constprop.0 (4 samples, 0.03%)</title><rect x="1070.4" y="517" width="0.4" height="15.0" fill="rgb(210,56,18)" rx="2" ry="2" />
<text  x="1073.43" y="527.5" ></text>
</g>
<g >
<title>ext4_file_open (2 samples, 0.01%)</title><rect x="499.1" y="309" width="0.2" height="15.0" fill="rgb(252,20,35)" rx="2" ry="2" />
<text  x="502.11" y="319.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.04%)</title><rect x="856.0" y="693" width="0.4" height="15.0" fill="rgb(230,109,54)" rx="2" ry="2" />
<text  x="858.98" y="703.5" ></text>
</g>
<g >
<title>run_rebalance_domains (160 samples, 1.13%)</title><rect x="1056.3" y="565" width="13.4" height="15.0" fill="rgb(227,225,2)" rx="2" ry="2" />
<text  x="1059.34" y="575.5" ></text>
</g>
<g >
<title>record_times (3 samples, 0.02%)</title><rect x="1078.7" y="405" width="0.2" height="15.0" fill="rgb(210,224,54)" rx="2" ry="2" />
<text  x="1081.69" y="415.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (2 samples, 0.01%)</title><rect x="497.5" y="277" width="0.2" height="15.0" fill="rgb(236,11,35)" rx="2" ry="2" />
<text  x="500.53" y="287.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (53 samples, 0.37%)</title><rect x="46.4" y="613" width="4.4" height="15.0" fill="rgb(236,138,45)" rx="2" ry="2" />
<text  x="49.35" y="623.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.01%)</title><rect x="849.9" y="213" width="0.2" height="15.0" fill="rgb(251,144,40)" rx="2" ry="2" />
<text  x="852.89" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.03%)</title><rect x="661.5" y="181" width="0.3" height="15.0" fill="rgb(229,104,19)" rx="2" ry="2" />
<text  x="664.45" y="191.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (4 samples, 0.03%)</title><rect x="1018.5" y="757" width="0.3" height="15.0" fill="rgb(217,64,49)" rx="2" ry="2" />
<text  x="1021.49" y="767.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (76 samples, 0.54%)</title><rect x="688.3" y="725" width="6.3" height="15.0" fill="rgb(225,34,40)" rx="2" ry="2" />
<text  x="691.30" y="735.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3 samples, 0.02%)</title><rect x="31.8" y="645" width="0.3" height="15.0" fill="rgb(218,98,0)" rx="2" ry="2" />
<text  x="34.85" y="655.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (3 samples, 0.02%)</title><rect x="807.2" y="821" width="0.3" height="15.0" fill="rgb(239,24,40)" rx="2" ry="2" />
<text  x="810.20" y="831.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="791.5" y="805" width="0.2" height="15.0" fill="rgb(222,192,28)" rx="2" ry="2" />
<text  x="794.52" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (22 samples, 0.16%)</title><rect x="525.5" y="277" width="1.8" height="15.0" fill="rgb(239,23,13)" rx="2" ry="2" />
<text  x="528.46" y="287.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (221 samples, 1.56%)</title><rect x="856.7" y="469" width="18.5" height="15.0" fill="rgb(234,190,38)" rx="2" ry="2" />
<text  x="859.73" y="479.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (2,390 samples, 16.89%)</title><rect x="486.2" y="773" width="199.3" height="15.0" fill="rgb(219,142,16)" rx="2" ry="2" />
<text  x="489.19" y="783.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (5 samples, 0.04%)</title><rect x="856.0" y="613" width="0.4" height="15.0" fill="rgb(247,122,52)" rx="2" ry="2" />
<text  x="858.98" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (37 samples, 0.26%)</title><rect x="846.4" y="197" width="3.1" height="15.0" fill="rgb(224,133,51)" rx="2" ry="2" />
<text  x="849.39" y="207.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.01%)</title><rect x="809.7" y="293" width="0.2" height="15.0" fill="rgb(227,205,4)" rx="2" ry="2" />
<text  x="812.70" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.01%)</title><rect x="844.9" y="197" width="0.2" height="15.0" fill="rgb(237,41,16)" rx="2" ry="2" />
<text  x="847.89" y="207.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (29 samples, 0.20%)</title><rect x="676.6" y="325" width="2.4" height="15.0" fill="rgb(233,33,45)" rx="2" ry="2" />
<text  x="679.63" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.01%)</title><rect x="542.8" y="181" width="0.2" height="15.0" fill="rgb(242,40,22)" rx="2" ry="2" />
<text  x="545.80" y="191.5" ></text>
</g>
<g >
<title>cpuidle_select (133 samples, 0.94%)</title><rect x="1145.9" y="693" width="11.1" height="15.0" fill="rgb(216,32,42)" rx="2" ry="2" />
<text  x="1148.89" y="703.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (255 samples, 1.80%)</title><rect x="743.0" y="645" width="21.3" height="15.0" fill="rgb(246,143,28)" rx="2" ry="2" />
<text  x="746.00" y="655.5" >s..</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.01%)</title><rect x="857.1" y="293" width="0.1" height="15.0" fill="rgb(208,147,34)" rx="2" ry="2" />
<text  x="860.06" y="303.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (155 samples, 1.10%)</title><rect x="842.7" y="293" width="12.9" height="15.0" fill="rgb(254,92,5)" rx="2" ry="2" />
<text  x="845.72" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (28 samples, 0.20%)</title><rect x="950.2" y="821" width="2.3" height="15.0" fill="rgb(221,178,54)" rx="2" ry="2" />
<text  x="953.20" y="831.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (4 samples, 0.03%)</title><rect x="742.5" y="293" width="0.3" height="15.0" fill="rgb(238,199,41)" rx="2" ry="2" />
<text  x="745.50" y="303.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (19 samples, 0.13%)</title><rect x="726.3" y="229" width="1.6" height="15.0" fill="rgb(224,226,23)" rx="2" ry="2" />
<text  x="729.32" y="239.5" ></text>
</g>
<g >
<title>start_kernel (345 samples, 2.44%)</title><rect x="41.4" y="789" width="28.8" height="15.0" fill="rgb(238,188,14)" rx="2" ry="2" />
<text  x="44.43" y="799.5" >st..</text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.01%)</title><rect x="989.1" y="597" width="0.1" height="15.0" fill="rgb(214,101,35)" rx="2" ry="2" />
<text  x="992.05" y="607.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (20 samples, 0.14%)</title><rect x="832.6" y="165" width="1.7" height="15.0" fill="rgb(206,172,27)" rx="2" ry="2" />
<text  x="835.63" y="175.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8_unchecked (2 samples, 0.01%)</title><rect x="649.4" y="213" width="0.2" height="15.0" fill="rgb(248,60,31)" rx="2" ry="2" />
<text  x="652.44" y="223.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.01%)</title><rect x="540.2" y="293" width="0.2" height="15.0" fill="rgb(235,219,50)" rx="2" ry="2" />
<text  x="543.22" y="303.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (5 samples, 0.04%)</title><rect x="856.8" y="357" width="0.4" height="15.0" fill="rgb(240,48,2)" rx="2" ry="2" />
<text  x="859.81" y="367.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.04%)</title><rect x="856.0" y="565" width="0.4" height="15.0" fill="rgb(239,114,44)" rx="2" ry="2" />
<text  x="858.98" y="575.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (237 samples, 1.67%)</title><rect x="42.4" y="677" width="19.8" height="15.0" fill="rgb(223,210,22)" rx="2" ry="2" />
<text  x="45.43" y="687.5" ></text>
</g>
<g >
<title>iput.part.0 (7 samples, 0.05%)</title><rect x="114.8" y="549" width="0.6" height="15.0" fill="rgb(235,9,25)" rx="2" ry="2" />
<text  x="117.81" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (5 samples, 0.04%)</title><rect x="544.0" y="149" width="0.4" height="15.0" fill="rgb(239,29,34)" rx="2" ry="2" />
<text  x="546.97" y="159.5" ></text>
</g>
<g >
<title>napi_complete_done (16 samples, 0.11%)</title><rect x="985.8" y="581" width="1.3" height="15.0" fill="rgb(239,104,51)" rx="2" ry="2" />
<text  x="988.80" y="591.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (76 samples, 0.54%)</title><rect x="688.3" y="501" width="6.3" height="15.0" fill="rgb(208,63,41)" rx="2" ry="2" />
<text  x="691.30" y="511.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 0.13%)</title><rect x="764.8" y="341" width="1.5" height="15.0" fill="rgb(220,62,8)" rx="2" ry="2" />
<text  x="767.76" y="351.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (9 samples, 0.06%)</title><rect x="688.5" y="373" width="0.7" height="15.0" fill="rgb(249,27,25)" rx="2" ry="2" />
<text  x="691.47" y="383.5" ></text>
</g>
<g >
<title>path_openat (3 samples, 0.02%)</title><rect x="950.9" y="757" width="0.3" height="15.0" fill="rgb(240,225,44)" rx="2" ry="2" />
<text  x="953.95" y="767.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.11%)</title><rect x="502.5" y="437" width="1.3" height="15.0" fill="rgb(217,82,50)" rx="2" ry="2" />
<text  x="505.53" y="447.5" ></text>
</g>
<g >
<title>do_idle (128 samples, 0.90%)</title><rect x="30.7" y="789" width="10.7" height="15.0" fill="rgb(213,203,10)" rx="2" ry="2" />
<text  x="33.68" y="799.5" ></text>
</g>
<g >
<title>dispatcher (255 samples, 1.80%)</title><rect x="743.0" y="741" width="21.3" height="15.0" fill="rgb(225,139,3)" rx="2" ry="2" />
<text  x="746.00" y="751.5" >d..</text>
</g>
<g >
<title>call_timer_fn (11 samples, 0.08%)</title><rect x="989.3" y="597" width="0.9" height="15.0" fill="rgb(245,120,8)" rx="2" ry="2" />
<text  x="992.30" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.11%)</title><rect x="546.5" y="245" width="1.3" height="15.0" fill="rgb(215,176,51)" rx="2" ry="2" />
<text  x="549.47" y="255.5" ></text>
</g>
<g >
<title>do_filp_open (3 samples, 0.02%)</title><rect x="950.9" y="773" width="0.3" height="15.0" fill="rgb(238,192,11)" rx="2" ry="2" />
<text  x="953.95" y="783.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="875.2" y="101" width="0.1" height="15.0" fill="rgb(247,35,48)" rx="2" ry="2" />
<text  x="878.16" y="111.5" ></text>
</g>
<g >
<title>__libc_close (2 samples, 0.01%)</title><rect x="494.9" y="469" width="0.2" height="15.0" fill="rgb(240,229,26)" rx="2" ry="2" />
<text  x="497.94" y="479.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.01%)</title><rect x="1065.8" y="469" width="0.2" height="15.0" fill="rgb(232,5,48)" rx="2" ry="2" />
<text  x="1068.85" y="479.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (2 samples, 0.01%)</title><rect x="951.0" y="741" width="0.2" height="15.0" fill="rgb(222,63,23)" rx="2" ry="2" />
<text  x="954.03" y="751.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="789.0" y="181" width="0.2" height="15.0" fill="rgb(240,56,0)" rx="2" ry="2" />
<text  x="792.02" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (9 samples, 0.06%)</title><rect x="631.5" y="117" width="0.8" height="15.0" fill="rgb(206,183,19)" rx="2" ry="2" />
<text  x="634.52" y="127.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (2 samples, 0.01%)</title><rect x="973.9" y="677" width="0.1" height="15.0" fill="rgb(243,58,24)" rx="2" ry="2" />
<text  x="976.88" y="687.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (229 samples, 1.62%)</title><rect x="697.4" y="437" width="19.1" height="15.0" fill="rgb(210,36,28)" rx="2" ry="2" />
<text  x="700.39" y="447.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (4 samples, 0.03%)</title><rect x="1071.3" y="517" width="0.3" height="15.0" fill="rgb(232,3,8)" rx="2" ry="2" />
<text  x="1074.27" y="527.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (76 samples, 0.54%)</title><rect x="688.3" y="549" width="6.3" height="15.0" fill="rgb(218,228,41)" rx="2" ry="2" />
<text  x="691.30" y="559.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (65 samples, 0.46%)</title><rect x="689.2" y="341" width="5.4" height="15.0" fill="rgb(213,167,2)" rx="2" ry="2" />
<text  x="692.22" y="351.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (3 samples, 0.02%)</title><rect x="809.9" y="309" width="0.2" height="15.0" fill="rgb(252,27,49)" rx="2" ry="2" />
<text  x="812.87" y="319.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (23 samples, 0.16%)</title><rect x="988.3" y="661" width="1.9" height="15.0" fill="rgb(211,38,7)" rx="2" ry="2" />
<text  x="991.30" y="671.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.01%)</title><rect x="674.1" y="229" width="0.2" height="15.0" fill="rgb(253,26,40)" rx="2" ry="2" />
<text  x="677.13" y="239.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (15 samples, 0.11%)</title><rect x="869.2" y="245" width="1.2" height="15.0" fill="rgb(229,132,22)" rx="2" ry="2" />
<text  x="872.15" y="255.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (3 samples, 0.02%)</title><rect x="493.9" y="341" width="0.2" height="15.0" fill="rgb(213,8,14)" rx="2" ry="2" />
<text  x="496.86" y="351.5" ></text>
</g>
<g >
<title>invoke_rcu_core (5 samples, 0.04%)</title><rect x="1037.1" y="501" width="0.4" height="15.0" fill="rgb(251,7,15)" rx="2" ry="2" />
<text  x="1040.08" y="511.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (12 samples, 0.08%)</title><rect x="743.6" y="101" width="1.0" height="15.0" fill="rgb(226,193,16)" rx="2" ry="2" />
<text  x="746.58" y="111.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.05%)</title><rect x="545.1" y="181" width="0.5" height="15.0" fill="rgb(227,2,6)" rx="2" ry="2" />
<text  x="548.05" y="191.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (3 samples, 0.02%)</title><rect x="860.2" y="165" width="0.3" height="15.0" fill="rgb(219,75,27)" rx="2" ry="2" />
<text  x="863.23" y="175.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (28 samples, 0.20%)</title><rect x="534.5" y="277" width="2.4" height="15.0" fill="rgb(216,161,18)" rx="2" ry="2" />
<text  x="537.55" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="849.6" y="197" width="0.3" height="15.0" fill="rgb(224,149,2)" rx="2" ry="2" />
<text  x="852.64" y="207.5" ></text>
</g>
<g >
<title>call_timer_fn (8 samples, 0.06%)</title><rect x="32.5" y="597" width="0.7" height="15.0" fill="rgb(218,81,48)" rx="2" ry="2" />
<text  x="35.51" y="607.5" ></text>
</g>
<g >
<title>tick_irq_enter (11 samples, 0.08%)</title><rect x="1052.4" y="613" width="0.9" height="15.0" fill="rgb(206,133,42)" rx="2" ry="2" />
<text  x="1055.42" y="623.5" ></text>
</g>
<g >
<title>irq_exit_rcu (48 samples, 0.34%)</title><rect x="983.2" y="693" width="4.0" height="15.0" fill="rgb(239,21,45)" rx="2" ry="2" />
<text  x="986.22" y="703.5" ></text>
</g>
<g >
<title>x86_pmu_enable (7 samples, 0.05%)</title><rect x="1044.9" y="453" width="0.6" height="15.0" fill="rgb(214,175,20)" rx="2" ry="2" />
<text  x="1047.92" y="463.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (3 samples, 0.02%)</title><rect x="764.8" y="293" width="0.2" height="15.0" fill="rgb(208,60,39)" rx="2" ry="2" />
<text  x="767.76" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.03%)</title><rect x="26.4" y="821" width="0.4" height="15.0" fill="rgb(233,136,17)" rx="2" ry="2" />
<text  x="29.43" y="831.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (4 samples, 0.03%)</title><rect x="591.2" y="117" width="0.3" height="15.0" fill="rgb(215,119,13)" rx="2" ry="2" />
<text  x="594.16" y="127.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (215 samples, 1.52%)</title><rect x="724.9" y="661" width="17.9" height="15.0" fill="rgb(232,8,38)" rx="2" ry="2" />
<text  x="727.90" y="671.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (3 samples, 0.02%)</title><rect x="634.1" y="133" width="0.3" height="15.0" fill="rgb(211,63,49)" rx="2" ry="2" />
<text  x="637.10" y="143.5" ></text>
</g>
<g >
<title>dentry_kill (6 samples, 0.04%)</title><rect x="500.2" y="421" width="0.5" height="15.0" fill="rgb(239,225,9)" rx="2" ry="2" />
<text  x="503.19" y="431.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (276 samples, 1.95%)</title><rect x="766.3" y="341" width="23.1" height="15.0" fill="rgb(251,28,32)" rx="2" ry="2" />
<text  x="769.34" y="351.5" >&lt;..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (8 samples, 0.06%)</title><rect x="681.4" y="293" width="0.6" height="15.0" fill="rgb(211,49,49)" rx="2" ry="2" />
<text  x="684.38" y="303.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (4 samples, 0.03%)</title><rect x="89.0" y="821" width="0.4" height="15.0" fill="rgb(241,112,42)" rx="2" ry="2" />
<text  x="92.04" y="831.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (15 samples, 0.11%)</title><rect x="828.9" y="149" width="1.2" height="15.0" fill="rgb(210,23,21)" rx="2" ry="2" />
<text  x="831.88" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (25 samples, 0.18%)</title><rect x="847.4" y="181" width="2.1" height="15.0" fill="rgb(206,5,26)" rx="2" ry="2" />
<text  x="850.39" y="191.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (221 samples, 1.56%)</title><rect x="856.7" y="645" width="18.5" height="15.0" fill="rgb(228,186,19)" rx="2" ry="2" />
<text  x="859.73" y="655.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (8 samples, 0.06%)</title><rect x="978.5" y="709" width="0.6" height="15.0" fill="rgb(237,70,21)" rx="2" ry="2" />
<text  x="981.46" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.02%)</title><rect x="677.5" y="261" width="0.2" height="15.0" fill="rgb(211,114,14)" rx="2" ry="2" />
<text  x="680.46" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (300 samples, 2.12%)</title><rect x="764.3" y="501" width="25.1" height="15.0" fill="rgb(208,154,53)" rx="2" ry="2" />
<text  x="767.34" y="511.5" >c..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.04%)</title><rect x="831.0" y="69" width="0.5" height="15.0" fill="rgb(241,176,35)" rx="2" ry="2" />
<text  x="834.05" y="79.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.01%)</title><rect x="812.1" y="85" width="0.2" height="15.0" fill="rgb(242,131,20)" rx="2" ry="2" />
<text  x="815.12" y="95.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (34 samples, 0.24%)</title><rect x="522.3" y="293" width="2.8" height="15.0" fill="rgb(251,147,24)" rx="2" ry="2" />
<text  x="525.29" y="303.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (5 samples, 0.04%)</title><rect x="809.7" y="389" width="0.4" height="15.0" fill="rgb(212,139,15)" rx="2" ry="2" />
<text  x="812.70" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (46 samples, 0.33%)</title><rect x="26.8" y="837" width="3.9" height="15.0" fill="rgb(247,137,41)" rx="2" ry="2" />
<text  x="29.84" y="847.5" ></text>
</g>
<g >
<title>perf_event_task_tick (4 samples, 0.03%)</title><rect x="1037.7" y="501" width="0.4" height="15.0" fill="rgb(234,174,35)" rx="2" ry="2" />
<text  x="1040.75" y="511.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="858.2" y="165" width="0.3" height="15.0" fill="rgb(232,47,36)" rx="2" ry="2" />
<text  x="861.23" y="175.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (109 samples, 0.77%)</title><rect x="72.0" y="821" width="9.1" height="15.0" fill="rgb(221,54,46)" rx="2" ry="2" />
<text  x="75.04" y="831.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.01%)</title><rect x="549.8" y="213" width="0.2" height="15.0" fill="rgb(239,190,45)" rx="2" ry="2" />
<text  x="552.80" y="223.5" ></text>
</g>
<g >
<title>do_sys_poll (2 samples, 0.01%)</title><rect x="26.4" y="789" width="0.2" height="15.0" fill="rgb(212,192,5)" rx="2" ry="2" />
<text  x="29.43" y="799.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (19 samples, 0.13%)</title><rect x="726.3" y="261" width="1.6" height="15.0" fill="rgb(225,68,45)" rx="2" ry="2" />
<text  x="729.32" y="271.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.02%)</title><rect x="986.2" y="437" width="0.3" height="15.0" fill="rgb(252,208,50)" rx="2" ry="2" />
<text  x="989.22" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.12%)</title><rect x="662.9" y="197" width="1.4" height="15.0" fill="rgb(224,84,1)" rx="2" ry="2" />
<text  x="665.87" y="207.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.07%)</title><rect x="765.3" y="181" width="0.9" height="15.0" fill="rgb(234,109,33)" rx="2" ry="2" />
<text  x="768.34" y="191.5" ></text>
</g>
<g >
<title>do_iter_write (8 samples, 0.06%)</title><rect x="15.3" y="549" width="0.7" height="15.0" fill="rgb(216,150,38)" rx="2" ry="2" />
<text  x="18.34" y="559.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (2 samples, 0.01%)</title><rect x="45.8" y="613" width="0.1" height="15.0" fill="rgb(215,0,32)" rx="2" ry="2" />
<text  x="48.77" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.10%)</title><rect x="767.9" y="117" width="1.2" height="15.0" fill="rgb(210,34,15)" rx="2" ry="2" />
<text  x="770.93" y="127.5" ></text>
</g>
<g >
<title>iput.part.0 (7 samples, 0.05%)</title><rect x="114.8" y="389" width="0.6" height="15.0" fill="rgb(213,203,39)" rx="2" ry="2" />
<text  x="117.81" y="399.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (249 samples, 1.76%)</title><rect x="953.4" y="805" width="20.8" height="15.0" fill="rgb(207,45,26)" rx="2" ry="2" />
<text  x="956.45" y="815.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (4 samples, 0.03%)</title><rect x="1156.1" y="613" width="0.4" height="15.0" fill="rgb(231,43,26)" rx="2" ry="2" />
<text  x="1159.15" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (108 samples, 0.76%)</title><rect x="659.1" y="229" width="9.0" height="15.0" fill="rgb(248,139,48)" rx="2" ry="2" />
<text  x="662.12" y="239.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.01%)</title><rect x="503.1" y="389" width="0.2" height="15.0" fill="rgb(250,118,28)" rx="2" ry="2" />
<text  x="506.11" y="399.5" ></text>
</g>
<g >
<title>try_to_wake_up (9 samples, 0.06%)</title><rect x="989.5" y="549" width="0.7" height="15.0" fill="rgb(218,224,43)" rx="2" ry="2" />
<text  x="992.47" y="559.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (98 samples, 0.69%)</title><rect x="42.7" y="661" width="8.2" height="15.0" fill="rgb(237,204,2)" rx="2" ry="2" />
<text  x="45.69" y="671.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (5 samples, 0.04%)</title><rect x="524.0" y="245" width="0.5" height="15.0" fill="rgb(239,91,12)" rx="2" ry="2" />
<text  x="527.04" y="255.5" ></text>
</g>
<g >
<title>iput_final (5 samples, 0.04%)</title><rect x="500.2" y="341" width="0.4" height="15.0" fill="rgb(254,218,36)" rx="2" ry="2" />
<text  x="503.19" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (12 samples, 0.08%)</title><rect x="115.5" y="645" width="1.0" height="15.0" fill="rgb(218,174,42)" rx="2" ry="2" />
<text  x="118.48" y="655.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (9 samples, 0.06%)</title><rect x="887.1" y="837" width="0.7" height="15.0" fill="rgb(235,85,34)" rx="2" ry="2" />
<text  x="890.08" y="847.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (5 samples, 0.04%)</title><rect x="856.0" y="533" width="0.4" height="15.0" fill="rgb(223,199,52)" rx="2" ry="2" />
<text  x="858.98" y="543.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (623 samples, 4.40%)</title><rect x="1029.9" y="645" width="52.0" height="15.0" fill="rgb(222,135,12)" rx="2" ry="2" />
<text  x="1032.91" y="655.5" >sysve..</text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (3 samples, 0.02%)</title><rect x="826.8" y="133" width="0.2" height="15.0" fill="rgb(213,151,29)" rx="2" ry="2" />
<text  x="829.79" y="143.5" ></text>
</g>
<g >
<title>do_iter_write (35 samples, 0.25%)</title><rect x="495.2" y="453" width="2.9" height="15.0" fill="rgb(205,191,18)" rx="2" ry="2" />
<text  x="498.19" y="463.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (2 samples, 0.01%)</title><rect x="681.2" y="229" width="0.2" height="15.0" fill="rgb(248,5,9)" rx="2" ry="2" />
<text  x="684.21" y="239.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (10 samples, 0.07%)</title><rect x="744.6" y="245" width="0.8" height="15.0" fill="rgb(214,157,27)" rx="2" ry="2" />
<text  x="747.58" y="255.5" ></text>
</g>
<g >
<title>____fput (3 samples, 0.02%)</title><rect x="952.2" y="741" width="0.2" height="15.0" fill="rgb(245,90,10)" rx="2" ry="2" />
<text  x="955.20" y="751.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (3 samples, 0.02%)</title><rect x="875.2" y="245" width="0.2" height="15.0" fill="rgb(242,58,48)" rx="2" ry="2" />
<text  x="878.16" y="255.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (3 samples, 0.02%)</title><rect x="514.7" y="293" width="0.3" height="15.0" fill="rgb(249,72,14)" rx="2" ry="2" />
<text  x="517.70" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (7 samples, 0.05%)</title><rect x="725.4" y="165" width="0.6" height="15.0" fill="rgb(223,34,31)" rx="2" ry="2" />
<text  x="728.40" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.08%)</title><rect x="115.5" y="597" width="1.0" height="15.0" fill="rgb(216,197,25)" rx="2" ry="2" />
<text  x="118.48" y="607.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (3 samples, 0.02%)</title><rect x="542.1" y="245" width="0.3" height="15.0" fill="rgb(245,31,24)" rx="2" ry="2" />
<text  x="545.13" y="255.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (30 samples, 0.21%)</title><rect x="980.6" y="693" width="2.5" height="15.0" fill="rgb(239,146,51)" rx="2" ry="2" />
<text  x="983.63" y="703.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (28 samples, 0.20%)</title><rect x="42.9" y="581" width="2.4" height="15.0" fill="rgb(222,20,51)" rx="2" ry="2" />
<text  x="45.94" y="591.5" ></text>
</g>
<g >
<title>find_busiest_group (17 samples, 0.12%)</title><rect x="66.7" y="629" width="1.4" height="15.0" fill="rgb(213,177,53)" rx="2" ry="2" />
<text  x="69.70" y="639.5" ></text>
</g>
<g >
<title>ttwu_do_activate (4 samples, 0.03%)</title><rect x="989.9" y="533" width="0.3" height="15.0" fill="rgb(210,161,29)" rx="2" ry="2" />
<text  x="992.89" y="543.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (5 samples, 0.04%)</title><rect x="1189.0" y="725" width="0.4" height="15.0" fill="rgb(235,71,5)" rx="2" ry="2" />
<text  x="1192.00" y="735.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (333 samples, 2.35%)</title><rect x="810.1" y="405" width="27.8" height="15.0" fill="rgb(213,27,16)" rx="2" ry="2" />
<text  x="813.12" y="415.5" >&lt;..</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.04%)</title><rect x="856.0" y="405" width="0.4" height="15.0" fill="rgb(229,206,15)" rx="2" ry="2" />
<text  x="858.98" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_write (18 samples, 0.13%)</title><rect x="493.4" y="565" width="1.5" height="15.0" fill="rgb(212,215,34)" rx="2" ry="2" />
<text  x="496.44" y="575.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (14 samples, 0.10%)</title><rect x="725.1" y="309" width="1.1" height="15.0" fill="rgb(229,142,12)" rx="2" ry="2" />
<text  x="728.07" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="652.6" y="181" width="0.2" height="15.0" fill="rgb(216,60,44)" rx="2" ry="2" />
<text  x="655.61" y="191.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (26 samples, 0.18%)</title><rect x="797.6" y="821" width="2.2" height="15.0" fill="rgb(207,90,8)" rx="2" ry="2" />
<text  x="800.61" y="831.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (255 samples, 1.80%)</title><rect x="743.0" y="725" width="21.3" height="15.0" fill="rgb(215,149,34)" rx="2" ry="2" />
<text  x="746.00" y="735.5" >r..</text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (8 samples, 0.06%)</title><rect x="688.6" y="261" width="0.6" height="15.0" fill="rgb(228,185,31)" rx="2" ry="2" />
<text  x="691.55" y="271.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (221 samples, 1.56%)</title><rect x="856.7" y="453" width="18.5" height="15.0" fill="rgb(205,108,49)" rx="2" ry="2" />
<text  x="859.73" y="463.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_ptr (3 samples, 0.02%)</title><rect x="490.8" y="725" width="0.2" height="15.0" fill="rgb(213,125,47)" rx="2" ry="2" />
<text  x="493.77" y="735.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 0.01%)</title><rect x="40.5" y="725" width="0.2" height="15.0" fill="rgb(239,132,42)" rx="2" ry="2" />
<text  x="43.52" y="735.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (54 samples, 0.38%)</title><rect x="1184.2" y="709" width="4.5" height="15.0" fill="rgb(218,134,29)" rx="2" ry="2" />
<text  x="1187.16" y="719.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (1,513 samples, 10.69%)</title><rect x="350.6" y="757" width="126.2" height="15.0" fill="rgb(236,213,24)" rx="2" ry="2" />
<text  x="353.61" y="767.5" >NaClMutexUnlock</text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (7 samples, 0.05%)</title><rect x="518.6" y="325" width="0.6" height="15.0" fill="rgb(250,134,54)" rx="2" ry="2" />
<text  x="521.62" y="335.5" ></text>
</g>
<g >
<title>trigger_load_balance (5 samples, 0.04%)</title><rect x="1046.1" y="485" width="0.4" height="15.0" fill="rgb(218,193,19)" rx="2" ry="2" />
<text  x="1049.09" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (33 samples, 0.23%)</title><rect x="586.5" y="149" width="2.7" height="15.0" fill="rgb(245,89,51)" rx="2" ry="2" />
<text  x="589.49" y="159.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.03%)</title><rect x="875.2" y="725" width="0.3" height="15.0" fill="rgb(213,106,0)" rx="2" ry="2" />
<text  x="878.16" y="735.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (229 samples, 1.62%)</title><rect x="697.4" y="581" width="19.1" height="15.0" fill="rgb(232,130,9)" rx="2" ry="2" />
<text  x="700.39" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.02%)</title><rect x="508.7" y="261" width="0.2" height="15.0" fill="rgb(229,171,5)" rx="2" ry="2" />
<text  x="511.70" y="271.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (14 samples, 0.10%)</title><rect x="1155.3" y="629" width="1.2" height="15.0" fill="rgb(240,71,38)" rx="2" ry="2" />
<text  x="1158.31" y="639.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (16 samples, 0.11%)</title><rect x="851.8" y="181" width="1.3" height="15.0" fill="rgb(212,32,15)" rx="2" ry="2" />
<text  x="854.81" y="191.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (4 samples, 0.03%)</title><rect x="542.6" y="229" width="0.4" height="15.0" fill="rgb(254,213,29)" rx="2" ry="2" />
<text  x="545.63" y="239.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="724.4" y="757" width="0.5" height="15.0" fill="rgb(253,61,50)" rx="2" ry="2" />
<text  x="727.40" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (6 samples, 0.04%)</title><rect x="525.8" y="197" width="0.5" height="15.0" fill="rgb(245,104,30)" rx="2" ry="2" />
<text  x="528.79" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="88.5" y="821" width="0.3" height="15.0" fill="rgb(228,176,48)" rx="2" ry="2" />
<text  x="91.54" y="831.5" ></text>
</g>
<g >
<title>ion (8 samples, 0.06%)</title><rect x="15.3" y="709" width="0.7" height="15.0" fill="rgb(231,50,20)" rx="2" ry="2" />
<text  x="18.34" y="719.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.06%)</title><rect x="831.9" y="197" width="0.7" height="15.0" fill="rgb(219,32,16)" rx="2" ry="2" />
<text  x="834.88" y="207.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (15 samples, 0.11%)</title><rect x="828.9" y="165" width="1.2" height="15.0" fill="rgb(233,91,38)" rx="2" ry="2" />
<text  x="831.88" y="175.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (8 samples, 0.06%)</title><rect x="1157.7" y="677" width="0.7" height="15.0" fill="rgb(235,66,7)" rx="2" ry="2" />
<text  x="1160.73" y="687.5" ></text>
</g>
<g >
<title>evict (6 samples, 0.04%)</title><rect x="500.2" y="485" width="0.5" height="15.0" fill="rgb(228,133,10)" rx="2" ry="2" />
<text  x="503.19" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="494.9" y="437" width="0.2" height="15.0" fill="rgb(218,65,53)" rx="2" ry="2" />
<text  x="497.94" y="447.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (221 samples, 1.56%)</title><rect x="856.7" y="709" width="18.5" height="15.0" fill="rgb(206,120,38)" rx="2" ry="2" />
<text  x="859.73" y="719.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (115 samples, 0.81%)</title><rect x="860.8" y="293" width="9.6" height="15.0" fill="rgb(249,9,16)" rx="2" ry="2" />
<text  x="863.81" y="303.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_object_value (2 samples, 0.01%)</title><rect x="113.8" y="821" width="0.2" height="15.0" fill="rgb(239,78,54)" rx="2" ry="2" />
<text  x="116.81" y="831.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (9 samples, 0.06%)</title><rect x="680.6" y="261" width="0.8" height="15.0" fill="rgb(205,53,15)" rx="2" ry="2" />
<text  x="683.63" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.11%)</title><rect x="511.2" y="293" width="1.3" height="15.0" fill="rgb(251,164,21)" rx="2" ry="2" />
<text  x="514.20" y="303.5" ></text>
</g>
<g >
<title>[[heap]] (31 samples, 0.22%)</title><rect x="81.1" y="837" width="2.6" height="15.0" fill="rgb(207,69,29)" rx="2" ry="2" />
<text  x="84.12" y="847.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (16 samples, 0.11%)</title><rect x="985.8" y="565" width="1.3" height="15.0" fill="rgb(242,18,20)" rx="2" ry="2" />
<text  x="988.80" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.01%)</title><rect x="764.3" y="309" width="0.2" height="15.0" fill="rgb(225,90,1)" rx="2" ry="2" />
<text  x="767.34" y="319.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (65 samples, 0.46%)</title><rect x="689.2" y="389" width="5.4" height="15.0" fill="rgb(219,20,47)" rx="2" ry="2" />
<text  x="692.22" y="399.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.04%)</title><rect x="870.4" y="277" width="0.4" height="15.0" fill="rgb(227,27,9)" rx="2" ry="2" />
<text  x="873.40" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.02%)</title><rect x="683.3" y="309" width="0.2" height="15.0" fill="rgb(225,51,54)" rx="2" ry="2" />
<text  x="686.30" y="319.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (20 samples, 0.14%)</title><rect x="579.8" y="117" width="1.7" height="15.0" fill="rgb(224,122,12)" rx="2" ry="2" />
<text  x="582.82" y="127.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (215 samples, 1.52%)</title><rect x="724.9" y="517" width="17.9" height="15.0" fill="rgb(232,189,51)" rx="2" ry="2" />
<text  x="727.90" y="527.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (215 samples, 1.52%)</title><rect x="724.9" y="405" width="17.9" height="15.0" fill="rgb(205,52,5)" rx="2" ry="2" />
<text  x="727.90" y="415.5" ></text>
</g>
<g >
<title>put_prev_task_idle (3 samples, 0.02%)</title><rect x="1181.1" y="677" width="0.2" height="15.0" fill="rgb(216,206,16)" rx="2" ry="2" />
<text  x="1184.08" y="687.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (4 samples, 0.03%)</title><rect x="811.3" y="53" width="0.3" height="15.0" fill="rgb(230,133,48)" rx="2" ry="2" />
<text  x="814.29" y="63.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.03%)</title><rect x="950.4" y="789" width="0.4" height="15.0" fill="rgb(216,161,54)" rx="2" ry="2" />
<text  x="953.45" y="799.5" ></text>
</g>
<g >
<title>do_exit (3 samples, 0.02%)</title><rect x="888.9" y="709" width="0.3" height="15.0" fill="rgb(223,205,1)" rx="2" ry="2" />
<text  x="891.91" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.11%)</title><rect x="830.6" y="117" width="1.3" height="15.0" fill="rgb(209,113,40)" rx="2" ry="2" />
<text  x="833.63" y="127.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (4 samples, 0.03%)</title><rect x="976.4" y="549" width="0.3" height="15.0" fill="rgb(210,164,3)" rx="2" ry="2" />
<text  x="979.38" y="559.5" ></text>
</g>
<g >
<title>load_balance (91 samples, 0.64%)</title><rect x="1058.9" y="533" width="7.6" height="15.0" fill="rgb(221,53,35)" rx="2" ry="2" />
<text  x="1061.93" y="543.5" ></text>
</g>
<g >
<title>wb_writeback (30 samples, 0.21%)</title><rect x="976.0" y="725" width="2.5" height="15.0" fill="rgb(236,133,30)" rx="2" ry="2" />
<text  x="978.96" y="735.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (2 samples, 0.01%)</title><rect x="15.8" y="469" width="0.2" height="15.0" fill="rgb(246,49,43)" rx="2" ry="2" />
<text  x="18.84" y="479.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (2 samples, 0.01%)</title><rect x="70.6" y="837" width="0.2" height="15.0" fill="rgb(224,8,38)" rx="2" ry="2" />
<text  x="73.62" y="847.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="1048.2" y="581" width="0.1" height="15.0" fill="rgb(233,223,21)" rx="2" ry="2" />
<text  x="1051.17" y="591.5" ></text>
</g>
<g >
<title>ksys_write (37 samples, 0.26%)</title><rect x="495.1" y="533" width="3.1" height="15.0" fill="rgb(236,220,30)" rx="2" ry="2" />
<text  x="498.11" y="543.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (53 samples, 0.37%)</title><rect x="472.3" y="741" width="4.5" height="15.0" fill="rgb(207,211,9)" rx="2" ry="2" />
<text  x="475.34" y="751.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (300 samples, 2.12%)</title><rect x="764.3" y="597" width="25.1" height="15.0" fill="rgb(223,117,1)" rx="2" ry="2" />
<text  x="767.34" y="607.5" >r..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="603.7" y="197" width="0.2" height="15.0" fill="rgb(207,8,32)" rx="2" ry="2" />
<text  x="606.67" y="207.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (1,664 samples, 11.76%)</title><rect x="338.0" y="773" width="138.8" height="15.0" fill="rgb(221,90,34)" rx="2" ry="2" />
<text  x="341.02" y="783.5" >NaClXMutexUnlock</text>
</g>
<g >
<title>call_timer_fn (19 samples, 0.13%)</title><rect x="48.9" y="533" width="1.6" height="15.0" fill="rgb(233,95,10)" rx="2" ry="2" />
<text  x="51.94" y="543.5" ></text>
</g>
<g >
<title>lind_write (215 samples, 1.52%)</title><rect x="724.9" y="773" width="17.9" height="15.0" fill="rgb(225,4,9)" rx="2" ry="2" />
<text  x="727.90" y="783.5" ></text>
</g>
<g >
<title>ext4_releasepage (2 samples, 0.01%)</title><rect x="500.4" y="197" width="0.1" height="15.0" fill="rgb(244,36,2)" rx="2" ry="2" />
<text  x="503.36" y="207.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (223 samples, 1.58%)</title><rect x="697.9" y="389" width="18.6" height="15.0" fill="rgb(221,109,10)" rx="2" ry="2" />
<text  x="700.89" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter (247 samples, 1.75%)</title><rect x="42.0" y="693" width="20.6" height="15.0" fill="rgb(234,118,34)" rx="2" ry="2" />
<text  x="45.02" y="703.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.11%)</title><rect x="543.2" y="229" width="1.3" height="15.0" fill="rgb(250,57,45)" rx="2" ry="2" />
<text  x="546.22" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (2 samples, 0.01%)</title><rect x="88.3" y="821" width="0.2" height="15.0" fill="rgb(229,199,31)" rx="2" ry="2" />
<text  x="91.29" y="831.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open (14 samples, 0.10%)</title><rect x="498.5" y="597" width="1.2" height="15.0" fill="rgb(251,185,33)" rx="2" ry="2" />
<text  x="501.53" y="607.5" ></text>
</g>
<g >
<title>wake_up_process (2 samples, 0.01%)</title><rect x="1071.3" y="469" width="0.1" height="15.0" fill="rgb(221,17,19)" rx="2" ry="2" />
<text  x="1074.27" y="479.5" ></text>
</g>
<g >
<title>rcu_irq_enter (2 samples, 0.01%)</title><rect x="1080.9" y="629" width="0.2" height="15.0" fill="rgb(218,82,3)" rx="2" ry="2" />
<text  x="1083.94" y="639.5" ></text>
</g>
<g >
<title>block_invalidatepage (3 samples, 0.02%)</title><rect x="115.1" y="261" width="0.3" height="15.0" fill="rgb(235,182,34)" rx="2" ry="2" />
<text  x="118.14" y="271.5" ></text>
</g>
<g >
<title>[librustposix.so] (6 samples, 0.04%)</title><rect x="724.4" y="773" width="0.5" height="15.0" fill="rgb(243,26,48)" rx="2" ry="2" />
<text  x="727.40" y="783.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (2 samples, 0.01%)</title><rect x="1141.1" y="661" width="0.2" height="15.0" fill="rgb(205,199,17)" rx="2" ry="2" />
<text  x="1144.14" y="671.5" ></text>
</g>
<g >
<title>alloc_pages_current (4 samples, 0.03%)</title><rect x="494.1" y="341" width="0.3" height="15.0" fill="rgb(250,101,26)" rx="2" ry="2" />
<text  x="497.11" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (17 samples, 0.12%)</title><rect x="683.1" y="357" width="1.4" height="15.0" fill="rgb(219,138,30)" rx="2" ry="2" />
<text  x="686.13" y="367.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (22 samples, 0.16%)</title><rect x="713.0" y="261" width="1.8" height="15.0" fill="rgb(240,197,30)" rx="2" ry="2" />
<text  x="715.98" y="271.5" ></text>
</g>
<g >
<title>core::mem::uninitialized (4 samples, 0.03%)</title><rect x="514.6" y="325" width="0.4" height="15.0" fill="rgb(206,86,20)" rx="2" ry="2" />
<text  x="517.62" y="335.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (3 samples, 0.02%)</title><rect x="500.3" y="245" width="0.2" height="15.0" fill="rgb(213,27,13)" rx="2" ry="2" />
<text  x="503.28" y="255.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (4 samples, 0.03%)</title><rect x="526.9" y="213" width="0.3" height="15.0" fill="rgb(227,72,13)" rx="2" ry="2" />
<text  x="529.88" y="223.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (9 samples, 0.06%)</title><rect x="836.2" y="149" width="0.8" height="15.0" fill="rgb(240,156,44)" rx="2" ry="2" />
<text  x="839.22" y="159.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.04%)</title><rect x="787.1" y="197" width="0.4" height="15.0" fill="rgb(216,117,32)" rx="2" ry="2" />
<text  x="790.11" y="207.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (5 samples, 0.04%)</title><rect x="518.2" y="293" width="0.4" height="15.0" fill="rgb(252,160,54)" rx="2" ry="2" />
<text  x="521.20" y="303.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="793.2" y="805" width="0.2" height="15.0" fill="rgb(206,25,47)" rx="2" ry="2" />
<text  x="796.19" y="815.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (2 samples, 0.01%)</title><rect x="697.7" y="197" width="0.2" height="15.0" fill="rgb(250,104,21)" rx="2" ry="2" />
<text  x="700.72" y="207.5" ></text>
</g>
<g >
<title>NaClSysWrite (301 samples, 2.13%)</title><rect x="764.3" y="789" width="25.1" height="15.0" fill="rgb(240,126,33)" rx="2" ry="2" />
<text  x="767.26" y="799.5" >N..</text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.04%)</title><rect x="805.5" y="821" width="0.4" height="15.0" fill="rgb(218,111,46)" rx="2" ry="2" />
<text  x="808.53" y="831.5" ></text>
</g>
<g >
<title>evict (7 samples, 0.05%)</title><rect x="114.8" y="357" width="0.6" height="15.0" fill="rgb(221,55,53)" rx="2" ry="2" />
<text  x="117.81" y="367.5" ></text>
</g>
<g >
<title>alloc_buffer_head (3 samples, 0.02%)</title><rect x="495.7" y="309" width="0.2" height="15.0" fill="rgb(239,19,10)" rx="2" ry="2" />
<text  x="498.69" y="319.5" ></text>
</g>
<g >
<title>ovl_open (6 samples, 0.04%)</title><rect x="498.9" y="373" width="0.5" height="15.0" fill="rgb(212,186,36)" rx="2" ry="2" />
<text  x="501.86" y="383.5" ></text>
</g>
<g >
<title>pagevec_lookup_range_tag (2 samples, 0.01%)</title><rect x="979.0" y="629" width="0.1" height="15.0" fill="rgb(235,159,35)" rx="2" ry="2" />
<text  x="981.96" y="639.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (129 samples, 0.91%)</title><rect x="817.8" y="165" width="10.7" height="15.0" fill="rgb(235,155,16)" rx="2" ry="2" />
<text  x="820.79" y="175.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (4 samples, 0.03%)</title><rect x="661.5" y="165" width="0.3" height="15.0" fill="rgb(243,201,13)" rx="2" ry="2" />
<text  x="664.45" y="175.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (2 samples, 0.01%)</title><rect x="986.6" y="453" width="0.1" height="15.0" fill="rgb(231,24,13)" rx="2" ry="2" />
<text  x="989.55" y="463.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (9 samples, 0.06%)</title><rect x="836.2" y="133" width="0.8" height="15.0" fill="rgb(254,218,8)" rx="2" ry="2" />
<text  x="839.22" y="143.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (13 samples, 0.09%)</title><rect x="620.1" y="261" width="1.1" height="15.0" fill="rgb(245,148,41)" rx="2" ry="2" />
<text  x="623.09" y="271.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.02%)</title><rect x="82.9" y="821" width="0.2" height="15.0" fill="rgb(250,63,1)" rx="2" ry="2" />
<text  x="85.87" y="831.5" ></text>
</g>
<g >
<title>__libc_read (12 samples, 0.08%)</title><rect x="115.5" y="613" width="1.0" height="15.0" fill="rgb(245,207,10)" rx="2" ry="2" />
<text  x="118.48" y="623.5" ></text>
</g>
<g >
<title>ovl_create_object (4 samples, 0.03%)</title><rect x="499.4" y="373" width="0.3" height="15.0" fill="rgb(207,166,21)" rx="2" ry="2" />
<text  x="502.36" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1,131 samples, 7.99%)</title><rect x="238.5" y="741" width="94.3" height="15.0" fill="rgb(213,57,45)" rx="2" ry="2" />
<text  x="241.55" y="751.5" >__GI___pthr..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.03%)</title><rect x="875.2" y="533" width="0.3" height="15.0" fill="rgb(223,201,5)" rx="2" ry="2" />
<text  x="878.16" y="543.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (2 samples, 0.01%)</title><rect x="856.0" y="325" width="0.1" height="15.0" fill="rgb(216,125,26)" rx="2" ry="2" />
<text  x="858.98" y="335.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (21 samples, 0.15%)</title><rect x="787.6" y="245" width="1.8" height="15.0" fill="rgb(228,88,11)" rx="2" ry="2" />
<text  x="790.61" y="255.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.03%)</title><rect x="743.2" y="149" width="0.4" height="15.0" fill="rgb(210,196,42)" rx="2" ry="2" />
<text  x="746.25" y="159.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (10 samples, 0.07%)</title><rect x="115.6" y="357" width="0.8" height="15.0" fill="rgb(254,76,34)" rx="2" ry="2" />
<text  x="118.56" y="367.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (2 samples, 0.01%)</title><rect x="856.1" y="373" width="0.2" height="15.0" fill="rgb(236,18,9)" rx="2" ry="2" />
<text  x="859.14" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (68 samples, 0.48%)</title><rect x="598.3" y="213" width="5.7" height="15.0" fill="rgb(234,195,54)" rx="2" ry="2" />
<text  x="601.33" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.08%)</title><rect x="813.0" y="117" width="1.0" height="15.0" fill="rgb(231,162,1)" rx="2" ry="2" />
<text  x="815.95" y="127.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (3 samples, 0.02%)</title><rect x="831.5" y="69" width="0.3" height="15.0" fill="rgb(239,41,25)" rx="2" ry="2" />
<text  x="834.55" y="79.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.01%)</title><rect x="889.0" y="629" width="0.2" height="15.0" fill="rgb(224,131,46)" rx="2" ry="2" />
<text  x="892.00" y="639.5" ></text>
</g>
<g >
<title>rest_init (345 samples, 2.44%)</title><rect x="41.4" y="757" width="28.8" height="15.0" fill="rgb(250,110,8)" rx="2" ry="2" />
<text  x="44.43" y="767.5" >re..</text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (2 samples, 0.01%)</title><rect x="116.6" y="645" width="0.1" height="15.0" fill="rgb(211,67,37)" rx="2" ry="2" />
<text  x="119.56" y="655.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (65 samples, 0.46%)</title><rect x="689.2" y="293" width="5.4" height="15.0" fill="rgb(210,81,50)" rx="2" ry="2" />
<text  x="692.22" y="303.5" ></text>
</g>
<g >
<title>alloc_empty_file_noaccount (2 samples, 0.01%)</title><rect x="498.9" y="325" width="0.2" height="15.0" fill="rgb(219,65,31)" rx="2" ry="2" />
<text  x="501.94" y="335.5" ></text>
</g>
<g >
<title>rustposix::interface::file::openfile (19 samples, 0.13%)</title><rect x="498.2" y="661" width="1.6" height="15.0" fill="rgb(211,55,50)" rx="2" ry="2" />
<text  x="501.19" y="671.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (231 samples, 1.63%)</title><rect x="1030.7" y="613" width="19.2" height="15.0" fill="rgb(234,96,43)" rx="2" ry="2" />
<text  x="1033.66" y="623.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (4 samples, 0.03%)</title><rect x="683.9" y="309" width="0.3" height="15.0" fill="rgb(235,102,36)" rx="2" ry="2" />
<text  x="686.88" y="319.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (33 samples, 0.23%)</title><rect x="679.3" y="341" width="2.7" height="15.0" fill="rgb(206,219,10)" rx="2" ry="2" />
<text  x="682.29" y="351.5" ></text>
</g>
<g >
<title>handle_edge_irq (3 samples, 0.02%)</title><rect x="30.9" y="677" width="0.3" height="15.0" fill="rgb(223,123,52)" rx="2" ry="2" />
<text  x="33.93" y="687.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.04%)</title><rect x="653.2" y="149" width="0.4" height="15.0" fill="rgb(252,48,29)" rx="2" ry="2" />
<text  x="656.20" y="159.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (14 samples, 0.10%)</title><rect x="544.5" y="229" width="1.1" height="15.0" fill="rgb(236,173,23)" rx="2" ry="2" />
<text  x="547.47" y="239.5" ></text>
</g>
<g >
<title>__submit_bio_noacct_mq (2 samples, 0.01%)</title><rect x="976.0" y="581" width="0.2" height="15.0" fill="rgb(254,90,39)" rx="2" ry="2" />
<text  x="979.05" y="591.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (10 samples, 0.07%)</title><rect x="633.5" y="165" width="0.9" height="15.0" fill="rgb(251,198,21)" rx="2" ry="2" />
<text  x="636.52" y="175.5" ></text>
</g>
<g >
<title>psi_task_switch (13 samples, 0.09%)</title><rect x="1180.0" y="677" width="1.1" height="15.0" fill="rgb(218,67,53)" rx="2" ry="2" />
<text  x="1182.99" y="687.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (221 samples, 1.56%)</title><rect x="856.7" y="549" width="18.5" height="15.0" fill="rgb(212,193,14)" rx="2" ry="2" />
<text  x="859.73" y="559.5" ></text>
</g>
<g >
<title>newidle_balance (4 samples, 0.03%)</title><rect x="979.3" y="741" width="0.3" height="15.0" fill="rgb(248,170,5)" rx="2" ry="2" />
<text  x="982.30" y="751.5" ></text>
</g>
<g >
<title>rcu_gp_fqs_loop (208 samples, 1.47%)</title><rect x="955.2" y="789" width="17.3" height="15.0" fill="rgb(239,89,1)" rx="2" ry="2" />
<text  x="958.20" y="799.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (4 samples, 0.03%)</title><rect x="509.6" y="261" width="0.3" height="15.0" fill="rgb(218,151,39)" rx="2" ry="2" />
<text  x="512.62" y="271.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::open_syscall (7 samples, 0.05%)</title><rect x="114.8" y="709" width="0.6" height="15.0" fill="rgb(249,98,51)" rx="2" ry="2" />
<text  x="117.81" y="719.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.02%)</title><rect x="952.7" y="757" width="0.2" height="15.0" fill="rgb(247,97,4)" rx="2" ry="2" />
<text  x="955.70" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.02%)</title><rect x="674.0" y="261" width="0.3" height="15.0" fill="rgb(208,26,2)" rx="2" ry="2" />
<text  x="677.04" y="271.5" ></text>
</g>
<g >
<title>lind_read (17 samples, 0.12%)</title><rect x="115.4" y="741" width="1.4" height="15.0" fill="rgb(235,39,46)" rx="2" ry="2" />
<text  x="118.39" y="751.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (3 samples, 0.02%)</title><rect x="875.2" y="341" width="0.2" height="15.0" fill="rgb(215,34,39)" rx="2" ry="2" />
<text  x="878.16" y="351.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (20 samples, 0.14%)</title><rect x="489.1" y="725" width="1.7" height="15.0" fill="rgb(214,171,37)" rx="2" ry="2" />
<text  x="492.10" y="735.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.01%)</title><rect x="724.9" y="293" width="0.2" height="15.0" fill="rgb(224,140,30)" rx="2" ry="2" />
<text  x="727.90" y="303.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (255 samples, 1.80%)</title><rect x="743.0" y="517" width="21.3" height="15.0" fill="rgb(220,167,49)" rx="2" ry="2" />
<text  x="746.00" y="527.5" >c..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.07%)</title><rect x="679.8" y="277" width="0.8" height="15.0" fill="rgb(220,160,32)" rx="2" ry="2" />
<text  x="682.80" y="287.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (5 samples, 0.04%)</title><rect x="15.3" y="469" width="0.5" height="15.0" fill="rgb(227,25,34)" rx="2" ry="2" />
<text  x="18.34" y="479.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (12 samples, 0.08%)</title><rect x="743.6" y="165" width="1.0" height="15.0" fill="rgb(218,124,43)" rx="2" ry="2" />
<text  x="746.58" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.04%)</title><rect x="511.9" y="245" width="0.4" height="15.0" fill="rgb(230,222,19)" rx="2" ry="2" />
<text  x="514.87" y="255.5" ></text>
</g>
<g >
<title>check_preempt_curr (2 samples, 0.01%)</title><rect x="1074.0" y="453" width="0.2" height="15.0" fill="rgb(250,184,29)" rx="2" ry="2" />
<text  x="1077.02" y="463.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (5 samples, 0.04%)</title><rect x="667.7" y="149" width="0.4" height="15.0" fill="rgb(241,6,20)" rx="2" ry="2" />
<text  x="670.70" y="159.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="809.9" y="245" width="0.2" height="15.0" fill="rgb(209,27,15)" rx="2" ry="2" />
<text  x="812.87" y="255.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (36 samples, 0.25%)</title><rect x="543.0" y="309" width="3.0" height="15.0" fill="rgb(245,56,27)" rx="2" ry="2" />
<text  x="545.97" y="319.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (276 samples, 1.95%)</title><rect x="766.3" y="325" width="23.1" height="15.0" fill="rgb(241,57,43)" rx="2" ry="2" />
<text  x="769.34" y="335.5" >s..</text>
</g>
<g >
<title>hrtimer_interrupt (9 samples, 0.06%)</title><rect x="987.3" y="661" width="0.8" height="15.0" fill="rgb(226,160,26)" rx="2" ry="2" />
<text  x="990.30" y="671.5" ></text>
</g>
<g >
<title>rcu_accelerate_cbs (2 samples, 0.01%)</title><rect x="1055.8" y="517" width="0.2" height="15.0" fill="rgb(208,27,21)" rx="2" ry="2" />
<text  x="1058.84" y="527.5" ></text>
</g>
<g >
<title>str.0 (6 samples, 0.04%)</title><rect x="685.0" y="741" width="0.5" height="15.0" fill="rgb(243,114,34)" rx="2" ry="2" />
<text  x="687.96" y="751.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (65 samples, 0.46%)</title><rect x="689.2" y="373" width="5.4" height="15.0" fill="rgb(210,101,23)" rx="2" ry="2" />
<text  x="692.22" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (2 samples, 0.01%)</title><rect x="1188.7" y="709" width="0.1" height="15.0" fill="rgb(233,131,48)" rx="2" ry="2" />
<text  x="1191.67" y="719.5" ></text>
</g>
<g >
<title>udp_queue_rcv_one_skb (2 samples, 0.01%)</title><rect x="986.2" y="341" width="0.2" height="15.0" fill="rgb(217,79,20)" rx="2" ry="2" />
<text  x="989.22" y="351.5" ></text>
</g>
<g >
<title>rb_next (3 samples, 0.02%)</title><rect x="1033.5" y="549" width="0.2" height="15.0" fill="rgb(241,115,46)" rx="2" ry="2" />
<text  x="1036.49" y="559.5" ></text>
</g>
<g >
<title>mmput (3 samples, 0.02%)</title><rect x="888.9" y="677" width="0.3" height="15.0" fill="rgb(236,28,40)" rx="2" ry="2" />
<text  x="891.91" y="687.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (2 samples, 0.01%)</title><rect x="1141.0" y="661" width="0.1" height="15.0" fill="rgb(241,120,16)" rx="2" ry="2" />
<text  x="1143.97" y="671.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (28 samples, 0.20%)</title><rect x="980.8" y="629" width="2.3" height="15.0" fill="rgb(247,14,38)" rx="2" ry="2" />
<text  x="983.80" y="639.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 0.45%)</title><rect x="10.1" y="485" width="5.2" height="15.0" fill="rgb(249,224,21)" rx="2" ry="2" />
<text  x="13.08" y="495.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (16 samples, 0.11%)</title><rect x="858.5" y="197" width="1.3" height="15.0" fill="rgb(249,130,46)" rx="2" ry="2" />
<text  x="861.48" y="207.5" ></text>
</g>
<g >
<title>pci_read (3 samples, 0.02%)</title><rect x="974.9" y="709" width="0.2" height="15.0" fill="rgb(207,44,6)" rx="2" ry="2" />
<text  x="977.88" y="719.5" ></text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.01%)</title><rect x="116.6" y="613" width="0.1" height="15.0" fill="rgb(224,19,10)" rx="2" ry="2" />
<text  x="119.56" y="623.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (16 samples, 0.11%)</title><rect x="622.4" y="245" width="1.4" height="15.0" fill="rgb(242,111,51)" rx="2" ry="2" />
<text  x="625.43" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (5 samples, 0.04%)</title><rect x="1157.9" y="645" width="0.4" height="15.0" fill="rgb(223,128,35)" rx="2" ry="2" />
<text  x="1160.90" y="655.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (197 samples, 1.39%)</title><rect x="1031.7" y="581" width="16.5" height="15.0" fill="rgb(224,125,50)" rx="2" ry="2" />
<text  x="1034.74" y="591.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (229 samples, 1.62%)</title><rect x="697.4" y="485" width="19.1" height="15.0" fill="rgb(206,103,27)" rx="2" ry="2" />
<text  x="700.39" y="495.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (6 samples, 0.04%)</title><rect x="671.0" y="181" width="0.5" height="15.0" fill="rgb(230,111,42)" rx="2" ry="2" />
<text  x="673.96" y="191.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (3 samples, 0.02%)</title><rect x="576.1" y="117" width="0.2" height="15.0" fill="rgb(206,97,40)" rx="2" ry="2" />
<text  x="579.07" y="127.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (4 samples, 0.03%)</title><rect x="952.2" y="789" width="0.3" height="15.0" fill="rgb(228,109,10)" rx="2" ry="2" />
<text  x="955.20" y="799.5" ></text>
</g>
<g >
<title>__schedule (215 samples, 1.52%)</title><rect x="1163.9" y="693" width="17.9" height="15.0" fill="rgb(206,83,8)" rx="2" ry="2" />
<text  x="1166.90" y="703.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (39 samples, 0.28%)</title><rect x="860.8" y="261" width="3.3" height="15.0" fill="rgb(249,16,33)" rx="2" ry="2" />
<text  x="863.81" y="271.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (126 samples, 0.89%)</title><rect x="50.9" y="661" width="10.5" height="15.0" fill="rgb(243,187,11)" rx="2" ry="2" />
<text  x="53.86" y="671.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (120 samples, 0.85%)</title><rect x="90.3" y="821" width="10.0" height="15.0" fill="rgb(207,153,40)" rx="2" ry="2" />
<text  x="93.30" y="831.5" ></text>
</g>
<g >
<title>dyntick_save_progress_counter (4 samples, 0.03%)</title><rect x="956.1" y="773" width="0.4" height="15.0" fill="rgb(212,79,41)" rx="2" ry="2" />
<text  x="959.12" y="783.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8_unchecked (2 samples, 0.01%)</title><rect x="834.3" y="165" width="0.2" height="15.0" fill="rgb(235,99,20)" rx="2" ry="2" />
<text  x="837.30" y="175.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (48 samples, 0.34%)</title><rect x="856.8" y="437" width="4.0" height="15.0" fill="rgb(213,162,40)" rx="2" ry="2" />
<text  x="859.81" y="447.5" ></text>
</g>
<g >
<title>rcu_gp_cleanup (2 samples, 0.01%)</title><rect x="27.2" y="789" width="0.1" height="15.0" fill="rgb(209,131,44)" rx="2" ry="2" />
<text  x="30.18" y="799.5" ></text>
</g>
<g >
<title>ip_list_rcv (12 samples, 0.08%)</title><rect x="986.0" y="517" width="1.0" height="15.0" fill="rgb(230,52,2)" rx="2" ry="2" />
<text  x="988.97" y="527.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (4 samples, 0.03%)</title><rect x="831.1" y="53" width="0.4" height="15.0" fill="rgb(224,88,14)" rx="2" ry="2" />
<text  x="834.13" y="63.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.02%)</title><rect x="837.0" y="165" width="0.2" height="15.0" fill="rgb(251,59,18)" rx="2" ry="2" />
<text  x="839.97" y="175.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="536.7" y="229" width="0.2" height="15.0" fill="rgb(205,166,9)" rx="2" ry="2" />
<text  x="539.71" y="239.5" ></text>
</g>
<g >
<title>do_writepages (30 samples, 0.21%)</title><rect x="976.0" y="661" width="2.5" height="15.0" fill="rgb(205,66,5)" rx="2" ry="2" />
<text  x="978.96" y="671.5" ></text>
</g>
<g >
<title>__update_blocked_fair (2 samples, 0.01%)</title><rect x="29.0" y="613" width="0.2" height="15.0" fill="rgb(207,13,51)" rx="2" ry="2" />
<text  x="32.01" y="623.5" ></text>
</g>
<g >
<title>process_timeout (7 samples, 0.05%)</title><rect x="32.5" y="581" width="0.6" height="15.0" fill="rgb(237,151,32)" rx="2" ry="2" />
<text  x="35.51" y="591.5" ></text>
</g>
<g >
<title>alx_clean_tx_irq (5 samples, 0.04%)</title><rect x="984.5" y="581" width="0.4" height="15.0" fill="rgb(242,133,48)" rx="2" ry="2" />
<text  x="987.47" y="591.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (3 samples, 0.02%)</title><rect x="769.1" y="117" width="0.2" height="15.0" fill="rgb(253,154,24)" rx="2" ry="2" />
<text  x="772.10" y="127.5" ></text>
</g>
<g >
<title>NaClValidateCode (2 samples, 0.01%)</title><rect x="114.5" y="757" width="0.1" height="15.0" fill="rgb(239,228,9)" rx="2" ry="2" />
<text  x="117.48" y="767.5" ></text>
</g>
<g >
<title>__dentry_kill (5 samples, 0.04%)</title><rect x="500.2" y="405" width="0.4" height="15.0" fill="rgb(215,166,28)" rx="2" ry="2" />
<text  x="503.19" y="415.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (18 samples, 0.13%)</title><rect x="493.4" y="661" width="1.5" height="15.0" fill="rgb(220,171,43)" rx="2" ry="2" />
<text  x="496.44" y="671.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::len (2 samples, 0.01%)</title><rect x="533.3" y="277" width="0.2" height="15.0" fill="rgb(238,118,6)" rx="2" ry="2" />
<text  x="536.30" y="287.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (4 samples, 0.03%)</title><rect x="1153.6" y="645" width="0.4" height="15.0" fill="rgb(211,81,39)" rx="2" ry="2" />
<text  x="1156.65" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="855.6" y="229" width="0.4" height="15.0" fill="rgb(234,21,24)" rx="2" ry="2" />
<text  x="858.64" y="239.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (3 samples, 0.02%)</title><rect x="547.6" y="181" width="0.2" height="15.0" fill="rgb(215,114,20)" rx="2" ry="2" />
<text  x="550.55" y="191.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (16 samples, 0.11%)</title><rect x="739.7" y="245" width="1.4" height="15.0" fill="rgb(229,112,39)" rx="2" ry="2" />
<text  x="742.75" y="255.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.01%)</title><rect x="856.0" y="341" width="0.1" height="15.0" fill="rgb(217,38,41)" rx="2" ry="2" />
<text  x="858.98" y="351.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="849.9" y="197" width="0.2" height="15.0" fill="rgb(214,185,26)" rx="2" ry="2" />
<text  x="852.89" y="207.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (65 samples, 0.46%)</title><rect x="689.2" y="309" width="5.4" height="15.0" fill="rgb(248,85,38)" rx="2" ry="2" />
<text  x="692.22" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.05%)</title><rect x="114.8" y="629" width="0.6" height="15.0" fill="rgb(228,54,0)" rx="2" ry="2" />
<text  x="117.81" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (76 samples, 0.54%)</title><rect x="688.3" y="437" width="6.3" height="15.0" fill="rgb(214,127,35)" rx="2" ry="2" />
<text  x="691.30" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.15%)</title><rect x="810.5" y="133" width="1.8" height="15.0" fill="rgb(212,33,49)" rx="2" ry="2" />
<text  x="813.54" y="143.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.05%)</title><rect x="542.4" y="277" width="0.6" height="15.0" fill="rgb(230,186,46)" rx="2" ry="2" />
<text  x="545.38" y="287.5" ></text>
</g>
<g >
<title>psi_group_change (8 samples, 0.06%)</title><rect x="1180.4" y="661" width="0.7" height="15.0" fill="rgb(240,219,35)" rx="2" ry="2" />
<text  x="1183.41" y="671.5" ></text>
</g>
<g >
<title>resched_curr (6 samples, 0.04%)</title><rect x="1079.0" y="437" width="0.5" height="15.0" fill="rgb(223,139,5)" rx="2" ry="2" />
<text  x="1082.02" y="447.5" ></text>
</g>
<g >
<title>iput (5 samples, 0.04%)</title><rect x="500.2" y="373" width="0.4" height="15.0" fill="rgb(232,201,40)" rx="2" ry="2" />
<text  x="503.19" y="383.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (16 samples, 0.11%)</title><rect x="540.1" y="325" width="1.4" height="15.0" fill="rgb(225,43,49)" rx="2" ry="2" />
<text  x="543.13" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.07%)</title><rect x="609.7" y="181" width="0.8" height="15.0" fill="rgb(226,187,21)" rx="2" ry="2" />
<text  x="612.67" y="191.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (4 samples, 0.03%)</title><rect x="808.9" y="821" width="0.3" height="15.0" fill="rgb(245,101,28)" rx="2" ry="2" />
<text  x="811.87" y="831.5" ></text>
</g>
<g >
<title>NaClSysWaitpid (4,256 samples, 30.07%)</title><rect x="121.9" y="789" width="354.9" height="15.0" fill="rgb(215,26,4)" rx="2" ry="2" />
<text  x="124.90" y="799.5" >NaClSysWaitpid</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (4 samples, 0.03%)</title><rect x="856.0" y="389" width="0.3" height="15.0" fill="rgb(243,45,53)" rx="2" ry="2" />
<text  x="858.98" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.10%)</title><rect x="487.1" y="725" width="1.2" height="15.0" fill="rgb(231,183,44)" rx="2" ry="2" />
<text  x="490.10" y="735.5" ></text>
</g>
<g >
<title>__next_timer_interrupt (9 samples, 0.06%)</title><rect x="1070.0" y="533" width="0.8" height="15.0" fill="rgb(213,50,5)" rx="2" ry="2" />
<text  x="1073.02" y="543.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 0.03%)</title><rect x="855.6" y="341" width="0.4" height="15.0" fill="rgb(244,170,31)" rx="2" ry="2" />
<text  x="858.64" y="351.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (215 samples, 1.52%)</title><rect x="724.9" y="549" width="17.9" height="15.0" fill="rgb(225,48,35)" rx="2" ry="2" />
<text  x="727.90" y="559.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (4 samples, 0.03%)</title><rect x="952.2" y="805" width="0.3" height="15.0" fill="rgb(224,138,14)" rx="2" ry="2" />
<text  x="955.20" y="815.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (43 samples, 0.30%)</title><rect x="857.2" y="341" width="3.6" height="15.0" fill="rgb(221,225,29)" rx="2" ry="2" />
<text  x="860.23" y="351.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="888.7" y="837" width="0.2" height="15.0" fill="rgb(210,81,31)" rx="2" ry="2" />
<text  x="891.75" y="847.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (76 samples, 0.54%)</title><rect x="688.3" y="741" width="6.3" height="15.0" fill="rgb(230,23,7)" rx="2" ry="2" />
<text  x="691.30" y="751.5" ></text>
</g>
<g >
<title>wake_up_process (7 samples, 0.05%)</title><rect x="32.5" y="565" width="0.6" height="15.0" fill="rgb(223,5,46)" rx="2" ry="2" />
<text  x="35.51" y="575.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.01%)</title><rect x="83.1" y="821" width="0.2" height="15.0" fill="rgb(254,88,24)" rx="2" ry="2" />
<text  x="86.12" y="831.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (221 samples, 1.56%)</title><rect x="724.4" y="789" width="18.4" height="15.0" fill="rgb(235,84,24)" rx="2" ry="2" />
<text  x="727.40" y="799.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (198 samples, 1.40%)</title><rect x="726.3" y="373" width="16.5" height="15.0" fill="rgb(219,198,14)" rx="2" ry="2" />
<text  x="729.32" y="383.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (248 samples, 1.75%)</title><rect x="743.6" y="277" width="20.7" height="15.0" fill="rgb(232,134,16)" rx="2" ry="2" />
<text  x="746.58" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (19 samples, 0.13%)</title><rect x="517.6" y="357" width="1.6" height="15.0" fill="rgb(247,160,2)" rx="2" ry="2" />
<text  x="520.62" y="367.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (255 samples, 1.80%)</title><rect x="743.0" y="389" width="21.3" height="15.0" fill="rgb(224,55,16)" rx="2" ry="2" />
<text  x="746.00" y="399.5" >&lt;..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (8 samples, 0.06%)</title><rect x="775.4" y="197" width="0.7" height="15.0" fill="rgb(247,147,45)" rx="2" ry="2" />
<text  x="778.43" y="207.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (2,390 samples, 16.89%)</title><rect x="486.2" y="757" width="199.3" height="15.0" fill="rgb(239,135,5)" rx="2" ry="2" />
<text  x="489.19" y="767.5" >NaClHostDescWrite</text>
</g>
<g >
<title>jbd2__journal_start (2 samples, 0.01%)</title><rect x="495.4" y="341" width="0.1" height="15.0" fill="rgb(245,18,0)" rx="2" ry="2" />
<text  x="498.36" y="351.5" ></text>
</g>
<g >
<title>[librustposix.so] (51 samples, 0.36%)</title><rect x="789.4" y="821" width="4.2" height="15.0" fill="rgb(248,154,7)" rx="2" ry="2" />
<text  x="792.36" y="831.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1,982 samples, 14.01%)</title><rect x="519.5" y="421" width="165.3" height="15.0" fill="rgb(214,92,37)" rx="2" ry="2" />
<text  x="522.54" y="431.5" >&lt;serde_json::ser::Com..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.01%)</title><rect x="525.6" y="229" width="0.2" height="15.0" fill="rgb(251,197,46)" rx="2" ry="2" />
<text  x="528.62" y="239.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (300 samples, 2.12%)</title><rect x="764.3" y="437" width="25.1" height="15.0" fill="rgb(249,60,28)" rx="2" ry="2" />
<text  x="767.34" y="447.5" >s..</text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="856.8" y="293" width="0.3" height="15.0" fill="rgb(246,56,53)" rx="2" ry="2" />
<text  x="859.81" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (71 samples, 0.50%)</title><rect x="628.4" y="197" width="6.0" height="15.0" fill="rgb(211,131,39)" rx="2" ry="2" />
<text  x="631.43" y="207.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (4 samples, 0.03%)</title><rect x="513.8" y="277" width="0.3" height="15.0" fill="rgb(234,224,35)" rx="2" ry="2" />
<text  x="516.78" y="287.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (12 samples, 0.08%)</title><rect x="859.8" y="213" width="1.0" height="15.0" fill="rgb(235,169,34)" rx="2" ry="2" />
<text  x="862.81" y="223.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (300 samples, 2.12%)</title><rect x="764.3" y="693" width="25.1" height="15.0" fill="rgb(221,97,4)" rx="2" ry="2" />
<text  x="767.34" y="703.5" >r..</text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 0.01%)</title><rect x="1184.9" y="693" width="0.2" height="15.0" fill="rgb(205,12,47)" rx="2" ry="2" />
<text  x="1187.91" y="703.5" ></text>
</g>
<g >
<title>native_read_msr (9 samples, 0.06%)</title><rect x="1040.3" y="469" width="0.8" height="15.0" fill="rgb(231,73,25)" rx="2" ry="2" />
<text  x="1043.33" y="479.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (36 samples, 0.25%)</title><rect x="766.3" y="229" width="3.0" height="15.0" fill="rgb(217,27,9)" rx="2" ry="2" />
<text  x="769.34" y="239.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (5 samples, 0.04%)</title><rect x="518.2" y="309" width="0.4" height="15.0" fill="rgb(206,141,15)" rx="2" ry="2" />
<text  x="521.20" y="319.5" ></text>
</g>
<g >
<title>new_sync_write (8 samples, 0.06%)</title><rect x="15.3" y="597" width="0.7" height="15.0" fill="rgb(214,18,17)" rx="2" ry="2" />
<text  x="18.34" y="607.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (5 samples, 0.04%)</title><rect x="856.0" y="581" width="0.4" height="15.0" fill="rgb(207,22,23)" rx="2" ry="2" />
<text  x="858.98" y="591.5" ></text>
</g>
<g >
<title>core::mem::uninitialized (33 samples, 0.23%)</title><rect x="640.1" y="229" width="2.8" height="15.0" fill="rgb(223,68,32)" rx="2" ry="2" />
<text  x="643.11" y="239.5" ></text>
</g>
<g >
<title>__evlist__enable (64 samples, 0.45%)</title><rect x="10.0" y="789" width="5.3" height="15.0" fill="rgb(231,35,2)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.01%)</title><rect x="856.1" y="341" width="0.2" height="15.0" fill="rgb(221,206,29)" rx="2" ry="2" />
<text  x="859.14" y="351.5" ></text>
</g>
<g >
<title>generic_write_end (10 samples, 0.07%)</title><rect x="496.9" y="357" width="0.8" height="15.0" fill="rgb(231,177,33)" rx="2" ry="2" />
<text  x="499.86" y="367.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.01%)</title><rect x="1180.9" y="613" width="0.2" height="15.0" fill="rgb(215,200,52)" rx="2" ry="2" />
<text  x="1183.91" y="623.5" ></text>
</g>
<g >
<title>do_group_exit (3 samples, 0.02%)</title><rect x="888.9" y="725" width="0.3" height="15.0" fill="rgb(231,159,12)" rx="2" ry="2" />
<text  x="891.91" y="735.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.04%)</title><rect x="549.6" y="245" width="0.4" height="15.0" fill="rgb(240,145,20)" rx="2" ry="2" />
<text  x="552.55" y="255.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (6 samples, 0.04%)</title><rect x="536.0" y="229" width="0.5" height="15.0" fill="rgb(242,220,28)" rx="2" ry="2" />
<text  x="539.05" y="239.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (9 samples, 0.06%)</title><rect x="888.0" y="837" width="0.7" height="15.0" fill="rgb(207,47,44)" rx="2" ry="2" />
<text  x="891.00" y="847.5" ></text>
</g>
<g >
<title>dequeue_task (6 samples, 0.04%)</title><rect x="28.1" y="725" width="0.5" height="15.0" fill="rgb(206,133,6)" rx="2" ry="2" />
<text  x="31.09" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (557 samples, 3.94%)</title><rect x="809.5" y="773" width="46.5" height="15.0" fill="rgb(221,34,54)" rx="2" ry="2" />
<text  x="812.54" y="783.5" >rust..</text>
</g>
<g >
<title>do_softirq_own_stack (48 samples, 0.34%)</title><rect x="983.2" y="677" width="4.0" height="15.0" fill="rgb(236,192,43)" rx="2" ry="2" />
<text  x="986.22" y="687.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (3 samples, 0.02%)</title><rect x="494.7" y="389" width="0.2" height="15.0" fill="rgb(215,41,29)" rx="2" ry="2" />
<text  x="497.69" y="399.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (43 samples, 0.30%)</title><rect x="857.2" y="389" width="3.6" height="15.0" fill="rgb(207,158,34)" rx="2" ry="2" />
<text  x="860.23" y="399.5" ></text>
</g>
<g >
<title>lind_write (76 samples, 0.54%)</title><rect x="688.3" y="789" width="6.3" height="15.0" fill="rgb(229,47,28)" rx="2" ry="2" />
<text  x="691.30" y="799.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (22 samples, 0.16%)</title><rect x="832.6" y="197" width="1.9" height="15.0" fill="rgb(206,189,43)" rx="2" ry="2" />
<text  x="835.63" y="207.5" ></text>
</g>
<g >
<title>tick_irq_enter (2 samples, 0.01%)</title><rect x="46.1" y="613" width="0.2" height="15.0" fill="rgb(211,64,26)" rx="2" ry="2" />
<text  x="49.10" y="623.5" ></text>
</g>
<g >
<title>iput_final (7 samples, 0.05%)</title><rect x="114.8" y="373" width="0.6" height="15.0" fill="rgb(221,60,0)" rx="2" ry="2" />
<text  x="117.81" y="383.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (3 samples, 0.02%)</title><rect x="115.1" y="213" width="0.3" height="15.0" fill="rgb(241,60,22)" rx="2" ry="2" />
<text  x="118.14" y="223.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (8 samples, 0.06%)</title><rect x="516.4" y="245" width="0.6" height="15.0" fill="rgb(234,228,48)" rx="2" ry="2" />
<text  x="519.37" y="255.5" ></text>
</g>
<g >
<title>exit_mmap (3 samples, 0.02%)</title><rect x="888.9" y="661" width="0.3" height="15.0" fill="rgb(218,119,54)" rx="2" ry="2" />
<text  x="891.91" y="671.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2,207 samples, 15.59%)</title><rect x="500.9" y="565" width="184.0" height="15.0" fill="rgb(207,192,29)" rx="2" ry="2" />
<text  x="503.86" y="575.5" >serde::ser::SerializeMa..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (255 samples, 1.80%)</title><rect x="743.0" y="421" width="21.3" height="15.0" fill="rgb(254,12,17)" rx="2" ry="2" />
<text  x="746.00" y="431.5" >s..</text>
</g>
<g >
<title>tick_program_event (4 samples, 0.03%)</title><rect x="1188.2" y="645" width="0.3" height="15.0" fill="rgb(234,123,31)" rx="2" ry="2" />
<text  x="1191.17" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (215 samples, 1.52%)</title><rect x="724.9" y="741" width="17.9" height="15.0" fill="rgb(250,82,2)" rx="2" ry="2" />
<text  x="727.90" y="751.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (4 samples, 0.03%)</title><rect x="742.5" y="325" width="0.3" height="15.0" fill="rgb(216,81,18)" rx="2" ry="2" />
<text  x="745.50" y="335.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (8 samples, 0.06%)</title><rect x="741.7" y="229" width="0.7" height="15.0" fill="rgb(211,49,41)" rx="2" ry="2" />
<text  x="744.75" y="239.5" ></text>
</g>
<g >
<title>worker_thread (65 samples, 0.46%)</title><rect x="974.3" y="805" width="5.4" height="15.0" fill="rgb(206,5,21)" rx="2" ry="2" />
<text  x="977.29" y="815.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (2 samples, 0.01%)</title><rect x="681.2" y="245" width="0.2" height="15.0" fill="rgb(224,176,17)" rx="2" ry="2" />
<text  x="684.21" y="255.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4 samples, 0.03%)</title><rect x="497.7" y="357" width="0.3" height="15.0" fill="rgb(236,224,0)" rx="2" ry="2" />
<text  x="500.69" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (3 samples, 0.02%)</title><rect x="654.5" y="165" width="0.3" height="15.0" fill="rgb(206,57,14)" rx="2" ry="2" />
<text  x="657.53" y="175.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (3 samples, 0.02%)</title><rect x="114.5" y="805" width="0.2" height="15.0" fill="rgb(244,215,25)" rx="2" ry="2" />
<text  x="117.48" y="815.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23 samples, 0.16%)</title><rect x="673.9" y="293" width="1.9" height="15.0" fill="rgb(213,136,43)" rx="2" ry="2" />
<text  x="676.88" y="303.5" ></text>
</g>
<g >
<title>intel_idle (2 samples, 0.01%)</title><rect x="1143.8" y="677" width="0.2" height="15.0" fill="rgb(223,185,18)" rx="2" ry="2" />
<text  x="1146.81" y="687.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (11 samples, 0.08%)</title><rect x="805.9" y="821" width="1.0" height="15.0" fill="rgb(234,70,37)" rx="2" ry="2" />
<text  x="808.95" y="831.5" ></text>
</g>
<g >
<title>rcu_irq_exit (3 samples, 0.02%)</title><rect x="1081.1" y="629" width="0.3" height="15.0" fill="rgb(207,29,0)" rx="2" ry="2" />
<text  x="1084.11" y="639.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5 samples, 0.04%)</title><rect x="42.0" y="677" width="0.4" height="15.0" fill="rgb(209,215,40)" rx="2" ry="2" />
<text  x="45.02" y="687.5" ></text>
</g>
<g >
<title>ext4_writepages (30 samples, 0.21%)</title><rect x="976.0" y="645" width="2.5" height="15.0" fill="rgb(206,35,30)" rx="2" ry="2" />
<text  x="978.96" y="655.5" ></text>
</g>
<g >
<title>_raw_spin_lock (8 samples, 0.06%)</title><rect x="1035.9" y="501" width="0.7" height="15.0" fill="rgb(223,98,24)" rx="2" ry="2" />
<text  x="1038.91" y="511.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (4 samples, 0.03%)</title><rect x="828.5" y="149" width="0.4" height="15.0" fill="rgb(211,28,36)" rx="2" ry="2" />
<text  x="831.55" y="159.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (4 samples, 0.03%)</title><rect x="683.9" y="325" width="0.3" height="15.0" fill="rgb(238,194,11)" rx="2" ry="2" />
<text  x="686.88" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.05%)</title><rect x="523.4" y="229" width="0.6" height="15.0" fill="rgb(209,20,53)" rx="2" ry="2" />
<text  x="526.37" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (28 samples, 0.20%)</title><rect x="546.1" y="325" width="2.3" height="15.0" fill="rgb(246,186,0)" rx="2" ry="2" />
<text  x="549.05" y="335.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (3 samples, 0.02%)</title><rect x="43.7" y="485" width="0.2" height="15.0" fill="rgb(248,186,9)" rx="2" ry="2" />
<text  x="46.69" y="495.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.01%)</title><rect x="952.8" y="741" width="0.1" height="15.0" fill="rgb(213,181,24)" rx="2" ry="2" />
<text  x="955.78" y="751.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (12 samples, 0.08%)</title><rect x="743.6" y="133" width="1.0" height="15.0" fill="rgb(216,107,13)" rx="2" ry="2" />
<text  x="746.58" y="143.5" ></text>
</g>
<g >
<title>lind_write (255 samples, 1.80%)</title><rect x="743.0" y="757" width="21.3" height="15.0" fill="rgb(224,91,50)" rx="2" ry="2" />
<text  x="746.00" y="767.5" >l..</text>
</g>
<g >
<title>cpu_startup_entry (344 samples, 2.43%)</title><rect x="41.4" y="741" width="28.7" height="15.0" fill="rgb(221,134,24)" rx="2" ry="2" />
<text  x="44.43" y="751.5" >cp..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (4 samples, 0.03%)</title><rect x="875.2" y="501" width="0.3" height="15.0" fill="rgb(230,58,19)" rx="2" ry="2" />
<text  x="878.16" y="511.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (2,032 samples, 14.36%)</title><rect x="1020.6" y="805" width="169.4" height="15.0" fill="rgb(249,105,15)" rx="2" ry="2" />
<text  x="1023.57" y="815.5" >x86_64_start_reservat..</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.01%)</title><rect x="688.3" y="373" width="0.2" height="15.0" fill="rgb(231,15,35)" rx="2" ry="2" />
<text  x="691.30" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (557 samples, 3.94%)</title><rect x="809.5" y="693" width="46.5" height="15.0" fill="rgb(229,131,44)" rx="2" ry="2" />
<text  x="812.54" y="703.5" >rust..</text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.01%)</title><rect x="963.8" y="709" width="0.2" height="15.0" fill="rgb(230,194,27)" rx="2" ry="2" />
<text  x="966.79" y="719.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.01%)</title><rect x="726.0" y="181" width="0.2" height="15.0" fill="rgb(230,71,4)" rx="2" ry="2" />
<text  x="728.99" y="191.5" ></text>
</g>
<g >
<title>block_invalidatepage (3 samples, 0.02%)</title><rect x="500.3" y="229" width="0.2" height="15.0" fill="rgb(227,119,50)" rx="2" ry="2" />
<text  x="503.28" y="239.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (736 samples, 5.20%)</title><rect x="550.6" y="309" width="61.4" height="15.0" fill="rgb(235,217,12)" rx="2" ry="2" />
<text  x="553.64" y="319.5" >&lt;serde..</text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (6 samples, 0.04%)</title><rect x="712.4" y="245" width="0.5" height="15.0" fill="rgb(236,100,21)" rx="2" ry="2" />
<text  x="715.40" y="255.5" ></text>
</g>
<g >
<title>generic_write_end (3 samples, 0.02%)</title><rect x="494.4" y="373" width="0.3" height="15.0" fill="rgb(248,172,38)" rx="2" ry="2" />
<text  x="497.44" y="383.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (4 samples, 0.03%)</title><rect x="835.9" y="133" width="0.3" height="15.0" fill="rgb(252,186,43)" rx="2" ry="2" />
<text  x="838.88" y="143.5" ></text>
</g>
<g >
<title>tick_sched_timer (3 samples, 0.02%)</title><rect x="31.8" y="613" width="0.3" height="15.0" fill="rgb(219,57,22)" rx="2" ry="2" />
<text  x="34.85" y="623.5" ></text>
</g>
<g >
<title>cpumask_next_and (2 samples, 0.01%)</title><rect x="1177.2" y="613" width="0.1" height="15.0" fill="rgb(216,154,51)" rx="2" ry="2" />
<text  x="1180.16" y="623.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.02%)</title><rect x="973.8" y="773" width="0.2" height="15.0" fill="rgb(244,59,50)" rx="2" ry="2" />
<text  x="976.79" y="783.5" ></text>
</g>
<g >
<title>__switch_to (2 samples, 0.01%)</title><rect x="1165.3" y="677" width="0.2" height="15.0" fill="rgb(240,81,35)" rx="2" ry="2" />
<text  x="1168.32" y="687.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (12 samples, 0.08%)</title><rect x="989.2" y="613" width="1.0" height="15.0" fill="rgb(229,61,31)" rx="2" ry="2" />
<text  x="992.22" y="623.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (2 samples, 0.01%)</title><rect x="1178.2" y="661" width="0.2" height="15.0" fill="rgb(213,224,49)" rx="2" ry="2" />
<text  x="1181.24" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.13%)</title><rect x="727.9" y="165" width="1.6" height="15.0" fill="rgb(227,70,17)" rx="2" ry="2" />
<text  x="730.91" y="175.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (68 samples, 0.48%)</title><rect x="766.3" y="309" width="5.7" height="15.0" fill="rgb(220,208,7)" rx="2" ry="2" />
<text  x="769.34" y="319.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.02%)</title><rect x="681.8" y="261" width="0.2" height="15.0" fill="rgb(239,146,34)" rx="2" ry="2" />
<text  x="684.80" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="875.2" y="357" width="0.2" height="15.0" fill="rgb(240,146,35)" rx="2" ry="2" />
<text  x="878.16" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (12 samples, 0.08%)</title><rect x="854.3" y="197" width="1.0" height="15.0" fill="rgb(238,31,50)" rx="2" ry="2" />
<text  x="857.31" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="102.2" y="821" width="0.2" height="15.0" fill="rgb(228,107,33)" rx="2" ry="2" />
<text  x="105.22" y="831.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (53 samples, 0.37%)</title><rect x="46.4" y="597" width="4.4" height="15.0" fill="rgb(252,110,16)" rx="2" ry="2" />
<text  x="49.35" y="607.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (6 samples, 0.04%)</title><rect x="536.0" y="213" width="0.5" height="15.0" fill="rgb(252,229,30)" rx="2" ry="2" />
<text  x="539.05" y="223.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (3 samples, 0.02%)</title><rect x="1142.1" y="645" width="0.3" height="15.0" fill="rgb(221,203,27)" rx="2" ry="2" />
<text  x="1145.14" y="655.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (2 samples, 0.01%)</title><rect x="542.2" y="229" width="0.2" height="15.0" fill="rgb(252,18,45)" rx="2" ry="2" />
<text  x="545.22" y="239.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (12 samples, 0.08%)</title><rect x="32.3" y="677" width="1.0" height="15.0" fill="rgb(208,201,46)" rx="2" ry="2" />
<text  x="35.26" y="687.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.04%)</title><rect x="549.6" y="229" width="0.4" height="15.0" fill="rgb(244,90,33)" rx="2" ry="2" />
<text  x="552.55" y="239.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.04%)</title><rect x="856.0" y="629" width="0.4" height="15.0" fill="rgb(234,111,32)" rx="2" ry="2" />
<text  x="858.98" y="639.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (31 samples, 0.22%)</title><rect x="543.1" y="277" width="2.5" height="15.0" fill="rgb(228,219,5)" rx="2" ry="2" />
<text  x="546.05" y="287.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (215 samples, 1.52%)</title><rect x="724.9" y="613" width="17.9" height="15.0" fill="rgb(206,185,50)" rx="2" ry="2" />
<text  x="727.90" y="623.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.01%)</title><rect x="975.6" y="677" width="0.2" height="15.0" fill="rgb(211,109,54)" rx="2" ry="2" />
<text  x="978.63" y="687.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (6 samples, 0.04%)</title><rect x="500.2" y="453" width="0.5" height="15.0" fill="rgb(249,120,34)" rx="2" ry="2" />
<text  x="503.19" y="463.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (215 samples, 1.52%)</title><rect x="724.9" y="437" width="17.9" height="15.0" fill="rgb(241,187,19)" rx="2" ry="2" />
<text  x="727.90" y="447.5" ></text>
</g>
<g >
<title>&lt;u32 as itoa::Integer&gt;::write (61 samples, 0.43%)</title><rect x="772.0" y="229" width="5.1" height="15.0" fill="rgb(240,169,31)" rx="2" ry="2" />
<text  x="775.01" y="239.5" ></text>
</g>
<g >
<title>do_dentry_open (3 samples, 0.02%)</title><rect x="499.1" y="325" width="0.3" height="15.0" fill="rgb(239,104,52)" rx="2" ry="2" />
<text  x="502.11" y="335.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (2 samples, 0.01%)</title><rect x="986.8" y="437" width="0.2" height="15.0" fill="rgb(210,56,28)" rx="2" ry="2" />
<text  x="989.80" y="447.5" ></text>
</g>
<g >
<title>timerqueue_iterate_next (2 samples, 0.01%)</title><rect x="1153.5" y="629" width="0.1" height="15.0" fill="rgb(208,210,37)" rx="2" ry="2" />
<text  x="1156.48" y="639.5" ></text>
</g>
<g >
<title>newidle_balance (145 samples, 1.02%)</title><rect x="1166.2" y="661" width="12.0" height="15.0" fill="rgb(246,86,35)" rx="2" ry="2" />
<text  x="1169.15" y="671.5" ></text>
</g>
<g >
<title>menu_update (2 samples, 0.01%)</title><rect x="63.4" y="661" width="0.1" height="15.0" fill="rgb(232,169,23)" rx="2" ry="2" />
<text  x="66.36" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="888.9" y="821" width="0.3" height="15.0" fill="rgb(250,7,9)" rx="2" ry="2" />
<text  x="891.91" y="831.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (3 samples, 0.02%)</title><rect x="688.6" y="229" width="0.2" height="15.0" fill="rgb(216,42,4)" rx="2" ry="2" />
<text  x="691.55" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="789.5" y="805" width="0.2" height="15.0" fill="rgb(240,171,18)" rx="2" ry="2" />
<text  x="792.52" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.04%)</title><rect x="525.8" y="229" width="0.5" height="15.0" fill="rgb(252,189,22)" rx="2" ry="2" />
<text  x="528.79" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="764.0" y="197" width="0.2" height="15.0" fill="rgb(224,139,20)" rx="2" ry="2" />
<text  x="767.01" y="207.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.01%)</title><rect x="107.2" y="821" width="0.2" height="15.0" fill="rgb(211,19,25)" rx="2" ry="2" />
<text  x="110.22" y="831.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (3 samples, 0.02%)</title><rect x="1185.9" y="613" width="0.3" height="15.0" fill="rgb(229,139,31)" rx="2" ry="2" />
<text  x="1188.91" y="623.5" ></text>
</g>
<g >
<title>lapic_next_deadline (2 samples, 0.01%)</title><rect x="1048.7" y="549" width="0.1" height="15.0" fill="rgb(228,55,2)" rx="2" ry="2" />
<text  x="1051.67" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="545.8" y="213" width="0.2" height="15.0" fill="rgb(206,50,20)" rx="2" ry="2" />
<text  x="548.80" y="223.5" ></text>
</g>
<g >
<title>tick_nohz_restart (4 samples, 0.03%)</title><rect x="69.2" y="693" width="0.3" height="15.0" fill="rgb(240,31,8)" rx="2" ry="2" />
<text  x="72.20" y="703.5" ></text>
</g>
<g >
<title>_int_realloc (3 samples, 0.02%)</title><rect x="855.7" y="117" width="0.3" height="15.0" fill="rgb(247,157,53)" rx="2" ry="2" />
<text  x="858.73" y="127.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (261 samples, 1.84%)</title><rect x="810.1" y="213" width="21.8" height="15.0" fill="rgb(237,134,42)" rx="2" ry="2" />
<text  x="813.12" y="223.5" >&lt;..</text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (229 samples, 1.62%)</title><rect x="697.4" y="773" width="19.1" height="15.0" fill="rgb(237,27,52)" rx="2" ry="2" />
<text  x="700.39" y="783.5" ></text>
</g>
<g >
<title>psi_task_change (2 samples, 0.01%)</title><rect x="971.5" y="725" width="0.2" height="15.0" fill="rgb(223,82,12)" rx="2" ry="2" />
<text  x="974.54" y="735.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::new (19 samples, 0.13%)</title><rect x="498.2" y="645" width="1.6" height="15.0" fill="rgb(216,58,46)" rx="2" ry="2" />
<text  x="501.19" y="655.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.01%)</title><rect x="684.3" y="309" width="0.2" height="15.0" fill="rgb(212,29,45)" rx="2" ry="2" />
<text  x="687.30" y="319.5" ></text>
</g>
<g >
<title>do_readlinkat (4 samples, 0.03%)</title><rect x="499.8" y="517" width="0.3" height="15.0" fill="rgb(246,68,44)" rx="2" ry="2" />
<text  x="502.78" y="527.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (68 samples, 0.48%)</title><rect x="766.3" y="245" width="5.7" height="15.0" fill="rgb(205,129,9)" rx="2" ry="2" />
<text  x="769.34" y="255.5" ></text>
</g>
<g >
<title>wake_up_process (99 samples, 0.70%)</title><rect x="1071.7" y="501" width="8.2" height="15.0" fill="rgb(232,178,1)" rx="2" ry="2" />
<text  x="1074.68" y="511.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (4 samples, 0.03%)</title><rect x="855.6" y="373" width="0.4" height="15.0" fill="rgb(246,113,50)" rx="2" ry="2" />
<text  x="858.64" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.02%)</title><rect x="800.2" y="821" width="0.2" height="15.0" fill="rgb(216,125,17)" rx="2" ry="2" />
<text  x="803.20" y="831.5" ></text>
</g>
<g >
<title>try_to_wake_up (7 samples, 0.05%)</title><rect x="32.5" y="549" width="0.6" height="15.0" fill="rgb(252,98,17)" rx="2" ry="2" />
<text  x="35.51" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.02%)</title><rect x="680.3" y="213" width="0.2" height="15.0" fill="rgb(223,29,40)" rx="2" ry="2" />
<text  x="683.30" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.03%)</title><rect x="858.7" y="165" width="0.4" height="15.0" fill="rgb(231,80,34)" rx="2" ry="2" />
<text  x="861.73" y="175.5" ></text>
</g>
<g >
<title>arch_call_rest_init (345 samples, 2.44%)</title><rect x="41.4" y="773" width="28.8" height="15.0" fill="rgb(228,148,30)" rx="2" ry="2" />
<text  x="44.43" y="783.5" >ar..</text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::next_n (5 samples, 0.04%)</title><rect x="502.9" y="405" width="0.4" height="15.0" fill="rgb(213,84,33)" rx="2" ry="2" />
<text  x="505.86" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.16%)</title><rect x="677.1" y="309" width="1.9" height="15.0" fill="rgb(213,75,18)" rx="2" ry="2" />
<text  x="680.13" y="319.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (4 samples, 0.03%)</title><rect x="532.8" y="277" width="0.3" height="15.0" fill="rgb(247,91,16)" rx="2" ry="2" />
<text  x="535.80" y="287.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.01%)</title><rect x="15.8" y="453" width="0.2" height="15.0" fill="rgb(245,165,4)" rx="2" ry="2" />
<text  x="18.84" y="463.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.01%)</title><rect x="532.0" y="277" width="0.1" height="15.0" fill="rgb(215,92,48)" rx="2" ry="2" />
<text  x="534.96" y="287.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (8 samples, 0.06%)</title><rect x="488.4" y="725" width="0.6" height="15.0" fill="rgb(224,220,45)" rx="2" ry="2" />
<text  x="491.35" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.06%)</title><rect x="525.6" y="245" width="0.7" height="15.0" fill="rgb(249,85,11)" rx="2" ry="2" />
<text  x="528.62" y="255.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.04%)</title><rect x="743.1" y="325" width="0.5" height="15.0" fill="rgb(245,199,25)" rx="2" ry="2" />
<text  x="746.08" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (25 samples, 0.18%)</title><rect x="534.8" y="261" width="2.1" height="15.0" fill="rgb(229,195,5)" rx="2" ry="2" />
<text  x="537.80" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (24 samples, 0.17%)</title><rect x="43.1" y="533" width="2.0" height="15.0" fill="rgb(241,80,21)" rx="2" ry="2" />
<text  x="46.10" y="543.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (3 samples, 0.02%)</title><rect x="549.3" y="229" width="0.3" height="15.0" fill="rgb(247,12,49)" rx="2" ry="2" />
<text  x="552.30" y="239.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (3 samples, 0.02%)</title><rect x="959.5" y="757" width="0.3" height="15.0" fill="rgb(241,79,0)" rx="2" ry="2" />
<text  x="962.54" y="767.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (467 samples, 3.30%)</title><rect x="979.9" y="773" width="38.9" height="15.0" fill="rgb(240,160,54)" rx="2" ry="2" />
<text  x="982.88" y="783.5" >cpu..</text>
</g>
<g >
<title>__napi_schedule (2 samples, 0.01%)</title><rect x="980.8" y="613" width="0.2" height="15.0" fill="rgb(213,194,41)" rx="2" ry="2" />
<text  x="983.80" y="623.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="664.5" y="181" width="0.2" height="15.0" fill="rgb(216,71,45)" rx="2" ry="2" />
<text  x="667.54" y="191.5" ></text>
</g>
<g >
<title>rcu_segcblist_pend_cbs (2 samples, 0.01%)</title><rect x="1055.8" y="501" width="0.2" height="15.0" fill="rgb(248,78,27)" rx="2" ry="2" />
<text  x="1058.84" y="511.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (8 samples, 0.06%)</title><rect x="31.2" y="645" width="0.6" height="15.0" fill="rgb(217,162,38)" rx="2" ry="2" />
<text  x="34.18" y="655.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (255 samples, 1.80%)</title><rect x="743.0" y="565" width="21.3" height="15.0" fill="rgb(225,29,10)" rx="2" ry="2" />
<text  x="746.00" y="575.5" >&lt;..</text>
</g>
<g >
<title>do_syscall_64 (63 samples, 0.45%)</title><rect x="10.1" y="709" width="5.2" height="15.0" fill="rgb(223,65,10)" rx="2" ry="2" />
<text  x="13.08" y="719.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (4 samples, 0.03%)</title><rect x="516.7" y="213" width="0.3" height="15.0" fill="rgb(228,217,52)" rx="2" ry="2" />
<text  x="519.70" y="223.5" ></text>
</g>
<g >
<title>__cmd_record (72 samples, 0.51%)</title><rect x="10.0" y="805" width="6.0" height="15.0" fill="rgb(209,174,28)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.01%)</title><rect x="44.8" y="421" width="0.1" height="15.0" fill="rgb(220,18,15)" rx="2" ry="2" />
<text  x="47.77" y="431.5" ></text>
</g>
<g >
<title>update_cpu_capacity (2 samples, 0.01%)</title><rect x="1063.2" y="469" width="0.1" height="15.0" fill="rgb(221,86,43)" rx="2" ry="2" />
<text  x="1066.18" y="479.5" ></text>
</g>
<g >
<title>update_curr (2 samples, 0.01%)</title><rect x="28.4" y="677" width="0.2" height="15.0" fill="rgb(245,149,12)" rx="2" ry="2" />
<text  x="31.43" y="687.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2 samples, 0.01%)</title><rect x="1079.8" y="485" width="0.1" height="15.0" fill="rgb(217,49,52)" rx="2" ry="2" />
<text  x="1082.77" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (24 samples, 0.17%)</title><rect x="630.4" y="165" width="2.0" height="15.0" fill="rgb(205,64,41)" rx="2" ry="2" />
<text  x="633.43" y="175.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (412 samples, 2.91%)</title><rect x="559.2" y="261" width="34.4" height="15.0" fill="rgb(212,23,10)" rx="2" ry="2" />
<text  x="562.23" y="271.5" >&lt;&amp;..</text>
</g>
<g >
<title>serde_json::ser::Formatter::end_object_value (4 samples, 0.03%)</title><rect x="545.3" y="165" width="0.3" height="15.0" fill="rgb(246,71,14)" rx="2" ry="2" />
<text  x="548.30" y="175.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.01%)</title><rect x="540.8" y="229" width="0.2" height="15.0" fill="rgb(222,87,12)" rx="2" ry="2" />
<text  x="543.80" y="239.5" ></text>
</g>
<g >
<title>enqueue_task (12 samples, 0.08%)</title><rect x="49.4" y="453" width="1.0" height="15.0" fill="rgb(251,31,32)" rx="2" ry="2" />
<text  x="52.36" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="875.2" y="69" width="0.1" height="15.0" fill="rgb(214,223,27)" rx="2" ry="2" />
<text  x="878.16" y="79.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (23 samples, 0.16%)</title><rect x="682.6" y="389" width="1.9" height="15.0" fill="rgb(213,200,23)" rx="2" ry="2" />
<text  x="685.63" y="399.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (65 samples, 0.46%)</title><rect x="689.2" y="357" width="5.4" height="15.0" fill="rgb(220,110,29)" rx="2" ry="2" />
<text  x="692.22" y="367.5" ></text>
</g>
<g >
<title>[[stack]] (55 samples, 0.39%)</title><rect x="83.7" y="837" width="4.6" height="15.0" fill="rgb(227,86,32)" rx="2" ry="2" />
<text  x="86.71" y="847.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (177 samples, 1.25%)</title><rect x="726.3" y="309" width="14.8" height="15.0" fill="rgb(214,56,17)" rx="2" ry="2" />
<text  x="729.32" y="319.5" ></text>
</g>
<g >
<title>ip_list_rcv (3 samples, 0.02%)</title><rect x="31.4" y="517" width="0.3" height="15.0" fill="rgb(205,106,17)" rx="2" ry="2" />
<text  x="34.43" y="527.5" ></text>
</g>
<g >
<title>ext4_writepages (8 samples, 0.06%)</title><rect x="978.5" y="661" width="0.6" height="15.0" fill="rgb(219,12,47)" rx="2" ry="2" />
<text  x="981.46" y="671.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (2 samples, 0.01%)</title><rect x="1177.2" y="597" width="0.1" height="15.0" fill="rgb(217,198,42)" rx="2" ry="2" />
<text  x="1180.16" y="607.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.01%)</title><rect x="688.3" y="389" width="0.2" height="15.0" fill="rgb(243,108,43)" rx="2" ry="2" />
<text  x="691.30" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::fs::File&gt; (2 samples, 0.01%)</title><rect x="494.9" y="549" width="0.2" height="15.0" fill="rgb(209,94,42)" rx="2" ry="2" />
<text  x="497.94" y="559.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (31 samples, 0.22%)</title><rect x="543.1" y="293" width="2.5" height="15.0" fill="rgb(250,212,5)" rx="2" ry="2" />
<text  x="546.05" y="303.5" ></text>
</g>
<g >
<title>core::ptr::metadata::metadata (4 samples, 0.03%)</title><rect x="841.5" y="229" width="0.3" height="15.0" fill="rgb(229,127,20)" rx="2" ry="2" />
<text  x="844.47" y="239.5" ></text>
</g>
<g >
<title>blk_mq_submit_bio (2 samples, 0.01%)</title><rect x="976.0" y="565" width="0.2" height="15.0" fill="rgb(242,13,40)" rx="2" ry="2" />
<text  x="979.05" y="575.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (447 samples, 3.16%)</title><rect x="980.4" y="741" width="37.3" height="15.0" fill="rgb(224,171,41)" rx="2" ry="2" />
<text  x="983.38" y="751.5" >cpu..</text>
</g>
<g >
<title>run_rebalance_domains (21 samples, 0.15%)</title><rect x="46.9" y="565" width="1.8" height="15.0" fill="rgb(235,48,11)" rx="2" ry="2" />
<text  x="49.94" y="575.5" ></text>
</g>
<g >
<title>alx_mask_msix (25 samples, 0.18%)</title><rect x="981.0" y="613" width="2.0" height="15.0" fill="rgb(236,185,44)" rx="2" ry="2" />
<text  x="983.97" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.02%)</title><rect x="837.3" y="133" width="0.3" height="15.0" fill="rgb(238,220,42)" rx="2" ry="2" />
<text  x="840.30" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.01%)</title><rect x="547.1" y="181" width="0.2" height="15.0" fill="rgb(247,46,26)" rx="2" ry="2" />
<text  x="550.14" y="191.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (276 samples, 1.95%)</title><rect x="766.3" y="357" width="23.1" height="15.0" fill="rgb(224,167,52)" rx="2" ry="2" />
<text  x="769.34" y="367.5" >r..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (4 samples, 0.03%)</title><rect x="875.2" y="805" width="0.3" height="15.0" fill="rgb(229,30,17)" rx="2" ry="2" />
<text  x="878.16" y="815.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (5 samples, 0.04%)</title><rect x="500.2" y="389" width="0.4" height="15.0" fill="rgb(205,32,45)" rx="2" ry="2" />
<text  x="503.19" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (20 samples, 0.14%)</title><rect x="599.7" y="197" width="1.6" height="15.0" fill="rgb(226,171,53)" rx="2" ry="2" />
<text  x="602.67" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.01%)</title><rect x="811.0" y="85" width="0.1" height="15.0" fill="rgb(251,192,25)" rx="2" ry="2" />
<text  x="813.95" y="95.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (14 samples, 0.10%)</title><rect x="725.1" y="261" width="1.1" height="15.0" fill="rgb(250,196,28)" rx="2" ry="2" />
<text  x="728.07" y="271.5" ></text>
</g>
<g >
<title>rb_erase (3 samples, 0.02%)</title><rect x="1033.2" y="549" width="0.3" height="15.0" fill="rgb(208,104,32)" rx="2" ry="2" />
<text  x="1036.24" y="559.5" ></text>
</g>
<g >
<title>native_apic_mem_write (10 samples, 0.07%)</title><rect x="1049.9" y="613" width="0.9" height="15.0" fill="rgb(229,221,34)" rx="2" ry="2" />
<text  x="1052.92" y="623.5" ></text>
</g>
<g >
<title>__run_hrtimer (188 samples, 1.33%)</title><rect x="1031.9" y="565" width="15.7" height="15.0" fill="rgb(246,126,13)" rx="2" ry="2" />
<text  x="1034.91" y="575.5" ></text>
</g>
<g >
<title>rustposix::interface::file::assert_is_allowed_filename (3 samples, 0.02%)</title><rect x="498.2" y="629" width="0.2" height="15.0" fill="rgb(209,120,42)" rx="2" ry="2" />
<text  x="501.19" y="639.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (2 samples, 0.01%)</title><rect x="979.7" y="773" width="0.2" height="15.0" fill="rgb(228,72,6)" rx="2" ry="2" />
<text  x="982.71" y="783.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.01%)</title><rect x="1034.0" y="533" width="0.2" height="15.0" fill="rgb(205,184,53)" rx="2" ry="2" />
<text  x="1037.00" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (23 samples, 0.16%)</title><rect x="988.3" y="645" width="1.9" height="15.0" fill="rgb(217,202,29)" rx="2" ry="2" />
<text  x="991.30" y="655.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (4 samples, 0.03%)</title><rect x="875.2" y="613" width="0.3" height="15.0" fill="rgb(226,47,6)" rx="2" ry="2" />
<text  x="878.16" y="623.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (76 samples, 0.54%)</title><rect x="688.3" y="661" width="6.3" height="15.0" fill="rgb(243,54,42)" rx="2" ry="2" />
<text  x="691.30" y="671.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (262 samples, 1.85%)</title><rect x="694.6" y="821" width="21.9" height="15.0" fill="rgb(239,228,14)" rx="2" ry="2" />
<text  x="697.64" y="831.5" >N..</text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.01%)</title><rect x="724.9" y="309" width="0.2" height="15.0" fill="rgb(220,95,10)" rx="2" ry="2" />
<text  x="727.90" y="319.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (221 samples, 1.56%)</title><rect x="856.7" y="517" width="18.5" height="15.0" fill="rgb(212,33,50)" rx="2" ry="2" />
<text  x="859.73" y="527.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (3 samples, 0.02%)</title><rect x="510.2" y="261" width="0.2" height="15.0" fill="rgb(207,176,13)" rx="2" ry="2" />
<text  x="513.20" y="271.5" ></text>
</g>
<g >
<title>kick_ilb (2 samples, 0.01%)</title><rect x="1019.4" y="693" width="0.2" height="15.0" fill="rgb(254,88,48)" rx="2" ry="2" />
<text  x="1022.40" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_openat (13 samples, 0.09%)</title><rect x="498.6" y="485" width="1.1" height="15.0" fill="rgb(216,90,5)" rx="2" ry="2" />
<text  x="501.61" y="495.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (8 samples, 0.06%)</title><rect x="859.1" y="149" width="0.6" height="15.0" fill="rgb(215,185,18)" rx="2" ry="2" />
<text  x="862.06" y="159.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (221 samples, 1.56%)</title><rect x="856.7" y="597" width="18.5" height="15.0" fill="rgb(232,149,39)" rx="2" ry="2" />
<text  x="859.73" y="607.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18 samples, 0.13%)</title><rect x="31.8" y="725" width="1.5" height="15.0" fill="rgb(239,81,40)" rx="2" ry="2" />
<text  x="34.85" y="735.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.01%)</title><rect x="664.1" y="149" width="0.2" height="15.0" fill="rgb(244,106,21)" rx="2" ry="2" />
<text  x="667.12" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.03%)</title><rect x="503.3" y="405" width="0.3" height="15.0" fill="rgb(207,100,1)" rx="2" ry="2" />
<text  x="506.28" y="415.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (111 samples, 0.78%)</title><rect x="627.0" y="245" width="9.3" height="15.0" fill="rgb(222,196,32)" rx="2" ry="2" />
<text  x="630.02" y="255.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (29 samples, 0.20%)</title><rect x="508.0" y="325" width="2.4" height="15.0" fill="rgb(205,17,53)" rx="2" ry="2" />
<text  x="511.03" y="335.5" ></text>
</g>
<g >
<title>psi_task_change (11 samples, 0.08%)</title><rect x="966.8" y="709" width="0.9" height="15.0" fill="rgb(227,152,23)" rx="2" ry="2" />
<text  x="969.79" y="719.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (6 samples, 0.04%)</title><rect x="978.5" y="645" width="0.5" height="15.0" fill="rgb(228,45,54)" rx="2" ry="2" />
<text  x="981.46" y="655.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2,156 samples, 15.23%)</title><rect x="505.0" y="437" width="179.8" height="15.0" fill="rgb(234,157,39)" rx="2" ry="2" />
<text  x="508.03" y="447.5" >serde::ser::SerializeMa..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (215 samples, 1.52%)</title><rect x="724.9" y="501" width="17.9" height="15.0" fill="rgb(237,47,37)" rx="2" ry="2" />
<text  x="727.90" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (215 samples, 1.52%)</title><rect x="724.9" y="709" width="17.9" height="15.0" fill="rgb(232,42,13)" rx="2" ry="2" />
<text  x="727.90" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="856.1" y="293" width="0.2" height="15.0" fill="rgb(222,61,0)" rx="2" ry="2" />
<text  x="859.14" y="303.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (27 samples, 0.19%)</title><rect x="510.4" y="357" width="2.3" height="15.0" fill="rgb(244,48,44)" rx="2" ry="2" />
<text  x="513.45" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.04%)</title><rect x="517.6" y="325" width="0.4" height="15.0" fill="rgb(209,216,19)" rx="2" ry="2" />
<text  x="520.62" y="335.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (3 samples, 0.02%)</title><rect x="875.2" y="213" width="0.2" height="15.0" fill="rgb(209,45,52)" rx="2" ry="2" />
<text  x="878.16" y="223.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (20 samples, 0.14%)</title><rect x="107.6" y="821" width="1.7" height="15.0" fill="rgb(251,184,3)" rx="2" ry="2" />
<text  x="110.64" y="831.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.01%)</title><rect x="684.3" y="293" width="0.2" height="15.0" fill="rgb(241,6,3)" rx="2" ry="2" />
<text  x="687.30" y="303.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (32 samples, 0.23%)</title><rect x="769.3" y="229" width="2.7" height="15.0" fill="rgb(245,39,30)" rx="2" ry="2" />
<text  x="772.35" y="239.5" ></text>
</g>
<g >
<title>vfs_write (18 samples, 0.13%)</title><rect x="493.4" y="533" width="1.5" height="15.0" fill="rgb(225,124,28)" rx="2" ry="2" />
<text  x="496.44" y="543.5" ></text>
</g>
<g >
<title>hrtimer_cancel (22 samples, 0.16%)</title><rect x="1185.3" y="677" width="1.9" height="15.0" fill="rgb(206,102,26)" rx="2" ry="2" />
<text  x="1188.33" y="687.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="788.9" y="197" width="0.3" height="15.0" fill="rgb(253,3,28)" rx="2" ry="2" />
<text  x="791.94" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.11%)</title><rect x="673.9" y="277" width="1.2" height="15.0" fill="rgb(231,199,38)" rx="2" ry="2" />
<text  x="676.88" y="287.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.03%)</title><rect x="828.2" y="117" width="0.3" height="15.0" fill="rgb(222,223,21)" rx="2" ry="2" />
<text  x="831.21" y="127.5" ></text>
</g>
<g >
<title>rcu_core (5 samples, 0.04%)</title><rect x="46.5" y="549" width="0.4" height="15.0" fill="rgb(212,91,46)" rx="2" ry="2" />
<text  x="49.52" y="559.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.39%)</title><rect x="689.2" y="261" width="4.6" height="15.0" fill="rgb(206,191,51)" rx="2" ry="2" />
<text  x="692.22" y="271.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (221 samples, 1.56%)</title><rect x="856.7" y="757" width="18.5" height="15.0" fill="rgb(222,201,47)" rx="2" ry="2" />
<text  x="859.73" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (19 samples, 0.13%)</title><rect x="727.9" y="133" width="1.6" height="15.0" fill="rgb(220,137,30)" rx="2" ry="2" />
<text  x="730.91" y="143.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (10 samples, 0.07%)</title><rect x="693.8" y="245" width="0.8" height="15.0" fill="rgb(223,38,47)" rx="2" ry="2" />
<text  x="696.80" y="255.5" ></text>
</g>
<g >
<title>restore_regs_and_return_to_kernel (4 samples, 0.03%)</title><rect x="1144.7" y="677" width="0.4" height="15.0" fill="rgb(205,43,44)" rx="2" ry="2" />
<text  x="1147.72" y="687.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (10 samples, 0.07%)</title><rect x="987.2" y="693" width="0.9" height="15.0" fill="rgb(212,220,10)" rx="2" ry="2" />
<text  x="990.22" y="703.5" ></text>
</g>
<g >
<title>dequeue_entity (5 samples, 0.04%)</title><rect x="28.2" y="693" width="0.4" height="15.0" fill="rgb(236,30,53)" rx="2" ry="2" />
<text  x="31.18" y="703.5" ></text>
</g>
<g >
<title>ext4_do_flush_completed_IO.isra.0 (7 samples, 0.05%)</title><rect x="974.3" y="757" width="0.6" height="15.0" fill="rgb(226,124,19)" rx="2" ry="2" />
<text  x="977.29" y="767.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4 samples, 0.03%)</title><rect x="31.8" y="661" width="0.4" height="15.0" fill="rgb(233,152,45)" rx="2" ry="2" />
<text  x="34.85" y="671.5" ></text>
</g>
<g >
<title>pick_next_task_fair (4 samples, 0.03%)</title><rect x="979.3" y="757" width="0.3" height="15.0" fill="rgb(246,55,18)" rx="2" ry="2" />
<text  x="982.30" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="837.2" y="149" width="0.4" height="15.0" fill="rgb(230,64,28)" rx="2" ry="2" />
<text  x="840.22" y="159.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.01%)</title><rect x="688.3" y="357" width="0.2" height="15.0" fill="rgb(228,120,41)" rx="2" ry="2" />
<text  x="691.30" y="367.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (229 samples, 1.62%)</title><rect x="697.4" y="469" width="19.1" height="15.0" fill="rgb(222,32,45)" rx="2" ry="2" />
<text  x="700.39" y="479.5" ></text>
</g>
<g >
<title>__switch_to_asm (3 samples, 0.02%)</title><rect x="949.2" y="837" width="0.2" height="15.0" fill="rgb(246,85,47)" rx="2" ry="2" />
<text  x="952.20" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (36 samples, 0.25%)</title><rect x="766.3" y="165" width="3.0" height="15.0" fill="rgb(207,17,15)" rx="2" ry="2" />
<text  x="769.34" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.01%)</title><rect x="515.8" y="229" width="0.2" height="15.0" fill="rgb(240,89,0)" rx="2" ry="2" />
<text  x="518.79" y="239.5" ></text>
</g>
<g >
<title>irq_enter_rcu (2 samples, 0.01%)</title><rect x="1029.3" y="645" width="0.2" height="15.0" fill="rgb(229,36,6)" rx="2" ry="2" />
<text  x="1032.33" y="655.5" ></text>
</g>
<g >
<title>udp_unicast_rcv_skb (2 samples, 0.01%)</title><rect x="986.2" y="373" width="0.2" height="15.0" fill="rgb(252,223,2)" rx="2" ry="2" />
<text  x="989.22" y="383.5" ></text>
</g>
<g >
<title>cpuidle_reflect (2 samples, 0.01%)</title><rect x="62.6" y="693" width="0.2" height="15.0" fill="rgb(251,42,2)" rx="2" ry="2" />
<text  x="65.61" y="703.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.07%)</title><rect x="548.7" y="245" width="0.9" height="15.0" fill="rgb(213,82,50)" rx="2" ry="2" />
<text  x="551.72" y="255.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (5 samples, 0.04%)</title><rect x="856.0" y="773" width="0.4" height="15.0" fill="rgb(215,70,51)" rx="2" ry="2" />
<text  x="858.98" y="783.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (61 samples, 0.43%)</title><rect x="772.0" y="261" width="5.1" height="15.0" fill="rgb(254,202,7)" rx="2" ry="2" />
<text  x="775.01" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.05%)</title><rect x="874.3" y="229" width="0.6" height="15.0" fill="rgb(238,189,7)" rx="2" ry="2" />
<text  x="877.32" y="239.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (2 samples, 0.01%)</title><rect x="1054.8" y="565" width="0.1" height="15.0" fill="rgb(228,59,54)" rx="2" ry="2" />
<text  x="1057.76" y="575.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (261 samples, 1.84%)</title><rect x="810.1" y="261" width="21.8" height="15.0" fill="rgb(206,3,48)" rx="2" ry="2" />
<text  x="813.12" y="271.5" >s..</text>
</g>
<g >
<title>try_to_release_page (3 samples, 0.02%)</title><rect x="115.1" y="245" width="0.3" height="15.0" fill="rgb(227,106,0)" rx="2" ry="2" />
<text  x="118.14" y="255.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (4 samples, 0.03%)</title><rect x="514.6" y="309" width="0.4" height="15.0" fill="rgb(242,156,40)" rx="2" ry="2" />
<text  x="517.62" y="319.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (31 samples, 0.22%)</title><rect x="878.2" y="837" width="2.6" height="15.0" fill="rgb(211,208,2)" rx="2" ry="2" />
<text  x="881.24" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="764.8" y="181" width="0.2" height="15.0" fill="rgb(207,59,36)" rx="2" ry="2" />
<text  x="767.84" y="191.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.02%)</title><rect x="764.5" y="309" width="0.3" height="15.0" fill="rgb(244,28,39)" rx="2" ry="2" />
<text  x="767.51" y="319.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.01%)</title><rect x="739.2" y="245" width="0.2" height="15.0" fill="rgb(219,104,3)" rx="2" ry="2" />
<text  x="742.25" y="255.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (8 samples, 0.06%)</title><rect x="31.2" y="661" width="0.6" height="15.0" fill="rgb(228,221,17)" rx="2" ry="2" />
<text  x="34.18" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_read (4 samples, 0.03%)</title><rect x="951.4" y="805" width="0.3" height="15.0" fill="rgb(235,123,7)" rx="2" ry="2" />
<text  x="954.37" y="815.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (26 samples, 0.18%)</title><rect x="515.1" y="325" width="2.2" height="15.0" fill="rgb(244,150,2)" rx="2" ry="2" />
<text  x="518.12" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (29 samples, 0.20%)</title><rect x="579.1" y="133" width="2.4" height="15.0" fill="rgb(206,200,18)" rx="2" ry="2" />
<text  x="582.07" y="143.5" ></text>
</g>
<g >
<title>futex_wait (3 samples, 0.02%)</title><rect x="950.4" y="773" width="0.3" height="15.0" fill="rgb(239,182,28)" rx="2" ry="2" />
<text  x="953.45" y="783.5" ></text>
</g>
<g >
<title>kjournald2 (2 samples, 0.01%)</title><rect x="952.9" y="805" width="0.2" height="15.0" fill="rgb(238,107,53)" rx="2" ry="2" />
<text  x="955.95" y="815.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (7 samples, 0.05%)</title><rect x="497.1" y="341" width="0.6" height="15.0" fill="rgb(221,224,43)" rx="2" ry="2" />
<text  x="500.11" y="351.5" ></text>
</g>
<g >
<title>__test_set_page_writeback (3 samples, 0.02%)</title><rect x="977.0" y="565" width="0.3" height="15.0" fill="rgb(250,156,39)" rx="2" ry="2" />
<text  x="980.05" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.09%)</title><rect x="523.0" y="245" width="1.0" height="15.0" fill="rgb(243,179,37)" rx="2" ry="2" />
<text  x="525.96" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.05%)</title><rect x="813.0" y="101" width="0.6" height="15.0" fill="rgb(240,181,41)" rx="2" ry="2" />
<text  x="816.04" y="111.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (61 samples, 0.43%)</title><rect x="772.0" y="293" width="5.1" height="15.0" fill="rgb(215,137,51)" rx="2" ry="2" />
<text  x="775.01" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.10%)</title><rect x="645.1" y="149" width="1.2" height="15.0" fill="rgb(218,150,8)" rx="2" ry="2" />
<text  x="648.11" y="159.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@plt (52 samples, 0.37%)</title><rect x="204.1" y="741" width="4.3" height="15.0" fill="rgb(224,2,22)" rx="2" ry="2" />
<text  x="207.11" y="751.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (76 samples, 0.54%)</title><rect x="688.3" y="613" width="6.3" height="15.0" fill="rgb(230,14,33)" rx="2" ry="2" />
<text  x="691.30" y="623.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (7 samples, 0.05%)</title><rect x="114.8" y="485" width="0.6" height="15.0" fill="rgb(250,106,2)" rx="2" ry="2" />
<text  x="117.81" y="495.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.01%)</title><rect x="593.4" y="133" width="0.2" height="15.0" fill="rgb(241,114,2)" rx="2" ry="2" />
<text  x="596.41" y="143.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (4 samples, 0.03%)</title><rect x="648.0" y="149" width="0.4" height="15.0" fill="rgb(237,109,0)" rx="2" ry="2" />
<text  x="651.03" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_futex (4 samples, 0.03%)</title><rect x="950.4" y="805" width="0.4" height="15.0" fill="rgb(206,179,6)" rx="2" ry="2" />
<text  x="953.45" y="815.5" ></text>
</g>
<g >
<title>smp_call_function_single (63 samples, 0.45%)</title><rect x="10.1" y="597" width="5.2" height="15.0" fill="rgb(228,77,39)" rx="2" ry="2" />
<text  x="13.08" y="607.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.01%)</title><rect x="970.8" y="677" width="0.2" height="15.0" fill="rgb(225,125,19)" rx="2" ry="2" />
<text  x="973.79" y="687.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (5 samples, 0.04%)</title><rect x="678.5" y="229" width="0.5" height="15.0" fill="rgb(211,143,37)" rx="2" ry="2" />
<text  x="681.54" y="239.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (16 samples, 0.11%)</title><rect x="1176.3" y="645" width="1.4" height="15.0" fill="rgb(249,192,43)" rx="2" ry="2" />
<text  x="1179.33" y="655.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (9 samples, 0.06%)</title><rect x="606.3" y="149" width="0.8" height="15.0" fill="rgb(225,133,40)" rx="2" ry="2" />
<text  x="609.34" y="159.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.04%)</title><rect x="856.0" y="517" width="0.4" height="15.0" fill="rgb(231,120,42)" rx="2" ry="2" />
<text  x="858.98" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.06%)</title><rect x="500.1" y="597" width="0.8" height="15.0" fill="rgb(234,141,20)" rx="2" ry="2" />
<text  x="503.11" y="607.5" ></text>
</g>
<g >
<title>ovl_write_iter (8 samples, 0.06%)</title><rect x="15.3" y="581" width="0.7" height="15.0" fill="rgb(208,99,17)" rx="2" ry="2" />
<text  x="18.34" y="591.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.02%)</title><rect x="114.1" y="821" width="0.3" height="15.0" fill="rgb(240,22,16)" rx="2" ry="2" />
<text  x="117.14" y="831.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.01%)</title><rect x="1017.5" y="709" width="0.2" height="15.0" fill="rgb(205,175,51)" rx="2" ry="2" />
<text  x="1020.49" y="719.5" ></text>
</g>
<g >
<title>error_entry (2 samples, 0.01%)</title><rect x="1143.2" y="677" width="0.2" height="15.0" fill="rgb(219,213,8)" rx="2" ry="2" />
<text  x="1146.22" y="687.5" ></text>
</g>
<g >
<title>asm_common_interrupt (79 samples, 0.56%)</title><rect x="980.6" y="725" width="6.6" height="15.0" fill="rgb(210,184,54)" rx="2" ry="2" />
<text  x="983.63" y="735.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (217 samples, 1.53%)</title><rect x="837.9" y="437" width="18.1" height="15.0" fill="rgb(206,210,22)" rx="2" ry="2" />
<text  x="840.88" y="447.5" ></text>
</g>
<g >
<title>__ioctl (63 samples, 0.45%)</title><rect x="10.1" y="741" width="5.2" height="15.0" fill="rgb(242,132,25)" rx="2" ry="2" />
<text  x="13.08" y="751.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="681.0" y="245" width="0.2" height="15.0" fill="rgb(249,210,21)" rx="2" ry="2" />
<text  x="684.05" y="255.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.06%)</title><rect x="688.6" y="357" width="0.6" height="15.0" fill="rgb(230,86,41)" rx="2" ry="2" />
<text  x="691.55" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.06%)</title><rect x="683.2" y="325" width="0.7" height="15.0" fill="rgb(217,94,7)" rx="2" ry="2" />
<text  x="686.21" y="335.5" ></text>
</g>
<g >
<title>__schedule (39 samples, 0.28%)</title><rect x="65.5" y="693" width="3.3" height="15.0" fill="rgb(227,183,48)" rx="2" ry="2" />
<text  x="68.53" y="703.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (43 samples, 0.30%)</title><rect x="857.2" y="357" width="3.6" height="15.0" fill="rgb(209,182,3)" rx="2" ry="2" />
<text  x="860.23" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle (7 samples, 0.05%)</title><rect x="987.4" y="597" width="0.6" height="15.0" fill="rgb(237,23,10)" rx="2" ry="2" />
<text  x="990.39" y="607.5" ></text>
</g>
<g >
<title>update_blocked_averages (7 samples, 0.05%)</title><rect x="1177.7" y="645" width="0.5" height="15.0" fill="rgb(242,36,45)" rx="2" ry="2" />
<text  x="1180.66" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="547.0" y="197" width="0.3" height="15.0" fill="rgb(221,205,6)" rx="2" ry="2" />
<text  x="549.97" y="207.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.01%)</title><rect x="809.7" y="277" width="0.2" height="15.0" fill="rgb(246,24,21)" rx="2" ry="2" />
<text  x="812.70" y="287.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (58 samples, 0.41%)</title><rect x="576.9" y="149" width="4.8" height="15.0" fill="rgb(224,103,45)" rx="2" ry="2" />
<text  x="579.90" y="159.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c (14 samples, 0.10%)</title><rect x="498.5" y="581" width="1.2" height="15.0" fill="rgb(225,92,8)" rx="2" ry="2" />
<text  x="501.53" y="591.5" ></text>
</g>
<g >
<title>call_timer_fn (110 samples, 0.78%)</title><rect x="1070.8" y="533" width="9.1" height="15.0" fill="rgb(214,126,5)" rx="2" ry="2" />
<text  x="1073.77" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.04%)</title><rect x="811.1" y="85" width="0.5" height="15.0" fill="rgb(231,211,33)" rx="2" ry="2" />
<text  x="814.12" y="95.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.10%)</title><rect x="502.6" y="421" width="1.2" height="15.0" fill="rgb(219,204,8)" rx="2" ry="2" />
<text  x="505.61" y="431.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (2 samples, 0.01%)</title><rect x="988.6" y="565" width="0.2" height="15.0" fill="rgb(214,160,23)" rx="2" ry="2" />
<text  x="991.64" y="575.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (35 samples, 0.25%)</title><rect x="665.2" y="197" width="2.9" height="15.0" fill="rgb(238,154,14)" rx="2" ry="2" />
<text  x="668.20" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.01%)</title><rect x="547.1" y="165" width="0.2" height="15.0" fill="rgb(214,57,19)" rx="2" ry="2" />
<text  x="550.14" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.01%)</title><rect x="875.2" y="53" width="0.1" height="15.0" fill="rgb(213,186,40)" rx="2" ry="2" />
<text  x="878.16" y="63.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (2,159 samples, 15.26%)</title><rect x="504.8" y="453" width="180.0" height="15.0" fill="rgb(231,122,49)" rx="2" ry="2" />
<text  x="507.78" y="463.5" >serde::ser::Serializer:..</text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (6 samples, 0.04%)</title><rect x="743.1" y="293" width="0.5" height="15.0" fill="rgb(220,42,13)" rx="2" ry="2" />
<text  x="746.08" y="303.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::end (19 samples, 0.13%)</title><rect x="548.4" y="341" width="1.6" height="15.0" fill="rgb(217,138,35)" rx="2" ry="2" />
<text  x="551.39" y="351.5" ></text>
</g>
<g >
<title>irq_exit_rcu (331 samples, 2.34%)</title><rect x="1053.3" y="629" width="27.6" height="15.0" fill="rgb(211,218,40)" rx="2" ry="2" />
<text  x="1056.34" y="639.5" >i..</text>
</g>
<g >
<title>do_iter_readv_writev (11 samples, 0.08%)</title><rect x="115.5" y="453" width="0.9" height="15.0" fill="rgb(230,20,29)" rx="2" ry="2" />
<text  x="118.48" y="463.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (3 samples, 0.02%)</title><rect x="517.0" y="293" width="0.3" height="15.0" fill="rgb(240,88,2)" rx="2" ry="2" />
<text  x="520.04" y="303.5" ></text>
</g>
<g >
<title>NaClHostDescOpen (7 samples, 0.05%)</title><rect x="114.8" y="773" width="0.6" height="15.0" fill="rgb(218,10,43)" rx="2" ry="2" />
<text  x="117.81" y="783.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.05%)</title><rect x="642.3" y="181" width="0.6" height="15.0" fill="rgb(233,35,1)" rx="2" ry="2" />
<text  x="645.27" y="191.5" ></text>
</g>
<g >
<title>ktime_get (2 samples, 0.01%)</title><rect x="1050.8" y="613" width="0.1" height="15.0" fill="rgb(242,71,15)" rx="2" ry="2" />
<text  x="1053.75" y="623.5" ></text>
</g>
<g >
<title>cpuidle_reflect (9 samples, 0.06%)</title><rect x="1159.3" y="709" width="0.8" height="15.0" fill="rgb(205,193,25)" rx="2" ry="2" />
<text  x="1162.32" y="719.5" ></text>
</g>
<g >
<title>pick_next_task_fair (33 samples, 0.23%)</title><rect x="65.9" y="677" width="2.8" height="15.0" fill="rgb(215,136,9)" rx="2" ry="2" />
<text  x="68.95" y="687.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (221 samples, 1.56%)</title><rect x="856.7" y="613" width="18.5" height="15.0" fill="rgb(232,70,44)" rx="2" ry="2" />
<text  x="859.73" y="623.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (4 samples, 0.03%)</title><rect x="536.5" y="245" width="0.4" height="15.0" fill="rgb(246,169,24)" rx="2" ry="2" />
<text  x="539.55" y="255.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8_unchecked (2 samples, 0.01%)</title><rect x="514.1" y="309" width="0.2" height="15.0" fill="rgb(224,17,52)" rx="2" ry="2" />
<text  x="517.12" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (2 samples, 0.01%)</title><rect x="70.0" y="725" width="0.1" height="15.0" fill="rgb(219,42,45)" rx="2" ry="2" />
<text  x="72.95" y="735.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (2 samples, 0.01%)</title><rect x="499.4" y="197" width="0.2" height="15.0" fill="rgb(221,32,3)" rx="2" ry="2" />
<text  x="502.44" y="207.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4 samples, 0.03%)</title><rect x="494.1" y="309" width="0.3" height="15.0" fill="rgb(219,176,24)" rx="2" ry="2" />
<text  x="497.11" y="319.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (2 samples, 0.01%)</title><rect x="834.1" y="149" width="0.2" height="15.0" fill="rgb(246,116,2)" rx="2" ry="2" />
<text  x="837.13" y="159.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (14 samples, 0.10%)</title><rect x="1039.9" y="485" width="1.2" height="15.0" fill="rgb(241,102,3)" rx="2" ry="2" />
<text  x="1042.92" y="495.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (14 samples, 0.10%)</title><rect x="725.1" y="293" width="1.1" height="15.0" fill="rgb(223,223,18)" rx="2" ry="2" />
<text  x="728.07" y="303.5" ></text>
</g>
<g >
<title>perf_swevent_stop (2 samples, 0.01%)</title><rect x="1045.6" y="469" width="0.2" height="15.0" fill="rgb(212,29,4)" rx="2" ry="2" />
<text  x="1048.59" y="479.5" ></text>
</g>
<g >
<title>ovl_create_real (3 samples, 0.02%)</title><rect x="499.4" y="325" width="0.3" height="15.0" fill="rgb(208,142,9)" rx="2" ry="2" />
<text  x="502.44" y="335.5" ></text>
</g>
<g >
<title>itoa::Buffer::new (38 samples, 0.27%)</title><rect x="649.6" y="245" width="3.2" height="15.0" fill="rgb(246,70,54)" rx="2" ry="2" />
<text  x="652.61" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (37 samples, 0.26%)</title><rect x="987.2" y="709" width="3.1" height="15.0" fill="rgb(224,119,28)" rx="2" ry="2" />
<text  x="990.22" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.06%)</title><rect x="652.9" y="181" width="0.8" height="15.0" fill="rgb(240,64,4)" rx="2" ry="2" />
<text  x="655.95" y="191.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.01%)</title><rect x="674.1" y="245" width="0.2" height="15.0" fill="rgb(222,160,48)" rx="2" ry="2" />
<text  x="677.13" y="255.5" ></text>
</g>
<g >
<title>load_balance (108 samples, 0.76%)</title><rect x="1167.3" y="645" width="9.0" height="15.0" fill="rgb(230,138,53)" rx="2" ry="2" />
<text  x="1170.32" y="655.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (26 samples, 0.18%)</title><rect x="546.2" y="277" width="2.2" height="15.0" fill="rgb(234,25,40)" rx="2" ry="2" />
<text  x="549.22" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (4 samples, 0.03%)</title><rect x="855.6" y="197" width="0.4" height="15.0" fill="rgb(225,219,10)" rx="2" ry="2" />
<text  x="858.64" y="207.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (24 samples, 0.17%)</title><rect x="652.8" y="245" width="2.0" height="15.0" fill="rgb(236,199,29)" rx="2" ry="2" />
<text  x="655.78" y="255.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (2 samples, 0.01%)</title><rect x="40.5" y="757" width="0.2" height="15.0" fill="rgb(247,95,28)" rx="2" ry="2" />
<text  x="43.52" y="767.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (2 samples, 0.01%)</title><rect x="766.2" y="245" width="0.1" height="15.0" fill="rgb(237,147,34)" rx="2" ry="2" />
<text  x="769.18" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.03%)</title><rect x="855.6" y="293" width="0.4" height="15.0" fill="rgb(230,15,19)" rx="2" ry="2" />
<text  x="858.64" y="303.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (40 samples, 0.28%)</title><rect x="200.8" y="741" width="3.3" height="15.0" fill="rgb(213,198,38)" rx="2" ry="2" />
<text  x="203.77" y="751.5" ></text>
</g>
<g >
<title>find_next_bit (4 samples, 0.03%)</title><rect x="1079.9" y="533" width="0.4" height="15.0" fill="rgb(237,67,3)" rx="2" ry="2" />
<text  x="1082.94" y="543.5" ></text>
</g>
<g >
<title>arch_call_rest_init (2,032 samples, 14.36%)</title><rect x="1020.6" y="773" width="169.4" height="15.0" fill="rgb(205,104,41)" rx="2" ry="2" />
<text  x="1023.57" y="783.5" >arch_call_rest_init</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (6 samples, 0.04%)</title><rect x="697.4" y="357" width="0.5" height="15.0" fill="rgb(217,218,39)" rx="2" ry="2" />
<text  x="700.39" y="367.5" ></text>
</g>
<g >
<title>vfs_iter_write (18 samples, 0.13%)</title><rect x="493.4" y="485" width="1.5" height="15.0" fill="rgb(230,167,11)" rx="2" ry="2" />
<text  x="496.44" y="495.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3 samples, 0.02%)</title><rect x="888.9" y="805" width="0.3" height="15.0" fill="rgb(214,80,22)" rx="2" ry="2" />
<text  x="891.91" y="815.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="764.0" y="213" width="0.2" height="15.0" fill="rgb(243,42,16)" rx="2" ry="2" />
<text  x="767.01" y="223.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (19 samples, 0.13%)</title><rect x="683.0" y="373" width="1.5" height="15.0" fill="rgb(235,178,44)" rx="2" ry="2" />
<text  x="685.96" y="383.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (4 samples, 0.03%)</title><rect x="634.0" y="149" width="0.4" height="15.0" fill="rgb(220,205,44)" rx="2" ry="2" />
<text  x="637.02" y="159.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (7 samples, 0.05%)</title><rect x="771.4" y="133" width="0.6" height="15.0" fill="rgb(249,19,52)" rx="2" ry="2" />
<text  x="774.43" y="143.5" ></text>
</g>
<g >
<title>irq_enter_rcu (2 samples, 0.01%)</title><rect x="988.1" y="693" width="0.1" height="15.0" fill="rgb(232,157,26)" rx="2" ry="2" />
<text  x="991.05" y="703.5" ></text>
</g>
<g >
<title>dequeue_task_fair (5 samples, 0.04%)</title><rect x="28.2" y="709" width="0.4" height="15.0" fill="rgb(221,153,47)" rx="2" ry="2" />
<text  x="31.18" y="719.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (4 samples, 0.03%)</title><rect x="791.2" y="805" width="0.3" height="15.0" fill="rgb(205,35,52)" rx="2" ry="2" />
<text  x="794.19" y="815.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (23 samples, 0.16%)</title><rect x="634.4" y="197" width="1.9" height="15.0" fill="rgb(245,200,48)" rx="2" ry="2" />
<text  x="637.35" y="207.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.03%)</title><rect x="688.8" y="165" width="0.3" height="15.0" fill="rgb(220,172,5)" rx="2" ry="2" />
<text  x="691.80" y="175.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (255 samples, 1.80%)</title><rect x="743.0" y="693" width="21.3" height="15.0" fill="rgb(253,200,7)" rx="2" ry="2" />
<text  x="746.00" y="703.5" >r..</text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (2 samples, 0.01%)</title><rect x="45.9" y="613" width="0.2" height="15.0" fill="rgb(252,152,3)" rx="2" ry="2" />
<text  x="48.94" y="623.5" ></text>
</g>
<g >
<title>newidle_balance (35 samples, 0.25%)</title><rect x="968.0" y="709" width="3.0" height="15.0" fill="rgb(223,152,52)" rx="2" ry="2" />
<text  x="971.04" y="719.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.03%)</title><rect x="875.2" y="677" width="0.3" height="15.0" fill="rgb(245,167,54)" rx="2" ry="2" />
<text  x="878.16" y="687.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (213 samples, 1.51%)</title><rect x="837.9" y="405" width="17.7" height="15.0" fill="rgb(230,59,7)" rx="2" ry="2" />
<text  x="840.88" y="415.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (4 samples, 0.03%)</title><rect x="976.4" y="565" width="0.3" height="15.0" fill="rgb(248,99,37)" rx="2" ry="2" />
<text  x="979.38" y="575.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (5 samples, 0.04%)</title><rect x="856.8" y="309" width="0.4" height="15.0" fill="rgb(206,157,42)" rx="2" ry="2" />
<text  x="859.81" y="319.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (261 samples, 1.84%)</title><rect x="810.1" y="245" width="21.8" height="15.0" fill="rgb(213,206,24)" rx="2" ry="2" />
<text  x="813.12" y="255.5" >s..</text>
</g>
<g >
<title>generic_perform_write (8 samples, 0.06%)</title><rect x="15.3" y="485" width="0.7" height="15.0" fill="rgb(219,17,9)" rx="2" ry="2" />
<text  x="18.34" y="495.5" ></text>
</g>
<g >
<title>find_busiest_group (4 samples, 0.03%)</title><rect x="28.8" y="677" width="0.4" height="15.0" fill="rgb(253,42,25)" rx="2" ry="2" />
<text  x="31.84" y="687.5" ></text>
</g>
<g >
<title>dequeue_task_fair (34 samples, 0.24%)</title><rect x="964.0" y="709" width="2.8" height="15.0" fill="rgb(238,42,51)" rx="2" ry="2" />
<text  x="966.96" y="719.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (3 samples, 0.02%)</title><rect x="665.0" y="197" width="0.2" height="15.0" fill="rgb(210,99,48)" rx="2" ry="2" />
<text  x="667.95" y="207.5" ></text>
</g>
<g >
<title>enqueue_task (57 samples, 0.40%)</title><rect x="1074.2" y="453" width="4.7" height="15.0" fill="rgb(228,83,9)" rx="2" ry="2" />
<text  x="1077.18" y="463.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (52 samples, 0.37%)</title><rect x="832.6" y="245" width="4.4" height="15.0" fill="rgb(206,73,43)" rx="2" ry="2" />
<text  x="835.63" y="255.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (6 samples, 0.04%)</title><rect x="743.1" y="229" width="0.5" height="15.0" fill="rgb(218,166,40)" rx="2" ry="2" />
<text  x="746.08" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="541.3" y="245" width="0.2" height="15.0" fill="rgb(214,142,7)" rx="2" ry="2" />
<text  x="544.30" y="255.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (2 samples, 0.01%)</title><rect x="494.3" y="261" width="0.1" height="15.0" fill="rgb(249,169,50)" rx="2" ry="2" />
<text  x="497.27" y="271.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.01%)</title><rect x="856.0" y="357" width="0.1" height="15.0" fill="rgb(230,158,29)" rx="2" ry="2" />
<text  x="858.98" y="367.5" ></text>
</g>
<g >
<title>llist_add_batch (3 samples, 0.02%)</title><rect x="1177.4" y="597" width="0.3" height="15.0" fill="rgb(223,29,0)" rx="2" ry="2" />
<text  x="1180.41" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (24 samples, 0.17%)</title><rect x="508.4" y="309" width="2.0" height="15.0" fill="rgb(231,10,10)" rx="2" ry="2" />
<text  x="511.45" y="319.5" ></text>
</g>
<g >
<title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (2 samples, 0.01%)</title><rect x="742.8" y="741" width="0.2" height="15.0" fill="rgb(243,68,7)" rx="2" ry="2" />
<text  x="745.83" y="751.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (5 samples, 0.04%)</title><rect x="809.7" y="341" width="0.4" height="15.0" fill="rgb(218,15,42)" rx="2" ry="2" />
<text  x="812.70" y="351.5" ></text>
</g>
<g >
<title>check_tsc_unstable (2 samples, 0.01%)</title><rect x="979.7" y="757" width="0.2" height="15.0" fill="rgb(239,137,7)" rx="2" ry="2" />
<text  x="982.71" y="767.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.01%)</title><rect x="32.3" y="629" width="0.2" height="15.0" fill="rgb(222,198,20)" rx="2" ry="2" />
<text  x="35.35" y="639.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (36 samples, 0.25%)</title><rect x="766.3" y="197" width="3.0" height="15.0" fill="rgb(232,21,32)" rx="2" ry="2" />
<text  x="769.34" y="207.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (21 samples, 0.15%)</title><rect x="787.6" y="213" width="1.8" height="15.0" fill="rgb(212,151,6)" rx="2" ry="2" />
<text  x="790.61" y="223.5" ></text>
</g>
<g >
<title>NaClXCondVarBroadcast (58 samples, 0.41%)</title><rect x="476.8" y="789" width="4.8" height="15.0" fill="rgb(236,83,0)" rx="2" ry="2" />
<text  x="479.76" y="799.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (2 samples, 0.01%)</title><rect x="688.3" y="277" width="0.2" height="15.0" fill="rgb(216,30,26)" rx="2" ry="2" />
<text  x="691.30" y="287.5" ></text>
</g>
<g >
<title>dput (7 samples, 0.05%)</title><rect x="114.8" y="469" width="0.6" height="15.0" fill="rgb(245,59,7)" rx="2" ry="2" />
<text  x="117.81" y="479.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (5 samples, 0.04%)</title><rect x="856.0" y="709" width="0.4" height="15.0" fill="rgb(231,175,44)" rx="2" ry="2" />
<text  x="858.98" y="719.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.01%)</title><rect x="1188.2" y="613" width="0.1" height="15.0" fill="rgb(244,10,18)" rx="2" ry="2" />
<text  x="1191.17" y="623.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (23 samples, 0.16%)</title><rect x="525.4" y="309" width="1.9" height="15.0" fill="rgb(251,217,30)" rx="2" ry="2" />
<text  x="528.37" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.08%)</title><rect x="683.2" y="341" width="1.0" height="15.0" fill="rgb(227,81,51)" rx="2" ry="2" />
<text  x="686.21" y="351.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (19 samples, 0.13%)</title><rect x="727.9" y="261" width="1.6" height="15.0" fill="rgb(227,218,18)" rx="2" ry="2" />
<text  x="730.91" y="271.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (43 samples, 0.30%)</title><rect x="668.1" y="229" width="3.6" height="15.0" fill="rgb(241,146,50)" rx="2" ry="2" />
<text  x="671.12" y="239.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (2 samples, 0.01%)</title><rect x="499.4" y="229" width="0.2" height="15.0" fill="rgb(215,45,36)" rx="2" ry="2" />
<text  x="502.44" y="239.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (3 samples, 0.02%)</title><rect x="30.9" y="629" width="0.3" height="15.0" fill="rgb(253,199,2)" rx="2" ry="2" />
<text  x="33.93" y="639.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.04%)</title><rect x="877.8" y="821" width="0.4" height="15.0" fill="rgb(209,42,47)" rx="2" ry="2" />
<text  x="880.82" y="831.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (9 samples, 0.06%)</title><rect x="741.7" y="293" width="0.8" height="15.0" fill="rgb(211,190,4)" rx="2" ry="2" />
<text  x="744.75" y="303.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (7 samples, 0.05%)</title><rect x="771.4" y="101" width="0.6" height="15.0" fill="rgb(248,179,48)" rx="2" ry="2" />
<text  x="774.43" y="111.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="725.6" y="149" width="0.2" height="15.0" fill="rgb(236,38,27)" rx="2" ry="2" />
<text  x="728.57" y="159.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (10 samples, 0.07%)</title><rect x="115.6" y="373" width="0.8" height="15.0" fill="rgb(237,218,28)" rx="2" ry="2" />
<text  x="118.56" y="383.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (15 samples, 0.11%)</title><rect x="605.8" y="165" width="1.3" height="15.0" fill="rgb(223,83,29)" rx="2" ry="2" />
<text  x="608.84" y="175.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (255 samples, 1.80%)</title><rect x="743.0" y="437" width="21.3" height="15.0" fill="rgb(232,40,13)" rx="2" ry="2" />
<text  x="746.00" y="447.5" >&lt;..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (255 samples, 1.80%)</title><rect x="743.0" y="709" width="21.3" height="15.0" fill="rgb(206,62,16)" rx="2" ry="2" />
<text  x="746.00" y="719.5" >r..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (2 samples, 0.01%)</title><rect x="541.0" y="213" width="0.1" height="15.0" fill="rgb(216,183,41)" rx="2" ry="2" />
<text  x="543.97" y="223.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;std::fs::File&gt;&gt; (2 samples, 0.01%)</title><rect x="494.9" y="581" width="0.2" height="15.0" fill="rgb(228,86,40)" rx="2" ry="2" />
<text  x="497.94" y="591.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (3 samples, 0.02%)</title><rect x="979.4" y="693" width="0.2" height="15.0" fill="rgb(244,227,45)" rx="2" ry="2" />
<text  x="982.38" y="703.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="646.3" y="165" width="0.1" height="15.0" fill="rgb(209,80,48)" rx="2" ry="2" />
<text  x="649.28" y="175.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (65 samples, 0.46%)</title><rect x="689.2" y="325" width="5.4" height="15.0" fill="rgb(232,223,47)" rx="2" ry="2" />
<text  x="692.22" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (229 samples, 1.62%)</title><rect x="1030.8" y="597" width="19.1" height="15.0" fill="rgb(245,37,49)" rx="2" ry="2" />
<text  x="1033.83" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DeviceInode&gt;::serialize (2 samples, 0.01%)</title><rect x="809.5" y="453" width="0.2" height="15.0" fill="rgb(253,65,5)" rx="2" ry="2" />
<text  x="812.54" y="463.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (37 samples, 0.26%)</title><rect x="850.1" y="229" width="3.0" height="15.0" fill="rgb(243,9,16)" rx="2" ry="2" />
<text  x="853.06" y="239.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (215 samples, 1.52%)</title><rect x="724.9" y="485" width="17.9" height="15.0" fill="rgb(245,129,26)" rx="2" ry="2" />
<text  x="727.90" y="495.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.06%)</title><rect x="889.2" y="837" width="0.6" height="15.0" fill="rgb(227,207,18)" rx="2" ry="2" />
<text  x="892.16" y="847.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (255 samples, 1.80%)</title><rect x="743.0" y="613" width="21.3" height="15.0" fill="rgb(209,135,13)" rx="2" ry="2" />
<text  x="746.00" y="623.5" >r..</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (229 samples, 1.62%)</title><rect x="697.4" y="629" width="19.1" height="15.0" fill="rgb(219,194,10)" rx="2" ry="2" />
<text  x="700.39" y="639.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (14 samples, 0.10%)</title><rect x="725.1" y="325" width="1.1" height="15.0" fill="rgb(209,38,7)" rx="2" ry="2" />
<text  x="728.07" y="335.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (8 samples, 0.06%)</title><rect x="688.6" y="341" width="0.6" height="15.0" fill="rgb(224,229,16)" rx="2" ry="2" />
<text  x="691.55" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (64 samples, 0.45%)</title><rect x="659.5" y="213" width="5.3" height="15.0" fill="rgb(235,68,1)" rx="2" ry="2" />
<text  x="662.45" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::len (3 samples, 0.02%)</title><rect x="588.1" y="133" width="0.2" height="15.0" fill="rgb(254,104,13)" rx="2" ry="2" />
<text  x="591.08" y="143.5" ></text>
</g>
<g >
<title>__msecs_to_jiffies (4 samples, 0.03%)</title><rect x="1056.8" y="549" width="0.3" height="15.0" fill="rgb(218,188,30)" rx="2" ry="2" />
<text  x="1059.76" y="559.5" ></text>
</g>
<g >
<title>read_tsc (5 samples, 0.04%)</title><rect x="1183.5" y="693" width="0.4" height="15.0" fill="rgb(222,153,26)" rx="2" ry="2" />
<text  x="1186.50" y="703.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="875.2" y="117" width="0.2" height="15.0" fill="rgb(238,193,2)" rx="2" ry="2" />
<text  x="878.16" y="127.5" ></text>
</g>
<g >
<title>psi_avgs_work (4 samples, 0.03%)</title><rect x="975.1" y="773" width="0.4" height="15.0" fill="rgb(209,156,22)" rx="2" ry="2" />
<text  x="978.13" y="783.5" ></text>
</g>
<g >
<title>ext4_create (2 samples, 0.01%)</title><rect x="499.4" y="293" width="0.2" height="15.0" fill="rgb(234,148,20)" rx="2" ry="2" />
<text  x="502.44" y="303.5" ></text>
</g>
<g >
<title>run_timer_softirq (130 samples, 0.92%)</title><rect x="1069.7" y="565" width="10.8" height="15.0" fill="rgb(235,110,9)" rx="2" ry="2" />
<text  x="1072.68" y="575.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (4 samples, 0.03%)</title><rect x="518.3" y="277" width="0.3" height="15.0" fill="rgb(239,81,9)" rx="2" ry="2" />
<text  x="521.29" y="287.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (412 samples, 2.91%)</title><rect x="559.2" y="277" width="34.4" height="15.0" fill="rgb(221,66,15)" rx="2" ry="2" />
<text  x="562.23" y="287.5" >&lt;s..</text>
</g>
<g >
<title>serde_json::ser::Formatter::end_object_key (15 samples, 0.11%)</title><rect x="610.8" y="293" width="1.2" height="15.0" fill="rgb(211,174,37)" rx="2" ry="2" />
<text  x="613.76" y="303.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (14 samples, 0.10%)</title><rect x="544.5" y="197" width="1.1" height="15.0" fill="rgb(216,76,49)" rx="2" ry="2" />
<text  x="547.47" y="207.5" ></text>
</g>
<g >
<title>cpuidle_enter (453 samples, 3.20%)</title><rect x="980.0" y="757" width="37.7" height="15.0" fill="rgb(247,36,39)" rx="2" ry="2" />
<text  x="982.96" y="767.5" >cpu..</text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (126 samples, 0.89%)</title><rect x="777.1" y="229" width="10.5" height="15.0" fill="rgb(226,28,41)" rx="2" ry="2" />
<text  x="780.10" y="239.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (31 samples, 0.22%)</title><rect x="534.3" y="309" width="2.6" height="15.0" fill="rgb(250,166,53)" rx="2" ry="2" />
<text  x="537.30" y="319.5" ></text>
</g>
<g >
<title>update_process_times (5 samples, 0.04%)</title><rect x="987.6" y="581" width="0.4" height="15.0" fill="rgb(212,32,41)" rx="2" ry="2" />
<text  x="990.55" y="591.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (17 samples, 0.12%)</title><rect x="830.5" y="133" width="1.4" height="15.0" fill="rgb(239,143,43)" rx="2" ry="2" />
<text  x="833.46" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.08%)</title><rect x="743.6" y="181" width="1.0" height="15.0" fill="rgb(227,217,16)" rx="2" ry="2" />
<text  x="746.58" y="191.5" ></text>
</g>
<g >
<title>find_next_and_bit (2 samples, 0.01%)</title><rect x="1172.4" y="581" width="0.2" height="15.0" fill="rgb(209,184,42)" rx="2" ry="2" />
<text  x="1175.41" y="591.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2 samples, 0.01%)</title><rect x="1175.6" y="533" width="0.1" height="15.0" fill="rgb(238,64,19)" rx="2" ry="2" />
<text  x="1178.58" y="543.5" ></text>
</g>
<g >
<title>rcu_gp_init (15 samples, 0.11%)</title><rect x="972.5" y="789" width="1.3" height="15.0" fill="rgb(212,101,17)" rx="2" ry="2" />
<text  x="975.54" y="799.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (557 samples, 3.94%)</title><rect x="809.5" y="533" width="46.5" height="15.0" fill="rgb(249,137,23)" rx="2" ry="2" />
<text  x="812.54" y="543.5" >serd..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.20%)</title><rect x="601.3" y="197" width="2.4" height="15.0" fill="rgb(252,207,20)" rx="2" ry="2" />
<text  x="604.33" y="207.5" ></text>
</g>
<g >
<title>pick_next_task_idle (6 samples, 0.04%)</title><rect x="971.0" y="725" width="0.5" height="15.0" fill="rgb(238,15,40)" rx="2" ry="2" />
<text  x="974.04" y="735.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (31 samples, 0.22%)</title><rect x="42.9" y="597" width="2.5" height="15.0" fill="rgb(224,205,43)" rx="2" ry="2" />
<text  x="45.85" y="607.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.01%)</title><rect x="764.3" y="293" width="0.2" height="15.0" fill="rgb(209,156,22)" rx="2" ry="2" />
<text  x="767.34" y="303.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (86 samples, 0.61%)</title><rect x="687.5" y="821" width="7.1" height="15.0" fill="rgb(225,116,49)" rx="2" ry="2" />
<text  x="690.47" y="831.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (9 samples, 0.06%)</title><rect x="680.6" y="277" width="0.8" height="15.0" fill="rgb(232,217,32)" rx="2" ry="2" />
<text  x="683.63" y="287.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (35 samples, 0.25%)</title><rect x="495.2" y="421" width="2.9" height="15.0" fill="rgb(235,108,29)" rx="2" ry="2" />
<text  x="498.19" y="431.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (11 samples, 0.08%)</title><rect x="526.3" y="245" width="0.9" height="15.0" fill="rgb(232,160,23)" rx="2" ry="2" />
<text  x="529.29" y="255.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.02%)</title><rect x="875.2" y="277" width="0.2" height="15.0" fill="rgb(245,112,4)" rx="2" ry="2" />
<text  x="878.16" y="287.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (41 samples, 0.29%)</title><rect x="26.9" y="805" width="3.4" height="15.0" fill="rgb(238,145,22)" rx="2" ry="2" />
<text  x="29.93" y="815.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (248 samples, 1.75%)</title><rect x="743.6" y="357" width="20.7" height="15.0" fill="rgb(248,26,30)" rx="2" ry="2" />
<text  x="746.58" y="367.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (2 samples, 0.01%)</title><rect x="498.9" y="277" width="0.2" height="15.0" fill="rgb(234,222,38)" rx="2" ry="2" />
<text  x="501.94" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.05%)</title><rect x="542.4" y="245" width="0.6" height="15.0" fill="rgb(252,179,47)" rx="2" ry="2" />
<text  x="545.38" y="255.5" ></text>
</g>
<g >
<title>kthread_is_per_cpu (3 samples, 0.02%)</title><rect x="1071.8" y="485" width="0.2" height="15.0" fill="rgb(253,15,26)" rx="2" ry="2" />
<text  x="1074.77" y="495.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (76 samples, 0.54%)</title><rect x="688.3" y="469" width="6.3" height="15.0" fill="rgb(206,193,11)" rx="2" ry="2" />
<text  x="691.30" y="479.5" ></text>
</g>
<g >
<title>psi_group_change (6 samples, 0.04%)</title><rect x="967.2" y="693" width="0.5" height="15.0" fill="rgb(254,98,53)" rx="2" ry="2" />
<text  x="970.21" y="703.5" ></text>
</g>
<g >
<title>ttwu_do_activate (68 samples, 0.48%)</title><rect x="1073.9" y="469" width="5.6" height="15.0" fill="rgb(205,173,25)" rx="2" ry="2" />
<text  x="1076.85" y="479.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (14 samples, 0.10%)</title><rect x="765.0" y="197" width="1.2" height="15.0" fill="rgb(241,99,39)" rx="2" ry="2" />
<text  x="768.01" y="207.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::len (2 samples, 0.01%)</title><rect x="829.1" y="133" width="0.2" height="15.0" fill="rgb(250,65,4)" rx="2" ry="2" />
<text  x="832.13" y="143.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.01%)</title><rect x="805.3" y="821" width="0.1" height="15.0" fill="rgb(245,71,3)" rx="2" ry="2" />
<text  x="808.28" y="831.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (6 samples, 0.04%)</title><rect x="513.6" y="293" width="0.5" height="15.0" fill="rgb(216,144,17)" rx="2" ry="2" />
<text  x="516.62" y="303.5" ></text>
</g>
<g >
<title>process_one_work (58 samples, 0.41%)</title><rect x="974.3" y="789" width="4.8" height="15.0" fill="rgb(234,222,11)" rx="2" ry="2" />
<text  x="977.29" y="799.5" ></text>
</g>
<g >
<title>cpumask_next_and (7 samples, 0.05%)</title><rect x="1060.3" y="517" width="0.5" height="15.0" fill="rgb(210,6,5)" rx="2" ry="2" />
<text  x="1063.26" y="527.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (18 samples, 0.13%)</title><rect x="812.5" y="149" width="1.5" height="15.0" fill="rgb(231,29,35)" rx="2" ry="2" />
<text  x="815.54" y="159.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="844.9" y="181" width="0.2" height="15.0" fill="rgb(223,213,53)" rx="2" ry="2" />
<text  x="847.89" y="191.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.01%)</title><rect x="540.5" y="229" width="0.1" height="15.0" fill="rgb(218,209,41)" rx="2" ry="2" />
<text  x="543.47" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (9 samples, 0.06%)</title><rect x="741.7" y="309" width="0.8" height="15.0" fill="rgb(221,164,28)" rx="2" ry="2" />
<text  x="744.75" y="319.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (338 samples, 2.39%)</title><rect x="809.7" y="437" width="28.2" height="15.0" fill="rgb(247,118,38)" rx="2" ry="2" />
<text  x="812.70" y="447.5" >&lt;..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="514.4" y="325" width="0.2" height="15.0" fill="rgb(249,205,44)" rx="2" ry="2" />
<text  x="517.37" y="335.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (2 samples, 0.01%)</title><rect x="494.5" y="357" width="0.2" height="15.0" fill="rgb(239,150,6)" rx="2" ry="2" />
<text  x="497.52" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (161 samples, 1.14%)</title><rect x="1033.8" y="549" width="13.5" height="15.0" fill="rgb(250,172,34)" rx="2" ry="2" />
<text  x="1036.83" y="559.5" ></text>
</g>
<g >
<title>NaClXCondVarBroadcast (368 samples, 2.60%)</title><rect x="177.8" y="773" width="30.6" height="15.0" fill="rgb(241,147,39)" rx="2" ry="2" />
<text  x="180.76" y="783.5" >Na..</text>
</g>
<g >
<title>lapic_next_deadline (2 samples, 0.01%)</title><rect x="1186.3" y="597" width="0.2" height="15.0" fill="rgb(225,119,19)" rx="2" ry="2" />
<text  x="1189.33" y="607.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (2 samples, 0.01%)</title><rect x="69.4" y="661" width="0.1" height="15.0" fill="rgb(224,89,41)" rx="2" ry="2" />
<text  x="72.37" y="671.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (3 samples, 0.02%)</title><rect x="1181.3" y="677" width="0.3" height="15.0" fill="rgb(230,185,42)" rx="2" ry="2" />
<text  x="1184.33" y="687.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (4 samples, 0.03%)</title><rect x="742.5" y="213" width="0.3" height="15.0" fill="rgb(220,53,35)" rx="2" ry="2" />
<text  x="745.50" y="223.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (38 samples, 0.27%)</title><rect x="870.8" y="293" width="3.2" height="15.0" fill="rgb(242,61,38)" rx="2" ry="2" />
<text  x="873.82" y="303.5" ></text>
</g>
<g >
<title>do_writepages (8 samples, 0.06%)</title><rect x="978.5" y="677" width="0.6" height="15.0" fill="rgb(253,159,4)" rx="2" ry="2" />
<text  x="981.46" y="687.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (3 samples, 0.02%)</title><rect x="875.2" y="469" width="0.2" height="15.0" fill="rgb(240,113,46)" rx="2" ry="2" />
<text  x="878.16" y="479.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.01%)</title><rect x="116.6" y="597" width="0.1" height="15.0" fill="rgb(222,11,50)" rx="2" ry="2" />
<text  x="119.56" y="607.5" ></text>
</g>
<g >
<title>load_balance (5 samples, 0.04%)</title><rect x="28.8" y="693" width="0.4" height="15.0" fill="rgb(225,32,39)" rx="2" ry="2" />
<text  x="31.76" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (7 samples, 0.05%)</title><rect x="114.8" y="597" width="0.6" height="15.0" fill="rgb(237,140,17)" rx="2" ry="2" />
<text  x="117.81" y="607.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="517.0" y="277" width="0.3" height="15.0" fill="rgb(226,184,40)" rx="2" ry="2" />
<text  x="520.04" y="287.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (3 samples, 0.02%)</title><rect x="524.9" y="229" width="0.2" height="15.0" fill="rgb(238,150,28)" rx="2" ry="2" />
<text  x="527.87" y="239.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (157 samples, 1.11%)</title><rect x="697.9" y="277" width="13.1" height="15.0" fill="rgb(207,21,49)" rx="2" ry="2" />
<text  x="700.89" y="287.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (255 samples, 1.80%)</title><rect x="743.0" y="405" width="21.3" height="15.0" fill="rgb(253,118,41)" rx="2" ry="2" />
<text  x="746.00" y="415.5" >r..</text>
</g>
<g >
<title>tick_nohz_next_event (4 samples, 0.03%)</title><rect x="1018.1" y="709" width="0.3" height="15.0" fill="rgb(239,85,15)" rx="2" ry="2" />
<text  x="1021.07" y="719.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.03%)</title><rect x="540.8" y="261" width="0.3" height="15.0" fill="rgb(254,3,25)" rx="2" ry="2" />
<text  x="543.80" y="271.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (55 samples, 0.39%)</title><rect x="512.7" y="357" width="4.6" height="15.0" fill="rgb(249,50,36)" rx="2" ry="2" />
<text  x="515.70" y="367.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (6 samples, 0.04%)</title><rect x="791.7" y="805" width="0.5" height="15.0" fill="rgb(232,10,10)" rx="2" ry="2" />
<text  x="794.69" y="815.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (5 samples, 0.04%)</title><rect x="856.0" y="549" width="0.4" height="15.0" fill="rgb(229,166,13)" rx="2" ry="2" />
<text  x="858.98" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (129 samples, 0.91%)</title><rect x="571.0" y="181" width="10.7" height="15.0" fill="rgb(221,103,0)" rx="2" ry="2" />
<text  x="573.98" y="191.5" ></text>
</g>
</g>
</svg>
