<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="870.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="853" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="853" > </text>
<g id="frames">
<g >
<title>_dl_relocate_object (1 samples, 0.07%)</title><rect x="728.2" y="725" width="0.8" height="15.0" fill="rgb(252,126,47)" rx="2" ry="2" />
<text  x="731.19" y="735.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.07%)</title><rect x="983.8" y="469" width="0.8" height="15.0" fill="rgb(216,172,4)" rx="2" ry="2" />
<text  x="986.78" y="479.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="170.0" y="373" width="0.8" height="15.0" fill="rgb(208,227,45)" rx="2" ry="2" />
<text  x="173.04" y="383.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.07%)</title><rect x="702.7" y="325" width="0.8" height="15.0" fill="rgb(220,189,27)" rx="2" ry="2" />
<text  x="705.71" y="335.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.07%)</title><rect x="82.5" y="293" width="0.8" height="15.0" fill="rgb(243,216,42)" rx="2" ry="2" />
<text  x="85.46" y="303.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.07%)</title><rect x="945.6" y="485" width="0.8" height="15.0" fill="rgb(243,80,22)" rx="2" ry="2" />
<text  x="948.56" y="495.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1 samples, 0.07%)</title><rect x="725.8" y="485" width="0.8" height="15.0" fill="rgb(237,70,5)" rx="2" ry="2" />
<text  x="728.80" y="495.5" ></text>
</g>
<g >
<title>__libc_write (3 samples, 0.20%)</title><rect x="165.3" y="581" width="2.4" height="15.0" fill="rgb(211,210,27)" rx="2" ry="2" />
<text  x="168.26" y="591.5" ></text>
</g>
<g >
<title>NaClSysWrite (317 samples, 21.39%)</title><rect x="270.4" y="741" width="252.4" height="15.0" fill="rgb(216,186,47)" rx="2" ry="2" />
<text  x="273.36" y="751.5" >NaClSysWrite</text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.07%)</title><rect x="911.3" y="629" width="0.8" height="15.0" fill="rgb(224,45,18)" rx="2" ry="2" />
<text  x="914.32" y="639.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.07%)</title><rect x="172.4" y="389" width="0.8" height="15.0" fill="rgb(242,197,27)" rx="2" ry="2" />
<text  x="175.43" y="399.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (12 samples, 0.81%)</title><rect x="786.3" y="501" width="9.6" height="15.0" fill="rgb(231,147,26)" rx="2" ry="2" />
<text  x="789.32" y="511.5" ></text>
</g>
<g >
<title>__writeback_single_inode (9 samples, 0.61%)</title><rect x="998.1" y="629" width="7.2" height="15.0" fill="rgb(253,174,48)" rx="2" ry="2" />
<text  x="1001.11" y="639.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.13%)</title><rect x="1005.3" y="629" width="1.6" height="15.0" fill="rgb(207,125,38)" rx="2" ry="2" />
<text  x="1008.28" y="639.5" ></text>
</g>
<g >
<title>rcu_core (4 samples, 0.27%)</title><rect x="931.2" y="469" width="3.2" height="15.0" fill="rgb(236,61,49)" rx="2" ry="2" />
<text  x="934.23" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (1 samples, 0.07%)</title><rect x="170.8" y="613" width="0.8" height="15.0" fill="rgb(238,105,38)" rx="2" ry="2" />
<text  x="173.84" y="623.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (4 samples, 0.27%)</title><rect x="699.5" y="757" width="3.2" height="15.0" fill="rgb(251,163,52)" rx="2" ry="2" />
<text  x="702.53" y="767.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.07%)</title><rect x="170.8" y="469" width="0.8" height="15.0" fill="rgb(234,5,44)" rx="2" ry="2" />
<text  x="173.84" y="479.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (1 samples, 0.07%)</title><rect x="85.6" y="741" width="0.8" height="15.0" fill="rgb(249,14,24)" rx="2" ry="2" />
<text  x="88.64" y="751.5" ></text>
</g>
<g >
<title>__delete_from_page_cache (15 samples, 1.01%)</title><rect x="875.5" y="629" width="11.9" height="15.0" fill="rgb(225,181,21)" rx="2" ry="2" />
<text  x="878.49" y="639.5" ></text>
</g>
<g >
<title>dentry_lru_isolate (3 samples, 0.20%)</title><rect x="964.7" y="581" width="2.4" height="15.0" fill="rgb(237,131,16)" rx="2" ry="2" />
<text  x="967.67" y="591.5" ></text>
</g>
<g >
<title>do_idle (22 samples, 1.48%)</title><rect x="1172.5" y="677" width="17.5" height="15.0" fill="rgb(231,22,52)" rx="2" ry="2" />
<text  x="1175.48" y="687.5" ></text>
</g>
<g >
<title>do_fault_around (1 samples, 0.07%)</title><rect x="10.8" y="501" width="0.8" height="15.0" fill="rgb(232,28,45)" rx="2" ry="2" />
<text  x="13.80" y="511.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::new (1 samples, 0.07%)</title><rect x="173.2" y="645" width="0.8" height="15.0" fill="rgb(222,184,51)" rx="2" ry="2" />
<text  x="176.23" y="655.5" ></text>
</g>
<g >
<title>__remove_mapping (26 samples, 1.75%)</title><rect x="873.1" y="645" width="20.7" height="15.0" fill="rgb(239,83,54)" rx="2" ry="2" />
<text  x="876.10" y="655.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (118 samples, 7.96%)</title><rect x="175.6" y="645" width="94.0" height="15.0" fill="rgb(213,9,12)" rx="2" ry="2" />
<text  x="178.61" y="655.5" >rustposix::..</text>
</g>
<g >
<title>MarkValidJumpTarget (3 samples, 0.20%)</title><rect x="152.5" y="661" width="2.4" height="15.0" fill="rgb(221,126,29)" rx="2" ry="2" />
<text  x="155.52" y="671.5" ></text>
</g>
<g >
<title>mm_update_next_owner (1 samples, 0.07%)</title><rect x="756.9" y="693" width="0.8" height="15.0" fill="rgb(246,87,15)" rx="2" ry="2" />
<text  x="759.86" y="703.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.07%)</title><rect x="648.6" y="581" width="0.8" height="15.0" fill="rgb(245,177,19)" rx="2" ry="2" />
<text  x="651.57" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.07%)</title><rect x="159.7" y="725" width="0.8" height="15.0" fill="rgb(239,146,30)" rx="2" ry="2" />
<text  x="162.69" y="735.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="163.7" y="453" width="0.8" height="15.0" fill="rgb(239,190,48)" rx="2" ry="2" />
<text  x="166.67" y="463.5" ></text>
</g>
<g >
<title>workingset_refault (1 samples, 0.07%)</title><rect x="1001.3" y="453" width="0.8" height="15.0" fill="rgb(241,128,44)" rx="2" ry="2" />
<text  x="1004.30" y="463.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.07%)</title><rect x="82.5" y="309" width="0.8" height="15.0" fill="rgb(205,116,22)" rx="2" ry="2" />
<text  x="85.46" y="319.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.13%)</title><rect x="947.2" y="485" width="1.5" height="15.0" fill="rgb(207,175,35)" rx="2" ry="2" />
<text  x="950.15" y="495.5" ></text>
</g>
<g >
<title>__list_lru_walk_one (1 samples, 0.07%)</title><rect x="954.3" y="613" width="0.8" height="15.0" fill="rgb(207,216,44)" rx="2" ry="2" />
<text  x="957.32" y="623.5" ></text>
</g>
<g >
<title>llist_add_batch (1 samples, 0.07%)</title><rect x="1170.9" y="613" width="0.8" height="15.0" fill="rgb(243,40,3)" rx="2" ry="2" />
<text  x="1173.89" y="623.5" ></text>
</g>
<g >
<title>CachedMapWritableText (2 samples, 0.13%)</title><rect x="107.9" y="693" width="1.6" height="15.0" fill="rgb(208,110,18)" rx="2" ry="2" />
<text  x="110.94" y="703.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.07%)</title><rect x="796.7" y="469" width="0.8" height="15.0" fill="rgb(217,65,43)" rx="2" ry="2" />
<text  x="799.67" y="479.5" ></text>
</g>
<g >
<title>list_lru_walk_one (3 samples, 0.20%)</title><rect x="990.1" y="613" width="2.4" height="15.0" fill="rgb(232,37,5)" rx="2" ry="2" />
<text  x="993.15" y="623.5" ></text>
</g>
<g >
<title>jbd2_journal_release_jbd_inode (1 samples, 0.07%)</title><rect x="987.0" y="565" width="0.8" height="15.0" fill="rgb(252,92,48)" rx="2" ry="2" />
<text  x="989.96" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.07%)</title><rect x="172.4" y="677" width="0.8" height="15.0" fill="rgb(207,207,44)" rx="2" ry="2" />
<text  x="175.43" y="687.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (8 samples, 0.54%)</title><rect x="395.4" y="597" width="6.3" height="15.0" fill="rgb(251,133,42)" rx="2" ry="2" />
<text  x="398.37" y="607.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook.constprop.0 (1 samples, 0.07%)</title><rect x="945.6" y="341" width="0.8" height="15.0" fill="rgb(228,91,13)" rx="2" ry="2" />
<text  x="948.56" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (1 samples, 0.07%)</title><rect x="272.0" y="597" width="0.8" height="15.0" fill="rgb(237,104,51)" rx="2" ry="2" />
<text  x="274.96" y="607.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.07%)</title><rect x="690.0" y="645" width="0.8" height="15.0" fill="rgb(254,227,17)" rx="2" ry="2" />
<text  x="692.97" y="655.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.07%)</title><rect x="163.7" y="597" width="0.8" height="15.0" fill="rgb(211,118,34)" rx="2" ry="2" />
<text  x="166.67" y="607.5" ></text>
</g>
<g >
<title>do_writepages (9 samples, 0.61%)</title><rect x="998.1" y="613" width="7.2" height="15.0" fill="rgb(250,181,18)" rx="2" ry="2" />
<text  x="1001.11" y="623.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (3 samples, 0.20%)</title><rect x="725.8" y="741" width="2.4" height="15.0" fill="rgb(221,55,25)" rx="2" ry="2" />
<text  x="728.80" y="751.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.07%)</title><rect x="296.6" y="565" width="0.8" height="15.0" fill="rgb(246,90,48)" rx="2" ry="2" />
<text  x="299.64" y="575.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.07%)</title><rect x="865.1" y="629" width="0.8" height="15.0" fill="rgb(245,100,31)" rx="2" ry="2" />
<text  x="868.14" y="639.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (2 samples, 0.13%)</title><rect x="107.9" y="645" width="1.6" height="15.0" fill="rgb(220,72,53)" rx="2" ry="2" />
<text  x="110.94" y="655.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.07%)</title><rect x="952.7" y="341" width="0.8" height="15.0" fill="rgb(219,212,16)" rx="2" ry="2" />
<text  x="955.73" y="351.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="170.0" y="213" width="0.8" height="15.0" fill="rgb(225,124,1)" rx="2" ry="2" />
<text  x="173.04" y="223.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.07%)</title><rect x="796.7" y="517" width="0.8" height="15.0" fill="rgb(213,117,38)" rx="2" ry="2" />
<text  x="799.67" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.07%)</title><rect x="518.0" y="597" width="0.8" height="15.0" fill="rgb(220,210,51)" rx="2" ry="2" />
<text  x="520.99" y="607.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.07%)</title><rect x="978.2" y="421" width="0.8" height="15.0" fill="rgb(245,54,38)" rx="2" ry="2" />
<text  x="981.21" y="431.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.07%)</title><rect x="165.3" y="341" width="0.8" height="15.0" fill="rgb(241,66,30)" rx="2" ry="2" />
<text  x="168.26" y="351.5" ></text>
</g>
<g >
<title>core::cmp::min_by (8 samples, 0.54%)</title><rect x="281.5" y="597" width="6.4" height="15.0" fill="rgb(254,176,35)" rx="2" ry="2" />
<text  x="284.51" y="607.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.07%)</title><rect x="166.9" y="341" width="0.8" height="15.0" fill="rgb(247,206,36)" rx="2" ry="2" />
<text  x="169.86" y="351.5" ></text>
</g>
<g >
<title>ext4_releasepage (42 samples, 2.83%)</title><rect x="920.1" y="629" width="33.4" height="15.0" fill="rgb(209,52,40)" rx="2" ry="2" />
<text  x="923.08" y="639.5" >ex..</text>
</g>
<g >
<title>[unknown] (87 samples, 5.87%)</title><rect x="14.8" y="789" width="69.2" height="15.0" fill="rgb(231,215,48)" rx="2" ry="2" />
<text  x="17.78" y="799.5" >[unknown]</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="945.6" y="533" width="0.8" height="15.0" fill="rgb(226,172,12)" rx="2" ry="2" />
<text  x="948.56" y="543.5" ></text>
</g>
<g >
<title>workingset_age_nonresident (2 samples, 0.13%)</title><rect x="892.2" y="613" width="1.6" height="15.0" fill="rgb(212,65,45)" rx="2" ry="2" />
<text  x="895.21" y="623.5" ></text>
</g>
<g >
<title>radix_tree_node_rcu_free (1 samples, 0.07%)</title><rect x="983.8" y="421" width="0.8" height="15.0" fill="rgb(216,170,28)" rx="2" ry="2" />
<text  x="986.78" y="431.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (2 samples, 0.13%)</title><rect x="107.9" y="709" width="1.6" height="15.0" fill="rgb(233,111,28)" rx="2" ry="2" />
<text  x="110.94" y="719.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.27%)</title><rect x="160.5" y="725" width="3.2" height="15.0" fill="rgb(238,123,20)" rx="2" ry="2" />
<text  x="163.49" y="735.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.07%)</title><rect x="702.7" y="309" width="0.8" height="15.0" fill="rgb(233,92,25)" rx="2" ry="2" />
<text  x="705.71" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="1173.3" y="613" width="0.8" height="15.0" fill="rgb(241,133,48)" rx="2" ry="2" />
<text  x="1176.28" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (1 samples, 0.07%)</title><rect x="174.8" y="597" width="0.8" height="15.0" fill="rgb(212,192,24)" rx="2" ry="2" />
<text  x="177.82" y="607.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.07%)</title><rect x="1167.7" y="725" width="0.8" height="15.0" fill="rgb(230,54,37)" rx="2" ry="2" />
<text  x="1170.71" y="735.5" ></text>
</g>
<g >
<title>[[heap]] (1 samples, 0.07%)</title><rect x="84.8" y="789" width="0.8" height="15.0" fill="rgb(216,37,0)" rx="2" ry="2" />
<text  x="87.84" y="799.5" ></text>
</g>
<g >
<title>filp_close (1 samples, 0.07%)</title><rect x="78.5" y="613" width="0.8" height="15.0" fill="rgb(254,120,43)" rx="2" ry="2" />
<text  x="81.48" y="623.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.07%)</title><rect x="702.7" y="757" width="0.8" height="15.0" fill="rgb(231,188,42)" rx="2" ry="2" />
<text  x="705.71" y="767.5" ></text>
</g>
<g >
<title>isolate_lru_pages (3 samples, 0.20%)</title><rect x="846.8" y="661" width="2.4" height="15.0" fill="rgb(246,196,51)" rx="2" ry="2" />
<text  x="849.83" y="671.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.07%)</title><rect x="172.4" y="517" width="0.8" height="15.0" fill="rgb(231,91,4)" rx="2" ry="2" />
<text  x="175.43" y="527.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.07%)</title><rect x="108.7" y="501" width="0.8" height="15.0" fill="rgb(248,65,44)" rx="2" ry="2" />
<text  x="111.73" y="511.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.07%)</title><rect x="782.3" y="533" width="0.8" height="15.0" fill="rgb(226,154,23)" rx="2" ry="2" />
<text  x="785.33" y="543.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.07%)</title><rect x="1014.8" y="517" width="0.8" height="15.0" fill="rgb(227,139,3)" rx="2" ry="2" />
<text  x="1017.83" y="527.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.07%)</title><rect x="162.9" y="597" width="0.8" height="15.0" fill="rgb(223,0,28)" rx="2" ry="2" />
<text  x="165.87" y="607.5" ></text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.07%)</title><rect x="167.7" y="533" width="0.7" height="15.0" fill="rgb(249,166,1)" rx="2" ry="2" />
<text  x="170.65" y="543.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.07%)</title><rect x="170.0" y="341" width="0.8" height="15.0" fill="rgb(233,79,30)" rx="2" ry="2" />
<text  x="173.04" y="351.5" ></text>
</g>
<g >
<title>HandleStackContext (1 samples, 0.07%)</title><rect x="104.8" y="757" width="0.7" height="15.0" fill="rgb(224,21,49)" rx="2" ry="2" />
<text  x="107.75" y="767.5" ></text>
</g>
<g >
<title>shmem_add_to_page_cache (1 samples, 0.07%)</title><rect x="701.1" y="437" width="0.8" height="15.0" fill="rgb(233,212,52)" rx="2" ry="2" />
<text  x="704.12" y="447.5" ></text>
</g>
<g >
<title>schedule_idle (7 samples, 0.47%)</title><rect x="1183.6" y="661" width="5.6" height="15.0" fill="rgb(250,136,51)" rx="2" ry="2" />
<text  x="1186.63" y="671.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.07%)</title><rect x="1173.3" y="485" width="0.8" height="15.0" fill="rgb(251,156,24)" rx="2" ry="2" />
<text  x="1176.28" y="495.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (10 samples, 0.67%)</title><rect x="287.9" y="597" width="7.9" height="15.0" fill="rgb(222,107,38)" rx="2" ry="2" />
<text  x="290.88" y="607.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.07%)</title><rect x="701.1" y="469" width="0.8" height="15.0" fill="rgb(222,59,18)" rx="2" ry="2" />
<text  x="704.12" y="479.5" ></text>
</g>
<g >
<title>clear_page_dirty_for_io (1 samples, 0.07%)</title><rect x="998.1" y="533" width="0.8" height="15.0" fill="rgb(233,199,52)" rx="2" ry="2" />
<text  x="1001.11" y="543.5" ></text>
</g>
<g >
<title>page_counter_uncharge (1 samples, 0.07%)</title><rect x="912.9" y="613" width="0.8" height="15.0" fill="rgb(242,146,11)" rx="2" ry="2" />
<text  x="915.91" y="623.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (90 samples, 6.07%)</title><rect x="195.5" y="565" width="71.7" height="15.0" fill="rgb(243,41,12)" rx="2" ry="2" />
<text  x="198.52" y="575.5" >core::in..</text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.07%)</title><rect x="796.7" y="581" width="0.8" height="15.0" fill="rgb(218,25,6)" rx="2" ry="2" />
<text  x="799.67" y="591.5" ></text>
</g>
<g >
<title>rcu_core_si (2 samples, 0.13%)</title><rect x="917.7" y="533" width="1.6" height="15.0" fill="rgb(247,39,47)" rx="2" ry="2" />
<text  x="920.69" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.07%)</title><rect x="268.8" y="581" width="0.8" height="15.0" fill="rgb(253,40,8)" rx="2" ry="2" />
<text  x="271.77" y="591.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.07%)</title><rect x="1001.3" y="469" width="0.8" height="15.0" fill="rgb(209,72,37)" rx="2" ry="2" />
<text  x="1004.30" y="479.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (6 samples, 0.40%)</title><rect x="973.4" y="581" width="4.8" height="15.0" fill="rgb(244,220,2)" rx="2" ry="2" />
<text  x="976.43" y="591.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.07%)</title><rect x="933.6" y="437" width="0.8" height="15.0" fill="rgb(235,225,49)" rx="2" ry="2" />
<text  x="936.62" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.13%)</title><rect x="193.1" y="581" width="1.6" height="15.0" fill="rgb(212,8,21)" rx="2" ry="2" />
<text  x="196.13" y="591.5" ></text>
</g>
<g >
<title>__set_page_dirty (2 samples, 0.13%)</title><rect x="81.7" y="357" width="1.6" height="15.0" fill="rgb(207,80,35)" rx="2" ry="2" />
<text  x="84.66" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.07%)</title><rect x="164.5" y="597" width="0.8" height="15.0" fill="rgb(233,19,2)" rx="2" ry="2" />
<text  x="167.47" y="607.5" ></text>
</g>
<g >
<title>ext4_convert_unwritten_extents (1 samples, 0.07%)</title><rect x="994.9" y="677" width="0.8" height="15.0" fill="rgb(246,214,33)" rx="2" ry="2" />
<text  x="997.93" y="687.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (2 samples, 0.13%)</title><rect x="157.3" y="661" width="1.6" height="15.0" fill="rgb(210,34,32)" rx="2" ry="2" />
<text  x="160.30" y="671.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.07%)</title><rect x="172.4" y="565" width="0.8" height="15.0" fill="rgb(215,115,23)" rx="2" ry="2" />
<text  x="175.43" y="575.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.07%)</title><rect x="172.4" y="437" width="0.8" height="15.0" fill="rgb(238,63,5)" rx="2" ry="2" />
<text  x="175.43" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (1 samples, 0.07%)</title><rect x="727.4" y="389" width="0.8" height="15.0" fill="rgb(243,125,6)" rx="2" ry="2" />
<text  x="730.40" y="399.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="727.4" y="517" width="0.8" height="15.0" fill="rgb(208,115,10)" rx="2" ry="2" />
<text  x="730.40" y="527.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.07%)</title><rect x="1014.8" y="565" width="0.8" height="15.0" fill="rgb(235,155,50)" rx="2" ry="2" />
<text  x="1017.83" y="575.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (4 samples, 0.27%)</title><rect x="699.5" y="645" width="3.2" height="15.0" fill="rgb(229,188,14)" rx="2" ry="2" />
<text  x="702.53" y="655.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.13%)</title><rect x="701.1" y="517" width="1.6" height="15.0" fill="rgb(248,89,42)" rx="2" ry="2" />
<text  x="704.12" y="527.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (2 samples, 0.13%)</title><rect x="169.2" y="725" width="1.6" height="15.0" fill="rgb(222,83,37)" rx="2" ry="2" />
<text  x="172.24" y="735.5" ></text>
</g>
<g >
<title>pick_next_task_fair (7 samples, 0.47%)</title><rect x="1183.6" y="629" width="5.6" height="15.0" fill="rgb(252,21,53)" rx="2" ry="2" />
<text  x="1186.63" y="639.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (144 samples, 9.72%)</title><rect x="403.3" y="597" width="114.7" height="15.0" fill="rgb(248,87,10)" rx="2" ry="2" />
<text  x="406.33" y="607.5" >ringbuf::ring_..</text>
</g>
<g >
<title>do_softirq_own_stack (4 samples, 0.27%)</title><rect x="931.2" y="533" width="3.2" height="15.0" fill="rgb(253,82,27)" rx="2" ry="2" />
<text  x="934.23" y="543.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.13%)</title><rect x="885.8" y="581" width="1.6" height="15.0" fill="rgb(218,218,37)" rx="2" ry="2" />
<text  x="888.84" y="591.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.07%)</title><rect x="1173.3" y="501" width="0.8" height="15.0" fill="rgb(229,81,23)" rx="2" ry="2" />
<text  x="1176.28" y="511.5" ></text>
</g>
<g >
<title>do_iter_write (6 samples, 0.40%)</title><rect x="79.3" y="501" width="4.7" height="15.0" fill="rgb(238,153,32)" rx="2" ry="2" />
<text  x="82.27" y="511.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (308 samples, 20.78%)</title><rect x="272.8" y="645" width="245.2" height="15.0" fill="rgb(206,220,44)" rx="2" ry="2" />
<text  x="275.75" y="655.5" >rustposix::interface::pipe::Emul..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="952.7" y="533" width="0.8" height="15.0" fill="rgb(206,127,15)" rx="2" ry="2" />
<text  x="955.73" y="543.5" ></text>
</g>
<g >
<title>destroy_inode (1 samples, 0.07%)</title><rect x="986.2" y="597" width="0.8" height="15.0" fill="rgb(233,160,1)" rx="2" ry="2" />
<text  x="989.17" y="607.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampoline (1 samples, 0.07%)</title><rect x="169.2" y="645" width="0.8" height="15.0" fill="rgb(254,112,32)" rx="2" ry="2" />
<text  x="172.24" y="655.5" ></text>
</g>
<g >
<title>NaClHostDescRead (120 samples, 8.10%)</title><rect x="174.8" y="709" width="95.6" height="15.0" fill="rgb(229,169,26)" rx="2" ry="2" />
<text  x="177.82" y="719.5" >NaClHostDes..</text>
</g>
<g >
<title>ext4_file_write_iter (3 samples, 0.20%)</title><rect x="165.3" y="405" width="2.4" height="15.0" fill="rgb(227,50,28)" rx="2" ry="2" />
<text  x="168.26" y="415.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.07%)</title><rect x="885.0" y="581" width="0.8" height="15.0" fill="rgb(220,11,38)" rx="2" ry="2" />
<text  x="888.05" y="591.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.07%)</title><rect x="796.7" y="485" width="0.8" height="15.0" fill="rgb(216,5,31)" rx="2" ry="2" />
<text  x="799.67" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_close (1 samples, 0.07%)</title><rect x="78.5" y="645" width="0.8" height="15.0" fill="rgb(205,151,1)" rx="2" ry="2" />
<text  x="81.48" y="655.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (18 samples, 1.21%)</title><rect x="281.5" y="613" width="14.3" height="15.0" fill="rgb(211,169,3)" rx="2" ry="2" />
<text  x="284.51" y="623.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (1 samples, 0.07%)</title><rect x="167.7" y="293" width="0.7" height="15.0" fill="rgb(243,198,20)" rx="2" ry="2" />
<text  x="170.65" y="303.5" ></text>
</g>
<g >
<title>__dentry_kill (16 samples, 1.08%)</title><rect x="967.1" y="597" width="12.7" height="15.0" fill="rgb(209,224,47)" rx="2" ry="2" />
<text  x="970.06" y="607.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (22 samples, 1.48%)</title><rect x="1172.5" y="773" width="17.5" height="15.0" fill="rgb(224,119,50)" rx="2" ry="2" />
<text  x="1175.48" y="783.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (6 samples, 0.40%)</title><rect x="79.3" y="469" width="4.7" height="15.0" fill="rgb(220,102,10)" rx="2" ry="2" />
<text  x="82.27" y="479.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.07%)</title><rect x="170.0" y="613" width="0.8" height="15.0" fill="rgb(239,103,49)" rx="2" ry="2" />
<text  x="173.04" y="623.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.13%)</title><rect x="701.1" y="533" width="1.6" height="15.0" fill="rgb(240,179,54)" rx="2" ry="2" />
<text  x="704.12" y="543.5" ></text>
</g>
<g >
<title>run_ksoftirqd (3 samples, 0.20%)</title><rect x="992.5" y="741" width="2.4" height="15.0" fill="rgb(217,149,36)" rx="2" ry="2" />
<text  x="995.54" y="751.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.07%)</title><rect x="950.3" y="549" width="0.8" height="15.0" fill="rgb(213,151,27)" rx="2" ry="2" />
<text  x="953.34" y="559.5" ></text>
</g>
<g >
<title>prune_dcache_sb (36 samples, 2.43%)</title><rect x="955.9" y="629" width="28.7" height="15.0" fill="rgb(209,42,6)" rx="2" ry="2" />
<text  x="958.91" y="639.5" >pr..</text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (73 samples, 4.93%)</title><rect x="105.5" y="757" width="58.2" height="15.0" fill="rgb(218,229,13)" rx="2" ry="2" />
<text  x="108.55" y="767.5" >NaClSy..</text>
</g>
<g >
<title>serde_json::ser::to_writer (1 samples, 0.07%)</title><rect x="168.4" y="613" width="0.8" height="15.0" fill="rgb(247,111,18)" rx="2" ry="2" />
<text  x="171.45" y="623.5" ></text>
</g>
<g >
<title>NaClSysExecv (2 samples, 0.13%)</title><rect x="163.7" y="725" width="1.6" height="15.0" fill="rgb(237,64,37)" rx="2" ry="2" />
<text  x="166.67" y="735.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.07%)</title><rect x="170.8" y="421" width="0.8" height="15.0" fill="rgb(223,145,47)" rx="2" ry="2" />
<text  x="173.84" y="431.5" ></text>
</g>
<g >
<title>handle_pte_fault (108 samples, 7.29%)</title><rect x="605.6" y="693" width="86.0" height="15.0" fill="rgb(225,159,54)" rx="2" ry="2" />
<text  x="608.57" y="703.5" >handle_pte..</text>
</g>
<g >
<title>std::sys::unix::fs::unlink (1 samples, 0.07%)</title><rect x="726.6" y="661" width="0.8" height="15.0" fill="rgb(253,168,50)" rx="2" ry="2" />
<text  x="729.60" y="671.5" ></text>
</g>
<g >
<title>__GI_munmap (1 samples, 0.07%)</title><rect x="159.7" y="709" width="0.8" height="15.0" fill="rgb(229,30,26)" rx="2" ry="2" />
<text  x="162.69" y="719.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.07%)</title><rect x="917.7" y="469" width="0.8" height="15.0" fill="rgb(214,187,29)" rx="2" ry="2" />
<text  x="920.69" y="479.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.07%)</title><rect x="727.4" y="565" width="0.8" height="15.0" fill="rgb(254,212,23)" rx="2" ry="2" />
<text  x="730.40" y="575.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="727.4" y="597" width="0.8" height="15.0" fill="rgb(247,75,35)" rx="2" ry="2" />
<text  x="730.40" y="607.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.07%)</title><rect x="296.6" y="581" width="0.8" height="15.0" fill="rgb(251,109,22)" rx="2" ry="2" />
<text  x="299.64" y="591.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (1 samples, 0.07%)</title><rect x="83.3" y="421" width="0.7" height="15.0" fill="rgb(251,205,6)" rx="2" ry="2" />
<text  x="86.25" y="431.5" ></text>
</g>
<g >
<title>page_remove_rmap (6 samples, 0.40%)</title><rect x="774.4" y="581" width="4.7" height="15.0" fill="rgb(233,224,46)" rx="2" ry="2" />
<text  x="777.37" y="591.5" ></text>
</g>
<g >
<title>rcu_core (2 samples, 0.13%)</title><rect x="916.1" y="517" width="1.6" height="15.0" fill="rgb(211,144,13)" rx="2" ry="2" />
<text  x="919.10" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="171.6" y="613" width="0.8" height="15.0" fill="rgb(251,131,24)" rx="2" ry="2" />
<text  x="174.63" y="623.5" ></text>
</g>
<g >
<title>ovl_unlink (1 samples, 0.07%)</title><rect x="167.7" y="501" width="0.7" height="15.0" fill="rgb(253,207,18)" rx="2" ry="2" />
<text  x="170.65" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (5 samples, 0.34%)</title><rect x="165.3" y="677" width="3.9" height="15.0" fill="rgb(213,113,43)" rx="2" ry="2" />
<text  x="168.26" y="687.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (4 samples, 0.27%)</title><rect x="1168.5" y="661" width="3.2" height="15.0" fill="rgb(209,74,51)" rx="2" ry="2" />
<text  x="1171.50" y="671.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.07%)</title><rect x="702.7" y="645" width="0.8" height="15.0" fill="rgb(224,124,10)" rx="2" ry="2" />
<text  x="705.71" y="655.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (1 samples, 0.07%)</title><rect x="272.0" y="645" width="0.8" height="15.0" fill="rgb(250,85,12)" rx="2" ry="2" />
<text  x="274.96" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="78.5" y="661" width="0.8" height="15.0" fill="rgb(253,219,45)" rx="2" ry="2" />
<text  x="81.48" y="671.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (1 samples, 0.07%)</title><rect x="85.6" y="757" width="0.8" height="15.0" fill="rgb(248,58,53)" rx="2" ry="2" />
<text  x="88.64" y="767.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.07%)</title><rect x="1006.9" y="645" width="0.8" height="15.0" fill="rgb(241,21,25)" rx="2" ry="2" />
<text  x="1009.87" y="655.5" ></text>
</g>
<g >
<title>psi_task_switch (1 samples, 0.07%)</title><rect x="1171.7" y="693" width="0.8" height="15.0" fill="rgb(247,57,36)" rx="2" ry="2" />
<text  x="1174.69" y="703.5" ></text>
</g>
<g >
<title>rcu_core_si (8 samples, 0.54%)</title><rect x="1008.5" y="581" width="6.3" height="15.0" fill="rgb(240,54,26)" rx="2" ry="2" />
<text  x="1011.46" y="591.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="174.0" y="437" width="0.8" height="15.0" fill="rgb(215,226,44)" rx="2" ry="2" />
<text  x="177.02" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.07%)</title><rect x="10.8" y="565" width="0.8" height="15.0" fill="rgb(241,131,20)" rx="2" ry="2" />
<text  x="13.80" y="575.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.07%)</title><rect x="725.8" y="709" width="0.8" height="15.0" fill="rgb(249,11,25)" rx="2" ry="2" />
<text  x="728.80" y="719.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (2 samples, 0.13%)</title><rect x="81.7" y="373" width="1.6" height="15.0" fill="rgb(219,140,32)" rx="2" ry="2" />
<text  x="84.66" y="383.5" ></text>
</g>
<g >
<title>shrink_node (185 samples, 12.48%)</title><rect x="845.2" y="725" width="147.3" height="15.0" fill="rgb(205,124,27)" rx="2" ry="2" />
<text  x="848.24" y="735.5" >shrink_node</text>
</g>
<g >
<title>list_lru_walk_one_irq (1 samples, 0.07%)</title><rect x="954.3" y="629" width="0.8" height="15.0" fill="rgb(240,141,12)" rx="2" ry="2" />
<text  x="957.32" y="639.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (203 samples, 13.70%)</title><rect x="1005.3" y="693" width="161.6" height="15.0" fill="rgb(240,91,11)" rx="2" ry="2" />
<text  x="1008.28" y="703.5" >cpuidle_enter_state</text>
</g>
<g >
<title>std::fs::remove_file (1 samples, 0.07%)</title><rect x="167.7" y="629" width="0.7" height="15.0" fill="rgb(249,105,32)" rx="2" ry="2" />
<text  x="170.65" y="639.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.07%)</title><rect x="172.4" y="533" width="0.8" height="15.0" fill="rgb(210,160,5)" rx="2" ry="2" />
<text  x="175.43" y="543.5" ></text>
</g>
<g >
<title>lind_read (120 samples, 8.10%)</title><rect x="174.8" y="693" width="95.6" height="15.0" fill="rgb(215,0,1)" rx="2" ry="2" />
<text  x="177.82" y="703.5" >lind_read</text>
</g>
<g >
<title>ahci_scr_read (1 samples, 0.07%)</title><rect x="1006.1" y="485" width="0.8" height="15.0" fill="rgb(254,105,27)" rx="2" ry="2" />
<text  x="1009.07" y="495.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (17 samples, 1.15%)</title><rect x="662.9" y="661" width="13.5" height="15.0" fill="rgb(214,62,11)" rx="2" ry="2" />
<text  x="665.90" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (1 samples, 0.07%)</title><rect x="172.4" y="661" width="0.8" height="15.0" fill="rgb(207,100,41)" rx="2" ry="2" />
<text  x="175.43" y="671.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.07%)</title><rect x="796.7" y="629" width="0.8" height="15.0" fill="rgb(207,196,26)" rx="2" ry="2" />
<text  x="799.67" y="639.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.07%)</title><rect x="10.8" y="597" width="0.8" height="15.0" fill="rgb(243,81,24)" rx="2" ry="2" />
<text  x="13.80" y="607.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.07%)</title><rect x="1014.8" y="549" width="0.8" height="15.0" fill="rgb(207,100,4)" rx="2" ry="2" />
<text  x="1017.83" y="559.5" ></text>
</g>
<g >
<title>cpuidle_enter (9 samples, 0.61%)</title><rect x="1172.5" y="645" width="7.1" height="15.0" fill="rgb(223,35,14)" rx="2" ry="2" />
<text  x="1175.48" y="655.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.07%)</title><rect x="956.7" y="613" width="0.8" height="15.0" fill="rgb(228,222,43)" rx="2" ry="2" />
<text  x="959.71" y="623.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (9 samples, 0.61%)</title><rect x="1008.5" y="661" width="7.1" height="15.0" fill="rgb(238,222,31)" rx="2" ry="2" />
<text  x="1011.46" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.07%)</title><rect x="269.6" y="613" width="0.8" height="15.0" fill="rgb(236,187,50)" rx="2" ry="2" />
<text  x="272.57" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="727.4" y="229" width="0.8" height="15.0" fill="rgb(228,179,24)" rx="2" ry="2" />
<text  x="730.40" y="239.5" ></text>
</g>
<g >
<title>dup_task_struct (1 samples, 0.07%)</title><rect x="725.0" y="677" width="0.8" height="15.0" fill="rgb(235,148,27)" rx="2" ry="2" />
<text  x="728.01" y="687.5" ></text>
</g>
<g >
<title>copy_page_from_iter (1 samples, 0.07%)</title><rect x="702.7" y="629" width="0.8" height="15.0" fill="rgb(225,72,14)" rx="2" ry="2" />
<text  x="705.71" y="639.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.07%)</title><rect x="84.8" y="757" width="0.8" height="15.0" fill="rgb(241,80,38)" rx="2" ry="2" />
<text  x="87.84" y="767.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.07%)</title><rect x="170.0" y="165" width="0.8" height="15.0" fill="rgb(236,171,38)" rx="2" ry="2" />
<text  x="173.04" y="175.5" ></text>
</g>
<g >
<title>napi_poll (1 samples, 0.07%)</title><rect x="1006.9" y="565" width="0.8" height="15.0" fill="rgb(234,215,15)" rx="2" ry="2" />
<text  x="1009.87" y="575.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (1 samples, 0.07%)</title><rect x="727.4" y="325" width="0.8" height="15.0" fill="rgb(216,119,23)" rx="2" ry="2" />
<text  x="730.40" y="335.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (1 samples, 0.07%)</title><rect x="170.0" y="549" width="0.8" height="15.0" fill="rgb(251,223,16)" rx="2" ry="2" />
<text  x="173.04" y="559.5" ></text>
</g>
<g >
<title>__d_free (1 samples, 0.07%)</title><rect x="916.1" y="485" width="0.8" height="15.0" fill="rgb(226,124,14)" rx="2" ry="2" />
<text  x="919.10" y="495.5" ></text>
</g>
<g >
<title>__d_free (1 samples, 0.07%)</title><rect x="917.7" y="485" width="0.8" height="15.0" fill="rgb(247,212,13)" rx="2" ry="2" />
<text  x="920.69" y="495.5" ></text>
</g>
<g >
<title>dispatcher (2 samples, 0.13%)</title><rect x="173.2" y="693" width="1.6" height="15.0" fill="rgb(243,198,41)" rx="2" ry="2" />
<text  x="176.23" y="703.5" ></text>
</g>
<g >
<title>_rl_set_screen_size (2 samples, 0.13%)</title><rect x="10.8" y="661" width="1.6" height="15.0" fill="rgb(241,153,34)" rx="2" ry="2" />
<text  x="13.80" y="671.5" ></text>
</g>
<g >
<title>load_balance (6 samples, 0.40%)</title><rect x="1183.6" y="597" width="4.8" height="15.0" fill="rgb(228,174,6)" rx="2" ry="2" />
<text  x="1186.63" y="607.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (9 samples, 0.61%)</title><rect x="998.1" y="661" width="7.2" height="15.0" fill="rgb(248,157,45)" rx="2" ry="2" />
<text  x="1001.11" y="671.5" ></text>
</g>
<g >
<title>lru_add_drain (1 samples, 0.07%)</title><rect x="865.9" y="661" width="0.8" height="15.0" fill="rgb(211,49,10)" rx="2" ry="2" />
<text  x="868.94" y="671.5" ></text>
</g>
<g >
<title>ovl_cleanup_and_whiteout (1 samples, 0.07%)</title><rect x="167.7" y="453" width="0.7" height="15.0" fill="rgb(241,86,33)" rx="2" ry="2" />
<text  x="170.65" y="463.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.07%)</title><rect x="163.7" y="373" width="0.8" height="15.0" fill="rgb(225,130,15)" rx="2" ry="2" />
<text  x="166.67" y="383.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.07%)</title><rect x="168.4" y="485" width="0.8" height="15.0" fill="rgb(246,128,21)" rx="2" ry="2" />
<text  x="171.45" y="495.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.07%)</title><rect x="78.5" y="597" width="0.8" height="15.0" fill="rgb(212,115,25)" rx="2" ry="2" />
<text  x="81.48" y="607.5" ></text>
</g>
<g >
<title>__schedule (7 samples, 0.47%)</title><rect x="1183.6" y="645" width="5.6" height="15.0" fill="rgb(207,113,27)" rx="2" ry="2" />
<text  x="1186.63" y="655.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.13%)</title><rect x="917.7" y="629" width="1.6" height="15.0" fill="rgb(215,6,2)" rx="2" ry="2" />
<text  x="920.69" y="639.5" ></text>
</g>
<g >
<title>cpuidle_enter (203 samples, 13.70%)</title><rect x="1005.3" y="709" width="161.6" height="15.0" fill="rgb(236,11,9)" rx="2" ry="2" />
<text  x="1008.28" y="719.5" >cpuidle_enter</text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.07%)</title><rect x="295.8" y="581" width="0.8" height="15.0" fill="rgb(241,111,20)" rx="2" ry="2" />
<text  x="298.84" y="591.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (185 samples, 12.48%)</title><rect x="845.2" y="709" width="147.3" height="15.0" fill="rgb(229,52,54)" rx="2" ry="2" />
<text  x="848.24" y="719.5" >shrink_node_memcgs</text>
</g>
<g >
<title>obj_cgroup_uncharge (1 samples, 0.07%)</title><rect x="916.1" y="453" width="0.8" height="15.0" fill="rgb(237,111,32)" rx="2" ry="2" />
<text  x="919.10" y="463.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.07%)</title><rect x="1188.4" y="597" width="0.8" height="15.0" fill="rgb(205,178,50)" rx="2" ry="2" />
<text  x="1191.41" y="607.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 2.16%)</title><rect x="699.5" y="789" width="25.5" height="15.0" fill="rgb(253,158,12)" rx="2" ry="2" />
<text  x="702.53" y="799.5" >[..</text>
</g>
<g >
<title>page_counter_try_charge (2 samples, 0.13%)</title><rect x="684.4" y="629" width="1.6" height="15.0" fill="rgb(223,148,37)" rx="2" ry="2" />
<text  x="687.40" y="639.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (6 samples, 0.40%)</title><rect x="703.5" y="661" width="4.8" height="15.0" fill="rgb(238,42,37)" rx="2" ry="2" />
<text  x="706.51" y="671.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.07%)</title><rect x="268.8" y="613" width="0.8" height="15.0" fill="rgb(212,203,49)" rx="2" ry="2" />
<text  x="271.77" y="623.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.07%)</title><rect x="295.8" y="597" width="0.8" height="15.0" fill="rgb(234,70,50)" rx="2" ry="2" />
<text  x="298.84" y="607.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.07%)</title><rect x="983.8" y="437" width="0.8" height="15.0" fill="rgb(209,86,22)" rx="2" ry="2" />
<text  x="986.78" y="447.5" ></text>
</g>
<g >
<title>do_iter_write (3 samples, 0.20%)</title><rect x="165.3" y="437" width="2.4" height="15.0" fill="rgb(207,205,36)" rx="2" ry="2" />
<text  x="168.26" y="447.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook.constprop.0 (1 samples, 0.07%)</title><rect x="951.9" y="549" width="0.8" height="15.0" fill="rgb(234,2,17)" rx="2" ry="2" />
<text  x="954.93" y="559.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.13%)</title><rect x="947.2" y="549" width="1.5" height="15.0" fill="rgb(216,13,39)" rx="2" ry="2" />
<text  x="950.15" y="559.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.07%)</title><rect x="159.7" y="645" width="0.8" height="15.0" fill="rgb(221,175,35)" rx="2" ry="2" />
<text  x="162.69" y="655.5" ></text>
</g>
<g >
<title>shrink_page_list (108 samples, 7.29%)</title><rect x="867.5" y="661" width="86.0" height="15.0" fill="rgb(221,50,41)" rx="2" ry="2" />
<text  x="870.53" y="671.5" >shrink_pag..</text>
</g>
<g >
<title>free_unref_page_list (15 samples, 1.01%)</title><rect x="783.9" y="533" width="12.0" height="15.0" fill="rgb(240,72,25)" rx="2" ry="2" />
<text  x="786.93" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="725.0" y="757" width="0.8" height="15.0" fill="rgb(221,89,39)" rx="2" ry="2" />
<text  x="728.01" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (77 samples, 5.20%)</title><rect x="14.8" y="645" width="61.3" height="15.0" fill="rgb(240,187,18)" rx="2" ry="2" />
<text  x="17.78" y="655.5" >__x64_..</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (9 samples, 0.61%)</title><rect x="1008.5" y="613" width="7.1" height="15.0" fill="rgb(245,225,23)" rx="2" ry="2" />
<text  x="1011.46" y="623.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.07%)</title><rect x="172.4" y="405" width="0.8" height="15.0" fill="rgb(245,33,8)" rx="2" ry="2" />
<text  x="175.43" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (1 samples, 0.07%)</title><rect x="163.7" y="469" width="0.8" height="15.0" fill="rgb(253,14,22)" rx="2" ry="2" />
<text  x="166.67" y="479.5" ></text>
</g>
<g >
<title>find_get_pages_range (1 samples, 0.07%)</title><rect x="1000.5" y="533" width="0.8" height="15.0" fill="rgb(231,30,14)" rx="2" ry="2" />
<text  x="1003.50" y="543.5" ></text>
</g>
<g >
<title>ext4_inode_csum (1 samples, 0.07%)</title><rect x="166.1" y="229" width="0.8" height="15.0" fill="rgb(222,1,35)" rx="2" ry="2" />
<text  x="169.06" y="239.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (2 samples, 0.13%)</title><rect x="988.6" y="565" width="1.5" height="15.0" fill="rgb(206,182,14)" rx="2" ry="2" />
<text  x="991.56" y="575.5" ></text>
</g>
<g >
<title>__d_free (1 samples, 0.07%)</title><rect x="1009.3" y="533" width="0.8" height="15.0" fill="rgb(220,29,24)" rx="2" ry="2" />
<text  x="1012.26" y="543.5" ></text>
</g>
<g >
<title>perf_event__prepare_comm (1 samples, 0.07%)</title><rect x="78.5" y="725" width="0.8" height="15.0" fill="rgb(211,108,26)" rx="2" ry="2" />
<text  x="81.48" y="735.5" ></text>
</g>
<g >
<title>sel_ldr (896 samples, 60.46%)</title><rect x="84.0" y="805" width="713.5" height="15.0" fill="rgb(241,207,29)" rx="2" ry="2" />
<text  x="87.05" y="815.5" >sel_ldr</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (9 samples, 0.61%)</title><rect x="97.6" y="725" width="7.2" height="15.0" fill="rgb(216,127,29)" rx="2" ry="2" />
<text  x="100.58" y="735.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (1 samples, 0.07%)</title><rect x="910.5" y="565" width="0.8" height="15.0" fill="rgb(216,217,32)" rx="2" ry="2" />
<text  x="913.53" y="575.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="295.8" y="565" width="0.8" height="15.0" fill="rgb(238,65,50)" rx="2" ry="2" />
<text  x="298.84" y="575.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (5 samples, 0.34%)</title><rect x="1010.9" y="533" width="3.9" height="15.0" fill="rgb(241,221,39)" rx="2" ry="2" />
<text  x="1013.85" y="543.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (1 samples, 0.07%)</title><rect x="163.7" y="501" width="0.8" height="15.0" fill="rgb(244,161,44)" rx="2" ry="2" />
<text  x="166.67" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::try_statx::statx (1 samples, 0.07%)</title><rect x="173.2" y="565" width="0.8" height="15.0" fill="rgb(219,200,21)" rx="2" ry="2" />
<text  x="176.23" y="575.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (232 samples, 15.65%)</title><rect x="1005.3" y="789" width="184.7" height="15.0" fill="rgb(223,55,27)" rx="2" ry="2" />
<text  x="1008.28" y="799.5" >secondary_startup_64_no_..</text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.07%)</title><rect x="1173.3" y="469" width="0.8" height="15.0" fill="rgb(254,26,32)" rx="2" ry="2" />
<text  x="1176.28" y="479.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="174.8" y="629" width="0.8" height="15.0" fill="rgb(234,207,54)" rx="2" ry="2" />
<text  x="177.82" y="639.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="168.4" y="549" width="0.8" height="15.0" fill="rgb(217,170,15)" rx="2" ry="2" />
<text  x="171.45" y="559.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.07%)</title><rect x="918.5" y="485" width="0.8" height="15.0" fill="rgb(238,175,33)" rx="2" ry="2" />
<text  x="921.49" y="495.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (15 samples, 1.01%)</title><rect x="176.4" y="613" width="12.0" height="15.0" fill="rgb(243,124,5)" rx="2" ry="2" />
<text  x="179.41" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (314 samples, 21.19%)</title><rect x="271.2" y="661" width="250.0" height="15.0" fill="rgb(250,228,40)" rx="2" ry="2" />
<text  x="274.16" y="671.5" >rustposix::safeposix::syscalls::f..</text>
</g>
<g >
<title>NaClVmmapRemove (1 samples, 0.07%)</title><rect x="171.6" y="709" width="0.8" height="15.0" fill="rgb(235,27,37)" rx="2" ry="2" />
<text  x="174.63" y="719.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.07%)</title><rect x="162.1" y="581" width="0.8" height="15.0" fill="rgb(239,20,37)" rx="2" ry="2" />
<text  x="165.08" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.13%)</title><rect x="193.1" y="565" width="1.6" height="15.0" fill="rgb(239,130,5)" rx="2" ry="2" />
<text  x="196.13" y="575.5" ></text>
</g>
<g >
<title>execute_command (2 samples, 0.13%)</title><rect x="10.8" y="725" width="1.6" height="15.0" fill="rgb(240,167,21)" rx="2" ry="2" />
<text  x="13.80" y="735.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.07%)</title><rect x="727.4" y="405" width="0.8" height="15.0" fill="rgb(215,183,42)" rx="2" ry="2" />
<text  x="730.40" y="415.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.07%)</title><rect x="1166.1" y="661" width="0.8" height="15.0" fill="rgb(246,169,51)" rx="2" ry="2" />
<text  x="1169.11" y="671.5" ></text>
</g>
<g >
<title>event_function (64 samples, 4.32%)</title><rect x="21.9" y="501" width="51.0" height="15.0" fill="rgb(249,68,12)" rx="2" ry="2" />
<text  x="24.94" y="511.5" >event..</text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.07%)</title><rect x="166.1" y="277" width="0.8" height="15.0" fill="rgb(208,2,22)" rx="2" ry="2" />
<text  x="169.06" y="287.5" ></text>
</g>
<g >
<title>CheckMemoryAccess (1 samples, 0.07%)</title><rect x="151.7" y="661" width="0.8" height="15.0" fill="rgb(242,13,38)" rx="2" ry="2" />
<text  x="154.73" y="671.5" ></text>
</g>
<g >
<title>mblen (1 samples, 0.07%)</title><rect x="12.4" y="725" width="0.8" height="15.0" fill="rgb(239,17,22)" rx="2" ry="2" />
<text  x="15.39" y="735.5" ></text>
</g>
<g >
<title>vfs_iter_write (6 samples, 0.40%)</title><rect x="79.3" y="517" width="4.7" height="15.0" fill="rgb(221,52,44)" rx="2" ry="2" />
<text  x="82.27" y="527.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (22 samples, 1.48%)</title><rect x="779.1" y="565" width="17.6" height="15.0" fill="rgb(209,121,18)" rx="2" ry="2" />
<text  x="782.15" y="575.5" ></text>
</g>
<g >
<title>intercept_process_vm_writev (1 samples, 0.07%)</title><rect x="702.7" y="709" width="0.8" height="15.0" fill="rgb(228,61,5)" rx="2" ry="2" />
<text  x="705.71" y="719.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.13%)</title><rect x="917.7" y="549" width="1.6" height="15.0" fill="rgb(248,112,14)" rx="2" ry="2" />
<text  x="920.69" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::try_statx (1 samples, 0.07%)</title><rect x="173.2" y="581" width="0.8" height="15.0" fill="rgb(229,193,47)" rx="2" ry="2" />
<text  x="176.23" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (51 samples, 3.44%)</title><rect x="756.9" y="773" width="40.6" height="15.0" fill="rgb(209,218,7)" rx="2" ry="2" />
<text  x="759.86" y="783.5" >do_..</text>
</g>
<g >
<title>xas_store (7 samples, 0.47%)</title><rect x="878.7" y="597" width="5.6" height="15.0" fill="rgb(220,51,44)" rx="2" ry="2" />
<text  x="881.68" y="607.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.07%)</title><rect x="1186.0" y="501" width="0.8" height="15.0" fill="rgb(236,209,12)" rx="2" ry="2" />
<text  x="1189.02" y="511.5" ></text>
</g>
<g >
<title>ahci_handle_port_intr (1 samples, 0.07%)</title><rect x="1006.1" y="565" width="0.8" height="15.0" fill="rgb(209,206,1)" rx="2" ry="2" />
<text  x="1009.07" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="170.0" y="469" width="0.8" height="15.0" fill="rgb(243,189,44)" rx="2" ry="2" />
<text  x="173.04" y="479.5" ></text>
</g>
<g >
<title>rmap_walk_file (1 samples, 0.07%)</title><rect x="849.2" y="629" width="0.8" height="15.0" fill="rgb(233,33,2)" rx="2" ry="2" />
<text  x="852.22" y="639.5" ></text>
</g>
<g >
<title>exc_page_fault (2 samples, 0.13%)</title><rect x="107.9" y="613" width="1.6" height="15.0" fill="rgb(244,224,2)" rx="2" ry="2" />
<text  x="110.94" y="623.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.13%)</title><rect x="1005.3" y="613" width="1.6" height="15.0" fill="rgb(228,86,26)" rx="2" ry="2" />
<text  x="1008.28" y="623.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.07%)</title><rect x="778.4" y="565" width="0.7" height="15.0" fill="rgb(228,85,7)" rx="2" ry="2" />
<text  x="781.35" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="174.0" y="405" width="0.8" height="15.0" fill="rgb(220,17,46)" rx="2" ry="2" />
<text  x="177.02" y="415.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.07%)</title><rect x="172.4" y="693" width="0.8" height="15.0" fill="rgb(245,136,21)" rx="2" ry="2" />
<text  x="175.43" y="703.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (12 samples, 0.81%)</title><rect x="647.8" y="597" width="9.5" height="15.0" fill="rgb(233,107,11)" rx="2" ry="2" />
<text  x="650.77" y="607.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (1 samples, 0.07%)</title><rect x="518.0" y="549" width="0.8" height="15.0" fill="rgb(222,154,11)" rx="2" ry="2" />
<text  x="520.99" y="559.5" ></text>
</g>
<g >
<title>__d_free (1 samples, 0.07%)</title><rect x="931.2" y="437" width="0.8" height="15.0" fill="rgb(216,95,0)" rx="2" ry="2" />
<text  x="934.23" y="447.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (2 samples, 0.13%)</title><rect x="267.2" y="581" width="1.6" height="15.0" fill="rgb(238,211,20)" rx="2" ry="2" />
<text  x="270.18" y="591.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (1 samples, 0.07%)</title><rect x="932.8" y="389" width="0.8" height="15.0" fill="rgb(250,209,53)" rx="2" ry="2" />
<text  x="935.82" y="399.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.07%)</title><rect x="612.7" y="661" width="0.8" height="15.0" fill="rgb(230,224,44)" rx="2" ry="2" />
<text  x="615.74" y="671.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.07%)</title><rect x="983.8" y="485" width="0.8" height="15.0" fill="rgb(253,172,14)" rx="2" ry="2" />
<text  x="986.78" y="495.5" ></text>
</g>
<g >
<title>pick_next_task_fair (4 samples, 0.27%)</title><rect x="1168.5" y="693" width="3.2" height="15.0" fill="rgb(224,114,53)" rx="2" ry="2" />
<text  x="1171.50" y="703.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="518.0" y="533" width="0.8" height="15.0" fill="rgb(252,217,42)" rx="2" ry="2" />
<text  x="520.99" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="170.0" y="69" width="0.8" height="15.0" fill="rgb(224,78,16)" rx="2" ry="2" />
<text  x="173.04" y="79.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (2 samples, 0.13%)</title><rect x="81.7" y="325" width="1.6" height="15.0" fill="rgb(217,51,20)" rx="2" ry="2" />
<text  x="84.66" y="335.5" ></text>
</g>
<g >
<title>unaccount_page_cache_page (4 samples, 0.27%)</title><rect x="884.3" y="613" width="3.1" height="15.0" fill="rgb(221,11,54)" rx="2" ry="2" />
<text  x="887.25" y="623.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (101 samples, 6.82%)</title><rect x="188.4" y="629" width="80.4" height="15.0" fill="rgb(251,101,46)" rx="2" ry="2" />
<text  x="191.35" y="639.5" >ringbuf::..</text>
</g>
<g >
<title>wb_writeback (9 samples, 0.61%)</title><rect x="998.1" y="677" width="7.2" height="15.0" fill="rgb(205,65,8)" rx="2" ry="2" />
<text  x="1001.11" y="687.5" ></text>
</g>
<g >
<title>rcu_core (2 samples, 0.13%)</title><rect x="917.7" y="517" width="1.6" height="15.0" fill="rgb(253,104,53)" rx="2" ry="2" />
<text  x="920.69" y="527.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.07%)</title><rect x="727.4" y="533" width="0.8" height="15.0" fill="rgb(245,11,6)" rx="2" ry="2" />
<text  x="730.40" y="543.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="727.4" y="357" width="0.8" height="15.0" fill="rgb(236,106,23)" rx="2" ry="2" />
<text  x="730.40" y="367.5" ></text>
</g>
<g >
<title>putname (1 samples, 0.07%)</title><rect x="173.2" y="421" width="0.8" height="15.0" fill="rgb(224,71,35)" rx="2" ry="2" />
<text  x="176.23" y="431.5" ></text>
</g>
<g >
<title>map_pte (1 samples, 0.07%)</title><rect x="849.2" y="581" width="0.8" height="15.0" fill="rgb(222,60,49)" rx="2" ry="2" />
<text  x="852.22" y="591.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.07%)</title><rect x="296.6" y="597" width="0.8" height="15.0" fill="rgb(234,68,1)" rx="2" ry="2" />
<text  x="299.64" y="607.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.07%)</title><rect x="168.4" y="245" width="0.8" height="15.0" fill="rgb(212,47,18)" rx="2" ry="2" />
<text  x="171.45" y="255.5" ></text>
</g>
<g >
<title>page_cache_delete (9 samples, 0.61%)</title><rect x="877.1" y="613" width="7.2" height="15.0" fill="rgb(233,14,4)" rx="2" ry="2" />
<text  x="880.09" y="623.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.07%)</title><rect x="10.8" y="613" width="0.8" height="15.0" fill="rgb(215,168,7)" rx="2" ry="2" />
<text  x="13.80" y="623.5" ></text>
</g>
<g >
<title>copy_page_from_iter (2 samples, 0.13%)</title><rect x="699.5" y="613" width="1.6" height="15.0" fill="rgb(238,203,1)" rx="2" ry="2" />
<text  x="702.53" y="623.5" ></text>
</g>
<g >
<title>wait_on_page_writeback (1 samples, 0.07%)</title><rect x="1004.5" y="581" width="0.8" height="15.0" fill="rgb(245,80,37)" rx="2" ry="2" />
<text  x="1007.48" y="591.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.07%)</title><rect x="952.7" y="485" width="0.8" height="15.0" fill="rgb(219,79,31)" rx="2" ry="2" />
<text  x="955.73" y="495.5" ></text>
</g>
<g >
<title>NaClAllocateSpaceAslr (1 samples, 0.07%)</title><rect x="725.8" y="661" width="0.8" height="15.0" fill="rgb(222,218,40)" rx="2" ry="2" />
<text  x="728.80" y="671.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.07%)</title><rect x="976.6" y="469" width="0.8" height="15.0" fill="rgb(253,194,31)" rx="2" ry="2" />
<text  x="979.61" y="479.5" ></text>
</g>
<g >
<title>alloc_pages_vma (55 samples, 3.71%)</title><rect x="613.5" y="661" width="43.8" height="15.0" fill="rgb(233,54,31)" rx="2" ry="2" />
<text  x="616.54" y="671.5" >allo..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="168.4" y="293" width="0.8" height="15.0" fill="rgb(211,42,12)" rx="2" ry="2" />
<text  x="171.45" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_write (6 samples, 0.40%)</title><rect x="79.3" y="597" width="4.7" height="15.0" fill="rgb(208,18,41)" rx="2" ry="2" />
<text  x="82.27" y="607.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="727.4" y="501" width="0.8" height="15.0" fill="rgb(247,42,1)" rx="2" ry="2" />
<text  x="730.40" y="511.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.07%)</title><rect x="168.4" y="261" width="0.8" height="15.0" fill="rgb(217,212,13)" rx="2" ry="2" />
<text  x="171.45" y="271.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.07%)</title><rect x="522.0" y="725" width="0.8" height="15.0" fill="rgb(216,100,52)" rx="2" ry="2" />
<text  x="524.97" y="735.5" ></text>
</g>
<g >
<title>NaClSysMunmap (2 samples, 0.13%)</title><rect x="171.6" y="741" width="1.6" height="15.0" fill="rgb(223,124,22)" rx="2" ry="2" />
<text  x="174.63" y="751.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (100 samples, 6.75%)</title><rect x="189.1" y="597" width="79.7" height="15.0" fill="rgb(247,229,15)" rx="2" ry="2" />
<text  x="192.15" y="607.5" >ringbuf::..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="727.4" y="373" width="0.8" height="15.0" fill="rgb(244,188,11)" rx="2" ry="2" />
<text  x="730.40" y="383.5" ></text>
</g>
<g >
<title>filemap_fault (1 samples, 0.07%)</title><rect x="162.9" y="565" width="0.8" height="15.0" fill="rgb(226,65,30)" rx="2" ry="2" />
<text  x="165.87" y="575.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.07%)</title><rect x="725.8" y="725" width="0.8" height="15.0" fill="rgb(248,101,24)" rx="2" ry="2" />
<text  x="728.80" y="735.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (1 samples, 0.07%)</title><rect x="725.8" y="501" width="0.8" height="15.0" fill="rgb(214,102,34)" rx="2" ry="2" />
<text  x="728.80" y="511.5" ></text>
</g>
<g >
<title>all (1,482 samples, 100%)</title><rect x="10.0" y="821" width="1180.0" height="15.0" fill="rgb(218,53,15)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.07%)</title><rect x="796.7" y="501" width="0.8" height="15.0" fill="rgb(243,59,41)" rx="2" ry="2" />
<text  x="799.67" y="511.5" ></text>
</g>
<g >
<title>__GI___mmap64 (1 samples, 0.07%)</title><rect x="172.4" y="629" width="0.8" height="15.0" fill="rgb(223,202,38)" rx="2" ry="2" />
<text  x="175.43" y="639.5" ></text>
</g>
<g >
<title>__GI___mmap64 (1 samples, 0.07%)</title><rect x="164.5" y="645" width="0.8" height="15.0" fill="rgb(237,221,4)" rx="2" ry="2" />
<text  x="167.47" y="655.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (66 samples, 4.45%)</title><rect x="20.4" y="597" width="52.5" height="15.0" fill="rgb(205,71,9)" rx="2" ry="2" />
<text  x="23.35" y="607.5" >perf_..</text>
</g>
<g >
<title>do_iter_readv_writev (3 samples, 0.20%)</title><rect x="165.3" y="421" width="2.4" height="15.0" fill="rgb(217,204,43)" rx="2" ry="2" />
<text  x="168.26" y="431.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.07%)</title><rect x="163.7" y="405" width="0.8" height="15.0" fill="rgb(247,119,39)" rx="2" ry="2" />
<text  x="166.67" y="415.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (1 samples, 0.07%)</title><rect x="171.6" y="645" width="0.8" height="15.0" fill="rgb(218,185,48)" rx="2" ry="2" />
<text  x="174.63" y="655.5" ></text>
</g>
<g >
<title>__get_user_pages (2 samples, 0.13%)</title><rect x="701.1" y="581" width="1.6" height="15.0" fill="rgb(236,33,10)" rx="2" ry="2" />
<text  x="704.12" y="591.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.07%)</title><rect x="991.7" y="501" width="0.8" height="15.0" fill="rgb(237,91,49)" rx="2" ry="2" />
<text  x="994.74" y="511.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="163.7" y="341" width="0.8" height="15.0" fill="rgb(212,44,49)" rx="2" ry="2" />
<text  x="166.67" y="351.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.07%)</title><rect x="1010.1" y="405" width="0.8" height="15.0" fill="rgb(232,148,14)" rx="2" ry="2" />
<text  x="1013.05" y="415.5" ></text>
</g>
<g >
<title>sata_async_notification (1 samples, 0.07%)</title><rect x="1006.1" y="533" width="0.8" height="15.0" fill="rgb(211,193,29)" rx="2" ry="2" />
<text  x="1009.07" y="543.5" ></text>
</g>
<g >
<title>vfs_iter_write (3 samples, 0.20%)</title><rect x="165.3" y="453" width="2.4" height="15.0" fill="rgb(227,154,42)" rx="2" ry="2" />
<text  x="168.26" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.07%)</title><rect x="996.5" y="661" width="0.8" height="15.0" fill="rgb(251,13,21)" rx="2" ry="2" />
<text  x="999.52" y="671.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.07%)</title><rect x="518.0" y="645" width="0.8" height="15.0" fill="rgb(251,105,29)" rx="2" ry="2" />
<text  x="520.99" y="655.5" ></text>
</g>
<g >
<title>ahci_single_level_irq_intr (2 samples, 0.13%)</title><rect x="1005.3" y="581" width="1.6" height="15.0" fill="rgb(241,143,48)" rx="2" ry="2" />
<text  x="1008.28" y="591.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (1 samples, 0.07%)</title><rect x="727.4" y="661" width="0.8" height="15.0" fill="rgb(252,191,19)" rx="2" ry="2" />
<text  x="730.40" y="671.5" ></text>
</g>
<g >
<title>[libncursesw.so.6.2] (1 samples, 0.07%)</title><rect x="11.6" y="597" width="0.8" height="15.0" fill="rgb(244,35,43)" rx="2" ry="2" />
<text  x="14.59" y="607.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="170.0" y="501" width="0.8" height="15.0" fill="rgb(235,109,52)" rx="2" ry="2" />
<text  x="173.04" y="511.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (1 samples, 0.07%)</title><rect x="974.2" y="533" width="0.8" height="15.0" fill="rgb(236,209,13)" rx="2" ry="2" />
<text  x="977.22" y="543.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="85.6" y="709" width="0.8" height="15.0" fill="rgb(231,103,16)" rx="2" ry="2" />
<text  x="88.64" y="719.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (2 samples, 0.13%)</title><rect x="988.6" y="581" width="1.5" height="15.0" fill="rgb(254,197,44)" rx="2" ry="2" />
<text  x="991.56" y="591.5" ></text>
</g>
<g >
<title>kernel_clone (1 samples, 0.07%)</title><rect x="725.0" y="709" width="0.8" height="15.0" fill="rgb(226,120,0)" rx="2" ry="2" />
<text  x="728.01" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="172.4" y="613" width="0.8" height="15.0" fill="rgb(212,159,18)" rx="2" ry="2" />
<text  x="175.43" y="623.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (3 samples, 0.20%)</title><rect x="165.3" y="645" width="2.4" height="15.0" fill="rgb(218,53,42)" rx="2" ry="2" />
<text  x="168.26" y="655.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.07%)</title><rect x="170.0" y="677" width="0.8" height="15.0" fill="rgb(254,65,3)" rx="2" ry="2" />
<text  x="173.04" y="687.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.07%)</title><rect x="690.8" y="661" width="0.8" height="15.0" fill="rgb(220,82,20)" rx="2" ry="2" />
<text  x="693.77" y="671.5" ></text>
</g>
<g >
<title>reader_loop (2 samples, 0.13%)</title><rect x="10.8" y="741" width="1.6" height="15.0" fill="rgb(227,173,31)" rx="2" ry="2" />
<text  x="13.80" y="751.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (1 samples, 0.07%)</title><rect x="1186.8" y="485" width="0.8" height="15.0" fill="rgb(224,173,13)" rx="2" ry="2" />
<text  x="1189.82" y="495.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.13%)</title><rect x="162.1" y="677" width="1.6" height="15.0" fill="rgb(224,170,24)" rx="2" ry="2" />
<text  x="165.08" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="702.7" y="741" width="0.8" height="15.0" fill="rgb(212,22,4)" rx="2" ry="2" />
<text  x="705.71" y="751.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="727.4" y="581" width="0.8" height="15.0" fill="rgb(248,185,26)" rx="2" ry="2" />
<text  x="730.40" y="591.5" ></text>
</g>
<g >
<title>pipe_poll (1 samples, 0.07%)</title><rect x="844.4" y="725" width="0.8" height="15.0" fill="rgb(221,59,51)" rx="2" ry="2" />
<text  x="847.44" y="735.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="168.4" y="597" width="0.8" height="15.0" fill="rgb(221,173,21)" rx="2" ry="2" />
<text  x="171.45" y="607.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.07%)</title><rect x="269.6" y="645" width="0.8" height="15.0" fill="rgb(231,170,39)" rx="2" ry="2" />
<text  x="272.57" y="655.5" ></text>
</g>
<g >
<title>__libc_start_main (3 samples, 0.20%)</title><rect x="10.8" y="773" width="2.4" height="15.0" fill="rgb(227,93,40)" rx="2" ry="2" />
<text  x="13.80" y="783.5" ></text>
</g>
<g >
<title>workingset_activation (1 samples, 0.07%)</title><rect x="773.6" y="565" width="0.8" height="15.0" fill="rgb(228,62,2)" rx="2" ry="2" />
<text  x="776.58" y="575.5" ></text>
</g>
<g >
<title>clear_page_erms (30 samples, 2.02%)</title><rect x="623.9" y="613" width="23.9" height="15.0" fill="rgb(219,85,51)" rx="2" ry="2" />
<text  x="626.89" y="623.5" >c..</text>
</g>
<g >
<title>NaClAllocatePow2AlignedMemory (1 samples, 0.07%)</title><rect x="725.8" y="645" width="0.8" height="15.0" fill="rgb(223,224,38)" rx="2" ry="2" />
<text  x="728.80" y="655.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (1 samples, 0.07%)</title><rect x="167.7" y="645" width="0.7" height="15.0" fill="rgb(219,180,22)" rx="2" ry="2" />
<text  x="170.65" y="655.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.07%)</title><rect x="169.2" y="677" width="0.8" height="15.0" fill="rgb(220,142,36)" rx="2" ry="2" />
<text  x="172.24" y="687.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.13%)</title><rect x="1182.0" y="661" width="1.6" height="15.0" fill="rgb(207,168,20)" rx="2" ry="2" />
<text  x="1185.04" y="671.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.07%)</title><rect x="296.6" y="613" width="0.8" height="15.0" fill="rgb(212,147,34)" rx="2" ry="2" />
<text  x="299.64" y="623.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.07%)</title><rect x="796.7" y="677" width="0.8" height="15.0" fill="rgb(250,222,29)" rx="2" ry="2" />
<text  x="799.67" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.07%)</title><rect x="725.8" y="581" width="0.8" height="15.0" fill="rgb(220,52,15)" rx="2" ry="2" />
<text  x="728.80" y="591.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.07%)</title><rect x="976.6" y="517" width="0.8" height="15.0" fill="rgb(235,130,46)" rx="2" ry="2" />
<text  x="979.61" y="527.5" ></text>
</g>
<g >
<title>process_one_work (13 samples, 0.88%)</title><rect x="994.9" y="741" width="10.4" height="15.0" fill="rgb(228,185,49)" rx="2" ry="2" />
<text  x="997.93" y="751.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="727.4" y="453" width="0.8" height="15.0" fill="rgb(254,35,28)" rx="2" ry="2" />
<text  x="730.40" y="463.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.07%)</title><rect x="998.1" y="517" width="0.8" height="15.0" fill="rgb(208,157,46)" rx="2" ry="2" />
<text  x="1001.11" y="527.5" ></text>
</g>
<g >
<title>ovl_remove_and_whiteout (1 samples, 0.07%)</title><rect x="167.7" y="469" width="0.7" height="15.0" fill="rgb(223,135,12)" rx="2" ry="2" />
<text  x="170.65" y="479.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.07%)</title><rect x="946.4" y="533" width="0.8" height="15.0" fill="rgb(250,100,28)" rx="2" ry="2" />
<text  x="949.36" y="543.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.07%)</title><rect x="169.2" y="693" width="0.8" height="15.0" fill="rgb(239,107,48)" rx="2" ry="2" />
<text  x="172.24" y="703.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.07%)</title><rect x="165.3" y="309" width="0.8" height="15.0" fill="rgb(228,110,51)" rx="2" ry="2" />
<text  x="168.26" y="319.5" ></text>
</g>
<g >
<title>sata_scr_read (1 samples, 0.07%)</title><rect x="1006.1" y="501" width="0.8" height="15.0" fill="rgb(208,146,29)" rx="2" ry="2" />
<text  x="1009.07" y="511.5" ></text>
</g>
<g >
<title>rcu_core_si (2 samples, 0.13%)</title><rect x="947.2" y="453" width="1.5" height="15.0" fill="rgb(212,38,25)" rx="2" ry="2" />
<text  x="950.15" y="463.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (1 samples, 0.07%)</title><rect x="170.0" y="517" width="0.8" height="15.0" fill="rgb(210,25,3)" rx="2" ry="2" />
<text  x="173.04" y="527.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.13%)</title><rect x="916.1" y="613" width="1.6" height="15.0" fill="rgb(225,86,4)" rx="2" ry="2" />
<text  x="919.10" y="623.5" ></text>
</g>
<g >
<title>rmqueue (12 samples, 0.81%)</title><rect x="647.8" y="613" width="9.5" height="15.0" fill="rgb(222,107,26)" rx="2" ry="2" />
<text  x="650.77" y="623.5" ></text>
</g>
<g >
<title>ext4_getblk (1 samples, 0.07%)</title><rect x="167.7" y="325" width="0.7" height="15.0" fill="rgb(206,222,23)" rx="2" ry="2" />
<text  x="170.65" y="335.5" ></text>
</g>
<g >
<title>__free_one_page (1 samples, 0.07%)</title><rect x="991.7" y="453" width="0.8" height="15.0" fill="rgb(218,169,38)" rx="2" ry="2" />
<text  x="994.74" y="463.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.07%)</title><rect x="521.2" y="645" width="0.8" height="15.0" fill="rgb(250,93,49)" rx="2" ry="2" />
<text  x="524.17" y="655.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.13%)</title><rect x="80.1" y="325" width="1.6" height="15.0" fill="rgb(242,10,1)" rx="2" ry="2" />
<text  x="83.07" y="335.5" ></text>
</g>
<g >
<title>__perf_event_header__init_id (1 samples, 0.07%)</title><rect x="170.8" y="389" width="0.8" height="15.0" fill="rgb(224,66,52)" rx="2" ry="2" />
<text  x="173.84" y="399.5" ></text>
</g>
<g >
<title>newidle_balance (4 samples, 0.27%)</title><rect x="1168.5" y="677" width="3.2" height="15.0" fill="rgb(249,104,51)" rx="2" ry="2" />
<text  x="1171.50" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="726.6" y="629" width="0.8" height="15.0" fill="rgb(234,158,26)" rx="2" ry="2" />
<text  x="729.60" y="639.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.07%)</title><rect x="727.4" y="277" width="0.8" height="15.0" fill="rgb(228,51,19)" rx="2" ry="2" />
<text  x="730.40" y="287.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (90 samples, 6.07%)</title><rect x="195.5" y="581" width="71.7" height="15.0" fill="rgb(210,92,31)" rx="2" ry="2" />
<text  x="198.52" y="591.5" >ringbuf:..</text>
</g>
<g >
<title>__x64_sys_statx (1 samples, 0.07%)</title><rect x="173.2" y="501" width="0.8" height="15.0" fill="rgb(239,99,54)" rx="2" ry="2" />
<text  x="176.23" y="511.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.07%)</title><rect x="1006.9" y="613" width="0.8" height="15.0" fill="rgb(206,209,0)" rx="2" ry="2" />
<text  x="1009.87" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.07%)</title><rect x="172.4" y="581" width="0.8" height="15.0" fill="rgb(207,226,20)" rx="2" ry="2" />
<text  x="175.43" y="591.5" ></text>
</g>
<g >
<title>NaClDescIoDescMapAnon (1 samples, 0.07%)</title><rect x="170.8" y="709" width="0.8" height="15.0" fill="rgb(254,165,21)" rx="2" ry="2" />
<text  x="173.84" y="719.5" ></text>
</g>
<g >
<title>arch_call_rest_init (22 samples, 1.48%)</title><rect x="1172.5" y="725" width="17.5" height="15.0" fill="rgb(222,33,29)" rx="2" ry="2" />
<text  x="1175.48" y="735.5" ></text>
</g>
<g >
<title>lock_page_lruvec_irqsave (1 samples, 0.07%)</title><rect x="725.8" y="469" width="0.8" height="15.0" fill="rgb(226,117,6)" rx="2" ry="2" />
<text  x="728.80" y="479.5" ></text>
</g>
<g >
<title>NaClValidateCode (6 samples, 0.40%)</title><rect x="703.5" y="693" width="4.8" height="15.0" fill="rgb(245,223,18)" rx="2" ry="2" />
<text  x="706.51" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="172.4" y="597" width="0.8" height="15.0" fill="rgb(216,13,22)" rx="2" ry="2" />
<text  x="175.43" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="174.0" y="501" width="0.8" height="15.0" fill="rgb(242,27,25)" rx="2" ry="2" />
<text  x="177.02" y="511.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (1 samples, 0.07%)</title><rect x="727.4" y="693" width="0.8" height="15.0" fill="rgb(209,84,49)" rx="2" ry="2" />
<text  x="730.40" y="703.5" ></text>
</g>
<g >
<title>lookup_one_len (1 samples, 0.07%)</title><rect x="167.7" y="421" width="0.7" height="15.0" fill="rgb(217,57,51)" rx="2" ry="2" />
<text  x="170.65" y="431.5" ></text>
</g>
<g >
<title>__GI___clone (1 samples, 0.07%)</title><rect x="725.0" y="789" width="0.8" height="15.0" fill="rgb(224,125,19)" rx="2" ry="2" />
<text  x="728.01" y="799.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="518.0" y="517" width="0.8" height="15.0" fill="rgb(205,172,35)" rx="2" ry="2" />
<text  x="520.99" y="527.5" ></text>
</g>
<g >
<title>ovl_free_inode (1 samples, 0.07%)</title><rect x="993.3" y="645" width="0.8" height="15.0" fill="rgb(224,74,10)" rx="2" ry="2" />
<text  x="996.33" y="655.5" ></text>
</g>
<g >
<title>copy_process (1 samples, 0.07%)</title><rect x="725.0" y="693" width="0.8" height="15.0" fill="rgb(239,63,37)" rx="2" ry="2" />
<text  x="728.01" y="703.5" ></text>
</g>
<g >
<title>__GI___qsort_r (1 samples, 0.07%)</title><rect x="171.6" y="661" width="0.8" height="15.0" fill="rgb(244,7,26)" rx="2" ry="2" />
<text  x="174.63" y="671.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.07%)</title><rect x="1009.3" y="517" width="0.8" height="15.0" fill="rgb(220,123,22)" rx="2" ry="2" />
<text  x="1012.26" y="527.5" ></text>
</g>
<g >
<title>kick_ilb (3 samples, 0.20%)</title><rect x="1169.3" y="645" width="2.4" height="15.0" fill="rgb(205,60,1)" rx="2" ry="2" />
<text  x="1172.30" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.40%)</title><rect x="79.3" y="629" width="4.7" height="15.0" fill="rgb(211,80,4)" rx="2" ry="2" />
<text  x="82.27" y="639.5" ></text>
</g>
<g >
<title>ext4_evict_inode (4 samples, 0.27%)</title><rect x="987.0" y="597" width="3.1" height="15.0" fill="rgb(233,31,38)" rx="2" ry="2" />
<text  x="989.96" y="607.5" ></text>
</g>
<g >
<title>page_cache_async_ra (1 samples, 0.07%)</title><rect x="162.9" y="549" width="0.8" height="15.0" fill="rgb(240,34,24)" rx="2" ry="2" />
<text  x="165.87" y="559.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="945.6" y="517" width="0.8" height="15.0" fill="rgb(245,76,28)" rx="2" ry="2" />
<text  x="948.56" y="527.5" ></text>
</g>
<g >
<title>record__write (6 samples, 0.40%)</title><rect x="79.3" y="677" width="4.7" height="15.0" fill="rgb(242,86,36)" rx="2" ry="2" />
<text  x="82.27" y="687.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (1 samples, 0.07%)</title><rect x="518.0" y="485" width="0.8" height="15.0" fill="rgb(253,93,23)" rx="2" ry="2" />
<text  x="520.99" y="495.5" ></text>
</g>
<g >
<title>NaClHostDescMap (1 samples, 0.07%)</title><rect x="170.8" y="677" width="0.8" height="15.0" fill="rgb(225,178,25)" rx="2" ry="2" />
<text  x="173.84" y="687.5" ></text>
</g>
<g >
<title>BitmapSetBit (3 samples, 0.20%)</title><rect x="152.5" y="645" width="2.4" height="15.0" fill="rgb(222,11,36)" rx="2" ry="2" />
<text  x="155.52" y="655.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (77 samples, 5.20%)</title><rect x="334.1" y="565" width="61.3" height="15.0" fill="rgb(238,170,9)" rx="2" ry="2" />
<text  x="337.06" y="575.5" >core::..</text>
</g>
<g >
<title>try_to_release_page (43 samples, 2.90%)</title><rect x="919.3" y="645" width="34.2" height="15.0" fill="rgb(219,165,50)" rx="2" ry="2" />
<text  x="922.28" y="655.5" >tr..</text>
</g>
<g >
<title>__libc_write (6 samples, 0.40%)</title><rect x="79.3" y="645" width="4.7" height="15.0" fill="rgb(219,37,26)" rx="2" ry="2" />
<text  x="82.27" y="655.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (1 samples, 0.07%)</title><rect x="170.0" y="533" width="0.8" height="15.0" fill="rgb(206,199,25)" rx="2" ry="2" />
<text  x="173.04" y="543.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.07%)</title><rect x="796.7" y="693" width="0.8" height="15.0" fill="rgb(221,185,29)" rx="2" ry="2" />
<text  x="799.67" y="703.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.07%)</title><rect x="168.4" y="517" width="0.8" height="15.0" fill="rgb(219,61,9)" rx="2" ry="2" />
<text  x="171.45" y="527.5" ></text>
</g>
<g >
<title>shrink_lock_dentry.part.0 (6 samples, 0.40%)</title><rect x="979.8" y="597" width="4.8" height="15.0" fill="rgb(232,1,54)" rx="2" ry="2" />
<text  x="982.80" y="607.5" ></text>
</g>
<g >
<title>dispatcher (316 samples, 21.32%)</title><rect x="270.4" y="677" width="251.6" height="15.0" fill="rgb(248,47,0)" rx="2" ry="2" />
<text  x="273.36" y="687.5" >dispatcher</text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.07%)</title><rect x="168.4" y="437" width="0.8" height="15.0" fill="rgb(244,200,6)" rx="2" ry="2" />
<text  x="171.45" y="447.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.20%)</title><rect x="775.2" y="549" width="2.4" height="15.0" fill="rgb(229,101,2)" rx="2" ry="2" />
<text  x="778.17" y="559.5" ></text>
</g>
<g >
<title>smp_call_function_single (65 samples, 4.39%)</title><rect x="21.1" y="549" width="51.8" height="15.0" fill="rgb(252,104,7)" rx="2" ry="2" />
<text  x="24.15" y="559.5" >smp_c..</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="163.7" y="437" width="0.8" height="15.0" fill="rgb(216,33,22)" rx="2" ry="2" />
<text  x="166.67" y="447.5" ></text>
</g>
<g >
<title>[unknown]  (212 samples, 14.30%)</title><rect x="530.7" y="789" width="168.8" height="15.0" fill="rgb(247,110,53)" rx="2" ry="2" />
<text  x="533.73" y="799.5" >[unknown] </text>
</g>
<g >
<title>mem_cgroup_charge (12 samples, 0.81%)</title><rect x="676.4" y="661" width="9.6" height="15.0" fill="rgb(222,134,16)" rx="2" ry="2" />
<text  x="679.44" y="671.5" ></text>
</g>
<g >
<title>try_to_free_buffers (24 samples, 1.62%)</title><rect x="934.4" y="597" width="19.1" height="15.0" fill="rgb(208,142,27)" rx="2" ry="2" />
<text  x="937.41" y="607.5" ></text>
</g>
<g >
<title>truncate_exceptional_pvec_entries.part.0 (1 samples, 0.07%)</title><rect x="989.4" y="549" width="0.7" height="15.0" fill="rgb(219,149,23)" rx="2" ry="2" />
<text  x="992.35" y="559.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.07%)</title><rect x="166.1" y="341" width="0.8" height="15.0" fill="rgb(211,175,32)" rx="2" ry="2" />
<text  x="169.06" y="351.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.07%)</title><rect x="983.8" y="517" width="0.8" height="15.0" fill="rgb(234,152,36)" rx="2" ry="2" />
<text  x="986.78" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_free (23 samples, 1.55%)</title><rect x="934.4" y="565" width="18.3" height="15.0" fill="rgb(237,63,49)" rx="2" ry="2" />
<text  x="937.41" y="575.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.07%)</title><rect x="795.9" y="533" width="0.8" height="15.0" fill="rgb(241,107,12)" rx="2" ry="2" />
<text  x="798.87" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.07%)</title><rect x="170.8" y="629" width="0.8" height="15.0" fill="rgb(213,38,3)" rx="2" ry="2" />
<text  x="173.84" y="639.5" ></text>
</g>
<g >
<title>page_referenced_one (1 samples, 0.07%)</title><rect x="849.2" y="613" width="0.8" height="15.0" fill="rgb(229,113,42)" rx="2" ry="2" />
<text  x="852.22" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (7 samples, 0.47%)</title><rect x="512.4" y="581" width="5.6" height="15.0" fill="rgb(223,42,31)" rx="2" ry="2" />
<text  x="515.42" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.07%)</title><rect x="163.7" y="549" width="0.8" height="15.0" fill="rgb(211,119,29)" rx="2" ry="2" />
<text  x="166.67" y="559.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (2 samples, 0.13%)</title><rect x="726.6" y="709" width="1.6" height="15.0" fill="rgb(218,208,14)" rx="2" ry="2" />
<text  x="729.60" y="719.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.07%)</title><rect x="844.4" y="741" width="0.8" height="15.0" fill="rgb(225,173,37)" rx="2" ry="2" />
<text  x="847.44" y="751.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (9 samples, 0.61%)</title><rect x="97.6" y="757" width="7.2" height="15.0" fill="rgb(254,159,6)" rx="2" ry="2" />
<text  x="100.58" y="767.5" ></text>
</g>
<g >
<title>exit_mm (50 samples, 3.37%)</title><rect x="756.9" y="709" width="39.8" height="15.0" fill="rgb(222,95,38)" rx="2" ry="2" />
<text  x="759.86" y="719.5" >exi..</text>
</g>
<g >
<title>dl_main (1 samples, 0.07%)</title><rect x="13.2" y="741" width="0.8" height="15.0" fill="rgb(244,104,17)" rx="2" ry="2" />
<text  x="16.18" y="751.5" ></text>
</g>
<g >
<title>do_user_addr_fault (118 samples, 7.96%)</title><rect x="597.6" y="741" width="94.0" height="15.0" fill="rgb(242,65,10)" rx="2" ry="2" />
<text  x="600.61" y="751.5" >do_user_add..</text>
</g>
<g >
<title>cpuidle_enter_state (9 samples, 0.61%)</title><rect x="1172.5" y="629" width="7.1" height="15.0" fill="rgb(229,174,49)" rx="2" ry="2" />
<text  x="1175.48" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (1 samples, 0.07%)</title><rect x="168.4" y="629" width="0.8" height="15.0" fill="rgb(205,16,7)" rx="2" ry="2" />
<text  x="171.45" y="639.5" ></text>
</g>
<g >
<title>inode_lru_isolate (1 samples, 0.07%)</title><rect x="991.7" y="581" width="0.8" height="15.0" fill="rgb(219,115,42)" rx="2" ry="2" />
<text  x="994.74" y="591.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.07%)</title><rect x="1166.1" y="677" width="0.8" height="15.0" fill="rgb(245,110,39)" rx="2" ry="2" />
<text  x="1169.11" y="687.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.07%)</title><rect x="952.7" y="517" width="0.8" height="15.0" fill="rgb(207,6,23)" rx="2" ry="2" />
<text  x="955.73" y="527.5" ></text>
</g>
<g >
<title>ovl_write_iter (3 samples, 0.20%)</title><rect x="165.3" y="469" width="2.4" height="15.0" fill="rgb(213,27,13)" rx="2" ry="2" />
<text  x="168.26" y="479.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.07%)</title><rect x="978.2" y="501" width="0.8" height="15.0" fill="rgb(230,53,7)" rx="2" ry="2" />
<text  x="981.21" y="511.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.07%)</title><rect x="727.4" y="549" width="0.8" height="15.0" fill="rgb(219,174,2)" rx="2" ry="2" />
<text  x="730.40" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.40%)</title><rect x="79.3" y="613" width="4.7" height="15.0" fill="rgb(247,24,2)" rx="2" ry="2" />
<text  x="82.27" y="623.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.07%)</title><rect x="865.1" y="645" width="0.8" height="15.0" fill="rgb(225,128,35)" rx="2" ry="2" />
<text  x="868.14" y="655.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.07%)</title><rect x="1006.9" y="581" width="0.8" height="15.0" fill="rgb(208,56,47)" rx="2" ry="2" />
<text  x="1009.87" y="591.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.07%)</title><rect x="194.7" y="581" width="0.8" height="15.0" fill="rgb(220,152,48)" rx="2" ry="2" />
<text  x="197.72" y="591.5" ></text>
</g>
<g >
<title>i_callback (2 samples, 0.13%)</title><rect x="932.0" y="437" width="1.6" height="15.0" fill="rgb(252,18,14)" rx="2" ry="2" />
<text  x="935.02" y="447.5" ></text>
</g>
<g >
<title>lind_exit (5 samples, 0.34%)</title><rect x="165.3" y="725" width="3.9" height="15.0" fill="rgb(218,130,5)" rx="2" ry="2" />
<text  x="168.26" y="735.5" ></text>
</g>
<g >
<title>__libc_start_main (3 samples, 0.20%)</title><rect x="725.8" y="773" width="2.4" height="15.0" fill="rgb(243,10,25)" rx="2" ry="2" />
<text  x="728.80" y="783.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.07%)</title><rect x="108.7" y="533" width="0.8" height="15.0" fill="rgb(229,62,51)" rx="2" ry="2" />
<text  x="111.73" y="543.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (2 samples, 0.13%)</title><rect x="107.9" y="661" width="1.6" height="15.0" fill="rgb(232,48,36)" rx="2" ry="2" />
<text  x="110.94" y="671.5" ></text>
</g>
<g >
<title>timekeeping_max_deferment (1 samples, 0.07%)</title><rect x="1181.2" y="597" width="0.8" height="15.0" fill="rgb(244,71,52)" rx="2" ry="2" />
<text  x="1184.24" y="607.5" ></text>
</g>
<g >
<title>__free_one_page (11 samples, 0.74%)</title><rect x="787.1" y="485" width="8.8" height="15.0" fill="rgb(233,74,15)" rx="2" ry="2" />
<text  x="790.11" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="983.8" y="565" width="0.8" height="15.0" fill="rgb(217,115,8)" rx="2" ry="2" />
<text  x="986.78" y="575.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="168.4" y="149" width="0.8" height="15.0" fill="rgb(241,40,16)" rx="2" ry="2" />
<text  x="171.45" y="159.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.07%)</title><rect x="172.4" y="549" width="0.8" height="15.0" fill="rgb(218,197,7)" rx="2" ry="2" />
<text  x="175.43" y="559.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.07%)</title><rect x="10.8" y="549" width="0.8" height="15.0" fill="rgb(226,208,15)" rx="2" ry="2" />
<text  x="13.80" y="559.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (6 samples, 0.40%)</title><rect x="686.0" y="661" width="4.8" height="15.0" fill="rgb(212,61,46)" rx="2" ry="2" />
<text  x="688.99" y="671.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.07%)</title><rect x="168.4" y="277" width="0.8" height="15.0" fill="rgb(206,76,24)" rx="2" ry="2" />
<text  x="171.45" y="287.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (5 samples, 0.34%)</title><rect x="657.3" y="661" width="4.0" height="15.0" fill="rgb(240,142,18)" rx="2" ry="2" />
<text  x="660.33" y="671.5" ></text>
</g>
<g >
<title>exc_page_fault (119 samples, 8.03%)</title><rect x="596.8" y="757" width="94.8" height="15.0" fill="rgb(243,155,10)" rx="2" ry="2" />
<text  x="599.82" y="767.5" >exc_page_fa..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.07%)</title><rect x="978.2" y="485" width="0.8" height="15.0" fill="rgb(220,108,43)" rx="2" ry="2" />
<text  x="981.21" y="495.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.07%)</title><rect x="728.2" y="741" width="0.8" height="15.0" fill="rgb(246,221,47)" rx="2" ry="2" />
<text  x="731.19" y="751.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.07%)</title><rect x="1006.9" y="597" width="0.8" height="15.0" fill="rgb(234,171,36)" rx="2" ry="2" />
<text  x="1009.87" y="607.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.07%)</title><rect x="170.0" y="149" width="0.8" height="15.0" fill="rgb(242,115,5)" rx="2" ry="2" />
<text  x="173.04" y="159.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.27%)</title><rect x="10.8" y="789" width="3.2" height="15.0" fill="rgb(207,127,14)" rx="2" ry="2" />
<text  x="13.80" y="799.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (9 samples, 0.61%)</title><rect x="97.6" y="709" width="7.2" height="15.0" fill="rgb(233,54,24)" rx="2" ry="2" />
<text  x="100.58" y="719.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (49 samples, 3.31%)</title><rect x="757.7" y="613" width="39.0" height="15.0" fill="rgb(239,228,11)" rx="2" ry="2" />
<text  x="760.65" y="623.5" >zap..</text>
</g>
<g >
<title>get_scan_count (1 samples, 0.07%)</title><rect x="845.2" y="677" width="0.8" height="15.0" fill="rgb(209,51,50)" rx="2" ry="2" />
<text  x="848.24" y="687.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.07%)</title><rect x="885.0" y="549" width="0.8" height="15.0" fill="rgb(246,89,47)" rx="2" ry="2" />
<text  x="888.05" y="559.5" ></text>
</g>
<g >
<title>generic_write_end (2 samples, 0.13%)</title><rect x="81.7" y="405" width="1.6" height="15.0" fill="rgb(206,180,49)" rx="2" ry="2" />
<text  x="84.66" y="415.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.07%)</title><rect x="170.0" y="661" width="0.8" height="15.0" fill="rgb(208,2,19)" rx="2" ry="2" />
<text  x="173.04" y="671.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2 samples, 0.13%)</title><rect x="162.1" y="709" width="1.6" height="15.0" fill="rgb(211,73,44)" rx="2" ry="2" />
<text  x="165.08" y="719.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (1 samples, 0.07%)</title><rect x="170.8" y="405" width="0.8" height="15.0" fill="rgb(210,225,42)" rx="2" ry="2" />
<text  x="173.84" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (7 samples, 0.47%)</title><rect x="512.4" y="565" width="5.6" height="15.0" fill="rgb(215,189,10)" rx="2" ry="2" />
<text  x="515.42" y="575.5" ></text>
</g>
<g >
<title>sync_regs (7 samples, 0.47%)</title><rect x="694.0" y="773" width="5.5" height="15.0" fill="rgb(245,1,35)" rx="2" ry="2" />
<text  x="696.95" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.07%)</title><rect x="174.8" y="581" width="0.8" height="15.0" fill="rgb(245,53,46)" rx="2" ry="2" />
<text  x="177.82" y="591.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="170.0" y="229" width="0.8" height="15.0" fill="rgb(235,150,15)" rx="2" ry="2" />
<text  x="173.04" y="239.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.07%)</title><rect x="164.5" y="501" width="0.8" height="15.0" fill="rgb(227,32,50)" rx="2" ry="2" />
<text  x="167.47" y="511.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.07%)</title><rect x="983.8" y="453" width="0.8" height="15.0" fill="rgb(217,43,0)" rx="2" ry="2" />
<text  x="986.78" y="463.5" ></text>
</g>
<g >
<title>NaClAppThreadMake (1 samples, 0.07%)</title><rect x="164.5" y="677" width="0.8" height="15.0" fill="rgb(210,149,29)" rx="2" ry="2" />
<text  x="167.47" y="687.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.27%)</title><rect x="725.8" y="789" width="3.2" height="15.0" fill="rgb(220,134,47)" rx="2" ry="2" />
<text  x="728.80" y="799.5" ></text>
</g>
<g >
<title>__GI___mmap64 (1 samples, 0.07%)</title><rect x="170.8" y="581" width="0.8" height="15.0" fill="rgb(239,91,20)" rx="2" ry="2" />
<text  x="173.84" y="591.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.07%)</title><rect x="1186.8" y="517" width="0.8" height="15.0" fill="rgb(213,111,5)" rx="2" ry="2" />
<text  x="1189.82" y="527.5" ></text>
</g>
<g >
<title>cpu_startup_entry (22 samples, 1.48%)</title><rect x="1172.5" y="693" width="17.5" height="15.0" fill="rgb(227,7,15)" rx="2" ry="2" />
<text  x="1175.48" y="703.5" ></text>
</g>
<g >
<title>close_fd (1 samples, 0.07%)</title><rect x="78.5" y="629" width="0.8" height="15.0" fill="rgb(220,80,23)" rx="2" ry="2" />
<text  x="81.48" y="639.5" ></text>
</g>
<g >
<title>cpuidle_select (3 samples, 0.20%)</title><rect x="1179.6" y="645" width="2.4" height="15.0" fill="rgb(242,78,0)" rx="2" ry="2" />
<text  x="1182.65" y="655.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.07%)</title><rect x="952.7" y="373" width="0.8" height="15.0" fill="rgb(209,200,3)" rx="2" ry="2" />
<text  x="955.73" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.07%)</title><rect x="270.4" y="661" width="0.8" height="15.0" fill="rgb(219,44,47)" rx="2" ry="2" />
<text  x="273.36" y="671.5" ></text>
</g>
<g >
<title>ahci_handle_port_interrupt (1 samples, 0.07%)</title><rect x="1006.1" y="549" width="0.8" height="15.0" fill="rgb(246,177,12)" rx="2" ry="2" />
<text  x="1009.07" y="559.5" ></text>
</g>
<g >
<title>__page_cache_alloc (1 samples, 0.07%)</title><rect x="702.7" y="373" width="0.8" height="15.0" fill="rgb(229,52,45)" rx="2" ry="2" />
<text  x="705.71" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.13%)</title><rect x="889.8" y="629" width="1.6" height="15.0" fill="rgb(251,193,33)" rx="2" ry="2" />
<text  x="892.82" y="639.5" ></text>
</g>
<g >
<title>d_move (1 samples, 0.07%)</title><rect x="726.6" y="469" width="0.8" height="15.0" fill="rgb(223,171,7)" rx="2" ry="2" />
<text  x="729.60" y="479.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.07%)</title><rect x="108.7" y="549" width="0.8" height="15.0" fill="rgb(232,32,25)" rx="2" ry="2" />
<text  x="111.73" y="559.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.07%)</title><rect x="725.8" y="421" width="0.8" height="15.0" fill="rgb(247,171,46)" rx="2" ry="2" />
<text  x="728.80" y="431.5" ></text>
</g>
<g >
<title>NaClAllocAddrSpaceAslr (1 samples, 0.07%)</title><rect x="725.8" y="677" width="0.8" height="15.0" fill="rgb(250,12,37)" rx="2" ry="2" />
<text  x="728.80" y="687.5" ></text>
</g>
<g >
<title>ext4_filemap_fault (1 samples, 0.07%)</title><rect x="162.9" y="581" width="0.8" height="15.0" fill="rgb(254,171,30)" rx="2" ry="2" />
<text  x="165.87" y="591.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (146 samples, 9.85%)</title><rect x="401.7" y="613" width="116.3" height="15.0" fill="rgb(236,44,0)" rx="2" ry="2" />
<text  x="404.74" y="623.5" >ringbuf::ring_..</text>
</g>
<g >
<title>NaClSysExit (5 samples, 0.34%)</title><rect x="165.3" y="741" width="3.9" height="15.0" fill="rgb(231,143,49)" rx="2" ry="2" />
<text  x="168.26" y="751.5" ></text>
</g>
<g >
<title>vfs_unlink (1 samples, 0.07%)</title><rect x="167.7" y="517" width="0.7" height="15.0" fill="rgb(219,58,46)" rx="2" ry="2" />
<text  x="170.65" y="527.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (316 samples, 21.32%)</title><rect x="270.4" y="709" width="251.6" height="15.0" fill="rgb(222,8,9)" rx="2" ry="2" />
<text  x="273.36" y="719.5" >NaClHostDescWrite</text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.07%)</title><rect x="725.8" y="565" width="0.8" height="15.0" fill="rgb(241,155,32)" rx="2" ry="2" />
<text  x="728.80" y="575.5" ></text>
</g>
<g >
<title>generic_perform_write (3 samples, 0.20%)</title><rect x="165.3" y="373" width="2.4" height="15.0" fill="rgb(213,89,46)" rx="2" ry="2" />
<text  x="168.26" y="383.5" ></text>
</g>
<g >
<title>destroy_inode (1 samples, 0.07%)</title><rect x="976.6" y="501" width="0.8" height="15.0" fill="rgb(238,56,4)" rx="2" ry="2" />
<text  x="979.61" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="187.6" y="581" width="0.8" height="15.0" fill="rgb(238,41,25)" rx="2" ry="2" />
<text  x="190.56" y="591.5" ></text>
</g>
<g >
<title>main (3 samples, 0.20%)</title><rect x="10.8" y="757" width="2.4" height="15.0" fill="rgb(218,126,14)" rx="2" ry="2" />
<text  x="13.80" y="767.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.13%)</title><rect x="1005.3" y="645" width="1.6" height="15.0" fill="rgb(253,206,17)" rx="2" ry="2" />
<text  x="1008.28" y="655.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.07%)</title><rect x="174.0" y="565" width="0.8" height="15.0" fill="rgb(212,226,9)" rx="2" ry="2" />
<text  x="177.02" y="575.5" ></text>
</g>
<g >
<title>uncharge_page (2 samples, 0.13%)</title><rect x="913.7" y="629" width="1.6" height="15.0" fill="rgb(235,123,29)" rx="2" ry="2" />
<text  x="916.71" y="639.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.07%)</title><rect x="10.8" y="485" width="0.8" height="15.0" fill="rgb(252,52,17)" rx="2" ry="2" />
<text  x="13.80" y="495.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.07%)</title><rect x="166.1" y="261" width="0.8" height="15.0" fill="rgb(247,151,53)" rx="2" ry="2" />
<text  x="169.06" y="271.5" ></text>
</g>
<g >
<title>__free_slab (1 samples, 0.07%)</title><rect x="1010.1" y="437" width="0.8" height="15.0" fill="rgb(217,191,19)" rx="2" ry="2" />
<text  x="1013.05" y="447.5" ></text>
</g>
<g >
<title>ext4_do_flush_completed_IO.isra.0 (3 samples, 0.20%)</title><rect x="994.9" y="709" width="2.4" height="15.0" fill="rgb(238,17,35)" rx="2" ry="2" />
<text  x="997.93" y="719.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.13%)</title><rect x="15.6" y="629" width="1.6" height="15.0" fill="rgb(237,141,52)" rx="2" ry="2" />
<text  x="18.57" y="639.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="170.0" y="53" width="0.8" height="15.0" fill="rgb(208,203,33)" rx="2" ry="2" />
<text  x="173.04" y="63.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.07%)</title><rect x="10.8" y="581" width="0.8" height="15.0" fill="rgb(227,98,40)" rx="2" ry="2" />
<text  x="13.80" y="591.5" ></text>
</g>
<g >
<title>radix_tree_node_rcu_free (1 samples, 0.07%)</title><rect x="1010.1" y="533" width="0.8" height="15.0" fill="rgb(251,6,50)" rx="2" ry="2" />
<text  x="1013.05" y="543.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.07%)</title><rect x="702.7" y="357" width="0.8" height="15.0" fill="rgb(235,19,49)" rx="2" ry="2" />
<text  x="705.71" y="367.5" ></text>
</g>
<g >
<title>__gconv_find_transform (1 samples, 0.07%)</title><rect x="12.4" y="693" width="0.8" height="15.0" fill="rgb(248,189,27)" rx="2" ry="2" />
<text  x="15.39" y="703.5" ></text>
</g>
<g >
<title>mpage_submit_page (3 samples, 0.20%)</title><rect x="998.1" y="549" width="2.4" height="15.0" fill="rgb(219,135,54)" rx="2" ry="2" />
<text  x="1001.11" y="559.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="174.0" y="517" width="0.8" height="15.0" fill="rgb(240,50,34)" rx="2" ry="2" />
<text  x="177.02" y="527.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="168.4" y="453" width="0.8" height="15.0" fill="rgb(246,43,6)" rx="2" ry="2" />
<text  x="171.45" y="463.5" ></text>
</g>
<g >
<title>update_blocked_averages (5 samples, 0.34%)</title><rect x="1184.4" y="533" width="4.0" height="15.0" fill="rgb(240,96,6)" rx="2" ry="2" />
<text  x="1187.43" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1 samples, 0.07%)</title><rect x="1181.2" y="613" width="0.8" height="15.0" fill="rgb(209,118,17)" rx="2" ry="2" />
<text  x="1184.24" y="623.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.07%)</title><rect x="972.6" y="533" width="0.8" height="15.0" fill="rgb(208,92,3)" rx="2" ry="2" />
<text  x="975.63" y="543.5" ></text>
</g>
<g >
<title>__list_lru_walk_one (12 samples, 0.81%)</title><rect x="957.5" y="597" width="9.6" height="15.0" fill="rgb(218,55,1)" rx="2" ry="2" />
<text  x="960.50" y="607.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (6 samples, 0.40%)</title><rect x="703.5" y="725" width="4.8" height="15.0" fill="rgb(205,179,6)" rx="2" ry="2" />
<text  x="706.51" y="735.5" ></text>
</g>
<g >
<title>kfree_rcu_work (1 samples, 0.07%)</title><rect x="997.3" y="725" width="0.8" height="15.0" fill="rgb(215,173,44)" rx="2" ry="2" />
<text  x="1000.31" y="735.5" ></text>
</g>
<g >
<title>discard_slab (1 samples, 0.07%)</title><rect x="1010.1" y="453" width="0.8" height="15.0" fill="rgb(232,93,2)" rx="2" ry="2" />
<text  x="1013.05" y="463.5" ></text>
</g>
<g >
<title>super_cache_count (1 samples, 0.07%)</title><rect x="955.1" y="645" width="0.8" height="15.0" fill="rgb(214,187,8)" rx="2" ry="2" />
<text  x="958.11" y="655.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.07%)</title><rect x="772.8" y="549" width="0.8" height="15.0" fill="rgb(242,68,24)" rx="2" ry="2" />
<text  x="775.78" y="559.5" ></text>
</g>
<g >
<title>ovl_write_iter (6 samples, 0.40%)</title><rect x="79.3" y="533" width="4.7" height="15.0" fill="rgb(205,169,18)" rx="2" ry="2" />
<text  x="82.27" y="543.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.07%)</title><rect x="170.8" y="501" width="0.8" height="15.0" fill="rgb(239,3,26)" rx="2" ry="2" />
<text  x="173.84" y="511.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 4.32%)</title><rect x="21.9" y="517" width="51.0" height="15.0" fill="rgb(208,117,22)" rx="2" ry="2" />
<text  x="24.94" y="527.5" >remot..</text>
</g>
<g >
<title>vfs_write (3 samples, 0.20%)</title><rect x="165.3" y="501" width="2.4" height="15.0" fill="rgb(224,52,10)" rx="2" ry="2" />
<text  x="168.26" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (1 samples, 0.07%)</title><rect x="168.4" y="581" width="0.8" height="15.0" fill="rgb(241,179,11)" rx="2" ry="2" />
<text  x="171.45" y="591.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (6 samples, 0.40%)</title><rect x="79.3" y="485" width="4.7" height="15.0" fill="rgb(226,52,50)" rx="2" ry="2" />
<text  x="82.27" y="495.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.07%)</title><rect x="164.5" y="549" width="0.8" height="15.0" fill="rgb(218,56,8)" rx="2" ry="2" />
<text  x="167.47" y="559.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.13%)</title><rect x="699.5" y="581" width="1.6" height="15.0" fill="rgb(221,126,24)" rx="2" ry="2" />
<text  x="702.53" y="591.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (19 samples, 1.28%)</title><rect x="709.1" y="773" width="15.1" height="15.0" fill="rgb(252,166,1)" rx="2" ry="2" />
<text  x="712.08" y="783.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.07%)</title><rect x="701.1" y="485" width="0.8" height="15.0" fill="rgb(232,34,45)" rx="2" ry="2" />
<text  x="704.12" y="495.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (1 samples, 0.07%)</title><rect x="727.4" y="677" width="0.8" height="15.0" fill="rgb(205,61,24)" rx="2" ry="2" />
<text  x="730.40" y="687.5" ></text>
</g>
<g >
<title>MunmapInternal (2 samples, 0.13%)</title><rect x="171.6" y="725" width="1.6" height="15.0" fill="rgb(206,141,12)" rx="2" ry="2" />
<text  x="174.63" y="735.5" ></text>
</g>
<g >
<title>jbd2_journal_release_jbd_inode.part.0 (1 samples, 0.07%)</title><rect x="987.0" y="549" width="0.8" height="15.0" fill="rgb(239,171,4)" rx="2" ry="2" />
<text  x="989.96" y="559.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.07%)</title><rect x="170.0" y="101" width="0.8" height="15.0" fill="rgb(245,176,37)" rx="2" ry="2" />
<text  x="173.04" y="111.5" ></text>
</g>
<g >
<title>tgetent_sp (1 samples, 0.07%)</title><rect x="11.6" y="629" width="0.8" height="15.0" fill="rgb(237,215,21)" rx="2" ry="2" />
<text  x="14.59" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="708.3" y="773" width="0.8" height="15.0" fill="rgb(205,163,43)" rx="2" ry="2" />
<text  x="711.29" y="783.5" ></text>
</g>
<g >
<title>__lookup_slow (1 samples, 0.07%)</title><rect x="167.7" y="405" width="0.7" height="15.0" fill="rgb(226,52,4)" rx="2" ry="2" />
<text  x="170.65" y="415.5" ></text>
</g>
<g >
<title>account_page_dirtied (2 samples, 0.13%)</title><rect x="81.7" y="341" width="1.6" height="15.0" fill="rgb(212,13,53)" rx="2" ry="2" />
<text  x="84.66" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1 samples, 0.07%)</title><rect x="84.8" y="773" width="0.8" height="15.0" fill="rgb(213,101,43)" rx="2" ry="2" />
<text  x="87.84" y="783.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4 samples, 0.27%)</title><rect x="931.2" y="565" width="3.2" height="15.0" fill="rgb(211,207,28)" rx="2" ry="2" />
<text  x="934.23" y="575.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (2 samples, 0.13%)</title><rect x="948.7" y="549" width="1.6" height="15.0" fill="rgb(233,175,38)" rx="2" ry="2" />
<text  x="951.74" y="559.5" ></text>
</g>
<g >
<title>drain_obj_stock (1 samples, 0.07%)</title><rect x="932.8" y="357" width="0.8" height="15.0" fill="rgb(215,144,17)" rx="2" ry="2" />
<text  x="935.82" y="367.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="295.8" y="613" width="0.8" height="15.0" fill="rgb(220,182,39)" rx="2" ry="2" />
<text  x="298.84" y="623.5" ></text>
</g>
<g >
<title>release_pages (21 samples, 1.42%)</title><rect x="779.9" y="549" width="16.8" height="15.0" fill="rgb(211,182,37)" rx="2" ry="2" />
<text  x="782.95" y="559.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (4 samples, 0.27%)</title><rect x="699.5" y="629" width="3.2" height="15.0" fill="rgb(244,120,17)" rx="2" ry="2" />
<text  x="702.53" y="639.5" ></text>
</g>
<g >
<title>NaClVmmapUpdate (1 samples, 0.07%)</title><rect x="171.6" y="693" width="0.8" height="15.0" fill="rgb(216,96,16)" rx="2" ry="2" />
<text  x="174.63" y="703.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.07%)</title><rect x="174.0" y="597" width="0.8" height="15.0" fill="rgb(238,128,28)" rx="2" ry="2" />
<text  x="177.02" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (12 samples, 0.81%)</title><rect x="318.9" y="581" width="9.6" height="15.0" fill="rgb(251,211,53)" rx="2" ry="2" />
<text  x="321.93" y="591.5" ></text>
</g>
<g >
<title>CopyBundleTails (3 samples, 0.20%)</title><rect x="105.5" y="693" width="2.4" height="15.0" fill="rgb(238,194,40)" rx="2" ry="2" />
<text  x="108.55" y="703.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.07%)</title><rect x="174.0" y="581" width="0.8" height="15.0" fill="rgb(237,42,25)" rx="2" ry="2" />
<text  x="177.02" y="591.5" ></text>
</g>
<g >
<title>exit_mmap (49 samples, 3.31%)</title><rect x="757.7" y="677" width="39.0" height="15.0" fill="rgb(236,148,11)" rx="2" ry="2" />
<text  x="760.65" y="687.5" >exi..</text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.07%)</title><rect x="725.8" y="405" width="0.8" height="15.0" fill="rgb(253,30,27)" rx="2" ry="2" />
<text  x="728.80" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="272.0" y="629" width="0.8" height="15.0" fill="rgb(227,122,30)" rx="2" ry="2" />
<text  x="274.96" y="639.5" ></text>
</g>
<g >
<title>lind_open (2 samples, 0.13%)</title><rect x="173.2" y="709" width="1.6" height="15.0" fill="rgb(207,223,2)" rx="2" ry="2" />
<text  x="176.23" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="702.7" y="725" width="0.8" height="15.0" fill="rgb(211,193,50)" rx="2" ry="2" />
<text  x="705.71" y="735.5" ></text>
</g>
<g >
<title>__update_blocked_fair (3 samples, 0.20%)</title><rect x="1184.4" y="517" width="2.4" height="15.0" fill="rgb(246,99,31)" rx="2" ry="2" />
<text  x="1187.43" y="527.5" ></text>
</g>
<g >
<title>vm_normal_page (1 samples, 0.07%)</title><rect x="757.7" y="597" width="0.7" height="15.0" fill="rgb(237,123,24)" rx="2" ry="2" />
<text  x="760.65" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="187.6" y="597" width="0.8" height="15.0" fill="rgb(215,121,6)" rx="2" ry="2" />
<text  x="190.56" y="607.5" ></text>
</g>
<g >
<title>page_cache_async_ra (1 samples, 0.07%)</title><rect x="702.7" y="421" width="0.8" height="15.0" fill="rgb(226,198,15)" rx="2" ry="2" />
<text  x="705.71" y="431.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="727.4" y="469" width="0.8" height="15.0" fill="rgb(246,15,23)" rx="2" ry="2" />
<text  x="730.40" y="479.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.07%)</title><rect x="170.8" y="341" width="0.8" height="15.0" fill="rgb(240,168,50)" rx="2" ry="2" />
<text  x="173.84" y="351.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.07%)</title><rect x="945.6" y="469" width="0.8" height="15.0" fill="rgb(241,123,4)" rx="2" ry="2" />
<text  x="948.56" y="479.5" ></text>
</g>
<g >
<title>refill_obj_stock (1 samples, 0.07%)</title><rect x="951.1" y="549" width="0.8" height="15.0" fill="rgb(208,102,37)" rx="2" ry="2" />
<text  x="954.13" y="559.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.07%)</title><rect x="83.3" y="405" width="0.7" height="15.0" fill="rgb(218,120,41)" rx="2" ry="2" />
<text  x="86.25" y="415.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (123 samples, 8.30%)</title><rect x="593.6" y="773" width="98.0" height="15.0" fill="rgb(252,49,31)" rx="2" ry="2" />
<text  x="596.63" y="783.5" >asm_exc_pag..</text>
</g>
<g >
<title>ext4_end_io_rsv_work (3 samples, 0.20%)</title><rect x="994.9" y="725" width="2.4" height="15.0" fill="rgb(234,75,17)" rx="2" ry="2" />
<text  x="997.93" y="735.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.07%)</title><rect x="108.7" y="469" width="0.8" height="15.0" fill="rgb(205,139,7)" rx="2" ry="2" />
<text  x="111.73" y="479.5" ></text>
</g>
<g >
<title>blk_mq_sched_insert_requests (1 samples, 0.07%)</title><rect x="162.9" y="437" width="0.8" height="15.0" fill="rgb(252,123,25)" rx="2" ry="2" />
<text  x="165.87" y="447.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.07%)</title><rect x="978.2" y="533" width="0.8" height="15.0" fill="rgb(236,112,30)" rx="2" ry="2" />
<text  x="981.21" y="543.5" ></text>
</g>
<g >
<title>i_callback (1 samples, 0.07%)</title><rect x="952.7" y="405" width="0.8" height="15.0" fill="rgb(254,204,53)" rx="2" ry="2" />
<text  x="955.73" y="415.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (8 samples, 0.54%)</title><rect x="312.6" y="565" width="6.3" height="15.0" fill="rgb(205,72,4)" rx="2" ry="2" />
<text  x="315.56" y="575.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.07%)</title><rect x="702.7" y="581" width="0.8" height="15.0" fill="rgb(253,229,29)" rx="2" ry="2" />
<text  x="705.71" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::libc_mmap (1 samples, 0.07%)</title><rect x="170.8" y="597" width="0.8" height="15.0" fill="rgb(215,54,1)" rx="2" ry="2" />
<text  x="173.84" y="607.5" ></text>
</g>
<g >
<title>mark_page_accessed (2 samples, 0.13%)</title><rect x="772.8" y="581" width="1.6" height="15.0" fill="rgb(217,137,15)" rx="2" ry="2" />
<text  x="775.78" y="591.5" ></text>
</g>
<g >
<title>swap_cgroup_record (1 samples, 0.07%)</title><rect x="891.4" y="613" width="0.8" height="15.0" fill="rgb(214,60,28)" rx="2" ry="2" />
<text  x="894.42" y="623.5" ></text>
</g>
<g >
<title>NaClValidateCode (63 samples, 4.25%)</title><rect x="109.5" y="709" width="50.2" height="15.0" fill="rgb(222,28,49)" rx="2" ry="2" />
<text  x="112.53" y="719.5" >NaClV..</text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.07%)</title><rect x="166.1" y="309" width="0.8" height="15.0" fill="rgb(231,151,31)" rx="2" ry="2" />
<text  x="169.06" y="319.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.07%)</title><rect x="727.4" y="485" width="0.8" height="15.0" fill="rgb(211,126,52)" rx="2" ry="2" />
<text  x="730.40" y="495.5" ></text>
</g>
<g >
<title>__ext4_find_entry (1 samples, 0.07%)</title><rect x="167.7" y="357" width="0.7" height="15.0" fill="rgb(240,194,35)" rx="2" ry="2" />
<text  x="170.65" y="367.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.07%)</title><rect x="166.1" y="293" width="0.8" height="15.0" fill="rgb(234,104,21)" rx="2" ry="2" />
<text  x="169.06" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.07%)</title><rect x="596.0" y="757" width="0.8" height="15.0" fill="rgb(209,17,18)" rx="2" ry="2" />
<text  x="599.02" y="767.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.07%)</title><rect x="796.7" y="645" width="0.8" height="15.0" fill="rgb(236,43,50)" rx="2" ry="2" />
<text  x="799.67" y="655.5" ></text>
</g>
<g >
<title>ext4_release_io_end (2 samples, 0.13%)</title><rect x="995.7" y="693" width="1.6" height="15.0" fill="rgb(218,97,34)" rx="2" ry="2" />
<text  x="998.72" y="703.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (1 samples, 0.07%)</title><rect x="85.6" y="725" width="0.8" height="15.0" fill="rgb(241,209,44)" rx="2" ry="2" />
<text  x="88.64" y="735.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.07%)</title><rect x="688.4" y="613" width="0.8" height="15.0" fill="rgb(218,100,35)" rx="2" ry="2" />
<text  x="691.38" y="623.5" ></text>
</g>
<g >
<title>exc_page_fault (2 samples, 0.13%)</title><rect x="162.1" y="693" width="1.6" height="15.0" fill="rgb(245,202,45)" rx="2" ry="2" />
<text  x="165.08" y="703.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="168.4" y="229" width="0.8" height="15.0" fill="rgb(208,14,15)" rx="2" ry="2" />
<text  x="171.45" y="239.5" ></text>
</g>
<g >
<title>NaClCreateThread (1 samples, 0.07%)</title><rect x="164.5" y="709" width="0.8" height="15.0" fill="rgb(239,172,16)" rx="2" ry="2" />
<text  x="167.47" y="719.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.07%)</title><rect x="269.6" y="661" width="0.8" height="15.0" fill="rgb(244,83,48)" rx="2" ry="2" />
<text  x="272.57" y="671.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (2 samples, 0.13%)</title><rect x="947.2" y="405" width="1.5" height="15.0" fill="rgb(244,214,18)" rx="2" ry="2" />
<text  x="950.15" y="415.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.07%)</title><rect x="997.3" y="709" width="0.8" height="15.0" fill="rgb(231,199,20)" rx="2" ry="2" />
<text  x="1000.31" y="719.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.13%)</title><rect x="162.1" y="661" width="1.6" height="15.0" fill="rgb(235,163,49)" rx="2" ry="2" />
<text  x="165.08" y="671.5" ></text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.07%)</title><rect x="777.6" y="565" width="0.8" height="15.0" fill="rgb(239,209,53)" rx="2" ry="2" />
<text  x="780.56" y="575.5" ></text>
</g>
<g >
<title>ext4_bio_write_page (1 samples, 0.07%)</title><rect x="999.7" y="533" width="0.8" height="15.0" fill="rgb(226,192,42)" rx="2" ry="2" />
<text  x="1002.70" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (9 samples, 0.61%)</title><rect x="1008.5" y="597" width="7.1" height="15.0" fill="rgb(243,157,46)" rx="2" ry="2" />
<text  x="1011.46" y="607.5" ></text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.07%)</title><rect x="163.7" y="629" width="0.8" height="15.0" fill="rgb(215,223,29)" rx="2" ry="2" />
<text  x="166.67" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (88 samples, 5.94%)</title><rect x="197.1" y="549" width="70.1" height="15.0" fill="rgb(213,49,35)" rx="2" ry="2" />
<text  x="200.11" y="559.5" >__memmo..</text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.07%)</title><rect x="1173.3" y="581" width="0.8" height="15.0" fill="rgb(244,58,5)" rx="2" ry="2" />
<text  x="1176.28" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.07%)</title><rect x="518.0" y="629" width="0.8" height="15.0" fill="rgb(209,183,49)" rx="2" ry="2" />
<text  x="520.99" y="639.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.07%)</title><rect x="955.9" y="613" width="0.8" height="15.0" fill="rgb(217,135,30)" rx="2" ry="2" />
<text  x="958.91" y="623.5" ></text>
</g>
<g >
<title>rcu_do_batch (2 samples, 0.13%)</title><rect x="947.2" y="421" width="1.5" height="15.0" fill="rgb(229,118,37)" rx="2" ry="2" />
<text  x="950.15" y="431.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.07%)</title><rect x="865.1" y="613" width="0.8" height="15.0" fill="rgb(246,32,38)" rx="2" ry="2" />
<text  x="868.14" y="623.5" ></text>
</g>
<g >
<title>tparm (1 samples, 0.07%)</title><rect x="11.6" y="581" width="0.8" height="15.0" fill="rgb(213,158,54)" rx="2" ry="2" />
<text  x="14.59" y="591.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.07%)</title><rect x="107.9" y="581" width="0.8" height="15.0" fill="rgb(253,212,3)" rx="2" ry="2" />
<text  x="110.94" y="591.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="978.2" y="565" width="0.8" height="15.0" fill="rgb(228,64,3)" rx="2" ry="2" />
<text  x="981.21" y="575.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.07%)</title><rect x="1010.1" y="501" width="0.8" height="15.0" fill="rgb(208,100,53)" rx="2" ry="2" />
<text  x="1013.05" y="511.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="725.8" y="453" width="0.8" height="15.0" fill="rgb(222,124,22)" rx="2" ry="2" />
<text  x="728.80" y="463.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (124 samples, 8.37%)</title><rect x="303.0" y="613" width="98.7" height="15.0" fill="rgb(232,153,49)" rx="2" ry="2" />
<text  x="306.01" y="623.5" >ringbuf::pr..</text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.07%)</title><rect x="13.2" y="757" width="0.8" height="15.0" fill="rgb(239,85,51)" rx="2" ry="2" />
<text  x="16.18" y="767.5" ></text>
</g>
<g >
<title>ext4_filemap_fault (1 samples, 0.07%)</title><rect x="702.7" y="453" width="0.8" height="15.0" fill="rgb(248,182,23)" rx="2" ry="2" />
<text  x="705.71" y="463.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (3 samples, 0.20%)</title><rect x="165.3" y="629" width="2.4" height="15.0" fill="rgb(242,206,37)" rx="2" ry="2" />
<text  x="168.26" y="639.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.13%)</title><rect x="947.2" y="469" width="1.5" height="15.0" fill="rgb(251,52,29)" rx="2" ry="2" />
<text  x="950.15" y="479.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (1 samples, 0.07%)</title><rect x="1187.6" y="517" width="0.8" height="15.0" fill="rgb(221,217,39)" rx="2" ry="2" />
<text  x="1190.61" y="527.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="168.4" y="213" width="0.8" height="15.0" fill="rgb(235,185,7)" rx="2" ry="2" />
<text  x="171.45" y="223.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (3 samples, 0.20%)</title><rect x="165.3" y="389" width="2.4" height="15.0" fill="rgb(230,152,43)" rx="2" ry="2" />
<text  x="168.26" y="399.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (5 samples, 0.34%)</title><rect x="165.3" y="661" width="3.9" height="15.0" fill="rgb(244,42,6)" rx="2" ry="2" />
<text  x="168.26" y="671.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (4 samples, 0.27%)</title><rect x="931.2" y="517" width="3.2" height="15.0" fill="rgb(252,160,38)" rx="2" ry="2" />
<text  x="934.23" y="527.5" ></text>
</g>
<g >
<title>NaClSysOpenDecoder (2 samples, 0.13%)</title><rect x="173.2" y="757" width="1.6" height="15.0" fill="rgb(222,105,1)" rx="2" ry="2" />
<text  x="176.23" y="767.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.07%)</title><rect x="702.7" y="501" width="0.8" height="15.0" fill="rgb(235,12,49)" rx="2" ry="2" />
<text  x="705.71" y="511.5" ></text>
</g>
<g >
<title>ovl_remove_and_whiteout (1 samples, 0.07%)</title><rect x="726.6" y="517" width="0.8" height="15.0" fill="rgb(226,130,53)" rx="2" ry="2" />
<text  x="729.60" y="527.5" ></text>
</g>
<g >
<title>ext4_bread_batch (1 samples, 0.07%)</title><rect x="167.7" y="341" width="0.7" height="15.0" fill="rgb(238,147,21)" rx="2" ry="2" />
<text  x="170.65" y="351.5" ></text>
</g>
<g >
<title>__schedule (5 samples, 0.34%)</title><rect x="1168.5" y="709" width="4.0" height="15.0" fill="rgb(233,125,43)" rx="2" ry="2" />
<text  x="1171.50" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (1 samples, 0.07%)</title><rect x="170.0" y="485" width="0.8" height="15.0" fill="rgb(239,78,43)" rx="2" ry="2" />
<text  x="173.04" y="495.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.07%)</title><rect x="953.5" y="661" width="0.8" height="15.0" fill="rgb(227,88,40)" rx="2" ry="2" />
<text  x="956.52" y="671.5" ></text>
</g>
<g >
<title>cpu_startup_entry (210 samples, 14.17%)</title><rect x="1005.3" y="757" width="167.2" height="15.0" fill="rgb(235,177,13)" rx="2" ry="2" />
<text  x="1008.28" y="767.5" >cpu_startup_entry</text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.07%)</title><rect x="991.7" y="469" width="0.8" height="15.0" fill="rgb(207,133,44)" rx="2" ry="2" />
<text  x="994.74" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="159.7" y="677" width="0.8" height="15.0" fill="rgb(238,173,20)" rx="2" ry="2" />
<text  x="162.69" y="687.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.07%)</title><rect x="108.7" y="581" width="0.8" height="15.0" fill="rgb(224,137,24)" rx="2" ry="2" />
<text  x="111.73" y="591.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (100 samples, 6.75%)</title><rect x="189.1" y="613" width="79.7" height="15.0" fill="rgb(218,138,36)" rx="2" ry="2" />
<text  x="192.15" y="623.5" >ringbuf::..</text>
</g>
<g >
<title>ion (6 samples, 0.40%)</title><rect x="79.3" y="661" width="4.7" height="15.0" fill="rgb(235,71,47)" rx="2" ry="2" />
<text  x="82.27" y="671.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.07%)</title><rect x="268.8" y="597" width="0.8" height="15.0" fill="rgb(254,137,34)" rx="2" ry="2" />
<text  x="271.77" y="607.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="1173.3" y="597" width="0.8" height="15.0" fill="rgb(244,176,23)" rx="2" ry="2" />
<text  x="1176.28" y="607.5" ></text>
</g>
<g >
<title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.07%)</title><rect x="174.0" y="629" width="0.8" height="15.0" fill="rgb(229,112,49)" rx="2" ry="2" />
<text  x="177.02" y="639.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.07%)</title><rect x="159.7" y="549" width="0.8" height="15.0" fill="rgb(223,220,30)" rx="2" ry="2" />
<text  x="162.69" y="559.5" ></text>
</g>
<g >
<title>scan_shadow_nodes (1 samples, 0.07%)</title><rect x="954.3" y="645" width="0.8" height="15.0" fill="rgb(220,140,6)" rx="2" ry="2" />
<text  x="957.32" y="655.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.07%)</title><rect x="795.1" y="469" width="0.8" height="15.0" fill="rgb(244,1,19)" rx="2" ry="2" />
<text  x="798.07" y="479.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.13%)</title><rect x="80.1" y="341" width="1.6" height="15.0" fill="rgb(238,77,42)" rx="2" ry="2" />
<text  x="83.07" y="351.5" ></text>
</g>
<g >
<title>ext4_mb_regular_allocator (1 samples, 0.07%)</title><rect x="1001.3" y="501" width="0.8" height="15.0" fill="rgb(229,66,40)" rx="2" ry="2" />
<text  x="1004.30" y="511.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.07%)</title><rect x="952.7" y="437" width="0.8" height="15.0" fill="rgb(210,162,42)" rx="2" ry="2" />
<text  x="955.73" y="447.5" ></text>
</g>
<g >
<title>copy_page_from_iter_iovec (1 samples, 0.07%)</title><rect x="702.7" y="613" width="0.8" height="15.0" fill="rgb(213,74,28)" rx="2" ry="2" />
<text  x="705.71" y="623.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.13%)</title><rect x="947.2" y="501" width="1.5" height="15.0" fill="rgb(250,74,4)" rx="2" ry="2" />
<text  x="950.15" y="511.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.07%)</title><rect x="10.8" y="517" width="0.8" height="15.0" fill="rgb(247,211,35)" rx="2" ry="2" />
<text  x="13.80" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.07%)</title><rect x="518.0" y="613" width="0.8" height="15.0" fill="rgb(243,147,37)" rx="2" ry="2" />
<text  x="520.99" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.07%)</title><rect x="910.5" y="597" width="0.8" height="15.0" fill="rgb(248,209,12)" rx="2" ry="2" />
<text  x="913.53" y="607.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.07%)</title><rect x="796.7" y="549" width="0.8" height="15.0" fill="rgb(223,227,46)" rx="2" ry="2" />
<text  x="799.67" y="559.5" ></text>
</g>
<g >
<title>ext4_clear_inode (1 samples, 0.07%)</title><rect x="987.0" y="581" width="0.8" height="15.0" fill="rgb(232,2,45)" rx="2" ry="2" />
<text  x="989.96" y="591.5" ></text>
</g>
<g >
<title>rest_init (22 samples, 1.48%)</title><rect x="1172.5" y="709" width="17.5" height="15.0" fill="rgb(224,189,27)" rx="2" ry="2" />
<text  x="1175.48" y="719.5" ></text>
</g>
<g >
<title>rcu_core_si (2 samples, 0.13%)</title><rect x="916.1" y="533" width="1.6" height="15.0" fill="rgb(216,0,9)" rx="2" ry="2" />
<text  x="919.10" y="543.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (6 samples, 0.40%)</title><rect x="1183.6" y="565" width="4.8" height="15.0" fill="rgb(250,110,51)" rx="2" ry="2" />
<text  x="1186.63" y="575.5" ></text>
</g>
<g >
<title>ext4_mb_new_blocks (1 samples, 0.07%)</title><rect x="1001.3" y="517" width="0.8" height="15.0" fill="rgb(242,78,10)" rx="2" ry="2" />
<text  x="1004.30" y="527.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.07%)</title><rect x="164.5" y="565" width="0.8" height="15.0" fill="rgb(223,228,43)" rx="2" ry="2" />
<text  x="167.47" y="575.5" ></text>
</g>
<g >
<title>newidle_balance (7 samples, 0.47%)</title><rect x="1183.6" y="613" width="5.6" height="15.0" fill="rgb(244,112,4)" rx="2" ry="2" />
<text  x="1186.63" y="623.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.20%)</title><rect x="686.8" y="629" width="2.4" height="15.0" fill="rgb(241,15,43)" rx="2" ry="2" />
<text  x="689.79" y="639.5" ></text>
</g>
<g >
<title>wait_for (2 samples, 0.13%)</title><rect x="10.8" y="693" width="1.6" height="15.0" fill="rgb(249,4,21)" rx="2" ry="2" />
<text  x="13.80" y="703.5" ></text>
</g>
<g >
<title>NaClAppThreadSpawn (1 samples, 0.07%)</title><rect x="164.5" y="693" width="0.8" height="15.0" fill="rgb(212,152,24)" rx="2" ry="2" />
<text  x="167.47" y="703.5" ></text>
</g>
<g >
<title>free_unref_page_list (22 samples, 1.48%)</title><rect x="893.8" y="645" width="17.5" height="15.0" fill="rgb(228,137,33)" rx="2" ry="2" />
<text  x="896.81" y="655.5" ></text>
</g>
<g >
<title>record__mmap_read_all (6 samples, 0.40%)</title><rect x="79.3" y="741" width="4.7" height="15.0" fill="rgb(250,61,17)" rx="2" ry="2" />
<text  x="82.27" y="751.5" ></text>
</g>
<g >
<title>__unlink (1 samples, 0.07%)</title><rect x="726.6" y="645" width="0.8" height="15.0" fill="rgb(231,88,27)" rx="2" ry="2" />
<text  x="729.60" y="655.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.07%)</title><rect x="687.6" y="613" width="0.8" height="15.0" fill="rgb(246,152,15)" rx="2" ry="2" />
<text  x="690.58" y="623.5" ></text>
</g>
<g >
<title>ret_from_fork (201 samples, 13.56%)</title><rect x="845.2" y="789" width="160.1" height="15.0" fill="rgb(208,23,17)" rx="2" ry="2" />
<text  x="848.24" y="799.5" >ret_from_fork</text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.07%)</title><rect x="702.7" y="549" width="0.8" height="15.0" fill="rgb(247,84,13)" rx="2" ry="2" />
<text  x="705.71" y="559.5" ></text>
</g>
<g >
<title>ovl_do_remove (1 samples, 0.07%)</title><rect x="726.6" y="533" width="0.8" height="15.0" fill="rgb(226,38,7)" rx="2" ry="2" />
<text  x="729.60" y="543.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (1 samples, 0.07%)</title><rect x="104.8" y="741" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="107.75" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (3 samples, 0.20%)</title><rect x="964.7" y="565" width="2.4" height="15.0" fill="rgb(244,96,36)" rx="2" ry="2" />
<text  x="967.67" y="575.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (63 samples, 4.25%)</title><rect x="109.5" y="677" width="50.2" height="15.0" fill="rgb(219,30,25)" rx="2" ry="2" />
<text  x="112.53" y="687.5" >Valid..</text>
</g>
<g >
<title>NaClSysWriteDecoder (317 samples, 21.39%)</title><rect x="270.4" y="757" width="252.4" height="15.0" fill="rgb(225,20,12)" rx="2" ry="2" />
<text  x="273.36" y="767.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.07%)</title><rect x="167.7" y="277" width="0.7" height="15.0" fill="rgb(222,175,23)" rx="2" ry="2" />
<text  x="170.65" y="287.5" ></text>
</g>
<g >
<title>ovl_do_remove (1 samples, 0.07%)</title><rect x="167.7" y="485" width="0.7" height="15.0" fill="rgb(230,122,54)" rx="2" ry="2" />
<text  x="170.65" y="495.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.13%)</title><rect x="10.8" y="709" width="1.6" height="15.0" fill="rgb(222,165,31)" rx="2" ry="2" />
<text  x="13.80" y="719.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (2 samples, 0.13%)</title><rect x="701.1" y="613" width="1.6" height="15.0" fill="rgb(222,84,10)" rx="2" ry="2" />
<text  x="704.12" y="623.5" ></text>
</g>
<g >
<title>mpage_prepare_extent_to_map (3 samples, 0.20%)</title><rect x="1002.1" y="581" width="2.4" height="15.0" fill="rgb(210,83,16)" rx="2" ry="2" />
<text  x="1005.09" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::stat (1 samples, 0.07%)</title><rect x="173.2" y="597" width="0.8" height="15.0" fill="rgb(214,173,15)" rx="2" ry="2" />
<text  x="176.23" y="607.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.07%)</title><rect x="999.7" y="501" width="0.8" height="15.0" fill="rgb(245,87,50)" rx="2" ry="2" />
<text  x="1002.70" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 5.40%)</title><rect x="14.8" y="661" width="63.7" height="15.0" fill="rgb(228,169,26)" rx="2" ry="2" />
<text  x="17.78" y="671.5" >do_sys..</text>
</g>
<g >
<title>NaClSysRead (120 samples, 8.10%)</title><rect x="174.8" y="741" width="95.6" height="15.0" fill="rgb(229,140,21)" rx="2" ry="2" />
<text  x="177.82" y="751.5" >NaClSysRead</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.13%)</title><rect x="916.1" y="629" width="1.6" height="15.0" fill="rgb(210,12,20)" rx="2" ry="2" />
<text  x="919.10" y="639.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.07%)</title><rect x="796.7" y="533" width="0.8" height="15.0" fill="rgb(219,199,27)" rx="2" ry="2" />
<text  x="799.67" y="543.5" ></text>
</g>
<g >
<title>rcu_do_batch (3 samples, 0.20%)</title><rect x="992.5" y="677" width="2.4" height="15.0" fill="rgb(211,144,46)" rx="2" ry="2" />
<text  x="995.54" y="687.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (1 samples, 0.07%)</title><rect x="608.8" y="677" width="0.8" height="15.0" fill="rgb(234,208,33)" rx="2" ry="2" />
<text  x="611.76" y="687.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (15 samples, 1.01%)</title><rect x="176.4" y="629" width="12.0" height="15.0" fill="rgb(229,18,15)" rx="2" ry="2" />
<text  x="179.41" y="639.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk.part.0 (1 samples, 0.07%)</title><rect x="997.3" y="693" width="0.8" height="15.0" fill="rgb(245,136,43)" rx="2" ry="2" />
<text  x="1000.31" y="703.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.07%)</title><rect x="1010.1" y="421" width="0.8" height="15.0" fill="rgb(252,94,16)" rx="2" ry="2" />
<text  x="1013.05" y="431.5" ></text>
</g>
<g >
<title>find_get_pages_range_tag (3 samples, 0.20%)</title><rect x="1002.1" y="549" width="2.4" height="15.0" fill="rgb(246,128,8)" rx="2" ry="2" />
<text  x="1005.09" y="559.5" ></text>
</g>
<g >
<title>ovl_free_inode (1 samples, 0.07%)</title><rect x="945.6" y="373" width="0.8" height="15.0" fill="rgb(249,6,27)" rx="2" ry="2" />
<text  x="948.56" y="383.5" ></text>
</g>
<g >
<title>drop_buffers (1 samples, 0.07%)</title><rect x="922.5" y="597" width="0.8" height="15.0" fill="rgb(253,24,5)" rx="2" ry="2" />
<text  x="925.47" y="607.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.07%)</title><rect x="945.6" y="501" width="0.8" height="15.0" fill="rgb(243,32,46)" rx="2" ry="2" />
<text  x="948.56" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (1 samples, 0.07%)</title><rect x="726.6" y="597" width="0.8" height="15.0" fill="rgb(217,105,44)" rx="2" ry="2" />
<text  x="729.60" y="607.5" ></text>
</g>
<g >
<title>filemap_fault (1 samples, 0.07%)</title><rect x="702.7" y="437" width="0.8" height="15.0" fill="rgb(222,49,1)" rx="2" ry="2" />
<text  x="705.71" y="447.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.07%)</title><rect x="163.7" y="709" width="0.8" height="15.0" fill="rgb(239,172,5)" rx="2" ry="2" />
<text  x="166.67" y="719.5" ></text>
</g>
<g >
<title>__mod_lruvec_kmem_state (1 samples, 0.07%)</title><rect x="954.3" y="581" width="0.8" height="15.0" fill="rgb(234,39,17)" rx="2" ry="2" />
<text  x="957.32" y="591.5" ></text>
</g>
<g >
<title>vfs_rename (1 samples, 0.07%)</title><rect x="726.6" y="485" width="0.8" height="15.0" fill="rgb(225,41,32)" rx="2" ry="2" />
<text  x="729.60" y="495.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.07%)</title><rect x="521.2" y="661" width="0.8" height="15.0" fill="rgb(232,152,27)" rx="2" ry="2" />
<text  x="524.17" y="671.5" ></text>
</g>
<g >
<title>NaClSysOpen (2 samples, 0.13%)</title><rect x="173.2" y="741" width="1.6" height="15.0" fill="rgb(219,101,51)" rx="2" ry="2" />
<text  x="176.23" y="751.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (6 samples, 0.40%)</title><rect x="703.5" y="757" width="4.8" height="15.0" fill="rgb(219,146,43)" rx="2" ry="2" />
<text  x="706.51" y="767.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.07%)</title><rect x="725.8" y="341" width="0.8" height="15.0" fill="rgb(246,161,11)" rx="2" ry="2" />
<text  x="728.80" y="351.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.07%)</title><rect x="988.6" y="501" width="0.8" height="15.0" fill="rgb(231,58,21)" rx="2" ry="2" />
<text  x="991.56" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (3 samples, 0.20%)</title><rect x="518.8" y="629" width="2.4" height="15.0" fill="rgb(250,78,7)" rx="2" ry="2" />
<text  x="521.79" y="639.5" ></text>
</g>
<g >
<title>[libncursesw.so.6.2] (1 samples, 0.07%)</title><rect x="11.6" y="565" width="0.8" height="15.0" fill="rgb(251,191,8)" rx="2" ry="2" />
<text  x="14.59" y="575.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.07%)</title><rect x="796.7" y="453" width="0.8" height="15.0" fill="rgb(249,29,43)" rx="2" ry="2" />
<text  x="799.67" y="463.5" ></text>
</g>
<g >
<title>new_sync_write (6 samples, 0.40%)</title><rect x="79.3" y="549" width="4.7" height="15.0" fill="rgb(208,11,50)" rx="2" ry="2" />
<text  x="82.27" y="559.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.13%)</title><rect x="916.1" y="549" width="1.6" height="15.0" fill="rgb(220,165,8)" rx="2" ry="2" />
<text  x="919.10" y="559.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (1 samples, 0.07%)</title><rect x="166.1" y="245" width="0.8" height="15.0" fill="rgb(233,69,54)" rx="2" ry="2" />
<text  x="169.06" y="255.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (1 samples, 0.07%)</title><rect x="174.8" y="613" width="0.8" height="15.0" fill="rgb(221,13,47)" rx="2" ry="2" />
<text  x="177.82" y="623.5" ></text>
</g>
<g >
<title>__libc_close (1 samples, 0.07%)</title><rect x="78.5" y="693" width="0.8" height="15.0" fill="rgb(240,28,35)" rx="2" ry="2" />
<text  x="81.48" y="703.5" ></text>
</g>
<g >
<title>swapper (493 samples, 33.27%)</title><rect x="797.5" y="805" width="392.5" height="15.0" fill="rgb(218,90,13)" rx="2" ry="2" />
<text  x="800.46" y="815.5" >swapper</text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.07%)</title><rect x="172.4" y="453" width="0.8" height="15.0" fill="rgb(220,143,44)" rx="2" ry="2" />
<text  x="175.43" y="463.5" ></text>
</g>
<g >
<title>_perf_event_enable (66 samples, 4.45%)</title><rect x="20.4" y="581" width="52.5" height="15.0" fill="rgb(206,105,34)" rx="2" ry="2" />
<text  x="23.35" y="591.5" >_perf..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 5.40%)</title><rect x="14.8" y="677" width="63.7" height="15.0" fill="rgb(228,73,32)" rx="2" ry="2" />
<text  x="17.78" y="687.5" >entry_..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="168.4" y="37" width="0.8" height="15.0" fill="rgb(211,172,4)" rx="2" ry="2" />
<text  x="171.45" y="47.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.07%)</title><rect x="702.7" y="341" width="0.8" height="15.0" fill="rgb(207,5,20)" rx="2" ry="2" />
<text  x="705.71" y="351.5" ></text>
</g>
<g >
<title>lru_add_drain (1 samples, 0.07%)</title><rect x="725.8" y="517" width="0.8" height="15.0" fill="rgb(220,201,0)" rx="2" ry="2" />
<text  x="728.80" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.13%)</title><rect x="162.1" y="645" width="1.6" height="15.0" fill="rgb(212,201,16)" rx="2" ry="2" />
<text  x="165.08" y="655.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (6 samples, 0.40%)</title><rect x="79.3" y="725" width="4.7" height="15.0" fill="rgb(218,217,31)" rx="2" ry="2" />
<text  x="82.27" y="735.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.07%)</title><rect x="1006.9" y="629" width="0.8" height="15.0" fill="rgb(250,173,22)" rx="2" ry="2" />
<text  x="1009.87" y="639.5" ></text>
</g>
<g >
<title>perf_mmap__push (6 samples, 0.40%)</title><rect x="79.3" y="709" width="4.7" height="15.0" fill="rgb(248,210,29)" rx="2" ry="2" />
<text  x="82.27" y="719.5" ></text>
</g>
<g >
<title>schedule_idle (5 samples, 0.34%)</title><rect x="1168.5" y="725" width="4.0" height="15.0" fill="rgb(214,209,49)" rx="2" ry="2" />
<text  x="1171.50" y="735.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (120 samples, 8.10%)</title><rect x="174.8" y="725" width="95.6" height="15.0" fill="rgb(208,146,30)" rx="2" ry="2" />
<text  x="177.82" y="735.5" >NaClDescIoD..</text>
</g>
<g >
<title>poll_idle (4 samples, 0.27%)</title><rect x="1162.9" y="677" width="3.2" height="15.0" fill="rgb(207,57,41)" rx="2" ry="2" />
<text  x="1165.93" y="687.5" ></text>
</g>
<g >
<title>__wcsmbs_load_conv (1 samples, 0.07%)</title><rect x="12.4" y="709" width="0.8" height="15.0" fill="rgb(216,83,4)" rx="2" ry="2" />
<text  x="15.39" y="719.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.07%)</title><rect x="675.6" y="597" width="0.8" height="15.0" fill="rgb(230,110,36)" rx="2" ry="2" />
<text  x="678.64" y="607.5" ></text>
</g>
<g >
<title>tgetent (1 samples, 0.07%)</title><rect x="10.8" y="629" width="0.8" height="15.0" fill="rgb(213,117,31)" rx="2" ry="2" />
<text  x="13.80" y="639.5" ></text>
</g>
<g >
<title>_perf_ioctl (67 samples, 4.52%)</title><rect x="19.6" y="613" width="53.3" height="15.0" fill="rgb(228,89,6)" rx="2" ry="2" />
<text  x="22.55" y="623.5" >_perf..</text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.07%)</title><rect x="728.2" y="757" width="0.8" height="15.0" fill="rgb(219,27,47)" rx="2" ry="2" />
<text  x="731.19" y="767.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.07%)</title><rect x="14.0" y="789" width="0.8" height="15.0" fill="rgb(239,90,23)" rx="2" ry="2" />
<text  x="16.98" y="799.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (1 samples, 0.07%)</title><rect x="976.6" y="485" width="0.8" height="15.0" fill="rgb(253,125,20)" rx="2" ry="2" />
<text  x="979.61" y="495.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook.constprop.0 (1 samples, 0.07%)</title><rect x="917.7" y="453" width="0.8" height="15.0" fill="rgb(220,47,35)" rx="2" ry="2" />
<text  x="920.69" y="463.5" ></text>
</g>
<g >
<title>mem_cgroup_from_obj (2 samples, 0.13%)</title><rect x="878.7" y="549" width="1.6" height="15.0" fill="rgb(244,196,23)" rx="2" ry="2" />
<text  x="881.68" y="559.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="727.4" y="437" width="0.8" height="15.0" fill="rgb(225,216,33)" rx="2" ry="2" />
<text  x="730.40" y="447.5" ></text>
</g>
<g >
<title>do_anonymous_page (103 samples, 6.95%)</title><rect x="609.6" y="677" width="82.0" height="15.0" fill="rgb(253,76,4)" rx="2" ry="2" />
<text  x="612.55" y="687.5" >do_anonym..</text>
</g>
<g >
<title>main (3 samples, 0.20%)</title><rect x="725.8" y="757" width="2.4" height="15.0" fill="rgb(240,84,15)" rx="2" ry="2" />
<text  x="728.80" y="767.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 4.32%)</title><rect x="21.9" y="453" width="51.0" height="15.0" fill="rgb(230,49,16)" rx="2" ry="2" />
<text  x="24.94" y="463.5" >x86_p..</text>
</g>
<g >
<title>mem_cgroup_update_lru_size (3 samples, 0.20%)</title><rect x="669.3" y="597" width="2.4" height="15.0" fill="rgb(209,4,15)" rx="2" ry="2" />
<text  x="672.27" y="607.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.07%)</title><rect x="945.6" y="421" width="0.8" height="15.0" fill="rgb(241,148,21)" rx="2" ry="2" />
<text  x="948.56" y="431.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (1 samples, 0.07%)</title><rect x="518.0" y="581" width="0.8" height="15.0" fill="rgb(208,227,17)" rx="2" ry="2" />
<text  x="520.99" y="591.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (2 samples, 0.13%)</title><rect x="163.7" y="757" width="1.6" height="15.0" fill="rgb(236,45,6)" rx="2" ry="2" />
<text  x="166.67" y="767.5" ></text>
</g>
<g >
<title>RegisterExtentionFromREX (1 samples, 0.07%)</title><rect x="158.9" y="661" width="0.8" height="15.0" fill="rgb(210,188,53)" rx="2" ry="2" />
<text  x="161.89" y="671.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (6 samples, 0.40%)</title><rect x="703.5" y="741" width="4.8" height="15.0" fill="rgb(249,95,53)" rx="2" ry="2" />
<text  x="706.51" y="751.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 4.32%)</title><rect x="21.9" y="437" width="51.0" height="15.0" fill="rgb(243,185,44)" rx="2" ry="2" />
<text  x="24.94" y="447.5" >intel..</text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.07%)</title><rect x="1188.4" y="581" width="0.8" height="15.0" fill="rgb(232,194,19)" rx="2" ry="2" />
<text  x="1191.41" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (5 samples, 0.34%)</title><rect x="165.3" y="693" width="3.9" height="15.0" fill="rgb(250,103,35)" rx="2" ry="2" />
<text  x="168.26" y="703.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.07%)</title><rect x="1014.8" y="581" width="0.8" height="15.0" fill="rgb(230,117,39)" rx="2" ry="2" />
<text  x="1017.83" y="591.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.07%)</title><rect x="945.6" y="437" width="0.8" height="15.0" fill="rgb(209,168,37)" rx="2" ry="2" />
<text  x="948.56" y="447.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.07%)</title><rect x="702.7" y="469" width="0.8" height="15.0" fill="rgb(240,126,40)" rx="2" ry="2" />
<text  x="705.71" y="479.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.07%)</title><rect x="1173.3" y="549" width="0.8" height="15.0" fill="rgb(233,13,5)" rx="2" ry="2" />
<text  x="1176.28" y="559.5" ></text>
</g>
<g >
<title>Process0Operands (3 samples, 0.20%)</title><rect x="154.9" y="661" width="2.4" height="15.0" fill="rgb(238,52,52)" rx="2" ry="2" />
<text  x="157.91" y="671.5" ></text>
</g>
<g >
<title>page_mapping (3 samples, 0.20%)</title><rect x="671.7" y="597" width="2.3" height="15.0" fill="rgb(226,167,25)" rx="2" ry="2" />
<text  x="674.66" y="607.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.07%)</title><rect x="107.9" y="565" width="0.8" height="15.0" fill="rgb(205,14,22)" rx="2" ry="2" />
<text  x="110.94" y="575.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.07%)</title><rect x="108.7" y="453" width="0.8" height="15.0" fill="rgb(240,101,53)" rx="2" ry="2" />
<text  x="111.73" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="167.7" y="565" width="0.7" height="15.0" fill="rgb(231,60,31)" rx="2" ry="2" />
<text  x="170.65" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="174.0" y="469" width="0.8" height="15.0" fill="rgb(210,222,18)" rx="2" ry="2" />
<text  x="177.02" y="479.5" ></text>
</g>
<g >
<title>ext4_finish_bio (2 samples, 0.13%)</title><rect x="995.7" y="677" width="1.6" height="15.0" fill="rgb(226,229,29)" rx="2" ry="2" />
<text  x="998.72" y="687.5" ></text>
</g>
<g >
<title>mpage_map_one_extent (1 samples, 0.07%)</title><rect x="1001.3" y="565" width="0.8" height="15.0" fill="rgb(245,193,4)" rx="2" ry="2" />
<text  x="1004.30" y="575.5" ></text>
</g>
<g >
<title>__free_one_page (1 samples, 0.07%)</title><rect x="796.7" y="421" width="0.8" height="15.0" fill="rgb(205,112,43)" rx="2" ry="2" />
<text  x="799.67" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (1 samples, 0.07%)</title><rect x="174.8" y="565" width="0.8" height="15.0" fill="rgb(233,164,17)" rx="2" ry="2" />
<text  x="177.82" y="575.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (1 samples, 0.07%)</title><rect x="168.4" y="101" width="0.8" height="15.0" fill="rgb(233,185,15)" rx="2" ry="2" />
<text  x="171.45" y="111.5" ></text>
</g>
<g >
<title>pagevec_lookup_range_tag (3 samples, 0.20%)</title><rect x="1002.1" y="565" width="2.4" height="15.0" fill="rgb(254,47,43)" rx="2" ry="2" />
<text  x="1005.09" y="575.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.13%)</title><rect x="661.3" y="661" width="1.6" height="15.0" fill="rgb(225,134,36)" rx="2" ry="2" />
<text  x="664.31" y="671.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (316 samples, 21.32%)</title><rect x="270.4" y="725" width="251.6" height="15.0" fill="rgb(245,37,15)" rx="2" ry="2" />
<text  x="273.36" y="735.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>ovl_dentry_release (1 samples, 0.07%)</title><rect x="979.0" y="581" width="0.8" height="15.0" fill="rgb(217,210,44)" rx="2" ry="2" />
<text  x="982.00" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="727.4" y="213" width="0.8" height="15.0" fill="rgb(242,194,45)" rx="2" ry="2" />
<text  x="730.40" y="223.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.07%)</title><rect x="159.7" y="629" width="0.8" height="15.0" fill="rgb(246,175,28)" rx="2" ry="2" />
<text  x="162.69" y="639.5" ></text>
</g>
<g >
<title>kthread (201 samples, 13.56%)</title><rect x="845.2" y="773" width="160.1" height="15.0" fill="rgb(233,216,31)" rx="2" ry="2" />
<text  x="848.24" y="783.5" >kthread</text>
</g>
<g >
<title>do_softirq_own_stack (9 samples, 0.61%)</title><rect x="1008.5" y="629" width="7.1" height="15.0" fill="rgb(253,86,10)" rx="2" ry="2" />
<text  x="1011.46" y="639.5" ></text>
</g>
<g >
<title>i_callback (1 samples, 0.07%)</title><rect x="945.6" y="389" width="0.8" height="15.0" fill="rgb(243,72,43)" rx="2" ry="2" />
<text  x="948.56" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="725.0" y="773" width="0.8" height="15.0" fill="rgb(208,62,35)" rx="2" ry="2" />
<text  x="728.01" y="783.5" ></text>
</g>
<g >
<title>_rl_init_terminal_io (2 samples, 0.13%)</title><rect x="10.8" y="645" width="1.6" height="15.0" fill="rgb(227,133,23)" rx="2" ry="2" />
<text  x="13.80" y="655.5" ></text>
</g>
<g >
<title>list_lru_count_one (1 samples, 0.07%)</title><rect x="955.1" y="629" width="0.8" height="15.0" fill="rgb(218,1,2)" rx="2" ry="2" />
<text  x="958.11" y="639.5" ></text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (2 samples, 0.13%)</title><rect x="107.9" y="677" width="1.6" height="15.0" fill="rgb(227,166,0)" rx="2" ry="2" />
<text  x="110.94" y="687.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook.constprop.0 (1 samples, 0.07%)</title><rect x="992.5" y="613" width="0.8" height="15.0" fill="rgb(206,162,14)" rx="2" ry="2" />
<text  x="995.54" y="623.5" ></text>
</g>
<g >
<title>irq_exit_rcu (4 samples, 0.27%)</title><rect x="931.2" y="549" width="3.2" height="15.0" fill="rgb(210,205,43)" rx="2" ry="2" />
<text  x="934.23" y="559.5" ></text>
</g>
<g >
<title>record__pushfn (6 samples, 0.40%)</title><rect x="79.3" y="693" width="4.7" height="15.0" fill="rgb(221,82,11)" rx="2" ry="2" />
<text  x="82.27" y="703.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="295.8" y="629" width="0.8" height="15.0" fill="rgb(207,111,4)" rx="2" ry="2" />
<text  x="298.84" y="639.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.13%)</title><rect x="917.7" y="613" width="1.6" height="15.0" fill="rgb(205,50,0)" rx="2" ry="2" />
<text  x="920.69" y="623.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.07%)</title><rect x="1189.2" y="661" width="0.8" height="15.0" fill="rgb(236,129,4)" rx="2" ry="2" />
<text  x="1192.20" y="671.5" ></text>
</g>
<g >
<title>prune_icache_sb (10 samples, 0.67%)</title><rect x="984.6" y="629" width="7.9" height="15.0" fill="rgb(208,74,24)" rx="2" ry="2" />
<text  x="987.57" y="639.5" ></text>
</g>
<g >
<title>ext4_ext_map_blocks (1 samples, 0.07%)</title><rect x="1001.3" y="533" width="0.8" height="15.0" fill="rgb(215,206,19)" rx="2" ry="2" />
<text  x="1004.30" y="543.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.07%)</title><rect x="1173.3" y="565" width="0.8" height="15.0" fill="rgb(222,80,4)" rx="2" ry="2" />
<text  x="1176.28" y="575.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (1 samples, 0.07%)</title><rect x="168.4" y="69" width="0.8" height="15.0" fill="rgb(251,153,26)" rx="2" ry="2" />
<text  x="171.45" y="79.5" ></text>
</g>
<g >
<title>dispatcher (120 samples, 8.10%)</title><rect x="174.8" y="677" width="95.6" height="15.0" fill="rgb(209,1,10)" rx="2" ry="2" />
<text  x="177.82" y="687.5" >dispatcher</text>
</g>
<g >
<title>num_fifos (1 samples, 0.07%)</title><rect x="10.0" y="773" width="0.8" height="15.0" fill="rgb(205,114,34)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>rcu_do_batch (2 samples, 0.13%)</title><rect x="916.1" y="501" width="1.6" height="15.0" fill="rgb(209,184,43)" rx="2" ry="2" />
<text  x="919.10" y="511.5" ></text>
</g>
<g >
<title>ext4_convert_unwritten_io_end_vec (1 samples, 0.07%)</title><rect x="994.9" y="693" width="0.8" height="15.0" fill="rgb(206,172,53)" rx="2" ry="2" />
<text  x="997.93" y="703.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (1 samples, 0.07%)</title><rect x="163.7" y="517" width="0.8" height="15.0" fill="rgb(211,171,43)" rx="2" ry="2" />
<text  x="166.67" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.13%)</title><rect x="920.9" y="597" width="1.6" height="15.0" fill="rgb(205,9,31)" rx="2" ry="2" />
<text  x="923.88" y="607.5" ></text>
</g>
<g >
<title>lind_write (316 samples, 21.32%)</title><rect x="270.4" y="693" width="251.6" height="15.0" fill="rgb(205,118,43)" rx="2" ry="2" />
<text  x="273.36" y="703.5" >lind_write</text>
</g>
<g >
<title>shmem_fault (1 samples, 0.07%)</title><rect x="108.7" y="485" width="0.8" height="15.0" fill="rgb(226,183,26)" rx="2" ry="2" />
<text  x="111.73" y="495.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.07%)</title><rect x="702.7" y="597" width="0.8" height="15.0" fill="rgb(211,53,45)" rx="2" ry="2" />
<text  x="705.71" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.07%)</title><rect x="521.2" y="629" width="0.8" height="15.0" fill="rgb(248,161,32)" rx="2" ry="2" />
<text  x="524.17" y="639.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (1 samples, 0.07%)</title><rect x="168.4" y="85" width="0.8" height="15.0" fill="rgb(240,28,3)" rx="2" ry="2" />
<text  x="171.45" y="95.5" ></text>
</g>
<g >
<title>do_idle (210 samples, 14.17%)</title><rect x="1005.3" y="741" width="167.2" height="15.0" fill="rgb(226,225,54)" rx="2" ry="2" />
<text  x="1008.28" y="751.5" >do_idle</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.13%)</title><rect x="917.7" y="565" width="1.6" height="15.0" fill="rgb(246,95,8)" rx="2" ry="2" />
<text  x="920.69" y="575.5" ></text>
</g>
<g >
<title>activate_page (1 samples, 0.07%)</title><rect x="772.8" y="565" width="0.8" height="15.0" fill="rgb(254,104,47)" rx="2" ry="2" />
<text  x="775.78" y="575.5" ></text>
</g>
<g >
<title>[anon] (24 samples, 1.62%)</title><rect x="85.6" y="789" width="19.2" height="15.0" fill="rgb(250,80,26)" rx="2" ry="2" />
<text  x="88.64" y="799.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.13%)</title><rect x="916.1" y="565" width="1.6" height="15.0" fill="rgb(214,109,50)" rx="2" ry="2" />
<text  x="919.10" y="575.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="978.2" y="549" width="0.8" height="15.0" fill="rgb(215,165,29)" rx="2" ry="2" />
<text  x="981.21" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="173.2" y="517" width="0.8" height="15.0" fill="rgb(221,15,45)" rx="2" ry="2" />
<text  x="176.23" y="527.5" ></text>
</g>
<g >
<title>free_unref_page_commit (20 samples, 1.35%)</title><rect x="895.4" y="629" width="15.9" height="15.0" fill="rgb(210,56,42)" rx="2" ry="2" />
<text  x="898.40" y="639.5" ></text>
</g>
<g >
<title>move_pages_to_lru (1 samples, 0.07%)</title><rect x="866.7" y="661" width="0.8" height="15.0" fill="rgb(210,224,12)" rx="2" ry="2" />
<text  x="869.73" y="671.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="174.0" y="453" width="0.8" height="15.0" fill="rgb(211,227,19)" rx="2" ry="2" />
<text  x="177.02" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (1 samples, 0.07%)</title><rect x="84.8" y="741" width="0.8" height="15.0" fill="rgb(235,119,7)" rx="2" ry="2" />
<text  x="87.84" y="751.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.13%)</title><rect x="667.7" y="581" width="1.6" height="15.0" fill="rgb(205,38,30)" rx="2" ry="2" />
<text  x="670.68" y="591.5" ></text>
</g>
<g >
<title>read_pages (1 samples, 0.07%)</title><rect x="162.9" y="501" width="0.8" height="15.0" fill="rgb(240,40,23)" rx="2" ry="2" />
<text  x="165.87" y="511.5" ></text>
</g>
<g >
<title>insert_module (1 samples, 0.07%)</title><rect x="12.4" y="629" width="0.8" height="15.0" fill="rgb(251,191,35)" rx="2" ry="2" />
<text  x="15.39" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="159.7" y="693" width="0.8" height="15.0" fill="rgb(236,148,41)" rx="2" ry="2" />
<text  x="162.69" y="703.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="725.8" y="437" width="0.8" height="15.0" fill="rgb(235,99,9)" rx="2" ry="2" />
<text  x="728.80" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (6 samples, 0.40%)</title><rect x="979.8" y="581" width="4.8" height="15.0" fill="rgb(244,133,24)" rx="2" ry="2" />
<text  x="982.80" y="591.5" ></text>
</g>
<g >
<title>ondemand_readahead (1 samples, 0.07%)</title><rect x="702.7" y="405" width="0.8" height="15.0" fill="rgb(233,79,1)" rx="2" ry="2" />
<text  x="705.71" y="415.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="727.4" y="645" width="0.8" height="15.0" fill="rgb(209,17,4)" rx="2" ry="2" />
<text  x="730.40" y="655.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (6 samples, 0.40%)</title><rect x="703.5" y="677" width="4.8" height="15.0" fill="rgb(207,26,31)" rx="2" ry="2" />
<text  x="706.51" y="687.5" ></text>
</g>
<g >
<title>lind (5 samples, 0.34%)</title><rect x="10.0" y="805" width="4.0" height="15.0" fill="rgb(239,169,48)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="174.0" y="533" width="0.8" height="15.0" fill="rgb(245,61,32)" rx="2" ry="2" />
<text  x="177.02" y="543.5" ></text>
</g>
<g >
<title>ovl_unlink (1 samples, 0.07%)</title><rect x="726.6" y="549" width="0.8" height="15.0" fill="rgb(221,140,1)" rx="2" ry="2" />
<text  x="729.60" y="559.5" ></text>
</g>
<g >
<title>build_detached_freelist (1 samples, 0.07%)</title><rect x="997.3" y="677" width="0.8" height="15.0" fill="rgb(221,101,36)" rx="2" ry="2" />
<text  x="1000.31" y="687.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (9 samples, 0.61%)</title><rect x="998.1" y="645" width="7.2" height="15.0" fill="rgb(208,174,19)" rx="2" ry="2" />
<text  x="1001.11" y="655.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (1 samples, 0.07%)</title><rect x="865.9" y="645" width="0.8" height="15.0" fill="rgb(248,184,29)" rx="2" ry="2" />
<text  x="868.94" y="655.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.07%)</title><rect x="952.7" y="453" width="0.8" height="15.0" fill="rgb(244,5,39)" rx="2" ry="2" />
<text  x="955.73" y="463.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="163.7" y="485" width="0.8" height="15.0" fill="rgb(241,173,48)" rx="2" ry="2" />
<text  x="166.67" y="495.5" ></text>
</g>
<g >
<title>vfs_write (6 samples, 0.40%)</title><rect x="79.3" y="565" width="4.7" height="15.0" fill="rgb(238,111,44)" rx="2" ry="2" />
<text  x="82.27" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.07%)</title><rect x="952.7" y="469" width="0.8" height="15.0" fill="rgb(215,107,1)" rx="2" ry="2" />
<text  x="955.73" y="479.5" ></text>
</g>
<g >
<title>worker_thread (13 samples, 0.88%)</title><rect x="994.9" y="757" width="10.4" height="15.0" fill="rgb(231,116,46)" rx="2" ry="2" />
<text  x="997.93" y="767.5" ></text>
</g>
<g >
<title>__unlink (1 samples, 0.07%)</title><rect x="167.7" y="597" width="0.7" height="15.0" fill="rgb(246,84,47)" rx="2" ry="2" />
<text  x="170.65" y="607.5" ></text>
</g>
<g >
<title>rcu_core_si (4 samples, 0.27%)</title><rect x="931.2" y="485" width="3.2" height="15.0" fill="rgb(205,82,42)" rx="2" ry="2" />
<text  x="934.23" y="495.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.07%)</title><rect x="296.6" y="629" width="0.8" height="15.0" fill="rgb(236,128,1)" rx="2" ry="2" />
<text  x="299.64" y="639.5" ></text>
</g>
<g >
<title>NaClVmmapMakeSorted (1 samples, 0.07%)</title><rect x="171.6" y="677" width="0.8" height="15.0" fill="rgb(232,211,50)" rx="2" ry="2" />
<text  x="174.63" y="687.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.07%)</title><rect x="992.5" y="629" width="0.8" height="15.0" fill="rgb(248,105,28)" rx="2" ry="2" />
<text  x="995.54" y="639.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (525 samples, 35.43%)</title><rect x="104.8" y="773" width="418.0" height="15.0" fill="rgb(215,7,42)" rx="2" ry="2" />
<text  x="107.75" y="783.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.07%)</title><rect x="163.7" y="293" width="0.8" height="15.0" fill="rgb(217,17,36)" rx="2" ry="2" />
<text  x="166.67" y="303.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="163.7" y="421" width="0.8" height="15.0" fill="rgb(221,82,0)" rx="2" ry="2" />
<text  x="166.67" y="431.5" ></text>
</g>
<g >
<title>NaClLoadTrampoline (1 samples, 0.07%)</title><rect x="169.2" y="661" width="0.8" height="15.0" fill="rgb(244,206,49)" rx="2" ry="2" />
<text  x="172.24" y="671.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.07%)</title><rect x="165.3" y="293" width="0.8" height="15.0" fill="rgb(231,94,46)" rx="2" ry="2" />
<text  x="168.26" y="303.5" ></text>
</g>
<g >
<title>BaseExtentionFromREX (1 samples, 0.07%)</title><rect x="150.9" y="661" width="0.8" height="15.0" fill="rgb(249,96,49)" rx="2" ry="2" />
<text  x="153.93" y="671.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.07%)</title><rect x="728.2" y="773" width="0.8" height="15.0" fill="rgb(230,125,42)" rx="2" ry="2" />
<text  x="731.19" y="783.5" ></text>
</g>
<g >
<title>copy_page_from_iter_iovec (2 samples, 0.13%)</title><rect x="699.5" y="597" width="1.6" height="15.0" fill="rgb(208,136,28)" rx="2" ry="2" />
<text  x="702.53" y="607.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (116 samples, 7.83%)</title><rect x="303.0" y="597" width="92.4" height="15.0" fill="rgb(212,33,24)" rx="2" ry="2" />
<text  x="306.01" y="607.5" >ringbuf::pr..</text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.07%)</title><rect x="783.1" y="533" width="0.8" height="15.0" fill="rgb(242,150,31)" rx="2" ry="2" />
<text  x="786.13" y="543.5" ></text>
</g>
<g >
<title>process_vm_rw (4 samples, 0.27%)</title><rect x="699.5" y="661" width="3.2" height="15.0" fill="rgb(212,116,26)" rx="2" ry="2" />
<text  x="702.53" y="671.5" ></text>
</g>
<g >
<title>list_lru_add (2 samples, 0.13%)</title><rect x="878.7" y="565" width="1.6" height="15.0" fill="rgb(241,179,1)" rx="2" ry="2" />
<text  x="881.68" y="575.5" ></text>
</g>
<g >
<title>perf (87 samples, 5.87%)</title><rect x="14.8" y="805" width="69.2" height="15.0" fill="rgb(218,137,44)" rx="2" ry="2" />
<text  x="17.78" y="815.5" >perf</text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.07%)</title><rect x="978.2" y="437" width="0.8" height="15.0" fill="rgb(246,120,39)" rx="2" ry="2" />
<text  x="981.21" y="447.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="983.8" y="549" width="0.8" height="15.0" fill="rgb(236,90,15)" rx="2" ry="2" />
<text  x="986.78" y="559.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.07%)</title><rect x="163.7" y="565" width="0.8" height="15.0" fill="rgb(237,141,53)" rx="2" ry="2" />
<text  x="166.67" y="575.5" ></text>
</g>
<g >
<title>workingset_eviction (2 samples, 0.13%)</title><rect x="892.2" y="629" width="1.6" height="15.0" fill="rgb(219,86,21)" rx="2" ry="2" />
<text  x="895.21" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (3 samples, 0.20%)</title><rect x="165.3" y="613" width="2.4" height="15.0" fill="rgb(233,46,36)" rx="2" ry="2" />
<text  x="168.26" y="623.5" ></text>
</g>
<g >
<title>pagevec_lookup_range (1 samples, 0.07%)</title><rect x="1000.5" y="549" width="0.8" height="15.0" fill="rgb(235,149,37)" rx="2" ry="2" />
<text  x="1003.50" y="559.5" ></text>
</g>
<g >
<title>_nc_tparm_analyze (1 samples, 0.07%)</title><rect x="11.6" y="549" width="0.8" height="15.0" fill="rgb(235,19,18)" rx="2" ry="2" />
<text  x="14.59" y="559.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (1 samples, 0.07%)</title><rect x="163.7" y="533" width="0.8" height="15.0" fill="rgb(205,119,28)" rx="2" ry="2" />
<text  x="166.67" y="543.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (1 samples, 0.07%)</title><rect x="994.9" y="645" width="0.8" height="15.0" fill="rgb(222,224,2)" rx="2" ry="2" />
<text  x="997.93" y="655.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (1 samples, 0.07%)</title><rect x="168.4" y="53" width="0.8" height="15.0" fill="rgb(240,19,44)" rx="2" ry="2" />
<text  x="171.45" y="63.5" ></text>
</g>
<g >
<title>core::cmp::min (18 samples, 1.21%)</title><rect x="281.5" y="629" width="14.3" height="15.0" fill="rgb(229,157,37)" rx="2" ry="2" />
<text  x="284.51" y="639.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="727.4" y="181" width="0.8" height="15.0" fill="rgb(224,8,3)" rx="2" ry="2" />
<text  x="730.40" y="191.5" ></text>
</g>
<g >
<title>do_exit (51 samples, 3.44%)</title><rect x="756.9" y="725" width="40.6" height="15.0" fill="rgb(252,169,39)" rx="2" ry="2" />
<text  x="759.86" y="735.5" >do_..</text>
</g>
<g >
<title>do_shared_fault (1 samples, 0.07%)</title><rect x="108.7" y="517" width="0.8" height="15.0" fill="rgb(254,131,14)" rx="2" ry="2" />
<text  x="111.73" y="527.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.27%)</title><rect x="931.2" y="501" width="3.2" height="15.0" fill="rgb(215,52,42)" rx="2" ry="2" />
<text  x="934.23" y="511.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.07%)</title><rect x="978.2" y="581" width="0.8" height="15.0" fill="rgb(224,111,23)" rx="2" ry="2" />
<text  x="981.21" y="591.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.07%)</title><rect x="168.4" y="197" width="0.8" height="15.0" fill="rgb(236,5,32)" rx="2" ry="2" />
<text  x="171.45" y="207.5" ></text>
</g>
<g >
<title>alloc_pages_current (2 samples, 0.13%)</title><rect x="80.1" y="373" width="1.6" height="15.0" fill="rgb(219,71,37)" rx="2" ry="2" />
<text  x="83.07" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.07%)</title><rect x="702.7" y="533" width="0.8" height="15.0" fill="rgb(252,47,16)" rx="2" ry="2" />
<text  x="705.71" y="543.5" ></text>
</g>
<g >
<title>__free_one_page (11 samples, 0.74%)</title><rect x="901.8" y="597" width="8.7" height="15.0" fill="rgb(214,143,7)" rx="2" ry="2" />
<text  x="904.77" y="607.5" ></text>
</g>
<g >
<title>do_group_exit (51 samples, 3.44%)</title><rect x="756.9" y="741" width="40.6" height="15.0" fill="rgb(205,130,2)" rx="2" ry="2" />
<text  x="759.86" y="751.5" >do_..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1 samples, 0.07%)</title><rect x="170.0" y="277" width="0.8" height="15.0" fill="rgb(237,60,43)" rx="2" ry="2" />
<text  x="173.04" y="287.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.07%)</title><rect x="170.8" y="485" width="0.8" height="15.0" fill="rgb(210,223,40)" rx="2" ry="2" />
<text  x="173.84" y="495.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.07%)</title><rect x="1010.1" y="517" width="0.8" height="15.0" fill="rgb(244,144,2)" rx="2" ry="2" />
<text  x="1013.05" y="527.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.07%)</title><rect x="78.5" y="741" width="0.8" height="15.0" fill="rgb(239,83,36)" rx="2" ry="2" />
<text  x="81.48" y="751.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (6 samples, 0.40%)</title><rect x="79.3" y="453" width="4.7" height="15.0" fill="rgb(211,150,51)" rx="2" ry="2" />
<text  x="82.27" y="463.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.07%)</title><rect x="170.8" y="453" width="0.8" height="15.0" fill="rgb(220,75,30)" rx="2" ry="2" />
<text  x="173.84" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (3 samples, 0.20%)</title><rect x="518.8" y="597" width="2.4" height="15.0" fill="rgb(215,186,32)" rx="2" ry="2" />
<text  x="521.79" y="607.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (1 samples, 0.07%)</title><rect x="168.4" y="133" width="0.8" height="15.0" fill="rgb(237,120,43)" rx="2" ry="2" />
<text  x="171.45" y="143.5" ></text>
</g>
<g >
<title>_nc_trim_sgr0 (1 samples, 0.07%)</title><rect x="11.6" y="613" width="0.8" height="15.0" fill="rgb(233,191,28)" rx="2" ry="2" />
<text  x="14.59" y="623.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.07%)</title><rect x="983.8" y="501" width="0.8" height="15.0" fill="rgb(219,85,5)" rx="2" ry="2" />
<text  x="986.78" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (3 samples, 0.20%)</title><rect x="165.3" y="597" width="2.4" height="15.0" fill="rgb(237,129,39)" rx="2" ry="2" />
<text  x="168.26" y="607.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="170.0" y="293" width="0.8" height="15.0" fill="rgb(208,225,3)" rx="2" ry="2" />
<text  x="173.04" y="303.5" ></text>
</g>
<g >
<title>ovl_lookup_temp (1 samples, 0.07%)</title><rect x="167.7" y="437" width="0.7" height="15.0" fill="rgb(240,201,17)" rx="2" ry="2" />
<text  x="170.65" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.27%)</title><rect x="699.5" y="709" width="3.2" height="15.0" fill="rgb(205,202,15)" rx="2" ry="2" />
<text  x="702.53" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.20%)</title><rect x="165.3" y="549" width="2.4" height="15.0" fill="rgb(227,208,54)" rx="2" ry="2" />
<text  x="168.26" y="559.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1 samples, 0.07%)</title><rect x="167.7" y="309" width="0.7" height="15.0" fill="rgb(219,155,54)" rx="2" ry="2" />
<text  x="170.65" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.07%)</title><rect x="975.0" y="533" width="0.8" height="15.0" fill="rgb(237,135,2)" rx="2" ry="2" />
<text  x="978.02" y="543.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (10 samples, 0.67%)</title><rect x="649.4" y="581" width="7.9" height="15.0" fill="rgb(248,85,11)" rx="2" ry="2" />
<text  x="652.37" y="591.5" ></text>
</g>
<g >
<title>filename_lookup (1 samples, 0.07%)</title><rect x="173.2" y="437" width="0.8" height="15.0" fill="rgb(225,216,28)" rx="2" ry="2" />
<text  x="176.23" y="447.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.07%)</title><rect x="163.7" y="389" width="0.8" height="15.0" fill="rgb(250,178,5)" rx="2" ry="2" />
<text  x="166.67" y="399.5" ></text>
</g>
<g >
<title>ext4_free_in_core_inode (1 samples, 0.07%)</title><rect x="952.7" y="389" width="0.8" height="15.0" fill="rgb(236,192,2)" rx="2" ry="2" />
<text  x="955.73" y="399.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.13%)</title><rect x="1005.3" y="597" width="1.6" height="15.0" fill="rgb(220,58,31)" rx="2" ry="2" />
<text  x="1008.28" y="607.5" ></text>
</g>
<g >
<title>shrink_slab_memcg (48 samples, 3.24%)</title><rect x="954.3" y="677" width="38.2" height="15.0" fill="rgb(223,203,23)" rx="2" ry="2" />
<text  x="957.32" y="687.5" >shr..</text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.07%)</title><rect x="12.4" y="613" width="0.8" height="15.0" fill="rgb(243,163,22)" rx="2" ry="2" />
<text  x="15.39" y="623.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (131 samples, 8.84%)</title><rect x="297.4" y="629" width="104.3" height="15.0" fill="rgb(241,223,18)" rx="2" ry="2" />
<text  x="300.44" y="639.5" >ringbuf::pro..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.07%)</title><rect x="1173.3" y="533" width="0.8" height="15.0" fill="rgb(213,215,15)" rx="2" ry="2" />
<text  x="1176.28" y="543.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (6 samples, 0.40%)</title><rect x="1183.6" y="549" width="4.8" height="15.0" fill="rgb(249,217,51)" rx="2" ry="2" />
<text  x="1186.63" y="559.5" ></text>
</g>
<g >
<title>mmput (49 samples, 3.31%)</title><rect x="757.7" y="693" width="39.0" height="15.0" fill="rgb(217,208,11)" rx="2" ry="2" />
<text  x="760.65" y="703.5" >mmput</text>
</g>
<g >
<title>lru_cache_add (17 samples, 1.15%)</title><rect x="662.9" y="645" width="13.5" height="15.0" fill="rgb(225,227,51)" rx="2" ry="2" />
<text  x="665.90" y="655.5" ></text>
</g>
<g >
<title>dispatcher (5 samples, 0.34%)</title><rect x="165.3" y="709" width="3.9" height="15.0" fill="rgb(216,120,16)" rx="2" ry="2" />
<text  x="168.26" y="719.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.07%)</title><rect x="108.7" y="565" width="0.8" height="15.0" fill="rgb(247,223,16)" rx="2" ry="2" />
<text  x="111.73" y="575.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (1 samples, 0.07%)</title><rect x="85.6" y="773" width="0.8" height="15.0" fill="rgb(246,60,11)" rx="2" ry="2" />
<text  x="88.64" y="783.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.07%)</title><rect x="689.2" y="629" width="0.8" height="15.0" fill="rgb(221,167,8)" rx="2" ry="2" />
<text  x="692.18" y="639.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list (1 samples, 0.07%)</title><rect x="162.9" y="453" width="0.8" height="15.0" fill="rgb(253,183,31)" rx="2" ry="2" />
<text  x="165.87" y="463.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (1 samples, 0.07%)</title><rect x="702.7" y="389" width="0.8" height="15.0" fill="rgb(217,16,47)" rx="2" ry="2" />
<text  x="705.71" y="399.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="168.4" y="469" width="0.8" height="15.0" fill="rgb(205,156,53)" rx="2" ry="2" />
<text  x="171.45" y="479.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (84 samples, 5.67%)</title><rect x="328.5" y="581" width="66.9" height="15.0" fill="rgb(237,145,48)" rx="2" ry="2" />
<text  x="331.49" y="591.5" >ringbuf..</text>
</g>
<g >
<title>ksys_write (6 samples, 0.40%)</title><rect x="79.3" y="581" width="4.7" height="15.0" fill="rgb(224,169,31)" rx="2" ry="2" />
<text  x="82.27" y="591.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.07%)</title><rect x="701.1" y="453" width="0.8" height="15.0" fill="rgb(239,56,18)" rx="2" ry="2" />
<text  x="704.12" y="463.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.13%)</title><rect x="916.1" y="581" width="1.6" height="15.0" fill="rgb(252,38,31)" rx="2" ry="2" />
<text  x="919.10" y="591.5" ></text>
</g>
<g >
<title>do_shared_fault (2 samples, 0.13%)</title><rect x="701.1" y="501" width="1.6" height="15.0" fill="rgb(221,155,22)" rx="2" ry="2" />
<text  x="704.12" y="511.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.07%)</title><rect x="168.4" y="357" width="0.8" height="15.0" fill="rgb(220,109,37)" rx="2" ry="2" />
<text  x="171.45" y="367.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.07%)</title><rect x="168.4" y="501" width="0.8" height="15.0" fill="rgb(225,94,28)" rx="2" ry="2" />
<text  x="171.45" y="511.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.07%)</title><rect x="1007.7" y="661" width="0.8" height="15.0" fill="rgb(253,89,29)" rx="2" ry="2" />
<text  x="1010.67" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.07%)</title><rect x="727.4" y="165" width="0.8" height="15.0" fill="rgb(216,189,31)" rx="2" ry="2" />
<text  x="730.40" y="175.5" ></text>
</g>
<g >
<title>___d_drop (3 samples, 0.20%)</title><rect x="967.1" y="581" width="2.3" height="15.0" fill="rgb(226,63,45)" rx="2" ry="2" />
<text  x="970.06" y="591.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.07%)</title><rect x="172.4" y="421" width="0.8" height="15.0" fill="rgb(205,173,16)" rx="2" ry="2" />
<text  x="175.43" y="431.5" ></text>
</g>
<g >
<title>workingset_update_node (2 samples, 0.13%)</title><rect x="878.7" y="581" width="1.6" height="15.0" fill="rgb(231,134,29)" rx="2" ry="2" />
<text  x="881.68" y="591.5" ></text>
</g>
<g >
<title>ext4_inode_journal_mode (1 samples, 0.07%)</title><rect x="987.8" y="581" width="0.8" height="15.0" fill="rgb(210,206,29)" rx="2" ry="2" />
<text  x="990.76" y="591.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.07%)</title><rect x="166.1" y="325" width="0.8" height="15.0" fill="rgb(214,196,26)" rx="2" ry="2" />
<text  x="169.06" y="335.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.07%)</title><rect x="1170.9" y="629" width="0.8" height="15.0" fill="rgb(251,28,48)" rx="2" ry="2" />
<text  x="1173.89" y="639.5" ></text>
</g>
<g >
<title>NaClValidateImage (6 samples, 0.40%)</title><rect x="703.5" y="709" width="4.8" height="15.0" fill="rgb(229,59,46)" rx="2" ry="2" />
<text  x="706.51" y="719.5" ></text>
</g>
<g >
<title>__destroy_inode (1 samples, 0.07%)</title><rect x="986.2" y="581" width="0.8" height="15.0" fill="rgb(253,107,37)" rx="2" ry="2" />
<text  x="989.17" y="591.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.07%)</title><rect x="885.0" y="565" width="0.8" height="15.0" fill="rgb(211,136,53)" rx="2" ry="2" />
<text  x="888.05" y="575.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.13%)</title><rect x="701.1" y="549" width="1.6" height="15.0" fill="rgb(242,82,43)" rx="2" ry="2" />
<text  x="704.12" y="559.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (3 samples, 0.20%)</title><rect x="775.2" y="565" width="2.4" height="15.0" fill="rgb(209,120,41)" rx="2" ry="2" />
<text  x="778.17" y="575.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.07%)</title><rect x="162.1" y="565" width="0.8" height="15.0" fill="rgb(223,155,36)" rx="2" ry="2" />
<text  x="165.08" y="575.5" ></text>
</g>
<g >
<title>blk_finish_plug (1 samples, 0.07%)</title><rect x="162.9" y="485" width="0.8" height="15.0" fill="rgb(245,157,32)" rx="2" ry="2" />
<text  x="165.87" y="495.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.07%)</title><rect x="1166.9" y="709" width="0.8" height="15.0" fill="rgb(253,200,35)" rx="2" ry="2" />
<text  x="1169.91" y="719.5" ></text>
</g>
<g >
<title>CheckValidityOfRegularInstruction (2 samples, 0.13%)</title><rect x="155.7" y="645" width="1.6" height="15.0" fill="rgb(234,72,23)" rx="2" ry="2" />
<text  x="158.71" y="655.5" ></text>
</g>
<g >
<title>__list_lru_walk_one (3 samples, 0.20%)</title><rect x="990.1" y="597" width="2.4" height="15.0" fill="rgb(208,149,2)" rx="2" ry="2" />
<text  x="993.15" y="607.5" ></text>
</g>
<g >
<title>find_busiest_group (6 samples, 0.40%)</title><rect x="1183.6" y="581" width="4.8" height="15.0" fill="rgb(253,170,25)" rx="2" ry="2" />
<text  x="1186.63" y="591.5" ></text>
</g>
<g >
<title>xas_clear_mark (2 samples, 0.13%)</title><rect x="877.1" y="597" width="1.6" height="15.0" fill="rgb(209,134,48)" rx="2" ry="2" />
<text  x="880.09" y="607.5" ></text>
</g>
<g >
<title>free_unref_page_commit (13 samples, 0.88%)</title><rect x="785.5" y="517" width="10.4" height="15.0" fill="rgb(208,88,3)" rx="2" ry="2" />
<text  x="788.52" y="527.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.07%)</title><rect x="725.8" y="357" width="0.8" height="15.0" fill="rgb(205,190,26)" rx="2" ry="2" />
<text  x="728.80" y="367.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (3 samples, 0.20%)</title><rect x="885.0" y="597" width="2.4" height="15.0" fill="rgb(251,88,54)" rx="2" ry="2" />
<text  x="888.05" y="607.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (1 samples, 0.07%)</title><rect x="168.4" y="645" width="0.8" height="15.0" fill="rgb(237,156,2)" rx="2" ry="2" />
<text  x="171.45" y="655.5" ></text>
</g>
<g >
<title>perf_event_mmap_event (1 samples, 0.07%)</title><rect x="170.8" y="437" width="0.8" height="15.0" fill="rgb(252,136,18)" rx="2" ry="2" />
<text  x="173.84" y="447.5" ></text>
</g>
<g >
<title>NaClDescIoDescMap (1 samples, 0.07%)</title><rect x="170.8" y="693" width="0.8" height="15.0" fill="rgb(221,153,37)" rx="2" ry="2" />
<text  x="173.84" y="703.5" ></text>
</g>
<g >
<title>page_check_references.isra.0 (3 samples, 0.20%)</title><rect x="915.3" y="645" width="2.4" height="15.0" fill="rgb(221,15,10)" rx="2" ry="2" />
<text  x="918.30" y="655.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (146 samples, 9.85%)</title><rect x="401.7" y="629" width="116.3" height="15.0" fill="rgb(220,202,31)" rx="2" ry="2" />
<text  x="404.74" y="639.5" >ringbuf::produ..</text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.13%)</title><rect x="932.0" y="405" width="1.6" height="15.0" fill="rgb(235,115,17)" rx="2" ry="2" />
<text  x="935.02" y="415.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.07%)</title><rect x="170.0" y="261" width="0.8" height="15.0" fill="rgb(215,43,23)" rx="2" ry="2" />
<text  x="173.04" y="271.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.07%)</title><rect x="159.7" y="581" width="0.8" height="15.0" fill="rgb(246,5,0)" rx="2" ry="2" />
<text  x="162.69" y="591.5" ></text>
</g>
<g >
<title>rcu_core (2 samples, 0.13%)</title><rect x="947.2" y="437" width="1.5" height="15.0" fill="rgb(228,191,19)" rx="2" ry="2" />
<text  x="950.15" y="447.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (9 samples, 0.61%)</title><rect x="97.6" y="741" width="7.2" height="15.0" fill="rgb(213,154,8)" rx="2" ry="2" />
<text  x="100.58" y="751.5" ></text>
</g>
<g >
<title>local_clock (1 samples, 0.07%)</title><rect x="170.8" y="373" width="0.8" height="15.0" fill="rgb(241,57,38)" rx="2" ry="2" />
<text  x="173.84" y="383.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (17 samples, 1.15%)</title><rect x="662.9" y="629" width="13.5" height="15.0" fill="rgb(249,25,11)" rx="2" ry="2" />
<text  x="665.90" y="639.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (22 samples, 1.48%)</title><rect x="779.1" y="581" width="17.6" height="15.0" fill="rgb(220,184,8)" rx="2" ry="2" />
<text  x="782.15" y="591.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.13%)</title><rect x="916.1" y="597" width="1.6" height="15.0" fill="rgb(225,148,45)" rx="2" ry="2" />
<text  x="919.10" y="607.5" ></text>
</g>
<g >
<title>shrink_dentry_list (22 samples, 1.48%)</title><rect x="967.1" y="613" width="17.5" height="15.0" fill="rgb(242,227,54)" rx="2" ry="2" />
<text  x="970.06" y="623.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (4 samples, 0.27%)</title><rect x="686.8" y="645" width="3.2" height="15.0" fill="rgb(250,202,32)" rx="2" ry="2" />
<text  x="689.79" y="655.5" ></text>
</g>
<g >
<title>page_vma_mapped_walk (1 samples, 0.07%)</title><rect x="849.2" y="597" width="0.8" height="15.0" fill="rgb(235,108,42)" rx="2" ry="2" />
<text  x="852.22" y="607.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.07%)</title><rect x="522.0" y="709" width="0.8" height="15.0" fill="rgb(216,32,50)" rx="2" ry="2" />
<text  x="524.97" y="719.5" ></text>
</g>
<g >
<title>page_remove_file_rmap (1 samples, 0.07%)</title><rect x="172.4" y="373" width="0.8" height="15.0" fill="rgb(229,170,49)" rx="2" ry="2" />
<text  x="175.43" y="383.5" ></text>
</g>
<g >
<title>try_charge (6 samples, 0.40%)</title><rect x="681.2" y="645" width="4.8" height="15.0" fill="rgb(207,206,2)" rx="2" ry="2" />
<text  x="684.21" y="655.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.07%)</title><rect x="170.0" y="85" width="0.8" height="15.0" fill="rgb(236,213,53)" rx="2" ry="2" />
<text  x="173.04" y="95.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.07%)</title><rect x="975.8" y="517" width="0.8" height="15.0" fill="rgb(237,224,28)" rx="2" ry="2" />
<text  x="978.82" y="527.5" ></text>
</g>
<g >
<title>pagecache_get_page (3 samples, 0.20%)</title><rect x="79.3" y="389" width="2.4" height="15.0" fill="rgb(215,170,34)" rx="2" ry="2" />
<text  x="82.27" y="399.5" ></text>
</g>
<g >
<title>put_ctx (2 samples, 0.13%)</title><rect x="74.5" y="629" width="1.6" height="15.0" fill="rgb(227,195,34)" rx="2" ry="2" />
<text  x="77.49" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.07%)</title><rect x="170.0" y="581" width="0.8" height="15.0" fill="rgb(218,174,50)" rx="2" ry="2" />
<text  x="173.04" y="591.5" ></text>
</g>
<g >
<title>lind_mmap (1 samples, 0.07%)</title><rect x="170.8" y="661" width="0.8" height="15.0" fill="rgb(247,23,27)" rx="2" ry="2" />
<text  x="173.84" y="671.5" ></text>
</g>
<g >
<title>get_typical_interval (2 samples, 0.13%)</title><rect x="1179.6" y="613" width="1.6" height="15.0" fill="rgb(228,126,50)" rx="2" ry="2" />
<text  x="1182.65" y="623.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.07%)</title><rect x="776.0" y="533" width="0.8" height="15.0" fill="rgb(247,26,32)" rx="2" ry="2" />
<text  x="778.96" y="543.5" ></text>
</g>
<g >
<title>lock_page_lruvec_irqsave (1 samples, 0.07%)</title><rect x="674.0" y="613" width="0.8" height="15.0" fill="rgb(214,172,39)" rx="2" ry="2" />
<text  x="677.05" y="623.5" ></text>
</g>
<g >
<title>rustposix::interface::file::openfile (1 samples, 0.07%)</title><rect x="173.2" y="661" width="0.8" height="15.0" fill="rgb(220,149,2)" rx="2" ry="2" />
<text  x="176.23" y="671.5" ></text>
</g>
<g >
<title>inode_add_lru (1 samples, 0.07%)</title><rect x="977.4" y="517" width="0.8" height="15.0" fill="rgb(221,189,37)" rx="2" ry="2" />
<text  x="980.41" y="527.5" ></text>
</g>
<g >
<title>zap_pte_range (48 samples, 3.24%)</title><rect x="758.4" y="597" width="38.3" height="15.0" fill="rgb(251,213,12)" rx="2" ry="2" />
<text  x="761.45" y="607.5" >zap..</text>
</g>
<g >
<title>free_pcppages_bulk (18 samples, 1.21%)</title><rect x="897.0" y="613" width="14.3" height="15.0" fill="rgb(209,171,30)" rx="2" ry="2" />
<text  x="899.99" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1 samples, 0.07%)</title><rect x="725.0" y="741" width="0.8" height="15.0" fill="rgb(238,55,18)" rx="2" ry="2" />
<text  x="728.01" y="751.5" ></text>
</g>
<g >
<title>sata_async_notification.part.0 (1 samples, 0.07%)</title><rect x="1006.1" y="517" width="0.8" height="15.0" fill="rgb(232,66,4)" rx="2" ry="2" />
<text  x="1009.07" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="170.0" y="37" width="0.8" height="15.0" fill="rgb(249,44,7)" rx="2" ry="2" />
<text  x="173.04" y="47.5" ></text>
</g>
<g >
<title>do_shrink_slab (48 samples, 3.24%)</title><rect x="954.3" y="661" width="38.2" height="15.0" fill="rgb(225,19,10)" rx="2" ry="2" />
<text  x="957.32" y="671.5" >do_..</text>
</g>
<g >
<title>do_fault (1 samples, 0.07%)</title><rect x="702.7" y="485" width="0.8" height="15.0" fill="rgb(237,174,18)" rx="2" ry="2" />
<text  x="705.71" y="495.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.07%)</title><rect x="170.0" y="181" width="0.8" height="15.0" fill="rgb(234,145,23)" rx="2" ry="2" />
<text  x="173.04" y="191.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.07%)</title><rect x="702.7" y="565" width="0.8" height="15.0" fill="rgb(209,92,22)" rx="2" ry="2" />
<text  x="705.71" y="575.5" ></text>
</g>
<g >
<title>std::fs::remove_file (1 samples, 0.07%)</title><rect x="726.6" y="677" width="0.8" height="15.0" fill="rgb(218,122,15)" rx="2" ry="2" />
<text  x="729.60" y="687.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="168.4" y="389" width="0.8" height="15.0" fill="rgb(230,146,26)" rx="2" ry="2" />
<text  x="171.45" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.67%)</title><rect x="522.8" y="773" width="7.9" height="15.0" fill="rgb(236,50,10)" rx="2" ry="2" />
<text  x="525.77" y="783.5" ></text>
</g>
<g >
<title>ovl_free_inode (2 samples, 0.13%)</title><rect x="932.0" y="421" width="1.6" height="15.0" fill="rgb(210,228,35)" rx="2" ry="2" />
<text  x="935.02" y="431.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.07%)</title><rect x="796.7" y="709" width="0.8" height="15.0" fill="rgb(241,83,39)" rx="2" ry="2" />
<text  x="799.67" y="719.5" ></text>
</g>
<g >
<title>rmap_walk (1 samples, 0.07%)</title><rect x="849.2" y="645" width="0.8" height="15.0" fill="rgb(252,21,33)" rx="2" ry="2" />
<text  x="852.22" y="655.5" ></text>
</g>
<g >
<title>ovl_cleanup_and_whiteout (1 samples, 0.07%)</title><rect x="726.6" y="501" width="0.8" height="15.0" fill="rgb(224,73,18)" rx="2" ry="2" />
<text  x="729.60" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.07%)</title><rect x="272.0" y="613" width="0.8" height="15.0" fill="rgb(232,144,34)" rx="2" ry="2" />
<text  x="274.96" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.07%)</title><rect x="174.0" y="613" width="0.8" height="15.0" fill="rgb(254,154,54)" rx="2" ry="2" />
<text  x="177.02" y="623.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.07%)</title><rect x="14.0" y="805" width="0.8" height="15.0" fill="rgb(231,162,28)" rx="2" ry="2" />
<text  x="16.98" y="815.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.07%)</title><rect x="170.8" y="645" width="0.8" height="15.0" fill="rgb(205,75,28)" rx="2" ry="2" />
<text  x="173.84" y="655.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.07%)</title><rect x="701.9" y="485" width="0.8" height="15.0" fill="rgb(251,198,3)" rx="2" ry="2" />
<text  x="704.92" y="495.5" ></text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.07%)</title><rect x="991.7" y="533" width="0.8" height="15.0" fill="rgb(207,106,20)" rx="2" ry="2" />
<text  x="994.74" y="543.5" ></text>
</g>
<g >
<title>__evlist__enable (80 samples, 5.40%)</title><rect x="14.8" y="741" width="63.7" height="15.0" fill="rgb(207,106,34)" rx="2" ry="2" />
<text  x="17.78" y="751.5" >__evli..</text>
</g>
<g >
<title>unmap_region (1 samples, 0.07%)</title><rect x="159.7" y="613" width="0.8" height="15.0" fill="rgb(236,127,6)" rx="2" ry="2" />
<text  x="162.69" y="623.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.07%)</title><rect x="162.1" y="549" width="0.8" height="15.0" fill="rgb(239,55,28)" rx="2" ry="2" />
<text  x="165.08" y="559.5" ></text>
</g>
<g >
<title>get_new_window_size (2 samples, 0.13%)</title><rect x="10.8" y="677" width="1.6" height="15.0" fill="rgb(205,104,32)" rx="2" ry="2" />
<text  x="13.80" y="687.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.13%)</title><rect x="947.2" y="517" width="1.5" height="15.0" fill="rgb(229,53,22)" rx="2" ry="2" />
<text  x="950.15" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.27%)</title><rect x="699.5" y="725" width="3.2" height="15.0" fill="rgb(228,82,53)" rx="2" ry="2" />
<text  x="702.53" y="735.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.07%)</title><rect x="163.7" y="677" width="0.8" height="15.0" fill="rgb(229,206,7)" rx="2" ry="2" />
<text  x="166.67" y="687.5" ></text>
</g>
<g >
<title>refill_obj_stock (2 samples, 0.13%)</title><rect x="948.7" y="533" width="1.6" height="15.0" fill="rgb(254,200,2)" rx="2" ry="2" />
<text  x="951.74" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="173.2" y="533" width="0.8" height="15.0" fill="rgb(243,30,51)" rx="2" ry="2" />
<text  x="176.23" y="543.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (5 samples, 0.34%)</title><rect x="998.1" y="581" width="4.0" height="15.0" fill="rgb(247,143,11)" rx="2" ry="2" />
<text  x="1001.11" y="591.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="168.4" y="405" width="0.8" height="15.0" fill="rgb(208,63,6)" rx="2" ry="2" />
<text  x="171.45" y="415.5" ></text>
</g>
<g >
<title>mem_cgroup_from_obj (1 samples, 0.07%)</title><rect x="977.4" y="485" width="0.8" height="15.0" fill="rgb(237,72,54)" rx="2" ry="2" />
<text  x="980.41" y="495.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (4 samples, 0.27%)</title><rect x="1174.1" y="613" width="3.2" height="15.0" fill="rgb(219,177,12)" rx="2" ry="2" />
<text  x="1177.08" y="623.5" ></text>
</g>
<g >
<title>rcu_do_batch (2 samples, 0.13%)</title><rect x="917.7" y="501" width="1.6" height="15.0" fill="rgb(231,97,12)" rx="2" ry="2" />
<text  x="920.69" y="511.5" ></text>
</g>
<g >
<title>lind_close (1 samples, 0.07%)</title><rect x="163.7" y="613" width="0.8" height="15.0" fill="rgb(218,157,10)" rx="2" ry="2" />
<text  x="166.67" y="623.5" ></text>
</g>
<g >
<title>mem_cgroup_swapout (1 samples, 0.07%)</title><rect x="891.4" y="629" width="0.8" height="15.0" fill="rgb(231,103,38)" rx="2" ry="2" />
<text  x="894.42" y="639.5" ></text>
</g>
<g >
<title>set_default_locale (1 samples, 0.07%)</title><rect x="12.4" y="741" width="0.8" height="15.0" fill="rgb(245,19,26)" rx="2" ry="2" />
<text  x="15.39" y="751.5" ></text>
</g>
<g >
<title>call_rcu (4 samples, 0.27%)</title><rect x="970.2" y="565" width="3.2" height="15.0" fill="rgb(240,35,20)" rx="2" ry="2" />
<text  x="973.24" y="575.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.07%)</title><rect x="952.7" y="565" width="0.8" height="15.0" fill="rgb(207,12,29)" rx="2" ry="2" />
<text  x="955.73" y="575.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.07%)</title><rect x="162.9" y="613" width="0.8" height="15.0" fill="rgb(239,84,54)" rx="2" ry="2" />
<text  x="165.87" y="623.5" ></text>
</g>
<g >
<title>dentry_free (5 samples, 0.34%)</title><rect x="969.4" y="581" width="4.0" height="15.0" fill="rgb(247,228,43)" rx="2" ry="2" />
<text  x="972.45" y="591.5" ></text>
</g>
<g >
<title>iput_final (3 samples, 0.20%)</title><rect x="975.8" y="533" width="2.4" height="15.0" fill="rgb(231,140,30)" rx="2" ry="2" />
<text  x="978.82" y="543.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.07%)</title><rect x="163.7" y="325" width="0.8" height="15.0" fill="rgb(224,103,20)" rx="2" ry="2" />
<text  x="166.67" y="335.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (2 samples, 0.13%)</title><rect x="667.7" y="565" width="1.6" height="15.0" fill="rgb(241,67,27)" rx="2" ry="2" />
<text  x="670.68" y="575.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.07%)</title><rect x="79.3" y="373" width="0.8" height="15.0" fill="rgb(224,152,51)" rx="2" ry="2" />
<text  x="82.27" y="383.5" ></text>
</g>
<g >
<title>unmap_page_range (49 samples, 3.31%)</title><rect x="757.7" y="629" width="39.0" height="15.0" fill="rgb(210,122,48)" rx="2" ry="2" />
<text  x="760.65" y="639.5" >unm..</text>
</g>
<g >
<title>__alloc_pages_nodemask (54 samples, 3.64%)</title><rect x="614.3" y="645" width="43.0" height="15.0" fill="rgb(228,187,26)" rx="2" ry="2" />
<text  x="617.33" y="655.5" >__al..</text>
</g>
<g >
<title>__x64_sys_exit_group (51 samples, 3.44%)</title><rect x="756.9" y="757" width="40.6" height="15.0" fill="rgb(229,214,25)" rx="2" ry="2" />
<text  x="759.86" y="767.5" >__x..</text>
</g>
<g >
<title>vfs_statx (1 samples, 0.07%)</title><rect x="173.2" y="469" width="0.8" height="15.0" fill="rgb(241,214,50)" rx="2" ry="2" />
<text  x="176.23" y="479.5" ></text>
</g>
<g >
<title>ext4_da_write_end (2 samples, 0.13%)</title><rect x="81.7" y="421" width="1.6" height="15.0" fill="rgb(233,206,34)" rx="2" ry="2" />
<text  x="84.66" y="431.5" ></text>
</g>
<g >
<title>[sel_ldr] (535 samples, 36.10%)</title><rect x="104.8" y="789" width="425.9" height="15.0" fill="rgb(243,69,18)" rx="2" ry="2" />
<text  x="107.75" y="799.5" >[sel_ldr]</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (9 samples, 0.61%)</title><rect x="1008.5" y="677" width="7.1" height="15.0" fill="rgb(248,223,24)" rx="2" ry="2" />
<text  x="1011.46" y="687.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.07%)</title><rect x="952.7" y="357" width="0.8" height="15.0" fill="rgb(217,19,42)" rx="2" ry="2" />
<text  x="955.73" y="367.5" ></text>
</g>
<g >
<title>fput (3 samples, 0.20%)</title><rect x="76.1" y="645" width="2.4" height="15.0" fill="rgb(217,114,47)" rx="2" ry="2" />
<text  x="79.09" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::metawalk (1 samples, 0.07%)</title><rect x="174.0" y="661" width="0.8" height="15.0" fill="rgb(212,208,7)" rx="2" ry="2" />
<text  x="177.02" y="671.5" ></text>
</g>
<g >
<title>isolate_lru_pages (20 samples, 1.35%)</title><rect x="850.0" y="661" width="15.9" height="15.0" fill="rgb(241,205,40)" rx="2" ry="2" />
<text  x="853.01" y="671.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (1 samples, 0.07%)</title><rect x="162.9" y="517" width="0.8" height="15.0" fill="rgb(226,72,21)" rx="2" ry="2" />
<text  x="165.87" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="844.4" y="789" width="0.8" height="15.0" fill="rgb(252,45,28)" rx="2" ry="2" />
<text  x="847.44" y="799.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (1 samples, 0.07%)</title><rect x="166.9" y="357" width="0.8" height="15.0" fill="rgb(238,80,30)" rx="2" ry="2" />
<text  x="169.86" y="367.5" ></text>
</g>
<g >
<title>NaClSysMmapDecoder (1 samples, 0.07%)</title><rect x="170.8" y="757" width="0.8" height="15.0" fill="rgb(213,170,23)" rx="2" ry="2" />
<text  x="173.84" y="767.5" ></text>
</g>
<g >
<title>__do_sys_clone (1 samples, 0.07%)</title><rect x="725.0" y="725" width="0.8" height="15.0" fill="rgb(213,56,20)" rx="2" ry="2" />
<text  x="728.01" y="735.5" ></text>
</g>
<g >
<title>__test_set_page_writeback (1 samples, 0.07%)</title><rect x="999.7" y="517" width="0.8" height="15.0" fill="rgb(254,7,29)" rx="2" ry="2" />
<text  x="1002.70" y="527.5" ></text>
</g>
<g >
<title>unfreeze_partials (1 samples, 0.07%)</title><rect x="946.4" y="517" width="0.8" height="15.0" fill="rgb(210,175,42)" rx="2" ry="2" />
<text  x="949.36" y="527.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (1 samples, 0.07%)</title><rect x="726.6" y="693" width="0.8" height="15.0" fill="rgb(244,158,10)" rx="2" ry="2" />
<text  x="729.60" y="703.5" ></text>
</g>
<g >
<title>start_kernel (22 samples, 1.48%)</title><rect x="1172.5" y="741" width="17.5" height="15.0" fill="rgb(250,100,33)" rx="2" ry="2" />
<text  x="1175.48" y="751.5" ></text>
</g>
<g >
<title>ext4_mb_load_buddy_gfp (1 samples, 0.07%)</title><rect x="1001.3" y="485" width="0.8" height="15.0" fill="rgb(219,216,42)" rx="2" ry="2" />
<text  x="1004.30" y="495.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.07%)</title><rect x="796.7" y="613" width="0.8" height="15.0" fill="rgb(218,174,18)" rx="2" ry="2" />
<text  x="799.67" y="623.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.07%)</title><rect x="993.3" y="629" width="0.8" height="15.0" fill="rgb(206,87,31)" rx="2" ry="2" />
<text  x="996.33" y="639.5" ></text>
</g>
<g >
<title>rcu_core_si (3 samples, 0.20%)</title><rect x="992.5" y="709" width="2.4" height="15.0" fill="rgb(229,16,9)" rx="2" ry="2" />
<text  x="995.54" y="719.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (3 samples, 0.20%)</title><rect x="992.5" y="757" width="2.4" height="15.0" fill="rgb(205,173,11)" rx="2" ry="2" />
<text  x="995.54" y="767.5" ></text>
</g>
<g >
<title>dec_zone_page_state (1 samples, 0.07%)</title><rect x="998.9" y="533" width="0.8" height="15.0" fill="rgb(222,83,33)" rx="2" ry="2" />
<text  x="1001.91" y="543.5" ></text>
</g>
<g >
<title>xas_clear_mark (1 samples, 0.07%)</title><rect x="989.4" y="533" width="0.7" height="15.0" fill="rgb(215,220,32)" rx="2" ry="2" />
<text  x="992.35" y="543.5" ></text>
</g>
<g >
<title>NaClHostDescOpen (2 samples, 0.13%)</title><rect x="173.2" y="725" width="1.6" height="15.0" fill="rgb(239,55,31)" rx="2" ry="2" />
<text  x="176.23" y="735.5" ></text>
</g>
<g >
<title>rcu_core (3 samples, 0.20%)</title><rect x="992.5" y="693" width="2.4" height="15.0" fill="rgb(252,185,42)" rx="2" ry="2" />
<text  x="995.54" y="703.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.07%)</title><rect x="170.8" y="517" width="0.8" height="15.0" fill="rgb(206,56,23)" rx="2" ry="2" />
<text  x="173.84" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.13%)</title><rect x="193.1" y="549" width="1.6" height="15.0" fill="rgb(249,171,10)" rx="2" ry="2" />
<text  x="196.13" y="559.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.07%)</title><rect x="164.5" y="517" width="0.8" height="15.0" fill="rgb(235,95,42)" rx="2" ry="2" />
<text  x="167.47" y="527.5" ></text>
</g>
<g >
<title>event_function_call (65 samples, 4.39%)</title><rect x="21.1" y="565" width="51.8" height="15.0" fill="rgb(218,53,43)" rx="2" ry="2" />
<text  x="24.15" y="575.5" >event..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="727.4" y="613" width="0.8" height="15.0" fill="rgb(211,142,8)" rx="2" ry="2" />
<text  x="730.40" y="623.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="168.4" y="325" width="0.8" height="15.0" fill="rgb(224,13,47)" rx="2" ry="2" />
<text  x="171.45" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.07%)</title><rect x="170.0" y="389" width="0.8" height="15.0" fill="rgb(221,104,37)" rx="2" ry="2" />
<text  x="173.04" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (114 samples, 7.69%)</title><rect x="600.8" y="709" width="90.8" height="15.0" fill="rgb(229,116,51)" rx="2" ry="2" />
<text  x="603.80" y="719.5" >__handle_m..</text>
</g>
<g >
<title>__do_munmap (1 samples, 0.07%)</title><rect x="172.4" y="501" width="0.8" height="15.0" fill="rgb(241,69,45)" rx="2" ry="2" />
<text  x="175.43" y="511.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.07%)</title><rect x="991.7" y="517" width="0.8" height="15.0" fill="rgb(208,82,43)" rx="2" ry="2" />
<text  x="994.74" y="527.5" ></text>
</g>
<g >
<title>list_lru_add (1 samples, 0.07%)</title><rect x="977.4" y="501" width="0.8" height="15.0" fill="rgb(206,110,11)" rx="2" ry="2" />
<text  x="980.41" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.13%)</title><rect x="80.1" y="357" width="1.6" height="15.0" fill="rgb(222,132,34)" rx="2" ry="2" />
<text  x="83.07" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="174.0" y="549" width="0.8" height="15.0" fill="rgb(234,2,10)" rx="2" ry="2" />
<text  x="177.02" y="559.5" ></text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.07%)</title><rect x="170.0" y="645" width="0.8" height="15.0" fill="rgb(223,219,27)" rx="2" ry="2" />
<text  x="173.04" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.07%)</title><rect x="170.8" y="533" width="0.8" height="15.0" fill="rgb(207,177,48)" rx="2" ry="2" />
<text  x="173.84" y="543.5" ></text>
</g>
<g >
<title>asm_common_interrupt (4 samples, 0.27%)</title><rect x="1005.3" y="677" width="3.2" height="15.0" fill="rgb(230,73,4)" rx="2" ry="2" />
<text  x="1008.28" y="687.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.07%)</title><rect x="170.0" y="405" width="0.8" height="15.0" fill="rgb(245,61,48)" rx="2" ry="2" />
<text  x="173.04" y="415.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.20%)</title><rect x="887.4" y="629" width="2.4" height="15.0" fill="rgb(228,26,0)" rx="2" ry="2" />
<text  x="890.44" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (71 samples, 4.79%)</title><rect x="338.8" y="549" width="56.6" height="15.0" fill="rgb(246,71,54)" rx="2" ry="2" />
<text  x="341.84" y="559.5" >__mem..</text>
</g>
<g >
<title>kswapd (185 samples, 12.48%)</title><rect x="845.2" y="757" width="147.3" height="15.0" fill="rgb(224,91,26)" rx="2" ry="2" />
<text  x="848.24" y="767.5" >kswapd</text>
</g>
<g >
<title>put_ctx (2 samples, 0.13%)</title><rect x="72.9" y="613" width="1.6" height="15.0" fill="rgb(218,9,52)" rx="2" ry="2" />
<text  x="75.90" y="623.5" ></text>
</g>
<g >
<title>NaClSysMmap (1 samples, 0.07%)</title><rect x="170.8" y="741" width="0.8" height="15.0" fill="rgb(225,104,27)" rx="2" ry="2" />
<text  x="173.84" y="751.5" ></text>
</g>
<g >
<title>__invalidate_mapping_pages (1 samples, 0.07%)</title><rect x="991.7" y="549" width="0.8" height="15.0" fill="rgb(210,53,42)" rx="2" ry="2" />
<text  x="994.74" y="559.5" ></text>
</g>
<g >
<title>ext4_lookup (1 samples, 0.07%)</title><rect x="167.7" y="389" width="0.7" height="15.0" fill="rgb(218,51,37)" rx="2" ry="2" />
<text  x="170.65" y="399.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.07%)</title><rect x="727.4" y="261" width="0.8" height="15.0" fill="rgb(241,136,16)" rx="2" ry="2" />
<text  x="730.40" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.13%)</title><rect x="947.2" y="533" width="1.5" height="15.0" fill="rgb(229,90,40)" rx="2" ry="2" />
<text  x="950.15" y="543.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.07%)</title><rect x="978.2" y="469" width="0.8" height="15.0" fill="rgb(243,172,9)" rx="2" ry="2" />
<text  x="981.21" y="479.5" ></text>
</g>
<g >
<title>pagevec_lookup_entries (1 samples, 0.07%)</title><rect x="988.6" y="549" width="0.8" height="15.0" fill="rgb(242,222,25)" rx="2" ry="2" />
<text  x="991.56" y="559.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.07%)</title><rect x="268.8" y="629" width="0.8" height="15.0" fill="rgb(223,85,39)" rx="2" ry="2" />
<text  x="271.77" y="639.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.07%)</title><rect x="991.7" y="485" width="0.8" height="15.0" fill="rgb(208,61,3)" rx="2" ry="2" />
<text  x="994.74" y="495.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.13%)</title><rect x="674.8" y="613" width="1.6" height="15.0" fill="rgb(220,226,11)" rx="2" ry="2" />
<text  x="677.84" y="623.5" ></text>
</g>
<g >
<title>NaClSysMmapIntern (1 samples, 0.07%)</title><rect x="170.8" y="725" width="0.8" height="15.0" fill="rgb(220,173,25)" rx="2" ry="2" />
<text  x="173.84" y="735.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (22 samples, 1.48%)</title><rect x="1172.5" y="757" width="17.5" height="15.0" fill="rgb(248,221,26)" rx="2" ry="2" />
<text  x="1175.48" y="767.5" ></text>
</g>
<g >
<title>xas_find (1 samples, 0.07%)</title><rect x="988.6" y="517" width="0.8" height="15.0" fill="rgb(230,1,12)" rx="2" ry="2" />
<text  x="991.56" y="527.5" ></text>
</g>
<g >
<title>std::path::Path::exists (1 samples, 0.07%)</title><rect x="173.2" y="629" width="0.8" height="15.0" fill="rgb(239,207,46)" rx="2" ry="2" />
<text  x="176.23" y="639.5" ></text>
</g>
<g >
<title>NaClSignalStackAllocate (1 samples, 0.07%)</title><rect x="164.5" y="661" width="0.8" height="15.0" fill="rgb(242,197,9)" rx="2" ry="2" />
<text  x="167.47" y="671.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.07%)</title><rect x="796.7" y="437" width="0.8" height="15.0" fill="rgb(214,50,40)" rx="2" ry="2" />
<text  x="799.67" y="447.5" ></text>
</g>
<g >
<title>page_referenced (1 samples, 0.07%)</title><rect x="849.2" y="661" width="0.8" height="15.0" fill="rgb(212,201,30)" rx="2" ry="2" />
<text  x="852.22" y="671.5" ></text>
</g>
<g >
<title>lindrustfinalize (2 samples, 0.13%)</title><rect x="726.6" y="725" width="1.6" height="15.0" fill="rgb(240,168,25)" rx="2" ry="2" />
<text  x="729.60" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.07%)</title><rect x="163.7" y="581" width="0.8" height="15.0" fill="rgb(251,173,1)" rx="2" ry="2" />
<text  x="166.67" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1 samples, 0.07%)</title><rect x="727.4" y="421" width="0.8" height="15.0" fill="rgb(242,127,13)" rx="2" ry="2" />
<text  x="730.40" y="431.5" ></text>
</g>
<g >
<title>page_counter_uncharge (1 samples, 0.07%)</title><rect x="949.5" y="501" width="0.8" height="15.0" fill="rgb(207,160,54)" rx="2" ry="2" />
<text  x="952.54" y="511.5" ></text>
</g>
<g >
<title>error_entry (3 samples, 0.20%)</title><rect x="691.6" y="773" width="2.4" height="15.0" fill="rgb(219,205,49)" rx="2" ry="2" />
<text  x="694.57" y="783.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="727.4" y="197" width="0.8" height="15.0" fill="rgb(234,133,3)" rx="2" ry="2" />
<text  x="730.40" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="725.8" y="613" width="0.8" height="15.0" fill="rgb(244,51,16)" rx="2" ry="2" />
<text  x="728.80" y="623.5" ></text>
</g>
<g >
<title>rcu_do_batch (8 samples, 0.54%)</title><rect x="1008.5" y="549" width="6.3" height="15.0" fill="rgb(243,16,54)" rx="2" ry="2" />
<text  x="1011.46" y="559.5" ></text>
</g>
<g >
<title>[[heap]] (1 samples, 0.07%)</title><rect x="10.0" y="789" width="0.8" height="15.0" fill="rgb(220,32,13)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.07%)</title><rect x="725.8" y="373" width="0.8" height="15.0" fill="rgb(252,223,10)" rx="2" ry="2" />
<text  x="728.80" y="383.5" ></text>
</g>
<g >
<title>rcu_core (8 samples, 0.54%)</title><rect x="1008.5" y="565" width="6.3" height="15.0" fill="rgb(223,111,10)" rx="2" ry="2" />
<text  x="1011.46" y="575.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="170.0" y="325" width="0.8" height="15.0" fill="rgb(206,54,34)" rx="2" ry="2" />
<text  x="173.04" y="335.5" ></text>
</g>
<g >
<title>wb_check_start_all (9 samples, 0.61%)</title><rect x="998.1" y="693" width="7.2" height="15.0" fill="rgb(224,43,24)" rx="2" ry="2" />
<text  x="1001.11" y="703.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="168.4" y="421" width="0.8" height="15.0" fill="rgb(227,17,53)" rx="2" ry="2" />
<text  x="171.45" y="431.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.07%)</title><rect x="164.5" y="581" width="0.8" height="15.0" fill="rgb(235,62,51)" rx="2" ry="2" />
<text  x="167.47" y="591.5" ></text>
</g>
<g >
<title>rcu_do_batch (4 samples, 0.27%)</title><rect x="931.2" y="453" width="3.2" height="15.0" fill="rgb(243,143,23)" rx="2" ry="2" />
<text  x="934.23" y="463.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.07%)</title><rect x="165.3" y="325" width="0.8" height="15.0" fill="rgb(237,122,9)" rx="2" ry="2" />
<text  x="168.26" y="335.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.07%)</title><rect x="725.8" y="549" width="0.8" height="15.0" fill="rgb(210,70,25)" rx="2" ry="2" />
<text  x="728.80" y="559.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.07%)</title><rect x="170.0" y="565" width="0.8" height="15.0" fill="rgb(229,115,21)" rx="2" ry="2" />
<text  x="173.04" y="575.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (2 samples, 0.13%)</title><rect x="701.1" y="597" width="1.6" height="15.0" fill="rgb(206,163,44)" rx="2" ry="2" />
<text  x="704.12" y="607.5" ></text>
</g>
<g >
<title>poll_idle (3 samples, 0.20%)</title><rect x="1177.3" y="613" width="2.3" height="15.0" fill="rgb(253,128,36)" rx="2" ry="2" />
<text  x="1180.26" y="623.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.07%)</title><rect x="796.7" y="597" width="0.8" height="15.0" fill="rgb(236,187,6)" rx="2" ry="2" />
<text  x="799.67" y="607.5" ></text>
</g>
<g >
<title>cmd_record (87 samples, 5.87%)</title><rect x="14.8" y="773" width="69.2" height="15.0" fill="rgb(254,175,1)" rx="2" ry="2" />
<text  x="17.78" y="783.5" >cmd_rec..</text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.07%)</title><rect x="725.8" y="693" width="0.8" height="15.0" fill="rgb(235,127,43)" rx="2" ry="2" />
<text  x="728.80" y="703.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.07%)</title><rect x="796.7" y="565" width="0.8" height="15.0" fill="rgb(246,31,0)" rx="2" ry="2" />
<text  x="799.67" y="575.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (2 samples, 0.13%)</title><rect x="1182.0" y="645" width="1.6" height="15.0" fill="rgb(224,223,6)" rx="2" ry="2" />
<text  x="1185.04" y="655.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.07%)</title><rect x="687.6" y="597" width="0.8" height="15.0" fill="rgb(216,72,2)" rx="2" ry="2" />
<text  x="690.58" y="607.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (42 samples, 2.83%)</title><rect x="920.1" y="613" width="33.4" height="15.0" fill="rgb(219,6,9)" rx="2" ry="2" />
<text  x="923.08" y="623.5" >jb..</text>
</g>
<g >
<title>NaClTextDyncodeCreate (68 samples, 4.59%)</title><rect x="105.5" y="725" width="54.2" height="15.0" fill="rgb(235,37,12)" rx="2" ry="2" />
<text  x="108.55" y="735.5" >NaClT..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4 samples, 0.27%)</title><rect x="931.2" y="581" width="3.2" height="15.0" fill="rgb(250,27,18)" rx="2" ry="2" />
<text  x="934.23" y="591.5" ></text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.07%)</title><rect x="726.6" y="581" width="0.8" height="15.0" fill="rgb(209,128,26)" rx="2" ry="2" />
<text  x="729.60" y="591.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.07%)</title><rect x="725.8" y="533" width="0.8" height="15.0" fill="rgb(225,93,31)" rx="2" ry="2" />
<text  x="728.80" y="543.5" ></text>
</g>
<g >
<title>ext4_lookup.part.0 (1 samples, 0.07%)</title><rect x="167.7" y="373" width="0.7" height="15.0" fill="rgb(228,9,29)" rx="2" ry="2" />
<text  x="170.65" y="383.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (73 samples, 4.93%)</title><rect x="105.5" y="741" width="58.2" height="15.0" fill="rgb(221,57,25)" rx="2" ry="2" />
<text  x="108.55" y="751.5" >NaClSy..</text>
</g>
<g >
<title>cpuidle_idle_call (12 samples, 0.81%)</title><rect x="1172.5" y="661" width="9.5" height="15.0" fill="rgb(245,62,45)" rx="2" ry="2" />
<text  x="1175.48" y="671.5" ></text>
</g>
<g >
<title>balance_pgdat (185 samples, 12.48%)</title><rect x="845.2" y="741" width="147.3" height="15.0" fill="rgb(211,109,54)" rx="2" ry="2" />
<text  x="848.24" y="751.5" >balance_pgdat</text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.13%)</title><rect x="917.7" y="581" width="1.6" height="15.0" fill="rgb(241,203,49)" rx="2" ry="2" />
<text  x="920.69" y="591.5" ></text>
</g>
<g >
<title>invalidate_mapping_pages (1 samples, 0.07%)</title><rect x="991.7" y="565" width="0.8" height="15.0" fill="rgb(213,31,32)" rx="2" ry="2" />
<text  x="994.74" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (119 samples, 8.03%)</title><rect x="174.8" y="661" width="94.8" height="15.0" fill="rgb(250,45,38)" rx="2" ry="2" />
<text  x="177.82" y="671.5" >rustposix::..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="168.4" y="565" width="0.8" height="15.0" fill="rgb(222,229,16)" rx="2" ry="2" />
<text  x="171.45" y="575.5" ></text>
</g>
<g >
<title>shrink_active_list (5 samples, 0.34%)</title><rect x="846.0" y="677" width="4.0" height="15.0" fill="rgb(232,8,30)" rx="2" ry="2" />
<text  x="849.03" y="687.5" ></text>
</g>
<g >
<title>shrink_lruvec (137 samples, 9.24%)</title><rect x="845.2" y="693" width="109.1" height="15.0" fill="rgb(208,202,12)" rx="2" ry="2" />
<text  x="848.24" y="703.5" >shrink_lruvec</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="170.0" y="437" width="0.8" height="15.0" fill="rgb(216,200,2)" rx="2" ry="2" />
<text  x="173.04" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (51 samples, 3.44%)</title><rect x="756.9" y="789" width="40.6" height="15.0" fill="rgb(240,161,8)" rx="2" ry="2" />
<text  x="759.86" y="799.5" >ent..</text>
</g>
<g >
<title>ksys_write (3 samples, 0.20%)</title><rect x="165.3" y="517" width="2.4" height="15.0" fill="rgb(230,111,44)" rx="2" ry="2" />
<text  x="168.26" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (12 samples, 0.81%)</title><rect x="318.9" y="565" width="9.6" height="15.0" fill="rgb(211,61,33)" rx="2" ry="2" />
<text  x="321.93" y="575.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="163.7" y="357" width="0.8" height="15.0" fill="rgb(241,65,16)" rx="2" ry="2" />
<text  x="166.67" y="367.5" ></text>
</g>
<g >
<title>lind_close (1 samples, 0.07%)</title><rect x="170.0" y="629" width="0.8" height="15.0" fill="rgb(249,68,47)" rx="2" ry="2" />
<text  x="173.04" y="639.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.20%)</title><rect x="666.9" y="597" width="2.4" height="15.0" fill="rgb(229,60,22)" rx="2" ry="2" />
<text  x="669.88" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (1 samples, 0.07%)</title><rect x="167.7" y="613" width="0.7" height="15.0" fill="rgb(216,7,13)" rx="2" ry="2" />
<text  x="170.65" y="623.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2 samples, 0.13%)</title><rect x="107.9" y="629" width="1.6" height="15.0" fill="rgb(236,111,46)" rx="2" ry="2" />
<text  x="110.94" y="639.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.07%)</title><rect x="952.7" y="501" width="0.8" height="15.0" fill="rgb(239,131,20)" rx="2" ry="2" />
<text  x="955.73" y="511.5" ></text>
</g>
<g >
<title>mem_cgroup_from_obj (1 samples, 0.07%)</title><rect x="954.3" y="565" width="0.8" height="15.0" fill="rgb(211,172,12)" rx="2" ry="2" />
<text  x="957.32" y="575.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (5 samples, 0.34%)</title><rect x="699.5" y="773" width="4.0" height="15.0" fill="rgb(232,96,11)" rx="2" ry="2" />
<text  x="702.53" y="783.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.07%)</title><rect x="916.1" y="469" width="0.8" height="15.0" fill="rgb(214,153,18)" rx="2" ry="2" />
<text  x="919.10" y="479.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.07%)</title><rect x="79.3" y="357" width="0.8" height="15.0" fill="rgb(233,79,43)" rx="2" ry="2" />
<text  x="82.27" y="367.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.07%)</title><rect x="164.5" y="485" width="0.8" height="15.0" fill="rgb(232,113,16)" rx="2" ry="2" />
<text  x="167.47" y="495.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9 samples, 0.61%)</title><rect x="1008.5" y="645" width="7.1" height="15.0" fill="rgb(248,213,16)" rx="2" ry="2" />
<text  x="1011.46" y="655.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.07%)</title><rect x="159.7" y="565" width="0.8" height="15.0" fill="rgb(251,164,44)" rx="2" ry="2" />
<text  x="162.69" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (1 samples, 0.07%)</title><rect x="167.7" y="549" width="0.7" height="15.0" fill="rgb(225,6,54)" rx="2" ry="2" />
<text  x="170.65" y="559.5" ></text>
</g>
<g >
<title>workingset_age_nonresident (1 samples, 0.07%)</title><rect x="773.6" y="549" width="0.8" height="15.0" fill="rgb(205,7,1)" rx="2" ry="2" />
<text  x="776.58" y="559.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (3 samples, 0.20%)</title><rect x="518.8" y="645" width="2.4" height="15.0" fill="rgb(247,134,34)" rx="2" ry="2" />
<text  x="521.79" y="655.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.07%)</title><rect x="1010.1" y="485" width="0.8" height="15.0" fill="rgb(239,174,37)" rx="2" ry="2" />
<text  x="1013.05" y="495.5" ></text>
</g>
<g >
<title>get_page_from_freelist (6 samples, 0.40%)</title><rect x="615.1" y="613" width="4.8" height="15.0" fill="rgb(211,99,11)" rx="2" ry="2" />
<text  x="618.13" y="623.5" ></text>
</g>
<g >
<title>__cmd_record (87 samples, 5.87%)</title><rect x="14.8" y="757" width="69.2" height="15.0" fill="rgb(217,159,41)" rx="2" ry="2" />
<text  x="17.78" y="767.5" >__cmd_r..</text>
</g>
<g >
<title>intercept_process_vm_writev (4 samples, 0.27%)</title><rect x="699.5" y="693" width="3.2" height="15.0" fill="rgb(223,194,33)" rx="2" ry="2" />
<text  x="702.53" y="703.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (4 samples, 0.27%)</title><rect x="998.1" y="565" width="3.2" height="15.0" fill="rgb(252,48,35)" rx="2" ry="2" />
<text  x="1001.11" y="575.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::libc_mmap (1 samples, 0.07%)</title><rect x="172.4" y="645" width="0.8" height="15.0" fill="rgb(213,85,20)" rx="2" ry="2" />
<text  x="175.43" y="655.5" ></text>
</g>
<g >
<title>unmap_vmas (49 samples, 3.31%)</title><rect x="757.7" y="661" width="39.0" height="15.0" fill="rgb(209,68,13)" rx="2" ry="2" />
<text  x="760.65" y="671.5" >unm..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="952.7" y="549" width="0.8" height="15.0" fill="rgb(228,72,33)" rx="2" ry="2" />
<text  x="955.73" y="559.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 4.32%)</title><rect x="21.9" y="485" width="51.0" height="15.0" fill="rgb(229,132,48)" rx="2" ry="2" />
<text  x="24.94" y="495.5" >__per..</text>
</g>
<g >
<title>shrink_slab (48 samples, 3.24%)</title><rect x="954.3" y="693" width="38.2" height="15.0" fill="rgb(220,62,42)" rx="2" ry="2" />
<text  x="957.32" y="703.5" >shr..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.07%)</title><rect x="170.0" y="421" width="0.8" height="15.0" fill="rgb(227,59,20)" rx="2" ry="2" />
<text  x="173.04" y="431.5" ></text>
</g>
<g >
<title>do_statx (1 samples, 0.07%)</title><rect x="173.2" y="485" width="0.8" height="15.0" fill="rgb(222,219,29)" rx="2" ry="2" />
<text  x="176.23" y="495.5" ></text>
</g>
<g >
<title>unmap_single_vma (49 samples, 3.31%)</title><rect x="757.7" y="645" width="39.0" height="15.0" fill="rgb(214,72,46)" rx="2" ry="2" />
<text  x="760.65" y="655.5" >unm..</text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.07%)</title><rect x="165.3" y="357" width="0.8" height="15.0" fill="rgb(228,48,36)" rx="2" ry="2" />
<text  x="168.26" y="367.5" ></text>
</g>
<g >
<title>get_page_from_freelist (47 samples, 3.17%)</title><rect x="619.9" y="629" width="37.4" height="15.0" fill="rgb(223,201,53)" rx="2" ry="2" />
<text  x="622.91" y="639.5" >get..</text>
</g>
<g >
<title>__gconv_load_conf (1 samples, 0.07%)</title><rect x="12.4" y="677" width="0.8" height="15.0" fill="rgb(252,152,38)" rx="2" ry="2" />
<text  x="15.39" y="687.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.07%)</title><rect x="170.8" y="357" width="0.8" height="15.0" fill="rgb(208,36,2)" rx="2" ry="2" />
<text  x="173.84" y="367.5" ></text>
</g>
<g >
<title>refill_obj_stock (1 samples, 0.07%)</title><rect x="916.1" y="437" width="0.8" height="15.0" fill="rgb(251,96,37)" rx="2" ry="2" />
<text  x="919.10" y="447.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="168.4" y="165" width="0.8" height="15.0" fill="rgb(206,15,31)" rx="2" ry="2" />
<text  x="171.45" y="175.5" ></text>
</g>
<g >
<title>start_secondary (210 samples, 14.17%)</title><rect x="1005.3" y="773" width="167.2" height="15.0" fill="rgb(226,171,9)" rx="2" ry="2" />
<text  x="1008.28" y="783.5" >start_secondary</text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.07%)</title><rect x="170.0" y="133" width="0.8" height="15.0" fill="rgb(214,140,15)" rx="2" ry="2" />
<text  x="173.04" y="143.5" ></text>
</g>
<g >
<title>__d_move (1 samples, 0.07%)</title><rect x="726.6" y="453" width="0.8" height="15.0" fill="rgb(231,189,7)" rx="2" ry="2" />
<text  x="729.60" y="463.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 4.32%)</title><rect x="21.9" y="421" width="51.0" height="15.0" fill="rgb(249,173,54)" rx="2" ry="2" />
<text  x="24.94" y="431.5" >nativ..</text>
</g>
<g >
<title>uncharge_batch (2 samples, 0.13%)</title><rect x="912.1" y="629" width="1.6" height="15.0" fill="rgb(234,205,46)" rx="2" ry="2" />
<text  x="915.12" y="639.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (3 samples, 0.20%)</title><rect x="105.5" y="709" width="2.4" height="15.0" fill="rgb(231,175,13)" rx="2" ry="2" />
<text  x="108.55" y="719.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.13%)</title><rect x="917.7" y="597" width="1.6" height="15.0" fill="rgb(243,179,48)" rx="2" ry="2" />
<text  x="920.69" y="607.5" ></text>
</g>
<g >
<title>__gconv_read_conf (1 samples, 0.07%)</title><rect x="12.4" y="661" width="0.8" height="15.0" fill="rgb(228,50,5)" rx="2" ry="2" />
<text  x="15.39" y="671.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (5 samples, 0.34%)</title><rect x="911.3" y="645" width="4.0" height="15.0" fill="rgb(226,88,43)" rx="2" ry="2" />
<text  x="914.32" y="655.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.07%)</title><rect x="166.1" y="357" width="0.8" height="15.0" fill="rgb(244,121,15)" rx="2" ry="2" />
<text  x="169.06" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.20%)</title><rect x="992.5" y="725" width="2.4" height="15.0" fill="rgb(247,173,54)" rx="2" ry="2" />
<text  x="995.54" y="735.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (8 samples, 0.54%)</title><rect x="312.6" y="581" width="6.3" height="15.0" fill="rgb(208,71,44)" rx="2" ry="2" />
<text  x="315.56" y="591.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (14 samples, 0.94%)</title><rect x="662.9" y="613" width="11.1" height="15.0" fill="rgb(227,187,29)" rx="2" ry="2" />
<text  x="665.90" y="623.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.07%)</title><rect x="163.7" y="693" width="0.8" height="15.0" fill="rgb(219,167,26)" rx="2" ry="2" />
<text  x="166.67" y="703.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.07%)</title><rect x="702.7" y="661" width="0.8" height="15.0" fill="rgb(237,185,20)" rx="2" ry="2" />
<text  x="705.71" y="671.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.07%)</title><rect x="162.1" y="597" width="0.8" height="15.0" fill="rgb(216,9,22)" rx="2" ry="2" />
<text  x="165.08" y="607.5" ></text>
</g>
<g >
<title>shadow_lru_isolate (1 samples, 0.07%)</title><rect x="954.3" y="597" width="0.8" height="15.0" fill="rgb(245,38,25)" rx="2" ry="2" />
<text  x="957.32" y="607.5" ></text>
</g>
<g >
<title>iput (5 samples, 0.34%)</title><rect x="974.2" y="565" width="4.0" height="15.0" fill="rgb(242,76,33)" rx="2" ry="2" />
<text  x="977.22" y="575.5" ></text>
</g>
<g >
<title>free_buffer_head (24 samples, 1.62%)</title><rect x="934.4" y="581" width="19.1" height="15.0" fill="rgb(230,5,52)" rx="2" ry="2" />
<text  x="937.41" y="591.5" ></text>
</g>
<g >
<title>task_work_add (1 samples, 0.07%)</title><rect x="78.5" y="581" width="0.8" height="15.0" fill="rgb(236,214,49)" rx="2" ry="2" />
<text  x="81.48" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.07%)</title><rect x="159.7" y="661" width="0.8" height="15.0" fill="rgb(248,30,53)" rx="2" ry="2" />
<text  x="162.69" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="727.4" y="245" width="0.8" height="15.0" fill="rgb(252,12,43)" rx="2" ry="2" />
<text  x="730.40" y="255.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1 samples, 0.07%)</title><rect x="724.2" y="773" width="0.8" height="15.0" fill="rgb(210,202,6)" rx="2" ry="2" />
<text  x="727.21" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (3 samples, 0.20%)</title><rect x="518.8" y="613" width="2.4" height="15.0" fill="rgb(242,119,32)" rx="2" ry="2" />
<text  x="521.79" y="623.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.07%)</title><rect x="163.7" y="645" width="0.8" height="15.0" fill="rgb(247,135,36)" rx="2" ry="2" />
<text  x="166.67" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="170.8" y="565" width="0.8" height="15.0" fill="rgb(228,45,20)" rx="2" ry="2" />
<text  x="173.84" y="575.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.07%)</title><rect x="1173.3" y="517" width="0.8" height="15.0" fill="rgb(243,158,49)" rx="2" ry="2" />
<text  x="1176.28" y="527.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.07%)</title><rect x="952.7" y="421" width="0.8" height="15.0" fill="rgb(211,224,29)" rx="2" ry="2" />
<text  x="955.73" y="431.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (120 samples, 8.10%)</title><rect x="174.8" y="757" width="95.6" height="15.0" fill="rgb(227,110,13)" rx="2" ry="2" />
<text  x="177.82" y="767.5" >NaClSysRead..</text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (1 samples, 0.07%)</title><rect x="518.0" y="565" width="0.8" height="15.0" fill="rgb(231,160,43)" rx="2" ry="2" />
<text  x="520.99" y="575.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (35 samples, 2.36%)</title><rect x="729.0" y="789" width="27.9" height="15.0" fill="rgb(210,22,53)" rx="2" ry="2" />
<text  x="731.99" y="799.5" >a..</text>
</g>
<g >
<title>__ioctl (80 samples, 5.40%)</title><rect x="14.8" y="693" width="63.7" height="15.0" fill="rgb(250,6,0)" rx="2" ry="2" />
<text  x="17.78" y="703.5" >__ioctl</text>
</g>
<g >
<title>statx (1 samples, 0.07%)</title><rect x="173.2" y="549" width="0.8" height="15.0" fill="rgb(223,6,28)" rx="2" ry="2" />
<text  x="176.23" y="559.5" ></text>
</g>
<g >
<title>ext4_writepages (9 samples, 0.61%)</title><rect x="998.1" y="597" width="7.2" height="15.0" fill="rgb(217,183,42)" rx="2" ry="2" />
<text  x="1001.11" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (1 samples, 0.07%)</title><rect x="174.8" y="645" width="0.8" height="15.0" fill="rgb(241,58,1)" rx="2" ry="2" />
<text  x="177.82" y="655.5" ></text>
</g>
<g >
<title>drain_obj_stock (1 samples, 0.07%)</title><rect x="949.5" y="517" width="0.8" height="15.0" fill="rgb(235,3,44)" rx="2" ry="2" />
<text  x="952.54" y="527.5" ></text>
</g>
<g >
<title>evict (7 samples, 0.47%)</title><rect x="984.6" y="613" width="5.5" height="15.0" fill="rgb(206,208,43)" rx="2" ry="2" />
<text  x="987.57" y="623.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 4.32%)</title><rect x="21.9" y="469" width="51.0" height="15.0" fill="rgb(227,38,41)" rx="2" ry="2" />
<text  x="24.94" y="479.5" >ctx_r..</text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (1 samples, 0.07%)</title><rect x="727.4" y="293" width="0.8" height="15.0" fill="rgb(227,214,36)" rx="2" ry="2" />
<text  x="730.40" y="303.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.07%)</title><rect x="162.1" y="613" width="0.8" height="15.0" fill="rgb(254,172,36)" rx="2" ry="2" />
<text  x="165.08" y="623.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.07%)</title><rect x="702.7" y="677" width="0.8" height="15.0" fill="rgb(249,22,33)" rx="2" ry="2" />
<text  x="705.71" y="687.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.34%)</title><rect x="615.9" y="597" width="4.0" height="15.0" fill="rgb(216,147,26)" rx="2" ry="2" />
<text  x="618.92" y="607.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.07%)</title><rect x="796.7" y="661" width="0.8" height="15.0" fill="rgb(205,199,36)" rx="2" ry="2" />
<text  x="799.67" y="671.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.07%)</title><rect x="164.5" y="533" width="0.8" height="15.0" fill="rgb(234,55,15)" rx="2" ry="2" />
<text  x="167.47" y="543.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="170.0" y="453" width="0.8" height="15.0" fill="rgb(232,143,17)" rx="2" ry="2" />
<text  x="173.04" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="164.5" y="629" width="0.8" height="15.0" fill="rgb(230,94,32)" rx="2" ry="2" />
<text  x="167.47" y="639.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="174.0" y="485" width="0.8" height="15.0" fill="rgb(242,33,33)" rx="2" ry="2" />
<text  x="177.02" y="495.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.07%)</title><rect x="163.7" y="661" width="0.8" height="15.0" fill="rgb(250,176,23)" rx="2" ry="2" />
<text  x="166.67" y="671.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.07%)</title><rect x="623.1" y="613" width="0.8" height="15.0" fill="rgb(240,207,4)" rx="2" ry="2" />
<text  x="626.09" y="623.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.07%)</title><rect x="931.2" y="405" width="0.8" height="15.0" fill="rgb(234,128,50)" rx="2" ry="2" />
<text  x="934.23" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_write (3 samples, 0.20%)</title><rect x="165.3" y="533" width="2.4" height="15.0" fill="rgb(247,70,30)" rx="2" ry="2" />
<text  x="168.26" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.07%)</title><rect x="945.6" y="453" width="0.8" height="15.0" fill="rgb(228,90,17)" rx="2" ry="2" />
<text  x="948.56" y="463.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.07%)</title><rect x="172.4" y="469" width="0.8" height="15.0" fill="rgb(210,137,46)" rx="2" ry="2" />
<text  x="175.43" y="479.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="170.0" y="357" width="0.8" height="15.0" fill="rgb(248,227,9)" rx="2" ry="2" />
<text  x="173.04" y="367.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 5.40%)</title><rect x="14.8" y="725" width="63.7" height="15.0" fill="rgb(219,139,51)" rx="2" ry="2" />
<text  x="17.78" y="735.5" >perf_e..</text>
</g>
<g >
<title>list_lru_walk_one (12 samples, 0.81%)</title><rect x="957.5" y="613" width="9.6" height="15.0" fill="rgb(254,78,6)" rx="2" ry="2" />
<text  x="960.50" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="164.5" y="613" width="0.8" height="15.0" fill="rgb(207,34,53)" rx="2" ry="2" />
<text  x="167.47" y="623.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.07%)</title><rect x="945.6" y="405" width="0.8" height="15.0" fill="rgb(208,196,51)" rx="2" ry="2" />
<text  x="948.56" y="415.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.07%)</title><rect x="945.6" y="357" width="0.8" height="15.0" fill="rgb(208,74,28)" rx="2" ry="2" />
<text  x="948.56" y="367.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (2 samples, 0.13%)</title><rect x="169.2" y="757" width="1.6" height="15.0" fill="rgb(207,72,30)" rx="2" ry="2" />
<text  x="172.24" y="767.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.07%)</title><rect x="172.4" y="485" width="0.8" height="15.0" fill="rgb(235,74,9)" rx="2" ry="2" />
<text  x="175.43" y="495.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.07%)</title><rect x="978.2" y="517" width="0.8" height="15.0" fill="rgb(240,86,7)" rx="2" ry="2" />
<text  x="981.21" y="527.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (14 samples, 0.94%)</title><rect x="923.3" y="597" width="11.1" height="15.0" fill="rgb(230,225,33)" rx="2" ry="2" />
<text  x="926.27" y="607.5" ></text>
</g>
<g >
<title>generic_exec_single (65 samples, 4.39%)</title><rect x="21.1" y="533" width="51.8" height="15.0" fill="rgb(242,87,16)" rx="2" ry="2" />
<text  x="24.15" y="543.5" >gener..</text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.20%)</title><rect x="606.4" y="677" width="2.4" height="15.0" fill="rgb(208,215,19)" rx="2" ry="2" />
<text  x="609.37" y="687.5" ></text>
</g>
<g >
<title>new_sync_write (3 samples, 0.20%)</title><rect x="165.3" y="485" width="2.4" height="15.0" fill="rgb(228,100,51)" rx="2" ry="2" />
<text  x="168.26" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.07%)</title><rect x="702.7" y="693" width="0.8" height="15.0" fill="rgb(235,42,9)" rx="2" ry="2" />
<text  x="705.71" y="703.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (2 samples, 0.13%)</title><rect x="169.2" y="709" width="1.6" height="15.0" fill="rgb(240,176,28)" rx="2" ry="2" />
<text  x="172.24" y="719.5" ></text>
</g>
<g >
<title>ext4_free_in_core_inode (1 samples, 0.07%)</title><rect x="992.5" y="645" width="0.8" height="15.0" fill="rgb(232,118,28)" rx="2" ry="2" />
<text  x="995.54" y="655.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="174.0" y="421" width="0.8" height="15.0" fill="rgb(221,152,31)" rx="2" ry="2" />
<text  x="177.02" y="431.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.07%)</title><rect x="910.5" y="581" width="0.8" height="15.0" fill="rgb(214,137,26)" rx="2" ry="2" />
<text  x="913.53" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.07%)</title><rect x="170.0" y="597" width="0.8" height="15.0" fill="rgb(240,123,32)" rx="2" ry="2" />
<text  x="173.04" y="607.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (6 samples, 0.40%)</title><rect x="703.5" y="773" width="4.8" height="15.0" fill="rgb(205,103,10)" rx="2" ry="2" />
<text  x="706.51" y="783.5" ></text>
</g>
<g >
<title>find_get_entries (1 samples, 0.07%)</title><rect x="988.6" y="533" width="0.8" height="15.0" fill="rgb(216,162,8)" rx="2" ry="2" />
<text  x="991.56" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="518.0" y="501" width="0.8" height="15.0" fill="rgb(234,219,14)" rx="2" ry="2" />
<text  x="520.99" y="511.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1 samples, 0.07%)</title><rect x="994.9" y="661" width="0.8" height="15.0" fill="rgb(207,193,31)" rx="2" ry="2" />
<text  x="997.93" y="671.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.07%)</title><rect x="994.1" y="661" width="0.8" height="15.0" fill="rgb(206,214,43)" rx="2" ry="2" />
<text  x="997.13" y="671.5" ></text>
</g>
<g >
<title>vfs_unlink (1 samples, 0.07%)</title><rect x="726.6" y="565" width="0.8" height="15.0" fill="rgb(247,62,54)" rx="2" ry="2" />
<text  x="729.60" y="575.5" ></text>
</g>
<g >
<title>super_cache_scan (46 samples, 3.10%)</title><rect x="955.9" y="645" width="36.6" height="15.0" fill="rgb(233,66,3)" rx="2" ry="2" />
<text  x="958.91" y="655.5" >sup..</text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.13%)</title><rect x="162.1" y="629" width="1.6" height="15.0" fill="rgb(246,211,26)" rx="2" ry="2" />
<text  x="165.08" y="639.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 5.40%)</title><rect x="14.8" y="709" width="63.7" height="15.0" fill="rgb(245,97,8)" rx="2" ry="2" />
<text  x="17.78" y="719.5" >perf_e..</text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (1 samples, 0.07%)</title><rect x="170.0" y="117" width="0.8" height="15.0" fill="rgb(229,29,18)" rx="2" ry="2" />
<text  x="173.04" y="127.5" ></text>
</g>
<g >
<title>__call_rcu (4 samples, 0.27%)</title><rect x="970.2" y="549" width="3.2" height="15.0" fill="rgb(226,139,48)" rx="2" ry="2" />
<text  x="973.24" y="559.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (185 samples, 12.48%)</title><rect x="1015.6" y="677" width="147.3" height="15.0" fill="rgb(210,156,53)" rx="2" ry="2" />
<text  x="1018.63" y="687.5" >mwait_idle_with_hi..</text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.07%)</title><rect x="916.9" y="485" width="0.8" height="15.0" fill="rgb(249,155,32)" rx="2" ry="2" />
<text  x="919.90" y="495.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (63 samples, 4.25%)</title><rect x="109.5" y="693" width="50.2" height="15.0" fill="rgb(230,18,11)" rx="2" ry="2" />
<text  x="112.53" y="703.5" >Apply..</text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.07%)</title><rect x="170.0" y="693" width="0.8" height="15.0" fill="rgb(234,130,5)" rx="2" ry="2" />
<text  x="173.04" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.07%)</title><rect x="269.6" y="629" width="0.8" height="15.0" fill="rgb(209,139,45)" rx="2" ry="2" />
<text  x="272.57" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="78.5" y="677" width="0.8" height="15.0" fill="rgb(246,36,11)" rx="2" ry="2" />
<text  x="81.48" y="687.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.07%)</title><rect x="776.8" y="533" width="0.8" height="15.0" fill="rgb(229,116,52)" rx="2" ry="2" />
<text  x="779.76" y="543.5" ></text>
</g>
<g >
<title>add_module.constprop.0 (1 samples, 0.07%)</title><rect x="12.4" y="645" width="0.8" height="15.0" fill="rgb(215,213,40)" rx="2" ry="2" />
<text  x="15.39" y="655.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.07%)</title><rect x="983.8" y="533" width="0.8" height="15.0" fill="rgb(245,202,39)" rx="2" ry="2" />
<text  x="986.78" y="543.5" ></text>
</g>
<g >
<title>wb_workfn (9 samples, 0.61%)</title><rect x="998.1" y="725" width="7.2" height="15.0" fill="rgb(244,91,28)" rx="2" ry="2" />
<text  x="1001.11" y="735.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.07%)</title><rect x="978.2" y="453" width="0.8" height="15.0" fill="rgb(223,38,7)" rx="2" ry="2" />
<text  x="981.21" y="463.5" ></text>
</g>
<g >
<title>generic_perform_write (6 samples, 0.40%)</title><rect x="79.3" y="437" width="4.7" height="15.0" fill="rgb(224,46,27)" rx="2" ry="2" />
<text  x="82.27" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.07%)</title><rect x="983.8" y="405" width="0.8" height="15.0" fill="rgb(228,172,48)" rx="2" ry="2" />
<text  x="986.78" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (117 samples, 7.89%)</title><rect x="598.4" y="725" width="93.2" height="15.0" fill="rgb(217,77,44)" rx="2" ry="2" />
<text  x="601.41" y="735.5" >handle_mm_f..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="725.8" y="597" width="0.8" height="15.0" fill="rgb(244,89,42)" rx="2" ry="2" />
<text  x="728.80" y="607.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.13%)</title><rect x="701.1" y="565" width="1.6" height="15.0" fill="rgb(233,185,50)" rx="2" ry="2" />
<text  x="704.12" y="575.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.07%)</title><rect x="168.4" y="117" width="0.8" height="15.0" fill="rgb(213,64,11)" rx="2" ry="2" />
<text  x="171.45" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="167.7" y="581" width="0.7" height="15.0" fill="rgb(229,157,44)" rx="2" ry="2" />
<text  x="170.65" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (1 samples, 0.07%)</title><rect x="168.4" y="341" width="0.8" height="15.0" fill="rgb(232,153,40)" rx="2" ry="2" />
<text  x="171.45" y="351.5" ></text>
</g>
<g >
<title>page_mapping (2 samples, 0.13%)</title><rect x="917.7" y="645" width="1.6" height="15.0" fill="rgb(234,216,3)" rx="2" ry="2" />
<text  x="920.69" y="655.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.07%)</title><rect x="78.5" y="709" width="0.8" height="15.0" fill="rgb(233,54,0)" rx="2" ry="2" />
<text  x="81.48" y="719.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1 samples, 0.07%)</title><rect x="1001.3" y="549" width="0.8" height="15.0" fill="rgb(216,117,10)" rx="2" ry="2" />
<text  x="1004.30" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="170.8" y="549" width="0.8" height="15.0" fill="rgb(230,148,48)" rx="2" ry="2" />
<text  x="173.84" y="559.5" ></text>
</g>
<g >
<title>perf_ioctl (72 samples, 4.86%)</title><rect x="17.2" y="629" width="57.3" height="15.0" fill="rgb(247,152,14)" rx="2" ry="2" />
<text  x="20.17" y="639.5" >perf_i..</text>
</g>
<g >
<title>_dl_start (1 samples, 0.07%)</title><rect x="13.2" y="773" width="0.8" height="15.0" fill="rgb(247,125,36)" rx="2" ry="2" />
<text  x="16.18" y="783.5" ></text>
</g>
<g >
<title>process_timeout (1 samples, 0.07%)</title><rect x="1014.8" y="533" width="0.8" height="15.0" fill="rgb(205,164,47)" rx="2" ry="2" />
<text  x="1017.83" y="543.5" ></text>
</g>
<g >
<title>__slab_free (5 samples, 0.34%)</title><rect x="943.2" y="549" width="4.0" height="15.0" fill="rgb(254,88,22)" rx="2" ry="2" />
<text  x="946.17" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.07%)</title><rect x="844.4" y="757" width="0.8" height="15.0" fill="rgb(244,19,50)" rx="2" ry="2" />
<text  x="847.44" y="767.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.07%)</title><rect x="108.7" y="437" width="0.8" height="15.0" fill="rgb(228,50,24)" rx="2" ry="2" />
<text  x="111.73" y="447.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.13%)</title><rect x="107.9" y="597" width="1.6" height="15.0" fill="rgb(209,33,2)" rx="2" ry="2" />
<text  x="110.94" y="607.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.07%)</title><rect x="912.1" y="613" width="0.8" height="15.0" fill="rgb(239,25,41)" rx="2" ry="2" />
<text  x="915.12" y="623.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.07%)</title><rect x="1186.8" y="501" width="0.8" height="15.0" fill="rgb(220,140,31)" rx="2" ry="2" />
<text  x="1189.82" y="511.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (1 samples, 0.07%)</title><rect x="727.4" y="309" width="0.8" height="15.0" fill="rgb(236,219,30)" rx="2" ry="2" />
<text  x="730.40" y="319.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="168.4" y="181" width="0.8" height="15.0" fill="rgb(209,172,8)" rx="2" ry="2" />
<text  x="171.45" y="191.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.07%)</title><rect x="702.7" y="517" width="0.8" height="15.0" fill="rgb(220,129,28)" rx="2" ry="2" />
<text  x="705.71" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::metawalkandparent (1 samples, 0.07%)</title><rect x="174.0" y="645" width="0.8" height="15.0" fill="rgb(235,104,26)" rx="2" ry="2" />
<text  x="177.02" y="655.5" ></text>
</g>
<g >
<title>lind_mmap (1 samples, 0.07%)</title><rect x="172.4" y="709" width="0.8" height="15.0" fill="rgb(206,47,14)" rx="2" ry="2" />
<text  x="175.43" y="719.5" ></text>
</g>
<g >
<title>i_callback (2 samples, 0.13%)</title><rect x="992.5" y="661" width="1.6" height="15.0" fill="rgb(228,129,31)" rx="2" ry="2" />
<text  x="995.54" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1 samples, 0.07%)</title><rect x="168.4" y="373" width="0.8" height="15.0" fill="rgb(205,52,1)" rx="2" ry="2" />
<text  x="171.45" y="383.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.07%)</title><rect x="979.0" y="565" width="0.8" height="15.0" fill="rgb(207,50,31)" rx="2" ry="2" />
<text  x="982.00" y="575.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (23 samples, 1.55%)</title><rect x="86.4" y="773" width="18.4" height="15.0" fill="rgb(218,169,32)" rx="2" ry="2" />
<text  x="89.44" y="783.5" ></text>
</g>
<g >
<title>process_vm_writev (4 samples, 0.27%)</title><rect x="699.5" y="741" width="3.2" height="15.0" fill="rgb(238,128,8)" rx="2" ry="2" />
<text  x="702.53" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.07%)</title><rect x="896.2" y="613" width="0.8" height="15.0" fill="rgb(238,192,6)" rx="2" ry="2" />
<text  x="899.19" y="623.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (8 samples, 0.54%)</title><rect x="312.6" y="549" width="6.3" height="15.0" fill="rgb(225,94,3)" rx="2" ry="2" />
<text  x="315.56" y="559.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="170.0" y="309" width="0.8" height="15.0" fill="rgb(244,100,38)" rx="2" ry="2" />
<text  x="173.04" y="319.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.07%)</title><rect x="725.8" y="389" width="0.8" height="15.0" fill="rgb(243,165,47)" rx="2" ry="2" />
<text  x="728.80" y="399.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.07%)</title><rect x="170.0" y="197" width="0.8" height="15.0" fill="rgb(252,192,24)" rx="2" ry="2" />
<text  x="173.04" y="207.5" ></text>
</g>
<g >
<title>shrink_inactive_list (131 samples, 8.84%)</title><rect x="850.0" y="677" width="104.3" height="15.0" fill="rgb(244,180,31)" rx="2" ry="2" />
<text  x="853.01" y="687.5" >shrink_inact..</text>
</g>
<g >
<title>menu_select (3 samples, 0.20%)</title><rect x="1179.6" y="629" width="2.4" height="15.0" fill="rgb(228,14,36)" rx="2" ry="2" />
<text  x="1182.65" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="844.4" y="773" width="0.8" height="15.0" fill="rgb(220,12,48)" rx="2" ry="2" />
<text  x="847.44" y="783.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.07%)</title><rect x="985.4" y="597" width="0.8" height="15.0" fill="rgb(209,130,3)" rx="2" ry="2" />
<text  x="988.37" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (1 samples, 0.07%)</title><rect x="727.4" y="629" width="0.8" height="15.0" fill="rgb(211,158,9)" rx="2" ry="2" />
<text  x="730.40" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.20%)</title><rect x="165.3" y="565" width="2.4" height="15.0" fill="rgb(248,175,4)" rx="2" ry="2" />
<text  x="168.26" y="575.5" ></text>
</g>
<g >
<title>NaClSysMunmapDecoder (2 samples, 0.13%)</title><rect x="171.6" y="757" width="1.6" height="15.0" fill="rgb(210,220,38)" rx="2" ry="2" />
<text  x="174.63" y="767.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="168.4" y="309" width="0.8" height="15.0" fill="rgb(210,208,34)" rx="2" ry="2" />
<text  x="171.45" y="319.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (2 samples, 0.13%)</title><rect x="81.7" y="389" width="1.6" height="15.0" fill="rgb(251,110,25)" rx="2" ry="2" />
<text  x="84.66" y="399.5" ></text>
</g>
<g >
<title>common_interrupt (3 samples, 0.20%)</title><rect x="1005.3" y="661" width="2.4" height="15.0" fill="rgb(241,157,39)" rx="2" ry="2" />
<text  x="1008.28" y="671.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.07%)</title><rect x="728.2" y="709" width="0.8" height="15.0" fill="rgb(249,126,7)" rx="2" ry="2" />
<text  x="731.19" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="726.6" y="613" width="0.8" height="15.0" fill="rgb(239,174,44)" rx="2" ry="2" />
<text  x="729.60" y="623.5" ></text>
</g>
<g >
<title>__GI_munmap (1 samples, 0.07%)</title><rect x="725.8" y="629" width="0.8" height="15.0" fill="rgb(219,6,42)" rx="2" ry="2" />
<text  x="728.80" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (4 samples, 0.27%)</title><rect x="699.5" y="677" width="3.2" height="15.0" fill="rgb(205,38,44)" rx="2" ry="2" />
<text  x="702.53" y="687.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.07%)</title><rect x="932.0" y="389" width="0.8" height="15.0" fill="rgb(228,45,1)" rx="2" ry="2" />
<text  x="935.02" y="399.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.07%)</title><rect x="1166.9" y="725" width="0.8" height="15.0" fill="rgb(239,114,37)" rx="2" ry="2" />
<text  x="1169.91" y="735.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (2 samples, 0.13%)</title><rect x="611.1" y="661" width="1.6" height="15.0" fill="rgb(251,20,34)" rx="2" ry="2" />
<text  x="614.15" y="671.5" ></text>
</g>
<g >
<title>refill_obj_stock (1 samples, 0.07%)</title><rect x="932.8" y="373" width="0.8" height="15.0" fill="rgb(215,9,12)" rx="2" ry="2" />
<text  x="935.82" y="383.5" ></text>
</g>
<g >
<title>NaClSysFork (2 samples, 0.13%)</title><rect x="169.2" y="741" width="1.6" height="15.0" fill="rgb(205,12,34)" rx="2" ry="2" />
<text  x="172.24" y="751.5" ></text>
</g>
<g >
<title>std::fs::metadata (1 samples, 0.07%)</title><rect x="173.2" y="613" width="0.8" height="15.0" fill="rgb(237,113,18)" rx="2" ry="2" />
<text  x="176.23" y="623.5" ></text>
</g>
<g >
<title>xas_create (5 samples, 0.34%)</title><rect x="880.3" y="581" width="4.0" height="15.0" fill="rgb(230,217,27)" rx="2" ry="2" />
<text  x="883.27" y="591.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.07%)</title><rect x="159.7" y="597" width="0.8" height="15.0" fill="rgb(212,88,26)" rx="2" ry="2" />
<text  x="162.69" y="607.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.07%)</title><rect x="10.8" y="533" width="0.8" height="15.0" fill="rgb(244,167,40)" rx="2" ry="2" />
<text  x="13.80" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (1 samples, 0.07%)</title><rect x="170.0" y="245" width="0.8" height="15.0" fill="rgb(229,78,21)" rx="2" ry="2" />
<text  x="173.04" y="255.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="84.8" y="725" width="0.8" height="15.0" fill="rgb(249,107,35)" rx="2" ry="2" />
<text  x="87.84" y="735.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="168.4" y="533" width="0.8" height="15.0" fill="rgb(230,61,7)" rx="2" ry="2" />
<text  x="171.45" y="543.5" ></text>
</g>
<g >
<title>unfreeze_partials (1 samples, 0.07%)</title><rect x="1010.1" y="469" width="0.8" height="15.0" fill="rgb(242,170,6)" rx="2" ry="2" />
<text  x="1013.05" y="479.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="727.4" y="341" width="0.8" height="15.0" fill="rgb(229,31,23)" rx="2" ry="2" />
<text  x="730.40" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages_slowpath.constprop.0 (6 samples, 0.40%)</title><rect x="615.1" y="629" width="4.8" height="15.0" fill="rgb(231,77,26)" rx="2" ry="2" />
<text  x="618.13" y="639.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (3 samples, 0.20%)</title><rect x="79.3" y="421" width="2.4" height="15.0" fill="rgb(209,37,38)" rx="2" ry="2" />
<text  x="82.27" y="431.5" ></text>
</g>
<g >
<title>blk_flush_plug_list (1 samples, 0.07%)</title><rect x="162.9" y="469" width="0.8" height="15.0" fill="rgb(242,14,45)" rx="2" ry="2" />
<text  x="165.87" y="479.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.07%)</title><rect x="931.2" y="421" width="0.8" height="15.0" fill="rgb(250,114,40)" rx="2" ry="2" />
<text  x="934.23" y="431.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (3 samples, 0.20%)</title><rect x="79.3" y="405" width="2.4" height="15.0" fill="rgb(212,137,20)" rx="2" ry="2" />
<text  x="82.27" y="415.5" ></text>
</g>
<g >
<title>ondemand_readahead (1 samples, 0.07%)</title><rect x="162.9" y="533" width="0.8" height="15.0" fill="rgb(226,115,41)" rx="2" ry="2" />
<text  x="165.87" y="543.5" ></text>
</g>
<g >
<title>iput.part.0 (5 samples, 0.34%)</title><rect x="974.2" y="549" width="4.0" height="15.0" fill="rgb(215,93,2)" rx="2" ry="2" />
<text  x="977.22" y="559.5" ></text>
</g>
<g >
<title>NaClSysExecve (2 samples, 0.13%)</title><rect x="163.7" y="741" width="1.6" height="15.0" fill="rgb(225,182,40)" rx="2" ry="2" />
<text  x="166.67" y="751.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (1 samples, 0.07%)</title><rect x="171.6" y="629" width="0.8" height="15.0" fill="rgb(215,40,3)" rx="2" ry="2" />
<text  x="174.63" y="639.5" ></text>
</g>
<g >
<title>user_path_at_empty (1 samples, 0.07%)</title><rect x="173.2" y="453" width="0.8" height="15.0" fill="rgb(251,174,40)" rx="2" ry="2" />
<text  x="176.23" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::open_syscall (2 samples, 0.13%)</title><rect x="173.2" y="677" width="1.6" height="15.0" fill="rgb(239,109,47)" rx="2" ry="2" />
<text  x="176.23" y="687.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (203 samples, 13.70%)</title><rect x="1005.3" y="725" width="161.6" height="15.0" fill="rgb(253,215,22)" rx="2" ry="2" />
<text  x="1008.28" y="735.5" >cpuidle_idle_call</text>
</g>
<g >
<title>NaClSysExitDecoder (5 samples, 0.34%)</title><rect x="165.3" y="757" width="3.9" height="15.0" fill="rgb(246,145,9)" rx="2" ry="2" />
<text  x="168.26" y="767.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="163.7" y="309" width="0.8" height="15.0" fill="rgb(212,75,19)" rx="2" ry="2" />
<text  x="166.67" y="319.5" ></text>
</g>
<g >
<title>wb_do_writeback (9 samples, 0.61%)</title><rect x="998.1" y="709" width="7.2" height="15.0" fill="rgb(237,59,3)" rx="2" ry="2" />
<text  x="1001.11" y="719.5" ></text>
</g>
</g>
</svg>
