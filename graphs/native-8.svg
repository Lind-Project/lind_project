<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>irqentry_exit (1 samples, 0.03%)</title><rect x="567.9" y="421" width="0.4" height="15.0" fill="rgb(231,47,2)" rx="2" ry="2" />
<text  x="570.95" y="431.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.03%)</title><rect x="40.1" y="325" width="0.3" height="15.0" fill="rgb(239,210,48)" rx="2" ry="2" />
<text  x="43.06" y="335.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (5 samples, 0.13%)</title><rect x="611.5" y="517" width="1.5" height="15.0" fill="rgb(228,13,15)" rx="2" ry="2" />
<text  x="614.50" y="527.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.03%)</title><rect x="11.2" y="469" width="0.3" height="15.0" fill="rgb(208,110,11)" rx="2" ry="2" />
<text  x="14.23" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="40.1" y="485" width="0.3" height="15.0" fill="rgb(246,61,16)" rx="2" ry="2" />
<text  x="43.06" y="495.5" ></text>
</g>
<g >
<title>event_function_call (68 samples, 1.77%)</title><rect x="14.9" y="293" width="20.9" height="15.0" fill="rgb(232,192,34)" rx="2" ry="2" />
<text  x="17.91" y="303.5" ></text>
</g>
<g >
<title>do_anonymous_page (76 samples, 1.98%)</title><rect x="543.4" y="357" width="23.3" height="15.0" fill="rgb(217,15,35)" rx="2" ry="2" />
<text  x="546.41" y="367.5" >d..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (60 samples, 1.56%)</title><rect x="640.3" y="341" width="18.4" height="15.0" fill="rgb(207,123,2)" rx="2" ry="2" />
<text  x="643.34" y="351.5" ></text>
</g>
<g >
<title>rmqueue (6 samples, 0.16%)</title><rect x="554.8" y="293" width="1.8" height="15.0" fill="rgb(211,106,29)" rx="2" ry="2" />
<text  x="557.76" y="303.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="640.3" y="277" width="0.3" height="15.0" fill="rgb(239,138,4)" rx="2" ry="2" />
<text  x="643.34" y="287.5" ></text>
</g>
<g >
<title>end_page_writeback (1 samples, 0.03%)</title><rect x="615.2" y="389" width="0.3" height="15.0" fill="rgb(216,93,22)" rx="2" ry="2" />
<text  x="618.18" y="399.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (2 samples, 0.05%)</title><rect x="526.5" y="405" width="0.7" height="15.0" fill="rgb(226,201,54)" rx="2" ry="2" />
<text  x="529.54" y="415.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (2 samples, 0.05%)</title><rect x="38.2" y="117" width="0.6" height="15.0" fill="rgb(222,152,53)" rx="2" ry="2" />
<text  x="41.22" y="127.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.03%)</title><rect x="36.7" y="277" width="0.3" height="15.0" fill="rgb(211,211,39)" rx="2" ry="2" />
<text  x="39.69" y="287.5" ></text>
</g>
<g >
<title>__put_user_nocheck_4 (1 samples, 0.03%)</title><rect x="10.3" y="325" width="0.3" height="15.0" fill="rgb(243,14,16)" rx="2" ry="2" />
<text  x="13.31" y="335.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (3 samples, 0.08%)</title><rect x="565.8" y="341" width="0.9" height="15.0" fill="rgb(242,47,32)" rx="2" ry="2" />
<text  x="568.80" y="351.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.03%)</title><rect x="1187.2" y="341" width="0.3" height="15.0" fill="rgb(221,134,1)" rx="2" ry="2" />
<text  x="1190.24" y="351.5" ></text>
</g>
<g >
<title>pipe_write (1,054 samples, 27.40%)</title><rect x="832.3" y="357" width="323.3" height="15.0" fill="rgb(221,63,36)" rx="2" ry="2" />
<text  x="835.35" y="367.5" >pipe_write</text>
</g>
<g >
<title>_cond_resched (1 samples, 0.03%)</title><rect x="537.3" y="421" width="0.3" height="15.0" fill="rgb(237,158,18)" rx="2" ry="2" />
<text  x="540.27" y="431.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (9 samples, 0.23%)</title><rect x="524.4" y="421" width="2.8" height="15.0" fill="rgb(234,154,44)" rx="2" ry="2" />
<text  x="527.39" y="431.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.03%)</title><rect x="635.7" y="293" width="0.3" height="15.0" fill="rgb(219,204,19)" rx="2" ry="2" />
<text  x="638.73" y="303.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="616.7" y="437" width="0.3" height="15.0" fill="rgb(226,121,36)" rx="2" ry="2" />
<text  x="619.72" y="447.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.03%)</title><rect x="490.6" y="309" width="0.4" height="15.0" fill="rgb(249,171,43)" rx="2" ry="2" />
<text  x="493.65" y="319.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.03%)</title><rect x="617.0" y="389" width="0.3" height="15.0" fill="rgb(214,213,10)" rx="2" ry="2" />
<text  x="620.02" y="399.5" ></text>
</g>
<g >
<title>alx_poll (1 samples, 0.03%)</title><rect x="617.0" y="277" width="0.3" height="15.0" fill="rgb(237,204,17)" rx="2" ry="2" />
<text  x="620.02" y="287.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.03%)</title><rect x="653.5" y="277" width="0.3" height="15.0" fill="rgb(223,128,37)" rx="2" ry="2" />
<text  x="656.52" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (21 samples, 0.55%)</title><rect x="642.8" y="213" width="6.4" height="15.0" fill="rgb(241,144,21)" rx="2" ry="2" />
<text  x="645.79" y="223.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (140 samples, 3.64%)</title><rect x="529.6" y="469" width="42.9" height="15.0" fill="rgb(241,7,31)" rx="2" ry="2" />
<text  x="532.60" y="479.5" >__me..</text>
</g>
<g >
<title>start_kernel (178 samples, 4.63%)</title><rect x="636.3" y="469" width="54.6" height="15.0" fill="rgb(219,198,3)" rx="2" ry="2" />
<text  x="639.35" y="479.5" >start..</text>
</g>
<g >
<title>do_exit (27 samples, 0.70%)</title><rect x="600.2" y="453" width="8.2" height="15.0" fill="rgb(247,181,19)" rx="2" ry="2" />
<text  x="603.15" y="463.5" ></text>
</g>
<g >
<title>mpage_map_one_extent (1 samples, 0.03%)</title><rect x="615.8" y="309" width="0.3" height="15.0" fill="rgb(250,14,42)" rx="2" ry="2" />
<text  x="618.80" y="319.5" ></text>
</g>
<g >
<title>__lock_text_start (12 samples, 0.31%)</title><rect x="868.9" y="309" width="3.6" height="15.0" fill="rgb(237,165,53)" rx="2" ry="2" />
<text  x="871.85" y="319.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (3 samples, 0.08%)</title><rect x="651.7" y="293" width="0.9" height="15.0" fill="rgb(236,53,17)" rx="2" ry="2" />
<text  x="654.68" y="303.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="40.4" y="517" width="0.3" height="15.0" fill="rgb(211,91,38)" rx="2" ry="2" />
<text  x="43.37" y="527.5" ></text>
</g>
<g >
<title>iov_iter_init (2 samples, 0.05%)</title><rect x="758.1" y="373" width="0.6" height="15.0" fill="rgb(208,208,23)" rx="2" ry="2" />
<text  x="761.12" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="36.1" y="437" width="1.2" height="15.0" fill="rgb(223,223,44)" rx="2" ry="2" />
<text  x="39.07" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (10 samples, 0.26%)</title><rect x="608.4" y="517" width="3.1" height="15.0" fill="rgb(209,141,32)" rx="2" ry="2" />
<text  x="611.44" y="527.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.16%)</title><rect x="862.4" y="325" width="1.9" height="15.0" fill="rgb(219,95,47)" rx="2" ry="2" />
<text  x="865.41" y="335.5" ></text>
</g>
<g >
<title>osq_lock (55 samples, 1.43%)</title><rect x="1136.3" y="309" width="16.9" height="15.0" fill="rgb(213,99,47)" rx="2" ry="2" />
<text  x="1139.32" y="319.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.03%)</title><rect x="563.3" y="325" width="0.4" height="15.0" fill="rgb(254,158,53)" rx="2" ry="2" />
<text  x="566.35" y="335.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.03%)</title><rect x="40.1" y="293" width="0.3" height="15.0" fill="rgb(210,166,26)" rx="2" ry="2" />
<text  x="43.06" y="303.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.03%)</title><rect x="605.1" y="261" width="0.3" height="15.0" fill="rgb(216,155,28)" rx="2" ry="2" />
<text  x="608.06" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.03%)</title><rect x="37.9" y="101" width="0.3" height="15.0" fill="rgb(215,116,25)" rx="2" ry="2" />
<text  x="40.91" y="111.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.03%)</title><rect x="684.2" y="341" width="0.3" height="15.0" fill="rgb(246,0,24)" rx="2" ry="2" />
<text  x="687.20" y="351.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.03%)</title><rect x="682.7" y="293" width="0.3" height="15.0" fill="rgb(211,176,17)" rx="2" ry="2" />
<text  x="685.66" y="303.5" ></text>
</g>
<g >
<title>try_charge (7 samples, 0.18%)</title><rect x="563.7" y="325" width="2.1" height="15.0" fill="rgb(231,23,0)" rx="2" ry="2" />
<text  x="566.65" y="335.5" ></text>
</g>
<g >
<title>record__write (8 samples, 0.21%)</title><rect x="37.6" y="405" width="2.5" height="15.0" fill="rgb(245,179,29)" rx="2" ry="2" />
<text  x="40.61" y="415.5" ></text>
</g>
<g >
<title>reweight_entity (1 samples, 0.03%)</title><rect x="635.7" y="213" width="0.3" height="15.0" fill="rgb(236,33,48)" rx="2" ry="2" />
<text  x="638.73" y="223.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.03%)</title><rect x="643.4" y="181" width="0.3" height="15.0" fill="rgb(223,100,10)" rx="2" ry="2" />
<text  x="646.40" y="191.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 0.03%)</title><rect x="680.2" y="357" width="0.3" height="15.0" fill="rgb(237,143,6)" rx="2" ry="2" />
<text  x="683.21" y="367.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (1 samples, 0.03%)</title><rect x="643.7" y="181" width="0.3" height="15.0" fill="rgb(250,2,51)" rx="2" ry="2" />
<text  x="646.71" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.21%)</title><rect x="37.6" y="357" width="2.5" height="15.0" fill="rgb(238,15,9)" rx="2" ry="2" />
<text  x="40.61" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_read (1,444 samples, 37.54%)</title><rect x="77.8" y="421" width="442.9" height="15.0" fill="rgb(217,122,40)" rx="2" ry="2" />
<text  x="80.79" y="431.5" >__x64_sys_read</text>
</g>
<g >
<title>update_sg_lb_stats (4 samples, 0.10%)</title><rect x="655.7" y="165" width="1.2" height="15.0" fill="rgb(249,169,24)" rx="2" ry="2" />
<text  x="658.67" y="175.5" ></text>
</g>
<g >
<title>__fget_light (14 samples, 0.36%)</title><rect x="80.9" y="389" width="4.2" height="15.0" fill="rgb(223,128,48)" rx="2" ry="2" />
<text  x="83.86" y="399.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (1 samples, 0.03%)</title><rect x="303.5" y="341" width="0.3" height="15.0" fill="rgb(229,177,22)" rx="2" ry="2" />
<text  x="306.54" y="351.5" ></text>
</g>
<g >
<title>make_child (1 samples, 0.03%)</title><rect x="10.3" y="373" width="0.3" height="15.0" fill="rgb(233,147,13)" rx="2" ry="2" />
<text  x="13.31" y="383.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.03%)</title><rect x="641.6" y="229" width="0.3" height="15.0" fill="rgb(237,164,48)" rx="2" ry="2" />
<text  x="644.56" y="239.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.03%)</title><rect x="617.0" y="309" width="0.3" height="15.0" fill="rgb(206,41,24)" rx="2" ry="2" />
<text  x="620.02" y="319.5" ></text>
</g>
<g >
<title>__update_idle_core (2 samples, 0.05%)</title><rect x="687.6" y="341" width="0.6" height="15.0" fill="rgb(236,73,15)" rx="2" ry="2" />
<text  x="690.57" y="351.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.08%)</title><rect x="616.1" y="453" width="0.9" height="15.0" fill="rgb(227,187,7)" rx="2" ry="2" />
<text  x="619.10" y="463.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1 samples, 0.03%)</title><rect x="615.8" y="293" width="0.3" height="15.0" fill="rgb(220,21,54)" rx="2" ry="2" />
<text  x="618.80" y="303.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.03%)</title><rect x="557.8" y="341" width="0.3" height="15.0" fill="rgb(205,64,11)" rx="2" ry="2" />
<text  x="560.82" y="351.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.03%)</title><rect x="683.3" y="357" width="0.3" height="15.0" fill="rgb(213,213,29)" rx="2" ry="2" />
<text  x="686.28" y="367.5" ></text>
</g>
<g >
<title>do_idle (63 samples, 1.64%)</title><rect x="617.0" y="469" width="19.3" height="15.0" fill="rgb(215,11,19)" rx="2" ry="2" />
<text  x="620.02" y="479.5" ></text>
</g>
<g >
<title>x86_pmu_disable (2 samples, 0.05%)</title><rect x="648.6" y="149" width="0.6" height="15.0" fill="rgb(231,205,34)" rx="2" ry="2" />
<text  x="651.62" y="159.5" ></text>
</g>
<g >
<title>__wcsmbs_load_conv (1 samples, 0.03%)</title><rect x="10.6" y="437" width="0.3" height="15.0" fill="rgb(205,74,18)" rx="2" ry="2" />
<text  x="13.61" y="447.5" ></text>
</g>
<g >
<title>napi_poll (1 samples, 0.03%)</title><rect x="617.0" y="293" width="0.3" height="15.0" fill="rgb(217,66,35)" rx="2" ry="2" />
<text  x="620.02" y="303.5" ></text>
</g>
<g >
<title>kill_fasync (15 samples, 0.39%)</title><rect x="765.8" y="357" width="4.6" height="15.0" fill="rgb(207,64,1)" rx="2" ry="2" />
<text  x="768.79" y="367.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.03%)</title><rect x="37.3" y="437" width="0.3" height="15.0" fill="rgb(212,80,49)" rx="2" ry="2" />
<text  x="40.30" y="447.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (12 samples, 0.31%)</title><rect x="1182.9" y="453" width="3.7" height="15.0" fill="rgb(234,69,15)" rx="2" ry="2" />
<text  x="1185.95" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.08%)</title><rect x="637.6" y="357" width="0.9" height="15.0" fill="rgb(241,128,22)" rx="2" ry="2" />
<text  x="640.57" y="367.5" ></text>
</g>
<g >
<title>__sysvec_call_function_single (1 samples, 0.03%)</title><rect x="635.7" y="357" width="0.3" height="15.0" fill="rgb(233,127,26)" rx="2" ry="2" />
<text  x="638.73" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.03%)</title><rect x="37.9" y="85" width="0.3" height="15.0" fill="rgb(250,158,0)" rx="2" ry="2" />
<text  x="40.91" y="95.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="10.3" y="245" width="0.3" height="15.0" fill="rgb(224,5,25)" rx="2" ry="2" />
<text  x="13.31" y="255.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (2 samples, 0.05%)</title><rect x="683.9" y="373" width="0.6" height="15.0" fill="rgb(244,36,14)" rx="2" ry="2" />
<text  x="686.89" y="383.5" ></text>
</g>
<g >
<title>ksys_read (8 samples, 0.21%)</title><rect x="521.3" y="421" width="2.5" height="15.0" fill="rgb(241,49,7)" rx="2" ry="2" />
<text  x="524.32" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,472 samples, 38.26%)</title><rect x="75.6" y="437" width="451.6" height="15.0" fill="rgb(232,190,2)" rx="2" ry="2" />
<text  x="78.64" y="447.5" >do_syscall_64</text>
</g>
<g >
<title>[[stack]] (1 samples, 0.03%)</title><rect x="690.9" y="517" width="0.4" height="15.0" fill="rgb(206,123,9)" rx="2" ry="2" />
<text  x="693.95" y="527.5" ></text>
</g>
<g >
<title>ext4_da_write_end (6 samples, 0.16%)</title><rect x="38.2" y="149" width="1.9" height="15.0" fill="rgb(240,6,53)" rx="2" ry="2" />
<text  x="41.22" y="159.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.03%)</title><rect x="40.1" y="453" width="0.3" height="15.0" fill="rgb(252,18,14)" rx="2" ry="2" />
<text  x="43.06" y="463.5" ></text>
</g>
<g >
<title>current_time (6 samples, 0.16%)</title><rect x="951.1" y="341" width="1.8" height="15.0" fill="rgb(233,229,26)" rx="2" ry="2" />
<text  x="954.06" y="351.5" ></text>
</g>
<g >
<title>prep_new_page (29 samples, 0.75%)</title><rect x="545.9" y="293" width="8.9" height="15.0" fill="rgb(222,220,35)" rx="2" ry="2" />
<text  x="548.86" y="303.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.10%)</title><rect x="491.0" y="325" width="1.2" height="15.0" fill="rgb(225,151,48)" rx="2" ry="2" />
<text  x="493.96" y="335.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.03%)</title><rect x="600.2" y="309" width="0.3" height="15.0" fill="rgb(248,197,43)" rx="2" ry="2" />
<text  x="603.15" y="319.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.03%)</title><rect x="37.9" y="53" width="0.3" height="15.0" fill="rgb(243,32,41)" rx="2" ry="2" />
<text  x="40.91" y="63.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.03%)</title><rect x="650.8" y="229" width="0.3" height="15.0" fill="rgb(218,140,26)" rx="2" ry="2" />
<text  x="653.76" y="239.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (2 samples, 0.05%)</title><rect x="39.4" y="101" width="0.7" height="15.0" fill="rgb(225,66,39)" rx="2" ry="2" />
<text  x="42.45" y="111.5" ></text>
</g>
<g >
<title>run_rebalance_domains (13 samples, 0.34%)</title><rect x="653.8" y="245" width="4.0" height="15.0" fill="rgb(205,181,13)" rx="2" ry="2" />
<text  x="656.83" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 2.08%)</title><rect x="11.5" y="405" width="24.6" height="15.0" fill="rgb(246,86,4)" rx="2" ry="2" />
<text  x="14.53" y="415.5" >e..</text>
</g>
<g >
<title>__mutex_lock_slowpath (1 samples, 0.03%)</title><rect x="191.0" y="341" width="0.3" height="15.0" fill="rgb(220,100,38)" rx="2" ry="2" />
<text  x="193.97" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_get_next_event (1 samples, 0.03%)</title><rect x="640.6" y="261" width="0.3" height="15.0" fill="rgb(247,185,31)" rx="2" ry="2" />
<text  x="643.64" y="271.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (5 samples, 0.13%)</title><rect x="655.4" y="181" width="1.5" height="15.0" fill="rgb(236,23,25)" rx="2" ry="2" />
<text  x="658.37" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_write (1,428 samples, 37.12%)</title><rect x="735.1" y="421" width="438.0" height="15.0" fill="rgb(205,48,33)" rx="2" ry="2" />
<text  x="738.12" y="431.5" >__x64_sys_write</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="37.3" y="405" width="0.3" height="15.0" fill="rgb(220,213,15)" rx="2" ry="2" />
<text  x="40.30" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (5 samples, 0.13%)</title><rect x="107.2" y="357" width="1.6" height="15.0" fill="rgb(232,89,26)" rx="2" ry="2" />
<text  x="110.23" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (23 samples, 0.60%)</title><rect x="642.2" y="229" width="7.0" height="15.0" fill="rgb(207,99,53)" rx="2" ry="2" />
<text  x="645.18" y="239.5" ></text>
</g>
<g >
<title>aa_file_perm (13 samples, 0.34%)</title><rect x="511.5" y="325" width="4.0" height="15.0" fill="rgb(249,228,44)" rx="2" ry="2" />
<text  x="514.51" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.03%)</title><rect x="682.7" y="325" width="0.3" height="15.0" fill="rgb(227,119,52)" rx="2" ry="2" />
<text  x="685.66" y="335.5" ></text>
</g>
<g >
<title>vm_normal_page (1 samples, 0.03%)</title><rect x="600.5" y="341" width="0.3" height="15.0" fill="rgb(245,57,52)" rx="2" ry="2" />
<text  x="603.46" y="351.5" ></text>
</g>
<g >
<title>__GI___read (1,582 samples, 41.12%)</title><rect x="44.4" y="469" width="485.2" height="15.0" fill="rgb(225,204,10)" rx="2" ry="2" />
<text  x="47.35" y="479.5" >__GI___read</text>
</g>
<g >
<title>copyout (4 samples, 0.10%)</title><rect x="302.3" y="325" width="1.2" height="15.0" fill="rgb(230,128,41)" rx="2" ry="2" />
<text  x="305.32" y="335.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="36.4" y="357" width="0.3" height="15.0" fill="rgb(218,26,17)" rx="2" ry="2" />
<text  x="39.38" y="367.5" ></text>
</g>
<g >
<title>_cond_resched (3 samples, 0.08%)</title><rect x="238.8" y="309" width="0.9" height="15.0" fill="rgb(244,20,27)" rx="2" ry="2" />
<text  x="241.82" y="319.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.03%)</title><rect x="10.3" y="405" width="0.3" height="15.0" fill="rgb(241,130,54)" rx="2" ry="2" />
<text  x="13.31" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (178 samples, 4.63%)</title><rect x="636.3" y="421" width="54.6" height="15.0" fill="rgb(253,139,7)" rx="2" ry="2" />
<text  x="639.35" y="431.5" >cpu_s..</text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.03%)</title><rect x="39.4" y="69" width="0.4" height="15.0" fill="rgb(228,60,38)" rx="2" ry="2" />
<text  x="42.45" y="79.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (17 samples, 0.44%)</title><rect x="602.9" y="309" width="5.2" height="15.0" fill="rgb(253,94,43)" rx="2" ry="2" />
<text  x="605.91" y="319.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.05%)</title><rect x="616.1" y="405" width="0.6" height="15.0" fill="rgb(213,61,8)" rx="2" ry="2" />
<text  x="619.10" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1125.9" y="277" width="0.3" height="15.0" fill="rgb(213,174,51)" rx="2" ry="2" />
<text  x="1128.89" y="287.5" ></text>
</g>
<g >
<title>wb_writeback (2 samples, 0.05%)</title><rect x="615.5" y="421" width="0.6" height="15.0" fill="rgb(243,200,8)" rx="2" ry="2" />
<text  x="618.49" y="431.5" ></text>
</g>
<g >
<title>ret_from_fork (6 samples, 0.16%)</title><rect x="615.2" y="517" width="1.8" height="15.0" fill="rgb(253,138,54)" rx="2" ry="2" />
<text  x="618.18" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="40.1" y="517" width="0.3" height="15.0" fill="rgb(210,120,49)" rx="2" ry="2" />
<text  x="43.06" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (55 samples, 1.43%)</title><rect x="710.3" y="453" width="16.8" height="15.0" fill="rgb(211,132,3)" rx="2" ry="2" />
<text  x="713.27" y="463.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.03%)</title><rect x="538.8" y="405" width="0.3" height="15.0" fill="rgb(232,220,24)" rx="2" ry="2" />
<text  x="541.81" y="415.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.03%)</title><rect x="85.1" y="389" width="0.4" height="15.0" fill="rgb(234,185,38)" rx="2" ry="2" />
<text  x="88.15" y="399.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.03%)</title><rect x="10.3" y="453" width="0.3" height="15.0" fill="rgb(243,194,5)" rx="2" ry="2" />
<text  x="13.31" y="463.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (8 samples, 0.21%)</title><rect x="37.6" y="453" width="2.5" height="15.0" fill="rgb(233,24,40)" rx="2" ry="2" />
<text  x="40.61" y="463.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (223 samples, 5.80%)</title><rect x="233.9" y="325" width="68.4" height="15.0" fill="rgb(232,83,45)" rx="2" ry="2" />
<text  x="236.91" y="335.5" >copy_pa..</text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.03%)</title><rect x="544.6" y="309" width="0.3" height="15.0" fill="rgb(250,222,12)" rx="2" ry="2" />
<text  x="547.63" y="319.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.03%)</title><rect x="602.0" y="325" width="0.3" height="15.0" fill="rgb(215,51,10)" rx="2" ry="2" />
<text  x="604.99" y="335.5" ></text>
</g>
<g >
<title>schedule_idle (2 samples, 0.05%)</title><rect x="635.7" y="453" width="0.6" height="15.0" fill="rgb(215,37,22)" rx="2" ry="2" />
<text  x="638.73" y="463.5" ></text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.03%)</title><rect x="602.6" y="309" width="0.3" height="15.0" fill="rgb(244,164,43)" rx="2" ry="2" />
<text  x="605.61" y="319.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (2 samples, 0.05%)</title><rect x="37.6" y="133" width="0.6" height="15.0" fill="rgb(245,2,4)" rx="2" ry="2" />
<text  x="40.61" y="143.5" ></text>
</g>
<g >
<title>exc_page_fault (102 samples, 2.65%)</title><rect x="537.0" y="437" width="31.3" height="15.0" fill="rgb(254,135,50)" rx="2" ry="2" />
<text  x="539.97" y="447.5" >ex..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="37.3" y="389" width="0.3" height="15.0" fill="rgb(227,19,11)" rx="2" ry="2" />
<text  x="40.30" y="399.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.03%)</title><rect x="40.1" y="245" width="0.3" height="15.0" fill="rgb(235,196,54)" rx="2" ry="2" />
<text  x="43.06" y="255.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (3 samples, 0.08%)</title><rect x="958.4" y="309" width="0.9" height="15.0" fill="rgb(236,99,53)" rx="2" ry="2" />
<text  x="961.42" y="319.5" ></text>
</g>
<g >
<title>new_sync_write (8 samples, 0.21%)</title><rect x="37.6" y="277" width="2.5" height="15.0" fill="rgb(219,155,28)" rx="2" ry="2" />
<text  x="40.61" y="287.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 2.42%)</title><rect x="11.5" y="517" width="28.6" height="15.0" fill="rgb(225,68,15)" rx="2" ry="2" />
<text  x="14.53" y="527.5" >[u..</text>
</g>
<g >
<title>tick_nohz_restart (4 samples, 0.10%)</title><rect x="689.1" y="373" width="1.2" height="15.0" fill="rgb(209,20,27)" rx="2" ry="2" />
<text  x="692.11" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (5 samples, 0.13%)</title><rect x="860.9" y="341" width="1.5" height="15.0" fill="rgb(242,169,5)" rx="2" ry="2" />
<text  x="863.88" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (99 samples, 2.57%)</title><rect x="537.6" y="421" width="30.3" height="15.0" fill="rgb(221,2,28)" rx="2" ry="2" />
<text  x="540.58" y="431.5" >do..</text>
</g>
<g >
<title>sync_regs (12 samples, 0.31%)</title><rect x="568.9" y="453" width="3.6" height="15.0" fill="rgb(225,189,0)" rx="2" ry="2" />
<text  x="571.87" y="463.5" ></text>
</g>
<g >
<title>pipe_write (8 samples, 0.21%)</title><rect x="1155.6" y="373" width="2.5" height="15.0" fill="rgb(213,37,1)" rx="2" ry="2" />
<text  x="1158.65" y="383.5" ></text>
</g>
<g >
<title>anon_pipe_buf_release (45 samples, 1.17%)</title><rect x="108.8" y="357" width="13.8" height="15.0" fill="rgb(248,120,13)" rx="2" ry="2" />
<text  x="111.77" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (27 samples, 0.70%)</title><rect x="600.2" y="501" width="8.2" height="15.0" fill="rgb(241,130,12)" rx="2" ry="2" />
<text  x="603.15" y="511.5" ></text>
</g>
<g >
<title>perf_event__prepare_comm (1 samples, 0.03%)</title><rect x="37.3" y="453" width="0.3" height="15.0" fill="rgb(244,92,18)" rx="2" ry="2" />
<text  x="40.30" y="463.5" ></text>
</g>
<g >
<title>reader_loop (1 samples, 0.03%)</title><rect x="10.3" y="469" width="0.3" height="15.0" fill="rgb(229,202,17)" rx="2" ry="2" />
<text  x="13.31" y="479.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.03%)</title><rect x="515.5" y="325" width="0.3" height="15.0" fill="rgb(243,19,7)" rx="2" ry="2" />
<text  x="518.50" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (6 samples, 0.16%)</title><rect x="1187.5" y="517" width="1.9" height="15.0" fill="rgb(226,117,31)" rx="2" ry="2" />
<text  x="1190.55" y="527.5" ></text>
</g>
<g >
<title>atime_needs_update (15 samples, 0.39%)</title><rect x="493.4" y="325" width="4.6" height="15.0" fill="rgb(238,42,45)" rx="2" ry="2" />
<text  x="496.41" y="335.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="36.7" y="293" width="0.3" height="15.0" fill="rgb(246,34,39)" rx="2" ry="2" />
<text  x="39.69" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="690.0" y="325" width="0.3" height="15.0" fill="rgb(205,214,1)" rx="2" ry="2" />
<text  x="693.03" y="335.5" ></text>
</g>
<g >
<title>__gconv_read_conf (1 samples, 0.03%)</title><rect x="10.6" y="389" width="0.3" height="15.0" fill="rgb(208,107,37)" rx="2" ry="2" />
<text  x="13.61" y="399.5" ></text>
</g>
<g >
<title>ksys_write (8 samples, 0.21%)</title><rect x="37.6" y="309" width="2.5" height="15.0" fill="rgb(231,214,18)" rx="2" ry="2" />
<text  x="40.61" y="319.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.08%)</title><rect x="561.8" y="325" width="0.9" height="15.0" fill="rgb(249,96,3)" rx="2" ry="2" />
<text  x="564.81" y="335.5" ></text>
</g>
<g >
<title>_start (1,615 samples, 41.98%)</title><rect x="691.3" y="517" width="495.3" height="15.0" fill="rgb(241,199,30)" rx="2" ry="2" />
<text  x="694.25" y="527.5" >_start</text>
</g>
<g >
<title>pagevec_lru_move_fn (9 samples, 0.23%)</title><rect x="558.4" y="309" width="2.8" height="15.0" fill="rgb(217,29,2)" rx="2" ry="2" />
<text  x="561.44" y="319.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.03%)</title><rect x="650.5" y="229" width="0.3" height="15.0" fill="rgb(254,11,52)" rx="2" ry="2" />
<text  x="653.46" y="239.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (4 samples, 0.10%)</title><rect x="36.1" y="373" width="1.2" height="15.0" fill="rgb(236,33,42)" rx="2" ry="2" />
<text  x="39.07" y="383.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (3 samples, 0.08%)</title><rect x="1173.1" y="421" width="0.9" height="15.0" fill="rgb(234,71,17)" rx="2" ry="2" />
<text  x="1176.13" y="431.5" ></text>
</g>
<g >
<title>set_default_locale (1 samples, 0.03%)</title><rect x="10.6" y="469" width="0.3" height="15.0" fill="rgb(228,78,33)" rx="2" ry="2" />
<text  x="13.61" y="479.5" ></text>
</g>
<g >
<title>mutex_spin_on_owner (205 samples, 5.33%)</title><rect x="1063.3" y="293" width="62.9" height="15.0" fill="rgb(212,225,11)" rx="2" ry="2" />
<text  x="1066.32" y="303.5" >mutex_..</text>
</g>
<g >
<title>asm_exc_page_fault (104 samples, 2.70%)</title><rect x="536.4" y="453" width="31.9" height="15.0" fill="rgb(207,31,34)" rx="2" ry="2" />
<text  x="539.35" y="463.5" >as..</text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.03%)</title><rect x="688.8" y="389" width="0.3" height="15.0" fill="rgb(225,35,15)" rx="2" ry="2" />
<text  x="691.80" y="399.5" ></text>
</g>
<g >
<title>ext4_writepages (2 samples, 0.05%)</title><rect x="615.5" y="341" width="0.6" height="15.0" fill="rgb(237,40,53)" rx="2" ry="2" />
<text  x="618.49" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="541.6" y="357" width="0.3" height="15.0" fill="rgb(252,12,29)" rx="2" ry="2" />
<text  x="544.57" y="367.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.03%)</title><rect x="656.9" y="213" width="0.3" height="15.0" fill="rgb(241,222,17)" rx="2" ry="2" />
<text  x="659.90" y="223.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (1 samples, 0.03%)</title><rect x="39.8" y="53" width="0.3" height="15.0" fill="rgb(227,78,41)" rx="2" ry="2" />
<text  x="42.75" y="63.5" ></text>
</g>
<g >
<title>update_process_times (21 samples, 0.55%)</title><rect x="642.8" y="197" width="6.4" height="15.0" fill="rgb(230,112,9)" rx="2" ry="2" />
<text  x="645.79" y="207.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.03%)</title><rect x="447.4" y="293" width="0.3" height="15.0" fill="rgb(232,102,39)" rx="2" ry="2" />
<text  x="450.40" y="303.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.03%)</title><rect x="600.2" y="357" width="0.3" height="15.0" fill="rgb(205,66,2)" rx="2" ry="2" />
<text  x="603.15" y="367.5" ></text>
</g>
<g >
<title>do_iter_write (8 samples, 0.21%)</title><rect x="37.6" y="229" width="2.5" height="15.0" fill="rgb(241,137,42)" rx="2" ry="2" />
<text  x="40.61" y="239.5" ></text>
</g>
<g >
<title>perf_event_task_tick (12 samples, 0.31%)</title><rect x="645.5" y="165" width="3.7" height="15.0" fill="rgb(224,5,16)" rx="2" ry="2" />
<text  x="648.55" y="175.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.03%)</title><rect x="40.1" y="373" width="0.3" height="15.0" fill="rgb(215,0,23)" rx="2" ry="2" />
<text  x="43.06" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.05%)</title><rect x="565.8" y="325" width="0.6" height="15.0" fill="rgb(228,155,46)" rx="2" ry="2" />
<text  x="568.80" y="335.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.03%)</title><rect x="685.1" y="389" width="0.3" height="15.0" fill="rgb(205,4,5)" rx="2" ry="2" />
<text  x="688.12" y="399.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.03%)</title><rect x="10.0" y="469" width="0.3" height="15.0" fill="rgb(252,161,4)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.03%)</title><rect x="1187.2" y="373" width="0.3" height="15.0" fill="rgb(208,55,21)" rx="2" ry="2" />
<text  x="1190.24" y="383.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.05%)</title><rect x="1172.5" y="405" width="0.6" height="15.0" fill="rgb(212,20,22)" rx="2" ry="2" />
<text  x="1175.52" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (4 samples, 0.10%)</title><rect x="689.1" y="389" width="1.2" height="15.0" fill="rgb(212,52,6)" rx="2" ry="2" />
<text  x="692.11" y="399.5" ></text>
</g>
<g >
<title>__run_hrtimer (27 samples, 0.70%)</title><rect x="640.9" y="245" width="8.3" height="15.0" fill="rgb(218,34,25)" rx="2" ry="2" />
<text  x="643.95" y="255.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.03%)</title><rect x="679.0" y="325" width="0.3" height="15.0" fill="rgb(247,46,8)" rx="2" ry="2" />
<text  x="681.98" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (2 samples, 0.05%)</title><rect x="682.4" y="341" width="0.6" height="15.0" fill="rgb(235,195,1)" rx="2" ry="2" />
<text  x="685.36" y="351.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.03%)</title><rect x="1187.2" y="437" width="0.3" height="15.0" fill="rgb(210,222,32)" rx="2" ry="2" />
<text  x="1190.24" y="447.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.03%)</title><rect x="37.3" y="469" width="0.3" height="15.0" fill="rgb(220,46,37)" rx="2" ry="2" />
<text  x="40.30" y="479.5" ></text>
</g>
<g >
<title>tick_program_event (2 samples, 0.05%)</title><rect x="650.5" y="261" width="0.6" height="15.0" fill="rgb(242,64,9)" rx="2" ry="2" />
<text  x="653.46" y="271.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="11.8" y="357" width="0.3" height="15.0" fill="rgb(253,133,29)" rx="2" ry="2" />
<text  x="14.84" y="367.5" ></text>
</g>
<g >
<title>new_sync_write (1,294 samples, 33.64%)</title><rect x="758.7" y="373" width="396.9" height="15.0" fill="rgb(216,78,29)" rx="2" ry="2" />
<text  x="761.73" y="383.5" >new_sync_write</text>
</g>
<g >
<title>single_release (1 samples, 0.03%)</title><rect x="37.3" y="277" width="0.3" height="15.0" fill="rgb(238,151,14)" rx="2" ry="2" />
<text  x="40.30" y="287.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.03%)</title><rect x="645.2" y="165" width="0.3" height="15.0" fill="rgb(254,227,41)" rx="2" ry="2" />
<text  x="648.24" y="175.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (2 samples, 0.05%)</title><rect x="562.7" y="325" width="0.6" height="15.0" fill="rgb(234,184,47)" rx="2" ry="2" />
<text  x="565.73" y="335.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.03%)</title><rect x="684.8" y="389" width="0.3" height="15.0" fill="rgb(252,0,18)" rx="2" ry="2" />
<text  x="687.81" y="399.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.03%)</title><rect x="40.1" y="469" width="0.3" height="15.0" fill="rgb(253,38,0)" rx="2" ry="2" />
<text  x="43.06" y="479.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.03%)</title><rect x="39.4" y="53" width="0.4" height="15.0" fill="rgb(252,38,6)" rx="2" ry="2" />
<text  x="42.45" y="63.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="80.5" y="389" width="0.4" height="15.0" fill="rgb(242,199,36)" rx="2" ry="2" />
<text  x="83.55" y="399.5" ></text>
</g>
<g >
<title>smp_call_function_single (65 samples, 1.69%)</title><rect x="15.8" y="277" width="20.0" height="15.0" fill="rgb(217,5,35)" rx="2" ry="2" />
<text  x="18.83" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="643.1" y="181" width="0.3" height="15.0" fill="rgb(222,177,40)" rx="2" ry="2" />
<text  x="646.10" y="191.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (3 samples, 0.08%)</title><rect x="39.1" y="117" width="1.0" height="15.0" fill="rgb(227,11,51)" rx="2" ry="2" />
<text  x="42.14" y="127.5" ></text>
</g>
<g >
<title>perf_ioctl (77 samples, 2.00%)</title><rect x="12.1" y="357" width="23.7" height="15.0" fill="rgb(243,124,43)" rx="2" ry="2" />
<text  x="15.15" y="367.5" >p..</text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 2.08%)</title><rect x="11.5" y="437" width="24.6" height="15.0" fill="rgb(248,164,10)" rx="2" ry="2" />
<text  x="14.53" y="447.5" >p..</text>
</g>
<g >
<title>record__pushfn (8 samples, 0.21%)</title><rect x="37.6" y="421" width="2.5" height="15.0" fill="rgb(221,181,9)" rx="2" ry="2" />
<text  x="40.61" y="431.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="466.7" y="293" width="0.3" height="15.0" fill="rgb(233,227,13)" rx="2" ry="2" />
<text  x="469.72" y="303.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.08%)</title><rect x="685.4" y="389" width="0.9" height="15.0" fill="rgb(218,80,15)" rx="2" ry="2" />
<text  x="688.43" y="399.5" ></text>
</g>
<g >
<title>[libnss_files-2.33.so] (1 samples, 0.03%)</title><rect x="10.0" y="373" width="0.3" height="15.0" fill="rgb(238,90,38)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.03%)</title><rect x="40.1" y="341" width="0.3" height="15.0" fill="rgb(217,94,53)" rx="2" ry="2" />
<text  x="43.06" y="351.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (178 samples, 4.63%)</title><rect x="636.3" y="485" width="54.6" height="15.0" fill="rgb(224,61,49)" rx="2" ry="2" />
<text  x="639.35" y="495.5" >x86_6..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,488 samples, 38.68%)</title><rect x="71.0" y="453" width="456.5" height="15.0" fill="rgb(249,207,26)" rx="2" ry="2" />
<text  x="74.04" y="463.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.03%)</title><rect x="657.8" y="229" width="0.3" height="15.0" fill="rgb(209,176,51)" rx="2" ry="2" />
<text  x="660.82" y="239.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.03%)</title><rect x="615.2" y="341" width="0.3" height="15.0" fill="rgb(207,104,9)" rx="2" ry="2" />
<text  x="618.18" y="351.5" ></text>
</g>
<g >
<title>file_update_time (24 samples, 0.62%)</title><rect x="952.9" y="341" width="7.4" height="15.0" fill="rgb(229,221,44)" rx="2" ry="2" />
<text  x="955.90" y="351.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.10%)</title><rect x="928.1" y="309" width="1.2" height="15.0" fill="rgb(237,189,8)" rx="2" ry="2" />
<text  x="931.05" y="319.5" ></text>
</g>
<g >
<title>arch_call_rest_init (178 samples, 4.63%)</title><rect x="636.3" y="453" width="54.6" height="15.0" fill="rgb(245,72,37)" rx="2" ry="2" />
<text  x="639.35" y="463.5" >arch_..</text>
</g>
<g >
<title>ktime_get (2 samples, 0.05%)</title><rect x="652.6" y="277" width="0.6" height="15.0" fill="rgb(230,133,54)" rx="2" ry="2" />
<text  x="655.60" y="287.5" ></text>
</g>
<g >
<title>pipe_read (9 samples, 0.23%)</title><rect x="498.3" y="373" width="2.8" height="15.0" fill="rgb(242,79,0)" rx="2" ry="2" />
<text  x="501.32" y="383.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="617.0" y="325" width="0.3" height="15.0" fill="rgb(219,159,53)" rx="2" ry="2" />
<text  x="620.02" y="335.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (2 samples, 0.05%)</title><rect x="615.5" y="325" width="0.6" height="15.0" fill="rgb(249,12,54)" rx="2" ry="2" />
<text  x="618.49" y="335.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (2 samples, 0.05%)</title><rect x="39.4" y="85" width="0.7" height="15.0" fill="rgb(250,56,30)" rx="2" ry="2" />
<text  x="42.45" y="95.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (1 samples, 0.03%)</title><rect x="615.2" y="453" width="0.3" height="15.0" fill="rgb(215,83,46)" rx="2" ry="2" />
<text  x="618.18" y="463.5" ></text>
</g>
<g >
<title>remote_function (65 samples, 1.69%)</title><rect x="15.8" y="245" width="20.0" height="15.0" fill="rgb(209,51,22)" rx="2" ry="2" />
<text  x="18.83" y="255.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="617.0" y="341" width="0.3" height="15.0" fill="rgb(218,135,6)" rx="2" ry="2" />
<text  x="620.02" y="351.5" ></text>
</g>
<g >
<title>osq_unlock (29 samples, 0.75%)</title><rect x="457.8" y="293" width="8.9" height="15.0" fill="rgb(216,118,9)" rx="2" ry="2" />
<text  x="460.83" y="303.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (6 samples, 0.16%)</title><rect x="559.1" y="293" width="1.8" height="15.0" fill="rgb(234,200,33)" rx="2" ry="2" />
<text  x="562.05" y="303.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (2 samples, 0.05%)</title><rect x="36.7" y="357" width="0.6" height="15.0" fill="rgb(214,23,15)" rx="2" ry="2" />
<text  x="39.69" y="367.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.03%)</title><rect x="10.3" y="293" width="0.3" height="15.0" fill="rgb(229,92,33)" rx="2" ry="2" />
<text  x="13.31" y="303.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.03%)</title><rect x="1187.2" y="469" width="0.3" height="15.0" fill="rgb(245,27,54)" rx="2" ry="2" />
<text  x="1190.24" y="479.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="615.5" y="245" width="0.3" height="15.0" fill="rgb(245,149,18)" rx="2" ry="2" />
<text  x="618.49" y="255.5" ></text>
</g>
<g >
<title>read@plt (2 samples, 0.05%)</title><rect x="572.5" y="469" width="0.7" height="15.0" fill="rgb(227,16,27)" rx="2" ry="2" />
<text  x="575.55" y="479.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.03%)</title><rect x="635.7" y="277" width="0.3" height="15.0" fill="rgb(214,195,2)" rx="2" ry="2" />
<text  x="638.73" y="287.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.05%)</title><rect x="743.7" y="389" width="0.6" height="15.0" fill="rgb(229,82,35)" rx="2" ry="2" />
<text  x="746.70" y="399.5" ></text>
</g>
<g >
<title>__libc_close (1 samples, 0.03%)</title><rect x="37.3" y="421" width="0.3" height="15.0" fill="rgb(228,6,9)" rx="2" ry="2" />
<text  x="40.30" y="431.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="11.2" y="453" width="0.3" height="15.0" fill="rgb(247,18,13)" rx="2" ry="2" />
<text  x="14.23" y="463.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (3 samples, 0.08%)</title><rect x="514.6" y="309" width="0.9" height="15.0" fill="rgb(234,113,13)" rx="2" ry="2" />
<text  x="517.57" y="319.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.03%)</title><rect x="565.5" y="309" width="0.3" height="15.0" fill="rgb(233,12,1)" rx="2" ry="2" />
<text  x="568.49" y="319.5" ></text>
</g>
<g >
<title>__getpwuid_r (1 samples, 0.03%)</title><rect x="10.0" y="405" width="0.3" height="15.0" fill="rgb(240,149,10)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="556.6" y="325" width="0.3" height="15.0" fill="rgb(228,97,31)" rx="2" ry="2" />
<text  x="559.60" y="335.5" ></text>
</g>
<g >
<title>copy_page_from_iter (100 samples, 2.60%)</title><rect x="920.4" y="341" width="30.7" height="15.0" fill="rgb(232,105,14)" rx="2" ry="2" />
<text  x="923.38" y="351.5" >co..</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (15 samples, 0.39%)</title><rect x="653.8" y="277" width="4.6" height="15.0" fill="rgb(228,225,26)" rx="2" ry="2" />
<text  x="656.83" y="287.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (1 samples, 0.03%)</title><rect x="615.5" y="309" width="0.3" height="15.0" fill="rgb(240,213,2)" rx="2" ry="2" />
<text  x="618.49" y="319.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (61 samples, 1.59%)</title><rect x="617.0" y="421" width="18.7" height="15.0" fill="rgb(222,171,13)" rx="2" ry="2" />
<text  x="620.02" y="431.5" ></text>
</g>
<g >
<title>copyin (9 samples, 0.23%)</title><rect x="946.5" y="309" width="2.7" height="15.0" fill="rgb(253,42,37)" rx="2" ry="2" />
<text  x="949.45" y="319.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (1 samples, 0.03%)</title><rect x="617.0" y="229" width="0.3" height="15.0" fill="rgb(205,4,25)" rx="2" ry="2" />
<text  x="620.02" y="239.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.03%)</title><rect x="566.1" y="293" width="0.3" height="15.0" fill="rgb(241,65,10)" rx="2" ry="2" />
<text  x="569.11" y="303.5" ></text>
</g>
<g >
<title>copy_page_to_iter (233 samples, 6.06%)</title><rect x="232.1" y="341" width="71.4" height="15.0" fill="rgb(230,78,52)" rx="2" ry="2" />
<text  x="235.07" y="351.5" >copy_pag..</text>
</g>
<g >
<title>iov_iter_init (4 samples, 0.10%)</title><rect x="98.0" y="373" width="1.3" height="15.0" fill="rgb(218,146,51)" rx="2" ry="2" />
<text  x="101.03" y="383.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="36.7" y="309" width="0.3" height="15.0" fill="rgb(235,175,49)" rx="2" ry="2" />
<text  x="39.69" y="319.5" ></text>
</g>
<g >
<title>__GI___read (1 samples, 0.03%)</title><rect x="40.4" y="501" width="0.3" height="15.0" fill="rgb(215,42,11)" rx="2" ry="2" />
<text  x="43.37" y="511.5" ></text>
</g>
<g >
<title>touch_atime (18 samples, 0.47%)</title><rect x="492.5" y="341" width="5.5" height="15.0" fill="rgb(221,44,15)" rx="2" ry="2" />
<text  x="495.49" y="351.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.05%)</title><rect x="565.8" y="309" width="0.6" height="15.0" fill="rgb(254,201,39)" rx="2" ry="2" />
<text  x="568.80" y="319.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.05%)</title><rect x="566.7" y="389" width="0.6" height="15.0" fill="rgb(254,53,25)" rx="2" ry="2" />
<text  x="569.72" y="399.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.03%)</title><rect x="40.1" y="389" width="0.3" height="15.0" fill="rgb(251,107,42)" rx="2" ry="2" />
<text  x="43.06" y="399.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.03%)</title><rect x="682.4" y="325" width="0.3" height="15.0" fill="rgb(244,159,54)" rx="2" ry="2" />
<text  x="685.36" y="335.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (1 samples, 0.03%)</title><rect x="635.7" y="309" width="0.3" height="15.0" fill="rgb(250,149,54)" rx="2" ry="2" />
<text  x="638.73" y="319.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="560.6" y="277" width="0.3" height="15.0" fill="rgb(246,94,25)" rx="2" ry="2" />
<text  x="563.58" y="287.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.03%)</title><rect x="687.3" y="293" width="0.3" height="15.0" fill="rgb(244,60,48)" rx="2" ry="2" />
<text  x="690.27" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.03%)</title><rect x="1187.2" y="485" width="0.3" height="15.0" fill="rgb(213,98,14)" rx="2" ry="2" />
<text  x="1190.24" y="495.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (60 samples, 1.56%)</title><rect x="617.3" y="405" width="18.4" height="15.0" fill="rgb(212,175,47)" rx="2" ry="2" />
<text  x="620.33" y="415.5" ></text>
</g>
<g >
<title>__libc_start_main (3 samples, 0.08%)</title><rect x="10.0" y="501" width="0.9" height="15.0" fill="rgb(206,200,42)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (2 samples, 0.05%)</title><rect x="615.5" y="405" width="0.6" height="15.0" fill="rgb(207,140,7)" rx="2" ry="2" />
<text  x="618.49" y="415.5" ></text>
</g>
<g >
<title>osq_unlock (21 samples, 0.55%)</title><rect x="1126.2" y="293" width="6.4" height="15.0" fill="rgb(221,18,44)" rx="2" ry="2" />
<text  x="1129.20" y="303.5" ></text>
</g>
<g >
<title>pick_next_task_idle (2 samples, 0.05%)</title><rect x="687.6" y="357" width="0.6" height="15.0" fill="rgb(219,143,22)" rx="2" ry="2" />
<text  x="690.57" y="367.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (2 samples, 0.05%)</title><rect x="688.2" y="389" width="0.6" height="15.0" fill="rgb(249,127,7)" rx="2" ry="2" />
<text  x="691.19" y="399.5" ></text>
</g>
<g >
<title>ext4_do_flush_completed_IO.isra.0 (1 samples, 0.03%)</title><rect x="615.2" y="437" width="0.3" height="15.0" fill="rgb(235,17,26)" rx="2" ry="2" />
<text  x="618.18" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (27 samples, 0.70%)</title><rect x="600.2" y="485" width="8.2" height="15.0" fill="rgb(222,93,26)" rx="2" ry="2" />
<text  x="603.15" y="495.5" ></text>
</g>
<g >
<title>native_iret (1 samples, 0.03%)</title><rect x="568.6" y="453" width="0.3" height="15.0" fill="rgb(247,31,45)" rx="2" ry="2" />
<text  x="571.56" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_poll (4 samples, 0.10%)</title><rect x="36.1" y="405" width="1.2" height="15.0" fill="rgb(251,140,37)" rx="2" ry="2" />
<text  x="39.07" y="415.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (4 samples, 0.10%)</title><rect x="525.3" y="405" width="1.2" height="15.0" fill="rgb(239,112,0)" rx="2" ry="2" />
<text  x="528.31" y="415.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (136 samples, 3.54%)</title><rect x="638.5" y="357" width="41.7" height="15.0" fill="rgb(253,132,51)" rx="2" ry="2" />
<text  x="641.49" y="367.5" >cpu..</text>
</g>
<g >
<title>__wake_up_common (24 samples, 0.62%)</title><rect x="872.5" y="309" width="7.4" height="15.0" fill="rgb(221,200,23)" rx="2" ry="2" />
<text  x="875.53" y="319.5" ></text>
</g>
<g >
<title>page_cpupid_xchg_last (1 samples, 0.03%)</title><rect x="10.3" y="197" width="0.3" height="15.0" fill="rgb(210,121,47)" rx="2" ry="2" />
<text  x="13.31" y="207.5" ></text>
</g>
<g >
<title>current_time (12 samples, 0.31%)</title><rect x="955.7" y="325" width="3.6" height="15.0" fill="rgb(222,78,4)" rx="2" ry="2" />
<text  x="958.66" y="335.5" ></text>
</g>
<g >
<title>mutex_lock (615 samples, 15.99%)</title><rect x="303.8" y="341" width="188.7" height="15.0" fill="rgb(238,90,43)" rx="2" ry="2" />
<text  x="306.85" y="351.5" >mutex_lock</text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.03%)</title><rect x="682.7" y="309" width="0.3" height="15.0" fill="rgb(246,142,30)" rx="2" ry="2" />
<text  x="685.66" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,486 samples, 38.63%)</title><rect x="727.1" y="453" width="455.8" height="15.0" fill="rgb(254,124,54)" rx="2" ry="2" />
<text  x="730.14" y="463.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>schedule_idle (1 samples, 0.03%)</title><rect x="690.6" y="405" width="0.3" height="15.0" fill="rgb(250,68,21)" rx="2" ry="2" />
<text  x="693.64" y="415.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.03%)</title><rect x="38.8" y="133" width="0.3" height="15.0" fill="rgb(248,188,40)" rx="2" ry="2" />
<text  x="41.83" y="143.5" ></text>
</g>
<g >
<title>generic_write_end (3 samples, 0.08%)</title><rect x="39.1" y="133" width="1.0" height="15.0" fill="rgb(216,218,33)" rx="2" ry="2" />
<text  x="42.14" y="143.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (1 samples, 0.03%)</title><rect x="636.3" y="405" width="0.4" height="15.0" fill="rgb(235,206,41)" rx="2" ry="2" />
<text  x="639.35" y="415.5" ></text>
</g>
<g >
<title>stop_this_handle (1 samples, 0.03%)</title><rect x="38.5" y="101" width="0.3" height="15.0" fill="rgb(243,72,16)" rx="2" ry="2" />
<text  x="41.53" y="111.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.03%)</title><rect x="689.4" y="341" width="0.3" height="15.0" fill="rgb(249,22,0)" rx="2" ry="2" />
<text  x="692.41" y="351.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.03%)</title><rect x="635.7" y="261" width="0.3" height="15.0" fill="rgb(214,56,45)" rx="2" ry="2" />
<text  x="638.73" y="271.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (5 samples, 0.13%)</title><rect x="555.1" y="261" width="1.5" height="15.0" fill="rgb(244,122,34)" rx="2" ry="2" />
<text  x="558.06" y="271.5" ></text>
</g>
<g >
<title>unmap_single_vma (26 samples, 0.68%)</title><rect x="600.5" y="373" width="7.9" height="15.0" fill="rgb(244,19,6)" rx="2" ry="2" />
<text  x="603.46" y="383.5" ></text>
</g>
<g >
<title>rest_init (178 samples, 4.63%)</title><rect x="636.3" y="437" width="54.6" height="15.0" fill="rgb(242,171,32)" rx="2" ry="2" />
<text  x="639.35" y="447.5" >rest_..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (5 samples, 0.13%)</title><rect x="1181.1" y="389" width="1.5" height="15.0" fill="rgb(208,154,2)" rx="2" ry="2" />
<text  x="1184.10" y="399.5" ></text>
</g>
<g >
<title>rw_verify_area (2 samples, 0.05%)</title><rect x="85.8" y="389" width="0.6" height="15.0" fill="rgb(214,85,20)" rx="2" ry="2" />
<text  x="88.76" y="399.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (5 samples, 0.13%)</title><rect x="555.1" y="277" width="1.5" height="15.0" fill="rgb(222,190,38)" rx="2" ry="2" />
<text  x="558.06" y="287.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="10.3" y="309" width="0.3" height="15.0" fill="rgb(222,59,12)" rx="2" ry="2" />
<text  x="13.31" y="319.5" ></text>
</g>
<g >
<title>mutex_spin_on_owner (33 samples, 0.86%)</title><rect x="447.7" y="293" width="10.1" height="15.0" fill="rgb(206,185,43)" rx="2" ry="2" />
<text  x="450.71" y="303.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.05%)</title><rect x="36.7" y="325" width="0.6" height="15.0" fill="rgb(206,186,28)" rx="2" ry="2" />
<text  x="39.69" y="335.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (14 samples, 0.36%)</title><rect x="653.8" y="261" width="4.3" height="15.0" fill="rgb(228,29,28)" rx="2" ry="2" />
<text  x="656.83" y="271.5" ></text>
</g>
<g >
<title>find_busiest_group (5 samples, 0.13%)</title><rect x="655.4" y="197" width="1.5" height="15.0" fill="rgb(205,51,28)" rx="2" ry="2" />
<text  x="658.37" y="207.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.03%)</title><rect x="10.6" y="341" width="0.3" height="15.0" fill="rgb(207,96,35)" rx="2" ry="2" />
<text  x="13.61" y="351.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.03%)</title><rect x="560.9" y="293" width="0.3" height="15.0" fill="rgb(249,63,51)" rx="2" ry="2" />
<text  x="563.89" y="303.5" ></text>
</g>
<g >
<title>__mutex_lock_slowpath (522 samples, 13.57%)</title><rect x="993.7" y="325" width="160.1" height="15.0" fill="rgb(216,162,30)" rx="2" ry="2" />
<text  x="996.69" y="335.5" >__mutex_lock_slowpath</text>
</g>
<g >
<title>pipe_read (1,146 samples, 29.79%)</title><rect x="146.5" y="357" width="351.5" height="15.0" fill="rgb(230,81,51)" rx="2" ry="2" />
<text  x="149.50" y="367.5" >pipe_read</text>
</g>
<g >
<title>mmput (1 samples, 0.03%)</title><rect x="1187.2" y="421" width="0.3" height="15.0" fill="rgb(234,112,15)" rx="2" ry="2" />
<text  x="1190.24" y="431.5" ></text>
</g>
<g >
<title>ext4_ext_map_blocks (1 samples, 0.03%)</title><rect x="615.8" y="277" width="0.3" height="15.0" fill="rgb(208,105,39)" rx="2" ry="2" />
<text  x="618.80" y="287.5" ></text>
</g>
<g >
<title>test_clear_page_writeback (1 samples, 0.03%)</title><rect x="615.2" y="373" width="0.3" height="15.0" fill="rgb(208,92,9)" rx="2" ry="2" />
<text  x="618.18" y="383.5" ></text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.08%)</title><rect x="679.3" y="341" width="0.9" height="15.0" fill="rgb(218,87,34)" rx="2" ry="2" />
<text  x="682.29" y="351.5" ></text>
</g>
<g >
<title>current_time (10 samples, 0.26%)</title><rect x="494.3" y="309" width="3.1" height="15.0" fill="rgb(211,163,32)" rx="2" ry="2" />
<text  x="497.33" y="319.5" ></text>
</g>
<g >
<title>__free_one_page (1 samples, 0.03%)</title><rect x="600.2" y="293" width="0.3" height="15.0" fill="rgb(226,93,54)" rx="2" ry="2" />
<text  x="603.15" y="303.5" ></text>
</g>
<g >
<title>switch_ldt (1 samples, 0.03%)</title><rect x="636.0" y="421" width="0.3" height="15.0" fill="rgb(232,77,26)" rx="2" ry="2" />
<text  x="639.04" y="431.5" ></text>
</g>
<g >
<title>free_unref_page_commit (8 samples, 0.21%)</title><rect x="605.4" y="261" width="2.4" height="15.0" fill="rgb(206,108,18)" rx="2" ry="2" />
<text  x="608.37" y="271.5" ></text>
</g>
<g >
<title>get_page_from_freelist (38 samples, 0.99%)</title><rect x="544.9" y="309" width="11.7" height="15.0" fill="rgb(214,20,45)" rx="2" ry="2" />
<text  x="547.94" y="319.5" ></text>
</g>
<g >
<title>_perf_event_enable (69 samples, 1.79%)</title><rect x="14.6" y="309" width="21.2" height="15.0" fill="rgb(213,158,9)" rx="2" ry="2" />
<text  x="17.60" y="319.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="635.7" y="373" width="0.3" height="15.0" fill="rgb(228,152,40)" rx="2" ry="2" />
<text  x="638.73" y="383.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.03%)</title><rect x="635.7" y="229" width="0.3" height="15.0" fill="rgb(245,80,11)" rx="2" ry="2" />
<text  x="638.73" y="239.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.03%)</title><rect x="558.1" y="309" width="0.3" height="15.0" fill="rgb(205,186,2)" rx="2" ry="2" />
<text  x="561.13" y="319.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.03%)</title><rect x="1171.0" y="309" width="0.3" height="15.0" fill="rgb(217,213,30)" rx="2" ry="2" />
<text  x="1173.98" y="319.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="560.6" y="261" width="0.3" height="15.0" fill="rgb(221,76,19)" rx="2" ry="2" />
<text  x="563.58" y="271.5" ></text>
</g>
<g >
<title>schedule_idle (6 samples, 0.16%)</title><rect x="686.3" y="389" width="1.9" height="15.0" fill="rgb(245,51,53)" rx="2" ry="2" />
<text  x="689.35" y="399.5" ></text>
</g>
<g >
<title>ion (8 samples, 0.21%)</title><rect x="37.6" y="389" width="2.5" height="15.0" fill="rgb(249,85,9)" rx="2" ry="2" />
<text  x="40.61" y="399.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.03%)</title><rect x="657.5" y="229" width="0.3" height="15.0" fill="rgb(233,21,40)" rx="2" ry="2" />
<text  x="660.51" y="239.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (3 samples, 0.08%)</title><rect x="496.5" y="293" width="0.9" height="15.0" fill="rgb(218,150,10)" rx="2" ry="2" />
<text  x="499.48" y="303.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.03%)</title><rect x="644.6" y="181" width="0.3" height="15.0" fill="rgb(226,174,36)" rx="2" ry="2" />
<text  x="647.63" y="191.5" ></text>
</g>
<g >
<title>vfs_write (1,395 samples, 36.26%)</title><rect x="744.6" y="389" width="427.9" height="15.0" fill="rgb(231,98,1)" rx="2" ry="2" />
<text  x="747.62" y="399.5" >vfs_write</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="37.9" y="69" width="0.3" height="15.0" fill="rgb(209,19,51)" rx="2" ry="2" />
<text  x="40.91" y="79.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (3 samples, 0.08%)</title><rect x="959.3" y="325" width="1.0" height="15.0" fill="rgb(235,28,10)" rx="2" ry="2" />
<text  x="962.34" y="335.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="1155.3" y="325" width="0.3" height="15.0" fill="rgb(209,198,26)" rx="2" ry="2" />
<text  x="1158.34" y="335.5" ></text>
</g>
<g >
<title>__mutex_lock_slowpath (486 samples, 12.63%)</title><rect x="341.9" y="325" width="149.1" height="15.0" fill="rgb(208,4,9)" rx="2" ry="2" />
<text  x="344.88" y="335.5" >__mutex_lock_slowpath</text>
</g>
<g >
<title>newidle_balance (3 samples, 0.08%)</title><rect x="686.7" y="341" width="0.9" height="15.0" fill="rgb(248,145,53)" rx="2" ry="2" />
<text  x="689.65" y="351.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.03%)</title><rect x="616.7" y="373" width="0.3" height="15.0" fill="rgb(243,83,52)" rx="2" ry="2" />
<text  x="619.72" y="383.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.05%)</title><rect x="1189.4" y="517" width="0.6" height="15.0" fill="rgb(208,217,22)" rx="2" ry="2" />
<text  x="1192.39" y="527.5" ></text>
</g>
<g >
<title>put_ctx (1 samples, 0.03%)</title><rect x="35.8" y="357" width="0.3" height="15.0" fill="rgb(217,35,51)" rx="2" ry="2" />
<text  x="38.77" y="367.5" ></text>
</g>
<g >
<title>rcu_all_qs (2 samples, 0.05%)</title><rect x="301.7" y="309" width="0.6" height="15.0" fill="rgb(224,212,14)" rx="2" ry="2" />
<text  x="304.70" y="319.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="77.8" y="405" width="0.3" height="15.0" fill="rgb(232,196,49)" rx="2" ry="2" />
<text  x="80.79" y="415.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.03%)</title><rect x="687.3" y="325" width="0.3" height="15.0" fill="rgb(224,136,18)" rx="2" ry="2" />
<text  x="690.27" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (80 samples, 2.08%)</title><rect x="11.5" y="373" width="24.6" height="15.0" fill="rgb(217,173,6)" rx="2" ry="2" />
<text  x="14.53" y="383.5" >_..</text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.03%)</title><rect x="635.7" y="325" width="0.3" height="15.0" fill="rgb(226,7,20)" rx="2" ry="2" />
<text  x="638.73" y="335.5" ></text>
</g>
<g >
<title>wb_do_writeback (2 samples, 0.05%)</title><rect x="615.5" y="437" width="0.6" height="15.0" fill="rgb(244,120,6)" rx="2" ry="2" />
<text  x="618.49" y="447.5" ></text>
</g>
<g >
<title>rw_verify_area (64 samples, 1.66%)</title><rect x="501.1" y="373" width="19.6" height="15.0" fill="rgb(253,134,25)" rx="2" ry="2" />
<text  x="504.08" y="383.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.03%)</title><rect x="10.0" y="437" width="0.3" height="15.0" fill="rgb(241,45,51)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.03%)</title><rect x="689.7" y="325" width="0.3" height="15.0" fill="rgb(227,121,25)" rx="2" ry="2" />
<text  x="692.72" y="335.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.03%)</title><rect x="1171.3" y="325" width="0.3" height="15.0" fill="rgb(215,178,41)" rx="2" ry="2" />
<text  x="1174.29" y="335.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (10 samples, 0.26%)</title><rect x="558.1" y="341" width="3.1" height="15.0" fill="rgb(217,51,51)" rx="2" ry="2" />
<text  x="561.13" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 2.08%)</title><rect x="11.5" y="389" width="24.6" height="15.0" fill="rgb(212,130,10)" rx="2" ry="2" />
<text  x="14.53" y="399.5" >d..</text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="617.0" y="373" width="0.3" height="15.0" fill="rgb(221,29,11)" rx="2" ry="2" />
<text  x="620.02" y="383.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.03%)</title><rect x="607.8" y="277" width="0.3" height="15.0" fill="rgb(227,27,5)" rx="2" ry="2" />
<text  x="610.82" y="287.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.03%)</title><rect x="657.2" y="213" width="0.3" height="15.0" fill="rgb(210,221,18)" rx="2" ry="2" />
<text  x="660.21" y="223.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.03%)</title><rect x="40.1" y="277" width="0.3" height="15.0" fill="rgb(210,38,42)" rx="2" ry="2" />
<text  x="43.06" y="287.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.03%)</title><rect x="679.0" y="341" width="0.3" height="15.0" fill="rgb(241,63,5)" rx="2" ry="2" />
<text  x="681.98" y="351.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (10 samples, 0.26%)</title><rect x="645.5" y="149" width="3.1" height="15.0" fill="rgb(219,48,40)" rx="2" ry="2" />
<text  x="648.55" y="159.5" ></text>
</g>
<g >
<title>ksys_write (3 samples, 0.08%)</title><rect x="1174.0" y="421" width="1.0" height="15.0" fill="rgb(219,39,42)" rx="2" ry="2" />
<text  x="1177.05" y="431.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 1.66%)</title><rect x="16.1" y="149" width="19.7" height="15.0" fill="rgb(250,227,39)" rx="2" ry="2" />
<text  x="19.13" y="159.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.03%)</title><rect x="10.9" y="501" width="0.3" height="15.0" fill="rgb(212,11,49)" rx="2" ry="2" />
<text  x="13.92" y="511.5" ></text>
</g>
<g >
<title>__xa_clear_mark (1 samples, 0.03%)</title><rect x="615.2" y="357" width="0.3" height="15.0" fill="rgb(216,229,33)" rx="2" ry="2" />
<text  x="618.18" y="367.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.03%)</title><rect x="36.7" y="245" width="0.3" height="15.0" fill="rgb(214,168,42)" rx="2" ry="2" />
<text  x="39.69" y="255.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (61 samples, 1.59%)</title><rect x="617.0" y="453" width="18.7" height="15.0" fill="rgb(252,99,11)" rx="2" ry="2" />
<text  x="620.02" y="463.5" ></text>
</g>
<g >
<title>unmap_vmas (26 samples, 0.68%)</title><rect x="600.5" y="389" width="7.9" height="15.0" fill="rgb(254,97,9)" rx="2" ry="2" />
<text  x="603.46" y="399.5" ></text>
</g>
<g >
<title>first_online_pgdat (1 samples, 0.03%)</title><rect x="684.2" y="325" width="0.3" height="15.0" fill="rgb(217,52,43)" rx="2" ry="2" />
<text  x="687.20" y="335.5" ></text>
</g>
<g >
<title>mutex_unlock (78 samples, 2.03%)</title><rect x="122.6" y="357" width="23.9" height="15.0" fill="rgb(225,189,35)" rx="2" ry="2" />
<text  x="125.57" y="367.5" >m..</text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.03%)</title><rect x="40.1" y="357" width="0.3" height="15.0" fill="rgb(211,67,6)" rx="2" ry="2" />
<text  x="43.06" y="367.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (2 samples, 0.05%)</title><rect x="38.2" y="133" width="0.6" height="15.0" fill="rgb(252,128,3)" rx="2" ry="2" />
<text  x="41.22" y="143.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 1.66%)</title><rect x="16.1" y="181" width="19.7" height="15.0" fill="rgb(220,165,25)" rx="2" ry="2" />
<text  x="19.13" y="191.5" ></text>
</g>
<g >
<title>release_pages (15 samples, 0.39%)</title><rect x="603.5" y="293" width="4.6" height="15.0" fill="rgb(208,123,49)" rx="2" ry="2" />
<text  x="606.53" y="303.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.03%)</title><rect x="526.2" y="389" width="0.3" height="15.0" fill="rgb(247,83,5)" rx="2" ry="2" />
<text  x="529.23" y="399.5" ></text>
</g>
<g >
<title>apparmor_file_permission (27 samples, 0.70%)</title><rect x="507.5" y="341" width="8.3" height="15.0" fill="rgb(211,143,37)" rx="2" ry="2" />
<text  x="510.52" y="351.5" ></text>
</g>
<g >
<title>cmd_record (93 samples, 2.42%)</title><rect x="11.5" y="501" width="28.6" height="15.0" fill="rgb(209,11,1)" rx="2" ry="2" />
<text  x="14.53" y="511.5" >cm..</text>
</g>
<g >
<title>newidle_balance (1 samples, 0.03%)</title><rect x="616.7" y="421" width="0.3" height="15.0" fill="rgb(229,31,28)" rx="2" ry="2" />
<text  x="619.72" y="431.5" ></text>
</g>
<g >
<title>clear_page_erms (29 samples, 0.75%)</title><rect x="545.9" y="277" width="8.9" height="15.0" fill="rgb(210,43,47)" rx="2" ry="2" />
<text  x="548.86" y="287.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.03%)</title><rect x="37.6" y="85" width="0.3" height="15.0" fill="rgb(219,117,45)" rx="2" ry="2" />
<text  x="40.61" y="95.5" ></text>
</g>
<g >
<title>ext4_find_extent (1 samples, 0.03%)</title><rect x="615.8" y="261" width="0.3" height="15.0" fill="rgb(233,7,19)" rx="2" ry="2" />
<text  x="618.80" y="271.5" ></text>
</g>
<g >
<title>irq_work_tick (2 samples, 0.05%)</title><rect x="644.0" y="181" width="0.6" height="15.0" fill="rgb(245,83,41)" rx="2" ry="2" />
<text  x="647.02" y="191.5" ></text>
</g>
<g >
<title>__handle_mm_fault (86 samples, 2.24%)</title><rect x="540.3" y="389" width="26.4" height="15.0" fill="rgb(215,39,26)" rx="2" ry="2" />
<text  x="543.34" y="399.5" >_..</text>
</g>
<g >
<title>fsnotify (15 samples, 0.39%)</title><rect x="93.4" y="373" width="4.6" height="15.0" fill="rgb(232,66,31)" rx="2" ry="2" />
<text  x="96.43" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (92 samples, 2.39%)</title><rect x="539.1" y="405" width="28.2" height="15.0" fill="rgb(252,138,3)" rx="2" ry="2" />
<text  x="542.11" y="415.5" >h..</text>
</g>
<g >
<title>native_write_msr (2 samples, 0.05%)</title><rect x="648.0" y="101" width="0.6" height="15.0" fill="rgb(243,47,28)" rx="2" ry="2" />
<text  x="651.00" y="111.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (34 samples, 0.88%)</title><rect x="640.6" y="277" width="10.5" height="15.0" fill="rgb(220,66,40)" rx="2" ry="2" />
<text  x="643.64" y="287.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (1 samples, 0.03%)</title><rect x="635.7" y="389" width="0.3" height="15.0" fill="rgb(235,76,8)" rx="2" ry="2" />
<text  x="638.73" y="399.5" ></text>
</g>
<g >
<title>rcu_irq_exit (1 samples, 0.03%)</title><rect x="658.4" y="309" width="0.3" height="15.0" fill="rgb(206,159,53)" rx="2" ry="2" />
<text  x="661.43" y="319.5" ></text>
</g>
<g >
<title>load_balance (8 samples, 0.21%)</title><rect x="654.4" y="213" width="2.5" height="15.0" fill="rgb(207,10,41)" rx="2" ry="2" />
<text  x="657.45" y="223.5" ></text>
</g>
<g >
<title>mutex_lock (2 samples, 0.05%)</title><rect x="770.4" y="357" width="0.6" height="15.0" fill="rgb(248,150,31)" rx="2" ry="2" />
<text  x="773.39" y="367.5" ></text>
</g>
<g >
<title>initialize_shell_variables (1 samples, 0.03%)</title><rect x="10.0" y="453" width="0.3" height="15.0" fill="rgb(224,108,28)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.03%)</title><rect x="36.7" y="261" width="0.3" height="15.0" fill="rgb(227,154,33)" rx="2" ry="2" />
<text  x="39.69" y="271.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.03%)</title><rect x="233.6" y="325" width="0.3" height="15.0" fill="rgb(218,105,47)" rx="2" ry="2" />
<text  x="236.61" y="335.5" ></text>
</g>
<g >
<title>mutex_lock (637 samples, 16.56%)</title><rect x="960.3" y="341" width="195.3" height="15.0" fill="rgb(225,212,37)" rx="2" ry="2" />
<text  x="963.26" y="351.5" >mutex_lock</text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.03%)</title><rect x="653.2" y="277" width="0.3" height="15.0" fill="rgb(228,127,29)" rx="2" ry="2" />
<text  x="656.22" y="287.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="37.3" y="373" width="0.3" height="15.0" fill="rgb(216,193,15)" rx="2" ry="2" />
<text  x="40.30" y="383.5" ></text>
</g>
<g >
<title>native_apic_mem_write (2 samples, 0.05%)</title><rect x="651.1" y="293" width="0.6" height="15.0" fill="rgb(217,152,43)" rx="2" ry="2" />
<text  x="654.07" y="303.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="744.3" y="389" width="0.3" height="15.0" fill="rgb(253,36,53)" rx="2" ry="2" />
<text  x="747.32" y="399.5" ></text>
</g>
<g >
<title>fsnotify (16 samples, 0.42%)</title><rect x="515.8" y="341" width="4.9" height="15.0" fill="rgb(236,150,5)" rx="2" ry="2" />
<text  x="518.80" y="351.5" ></text>
</g>
<g >
<title>aa_file_perm (1 samples, 0.03%)</title><rect x="1161.5" y="341" width="0.3" height="15.0" fill="rgb(210,154,53)" rx="2" ry="2" />
<text  x="1164.47" y="351.5" ></text>
</g>
<g >
<title>unmap_page_range (26 samples, 0.68%)</title><rect x="600.5" y="357" width="7.9" height="15.0" fill="rgb(236,181,31)" rx="2" ry="2" />
<text  x="603.46" y="367.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (2 samples, 0.05%)</title><rect x="37.6" y="149" width="0.6" height="15.0" fill="rgb(215,65,51)" rx="2" ry="2" />
<text  x="40.61" y="159.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (37 samples, 0.96%)</title><rect x="640.3" y="309" width="11.4" height="15.0" fill="rgb(235,144,37)" rx="2" ry="2" />
<text  x="643.34" y="319.5" ></text>
</g>
<g >
<title>__mutex_lock.constprop.0 (462 samples, 12.01%)</title><rect x="993.7" y="309" width="141.7" height="15.0" fill="rgb(247,118,40)" rx="2" ry="2" />
<text  x="996.69" y="319.5" >__mutex_lock.const..</text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.03%)</title><rect x="635.7" y="245" width="0.3" height="15.0" fill="rgb(252,33,18)" rx="2" ry="2" />
<text  x="638.73" y="255.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.03%)</title><rect x="683.9" y="341" width="0.3" height="15.0" fill="rgb(232,89,24)" rx="2" ry="2" />
<text  x="686.89" y="351.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (7 samples, 0.18%)</title><rect x="527.5" y="453" width="2.1" height="15.0" fill="rgb(243,4,50)" rx="2" ry="2" />
<text  x="530.46" y="463.5" ></text>
</g>
<g >
<title>event_function (65 samples, 1.69%)</title><rect x="15.8" y="229" width="20.0" height="15.0" fill="rgb(230,68,53)" rx="2" ry="2" />
<text  x="18.83" y="239.5" ></text>
</g>
<g >
<title>do_idle (176 samples, 4.57%)</title><rect x="636.7" y="405" width="53.9" height="15.0" fill="rgb(226,219,49)" rx="2" ry="2" />
<text  x="639.65" y="415.5" >do_idle</text>
</g>
<g >
<title>insert_module (1 samples, 0.03%)</title><rect x="10.6" y="357" width="0.3" height="15.0" fill="rgb(220,209,16)" rx="2" ry="2" />
<text  x="13.61" y="367.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (11 samples, 0.29%)</title><rect x="1179.3" y="405" width="3.3" height="15.0" fill="rgb(240,9,3)" rx="2" ry="2" />
<text  x="1182.26" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1187.2" y="501" width="0.3" height="15.0" fill="rgb(230,176,25)" rx="2" ry="2" />
<text  x="1190.24" y="511.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.03%)</title><rect x="37.3" y="309" width="0.3" height="15.0" fill="rgb(225,148,1)" rx="2" ry="2" />
<text  x="40.30" y="319.5" ></text>
</g>
<g >
<title>add_module.constprop.0 (1 samples, 0.03%)</title><rect x="10.6" y="373" width="0.3" height="15.0" fill="rgb(206,96,39)" rx="2" ry="2" />
<text  x="13.61" y="383.5" ></text>
</g>
<g >
<title>mpage_submit_page (1 samples, 0.03%)</title><rect x="615.5" y="293" width="0.3" height="15.0" fill="rgb(251,211,37)" rx="2" ry="2" />
<text  x="618.49" y="303.5" ></text>
</g>
<g >
<title>record__mmap_read_all (8 samples, 0.21%)</title><rect x="37.6" y="469" width="2.5" height="15.0" fill="rgb(215,5,3)" rx="2" ry="2" />
<text  x="40.61" y="479.5" ></text>
</g>
<g >
<title>vm_normal_page (1 samples, 0.03%)</title><rect x="608.1" y="325" width="0.3" height="15.0" fill="rgb(233,0,1)" rx="2" ry="2" />
<text  x="611.13" y="335.5" ></text>
</g>
<g >
<title>apparmor_file_permission (32 samples, 0.83%)</title><rect x="1161.8" y="341" width="9.8" height="15.0" fill="rgb(244,142,24)" rx="2" ry="2" />
<text  x="1164.78" y="351.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.03%)</title><rect x="600.2" y="325" width="0.3" height="15.0" fill="rgb(240,64,52)" rx="2" ry="2" />
<text  x="603.15" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_write (1,601 samples, 41.62%)</title><rect x="695.5" y="469" width="491.1" height="15.0" fill="rgb(249,46,16)" rx="2" ry="2" />
<text  x="698.55" y="479.5" >__GI___libc_write</text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="492.2" y="325" width="0.3" height="15.0" fill="rgb(235,173,14)" rx="2" ry="2" />
<text  x="495.18" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_write (8 samples, 0.21%)</title><rect x="37.6" y="325" width="2.5" height="15.0" fill="rgb(223,27,53)" rx="2" ry="2" />
<text  x="40.61" y="335.5" ></text>
</g>
<g >
<title>start_secondary (63 samples, 1.64%)</title><rect x="617.0" y="501" width="19.3" height="15.0" fill="rgb(212,229,43)" rx="2" ry="2" />
<text  x="620.02" y="511.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.03%)</title><rect x="36.7" y="197" width="0.3" height="15.0" fill="rgb(221,214,22)" rx="2" ry="2" />
<text  x="39.69" y="207.5" ></text>
</g>
<g >
<title>security_file_permission (3 samples, 0.08%)</title><rect x="1171.6" y="373" width="0.9" height="15.0" fill="rgb(228,122,54)" rx="2" ry="2" />
<text  x="1174.60" y="383.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (65 samples, 1.69%)</title><rect x="659.0" y="341" width="20.0" height="15.0" fill="rgb(227,129,41)" rx="2" ry="2" />
<text  x="662.05" y="351.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (80 samples, 2.08%)</title><rect x="573.2" y="517" width="24.5" height="15.0" fill="rgb(235,78,40)" rx="2" ry="2" />
<text  x="576.16" y="527.5" >a..</text>
</g>
<g >
<title>write_to_pipe (1,627 samples, 42.29%)</title><rect x="690.9" y="533" width="499.1" height="15.0" fill="rgb(251,220,9)" rx="2" ry="2" />
<text  x="693.95" y="543.5" >write_to_pipe</text>
</g>
<g >
<title>vfs_write (8 samples, 0.21%)</title><rect x="37.6" y="293" width="2.5" height="15.0" fill="rgb(250,167,36)" rx="2" ry="2" />
<text  x="40.61" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (1 samples, 0.03%)</title><rect x="635.7" y="405" width="0.3" height="15.0" fill="rgb(211,194,12)" rx="2" ry="2" />
<text  x="638.73" y="415.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="11.2" y="485" width="0.3" height="15.0" fill="rgb(209,187,42)" rx="2" ry="2" />
<text  x="14.23" y="495.5" ></text>
</g>
<g >
<title>cpuidle_enter (142 samples, 3.69%)</title><rect x="637.6" y="373" width="43.5" height="15.0" fill="rgb(245,41,6)" rx="2" ry="2" />
<text  x="640.57" y="383.5" >cpui..</text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.03%)</title><rect x="616.7" y="357" width="0.3" height="15.0" fill="rgb(234,6,0)" rx="2" ry="2" />
<text  x="619.72" y="367.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.03%)</title><rect x="10.3" y="229" width="0.3" height="15.0" fill="rgb(242,26,49)" rx="2" ry="2" />
<text  x="13.31" y="239.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.03%)</title><rect x="681.1" y="373" width="0.3" height="15.0" fill="rgb(209,147,28)" rx="2" ry="2" />
<text  x="684.13" y="383.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.03%)</title><rect x="10.3" y="389" width="0.3" height="15.0" fill="rgb(233,154,26)" rx="2" ry="2" />
<text  x="13.31" y="399.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 0.03%)</title><rect x="658.7" y="341" width="0.3" height="15.0" fill="rgb(252,108,17)" rx="2" ry="2" />
<text  x="661.74" y="351.5" ></text>
</g>
<g >
<title>vfs_read (1,416 samples, 36.81%)</title><rect x="86.4" y="389" width="434.3" height="15.0" fill="rgb(235,140,37)" rx="2" ry="2" />
<text  x="89.38" y="399.5" >vfs_read</text>
</g>
<g >
<title>cgroup_throttle_swaprate (3 samples, 0.08%)</title><rect x="556.9" y="341" width="0.9" height="15.0" fill="rgb(225,27,12)" rx="2" ry="2" />
<text  x="559.90" y="351.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="617.0" y="405" width="0.3" height="15.0" fill="rgb(237,32,44)" rx="2" ry="2" />
<text  x="620.02" y="415.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.03%)</title><rect x="10.9" y="469" width="0.3" height="15.0" fill="rgb(227,61,24)" rx="2" ry="2" />
<text  x="13.92" y="479.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.05%)</title><rect x="656.9" y="229" width="0.6" height="15.0" fill="rgb(211,91,34)" rx="2" ry="2" />
<text  x="659.90" y="239.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.03%)</title><rect x="563.0" y="309" width="0.3" height="15.0" fill="rgb(232,122,6)" rx="2" ry="2" />
<text  x="566.04" y="319.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.03%)</title><rect x="655.1" y="197" width="0.3" height="15.0" fill="rgb(236,71,11)" rx="2" ry="2" />
<text  x="658.06" y="207.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.03%)</title><rect x="641.6" y="213" width="0.3" height="15.0" fill="rgb(254,11,17)" rx="2" ry="2" />
<text  x="644.56" y="223.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.03%)</title><rect x="683.0" y="341" width="0.3" height="15.0" fill="rgb(213,77,0)" rx="2" ry="2" />
<text  x="685.97" y="351.5" ></text>
</g>
<g >
<title>generic_perform_write (8 samples, 0.21%)</title><rect x="37.6" y="165" width="2.5" height="15.0" fill="rgb(210,179,18)" rx="2" ry="2" />
<text  x="40.61" y="175.5" ></text>
</g>
<g >
<title>hrtimer_cancel (3 samples, 0.08%)</title><rect x="689.4" y="357" width="0.9" height="15.0" fill="rgb(239,53,25)" rx="2" ry="2" />
<text  x="692.41" y="367.5" ></text>
</g>
<g >
<title>x86_pmu_enable (2 samples, 0.05%)</title><rect x="648.0" y="133" width="0.6" height="15.0" fill="rgb(242,102,8)" rx="2" ry="2" />
<text  x="651.00" y="143.5" ></text>
</g>
<g >
<title>atime_needs_update (1 samples, 0.03%)</title><rect x="231.8" y="341" width="0.3" height="15.0" fill="rgb(213,210,19)" rx="2" ry="2" />
<text  x="234.77" y="351.5" ></text>
</g>
<g >
<title>cpuidle_enter (61 samples, 1.59%)</title><rect x="617.0" y="437" width="18.7" height="15.0" fill="rgb(233,109,13)" rx="2" ry="2" />
<text  x="620.02" y="447.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (8 samples, 0.21%)</title><rect x="37.6" y="197" width="2.5" height="15.0" fill="rgb(225,114,26)" rx="2" ry="2" />
<text  x="40.61" y="207.5" ></text>
</g>
<g >
<title>osq_unlock (3 samples, 0.08%)</title><rect x="489.7" y="309" width="0.9" height="15.0" fill="rgb(246,199,22)" rx="2" ry="2" />
<text  x="492.73" y="319.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (2 samples, 0.05%)</title><rect x="648.0" y="117" width="0.6" height="15.0" fill="rgb(220,198,22)" rx="2" ry="2" />
<text  x="651.00" y="127.5" ></text>
</g>
<g >
<title>__gconv_find_transform (1 samples, 0.03%)</title><rect x="10.6" y="421" width="0.3" height="15.0" fill="rgb(252,229,23)" rx="2" ry="2" />
<text  x="13.61" y="431.5" ></text>
</g>
<g >
<title>_start (1,736 samples, 45.13%)</title><rect x="40.7" y="517" width="532.5" height="15.0" fill="rgb(216,107,7)" rx="2" ry="2" />
<text  x="43.67" y="527.5" >_start</text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.03%)</title><rect x="763.9" y="357" width="0.4" height="15.0" fill="rgb(207,43,37)" rx="2" ry="2" />
<text  x="766.95" y="367.5" ></text>
</g>
<g >
<title>enter_lazy_tlb (1 samples, 0.03%)</title><rect x="37.0" y="309" width="0.3" height="15.0" fill="rgb(230,167,9)" rx="2" ry="2" />
<text  x="39.99" y="319.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.10%)</title><rect x="905.0" y="341" width="1.3" height="15.0" fill="rgb(250,126,35)" rx="2" ry="2" />
<text  x="908.05" y="351.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.03%)</title><rect x="10.9" y="453" width="0.3" height="15.0" fill="rgb(251,111,0)" rx="2" ry="2" />
<text  x="13.92" y="463.5" ></text>
</g>
<g >
<title>__free_one_page (6 samples, 0.16%)</title><rect x="606.0" y="229" width="1.8" height="15.0" fill="rgb(246,180,27)" rx="2" ry="2" />
<text  x="608.98" y="239.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.03%)</title><rect x="616.7" y="389" width="0.3" height="15.0" fill="rgb(206,96,37)" rx="2" ry="2" />
<text  x="619.72" y="399.5" ></text>
</g>
<g >
<title>page_remove_rmap (2 samples, 0.05%)</title><rect x="602.3" y="325" width="0.6" height="15.0" fill="rgb(244,174,3)" rx="2" ry="2" />
<text  x="605.30" y="335.5" ></text>
</g>
<g >
<title>__gconv_load_conf (1 samples, 0.03%)</title><rect x="10.6" y="405" width="0.3" height="15.0" fill="rgb(231,176,32)" rx="2" ry="2" />
<text  x="13.61" y="415.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (6 samples, 0.16%)</title><rect x="762.1" y="357" width="1.8" height="15.0" fill="rgb(219,50,44)" rx="2" ry="2" />
<text  x="765.11" y="367.5" ></text>
</g>
<g >
<title>main (3 samples, 0.08%)</title><rect x="10.0" y="485" width="0.9" height="15.0" fill="rgb(220,194,44)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.08%)</title><rect x="686.7" y="357" width="0.9" height="15.0" fill="rgb(225,42,3)" rx="2" ry="2" />
<text  x="689.65" y="367.5" ></text>
</g>
<g >
<title>do_writepages (2 samples, 0.05%)</title><rect x="615.5" y="357" width="0.6" height="15.0" fill="rgb(214,201,51)" rx="2" ry="2" />
<text  x="618.49" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (60 samples, 1.56%)</title><rect x="640.3" y="325" width="18.4" height="15.0" fill="rgb(213,148,39)" rx="2" ry="2" />
<text  x="643.34" y="335.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (1 samples, 0.03%)</title><rect x="636.7" y="389" width="0.3" height="15.0" fill="rgb(206,23,20)" rx="2" ry="2" />
<text  x="639.65" y="399.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="36.7" y="229" width="0.3" height="15.0" fill="rgb(248,159,44)" rx="2" ry="2" />
<text  x="39.69" y="239.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.03%)</title><rect x="1187.2" y="453" width="0.3" height="15.0" fill="rgb(211,95,19)" rx="2" ry="2" />
<text  x="1190.24" y="463.5" ></text>
</g>
<g >
<title>mutex_unlock (200 samples, 5.20%)</title><rect x="771.0" y="357" width="61.3" height="15.0" fill="rgb(205,221,8)" rx="2" ry="2" />
<text  x="774.00" y="367.5" >mutex_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.08%)</title><rect x="1186.6" y="517" width="0.9" height="15.0" fill="rgb(216,27,11)" rx="2" ry="2" />
<text  x="1189.63" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,470 samples, 38.21%)</title><rect x="732.0" y="437" width="450.9" height="15.0" fill="rgb(225,84,49)" rx="2" ry="2" />
<text  x="735.05" y="447.5" >do_syscall_64</text>
</g>
<g >
<title>__evlist__enable (80 samples, 2.08%)</title><rect x="11.5" y="469" width="24.6" height="15.0" fill="rgb(229,199,42)" rx="2" ry="2" />
<text  x="14.53" y="479.5" >_..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="37.3" y="357" width="0.3" height="15.0" fill="rgb(248,194,21)" rx="2" ry="2" />
<text  x="40.30" y="367.5" ></text>
</g>
<g >
<title>apparmor_file_permission (5 samples, 0.13%)</title><rect x="1159.0" y="357" width="1.6" height="15.0" fill="rgb(233,109,23)" rx="2" ry="2" />
<text  x="1162.02" y="367.5" ></text>
</g>
<g >
<title>perf_mmap__push (8 samples, 0.21%)</title><rect x="37.6" y="437" width="2.5" height="15.0" fill="rgb(222,11,3)" rx="2" ry="2" />
<text  x="40.61" y="447.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (17 samples, 0.44%)</title><rect x="602.9" y="325" width="5.2" height="15.0" fill="rgb(251,40,44)" rx="2" ry="2" />
<text  x="605.91" y="335.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="641.3" y="229" width="0.3" height="15.0" fill="rgb(209,207,10)" rx="2" ry="2" />
<text  x="644.26" y="239.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.03%)</title><rect x="687.3" y="277" width="0.3" height="15.0" fill="rgb(221,221,12)" rx="2" ry="2" />
<text  x="690.27" y="287.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 2.08%)</title><rect x="11.5" y="453" width="24.6" height="15.0" fill="rgb(222,206,4)" rx="2" ry="2" />
<text  x="14.53" y="463.5" >p..</text>
</g>
<g >
<title>__GI___poll (4 samples, 0.10%)</title><rect x="36.1" y="453" width="1.2" height="15.0" fill="rgb(243,217,1)" rx="2" ry="2" />
<text  x="39.07" y="463.5" ></text>
</g>
<g >
<title>lru_cache_add (10 samples, 0.26%)</title><rect x="558.1" y="325" width="3.1" height="15.0" fill="rgb(225,138,14)" rx="2" ry="2" />
<text  x="561.13" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="10.3" y="261" width="0.3" height="15.0" fill="rgb(216,23,45)" rx="2" ry="2" />
<text  x="13.31" y="271.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.03%)</title><rect x="37.3" y="325" width="0.3" height="15.0" fill="rgb(241,53,51)" rx="2" ry="2" />
<text  x="40.30" y="335.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.03%)</title><rect x="617.0" y="261" width="0.3" height="15.0" fill="rgb(241,28,26)" rx="2" ry="2" />
<text  x="620.02" y="271.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (2 samples, 0.05%)</title><rect x="615.5" y="389" width="0.6" height="15.0" fill="rgb(209,198,21)" rx="2" ry="2" />
<text  x="618.49" y="399.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (8 samples, 0.21%)</title><rect x="37.6" y="213" width="2.5" height="15.0" fill="rgb(239,108,47)" rx="2" ry="2" />
<text  x="40.61" y="223.5" ></text>
</g>
<g >
<title>irq_exit_rcu (15 samples, 0.39%)</title><rect x="653.8" y="309" width="4.6" height="15.0" fill="rgb(230,58,12)" rx="2" ry="2" />
<text  x="656.83" y="319.5" ></text>
</g>
<g >
<title>up_read (2 samples, 0.05%)</title><rect x="567.3" y="405" width="0.6" height="15.0" fill="rgb(244,188,24)" rx="2" ry="2" />
<text  x="570.33" y="415.5" ></text>
</g>
<g >
<title>do_sys_poll (4 samples, 0.10%)</title><rect x="36.1" y="389" width="1.2" height="15.0" fill="rgb(228,171,13)" rx="2" ry="2" />
<text  x="39.07" y="399.5" ></text>
</g>
<g >
<title>osq_lock (73 samples, 1.90%)</title><rect x="467.3" y="309" width="22.4" height="15.0" fill="rgb(215,226,8)" rx="2" ry="2" />
<text  x="470.34" y="319.5" >o..</text>
</g>
<g >
<title>osq_unlock (1 samples, 0.03%)</title><rect x="1153.2" y="309" width="0.3" height="15.0" fill="rgb(253,91,34)" rx="2" ry="2" />
<text  x="1156.19" y="319.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.03%)</title><rect x="36.7" y="213" width="0.3" height="15.0" fill="rgb(234,132,5)" rx="2" ry="2" />
<text  x="39.69" y="223.5" ></text>
</g>
<g >
<title>copy_page_from_iter (5 samples, 0.13%)</title><rect x="764.3" y="357" width="1.5" height="15.0" fill="rgb(220,7,48)" rx="2" ry="2" />
<text  x="767.26" y="367.5" ></text>
</g>
<g >
<title>_cond_resched (5 samples, 0.13%)</title><rect x="1153.8" y="325" width="1.5" height="15.0" fill="rgb(215,47,26)" rx="2" ry="2" />
<text  x="1156.81" y="335.5" ></text>
</g>
<g >
<title>new_sync_read (1,301 samples, 33.82%)</title><rect x="99.3" y="373" width="399.0" height="15.0" fill="rgb(239,71,28)" rx="2" ry="2" />
<text  x="102.26" y="383.5" >new_sync_read</text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="12.8" y="325" width="0.3" height="15.0" fill="rgb(221,179,36)" rx="2" ry="2" />
<text  x="15.76" y="335.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.03%)</title><rect x="1182.6" y="405" width="0.3" height="15.0" fill="rgb(219,197,32)" rx="2" ry="2" />
<text  x="1185.64" y="415.5" ></text>
</g>
<g >
<title>profile_tick (1 samples, 0.03%)</title><rect x="642.5" y="213" width="0.3" height="15.0" fill="rgb(209,57,15)" rx="2" ry="2" />
<text  x="645.48" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="40.1" y="501" width="0.3" height="15.0" fill="rgb(220,164,41)" rx="2" ry="2" />
<text  x="43.06" y="511.5" ></text>
</g>
<g >
<title>__libc_start_main (1,615 samples, 41.98%)</title><rect x="691.3" y="501" width="495.3" height="15.0" fill="rgb(208,44,47)" rx="2" ry="2" />
<text  x="694.25" y="511.5" >__libc_start_main</text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.03%)</title><rect x="40.1" y="421" width="0.3" height="15.0" fill="rgb(207,150,48)" rx="2" ry="2" />
<text  x="43.06" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_write (1 samples, 0.03%)</title><rect x="690.9" y="501" width="0.4" height="15.0" fill="rgb(211,194,5)" rx="2" ry="2" />
<text  x="693.95" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.03%)</title><rect x="683.9" y="325" width="0.3" height="15.0" fill="rgb(247,148,18)" rx="2" ry="2" />
<text  x="686.89" y="335.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.03%)</title><rect x="690.3" y="389" width="0.3" height="15.0" fill="rgb(244,135,53)" rx="2" ry="2" />
<text  x="693.33" y="399.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (131 samples, 3.41%)</title><rect x="864.6" y="325" width="40.1" height="15.0" fill="rgb(251,131,13)" rx="2" ry="2" />
<text  x="867.56" y="335.5" >__w..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.03%)</title><rect x="527.2" y="437" width="0.3" height="15.0" fill="rgb(254,87,28)" rx="2" ry="2" />
<text  x="530.15" y="447.5" ></text>
</g>
<g >
<title>__cmd_record (93 samples, 2.42%)</title><rect x="11.5" y="485" width="28.6" height="15.0" fill="rgb(207,82,47)" rx="2" ry="2" />
<text  x="14.53" y="495.5" >__..</text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="10.3" y="277" width="0.3" height="15.0" fill="rgb(216,213,2)" rx="2" ry="2" />
<text  x="13.31" y="287.5" ></text>
</g>
<g >
<title>rcu_all_qs (2 samples, 0.05%)</title><rect x="949.2" y="309" width="0.6" height="15.0" fill="rgb(214,2,30)" rx="2" ry="2" />
<text  x="952.21" y="319.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.03%)</title><rect x="498.0" y="357" width="0.3" height="15.0" fill="rgb(216,96,46)" rx="2" ry="2" />
<text  x="501.01" y="367.5" ></text>
</g>
<g >
<title>mutex_spin_on_owner (1 samples, 0.03%)</title><rect x="467.0" y="309" width="0.3" height="15.0" fill="rgb(245,55,21)" rx="2" ry="2" />
<text  x="470.03" y="319.5" ></text>
</g>
<g >
<title>check_tsc_unstable (1 samples, 0.03%)</title><rect x="636.7" y="373" width="0.3" height="15.0" fill="rgb(215,159,25)" rx="2" ry="2" />
<text  x="639.65" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.91%)</title><rect x="597.7" y="517" width="10.7" height="15.0" fill="rgb(232,203,52)" rx="2" ry="2" />
<text  x="600.70" y="527.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (5 samples, 0.13%)</title><rect x="1175.0" y="421" width="1.5" height="15.0" fill="rgb(228,39,45)" rx="2" ry="2" />
<text  x="1177.97" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (2 samples, 0.05%)</title><rect x="683.9" y="357" width="0.6" height="15.0" fill="rgb(233,205,31)" rx="2" ry="2" />
<text  x="686.89" y="367.5" ></text>
</g>
<g >
<title>__put_user_nocheck_4 (1 samples, 0.03%)</title><rect x="11.2" y="501" width="0.3" height="15.0" fill="rgb(205,64,48)" rx="2" ry="2" />
<text  x="14.23" y="511.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (21 samples, 0.55%)</title><rect x="1176.5" y="421" width="6.4" height="15.0" fill="rgb(231,78,19)" rx="2" ry="2" />
<text  x="1179.50" y="431.5" ></text>
</g>
<g >
<title>all (3,847 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(252,60,21)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="615.5" y="261" width="0.3" height="15.0" fill="rgb(205,60,4)" rx="2" ry="2" />
<text  x="618.49" y="271.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.03%)</title><rect x="11.2" y="517" width="0.3" height="15.0" fill="rgb(222,158,28)" rx="2" ry="2" />
<text  x="14.23" y="527.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.03%)</title><rect x="37.6" y="101" width="0.3" height="15.0" fill="rgb(233,59,32)" rx="2" ry="2" />
<text  x="40.61" y="111.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.03%)</title><rect x="37.3" y="245" width="0.3" height="15.0" fill="rgb(222,101,35)" rx="2" ry="2" />
<text  x="40.30" y="255.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.03%)</title><rect x="40.1" y="261" width="0.3" height="15.0" fill="rgb(210,140,20)" rx="2" ry="2" />
<text  x="43.06" y="271.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.03%)</title><rect x="616.7" y="405" width="0.3" height="15.0" fill="rgb(214,29,22)" rx="2" ry="2" />
<text  x="619.72" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (1 samples, 0.03%)</title><rect x="684.5" y="373" width="0.3" height="15.0" fill="rgb(233,224,33)" rx="2" ry="2" />
<text  x="687.50" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (81 samples, 2.11%)</title><rect x="879.9" y="309" width="24.8" height="15.0" fill="rgb(238,30,54)" rx="2" ry="2" />
<text  x="882.89" y="319.5" >_..</text>
</g>
<g >
<title>cpuidle_idle_call (156 samples, 4.06%)</title><rect x="637.0" y="389" width="47.8" height="15.0" fill="rgb(216,65,6)" rx="2" ry="2" />
<text  x="639.96" y="399.5" >cpui..</text>
</g>
<g >
<title>tick_irq_enter (4 samples, 0.10%)</title><rect x="652.6" y="293" width="1.2" height="15.0" fill="rgb(245,158,12)" rx="2" ry="2" />
<text  x="655.60" y="303.5" ></text>
</g>
<g >
<title>kvfree (1 samples, 0.03%)</title><rect x="37.3" y="261" width="0.3" height="15.0" fill="rgb(213,36,40)" rx="2" ry="2" />
<text  x="40.30" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.03%)</title><rect x="682.4" y="309" width="0.3" height="15.0" fill="rgb(227,209,23)" rx="2" ry="2" />
<text  x="685.36" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (47 samples, 1.22%)</title><rect x="56.6" y="453" width="14.4" height="15.0" fill="rgb(241,82,3)" rx="2" ry="2" />
<text  x="59.62" y="463.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.05%)</title><rect x="635.7" y="437" width="0.6" height="15.0" fill="rgb(221,101,0)" rx="2" ry="2" />
<text  x="638.73" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="36.1" y="421" width="1.2" height="15.0" fill="rgb(231,205,53)" rx="2" ry="2" />
<text  x="39.07" y="431.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.03%)</title><rect x="1153.5" y="309" width="0.3" height="15.0" fill="rgb(229,29,11)" rx="2" ry="2" />
<text  x="1156.50" y="319.5" ></text>
</g>
<g >
<title>wb_workfn (2 samples, 0.05%)</title><rect x="615.5" y="453" width="0.6" height="15.0" fill="rgb(215,93,15)" rx="2" ry="2" />
<text  x="618.49" y="463.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.08%)</title><rect x="616.1" y="469" width="0.9" height="15.0" fill="rgb(211,165,25)" rx="2" ry="2" />
<text  x="619.10" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="904.7" y="325" width="0.3" height="15.0" fill="rgb(243,154,46)" rx="2" ry="2" />
<text  x="907.74" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="710.0" y="453" width="0.3" height="15.0" fill="rgb(245,76,23)" rx="2" ry="2" />
<text  x="712.96" y="463.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.03%)</title><rect x="600.2" y="341" width="0.3" height="15.0" fill="rgb(206,194,8)" rx="2" ry="2" />
<text  x="603.15" y="351.5" ></text>
</g>
<g >
<title>perf (94 samples, 2.44%)</title><rect x="11.5" y="533" width="28.9" height="15.0" fill="rgb(232,25,13)" rx="2" ry="2" />
<text  x="14.53" y="543.5" >perf</text>
</g>
<g >
<title>pagecache_get_page (2 samples, 0.05%)</title><rect x="37.6" y="117" width="0.6" height="15.0" fill="rgb(236,113,21)" rx="2" ry="2" />
<text  x="40.61" y="127.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (2 samples, 0.05%)</title><rect x="497.4" y="309" width="0.6" height="15.0" fill="rgb(241,189,46)" rx="2" ry="2" />
<text  x="500.40" y="319.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.05%)</title><rect x="191.3" y="341" width="0.6" height="15.0" fill="rgb(212,15,24)" rx="2" ry="2" />
<text  x="194.28" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (35 samples, 0.91%)</title><rect x="640.3" y="293" width="10.8" height="15.0" fill="rgb(242,38,42)" rx="2" ry="2" />
<text  x="643.34" y="303.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="658.1" y="261" width="0.3" height="15.0" fill="rgb(209,134,31)" rx="2" ry="2" />
<text  x="661.13" y="271.5" ></text>
</g>
<g >
<title>__bitmap_and (1 samples, 0.03%)</title><rect x="653.8" y="213" width="0.3" height="15.0" fill="rgb(246,215,11)" rx="2" ry="2" />
<text  x="656.83" y="223.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (8 samples, 0.21%)</title><rect x="605.4" y="245" width="2.4" height="15.0" fill="rgb(222,153,53)" rx="2" ry="2" />
<text  x="608.37" y="255.5" ></text>
</g>
<g >
<title>mblen (1 samples, 0.03%)</title><rect x="10.6" y="453" width="0.3" height="15.0" fill="rgb(231,80,23)" rx="2" ry="2" />
<text  x="13.61" y="463.5" ></text>
</g>
<g >
<title>xas_find_conflict (1 samples, 0.03%)</title><rect x="37.6" y="69" width="0.3" height="15.0" fill="rgb(209,81,15)" rx="2" ry="2" />
<text  x="40.61" y="79.5" ></text>
</g>
<g >
<title>copyin (4 samples, 0.10%)</title><rect x="949.8" y="325" width="1.3" height="15.0" fill="rgb(242,23,3)" rx="2" ry="2" />
<text  x="952.83" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (40 samples, 1.04%)</title><rect x="544.3" y="325" width="12.3" height="15.0" fill="rgb(233,149,39)" rx="2" ry="2" />
<text  x="547.33" y="335.5" ></text>
</g>
<g >
<title>_perf_ioctl (76 samples, 1.98%)</title><rect x="12.5" y="341" width="23.3" height="15.0" fill="rgb(227,185,20)" rx="2" ry="2" />
<text  x="15.45" y="351.5" >_..</text>
</g>
<g >
<title>cpuidle_select (8 samples, 0.21%)</title><rect x="681.4" y="373" width="2.5" height="15.0" fill="rgb(245,45,31)" rx="2" ry="2" />
<text  x="684.44" y="383.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.03%)</title><rect x="37.3" y="341" width="0.3" height="15.0" fill="rgb(216,157,21)" rx="2" ry="2" />
<text  x="40.30" y="351.5" ></text>
</g>
<g >
<title>swapper (254 samples, 6.60%)</title><rect x="613.0" y="533" width="77.9" height="15.0" fill="rgb(244,70,18)" rx="2" ry="2" />
<text  x="616.04" y="543.5" >swapper</text>
</g>
<g >
<title>check_cpu_stall (1 samples, 0.03%)</title><rect x="644.9" y="165" width="0.3" height="15.0" fill="rgb(251,67,53)" rx="2" ry="2" />
<text  x="647.94" y="175.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.03%)</title><rect x="1187.2" y="389" width="0.3" height="15.0" fill="rgb(243,4,2)" rx="2" ry="2" />
<text  x="1190.24" y="399.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.03%)</title><rect x="37.9" y="37" width="0.3" height="15.0" fill="rgb(242,140,39)" rx="2" ry="2" />
<text  x="40.91" y="47.5" ></text>
</g>
<g >
<title>ksys_read (1,443 samples, 37.51%)</title><rect x="78.1" y="405" width="442.6" height="15.0" fill="rgb(211,221,11)" rx="2" ry="2" />
<text  x="81.09" y="415.5" >ksys_read</text>
</g>
<g >
<title>aa_file_perm (10 samples, 0.26%)</title><rect x="1168.2" y="325" width="3.1" height="15.0" fill="rgb(230,56,25)" rx="2" ry="2" />
<text  x="1171.22" y="335.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="731.4" y="437" width="0.6" height="15.0" fill="rgb(234,224,25)" rx="2" ry="2" />
<text  x="734.43" y="447.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.05%)</title><rect x="520.7" y="421" width="0.6" height="15.0" fill="rgb(223,107,51)" rx="2" ry="2" />
<text  x="523.71" y="431.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.03%)</title><rect x="655.1" y="181" width="0.3" height="15.0" fill="rgb(238,13,2)" rx="2" ry="2" />
<text  x="658.06" y="191.5" ></text>
</g>
<g >
<title>generic_exec_single (65 samples, 1.69%)</title><rect x="15.8" y="261" width="20.0" height="15.0" fill="rgb(208,187,46)" rx="2" ry="2" />
<text  x="18.83" y="271.5" ></text>
</g>
<g >
<title>copyout (8 samples, 0.21%)</title><rect x="299.2" y="309" width="2.5" height="15.0" fill="rgb(227,5,5)" rx="2" ry="2" />
<text  x="302.25" y="319.5" ></text>
</g>
<g >
<title>ext4_finish_bio (1 samples, 0.03%)</title><rect x="615.2" y="405" width="0.3" height="15.0" fill="rgb(243,94,15)" rx="2" ry="2" />
<text  x="618.18" y="415.5" ></text>
</g>
<g >
<title>fsnotify (11 samples, 0.29%)</title><rect x="754.7" y="373" width="3.4" height="15.0" fill="rgb(252,73,23)" rx="2" ry="2" />
<text  x="757.75" y="383.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (15 samples, 0.39%)</title><rect x="561.2" y="341" width="4.6" height="15.0" fill="rgb(231,42,9)" rx="2" ry="2" />
<text  x="564.20" y="351.5" ></text>
</g>
<g >
<title>read_from_pipe (1,867 samples, 48.53%)</title><rect x="40.4" y="533" width="572.6" height="15.0" fill="rgb(254,174,53)" rx="2" ry="2" />
<text  x="43.37" y="543.5" >read_from_pipe</text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="687.3" y="261" width="0.3" height="15.0" fill="rgb(230,90,47)" rx="2" ry="2" />
<text  x="690.27" y="271.5" ></text>
</g>
<g >
<title>exit_mmap (27 samples, 0.70%)</title><rect x="600.2" y="405" width="8.2" height="15.0" fill="rgb(250,34,39)" rx="2" ry="2" />
<text  x="603.15" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (46 samples, 1.20%)</title><rect x="906.3" y="341" width="14.1" height="15.0" fill="rgb(254,197,11)" rx="2" ry="2" />
<text  x="909.27" y="351.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.03%)</title><rect x="10.9" y="485" width="0.3" height="15.0" fill="rgb(239,109,50)" rx="2" ry="2" />
<text  x="13.92" y="495.5" ></text>
</g>
<g >
<title>scheduler_tick (13 samples, 0.34%)</title><rect x="645.2" y="181" width="4.0" height="15.0" fill="rgb(213,137,12)" rx="2" ry="2" />
<text  x="648.24" y="191.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.03%)</title><rect x="1187.2" y="357" width="0.3" height="15.0" fill="rgb(214,67,54)" rx="2" ry="2" />
<text  x="1190.24" y="367.5" ></text>
</g>
<g >
<title>ksys_write (1,426 samples, 37.07%)</title><rect x="735.1" y="405" width="437.4" height="15.0" fill="rgb(220,72,6)" rx="2" ry="2" />
<text  x="738.12" y="415.5" >ksys_write</text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.03%)</title><rect x="40.1" y="405" width="0.3" height="15.0" fill="rgb(243,45,0)" rx="2" ry="2" />
<text  x="43.06" y="415.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.03%)</title><rect x="85.5" y="389" width="0.3" height="15.0" fill="rgb(243,209,17)" rx="2" ry="2" />
<text  x="88.46" y="399.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (56 samples, 1.46%)</title><rect x="929.3" y="309" width="17.2" height="15.0" fill="rgb(232,144,52)" rx="2" ry="2" />
<text  x="932.28" y="319.5" ></text>
</g>
<g >
<title>bash (5 samples, 0.13%)</title><rect x="10.0" y="533" width="1.5" height="15.0" fill="rgb(229,66,27)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>__ioctl (80 samples, 2.08%)</title><rect x="11.5" y="421" width="24.6" height="15.0" fill="rgb(227,128,38)" rx="2" ry="2" />
<text  x="14.53" y="431.5" >_..</text>
</g>
<g >
<title>__libc_start_main (1,736 samples, 45.13%)</title><rect x="40.7" y="501" width="532.5" height="15.0" fill="rgb(206,10,40)" rx="2" ry="2" />
<text  x="43.67" y="511.5" >__libc_start_main</text>
</g>
<g >
<title>dequeue_task (2 samples, 0.05%)</title><rect x="616.1" y="437" width="0.6" height="15.0" fill="rgb(207,113,43)" rx="2" ry="2" />
<text  x="619.10" y="447.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.03%)</title><rect x="864.3" y="325" width="0.3" height="15.0" fill="rgb(240,155,15)" rx="2" ry="2" />
<text  x="867.25" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (130 samples, 3.38%)</title><rect x="191.9" y="341" width="39.9" height="15.0" fill="rgb(230,125,22)" rx="2" ry="2" />
<text  x="194.89" y="351.5" >_ra..</text>
</g>
<g >
<title>rcu_all_qs (4 samples, 0.10%)</title><rect x="1132.6" y="293" width="1.3" height="15.0" fill="rgb(246,209,37)" rx="2" ry="2" />
<text  x="1135.64" y="303.5" ></text>
</g>
<g >
<title>__writeback_single_inode (2 samples, 0.05%)</title><rect x="615.5" y="373" width="0.6" height="15.0" fill="rgb(231,47,52)" rx="2" ry="2" />
<text  x="618.49" y="383.5" ></text>
</g>
<g >
<title>apparmor_file_permission (5 samples, 0.13%)</title><rect x="502.6" y="357" width="1.5" height="15.0" fill="rgb(230,153,11)" rx="2" ry="2" />
<text  x="505.61" y="367.5" ></text>
</g>
<g >
<title>security_file_permission (54 samples, 1.40%)</title><rect x="504.1" y="357" width="16.6" height="15.0" fill="rgb(216,104,34)" rx="2" ry="2" />
<text  x="507.15" y="367.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.03%)</title><rect x="568.3" y="453" width="0.3" height="15.0" fill="rgb(250,58,17)" rx="2" ry="2" />
<text  x="571.25" y="463.5" ></text>
</g>
<g >
<title>_nss_files_getpwuid_r (1 samples, 0.03%)</title><rect x="10.0" y="389" width="0.3" height="15.0" fill="rgb(241,72,38)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>free_unref_page_list (9 samples, 0.23%)</title><rect x="605.1" y="277" width="2.7" height="15.0" fill="rgb(250,146,29)" rx="2" ry="2" />
<text  x="608.06" y="287.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (2 samples, 0.05%)</title><rect x="523.8" y="421" width="0.6" height="15.0" fill="rgb(244,193,32)" rx="2" ry="2" />
<text  x="526.78" y="431.5" ></text>
</g>
<g >
<title>alloc_pages_vma (43 samples, 1.12%)</title><rect x="543.7" y="341" width="13.2" height="15.0" fill="rgb(229,89,38)" rx="2" ry="2" />
<text  x="546.71" y="351.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.03%)</title><rect x="687.3" y="309" width="0.3" height="15.0" fill="rgb(252,18,53)" rx="2" ry="2" />
<text  x="690.27" y="319.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.03%)</title><rect x="37.3" y="293" width="0.3" height="15.0" fill="rgb(231,50,52)" rx="2" ry="2" />
<text  x="40.30" y="303.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.03%)</title><rect x="538.8" y="389" width="0.3" height="15.0" fill="rgb(218,42,43)" rx="2" ry="2" />
<text  x="541.81" y="399.5" ></text>
</g>
<g >
<title>worker_thread (6 samples, 0.16%)</title><rect x="615.2" y="485" width="1.8" height="15.0" fill="rgb(237,72,19)" rx="2" ry="2" />
<text  x="618.18" y="495.5" ></text>
</g>
<g >
<title>vfs_iter_write (8 samples, 0.21%)</title><rect x="37.6" y="245" width="2.5" height="15.0" fill="rgb(230,90,13)" rx="2" ry="2" />
<text  x="40.61" y="255.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 1.66%)</title><rect x="16.1" y="165" width="19.7" height="15.0" fill="rgb(227,226,31)" rx="2" ry="2" />
<text  x="19.13" y="175.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="617.0" y="357" width="0.3" height="15.0" fill="rgb(254,208,13)" rx="2" ry="2" />
<text  x="620.02" y="367.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.03%)</title><rect x="644.9" y="181" width="0.3" height="15.0" fill="rgb(247,77,35)" rx="2" ry="2" />
<text  x="647.94" y="191.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (139 samples, 3.61%)</title><rect x="862.4" y="341" width="42.6" height="15.0" fill="rgb(221,185,51)" rx="2" ry="2" />
<text  x="865.41" y="351.5" >__wa..</text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.03%)</title><rect x="683.6" y="357" width="0.3" height="15.0" fill="rgb(212,208,7)" rx="2" ry="2" />
<text  x="686.58" y="367.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (5 samples, 0.13%)</title><rect x="1133.9" y="293" width="1.5" height="15.0" fill="rgb(215,183,39)" rx="2" ry="2" />
<text  x="1136.87" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="38.2" y="101" width="0.3" height="15.0" fill="rgb(210,143,15)" rx="2" ry="2" />
<text  x="41.22" y="111.5" ></text>
</g>
<g >
<title>ovl_write_iter (8 samples, 0.21%)</title><rect x="37.6" y="261" width="2.5" height="15.0" fill="rgb(251,134,24)" rx="2" ry="2" />
<text  x="40.61" y="271.5" ></text>
</g>
<g >
<title>_cond_resched (3 samples, 0.08%)</title><rect x="922.5" y="325" width="0.9" height="15.0" fill="rgb(223,34,15)" rx="2" ry="2" />
<text  x="925.53" y="335.5" ></text>
</g>
<g >
<title>cpu_startup_entry (63 samples, 1.64%)</title><rect x="617.0" y="485" width="19.3" height="15.0" fill="rgb(248,110,47)" rx="2" ry="2" />
<text  x="620.02" y="495.5" ></text>
</g>
<g >
<title>__fdget_pos (5 samples, 0.13%)</title><rect x="738.2" y="389" width="1.5" height="15.0" fill="rgb(212,146,31)" rx="2" ry="2" />
<text  x="741.18" y="399.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (178 samples, 4.63%)</title><rect x="636.3" y="501" width="54.6" height="15.0" fill="rgb(236,96,7)" rx="2" ry="2" />
<text  x="639.35" y="511.5" >x86_6..</text>
</g>
<g >
<title>ctx_resched (64 samples, 1.66%)</title><rect x="16.1" y="197" width="19.7" height="15.0" fill="rgb(244,121,29)" rx="2" ry="2" />
<text  x="19.13" y="207.5" ></text>
</g>
<g >
<title>rw_verify_area (44 samples, 1.14%)</title><rect x="1158.1" y="373" width="13.5" height="15.0" fill="rgb(234,98,10)" rx="2" ry="2" />
<text  x="1161.10" y="383.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (194 samples, 5.04%)</title><rect x="239.7" y="309" width="59.5" height="15.0" fill="rgb(232,146,48)" rx="2" ry="2" />
<text  x="242.74" y="319.5" >copy_u..</text>
</g>
<g >
<title>_start (4 samples, 0.10%)</title><rect x="10.0" y="517" width="1.2" height="15.0" fill="rgb(241,93,41)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.03%)</title><rect x="40.1" y="437" width="0.3" height="15.0" fill="rgb(246,12,4)" rx="2" ry="2" />
<text  x="43.06" y="447.5" ></text>
</g>
<g >
<title>exit_mm (27 samples, 0.70%)</title><rect x="600.2" y="437" width="8.2" height="15.0" fill="rgb(234,11,51)" rx="2" ry="2" />
<text  x="603.15" y="447.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (74 samples, 1.92%)</title><rect x="13.1" y="325" width="22.7" height="15.0" fill="rgb(219,116,44)" rx="2" ry="2" />
<text  x="16.07" y="335.5" >p..</text>
</g>
<g >
<title>_cond_resched (1 samples, 0.03%)</title><rect x="1135.4" y="309" width="0.3" height="15.0" fill="rgb(213,172,39)" rx="2" ry="2" />
<text  x="1138.40" y="319.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (241 samples, 6.26%)</title><rect x="617.0" y="517" width="73.9" height="15.0" fill="rgb(210,157,35)" rx="2" ry="2" />
<text  x="620.02" y="527.5" >secondar..</text>
</g>
<g >
<title>__libc_write (8 samples, 0.21%)</title><rect x="37.6" y="373" width="2.5" height="15.0" fill="rgb(234,134,36)" rx="2" ry="2" />
<text  x="40.61" y="383.5" ></text>
</g>
<g >
<title>__GI__nss_files_parse_pwent (1 samples, 0.03%)</title><rect x="10.0" y="357" width="0.3" height="15.0" fill="rgb(222,49,26)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>copy_page_from_iter_iovec (86 samples, 2.24%)</title><rect x="923.4" y="325" width="26.4" height="15.0" fill="rgb(227,113,23)" rx="2" ry="2" />
<text  x="926.45" y="335.5" >c..</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.03%)</title><rect x="641.9" y="229" width="0.3" height="15.0" fill="rgb(217,182,23)" rx="2" ry="2" />
<text  x="644.87" y="239.5" ></text>
</g>
<g >
<title>clear_page_dirty_for_io (1 samples, 0.03%)</title><rect x="615.5" y="277" width="0.3" height="15.0" fill="rgb(212,194,49)" rx="2" ry="2" />
<text  x="618.49" y="287.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (5 samples, 0.13%)</title><rect x="541.9" y="357" width="1.5" height="15.0" fill="rgb(249,178,37)" rx="2" ry="2" />
<text  x="544.87" y="367.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.03%)</title><rect x="554.8" y="277" width="0.3" height="15.0" fill="rgb(233,47,9)" rx="2" ry="2" />
<text  x="557.76" y="287.5" ></text>
</g>
<g >
<title>__mutex_lock.constprop.0 (408 samples, 10.61%)</title><rect x="341.9" y="309" width="125.1" height="15.0" fill="rgb(221,114,31)" rx="2" ry="2" />
<text  x="344.88" y="319.5" >__mutex_lock.co..</text>
</g>
<g >
<title>process_one_work (3 samples, 0.08%)</title><rect x="615.2" y="469" width="0.9" height="15.0" fill="rgb(248,219,21)" rx="2" ry="2" />
<text  x="618.18" y="479.5" ></text>
</g>
<g >
<title>__fget_light (13 samples, 0.34%)</title><rect x="739.7" y="389" width="4.0" height="15.0" fill="rgb(243,138,17)" rx="2" ry="2" />
<text  x="742.72" y="399.5" ></text>
</g>
<g >
<title>__switch_to_asm (1 samples, 0.03%)</title><rect x="614.9" y="517" width="0.3" height="15.0" fill="rgb(235,33,48)" rx="2" ry="2" />
<text  x="617.88" y="527.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (1 samples, 0.03%)</title><rect x="635.7" y="341" width="0.3" height="15.0" fill="rgb(219,7,10)" rx="2" ry="2" />
<text  x="638.73" y="351.5" ></text>
</g>
<g >
<title>clockevents_program_event (2 samples, 0.05%)</title><rect x="650.5" y="245" width="0.6" height="15.0" fill="rgb(207,139,30)" rx="2" ry="2" />
<text  x="653.46" y="255.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (2 samples, 0.05%)</title><rect x="689.7" y="341" width="0.6" height="15.0" fill="rgb(250,203,49)" rx="2" ry="2" />
<text  x="692.72" y="351.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.03%)</title><rect x="649.8" y="261" width="0.4" height="15.0" fill="rgb(211,133,2)" rx="2" ry="2" />
<text  x="652.84" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="650.2" y="261" width="0.3" height="15.0" fill="rgb(254,42,11)" rx="2" ry="2" />
<text  x="653.15" y="271.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.05%)</title><rect x="616.1" y="421" width="0.6" height="15.0" fill="rgb(244,201,44)" rx="2" ry="2" />
<text  x="619.10" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (29 samples, 0.75%)</title><rect x="640.9" y="261" width="8.9" height="15.0" fill="rgb(244,193,16)" rx="2" ry="2" />
<text  x="643.95" y="271.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="600.2" y="373" width="0.3" height="15.0" fill="rgb(235,8,36)" rx="2" ry="2" />
<text  x="603.15" y="383.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 1.66%)</title><rect x="16.1" y="213" width="19.7" height="15.0" fill="rgb(241,226,6)" rx="2" ry="2" />
<text  x="19.13" y="223.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.03%)</title><rect x="616.4" y="389" width="0.3" height="15.0" fill="rgb(250,130,20)" rx="2" ry="2" />
<text  x="619.41" y="399.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.03%)</title><rect x="1125.9" y="261" width="0.3" height="15.0" fill="rgb(253,172,42)" rx="2" ry="2" />
<text  x="1128.89" y="271.5" ></text>
</g>
<g >
<title>mutex_spin_on_owner (2 samples, 0.05%)</title><rect x="1135.7" y="309" width="0.6" height="15.0" fill="rgb(223,58,46)" rx="2" ry="2" />
<text  x="1138.71" y="319.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.03%)</title><rect x="10.3" y="437" width="0.3" height="15.0" fill="rgb(236,193,21)" rx="2" ry="2" />
<text  x="13.31" y="447.5" ></text>
</g>
<g >
<title>main (1,736 samples, 45.13%)</title><rect x="40.7" y="485" width="532.5" height="15.0" fill="rgb(222,122,13)" rx="2" ry="2" />
<text  x="43.67" y="495.5" >main</text>
</g>
<g >
<title>__GI___fork (1 samples, 0.03%)</title><rect x="10.3" y="357" width="0.3" height="15.0" fill="rgb(225,165,15)" rx="2" ry="2" />
<text  x="13.31" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.03%)</title><rect x="640.6" y="245" width="0.3" height="15.0" fill="rgb(205,56,33)" rx="2" ry="2" />
<text  x="643.64" y="255.5" ></text>
</g>
<g >
<title>do_group_exit (27 samples, 0.70%)</title><rect x="600.2" y="469" width="8.2" height="15.0" fill="rgb(207,110,33)" rx="2" ry="2" />
<text  x="603.15" y="479.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (8 samples, 0.21%)</title><rect x="37.6" y="181" width="2.5" height="15.0" fill="rgb(223,53,15)" rx="2" ry="2" />
<text  x="40.61" y="191.5" ></text>
</g>
<g >
<title>irq_enter_rcu (7 samples, 0.18%)</title><rect x="651.7" y="309" width="2.1" height="15.0" fill="rgb(209,9,33)" rx="2" ry="2" />
<text  x="654.68" y="319.5" ></text>
</g>
<g >
<title>ext4_release_io_end (1 samples, 0.03%)</title><rect x="615.2" y="421" width="0.3" height="15.0" fill="rgb(254,167,18)" rx="2" ry="2" />
<text  x="618.18" y="431.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (15 samples, 0.39%)</title><rect x="653.8" y="293" width="4.6" height="15.0" fill="rgb(209,24,34)" rx="2" ry="2" />
<text  x="656.83" y="303.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.03%)</title><rect x="1187.2" y="405" width="0.3" height="15.0" fill="rgb(234,142,12)" rx="2" ry="2" />
<text  x="1190.24" y="415.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (2 samples, 0.05%)</title><rect x="685.7" y="373" width="0.6" height="15.0" fill="rgb(250,194,25)" rx="2" ry="2" />
<text  x="688.73" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_write (2 samples, 0.05%)</title><rect x="730.8" y="437" width="0.6" height="15.0" fill="rgb(232,20,40)" rx="2" ry="2" />
<text  x="733.82" y="447.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.05%)</title><rect x="649.2" y="245" width="0.6" height="15.0" fill="rgb(225,18,24)" rx="2" ry="2" />
<text  x="652.23" y="255.5" ></text>
</g>
<g >
<title>menu_select (6 samples, 0.16%)</title><rect x="681.4" y="357" width="1.9" height="15.0" fill="rgb(243,56,46)" rx="2" ry="2" />
<text  x="684.44" y="367.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.03%)</title><rect x="566.4" y="325" width="0.3" height="15.0" fill="rgb(238,83,7)" rx="2" ry="2" />
<text  x="569.41" y="335.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 0.16%)</title><rect x="686.3" y="373" width="1.9" height="15.0" fill="rgb(227,206,1)" rx="2" ry="2" />
<text  x="689.35" y="383.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.03%)</title><rect x="40.1" y="309" width="0.3" height="15.0" fill="rgb(206,192,7)" rx="2" ry="2" />
<text  x="43.06" y="319.5" ></text>
</g>
<g >
<title>mmput (27 samples, 0.70%)</title><rect x="600.2" y="421" width="8.2" height="15.0" fill="rgb(241,30,28)" rx="2" ry="2" />
<text  x="603.15" y="431.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (1 samples, 0.03%)</title><rect x="39.8" y="37" width="0.3" height="15.0" fill="rgb(220,61,38)" rx="2" ry="2" />
<text  x="42.75" y="47.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.03%)</title><rect x="10.3" y="421" width="0.3" height="15.0" fill="rgb(218,181,51)" rx="2" ry="2" />
<text  x="13.31" y="431.5" ></text>
</g>
<g >
<title>main (1,615 samples, 41.98%)</title><rect x="691.3" y="485" width="495.3" height="15.0" fill="rgb(226,194,3)" rx="2" ry="2" />
<text  x="694.25" y="495.5" >main</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2 samples, 0.05%)</title><rect x="36.7" y="341" width="0.6" height="15.0" fill="rgb(243,163,16)" rx="2" ry="2" />
<text  x="39.69" y="351.5" ></text>
</g>
<g >
<title>getpwuid (1 samples, 0.03%)</title><rect x="10.0" y="421" width="0.3" height="15.0" fill="rgb(250,194,41)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.03%)</title><rect x="654.1" y="213" width="0.3" height="15.0" fill="rgb(232,54,38)" rx="2" ry="2" />
<text  x="657.14" y="223.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="635.7" y="421" width="0.3" height="15.0" fill="rgb(235,117,12)" rx="2" ry="2" />
<text  x="638.73" y="431.5" ></text>
</g>
<g >
<title>leave_mm (2 samples, 0.05%)</title><rect x="680.5" y="357" width="0.6" height="15.0" fill="rgb(220,135,43)" rx="2" ry="2" />
<text  x="683.52" y="367.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.03%)</title><rect x="687.3" y="245" width="0.3" height="15.0" fill="rgb(241,83,38)" rx="2" ry="2" />
<text  x="690.27" y="255.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.03%)</title><rect x="10.3" y="213" width="0.3" height="15.0" fill="rgb(254,186,47)" rx="2" ry="2" />
<text  x="13.31" y="223.5" ></text>
</g>
<g >
<title>kthread (6 samples, 0.16%)</title><rect x="615.2" y="501" width="1.8" height="15.0" fill="rgb(208,220,47)" rx="2" ry="2" />
<text  x="618.18" y="511.5" ></text>
</g>
<g >
<title>rebalance_domains (10 samples, 0.26%)</title><rect x="653.8" y="229" width="3.1" height="15.0" fill="rgb(247,2,32)" rx="2" ry="2" />
<text  x="656.83" y="239.5" ></text>
</g>
<g >
<title>handle_pte_fault (83 samples, 2.16%)</title><rect x="541.3" y="373" width="25.4" height="15.0" fill="rgb(211,68,41)" rx="2" ry="2" />
<text  x="544.26" y="383.5" >h..</text>
</g>
<g >
<title>netif_receive_skb_list_internal (1 samples, 0.03%)</title><rect x="617.0" y="245" width="0.3" height="15.0" fill="rgb(253,40,48)" rx="2" ry="2" />
<text  x="620.02" y="255.5" ></text>
</g>
<g >
<title>security_file_permission (36 samples, 0.94%)</title><rect x="1160.6" y="357" width="11.0" height="15.0" fill="rgb(235,149,40)" rx="2" ry="2" />
<text  x="1163.55" y="367.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.03%)</title><rect x="39.8" y="69" width="0.3" height="15.0" fill="rgb(205,162,51)" rx="2" ry="2" />
<text  x="42.75" y="79.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="657.8" y="245" width="0.3" height="15.0" fill="rgb(205,52,1)" rx="2" ry="2" />
<text  x="660.82" y="255.5" ></text>
</g>
<g >
<title>fdarray__poll (4 samples, 0.10%)</title><rect x="36.1" y="469" width="1.2" height="15.0" fill="rgb(232,141,0)" rx="2" ry="2" />
<text  x="39.07" y="479.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="600.2" y="389" width="0.3" height="15.0" fill="rgb(248,110,51)" rx="2" ry="2" />
<text  x="603.15" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.03%)</title><rect x="10.3" y="341" width="0.3" height="15.0" fill="rgb(249,57,13)" rx="2" ry="2" />
<text  x="13.31" y="351.5" ></text>
</g>
<g >
<title>zap_pte_range (25 samples, 0.65%)</title><rect x="600.8" y="341" width="7.6" height="15.0" fill="rgb(205,201,10)" rx="2" ry="2" />
<text  x="603.77" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.21%)</title><rect x="37.6" y="341" width="2.5" height="15.0" fill="rgb(229,14,9)" rx="2" ry="2" />
<text  x="40.61" y="351.5" ></text>
</g>
</g>
</svg>
