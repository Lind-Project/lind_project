<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1766" onload="init(evt)" viewBox="0 0 1200 1766" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1766.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1749" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1749" > </text>
<g id="frames">
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.18%)</title><rect x="1021.3" y="1525" width="2.2" height="15.0" fill="rgb(243,227,52)" rx="2" ry="2" />
<text  x="1024.27" y="1535.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.18%)</title><rect x="1007.1" y="1461" width="2.2" height="15.0" fill="rgb(231,187,15)" rx="2" ry="2" />
<text  x="1010.12" y="1471.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.09%)</title><rect x="297.4" y="1445" width="1.1" height="15.0" fill="rgb(254,123,18)" rx="2" ry="2" />
<text  x="300.38" y="1455.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (4 samples, 0.37%)</title><rect x="235.3" y="1653" width="4.4" height="15.0" fill="rgb(239,17,52)" rx="2" ry="2" />
<text  x="238.33" y="1663.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.18%)</title><rect x="1023.5" y="325" width="2.1" height="15.0" fill="rgb(239,228,20)" rx="2" ry="2" />
<text  x="1026.45" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.09%)</title><rect x="289.8" y="1541" width="1.0" height="15.0" fill="rgb(224,17,20)" rx="2" ry="2" />
<text  x="292.76" y="1551.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.09%)</title><rect x="1008.2" y="1285" width="1.1" height="15.0" fill="rgb(224,126,45)" rx="2" ry="2" />
<text  x="1011.21" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;alloc::string::String,dashmap::util::SharedValue&lt;usize&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="1022.4" y="1301" width="1.1" height="15.0" fill="rgb(215,57,22)" rx="2" ry="2" />
<text  x="1025.36" y="1311.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.18%)</title><rect x="1023.5" y="373" width="2.1" height="15.0" fill="rgb(219,17,11)" rx="2" ry="2" />
<text  x="1026.45" y="383.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.09%)</title><rect x="296.3" y="1317" width="1.1" height="15.0" fill="rgb(206,56,35)" rx="2" ry="2" />
<text  x="299.29" y="1327.5" ></text>
</g>
<g >
<title>NaClSysFork (4 samples, 0.37%)</title><rect x="235.3" y="1637" width="4.4" height="15.0" fill="rgb(216,80,26)" rx="2" ry="2" />
<text  x="238.33" y="1647.5" ></text>
</g>
<g >
<title>remote_function (1 samples, 0.09%)</title><rect x="103.6" y="1525" width="1.1" height="15.0" fill="rgb(205,180,6)" rx="2" ry="2" />
<text  x="106.62" y="1535.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (1 samples, 0.09%)</title><rect x="288.7" y="1477" width="1.1" height="15.0" fill="rgb(229,110,25)" rx="2" ry="2" />
<text  x="291.67" y="1487.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.09%)</title><rect x="102.5" y="1429" width="1.1" height="15.0" fill="rgb(214,136,3)" rx="2" ry="2" />
<text  x="105.53" y="1439.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (26 samples, 2.40%)</title><rect x="127.6" y="1573" width="28.3" height="15.0" fill="rgb(208,144,39)" rx="2" ry="2" />
<text  x="130.56" y="1583.5" >V..</text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.09%)</title><rect x="101.4" y="1445" width="1.1" height="15.0" fill="rgb(218,206,37)" rx="2" ry="2" />
<text  x="104.44" y="1455.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (74 samples, 6.83%)</title><rect x="335.5" y="1525" width="80.5" height="15.0" fill="rgb(206,166,22)" rx="2" ry="2" />
<text  x="338.48" y="1535.5" >ringbuf::..</text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.18%)</title><rect x="1023.5" y="1157" width="2.1" height="15.0" fill="rgb(238,55,15)" rx="2" ry="2" />
<text  x="1026.45" y="1167.5" ></text>
</g>
<g >
<title>ioctl@plt (1 samples, 0.09%)</title><rect x="14.4" y="1605" width="1.0" height="15.0" fill="rgb(227,126,47)" rx="2" ry="2" />
<text  x="17.35" y="1615.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="1021.3" y="1445" width="1.1" height="15.0" fill="rgb(223,81,41)" rx="2" ry="2" />
<text  x="1024.27" y="1455.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.18%)</title><rect x="1023.5" y="405" width="2.1" height="15.0" fill="rgb(247,58,0)" rx="2" ry="2" />
<text  x="1026.45" y="415.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.09%)</title><rect x="1114.9" y="1637" width="1.1" height="15.0" fill="rgb(241,181,52)" rx="2" ry="2" />
<text  x="1117.89" y="1647.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (34 samples, 3.14%)</title><rect x="239.7" y="1477" width="37.0" height="15.0" fill="rgb(237,200,26)" rx="2" ry="2" />
<text  x="242.69" y="1487.5" >__x..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.09%)</title><rect x="234.2" y="1301" width="1.1" height="15.0" fill="rgb(243,127,37)" rx="2" ry="2" />
<text  x="237.24" y="1311.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="234.2" y="1413" width="1.1" height="15.0" fill="rgb(219,138,25)" rx="2" ry="2" />
<text  x="237.24" y="1423.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (2 samples, 0.18%)</title><rect x="1023.5" y="437" width="2.1" height="15.0" fill="rgb(220,151,54)" rx="2" ry="2" />
<text  x="1026.45" y="447.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.18%)</title><rect x="1023.5" y="965" width="2.1" height="15.0" fill="rgb(250,14,16)" rx="2" ry="2" />
<text  x="1026.45" y="975.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.09%)</title><rect x="102.5" y="1349" width="1.1" height="15.0" fill="rgb(219,101,11)" rx="2" ry="2" />
<text  x="105.53" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="102.5" y="1541" width="1.1" height="15.0" fill="rgb(208,102,1)" rx="2" ry="2" />
<text  x="105.53" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (1 samples, 0.09%)</title><rect x="298.5" y="1477" width="1.1" height="15.0" fill="rgb(235,122,38)" rx="2" ry="2" />
<text  x="301.47" y="1487.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.09%)</title><rect x="102.5" y="1413" width="1.1" height="15.0" fill="rgb(239,81,49)" rx="2" ry="2" />
<text  x="105.53" y="1423.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="285.4" y="1541" width="1.1" height="15.0" fill="rgb(240,62,35)" rx="2" ry="2" />
<text  x="288.41" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.09%)</title><rect x="101.4" y="1525" width="1.1" height="15.0" fill="rgb(228,94,24)" rx="2" ry="2" />
<text  x="104.44" y="1535.5" ></text>
</g>
<g >
<title>BitmapSetBit (2 samples, 0.18%)</title><rect x="237.5" y="1477" width="2.2" height="15.0" fill="rgb(219,55,11)" rx="2" ry="2" />
<text  x="240.51" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (37 samples, 3.41%)</title><rect x="155.9" y="1493" width="40.2" height="15.0" fill="rgb(238,53,13)" rx="2" ry="2" />
<text  x="158.87" y="1503.5" >__x..</text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="12.2" y="1429" width="1.1" height="15.0" fill="rgb(230,142,39)" rx="2" ry="2" />
<text  x="15.18" y="1439.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (129 samples, 11.90%)</title><rect x="276.7" y="1653" width="140.4" height="15.0" fill="rgb(212,19,12)" rx="2" ry="2" />
<text  x="279.70" y="1663.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (10 samples, 0.92%)</title><rect x="108.0" y="1637" width="10.9" height="15.0" fill="rgb(251,164,4)" rx="2" ry="2" />
<text  x="110.97" y="1647.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.09%)</title><rect x="295.2" y="1317" width="1.1" height="15.0" fill="rgb(216,16,8)" rx="2" ry="2" />
<text  x="298.20" y="1327.5" ></text>
</g>
<g >
<title>ksys_read (3 samples, 0.28%)</title><rect x="294.1" y="1445" width="3.3" height="15.0" fill="rgb(235,219,31)" rx="2" ry="2" />
<text  x="297.11" y="1455.5" ></text>
</g>
<g >
<title>start_secondary (63 samples, 5.81%)</title><rect x="1120.3" y="1669" width="68.6" height="15.0" fill="rgb(253,158,2)" rx="2" ry="2" />
<text  x="1123.33" y="1679.5" >start_s..</text>
</g>
<g >
<title>[unknown] (82 samples, 7.56%)</title><rect x="14.4" y="1685" width="89.2" height="15.0" fill="rgb(246,123,40)" rx="2" ry="2" />
<text  x="17.35" y="1695.5" >[unknown]</text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (2 samples, 0.18%)</title><rect x="1023.5" y="1269" width="2.1" height="15.0" fill="rgb(206,163,32)" rx="2" ry="2" />
<text  x="1026.45" y="1279.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="287.6" y="1477" width="1.1" height="15.0" fill="rgb(252,196,42)" rx="2" ry="2" />
<text  x="290.58" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="298.5" y="1509" width="1.1" height="15.0" fill="rgb(206,148,47)" rx="2" ry="2" />
<text  x="301.47" y="1519.5" ></text>
</g>
<g >
<title>step_into (1 samples, 0.09%)</title><rect x="1113.8" y="1573" width="1.1" height="15.0" fill="rgb(231,1,27)" rx="2" ry="2" />
<text  x="1116.80" y="1583.5" ></text>
</g>
<g >
<title>NaClSysExecve (38 samples, 3.51%)</title><rect x="155.9" y="1637" width="41.3" height="15.0" fill="rgb(241,143,2)" rx="2" ry="2" />
<text  x="158.87" y="1647.5" >NaC..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (2 samples, 0.18%)</title><rect x="1021.3" y="1589" width="2.2" height="15.0" fill="rgb(240,52,26)" rx="2" ry="2" />
<text  x="1024.27" y="1599.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.09%)</title><rect x="102.5" y="1333" width="1.1" height="15.0" fill="rgb(248,127,29)" rx="2" ry="2" />
<text  x="105.53" y="1343.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (2 samples, 0.18%)</title><rect x="1023.5" y="245" width="2.1" height="15.0" fill="rgb(209,144,41)" rx="2" ry="2" />
<text  x="1026.45" y="255.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.09%)</title><rect x="1010.4" y="1509" width="1.1" height="15.0" fill="rgb(244,83,19)" rx="2" ry="2" />
<text  x="1013.39" y="1519.5" ></text>
</g>
<g >
<title>[anon] (11 samples, 1.01%)</title><rect x="106.9" y="1685" width="12.0" height="15.0" fill="rgb(223,54,3)" rx="2" ry="2" />
<text  x="109.88" y="1695.5" ></text>
</g>
<g >
<title>ovl_file_accessed.part.0 (1 samples, 0.09%)</title><rect x="295.2" y="1381" width="1.1" height="15.0" fill="rgb(243,26,34)" rx="2" ry="2" />
<text  x="298.20" y="1391.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::ser::Serialize for dashmap::DashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.09%)</title><rect x="1022.4" y="1365" width="1.1" height="15.0" fill="rgb(222,83,13)" rx="2" ry="2" />
<text  x="1025.36" y="1375.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_inner (2 samples, 0.18%)</title><rect x="1023.5" y="1477" width="2.1" height="15.0" fill="rgb(231,166,54)" rx="2" ry="2" />
<text  x="1026.45" y="1487.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.09%)</title><rect x="872.1" y="1621" width="1.1" height="15.0" fill="rgb(222,104,20)" rx="2" ry="2" />
<text  x="875.14" y="1631.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 5.90%)</title><rect x="29.6" y="1429" width="69.7" height="15.0" fill="rgb(252,5,15)" rx="2" ry="2" />
<text  x="32.59" y="1439.5" >remote_..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.09%)</title><rect x="297.4" y="1461" width="1.1" height="15.0" fill="rgb(240,78,10)" rx="2" ry="2" />
<text  x="300.38" y="1471.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.09%)</title><rect x="1010.4" y="1541" width="1.1" height="15.0" fill="rgb(217,80,34)" rx="2" ry="2" />
<text  x="1013.39" y="1551.5" ></text>
</g>
<g >
<title>write (1 samples, 0.09%)</title><rect x="102.5" y="1557" width="1.1" height="15.0" fill="rgb(237,135,48)" rx="2" ry="2" />
<text  x="105.53" y="1567.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.09%)</title><rect x="285.4" y="1509" width="1.1" height="15.0" fill="rgb(254,30,16)" rx="2" ry="2" />
<text  x="288.41" y="1519.5" ></text>
</g>
<g >
<title>unmap_single_vma (34 samples, 3.14%)</title><rect x="239.7" y="1349" width="37.0" height="15.0" fill="rgb(231,4,45)" rx="2" ry="2" />
<text  x="242.69" y="1359.5" >unm..</text>
</g>
<g >
<title>[libc.so.6] (8 samples, 0.74%)</title><rect x="1011.5" y="1669" width="8.7" height="15.0" fill="rgb(221,75,4)" rx="2" ry="2" />
<text  x="1014.48" y="1679.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.09%)</title><rect x="155.9" y="1381" width="1.1" height="15.0" fill="rgb(222,194,3)" rx="2" ry="2" />
<text  x="158.87" y="1391.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.09%)</title><rect x="973.4" y="1493" width="1.1" height="15.0" fill="rgb(237,72,46)" rx="2" ry="2" />
<text  x="976.38" y="1503.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (69 samples, 6.37%)</title><rect x="24.2" y="1509" width="75.1" height="15.0" fill="rgb(233,181,41)" rx="2" ry="2" />
<text  x="27.15" y="1519.5" >perf_eve..</text>
</g>
<g >
<title>__evlist__disable (1 samples, 0.09%)</title><rect x="14.4" y="1653" width="1.0" height="15.0" fill="rgb(241,24,31)" rx="2" ry="2" />
<text  x="17.35" y="1663.5" ></text>
</g>
<g >
<title>shrink_slab_memcg (1 samples, 0.09%)</title><rect x="1119.2" y="1573" width="1.1" height="15.0" fill="rgb(243,98,33)" rx="2" ry="2" />
<text  x="1122.24" y="1583.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="234.2" y="1397" width="1.1" height="15.0" fill="rgb(229,32,51)" rx="2" ry="2" />
<text  x="237.24" y="1407.5" ></text>
</g>
<g >
<title>down_write_killable (36 samples, 3.32%)</title><rect x="157.0" y="1461" width="39.1" height="15.0" fill="rgb(244,78,17)" rx="2" ry="2" />
<text  x="159.96" y="1471.5" >dow..</text>
</g>
<g >
<title>perf_evsel__run_ioctl (1 samples, 0.09%)</title><rect x="14.4" y="1621" width="1.0" height="15.0" fill="rgb(217,226,28)" rx="2" ry="2" />
<text  x="17.35" y="1631.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.09%)</title><rect x="13.3" y="1525" width="1.1" height="15.0" fill="rgb(211,42,33)" rx="2" ry="2" />
<text  x="16.27" y="1535.5" ></text>
</g>
<g >
<title>[unknown]  (207 samples, 19.10%)</title><rect x="781.8" y="1685" width="225.3" height="15.0" fill="rgb(211,145,18)" rx="2" ry="2" />
<text  x="784.79" y="1695.5" >[unknown] </text>
</g>
<g >
<title>menu_select (2 samples, 0.18%)</title><rect x="1184.6" y="1589" width="2.1" height="15.0" fill="rgb(239,177,18)" rx="2" ry="2" />
<text  x="1187.56" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (68 samples, 6.27%)</title><rect x="342.0" y="1477" width="74.0" height="15.0" fill="rgb(212,139,23)" rx="2" ry="2" />
<text  x="345.01" y="1487.5" >[libc.so..</text>
</g>
<g >
<title>unmap_region (34 samples, 3.14%)</title><rect x="239.7" y="1381" width="37.0" height="15.0" fill="rgb(248,16,51)" rx="2" ry="2" />
<text  x="242.69" y="1391.5" >unm..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="13.3" y="1685" width="1.1" height="15.0" fill="rgb(248,69,36)" rx="2" ry="2" />
<text  x="16.27" y="1695.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.09%)</title><rect x="1022.4" y="1397" width="1.1" height="15.0" fill="rgb(241,197,31)" rx="2" ry="2" />
<text  x="1025.36" y="1407.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (110 samples, 10.15%)</title><rect x="868.9" y="1669" width="119.7" height="15.0" fill="rgb(216,22,43)" rx="2" ry="2" />
<text  x="871.87" y="1679.5" >asm_exc_page_f..</text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.18%)</title><rect x="1007.1" y="1477" width="2.2" height="15.0" fill="rgb(210,107,26)" rx="2" ry="2" />
<text  x="1010.12" y="1487.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.09%)</title><rect x="100.4" y="1557" width="1.0" height="15.0" fill="rgb(209,23,26)" rx="2" ry="2" />
<text  x="103.35" y="1567.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (3 samples, 0.28%)</title><rect x="286.5" y="1557" width="3.3" height="15.0" fill="rgb(208,211,9)" rx="2" ry="2" />
<text  x="289.49" y="1567.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (34 samples, 3.14%)</title><rect x="239.7" y="1317" width="37.0" height="15.0" fill="rgb(237,173,16)" rx="2" ry="2" />
<text  x="242.69" y="1327.5" >zap..</text>
</g>
<g >
<title>new_sync_write (1 samples, 0.09%)</title><rect x="101.4" y="1477" width="1.1" height="15.0" fill="rgb(253,75,53)" rx="2" ry="2" />
<text  x="104.44" y="1487.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.09%)</title><rect x="1068.1" y="1493" width="1.1" height="15.0" fill="rgb(228,205,44)" rx="2" ry="2" />
<text  x="1071.08" y="1503.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.09%)</title><rect x="101.4" y="1381" width="1.1" height="15.0" fill="rgb(254,171,10)" rx="2" ry="2" />
<text  x="104.44" y="1391.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (1 samples, 0.09%)</title><rect x="1022.4" y="1381" width="1.1" height="15.0" fill="rgb(210,145,11)" rx="2" ry="2" />
<text  x="1025.36" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.09%)</title><rect x="1114.9" y="1653" width="1.1" height="15.0" fill="rgb(215,201,53)" rx="2" ry="2" />
<text  x="1117.89" y="1663.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (7 samples, 0.65%)</title><rect x="290.8" y="1525" width="7.7" height="15.0" fill="rgb(235,6,43)" rx="2" ry="2" />
<text  x="293.85" y="1535.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (1 samples, 0.09%)</title><rect x="289.8" y="1573" width="1.0" height="15.0" fill="rgb(243,58,31)" rx="2" ry="2" />
<text  x="292.76" y="1583.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (22 samples, 2.03%)</title><rect x="311.5" y="1557" width="24.0" height="15.0" fill="rgb(216,111,28)" rx="2" ry="2" />
<text  x="314.53" y="1567.5" >r..</text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::with_capacity_and_hasher (2 samples, 0.18%)</title><rect x="1023.5" y="485" width="2.1" height="15.0" fill="rgb(244,13,17)" rx="2" ry="2" />
<text  x="1026.45" y="495.5" ></text>
</g>
<g >
<title>clear_page_erms (25 samples, 2.31%)</title><rect x="922.2" y="1509" width="27.2" height="15.0" fill="rgb(205,16,24)" rx="2" ry="2" />
<text  x="925.21" y="1519.5" >c..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.09%)</title><rect x="780.7" y="1509" width="1.1" height="15.0" fill="rgb(244,30,20)" rx="2" ry="2" />
<text  x="783.70" y="1519.5" ></text>
</g>
<g >
<title>get_new_window_size (2 samples, 0.18%)</title><rect x="11.1" y="1557" width="2.2" height="15.0" fill="rgb(237,183,15)" rx="2" ry="2" />
<text  x="14.09" y="1567.5" ></text>
</g>
<g >
<title>new_sync_read (2 samples, 0.18%)</title><rect x="295.2" y="1413" width="2.2" height="15.0" fill="rgb(246,27,23)" rx="2" ry="2" />
<text  x="298.20" y="1423.5" ></text>
</g>
<g >
<title>_perf_ioctl (1 samples, 0.09%)</title><rect x="103.6" y="1621" width="1.1" height="15.0" fill="rgb(207,72,20)" rx="2" ry="2" />
<text  x="106.62" y="1631.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (30 samples, 2.77%)</title><rect x="123.2" y="1637" width="32.7" height="15.0" fill="rgb(207,107,25)" rx="2" ry="2" />
<text  x="126.21" y="1647.5" >Na..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.18%)</title><rect x="1023.5" y="453" width="2.1" height="15.0" fill="rgb(220,100,26)" rx="2" ry="2" />
<text  x="1026.45" y="463.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.28%)</title><rect x="455.2" y="1557" width="3.3" height="15.0" fill="rgb(235,77,54)" rx="2" ry="2" />
<text  x="458.22" y="1567.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.09%)</title><rect x="15.4" y="1541" width="1.1" height="15.0" fill="rgb(234,75,22)" rx="2" ry="2" />
<text  x="18.44" y="1551.5" ></text>
</g>
<g >
<title>ksys_lseek (1 samples, 0.09%)</title><rect x="298.5" y="1461" width="1.1" height="15.0" fill="rgb(254,166,10)" rx="2" ry="2" />
<text  x="301.47" y="1471.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (2 samples, 0.18%)</title><rect x="1007.1" y="1653" width="2.2" height="15.0" fill="rgb(245,224,53)" rx="2" ry="2" />
<text  x="1010.12" y="1663.5" ></text>
</g>
<g >
<title>free_swap_cache (1 samples, 0.09%)</title><rect x="275.6" y="1269" width="1.1" height="15.0" fill="rgb(245,194,52)" rx="2" ry="2" />
<text  x="278.61" y="1279.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.09%)</title><rect x="1008.2" y="1365" width="1.1" height="15.0" fill="rgb(221,170,46)" rx="2" ry="2" />
<text  x="1011.21" y="1375.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.18%)</title><rect x="1023.5" y="1285" width="2.1" height="15.0" fill="rgb(225,52,46)" rx="2" ry="2" />
<text  x="1026.45" y="1295.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (2 samples, 0.18%)</title><rect x="1023.5" y="901" width="2.1" height="15.0" fill="rgb(238,178,18)" rx="2" ry="2" />
<text  x="1026.45" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (1 samples, 0.09%)</title><rect x="103.6" y="1653" width="1.1" height="15.0" fill="rgb(222,89,27)" rx="2" ry="2" />
<text  x="106.62" y="1663.5" ></text>
</g>
<g >
<title>mutex_unlock (5 samples, 0.46%)</title><rect x="18.7" y="1509" width="5.5" height="15.0" fill="rgb(233,141,45)" rx="2" ry="2" />
<text  x="21.71" y="1519.5" ></text>
</g>
<g >
<title>NaClVmmapAddWithOverwrite (1 samples, 0.09%)</title><rect x="1009.3" y="1653" width="1.1" height="15.0" fill="rgb(222,124,45)" rx="2" ry="2" />
<text  x="1012.30" y="1663.5" ></text>
</g>
<g >
<title>&lt;dashmap::serde::DashMapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (2 samples, 0.18%)</title><rect x="1023.5" y="501" width="2.1" height="15.0" fill="rgb(252,46,25)" rx="2" ry="2" />
<text  x="1026.45" y="511.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.09%)</title><rect x="1008.2" y="1333" width="1.1" height="15.0" fill="rgb(244,47,28)" rx="2" ry="2" />
<text  x="1011.21" y="1343.5" ></text>
</g>
<g >
<title>main (5 samples, 0.46%)</title><rect x="1020.2" y="1637" width="5.4" height="15.0" fill="rgb(224,223,2)" rx="2" ry="2" />
<text  x="1023.18" y="1647.5" ></text>
</g>
<g >
<title>__do_fault (2 samples, 0.18%)</title><rect x="1007.1" y="1413" width="2.2" height="15.0" fill="rgb(211,109,54)" rx="2" ry="2" />
<text  x="1010.12" y="1423.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt; (1 samples, 0.09%)</title><rect x="1022.4" y="1333" width="1.1" height="15.0" fill="rgb(220,224,34)" rx="2" ry="2" />
<text  x="1025.36" y="1343.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="1010.4" y="1493" width="1.1" height="15.0" fill="rgb(242,172,7)" rx="2" ry="2" />
<text  x="1013.39" y="1503.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (35 samples, 3.23%)</title><rect x="197.2" y="1621" width="38.1" height="15.0" fill="rgb(228,195,16)" rx="2" ry="2" />
<text  x="200.23" y="1631.5" >NaC..</text>
</g>
<g >
<title>__libc_start_main (5 samples, 0.46%)</title><rect x="1020.2" y="1669" width="5.4" height="15.0" fill="rgb(229,212,40)" rx="2" ry="2" />
<text  x="1023.18" y="1679.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="28.5" y="1413" width="1.1" height="15.0" fill="rgb(242,16,46)" rx="2" ry="2" />
<text  x="31.51" y="1423.5" ></text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force (2 samples, 0.18%)</title><rect x="1023.5" y="1557" width="2.1" height="15.0" fill="rgb(229,5,36)" rx="2" ry="2" />
<text  x="1026.45" y="1567.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.09%)</title><rect x="977.7" y="1525" width="1.1" height="15.0" fill="rgb(235,110,49)" rx="2" ry="2" />
<text  x="980.73" y="1535.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.18%)</title><rect x="1023.5" y="341" width="2.1" height="15.0" fill="rgb(209,14,43)" rx="2" ry="2" />
<text  x="1026.45" y="351.5" ></text>
</g>
<g >
<title>pud_val (1 samples, 0.09%)</title><rect x="982.1" y="1605" width="1.1" height="15.0" fill="rgb(210,225,27)" rx="2" ry="2" />
<text  x="985.08" y="1615.5" ></text>
</g>
<g >
<title>NaClSysExecv (38 samples, 3.51%)</title><rect x="155.9" y="1621" width="41.3" height="15.0" fill="rgb(245,3,25)" rx="2" ry="2" />
<text  x="158.87" y="1631.5" >NaC..</text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.09%)</title><rect x="1068.1" y="1509" width="1.1" height="15.0" fill="rgb(234,180,16)" rx="2" ry="2" />
<text  x="1071.08" y="1519.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.18%)</title><rect x="974.5" y="1509" width="2.1" height="15.0" fill="rgb(213,73,28)" rx="2" ry="2" />
<text  x="977.46" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="1010.4" y="1637" width="1.1" height="15.0" fill="rgb(218,224,43)" rx="2" ry="2" />
<text  x="1013.39" y="1647.5" ></text>
</g>
<g >
<title>Process1Operand (1 samples, 0.09%)</title><rect x="154.8" y="1557" width="1.1" height="15.0" fill="rgb(210,2,19)" rx="2" ry="2" />
<text  x="157.78" y="1567.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.09%)</title><rect x="155.9" y="1365" width="1.1" height="15.0" fill="rgb(223,16,14)" rx="2" ry="2" />
<text  x="158.87" y="1375.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.09%)</title><rect x="1020.2" y="1525" width="1.1" height="15.0" fill="rgb(213,187,15)" rx="2" ry="2" />
<text  x="1023.18" y="1535.5" ></text>
</g>
<g >
<title>put_ctx (1 samples, 0.09%)</title><rect x="99.3" y="1525" width="1.1" height="15.0" fill="rgb(233,90,51)" rx="2" ry="2" />
<text  x="102.26" y="1535.5" ></text>
</g>
<g >
<title>lind_mmap (34 samples, 3.14%)</title><rect x="239.7" y="1605" width="37.0" height="15.0" fill="rgb(219,171,47)" rx="2" ry="2" />
<text  x="242.69" y="1615.5" >lin..</text>
</g>
<g >
<title>[libreadline.so.8.1] (1 samples, 0.09%)</title><rect x="11.1" y="1509" width="1.1" height="15.0" fill="rgb(221,58,49)" rx="2" ry="2" />
<text  x="14.09" y="1519.5" ></text>
</g>
<g >
<title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.18%)</title><rect x="1023.5" y="165" width="2.1" height="15.0" fill="rgb(240,3,48)" rx="2" ry="2" />
<text  x="1026.45" y="175.5" ></text>
</g>
<g >
<title>NaClSysExit (35 samples, 3.23%)</title><rect x="197.2" y="1637" width="38.1" height="15.0" fill="rgb(206,21,44)" rx="2" ry="2" />
<text  x="200.23" y="1647.5" >NaC..</text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::de::Deserialize for dashmap::DashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.18%)</title><rect x="1023.5" y="613" width="2.1" height="15.0" fill="rgb(219,147,23)" rx="2" ry="2" />
<text  x="1026.45" y="623.5" ></text>
</g>
<g >
<title>process_vm_rw (2 samples, 0.18%)</title><rect x="1007.1" y="1573" width="2.2" height="15.0" fill="rgb(234,125,28)" rx="2" ry="2" />
<text  x="1010.12" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34 samples, 3.14%)</title><rect x="239.7" y="1509" width="37.0" height="15.0" fill="rgb(226,154,52)" rx="2" ry="2" />
<text  x="242.69" y="1519.5" >ent..</text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.09%)</title><rect x="196.1" y="1525" width="1.1" height="15.0" fill="rgb(228,188,5)" rx="2" ry="2" />
<text  x="199.14" y="1535.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.28%)</title><rect x="455.2" y="1541" width="3.3" height="15.0" fill="rgb(215,122,28)" rx="2" ry="2" />
<text  x="458.22" y="1551.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (10 samples, 0.92%)</title><rect x="657.7" y="1525" width="10.9" height="15.0" fill="rgb(214,133,13)" rx="2" ry="2" />
<text  x="660.69" y="1535.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (10 samples, 0.92%)</title><rect x="108.0" y="1653" width="10.9" height="15.0" fill="rgb(238,133,20)" rx="2" ry="2" />
<text  x="110.97" y="1663.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.09%)</title><rect x="1068.1" y="1477" width="1.1" height="15.0" fill="rgb(216,100,20)" rx="2" ry="2" />
<text  x="1071.08" y="1487.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 5.90%)</title><rect x="29.6" y="1381" width="69.7" height="15.0" fill="rgb(215,192,49)" rx="2" ry="2" />
<text  x="32.59" y="1391.5" >ctx_res..</text>
</g>
<g >
<title>CompareAndSwap (1 samples, 0.09%)</title><rect x="122.1" y="1637" width="1.1" height="15.0" fill="rgb(222,221,24)" rx="2" ry="2" />
<text  x="125.12" y="1647.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (4 samples, 0.37%)</title><rect x="235.3" y="1589" width="4.4" height="15.0" fill="rgb(224,125,18)" rx="2" ry="2" />
<text  x="238.33" y="1599.5" ></text>
</g>
<g >
<title>process_synthesized_event (1 samples, 0.09%)</title><rect x="101.4" y="1621" width="1.1" height="15.0" fill="rgb(226,171,32)" rx="2" ry="2" />
<text  x="104.44" y="1631.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.09%)</title><rect x="102.5" y="1381" width="1.1" height="15.0" fill="rgb(231,31,47)" rx="2" ry="2" />
<text  x="105.53" y="1391.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (2 samples, 0.18%)</title><rect x="1023.5" y="1541" width="2.1" height="15.0" fill="rgb(231,92,54)" rx="2" ry="2" />
<text  x="1026.45" y="1551.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="287.6" y="1493" width="1.1" height="15.0" fill="rgb(229,98,44)" rx="2" ry="2" />
<text  x="290.58" y="1503.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.09%)</title><rect x="1067.0" y="1493" width="1.1" height="15.0" fill="rgb(244,200,36)" rx="2" ry="2" />
<text  x="1069.99" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.09%)</title><rect x="886.3" y="1573" width="1.1" height="15.0" fill="rgb(233,137,20)" rx="2" ry="2" />
<text  x="889.29" y="1583.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (13 samples, 1.20%)</title><rect x="962.5" y="1557" width="14.1" height="15.0" fill="rgb(251,55,34)" rx="2" ry="2" />
<text  x="965.49" y="1567.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (2 samples, 0.18%)</title><rect x="1023.5" y="1221" width="2.1" height="15.0" fill="rgb(250,52,13)" rx="2" ry="2" />
<text  x="1026.45" y="1231.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (2 samples, 0.18%)</title><rect x="1023.5" y="549" width="2.1" height="15.0" fill="rgb(209,148,43)" rx="2" ry="2" />
<text  x="1026.45" y="559.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.18%)</title><rect x="1023.5" y="773" width="2.1" height="15.0" fill="rgb(241,189,28)" rx="2" ry="2" />
<text  x="1026.45" y="783.5" ></text>
</g>
<g >
<title>irqentry_enter (1 samples, 0.09%)</title><rect x="983.2" y="1637" width="1.1" height="15.0" fill="rgb(237,74,43)" rx="2" ry="2" />
<text  x="986.17" y="1647.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (10 samples, 0.92%)</title><rect x="657.7" y="1509" width="10.9" height="15.0" fill="rgb(241,204,40)" rx="2" ry="2" />
<text  x="660.69" y="1519.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.18%)</title><rect x="1123.6" y="1509" width="2.2" height="15.0" fill="rgb(219,152,21)" rx="2" ry="2" />
<text  x="1126.60" y="1519.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.09%)</title><rect x="1117.1" y="1605" width="1.1" height="15.0" fill="rgb(247,202,28)" rx="2" ry="2" />
<text  x="1120.07" y="1615.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.09%)</title><rect x="197.2" y="1413" width="1.1" height="15.0" fill="rgb(212,28,6)" rx="2" ry="2" />
<text  x="200.23" y="1423.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (135 samples, 12.45%)</title><rect x="458.5" y="1525" width="146.9" height="15.0" fill="rgb(208,204,18)" rx="2" ry="2" />
<text  x="461.49" y="1535.5" >ringbuf::producer:..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt; (1 samples, 0.09%)</title><rect x="1022.4" y="1317" width="1.1" height="15.0" fill="rgb(233,65,13)" rx="2" ry="2" />
<text  x="1025.36" y="1327.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="1010.4" y="1397" width="1.1" height="15.0" fill="rgb(230,121,0)" rx="2" ry="2" />
<text  x="1013.39" y="1407.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;usize,dashmap::util::SharedValue&lt;rustposix::safeposix::filesystem::Inode&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="1021.3" y="1461" width="1.1" height="15.0" fill="rgb(228,189,2)" rx="2" ry="2" />
<text  x="1024.27" y="1471.5" ></text>
</g>
<g >
<title>rmqueue_bulk (1 samples, 0.09%)</title><rect x="1010.4" y="1365" width="1.1" height="15.0" fill="rgb(252,215,14)" rx="2" ry="2" />
<text  x="1013.39" y="1375.5" ></text>
</g>
<g >
<title>NaClSysWrite (335 samples, 30.90%)</title><rect x="417.1" y="1637" width="364.7" height="15.0" fill="rgb(244,188,5)" rx="2" ry="2" />
<text  x="420.12" y="1647.5" >NaClSysWrite</text>
</g>
<g >
<title>swapper (111 samples, 10.24%)</title><rect x="1069.2" y="1701" width="120.8" height="15.0" fill="rgb(211,154,46)" rx="2" ry="2" />
<text  x="1072.17" y="1711.5" >swapper</text>
</g>
<g >
<title>mutex_lock (1 samples, 0.09%)</title><rect x="298.5" y="1429" width="1.1" height="15.0" fill="rgb(238,93,29)" rx="2" ry="2" />
<text  x="301.47" y="1439.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.18%)</title><rect x="1023.5" y="757" width="2.1" height="15.0" fill="rgb(207,131,13)" rx="2" ry="2" />
<text  x="1026.45" y="767.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (34 samples, 3.14%)</title><rect x="239.7" y="1461" width="37.0" height="15.0" fill="rgb(234,90,51)" rx="2" ry="2" />
<text  x="242.69" y="1471.5" >ksy..</text>
</g>
<g >
<title>ovl_llseek (1 samples, 0.09%)</title><rect x="298.5" y="1445" width="1.1" height="15.0" fill="rgb(222,102,19)" rx="2" ry="2" />
<text  x="301.47" y="1455.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.09%)</title><rect x="101.4" y="1413" width="1.1" height="15.0" fill="rgb(207,73,12)" rx="2" ry="2" />
<text  x="104.44" y="1423.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.09%)</title><rect x="13.3" y="1605" width="1.1" height="15.0" fill="rgb(253,186,6)" rx="2" ry="2" />
<text  x="16.27" y="1615.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.18%)</title><rect x="1023.5" y="389" width="2.1" height="15.0" fill="rgb(229,210,11)" rx="2" ry="2" />
<text  x="1026.45" y="399.5" ></text>
</g>
<g >
<title>event_function_call (1 samples, 0.09%)</title><rect x="103.6" y="1573" width="1.1" height="15.0" fill="rgb(207,31,42)" rx="2" ry="2" />
<text  x="106.62" y="1583.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.09%)</title><rect x="294.1" y="1429" width="1.1" height="15.0" fill="rgb(211,222,50)" rx="2" ry="2" />
<text  x="297.11" y="1439.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.18%)</title><rect x="299.6" y="1509" width="2.1" height="15.0" fill="rgb(220,118,15)" rx="2" ry="2" />
<text  x="302.56" y="1519.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.09%)</title><rect x="101.4" y="1429" width="1.1" height="15.0" fill="rgb(218,28,11)" rx="2" ry="2" />
<text  x="104.44" y="1439.5" ></text>
</g>
<g >
<title>sync_regs (11 samples, 1.01%)</title><rect x="995.1" y="1669" width="12.0" height="15.0" fill="rgb(230,173,6)" rx="2" ry="2" />
<text  x="998.15" y="1679.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (78 samples, 7.20%)</title><rect x="15.4" y="1557" width="85.0" height="15.0" fill="rgb(251,180,33)" rx="2" ry="2" />
<text  x="18.44" y="1567.5" >__x64_sys..</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.09%)</title><rect x="1067.0" y="1509" width="1.1" height="15.0" fill="rgb(222,203,32)" rx="2" ry="2" />
<text  x="1069.99" y="1519.5" ></text>
</g>
<g >
<title>tgetent_sp (1 samples, 0.09%)</title><rect x="12.2" y="1509" width="1.1" height="15.0" fill="rgb(242,201,33)" rx="2" ry="2" />
<text  x="15.18" y="1519.5" ></text>
</g>
<g >
<title>schedule_idle (2 samples, 0.18%)</title><rect x="1186.7" y="1621" width="2.2" height="15.0" fill="rgb(214,0,31)" rx="2" ry="2" />
<text  x="1189.73" y="1631.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (11 samples, 1.01%)</title><rect x="474.8" y="1509" width="12.0" height="15.0" fill="rgb(247,72,27)" rx="2" ry="2" />
<text  x="477.82" y="1519.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.18%)</title><rect x="453.0" y="1525" width="2.2" height="15.0" fill="rgb(245,32,2)" rx="2" ry="2" />
<text  x="456.04" y="1535.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.09%)</title><rect x="196.1" y="1605" width="1.1" height="15.0" fill="rgb(250,193,41)" rx="2" ry="2" />
<text  x="199.14" y="1615.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (2 samples, 0.18%)</title><rect x="1023.5" y="709" width="2.1" height="15.0" fill="rgb(248,210,12)" rx="2" ry="2" />
<text  x="1026.45" y="719.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 5.90%)</title><rect x="29.6" y="1397" width="69.7" height="15.0" fill="rgb(218,61,53)" rx="2" ry="2" />
<text  x="32.59" y="1407.5" >__perf_..</text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.09%)</title><rect x="296.3" y="1333" width="1.1" height="15.0" fill="rgb(240,63,33)" rx="2" ry="2" />
<text  x="299.29" y="1343.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (10 samples, 0.92%)</title><rect x="290.8" y="1573" width="10.9" height="15.0" fill="rgb(231,114,50)" rx="2" ry="2" />
<text  x="293.85" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="298.5" y="1493" width="1.1" height="15.0" fill="rgb(206,210,41)" rx="2" ry="2" />
<text  x="301.47" y="1503.5" ></text>
</g>
<g >
<title>osq_lock (36 samples, 3.32%)</title><rect x="157.0" y="1413" width="39.1" height="15.0" fill="rgb(232,170,1)" rx="2" ry="2" />
<text  x="159.96" y="1423.5" >osq..</text>
</g>
<g >
<title>__mem_cgroup_flush_stats (1 samples, 0.09%)</title><rect x="101.4" y="1301" width="1.1" height="15.0" fill="rgb(215,38,32)" rx="2" ry="2" />
<text  x="104.44" y="1311.5" ></text>
</g>
<g >
<title>irq_work_tick (1 samples, 0.09%)</title><rect x="234.2" y="1285" width="1.1" height="15.0" fill="rgb(246,210,46)" rx="2" ry="2" />
<text  x="237.24" y="1295.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="126.5" y="1493" width="1.1" height="15.0" fill="rgb(242,173,46)" rx="2" ry="2" />
<text  x="129.48" y="1503.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 5.81%)</title><rect x="30.7" y="1365" width="68.6" height="15.0" fill="rgb(222,127,5)" rx="2" ry="2" />
<text  x="33.68" y="1375.5" >x86_pmu..</text>
</g>
<g >
<title>exc_page_fault (108 samples, 9.96%)</title><rect x="871.1" y="1653" width="117.5" height="15.0" fill="rgb(222,5,44)" rx="2" ry="2" />
<text  x="874.05" y="1663.5" >exc_page_fault</text>
</g>
<g >
<title>std::sync::once::Once::call_once_force::{{closure}} (2 samples, 0.18%)</title><rect x="1023.5" y="1461" width="2.1" height="15.0" fill="rgb(253,35,39)" rx="2" ry="2" />
<text  x="1026.45" y="1471.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.18%)</title><rect x="1023.5" y="1205" width="2.1" height="15.0" fill="rgb(214,137,45)" rx="2" ry="2" />
<text  x="1026.45" y="1215.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.09%)</title><rect x="102.5" y="1573" width="1.1" height="15.0" fill="rgb(211,124,16)" rx="2" ry="2" />
<text  x="105.53" y="1583.5" ></text>
</g>
<g >
<title>filemap_read (1 samples, 0.09%)</title><rect x="296.3" y="1301" width="1.1" height="15.0" fill="rgb(208,130,28)" rx="2" ry="2" />
<text  x="299.29" y="1311.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.09%)</title><rect x="1068.1" y="1461" width="1.1" height="15.0" fill="rgb(207,84,34)" rx="2" ry="2" />
<text  x="1071.08" y="1471.5" ></text>
</g>
<g >
<title>rmqueue_bulk (6 samples, 0.55%)</title><rect x="953.8" y="1493" width="6.5" height="15.0" fill="rgb(249,229,51)" rx="2" ry="2" />
<text  x="956.78" y="1503.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.09%)</title><rect x="197.2" y="1397" width="1.1" height="15.0" fill="rgb(208,146,33)" rx="2" ry="2" />
<text  x="200.23" y="1407.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.09%)</title><rect x="338.7" y="1509" width="1.1" height="15.0" fill="rgb(223,3,9)" rx="2" ry="2" />
<text  x="341.75" y="1519.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.09%)</title><rect x="1067.0" y="1557" width="1.1" height="15.0" fill="rgb(228,110,51)" rx="2" ry="2" />
<text  x="1069.99" y="1567.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="126.5" y="1477" width="1.1" height="15.0" fill="rgb(243,183,37)" rx="2" ry="2" />
<text  x="129.48" y="1487.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_enum_map (2 samples, 0.18%)</title><rect x="1023.5" y="917" width="2.1" height="15.0" fill="rgb(208,136,40)" rx="2" ry="2" />
<text  x="1026.45" y="927.5" ></text>
</g>
<g >
<title>NaClAppDtor (35 samples, 3.23%)</title><rect x="197.2" y="1589" width="38.1" height="15.0" fill="rgb(217,185,37)" rx="2" ry="2" />
<text  x="200.23" y="1599.5" >NaC..</text>
</g>
<g >
<title>shmem_add_to_page_cache (1 samples, 0.09%)</title><rect x="1007.1" y="1365" width="1.1" height="15.0" fill="rgb(222,48,25)" rx="2" ry="2" />
<text  x="1010.12" y="1375.5" ></text>
</g>
<g >
<title>lind_read (126 samples, 11.62%)</title><rect x="280.0" y="1621" width="137.1" height="15.0" fill="rgb(213,53,41)" rx="2" ry="2" />
<text  x="282.96" y="1631.5" >lind_read</text>
</g>
<g >
<title>do_user_addr_fault (103 samples, 9.50%)</title><rect x="871.1" y="1637" width="112.1" height="15.0" fill="rgb(223,199,11)" rx="2" ry="2" />
<text  x="874.05" y="1647.5" >do_user_addr_..</text>
</g>
<g >
<title>core::cmp::Ord::min (19 samples, 1.75%)</title><rect x="432.4" y="1541" width="20.6" height="15.0" fill="rgb(252,81,49)" rx="2" ry="2" />
<text  x="435.36" y="1551.5" ></text>
</g>
<g >
<title>wait_for (2 samples, 0.18%)</title><rect x="11.1" y="1573" width="2.2" height="15.0" fill="rgb(217,82,45)" rx="2" ry="2" />
<text  x="14.09" y="1583.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (163 samples, 15.04%)</title><rect x="458.5" y="1557" width="177.4" height="15.0" fill="rgb(231,180,5)" rx="2" ry="2" />
<text  x="461.49" y="1567.5" >ringbuf::producer::Prod..</text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.09%)</title><rect x="196.1" y="1589" width="1.1" height="15.0" fill="rgb(209,136,35)" rx="2" ry="2" />
<text  x="199.14" y="1599.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.09%)</title><rect x="1114.9" y="1605" width="1.1" height="15.0" fill="rgb(247,63,27)" rx="2" ry="2" />
<text  x="1117.89" y="1615.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (2 samples, 0.18%)</title><rect x="336.6" y="1493" width="2.1" height="15.0" fill="rgb(243,98,17)" rx="2" ry="2" />
<text  x="339.57" y="1503.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::alloc::inner::Global as hashbrown::raw::alloc::inner::Allocator&gt;::allocate (2 samples, 0.18%)</title><rect x="1023.5" y="149" width="2.1" height="15.0" fill="rgb(217,152,10)" rx="2" ry="2" />
<text  x="1026.45" y="159.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.09%)</title><rect x="234.2" y="1317" width="1.1" height="15.0" fill="rgb(238,172,39)" rx="2" ry="2" />
<text  x="237.24" y="1327.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (26 samples, 2.40%)</title><rect x="127.6" y="1589" width="28.3" height="15.0" fill="rgb(223,95,33)" rx="2" ry="2" />
<text  x="130.56" y="1599.5" >A..</text>
</g>
<g >
<title>path_openat (1 samples, 0.09%)</title><rect x="1113.8" y="1605" width="1.1" height="15.0" fill="rgb(228,201,1)" rx="2" ry="2" />
<text  x="1116.80" y="1615.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (1 samples, 0.09%)</title><rect x="119.9" y="1669" width="1.1" height="15.0" fill="rgb(252,29,50)" rx="2" ry="2" />
<text  x="122.94" y="1679.5" ></text>
</g>
<g >
<title>[sel_ldr] (608 samples, 56.09%)</title><rect x="119.9" y="1685" width="661.9" height="15.0" fill="rgb(223,58,50)" rx="2" ry="2" />
<text  x="122.94" y="1695.5" >[sel_ldr]</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::FilesystemMetadata::init_fs_metadata (2 samples, 0.18%)</title><rect x="1023.5" y="1349" width="2.1" height="15.0" fill="rgb(233,184,46)" rx="2" ry="2" />
<text  x="1026.45" y="1359.5" ></text>
</g>
<g >
<title>__seccomp_filter (1 samples, 0.09%)</title><rect x="1116.0" y="1605" width="1.1" height="15.0" fill="rgb(250,115,18)" rx="2" ry="2" />
<text  x="1118.98" y="1615.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.18%)</title><rect x="1023.5" y="629" width="2.1" height="15.0" fill="rgb(207,182,45)" rx="2" ry="2" />
<text  x="1026.45" y="639.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="417.1" y="1605" width="1.1" height="15.0" fill="rgb(242,184,17)" rx="2" ry="2" />
<text  x="420.12" y="1615.5" ></text>
</g>
<g >
<title>[libc.so.6] (5 samples, 0.46%)</title><rect x="1020.2" y="1653" width="5.4" height="15.0" fill="rgb(220,102,13)" rx="2" ry="2" />
<text  x="1023.18" y="1663.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (2 samples, 0.18%)</title><rect x="1023.5" y="213" width="2.1" height="15.0" fill="rgb(208,59,37)" rx="2" ry="2" />
<text  x="1026.45" y="223.5" ></text>
</g>
<g >
<title>lind_write (334 samples, 30.81%)</title><rect x="418.2" y="1621" width="363.6" height="15.0" fill="rgb(245,181,38)" rx="2" ry="2" />
<text  x="421.21" y="1631.5" >lind_write</text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (1 samples, 0.09%)</title><rect x="289.8" y="1557" width="1.0" height="15.0" fill="rgb(220,83,2)" rx="2" ry="2" />
<text  x="292.76" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (3 samples, 0.28%)</title><rect x="1065.9" y="1653" width="3.3" height="15.0" fill="rgb(238,156,8)" rx="2" ry="2" />
<text  x="1068.90" y="1663.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="104.7" y="1669" width="1.1" height="15.0" fill="rgb(243,103,37)" rx="2" ry="2" />
<text  x="107.70" y="1679.5" ></text>
</g>
<g >
<title>cpu_startup_entry (63 samples, 5.81%)</title><rect x="1120.3" y="1653" width="68.6" height="15.0" fill="rgb(218,84,48)" rx="2" ry="2" />
<text  x="1123.33" y="1663.5" >cpu_sta..</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (163 samples, 15.04%)</title><rect x="458.5" y="1541" width="177.4" height="15.0" fill="rgb(217,90,19)" rx="2" ry="2" />
<text  x="461.49" y="1551.5" >ringbuf::producer::Prod..</text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.09%)</title><rect x="1010.4" y="1429" width="1.1" height="15.0" fill="rgb(216,112,42)" rx="2" ry="2" />
<text  x="1013.39" y="1439.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.09%)</title><rect x="234.2" y="1333" width="1.1" height="15.0" fill="rgb(235,63,45)" rx="2" ry="2" />
<text  x="237.24" y="1343.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (1 samples, 0.09%)</title><rect x="126.5" y="1605" width="1.1" height="15.0" fill="rgb(222,72,42)" rx="2" ry="2" />
<text  x="129.48" y="1615.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.09%)</title><rect x="101.4" y="1397" width="1.1" height="15.0" fill="rgb(209,18,13)" rx="2" ry="2" />
<text  x="104.44" y="1407.5" ></text>
</g>
<g >
<title>release_pages (19 samples, 1.75%)</title><rect x="254.9" y="1253" width="20.7" height="15.0" fill="rgb(241,202,10)" rx="2" ry="2" />
<text  x="257.93" y="1263.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="286.5" y="1525" width="1.1" height="15.0" fill="rgb(254,36,40)" rx="2" ry="2" />
<text  x="289.49" y="1535.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (2 samples, 0.18%)</title><rect x="1023.5" y="1077" width="2.1" height="15.0" fill="rgb(225,88,17)" rx="2" ry="2" />
<text  x="1026.45" y="1087.5" ></text>
</g>
<g >
<title>_find_first_bit (1 samples, 0.09%)</title><rect x="909.2" y="1557" width="1.0" height="15.0" fill="rgb(235,148,26)" rx="2" ry="2" />
<text  x="912.15" y="1567.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (17 samples, 1.57%)</title><rect x="890.6" y="1557" width="18.6" height="15.0" fill="rgb(240,5,52)" rx="2" ry="2" />
<text  x="893.65" y="1567.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init::{{closure}} (2 samples, 0.18%)</title><rect x="1023.5" y="1429" width="2.1" height="15.0" fill="rgb(228,164,51)" rx="2" ry="2" />
<text  x="1026.45" y="1439.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1 samples, 0.09%)</title><rect x="1185.6" y="1573" width="1.1" height="15.0" fill="rgb(248,211,41)" rx="2" ry="2" />
<text  x="1188.65" y="1583.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (3 samples, 0.28%)</title><rect x="916.8" y="1525" width="3.2" height="15.0" fill="rgb(245,164,18)" rx="2" ry="2" />
<text  x="919.77" y="1535.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (2 samples, 0.18%)</title><rect x="1118.2" y="1605" width="2.1" height="15.0" fill="rgb(239,198,21)" rx="2" ry="2" />
<text  x="1121.15" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (37 samples, 3.41%)</title><rect x="155.9" y="1525" width="40.2" height="15.0" fill="rgb(251,211,3)" rx="2" ry="2" />
<text  x="158.87" y="1535.5" >ent..</text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.18%)</title><rect x="1023.5" y="677" width="2.1" height="15.0" fill="rgb(235,163,33)" rx="2" ry="2" />
<text  x="1026.45" y="687.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (5 samples, 0.46%)</title><rect x="249.5" y="1269" width="5.4" height="15.0" fill="rgb(253,13,26)" rx="2" ry="2" />
<text  x="252.48" y="1279.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.09%)</title><rect x="340.9" y="1509" width="1.1" height="15.0" fill="rgb(236,203,11)" rx="2" ry="2" />
<text  x="343.92" y="1519.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.09%)</title><rect x="1068.1" y="1541" width="1.1" height="15.0" fill="rgb(217,228,42)" rx="2" ry="2" />
<text  x="1071.08" y="1551.5" ></text>
</g>
<g >
<title>pmd_val (2 samples, 0.18%)</title><rect x="979.9" y="1589" width="2.2" height="15.0" fill="rgb(253,131,23)" rx="2" ry="2" />
<text  x="982.91" y="1599.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (36 samples, 3.32%)</title><rect x="157.0" y="1429" width="39.1" height="15.0" fill="rgb(245,76,33)" rx="2" ry="2" />
<text  x="159.96" y="1439.5" >rws..</text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.09%)</title><rect x="296.3" y="1349" width="1.1" height="15.0" fill="rgb(207,178,23)" rx="2" ry="2" />
<text  x="299.29" y="1359.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.09%)</title><rect x="1188.9" y="1589" width="1.1" height="15.0" fill="rgb(239,157,25)" rx="2" ry="2" />
<text  x="1191.91" y="1599.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_constants::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::syscalls::fs_constants::DevNo&gt;::serialize (1 samples, 0.09%)</title><rect x="105.8" y="1669" width="1.1" height="15.0" fill="rgb(250,53,31)" rx="2" ry="2" />
<text  x="108.79" y="1679.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (3 samples, 0.28%)</title><rect x="984.3" y="1605" width="3.2" height="15.0" fill="rgb(223,88,34)" rx="2" ry="2" />
<text  x="987.26" y="1615.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::libc_mmap (34 samples, 3.14%)</title><rect x="239.7" y="1541" width="37.0" height="15.0" fill="rgb(212,213,21)" rx="2" ry="2" />
<text  x="242.69" y="1551.5" >rus..</text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.09%)</title><rect x="1067.0" y="1525" width="1.1" height="15.0" fill="rgb(213,17,44)" rx="2" ry="2" />
<text  x="1069.99" y="1535.5" ></text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.09%)</title><rect x="1010.4" y="1413" width="1.1" height="15.0" fill="rgb(213,11,22)" rx="2" ry="2" />
<text  x="1013.39" y="1423.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.09%)</title><rect x="1068.1" y="1365" width="1.1" height="15.0" fill="rgb(217,169,30)" rx="2" ry="2" />
<text  x="1071.08" y="1375.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="126.5" y="1525" width="1.1" height="15.0" fill="rgb(211,183,14)" rx="2" ry="2" />
<text  x="129.48" y="1535.5" ></text>
</g>
<g >
<title>lindrustinit (2 samples, 0.18%)</title><rect x="1023.5" y="1605" width="2.1" height="15.0" fill="rgb(239,172,35)" rx="2" ry="2" />
<text  x="1026.45" y="1615.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.09%)</title><rect x="101.4" y="1589" width="1.1" height="15.0" fill="rgb(236,163,50)" rx="2" ry="2" />
<text  x="104.44" y="1599.5" ></text>
</g>
<g >
<title>lru_cache_add (13 samples, 1.20%)</title><rect x="962.5" y="1541" width="14.1" height="15.0" fill="rgb(238,49,41)" rx="2" ry="2" />
<text  x="965.49" y="1551.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.09%)</title><rect x="960.3" y="1541" width="1.1" height="15.0" fill="rgb(207,17,26)" rx="2" ry="2" />
<text  x="963.31" y="1551.5" ></text>
</g>
<g >
<title>dispatcher (124 samples, 11.44%)</title><rect x="282.1" y="1605" width="135.0" height="15.0" fill="rgb(239,42,53)" rx="2" ry="2" />
<text  x="285.14" y="1615.5" >dispatcher</text>
</g>
<g >
<title>_perf_ioctl (76 samples, 7.01%)</title><rect x="16.5" y="1525" width="82.8" height="15.0" fill="rgb(228,196,17)" rx="2" ry="2" />
<text  x="19.53" y="1535.5" >_perf_ioctl</text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.09%)</title><rect x="1116.0" y="1653" width="1.1" height="15.0" fill="rgb(236,204,14)" rx="2" ry="2" />
<text  x="1118.98" y="1663.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="1007.1" y="1605" width="2.2" height="15.0" fill="rgb(231,207,33)" rx="2" ry="2" />
<text  x="1010.12" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (37 samples, 3.41%)</title><rect x="155.9" y="1509" width="40.2" height="15.0" fill="rgb(207,12,41)" rx="2" ry="2" />
<text  x="158.87" y="1519.5" >do_..</text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.09%)</title><rect x="1068.1" y="1445" width="1.1" height="15.0" fill="rgb(225,142,7)" rx="2" ry="2" />
<text  x="1071.08" y="1455.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (2 samples, 0.18%)</title><rect x="152.6" y="1557" width="2.2" height="15.0" fill="rgb(248,213,17)" rx="2" ry="2" />
<text  x="155.60" y="1567.5" ></text>
</g>
<g >
<title>native_write_msr (63 samples, 5.81%)</title><rect x="30.7" y="1333" width="68.6" height="15.0" fill="rgb(218,152,12)" rx="2" ry="2" />
<text  x="33.68" y="1343.5" >native_..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2 samples, 0.18%)</title><rect x="333.3" y="1525" width="2.2" height="15.0" fill="rgb(211,211,18)" rx="2" ry="2" />
<text  x="336.30" y="1535.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.09%)</title><rect x="1068.1" y="1557" width="1.1" height="15.0" fill="rgb(253,76,43)" rx="2" ry="2" />
<text  x="1071.08" y="1567.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.09%)</title><rect x="13.3" y="1621" width="1.1" height="15.0" fill="rgb(209,124,11)" rx="2" ry="2" />
<text  x="16.27" y="1631.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.18%)</title><rect x="287.6" y="1525" width="2.2" height="15.0" fill="rgb(252,123,40)" rx="2" ry="2" />
<text  x="290.58" y="1535.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (36 samples, 3.32%)</title><rect x="157.0" y="1445" width="39.1" height="15.0" fill="rgb(233,78,12)" rx="2" ry="2" />
<text  x="159.96" y="1455.5" >rws..</text>
</g>
<g >
<title>__evlist__enable (79 samples, 7.29%)</title><rect x="15.4" y="1653" width="86.0" height="15.0" fill="rgb(236,61,8)" rx="2" ry="2" />
<text  x="18.44" y="1663.5" >__evlist__..</text>
</g>
<g >
<title>rmqueue (9 samples, 0.83%)</title><rect x="950.5" y="1509" width="9.8" height="15.0" fill="rgb(221,60,21)" rx="2" ry="2" />
<text  x="953.52" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.28%)</title><rect x="1065.9" y="1685" width="3.3" height="15.0" fill="rgb(233,43,45)" rx="2" ry="2" />
<text  x="1068.90" y="1695.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.09%)</title><rect x="900.4" y="1509" width="1.1" height="15.0" fill="rgb(224,129,23)" rx="2" ry="2" />
<text  x="903.44" y="1519.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.09%)</title><rect x="1067.0" y="1573" width="1.1" height="15.0" fill="rgb(235,37,28)" rx="2" ry="2" />
<text  x="1069.99" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (2 samples, 0.18%)</title><rect x="1007.1" y="1589" width="2.2" height="15.0" fill="rgb(232,189,5)" rx="2" ry="2" />
<text  x="1010.12" y="1599.5" ></text>
</g>
<g >
<title>kthread (3 samples, 0.28%)</title><rect x="1117.1" y="1669" width="3.2" height="15.0" fill="rgb(251,94,13)" rx="2" ry="2" />
<text  x="1120.07" y="1679.5" ></text>
</g>
<g >
<title>__munmap (37 samples, 3.41%)</title><rect x="155.9" y="1541" width="40.2" height="15.0" fill="rgb(234,21,40)" rx="2" ry="2" />
<text  x="158.87" y="1551.5" >__m..</text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.09%)</title><rect x="1068.1" y="1429" width="1.1" height="15.0" fill="rgb(229,39,33)" rx="2" ry="2" />
<text  x="1071.08" y="1439.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (34 samples, 3.14%)</title><rect x="239.7" y="1557" width="37.0" height="15.0" fill="rgb(241,45,10)" rx="2" ry="2" />
<text  x="242.69" y="1567.5" >rus..</text>
</g>
<g >
<title>asm_exc_page_fault (37 samples, 3.41%)</title><rect x="1025.6" y="1685" width="40.3" height="15.0" fill="rgb(242,37,44)" rx="2" ry="2" />
<text  x="1028.63" y="1695.5" >asm..</text>
</g>
<g >
<title>generic_exec_single (66 samples, 6.09%)</title><rect x="27.4" y="1445" width="71.9" height="15.0" fill="rgb(208,110,54)" rx="2" ry="2" />
<text  x="30.42" y="1455.5" >generic_..</text>
</g>
<g >
<title>NaClAppThreadTeardown (37 samples, 3.41%)</title><rect x="155.9" y="1605" width="40.2" height="15.0" fill="rgb(219,82,33)" rx="2" ry="2" />
<text  x="158.87" y="1615.5" >NaC..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (2 samples, 0.18%)</title><rect x="1021.3" y="1541" width="2.2" height="15.0" fill="rgb(231,128,27)" rx="2" ry="2" />
<text  x="1024.27" y="1551.5" ></text>
</g>
<g >
<title>CopyBundleTails (3 samples, 0.28%)</title><rect x="123.2" y="1589" width="3.3" height="15.0" fill="rgb(226,203,54)" rx="2" ry="2" />
<text  x="126.21" y="1599.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1 samples, 0.09%)</title><rect x="1022.4" y="1445" width="1.1" height="15.0" fill="rgb(219,186,18)" rx="2" ry="2" />
<text  x="1025.36" y="1455.5" ></text>
</g>
<g >
<title>perf_evsel__disable_cpu (1 samples, 0.09%)</title><rect x="14.4" y="1637" width="1.0" height="15.0" fill="rgb(215,109,50)" rx="2" ry="2" />
<text  x="17.35" y="1647.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::de::Deserialize for dashmap::DashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.18%)</title><rect x="1023.5" y="1141" width="2.1" height="15.0" fill="rgb(239,216,54)" rx="2" ry="2" />
<text  x="1026.45" y="1151.5" ></text>
</g>
<g >
<title>try_charge_memcg (5 samples, 0.46%)</title><rect x="901.5" y="1525" width="5.5" height="15.0" fill="rgb(219,23,44)" rx="2" ry="2" />
<text  x="904.53" y="1535.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="126.5" y="1445" width="1.1" height="15.0" fill="rgb(230,147,41)" rx="2" ry="2" />
<text  x="129.48" y="1455.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.09%)</title><rect x="101.4" y="1461" width="1.1" height="15.0" fill="rgb(249,101,46)" rx="2" ry="2" />
<text  x="104.44" y="1471.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.09%)</title><rect x="259.3" y="1221" width="1.1" height="15.0" fill="rgb(241,130,35)" rx="2" ry="2" />
<text  x="262.28" y="1231.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (38 samples, 3.51%)</title><rect x="155.9" y="1653" width="41.3" height="15.0" fill="rgb(236,112,21)" rx="2" ry="2" />
<text  x="158.87" y="1663.5" >NaC..</text>
</g>
<g >
<title>perf_evsel__run_ioctl (79 samples, 7.29%)</title><rect x="15.4" y="1621" width="86.0" height="15.0" fill="rgb(241,17,54)" rx="2" ry="2" />
<text  x="18.44" y="1631.5" >perf_evsel..</text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.09%)</title><rect x="1068.1" y="1397" width="1.1" height="15.0" fill="rgb(242,112,41)" rx="2" ry="2" />
<text  x="1071.08" y="1407.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.18%)</title><rect x="1023.5" y="1173" width="2.1" height="15.0" fill="rgb(247,159,43)" rx="2" ry="2" />
<text  x="1026.45" y="1183.5" ></text>
</g>
<g >
<title>should_fail_alloc_page (1 samples, 0.09%)</title><rect x="961.4" y="1541" width="1.1" height="15.0" fill="rgb(223,102,37)" rx="2" ry="2" />
<text  x="964.40" y="1551.5" ></text>
</g>
<g >
<title>charge_memcg (15 samples, 1.38%)</title><rect x="890.6" y="1541" width="16.4" height="15.0" fill="rgb(253,56,39)" rx="2" ry="2" />
<text  x="893.65" y="1551.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (2 samples, 0.18%)</title><rect x="1021.3" y="1509" width="2.2" height="15.0" fill="rgb(206,49,4)" rx="2" ry="2" />
<text  x="1024.27" y="1519.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::ser::Serialize for dashmap::DashMap&lt;K,V,H&gt;&gt;::serialize (2 samples, 0.18%)</title><rect x="1021.3" y="1493" width="2.2" height="15.0" fill="rgb(208,172,2)" rx="2" ry="2" />
<text  x="1024.27" y="1503.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (1 samples, 0.09%)</title><rect x="1021.3" y="1413" width="1.1" height="15.0" fill="rgb(238,116,30)" rx="2" ry="2" />
<text  x="1024.27" y="1423.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.09%)</title><rect x="286.5" y="1461" width="1.1" height="15.0" fill="rgb(226,75,27)" rx="2" ry="2" />
<text  x="289.49" y="1471.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.09%)</title><rect x="197.2" y="1461" width="1.1" height="15.0" fill="rgb(243,207,13)" rx="2" ry="2" />
<text  x="200.23" y="1471.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (2 samples, 0.18%)</title><rect x="1023.5" y="517" width="2.1" height="15.0" fill="rgb(254,98,35)" rx="2" ry="2" />
<text  x="1026.45" y="527.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (10 samples, 0.92%)</title><rect x="108.0" y="1669" width="10.9" height="15.0" fill="rgb(239,171,10)" rx="2" ry="2" />
<text  x="110.97" y="1679.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.18%)</title><rect x="1007.1" y="1429" width="2.2" height="15.0" fill="rgb(242,144,1)" rx="2" ry="2" />
<text  x="1010.12" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (59 samples, 5.44%)</title><rect x="1120.3" y="1589" width="64.3" height="15.0" fill="rgb(228,159,8)" rx="2" ry="2" />
<text  x="1123.33" y="1599.5" >cpuidle..</text>
</g>
<g >
<title>ioctl (79 samples, 7.29%)</title><rect x="15.4" y="1605" width="86.0" height="15.0" fill="rgb(231,118,28)" rx="2" ry="2" />
<text  x="18.44" y="1615.5" >ioctl</text>
</g>
<g >
<title>free_pcppages_bulk (11 samples, 1.01%)</title><rect x="263.6" y="1205" width="12.0" height="15.0" fill="rgb(222,177,34)" rx="2" ry="2" />
<text  x="266.63" y="1215.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.09%)</title><rect x="1010.4" y="1557" width="1.1" height="15.0" fill="rgb(241,10,38)" rx="2" ry="2" />
<text  x="1013.39" y="1567.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.09%)</title><rect x="1010.4" y="1653" width="1.1" height="15.0" fill="rgb(211,80,41)" rx="2" ry="2" />
<text  x="1013.39" y="1663.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.09%)</title><rect x="1185.6" y="1557" width="1.1" height="15.0" fill="rgb(229,42,24)" rx="2" ry="2" />
<text  x="1188.65" y="1567.5" ></text>
</g>
<g >
<title>process_vm_writev (2 samples, 0.18%)</title><rect x="1007.1" y="1637" width="2.2" height="15.0" fill="rgb(212,83,32)" rx="2" ry="2" />
<text  x="1010.12" y="1647.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (2 samples, 0.18%)</title><rect x="1023.5" y="1189" width="2.1" height="15.0" fill="rgb(242,109,23)" rx="2" ry="2" />
<text  x="1026.45" y="1199.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (2 samples, 0.18%)</title><rect x="1023.5" y="997" width="2.1" height="15.0" fill="rgb(217,31,42)" rx="2" ry="2" />
<text  x="1026.45" y="1007.5" ></text>
</g>
<g >
<title>do_iter_read (1 samples, 0.09%)</title><rect x="296.3" y="1365" width="1.1" height="15.0" fill="rgb(244,48,49)" rx="2" ry="2" />
<text  x="299.29" y="1375.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.18%)</title><rect x="1023.5" y="421" width="2.1" height="15.0" fill="rgb(239,109,27)" rx="2" ry="2" />
<text  x="1026.45" y="431.5" ></text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.09%)</title><rect x="1008.2" y="1317" width="1.1" height="15.0" fill="rgb(213,137,20)" rx="2" ry="2" />
<text  x="1011.21" y="1327.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.09%)</title><rect x="1068.1" y="1589" width="1.1" height="15.0" fill="rgb(250,1,20)" rx="2" ry="2" />
<text  x="1071.08" y="1599.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.09%)</title><rect x="295.2" y="1365" width="1.1" height="15.0" fill="rgb(231,95,31)" rx="2" ry="2" />
<text  x="298.20" y="1375.5" ></text>
</g>
<g >
<title>vfs_iter_read (1 samples, 0.09%)</title><rect x="296.3" y="1381" width="1.1" height="15.0" fill="rgb(223,180,6)" rx="2" ry="2" />
<text  x="299.29" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.37%)</title><rect x="294.1" y="1493" width="4.4" height="15.0" fill="rgb(247,88,45)" rx="2" ry="2" />
<text  x="297.11" y="1503.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (10 samples, 0.92%)</title><rect x="463.9" y="1477" width="10.9" height="15.0" fill="rgb(218,33,29)" rx="2" ry="2" />
<text  x="466.93" y="1487.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (1 samples, 0.09%)</title><rect x="285.4" y="1477" width="1.1" height="15.0" fill="rgb(228,80,8)" rx="2" ry="2" />
<text  x="288.41" y="1487.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.09%)</title><rect x="103.6" y="1429" width="1.1" height="15.0" fill="rgb(245,33,45)" rx="2" ry="2" />
<text  x="106.62" y="1439.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::initialize (2 samples, 0.18%)</title><rect x="1023.5" y="1509" width="2.1" height="15.0" fill="rgb(234,126,26)" rx="2" ry="2" />
<text  x="1026.45" y="1519.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.09%)</title><rect x="1020.2" y="1605" width="1.1" height="15.0" fill="rgb(224,177,49)" rx="2" ry="2" />
<text  x="1023.18" y="1615.5" ></text>
</g>
<g >
<title>sel_ldr (886 samples, 81.73%)</title><rect x="104.7" y="1701" width="964.5" height="15.0" fill="rgb(227,137,29)" rx="2" ry="2" />
<text  x="107.70" y="1711.5" >sel_ldr</text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.09%)</title><rect x="1020.2" y="1541" width="1.1" height="15.0" fill="rgb(234,130,6)" rx="2" ry="2" />
<text  x="1023.18" y="1551.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once_force (2 samples, 0.18%)</title><rect x="1023.5" y="1493" width="2.1" height="15.0" fill="rgb(254,179,35)" rx="2" ry="2" />
<text  x="1026.45" y="1503.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (30 samples, 2.77%)</title><rect x="123.2" y="1621" width="32.7" height="15.0" fill="rgb(238,153,17)" rx="2" ry="2" />
<text  x="126.21" y="1631.5" >Na..</text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.18%)</title><rect x="1023.5" y="1109" width="2.1" height="15.0" fill="rgb(244,5,15)" rx="2" ry="2" />
<text  x="1026.45" y="1119.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (2 samples, 0.18%)</title><rect x="1023.5" y="725" width="2.1" height="15.0" fill="rgb(206,167,49)" rx="2" ry="2" />
<text  x="1026.45" y="735.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.09%)</title><rect x="1188.9" y="1525" width="1.1" height="15.0" fill="rgb(235,197,36)" rx="2" ry="2" />
<text  x="1191.91" y="1535.5" ></text>
</g>
<g >
<title>handle_mm_fault (100 samples, 9.23%)</title><rect x="874.3" y="1621" width="108.9" height="15.0" fill="rgb(211,65,25)" rx="2" ry="2" />
<text  x="877.32" y="1631.5" >handle_mm_fault</text>
</g>
<g >
<title>alloc_pages_vma (47 samples, 4.34%)</title><rect x="911.3" y="1557" width="51.2" height="15.0" fill="rgb(227,192,14)" rx="2" ry="2" />
<text  x="914.33" y="1567.5" >alloc..</text>
</g>
<g >
<title>vmacache_find (1 samples, 0.09%)</title><rect x="873.2" y="1605" width="1.1" height="15.0" fill="rgb(219,17,27)" rx="2" ry="2" />
<text  x="876.23" y="1615.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (334 samples, 30.81%)</title><rect x="418.2" y="1573" width="363.6" height="15.0" fill="rgb(209,20,9)" rx="2" ry="2" />
<text  x="421.21" y="1583.5" >rustposix::interface::pipe::EmulatedPipe::write_t..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="1022.4" y="1285" width="1.1" height="15.0" fill="rgb(227,115,44)" rx="2" ry="2" />
<text  x="1025.36" y="1295.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.09%)</title><rect x="1068.1" y="1525" width="1.1" height="15.0" fill="rgb(206,97,23)" rx="2" ry="2" />
<text  x="1071.08" y="1535.5" ></text>
</g>
<g >
<title>__msecs_to_jiffies (1 samples, 0.09%)</title><rect x="1123.6" y="1493" width="1.1" height="15.0" fill="rgb(242,103,27)" rx="2" ry="2" />
<text  x="1126.60" y="1503.5" ></text>
</g>
<g >
<title>_perf_event_enable (68 samples, 6.27%)</title><rect x="25.2" y="1493" width="74.1" height="15.0" fill="rgb(244,179,49)" rx="2" ry="2" />
<text  x="28.24" y="1503.5" >_perf_ev..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.09%)</title><rect x="977.7" y="1509" width="1.1" height="15.0" fill="rgb(254,144,7)" rx="2" ry="2" />
<text  x="980.73" y="1519.5" ></text>
</g>
<g >
<title>do_anonymous_page (85 samples, 7.84%)</title><rect x="887.4" y="1573" width="92.5" height="15.0" fill="rgb(217,63,2)" rx="2" ry="2" />
<text  x="890.38" y="1583.5" >do_anonymou..</text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.09%)</title><rect x="103.6" y="1541" width="1.1" height="15.0" fill="rgb(237,81,1)" rx="2" ry="2" />
<text  x="106.62" y="1551.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (2 samples, 0.18%)</title><rect x="1007.1" y="1557" width="2.2" height="15.0" fill="rgb(219,199,42)" rx="2" ry="2" />
<text  x="1010.12" y="1567.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (4 samples, 0.37%)</title><rect x="235.3" y="1525" width="4.4" height="15.0" fill="rgb(210,135,17)" rx="2" ry="2" />
<text  x="238.33" y="1535.5" ></text>
</g>
<g >
<title>perf_tool__process_synth_event (1 samples, 0.09%)</title><rect x="101.4" y="1637" width="1.1" height="15.0" fill="rgb(231,90,2)" rx="2" ry="2" />
<text  x="104.44" y="1647.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (10 samples, 0.92%)</title><rect x="463.9" y="1493" width="10.9" height="15.0" fill="rgb(240,208,2)" rx="2" ry="2" />
<text  x="466.93" y="1503.5" ></text>
</g>
<g >
<title>_start (5 samples, 0.46%)</title><rect x="1020.2" y="1685" width="5.4" height="15.0" fill="rgb(252,216,22)" rx="2" ry="2" />
<text  x="1023.18" y="1695.5" ></text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.18%)</title><rect x="11.1" y="1653" width="2.2" height="15.0" fill="rgb(206,192,33)" rx="2" ry="2" />
<text  x="14.09" y="1663.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.09%)</title><rect x="987.5" y="1637" width="1.1" height="15.0" fill="rgb(210,15,46)" rx="2" ry="2" />
<text  x="990.53" y="1647.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.09%)</title><rect x="288.7" y="1397" width="1.1" height="15.0" fill="rgb(235,133,1)" rx="2" ry="2" />
<text  x="291.67" y="1407.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.09%)</title><rect x="1008.2" y="1349" width="1.1" height="15.0" fill="rgb(237,127,9)" rx="2" ry="2" />
<text  x="1011.21" y="1359.5" ></text>
</g>
<g >
<title>event_function (64 samples, 5.90%)</title><rect x="29.6" y="1413" width="69.7" height="15.0" fill="rgb(211,145,14)" rx="2" ry="2" />
<text  x="32.59" y="1423.5" >event_f..</text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.09%)</title><rect x="1010.4" y="1525" width="1.1" height="15.0" fill="rgb(231,225,19)" rx="2" ry="2" />
<text  x="1013.39" y="1535.5" ></text>
</g>
<g >
<title>lindrustfinalize (2 samples, 0.18%)</title><rect x="1021.3" y="1605" width="2.2" height="15.0" fill="rgb(210,174,53)" rx="2" ry="2" />
<text  x="1024.27" y="1615.5" ></text>
</g>
<g >
<title>reader_loop (2 samples, 0.18%)</title><rect x="11.1" y="1621" width="2.2" height="15.0" fill="rgb(234,66,6)" rx="2" ry="2" />
<text  x="14.09" y="1631.5" ></text>
</g>
<g >
<title>core::cmp::min_by (5 samples, 0.46%)</title><rect x="432.4" y="1525" width="5.4" height="15.0" fill="rgb(245,163,44)" rx="2" ry="2" />
<text  x="435.36" y="1535.5" ></text>
</g>
<g >
<title>rest_init (1 samples, 0.09%)</title><rect x="1188.9" y="1605" width="1.1" height="15.0" fill="rgb(223,43,33)" rx="2" ry="2" />
<text  x="1191.91" y="1615.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (19 samples, 1.75%)</title><rect x="254.9" y="1269" width="20.7" height="15.0" fill="rgb(212,36,48)" rx="2" ry="2" />
<text  x="257.93" y="1279.5" ></text>
</g>
<g >
<title>__irqentry_text_end (1 samples, 0.09%)</title><rect x="867.8" y="1669" width="1.1" height="15.0" fill="rgb(248,40,21)" rx="2" ry="2" />
<text  x="870.79" y="1679.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.09%)</title><rect x="197.2" y="1477" width="1.1" height="15.0" fill="rgb(209,11,45)" rx="2" ry="2" />
<text  x="200.23" y="1487.5" ></text>
</g>
<g >
<title>__entry_text_start (1 samples, 0.09%)</title><rect x="290.8" y="1493" width="1.1" height="15.0" fill="rgb(241,87,46)" rx="2" ry="2" />
<text  x="293.85" y="1503.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (2 samples, 0.18%)</title><rect x="1023.5" y="1061" width="2.1" height="15.0" fill="rgb(210,131,54)" rx="2" ry="2" />
<text  x="1026.45" y="1071.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (2 samples, 0.18%)</title><rect x="1023.5" y="1125" width="2.1" height="15.0" fill="rgb(214,64,48)" rx="2" ry="2" />
<text  x="1026.45" y="1135.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35 samples, 3.23%)</title><rect x="197.2" y="1541" width="38.1" height="15.0" fill="rgb(212,95,19)" rx="2" ry="2" />
<text  x="200.23" y="1551.5" >ent..</text>
</g>
<g >
<title>task_work_run (1 samples, 0.09%)</title><rect x="1068.1" y="1605" width="1.1" height="15.0" fill="rgb(241,182,51)" rx="2" ry="2" />
<text  x="1071.08" y="1615.5" ></text>
</g>
<g >
<title>rl_bind_keyseq_if_unbound_in_map (1 samples, 0.09%)</title><rect x="11.1" y="1493" width="1.1" height="15.0" fill="rgb(219,154,4)" rx="2" ry="2" />
<text  x="14.09" y="1503.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.09%)</title><rect x="1068.1" y="1413" width="1.1" height="15.0" fill="rgb(246,66,33)" rx="2" ry="2" />
<text  x="1071.08" y="1423.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (53 samples, 4.89%)</title><rect x="1126.9" y="1573" width="57.7" height="15.0" fill="rgb(243,65,37)" rx="2" ry="2" />
<text  x="1129.86" y="1583.5" >mwait_..</text>
</g>
<g >
<title>do_idle (63 samples, 5.81%)</title><rect x="1120.3" y="1637" width="68.6" height="15.0" fill="rgb(235,12,40)" rx="2" ry="2" />
<text  x="1123.33" y="1647.5" >do_idle</text>
</g>
<g >
<title>&lt;serde_cbor::de::VariantAccessMap&lt;T&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (2 samples, 0.18%)</title><rect x="1023.5" y="837" width="2.1" height="15.0" fill="rgb(226,52,18)" rx="2" ry="2" />
<text  x="1026.45" y="847.5" ></text>
</g>
<g >
<title>ret_from_fork (3 samples, 0.28%)</title><rect x="1117.1" y="1685" width="3.2" height="15.0" fill="rgb(248,184,32)" rx="2" ry="2" />
<text  x="1120.07" y="1695.5" ></text>
</g>
<g >
<title>write (1 samples, 0.09%)</title><rect x="101.4" y="1573" width="1.1" height="15.0" fill="rgb(206,72,49)" rx="2" ry="2" />
<text  x="104.44" y="1583.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="310.4" y="1541" width="1.1" height="15.0" fill="rgb(249,171,6)" rx="2" ry="2" />
<text  x="313.44" y="1551.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.09%)</title><rect x="1010.4" y="1381" width="1.1" height="15.0" fill="rgb(244,160,20)" rx="2" ry="2" />
<text  x="1013.39" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (79 samples, 7.29%)</title><rect x="15.4" y="1589" width="86.0" height="15.0" fill="rgb(247,228,7)" rx="2" ry="2" />
<text  x="18.44" y="1599.5" >entry_SYSC..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (68 samples, 6.27%)</title><rect x="342.0" y="1493" width="74.0" height="15.0" fill="rgb(205,121,2)" rx="2" ry="2" />
<text  x="345.01" y="1503.5" >core::in..</text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1 samples, 0.09%)</title><rect x="276.7" y="1637" width="1.1" height="15.0" fill="rgb(223,184,37)" rx="2" ry="2" />
<text  x="279.70" y="1647.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="285.4" y="1557" width="1.1" height="15.0" fill="rgb(215,181,47)" rx="2" ry="2" />
<text  x="288.41" y="1567.5" ></text>
</g>
<g >
<title>[libncursesw.so.6.3] (1 samples, 0.09%)</title><rect x="12.2" y="1477" width="1.1" height="15.0" fill="rgb(228,215,52)" rx="2" ry="2" />
<text  x="15.18" y="1487.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (3 samples, 0.28%)</title><rect x="123.2" y="1605" width="3.3" height="15.0" fill="rgb(207,46,5)" rx="2" ry="2" />
<text  x="126.21" y="1615.5" ></text>
</g>
<g >
<title>__munmap (35 samples, 3.23%)</title><rect x="197.2" y="1557" width="38.1" height="15.0" fill="rgb(227,184,27)" rx="2" ry="2" />
<text  x="200.23" y="1567.5" >__m..</text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.09%)</title><rect x="1113.8" y="1637" width="1.1" height="15.0" fill="rgb(231,219,52)" rx="2" ry="2" />
<text  x="1116.80" y="1647.5" ></text>
</g>
<g >
<title>zap_pte_range (34 samples, 3.14%)</title><rect x="239.7" y="1301" width="37.0" height="15.0" fill="rgb(214,169,32)" rx="2" ry="2" />
<text  x="242.69" y="1311.5" >zap..</text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.09%)</title><rect x="1020.2" y="1589" width="1.1" height="15.0" fill="rgb(225,141,52)" rx="2" ry="2" />
<text  x="1023.18" y="1599.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1 samples, 0.09%)</title><rect x="1188.9" y="1621" width="1.1" height="15.0" fill="rgb(218,69,53)" rx="2" ry="2" />
<text  x="1191.91" y="1631.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="234.2" y="1381" width="1.1" height="15.0" fill="rgb(212,181,26)" rx="2" ry="2" />
<text  x="237.24" y="1391.5" ></text>
</g>
<g >
<title>shrink_slab (1 samples, 0.09%)</title><rect x="1119.2" y="1589" width="1.1" height="15.0" fill="rgb(218,179,17)" rx="2" ry="2" />
<text  x="1122.24" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.09%)</title><rect x="13.3" y="1653" width="1.1" height="15.0" fill="rgb(245,188,40)" rx="2" ry="2" />
<text  x="16.27" y="1663.5" ></text>
</g>
<g >
<title>pm_qos_read_value (1 samples, 0.09%)</title><rect x="1184.6" y="1573" width="1.0" height="15.0" fill="rgb(210,66,37)" rx="2" ry="2" />
<text  x="1187.56" y="1583.5" ></text>
</g>
<g >
<title>__cmd_record (82 samples, 7.56%)</title><rect x="14.4" y="1669" width="89.2" height="15.0" fill="rgb(233,17,35)" rx="2" ry="2" />
<text  x="17.35" y="1679.5" >__cmd_record</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.09%)</title><rect x="284.3" y="1573" width="1.1" height="15.0" fill="rgb(223,48,33)" rx="2" ry="2" />
<text  x="287.32" y="1583.5" ></text>
</g>
<g >
<title>llseek (1 samples, 0.09%)</title><rect x="290.8" y="1509" width="1.1" height="15.0" fill="rgb(229,160,25)" rx="2" ry="2" />
<text  x="293.85" y="1519.5" ></text>
</g>
<g >
<title>exit_mm (2 samples, 0.18%)</title><rect x="1065.9" y="1605" width="2.2" height="15.0" fill="rgb(242,20,52)" rx="2" ry="2" />
<text  x="1068.90" y="1615.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.09%)</title><rect x="103.6" y="1445" width="1.1" height="15.0" fill="rgb(253,115,32)" rx="2" ry="2" />
<text  x="106.62" y="1455.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (2 samples, 0.18%)</title><rect x="1023.5" y="853" width="2.1" height="15.0" fill="rgb(205,224,9)" rx="2" ry="2" />
<text  x="1026.45" y="863.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1 samples, 0.09%)</title><rect x="1188.9" y="1509" width="1.1" height="15.0" fill="rgb(214,187,21)" rx="2" ry="2" />
<text  x="1191.91" y="1519.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (4 samples, 0.37%)</title><rect x="235.3" y="1605" width="4.4" height="15.0" fill="rgb(242,107,19)" rx="2" ry="2" />
<text  x="238.33" y="1615.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.09%)</title><rect x="102.5" y="1445" width="1.1" height="15.0" fill="rgb(221,15,36)" rx="2" ry="2" />
<text  x="105.53" y="1455.5" ></text>
</g>
<g >
<title>make_kuid (1 samples, 0.09%)</title><rect x="295.2" y="1333" width="1.1" height="15.0" fill="rgb(229,77,5)" rx="2" ry="2" />
<text  x="298.20" y="1343.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.09%)</title><rect x="309.4" y="1557" width="1.0" height="15.0" fill="rgb(220,139,52)" rx="2" ry="2" />
<text  x="312.35" y="1567.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="1024.5" y="85" width="1.1" height="15.0" fill="rgb(211,36,45)" rx="2" ry="2" />
<text  x="1027.54" y="95.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.09%)</title><rect x="101.4" y="1365" width="1.1" height="15.0" fill="rgb(209,22,19)" rx="2" ry="2" />
<text  x="104.44" y="1375.5" ></text>
</g>
<g >
<title>get_page_from_freelist (37 samples, 3.41%)</title><rect x="920.0" y="1525" width="40.3" height="15.0" fill="rgb(213,178,5)" rx="2" ry="2" />
<text  x="923.04" y="1535.5" >get..</text>
</g>
<g >
<title>balance_pgdat (3 samples, 0.28%)</title><rect x="1117.1" y="1637" width="3.2" height="15.0" fill="rgb(220,189,27)" rx="2" ry="2" />
<text  x="1120.07" y="1647.5" ></text>
</g>
<g >
<title>count_shadow_nodes (1 samples, 0.09%)</title><rect x="1119.2" y="1541" width="1.1" height="15.0" fill="rgb(210,110,33)" rx="2" ry="2" />
<text  x="1122.24" y="1551.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (34 samples, 3.14%)</title><rect x="239.7" y="1445" width="37.0" height="15.0" fill="rgb(252,102,22)" rx="2" ry="2" />
<text  x="242.69" y="1455.5" >vm_..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.09%)</title><rect x="309.4" y="1541" width="1.0" height="15.0" fill="rgb(215,217,48)" rx="2" ry="2" />
<text  x="312.35" y="1551.5" ></text>
</g>
<g >
<title>execute_command (2 samples, 0.18%)</title><rect x="11.1" y="1605" width="2.2" height="15.0" fill="rgb(205,62,17)" rx="2" ry="2" />
<text  x="14.09" y="1615.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (2 samples, 0.18%)</title><rect x="1023.5" y="181" width="2.1" height="15.0" fill="rgb(235,40,37)" rx="2" ry="2" />
<text  x="1026.45" y="191.5" ></text>
</g>
<g >
<title>xmalloc (1 samples, 0.09%)</title><rect x="11.1" y="1477" width="1.1" height="15.0" fill="rgb(213,63,8)" rx="2" ry="2" />
<text  x="14.09" y="1487.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.09%)</title><rect x="1024.5" y="69" width="1.1" height="15.0" fill="rgb(210,185,35)" rx="2" ry="2" />
<text  x="1027.54" y="79.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (75 samples, 6.92%)</title><rect x="335.5" y="1541" width="81.6" height="15.0" fill="rgb(237,69,47)" rx="2" ry="2" />
<text  x="338.48" y="1551.5" >ringbuf::..</text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.09%)</title><rect x="1124.7" y="1477" width="1.1" height="15.0" fill="rgb(205,151,13)" rx="2" ry="2" />
<text  x="1127.69" y="1487.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1 samples, 0.09%)</title><rect x="122.1" y="1653" width="1.1" height="15.0" fill="rgb(252,23,18)" rx="2" ry="2" />
<text  x="125.12" y="1663.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="285.4" y="1525" width="1.1" height="15.0" fill="rgb(238,79,10)" rx="2" ry="2" />
<text  x="288.41" y="1535.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.09%)</title><rect x="1122.5" y="1525" width="1.1" height="15.0" fill="rgb(253,172,27)" rx="2" ry="2" />
<text  x="1125.51" y="1535.5" ></text>
</g>
<g >
<title>atime_needs_update (1 samples, 0.09%)</title><rect x="295.2" y="1349" width="1.1" height="15.0" fill="rgb(242,9,15)" rx="2" ry="2" />
<text  x="298.20" y="1359.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (2 samples, 0.18%)</title><rect x="1023.5" y="1397" width="2.1" height="15.0" fill="rgb(254,124,11)" rx="2" ry="2" />
<text  x="1026.45" y="1407.5" ></text>
</g>
<g >
<title>irqentry_exit (3 samples, 0.28%)</title><rect x="984.3" y="1637" width="3.2" height="15.0" fill="rgb(253,162,9)" rx="2" ry="2" />
<text  x="987.26" y="1647.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="102.5" y="1525" width="1.1" height="15.0" fill="rgb(243,180,16)" rx="2" ry="2" />
<text  x="105.53" y="1535.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.18%)</title><rect x="1023.5" y="357" width="2.1" height="15.0" fill="rgb(207,10,38)" rx="2" ry="2" />
<text  x="1026.45" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (2 samples, 0.18%)</title><rect x="287.6" y="1541" width="2.2" height="15.0" fill="rgb(227,213,35)" rx="2" ry="2" />
<text  x="290.58" y="1551.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.09%)</title><rect x="286.5" y="1541" width="1.1" height="15.0" fill="rgb(250,128,34)" rx="2" ry="2" />
<text  x="289.49" y="1551.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="286.5" y="1509" width="1.1" height="15.0" fill="rgb(238,86,5)" rx="2" ry="2" />
<text  x="289.49" y="1519.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (2 samples, 0.18%)</title><rect x="1023.5" y="1093" width="2.1" height="15.0" fill="rgb(205,164,4)" rx="2" ry="2" />
<text  x="1026.45" y="1103.5" ></text>
</g>
<g >
<title>CachedMapWritableText (1 samples, 0.09%)</title><rect x="126.5" y="1589" width="1.1" height="15.0" fill="rgb(235,60,26)" rx="2" ry="2" />
<text  x="129.48" y="1599.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.09%)</title><rect x="155.9" y="1461" width="1.1" height="15.0" fill="rgb(215,63,12)" rx="2" ry="2" />
<text  x="158.87" y="1471.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.09%)</title><rect x="13.3" y="1541" width="1.1" height="15.0" fill="rgb(254,42,22)" rx="2" ry="2" />
<text  x="16.27" y="1551.5" ></text>
</g>
<g >
<title>_rl_set_screen_size (2 samples, 0.18%)</title><rect x="11.1" y="1541" width="2.2" height="15.0" fill="rgb(235,65,38)" rx="2" ry="2" />
<text  x="14.09" y="1551.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.09%)</title><rect x="196.1" y="1557" width="1.1" height="15.0" fill="rgb(217,133,16)" rx="2" ry="2" />
<text  x="199.14" y="1567.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (1 samples, 0.09%)</title><rect x="103.6" y="1605" width="1.1" height="15.0" fill="rgb(220,112,51)" rx="2" ry="2" />
<text  x="106.62" y="1615.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::with_capacity_and_hasher_and_shard_amount (2 samples, 0.18%)</title><rect x="1023.5" y="469" width="2.1" height="15.0" fill="rgb(249,117,21)" rx="2" ry="2" />
<text  x="1026.45" y="479.5" ></text>
</g>
<g >
<title>__vm_munmap (37 samples, 3.41%)</title><rect x="155.9" y="1477" width="40.2" height="15.0" fill="rgb(241,107,30)" rx="2" ry="2" />
<text  x="158.87" y="1487.5" >__v..</text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.18%)</title><rect x="1023.5" y="821" width="2.1" height="15.0" fill="rgb(232,46,33)" rx="2" ry="2" />
<text  x="1026.45" y="831.5" ></text>
</g>
<g >
<title>NaClSysMunmap (34 samples, 3.14%)</title><rect x="239.7" y="1637" width="37.0" height="15.0" fill="rgb(228,129,47)" rx="2" ry="2" />
<text  x="242.69" y="1647.5" >NaC..</text>
</g>
<g >
<title>__schedule (2 samples, 0.18%)</title><rect x="1186.7" y="1605" width="2.2" height="15.0" fill="rgb(221,51,37)" rx="2" ry="2" />
<text  x="1189.73" y="1615.5" ></text>
</g>
<g >
<title>perf_ioctl (77 samples, 7.10%)</title><rect x="16.5" y="1541" width="83.9" height="15.0" fill="rgb(248,159,47)" rx="2" ry="2" />
<text  x="19.53" y="1551.5" >perf_ioctl</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (2 samples, 0.18%)</title><rect x="1023.5" y="261" width="2.1" height="15.0" fill="rgb(244,210,15)" rx="2" ry="2" />
<text  x="1026.45" y="271.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.18%)</title><rect x="907.0" y="1541" width="2.2" height="15.0" fill="rgb(219,192,24)" rx="2" ry="2" />
<text  x="909.97" y="1551.5" ></text>
</g>
<g >
<title>MunmapInternal (34 samples, 3.14%)</title><rect x="239.7" y="1621" width="37.0" height="15.0" fill="rgb(253,14,37)" rx="2" ry="2" />
<text  x="242.69" y="1631.5" >Mun..</text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.09%)</title><rect x="1010.4" y="1573" width="1.1" height="15.0" fill="rgb(219,47,47)" rx="2" ry="2" />
<text  x="1013.39" y="1583.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.09%)</title><rect x="288.7" y="1445" width="1.1" height="15.0" fill="rgb(247,123,38)" rx="2" ry="2" />
<text  x="291.67" y="1455.5" ></text>
</g>
<g >
<title>unmap_page_range (34 samples, 3.14%)</title><rect x="239.7" y="1333" width="37.0" height="15.0" fill="rgb(225,161,7)" rx="2" ry="2" />
<text  x="242.69" y="1343.5" >unm..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.09%)</title><rect x="1122.5" y="1493" width="1.1" height="15.0" fill="rgb(240,171,44)" rx="2" ry="2" />
<text  x="1125.51" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_read (3 samples, 0.28%)</title><rect x="294.1" y="1461" width="3.3" height="15.0" fill="rgb(245,188,15)" rx="2" ry="2" />
<text  x="297.11" y="1471.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (2 samples, 0.18%)</title><rect x="453.0" y="1557" width="2.2" height="15.0" fill="rgb(229,29,50)" rx="2" ry="2" />
<text  x="456.04" y="1567.5" ></text>
</g>
<g >
<title>NaClAddrSpaceFree (37 samples, 3.41%)</title><rect x="155.9" y="1557" width="40.2" height="15.0" fill="rgb(238,218,24)" rx="2" ry="2" />
<text  x="158.87" y="1567.5" >NaC..</text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (1 samples, 0.09%)</title><rect x="126.5" y="1557" width="1.1" height="15.0" fill="rgb(243,95,2)" rx="2" ry="2" />
<text  x="129.48" y="1567.5" ></text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (1 samples, 0.09%)</title><rect x="949.4" y="1509" width="1.1" height="15.0" fill="rgb(223,85,50)" rx="2" ry="2" />
<text  x="952.43" y="1519.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.18%)</title><rect x="1023.5" y="805" width="2.1" height="15.0" fill="rgb(210,23,26)" rx="2" ry="2" />
<text  x="1026.45" y="815.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::with_capacity_and_hasher_and_shard_amount::{{closure}} (2 samples, 0.18%)</title><rect x="1023.5" y="277" width="2.1" height="15.0" fill="rgb(226,66,5)" rx="2" ry="2" />
<text  x="1026.45" y="287.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.09%)</title><rect x="155.9" y="1333" width="1.1" height="15.0" fill="rgb(234,227,39)" rx="2" ry="2" />
<text  x="158.87" y="1343.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2 samples, 0.18%)</title><rect x="1023.5" y="133" width="2.1" height="15.0" fill="rgb(247,34,49)" rx="2" ry="2" />
<text  x="1026.45" y="143.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.18%)</title><rect x="336.6" y="1477" width="2.1" height="15.0" fill="rgb(253,227,53)" rx="2" ry="2" />
<text  x="339.57" y="1487.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.09%)</title><rect x="1024.5" y="37" width="1.1" height="15.0" fill="rgb(254,91,13)" rx="2" ry="2" />
<text  x="1027.54" y="47.5" ></text>
</g>
<g >
<title>cpuidle_enter (59 samples, 5.44%)</title><rect x="1120.3" y="1605" width="64.3" height="15.0" fill="rgb(239,3,7)" rx="2" ry="2" />
<text  x="1123.33" y="1615.5" >cpuidle..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="103.6" y="1669" width="1.1" height="15.0" fill="rgb(216,179,54)" rx="2" ry="2" />
<text  x="106.62" y="1679.5" ></text>
</g>
<g >
<title>start_kernel (1 samples, 0.09%)</title><rect x="1188.9" y="1637" width="1.1" height="15.0" fill="rgb(230,13,11)" rx="2" ry="2" />
<text  x="1191.91" y="1647.5" ></text>
</g>
<g >
<title>free_unref_page_list (14 samples, 1.29%)</title><rect x="260.4" y="1237" width="15.2" height="15.0" fill="rgb(211,13,26)" rx="2" ry="2" />
<text  x="263.37" y="1247.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.09%)</title><rect x="155.9" y="1429" width="1.1" height="15.0" fill="rgb(253,18,49)" rx="2" ry="2" />
<text  x="158.87" y="1439.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="126.5" y="1461" width="1.1" height="15.0" fill="rgb(222,89,29)" rx="2" ry="2" />
<text  x="129.48" y="1471.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="1010.4" y="1477" width="1.1" height="15.0" fill="rgb(252,65,54)" rx="2" ry="2" />
<text  x="1013.39" y="1487.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.18%)</title><rect x="1023.5" y="645" width="2.1" height="15.0" fill="rgb(232,55,42)" rx="2" ry="2" />
<text  x="1026.45" y="655.5" ></text>
</g>
<g >
<title>cpuidle_select (2 samples, 0.18%)</title><rect x="1184.6" y="1605" width="2.1" height="15.0" fill="rgb(235,197,1)" rx="2" ry="2" />
<text  x="1187.56" y="1615.5" ></text>
</g>
<g >
<title>mem_cgroup_iter (1 samples, 0.09%)</title><rect x="1118.2" y="1589" width="1.0" height="15.0" fill="rgb(251,214,11)" rx="2" ry="2" />
<text  x="1121.15" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1010.4" y="1621" width="1.1" height="15.0" fill="rgb(214,25,18)" rx="2" ry="2" />
<text  x="1013.39" y="1631.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.18%)</title><rect x="11.1" y="1589" width="2.2" height="15.0" fill="rgb(237,172,9)" rx="2" ry="2" />
<text  x="14.09" y="1599.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 0.09%)</title><rect x="1188.9" y="1653" width="1.1" height="15.0" fill="rgb(247,19,5)" rx="2" ry="2" />
<text  x="1191.91" y="1663.5" ></text>
</g>
<g >
<title>__perf_event_enable (1 samples, 0.09%)</title><rect x="103.6" y="1493" width="1.1" height="15.0" fill="rgb(243,127,9)" rx="2" ry="2" />
<text  x="106.62" y="1503.5" ></text>
</g>
<g >
<title>ovl_read_iter (2 samples, 0.18%)</title><rect x="295.2" y="1397" width="2.2" height="15.0" fill="rgb(217,10,2)" rx="2" ry="2" />
<text  x="298.20" y="1407.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.09%)</title><rect x="276.7" y="1621" width="1.1" height="15.0" fill="rgb(222,129,52)" rx="2" ry="2" />
<text  x="279.70" y="1631.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.09%)</title><rect x="13.3" y="1573" width="1.1" height="15.0" fill="rgb(222,118,14)" rx="2" ry="2" />
<text  x="16.27" y="1583.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.09%)</title><rect x="102.5" y="1365" width="1.1" height="15.0" fill="rgb(231,186,25)" rx="2" ry="2" />
<text  x="105.53" y="1375.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_enum (2 samples, 0.18%)</title><rect x="1023.5" y="933" width="2.1" height="15.0" fill="rgb(208,3,43)" rx="2" ry="2" />
<text  x="1026.45" y="943.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.09%)</title><rect x="102.5" y="1397" width="1.1" height="15.0" fill="rgb(251,1,36)" rx="2" ry="2" />
<text  x="105.53" y="1407.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.18%)</title><rect x="971.2" y="1493" width="2.2" height="15.0" fill="rgb(233,175,0)" rx="2" ry="2" />
<text  x="974.20" y="1503.5" ></text>
</g>
<g >
<title>NaClAddrSpaceFree (35 samples, 3.23%)</title><rect x="197.2" y="1573" width="38.1" height="15.0" fill="rgb(230,87,5)" rx="2" ry="2" />
<text  x="200.23" y="1583.5" >NaC..</text>
</g>
<g >
<title>do_group_exit (1 samples, 0.09%)</title><rect x="13.3" y="1637" width="1.1" height="15.0" fill="rgb(247,30,28)" rx="2" ry="2" />
<text  x="16.27" y="1647.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (2 samples, 0.18%)</title><rect x="1023.5" y="229" width="2.1" height="15.0" fill="rgb(216,221,9)" rx="2" ry="2" />
<text  x="1026.45" y="239.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.09%)</title><rect x="1068.1" y="1573" width="1.1" height="15.0" fill="rgb(209,210,45)" rx="2" ry="2" />
<text  x="1071.08" y="1583.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.18%)</title><rect x="1023.5" y="197" width="2.1" height="15.0" fill="rgb(229,162,33)" rx="2" ry="2" />
<text  x="1026.45" y="207.5" ></text>
</g>
<g >
<title>down_write_killable (34 samples, 3.14%)</title><rect x="198.3" y="1477" width="37.0" height="15.0" fill="rgb(248,82,27)" rx="2" ry="2" />
<text  x="201.32" y="1487.5" >dow..</text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.09%)</title><rect x="880.8" y="1605" width="1.1" height="15.0" fill="rgb(207,228,44)" rx="2" ry="2" />
<text  x="883.85" y="1615.5" ></text>
</g>
<g >
<title>core::cmp::min (19 samples, 1.75%)</title><rect x="432.4" y="1557" width="20.6" height="15.0" fill="rgb(241,21,45)" rx="2" ry="2" />
<text  x="435.36" y="1567.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (34 samples, 3.14%)</title><rect x="239.7" y="1573" width="37.0" height="15.0" fill="rgb(252,175,14)" rx="2" ry="2" />
<text  x="242.69" y="1583.5" >rus..</text>
</g>
<g >
<title>BitmapSetBit (2 samples, 0.18%)</title><rect x="152.6" y="1541" width="2.2" height="15.0" fill="rgb(242,87,9)" rx="2" ry="2" />
<text  x="155.60" y="1551.5" ></text>
</g>
<g >
<title>record__write (1 samples, 0.09%)</title><rect x="101.4" y="1605" width="1.1" height="15.0" fill="rgb(249,55,13)" rx="2" ry="2" />
<text  x="104.44" y="1615.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.09%)</title><rect x="1188.9" y="1541" width="1.1" height="15.0" fill="rgb(254,61,36)" rx="2" ry="2" />
<text  x="1191.91" y="1551.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::incref_root (2 samples, 0.18%)</title><rect x="1023.5" y="1589" width="2.1" height="15.0" fill="rgb(248,119,49)" rx="2" ry="2" />
<text  x="1026.45" y="1599.5" ></text>
</g>
<g >
<title>llseek (3 samples, 0.28%)</title><rect x="298.5" y="1525" width="3.2" height="15.0" fill="rgb(245,55,50)" rx="2" ry="2" />
<text  x="301.47" y="1535.5" ></text>
</g>
<g >
<title>mem_cgroup_css_rstat_flush (1 samples, 0.09%)</title><rect x="101.4" y="1253" width="1.1" height="15.0" fill="rgb(239,129,33)" rx="2" ry="2" />
<text  x="104.44" y="1263.5" ></text>
</g>
<g >
<title>error_entry (6 samples, 0.55%)</title><rect x="988.6" y="1669" width="6.5" height="15.0" fill="rgb(229,228,7)" rx="2" ry="2" />
<text  x="991.62" y="1679.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (2 samples, 0.18%)</title><rect x="1021.3" y="1573" width="2.2" height="15.0" fill="rgb(215,140,40)" rx="2" ry="2" />
<text  x="1024.27" y="1583.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (2 samples, 0.18%)</title><rect x="1007.1" y="1381" width="2.2" height="15.0" fill="rgb(235,141,35)" rx="2" ry="2" />
<text  x="1010.12" y="1391.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.09%)</title><rect x="1022.4" y="1461" width="1.1" height="15.0" fill="rgb(250,120,15)" rx="2" ry="2" />
<text  x="1025.36" y="1471.5" ></text>
</g>
<g >
<title>_perf_event_enable (1 samples, 0.09%)</title><rect x="103.6" y="1589" width="1.1" height="15.0" fill="rgb(217,179,10)" rx="2" ry="2" />
<text  x="106.62" y="1599.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (1 samples, 0.09%)</title><rect x="1068.1" y="1381" width="1.1" height="15.0" fill="rgb(234,214,29)" rx="2" ry="2" />
<text  x="1071.08" y="1391.5" ></text>
</g>
<g >
<title>do_shrink_slab (1 samples, 0.09%)</title><rect x="1119.2" y="1557" width="1.1" height="15.0" fill="rgb(244,0,6)" rx="2" ry="2" />
<text  x="1122.24" y="1567.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.09%)</title><rect x="285.4" y="1493" width="1.1" height="15.0" fill="rgb(242,81,37)" rx="2" ry="2" />
<text  x="288.41" y="1503.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.09%)</title><rect x="155.9" y="1397" width="1.1" height="15.0" fill="rgb(249,46,27)" rx="2" ry="2" />
<text  x="158.87" y="1407.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (64 samples, 5.90%)</title><rect x="1120.3" y="1685" width="69.7" height="15.0" fill="rgb(221,54,46)" rx="2" ry="2" />
<text  x="1123.33" y="1695.5" >seconda..</text>
</g>
<g >
<title>__handle_mm_fault (92 samples, 8.49%)</title><rect x="881.9" y="1605" width="100.2" height="15.0" fill="rgb(228,186,19)" rx="2" ry="2" />
<text  x="884.94" y="1615.5" >__handle_mm_..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::deserialize (2 samples, 0.18%)</title><rect x="1023.5" y="789" width="2.1" height="15.0" fill="rgb(210,138,40)" rx="2" ry="2" />
<text  x="1026.45" y="799.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (35 samples, 3.23%)</title><rect x="197.2" y="1605" width="38.1" height="15.0" fill="rgb(254,143,28)" rx="2" ry="2" />
<text  x="200.23" y="1615.5" >NaC..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.09%)</title><rect x="1122.5" y="1461" width="1.1" height="15.0" fill="rgb(227,62,27)" rx="2" ry="2" />
<text  x="1125.51" y="1471.5" ></text>
</g>
<g >
<title>read (6 samples, 0.55%)</title><rect x="291.9" y="1509" width="6.6" height="15.0" fill="rgb(252,216,39)" rx="2" ry="2" />
<text  x="294.94" y="1519.5" ></text>
</g>
<g >
<title>all (1,084 samples, 100%)</title><rect x="10.0" y="1717" width="1180.0" height="15.0" fill="rgb(223,118,53)" rx="2" ry="2" />
<text  x="13.00" y="1727.5" ></text>
</g>
<g >
<title>perf_mmap__push (1 samples, 0.09%)</title><rect x="102.5" y="1621" width="1.1" height="15.0" fill="rgb(225,140,18)" rx="2" ry="2" />
<text  x="105.53" y="1631.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (134 samples, 12.36%)</title><rect x="635.9" y="1541" width="145.9" height="15.0" fill="rgb(206,102,1)" rx="2" ry="2" />
<text  x="638.92" y="1551.5" >ringbuf::ring_buff..</text>
</g>
<g >
<title>record__mmap_read_evlist (1 samples, 0.09%)</title><rect x="102.5" y="1637" width="1.1" height="15.0" fill="rgb(230,177,14)" rx="2" ry="2" />
<text  x="105.53" y="1647.5" ></text>
</g>
<g >
<title>&lt;dashmap::serde::DashMapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (2 samples, 0.18%)</title><rect x="1023.5" y="1029" width="2.1" height="15.0" fill="rgb(231,56,4)" rx="2" ry="2" />
<text  x="1026.45" y="1039.5" ></text>
</g>
<g >
<title>serde_cbor::de::from_slice (2 samples, 0.18%)</title><rect x="1023.5" y="1333" width="2.1" height="15.0" fill="rgb(219,135,18)" rx="2" ry="2" />
<text  x="1026.45" y="1343.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (1 samples, 0.09%)</title><rect x="1116.0" y="1637" width="1.1" height="15.0" fill="rgb(230,48,29)" rx="2" ry="2" />
<text  x="1118.98" y="1647.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.09%)</title><rect x="102.5" y="1493" width="1.1" height="15.0" fill="rgb(254,162,4)" rx="2" ry="2" />
<text  x="105.53" y="1503.5" ></text>
</g>
<g >
<title>pfn_pte (1 samples, 0.09%)</title><rect x="978.8" y="1557" width="1.1" height="15.0" fill="rgb(244,3,45)" rx="2" ry="2" />
<text  x="981.82" y="1567.5" ></text>
</g>
<g >
<title>dispatcher (34 samples, 3.14%)</title><rect x="239.7" y="1589" width="37.0" height="15.0" fill="rgb(218,63,14)" rx="2" ry="2" />
<text  x="242.69" y="1599.5" >dis..</text>
</g>
<g >
<title>std::sys::unix::fs::File::read (7 samples, 0.65%)</title><rect x="290.8" y="1541" width="7.7" height="15.0" fill="rgb(222,134,23)" rx="2" ry="2" />
<text  x="293.85" y="1551.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (37 samples, 3.41%)</title><rect x="155.9" y="1589" width="40.2" height="15.0" fill="rgb(218,21,5)" rx="2" ry="2" />
<text  x="158.87" y="1599.5" >NaC..</text>
</g>
<g >
<title>do_syscall_64 (79 samples, 7.29%)</title><rect x="15.4" y="1573" width="86.0" height="15.0" fill="rgb(217,128,36)" rx="2" ry="2" />
<text  x="18.44" y="1583.5" >do_syscall..</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.09%)</title><rect x="13.3" y="1509" width="1.1" height="15.0" fill="rgb(224,73,38)" rx="2" ry="2" />
<text  x="16.27" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.09%)</title><rect x="289.8" y="1525" width="1.0" height="15.0" fill="rgb(237,62,38)" rx="2" ry="2" />
<text  x="292.76" y="1535.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.09%)</title><rect x="11.1" y="1461" width="1.1" height="15.0" fill="rgb(217,2,25)" rx="2" ry="2" />
<text  x="14.09" y="1471.5" ></text>
</g>
<g >
<title>handle_pte_fault (87 samples, 8.03%)</title><rect x="885.2" y="1589" width="94.7" height="15.0" fill="rgb(220,207,13)" rx="2" ry="2" />
<text  x="888.20" y="1599.5" >handle_pte_..</text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.09%)</title><rect x="103.6" y="1461" width="1.1" height="15.0" fill="rgb(252,101,2)" rx="2" ry="2" />
<text  x="106.62" y="1471.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.18%)</title><rect x="1023.5" y="293" width="2.1" height="15.0" fill="rgb(234,123,8)" rx="2" ry="2" />
<text  x="1026.45" y="303.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.09%)</title><rect x="1020.2" y="1509" width="1.1" height="15.0" fill="rgb(209,54,54)" rx="2" ry="2" />
<text  x="1023.18" y="1519.5" ></text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force::{{closure}} (2 samples, 0.18%)</title><rect x="1023.5" y="1413" width="2.1" height="15.0" fill="rgb(240,128,48)" rx="2" ry="2" />
<text  x="1026.45" y="1423.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="28.5" y="1429" width="1.1" height="15.0" fill="rgb(250,183,30)" rx="2" ry="2" />
<text  x="31.51" y="1439.5" ></text>
</g>
<g >
<title>_start (2 samples, 0.18%)</title><rect x="11.1" y="1685" width="2.2" height="15.0" fill="rgb(213,227,34)" rx="2" ry="2" />
<text  x="14.09" y="1695.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (1 samples, 0.09%)</title><rect x="1125.8" y="1557" width="1.1" height="15.0" fill="rgb(211,49,14)" rx="2" ry="2" />
<text  x="1128.77" y="1567.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.18%)</title><rect x="1023.5" y="117" width="2.1" height="15.0" fill="rgb(222,12,23)" rx="2" ry="2" />
<text  x="1026.45" y="127.5" ></text>
</g>
<g >
<title>page_remove_rmap (7 samples, 0.65%)</title><rect x="247.3" y="1285" width="7.6" height="15.0" fill="rgb(248,151,43)" rx="2" ry="2" />
<text  x="250.31" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.18%)</title><rect x="1023.5" y="1301" width="2.1" height="15.0" fill="rgb(222,210,51)" rx="2" ry="2" />
<text  x="1026.45" y="1311.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 5.81%)</title><rect x="30.7" y="1349" width="68.6" height="15.0" fill="rgb(213,50,7)" rx="2" ry="2" />
<text  x="33.68" y="1359.5" >intel_p..</text>
</g>
<g >
<title>do_mmap (34 samples, 3.14%)</title><rect x="239.7" y="1429" width="37.0" height="15.0" fill="rgb(232,75,35)" rx="2" ry="2" />
<text  x="242.69" y="1439.5" >do_..</text>
</g>
<g >
<title>__mod_lruvec_state (4 samples, 0.37%)</title><rect x="250.6" y="1253" width="4.3" height="15.0" fill="rgb(241,177,41)" rx="2" ry="2" />
<text  x="253.57" y="1263.5" ></text>
</g>
<g >
<title>NaClSysRead (128 samples, 11.81%)</title><rect x="277.8" y="1637" width="139.3" height="15.0" fill="rgb(214,170,54)" rx="2" ry="2" />
<text  x="280.79" y="1647.5" >NaClSysRead</text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.09%)</title><rect x="310.4" y="1557" width="1.1" height="15.0" fill="rgb(253,130,24)" rx="2" ry="2" />
<text  x="313.44" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="106.9" y="1669" width="1.1" height="15.0" fill="rgb(244,39,2)" rx="2" ry="2" />
<text  x="109.88" y="1679.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.09%)</title><rect x="1122.5" y="1509" width="1.1" height="15.0" fill="rgb(236,161,31)" rx="2" ry="2" />
<text  x="1125.51" y="1519.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.09%)</title><rect x="234.2" y="1349" width="1.1" height="15.0" fill="rgb(228,227,4)" rx="2" ry="2" />
<text  x="237.24" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.28%)</title><rect x="1113.8" y="1669" width="3.3" height="15.0" fill="rgb(213,172,53)" rx="2" ry="2" />
<text  x="1116.80" y="1679.5" ></text>
</g>
<g >
<title>shmem_fault (2 samples, 0.18%)</title><rect x="1007.1" y="1397" width="2.2" height="15.0" fill="rgb(221,19,17)" rx="2" ry="2" />
<text  x="1010.12" y="1407.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.09%)</title><rect x="977.7" y="1541" width="1.1" height="15.0" fill="rgb(238,73,7)" rx="2" ry="2" />
<text  x="980.73" y="1551.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.09%)</title><rect x="287.6" y="1445" width="1.1" height="15.0" fill="rgb(209,129,24)" rx="2" ry="2" />
<text  x="290.58" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.18%)</title><rect x="453.0" y="1493" width="2.2" height="15.0" fill="rgb(236,190,34)" rx="2" ry="2" />
<text  x="456.04" y="1503.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (5 samples, 0.46%)</title><rect x="1020.2" y="1621" width="5.4" height="15.0" fill="rgb(237,34,18)" rx="2" ry="2" />
<text  x="1023.18" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="101.4" y="1557" width="1.1" height="15.0" fill="rgb(253,112,10)" rx="2" ry="2" />
<text  x="104.44" y="1567.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.09%)</title><rect x="1122.5" y="1477" width="1.1" height="15.0" fill="rgb(232,140,48)" rx="2" ry="2" />
<text  x="1125.51" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 3.23%)</title><rect x="197.2" y="1525" width="38.1" height="15.0" fill="rgb(235,76,54)" rx="2" ry="2" />
<text  x="200.23" y="1535.5" >do_..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.09%)</title><rect x="1116.0" y="1589" width="1.1" height="15.0" fill="rgb(246,149,19)" rx="2" ry="2" />
<text  x="1118.98" y="1599.5" ></text>
</g>
<g >
<title>[perf-1623.map] (1 samples, 0.09%)</title><rect x="118.9" y="1685" width="1.0" height="15.0" fill="rgb(233,114,49)" rx="2" ry="2" />
<text  x="121.86" y="1695.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (34 samples, 3.14%)</title><rect x="198.3" y="1445" width="37.0" height="15.0" fill="rgb(206,221,16)" rx="2" ry="2" />
<text  x="201.32" y="1455.5" >rws..</text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (2 samples, 0.18%)</title><rect x="1023.5" y="741" width="2.1" height="15.0" fill="rgb(235,136,30)" rx="2" ry="2" />
<text  x="1026.45" y="751.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (9 samples, 0.83%)</title><rect x="891.7" y="1525" width="9.8" height="15.0" fill="rgb(218,188,7)" rx="2" ry="2" />
<text  x="894.73" y="1535.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_irqsafe (1 samples, 0.09%)</title><rect x="101.4" y="1285" width="1.1" height="15.0" fill="rgb(240,126,38)" rx="2" ry="2" />
<text  x="104.44" y="1295.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="1010.4" y="1461" width="1.1" height="15.0" fill="rgb(237,23,54)" rx="2" ry="2" />
<text  x="1013.39" y="1471.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.09%)</title><rect x="101.4" y="1493" width="1.1" height="15.0" fill="rgb(252,121,46)" rx="2" ry="2" />
<text  x="104.44" y="1503.5" ></text>
</g>
<g >
<title>[[heap]] (1 samples, 0.09%)</title><rect x="10.0" y="1685" width="1.1" height="15.0" fill="rgb(213,199,25)" rx="2" ry="2" />
<text  x="13.00" y="1695.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (2 samples, 0.18%)</title><rect x="1023.5" y="565" width="2.1" height="15.0" fill="rgb(221,27,35)" rx="2" ry="2" />
<text  x="1026.45" y="575.5" ></text>
</g>
<g >
<title>__mmap (34 samples, 3.14%)</title><rect x="239.7" y="1525" width="37.0" height="15.0" fill="rgb(236,105,47)" rx="2" ry="2" />
<text  x="242.69" y="1535.5" >__m..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (68 samples, 6.27%)</title><rect x="342.0" y="1509" width="74.0" height="15.0" fill="rgb(246,157,8)" rx="2" ry="2" />
<text  x="345.01" y="1519.5" >ringbuf:..</text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (2 samples, 0.18%)</title><rect x="1023.5" y="1045" width="2.1" height="15.0" fill="rgb(222,113,44)" rx="2" ry="2" />
<text  x="1026.45" y="1055.5" ></text>
</g>
<g >
<title>do_group_exit (3 samples, 0.28%)</title><rect x="1065.9" y="1637" width="3.3" height="15.0" fill="rgb(215,171,19)" rx="2" ry="2" />
<text  x="1068.90" y="1647.5" ></text>
</g>
<g >
<title>mmap_region (34 samples, 3.14%)</title><rect x="239.7" y="1413" width="37.0" height="15.0" fill="rgb(211,36,38)" rx="2" ry="2" />
<text  x="242.69" y="1423.5" >mma..</text>
</g>
<g >
<title>__do_munmap (34 samples, 3.14%)</title><rect x="239.7" y="1397" width="37.0" height="15.0" fill="rgb(209,83,9)" rx="2" ry="2" />
<text  x="242.69" y="1407.5" >__d..</text>
</g>
<g >
<title>ValidateChunkAMD64 (4 samples, 0.37%)</title><rect x="235.3" y="1509" width="4.4" height="15.0" fill="rgb(235,78,26)" rx="2" ry="2" />
<text  x="238.33" y="1519.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="126.5" y="1541" width="1.1" height="15.0" fill="rgb(209,67,3)" rx="2" ry="2" />
<text  x="129.48" y="1551.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.09%)</title><rect x="197.2" y="1445" width="1.1" height="15.0" fill="rgb(240,136,5)" rx="2" ry="2" />
<text  x="200.23" y="1455.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (335 samples, 30.90%)</title><rect x="417.1" y="1653" width="364.7" height="15.0" fill="rgb(239,161,1)" rx="2" ry="2" />
<text  x="420.12" y="1663.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.09%)</title><rect x="103.6" y="1557" width="1.1" height="15.0" fill="rgb(221,155,4)" rx="2" ry="2" />
<text  x="106.62" y="1567.5" ></text>
</g>
<g >
<title>NaClValidateCode (26 samples, 2.40%)</title><rect x="127.6" y="1605" width="28.3" height="15.0" fill="rgb(232,223,9)" rx="2" ry="2" />
<text  x="130.56" y="1615.5" >N..</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (5 samples, 0.46%)</title><rect x="486.8" y="1493" width="5.4" height="15.0" fill="rgb(219,16,32)" rx="2" ry="2" />
<text  x="489.79" y="1503.5" ></text>
</g>
<g >
<title>mmput (2 samples, 0.18%)</title><rect x="1065.9" y="1589" width="2.2" height="15.0" fill="rgb(243,166,4)" rx="2" ry="2" />
<text  x="1068.90" y="1599.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (28 samples, 2.58%)</title><rect x="605.4" y="1525" width="30.5" height="15.0" fill="rgb(211,18,25)" rx="2" ry="2" />
<text  x="608.44" y="1535.5" >ru..</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (10 samples, 0.92%)</title><rect x="108.0" y="1621" width="10.9" height="15.0" fill="rgb(247,225,48)" rx="2" ry="2" />
<text  x="110.97" y="1631.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (4 samples, 0.37%)</title><rect x="1007.1" y="1669" width="4.4" height="15.0" fill="rgb(241,107,26)" rx="2" ry="2" />
<text  x="1010.12" y="1679.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (93 samples, 8.58%)</title><rect x="504.2" y="1493" width="101.2" height="15.0" fill="rgb(223,35,35)" rx="2" ry="2" />
<text  x="507.21" y="1503.5" >core::intrin..</text>
</g>
<g >
<title>_nc_read_entry2 (1 samples, 0.09%)</title><rect x="12.2" y="1461" width="1.1" height="15.0" fill="rgb(243,105,36)" rx="2" ry="2" />
<text  x="15.18" y="1471.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (2 samples, 0.18%)</title><rect x="1023.5" y="1253" width="2.1" height="15.0" fill="rgb(219,89,14)" rx="2" ry="2" />
<text  x="1026.45" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="1024.5" y="101" width="1.1" height="15.0" fill="rgb(244,18,40)" rx="2" ry="2" />
<text  x="1027.54" y="111.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.09%)</title><rect x="1122.5" y="1445" width="1.1" height="15.0" fill="rgb(248,148,40)" rx="2" ry="2" />
<text  x="1125.51" y="1455.5" ></text>
</g>
<g >
<title>NaClValidateImage (1 samples, 0.09%)</title><rect x="196.1" y="1541" width="1.1" height="15.0" fill="rgb(211,74,28)" rx="2" ry="2" />
<text  x="199.14" y="1551.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_enum_map::{{closure}} (2 samples, 0.18%)</title><rect x="1023.5" y="885" width="2.1" height="15.0" fill="rgb(228,35,30)" rx="2" ry="2" />
<text  x="1026.45" y="895.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4 samples, 0.37%)</title><rect x="1121.4" y="1573" width="4.4" height="15.0" fill="rgb(208,53,3)" rx="2" ry="2" />
<text  x="1124.42" y="1583.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.18%)</title><rect x="1023.5" y="309" width="2.1" height="15.0" fill="rgb(252,110,10)" rx="2" ry="2" />
<text  x="1026.45" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.09%)</title><rect x="286.5" y="1477" width="1.1" height="15.0" fill="rgb(234,17,20)" rx="2" ry="2" />
<text  x="289.49" y="1487.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="1122.5" y="1541" width="1.1" height="15.0" fill="rgb(254,129,47)" rx="2" ry="2" />
<text  x="1125.51" y="1551.5" ></text>
</g>
<g >
<title>[[heap]] (2 samples, 0.18%)</title><rect x="104.7" y="1685" width="2.2" height="15.0" fill="rgb(211,55,0)" rx="2" ry="2" />
<text  x="107.70" y="1695.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.09%)</title><rect x="1010.4" y="1605" width="1.1" height="15.0" fill="rgb(232,74,11)" rx="2" ry="2" />
<text  x="1013.39" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.28%)</title><rect x="1065.9" y="1669" width="3.3" height="15.0" fill="rgb(229,207,6)" rx="2" ry="2" />
<text  x="1068.90" y="1679.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (2 samples, 0.18%)</title><rect x="1007.1" y="1509" width="2.2" height="15.0" fill="rgb(244,135,13)" rx="2" ry="2" />
<text  x="1010.12" y="1519.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.18%)</title><rect x="1023.5" y="581" width="2.1" height="15.0" fill="rgb(238,162,42)" rx="2" ry="2" />
<text  x="1026.45" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="1007.1" y="1621" width="2.2" height="15.0" fill="rgb(206,173,43)" rx="2" ry="2" />
<text  x="1010.12" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 1.11%)</title><rect x="1007.1" y="1685" width="13.1" height="15.0" fill="rgb(252,50,48)" rx="2" ry="2" />
<text  x="1010.12" y="1695.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="1022.4" y="1253" width="1.1" height="15.0" fill="rgb(253,49,24)" rx="2" ry="2" />
<text  x="1025.36" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="103.6" y="1685" width="1.1" height="15.0" fill="rgb(242,61,38)" rx="2" ry="2" />
<text  x="106.62" y="1695.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::multiple::RefMulti&lt;usize,rustposix::safeposix::filesystem::Inode&gt;&gt; (1 samples, 0.09%)</title><rect x="1021.3" y="1477" width="1.1" height="15.0" fill="rgb(246,8,39)" rx="2" ry="2" />
<text  x="1024.27" y="1487.5" ></text>
</g>
<g >
<title>perf (83 samples, 7.66%)</title><rect x="14.4" y="1701" width="90.3" height="15.0" fill="rgb(236,72,49)" rx="2" ry="2" />
<text  x="17.35" y="1711.5" >perf</text>
</g>
<g >
<title>new_sync_write (1 samples, 0.09%)</title><rect x="102.5" y="1461" width="1.1" height="15.0" fill="rgb(246,20,4)" rx="2" ry="2" />
<text  x="105.53" y="1471.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize (2 samples, 0.18%)</title><rect x="1023.5" y="949" width="2.1" height="15.0" fill="rgb(232,36,54)" rx="2" ry="2" />
<text  x="1026.45" y="959.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.18%)</title><rect x="1007.1" y="1445" width="2.2" height="15.0" fill="rgb(229,220,4)" rx="2" ry="2" />
<text  x="1010.12" y="1455.5" ></text>
</g>
<g >
<title>__free_one_page (1 samples, 0.09%)</title><rect x="1068.1" y="1349" width="1.1" height="15.0" fill="rgb(248,137,25)" rx="2" ry="2" />
<text  x="1071.08" y="1359.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (134 samples, 12.36%)</title><rect x="635.9" y="1557" width="145.9" height="15.0" fill="rgb(205,218,24)" rx="2" ry="2" />
<text  x="638.92" y="1567.5" >ringbuf::producer:..</text>
</g>
<g >
<title>cpuidle_idle_call (1 samples, 0.09%)</title><rect x="1188.9" y="1557" width="1.1" height="15.0" fill="rgb(248,186,6)" rx="2" ry="2" />
<text  x="1191.91" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="101.4" y="1541" width="1.1" height="15.0" fill="rgb(254,49,49)" rx="2" ry="2" />
<text  x="104.44" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.37%)</title><rect x="294.1" y="1477" width="4.4" height="15.0" fill="rgb(245,100,32)" rx="2" ry="2" />
<text  x="297.11" y="1487.5" ></text>
</g>
<g >
<title>make_child (1 samples, 0.09%)</title><rect x="10.0" y="1669" width="1.1" height="15.0" fill="rgb(218,57,3)" rx="2" ry="2" />
<text  x="13.00" y="1679.5" ></text>
</g>
<g >
<title>__vm_munmap (35 samples, 3.23%)</title><rect x="197.2" y="1493" width="38.1" height="15.0" fill="rgb(234,89,42)" rx="2" ry="2" />
<text  x="200.23" y="1503.5" >__v..</text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (1 samples, 0.09%)</title><rect x="1113.8" y="1589" width="1.1" height="15.0" fill="rgb(253,90,9)" rx="2" ry="2" />
<text  x="1116.80" y="1599.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (1 samples, 0.09%)</title><rect x="101.4" y="1349" width="1.1" height="15.0" fill="rgb(216,66,51)" rx="2" ry="2" />
<text  x="104.44" y="1359.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.constprop.0.isra.0 (1 samples, 0.09%)</title><rect x="1124.7" y="1493" width="1.1" height="15.0" fill="rgb(230,74,12)" rx="2" ry="2" />
<text  x="1127.69" y="1503.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.18%)</title><rect x="333.3" y="1509" width="2.2" height="15.0" fill="rgb(219,15,42)" rx="2" ry="2" />
<text  x="336.30" y="1519.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (35 samples, 3.23%)</title><rect x="197.2" y="1653" width="38.1" height="15.0" fill="rgb(245,93,29)" rx="2" ry="2" />
<text  x="200.23" y="1663.5" >NaC..</text>
</g>
<g >
<title>event_function (1 samples, 0.09%)</title><rect x="103.6" y="1509" width="1.1" height="15.0" fill="rgb(222,180,37)" rx="2" ry="2" />
<text  x="106.62" y="1519.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="1024.5" y="53" width="1.1" height="15.0" fill="rgb(213,80,54)" rx="2" ry="2" />
<text  x="1027.54" y="63.5" ></text>
</g>
<g >
<title>lock_page_lruvec_irqsave (1 samples, 0.09%)</title><rect x="973.4" y="1509" width="1.1" height="15.0" fill="rgb(213,146,20)" rx="2" ry="2" />
<text  x="976.38" y="1519.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.09%)</title><rect x="1067.0" y="1541" width="1.1" height="15.0" fill="rgb(231,19,13)" rx="2" ry="2" />
<text  x="1069.99" y="1551.5" ></text>
</g>
<g >
<title>unmap_vmas (34 samples, 3.14%)</title><rect x="239.7" y="1365" width="37.0" height="15.0" fill="rgb(227,30,15)" rx="2" ry="2" />
<text  x="242.69" y="1375.5" >unm..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="284.3" y="1589" width="1.1" height="15.0" fill="rgb(233,196,2)" rx="2" ry="2" />
<text  x="287.32" y="1599.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (11 samples, 1.01%)</title><rect x="474.8" y="1493" width="12.0" height="15.0" fill="rgb(222,18,33)" rx="2" ry="2" />
<text  x="477.82" y="1503.5" ></text>
</g>
<g >
<title>main (2 samples, 0.18%)</title><rect x="11.1" y="1637" width="2.2" height="15.0" fill="rgb(242,69,38)" rx="2" ry="2" />
<text  x="14.09" y="1647.5" ></text>
</g>
<g >
<title>lind (4 samples, 0.37%)</title><rect x="10.0" y="1701" width="4.4" height="15.0" fill="rgb(248,194,45)" rx="2" ry="2" />
<text  x="13.00" y="1711.5" ></text>
</g>
<g >
<title>dispatcher (334 samples, 30.81%)</title><rect x="418.2" y="1605" width="363.6" height="15.0" fill="rgb(235,178,19)" rx="2" ry="2" />
<text  x="421.21" y="1615.5" >dispatcher</text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.18%)</title><rect x="11.1" y="1669" width="2.2" height="15.0" fill="rgb(246,67,46)" rx="2" ry="2" />
<text  x="14.09" y="1679.5" ></text>
</g>
<g >
<title>__get_user_pages (2 samples, 0.18%)</title><rect x="1007.1" y="1493" width="2.2" height="15.0" fill="rgb(218,195,1)" rx="2" ry="2" />
<text  x="1010.12" y="1503.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (104 samples, 9.59%)</title><rect x="492.2" y="1509" width="113.2" height="15.0" fill="rgb(218,151,46)" rx="2" ry="2" />
<text  x="495.23" y="1519.5" >ringbuf::prod..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (1 samples, 0.09%)</title><rect x="1022.4" y="1413" width="1.1" height="15.0" fill="rgb(251,86,48)" rx="2" ry="2" />
<text  x="1025.36" y="1423.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (2 samples, 0.18%)</title><rect x="1023.5" y="1013" width="2.1" height="15.0" fill="rgb(210,9,23)" rx="2" ry="2" />
<text  x="1026.45" y="1023.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (1 samples, 0.09%)</title><rect x="889.6" y="1557" width="1.0" height="15.0" fill="rgb(238,98,11)" rx="2" ry="2" />
<text  x="892.56" y="1567.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.18%)</title><rect x="1123.6" y="1525" width="2.2" height="15.0" fill="rgb(235,199,39)" rx="2" ry="2" />
<text  x="1126.60" y="1535.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.09%)</title><rect x="126.5" y="1509" width="1.1" height="15.0" fill="rgb(227,166,1)" rx="2" ry="2" />
<text  x="129.48" y="1519.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.09%)</title><rect x="1010.4" y="1589" width="1.1" height="15.0" fill="rgb(224,70,35)" rx="2" ry="2" />
<text  x="1013.39" y="1599.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.18%)</title><rect x="295.2" y="1429" width="2.2" height="15.0" fill="rgb(212,64,8)" rx="2" ry="2" />
<text  x="298.20" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (34 samples, 3.14%)</title><rect x="239.7" y="1493" width="37.0" height="15.0" fill="rgb(215,101,46)" rx="2" ry="2" />
<text  x="242.69" y="1503.5" >do_..</text>
</g>
<g >
<title>NaClAppLoadFileAslr (4 samples, 0.37%)</title><rect x="235.3" y="1573" width="4.4" height="15.0" fill="rgb(226,17,13)" rx="2" ry="2" />
<text  x="238.33" y="1583.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::seek (3 samples, 0.28%)</title><rect x="298.5" y="1541" width="3.2" height="15.0" fill="rgb(229,153,7)" rx="2" ry="2" />
<text  x="301.47" y="1551.5" ></text>
</g>
<g >
<title>[libc.so.6] (82 samples, 7.56%)</title><rect x="516.2" y="1477" width="89.2" height="15.0" fill="rgb(230,201,3)" rx="2" ry="2" />
<text  x="519.18" y="1487.5" >[libc.so.6]</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_add (1 samples, 0.09%)</title><rect x="339.8" y="1509" width="1.1" height="15.0" fill="rgb(214,25,43)" rx="2" ry="2" />
<text  x="342.83" y="1519.5" ></text>
</g>
<g >
<title>NaClAppDtor (37 samples, 3.41%)</title><rect x="155.9" y="1573" width="40.2" height="15.0" fill="rgb(217,90,51)" rx="2" ry="2" />
<text  x="158.87" y="1583.5" >NaC..</text>
</g>
<g >
<title>_nc_setupterm (1 samples, 0.09%)</title><rect x="12.2" y="1493" width="1.1" height="15.0" fill="rgb(232,6,34)" rx="2" ry="2" />
<text  x="15.18" y="1503.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (4 samples, 0.37%)</title><rect x="235.3" y="1621" width="4.4" height="15.0" fill="rgb(247,174,47)" rx="2" ry="2" />
<text  x="238.33" y="1631.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.09%)</title><rect x="234.2" y="1365" width="1.1" height="15.0" fill="rgb(218,23,25)" rx="2" ry="2" />
<text  x="237.24" y="1375.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.09%)</title><rect x="873.2" y="1621" width="1.1" height="15.0" fill="rgb(240,212,31)" rx="2" ry="2" />
<text  x="876.23" y="1631.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="1008.2" y="1301" width="1.1" height="15.0" fill="rgb(206,61,49)" rx="2" ry="2" />
<text  x="1011.21" y="1311.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (10 samples, 0.92%)</title><rect x="962.5" y="1509" width="10.9" height="15.0" fill="rgb(217,20,26)" rx="2" ry="2" />
<text  x="965.49" y="1519.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (607 samples, 56.00%)</title><rect x="121.0" y="1669" width="660.8" height="15.0" fill="rgb(208,82,18)" rx="2" ry="2" />
<text  x="124.03" y="1679.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.09%)</title><rect x="1020.2" y="1573" width="1.1" height="15.0" fill="rgb(237,188,4)" rx="2" ry="2" />
<text  x="1023.18" y="1583.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (3 samples, 0.28%)</title><rect x="286.5" y="1573" width="3.3" height="15.0" fill="rgb(212,112,8)" rx="2" ry="2" />
<text  x="289.49" y="1583.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.09%)</title><rect x="1022.4" y="1269" width="1.1" height="15.0" fill="rgb(211,111,12)" rx="2" ry="2" />
<text  x="1025.36" y="1279.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (106 samples, 9.78%)</title><rect x="301.7" y="1573" width="115.4" height="15.0" fill="rgb(250,110,15)" rx="2" ry="2" />
<text  x="304.73" y="1583.5" >rustposix::int..</text>
</g>
<g >
<title>unmap_region (1 samples, 0.09%)</title><rect x="155.9" y="1445" width="1.1" height="15.0" fill="rgb(228,208,25)" rx="2" ry="2" />
<text  x="158.87" y="1455.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (3 samples, 0.28%)</title><rect x="984.3" y="1621" width="3.2" height="15.0" fill="rgb(211,47,23)" rx="2" ry="2" />
<text  x="987.26" y="1631.5" ></text>
</g>
<g >
<title>balance_dirty_pages (1 samples, 0.09%)</title><rect x="101.4" y="1333" width="1.1" height="15.0" fill="rgb(237,134,49)" rx="2" ry="2" />
<text  x="104.44" y="1343.5" ></text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (1 samples, 0.09%)</title><rect x="126.5" y="1573" width="1.1" height="15.0" fill="rgb(229,6,12)" rx="2" ry="2" />
<text  x="129.48" y="1583.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="780.7" y="1493" width="1.1" height="15.0" fill="rgb(254,175,54)" rx="2" ry="2" />
<text  x="783.70" y="1503.5" ></text>
</g>
<g >
<title>NaClValidateImage (1 samples, 0.09%)</title><rect x="1020.2" y="1557" width="1.1" height="15.0" fill="rgb(239,142,26)" rx="2" ry="2" />
<text  x="1023.18" y="1567.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (2 samples, 0.18%)</title><rect x="1007.1" y="1525" width="2.2" height="15.0" fill="rgb(220,132,21)" rx="2" ry="2" />
<text  x="1010.12" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="13.3" y="1669" width="1.1" height="15.0" fill="rgb(208,158,35)" rx="2" ry="2" />
<text  x="16.27" y="1679.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.09%)</title><rect x="251.7" y="1237" width="1.0" height="15.0" fill="rgb(245,132,34)" rx="2" ry="2" />
<text  x="254.66" y="1247.5" ></text>
</g>
<g >
<title>psi_task_switch (1 samples, 0.09%)</title><rect x="1187.8" y="1589" width="1.1" height="15.0" fill="rgb(214,105,44)" rx="2" ry="2" />
<text  x="1190.82" y="1599.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="287.6" y="1461" width="1.1" height="15.0" fill="rgb(247,82,36)" rx="2" ry="2" />
<text  x="290.58" y="1471.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (30 samples, 2.77%)</title><rect x="123.2" y="1653" width="32.7" height="15.0" fill="rgb(215,221,29)" rx="2" ry="2" />
<text  x="126.21" y="1663.5" >Na..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (1 samples, 0.09%)</title><rect x="288.7" y="1493" width="1.1" height="15.0" fill="rgb(235,144,31)" rx="2" ry="2" />
<text  x="291.67" y="1503.5" ></text>
</g>
<g >
<title>event_function_call (67 samples, 6.18%)</title><rect x="26.3" y="1477" width="73.0" height="15.0" fill="rgb(240,96,20)" rx="2" ry="2" />
<text  x="29.33" y="1487.5" >event_fu..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (5 samples, 0.46%)</title><rect x="486.8" y="1509" width="5.4" height="15.0" fill="rgb(228,51,54)" rx="2" ry="2" />
<text  x="489.79" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (61 samples, 5.63%)</title><rect x="1120.3" y="1621" width="66.4" height="15.0" fill="rgb(213,32,11)" rx="2" ry="2" />
<text  x="1123.33" y="1631.5" >cpuidle..</text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.09%)</title><rect x="102.5" y="1509" width="1.1" height="15.0" fill="rgb(232,165,16)" rx="2" ry="2" />
<text  x="105.53" y="1519.5" ></text>
</g>
<g >
<title>record__mmap_read_all (1 samples, 0.09%)</title><rect x="102.5" y="1653" width="1.1" height="15.0" fill="rgb(224,125,2)" rx="2" ry="2" />
<text  x="105.53" y="1663.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.18%)</title><rect x="1023.5" y="981" width="2.1" height="15.0" fill="rgb(241,179,37)" rx="2" ry="2" />
<text  x="1026.45" y="991.5" ></text>
</g>
<g >
<title>kswapd (3 samples, 0.28%)</title><rect x="1117.1" y="1653" width="3.2" height="15.0" fill="rgb(207,92,40)" rx="2" ry="2" />
<text  x="1120.07" y="1663.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (121 samples, 11.16%)</title><rect x="285.4" y="1589" width="131.7" height="15.0" fill="rgb(207,89,13)" rx="2" ry="2" />
<text  x="288.41" y="1599.5" >rustposix::safep..</text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.09%)</title><rect x="13.3" y="1493" width="1.1" height="15.0" fill="rgb(233,7,38)" rx="2" ry="2" />
<text  x="16.27" y="1503.5" ></text>
</g>
<g >
<title>add_mm_counter_fast (1 samples, 0.09%)</title><rect x="910.2" y="1557" width="1.1" height="15.0" fill="rgb(224,60,10)" rx="2" ry="2" />
<text  x="913.24" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (35 samples, 3.23%)</title><rect x="197.2" y="1509" width="38.1" height="15.0" fill="rgb(222,154,12)" rx="2" ry="2" />
<text  x="200.23" y="1519.5" >__x..</text>
</g>
<g >
<title>__sprintf_chk (1 samples, 0.09%)</title><rect x="12.2" y="1445" width="1.1" height="15.0" fill="rgb(252,182,49)" rx="2" ry="2" />
<text  x="15.18" y="1455.5" ></text>
</g>
<g >
<title>__alloc_pages (43 samples, 3.97%)</title><rect x="913.5" y="1541" width="46.8" height="15.0" fill="rgb(222,107,11)" rx="2" ry="2" />
<text  x="916.51" y="1551.5" >__al..</text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.18%)</title><rect x="1123.6" y="1541" width="2.2" height="15.0" fill="rgb(239,199,48)" rx="2" ry="2" />
<text  x="1126.60" y="1551.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (334 samples, 30.81%)</title><rect x="418.2" y="1589" width="363.6" height="15.0" fill="rgb(220,101,14)" rx="2" ry="2" />
<text  x="421.21" y="1599.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl r..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.09%)</title><rect x="288.7" y="1429" width="1.1" height="15.0" fill="rgb(205,162,24)" rx="2" ry="2" />
<text  x="291.67" y="1439.5" ></text>
</g>
<g >
<title>[sel_ldr] (1 samples, 0.09%)</title><rect x="866.7" y="1669" width="1.1" height="15.0" fill="rgb(223,185,42)" rx="2" ry="2" />
<text  x="869.70" y="1679.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (2 samples, 0.18%)</title><rect x="1023.5" y="869" width="2.1" height="15.0" fill="rgb(228,144,8)" rx="2" ry="2" />
<text  x="1026.45" y="879.5" ></text>
</g>
<g >
<title>record__write (1 samples, 0.09%)</title><rect x="102.5" y="1589" width="1.1" height="15.0" fill="rgb(225,44,20)" rx="2" ry="2" />
<text  x="105.53" y="1599.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.09%)</title><rect x="197.2" y="1429" width="1.1" height="15.0" fill="rgb(218,175,37)" rx="2" ry="2" />
<text  x="200.23" y="1439.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.09%)</title><rect x="196.1" y="1573" width="1.1" height="15.0" fill="rgb(250,100,8)" rx="2" ry="2" />
<text  x="199.14" y="1583.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (2 samples, 0.18%)</title><rect x="1023.5" y="597" width="2.1" height="15.0" fill="rgb(208,7,4)" rx="2" ry="2" />
<text  x="1026.45" y="607.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (14 samples, 1.29%)</title><rect x="437.8" y="1525" width="15.2" height="15.0" fill="rgb(229,121,18)" rx="2" ry="2" />
<text  x="440.80" y="1535.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.09%)</title><rect x="1188.9" y="1573" width="1.1" height="15.0" fill="rgb(246,13,32)" rx="2" ry="2" />
<text  x="1191.91" y="1583.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (34 samples, 3.14%)</title><rect x="198.3" y="1461" width="37.0" height="15.0" fill="rgb(250,135,35)" rx="2" ry="2" />
<text  x="201.32" y="1471.5" >rws..</text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::initialize::{{closure}} (2 samples, 0.18%)</title><rect x="1023.5" y="1445" width="2.1" height="15.0" fill="rgb(206,147,22)" rx="2" ry="2" />
<text  x="1026.45" y="1455.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (10 samples, 0.92%)</title><rect x="108.0" y="1605" width="10.9" height="15.0" fill="rgb(205,66,45)" rx="2" ry="2" />
<text  x="110.97" y="1615.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (10 samples, 0.92%)</title><rect x="108.0" y="1589" width="10.9" height="15.0" fill="rgb(242,110,43)" rx="2" ry="2" />
<text  x="110.97" y="1599.5" ></text>
</g>
<g >
<title>NaClVmmapUpdate (1 samples, 0.09%)</title><rect x="1009.3" y="1637" width="1.1" height="15.0" fill="rgb(207,181,13)" rx="2" ry="2" />
<text  x="1012.30" y="1647.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4 samples, 0.37%)</title><rect x="1121.4" y="1557" width="4.4" height="15.0" fill="rgb(249,143,25)" rx="2" ry="2" />
<text  x="1124.42" y="1567.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.92%)</title><rect x="463.9" y="1509" width="10.9" height="15.0" fill="rgb(243,71,41)" rx="2" ry="2" />
<text  x="466.93" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.09%)</title><rect x="1021.3" y="1429" width="1.1" height="15.0" fill="rgb(235,177,6)" rx="2" ry="2" />
<text  x="1024.27" y="1439.5" ></text>
</g>
<g >
<title>&lt;dashmap::iter::Iter&lt;K,V,S,M&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="1022.4" y="1349" width="1.1" height="15.0" fill="rgb(206,40,25)" rx="2" ry="2" />
<text  x="1025.36" y="1359.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1 samples, 0.09%)</title><rect x="416.0" y="1525" width="1.1" height="15.0" fill="rgb(231,106,35)" rx="2" ry="2" />
<text  x="419.03" y="1535.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::FS_METADATA::{{closure}} (2 samples, 0.18%)</title><rect x="1023.5" y="1365" width="2.1" height="15.0" fill="rgb(220,125,6)" rx="2" ry="2" />
<text  x="1026.45" y="1375.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.09%)</title><rect x="417.1" y="1621" width="1.1" height="15.0" fill="rgb(243,96,47)" rx="2" ry="2" />
<text  x="420.12" y="1631.5" ></text>
</g>
<g >
<title>record__pushfn (1 samples, 0.09%)</title><rect x="102.5" y="1605" width="1.1" height="15.0" fill="rgb(230,38,49)" rx="2" ry="2" />
<text  x="105.53" y="1615.5" ></text>
</g>
<g >
<title>__secure_computing (1 samples, 0.09%)</title><rect x="1116.0" y="1621" width="1.1" height="15.0" fill="rgb(213,23,25)" rx="2" ry="2" />
<text  x="1118.98" y="1631.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (22 samples, 2.03%)</title><rect x="311.5" y="1541" width="24.0" height="15.0" fill="rgb(206,94,40)" rx="2" ry="2" />
<text  x="314.53" y="1551.5" >r..</text>
</g>
<g >
<title>core::mem::drop (1 samples, 0.09%)</title><rect x="285.4" y="1573" width="1.1" height="15.0" fill="rgb(232,6,52)" rx="2" ry="2" />
<text  x="288.41" y="1583.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (7 samples, 0.65%)</title><rect x="290.8" y="1557" width="7.7" height="15.0" fill="rgb(225,107,24)" rx="2" ry="2" />
<text  x="293.85" y="1567.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.09%)</title><rect x="972.3" y="1477" width="1.1" height="15.0" fill="rgb(208,156,0)" rx="2" ry="2" />
<text  x="975.29" y="1487.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize (2 samples, 0.18%)</title><rect x="1023.5" y="1317" width="2.1" height="15.0" fill="rgb(234,17,13)" rx="2" ry="2" />
<text  x="1026.45" y="1327.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.09%)</title><rect x="288.7" y="1413" width="1.1" height="15.0" fill="rgb(213,183,27)" rx="2" ry="2" />
<text  x="291.67" y="1423.5" ></text>
</g>
<g >
<title>_rl_init_terminal_io (2 samples, 0.18%)</title><rect x="11.1" y="1525" width="2.2" height="15.0" fill="rgb(207,42,8)" rx="2" ry="2" />
<text  x="14.09" y="1535.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (13 samples, 1.20%)</title><rect x="261.5" y="1221" width="14.1" height="15.0" fill="rgb(234,8,11)" rx="2" ry="2" />
<text  x="264.46" y="1231.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.09%)</title><rect x="13.3" y="1557" width="1.1" height="15.0" fill="rgb(222,53,22)" rx="2" ry="2" />
<text  x="16.27" y="1567.5" ></text>
</g>
<g >
<title>shrink_node (3 samples, 0.28%)</title><rect x="1117.1" y="1621" width="3.2" height="15.0" fill="rgb(240,137,34)" rx="2" ry="2" />
<text  x="1120.07" y="1631.5" ></text>
</g>
<g >
<title>do_exit (3 samples, 0.28%)</title><rect x="1065.9" y="1621" width="3.3" height="15.0" fill="rgb(211,200,37)" rx="2" ry="2" />
<text  x="1068.90" y="1631.5" ></text>
</g>
<g >
<title>NaClValidateCode (4 samples, 0.37%)</title><rect x="235.3" y="1541" width="4.4" height="15.0" fill="rgb(244,123,40)" rx="2" ry="2" />
<text  x="238.33" y="1551.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (2 samples, 0.18%)</title><rect x="1023.5" y="533" width="2.1" height="15.0" fill="rgb(225,44,36)" rx="2" ry="2" />
<text  x="1026.45" y="543.5" ></text>
</g>
<g >
<title>ctx_resched (1 samples, 0.09%)</title><rect x="103.6" y="1477" width="1.1" height="15.0" fill="rgb(241,100,12)" rx="2" ry="2" />
<text  x="106.62" y="1487.5" ></text>
</g>
<g >
<title>mem_cgroup_wb_stats (1 samples, 0.09%)</title><rect x="101.4" y="1317" width="1.1" height="15.0" fill="rgb(250,162,35)" rx="2" ry="2" />
<text  x="104.44" y="1327.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.09%)</title><rect x="196.1" y="1493" width="1.1" height="15.0" fill="rgb(251,162,41)" rx="2" ry="2" />
<text  x="199.14" y="1503.5" ></text>
</g>
<g >
<title>__entry_text_start (1 samples, 0.09%)</title><rect x="293.0" y="1493" width="1.1" height="15.0" fill="rgb(235,83,15)" rx="2" ry="2" />
<text  x="296.03" y="1503.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (13 samples, 1.20%)</title><rect x="962.5" y="1525" width="14.1" height="15.0" fill="rgb(238,43,11)" rx="2" ry="2" />
<text  x="965.49" y="1535.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.09%)</title><rect x="155.9" y="1349" width="1.1" height="15.0" fill="rgb(239,166,41)" rx="2" ry="2" />
<text  x="158.87" y="1359.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.09%)</title><rect x="13.3" y="1589" width="1.1" height="15.0" fill="rgb(218,43,25)" rx="2" ry="2" />
<text  x="16.27" y="1599.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (2 samples, 0.18%)</title><rect x="1023.5" y="661" width="2.1" height="15.0" fill="rgb(211,181,34)" rx="2" ry="2" />
<text  x="1026.45" y="671.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.09%)</title><rect x="102.5" y="1477" width="1.1" height="15.0" fill="rgb(211,168,29)" rx="2" ry="2" />
<text  x="105.53" y="1487.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (2 samples, 0.18%)</title><rect x="1023.5" y="693" width="2.1" height="15.0" fill="rgb(249,141,16)" rx="2" ry="2" />
<text  x="1026.45" y="703.5" ></text>
</g>
<g >
<title>&lt;std::sync::lazy_lock::LazyLock&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.18%)</title><rect x="1023.5" y="1573" width="2.1" height="15.0" fill="rgb(220,196,44)" rx="2" ry="2" />
<text  x="1026.45" y="1583.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (34 samples, 3.14%)</title><rect x="198.3" y="1429" width="37.0" height="15.0" fill="rgb(242,68,2)" rx="2" ry="2" />
<text  x="201.32" y="1439.5" >rws..</text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.09%)</title><rect x="101.4" y="1653" width="1.1" height="15.0" fill="rgb(235,97,47)" rx="2" ry="2" />
<text  x="104.44" y="1663.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (1 samples, 0.09%)</title><rect x="288.7" y="1461" width="1.1" height="15.0" fill="rgb(226,175,16)" rx="2" ry="2" />
<text  x="291.67" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.28%)</title><rect x="1113.8" y="1685" width="3.3" height="15.0" fill="rgb(219,20,44)" rx="2" ry="2" />
<text  x="1116.80" y="1695.5" ></text>
</g>
<g >
<title>__free_one_page (9 samples, 0.83%)</title><rect x="265.8" y="1189" width="9.8" height="15.0" fill="rgb(232,79,48)" rx="2" ry="2" />
<text  x="268.81" y="1199.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.09%)</title><rect x="1113.8" y="1653" width="1.1" height="15.0" fill="rgb(215,202,7)" rx="2" ry="2" />
<text  x="1116.80" y="1663.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.18%)</title><rect x="287.6" y="1509" width="2.2" height="15.0" fill="rgb(217,63,29)" rx="2" ry="2" />
<text  x="290.58" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1 samples, 0.09%)</title><rect x="284.3" y="1557" width="1.1" height="15.0" fill="rgb(230,174,30)" rx="2" ry="2" />
<text  x="287.32" y="1567.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="286.5" y="1493" width="1.1" height="15.0" fill="rgb(253,200,41)" rx="2" ry="2" />
<text  x="289.49" y="1503.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Seek&gt;::seek (3 samples, 0.28%)</title><rect x="298.5" y="1557" width="3.2" height="15.0" fill="rgb(208,83,51)" rx="2" ry="2" />
<text  x="301.47" y="1567.5" ></text>
</g>
<g >
<title>leave_mm (1 samples, 0.09%)</title><rect x="1125.8" y="1573" width="1.1" height="15.0" fill="rgb(219,112,49)" rx="2" ry="2" />
<text  x="1128.77" y="1583.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_locked (1 samples, 0.09%)</title><rect x="101.4" y="1269" width="1.1" height="15.0" fill="rgb(216,143,16)" rx="2" ry="2" />
<text  x="104.44" y="1279.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (104 samples, 9.59%)</title><rect x="668.6" y="1525" width="113.2" height="15.0" fill="rgb(209,8,50)" rx="2" ry="2" />
<text  x="671.58" y="1535.5" >ringbuf::ring..</text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 0.09%)</title><rect x="1188.9" y="1669" width="1.1" height="15.0" fill="rgb(227,104,23)" rx="2" ry="2" />
<text  x="1191.91" y="1679.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (75 samples, 6.92%)</title><rect x="335.5" y="1557" width="81.6" height="15.0" fill="rgb(234,222,20)" rx="2" ry="2" />
<text  x="338.48" y="1567.5" >ringbuf::..</text>
</g>
<g >
<title>MarkValidJumpTarget (2 samples, 0.18%)</title><rect x="237.5" y="1493" width="2.2" height="15.0" fill="rgb(250,167,47)" rx="2" ry="2" />
<text  x="240.51" y="1503.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (1 samples, 0.09%)</title><rect x="259.3" y="1237" width="1.1" height="15.0" fill="rgb(243,171,21)" rx="2" ry="2" />
<text  x="262.28" y="1247.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="340.9" y="1493" width="1.1" height="15.0" fill="rgb(212,80,47)" rx="2" ry="2" />
<text  x="343.92" y="1503.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (2 samples, 0.18%)</title><rect x="1023.5" y="1237" width="2.1" height="15.0" fill="rgb(251,210,26)" rx="2" ry="2" />
<text  x="1026.45" y="1247.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.09%)</title><rect x="1022.4" y="1429" width="1.1" height="15.0" fill="rgb(232,9,30)" rx="2" ry="2" />
<text  x="1025.36" y="1439.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (20 samples, 1.85%)</title><rect x="254.9" y="1285" width="21.8" height="15.0" fill="rgb(249,166,24)" rx="2" ry="2" />
<text  x="257.93" y="1295.5" >t..</text>
</g>
<g >
<title>NaClSysMunmapDecoder (34 samples, 3.14%)</title><rect x="239.7" y="1653" width="37.0" height="15.0" fill="rgb(244,191,33)" rx="2" ry="2" />
<text  x="242.69" y="1663.5" >NaC..</text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.18%)</title><rect x="453.0" y="1509" width="2.2" height="15.0" fill="rgb(219,102,11)" rx="2" ry="2" />
<text  x="456.04" y="1519.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (2 samples, 0.18%)</title><rect x="1007.1" y="1541" width="2.2" height="15.0" fill="rgb(229,11,29)" rx="2" ry="2" />
<text  x="1010.12" y="1551.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (2 samples, 0.18%)</title><rect x="1023.5" y="1525" width="2.1" height="15.0" fill="rgb(211,203,1)" rx="2" ry="2" />
<text  x="1026.45" y="1535.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (79 samples, 7.29%)</title><rect x="15.4" y="1637" width="86.0" height="15.0" fill="rgb(229,103,14)" rx="2" ry="2" />
<text  x="18.44" y="1647.5" >perf_evsel..</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.09%)</title><rect x="1022.4" y="1477" width="1.1" height="15.0" fill="rgb(237,71,19)" rx="2" ry="2" />
<text  x="1025.36" y="1487.5" ></text>
</g>
<g >
<title>perf_ioctl (1 samples, 0.09%)</title><rect x="103.6" y="1637" width="1.1" height="15.0" fill="rgb(254,4,14)" rx="2" ry="2" />
<text  x="106.62" y="1647.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.09%)</title><rect x="196.1" y="1509" width="1.1" height="15.0" fill="rgb(249,39,4)" rx="2" ry="2" />
<text  x="199.14" y="1519.5" ></text>
</g>
<g >
<title>NaClValidateImage (4 samples, 0.37%)</title><rect x="235.3" y="1557" width="4.4" height="15.0" fill="rgb(230,103,19)" rx="2" ry="2" />
<text  x="238.33" y="1567.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.18%)</title><rect x="336.6" y="1509" width="2.1" height="15.0" fill="rgb(206,76,3)" rx="2" ry="2" />
<text  x="339.57" y="1519.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_offset (1 samples, 0.09%)</title><rect x="339.8" y="1493" width="1.1" height="15.0" fill="rgb(223,113,16)" rx="2" ry="2" />
<text  x="342.83" y="1503.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.09%)</title><rect x="101.4" y="1509" width="1.1" height="15.0" fill="rgb(226,216,3)" rx="2" ry="2" />
<text  x="104.44" y="1519.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.09%)</title><rect x="155.9" y="1413" width="1.1" height="15.0" fill="rgb(205,92,7)" rx="2" ry="2" />
<text  x="158.87" y="1423.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.18%)</title><rect x="453.0" y="1541" width="2.2" height="15.0" fill="rgb(229,206,37)" rx="2" ry="2" />
<text  x="456.04" y="1551.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.09%)</title><rect x="1010.4" y="1445" width="1.1" height="15.0" fill="rgb(233,34,34)" rx="2" ry="2" />
<text  x="1013.39" y="1455.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.09%)</title><rect x="1113.8" y="1621" width="1.1" height="15.0" fill="rgb(216,219,53)" rx="2" ry="2" />
<text  x="1116.80" y="1631.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (2 samples, 0.18%)</title><rect x="1023.5" y="1381" width="2.1" height="15.0" fill="rgb(217,31,51)" rx="2" ry="2" />
<text  x="1026.45" y="1391.5" ></text>
</g>
<g >
<title>smp_call_function_single (66 samples, 6.09%)</title><rect x="27.4" y="1461" width="71.9" height="15.0" fill="rgb(242,28,18)" rx="2" ry="2" />
<text  x="30.42" y="1471.5" >smp_call..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.18%)</title><rect x="1021.3" y="1557" width="2.2" height="15.0" fill="rgb(253,110,22)" rx="2" ry="2" />
<text  x="1024.27" y="1567.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.09%)</title><rect x="1114.9" y="1621" width="1.1" height="15.0" fill="rgb(215,215,54)" rx="2" ry="2" />
<text  x="1117.89" y="1631.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.09%)</title><rect x="296.3" y="1285" width="1.1" height="15.0" fill="rgb(231,29,38)" rx="2" ry="2" />
<text  x="299.29" y="1295.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.18%)</title><rect x="976.6" y="1557" width="2.2" height="15.0" fill="rgb(222,183,28)" rx="2" ry="2" />
<text  x="979.64" y="1567.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.18%)</title><rect x="252.7" y="1237" width="2.2" height="15.0" fill="rgb(250,57,26)" rx="2" ry="2" />
<text  x="255.75" y="1247.5" ></text>
</g>
</g>
</svg>
