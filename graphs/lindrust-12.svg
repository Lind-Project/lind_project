<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="966.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="949" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="949" > </text>
<g id="frames">
<g >
<title>scheduler_tick (2 samples, 0.20%)</title><rect x="1165.5" y="549" width="2.3" height="15.0" fill="rgb(246,113,47)" rx="2" ry="2" />
<text  x="1168.47" y="559.5" ></text>
</g>
<g >
<title>page_remove_rmap (3 samples, 0.30%)</title><rect x="1042.8" y="629" width="3.5" height="15.0" fill="rgb(243,69,16)" rx="2" ry="2" />
<text  x="1045.79" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (1 samples, 0.10%)</title><rect x="233.1" y="613" width="1.2" height="15.0" fill="rgb(222,0,54)" rx="2" ry="2" />
<text  x="236.15" y="623.5" ></text>
</g>
<g >
<title>NaClFindAddressSpaceRandomized (1 samples, 0.10%)</title><rect x="221.5" y="709" width="1.1" height="15.0" fill="rgb(235,194,22)" rx="2" ry="2" />
<text  x="224.47" y="719.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.20%)</title><rect x="904.9" y="709" width="2.4" height="15.0" fill="rgb(220,5,25)" rx="2" ry="2" />
<text  x="907.93" y="719.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.20%)</title><rect x="1186.5" y="741" width="2.3" height="15.0" fill="rgb(209,52,37)" rx="2" ry="2" />
<text  x="1189.50" y="751.5" ></text>
</g>
<g >
<title>update_process_times (4 samples, 0.40%)</title><rect x="1163.1" y="565" width="4.7" height="15.0" fill="rgb(222,171,42)" rx="2" ry="2" />
<text  x="1166.13" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (5 samples, 0.50%)</title><rect x="247.2" y="645" width="5.8" height="15.0" fill="rgb(231,64,28)" rx="2" ry="2" />
<text  x="250.17" y="655.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.10%)</title><rect x="221.5" y="773" width="1.1" height="15.0" fill="rgb(214,155,43)" rx="2" ry="2" />
<text  x="224.47" y="783.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.10%)</title><rect x="215.6" y="613" width="1.2" height="15.0" fill="rgb(219,102,24)" rx="2" ry="2" />
<text  x="218.62" y="623.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.10%)</title><rect x="232.0" y="485" width="1.1" height="15.0" fill="rgb(232,179,13)" rx="2" ry="2" />
<text  x="234.98" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4 samples, 0.40%)</title><rect x="1163.1" y="629" width="4.7" height="15.0" fill="rgb(251,18,53)" rx="2" ry="2" />
<text  x="1166.13" y="639.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (1 samples, 0.10%)</title><rect x="1165.5" y="533" width="1.1" height="15.0" fill="rgb(234,32,14)" rx="2" ry="2" />
<text  x="1168.47" y="543.5" ></text>
</g>
<g >
<title>NaClDescIoDescFstat (1 samples, 0.10%)</title><rect x="234.3" y="821" width="1.2" height="15.0" fill="rgb(240,168,17)" rx="2" ry="2" />
<text  x="237.32" y="831.5" ></text>
</g>
<g >
<title>__libc_thread_freeres (1 samples, 0.10%)</title><rect x="986.7" y="853" width="1.2" height="15.0" fill="rgb(223,151,39)" rx="2" ry="2" />
<text  x="989.71" y="863.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.10%)</title><rect x="229.6" y="293" width="1.2" height="15.0" fill="rgb(246,131,5)" rx="2" ry="2" />
<text  x="232.64" y="303.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="665.4" y="581" width="1.2" height="15.0" fill="rgb(225,147,48)" rx="2" ry="2" />
<text  x="668.43" y="591.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (4 samples, 0.40%)</title><rect x="227.3" y="725" width="4.7" height="15.0" fill="rgb(250,38,39)" rx="2" ry="2" />
<text  x="230.31" y="735.5" ></text>
</g>
<g >
<title>generic_exec_single (66 samples, 6.53%)</title><rect x="34.5" y="629" width="77.1" height="15.0" fill="rgb(246,125,2)" rx="2" ry="2" />
<text  x="37.53" y="639.5" >generic_..</text>
</g>
<g >
<title>perf_ioctl (80 samples, 7.92%)</title><rect x="18.2" y="725" width="93.4" height="15.0" fill="rgb(221,21,34)" rx="2" ry="2" />
<text  x="21.18" y="735.5" >perf_ioctl</text>
</g>
<g >
<title>arch_scale_freq_tick (1 samples, 0.10%)</title><rect x="213.3" y="597" width="1.2" height="15.0" fill="rgb(222,101,28)" rx="2" ry="2" />
<text  x="216.29" y="607.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.10%)</title><rect x="226.1" y="533" width="1.2" height="15.0" fill="rgb(243,144,5)" rx="2" ry="2" />
<text  x="229.14" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.10%)</title><rect x="230.8" y="245" width="1.2" height="15.0" fill="rgb(210,154,29)" rx="2" ry="2" />
<text  x="233.81" y="255.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.10%)</title><rect x="1069.7" y="693" width="1.1" height="15.0" fill="rgb(212,205,53)" rx="2" ry="2" />
<text  x="1072.66" y="703.5" ></text>
</g>
<g >
<title>truncate_inode_page (1 samples, 0.10%)</title><rect x="1069.7" y="533" width="1.1" height="15.0" fill="rgb(206,170,21)" rx="2" ry="2" />
<text  x="1072.66" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::load_fs (1 samples, 0.10%)</title><rect x="989.0" y="805" width="1.2" height="15.0" fill="rgb(208,130,23)" rx="2" ry="2" />
<text  x="992.05" y="815.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.10%)</title><rect x="663.1" y="629" width="1.2" height="15.0" fill="rgb(228,20,38)" rx="2" ry="2" />
<text  x="666.09" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (1 samples, 0.10%)</title><rect x="233.1" y="597" width="1.2" height="15.0" fill="rgb(221,48,5)" rx="2" ry="2" />
<text  x="236.15" y="607.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.10%)</title><rect x="222.6" y="437" width="1.2" height="15.0" fill="rgb(229,49,16)" rx="2" ry="2" />
<text  x="225.63" y="447.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (96 samples, 9.50%)</title><rect x="810.3" y="869" width="112.2" height="15.0" fill="rgb(250,23,27)" rx="2" ry="2" />
<text  x="813.30" y="879.5" >asm_exc_page_..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.10%)</title><rect x="512.4" y="533" width="1.1" height="15.0" fill="rgb(253,102,38)" rx="2" ry="2" />
<text  x="515.38" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (1 samples, 0.10%)</title><rect x="226.1" y="693" width="1.2" height="15.0" fill="rgb(208,92,24)" rx="2" ry="2" />
<text  x="229.14" y="703.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.10%)</title><rect x="221.5" y="629" width="1.1" height="15.0" fill="rgb(232,168,53)" rx="2" ry="2" />
<text  x="224.47" y="639.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (10 samples, 0.99%)</title><rect x="1173.6" y="709" width="11.7" height="15.0" fill="rgb(247,133,20)" rx="2" ry="2" />
<text  x="1176.64" y="719.5" ></text>
</g>
<g >
<title>NaClSignalStackFree (1 samples, 0.10%)</title><rect x="225.0" y="789" width="1.1" height="15.0" fill="rgb(220,13,38)" rx="2" ry="2" />
<text  x="227.97" y="799.5" ></text>
</g>
<g >
<title>[sel_ldr] (476 samples, 47.13%)</title><rect x="151.4" y="885" width="556.1" height="15.0" fill="rgb(216,32,18)" rx="2" ry="2" />
<text  x="154.37" y="895.5" >[sel_ldr]</text>
</g>
<g >
<title>ovl_write_iter (2 samples, 0.20%)</title><rect x="112.8" y="629" width="2.3" height="15.0" fill="rgb(217,114,19)" rx="2" ry="2" />
<text  x="115.81" y="639.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.10%)</title><rect x="1172.5" y="581" width="1.1" height="15.0" fill="rgb(208,228,14)" rx="2" ry="2" />
<text  x="1175.48" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::restore_metadata (1 samples, 0.10%)</title><rect x="989.0" y="789" width="1.2" height="15.0" fill="rgb(232,147,5)" rx="2" ry="2" />
<text  x="992.05" y="799.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="677.1" y="709" width="1.2" height="15.0" fill="rgb(216,202,24)" rx="2" ry="2" />
<text  x="680.11" y="719.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.10%)</title><rect x="986.7" y="725" width="1.2" height="15.0" fill="rgb(212,181,48)" rx="2" ry="2" />
<text  x="989.71" y="735.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.10%)</title><rect x="512.4" y="501" width="1.1" height="15.0" fill="rgb(245,107,25)" rx="2" ry="2" />
<text  x="515.38" y="511.5" ></text>
</g>
<g >
<title>run_rebalance_domains (3 samples, 0.30%)</title><rect x="1170.1" y="613" width="3.5" height="15.0" fill="rgb(226,80,36)" rx="2" ry="2" />
<text  x="1173.14" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.20%)</title><rect x="112.8" y="725" width="2.3" height="15.0" fill="rgb(230,72,52)" rx="2" ry="2" />
<text  x="115.81" y="735.5" ></text>
</g>
<g >
<title>do_user_addr_fault (4 samples, 0.40%)</title><rect x="215.6" y="773" width="4.7" height="15.0" fill="rgb(249,77,14)" rx="2" ry="2" />
<text  x="218.62" y="783.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.10%)</title><rect x="421.2" y="709" width="1.2" height="15.0" fill="rgb(231,136,7)" rx="2" ry="2" />
<text  x="424.25" y="719.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.10%)</title><rect x="226.1" y="405" width="1.2" height="15.0" fill="rgb(218,119,44)" rx="2" ry="2" />
<text  x="229.14" y="415.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (20 samples, 1.98%)</title><rect x="1163.1" y="757" width="23.4" height="15.0" fill="rgb(243,225,2)" rx="2" ry="2" />
<text  x="1166.13" y="767.5" >c..</text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.10%)</title><rect x="1186.5" y="613" width="1.2" height="15.0" fill="rgb(223,109,50)" rx="2" ry="2" />
<text  x="1189.50" y="623.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (5 samples, 0.50%)</title><rect x="1163.1" y="677" width="5.9" height="15.0" fill="rgb(223,30,20)" rx="2" ry="2" />
<text  x="1166.13" y="687.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.10%)</title><rect x="226.1" y="469" width="1.2" height="15.0" fill="rgb(234,100,5)" rx="2" ry="2" />
<text  x="229.14" y="479.5" ></text>
</g>
<g >
<title>NaClSysExit (6 samples, 0.59%)</title><rect x="225.0" y="837" width="7.0" height="15.0" fill="rgb(212,110,5)" rx="2" ry="2" />
<text  x="227.97" y="847.5" ></text>
</g>
<g >
<title>_start (3 samples, 0.30%)</title><rect x="13.5" y="885" width="3.5" height="15.0" fill="rgb(220,131,46)" rx="2" ry="2" />
<text  x="16.50" y="895.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (1 samples, 0.10%)</title><rect x="226.1" y="725" width="1.2" height="15.0" fill="rgb(210,65,24)" rx="2" ry="2" />
<text  x="229.14" y="735.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.10%)</title><rect x="1077.8" y="693" width="1.2" height="15.0" fill="rgb(244,109,39)" rx="2" ry="2" />
<text  x="1080.84" y="703.5" ></text>
</g>
<g >
<title>bitmap_string.constprop.0 (1 samples, 0.10%)</title><rect x="111.6" y="549" width="1.2" height="15.0" fill="rgb(240,126,5)" rx="2" ry="2" />
<text  x="114.64" y="559.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.10%)</title><rect x="694.6" y="789" width="1.2" height="15.0" fill="rgb(207,58,34)" rx="2" ry="2" />
<text  x="697.63" y="799.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (1 samples, 0.10%)</title><rect x="1162.0" y="773" width="1.1" height="15.0" fill="rgb(238,216,31)" rx="2" ry="2" />
<text  x="1164.96" y="783.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="227.3" y="261" width="1.2" height="15.0" fill="rgb(230,219,23)" rx="2" ry="2" />
<text  x="230.31" y="271.5" ></text>
</g>
<g >
<title>do_anonymous_page (3 samples, 0.30%)</title><rect x="215.6" y="709" width="3.5" height="15.0" fill="rgb(229,26,45)" rx="2" ry="2" />
<text  x="218.62" y="719.5" ></text>
</g>
<g >
<title>get_signal (33 samples, 3.27%)</title><rect x="1032.3" y="789" width="38.5" height="15.0" fill="rgb(254,163,53)" rx="2" ry="2" />
<text  x="1035.28" y="799.5" >get..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (4 samples, 0.40%)</title><rect x="1051.0" y="565" width="4.6" height="15.0" fill="rgb(212,140,25)" rx="2" ry="2" />
<text  x="1053.97" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.10%)</title><rect x="237.8" y="677" width="1.2" height="15.0" fill="rgb(249,24,6)" rx="2" ry="2" />
<text  x="240.82" y="687.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.10%)</title><rect x="215.6" y="661" width="1.2" height="15.0" fill="rgb(230,21,19)" rx="2" ry="2" />
<text  x="218.62" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (4 samples, 0.40%)</title><rect x="227.3" y="661" width="4.7" height="15.0" fill="rgb(225,12,23)" rx="2" ry="2" />
<text  x="230.31" y="671.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.10%)</title><rect x="226.1" y="709" width="1.2" height="15.0" fill="rgb(237,196,6)" rx="2" ry="2" />
<text  x="229.14" y="719.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.10%)</title><rect x="233.1" y="85" width="1.2" height="15.0" fill="rgb(231,33,4)" rx="2" ry="2" />
<text  x="236.15" y="95.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.10%)</title><rect x="111.6" y="725" width="1.2" height="15.0" fill="rgb(244,60,32)" rx="2" ry="2" />
<text  x="114.64" y="735.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.10%)</title><rect x="172.4" y="549" width="1.2" height="15.0" fill="rgb(209,179,8)" rx="2" ry="2" />
<text  x="175.40" y="559.5" ></text>
</g>
<g >
<title>lind_close (1 samples, 0.10%)</title><rect x="233.1" y="725" width="1.2" height="15.0" fill="rgb(239,49,9)" rx="2" ry="2" />
<text  x="236.15" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="237.8" y="725" width="1.2" height="15.0" fill="rgb(229,123,45)" rx="2" ry="2" />
<text  x="240.82" y="735.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (3 samples, 0.30%)</title><rect x="1170.1" y="661" width="3.5" height="15.0" fill="rgb(215,197,27)" rx="2" ry="2" />
<text  x="1173.14" y="671.5" ></text>
</g>
<g >
<title>copy_page_from_iter (1 samples, 0.10%)</title><rect x="947.0" y="725" width="1.2" height="15.0" fill="rgb(251,51,36)" rx="2" ry="2" />
<text  x="949.99" y="735.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.10%)</title><rect x="17.0" y="773" width="1.2" height="15.0" fill="rgb(224,95,45)" rx="2" ry="2" />
<text  x="20.01" y="783.5" ></text>
</g>
<g >
<title>NaClLogLock (1 samples, 0.10%)</title><rect x="702.8" y="805" width="1.2" height="15.0" fill="rgb(230,131,36)" rx="2" ry="2" />
<text  x="705.81" y="815.5" ></text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.10%)</title><rect x="1185.3" y="709" width="1.2" height="15.0" fill="rgb(252,105,19)" rx="2" ry="2" />
<text  x="1188.33" y="719.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.10%)</title><rect x="225.0" y="693" width="1.1" height="15.0" fill="rgb(230,225,39)" rx="2" ry="2" />
<text  x="227.97" y="703.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.10%)</title><rect x="1166.6" y="517" width="1.2" height="15.0" fill="rgb(237,226,29)" rx="2" ry="2" />
<text  x="1169.63" y="527.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.10%)</title><rect x="219.1" y="709" width="1.2" height="15.0" fill="rgb(235,149,49)" rx="2" ry="2" />
<text  x="222.13" y="719.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.10%)</title><rect x="218.0" y="629" width="1.1" height="15.0" fill="rgb(254,181,40)" rx="2" ry="2" />
<text  x="220.96" y="639.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.10%)</title><rect x="949.3" y="725" width="1.2" height="15.0" fill="rgb(214,168,28)" rx="2" ry="2" />
<text  x="952.33" y="735.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (2 samples, 0.20%)</title><rect x="368.7" y="789" width="2.3" height="15.0" fill="rgb(215,113,7)" rx="2" ry="2" />
<text  x="371.67" y="799.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.10%)</title><rect x="1075.5" y="789" width="1.2" height="15.0" fill="rgb(233,228,36)" rx="2" ry="2" />
<text  x="1078.50" y="799.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (4 samples, 0.40%)</title><rect x="452.8" y="645" width="4.7" height="15.0" fill="rgb(242,67,39)" rx="2" ry="2" />
<text  x="455.79" y="655.5" ></text>
</g>
<g >
<title>process_vm_writev (2 samples, 0.20%)</title><rect x="947.0" y="837" width="2.3" height="15.0" fill="rgb(219,177,15)" rx="2" ry="2" />
<text  x="949.99" y="847.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.10%)</title><rect x="989.0" y="645" width="1.2" height="15.0" fill="rgb(245,141,43)" rx="2" ry="2" />
<text  x="992.05" y="655.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.10%)</title><rect x="971.5" y="869" width="1.2" height="15.0" fill="rgb(219,176,42)" rx="2" ry="2" />
<text  x="974.52" y="879.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (34 samples, 3.37%)</title><rect x="174.7" y="773" width="39.8" height="15.0" fill="rgb(237,201,33)" rx="2" ry="2" />
<text  x="177.73" y="783.5" >Val..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.10%)</title><rect x="223.8" y="197" width="1.2" height="15.0" fill="rgb(239,139,7)" rx="2" ry="2" />
<text  x="226.80" y="207.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.10%)</title><rect x="511.2" y="453" width="1.2" height="15.0" fill="rgb(207,99,25)" rx="2" ry="2" />
<text  x="514.21" y="463.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.20%)</title><rect x="1073.2" y="789" width="2.3" height="15.0" fill="rgb(205,216,9)" rx="2" ry="2" />
<text  x="1076.17" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="225.0" y="757" width="1.1" height="15.0" fill="rgb(219,181,0)" rx="2" ry="2" />
<text  x="227.97" y="767.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.10%)</title><rect x="233.1" y="661" width="1.2" height="15.0" fill="rgb(242,88,29)" rx="2" ry="2" />
<text  x="236.15" y="671.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.10%)</title><rect x="229.6" y="213" width="1.2" height="15.0" fill="rgb(215,2,26)" rx="2" ry="2" />
<text  x="232.64" y="223.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (4 samples, 0.40%)</title><rect x="227.3" y="517" width="4.7" height="15.0" fill="rgb(218,64,10)" rx="2" ry="2" />
<text  x="230.31" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.10%)</title><rect x="663.1" y="613" width="1.2" height="15.0" fill="rgb(249,186,45)" rx="2" ry="2" />
<text  x="666.09" y="623.5" ></text>
</g>
<g >
<title>tgetent_sp (1 samples, 0.10%)</title><rect x="14.7" y="725" width="1.1" height="15.0" fill="rgb(239,137,9)" rx="2" ry="2" />
<text  x="17.67" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (2 samples, 0.20%)</title><rect x="392.0" y="645" width="2.4" height="15.0" fill="rgb(212,214,31)" rx="2" ry="2" />
<text  x="395.04" y="655.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.10%)</title><rect x="222.6" y="293" width="1.2" height="15.0" fill="rgb(209,190,28)" rx="2" ry="2" />
<text  x="225.63" y="303.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.10%)</title><rect x="1075.5" y="773" width="1.2" height="15.0" fill="rgb(224,97,3)" rx="2" ry="2" />
<text  x="1078.50" y="783.5" ></text>
</g>
<g >
<title>__libc_write (2 samples, 0.20%)</title><rect x="112.8" y="741" width="2.3" height="15.0" fill="rgb(253,225,42)" rx="2" ry="2" />
<text  x="115.81" y="751.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.10%)</title><rect x="228.5" y="309" width="1.1" height="15.0" fill="rgb(207,0,52)" rx="2" ry="2" />
<text  x="231.48" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (1 samples, 0.10%)</title><rect x="222.6" y="581" width="1.2" height="15.0" fill="rgb(253,133,9)" rx="2" ry="2" />
<text  x="225.63" y="591.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (3 samples, 0.30%)</title><rect x="171.2" y="805" width="3.5" height="15.0" fill="rgb(207,178,18)" rx="2" ry="2" />
<text  x="174.23" y="815.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (11 samples, 1.09%)</title><rect x="138.5" y="821" width="12.9" height="15.0" fill="rgb(229,150,33)" rx="2" ry="2" />
<text  x="141.51" y="831.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.10%)</title><rect x="233.1" y="437" width="1.2" height="15.0" fill="rgb(213,215,39)" rx="2" ry="2" />
<text  x="236.15" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (5 samples, 0.50%)</title><rect x="226.1" y="757" width="5.9" height="15.0" fill="rgb(211,67,16)" rx="2" ry="2" />
<text  x="229.14" y="767.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (4 samples, 0.40%)</title><rect x="1051.0" y="581" width="4.6" height="15.0" fill="rgb(225,208,20)" rx="2" ry="2" />
<text  x="1053.97" y="591.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (84 samples, 8.32%)</title><rect x="422.4" y="677" width="98.2" height="15.0" fill="rgb(208,113,34)" rx="2" ry="2" />
<text  x="425.42" y="687.5" >ringbuf::pr..</text>
</g>
<g >
<title>perf (84 samples, 8.32%)</title><rect x="18.2" y="901" width="98.1" height="15.0" fill="rgb(242,45,41)" rx="2" ry="2" />
<text  x="21.18" y="911.5" >perf</text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.10%)</title><rect x="222.6" y="277" width="1.2" height="15.0" fill="rgb(226,109,11)" rx="2" ry="2" />
<text  x="225.63" y="287.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (77 samples, 7.62%)</title><rect x="21.7" y="693" width="89.9" height="15.0" fill="rgb(250,70,52)" rx="2" ry="2" />
<text  x="24.68" y="703.5" >perf_event..</text>
</g>
<g >
<title>__res_thread_freeres (1 samples, 0.10%)</title><rect x="986.7" y="837" width="1.2" height="15.0" fill="rgb(247,39,17)" rx="2" ry="2" />
<text  x="989.71" y="847.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (3 samples, 0.30%)</title><rect x="950.5" y="821" width="3.5" height="15.0" fill="rgb(221,124,30)" rx="2" ry="2" />
<text  x="953.50" y="831.5" ></text>
</g>
<g >
<title>realpath_stk (1 samples, 0.10%)</title><rect x="987.9" y="725" width="1.1" height="15.0" fill="rgb(236,90,0)" rx="2" ry="2" />
<text  x="990.88" y="735.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.10%)</title><rect x="115.1" y="725" width="1.2" height="15.0" fill="rgb(247,37,16)" rx="2" ry="2" />
<text  x="118.15" y="735.5" ></text>
</g>
<g >
<title>seq_printf (1 samples, 0.10%)</title><rect x="111.6" y="597" width="1.2" height="15.0" fill="rgb(238,199,34)" rx="2" ry="2" />
<text  x="114.64" y="607.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.10%)</title><rect x="15.8" y="837" width="1.2" height="15.0" fill="rgb(249,12,8)" rx="2" ry="2" />
<text  x="18.84" y="847.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (109 samples, 10.79%)</title><rect x="239.0" y="725" width="127.3" height="15.0" fill="rgb(254,22,38)" rx="2" ry="2" />
<text  x="241.99" y="735.5" >rustposix::inte..</text>
</g>
<g >
<title>NaClAllocatePow2AlignedMemory (1 samples, 0.10%)</title><rect x="221.5" y="725" width="1.1" height="15.0" fill="rgb(246,196,26)" rx="2" ry="2" />
<text  x="224.47" y="735.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (1 samples, 0.10%)</title><rect x="952.8" y="741" width="1.2" height="15.0" fill="rgb(221,28,36)" rx="2" ry="2" />
<text  x="955.83" y="751.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (4 samples, 0.40%)</title><rect x="227.3" y="693" width="4.7" height="15.0" fill="rgb(221,45,9)" rx="2" ry="2" />
<text  x="230.31" y="703.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.10%)</title><rect x="949.3" y="581" width="1.2" height="15.0" fill="rgb(213,64,14)" rx="2" ry="2" />
<text  x="952.33" y="591.5" ></text>
</g>
<g >
<title>main (2 samples, 0.20%)</title><rect x="987.9" y="853" width="2.3" height="15.0" fill="rgb(230,223,26)" rx="2" ry="2" />
<text  x="990.88" y="863.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.10%)</title><rect x="232.0" y="389" width="1.1" height="15.0" fill="rgb(249,146,1)" rx="2" ry="2" />
<text  x="234.98" y="399.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (4 samples, 0.40%)</title><rect x="899.1" y="677" width="4.7" height="15.0" fill="rgb(210,175,4)" rx="2" ry="2" />
<text  x="902.09" y="687.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.20%)</title><rect x="172.4" y="645" width="2.3" height="15.0" fill="rgb(205,17,5)" rx="2" ry="2" />
<text  x="175.40" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="989.0" y="613" width="1.2" height="15.0" fill="rgb(222,72,3)" rx="2" ry="2" />
<text  x="992.05" y="623.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.20%)</title><rect x="368.7" y="773" width="2.3" height="15.0" fill="rgb(251,183,19)" rx="2" ry="2" />
<text  x="371.67" y="783.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.10%)</title><rect x="17.0" y="821" width="1.2" height="15.0" fill="rgb(219,92,23)" rx="2" ry="2" />
<text  x="20.01" y="831.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.10%)</title><rect x="989.0" y="469" width="1.2" height="15.0" fill="rgb(223,189,18)" rx="2" ry="2" />
<text  x="992.05" y="479.5" ></text>
</g>
<g >
<title>[unknown] (33 samples, 3.27%)</title><rect x="947.0" y="885" width="38.5" height="15.0" fill="rgb(232,152,27)" rx="2" ry="2" />
<text  x="949.99" y="895.5" >[un..</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.10%)</title><rect x="14.7" y="613" width="1.1" height="15.0" fill="rgb(215,202,39)" rx="2" ry="2" />
<text  x="17.67" y="623.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.10%)</title><rect x="11.2" y="821" width="1.1" height="15.0" fill="rgb(235,21,22)" rx="2" ry="2" />
<text  x="14.17" y="831.5" ></text>
</g>
<g >
<title>handle_mm_fault (86 samples, 8.51%)</title><rect x="818.5" y="821" width="100.5" height="15.0" fill="rgb(239,118,46)" rx="2" ry="2" />
<text  x="821.48" y="831.5" >handle_mm_fa..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (96 samples, 9.50%)</title><rect x="253.0" y="629" width="112.2" height="15.0" fill="rgb(212,55,10)" rx="2" ry="2" />
<text  x="256.01" y="639.5" >__memmove_avx..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (102 samples, 10.10%)</title><rect x="247.2" y="693" width="119.1" height="15.0" fill="rgb(228,159,40)" rx="2" ry="2" />
<text  x="250.17" y="703.5" >ringbuf::consu..</text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.10%)</title><rect x="15.8" y="725" width="1.2" height="15.0" fill="rgb(216,94,47)" rx="2" ry="2" />
<text  x="18.84" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1 samples, 0.10%)</title><rect x="233.1" y="357" width="1.2" height="15.0" fill="rgb(238,107,19)" rx="2" ry="2" />
<text  x="236.15" y="367.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.10%)</title><rect x="948.2" y="517" width="1.1" height="15.0" fill="rgb(228,16,36)" rx="2" ry="2" />
<text  x="951.16" y="527.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.40%)</title><rect x="227.3" y="629" width="4.7" height="15.0" fill="rgb(250,85,9)" rx="2" ry="2" />
<text  x="230.31" y="639.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.10%)</title><rect x="15.8" y="869" width="1.2" height="15.0" fill="rgb(230,209,48)" rx="2" ry="2" />
<text  x="18.84" y="879.5" ></text>
</g>
<g >
<title>do_group_exit (33 samples, 3.27%)</title><rect x="1032.3" y="773" width="38.5" height="15.0" fill="rgb(254,2,2)" rx="2" ry="2" />
<text  x="1035.28" y="783.5" >do_..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.10%)</title><rect x="948.2" y="677" width="1.1" height="15.0" fill="rgb(222,208,13)" rx="2" ry="2" />
<text  x="951.16" y="687.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (4 samples, 0.40%)</title><rect x="202.8" y="757" width="4.6" height="15.0" fill="rgb(219,229,33)" rx="2" ry="2" />
<text  x="205.77" y="767.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (2 samples, 0.20%)</title><rect x="222.6" y="773" width="2.4" height="15.0" fill="rgb(232,159,6)" rx="2" ry="2" />
<text  x="225.63" y="783.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (1 samples, 0.10%)</title><rect x="223.8" y="37" width="1.2" height="15.0" fill="rgb(217,118,46)" rx="2" ry="2" />
<text  x="226.80" y="47.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (69 samples, 6.83%)</title><rect x="1081.3" y="773" width="80.7" height="15.0" fill="rgb(236,110,28)" rx="2" ry="2" />
<text  x="1084.35" y="783.5" >mwait_idl..</text>
</g>
<g >
<title>copy_page_to_iter_iovec (1 samples, 0.10%)</title><rect x="989.0" y="405" width="1.2" height="15.0" fill="rgb(219,21,11)" rx="2" ry="2" />
<text  x="992.05" y="415.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.10%)</title><rect x="990.2" y="853" width="1.2" height="15.0" fill="rgb(225,194,38)" rx="2" ry="2" />
<text  x="993.22" y="863.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.10%)</title><rect x="990.2" y="837" width="1.2" height="15.0" fill="rgb(227,143,44)" rx="2" ry="2" />
<text  x="993.22" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="385.0" y="725" width="1.2" height="15.0" fill="rgb(229,54,36)" rx="2" ry="2" />
<text  x="388.03" y="735.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.10%)</title><rect x="17.0" y="757" width="1.2" height="15.0" fill="rgb(214,88,21)" rx="2" ry="2" />
<text  x="20.01" y="767.5" ></text>
</g>
<g >
<title>unmap_vmas (32 samples, 3.17%)</title><rect x="1032.3" y="693" width="37.4" height="15.0" fill="rgb(227,100,43)" rx="2" ry="2" />
<text  x="1035.28" y="703.5" >unm..</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (119 samples, 11.78%)</title><rect x="524.1" y="693" width="139.0" height="15.0" fill="rgb(221,176,2)" rx="2" ry="2" />
<text  x="527.06" y="703.5" >ringbuf::ring_buf..</text>
</g>
<g >
<title>ksys_read (1 samples, 0.10%)</title><rect x="111.6" y="709" width="1.2" height="15.0" fill="rgb(212,192,38)" rx="2" ry="2" />
<text  x="114.64" y="719.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.10%)</title><rect x="233.1" y="277" width="1.2" height="15.0" fill="rgb(216,147,41)" rx="2" ry="2" />
<text  x="236.15" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.50%)</title><rect x="214.5" y="821" width="5.8" height="15.0" fill="rgb(226,105,17)" rx="2" ry="2" />
<text  x="217.46" y="831.5" ></text>
</g>
<g >
<title>read (1 samples, 0.10%)</title><rect x="111.6" y="789" width="1.2" height="15.0" fill="rgb(243,98,39)" rx="2" ry="2" />
<text  x="114.64" y="799.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (3 samples, 0.30%)</title><rect x="390.9" y="693" width="3.5" height="15.0" fill="rgb(207,14,34)" rx="2" ry="2" />
<text  x="393.87" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="948.2" y="661" width="1.1" height="15.0" fill="rgb(241,53,41)" rx="2" ry="2" />
<text  x="951.16" y="671.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.10%)</title><rect x="1186.5" y="661" width="1.2" height="15.0" fill="rgb(207,145,43)" rx="2" ry="2" />
<text  x="1189.50" y="671.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.10%)</title><rect x="10.0" y="757" width="1.2" height="15.0" fill="rgb(249,55,27)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (2 samples, 0.20%)</title><rect x="382.7" y="693" width="2.3" height="15.0" fill="rgb(226,168,40)" rx="2" ry="2" />
<text  x="385.69" y="703.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.10%)</title><rect x="227.3" y="277" width="1.2" height="15.0" fill="rgb(221,190,1)" rx="2" ry="2" />
<text  x="230.31" y="287.5" ></text>
</g>
<g >
<title>handle_pte_fault (77 samples, 7.62%)</title><rect x="829.0" y="789" width="90.0" height="15.0" fill="rgb(253,8,19)" rx="2" ry="2" />
<text  x="831.99" y="799.5" >handle_pte..</text>
</g>
<g >
<title>std::sync::poison::Flag::get (1 samples, 0.10%)</title><rect x="677.1" y="677" width="1.2" height="15.0" fill="rgb(225,177,33)" rx="2" ry="2" />
<text  x="680.11" y="687.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (20 samples, 1.98%)</title><rect x="1046.3" y="613" width="23.4" height="15.0" fill="rgb(208,121,27)" rx="2" ry="2" />
<text  x="1049.30" y="623.5" >f..</text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (1 samples, 0.10%)</title><rect x="229.6" y="325" width="1.2" height="15.0" fill="rgb(232,13,23)" rx="2" ry="2" />
<text  x="232.64" y="335.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 8.22%)</title><rect x="18.2" y="885" width="96.9" height="15.0" fill="rgb(238,40,10)" rx="2" ry="2" />
<text  x="21.18" y="895.5" >[unknown]</text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (4 samples, 0.40%)</title><rect x="380.4" y="725" width="4.6" height="15.0" fill="rgb(254,83,12)" rx="2" ry="2" />
<text  x="383.36" y="735.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.10%)</title><rect x="233.1" y="789" width="1.2" height="15.0" fill="rgb(211,195,22)" rx="2" ry="2" />
<text  x="236.15" y="799.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (21 samples, 2.08%)</title><rect x="126.8" y="869" width="24.6" height="15.0" fill="rgb(250,109,9)" rx="2" ry="2" />
<text  x="129.83" y="879.5" >r..</text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.10%)</title><rect x="1069.7" y="549" width="1.1" height="15.0" fill="rgb(247,79,2)" rx="2" ry="2" />
<text  x="1072.66" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (1 samples, 0.10%)</title><rect x="232.0" y="597" width="1.1" height="15.0" fill="rgb(250,27,18)" rx="2" ry="2" />
<text  x="234.98" y="607.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.10%)</title><rect x="206.3" y="709" width="1.1" height="15.0" fill="rgb(230,134,13)" rx="2" ry="2" />
<text  x="209.28" y="719.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (3 samples, 0.30%)</title><rect x="950.5" y="837" width="3.5" height="15.0" fill="rgb(227,172,50)" rx="2" ry="2" />
<text  x="953.50" y="847.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="223.8" y="549" width="1.2" height="15.0" fill="rgb(216,177,29)" rx="2" ry="2" />
<text  x="226.80" y="559.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.10%)</title><rect x="226.1" y="421" width="1.2" height="15.0" fill="rgb(245,195,54)" rx="2" ry="2" />
<text  x="229.14" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.10%)</title><rect x="1162.0" y="821" width="1.1" height="15.0" fill="rgb(249,120,54)" rx="2" ry="2" />
<text  x="1164.96" y="831.5" ></text>
</g>
<g >
<title>_nc_first_db (1 samples, 0.10%)</title><rect x="14.7" y="661" width="1.1" height="15.0" fill="rgb(246,168,14)" rx="2" ry="2" />
<text  x="17.67" y="671.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (1 samples, 0.10%)</title><rect x="223.8" y="629" width="1.2" height="15.0" fill="rgb(227,132,9)" rx="2" ry="2" />
<text  x="226.80" y="639.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.10%)</title><rect x="112.8" y="405" width="1.2" height="15.0" fill="rgb(239,177,48)" rx="2" ry="2" />
<text  x="115.81" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (42 samples, 4.16%)</title><rect x="463.3" y="629" width="49.1" height="15.0" fill="rgb(231,160,49)" rx="2" ry="2" />
<text  x="466.31" y="639.5" >__me..</text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.10%)</title><rect x="226.1" y="389" width="1.2" height="15.0" fill="rgb(209,82,12)" rx="2" ry="2" />
<text  x="229.14" y="399.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.10%)</title><rect x="11.2" y="773" width="1.1" height="15.0" fill="rgb(253,121,20)" rx="2" ry="2" />
<text  x="14.17" y="783.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.10%)</title><rect x="226.1" y="453" width="1.2" height="15.0" fill="rgb(237,229,11)" rx="2" ry="2" />
<text  x="229.14" y="463.5" ></text>
</g>
<g >
<title>CompareAndSwap (4 samples, 0.40%)</title><rect x="159.5" y="837" width="4.7" height="15.0" fill="rgb(239,205,46)" rx="2" ry="2" />
<text  x="162.54" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="111.6" y="757" width="1.2" height="15.0" fill="rgb(207,80,24)" rx="2" ry="2" />
<text  x="114.64" y="767.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (4 samples, 0.40%)</title><rect x="227.3" y="453" width="4.7" height="15.0" fill="rgb(212,9,33)" rx="2" ry="2" />
<text  x="230.31" y="463.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (2 samples, 0.20%)</title><rect x="1163.1" y="549" width="2.4" height="15.0" fill="rgb(215,84,13)" rx="2" ry="2" />
<text  x="1166.13" y="559.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.30%)</title><rect x="1170.1" y="629" width="3.5" height="15.0" fill="rgb(237,136,22)" rx="2" ry="2" />
<text  x="1173.14" y="639.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.10%)</title><rect x="14.7" y="629" width="1.1" height="15.0" fill="rgb(234,104,52)" rx="2" ry="2" />
<text  x="17.67" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (80 samples, 7.92%)</title><rect x="18.2" y="741" width="93.4" height="15.0" fill="rgb(251,147,50)" rx="2" ry="2" />
<text  x="21.18" y="751.5" >__x64_sys_i..</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.10%)</title><rect x="10.0" y="645" width="1.2" height="15.0" fill="rgb(250,212,17)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>handle_pte_fault (4 samples, 0.40%)</title><rect x="215.6" y="725" width="4.7" height="15.0" fill="rgb(218,190,21)" rx="2" ry="2" />
<text  x="218.62" y="735.5" ></text>
</g>
<g >
<title>lind (5 samples, 0.50%)</title><rect x="12.3" y="901" width="5.9" height="15.0" fill="rgb(237,6,41)" rx="2" ry="2" />
<text  x="15.34" y="911.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.10%)</title><rect x="233.1" y="421" width="1.2" height="15.0" fill="rgb(235,103,22)" rx="2" ry="2" />
<text  x="236.15" y="431.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.20%)</title><rect x="987.9" y="837" width="2.3" height="15.0" fill="rgb(211,128,13)" rx="2" ry="2" />
<text  x="990.88" y="847.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.10%)</title><rect x="10.0" y="837" width="1.2" height="15.0" fill="rgb(253,162,46)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>generic_perform_write (2 samples, 0.20%)</title><rect x="112.8" y="533" width="2.3" height="15.0" fill="rgb(224,126,33)" rx="2" ry="2" />
<text  x="115.81" y="543.5" ></text>
</g>
<g >
<title>do_idle (74 samples, 7.33%)</title><rect x="1076.7" y="837" width="86.4" height="15.0" fill="rgb(225,224,1)" rx="2" ry="2" />
<text  x="1079.67" y="847.5" >do_idle</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.10%)</title><rect x="699.3" y="741" width="1.2" height="15.0" fill="rgb(211,162,9)" rx="2" ry="2" />
<text  x="702.31" y="751.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (2 samples, 0.20%)</title><rect x="216.8" y="645" width="2.3" height="15.0" fill="rgb(243,66,33)" rx="2" ry="2" />
<text  x="219.79" y="655.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (23 samples, 2.28%)</title><rect x="1163.1" y="853" width="26.9" height="15.0" fill="rgb(244,139,15)" rx="2" ry="2" />
<text  x="1166.13" y="863.5" >x..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (9 samples, 0.89%)</title><rect x="1163.1" y="709" width="10.5" height="15.0" fill="rgb(241,215,43)" rx="2" ry="2" />
<text  x="1166.13" y="719.5" ></text>
</g>
<g >
<title>NaClAllocAddrSpaceAslr (1 samples, 0.10%)</title><rect x="221.5" y="757" width="1.1" height="15.0" fill="rgb(223,153,29)" rx="2" ry="2" />
<text  x="224.47" y="767.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (4 samples, 0.40%)</title><rect x="886.2" y="757" width="4.7" height="15.0" fill="rgb(241,116,13)" rx="2" ry="2" />
<text  x="889.24" y="767.5" ></text>
</g>
<g >
<title>__free_one_page (5 samples, 0.50%)</title><rect x="1062.7" y="533" width="5.8" height="15.0" fill="rgb(234,219,7)" rx="2" ry="2" />
<text  x="1065.65" y="543.5" ></text>
</g>
<g >
<title>rest_init (23 samples, 2.28%)</title><rect x="1163.1" y="805" width="26.9" height="15.0" fill="rgb(250,200,30)" rx="2" ry="2" />
<text  x="1166.13" y="815.5" >r..</text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.40%)</title><rect x="215.6" y="757" width="4.7" height="15.0" fill="rgb(213,36,25)" rx="2" ry="2" />
<text  x="218.62" y="767.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.10%)</title><rect x="226.1" y="549" width="1.2" height="15.0" fill="rgb(254,38,24)" rx="2" ry="2" />
<text  x="229.14" y="559.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 6.34%)</title><rect x="36.9" y="565" width="74.7" height="15.0" fill="rgb(232,223,40)" rx="2" ry="2" />
<text  x="39.87" y="575.5" >ctx_resc..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (102 samples, 10.10%)</title><rect x="247.2" y="677" width="119.1" height="15.0" fill="rgb(246,119,8)" rx="2" ry="2" />
<text  x="250.17" y="687.5" >ringbuf::consu..</text>
</g>
<g >
<title>NaClDescIoDescWrite (263 samples, 26.04%)</title><rect x="376.9" y="821" width="307.2" height="15.0" fill="rgb(210,145,4)" rx="2" ry="2" />
<text  x="379.85" y="831.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.10%)</title><rect x="222.6" y="613" width="1.2" height="15.0" fill="rgb(231,78,35)" rx="2" ry="2" />
<text  x="225.63" y="623.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.10%)</title><rect x="111.6" y="805" width="1.2" height="15.0" fill="rgb(228,37,52)" rx="2" ry="2" />
<text  x="114.64" y="815.5" ></text>
</g>
<g >
<title>[libncursesw.so.6.2] (1 samples, 0.10%)</title><rect x="14.7" y="645" width="1.1" height="15.0" fill="rgb(214,43,21)" rx="2" ry="2" />
<text  x="17.67" y="655.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="237.8" y="709" width="1.2" height="15.0" fill="rgb(252,71,13)" rx="2" ry="2" />
<text  x="240.82" y="719.5" ></text>
</g>
<g >
<title>sh_get_env_value (1 samples, 0.10%)</title><rect x="13.5" y="725" width="1.2" height="15.0" fill="rgb(231,190,11)" rx="2" ry="2" />
<text  x="16.50" y="735.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.10%)</title><rect x="947.0" y="693" width="1.2" height="15.0" fill="rgb(252,119,49)" rx="2" ry="2" />
<text  x="949.99" y="703.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.10%)</title><rect x="1077.8" y="741" width="1.2" height="15.0" fill="rgb(233,52,29)" rx="2" ry="2" />
<text  x="1080.84" y="751.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="227.3" y="309" width="1.2" height="15.0" fill="rgb(247,212,53)" rx="2" ry="2" />
<text  x="230.31" y="319.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (1 samples, 0.10%)</title><rect x="223.8" y="117" width="1.2" height="15.0" fill="rgb(226,119,37)" rx="2" ry="2" />
<text  x="226.80" y="127.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.20%)</title><rect x="216.8" y="661" width="2.3" height="15.0" fill="rgb(249,70,29)" rx="2" ry="2" />
<text  x="219.79" y="671.5" ></text>
</g>
<g >
<title>arch_do_signal (33 samples, 3.27%)</title><rect x="1032.3" y="805" width="38.5" height="15.0" fill="rgb(211,91,3)" rx="2" ry="2" />
<text  x="1035.28" y="815.5" >arc..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.10%)</title><rect x="228.5" y="325" width="1.1" height="15.0" fill="rgb(251,89,30)" rx="2" ry="2" />
<text  x="231.48" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.10%)</title><rect x="15.8" y="757" width="1.2" height="15.0" fill="rgb(210,161,27)" rx="2" ry="2" />
<text  x="18.84" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="232.0" y="549" width="1.1" height="15.0" fill="rgb(212,175,5)" rx="2" ry="2" />
<text  x="234.98" y="559.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (1 samples, 0.10%)</title><rect x="229.6" y="341" width="1.2" height="15.0" fill="rgb(252,195,38)" rx="2" ry="2" />
<text  x="232.64" y="351.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.10%)</title><rect x="17.0" y="805" width="1.2" height="15.0" fill="rgb(243,111,53)" rx="2" ry="2" />
<text  x="20.01" y="815.5" ></text>
</g>
<g >
<title>NaClSysFstat (1 samples, 0.10%)</title><rect x="234.3" y="837" width="1.2" height="15.0" fill="rgb(240,185,38)" rx="2" ry="2" />
<text  x="237.32" y="847.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (1 samples, 0.10%)</title><rect x="223.8" y="69" width="1.2" height="15.0" fill="rgb(243,98,14)" rx="2" ry="2" />
<text  x="226.80" y="79.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.20%)</title><rect x="112.8" y="661" width="2.3" height="15.0" fill="rgb(254,48,32)" rx="2" ry="2" />
<text  x="115.81" y="671.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.10%)</title><rect x="990.2" y="821" width="1.2" height="15.0" fill="rgb(218,71,20)" rx="2" ry="2" />
<text  x="993.22" y="831.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.10%)</title><rect x="921.3" y="837" width="1.2" height="15.0" fill="rgb(225,7,12)" rx="2" ry="2" />
<text  x="924.29" y="847.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.10%)</title><rect x="664.3" y="645" width="1.1" height="15.0" fill="rgb(232,204,27)" rx="2" ry="2" />
<text  x="667.26" y="655.5" ></text>
</g>
<g >
<title>do_futex (3 samples, 0.30%)</title><rect x="1072.0" y="837" width="3.5" height="15.0" fill="rgb(237,202,7)" rx="2" ry="2" />
<text  x="1075.00" y="847.5" ></text>
</g>
<g >
<title>ion (2 samples, 0.20%)</title><rect x="112.8" y="757" width="2.3" height="15.0" fill="rgb(230,14,35)" rx="2" ry="2" />
<text  x="115.81" y="767.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (2 samples, 0.20%)</title><rect x="704.0" y="789" width="2.3" height="15.0" fill="rgb(208,208,18)" rx="2" ry="2" />
<text  x="706.98" y="799.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.10%)</title><rect x="949.3" y="741" width="1.2" height="15.0" fill="rgb(245,228,19)" rx="2" ry="2" />
<text  x="952.33" y="751.5" ></text>
</g>
<g >
<title>lind_exit (5 samples, 0.50%)</title><rect x="226.1" y="821" width="5.9" height="15.0" fill="rgb(228,89,51)" rx="2" ry="2" />
<text  x="229.14" y="831.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.10%)</title><rect x="233.1" y="485" width="1.2" height="15.0" fill="rgb(216,119,48)" rx="2" ry="2" />
<text  x="236.15" y="495.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.10%)</title><rect x="949.3" y="629" width="1.2" height="15.0" fill="rgb(250,168,33)" rx="2" ry="2" />
<text  x="952.33" y="639.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (4 samples, 0.40%)</title><rect x="832.5" y="773" width="4.7" height="15.0" fill="rgb(211,84,24)" rx="2" ry="2" />
<text  x="835.50" y="783.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.10%)</title><rect x="1068.5" y="565" width="1.2" height="15.0" fill="rgb(213,71,49)" rx="2" ry="2" />
<text  x="1071.50" y="575.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (1 samples, 0.10%)</title><rect x="665.4" y="565" width="1.2" height="15.0" fill="rgb(248,155,19)" rx="2" ry="2" />
<text  x="668.43" y="575.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.10%)</title><rect x="17.0" y="725" width="1.2" height="15.0" fill="rgb(225,209,24)" rx="2" ry="2" />
<text  x="20.01" y="735.5" ></text>
</g>
<g >
<title>[sel_ldr] (3 samples, 0.30%)</title><rect x="806.8" y="869" width="3.5" height="15.0" fill="rgb(233,204,35)" rx="2" ry="2" />
<text  x="809.79" y="879.5" ></text>
</g>
<g >
<title>perf_event__prepare_comm (1 samples, 0.10%)</title><rect x="111.6" y="821" width="1.2" height="15.0" fill="rgb(215,32,4)" rx="2" ry="2" />
<text  x="114.64" y="831.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.10%)</title><rect x="989.0" y="421" width="1.2" height="15.0" fill="rgb(225,219,31)" rx="2" ry="2" />
<text  x="992.05" y="431.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.10%)</title><rect x="11.2" y="661" width="1.1" height="15.0" fill="rgb(211,195,52)" rx="2" ry="2" />
<text  x="14.17" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.10%)</title><rect x="229.6" y="245" width="1.2" height="15.0" fill="rgb(243,70,38)" rx="2" ry="2" />
<text  x="232.64" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3 samples, 0.30%)</title><rect x="1072.0" y="853" width="3.5" height="15.0" fill="rgb(246,142,49)" rx="2" ry="2" />
<text  x="1075.00" y="863.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (1 samples, 0.10%)</title><rect x="227.3" y="421" width="1.2" height="15.0" fill="rgb(211,43,44)" rx="2" ry="2" />
<text  x="230.31" y="431.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (1 samples, 0.10%)</title><rect x="223.8" y="597" width="1.2" height="15.0" fill="rgb(252,171,23)" rx="2" ry="2" />
<text  x="226.80" y="607.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (2 samples, 0.20%)</title><rect x="368.7" y="805" width="2.3" height="15.0" fill="rgb(236,57,14)" rx="2" ry="2" />
<text  x="371.67" y="815.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.10%)</title><rect x="1077.8" y="629" width="1.2" height="15.0" fill="rgb(211,213,18)" rx="2" ry="2" />
<text  x="1080.84" y="639.5" ></text>
</g>
<g >
<title>newidle_balance (2 samples, 0.20%)</title><rect x="1186.5" y="709" width="2.3" height="15.0" fill="rgb(207,185,20)" rx="2" ry="2" />
<text  x="1189.50" y="719.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.10%)</title><rect x="10.0" y="693" width="1.2" height="15.0" fill="rgb(237,132,21)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="511.2" y="613" width="1.2" height="15.0" fill="rgb(209,10,11)" rx="2" ry="2" />
<text  x="514.21" y="623.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.10%)</title><rect x="11.2" y="789" width="1.1" height="15.0" fill="rgb(237,121,38)" rx="2" ry="2" />
<text  x="14.17" y="799.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (2 samples, 0.20%)</title><rect x="947.0" y="757" width="2.3" height="15.0" fill="rgb(253,44,2)" rx="2" ry="2" />
<text  x="949.99" y="767.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (263 samples, 26.04%)</title><rect x="376.9" y="805" width="307.2" height="15.0" fill="rgb(216,124,26)" rx="2" ry="2" />
<text  x="379.85" y="815.5" >NaClHostDescWrite</text>
</g>
<g >
<title>page_add_new_anon_rmap (3 samples, 0.30%)</title><rect x="915.4" y="757" width="3.6" height="15.0" fill="rgb(220,148,10)" rx="2" ry="2" />
<text  x="918.45" y="767.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.10%)</title><rect x="705.1" y="757" width="1.2" height="15.0" fill="rgb(219,86,2)" rx="2" ry="2" />
<text  x="708.15" y="767.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (6 samples, 0.59%)</title><rect x="656.1" y="645" width="7.0" height="15.0" fill="rgb(251,148,20)" rx="2" ry="2" />
<text  x="659.08" y="655.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.10%)</title><rect x="227.3" y="165" width="1.2" height="15.0" fill="rgb(254,210,29)" rx="2" ry="2" />
<text  x="230.31" y="175.5" ></text>
</g>
<g >
<title>cmd_record (83 samples, 8.22%)</title><rect x="18.2" y="869" width="96.9" height="15.0" fill="rgb(236,99,20)" rx="2" ry="2" />
<text  x="21.18" y="879.5" >cmd_record</text>
</g>
<g >
<title>__libc_write (1 samples, 0.10%)</title><rect x="226.1" y="661" width="1.2" height="15.0" fill="rgb(231,35,29)" rx="2" ry="2" />
<text  x="229.14" y="671.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.10%)</title><rect x="114.0" y="501" width="1.1" height="15.0" fill="rgb(254,160,42)" rx="2" ry="2" />
<text  x="116.98" y="511.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.10%)</title><rect x="1077.8" y="613" width="1.2" height="15.0" fill="rgb(232,207,4)" rx="2" ry="2" />
<text  x="1080.84" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (1 samples, 0.10%)</title><rect x="386.2" y="725" width="1.2" height="15.0" fill="rgb(207,169,29)" rx="2" ry="2" />
<text  x="389.20" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.10%)</title><rect x="232.0" y="677" width="1.1" height="15.0" fill="rgb(226,150,46)" rx="2" ry="2" />
<text  x="234.98" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (1 samples, 0.10%)</title><rect x="678.3" y="693" width="1.1" height="15.0" fill="rgb(239,42,28)" rx="2" ry="2" />
<text  x="681.28" y="703.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (4 samples, 0.40%)</title><rect x="220.3" y="853" width="4.7" height="15.0" fill="rgb(216,89,7)" rx="2" ry="2" />
<text  x="223.30" y="863.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (5 samples, 0.50%)</title><rect x="226.1" y="789" width="5.9" height="15.0" fill="rgb(246,123,31)" rx="2" ry="2" />
<text  x="229.14" y="799.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.10%)</title><rect x="172.4" y="597" width="1.2" height="15.0" fill="rgb(231,100,8)" rx="2" ry="2" />
<text  x="175.40" y="607.5" ></text>
</g>
<g >
<title>NaClDescUnref (7 samples, 0.69%)</title><rect x="684.1" y="821" width="8.2" height="15.0" fill="rgb(251,48,34)" rx="2" ry="2" />
<text  x="687.12" y="831.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.10%)</title><rect x="1077.8" y="709" width="1.2" height="15.0" fill="rgb(244,86,33)" rx="2" ry="2" />
<text  x="1080.84" y="719.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (2 samples, 0.20%)</title><rect x="124.5" y="837" width="2.3" height="15.0" fill="rgb(238,30,8)" rx="2" ry="2" />
<text  x="127.50" y="847.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.10%)</title><rect x="10.0" y="725" width="1.2" height="15.0" fill="rgb(224,174,7)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.10%)</title><rect x="233.1" y="181" width="1.2" height="15.0" fill="rgb(223,217,29)" rx="2" ry="2" />
<text  x="236.15" y="191.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.20%)</title><rect x="1079.0" y="693" width="2.3" height="15.0" fill="rgb(210,228,51)" rx="2" ry="2" />
<text  x="1082.01" y="703.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (2 samples, 0.20%)</title><rect x="222.6" y="661" width="2.4" height="15.0" fill="rgb(232,210,22)" rx="2" ry="2" />
<text  x="225.63" y="671.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.10%)</title><rect x="115.1" y="789" width="1.2" height="15.0" fill="rgb(230,226,39)" rx="2" ry="2" />
<text  x="118.15" y="799.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.20%)</title><rect x="915.4" y="741" width="2.4" height="15.0" fill="rgb(211,1,7)" rx="2" ry="2" />
<text  x="918.45" y="751.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="665.4" y="613" width="1.2" height="15.0" fill="rgb(214,65,41)" rx="2" ry="2" />
<text  x="668.43" y="623.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.10%)</title><rect x="915.4" y="725" width="1.2" height="15.0" fill="rgb(235,36,18)" rx="2" ry="2" />
<text  x="918.45" y="735.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (4 samples, 0.40%)</title><rect x="220.3" y="821" width="4.7" height="15.0" fill="rgb(205,196,33)" rx="2" ry="2" />
<text  x="223.30" y="831.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.10%)</title><rect x="233.1" y="517" width="1.2" height="15.0" fill="rgb(214,142,49)" rx="2" ry="2" />
<text  x="236.15" y="527.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.10%)</title><rect x="695.8" y="773" width="1.2" height="15.0" fill="rgb(235,97,35)" rx="2" ry="2" />
<text  x="698.80" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.10%)</title><rect x="12.3" y="885" width="1.2" height="15.0" fill="rgb(236,45,39)" rx="2" ry="2" />
<text  x="15.34" y="895.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.20%)</title><rect x="229.6" y="373" width="2.4" height="15.0" fill="rgb(213,5,47)" rx="2" ry="2" />
<text  x="232.64" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.20%)</title><rect x="947.0" y="821" width="2.3" height="15.0" fill="rgb(226,117,54)" rx="2" ry="2" />
<text  x="949.99" y="831.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.10%)</title><rect x="511.2" y="501" width="1.2" height="15.0" fill="rgb(233,12,24)" rx="2" ry="2" />
<text  x="514.21" y="511.5" ></text>
</g>
<g >
<title>do_iter_read (1 samples, 0.10%)</title><rect x="989.0" y="501" width="1.2" height="15.0" fill="rgb(230,101,17)" rx="2" ry="2" />
<text  x="992.05" y="511.5" ></text>
</g>
<g >
<title>do_shared_fault (2 samples, 0.20%)</title><rect x="172.4" y="613" width="2.3" height="15.0" fill="rgb(210,69,47)" rx="2" ry="2" />
<text  x="175.40" y="623.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="665.4" y="597" width="1.2" height="15.0" fill="rgb(219,197,10)" rx="2" ry="2" />
<text  x="668.43" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (7 samples, 0.69%)</title><rect x="444.6" y="661" width="8.2" height="15.0" fill="rgb(244,75,13)" rx="2" ry="2" />
<text  x="447.61" y="671.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.10%)</title><rect x="222.6" y="309" width="1.2" height="15.0" fill="rgb(249,190,36)" rx="2" ry="2" />
<text  x="225.63" y="319.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.10%)</title><rect x="223.8" y="421" width="1.2" height="15.0" fill="rgb(225,112,42)" rx="2" ry="2" />
<text  x="226.80" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="11.2" y="885" width="1.1" height="15.0" fill="rgb(247,178,27)" rx="2" ry="2" />
<text  x="14.17" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="17.0" y="869" width="1.2" height="15.0" fill="rgb(229,175,23)" rx="2" ry="2" />
<text  x="20.01" y="879.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.10%)</title><rect x="213.3" y="645" width="1.2" height="15.0" fill="rgb(254,89,44)" rx="2" ry="2" />
<text  x="216.29" y="655.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (2 samples, 0.20%)</title><rect x="698.1" y="757" width="2.4" height="15.0" fill="rgb(236,167,21)" rx="2" ry="2" />
<text  x="701.14" y="767.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (48 samples, 4.75%)</title><rect x="457.5" y="661" width="56.0" height="15.0" fill="rgb(247,173,33)" rx="2" ry="2" />
<text  x="460.47" y="671.5" >ringb..</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="233.1" y="293" width="1.2" height="15.0" fill="rgb(211,158,15)" rx="2" ry="2" />
<text  x="236.15" y="303.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (292 samples, 28.91%)</title><rect x="366.3" y="853" width="341.2" height="15.0" fill="rgb(242,119,45)" rx="2" ry="2" />
<text  x="369.34" y="863.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>load_balance (2 samples, 0.20%)</title><rect x="1170.1" y="581" width="2.4" height="15.0" fill="rgb(222,5,23)" rx="2" ry="2" />
<text  x="1173.14" y="591.5" ></text>
</g>
<g >
<title>_nc_read_entry2 (1 samples, 0.10%)</title><rect x="14.7" y="677" width="1.1" height="15.0" fill="rgb(232,18,22)" rx="2" ry="2" />
<text  x="17.67" y="687.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (4 samples, 0.40%)</title><rect x="452.8" y="661" width="4.7" height="15.0" fill="rgb(208,51,16)" rx="2" ry="2" />
<text  x="455.79" y="671.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.10%)</title><rect x="228.5" y="357" width="1.1" height="15.0" fill="rgb(227,119,32)" rx="2" ry="2" />
<text  x="231.48" y="367.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.10%)</title><rect x="206.3" y="725" width="1.1" height="15.0" fill="rgb(242,55,29)" rx="2" ry="2" />
<text  x="209.28" y="735.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (2 samples, 0.20%)</title><rect x="677.1" y="725" width="2.3" height="15.0" fill="rgb(253,31,7)" rx="2" ry="2" />
<text  x="680.11" y="735.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.10%)</title><rect x="222.6" y="485" width="1.2" height="15.0" fill="rgb(207,205,1)" rx="2" ry="2" />
<text  x="225.63" y="495.5" ></text>
</g>
<g >
<title>start_kernel (23 samples, 2.28%)</title><rect x="1163.1" y="837" width="26.9" height="15.0" fill="rgb(241,176,49)" rx="2" ry="2" />
<text  x="1166.13" y="847.5" >s..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.10%)</title><rect x="206.3" y="677" width="1.1" height="15.0" fill="rgb(250,60,29)" rx="2" ry="2" />
<text  x="209.28" y="687.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.10%)</title><rect x="1187.7" y="693" width="1.1" height="15.0" fill="rgb(232,187,19)" rx="2" ry="2" />
<text  x="1190.66" y="703.5" ></text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (3 samples, 0.30%)</title><rect x="171.2" y="773" width="3.5" height="15.0" fill="rgb(227,64,40)" rx="2" ry="2" />
<text  x="174.23" y="783.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (1 samples, 0.10%)</title><rect x="236.7" y="741" width="1.1" height="15.0" fill="rgb(206,23,19)" rx="2" ry="2" />
<text  x="239.65" y="751.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (1 samples, 0.10%)</title><rect x="154.9" y="837" width="1.1" height="15.0" fill="rgb(251,184,26)" rx="2" ry="2" />
<text  x="157.87" y="847.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (2 samples, 0.20%)</title><rect x="232.0" y="805" width="2.3" height="15.0" fill="rgb(212,42,32)" rx="2" ry="2" />
<text  x="234.98" y="815.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.69%)</title><rect x="444.6" y="645" width="8.2" height="15.0" fill="rgb(254,28,16)" rx="2" ry="2" />
<text  x="447.61" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.30%)</title><rect x="1072.0" y="885" width="3.5" height="15.0" fill="rgb(229,197,44)" rx="2" ry="2" />
<text  x="1075.00" y="895.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.10%)</title><rect x="233.1" y="757" width="1.2" height="15.0" fill="rgb(222,145,24)" rx="2" ry="2" />
<text  x="236.15" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="226.1" y="645" width="1.2" height="15.0" fill="rgb(218,147,53)" rx="2" ry="2" />
<text  x="229.14" y="655.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.10%)</title><rect x="949.3" y="693" width="1.2" height="15.0" fill="rgb(209,42,0)" rx="2" ry="2" />
<text  x="952.33" y="703.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.10%)</title><rect x="911.9" y="741" width="1.2" height="15.0" fill="rgb(213,180,8)" rx="2" ry="2" />
<text  x="914.94" y="751.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.10%)</title><rect x="511.2" y="549" width="1.2" height="15.0" fill="rgb(239,146,39)" rx="2" ry="2" />
<text  x="514.21" y="559.5" ></text>
</g>
<g >
<title>do_fault_around (1 samples, 0.10%)</title><rect x="986.7" y="709" width="1.2" height="15.0" fill="rgb(206,178,48)" rx="2" ry="2" />
<text  x="989.71" y="719.5" ></text>
</g>
<g >
<title>record__pushfn (2 samples, 0.20%)</title><rect x="112.8" y="789" width="2.3" height="15.0" fill="rgb(206,188,51)" rx="2" ry="2" />
<text  x="115.81" y="799.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="233.1" y="533" width="1.2" height="15.0" fill="rgb(223,211,34)" rx="2" ry="2" />
<text  x="236.15" y="543.5" ></text>
</g>
<g >
<title>_rl_set_screen_size (2 samples, 0.20%)</title><rect x="13.5" y="757" width="2.3" height="15.0" fill="rgb(236,173,35)" rx="2" ry="2" />
<text  x="16.50" y="767.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.10%)</title><rect x="986.7" y="869" width="1.2" height="15.0" fill="rgb(219,9,0)" rx="2" ry="2" />
<text  x="989.71" y="879.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="223.8" y="213" width="1.2" height="15.0" fill="rgb(224,5,18)" rx="2" ry="2" />
<text  x="226.80" y="223.5" ></text>
</g>
<g >
<title>__cmd_record (83 samples, 8.22%)</title><rect x="18.2" y="853" width="96.9" height="15.0" fill="rgb(240,18,28)" rx="2" ry="2" />
<text  x="21.18" y="863.5" >__cmd_record</text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.10%)</title><rect x="948.2" y="549" width="1.1" height="15.0" fill="rgb(206,178,37)" rx="2" ry="2" />
<text  x="951.16" y="559.5" ></text>
</g>
<g >
<title>find_variable (1 samples, 0.10%)</title><rect x="13.5" y="709" width="1.2" height="15.0" fill="rgb(236,52,13)" rx="2" ry="2" />
<text  x="16.50" y="719.5" ></text>
</g>
<g >
<title>NaClRefCountRef (1 samples, 0.10%)</title><rect x="700.5" y="789" width="1.1" height="15.0" fill="rgb(228,155,33)" rx="2" ry="2" />
<text  x="703.48" y="799.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.10%)</title><rect x="948.2" y="693" width="1.1" height="15.0" fill="rgb(224,65,36)" rx="2" ry="2" />
<text  x="951.16" y="703.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (5 samples, 0.50%)</title><rect x="394.4" y="693" width="5.8" height="15.0" fill="rgb(213,110,14)" rx="2" ry="2" />
<text  x="397.38" y="703.5" ></text>
</g>
<g >
<title>__realpath (1 samples, 0.10%)</title><rect x="987.9" y="741" width="1.1" height="15.0" fill="rgb(226,46,17)" rx="2" ry="2" />
<text  x="990.88" y="751.5" ></text>
</g>
<g >
<title>lindrustinit (1 samples, 0.10%)</title><rect x="989.0" y="821" width="1.2" height="15.0" fill="rgb(216,17,41)" rx="2" ry="2" />
<text  x="992.05" y="831.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.10%)</title><rect x="233.1" y="389" width="1.2" height="15.0" fill="rgb(241,221,3)" rx="2" ry="2" />
<text  x="236.15" y="399.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (2 samples, 0.20%)</title><rect x="124.5" y="869" width="2.3" height="15.0" fill="rgb(240,180,27)" rx="2" ry="2" />
<text  x="127.50" y="879.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.10%)</title><rect x="10.0" y="789" width="1.2" height="15.0" fill="rgb(253,229,39)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (4 samples, 0.40%)</title><rect x="207.4" y="757" width="4.7" height="15.0" fill="rgb(232,123,28)" rx="2" ry="2" />
<text  x="210.45" y="767.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.10%)</title><rect x="228.5" y="261" width="1.1" height="15.0" fill="rgb(215,179,4)" rx="2" ry="2" />
<text  x="231.48" y="271.5" ></text>
</g>
<g >
<title>futex_wait (3 samples, 0.30%)</title><rect x="1072.0" y="821" width="3.5" height="15.0" fill="rgb(220,172,38)" rx="2" ry="2" />
<text  x="1075.00" y="831.5" ></text>
</g>
<g >
<title>reader_loop (2 samples, 0.20%)</title><rect x="13.5" y="837" width="2.3" height="15.0" fill="rgb(215,34,37)" rx="2" ry="2" />
<text  x="16.50" y="847.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.10%)</title><rect x="1069.7" y="581" width="1.1" height="15.0" fill="rgb(235,153,11)" rx="2" ry="2" />
<text  x="1072.66" y="591.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.10%)</title><rect x="10.0" y="821" width="1.2" height="15.0" fill="rgb(246,143,29)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.10%)</title><rect x="1054.5" y="549" width="1.1" height="15.0" fill="rgb(234,38,21)" rx="2" ry="2" />
<text  x="1057.48" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (1 samples, 0.10%)</title><rect x="232.0" y="613" width="1.1" height="15.0" fill="rgb(234,8,6)" rx="2" ry="2" />
<text  x="234.98" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (5 samples, 0.50%)</title><rect x="226.1" y="741" width="5.9" height="15.0" fill="rgb(254,210,3)" rx="2" ry="2" />
<text  x="229.14" y="751.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (33 samples, 3.27%)</title><rect x="1032.3" y="853" width="38.5" height="15.0" fill="rgb(227,203,3)" rx="2" ry="2" />
<text  x="1035.28" y="863.5" >sys..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.10%)</title><rect x="421.2" y="693" width="1.2" height="15.0" fill="rgb(233,116,8)" rx="2" ry="2" />
<text  x="424.25" y="703.5" ></text>
</g>
<g >
<title>event_function_call (69 samples, 6.83%)</title><rect x="31.0" y="661" width="80.6" height="15.0" fill="rgb(250,194,45)" rx="2" ry="2" />
<text  x="34.03" y="671.5" >event_fun..</text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.10%)</title><rect x="215.6" y="693" width="1.2" height="15.0" fill="rgb(222,182,43)" rx="2" ry="2" />
<text  x="218.62" y="703.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (1 samples, 0.10%)</title><rect x="678.3" y="709" width="1.1" height="15.0" fill="rgb(211,52,42)" rx="2" ry="2" />
<text  x="681.28" y="719.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.10%)</title><rect x="1162.0" y="789" width="1.1" height="15.0" fill="rgb(214,19,39)" rx="2" ry="2" />
<text  x="1164.96" y="799.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.10%)</title><rect x="232.0" y="581" width="1.1" height="15.0" fill="rgb(207,75,46)" rx="2" ry="2" />
<text  x="234.98" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="14.7" y="597" width="1.1" height="15.0" fill="rgb(231,81,13)" rx="2" ry="2" />
<text  x="17.67" y="607.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (6 samples, 0.59%)</title><rect x="878.1" y="677" width="7.0" height="15.0" fill="rgb(206,88,37)" rx="2" ry="2" />
<text  x="881.06" y="687.5" ></text>
</g>
<g >
<title>record__mmap_read_all (2 samples, 0.20%)</title><rect x="112.8" y="837" width="2.3" height="15.0" fill="rgb(236,66,26)" rx="2" ry="2" />
<text  x="115.81" y="847.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (2 samples, 0.20%)</title><rect x="368.7" y="821" width="2.3" height="15.0" fill="rgb(252,209,1)" rx="2" ry="2" />
<text  x="371.67" y="831.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (3 samples, 0.30%)</title><rect x="950.5" y="773" width="3.5" height="15.0" fill="rgb(249,17,34)" rx="2" ry="2" />
<text  x="953.50" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="115.1" y="885" width="1.2" height="15.0" fill="rgb(208,166,1)" rx="2" ry="2" />
<text  x="118.15" y="895.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (1 samples, 0.10%)</title><rect x="989.0" y="677" width="1.2" height="15.0" fill="rgb(208,143,52)" rx="2" ry="2" />
<text  x="992.05" y="687.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.10%)</title><rect x="1075.5" y="757" width="1.2" height="15.0" fill="rgb(231,76,28)" rx="2" ry="2" />
<text  x="1078.50" y="767.5" ></text>
</g>
<g >
<title>CopyBundleTails (4 samples, 0.40%)</title><rect x="165.4" y="789" width="4.7" height="15.0" fill="rgb(244,20,26)" rx="2" ry="2" />
<text  x="168.39" y="799.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (2 samples, 0.20%)</title><rect x="222.6" y="677" width="2.4" height="15.0" fill="rgb(219,215,16)" rx="2" ry="2" />
<text  x="225.63" y="687.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.10%)</title><rect x="1187.7" y="661" width="1.1" height="15.0" fill="rgb(225,92,2)" rx="2" ry="2" />
<text  x="1190.66" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.10%)</title><rect x="670.1" y="597" width="1.2" height="15.0" fill="rgb(220,71,50)" rx="2" ry="2" />
<text  x="673.10" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (3 samples, 0.30%)</title><rect x="390.9" y="725" width="3.5" height="15.0" fill="rgb(212,21,5)" rx="2" ry="2" />
<text  x="393.87" y="735.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.10%)</title><rect x="227.3" y="213" width="1.2" height="15.0" fill="rgb(254,217,18)" rx="2" ry="2" />
<text  x="230.31" y="223.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.20%)</title><rect x="112.8" y="645" width="2.3" height="15.0" fill="rgb(245,56,36)" rx="2" ry="2" />
<text  x="115.81" y="655.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.30%)</title><rect x="228.5" y="405" width="3.5" height="15.0" fill="rgb(221,139,18)" rx="2" ry="2" />
<text  x="231.48" y="415.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.10%)</title><rect x="948.2" y="453" width="1.1" height="15.0" fill="rgb(238,112,50)" rx="2" ry="2" />
<text  x="951.16" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="222.6" y="533" width="1.2" height="15.0" fill="rgb(239,30,44)" rx="2" ry="2" />
<text  x="225.63" y="543.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.10%)</title><rect x="226.1" y="597" width="1.2" height="15.0" fill="rgb(249,220,45)" rx="2" ry="2" />
<text  x="229.14" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.10%)</title><rect x="222.6" y="517" width="1.2" height="15.0" fill="rgb(245,56,41)" rx="2" ry="2" />
<text  x="225.63" y="527.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (4 samples, 0.40%)</title><rect x="679.4" y="757" width="4.7" height="15.0" fill="rgb(208,229,53)" rx="2" ry="2" />
<text  x="682.45" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="949.3" y="837" width="1.2" height="15.0" fill="rgb(222,1,40)" rx="2" ry="2" />
<text  x="952.33" y="847.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="230.8" y="229" width="1.2" height="15.0" fill="rgb(248,178,29)" rx="2" ry="2" />
<text  x="233.81" y="239.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.30%)</title><rect x="663.1" y="677" width="3.5" height="15.0" fill="rgb(246,49,9)" rx="2" ry="2" />
<text  x="666.09" y="687.5" ></text>
</g>
<g >
<title>__activate_page (1 samples, 0.10%)</title><rect x="1041.6" y="581" width="1.2" height="15.0" fill="rgb(245,167,42)" rx="2" ry="2" />
<text  x="1044.62" y="591.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.10%)</title><rect x="1162.0" y="757" width="1.1" height="15.0" fill="rgb(248,170,49)" rx="2" ry="2" />
<text  x="1164.96" y="767.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.10%)</title><rect x="948.2" y="725" width="1.1" height="15.0" fill="rgb(239,183,47)" rx="2" ry="2" />
<text  x="951.16" y="735.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.40%)</title><rect x="227.3" y="469" width="4.7" height="15.0" fill="rgb(213,35,2)" rx="2" ry="2" />
<text  x="230.31" y="479.5" ></text>
</g>
<g >
<title>__GI___mmap64 (1 samples, 0.10%)</title><rect x="221.5" y="693" width="1.1" height="15.0" fill="rgb(220,138,53)" rx="2" ry="2" />
<text  x="224.47" y="703.5" ></text>
</g>
<g >
<title>NaClLogGetVerbosity (3 samples, 0.30%)</title><rect x="702.8" y="821" width="3.5" height="15.0" fill="rgb(239,127,49)" rx="2" ry="2" />
<text  x="705.81" y="831.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (6 samples, 0.59%)</title><rect x="972.7" y="869" width="7.0" height="15.0" fill="rgb(250,200,8)" rx="2" ry="2" />
<text  x="975.69" y="879.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 0.69%)</title><rect x="663.1" y="709" width="8.2" height="15.0" fill="rgb(240,225,28)" rx="2" ry="2" />
<text  x="666.09" y="719.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (9 samples, 0.89%)</title><rect x="1163.1" y="693" width="10.5" height="15.0" fill="rgb(235,199,13)" rx="2" ry="2" />
<text  x="1166.13" y="703.5" ></text>
</g>
<g >
<title>exc_page_fault (3 samples, 0.30%)</title><rect x="171.2" y="709" width="3.5" height="15.0" fill="rgb(212,142,42)" rx="2" ry="2" />
<text  x="174.23" y="719.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.10%)</title><rect x="170.1" y="613" width="1.1" height="15.0" fill="rgb(220,164,39)" rx="2" ry="2" />
<text  x="173.06" y="623.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (3 samples, 0.30%)</title><rect x="950.5" y="869" width="3.5" height="15.0" fill="rgb(205,107,17)" rx="2" ry="2" />
<text  x="953.50" y="879.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (2 samples, 0.20%)</title><rect x="380.4" y="677" width="2.3" height="15.0" fill="rgb(215,140,26)" rx="2" ry="2" />
<text  x="383.36" y="687.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (1 samples, 0.10%)</title><rect x="665.4" y="629" width="1.2" height="15.0" fill="rgb(249,125,9)" rx="2" ry="2" />
<text  x="668.43" y="639.5" ></text>
</g>
<g >
<title>perf_mmap__push (2 samples, 0.20%)</title><rect x="112.8" y="805" width="2.3" height="15.0" fill="rgb(205,208,10)" rx="2" ry="2" />
<text  x="115.81" y="815.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.10%)</title><rect x="170.1" y="645" width="1.1" height="15.0" fill="rgb(253,167,23)" rx="2" ry="2" />
<text  x="173.06" y="655.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (6 samples, 0.59%)</title><rect x="1061.5" y="549" width="7.0" height="15.0" fill="rgb(219,46,32)" rx="2" ry="2" />
<text  x="1064.49" y="559.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.10%)</title><rect x="226.1" y="517" width="1.2" height="15.0" fill="rgb(209,25,38)" rx="2" ry="2" />
<text  x="229.14" y="527.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.20%)</title><rect x="987.9" y="869" width="2.3" height="15.0" fill="rgb(205,79,41)" rx="2" ry="2" />
<text  x="990.88" y="879.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (11 samples, 1.09%)</title><rect x="138.5" y="805" width="12.9" height="15.0" fill="rgb(212,113,24)" rx="2" ry="2" />
<text  x="141.51" y="815.5" ></text>
</g>
<g >
<title>_nc_setupterm (1 samples, 0.10%)</title><rect x="14.7" y="709" width="1.1" height="15.0" fill="rgb(250,147,12)" rx="2" ry="2" />
<text  x="17.67" y="719.5" ></text>
</g>
<g >
<title>do_user_addr_fault (91 samples, 9.01%)</title><rect x="813.8" y="837" width="106.3" height="15.0" fill="rgb(221,102,43)" rx="2" ry="2" />
<text  x="816.80" y="847.5" >do_user_addr_..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (1 samples, 0.10%)</title><rect x="365.2" y="645" width="1.1" height="15.0" fill="rgb(245,192,27)" rx="2" ry="2" />
<text  x="368.17" y="655.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="668.9" y="613" width="1.2" height="15.0" fill="rgb(208,74,2)" rx="2" ry="2" />
<text  x="671.93" y="623.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (1 samples, 0.10%)</title><rect x="665.4" y="661" width="1.2" height="15.0" fill="rgb(242,21,49)" rx="2" ry="2" />
<text  x="668.43" y="671.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.10%)</title><rect x="816.1" y="821" width="1.2" height="15.0" fill="rgb(254,24,11)" rx="2" ry="2" />
<text  x="819.14" y="831.5" ></text>
</g>
<g >
<title>std::io::read_to_end (1 samples, 0.10%)</title><rect x="989.0" y="709" width="1.2" height="15.0" fill="rgb(242,159,13)" rx="2" ry="2" />
<text  x="992.05" y="719.5" ></text>
</g>
<g >
<title>NaClSysRead (112 samples, 11.09%)</title><rect x="235.5" y="837" width="130.8" height="15.0" fill="rgb(227,79,23)" rx="2" ry="2" />
<text  x="238.49" y="847.5" >NaClSysRead</text>
</g>
<g >
<title>vfs_read (1 samples, 0.10%)</title><rect x="989.0" y="565" width="1.2" height="15.0" fill="rgb(214,213,2)" rx="2" ry="2" />
<text  x="992.05" y="575.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.10%)</title><rect x="233.1" y="261" width="1.2" height="15.0" fill="rgb(230,7,30)" rx="2" ry="2" />
<text  x="236.15" y="271.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (1 samples, 0.10%)</title><rect x="223.8" y="613" width="1.2" height="15.0" fill="rgb(218,213,6)" rx="2" ry="2" />
<text  x="226.80" y="623.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.10%)</title><rect x="949.3" y="773" width="1.2" height="15.0" fill="rgb(231,45,36)" rx="2" ry="2" />
<text  x="952.33" y="783.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (4 samples, 0.40%)</title><rect x="165.4" y="805" width="4.7" height="15.0" fill="rgb(254,200,51)" rx="2" ry="2" />
<text  x="168.39" y="815.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.10%)</title><rect x="915.4" y="709" width="1.2" height="15.0" fill="rgb(216,172,38)" rx="2" ry="2" />
<text  x="918.45" y="719.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (8 samples, 0.79%)</title><rect x="411.9" y="709" width="9.3" height="15.0" fill="rgb(236,89,16)" rx="2" ry="2" />
<text  x="414.90" y="719.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.10%)</title><rect x="15.8" y="805" width="1.2" height="15.0" fill="rgb(237,141,38)" rx="2" ry="2" />
<text  x="18.84" y="815.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.10%)</title><rect x="10.0" y="773" width="1.2" height="15.0" fill="rgb(205,22,32)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (4 samples, 0.40%)</title><rect x="380.4" y="709" width="4.6" height="15.0" fill="rgb(254,192,37)" rx="2" ry="2" />
<text  x="383.36" y="719.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.10%)</title><rect x="223.8" y="501" width="1.2" height="15.0" fill="rgb(238,4,29)" rx="2" ry="2" />
<text  x="226.80" y="511.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.50%)</title><rect x="394.4" y="709" width="5.8" height="15.0" fill="rgb(213,126,41)" rx="2" ry="2" />
<text  x="397.38" y="719.5" ></text>
</g>
<g >
<title>_perf_ioctl (80 samples, 7.92%)</title><rect x="18.2" y="709" width="93.4" height="15.0" fill="rgb(254,114,40)" rx="2" ry="2" />
<text  x="21.18" y="719.5" >_perf_ioctl</text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (111 samples, 10.99%)</title><rect x="236.7" y="757" width="129.6" height="15.0" fill="rgb(244,97,9)" rx="2" ry="2" />
<text  x="239.65" y="767.5" >rustposix::safep..</text>
</g>
<g >
<title>pagevec_lru_move_fn (10 samples, 0.99%)</title><rect x="895.6" y="725" width="11.7" height="15.0" fill="rgb(210,143,53)" rx="2" ry="2" />
<text  x="898.58" y="735.5" ></text>
</g>
<g >
<title>unmap_single_vma (32 samples, 3.17%)</title><rect x="1032.3" y="677" width="37.4" height="15.0" fill="rgb(248,207,12)" rx="2" ry="2" />
<text  x="1035.28" y="687.5" >unm..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="170.1" y="725" width="1.1" height="15.0" fill="rgb(245,115,14)" rx="2" ry="2" />
<text  x="173.06" y="735.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.10%)</title><rect x="115.1" y="741" width="1.2" height="15.0" fill="rgb(250,216,27)" rx="2" ry="2" />
<text  x="118.15" y="751.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (1 samples, 0.10%)</title><rect x="677.1" y="693" width="1.2" height="15.0" fill="rgb(248,83,49)" rx="2" ry="2" />
<text  x="680.11" y="703.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="223.8" y="405" width="1.2" height="15.0" fill="rgb(224,118,44)" rx="2" ry="2" />
<text  x="226.80" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.10%)</title><rect x="170.1" y="709" width="1.1" height="15.0" fill="rgb(254,162,9)" rx="2" ry="2" />
<text  x="173.06" y="719.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.10%)</title><rect x="949.3" y="709" width="1.2" height="15.0" fill="rgb(229,2,23)" rx="2" ry="2" />
<text  x="952.33" y="719.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.10%)</title><rect x="228.5" y="277" width="1.1" height="15.0" fill="rgb(217,202,8)" rx="2" ry="2" />
<text  x="231.48" y="287.5" ></text>
</g>
<g >
<title>__GI___clone (2 samples, 0.20%)</title><rect x="985.5" y="885" width="2.4" height="15.0" fill="rgb(249,2,53)" rx="2" ry="2" />
<text  x="988.54" y="895.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (1 samples, 0.10%)</title><rect x="665.4" y="645" width="1.2" height="15.0" fill="rgb(227,177,17)" rx="2" ry="2" />
<text  x="668.43" y="655.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.10%)</title><rect x="15.8" y="853" width="1.2" height="15.0" fill="rgb(227,0,14)" rx="2" ry="2" />
<text  x="18.84" y="863.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.10%)</title><rect x="215.6" y="629" width="1.2" height="15.0" fill="rgb(241,65,38)" rx="2" ry="2" />
<text  x="218.62" y="639.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.10%)</title><rect x="1075.5" y="821" width="1.2" height="15.0" fill="rgb(242,166,49)" rx="2" ry="2" />
<text  x="1078.50" y="831.5" ></text>
</g>
<g >
<title>ovl_read_iter (1 samples, 0.10%)</title><rect x="232.0" y="469" width="1.1" height="15.0" fill="rgb(237,28,39)" rx="2" ry="2" />
<text  x="234.98" y="479.5" ></text>
</g>
<g >
<title>add_mm_counter_fast (1 samples, 0.10%)</title><rect x="831.3" y="773" width="1.2" height="15.0" fill="rgb(225,118,4)" rx="2" ry="2" />
<text  x="834.33" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.10%)</title><rect x="225.0" y="725" width="1.1" height="15.0" fill="rgb(233,183,48)" rx="2" ry="2" />
<text  x="227.97" y="735.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.10%)</title><rect x="222.6" y="469" width="1.2" height="15.0" fill="rgb(214,22,18)" rx="2" ry="2" />
<text  x="225.63" y="479.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.10%)</title><rect x="512.4" y="485" width="1.1" height="15.0" fill="rgb(229,197,19)" rx="2" ry="2" />
<text  x="515.38" y="495.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (5 samples, 0.50%)</title><rect x="671.3" y="709" width="5.8" height="15.0" fill="rgb(245,163,13)" rx="2" ry="2" />
<text  x="674.27" y="719.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.20%)</title><rect x="688.8" y="773" width="2.3" height="15.0" fill="rgb(234,73,26)" rx="2" ry="2" />
<text  x="691.79" y="783.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.10%)</title><rect x="112.8" y="389" width="1.2" height="15.0" fill="rgb(214,199,54)" rx="2" ry="2" />
<text  x="115.81" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (6 samples, 0.59%)</title><rect x="656.1" y="661" width="7.0" height="15.0" fill="rgb(241,122,30)" rx="2" ry="2" />
<text  x="659.08" y="671.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.10%)</title><rect x="1069.7" y="645" width="1.1" height="15.0" fill="rgb(227,186,28)" rx="2" ry="2" />
<text  x="1072.66" y="655.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="233.1" y="405" width="1.2" height="15.0" fill="rgb(250,157,41)" rx="2" ry="2" />
<text  x="236.15" y="415.5" ></text>
</g>
<g >
<title>MarkJumpTarget (1 samples, 0.10%)</title><rect x="212.1" y="741" width="1.2" height="15.0" fill="rgb(226,125,9)" rx="2" ry="2" />
<text  x="215.12" y="751.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.10%)</title><rect x="226.1" y="373" width="1.2" height="15.0" fill="rgb(234,213,7)" rx="2" ry="2" />
<text  x="229.14" y="383.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.10%)</title><rect x="206.3" y="645" width="1.1" height="15.0" fill="rgb(218,85,24)" rx="2" ry="2" />
<text  x="209.28" y="655.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 7.92%)</title><rect x="18.2" y="821" width="93.4" height="15.0" fill="rgb(249,185,10)" rx="2" ry="2" />
<text  x="21.18" y="831.5" >perf_evsel_..</text>
</g>
<g >
<title>load_balance (1 samples, 0.10%)</title><rect x="10.0" y="677" width="1.2" height="15.0" fill="rgb(205,13,37)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::pread_syscall (1 samples, 0.10%)</title><rect x="232.0" y="661" width="1.1" height="15.0" fill="rgb(247,11,40)" rx="2" ry="2" />
<text  x="234.98" y="671.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.10%)</title><rect x="213.3" y="613" width="1.2" height="15.0" fill="rgb(241,222,46)" rx="2" ry="2" />
<text  x="216.29" y="623.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3 samples, 0.30%)</title><rect x="171.2" y="725" width="3.5" height="15.0" fill="rgb(232,174,23)" rx="2" ry="2" />
<text  x="174.23" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.10%)</title><rect x="237.8" y="661" width="1.2" height="15.0" fill="rgb(233,182,41)" rx="2" ry="2" />
<text  x="240.82" y="671.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.10%)</title><rect x="233.1" y="229" width="1.2" height="15.0" fill="rgb(229,140,47)" rx="2" ry="2" />
<text  x="236.15" y="239.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="233.1" y="213" width="1.2" height="15.0" fill="rgb(231,228,13)" rx="2" ry="2" />
<text  x="236.15" y="223.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (1 samples, 0.10%)</title><rect x="386.2" y="677" width="1.2" height="15.0" fill="rgb(219,170,14)" rx="2" ry="2" />
<text  x="389.20" y="687.5" ></text>
</g>
<g >
<title>:-1____-1_[000]_334997.118075: (1 samples, 0.10%)</title><rect x="10.0" y="901" width="1.2" height="15.0" fill="rgb(247,136,6)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="949.3" y="821" width="1.2" height="15.0" fill="rgb(234,55,17)" rx="2" ry="2" />
<text  x="952.33" y="831.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.10%)</title><rect x="11.2" y="709" width="1.1" height="15.0" fill="rgb(244,148,30)" rx="2" ry="2" />
<text  x="14.17" y="719.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.40%)</title><rect x="215.6" y="741" width="4.7" height="15.0" fill="rgb(218,112,4)" rx="2" ry="2" />
<text  x="218.62" y="751.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 7.92%)</title><rect x="18.2" y="805" width="93.4" height="15.0" fill="rgb(243,199,22)" rx="2" ry="2" />
<text  x="21.18" y="815.5" >perf_evsel_..</text>
</g>
<g >
<title>fault_dirty_shared_page (1 samples, 0.10%)</title><rect x="173.6" y="597" width="1.1" height="15.0" fill="rgb(216,219,16)" rx="2" ry="2" />
<text  x="176.56" y="607.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.10%)</title><rect x="1075.5" y="805" width="1.2" height="15.0" fill="rgb(247,80,7)" rx="2" ry="2" />
<text  x="1078.50" y="815.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.10%)</title><rect x="112.8" y="501" width="1.2" height="15.0" fill="rgb(216,8,2)" rx="2" ry="2" />
<text  x="115.81" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.10%)</title><rect x="1167.8" y="629" width="1.2" height="15.0" fill="rgb(221,35,49)" rx="2" ry="2" />
<text  x="1170.80" y="639.5" ></text>
</g>
<g >
<title>NaClLogUnlock (2 samples, 0.20%)</title><rect x="704.0" y="805" width="2.3" height="15.0" fill="rgb(217,102,33)" rx="2" ry="2" />
<text  x="706.98" y="815.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="667.8" y="629" width="2.3" height="15.0" fill="rgb(223,25,50)" rx="2" ry="2" />
<text  x="670.76" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::canonicalize (1 samples, 0.10%)</title><rect x="987.9" y="757" width="1.1" height="15.0" fill="rgb(215,24,43)" rx="2" ry="2" />
<text  x="990.88" y="767.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="230.8" y="213" width="1.2" height="15.0" fill="rgb(221,146,43)" rx="2" ry="2" />
<text  x="233.81" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33 samples, 3.27%)</title><rect x="1032.3" y="885" width="38.5" height="15.0" fill="rgb(207,56,12)" rx="2" ry="2" />
<text  x="1035.28" y="895.5" >ent..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.10%)</title><rect x="213.3" y="629" width="1.2" height="15.0" fill="rgb(220,120,46)" rx="2" ry="2" />
<text  x="216.29" y="639.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="223.8" y="165" width="1.2" height="15.0" fill="rgb(231,73,18)" rx="2" ry="2" />
<text  x="226.80" y="175.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.10%)</title><rect x="232.0" y="405" width="1.1" height="15.0" fill="rgb(236,29,31)" rx="2" ry="2" />
<text  x="234.98" y="415.5" ></text>
</g>
<g >
<title>NaClSysFstatDecoder (1 samples, 0.10%)</title><rect x="234.3" y="853" width="1.2" height="15.0" fill="rgb(248,154,43)" rx="2" ry="2" />
<text  x="237.32" y="863.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.10%)</title><rect x="1069.7" y="565" width="1.1" height="15.0" fill="rgb(222,5,36)" rx="2" ry="2" />
<text  x="1072.66" y="575.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.10%)</title><rect x="1069.7" y="597" width="1.1" height="15.0" fill="rgb(231,218,35)" rx="2" ry="2" />
<text  x="1072.66" y="607.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.10%)</title><rect x="663.1" y="645" width="1.2" height="15.0" fill="rgb(212,65,40)" rx="2" ry="2" />
<text  x="666.09" y="655.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.10%)</title><rect x="227.3" y="373" width="1.2" height="15.0" fill="rgb(206,86,49)" rx="2" ry="2" />
<text  x="230.31" y="383.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.10%)</title><rect x="223.8" y="389" width="1.2" height="15.0" fill="rgb(254,208,7)" rx="2" ry="2" />
<text  x="226.80" y="399.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.10%)</title><rect x="114.0" y="517" width="1.1" height="15.0" fill="rgb(238,10,13)" rx="2" ry="2" />
<text  x="116.98" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="230.8" y="277" width="1.2" height="15.0" fill="rgb(207,226,12)" rx="2" ry="2" />
<text  x="233.81" y="287.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (1 samples, 0.10%)</title><rect x="223.8" y="53" width="1.2" height="15.0" fill="rgb(208,47,36)" rx="2" ry="2" />
<text  x="226.80" y="63.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.10%)</title><rect x="1069.7" y="709" width="1.1" height="15.0" fill="rgb(239,138,19)" rx="2" ry="2" />
<text  x="1072.66" y="719.5" ></text>
</g>
<g >
<title>NaClAppThreadDelete (1 samples, 0.10%)</title><rect x="225.0" y="805" width="1.1" height="15.0" fill="rgb(227,28,37)" rx="2" ry="2" />
<text  x="227.97" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="228.5" y="245" width="1.1" height="15.0" fill="rgb(244,187,22)" rx="2" ry="2" />
<text  x="231.48" y="255.5" ></text>
</g>
<g >
<title>_nc_setup_tinfo (1 samples, 0.10%)</title><rect x="14.7" y="693" width="1.1" height="15.0" fill="rgb(236,221,26)" rx="2" ry="2" />
<text  x="17.67" y="703.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (7 samples, 0.69%)</title><rect x="444.6" y="629" width="8.2" height="15.0" fill="rgb(217,58,52)" rx="2" ry="2" />
<text  x="447.61" y="639.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.10%)</title><rect x="1069.7" y="677" width="1.1" height="15.0" fill="rgb(205,201,33)" rx="2" ry="2" />
<text  x="1072.66" y="687.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (2 samples, 0.20%)</title><rect x="409.6" y="693" width="2.3" height="15.0" fill="rgb(222,77,17)" rx="2" ry="2" />
<text  x="412.56" y="703.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.10%)</title><rect x="170.1" y="581" width="1.1" height="15.0" fill="rgb(240,225,1)" rx="2" ry="2" />
<text  x="173.06" y="591.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (2 samples, 0.20%)</title><rect x="901.4" y="661" width="2.4" height="15.0" fill="rgb(217,168,11)" rx="2" ry="2" />
<text  x="904.43" y="671.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.10%)</title><rect x="170.1" y="661" width="1.1" height="15.0" fill="rgb(250,173,7)" rx="2" ry="2" />
<text  x="173.06" y="671.5" ></text>
</g>
<g >
<title>execute_command (2 samples, 0.20%)</title><rect x="13.5" y="821" width="2.3" height="15.0" fill="rgb(209,149,45)" rx="2" ry="2" />
<text  x="16.50" y="831.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (5 samples, 0.50%)</title><rect x="403.7" y="709" width="5.9" height="15.0" fill="rgb(221,144,4)" rx="2" ry="2" />
<text  x="406.72" y="719.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (73 samples, 7.23%)</title><rect x="1076.7" y="789" width="85.3" height="15.0" fill="rgb(253,44,30)" rx="2" ry="2" />
<text  x="1079.67" y="799.5" >cpuidle_en..</text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (8 samples, 0.79%)</title><rect x="875.7" y="693" width="9.4" height="15.0" fill="rgb(252,215,4)" rx="2" ry="2" />
<text  x="878.72" y="703.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.10%)</title><rect x="232.0" y="357" width="1.1" height="15.0" fill="rgb(237,135,30)" rx="2" ry="2" />
<text  x="234.98" y="367.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.10%)</title><rect x="227.3" y="357" width="1.2" height="15.0" fill="rgb(234,28,42)" rx="2" ry="2" />
<text  x="230.31" y="367.5" ></text>
</g>
<g >
<title>get_new_window_size (2 samples, 0.20%)</title><rect x="13.5" y="773" width="2.3" height="15.0" fill="rgb(246,138,44)" rx="2" ry="2" />
<text  x="16.50" y="783.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (1 samples, 0.10%)</title><rect x="390.9" y="645" width="1.1" height="15.0" fill="rgb(209,21,13)" rx="2" ry="2" />
<text  x="393.87" y="655.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.20%)</title><rect x="1079.0" y="741" width="2.3" height="15.0" fill="rgb(248,179,16)" rx="2" ry="2" />
<text  x="1082.01" y="751.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.10%)</title><rect x="213.3" y="709" width="1.2" height="15.0" fill="rgb(246,16,35)" rx="2" ry="2" />
<text  x="216.29" y="719.5" ></text>
</g>
<g >
<title>NaClGetDesc (8 samples, 0.79%)</title><rect x="692.3" y="821" width="9.3" height="15.0" fill="rgb(242,145,0)" rx="2" ry="2" />
<text  x="695.30" y="831.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (3 samples, 0.30%)</title><rect x="950.5" y="757" width="3.5" height="15.0" fill="rgb(225,36,54)" rx="2" ry="2" />
<text  x="953.50" y="767.5" ></text>
</g>
<g >
<title>do_anonymous_page (70 samples, 6.93%)</title><rect x="837.2" y="773" width="81.8" height="15.0" fill="rgb(213,123,24)" rx="2" ry="2" />
<text  x="840.17" y="783.5" >do_anonym..</text>
</g>
<g >
<title>lind_close (2 samples, 0.20%)</title><rect x="222.6" y="725" width="2.4" height="15.0" fill="rgb(234,162,9)" rx="2" ry="2" />
<text  x="225.63" y="735.5" ></text>
</g>
<g >
<title>check_cpu_stall (2 samples, 0.20%)</title><rect x="1163.1" y="533" width="2.4" height="15.0" fill="rgb(250,173,34)" rx="2" ry="2" />
<text  x="1166.13" y="543.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.10%)</title><rect x="223.8" y="101" width="1.2" height="15.0" fill="rgb(250,173,18)" rx="2" ry="2" />
<text  x="226.80" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 7.92%)</title><rect x="18.2" y="773" width="93.4" height="15.0" fill="rgb(211,5,8)" rx="2" ry="2" />
<text  x="21.18" y="783.5" >entry_SYSCA..</text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.10%)</title><rect x="115.1" y="677" width="1.2" height="15.0" fill="rgb(252,78,40)" rx="2" ry="2" />
<text  x="118.15" y="687.5" ></text>
</g>
<g >
<title>NaClSysExecve (4 samples, 0.40%)</title><rect x="220.3" y="837" width="4.7" height="15.0" fill="rgb(251,190,45)" rx="2" ry="2" />
<text  x="223.30" y="847.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (1 samples, 0.10%)</title><rect x="114.0" y="485" width="1.1" height="15.0" fill="rgb(242,133,2)" rx="2" ry="2" />
<text  x="116.98" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.10%)</title><rect x="228.5" y="213" width="1.1" height="15.0" fill="rgb(230,111,6)" rx="2" ry="2" />
<text  x="231.48" y="223.5" ></text>
</g>
<g >
<title>prep_new_page (23 samples, 2.28%)</title><rect x="848.9" y="709" width="26.8" height="15.0" fill="rgb(238,207,49)" rx="2" ry="2" />
<text  x="851.85" y="719.5" >p..</text>
</g>
<g >
<title>wake_up_process (1 samples, 0.10%)</title><rect x="1077.8" y="645" width="1.2" height="15.0" fill="rgb(248,210,15)" rx="2" ry="2" />
<text  x="1080.84" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (2 samples, 0.20%)</title><rect x="679.4" y="709" width="2.4" height="15.0" fill="rgb(237,120,42)" rx="2" ry="2" />
<text  x="682.45" y="719.5" ></text>
</g>
<g >
<title>dispatcher (111 samples, 10.99%)</title><rect x="236.7" y="773" width="129.6" height="15.0" fill="rgb(239,79,51)" rx="2" ry="2" />
<text  x="239.65" y="783.5" >dispatcher</text>
</g>
<g >
<title>update_process_times (1 samples, 0.10%)</title><rect x="511.2" y="485" width="1.2" height="15.0" fill="rgb(250,199,47)" rx="2" ry="2" />
<text  x="514.21" y="495.5" ></text>
</g>
<g >
<title>release_pages (19 samples, 1.88%)</title><rect x="1047.5" y="597" width="22.2" height="15.0" fill="rgb(253,69,46)" rx="2" ry="2" />
<text  x="1050.47" y="607.5" >r..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (1 samples, 0.10%)</title><rect x="229.6" y="357" width="1.2" height="15.0" fill="rgb(226,74,7)" rx="2" ry="2" />
<text  x="232.64" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.10%)</title><rect x="1162.0" y="805" width="1.1" height="15.0" fill="rgb(238,26,25)" rx="2" ry="2" />
<text  x="1164.96" y="815.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (112 samples, 11.09%)</title><rect x="235.5" y="853" width="130.8" height="15.0" fill="rgb(243,193,17)" rx="2" ry="2" />
<text  x="238.49" y="863.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>NaClMutexLock (1 samples, 0.10%)</title><rect x="702.8" y="773" width="1.2" height="15.0" fill="rgb(205,180,16)" rx="2" ry="2" />
<text  x="705.81" y="783.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (4 samples, 0.40%)</title><rect x="227.3" y="597" width="4.7" height="15.0" fill="rgb(207,87,24)" rx="2" ry="2" />
<text  x="230.31" y="607.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.10%)</title><rect x="670.1" y="645" width="1.2" height="15.0" fill="rgb(240,36,44)" rx="2" ry="2" />
<text  x="673.10" y="655.5" ></text>
</g>
<g >
<title>sync_regs (15 samples, 1.49%)</title><rect x="929.5" y="869" width="17.5" height="15.0" fill="rgb(229,4,37)" rx="2" ry="2" />
<text  x="932.47" y="879.5" ></text>
</g>
<g >
<title>NaClDescUnmapUnsafe (1 samples, 0.10%)</title><rect x="170.1" y="773" width="1.1" height="15.0" fill="rgb(244,135,26)" rx="2" ry="2" />
<text  x="173.06" y="783.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (4 samples, 0.40%)</title><rect x="395.5" y="645" width="4.7" height="15.0" fill="rgb(222,212,19)" rx="2" ry="2" />
<text  x="398.54" y="655.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.10%)</title><rect x="17.0" y="741" width="1.2" height="15.0" fill="rgb(217,31,33)" rx="2" ry="2" />
<text  x="20.01" y="751.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.10%)</title><rect x="172.4" y="581" width="1.2" height="15.0" fill="rgb(205,113,17)" rx="2" ry="2" />
<text  x="175.40" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (4 samples, 0.40%)</title><rect x="380.4" y="757" width="4.6" height="15.0" fill="rgb(209,161,51)" rx="2" ry="2" />
<text  x="383.36" y="767.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (1 samples, 0.10%)</title><rect x="233.1" y="629" width="1.2" height="15.0" fill="rgb(235,155,30)" rx="2" ry="2" />
<text  x="236.15" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.10%)</title><rect x="677.1" y="661" width="1.2" height="15.0" fill="rgb(240,204,23)" rx="2" ry="2" />
<text  x="680.11" y="671.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.10%)</title><rect x="1169.0" y="645" width="1.1" height="15.0" fill="rgb(224,219,6)" rx="2" ry="2" />
<text  x="1171.97" y="655.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.10%)</title><rect x="213.3" y="661" width="1.2" height="15.0" fill="rgb(236,134,2)" rx="2" ry="2" />
<text  x="216.29" y="671.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.10%)</title><rect x="233.1" y="501" width="1.2" height="15.0" fill="rgb(244,111,43)" rx="2" ry="2" />
<text  x="236.15" y="511.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (4 samples, 0.40%)</title><rect x="227.3" y="581" width="4.7" height="15.0" fill="rgb(245,127,16)" rx="2" ry="2" />
<text  x="230.31" y="591.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (34 samples, 3.37%)</title><rect x="174.7" y="789" width="39.8" height="15.0" fill="rgb(247,140,32)" rx="2" ry="2" />
<text  x="177.73" y="799.5" >App..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (96 samples, 9.50%)</title><rect x="253.0" y="645" width="112.2" height="15.0" fill="rgb(241,139,54)" rx="2" ry="2" />
<text  x="256.01" y="655.5" >core::intrins..</text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.10%)</title><rect x="222.6" y="453" width="1.2" height="15.0" fill="rgb(223,214,34)" rx="2" ry="2" />
<text  x="225.63" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.30%)</title><rect x="1077.8" y="773" width="3.5" height="15.0" fill="rgb(216,18,54)" rx="2" ry="2" />
<text  x="1080.84" y="783.5" ></text>
</g>
<g >
<title>Rel8Operand (1 samples, 0.10%)</title><rect x="212.1" y="757" width="1.2" height="15.0" fill="rgb(215,86,34)" rx="2" ry="2" />
<text  x="215.12" y="767.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.10%)</title><rect x="1186.5" y="629" width="1.2" height="15.0" fill="rgb(212,142,43)" rx="2" ry="2" />
<text  x="1189.50" y="639.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (1 samples, 0.10%)</title><rect x="232.0" y="341" width="1.1" height="15.0" fill="rgb(229,122,46)" rx="2" ry="2" />
<text  x="234.98" y="351.5" ></text>
</g>
<g >
<title>NaClValidateCode (3 samples, 0.30%)</title><rect x="950.5" y="789" width="3.5" height="15.0" fill="rgb(218,26,27)" rx="2" ry="2" />
<text  x="953.50" y="799.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.10%)</title><rect x="986.7" y="741" width="1.2" height="15.0" fill="rgb(208,115,7)" rx="2" ry="2" />
<text  x="989.71" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.20%)</title><rect x="112.8" y="709" width="2.3" height="15.0" fill="rgb(251,149,10)" rx="2" ry="2" />
<text  x="115.81" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (3 samples, 0.30%)</title><rect x="387.4" y="677" width="3.5" height="15.0" fill="rgb(231,11,42)" rx="2" ry="2" />
<text  x="390.37" y="687.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.10%)</title><rect x="512.4" y="469" width="1.1" height="15.0" fill="rgb(215,99,37)" rx="2" ry="2" />
<text  x="515.38" y="479.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.10%)</title><rect x="226.1" y="581" width="1.2" height="15.0" fill="rgb(215,100,1)" rx="2" ry="2" />
<text  x="229.14" y="591.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (20 samples, 1.98%)</title><rect x="1046.3" y="629" width="23.4" height="15.0" fill="rgb(205,108,0)" rx="2" ry="2" />
<text  x="1049.30" y="639.5" >t..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.10%)</title><rect x="223.8" y="133" width="1.2" height="15.0" fill="rgb(234,47,47)" rx="2" ry="2" />
<text  x="226.80" y="143.5" ></text>
</g>
<g >
<title>__activate_page.part.0 (1 samples, 0.10%)</title><rect x="1041.6" y="565" width="1.2" height="15.0" fill="rgb(251,33,29)" rx="2" ry="2" />
<text  x="1044.62" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.10%)</title><rect x="233.1" y="101" width="1.2" height="15.0" fill="rgb(213,183,53)" rx="2" ry="2" />
<text  x="236.15" y="111.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.10%)</title><rect x="170.1" y="597" width="1.1" height="15.0" fill="rgb(250,196,0)" rx="2" ry="2" />
<text  x="173.06" y="607.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (4 samples, 0.40%)</title><rect x="227.3" y="533" width="4.7" height="15.0" fill="rgb(230,119,42)" rx="2" ry="2" />
<text  x="230.31" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (2 samples, 0.20%)</title><rect x="222.6" y="645" width="2.4" height="15.0" fill="rgb(249,61,53)" rx="2" ry="2" />
<text  x="225.63" y="655.5" ></text>
</g>
<g >
<title>_perf_event_enable (71 samples, 7.03%)</title><rect x="28.7" y="677" width="82.9" height="15.0" fill="rgb(231,169,6)" rx="2" ry="2" />
<text  x="31.69" y="687.5" >_perf_eve..</text>
</g>
<g >
<title>std::io::Read::read_to_string (1 samples, 0.10%)</title><rect x="989.0" y="757" width="1.2" height="15.0" fill="rgb(220,98,15)" rx="2" ry="2" />
<text  x="992.05" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (1 samples, 0.10%)</title><rect x="222.6" y="597" width="1.2" height="15.0" fill="rgb(214,49,26)" rx="2" ry="2" />
<text  x="225.63" y="607.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="511.2" y="581" width="1.2" height="15.0" fill="rgb(248,173,5)" rx="2" ry="2" />
<text  x="514.21" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (225 samples, 22.28%)</title><rect x="400.2" y="725" width="262.9" height="15.0" fill="rgb(254,171,44)" rx="2" ry="2" />
<text  x="403.22" y="735.5" >rustposix::interface::pipe::Emulate..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.10%)</title><rect x="223.8" y="581" width="1.2" height="15.0" fill="rgb(227,165,11)" rx="2" ry="2" />
<text  x="226.80" y="591.5" ></text>
</g>
<g >
<title>copy_page (1 samples, 0.10%)</title><rect x="15.8" y="693" width="1.2" height="15.0" fill="rgb(208,176,21)" rx="2" ry="2" />
<text  x="18.84" y="703.5" ></text>
</g>
<g >
<title>tick_sched_handle (4 samples, 0.40%)</title><rect x="1163.1" y="581" width="4.7" height="15.0" fill="rgb(250,201,21)" rx="2" ry="2" />
<text  x="1166.13" y="591.5" ></text>
</g>
<g >
<title>do_iter_write (2 samples, 0.20%)</title><rect x="112.8" y="597" width="2.3" height="15.0" fill="rgb(215,105,15)" rx="2" ry="2" />
<text  x="115.81" y="607.5" ></text>
</g>
<g >
<title>HandleStackContext (6 samples, 0.59%)</title><rect x="152.5" y="853" width="7.0" height="15.0" fill="rgb(215,3,40)" rx="2" ry="2" />
<text  x="155.53" y="863.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.10%)</title><rect x="215.6" y="645" width="1.2" height="15.0" fill="rgb(222,180,19)" rx="2" ry="2" />
<text  x="218.62" y="655.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.10%)</title><rect x="222.6" y="261" width="1.2" height="15.0" fill="rgb(213,202,22)" rx="2" ry="2" />
<text  x="225.63" y="271.5" ></text>
</g>
<g >
<title>process_vm_rw (2 samples, 0.20%)</title><rect x="947.0" y="773" width="2.3" height="15.0" fill="rgb(243,183,39)" rx="2" ry="2" />
<text  x="949.99" y="783.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (3 samples, 0.30%)</title><rect x="243.7" y="677" width="3.5" height="15.0" fill="rgb(207,192,37)" rx="2" ry="2" />
<text  x="246.66" y="687.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (5 samples, 0.50%)</title><rect x="1163.1" y="645" width="5.9" height="15.0" fill="rgb(228,153,25)" rx="2" ry="2" />
<text  x="1166.13" y="655.5" ></text>
</g>
<g >
<title>record__write (2 samples, 0.20%)</title><rect x="112.8" y="773" width="2.3" height="15.0" fill="rgb(232,57,50)" rx="2" ry="2" />
<text  x="115.81" y="783.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.10%)</title><rect x="1080.2" y="645" width="1.1" height="15.0" fill="rgb(235,52,33)" rx="2" ry="2" />
<text  x="1083.18" y="655.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (114 samples, 11.29%)</title><rect x="529.9" y="677" width="133.2" height="15.0" fill="rgb(238,56,38)" rx="2" ry="2" />
<text  x="532.90" y="687.5" >ringbuf::ring_bu..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.20%)</title><rect x="954.0" y="869" width="2.3" height="15.0" fill="rgb(230,187,13)" rx="2" ry="2" />
<text  x="957.00" y="879.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (4 samples, 0.40%)</title><rect x="679.4" y="741" width="4.7" height="15.0" fill="rgb(228,97,4)" rx="2" ry="2" />
<text  x="682.45" y="751.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.30%)</title><rect x="171.2" y="693" width="3.5" height="15.0" fill="rgb(249,30,45)" rx="2" ry="2" />
<text  x="174.23" y="703.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (2 samples, 0.20%)</title><rect x="216.8" y="693" width="2.3" height="15.0" fill="rgb(210,195,11)" rx="2" ry="2" />
<text  x="219.79" y="703.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.10%)</title><rect x="206.3" y="629" width="1.1" height="15.0" fill="rgb(247,4,31)" rx="2" ry="2" />
<text  x="209.28" y="639.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.10%)</title><rect x="986.7" y="821" width="1.2" height="15.0" fill="rgb(217,159,40)" rx="2" ry="2" />
<text  x="989.71" y="831.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="986.7" y="789" width="1.2" height="15.0" fill="rgb(254,3,21)" rx="2" ry="2" />
<text  x="989.71" y="799.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.10%)</title><rect x="948.2" y="629" width="1.1" height="15.0" fill="rgb(248,84,8)" rx="2" ry="2" />
<text  x="951.16" y="639.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.10%)</title><rect x="511.2" y="517" width="1.2" height="15.0" fill="rgb(220,143,9)" rx="2" ry="2" />
<text  x="514.21" y="527.5" ></text>
</g>
<g >
<title>NaClHostDescRead (112 samples, 11.09%)</title><rect x="235.5" y="805" width="130.8" height="15.0" fill="rgb(235,36,46)" rx="2" ry="2" />
<text  x="238.49" y="815.5" >NaClHostDescRead</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.10%)</title><rect x="15.8" y="789" width="1.2" height="15.0" fill="rgb(215,173,32)" rx="2" ry="2" />
<text  x="18.84" y="799.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="206.3" y="693" width="1.1" height="15.0" fill="rgb(246,114,11)" rx="2" ry="2" />
<text  x="209.28" y="703.5" ></text>
</g>
<g >
<title>__run_hrtimer (4 samples, 0.40%)</title><rect x="1163.1" y="613" width="4.7" height="15.0" fill="rgb(219,215,43)" rx="2" ry="2" />
<text  x="1166.13" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.10%)</title><rect x="385.0" y="709" width="1.2" height="15.0" fill="rgb(249,139,35)" rx="2" ry="2" />
<text  x="388.03" y="719.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (47 samples, 4.65%)</title><rect x="165.4" y="853" width="54.9" height="15.0" fill="rgb(243,154,9)" rx="2" ry="2" />
<text  x="168.39" y="863.5" >NaClS..</text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.10%)</title><rect x="206.3" y="581" width="1.1" height="15.0" fill="rgb(222,129,47)" rx="2" ry="2" />
<text  x="209.28" y="591.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 1.29%)</title><rect x="956.3" y="869" width="15.2" height="15.0" fill="rgb(242,123,39)" rx="2" ry="2" />
<text  x="959.34" y="879.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.10%)</title><rect x="11.2" y="853" width="1.1" height="15.0" fill="rgb(213,161,40)" rx="2" ry="2" />
<text  x="14.17" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.10%)</title><rect x="232.0" y="533" width="1.1" height="15.0" fill="rgb(217,102,38)" rx="2" ry="2" />
<text  x="234.98" y="543.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.10%)</title><rect x="112.8" y="485" width="1.2" height="15.0" fill="rgb(210,47,16)" rx="2" ry="2" />
<text  x="115.81" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="229.6" y="261" width="1.2" height="15.0" fill="rgb(246,222,46)" rx="2" ry="2" />
<text  x="232.64" y="271.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.10%)</title><rect x="173.6" y="581" width="1.1" height="15.0" fill="rgb(237,190,51)" rx="2" ry="2" />
<text  x="176.56" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="10.0" y="869" width="1.2" height="15.0" fill="rgb(230,4,14)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.10%)</title><rect x="232.0" y="421" width="1.1" height="15.0" fill="rgb(246,188,19)" rx="2" ry="2" />
<text  x="234.98" y="431.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.10%)</title><rect x="239.0" y="645" width="1.2" height="15.0" fill="rgb(227,44,9)" rx="2" ry="2" />
<text  x="241.99" y="655.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.10%)</title><rect x="219.1" y="677" width="1.2" height="15.0" fill="rgb(225,81,1)" rx="2" ry="2" />
<text  x="222.13" y="687.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.10%)</title><rect x="11.2" y="757" width="1.1" height="15.0" fill="rgb(227,92,17)" rx="2" ry="2" />
<text  x="14.17" y="767.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.10%)</title><rect x="990.2" y="805" width="1.2" height="15.0" fill="rgb(213,158,13)" rx="2" ry="2" />
<text  x="993.22" y="815.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.20%)</title><rect x="1073.2" y="741" width="2.3" height="15.0" fill="rgb(248,18,28)" rx="2" ry="2" />
<text  x="1076.17" y="751.5" ></text>
</g>
<g >
<title>ksys_write (2 samples, 0.20%)</title><rect x="112.8" y="677" width="2.3" height="15.0" fill="rgb(241,153,45)" rx="2" ry="2" />
<text  x="115.81" y="687.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.10%)</title><rect x="11.2" y="725" width="1.1" height="15.0" fill="rgb(225,102,25)" rx="2" ry="2" />
<text  x="14.17" y="735.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="227.3" y="389" width="1.2" height="15.0" fill="rgb(229,203,24)" rx="2" ry="2" />
<text  x="230.31" y="399.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.10%)</title><rect x="511.2" y="533" width="1.2" height="15.0" fill="rgb(233,96,40)" rx="2" ry="2" />
<text  x="514.21" y="543.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.10%)</title><rect x="233.1" y="341" width="1.2" height="15.0" fill="rgb(218,23,51)" rx="2" ry="2" />
<text  x="236.15" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (1 samples, 0.10%)</title><rect x="989.0" y="661" width="1.2" height="15.0" fill="rgb(232,176,37)" rx="2" ry="2" />
<text  x="992.05" y="671.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (3 samples, 0.30%)</title><rect x="221.5" y="805" width="3.5" height="15.0" fill="rgb(247,203,50)" rx="2" ry="2" />
<text  x="224.47" y="815.5" ></text>
</g>
<g >
<title>dispatcher (262 samples, 25.94%)</title><rect x="378.0" y="773" width="306.1" height="15.0" fill="rgb(229,191,10)" rx="2" ry="2" />
<text  x="381.02" y="783.5" >dispatcher</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="213.3" y="725" width="1.2" height="15.0" fill="rgb(225,136,50)" rx="2" ry="2" />
<text  x="216.29" y="735.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="213.3" y="757" width="1.2" height="15.0" fill="rgb(244,3,22)" rx="2" ry="2" />
<text  x="216.29" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="10.0" y="885" width="1.2" height="15.0" fill="rgb(247,139,12)" rx="2" ry="2" />
<text  x="13.00" y="895.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.10%)</title><rect x="1077.8" y="661" width="1.2" height="15.0" fill="rgb(238,51,11)" rx="2" ry="2" />
<text  x="1080.84" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="221.5" y="677" width="1.1" height="15.0" fill="rgb(224,95,44)" rx="2" ry="2" />
<text  x="224.47" y="687.5" ></text>
</g>
<g >
<title>do_shared_fault (1 samples, 0.10%)</title><rect x="948.2" y="613" width="1.1" height="15.0" fill="rgb(220,130,53)" rx="2" ry="2" />
<text  x="951.16" y="623.5" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 0.10%)</title><rect x="111.6" y="645" width="1.2" height="15.0" fill="rgb(245,77,45)" rx="2" ry="2" />
<text  x="114.64" y="655.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.10%)</title><rect x="223.8" y="181" width="1.2" height="15.0" fill="rgb(222,107,39)" rx="2" ry="2" />
<text  x="226.80" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.10%)</title><rect x="17.0" y="853" width="1.2" height="15.0" fill="rgb(250,105,33)" rx="2" ry="2" />
<text  x="20.01" y="863.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.40%)</title><rect x="227.3" y="437" width="4.7" height="15.0" fill="rgb(251,155,54)" rx="2" ry="2" />
<text  x="230.31" y="447.5" ></text>
</g>
<g >
<title>smp_call_function_single (68 samples, 6.73%)</title><rect x="32.2" y="645" width="79.4" height="15.0" fill="rgb(220,5,30)" rx="2" ry="2" />
<text  x="35.20" y="655.5" >smp_call_..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.10%)</title><rect x="229.6" y="309" width="1.2" height="15.0" fill="rgb(243,183,16)" rx="2" ry="2" />
<text  x="232.64" y="319.5" ></text>
</g>
<g >
<title>NaClDescIoDescPRead (1 samples, 0.10%)</title><rect x="232.0" y="741" width="1.1" height="15.0" fill="rgb(215,37,36)" rx="2" ry="2" />
<text  x="234.98" y="751.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (4 samples, 0.40%)</title><rect x="395.5" y="661" width="4.7" height="15.0" fill="rgb(215,123,23)" rx="2" ry="2" />
<text  x="398.54" y="671.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (97 samples, 9.60%)</title><rect x="1076.7" y="885" width="113.3" height="15.0" fill="rgb(207,39,41)" rx="2" ry="2" />
<text  x="1079.67" y="895.5" >secondary_star..</text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.10%)</title><rect x="1080.2" y="661" width="1.1" height="15.0" fill="rgb(205,225,46)" rx="2" ry="2" />
<text  x="1083.18" y="671.5" ></text>
</g>
<g >
<title>clear_page_erms (22 samples, 2.18%)</title><rect x="850.0" y="693" width="25.7" height="15.0" fill="rgb(231,187,48)" rx="2" ry="2" />
<text  x="853.02" y="703.5" >c..</text>
</g>
<g >
<title>number (1 samples, 0.10%)</title><rect x="111.6" y="533" width="1.2" height="15.0" fill="rgb(244,14,38)" rx="2" ry="2" />
<text  x="114.64" y="543.5" ></text>
</g>
<g >
<title>__switch_to_asm (1 samples, 0.10%)</title><rect x="1070.8" y="885" width="1.2" height="15.0" fill="rgb(245,77,16)" rx="2" ry="2" />
<text  x="1073.83" y="895.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.10%)</title><rect x="1188.8" y="757" width="1.2" height="15.0" fill="rgb(217,47,46)" rx="2" ry="2" />
<text  x="1191.83" y="767.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (252 samples, 24.95%)</title><rect x="385.0" y="757" width="294.4" height="15.0" fill="rgb(250,218,38)" rx="2" ry="2" />
<text  x="388.03" y="767.5" >rustposix::safeposix::dispatcher::dispa..</text>
</g>
<g >
<title>NaClDescIoDescRead (112 samples, 11.09%)</title><rect x="235.5" y="821" width="130.8" height="15.0" fill="rgb(247,85,53)" rx="2" ry="2" />
<text  x="238.49" y="831.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>__calc_delta (1 samples, 0.10%)</title><rect x="1074.3" y="693" width="1.2" height="15.0" fill="rgb(230,31,22)" rx="2" ry="2" />
<text  x="1077.34" y="703.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (73 samples, 7.23%)</title><rect x="1076.7" y="821" width="85.3" height="15.0" fill="rgb(213,216,46)" rx="2" ry="2" />
<text  x="1079.67" y="831.5" >cpuidle_id..</text>
</g>
<g >
<title>do_task_dead (1 samples, 0.10%)</title><rect x="10.0" y="741" width="1.2" height="15.0" fill="rgb(227,148,49)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (8 samples, 0.79%)</title><rect x="411.9" y="661" width="9.3" height="15.0" fill="rgb(249,121,45)" rx="2" ry="2" />
<text  x="414.90" y="671.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.10%)</title><rect x="948.2" y="501" width="1.1" height="15.0" fill="rgb(249,115,1)" rx="2" ry="2" />
<text  x="951.16" y="511.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="233.1" y="309" width="1.2" height="15.0" fill="rgb(206,206,48)" rx="2" ry="2" />
<text  x="236.15" y="319.5" ></text>
</g>
<g >
<title>rmqueue (8 samples, 0.79%)</title><rect x="875.7" y="709" width="9.4" height="15.0" fill="rgb(254,228,36)" rx="2" ry="2" />
<text  x="878.72" y="719.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.10%)</title><rect x="116.3" y="869" width="1.2" height="15.0" fill="rgb(217,124,3)" rx="2" ry="2" />
<text  x="119.32" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_write (2 samples, 0.20%)</title><rect x="112.8" y="693" width="2.3" height="15.0" fill="rgb(240,165,4)" rx="2" ry="2" />
<text  x="115.81" y="703.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.10%)</title><rect x="949.3" y="661" width="1.2" height="15.0" fill="rgb(226,69,13)" rx="2" ry="2" />
<text  x="952.33" y="671.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.10%)</title><rect x="948.2" y="645" width="1.1" height="15.0" fill="rgb(226,138,17)" rx="2" ry="2" />
<text  x="951.16" y="655.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.10%)</title><rect x="919.0" y="821" width="1.1" height="15.0" fill="rgb(216,153,31)" rx="2" ry="2" />
<text  x="921.95" y="831.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.10%)</title><rect x="233.1" y="197" width="1.2" height="15.0" fill="rgb(221,67,34)" rx="2" ry="2" />
<text  x="236.15" y="207.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (1 samples, 0.10%)</title><rect x="223.8" y="325" width="1.2" height="15.0" fill="rgb(246,88,1)" rx="2" ry="2" />
<text  x="226.80" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.20%)</title><rect x="947.0" y="805" width="2.3" height="15.0" fill="rgb(220,128,12)" rx="2" ry="2" />
<text  x="949.99" y="815.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.10%)</title><rect x="949.3" y="789" width="1.2" height="15.0" fill="rgb(250,142,2)" rx="2" ry="2" />
<text  x="952.33" y="799.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.10%)</title><rect x="892.1" y="757" width="1.1" height="15.0" fill="rgb(252,204,7)" rx="2" ry="2" />
<text  x="895.08" y="767.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.10%)</title><rect x="989.0" y="581" width="1.2" height="15.0" fill="rgb(254,65,52)" rx="2" ry="2" />
<text  x="992.05" y="591.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="667.8" y="645" width="2.3" height="15.0" fill="rgb(244,110,50)" rx="2" ry="2" />
<text  x="670.76" y="655.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 0.30%)</title><rect x="1170.1" y="645" width="3.5" height="15.0" fill="rgb(250,118,25)" rx="2" ry="2" />
<text  x="1173.14" y="655.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (43 samples, 4.26%)</title><rect x="463.3" y="645" width="50.2" height="15.0" fill="rgb(218,192,20)" rx="2" ry="2" />
<text  x="466.31" y="655.5" >core:..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.10%)</title><rect x="230.8" y="293" width="1.2" height="15.0" fill="rgb(242,188,25)" rx="2" ry="2" />
<text  x="233.81" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (83 samples, 8.22%)</title><rect x="822.0" y="805" width="97.0" height="15.0" fill="rgb(216,140,22)" rx="2" ry="2" />
<text  x="824.98" y="815.5" >__handle_mm..</text>
</g>
<g >
<title>NaClFastMutexLock (3 samples, 0.30%)</title><rect x="685.3" y="789" width="3.5" height="15.0" fill="rgb(244,73,23)" rx="2" ry="2" />
<text  x="688.29" y="799.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (6 samples, 0.59%)</title><rect x="240.2" y="693" width="7.0" height="15.0" fill="rgb(254,70,36)" rx="2" ry="2" />
<text  x="243.16" y="703.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.10%)</title><rect x="112.8" y="453" width="1.2" height="15.0" fill="rgb(216,45,32)" rx="2" ry="2" />
<text  x="115.81" y="463.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (6 samples, 0.59%)</title><rect x="513.5" y="661" width="7.1" height="15.0" fill="rgb(217,72,54)" rx="2" ry="2" />
<text  x="516.54" y="671.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.10%)</title><rect x="226.1" y="501" width="1.2" height="15.0" fill="rgb(243,176,25)" rx="2" ry="2" />
<text  x="229.14" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="226.1" y="629" width="1.2" height="15.0" fill="rgb(245,0,10)" rx="2" ry="2" />
<text  x="229.14" y="639.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.10%)</title><rect x="111.6" y="773" width="1.2" height="15.0" fill="rgb(216,164,50)" rx="2" ry="2" />
<text  x="114.64" y="783.5" ></text>
</g>
<g >
<title>mmput (32 samples, 3.17%)</title><rect x="1032.3" y="725" width="37.4" height="15.0" fill="rgb(247,77,2)" rx="2" ry="2" />
<text  x="1035.28" y="735.5" >mmput</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (5 samples, 0.50%)</title><rect x="394.4" y="725" width="5.8" height="15.0" fill="rgb(216,212,35)" rx="2" ry="2" />
<text  x="397.38" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.10%)</title><rect x="233.1" y="677" width="1.2" height="15.0" fill="rgb(243,138,32)" rx="2" ry="2" />
<text  x="236.15" y="687.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (2 samples, 0.20%)</title><rect x="112.8" y="549" width="2.3" height="15.0" fill="rgb(214,209,22)" rx="2" ry="2" />
<text  x="115.81" y="559.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.10%)</title><rect x="511.2" y="437" width="1.2" height="15.0" fill="rgb(216,24,25)" rx="2" ry="2" />
<text  x="514.21" y="447.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.20%)</title><rect x="13.5" y="805" width="2.3" height="15.0" fill="rgb(241,11,3)" rx="2" ry="2" />
<text  x="16.50" y="815.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.20%)</title><rect x="409.6" y="677" width="2.3" height="15.0" fill="rgb(217,185,0)" rx="2" ry="2" />
<text  x="412.56" y="687.5" ></text>
</g>
<g >
<title>NaClValidateCode (34 samples, 3.37%)</title><rect x="174.7" y="805" width="39.8" height="15.0" fill="rgb(231,153,40)" rx="2" ry="2" />
<text  x="177.73" y="815.5" >NaC..</text>
</g>
<g >
<title>activate_page (1 samples, 0.10%)</title><rect x="1041.6" y="613" width="1.2" height="15.0" fill="rgb(218,150,26)" rx="2" ry="2" />
<text  x="1044.62" y="623.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.10%)</title><rect x="213.3" y="693" width="1.2" height="15.0" fill="rgb(245,175,30)" rx="2" ry="2" />
<text  x="216.29" y="703.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.10%)</title><rect x="948.2" y="597" width="1.1" height="15.0" fill="rgb(229,228,35)" rx="2" ry="2" />
<text  x="951.16" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (3 samples, 0.30%)</title><rect x="390.9" y="677" width="3.5" height="15.0" fill="rgb(244,205,2)" rx="2" ry="2" />
<text  x="393.87" y="687.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.10%)</title><rect x="670.1" y="629" width="1.2" height="15.0" fill="rgb(218,181,45)" rx="2" ry="2" />
<text  x="673.10" y="639.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (2 samples, 0.20%)</title><rect x="692.3" y="805" width="2.3" height="15.0" fill="rgb(213,40,5)" rx="2" ry="2" />
<text  x="695.30" y="815.5" ></text>
</g>
<g >
<title>__GI_munmap (1 samples, 0.10%)</title><rect x="225.0" y="773" width="1.1" height="15.0" fill="rgb(253,170,14)" rx="2" ry="2" />
<text  x="227.97" y="783.5" ></text>
</g>
<g >
<title>pointer (1 samples, 0.10%)</title><rect x="111.6" y="565" width="1.2" height="15.0" fill="rgb(205,126,38)" rx="2" ry="2" />
<text  x="114.64" y="575.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.10%)</title><rect x="706.3" y="821" width="1.2" height="15.0" fill="rgb(253,178,49)" rx="2" ry="2" />
<text  x="709.32" y="831.5" ></text>
</g>
<g >
<title>exc_page_fault (93 samples, 9.21%)</title><rect x="813.8" y="853" width="108.7" height="15.0" fill="rgb(238,120,3)" rx="2" ry="2" />
<text  x="816.80" y="863.5" >exc_page_fault</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (5 samples, 0.50%)</title><rect x="671.3" y="693" width="5.8" height="15.0" fill="rgb(251,229,43)" rx="2" ry="2" />
<text  x="674.27" y="703.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (1 samples, 0.10%)</title><rect x="233.1" y="565" width="1.2" height="15.0" fill="rgb(223,122,16)" rx="2" ry="2" />
<text  x="236.15" y="575.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="223.8" y="533" width="1.2" height="15.0" fill="rgb(205,148,8)" rx="2" ry="2" />
<text  x="226.80" y="543.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.10%)</title><rect x="239.0" y="661" width="1.2" height="15.0" fill="rgb(252,142,30)" rx="2" ry="2" />
<text  x="241.99" y="671.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (1 samples, 0.10%)</title><rect x="226.1" y="677" width="1.2" height="15.0" fill="rgb(212,226,4)" rx="2" ry="2" />
<text  x="229.14" y="687.5" ></text>
</g>
<g >
<title>:-1____-1_[010]_334997.118074: (1 samples, 0.10%)</title><rect x="11.2" y="901" width="1.1" height="15.0" fill="rgb(223,122,7)" rx="2" ry="2" />
<text  x="14.17" y="911.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.10%)</title><rect x="390.9" y="661" width="1.1" height="15.0" fill="rgb(207,81,14)" rx="2" ry="2" />
<text  x="393.87" y="671.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (5 samples, 0.50%)</title><rect x="979.7" y="869" width="5.8" height="15.0" fill="rgb(246,207,39)" rx="2" ry="2" />
<text  x="982.70" y="879.5" ></text>
</g>
<g >
<title>tick_irq_enter (1 samples, 0.10%)</title><rect x="1169.0" y="661" width="1.1" height="15.0" fill="rgb(233,189,17)" rx="2" ry="2" />
<text  x="1171.97" y="671.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.10%)</title><rect x="115.1" y="757" width="1.2" height="15.0" fill="rgb(206,228,11)" rx="2" ry="2" />
<text  x="118.15" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.10%)</title><rect x="989.0" y="597" width="1.2" height="15.0" fill="rgb(241,180,34)" rx="2" ry="2" />
<text  x="992.05" y="607.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.10%)</title><rect x="114.0" y="469" width="1.1" height="15.0" fill="rgb(205,227,4)" rx="2" ry="2" />
<text  x="116.98" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.30%)</title><rect x="1072.0" y="869" width="3.5" height="15.0" fill="rgb(247,226,22)" rx="2" ry="2" />
<text  x="1075.00" y="879.5" ></text>
</g>
<g >
<title>perf_mmap_fault (1 samples, 0.10%)</title><rect x="112.8" y="373" width="1.2" height="15.0" fill="rgb(222,227,8)" rx="2" ry="2" />
<text  x="115.81" y="383.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (7 samples, 0.69%)</title><rect x="684.1" y="805" width="8.2" height="15.0" fill="rgb(236,124,27)" rx="2" ry="2" />
<text  x="687.12" y="815.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.10%)</title><rect x="1075.5" y="869" width="1.2" height="15.0" fill="rgb(226,198,39)" rx="2" ry="2" />
<text  x="1078.50" y="879.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (1 samples, 0.10%)</title><rect x="228.5" y="293" width="1.1" height="15.0" fill="rgb(252,7,48)" rx="2" ry="2" />
<text  x="231.48" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (5 samples, 0.50%)</title><rect x="247.2" y="661" width="5.8" height="15.0" fill="rgb(217,199,39)" rx="2" ry="2" />
<text  x="250.17" y="671.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (119 samples, 11.78%)</title><rect x="524.1" y="709" width="139.0" height="15.0" fill="rgb(231,218,44)" rx="2" ry="2" />
<text  x="527.06" y="719.5" >ringbuf::producer..</text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.10%)</title><rect x="1186.5" y="677" width="1.2" height="15.0" fill="rgb(229,92,27)" rx="2" ry="2" />
<text  x="1189.50" y="687.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.10%)</title><rect x="670.1" y="581" width="1.2" height="15.0" fill="rgb(217,19,10)" rx="2" ry="2" />
<text  x="673.10" y="591.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (2 samples, 0.20%)</title><rect x="947.0" y="853" width="2.3" height="15.0" fill="rgb(219,121,51)" rx="2" ry="2" />
<text  x="949.99" y="863.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="115.1" y="869" width="1.2" height="15.0" fill="rgb(238,180,20)" rx="2" ry="2" />
<text  x="118.15" y="879.5" ></text>
</g>
<g >
<title>_start (3 samples, 0.30%)</title><rect x="987.9" y="885" width="3.5" height="15.0" fill="rgb(249,39,26)" rx="2" ry="2" />
<text  x="990.88" y="895.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1 samples, 0.10%)</title><rect x="670.1" y="549" width="1.2" height="15.0" fill="rgb(251,101,24)" rx="2" ry="2" />
<text  x="673.10" y="559.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (36 samples, 3.56%)</title><rect x="843.0" y="741" width="42.1" height="15.0" fill="rgb(250,98,42)" rx="2" ry="2" />
<text  x="846.01" y="751.5" >__a..</text>
</g>
<g >
<title>dispatcher (1 samples, 0.10%)</title><rect x="233.1" y="709" width="1.2" height="15.0" fill="rgb(205,58,13)" rx="2" ry="2" />
<text  x="236.15" y="719.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.10%)</title><rect x="222.6" y="373" width="1.2" height="15.0" fill="rgb(221,185,38)" rx="2" ry="2" />
<text  x="225.63" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.10%)</title><rect x="10.0" y="661" width="1.2" height="15.0" fill="rgb(226,208,12)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="15.8" y="741" width="1.2" height="15.0" fill="rgb(250,40,52)" rx="2" ry="2" />
<text  x="18.84" y="751.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (4 samples, 0.40%)</title><rect x="899.1" y="693" width="4.7" height="15.0" fill="rgb(244,187,46)" rx="2" ry="2" />
<text  x="902.09" y="703.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.10%)</title><rect x="986.7" y="677" width="1.2" height="15.0" fill="rgb(225,91,9)" rx="2" ry="2" />
<text  x="989.71" y="687.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (3 samples, 0.30%)</title><rect x="228.5" y="421" width="3.5" height="15.0" fill="rgb(214,113,6)" rx="2" ry="2" />
<text  x="231.48" y="431.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (6 samples, 0.59%)</title><rect x="240.2" y="709" width="7.0" height="15.0" fill="rgb(249,161,1)" rx="2" ry="2" />
<text  x="243.16" y="719.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.10%)</title><rect x="115.1" y="693" width="1.2" height="15.0" fill="rgb(235,223,18)" rx="2" ry="2" />
<text  x="118.15" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.10%)</title><rect x="115.1" y="853" width="1.2" height="15.0" fill="rgb(250,27,16)" rx="2" ry="2" />
<text  x="118.15" y="863.5" ></text>
</g>
<g >
<title>lru_cache_add (2 samples, 0.20%)</title><rect x="216.8" y="677" width="2.3" height="15.0" fill="rgb(251,224,42)" rx="2" ry="2" />
<text  x="219.79" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (2 samples, 0.20%)</title><rect x="392.0" y="661" width="2.4" height="15.0" fill="rgb(210,47,13)" rx="2" ry="2" />
<text  x="395.04" y="671.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.10%)</title><rect x="239.0" y="709" width="1.2" height="15.0" fill="rgb(245,183,52)" rx="2" ry="2" />
<text  x="241.99" y="719.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (3 samples, 0.30%)</title><rect x="156.0" y="837" width="3.5" height="15.0" fill="rgb(226,143,28)" rx="2" ry="2" />
<text  x="159.04" y="847.5" ></text>
</g>
<g >
<title>NaClXMutexLock (1 samples, 0.10%)</title><rect x="702.8" y="789" width="1.2" height="15.0" fill="rgb(224,61,29)" rx="2" ry="2" />
<text  x="705.81" y="799.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.10%)</title><rect x="223.8" y="517" width="1.2" height="15.0" fill="rgb(225,48,15)" rx="2" ry="2" />
<text  x="226.80" y="527.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.10%)</title><rect x="948.2" y="581" width="1.1" height="15.0" fill="rgb(246,204,30)" rx="2" ry="2" />
<text  x="951.16" y="591.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.10%)</title><rect x="1075.5" y="885" width="1.2" height="15.0" fill="rgb(205,198,52)" rx="2" ry="2" />
<text  x="1078.50" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="170.1" y="741" width="1.1" height="15.0" fill="rgb(237,81,4)" rx="2" ry="2" />
<text  x="173.06" y="751.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.10%)</title><rect x="1077.8" y="677" width="1.2" height="15.0" fill="rgb(242,225,22)" rx="2" ry="2" />
<text  x="1080.84" y="687.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.10%)</title><rect x="663.1" y="661" width="1.2" height="15.0" fill="rgb(217,43,24)" rx="2" ry="2" />
<text  x="666.09" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (1 samples, 0.10%)</title><rect x="223.8" y="565" width="1.2" height="15.0" fill="rgb(248,47,47)" rx="2" ry="2" />
<text  x="226.80" y="575.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.10%)</title><rect x="232.0" y="773" width="1.1" height="15.0" fill="rgb(231,219,47)" rx="2" ry="2" />
<text  x="234.98" y="783.5" ></text>
</g>
<g >
<title>start_secondary (74 samples, 7.33%)</title><rect x="1076.7" y="869" width="86.4" height="15.0" fill="rgb(252,179,20)" rx="2" ry="2" />
<text  x="1079.67" y="879.5" >start_seco..</text>
</g>
<g >
<title>NaClSysFork (2 samples, 0.20%)</title><rect x="232.0" y="837" width="2.3" height="15.0" fill="rgb(213,6,46)" rx="2" ry="2" />
<text  x="234.98" y="847.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.10%)</title><rect x="989.0" y="485" width="1.2" height="15.0" fill="rgb(249,116,25)" rx="2" ry="2" />
<text  x="992.05" y="495.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.10%)</title><rect x="10.0" y="853" width="1.2" height="15.0" fill="rgb(220,82,39)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.69%)</title><rect x="663.1" y="693" width="8.2" height="15.0" fill="rgb(233,214,52)" rx="2" ry="2" />
<text  x="666.09" y="703.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.10%)</title><rect x="232.0" y="789" width="1.1" height="15.0" fill="rgb(223,42,21)" rx="2" ry="2" />
<text  x="234.98" y="799.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (1 samples, 0.10%)</title><rect x="232.0" y="645" width="1.1" height="15.0" fill="rgb(214,207,21)" rx="2" ry="2" />
<text  x="234.98" y="655.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.10%)</title><rect x="1075.5" y="837" width="1.2" height="15.0" fill="rgb(226,10,19)" rx="2" ry="2" />
<text  x="1078.50" y="847.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.10%)</title><rect x="234.3" y="789" width="1.2" height="15.0" fill="rgb(234,164,16)" rx="2" ry="2" />
<text  x="237.32" y="799.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.10%)</title><rect x="112.8" y="421" width="1.2" height="15.0" fill="rgb(214,2,15)" rx="2" ry="2" />
<text  x="115.81" y="431.5" ></text>
</g>
<g >
<title>exit_mm (32 samples, 3.17%)</title><rect x="1032.3" y="741" width="37.4" height="15.0" fill="rgb(208,78,12)" rx="2" ry="2" />
<text  x="1035.28" y="751.5" >exi..</text>
</g>
<g >
<title>proc_pid_status (1 samples, 0.10%)</title><rect x="111.6" y="629" width="1.2" height="15.0" fill="rgb(215,24,17)" rx="2" ry="2" />
<text  x="114.64" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="222.6" y="549" width="1.2" height="15.0" fill="rgb(217,184,50)" rx="2" ry="2" />
<text  x="225.63" y="559.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.10%)</title><rect x="233.1" y="773" width="1.2" height="15.0" fill="rgb(229,73,40)" rx="2" ry="2" />
<text  x="236.15" y="783.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.10%)</title><rect x="670.1" y="613" width="1.2" height="15.0" fill="rgb(222,63,32)" rx="2" ry="2" />
<text  x="673.10" y="623.5" ></text>
</g>
<g >
<title>vfs_iter_write (2 samples, 0.20%)</title><rect x="112.8" y="613" width="2.3" height="15.0" fill="rgb(206,110,46)" rx="2" ry="2" />
<text  x="115.81" y="623.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 6.34%)</title><rect x="36.9" y="581" width="74.7" height="15.0" fill="rgb(240,91,32)" rx="2" ry="2" />
<text  x="39.87" y="591.5" >__perf_e..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.10%)</title><rect x="702.8" y="757" width="1.2" height="15.0" fill="rgb(215,126,18)" rx="2" ry="2" />
<text  x="705.81" y="767.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.10%)</title><rect x="989.0" y="693" width="1.2" height="15.0" fill="rgb(245,151,41)" rx="2" ry="2" />
<text  x="992.05" y="703.5" ></text>
</g>
<g >
<title>free_unref_page_list (10 samples, 0.99%)</title><rect x="1056.8" y="581" width="11.7" height="15.0" fill="rgb(214,113,50)" rx="2" ry="2" />
<text  x="1059.81" y="591.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="1077.8" y="725" width="1.2" height="15.0" fill="rgb(251,35,43)" rx="2" ry="2" />
<text  x="1080.84" y="735.5" ></text>
</g>
<g >
<title>do_fault_around (1 samples, 0.10%)</title><rect x="219.1" y="693" width="1.2" height="15.0" fill="rgb(223,212,33)" rx="2" ry="2" />
<text  x="222.13" y="703.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.10%)</title><rect x="1041.6" y="629" width="1.2" height="15.0" fill="rgb(217,218,16)" rx="2" ry="2" />
<text  x="1044.62" y="639.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.10%)</title><rect x="664.3" y="661" width="1.1" height="15.0" fill="rgb(220,217,41)" rx="2" ry="2" />
<text  x="667.26" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="206.3" y="661" width="1.1" height="15.0" fill="rgb(244,73,42)" rx="2" ry="2" />
<text  x="209.28" y="671.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.10%)</title><rect x="232.0" y="693" width="1.1" height="15.0" fill="rgb(209,197,33)" rx="2" ry="2" />
<text  x="234.98" y="703.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.10%)</title><rect x="949.3" y="645" width="1.2" height="15.0" fill="rgb(205,120,7)" rx="2" ry="2" />
<text  x="952.33" y="655.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (19 samples, 1.88%)</title><rect x="1163.1" y="725" width="22.2" height="15.0" fill="rgb(240,38,38)" rx="2" ry="2" />
<text  x="1166.13" y="735.5" >c..</text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (1 samples, 0.10%)</title><rect x="237.8" y="645" width="1.2" height="15.0" fill="rgb(247,121,9)" rx="2" ry="2" />
<text  x="240.82" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.10%)</title><rect x="987.9" y="805" width="1.1" height="15.0" fill="rgb(224,184,16)" rx="2" ry="2" />
<text  x="990.88" y="815.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.10%)</title><rect x="11.2" y="677" width="1.1" height="15.0" fill="rgb(220,162,18)" rx="2" ry="2" />
<text  x="14.17" y="687.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.10%)</title><rect x="233.1" y="373" width="1.2" height="15.0" fill="rgb(220,215,44)" rx="2" ry="2" />
<text  x="236.15" y="383.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.30%)</title><rect x="228.5" y="389" width="3.5" height="15.0" fill="rgb(247,154,35)" rx="2" ry="2" />
<text  x="231.48" y="399.5" ></text>
</g>
<g >
<title>NaClDescRef (4 samples, 0.40%)</title><rect x="695.8" y="789" width="4.7" height="15.0" fill="rgb(208,10,33)" rx="2" ry="2" />
<text  x="698.80" y="799.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.10%)</title><rect x="949.3" y="565" width="1.2" height="15.0" fill="rgb(208,23,39)" rx="2" ry="2" />
<text  x="952.33" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.10%)</title><rect x="233.1" y="645" width="1.2" height="15.0" fill="rgb(240,100,20)" rx="2" ry="2" />
<text  x="236.15" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (2 samples, 0.20%)</title><rect x="222.6" y="693" width="2.4" height="15.0" fill="rgb(247,123,0)" rx="2" ry="2" />
<text  x="225.63" y="703.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.10%)</title><rect x="1074.3" y="709" width="1.2" height="15.0" fill="rgb(219,142,54)" rx="2" ry="2" />
<text  x="1077.34" y="719.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.20%)</title><rect x="1073.2" y="773" width="2.3" height="15.0" fill="rgb(248,160,36)" rx="2" ry="2" />
<text  x="1076.17" y="783.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.10%)</title><rect x="223.8" y="277" width="1.2" height="15.0" fill="rgb(229,127,2)" rx="2" ry="2" />
<text  x="226.80" y="287.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.10%)</title><rect x="223.8" y="373" width="1.2" height="15.0" fill="rgb(230,146,2)" rx="2" ry="2" />
<text  x="226.80" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="989.0" y="629" width="1.2" height="15.0" fill="rgb(209,165,7)" rx="2" ry="2" />
<text  x="992.05" y="639.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.10%)</title><rect x="222.6" y="565" width="1.2" height="15.0" fill="rgb(241,111,22)" rx="2" ry="2" />
<text  x="225.63" y="575.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (4 samples, 0.40%)</title><rect x="215.6" y="805" width="4.7" height="15.0" fill="rgb(247,101,6)" rx="2" ry="2" />
<text  x="218.62" y="815.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.10%)</title><rect x="226.1" y="565" width="1.2" height="15.0" fill="rgb(243,175,20)" rx="2" ry="2" />
<text  x="229.14" y="575.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.10%)</title><rect x="222.6" y="405" width="1.2" height="15.0" fill="rgb(237,228,1)" rx="2" ry="2" />
<text  x="225.63" y="415.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.10%)</title><rect x="227.3" y="181" width="1.2" height="15.0" fill="rgb(253,14,48)" rx="2" ry="2" />
<text  x="230.31" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.40%)</title><rect x="227.3" y="549" width="4.7" height="15.0" fill="rgb(208,193,12)" rx="2" ry="2" />
<text  x="230.31" y="559.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3 samples, 0.30%)</title><rect x="1077.8" y="757" width="3.5" height="15.0" fill="rgb(209,196,6)" rx="2" ry="2" />
<text  x="1080.84" y="767.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.10%)</title><rect x="1069.7" y="613" width="1.1" height="15.0" fill="rgb(252,66,16)" rx="2" ry="2" />
<text  x="1072.66" y="623.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.20%)</title><rect x="1079.0" y="725" width="2.3" height="15.0" fill="rgb(226,111,43)" rx="2" ry="2" />
<text  x="1082.01" y="735.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.10%)</title><rect x="221.5" y="597" width="1.1" height="15.0" fill="rgb(238,162,18)" rx="2" ry="2" />
<text  x="224.47" y="607.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.10%)</title><rect x="512.4" y="549" width="1.1" height="15.0" fill="rgb(214,110,27)" rx="2" ry="2" />
<text  x="515.38" y="559.5" ></text>
</g>
<g >
<title>[anon] (30 samples, 2.97%)</title><rect x="116.3" y="885" width="35.1" height="15.0" fill="rgb(207,102,51)" rx="2" ry="2" />
<text  x="119.32" y="895.5" >[a..</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.10%)</title><rect x="670.1" y="565" width="1.2" height="15.0" fill="rgb(236,76,51)" rx="2" ry="2" />
<text  x="673.10" y="575.5" ></text>
</g>
<g >
<title>schedule_idle (2 samples, 0.20%)</title><rect x="1186.5" y="757" width="2.3" height="15.0" fill="rgb(246,86,0)" rx="2" ry="2" />
<text  x="1189.50" y="767.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.40%)</title><rect x="227.3" y="645" width="4.7" height="15.0" fill="rgb(220,177,47)" rx="2" ry="2" />
<text  x="230.31" y="655.5" ></text>
</g>
<g >
<title>tick_sched_timer (4 samples, 0.40%)</title><rect x="1163.1" y="597" width="4.7" height="15.0" fill="rgb(226,120,28)" rx="2" ry="2" />
<text  x="1166.13" y="607.5" ></text>
</g>
<g >
<title>NaClGetDescMu (5 samples, 0.50%)</title><rect x="695.8" y="805" width="5.8" height="15.0" fill="rgb(211,124,53)" rx="2" ry="2" />
<text  x="698.80" y="815.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.10%)</title><rect x="512.4" y="565" width="1.1" height="15.0" fill="rgb(238,24,47)" rx="2" ry="2" />
<text  x="515.38" y="575.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (5 samples, 0.50%)</title><rect x="671.3" y="677" width="5.8" height="15.0" fill="rgb(219,220,21)" rx="2" ry="2" />
<text  x="674.27" y="687.5" ></text>
</g>
<g >
<title>NaClDescUnref (2 samples, 0.20%)</title><rect x="222.6" y="789" width="2.4" height="15.0" fill="rgb(232,166,4)" rx="2" ry="2" />
<text  x="225.63" y="799.5" ></text>
</g>
<g >
<title>[unknown]  (205 samples, 20.30%)</title><rect x="707.5" y="885" width="239.5" height="15.0" fill="rgb(221,155,9)" rx="2" ry="2" />
<text  x="710.49" y="895.5" >[unknown] </text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.10%)</title><rect x="233.1" y="693" width="1.2" height="15.0" fill="rgb(229,225,52)" rx="2" ry="2" />
<text  x="236.15" y="703.5" ></text>
</g>
<g >
<title>zap_pte_range (32 samples, 3.17%)</title><rect x="1032.3" y="645" width="37.4" height="15.0" fill="rgb(237,30,0)" rx="2" ry="2" />
<text  x="1035.28" y="655.5" >zap..</text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (12 samples, 1.19%)</title><rect x="893.2" y="757" width="14.1" height="15.0" fill="rgb(216,16,37)" rx="2" ry="2" />
<text  x="896.25" y="767.5" ></text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.10%)</title><rect x="206.3" y="613" width="1.1" height="15.0" fill="rgb(246,8,39)" rx="2" ry="2" />
<text  x="209.28" y="623.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="986.7" y="757" width="1.2" height="15.0" fill="rgb(243,75,28)" rx="2" ry="2" />
<text  x="989.71" y="767.5" ></text>
</g>
<g >
<title>dispatcher (5 samples, 0.50%)</title><rect x="226.1" y="805" width="5.9" height="15.0" fill="rgb(206,109,11)" rx="2" ry="2" />
<text  x="229.14" y="815.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.10%)</title><rect x="227.3" y="341" width="1.2" height="15.0" fill="rgb(209,41,14)" rx="2" ry="2" />
<text  x="230.31" y="351.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.10%)</title><rect x="664.3" y="629" width="1.1" height="15.0" fill="rgb(205,182,2)" rx="2" ry="2" />
<text  x="667.26" y="639.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.10%)</title><rect x="17.0" y="837" width="1.2" height="15.0" fill="rgb(253,174,7)" rx="2" ry="2" />
<text  x="20.01" y="847.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (2 samples, 0.20%)</title><rect x="844.2" y="725" width="2.3" height="15.0" fill="rgb(226,37,31)" rx="2" ry="2" />
<text  x="847.18" y="735.5" ></text>
</g>
<g >
<title>dequeue_task (2 samples, 0.20%)</title><rect x="1073.2" y="757" width="2.3" height="15.0" fill="rgb(224,193,1)" rx="2" ry="2" />
<text  x="1076.17" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (3 samples, 0.30%)</title><rect x="387.4" y="725" width="3.5" height="15.0" fill="rgb(250,151,19)" rx="2" ry="2" />
<text  x="390.37" y="735.5" ></text>
</g>
<g >
<title>alloc_pages_vma (40 samples, 3.96%)</title><rect x="839.5" y="757" width="46.7" height="15.0" fill="rgb(221,104,51)" rx="2" ry="2" />
<text  x="842.50" y="767.5" >allo..</text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 6.34%)</title><rect x="36.9" y="549" width="74.7" height="15.0" fill="rgb(221,6,4)" rx="2" ry="2" />
<text  x="39.87" y="559.5" >x86_pmu_..</text>
</g>
<g >
<title>__do_munmap (1 samples, 0.10%)</title><rect x="170.1" y="677" width="1.1" height="15.0" fill="rgb(216,29,18)" rx="2" ry="2" />
<text  x="173.06" y="687.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.10%)</title><rect x="948.2" y="709" width="1.1" height="15.0" fill="rgb(222,146,45)" rx="2" ry="2" />
<text  x="951.16" y="719.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.10%)</title><rect x="895.6" y="709" width="1.2" height="15.0" fill="rgb(246,90,39)" rx="2" ry="2" />
<text  x="898.58" y="719.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (1 samples, 0.10%)</title><rect x="227.3" y="149" width="1.2" height="15.0" fill="rgb(241,189,34)" rx="2" ry="2" />
<text  x="230.31" y="159.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="390.9" y="709" width="3.5" height="15.0" fill="rgb(243,224,9)" rx="2" ry="2" />
<text  x="393.87" y="719.5" ></text>
</g>
<g >
<title>__ioctl (80 samples, 7.92%)</title><rect x="18.2" y="789" width="93.4" height="15.0" fill="rgb(220,82,30)" rx="2" ry="2" />
<text  x="21.18" y="799.5" >__ioctl</text>
</g>
<g >
<title>get_page_from_freelist (33 samples, 3.27%)</title><rect x="846.5" y="725" width="38.6" height="15.0" fill="rgb(252,152,20)" rx="2" ry="2" />
<text  x="849.51" y="735.5" >get..</text>
</g>
<g >
<title>ksys_read (1 samples, 0.10%)</title><rect x="232.0" y="517" width="1.1" height="15.0" fill="rgb(243,65,15)" rx="2" ry="2" />
<text  x="234.98" y="527.5" ></text>
</g>
<g >
<title>lindrustfinalize (1 samples, 0.10%)</title><rect x="987.9" y="821" width="1.1" height="15.0" fill="rgb(254,49,1)" rx="2" ry="2" />
<text  x="990.88" y="831.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.10%)</title><rect x="1077.8" y="597" width="1.2" height="15.0" fill="rgb(232,132,21)" rx="2" ry="2" />
<text  x="1080.84" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (5 samples, 0.50%)</title><rect x="394.4" y="677" width="5.8" height="15.0" fill="rgb(223,66,33)" rx="2" ry="2" />
<text  x="397.38" y="687.5" ></text>
</g>
<g >
<title>irqentry_enter (1 samples, 0.10%)</title><rect x="920.1" y="837" width="1.2" height="15.0" fill="rgb(234,17,3)" rx="2" ry="2" />
<text  x="923.12" y="847.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.10%)</title><rect x="1172.5" y="597" width="1.1" height="15.0" fill="rgb(242,98,31)" rx="2" ry="2" />
<text  x="1175.48" y="607.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.40%)</title><rect x="119.8" y="869" width="4.7" height="15.0" fill="rgb(224,108,16)" rx="2" ry="2" />
<text  x="122.82" y="879.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.10%)</title><rect x="228.5" y="373" width="1.1" height="15.0" fill="rgb(228,14,0)" rx="2" ry="2" />
<text  x="231.48" y="383.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.10%)</title><rect x="17.0" y="789" width="1.2" height="15.0" fill="rgb(252,123,6)" rx="2" ry="2" />
<text  x="20.01" y="799.5" ></text>
</g>
<g >
<title>arch_do_signal (1 samples, 0.10%)</title><rect x="10.0" y="805" width="1.2" height="15.0" fill="rgb(243,19,47)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.20%)</title><rect x="1186.5" y="725" width="2.3" height="15.0" fill="rgb(241,162,38)" rx="2" ry="2" />
<text  x="1189.50" y="735.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.10%)</title><rect x="663.1" y="597" width="1.2" height="15.0" fill="rgb(227,73,0)" rx="2" ry="2" />
<text  x="666.09" y="607.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.10%)</title><rect x="222.6" y="421" width="1.2" height="15.0" fill="rgb(226,208,38)" rx="2" ry="2" />
<text  x="225.63" y="431.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.10%)</title><rect x="986.7" y="805" width="1.2" height="15.0" fill="rgb(206,0,33)" rx="2" ry="2" />
<text  x="989.71" y="815.5" ></text>
</g>
<g >
<title>ovl_read_iter (1 samples, 0.10%)</title><rect x="989.0" y="533" width="1.2" height="15.0" fill="rgb(248,27,1)" rx="2" ry="2" />
<text  x="992.05" y="543.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.10%)</title><rect x="1075.5" y="853" width="1.2" height="15.0" fill="rgb(242,115,0)" rx="2" ry="2" />
<text  x="1078.50" y="863.5" ></text>
</g>
<g >
<title>arch_do_signal (1 samples, 0.10%)</title><rect x="11.2" y="805" width="1.1" height="15.0" fill="rgb(231,211,14)" rx="2" ry="2" />
<text  x="14.17" y="815.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.10%)</title><rect x="949.3" y="757" width="1.2" height="15.0" fill="rgb(251,131,35)" rx="2" ry="2" />
<text  x="952.33" y="767.5" ></text>
</g>
<g >
<title>NaClAbiStatHostDescStatXlateCtor (1 samples, 0.10%)</title><rect x="234.3" y="805" width="1.2" height="15.0" fill="rgb(216,20,16)" rx="2" ry="2" />
<text  x="237.32" y="815.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (5 samples, 0.50%)</title><rect x="226.1" y="773" width="5.9" height="15.0" fill="rgb(220,23,7)" rx="2" ry="2" />
<text  x="229.14" y="783.5" ></text>
</g>
<g >
<title>vfs_iter_read (1 samples, 0.10%)</title><rect x="989.0" y="517" width="1.2" height="15.0" fill="rgb(252,184,12)" rx="2" ry="2" />
<text  x="992.05" y="527.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.10%)</title><rect x="223.8" y="261" width="1.2" height="15.0" fill="rgb(247,155,15)" rx="2" ry="2" />
<text  x="226.80" y="271.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (1 samples, 0.10%)</title><rect x="222.6" y="629" width="1.2" height="15.0" fill="rgb(228,163,11)" rx="2" ry="2" />
<text  x="225.63" y="639.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.10%)</title><rect x="664.3" y="613" width="1.1" height="15.0" fill="rgb(244,126,22)" rx="2" ry="2" />
<text  x="667.26" y="623.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.20%)</title><rect x="172.4" y="629" width="2.3" height="15.0" fill="rgb(226,150,38)" rx="2" ry="2" />
<text  x="175.40" y="639.5" ></text>
</g>
<g >
<title>page_add_file_rmap (1 samples, 0.10%)</title><rect x="986.7" y="661" width="1.2" height="15.0" fill="rgb(231,209,20)" rx="2" ry="2" />
<text  x="989.71" y="671.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.10%)</title><rect x="948.2" y="565" width="1.1" height="15.0" fill="rgb(254,118,36)" rx="2" ry="2" />
<text  x="951.16" y="575.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.10%)</title><rect x="512.4" y="581" width="1.1" height="15.0" fill="rgb(238,55,40)" rx="2" ry="2" />
<text  x="515.38" y="591.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.10%)</title><rect x="1068.5" y="581" width="1.2" height="15.0" fill="rgb(212,58,6)" rx="2" ry="2" />
<text  x="1071.50" y="591.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.40%)</title><rect x="227.3" y="485" width="4.7" height="15.0" fill="rgb(226,14,15)" rx="2" ry="2" />
<text  x="230.31" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="511.2" y="597" width="1.2" height="15.0" fill="rgb(238,163,2)" rx="2" ry="2" />
<text  x="514.21" y="607.5" ></text>
</g>
<g >
<title>NaClRefCountRef (3 samples, 0.30%)</title><rect x="697.0" y="773" width="3.5" height="15.0" fill="rgb(225,68,1)" rx="2" ry="2" />
<text  x="699.97" y="783.5" ></text>
</g>
<g >
<title>swapper (102 samples, 10.10%)</title><rect x="1070.8" y="901" width="119.2" height="15.0" fill="rgb(214,208,10)" rx="2" ry="2" />
<text  x="1073.83" y="911.5" >swapper</text>
</g>
<g >
<title>std::io::append_to_string (1 samples, 0.10%)</title><rect x="989.0" y="741" width="1.2" height="15.0" fill="rgb(246,69,7)" rx="2" ry="2" />
<text  x="992.05" y="751.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (3 samples, 0.30%)</title><rect x="1072.0" y="805" width="3.5" height="15.0" fill="rgb(233,25,18)" rx="2" ry="2" />
<text  x="1075.00" y="815.5" ></text>
</g>
<g >
<title>NaClValidateImage (3 samples, 0.30%)</title><rect x="950.5" y="805" width="3.5" height="15.0" fill="rgb(248,156,34)" rx="2" ry="2" />
<text  x="953.50" y="815.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.10%)</title><rect x="986.7" y="693" width="1.2" height="15.0" fill="rgb(233,6,12)" rx="2" ry="2" />
<text  x="989.71" y="703.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.10%)</title><rect x="1080.2" y="629" width="1.1" height="15.0" fill="rgb(226,155,24)" rx="2" ry="2" />
<text  x="1083.18" y="639.5" ></text>
</g>
<g >
<title>event_function (64 samples, 6.34%)</title><rect x="36.9" y="597" width="74.7" height="15.0" fill="rgb(251,21,28)" rx="2" ry="2" />
<text  x="39.87" y="607.5" >event_fu..</text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.10%)</title><rect x="511.2" y="469" width="1.2" height="15.0" fill="rgb(240,57,1)" rx="2" ry="2" />
<text  x="514.21" y="479.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (35 samples, 3.47%)</title><rect x="991.4" y="885" width="40.9" height="15.0" fill="rgb(254,72,29)" rx="2" ry="2" />
<text  x="994.39" y="895.5" >asm..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (2 samples, 0.20%)</title><rect x="124.5" y="853" width="2.3" height="15.0" fill="rgb(237,85,40)" rx="2" ry="2" />
<text  x="127.50" y="863.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (33 samples, 3.27%)</title><rect x="1032.3" y="821" width="38.5" height="15.0" fill="rgb(224,154,6)" rx="2" ry="2" />
<text  x="1035.28" y="831.5" >exi..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.10%)</title><rect x="223.8" y="341" width="1.2" height="15.0" fill="rgb(242,40,33)" rx="2" ry="2" />
<text  x="226.80" y="351.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.10%)</title><rect x="17.0" y="709" width="1.2" height="15.0" fill="rgb(215,11,10)" rx="2" ry="2" />
<text  x="20.01" y="719.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.10%)</title><rect x="221.5" y="581" width="1.1" height="15.0" fill="rgb(248,132,45)" rx="2" ry="2" />
<text  x="224.47" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (252 samples, 24.95%)</title><rect x="385.0" y="741" width="294.4" height="15.0" fill="rgb(238,228,48)" rx="2" ry="2" />
<text  x="388.03" y="751.5" >rustposix::safeposix::syscalls::fs_call..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="223.8" y="309" width="1.2" height="15.0" fill="rgb(247,120,43)" rx="2" ry="2" />
<text  x="226.80" y="319.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (7 samples, 0.69%)</title><rect x="896.8" y="709" width="8.1" height="15.0" fill="rgb(218,80,29)" rx="2" ry="2" />
<text  x="899.75" y="719.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (476 samples, 47.13%)</title><rect x="151.4" y="869" width="556.1" height="15.0" fill="rgb(250,199,8)" rx="2" ry="2" />
<text  x="154.37" y="879.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>rb_erase (1 samples, 0.10%)</title><rect x="1162.0" y="741" width="1.1" height="15.0" fill="rgb(230,229,41)" rx="2" ry="2" />
<text  x="1164.96" y="751.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (1 samples, 0.10%)</title><rect x="112.8" y="517" width="1.2" height="15.0" fill="rgb(225,10,31)" rx="2" ry="2" />
<text  x="115.81" y="527.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.10%)</title><rect x="111.6" y="677" width="1.2" height="15.0" fill="rgb(253,6,19)" rx="2" ry="2" />
<text  x="114.64" y="687.5" ></text>
</g>
<g >
<title>NaClAllocateSpaceAslr (1 samples, 0.10%)</title><rect x="221.5" y="741" width="1.1" height="15.0" fill="rgb(220,182,23)" rx="2" ry="2" />
<text  x="224.47" y="751.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (2 samples, 0.20%)</title><rect x="112.8" y="581" width="2.3" height="15.0" fill="rgb(233,10,30)" rx="2" ry="2" />
<text  x="115.81" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="11.2" y="869" width="1.1" height="15.0" fill="rgb(231,145,47)" rx="2" ry="2" />
<text  x="14.17" y="879.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.10%)</title><rect x="1165.5" y="517" width="1.1" height="15.0" fill="rgb(207,92,33)" rx="2" ry="2" />
<text  x="1168.47" y="527.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.10%)</title><rect x="989.0" y="549" width="1.2" height="15.0" fill="rgb(249,24,9)" rx="2" ry="2" />
<text  x="992.05" y="559.5" ></text>
</g>
<g >
<title>cpuidle_enter (73 samples, 7.23%)</title><rect x="1076.7" y="805" width="85.3" height="15.0" fill="rgb(212,149,37)" rx="2" ry="2" />
<text  x="1079.67" y="815.5" >cpuidle_en..</text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 6.34%)</title><rect x="36.9" y="533" width="74.7" height="15.0" fill="rgb(235,177,12)" rx="2" ry="2" />
<text  x="39.87" y="543.5" >intel_pm..</text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (1 samples, 0.10%)</title><rect x="233.1" y="53" width="1.2" height="15.0" fill="rgb(207,61,2)" rx="2" ry="2" />
<text  x="236.15" y="63.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (87 samples, 8.61%)</title><rect x="422.4" y="693" width="101.7" height="15.0" fill="rgb(241,177,20)" rx="2" ry="2" />
<text  x="425.42" y="703.5" >ringbuf::pro..</text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.79%)</title><rect x="411.9" y="693" width="9.3" height="15.0" fill="rgb(243,139,9)" rx="2" ry="2" />
<text  x="414.90" y="703.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.10%)</title><rect x="511.2" y="565" width="1.2" height="15.0" fill="rgb(214,128,20)" rx="2" ry="2" />
<text  x="514.21" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.10%)</title><rect x="223.8" y="149" width="1.2" height="15.0" fill="rgb(207,152,14)" rx="2" ry="2" />
<text  x="226.80" y="159.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.10%)</title><rect x="948.2" y="469" width="1.1" height="15.0" fill="rgb(207,66,51)" rx="2" ry="2" />
<text  x="951.16" y="479.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="112.8" y="469" width="1.2" height="15.0" fill="rgb(230,187,18)" rx="2" ry="2" />
<text  x="115.81" y="479.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.10%)</title><rect x="1185.3" y="725" width="1.2" height="15.0" fill="rgb(217,97,10)" rx="2" ry="2" />
<text  x="1188.33" y="735.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (11 samples, 1.09%)</title><rect x="138.5" y="837" width="12.9" height="15.0" fill="rgb(254,146,49)" rx="2" ry="2" />
<text  x="141.51" y="847.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.10%)</title><rect x="115.1" y="821" width="1.2" height="15.0" fill="rgb(244,193,50)" rx="2" ry="2" />
<text  x="118.15" y="831.5" ></text>
</g>
<g >
<title>do_iter_read (1 samples, 0.10%)</title><rect x="232.0" y="437" width="1.1" height="15.0" fill="rgb(212,181,7)" rx="2" ry="2" />
<text  x="234.98" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.40%)</title><rect x="666.6" y="677" width="4.7" height="15.0" fill="rgb(245,58,49)" rx="2" ry="2" />
<text  x="669.59" y="687.5" ></text>
</g>
<g >
<title>sel_ldr (817 samples, 80.89%)</title><rect x="116.3" y="901" width="954.5" height="15.0" fill="rgb(205,194,36)" rx="2" ry="2" />
<text  x="119.32" y="911.5" >sel_ldr</text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="15.8" y="773" width="1.2" height="15.0" fill="rgb(241,15,32)" rx="2" ry="2" />
<text  x="18.84" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.10%)</title><rect x="227.3" y="325" width="1.2" height="15.0" fill="rgb(212,150,11)" rx="2" ry="2" />
<text  x="230.31" y="335.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.10%)</title><rect x="115.1" y="837" width="1.2" height="15.0" fill="rgb(248,210,15)" rx="2" ry="2" />
<text  x="118.15" y="847.5" ></text>
</g>
<g >
<title>find_derivation (1 samples, 0.10%)</title><rect x="12.3" y="869" width="1.2" height="15.0" fill="rgb(234,30,40)" rx="2" ry="2" />
<text  x="15.34" y="879.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.10%)</title><rect x="223.8" y="469" width="1.2" height="15.0" fill="rgb(208,92,1)" rx="2" ry="2" />
<text  x="226.80" y="479.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (1 samples, 0.10%)</title><rect x="230.8" y="357" width="1.2" height="15.0" fill="rgb(246,127,43)" rx="2" ry="2" />
<text  x="233.81" y="367.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.10%)</title><rect x="1187.7" y="677" width="1.1" height="15.0" fill="rgb(251,127,32)" rx="2" ry="2" />
<text  x="1190.66" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="221.5" y="661" width="1.1" height="15.0" fill="rgb(230,30,31)" rx="2" ry="2" />
<text  x="224.47" y="671.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.20%)</title><rect x="1079.0" y="677" width="2.3" height="15.0" fill="rgb(215,52,11)" rx="2" ry="2" />
<text  x="1082.01" y="687.5" ></text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.10%)</title><rect x="233.1" y="741" width="1.2" height="15.0" fill="rgb(205,118,54)" rx="2" ry="2" />
<text  x="236.15" y="751.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.10%)</title><rect x="948.2" y="485" width="1.1" height="15.0" fill="rgb(229,182,2)" rx="2" ry="2" />
<text  x="951.16" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="512.4" y="613" width="1.1" height="15.0" fill="rgb(228,23,38)" rx="2" ry="2" />
<text  x="515.38" y="623.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.10%)</title><rect x="230.8" y="341" width="1.2" height="15.0" fill="rgb(241,84,38)" rx="2" ry="2" />
<text  x="233.81" y="351.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.10%)</title><rect x="170.1" y="629" width="1.1" height="15.0" fill="rgb(211,146,3)" rx="2" ry="2" />
<text  x="173.06" y="639.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.40%)</title><rect x="227.3" y="677" width="4.7" height="15.0" fill="rgb(216,116,17)" rx="2" ry="2" />
<text  x="230.31" y="687.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (97 samples, 9.60%)</title><rect x="253.0" y="661" width="113.3" height="15.0" fill="rgb(231,216,26)" rx="2" ry="2" />
<text  x="256.01" y="671.5" >ringbuf::consu..</text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.10%)</title><rect x="172.4" y="565" width="1.2" height="15.0" fill="rgb(245,126,2)" rx="2" ry="2" />
<text  x="175.40" y="575.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.10%)</title><rect x="232.0" y="629" width="1.1" height="15.0" fill="rgb(240,179,5)" rx="2" ry="2" />
<text  x="234.98" y="639.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.10%)</title><rect x="233.1" y="69" width="1.2" height="15.0" fill="rgb(245,197,18)" rx="2" ry="2" />
<text  x="236.15" y="79.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.20%)</title><rect x="1079.0" y="709" width="2.3" height="15.0" fill="rgb(225,229,0)" rx="2" ry="2" />
<text  x="1082.01" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (1 samples, 0.10%)</title><rect x="233.1" y="325" width="1.2" height="15.0" fill="rgb(245,215,15)" rx="2" ry="2" />
<text  x="236.15" y="335.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.10%)</title><rect x="15.8" y="821" width="1.2" height="15.0" fill="rgb(221,225,2)" rx="2" ry="2" />
<text  x="18.84" y="831.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (2 samples, 0.20%)</title><rect x="947.0" y="741" width="2.3" height="15.0" fill="rgb(227,39,45)" rx="2" ry="2" />
<text  x="949.99" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (33 samples, 3.27%)</title><rect x="1032.3" y="869" width="38.5" height="15.0" fill="rgb(237,133,44)" rx="2" ry="2" />
<text  x="1035.28" y="879.5" >do_..</text>
</g>
<g >
<title>seq_read_iter (1 samples, 0.10%)</title><rect x="111.6" y="661" width="1.2" height="15.0" fill="rgb(240,63,4)" rx="2" ry="2" />
<text  x="114.64" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (110 samples, 10.89%)</title><rect x="237.8" y="741" width="128.5" height="15.0" fill="rgb(215,173,6)" rx="2" ry="2" />
<text  x="240.82" y="751.5" >rustposix::safep..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.10%)</title><rect x="230.8" y="309" width="1.2" height="15.0" fill="rgb(216,212,28)" rx="2" ry="2" />
<text  x="233.81" y="319.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="223.8" y="453" width="1.2" height="15.0" fill="rgb(253,65,34)" rx="2" ry="2" />
<text  x="226.80" y="463.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.10%)</title><rect x="11.2" y="693" width="1.1" height="15.0" fill="rgb(227,131,35)" rx="2" ry="2" />
<text  x="14.17" y="703.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.10%)</title><rect x="215.6" y="677" width="1.2" height="15.0" fill="rgb(213,135,19)" rx="2" ry="2" />
<text  x="218.62" y="687.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.10%)</title><rect x="1185.3" y="741" width="1.2" height="15.0" fill="rgb(231,140,20)" rx="2" ry="2" />
<text  x="1188.33" y="751.5" ></text>
</g>
<g >
<title>free_unref_page_commit (10 samples, 0.99%)</title><rect x="1056.8" y="565" width="11.7" height="15.0" fill="rgb(207,67,23)" rx="2" ry="2" />
<text  x="1059.81" y="575.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="233.1" y="453" width="1.2" height="15.0" fill="rgb(209,204,30)" rx="2" ry="2" />
<text  x="236.15" y="463.5" ></text>
</g>
<g >
<title>wait_for (2 samples, 0.20%)</title><rect x="13.5" y="789" width="2.3" height="15.0" fill="rgb(220,36,15)" rx="2" ry="2" />
<text  x="16.50" y="799.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.10%)</title><rect x="227.3" y="197" width="1.2" height="15.0" fill="rgb(206,32,10)" rx="2" ry="2" />
<text  x="230.31" y="207.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.10%)</title><rect x="223.8" y="245" width="1.2" height="15.0" fill="rgb(245,9,49)" rx="2" ry="2" />
<text  x="226.80" y="255.5" ></text>
</g>
<g >
<title>BitmapSetBit (4 samples, 0.40%)</title><rect x="202.8" y="741" width="4.6" height="15.0" fill="rgb(212,116,44)" rx="2" ry="2" />
<text  x="205.77" y="751.5" ></text>
</g>
<g >
<title>irq_enter_rcu (1 samples, 0.10%)</title><rect x="1169.0" y="677" width="1.1" height="15.0" fill="rgb(241,88,7)" rx="2" ry="2" />
<text  x="1171.97" y="687.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.10%)</title><rect x="115.1" y="709" width="1.2" height="15.0" fill="rgb(214,47,12)" rx="2" ry="2" />
<text  x="118.15" y="719.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.10%)</title><rect x="111.6" y="693" width="1.2" height="15.0" fill="rgb(243,187,54)" rx="2" ry="2" />
<text  x="114.64" y="703.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.10%)</title><rect x="227.3" y="245" width="1.2" height="15.0" fill="rgb(215,17,6)" rx="2" ry="2" />
<text  x="230.31" y="255.5" ></text>
</g>
<g >
<title>all (1,010 samples, 100%)</title><rect x="10.0" y="917" width="1180.0" height="15.0" fill="rgb(210,13,26)" rx="2" ry="2" />
<text  x="13.00" y="927.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.10%)</title><rect x="222.6" y="389" width="1.2" height="15.0" fill="rgb(239,175,24)" rx="2" ry="2" />
<text  x="225.63" y="399.5" ></text>
</g>
<g >
<title>refill_stock (1 samples, 0.10%)</title><rect x="914.3" y="725" width="1.1" height="15.0" fill="rgb(217,199,18)" rx="2" ry="2" />
<text  x="917.28" y="735.5" ></text>
</g>
<g >
<title>exit_mmap (32 samples, 3.17%)</title><rect x="1032.3" y="709" width="37.4" height="15.0" fill="rgb(229,206,36)" rx="2" ry="2" />
<text  x="1035.28" y="719.5" >exi..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="17.0" y="885" width="1.2" height="15.0" fill="rgb(236,111,40)" rx="2" ry="2" />
<text  x="20.01" y="895.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (42 samples, 4.16%)</title><rect x="165.4" y="821" width="49.1" height="15.0" fill="rgb(224,107,18)" rx="2" ry="2" />
<text  x="168.39" y="831.5" >NaCl..</text>
</g>
<g >
<title>cpuidle_enter (19 samples, 1.88%)</title><rect x="1163.1" y="741" width="22.2" height="15.0" fill="rgb(207,47,40)" rx="2" ry="2" />
<text  x="1166.13" y="751.5" >c..</text>
</g>
<g >
<title>kthread_blkcg (1 samples, 0.10%)</title><rect x="890.9" y="757" width="1.2" height="15.0" fill="rgb(253,225,33)" rx="2" ry="2" />
<text  x="893.91" y="767.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.10%)</title><rect x="1069.7" y="725" width="1.1" height="15.0" fill="rgb(228,212,38)" rx="2" ry="2" />
<text  x="1072.66" y="735.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.10%)</title><rect x="1060.3" y="549" width="1.2" height="15.0" fill="rgb(247,167,37)" rx="2" ry="2" />
<text  x="1063.32" y="559.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (7 samples, 0.69%)</title><rect x="907.3" y="757" width="8.1" height="15.0" fill="rgb(205,162,41)" rx="2" ry="2" />
<text  x="910.27" y="767.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (1 samples, 0.10%)</title><rect x="1069.7" y="517" width="1.1" height="15.0" fill="rgb(226,26,7)" rx="2" ry="2" />
<text  x="1072.66" y="527.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.10%)</title><rect x="916.6" y="725" width="1.2" height="15.0" fill="rgb(214,153,34)" rx="2" ry="2" />
<text  x="919.61" y="735.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="386.2" y="709" width="1.2" height="15.0" fill="rgb(231,103,47)" rx="2" ry="2" />
<text  x="389.20" y="719.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.10%)</title><rect x="1055.6" y="581" width="1.2" height="15.0" fill="rgb(228,148,34)" rx="2" ry="2" />
<text  x="1058.64" y="591.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.10%)</title><rect x="232.0" y="501" width="1.1" height="15.0" fill="rgb(239,23,8)" rx="2" ry="2" />
<text  x="234.98" y="511.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.10%)</title><rect x="1077.8" y="581" width="1.2" height="15.0" fill="rgb(252,96,12)" rx="2" ry="2" />
<text  x="1080.84" y="591.5" ></text>
</g>
<g >
<title>NaClSysWrite (287 samples, 28.42%)</title><rect x="372.2" y="837" width="335.3" height="15.0" fill="rgb(246,74,43)" rx="2" ry="2" />
<text  x="375.18" y="847.5" >NaClSysWrite</text>
</g>
<g >
<title>NaClChildNapCtor (2 samples, 0.20%)</title><rect x="232.0" y="821" width="2.3" height="15.0" fill="rgb(217,114,27)" rx="2" ry="2" />
<text  x="234.98" y="831.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.10%)</title><rect x="115.1" y="805" width="1.2" height="15.0" fill="rgb(240,73,49)" rx="2" ry="2" />
<text  x="118.15" y="815.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.10%)</title><rect x="10.0" y="709" width="1.2" height="15.0" fill="rgb(254,91,51)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.10%)</title><rect x="221.5" y="613" width="1.1" height="15.0" fill="rgb(209,84,23)" rx="2" ry="2" />
<text  x="224.47" y="623.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="112.8" y="437" width="1.2" height="15.0" fill="rgb(253,93,29)" rx="2" ry="2" />
<text  x="115.81" y="447.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (102 samples, 10.10%)</title><rect x="247.2" y="709" width="119.1" height="15.0" fill="rgb(238,22,5)" rx="2" ry="2" />
<text  x="250.17" y="719.5" >ringbuf::consu..</text>
</g>
<g >
<title>cpu_startup_entry (23 samples, 2.28%)</title><rect x="1163.1" y="789" width="26.9" height="15.0" fill="rgb(253,46,8)" rx="2" ry="2" />
<text  x="1166.13" y="799.5" >c..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="227.3" y="405" width="1.2" height="15.0" fill="rgb(250,50,22)" rx="2" ry="2" />
<text  x="230.31" y="415.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.10%)</title><rect x="1041.6" y="597" width="1.2" height="15.0" fill="rgb(249,187,1)" rx="2" ry="2" />
<text  x="1044.62" y="607.5" ></text>
</g>
<g >
<title>do_exit (33 samples, 3.27%)</title><rect x="1032.3" y="757" width="38.5" height="15.0" fill="rgb(215,206,38)" rx="2" ry="2" />
<text  x="1035.28" y="767.5" >do_..</text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.10%)</title><rect x="226.1" y="613" width="1.2" height="15.0" fill="rgb(242,174,4)" rx="2" ry="2" />
<text  x="229.14" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.10%)</title><rect x="221.5" y="645" width="1.1" height="15.0" fill="rgb(240,62,47)" rx="2" ry="2" />
<text  x="224.47" y="655.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.10%)</title><rect x="227.3" y="293" width="1.2" height="15.0" fill="rgb(226,153,51)" rx="2" ry="2" />
<text  x="230.31" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.20%)</title><rect x="380.4" y="693" width="2.3" height="15.0" fill="rgb(248,47,48)" rx="2" ry="2" />
<text  x="383.36" y="703.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.10%)</title><rect x="237.8" y="693" width="1.2" height="15.0" fill="rgb(236,109,13)" rx="2" ry="2" />
<text  x="240.82" y="703.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (1 samples, 0.10%)</title><rect x="223.8" y="85" width="1.2" height="15.0" fill="rgb(231,91,0)" rx="2" ry="2" />
<text  x="226.80" y="95.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="233.1" y="165" width="1.2" height="15.0" fill="rgb(253,225,46)" rx="2" ry="2" />
<text  x="236.15" y="175.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.10%)</title><rect x="115.1" y="773" width="1.2" height="15.0" fill="rgb(244,190,16)" rx="2" ry="2" />
<text  x="118.15" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.10%)</title><rect x="223.8" y="437" width="1.2" height="15.0" fill="rgb(212,221,25)" rx="2" ry="2" />
<text  x="226.80" y="447.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.10%)</title><rect x="172.4" y="533" width="1.2" height="15.0" fill="rgb(219,159,25)" rx="2" ry="2" />
<text  x="175.40" y="543.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.10%)</title><rect x="233.1" y="469" width="1.2" height="15.0" fill="rgb(214,89,36)" rx="2" ry="2" />
<text  x="236.15" y="479.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (2 samples, 0.20%)</title><rect x="222.6" y="757" width="2.4" height="15.0" fill="rgb(230,165,30)" rx="2" ry="2" />
<text  x="225.63" y="767.5" ></text>
</g>
<g >
<title>do_task_dead (1 samples, 0.10%)</title><rect x="11.2" y="741" width="1.1" height="15.0" fill="rgb(210,100,21)" rx="2" ry="2" />
<text  x="14.17" y="751.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (8 samples, 0.79%)</title><rect x="411.9" y="677" width="9.3" height="15.0" fill="rgb(229,0,49)" rx="2" ry="2" />
<text  x="414.90" y="687.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1 samples, 0.10%)</title><rect x="385.0" y="693" width="1.2" height="15.0" fill="rgb(224,168,11)" rx="2" ry="2" />
<text  x="388.03" y="703.5" ></text>
</g>
<g >
<title>__msecs_to_jiffies (1 samples, 0.10%)</title><rect x="1079.0" y="661" width="1.2" height="15.0" fill="rgb(218,109,28)" rx="2" ry="2" />
<text  x="1082.01" y="671.5" ></text>
</g>
<g >
<title>__evlist__enable (80 samples, 7.92%)</title><rect x="18.2" y="837" width="93.4" height="15.0" fill="rgb(208,167,39)" rx="2" ry="2" />
<text  x="21.18" y="847.5" >__evlist__e..</text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.20%)</title><rect x="13.5" y="869" width="2.3" height="15.0" fill="rgb(236,186,20)" rx="2" ry="2" />
<text  x="16.50" y="879.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="213.3" y="741" width="1.2" height="15.0" fill="rgb(221,10,34)" rx="2" ry="2" />
<text  x="216.29" y="751.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 6.34%)</title><rect x="36.9" y="613" width="74.7" height="15.0" fill="rgb(225,57,39)" rx="2" ry="2" />
<text  x="39.87" y="623.5" >remote_f..</text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (4 samples, 0.40%)</title><rect x="367.5" y="837" width="4.7" height="15.0" fill="rgb(249,213,45)" rx="2" ry="2" />
<text  x="370.50" y="847.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.10%)</title><rect x="989.0" y="453" width="1.2" height="15.0" fill="rgb(227,176,40)" rx="2" ry="2" />
<text  x="992.05" y="463.5" ></text>
</g>
<g >
<title>rebalance_domains (2 samples, 0.20%)</title><rect x="1170.1" y="597" width="2.4" height="15.0" fill="rgb(221,1,34)" rx="2" ry="2" />
<text  x="1173.14" y="607.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (47 samples, 4.65%)</title><rect x="165.4" y="837" width="54.9" height="15.0" fill="rgb(236,164,23)" rx="2" ry="2" />
<text  x="168.39" y="847.5" >NaClS..</text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="387.4" y="709" width="3.5" height="15.0" fill="rgb(207,194,14)" rx="2" ry="2" />
<text  x="390.37" y="719.5" ></text>
</g>
<g >
<title>NaClHostDescPRead (1 samples, 0.10%)</title><rect x="232.0" y="725" width="1.1" height="15.0" fill="rgb(237,25,51)" rx="2" ry="2" />
<text  x="234.98" y="735.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="949.3" y="677" width="1.2" height="15.0" fill="rgb(223,200,35)" rx="2" ry="2" />
<text  x="952.33" y="687.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.30%)</title><rect x="171.2" y="661" width="3.5" height="15.0" fill="rgb(233,86,44)" rx="2" ry="2" />
<text  x="174.23" y="671.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.10%)</title><rect x="222.6" y="325" width="1.2" height="15.0" fill="rgb(251,171,16)" rx="2" ry="2" />
<text  x="225.63" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="111.6" y="741" width="1.2" height="15.0" fill="rgb(223,163,54)" rx="2" ry="2" />
<text  x="114.64" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="229.6" y="277" width="1.2" height="15.0" fill="rgb(206,15,36)" rx="2" ry="2" />
<text  x="232.64" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (3 samples, 0.30%)</title><rect x="171.2" y="741" width="3.5" height="15.0" fill="rgb(248,149,37)" rx="2" ry="2" />
<text  x="174.23" y="751.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.10%)</title><rect x="512.4" y="517" width="1.1" height="15.0" fill="rgb(251,146,13)" rx="2" ry="2" />
<text  x="515.38" y="527.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.10%)</title><rect x="14.7" y="581" width="1.1" height="15.0" fill="rgb(206,183,4)" rx="2" ry="2" />
<text  x="17.67" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="228.5" y="229" width="1.1" height="15.0" fill="rgb(229,5,40)" rx="2" ry="2" />
<text  x="231.48" y="239.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (5 samples, 0.50%)</title><rect x="671.3" y="725" width="5.8" height="15.0" fill="rgb(228,90,50)" rx="2" ry="2" />
<text  x="674.27" y="735.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.10%)</title><rect x="691.1" y="789" width="1.2" height="15.0" fill="rgb(254,183,30)" rx="2" ry="2" />
<text  x="694.13" y="799.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.10%)</title><rect x="233.1" y="117" width="1.2" height="15.0" fill="rgb(217,172,38)" rx="2" ry="2" />
<text  x="236.15" y="127.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readfile_to_new_string (1 samples, 0.10%)</title><rect x="989.0" y="773" width="1.2" height="15.0" fill="rgb(253,13,0)" rx="2" ry="2" />
<text  x="992.05" y="783.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (2 samples, 0.20%)</title><rect x="382.7" y="677" width="2.3" height="15.0" fill="rgb(225,129,3)" rx="2" ry="2" />
<text  x="385.69" y="687.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.10%)</title><rect x="223.8" y="485" width="1.2" height="15.0" fill="rgb(243,130,13)" rx="2" ry="2" />
<text  x="226.80" y="495.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.10%)</title><rect x="1069.7" y="741" width="1.1" height="15.0" fill="rgb(244,190,28)" rx="2" ry="2" />
<text  x="1072.66" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 7.92%)</title><rect x="18.2" y="757" width="93.4" height="15.0" fill="rgb(248,7,29)" rx="2" ry="2" />
<text  x="21.18" y="767.5" >do_syscall_64</text>
</g>
<g >
<title>cpuset_task_status_allowed (1 samples, 0.10%)</title><rect x="111.6" y="613" width="1.2" height="15.0" fill="rgb(221,146,35)" rx="2" ry="2" />
<text  x="114.64" y="623.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.10%)</title><rect x="903.8" y="693" width="1.1" height="15.0" fill="rgb(222,40,27)" rx="2" ry="2" />
<text  x="906.76" y="703.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (87 samples, 8.61%)</title><rect x="422.4" y="709" width="101.7" height="15.0" fill="rgb(225,92,37)" rx="2" ry="2" />
<text  x="425.42" y="719.5" >ringbuf::pro..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1 samples, 0.10%)</title><rect x="223.8" y="357" width="1.2" height="15.0" fill="rgb(220,173,3)" rx="2" ry="2" />
<text  x="226.80" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (3 samples, 0.30%)</title><rect x="685.3" y="773" width="3.5" height="15.0" fill="rgb(226,224,46)" rx="2" ry="2" />
<text  x="688.29" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (4 samples, 0.40%)</title><rect x="227.3" y="565" width="4.7" height="15.0" fill="rgb(239,119,19)" rx="2" ry="2" />
<text  x="230.31" y="575.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (6 samples, 0.59%)</title><rect x="225.0" y="853" width="7.0" height="15.0" fill="rgb(211,71,34)" rx="2" ry="2" />
<text  x="227.97" y="863.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (1 samples, 0.10%)</title><rect x="230.8" y="325" width="1.2" height="15.0" fill="rgb(209,212,21)" rx="2" ry="2" />
<text  x="233.81" y="335.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (3 samples, 0.30%)</title><rect x="950.5" y="853" width="3.5" height="15.0" fill="rgb(209,224,50)" rx="2" ry="2" />
<text  x="953.50" y="863.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.10%)</title><rect x="227.3" y="229" width="1.2" height="15.0" fill="rgb(222,160,49)" rx="2" ry="2" />
<text  x="230.31" y="239.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.10%)</title><rect x="221.5" y="789" width="1.1" height="15.0" fill="rgb(231,47,9)" rx="2" ry="2" />
<text  x="224.47" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (2 samples, 0.20%)</title><rect x="947.0" y="789" width="2.3" height="15.0" fill="rgb(227,92,53)" rx="2" ry="2" />
<text  x="949.99" y="799.5" ></text>
</g>
<g >
<title>unmap_page_range (32 samples, 3.17%)</title><rect x="1032.3" y="661" width="37.4" height="15.0" fill="rgb(221,23,4)" rx="2" ry="2" />
<text  x="1035.28" y="671.5" >unm..</text>
</g>
<g >
<title>mutex_unlock (3 samples, 0.30%)</title><rect x="18.2" y="693" width="3.5" height="15.0" fill="rgb(237,75,33)" rx="2" ry="2" />
<text  x="21.18" y="703.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.10%)</title><rect x="817.3" y="821" width="1.2" height="15.0" fill="rgb(239,1,7)" rx="2" ry="2" />
<text  x="820.31" y="831.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.10%)</title><rect x="111.6" y="581" width="1.2" height="15.0" fill="rgb(210,129,16)" rx="2" ry="2" />
<text  x="114.64" y="591.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="223.8" y="293" width="1.2" height="15.0" fill="rgb(253,187,53)" rx="2" ry="2" />
<text  x="226.80" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="230.8" y="261" width="1.2" height="15.0" fill="rgb(238,224,15)" rx="2" ry="2" />
<text  x="233.81" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (2 samples, 0.20%)</title><rect x="681.8" y="693" width="2.3" height="15.0" fill="rgb(206,56,27)" rx="2" ry="2" />
<text  x="684.78" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (3 samples, 0.30%)</title><rect x="387.4" y="661" width="3.5" height="15.0" fill="rgb(216,110,5)" rx="2" ry="2" />
<text  x="390.37" y="671.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.10%)</title><rect x="989.0" y="389" width="1.2" height="15.0" fill="rgb(222,4,51)" rx="2" ry="2" />
<text  x="992.05" y="399.5" ></text>
</g>
<g >
<title>NaClHostDescClose (2 samples, 0.20%)</title><rect x="222.6" y="741" width="2.4" height="15.0" fill="rgb(249,52,41)" rx="2" ry="2" />
<text  x="225.63" y="751.5" ></text>
</g>
<g >
<title>CachedMapWritableText (3 samples, 0.30%)</title><rect x="171.2" y="789" width="3.5" height="15.0" fill="rgb(224,10,52)" rx="2" ry="2" />
<text  x="174.23" y="799.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (8 samples, 0.79%)</title><rect x="411.9" y="645" width="9.3" height="15.0" fill="rgb(252,188,12)" rx="2" ry="2" />
<text  x="414.90" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (1 samples, 0.10%)</title><rect x="678.3" y="677" width="1.1" height="15.0" fill="rgb(229,210,54)" rx="2" ry="2" />
<text  x="681.28" y="687.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.10%)</title><rect x="948.2" y="533" width="1.1" height="15.0" fill="rgb(238,52,38)" rx="2" ry="2" />
<text  x="951.16" y="543.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (3 samples, 0.30%)</title><rect x="520.6" y="677" width="3.5" height="15.0" fill="rgb(247,88,15)" rx="2" ry="2" />
<text  x="523.55" y="687.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.10%)</title><rect x="694.6" y="805" width="1.2" height="15.0" fill="rgb(234,73,29)" rx="2" ry="2" />
<text  x="697.63" y="815.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (33 samples, 3.27%)</title><rect x="1032.3" y="837" width="38.5" height="15.0" fill="rgb(220,82,26)" rx="2" ry="2" />
<text  x="1035.28" y="847.5" >exi..</text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.10%)</title><rect x="371.0" y="821" width="1.2" height="15.0" fill="rgb(223,140,31)" rx="2" ry="2" />
<text  x="374.01" y="831.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.10%)</title><rect x="226.1" y="437" width="1.2" height="15.0" fill="rgb(252,74,26)" rx="2" ry="2" />
<text  x="229.14" y="447.5" ></text>
</g>
<g >
<title>__GI_munmap (1 samples, 0.10%)</title><rect x="170.1" y="757" width="1.1" height="15.0" fill="rgb(227,176,13)" rx="2" ry="2" />
<text  x="173.06" y="767.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 0.69%)</title><rect x="663.1" y="725" width="8.2" height="15.0" fill="rgb(232,0,23)" rx="2" ry="2" />
<text  x="666.09" y="735.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.40%)</title><rect x="380.4" y="741" width="4.6" height="15.0" fill="rgb(207,66,16)" rx="2" ry="2" />
<text  x="383.36" y="751.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.10%)</title><rect x="386.2" y="693" width="1.2" height="15.0" fill="rgb(225,155,11)" rx="2" ry="2" />
<text  x="389.20" y="703.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.10%)</title><rect x="213.3" y="677" width="1.2" height="15.0" fill="rgb(240,199,12)" rx="2" ry="2" />
<text  x="216.29" y="687.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.10%)</title><rect x="1171.3" y="565" width="1.2" height="15.0" fill="rgb(246,61,34)" rx="2" ry="2" />
<text  x="1174.31" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="232.0" y="565" width="1.1" height="15.0" fill="rgb(251,23,18)" rx="2" ry="2" />
<text  x="234.98" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.10%)</title><rect x="225.0" y="741" width="1.1" height="15.0" fill="rgb(235,200,44)" rx="2" ry="2" />
<text  x="227.97" y="751.5" ></text>
</g>
<g >
<title>main (2 samples, 0.20%)</title><rect x="13.5" y="853" width="2.3" height="15.0" fill="rgb(213,33,7)" rx="2" ry="2" />
<text  x="16.50" y="863.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.10%)</title><rect x="222.6" y="357" width="1.2" height="15.0" fill="rgb(223,34,12)" rx="2" ry="2" />
<text  x="225.63" y="367.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 6.34%)</title><rect x="36.9" y="517" width="74.7" height="15.0" fill="rgb(253,25,34)" rx="2" ry="2" />
<text  x="39.87" y="527.5" >native_w..</text>
</g>
<g >
<title>std::io::Read::read_to_string::{{closure}} (1 samples, 0.10%)</title><rect x="989.0" y="725" width="1.2" height="15.0" fill="rgb(240,57,54)" rx="2" ry="2" />
<text  x="992.05" y="735.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (2 samples, 0.20%)</title><rect x="232.0" y="853" width="2.3" height="15.0" fill="rgb(231,14,4)" rx="2" ry="2" />
<text  x="234.98" y="863.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.40%)</title><rect x="666.6" y="661" width="4.7" height="15.0" fill="rgb(252,157,39)" rx="2" ry="2" />
<text  x="669.59" y="671.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.10%)</title><rect x="11.2" y="837" width="1.1" height="15.0" fill="rgb(234,157,32)" rx="2" ry="2" />
<text  x="14.17" y="847.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.10%)</title><rect x="206.3" y="597" width="1.1" height="15.0" fill="rgb(221,72,9)" rx="2" ry="2" />
<text  x="209.28" y="607.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.10%)</title><rect x="701.6" y="821" width="1.2" height="15.0" fill="rgb(222,32,12)" rx="2" ry="2" />
<text  x="704.64" y="831.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (1 samples, 0.10%)</title><rect x="989.0" y="437" width="1.2" height="15.0" fill="rgb(214,108,39)" rx="2" ry="2" />
<text  x="992.05" y="447.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.10%)</title><rect x="1186.5" y="597" width="1.2" height="15.0" fill="rgb(243,212,2)" rx="2" ry="2" />
<text  x="1189.50" y="607.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (5 samples, 0.50%)</title><rect x="1163.1" y="661" width="5.9" height="15.0" fill="rgb(254,74,28)" rx="2" ry="2" />
<text  x="1166.13" y="671.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.10%)</title><rect x="164.2" y="853" width="1.2" height="15.0" fill="rgb(211,191,43)" rx="2" ry="2" />
<text  x="167.22" y="863.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (3 samples, 0.30%)</title><rect x="243.7" y="661" width="3.5" height="15.0" fill="rgb(248,11,6)" rx="2" ry="2" />
<text  x="246.66" y="671.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.10%)</title><rect x="233.1" y="133" width="1.2" height="15.0" fill="rgb(230,136,8)" rx="2" ry="2" />
<text  x="236.15" y="143.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (4 samples, 0.40%)</title><rect x="227.3" y="709" width="4.7" height="15.0" fill="rgb(209,184,32)" rx="2" ry="2" />
<text  x="230.31" y="719.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.10%)</title><rect x="233.1" y="245" width="1.2" height="15.0" fill="rgb(227,215,16)" rx="2" ry="2" />
<text  x="236.15" y="255.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (2 samples, 0.20%)</title><rect x="688.8" y="789" width="2.3" height="15.0" fill="rgb(238,128,0)" rx="2" ry="2" />
<text  x="691.79" y="799.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.10%)</title><rect x="15.8" y="709" width="1.2" height="15.0" fill="rgb(243,188,30)" rx="2" ry="2" />
<text  x="18.84" y="719.5" ></text>
</g>
<g >
<title>vfs_iter_read (1 samples, 0.10%)</title><rect x="232.0" y="453" width="1.1" height="15.0" fill="rgb(212,19,38)" rx="2" ry="2" />
<text  x="234.98" y="463.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.10%)</title><rect x="232.0" y="325" width="1.1" height="15.0" fill="rgb(211,25,35)" rx="2" ry="2" />
<text  x="234.98" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.20%)</title><rect x="681.8" y="709" width="2.3" height="15.0" fill="rgb(246,149,39)" rx="2" ry="2" />
<text  x="684.78" y="719.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.10%)</title><rect x="12.3" y="853" width="1.2" height="15.0" fill="rgb(228,64,35)" rx="2" ry="2" />
<text  x="15.34" y="863.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (1 samples, 0.10%)</title><rect x="987.9" y="789" width="1.1" height="15.0" fill="rgb(220,2,12)" rx="2" ry="2" />
<text  x="990.88" y="799.5" ></text>
</g>
<g >
<title>do_idle (23 samples, 2.28%)</title><rect x="1163.1" y="773" width="26.9" height="15.0" fill="rgb(222,48,4)" rx="2" ry="2" />
<text  x="1166.13" y="783.5" >d..</text>
</g>
<g >
<title>cpu_startup_entry (74 samples, 7.33%)</title><rect x="1076.7" y="853" width="86.4" height="15.0" fill="rgb(206,146,53)" rx="2" ry="2" />
<text  x="1079.67" y="863.5" >cpu_startu..</text>
</g>
<g >
<title>ext4_file_write_iter (2 samples, 0.20%)</title><rect x="112.8" y="565" width="2.3" height="15.0" fill="rgb(224,10,4)" rx="2" ry="2" />
<text  x="115.81" y="575.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.20%)</title><rect x="124.5" y="805" width="2.3" height="15.0" fill="rgb(234,30,0)" rx="2" ry="2" />
<text  x="127.50" y="815.5" ></text>
</g>
<g >
<title>core::cmp::min (2 samples, 0.20%)</title><rect x="409.6" y="709" width="2.3" height="15.0" fill="rgb(253,227,50)" rx="2" ry="2" />
<text  x="412.56" y="719.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.10%)</title><rect x="1069.7" y="661" width="1.1" height="15.0" fill="rgb(240,207,18)" rx="2" ry="2" />
<text  x="1072.66" y="671.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.10%)</title><rect x="233.1" y="149" width="1.2" height="15.0" fill="rgb(217,92,17)" rx="2" ry="2" />
<text  x="236.15" y="159.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.30%)</title><rect x="171.2" y="677" width="3.5" height="15.0" fill="rgb(233,132,10)" rx="2" ry="2" />
<text  x="174.23" y="687.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.10%)</title><rect x="225.0" y="677" width="1.1" height="15.0" fill="rgb(234,121,40)" rx="2" ry="2" />
<text  x="227.97" y="687.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="33.4" y="629" width="1.1" height="15.0" fill="rgb(236,66,37)" rx="2" ry="2" />
<text  x="36.37" y="639.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="512.4" y="629" width="1.1" height="15.0" fill="rgb(238,141,4)" rx="2" ry="2" />
<text  x="515.38" y="639.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.10%)</title><rect x="1069.7" y="629" width="1.1" height="15.0" fill="rgb(241,138,21)" rx="2" ry="2" />
<text  x="1072.66" y="639.5" ></text>
</g>
<g >
<title>NaClElfImageLoad (1 samples, 0.10%)</title><rect x="232.0" y="757" width="1.1" height="15.0" fill="rgb(237,165,3)" rx="2" ry="2" />
<text  x="234.98" y="767.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (3 samples, 0.30%)</title><rect x="947.0" y="869" width="3.5" height="15.0" fill="rgb(243,198,51)" rx="2" ry="2" />
<text  x="949.99" y="879.5" ></text>
</g>
<g >
<title>std::fs::canonicalize (1 samples, 0.10%)</title><rect x="987.9" y="773" width="1.1" height="15.0" fill="rgb(241,12,48)" rx="2" ry="2" />
<text  x="990.88" y="783.5" ></text>
</g>
<g >
<title>_rl_init_terminal_io (2 samples, 0.20%)</title><rect x="13.5" y="741" width="2.3" height="15.0" fill="rgb(243,208,24)" rx="2" ry="2" />
<text  x="16.50" y="751.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (4 samples, 0.40%)</title><rect x="679.4" y="725" width="4.7" height="15.0" fill="rgb(205,131,19)" rx="2" ry="2" />
<text  x="682.45" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (3 samples, 0.30%)</title><rect x="387.4" y="645" width="3.5" height="15.0" fill="rgb(227,0,49)" rx="2" ry="2" />
<text  x="390.37" y="655.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (1 samples, 0.10%)</title><rect x="10.0" y="629" width="1.2" height="15.0" fill="rgb(218,218,38)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.10%)</title><rect x="170.1" y="693" width="1.1" height="15.0" fill="rgb(221,118,24)" rx="2" ry="2" />
<text  x="173.06" y="703.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.20%)</title><rect x="913.1" y="741" width="2.3" height="15.0" fill="rgb(211,30,46)" rx="2" ry="2" />
<text  x="916.11" y="751.5" ></text>
</g>
<g >
<title>lind_read (112 samples, 11.09%)</title><rect x="235.5" y="789" width="130.8" height="15.0" fill="rgb(223,54,45)" rx="2" ry="2" />
<text  x="238.49" y="799.5" >lind_read</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.10%)</title><rect x="239.0" y="693" width="1.2" height="15.0" fill="rgb(237,169,35)" rx="2" ry="2" />
<text  x="241.99" y="703.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (11 samples, 1.09%)</title><rect x="138.5" y="853" width="12.9" height="15.0" fill="rgb(230,126,1)" rx="2" ry="2" />
<text  x="141.51" y="863.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.10%)</title><rect x="225.0" y="709" width="1.1" height="15.0" fill="rgb(227,175,2)" rx="2" ry="2" />
<text  x="227.97" y="719.5" ></text>
</g>
<g >
<title>should_fail_alloc_page (1 samples, 0.10%)</title><rect x="885.1" y="741" width="1.1" height="15.0" fill="rgb(233,131,7)" rx="2" ry="2" />
<text  x="888.07" y="751.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.10%)</title><rect x="222.6" y="501" width="1.2" height="15.0" fill="rgb(236,95,33)" rx="2" ry="2" />
<text  x="225.63" y="511.5" ></text>
</g>
<g >
<title>lind_pread (1 samples, 0.10%)</title><rect x="232.0" y="709" width="1.1" height="15.0" fill="rgb(229,191,19)" rx="2" ry="2" />
<text  x="234.98" y="719.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (2 samples, 0.20%)</title><rect x="112.8" y="821" width="2.3" height="15.0" fill="rgb(226,207,25)" rx="2" ry="2" />
<text  x="115.81" y="831.5" ></text>
</g>
<g >
<title>kthread_blkcg (1 samples, 0.10%)</title><rect x="889.7" y="741" width="1.2" height="15.0" fill="rgb(237,51,40)" rx="2" ry="2" />
<text  x="892.74" y="751.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.10%)</title><rect x="229.6" y="229" width="1.2" height="15.0" fill="rgb(244,147,36)" rx="2" ry="2" />
<text  x="232.64" y="239.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.10%)</title><rect x="233.1" y="581" width="1.2" height="15.0" fill="rgb(205,95,46)" rx="2" ry="2" />
<text  x="236.15" y="591.5" ></text>
</g>
<g >
<title>error_entry (6 samples, 0.59%)</title><rect x="922.5" y="869" width="7.0" height="15.0" fill="rgb(237,95,1)" rx="2" ry="2" />
<text  x="925.46" y="879.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="512.4" y="597" width="1.1" height="15.0" fill="rgb(211,206,28)" rx="2" ry="2" />
<text  x="515.38" y="607.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.10%)</title><rect x="949.3" y="597" width="1.2" height="15.0" fill="rgb(246,73,19)" rx="2" ry="2" />
<text  x="952.33" y="607.5" ></text>
</g>
<g >
<title>copy_page_from_iter_iovec (1 samples, 0.10%)</title><rect x="947.0" y="709" width="1.2" height="15.0" fill="rgb(252,93,8)" rx="2" ry="2" />
<text  x="949.99" y="719.5" ></text>
</g>
<g >
<title>arch_call_rest_init (23 samples, 2.28%)</title><rect x="1163.1" y="821" width="26.9" height="15.0" fill="rgb(253,13,33)" rx="2" ry="2" />
<text  x="1166.13" y="831.5" >a..</text>
</g>
<g >
<title>irq_exit_rcu (3 samples, 0.30%)</title><rect x="1170.1" y="677" width="3.5" height="15.0" fill="rgb(216,69,42)" rx="2" ry="2" />
<text  x="1173.14" y="687.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (2 samples, 0.20%)</title><rect x="704.0" y="773" width="2.3" height="15.0" fill="rgb(217,152,3)" rx="2" ry="2" />
<text  x="706.98" y="783.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.10%)</title><rect x="222.6" y="341" width="1.2" height="15.0" fill="rgb(231,133,50)" rx="2" ry="2" />
<text  x="225.63" y="351.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.10%)</title><rect x="1186.5" y="645" width="1.2" height="15.0" fill="rgb(238,33,47)" rx="2" ry="2" />
<text  x="1189.50" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.20%)</title><rect x="117.5" y="869" width="2.3" height="15.0" fill="rgb(231,69,13)" rx="2" ry="2" />
<text  x="120.49" y="879.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.10%)</title><rect x="239.0" y="677" width="1.2" height="15.0" fill="rgb(241,190,8)" rx="2" ry="2" />
<text  x="241.99" y="687.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.10%)</title><rect x="1166.6" y="533" width="1.2" height="15.0" fill="rgb(241,112,24)" rx="2" ry="2" />
<text  x="1169.63" y="543.5" ></text>
</g>
<g >
<title>dispatcher (2 samples, 0.20%)</title><rect x="222.6" y="709" width="2.4" height="15.0" fill="rgb(245,55,29)" rx="2" ry="2" />
<text  x="225.63" y="719.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.40%)</title><rect x="227.3" y="613" width="4.7" height="15.0" fill="rgb(254,36,46)" rx="2" ry="2" />
<text  x="230.31" y="623.5" ></text>
</g>
<g >
<title>CachedMapWritableText (1 samples, 0.10%)</title><rect x="170.1" y="789" width="1.1" height="15.0" fill="rgb(240,87,0)" rx="2" ry="2" />
<text  x="173.06" y="799.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.10%)</title><rect x="228.5" y="341" width="1.1" height="15.0" fill="rgb(242,53,13)" rx="2" ry="2" />
<text  x="231.48" y="351.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.10%)</title><rect x="226.1" y="485" width="1.2" height="15.0" fill="rgb(253,221,13)" rx="2" ry="2" />
<text  x="229.14" y="495.5" ></text>
</g>
<g >
<title>lind_write (263 samples, 26.04%)</title><rect x="376.9" y="789" width="307.2" height="15.0" fill="rgb(233,201,39)" rx="2" ry="2" />
<text  x="379.85" y="799.5" >lind_write</text>
</g>
<g >
<title>load_balance (1 samples, 0.10%)</title><rect x="1186.5" y="693" width="1.2" height="15.0" fill="rgb(237,129,5)" rx="2" ry="2" />
<text  x="1189.50" y="703.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="233.1" y="549" width="1.2" height="15.0" fill="rgb(235,144,14)" rx="2" ry="2" />
<text  x="236.15" y="559.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.10%)</title><rect x="111.6" y="837" width="1.2" height="15.0" fill="rgb(237,69,18)" rx="2" ry="2" />
<text  x="114.64" y="847.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (2 samples, 0.20%)</title><rect x="124.5" y="821" width="2.3" height="15.0" fill="rgb(235,157,39)" rx="2" ry="2" />
<text  x="127.50" y="831.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (1 samples, 0.10%)</title><rect x="232.0" y="373" width="1.1" height="15.0" fill="rgb(243,182,1)" rx="2" ry="2" />
<text  x="234.98" y="383.5" ></text>
</g>
<g >
<title>exc_page_fault (4 samples, 0.40%)</title><rect x="215.6" y="789" width="4.7" height="15.0" fill="rgb(220,5,31)" rx="2" ry="2" />
<text  x="218.62" y="799.5" ></text>
</g>
<g >
<title>NaClTextMapClearCacheIfNeeded (1 samples, 0.10%)</title><rect x="170.1" y="805" width="1.1" height="15.0" fill="rgb(236,118,8)" rx="2" ry="2" />
<text  x="173.06" y="815.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.10%)</title><rect x="949.3" y="853" width="1.2" height="15.0" fill="rgb(253,18,39)" rx="2" ry="2" />
<text  x="952.33" y="863.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (3 samples, 0.30%)</title><rect x="171.2" y="757" width="3.5" height="15.0" fill="rgb(235,64,23)" rx="2" ry="2" />
<text  x="174.23" y="767.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.20%)</title><rect x="692.3" y="789" width="2.3" height="15.0" fill="rgb(226,143,29)" rx="2" ry="2" />
<text  x="695.30" y="799.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (3 samples, 0.30%)</title><rect x="387.4" y="693" width="3.5" height="15.0" fill="rgb(252,54,18)" rx="2" ry="2" />
<text  x="390.37" y="703.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.10%)</title><rect x="990.2" y="869" width="1.2" height="15.0" fill="rgb(218,189,18)" rx="2" ry="2" />
<text  x="993.22" y="879.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="677.1" y="645" width="1.2" height="15.0" fill="rgb(244,9,47)" rx="2" ry="2" />
<text  x="680.11" y="655.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.10%)</title><rect x="986.7" y="773" width="1.2" height="15.0" fill="rgb(241,71,46)" rx="2" ry="2" />
<text  x="989.71" y="783.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.10%)</title><rect x="115.1" y="661" width="1.2" height="15.0" fill="rgb(220,125,54)" rx="2" ry="2" />
<text  x="118.15" y="671.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (23 samples, 2.28%)</title><rect x="1163.1" y="869" width="26.9" height="15.0" fill="rgb(223,5,9)" rx="2" ry="2" />
<text  x="1166.13" y="879.5" >x..</text>
</g>
<g >
<title>NaClAppThreadTeardown (1 samples, 0.10%)</title><rect x="225.0" y="821" width="1.1" height="15.0" fill="rgb(224,33,43)" rx="2" ry="2" />
<text  x="227.97" y="831.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.10%)</title><rect x="876.9" y="677" width="1.2" height="15.0" fill="rgb(248,202,52)" rx="2" ry="2" />
<text  x="879.89" y="687.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.20%)</title><rect x="1073.2" y="725" width="2.3" height="15.0" fill="rgb(221,131,27)" rx="2" ry="2" />
<text  x="1076.17" y="735.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.40%)</title><rect x="227.3" y="501" width="4.7" height="15.0" fill="rgb(206,226,13)" rx="2" ry="2" />
<text  x="230.31" y="511.5" ></text>
</g>
<g >
<title>lru_cache_add (12 samples, 1.19%)</title><rect x="893.2" y="741" width="14.1" height="15.0" fill="rgb(233,156,8)" rx="2" ry="2" />
<text  x="896.25" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.10%)</title><rect x="949.3" y="805" width="1.2" height="15.0" fill="rgb(213,36,11)" rx="2" ry="2" />
<text  x="952.33" y="815.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.10%)</title><rect x="917.8" y="741" width="1.2" height="15.0" fill="rgb(234,13,26)" rx="2" ry="2" />
<text  x="920.78" y="751.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.10%)</title><rect x="949.3" y="613" width="1.2" height="15.0" fill="rgb(224,102,33)" rx="2" ry="2" />
<text  x="952.33" y="623.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (4 samples, 0.40%)</title><rect x="159.5" y="853" width="4.7" height="15.0" fill="rgb(225,25,44)" rx="2" ry="2" />
<text  x="162.54" y="863.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.10%)</title><rect x="223.8" y="229" width="1.2" height="15.0" fill="rgb(224,162,43)" rx="2" ry="2" />
<text  x="226.80" y="239.5" ></text>
</g>
</g>
</svg>
