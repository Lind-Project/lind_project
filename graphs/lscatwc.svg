<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>schedule (1 samples, 0.72%)</title><rect x="77.9" y="373" width="8.5" height="15.0" fill="rgb(231,163,0)" rx="2" ry="2" />
<text  x="80.91" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.44%)</title><rect x="1079.6" y="453" width="17.0" height="15.0" fill="rgb(227,30,43)" rx="2" ry="2" />
<text  x="1082.64" y="463.5" ></text>
</g>
<g >
<title>NaClAppThreadSpawn (40 samples, 28.78%)</title><rect x="714.6" y="309" width="339.6" height="15.0" fill="rgb(221,39,23)" rx="2" ry="2" />
<text  x="717.60" y="319.5" >NaClAppThreadSpawn</text>
</g>
<g >
<title>__do_page_fault (14 samples, 10.07%)</title><rect x="909.9" y="181" width="118.8" height="15.0" fill="rgb(233,64,40)" rx="2" ry="2" />
<text  x="912.86" y="191.5" >__do_page_fault</text>
</g>
<g >
<title>sys_ioctl (64 samples, 46.04%)</title><rect x="86.4" y="437" width="543.3" height="15.0" fill="rgb(233,181,51)" rx="2" ry="2" />
<text  x="89.40" y="447.5" >sys_ioctl</text>
</g>
<g >
<title>tty_write (1 samples, 0.72%)</title><rect x="1088.1" y="309" width="8.5" height="15.0" fill="rgb(212,24,37)" rx="2" ry="2" />
<text  x="1091.13" y="319.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.72%)</title><rect x="1181.5" y="501" width="8.5" height="15.0" fill="rgb(206,137,52)" rx="2" ry="2" />
<text  x="1184.51" y="511.5" ></text>
</g>
<g >
<title>[unknown]  (42 samples, 30.22%)</title><rect x="697.6" y="501" width="356.6" height="15.0" fill="rgb(246,42,11)" rx="2" ry="2" />
<text  x="700.63" y="511.5" >[unknown] </text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 0.72%)</title><rect x="1181.5" y="565" width="8.5" height="15.0" fill="rgb(228,78,44)" rx="2" ry="2" />
<text  x="1184.51" y="575.5" ></text>
</g>
<g >
<title>filemap_map_pages (2 samples, 1.44%)</title><rect x="969.3" y="133" width="17.0" height="15.0" fill="rgb(233,99,14)" rx="2" ry="2" />
<text  x="972.28" y="143.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.72%)</title><rect x="986.3" y="133" width="8.4" height="15.0" fill="rgb(225,83,44)" rx="2" ry="2" />
<text  x="989.26" y="143.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.44%)</title><rect x="1079.6" y="405" width="17.0" height="15.0" fill="rgb(249,22,24)" rx="2" ry="2" />
<text  x="1082.64" y="415.5" ></text>
</g>
<g >
<title>run_builtin (65 samples, 46.76%)</title><rect x="77.9" y="533" width="551.8" height="15.0" fill="rgb(230,43,9)" rx="2" ry="2" />
<text  x="80.91" y="543.5" >run_builtin</text>
</g>
<g >
<title>cpuidle_enter_state (10 samples, 7.19%)</title><rect x="1096.6" y="485" width="84.9" height="15.0" fill="rgb(254,47,7)" rx="2" ry="2" />
<text  x="1099.62" y="495.5" >cpuidle_e..</text>
</g>
<g >
<title>preallocate_pmds.constprop.18 (1 samples, 0.72%)</title><rect x="629.7" y="389" width="8.5" height="15.0" fill="rgb(219,31,27)" rx="2" ry="2" />
<text  x="632.71" y="399.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.44%)</title><rect x="1079.6" y="533" width="17.0" height="15.0" fill="rgb(213,210,19)" rx="2" ry="2" />
<text  x="1082.64" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.72%)</title><rect x="1054.2" y="533" width="8.5" height="15.0" fill="rgb(252,143,9)" rx="2" ry="2" />
<text  x="1057.17" y="543.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.72%)</title><rect x="697.6" y="293" width="8.5" height="15.0" fill="rgb(236,108,42)" rx="2" ry="2" />
<text  x="700.63" y="303.5" ></text>
</g>
<g >
<title>run_builtin (1 samples, 0.72%)</title><rect x="629.7" y="549" width="8.5" height="15.0" fill="rgb(246,218,30)" rx="2" ry="2" />
<text  x="632.71" y="559.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.72%)</title><rect x="1003.2" y="133" width="8.5" height="15.0" fill="rgb(246,161,2)" rx="2" ry="2" />
<text  x="1006.24" y="143.5" ></text>
</g>
<g >
<title>NaClSysExecve (2 samples, 1.44%)</title><rect x="697.6" y="325" width="17.0" height="15.0" fill="rgb(221,225,27)" rx="2" ry="2" />
<text  x="700.63" y="335.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.72%)</title><rect x="943.8" y="69" width="8.5" height="15.0" fill="rgb(225,117,35)" rx="2" ry="2" />
<text  x="946.81" y="79.5" ></text>
</g>
<g >
<title>swapper (13 samples, 9.35%)</title><rect x="1079.6" y="597" width="110.4" height="15.0" fill="rgb(231,223,3)" rx="2" ry="2" />
<text  x="1082.64" y="607.5" >swapper</text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.72%)</title><rect x="60.9" y="501" width="8.5" height="15.0" fill="rgb(233,17,8)" rx="2" ry="2" />
<text  x="63.94" y="511.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 0.72%)</title><rect x="1181.5" y="549" width="8.5" height="15.0" fill="rgb(218,15,45)" rx="2" ry="2" />
<text  x="1184.51" y="559.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.72%)</title><rect x="697.6" y="277" width="8.5" height="15.0" fill="rgb(247,90,22)" rx="2" ry="2" />
<text  x="700.63" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.72%)</title><rect x="1088.1" y="373" width="8.5" height="15.0" fill="rgb(221,104,24)" rx="2" ry="2" />
<text  x="1091.13" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.72%)</title><rect x="1181.5" y="469" width="8.5" height="15.0" fill="rgb(224,142,10)" rx="2" ry="2" />
<text  x="1184.51" y="479.5" ></text>
</g>
<g >
<title>start_secondary (10 samples, 7.19%)</title><rect x="1096.6" y="565" width="84.9" height="15.0" fill="rgb(216,110,10)" rx="2" ry="2" />
<text  x="1099.62" y="575.5" >start_sec..</text>
</g>
<g >
<title>[perf-1873.map] (2 samples, 1.44%)</title><rect x="697.6" y="389" width="17.0" height="15.0" fill="rgb(210,156,54)" rx="2" ry="2" />
<text  x="700.63" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (26 samples, 18.71%)</title><rect x="808.0" y="229" width="220.7" height="15.0" fill="rgb(222,63,48)" rx="2" ry="2" />
<text  x="810.99" y="239.5" >__memmove_avx_unaligned_erms</text>
</g>
<g >
<title>sel_ldr (52 samples, 37.41%)</title><rect x="638.2" y="597" width="441.4" height="15.0" fill="rgb(227,225,24)" rx="2" ry="2" />
<text  x="641.20" y="607.5" >sel_ldr</text>
</g>
<g >
<title>[unknown] (2 samples, 1.44%)</title><rect x="1079.6" y="581" width="17.0" height="15.0" fill="rgb(210,1,19)" rx="2" ry="2" />
<text  x="1082.64" y="591.5" ></text>
</g>
<g >
<title>__vfs_write (1 samples, 0.72%)</title><rect x="1088.1" y="325" width="8.5" height="15.0" fill="rgb(206,13,20)" rx="2" ry="2" />
<text  x="1091.13" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 1.44%)</title><rect x="952.3" y="117" width="17.0" height="15.0" fill="rgb(211,14,24)" rx="2" ry="2" />
<text  x="955.30" y="127.5" ></text>
</g>
<g >
<title>nmi_handle (1 samples, 0.72%)</title><rect x="493.9" y="197" width="8.5" height="15.0" fill="rgb(245,109,6)" rx="2" ry="2" />
<text  x="496.88" y="207.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.72%)</title><rect x="1088.1" y="293" width="8.5" height="15.0" fill="rgb(238,42,46)" rx="2" ry="2" />
<text  x="1091.13" y="303.5" ></text>
</g>
<g >
<title>NaClPatchAddr (2 samples, 1.44%)</title><rect x="1028.7" y="261" width="17.0" height="15.0" fill="rgb(254,23,27)" rx="2" ry="2" />
<text  x="1031.71" y="271.5" ></text>
</g>
<g >
<title>page_fault (15 samples, 10.79%)</title><rect x="901.4" y="213" width="127.3" height="15.0" fill="rgb(250,28,33)" rx="2" ry="2" />
<text  x="904.37" y="223.5" >page_fault</text>
</g>
<g >
<title>shmem_getpage_gfp (2 samples, 1.44%)</title><rect x="935.3" y="101" width="17.0" height="15.0" fill="rgb(221,11,44)" rx="2" ry="2" />
<text  x="938.32" y="111.5" ></text>
</g>
<g >
<title>cpu_startup_entry (10 samples, 7.19%)</title><rect x="1096.6" y="549" width="84.9" height="15.0" fill="rgb(230,206,11)" rx="2" ry="2" />
<text  x="1099.62" y="559.5" >cpu_start..</text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.72%)</title><rect x="986.3" y="101" width="8.4" height="15.0" fill="rgb(241,34,8)" rx="2" ry="2" />
<text  x="989.26" y="111.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.72%)</title><rect x="1011.7" y="117" width="8.5" height="15.0" fill="rgb(239,106,46)" rx="2" ry="2" />
<text  x="1014.73" y="127.5" ></text>
</g>
<g >
<title>start_secondary (6 samples, 4.32%)</title><rect x="18.5" y="565" width="50.9" height="15.0" fill="rgb(230,37,46)" rx="2" ry="2" />
<text  x="21.49" y="575.5" >start..</text>
</g>
<g >
<title>cpuidle_enter_state (5 samples, 3.60%)</title><rect x="18.5" y="485" width="42.4" height="15.0" fill="rgb(233,179,1)" rx="2" ry="2" />
<text  x="21.49" y="495.5" >cpu..</text>
</g>
<g >
<title>NaClCopyDynamicText (37 samples, 26.62%)</title><rect x="714.6" y="261" width="314.1" height="15.0" fill="rgb(213,176,53)" rx="2" ry="2" />
<text  x="717.60" y="271.5" >NaClCopyDynamicText</text>
</g>
<g >
<title>__perf_event_enable (64 samples, 46.04%)</title><rect x="86.4" y="277" width="543.3" height="15.0" fill="rgb(218,17,33)" rx="2" ry="2" />
<text  x="89.40" y="287.5" >__perf_event_enable</text>
</g>
<g >
<title>call_cpuidle (5 samples, 3.60%)</title><rect x="18.5" y="517" width="42.4" height="15.0" fill="rgb(229,98,31)" rx="2" ry="2" />
<text  x="21.49" y="527.5" >cal..</text>
</g>
<g >
<title>lookdict_string.lto_priv.0 (1 samples, 0.72%)</title><rect x="1062.7" y="565" width="8.5" height="15.0" fill="rgb(221,104,25)" rx="2" ry="2" />
<text  x="1065.66" y="575.5" ></text>
</g>
<g >
<title>perf (66 samples, 47.48%)</title><rect x="77.9" y="597" width="560.3" height="15.0" fill="rgb(253,20,0)" rx="2" ry="2" />
<text  x="80.91" y="607.5" >perf</text>
</g>
<g >
<title>mm_alloc (1 samples, 0.72%)</title><rect x="629.7" y="421" width="8.5" height="15.0" fill="rgb(233,148,0)" rx="2" ry="2" />
<text  x="632.71" y="431.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.72%)</title><rect x="77.9" y="357" width="8.5" height="15.0" fill="rgb(205,65,8)" rx="2" ry="2" />
<text  x="80.91" y="367.5" ></text>
</g>
<g >
<title>[unknown]  (42 samples, 30.22%)</title><rect x="697.6" y="485" width="356.6" height="15.0" fill="rgb(222,139,48)" rx="2" ry="2" />
<text  x="700.63" y="495.5" >[unknown] </text>
</g>
<g >
<title>main (65 samples, 46.76%)</title><rect x="77.9" y="549" width="551.8" height="15.0" fill="rgb(205,6,26)" rx="2" ry="2" />
<text  x="80.91" y="559.5" >main</text>
</g>
<g >
<title>find_vma (1 samples, 0.72%)</title><rect x="918.3" y="165" width="8.5" height="15.0" fill="rgb(227,149,13)" rx="2" ry="2" />
<text  x="921.35" y="175.5" ></text>
</g>
<g >
<title>sys_poll (1 samples, 0.72%)</title><rect x="77.9" y="453" width="8.5" height="15.0" fill="rgb(223,146,46)" rx="2" ry="2" />
<text  x="80.91" y="463.5" ></text>
</g>
<g >
<title>sys_write (1 samples, 0.72%)</title><rect x="1088.1" y="357" width="8.5" height="15.0" fill="rgb(220,100,51)" rx="2" ry="2" />
<text  x="1091.13" y="367.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.72%)</title><rect x="629.7" y="581" width="8.5" height="15.0" fill="rgb(230,99,36)" rx="2" ry="2" />
<text  x="632.71" y="591.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.72%)</title><rect x="60.9" y="517" width="8.5" height="15.0" fill="rgb(240,227,30)" rx="2" ry="2" />
<text  x="63.94" y="527.5" ></text>
</g>
<g >
<title>NaClVmCopyEntry (11 samples, 7.91%)</title><rect x="714.6" y="229" width="93.4" height="15.0" fill="rgb(228,92,50)" rx="2" ry="2" />
<text  x="717.60" y="239.5" >NaClVmCopyE..</text>
</g>
<g >
<title>unlock_page (1 samples, 0.72%)</title><rect x="1020.2" y="133" width="8.5" height="15.0" fill="rgb(226,65,22)" rx="2" ry="2" />
<text  x="1023.22" y="143.5" ></text>
</g>
<g >
<title>NaClSysFork (40 samples, 28.78%)</title><rect x="714.6" y="341" width="339.6" height="15.0" fill="rgb(246,170,2)" rx="2" ry="2" />
<text  x="717.60" y="351.5" >NaClSysFork</text>
</g>
<g >
<title>PyObject_CallFunctionObjArgs (1 samples, 0.72%)</title><rect x="655.2" y="565" width="8.5" height="15.0" fill="rgb(213,87,54)" rx="2" ry="2" />
<text  x="658.18" y="575.5" ></text>
</g>
<g >
<title>intel_idle (10 samples, 7.19%)</title><rect x="1096.6" y="469" width="84.9" height="15.0" fill="rgb(215,91,7)" rx="2" ry="2" />
<text  x="1099.62" y="479.5" >intel_idle</text>
</g>
<g >
<title>NaClApplyPatchToMemory (1 samples, 0.72%)</title><rect x="697.6" y="197" width="8.5" height="15.0" fill="rgb(252,85,3)" rx="2" ry="2" />
<text  x="700.63" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.72%)</title><rect x="629.7" y="469" width="8.5" height="15.0" fill="rgb(214,139,48)" rx="2" ry="2" />
<text  x="632.71" y="479.5" ></text>
</g>
<g >
<title>get_user_pages_fast (1 samples, 0.72%)</title><rect x="1079.6" y="277" width="8.5" height="15.0" fill="rgb(228,26,28)" rx="2" ry="2" />
<text  x="1082.64" y="287.5" ></text>
</g>
<g >
<title>[unknown] (44 samples, 31.65%)</title><rect x="680.6" y="565" width="373.6" height="15.0" fill="rgb(240,167,24)" rx="2" ry="2" />
<text  x="683.65" y="575.5" >[unknown]</text>
</g>
<g >
<title>page_fault (1 samples, 0.72%)</title><rect x="1054.2" y="549" width="8.5" height="15.0" fill="rgb(237,60,15)" rx="2" ry="2" />
<text  x="1057.17" y="559.5" ></text>
</g>
<g >
<title>NaClCopyExecutionContext (39 samples, 28.06%)</title><rect x="714.6" y="277" width="331.1" height="15.0" fill="rgb(208,73,25)" rx="2" ry="2" />
<text  x="717.60" y="287.5" >NaClCopyExecutionContext</text>
</g>
<g >
<title>NaClSysDyncodeCreate (1 samples, 0.72%)</title><rect x="689.1" y="453" width="8.5" height="15.0" fill="rgb(228,26,12)" rx="2" ry="2" />
<text  x="692.14" y="463.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 46.04%)</title><rect x="86.4" y="229" width="543.3" height="15.0" fill="rgb(220,8,52)" rx="2" ry="2" />
<text  x="89.40" y="239.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 46.04%)</title><rect x="86.4" y="245" width="543.3" height="15.0" fill="rgb(229,181,49)" rx="2" ry="2" />
<text  x="89.40" y="255.5" >x86_pmu_enable</text>
</g>
<g >
<title>[unknown]  (42 samples, 30.22%)</title><rect x="697.6" y="453" width="356.6" height="15.0" fill="rgb(239,114,17)" rx="2" ry="2" />
<text  x="700.63" y="463.5" >[unknown] </text>
</g>
<g >
<title>ctx_resched (64 samples, 46.04%)</title><rect x="86.4" y="261" width="543.3" height="15.0" fill="rgb(236,28,33)" rx="2" ry="2" />
<text  x="89.40" y="271.5" >ctx_resched</text>
</g>
<g >
<title>cpu_startup_entry (6 samples, 4.32%)</title><rect x="18.5" y="549" width="50.9" height="15.0" fill="rgb(233,205,41)" rx="2" ry="2" />
<text  x="21.49" y="559.5" >cpu_s..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.72%)</title><rect x="1079.6" y="357" width="8.5" height="15.0" fill="rgb(251,45,28)" rx="2" ry="2" />
<text  x="1082.64" y="367.5" ></text>
</g>
<g >
<title>radix_tree_next_chunk (1 samples, 0.72%)</title><rect x="977.8" y="117" width="8.5" height="15.0" fill="rgb(215,220,50)" rx="2" ry="2" />
<text  x="980.77" y="127.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.44%)</title><rect x="1079.6" y="421" width="17.0" height="15.0" fill="rgb(228,45,24)" rx="2" ry="2" />
<text  x="1082.64" y="431.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.72%)</title><rect x="697.6" y="261" width="8.5" height="15.0" fill="rgb(238,185,37)" rx="2" ry="2" />
<text  x="700.63" y="271.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2 samples, 1.44%)</title><rect x="697.6" y="357" width="17.0" height="15.0" fill="rgb(237,133,44)" rx="2" ry="2" />
<text  x="700.63" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.72%)</title><rect x="10.0" y="581" width="8.5" height="15.0" fill="rgb(246,174,54)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.72%)</title><rect x="1088.1" y="341" width="8.5" height="15.0" fill="rgb(227,211,2)" rx="2" ry="2" />
<text  x="1091.13" y="351.5" ></text>
</g>
<g >
<title>rest_init (1 samples, 0.72%)</title><rect x="1181.5" y="517" width="8.5" height="15.0" fill="rgb(247,78,25)" rx="2" ry="2" />
<text  x="1184.51" y="527.5" ></text>
</g>
<g >
<title>handle_mm_fault (12 samples, 8.63%)</title><rect x="926.8" y="165" width="101.9" height="15.0" fill="rgb(210,176,5)" rx="2" ry="2" />
<text  x="929.83" y="175.5" >handle_mm_fa..</text>
</g>
<g >
<title>journal-offline (7 samples, 5.04%)</title><rect x="10.0" y="597" width="59.4" height="15.0" fill="rgb(240,65,24)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >journa..</text>
</g>
<g >
<title>error_entry (1 samples, 0.72%)</title><rect x="69.4" y="549" width="8.5" height="15.0" fill="rgb(250,30,4)" rx="2" ry="2" />
<text  x="72.42" y="559.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (2 samples, 1.44%)</title><rect x="697.6" y="341" width="17.0" height="15.0" fill="rgb(237,130,0)" rx="2" ry="2" />
<text  x="700.63" y="351.5" ></text>
</g>
<g >
<title>[perf-1873.map] (1 samples, 0.72%)</title><rect x="689.1" y="533" width="8.5" height="15.0" fill="rgb(227,161,22)" rx="2" ry="2" />
<text  x="692.14" y="543.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.72%)</title><rect x="1181.5" y="485" width="8.5" height="15.0" fill="rgb(230,137,34)" rx="2" ry="2" />
<text  x="1184.51" y="495.5" ></text>
</g>
<g >
<title>all (139 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(243,53,17)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>[unknown]  (42 samples, 30.22%)</title><rect x="697.6" y="437" width="356.6" height="15.0" fill="rgb(214,128,53)" rx="2" ry="2" />
<text  x="700.63" y="447.5" >[unknown] </text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.72%)</title><rect x="697.6" y="309" width="8.5" height="15.0" fill="rgb(231,205,17)" rx="2" ry="2" />
<text  x="700.63" y="319.5" ></text>
</g>
<g >
<title>call_cpuidle (10 samples, 7.19%)</title><rect x="1096.6" y="517" width="84.9" height="15.0" fill="rgb(210,199,9)" rx="2" ry="2" />
<text  x="1099.62" y="527.5" >call_cpui..</text>
</g>
<g >
<title>native_write_msr (48 samples, 34.53%)</title><rect x="86.4" y="197" width="407.5" height="15.0" fill="rgb(239,40,0)" rx="2" ry="2" />
<text  x="89.40" y="207.5" >native_write_msr</text>
</g>
<g >
<title>NaClPatchOneTrampoline (1 samples, 0.72%)</title><rect x="697.6" y="229" width="8.5" height="15.0" fill="rgb(211,181,10)" rx="2" ry="2" />
<text  x="700.63" y="239.5" ></text>
</g>
<g >
<title>[perf-1873.map] (1 samples, 0.72%)</title><rect x="689.1" y="517" width="8.5" height="15.0" fill="rgb(205,8,4)" rx="2" ry="2" />
<text  x="692.14" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.72%)</title><rect x="77.9" y="485" width="8.5" height="15.0" fill="rgb(233,49,25)" rx="2" ry="2" />
<text  x="80.91" y="495.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.72%)</title><rect x="629.7" y="437" width="8.5" height="15.0" fill="rgb(253,58,53)" rx="2" ry="2" />
<text  x="632.71" y="447.5" ></text>
</g>
<g >
<title>NaClVmmapVisit (37 samples, 26.62%)</title><rect x="714.6" y="245" width="314.1" height="15.0" fill="rgb(212,218,13)" rx="2" ry="2" />
<text  x="717.60" y="255.5" >NaClVmmapVisit</text>
</g>
<g >
<title>cpuidle_enter (5 samples, 3.60%)</title><rect x="18.5" y="501" width="42.4" height="15.0" fill="rgb(251,141,24)" rx="2" ry="2" />
<text  x="21.49" y="511.5" >cpu..</text>
</g>
<g >
<title>[sel_ldr] (1 samples, 0.72%)</title><rect x="689.1" y="501" width="8.5" height="15.0" fill="rgb(247,6,3)" rx="2" ry="2" />
<text  x="692.14" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (64 samples, 46.04%)</title><rect x="86.4" y="453" width="543.3" height="15.0" fill="rgb(224,53,2)" rx="2" ry="2" />
<text  x="89.40" y="463.5" >do_syscall_64</text>
</g>
<g >
<title>[unknown]  (40 samples, 28.78%)</title><rect x="714.6" y="405" width="339.6" height="15.0" fill="rgb(237,156,28)" rx="2" ry="2" />
<text  x="717.60" y="415.5" >[unknown] </text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.72%)</title><rect x="986.3" y="85" width="8.4" height="15.0" fill="rgb(245,22,24)" rx="2" ry="2" />
<text  x="989.26" y="95.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 35.25%)</title><rect x="655.2" y="581" width="416.0" height="15.0" fill="rgb(218,67,14)" rx="2" ry="2" />
<text  x="658.18" y="591.5" >[unknown]</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 46.04%)</title><rect x="86.4" y="469" width="543.3" height="15.0" fill="rgb(222,86,37)" rx="2" ry="2" />
<text  x="89.40" y="479.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>cmd_record (65 samples, 46.76%)</title><rect x="77.9" y="517" width="551.8" height="15.0" fill="rgb(235,101,43)" rx="2" ry="2" />
<text  x="80.91" y="527.5" >cmd_record</text>
</g>
<g >
<title>event_function (64 samples, 46.04%)</title><rect x="86.4" y="293" width="543.3" height="15.0" fill="rgb(222,152,52)" rx="2" ry="2" />
<text  x="89.40" y="303.5" >event_function</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.72%)</title><rect x="960.8" y="101" width="8.5" height="15.0" fill="rgb(216,179,28)" rx="2" ry="2" />
<text  x="963.79" y="111.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.72%)</title><rect x="1045.7" y="213" width="8.5" height="15.0" fill="rgb(213,59,43)" rx="2" ry="2" />
<text  x="1048.68" y="223.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.44%)</title><rect x="1079.6" y="501" width="17.0" height="15.0" fill="rgb(206,91,28)" rx="2" ry="2" />
<text  x="1082.64" y="511.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.44%)</title><rect x="1079.6" y="549" width="17.0" height="15.0" fill="rgb(209,110,52)" rx="2" ry="2" />
<text  x="1082.64" y="559.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.72%)</title><rect x="1079.6" y="293" width="8.5" height="15.0" fill="rgb(247,118,53)" rx="2" ry="2" />
<text  x="1082.64" y="303.5" ></text>
</g>
<g >
<title>cpuidle_enter (10 samples, 7.19%)</title><rect x="1096.6" y="501" width="84.9" height="15.0" fill="rgb(227,210,54)" rx="2" ry="2" />
<text  x="1099.62" y="511.5" >cpuidle_e..</text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 46.04%)</title><rect x="86.4" y="389" width="543.3" height="15.0" fill="rgb(252,73,51)" rx="2" ry="2" />
<text  x="89.40" y="399.5" >perf_event_for_each_child</text>
</g>
<g >
<title>NaClSyscallCSegHook (1 samples, 0.72%)</title><rect x="689.1" y="485" width="8.5" height="15.0" fill="rgb(251,92,21)" rx="2" ry="2" />
<text  x="692.14" y="495.5" ></text>
</g>
<g >
<title>__do_fault (2 samples, 1.44%)</title><rect x="935.3" y="133" width="17.0" height="15.0" fill="rgb(208,226,7)" rx="2" ry="2" />
<text  x="938.32" y="143.5" ></text>
</g>
<g >
<title>start_kernel (1 samples, 0.72%)</title><rect x="1181.5" y="533" width="8.5" height="15.0" fill="rgb(247,25,39)" rx="2" ry="2" />
<text  x="1184.51" y="543.5" ></text>
</g>
<g >
<title>do_idle (6 samples, 4.32%)</title><rect x="18.5" y="533" width="50.9" height="15.0" fill="rgb(239,218,28)" rx="2" ry="2" />
<text  x="21.49" y="543.5" >do_idle</text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.72%)</title><rect x="994.7" y="117" width="8.5" height="15.0" fill="rgb(209,52,12)" rx="2" ry="2" />
<text  x="997.75" y="127.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.72%)</title><rect x="689.1" y="405" width="8.5" height="15.0" fill="rgb(243,79,18)" rx="2" ry="2" />
<text  x="692.14" y="415.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (1 samples, 0.72%)</title><rect x="943.8" y="37" width="8.5" height="15.0" fill="rgb(211,51,38)" rx="2" ry="2" />
<text  x="946.81" y="47.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 0.72%)</title><rect x="629.7" y="533" width="8.5" height="15.0" fill="rgb(245,163,14)" rx="2" ry="2" />
<text  x="632.71" y="543.5" ></text>
</g>
<g >
<title>__GI___ioctl (64 samples, 46.04%)</title><rect x="86.4" y="485" width="543.3" height="15.0" fill="rgb(224,30,24)" rx="2" ry="2" />
<text  x="89.40" y="495.5" >__GI___ioctl</text>
</g>
<g >
<title>__handle_mm_fault (12 samples, 8.63%)</title><rect x="926.8" y="149" width="101.9" height="15.0" fill="rgb(231,80,45)" rx="2" ry="2" />
<text  x="929.83" y="159.5" >__handle_mm_..</text>
</g>
<g >
<title>do_futex (1 samples, 0.72%)</title><rect x="1079.6" y="325" width="8.5" height="15.0" fill="rgb(238,163,41)" rx="2" ry="2" />
<text  x="1082.64" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.72%)</title><rect x="1071.2" y="581" width="8.4" height="15.0" fill="rgb(226,18,23)" rx="2" ry="2" />
<text  x="1074.15" y="591.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.72%)</title><rect x="1181.5" y="453" width="8.5" height="15.0" fill="rgb(239,179,42)" rx="2" ry="2" />
<text  x="1184.51" y="463.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.44%)</title><rect x="1079.6" y="485" width="17.0" height="15.0" fill="rgb(250,74,3)" rx="2" ry="2" />
<text  x="1082.64" y="495.5" ></text>
</g>
<g >
<title>[perf-1873.map] (2 samples, 1.44%)</title><rect x="697.6" y="405" width="17.0" height="15.0" fill="rgb(244,183,17)" rx="2" ry="2" />
<text  x="700.63" y="415.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 1.44%)</title><rect x="952.3" y="133" width="17.0" height="15.0" fill="rgb(241,27,1)" rx="2" ry="2" />
<text  x="955.30" y="143.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.72%)</title><rect x="689.1" y="389" width="8.5" height="15.0" fill="rgb(225,179,19)" rx="2" ry="2" />
<text  x="692.14" y="399.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.72%)</title><rect x="1045.7" y="229" width="8.5" height="15.0" fill="rgb(227,81,18)" rx="2" ry="2" />
<text  x="1048.68" y="239.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.72%)</title><rect x="1079.6" y="341" width="8.5" height="15.0" fill="rgb(235,226,53)" rx="2" ry="2" />
<text  x="1082.64" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.72%)</title><rect x="1088.1" y="389" width="8.5" height="15.0" fill="rgb(224,187,11)" rx="2" ry="2" />
<text  x="1091.13" y="399.5" ></text>
</g>
<g >
<title>PyObject_Realloc (1 samples, 0.72%)</title><rect x="663.7" y="565" width="8.5" height="15.0" fill="rgb(247,21,8)" rx="2" ry="2" />
<text  x="666.67" y="575.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (40 samples, 28.78%)</title><rect x="714.6" y="357" width="339.6" height="15.0" fill="rgb(228,80,22)" rx="2" ry="2" />
<text  x="717.60" y="367.5" >NaClSysForkDecoder</text>
</g>
<g >
<title>do_page_fault (14 samples, 10.07%)</title><rect x="909.9" y="197" width="118.8" height="15.0" fill="rgb(223,134,32)" rx="2" ry="2" />
<text  x="912.86" y="207.5" >do_page_fault</text>
</g>
<g >
<title>NaClCreateThread (40 samples, 28.78%)</title><rect x="714.6" y="325" width="339.6" height="15.0" fill="rgb(246,52,12)" rx="2" ry="2" />
<text  x="717.60" y="335.5" >NaClCreateThread</text>
</g>
<g >
<title>[unknown]  (42 samples, 30.22%)</title><rect x="697.6" y="469" width="356.6" height="15.0" fill="rgb(231,170,8)" rx="2" ry="2" />
<text  x="700.63" y="479.5" >[unknown] </text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.72%)</title><rect x="986.3" y="117" width="8.4" height="15.0" fill="rgb(234,199,22)" rx="2" ry="2" />
<text  x="989.26" y="127.5" ></text>
</g>
<g >
<title>_perf_event_enable (64 samples, 46.04%)</title><rect x="86.4" y="373" width="543.3" height="15.0" fill="rgb(211,194,42)" rx="2" ry="2" />
<text  x="89.40" y="383.5" >_perf_event_enable</text>
</g>
<g >
<title>[unknown] (2 samples, 1.44%)</title><rect x="1079.6" y="565" width="17.0" height="15.0" fill="rgb(229,196,52)" rx="2" ry="2" />
<text  x="1082.64" y="575.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.72%)</title><rect x="1054.2" y="565" width="8.5" height="15.0" fill="rgb(213,75,31)" rx="2" ry="2" />
<text  x="1057.17" y="575.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.72%)</title><rect x="1054.2" y="517" width="8.5" height="15.0" fill="rgb(246,176,20)" rx="2" ry="2" />
<text  x="1057.17" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.72%)</title><rect x="1079.6" y="389" width="8.5" height="15.0" fill="rgb(228,173,50)" rx="2" ry="2" />
<text  x="1082.64" y="399.5" ></text>
</g>
<g >
<title>mm_init (1 samples, 0.72%)</title><rect x="629.7" y="405" width="8.5" height="15.0" fill="rgb(238,157,40)" rx="2" ry="2" />
<text  x="632.71" y="415.5" ></text>
</g>
<g >
<title>find_lock_entry (1 samples, 0.72%)</title><rect x="943.8" y="85" width="8.5" height="15.0" fill="rgb(244,27,37)" rx="2" ry="2" />
<text  x="946.81" y="95.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampolineCall (1 samples, 0.72%)</title><rect x="697.6" y="213" width="8.5" height="15.0" fill="rgb(249,206,32)" rx="2" ry="2" />
<text  x="700.63" y="223.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.72%)</title><rect x="1045.7" y="245" width="8.5" height="15.0" fill="rgb(238,29,43)" rx="2" ry="2" />
<text  x="1048.68" y="255.5" ></text>
</g>
<g >
<title>do_idle (10 samples, 7.19%)</title><rect x="1096.6" y="533" width="84.9" height="15.0" fill="rgb(228,203,23)" rx="2" ry="2" />
<text  x="1099.62" y="543.5" >do_idle</text>
</g>
<g >
<title>PyEval_EvalFrameEx (2 samples, 1.44%)</title><rect x="638.2" y="581" width="17.0" height="15.0" fill="rgb(244,199,54)" rx="2" ry="2" />
<text  x="641.20" y="591.5" ></text>
</g>
<g >
<title>radix_tree_lookup_slot (1 samples, 0.72%)</title><rect x="943.8" y="53" width="8.5" height="15.0" fill="rgb(216,99,8)" rx="2" ry="2" />
<text  x="946.81" y="63.5" ></text>
</g>
<g >
<title>shmem_fault (2 samples, 1.44%)</title><rect x="935.3" y="117" width="17.0" height="15.0" fill="rgb(248,183,50)" rx="2" ry="2" />
<text  x="938.32" y="127.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.72%)</title><rect x="77.9" y="405" width="8.5" height="15.0" fill="rgb(207,37,23)" rx="2" ry="2" />
<text  x="80.91" y="415.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 46.76%)</title><rect x="77.9" y="581" width="551.8" height="15.0" fill="rgb(245,201,44)" rx="2" ry="2" />
<text  x="80.91" y="591.5" >[unknown]</text>
</g>
<g >
<title>PyThread_acquire_lock (1 samples, 0.72%)</title><rect x="672.2" y="565" width="8.4" height="15.0" fill="rgb(230,199,11)" rx="2" ry="2" />
<text  x="675.16" y="575.5" ></text>
</g>
<g >
<title>NaClPatchAddr (1 samples, 0.72%)</title><rect x="706.1" y="309" width="8.5" height="15.0" fill="rgb(252,30,3)" rx="2" ry="2" />
<text  x="709.12" y="319.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (40 samples, 28.78%)</title><rect x="714.6" y="373" width="339.6" height="15.0" fill="rgb(228,33,20)" rx="2" ry="2" />
<text  x="717.60" y="383.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>lind (1 samples, 0.72%)</title><rect x="69.4" y="597" width="8.5" height="15.0" fill="rgb(242,177,27)" rx="2" ry="2" />
<text  x="72.42" y="607.5" ></text>
</g>
<g >
<title>[perf-1873.map] (43 samples, 30.94%)</title><rect x="689.1" y="549" width="365.1" height="15.0" fill="rgb(219,95,20)" rx="2" ry="2" />
<text  x="692.14" y="559.5" >[perf-1873.map]</text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.72%)</title><rect x="952.3" y="101" width="8.5" height="15.0" fill="rgb(229,165,0)" rx="2" ry="2" />
<text  x="955.30" y="111.5" ></text>
</g>
<g >
<title>poll_schedule_timeout (1 samples, 0.72%)</title><rect x="77.9" y="421" width="8.5" height="15.0" fill="rgb(251,41,40)" rx="2" ry="2" />
<text  x="80.91" y="431.5" ></text>
</g>
<g >
<title>[unknown]  (42 samples, 30.22%)</title><rect x="697.6" y="421" width="356.6" height="15.0" fill="rgb(223,24,49)" rx="2" ry="2" />
<text  x="700.63" y="431.5" >[unknown] </text>
</g>
<g >
<title>nmi_restore (15 samples, 10.79%)</title><rect x="502.4" y="197" width="127.3" height="15.0" fill="rgb(223,114,30)" rx="2" ry="2" />
<text  x="505.37" y="207.5" >nmi_restore</text>
</g>
<g >
<title>generic_exec_single (64 samples, 46.04%)</title><rect x="86.4" y="325" width="543.3" height="15.0" fill="rgb(220,188,17)" rx="2" ry="2" />
<text  x="89.40" y="335.5" >generic_exec_single</text>
</g>
<g >
<title>sync_regs (1 samples, 0.72%)</title><rect x="69.4" y="533" width="8.5" height="15.0" fill="rgb(250,43,11)" rx="2" ry="2" />
<text  x="72.42" y="543.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.72%)</title><rect x="1045.7" y="277" width="8.5" height="15.0" fill="rgb(215,90,0)" rx="2" ry="2" />
<text  x="1048.68" y="287.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.72%)</title><rect x="892.9" y="213" width="8.5" height="15.0" fill="rgb(232,155,28)" rx="2" ry="2" />
<text  x="895.88" y="223.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (64 samples, 46.04%)</title><rect x="86.4" y="421" width="543.3" height="15.0" fill="rgb(248,158,42)" rx="2" ry="2" />
<text  x="89.40" y="431.5" >do_vfs_ioctl</text>
</g>
<g >
<title>[unknown] (1 samples, 0.72%)</title><rect x="10.0" y="565" width="8.5" height="15.0" fill="rgb(207,92,6)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>smp_call_function_single (64 samples, 46.04%)</title><rect x="86.4" y="341" width="543.3" height="15.0" fill="rgb(251,137,43)" rx="2" ry="2" />
<text  x="89.40" y="351.5" >smp_call_function_single</text>
</g>
<g >
<title>[unknown] (2 samples, 1.44%)</title><rect x="1079.6" y="517" width="17.0" height="15.0" fill="rgb(212,150,25)" rx="2" ry="2" />
<text  x="1082.64" y="527.5" ></text>
</g>
<g >
<title>perf_evlist__prepare_workload (1 samples, 0.72%)</title><rect x="629.7" y="517" width="8.5" height="15.0" fill="rgb(242,148,19)" rx="2" ry="2" />
<text  x="632.71" y="527.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.44%)</title><rect x="1079.6" y="437" width="17.0" height="15.0" fill="rgb(240,165,7)" rx="2" ry="2" />
<text  x="1082.64" y="447.5" ></text>
</g>
<g >
<title>[unknown]  (42 samples, 30.22%)</title><rect x="697.6" y="533" width="356.6" height="15.0" fill="rgb(232,201,47)" rx="2" ry="2" />
<text  x="700.63" y="543.5" >[unknown] </text>
</g>
<g >
<title>[unknown] (1 samples, 0.72%)</title><rect x="69.4" y="581" width="8.5" height="15.0" fill="rgb(222,131,3)" rx="2" ry="2" />
<text  x="72.42" y="591.5" ></text>
</g>
<g >
<title>event_function_call (64 samples, 46.04%)</title><rect x="86.4" y="357" width="543.3" height="15.0" fill="rgb(232,92,12)" rx="2" ry="2" />
<text  x="89.40" y="367.5" >event_function_call</text>
</g>
<g >
<title>secondary_startup_64 (6 samples, 4.32%)</title><rect x="18.5" y="581" width="50.9" height="15.0" fill="rgb(217,5,8)" rx="2" ry="2" />
<text  x="21.49" y="591.5" >secon..</text>
</g>
<g >
<title>[unknown]  (42 samples, 30.22%)</title><rect x="697.6" y="517" width="356.6" height="15.0" fill="rgb(245,192,10)" rx="2" ry="2" />
<text  x="700.63" y="527.5" >[unknown] </text>
</g>
<g >
<title>perf_ioctl (64 samples, 46.04%)</title><rect x="86.4" y="405" width="543.3" height="15.0" fill="rgb(217,87,33)" rx="2" ry="2" />
<text  x="89.40" y="415.5" >perf_ioctl</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.72%)</title><rect x="77.9" y="389" width="8.5" height="15.0" fill="rgb(226,57,40)" rx="2" ry="2" />
<text  x="80.91" y="399.5" ></text>
</g>
<g >
<title>NaClLoadTrampoline (1 samples, 0.72%)</title><rect x="697.6" y="245" width="8.5" height="15.0" fill="rgb(247,149,46)" rx="2" ry="2" />
<text  x="700.63" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.72%)</title><rect x="629.7" y="485" width="8.5" height="15.0" fill="rgb(251,28,16)" rx="2" ry="2" />
<text  x="632.71" y="495.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (64 samples, 46.04%)</title><rect x="86.4" y="213" width="543.3" height="15.0" fill="rgb(243,8,34)" rx="2" ry="2" />
<text  x="89.40" y="223.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>evlist__enable (64 samples, 46.04%)</title><rect x="86.4" y="501" width="543.3" height="15.0" fill="rgb(211,193,45)" rx="2" ry="2" />
<text  x="89.40" y="511.5" >evlist__enable</text>
</g>
<g >
<title>sys_execve (1 samples, 0.72%)</title><rect x="629.7" y="453" width="8.5" height="15.0" fill="rgb(225,184,11)" rx="2" ry="2" />
<text  x="632.71" y="463.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (1 samples, 0.72%)</title><rect x="689.1" y="469" width="8.5" height="15.0" fill="rgb(220,229,6)" rx="2" ry="2" />
<text  x="692.14" y="479.5" ></text>
</g>
<g >
<title>main (1 samples, 0.72%)</title><rect x="629.7" y="565" width="8.5" height="15.0" fill="rgb(208,159,7)" rx="2" ry="2" />
<text  x="632.71" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (1 samples, 0.72%)</title><rect x="680.6" y="549" width="8.5" height="15.0" fill="rgb(230,209,16)" rx="2" ry="2" />
<text  x="683.65" y="559.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.44%)</title><rect x="1079.6" y="469" width="17.0" height="15.0" fill="rgb(229,40,4)" rx="2" ry="2" />
<text  x="1082.64" y="479.5" ></text>
</g>
<g >
<title>sh_closepipe (1 samples, 0.72%)</title><rect x="69.4" y="565" width="8.5" height="15.0" fill="rgb(207,90,28)" rx="2" ry="2" />
<text  x="72.42" y="575.5" ></text>
</g>
<g >
<title>__GI___execve (1 samples, 0.72%)</title><rect x="629.7" y="501" width="8.5" height="15.0" fill="rgb(232,203,25)" rx="2" ry="2" />
<text  x="632.71" y="511.5" ></text>
</g>
<g >
<title>gup_pgd_range (1 samples, 0.72%)</title><rect x="1079.6" y="261" width="8.5" height="15.0" fill="rgb(234,221,3)" rx="2" ry="2" />
<text  x="1082.64" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.72%)</title><rect x="77.9" y="469" width="8.5" height="15.0" fill="rgb(230,178,17)" rx="2" ry="2" />
<text  x="80.91" y="479.5" ></text>
</g>
<g >
<title>intel_idle (5 samples, 3.60%)</title><rect x="18.5" y="469" width="42.4" height="15.0" fill="rgb(215,10,5)" rx="2" ry="2" />
<text  x="21.49" y="479.5" >int..</text>
</g>
<g >
<title>NaClTextDyncodeCreate (1 samples, 0.72%)</title><rect x="689.1" y="437" width="8.5" height="15.0" fill="rgb(213,223,2)" rx="2" ry="2" />
<text  x="692.14" y="447.5" ></text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.72%)</title><rect x="689.1" y="421" width="8.5" height="15.0" fill="rgb(213,46,31)" rx="2" ry="2" />
<text  x="692.14" y="431.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.72%)</title><rect x="1079.6" y="309" width="8.5" height="15.0" fill="rgb(227,136,6)" rx="2" ry="2" />
<text  x="1082.64" y="319.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.72%)</title><rect x="994.7" y="133" width="8.5" height="15.0" fill="rgb(242,219,39)" rx="2" ry="2" />
<text  x="997.75" y="143.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.72%)</title><rect x="1054.2" y="469" width="8.5" height="15.0" fill="rgb(246,218,3)" rx="2" ry="2" />
<text  x="1057.17" y="479.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 46.04%)</title><rect x="86.4" y="309" width="543.3" height="15.0" fill="rgb(230,77,41)" rx="2" ry="2" />
<text  x="89.40" y="319.5" >remote_function</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.72%)</title><rect x="1054.2" y="485" width="8.5" height="15.0" fill="rgb(246,119,35)" rx="2" ry="2" />
<text  x="1057.17" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.72%)</title><rect x="1079.6" y="373" width="8.5" height="15.0" fill="rgb(211,138,32)" rx="2" ry="2" />
<text  x="1082.64" y="383.5" ></text>
</g>
<g >
<title>NaClPatchAddr (11 samples, 7.91%)</title><rect x="714.6" y="213" width="93.4" height="15.0" fill="rgb(208,7,15)" rx="2" ry="2" />
<text  x="717.60" y="223.5" >NaClPatchAddr</text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.72%)</title><rect x="77.9" y="437" width="8.5" height="15.0" fill="rgb(213,140,15)" rx="2" ry="2" />
<text  x="80.91" y="447.5" ></text>
</g>
<g >
<title>__poll (1 samples, 0.72%)</title><rect x="77.9" y="501" width="8.5" height="15.0" fill="rgb(237,215,7)" rx="2" ry="2" />
<text  x="80.91" y="511.5" ></text>
</g>
<g >
<title>[sel_ldr] (2 samples, 1.44%)</title><rect x="697.6" y="373" width="17.0" height="15.0" fill="rgb(230,27,28)" rx="2" ry="2" />
<text  x="700.63" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.72%)</title><rect x="1054.2" y="501" width="8.5" height="15.0" fill="rgb(224,118,14)" rx="2" ry="2" />
<text  x="1057.17" y="511.5" ></text>
</g>
<g >
<title>NaClForkThreadContextSetup (40 samples, 28.78%)</title><rect x="714.6" y="293" width="339.6" height="15.0" fill="rgb(227,83,40)" rx="2" ry="2" />
<text  x="717.60" y="303.5" >NaClForkThreadContextSetup</text>
</g>
<g >
<title>__libc_start_main (65 samples, 46.76%)</title><rect x="77.9" y="565" width="551.8" height="15.0" fill="rgb(240,182,48)" rx="2" ry="2" />
<text  x="80.91" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>[sel_ldr] (40 samples, 28.78%)</title><rect x="714.6" y="389" width="339.6" height="15.0" fill="rgb(249,137,54)" rx="2" ry="2" />
<text  x="717.60" y="399.5" >[sel_ldr]</text>
</g>
<g >
<title>page_fault (1 samples, 0.72%)</title><rect x="1045.7" y="261" width="8.5" height="15.0" fill="rgb(216,166,8)" rx="2" ry="2" />
<text  x="1048.68" y="271.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.72%)</title><rect x="1011.7" y="133" width="8.5" height="15.0" fill="rgb(246,105,29)" rx="2" ry="2" />
<text  x="1014.73" y="143.5" ></text>
</g>
<g >
<title>secondary_startup_64 (11 samples, 7.91%)</title><rect x="1096.6" y="581" width="93.4" height="15.0" fill="rgb(235,43,44)" rx="2" ry="2" />
<text  x="1099.62" y="591.5" >secondary_s..</text>
</g>
</g>
</svg>
