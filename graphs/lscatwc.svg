<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>do_vfs_ioctl (64 samples, 48.85%)</title><rect x="28.0" y="421" width="576.5" height="15.0" fill="rgb(240,147,17)" rx="2" ry="2" />
<text  x="31.02" y="431.5" >do_vfs_ioctl</text>
</g>
<g >
<title>[unknown] (1 samples, 0.76%)</title><rect x="1054.9" y="405" width="9.0" height="15.0" fill="rgb(241,199,22)" rx="2" ry="2" />
<text  x="1057.89" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 48.85%)</title><rect x="28.0" y="469" width="576.5" height="15.0" fill="rgb(248,21,44)" rx="2" ry="2" />
<text  x="31.02" y="479.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.76%)</title><rect x="1027.9" y="229" width="9.0" height="15.0" fill="rgb(206,182,37)" rx="2" ry="2" />
<text  x="1030.86" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (9 samples, 6.87%)</title><rect x="928.8" y="165" width="81.0" height="15.0" fill="rgb(224,29,48)" rx="2" ry="2" />
<text  x="931.78" y="175.5" >handle_mm..</text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 48.85%)</title><rect x="28.0" y="229" width="576.5" height="15.0" fill="rgb(243,61,52)" rx="2" ry="2" />
<text  x="31.02" y="239.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>__handle_mm_fault (9 samples, 6.87%)</title><rect x="928.8" y="149" width="81.0" height="15.0" fill="rgb(210,37,21)" rx="2" ry="2" />
<text  x="931.78" y="159.5" >__handle_..</text>
</g>
<g >
<title>generic_exec_single (64 samples, 48.85%)</title><rect x="28.0" y="325" width="576.5" height="15.0" fill="rgb(236,29,41)" rx="2" ry="2" />
<text  x="31.02" y="335.5" >generic_exec_single</text>
</g>
<g >
<title>__anon_vma_prepare (1 samples, 0.76%)</title><rect x="604.5" y="325" width="9.0" height="15.0" fill="rgb(250,187,42)" rx="2" ry="2" />
<text  x="607.50" y="335.5" ></text>
</g>
<g >
<title>cmd_record (65 samples, 49.62%)</title><rect x="19.0" y="517" width="585.5" height="15.0" fill="rgb(249,214,34)" rx="2" ry="2" />
<text  x="22.01" y="527.5" >cmd_record</text>
</g>
<g >
<title>[unknown] (44 samples, 33.59%)</title><rect x="640.5" y="581" width="396.4" height="15.0" fill="rgb(218,202,13)" rx="2" ry="2" />
<text  x="643.53" y="591.5" >[unknown]</text>
</g>
<g >
<title>intel_idle (9 samples, 6.87%)</title><rect x="1090.9" y="469" width="81.1" height="15.0" fill="rgb(206,133,19)" rx="2" ry="2" />
<text  x="1093.92" y="479.5" >intel_idle</text>
</g>
<g >
<title>[unknown] (39 samples, 29.77%)</title><rect x="685.6" y="565" width="351.3" height="15.0" fill="rgb(245,222,42)" rx="2" ry="2" />
<text  x="688.57" y="575.5" >[unknown]</text>
</g>
<g >
<title>do_page_fault (1 samples, 0.76%)</title><rect x="1027.9" y="245" width="9.0" height="15.0" fill="rgb(232,138,6)" rx="2" ry="2" />
<text  x="1030.86" y="255.5" ></text>
</g>
<g >
<title>run_builtin (65 samples, 49.62%)</title><rect x="19.0" y="533" width="585.5" height="15.0" fill="rgb(238,159,46)" rx="2" ry="2" />
<text  x="22.01" y="543.5" >run_builtin</text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.76%)</title><rect x="1081.9" y="229" width="9.0" height="15.0" fill="rgb(206,145,10)" rx="2" ry="2" />
<text  x="1084.91" y="239.5" ></text>
</g>
<g >
<title>[unknown]  (39 samples, 29.77%)</title><rect x="685.6" y="533" width="351.3" height="15.0" fill="rgb(232,43,1)" rx="2" ry="2" />
<text  x="688.57" y="543.5" >[unknown] </text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.76%)</title><rect x="937.8" y="53" width="9.0" height="15.0" fill="rgb(226,5,49)" rx="2" ry="2" />
<text  x="940.79" y="63.5" ></text>
</g>
<g >
<title>sys_read (1 samples, 0.76%)</title><rect x="1063.9" y="373" width="9.0" height="15.0" fill="rgb(237,203,27)" rx="2" ry="2" />
<text  x="1066.89" y="383.5" ></text>
</g>
<g >
<title>lru_cache_add_anon (1 samples, 0.76%)</title><rect x="928.8" y="85" width="9.0" height="15.0" fill="rgb(218,207,13)" rx="2" ry="2" />
<text  x="931.78" y="95.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.76%)</title><rect x="937.8" y="69" width="9.0" height="15.0" fill="rgb(251,37,33)" rx="2" ry="2" />
<text  x="940.79" y="79.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (9 samples, 6.87%)</title><rect x="1090.9" y="485" width="81.1" height="15.0" fill="rgb(252,209,33)" rx="2" ry="2" />
<text  x="1093.92" y="495.5" >cpuidle_e..</text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.76%)</title><rect x="1181.0" y="501" width="9.0" height="15.0" fill="rgb(245,7,50)" rx="2" ry="2" />
<text  x="1183.99" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 2.29%)</title><rect x="955.8" y="117" width="27.0" height="15.0" fill="rgb(214,2,29)" rx="2" ry="2" />
<text  x="958.80" y="127.5" >_..</text>
</g>
<g >
<title>do_syscall_64 (64 samples, 48.85%)</title><rect x="28.0" y="453" width="576.5" height="15.0" fill="rgb(243,111,28)" rx="2" ry="2" />
<text  x="31.02" y="463.5" >do_syscall_64</text>
</g>
<g >
<title>run_builtin (1 samples, 0.76%)</title><rect x="604.5" y="549" width="9.0" height="15.0" fill="rgb(218,17,33)" rx="2" ry="2" />
<text  x="607.50" y="559.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.76%)</title><rect x="1172.0" y="517" width="9.0" height="15.0" fill="rgb(238,68,45)" rx="2" ry="2" />
<text  x="1174.98" y="527.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 3.82%)</title><rect x="1045.9" y="485" width="45.0" height="15.0" fill="rgb(208,213,14)" rx="2" ry="2" />
<text  x="1048.88" y="495.5" >[unk..</text>
</g>
<g >
<title>NaClCreateThread (39 samples, 29.77%)</title><rect x="685.6" y="325" width="351.3" height="15.0" fill="rgb(205,122,32)" rx="2" ry="2" />
<text  x="688.57" y="335.5" >NaClCreateThread</text>
</g>
<g >
<title>futex_wait (1 samples, 0.76%)</title><rect x="1072.9" y="357" width="9.0" height="15.0" fill="rgb(247,144,47)" rx="2" ry="2" />
<text  x="1075.90" y="367.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.76%)</title><rect x="1081.9" y="389" width="9.0" height="15.0" fill="rgb(205,2,15)" rx="2" ry="2" />
<text  x="1084.91" y="399.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1 samples, 0.76%)</title><rect x="1181.0" y="549" width="9.0" height="15.0" fill="rgb(210,101,12)" rx="2" ry="2" />
<text  x="1183.99" y="559.5" ></text>
</g>
<g >
<title>PyNumber_AsSsize_t (1 samples, 0.76%)</title><rect x="667.6" y="565" width="9.0" height="15.0" fill="rgb(233,144,13)" rx="2" ry="2" />
<text  x="670.56" y="575.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.76%)</title><rect x="1027.9" y="197" width="9.0" height="15.0" fill="rgb(233,21,16)" rx="2" ry="2" />
<text  x="1030.86" y="207.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (39 samples, 29.77%)</title><rect x="685.6" y="373" width="351.3" height="15.0" fill="rgb(210,115,25)" rx="2" ry="2" />
<text  x="688.57" y="383.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>[unknown]  (39 samples, 29.77%)</title><rect x="685.6" y="453" width="351.3" height="15.0" fill="rgb(212,125,27)" rx="2" ry="2" />
<text  x="688.57" y="463.5" >[unknown] </text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.76%)</title><rect x="19.0" y="405" width="9.0" height="15.0" fill="rgb(229,119,49)" rx="2" ry="2" />
<text  x="22.01" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.76%)</title><rect x="937.8" y="37" width="9.0" height="15.0" fill="rgb(250,127,53)" rx="2" ry="2" />
<text  x="940.79" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.76%)</title><rect x="604.5" y="485" width="9.0" height="15.0" fill="rgb(206,103,2)" rx="2" ry="2" />
<text  x="607.50" y="495.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.76%)</title><rect x="928.8" y="69" width="9.0" height="15.0" fill="rgb(234,150,34)" rx="2" ry="2" />
<text  x="931.78" y="79.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (28 samples, 21.37%)</title><rect x="766.6" y="229" width="252.3" height="15.0" fill="rgb(235,28,26)" rx="2" ry="2" />
<text  x="769.64" y="239.5" >__memmove_avx_unaligned_erms</text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 2.29%)</title><rect x="613.5" y="581" width="27.0" height="15.0" fill="rgb(237,199,52)" rx="2" ry="2" />
<text  x="616.51" y="591.5" >P..</text>
</g>
<g >
<title>__vfs_write (1 samples, 0.76%)</title><rect x="1081.9" y="373" width="9.0" height="15.0" fill="rgb(251,229,16)" rx="2" ry="2" />
<text  x="1084.91" y="383.5" ></text>
</g>
<g >
<title>file_update_time (1 samples, 0.76%)</title><rect x="1081.9" y="309" width="9.0" height="15.0" fill="rgb(218,35,42)" rx="2" ry="2" />
<text  x="1084.91" y="319.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.76%)</title><rect x="1000.8" y="133" width="9.0" height="15.0" fill="rgb(214,61,43)" rx="2" ry="2" />
<text  x="1003.84" y="143.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (39 samples, 29.77%)</title><rect x="685.6" y="357" width="351.3" height="15.0" fill="rgb(208,89,42)" rx="2" ry="2" />
<text  x="688.57" y="367.5" >NaClSysForkDecoder</text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.76%)</title><rect x="928.8" y="37" width="9.0" height="15.0" fill="rgb(232,193,43)" rx="2" ry="2" />
<text  x="931.78" y="47.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.76%)</title><rect x="604.5" y="469" width="9.0" height="15.0" fill="rgb(219,36,15)" rx="2" ry="2" />
<text  x="607.50" y="479.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 0.76%)</title><rect x="1181.0" y="421" width="9.0" height="15.0" fill="rgb(207,85,3)" rx="2" ry="2" />
<text  x="1183.99" y="431.5" ></text>
</g>
<g >
<title>__do_fault (2 samples, 1.53%)</title><rect x="928.8" y="133" width="18.0" height="15.0" fill="rgb(211,118,33)" rx="2" ry="2" />
<text  x="931.78" y="143.5" ></text>
</g>
<g >
<title>[unknown]  (39 samples, 29.77%)</title><rect x="685.6" y="405" width="351.3" height="15.0" fill="rgb(212,87,22)" rx="2" ry="2" />
<text  x="688.57" y="415.5" >[unknown] </text>
</g>
<g >
<title>sys_execve (1 samples, 0.76%)</title><rect x="604.5" y="453" width="9.0" height="15.0" fill="rgb(245,168,31)" rx="2" ry="2" />
<text  x="607.50" y="463.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 3.82%)</title><rect x="1045.9" y="549" width="45.0" height="15.0" fill="rgb(238,61,51)" rx="2" ry="2" />
<text  x="1048.88" y="559.5" >[unk..</text>
</g>
<g >
<title>event_function_call (64 samples, 48.85%)</title><rect x="28.0" y="357" width="576.5" height="15.0" fill="rgb(218,15,38)" rx="2" ry="2" />
<text  x="31.02" y="367.5" >event_function_call</text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.76%)</title><rect x="604.5" y="309" width="9.0" height="15.0" fill="rgb(213,225,23)" rx="2" ry="2" />
<text  x="607.50" y="319.5" ></text>
</g>
<g >
<title>[unknown]  (39 samples, 29.77%)</title><rect x="685.6" y="469" width="351.3" height="15.0" fill="rgb(243,120,1)" rx="2" ry="2" />
<text  x="688.57" y="479.5" >[unknown] </text>
</g>
<g >
<title>[unknown] (3 samples, 2.29%)</title><rect x="1054.9" y="437" width="27.0" height="15.0" fill="rgb(233,117,15)" rx="2" ry="2" />
<text  x="1057.89" y="447.5" >[..</text>
</g>
<g >
<title>menu_select (1 samples, 0.76%)</title><rect x="1172.0" y="501" width="9.0" height="15.0" fill="rgb(253,115,12)" rx="2" ry="2" />
<text  x="1174.98" y="511.5" ></text>
</g>
<g >
<title>perf_ioctl (64 samples, 48.85%)</title><rect x="28.0" y="405" width="576.5" height="15.0" fill="rgb(217,111,40)" rx="2" ry="2" />
<text  x="31.02" y="415.5" >perf_ioctl</text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.76%)</title><rect x="919.8" y="165" width="9.0" height="15.0" fill="rgb(243,165,27)" rx="2" ry="2" />
<text  x="922.77" y="175.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 3.05%)</title><rect x="1054.9" y="453" width="36.0" height="15.0" fill="rgb(238,16,17)" rx="2" ry="2" />
<text  x="1057.89" y="463.5" >[un..</text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.76%)</title><rect x="19.0" y="437" width="9.0" height="15.0" fill="rgb(244,135,32)" rx="2" ry="2" />
<text  x="22.01" y="447.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 48.85%)</title><rect x="28.0" y="389" width="576.5" height="15.0" fill="rgb(225,24,53)" rx="2" ry="2" />
<text  x="31.02" y="399.5" >perf_event_for_each_child</text>
</g>
<g >
<title>NaClVmCopyEntry (9 samples, 6.87%)</title><rect x="685.6" y="229" width="81.0" height="15.0" fill="rgb(247,189,40)" rx="2" ry="2" />
<text  x="688.57" y="239.5" >NaClVmCop..</text>
</g>
<g >
<title>[unknown] (5 samples, 3.82%)</title><rect x="1045.9" y="581" width="45.0" height="15.0" fill="rgb(226,75,10)" rx="2" ry="2" />
<text  x="1048.88" y="591.5" >[unk..</text>
</g>
<g >
<title>[unknown] (5 samples, 3.82%)</title><rect x="1045.9" y="565" width="45.0" height="15.0" fill="rgb(225,1,16)" rx="2" ry="2" />
<text  x="1048.88" y="575.5" >[unk..</text>
</g>
<g >
<title>new_sync_write (1 samples, 0.76%)</title><rect x="1081.9" y="357" width="9.0" height="15.0" fill="rgb(224,97,49)" rx="2" ry="2" />
<text  x="1084.91" y="367.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.76%)</title><rect x="1081.9" y="277" width="9.0" height="15.0" fill="rgb(234,74,48)" rx="2" ry="2" />
<text  x="1084.91" y="287.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.76%)</title><rect x="991.8" y="117" width="9.0" height="15.0" fill="rgb(243,223,34)" rx="2" ry="2" />
<text  x="994.83" y="127.5" ></text>
</g>
<g >
<title>PyType_IsSubtype (1 samples, 0.76%)</title><rect x="676.6" y="565" width="9.0" height="15.0" fill="rgb(206,147,38)" rx="2" ry="2" />
<text  x="679.56" y="575.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 3.05%)</title><rect x="1054.9" y="469" width="36.0" height="15.0" fill="rgb(224,82,46)" rx="2" ry="2" />
<text  x="1057.89" y="479.5" >[un..</text>
</g>
<g >
<title>NaClSysFork (39 samples, 29.77%)</title><rect x="685.6" y="341" width="351.3" height="15.0" fill="rgb(224,157,54)" rx="2" ry="2" />
<text  x="688.57" y="351.5" >NaClSysFork</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.76%)</title><rect x="1063.9" y="389" width="9.0" height="15.0" fill="rgb(236,133,21)" rx="2" ry="2" />
<text  x="1066.89" y="399.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 48.85%)</title><rect x="28.0" y="245" width="576.5" height="15.0" fill="rgb(217,29,49)" rx="2" ry="2" />
<text  x="31.02" y="255.5" >x86_pmu_enable</text>
</g>
<g >
<title>shmem_getpage_gfp (2 samples, 1.53%)</title><rect x="928.8" y="101" width="18.0" height="15.0" fill="rgb(228,213,6)" rx="2" ry="2" />
<text  x="931.78" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.76%)</title><rect x="1063.9" y="405" width="9.0" height="15.0" fill="rgb(210,211,54)" rx="2" ry="2" />
<text  x="1066.89" y="415.5" ></text>
</g>
<g >
<title>close_buffered_fd (1 samples, 0.76%)</title><rect x="10.0" y="565" width="9.0" height="15.0" fill="rgb(212,122,30)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.76%)</title><rect x="1027.9" y="261" width="9.0" height="15.0" fill="rgb(207,109,21)" rx="2" ry="2" />
<text  x="1030.86" y="271.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.76%)</title><rect x="1063.9" y="357" width="9.0" height="15.0" fill="rgb(240,15,50)" rx="2" ry="2" />
<text  x="1066.89" y="367.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.76%)</title><rect x="982.8" y="133" width="9.0" height="15.0" fill="rgb(237,46,12)" rx="2" ry="2" />
<text  x="985.82" y="143.5" ></text>
</g>
<g >
<title>sys_write (1 samples, 0.76%)</title><rect x="1081.9" y="405" width="9.0" height="15.0" fill="rgb(239,114,15)" rx="2" ry="2" />
<text  x="1084.91" y="415.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 48.85%)</title><rect x="28.0" y="309" width="576.5" height="15.0" fill="rgb(254,190,17)" rx="2" ry="2" />
<text  x="31.02" y="319.5" >remote_function</text>
</g>
<g >
<title>native_write_msr (48 samples, 36.64%)</title><rect x="28.0" y="197" width="432.4" height="15.0" fill="rgb(225,178,37)" rx="2" ry="2" />
<text  x="31.02" y="207.5" >native_write_msr</text>
</g>
<g >
<title>NaClCopyExecutionContext (37 samples, 28.24%)</title><rect x="685.6" y="277" width="333.3" height="15.0" fill="rgb(254,12,11)" rx="2" ry="2" />
<text  x="688.57" y="287.5" >NaClCopyExecutionContext</text>
</g>
<g >
<title>generic_update_time (1 samples, 0.76%)</title><rect x="1081.9" y="293" width="9.0" height="15.0" fill="rgb(232,112,8)" rx="2" ry="2" />
<text  x="1084.91" y="303.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (1 samples, 0.76%)</title><rect x="1081.9" y="325" width="9.0" height="15.0" fill="rgb(209,40,40)" rx="2" ry="2" />
<text  x="1084.91" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.76%)</title><rect x="19.0" y="485" width="9.0" height="15.0" fill="rgb(213,125,42)" rx="2" ry="2" />
<text  x="22.01" y="495.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.76%)</title><rect x="1009.8" y="213" width="9.1" height="15.0" fill="rgb(228,62,7)" rx="2" ry="2" />
<text  x="1012.85" y="223.5" ></text>
</g>
<g >
<title>evlist__enable (64 samples, 48.85%)</title><rect x="28.0" y="501" width="576.5" height="15.0" fill="rgb(235,141,34)" rx="2" ry="2" />
<text  x="31.02" y="511.5" >evlist__enable</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.76%)</title><rect x="1036.9" y="549" width="9.0" height="15.0" fill="rgb(215,75,18)" rx="2" ry="2" />
<text  x="1039.87" y="559.5" ></text>
</g>
<g >
<title>[sel_ldr] (39 samples, 29.77%)</title><rect x="685.6" y="389" width="351.3" height="15.0" fill="rgb(217,223,11)" rx="2" ry="2" />
<text  x="688.57" y="399.5" >[sel_ldr]</text>
</g>
<g >
<title>lind (1 samples, 0.76%)</title><rect x="10.0" y="597" width="9.0" height="15.0" fill="rgb(225,78,15)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.53%)</title><rect x="1054.9" y="421" width="18.0" height="15.0" fill="rgb(251,26,33)" rx="2" ry="2" />
<text  x="1057.89" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.76%)</title><rect x="1072.9" y="421" width="9.0" height="15.0" fill="rgb(226,185,48)" rx="2" ry="2" />
<text  x="1075.90" y="431.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.76%)</title><rect x="1081.9" y="341" width="9.0" height="15.0" fill="rgb(221,186,47)" rx="2" ry="2" />
<text  x="1084.91" y="351.5" ></text>
</g>
<g >
<title>[unknown]  (39 samples, 29.77%)</title><rect x="685.6" y="421" width="351.3" height="15.0" fill="rgb(213,47,6)" rx="2" ry="2" />
<text  x="688.57" y="431.5" >[unknown] </text>
</g>
<g >
<title>clear_page_erms (2 samples, 1.53%)</title><rect x="955.8" y="101" width="18.0" height="15.0" fill="rgb(248,168,38)" rx="2" ry="2" />
<text  x="958.80" y="111.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.76%)</title><rect x="604.5" y="437" width="9.0" height="15.0" fill="rgb(207,45,23)" rx="2" ry="2" />
<text  x="607.50" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.76%)</title><rect x="1081.9" y="421" width="9.0" height="15.0" fill="rgb(222,112,13)" rx="2" ry="2" />
<text  x="1084.91" y="431.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1 samples, 0.76%)</title><rect x="1181.0" y="565" width="9.0" height="15.0" fill="rgb(238,206,8)" rx="2" ry="2" />
<text  x="1183.99" y="575.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.76%)</title><rect x="1072.9" y="389" width="9.0" height="15.0" fill="rgb(234,52,39)" rx="2" ry="2" />
<text  x="1075.90" y="399.5" ></text>
</g>
<g >
<title>[perf-5677.map] (39 samples, 29.77%)</title><rect x="685.6" y="549" width="351.3" height="15.0" fill="rgb(238,190,48)" rx="2" ry="2" />
<text  x="688.57" y="559.5" >[perf-5677.map]</text>
</g>
<g >
<title>error_entry (2 samples, 1.53%)</title><rect x="874.7" y="213" width="18.0" height="15.0" fill="rgb(220,141,41)" rx="2" ry="2" />
<text  x="877.73" y="223.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 48.85%)</title><rect x="28.0" y="277" width="576.5" height="15.0" fill="rgb(214,110,48)" rx="2" ry="2" />
<text  x="31.02" y="287.5" >__perf_event_enable</text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 3.05%)</title><rect x="946.8" y="133" width="36.0" height="15.0" fill="rgb(239,174,23)" rx="2" ry="2" />
<text  x="949.79" y="143.5" >all..</text>
</g>
<g >
<title>start_secondary (10 samples, 7.63%)</title><rect x="1090.9" y="565" width="90.1" height="15.0" fill="rgb(229,101,36)" rx="2" ry="2" />
<text  x="1093.92" y="575.5" >start_seco..</text>
</g>
<g >
<title>copy_strings.isra.26 (1 samples, 0.76%)</title><rect x="604.5" y="405" width="9.0" height="15.0" fill="rgb(244,31,45)" rx="2" ry="2" />
<text  x="607.50" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.76%)</title><rect x="1036.9" y="533" width="9.0" height="15.0" fill="rgb(212,145,9)" rx="2" ry="2" />
<text  x="1039.87" y="543.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.76%)</title><rect x="1181.0" y="485" width="9.0" height="15.0" fill="rgb(210,200,35)" rx="2" ry="2" />
<text  x="1183.99" y="495.5" ></text>
</g>
<g >
<title>sel_ldr (48 samples, 36.64%)</title><rect x="613.5" y="597" width="432.4" height="15.0" fill="rgb(226,151,28)" rx="2" ry="2" />
<text  x="616.51" y="607.5" >sel_ldr</text>
</g>
<g >
<title>NaClVmmapVisit (37 samples, 28.24%)</title><rect x="685.6" y="245" width="333.3" height="15.0" fill="rgb(236,214,25)" rx="2" ry="2" />
<text  x="688.57" y="255.5" >NaClVmmapVisit</text>
</g>
<g >
<title>schedule (1 samples, 0.76%)</title><rect x="1072.9" y="325" width="9.0" height="15.0" fill="rgb(228,137,43)" rx="2" ry="2" />
<text  x="1075.90" y="335.5" ></text>
</g>
<g >
<title>_perf_event_enable (64 samples, 48.85%)</title><rect x="28.0" y="373" width="576.5" height="15.0" fill="rgb(239,71,25)" rx="2" ry="2" />
<text  x="31.02" y="383.5" >_perf_event_enable</text>
</g>
<g >
<title>do_idle (10 samples, 7.63%)</title><rect x="1090.9" y="533" width="90.1" height="15.0" fill="rgb(223,149,35)" rx="2" ry="2" />
<text  x="1093.92" y="543.5" >do_idle</text>
</g>
<g >
<title>copy_strings_kernel (1 samples, 0.76%)</title><rect x="604.5" y="421" width="9.0" height="15.0" fill="rgb(251,95,48)" rx="2" ry="2" />
<text  x="607.50" y="431.5" ></text>
</g>
<g >
<title>__clone (1 samples, 0.76%)</title><rect x="1036.9" y="581" width="9.0" height="15.0" fill="rgb(221,156,28)" rx="2" ry="2" />
<text  x="1039.87" y="591.5" ></text>
</g>
<g >
<title>copy_strings.isra.26 (1 samples, 0.76%)</title><rect x="1036.9" y="485" width="9.0" height="15.0" fill="rgb(220,91,23)" rx="2" ry="2" />
<text  x="1039.87" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 1.53%)</title><rect x="1018.9" y="277" width="18.0" height="15.0" fill="rgb(233,112,4)" rx="2" ry="2" />
<text  x="1021.85" y="287.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 3.82%)</title><rect x="1045.9" y="533" width="45.0" height="15.0" fill="rgb(236,227,11)" rx="2" ry="2" />
<text  x="1048.88" y="543.5" >[unk..</text>
</g>
<g >
<title>[unknown] (5 samples, 3.82%)</title><rect x="1045.9" y="517" width="45.0" height="15.0" fill="rgb(220,132,23)" rx="2" ry="2" />
<text  x="1048.88" y="527.5" >[unk..</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.76%)</title><rect x="973.8" y="101" width="9.0" height="15.0" fill="rgb(212,39,20)" rx="2" ry="2" />
<text  x="976.82" y="111.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.34 (1 samples, 0.76%)</title><rect x="1036.9" y="501" width="9.0" height="15.0" fill="rgb(219,98,8)" rx="2" ry="2" />
<text  x="1039.87" y="511.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 49.62%)</title><rect x="19.0" y="581" width="585.5" height="15.0" fill="rgb(232,171,14)" rx="2" ry="2" />
<text  x="22.01" y="591.5" >[unknown]</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.76%)</title><rect x="1072.9" y="405" width="9.0" height="15.0" fill="rgb(252,117,30)" rx="2" ry="2" />
<text  x="1075.90" y="415.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.76%)</title><rect x="604.5" y="341" width="9.0" height="15.0" fill="rgb(248,203,38)" rx="2" ry="2" />
<text  x="607.50" y="351.5" ></text>
</g>
<g >
<title>[unknown]  (39 samples, 29.77%)</title><rect x="685.6" y="437" width="351.3" height="15.0" fill="rgb(239,199,36)" rx="2" ry="2" />
<text  x="688.57" y="447.5" >[unknown] </text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.76%)</title><rect x="937.8" y="85" width="9.0" height="15.0" fill="rgb(212,116,38)" rx="2" ry="2" />
<text  x="940.79" y="95.5" ></text>
</g>
<g >
<title>PyEval_EvalFrameEx (3 samples, 2.29%)</title><rect x="640.5" y="565" width="27.1" height="15.0" fill="rgb(243,111,38)" rx="2" ry="2" />
<text  x="643.53" y="575.5" >P..</text>
</g>
<g >
<title>__do_page_fault (10 samples, 7.63%)</title><rect x="919.8" y="181" width="90.0" height="15.0" fill="rgb(246,85,42)" rx="2" ry="2" />
<text  x="922.77" y="191.5" >__do_page_..</text>
</g>
<g >
<title>main (65 samples, 49.62%)</title><rect x="19.0" y="549" width="585.5" height="15.0" fill="rgb(229,63,27)" rx="2" ry="2" />
<text  x="22.01" y="559.5" >main</text>
</g>
<g >
<title>cpu_startup_entry (10 samples, 7.63%)</title><rect x="1090.9" y="549" width="90.1" height="15.0" fill="rgb(211,161,44)" rx="2" ry="2" />
<text  x="1093.92" y="559.5" >cpu_startu..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (64 samples, 48.85%)</title><rect x="28.0" y="213" width="576.5" height="15.0" fill="rgb(222,21,37)" rx="2" ry="2" />
<text  x="31.02" y="223.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>jbd2_write_access_granted.part.9 (1 samples, 0.76%)</title><rect x="1081.9" y="181" width="9.0" height="15.0" fill="rgb(244,218,37)" rx="2" ry="2" />
<text  x="1084.91" y="191.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.76%)</title><rect x="604.5" y="357" width="9.0" height="15.0" fill="rgb(208,63,45)" rx="2" ry="2" />
<text  x="607.50" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (10 samples, 7.63%)</title><rect x="919.8" y="197" width="90.0" height="15.0" fill="rgb(208,184,16)" rx="2" ry="2" />
<text  x="922.77" y="207.5" >do_page_fa..</text>
</g>
<g >
<title>[unknown]  (39 samples, 29.77%)</title><rect x="685.6" y="485" width="351.3" height="15.0" fill="rgb(219,139,13)" rx="2" ry="2" />
<text  x="688.57" y="495.5" >[unknown] </text>
</g>
<g >
<title>start_kernel (1 samples, 0.76%)</title><rect x="1181.0" y="533" width="9.0" height="15.0" fill="rgb(229,102,11)" rx="2" ry="2" />
<text  x="1183.99" y="543.5" ></text>
</g>
<g >
<title>page_fault (10 samples, 7.63%)</title><rect x="919.8" y="213" width="90.0" height="15.0" fill="rgb(221,122,13)" rx="2" ry="2" />
<text  x="922.77" y="223.5" >page_fault</text>
</g>
<g >
<title>nmi_restore (15 samples, 11.45%)</title><rect x="469.4" y="197" width="135.1" height="15.0" fill="rgb(213,101,26)" rx="2" ry="2" />
<text  x="472.39" y="207.5" >nmi_restore</text>
</g>
<g >
<title>perf (66 samples, 50.38%)</title><rect x="19.0" y="597" width="594.5" height="15.0" fill="rgb(247,73,11)" rx="2" ry="2" />
<text  x="22.01" y="607.5" >perf</text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.76%)</title><rect x="1081.9" y="261" width="9.0" height="15.0" fill="rgb(228,167,3)" rx="2" ry="2" />
<text  x="1084.91" y="271.5" ></text>
</g>
<g >
<title>native_irq_return_iret (3 samples, 2.29%)</title><rect x="892.7" y="213" width="27.1" height="15.0" fill="rgb(226,82,43)" rx="2" ry="2" />
<text  x="895.75" y="223.5" >n..</text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.76%)</title><rect x="1072.9" y="341" width="9.0" height="15.0" fill="rgb(214,196,50)" rx="2" ry="2" />
<text  x="1075.90" y="351.5" ></text>
</g>
<g >
<title>call_cpuidle (9 samples, 6.87%)</title><rect x="1090.9" y="517" width="81.1" height="15.0" fill="rgb(241,107,42)" rx="2" ry="2" />
<text  x="1093.92" y="527.5" >call_cpui..</text>
</g>
<g >
<title>all (131 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(237,54,23)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>NaClForkThreadContextSetup (39 samples, 29.77%)</title><rect x="685.6" y="293" width="351.3" height="15.0" fill="rgb(244,14,21)" rx="2" ry="2" />
<text  x="688.57" y="303.5" >NaClForkThreadContextSetup</text>
</g>
<g >
<title>get_user_pages_remote (1 samples, 0.76%)</title><rect x="604.5" y="389" width="9.0" height="15.0" fill="rgb(212,142,23)" rx="2" ry="2" />
<text  x="607.50" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.76%)</title><rect x="19.0" y="469" width="9.0" height="15.0" fill="rgb(211,95,50)" rx="2" ry="2" />
<text  x="22.01" y="479.5" ></text>
</g>
<g >
<title>NaClPatchAddr (9 samples, 6.87%)</title><rect x="685.6" y="213" width="81.0" height="15.0" fill="rgb(225,54,38)" rx="2" ry="2" />
<text  x="688.57" y="223.5" >NaClPatch..</text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.76%)</title><rect x="928.8" y="53" width="9.0" height="15.0" fill="rgb(210,69,28)" rx="2" ry="2" />
<text  x="931.78" y="63.5" ></text>
</g>
<g >
<title>main (1 samples, 0.76%)</title><rect x="604.5" y="565" width="9.0" height="15.0" fill="rgb(247,97,34)" rx="2" ry="2" />
<text  x="607.50" y="575.5" ></text>
</g>
<g >
<title>event_function (64 samples, 48.85%)</title><rect x="28.0" y="293" width="576.5" height="15.0" fill="rgb(208,173,37)" rx="2" ry="2" />
<text  x="31.02" y="303.5" >event_function</text>
</g>
<g >
<title>[unknown]  (39 samples, 29.77%)</title><rect x="685.6" y="517" width="351.3" height="15.0" fill="rgb(232,9,53)" rx="2" ry="2" />
<text  x="688.57" y="527.5" >[unknown] </text>
</g>
<g >
<title>rest_init (1 samples, 0.76%)</title><rect x="1181.0" y="517" width="9.0" height="15.0" fill="rgb(240,222,8)" rx="2" ry="2" />
<text  x="1183.99" y="527.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.76%)</title><rect x="1072.9" y="373" width="9.0" height="15.0" fill="rgb(229,135,10)" rx="2" ry="2" />
<text  x="1075.90" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.76%)</title><rect x="1027.9" y="213" width="9.0" height="15.0" fill="rgb(242,147,3)" rx="2" ry="2" />
<text  x="1030.86" y="223.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.76%)</title><rect x="1072.9" y="309" width="9.0" height="15.0" fill="rgb(229,144,19)" rx="2" ry="2" />
<text  x="1075.90" y="319.5" ></text>
</g>
<g >
<title>__GI___execve (1 samples, 0.76%)</title><rect x="1036.9" y="565" width="9.0" height="15.0" fill="rgb(222,168,36)" rx="2" ry="2" />
<text  x="1039.87" y="575.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.76%)</title><rect x="604.5" y="373" width="9.0" height="15.0" fill="rgb(219,149,13)" rx="2" ry="2" />
<text  x="607.50" y="383.5" ></text>
</g>
<g >
<title>NaClAppThreadSpawn (39 samples, 29.77%)</title><rect x="685.6" y="309" width="351.3" height="15.0" fill="rgb(234,117,22)" rx="2" ry="2" />
<text  x="688.57" y="319.5" >NaClAppThreadSpawn</text>
</g>
<g >
<title>sys_ioctl (64 samples, 48.85%)</title><rect x="28.0" y="437" width="576.5" height="15.0" fill="rgb(236,41,17)" rx="2" ry="2" />
<text  x="31.02" y="447.5" >sys_ioctl</text>
</g>
<g >
<title>cpuidle_enter (9 samples, 6.87%)</title><rect x="1090.9" y="501" width="81.1" height="15.0" fill="rgb(208,203,8)" rx="2" ry="2" />
<text  x="1093.92" y="511.5" >cpuidle_e..</text>
</g>
<g >
<title>sys_execve (1 samples, 0.76%)</title><rect x="1036.9" y="517" width="9.0" height="15.0" fill="rgb(223,168,45)" rx="2" ry="2" />
<text  x="1039.87" y="527.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.76%)</title><rect x="604.5" y="581" width="9.0" height="15.0" fill="rgb(233,162,10)" rx="2" ry="2" />
<text  x="607.50" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.76%)</title><rect x="1081.9" y="437" width="9.0" height="15.0" fill="rgb(236,142,47)" rx="2" ry="2" />
<text  x="1084.91" y="447.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.76%)</title><rect x="1081.9" y="213" width="9.0" height="15.0" fill="rgb(244,53,1)" rx="2" ry="2" />
<text  x="1084.91" y="223.5" ></text>
</g>
<g >
<title>sys_poll (1 samples, 0.76%)</title><rect x="19.0" y="453" width="9.0" height="15.0" fill="rgb(216,98,24)" rx="2" ry="2" />
<text  x="22.01" y="463.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.76%)</title><rect x="1181.0" y="437" width="9.0" height="15.0" fill="rgb(223,123,23)" rx="2" ry="2" />
<text  x="1183.99" y="447.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.76%)</title><rect x="991.8" y="133" width="9.0" height="15.0" fill="rgb(252,176,6)" rx="2" ry="2" />
<text  x="994.83" y="143.5" ></text>
</g>
<g >
<title>perf_poll (1 samples, 0.76%)</title><rect x="19.0" y="421" width="9.0" height="15.0" fill="rgb(207,75,3)" rx="2" ry="2" />
<text  x="22.01" y="431.5" ></text>
</g>
<g >
<title>__libc_start_main (65 samples, 49.62%)</title><rect x="19.0" y="565" width="585.5" height="15.0" fill="rgb(230,52,3)" rx="2" ry="2" />
<text  x="22.01" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>[unknown]  (39 samples, 29.77%)</title><rect x="685.6" y="501" width="351.3" height="15.0" fill="rgb(211,165,38)" rx="2" ry="2" />
<text  x="688.57" y="511.5" >[unknown] </text>
</g>
<g >
<title>[unknown] (5 samples, 3.82%)</title><rect x="1045.9" y="501" width="45.0" height="15.0" fill="rgb(225,35,39)" rx="2" ry="2" />
<text  x="1048.88" y="511.5" >[unk..</text>
</g>
<g >
<title>call_cpuidle (1 samples, 0.76%)</title><rect x="1181.0" y="469" width="9.0" height="15.0" fill="rgb(245,183,5)" rx="2" ry="2" />
<text  x="1183.99" y="479.5" ></text>
</g>
<g >
<title>__GI___ioctl (64 samples, 48.85%)</title><rect x="28.0" y="485" width="576.5" height="15.0" fill="rgb(249,79,38)" rx="2" ry="2" />
<text  x="31.02" y="495.5" >__GI___ioctl</text>
</g>
<g >
<title>ext4_mark_inode_dirty (1 samples, 0.76%)</title><rect x="1081.9" y="245" width="9.0" height="15.0" fill="rgb(210,192,16)" rx="2" ry="2" />
<text  x="1084.91" y="255.5" ></text>
</g>
<g >
<title>NaClCopyDynamicText (37 samples, 28.24%)</title><rect x="685.6" y="261" width="333.3" height="15.0" fill="rgb(219,65,23)" rx="2" ry="2" />
<text  x="688.57" y="271.5" >NaClCopyDynamicText</text>
</g>
<g >
<title>jbd2_journal_get_write_access (1 samples, 0.76%)</title><rect x="1081.9" y="197" width="9.0" height="15.0" fill="rgb(231,180,46)" rx="2" ry="2" />
<text  x="1084.91" y="207.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.76%)</title><rect x="883.7" y="197" width="9.0" height="15.0" fill="rgb(233,126,53)" rx="2" ry="2" />
<text  x="886.74" y="207.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.76%)</title><rect x="1181.0" y="453" width="9.0" height="15.0" fill="rgb(231,47,3)" rx="2" ry="2" />
<text  x="1183.99" y="463.5" ></text>
</g>
<g >
<title>__poll (1 samples, 0.76%)</title><rect x="19.0" y="501" width="9.0" height="15.0" fill="rgb(225,126,7)" rx="2" ry="2" />
<text  x="22.01" y="511.5" ></text>
</g>
<g >
<title>smp_call_function_single (64 samples, 48.85%)</title><rect x="28.0" y="341" width="576.5" height="15.0" fill="rgb(224,118,33)" rx="2" ry="2" />
<text  x="31.02" y="351.5" >smp_call_function_single</text>
</g>
<g >
<title>shmem_fault (2 samples, 1.53%)</title><rect x="928.8" y="117" width="18.0" height="15.0" fill="rgb(241,112,28)" rx="2" ry="2" />
<text  x="931.78" y="127.5" ></text>
</g>
<g >
<title>swapper (16 samples, 12.21%)</title><rect x="1045.9" y="597" width="144.1" height="15.0" fill="rgb(224,72,36)" rx="2" ry="2" />
<text  x="1048.88" y="607.5" >swapper</text>
</g>
<g >
<title>[unknown] (1 samples, 0.76%)</title><rect x="10.0" y="581" width="9.0" height="15.0" fill="rgb(205,168,48)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>perf_evlist__prepare_workload (1 samples, 0.76%)</title><rect x="604.5" y="517" width="9.0" height="15.0" fill="rgb(244,123,0)" rx="2" ry="2" />
<text  x="607.50" y="527.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 0.76%)</title><rect x="604.5" y="533" width="9.0" height="15.0" fill="rgb(226,77,45)" rx="2" ry="2" />
<text  x="607.50" y="543.5" ></text>
</g>
<g >
<title>__GI___execve (1 samples, 0.76%)</title><rect x="604.5" y="501" width="9.0" height="15.0" fill="rgb(254,164,32)" rx="2" ry="2" />
<text  x="607.50" y="511.5" ></text>
</g>
<g >
<title>secondary_startup_64 (11 samples, 8.40%)</title><rect x="1090.9" y="581" width="99.1" height="15.0" fill="rgb(230,139,54)" rx="2" ry="2" />
<text  x="1093.92" y="591.5" >secondary_s..</text>
</g>
<g >
<title>ctx_resched (64 samples, 48.85%)</title><rect x="28.0" y="261" width="576.5" height="15.0" fill="rgb(245,222,13)" rx="2" ry="2" />
<text  x="31.02" y="271.5" >ctx_resched</text>
</g>
<g >
<title>nmi_handle (1 samples, 0.76%)</title><rect x="460.4" y="197" width="9.0" height="15.0" fill="rgb(225,8,41)" rx="2" ry="2" />
<text  x="463.38" y="207.5" ></text>
</g>
</g>
</svg>
