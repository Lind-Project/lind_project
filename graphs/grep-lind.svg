<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="886.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="869" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="869" > </text>
<g id="frames">
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.17%)</title><rect x="896.0" y="773" width="2.0" height="15.0" fill="rgb(219,164,21)" rx="2" ry="2" />
<text  x="899.01" y="783.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.17%)</title><rect x="176.3" y="581" width="2.0" height="15.0" fill="rgb(210,45,6)" rx="2" ry="2" />
<text  x="179.25" y="591.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.17%)</title><rect x="918.3" y="245" width="2.0" height="15.0" fill="rgb(237,128,49)" rx="2" ry="2" />
<text  x="921.32" y="255.5" ></text>
</g>
<g >
<title>NaCl_trampoline_code_end (6 samples, 1.03%)</title><rect x="143.8" y="805" width="12.2" height="15.0" fill="rgb(248,37,15)" rx="2" ry="2" />
<text  x="146.81" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 2.23%)</title><rect x="178.3" y="549" width="26.3" height="15.0" fill="rgb(223,6,0)" rx="2" ry="2" />
<text  x="181.28" y="559.5" >d..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (7 samples, 1.20%)</title><rect x="186.4" y="325" width="14.2" height="15.0" fill="rgb(249,61,36)" rx="2" ry="2" />
<text  x="189.39" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (2 samples, 0.34%)</title><rect x="910.2" y="773" width="4.1" height="15.0" fill="rgb(236,172,36)" rx="2" ry="2" />
<text  x="913.21" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.17%)</title><rect x="141.8" y="645" width="2.0" height="15.0" fill="rgb(237,173,45)" rx="2" ry="2" />
<text  x="144.79" y="655.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.34%)</title><rect x="904.1" y="357" width="4.1" height="15.0" fill="rgb(208,145,29)" rx="2" ry="2" />
<text  x="907.12" y="367.5" ></text>
</g>
<g >
<title>NaClXCondVarBroadcast (2 samples, 0.34%)</title><rect x="523.0" y="757" width="4.0" height="15.0" fill="rgb(225,182,46)" rx="2" ry="2" />
<text  x="525.96" y="767.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (4 samples, 0.69%)</title><rect x="902.1" y="549" width="8.1" height="15.0" fill="rgb(206,65,18)" rx="2" ry="2" />
<text  x="905.10" y="559.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (1 samples, 0.17%)</title><rect x="174.2" y="773" width="2.1" height="15.0" fill="rgb(206,70,34)" rx="2" ry="2" />
<text  x="177.23" y="783.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.17%)</title><rect x="1113.0" y="693" width="2.0" height="15.0" fill="rgb(239,69,17)" rx="2" ry="2" />
<text  x="1115.96" y="703.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (2 samples, 0.34%)</title><rect x="1173.8" y="549" width="4.0" height="15.0" fill="rgb(205,67,45)" rx="2" ry="2" />
<text  x="1176.78" y="559.5" ></text>
</g>
<g >
<title>perf (65 samples, 11.17%)</title><rect x="12.0" y="821" width="131.8" height="15.0" fill="rgb(254,118,43)" rx="2" ry="2" />
<text  x="15.03" y="831.5" >perf</text>
</g>
<g >
<title>mmap_region (1 samples, 0.17%)</title><rect x="176.3" y="533" width="2.0" height="15.0" fill="rgb(219,178,2)" rx="2" ry="2" />
<text  x="179.25" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (2 samples, 0.34%)</title><rect x="910.2" y="757" width="4.1" height="15.0" fill="rgb(247,83,26)" rx="2" ry="2" />
<text  x="913.21" y="767.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.17%)</title><rect x="908.2" y="357" width="2.0" height="15.0" fill="rgb(217,120,48)" rx="2" ry="2" />
<text  x="911.18" y="367.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.17%)</title><rect x="202.6" y="357" width="2.0" height="15.0" fill="rgb(232,214,38)" rx="2" ry="2" />
<text  x="205.61" y="367.5" ></text>
</g>
<g >
<title>newidle_balance (5 samples, 0.86%)</title><rect x="1169.7" y="629" width="10.2" height="15.0" fill="rgb(208,10,30)" rx="2" ry="2" />
<text  x="1172.73" y="639.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (1 samples, 0.17%)</title><rect x="993.3" y="757" width="2.1" height="15.0" fill="rgb(240,20,14)" rx="2" ry="2" />
<text  x="996.33" y="767.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.17%)</title><rect x="174.2" y="549" width="2.1" height="15.0" fill="rgb(244,35,13)" rx="2" ry="2" />
<text  x="177.23" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.34%)</title><rect x="898.0" y="789" width="4.1" height="15.0" fill="rgb(237,35,49)" rx="2" ry="2" />
<text  x="901.04" y="799.5" ></text>
</g>
<g >
<title>NaClMutexLock (6 samples, 1.03%)</title><rect x="881.8" y="789" width="12.2" height="15.0" fill="rgb(245,172,32)" rx="2" ry="2" />
<text  x="884.82" y="799.5" ></text>
</g>
<g >
<title>pick_next_task_fair (9 samples, 1.55%)</title><rect x="1094.7" y="709" width="18.3" height="15.0" fill="rgb(215,132,18)" rx="2" ry="2" />
<text  x="1097.71" y="719.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.17%)</title><rect x="902.1" y="245" width="2.0" height="15.0" fill="rgb(254,221,24)" rx="2" ry="2" />
<text  x="905.10" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.17%)</title><rect x="993.3" y="773" width="2.1" height="15.0" fill="rgb(221,198,7)" rx="2" ry="2" />
<text  x="996.33" y="783.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (35 samples, 6.01%)</title><rect x="999.4" y="693" width="71.0" height="15.0" fill="rgb(251,29,2)" rx="2" ry="2" />
<text  x="1002.42" y="703.5" >mwait_id..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 11.00%)</title><rect x="12.0" y="693" width="129.8" height="15.0" fill="rgb(249,81,44)" rx="2" ry="2" />
<text  x="15.03" y="703.5" >entry_SYSCALL_64..</text>
</g>
<g >
<title>vfs_write (1 samples, 0.17%)</title><rect x="141.8" y="581" width="2.0" height="15.0" fill="rgb(243,170,11)" rx="2" ry="2" />
<text  x="144.79" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (13 samples, 2.23%)</title><rect x="178.3" y="597" width="26.3" height="15.0" fill="rgb(247,60,36)" rx="2" ry="2" />
<text  x="181.28" y="607.5" >s..</text>
</g>
<g >
<title>unix_stream_read_actor (1 samples, 0.17%)</title><rect x="995.4" y="645" width="2.0" height="15.0" fill="rgb(216,154,39)" rx="2" ry="2" />
<text  x="998.36" y="655.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.17%)</title><rect x="1102.8" y="629" width="2.0" height="15.0" fill="rgb(234,42,54)" rx="2" ry="2" />
<text  x="1105.82" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (4 samples, 0.69%)</title><rect x="902.1" y="757" width="8.1" height="15.0" fill="rgb(221,216,39)" rx="2" ry="2" />
<text  x="905.10" y="767.5" ></text>
</g>
<g >
<title>[[stack]] (3 samples, 0.52%)</title><rect x="156.0" y="805" width="6.1" height="15.0" fill="rgb(208,89,9)" rx="2" ry="2" />
<text  x="158.98" y="815.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.17%)</title><rect x="174.2" y="501" width="2.1" height="15.0" fill="rgb(223,167,24)" rx="2" ry="2" />
<text  x="177.23" y="511.5" ></text>
</g>
<g >
<title>do_idle (35 samples, 6.01%)</title><rect x="1117.0" y="693" width="71.0" height="15.0" fill="rgb(216,83,0)" rx="2" ry="2" />
<text  x="1120.01" y="703.5" >do_idle</text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 0.34%)</title><rect x="170.2" y="709" width="4.0" height="15.0" fill="rgb(226,107,21)" rx="2" ry="2" />
<text  x="173.17" y="719.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (2 samples, 0.34%)</title><rect x="904.1" y="293" width="4.1" height="15.0" fill="rgb(237,160,48)" rx="2" ry="2" />
<text  x="907.12" y="303.5" ></text>
</g>
<g >
<title>record__write (1 samples, 0.17%)</title><rect x="141.8" y="693" width="2.0" height="15.0" fill="rgb(210,28,28)" rx="2" ry="2" />
<text  x="144.79" y="703.5" ></text>
</g>
<g >
<title>__schedule (10 samples, 1.72%)</title><rect x="1094.7" y="725" width="20.3" height="15.0" fill="rgb(232,168,11)" rx="2" ry="2" />
<text  x="1097.71" y="735.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.34%)</title><rect x="910.2" y="341" width="4.1" height="15.0" fill="rgb(205,211,38)" rx="2" ry="2" />
<text  x="913.21" y="351.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.17%)</title><rect x="918.3" y="501" width="2.0" height="15.0" fill="rgb(208,110,36)" rx="2" ry="2" />
<text  x="921.32" y="511.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.34%)</title><rect x="904.1" y="325" width="4.1" height="15.0" fill="rgb(218,143,17)" rx="2" ry="2" />
<text  x="907.12" y="335.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (2 samples, 0.34%)</title><rect x="1169.7" y="597" width="4.1" height="15.0" fill="rgb(219,68,49)" rx="2" ry="2" />
<text  x="1172.73" y="607.5" ></text>
</g>
<g >
<title>cpu_startup_entry (36 samples, 6.19%)</title><rect x="1117.0" y="709" width="73.0" height="15.0" fill="rgb(210,212,51)" rx="2" ry="2" />
<text  x="1120.01" y="719.5" >cpu_star..</text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.17%)</title><rect x="879.8" y="709" width="2.0" height="15.0" fill="rgb(207,125,2)" rx="2" ry="2" />
<text  x="882.79" y="719.5" ></text>
</g>
<g >
<title>cpu_startup_entry (59 samples, 10.14%)</title><rect x="997.4" y="773" width="119.6" height="15.0" fill="rgb(250,85,2)" rx="2" ry="2" />
<text  x="1000.39" y="783.5" >cpu_startup_en..</text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (4 samples, 0.69%)</title><rect x="902.1" y="565" width="8.1" height="15.0" fill="rgb(241,177,24)" rx="2" ry="2" />
<text  x="905.10" y="575.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.34%)</title><rect x="910.2" y="517" width="4.1" height="15.0" fill="rgb(210,41,18)" rx="2" ry="2" />
<text  x="913.21" y="527.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (2 samples, 0.34%)</title><rect x="910.2" y="181" width="4.1" height="15.0" fill="rgb(205,119,13)" rx="2" ry="2" />
<text  x="913.21" y="191.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.17%)</title><rect x="902.1" y="261" width="2.0" height="15.0" fill="rgb(243,157,30)" rx="2" ry="2" />
<text  x="905.10" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.17%)</title><rect x="1090.7" y="725" width="2.0" height="15.0" fill="rgb(216,93,46)" rx="2" ry="2" />
<text  x="1093.65" y="735.5" ></text>
</g>
<g >
<title>ovl_read_iter (13 samples, 2.23%)</title><rect x="178.3" y="469" width="26.3" height="15.0" fill="rgb(211,93,23)" rx="2" ry="2" />
<text  x="181.28" y="479.5" >o..</text>
</g>
<g >
<title>unlink_anon_vmas (1 samples, 0.17%)</title><rect x="176.3" y="469" width="2.0" height="15.0" fill="rgb(233,8,50)" rx="2" ry="2" />
<text  x="179.25" y="479.5" ></text>
</g>
<g >
<title>pick_next_task_fair (5 samples, 0.86%)</title><rect x="1169.7" y="645" width="10.2" height="15.0" fill="rgb(214,137,6)" rx="2" ry="2" />
<text  x="1172.73" y="655.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.17%)</title><rect x="1157.6" y="597" width="2.0" height="15.0" fill="rgb(218,164,51)" rx="2" ry="2" />
<text  x="1160.56" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.17%)</title><rect x="879.8" y="741" width="2.0" height="15.0" fill="rgb(243,118,51)" rx="2" ry="2" />
<text  x="882.79" y="751.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (4 samples, 0.69%)</title><rect x="902.1" y="517" width="8.1" height="15.0" fill="rgb(236,55,21)" rx="2" ry="2" />
<text  x="905.10" y="527.5" ></text>
</g>
<g >
<title>NaClSysMunmapDecoder (1 samples, 0.17%)</title><rect x="176.3" y="773" width="2.0" height="15.0" fill="rgb(209,33,15)" rx="2" ry="2" />
<text  x="179.25" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.17%)</title><rect x="10.0" y="805" width="2.0" height="15.0" fill="rgb(210,65,13)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.34%)</title><rect x="910.2" y="325" width="4.1" height="15.0" fill="rgb(229,198,33)" rx="2" ry="2" />
<text  x="913.21" y="335.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.17%)</title><rect x="174.2" y="597" width="2.1" height="15.0" fill="rgb(240,221,54)" rx="2" ry="2" />
<text  x="177.23" y="607.5" ></text>
</g>
<g >
<title>menu_select (2 samples, 0.34%)</title><rect x="1086.6" y="709" width="4.1" height="15.0" fill="rgb(207,52,51)" rx="2" ry="2" />
<text  x="1089.60" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.17%)</title><rect x="910.2" y="69" width="2.0" height="15.0" fill="rgb(209,179,35)" rx="2" ry="2" />
<text  x="913.21" y="79.5" ></text>
</g>
<g >
<title>cpuidle_select (2 samples, 0.34%)</title><rect x="1086.6" y="725" width="4.1" height="15.0" fill="rgb(210,54,14)" rx="2" ry="2" />
<text  x="1089.60" y="735.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.17%)</title><rect x="1086.6" y="677" width="2.0" height="15.0" fill="rgb(244,125,17)" rx="2" ry="2" />
<text  x="1089.60" y="687.5" ></text>
</g>
<g >
<title>vfs_read (13 samples, 2.23%)</title><rect x="178.3" y="501" width="26.3" height="15.0" fill="rgb(249,77,32)" rx="2" ry="2" />
<text  x="181.28" y="511.5" >v..</text>
</g>
<g >
<title>unmap_region (1 samples, 0.17%)</title><rect x="176.3" y="501" width="2.0" height="15.0" fill="rgb(224,14,51)" rx="2" ry="2" />
<text  x="179.25" y="511.5" ></text>
</g>
<g >
<title>new_sync_read (13 samples, 2.23%)</title><rect x="178.3" y="485" width="26.3" height="15.0" fill="rgb(212,163,28)" rx="2" ry="2" />
<text  x="181.28" y="495.5" >n..</text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.17%)</title><rect x="879.8" y="693" width="2.0" height="15.0" fill="rgb(220,97,21)" rx="2" ry="2" />
<text  x="882.79" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (64 samples, 11.00%)</title><rect x="12.0" y="661" width="129.8" height="15.0" fill="rgb(214,200,22)" rx="2" ry="2" />
<text  x="15.03" y="671.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>[unknown] (65 samples, 11.17%)</title><rect x="12.0" y="805" width="131.8" height="15.0" fill="rgb(220,80,13)" rx="2" ry="2" />
<text  x="15.03" y="815.5" >[unknown]</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.34%)</title><rect x="910.2" y="389" width="4.1" height="15.0" fill="rgb(229,10,9)" rx="2" ry="2" />
<text  x="913.21" y="399.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (1 samples, 0.17%)</title><rect x="172.2" y="677" width="2.0" height="15.0" fill="rgb(237,137,52)" rx="2" ry="2" />
<text  x="175.20" y="687.5" ></text>
</g>
<g >
<title>generic_file_buffered_read_get_pages (1 samples, 0.17%)</title><rect x="200.6" y="357" width="2.0" height="15.0" fill="rgb(250,109,8)" rx="2" ry="2" />
<text  x="203.58" y="367.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.34%)</title><rect x="910.2" y="581" width="4.1" height="15.0" fill="rgb(216,107,17)" rx="2" ry="2" />
<text  x="913.21" y="591.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.17%)</title><rect x="141.8" y="469" width="2.0" height="15.0" fill="rgb(250,193,11)" rx="2" ry="2" />
<text  x="144.79" y="479.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (1 samples, 0.17%)</title><rect x="879.8" y="773" width="2.0" height="15.0" fill="rgb(243,87,32)" rx="2" ry="2" />
<text  x="882.79" y="783.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (4 samples, 0.69%)</title><rect x="902.1" y="725" width="8.1" height="15.0" fill="rgb(217,41,9)" rx="2" ry="2" />
<text  x="905.10" y="735.5" ></text>
</g>
<g >
<title>itoa::Buffer::new (1 samples, 0.17%)</title><rect x="918.3" y="293" width="2.0" height="15.0" fill="rgb(225,115,51)" rx="2" ry="2" />
<text  x="921.32" y="303.5" ></text>
</g>
<g >
<title>free_pgtables (1 samples, 0.17%)</title><rect x="176.3" y="485" width="2.0" height="15.0" fill="rgb(225,144,39)" rx="2" ry="2" />
<text  x="179.25" y="495.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.17%)</title><rect x="141.8" y="405" width="2.0" height="15.0" fill="rgb(252,20,41)" rx="2" ry="2" />
<text  x="144.79" y="415.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (2 samples, 0.34%)</title><rect x="916.3" y="645" width="4.0" height="15.0" fill="rgb(207,21,32)" rx="2" ry="2" />
<text  x="919.29" y="655.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.34%)</title><rect x="904.1" y="309" width="4.1" height="15.0" fill="rgb(231,61,34)" rx="2" ry="2" />
<text  x="907.12" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.34%)</title><rect x="993.3" y="789" width="4.1" height="15.0" fill="rgb(221,15,15)" rx="2" ry="2" />
<text  x="996.33" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 2.23%)</title><rect x="178.3" y="565" width="26.3" height="15.0" fill="rgb(227,173,18)" rx="2" ry="2" />
<text  x="181.28" y="575.5" >e..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (1 samples, 0.17%)</title><rect x="908.2" y="325" width="2.0" height="15.0" fill="rgb(220,12,45)" rx="2" ry="2" />
<text  x="911.18" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.17%)</title><rect x="141.8" y="629" width="2.0" height="15.0" fill="rgb(223,197,19)" rx="2" ry="2" />
<text  x="144.79" y="639.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.34%)</title><rect x="910.2" y="661" width="4.1" height="15.0" fill="rgb(253,166,5)" rx="2" ry="2" />
<text  x="913.21" y="671.5" ></text>
</g>
<g >
<title>lind_exit (1 samples, 0.17%)</title><rect x="174.2" y="741" width="2.1" height="15.0" fill="rgb(211,32,53)" rx="2" ry="2" />
<text  x="177.23" y="751.5" ></text>
</g>
<g >
<title>find_get_pages_contig (1 samples, 0.17%)</title><rect x="200.6" y="341" width="2.0" height="15.0" fill="rgb(242,70,1)" rx="2" ry="2" />
<text  x="203.58" y="351.5" ></text>
</g>
<g >
<title>NaClSysExit (1 samples, 0.17%)</title><rect x="174.2" y="757" width="2.1" height="15.0" fill="rgb(213,36,35)" rx="2" ry="2" />
<text  x="177.23" y="767.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 11.00%)</title><rect x="12.0" y="437" width="129.8" height="15.0" fill="rgb(206,93,21)" rx="2" ry="2" />
<text  x="15.03" y="447.5" >native_write_msr</text>
</g>
<g >
<title>secondary_startup_64_no_verify (95 samples, 16.32%)</title><rect x="997.4" y="805" width="192.6" height="15.0" fill="rgb(240,94,27)" rx="2" ry="2" />
<text  x="1000.39" y="815.5" >secondary_startup_64_no_v..</text>
</g>
<g >
<title>NaClXMutexUnlock (2 samples, 0.34%)</title><rect x="527.0" y="757" width="4.1" height="15.0" fill="rgb(250,42,54)" rx="2" ry="2" />
<text  x="530.01" y="767.5" ></text>
</g>
<g >
<title>NaClSysWaitpidDecoder (161 samples, 27.66%)</title><rect x="204.6" y="773" width="326.5" height="15.0" fill="rgb(205,140,1)" rx="2" ry="2" />
<text  x="207.64" y="783.5" >NaClSysWaitpidDecoder</text>
</g>
<g >
<title>NaClSyscallCSegHook (178 samples, 30.58%)</title><rect x="170.2" y="789" width="360.9" height="15.0" fill="rgb(209,190,7)" rx="2" ry="2" />
<text  x="173.17" y="799.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 11.00%)</title><rect x="12.0" y="469" width="129.8" height="15.0" fill="rgb(233,199,24)" rx="2" ry="2" />
<text  x="15.03" y="479.5" >x86_pmu_enable</text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (2 samples, 0.34%)</title><rect x="910.2" y="165" width="4.1" height="15.0" fill="rgb(214,161,14)" rx="2" ry="2" />
<text  x="913.21" y="175.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.17%)</title><rect x="1179.9" y="613" width="2.0" height="15.0" fill="rgb(253,71,5)" rx="2" ry="2" />
<text  x="1182.86" y="623.5" ></text>
</g>
<g >
<title>start_kernel (36 samples, 6.19%)</title><rect x="1117.0" y="757" width="73.0" height="15.0" fill="rgb(224,152,4)" rx="2" ry="2" />
<text  x="1120.01" y="767.5" >start_ke..</text>
</g>
<g >
<title>NaClMutexUnlock (1 samples, 0.17%)</title><rect x="894.0" y="789" width="2.0" height="15.0" fill="rgb(215,107,49)" rx="2" ry="2" />
<text  x="896.99" y="799.5" ></text>
</g>
<g >
<title>NaClCondVarBroadcast (8 samples, 1.37%)</title><rect x="265.5" y="725" width="16.2" height="15.0" fill="rgb(241,157,48)" rx="2" ry="2" />
<text  x="268.46" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (1 samples, 0.17%)</title><rect x="902.1" y="405" width="2.0" height="15.0" fill="rgb(228,83,7)" rx="2" ry="2" />
<text  x="905.10" y="415.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.17%)</title><rect x="918.3" y="373" width="2.0" height="15.0" fill="rgb(245,228,0)" rx="2" ry="2" />
<text  x="921.32" y="383.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (2 samples, 0.34%)</title><rect x="910.2" y="597" width="4.1" height="15.0" fill="rgb(210,2,19)" rx="2" ry="2" />
<text  x="913.21" y="607.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (2 samples, 0.34%)</title><rect x="910.2" y="549" width="4.1" height="15.0" fill="rgb(205,229,12)" rx="2" ry="2" />
<text  x="913.21" y="559.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (43 samples, 7.39%)</title><rect x="999.4" y="709" width="87.2" height="15.0" fill="rgb(228,130,11)" rx="2" ry="2" />
<text  x="1002.42" y="719.5" >cpuidle_en..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.17%)</title><rect x="1157.6" y="565" width="2.0" height="15.0" fill="rgb(233,33,34)" rx="2" ry="2" />
<text  x="1160.56" y="575.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.69%)</title><rect x="902.1" y="485" width="8.1" height="15.0" fill="rgb(220,20,19)" rx="2" ry="2" />
<text  x="905.10" y="495.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.17%)</title><rect x="1155.5" y="629" width="2.1" height="15.0" fill="rgb(219,204,14)" rx="2" ry="2" />
<text  x="1158.53" y="639.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (4 samples, 0.69%)</title><rect x="902.1" y="581" width="8.1" height="15.0" fill="rgb(215,179,45)" rx="2" ry="2" />
<text  x="905.10" y="591.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (4 samples, 0.69%)</title><rect x="162.1" y="789" width="8.1" height="15.0" fill="rgb(213,136,23)" rx="2" ry="2" />
<text  x="165.06" y="799.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (1 samples, 0.17%)</title><rect x="908.2" y="309" width="2.0" height="15.0" fill="rgb(227,131,41)" rx="2" ry="2" />
<text  x="911.18" y="319.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.34%)</title><rect x="916.3" y="661" width="4.0" height="15.0" fill="rgb(245,204,31)" rx="2" ry="2" />
<text  x="919.29" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.17%)</title><rect x="10.0" y="709" width="2.0" height="15.0" fill="rgb(231,17,15)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>__evlist__enable (64 samples, 11.00%)</title><rect x="12.0" y="757" width="129.8" height="15.0" fill="rgb(216,147,43)" rx="2" ry="2" />
<text  x="15.03" y="767.5" >__evlist__enable</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.69%)</title><rect x="902.1" y="469" width="8.1" height="15.0" fill="rgb(207,175,3)" rx="2" ry="2" />
<text  x="905.10" y="479.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (1 samples, 0.17%)</title><rect x="174.2" y="629" width="2.1" height="15.0" fill="rgb(246,167,53)" rx="2" ry="2" />
<text  x="177.23" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.17%)</title><rect x="141.8" y="373" width="2.0" height="15.0" fill="rgb(232,12,45)" rx="2" ry="2" />
<text  x="144.79" y="383.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.17%)</title><rect x="174.2" y="565" width="2.1" height="15.0" fill="rgb(206,96,5)" rx="2" ry="2" />
<text  x="177.23" y="575.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (1 samples, 0.17%)</title><rect x="10.0" y="645" width="2.0" height="15.0" fill="rgb(227,190,41)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.17%)</title><rect x="141.8" y="677" width="2.0" height="15.0" fill="rgb(213,134,28)" rx="2" ry="2" />
<text  x="144.79" y="687.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.17%)</title><rect x="176.3" y="565" width="2.0" height="15.0" fill="rgb(250,50,10)" rx="2" ry="2" />
<text  x="179.25" y="575.5" ></text>
</g>
<g >
<title>record__mmap_read_all (1 samples, 0.17%)</title><rect x="141.8" y="757" width="2.0" height="15.0" fill="rgb(225,33,15)" rx="2" ry="2" />
<text  x="144.79" y="767.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.17%)</title><rect x="174.2" y="709" width="2.1" height="15.0" fill="rgb(220,197,29)" rx="2" ry="2" />
<text  x="177.23" y="719.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.17%)</title><rect x="918.3" y="357" width="2.0" height="15.0" fill="rgb(205,38,34)" rx="2" ry="2" />
<text  x="921.32" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.17%)</title><rect x="176.3" y="629" width="2.0" height="15.0" fill="rgb(243,15,2)" rx="2" ry="2" />
<text  x="179.25" y="639.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.17%)</title><rect x="910.2" y="37" width="2.0" height="15.0" fill="rgb(245,52,19)" rx="2" ry="2" />
<text  x="913.21" y="47.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.17%)</title><rect x="1102.8" y="613" width="2.0" height="15.0" fill="rgb(231,79,40)" rx="2" ry="2" />
<text  x="1105.82" y="623.5" ></text>
</g>
<g >
<title>poll_idle (8 samples, 1.37%)</title><rect x="1070.4" y="693" width="16.2" height="15.0" fill="rgb(229,79,46)" rx="2" ry="2" />
<text  x="1073.38" y="703.5" ></text>
</g>
<g >
<title>poll_idle (8 samples, 1.37%)</title><rect x="1133.2" y="629" width="16.3" height="15.0" fill="rgb(223,225,17)" rx="2" ry="2" />
<text  x="1136.23" y="639.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.17%)</title><rect x="1088.6" y="677" width="2.1" height="15.0" fill="rgb(247,141,18)" rx="2" ry="2" />
<text  x="1091.63" y="687.5" ></text>
</g>
<g >
<title>NaClHostDescRead (13 samples, 2.23%)</title><rect x="178.3" y="725" width="26.3" height="15.0" fill="rgb(250,224,26)" rx="2" ry="2" />
<text  x="181.28" y="735.5" >N..</text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.17%)</title><rect x="141.8" y="533" width="2.0" height="15.0" fill="rgb(230,66,53)" rx="2" ry="2" />
<text  x="144.79" y="543.5" ></text>
</g>
<g >
<title>cpuidle_select (3 samples, 0.52%)</title><rect x="1153.5" y="661" width="6.1" height="15.0" fill="rgb(246,139,46)" rx="2" ry="2" />
<text  x="1156.51" y="671.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (46 samples, 7.90%)</title><rect x="423.6" y="709" width="93.3" height="15.0" fill="rgb(253,74,30)" rx="2" ry="2" />
<text  x="426.61" y="719.5" >__pthread_m..</text>
</g>
<g >
<title>generic_file_read_iter (12 samples, 2.06%)</title><rect x="180.3" y="389" width="24.3" height="15.0" fill="rgb(244,45,36)" rx="2" ry="2" />
<text  x="183.31" y="399.5" >g..</text>
</g>
<g >
<title>copy_page_to_iter (9 samples, 1.55%)</title><rect x="182.3" y="357" width="18.3" height="15.0" fill="rgb(211,78,4)" rx="2" ry="2" />
<text  x="185.34" y="367.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.17%)</title><rect x="141.8" y="597" width="2.0" height="15.0" fill="rgb(234,99,21)" rx="2" ry="2" />
<text  x="144.79" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (1 samples, 0.17%)</title><rect x="176.3" y="677" width="2.0" height="15.0" fill="rgb(216,72,53)" rx="2" ry="2" />
<text  x="179.25" y="687.5" ></text>
</g>
<g >
<title>main (2 samples, 0.34%)</title><rect x="916.3" y="773" width="4.0" height="15.0" fill="rgb(205,76,17)" rx="2" ry="2" />
<text  x="919.29" y="783.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 2.92%)</title><rect x="879.8" y="805" width="34.5" height="15.0" fill="rgb(223,52,48)" rx="2" ry="2" />
<text  x="882.79" y="815.5" >[u..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.17%)</title><rect x="912.2" y="101" width="2.1" height="15.0" fill="rgb(230,61,35)" rx="2" ry="2" />
<text  x="915.23" y="111.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (13 samples, 2.23%)</title><rect x="178.3" y="613" width="26.3" height="15.0" fill="rgb(220,211,43)" rx="2" ry="2" />
<text  x="181.28" y="623.5" >s..</text>
</g>
<g >
<title>NaClXCondVarBroadcast (13 samples, 2.23%)</title><rect x="255.3" y="741" width="26.4" height="15.0" fill="rgb(214,147,17)" rx="2" ry="2" />
<text  x="258.33" y="751.5" >N..</text>
</g>
<g >
<title>__perf_event_enable (64 samples, 11.00%)</title><rect x="12.0" y="501" width="129.8" height="15.0" fill="rgb(225,106,17)" rx="2" ry="2" />
<text  x="15.03" y="511.5" >__perf_event_ena..</text>
</g>
<g >
<title>flush_smp_call_function_queue (2 samples, 0.34%)</title><rect x="1161.6" y="661" width="4.1" height="15.0" fill="rgb(235,149,53)" rx="2" ry="2" />
<text  x="1164.62" y="671.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.17%)</title><rect x="902.1" y="373" width="2.0" height="15.0" fill="rgb(233,94,6)" rx="2" ry="2" />
<text  x="905.10" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (44 samples, 7.56%)</title><rect x="308.0" y="709" width="89.3" height="15.0" fill="rgb(218,25,18)" rx="2" ry="2" />
<text  x="311.04" y="719.5" >__GI___pth..</text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.17%)</title><rect x="879.8" y="757" width="2.0" height="15.0" fill="rgb(246,224,43)" rx="2" ry="2" />
<text  x="882.79" y="767.5" ></text>
</g>
<g >
<title>lindrustfinalize (2 samples, 0.34%)</title><rect x="916.3" y="741" width="4.0" height="15.0" fill="rgb(237,136,1)" rx="2" ry="2" />
<text  x="919.29" y="751.5" ></text>
</g>
<g >
<title>do_iter_read (13 samples, 2.23%)</title><rect x="178.3" y="437" width="26.3" height="15.0" fill="rgb(217,111,7)" rx="2" ry="2" />
<text  x="181.28" y="447.5" >d..</text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.17%)</title><rect x="896.0" y="709" width="2.0" height="15.0" fill="rgb(226,27,33)" rx="2" ry="2" />
<text  x="899.01" y="719.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (2 samples, 0.34%)</title><rect x="1129.2" y="629" width="4.0" height="15.0" fill="rgb(240,91,31)" rx="2" ry="2" />
<text  x="1132.18" y="639.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.17%)</title><rect x="918.3" y="325" width="2.0" height="15.0" fill="rgb(254,109,15)" rx="2" ry="2" />
<text  x="921.32" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (1 samples, 0.17%)</title><rect x="918.3" y="405" width="2.0" height="15.0" fill="rgb(215,223,31)" rx="2" ry="2" />
<text  x="921.32" y="415.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.17%)</title><rect x="1157.6" y="581" width="2.0" height="15.0" fill="rgb(242,90,10)" rx="2" ry="2" />
<text  x="1160.56" y="591.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (13 samples, 2.23%)</title><rect x="178.3" y="405" width="26.3" height="15.0" fill="rgb(231,117,50)" rx="2" ry="2" />
<text  x="181.28" y="415.5" >e..</text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.17%)</title><rect x="896.0" y="741" width="2.0" height="15.0" fill="rgb(247,157,12)" rx="2" ry="2" />
<text  x="899.01" y="751.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (64 samples, 11.00%)</title><rect x="12.0" y="741" width="129.8" height="15.0" fill="rgb(247,167,21)" rx="2" ry="2" />
<text  x="15.03" y="751.5" >perf_evsel__enab..</text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.17%)</title><rect x="176.3" y="597" width="2.0" height="15.0" fill="rgb(250,82,51)" rx="2" ry="2" />
<text  x="179.25" y="607.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (36 samples, 6.19%)</title><rect x="1117.0" y="773" width="73.0" height="15.0" fill="rgb(238,117,44)" rx="2" ry="2" />
<text  x="1120.01" y="783.5" >x86_64_s..</text>
</g>
<g >
<title>nohz_newidle_balance (5 samples, 0.86%)</title><rect x="1169.7" y="613" width="10.2" height="15.0" fill="rgb(211,116,3)" rx="2" ry="2" />
<text  x="1172.73" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.17%)</title><rect x="902.1" y="149" width="2.0" height="15.0" fill="rgb(225,154,28)" rx="2" ry="2" />
<text  x="905.10" y="159.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.34%)</title><rect x="916.3" y="533" width="4.0" height="15.0" fill="rgb(254,179,21)" rx="2" ry="2" />
<text  x="919.29" y="543.5" ></text>
</g>
<g >
<title>vfs_iter_read (13 samples, 2.23%)</title><rect x="178.3" y="453" width="26.3" height="15.0" fill="rgb(222,17,48)" rx="2" ry="2" />
<text  x="181.28" y="463.5" >v..</text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.17%)</title><rect x="1167.7" y="677" width="2.0" height="15.0" fill="rgb(214,0,42)" rx="2" ry="2" />
<text  x="1170.70" y="687.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (1 samples, 0.17%)</title><rect x="995.4" y="661" width="2.0" height="15.0" fill="rgb(250,127,17)" rx="2" ry="2" />
<text  x="998.36" y="671.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (1 samples, 0.17%)</title><rect x="174.2" y="373" width="2.1" height="15.0" fill="rgb(228,216,18)" rx="2" ry="2" />
<text  x="177.23" y="383.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (13 samples, 2.23%)</title><rect x="178.3" y="741" width="26.3" height="15.0" fill="rgb(212,34,43)" rx="2" ry="2" />
<text  x="181.28" y="751.5" >N..</text>
</g>
<g >
<title>NaClSelLdrMain (1 samples, 0.17%)</title><rect x="896.0" y="789" width="2.0" height="15.0" fill="rgb(241,59,15)" rx="2" ry="2" />
<text  x="899.01" y="799.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.34%)</title><rect x="910.2" y="133" width="4.1" height="15.0" fill="rgb(222,87,5)" rx="2" ry="2" />
<text  x="913.21" y="143.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (1 samples, 0.17%)</title><rect x="141.8" y="741" width="2.0" height="15.0" fill="rgb(234,144,3)" rx="2" ry="2" />
<text  x="144.79" y="751.5" ></text>
</g>
<g >
<title>llist_add_batch (1 samples, 0.17%)</title><rect x="1177.8" y="565" width="2.1" height="15.0" fill="rgb(220,130,36)" rx="2" ry="2" />
<text  x="1180.84" y="575.5" ></text>
</g>
<g >
<title>cpuidle_enter (43 samples, 7.39%)</title><rect x="999.4" y="725" width="87.2" height="15.0" fill="rgb(236,222,9)" rx="2" ry="2" />
<text  x="1002.42" y="735.5" >cpuidle_en..</text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.17%)</title><rect x="906.2" y="261" width="2.0" height="15.0" fill="rgb(220,197,18)" rx="2" ry="2" />
<text  x="909.15" y="271.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.17%)</title><rect x="141.8" y="485" width="2.0" height="15.0" fill="rgb(242,125,29)" rx="2" ry="2" />
<text  x="144.79" y="495.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.17%)</title><rect x="995.4" y="725" width="2.0" height="15.0" fill="rgb(245,16,34)" rx="2" ry="2" />
<text  x="998.36" y="735.5" ></text>
</g>
<g >
<title>[anon] (4 samples, 0.69%)</title><rect x="162.1" y="805" width="8.1" height="15.0" fill="rgb(252,199,47)" rx="2" ry="2" />
<text  x="165.06" y="815.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (2 samples, 0.34%)</title><rect x="916.3" y="565" width="4.0" height="15.0" fill="rgb(214,6,50)" rx="2" ry="2" />
<text  x="919.29" y="575.5" ></text>
</g>
<g >
<title>_perf_ioctl (64 samples, 11.00%)</title><rect x="12.0" y="629" width="129.8" height="15.0" fill="rgb(227,28,48)" rx="2" ry="2" />
<text  x="15.03" y="639.5" >_perf_ioctl</text>
</g>
<g >
<title>&lt;u32 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (1 samples, 0.17%)</title><rect x="908.2" y="261" width="2.0" height="15.0" fill="rgb(252,22,17)" rx="2" ry="2" />
<text  x="911.18" y="271.5" ></text>
</g>
<g >
<title>dispatcher (13 samples, 2.23%)</title><rect x="178.3" y="693" width="26.3" height="15.0" fill="rgb(212,34,20)" rx="2" ry="2" />
<text  x="181.28" y="703.5" >d..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.17%)</title><rect x="902.1" y="357" width="2.0" height="15.0" fill="rgb(235,225,17)" rx="2" ry="2" />
<text  x="905.10" y="367.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.34%)</title><rect x="916.3" y="757" width="4.0" height="15.0" fill="rgb(238,144,43)" rx="2" ry="2" />
<text  x="919.29" y="767.5" ></text>
</g>
<g >
<title>menu_select (3 samples, 0.52%)</title><rect x="1153.5" y="645" width="6.1" height="15.0" fill="rgb(220,115,44)" rx="2" ry="2" />
<text  x="1156.51" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.17%)</title><rect x="176.3" y="613" width="2.0" height="15.0" fill="rgb(226,163,42)" rx="2" ry="2" />
<text  x="179.25" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.17%)</title><rect x="910.2" y="53" width="2.0" height="15.0" fill="rgb(224,31,50)" rx="2" ry="2" />
<text  x="913.21" y="63.5" ></text>
</g>
<g >
<title>sock_read_iter (1 samples, 0.17%)</title><rect x="995.4" y="709" width="2.0" height="15.0" fill="rgb(220,43,44)" rx="2" ry="2" />
<text  x="998.36" y="719.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (2 samples, 0.34%)</title><rect x="910.2" y="613" width="4.1" height="15.0" fill="rgb(215,140,16)" rx="2" ry="2" />
<text  x="913.21" y="623.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (8 samples, 1.37%)</title><rect x="184.4" y="341" width="16.2" height="15.0" fill="rgb(239,225,47)" rx="2" ry="2" />
<text  x="187.36" y="351.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.17%)</title><rect x="902.1" y="389" width="2.0" height="15.0" fill="rgb(221,67,44)" rx="2" ry="2" />
<text  x="905.10" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (3 samples, 0.52%)</title><rect x="1181.9" y="677" width="6.1" height="15.0" fill="rgb(238,7,9)" rx="2" ry="2" />
<text  x="1184.89" y="687.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.17%)</title><rect x="174.2" y="517" width="2.1" height="15.0" fill="rgb(234,206,25)" rx="2" ry="2" />
<text  x="177.23" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (4 samples, 0.69%)</title><rect x="902.1" y="645" width="8.1" height="15.0" fill="rgb(232,40,39)" rx="2" ry="2" />
<text  x="905.10" y="655.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (1 samples, 0.17%)</title><rect x="141.8" y="437" width="2.0" height="15.0" fill="rgb(241,0,41)" rx="2" ry="2" />
<text  x="144.79" y="447.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (1 samples, 0.17%)</title><rect x="879.8" y="789" width="2.0" height="15.0" fill="rgb(220,111,44)" rx="2" ry="2" />
<text  x="882.79" y="799.5" ></text>
</g>
<g >
<title>swapper (133 samples, 22.85%)</title><rect x="920.3" y="821" width="269.7" height="15.0" fill="rgb(240,52,54)" rx="2" ry="2" />
<text  x="923.34" y="831.5" >swapper</text>
</g>
<g >
<title>cpuidle_enter_state (13 samples, 2.23%)</title><rect x="1127.1" y="645" width="26.4" height="15.0" fill="rgb(223,128,46)" rx="2" ry="2" />
<text  x="1130.15" y="655.5" >c..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.17%)</title><rect x="902.1" y="309" width="2.0" height="15.0" fill="rgb(224,141,11)" rx="2" ry="2" />
<text  x="905.10" y="319.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (64 samples, 11.00%)</title><rect x="12.0" y="613" width="129.8" height="15.0" fill="rgb(214,115,37)" rx="2" ry="2" />
<text  x="15.03" y="623.5" >perf_event_for_e..</text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.17%)</title><rect x="141.8" y="421" width="2.0" height="15.0" fill="rgb(226,49,15)" rx="2" ry="2" />
<text  x="144.79" y="431.5" ></text>
</g>
<g >
<title>NaClCondVarBroadcast (4 samples, 0.69%)</title><rect x="247.2" y="741" width="8.1" height="15.0" fill="rgb(249,42,7)" rx="2" ry="2" />
<text  x="250.22" y="751.5" ></text>
</g>
<g >
<title>__libc_read (13 samples, 2.23%)</title><rect x="178.3" y="581" width="26.3" height="15.0" fill="rgb(222,133,13)" rx="2" ry="2" />
<text  x="181.28" y="591.5" >_..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (4 samples, 0.69%)</title><rect x="902.1" y="437" width="8.1" height="15.0" fill="rgb(218,112,41)" rx="2" ry="2" />
<text  x="905.10" y="447.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.17%)</title><rect x="141.8" y="501" width="2.0" height="15.0" fill="rgb(253,101,50)" rx="2" ry="2" />
<text  x="144.79" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (2 samples, 0.34%)</title><rect x="419.6" y="709" width="4.0" height="15.0" fill="rgb(216,199,28)" rx="2" ry="2" />
<text  x="422.55" y="719.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 1.03%)</title><rect x="1169.7" y="661" width="12.2" height="15.0" fill="rgb(245,214,35)" rx="2" ry="2" />
<text  x="1172.73" y="671.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (4 samples, 0.69%)</title><rect x="902.1" y="677" width="8.1" height="15.0" fill="rgb(217,190,39)" rx="2" ry="2" />
<text  x="905.10" y="687.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (2 samples, 0.34%)</title><rect x="910.2" y="741" width="4.1" height="15.0" fill="rgb(234,137,20)" rx="2" ry="2" />
<text  x="913.21" y="751.5" ></text>
</g>
<g >
<title>__GI_execve (1 samples, 0.17%)</title><rect x="10.0" y="725" width="2.0" height="15.0" fill="rgb(222,113,38)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.17%)</title><rect x="174.2" y="357" width="2.1" height="15.0" fill="rgb(239,187,42)" rx="2" ry="2" />
<text  x="177.23" y="367.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (1 samples, 0.17%)</title><rect x="918.3" y="341" width="2.0" height="15.0" fill="rgb(220,183,42)" rx="2" ry="2" />
<text  x="921.32" y="351.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.52%)</title><rect x="904.1" y="389" width="6.1" height="15.0" fill="rgb(235,185,12)" rx="2" ry="2" />
<text  x="907.12" y="399.5" ></text>
</g>
<g >
<title>schedule_idle (6 samples, 1.03%)</title><rect x="1169.7" y="677" width="12.2" height="15.0" fill="rgb(212,127,6)" rx="2" ry="2" />
<text  x="1172.73" y="687.5" ></text>
</g>
<g >
<title>perf_mmap__push (1 samples, 0.17%)</title><rect x="141.8" y="725" width="2.0" height="15.0" fill="rgb(241,69,13)" rx="2" ry="2" />
<text  x="144.79" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (3 samples, 0.52%)</title><rect x="904.1" y="405" width="6.1" height="15.0" fill="rgb(227,167,21)" rx="2" ry="2" />
<text  x="907.12" y="415.5" ></text>
</g>
<g >
<title>start_secondary (59 samples, 10.14%)</title><rect x="997.4" y="789" width="119.6" height="15.0" fill="rgb(246,189,48)" rx="2" ry="2" />
<text  x="1000.39" y="799.5" >start_secondary</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.17%)</title><rect x="918.3" y="485" width="2.0" height="15.0" fill="rgb(236,121,31)" rx="2" ry="2" />
<text  x="921.32" y="495.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.34%)</title><rect x="916.3" y="613" width="4.0" height="15.0" fill="rgb(216,152,2)" rx="2" ry="2" />
<text  x="919.29" y="623.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.17%)</title><rect x="902.1" y="277" width="2.0" height="15.0" fill="rgb(208,97,46)" rx="2" ry="2" />
<text  x="905.10" y="287.5" ></text>
</g>
<g >
<title>__ioctl (64 samples, 11.00%)</title><rect x="12.0" y="709" width="129.8" height="15.0" fill="rgb(224,219,30)" rx="2" ry="2" />
<text  x="15.03" y="719.5" >__ioctl</text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.17%)</title><rect x="1115.0" y="741" width="2.0" height="15.0" fill="rgb(231,174,18)" rx="2" ry="2" />
<text  x="1117.98" y="751.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.17%)</title><rect x="1188.0" y="693" width="2.0" height="15.0" fill="rgb(209,185,11)" rx="2" ry="2" />
<text  x="1190.97" y="703.5" ></text>
</g>
<g >
<title>ksys_read (13 samples, 2.23%)</title><rect x="178.3" y="517" width="26.3" height="15.0" fill="rgb(205,34,54)" rx="2" ry="2" />
<text  x="181.28" y="527.5" >k..</text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.17%)</title><rect x="912.2" y="85" width="2.1" height="15.0" fill="rgb(254,170,23)" rx="2" ry="2" />
<text  x="915.23" y="95.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.17%)</title><rect x="141.8" y="389" width="2.0" height="15.0" fill="rgb(239,83,46)" rx="2" ry="2" />
<text  x="144.79" y="399.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.17%)</title><rect x="174.2" y="453" width="2.1" height="15.0" fill="rgb(230,157,32)" rx="2" ry="2" />
<text  x="177.23" y="463.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (13 samples, 2.23%)</title><rect x="178.3" y="421" width="26.3" height="15.0" fill="rgb(234,21,21)" rx="2" ry="2" />
<text  x="181.28" y="431.5" >d..</text>
</g>
<g >
<title>kick_ilb (5 samples, 0.86%)</title><rect x="1102.8" y="661" width="10.2" height="15.0" fill="rgb(243,206,28)" rx="2" ry="2" />
<text  x="1105.82" y="671.5" ></text>
</g>
<g >
<title>&lt;u32 as itoa::Integer&gt;::write (1 samples, 0.17%)</title><rect x="908.2" y="277" width="2.0" height="15.0" fill="rgb(219,172,1)" rx="2" ry="2" />
<text  x="911.18" y="287.5" ></text>
</g>
<g >
<title>kick_ilb (3 samples, 0.52%)</title><rect x="1173.8" y="597" width="6.1" height="15.0" fill="rgb(248,17,1)" rx="2" ry="2" />
<text  x="1176.78" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.17%)</title><rect x="176.3" y="693" width="2.0" height="15.0" fill="rgb(209,48,52)" rx="2" ry="2" />
<text  x="179.25" y="703.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.17%)</title><rect x="995.4" y="741" width="2.0" height="15.0" fill="rgb(249,210,22)" rx="2" ry="2" />
<text  x="998.36" y="751.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (2 samples, 0.34%)</title><rect x="904.1" y="277" width="4.1" height="15.0" fill="rgb(223,154,32)" rx="2" ry="2" />
<text  x="907.12" y="287.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.34%)</title><rect x="910.2" y="629" width="4.1" height="15.0" fill="rgb(217,209,8)" rx="2" ry="2" />
<text  x="913.21" y="639.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.34%)</title><rect x="910.2" y="501" width="4.1" height="15.0" fill="rgb(220,223,4)" rx="2" ry="2" />
<text  x="913.21" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.17%)</title><rect x="1115.0" y="725" width="2.0" height="15.0" fill="rgb(251,101,45)" rx="2" ry="2" />
<text  x="1117.98" y="735.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 0.17%)</title><rect x="10.0" y="789" width="2.0" height="15.0" fill="rgb(245,185,2)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (4 samples, 0.69%)</title><rect x="902.1" y="501" width="8.1" height="15.0" fill="rgb(246,223,17)" rx="2" ry="2" />
<text  x="905.10" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (1 samples, 0.17%)</title><rect x="916.3" y="437" width="2.0" height="15.0" fill="rgb(242,78,44)" rx="2" ry="2" />
<text  x="919.29" y="447.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (1 samples, 0.17%)</title><rect x="902.1" y="133" width="2.0" height="15.0" fill="rgb(249,78,22)" rx="2" ry="2" />
<text  x="905.10" y="143.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (2 samples, 0.34%)</title><rect x="170.2" y="757" width="4.0" height="15.0" fill="rgb(205,154,10)" rx="2" ry="2" />
<text  x="173.17" y="767.5" ></text>
</g>
<g >
<title>NaClValidateCode (2 samples, 0.34%)</title><rect x="170.2" y="725" width="4.0" height="15.0" fill="rgb(223,106,48)" rx="2" ry="2" />
<text  x="173.17" y="735.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (3 samples, 0.52%)</title><rect x="516.9" y="709" width="6.1" height="15.0" fill="rgb(223,115,49)" rx="2" ry="2" />
<text  x="519.87" y="719.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.17%)</title><rect x="916.3" y="517" width="2.0" height="15.0" fill="rgb(231,109,21)" rx="2" ry="2" />
<text  x="919.29" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.17%)</title><rect x="174.2" y="677" width="2.1" height="15.0" fill="rgb(230,140,46)" rx="2" ry="2" />
<text  x="177.23" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.17%)</title><rect x="10.0" y="693" width="2.0" height="15.0" fill="rgb(209,194,10)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>sel_ldr (383 samples, 65.81%)</title><rect x="143.8" y="821" width="776.5" height="15.0" fill="rgb(226,155,17)" rx="2" ry="2" />
<text  x="146.81" y="831.5" >sel_ldr</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (2 samples, 0.34%)</title><rect x="910.2" y="677" width="4.1" height="15.0" fill="rgb(210,186,20)" rx="2" ry="2" />
<text  x="913.21" y="687.5" ></text>
</g>
<g >
<title>llist_add_batch (4 samples, 0.69%)</title><rect x="1104.8" y="629" width="8.2" height="15.0" fill="rgb(211,208,22)" rx="2" ry="2" />
<text  x="1107.85" y="639.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (1 samples, 0.17%)</title><rect x="914.3" y="805" width="2.0" height="15.0" fill="rgb(248,102,0)" rx="2" ry="2" />
<text  x="917.26" y="815.5" ></text>
</g>
<g >
<title>_start (2 samples, 0.34%)</title><rect x="916.3" y="805" width="4.0" height="15.0" fill="rgb(208,79,24)" rx="2" ry="2" />
<text  x="919.29" y="815.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (1 samples, 0.17%)</title><rect x="918.3" y="309" width="2.0" height="15.0" fill="rgb(238,70,9)" rx="2" ry="2" />
<text  x="921.32" y="319.5" ></text>
</g>
<g >
<title>__execvpe_common (1 samples, 0.17%)</title><rect x="10.0" y="741" width="2.0" height="15.0" fill="rgb(220,101,5)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>MunmapInternal (1 samples, 0.17%)</title><rect x="176.3" y="741" width="2.0" height="15.0" fill="rgb(216,52,1)" rx="2" ry="2" />
<text  x="179.25" y="751.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.17%)</title><rect x="1115.0" y="693" width="2.0" height="15.0" fill="rgb(242,36,21)" rx="2" ry="2" />
<text  x="1117.98" y="703.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.17%)</title><rect x="141.8" y="357" width="2.0" height="15.0" fill="rgb(217,173,39)" rx="2" ry="2" />
<text  x="144.79" y="367.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.17%)</title><rect x="896.0" y="693" width="2.0" height="15.0" fill="rgb(243,37,53)" rx="2" ry="2" />
<text  x="899.01" y="703.5" ></text>
</g>
<g >
<title>_perf_event_enable (64 samples, 11.00%)</title><rect x="12.0" y="597" width="129.8" height="15.0" fill="rgb(237,129,54)" rx="2" ry="2" />
<text  x="15.03" y="607.5" >_perf_event_enable</text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (1 samples, 0.17%)</title><rect x="174.2" y="437" width="2.1" height="15.0" fill="rgb(221,149,43)" rx="2" ry="2" />
<text  x="177.23" y="447.5" ></text>
</g>
<g >
<title>NaClMutexLock (53 samples, 9.11%)</title><rect x="289.8" y="725" width="107.5" height="15.0" fill="rgb(243,209,35)" rx="2" ry="2" />
<text  x="292.79" y="735.5" >NaClMutexLock</text>
</g>
<g >
<title>generic_exec_single (64 samples, 11.00%)</title><rect x="12.0" y="549" width="129.8" height="15.0" fill="rgb(241,169,5)" rx="2" ry="2" />
<text  x="15.03" y="559.5" >generic_exec_sin..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (2 samples, 0.34%)</title><rect x="910.2" y="437" width="4.1" height="15.0" fill="rgb(207,142,29)" rx="2" ry="2" />
<text  x="913.21" y="447.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (6 samples, 1.03%)</title><rect x="143.8" y="789" width="12.2" height="15.0" fill="rgb(236,13,40)" rx="2" ry="2" />
<text  x="146.81" y="799.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.17%)</title><rect x="918.3" y="453" width="2.0" height="15.0" fill="rgb(224,191,17)" rx="2" ry="2" />
<text  x="921.32" y="463.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (5 samples, 0.86%)</title><rect x="1102.8" y="645" width="10.2" height="15.0" fill="rgb(248,36,44)" rx="2" ry="2" />
<text  x="1105.82" y="655.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.17%)</title><rect x="902.1" y="341" width="2.0" height="15.0" fill="rgb(226,37,54)" rx="2" ry="2" />
<text  x="905.10" y="351.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (2 samples, 0.34%)</title><rect x="1098.8" y="661" width="4.0" height="15.0" fill="rgb(228,26,44)" rx="2" ry="2" />
<text  x="1101.76" y="671.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (4 samples, 0.69%)</title><rect x="902.1" y="693" width="8.1" height="15.0" fill="rgb(245,13,49)" rx="2" ry="2" />
<text  x="905.10" y="703.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (2 samples, 0.34%)</title><rect x="910.2" y="357" width="4.1" height="15.0" fill="rgb(240,26,50)" rx="2" ry="2" />
<text  x="913.21" y="367.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.17%)</title><rect x="896.0" y="757" width="2.0" height="15.0" fill="rgb(205,169,19)" rx="2" ry="2" />
<text  x="899.01" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.17%)</title><rect x="879.8" y="725" width="2.0" height="15.0" fill="rgb(213,23,21)" rx="2" ry="2" />
<text  x="882.79" y="735.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.69%)</title><rect x="902.1" y="453" width="8.1" height="15.0" fill="rgb(227,109,30)" rx="2" ry="2" />
<text  x="905.10" y="463.5" ></text>
</g>
<g >
<title>NaClValidateImage (1 samples, 0.17%)</title><rect x="896.0" y="725" width="2.0" height="15.0" fill="rgb(240,141,22)" rx="2" ry="2" />
<text  x="899.01" y="735.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (1 samples, 0.17%)</title><rect x="908.2" y="341" width="2.0" height="15.0" fill="rgb(207,118,52)" rx="2" ry="2" />
<text  x="911.18" y="351.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (2 samples, 0.34%)</title><rect x="916.3" y="581" width="4.0" height="15.0" fill="rgb(250,98,6)" rx="2" ry="2" />
<text  x="919.29" y="591.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (1 samples, 0.17%)</title><rect x="902.1" y="117" width="2.0" height="15.0" fill="rgb(212,156,20)" rx="2" ry="2" />
<text  x="905.10" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.17%)</title><rect x="910.2" y="101" width="2.0" height="15.0" fill="rgb(213,142,48)" rx="2" ry="2" />
<text  x="913.21" y="111.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 0.34%)</title><rect x="170.2" y="693" width="4.0" height="15.0" fill="rgb(226,154,53)" rx="2" ry="2" />
<text  x="173.17" y="703.5" ></text>
</g>
<g >
<title>cmd_record (65 samples, 11.17%)</title><rect x="12.0" y="789" width="131.8" height="15.0" fill="rgb(224,120,27)" rx="2" ry="2" />
<text  x="15.03" y="799.5" >cmd_record</text>
</g>
<g >
<title>NaClSysWaitpid (156 samples, 26.80%)</title><rect x="206.7" y="757" width="316.3" height="15.0" fill="rgb(216,171,29)" rx="2" ry="2" />
<text  x="209.67" y="767.5" >NaClSysWaitpid</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.69%)</title><rect x="902.1" y="613" width="8.1" height="15.0" fill="rgb(247,205,51)" rx="2" ry="2" />
<text  x="905.10" y="623.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.69%)</title><rect x="902.1" y="629" width="8.1" height="15.0" fill="rgb(250,129,0)" rx="2" ry="2" />
<text  x="905.10" y="639.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.17%)</title><rect x="1157.6" y="613" width="2.0" height="15.0" fill="rgb(253,215,7)" rx="2" ry="2" />
<text  x="1160.56" y="623.5" ></text>
</g>
<g >
<title>cpuidle_enter (13 samples, 2.23%)</title><rect x="1127.1" y="661" width="26.4" height="15.0" fill="rgb(210,127,43)" rx="2" ry="2" />
<text  x="1130.15" y="671.5" >c..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (13 samples, 2.23%)</title><rect x="178.3" y="645" width="26.3" height="15.0" fill="rgb(238,199,7)" rx="2" ry="2" />
<text  x="181.28" y="655.5" >r..</text>
</g>
<g >
<title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.34%)</title><rect x="910.2" y="213" width="4.1" height="15.0" fill="rgb(226,26,26)" rx="2" ry="2" />
<text  x="913.21" y="223.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.17%)</title><rect x="1113.0" y="709" width="2.0" height="15.0" fill="rgb(231,178,15)" rx="2" ry="2" />
<text  x="1115.96" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1 samples, 0.17%)</title><rect x="918.3" y="437" width="2.0" height="15.0" fill="rgb(243,94,31)" rx="2" ry="2" />
<text  x="921.32" y="447.5" ></text>
</g>
<g >
<title>__cmd_record (65 samples, 11.17%)</title><rect x="12.0" y="773" width="131.8" height="15.0" fill="rgb(206,226,5)" rx="2" ry="2" />
<text  x="15.03" y="783.5" >__cmd_record</text>
</g>
<g >
<title>[unknown]  (172 samples, 29.55%)</title><rect x="531.1" y="805" width="348.7" height="15.0" fill="rgb(247,166,47)" rx="2" ry="2" />
<text  x="534.07" y="815.5" >[unknown] </text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.17%)</title><rect x="916.3" y="485" width="2.0" height="15.0" fill="rgb(207,88,1)" rx="2" ry="2" />
<text  x="919.29" y="495.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.17%)</title><rect x="879.8" y="629" width="2.0" height="15.0" fill="rgb(207,122,24)" rx="2" ry="2" />
<text  x="882.79" y="639.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.17%)</title><rect x="879.8" y="613" width="2.0" height="15.0" fill="rgb(221,223,1)" rx="2" ry="2" />
<text  x="882.79" y="623.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.17%)</title><rect x="1088.6" y="645" width="2.1" height="15.0" fill="rgb(236,58,41)" rx="2" ry="2" />
<text  x="1091.63" y="655.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1 samples, 0.17%)</title><rect x="1157.6" y="629" width="2.0" height="15.0" fill="rgb(254,166,6)" rx="2" ry="2" />
<text  x="1160.56" y="639.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (12 samples, 2.06%)</title><rect x="180.3" y="373" width="24.3" height="15.0" fill="rgb(212,23,34)" rx="2" ry="2" />
<text  x="183.31" y="383.5" >g..</text>
</g>
<g >
<title>memset_erms (1 samples, 0.17%)</title><rect x="10.0" y="629" width="2.0" height="15.0" fill="rgb(229,133,9)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.34%)</title><rect x="910.2" y="261" width="4.1" height="15.0" fill="rgb(228,198,12)" rx="2" ry="2" />
<text  x="913.21" y="271.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.17%)</title><rect x="918.3" y="389" width="2.0" height="15.0" fill="rgb(247,177,10)" rx="2" ry="2" />
<text  x="921.32" y="399.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (1 samples, 0.17%)</title><rect x="174.2" y="645" width="2.1" height="15.0" fill="rgb(228,214,8)" rx="2" ry="2" />
<text  x="177.23" y="655.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (13 samples, 2.23%)</title><rect x="178.3" y="629" width="26.3" height="15.0" fill="rgb(205,106,31)" rx="2" ry="2" />
<text  x="181.28" y="639.5" >&lt;..</text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.17%)</title><rect x="995.4" y="773" width="2.0" height="15.0" fill="rgb(218,164,39)" rx="2" ry="2" />
<text  x="998.36" y="783.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.34%)</title><rect x="904.1" y="341" width="4.1" height="15.0" fill="rgb(207,114,53)" rx="2" ry="2" />
<text  x="907.12" y="351.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.69%)</title><rect x="902.1" y="661" width="8.1" height="15.0" fill="rgb(238,123,9)" rx="2" ry="2" />
<text  x="905.10" y="671.5" ></text>
</g>
<g >
<title>NaClSysRead (13 samples, 2.23%)</title><rect x="178.3" y="757" width="26.3" height="15.0" fill="rgb(207,215,49)" rx="2" ry="2" />
<text  x="181.28" y="767.5" >N..</text>
</g>
<g >
<title>NaClXMutexLock (57 samples, 9.79%)</title><rect x="281.7" y="741" width="115.6" height="15.0" fill="rgb(252,35,24)" rx="2" ry="2" />
<text  x="284.68" y="751.5" >NaClXMutexLock</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.17%)</title><rect x="910.2" y="85" width="2.0" height="15.0" fill="rgb(232,77,47)" rx="2" ry="2" />
<text  x="913.21" y="95.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (1 samples, 0.17%)</title><rect x="174.2" y="693" width="2.1" height="15.0" fill="rgb(238,122,33)" rx="2" ry="2" />
<text  x="177.23" y="703.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.17%)</title><rect x="1159.6" y="677" width="2.0" height="15.0" fill="rgb(229,213,46)" rx="2" ry="2" />
<text  x="1162.59" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (64 samples, 11.00%)</title><rect x="12.0" y="677" width="129.8" height="15.0" fill="rgb(211,150,33)" rx="2" ry="2" />
<text  x="15.03" y="687.5" >do_syscall_64</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.34%)</title><rect x="916.3" y="597" width="4.0" height="15.0" fill="rgb(252,32,27)" rx="2" ry="2" />
<text  x="919.29" y="607.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.52%)</title><rect x="904.1" y="373" width="6.1" height="15.0" fill="rgb(215,114,36)" rx="2" ry="2" />
<text  x="907.12" y="383.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.17%)</title><rect x="916.3" y="501" width="2.0" height="15.0" fill="rgb(250,172,8)" rx="2" ry="2" />
<text  x="919.29" y="511.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.69%)</title><rect x="902.1" y="421" width="8.1" height="15.0" fill="rgb(235,62,46)" rx="2" ry="2" />
<text  x="905.10" y="431.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.17%)</title><rect x="916.3" y="469" width="2.0" height="15.0" fill="rgb(207,182,26)" rx="2" ry="2" />
<text  x="919.29" y="479.5" ></text>
</g>
<g >
<title>newidle_balance (8 samples, 1.37%)</title><rect x="1096.7" y="693" width="16.3" height="15.0" fill="rgb(206,162,1)" rx="2" ry="2" />
<text  x="1099.74" y="703.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.17%)</title><rect x="916.3" y="453" width="2.0" height="15.0" fill="rgb(243,12,39)" rx="2" ry="2" />
<text  x="919.29" y="463.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (2 samples, 0.34%)</title><rect x="170.2" y="773" width="4.0" height="15.0" fill="rgb(227,4,28)" rx="2" ry="2" />
<text  x="173.17" y="783.5" ></text>
</g>
<g >
<title>lind_read (13 samples, 2.23%)</title><rect x="178.3" y="709" width="26.3" height="15.0" fill="rgb(245,143,51)" rx="2" ry="2" />
<text  x="181.28" y="719.5" >l..</text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.17%)</title><rect x="174.2" y="533" width="2.1" height="15.0" fill="rgb(216,17,36)" rx="2" ry="2" />
<text  x="177.23" y="543.5" ></text>
</g>
<g >
<title>perf_ioctl (64 samples, 11.00%)</title><rect x="12.0" y="645" width="129.8" height="15.0" fill="rgb(213,126,42)" rx="2" ry="2" />
<text  x="15.03" y="655.5" >perf_ioctl</text>
</g>
<g >
<title>core::mem::uninitialized (1 samples, 0.17%)</title><rect x="918.3" y="277" width="2.0" height="15.0" fill="rgb(214,6,52)" rx="2" ry="2" />
<text  x="921.32" y="287.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (13 samples, 2.23%)</title><rect x="178.3" y="677" width="26.3" height="15.0" fill="rgb(241,205,35)" rx="2" ry="2" />
<text  x="181.28" y="687.5" >r..</text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.17%)</title><rect x="10.0" y="677" width="2.0" height="15.0" fill="rgb(219,164,4)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.17%)</title><rect x="1113.0" y="677" width="2.0" height="15.0" fill="rgb(207,148,13)" rx="2" ry="2" />
<text  x="1115.96" y="687.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.17%)</title><rect x="1088.6" y="661" width="2.1" height="15.0" fill="rgb(240,185,0)" rx="2" ry="2" />
<text  x="1091.63" y="671.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.17%)</title><rect x="902.1" y="293" width="2.0" height="15.0" fill="rgb(243,126,10)" rx="2" ry="2" />
<text  x="905.10" y="303.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.17%)</title><rect x="174.2" y="421" width="2.1" height="15.0" fill="rgb(221,1,46)" rx="2" ry="2" />
<text  x="177.23" y="431.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (4 samples, 0.69%)</title><rect x="902.1" y="709" width="8.1" height="15.0" fill="rgb(234,25,30)" rx="2" ry="2" />
<text  x="905.10" y="719.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.34%)</title><rect x="910.2" y="421" width="4.1" height="15.0" fill="rgb(211,157,22)" rx="2" ry="2" />
<text  x="913.21" y="431.5" ></text>
</g>
<g >
<title>arch_call_rest_init (36 samples, 6.19%)</title><rect x="1117.0" y="741" width="73.0" height="15.0" fill="rgb(241,77,6)" rx="2" ry="2" />
<text  x="1120.01" y="751.5" >arch_cal..</text>
</g>
<g >
<title>perf_evsel__run_ioctl (64 samples, 11.00%)</title><rect x="12.0" y="725" width="129.8" height="15.0" fill="rgb(254,221,29)" rx="2" ry="2" />
<text  x="15.03" y="735.5" >perf_evsel__run_..</text>
</g>
<g >
<title>cpuidle_idle_call (46 samples, 7.90%)</title><rect x="999.4" y="741" width="93.3" height="15.0" fill="rgb(214,102,29)" rx="2" ry="2" />
<text  x="1002.42" y="751.5" >cpuidle_idl..</text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.17%)</title><rect x="879.8" y="677" width="2.0" height="15.0" fill="rgb(241,115,18)" rx="2" ry="2" />
<text  x="882.79" y="687.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.34%)</title><rect x="910.2" y="405" width="4.1" height="15.0" fill="rgb(229,65,53)" rx="2" ry="2" />
<text  x="913.21" y="415.5" ></text>
</g>
<g >
<title>event_function (64 samples, 11.00%)</title><rect x="12.0" y="517" width="129.8" height="15.0" fill="rgb(231,129,1)" rx="2" ry="2" />
<text  x="15.03" y="527.5" >event_function</text>
</g>
<g >
<title>simple_copy_to_iter (1 samples, 0.17%)</title><rect x="995.4" y="613" width="2.0" height="15.0" fill="rgb(209,44,1)" rx="2" ry="2" />
<text  x="998.36" y="623.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (1 samples, 0.17%)</title><rect x="902.1" y="325" width="2.0" height="15.0" fill="rgb(221,193,48)" rx="2" ry="2" />
<text  x="905.10" y="335.5" ></text>
</g>
<g >
<title>smp_call_function_single (64 samples, 11.00%)</title><rect x="12.0" y="565" width="129.8" height="15.0" fill="rgb(220,6,38)" rx="2" ry="2" />
<text  x="15.03" y="575.5" >smp_call_functio..</text>
</g>
<g >
<title>skb_copy_datagram_iter (1 samples, 0.17%)</title><rect x="995.4" y="629" width="2.0" height="15.0" fill="rgb(247,61,32)" rx="2" ry="2" />
<text  x="998.36" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (2 samples, 0.34%)</title><rect x="910.2" y="469" width="4.1" height="15.0" fill="rgb(249,35,17)" rx="2" ry="2" />
<text  x="913.21" y="479.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.17%)</title><rect x="174.2" y="405" width="2.1" height="15.0" fill="rgb(252,155,25)" rx="2" ry="2" />
<text  x="177.23" y="415.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (2 samples, 0.34%)</title><rect x="170.2" y="741" width="4.0" height="15.0" fill="rgb(220,5,12)" rx="2" ry="2" />
<text  x="173.17" y="751.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.17%)</title><rect x="1179.9" y="629" width="2.0" height="15.0" fill="rgb(206,70,21)" rx="2" ry="2" />
<text  x="1182.86" y="639.5" ></text>
</g>
<g >
<title>__cmd_record (1 samples, 0.17%)</title><rect x="10.0" y="773" width="2.0" height="15.0" fill="rgb(208,51,4)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.17%)</title><rect x="141.8" y="613" width="2.0" height="15.0" fill="rgb(217,35,2)" rx="2" ry="2" />
<text  x="144.79" y="623.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.52%)</title><rect x="1161.6" y="677" width="6.1" height="15.0" fill="rgb(240,135,50)" rx="2" ry="2" />
<text  x="1164.62" y="687.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.17%)</title><rect x="141.8" y="661" width="2.0" height="15.0" fill="rgb(223,130,12)" rx="2" ry="2" />
<text  x="144.79" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (2 samples, 0.34%)</title><rect x="910.2" y="789" width="4.1" height="15.0" fill="rgb(225,119,48)" rx="2" ry="2" />
<text  x="913.21" y="799.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.34%)</title><rect x="916.3" y="629" width="4.0" height="15.0" fill="rgb(237,60,48)" rx="2" ry="2" />
<text  x="919.29" y="639.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.17%)</title><rect x="141.8" y="517" width="2.0" height="15.0" fill="rgb(207,118,45)" rx="2" ry="2" />
<text  x="144.79" y="527.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.17%)</title><rect x="902.1" y="181" width="2.0" height="15.0" fill="rgb(231,109,18)" rx="2" ry="2" />
<text  x="905.10" y="191.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (20 samples, 3.44%)</title><rect x="1119.0" y="677" width="40.6" height="15.0" fill="rgb(206,185,52)" rx="2" ry="2" />
<text  x="1122.04" y="687.5" >cpu..</text>
</g>
<g >
<title>NaClMutexUnlock (58 samples, 9.97%)</title><rect x="405.4" y="725" width="117.6" height="15.0" fill="rgb(218,41,19)" rx="2" ry="2" />
<text  x="408.36" y="735.5" >NaClMutexUnlock</text>
</g>
<g >
<title>ctx_resched (64 samples, 11.00%)</title><rect x="12.0" y="485" width="129.8" height="15.0" fill="rgb(235,192,50)" rx="2" ry="2" />
<text  x="15.03" y="495.5" >ctx_resched</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.17%)</title><rect x="174.2" y="389" width="2.1" height="15.0" fill="rgb(222,100,51)" rx="2" ry="2" />
<text  x="177.23" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::libc_mmap (1 samples, 0.17%)</title><rect x="176.3" y="661" width="2.0" height="15.0" fill="rgb(248,115,47)" rx="2" ry="2" />
<text  x="179.25" y="671.5" ></text>
</g>
<g >
<title>[sel_ldr] (178 samples, 30.58%)</title><rect x="170.2" y="805" width="360.9" height="15.0" fill="rgb(220,36,51)" rx="2" ry="2" />
<text  x="173.17" y="815.5" >[sel_ldr]</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.17%)</title><rect x="902.1" y="197" width="2.0" height="15.0" fill="rgb(247,229,23)" rx="2" ry="2" />
<text  x="905.10" y="207.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.17%)</title><rect x="918.3" y="517" width="2.0" height="15.0" fill="rgb(238,59,25)" rx="2" ry="2" />
<text  x="921.32" y="527.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (1 samples, 0.17%)</title><rect x="995.4" y="677" width="2.0" height="15.0" fill="rgb(223,175,52)" rx="2" ry="2" />
<text  x="998.36" y="687.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.34%)</title><rect x="916.3" y="789" width="4.0" height="15.0" fill="rgb(225,180,30)" rx="2" ry="2" />
<text  x="919.29" y="799.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.17%)</title><rect x="879.8" y="597" width="2.0" height="15.0" fill="rgb(247,200,52)" rx="2" ry="2" />
<text  x="882.79" y="607.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.17%)</title><rect x="141.8" y="565" width="2.0" height="15.0" fill="rgb(230,207,51)" rx="2" ry="2" />
<text  x="144.79" y="575.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.34%)</title><rect x="916.3" y="549" width="4.0" height="15.0" fill="rgb(230,97,23)" rx="2" ry="2" />
<text  x="919.29" y="559.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.17%)</title><rect x="1115.0" y="677" width="2.0" height="15.0" fill="rgb(251,81,15)" rx="2" ry="2" />
<text  x="1117.98" y="687.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (13 samples, 2.23%)</title><rect x="178.3" y="661" width="26.3" height="15.0" fill="rgb(216,224,44)" rx="2" ry="2" />
<text  x="181.28" y="671.5" >r..</text>
</g>
<g >
<title>smp_call_function_single_async (3 samples, 0.52%)</title><rect x="1173.8" y="581" width="6.1" height="15.0" fill="rgb(245,65,34)" rx="2" ry="2" />
<text  x="1176.78" y="591.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (1 samples, 0.17%)</title><rect x="10.0" y="757" width="2.0" height="15.0" fill="rgb(249,18,44)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.17%)</title><rect x="141.8" y="549" width="2.0" height="15.0" fill="rgb(221,51,34)" rx="2" ry="2" />
<text  x="144.79" y="559.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.34%)</title><rect x="910.2" y="693" width="4.1" height="15.0" fill="rgb(218,33,4)" rx="2" ry="2" />
<text  x="913.21" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_read (13 samples, 2.23%)</title><rect x="178.3" y="533" width="26.3" height="15.0" fill="rgb(225,151,40)" rx="2" ry="2" />
<text  x="181.28" y="543.5" >_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.34%)</title><rect x="993.3" y="805" width="4.1" height="15.0" fill="rgb(231,111,32)" rx="2" ry="2" />
<text  x="996.33" y="815.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (3 samples, 0.52%)</title><rect x="156.0" y="789" width="6.1" height="15.0" fill="rgb(247,61,13)" rx="2" ry="2" />
<text  x="158.98" y="799.5" ></text>
</g>
<g >
<title>dispatcher (4 samples, 0.69%)</title><rect x="902.1" y="789" width="8.1" height="15.0" fill="rgb(250,62,14)" rx="2" ry="2" />
<text  x="905.10" y="799.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.17%)</title><rect x="1115.0" y="709" width="2.0" height="15.0" fill="rgb(216,223,36)" rx="2" ry="2" />
<text  x="1117.98" y="719.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (2 samples, 0.34%)</title><rect x="910.2" y="709" width="4.1" height="15.0" fill="rgb(240,75,38)" rx="2" ry="2" />
<text  x="913.21" y="719.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.17%)</title><rect x="1092.7" y="725" width="2.0" height="15.0" fill="rgb(205,9,22)" rx="2" ry="2" />
<text  x="1095.68" y="735.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.17%)</title><rect x="10.0" y="821" width="2.0" height="15.0" fill="rgb(218,165,12)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (1 samples, 0.17%)</title><rect x="902.1" y="213" width="2.0" height="15.0" fill="rgb(235,126,39)" rx="2" ry="2" />
<text  x="905.10" y="223.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (1 samples, 0.17%)</title><rect x="174.2" y="341" width="2.1" height="15.0" fill="rgb(246,115,10)" rx="2" ry="2" />
<text  x="177.23" y="351.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.17%)</title><rect x="174.2" y="725" width="2.1" height="15.0" fill="rgb(230,139,6)" rx="2" ry="2" />
<text  x="177.23" y="735.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (36 samples, 6.19%)</title><rect x="1117.0" y="789" width="73.0" height="15.0" fill="rgb(215,176,24)" rx="2" ry="2" />
<text  x="1120.01" y="799.5" >x86_64_s..</text>
</g>
<g >
<title>DynArrayGet (3 samples, 0.52%)</title><rect x="241.1" y="741" width="6.1" height="15.0" fill="rgb(230,10,5)" rx="2" ry="2" />
<text  x="244.13" y="751.5" ></text>
</g>
<g >
<title>getname (1 samples, 0.17%)</title><rect x="10.0" y="661" width="2.0" height="15.0" fill="rgb(253,68,22)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.17%)</title><rect x="1165.7" y="661" width="2.0" height="15.0" fill="rgb(215,202,26)" rx="2" ry="2" />
<text  x="1168.67" y="671.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.17%)</title><rect x="1185.9" y="661" width="2.1" height="15.0" fill="rgb(222,149,43)" rx="2" ry="2" />
<text  x="1188.95" y="671.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.17%)</title><rect x="174.2" y="469" width="2.1" height="15.0" fill="rgb(228,124,53)" rx="2" ry="2" />
<text  x="177.23" y="479.5" ></text>
</g>
<g >
<title>event_function_call (64 samples, 11.00%)</title><rect x="12.0" y="581" width="129.8" height="15.0" fill="rgb(216,124,32)" rx="2" ry="2" />
<text  x="15.03" y="591.5" >event_function_c..</text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.34%)</title><rect x="1173.8" y="565" width="4.0" height="15.0" fill="rgb(235,165,23)" rx="2" ry="2" />
<text  x="1176.78" y="575.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (2 samples, 0.34%)</title><rect x="916.3" y="677" width="4.0" height="15.0" fill="rgb(232,9,16)" rx="2" ry="2" />
<text  x="919.29" y="687.5" ></text>
</g>
<g >
<title>all (582 samples, 100%)</title><rect x="10.0" y="837" width="1180.0" height="15.0" fill="rgb(226,123,26)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.17%)</title><rect x="912.2" y="69" width="2.1" height="15.0" fill="rgb(226,63,54)" rx="2" ry="2" />
<text  x="915.23" y="79.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (2 samples, 0.34%)</title><rect x="910.2" y="533" width="4.1" height="15.0" fill="rgb(237,132,44)" rx="2" ry="2" />
<text  x="913.21" y="543.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.17%)</title><rect x="896.0" y="677" width="2.0" height="15.0" fill="rgb(229,26,10)" rx="2" ry="2" />
<text  x="899.01" y="687.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (1 samples, 0.17%)</title><rect x="174.2" y="581" width="2.1" height="15.0" fill="rgb(247,187,28)" rx="2" ry="2" />
<text  x="177.23" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (4 samples, 0.69%)</title><rect x="902.1" y="741" width="8.1" height="15.0" fill="rgb(212,22,18)" rx="2" ry="2" />
<text  x="905.10" y="751.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 11.00%)</title><rect x="12.0" y="453" width="129.8" height="15.0" fill="rgb(218,77,21)" rx="2" ry="2" />
<text  x="15.03" y="463.5" >intel_pmu_enable..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.17%)</title><rect x="918.3" y="421" width="2.0" height="15.0" fill="rgb(247,0,41)" rx="2" ry="2" />
<text  x="921.32" y="431.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.17%)</title><rect x="879.8" y="645" width="2.0" height="15.0" fill="rgb(248,223,43)" rx="2" ry="2" />
<text  x="882.79" y="655.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (2 samples, 0.34%)</title><rect x="910.2" y="373" width="4.1" height="15.0" fill="rgb(233,188,7)" rx="2" ry="2" />
<text  x="913.21" y="383.5" ></text>
</g>
<g >
<title>__GI___mmap64 (1 samples, 0.17%)</title><rect x="176.3" y="645" width="2.0" height="15.0" fill="rgb(236,209,31)" rx="2" ry="2" />
<text  x="179.25" y="655.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.69%)</title><rect x="902.1" y="533" width="8.1" height="15.0" fill="rgb(240,154,11)" rx="2" ry="2" />
<text  x="905.10" y="543.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.69%)</title><rect x="902.1" y="597" width="8.1" height="15.0" fill="rgb(215,160,12)" rx="2" ry="2" />
<text  x="905.10" y="607.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.34%)</title><rect x="910.2" y="485" width="4.1" height="15.0" fill="rgb(212,142,26)" rx="2" ry="2" />
<text  x="913.21" y="495.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.34%)</title><rect x="910.2" y="645" width="4.1" height="15.0" fill="rgb(251,73,26)" rx="2" ry="2" />
<text  x="913.21" y="655.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.34%)</title><rect x="910.2" y="245" width="4.1" height="15.0" fill="rgb(216,63,12)" rx="2" ry="2" />
<text  x="913.21" y="255.5" ></text>
</g>
<g >
<title>do_idle (59 samples, 10.14%)</title><rect x="997.4" y="757" width="119.6" height="15.0" fill="rgb(232,17,29)" rx="2" ry="2" />
<text  x="1000.39" y="767.5" >do_idle</text>
</g>
<g >
<title>dispatcher (1 samples, 0.17%)</title><rect x="176.3" y="709" width="2.0" height="15.0" fill="rgb(229,43,12)" rx="2" ry="2" />
<text  x="179.25" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.17%)</title><rect x="174.2" y="661" width="2.1" height="15.0" fill="rgb(253,7,30)" rx="2" ry="2" />
<text  x="177.23" y="671.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.17%)</title><rect x="918.3" y="261" width="2.0" height="15.0" fill="rgb(223,129,25)" rx="2" ry="2" />
<text  x="921.32" y="271.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (1 samples, 0.17%)</title><rect x="908.2" y="293" width="2.0" height="15.0" fill="rgb(212,41,2)" rx="2" ry="2" />
<text  x="911.18" y="303.5" ></text>
</g>
<g >
<title>schedule_idle (10 samples, 1.72%)</title><rect x="1094.7" y="741" width="20.3" height="15.0" fill="rgb(248,170,54)" rx="2" ry="2" />
<text  x="1097.71" y="751.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (4 samples, 0.69%)</title><rect x="902.1" y="773" width="8.1" height="15.0" fill="rgb(211,64,43)" rx="2" ry="2" />
<text  x="905.10" y="783.5" ></text>
</g>
<g >
<title>record__pushfn (1 samples, 0.17%)</title><rect x="141.8" y="709" width="2.0" height="15.0" fill="rgb(239,28,28)" rx="2" ry="2" />
<text  x="144.79" y="719.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (2 samples, 0.34%)</title><rect x="910.2" y="229" width="4.1" height="15.0" fill="rgb(225,132,5)" rx="2" ry="2" />
<text  x="913.21" y="239.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.17%)</title><rect x="141.8" y="453" width="2.0" height="15.0" fill="rgb(230,101,49)" rx="2" ry="2" />
<text  x="144.79" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.17%)</title><rect x="902.1" y="165" width="2.0" height="15.0" fill="rgb(215,131,26)" rx="2" ry="2" />
<text  x="905.10" y="175.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.17%)</title><rect x="176.3" y="549" width="2.0" height="15.0" fill="rgb(224,177,39)" rx="2" ry="2" />
<text  x="179.25" y="559.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.17%)</title><rect x="174.2" y="485" width="2.1" height="15.0" fill="rgb(205,143,1)" rx="2" ry="2" />
<text  x="177.23" y="495.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.34%)</title><rect x="1149.5" y="629" width="4.0" height="15.0" fill="rgb(227,13,30)" rx="2" ry="2" />
<text  x="1152.45" y="639.5" ></text>
</g>
<g >
<title>rest_init (36 samples, 6.19%)</title><rect x="1117.0" y="725" width="73.0" height="15.0" fill="rgb(219,158,30)" rx="2" ry="2" />
<text  x="1120.01" y="735.5" >rest_init</text>
</g>
<g >
<title>serde_json::ser::to_string (2 samples, 0.34%)</title><rect x="916.3" y="709" width="4.0" height="15.0" fill="rgb(252,8,39)" rx="2" ry="2" />
<text  x="919.29" y="719.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.17%)</title><rect x="1151.5" y="613" width="2.0" height="15.0" fill="rgb(216,165,33)" rx="2" ry="2" />
<text  x="1154.48" y="623.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (2 samples, 0.34%)</title><rect x="910.2" y="293" width="4.1" height="15.0" fill="rgb(207,179,28)" rx="2" ry="2" />
<text  x="913.21" y="303.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.17%)</title><rect x="1092.7" y="741" width="2.0" height="15.0" fill="rgb(247,105,27)" rx="2" ry="2" />
<text  x="1095.68" y="751.5" ></text>
</g>
<g >
<title>NaClSysMunmap (1 samples, 0.17%)</title><rect x="176.3" y="757" width="2.0" height="15.0" fill="rgb(210,206,46)" rx="2" ry="2" />
<text  x="179.25" y="767.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.17%)</title><rect x="1179.9" y="645" width="2.0" height="15.0" fill="rgb(206,218,38)" rx="2" ry="2" />
<text  x="1182.86" y="655.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.17%)</title><rect x="918.3" y="469" width="2.0" height="15.0" fill="rgb(220,72,3)" rx="2" ry="2" />
<text  x="921.32" y="479.5" ></text>
</g>
<g >
<title>remote_function (64 samples, 11.00%)</title><rect x="12.0" y="533" width="129.8" height="15.0" fill="rgb(246,140,52)" rx="2" ry="2" />
<text  x="15.03" y="543.5" >remote_function</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.34%)</title><rect x="910.2" y="277" width="4.1" height="15.0" fill="rgb(208,53,52)" rx="2" ry="2" />
<text  x="913.21" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.34%)</title><rect x="910.2" y="117" width="4.1" height="15.0" fill="rgb(248,69,49)" rx="2" ry="2" />
<text  x="913.21" y="127.5" ></text>
</g>
<g >
<title>BitmapSetBit (1 samples, 0.17%)</title><rect x="172.2" y="661" width="2.0" height="15.0" fill="rgb(226,44,22)" rx="2" ry="2" />
<text  x="175.20" y="671.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (2 samples, 0.34%)</title><rect x="1086.6" y="693" width="4.1" height="15.0" fill="rgb(219,124,24)" rx="2" ry="2" />
<text  x="1089.60" y="703.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (62 samples, 10.65%)</title><rect x="397.3" y="741" width="125.7" height="15.0" fill="rgb(250,175,4)" rx="2" ry="2" />
<text  x="400.25" y="751.5" >NaClXMutexUnlock</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (2 samples, 0.34%)</title><rect x="916.3" y="725" width="4.0" height="15.0" fill="rgb(254,10,26)" rx="2" ry="2" />
<text  x="919.29" y="735.5" ></text>
</g>
<g >
<title>DynArrayGet (1 samples, 0.17%)</title><rect x="204.6" y="757" width="2.1" height="15.0" fill="rgb(210,186,20)" rx="2" ry="2" />
<text  x="207.64" y="767.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.17%)</title><rect x="176.3" y="517" width="2.0" height="15.0" fill="rgb(232,56,53)" rx="2" ry="2" />
<text  x="179.25" y="527.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.17%)</title><rect x="995.4" y="757" width="2.0" height="15.0" fill="rgb(218,142,39)" rx="2" ry="2" />
<text  x="998.36" y="767.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.34%)</title><rect x="910.2" y="149" width="4.1" height="15.0" fill="rgb(219,148,37)" rx="2" ry="2" />
<text  x="913.21" y="159.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (2 samples, 0.34%)</title><rect x="910.2" y="725" width="4.1" height="15.0" fill="rgb(229,102,35)" rx="2" ry="2" />
<text  x="913.21" y="735.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.17%)</title><rect x="879.8" y="661" width="2.0" height="15.0" fill="rgb(245,65,29)" rx="2" ry="2" />
<text  x="882.79" y="671.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.17%)</title><rect x="902.1" y="229" width="2.0" height="15.0" fill="rgb(239,213,24)" rx="2" ry="2" />
<text  x="905.10" y="239.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.34%)</title><rect x="910.2" y="565" width="4.1" height="15.0" fill="rgb(232,167,34)" rx="2" ry="2" />
<text  x="913.21" y="575.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.34%)</title><rect x="910.2" y="197" width="4.1" height="15.0" fill="rgb(250,49,16)" rx="2" ry="2" />
<text  x="913.21" y="207.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (2 samples, 0.34%)</title><rect x="910.2" y="309" width="4.1" height="15.0" fill="rgb(252,208,29)" rx="2" ry="2" />
<text  x="913.21" y="319.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (13 samples, 2.23%)</title><rect x="178.3" y="773" width="26.3" height="15.0" fill="rgb(239,173,12)" rx="2" ry="2" />
<text  x="181.28" y="783.5" >N..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (2 samples, 0.34%)</title><rect x="910.2" y="453" width="4.1" height="15.0" fill="rgb(211,173,53)" rx="2" ry="2" />
<text  x="913.21" y="463.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.17%)</title><rect x="995.4" y="693" width="2.0" height="15.0" fill="rgb(232,49,46)" rx="2" ry="2" />
<text  x="998.36" y="703.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (8 samples, 1.37%)</title><rect x="1096.7" y="677" width="16.3" height="15.0" fill="rgb(254,48,5)" rx="2" ry="2" />
<text  x="1099.74" y="687.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (2 samples, 0.34%)</title><rect x="916.3" y="693" width="4.0" height="15.0" fill="rgb(237,210,30)" rx="2" ry="2" />
<text  x="919.29" y="703.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (1 samples, 0.17%)</title><rect x="174.2" y="613" width="2.1" height="15.0" fill="rgb(227,105,17)" rx="2" ry="2" />
<text  x="177.23" y="623.5" ></text>
</g>
<g >
<title>lind_mmap (1 samples, 0.17%)</title><rect x="176.3" y="725" width="2.0" height="15.0" fill="rgb(248,125,4)" rx="2" ry="2" />
<text  x="179.25" y="735.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@plt (1 samples, 0.17%)</title><rect x="279.7" y="709" width="2.0" height="15.0" fill="rgb(235,120,16)" rx="2" ry="2" />
<text  x="282.66" y="719.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.17%)</title><rect x="1086.6" y="661" width="2.0" height="15.0" fill="rgb(238,120,48)" rx="2" ry="2" />
<text  x="1089.60" y="671.5" ></text>
</g>
</g>
</svg>
