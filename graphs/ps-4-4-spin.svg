<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="790.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="773" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="773" > </text>
<g id="frames">
<g >
<title>pollwake (1 samples, 0.02%)</title><rect x="1049.6" y="501" width="0.1" height="15.0" fill="rgb(245,219,29)" rx="2" ry="2" />
<text  x="1052.56" y="511.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.05%)</title><rect x="755.3" y="469" width="0.6" height="15.0" fill="rgb(243,70,11)" rx="2" ry="2" />
<text  x="758.31" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.14%)</title><rect x="892.2" y="485" width="1.7" height="15.0" fill="rgb(235,81,53)" rx="2" ry="2" />
<text  x="895.18" y="495.5" ></text>
</g>
<g >
<title>gc_worker (1 samples, 0.02%)</title><rect x="16.8" y="645" width="0.2" height="15.0" fill="rgb(252,133,25)" rx="2" ry="2" />
<text  x="19.78" y="655.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="1049.6" y="485" width="0.1" height="15.0" fill="rgb(248,206,31)" rx="2" ry="2" />
<text  x="1052.56" y="495.5" ></text>
</g>
<g >
<title>do_idle (222 samples, 3.54%)</title><rect x="17.2" y="661" width="41.7" height="15.0" fill="rgb(237,82,41)" rx="2" ry="2" />
<text  x="20.15" y="671.5" >do_..</text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="15.8" y="597" width="0.2" height="15.0" fill="rgb(253,95,52)" rx="2" ry="2" />
<text  x="18.84" y="607.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="451.5" y="453" width="0.2" height="15.0" fill="rgb(240,91,38)" rx="2" ry="2" />
<text  x="454.46" y="463.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="251.7" y="469" width="0.2" height="15.0" fill="rgb(248,116,36)" rx="2" ry="2" />
<text  x="254.72" y="479.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.02%)</title><rect x="15.8" y="645" width="0.2" height="15.0" fill="rgb(238,115,20)" rx="2" ry="2" />
<text  x="18.84" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1,118 samples, 17.84%)</title><rect x="763.4" y="613" width="210.5" height="15.0" fill="rgb(243,127,22)" rx="2" ry="2" />
<text  x="766.41" y="623.5" >rustposix::safeposix::sysca..</text>
</g>
<g >
<title>hrtimer_update_next_event (2 samples, 0.03%)</title><rect x="1095.3" y="469" width="0.4" height="15.0" fill="rgb(208,95,32)" rx="2" ry="2" />
<text  x="1098.31" y="479.5" ></text>
</g>
<g >
<title>bprm_execve (1 samples, 0.02%)</title><rect x="239.5" y="645" width="0.2" height="15.0" fill="rgb(241,31,0)" rx="2" ry="2" />
<text  x="242.49" y="655.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="739.3" y="533" width="0.2" height="15.0" fill="rgb(206,139,29)" rx="2" ry="2" />
<text  x="742.31" y="543.5" ></text>
</g>
<g >
<title>start_secondary (133 samples, 2.12%)</title><rect x="1050.3" y="693" width="25.1" height="15.0" fill="rgb(242,136,49)" rx="2" ry="2" />
<text  x="1053.31" y="703.5" >s..</text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.08%)</title><rect x="597.6" y="469" width="0.9" height="15.0" fill="rgb(250,57,52)" rx="2" ry="2" />
<text  x="600.55" y="479.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.03%)</title><rect x="1093.8" y="389" width="0.4" height="15.0" fill="rgb(214,211,4)" rx="2" ry="2" />
<text  x="1096.80" y="399.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.03%)</title><rect x="232.1" y="549" width="0.4" height="15.0" fill="rgb(237,18,1)" rx="2" ry="2" />
<text  x="235.14" y="559.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1081.9" y="485" width="0.2" height="15.0" fill="rgb(241,181,16)" rx="2" ry="2" />
<text  x="1084.94" y="495.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (1 samples, 0.02%)</title><rect x="1100.8" y="453" width="0.2" height="15.0" fill="rgb(224,83,51)" rx="2" ry="2" />
<text  x="1103.77" y="463.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (4 samples, 0.06%)</title><rect x="1042.8" y="661" width="0.7" height="15.0" fill="rgb(217,24,14)" rx="2" ry="2" />
<text  x="1045.78" y="671.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1187.9" y="565" width="0.2" height="15.0" fill="rgb(243,85,0)" rx="2" ry="2" />
<text  x="1190.93" y="575.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="450.3" y="437" width="0.2" height="15.0" fill="rgb(225,6,16)" rx="2" ry="2" />
<text  x="453.34" y="447.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="614.1" y="469" width="0.2" height="15.0" fill="rgb(236,40,39)" rx="2" ry="2" />
<text  x="617.12" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1 samples, 0.02%)</title><rect x="58.6" y="597" width="0.2" height="15.0" fill="rgb(245,164,16)" rx="2" ry="2" />
<text  x="61.57" y="607.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.02%)</title><rect x="1046.4" y="453" width="0.1" height="15.0" fill="rgb(252,33,22)" rx="2" ry="2" />
<text  x="1049.36" y="463.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="445.6" y="469" width="0.2" height="15.0" fill="rgb(216,139,48)" rx="2" ry="2" />
<text  x="448.63" y="479.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (13 samples, 0.21%)</title><rect x="598.5" y="501" width="2.4" height="15.0" fill="rgb(212,13,15)" rx="2" ry="2" />
<text  x="601.49" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (77 samples, 1.23%)</title><rect x="772.6" y="597" width="14.5" height="15.0" fill="rgb(218,223,40)" rx="2" ry="2" />
<text  x="775.63" y="607.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (65 samples, 1.04%)</title><rect x="1082.7" y="469" width="12.2" height="15.0" fill="rgb(244,42,7)" rx="2" ry="2" />
<text  x="1085.69" y="479.5" ></text>
</g>
<g >
<title>__napi_poll (16 samples, 0.26%)</title><rect x="19.4" y="517" width="3.0" height="15.0" fill="rgb(244,149,19)" rx="2" ry="2" />
<text  x="22.41" y="527.5" ></text>
</g>
<g >
<title>pick_next_task_idle (5 samples, 0.08%)</title><rect x="229.9" y="533" width="0.9" height="15.0" fill="rgb(213,198,48)" rx="2" ry="2" />
<text  x="232.89" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.06%)</title><rect x="747.0" y="501" width="0.8" height="15.0" fill="rgb(247,112,29)" rx="2" ry="2" />
<text  x="750.03" y="511.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.02%)</title><rect x="1170.6" y="533" width="0.2" height="15.0" fill="rgb(225,229,16)" rx="2" ry="2" />
<text  x="1173.61" y="543.5" ></text>
</g>
<g >
<title>atomic_unlock (5 samples, 0.08%)</title><rect x="671.2" y="661" width="0.9" height="15.0" fill="rgb(207,190,12)" rx="2" ry="2" />
<text  x="674.16" y="671.5" ></text>
</g>
<g >
<title>[perf-375161.map] (14 samples, 0.22%)</title><rect x="273.7" y="709" width="2.7" height="15.0" fill="rgb(252,220,15)" rx="2" ry="2" />
<text  x="276.75" y="719.5" ></text>
</g>
<g >
<title>__schedule (20 samples, 0.32%)</title><rect x="1183.2" y="565" width="3.8" height="15.0" fill="rgb(213,192,49)" rx="2" ry="2" />
<text  x="1186.22" y="575.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (2 samples, 0.03%)</title><rect x="750.8" y="517" width="0.4" height="15.0" fill="rgb(219,74,1)" rx="2" ry="2" />
<text  x="753.79" y="527.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12 samples, 0.19%)</title><rect x="61.2" y="549" width="2.3" height="15.0" fill="rgb(237,29,46)" rx="2" ry="2" />
<text  x="64.21" y="559.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="492.9" y="597" width="0.2" height="15.0" fill="rgb(252,193,22)" rx="2" ry="2" />
<text  x="495.88" y="607.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="747.8" y="565" width="0.2" height="15.0" fill="rgb(228,13,38)" rx="2" ry="2" />
<text  x="750.78" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.13%)</title><rect x="615.4" y="581" width="1.5" height="15.0" fill="rgb(207,172,28)" rx="2" ry="2" />
<text  x="618.44" y="591.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="216.9" y="469" width="0.2" height="15.0" fill="rgb(228,162,4)" rx="2" ry="2" />
<text  x="219.90" y="479.5" ></text>
</g>
<g >
<title>rcu_nmi_enter (2 samples, 0.03%)</title><rect x="1108.1" y="485" width="0.4" height="15.0" fill="rgb(241,200,35)" rx="2" ry="2" />
<text  x="1111.11" y="495.5" ></text>
</g>
<g >
<title>rcu_gp_fqs_loop (1 samples, 0.02%)</title><rect x="1049.2" y="661" width="0.2" height="15.0" fill="rgb(247,97,26)" rx="2" ry="2" />
<text  x="1052.18" y="671.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="23.0" y="517" width="0.2" height="15.0" fill="rgb(229,227,54)" rx="2" ry="2" />
<text  x="25.99" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (1 samples, 0.02%)</title><rect x="664.9" y="533" width="0.2" height="15.0" fill="rgb(227,119,11)" rx="2" ry="2" />
<text  x="667.95" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (1 samples, 0.02%)</title><rect x="251.7" y="677" width="0.2" height="15.0" fill="rgb(244,50,37)" rx="2" ry="2" />
<text  x="254.72" y="687.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="897.3" y="421" width="0.3" height="15.0" fill="rgb(249,35,28)" rx="2" ry="2" />
<text  x="900.26" y="431.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (2 samples, 0.03%)</title><rect x="212.8" y="485" width="0.3" height="15.0" fill="rgb(211,57,1)" rx="2" ry="2" />
<text  x="215.75" y="495.5" ></text>
</g>
<g >
<title>menu_select (3 samples, 0.05%)</title><rect x="58.2" y="613" width="0.6" height="15.0" fill="rgb(246,131,49)" rx="2" ry="2" />
<text  x="61.19" y="623.5" ></text>
</g>
<g >
<title>rcu_irq_exit (3 samples, 0.05%)</title><rect x="114.7" y="501" width="0.5" height="15.0" fill="rgb(218,72,44)" rx="2" ry="2" />
<text  x="117.67" y="511.5" ></text>
</g>
<g >
<title>wake_up_process (2 samples, 0.03%)</title><rect x="22.6" y="501" width="0.4" height="15.0" fill="rgb(207,174,12)" rx="2" ry="2" />
<text  x="25.61" y="511.5" ></text>
</g>
<g >
<title>event_function (1 samples, 0.02%)</title><rect x="251.7" y="533" width="0.2" height="15.0" fill="rgb(216,187,35)" rx="2" ry="2" />
<text  x="254.72" y="543.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="198.6" y="533" width="0.2" height="15.0" fill="rgb(250,79,37)" rx="2" ry="2" />
<text  x="201.63" y="543.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="251.5" y="501" width="0.2" height="15.0" fill="rgb(242,223,17)" rx="2" ry="2" />
<text  x="254.53" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (3 samples, 0.05%)</title><rect x="948.7" y="517" width="0.5" height="15.0" fill="rgb(234,16,30)" rx="2" ry="2" />
<text  x="951.65" y="527.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (248 samples, 3.96%)</title><rect x="68.5" y="517" width="46.7" height="15.0" fill="rgb(241,0,50)" rx="2" ry="2" />
<text  x="71.55" y="527.5" >sysv..</text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (121 samples, 1.93%)</title><rect x="617.1" y="533" width="22.8" height="15.0" fill="rgb(230,52,46)" rx="2" ry="2" />
<text  x="620.13" y="543.5" >c..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.10%)</title><rect x="1040.9" y="613" width="1.1" height="15.0" fill="rgb(233,31,3)" rx="2" ry="2" />
<text  x="1043.90" y="623.5" ></text>
</g>
<g >
<title>lapic_next_deadline (2 samples, 0.03%)</title><rect x="216.5" y="469" width="0.4" height="15.0" fill="rgb(240,112,45)" rx="2" ry="2" />
<text  x="219.52" y="479.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (5 samples, 0.08%)</title><rect x="450.5" y="453" width="1.0" height="15.0" fill="rgb(226,60,30)" rx="2" ry="2" />
<text  x="453.52" y="463.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (18 samples, 0.29%)</title><rect x="222.2" y="581" width="3.4" height="15.0" fill="rgb(207,163,0)" rx="2" ry="2" />
<text  x="225.17" y="591.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="1049.6" y="437" width="0.1" height="15.0" fill="rgb(224,211,10)" rx="2" ry="2" />
<text  x="1052.56" y="447.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (1 samples, 0.02%)</title><rect x="269.8" y="645" width="0.2" height="15.0" fill="rgb(242,208,24)" rx="2" ry="2" />
<text  x="272.80" y="655.5" ></text>
</g>
<g >
<title>tick_program_event (6 samples, 0.10%)</title><rect x="235.5" y="501" width="1.2" height="15.0" fill="rgb(240,209,31)" rx="2" ry="2" />
<text  x="238.53" y="511.5" ></text>
</g>
<g >
<title>tick_program_event (5 samples, 0.08%)</title><rect x="1096.6" y="469" width="1.0" height="15.0" fill="rgb(242,150,9)" rx="2" ry="2" />
<text  x="1099.62" y="479.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (3 samples, 0.05%)</title><rect x="369.2" y="645" width="0.6" height="15.0" fill="rgb(233,26,52)" rx="2" ry="2" />
<text  x="372.20" y="655.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="16.6" y="661" width="0.2" height="15.0" fill="rgb(242,148,51)" rx="2" ry="2" />
<text  x="19.59" y="671.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.03%)</title><rect x="91.9" y="437" width="0.4" height="15.0" fill="rgb(239,110,30)" rx="2" ry="2" />
<text  x="94.89" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="515.1" y="485" width="0.2" height="15.0" fill="rgb(229,39,7)" rx="2" ry="2" />
<text  x="518.10" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_restart (6 samples, 0.10%)</title><rect x="1188.1" y="565" width="1.1" height="15.0" fill="rgb(225,175,42)" rx="2" ry="2" />
<text  x="1191.12" y="575.5" ></text>
</g>
<g >
<title>[anon] (114 samples, 1.82%)</title><rect x="252.3" y="709" width="21.4" height="15.0" fill="rgb(217,162,43)" rx="2" ry="2" />
<text  x="255.29" y="719.5" >[..</text>
</g>
<g >
<title>kfree_skb (1 samples, 0.02%)</title><rect x="21.5" y="373" width="0.2" height="15.0" fill="rgb(232,86,45)" rx="2" ry="2" />
<text  x="24.48" y="383.5" ></text>
</g>
<g >
<title>_perf_event_enable (1 samples, 0.02%)</title><rect x="251.7" y="613" width="0.2" height="15.0" fill="rgb(213,125,12)" rx="2" ry="2" />
<text  x="254.72" y="623.5" ></text>
</g>
<g >
<title>sched_idle_set_state (1 samples, 0.02%)</title><rect x="1164.8" y="549" width="0.2" height="15.0" fill="rgb(228,24,3)" rx="2" ry="2" />
<text  x="1167.77" y="559.5" ></text>
</g>
<g >
<title>find_busiest_group (3 samples, 0.05%)</title><rect x="23.2" y="485" width="0.5" height="15.0" fill="rgb(229,165,17)" rx="2" ry="2" />
<text  x="26.18" y="495.5" ></text>
</g>
<g >
<title>sched_clock (5 samples, 0.08%)</title><rect x="199.2" y="517" width="0.9" height="15.0" fill="rgb(215,168,17)" rx="2" ry="2" />
<text  x="202.20" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="1046.4" y="309" width="0.1" height="15.0" fill="rgb(227,3,6)" rx="2" ry="2" />
<text  x="1049.36" y="319.5" ></text>
</g>
<g >
<title>alx_mask_msix (2 samples, 0.03%)</title><rect x="20.9" y="485" width="0.4" height="15.0" fill="rgb(252,127,21)" rx="2" ry="2" />
<text  x="23.92" y="495.5" ></text>
</g>
<g >
<title>NaClSysRead (1 samples, 0.02%)</title><rect x="370.3" y="677" width="0.2" height="15.0" fill="rgb(209,71,16)" rx="2" ry="2" />
<text  x="373.33" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1048.8" y="709" width="0.4" height="15.0" fill="rgb(225,151,7)" rx="2" ry="2" />
<text  x="1051.81" y="719.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (182 samples, 2.90%)</title><rect x="23.9" y="597" width="34.3" height="15.0" fill="rgb(243,109,34)" rx="2" ry="2" />
<text  x="26.93" y="607.5" >mw..</text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1188.7" y="533" width="0.2" height="15.0" fill="rgb(210,74,2)" rx="2" ry="2" />
<text  x="1191.68" y="543.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="22.6" y="485" width="0.4" height="15.0" fill="rgb(249,156,45)" rx="2" ry="2" />
<text  x="25.61" y="495.5" ></text>
</g>
<g >
<title>dispatcher (6 samples, 0.10%)</title><rect x="265.3" y="693" width="1.1" height="15.0" fill="rgb(246,202,13)" rx="2" ry="2" />
<text  x="268.28" y="703.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (91 samples, 1.45%)</title><rect x="96.0" y="485" width="17.2" height="15.0" fill="rgb(251,112,43)" rx="2" ry="2" />
<text  x="99.03" y="495.5" ></text>
</g>
<g >
<title>rcu_dynticks_inc (2 samples, 0.03%)</title><rect x="198.3" y="501" width="0.3" height="15.0" fill="rgb(232,1,27)" rx="2" ry="2" />
<text  x="201.26" y="511.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.03%)</title><rect x="1093.8" y="357" width="0.4" height="15.0" fill="rgb(216,229,32)" rx="2" ry="2" />
<text  x="1096.80" y="367.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="251.5" y="421" width="0.2" height="15.0" fill="rgb(209,28,53)" rx="2" ry="2" />
<text  x="254.53" y="431.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1176.3" y="469" width="0.1" height="15.0" fill="rgb(228,62,36)" rx="2" ry="2" />
<text  x="1179.26" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="239.5" y="693" width="0.2" height="15.0" fill="rgb(250,226,19)" rx="2" ry="2" />
<text  x="242.49" y="703.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (1 samples, 0.02%)</title><rect x="787.3" y="565" width="0.2" height="15.0" fill="rgb(251,207,10)" rx="2" ry="2" />
<text  x="790.32" y="575.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.08%)</title><rect x="442.2" y="453" width="1.0" height="15.0" fill="rgb(225,25,35)" rx="2" ry="2" />
<text  x="445.24" y="463.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="1101.1" y="453" width="0.2" height="15.0" fill="rgb(228,109,46)" rx="2" ry="2" />
<text  x="1104.14" y="463.5" ></text>
</g>
<g >
<title>queue_work_on (1 samples, 0.02%)</title><rect x="19.0" y="501" width="0.2" height="15.0" fill="rgb(214,148,10)" rx="2" ry="2" />
<text  x="22.04" y="511.5" ></text>
</g>
<g >
<title>cpuidle_reflect (2 samples, 0.03%)</title><rect x="217.8" y="581" width="0.4" height="15.0" fill="rgb(250,178,54)" rx="2" ry="2" />
<text  x="220.84" y="591.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (271 samples, 4.32%)</title><rect x="1109.2" y="533" width="51.1" height="15.0" fill="rgb(231,170,31)" rx="2" ry="2" />
<text  x="1112.24" y="543.5" >mwait..</text>
</g>
<g >
<title>std::sys::unix::fs::File::seek (1 samples, 0.02%)</title><rect x="614.1" y="565" width="0.2" height="15.0" fill="rgb(209,99,29)" rx="2" ry="2" />
<text  x="617.12" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (2 samples, 0.03%)</title><rect x="1174.8" y="533" width="0.3" height="15.0" fill="rgb(231,8,4)" rx="2" ry="2" />
<text  x="1177.75" y="543.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.02%)</title><rect x="1165.3" y="549" width="0.2" height="15.0" fill="rgb(245,53,53)" rx="2" ry="2" />
<text  x="1168.34" y="559.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="1107.5" y="453" width="0.2" height="15.0" fill="rgb(241,123,54)" rx="2" ry="2" />
<text  x="1110.54" y="463.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.03%)</title><rect x="585.1" y="549" width="0.4" height="15.0" fill="rgb(226,225,22)" rx="2" ry="2" />
<text  x="588.13" y="559.5" ></text>
</g>
<g >
<title>NaClLog (3 samples, 0.05%)</title><rect x="389.9" y="629" width="0.6" height="15.0" fill="rgb(229,131,33)" rx="2" ry="2" />
<text  x="392.90" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="369.8" y="517" width="0.5" height="15.0" fill="rgb(210,17,6)" rx="2" ry="2" />
<text  x="372.76" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.02%)</title><rect x="237.8" y="581" width="0.2" height="15.0" fill="rgb(235,16,53)" rx="2" ry="2" />
<text  x="240.79" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1 samples, 0.02%)</title><rect x="639.9" y="565" width="0.2" height="15.0" fill="rgb(206,52,52)" rx="2" ry="2" />
<text  x="642.91" y="575.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (1 samples, 0.02%)</title><rect x="1046.4" y="597" width="0.1" height="15.0" fill="rgb(215,42,31)" rx="2" ry="2" />
<text  x="1049.36" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_rt_sigtimedwait (1 samples, 0.02%)</title><rect x="10.0" y="661" width="0.2" height="15.0" fill="rgb(239,65,18)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (456 samples, 7.28%)</title><rect x="1077.4" y="549" width="85.9" height="15.0" fill="rgb(227,87,24)" rx="2" ry="2" />
<text  x="1080.42" y="559.5" >cpuidle_en..</text>
</g>
<g >
<title>pick_next_task_idle (4 samples, 0.06%)</title><rect x="1185.5" y="533" width="0.7" height="15.0" fill="rgb(254,131,18)" rx="2" ry="2" />
<text  x="1188.48" y="543.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (17 samples, 0.27%)</title><rect x="756.4" y="533" width="3.2" height="15.0" fill="rgb(217,191,21)" rx="2" ry="2" />
<text  x="759.44" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (23 samples, 0.37%)</title><rect x="233.5" y="581" width="4.3" height="15.0" fill="rgb(226,148,35)" rx="2" ry="2" />
<text  x="236.46" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.05%)</title><rect x="514.2" y="501" width="0.5" height="15.0" fill="rgb(210,182,22)" rx="2" ry="2" />
<text  x="517.15" y="511.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="232.3" y="533" width="0.2" height="15.0" fill="rgb(242,57,21)" rx="2" ry="2" />
<text  x="235.33" y="543.5" ></text>
</g>
<g >
<title>atomic_lock (42 samples, 0.67%)</title><rect x="395.9" y="645" width="7.9" height="15.0" fill="rgb(230,140,40)" rx="2" ry="2" />
<text  x="398.93" y="655.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="1093.8" y="373" width="0.4" height="15.0" fill="rgb(247,131,5)" rx="2" ry="2" />
<text  x="1096.80" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (24 samples, 0.38%)</title><rect x="580.6" y="501" width="4.5" height="15.0" fill="rgb(214,211,54)" rx="2" ry="2" />
<text  x="583.61" y="511.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::lock_shared_slow (2 samples, 0.03%)</title><rect x="264.9" y="693" width="0.4" height="15.0" fill="rgb(209,197,13)" rx="2" ry="2" />
<text  x="267.90" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (3 samples, 0.05%)</title><rect x="261.3" y="693" width="0.6" height="15.0" fill="rgb(254,214,2)" rx="2" ry="2" />
<text  x="264.32" y="703.5" ></text>
</g>
<g >
<title>update_rq_clock (3 samples, 0.05%)</title><rect x="110.2" y="437" width="0.5" height="15.0" fill="rgb(229,194,37)" rx="2" ry="2" />
<text  x="113.15" y="447.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (3 samples, 0.05%)</title><rect x="374.5" y="645" width="0.5" height="15.0" fill="rgb(216,5,11)" rx="2" ry="2" />
<text  x="377.47" y="655.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (3 samples, 0.05%)</title><rect x="369.2" y="677" width="0.6" height="15.0" fill="rgb(213,193,1)" rx="2" ry="2" />
<text  x="372.20" y="687.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4 samples, 0.06%)</title><rect x="22.4" y="533" width="0.8" height="15.0" fill="rgb(206,191,4)" rx="2" ry="2" />
<text  x="25.43" y="543.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="15.8" y="629" width="0.2" height="15.0" fill="rgb(254,117,25)" rx="2" ry="2" />
<text  x="18.84" y="639.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (3 samples, 0.05%)</title><rect x="77.2" y="421" width="0.6" height="15.0" fill="rgb(216,171,36)" rx="2" ry="2" />
<text  x="80.21" y="431.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (1 samples, 0.02%)</title><rect x="395.7" y="645" width="0.2" height="15.0" fill="rgb(213,159,45)" rx="2" ry="2" />
<text  x="398.74" y="655.5" ></text>
</g>
<g >
<title>nf_conntrack_in (1 samples, 0.02%)</title><rect x="21.7" y="357" width="0.2" height="15.0" fill="rgb(230,200,7)" rx="2" ry="2" />
<text  x="24.67" y="367.5" ></text>
</g>
<g >
<title>alx_clean_tx_irq (5 samples, 0.08%)</title><rect x="20.0" y="485" width="0.9" height="15.0" fill="rgb(209,19,42)" rx="2" ry="2" />
<text  x="22.98" y="495.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (83 samples, 1.32%)</title><rect x="645.0" y="581" width="15.6" height="15.0" fill="rgb(224,136,30)" rx="2" ry="2" />
<text  x="647.99" y="591.5" ></text>
</g>
<g >
<title>HandleStackContext (1 samples, 0.02%)</title><rect x="277.3" y="693" width="0.2" height="15.0" fill="rgb(245,4,34)" rx="2" ry="2" />
<text  x="280.33" y="703.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (33 samples, 0.53%)</title><rect x="493.1" y="597" width="6.2" height="15.0" fill="rgb(234,35,11)" rx="2" ry="2" />
<text  x="496.07" y="607.5" ></text>
</g>
<g >
<title>ip6_sublist_rcv_finish (2 samples, 0.03%)</title><rect x="21.9" y="389" width="0.3" height="15.0" fill="rgb(251,76,28)" rx="2" ry="2" />
<text  x="24.86" y="399.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="1182.8" y="533" width="0.4" height="15.0" fill="rgb(214,101,21)" rx="2" ry="2" />
<text  x="1185.85" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (23 samples, 0.37%)</title><rect x="940.7" y="533" width="4.4" height="15.0" fill="rgb(227,165,16)" rx="2" ry="2" />
<text  x="943.75" y="543.5" ></text>
</g>
<g >
<title>__remove_hrtimer (11 samples, 0.18%)</title><rect x="72.7" y="453" width="2.1" height="15.0" fill="rgb(207,81,29)" rx="2" ry="2" />
<text  x="75.69" y="463.5" ></text>
</g>
<g >
<title>CompareAndSwap (1 samples, 0.02%)</title><rect x="294.8" y="677" width="0.2" height="15.0" fill="rgb(239,200,0)" rx="2" ry="2" />
<text  x="297.83" y="687.5" ></text>
</g>
<g >
<title>run_rebalance_domains (3 samples, 0.05%)</title><rect x="23.2" y="533" width="0.5" height="15.0" fill="rgb(219,203,18)" rx="2" ry="2" />
<text  x="26.18" y="543.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1048.8" y="597" width="0.2" height="15.0" fill="rgb(223,33,38)" rx="2" ry="2" />
<text  x="1051.81" y="607.5" ></text>
</g>
<g >
<title>perf_event_task_tick (22 samples, 0.35%)</title><rect x="83.2" y="389" width="4.2" height="15.0" fill="rgb(253,191,21)" rx="2" ry="2" />
<text  x="86.23" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1179.8" y="549" width="0.2" height="15.0" fill="rgb(220,135,6)" rx="2" ry="2" />
<text  x="1182.83" y="559.5" ></text>
</g>
<g >
<title>NaClSysWrite (1,563 samples, 24.94%)</title><rect x="679.8" y="661" width="294.3" height="15.0" fill="rgb(214,108,10)" rx="2" ry="2" />
<text  x="682.82" y="671.5" >NaClSysWrite</text>
</g>
<g >
<title>psi_task_switch (1 samples, 0.02%)</title><rect x="15.8" y="581" width="0.2" height="15.0" fill="rgb(236,93,15)" rx="2" ry="2" />
<text  x="18.84" y="591.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_offset (1 samples, 0.02%)</title><rect x="664.2" y="517" width="0.2" height="15.0" fill="rgb(233,67,46)" rx="2" ry="2" />
<text  x="667.20" y="527.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (7 samples, 0.11%)</title><rect x="367.7" y="469" width="1.3" height="15.0" fill="rgb(237,221,5)" rx="2" ry="2" />
<text  x="370.69" y="479.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="664.2" y="533" width="0.2" height="15.0" fill="rgb(226,208,2)" rx="2" ry="2" />
<text  x="667.20" y="543.5" ></text>
</g>
<g >
<title>NaClLog (9 samples, 0.14%)</title><rect x="394.0" y="613" width="1.7" height="15.0" fill="rgb(241,116,14)" rx="2" ry="2" />
<text  x="397.05" y="623.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="251.5" y="357" width="0.2" height="15.0" fill="rgb(217,178,52)" rx="2" ry="2" />
<text  x="254.53" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1048.8" y="693" width="0.4" height="15.0" fill="rgb(232,152,6)" rx="2" ry="2" />
<text  x="1051.81" y="703.5" ></text>
</g>
<g >
<title>update_blocked_averages (10 samples, 0.16%)</title><rect x="1180.4" y="549" width="1.9" height="15.0" fill="rgb(230,162,19)" rx="2" ry="2" />
<text  x="1183.40" y="559.5" ></text>
</g>
<g >
<title>NaClSysWrite (3 samples, 0.05%)</title><rect x="260.0" y="693" width="0.6" height="15.0" fill="rgb(219,136,37)" rx="2" ry="2" />
<text  x="263.01" y="703.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="739.3" y="549" width="0.2" height="15.0" fill="rgb(208,178,43)" rx="2" ry="2" />
<text  x="742.31" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (63 samples, 1.01%)</title><rect x="239.7" y="581" width="11.8" height="15.0" fill="rgb(214,76,7)" rx="2" ry="2" />
<text  x="242.67" y="591.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.02%)</title><rect x="19.0" y="485" width="0.2" height="15.0" fill="rgb(248,202,23)" rx="2" ry="2" />
<text  x="22.04" y="495.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.02%)</title><rect x="587.8" y="485" width="0.2" height="15.0" fill="rgb(250,166,12)" rx="2" ry="2" />
<text  x="590.76" y="495.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i32&gt;::eq (1 samples, 0.02%)</title><rect x="919.5" y="453" width="0.2" height="15.0" fill="rgb(235,224,43)" rx="2" ry="2" />
<text  x="922.47" y="463.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,604 samples, 25.59%)</title><rect x="672.5" y="677" width="301.9" height="15.0" fill="rgb(247,124,8)" rx="2" ry="2" />
<text  x="675.48" y="687.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="234.0" y="565" width="0.2" height="15.0" fill="rgb(233,217,24)" rx="2" ry="2" />
<text  x="237.03" y="575.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1185.3" y="501" width="0.2" height="15.0" fill="rgb(217,13,15)" rx="2" ry="2" />
<text  x="1188.29" y="511.5" ></text>
</g>
<g >
<title>restore_regs_and_return_to_kernel (2 samples, 0.03%)</title><rect x="1164.4" y="549" width="0.4" height="15.0" fill="rgb(247,174,41)" rx="2" ry="2" />
<text  x="1167.40" y="559.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (5 samples, 0.08%)</title><rect x="110.7" y="437" width="1.0" height="15.0" fill="rgb(216,18,33)" rx="2" ry="2" />
<text  x="113.72" y="447.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="10.0" y="597" width="0.2" height="15.0" fill="rgb(223,222,19)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.02%)</title><rect x="97.2" y="453" width="0.2" height="15.0" fill="rgb(253,186,3)" rx="2" ry="2" />
<text  x="100.16" y="463.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1171.6" y="517" width="0.1" height="15.0" fill="rgb(244,55,6)" rx="2" ry="2" />
<text  x="1174.55" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.10%)</title><rect x="578.5" y="485" width="1.2" height="15.0" fill="rgb(206,81,14)" rx="2" ry="2" />
<text  x="581.54" y="495.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="110.3" y="421" width="0.4" height="15.0" fill="rgb(240,136,50)" rx="2" ry="2" />
<text  x="113.34" y="431.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="21.7" y="389" width="0.2" height="15.0" fill="rgb(241,83,9)" rx="2" ry="2" />
<text  x="24.67" y="399.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (1 samples, 0.02%)</title><rect x="1049.0" y="661" width="0.2" height="15.0" fill="rgb(239,111,23)" rx="2" ry="2" />
<text  x="1051.99" y="671.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.03%)</title><rect x="86.6" y="325" width="0.4" height="15.0" fill="rgb(244,1,46)" rx="2" ry="2" />
<text  x="89.62" y="335.5" ></text>
</g>
<g >
<title>irq_enter_rcu (12 samples, 0.19%)</title><rect x="1097.8" y="501" width="2.2" height="15.0" fill="rgb(217,103,32)" rx="2" ry="2" />
<text  x="1100.75" y="511.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (18 samples, 0.29%)</title><rect x="440.9" y="549" width="3.4" height="15.0" fill="rgb(208,28,5)" rx="2" ry="2" />
<text  x="443.92" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt; (26 samples, 0.41%)</title><rect x="732.9" y="613" width="4.9" height="15.0" fill="rgb(239,198,24)" rx="2" ry="2" />
<text  x="735.91" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (1,145 samples, 18.27%)</title><rect x="455.4" y="613" width="215.6" height="15.0" fill="rgb(247,137,29)" rx="2" ry="2" />
<text  x="458.42" y="623.5" >rustposix::safeposix::syscal..</text>
</g>
<g >
<title>check_cpu_stall (2 samples, 0.03%)</title><rect x="1088.0" y="405" width="0.3" height="15.0" fill="rgb(216,169,32)" rx="2" ry="2" />
<text  x="1090.96" y="415.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (31 samples, 0.49%)</title><rect x="690.9" y="629" width="5.9" height="15.0" fill="rgb(228,162,34)" rx="2" ry="2" />
<text  x="693.93" y="639.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="586.4" y="437" width="0.2" height="15.0" fill="rgb(250,105,7)" rx="2" ry="2" />
<text  x="589.45" y="447.5" ></text>
</g>
<g >
<title>__do_munmap (3 samples, 0.05%)</title><rect x="367.1" y="485" width="0.6" height="15.0" fill="rgb(234,125,2)" rx="2" ry="2" />
<text  x="370.13" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (4 samples, 0.06%)</title><rect x="209.9" y="501" width="0.8" height="15.0" fill="rgb(239,60,27)" rx="2" ry="2" />
<text  x="212.93" y="511.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (17 samples, 0.27%)</title><rect x="787.5" y="533" width="3.2" height="15.0" fill="rgb(236,128,54)" rx="2" ry="2" />
<text  x="790.50" y="543.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (329 samples, 5.25%)</title><rect x="514.7" y="517" width="62.0" height="15.0" fill="rgb(218,212,44)" rx="2" ry="2" />
<text  x="517.72" y="527.5" >dashma..</text>
</g>
<g >
<title>rustposix::interface::types::get_int (1 samples, 0.02%)</title><rect x="763.2" y="597" width="0.2" height="15.0" fill="rgb(234,87,35)" rx="2" ry="2" />
<text  x="766.22" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.05%)</title><rect x="453.0" y="485" width="0.5" height="15.0" fill="rgb(239,224,28)" rx="2" ry="2" />
<text  x="455.97" y="495.5" ></text>
</g>
<g >
<title>all (6,268 samples, 100%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(206,49,38)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.06%)</title><rect x="445.1" y="485" width="0.7" height="15.0" fill="rgb(208,32,29)" rx="2" ry="2" />
<text  x="448.06" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="369.2" y="565" width="0.6" height="15.0" fill="rgb(246,161,36)" rx="2" ry="2" />
<text  x="372.20" y="575.5" ></text>
</g>
<g >
<title>sel_ldr (4,231 samples, 67.50%)</title><rect x="251.9" y="725" width="796.5" height="15.0" fill="rgb(251,158,26)" rx="2" ry="2" />
<text  x="254.91" y="735.5" >sel_ldr</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.05%)</title><rect x="913.3" y="421" width="0.5" height="15.0" fill="rgb(252,147,29)" rx="2" ry="2" />
<text  x="916.26" y="431.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (3 samples, 0.05%)</title><rect x="487.0" y="565" width="0.6" height="15.0" fill="rgb(229,151,0)" rx="2" ry="2" />
<text  x="490.05" y="575.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (5 samples, 0.08%)</title><rect x="263.4" y="677" width="0.9" height="15.0" fill="rgb(253,20,48)" rx="2" ry="2" />
<text  x="266.40" y="687.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="212.6" y="485" width="0.2" height="15.0" fill="rgb(209,107,22)" rx="2" ry="2" />
<text  x="215.57" y="495.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (430 samples, 6.86%)</title><rect x="115.6" y="533" width="81.0" height="15.0" fill="rgb(246,111,22)" rx="2" ry="2" />
<text  x="118.61" y="543.5" >mwait_idl..</text>
</g>
<g >
<title>[libc.so.6] (5 samples, 0.08%)</title><rect x="950.9" y="517" width="1.0" height="15.0" fill="rgb(253,35,14)" rx="2" ry="2" />
<text  x="953.91" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (1 samples, 0.02%)</title><rect x="1049.0" y="677" width="0.2" height="15.0" fill="rgb(220,25,41)" rx="2" ry="2" />
<text  x="1051.99" y="687.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.02%)</title><rect x="1046.4" y="245" width="0.1" height="15.0" fill="rgb(244,151,4)" rx="2" ry="2" />
<text  x="1049.36" y="255.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="224.8" y="501" width="0.2" height="15.0" fill="rgb(228,11,22)" rx="2" ry="2" />
<text  x="227.80" y="511.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.02%)</title><rect x="1174.6" y="485" width="0.2" height="15.0" fill="rgb(245,34,28)" rx="2" ry="2" />
<text  x="1177.56" y="495.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (26 samples, 0.41%)</title><rect x="940.2" y="565" width="4.9" height="15.0" fill="rgb(250,158,27)" rx="2" ry="2" />
<text  x="943.18" y="575.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.02%)</title><rect x="1103.2" y="421" width="0.2" height="15.0" fill="rgb(221,16,35)" rx="2" ry="2" />
<text  x="1106.21" y="431.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.03%)</title><rect x="663.8" y="533" width="0.4" height="15.0" fill="rgb(244,180,0)" rx="2" ry="2" />
<text  x="666.82" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.02%)</title><rect x="1038.8" y="613" width="0.2" height="15.0" fill="rgb(218,173,25)" rx="2" ry="2" />
<text  x="1041.83" y="623.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (17 samples, 0.27%)</title><rect x="748.0" y="549" width="3.2" height="15.0" fill="rgb(221,141,6)" rx="2" ry="2" />
<text  x="750.97" y="559.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (20 samples, 0.32%)</title><rect x="921.2" y="597" width="3.7" height="15.0" fill="rgb(233,100,51)" rx="2" ry="2" />
<text  x="924.17" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.30%)</title><rect x="432.6" y="501" width="3.6" height="15.0" fill="rgb(224,129,20)" rx="2" ry="2" />
<text  x="435.64" y="511.5" ></text>
</g>
<g >
<title>__vm_munmap (10 samples, 0.16%)</title><rect x="367.1" y="501" width="1.9" height="15.0" fill="rgb(227,206,32)" rx="2" ry="2" />
<text  x="370.13" y="511.5" ></text>
</g>
<g >
<title>schedule_idle (37 samples, 0.59%)</title><rect x="225.7" y="581" width="7.0" height="15.0" fill="rgb(247,75,50)" rx="2" ry="2" />
<text  x="228.74" y="591.5" ></text>
</g>
<g >
<title>timerqueue_add (3 samples, 0.05%)</title><rect x="237.0" y="501" width="0.6" height="15.0" fill="rgb(209,168,12)" rx="2" ry="2" />
<text  x="240.04" y="511.5" ></text>
</g>
<g >
<title>update_blocked_averages (23 samples, 0.37%)</title><rect x="107.3" y="453" width="4.4" height="15.0" fill="rgb(215,181,8)" rx="2" ry="2" />
<text  x="110.33" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.24%)</title><rect x="759.6" y="517" width="2.9" height="15.0" fill="rgb(249,141,21)" rx="2" ry="2" />
<text  x="762.64" y="527.5" ></text>
</g>
<g >
<title>do_sigtimedwait (1 samples, 0.02%)</title><rect x="10.0" y="645" width="0.2" height="15.0" fill="rgb(233,178,47)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (63 samples, 1.01%)</title><rect x="239.7" y="533" width="11.8" height="15.0" fill="rgb(205,9,24)" rx="2" ry="2" />
<text  x="242.67" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="438.5" y="501" width="0.2" height="15.0" fill="rgb(207,32,8)" rx="2" ry="2" />
<text  x="441.47" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt; (1 samples, 0.02%)</title><rect x="1046.4" y="357" width="0.1" height="15.0" fill="rgb(242,91,37)" rx="2" ry="2" />
<text  x="1049.36" y="367.5" ></text>
</g>
<g >
<title>update_rq_clock (5 samples, 0.08%)</title><rect x="1182.3" y="549" width="0.9" height="15.0" fill="rgb(221,34,35)" rx="2" ry="2" />
<text  x="1185.28" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (122 samples, 1.95%)</title><rect x="463.7" y="581" width="23.0" height="15.0" fill="rgb(254,180,32)" rx="2" ry="2" />
<text  x="466.70" y="591.5" >c..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (25 samples, 0.40%)</title><rect x="916.1" y="501" width="4.7" height="15.0" fill="rgb(220,13,1)" rx="2" ry="2" />
<text  x="919.08" y="511.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="940.0" y="565" width="0.2" height="15.0" fill="rgb(232,150,45)" rx="2" ry="2" />
<text  x="942.99" y="575.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="87.4" y="357" width="0.2" height="15.0" fill="rgb(240,105,22)" rx="2" ry="2" />
<text  x="90.37" y="367.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (3 samples, 0.05%)</title><rect x="760.0" y="501" width="0.6" height="15.0" fill="rgb(242,90,43)" rx="2" ry="2" />
<text  x="763.02" y="511.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.18%)</title><rect x="581.6" y="485" width="2.0" height="15.0" fill="rgb(225,39,38)" rx="2" ry="2" />
<text  x="584.55" y="495.5" ></text>
</g>
<g >
<title>ipv6_list_rcv (2 samples, 0.03%)</title><rect x="21.9" y="437" width="0.3" height="15.0" fill="rgb(207,215,23)" rx="2" ry="2" />
<text  x="24.86" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (118 samples, 1.88%)</title><rect x="898.6" y="565" width="22.2" height="15.0" fill="rgb(219,45,48)" rx="2" ry="2" />
<text  x="901.58" y="575.5" >h..</text>
</g>
<g >
<title>core::hash::sip::u8to64_le (10 samples, 0.16%)</title><rect x="913.8" y="421" width="1.9" height="15.0" fill="rgb(226,106,11)" rx="2" ry="2" />
<text  x="916.83" y="431.5" ></text>
</g>
<g >
<title>__evlist__enable (63 samples, 1.01%)</title><rect x="239.7" y="677" width="11.8" height="15.0" fill="rgb(208,2,11)" rx="2" ry="2" />
<text  x="242.67" y="687.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (5 samples, 0.08%)</title><rect x="270.5" y="645" width="1.0" height="15.0" fill="rgb(242,142,19)" rx="2" ry="2" />
<text  x="273.55" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.24%)</title><rect x="759.6" y="549" width="2.9" height="15.0" fill="rgb(221,219,6)" rx="2" ry="2" />
<text  x="762.64" y="559.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (119 samples, 1.90%)</title><rect x="432.5" y="613" width="22.4" height="15.0" fill="rgb(218,3,54)" rx="2" ry="2" />
<text  x="435.45" y="623.5" >d..</text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.02%)</title><rect x="113.5" y="501" width="0.2" height="15.0" fill="rgb(234,178,14)" rx="2" ry="2" />
<text  x="116.54" y="511.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (114 samples, 1.82%)</title><rect x="952.2" y="581" width="21.5" height="15.0" fill="rgb(246,206,34)" rx="2" ry="2" />
<text  x="955.23" y="591.5" >r..</text>
</g>
<g >
<title>perf_event_for_each_child (1 samples, 0.02%)</title><rect x="251.7" y="629" width="0.2" height="15.0" fill="rgb(213,216,17)" rx="2" ry="2" />
<text  x="254.72" y="639.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1094.4" y="437" width="0.2" height="15.0" fill="rgb(243,112,19)" rx="2" ry="2" />
<text  x="1097.37" y="447.5" ></text>
</g>
<g >
<title>read (2 samples, 0.03%)</title><rect x="613.7" y="533" width="0.4" height="15.0" fill="rgb(216,87,45)" rx="2" ry="2" />
<text  x="616.74" y="543.5" ></text>
</g>
<g >
<title>[unknown] (64 samples, 1.02%)</title><rect x="239.7" y="709" width="12.0" height="15.0" fill="rgb(253,126,45)" rx="2" ry="2" />
<text  x="242.67" y="719.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="895.4" y="469" width="2.2" height="15.0" fill="rgb(228,95,54)" rx="2" ry="2" />
<text  x="898.38" y="479.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (3,694 samples, 58.93%)</title><rect x="279.2" y="693" width="695.4" height="15.0" fill="rgb(238,181,32)" rx="2" ry="2" />
<text  x="282.21" y="703.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.29%)</title><rect x="744.4" y="533" width="3.4" height="15.0" fill="rgb(242,22,11)" rx="2" ry="2" />
<text  x="747.39" y="543.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.03%)</title><rect x="453.5" y="437" width="0.4" height="15.0" fill="rgb(229,169,41)" rx="2" ry="2" />
<text  x="456.54" y="447.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (187 samples, 2.98%)</title><rect x="324.6" y="677" width="35.2" height="15.0" fill="rgb(215,57,27)" rx="2" ry="2" />
<text  x="327.58" y="687.5" >Na..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.24%)</title><rect x="448.8" y="469" width="2.9" height="15.0" fill="rgb(223,92,11)" rx="2" ry="2" />
<text  x="451.83" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="441.9" y="469" width="0.2" height="15.0" fill="rgb(240,144,48)" rx="2" ry="2" />
<text  x="444.86" y="479.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (21 samples, 0.34%)</title><rect x="432.6" y="581" width="4.0" height="15.0" fill="rgb(233,173,42)" rx="2" ry="2" />
<text  x="435.64" y="591.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (1 samples, 0.02%)</title><rect x="83.0" y="389" width="0.2" height="15.0" fill="rgb(247,7,43)" rx="2" ry="2" />
<text  x="86.04" y="399.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="1049.6" y="453" width="0.1" height="15.0" fill="rgb(230,77,36)" rx="2" ry="2" />
<text  x="1052.56" y="463.5" ></text>
</g>
<g >
<title>NaClAddrSpaceFree (3 samples, 0.05%)</title><rect x="369.2" y="597" width="0.6" height="15.0" fill="rgb(240,95,28)" rx="2" ry="2" />
<text  x="372.20" y="607.5" ></text>
</g>
<g >
<title>do_idle (949 samples, 15.14%)</title><rect x="59.5" y="597" width="178.7" height="15.0" fill="rgb(209,138,1)" rx="2" ry="2" />
<text  x="62.51" y="607.5" >do_idle</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.29%)</title><rect x="744.4" y="565" width="3.4" height="15.0" fill="rgb(234,209,35)" rx="2" ry="2" />
<text  x="747.39" y="575.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (4 samples, 0.06%)</title><rect x="613.6" y="597" width="0.7" height="15.0" fill="rgb(207,40,28)" rx="2" ry="2" />
<text  x="616.55" y="607.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="739.3" y="565" width="0.2" height="15.0" fill="rgb(253,218,40)" rx="2" ry="2" />
<text  x="742.31" y="575.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="1049.9" y="661" width="0.4" height="15.0" fill="rgb(207,54,30)" rx="2" ry="2" />
<text  x="1052.94" y="671.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="112.4" y="309" width="0.2" height="15.0" fill="rgb(254,51,28)" rx="2" ry="2" />
<text  x="115.41" y="319.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.05%)</title><rect x="755.9" y="533" width="0.5" height="15.0" fill="rgb(206,132,35)" rx="2" ry="2" />
<text  x="758.88" y="543.5" ></text>
</g>
<g >
<title>NaClSysMunmapDecoder (3 samples, 0.05%)</title><rect x="369.8" y="677" width="0.5" height="15.0" fill="rgb(243,214,52)" rx="2" ry="2" />
<text  x="372.76" y="687.5" ></text>
</g>
<g >
<title>rebalance_domains (48 samples, 0.77%)</title><rect x="98.3" y="453" width="9.0" height="15.0" fill="rgb(217,3,41)" rx="2" ry="2" />
<text  x="101.29" y="463.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="251.5" y="517" width="0.2" height="15.0" fill="rgb(210,101,47)" rx="2" ry="2" />
<text  x="254.53" y="527.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (118 samples, 1.88%)</title><rect x="432.6" y="597" width="22.3" height="15.0" fill="rgb(239,136,46)" rx="2" ry="2" />
<text  x="435.64" y="607.5" >&lt;..</text>
</g>
<g >
<title>lind_mmap (3 samples, 0.05%)</title><rect x="369.8" y="629" width="0.5" height="15.0" fill="rgb(213,199,47)" rx="2" ry="2" />
<text  x="372.76" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (3 samples, 0.05%)</title><rect x="454.9" y="613" width="0.5" height="15.0" fill="rgb(207,144,32)" rx="2" ry="2" />
<text  x="457.85" y="623.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (2 samples, 0.03%)</title><rect x="948.3" y="517" width="0.4" height="15.0" fill="rgb(207,27,22)" rx="2" ry="2" />
<text  x="951.28" y="527.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (3 samples, 0.05%)</title><rect x="360.3" y="677" width="0.6" height="15.0" fill="rgb(222,19,11)" rx="2" ry="2" />
<text  x="363.35" y="687.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (1 samples, 0.02%)</title><rect x="1187.2" y="565" width="0.2" height="15.0" fill="rgb(219,187,18)" rx="2" ry="2" />
<text  x="1190.18" y="575.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="679.6" y="661" width="0.2" height="15.0" fill="rgb(218,138,6)" rx="2" ry="2" />
<text  x="682.63" y="671.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.02%)</title><rect x="1075.2" y="613" width="0.2" height="15.0" fill="rgb(245,129,19)" rx="2" ry="2" />
<text  x="1078.16" y="623.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.03%)</title><rect x="1049.9" y="645" width="0.4" height="15.0" fill="rgb(230,197,13)" rx="2" ry="2" />
<text  x="1052.94" y="655.5" ></text>
</g>
<g >
<title>vmstat_shepherd (1 samples, 0.02%)</title><rect x="1049.7" y="645" width="0.2" height="15.0" fill="rgb(227,164,19)" rx="2" ry="2" />
<text  x="1052.75" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="239.5" y="709" width="0.2" height="15.0" fill="rgb(236,128,42)" rx="2" ry="2" />
<text  x="242.49" y="719.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="758.7" y="437" width="0.2" height="15.0" fill="rgb(224,216,8)" rx="2" ry="2" />
<text  x="761.70" y="447.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="1036.0" y="549" width="0.4" height="15.0" fill="rgb(245,38,46)" rx="2" ry="2" />
<text  x="1039.01" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (26 samples, 0.41%)</title><rect x="427.6" y="549" width="4.9" height="15.0" fill="rgb(211,26,16)" rx="2" ry="2" />
<text  x="430.56" y="559.5" ></text>
</g>
<g >
<title>psi_task_switch (1 samples, 0.02%)</title><rect x="231.4" y="549" width="0.2" height="15.0" fill="rgb(239,6,18)" rx="2" ry="2" />
<text  x="234.39" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.10%)</title><rect x="744.6" y="517" width="1.1" height="15.0" fill="rgb(223,217,43)" rx="2" ry="2" />
<text  x="747.58" y="527.5" ></text>
</g>
<g >
<title>set_next_entity (1 samples, 0.02%)</title><rect x="229.7" y="517" width="0.2" height="15.0" fill="rgb(244,23,18)" rx="2" ry="2" />
<text  x="232.70" y="527.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.02%)</title><rect x="58.6" y="549" width="0.2" height="15.0" fill="rgb(226,73,27)" rx="2" ry="2" />
<text  x="61.57" y="559.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="16.4" y="629" width="0.2" height="15.0" fill="rgb(231,86,47)" rx="2" ry="2" />
<text  x="19.40" y="639.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="10.0" y="517" width="0.2" height="15.0" fill="rgb(237,66,26)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="600.8" y="469" width="0.1" height="15.0" fill="rgb(233,186,26)" rx="2" ry="2" />
<text  x="603.75" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.03%)</title><rect x="604.7" y="485" width="0.4" height="15.0" fill="rgb(218,194,12)" rx="2" ry="2" />
<text  x="607.71" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (21 samples, 0.34%)</title><rect x="911.8" y="453" width="3.9" height="15.0" fill="rgb(249,96,23)" rx="2" ry="2" />
<text  x="914.75" y="463.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (10 samples, 0.16%)</title><rect x="367.1" y="613" width="1.9" height="15.0" fill="rgb(253,180,7)" rx="2" ry="2" />
<text  x="370.13" y="623.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (2 samples, 0.03%)</title><rect x="1036.6" y="565" width="0.3" height="15.0" fill="rgb(236,152,45)" rx="2" ry="2" />
<text  x="1039.57" y="575.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1050.5" y="581" width="0.2" height="15.0" fill="rgb(249,150,28)" rx="2" ry="2" />
<text  x="1053.50" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (8 samples, 0.13%)</title><rect x="270.0" y="693" width="1.5" height="15.0" fill="rgb(229,146,21)" rx="2" ry="2" />
<text  x="272.98" y="703.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.02%)</title><rect x="58.6" y="581" width="0.2" height="15.0" fill="rgb(206,50,23)" rx="2" ry="2" />
<text  x="61.57" y="591.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.05%)</title><rect x="640.1" y="565" width="0.6" height="15.0" fill="rgb(226,21,52)" rx="2" ry="2" />
<text  x="643.10" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="264.1" y="645" width="0.2" height="15.0" fill="rgb(250,101,6)" rx="2" ry="2" />
<text  x="267.15" y="655.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (3 samples, 0.05%)</title><rect x="369.8" y="469" width="0.5" height="15.0" fill="rgb(252,123,28)" rx="2" ry="2" />
<text  x="372.76" y="479.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (8 samples, 0.13%)</title><rect x="676.8" y="645" width="1.5" height="15.0" fill="rgb(209,125,5)" rx="2" ry="2" />
<text  x="679.81" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (66 samples, 1.05%)</title><rect x="564.2" y="485" width="12.5" height="15.0" fill="rgb(208,72,35)" rx="2" ry="2" />
<text  x="567.23" y="495.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (1 samples, 0.02%)</title><rect x="1088.5" y="405" width="0.2" height="15.0" fill="rgb(208,37,37)" rx="2" ry="2" />
<text  x="1091.53" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="895.4" y="453" width="2.2" height="15.0" fill="rgb(244,89,40)" rx="2" ry="2" />
<text  x="898.38" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1106.8" y="437" width="0.2" height="15.0" fill="rgb(207,149,17)" rx="2" ry="2" />
<text  x="1109.79" y="447.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="1048.8" y="565" width="0.2" height="15.0" fill="rgb(241,29,50)" rx="2" ry="2" />
<text  x="1051.81" y="575.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="1040.3" y="693" width="0.2" height="15.0" fill="rgb(232,87,46)" rx="2" ry="2" />
<text  x="1043.34" y="703.5" ></text>
</g>
<g >
<title>n_tty_receive_buf_common (1 samples, 0.02%)</title><rect x="1049.6" y="581" width="0.1" height="15.0" fill="rgb(215,176,0)" rx="2" ry="2" />
<text  x="1052.56" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="452.4" y="485" width="0.2" height="15.0" fill="rgb(248,102,22)" rx="2" ry="2" />
<text  x="455.41" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (3 samples, 0.05%)</title><rect x="1175.9" y="517" width="0.5" height="15.0" fill="rgb(230,12,34)" rx="2" ry="2" />
<text  x="1178.88" y="527.5" ></text>
</g>
<g >
<title>tick_sched_timer (46 samples, 0.73%)</title><rect x="1085.9" y="453" width="8.7" height="15.0" fill="rgb(208,152,11)" rx="2" ry="2" />
<text  x="1088.89" y="463.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (127 samples, 2.03%)</title><rect x="738.6" y="597" width="23.9" height="15.0" fill="rgb(249,119,28)" rx="2" ry="2" />
<text  x="741.56" y="607.5" >&lt;..</text>
</g>
<g >
<title>update_process_times (37 samples, 0.59%)</title><rect x="1087.4" y="421" width="7.0" height="15.0" fill="rgb(212,29,52)" rx="2" ry="2" />
<text  x="1090.40" y="431.5" ></text>
</g>
<g >
<title>hrtimer_update_next_event (1 samples, 0.02%)</title><rect x="1175.9" y="501" width="0.2" height="15.0" fill="rgb(250,46,23)" rx="2" ry="2" />
<text  x="1178.88" y="511.5" ></text>
</g>
<g >
<title>rebalance_domains (3 samples, 0.05%)</title><rect x="23.2" y="517" width="0.5" height="15.0" fill="rgb(218,191,24)" rx="2" ry="2" />
<text  x="26.18" y="527.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="370.1" y="261" width="0.2" height="15.0" fill="rgb(244,138,15)" rx="2" ry="2" />
<text  x="373.14" y="271.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (26 samples, 0.41%)</title><rect x="427.6" y="565" width="4.9" height="15.0" fill="rgb(222,138,3)" rx="2" ry="2" />
<text  x="430.56" y="575.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="1036.9" y="661" width="0.2" height="15.0" fill="rgb(245,127,39)" rx="2" ry="2" />
<text  x="1039.95" y="671.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.02%)</title><rect x="1039.2" y="693" width="0.2" height="15.0" fill="rgb(222,204,46)" rx="2" ry="2" />
<text  x="1042.21" y="703.5" ></text>
</g>
<g >
<title>__update_blocked_fair (10 samples, 0.16%)</title><rect x="223.1" y="533" width="1.9" height="15.0" fill="rgb(221,173,52)" rx="2" ry="2" />
<text  x="226.11" y="543.5" ></text>
</g>
<g >
<title>menu_reflect (3 samples, 0.05%)</title><rect x="1175.1" y="565" width="0.6" height="15.0" fill="rgb(209,228,26)" rx="2" ry="2" />
<text  x="1178.13" y="575.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="92.5" y="453" width="0.1" height="15.0" fill="rgb(229,108,15)" rx="2" ry="2" />
<text  x="95.46" y="463.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1181.7" y="517" width="0.2" height="15.0" fill="rgb(209,88,50)" rx="2" ry="2" />
<text  x="1184.72" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.05%)</title><rect x="662.7" y="533" width="0.6" height="15.0" fill="rgb(206,168,5)" rx="2" ry="2" />
<text  x="665.69" y="543.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.02%)</title><rect x="1160.4" y="517" width="0.2" height="15.0" fill="rgb(253,101,43)" rx="2" ry="2" />
<text  x="1163.44" y="527.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.constprop.0.isra.0 (20 samples, 0.32%)</title><rect x="1179.5" y="565" width="3.7" height="15.0" fill="rgb(228,7,53)" rx="2" ry="2" />
<text  x="1182.46" y="575.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="940.0" y="581" width="0.2" height="15.0" fill="rgb(216,148,14)" rx="2" ry="2" />
<text  x="942.99" y="591.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="76.5" y="453" width="0.1" height="15.0" fill="rgb(209,173,0)" rx="2" ry="2" />
<text  x="79.46" y="463.5" ></text>
</g>
<g >
<title>x86_pmu_enable (3 samples, 0.05%)</title><rect x="1092.5" y="357" width="0.5" height="15.0" fill="rgb(241,196,32)" rx="2" ry="2" />
<text  x="1095.48" y="367.5" ></text>
</g>
<g >
<title>zap_pte_range (3 samples, 0.05%)</title><rect x="369.8" y="325" width="0.5" height="15.0" fill="rgb(244,58,53)" rx="2" ry="2" />
<text  x="372.76" y="335.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1049.2" y="629" width="0.2" height="15.0" fill="rgb(231,37,15)" rx="2" ry="2" />
<text  x="1052.18" y="639.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="753.2" y="469" width="0.2" height="15.0" fill="rgb(233,86,20)" rx="2" ry="2" />
<text  x="756.24" y="479.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="232.3" y="517" width="0.2" height="15.0" fill="rgb(221,139,45)" rx="2" ry="2" />
<text  x="235.33" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (38 samples, 0.61%)</title><rect x="505.3" y="549" width="7.2" height="15.0" fill="rgb(206,202,36)" rx="2" ry="2" />
<text  x="508.31" y="559.5" ></text>
</g>
<g >
<title>exec_binprm (1 samples, 0.02%)</title><rect x="239.5" y="613" width="0.2" height="15.0" fill="rgb(229,164,32)" rx="2" ry="2" />
<text  x="242.49" y="623.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="270.5" y="613" width="0.4" height="15.0" fill="rgb(243,198,37)" rx="2" ry="2" />
<text  x="273.55" y="623.5" ></text>
</g>
<g >
<title>__activate_page.part.0 (1 samples, 0.02%)</title><rect x="367.3" y="325" width="0.2" height="15.0" fill="rgb(233,211,36)" rx="2" ry="2" />
<text  x="370.31" y="335.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.02%)</title><rect x="1083.8" y="437" width="0.2" height="15.0" fill="rgb(248,7,0)" rx="2" ry="2" />
<text  x="1086.82" y="447.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (7 samples, 0.11%)</title><rect x="17.7" y="517" width="1.3" height="15.0" fill="rgb(218,169,0)" rx="2" ry="2" />
<text  x="20.72" y="527.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.02%)</title><rect x="58.6" y="565" width="0.2" height="15.0" fill="rgb(236,95,49)" rx="2" ry="2" />
<text  x="61.57" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.13%)</title><rect x="442.1" y="469" width="1.5" height="15.0" fill="rgb(206,208,21)" rx="2" ry="2" />
<text  x="445.05" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="239.5" y="677" width="0.2" height="15.0" fill="rgb(242,79,41)" rx="2" ry="2" />
<text  x="242.49" y="687.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="237.6" y="485" width="0.2" height="15.0" fill="rgb(216,134,12)" rx="2" ry="2" />
<text  x="240.60" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (38 samples, 0.61%)</title><rect x="903.5" y="469" width="7.1" height="15.0" fill="rgb(217,115,33)" rx="2" ry="2" />
<text  x="906.47" y="479.5" ></text>
</g>
<g >
<title>__mmap (3 samples, 0.05%)</title><rect x="369.8" y="549" width="0.5" height="15.0" fill="rgb(223,183,0)" rx="2" ry="2" />
<text  x="372.76" y="559.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (28 samples, 0.45%)</title><rect x="390.5" y="629" width="5.2" height="15.0" fill="rgb(248,223,21)" rx="2" ry="2" />
<text  x="393.47" y="639.5" ></text>
</g>
<g >
<title>__vm_munmap (3 samples, 0.05%)</title><rect x="369.2" y="517" width="0.6" height="15.0" fill="rgb(229,57,6)" rx="2" ry="2" />
<text  x="372.20" y="527.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="1185.3" y="485" width="0.2" height="15.0" fill="rgb(213,8,27)" rx="2" ry="2" />
<text  x="1188.29" y="495.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="113.2" y="485" width="0.2" height="15.0" fill="rgb(227,180,41)" rx="2" ry="2" />
<text  x="116.17" y="495.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="452.4" y="501" width="0.2" height="15.0" fill="rgb(242,59,38)" rx="2" ry="2" />
<text  x="455.41" y="511.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (38 samples, 0.61%)</title><rect x="945.1" y="581" width="7.1" height="15.0" fill="rgb(242,6,52)" rx="2" ry="2" />
<text  x="948.08" y="591.5" ></text>
</g>
<g >
<title>clockevents_program_event (2 samples, 0.03%)</title><rect x="1188.9" y="501" width="0.3" height="15.0" fill="rgb(220,14,15)" rx="2" ry="2" />
<text  x="1191.87" y="511.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.02%)</title><rect x="1170.6" y="517" width="0.2" height="15.0" fill="rgb(243,147,4)" rx="2" ry="2" />
<text  x="1173.61" y="527.5" ></text>
</g>
<g >
<title>cpu_latency_qos_limit (1 samples, 0.02%)</title><rect x="206.9" y="533" width="0.2" height="15.0" fill="rgb(222,15,34)" rx="2" ry="2" />
<text  x="209.92" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (122 samples, 1.95%)</title><rect x="463.7" y="565" width="23.0" height="15.0" fill="rgb(220,110,40)" rx="2" ry="2" />
<text  x="466.70" y="575.5" >c..</text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="88.7" y="453" width="0.2" height="15.0" fill="rgb(236,123,43)" rx="2" ry="2" />
<text  x="91.69" y="463.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.02%)</title><rect x="202.2" y="565" width="0.2" height="15.0" fill="rgb(239,136,35)" rx="2" ry="2" />
<text  x="205.21" y="575.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (13 samples, 0.21%)</title><rect x="1176.8" y="581" width="2.5" height="15.0" fill="rgb(207,222,30)" rx="2" ry="2" />
<text  x="1179.82" y="591.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.02%)</title><rect x="213.5" y="533" width="0.2" height="15.0" fill="rgb(247,127,33)" rx="2" ry="2" />
<text  x="216.51" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="454.5" y="501" width="0.2" height="15.0" fill="rgb(222,58,18)" rx="2" ry="2" />
<text  x="457.48" y="511.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.73%)</title><rect x="802.4" y="565" width="8.6" height="15.0" fill="rgb(214,213,51)" rx="2" ry="2" />
<text  x="805.38" y="575.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (5 samples, 0.08%)</title><rect x="209.9" y="517" width="1.0" height="15.0" fill="rgb(209,226,21)" rx="2" ry="2" />
<text  x="212.93" y="527.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1183.0" y="517" width="0.2" height="15.0" fill="rgb(213,73,28)" rx="2" ry="2" />
<text  x="1186.03" y="527.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (1 samples, 0.02%)</title><rect x="744.2" y="581" width="0.2" height="15.0" fill="rgb(212,91,28)" rx="2" ry="2" />
<text  x="747.21" y="591.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (2 samples, 0.03%)</title><rect x="260.9" y="693" width="0.4" height="15.0" fill="rgb(236,71,51)" rx="2" ry="2" />
<text  x="263.95" y="703.5" ></text>
</g>
<g >
<title>napi_complete_done (5 samples, 0.08%)</title><rect x="21.3" y="485" width="0.9" height="15.0" fill="rgb(240,120,42)" rx="2" ry="2" />
<text  x="24.30" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="222.4" y="549" width="0.3" height="15.0" fill="rgb(222,130,1)" rx="2" ry="2" />
<text  x="225.35" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (46 samples, 0.73%)</title><rect x="802.4" y="581" width="8.6" height="15.0" fill="rgb(254,98,10)" rx="2" ry="2" />
<text  x="805.38" y="591.5" ></text>
</g>
<g >
<title>pick_next_task_fair (15 samples, 0.24%)</title><rect x="227.1" y="533" width="2.8" height="15.0" fill="rgb(236,204,25)" rx="2" ry="2" />
<text  x="230.06" y="543.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="1038.8" y="549" width="0.2" height="15.0" fill="rgb(225,18,22)" rx="2" ry="2" />
<text  x="1041.83" y="559.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (63 samples, 1.01%)</title><rect x="239.7" y="645" width="11.8" height="15.0" fill="rgb(226,100,47)" rx="2" ry="2" />
<text  x="242.67" y="655.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="598.5" y="469" width="2.3" height="15.0" fill="rgb(223,127,11)" rx="2" ry="2" />
<text  x="601.49" y="479.5" ></text>
</g>
<g >
<title>nf_ct_get_tuple_ports.constprop.0 (1 samples, 0.02%)</title><rect x="21.7" y="309" width="0.2" height="15.0" fill="rgb(216,145,16)" rx="2" ry="2" />
<text  x="24.67" y="319.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (43 samples, 0.69%)</title><rect x="688.7" y="645" width="8.1" height="15.0" fill="rgb(220,108,23)" rx="2" ry="2" />
<text  x="691.67" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (18 samples, 0.29%)</title><rect x="739.5" y="517" width="3.4" height="15.0" fill="rgb(232,7,31)" rx="2" ry="2" />
<text  x="742.50" y="527.5" ></text>
</g>
<g >
<title>rcu_gp_fqs_loop (1 samples, 0.02%)</title><rect x="16.4" y="661" width="0.2" height="15.0" fill="rgb(212,50,44)" rx="2" ry="2" />
<text  x="19.40" y="671.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (3 samples, 0.05%)</title><rect x="369.8" y="485" width="0.5" height="15.0" fill="rgb(242,100,4)" rx="2" ry="2" />
<text  x="372.76" y="495.5" ></text>
</g>
<g >
<title>__remove_hrtimer (10 samples, 0.16%)</title><rect x="1083.3" y="453" width="1.8" height="15.0" fill="rgb(214,47,19)" rx="2" ry="2" />
<text  x="1086.26" y="463.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.02%)</title><rect x="92.8" y="485" width="0.2" height="15.0" fill="rgb(230,140,40)" rx="2" ry="2" />
<text  x="95.83" y="495.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (53 samples, 0.85%)</title><rect x="660.6" y="549" width="10.0" height="15.0" fill="rgb(227,229,5)" rx="2" ry="2" />
<text  x="663.62" y="559.5" ></text>
</g>
<g >
<title>NaClLog (3 samples, 0.05%)</title><rect x="277.9" y="693" width="0.6" height="15.0" fill="rgb(208,5,3)" rx="2" ry="2" />
<text  x="280.89" y="703.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.03%)</title><rect x="448.5" y="501" width="0.3" height="15.0" fill="rgb(240,185,14)" rx="2" ry="2" />
<text  x="451.45" y="511.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (32 samples, 0.51%)</title><rect x="499.3" y="549" width="6.0" height="15.0" fill="rgb(226,51,0)" rx="2" ry="2" />
<text  x="502.28" y="559.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="21.9" y="53" width="0.1" height="15.0" fill="rgb(233,217,14)" rx="2" ry="2" />
<text  x="24.86" y="63.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (2 samples, 0.03%)</title><rect x="365.6" y="677" width="0.4" height="15.0" fill="rgb(217,142,16)" rx="2" ry="2" />
<text  x="368.62" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="251.7" y="693" width="0.2" height="15.0" fill="rgb(219,142,12)" rx="2" ry="2" />
<text  x="254.72" y="703.5" ></text>
</g>
<g >
<title>tick_program_event (2 samples, 0.03%)</title><rect x="1188.9" y="517" width="0.3" height="15.0" fill="rgb(244,104,27)" rx="2" ry="2" />
<text  x="1191.87" y="527.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.02%)</title><rect x="1038.8" y="661" width="0.2" height="15.0" fill="rgb(214,40,5)" rx="2" ry="2" />
<text  x="1041.83" y="671.5" ></text>
</g>
<g >
<title>core::mem::drop (28 samples, 0.45%)</title><rect x="487.6" y="597" width="5.3" height="15.0" fill="rgb(220,53,2)" rx="2" ry="2" />
<text  x="490.61" y="607.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (2 samples, 0.03%)</title><rect x="277.5" y="693" width="0.4" height="15.0" fill="rgb(221,223,6)" rx="2" ry="2" />
<text  x="280.51" y="703.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (5 samples, 0.08%)</title><rect x="1044.9" y="693" width="0.9" height="15.0" fill="rgb(238,224,41)" rx="2" ry="2" />
<text  x="1047.85" y="703.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.26%)</title><rect x="444.5" y="517" width="3.0" height="15.0" fill="rgb(219,219,13)" rx="2" ry="2" />
<text  x="447.50" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (60 samples, 0.96%)</title><rect x="751.2" y="565" width="11.3" height="15.0" fill="rgb(222,216,45)" rx="2" ry="2" />
<text  x="754.17" y="575.5" ></text>
</g>
<g >
<title>NaClLog (19 samples, 0.30%)</title><rect x="360.9" y="677" width="3.6" height="15.0" fill="rgb(253,117,22)" rx="2" ry="2" />
<text  x="363.91" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="614.1" y="517" width="0.2" height="15.0" fill="rgb(237,197,11)" rx="2" ry="2" />
<text  x="617.12" y="527.5" ></text>
</g>
<g >
<title>pm_qos_read_value (1 samples, 0.02%)</title><rect x="1171.0" y="533" width="0.2" height="15.0" fill="rgb(246,149,29)" rx="2" ry="2" />
<text  x="1173.99" y="543.5" ></text>
</g>
<g >
<title>scheduler_tick (28 samples, 0.45%)</title><rect x="1088.9" y="405" width="5.3" height="15.0" fill="rgb(235,173,46)" rx="2" ry="2" />
<text  x="1091.91" y="415.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (6 samples, 0.10%)</title><rect x="366.0" y="677" width="1.1" height="15.0" fill="rgb(242,72,17)" rx="2" ry="2" />
<text  x="369.00" y="687.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.05%)</title><rect x="919.1" y="469" width="0.6" height="15.0" fill="rgb(237,138,20)" rx="2" ry="2" />
<text  x="922.10" y="479.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (10 samples, 0.16%)</title><rect x="1103.6" y="405" width="1.9" height="15.0" fill="rgb(239,163,7)" rx="2" ry="2" />
<text  x="1106.59" y="415.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (21 samples, 0.34%)</title><rect x="432.6" y="549" width="4.0" height="15.0" fill="rgb(244,92,0)" rx="2" ry="2" />
<text  x="435.64" y="559.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (1 samples, 0.02%)</title><rect x="1039.0" y="693" width="0.2" height="15.0" fill="rgb(241,142,50)" rx="2" ry="2" />
<text  x="1042.02" y="703.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (3 samples, 0.05%)</title><rect x="237.0" y="533" width="0.6" height="15.0" fill="rgb(239,157,6)" rx="2" ry="2" />
<text  x="240.04" y="543.5" ></text>
</g>
<g >
<title>nohz_csd_func (3 samples, 0.05%)</title><rect x="221.6" y="565" width="0.6" height="15.0" fill="rgb(245,118,32)" rx="2" ry="2" />
<text  x="224.60" y="575.5" ></text>
</g>
<g >
<title>pick_next_entity (1 samples, 0.02%)</title><rect x="226.9" y="533" width="0.2" height="15.0" fill="rgb(208,3,28)" rx="2" ry="2" />
<text  x="229.87" y="543.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.05%)</title><rect x="662.7" y="501" width="0.6" height="15.0" fill="rgb(226,185,43)" rx="2" ry="2" />
<text  x="665.69" y="511.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="112.8" y="373" width="0.2" height="15.0" fill="rgb(209,107,40)" rx="2" ry="2" />
<text  x="115.79" y="383.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.02%)</title><rect x="251.5" y="597" width="0.2" height="15.0" fill="rgb(251,198,37)" rx="2" ry="2" />
<text  x="254.53" y="607.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.02%)</title><rect x="1036.4" y="533" width="0.2" height="15.0" fill="rgb(235,210,13)" rx="2" ry="2" />
<text  x="1039.38" y="543.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.02%)</title><rect x="15.8" y="661" width="0.2" height="15.0" fill="rgb(209,189,11)" rx="2" ry="2" />
<text  x="18.84" y="671.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.08%)</title><rect x="760.6" y="485" width="0.9" height="15.0" fill="rgb(236,186,21)" rx="2" ry="2" />
<text  x="763.58" y="495.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (534 samples, 8.52%)</title><rect x="1075.9" y="581" width="100.5" height="15.0" fill="rgb(220,164,43)" rx="2" ry="2" />
<text  x="1078.92" y="591.5" >cpuidle_idle..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (57 samples, 0.91%)</title><rect x="899.9" y="501" width="10.7" height="15.0" fill="rgb(205,156,19)" rx="2" ry="2" />
<text  x="902.89" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.08%)</title><rect x="597.6" y="485" width="0.9" height="15.0" fill="rgb(247,156,31)" rx="2" ry="2" />
<text  x="600.55" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4 samples, 0.06%)</title><rect x="22.4" y="549" width="0.8" height="15.0" fill="rgb(251,176,50)" rx="2" ry="2" />
<text  x="25.43" y="559.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (3 samples, 0.05%)</title><rect x="270.9" y="629" width="0.6" height="15.0" fill="rgb(227,223,33)" rx="2" ry="2" />
<text  x="273.93" y="639.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="226.3" y="549" width="0.2" height="15.0" fill="rgb(209,179,9)" rx="2" ry="2" />
<text  x="229.31" y="559.5" ></text>
</g>
<g >
<title>run_rebalance_domains (36 samples, 0.57%)</title><rect x="1100.8" y="469" width="6.7" height="15.0" fill="rgb(252,136,43)" rx="2" ry="2" />
<text  x="1103.77" y="479.5" ></text>
</g>
<g >
<title>rb_next (7 samples, 0.11%)</title><rect x="73.3" y="437" width="1.3" height="15.0" fill="rgb(222,156,25)" rx="2" ry="2" />
<text  x="76.25" y="447.5" ></text>
</g>
<g >
<title>__cmd_record (64 samples, 1.02%)</title><rect x="239.7" y="693" width="12.0" height="15.0" fill="rgb(225,27,6)" rx="2" ry="2" />
<text  x="242.67" y="703.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (2 samples, 0.03%)</title><rect x="950.3" y="533" width="0.4" height="15.0" fill="rgb(219,228,46)" rx="2" ry="2" />
<text  x="953.35" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.05%)</title><rect x="902.9" y="453" width="0.6" height="15.0" fill="rgb(226,30,50)" rx="2" ry="2" />
<text  x="905.91" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="1046.4" y="677" width="0.1" height="15.0" fill="rgb(205,224,12)" rx="2" ry="2" />
<text  x="1049.36" y="687.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (26 samples, 0.41%)</title><rect x="592.1" y="469" width="4.9" height="15.0" fill="rgb(239,118,31)" rx="2" ry="2" />
<text  x="595.09" y="479.5" ></text>
</g>
<g >
<title>handle_pte_fault (7 samples, 0.11%)</title><rect x="1035.6" y="613" width="1.3" height="15.0" fill="rgb(250,5,39)" rx="2" ry="2" />
<text  x="1038.63" y="623.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.02%)</title><rect x="111.7" y="453" width="0.1" height="15.0" fill="rgb(253,3,10)" rx="2" ry="2" />
<text  x="114.66" y="463.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (3 samples, 0.05%)</title><rect x="80.2" y="405" width="0.6" height="15.0" fill="rgb(252,31,21)" rx="2" ry="2" />
<text  x="83.22" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.13%)</title><rect x="453.0" y="501" width="1.5" height="15.0" fill="rgb(236,136,12)" rx="2" ry="2" />
<text  x="455.97" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="58.6" y="533" width="0.2" height="15.0" fill="rgb(214,58,51)" rx="2" ry="2" />
<text  x="61.57" y="543.5" ></text>
</g>
<g >
<title>irq_exit_rcu (4 samples, 0.06%)</title><rect x="23.2" y="565" width="0.7" height="15.0" fill="rgb(221,56,26)" rx="2" ry="2" />
<text  x="26.18" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (20 samples, 0.32%)</title><rect x="641.0" y="549" width="3.8" height="15.0" fill="rgb(246,187,51)" rx="2" ry="2" />
<text  x="644.04" y="559.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="251.7" y="453" width="0.2" height="15.0" fill="rgb(235,12,40)" rx="2" ry="2" />
<text  x="254.72" y="463.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (17 samples, 0.27%)</title><rect x="895.4" y="533" width="3.2" height="15.0" fill="rgb(222,208,51)" rx="2" ry="2" />
<text  x="898.38" y="543.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (6 samples, 0.10%)</title><rect x="1160.6" y="517" width="1.2" height="15.0" fill="rgb(230,20,25)" rx="2" ry="2" />
<text  x="1163.63" y="527.5" ></text>
</g>
<g >
<title>hrtimer_update_next_event (2 samples, 0.03%)</title><rect x="216.1" y="501" width="0.4" height="15.0" fill="rgb(218,50,16)" rx="2" ry="2" />
<text  x="219.14" y="511.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="19.0" y="437" width="0.2" height="15.0" fill="rgb(223,144,28)" rx="2" ry="2" />
<text  x="22.04" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.08%)</title><rect x="597.6" y="501" width="0.9" height="15.0" fill="rgb(224,103,4)" rx="2" ry="2" />
<text  x="600.55" y="511.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.02%)</title><rect x="973.7" y="581" width="0.2" height="15.0" fill="rgb(208,18,49)" rx="2" ry="2" />
<text  x="976.69" y="591.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (10 samples, 0.16%)</title><rect x="952.4" y="533" width="1.9" height="15.0" fill="rgb(249,107,16)" rx="2" ry="2" />
<text  x="955.42" y="543.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (23 samples, 0.37%)</title><rect x="811.0" y="565" width="4.4" height="15.0" fill="rgb(239,5,40)" rx="2" ry="2" />
<text  x="814.04" y="575.5" ></text>
</g>
<g >
<title>unmap_page_range (3 samples, 0.05%)</title><rect x="367.1" y="421" width="0.6" height="15.0" fill="rgb(216,120,32)" rx="2" ry="2" />
<text  x="370.13" y="431.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (366 samples, 5.84%)</title><rect x="817.1" y="517" width="68.9" height="15.0" fill="rgb(205,28,13)" rx="2" ry="2" />
<text  x="820.06" y="527.5" >dashmap..</text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (5 samples, 0.08%)</title><rect x="762.5" y="613" width="0.9" height="15.0" fill="rgb(206,52,13)" rx="2" ry="2" />
<text  x="765.47" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="15.6" y="709" width="0.4" height="15.0" fill="rgb(227,58,5)" rx="2" ry="2" />
<text  x="18.65" y="719.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (9 samples, 0.14%)</title><rect x="235.2" y="533" width="1.7" height="15.0" fill="rgb(253,149,49)" rx="2" ry="2" />
<text  x="238.16" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.14%)</title><rect x="445.8" y="485" width="1.7" height="15.0" fill="rgb(232,225,10)" rx="2" ry="2" />
<text  x="448.82" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1184.2" y="549" width="0.2" height="15.0" fill="rgb(207,37,41)" rx="2" ry="2" />
<text  x="1187.16" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (26 samples, 0.41%)</title><rect x="732.9" y="549" width="4.9" height="15.0" fill="rgb(210,122,26)" rx="2" ry="2" />
<text  x="735.91" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt; (38 samples, 0.61%)</title><rect x="505.3" y="597" width="7.2" height="15.0" fill="rgb(254,57,9)" rx="2" ry="2" />
<text  x="508.31" y="607.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (65 samples, 1.04%)</title><rect x="927.8" y="549" width="12.2" height="15.0" fill="rgb(220,41,29)" rx="2" ry="2" />
<text  x="930.76" y="559.5" ></text>
</g>
<g >
<title>core::cmp::min (1 samples, 0.02%)</title><rect x="616.9" y="581" width="0.2" height="15.0" fill="rgb(207,22,24)" rx="2" ry="2" />
<text  x="619.94" y="591.5" ></text>
</g>
<g >
<title>alx_poll (16 samples, 0.26%)</title><rect x="19.4" y="501" width="3.0" height="15.0" fill="rgb(231,206,31)" rx="2" ry="2" />
<text  x="22.41" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="15.8" y="677" width="0.2" height="15.0" fill="rgb(219,47,0)" rx="2" ry="2" />
<text  x="18.84" y="687.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="239.5" y="485" width="0.2" height="15.0" fill="rgb(226,40,10)" rx="2" ry="2" />
<text  x="242.49" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="251.5" y="533" width="0.2" height="15.0" fill="rgb(217,211,52)" rx="2" ry="2" />
<text  x="254.53" y="543.5" ></text>
</g>
<g >
<title>__munmap (10 samples, 0.16%)</title><rect x="367.1" y="565" width="1.9" height="15.0" fill="rgb(250,206,25)" rx="2" ry="2" />
<text  x="370.13" y="575.5" ></text>
</g>
<g >
<title>__update_idle_core (3 samples, 0.05%)</title><rect x="230.3" y="501" width="0.5" height="15.0" fill="rgb(218,224,15)" rx="2" ry="2" />
<text  x="233.26" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (56 samples, 0.89%)</title><rect x="444.3" y="581" width="10.6" height="15.0" fill="rgb(228,193,12)" rx="2" ry="2" />
<text  x="447.31" y="591.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.02%)</title><rect x="251.5" y="453" width="0.2" height="15.0" fill="rgb(242,192,38)" rx="2" ry="2" />
<text  x="254.53" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (7 samples, 0.11%)</title><rect x="603.4" y="485" width="1.3" height="15.0" fill="rgb(243,170,9)" rx="2" ry="2" />
<text  x="606.39" y="495.5" ></text>
</g>
<g >
<title>NaClSysExecv (11 samples, 0.18%)</title><rect x="367.1" y="645" width="2.1" height="15.0" fill="rgb(249,179,48)" rx="2" ry="2" />
<text  x="370.13" y="655.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (2 samples, 0.03%)</title><rect x="1075.5" y="565" width="0.4" height="15.0" fill="rgb(246,223,5)" rx="2" ry="2" />
<text  x="1078.54" y="575.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (17 samples, 0.27%)</title><rect x="748.0" y="533" width="3.2" height="15.0" fill="rgb(227,170,21)" rx="2" ry="2" />
<text  x="750.97" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (4 samples, 0.06%)</title><rect x="1175.7" y="565" width="0.7" height="15.0" fill="rgb(220,42,8)" rx="2" ry="2" />
<text  x="1178.69" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.03%)</title><rect x="613.7" y="485" width="0.4" height="15.0" fill="rgb(218,50,10)" rx="2" ry="2" />
<text  x="616.74" y="495.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (3 samples, 0.05%)</title><rect x="662.7" y="517" width="0.6" height="15.0" fill="rgb(221,217,10)" rx="2" ry="2" />
<text  x="665.69" y="527.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (3 samples, 0.05%)</title><rect x="369.2" y="629" width="0.6" height="15.0" fill="rgb(220,78,1)" rx="2" ry="2" />
<text  x="372.20" y="639.5" ></text>
</g>
<g >
<title>tick_nohz_restart (18 samples, 0.29%)</title><rect x="234.4" y="565" width="3.4" height="15.0" fill="rgb(242,168,1)" rx="2" ry="2" />
<text  x="237.40" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (29 samples, 0.46%)</title><rect x="421.9" y="613" width="5.5" height="15.0" fill="rgb(235,5,16)" rx="2" ry="2" />
<text  x="424.91" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.27%)</title><rect x="787.5" y="517" width="3.2" height="15.0" fill="rgb(220,35,30)" rx="2" ry="2" />
<text  x="790.50" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (1 samples, 0.02%)</title><rect x="614.1" y="501" width="0.2" height="15.0" fill="rgb(232,4,49)" rx="2" ry="2" />
<text  x="617.12" y="511.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1049.4" y="645" width="0.2" height="15.0" fill="rgb(220,17,1)" rx="2" ry="2" />
<text  x="1052.37" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (1 samples, 0.02%)</title><rect x="1046.4" y="437" width="0.1" height="15.0" fill="rgb(209,200,2)" rx="2" ry="2" />
<text  x="1049.36" y="447.5" ></text>
</g>
<g >
<title>remote_function (1 samples, 0.02%)</title><rect x="251.7" y="549" width="0.2" height="15.0" fill="rgb(230,72,36)" rx="2" ry="2" />
<text  x="254.72" y="559.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (3 samples, 0.05%)</title><rect x="59.5" y="581" width="0.6" height="15.0" fill="rgb(228,129,15)" rx="2" ry="2" />
<text  x="62.51" y="591.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (10 samples, 0.16%)</title><rect x="925.5" y="565" width="1.9" height="15.0" fill="rgb(242,225,48)" rx="2" ry="2" />
<text  x="928.50" y="575.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.02%)</title><rect x="112.0" y="437" width="0.2" height="15.0" fill="rgb(229,75,21)" rx="2" ry="2" />
<text  x="115.04" y="447.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="1049.2" y="597" width="0.2" height="15.0" fill="rgb(245,132,15)" rx="2" ry="2" />
<text  x="1052.18" y="607.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="1048.8" y="549" width="0.2" height="15.0" fill="rgb(226,101,46)" rx="2" ry="2" />
<text  x="1051.81" y="559.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="1046.4" y="261" width="0.1" height="15.0" fill="rgb(239,140,33)" rx="2" ry="2" />
<text  x="1049.36" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="71.7" y="469" width="0.2" height="15.0" fill="rgb(223,223,52)" rx="2" ry="2" />
<text  x="74.75" y="479.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="234.2" y="565" width="0.2" height="15.0" fill="rgb(234,47,34)" rx="2" ry="2" />
<text  x="237.22" y="575.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="690.7" y="629" width="0.2" height="15.0" fill="rgb(237,131,24)" rx="2" ry="2" />
<text  x="693.74" y="639.5" ></text>
</g>
<g >
<title>begin_new_exec (1 samples, 0.02%)</title><rect x="239.5" y="565" width="0.2" height="15.0" fill="rgb(205,140,10)" rx="2" ry="2" />
<text  x="242.49" y="575.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (113 samples, 1.80%)</title><rect x="71.6" y="485" width="21.2" height="15.0" fill="rgb(237,31,39)" rx="2" ry="2" />
<text  x="74.56" y="495.5" >h..</text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="787.1" y="565" width="0.2" height="15.0" fill="rgb(251,83,15)" rx="2" ry="2" />
<text  x="790.13" y="575.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (5 samples, 0.08%)</title><rect x="270.5" y="677" width="1.0" height="15.0" fill="rgb(219,9,21)" rx="2" ry="2" />
<text  x="273.55" y="687.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.02%)</title><rect x="1038.8" y="581" width="0.2" height="15.0" fill="rgb(224,25,2)" rx="2" ry="2" />
<text  x="1041.83" y="591.5" ></text>
</g>
<g >
<title>filemap_read (2 samples, 0.03%)</title><rect x="613.7" y="325" width="0.4" height="15.0" fill="rgb(240,213,15)" rx="2" ry="2" />
<text  x="616.74" y="335.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="21.9" y="133" width="0.1" height="15.0" fill="rgb(212,153,13)" rx="2" ry="2" />
<text  x="24.86" y="143.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (116 samples, 1.85%)</title><rect x="71.2" y="501" width="21.8" height="15.0" fill="rgb(216,130,19)" rx="2" ry="2" />
<text  x="74.18" y="511.5" >_..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="439.2" y="501" width="0.2" height="15.0" fill="rgb(208,76,54)" rx="2" ry="2" />
<text  x="442.23" y="511.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (742 samples, 11.84%)</title><rect x="1050.3" y="709" width="139.7" height="15.0" fill="rgb(228,84,32)" rx="2" ry="2" />
<text  x="1053.31" y="719.5" >secondary_startup..</text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="233.8" y="565" width="0.2" height="15.0" fill="rgb(228,176,19)" rx="2" ry="2" />
<text  x="236.84" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="645.0" y="565" width="0.2" height="15.0" fill="rgb(228,120,38)" rx="2" ry="2" />
<text  x="647.99" y="575.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.03%)</title><rect x="762.8" y="565" width="0.4" height="15.0" fill="rgb(229,115,12)" rx="2" ry="2" />
<text  x="765.84" y="575.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="251.7" y="485" width="0.2" height="15.0" fill="rgb(216,170,5)" rx="2" ry="2" />
<text  x="254.72" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="453.5" y="469" width="0.4" height="15.0" fill="rgb(221,218,46)" rx="2" ry="2" />
<text  x="456.54" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (17 samples, 0.27%)</title><rect x="787.5" y="565" width="3.2" height="15.0" fill="rgb(223,107,34)" rx="2" ry="2" />
<text  x="790.50" y="575.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.02%)</title><rect x="239.5" y="725" width="0.2" height="15.0" fill="rgb(249,12,28)" rx="2" ry="2" />
<text  x="242.49" y="735.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (3 samples, 0.05%)</title><rect x="607.2" y="581" width="0.5" height="15.0" fill="rgb(213,35,19)" rx="2" ry="2" />
<text  x="610.15" y="591.5" ></text>
</g>
<g >
<title>&lt;std::sync::lazy_lock::LazyLock&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.05%)</title><rect x="487.0" y="597" width="0.6" height="15.0" fill="rgb(225,90,42)" rx="2" ry="2" />
<text  x="490.05" y="607.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="237.6" y="501" width="0.2" height="15.0" fill="rgb(222,59,33)" rx="2" ry="2" />
<text  x="240.60" y="511.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (6 samples, 0.10%)</title><rect x="686.4" y="645" width="1.1" height="15.0" fill="rgb(206,150,30)" rx="2" ry="2" />
<text  x="689.41" y="655.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.constprop.0.isra.0 (18 samples, 0.29%)</title><rect x="222.2" y="565" width="3.4" height="15.0" fill="rgb(207,41,43)" rx="2" ry="2" />
<text  x="225.17" y="575.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="109.6" y="421" width="0.2" height="15.0" fill="rgb(231,175,32)" rx="2" ry="2" />
<text  x="112.59" y="431.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.05%)</title><rect x="754.7" y="469" width="0.6" height="15.0" fill="rgb(209,22,54)" rx="2" ry="2" />
<text  x="757.75" y="479.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (31 samples, 0.49%)</title><rect x="607.7" y="597" width="5.9" height="15.0" fill="rgb(221,170,29)" rx="2" ry="2" />
<text  x="610.72" y="607.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.22%)</title><rect x="589.5" y="469" width="2.6" height="15.0" fill="rgb(214,95,34)" rx="2" ry="2" />
<text  x="592.46" y="479.5" ></text>
</g>
<g >
<title>cpu_latency_qos_limit (1 samples, 0.02%)</title><rect x="1170.4" y="533" width="0.2" height="15.0" fill="rgb(235,50,34)" rx="2" ry="2" />
<text  x="1173.42" y="543.5" ></text>
</g>
<g >
<title>record__pushfn (1 samples, 0.02%)</title><rect x="251.5" y="629" width="0.2" height="15.0" fill="rgb(225,195,40)" rx="2" ry="2" />
<text  x="254.53" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (3 samples, 0.05%)</title><rect x="664.4" y="533" width="0.5" height="15.0" fill="rgb(231,228,11)" rx="2" ry="2" />
<text  x="667.38" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.05%)</title><rect x="919.1" y="485" width="0.6" height="15.0" fill="rgb(251,113,12)" rx="2" ry="2" />
<text  x="922.10" y="495.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.02%)</title><rect x="58.4" y="597" width="0.2" height="15.0" fill="rgb(244,46,20)" rx="2" ry="2" />
<text  x="61.38" y="607.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="22.6" y="469" width="0.2" height="15.0" fill="rgb(253,129,34)" rx="2" ry="2" />
<text  x="25.61" y="479.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.02%)</title><rect x="238.0" y="581" width="0.2" height="15.0" fill="rgb(250,117,41)" rx="2" ry="2" />
<text  x="240.98" y="591.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (7 samples, 0.11%)</title><rect x="17.7" y="501" width="1.3" height="15.0" fill="rgb(245,201,41)" rx="2" ry="2" />
<text  x="20.72" y="511.5" ></text>
</g>
<g >
<title>_perf_ioctl (63 samples, 1.01%)</title><rect x="239.7" y="549" width="11.8" height="15.0" fill="rgb(243,156,28)" rx="2" ry="2" />
<text  x="242.67" y="559.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (1 samples, 0.02%)</title><rect x="225.0" y="533" width="0.2" height="15.0" fill="rgb(209,65,39)" rx="2" ry="2" />
<text  x="227.99" y="543.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (3 samples, 0.05%)</title><rect x="91.0" y="469" width="0.5" height="15.0" fill="rgb(247,174,26)" rx="2" ry="2" />
<text  x="93.95" y="479.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="1094.2" y="405" width="0.2" height="15.0" fill="rgb(236,23,46)" rx="2" ry="2" />
<text  x="1097.18" y="415.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="112.4" y="293" width="0.2" height="15.0" fill="rgb(219,44,48)" rx="2" ry="2" />
<text  x="115.41" y="303.5" ></text>
</g>
<g >
<title>schedule_idle (22 samples, 0.35%)</title><rect x="1183.2" y="581" width="4.2" height="15.0" fill="rgb(237,152,40)" rx="2" ry="2" />
<text  x="1186.22" y="591.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="739.3" y="517" width="0.2" height="15.0" fill="rgb(212,94,24)" rx="2" ry="2" />
<text  x="742.31" y="527.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i32&gt;::eq (2 samples, 0.03%)</title><rect x="604.3" y="453" width="0.4" height="15.0" fill="rgb(221,31,16)" rx="2" ry="2" />
<text  x="607.33" y="463.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.03%)</title><rect x="752.9" y="469" width="0.3" height="15.0" fill="rgb(235,36,37)" rx="2" ry="2" />
<text  x="755.87" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (122 samples, 1.95%)</title><rect x="463.7" y="597" width="23.0" height="15.0" fill="rgb(235,26,38)" rx="2" ry="2" />
<text  x="466.70" y="607.5" >&lt;..</text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.05%)</title><rect x="602.3" y="469" width="0.5" height="15.0" fill="rgb(226,127,24)" rx="2" ry="2" />
<text  x="605.26" y="479.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="1087.6" y="405" width="0.2" height="15.0" fill="rgb(239,157,14)" rx="2" ry="2" />
<text  x="1090.59" y="415.5" ></text>
</g>
<g >
<title>smp_call_function_single (63 samples, 1.01%)</title><rect x="239.7" y="485" width="11.8" height="15.0" fill="rgb(246,80,43)" rx="2" ry="2" />
<text  x="242.67" y="495.5" ></text>
</g>
<g >
<title>page_remove_rmap (2 samples, 0.03%)</title><rect x="369.9" y="309" width="0.4" height="15.0" fill="rgb(238,185,33)" rx="2" ry="2" />
<text  x="372.95" y="319.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (1 samples, 0.02%)</title><rect x="251.5" y="661" width="0.2" height="15.0" fill="rgb(239,209,45)" rx="2" ry="2" />
<text  x="254.53" y="671.5" ></text>
</g>
<g >
<title>udpv6_rcv (1 samples, 0.02%)</title><rect x="21.9" y="325" width="0.1" height="15.0" fill="rgb(244,149,13)" rx="2" ry="2" />
<text  x="24.86" y="335.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (3 samples, 0.05%)</title><rect x="487.0" y="549" width="0.6" height="15.0" fill="rgb(237,19,36)" rx="2" ry="2" />
<text  x="490.05" y="559.5" ></text>
</g>
<g >
<title>atomic_lock (2 samples, 0.03%)</title><rect x="1040.0" y="693" width="0.3" height="15.0" fill="rgb(227,65,35)" rx="2" ry="2" />
<text  x="1042.96" y="703.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="1186.6" y="549" width="0.2" height="15.0" fill="rgb(227,145,1)" rx="2" ry="2" />
<text  x="1189.61" y="559.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 1.04%)</title><rect x="927.8" y="565" width="12.2" height="15.0" fill="rgb(225,92,37)" rx="2" ry="2" />
<text  x="930.76" y="575.5" ></text>
</g>
<g >
<title>tcp_orphan_update (1 samples, 0.02%)</title><rect x="1107.5" y="421" width="0.2" height="15.0" fill="rgb(218,107,26)" rx="2" ry="2" />
<text  x="1110.54" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (19 samples, 0.30%)</title><rect x="1171.2" y="533" width="3.6" height="15.0" fill="rgb(231,215,14)" rx="2" ry="2" />
<text  x="1174.17" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (12 samples, 0.19%)</title><rect x="211.1" y="517" width="2.2" height="15.0" fill="rgb(209,67,30)" rx="2" ry="2" />
<text  x="214.06" y="527.5" ></text>
</g>
<g >
<title>[[heap]] (2 samples, 0.03%)</title><rect x="251.9" y="709" width="0.4" height="15.0" fill="rgb(222,222,7)" rx="2" ry="2" />
<text  x="254.91" y="719.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="92.3" y="437" width="0.2" height="15.0" fill="rgb(233,18,26)" rx="2" ry="2" />
<text  x="95.27" y="447.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (1 samples, 0.02%)</title><rect x="15.6" y="645" width="0.2" height="15.0" fill="rgb(254,106,40)" rx="2" ry="2" />
<text  x="18.65" y="655.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (3 samples, 0.05%)</title><rect x="663.3" y="533" width="0.5" height="15.0" fill="rgb(250,84,7)" rx="2" ry="2" />
<text  x="666.25" y="543.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (39 samples, 0.62%)</title><rect x="388.4" y="645" width="7.3" height="15.0" fill="rgb(246,113,51)" rx="2" ry="2" />
<text  x="391.40" y="655.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (84 samples, 1.34%)</title><rect x="1081.9" y="501" width="15.9" height="15.0" fill="rgb(212,14,7)" rx="2" ry="2" />
<text  x="1084.94" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="212.4" y="501" width="0.2" height="15.0" fill="rgb(243,151,45)" rx="2" ry="2" />
<text  x="215.38" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (8 samples, 0.13%)</title><rect x="597.0" y="517" width="1.5" height="15.0" fill="rgb(240,54,8)" rx="2" ry="2" />
<text  x="599.99" y="527.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="375.6" y="645" width="0.2" height="15.0" fill="rgb(215,101,20)" rx="2" ry="2" />
<text  x="378.60" y="655.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (45 samples, 0.72%)</title><rect x="886.5" y="517" width="8.5" height="15.0" fill="rgb(233,197,41)" rx="2" ry="2" />
<text  x="889.53" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (7 samples, 0.11%)</title><rect x="215.8" y="517" width="1.3" height="15.0" fill="rgb(225,212,16)" rx="2" ry="2" />
<text  x="218.77" y="527.5" ></text>
</g>
<g >
<title>nohz_balance_enter_idle (1 samples, 0.02%)</title><rect x="214.8" y="565" width="0.2" height="15.0" fill="rgb(217,195,12)" rx="2" ry="2" />
<text  x="217.82" y="575.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (7 samples, 0.11%)</title><rect x="1104.2" y="389" width="1.3" height="15.0" fill="rgb(211,45,35)" rx="2" ry="2" />
<text  x="1107.15" y="399.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.11%)</title><rect x="601.5" y="485" width="1.3" height="15.0" fill="rgb(234,192,45)" rx="2" ry="2" />
<text  x="604.51" y="495.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write_guard (2 samples, 0.03%)</title><rect x="613.2" y="581" width="0.4" height="15.0" fill="rgb(205,168,0)" rx="2" ry="2" />
<text  x="616.18" y="591.5" ></text>
</g>
<g >
<title>tick_program_event (3 samples, 0.05%)</title><rect x="216.5" y="501" width="0.6" height="15.0" fill="rgb(231,216,18)" rx="2" ry="2" />
<text  x="219.52" y="511.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1085.7" y="453" width="0.2" height="15.0" fill="rgb(224,76,49)" rx="2" ry="2" />
<text  x="1088.71" y="463.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (3 samples, 0.05%)</title><rect x="453.0" y="469" width="0.5" height="15.0" fill="rgb(217,175,41)" rx="2" ry="2" />
<text  x="455.97" y="479.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (835 samples, 13.32%)</title><rect x="60.1" y="581" width="157.2" height="15.0" fill="rgb(238,33,46)" rx="2" ry="2" />
<text  x="63.08" y="591.5" >cpuidle_idle_call</text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="10.0" y="565" width="0.2" height="15.0" fill="rgb(234,36,1)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.02%)</title><rect x="10.0" y="533" width="0.2" height="15.0" fill="rgb(254,178,30)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (2 samples, 0.03%)</title><rect x="761.5" y="485" width="0.4" height="15.0" fill="rgb(208,97,34)" rx="2" ry="2" />
<text  x="764.53" y="495.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.05%)</title><rect x="949.8" y="517" width="0.5" height="15.0" fill="rgb(217,138,45)" rx="2" ry="2" />
<text  x="952.78" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.13%)</title><rect x="583.6" y="485" width="1.5" height="15.0" fill="rgb(229,184,15)" rx="2" ry="2" />
<text  x="586.62" y="495.5" ></text>
</g>
<g >
<title>atomic_unlock (32 samples, 0.51%)</title><rect x="403.8" y="645" width="6.1" height="15.0" fill="rgb(251,155,38)" rx="2" ry="2" />
<text  x="406.84" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.32%)</title><rect x="641.0" y="533" width="3.8" height="15.0" fill="rgb(247,93,48)" rx="2" ry="2" />
<text  x="644.04" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.08%)</title><rect x="606.2" y="485" width="1.0" height="15.0" fill="rgb(233,106,36)" rx="2" ry="2" />
<text  x="609.21" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.10%)</title><rect x="893.9" y="485" width="1.1" height="15.0" fill="rgb(251,36,22)" rx="2" ry="2" />
<text  x="896.87" y="495.5" ></text>
</g>
<g >
<title>&lt;std::sync::lazy_lock::LazyLock&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="787.3" y="597" width="0.2" height="15.0" fill="rgb(246,168,26)" rx="2" ry="2" />
<text  x="790.32" y="607.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (3 samples, 0.05%)</title><rect x="369.2" y="453" width="0.6" height="15.0" fill="rgb(210,80,47)" rx="2" ry="2" />
<text  x="372.20" y="463.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (1 samples, 0.02%)</title><rect x="1186.8" y="549" width="0.2" height="15.0" fill="rgb(214,155,54)" rx="2" ry="2" />
<text  x="1189.80" y="559.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="1036.6" y="549" width="0.3" height="15.0" fill="rgb(253,96,46)" rx="2" ry="2" />
<text  x="1039.57" y="559.5" ></text>
</g>
<g >
<title>call_timer_fn (4 samples, 0.06%)</title><rect x="112.2" y="437" width="0.8" height="15.0" fill="rgb(241,73,0)" rx="2" ry="2" />
<text  x="115.22" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (5 samples, 0.08%)</title><rect x="599.8" y="421" width="1.0" height="15.0" fill="rgb(228,59,18)" rx="2" ry="2" />
<text  x="602.81" y="431.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (2 samples, 0.03%)</title><rect x="437.0" y="581" width="0.3" height="15.0" fill="rgb(205,34,24)" rx="2" ry="2" />
<text  x="439.97" y="591.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (958 samples, 15.28%)</title><rect x="58.9" y="693" width="180.4" height="15.0" fill="rgb(250,198,37)" rx="2" ry="2" />
<text  x="61.95" y="703.5" >x86_64_start_kernel</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (3 samples, 0.05%)</title><rect x="369.8" y="341" width="0.5" height="15.0" fill="rgb(245,127,31)" rx="2" ry="2" />
<text  x="372.76" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="1171.4" y="517" width="0.2" height="15.0" fill="rgb(214,197,14)" rx="2" ry="2" />
<text  x="1174.36" y="527.5" ></text>
</g>
<g >
<title>update_load_avg (2 samples, 0.03%)</title><rect x="224.6" y="517" width="0.4" height="15.0" fill="rgb(216,93,25)" rx="2" ry="2" />
<text  x="227.61" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="1082.1" y="485" width="0.4" height="15.0" fill="rgb(226,19,10)" rx="2" ry="2" />
<text  x="1085.13" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.35%)</title><rect x="811.2" y="533" width="4.2" height="15.0" fill="rgb(212,118,36)" rx="2" ry="2" />
<text  x="814.23" y="543.5" ></text>
</g>
<g >
<title>DynArrayGet (10 samples, 0.16%)</title><rect x="386.1" y="629" width="1.9" height="15.0" fill="rgb(224,164,41)" rx="2" ry="2" />
<text  x="389.14" y="639.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::ser::Serialize for dashmap::DashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="1046.4" y="389" width="0.1" height="15.0" fill="rgb(227,101,8)" rx="2" ry="2" />
<text  x="1049.36" y="399.5" ></text>
</g>
<g >
<title>arp_process (1 samples, 0.02%)</title><rect x="21.3" y="405" width="0.2" height="15.0" fill="rgb(220,93,41)" rx="2" ry="2" />
<text  x="24.30" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (45 samples, 0.72%)</title><rect x="886.5" y="549" width="8.5" height="15.0" fill="rgb(222,201,14)" rx="2" ry="2" />
<text  x="889.53" y="559.5" ></text>
</g>
<g >
<title>nohz_csd_func (2 samples, 0.03%)</title><rect x="1178.9" y="565" width="0.4" height="15.0" fill="rgb(239,216,3)" rx="2" ry="2" />
<text  x="1181.89" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (5 samples, 0.08%)</title><rect x="742.9" y="517" width="0.9" height="15.0" fill="rgb(236,80,18)" rx="2" ry="2" />
<text  x="745.89" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.02%)</title><rect x="787.3" y="485" width="0.2" height="15.0" fill="rgb(232,79,52)" rx="2" ry="2" />
<text  x="790.32" y="495.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.02%)</title><rect x="1049.6" y="405" width="0.1" height="15.0" fill="rgb(237,212,36)" rx="2" ry="2" />
<text  x="1052.56" y="415.5" ></text>
</g>
<g >
<title>rebalance_domains (22 samples, 0.35%)</title><rect x="1101.3" y="453" width="4.2" height="15.0" fill="rgb(248,182,37)" rx="2" ry="2" />
<text  x="1104.33" y="463.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.02%)</title><rect x="438.9" y="501" width="0.1" height="15.0" fill="rgb(239,208,50)" rx="2" ry="2" />
<text  x="441.85" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (77 samples, 1.23%)</title><rect x="772.6" y="581" width="14.5" height="15.0" fill="rgb(252,159,22)" rx="2" ry="2" />
<text  x="775.63" y="591.5" ></text>
</g>
<g >
<title>_perf_event_enable (63 samples, 1.01%)</title><rect x="239.7" y="517" width="11.8" height="15.0" fill="rgb(225,216,49)" rx="2" ry="2" />
<text  x="242.67" y="527.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1 samples, 0.02%)</title><rect x="616.9" y="549" width="0.2" height="15.0" fill="rgb(205,214,15)" rx="2" ry="2" />
<text  x="619.94" y="559.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="89.8" y="469" width="0.2" height="15.0" fill="rgb(248,105,14)" rx="2" ry="2" />
<text  x="92.82" y="479.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (3 samples, 0.05%)</title><rect x="213.7" y="549" width="0.6" height="15.0" fill="rgb(223,65,8)" rx="2" ry="2" />
<text  x="216.69" y="559.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="585.5" y="485" width="2.3" height="15.0" fill="rgb(247,41,21)" rx="2" ry="2" />
<text  x="588.50" y="495.5" ></text>
</g>
<g >
<title>run_timer_softirq (6 samples, 0.10%)</title><rect x="111.8" y="469" width="1.2" height="15.0" fill="rgb(239,115,20)" rx="2" ry="2" />
<text  x="114.85" y="479.5" ></text>
</g>
<g >
<title>memchr_inv (1 samples, 0.02%)</title><rect x="1049.7" y="629" width="0.2" height="15.0" fill="rgb(247,174,1)" rx="2" ry="2" />
<text  x="1052.75" y="639.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.11%)</title><rect x="909.3" y="453" width="1.3" height="15.0" fill="rgb(230,48,43)" rx="2" ry="2" />
<text  x="912.31" y="463.5" ></text>
</g>
<g >
<title>find_busiest_group (11 samples, 0.18%)</title><rect x="1103.4" y="421" width="2.1" height="15.0" fill="rgb(212,224,51)" rx="2" ry="2" />
<text  x="1106.40" y="431.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="1188.5" y="501" width="0.2" height="15.0" fill="rgb(226,173,40)" rx="2" ry="2" />
<text  x="1191.49" y="511.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.27%)</title><rect x="748.0" y="565" width="3.2" height="15.0" fill="rgb(251,13,17)" rx="2" ry="2" />
<text  x="750.97" y="575.5" ></text>
</g>
<g >
<title>quiet_vmstat (2 samples, 0.03%)</title><rect x="215.2" y="549" width="0.4" height="15.0" fill="rgb(242,68,14)" rx="2" ry="2" />
<text  x="218.20" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (45 samples, 0.72%)</title><rect x="886.5" y="533" width="8.5" height="15.0" fill="rgb(247,56,29)" rx="2" ry="2" />
<text  x="889.53" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="70.8" y="501" width="0.4" height="15.0" fill="rgb(209,159,33)" rx="2" ry="2" />
<text  x="73.81" y="511.5" ></text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.02%)</title><rect x="1049.9" y="597" width="0.2" height="15.0" fill="rgb(229,111,44)" rx="2" ry="2" />
<text  x="1052.94" y="607.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (133 samples, 2.12%)</title><rect x="1050.3" y="645" width="25.1" height="15.0" fill="rgb(249,101,32)" rx="2" ry="2" />
<text  x="1053.31" y="655.5" >c..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.10%)</title><rect x="910.6" y="517" width="1.2" height="15.0" fill="rgb(249,146,42)" rx="2" ry="2" />
<text  x="913.63" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (29 samples, 0.46%)</title><rect x="421.9" y="581" width="5.5" height="15.0" fill="rgb(245,59,26)" rx="2" ry="2" />
<text  x="424.91" y="591.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (3 samples, 0.05%)</title><rect x="359.8" y="677" width="0.5" height="15.0" fill="rgb(206,1,52)" rx="2" ry="2" />
<text  x="362.78" y="687.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.05%)</title><rect x="445.1" y="469" width="0.5" height="15.0" fill="rgb(241,214,31)" rx="2" ry="2" />
<text  x="448.06" y="479.5" ></text>
</g>
<g >
<title>timerqueue_add (2 samples, 0.03%)</title><rect x="1094.6" y="453" width="0.3" height="15.0" fill="rgb(205,92,6)" rx="2" ry="2" />
<text  x="1097.55" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.16%)</title><rect x="367.1" y="549" width="1.9" height="15.0" fill="rgb(214,67,10)" rx="2" ry="2" />
<text  x="370.13" y="559.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.02%)</title><rect x="1046.4" y="613" width="0.1" height="15.0" fill="rgb(233,44,32)" rx="2" ry="2" />
<text  x="1049.36" y="623.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="229.7" y="501" width="0.2" height="15.0" fill="rgb(246,83,31)" rx="2" ry="2" />
<text  x="232.70" y="511.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.02%)</title><rect x="92.6" y="453" width="0.2" height="15.0" fill="rgb(228,204,30)" rx="2" ry="2" />
<text  x="95.65" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (32 samples, 0.51%)</title><rect x="499.3" y="581" width="6.0" height="15.0" fill="rgb(225,218,12)" rx="2" ry="2" />
<text  x="502.28" y="591.5" ></text>
</g>
<g >
<title>kthread (6 samples, 0.10%)</title><rect x="1049.2" y="693" width="1.1" height="15.0" fill="rgb(251,118,7)" rx="2" ry="2" />
<text  x="1052.18" y="703.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (1 samples, 0.02%)</title><rect x="232.7" y="581" width="0.2" height="15.0" fill="rgb(222,14,40)" rx="2" ry="2" />
<text  x="235.71" y="591.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="87.2" y="373" width="0.2" height="15.0" fill="rgb(213,57,11)" rx="2" ry="2" />
<text  x="90.19" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.34%)</title><rect x="911.8" y="469" width="3.9" height="15.0" fill="rgb(240,182,7)" rx="2" ry="2" />
<text  x="914.75" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (57 samples, 0.91%)</title><rect x="899.9" y="485" width="10.7" height="15.0" fill="rgb(206,229,45)" rx="2" ry="2" />
<text  x="902.89" y="495.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="1035.6" y="565" width="0.2" height="15.0" fill="rgb(251,9,36)" rx="2" ry="2" />
<text  x="1038.63" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (3 samples, 0.05%)</title><rect x="664.4" y="517" width="0.5" height="15.0" fill="rgb(223,116,21)" rx="2" ry="2" />
<text  x="667.38" y="527.5" ></text>
</g>
<g >
<title>dispatcher (1,351 samples, 21.55%)</title><rect x="416.6" y="629" width="254.4" height="15.0" fill="rgb(253,206,40)" rx="2" ry="2" />
<text  x="419.64" y="639.5" >dispatcher</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="251.5" y="565" width="0.2" height="15.0" fill="rgb(252,53,31)" rx="2" ry="2" />
<text  x="254.53" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (38 samples, 0.61%)</title><rect x="578.0" y="533" width="7.1" height="15.0" fill="rgb(207,61,49)" rx="2" ry="2" />
<text  x="580.97" y="543.5" ></text>
</g>
<g >
<title>rcu_dynticks_inc (1 samples, 0.02%)</title><rect x="1161.6" y="501" width="0.2" height="15.0" fill="rgb(253,50,14)" rx="2" ry="2" />
<text  x="1164.57" y="511.5" ></text>
</g>
<g >
<title>exc_page_fault (9 samples, 0.14%)</title><rect x="1035.4" y="677" width="1.7" height="15.0" fill="rgb(233,21,49)" rx="2" ry="2" />
<text  x="1038.44" y="687.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (10 samples, 0.16%)</title><rect x="952.4" y="549" width="1.9" height="15.0" fill="rgb(210,135,51)" rx="2" ry="2" />
<text  x="955.42" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (29 samples, 0.46%)</title><rect x="607.7" y="565" width="5.5" height="15.0" fill="rgb(216,43,10)" rx="2" ry="2" />
<text  x="610.72" y="575.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2 samples, 0.03%)</title><rect x="224.2" y="517" width="0.4" height="15.0" fill="rgb(214,58,35)" rx="2" ry="2" />
<text  x="227.24" y="527.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (6 samples, 0.10%)</title><rect x="111.8" y="453" width="1.2" height="15.0" fill="rgb(218,161,2)" rx="2" ry="2" />
<text  x="114.85" y="463.5" ></text>
</g>
<g >
<title>cpuidle_enter (216 samples, 3.45%)</title><rect x="17.5" y="629" width="40.7" height="15.0" fill="rgb(238,16,18)" rx="2" ry="2" />
<text  x="20.53" y="639.5" >cpu..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.03%)</title><rect x="752.5" y="469" width="0.4" height="15.0" fill="rgb(234,135,51)" rx="2" ry="2" />
<text  x="755.49" y="479.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (5 samples, 0.08%)</title><rect x="21.3" y="453" width="0.9" height="15.0" fill="rgb(233,220,3)" rx="2" ry="2" />
<text  x="24.30" y="463.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.02%)</title><rect x="1046.4" y="293" width="0.1" height="15.0" fill="rgb(251,7,52)" rx="2" ry="2" />
<text  x="1049.36" y="303.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (2 samples, 0.03%)</title><rect x="86.6" y="341" width="0.4" height="15.0" fill="rgb(214,229,5)" rx="2" ry="2" />
<text  x="89.62" y="351.5" ></text>
</g>
<g >
<title>llist_reverse_order (1 samples, 0.02%)</title><rect x="221.4" y="565" width="0.2" height="15.0" fill="rgb(244,179,46)" rx="2" ry="2" />
<text  x="224.41" y="575.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="1181.7" y="533" width="0.2" height="15.0" fill="rgb(209,195,7)" rx="2" ry="2" />
<text  x="1184.72" y="543.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.02%)</title><rect x="202.4" y="549" width="0.2" height="15.0" fill="rgb(247,26,28)" rx="2" ry="2" />
<text  x="205.40" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (66 samples, 1.05%)</title><rect x="564.2" y="501" width="12.5" height="15.0" fill="rgb(214,72,20)" rx="2" ry="2" />
<text  x="567.23" y="511.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (5 samples, 0.08%)</title><rect x="760.6" y="469" width="0.9" height="15.0" fill="rgb(250,48,22)" rx="2" ry="2" />
<text  x="763.58" y="479.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="1046.4" y="485" width="0.1" height="15.0" fill="rgb(233,140,46)" rx="2" ry="2" />
<text  x="1049.36" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (267 samples, 4.26%)</title><rect x="817.4" y="485" width="50.3" height="15.0" fill="rgb(230,74,24)" rx="2" ry="2" />
<text  x="820.44" y="495.5" >core:..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="212.8" y="469" width="0.3" height="15.0" fill="rgb(214,74,3)" rx="2" ry="2" />
<text  x="215.75" y="479.5" ></text>
</g>
<g >
<title>tty_ldisc_receive_buf (1 samples, 0.02%)</title><rect x="1049.6" y="613" width="0.1" height="15.0" fill="rgb(239,53,29)" rx="2" ry="2" />
<text  x="1052.56" y="623.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="228.9" y="469" width="0.2" height="15.0" fill="rgb(220,62,17)" rx="2" ry="2" />
<text  x="231.94" y="479.5" ></text>
</g>
<g >
<title>[sel_ldr] (1 samples, 0.02%)</title><rect x="974.4" y="677" width="0.2" height="15.0" fill="rgb(233,32,9)" rx="2" ry="2" />
<text  x="977.44" y="687.5" ></text>
</g>
<g >
<title>insert_work (2 samples, 0.03%)</title><rect x="112.2" y="389" width="0.4" height="15.0" fill="rgb(247,67,49)" rx="2" ry="2" />
<text  x="115.22" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (2 samples, 0.03%)</title><rect x="660.2" y="565" width="0.4" height="15.0" fill="rgb(228,120,6)" rx="2" ry="2" />
<text  x="663.24" y="575.5" ></text>
</g>
<g >
<title>ovl_read_iter (2 samples, 0.03%)</title><rect x="613.7" y="421" width="0.4" height="15.0" fill="rgb(247,51,39)" rx="2" ry="2" />
<text  x="616.74" y="431.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (1 samples, 0.02%)</title><rect x="259.3" y="693" width="0.1" height="15.0" fill="rgb(220,5,42)" rx="2" ry="2" />
<text  x="262.25" y="703.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (5 samples, 0.08%)</title><rect x="949.4" y="533" width="0.9" height="15.0" fill="rgb(228,28,9)" rx="2" ry="2" />
<text  x="952.41" y="543.5" ></text>
</g>
<g >
<title>down_write_killable (7 samples, 0.11%)</title><rect x="367.7" y="485" width="1.3" height="15.0" fill="rgb(244,160,24)" rx="2" ry="2" />
<text  x="370.69" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.08%)</title><rect x="746.1" y="501" width="0.9" height="15.0" fill="rgb(225,83,47)" rx="2" ry="2" />
<text  x="749.09" y="511.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1181.7" y="485" width="0.2" height="15.0" fill="rgb(234,75,11)" rx="2" ry="2" />
<text  x="1184.72" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::consumer::Consumer&lt;u8&gt;&gt;&gt; (122 samples, 1.95%)</title><rect x="617.1" y="581" width="23.0" height="15.0" fill="rgb(217,12,15)" rx="2" ry="2" />
<text  x="620.13" y="591.5" >c..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (3 samples, 0.05%)</title><rect x="369.8" y="581" width="0.5" height="15.0" fill="rgb(241,21,48)" rx="2" ry="2" />
<text  x="372.76" y="591.5" ></text>
</g>
<g >
<title>__next_timer_interrupt (1 samples, 0.02%)</title><rect x="23.7" y="501" width="0.2" height="15.0" fill="rgb(251,164,0)" rx="2" ry="2" />
<text  x="26.74" y="511.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (21 samples, 0.34%)</title><rect x="218.2" y="581" width="4.0" height="15.0" fill="rgb(226,38,42)" rx="2" ry="2" />
<text  x="221.21" y="591.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 0.29%)</title><rect x="744.4" y="549" width="3.4" height="15.0" fill="rgb(219,160,31)" rx="2" ry="2" />
<text  x="747.39" y="559.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="23.0" y="501" width="0.2" height="15.0" fill="rgb(247,14,30)" rx="2" ry="2" />
<text  x="25.99" y="511.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (40 samples, 0.64%)</title><rect x="1100.2" y="485" width="7.5" height="15.0" fill="rgb(219,141,52)" rx="2" ry="2" />
<text  x="1103.20" y="495.5" ></text>
</g>
<g >
<title>irq_exit_rcu (43 samples, 0.69%)</title><rect x="1100.0" y="501" width="8.1" height="15.0" fill="rgb(251,99,1)" rx="2" ry="2" />
<text  x="1103.01" y="511.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.13%)</title><rect x="917.0" y="485" width="1.5" height="15.0" fill="rgb(239,1,17)" rx="2" ry="2" />
<text  x="920.03" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (3 samples, 0.05%)</title><rect x="369.8" y="597" width="0.5" height="15.0" fill="rgb(209,166,47)" rx="2" ry="2" />
<text  x="372.76" y="607.5" ></text>
</g>
<g >
<title>lind_write (1,407 samples, 22.45%)</title><rect x="709.2" y="645" width="264.9" height="15.0" fill="rgb(253,90,44)" rx="2" ry="2" />
<text  x="712.19" y="655.5" >lind_write</text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="19.0" y="405" width="0.2" height="15.0" fill="rgb(220,220,41)" rx="2" ry="2" />
<text  x="22.04" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (1 samples, 0.02%)</title><rect x="949.2" y="533" width="0.2" height="15.0" fill="rgb(213,82,30)" rx="2" ry="2" />
<text  x="952.22" y="543.5" ></text>
</g>
<g >
<title>page_remove_file_rmap (1 samples, 0.02%)</title><rect x="367.5" y="357" width="0.2" height="15.0" fill="rgb(222,227,29)" rx="2" ry="2" />
<text  x="370.50" y="367.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (1 samples, 0.02%)</title><rect x="19.2" y="517" width="0.2" height="15.0" fill="rgb(233,209,16)" rx="2" ry="2" />
<text  x="22.22" y="527.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.06%)</title><rect x="920.0" y="469" width="0.8" height="15.0" fill="rgb(242,146,5)" rx="2" ry="2" />
<text  x="923.04" y="479.5" ></text>
</g>
<g >
<title>irq_enter_rcu (14 samples, 0.22%)</title><rect x="93.0" y="501" width="2.7" height="15.0" fill="rgb(216,155,45)" rx="2" ry="2" />
<text  x="96.02" y="511.5" ></text>
</g>
<g >
<title>[sel_ldr] (3,709 samples, 59.17%)</title><rect x="276.4" y="709" width="698.2" height="15.0" fill="rgb(252,118,53)" rx="2" ry="2" />
<text  x="279.38" y="719.5" >[sel_ldr]</text>
</g>
<g >
<title>NaClSelLdrMain (1 samples, 0.02%)</title><rect x="1046.4" y="645" width="0.1" height="15.0" fill="rgb(241,149,49)" rx="2" ry="2" />
<text  x="1049.36" y="655.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.06%)</title><rect x="446.4" y="469" width="0.7" height="15.0" fill="rgb(244,121,15)" rx="2" ry="2" />
<text  x="449.38" y="479.5" ></text>
</g>
<g >
<title>update_process_times (6 samples, 0.10%)</title><rect x="87.6" y="437" width="1.1" height="15.0" fill="rgb(229,105,48)" rx="2" ry="2" />
<text  x="90.56" y="447.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (57 samples, 0.91%)</title><rect x="899.9" y="517" width="10.7" height="15.0" fill="rgb(229,16,27)" rx="2" ry="2" />
<text  x="902.89" y="527.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="787.3" y="533" width="0.2" height="15.0" fill="rgb(233,47,42)" rx="2" ry="2" />
<text  x="790.32" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.14%)</title><rect x="595.3" y="453" width="1.7" height="15.0" fill="rgb(227,70,44)" rx="2" ry="2" />
<text  x="598.29" y="463.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Seek&gt;::seek (1 samples, 0.02%)</title><rect x="614.1" y="581" width="0.2" height="15.0" fill="rgb(234,33,5)" rx="2" ry="2" />
<text  x="617.12" y="591.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="10.0" y="581" width="0.2" height="15.0" fill="rgb(229,33,40)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="1106.6" y="421" width="0.2" height="15.0" fill="rgb(231,132,26)" rx="2" ry="2" />
<text  x="1109.60" y="431.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (2 samples, 0.03%)</title><rect x="670.6" y="549" width="0.4" height="15.0" fill="rgb(225,15,33)" rx="2" ry="2" />
<text  x="673.60" y="559.5" ></text>
</g>
<g >
<title>NaClSysMunmap (3 samples, 0.05%)</title><rect x="369.8" y="661" width="0.5" height="15.0" fill="rgb(211,120,9)" rx="2" ry="2" />
<text  x="372.76" y="671.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (3 samples, 0.05%)</title><rect x="1092.5" y="341" width="0.5" height="15.0" fill="rgb(236,122,46)" rx="2" ry="2" />
<text  x="1095.48" y="351.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (2 samples, 0.03%)</title><rect x="1075.5" y="581" width="0.4" height="15.0" fill="rgb(231,141,53)" rx="2" ry="2" />
<text  x="1078.54" y="591.5" ></text>
</g>
<g >
<title>ip6_sublist_rcv (2 samples, 0.03%)</title><rect x="21.9" y="421" width="0.3" height="15.0" fill="rgb(232,60,49)" rx="2" ry="2" />
<text  x="24.86" y="431.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="1049.9" y="613" width="0.2" height="15.0" fill="rgb(229,198,35)" rx="2" ry="2" />
<text  x="1052.94" y="623.5" ></text>
</g>
<g >
<title>pm_qos_read_value (2 samples, 0.03%)</title><rect x="208.6" y="533" width="0.4" height="15.0" fill="rgb(230,0,3)" rx="2" ry="2" />
<text  x="211.61" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.06%)</title><rect x="23.2" y="549" width="0.7" height="15.0" fill="rgb(245,33,40)" rx="2" ry="2" />
<text  x="26.18" y="559.5" ></text>
</g>
<g >
<title>timerqueue_iterate_next (1 samples, 0.02%)</title><rect x="1173.1" y="501" width="0.1" height="15.0" fill="rgb(210,52,16)" rx="2" ry="2" />
<text  x="1176.06" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.05%)</title><rect x="758.5" y="453" width="0.6" height="15.0" fill="rgb(221,123,44)" rx="2" ry="2" />
<text  x="761.51" y="463.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (11 samples, 0.18%)</title><rect x="367.1" y="677" width="2.1" height="15.0" fill="rgb(207,117,41)" rx="2" ry="2" />
<text  x="370.13" y="687.5" ></text>
</g>
<g >
<title>core::mem::drop (17 samples, 0.27%)</title><rect x="787.5" y="597" width="3.2" height="15.0" fill="rgb(252,226,22)" rx="2" ry="2" />
<text  x="790.50" y="607.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="1093.0" y="373" width="0.2" height="15.0" fill="rgb(237,149,24)" rx="2" ry="2" />
<text  x="1096.05" y="383.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (3 samples, 0.05%)</title><rect x="1085.1" y="453" width="0.6" height="15.0" fill="rgb(237,222,38)" rx="2" ry="2" />
<text  x="1088.14" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="10.0" y="677" width="0.2" height="15.0" fill="rgb(207,216,19)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>pick_next_task (1 samples, 0.02%)</title><rect x="1050.1" y="629" width="0.2" height="15.0" fill="rgb(229,66,39)" rx="2" ry="2" />
<text  x="1053.12" y="639.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.02%)</title><rect x="1179.6" y="549" width="0.2" height="15.0" fill="rgb(212,102,11)" rx="2" ry="2" />
<text  x="1182.65" y="559.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (2 samples, 0.03%)</title><rect x="270.5" y="629" width="0.4" height="15.0" fill="rgb(246,221,43)" rx="2" ry="2" />
<text  x="273.55" y="639.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (2 samples, 0.03%)</title><rect x="1107.0" y="453" width="0.4" height="15.0" fill="rgb(213,181,34)" rx="2" ry="2" />
<text  x="1109.98" y="463.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (369 samples, 5.89%)</title><rect x="816.5" y="533" width="69.5" height="15.0" fill="rgb(248,198,1)" rx="2" ry="2" />
<text  x="819.50" y="543.5" >&lt;dashma..</text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (6 samples, 0.10%)</title><rect x="1040.9" y="629" width="1.1" height="15.0" fill="rgb(245,167,1)" rx="2" ry="2" />
<text  x="1043.90" y="639.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (10 samples, 0.16%)</title><rect x="925.5" y="549" width="1.9" height="15.0" fill="rgb(219,29,2)" rx="2" ry="2" />
<text  x="928.50" y="559.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.02%)</title><rect x="21.9" y="69" width="0.1" height="15.0" fill="rgb(240,67,2)" rx="2" ry="2" />
<text  x="24.86" y="79.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (3 samples, 0.05%)</title><rect x="23.2" y="469" width="0.5" height="15.0" fill="rgb(208,115,23)" rx="2" ry="2" />
<text  x="26.18" y="479.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (1,602 samples, 25.56%)</title><rect x="370.5" y="677" width="301.6" height="15.0" fill="rgb(254,42,47)" rx="2" ry="2" />
<text  x="373.51" y="687.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (23 samples, 0.37%)</title><rect x="739.5" y="565" width="4.3" height="15.0" fill="rgb(227,156,27)" rx="2" ry="2" />
<text  x="742.50" y="575.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (958 samples, 15.28%)</title><rect x="58.9" y="677" width="180.4" height="15.0" fill="rgb(249,49,22)" rx="2" ry="2" />
<text  x="61.95" y="687.5" >x86_64_start_reservations</text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.03%)</title><rect x="948.3" y="533" width="0.4" height="15.0" fill="rgb(245,215,22)" rx="2" ry="2" />
<text  x="951.28" y="543.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (2 samples, 0.03%)</title><rect x="759.1" y="453" width="0.4" height="15.0" fill="rgb(211,229,48)" rx="2" ry="2" />
<text  x="762.08" y="463.5" ></text>
</g>
<g >
<title>load_balance (2 samples, 0.03%)</title><rect x="97.5" y="453" width="0.4" height="15.0" fill="rgb(209,115,36)" rx="2" ry="2" />
<text  x="100.54" y="463.5" ></text>
</g>
<g >
<title>lapic_next_deadline (2 samples, 0.03%)</title><rect x="235.5" y="469" width="0.4" height="15.0" fill="rgb(234,178,48)" rx="2" ry="2" />
<text  x="238.53" y="479.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (130 samples, 2.07%)</title><rect x="1050.7" y="597" width="24.5" height="15.0" fill="rgb(207,154,36)" rx="2" ry="2" />
<text  x="1053.69" y="607.5" >m..</text>
</g>
<g >
<title>unmap_region (3 samples, 0.05%)</title><rect x="369.8" y="405" width="0.5" height="15.0" fill="rgb(216,25,39)" rx="2" ry="2" />
<text  x="372.76" y="415.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (13 samples, 0.21%)</title><rect x="585.5" y="549" width="2.5" height="15.0" fill="rgb(227,124,11)" rx="2" ry="2" />
<text  x="588.50" y="559.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (1 samples, 0.02%)</title><rect x="1046.4" y="469" width="0.1" height="15.0" fill="rgb(209,167,37)" rx="2" ry="2" />
<text  x="1049.36" y="479.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.03%)</title><rect x="233.1" y="533" width="0.4" height="15.0" fill="rgb(219,55,43)" rx="2" ry="2" />
<text  x="236.09" y="543.5" ></text>
</g>
<g >
<title>error_entry (4 samples, 0.06%)</title><rect x="200.3" y="549" width="0.8" height="15.0" fill="rgb(232,166,27)" rx="2" ry="2" />
<text  x="203.33" y="559.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (8 samples, 0.13%)</title><rect x="1040.5" y="693" width="1.5" height="15.0" fill="rgb(240,22,18)" rx="2" ry="2" />
<text  x="1043.52" y="703.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="19.0" y="421" width="0.2" height="15.0" fill="rgb(242,103,49)" rx="2" ry="2" />
<text  x="22.04" y="431.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (3 samples, 0.05%)</title><rect x="367.1" y="405" width="0.6" height="15.0" fill="rgb(211,150,40)" rx="2" ry="2" />
<text  x="370.13" y="415.5" ></text>
</g>
<g >
<title>__udp6_lib_mcast_deliver (1 samples, 0.02%)</title><rect x="21.9" y="293" width="0.1" height="15.0" fill="rgb(231,141,27)" rx="2" ry="2" />
<text  x="24.86" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="750.4" y="469" width="0.2" height="15.0" fill="rgb(215,157,8)" rx="2" ry="2" />
<text  x="753.42" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="71.4" y="485" width="0.2" height="15.0" fill="rgb(212,150,36)" rx="2" ry="2" />
<text  x="74.37" y="495.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="97.2" y="469" width="0.2" height="15.0" fill="rgb(210,222,18)" rx="2" ry="2" />
<text  x="100.16" y="479.5" ></text>
</g>
<g >
<title>NaClSysWrite (2 samples, 0.03%)</title><rect x="672.1" y="677" width="0.4" height="15.0" fill="rgb(245,17,46)" rx="2" ry="2" />
<text  x="675.10" y="687.5" ></text>
</g>
<g >
<title>sched_clock (5 samples, 0.08%)</title><rect x="1162.3" y="517" width="1.0" height="15.0" fill="rgb(219,77,25)" rx="2" ry="2" />
<text  x="1165.33" y="527.5" ></text>
</g>
<g >
<title>set_next_task_idle (4 samples, 0.06%)</title><rect x="1185.5" y="517" width="0.7" height="15.0" fill="rgb(246,124,32)" rx="2" ry="2" />
<text  x="1188.48" y="527.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (33 samples, 0.53%)</title><rect x="315.0" y="661" width="6.2" height="15.0" fill="rgb(238,137,18)" rx="2" ry="2" />
<text  x="317.98" y="671.5" ></text>
</g>
<g >
<title>[docker-init] (1 samples, 0.02%)</title><rect x="10.0" y="709" width="0.2" height="15.0" fill="rgb(224,99,30)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (9 samples, 0.14%)</title><rect x="1035.4" y="693" width="1.7" height="15.0" fill="rgb(245,82,53)" rx="2" ry="2" />
<text  x="1038.44" y="703.5" ></text>
</g>
<g >
<title>newidle_balance (11 samples, 0.18%)</title><rect x="227.1" y="517" width="2.0" height="15.0" fill="rgb(218,129,39)" rx="2" ry="2" />
<text  x="230.06" y="527.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.02%)</title><rect x="1170.8" y="533" width="0.2" height="15.0" fill="rgb(241,121,51)" rx="2" ry="2" />
<text  x="1173.80" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (77 samples, 1.23%)</title><rect x="772.6" y="565" width="14.5" height="15.0" fill="rgb(216,208,53)" rx="2" ry="2" />
<text  x="775.63" y="575.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="225.6" y="581" width="0.1" height="15.0" fill="rgb(231,85,34)" rx="2" ry="2" />
<text  x="228.56" y="591.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (3 samples, 0.05%)</title><rect x="232.9" y="565" width="0.6" height="15.0" fill="rgb(244,30,22)" rx="2" ry="2" />
<text  x="235.90" y="575.5" ></text>
</g>
<g >
<title>irq_work_tick (5 samples, 0.08%)</title><rect x="79.3" y="405" width="0.9" height="15.0" fill="rgb(211,56,42)" rx="2" ry="2" />
<text  x="82.28" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (30 samples, 0.48%)</title><rect x="654.6" y="533" width="5.6" height="15.0" fill="rgb(253,133,2)" rx="2" ry="2" />
<text  x="657.59" y="543.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (1 samples, 0.02%)</title><rect x="86.4" y="357" width="0.2" height="15.0" fill="rgb(238,56,25)" rx="2" ry="2" />
<text  x="89.43" y="367.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="17.0" y="645" width="0.2" height="15.0" fill="rgb(240,78,25)" rx="2" ry="2" />
<text  x="19.97" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (1 samples, 0.02%)</title><rect x="949.2" y="517" width="0.2" height="15.0" fill="rgb(249,84,39)" rx="2" ry="2" />
<text  x="952.22" y="527.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (17 samples, 0.27%)</title><rect x="756.4" y="517" width="3.2" height="15.0" fill="rgb(209,162,13)" rx="2" ry="2" />
<text  x="759.44" y="527.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.24%)</title><rect x="448.8" y="501" width="2.9" height="15.0" fill="rgb(241,3,27)" rx="2" ry="2" />
<text  x="451.83" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="600.4" y="405" width="0.2" height="15.0" fill="rgb(246,27,10)" rx="2" ry="2" />
<text  x="603.38" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (54 samples, 0.86%)</title><rect x="963.3" y="533" width="10.2" height="15.0" fill="rgb(223,79,28)" rx="2" ry="2" />
<text  x="966.34" y="543.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.02%)</title><rect x="251.7" y="565" width="0.2" height="15.0" fill="rgb(210,97,42)" rx="2" ry="2" />
<text  x="254.72" y="575.5" ></text>
</g>
<g >
<title>error_entry (2 samples, 0.03%)</title><rect x="1163.3" y="549" width="0.3" height="15.0" fill="rgb(249,194,41)" rx="2" ry="2" />
<text  x="1166.27" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (2 samples, 0.03%)</title><rect x="640.7" y="581" width="0.3" height="15.0" fill="rgb(219,81,44)" rx="2" ry="2" />
<text  x="643.66" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (33 samples, 0.53%)</title><rect x="493.1" y="549" width="6.2" height="15.0" fill="rgb(252,50,42)" rx="2" ry="2" />
<text  x="496.07" y="559.5" ></text>
</g>
<g >
<title>cpuidle_select (3 samples, 0.05%)</title><rect x="58.2" y="629" width="0.6" height="15.0" fill="rgb(214,13,44)" rx="2" ry="2" />
<text  x="61.19" y="639.5" ></text>
</g>
<g >
<title>clockevents_program_event (3 samples, 0.05%)</title><rect x="216.5" y="485" width="0.6" height="15.0" fill="rgb(238,206,34)" rx="2" ry="2" />
<text  x="219.52" y="495.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (3 samples, 0.05%)</title><rect x="1039.4" y="693" width="0.6" height="15.0" fill="rgb(251,166,12)" rx="2" ry="2" />
<text  x="1042.39" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="251.7" y="709" width="0.2" height="15.0" fill="rgb(252,18,27)" rx="2" ry="2" />
<text  x="254.72" y="719.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="23.7" y="517" width="0.2" height="15.0" fill="rgb(232,90,31)" rx="2" ry="2" />
<text  x="26.74" y="527.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (2 samples, 0.03%)</title><rect x="112.2" y="421" width="0.4" height="15.0" fill="rgb(228,176,16)" rx="2" ry="2" />
<text  x="115.22" y="431.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (2 samples, 0.03%)</title><rect x="21.5" y="421" width="0.4" height="15.0" fill="rgb(209,175,18)" rx="2" ry="2" />
<text  x="24.48" y="431.5" ></text>
</g>
<g >
<title>load_balance (40 samples, 0.64%)</title><rect x="99.8" y="437" width="7.5" height="15.0" fill="rgb(233,10,7)" rx="2" ry="2" />
<text  x="102.80" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.11%)</title><rect x="888.0" y="485" width="1.4" height="15.0" fill="rgb(230,162,38)" rx="2" ry="2" />
<text  x="891.03" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_create1 (1 samples, 0.02%)</title><rect x="15.6" y="677" width="0.2" height="15.0" fill="rgb(211,166,6)" rx="2" ry="2" />
<text  x="18.65" y="687.5" ></text>
</g>
<g >
<title>trigger_load_balance (3 samples, 0.05%)</title><rect x="1093.2" y="389" width="0.6" height="15.0" fill="rgb(223,191,4)" rx="2" ry="2" />
<text  x="1096.24" y="399.5" ></text>
</g>
<g >
<title>menu_reflect (3 samples, 0.05%)</title><rect x="214.3" y="565" width="0.5" height="15.0" fill="rgb(245,150,42)" rx="2" ry="2" />
<text  x="217.26" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.06%)</title><rect x="1042.8" y="613" width="0.7" height="15.0" fill="rgb(253,110,40)" rx="2" ry="2" />
<text  x="1045.78" y="623.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="110.3" y="389" width="0.4" height="15.0" fill="rgb(222,29,42)" rx="2" ry="2" />
<text  x="113.34" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (18 samples, 0.29%)</title><rect x="921.2" y="565" width="3.4" height="15.0" fill="rgb(206,196,35)" rx="2" ry="2" />
<text  x="924.17" y="575.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (2 samples, 0.03%)</title><rect x="238.7" y="597" width="0.4" height="15.0" fill="rgb(244,50,50)" rx="2" ry="2" />
<text  x="241.73" y="607.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="87.4" y="341" width="0.2" height="15.0" fill="rgb(207,96,4)" rx="2" ry="2" />
<text  x="90.37" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="97.2" y="437" width="0.2" height="15.0" fill="rgb(229,32,23)" rx="2" ry="2" />
<text  x="100.16" y="447.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.02%)</title><rect x="1165.3" y="565" width="0.2" height="15.0" fill="rgb(245,31,1)" rx="2" ry="2" />
<text  x="1168.34" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (1 samples, 0.02%)</title><rect x="264.1" y="661" width="0.2" height="15.0" fill="rgb(222,82,23)" rx="2" ry="2" />
<text  x="267.15" y="671.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="21.9" y="197" width="0.1" height="15.0" fill="rgb(251,164,51)" rx="2" ry="2" />
<text  x="24.86" y="207.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (3 samples, 0.05%)</title><rect x="1086.8" y="421" width="0.6" height="15.0" fill="rgb(230,135,44)" rx="2" ry="2" />
<text  x="1089.83" y="431.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (3 samples, 0.05%)</title><rect x="364.5" y="677" width="0.6" height="15.0" fill="rgb(235,56,0)" rx="2" ry="2" />
<text  x="367.49" y="687.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (7 samples, 0.11%)</title><rect x="207.1" y="533" width="1.3" height="15.0" fill="rgb(219,161,12)" rx="2" ry="2" />
<text  x="210.11" y="543.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="232.3" y="501" width="0.2" height="15.0" fill="rgb(249,141,54)" rx="2" ry="2" />
<text  x="235.33" y="511.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (23 samples, 0.37%)</title><rect x="911.8" y="501" width="4.3" height="15.0" fill="rgb(242,7,31)" rx="2" ry="2" />
<text  x="914.75" y="511.5" ></text>
</g>
<g >
<title>perf_event_task_tick (22 samples, 0.35%)</title><rect x="1089.1" y="389" width="4.1" height="15.0" fill="rgb(227,146,36)" rx="2" ry="2" />
<text  x="1092.09" y="399.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (8 samples, 0.13%)</title><rect x="1177.2" y="565" width="1.5" height="15.0" fill="rgb(245,72,34)" rx="2" ry="2" />
<text  x="1180.20" y="575.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (1 samples, 0.02%)</title><rect x="21.5" y="405" width="0.2" height="15.0" fill="rgb(226,125,52)" rx="2" ry="2" />
<text  x="24.48" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (1 samples, 0.02%)</title><rect x="664.9" y="517" width="0.2" height="15.0" fill="rgb(241,187,49)" rx="2" ry="2" />
<text  x="667.95" y="527.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (1 samples, 0.02%)</title><rect x="269.8" y="677" width="0.2" height="15.0" fill="rgb(242,28,44)" rx="2" ry="2" />
<text  x="272.80" y="687.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (6 samples, 0.10%)</title><rect x="950.7" y="533" width="1.2" height="15.0" fill="rgb(244,154,15)" rx="2" ry="2" />
<text  x="953.72" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (43 samples, 0.69%)</title><rect x="588.9" y="501" width="8.1" height="15.0" fill="rgb(251,27,20)" rx="2" ry="2" />
<text  x="591.89" y="511.5" ></text>
</g>
<g >
<title>dispatcher (1,344 samples, 21.44%)</title><rect x="720.9" y="629" width="253.0" height="15.0" fill="rgb(252,103,22)" rx="2" ry="2" />
<text  x="723.86" y="639.5" >dispatcher</text>
</g>
<g >
<title>can_stop_idle_tick (1 samples, 0.02%)</title><rect x="1171.9" y="517" width="0.2" height="15.0" fill="rgb(233,108,35)" rx="2" ry="2" />
<text  x="1174.93" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.03%)</title><rect x="761.5" y="469" width="0.4" height="15.0" fill="rgb(247,101,44)" rx="2" ry="2" />
<text  x="764.53" y="479.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (2 samples, 0.03%)</title><rect x="1188.3" y="533" width="0.4" height="15.0" fill="rgb(233,70,30)" rx="2" ry="2" />
<text  x="1191.31" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (3 samples, 0.05%)</title><rect x="375.0" y="645" width="0.6" height="15.0" fill="rgb(241,97,43)" rx="2" ry="2" />
<text  x="378.03" y="655.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (21 samples, 0.34%)</title><rect x="432.6" y="565" width="4.0" height="15.0" fill="rgb(206,124,22)" rx="2" ry="2" />
<text  x="435.64" y="575.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (6 samples, 0.10%)</title><rect x="1040.9" y="661" width="1.1" height="15.0" fill="rgb(210,140,22)" rx="2" ry="2" />
<text  x="1043.90" y="671.5" ></text>
</g>
<g >
<title>pthread_cond_signal (1 samples, 0.02%)</title><rect x="369.0" y="581" width="0.2" height="15.0" fill="rgb(238,85,19)" rx="2" ry="2" />
<text  x="372.01" y="591.5" ></text>
</g>
<g >
<title>__common_interrupt (9 samples, 0.14%)</title><rect x="17.7" y="565" width="1.7" height="15.0" fill="rgb(227,190,16)" rx="2" ry="2" />
<text  x="20.72" y="575.5" ></text>
</g>
<g >
<title>cpuidle_not_available (2 samples, 0.03%)</title><rect x="1176.4" y="581" width="0.4" height="15.0" fill="rgb(240,81,18)" rx="2" ry="2" />
<text  x="1179.45" y="591.5" ></text>
</g>
<g >
<title>pick_next_entity (1 samples, 0.02%)</title><rect x="229.1" y="517" width="0.2" height="15.0" fill="rgb(224,154,35)" rx="2" ry="2" />
<text  x="232.13" y="527.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::guard (1 samples, 0.02%)</title><rect x="644.8" y="565" width="0.2" height="15.0" fill="rgb(219,194,27)" rx="2" ry="2" />
<text  x="647.81" y="575.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (43 samples, 0.69%)</title><rect x="588.9" y="517" width="8.1" height="15.0" fill="rgb(231,145,0)" rx="2" ry="2" />
<text  x="591.89" y="527.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (38 samples, 0.61%)</title><rect x="945.1" y="565" width="7.1" height="15.0" fill="rgb(222,173,14)" rx="2" ry="2" />
<text  x="948.08" y="575.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (2 samples, 0.03%)</title><rect x="1181.9" y="533" width="0.4" height="15.0" fill="rgb(250,31,14)" rx="2" ry="2" />
<text  x="1184.90" y="543.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.02%)</title><rect x="1094.9" y="469" width="0.2" height="15.0" fill="rgb(243,214,17)" rx="2" ry="2" />
<text  x="1097.93" y="479.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (4 samples, 0.06%)</title><rect x="321.2" y="661" width="0.7" height="15.0" fill="rgb(238,84,39)" rx="2" ry="2" />
<text  x="324.19" y="671.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.03%)</title><rect x="762.8" y="581" width="0.4" height="15.0" fill="rgb(222,213,19)" rx="2" ry="2" />
<text  x="765.84" y="591.5" ></text>
</g>
<g >
<title>__udp6_lib_rcv (1 samples, 0.02%)</title><rect x="21.9" y="309" width="0.1" height="15.0" fill="rgb(239,52,50)" rx="2" ry="2" />
<text  x="24.86" y="319.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (1 samples, 0.02%)</title><rect x="1050.5" y="501" width="0.2" height="15.0" fill="rgb(244,197,26)" rx="2" ry="2" />
<text  x="1053.50" y="511.5" ></text>
</g>
<g >
<title>cpu_startup_entry (222 samples, 3.54%)</title><rect x="17.2" y="677" width="41.7" height="15.0" fill="rgb(253,23,22)" rx="2" ry="2" />
<text  x="20.15" y="687.5" >cpu..</text>
</g>
<g >
<title>NaClSysWriteDecoder (2 samples, 0.03%)</title><rect x="278.8" y="693" width="0.4" height="15.0" fill="rgb(236,224,16)" rx="2" ry="2" />
<text  x="281.83" y="703.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="895.2" y="517" width="0.2" height="15.0" fill="rgb(247,172,21)" rx="2" ry="2" />
<text  x="898.19" y="527.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (6 samples, 0.10%)</title><rect x="81.5" y="389" width="1.2" height="15.0" fill="rgb(214,70,0)" rx="2" ry="2" />
<text  x="84.54" y="399.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (121 samples, 1.93%)</title><rect x="617.1" y="549" width="22.8" height="15.0" fill="rgb(251,175,4)" rx="2" ry="2" />
<text  x="620.13" y="559.5" >&lt;..</text>
</g>
<g >
<title>hrtimer_wakeup (2 samples, 0.03%)</title><rect x="22.6" y="517" width="0.4" height="15.0" fill="rgb(254,91,47)" rx="2" ry="2" />
<text  x="25.61" y="527.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="16.4" y="613" width="0.2" height="15.0" fill="rgb(226,143,40)" rx="2" ry="2" />
<text  x="19.40" y="623.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (2 samples, 0.03%)</title><rect x="369.9" y="293" width="0.4" height="15.0" fill="rgb(252,141,41)" rx="2" ry="2" />
<text  x="372.95" y="303.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="237.6" y="517" width="0.2" height="15.0" fill="rgb(244,121,16)" rx="2" ry="2" />
<text  x="240.60" y="527.5" ></text>
</g>
<g >
<title>kthread (4 samples, 0.06%)</title><rect x="16.4" y="693" width="0.8" height="15.0" fill="rgb(230,183,40)" rx="2" ry="2" />
<text  x="19.40" y="703.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1162.1" y="517" width="0.2" height="15.0" fill="rgb(218,102,28)" rx="2" ry="2" />
<text  x="1165.14" y="527.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1107.5" y="437" width="0.2" height="15.0" fill="rgb(206,201,22)" rx="2" ry="2" />
<text  x="1110.54" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="950.2" y="501" width="0.1" height="15.0" fill="rgb(207,198,46)" rx="2" ry="2" />
<text  x="953.16" y="511.5" ></text>
</g>
<g >
<title>sched_clock_cpu (7 samples, 0.11%)</title><rect x="1161.9" y="533" width="1.4" height="15.0" fill="rgb(236,123,34)" rx="2" ry="2" />
<text  x="1164.95" y="543.5" ></text>
</g>
<g >
<title>_find_next_bit (2 samples, 0.03%)</title><rect x="106.4" y="373" width="0.4" height="15.0" fill="rgb(248,67,2)" rx="2" ry="2" />
<text  x="109.39" y="383.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (7 samples, 0.11%)</title><rect x="896.3" y="437" width="1.3" height="15.0" fill="rgb(245,65,40)" rx="2" ry="2" />
<text  x="899.32" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.03%)</title><rect x="759.6" y="485" width="0.4" height="15.0" fill="rgb(252,174,15)" rx="2" ry="2" />
<text  x="762.64" y="495.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="235.9" y="469" width="0.6" height="15.0" fill="rgb(220,103,13)" rx="2" ry="2" />
<text  x="238.91" y="479.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (1 samples, 0.02%)</title><rect x="21.7" y="373" width="0.2" height="15.0" fill="rgb(240,86,53)" rx="2" ry="2" />
<text  x="24.67" y="383.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.02%)</title><rect x="19.0" y="469" width="0.2" height="15.0" fill="rgb(218,1,8)" rx="2" ry="2" />
<text  x="22.04" y="479.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (23 samples, 0.37%)</title><rect x="911.8" y="517" width="4.3" height="15.0" fill="rgb(230,183,49)" rx="2" ry="2" />
<text  x="914.75" y="527.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (1 samples, 0.02%)</title><rect x="1187.4" y="581" width="0.2" height="15.0" fill="rgb(227,180,17)" rx="2" ry="2" />
<text  x="1190.36" y="591.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2 samples, 0.03%)</title><rect x="613.7" y="341" width="0.4" height="15.0" fill="rgb(229,10,5)" rx="2" ry="2" />
<text  x="616.74" y="351.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="112.2" y="357" width="0.4" height="15.0" fill="rgb(233,112,44)" rx="2" ry="2" />
<text  x="115.22" y="367.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (38 samples, 0.61%)</title><rect x="505.3" y="565" width="7.2" height="15.0" fill="rgb(254,36,7)" rx="2" ry="2" />
<text  x="508.31" y="575.5" ></text>
</g>
<g >
<title>main (1 samples, 0.02%)</title><rect x="1046.4" y="661" width="0.1" height="15.0" fill="rgb(206,157,49)" rx="2" ry="2" />
<text  x="1049.36" y="671.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="1187.7" y="565" width="0.2" height="15.0" fill="rgb(227,14,39)" rx="2" ry="2" />
<text  x="1190.74" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.26%)</title><rect x="444.5" y="501" width="3.0" height="15.0" fill="rgb(244,82,39)" rx="2" ry="2" />
<text  x="447.50" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="71.2" y="485" width="0.2" height="15.0" fill="rgb(213,153,29)" rx="2" ry="2" />
<text  x="74.18" y="495.5" ></text>
</g>
<g >
<title>newidle_balance (4 samples, 0.06%)</title><rect x="1184.7" y="517" width="0.8" height="15.0" fill="rgb(210,164,11)" rx="2" ry="2" />
<text  x="1187.73" y="527.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.02%)</title><rect x="645.0" y="549" width="0.2" height="15.0" fill="rgb(209,71,35)" rx="2" ry="2" />
<text  x="647.99" y="559.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (17 samples, 0.27%)</title><rect x="83.8" y="373" width="3.2" height="15.0" fill="rgb(235,96,34)" rx="2" ry="2" />
<text  x="86.80" y="383.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="15.8" y="565" width="0.2" height="15.0" fill="rgb(253,39,32)" rx="2" ry="2" />
<text  x="18.84" y="575.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.03%)</title><rect x="613.7" y="469" width="0.4" height="15.0" fill="rgb(212,161,1)" rx="2" ry="2" />
<text  x="616.74" y="479.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.02%)</title><rect x="88.9" y="453" width="0.2" height="15.0" fill="rgb(220,75,44)" rx="2" ry="2" />
<text  x="91.88" y="463.5" ></text>
</g>
<g >
<title>perf_swevent_start (1 samples, 0.02%)</title><rect x="87.0" y="373" width="0.2" height="15.0" fill="rgb(240,227,29)" rx="2" ry="2" />
<text  x="90.00" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.22%)</title><rect x="888.0" y="501" width="2.7" height="15.0" fill="rgb(207,158,12)" rx="2" ry="2" />
<text  x="891.03" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (25 samples, 0.40%)</title><rect x="916.1" y="533" width="4.7" height="15.0" fill="rgb(216,101,30)" rx="2" ry="2" />
<text  x="919.08" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (29 samples, 0.46%)</title><rect x="421.9" y="597" width="5.5" height="15.0" fill="rgb(224,154,28)" rx="2" ry="2" />
<text  x="424.91" y="607.5" ></text>
</g>
<g >
<title>atomic_lock (38 samples, 0.61%)</title><rect x="697.0" y="645" width="7.1" height="15.0" fill="rgb(227,104,7)" rx="2" ry="2" />
<text  x="699.95" y="655.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1050.5" y="549" width="0.2" height="15.0" fill="rgb(254,213,43)" rx="2" ry="2" />
<text  x="1053.50" y="559.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.03%)</title><rect x="447.1" y="469" width="0.4" height="15.0" fill="rgb(210,172,12)" rx="2" ry="2" />
<text  x="450.13" y="479.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (2 samples, 0.03%)</title><rect x="93.0" y="485" width="0.4" height="15.0" fill="rgb(221,171,4)" rx="2" ry="2" />
<text  x="96.02" y="495.5" ></text>
</g>
<g >
<title>nf_conntrack_free (1 samples, 0.02%)</title><rect x="21.5" y="309" width="0.2" height="15.0" fill="rgb(240,196,15)" rx="2" ry="2" />
<text  x="24.48" y="319.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.05%)</title><rect x="605.6" y="469" width="0.6" height="15.0" fill="rgb(215,40,42)" rx="2" ry="2" />
<text  x="608.65" y="479.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.03%)</title><rect x="1164.0" y="549" width="0.4" height="15.0" fill="rgb(248,148,5)" rx="2" ry="2" />
<text  x="1167.02" y="559.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.11%)</title><rect x="1035.6" y="629" width="1.3" height="15.0" fill="rgb(224,129,34)" rx="2" ry="2" />
<text  x="1038.63" y="639.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="16.6" y="645" width="0.2" height="15.0" fill="rgb(227,10,20)" rx="2" ry="2" />
<text  x="19.59" y="655.5" ></text>
</g>
<g >
<title>pollwake (1 samples, 0.02%)</title><rect x="21.9" y="165" width="0.1" height="15.0" fill="rgb(231,192,52)" rx="2" ry="2" />
<text  x="24.86" y="175.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="895.9" y="437" width="0.4" height="15.0" fill="rgb(243,119,30)" rx="2" ry="2" />
<text  x="898.94" y="447.5" ></text>
</g>
<g >
<title>clockevents_program_event (2 samples, 0.03%)</title><rect x="1176.1" y="485" width="0.3" height="15.0" fill="rgb(224,147,43)" rx="2" ry="2" />
<text  x="1179.07" y="495.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (17 samples, 0.27%)</title><rect x="895.4" y="517" width="3.2" height="15.0" fill="rgb(224,44,10)" rx="2" ry="2" />
<text  x="898.38" y="527.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::lock_shared_slow (5 samples, 0.08%)</title><rect x="513.8" y="517" width="0.9" height="15.0" fill="rgb(209,119,39)" rx="2" ry="2" />
<text  x="516.78" y="527.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (4 samples, 0.06%)</title><rect x="257.2" y="693" width="0.7" height="15.0" fill="rgb(222,15,8)" rx="2" ry="2" />
<text  x="260.18" y="703.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="21.9" y="101" width="0.1" height="15.0" fill="rgb(242,214,44)" rx="2" ry="2" />
<text  x="24.86" y="111.5" ></text>
</g>
<g >
<title>_perf_ioctl (1 samples, 0.02%)</title><rect x="251.7" y="645" width="0.2" height="15.0" fill="rgb(225,128,26)" rx="2" ry="2" />
<text  x="254.72" y="655.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (25 samples, 0.40%)</title><rect x="904.6" y="453" width="4.7" height="15.0" fill="rgb(232,218,19)" rx="2" ry="2" />
<text  x="907.60" y="463.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="19.0" y="453" width="0.2" height="15.0" fill="rgb(245,31,4)" rx="2" ry="2" />
<text  x="22.04" y="463.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="107.1" y="421" width="0.2" height="15.0" fill="rgb(211,177,46)" rx="2" ry="2" />
<text  x="110.14" y="431.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="367.3" y="309" width="0.2" height="15.0" fill="rgb(239,79,18)" rx="2" ry="2" />
<text  x="370.31" y="319.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (1 samples, 0.02%)</title><rect x="229.3" y="517" width="0.2" height="15.0" fill="rgb(227,159,36)" rx="2" ry="2" />
<text  x="232.32" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="817.2" y="485" width="0.2" height="15.0" fill="rgb(250,226,51)" rx="2" ry="2" />
<text  x="820.25" y="495.5" ></text>
</g>
<g >
<title>__msecs_to_jiffies (1 samples, 0.02%)</title><rect x="97.4" y="453" width="0.1" height="15.0" fill="rgb(228,102,32)" rx="2" ry="2" />
<text  x="100.35" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.02%)</title><rect x="1189.2" y="581" width="0.2" height="15.0" fill="rgb(243,143,21)" rx="2" ry="2" />
<text  x="1192.25" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (301 samples, 4.80%)</title><rect x="614.3" y="597" width="56.7" height="15.0" fill="rgb(220,226,42)" rx="2" ry="2" />
<text  x="617.31" y="607.5" >rustpo..</text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.05%)</title><rect x="232.9" y="549" width="0.6" height="15.0" fill="rgb(251,204,45)" rx="2" ry="2" />
<text  x="235.90" y="559.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (11 samples, 0.18%)</title><rect x="262.3" y="693" width="2.0" height="15.0" fill="rgb(226,60,22)" rx="2" ry="2" />
<text  x="265.27" y="703.5" ></text>
</g>
<g >
<title>alx_mask_msix (7 samples, 0.11%)</title><rect x="17.7" y="485" width="1.3" height="15.0" fill="rgb(231,168,3)" rx="2" ry="2" />
<text  x="20.72" y="495.5" ></text>
</g>
<g >
<title>pick_next_task (1 samples, 0.02%)</title><rect x="232.5" y="565" width="0.2" height="15.0" fill="rgb(226,140,51)" rx="2" ry="2" />
<text  x="235.52" y="575.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_mutcbuf (1 samples, 0.02%)</title><rect x="455.2" y="597" width="0.2" height="15.0" fill="rgb(215,16,15)" rx="2" ry="2" />
<text  x="458.23" y="607.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (8 samples, 0.13%)</title><rect x="615.4" y="565" width="1.5" height="15.0" fill="rgb(227,53,53)" rx="2" ry="2" />
<text  x="618.44" y="575.5" ></text>
</g>
<g >
<title>mmap_region (3 samples, 0.05%)</title><rect x="369.8" y="437" width="0.5" height="15.0" fill="rgb(241,180,30)" rx="2" ry="2" />
<text  x="372.76" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="787.3" y="469" width="0.2" height="15.0" fill="rgb(244,142,13)" rx="2" ry="2" />
<text  x="790.32" y="479.5" ></text>
</g>
<g >
<title>clockevents_program_event (3 samples, 0.05%)</title><rect x="91.9" y="453" width="0.6" height="15.0" fill="rgb(247,47,32)" rx="2" ry="2" />
<text  x="94.89" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2 samples, 0.03%)</title><rect x="436.2" y="517" width="0.4" height="15.0" fill="rgb(237,43,36)" rx="2" ry="2" />
<text  x="439.22" y="527.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="23.7" y="533" width="0.2" height="15.0" fill="rgb(205,229,37)" rx="2" ry="2" />
<text  x="26.74" y="543.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (1 samples, 0.02%)</title><rect x="1035.6" y="581" width="0.2" height="15.0" fill="rgb(216,205,33)" rx="2" ry="2" />
<text  x="1038.63" y="591.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (1 samples, 0.02%)</title><rect x="973.5" y="533" width="0.2" height="15.0" fill="rgb(242,105,50)" rx="2" ry="2" />
<text  x="976.50" y="543.5" ></text>
</g>
<g >
<title>atomic_unlock (2 samples, 0.03%)</title><rect x="261.9" y="693" width="0.4" height="15.0" fill="rgb(211,66,34)" rx="2" ry="2" />
<text  x="264.89" y="703.5" ></text>
</g>
<g >
<title>ctx_resched (1 samples, 0.02%)</title><rect x="251.7" y="501" width="0.2" height="15.0" fill="rgb(217,52,0)" rx="2" ry="2" />
<text  x="254.72" y="511.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.02%)</title><rect x="236.7" y="517" width="0.2" height="15.0" fill="rgb(206,157,36)" rx="2" ry="2" />
<text  x="239.66" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.24%)</title><rect x="448.8" y="485" width="2.9" height="15.0" fill="rgb(242,56,40)" rx="2" ry="2" />
<text  x="451.83" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt; (23 samples, 0.37%)</title><rect x="811.0" y="597" width="4.4" height="15.0" fill="rgb(216,214,27)" rx="2" ry="2" />
<text  x="814.04" y="607.5" ></text>
</g>
<g >
<title>__alloc_pages (3 samples, 0.05%)</title><rect x="1035.8" y="565" width="0.6" height="15.0" fill="rgb(220,107,19)" rx="2" ry="2" />
<text  x="1038.82" y="575.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="99.6" y="437" width="0.2" height="15.0" fill="rgb(212,85,45)" rx="2" ry="2" />
<text  x="102.61" y="447.5" ></text>
</g>
<g >
<title>nf_conntrack_destroy (1 samples, 0.02%)</title><rect x="21.5" y="341" width="0.2" height="15.0" fill="rgb(212,68,34)" rx="2" ry="2" />
<text  x="24.48" y="351.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (5 samples, 0.08%)</title><rect x="270.5" y="661" width="1.0" height="15.0" fill="rgb(232,148,4)" rx="2" ry="2" />
<text  x="273.55" y="671.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.03%)</title><rect x="436.6" y="581" width="0.4" height="15.0" fill="rgb(221,175,29)" rx="2" ry="2" />
<text  x="439.59" y="591.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.03%)</title><rect x="1180.0" y="549" width="0.4" height="15.0" fill="rgb(217,150,34)" rx="2" ry="2" />
<text  x="1183.02" y="559.5" ></text>
</g>
<g >
<title>CompareAndSwap (2 samples, 0.03%)</title><rect x="257.9" y="693" width="0.4" height="15.0" fill="rgb(219,173,50)" rx="2" ry="2" />
<text  x="260.94" y="703.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (32 samples, 0.51%)</title><rect x="499.3" y="517" width="6.0" height="15.0" fill="rgb(249,150,34)" rx="2" ry="2" />
<text  x="502.28" y="527.5" ></text>
</g>
<g >
<title>worker_thread (2 samples, 0.03%)</title><rect x="16.8" y="677" width="0.4" height="15.0" fill="rgb(212,194,5)" rx="2" ry="2" />
<text  x="19.78" y="687.5" ></text>
</g>
<g >
<title>record__write (1 samples, 0.02%)</title><rect x="251.5" y="613" width="0.2" height="15.0" fill="rgb(215,183,45)" rx="2" ry="2" />
<text  x="254.53" y="623.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (26 samples, 0.41%)</title><rect x="665.7" y="517" width="4.9" height="15.0" fill="rgb(251,61,4)" rx="2" ry="2" />
<text  x="668.70" y="527.5" ></text>
</g>
<g >
<title>pick_next_task_fair (4 samples, 0.06%)</title><rect x="1184.7" y="533" width="0.8" height="15.0" fill="rgb(231,209,51)" rx="2" ry="2" />
<text  x="1187.73" y="543.5" ></text>
</g>
<g >
<title>sched_idle_set_state (1 samples, 0.02%)</title><rect x="200.1" y="533" width="0.2" height="15.0" fill="rgb(232,115,23)" rx="2" ry="2" />
<text  x="203.14" y="543.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.02%)</title><rect x="1048.8" y="661" width="0.2" height="15.0" fill="rgb(208,142,13)" rx="2" ry="2" />
<text  x="1051.81" y="671.5" ></text>
</g>
<g >
<title>lind_write (5 samples, 0.08%)</title><rect x="1043.9" y="693" width="1.0" height="15.0" fill="rgb(221,61,22)" rx="2" ry="2" />
<text  x="1046.91" y="703.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="1092.5" y="325" width="0.5" height="15.0" fill="rgb(243,122,41)" rx="2" ry="2" />
<text  x="1095.48" y="335.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="645.0" y="533" width="0.2" height="15.0" fill="rgb(222,50,10)" rx="2" ry="2" />
<text  x="647.99" y="543.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="113.4" y="485" width="0.1" height="15.0" fill="rgb(229,226,14)" rx="2" ry="2" />
<text  x="116.35" y="495.5" ></text>
</g>
<g >
<title>__msecs_to_jiffies (1 samples, 0.02%)</title><rect x="99.4" y="437" width="0.2" height="15.0" fill="rgb(246,149,38)" rx="2" ry="2" />
<text  x="102.42" y="447.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="1188.7" y="501" width="0.2" height="15.0" fill="rgb(230,20,49)" rx="2" ry="2" />
<text  x="1191.68" y="511.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1161.8" y="533" width="0.1" height="15.0" fill="rgb(253,44,13)" rx="2" ry="2" />
<text  x="1164.76" y="543.5" ></text>
</g>
<g >
<title>perf_ioctl (63 samples, 1.01%)</title><rect x="239.7" y="565" width="11.8" height="15.0" fill="rgb(244,186,10)" rx="2" ry="2" />
<text  x="242.67" y="575.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (2 samples, 0.03%)</title><rect x="23.4" y="453" width="0.3" height="15.0" fill="rgb(251,140,24)" rx="2" ry="2" />
<text  x="26.37" y="463.5" ></text>
</g>
<g >
<title>rcu_irq_enter (1 samples, 0.02%)</title><rect x="114.5" y="501" width="0.2" height="15.0" fill="rgb(250,213,37)" rx="2" ry="2" />
<text  x="117.48" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (5 samples, 0.08%)</title><rect x="1172.1" y="501" width="1.0" height="15.0" fill="rgb(207,86,10)" rx="2" ry="2" />
<text  x="1175.12" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1038.8" y="645" width="0.2" height="15.0" fill="rgb(208,152,16)" rx="2" ry="2" />
<text  x="1041.83" y="655.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (2 samples, 0.03%)</title><rect x="886.2" y="565" width="0.3" height="15.0" fill="rgb(224,101,40)" rx="2" ry="2" />
<text  x="889.15" y="575.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.03%)</title><rect x="762.1" y="485" width="0.4" height="15.0" fill="rgb(242,178,29)" rx="2" ry="2" />
<text  x="765.09" y="495.5" ></text>
</g>
<g >
<title>write (1 samples, 0.02%)</title><rect x="251.5" y="581" width="0.2" height="15.0" fill="rgb(213,144,11)" rx="2" ry="2" />
<text  x="254.53" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (28 samples, 0.45%)</title><rect x="487.6" y="581" width="5.3" height="15.0" fill="rgb(208,76,54)" rx="2" ry="2" />
<text  x="490.61" y="591.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.02%)</title><rect x="367.5" y="373" width="0.2" height="15.0" fill="rgb(217,228,36)" rx="2" ry="2" />
<text  x="370.50" y="383.5" ></text>
</g>
<g >
<title>__mod_timer (1 samples, 0.02%)</title><rect x="112.8" y="389" width="0.2" height="15.0" fill="rgb(209,112,9)" rx="2" ry="2" />
<text  x="115.79" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="109.8" y="437" width="0.2" height="15.0" fill="rgb(215,197,43)" rx="2" ry="2" />
<text  x="112.78" y="447.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (4 samples, 0.06%)</title><rect x="1037.1" y="693" width="0.8" height="15.0" fill="rgb(244,219,17)" rx="2" ry="2" />
<text  x="1040.13" y="703.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.02%)</title><rect x="1107.5" y="405" width="0.2" height="15.0" fill="rgb(224,178,52)" rx="2" ry="2" />
<text  x="1110.54" y="415.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (18 samples, 0.29%)</title><rect x="440.9" y="533" width="3.4" height="15.0" fill="rgb(233,83,52)" rx="2" ry="2" />
<text  x="443.92" y="543.5" ></text>
</g>
<g >
<title>NaClSysExit (3 samples, 0.05%)</title><rect x="369.2" y="661" width="0.6" height="15.0" fill="rgb(235,55,24)" rx="2" ry="2" />
<text  x="372.20" y="671.5" ></text>
</g>
<g >
<title>update_group_capacity (1 samples, 0.02%)</title><rect x="1104.0" y="389" width="0.2" height="15.0" fill="rgb(221,146,18)" rx="2" ry="2" />
<text  x="1106.97" y="399.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (2 samples, 0.03%)</title><rect x="1181.3" y="533" width="0.4" height="15.0" fill="rgb(230,94,37)" rx="2" ry="2" />
<text  x="1184.34" y="543.5" ></text>
</g>
<g >
<title>scheduler_tick (36 samples, 0.57%)</title><rect x="80.8" y="405" width="6.8" height="15.0" fill="rgb(215,27,16)" rx="2" ry="2" />
<text  x="83.78" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="613.7" y="501" width="0.4" height="15.0" fill="rgb(249,81,17)" rx="2" ry="2" />
<text  x="616.74" y="511.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (10 samples, 0.16%)</title><rect x="367.1" y="629" width="1.9" height="15.0" fill="rgb(225,123,35)" rx="2" ry="2" />
<text  x="370.13" y="639.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (3 samples, 0.05%)</title><rect x="264.3" y="693" width="0.6" height="15.0" fill="rgb(234,117,15)" rx="2" ry="2" />
<text  x="267.34" y="703.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (3 samples, 0.05%)</title><rect x="369.2" y="469" width="0.6" height="15.0" fill="rgb(217,133,33)" rx="2" ry="2" />
<text  x="372.20" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (23 samples, 0.37%)</title><rect x="728.0" y="597" width="4.3" height="15.0" fill="rgb(211,163,35)" rx="2" ry="2" />
<text  x="731.02" y="607.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (54 samples, 0.86%)</title><rect x="577.8" y="565" width="10.2" height="15.0" fill="rgb(239,203,8)" rx="2" ry="2" />
<text  x="580.79" y="575.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="21.9" y="213" width="0.1" height="15.0" fill="rgb(246,14,40)" rx="2" ry="2" />
<text  x="24.86" y="223.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (4 samples, 0.06%)</title><rect x="258.5" y="693" width="0.8" height="15.0" fill="rgb(208,227,23)" rx="2" ry="2" />
<text  x="261.50" y="703.5" ></text>
</g>
<g >
<title>start_kernel (958 samples, 15.28%)</title><rect x="58.9" y="661" width="180.4" height="15.0" fill="rgb(215,104,51)" rx="2" ry="2" />
<text  x="61.95" y="671.5" >start_kernel</text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (4 samples, 0.06%)</title><rect x="1097.8" y="485" width="0.7" height="15.0" fill="rgb(216,210,44)" rx="2" ry="2" />
<text  x="1100.75" y="495.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (7 samples, 0.11%)</title><rect x="367.7" y="453" width="1.3" height="15.0" fill="rgb(236,83,36)" rx="2" ry="2" />
<text  x="370.69" y="463.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.02%)</title><rect x="217.1" y="517" width="0.2" height="15.0" fill="rgb(223,157,36)" rx="2" ry="2" />
<text  x="220.08" y="527.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (6 samples, 0.10%)</title><rect x="1040.9" y="645" width="1.1" height="15.0" fill="rgb(225,53,33)" rx="2" ry="2" />
<text  x="1043.90" y="655.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (335 samples, 5.34%)</title><rect x="513.6" y="565" width="63.1" height="15.0" fill="rgb(205,210,41)" rx="2" ry="2" />
<text  x="516.59" y="575.5" >&lt;dashm..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (3 samples, 0.05%)</title><rect x="948.7" y="533" width="0.5" height="15.0" fill="rgb(246,160,5)" rx="2" ry="2" />
<text  x="951.65" y="543.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.02%)</title><rect x="1176.1" y="469" width="0.2" height="15.0" fill="rgb(214,38,50)" rx="2" ry="2" />
<text  x="1179.07" y="479.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.02%)</title><rect x="1160.3" y="533" width="0.1" height="15.0" fill="rgb(209,66,26)" rx="2" ry="2" />
<text  x="1163.26" y="543.5" ></text>
</g>
<g >
<title>llist_reverse_order (1 samples, 0.02%)</title><rect x="1178.7" y="565" width="0.2" height="15.0" fill="rgb(221,107,29)" rx="2" ry="2" />
<text  x="1181.70" y="575.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.02%)</title><rect x="239.5" y="453" width="0.2" height="15.0" fill="rgb(250,30,41)" rx="2" ry="2" />
<text  x="242.49" y="463.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.02%)</title><rect x="1036.4" y="581" width="0.2" height="15.0" fill="rgb(250,159,10)" rx="2" ry="2" />
<text  x="1039.38" y="591.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.06%)</title><rect x="440.2" y="565" width="0.7" height="15.0" fill="rgb(229,223,46)" rx="2" ry="2" />
<text  x="443.17" y="575.5" ></text>
</g>
<g >
<title>__update_blocked_fair (6 samples, 0.10%)</title><rect x="1105.7" y="437" width="1.1" height="15.0" fill="rgb(231,78,6)" rx="2" ry="2" />
<text  x="1108.66" y="447.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.03%)</title><rect x="927.4" y="549" width="0.4" height="15.0" fill="rgb(243,103,10)" rx="2" ry="2" />
<text  x="930.38" y="559.5" ></text>
</g>
<g >
<title>ip6_mc_input (2 samples, 0.03%)</title><rect x="21.9" y="373" width="0.3" height="15.0" fill="rgb(220,29,31)" rx="2" ry="2" />
<text  x="24.86" y="383.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (260 samples, 4.15%)</title><rect x="924.9" y="597" width="49.0" height="15.0" fill="rgb(214,49,49)" rx="2" ry="2" />
<text  x="927.93" y="607.5" >rust..</text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (5 samples, 0.08%)</title><rect x="917.6" y="469" width="0.9" height="15.0" fill="rgb(223,55,40)" rx="2" ry="2" />
<text  x="920.59" y="479.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.03%)</title><rect x="613.7" y="453" width="0.4" height="15.0" fill="rgb(230,194,17)" rx="2" ry="2" />
<text  x="616.74" y="463.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (2 samples, 0.03%)</title><rect x="927.4" y="565" width="0.4" height="15.0" fill="rgb(237,136,18)" rx="2" ry="2" />
<text  x="930.38" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (3 samples, 0.05%)</title><rect x="613.6" y="565" width="0.5" height="15.0" fill="rgb(252,78,13)" rx="2" ry="2" />
<text  x="616.55" y="575.5" ></text>
</g>
<g >
<title>hrtimer_active (3 samples, 0.05%)</title><rect x="234.6" y="533" width="0.6" height="15.0" fill="rgb(236,167,43)" rx="2" ry="2" />
<text  x="237.59" y="543.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (9 samples, 0.14%)</title><rect x="215.6" y="533" width="1.7" height="15.0" fill="rgb(236,138,5)" rx="2" ry="2" />
<text  x="218.58" y="543.5" ></text>
</g>
<g >
<title>nf_hook_slow_list (1 samples, 0.02%)</title><rect x="21.7" y="405" width="0.2" height="15.0" fill="rgb(230,47,17)" rx="2" ry="2" />
<text  x="24.67" y="415.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.05%)</title><rect x="640.1" y="581" width="0.6" height="15.0" fill="rgb(208,62,12)" rx="2" ry="2" />
<text  x="643.10" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (97 samples, 1.55%)</title><rect x="867.7" y="485" width="18.3" height="15.0" fill="rgb(218,112,35)" rx="2" ry="2" />
<text  x="870.70" y="495.5" ></text>
</g>
<g >
<title>hrtimer_update_next_event (5 samples, 0.08%)</title><rect x="90.0" y="469" width="1.0" height="15.0" fill="rgb(248,131,44)" rx="2" ry="2" />
<text  x="93.01" y="479.5" ></text>
</g>
<g >
<title>rest_init (958 samples, 15.28%)</title><rect x="58.9" y="629" width="180.4" height="15.0" fill="rgb(210,185,37)" rx="2" ry="2" />
<text  x="61.95" y="639.5" >rest_init</text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (29 samples, 0.46%)</title><rect x="607.7" y="581" width="5.5" height="15.0" fill="rgb(207,155,10)" rx="2" ry="2" />
<text  x="610.72" y="591.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="1049.6" y="549" width="0.1" height="15.0" fill="rgb(227,102,28)" rx="2" ry="2" />
<text  x="1052.56" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (18 samples, 0.29%)</title><rect x="739.5" y="501" width="3.4" height="15.0" fill="rgb(236,4,46)" rx="2" ry="2" />
<text  x="742.50" y="511.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.03%)</title><rect x="443.2" y="453" width="0.4" height="15.0" fill="rgb(223,52,36)" rx="2" ry="2" />
<text  x="446.18" y="463.5" ></text>
</g>
<g >
<title>nf_ct_get_tuple (1 samples, 0.02%)</title><rect x="21.7" y="325" width="0.2" height="15.0" fill="rgb(254,7,49)" rx="2" ry="2" />
<text  x="24.67" y="335.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (24 samples, 0.38%)</title><rect x="739.3" y="581" width="4.5" height="15.0" fill="rgb(237,80,41)" rx="2" ry="2" />
<text  x="742.31" y="591.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="21.3" y="389" width="0.2" height="15.0" fill="rgb(214,102,2)" rx="2" ry="2" />
<text  x="24.30" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.05%)</title><rect x="749.9" y="469" width="0.5" height="15.0" fill="rgb(219,73,19)" rx="2" ry="2" />
<text  x="752.85" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (3 samples, 0.05%)</title><rect x="369.2" y="533" width="0.6" height="15.0" fill="rgb(228,57,36)" rx="2" ry="2" />
<text  x="372.20" y="543.5" ></text>
</g>
<g >
<title>ip6_list_rcv_finish.constprop.0 (2 samples, 0.03%)</title><rect x="21.9" y="405" width="0.3" height="15.0" fill="rgb(215,62,12)" rx="2" ry="2" />
<text  x="24.86" y="415.5" ></text>
</g>
<g >
<title>HandleStackContext (143 samples, 2.28%)</title><rect x="295.0" y="677" width="26.9" height="15.0" fill="rgb(235,158,38)" rx="2" ry="2" />
<text  x="298.02" y="687.5" >H..</text>
</g>
<g >
<title>std::sync::once::Once::is_completed (1 samples, 0.02%)</title><rect x="787.3" y="501" width="0.2" height="15.0" fill="rgb(215,174,3)" rx="2" ry="2" />
<text  x="790.32" y="511.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="10.0" y="629" width="0.2" height="15.0" fill="rgb(241,56,6)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (3 samples, 0.05%)</title><rect x="613.6" y="549" width="0.5" height="15.0" fill="rgb(236,222,4)" rx="2" ry="2" />
<text  x="616.55" y="559.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1107.9" y="485" width="0.2" height="15.0" fill="rgb(250,43,50)" rx="2" ry="2" />
<text  x="1110.92" y="495.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="455.2" y="581" width="0.2" height="15.0" fill="rgb(241,138,49)" rx="2" ry="2" />
<text  x="458.23" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (65 samples, 1.04%)</title><rect x="927.8" y="517" width="12.2" height="15.0" fill="rgb(243,175,40)" rx="2" ry="2" />
<text  x="930.76" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (26 samples, 0.41%)</title><rect x="732.9" y="533" width="4.9" height="15.0" fill="rgb(209,91,43)" rx="2" ry="2" />
<text  x="735.91" y="543.5" ></text>
</g>
<g >
<title>cpu_startup_entry (957 samples, 15.27%)</title><rect x="58.9" y="613" width="180.2" height="15.0" fill="rgb(221,142,2)" rx="2" ry="2" />
<text  x="61.95" y="623.5" >cpu_startup_entry</text>
</g>
<g >
<title>update_load_avg (2 samples, 0.03%)</title><rect x="1181.0" y="517" width="0.3" height="15.0" fill="rgb(216,223,24)" rx="2" ry="2" />
<text  x="1183.96" y="527.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.03%)</title><rect x="16.0" y="709" width="0.4" height="15.0" fill="rgb(245,167,37)" rx="2" ry="2" />
<text  x="19.02" y="719.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.08%)</title><rect x="606.2" y="469" width="1.0" height="15.0" fill="rgb(211,164,1)" rx="2" ry="2" />
<text  x="609.21" y="479.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (3 samples, 0.05%)</title><rect x="196.6" y="533" width="0.5" height="15.0" fill="rgb(251,208,33)" rx="2" ry="2" />
<text  x="199.56" y="543.5" ></text>
</g>
<g >
<title>__perf_event_enable (63 samples, 1.01%)</title><rect x="239.7" y="421" width="11.8" height="15.0" fill="rgb(207,0,7)" rx="2" ry="2" />
<text  x="242.67" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="449.4" y="453" width="0.2" height="15.0" fill="rgb(230,192,27)" rx="2" ry="2" />
<text  x="452.39" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.34%)</title><rect x="911.8" y="437" width="3.9" height="15.0" fill="rgb(251,188,16)" rx="2" ry="2" />
<text  x="914.75" y="447.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (1 samples, 0.02%)</title><rect x="1107.4" y="453" width="0.1" height="15.0" fill="rgb(210,191,52)" rx="2" ry="2" />
<text  x="1110.35" y="463.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2 samples, 0.03%)</title><rect x="112.2" y="341" width="0.4" height="15.0" fill="rgb(210,219,38)" rx="2" ry="2" />
<text  x="115.22" y="351.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (1 samples, 0.02%)</title><rect x="696.8" y="645" width="0.2" height="15.0" fill="rgb(248,195,1)" rx="2" ry="2" />
<text  x="699.76" y="655.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.10%)</title><rect x="1040.9" y="677" width="1.1" height="15.0" fill="rgb(239,214,6)" rx="2" ry="2" />
<text  x="1043.90" y="687.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (1 samples, 0.02%)</title><rect x="237.6" y="533" width="0.2" height="15.0" fill="rgb(215,59,9)" rx="2" ry="2" />
<text  x="240.60" y="543.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="215.0" y="549" width="0.2" height="15.0" fill="rgb(253,106,46)" rx="2" ry="2" />
<text  x="218.01" y="559.5" ></text>
</g>
<g >
<title>dispatcher (3 samples, 0.05%)</title><rect x="369.8" y="613" width="0.5" height="15.0" fill="rgb(222,117,30)" rx="2" ry="2" />
<text  x="372.76" y="623.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (18 samples, 0.29%)</title><rect x="921.2" y="581" width="3.4" height="15.0" fill="rgb(233,161,24)" rx="2" ry="2" />
<text  x="924.17" y="591.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.03%)</title><rect x="1189.4" y="597" width="0.4" height="15.0" fill="rgb(228,168,36)" rx="2" ry="2" />
<text  x="1192.44" y="607.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="21.9" y="37" width="0.1" height="15.0" fill="rgb(238,12,42)" rx="2" ry="2" />
<text  x="24.86" y="47.5" ></text>
</g>
<g >
<title>irq_work_tick (1 samples, 0.02%)</title><rect x="1086.1" y="421" width="0.2" height="15.0" fill="rgb(230,85,50)" rx="2" ry="2" />
<text  x="1089.08" y="431.5" ></text>
</g>
<g >
<title>atomic_unlock (27 samples, 0.43%)</title><rect x="704.1" y="645" width="5.1" height="15.0" fill="rgb(225,4,47)" rx="2" ry="2" />
<text  x="707.11" y="655.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="23.0" y="485" width="0.2" height="15.0" fill="rgb(238,85,22)" rx="2" ry="2" />
<text  x="25.99" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (64 samples, 1.02%)</title><rect x="588.9" y="533" width="12.0" height="15.0" fill="rgb(253,96,9)" rx="2" ry="2" />
<text  x="591.89" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (46 samples, 0.73%)</title><rect x="802.4" y="533" width="8.6" height="15.0" fill="rgb(205,93,34)" rx="2" ry="2" />
<text  x="805.38" y="543.5" ></text>
</g>
<g >
<title>timerqueue_add (6 samples, 0.10%)</title><rect x="75.3" y="437" width="1.2" height="15.0" fill="rgb(210,119,1)" rx="2" ry="2" />
<text  x="78.33" y="447.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="17.0" y="661" width="0.2" height="15.0" fill="rgb(222,35,0)" rx="2" ry="2" />
<text  x="19.97" y="671.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.02%)</title><rect x="238.2" y="597" width="0.2" height="15.0" fill="rgb(243,47,15)" rx="2" ry="2" />
<text  x="241.17" y="607.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="77.8" y="421" width="0.2" height="15.0" fill="rgb(205,76,37)" rx="2" ry="2" />
<text  x="80.77" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (16 samples, 0.26%)</title><rect x="266.4" y="693" width="3.0" height="15.0" fill="rgb(243,87,21)" rx="2" ry="2" />
<text  x="269.41" y="703.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="599.4" y="421" width="0.4" height="15.0" fill="rgb(220,194,47)" rx="2" ry="2" />
<text  x="602.44" y="431.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.02%)</title><rect x="251.5" y="389" width="0.2" height="15.0" fill="rgb(240,86,31)" rx="2" ry="2" />
<text  x="254.53" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.03%)</title><rect x="762.1" y="501" width="0.4" height="15.0" fill="rgb(230,165,3)" rx="2" ry="2" />
<text  x="765.09" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (65 samples, 1.04%)</title><rect x="927.8" y="581" width="12.2" height="15.0" fill="rgb(207,82,45)" rx="2" ry="2" />
<text  x="930.76" y="591.5" ></text>
</g>
<g >
<title>DynArrayGet (1 samples, 0.02%)</title><rect x="686.2" y="645" width="0.2" height="15.0" fill="rgb(219,185,31)" rx="2" ry="2" />
<text  x="689.22" y="655.5" ></text>
</g>
<g >
<title>dispatcher (3 samples, 0.05%)</title><rect x="1042.2" y="693" width="0.6" height="15.0" fill="rgb(245,120,34)" rx="2" ry="2" />
<text  x="1045.22" y="703.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.05%)</title><rect x="453.9" y="453" width="0.6" height="15.0" fill="rgb(249,62,25)" rx="2" ry="2" />
<text  x="456.91" y="463.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (2 samples, 0.03%)</title><rect x="16.4" y="677" width="0.4" height="15.0" fill="rgb(233,219,7)" rx="2" ry="2" />
<text  x="19.40" y="687.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.03%)</title><rect x="911.4" y="485" width="0.4" height="15.0" fill="rgb(221,39,2)" rx="2" ry="2" />
<text  x="914.38" y="495.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::lock_shared_slow (1 samples, 0.02%)</title><rect x="1042.0" y="693" width="0.2" height="15.0" fill="rgb(252,228,32)" rx="2" ry="2" />
<text  x="1045.03" y="703.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1050.3" y="613" width="0.2" height="15.0" fill="rgb(245,22,6)" rx="2" ry="2" />
<text  x="1053.31" y="623.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (2 samples, 0.03%)</title><rect x="231.6" y="549" width="0.4" height="15.0" fill="rgb(239,202,16)" rx="2" ry="2" />
<text  x="234.58" y="559.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="440.7" y="533" width="0.2" height="15.0" fill="rgb(254,83,11)" rx="2" ry="2" />
<text  x="443.73" y="543.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.03%)</title><rect x="1036.6" y="581" width="0.3" height="15.0" fill="rgb(207,228,21)" rx="2" ry="2" />
<text  x="1039.57" y="591.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (131 samples, 2.09%)</title><rect x="1050.5" y="613" width="24.7" height="15.0" fill="rgb(225,77,53)" rx="2" ry="2" />
<text  x="1053.50" y="623.5" >c..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="919.7" y="485" width="0.2" height="15.0" fill="rgb(222,190,0)" rx="2" ry="2" />
<text  x="922.66" y="495.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (1 samples, 0.02%)</title><rect x="1189.8" y="597" width="0.2" height="15.0" fill="rgb(245,121,28)" rx="2" ry="2" />
<text  x="1192.81" y="607.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="21.9" y="85" width="0.1" height="15.0" fill="rgb(237,150,28)" rx="2" ry="2" />
<text  x="24.86" y="95.5" ></text>
</g>
<g >
<title>hashbrown::raw::likely (1 samples, 0.02%)</title><rect x="919.9" y="485" width="0.1" height="15.0" fill="rgb(243,68,4)" rx="2" ry="2" />
<text  x="922.85" y="495.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="10.0" y="549" width="0.2" height="15.0" fill="rgb(252,220,24)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (335 samples, 5.34%)</title><rect x="513.6" y="533" width="63.1" height="15.0" fill="rgb(238,167,28)" rx="2" ry="2" />
<text  x="516.59" y="543.5" >&lt;dashm..</text>
</g>
<g >
<title>NaClGetThreadCtxSp (9 samples, 0.14%)</title><rect x="313.3" y="661" width="1.7" height="15.0" fill="rgb(221,9,0)" rx="2" ry="2" />
<text  x="316.28" y="671.5" ></text>
</g>
<g >
<title>rcu_idle_enter (2 samples, 0.03%)</title><rect x="1163.6" y="549" width="0.4" height="15.0" fill="rgb(220,111,35)" rx="2" ry="2" />
<text  x="1166.64" y="559.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1036.4" y="501" width="0.2" height="15.0" fill="rgb(209,128,8)" rx="2" ry="2" />
<text  x="1039.38" y="511.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.03%)</title><rect x="453.5" y="453" width="0.4" height="15.0" fill="rgb(251,129,15)" rx="2" ry="2" />
<text  x="456.54" y="463.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="216.0" y="501" width="0.1" height="15.0" fill="rgb(221,78,0)" rx="2" ry="2" />
<text  x="218.95" y="511.5" ></text>
</g>
<g >
<title>__udp_enqueue_schedule_skb (1 samples, 0.02%)</title><rect x="21.9" y="245" width="0.1" height="15.0" fill="rgb(216,83,35)" rx="2" ry="2" />
<text  x="24.86" y="255.5" ></text>
</g>
<g >
<title>NaClAppDtor (3 samples, 0.05%)</title><rect x="369.2" y="613" width="0.6" height="15.0" fill="rgb(233,31,16)" rx="2" ry="2" />
<text  x="372.20" y="623.5" ></text>
</g>
<g >
<title>rcu_needs_cpu (1 samples, 0.02%)</title><rect x="213.1" y="501" width="0.2" height="15.0" fill="rgb(237,14,49)" rx="2" ry="2" />
<text  x="216.13" y="511.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.02%)</title><rect x="787.1" y="581" width="0.2" height="15.0" fill="rgb(205,168,39)" rx="2" ry="2" />
<text  x="790.13" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (33 samples, 0.53%)</title><rect x="600.9" y="501" width="6.3" height="15.0" fill="rgb(246,99,47)" rx="2" ry="2" />
<text  x="603.94" y="511.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.02%)</title><rect x="251.5" y="373" width="0.2" height="15.0" fill="rgb(247,102,13)" rx="2" ry="2" />
<text  x="254.53" y="383.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (14 samples, 0.22%)</title><rect x="321.9" y="677" width="2.7" height="15.0" fill="rgb(221,44,27)" rx="2" ry="2" />
<text  x="324.94" y="687.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (3 samples, 0.05%)</title><rect x="90.4" y="453" width="0.6" height="15.0" fill="rgb(215,19,18)" rx="2" ry="2" />
<text  x="93.39" y="463.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (2 samples, 0.03%)</title><rect x="745.3" y="501" width="0.4" height="15.0" fill="rgb(230,51,48)" rx="2" ry="2" />
<text  x="748.34" y="511.5" ></text>
</g>
<g >
<title>cpu_startup_entry (133 samples, 2.12%)</title><rect x="1050.3" y="677" width="25.1" height="15.0" fill="rgb(222,92,46)" rx="2" ry="2" />
<text  x="1053.31" y="687.5" >c..</text>
</g>
<g >
<title>irq_exit_rcu (95 samples, 1.52%)</title><rect x="95.7" y="501" width="17.8" height="15.0" fill="rgb(215,45,40)" rx="2" ry="2" />
<text  x="98.66" y="511.5" ></text>
</g>
<g >
<title>cpuidle_enter (748 samples, 11.93%)</title><rect x="61.2" y="565" width="140.8" height="15.0" fill="rgb(242,144,52)" rx="2" ry="2" />
<text  x="64.21" y="575.5" >cpuidle_enter</text>
</g>
<g >
<title>do_iter_readv_writev (2 samples, 0.03%)</title><rect x="613.7" y="373" width="0.4" height="15.0" fill="rgb(250,221,12)" rx="2" ry="2" />
<text  x="616.74" y="383.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (23 samples, 0.37%)</title><rect x="739.5" y="549" width="4.3" height="15.0" fill="rgb(235,38,51)" rx="2" ry="2" />
<text  x="742.50" y="559.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1050.5" y="533" width="0.2" height="15.0" fill="rgb(210,148,2)" rx="2" ry="2" />
<text  x="1053.50" y="543.5" ></text>
</g>
<g >
<title>lind_read (1,388 samples, 22.14%)</title><rect x="409.9" y="645" width="261.3" height="15.0" fill="rgb(222,138,21)" rx="2" ry="2" />
<text  x="412.86" y="655.5" >lind_read</text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.41%)</title><rect x="732.9" y="581" width="4.9" height="15.0" fill="rgb(251,164,6)" rx="2" ry="2" />
<text  x="735.91" y="591.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.02%)</title><rect x="1040.3" y="677" width="0.2" height="15.0" fill="rgb(239,201,52)" rx="2" ry="2" />
<text  x="1043.34" y="687.5" ></text>
</g>
<g >
<title>NaClXCondVarSignal (1 samples, 0.02%)</title><rect x="369.0" y="613" width="0.2" height="15.0" fill="rgb(240,203,29)" rx="2" ry="2" />
<text  x="372.01" y="623.5" ></text>
</g>
<g >
<title>core::cmp::min (2 samples, 0.03%)</title><rect x="927.4" y="581" width="0.4" height="15.0" fill="rgb(237,203,5)" rx="2" ry="2" />
<text  x="930.38" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;u64,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (26 samples, 0.41%)</title><rect x="732.9" y="597" width="4.9" height="15.0" fill="rgb(250,162,9)" rx="2" ry="2" />
<text  x="735.91" y="607.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.03%)</title><rect x="745.0" y="501" width="0.3" height="15.0" fill="rgb(223,151,35)" rx="2" ry="2" />
<text  x="747.96" y="511.5" ></text>
</g>
<g >
<title>__update_blocked_fair (11 samples, 0.18%)</title><rect x="107.7" y="437" width="2.1" height="15.0" fill="rgb(232,51,0)" rx="2" ry="2" />
<text  x="110.71" y="447.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1181.7" y="501" width="0.2" height="15.0" fill="rgb(219,143,8)" rx="2" ry="2" />
<text  x="1184.72" y="511.5" ></text>
</g>
<g >
<title>new_sync_read (2 samples, 0.03%)</title><rect x="613.7" y="437" width="0.4" height="15.0" fill="rgb(251,39,29)" rx="2" ry="2" />
<text  x="616.74" y="447.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.02%)</title><rect x="16.4" y="645" width="0.2" height="15.0" fill="rgb(218,80,46)" rx="2" ry="2" />
<text  x="19.40" y="655.5" ></text>
</g>
<g >
<title>CompareAndSwap (144 samples, 2.30%)</title><rect x="332.7" y="661" width="27.1" height="15.0" fill="rgb(223,197,31)" rx="2" ry="2" />
<text  x="335.67" y="671.5" >C..</text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.45%)</title><rect x="487.6" y="549" width="5.3" height="15.0" fill="rgb(254,174,14)" rx="2" ry="2" />
<text  x="490.61" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (29 samples, 0.46%)</title><rect x="607.7" y="549" width="5.5" height="15.0" fill="rgb(254,162,29)" rx="2" ry="2" />
<text  x="610.72" y="559.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (55 samples, 0.88%)</title><rect x="660.6" y="565" width="10.4" height="15.0" fill="rgb(245,74,30)" rx="2" ry="2" />
<text  x="663.62" y="575.5" ></text>
</g>
<g >
<title>do_mmap (3 samples, 0.05%)</title><rect x="369.8" y="453" width="0.5" height="15.0" fill="rgb(245,2,26)" rx="2" ry="2" />
<text  x="372.76" y="463.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="224.6" y="501" width="0.2" height="15.0" fill="rgb(234,55,27)" rx="2" ry="2" />
<text  x="227.61" y="511.5" ></text>
</g>
<g >
<title>native_read_msr (2 samples, 0.03%)</title><rect x="82.3" y="373" width="0.4" height="15.0" fill="rgb(233,40,32)" rx="2" ry="2" />
<text  x="85.29" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (216 samples, 3.45%)</title><rect x="17.5" y="613" width="40.7" height="15.0" fill="rgb(235,136,46)" rx="2" ry="2" />
<text  x="20.53" y="623.5" >cpu..</text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (17 samples, 0.27%)</title><rect x="372.6" y="661" width="3.2" height="15.0" fill="rgb(216,103,34)" rx="2" ry="2" />
<text  x="375.58" y="671.5" ></text>
</g>
<g >
<title>down_write_killable (3 samples, 0.05%)</title><rect x="369.2" y="501" width="0.6" height="15.0" fill="rgb(251,176,5)" rx="2" ry="2" />
<text  x="372.20" y="511.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (3 samples, 0.05%)</title><rect x="602.8" y="485" width="0.6" height="15.0" fill="rgb(253,195,31)" rx="2" ry="2" />
<text  x="605.82" y="495.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.02%)</title><rect x="1075.2" y="629" width="0.2" height="15.0" fill="rgb(217,229,48)" rx="2" ry="2" />
<text  x="1078.16" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="10.0" y="693" width="0.2" height="15.0" fill="rgb(249,178,11)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.78%)</title><rect x="1037.1" y="709" width="9.3" height="15.0" fill="rgb(216,181,46)" rx="2" ry="2" />
<text  x="1040.13" y="719.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.02%)</title><rect x="251.5" y="469" width="0.2" height="15.0" fill="rgb(254,94,26)" rx="2" ry="2" />
<text  x="254.53" y="479.5" ></text>
</g>
<g >
<title>update_sd_pick_busiest (1 samples, 0.02%)</title><rect x="104.3" y="389" width="0.2" height="15.0" fill="rgb(213,141,31)" rx="2" ry="2" />
<text  x="107.32" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (24 samples, 0.38%)</title><rect x="751.4" y="533" width="4.5" height="15.0" fill="rgb(231,104,2)" rx="2" ry="2" />
<text  x="754.36" y="543.5" ></text>
</g>
<g >
<title>kworker/dying (1,218 samples, 19.43%)</title><rect x="10.2" y="725" width="229.3" height="15.0" fill="rgb(205,179,2)" rx="2" ry="2" />
<text  x="13.19" y="735.5" >kworker/dying</text>
</g>
<g >
<title>tty_port_default_receive_buf (1 samples, 0.02%)</title><rect x="1049.6" y="629" width="0.1" height="15.0" fill="rgb(232,108,5)" rx="2" ry="2" />
<text  x="1052.56" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (19 samples, 0.30%)</title><rect x="432.6" y="517" width="3.6" height="15.0" fill="rgb(233,46,9)" rx="2" ry="2" />
<text  x="435.64" y="527.5" ></text>
</g>
<g >
<title>rcu_idle_exit (8 samples, 0.13%)</title><rect x="197.1" y="533" width="1.5" height="15.0" fill="rgb(247,187,40)" rx="2" ry="2" />
<text  x="200.13" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;alloc::string::String,dashmap::util::SharedValue&lt;usize&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="1046.4" y="325" width="0.1" height="15.0" fill="rgb(216,46,0)" rx="2" ry="2" />
<text  x="1049.36" y="335.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (1 samples, 0.02%)</title><rect x="238.4" y="597" width="0.1" height="15.0" fill="rgb(235,7,3)" rx="2" ry="2" />
<text  x="241.36" y="607.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (3 samples, 0.05%)</title><rect x="1175.9" y="549" width="0.5" height="15.0" fill="rgb(215,13,35)" rx="2" ry="2" />
<text  x="1178.88" y="559.5" ></text>
</g>
<g >
<title>&lt;dashmap::iter::Iter&lt;K,V,S,M&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1046.4" y="373" width="0.1" height="15.0" fill="rgb(207,134,17)" rx="2" ry="2" />
<text  x="1049.36" y="383.5" ></text>
</g>
<g >
<title>alx_mask_msix (1 samples, 0.02%)</title><rect x="1050.5" y="485" width="0.2" height="15.0" fill="rgb(249,161,3)" rx="2" ry="2" />
<text  x="1053.50" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.02%)</title><rect x="213.3" y="533" width="0.2" height="15.0" fill="rgb(219,116,11)" rx="2" ry="2" />
<text  x="216.32" y="543.5" ></text>
</g>
<g >
<title>rcu_nmi_exit (1 samples, 0.02%)</title><rect x="1108.5" y="485" width="0.2" height="15.0" fill="rgb(237,134,31)" rx="2" ry="2" />
<text  x="1111.48" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.03%)</title><rect x="486.7" y="597" width="0.3" height="15.0" fill="rgb(217,220,49)" rx="2" ry="2" />
<text  x="489.67" y="607.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="239.5" y="469" width="0.2" height="15.0" fill="rgb(226,72,15)" rx="2" ry="2" />
<text  x="242.49" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (155 samples, 2.47%)</title><rect x="1079.9" y="533" width="29.1" height="15.0" fill="rgb(233,160,0)" rx="2" ry="2" />
<text  x="1082.87" y="543.5" >as..</text>
</g>
<g >
<title>do_idle (1 samples, 0.02%)</title><rect x="239.1" y="613" width="0.2" height="15.0" fill="rgb(245,8,25)" rx="2" ry="2" />
<text  x="242.11" y="623.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (2 samples, 0.03%)</title><rect x="260.6" y="693" width="0.3" height="15.0" fill="rgb(251,104,3)" rx="2" ry="2" />
<text  x="263.57" y="703.5" ></text>
</g>
<g >
<title>__schedule (34 samples, 0.54%)</title><rect x="226.1" y="565" width="6.4" height="15.0" fill="rgb(221,12,2)" rx="2" ry="2" />
<text  x="229.12" y="575.5" ></text>
</g>
<g >
<title>unmap_page_range (3 samples, 0.05%)</title><rect x="369.8" y="357" width="0.5" height="15.0" fill="rgb(228,224,38)" rx="2" ry="2" />
<text  x="372.76" y="367.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.02%)</title><rect x="1048.8" y="645" width="0.2" height="15.0" fill="rgb(233,104,11)" rx="2" ry="2" />
<text  x="1051.81" y="655.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (28 samples, 0.45%)</title><rect x="487.6" y="565" width="5.3" height="15.0" fill="rgb(209,91,51)" rx="2" ry="2" />
<text  x="490.61" y="575.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.02%)</title><rect x="1038.8" y="565" width="0.2" height="15.0" fill="rgb(216,108,10)" rx="2" ry="2" />
<text  x="1041.83" y="575.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="81.2" y="389" width="0.3" height="15.0" fill="rgb(225,205,2)" rx="2" ry="2" />
<text  x="84.16" y="399.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1050.5" y="517" width="0.2" height="15.0" fill="rgb(230,153,42)" rx="2" ry="2" />
<text  x="1053.50" y="527.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::is_initialized (1 samples, 0.02%)</title><rect x="787.3" y="517" width="0.2" height="15.0" fill="rgb(226,61,37)" rx="2" ry="2" />
<text  x="790.32" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (28 samples, 0.45%)</title><rect x="487.6" y="517" width="5.3" height="15.0" fill="rgb(241,111,53)" rx="2" ry="2" />
<text  x="490.61" y="527.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (103 samples, 1.64%)</title><rect x="954.3" y="549" width="19.4" height="15.0" fill="rgb(239,185,6)" rx="2" ry="2" />
<text  x="957.30" y="559.5" ></text>
</g>
<g >
<title>__perf_event_enable (1 samples, 0.02%)</title><rect x="251.7" y="517" width="0.2" height="15.0" fill="rgb(218,135,52)" rx="2" ry="2" />
<text  x="254.72" y="527.5" ></text>
</g>
<g >
<title>irqentry_enter (2 samples, 0.03%)</title><rect x="1108.1" y="501" width="0.4" height="15.0" fill="rgb(254,25,36)" rx="2" ry="2" />
<text  x="1111.11" y="511.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (2 samples, 0.03%)</title><rect x="93.4" y="485" width="0.4" height="15.0" fill="rgb(244,174,15)" rx="2" ry="2" />
<text  x="96.40" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (249 samples, 3.97%)</title><rect x="68.4" y="533" width="46.8" height="15.0" fill="rgb(225,58,52)" rx="2" ry="2" />
<text  x="71.36" y="543.5" >asm_..</text>
</g>
<g >
<title>__remove_hrtimer (8 samples, 0.13%)</title><rect x="235.2" y="517" width="1.5" height="15.0" fill="rgb(227,150,18)" rx="2" ry="2" />
<text  x="238.16" y="527.5" ></text>
</g>
<g >
<title>__update_blocked_fair (5 samples, 0.08%)</title><rect x="1180.4" y="533" width="0.9" height="15.0" fill="rgb(219,185,43)" rx="2" ry="2" />
<text  x="1183.40" y="543.5" ></text>
</g>
<g >
<title>error_return (2 samples, 0.03%)</title><rect x="201.1" y="549" width="0.4" height="15.0" fill="rgb(240,67,1)" rx="2" ry="2" />
<text  x="204.08" y="559.5" ></text>
</g>
<g >
<title>ioctl (63 samples, 1.01%)</title><rect x="239.7" y="629" width="11.8" height="15.0" fill="rgb(252,139,30)" rx="2" ry="2" />
<text  x="242.67" y="639.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (21 samples, 0.34%)</title><rect x="432.6" y="533" width="4.0" height="15.0" fill="rgb(238,112,21)" rx="2" ry="2" />
<text  x="435.64" y="543.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (1 samples, 0.02%)</title><rect x="616.9" y="565" width="0.2" height="15.0" fill="rgb(208,132,50)" rx="2" ry="2" />
<text  x="619.94" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (46 samples, 0.73%)</title><rect x="802.4" y="517" width="8.6" height="15.0" fill="rgb(214,115,1)" rx="2" ry="2" />
<text  x="805.38" y="527.5" ></text>
</g>
<g >
<title>NaClSysRead (1,566 samples, 24.98%)</title><rect x="376.3" y="661" width="294.9" height="15.0" fill="rgb(237,34,35)" rx="2" ry="2" />
<text  x="379.35" y="671.5" >NaClSysRead</text>
</g>
<g >
<title>nf_ct_destroy (1 samples, 0.02%)</title><rect x="21.5" y="325" width="0.2" height="15.0" fill="rgb(253,37,10)" rx="2" ry="2" />
<text  x="24.48" y="335.5" ></text>
</g>
<g >
<title>native_apic_mem_write (2 samples, 0.03%)</title><rect x="1108.7" y="501" width="0.3" height="15.0" fill="rgb(233,39,8)" rx="2" ry="2" />
<text  x="1111.67" y="511.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (1 samples, 0.02%)</title><rect x="239.5" y="629" width="0.2" height="15.0" fill="rgb(227,76,20)" rx="2" ry="2" />
<text  x="242.49" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt; (46 samples, 0.73%)</title><rect x="802.4" y="597" width="8.6" height="15.0" fill="rgb(240,88,22)" rx="2" ry="2" />
<text  x="805.38" y="607.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.02%)</title><rect x="23.6" y="437" width="0.1" height="15.0" fill="rgb(244,100,4)" rx="2" ry="2" />
<text  x="26.55" y="447.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.03%)</title><rect x="110.3" y="405" width="0.4" height="15.0" fill="rgb(239,128,47)" rx="2" ry="2" />
<text  x="113.34" y="415.5" ></text>
</g>
<g >
<title>calc_global_load_tick (1 samples, 0.02%)</title><rect x="78.9" y="405" width="0.2" height="15.0" fill="rgb(234,25,26)" rx="2" ry="2" />
<text  x="81.90" y="415.5" ></text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force (1 samples, 0.02%)</title><rect x="787.3" y="581" width="0.2" height="15.0" fill="rgb(229,21,1)" rx="2" ry="2" />
<text  x="790.32" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.03%)</title><rect x="436.2" y="501" width="0.4" height="15.0" fill="rgb(244,37,8)" rx="2" ry="2" />
<text  x="439.22" y="511.5" ></text>
</g>
<g >
<title>ret_from_fork (6 samples, 0.10%)</title><rect x="1049.2" y="709" width="1.1" height="15.0" fill="rgb(225,184,21)" rx="2" ry="2" />
<text  x="1052.18" y="719.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (13 samples, 0.21%)</title><rect x="219.0" y="565" width="2.4" height="15.0" fill="rgb(215,225,20)" rx="2" ry="2" />
<text  x="221.97" y="575.5" ></text>
</g>
<g >
<title>run_rebalance_domains (77 samples, 1.23%)</title><rect x="97.4" y="469" width="14.4" height="15.0" fill="rgb(236,20,17)" rx="2" ry="2" />
<text  x="100.35" y="479.5" ></text>
</g>
<g >
<title>process_one_work (2 samples, 0.03%)</title><rect x="1049.6" y="661" width="0.3" height="15.0" fill="rgb(244,138,41)" rx="2" ry="2" />
<text  x="1052.56" y="671.5" ></text>
</g>
<g >
<title>vfs_iter_read (2 samples, 0.03%)</title><rect x="613.7" y="405" width="0.4" height="15.0" fill="rgb(228,50,21)" rx="2" ry="2" />
<text  x="616.74" y="415.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="1050.5" y="597" width="0.2" height="15.0" fill="rgb(216,11,6)" rx="2" ry="2" />
<text  x="1053.50" y="607.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (2 samples, 0.03%)</title><rect x="1095.3" y="453" width="0.4" height="15.0" fill="rgb(231,72,11)" rx="2" ry="2" />
<text  x="1098.31" y="463.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (3 samples, 0.05%)</title><rect x="259.4" y="693" width="0.6" height="15.0" fill="rgb(235,91,21)" rx="2" ry="2" />
<text  x="262.44" y="703.5" ></text>
</g>
<g >
<title>hrtimer_cancel (2 samples, 0.03%)</title><rect x="1188.3" y="549" width="0.4" height="15.0" fill="rgb(209,209,30)" rx="2" ry="2" />
<text  x="1191.31" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (3 samples, 0.05%)</title><rect x="232.9" y="581" width="0.6" height="15.0" fill="rgb(218,174,26)" rx="2" ry="2" />
<text  x="235.90" y="591.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (3 samples, 0.05%)</title><rect x="1174.2" y="501" width="0.6" height="15.0" fill="rgb(242,71,27)" rx="2" ry="2" />
<text  x="1177.19" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (26 samples, 0.41%)</title><rect x="427.6" y="533" width="4.9" height="15.0" fill="rgb(206,165,53)" rx="2" ry="2" />
<text  x="430.56" y="543.5" ></text>
</g>
<g >
<title>profile_tick (3 samples, 0.05%)</title><rect x="1086.3" y="421" width="0.5" height="15.0" fill="rgb(243,107,24)" rx="2" ry="2" />
<text  x="1089.27" y="431.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (17 samples, 0.27%)</title><rect x="1089.8" y="373" width="3.2" height="15.0" fill="rgb(236,140,1)" rx="2" ry="2" />
<text  x="1092.85" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (38 samples, 0.61%)</title><rect x="578.0" y="517" width="7.1" height="15.0" fill="rgb(252,60,26)" rx="2" ry="2" />
<text  x="580.97" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.18%)</title><rect x="745.7" y="517" width="2.1" height="15.0" fill="rgb(211,211,5)" rx="2" ry="2" />
<text  x="748.71" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (6 samples, 0.10%)</title><rect x="271.5" y="693" width="1.1" height="15.0" fill="rgb(244,55,54)" rx="2" ry="2" />
<text  x="274.49" y="703.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (1 samples, 0.02%)</title><rect x="1046.4" y="533" width="0.1" height="15.0" fill="rgb(227,195,48)" rx="2" ry="2" />
<text  x="1049.36" y="543.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.03%)</title><rect x="790.7" y="597" width="0.4" height="15.0" fill="rgb(212,145,44)" rx="2" ry="2" />
<text  x="793.71" y="607.5" ></text>
</g>
<g >
<title>generic_exec_single (63 samples, 1.01%)</title><rect x="239.7" y="469" width="11.8" height="15.0" fill="rgb(227,107,52)" rx="2" ry="2" />
<text  x="242.67" y="479.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (1 samples, 0.02%)</title><rect x="269.8" y="629" width="0.2" height="15.0" fill="rgb(247,200,35)" rx="2" ry="2" />
<text  x="272.80" y="639.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="585.5" y="453" width="2.3" height="15.0" fill="rgb(214,78,27)" rx="2" ry="2" />
<text  x="588.50" y="463.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="1186.4" y="549" width="0.2" height="15.0" fill="rgb(215,196,44)" rx="2" ry="2" />
<text  x="1189.42" y="559.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,180 samples, 18.83%)</title><rect x="17.2" y="709" width="222.1" height="15.0" fill="rgb(240,1,48)" rx="2" ry="2" />
<text  x="20.15" y="719.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (3 samples, 0.05%)</title><rect x="890.1" y="485" width="0.6" height="15.0" fill="rgb(213,56,43)" rx="2" ry="2" />
<text  x="893.11" y="495.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="455.2" y="565" width="0.2" height="15.0" fill="rgb(239,8,9)" rx="2" ry="2" />
<text  x="458.23" y="575.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (18 samples, 0.29%)</title><rect x="440.9" y="565" width="3.4" height="15.0" fill="rgb(247,159,14)" rx="2" ry="2" />
<text  x="443.92" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="614.1" y="533" width="0.2" height="15.0" fill="rgb(236,6,50)" rx="2" ry="2" />
<text  x="617.12" y="543.5" ></text>
</g>
<g >
<title>NaClWaitForThreadToExit (1 samples, 0.02%)</title><rect x="369.0" y="629" width="0.2" height="15.0" fill="rgb(246,149,44)" rx="2" ry="2" />
<text  x="372.01" y="639.5" ></text>
</g>
<g >
<title>unmap_single_vma (3 samples, 0.05%)</title><rect x="367.1" y="437" width="0.6" height="15.0" fill="rgb(248,63,17)" rx="2" ry="2" />
<text  x="370.13" y="447.5" ></text>
</g>
<g >
<title>perf_mmap__push (1 samples, 0.02%)</title><rect x="251.5" y="645" width="0.2" height="15.0" fill="rgb(245,176,53)" rx="2" ry="2" />
<text  x="254.53" y="655.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.08%)</title><rect x="199.2" y="501" width="0.9" height="15.0" fill="rgb(208,24,46)" rx="2" ry="2" />
<text  x="202.20" y="511.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.02%)</title><rect x="898.4" y="485" width="0.2" height="15.0" fill="rgb(234,82,48)" rx="2" ry="2" />
<text  x="901.39" y="495.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (37 samples, 0.59%)</title><rect x="437.3" y="581" width="7.0" height="15.0" fill="rgb(243,190,0)" rx="2" ry="2" />
<text  x="440.35" y="591.5" ></text>
</g>
<g >
<title>update_blocked_averages (12 samples, 0.19%)</title><rect x="222.9" y="549" width="2.3" height="15.0" fill="rgb(241,107,47)" rx="2" ry="2" />
<text  x="225.92" y="559.5" ></text>
</g>
<g >
<title>NaClLog (6 samples, 0.10%)</title><rect x="687.5" y="645" width="1.2" height="15.0" fill="rgb(235,206,15)" rx="2" ry="2" />
<text  x="690.54" y="655.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1049.6" y="469" width="0.1" height="15.0" fill="rgb(219,74,50)" rx="2" ry="2" />
<text  x="1052.56" y="479.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (2 samples, 0.03%)</title><rect x="1188.9" y="533" width="0.3" height="15.0" fill="rgb(214,154,29)" rx="2" ry="2" />
<text  x="1191.87" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="83.6" y="373" width="0.2" height="15.0" fill="rgb(234,108,12)" rx="2" ry="2" />
<text  x="86.61" y="383.5" ></text>
</g>
<g >
<title>account_process_tick (2 samples, 0.03%)</title><rect x="78.3" y="405" width="0.4" height="15.0" fill="rgb(219,45,49)" rx="2" ry="2" />
<text  x="81.34" y="415.5" ></text>
</g>
<g >
<title>rcu_needs_cpu (1 samples, 0.02%)</title><rect x="210.9" y="517" width="0.2" height="15.0" fill="rgb(209,201,50)" rx="2" ry="2" />
<text  x="213.87" y="527.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.03%)</title><rect x="895.0" y="549" width="0.4" height="15.0" fill="rgb(226,43,24)" rx="2" ry="2" />
<text  x="898.00" y="559.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (131 samples, 2.09%)</title><rect x="737.8" y="613" width="24.7" height="15.0" fill="rgb(210,211,35)" rx="2" ry="2" />
<text  x="740.80" y="623.5" >d..</text>
</g>
<g >
<title>docker-init (1 samples, 0.02%)</title><rect x="10.0" y="725" width="0.2" height="15.0" fill="rgb(244,31,41)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.08%)</title><rect x="752.5" y="485" width="0.9" height="15.0" fill="rgb(220,130,1)" rx="2" ry="2" />
<text  x="755.49" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.06%)</title><rect x="889.4" y="485" width="0.7" height="15.0" fill="rgb(232,206,47)" rx="2" ry="2" />
<text  x="892.35" y="495.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (4 samples, 0.06%)</title><rect x="1046.5" y="709" width="0.8" height="15.0" fill="rgb(249,53,51)" rx="2" ry="2" />
<text  x="1049.55" y="719.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (3 samples, 0.05%)</title><rect x="1175.9" y="533" width="0.5" height="15.0" fill="rgb(215,165,37)" rx="2" ry="2" />
<text  x="1178.88" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (97 samples, 1.55%)</title><rect x="867.7" y="501" width="18.3" height="15.0" fill="rgb(210,40,48)" rx="2" ry="2" />
<text  x="870.70" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.03%)</title><rect x="448.5" y="485" width="0.3" height="15.0" fill="rgb(251,207,48)" rx="2" ry="2" />
<text  x="451.45" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.03%)</title><rect x="453.5" y="485" width="0.4" height="15.0" fill="rgb(208,197,41)" rx="2" ry="2" />
<text  x="456.54" y="495.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1 samples, 0.02%)</title><rect x="1036.4" y="549" width="0.2" height="15.0" fill="rgb(250,214,16)" rx="2" ry="2" />
<text  x="1039.38" y="559.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (114 samples, 1.82%)</title><rect x="952.2" y="565" width="21.5" height="15.0" fill="rgb(205,129,11)" rx="2" ry="2" />
<text  x="955.23" y="575.5" >r..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (38 samples, 0.61%)</title><rect x="578.0" y="549" width="7.1" height="15.0" fill="rgb(251,184,15)" rx="2" ry="2" />
<text  x="580.97" y="559.5" ></text>
</g>
<g >
<title>NaClAppDtor (10 samples, 0.16%)</title><rect x="367.1" y="597" width="1.9" height="15.0" fill="rgb(225,227,4)" rx="2" ry="2" />
<text  x="370.13" y="607.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="895.2" y="501" width="0.2" height="15.0" fill="rgb(224,224,3)" rx="2" ry="2" />
<text  x="898.19" y="511.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="1036.4" y="565" width="0.2" height="15.0" fill="rgb(213,142,22)" rx="2" ry="2" />
<text  x="1039.38" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.24%)</title><rect x="437.3" y="549" width="2.9" height="15.0" fill="rgb(212,169,21)" rx="2" ry="2" />
<text  x="440.35" y="559.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (9 samples, 0.14%)</title><rect x="1187.6" y="581" width="1.6" height="15.0" fill="rgb(206,174,12)" rx="2" ry="2" />
<text  x="1190.55" y="591.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="19.0" y="389" width="0.2" height="15.0" fill="rgb(222,75,46)" rx="2" ry="2" />
<text  x="22.04" y="399.5" ></text>
</g>
<g >
<title>menu_select (49 samples, 0.78%)</title><rect x="1165.9" y="549" width="9.2" height="15.0" fill="rgb(244,179,53)" rx="2" ry="2" />
<text  x="1168.90" y="559.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.18%)</title><rect x="593.2" y="453" width="2.1" height="15.0" fill="rgb(253,120,8)" rx="2" ry="2" />
<text  x="596.22" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="598.5" y="437" width="2.3" height="15.0" fill="rgb(249,146,34)" rx="2" ry="2" />
<text  x="601.49" y="447.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.51%)</title><rect x="499.3" y="565" width="6.0" height="15.0" fill="rgb(245,111,15)" rx="2" ry="2" />
<text  x="502.28" y="575.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (80 samples, 1.28%)</title><rect x="1082.5" y="485" width="15.1" height="15.0" fill="rgb(240,66,41)" rx="2" ry="2" />
<text  x="1085.50" y="495.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="251.5" y="485" width="0.2" height="15.0" fill="rgb(246,179,30)" rx="2" ry="2" />
<text  x="254.53" y="495.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (8 samples, 0.13%)</title><rect x="615.4" y="549" width="1.5" height="15.0" fill="rgb(231,215,44)" rx="2" ry="2" />
<text  x="618.44" y="559.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="1048.8" y="629" width="0.2" height="15.0" fill="rgb(226,137,11)" rx="2" ry="2" />
<text  x="1051.81" y="639.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1036.8" y="533" width="0.1" height="15.0" fill="rgb(218,105,6)" rx="2" ry="2" />
<text  x="1039.76" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="749.5" y="469" width="0.4" height="15.0" fill="rgb(243,179,6)" rx="2" ry="2" />
<text  x="752.48" y="479.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (2 samples, 0.03%)</title><rect x="1165.5" y="549" width="0.4" height="15.0" fill="rgb(218,61,18)" rx="2" ry="2" />
<text  x="1168.53" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1038.8" y="629" width="0.2" height="15.0" fill="rgb(238,132,14)" rx="2" ry="2" />
<text  x="1041.83" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (33 samples, 0.53%)</title><rect x="493.1" y="565" width="6.2" height="15.0" fill="rgb(224,18,42)" rx="2" ry="2" />
<text  x="496.07" y="575.5" ></text>
</g>
<g >
<title>load_balance (3 samples, 0.05%)</title><rect x="23.2" y="501" width="0.5" height="15.0" fill="rgb(243,126,1)" rx="2" ry="2" />
<text  x="26.18" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (60 samples, 0.96%)</title><rect x="791.1" y="597" width="11.3" height="15.0" fill="rgb(207,196,44)" rx="2" ry="2" />
<text  x="794.08" y="607.5" ></text>
</g>
<g >
<title>rest_init (609 samples, 9.72%)</title><rect x="1075.4" y="629" width="114.6" height="15.0" fill="rgb(227,166,12)" rx="2" ry="2" />
<text  x="1078.35" y="639.5" >rest_init</text>
</g>
<g >
<title>core::sync::atomic::atomic_add (23 samples, 0.37%)</title><rect x="728.0" y="581" width="4.3" height="15.0" fill="rgb(211,134,38)" rx="2" ry="2" />
<text  x="731.02" y="591.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (2 samples, 0.03%)</title><rect x="278.5" y="693" width="0.3" height="15.0" fill="rgb(254,136,2)" rx="2" ry="2" />
<text  x="281.46" y="703.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (36 samples, 0.57%)</title><rect x="945.1" y="549" width="6.8" height="15.0" fill="rgb(228,127,4)" rx="2" ry="2" />
<text  x="948.08" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (54 samples, 0.86%)</title><rect x="963.3" y="517" width="10.2" height="15.0" fill="rgb(237,225,34)" rx="2" ry="2" />
<text  x="966.34" y="527.5" ></text>
</g>
<g >
<title>rcu_idle_exit (7 samples, 0.11%)</title><rect x="1160.4" y="533" width="1.4" height="15.0" fill="rgb(238,46,2)" rx="2" ry="2" />
<text  x="1163.44" y="543.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 0.02%)</title><rect x="1109.0" y="533" width="0.2" height="15.0" fill="rgb(210,97,40)" rx="2" ry="2" />
<text  x="1112.05" y="543.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="1097.6" y="485" width="0.2" height="15.0" fill="rgb(242,225,18)" rx="2" ry="2" />
<text  x="1100.57" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (91 samples, 1.45%)</title><rect x="71.9" y="469" width="17.2" height="15.0" fill="rgb(220,206,51)" rx="2" ry="2" />
<text  x="74.94" y="479.5" ></text>
</g>
<g >
<title>read_tsc (5 samples, 0.08%)</title><rect x="94.7" y="469" width="1.0" height="15.0" fill="rgb(248,6,42)" rx="2" ry="2" />
<text  x="97.72" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.18%)</title><rect x="901.4" y="469" width="2.1" height="15.0" fill="rgb(213,20,28)" rx="2" ry="2" />
<text  x="904.40" y="479.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (17 samples, 0.27%)</title><rect x="448.8" y="533" width="3.2" height="15.0" fill="rgb(244,179,20)" rx="2" ry="2" />
<text  x="451.83" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="15.6" y="693" width="0.4" height="15.0" fill="rgb(215,203,45)" rx="2" ry="2" />
<text  x="18.65" y="703.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.03%)</title><rect x="915.7" y="469" width="0.4" height="15.0" fill="rgb(229,12,34)" rx="2" ry="2" />
<text  x="918.71" y="479.5" ></text>
</g>
<g >
<title>pick_next_task (23 samples, 0.37%)</title><rect x="226.5" y="549" width="4.3" height="15.0" fill="rgb(211,127,22)" rx="2" ry="2" />
<text  x="229.50" y="559.5" ></text>
</g>
<g >
<title>load_balance (18 samples, 0.29%)</title><rect x="1102.1" y="437" width="3.4" height="15.0" fill="rgb(206,56,39)" rx="2" ry="2" />
<text  x="1105.08" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (100 samples, 1.60%)</title><rect x="588.3" y="549" width="18.9" height="15.0" fill="rgb(219,215,3)" rx="2" ry="2" />
<text  x="591.33" y="559.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (3 samples, 0.05%)</title><rect x="918.5" y="485" width="0.6" height="15.0" fill="rgb(212,158,27)" rx="2" ry="2" />
<text  x="921.53" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (43 samples, 0.69%)</title><rect x="588.9" y="485" width="8.1" height="15.0" fill="rgb(213,74,47)" rx="2" ry="2" />
<text  x="591.89" y="495.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.02%)</title><rect x="239.5" y="517" width="0.2" height="15.0" fill="rgb(233,189,2)" rx="2" ry="2" />
<text  x="242.49" y="527.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="21.3" y="341" width="0.2" height="15.0" fill="rgb(214,96,16)" rx="2" ry="2" />
<text  x="24.30" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="239.3" y="709" width="0.2" height="15.0" fill="rgb(246,177,26)" rx="2" ry="2" />
<text  x="242.30" y="719.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.02%)</title><rect x="251.5" y="437" width="0.2" height="15.0" fill="rgb(218,151,42)" rx="2" ry="2" />
<text  x="254.53" y="447.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (5 samples, 0.08%)</title><rect x="21.3" y="469" width="0.9" height="15.0" fill="rgb(253,227,10)" rx="2" ry="2" />
<text  x="24.30" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.10%)</title><rect x="1047.3" y="693" width="1.1" height="15.0" fill="rgb(212,221,48)" rx="2" ry="2" />
<text  x="1050.30" y="703.5" ></text>
</g>
<g >
<title>native_apic_mem_write (4 samples, 0.06%)</title><rect x="113.7" y="501" width="0.8" height="15.0" fill="rgb(205,66,7)" rx="2" ry="2" />
<text  x="116.73" y="511.5" ></text>
</g>
<g >
<title>_start (1 samples, 0.02%)</title><rect x="1046.4" y="709" width="0.1" height="15.0" fill="rgb(253,37,11)" rx="2" ry="2" />
<text  x="1049.36" y="719.5" ></text>
</g>
<g >
<title>rcu_qs (1 samples, 0.02%)</title><rect x="232.0" y="549" width="0.1" height="15.0" fill="rgb(224,194,16)" rx="2" ry="2" />
<text  x="234.96" y="559.5" ></text>
</g>
<g >
<title>timerqueue_del (3 samples, 0.05%)</title><rect x="1084.6" y="437" width="0.5" height="15.0" fill="rgb(224,13,52)" rx="2" ry="2" />
<text  x="1087.58" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 1.01%)</title><rect x="239.7" y="389" width="11.8" height="15.0" fill="rgb(244,84,10)" rx="2" ry="2" />
<text  x="242.67" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (260 samples, 4.15%)</title><rect x="515.3" y="501" width="48.9" height="15.0" fill="rgb(245,55,47)" rx="2" ry="2" />
<text  x="518.28" y="511.5" >core..</text>
</g>
<g >
<title>cpu_startup_entry (609 samples, 9.72%)</title><rect x="1075.4" y="613" width="114.6" height="15.0" fill="rgb(245,4,47)" rx="2" ry="2" />
<text  x="1078.35" y="623.5" >cpu_startup_en..</text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.06%)</title><rect x="920.0" y="485" width="0.8" height="15.0" fill="rgb(245,103,10)" rx="2" ry="2" />
<text  x="923.04" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="587.4" y="421" width="0.4" height="15.0" fill="rgb(237,5,50)" rx="2" ry="2" />
<text  x="590.39" y="431.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (21 samples, 0.34%)</title><rect x="103.2" y="405" width="3.9" height="15.0" fill="rgb(216,3,43)" rx="2" ry="2" />
<text  x="106.19" y="415.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.05%)</title><rect x="449.8" y="437" width="0.5" height="15.0" fill="rgb(242,136,8)" rx="2" ry="2" />
<text  x="452.77" y="447.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="1188.7" y="517" width="0.2" height="15.0" fill="rgb(205,223,8)" rx="2" ry="2" />
<text  x="1191.68" y="527.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (5 samples, 0.08%)</title><rect x="93.8" y="469" width="0.9" height="15.0" fill="rgb(237,77,1)" rx="2" ry="2" />
<text  x="96.77" y="479.5" ></text>
</g>
<g >
<title>is_cpu_allowed (1 samples, 0.02%)</title><rect x="22.8" y="469" width="0.2" height="15.0" fill="rgb(237,128,32)" rx="2" ry="2" />
<text  x="25.80" y="479.5" ></text>
</g>
<g >
<title>unmap_vmas (3 samples, 0.05%)</title><rect x="367.1" y="453" width="0.6" height="15.0" fill="rgb(220,149,14)" rx="2" ry="2" />
<text  x="370.13" y="463.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (2 samples, 0.03%)</title><rect x="1049.2" y="677" width="0.4" height="15.0" fill="rgb(241,77,46)" rx="2" ry="2" />
<text  x="1052.18" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (3 samples, 0.05%)</title><rect x="369.8" y="501" width="0.5" height="15.0" fill="rgb(239,216,18)" rx="2" ry="2" />
<text  x="372.76" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (121 samples, 1.93%)</title><rect x="617.1" y="517" width="22.8" height="15.0" fill="rgb(245,172,2)" rx="2" ry="2" />
<text  x="620.13" y="527.5" >c..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="438.7" y="501" width="0.2" height="15.0" fill="rgb(212,136,3)" rx="2" ry="2" />
<text  x="441.66" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.29%)</title><rect x="440.9" y="517" width="3.4" height="15.0" fill="rgb(211,178,0)" rx="2" ry="2" />
<text  x="443.92" y="527.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (8 samples, 0.13%)</title><rect x="22.4" y="581" width="1.5" height="15.0" fill="rgb(227,199,35)" rx="2" ry="2" />
<text  x="25.43" y="591.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="1035.4" y="645" width="0.2" height="15.0" fill="rgb(241,14,13)" rx="2" ry="2" />
<text  x="1038.44" y="655.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (13 samples, 0.21%)</title><rect x="585.5" y="501" width="2.5" height="15.0" fill="rgb(243,44,26)" rx="2" ry="2" />
<text  x="588.50" y="511.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.02%)</title><rect x="367.3" y="373" width="0.2" height="15.0" fill="rgb(221,96,37)" rx="2" ry="2" />
<text  x="370.31" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_enable (2 samples, 0.03%)</title><rect x="86.6" y="357" width="0.4" height="15.0" fill="rgb(250,38,20)" rx="2" ry="2" />
<text  x="89.62" y="367.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (17 samples, 0.27%)</title><rect x="448.8" y="517" width="3.2" height="15.0" fill="rgb(242,74,29)" rx="2" ry="2" />
<text  x="451.83" y="527.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::lock_shared_slow (1 samples, 0.02%)</title><rect x="816.9" y="517" width="0.2" height="15.0" fill="rgb(251,22,32)" rx="2" ry="2" />
<text  x="819.87" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="251.5" y="549" width="0.2" height="15.0" fill="rgb(208,133,52)" rx="2" ry="2" />
<text  x="254.53" y="559.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (1 samples, 0.02%)</title><rect x="1088.3" y="405" width="0.2" height="15.0" fill="rgb(207,136,16)" rx="2" ry="2" />
<text  x="1091.34" y="415.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (3 samples, 0.05%)</title><rect x="443.6" y="469" width="0.5" height="15.0" fill="rgb(240,69,50)" rx="2" ry="2" />
<text  x="446.56" y="479.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="1036.0" y="533" width="0.4" height="15.0" fill="rgb(234,15,40)" rx="2" ry="2" />
<text  x="1039.01" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (267 samples, 4.26%)</title><rect x="817.4" y="501" width="50.3" height="15.0" fill="rgb(242,190,8)" rx="2" ry="2" />
<text  x="820.44" y="511.5" >core:..</text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (369 samples, 5.89%)</title><rect x="816.5" y="549" width="69.5" height="15.0" fill="rgb(229,88,26)" rx="2" ry="2" />
<text  x="819.50" y="559.5" >lock_ap..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.29%)</title><rect x="440.9" y="485" width="3.4" height="15.0" fill="rgb(236,145,33)" rx="2" ry="2" />
<text  x="443.92" y="495.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.27%)</title><rect x="895.4" y="549" width="3.2" height="15.0" fill="rgb(248,30,47)" rx="2" ry="2" />
<text  x="898.38" y="559.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.02%)</title><rect x="1046.4" y="693" width="0.1" height="15.0" fill="rgb(209,158,44)" rx="2" ry="2" />
<text  x="1049.36" y="703.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.02%)</title><rect x="202.2" y="549" width="0.2" height="15.0" fill="rgb(250,151,43)" rx="2" ry="2" />
<text  x="205.21" y="559.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (13 samples, 0.21%)</title><rect x="598.5" y="517" width="2.4" height="15.0" fill="rgb(240,61,33)" rx="2" ry="2" />
<text  x="601.49" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="233.1" y="517" width="0.4" height="15.0" fill="rgb(254,93,50)" rx="2" ry="2" />
<text  x="236.09" y="527.5" ></text>
</g>
<g >
<title>dispatcher@plt (1 samples, 0.02%)</title><rect x="973.9" y="629" width="0.2" height="15.0" fill="rgb(236,216,30)" rx="2" ry="2" />
<text  x="976.88" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt; (26 samples, 0.41%)</title><rect x="427.6" y="613" width="4.9" height="15.0" fill="rgb(208,212,24)" rx="2" ry="2" />
<text  x="430.56" y="623.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="454.7" y="501" width="0.2" height="15.0" fill="rgb(252,158,42)" rx="2" ry="2" />
<text  x="457.66" y="511.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (3 samples, 0.05%)</title><rect x="916.5" y="485" width="0.5" height="15.0" fill="rgb(249,149,5)" rx="2" ry="2" />
<text  x="919.46" y="495.5" ></text>
</g>
<g >
<title>nohz_csd_func (6 samples, 0.10%)</title><rect x="220.3" y="549" width="1.1" height="15.0" fill="rgb(253,127,41)" rx="2" ry="2" />
<text  x="223.28" y="559.5" ></text>
</g>
<g >
<title>__queue_work (2 samples, 0.03%)</title><rect x="112.2" y="405" width="0.4" height="15.0" fill="rgb(225,75,35)" rx="2" ry="2" />
<text  x="115.22" y="415.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (2 samples, 0.03%)</title><rect x="59.7" y="565" width="0.4" height="15.0" fill="rgb(245,139,52)" rx="2" ry="2" />
<text  x="62.70" y="575.5" ></text>
</g>
<g >
<title>do_idle (606 samples, 9.67%)</title><rect x="1075.4" y="597" width="114.0" height="15.0" fill="rgb(246,192,11)" rx="2" ry="2" />
<text  x="1078.35" y="607.5" >do_idle</text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.02%)</title><rect x="239.5" y="437" width="0.2" height="15.0" fill="rgb(228,105,35)" rx="2" ry="2" />
<text  x="242.49" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.16%)</title><rect x="367.1" y="533" width="1.9" height="15.0" fill="rgb(242,194,25)" rx="2" ry="2" />
<text  x="370.13" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (16 samples, 0.26%)</title><rect x="19.4" y="549" width="3.0" height="15.0" fill="rgb(249,154,52)" rx="2" ry="2" />
<text  x="22.41" y="559.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.02%)</title><rect x="235.3" y="501" width="0.2" height="15.0" fill="rgb(214,142,32)" rx="2" ry="2" />
<text  x="238.34" y="511.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="454.7" y="485" width="0.2" height="15.0" fill="rgb(215,16,21)" rx="2" ry="2" />
<text  x="457.66" y="495.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (13 samples, 0.21%)</title><rect x="598.5" y="485" width="2.4" height="15.0" fill="rgb(227,228,4)" rx="2" ry="2" />
<text  x="601.49" y="495.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (1 samples, 0.02%)</title><rect x="110.0" y="437" width="0.2" height="15.0" fill="rgb(254,182,38)" rx="2" ry="2" />
<text  x="112.96" y="447.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (335 samples, 5.34%)</title><rect x="513.6" y="549" width="63.1" height="15.0" fill="rgb(241,29,14)" rx="2" ry="2" />
<text  x="516.59" y="559.5" >lock_a..</text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="440.7" y="517" width="0.2" height="15.0" fill="rgb(245,214,7)" rx="2" ry="2" />
<text  x="443.73" y="527.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (220 samples, 3.51%)</title><rect x="17.3" y="645" width="41.5" height="15.0" fill="rgb(245,229,43)" rx="2" ry="2" />
<text  x="20.34" y="655.5" >cpu..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (102 samples, 1.63%)</title><rect x="588.0" y="565" width="19.2" height="15.0" fill="rgb(225,112,48)" rx="2" ry="2" />
<text  x="590.95" y="575.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="228.9" y="485" width="0.2" height="15.0" fill="rgb(229,160,15)" rx="2" ry="2" />
<text  x="231.94" y="495.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (1 samples, 0.02%)</title><rect x="1087.8" y="405" width="0.2" height="15.0" fill="rgb(252,118,50)" rx="2" ry="2" />
<text  x="1090.78" y="415.5" ></text>
</g>
<g >
<title>__receive_buf (1 samples, 0.02%)</title><rect x="1049.6" y="565" width="0.1" height="15.0" fill="rgb(215,121,18)" rx="2" ry="2" />
<text  x="1052.56" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.11%)</title><rect x="603.4" y="469" width="1.3" height="15.0" fill="rgb(217,14,21)" rx="2" ry="2" />
<text  x="606.39" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.24%)</title><rect x="748.0" y="501" width="2.8" height="15.0" fill="rgb(236,80,42)" rx="2" ry="2" />
<text  x="750.97" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (5 samples, 0.08%)</title><rect x="742.9" y="501" width="0.9" height="15.0" fill="rgb(229,89,27)" rx="2" ry="2" />
<text  x="745.89" y="511.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.03%)</title><rect x="106.8" y="373" width="0.3" height="15.0" fill="rgb(217,152,26)" rx="2" ry="2" />
<text  x="109.76" y="383.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (6 samples, 0.10%)</title><rect x="1172.1" y="517" width="1.1" height="15.0" fill="rgb(205,53,21)" rx="2" ry="2" />
<text  x="1175.12" y="527.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (14 samples, 0.22%)</title><rect x="104.5" y="389" width="2.6" height="15.0" fill="rgb(226,11,26)" rx="2" ry="2" />
<text  x="107.51" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="210.7" y="501" width="0.2" height="15.0" fill="rgb(214,167,40)" rx="2" ry="2" />
<text  x="213.68" y="511.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="113.0" y="469" width="0.2" height="15.0" fill="rgb(216,56,46)" rx="2" ry="2" />
<text  x="115.98" y="479.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.02%)</title><rect x="58.8" y="645" width="0.1" height="15.0" fill="rgb(238,33,3)" rx="2" ry="2" />
<text  x="61.76" y="655.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.10%)</title><rect x="439.0" y="517" width="1.2" height="15.0" fill="rgb(210,75,32)" rx="2" ry="2" />
<text  x="442.04" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.24%)</title><rect x="452.0" y="533" width="2.9" height="15.0" fill="rgb(239,22,29)" rx="2" ry="2" />
<text  x="455.03" y="543.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1189.1" y="485" width="0.1" height="15.0" fill="rgb(225,209,2)" rx="2" ry="2" />
<text  x="1192.06" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (56 samples, 0.89%)</title><rect x="444.3" y="565" width="10.6" height="15.0" fill="rgb(224,137,42)" rx="2" ry="2" />
<text  x="447.31" y="575.5" ></text>
</g>
<g >
<title>__update_idle_core (2 samples, 0.03%)</title><rect x="229.9" y="517" width="0.4" height="15.0" fill="rgb(226,221,4)" rx="2" ry="2" />
<text  x="232.89" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.03%)</title><rect x="451.7" y="501" width="0.3" height="15.0" fill="rgb(233,96,51)" rx="2" ry="2" />
<text  x="454.65" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.26%)</title><rect x="444.5" y="533" width="3.0" height="15.0" fill="rgb(245,113,38)" rx="2" ry="2" />
<text  x="447.50" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.53%)</title><rect x="493.1" y="581" width="6.2" height="15.0" fill="rgb(239,201,23)" rx="2" ry="2" />
<text  x="496.07" y="591.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="98.1" y="453" width="0.2" height="15.0" fill="rgb(214,95,29)" rx="2" ry="2" />
<text  x="101.10" y="463.5" ></text>
</g>
<g >
<title>DynArrayGet (2 samples, 0.03%)</title><rect x="1038.5" y="693" width="0.3" height="15.0" fill="rgb(205,203,10)" rx="2" ry="2" />
<text  x="1041.45" y="703.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (1 samples, 0.02%)</title><rect x="1040.3" y="661" width="0.2" height="15.0" fill="rgb(254,203,17)" rx="2" ry="2" />
<text  x="1043.34" y="671.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (26 samples, 0.41%)</title><rect x="732.9" y="565" width="4.9" height="15.0" fill="rgb(222,89,1)" rx="2" ry="2" />
<text  x="735.91" y="575.5" ></text>
</g>
<g >
<title>__do_munmap (3 samples, 0.05%)</title><rect x="369.8" y="421" width="0.5" height="15.0" fill="rgb(231,8,9)" rx="2" ry="2" />
<text  x="372.76" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.53%)</title><rect x="600.9" y="517" width="6.3" height="15.0" fill="rgb(233,148,16)" rx="2" ry="2" />
<text  x="603.94" y="527.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (1 samples, 0.02%)</title><rect x="21.5" y="277" width="0.2" height="15.0" fill="rgb(227,214,10)" rx="2" ry="2" />
<text  x="24.48" y="287.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="1085.9" y="421" width="0.2" height="15.0" fill="rgb(223,112,49)" rx="2" ry="2" />
<text  x="1088.89" y="431.5" ></text>
</g>
<g >
<title>net_rx_action (16 samples, 0.26%)</title><rect x="19.4" y="533" width="3.0" height="15.0" fill="rgb(215,200,44)" rx="2" ry="2" />
<text  x="22.41" y="543.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="427.4" y="613" width="0.2" height="15.0" fill="rgb(214,169,23)" rx="2" ry="2" />
<text  x="430.37" y="623.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (506 samples, 8.07%)</title><rect x="512.5" y="597" width="95.2" height="15.0" fill="rgb(217,112,44)" rx="2" ry="2" />
<text  x="515.46" y="607.5" >dashmap::Da..</text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (2 samples, 0.03%)</title><rect x="601.1" y="485" width="0.4" height="15.0" fill="rgb(209,90,48)" rx="2" ry="2" />
<text  x="604.13" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.11%)</title><rect x="590.2" y="453" width="1.3" height="15.0" fill="rgb(205,213,19)" rx="2" ry="2" />
<text  x="593.21" y="463.5" ></text>
</g>
<g >
<title>tcp_orphan_update (2 samples, 0.03%)</title><rect x="112.6" y="421" width="0.4" height="15.0" fill="rgb(239,165,47)" rx="2" ry="2" />
<text  x="115.60" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.24%)</title><rect x="437.3" y="533" width="2.9" height="15.0" fill="rgb(229,229,44)" rx="2" ry="2" />
<text  x="440.35" y="543.5" ></text>
</g>
<g >
<title>tick_irq_enter (8 samples, 0.13%)</title><rect x="1098.5" y="485" width="1.5" height="15.0" fill="rgb(224,205,4)" rx="2" ry="2" />
<text  x="1101.51" y="495.5" ></text>
</g>
<g >
<title>[sel_ldr] (256 samples, 4.08%)</title><rect x="987.2" y="693" width="48.2" height="15.0" fill="rgb(235,124,32)" rx="2" ry="2" />
<text  x="990.25" y="703.5" >[sel..</text>
</g>
<g >
<title>__update_idle_core (3 samples, 0.05%)</title><rect x="1185.7" y="501" width="0.5" height="15.0" fill="rgb(226,157,16)" rx="2" ry="2" />
<text  x="1188.67" y="511.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1049.4" y="661" width="0.2" height="15.0" fill="rgb(241,192,40)" rx="2" ry="2" />
<text  x="1052.37" y="671.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (609 samples, 9.72%)</title><rect x="1075.4" y="677" width="114.6" height="15.0" fill="rgb(227,118,17)" rx="2" ry="2" />
<text  x="1078.35" y="687.5" >x86_64_start_r..</text>
</g>
<g >
<title>cpuidle_select (63 samples, 1.01%)</title><rect x="202.4" y="565" width="11.9" height="15.0" fill="rgb(218,218,45)" rx="2" ry="2" />
<text  x="205.40" y="575.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (2 samples, 0.03%)</title><rect x="663.8" y="517" width="0.4" height="15.0" fill="rgb(214,224,35)" rx="2" ry="2" />
<text  x="666.82" y="527.5" ></text>
</g>
<g >
<title>native_write_msr (63 samples, 1.01%)</title><rect x="239.7" y="357" width="11.8" height="15.0" fill="rgb(214,177,13)" rx="2" ry="2" />
<text  x="242.67" y="367.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (9 samples, 0.14%)</title><rect x="74.8" y="453" width="1.7" height="15.0" fill="rgb(233,78,34)" rx="2" ry="2" />
<text  x="77.76" y="463.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="1097.4" y="453" width="0.2" height="15.0" fill="rgb(207,23,43)" rx="2" ry="2" />
<text  x="1100.38" y="463.5" ></text>
</g>
<g >
<title>record__mmap_read_all (1 samples, 0.02%)</title><rect x="251.5" y="677" width="0.2" height="15.0" fill="rgb(233,70,8)" rx="2" ry="2" />
<text  x="254.53" y="687.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="1093.8" y="341" width="0.4" height="15.0" fill="rgb(249,143,46)" rx="2" ry="2" />
<text  x="1096.80" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.27%)</title><rect x="756.4" y="469" width="3.2" height="15.0" fill="rgb(242,94,31)" rx="2" ry="2" />
<text  x="759.44" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="817.2" y="501" width="0.2" height="15.0" fill="rgb(209,67,38)" rx="2" ry="2" />
<text  x="820.25" y="511.5" ></text>
</g>
<g >
<title>__common_interrupt (1 samples, 0.02%)</title><rect x="1050.5" y="565" width="0.2" height="15.0" fill="rgb(217,207,30)" rx="2" ry="2" />
<text  x="1053.50" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.03%)</title><rect x="251.9" y="693" width="0.4" height="15.0" fill="rgb(228,134,31)" rx="2" ry="2" />
<text  x="254.91" y="703.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (4 samples, 0.06%)</title><rect x="197.1" y="517" width="0.8" height="15.0" fill="rgb(249,207,8)" rx="2" ry="2" />
<text  x="200.13" y="527.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.02%)</title><rect x="1175.7" y="549" width="0.2" height="15.0" fill="rgb(245,120,5)" rx="2" ry="2" />
<text  x="1178.69" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (3 samples, 0.05%)</title><rect x="605.6" y="485" width="0.6" height="15.0" fill="rgb(251,73,39)" rx="2" ry="2" />
<text  x="608.65" y="495.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (562 samples, 8.97%)</title><rect x="815.4" y="597" width="105.8" height="15.0" fill="rgb(224,65,18)" rx="2" ry="2" />
<text  x="818.37" y="607.5" >dashmap::Das..</text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1036.4" y="517" width="0.2" height="15.0" fill="rgb(236,38,20)" rx="2" ry="2" />
<text  x="1039.38" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_idle_got_tick (1 samples, 0.02%)</title><rect x="1165.3" y="533" width="0.2" height="15.0" fill="rgb(232,17,5)" rx="2" ry="2" />
<text  x="1168.34" y="543.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="21.9" y="181" width="0.1" height="15.0" fill="rgb(251,65,11)" rx="2" ry="2" />
<text  x="24.86" y="191.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="598.5" y="453" width="2.3" height="15.0" fill="rgb(221,26,26)" rx="2" ry="2" />
<text  x="601.49" y="463.5" ></text>
</g>
<g >
<title>NaClSysExecve (11 samples, 0.18%)</title><rect x="367.1" y="661" width="2.1" height="15.0" fill="rgb(228,134,54)" rx="2" ry="2" />
<text  x="370.13" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;usize,dashmap::util::SharedValue&lt;rustposix::safeposix::filesystem::Inode&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="1046.4" y="277" width="0.1" height="15.0" fill="rgb(216,90,0)" rx="2" ry="2" />
<text  x="1049.36" y="287.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="222.7" y="549" width="0.2" height="15.0" fill="rgb(219,228,27)" rx="2" ry="2" />
<text  x="225.73" y="559.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (17 samples, 0.27%)</title><rect x="895.4" y="501" width="3.2" height="15.0" fill="rgb(239,33,32)" rx="2" ry="2" />
<text  x="898.38" y="511.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="1049.9" y="629" width="0.2" height="15.0" fill="rgb(244,47,51)" rx="2" ry="2" />
<text  x="1052.94" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="369.8" y="533" width="0.5" height="15.0" fill="rgb(231,19,2)" rx="2" ry="2" />
<text  x="372.76" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8 samples, 0.13%)</title><rect x="22.4" y="597" width="1.5" height="15.0" fill="rgb(235,229,13)" rx="2" ry="2" />
<text  x="25.43" y="607.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (20 samples, 0.32%)</title><rect x="641.0" y="565" width="3.8" height="15.0" fill="rgb(225,123,44)" rx="2" ry="2" />
<text  x="644.04" y="575.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (155 samples, 2.47%)</title><rect x="1079.9" y="517" width="29.1" height="15.0" fill="rgb(206,129,15)" rx="2" ry="2" />
<text  x="1082.87" y="527.5" >sy..</text>
</g>
<g >
<title>schedule_idle (1 samples, 0.02%)</title><rect x="238.5" y="597" width="0.2" height="15.0" fill="rgb(250,35,48)" rx="2" ry="2" />
<text  x="241.54" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt; (32 samples, 0.51%)</title><rect x="499.3" y="597" width="6.0" height="15.0" fill="rgb(235,67,30)" rx="2" ry="2" />
<text  x="502.28" y="607.5" ></text>
</g>
<g >
<title>read_tsc (3 samples, 0.05%)</title><rect x="1099.4" y="469" width="0.6" height="15.0" fill="rgb(216,70,54)" rx="2" ry="2" />
<text  x="1102.45" y="479.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.02%)</title><rect x="1088.9" y="389" width="0.2" height="15.0" fill="rgb(253,77,6)" rx="2" ry="2" />
<text  x="1091.91" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (23 samples, 0.37%)</title><rect x="728.0" y="613" width="4.3" height="15.0" fill="rgb(228,169,48)" rx="2" ry="2" />
<text  x="731.02" y="623.5" ></text>
</g>
<g >
<title>flush_to_ldisc (1 samples, 0.02%)</title><rect x="1049.6" y="645" width="0.1" height="15.0" fill="rgb(215,52,7)" rx="2" ry="2" />
<text  x="1052.56" y="655.5" ></text>
</g>
<g >
<title>n_tty_receive_buf2 (1 samples, 0.02%)</title><rect x="1049.6" y="597" width="0.1" height="15.0" fill="rgb(220,83,1)" rx="2" ry="2" />
<text  x="1052.56" y="607.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.02%)</title><rect x="202.0" y="565" width="0.2" height="15.0" fill="rgb(227,158,18)" rx="2" ry="2" />
<text  x="205.02" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (10 samples, 0.16%)</title><rect x="367.1" y="517" width="1.9" height="15.0" fill="rgb(247,126,3)" rx="2" ry="2" />
<text  x="370.13" y="527.5" ></text>
</g>
<g >
<title>wake_up_process (2 samples, 0.03%)</title><rect x="112.2" y="373" width="0.4" height="15.0" fill="rgb(221,169,50)" rx="2" ry="2" />
<text  x="115.22" y="383.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="233.7" y="565" width="0.1" height="15.0" fill="rgb(227,222,18)" rx="2" ry="2" />
<text  x="236.65" y="575.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (13 samples, 0.21%)</title><rect x="585.5" y="533" width="2.5" height="15.0" fill="rgb(215,21,54)" rx="2" ry="2" />
<text  x="588.50" y="543.5" ></text>
</g>
<g >
<title>ksys_lseek (1 samples, 0.02%)</title><rect x="614.1" y="485" width="0.2" height="15.0" fill="rgb(226,132,26)" rx="2" ry="2" />
<text  x="617.12" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1048.8" y="581" width="0.2" height="15.0" fill="rgb(247,174,15)" rx="2" ry="2" />
<text  x="1051.81" y="591.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1107.5" y="469" width="0.2" height="15.0" fill="rgb(210,42,2)" rx="2" ry="2" />
<text  x="1110.54" y="479.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.06%)</title><rect x="1042.8" y="629" width="0.7" height="15.0" fill="rgb(236,121,22)" rx="2" ry="2" />
<text  x="1045.78" y="639.5" ></text>
</g>
<g >
<title>rcu_nmi_exit (1 samples, 0.02%)</title><rect x="113.5" y="485" width="0.2" height="15.0" fill="rgb(220,38,1)" rx="2" ry="2" />
<text  x="116.54" y="495.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.03%)</title><rect x="448.5" y="517" width="0.3" height="15.0" fill="rgb(217,31,37)" rx="2" ry="2" />
<text  x="451.45" y="527.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1185.3" y="469" width="0.2" height="15.0" fill="rgb(246,15,19)" rx="2" ry="2" />
<text  x="1188.29" y="479.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (46 samples, 0.73%)</title><rect x="802.4" y="549" width="8.6" height="15.0" fill="rgb(212,102,53)" rx="2" ry="2" />
<text  x="805.38" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.22%)</title><rect x="578.0" y="501" width="2.6" height="15.0" fill="rgb(235,125,18)" rx="2" ry="2" />
<text  x="580.97" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::CAGE_TABLE (6 samples, 0.10%)</title><rect x="1047.3" y="709" width="1.1" height="15.0" fill="rgb(210,6,47)" rx="2" ry="2" />
<text  x="1050.30" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (60 samples, 0.96%)</title><rect x="751.2" y="581" width="11.3" height="15.0" fill="rgb(252,36,46)" rx="2" ry="2" />
<text  x="754.17" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (3 samples, 0.05%)</title><rect x="269.4" y="693" width="0.6" height="15.0" fill="rgb(214,95,1)" rx="2" ry="2" />
<text  x="272.42" y="703.5" ></text>
</g>
<g >
<title>perf (65 samples, 1.04%)</title><rect x="239.7" y="725" width="12.2" height="15.0" fill="rgb(229,88,33)" rx="2" ry="2" />
<text  x="242.67" y="735.5" ></text>
</g>
<g >
<title>ip6_input (2 samples, 0.03%)</title><rect x="21.9" y="357" width="0.3" height="15.0" fill="rgb(254,97,13)" rx="2" ry="2" />
<text  x="24.86" y="367.5" ></text>
</g>
<g >
<title>ip_route_input_slow (1 samples, 0.02%)</title><rect x="21.3" y="357" width="0.2" height="15.0" fill="rgb(232,205,44)" rx="2" ry="2" />
<text  x="24.30" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (24 samples, 0.38%)</title><rect x="751.4" y="501" width="4.5" height="15.0" fill="rgb(246,192,21)" rx="2" ry="2" />
<text  x="754.36" y="511.5" ></text>
</g>
<g >
<title>nohz_csd_func (3 samples, 0.05%)</title><rect x="1178.1" y="549" width="0.6" height="15.0" fill="rgb(213,47,31)" rx="2" ry="2" />
<text  x="1181.14" y="559.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (609 samples, 9.72%)</title><rect x="1075.4" y="693" width="114.6" height="15.0" fill="rgb(213,134,44)" rx="2" ry="2" />
<text  x="1078.35" y="703.5" >x86_64_start_k..</text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.02%)</title><rect x="208.4" y="533" width="0.2" height="15.0" fill="rgb(205,114,2)" rx="2" ry="2" />
<text  x="211.42" y="543.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="17.0" y="629" width="0.2" height="15.0" fill="rgb(243,113,14)" rx="2" ry="2" />
<text  x="19.97" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (6 samples, 0.10%)</title><rect x="272.6" y="693" width="1.1" height="15.0" fill="rgb(234,185,17)" rx="2" ry="2" />
<text  x="275.62" y="703.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="23.0" y="469" width="0.2" height="15.0" fill="rgb(234,170,47)" rx="2" ry="2" />
<text  x="25.99" y="479.5" ></text>
</g>
<g >
<title>resolve_normal_ct (1 samples, 0.02%)</title><rect x="21.7" y="341" width="0.2" height="15.0" fill="rgb(251,10,15)" rx="2" ry="2" />
<text  x="24.67" y="351.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.02%)</title><rect x="1038.8" y="597" width="0.2" height="15.0" fill="rgb(216,174,29)" rx="2" ry="2" />
<text  x="1041.83" y="607.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (727 samples, 11.60%)</title><rect x="63.5" y="549" width="136.8" height="15.0" fill="rgb(227,38,35)" rx="2" ry="2" />
<text  x="66.47" y="559.5" >cpuidle_enter_state</text>
</g>
<g >
<title>remote_function (63 samples, 1.01%)</title><rect x="239.7" y="453" width="11.8" height="15.0" fill="rgb(213,93,26)" rx="2" ry="2" />
<text  x="242.67" y="463.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.24%)</title><rect x="437.3" y="565" width="2.9" height="15.0" fill="rgb(228,96,37)" rx="2" ry="2" />
<text  x="440.35" y="575.5" ></text>
</g>
<g >
<title>common_interrupt (25 samples, 0.40%)</title><rect x="17.7" y="581" width="4.7" height="15.0" fill="rgb(218,65,18)" rx="2" ry="2" />
<text  x="20.72" y="591.5" ></text>
</g>
<g >
<title>do_epoll_create (1 samples, 0.02%)</title><rect x="15.6" y="661" width="0.2" height="15.0" fill="rgb(208,209,28)" rx="2" ry="2" />
<text  x="18.65" y="671.5" ></text>
</g>
<g >
<title>tick_sched_handle (56 samples, 0.89%)</title><rect x="77.0" y="437" width="10.6" height="15.0" fill="rgb(218,50,37)" rx="2" ry="2" />
<text  x="80.02" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.03%)</title><rect x="911.4" y="501" width="0.4" height="15.0" fill="rgb(235,161,4)" rx="2" ry="2" />
<text  x="914.38" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="613.7" y="517" width="0.4" height="15.0" fill="rgb(221,105,52)" rx="2" ry="2" />
<text  x="616.74" y="527.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (2 samples, 0.03%)</title><rect x="273.4" y="677" width="0.3" height="15.0" fill="rgb(209,30,3)" rx="2" ry="2" />
<text  x="276.37" y="687.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="750.2" y="453" width="0.2" height="15.0" fill="rgb(210,111,43)" rx="2" ry="2" />
<text  x="753.23" y="463.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (1 samples, 0.02%)</title><rect x="269.8" y="661" width="0.2" height="15.0" fill="rgb(230,36,0)" rx="2" ry="2" />
<text  x="272.80" y="671.5" ></text>
</g>
<g >
<title>event_function_call (1 samples, 0.02%)</title><rect x="251.7" y="597" width="0.2" height="15.0" fill="rgb(208,82,39)" rx="2" ry="2" />
<text  x="254.72" y="607.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.08%)</title><rect x="1162.3" y="501" width="1.0" height="15.0" fill="rgb(205,130,16)" rx="2" ry="2" />
<text  x="1165.33" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="761.9" y="501" width="0.2" height="15.0" fill="rgb(253,111,1)" rx="2" ry="2" />
<text  x="764.90" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="895.4" y="485" width="2.2" height="15.0" fill="rgb(242,107,17)" rx="2" ry="2" />
<text  x="898.38" y="495.5" ></text>
</g>
<g >
<title>menu_select (59 samples, 0.94%)</title><rect x="202.6" y="549" width="11.1" height="15.0" fill="rgb(234,2,21)" rx="2" ry="2" />
<text  x="205.59" y="559.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (17 samples, 0.27%)</title><rect x="384.8" y="645" width="3.2" height="15.0" fill="rgb(211,71,21)" rx="2" ry="2" />
<text  x="387.82" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.24%)</title><rect x="759.6" y="533" width="2.9" height="15.0" fill="rgb(244,211,25)" rx="2" ry="2" />
<text  x="762.64" y="543.5" ></text>
</g>
<g >
<title>unmap_single_vma (3 samples, 0.05%)</title><rect x="369.8" y="373" width="0.5" height="15.0" fill="rgb(215,132,12)" rx="2" ry="2" />
<text  x="372.76" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter (132 samples, 2.11%)</title><rect x="1050.3" y="629" width="24.9" height="15.0" fill="rgb(244,157,10)" rx="2" ry="2" />
<text  x="1053.31" y="639.5" >c..</text>
</g>
<g >
<title>unmap_vmas (3 samples, 0.05%)</title><rect x="369.8" y="389" width="0.5" height="15.0" fill="rgb(244,201,47)" rx="2" ry="2" />
<text  x="372.76" y="399.5" ></text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force (3 samples, 0.05%)</title><rect x="487.0" y="581" width="0.6" height="15.0" fill="rgb(247,62,49)" rx="2" ry="2" />
<text  x="490.05" y="591.5" ></text>
</g>
<g >
<title>pick_next_task (11 samples, 0.18%)</title><rect x="1184.4" y="549" width="2.0" height="15.0" fill="rgb(233,96,39)" rx="2" ry="2" />
<text  x="1187.35" y="559.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="895.2" y="533" width="0.2" height="15.0" fill="rgb(209,174,26)" rx="2" ry="2" />
<text  x="898.19" y="543.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.05%)</title><rect x="1035.8" y="581" width="0.6" height="15.0" fill="rgb(212,30,29)" rx="2" ry="2" />
<text  x="1038.82" y="591.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.02%)</title><rect x="16.4" y="597" width="0.2" height="15.0" fill="rgb(219,122,39)" rx="2" ry="2" />
<text  x="19.40" y="607.5" ></text>
</g>
<g >
<title>native_read_msr (2 samples, 0.03%)</title><rect x="82.7" y="389" width="0.3" height="15.0" fill="rgb(209,137,21)" rx="2" ry="2" />
<text  x="85.67" y="399.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.02%)</title><rect x="239.5" y="597" width="0.2" height="15.0" fill="rgb(207,156,18)" rx="2" ry="2" />
<text  x="242.49" y="607.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (28 samples, 0.45%)</title><rect x="487.6" y="533" width="5.3" height="15.0" fill="rgb(216,4,19)" rx="2" ry="2" />
<text  x="490.61" y="543.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (2 samples, 0.03%)</title><rect x="209.6" y="517" width="0.3" height="15.0" fill="rgb(234,24,40)" rx="2" ry="2" />
<text  x="212.55" y="527.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="91.5" y="469" width="0.2" height="15.0" fill="rgb(234,215,14)" rx="2" ry="2" />
<text  x="94.52" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.24%)</title><rect x="748.0" y="485" width="2.8" height="15.0" fill="rgb(216,99,10)" rx="2" ry="2" />
<text  x="750.97" y="495.5" ></text>
</g>
<g >
<title>arch_call_rest_init (609 samples, 9.72%)</title><rect x="1075.4" y="645" width="114.6" height="15.0" fill="rgb(250,193,22)" rx="2" ry="2" />
<text  x="1078.35" y="655.5" >arch_call_rest..</text>
</g>
<g >
<title>get_cpu_device (4 samples, 0.06%)</title><rect x="207.7" y="517" width="0.7" height="15.0" fill="rgb(216,181,11)" rx="2" ry="2" />
<text  x="210.67" y="527.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (1 samples, 0.02%)</title><rect x="1038.8" y="677" width="0.2" height="15.0" fill="rgb(211,127,6)" rx="2" ry="2" />
<text  x="1041.83" y="687.5" ></text>
</g>
<g >
<title>ret_from_fork (4 samples, 0.06%)</title><rect x="16.4" y="709" width="0.8" height="15.0" fill="rgb(216,85,46)" rx="2" ry="2" />
<text  x="19.40" y="719.5" ></text>
</g>
<g >
<title>[unknown]  (332 samples, 5.30%)</title><rect x="974.6" y="709" width="62.5" height="15.0" fill="rgb(239,145,13)" rx="2" ry="2" />
<text  x="977.63" y="719.5" >[unkno..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (17 samples, 0.27%)</title><rect x="787.5" y="581" width="3.2" height="15.0" fill="rgb(208,46,35)" rx="2" ry="2" />
<text  x="790.50" y="591.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (3 samples, 0.05%)</title><rect x="369.2" y="485" width="0.6" height="15.0" fill="rgb(235,207,53)" rx="2" ry="2" />
<text  x="372.20" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (3 samples, 0.05%)</title><rect x="453.9" y="485" width="0.6" height="15.0" fill="rgb(208,36,51)" rx="2" ry="2" />
<text  x="456.91" y="495.5" ></text>
</g>
<g >
<title>rcu_idle_exit (3 samples, 0.05%)</title><rect x="201.5" y="549" width="0.5" height="15.0" fill="rgb(205,218,38)" rx="2" ry="2" />
<text  x="204.46" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (25 samples, 0.40%)</title><rect x="916.1" y="517" width="4.7" height="15.0" fill="rgb(220,155,51)" rx="2" ry="2" />
<text  x="919.08" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="1046.4" y="229" width="0.1" height="15.0" fill="rgb(246,145,28)" rx="2" ry="2" />
<text  x="1049.36" y="239.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (4 samples, 0.06%)</title><rect x="1042.8" y="677" width="0.7" height="15.0" fill="rgb(222,14,6)" rx="2" ry="2" />
<text  x="1045.78" y="687.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.27%)</title><rect x="787.5" y="549" width="3.2" height="15.0" fill="rgb(226,180,18)" rx="2" ry="2" />
<text  x="790.50" y="559.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write_guard (2 samples, 0.03%)</title><rect x="924.6" y="581" width="0.3" height="15.0" fill="rgb(244,64,7)" rx="2" ry="2" />
<text  x="927.56" y="591.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (64 samples, 1.02%)</title><rect x="886.5" y="565" width="12.1" height="15.0" fill="rgb(219,132,26)" rx="2" ry="2" />
<text  x="889.53" y="575.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.02%)</title><rect x="16.8" y="661" width="0.2" height="15.0" fill="rgb(250,116,19)" rx="2" ry="2" />
<text  x="19.78" y="671.5" ></text>
</g>
<g >
<title>start_secondary (222 samples, 3.54%)</title><rect x="17.2" y="693" width="41.7" height="15.0" fill="rgb(250,41,38)" rx="2" ry="2" />
<text  x="20.15" y="703.5" >sta..</text>
</g>
<g >
<title>hashbrown::map::make_hash (40 samples, 0.64%)</title><rect x="444.5" y="549" width="7.5" height="15.0" fill="rgb(223,152,12)" rx="2" ry="2" />
<text  x="447.50" y="559.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (2 samples, 0.03%)</title><rect x="580.2" y="485" width="0.4" height="15.0" fill="rgb(237,79,28)" rx="2" ry="2" />
<text  x="583.23" y="495.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="228.9" y="501" width="0.2" height="15.0" fill="rgb(236,153,4)" rx="2" ry="2" />
<text  x="231.94" y="511.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (3 samples, 0.05%)</title><rect x="613.6" y="581" width="0.5" height="15.0" fill="rgb(228,128,53)" rx="2" ry="2" />
<text  x="616.55" y="591.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.05%)</title><rect x="591.5" y="453" width="0.6" height="15.0" fill="rgb(206,33,48)" rx="2" ry="2" />
<text  x="594.53" y="463.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="369.9" y="277" width="0.4" height="15.0" fill="rgb(243,26,13)" rx="2" ry="2" />
<text  x="372.95" y="287.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="21.9" y="229" width="0.1" height="15.0" fill="rgb(238,5,35)" rx="2" ry="2" />
<text  x="24.86" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="23.0" y="453" width="0.2" height="15.0" fill="rgb(227,84,13)" rx="2" ry="2" />
<text  x="25.99" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (28 samples, 0.45%)</title><rect x="487.6" y="501" width="5.3" height="15.0" fill="rgb(215,201,15)" rx="2" ry="2" />
<text  x="490.61" y="511.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (1 samples, 0.02%)</title><rect x="97.9" y="453" width="0.2" height="15.0" fill="rgb(243,165,20)" rx="2" ry="2" />
<text  x="100.92" y="463.5" ></text>
</g>
<g >
<title>NaClLog (3 samples, 0.05%)</title><rect x="375.8" y="661" width="0.5" height="15.0" fill="rgb(248,60,35)" rx="2" ry="2" />
<text  x="378.78" y="671.5" ></text>
</g>
<g >
<title>NaClLog (2 samples, 0.03%)</title><rect x="388.0" y="645" width="0.4" height="15.0" fill="rgb(215,6,15)" rx="2" ry="2" />
<text  x="391.02" y="655.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="1049.6" y="517" width="0.1" height="15.0" fill="rgb(253,79,7)" rx="2" ry="2" />
<text  x="1052.56" y="527.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (13 samples, 0.21%)</title><rect x="585.5" y="517" width="2.5" height="15.0" fill="rgb(228,23,46)" rx="2" ry="2" />
<text  x="588.50" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.03%)</title><rect x="640.7" y="565" width="0.3" height="15.0" fill="rgb(231,19,10)" rx="2" ry="2" />
<text  x="643.66" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (23 samples, 0.37%)</title><rect x="940.7" y="549" width="4.4" height="15.0" fill="rgb(209,94,41)" rx="2" ry="2" />
<text  x="943.75" y="559.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect x="1046.4" y="581" width="0.1" height="15.0" fill="rgb(246,217,9)" rx="2" ry="2" />
<text  x="1049.36" y="591.5" ></text>
</g>
<g >
<title>NaClAddrSpaceFree (10 samples, 0.16%)</title><rect x="367.1" y="581" width="1.9" height="15.0" fill="rgb(242,49,25)" rx="2" ry="2" />
<text  x="370.13" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (60 samples, 0.96%)</title><rect x="791.1" y="549" width="11.3" height="15.0" fill="rgb(241,168,29)" rx="2" ry="2" />
<text  x="794.08" y="559.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (44 samples, 0.70%)</title><rect x="751.4" y="549" width="8.2" height="15.0" fill="rgb(233,121,16)" rx="2" ry="2" />
<text  x="754.36" y="559.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="16.4" y="581" width="0.2" height="15.0" fill="rgb(224,67,37)" rx="2" ry="2" />
<text  x="19.40" y="591.5" ></text>
</g>
<g >
<title>arch_call_rest_init (958 samples, 15.28%)</title><rect x="58.9" y="645" width="180.4" height="15.0" fill="rgb(238,174,9)" rx="2" ry="2" />
<text  x="61.95" y="655.5" >arch_call_rest_init</text>
</g>
<g >
<title>get_next_timer_interrupt (3 samples, 0.05%)</title><rect x="212.6" y="501" width="0.5" height="15.0" fill="rgb(250,131,20)" rx="2" ry="2" />
<text  x="215.57" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (63 samples, 1.01%)</title><rect x="239.7" y="597" width="11.8" height="15.0" fill="rgb(251,120,21)" rx="2" ry="2" />
<text  x="242.67" y="607.5" ></text>
</g>
<g >
<title>event_function_call (63 samples, 1.01%)</title><rect x="239.7" y="501" width="11.8" height="15.0" fill="rgb(226,199,34)" rx="2" ry="2" />
<text  x="242.67" y="511.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.02%)</title><rect x="239.5" y="581" width="0.2" height="15.0" fill="rgb(226,226,34)" rx="2" ry="2" />
<text  x="242.49" y="591.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.02%)</title><rect x="239.5" y="533" width="0.2" height="15.0" fill="rgb(237,11,50)" rx="2" ry="2" />
<text  x="242.49" y="543.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (26 samples, 0.41%)</title><rect x="940.2" y="581" width="4.9" height="15.0" fill="rgb(238,19,29)" rx="2" ry="2" />
<text  x="943.18" y="591.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (3 samples, 0.05%)</title><rect x="1188.7" y="549" width="0.5" height="15.0" fill="rgb(211,162,13)" rx="2" ry="2" />
<text  x="1191.68" y="559.5" ></text>
</g>
<g >
<title>tick_program_event (6 samples, 0.10%)</title><rect x="91.7" y="469" width="1.1" height="15.0" fill="rgb(214,164,6)" rx="2" ry="2" />
<text  x="94.70" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.21%)</title><rect x="753.4" y="485" width="2.5" height="15.0" fill="rgb(226,174,27)" rx="2" ry="2" />
<text  x="756.43" y="495.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.02%)</title><rect x="102.2" y="421" width="0.2" height="15.0" fill="rgb(230,177,12)" rx="2" ry="2" />
<text  x="105.25" y="431.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.02%)</title><rect x="10.0" y="501" width="0.2" height="15.0" fill="rgb(212,146,2)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>tick_sched_timer (64 samples, 1.02%)</title><rect x="76.6" y="453" width="12.1" height="15.0" fill="rgb(214,213,12)" rx="2" ry="2" />
<text  x="79.64" y="463.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.03%)</title><rect x="1096.2" y="469" width="0.4" height="15.0" fill="rgb(249,143,21)" rx="2" ry="2" />
<text  x="1099.25" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.10%)</title><rect x="1040.9" y="597" width="1.1" height="15.0" fill="rgb(231,37,14)" rx="2" ry="2" />
<text  x="1043.90" y="607.5" ></text>
</g>
<g >
<title>cpuidle_not_available (3 samples, 0.05%)</title><rect x="217.3" y="581" width="0.5" height="15.0" fill="rgb(206,30,1)" rx="2" ry="2" />
<text  x="220.27" y="591.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (7 samples, 0.11%)</title><rect x="447.5" y="533" width="1.3" height="15.0" fill="rgb(245,25,51)" rx="2" ry="2" />
<text  x="450.51" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1048.8" y="677" width="0.2" height="15.0" fill="rgb(231,216,18)" rx="2" ry="2" />
<text  x="1051.81" y="687.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1183.0" y="501" width="0.2" height="15.0" fill="rgb(243,67,34)" rx="2" ry="2" />
<text  x="1186.03" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (22 samples, 0.35%)</title><rect x="811.2" y="549" width="4.2" height="15.0" fill="rgb(240,16,17)" rx="2" ry="2" />
<text  x="814.23" y="559.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="1036.6" y="533" width="0.2" height="15.0" fill="rgb(212,111,12)" rx="2" ry="2" />
<text  x="1039.57" y="543.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="1035.8" y="549" width="0.2" height="15.0" fill="rgb(215,42,25)" rx="2" ry="2" />
<text  x="1038.82" y="559.5" ></text>
</g>
<g >
<title>irq_exit_rcu (16 samples, 0.26%)</title><rect x="19.4" y="565" width="3.0" height="15.0" fill="rgb(243,16,11)" rx="2" ry="2" />
<text  x="22.41" y="575.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7 samples, 0.11%)</title><rect x="1076.1" y="549" width="1.3" height="15.0" fill="rgb(222,183,28)" rx="2" ry="2" />
<text  x="1079.10" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (3 samples, 0.05%)</title><rect x="453.9" y="469" width="0.6" height="15.0" fill="rgb(238,159,10)" rx="2" ry="2" />
<text  x="456.91" y="479.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="1188.9" y="485" width="0.2" height="15.0" fill="rgb(253,126,29)" rx="2" ry="2" />
<text  x="1191.87" y="495.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="10.0" y="613" width="0.2" height="15.0" fill="rgb(225,102,52)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>find_busiest_group (25 samples, 0.40%)</title><rect x="102.4" y="421" width="4.7" height="15.0" fill="rgb(251,172,9)" rx="2" ry="2" />
<text  x="105.43" y="431.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1049.2" y="613" width="0.2" height="15.0" fill="rgb(214,106,19)" rx="2" ry="2" />
<text  x="1052.18" y="623.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.24%)</title><rect x="748.0" y="517" width="2.8" height="15.0" fill="rgb(241,9,27)" rx="2" ry="2" />
<text  x="750.97" y="527.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.03%)</title><rect x="761.5" y="453" width="0.4" height="15.0" fill="rgb(225,187,16)" rx="2" ry="2" />
<text  x="764.53" y="463.5" ></text>
</g>
<g >
<title>do_idle (133 samples, 2.12%)</title><rect x="1050.3" y="661" width="25.1" height="15.0" fill="rgb(243,201,37)" rx="2" ry="2" />
<text  x="1053.31" y="671.5" >d..</text>
</g>
<g >
<title>swapper (752 samples, 12.00%)</title><rect x="1048.4" y="725" width="141.6" height="15.0" fill="rgb(236,52,41)" rx="2" ry="2" />
<text  x="1051.43" y="735.5" >swapper</text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="369.2" y="549" width="0.6" height="15.0" fill="rgb(248,34,22)" rx="2" ry="2" />
<text  x="372.20" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.19%)</title><rect x="585.5" y="469" width="2.3" height="15.0" fill="rgb(214,178,17)" rx="2" ry="2" />
<text  x="588.50" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (23 samples, 0.37%)</title><rect x="890.7" y="501" width="4.3" height="15.0" fill="rgb(221,98,47)" rx="2" ry="2" />
<text  x="893.67" y="511.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="229.5" y="517" width="0.2" height="15.0" fill="rgb(209,93,33)" rx="2" ry="2" />
<text  x="232.51" y="527.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="58.8" y="629" width="0.1" height="15.0" fill="rgb(250,229,41)" rx="2" ry="2" />
<text  x="61.76" y="639.5" ></text>
</g>
<g >
<title>udpv6_queue_rcv_one_skb (1 samples, 0.02%)</title><rect x="21.9" y="261" width="0.1" height="15.0" fill="rgb(237,128,35)" rx="2" ry="2" />
<text  x="24.86" y="271.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.03%)</title><rect x="1097.0" y="437" width="0.4" height="15.0" fill="rgb(223,148,25)" rx="2" ry="2" />
<text  x="1100.00" y="447.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.61%)</title><rect x="505.3" y="581" width="7.2" height="15.0" fill="rgb(210,9,37)" rx="2" ry="2" />
<text  x="508.31" y="591.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="1107.7" y="485" width="0.2" height="15.0" fill="rgb(230,85,5)" rx="2" ry="2" />
<text  x="1110.73" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;u64,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (26 samples, 0.41%)</title><rect x="427.6" y="597" width="4.9" height="15.0" fill="rgb(238,181,30)" rx="2" ry="2" />
<text  x="430.56" y="607.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (1 samples, 0.02%)</title><rect x="1045.8" y="693" width="0.2" height="15.0" fill="rgb(228,191,38)" rx="2" ry="2" />
<text  x="1048.79" y="703.5" ></text>
</g>
<g >
<title>do_anonymous_page (7 samples, 0.11%)</title><rect x="1035.6" y="597" width="1.3" height="15.0" fill="rgb(222,41,12)" rx="2" ry="2" />
<text  x="1038.63" y="607.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (21 samples, 0.34%)</title><rect x="1179.3" y="581" width="3.9" height="15.0" fill="rgb(242,227,36)" rx="2" ry="2" />
<text  x="1182.27" y="591.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.03%)</title><rect x="951.9" y="549" width="0.3" height="15.0" fill="rgb(235,123,10)" rx="2" ry="2" />
<text  x="954.85" y="559.5" ></text>
</g>
<g >
<title>atomic_unlock (2 samples, 0.03%)</title><rect x="974.1" y="661" width="0.3" height="15.0" fill="rgb(248,180,21)" rx="2" ry="2" />
<text  x="977.07" y="671.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.03%)</title><rect x="743.8" y="581" width="0.4" height="15.0" fill="rgb(254,208,46)" rx="2" ry="2" />
<text  x="746.83" y="591.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="21.9" y="117" width="0.1" height="15.0" fill="rgb(233,211,8)" rx="2" ry="2" />
<text  x="24.86" y="127.5" ></text>
</g>
<g >
<title>llseek (1 samples, 0.02%)</title><rect x="614.1" y="549" width="0.2" height="15.0" fill="rgb(219,36,4)" rx="2" ry="2" />
<text  x="617.12" y="559.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (4 samples, 0.06%)</title><rect x="1042.8" y="645" width="0.7" height="15.0" fill="rgb(212,43,12)" rx="2" ry="2" />
<text  x="1045.78" y="655.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2 samples, 0.03%)</title><rect x="613.7" y="357" width="0.4" height="15.0" fill="rgb(218,35,5)" rx="2" ry="2" />
<text  x="616.74" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (86 samples, 1.37%)</title><rect x="899.9" y="533" width="16.2" height="15.0" fill="rgb(253,107,4)" rx="2" ry="2" />
<text  x="902.89" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.05%)</title><rect x="579.7" y="485" width="0.5" height="15.0" fill="rgb(238,165,31)" rx="2" ry="2" />
<text  x="582.67" y="495.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="440.7" y="549" width="0.2" height="15.0" fill="rgb(212,99,53)" rx="2" ry="2" />
<text  x="443.73" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.96%)</title><rect x="791.1" y="581" width="11.3" height="15.0" fill="rgb(243,152,39)" rx="2" ry="2" />
<text  x="794.08" y="591.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="112.8" y="405" width="0.2" height="15.0" fill="rgb(210,186,16)" rx="2" ry="2" />
<text  x="115.79" y="415.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (369 samples, 5.89%)</title><rect x="816.5" y="565" width="69.5" height="15.0" fill="rgb(222,114,19)" rx="2" ry="2" />
<text  x="819.50" y="575.5" >&lt;dashma..</text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (38 samples, 0.61%)</title><rect x="505.3" y="533" width="7.2" height="15.0" fill="rgb(252,22,54)" rx="2" ry="2" />
<text  x="508.31" y="543.5" ></text>
</g>
<g >
<title>cpuidle_enter (473 samples, 7.55%)</title><rect x="1076.1" y="565" width="89.0" height="15.0" fill="rgb(213,87,9)" rx="2" ry="2" />
<text  x="1079.10" y="575.5" >cpuidle_en..</text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (3 samples, 0.05%)</title><rect x="365.1" y="677" width="0.5" height="15.0" fill="rgb(235,167,26)" rx="2" ry="2" />
<text  x="368.05" y="687.5" ></text>
</g>
<g >
<title>CompareAndSwap (3 samples, 0.05%)</title><rect x="1037.9" y="693" width="0.6" height="15.0" fill="rgb(221,122,25)" rx="2" ry="2" />
<text  x="1040.89" y="703.5" ></text>
</g>
<g >
<title>MunmapInternal (3 samples, 0.05%)</title><rect x="369.8" y="645" width="0.5" height="15.0" fill="rgb(249,75,15)" rx="2" ry="2" />
<text  x="372.76" y="655.5" ></text>
</g>
<g >
<title>enqueue_task (2 samples, 0.03%)</title><rect x="112.2" y="325" width="0.4" height="15.0" fill="rgb(248,2,50)" rx="2" ry="2" />
<text  x="115.22" y="335.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="367.3" y="357" width="0.2" height="15.0" fill="rgb(233,150,30)" rx="2" ry="2" />
<text  x="370.31" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt; (1 samples, 0.02%)</title><rect x="1046.4" y="341" width="0.1" height="15.0" fill="rgb(239,122,4)" rx="2" ry="2" />
<text  x="1049.36" y="351.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="239.5" y="501" width="0.2" height="15.0" fill="rgb(231,216,20)" rx="2" ry="2" />
<text  x="242.49" y="511.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.37%)</title><rect x="811.0" y="581" width="4.4" height="15.0" fill="rgb(243,112,54)" rx="2" ry="2" />
<text  x="814.04" y="591.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="576.7" y="565" width="0.1" height="15.0" fill="rgb(247,174,0)" rx="2" ry="2" />
<text  x="579.66" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::likely (3 samples, 0.05%)</title><rect x="605.1" y="485" width="0.5" height="15.0" fill="rgb(223,113,6)" rx="2" ry="2" />
<text  x="608.08" y="495.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="75.1" y="437" width="0.2" height="15.0" fill="rgb(219,135,26)" rx="2" ry="2" />
<text  x="78.14" y="447.5" ></text>
</g>
<g >
<title>rb_erase (2 samples, 0.03%)</title><rect x="72.9" y="437" width="0.4" height="15.0" fill="rgb(249,191,40)" rx="2" ry="2" />
<text  x="75.88" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (24 samples, 0.38%)</title><rect x="751.4" y="517" width="4.5" height="15.0" fill="rgb(216,31,48)" rx="2" ry="2" />
<text  x="754.36" y="527.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (1 samples, 0.02%)</title><rect x="1046.4" y="405" width="0.1" height="15.0" fill="rgb(249,58,15)" rx="2" ry="2" />
<text  x="1049.36" y="415.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (80 samples, 1.28%)</title><rect x="645.2" y="565" width="15.0" height="15.0" fill="rgb(221,45,49)" rx="2" ry="2" />
<text  x="648.18" y="575.5" ></text>
</g>
<g >
<title>arp_rcv.part.0 (1 samples, 0.02%)</title><rect x="21.3" y="421" width="0.2" height="15.0" fill="rgb(237,154,22)" rx="2" ry="2" />
<text  x="24.30" y="431.5" ></text>
</g>
<g >
<title>handle_irq_event (9 samples, 0.14%)</title><rect x="17.7" y="533" width="1.7" height="15.0" fill="rgb(236,179,17)" rx="2" ry="2" />
<text  x="20.72" y="543.5" ></text>
</g>
<g >
<title>perf_ioctl (1 samples, 0.02%)</title><rect x="251.7" y="661" width="0.2" height="15.0" fill="rgb(236,181,9)" rx="2" ry="2" />
<text  x="254.72" y="671.5" ></text>
</g>
<g >
<title>tick_program_event (2 samples, 0.03%)</title><rect x="1176.1" y="501" width="0.3" height="15.0" fill="rgb(214,101,14)" rx="2" ry="2" />
<text  x="1179.07" y="511.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 1.01%)</title><rect x="239.7" y="373" width="11.8" height="15.0" fill="rgb(231,21,11)" rx="2" ry="2" />
<text  x="242.67" y="383.5" ></text>
</g>
<g >
<title>exec_mmap (1 samples, 0.02%)</title><rect x="239.5" y="549" width="0.2" height="15.0" fill="rgb(239,1,23)" rx="2" ry="2" />
<text  x="242.49" y="559.5" ></text>
</g>
<g >
<title>pick_next_task (1 samples, 0.02%)</title><rect x="1187.0" y="565" width="0.2" height="15.0" fill="rgb(224,97,45)" rx="2" ry="2" />
<text  x="1189.99" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.11%)</title><rect x="1035.6" y="645" width="1.3" height="15.0" fill="rgb(249,88,25)" rx="2" ry="2" />
<text  x="1038.63" y="655.5" ></text>
</g>
<g >
<title>clockevents_program_event (3 samples, 0.05%)</title><rect x="1096.8" y="453" width="0.6" height="15.0" fill="rgb(212,59,43)" rx="2" ry="2" />
<text  x="1099.81" y="463.5" ></text>
</g>
<g >
<title>__remove_hrtimer (4 samples, 0.06%)</title><rect x="89.1" y="469" width="0.7" height="15.0" fill="rgb(241,141,19)" rx="2" ry="2" />
<text  x="92.07" y="479.5" ></text>
</g>
<g >
<title>unmap_region (3 samples, 0.05%)</title><rect x="367.1" y="469" width="0.6" height="15.0" fill="rgb(230,155,26)" rx="2" ry="2" />
<text  x="370.13" y="479.5" ></text>
</g>
<g >
<title>hrtimer_cancel (12 samples, 0.19%)</title><rect x="234.6" y="549" width="2.3" height="15.0" fill="rgb(234,67,51)" rx="2" ry="2" />
<text  x="237.59" y="559.5" ></text>
</g>
<g >
<title>DynArrayGet (3 samples, 0.05%)</title><rect x="687.0" y="629" width="0.5" height="15.0" fill="rgb(208,227,45)" rx="2" ry="2" />
<text  x="689.98" y="639.5" ></text>
</g>
<g >
<title>check_cpu_stall (1 samples, 0.02%)</title><rect x="79.1" y="405" width="0.2" height="15.0" fill="rgb(216,149,34)" rx="2" ry="2" />
<text  x="82.09" y="415.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::libc_mmap (3 samples, 0.05%)</title><rect x="369.8" y="565" width="0.5" height="15.0" fill="rgb(248,205,47)" rx="2" ry="2" />
<text  x="372.76" y="575.5" ></text>
</g>
<g >
<title>osq_lock (7 samples, 0.11%)</title><rect x="367.7" y="437" width="1.3" height="15.0" fill="rgb(242,165,54)" rx="2" ry="2" />
<text  x="370.69" y="447.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="15.8" y="613" width="0.2" height="15.0" fill="rgb(248,155,40)" rx="2" ry="2" />
<text  x="18.84" y="623.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.05%)</title><rect x="230.8" y="549" width="0.6" height="15.0" fill="rgb(241,189,50)" rx="2" ry="2" />
<text  x="233.83" y="559.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="444.1" y="469" width="0.2" height="15.0" fill="rgb(243,198,20)" rx="2" ry="2" />
<text  x="447.12" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (24 samples, 0.38%)</title><rect x="666.1" y="501" width="4.5" height="15.0" fill="rgb(217,67,31)" rx="2" ry="2" />
<text  x="669.08" y="511.5" ></text>
</g>
<g >
<title>ip_list_rcv (2 samples, 0.03%)</title><rect x="21.5" y="437" width="0.4" height="15.0" fill="rgb(219,93,42)" rx="2" ry="2" />
<text  x="24.48" y="447.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="1046.4" y="421" width="0.1" height="15.0" fill="rgb(211,196,46)" rx="2" ry="2" />
<text  x="1049.36" y="431.5" ></text>
</g>
<g >
<title>hrtimer_sleeper_start_expires (1 samples, 0.02%)</title><rect x="1048.8" y="613" width="0.2" height="15.0" fill="rgb(254,18,54)" rx="2" ry="2" />
<text  x="1051.81" y="623.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="87.4" y="373" width="0.2" height="15.0" fill="rgb(254,147,15)" rx="2" ry="2" />
<text  x="90.37" y="383.5" ></text>
</g>
<g >
<title>timerqueue_add (2 samples, 0.03%)</title><rect x="1085.3" y="437" width="0.4" height="15.0" fill="rgb(232,71,51)" rx="2" ry="2" />
<text  x="1088.33" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (4 samples, 0.06%)</title><rect x="1042.8" y="693" width="0.7" height="15.0" fill="rgb(225,26,25)" rx="2" ry="2" />
<text  x="1045.78" y="703.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 1.01%)</title><rect x="239.7" y="405" width="11.8" height="15.0" fill="rgb(250,1,21)" rx="2" ry="2" />
<text  x="242.67" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="1040.3" y="645" width="0.2" height="15.0" fill="rgb(249,109,28)" rx="2" ry="2" />
<text  x="1043.34" y="655.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="19.0" y="517" width="0.2" height="15.0" fill="rgb(212,13,2)" rx="2" ry="2" />
<text  x="22.04" y="527.5" ></text>
</g>
<g >
<title>intel_idle (2 samples, 0.03%)</title><rect x="115.2" y="533" width="0.4" height="15.0" fill="rgb(239,170,41)" rx="2" ry="2" />
<text  x="118.24" y="543.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (121 samples, 1.93%)</title><rect x="617.1" y="565" width="22.8" height="15.0" fill="rgb(215,41,36)" rx="2" ry="2" />
<text  x="620.13" y="575.5" >&lt;..</text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="1172.9" y="485" width="0.2" height="15.0" fill="rgb(242,188,54)" rx="2" ry="2" />
<text  x="1175.87" y="495.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.03%)</title><rect x="76.6" y="437" width="0.4" height="15.0" fill="rgb(229,211,16)" rx="2" ry="2" />
<text  x="79.64" y="447.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1081.8" y="501" width="0.1" height="15.0" fill="rgb(253,172,1)" rx="2" ry="2" />
<text  x="1084.75" y="511.5" ></text>
</g>
<g >
<title>ip_forward (1 samples, 0.02%)</title><rect x="21.5" y="389" width="0.2" height="15.0" fill="rgb(221,24,10)" rx="2" ry="2" />
<text  x="24.48" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.05%)</title><rect x="514.2" y="485" width="0.5" height="15.0" fill="rgb(229,78,53)" rx="2" ry="2" />
<text  x="517.15" y="495.5" ></text>
</g>
<g >
<title>memcpy@plt (3 samples, 0.05%)</title><rect x="679.1" y="645" width="0.5" height="15.0" fill="rgb(238,162,9)" rx="2" ry="2" />
<text  x="682.07" y="655.5" ></text>
</g>
<g >
<title>DynArrayGet (1 samples, 0.02%)</title><rect x="258.3" y="693" width="0.2" height="15.0" fill="rgb(221,139,11)" rx="2" ry="2" />
<text  x="261.31" y="703.5" ></text>
</g>
<g >
<title>update_blocked_averages (8 samples, 0.13%)</title><rect x="1105.5" y="453" width="1.5" height="15.0" fill="rgb(226,202,12)" rx="2" ry="2" />
<text  x="1108.47" y="463.5" ></text>
</g>
<g >
<title>tick_irq_enter (10 samples, 0.16%)</title><rect x="93.8" y="485" width="1.9" height="15.0" fill="rgb(222,33,0)" rx="2" ry="2" />
<text  x="96.77" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (65 samples, 1.04%)</title><rect x="927.8" y="533" width="12.2" height="15.0" fill="rgb(206,134,34)" rx="2" ry="2" />
<text  x="930.76" y="543.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (1 samples, 0.02%)</title><rect x="1101.0" y="453" width="0.1" height="15.0" fill="rgb(252,139,46)" rx="2" ry="2" />
<text  x="1103.95" y="463.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (55 samples, 0.88%)</title><rect x="660.6" y="581" width="10.4" height="15.0" fill="rgb(241,138,26)" rx="2" ry="2" />
<text  x="663.62" y="591.5" ></text>
</g>
<g >
<title>set_next_entity (1 samples, 0.02%)</title><rect x="1186.2" y="533" width="0.2" height="15.0" fill="rgb(218,143,47)" rx="2" ry="2" />
<text  x="1189.23" y="543.5" ></text>
</g>
<g >
<title>rebalance_domains (3 samples, 0.05%)</title><rect x="1100.2" y="469" width="0.6" height="15.0" fill="rgb(248,209,18)" rx="2" ry="2" />
<text  x="1103.20" y="479.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.27%)</title><rect x="756.4" y="501" width="3.2" height="15.0" fill="rgb(240,69,27)" rx="2" ry="2" />
<text  x="759.44" y="511.5" ></text>
</g>
<g >
<title>update_group_capacity (1 samples, 0.02%)</title><rect x="104.1" y="389" width="0.2" height="15.0" fill="rgb(249,152,32)" rx="2" ry="2" />
<text  x="107.13" y="399.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (5 samples, 0.08%)</title><rect x="576.8" y="565" width="1.0" height="15.0" fill="rgb(233,154,10)" rx="2" ry="2" />
<text  x="579.84" y="575.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.02%)</title><rect x="1050.1" y="613" width="0.2" height="15.0" fill="rgb(233,217,0)" rx="2" ry="2" />
<text  x="1053.12" y="623.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="87.4" y="389" width="0.2" height="15.0" fill="rgb(217,63,1)" rx="2" ry="2" />
<text  x="90.37" y="399.5" ></text>
</g>
<g >
<title>rb_next (3 samples, 0.05%)</title><rect x="1084.0" y="437" width="0.6" height="15.0" fill="rgb(217,177,0)" rx="2" ry="2" />
<text  x="1087.01" y="447.5" ></text>
</g>
<g >
<title>worker_thread (4 samples, 0.06%)</title><rect x="1049.6" y="677" width="0.7" height="15.0" fill="rgb(210,128,10)" rx="2" ry="2" />
<text  x="1052.56" y="687.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1049.6" y="533" width="0.1" height="15.0" fill="rgb(242,115,3)" rx="2" ry="2" />
<text  x="1052.56" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (260 samples, 4.15%)</title><rect x="515.3" y="485" width="48.9" height="15.0" fill="rgb(216,30,43)" rx="2" ry="2" />
<text  x="518.28" y="495.5" >core..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (60 samples, 0.96%)</title><rect x="791.1" y="565" width="11.3" height="15.0" fill="rgb(248,59,16)" rx="2" ry="2" />
<text  x="794.08" y="575.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (17 samples, 0.27%)</title><rect x="787.5" y="501" width="3.2" height="15.0" fill="rgb(228,78,33)" rx="2" ry="2" />
<text  x="790.50" y="511.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="236.5" y="485" width="0.2" height="15.0" fill="rgb(223,141,18)" rx="2" ry="2" />
<text  x="239.47" y="495.5" ></text>
</g>
<g >
<title>irqentry_enter (1 samples, 0.02%)</title><rect x="68.4" y="517" width="0.1" height="15.0" fill="rgb(232,208,33)" rx="2" ry="2" />
<text  x="71.36" y="527.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="1049.2" y="581" width="0.2" height="15.0" fill="rgb(233,95,5)" rx="2" ry="2" />
<text  x="1052.18" y="591.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="1046.4" y="549" width="0.1" height="15.0" fill="rgb(214,3,17)" rx="2" ry="2" />
<text  x="1049.36" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.27%)</title><rect x="756.4" y="485" width="3.2" height="15.0" fill="rgb(240,142,25)" rx="2" ry="2" />
<text  x="759.44" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (23 samples, 0.37%)</title><rect x="209.0" y="533" width="4.3" height="15.0" fill="rgb(229,67,38)" rx="2" ry="2" />
<text  x="211.99" y="543.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.02%)</title><rect x="1165.1" y="565" width="0.2" height="15.0" fill="rgb(244,45,53)" rx="2" ry="2" />
<text  x="1168.15" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (2 samples, 0.03%)</title><rect x="1046.0" y="693" width="0.4" height="15.0" fill="rgb(246,132,33)" rx="2" ry="2" />
<text  x="1048.98" y="703.5" ></text>
</g>
<g >
<title>event_function (63 samples, 1.01%)</title><rect x="239.7" y="437" width="11.8" height="15.0" fill="rgb(209,8,32)" rx="2" ry="2" />
<text  x="242.67" y="447.5" ></text>
</g>
<g >
<title>check_tsc_unstable (1 samples, 0.02%)</title><rect x="59.5" y="565" width="0.2" height="15.0" fill="rgb(253,176,3)" rx="2" ry="2" />
<text  x="62.51" y="575.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_cbuf (2 samples, 0.03%)</title><rect x="762.8" y="597" width="0.4" height="15.0" fill="rgb(235,158,13)" rx="2" ry="2" />
<text  x="765.84" y="607.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.05%)</title><rect x="438.5" y="517" width="0.5" height="15.0" fill="rgb(229,28,36)" rx="2" ry="2" />
<text  x="441.47" y="527.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.41%)</title><rect x="427.6" y="581" width="4.9" height="15.0" fill="rgb(247,142,12)" rx="2" ry="2" />
<text  x="430.56" y="591.5" ></text>
</g>
<g >
<title>__bitmap_and (1 samples, 0.02%)</title><rect x="99.2" y="437" width="0.2" height="15.0" fill="rgb(248,191,38)" rx="2" ry="2" />
<text  x="102.23" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (7 samples, 0.11%)</title><rect x="760.6" y="501" width="1.3" height="15.0" fill="rgb(227,28,35)" rx="2" ry="2" />
<text  x="763.58" y="511.5" ></text>
</g>
<g >
<title>__activate_page (1 samples, 0.02%)</title><rect x="367.3" y="341" width="0.2" height="15.0" fill="rgb(230,181,4)" rx="2" ry="2" />
<text  x="370.31" y="351.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="21.5" y="357" width="0.2" height="15.0" fill="rgb(253,196,48)" rx="2" ry="2" />
<text  x="24.48" y="367.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (3 samples, 0.05%)</title><rect x="1098.9" y="469" width="0.5" height="15.0" fill="rgb(206,6,25)" rx="2" ry="2" />
<text  x="1101.88" y="479.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="600.6" y="405" width="0.2" height="15.0" fill="rgb(220,100,19)" rx="2" ry="2" />
<text  x="603.56" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1165.0" y="549" width="0.1" height="15.0" fill="rgb(209,50,36)" rx="2" ry="2" />
<text  x="1167.96" y="559.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u32&gt;::to_ne_bytes (4 samples, 0.06%)</title><rect x="897.6" y="485" width="0.8" height="15.0" fill="rgb(231,136,38)" rx="2" ry="2" />
<text  x="900.64" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (4 samples, 0.06%)</title><rect x="678.3" y="645" width="0.8" height="15.0" fill="rgb(223,158,16)" rx="2" ry="2" />
<text  x="681.32" y="655.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::ser::Serialize for dashmap::DashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="1046.4" y="517" width="0.1" height="15.0" fill="rgb(232,44,32)" rx="2" ry="2" />
<text  x="1049.36" y="527.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (3 samples, 0.05%)</title><rect x="1095.7" y="469" width="0.5" height="15.0" fill="rgb(246,221,50)" rx="2" ry="2" />
<text  x="1098.68" y="479.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (500 samples, 7.98%)</title><rect x="513.0" y="581" width="94.2" height="15.0" fill="rgb(215,13,7)" rx="2" ry="2" />
<text  x="516.02" y="591.5" >&lt;dashmap::D..</text>
</g>
<g >
<title>do_user_addr_fault (8 samples, 0.13%)</title><rect x="1035.4" y="661" width="1.5" height="15.0" fill="rgb(240,64,41)" rx="2" ry="2" />
<text  x="1038.44" y="671.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="750.6" y="469" width="0.2" height="15.0" fill="rgb(220,138,36)" rx="2" ry="2" />
<text  x="753.61" y="479.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="759.5" y="453" width="0.1" height="15.0" fill="rgb(251,0,24)" rx="2" ry="2" />
<text  x="762.45" y="463.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.02%)</title><rect x="1049.0" y="645" width="0.2" height="15.0" fill="rgb(238,47,6)" rx="2" ry="2" />
<text  x="1051.99" y="655.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (21 samples, 0.34%)</title><rect x="641.0" y="581" width="4.0" height="15.0" fill="rgb(244,116,45)" rx="2" ry="2" />
<text  x="644.04" y="591.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.02%)</title><rect x="1108.5" y="501" width="0.2" height="15.0" fill="rgb(245,150,28)" rx="2" ry="2" />
<text  x="1111.48" y="511.5" ></text>
</g>
<g >
<title>ip6_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="21.9" y="341" width="0.1" height="15.0" fill="rgb(252,88,39)" rx="2" ry="2" />
<text  x="24.86" y="351.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (1 samples, 0.02%)</title><rect x="78.7" y="405" width="0.2" height="15.0" fill="rgb(251,112,27)" rx="2" ry="2" />
<text  x="81.71" y="415.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="231.4" y="533" width="0.2" height="15.0" fill="rgb(227,7,47)" rx="2" ry="2" />
<text  x="234.39" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="515.1" y="501" width="0.2" height="15.0" fill="rgb(239,206,10)" rx="2" ry="2" />
<text  x="518.10" y="511.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (29 samples, 0.46%)</title><rect x="665.1" y="533" width="5.5" height="15.0" fill="rgb(231,216,9)" rx="2" ry="2" />
<text  x="668.14" y="543.5" ></text>
</g>
<g >
<title>cpuidle_select (51 samples, 0.81%)</title><rect x="1165.5" y="565" width="9.6" height="15.0" fill="rgb(227,191,14)" rx="2" ry="2" />
<text  x="1168.53" y="575.5" ></text>
</g>
<g >
<title>arp_rcv (1 samples, 0.02%)</title><rect x="21.3" y="437" width="0.2" height="15.0" fill="rgb(237,23,37)" rx="2" ry="2" />
<text  x="24.30" y="447.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.02%)</title><rect x="1049.2" y="645" width="0.2" height="15.0" fill="rgb(249,135,38)" rx="2" ry="2" />
<text  x="1052.18" y="655.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (2 samples, 0.03%)</title><rect x="452.6" y="501" width="0.4" height="15.0" fill="rgb(229,142,44)" rx="2" ry="2" />
<text  x="455.59" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (33 samples, 0.53%)</title><rect x="600.9" y="533" width="6.3" height="15.0" fill="rgb(206,64,42)" rx="2" ry="2" />
<text  x="603.94" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (114 samples, 1.82%)</title><rect x="899.3" y="549" width="21.5" height="15.0" fill="rgb(253,215,4)" rx="2" ry="2" />
<text  x="902.33" y="559.5" >h..</text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="1049.6" y="421" width="0.1" height="15.0" fill="rgb(229,66,25)" rx="2" ry="2" />
<text  x="1052.56" y="431.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (23 samples, 0.37%)</title><rect x="739.5" y="533" width="4.3" height="15.0" fill="rgb(240,26,4)" rx="2" ry="2" />
<text  x="742.50" y="543.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (1 samples, 0.02%)</title><rect x="1038.8" y="693" width="0.2" height="15.0" fill="rgb(251,136,41)" rx="2" ry="2" />
<text  x="1041.83" y="703.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="758.9" y="437" width="0.2" height="15.0" fill="rgb(234,24,0)" rx="2" ry="2" />
<text  x="761.89" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (18 samples, 0.29%)</title><rect x="440.9" y="501" width="3.4" height="15.0" fill="rgb(246,192,9)" rx="2" ry="2" />
<text  x="443.92" y="511.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="759.6" y="501" width="0.4" height="15.0" fill="rgb(209,174,43)" rx="2" ry="2" />
<text  x="762.64" y="511.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (4 samples, 0.06%)</title><rect x="1173.2" y="517" width="0.8" height="15.0" fill="rgb(222,181,12)" rx="2" ry="2" />
<text  x="1176.25" y="527.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="21.9" y="149" width="0.1" height="15.0" fill="rgb(246,183,46)" rx="2" ry="2" />
<text  x="24.86" y="159.5" ></text>
</g>
<g >
<title>handle_edge_irq (9 samples, 0.14%)</title><rect x="17.7" y="549" width="1.7" height="15.0" fill="rgb(254,165,10)" rx="2" ry="2" />
<text  x="20.72" y="559.5" ></text>
</g>
<g >
<title>do_iter_read (2 samples, 0.03%)</title><rect x="613.7" y="389" width="0.4" height="15.0" fill="rgb(246,119,54)" rx="2" ry="2" />
<text  x="616.74" y="399.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="613.9" y="309" width="0.2" height="15.0" fill="rgb(228,181,4)" rx="2" ry="2" />
<text  x="616.93" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1171.7" y="517" width="0.2" height="15.0" fill="rgb(205,159,4)" rx="2" ry="2" />
<text  x="1174.74" y="527.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="77.0" y="421" width="0.2" height="15.0" fill="rgb(217,18,40)" rx="2" ry="2" />
<text  x="80.02" y="431.5" ></text>
</g>
<g >
<title>lindrustfinalize (1 samples, 0.02%)</title><rect x="1046.4" y="629" width="0.1" height="15.0" fill="rgb(244,188,45)" rx="2" ry="2" />
<text  x="1049.36" y="639.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.10%)</title><rect x="914.6" y="405" width="1.1" height="15.0" fill="rgb(222,57,33)" rx="2" ry="2" />
<text  x="917.58" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (32 samples, 0.51%)</title><rect x="499.3" y="533" width="6.0" height="15.0" fill="rgb(252,22,52)" rx="2" ry="2" />
<text  x="502.28" y="543.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="228.9" y="453" width="0.2" height="15.0" fill="rgb(222,229,7)" rx="2" ry="2" />
<text  x="231.94" y="463.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="1046.4" y="501" width="0.1" height="15.0" fill="rgb(254,28,43)" rx="2" ry="2" />
<text  x="1049.36" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (18 samples, 0.29%)</title><rect x="921.2" y="549" width="3.4" height="15.0" fill="rgb(251,144,46)" rx="2" ry="2" />
<text  x="924.17" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (30 samples, 0.48%)</title><rect x="654.6" y="549" width="5.6" height="15.0" fill="rgb(252,135,35)" rx="2" ry="2" />
<text  x="657.59" y="559.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="251.5" y="405" width="0.2" height="15.0" fill="rgb(253,76,32)" rx="2" ry="2" />
<text  x="254.53" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.08%)</title><rect x="449.6" y="453" width="0.9" height="15.0" fill="rgb(233,30,27)" rx="2" ry="2" />
<text  x="452.58" y="463.5" ></text>
</g>
<g >
<title>skb_put (1 samples, 0.02%)</title><rect x="22.2" y="485" width="0.2" height="15.0" fill="rgb(215,18,19)" rx="2" ry="2" />
<text  x="25.24" y="495.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="367.3" y="293" width="0.2" height="15.0" fill="rgb(212,178,29)" rx="2" ry="2" />
<text  x="370.31" y="303.5" ></text>
</g>
<g >
<title>lind_read (2 samples, 0.03%)</title><rect x="1043.5" y="693" width="0.4" height="15.0" fill="rgb(231,197,53)" rx="2" ry="2" />
<text  x="1046.54" y="703.5" ></text>
</g>
<g >
<title>NaClLog (6 samples, 0.10%)</title><rect x="695.6" y="613" width="1.2" height="15.0" fill="rgb(253,173,1)" rx="2" ry="2" />
<text  x="698.63" y="623.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (560 samples, 8.93%)</title><rect x="815.4" y="581" width="105.4" height="15.0" fill="rgb(210,148,50)" rx="2" ry="2" />
<text  x="818.37" y="591.5" >&lt;dashmap::Da..</text>
</g>
<g >
<title>enqueue_hrtimer (3 samples, 0.05%)</title><rect x="237.0" y="517" width="0.6" height="15.0" fill="rgb(235,74,27)" rx="2" ry="2" />
<text  x="240.04" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.24%)</title><rect x="452.0" y="549" width="2.9" height="15.0" fill="rgb(244,65,36)" rx="2" ry="2" />
<text  x="455.03" y="559.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="787.3" y="549" width="0.2" height="15.0" fill="rgb(245,66,15)" rx="2" ry="2" />
<text  x="790.32" y="559.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (6 samples, 0.10%)</title><rect x="586.6" y="437" width="1.2" height="15.0" fill="rgb(248,5,26)" rx="2" ry="2" />
<text  x="589.63" y="447.5" ></text>
</g>
<g >
<title>zap_pte_range (3 samples, 0.05%)</title><rect x="367.1" y="389" width="0.6" height="15.0" fill="rgb(238,229,0)" rx="2" ry="2" />
<text  x="370.13" y="399.5" ></text>
</g>
<g >
<title>clockevents_program_event (5 samples, 0.08%)</title><rect x="235.5" y="485" width="1.0" height="15.0" fill="rgb(207,211,15)" rx="2" ry="2" />
<text  x="238.53" y="495.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="21.3" y="373" width="0.2" height="15.0" fill="rgb(249,221,11)" rx="2" ry="2" />
<text  x="24.30" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.06%)</title><rect x="439.4" y="501" width="0.8" height="15.0" fill="rgb(224,86,12)" rx="2" ry="2" />
<text  x="442.42" y="511.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4 samples, 0.06%)</title><rect x="22.4" y="565" width="0.8" height="15.0" fill="rgb(231,80,24)" rx="2" ry="2" />
<text  x="25.43" y="575.5" ></text>
</g>
<g >
<title>set_next_task_idle (3 samples, 0.05%)</title><rect x="230.3" y="517" width="0.5" height="15.0" fill="rgb(205,80,2)" rx="2" ry="2" />
<text  x="233.26" y="527.5" ></text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.02%)</title><rect x="251.7" y="581" width="0.2" height="15.0" fill="rgb(213,34,7)" rx="2" ry="2" />
<text  x="254.72" y="591.5" ></text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.02%)</title><rect x="80.0" y="389" width="0.2" height="15.0" fill="rgb(245,203,48)" rx="2" ry="2" />
<text  x="83.03" y="399.5" ></text>
</g>
<g >
<title>NaClCondVarSignal (1 samples, 0.02%)</title><rect x="369.0" y="597" width="0.2" height="15.0" fill="rgb(254,2,12)" rx="2" ry="2" />
<text  x="372.01" y="607.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (2 samples, 0.03%)</title><rect x="920.8" y="581" width="0.4" height="15.0" fill="rgb(224,96,29)" rx="2" ry="2" />
<text  x="923.79" y="591.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="269.8" y="613" width="0.2" height="15.0" fill="rgb(210,189,13)" rx="2" ry="2" />
<text  x="272.80" y="623.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (36 samples, 0.57%)</title><rect x="744.4" y="581" width="6.8" height="15.0" fill="rgb(254,223,4)" rx="2" ry="2" />
<text  x="747.39" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="1046.4" y="213" width="0.1" height="15.0" fill="rgb(243,223,42)" rx="2" ry="2" />
<text  x="1049.36" y="223.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (4 samples, 0.06%)</title><rect x="1174.0" y="517" width="0.8" height="15.0" fill="rgb(234,146,38)" rx="2" ry="2" />
<text  x="1177.00" y="527.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (4 samples, 0.06%)</title><rect x="197.9" y="517" width="0.7" height="15.0" fill="rgb(222,21,30)" rx="2" ry="2" />
<text  x="200.88" y="527.5" ></text>
</g>
<g >
<title>dispatcher@plt (1 samples, 0.02%)</title><rect x="671.0" y="629" width="0.2" height="15.0" fill="rgb(243,81,39)" rx="2" ry="2" />
<text  x="673.97" y="639.5" ></text>
</g>
<g >
<title>__munmap (3 samples, 0.05%)</title><rect x="369.2" y="581" width="0.6" height="15.0" fill="rgb(241,189,9)" rx="2" ry="2" />
<text  x="372.20" y="591.5" ></text>
</g>
<g >
<title>start_kernel (609 samples, 9.72%)</title><rect x="1075.4" y="661" width="114.6" height="15.0" fill="rgb(236,160,36)" rx="2" ry="2" />
<text  x="1078.35" y="671.5" >start_kernel</text>
</g>
<g >
<title>udpv6_queue_rcv_skb (1 samples, 0.02%)</title><rect x="21.9" y="277" width="0.1" height="15.0" fill="rgb(236,152,18)" rx="2" ry="2" />
<text  x="24.86" y="287.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.05%)</title><rect x="732.3" y="613" width="0.6" height="15.0" fill="rgb(249,74,3)" rx="2" ry="2" />
<text  x="735.35" y="623.5" ></text>
</g>
<g >
<title>tick_sched_handle (45 samples, 0.72%)</title><rect x="1085.9" y="437" width="8.5" height="15.0" fill="rgb(245,227,50)" rx="2" ry="2" />
<text  x="1088.89" y="447.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="58.8" y="613" width="0.1" height="15.0" fill="rgb(214,155,12)" rx="2" ry="2" />
<text  x="61.76" y="623.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.02%)</title><rect x="614.1" y="453" width="0.2" height="15.0" fill="rgb(238,105,33)" rx="2" ry="2" />
<text  x="617.12" y="463.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.10%)</title><rect x="901.8" y="453" width="1.1" height="15.0" fill="rgb(216,195,13)" rx="2" ry="2" />
<text  x="904.78" y="463.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.03%)</title><rect x="911.4" y="469" width="0.4" height="15.0" fill="rgb(231,9,46)" rx="2" ry="2" />
<text  x="914.38" y="479.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.02%)</title><rect x="1088.7" y="405" width="0.2" height="15.0" fill="rgb(205,135,3)" rx="2" ry="2" />
<text  x="1091.72" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="787.1" y="597" width="0.2" height="15.0" fill="rgb(252,90,37)" rx="2" ry="2" />
<text  x="790.13" y="607.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1 samples, 0.02%)</title><rect x="239.5" y="661" width="0.2" height="15.0" fill="rgb(219,14,24)" rx="2" ry="2" />
<text  x="242.49" y="671.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.05%)</title><rect x="605.6" y="453" width="0.6" height="15.0" fill="rgb(206,196,41)" rx="2" ry="2" />
<text  x="608.65" y="463.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (63 samples, 1.01%)</title><rect x="239.7" y="661" width="11.8" height="15.0" fill="rgb(250,76,1)" rx="2" ry="2" />
<text  x="242.67" y="671.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (26 samples, 0.41%)</title><rect x="252.3" y="693" width="4.9" height="15.0" fill="rgb(213,209,51)" rx="2" ry="2" />
<text  x="255.29" y="703.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.02%)</title><rect x="74.6" y="437" width="0.2" height="15.0" fill="rgb(222,144,7)" rx="2" ry="2" />
<text  x="77.57" y="447.5" ></text>
</g>
<g >
<title>asm_common_interrupt (25 samples, 0.40%)</title><rect x="17.7" y="597" width="4.7" height="15.0" fill="rgb(254,85,15)" rx="2" ry="2" />
<text  x="20.72" y="607.5" ></text>
</g>
<g >
<title>nf_ct_ext_destroy (1 samples, 0.02%)</title><rect x="21.5" y="293" width="0.2" height="15.0" fill="rgb(209,36,5)" rx="2" ry="2" />
<text  x="24.48" y="303.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (27 samples, 0.43%)</title><rect x="674.6" y="661" width="5.0" height="15.0" fill="rgb(250,27,47)" rx="2" ry="2" />
<text  x="677.55" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.24%)</title><rect x="452.0" y="517" width="2.9" height="15.0" fill="rgb(225,102,28)" rx="2" ry="2" />
<text  x="455.03" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (9 samples, 0.14%)</title><rect x="215.6" y="549" width="1.7" height="15.0" fill="rgb(246,99,2)" rx="2" ry="2" />
<text  x="218.58" y="559.5" ></text>
</g>
<g >
<title>__remove_hrtimer (2 samples, 0.03%)</title><rect x="1188.3" y="517" width="0.4" height="15.0" fill="rgb(205,18,46)" rx="2" ry="2" />
<text  x="1191.31" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.03%)</title><rect x="749.9" y="453" width="0.3" height="15.0" fill="rgb(228,13,52)" rx="2" ry="2" />
<text  x="752.85" y="463.5" ></text>
</g>
<g >
<title>sched_clock_cpu (7 samples, 0.11%)</title><rect x="198.8" y="533" width="1.3" height="15.0" fill="rgb(221,114,42)" rx="2" ry="2" />
<text  x="201.82" y="543.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="886.0" y="565" width="0.2" height="15.0" fill="rgb(240,94,52)" rx="2" ry="2" />
<text  x="888.96" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (12 samples, 0.19%)</title><rect x="215.0" y="565" width="2.3" height="15.0" fill="rgb(228,180,45)" rx="2" ry="2" />
<text  x="218.01" y="575.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.03%)</title><rect x="225.2" y="549" width="0.4" height="15.0" fill="rgb(244,70,34)" rx="2" ry="2" />
<text  x="228.18" y="559.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (23 samples, 0.37%)</title><rect x="911.8" y="485" width="4.3" height="15.0" fill="rgb(209,101,19)" rx="2" ry="2" />
<text  x="914.75" y="495.5" ></text>
</g>
<g >
<title>update_group_capacity (1 samples, 0.02%)</title><rect x="103.0" y="405" width="0.2" height="15.0" fill="rgb(205,193,53)" rx="2" ry="2" />
<text  x="106.00" y="415.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (5 samples, 0.08%)</title><rect x="236.9" y="549" width="0.9" height="15.0" fill="rgb(218,143,50)" rx="2" ry="2" />
<text  x="239.85" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.18%)</title><rect x="925.3" y="581" width="2.1" height="15.0" fill="rgb(232,73,42)" rx="2" ry="2" />
<text  x="928.31" y="591.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1095.1" y="469" width="0.2" height="15.0" fill="rgb(233,155,5)" rx="2" ry="2" />
<text  x="1098.12" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (63 samples, 1.01%)</title><rect x="239.7" y="613" width="11.8" height="15.0" fill="rgb(232,162,41)" rx="2" ry="2" />
<text  x="242.67" y="623.5" ></text>
</g>
<g >
<title>update_process_times (51 samples, 0.81%)</title><rect x="78.0" y="421" width="9.6" height="15.0" fill="rgb(213,177,12)" rx="2" ry="2" />
<text  x="80.96" y="431.5" ></text>
</g>
<g >
<title>raw6_local_deliver (1 samples, 0.02%)</title><rect x="22.0" y="341" width="0.2" height="15.0" fill="rgb(233,184,37)" rx="2" ry="2" />
<text  x="25.05" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (1 samples, 0.02%)</title><rect x="1046.4" y="565" width="0.1" height="15.0" fill="rgb(251,197,37)" rx="2" ry="2" />
<text  x="1049.36" y="575.5" ></text>
</g>
</g>
</svg>
