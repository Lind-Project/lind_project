<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.01%)</title><rect x="432.1" y="229" width="0.2" height="15.0" fill="rgb(241,156,9)" rx="2" ry="2" />
<text  x="435.11" y="239.5" ></text>
</g>
<g >
<title>__schedule (606 samples, 0.95%)</title><rect x="1156.4" y="437" width="11.2" height="15.0" fill="rgb(254,40,51)" rx="2" ry="2" />
<text  x="1159.45" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1,953 samples, 3.05%)</title><rect x="779.4" y="293" width="36.0" height="15.0" fill="rgb(220,167,20)" rx="2" ry="2" />
<text  x="782.37" y="303.5" >__G..</text>
</g>
<g >
<title>hashbrown::map::make_hash (441 samples, 0.69%)</title><rect x="862.5" y="341" width="8.1" height="15.0" fill="rgb(233,112,7)" rx="2" ry="2" />
<text  x="865.48" y="351.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (58 samples, 0.09%)</title><rect x="865.7" y="261" width="1.1" height="15.0" fill="rgb(206,24,4)" rx="2" ry="2" />
<text  x="868.74" y="271.5" ></text>
</g>
<g >
<title>NaClXMutexLock (17 samples, 0.03%)</title><rect x="906.1" y="485" width="0.3" height="15.0" fill="rgb(243,200,28)" rx="2" ry="2" />
<text  x="909.12" y="495.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (20 samples, 0.03%)</title><rect x="766.2" y="309" width="0.4" height="15.0" fill="rgb(220,15,20)" rx="2" ry="2" />
<text  x="769.23" y="319.5" ></text>
</g>
<g >
<title>lru_cache_add (9 samples, 0.01%)</title><rect x="14.3" y="85" width="0.1" height="15.0" fill="rgb(214,149,4)" rx="2" ry="2" />
<text  x="17.28" y="95.5" ></text>
</g>
<g >
<title>compact_zone (215 samples, 0.34%)</title><rect x="1096.4" y="453" width="4.0" height="15.0" fill="rgb(211,21,52)" rx="2" ry="2" />
<text  x="1099.44" y="463.5" ></text>
</g>
<g >
<title>cmd_record (373 samples, 0.58%)</title><rect x="10.1" y="501" width="6.9" height="15.0" fill="rgb(208,206,52)" rx="2" ry="2" />
<text  x="13.11" y="511.5" ></text>
</g>
<g >
<title>newidle_balance (505 samples, 0.79%)</title><rect x="1157.3" y="405" width="9.3" height="15.0" fill="rgb(232,16,50)" rx="2" ry="2" />
<text  x="1160.30" y="415.5" ></text>
</g>
<g >
<title>std::sync::once::Once::is_completed (18 samples, 0.03%)</title><rect x="626.6" y="261" width="0.3" height="15.0" fill="rgb(252,51,34)" rx="2" ry="2" />
<text  x="629.60" y="271.5" ></text>
</g>
<g >
<title>free_unref_page_commit (7 samples, 0.01%)</title><rect x="1096.7" y="373" width="0.2" height="15.0" fill="rgb(217,203,6)" rx="2" ry="2" />
<text  x="1099.74" y="383.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (8 samples, 0.01%)</title><rect x="526.3" y="277" width="0.1" height="15.0" fill="rgb(254,15,53)" rx="2" ry="2" />
<text  x="529.30" y="287.5" ></text>
</g>
<g >
<title>page_counter_uncharge (8 samples, 0.01%)</title><rect x="1096.9" y="357" width="0.2" height="15.0" fill="rgb(230,26,24)" rx="2" ry="2" />
<text  x="1099.92" y="367.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.09%)</title><rect x="829.0" y="261" width="1.1" height="15.0" fill="rgb(237,39,52)" rx="2" ry="2" />
<text  x="832.00" y="271.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (32 samples, 0.05%)</title><rect x="831.3" y="197" width="0.6" height="15.0" fill="rgb(206,6,8)" rx="2" ry="2" />
<text  x="834.29" y="207.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (51 samples, 0.08%)</title><rect x="824.6" y="245" width="0.9" height="15.0" fill="rgb(236,95,16)" rx="2" ry="2" />
<text  x="827.58" y="255.5" ></text>
</g>
<g >
<title>ovl_write_iter (8 samples, 0.01%)</title><rect x="17.0" y="421" width="0.2" height="15.0" fill="rgb(235,17,19)" rx="2" ry="2" />
<text  x="20.01" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (37 samples, 0.06%)</title><rect x="1103.2" y="405" width="0.7" height="15.0" fill="rgb(224,166,51)" rx="2" ry="2" />
<text  x="1106.21" y="415.5" ></text>
</g>
<g >
<title>exit_mm (54 samples, 0.08%)</title><rect x="972.1" y="437" width="1.0" height="15.0" fill="rgb(219,196,53)" rx="2" ry="2" />
<text  x="975.13" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (19 samples, 0.03%)</title><rect x="830.6" y="229" width="0.4" height="15.0" fill="rgb(229,67,48)" rx="2" ry="2" />
<text  x="833.62" y="239.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (14 samples, 0.02%)</title><rect x="939.5" y="357" width="0.3" height="15.0" fill="rgb(211,17,44)" rx="2" ry="2" />
<text  x="942.52" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (661 samples, 1.03%)</title><rect x="667.3" y="357" width="12.2" height="15.0" fill="rgb(231,145,24)" rx="2" ry="2" />
<text  x="670.34" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (29 samples, 0.05%)</title><rect x="1186.6" y="341" width="0.5" height="15.0" fill="rgb(238,98,24)" rx="2" ry="2" />
<text  x="1189.61" y="351.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (18 samples, 0.03%)</title><rect x="15.3" y="101" width="0.3" height="15.0" fill="rgb(237,57,41)" rx="2" ry="2" />
<text  x="18.27" y="111.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (984 samples, 1.54%)</title><rect x="1171.9" y="485" width="18.1" height="15.0" fill="rgb(251,117,24)" rx="2" ry="2" />
<text  x="1174.86" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (362 samples, 0.57%)</title><rect x="660.7" y="293" width="6.6" height="15.0" fill="rgb(227,195,54)" rx="2" ry="2" />
<text  x="663.67" y="303.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 0.10%)</title><rect x="10.4" y="165" width="1.2" height="15.0" fill="rgb(221,23,52)" rx="2" ry="2" />
<text  x="13.41" y="175.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (272 samples, 0.42%)</title><rect x="590.7" y="325" width="5.1" height="15.0" fill="rgb(247,112,43)" rx="2" ry="2" />
<text  x="593.75" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (12 samples, 0.02%)</title><rect x="667.6" y="245" width="0.2" height="15.0" fill="rgb(245,70,38)" rx="2" ry="2" />
<text  x="670.60" y="255.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1,284 samples, 2.01%)</title><rect x="361.4" y="293" width="23.7" height="15.0" fill="rgb(252,157,17)" rx="2" ry="2" />
<text  x="364.43" y="303.5" >c..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (699 samples, 1.09%)</title><rect x="643.2" y="357" width="12.9" height="15.0" fill="rgb(227,22,40)" rx="2" ry="2" />
<text  x="646.23" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (293 samples, 0.46%)</title><rect x="1150.7" y="453" width="5.4" height="15.0" fill="rgb(219,163,46)" rx="2" ry="2" />
<text  x="1153.71" y="463.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.02%)</title><rect x="870.3" y="261" width="0.3" height="15.0" fill="rgb(214,55,19)" rx="2" ry="2" />
<text  x="873.33" y="271.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (17 samples, 0.03%)</title><rect x="872.5" y="213" width="0.3" height="15.0" fill="rgb(208,149,21)" rx="2" ry="2" />
<text  x="875.51" y="223.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (105 samples, 0.16%)</title><rect x="774.7" y="261" width="1.9" height="15.0" fill="rgb(253,90,33)" rx="2" ry="2" />
<text  x="777.71" y="271.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (7 samples, 0.01%)</title><rect x="20.9" y="501" width="0.2" height="15.0" fill="rgb(246,79,32)" rx="2" ry="2" />
<text  x="23.93" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (629 samples, 0.98%)</title><rect x="667.9" y="309" width="11.6" height="15.0" fill="rgb(224,29,18)" rx="2" ry="2" />
<text  x="670.93" y="319.5" ></text>
</g>
<g >
<title>event_function_call (68 samples, 0.11%)</title><rect x="10.3" y="293" width="1.3" height="15.0" fill="rgb(221,98,3)" rx="2" ry="2" />
<text  x="13.33" y="303.5" ></text>
</g>
<g >
<title>NaClSysWrite (14 samples, 0.02%)</title><rect x="20.2" y="501" width="0.3" height="15.0" fill="rgb(215,221,46)" rx="2" ry="2" />
<text  x="23.19" y="511.5" ></text>
</g>
<g >
<title>cpuidle_reflect (7 samples, 0.01%)</title><rect x="1143.6" y="437" width="0.1" height="15.0" fill="rgb(234,54,21)" rx="2" ry="2" />
<text  x="1146.58" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (51 samples, 0.08%)</title><rect x="22.6" y="501" width="0.9" height="15.0" fill="rgb(247,204,50)" rx="2" ry="2" />
<text  x="25.55" y="511.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (10 samples, 0.02%)</title><rect x="116.3" y="485" width="0.1" height="15.0" fill="rgb(237,182,6)" rx="2" ry="2" />
<text  x="119.26" y="495.5" ></text>
</g>
<g >
<title>native_sched_clock (19 samples, 0.03%)</title><rect x="1167.3" y="389" width="0.3" height="15.0" fill="rgb(250,73,21)" rx="2" ry="2" />
<text  x="1170.25" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="1095.8" y="485" width="0.1" height="15.0" fill="rgb(221,13,52)" rx="2" ry="2" />
<text  x="1098.78" y="495.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (18 samples, 0.03%)</title><rect x="1103.2" y="357" width="0.3" height="15.0" fill="rgb(211,86,4)" rx="2" ry="2" />
<text  x="1106.21" y="367.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (17 samples, 0.03%)</title><rect x="765.9" y="293" width="0.3" height="15.0" fill="rgb(226,208,21)" rx="2" ry="2" />
<text  x="768.92" y="303.5" ></text>
</g>
<g >
<title>CompareAndSwap (26 samples, 0.04%)</title><rect x="940.3" y="501" width="0.5" height="15.0" fill="rgb(230,127,3)" rx="2" ry="2" />
<text  x="943.30" y="511.5" ></text>
</g>
<g >
<title>__lock_text_start (9 samples, 0.01%)</title><rect x="1147.6" y="373" width="0.2" height="15.0" fill="rgb(238,183,30)" rx="2" ry="2" />
<text  x="1150.60" y="383.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (677 samples, 1.06%)</title><rect x="539.2" y="469" width="12.5" height="15.0" fill="rgb(206,170,43)" rx="2" ry="2" />
<text  x="542.22" y="479.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 0.12%)</title><rect x="10.1" y="453" width="1.5" height="15.0" fill="rgb(212,135,44)" rx="2" ry="2" />
<text  x="13.11" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (72 samples, 0.11%)</title><rect x="773.1" y="293" width="1.4" height="15.0" fill="rgb(205,37,44)" rx="2" ry="2" />
<text  x="776.14" y="303.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (51 samples, 0.08%)</title><rect x="866.8" y="325" width="1.0" height="15.0" fill="rgb(246,40,48)" rx="2" ry="2" />
<text  x="869.81" y="335.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (12 samples, 0.02%)</title><rect x="11.6" y="373" width="0.2" height="15.0" fill="rgb(253,19,34)" rx="2" ry="2" />
<text  x="14.60" y="383.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (8 samples, 0.01%)</title><rect x="1103.2" y="293" width="0.2" height="15.0" fill="rgb(244,227,39)" rx="2" ry="2" />
<text  x="1106.21" y="303.5" ></text>
</g>
<g >
<title>perf (383 samples, 0.60%)</title><rect x="10.1" y="533" width="7.1" height="15.0" fill="rgb(231,55,16)" rx="2" ry="2" />
<text  x="13.11" y="543.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (179 samples, 0.28%)</title><rect x="145.2" y="293" width="3.3" height="15.0" fill="rgb(209,8,35)" rx="2" ry="2" />
<text  x="148.17" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (65 samples, 0.10%)</title><rect x="827.5" y="197" width="1.2" height="15.0" fill="rgb(209,34,10)" rx="2" ry="2" />
<text  x="830.53" y="207.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (405 samples, 0.63%)</title><rect x="854.7" y="341" width="7.4" height="15.0" fill="rgb(208,9,40)" rx="2" ry="2" />
<text  x="857.66" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (75 samples, 0.12%)</title><rect x="830.5" y="261" width="1.4" height="15.0" fill="rgb(237,38,19)" rx="2" ry="2" />
<text  x="833.50" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="61.9" y="485" width="0.3" height="15.0" fill="rgb(230,35,22)" rx="2" ry="2" />
<text  x="64.86" y="495.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (28 samples, 0.04%)</title><rect x="14.5" y="85" width="0.5" height="15.0" fill="rgb(231,1,25)" rx="2" ry="2" />
<text  x="17.48" y="95.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (32 samples, 0.05%)</title><rect x="831.3" y="181" width="0.6" height="15.0" fill="rgb(223,131,44)" rx="2" ry="2" />
<text  x="834.29" y="191.5" ></text>
</g>
<g >
<title>start_kernel (984 samples, 1.54%)</title><rect x="1171.9" y="469" width="18.1" height="15.0" fill="rgb(219,181,13)" rx="2" ry="2" />
<text  x="1174.86" y="479.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (8 samples, 0.01%)</title><rect x="432.1" y="245" width="0.2" height="15.0" fill="rgb(220,228,34)" rx="2" ry="2" />
<text  x="435.11" y="255.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (11 samples, 0.02%)</title><rect x="872.8" y="357" width="0.2" height="15.0" fill="rgb(212,229,53)" rx="2" ry="2" />
<text  x="875.82" y="367.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (15 samples, 0.02%)</title><rect x="61.6" y="437" width="0.3" height="15.0" fill="rgb(220,136,16)" rx="2" ry="2" />
<text  x="64.58" y="447.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (10 samples, 0.02%)</title><rect x="854.2" y="309" width="0.2" height="15.0" fill="rgb(237,229,15)" rx="2" ry="2" />
<text  x="857.24" y="319.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (113 samples, 0.18%)</title><rect x="937.9" y="501" width="2.1" height="15.0" fill="rgb(225,226,40)" rx="2" ry="2" />
<text  x="940.92" y="511.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (10 samples, 0.02%)</title><rect x="18.1" y="501" width="0.2" height="15.0" fill="rgb(231,140,54)" rx="2" ry="2" />
<text  x="21.13" y="511.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (12 samples, 0.02%)</title><rect x="684.0" y="309" width="0.3" height="15.0" fill="rgb(217,161,11)" rx="2" ry="2" />
<text  x="687.05" y="319.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.01%)</title><rect x="62.3" y="485" width="0.1" height="15.0" fill="rgb(253,132,51)" rx="2" ry="2" />
<text  x="65.28" y="495.5" ></text>
</g>
<g >
<title>__unmap_and_move (126 samples, 0.20%)</title><rect x="1097.1" y="405" width="2.3" height="15.0" fill="rgb(249,216,24)" rx="2" ry="2" />
<text  x="1100.07" y="415.5" ></text>
</g>
<g >
<title>[sel_ldr] (1,334 samples, 2.08%)</title><rect x="913.3" y="501" width="24.6" height="15.0" fill="rgb(250,171,54)" rx="2" ry="2" />
<text  x="916.31" y="511.5" >[..</text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (6 samples, 0.01%)</title><rect x="971.2" y="453" width="0.1" height="15.0" fill="rgb(229,43,18)" rx="2" ry="2" />
<text  x="974.17" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (367 samples, 0.57%)</title><rect x="649.4" y="277" width="6.7" height="15.0" fill="rgb(227,58,20)" rx="2" ry="2" />
<text  x="652.35" y="287.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (7 samples, 0.01%)</title><rect x="13.5" y="69" width="0.2" height="15.0" fill="rgb(219,69,17)" rx="2" ry="2" />
<text  x="16.52" y="79.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (275 samples, 0.43%)</title><rect x="420.1" y="261" width="5.1" height="15.0" fill="rgb(223,55,36)" rx="2" ry="2" />
<text  x="423.13" y="271.5" ></text>
</g>
<g >
<title>jbd2__journal_start (10 samples, 0.02%)</title><rect x="12.6" y="117" width="0.2" height="15.0" fill="rgb(249,187,36)" rx="2" ry="2" />
<text  x="15.60" y="127.5" ></text>
</g>
<g >
<title>common_interrupt (10 samples, 0.02%)</title><rect x="1103.0" y="389" width="0.2" height="15.0" fill="rgb(229,58,15)" rx="2" ry="2" />
<text  x="1106.02" y="399.5" ></text>
</g>
<g >
<title>rcu_idle_enter (6 samples, 0.01%)</title><rect x="1185.6" y="341" width="0.1" height="15.0" fill="rgb(229,46,14)" rx="2" ry="2" />
<text  x="1188.63" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (777 samples, 1.21%)</title><rect x="25.8" y="501" width="14.3" height="15.0" fill="rgb(239,194,17)" rx="2" ry="2" />
<text  x="28.80" y="511.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (332 samples, 0.52%)</title><rect x="543.3" y="405" width="6.1" height="15.0" fill="rgb(209,53,32)" rx="2" ry="2" />
<text  x="546.26" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (332 samples, 0.52%)</title><rect x="643.2" y="277" width="6.2" height="15.0" fill="rgb(246,158,3)" rx="2" ry="2" />
<text  x="646.23" y="287.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (410 samples, 0.64%)</title><rect x="816.2" y="261" width="7.6" height="15.0" fill="rgb(243,37,9)" rx="2" ry="2" />
<text  x="819.23" y="271.5" ></text>
</g>
<g >
<title>do_iter_write (262 samples, 0.41%)</title><rect x="12.1" y="229" width="4.9" height="15.0" fill="rgb(247,225,38)" rx="2" ry="2" />
<text  x="15.14" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (215 samples, 0.34%)</title><rect x="586.8" y="389" width="3.9" height="15.0" fill="rgb(231,137,2)" rx="2" ry="2" />
<text  x="589.78" y="399.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (7 samples, 0.01%)</title><rect x="945.2" y="485" width="0.1" height="15.0" fill="rgb(214,223,5)" rx="2" ry="2" />
<text  x="948.20" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (16 samples, 0.02%)</title><rect x="61.9" y="421" width="0.3" height="15.0" fill="rgb(239,144,24)" rx="2" ry="2" />
<text  x="64.86" y="431.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (17 samples, 0.03%)</title><rect x="905.8" y="469" width="0.3" height="15.0" fill="rgb(246,30,31)" rx="2" ry="2" />
<text  x="908.80" y="479.5" ></text>
</g>
<g >
<title>std::thread::panicking (11 samples, 0.02%)</title><rect x="872.8" y="341" width="0.2" height="15.0" fill="rgb(246,147,31)" rx="2" ry="2" />
<text  x="875.82" y="351.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="971.2" y="485" width="0.1" height="15.0" fill="rgb(231,19,22)" rx="2" ry="2" />
<text  x="974.17" y="495.5" ></text>
</g>
<g >
<title>net_rx_action (7 samples, 0.01%)</title><rect x="1103.1" y="309" width="0.1" height="15.0" fill="rgb(218,210,2)" rx="2" ry="2" />
<text  x="1106.08" y="319.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (34 samples, 0.05%)</title><rect x="16.3" y="133" width="0.6" height="15.0" fill="rgb(205,161,43)" rx="2" ry="2" />
<text  x="19.27" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (18 samples, 0.03%)</title><rect x="1149.4" y="341" width="0.3" height="15.0" fill="rgb(238,94,25)" rx="2" ry="2" />
<text  x="1152.35" y="351.5" ></text>
</g>
<g >
<title>rest_init (984 samples, 1.54%)</title><rect x="1171.9" y="437" width="18.1" height="15.0" fill="rgb(249,224,42)" rx="2" ry="2" />
<text  x="1174.86" y="447.5" ></text>
</g>
<g >
<title>std::lazy::SyncLazy&lt;T,F&gt;::force (18 samples, 0.03%)</title><rect x="626.6" y="341" width="0.3" height="15.0" fill="rgb(206,21,44)" rx="2" ry="2" />
<text  x="629.60" y="351.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::is_initialized (18 samples, 0.03%)</title><rect x="626.6" y="277" width="0.3" height="15.0" fill="rgb(212,229,34)" rx="2" ry="2" />
<text  x="629.60" y="287.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (28 samples, 0.04%)</title><rect x="59.7" y="501" width="0.5" height="15.0" fill="rgb(232,165,11)" rx="2" ry="2" />
<text  x="62.66" y="511.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (879 samples, 1.37%)</title><rect x="1103.9" y="405" width="16.2" height="15.0" fill="rgb(229,2,44)" rx="2" ry="2" />
<text  x="1106.93" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (161 samples, 0.25%)</title><rect x="825.8" y="245" width="2.9" height="15.0" fill="rgb(222,139,27)" rx="2" ry="2" />
<text  x="828.76" y="255.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (37 samples, 0.06%)</title><rect x="1149.0" y="357" width="0.7" height="15.0" fill="rgb(231,160,11)" rx="2" ry="2" />
<text  x="1152.00" y="367.5" ></text>
</g>
<g >
<title>free_unref_page (9 samples, 0.01%)</title><rect x="1096.7" y="389" width="0.2" height="15.0" fill="rgb(226,24,44)" rx="2" ry="2" />
<text  x="1099.70" y="399.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (699 samples, 1.09%)</title><rect x="643.2" y="341" width="12.9" height="15.0" fill="rgb(230,88,25)" rx="2" ry="2" />
<text  x="646.23" y="351.5" ></text>
</g>
<g >
<title>nohz_csd_func (10 samples, 0.02%)</title><rect x="1187.7" y="373" width="0.2" height="15.0" fill="rgb(206,41,44)" rx="2" ry="2" />
<text  x="1190.71" y="383.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (27 samples, 0.04%)</title><rect x="88.4" y="469" width="0.5" height="15.0" fill="rgb(210,228,40)" rx="2" ry="2" />
<text  x="91.39" y="479.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (21 samples, 0.03%)</title><rect x="970.5" y="485" width="0.4" height="15.0" fill="rgb(233,30,11)" rx="2" ry="2" />
<text  x="973.55" y="495.5" ></text>
</g>
<g >
<title>unmap_page_range (53 samples, 0.08%)</title><rect x="972.2" y="357" width="0.9" height="15.0" fill="rgb(222,127,11)" rx="2" ry="2" />
<text  x="975.15" y="367.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (13 samples, 0.02%)</title><rect x="869.2" y="229" width="0.3" height="15.0" fill="rgb(248,188,3)" rx="2" ry="2" />
<text  x="872.25" y="239.5" ></text>
</g>
<g >
<title>remote_function (65 samples, 0.10%)</title><rect x="10.4" y="245" width="1.2" height="15.0" fill="rgb(215,0,17)" rx="2" ry="2" />
<text  x="13.39" y="255.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1,689 samples, 2.64%)</title><rect x="440.0" y="293" width="31.2" height="15.0" fill="rgb(245,39,18)" rx="2" ry="2" />
<text  x="443.02" y="303.5" >co..</text>
</g>
<g >
<title>__x64_sys_clone (6 samples, 0.01%)</title><rect x="1095.5" y="485" width="0.1" height="15.0" fill="rgb(224,204,19)" rx="2" ry="2" />
<text  x="1098.54" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (232 samples, 0.36%)</title><rect x="656.4" y="293" width="4.3" height="15.0" fill="rgb(218,46,49)" rx="2" ry="2" />
<text  x="659.39" y="303.5" ></text>
</g>
<g >
<title>buffer_migrate_page (97 samples, 0.15%)</title><rect x="1097.2" y="373" width="1.8" height="15.0" fill="rgb(214,146,41)" rx="2" ry="2" />
<text  x="1100.18" y="383.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (36 samples, 0.06%)</title><rect x="118.1" y="405" width="0.6" height="15.0" fill="rgb(209,59,37)" rx="2" ry="2" />
<text  x="121.07" y="415.5" ></text>
</g>
<g >
<title>proactive_compact_node (215 samples, 0.34%)</title><rect x="1096.4" y="469" width="4.0" height="15.0" fill="rgb(209,153,32)" rx="2" ry="2" />
<text  x="1099.44" y="479.5" ></text>
</g>
<g >
<title>fdarray__poll (18 samples, 0.03%)</title><rect x="11.6" y="469" width="0.3" height="15.0" fill="rgb(251,213,37)" rx="2" ry="2" />
<text  x="14.60" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (3,908 samples, 6.11%)</title><rect x="684.0" y="341" width="72.1" height="15.0" fill="rgb(231,114,34)" rx="2" ry="2" />
<text  x="687.05" y="351.5" >core::pt..</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (139 samples, 0.22%)</title><rect x="385.1" y="309" width="2.6" height="15.0" fill="rgb(253,184,40)" rx="2" ry="2" />
<text  x="388.10" y="319.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (273 samples, 0.43%)</title><rect x="425.2" y="261" width="5.0" height="15.0" fill="rgb(219,148,10)" rx="2" ry="2" />
<text  x="428.20" y="271.5" ></text>
</g>
<g >
<title>irq_exit_rcu (16 samples, 0.02%)</title><rect x="1103.6" y="373" width="0.3" height="15.0" fill="rgb(239,171,7)" rx="2" ry="2" />
<text  x="1106.58" y="383.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (13 samples, 0.02%)</title><rect x="939.5" y="341" width="0.3" height="15.0" fill="rgb(217,198,0)" rx="2" ry="2" />
<text  x="942.54" y="351.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (32 samples, 0.05%)</title><rect x="831.3" y="213" width="0.6" height="15.0" fill="rgb(228,112,13)" rx="2" ry="2" />
<text  x="834.29" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 0.12%)</title><rect x="10.1" y="389" width="1.5" height="15.0" fill="rgb(235,24,33)" rx="2" ry="2" />
<text  x="13.11" y="399.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (222 samples, 0.35%)</title><rect x="533.0" y="309" width="4.0" height="15.0" fill="rgb(219,110,47)" rx="2" ry="2" />
<text  x="535.95" y="319.5" ></text>
</g>
<g >
<title>&lt;std::lazy::SyncLazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.03%)</title><rect x="626.6" y="357" width="0.3" height="15.0" fill="rgb(229,118,39)" rx="2" ry="2" />
<text  x="629.60" y="367.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (559 samples, 0.87%)</title><rect x="756.3" y="341" width="10.3" height="15.0" fill="rgb(252,48,45)" rx="2" ry="2" />
<text  x="759.29" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (161 samples, 0.25%)</title><rect x="1146.8" y="405" width="3.0" height="15.0" fill="rgb(223,228,9)" rx="2" ry="2" />
<text  x="1149.82" y="415.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (164 samples, 0.26%)</title><rect x="1163.6" y="357" width="3.0" height="15.0" fill="rgb(248,211,23)" rx="2" ry="2" />
<text  x="1166.58" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (17 samples, 0.03%)</title><rect x="872.5" y="261" width="0.3" height="15.0" fill="rgb(211,159,38)" rx="2" ry="2" />
<text  x="875.51" y="271.5" ></text>
</g>
<g >
<title>std::thread::panicking (12 samples, 0.02%)</title><rect x="667.6" y="309" width="0.2" height="15.0" fill="rgb(234,186,31)" rx="2" ry="2" />
<text  x="670.60" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (14 samples, 0.02%)</title><rect x="863.9" y="261" width="0.3" height="15.0" fill="rgb(226,7,53)" rx="2" ry="2" />
<text  x="866.94" y="271.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (66 samples, 0.10%)</title><rect x="824.3" y="277" width="1.2" height="15.0" fill="rgb(224,164,33)" rx="2" ry="2" />
<text  x="827.30" y="287.5" ></text>
</g>
<g >
<title>unmap_vmas (53 samples, 0.08%)</title><rect x="972.2" y="389" width="0.9" height="15.0" fill="rgb(248,108,17)" rx="2" ry="2" />
<text  x="975.15" y="399.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (9 samples, 0.01%)</title><rect x="15.1" y="117" width="0.1" height="15.0" fill="rgb(215,201,2)" rx="2" ry="2" />
<text  x="18.05" y="127.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (215 samples, 0.34%)</title><rect x="586.8" y="373" width="3.9" height="15.0" fill="rgb(252,140,41)" rx="2" ry="2" />
<text  x="589.78" y="383.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (9 samples, 0.01%)</title><rect x="552.1" y="469" width="0.2" height="15.0" fill="rgb(228,211,26)" rx="2" ry="2" />
<text  x="555.14" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (53 samples, 0.08%)</title><rect x="868.5" y="245" width="1.0" height="15.0" fill="rgb(237,94,29)" rx="2" ry="2" />
<text  x="871.51" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (54 samples, 0.08%)</title><rect x="972.1" y="485" width="1.0" height="15.0" fill="rgb(229,213,25)" rx="2" ry="2" />
<text  x="975.13" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (12 samples, 0.02%)</title><rect x="684.0" y="229" width="0.3" height="15.0" fill="rgb(211,225,46)" rx="2" ry="2" />
<text  x="687.05" y="239.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (7 samples, 0.01%)</title><rect x="1163.4" y="341" width="0.1" height="15.0" fill="rgb(240,13,47)" rx="2" ry="2" />
<text  x="1166.42" y="351.5" ></text>
</g>
<g >
<title>smp_call_function_single (66 samples, 0.10%)</title><rect x="10.4" y="277" width="1.2" height="15.0" fill="rgb(237,193,14)" rx="2" ry="2" />
<text  x="13.37" y="287.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (439 samples, 0.69%)</title><rect x="766.6" y="341" width="8.1" height="15.0" fill="rgb(228,196,54)" rx="2" ry="2" />
<text  x="769.60" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_restart (10 samples, 0.02%)</title><rect x="1170.2" y="437" width="0.2" height="15.0" fill="rgb(252,104,1)" rx="2" ry="2" />
<text  x="1173.18" y="447.5" ></text>
</g>
<g >
<title>migrate_pages (205 samples, 0.32%)</title><rect x="1096.6" y="437" width="3.8" height="15.0" fill="rgb(237,134,37)" rx="2" ry="2" />
<text  x="1099.63" y="447.5" ></text>
</g>
<g >
<title>dispatcher (22,683 samples, 35.44%)</title><rect x="118.9" y="405" width="418.2" height="15.0" fill="rgb(232,93,25)" rx="2" ry="2" />
<text  x="121.92" y="415.5" >dispatcher</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (420 samples, 0.66%)</title><rect x="432.3" y="293" width="7.7" height="15.0" fill="rgb(237,134,35)" rx="2" ry="2" />
<text  x="435.28" y="303.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (27 samples, 0.04%)</title><rect x="831.9" y="293" width="0.5" height="15.0" fill="rgb(248,122,16)" rx="2" ry="2" />
<text  x="834.88" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (25 samples, 0.04%)</title><rect x="763.5" y="293" width="0.5" height="15.0" fill="rgb(226,3,20)" rx="2" ry="2" />
<text  x="766.50" y="303.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (36 samples, 0.06%)</title><rect x="118.1" y="421" width="0.6" height="15.0" fill="rgb(244,69,24)" rx="2" ry="2" />
<text  x="121.07" y="431.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (35 samples, 0.05%)</title><rect x="17.5" y="501" width="0.6" height="15.0" fill="rgb(246,56,18)" rx="2" ry="2" />
<text  x="20.47" y="511.5" ></text>
</g>
<g >
<title>rcu_idle_exit (51 samples, 0.08%)</title><rect x="1141.9" y="405" width="0.9" height="15.0" fill="rgb(238,78,45)" rx="2" ry="2" />
<text  x="1144.88" y="415.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1,186 samples, 1.85%)</title><rect x="832.4" y="357" width="21.8" height="15.0" fill="rgb(242,46,26)" rx="2" ry="2" />
<text  x="835.38" y="367.5" >s..</text>
</g>
<g >
<title>[perf-376198.map] (59 samples, 0.09%)</title><rect x="62.7" y="517" width="1.1" height="15.0" fill="rgb(226,139,52)" rx="2" ry="2" />
<text  x="65.71" y="527.5" ></text>
</g>
<g >
<title>_perf_ioctl (80 samples, 0.12%)</title><rect x="10.1" y="341" width="1.5" height="15.0" fill="rgb(206,99,22)" rx="2" ry="2" />
<text  x="13.11" y="351.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (315 samples, 0.49%)</title><rect x="51.5" y="485" width="5.8" height="15.0" fill="rgb(234,18,14)" rx="2" ry="2" />
<text  x="54.50" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (411 samples, 0.64%)</title><rect x="595.8" y="325" width="7.5" height="15.0" fill="rgb(249,174,23)" rx="2" ry="2" />
<text  x="598.76" y="335.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (315 samples, 0.49%)</title><rect x="51.5" y="453" width="5.8" height="15.0" fill="rgb(245,161,7)" rx="2" ry="2" />
<text  x="54.50" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (54 samples, 0.08%)</title><rect x="972.1" y="501" width="1.0" height="15.0" fill="rgb(220,53,8)" rx="2" ry="2" />
<text  x="975.13" y="511.5" ></text>
</g>
<g >
<title>llist_add_batch (96 samples, 0.15%)</title><rect x="1164.8" y="341" width="1.8" height="15.0" fill="rgb(219,27,28)" rx="2" ry="2" />
<text  x="1167.78" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (367 samples, 0.57%)</title><rect x="649.4" y="293" width="6.7" height="15.0" fill="rgb(252,50,39)" rx="2" ry="2" />
<text  x="652.35" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2,417 samples, 3.78%)</title><rect x="481.7" y="261" width="44.6" height="15.0" fill="rgb(210,57,20)" rx="2" ry="2" />
<text  x="484.72" y="271.5" >__me..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 samples, 0.25%)</title><rect x="825.8" y="213" width="2.9" height="15.0" fill="rgb(248,214,16)" rx="2" ry="2" />
<text  x="828.76" y="223.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (110 samples, 0.17%)</title><rect x="430.2" y="277" width="2.1" height="15.0" fill="rgb(250,6,43)" rx="2" ry="2" />
<text  x="433.23" y="287.5" ></text>
</g>
<g >
<title>try_to_wake_up (7 samples, 0.01%)</title><rect x="1103.2" y="261" width="0.1" height="15.0" fill="rgb(205,157,26)" rx="2" ry="2" />
<text  x="1106.21" y="271.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (72 samples, 0.11%)</title><rect x="10.3" y="325" width="1.3" height="15.0" fill="rgb(251,4,47)" rx="2" ry="2" />
<text  x="13.26" y="335.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (6 samples, 0.01%)</title><rect x="551.7" y="469" width="0.1" height="15.0" fill="rgb(211,111,37)" rx="2" ry="2" />
<text  x="554.70" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (12 samples, 0.02%)</title><rect x="871.3" y="261" width="0.2" height="15.0" fill="rgb(240,84,8)" rx="2" ry="2" />
<text  x="874.29" y="271.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (7 samples, 0.01%)</title><rect x="14.3" y="53" width="0.1" height="15.0" fill="rgb(222,33,25)" rx="2" ry="2" />
<text  x="17.28" y="63.5" ></text>
</g>
<g >
<title>buffer_migrate_page_norefs (9 samples, 0.01%)</title><rect x="1099.0" y="373" width="0.1" height="15.0" fill="rgb(206,90,24)" rx="2" ry="2" />
<text  x="1101.97" y="383.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (27 samples, 0.04%)</title><rect x="972.6" y="293" width="0.5" height="15.0" fill="rgb(220,211,36)" rx="2" ry="2" />
<text  x="975.63" y="303.5" ></text>
</g>
<g >
<title>NaClLog (121 samples, 0.19%)</title><rect x="114.0" y="485" width="2.3" height="15.0" fill="rgb(211,107,20)" rx="2" ry="2" />
<text  x="117.03" y="495.5" ></text>
</g>
<g >
<title>sync_regs (12 samples, 0.02%)</title><rect x="940.1" y="501" width="0.2" height="15.0" fill="rgb(215,22,11)" rx="2" ry="2" />
<text  x="943.07" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (410 samples, 0.64%)</title><rect x="816.2" y="293" width="7.6" height="15.0" fill="rgb(249,24,22)" rx="2" ry="2" />
<text  x="819.23" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (364 samples, 0.57%)</title><rect x="873.7" y="341" width="6.7" height="15.0" fill="rgb(236,219,32)" rx="2" ry="2" />
<text  x="876.69" y="351.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (635 samples, 0.99%)</title><rect x="667.8" y="325" width="11.7" height="15.0" fill="rgb(214,24,50)" rx="2" ry="2" />
<text  x="670.82" y="335.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (12 samples, 0.02%)</title><rect x="667.6" y="277" width="0.2" height="15.0" fill="rgb(222,131,46)" rx="2" ry="2" />
<text  x="670.60" y="287.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (13 samples, 0.02%)</title><rect x="116.7" y="485" width="0.3" height="15.0" fill="rgb(229,79,51)" rx="2" ry="2" />
<text  x="119.74" y="495.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (7 samples, 0.01%)</title><rect x="683.9" y="325" width="0.1" height="15.0" fill="rgb(250,130,15)" rx="2" ry="2" />
<text  x="686.92" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (18 samples, 0.03%)</title><rect x="1103.2" y="341" width="0.3" height="15.0" fill="rgb(225,140,37)" rx="2" ry="2" />
<text  x="1106.21" y="351.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (12 samples, 0.02%)</title><rect x="684.0" y="261" width="0.3" height="15.0" fill="rgb(253,82,31)" rx="2" ry="2" />
<text  x="687.05" y="271.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (41 samples, 0.06%)</title><rect x="118.0" y="453" width="0.7" height="15.0" fill="rgb(236,142,36)" rx="2" ry="2" />
<text  x="120.97" y="463.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (16 samples, 0.02%)</title><rect x="1187.4" y="373" width="0.3" height="15.0" fill="rgb(233,22,30)" rx="2" ry="2" />
<text  x="1190.38" y="383.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="61.6" y="469" width="0.3" height="15.0" fill="rgb(206,80,35)" rx="2" ry="2" />
<text  x="64.58" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.03%)</title><rect x="11.6" y="421" width="0.3" height="15.0" fill="rgb(239,13,1)" rx="2" ry="2" />
<text  x="14.60" y="431.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (41 samples, 0.06%)</title><rect x="13.7" y="101" width="0.8" height="15.0" fill="rgb(209,171,18)" rx="2" ry="2" />
<text  x="16.71" y="111.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (161 samples, 0.25%)</title><rect x="825.8" y="229" width="2.9" height="15.0" fill="rgb(210,49,43)" rx="2" ry="2" />
<text  x="828.76" y="239.5" ></text>
</g>
<g >
<title>ion (268 samples, 0.42%)</title><rect x="12.0" y="389" width="5.0" height="15.0" fill="rgb(248,100,36)" rx="2" ry="2" />
<text  x="15.05" y="399.5" ></text>
</g>
<g >
<title>NaClLog (63 samples, 0.10%)</title><rect x="941.1" y="501" width="1.2" height="15.0" fill="rgb(221,15,23)" rx="2" ry="2" />
<text  x="944.14" y="511.5" ></text>
</g>
<g >
<title>alloc_pages_vma (53 samples, 0.08%)</title><rect x="938.3" y="389" width="1.0" height="15.0" fill="rgb(232,216,13)" rx="2" ry="2" />
<text  x="941.34" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (55 samples, 0.09%)</title><rect x="970.3" y="501" width="1.0" height="15.0" fill="rgb(229,85,22)" rx="2" ry="2" />
<text  x="973.27" y="511.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge (11 samples, 0.02%)</title><rect x="1096.9" y="389" width="0.2" height="15.0" fill="rgb(224,97,9)" rx="2" ry="2" />
<text  x="1099.87" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (94 samples, 0.15%)</title><rect x="23.5" y="501" width="1.7" height="15.0" fill="rgb(225,107,48)" rx="2" ry="2" />
<text  x="26.49" y="511.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 0.10%)</title><rect x="10.4" y="213" width="1.2" height="15.0" fill="rgb(234,202,8)" rx="2" ry="2" />
<text  x="13.41" y="223.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (10 samples, 0.02%)</title><rect x="18.3" y="501" width="0.2" height="15.0" fill="rgb(206,36,18)" rx="2" ry="2" />
<text  x="21.33" y="511.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (122 samples, 0.19%)</title><rect x="774.7" y="309" width="2.2" height="15.0" fill="rgb(228,146,38)" rx="2" ry="2" />
<text  x="777.69" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (5,000 samples, 7.81%)</title><rect x="148.5" y="341" width="92.1" height="15.0" fill="rgb(207,8,14)" rx="2" ry="2" />
<text  x="151.47" y="351.5" >core::sync:..</text>
</g>
<g >
<title>NaClSysWriteDecoder (20,003 samples, 31.25%)</title><rect x="537.4" y="485" width="368.7" height="15.0" fill="rgb(211,119,20)" rx="2" ry="2" />
<text  x="540.36" y="495.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>read_tsc (22 samples, 0.03%)</title><rect x="1168.3" y="437" width="0.4" height="15.0" fill="rgb(226,172,45)" rx="2" ry="2" />
<text  x="1171.28" y="447.5" ></text>
</g>
<g >
<title>core::cmp::min (7 samples, 0.01%)</title><rect x="683.9" y="341" width="0.1" height="15.0" fill="rgb(231,157,0)" rx="2" ry="2" />
<text  x="686.92" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.01%)</title><rect x="17.0" y="517" width="0.2" height="15.0" fill="rgb(209,74,0)" rx="2" ry="2" />
<text  x="19.99" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (120 samples, 0.19%)</title><rect x="870.6" y="325" width="2.2" height="15.0" fill="rgb(244,27,25)" rx="2" ry="2" />
<text  x="873.61" y="335.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (7,975 samples, 12.46%)</title><rect x="240.6" y="341" width="147.1" height="15.0" fill="rgb(233,39,25)" rx="2" ry="2" />
<text  x="243.64" y="351.5" >ringbuf::consumer:..</text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.02%)</title><rect x="970.9" y="437" width="0.3" height="15.0" fill="rgb(249,161,16)" rx="2" ry="2" />
<text  x="973.93" y="447.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (9 samples, 0.01%)</title><rect x="1099.0" y="309" width="0.1" height="15.0" fill="rgb(226,62,46)" rx="2" ry="2" />
<text  x="1101.97" y="319.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (11 samples, 0.02%)</title><rect x="1142.6" y="389" width="0.2" height="15.0" fill="rgb(227,106,15)" rx="2" ry="2" />
<text  x="1145.62" y="399.5" ></text>
</g>
<g >
<title>native_sched_clock (14 samples, 0.02%)</title><rect x="1168.7" y="405" width="0.3" height="15.0" fill="rgb(213,65,4)" rx="2" ry="2" />
<text  x="1171.73" y="415.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (462 samples, 0.72%)</title><rect x="1158.1" y="389" width="8.5" height="15.0" fill="rgb(243,182,25)" rx="2" ry="2" />
<text  x="1161.09" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (48 samples, 0.07%)</title><rect x="1095.5" y="501" width="0.9" height="15.0" fill="rgb(247,170,27)" rx="2" ry="2" />
<text  x="1098.54" y="511.5" ></text>
</g>
<g >
<title>NaClXMutexLock (9 samples, 0.01%)</title><rect x="21.1" y="501" width="0.1" height="15.0" fill="rgb(206,55,51)" rx="2" ry="2" />
<text  x="24.06" y="511.5" ></text>
</g>
<g >
<title>__run_hrtimer (18 samples, 0.03%)</title><rect x="1103.2" y="309" width="0.3" height="15.0" fill="rgb(235,173,48)" rx="2" ry="2" />
<text  x="1106.21" y="319.5" ></text>
</g>
<g >
<title>invalidate_bh_lrus (9 samples, 0.01%)</title><rect x="1099.0" y="341" width="0.1" height="15.0" fill="rgb(247,211,19)" rx="2" ry="2" />
<text  x="1101.97" y="351.5" ></text>
</g>
<g >
<title>clear_page_erms (19 samples, 0.03%)</title><rect x="1100.0" y="341" width="0.3" height="15.0" fill="rgb(233,153,13)" rx="2" ry="2" />
<text  x="1102.98" y="351.5" ></text>
</g>
<g >
<title>std::thread::panicking (12 samples, 0.02%)</title><rect x="684.0" y="293" width="0.3" height="15.0" fill="rgb(219,156,16)" rx="2" ry="2" />
<text  x="687.05" y="303.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (6 samples, 0.01%)</title><rect x="16.1" y="37" width="0.1" height="15.0" fill="rgb(221,110,1)" rx="2" ry="2" />
<text  x="19.08" y="47.5" ></text>
</g>
<g >
<title>pick_next_task_fair (518 samples, 0.81%)</title><rect x="1157.1" y="421" width="9.6" height="15.0" fill="rgb(210,207,34)" rx="2" ry="2" />
<text  x="1160.15" y="431.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (99 samples, 0.15%)</title><rect x="1151.2" y="437" width="1.8" height="15.0" fill="rgb(237,178,30)" rx="2" ry="2" />
<text  x="1154.21" y="447.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (220 samples, 0.34%)</title><rect x="862.8" y="325" width="4.0" height="15.0" fill="rgb(226,166,50)" rx="2" ry="2" />
<text  x="865.76" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (106 samples, 0.17%)</title><rect x="774.7" y="277" width="1.9" height="15.0" fill="rgb(219,73,28)" rx="2" ry="2" />
<text  x="777.69" y="287.5" ></text>
</g>
<g >
<title>cpumask_next (10 samples, 0.02%)</title><rect x="1161.1" y="357" width="0.2" height="15.0" fill="rgb(231,50,41)" rx="2" ry="2" />
<text  x="1164.13" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (12 samples, 0.02%)</title><rect x="667.6" y="261" width="0.2" height="15.0" fill="rgb(241,130,29)" rx="2" ry="2" />
<text  x="670.60" y="271.5" ></text>
</g>
<g >
<title>cpu_startup_entry (984 samples, 1.54%)</title><rect x="1171.9" y="421" width="18.1" height="15.0" fill="rgb(206,49,21)" rx="2" ry="2" />
<text  x="1174.86" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.01%)</title><rect x="17.0" y="501" width="0.2" height="15.0" fill="rgb(247,40,6)" rx="2" ry="2" />
<text  x="20.01" y="511.5" ></text>
</g>
<g >
<title>perf_mmap__push (269 samples, 0.42%)</title><rect x="12.0" y="437" width="5.0" height="15.0" fill="rgb(236,20,7)" rx="2" ry="2" />
<text  x="15.03" y="447.5" ></text>
</g>
<g >
<title>record__write (268 samples, 0.42%)</title><rect x="12.0" y="405" width="5.0" height="15.0" fill="rgb(238,31,51)" rx="2" ry="2" />
<text  x="15.05" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,867 samples, 6.04%)</title><rect x="1100.6" y="485" width="71.3" height="15.0" fill="rgb(211,178,3)" rx="2" ry="2" />
<text  x="1103.57" y="495.5" >cpu_star..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (198 samples, 0.31%)</title><rect x="828.7" y="309" width="3.7" height="15.0" fill="rgb(229,153,22)" rx="2" ry="2" />
<text  x="831.73" y="319.5" ></text>
</g>
<g >
<title>NaClLog (38 samples, 0.06%)</title><rect x="19.2" y="501" width="0.7" height="15.0" fill="rgb(236,88,53)" rx="2" ry="2" />
<text  x="22.16" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (12 samples, 0.02%)</title><rect x="1147.8" y="373" width="0.2" height="15.0" fill="rgb(254,52,21)" rx="2" ry="2" />
<text  x="1150.76" y="383.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (13 samples, 0.02%)</title><rect x="854.4" y="277" width="0.3" height="15.0" fill="rgb(234,197,50)" rx="2" ry="2" />
<text  x="857.42" y="287.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (19 samples, 0.03%)</title><rect x="40.6" y="485" width="0.4" height="15.0" fill="rgb(209,5,48)" rx="2" ry="2" />
<text  x="43.62" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (75 samples, 0.12%)</title><rect x="1169.0" y="453" width="1.4" height="15.0" fill="rgb(232,196,19)" rx="2" ry="2" />
<text  x="1171.98" y="463.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (116 samples, 0.18%)</title><rect x="899.7" y="453" width="2.2" height="15.0" fill="rgb(224,143,1)" rx="2" ry="2" />
<text  x="902.74" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (24 samples, 0.04%)</title><rect x="872.1" y="261" width="0.4" height="15.0" fill="rgb(220,34,33)" rx="2" ry="2" />
<text  x="875.07" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (25 samples, 0.04%)</title><rect x="763.5" y="277" width="0.5" height="15.0" fill="rgb(226,207,47)" rx="2" ry="2" />
<text  x="766.50" y="287.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (4,851 samples, 7.58%)</title><rect x="1100.6" y="517" width="89.4" height="15.0" fill="rgb(233,116,0)" rx="2" ry="2" />
<text  x="1103.57" y="527.5" >secondary_..</text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (17 samples, 0.03%)</title><rect x="867.4" y="277" width="0.4" height="15.0" fill="rgb(228,172,42)" rx="2" ry="2" />
<text  x="870.44" y="287.5" ></text>
</g>
<g >
<title>clear_page_erms (19 samples, 0.03%)</title><rect x="14.6" y="53" width="0.3" height="15.0" fill="rgb(239,97,0)" rx="2" ry="2" />
<text  x="17.55" y="63.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (48 samples, 0.07%)</title><rect x="1147.1" y="389" width="0.9" height="15.0" fill="rgb(243,63,31)" rx="2" ry="2" />
<text  x="1150.10" y="399.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (37 samples, 0.06%)</title><rect x="971.4" y="517" width="0.7" height="15.0" fill="rgb(230,31,53)" rx="2" ry="2" />
<text  x="974.41" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (220 samples, 0.34%)</title><rect x="862.8" y="293" width="4.0" height="15.0" fill="rgb(233,6,32)" rx="2" ry="2" />
<text  x="865.76" y="303.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (9 samples, 0.01%)</title><rect x="12.1" y="101" width="0.2" height="15.0" fill="rgb(206,116,49)" rx="2" ry="2" />
<text  x="15.14" y="111.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (36 samples, 0.06%)</title><rect x="84.8" y="469" width="0.7" height="15.0" fill="rgb(215,154,52)" rx="2" ry="2" />
<text  x="87.81" y="479.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (35 samples, 0.05%)</title><rect x="59.0" y="469" width="0.7" height="15.0" fill="rgb(209,153,25)" rx="2" ry="2" />
<text  x="62.02" y="479.5" ></text>
</g>
<g >
<title>__lock_text_start (13 samples, 0.02%)</title><rect x="1149.1" y="341" width="0.3" height="15.0" fill="rgb(235,13,47)" rx="2" ry="2" />
<text  x="1152.11" y="351.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (142 samples, 0.22%)</title><rect x="868.0" y="293" width="2.6" height="15.0" fill="rgb(233,88,9)" rx="2" ry="2" />
<text  x="870.99" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (25 samples, 0.04%)</title><rect x="14.5" y="69" width="0.5" height="15.0" fill="rgb(239,172,50)" rx="2" ry="2" />
<text  x="17.54" y="79.5" ></text>
</g>
<g >
<title>dispatcher@plt (11 samples, 0.02%)</title><rect x="884.7" y="405" width="0.2" height="15.0" fill="rgb(237,11,39)" rx="2" ry="2" />
<text  x="887.69" y="415.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (21 samples, 0.03%)</title><rect x="970.5" y="469" width="0.4" height="15.0" fill="rgb(212,202,21)" rx="2" ry="2" />
<text  x="973.55" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (7 samples, 0.01%)</title><rect x="1189.6" y="389" width="0.1" height="15.0" fill="rgb(244,46,22)" rx="2" ry="2" />
<text  x="1192.59" y="399.5" ></text>
</g>
<g >
<title>compaction_alloc (51 samples, 0.08%)</title><rect x="1099.4" y="405" width="0.9" height="15.0" fill="rgb(216,69,49)" rx="2" ry="2" />
<text  x="1102.39" y="415.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (450 samples, 0.70%)</title><rect x="105.7" y="485" width="8.3" height="15.0" fill="rgb(210,159,43)" rx="2" ry="2" />
<text  x="108.72" y="495.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6 samples, 0.01%)</title><rect x="1095.4" y="453" width="0.1" height="15.0" fill="rgb(237,80,25)" rx="2" ry="2" />
<text  x="1098.35" y="463.5" ></text>
</g>
<g >
<title>isolate_migratepages (10 samples, 0.02%)</title><rect x="1096.4" y="437" width="0.2" height="15.0" fill="rgb(218,201,37)" rx="2" ry="2" />
<text  x="1099.44" y="447.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (15 samples, 0.02%)</title><rect x="831.0" y="213" width="0.3" height="15.0" fill="rgb(211,8,49)" rx="2" ry="2" />
<text  x="834.01" y="223.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (9 samples, 0.01%)</title><rect x="14.3" y="69" width="0.1" height="15.0" fill="rgb(249,165,7)" rx="2" ry="2" />
<text  x="17.28" y="79.5" ></text>
</g>
<g >
<title>sched_clock_cpu (22 samples, 0.03%)</title><rect x="1167.2" y="405" width="0.4" height="15.0" fill="rgb(207,189,30)" rx="2" ry="2" />
<text  x="1170.21" y="415.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (13 samples, 0.02%)</title><rect x="901.9" y="453" width="0.2" height="15.0" fill="rgb(239,25,35)" rx="2" ry="2" />
<text  x="904.88" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.02%)</title><rect x="41.0" y="453" width="0.2" height="15.0" fill="rgb(230,156,44)" rx="2" ry="2" />
<text  x="43.97" y="463.5" ></text>
</g>
<g >
<title>get_typical_interval (32 samples, 0.05%)</title><rect x="1145.4" y="405" width="0.6" height="15.0" fill="rgb(228,80,16)" rx="2" ry="2" />
<text  x="1148.42" y="415.5" ></text>
</g>
<g >
<title>native_sched_clock (9 samples, 0.01%)</title><rect x="1186.0" y="325" width="0.1" height="15.0" fill="rgb(254,132,23)" rx="2" ry="2" />
<text  x="1188.96" y="335.5" ></text>
</g>
<g >
<title>__free_one_page (10 samples, 0.02%)</title><rect x="972.9" y="213" width="0.2" height="15.0" fill="rgb(205,63,38)" rx="2" ry="2" />
<text  x="975.89" y="223.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (10 samples, 0.02%)</title><rect x="854.2" y="293" width="0.2" height="15.0" fill="rgb(217,207,25)" rx="2" ry="2" />
<text  x="857.24" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (22 samples, 0.03%)</title><rect x="942.9" y="501" width="0.4" height="15.0" fill="rgb(213,156,31)" rx="2" ry="2" />
<text  x="945.93" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (15 samples, 0.02%)</title><rect x="61.6" y="421" width="0.3" height="15.0" fill="rgb(243,85,12)" rx="2" ry="2" />
<text  x="64.58" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (760 samples, 1.19%)</title><rect x="1172.2" y="357" width="14.0" height="15.0" fill="rgb(216,7,13)" rx="2" ry="2" />
<text  x="1175.15" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (232 samples, 0.36%)</title><rect x="656.4" y="277" width="4.3" height="15.0" fill="rgb(212,17,23)" rx="2" ry="2" />
<text  x="659.39" y="287.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (12 samples, 0.02%)</title><rect x="667.6" y="325" width="0.2" height="15.0" fill="rgb(254,116,2)" rx="2" ry="2" />
<text  x="670.60" y="335.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (315 samples, 0.49%)</title><rect x="51.5" y="437" width="5.8" height="15.0" fill="rgb(225,125,15)" rx="2" ry="2" />
<text  x="54.50" y="447.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (2,085 samples, 3.26%)</title><rect x="776.9" y="325" width="38.5" height="15.0" fill="rgb(217,184,46)" rx="2" ry="2" />
<text  x="779.94" y="335.5" >std..</text>
</g>
<g >
<title>call_timer_fn (8 samples, 0.01%)</title><rect x="1103.7" y="277" width="0.2" height="15.0" fill="rgb(215,191,47)" rx="2" ry="2" />
<text  x="1106.72" y="287.5" ></text>
</g>
<g >
<title>HandleStackContext (10 samples, 0.02%)</title><rect x="64.4" y="501" width="0.2" height="15.0" fill="rgb(224,12,6)" rx="2" ry="2" />
<text  x="67.42" y="511.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (17 samples, 0.03%)</title><rect x="872.5" y="229" width="0.3" height="15.0" fill="rgb(208,85,12)" rx="2" ry="2" />
<text  x="875.51" y="239.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (7,976 samples, 12.46%)</title><rect x="390.0" y="325" width="147.0" height="15.0" fill="rgb(253,8,0)" rx="2" ry="2" />
<text  x="393.00" y="335.5" >ringbuf::consumer:..</text>
</g>
<g >
<title>clear_page_erms (26 samples, 0.04%)</title><rect x="938.4" y="341" width="0.5" height="15.0" fill="rgb(244,62,17)" rx="2" ry="2" />
<text  x="941.40" y="351.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (7,369 samples, 11.51%)</title><rect x="679.5" y="357" width="135.9" height="15.0" fill="rgb(249,215,3)" rx="2" ry="2" />
<text  x="682.53" y="367.5" >rustposix::interf..</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (7,970 samples, 12.45%)</title><rect x="240.7" y="325" width="147.0" height="15.0" fill="rgb(230,130,9)" rx="2" ry="2" />
<text  x="243.73" y="335.5" >ringbuf::ring_buff..</text>
</g>
<g >
<title>cpuidle_enter_state (2,205 samples, 3.44%)</title><rect x="1102.7" y="421" width="40.6" height="15.0" fill="rgb(249,179,7)" rx="2" ry="2" />
<text  x="1105.69" y="431.5" >cpu..</text>
</g>
<g >
<title>ctx_resched (64 samples, 0.10%)</title><rect x="10.4" y="197" width="1.2" height="15.0" fill="rgb(206,7,20)" rx="2" ry="2" />
<text  x="13.41" y="207.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="828.6" y="181" width="0.1" height="15.0" fill="rgb(244,29,4)" rx="2" ry="2" />
<text  x="831.58" y="191.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (277 samples, 0.43%)</title><rect x="965.2" y="501" width="5.1" height="15.0" fill="rgb(229,141,12)" rx="2" ry="2" />
<text  x="968.16" y="511.5" ></text>
</g>
<g >
<title>[sel_ldr] (45,709 samples, 71.41%)</title><rect x="63.8" y="517" width="842.6" height="15.0" fill="rgb(229,212,31)" rx="2" ry="2" />
<text  x="66.79" y="527.5" >[sel_ldr]</text>
</g>
<g >
<title>__get_user_nocheck_1 (9 samples, 0.01%)</title><rect x="12.3" y="149" width="0.2" height="15.0" fill="rgb(246,29,16)" rx="2" ry="2" />
<text  x="15.34" y="159.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (44 samples, 0.07%)</title><rect x="832.4" y="341" width="0.8" height="15.0" fill="rgb(247,224,33)" rx="2" ry="2" />
<text  x="835.38" y="351.5" ></text>
</g>
<g >
<title>std::panicking::panicking (11 samples, 0.02%)</title><rect x="872.8" y="325" width="0.2" height="15.0" fill="rgb(236,174,52)" rx="2" ry="2" />
<text  x="875.82" y="335.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (12 samples, 0.02%)</title><rect x="65.8" y="501" width="0.2" height="15.0" fill="rgb(243,79,38)" rx="2" ry="2" />
<text  x="68.80" y="511.5" ></text>
</g>
<g >
<title>unmap_single_vma (53 samples, 0.08%)</title><rect x="972.2" y="373" width="0.9" height="15.0" fill="rgb(233,3,45)" rx="2" ry="2" />
<text  x="975.15" y="383.5" ></text>
</g>
<g >
<title>std::thread::panicking (27 samples, 0.04%)</title><rect x="832.7" y="309" width="0.5" height="15.0" fill="rgb(210,31,46)" rx="2" ry="2" />
<text  x="835.69" y="319.5" ></text>
</g>
<g >
<title>swapper (11,764 samples, 18.38%)</title><rect x="973.1" y="533" width="216.9" height="15.0" fill="rgb(250,181,1)" rx="2" ry="2" />
<text  x="976.13" y="543.5" >swapper</text>
</g>
<g >
<title>enqueue_task (6 samples, 0.01%)</title><rect x="1103.2" y="229" width="0.1" height="15.0" fill="rgb(250,141,23)" rx="2" ry="2" />
<text  x="1106.21" y="239.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (128 samples, 0.20%)</title><rect x="57.3" y="501" width="2.4" height="15.0" fill="rgb(219,168,24)" rx="2" ry="2" />
<text  x="60.30" y="511.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (6 samples, 0.01%)</title><rect x="1161.2" y="341" width="0.1" height="15.0" fill="rgb(222,165,27)" rx="2" ry="2" />
<text  x="1164.19" y="351.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (43 samples, 0.07%)</title><rect x="118.0" y="469" width="0.8" height="15.0" fill="rgb(235,160,41)" rx="2" ry="2" />
<text  x="120.97" y="479.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (7 samples, 0.01%)</title><rect x="1189.9" y="405" width="0.1" height="15.0" fill="rgb(252,116,11)" rx="2" ry="2" />
<text  x="1192.85" y="415.5" ></text>
</g>
<g >
<title>CompareAndSwap (600 samples, 0.94%)</title><rect x="94.5" y="469" width="11.0" height="15.0" fill="rgb(214,221,19)" rx="2" ry="2" />
<text  x="97.47" y="479.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (7 samples, 0.01%)</title><rect x="945.2" y="469" width="0.1" height="15.0" fill="rgb(246,12,41)" rx="2" ry="2" />
<text  x="948.20" y="479.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (6 samples, 0.01%)</title><rect x="1170.4" y="453" width="0.2" height="15.0" fill="rgb(220,70,21)" rx="2" ry="2" />
<text  x="1173.44" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1,689 samples, 2.64%)</title><rect x="440.0" y="277" width="31.2" height="15.0" fill="rgb(236,67,18)" rx="2" ry="2" />
<text  x="443.02" y="287.5" >co..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (233 samples, 0.36%)</title><rect x="880.4" y="341" width="4.3" height="15.0" fill="rgb(219,184,28)" rx="2" ry="2" />
<text  x="883.40" y="351.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2,966 samples, 4.63%)</title><rect x="471.6" y="277" width="54.7" height="15.0" fill="rgb(242,140,39)" rx="2" ry="2" />
<text  x="474.62" y="287.5" >core:..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (87 samples, 0.14%)</title><rect x="764.3" y="277" width="1.6" height="15.0" fill="rgb(209,110,42)" rx="2" ry="2" />
<text  x="767.31" y="287.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (15 samples, 0.02%)</title><rect x="62.4" y="469" width="0.3" height="15.0" fill="rgb(252,124,36)" rx="2" ry="2" />
<text  x="65.43" y="479.5" ></text>
</g>
<g >
<title>isolate_migratepages_block (9 samples, 0.01%)</title><rect x="1096.5" y="421" width="0.1" height="15.0" fill="rgb(231,125,31)" rx="2" ry="2" />
<text  x="1099.46" y="431.5" ></text>
</g>
<g >
<title>schedule_idle (632 samples, 0.99%)</title><rect x="1156.3" y="453" width="11.7" height="15.0" fill="rgb(228,141,19)" rx="2" ry="2" />
<text  x="1159.34" y="463.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (315 samples, 0.49%)</title><rect x="51.5" y="469" width="5.8" height="15.0" fill="rgb(245,113,18)" rx="2" ry="2" />
<text  x="54.50" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1,284 samples, 2.01%)</title><rect x="361.4" y="309" width="23.7" height="15.0" fill="rgb(244,93,21)" rx="2" ry="2" />
<text  x="364.43" y="319.5" >c..</text>
</g>
<g >
<title>exit_mmap (54 samples, 0.08%)</title><rect x="972.1" y="405" width="1.0" height="15.0" fill="rgb(212,102,36)" rx="2" ry="2" />
<text  x="975.13" y="415.5" ></text>
</g>
<g >
<title>do_group_exit (54 samples, 0.08%)</title><rect x="972.1" y="469" width="1.0" height="15.0" fill="rgb(211,10,14)" rx="2" ry="2" />
<text  x="975.13" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (16 samples, 0.02%)</title><rect x="61.9" y="437" width="0.3" height="15.0" fill="rgb(233,215,29)" rx="2" ry="2" />
<text  x="64.86" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_write (8 samples, 0.01%)</title><rect x="17.0" y="485" width="0.2" height="15.0" fill="rgb(242,181,39)" rx="2" ry="2" />
<text  x="20.01" y="495.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (353 samples, 0.55%)</title><rect x="526.4" y="293" width="6.6" height="15.0" fill="rgb(230,124,39)" rx="2" ry="2" />
<text  x="529.44" y="303.5" ></text>
</g>
<g >
<title>zap_pte_range (53 samples, 0.08%)</title><rect x="972.2" y="325" width="0.9" height="15.0" fill="rgb(225,77,44)" rx="2" ry="2" />
<text  x="975.15" y="335.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (23 samples, 0.04%)</title><rect x="854.2" y="341" width="0.5" height="15.0" fill="rgb(214,26,39)" rx="2" ry="2" />
<text  x="857.24" y="351.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (8 samples, 0.01%)</title><rect x="1099.2" y="357" width="0.1" height="15.0" fill="rgb(228,178,47)" rx="2" ry="2" />
<text  x="1102.19" y="367.5" ></text>
</g>
<g >
<title>lind_write (11 samples, 0.02%)</title><rect x="42.0" y="501" width="0.2" height="15.0" fill="rgb(208,208,18)" rx="2" ry="2" />
<text  x="44.97" y="511.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="970.9" y="469" width="0.3" height="15.0" fill="rgb(229,52,48)" rx="2" ry="2" />
<text  x="973.93" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (628 samples, 0.98%)</title><rect x="668.0" y="293" width="11.5" height="15.0" fill="rgb(230,82,5)" rx="2" ry="2" />
<text  x="670.95" y="303.5" ></text>
</g>
<g >
<title>__schedule (85 samples, 0.13%)</title><rect x="1188.0" y="373" width="1.5" height="15.0" fill="rgb(226,220,5)" rx="2" ry="2" />
<text  x="1190.95" y="383.5" ></text>
</g>
<g >
<title>mem_cgroup_migrate (6 samples, 0.01%)</title><rect x="1098.7" y="309" width="0.1" height="15.0" fill="rgb(243,201,13)" rx="2" ry="2" />
<text  x="1101.67" y="319.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (10 samples, 0.02%)</title><rect x="1101.3" y="453" width="0.2" height="15.0" fill="rgb(207,42,52)" rx="2" ry="2" />
<text  x="1104.27" y="463.5" ></text>
</g>
<g >
<title>cpuidle_select (54 samples, 0.08%)</title><rect x="1186.2" y="373" width="1.0" height="15.0" fill="rgb(222,81,7)" rx="2" ry="2" />
<text  x="1189.24" y="383.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (155 samples, 0.24%)</title><rect x="867.8" y="325" width="2.8" height="15.0" fill="rgb(207,62,17)" rx="2" ry="2" />
<text  x="870.75" y="335.5" ></text>
</g>
<g >
<title>alloc_page_buffers (27 samples, 0.04%)</title><rect x="12.8" y="101" width="0.5" height="15.0" fill="rgb(231,190,52)" rx="2" ry="2" />
<text  x="15.80" y="111.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (61 samples, 0.10%)</title><rect x="863.2" y="277" width="1.2" height="15.0" fill="rgb(227,186,23)" rx="2" ry="2" />
<text  x="866.24" y="287.5" ></text>
</g>
<g >
<title>new_sync_write (8 samples, 0.01%)</title><rect x="17.0" y="437" width="0.2" height="15.0" fill="rgb(224,6,21)" rx="2" ry="2" />
<text  x="20.01" y="447.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 0.12%)</title><rect x="10.1" y="437" width="1.5" height="15.0" fill="rgb(213,223,35)" rx="2" ry="2" />
<text  x="13.11" y="447.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (20 samples, 0.03%)</title><rect x="13.3" y="117" width="0.4" height="15.0" fill="rgb(233,13,44)" rx="2" ry="2" />
<text  x="16.30" y="127.5" ></text>
</g>
<g >
<title>idle_cpu (10 samples, 0.02%)</title><rect x="1188.6" y="293" width="0.2" height="15.0" fill="rgb(238,98,5)" rx="2" ry="2" />
<text  x="1191.62" y="303.5" ></text>
</g>
<g >
<title>do_idle (976 samples, 1.52%)</title><rect x="1171.9" y="405" width="18.0" height="15.0" fill="rgb(205,8,21)" rx="2" ry="2" />
<text  x="1174.86" y="415.5" ></text>
</g>
<g >
<title>vfs_write (265 samples, 0.41%)</title><rect x="12.1" y="293" width="4.9" height="15.0" fill="rgb(249,103,49)" rx="2" ry="2" />
<text  x="15.08" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (5,000 samples, 7.81%)</title><rect x="148.5" y="325" width="92.1" height="15.0" fill="rgb(228,201,33)" rx="2" ry="2" />
<text  x="151.47" y="335.5" >core::sync:..</text>
</g>
<g >
<title>NaClXMutexUnlock (448 samples, 0.70%)</title><rect x="541.3" y="437" width="8.3" height="15.0" fill="rgb(252,184,19)" rx="2" ry="2" />
<text  x="544.30" y="447.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (8 samples, 0.01%)</title><rect x="1103.7" y="293" width="0.2" height="15.0" fill="rgb(210,133,26)" rx="2" ry="2" />
<text  x="1106.72" y="303.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (262 samples, 0.41%)</title><rect x="12.1" y="213" width="4.9" height="15.0" fill="rgb(237,98,50)" rx="2" ry="2" />
<text  x="15.14" y="223.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (16 samples, 0.02%)</title><rect x="116.4" y="485" width="0.3" height="15.0" fill="rgb(210,196,27)" rx="2" ry="2" />
<text  x="119.44" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock (15 samples, 0.02%)</title><rect x="1148.4" y="373" width="0.3" height="15.0" fill="rgb(225,144,45)" rx="2" ry="2" />
<text  x="1151.45" y="383.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (32 samples, 0.05%)</title><rect x="15.6" y="101" width="0.6" height="15.0" fill="rgb(252,66,35)" rx="2" ry="2" />
<text  x="18.60" y="111.5" ></text>
</g>
<g >
<title>kernel_clone (6 samples, 0.01%)</title><rect x="1095.5" y="453" width="0.1" height="15.0" fill="rgb(243,200,7)" rx="2" ry="2" />
<text  x="1098.54" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (17 samples, 0.03%)</title><rect x="685.4" y="277" width="0.3" height="15.0" fill="rgb(243,32,17)" rx="2" ry="2" />
<text  x="688.41" y="287.5" ></text>
</g>
<g >
<title>ksys_write (266 samples, 0.42%)</title><rect x="12.1" y="309" width="4.9" height="15.0" fill="rgb(230,11,30)" rx="2" ry="2" />
<text  x="15.06" y="319.5" ></text>
</g>
<g >
<title>dispatcher (19 samples, 0.03%)</title><rect x="862.1" y="357" width="0.4" height="15.0" fill="rgb(243,54,7)" rx="2" ry="2" />
<text  x="865.13" y="367.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.05%)</title><rect x="829.4" y="245" width="0.7" height="15.0" fill="rgb(252,159,34)" rx="2" ry="2" />
<text  x="832.43" y="255.5" ></text>
</g>
<g >
<title>__put_page (21 samples, 0.03%)</title><rect x="1096.7" y="405" width="0.4" height="15.0" fill="rgb(251,41,38)" rx="2" ry="2" />
<text  x="1099.68" y="415.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (7,754 samples, 12.11%)</title><rect x="390.0" y="309" width="143.0" height="15.0" fill="rgb(245,221,25)" rx="2" ry="2" />
<text  x="393.00" y="319.5" >ringbuf::consumer:..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (7 samples, 0.01%)</title><rect x="62.2" y="421" width="0.1" height="15.0" fill="rgb(243,129,38)" rx="2" ry="2" />
<text  x="65.15" y="431.5" ></text>
</g>
<g >
<title>exc_page_fault (112 samples, 0.17%)</title><rect x="937.9" y="485" width="2.1" height="15.0" fill="rgb(210,134,8)" rx="2" ry="2" />
<text  x="940.92" y="495.5" ></text>
</g>
<g >
<title>sched_clock_cpu (14 samples, 0.02%)</title><rect x="1168.7" y="421" width="0.3" height="15.0" fill="rgb(250,154,21)" rx="2" ry="2" />
<text  x="1171.73" y="431.5" ></text>
</g>
<g >
<title>exc_page_fault (6 samples, 0.01%)</title><rect x="1095.4" y="501" width="0.1" height="15.0" fill="rgb(239,208,51)" rx="2" ry="2" />
<text  x="1098.35" y="511.5" ></text>
</g>
<g >
<title>menu_select (50 samples, 0.08%)</title><rect x="1186.3" y="357" width="0.9" height="15.0" fill="rgb(236,29,31)" rx="2" ry="2" />
<text  x="1189.26" y="367.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (35 samples, 0.05%)</title><rect x="59.0" y="437" width="0.7" height="15.0" fill="rgb(209,102,24)" rx="2" ry="2" />
<text  x="62.02" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (632 samples, 0.99%)</title><rect x="834.1" y="309" width="11.7" height="15.0" fill="rgb(251,167,28)" rx="2" ry="2" />
<text  x="837.11" y="319.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (14 samples, 0.02%)</title><rect x="41.0" y="485" width="0.2" height="15.0" fill="rgb(225,227,17)" rx="2" ry="2" />
<text  x="43.97" y="495.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (35 samples, 0.05%)</title><rect x="59.0" y="453" width="0.7" height="15.0" fill="rgb(233,153,16)" rx="2" ry="2" />
<text  x="62.02" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (375 samples, 0.59%)</title><rect x="855.2" y="309" width="6.9" height="15.0" fill="rgb(212,124,29)" rx="2" ry="2" />
<text  x="858.22" y="319.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (9 samples, 0.01%)</title><rect x="12.1" y="117" width="0.2" height="15.0" fill="rgb(207,202,51)" rx="2" ry="2" />
<text  x="15.14" y="127.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (6 samples, 0.01%)</title><rect x="16.1" y="53" width="0.1" height="15.0" fill="rgb(222,226,53)" rx="2" ry="2" />
<text  x="19.08" y="63.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (27 samples, 0.04%)</title><rect x="832.7" y="277" width="0.5" height="15.0" fill="rgb(250,213,31)" rx="2" ry="2" />
<text  x="835.69" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (882 samples, 1.38%)</title><rect x="627.0" y="309" width="16.2" height="15.0" fill="rgb(235,104,51)" rx="2" ry="2" />
<text  x="629.97" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (7 samples, 0.01%)</title><rect x="62.2" y="437" width="0.1" height="15.0" fill="rgb(223,140,32)" rx="2" ry="2" />
<text  x="65.15" y="447.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (64 samples, 0.10%)</title><rect x="904.6" y="453" width="1.2" height="15.0" fill="rgb(215,145,54)" rx="2" ry="2" />
<text  x="907.59" y="463.5" ></text>
</g>
<g >
<title>ktime_get (8 samples, 0.01%)</title><rect x="1169.3" y="437" width="0.2" height="15.0" fill="rgb(226,66,13)" rx="2" ry="2" />
<text  x="1172.33" y="447.5" ></text>
</g>
<g >
<title>pagecache_get_page (73 samples, 0.11%)</title><rect x="13.7" y="117" width="1.3" height="15.0" fill="rgb(226,103,22)" rx="2" ry="2" />
<text  x="16.69" y="127.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (7 samples, 0.01%)</title><rect x="1189.7" y="389" width="0.2" height="15.0" fill="rgb(253,21,33)" rx="2" ry="2" />
<text  x="1192.72" y="399.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (137 samples, 0.21%)</title><rect x="60.2" y="501" width="2.5" height="15.0" fill="rgb(252,162,2)" rx="2" ry="2" />
<text  x="63.18" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (548 samples, 0.86%)</title><rect x="420.1" y="277" width="10.1" height="15.0" fill="rgb(244,94,1)" rx="2" ry="2" />
<text  x="423.13" y="287.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (21 samples, 0.03%)</title><rect x="763.1" y="277" width="0.4" height="15.0" fill="rgb(224,53,38)" rx="2" ry="2" />
<text  x="766.11" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.07%)</title><rect x="1095.5" y="517" width="0.9" height="15.0" fill="rgb(225,137,40)" rx="2" ry="2" />
<text  x="1098.54" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (405 samples, 0.63%)</title><rect x="854.7" y="325" width="7.4" height="15.0" fill="rgb(209,112,20)" rx="2" ry="2" />
<text  x="857.66" y="335.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (11 samples, 0.02%)</title><rect x="13.4" y="85" width="0.3" height="15.0" fill="rgb(240,85,42)" rx="2" ry="2" />
<text  x="16.45" y="95.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (15 samples, 0.02%)</title><rect x="831.0" y="197" width="0.3" height="15.0" fill="rgb(239,174,25)" rx="2" ry="2" />
<text  x="834.01" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_poll (8 samples, 0.01%)</title><rect x="1096.0" y="485" width="0.1" height="15.0" fill="rgb(250,130,41)" rx="2" ry="2" />
<text  x="1098.98" y="495.5" ></text>
</g>
<g >
<title>lru_cache_add (9 samples, 0.01%)</title><rect x="1099.2" y="373" width="0.1" height="15.0" fill="rgb(252,220,34)" rx="2" ry="2" />
<text  x="1102.17" y="383.5" ></text>
</g>
<g >
<title>lru_cache_add (17 samples, 0.03%)</title><rect x="939.5" y="373" width="0.3" height="15.0" fill="rgb(233,185,45)" rx="2" ry="2" />
<text  x="942.47" y="383.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (8 samples, 0.01%)</title><rect x="1101.3" y="437" width="0.2" height="15.0" fill="rgb(208,210,29)" rx="2" ry="2" />
<text  x="1104.31" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (127 samples, 0.20%)</title><rect x="868.0" y="261" width="2.3" height="15.0" fill="rgb(211,220,13)" rx="2" ry="2" />
<text  x="870.99" y="271.5" ></text>
</g>
<g >
<title>newidle_balance (75 samples, 0.12%)</title><rect x="1188.1" y="341" width="1.3" height="15.0" fill="rgb(215,156,50)" rx="2" ry="2" />
<text  x="1191.06" y="351.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="870.1" y="245" width="0.2" height="15.0" fill="rgb(225,201,8)" rx="2" ry="2" />
<text  x="873.11" y="255.5" ></text>
</g>
<g >
<title>kick_ilb (262 samples, 0.41%)</title><rect x="1161.8" y="373" width="4.8" height="15.0" fill="rgb(246,20,3)" rx="2" ry="2" />
<text  x="1164.78" y="383.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (7 samples, 0.01%)</title><rect x="1103.1" y="341" width="0.1" height="15.0" fill="rgb(251,136,21)" rx="2" ry="2" />
<text  x="1106.08" y="351.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (8 samples, 0.01%)</title><rect x="17.0" y="341" width="0.2" height="15.0" fill="rgb(212,122,28)" rx="2" ry="2" />
<text  x="20.01" y="351.5" ></text>
</g>
<g >
<title>wake_up_process (8 samples, 0.01%)</title><rect x="1103.2" y="277" width="0.2" height="15.0" fill="rgb(247,77,8)" rx="2" ry="2" />
<text  x="1106.21" y="287.5" ></text>
</g>
<g >
<title>uncharge_batch (11 samples, 0.02%)</title><rect x="1096.9" y="373" width="0.2" height="15.0" fill="rgb(220,129,42)" rx="2" ry="2" />
<text  x="1099.87" y="383.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (834 samples, 1.30%)</title><rect x="90.2" y="485" width="15.3" height="15.0" fill="rgb(249,198,20)" rx="2" ry="2" />
<text  x="93.16" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.03%)</title><rect x="11.6" y="437" width="0.3" height="15.0" fill="rgb(239,51,0)" rx="2" ry="2" />
<text  x="14.60" y="447.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (110 samples, 0.17%)</title><rect x="430.2" y="261" width="2.1" height="15.0" fill="rgb(227,88,31)" rx="2" ry="2" />
<text  x="433.23" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (9 samples, 0.01%)</title><rect x="764.0" y="277" width="0.1" height="15.0" fill="rgb(235,163,20)" rx="2" ry="2" />
<text  x="766.96" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (27 samples, 0.04%)</title><rect x="817.3" y="229" width="0.5" height="15.0" fill="rgb(245,19,27)" rx="2" ry="2" />
<text  x="820.31" y="239.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.01%)</title><rect x="62.3" y="453" width="0.1" height="15.0" fill="rgb(230,1,19)" rx="2" ry="2" />
<text  x="65.28" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (9 samples, 0.01%)</title><rect x="764.0" y="293" width="0.1" height="15.0" fill="rgb(247,187,29)" rx="2" ry="2" />
<text  x="766.96" y="303.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (536 samples, 0.84%)</title><rect x="756.3" y="309" width="9.9" height="15.0" fill="rgb(223,192,43)" rx="2" ry="2" />
<text  x="759.35" y="319.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (22,684 samples, 35.44%)</title><rect x="118.9" y="485" width="418.2" height="15.0" fill="rgb(251,110,18)" rx="2" ry="2" />
<text  x="121.92" y="495.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>do_anonymous_page (88 samples, 0.14%)</title><rect x="938.3" y="405" width="1.6" height="15.0" fill="rgb(239,124,53)" rx="2" ry="2" />
<text  x="941.32" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (15 samples, 0.02%)</title><rect x="776.7" y="245" width="0.2" height="15.0" fill="rgb(243,88,3)" rx="2" ry="2" />
<text  x="779.66" y="255.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (30 samples, 0.05%)</title><rect x="13.7" y="85" width="0.6" height="15.0" fill="rgb(251,15,21)" rx="2" ry="2" />
<text  x="16.72" y="95.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (594 samples, 0.93%)</title><rect x="656.4" y="309" width="10.9" height="15.0" fill="rgb(235,179,9)" rx="2" ry="2" />
<text  x="659.39" y="319.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 0.10%)</title><rect x="10.4" y="181" width="1.2" height="15.0" fill="rgb(239,110,54)" rx="2" ry="2" />
<text  x="13.41" y="191.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (19 samples, 0.03%)</title><rect x="1189.1" y="293" width="0.3" height="15.0" fill="rgb(229,200,46)" rx="2" ry="2" />
<text  x="1192.08" y="303.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (31 samples, 0.05%)</title><rect x="64.6" y="501" width="0.6" height="15.0" fill="rgb(236,166,12)" rx="2" ry="2" />
<text  x="67.61" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="828.4" y="181" width="0.2" height="15.0" fill="rgb(239,114,54)" rx="2" ry="2" />
<text  x="831.41" y="191.5" ></text>
</g>
<g >
<title>generic_exec_single (65 samples, 0.10%)</title><rect x="1163.6" y="341" width="1.2" height="15.0" fill="rgb(233,167,42)" rx="2" ry="2" />
<text  x="1166.58" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (12 samples, 0.02%)</title><rect x="40.4" y="437" width="0.2" height="15.0" fill="rgb(238,53,52)" rx="2" ry="2" />
<text  x="43.40" y="447.5" ></text>
</g>
<g >
<title>putback_lru_page (10 samples, 0.02%)</title><rect x="1099.2" y="389" width="0.1" height="15.0" fill="rgb(251,141,23)" rx="2" ry="2" />
<text  x="1102.15" y="399.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (44 samples, 0.07%)</title><rect x="832.4" y="325" width="0.8" height="15.0" fill="rgb(232,4,1)" rx="2" ry="2" />
<text  x="835.38" y="335.5" ></text>
</g>
<g >
<title>menu_select (333 samples, 0.52%)</title><rect x="1143.8" y="421" width="6.2" height="15.0" fill="rgb(249,27,35)" rx="2" ry="2" />
<text  x="1146.84" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (303 samples, 0.47%)</title><rect x="818.2" y="245" width="5.6" height="15.0" fill="rgb(227,0,44)" rx="2" ry="2" />
<text  x="821.20" y="255.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (12 samples, 0.02%)</title><rect x="40.4" y="453" width="0.2" height="15.0" fill="rgb(245,125,49)" rx="2" ry="2" />
<text  x="43.40" y="463.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (2,998 samples, 4.68%)</title><rect x="471.2" y="293" width="55.2" height="15.0" fill="rgb(209,152,21)" rx="2" ry="2" />
<text  x="474.17" y="303.5" >ringb..</text>
</g>
<g >
<title>rcu_idle_exit (11 samples, 0.02%)</title><rect x="1185.7" y="341" width="0.2" height="15.0" fill="rgb(250,108,7)" rx="2" ry="2" />
<text  x="1188.74" y="351.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.02%)</title><rect x="756.1" y="325" width="0.2" height="15.0" fill="rgb(210,88,40)" rx="2" ry="2" />
<text  x="759.09" y="335.5" ></text>
</g>
<g >
<title>NaClSysWrite (14 samples, 0.02%)</title><rect x="537.1" y="485" width="0.3" height="15.0" fill="rgb(245,144,16)" rx="2" ry="2" />
<text  x="540.10" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (580 samples, 0.91%)</title><rect x="862.1" y="373" width="10.7" height="15.0" fill="rgb(254,43,39)" rx="2" ry="2" />
<text  x="865.13" y="383.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (661 samples, 1.03%)</title><rect x="667.3" y="341" width="12.2" height="15.0" fill="rgb(207,132,15)" rx="2" ry="2" />
<text  x="670.34" y="351.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (3,882 samples, 6.06%)</title><rect x="684.3" y="309" width="71.5" height="15.0" fill="rgb(229,138,9)" rx="2" ry="2" />
<text  x="687.27" y="319.5" >std::sys..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (94 samples, 0.15%)</title><rect x="823.8" y="293" width="1.7" height="15.0" fill="rgb(246,85,22)" rx="2" ry="2" />
<text  x="826.78" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.01%)</title><rect x="62.3" y="469" width="0.1" height="15.0" fill="rgb(231,55,0)" rx="2" ry="2" />
<text  x="65.28" y="479.5" ></text>
</g>
<g >
<title>generic_perform_write (8 samples, 0.01%)</title><rect x="17.0" y="325" width="0.2" height="15.0" fill="rgb(216,203,20)" rx="2" ry="2" />
<text  x="20.01" y="335.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (7 samples, 0.01%)</title><rect x="1103.1" y="325" width="0.1" height="15.0" fill="rgb(210,159,44)" rx="2" ry="2" />
<text  x="1106.08" y="335.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (8 samples, 0.01%)</title><rect x="945.3" y="485" width="0.2" height="15.0" fill="rgb(207,184,21)" rx="2" ry="2" />
<text  x="948.33" y="495.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (53 samples, 0.08%)</title><rect x="972.2" y="341" width="0.9" height="15.0" fill="rgb(212,125,37)" rx="2" ry="2" />
<text  x="975.15" y="351.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (644 samples, 1.01%)</title><rect x="872.8" y="389" width="11.9" height="15.0" fill="rgb(246,75,20)" rx="2" ry="2" />
<text  x="875.82" y="399.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (411 samples, 0.64%)</title><rect x="542.0" y="421" width="7.6" height="15.0" fill="rgb(229,208,10)" rx="2" ry="2" />
<text  x="544.98" y="431.5" ></text>
</g>
<g >
<title>lind (6 samples, 0.01%)</title><rect x="10.0" y="533" width="0.1" height="15.0" fill="rgb(212,74,24)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (16 samples, 0.02%)</title><rect x="61.9" y="453" width="0.3" height="15.0" fill="rgb(246,193,48)" rx="2" ry="2" />
<text  x="64.86" y="463.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (12 samples, 0.02%)</title><rect x="20.5" y="501" width="0.2" height="15.0" fill="rgb(229,35,33)" rx="2" ry="2" />
<text  x="23.45" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (3,820 samples, 5.97%)</title><rect x="685.4" y="293" width="70.4" height="15.0" fill="rgb(223,110,50)" rx="2" ry="2" />
<text  x="688.41" y="303.5" >std::sy..</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (10 samples, 0.02%)</title><rect x="854.2" y="277" width="0.2" height="15.0" fill="rgb(239,175,49)" rx="2" ry="2" />
<text  x="857.24" y="287.5" ></text>
</g>
<g >
<title>vfs_iter_write (262 samples, 0.41%)</title><rect x="12.1" y="245" width="4.9" height="15.0" fill="rgb(238,5,52)" rx="2" ry="2" />
<text  x="15.14" y="255.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (11 samples, 0.02%)</title><rect x="872.8" y="373" width="0.2" height="15.0" fill="rgb(214,113,10)" rx="2" ry="2" />
<text  x="875.82" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (21 samples, 0.03%)</title><rect x="763.1" y="293" width="0.4" height="15.0" fill="rgb(237,206,27)" rx="2" ry="2" />
<text  x="766.11" y="303.5" ></text>
</g>
<g >
<title>NaClSysRead (22,684 samples, 35.44%)</title><rect x="118.9" y="469" width="418.2" height="15.0" fill="rgb(245,14,18)" rx="2" ry="2" />
<text  x="121.92" y="479.5" >NaClSysRead</text>
</g>
<g >
<title>scheduler_tick (6 samples, 0.01%)</title><rect x="1103.4" y="245" width="0.1" height="15.0" fill="rgb(223,2,26)" rx="2" ry="2" />
<text  x="1106.41" y="255.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (633 samples, 0.99%)</title><rect x="873.0" y="357" width="11.7" height="15.0" fill="rgb(217,196,8)" rx="2" ry="2" />
<text  x="876.03" y="367.5" ></text>
</g>
<g >
<title>___slab_alloc (6 samples, 0.01%)</title><rect x="13.0" y="37" width="0.1" height="15.0" fill="rgb(240,120,40)" rx="2" ry="2" />
<text  x="15.97" y="47.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (460 samples, 0.72%)</title><rect x="845.8" y="293" width="8.4" height="15.0" fill="rgb(246,173,4)" rx="2" ry="2" />
<text  x="848.76" y="303.5" ></text>
</g>
<g >
<title>update_rq_clock (32 samples, 0.05%)</title><rect x="1167.0" y="421" width="0.6" height="15.0" fill="rgb(232,181,4)" rx="2" ry="2" />
<text  x="1170.03" y="431.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (52 samples, 0.08%)</title><rect x="1148.7" y="373" width="1.0" height="15.0" fill="rgb(209,59,44)" rx="2" ry="2" />
<text  x="1151.72" y="383.5" ></text>
</g>
<g >
<title>__buffer_migrate_page.part.0 (97 samples, 0.15%)</title><rect x="1097.2" y="357" width="1.8" height="15.0" fill="rgb(248,57,53)" rx="2" ry="2" />
<text  x="1100.18" y="367.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (17 samples, 0.03%)</title><rect x="867.4" y="293" width="0.4" height="15.0" fill="rgb(234,36,3)" rx="2" ry="2" />
<text  x="870.44" y="303.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (142 samples, 0.22%)</title><rect x="868.0" y="277" width="2.6" height="15.0" fill="rgb(247,70,38)" rx="2" ry="2" />
<text  x="870.99" y="287.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (20 samples, 0.03%)</title><rect x="13.3" y="101" width="0.4" height="15.0" fill="rgb(253,159,9)" rx="2" ry="2" />
<text  x="16.30" y="111.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (92 samples, 0.14%)</title><rect x="822.1" y="229" width="1.7" height="15.0" fill="rgb(236,0,7)" rx="2" ry="2" />
<text  x="825.09" y="239.5" ></text>
</g>
<g >
<title>arch_call_rest_init (984 samples, 1.54%)</title><rect x="1171.9" y="453" width="18.1" height="15.0" fill="rgb(241,13,32)" rx="2" ry="2" />
<text  x="1174.86" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (460 samples, 0.72%)</title><rect x="845.8" y="309" width="8.4" height="15.0" fill="rgb(232,220,37)" rx="2" ry="2" />
<text  x="848.76" y="319.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (29 samples, 0.05%)</title><rect x="15.7" y="85" width="0.5" height="15.0" fill="rgb(221,188,6)" rx="2" ry="2" />
<text  x="18.66" y="95.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_init (18 samples, 0.03%)</title><rect x="626.6" y="325" width="0.3" height="15.0" fill="rgb(254,147,16)" rx="2" ry="2" />
<text  x="629.60" y="335.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (11 samples, 0.02%)</title><rect x="16.0" y="69" width="0.2" height="15.0" fill="rgb(213,154,27)" rx="2" ry="2" />
<text  x="18.99" y="79.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (21 samples, 0.03%)</title><rect x="763.1" y="261" width="0.4" height="15.0" fill="rgb(248,29,44)" rx="2" ry="2" />
<text  x="766.11" y="271.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (22 samples, 0.03%)</title><rect x="12.8" y="69" width="0.4" height="15.0" fill="rgb(218,228,54)" rx="2" ry="2" />
<text  x="15.82" y="79.5" ></text>
</g>
<g >
<title>[anon] (2,454 samples, 3.83%)</title><rect x="17.5" y="517" width="45.2" height="15.0" fill="rgb(229,51,41)" rx="2" ry="2" />
<text  x="20.47" y="527.5" >[anon]</text>
</g>
<g >
<title>tick_sched_handle (6 samples, 0.01%)</title><rect x="1103.4" y="277" width="0.1" height="15.0" fill="rgb(241,133,38)" rx="2" ry="2" />
<text  x="1106.41" y="287.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (66 samples, 0.10%)</title><rect x="767.6" y="309" width="1.2" height="15.0" fill="rgb(214,190,18)" rx="2" ry="2" />
<text  x="770.56" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (272 samples, 0.42%)</title><rect x="590.7" y="309" width="5.1" height="15.0" fill="rgb(250,177,1)" rx="2" ry="2" />
<text  x="593.75" y="319.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (821 samples, 1.28%)</title><rect x="42.2" y="501" width="15.1" height="15.0" fill="rgb(216,227,43)" rx="2" ry="2" />
<text  x="45.17" y="511.5" ></text>
</g>
<g >
<title>lind_read (22,683 samples, 35.44%)</title><rect x="118.9" y="421" width="418.2" height="15.0" fill="rgb(252,159,32)" rx="2" ry="2" />
<text  x="121.92" y="431.5" >lind_read</text>
</g>
<g >
<title>NaClFastMutexLock (18 samples, 0.03%)</title><rect x="551.8" y="469" width="0.3" height="15.0" fill="rgb(243,137,42)" rx="2" ry="2" />
<text  x="554.81" y="479.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (561 samples, 0.88%)</title><rect x="862.5" y="357" width="10.3" height="15.0" fill="rgb(227,108,10)" rx="2" ry="2" />
<text  x="865.48" y="367.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (321 samples, 0.50%)</title><rect x="768.8" y="309" width="5.9" height="15.0" fill="rgb(237,18,31)" rx="2" ry="2" />
<text  x="771.77" y="319.5" ></text>
</g>
<g >
<title>native_sched_clock (15 samples, 0.02%)</title><rect x="1143.0" y="389" width="0.2" height="15.0" fill="rgb(218,112,14)" rx="2" ry="2" />
<text  x="1145.97" y="399.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (23 samples, 0.04%)</title><rect x="868.8" y="229" width="0.4" height="15.0" fill="rgb(253,34,7)" rx="2" ry="2" />
<text  x="871.82" y="239.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (10 samples, 0.02%)</title><rect x="105.5" y="485" width="0.2" height="15.0" fill="rgb(234,72,0)" rx="2" ry="2" />
<text  x="108.53" y="495.5" ></text>
</g>
<g >
<title>perf_poll (6 samples, 0.01%)</title><rect x="11.6" y="357" width="0.2" height="15.0" fill="rgb(221,148,44)" rx="2" ry="2" />
<text  x="14.64" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (52 samples, 0.08%)</title><rect x="938.4" y="373" width="0.9" height="15.0" fill="rgb(246,29,30)" rx="2" ry="2" />
<text  x="941.36" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_poll (17 samples, 0.03%)</title><rect x="11.6" y="405" width="0.3" height="15.0" fill="rgb(222,32,12)" rx="2" ry="2" />
<text  x="14.60" y="415.5" ></text>
</g>
<g >
<title>sched_clock_cpu (11 samples, 0.02%)</title><rect x="1185.9" y="341" width="0.2" height="15.0" fill="rgb(222,199,45)" rx="2" ry="2" />
<text  x="1188.94" y="351.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (21 samples, 0.03%)</title><rect x="899.4" y="437" width="0.3" height="15.0" fill="rgb(248,224,9)" rx="2" ry="2" />
<text  x="902.35" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_read (6 samples, 0.01%)</title><rect x="1096.1" y="485" width="0.2" height="15.0" fill="rgb(209,138,8)" rx="2" ry="2" />
<text  x="1099.15" y="495.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (168 samples, 0.26%)</title><rect x="140.1" y="325" width="3.1" height="15.0" fill="rgb(229,151,0)" rx="2" ry="2" />
<text  x="143.10" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (22,683 samples, 35.44%)</title><rect x="118.9" y="389" width="418.2" height="15.0" fill="rgb(216,168,24)" rx="2" ry="2" />
<text  x="121.92" y="399.5" >rustposix::safeposix::dispatcher::dispatcher::{{closure}}</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (884 samples, 1.38%)</title><rect x="626.9" y="341" width="16.3" height="15.0" fill="rgb(238,221,1)" rx="2" ry="2" />
<text  x="629.93" y="351.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (299 samples, 0.47%)</title><rect x="893.8" y="437" width="5.6" height="15.0" fill="rgb(205,86,11)" rx="2" ry="2" />
<text  x="896.84" y="447.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (8 samples, 0.01%)</title><rect x="17.0" y="357" width="0.2" height="15.0" fill="rgb(251,209,47)" rx="2" ry="2" />
<text  x="20.01" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (17 samples, 0.03%)</title><rect x="1186.8" y="325" width="0.3" height="15.0" fill="rgb(235,163,7)" rx="2" ry="2" />
<text  x="1189.83" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (65 samples, 0.10%)</title><rect x="817.0" y="245" width="1.2" height="15.0" fill="rgb(253,93,51)" rx="2" ry="2" />
<text  x="820.00" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (71 samples, 0.11%)</title><rect x="871.5" y="277" width="1.3" height="15.0" fill="rgb(223,78,39)" rx="2" ry="2" />
<text  x="874.51" y="287.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (12 samples, 0.02%)</title><rect x="113.8" y="437" width="0.2" height="15.0" fill="rgb(213,16,45)" rx="2" ry="2" />
<text  x="116.79" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (12 samples, 0.02%)</title><rect x="684.0" y="245" width="0.3" height="15.0" fill="rgb(222,184,6)" rx="2" ry="2" />
<text  x="687.05" y="255.5" ></text>
</g>
<g >
<title>split_map_pages (21 samples, 0.03%)</title><rect x="1099.9" y="373" width="0.4" height="15.0" fill="rgb(233,53,10)" rx="2" ry="2" />
<text  x="1102.94" y="383.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (51 samples, 0.08%)</title><rect x="824.6" y="261" width="0.9" height="15.0" fill="rgb(249,9,53)" rx="2" ry="2" />
<text  x="827.58" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (75 samples, 0.12%)</title><rect x="830.5" y="245" width="1.4" height="15.0" fill="rgb(235,92,0)" rx="2" ry="2" />
<text  x="833.50" y="255.5" ></text>
</g>
<g >
<title>ksys_read (6 samples, 0.01%)</title><rect x="1096.1" y="469" width="0.2" height="15.0" fill="rgb(253,199,44)" rx="2" ry="2" />
<text  x="1099.15" y="479.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.02%)</title><rect x="970.9" y="453" width="0.3" height="15.0" fill="rgb(206,83,23)" rx="2" ry="2" />
<text  x="973.93" y="463.5" ></text>
</g>
<g >
<title>record__pushfn (268 samples, 0.42%)</title><rect x="12.0" y="421" width="5.0" height="15.0" fill="rgb(206,25,27)" rx="2" ry="2" />
<text  x="15.05" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_write (266 samples, 0.42%)</title><rect x="12.1" y="325" width="4.9" height="15.0" fill="rgb(236,189,45)" rx="2" ry="2" />
<text  x="15.06" y="335.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (683 samples, 1.07%)</title><rect x="590.7" y="341" width="12.6" height="15.0" fill="rgb(238,44,8)" rx="2" ry="2" />
<text  x="593.75" y="351.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (33 samples, 0.05%)</title><rect x="1187.3" y="389" width="0.6" height="15.0" fill="rgb(234,181,33)" rx="2" ry="2" />
<text  x="1190.29" y="399.5" ></text>
</g>
<g >
<title>schedule_idle (89 samples, 0.14%)</title><rect x="1187.9" y="389" width="1.7" height="15.0" fill="rgb(210,17,48)" rx="2" ry="2" />
<text  x="1190.94" y="399.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (37 samples, 0.06%)</title><rect x="1103.2" y="389" width="0.7" height="15.0" fill="rgb(223,196,39)" rx="2" ry="2" />
<text  x="1106.21" y="399.5" ></text>
</g>
<g >
<title>dispatcher (60 samples, 0.09%)</title><rect x="40.1" y="501" width="1.1" height="15.0" fill="rgb(250,181,10)" rx="2" ry="2" />
<text  x="43.12" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (33 samples, 0.05%)</title><rect x="867.1" y="309" width="0.7" height="15.0" fill="rgb(224,62,17)" rx="2" ry="2" />
<text  x="870.14" y="319.5" ></text>
</g>
<g >
<title>llist_add_batch (14 samples, 0.02%)</title><rect x="1189.2" y="277" width="0.2" height="15.0" fill="rgb(217,228,40)" rx="2" ry="2" />
<text  x="1192.17" y="287.5" ></text>
</g>
<g >
<title>llist_reverse_order (73 samples, 0.11%)</title><rect x="1153.0" y="437" width="1.4" height="15.0" fill="rgb(210,206,36)" rx="2" ry="2" />
<text  x="1156.04" y="447.5" ></text>
</g>
<g >
<title>NaClSysWrite (19,159 samples, 29.93%)</title><rect x="552.6" y="469" width="353.2" height="15.0" fill="rgb(212,110,47)" rx="2" ry="2" />
<text  x="555.60" y="479.5" >NaClSysWrite</text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (411 samples, 0.64%)</title><rect x="595.8" y="309" width="7.5" height="15.0" fill="rgb(228,135,50)" rx="2" ry="2" />
<text  x="598.76" y="319.5" ></text>
</g>
<g >
<title>generic_exec_single (65 samples, 0.10%)</title><rect x="10.4" y="261" width="1.2" height="15.0" fill="rgb(208,47,3)" rx="2" ry="2" />
<text  x="13.39" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (609 samples, 0.95%)</title><rect x="656.1" y="357" width="11.2" height="15.0" fill="rgb(211,143,53)" rx="2" ry="2" />
<text  x="659.12" y="367.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (22,680 samples, 35.43%)</title><rect x="118.9" y="357" width="418.1" height="15.0" fill="rgb(238,15,0)" rx="2" ry="2" />
<text  x="121.93" y="367.5" >rustposix::interface::pipe::EmulatedPipe::read_from_pipe</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (699 samples, 1.09%)</title><rect x="643.2" y="309" width="12.9" height="15.0" fill="rgb(253,105,11)" rx="2" ry="2" />
<text  x="646.23" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (13 samples, 0.02%)</title><rect x="543.0" y="405" width="0.3" height="15.0" fill="rgb(215,84,48)" rx="2" ry="2" />
<text  x="546.02" y="415.5" ></text>
</g>
<g >
<title>NaClLog (16 samples, 0.02%)</title><rect x="65.5" y="501" width="0.3" height="15.0" fill="rgb(254,121,9)" rx="2" ry="2" />
<text  x="68.51" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (683 samples, 1.07%)</title><rect x="590.7" y="389" width="12.6" height="15.0" fill="rgb(218,94,24)" rx="2" ry="2" />
<text  x="593.75" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (32 samples, 0.05%)</title><rect x="831.3" y="229" width="0.6" height="15.0" fill="rgb(250,160,17)" rx="2" ry="2" />
<text  x="834.29" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="40.4" y="485" width="0.2" height="15.0" fill="rgb(228,167,45)" rx="2" ry="2" />
<text  x="43.40" y="495.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (683 samples, 1.07%)</title><rect x="590.7" y="373" width="12.6" height="15.0" fill="rgb(233,0,47)" rx="2" ry="2" />
<text  x="593.75" y="383.5" ></text>
</g>
<g >
<title>all (64,008 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(223,151,25)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (428 samples, 0.67%)</title><rect x="854.2" y="357" width="7.9" height="15.0" fill="rgb(239,174,16)" rx="2" ry="2" />
<text  x="857.24" y="367.5" ></text>
</g>
<g >
<title>std::panicking::panicking (27 samples, 0.04%)</title><rect x="832.7" y="293" width="0.5" height="15.0" fill="rgb(218,81,3)" rx="2" ry="2" />
<text  x="835.69" y="303.5" ></text>
</g>
<g >
<title>alx_poll (7 samples, 0.01%)</title><rect x="1103.1" y="277" width="0.1" height="15.0" fill="rgb(236,99,1)" rx="2" ry="2" />
<text  x="1106.08" y="287.5" ></text>
</g>
<g >
<title>NaClMutexLock (361 samples, 0.56%)</title><rect x="107.4" y="453" width="6.6" height="15.0" fill="rgb(223,195,31)" rx="2" ry="2" />
<text  x="110.36" y="463.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (9 samples, 0.01%)</title><rect x="1145.2" y="405" width="0.1" height="15.0" fill="rgb(232,194,30)" rx="2" ry="2" />
<text  x="1148.17" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (51 samples, 0.08%)</title><rect x="938.4" y="357" width="0.9" height="15.0" fill="rgb(211,15,51)" rx="2" ry="2" />
<text  x="941.38" y="367.5" ></text>
</g>
<g >
<title>release_pages (25 samples, 0.04%)</title><rect x="972.7" y="277" width="0.4" height="15.0" fill="rgb(226,9,36)" rx="2" ry="2" />
<text  x="975.67" y="287.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (7 samples, 0.01%)</title><rect x="945.2" y="453" width="0.1" height="15.0" fill="rgb(225,70,49)" rx="2" ry="2" />
<text  x="948.20" y="463.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (16 samples, 0.02%)</title><rect x="776.6" y="261" width="0.3" height="15.0" fill="rgb(221,94,9)" rx="2" ry="2" />
<text  x="779.65" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (6 samples, 0.01%)</title><rect x="1095.4" y="485" width="0.1" height="15.0" fill="rgb(236,103,37)" rx="2" ry="2" />
<text  x="1098.35" y="495.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (8 samples, 0.01%)</title><rect x="1095.3" y="517" width="0.2" height="15.0" fill="rgb(238,104,7)" rx="2" ry="2" />
<text  x="1098.32" y="527.5" ></text>
</g>
<g >
<title>handle_mm_fault (105 samples, 0.16%)</title><rect x="938.0" y="453" width="2.0" height="15.0" fill="rgb(225,117,18)" rx="2" ry="2" />
<text  x="941.05" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (884 samples, 1.38%)</title><rect x="626.9" y="357" width="16.3" height="15.0" fill="rgb(206,89,31)" rx="2" ry="2" />
<text  x="629.93" y="367.5" ></text>
</g>
<g >
<title>mmput (54 samples, 0.08%)</title><rect x="972.1" y="421" width="1.0" height="15.0" fill="rgb(232,171,25)" rx="2" ry="2" />
<text  x="975.13" y="431.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (43 samples, 0.07%)</title><rect x="118.0" y="485" width="0.8" height="15.0" fill="rgb(250,204,13)" rx="2" ry="2" />
<text  x="120.97" y="495.5" ></text>
</g>
<g >
<title>__cmd_record (373 samples, 0.58%)</title><rect x="10.1" y="485" width="6.9" height="15.0" fill="rgb(247,191,42)" rx="2" ry="2" />
<text  x="13.11" y="495.5" ></text>
</g>
<g >
<title>smp_call_function_many_cond (8 samples, 0.01%)</title><rect x="1099.0" y="293" width="0.1" height="15.0" fill="rgb(228,51,31)" rx="2" ry="2" />
<text  x="1101.99" y="303.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (14 samples, 0.02%)</title><rect x="942.7" y="501" width="0.2" height="15.0" fill="rgb(226,0,21)" rx="2" ry="2" />
<text  x="945.67" y="511.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (8 samples, 0.01%)</title><rect x="939.8" y="389" width="0.1" height="15.0" fill="rgb(246,197,41)" rx="2" ry="2" />
<text  x="942.78" y="399.5" ></text>
</g>
<g >
<title>lind_write (11 samples, 0.02%)</title><rect x="884.9" y="437" width="0.2" height="15.0" fill="rgb(210,138,48)" rx="2" ry="2" />
<text  x="887.90" y="447.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (35 samples, 0.05%)</title><rect x="59.0" y="485" width="0.7" height="15.0" fill="rgb(235,13,8)" rx="2" ry="2" />
<text  x="62.02" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1,131 samples, 1.77%)</title><rect x="605.8" y="325" width="20.8" height="15.0" fill="rgb(214,136,12)" rx="2" ry="2" />
<text  x="608.75" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (24 samples, 0.04%)</title><rect x="1157.6" y="389" width="0.4" height="15.0" fill="rgb(235,8,10)" rx="2" ry="2" />
<text  x="1160.57" y="399.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (174 samples, 0.27%)</title><rect x="825.5" y="261" width="3.2" height="15.0" fill="rgb(234,133,8)" rx="2" ry="2" />
<text  x="828.52" y="271.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (18 samples, 0.03%)</title><rect x="972.7" y="229" width="0.4" height="15.0" fill="rgb(252,146,30)" rx="2" ry="2" />
<text  x="975.74" y="239.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.05%)</title><rect x="870.9" y="309" width="0.6" height="15.0" fill="rgb(215,131,39)" rx="2" ry="2" />
<text  x="873.89" y="319.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (17,340 samples, 27.09%)</title><rect x="565.4" y="453" width="319.7" height="15.0" fill="rgb(228,135,9)" rx="2" ry="2" />
<text  x="568.43" y="463.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>ext4_buffered_write_iter (262 samples, 0.41%)</title><rect x="12.1" y="181" width="4.9" height="15.0" fill="rgb(222,175,7)" rx="2" ry="2" />
<text  x="15.14" y="191.5" ></text>
</g>
<g >
<title>free_unref_page_list (20 samples, 0.03%)</title><rect x="972.7" y="261" width="0.4" height="15.0" fill="rgb(222,48,23)" rx="2" ry="2" />
<text  x="975.70" y="271.5" ></text>
</g>
<g >
<title>__libc_write (267 samples, 0.42%)</title><rect x="12.0" y="373" width="5.0" height="15.0" fill="rgb(245,59,51)" rx="2" ry="2" />
<text  x="15.05" y="383.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (174 samples, 0.27%)</title><rect x="825.5" y="293" width="3.2" height="15.0" fill="rgb(241,107,3)" rx="2" ry="2" />
<text  x="828.52" y="303.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get (18 samples, 0.03%)</title><rect x="626.6" y="293" width="0.3" height="15.0" fill="rgb(233,196,2)" rx="2" ry="2" />
<text  x="629.60" y="303.5" ></text>
</g>
<g >
<title>read_tsc (38 samples, 0.06%)</title><rect x="1169.5" y="437" width="0.7" height="15.0" fill="rgb(236,82,12)" rx="2" ry="2" />
<text  x="1172.48" y="447.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (6 samples, 0.01%)</title><rect x="1185.6" y="325" width="0.1" height="15.0" fill="rgb(228,98,11)" rx="2" ry="2" />
<text  x="1188.63" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1,133 samples, 1.77%)</title><rect x="605.7" y="357" width="20.9" height="15.0" fill="rgb(205,187,19)" rx="2" ry="2" />
<text  x="608.71" y="367.5" ></text>
</g>
<g >
<title>rcu_idle_enter (19 samples, 0.03%)</title><rect x="1141.5" y="405" width="0.4" height="15.0" fill="rgb(218,20,23)" rx="2" ry="2" />
<text  x="1144.53" y="415.5" ></text>
</g>
<g >
<title>[unknown]  (1,836 samples, 2.87%)</title><rect x="906.4" y="517" width="33.9" height="15.0" fill="rgb(243,107,50)" rx="2" ry="2" />
<text  x="909.45" y="527.5" >[u..</text>
</g>
<g >
<title>__slab_alloc (6 samples, 0.01%)</title><rect x="13.0" y="53" width="0.1" height="15.0" fill="rgb(237,44,39)" rx="2" ry="2" />
<text  x="15.97" y="63.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (16 samples, 0.02%)</title><rect x="1103.6" y="325" width="0.3" height="15.0" fill="rgb(233,49,40)" rx="2" ry="2" />
<text  x="1106.58" y="335.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (20 samples, 0.03%)</title><rect x="938.9" y="309" width="0.4" height="15.0" fill="rgb(243,72,34)" rx="2" ry="2" />
<text  x="941.95" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (922 samples, 1.44%)</title><rect x="815.4" y="341" width="17.0" height="15.0" fill="rgb(245,34,13)" rx="2" ry="2" />
<text  x="818.38" y="351.5" ></text>
</g>
<g >
<title>do_sys_poll (17 samples, 0.03%)</title><rect x="11.6" y="389" width="0.3" height="15.0" fill="rgb(241,199,46)" rx="2" ry="2" />
<text  x="14.60" y="399.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (22,683 samples, 35.44%)</title><rect x="118.9" y="453" width="418.2" height="15.0" fill="rgb(222,172,52)" rx="2" ry="2" />
<text  x="121.92" y="463.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>dispatcher (39 samples, 0.06%)</title><rect x="944.5" y="501" width="0.7" height="15.0" fill="rgb(224,160,41)" rx="2" ry="2" />
<text  x="947.48" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (15 samples, 0.02%)</title><rect x="776.7" y="229" width="0.2" height="15.0" fill="rgb(227,47,50)" rx="2" ry="2" />
<text  x="779.66" y="239.5" ></text>
</g>
<g >
<title>copy_page (50 samples, 0.08%)</title><rect x="1097.5" y="341" width="0.9" height="15.0" fill="rgb(227,99,21)" rx="2" ry="2" />
<text  x="1100.47" y="351.5" ></text>
</g>
<g >
<title>start_secondary (3,867 samples, 6.04%)</title><rect x="1100.6" y="501" width="71.3" height="15.0" fill="rgb(205,43,22)" rx="2" ry="2" />
<text  x="1103.57" y="511.5" >start_se..</text>
</g>
<g >
<title>rmqueue (24 samples, 0.04%)</title><rect x="938.9" y="341" width="0.4" height="15.0" fill="rgb(247,56,47)" rx="2" ry="2" />
<text  x="941.88" y="351.5" ></text>
</g>
<g >
<title>generic_update_time (9 samples, 0.01%)</title><rect x="12.1" y="133" width="0.2" height="15.0" fill="rgb(254,108,21)" rx="2" ry="2" />
<text  x="15.14" y="143.5" ></text>
</g>
<g >
<title>[unknown] (1,681 samples, 2.63%)</title><rect x="940.3" y="517" width="31.0" height="15.0" fill="rgb(209,216,44)" rx="2" ry="2" />
<text  x="943.30" y="527.5" >[u..</text>
</g>
<g >
<title>sel_ldr (51,855 samples, 81.01%)</title><rect x="17.2" y="533" width="955.9" height="15.0" fill="rgb(224,135,9)" rx="2" ry="2" />
<text  x="20.17" y="543.5" >sel_ldr</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (14 samples, 0.02%)</title><rect x="755.8" y="325" width="0.3" height="15.0" fill="rgb(218,53,34)" rx="2" ry="2" />
<text  x="758.83" y="335.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (11 samples, 0.02%)</title><rect x="872.8" y="309" width="0.2" height="15.0" fill="rgb(223,172,40)" rx="2" ry="2" />
<text  x="875.82" y="319.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (20 samples, 0.03%)</title><rect x="15.2" y="117" width="0.4" height="15.0" fill="rgb(225,131,10)" rx="2" ry="2" />
<text  x="18.24" y="127.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (13 samples, 0.02%)</title><rect x="603.8" y="373" width="0.2" height="15.0" fill="rgb(252,76,2)" rx="2" ry="2" />
<text  x="606.80" y="383.5" ></text>
</g>
<g >
<title>_perf_event_enable (69 samples, 0.11%)</title><rect x="10.3" y="309" width="1.3" height="15.0" fill="rgb(219,22,9)" rx="2" ry="2" />
<text  x="13.31" y="319.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (8 samples, 0.01%)</title><rect x="17.0" y="373" width="0.2" height="15.0" fill="rgb(254,182,30)" rx="2" ry="2" />
<text  x="20.01" y="383.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (7 samples, 0.01%)</title><rect x="18.5" y="501" width="0.1" height="15.0" fill="rgb(222,202,4)" rx="2" ry="2" />
<text  x="21.52" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="61.6" y="485" width="0.3" height="15.0" fill="rgb(225,151,45)" rx="2" ry="2" />
<text  x="64.58" y="495.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (27 samples, 0.04%)</title><rect x="972.6" y="309" width="0.5" height="15.0" fill="rgb(236,143,32)" rx="2" ry="2" />
<text  x="975.63" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (9 samples, 0.01%)</title><rect x="1150.4" y="421" width="0.2" height="15.0" fill="rgb(211,178,27)" rx="2" ry="2" />
<text  x="1153.42" y="431.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (34 samples, 0.05%)</title><rect x="869.5" y="245" width="0.6" height="15.0" fill="rgb(206,93,37)" rx="2" ry="2" />
<text  x="872.49" y="255.5" ></text>
</g>
<g >
<title>ext4_da_write_end (63 samples, 0.10%)</title><rect x="15.1" y="149" width="1.1" height="15.0" fill="rgb(231,33,7)" rx="2" ry="2" />
<text  x="18.05" y="159.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (14,000 samples, 21.87%)</title><rect x="604.0" y="373" width="258.1" height="15.0" fill="rgb(248,59,34)" rx="2" ry="2" />
<text  x="607.04" y="383.5" >rustposix::safeposix::syscalls::fs..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (27 samples, 0.04%)</title><rect x="871.6" y="261" width="0.5" height="15.0" fill="rgb(238,198,31)" rx="2" ry="2" />
<text  x="874.57" y="271.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (12 samples, 0.02%)</title><rect x="40.4" y="421" width="0.2" height="15.0" fill="rgb(253,16,9)" rx="2" ry="2" />
<text  x="43.40" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (658 samples, 1.03%)</title><rect x="420.1" y="293" width="12.2" height="15.0" fill="rgb(239,88,36)" rx="2" ry="2" />
<text  x="423.13" y="303.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (633 samples, 0.99%)</title><rect x="873.0" y="373" width="11.7" height="15.0" fill="rgb(215,11,50)" rx="2" ry="2" />
<text  x="876.03" y="383.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (556 samples, 0.87%)</title><rect x="756.3" y="325" width="10.3" height="15.0" fill="rgb(235,31,53)" rx="2" ry="2" />
<text  x="759.35" y="335.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (23 samples, 0.04%)</title><rect x="854.2" y="325" width="0.5" height="15.0" fill="rgb(216,163,15)" rx="2" ry="2" />
<text  x="857.24" y="335.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (57 samples, 0.09%)</title><rect x="1163.7" y="325" width="1.1" height="15.0" fill="rgb(221,138,34)" rx="2" ry="2" />
<text  x="1166.73" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (23 samples, 0.04%)</title><rect x="830.1" y="277" width="0.4" height="15.0" fill="rgb(222,184,16)" rx="2" ry="2" />
<text  x="833.07" y="287.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_try_init (18 samples, 0.03%)</title><rect x="626.6" y="309" width="0.3" height="15.0" fill="rgb(231,60,52)" rx="2" ry="2" />
<text  x="629.60" y="319.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (35 samples, 0.05%)</title><rect x="16.3" y="149" width="0.6" height="15.0" fill="rgb(252,39,12)" rx="2" ry="2" />
<text  x="19.27" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (37 samples, 0.06%)</title><rect x="551.0" y="453" width="0.7" height="15.0" fill="rgb(248,172,3)" rx="2" ry="2" />
<text  x="553.98" y="463.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (53 samples, 0.08%)</title><rect x="117.0" y="485" width="1.0" height="15.0" fill="rgb(246,45,33)" rx="2" ry="2" />
<text  x="119.98" y="495.5" ></text>
</g>
<g >
<title>migrate_page_states (22 samples, 0.03%)</title><rect x="1098.4" y="325" width="0.4" height="15.0" fill="rgb(236,14,47)" rx="2" ry="2" />
<text  x="1101.40" y="335.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (14 samples, 0.02%)</title><rect x="20.7" y="501" width="0.2" height="15.0" fill="rgb(209,148,48)" rx="2" ry="2" />
<text  x="23.67" y="511.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (9 samples, 0.01%)</title><rect x="1186.9" y="309" width="0.2" height="15.0" fill="rgb(219,3,30)" rx="2" ry="2" />
<text  x="1189.94" y="319.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.05%)</title><rect x="870.9" y="293" width="0.6" height="15.0" fill="rgb(243,223,18)" rx="2" ry="2" />
<text  x="873.89" y="303.5" ></text>
</g>
<g >
<title>std::panicking::panicking (13 samples, 0.02%)</title><rect x="854.4" y="293" width="0.3" height="15.0" fill="rgb(248,88,4)" rx="2" ry="2" />
<text  x="857.42" y="303.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (262 samples, 0.41%)</title><rect x="12.1" y="197" width="4.9" height="15.0" fill="rgb(232,131,9)" rx="2" ry="2" />
<text  x="15.14" y="207.5" ></text>
</g>
<g >
<title>cpuidle_select (351 samples, 0.55%)</title><rect x="1143.7" y="437" width="6.5" height="15.0" fill="rgb(219,225,46)" rx="2" ry="2" />
<text  x="1146.71" y="447.5" ></text>
</g>
<g >
<title>migrate_page_move_mapping (7 samples, 0.01%)</title><rect x="1098.8" y="341" width="0.1" height="15.0" fill="rgb(228,14,45)" rx="2" ry="2" />
<text  x="1101.80" y="351.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (107 samples, 0.17%)</title><rect x="1159.6" y="373" width="2.0" height="15.0" fill="rgb(220,144,25)" rx="2" ry="2" />
<text  x="1162.64" y="383.5" ></text>
</g>
<g >
<title>DynArrayGet (66 samples, 0.10%)</title><rect x="900.7" y="437" width="1.2" height="15.0" fill="rgb(244,70,45)" rx="2" ry="2" />
<text  x="903.66" y="447.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (45,588 samples, 71.22%)</title><rect x="66.0" y="501" width="840.4" height="15.0" fill="rgb(251,55,18)" rx="2" ry="2" />
<text  x="69.02" y="511.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>on_each_cpu_cond (9 samples, 0.01%)</title><rect x="1099.0" y="325" width="0.1" height="15.0" fill="rgb(225,92,6)" rx="2" ry="2" />
<text  x="1101.97" y="335.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (9 samples, 0.01%)</title><rect x="892.6" y="437" width="0.1" height="15.0" fill="rgb(232,58,34)" rx="2" ry="2" />
<text  x="895.57" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (15 samples, 0.02%)</title><rect x="945.2" y="501" width="0.3" height="15.0" fill="rgb(254,185,42)" rx="2" ry="2" />
<text  x="948.20" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (13 samples, 0.02%)</title><rect x="1167.7" y="437" width="0.2" height="15.0" fill="rgb(219,9,50)" rx="2" ry="2" />
<text  x="1170.67" y="447.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (66 samples, 0.10%)</title><rect x="549.6" y="453" width="1.2" height="15.0" fill="rgb(235,30,10)" rx="2" ry="2" />
<text  x="552.56" y="463.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (48 samples, 0.07%)</title><rect x="12.8" y="133" width="0.9" height="15.0" fill="rgb(217,73,18)" rx="2" ry="2" />
<text  x="15.78" y="143.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (10 samples, 0.02%)</title><rect x="1142.4" y="389" width="0.2" height="15.0" fill="rgb(254,155,50)" rx="2" ry="2" />
<text  x="1145.44" y="399.5" ></text>
</g>
<g >
<title>nohz_csd_func (94 samples, 0.15%)</title><rect x="1154.4" y="437" width="1.7" height="15.0" fill="rgb(235,164,50)" rx="2" ry="2" />
<text  x="1157.38" y="447.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (6 samples, 0.01%)</title><rect x="15.8" y="37" width="0.1" height="15.0" fill="rgb(208,137,8)" rx="2" ry="2" />
<text  x="18.83" y="47.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (16 samples, 0.02%)</title><rect x="1103.6" y="341" width="0.3" height="15.0" fill="rgb(236,112,33)" rx="2" ry="2" />
<text  x="1106.58" y="351.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (272 samples, 0.42%)</title><rect x="12.0" y="453" width="5.0" height="15.0" fill="rgb(232,87,36)" rx="2" ry="2" />
<text  x="14.97" y="463.5" ></text>
</g>
<g >
<title>DynArrayGet (14 samples, 0.02%)</title><rect x="940.8" y="501" width="0.2" height="15.0" fill="rgb(219,56,54)" rx="2" ry="2" />
<text  x="943.77" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (25 samples, 0.04%)</title><rect x="827.1" y="197" width="0.4" height="15.0" fill="rgb(238,77,31)" rx="2" ry="2" />
<text  x="830.07" y="207.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (24 samples, 0.04%)</title><rect x="872.1" y="229" width="0.4" height="15.0" fill="rgb(254,147,34)" rx="2" ry="2" />
<text  x="875.07" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (21 samples, 0.03%)</title><rect x="1147.2" y="373" width="0.4" height="15.0" fill="rgb(235,95,11)" rx="2" ry="2" />
<text  x="1150.21" y="383.5" ></text>
</g>
<g >
<title>poll_idle (1,152 samples, 1.80%)</title><rect x="1120.1" y="405" width="21.3" height="15.0" fill="rgb(244,71,30)" rx="2" ry="2" />
<text  x="1123.13" y="415.5" ></text>
</g>
<g >
<title>napi_poll (7 samples, 0.01%)</title><rect x="1103.1" y="293" width="0.1" height="15.0" fill="rgb(243,171,19)" rx="2" ry="2" />
<text  x="1106.08" y="303.5" ></text>
</g>
<g >
<title>do_iter_write (8 samples, 0.01%)</title><rect x="17.0" y="389" width="0.2" height="15.0" fill="rgb(249,34,15)" rx="2" ry="2" />
<text  x="20.01" y="399.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (106 samples, 0.17%)</title><rect x="774.7" y="293" width="1.9" height="15.0" fill="rgb(220,147,6)" rx="2" ry="2" />
<text  x="777.69" y="303.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (609 samples, 0.95%)</title><rect x="1172.4" y="341" width="11.2" height="15.0" fill="rgb(230,176,36)" rx="2" ry="2" />
<text  x="1175.36" y="351.5" ></text>
</g>
<g >
<title>isolate_freepages (49 samples, 0.08%)</title><rect x="1099.4" y="389" width="0.9" height="15.0" fill="rgb(221,56,11)" rx="2" ry="2" />
<text  x="1102.43" y="399.5" ></text>
</g>
<g >
<title>sched_clock_cpu (26 samples, 0.04%)</title><rect x="1142.8" y="405" width="0.5" height="15.0" fill="rgb(251,181,3)" rx="2" ry="2" />
<text  x="1145.84" y="415.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1,142 samples, 1.78%)</title><rect x="833.2" y="341" width="21.0" height="15.0" fill="rgb(208,127,22)" rx="2" ry="2" />
<text  x="836.19" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (13 samples, 0.02%)</title><rect x="970.9" y="485" width="0.3" height="15.0" fill="rgb(248,226,7)" rx="2" ry="2" />
<text  x="973.93" y="495.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,661 samples, 4.16%)</title><rect x="1101.6" y="453" width="49.0" height="15.0" fill="rgb(240,222,49)" rx="2" ry="2" />
<text  x="1104.57" y="463.5" >cpui..</text>
</g>
<g >
<title>cgroup_throttle_swaprate (8 samples, 0.01%)</title><rect x="939.3" y="389" width="0.2" height="15.0" fill="rgb(242,109,30)" rx="2" ry="2" />
<text  x="942.32" y="399.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (155 samples, 0.24%)</title><rect x="867.8" y="309" width="2.8" height="15.0" fill="rgb(206,17,5)" rx="2" ry="2" />
<text  x="870.75" y="319.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (10 samples, 0.02%)</title><rect x="549.4" y="405" width="0.2" height="15.0" fill="rgb(251,76,10)" rx="2" ry="2" />
<text  x="552.38" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (95 samples, 0.15%)</title><rect x="1148.0" y="389" width="1.8" height="15.0" fill="rgb(205,209,11)" rx="2" ry="2" />
<text  x="1151.04" y="399.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.04%)</title><rect x="871.0" y="277" width="0.5" height="15.0" fill="rgb(239,189,7)" rx="2" ry="2" />
<text  x="874.02" y="287.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.01%)</title><rect x="432.1" y="213" width="0.2" height="15.0" fill="rgb(246,27,44)" rx="2" ry="2" />
<text  x="435.11" y="223.5" ></text>
</g>
<g >
<title>NaClXMutexLock (416 samples, 0.65%)</title><rect x="106.3" y="469" width="7.7" height="15.0" fill="rgb(228,32,13)" rx="2" ry="2" />
<text  x="109.34" y="479.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (922 samples, 1.44%)</title><rect x="815.4" y="357" width="17.0" height="15.0" fill="rgb(242,24,45)" rx="2" ry="2" />
<text  x="818.38" y="367.5" ></text>
</g>
<g >
<title>alloc_pages_current (29 samples, 0.05%)</title><rect x="14.5" y="101" width="0.5" height="15.0" fill="rgb(207,221,49)" rx="2" ry="2" />
<text  x="17.46" y="111.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (215 samples, 0.34%)</title><rect x="586.8" y="357" width="3.9" height="15.0" fill="rgb(231,160,43)" rx="2" ry="2" />
<text  x="589.78" y="367.5" ></text>
</g>
<g >
<title>vfs_read (6 samples, 0.01%)</title><rect x="1096.1" y="453" width="0.2" height="15.0" fill="rgb(240,129,48)" rx="2" ry="2" />
<text  x="1099.15" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (290 samples, 0.45%)</title><rect x="108.4" y="437" width="5.4" height="15.0" fill="rgb(220,74,49)" rx="2" ry="2" />
<text  x="111.44" y="447.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (11 samples, 0.02%)</title><rect x="550.8" y="453" width="0.2" height="15.0" fill="rgb(214,210,6)" rx="2" ry="2" />
<text  x="553.78" y="463.5" ></text>
</g>
<g >
<title>perf_ioctl (80 samples, 0.12%)</title><rect x="10.1" y="357" width="1.5" height="15.0" fill="rgb(216,124,5)" rx="2" ry="2" />
<text  x="13.11" y="367.5" ></text>
</g>
<g >
<title>create_empty_buffers (27 samples, 0.04%)</title><rect x="12.8" y="117" width="0.5" height="15.0" fill="rgb(211,85,43)" rx="2" ry="2" />
<text  x="15.80" y="127.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 0.10%)</title><rect x="10.4" y="149" width="1.2" height="15.0" fill="rgb(248,136,26)" rx="2" ry="2" />
<text  x="13.41" y="159.5" ></text>
</g>
<g >
<title>new_sync_write (264 samples, 0.41%)</title><rect x="12.1" y="277" width="4.9" height="15.0" fill="rgb(223,160,28)" rx="2" ry="2" />
<text  x="15.10" y="287.5" ></text>
</g>
<g >
<title>ret_from_fork (224 samples, 0.35%)</title><rect x="1096.4" y="517" width="4.2" height="15.0" fill="rgb(216,164,50)" rx="2" ry="2" />
<text  x="1099.44" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (15 samples, 0.02%)</title><rect x="893.6" y="437" width="0.2" height="15.0" fill="rgb(215,105,38)" rx="2" ry="2" />
<text  x="896.56" y="447.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (7 samples, 0.01%)</title><rect x="1186.7" y="325" width="0.1" height="15.0" fill="rgb(209,185,21)" rx="2" ry="2" />
<text  x="1189.68" y="335.5" ></text>
</g>
<g >
<title>unmap_and_move (204 samples, 0.32%)</title><rect x="1096.6" y="421" width="3.8" height="15.0" fill="rgb(213,213,30)" rx="2" ry="2" />
<text  x="1099.64" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (6 samples, 0.01%)</title><rect x="1149.9" y="405" width="0.1" height="15.0" fill="rgb(239,91,12)" rx="2" ry="2" />
<text  x="1152.87" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (233 samples, 0.36%)</title><rect x="880.4" y="325" width="4.3" height="15.0" fill="rgb(224,2,27)" rx="2" ry="2" />
<text  x="883.40" y="335.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (286 samples, 0.45%)</title><rect x="143.2" y="341" width="5.3" height="15.0" fill="rgb(253,86,49)" rx="2" ry="2" />
<text  x="146.19" y="351.5" ></text>
</g>
<g >
<title>do_idle (3,795 samples, 5.93%)</title><rect x="1100.6" y="469" width="70.0" height="15.0" fill="rgb(230,141,11)" rx="2" ry="2" />
<text  x="1103.59" y="479.5" >do_idle</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (79 samples, 0.12%)</title><rect x="764.5" y="261" width="1.4" height="15.0" fill="rgb(242,226,9)" rx="2" ry="2" />
<text  x="767.46" y="271.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (16 samples, 0.02%)</title><rect x="552.3" y="469" width="0.3" height="15.0" fill="rgb(231,114,3)" rx="2" ry="2" />
<text  x="555.31" y="479.5" ></text>
</g>
<g >
<title>idle_cpu (15 samples, 0.02%)</title><rect x="1161.3" y="357" width="0.3" height="15.0" fill="rgb(249,144,30)" rx="2" ry="2" />
<text  x="1164.33" y="367.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (97 samples, 0.15%)</title><rect x="764.1" y="293" width="1.8" height="15.0" fill="rgb(216,212,27)" rx="2" ry="2" />
<text  x="767.13" y="303.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (17 samples, 0.03%)</title><rect x="832.4" y="309" width="0.3" height="15.0" fill="rgb(248,187,47)" rx="2" ry="2" />
<text  x="835.38" y="319.5" ></text>
</g>
<g >
<title>generic_write_end (53 samples, 0.08%)</title><rect x="15.2" y="133" width="1.0" height="15.0" fill="rgb(205,51,38)" rx="2" ry="2" />
<text  x="18.22" y="143.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (380 samples, 0.59%)</title><rect x="892.7" y="453" width="7.0" height="15.0" fill="rgb(227,183,46)" rx="2" ry="2" />
<text  x="895.73" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 0.12%)</title><rect x="10.1" y="405" width="1.5" height="15.0" fill="rgb(225,204,35)" rx="2" ry="2" />
<text  x="13.11" y="415.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (683 samples, 1.07%)</title><rect x="590.7" y="357" width="12.6" height="15.0" fill="rgb(237,30,46)" rx="2" ry="2" />
<text  x="593.75" y="367.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (17,265 samples, 26.97%)</title><rect x="566.6" y="437" width="318.3" height="15.0" fill="rgb(228,153,38)" rx="2" ry="2" />
<text  x="569.61" y="447.5" >NaClHostDescWrite</text>
</g>
<g >
<title>hashbrown::map::make_hash (706 samples, 1.10%)</title><rect x="815.7" y="309" width="13.0" height="15.0" fill="rgb(236,227,15)" rx="2" ry="2" />
<text  x="818.71" y="319.5" ></text>
</g>
<g >
<title>alloc_buffer_head (25 samples, 0.04%)</title><rect x="12.8" y="85" width="0.5" height="15.0" fill="rgb(228,212,52)" rx="2" ry="2" />
<text  x="15.82" y="95.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1,142 samples, 1.78%)</title><rect x="833.2" y="325" width="21.0" height="15.0" fill="rgb(206,150,8)" rx="2" ry="2" />
<text  x="836.19" y="335.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (179 samples, 0.28%)</title><rect x="145.2" y="309" width="3.3" height="15.0" fill="rgb(237,180,18)" rx="2" ry="2" />
<text  x="148.17" y="319.5" ></text>
</g>
<g >
<title>update_process_times (6 samples, 0.01%)</title><rect x="1103.4" y="261" width="0.1" height="15.0" fill="rgb(228,25,10)" rx="2" ry="2" />
<text  x="1106.41" y="271.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (14,038 samples, 21.93%)</title><rect x="603.3" y="389" width="258.8" height="15.0" fill="rgb(224,149,6)" rx="2" ry="2" />
<text  x="606.34" y="399.5" >rustposix::safeposix::dispatcher::..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (179 samples, 0.28%)</title><rect x="145.2" y="277" width="3.3" height="15.0" fill="rgb(233,135,31)" rx="2" ry="2" />
<text  x="148.17" y="287.5" ></text>
</g>
<g >
<title>NaClLog (134 samples, 0.21%)</title><rect x="902.1" y="453" width="2.5" height="15.0" fill="rgb(225,31,27)" rx="2" ry="2" />
<text  x="905.12" y="463.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7 samples, 0.01%)</title><rect x="1103.1" y="373" width="0.1" height="15.0" fill="rgb(207,212,33)" rx="2" ry="2" />
<text  x="1106.08" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (7 samples, 0.01%)</title><rect x="62.2" y="485" width="0.1" height="15.0" fill="rgb(220,9,0)" rx="2" ry="2" />
<text  x="65.15" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (628 samples, 0.98%)</title><rect x="668.0" y="277" width="11.5" height="15.0" fill="rgb(246,35,54)" rx="2" ry="2" />
<text  x="670.95" y="287.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (8 samples, 0.01%)</title><rect x="14.0" y="69" width="0.2" height="15.0" fill="rgb(226,182,18)" rx="2" ry="2" />
<text  x="17.02" y="79.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (16 samples, 0.02%)</title><rect x="1103.6" y="357" width="0.3" height="15.0" fill="rgb(254,177,42)" rx="2" ry="2" />
<text  x="1106.58" y="367.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (1,953 samples, 3.05%)</title><rect x="779.4" y="309" width="36.0" height="15.0" fill="rgb(211,214,8)" rx="2" ry="2" />
<text  x="782.37" y="319.5" >std..</text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (15 samples, 0.02%)</title><rect x="61.6" y="453" width="0.3" height="15.0" fill="rgb(252,4,33)" rx="2" ry="2" />
<text  x="64.58" y="463.5" ></text>
</g>
<g >
<title>event_function (65 samples, 0.10%)</title><rect x="10.4" y="229" width="1.2" height="15.0" fill="rgb(225,225,22)" rx="2" ry="2" />
<text  x="13.39" y="239.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (9 samples, 0.01%)</title><rect x="15.1" y="133" width="0.1" height="15.0" fill="rgb(208,190,24)" rx="2" ry="2" />
<text  x="18.05" y="143.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (8,103 samples, 12.66%)</title><rect x="387.7" y="341" width="149.3" height="15.0" fill="rgb(229,165,19)" rx="2" ry="2" />
<text  x="390.66" y="351.5" >ringbuf::consumer::..</text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (7 samples, 0.01%)</title><rect x="62.2" y="453" width="0.1" height="15.0" fill="rgb(221,104,3)" rx="2" ry="2" />
<text  x="65.15" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (11 samples, 0.02%)</title><rect x="1150.4" y="437" width="0.2" height="15.0" fill="rgb(244,156,2)" rx="2" ry="2" />
<text  x="1153.38" y="447.5" ></text>
</g>
<g >
<title>NaClMutexLock (6 samples, 0.01%)</title><rect x="942.3" y="501" width="0.1" height="15.0" fill="rgb(233,191,43)" rx="2" ry="2" />
<text  x="945.30" y="511.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (1,068 samples, 1.67%)</title><rect x="945.5" y="501" width="19.7" height="15.0" fill="rgb(206,218,18)" rx="2" ry="2" />
<text  x="948.48" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (922 samples, 1.44%)</title><rect x="815.4" y="325" width="17.0" height="15.0" fill="rgb(251,212,7)" rx="2" ry="2" />
<text  x="818.38" y="335.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (414 samples, 0.65%)</title><rect x="885.1" y="453" width="7.6" height="15.0" fill="rgb(226,109,14)" rx="2" ry="2" />
<text  x="888.10" y="463.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (174 samples, 0.27%)</title><rect x="825.5" y="277" width="3.2" height="15.0" fill="rgb(212,87,1)" rx="2" ry="2" />
<text  x="828.52" y="287.5" ></text>
</g>
<g >
<title>__ioctl (80 samples, 0.12%)</title><rect x="10.1" y="421" width="1.5" height="15.0" fill="rgb(215,218,42)" rx="2" ry="2" />
<text  x="13.11" y="431.5" ></text>
</g>
<g >
<title>do_user_addr_fault (111 samples, 0.17%)</title><rect x="937.9" y="469" width="2.1" height="15.0" fill="rgb(236,229,14)" rx="2" ry="2" />
<text  x="940.94" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (192 samples, 0.30%)</title><rect x="818.5" y="229" width="3.6" height="15.0" fill="rgb(222,115,51)" rx="2" ry="2" />
<text  x="821.55" y="239.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (18 samples, 0.03%)</title><rect x="1103.2" y="373" width="0.3" height="15.0" fill="rgb(211,133,38)" rx="2" ry="2" />
<text  x="1106.21" y="383.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (32 samples, 0.05%)</title><rect x="15.6" y="117" width="0.6" height="15.0" fill="rgb(229,159,27)" rx="2" ry="2" />
<text  x="18.60" y="127.5" ></text>
</g>
<g >
<title>run_timer_softirq (8 samples, 0.01%)</title><rect x="1103.7" y="309" width="0.2" height="15.0" fill="rgb(239,95,11)" rx="2" ry="2" />
<text  x="1106.72" y="319.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (3,803 samples, 5.94%)</title><rect x="685.7" y="277" width="70.1" height="15.0" fill="rgb(245,171,14)" rx="2" ry="2" />
<text  x="688.72" y="287.5" >__pthre..</text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (6 samples, 0.01%)</title><rect x="971.2" y="469" width="0.1" height="15.0" fill="rgb(235,7,15)" rx="2" ry="2" />
<text  x="974.17" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (31 samples, 0.05%)</title><rect x="25.2" y="501" width="0.6" height="15.0" fill="rgb(213,56,31)" rx="2" ry="2" />
<text  x="28.23" y="511.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (984 samples, 1.54%)</title><rect x="1171.9" y="501" width="18.1" height="15.0" fill="rgb(250,105,43)" rx="2" ry="2" />
<text  x="1174.86" y="511.5" ></text>
</g>
<g >
<title>get_typical_interval (7 samples, 0.01%)</title><rect x="1186.4" y="341" width="0.1" height="15.0" fill="rgb(247,104,7)" rx="2" ry="2" />
<text  x="1189.41" y="351.5" ></text>
</g>
<g >
<title>NaClHostDescRead (22,683 samples, 35.44%)</title><rect x="118.9" y="437" width="418.2" height="15.0" fill="rgb(218,76,10)" rx="2" ry="2" />
<text  x="121.92" y="447.5" >NaClHostDescRead</text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (699 samples, 1.09%)</title><rect x="643.2" y="325" width="12.9" height="15.0" fill="rgb(216,40,49)" rx="2" ry="2" />
<text  x="646.23" y="335.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (12 samples, 0.02%)</title><rect x="942.5" y="501" width="0.2" height="15.0" fill="rgb(206,87,31)" rx="2" ry="2" />
<text  x="945.45" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (15 samples, 0.02%)</title><rect x="831.0" y="229" width="0.3" height="15.0" fill="rgb(223,106,12)" rx="2" ry="2" />
<text  x="834.01" y="239.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (473 samples, 0.74%)</title><rect x="540.8" y="453" width="8.8" height="15.0" fill="rgb(210,184,9)" rx="2" ry="2" />
<text  x="543.84" y="463.5" ></text>
</g>
<g >
<title>do_exit (54 samples, 0.08%)</title><rect x="972.1" y="453" width="1.0" height="15.0" fill="rgb(224,44,20)" rx="2" ry="2" />
<text  x="975.13" y="463.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="61.9" y="469" width="0.3" height="15.0" fill="rgb(218,67,49)" rx="2" ry="2" />
<text  x="64.86" y="479.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (16 samples, 0.02%)</title><rect x="1168.7" y="437" width="0.3" height="15.0" fill="rgb(219,204,20)" rx="2" ry="2" />
<text  x="1171.69" y="447.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (24 samples, 0.04%)</title><rect x="18.6" y="501" width="0.5" height="15.0" fill="rgb(215,100,25)" rx="2" ry="2" />
<text  x="21.65" y="511.5" ></text>
</g>
<g >
<title>_start (6 samples, 0.01%)</title><rect x="971.3" y="517" width="0.1" height="15.0" fill="rgb(248,184,54)" rx="2" ry="2" />
<text  x="974.30" y="527.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (10 samples, 0.02%)</title><rect x="12.6" y="133" width="0.2" height="15.0" fill="rgb(209,89,13)" rx="2" ry="2" />
<text  x="15.60" y="143.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (16 samples, 0.02%)</title><rect x="15.7" y="53" width="0.3" height="15.0" fill="rgb(246,37,39)" rx="2" ry="2" />
<text  x="18.70" y="63.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (353 samples, 0.55%)</title><rect x="886.1" y="437" width="6.5" height="15.0" fill="rgb(222,19,36)" rx="2" ry="2" />
<text  x="889.06" y="447.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (827 samples, 1.29%)</title><rect x="1172.0" y="389" width="15.3" height="15.0" fill="rgb(245,173,26)" rx="2" ry="2" />
<text  x="1175.03" y="399.5" ></text>
</g>
<g >
<title>std::panicking::panicking (16 samples, 0.02%)</title><rect x="776.6" y="277" width="0.3" height="15.0" fill="rgb(226,156,5)" rx="2" ry="2" />
<text  x="779.65" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (20 samples, 0.03%)</title><rect x="817.8" y="229" width="0.4" height="15.0" fill="rgb(237,125,39)" rx="2" ry="2" />
<text  x="820.81" y="239.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (122 samples, 0.19%)</title><rect x="774.7" y="325" width="2.2" height="15.0" fill="rgb(246,186,13)" rx="2" ry="2" />
<text  x="777.69" y="335.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (22 samples, 0.03%)</title><rect x="938.9" y="325" width="0.4" height="15.0" fill="rgb(206,198,24)" rx="2" ry="2" />
<text  x="941.91" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (71 samples, 0.11%)</title><rect x="871.5" y="309" width="1.3" height="15.0" fill="rgb(229,196,38)" rx="2" ry="2" />
<text  x="874.51" y="319.5" ></text>
</g>
<g >
<title>ksys_write (8 samples, 0.01%)</title><rect x="17.0" y="469" width="0.2" height="15.0" fill="rgb(228,85,0)" rx="2" ry="2" />
<text  x="20.01" y="479.5" ></text>
</g>
<g >
<title>std::panicking::panicking (12 samples, 0.02%)</title><rect x="667.6" y="293" width="0.2" height="15.0" fill="rgb(221,205,8)" rx="2" ry="2" />
<text  x="670.60" y="303.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (18 samples, 0.03%)</title><rect x="19.9" y="501" width="0.3" height="15.0" fill="rgb(237,147,49)" rx="2" ry="2" />
<text  x="22.86" y="511.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (27 samples, 0.04%)</title><rect x="1188.3" y="309" width="0.5" height="15.0" fill="rgb(215,226,38)" rx="2" ry="2" />
<text  x="1191.30" y="319.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (6 samples, 0.01%)</title><rect x="1096.0" y="453" width="0.1" height="15.0" fill="rgb(231,221,39)" rx="2" ry="2" />
<text  x="1099.00" y="463.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (14 samples, 0.02%)</title><rect x="21.2" y="501" width="0.3" height="15.0" fill="rgb(228,189,37)" rx="2" ry="2" />
<text  x="24.23" y="511.5" ></text>
</g>
<g >
<title>cpuidle_enter (762 samples, 1.19%)</title><rect x="1172.2" y="373" width="14.0" height="15.0" fill="rgb(241,91,38)" rx="2" ry="2" />
<text  x="1175.15" y="383.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (18 samples, 0.03%)</title><rect x="15.7" y="69" width="0.3" height="15.0" fill="rgb(214,17,0)" rx="2" ry="2" />
<text  x="18.66" y="79.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (7 samples, 0.01%)</title><rect x="1103.1" y="357" width="0.1" height="15.0" fill="rgb(243,73,52)" rx="2" ry="2" />
<text  x="1106.08" y="367.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (609 samples, 0.95%)</title><rect x="656.1" y="341" width="11.2" height="15.0" fill="rgb(230,147,49)" rx="2" ry="2" />
<text  x="659.12" y="351.5" ></text>
</g>
<g >
<title>[unknown] (373 samples, 0.58%)</title><rect x="10.1" y="517" width="6.9" height="15.0" fill="rgb(219,118,20)" rx="2" ry="2" />
<text  x="13.11" y="527.5" ></text>
</g>
<g >
<title>menu_update (37 samples, 0.06%)</title><rect x="1146.0" y="405" width="0.7" height="15.0" fill="rgb(250,100,30)" rx="2" ry="2" />
<text  x="1149.01" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (120 samples, 0.19%)</title><rect x="870.6" y="341" width="2.2" height="15.0" fill="rgb(223,15,1)" rx="2" ry="2" />
<text  x="873.61" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (410 samples, 0.64%)</title><rect x="816.2" y="277" width="7.6" height="15.0" fill="rgb(218,37,28)" rx="2" ry="2" />
<text  x="819.23" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (75 samples, 0.12%)</title><rect x="830.5" y="277" width="1.4" height="15.0" fill="rgb(213,108,19)" rx="2" ry="2" />
<text  x="833.50" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14 samples, 0.02%)</title><rect x="41.0" y="469" width="0.2" height="15.0" fill="rgb(231,193,31)" rx="2" ry="2" />
<text  x="43.97" y="479.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (286 samples, 0.45%)</title><rect x="143.2" y="325" width="5.3" height="15.0" fill="rgb(245,73,42)" rx="2" ry="2" />
<text  x="146.19" y="335.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (168 samples, 0.26%)</title><rect x="140.1" y="309" width="3.1" height="15.0" fill="rgb(244,144,33)" rx="2" ry="2" />
<text  x="143.10" y="319.5" ></text>
</g>
<g >
<title>std::thread::panicking (13 samples, 0.02%)</title><rect x="854.4" y="309" width="0.3" height="15.0" fill="rgb(207,66,50)" rx="2" ry="2" />
<text  x="857.42" y="319.5" ></text>
</g>
<g >
<title>std::panicking::panicking (12 samples, 0.02%)</title><rect x="684.0" y="277" width="0.3" height="15.0" fill="rgb(225,27,36)" rx="2" ry="2" />
<text  x="687.05" y="287.5" ></text>
</g>
<g >
<title>asm_common_interrupt (10 samples, 0.02%)</title><rect x="1103.0" y="405" width="0.2" height="15.0" fill="rgb(213,189,11)" rx="2" ry="2" />
<text  x="1106.02" y="415.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (12 samples, 0.02%)</title><rect x="774.5" y="293" width="0.2" height="15.0" fill="rgb(245,51,48)" rx="2" ry="2" />
<text  x="777.47" y="303.5" ></text>
</g>
<g >
<title>post_alloc_hook (19 samples, 0.03%)</title><rect x="1100.0" y="357" width="0.3" height="15.0" fill="rgb(249,73,12)" rx="2" ry="2" />
<text  x="1102.98" y="367.5" ></text>
</g>
<g >
<title>__GI___poll (18 samples, 0.03%)</title><rect x="11.6" y="453" width="0.3" height="15.0" fill="rgb(213,77,42)" rx="2" ry="2" />
<text  x="14.60" y="463.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="62.2" y="469" width="0.1" height="15.0" fill="rgb(242,31,34)" rx="2" ry="2" />
<text  x="65.15" y="479.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (20 samples, 0.03%)</title><rect x="863.6" y="261" width="0.3" height="15.0" fill="rgb(206,95,49)" rx="2" ry="2" />
<text  x="866.57" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (6 samples, 0.01%)</title><rect x="1103.4" y="293" width="0.1" height="15.0" fill="rgb(250,73,30)" rx="2" ry="2" />
<text  x="1106.41" y="303.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (15 samples, 0.02%)</title><rect x="62.4" y="485" width="0.3" height="15.0" fill="rgb(235,161,11)" rx="2" ry="2" />
<text  x="65.43" y="495.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (594 samples, 0.93%)</title><rect x="656.4" y="325" width="10.9" height="15.0" fill="rgb(233,152,13)" rx="2" ry="2" />
<text  x="659.39" y="335.5" ></text>
</g>
<g >
<title>move_to_new_page (109 samples, 0.17%)</title><rect x="1097.1" y="389" width="2.1" height="15.0" fill="rgb(206,161,44)" rx="2" ry="2" />
<text  x="1100.14" y="399.5" ></text>
</g>
<g >
<title>kick_ilb (32 samples, 0.05%)</title><rect x="1188.8" y="309" width="0.6" height="15.0" fill="rgb(249,186,7)" rx="2" ry="2" />
<text  x="1191.84" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (101 samples, 0.16%)</title><rect x="938.1" y="437" width="1.9" height="15.0" fill="rgb(231,18,27)" rx="2" ry="2" />
<text  x="941.10" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,221 samples, 3.47%)</title><rect x="1102.6" y="437" width="41.0" height="15.0" fill="rgb(228,147,35)" rx="2" ry="2" />
<text  x="1105.62" y="447.5" >cpu..</text>
</g>
<g >
<title>do_sys_poll (8 samples, 0.01%)</title><rect x="1096.0" y="469" width="0.1" height="15.0" fill="rgb(226,214,27)" rx="2" ry="2" />
<text  x="1098.98" y="479.5" ></text>
</g>
<g >
<title>__buffer_migrate_page.part.0 (9 samples, 0.01%)</title><rect x="1099.0" y="357" width="0.1" height="15.0" fill="rgb(209,211,41)" rx="2" ry="2" />
<text  x="1101.97" y="367.5" ></text>
</g>
<g >
<title>lind_write (17,080 samples, 26.68%)</title><rect x="570.0" y="421" width="314.9" height="15.0" fill="rgb(239,205,50)" rx="2" ry="2" />
<text  x="573.02" y="431.5" >lind_write</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (17 samples, 0.03%)</title><rect x="872.5" y="245" width="0.3" height="15.0" fill="rgb(224,195,15)" rx="2" ry="2" />
<text  x="875.51" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (80 samples, 0.12%)</title><rect x="10.1" y="373" width="1.5" height="15.0" fill="rgb(220,133,53)" rx="2" ry="2" />
<text  x="13.11" y="383.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (73 samples, 0.11%)</title><rect x="13.7" y="133" width="1.3" height="15.0" fill="rgb(231,53,21)" rx="2" ry="2" />
<text  x="16.69" y="143.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (580 samples, 0.91%)</title><rect x="862.1" y="389" width="10.7" height="15.0" fill="rgb(235,154,2)" rx="2" ry="2" />
<text  x="865.13" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (362 samples, 0.57%)</title><rect x="660.7" y="277" width="6.6" height="15.0" fill="rgb(216,23,14)" rx="2" ry="2" />
<text  x="663.67" y="287.5" ></text>
</g>
<g >
<title>__do_sys_clone (6 samples, 0.01%)</title><rect x="1095.5" y="469" width="0.1" height="15.0" fill="rgb(248,116,21)" rx="2" ry="2" />
<text  x="1098.54" y="479.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (8 samples, 0.01%)</title><rect x="945.3" y="469" width="0.2" height="15.0" fill="rgb(214,117,11)" rx="2" ry="2" />
<text  x="948.33" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1,131 samples, 1.77%)</title><rect x="605.8" y="341" width="20.8" height="15.0" fill="rgb(242,163,14)" rx="2" ry="2" />
<text  x="608.75" y="351.5" ></text>
</g>
<g >
<title>poll_idle (110 samples, 0.17%)</title><rect x="1183.6" y="341" width="2.0" height="15.0" fill="rgb(216,140,47)" rx="2" ry="2" />
<text  x="1186.58" y="351.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (17 samples, 0.03%)</title><rect x="538.9" y="469" width="0.3" height="15.0" fill="rgb(238,35,7)" rx="2" ry="2" />
<text  x="541.91" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (171 samples, 0.27%)</title><rect x="828.7" y="293" width="3.2" height="15.0" fill="rgb(229,141,40)" rx="2" ry="2" />
<text  x="831.73" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (9 samples, 0.01%)</title><rect x="864.2" y="261" width="0.2" height="15.0" fill="rgb(241,219,3)" rx="2" ry="2" />
<text  x="867.19" y="271.5" ></text>
</g>
<g >
<title>pick_next_task_fair (76 samples, 0.12%)</title><rect x="1188.0" y="357" width="1.4" height="15.0" fill="rgb(225,218,6)" rx="2" ry="2" />
<text  x="1191.05" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (332 samples, 0.52%)</title><rect x="643.2" y="293" width="6.2" height="15.0" fill="rgb(234,35,0)" rx="2" ry="2" />
<text  x="646.23" y="303.5" ></text>
</g>
<g >
<title>dispatcher (16,602 samples, 25.94%)</title><rect x="578.6" y="405" width="306.1" height="15.0" fill="rgb(216,96,13)" rx="2" ry="2" />
<text  x="581.63" y="415.5" >dispatcher</text>
</g>
<g >
<title>__hrtimer_run_queues (18 samples, 0.03%)</title><rect x="1103.2" y="325" width="0.3" height="15.0" fill="rgb(229,32,4)" rx="2" ry="2" />
<text  x="1106.21" y="335.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (17 samples, 0.03%)</title><rect x="939.5" y="389" width="0.3" height="15.0" fill="rgb(243,192,25)" rx="2" ry="2" />
<text  x="942.47" y="399.5" ></text>
</g>
<g >
<title>sched_clock_cpu (25 samples, 0.04%)</title><rect x="1140.9" y="389" width="0.5" height="15.0" fill="rgb(248,173,19)" rx="2" ry="2" />
<text  x="1143.91" y="399.5" ></text>
</g>
<g >
<title>stop_this_handle (6 samples, 0.01%)</title><rect x="15.1" y="101" width="0.1" height="15.0" fill="rgb(231,140,54)" rx="2" ry="2" />
<text  x="18.11" y="111.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (19 samples, 0.03%)</title><rect x="1141.5" y="389" width="0.4" height="15.0" fill="rgb(215,56,37)" rx="2" ry="2" />
<text  x="1144.53" y="399.5" ></text>
</g>
<g >
<title>kthread (224 samples, 0.35%)</title><rect x="1096.4" y="501" width="4.2" height="15.0" fill="rgb(206,165,44)" rx="2" ry="2" />
<text  x="1099.44" y="511.5" ></text>
</g>
<g >
<title>record__mmap_read_all (273 samples, 0.43%)</title><rect x="12.0" y="469" width="5.0" height="15.0" fill="rgb(242,54,20)" rx="2" ry="2" />
<text  x="14.95" y="479.5" ></text>
</g>
<g >
<title>core::cmp::min (168 samples, 0.26%)</title><rect x="140.1" y="341" width="3.1" height="15.0" fill="rgb(238,87,28)" rx="2" ry="2" />
<text  x="143.10" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (71 samples, 0.11%)</title><rect x="871.5" y="293" width="1.3" height="15.0" fill="rgb(205,3,18)" rx="2" ry="2" />
<text  x="874.51" y="303.5" ></text>
</g>
<g >
<title>isolate_freepages_block (26 samples, 0.04%)</title><rect x="1099.5" y="373" width="0.4" height="15.0" fill="rgb(251,152,17)" rx="2" ry="2" />
<text  x="1102.46" y="383.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (77 samples, 0.12%)</title><rect x="568.6" y="421" width="1.4" height="15.0" fill="rgb(232,164,48)" rx="2" ry="2" />
<text  x="571.60" y="431.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (67 samples, 0.10%)</title><rect x="1170.6" y="469" width="1.2" height="15.0" fill="rgb(246,49,24)" rx="2" ry="2" />
<text  x="1173.55" y="479.5" ></text>
</g>
<g >
<title>file_update_time (9 samples, 0.01%)</title><rect x="12.1" y="149" width="0.2" height="15.0" fill="rgb(233,27,16)" rx="2" ry="2" />
<text  x="15.14" y="159.5" ></text>
</g>
<g >
<title>generic_perform_write (253 samples, 0.40%)</title><rect x="12.3" y="165" width="4.7" height="15.0" fill="rgb(239,8,23)" rx="2" ry="2" />
<text  x="15.30" y="175.5" ></text>
</g>
<g >
<title>ttwu_do_activate (6 samples, 0.01%)</title><rect x="1103.2" y="245" width="0.1" height="15.0" fill="rgb(210,29,53)" rx="2" ry="2" />
<text  x="1106.21" y="255.5" ></text>
</g>
<g >
<title>native_sched_clock (23 samples, 0.04%)</title><rect x="1140.9" y="373" width="0.4" height="15.0" fill="rgb(236,190,42)" rx="2" ry="2" />
<text  x="1143.93" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (55 samples, 0.09%)</title><rect x="972.1" y="517" width="1.0" height="15.0" fill="rgb(254,8,49)" rx="2" ry="2" />
<text  x="975.11" y="527.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (411 samples, 0.64%)</title><rect x="767.1" y="325" width="7.6" height="15.0" fill="rgb(218,179,35)" rx="2" ry="2" />
<text  x="770.12" y="335.5" ></text>
</g>
<g >
<title>handle_pte_fault (94 samples, 0.15%)</title><rect x="938.2" y="421" width="1.8" height="15.0" fill="rgb(235,118,52)" rx="2" ry="2" />
<text  x="941.23" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (882 samples, 1.38%)</title><rect x="627.0" y="325" width="16.2" height="15.0" fill="rgb(207,157,17)" rx="2" ry="2" />
<text  x="629.97" y="335.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (10 samples, 0.02%)</title><rect x="566.4" y="437" width="0.2" height="15.0" fill="rgb(250,9,33)" rx="2" ry="2" />
<text  x="569.43" y="447.5" ></text>
</g>
<g >
<title>__evlist__enable (80 samples, 0.12%)</title><rect x="10.1" y="469" width="1.5" height="15.0" fill="rgb(237,222,50)" rx="2" ry="2" />
<text  x="13.11" y="479.5" ></text>
</g>
<g >
<title>file_modified (9 samples, 0.01%)</title><rect x="12.1" y="165" width="0.2" height="15.0" fill="rgb(232,204,22)" rx="2" ry="2" />
<text  x="15.14" y="175.5" ></text>
</g>
<g >
<title>vfs_write (8 samples, 0.01%)</title><rect x="17.0" y="453" width="0.2" height="15.0" fill="rgb(242,34,20)" rx="2" ry="2" />
<text  x="20.01" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (266 samples, 0.42%)</title><rect x="12.1" y="341" width="4.9" height="15.0" fill="rgb(241,81,15)" rx="2" ry="2" />
<text  x="15.06" y="351.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (6 samples, 0.01%)</title><rect x="1170.3" y="421" width="0.1" height="15.0" fill="rgb(227,128,35)" rx="2" ry="2" />
<text  x="1173.26" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (58 samples, 0.09%)</title><rect x="21.5" y="501" width="1.1" height="15.0" fill="rgb(206,105,18)" rx="2" ry="2" />
<text  x="24.49" y="511.5" ></text>
</g>
<g >
<title>HandleStackContext (757 samples, 1.18%)</title><rect x="74.9" y="485" width="14.0" height="15.0" fill="rgb(250,126,45)" rx="2" ry="2" />
<text  x="77.95" y="495.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (9 samples, 0.01%)</title><rect x="1141.4" y="405" width="0.1" height="15.0" fill="rgb(253,16,21)" rx="2" ry="2" />
<text  x="1144.37" y="415.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (158 samples, 0.25%)</title><rect x="85.5" y="469" width="2.9" height="15.0" fill="rgb(214,8,0)" rx="2" ry="2" />
<text  x="88.47" y="479.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (135 samples, 0.21%)</title><rect x="12.6" y="149" width="2.5" height="15.0" fill="rgb(236,169,24)" rx="2" ry="2" />
<text  x="15.56" y="159.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (40 samples, 0.06%)</title><rect x="41.2" y="501" width="0.8" height="15.0" fill="rgb(228,85,30)" rx="2" ry="2" />
<text  x="44.23" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (133 samples, 0.21%)</title><rect x="864.4" y="277" width="2.4" height="15.0" fill="rgb(211,7,10)" rx="2" ry="2" />
<text  x="867.36" y="287.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (220 samples, 0.34%)</title><rect x="862.8" y="309" width="4.0" height="15.0" fill="rgb(232,78,48)" rx="2" ry="2" />
<text  x="865.76" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (72 samples, 0.11%)</title><rect x="773.1" y="277" width="1.4" height="15.0" fill="rgb(205,219,1)" rx="2" ry="2" />
<text  x="776.14" y="287.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.09%)</title><rect x="829.0" y="277" width="1.1" height="15.0" fill="rgb(211,148,52)" rx="2" ry="2" />
<text  x="832.00" y="287.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="40.4" y="469" width="0.2" height="15.0" fill="rgb(231,130,4)" rx="2" ry="2" />
<text  x="43.40" y="479.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (2,207 samples, 3.45%)</title><rect x="774.7" y="341" width="40.7" height="15.0" fill="rgb(221,66,32)" rx="2" ry="2" />
<text  x="777.69" y="351.5" >std..</text>
</g>
<g >
<title>cpumask_next_and (7 samples, 0.01%)</title><rect x="1163.4" y="357" width="0.1" height="15.0" fill="rgb(208,225,17)" rx="2" ry="2" />
<text  x="1166.42" y="367.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (68 samples, 0.11%)</title><rect x="88.9" y="485" width="1.3" height="15.0" fill="rgb(214,221,13)" rx="2" ry="2" />
<text  x="91.90" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (49 samples, 0.08%)</title><rect x="1168.1" y="453" width="0.9" height="15.0" fill="rgb(251,3,25)" rx="2" ry="2" />
<text  x="1171.08" y="463.5" ></text>
</g>
<g >
<title>free_unref_page_commit (20 samples, 0.03%)</title><rect x="972.7" y="245" width="0.4" height="15.0" fill="rgb(210,37,13)" rx="2" ry="2" />
<text  x="975.70" y="255.5" ></text>
</g>
<g >
<title>ovl_write_iter (264 samples, 0.41%)</title><rect x="12.1" y="261" width="4.9" height="15.0" fill="rgb(216,110,33)" rx="2" ry="2" />
<text  x="15.10" y="271.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (32 samples, 0.05%)</title><rect x="865.2" y="261" width="0.5" height="15.0" fill="rgb(245,6,40)" rx="2" ry="2" />
<text  x="868.15" y="271.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (18 samples, 0.03%)</title><rect x="65.2" y="501" width="0.3" height="15.0" fill="rgb(244,141,29)" rx="2" ry="2" />
<text  x="68.18" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (17 samples, 0.03%)</title><rect x="832.4" y="293" width="0.3" height="15.0" fill="rgb(219,98,35)" rx="2" ry="2" />
<text  x="835.38" y="303.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.01%)</title><rect x="1095.8" y="469" width="0.1" height="15.0" fill="rgb(241,79,52)" rx="2" ry="2" />
<text  x="1098.78" y="479.5" ></text>
</g>
<g >
<title>std::thread::panicking (16 samples, 0.02%)</title><rect x="776.6" y="293" width="0.3" height="15.0" fill="rgb(211,8,17)" rx="2" ry="2" />
<text  x="779.65" y="303.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (22,683 samples, 35.44%)</title><rect x="118.9" y="373" width="418.2" height="15.0" fill="rgb(253,86,11)" rx="2" ry="2" />
<text  x="121.92" y="383.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix..</text>
</g>
<g >
<title>vfs_iter_write (8 samples, 0.01%)</title><rect x="17.0" y="405" width="0.2" height="15.0" fill="rgb(216,10,38)" rx="2" ry="2" />
<text  x="20.01" y="415.5" ></text>
</g>
<g >
<title>__set_page_dirty (10 samples, 0.02%)</title><rect x="15.4" y="85" width="0.1" height="15.0" fill="rgb(241,67,8)" rx="2" ry="2" />
<text  x="18.36" y="95.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (15 samples, 0.02%)</title><rect x="62.4" y="453" width="0.3" height="15.0" fill="rgb(226,183,52)" rx="2" ry="2" />
<text  x="65.43" y="463.5" ></text>
</g>
<g >
<title>kcompactd (215 samples, 0.34%)</title><rect x="1096.4" y="485" width="4.0" height="15.0" fill="rgb(239,150,43)" rx="2" ry="2" />
<text  x="1099.44" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (266 samples, 0.42%)</title><rect x="12.1" y="357" width="4.9" height="15.0" fill="rgb(222,197,14)" rx="2" ry="2" />
<text  x="15.06" y="367.5" ></text>
</g>
<g >
<title>migrate_page_copy (22 samples, 0.03%)</title><rect x="1098.4" y="341" width="0.4" height="15.0" fill="rgb(215,207,7)" rx="2" ry="2" />
<text  x="1101.40" y="351.5" ></text>
</g>
<g >
<title>NaClValidateCode (36 samples, 0.06%)</title><rect x="118.1" y="437" width="0.6" height="15.0" fill="rgb(229,113,0)" rx="2" ry="2" />
<text  x="121.07" y="447.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (72 samples, 0.11%)</title><rect x="1188.1" y="325" width="1.3" height="15.0" fill="rgb(220,130,5)" rx="2" ry="2" />
<text  x="1191.12" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (61 samples, 0.10%)</title><rect x="943.3" y="501" width="1.2" height="15.0" fill="rgb(224,153,4)" rx="2" ry="2" />
<text  x="946.34" y="511.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.02%)</title><rect x="756.1" y="341" width="0.2" height="15.0" fill="rgb(238,110,40)" rx="2" ry="2" />
<text  x="759.09" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (6 samples, 0.01%)</title><rect x="1095.4" y="469" width="0.1" height="15.0" fill="rgb(254,207,11)" rx="2" ry="2" />
<text  x="1098.35" y="479.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,894 samples, 6.08%)</title><rect x="684.0" y="325" width="71.8" height="15.0" fill="rgb(248,101,5)" rx="2" ry="2" />
<text  x="687.05" y="335.5" >&lt;std::sy..</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (24 samples, 0.04%)</title><rect x="872.1" y="245" width="0.4" height="15.0" fill="rgb(245,184,37)" rx="2" ry="2" />
<text  x="875.07" y="255.5" ></text>
</g>
<g >
<title>copy_process (6 samples, 0.01%)</title><rect x="1095.5" y="437" width="0.1" height="15.0" fill="rgb(219,107,45)" rx="2" ry="2" />
<text  x="1098.54" y="447.5" ></text>
</g>
</g>
</svg>
