<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>hrtimer_start_range_ns (1 samples, 0.49%)</title><rect x="974.9" y="389" width="5.8" height="15.0" fill="rgb(208,88,2)" rx="2" ry="2" />
<text  x="977.93" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.49%)</title><rect x="974.9" y="373" width="5.8" height="15.0" fill="rgb(252,118,51)" rx="2" ry="2" />
<text  x="977.93" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 1.97%)</title><rect x="963.3" y="469" width="23.3" height="15.0" fill="rgb(230,186,7)" rx="2" ry="2" />
<text  x="966.30" y="479.5" >d..</text>
</g>
<g >
<title>vfs_iter_read (1 samples, 0.49%)</title><rect x="480.8" y="181" width="5.9" height="15.0" fill="rgb(223,100,10)" rx="2" ry="2" />
<text  x="483.84" y="191.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.49%)</title><rect x="980.7" y="373" width="5.9" height="15.0" fill="rgb(207,70,22)" rx="2" ry="2" />
<text  x="983.74" y="383.5" ></text>
</g>
<g >
<title>do_iter_read (1 samples, 0.49%)</title><rect x="480.8" y="165" width="5.9" height="15.0" fill="rgb(221,102,42)" rx="2" ry="2" />
<text  x="483.84" y="175.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.49%)</title><rect x="451.8" y="37" width="5.8" height="15.0" fill="rgb(224,65,30)" rx="2" ry="2" />
<text  x="454.77" y="47.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.99%)</title><rect x="434.3" y="309" width="11.7" height="15.0" fill="rgb(234,23,1)" rx="2" ry="2" />
<text  x="437.33" y="319.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.49%)</title><rect x="382.0" y="229" width="5.8" height="15.0" fill="rgb(222,147,10)" rx="2" ry="2" />
<text  x="385.02" y="239.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.49%)</title><rect x="480.8" y="117" width="5.9" height="15.0" fill="rgb(217,80,16)" rx="2" ry="2" />
<text  x="483.84" y="127.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.49%)</title><rect x="1172.6" y="213" width="5.8" height="15.0" fill="rgb(251,148,46)" rx="2" ry="2" />
<text  x="1175.56" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (6 samples, 2.96%)</title><rect x="777.3" y="453" width="34.9" height="15.0" fill="rgb(208,48,36)" rx="2" ry="2" />
<text  x="780.29" y="463.5" >ex..</text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.49%)</title><rect x="1155.1" y="357" width="5.8" height="15.0" fill="rgb(247,70,22)" rx="2" ry="2" />
<text  x="1158.12" y="367.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.99%)</title><rect x="446.0" y="149" width="11.6" height="15.0" fill="rgb(207,8,45)" rx="2" ry="2" />
<text  x="448.96" y="159.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (31 samples, 15.27%)</title><rect x="550.6" y="453" width="180.2" height="15.0" fill="rgb(222,54,39)" rx="2" ry="2" />
<text  x="553.59" y="463.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>__x64_sys_ioctl (1 samples, 0.49%)</title><rect x="387.8" y="453" width="5.8" height="15.0" fill="rgb(238,31,44)" rx="2" ry="2" />
<text  x="390.83" y="463.5" ></text>
</g>
<g >
<title>NaClSysMunmap (2 samples, 0.99%)</title><rect x="446.0" y="437" width="11.6" height="15.0" fill="rgb(246,173,38)" rx="2" ry="2" />
<text  x="448.96" y="447.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (1 samples, 0.49%)</title><rect x="823.8" y="453" width="5.8" height="15.0" fill="rgb(248,144,33)" rx="2" ry="2" />
<text  x="826.79" y="463.5" ></text>
</g>
<g >
<title>_perf_event_enable (1 samples, 0.49%)</title><rect x="387.8" y="389" width="5.8" height="15.0" fill="rgb(213,219,17)" rx="2" ry="2" />
<text  x="390.83" y="399.5" ></text>
</g>
<g >
<title>read (1 samples, 0.49%)</title><rect x="480.8" y="309" width="5.9" height="15.0" fill="rgb(247,8,5)" rx="2" ry="2" />
<text  x="483.84" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.49%)</title><rect x="823.8" y="421" width="5.8" height="15.0" fill="rgb(227,28,16)" rx="2" ry="2" />
<text  x="826.79" y="431.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (11 samples, 5.42%)</title><rect x="568.0" y="293" width="64.0" height="15.0" fill="rgb(250,148,27)" rx="2" ry="2" />
<text  x="571.03" y="303.5" >core::i..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.49%)</title><rect x="469.2" y="309" width="5.8" height="15.0" fill="rgb(252,124,8)" rx="2" ry="2" />
<text  x="472.21" y="319.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.49%)</title><rect x="382.0" y="245" width="5.8" height="15.0" fill="rgb(249,2,8)" rx="2" ry="2" />
<text  x="385.02" y="255.5" ></text>
</g>
<g >
<title>__put_user_nocheck_4 (1 samples, 0.49%)</title><rect x="10.0" y="293" width="5.8" height="15.0" fill="rgb(238,102,27)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.49%)</title><rect x="800.5" y="357" width="5.9" height="15.0" fill="rgb(215,102,5)" rx="2" ry="2" />
<text  x="803.54" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.49%)</title><rect x="823.8" y="389" width="5.8" height="15.0" fill="rgb(230,161,27)" rx="2" ry="2" />
<text  x="826.79" y="399.5" ></text>
</g>
<g >
<title>all (203 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(215,210,28)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>event_function (1 samples, 0.49%)</title><rect x="387.8" y="309" width="5.8" height="15.0" fill="rgb(253,107,42)" rx="2" ry="2" />
<text  x="390.83" y="319.5" ></text>
</g>
<g >
<title>osq_lock (6 samples, 2.96%)</title><rect x="399.5" y="213" width="34.8" height="15.0" fill="rgb(238,152,45)" rx="2" ry="2" />
<text  x="402.46" y="223.5" >os..</text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.49%)</title><rect x="480.8" y="133" width="5.9" height="15.0" fill="rgb(208,95,4)" rx="2" ry="2" />
<text  x="483.84" y="143.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (2 samples, 0.99%)</title><rect x="446.0" y="357" width="11.6" height="15.0" fill="rgb(228,177,46)" rx="2" ry="2" />
<text  x="448.96" y="367.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (63 samples, 31.03%)</title><rect x="15.8" y="421" width="366.2" height="15.0" fill="rgb(253,212,26)" rx="2" ry="2" />
<text  x="18.81" y="431.5" >perf_evsel__run_ioctl</text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.49%)</title><rect x="382.0" y="197" width="5.8" height="15.0" fill="rgb(219,61,0)" rx="2" ry="2" />
<text  x="385.02" y="207.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (1 samples, 0.49%)</title><rect x="469.2" y="293" width="5.8" height="15.0" fill="rgb(232,147,9)" rx="2" ry="2" />
<text  x="472.21" y="303.5" ></text>
</g>
<g >
<title>_Fork (1 samples, 0.49%)</title><rect x="10.0" y="325" width="5.8" height="15.0" fill="rgb(207,199,29)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>dispatcher (15 samples, 7.39%)</title><rect x="463.4" y="405" width="87.2" height="15.0" fill="rgb(208,185,35)" rx="2" ry="2" />
<text  x="466.40" y="415.5" >dispatcher</text>
</g>
<g >
<title>NaClSysExecve (6 samples, 2.96%)</title><rect x="399.5" y="437" width="34.8" height="15.0" fill="rgb(247,59,20)" rx="2" ry="2" />
<text  x="402.46" y="447.5" >Na..</text>
</g>
<g >
<title>rest_init (4 samples, 1.97%)</title><rect x="1166.7" y="405" width="23.3" height="15.0" fill="rgb(210,121,27)" rx="2" ry="2" />
<text  x="1169.75" y="415.5" >r..</text>
</g>
<g >
<title>std::sys::unix::fs::File::read (2 samples, 0.99%)</title><rect x="475.0" y="341" width="11.7" height="15.0" fill="rgb(207,171,20)" rx="2" ry="2" />
<text  x="478.02" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.49%)</title><rect x="480.8" y="277" width="5.9" height="15.0" fill="rgb(244,42,10)" rx="2" ry="2" />
<text  x="483.84" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.49%)</title><rect x="10.0" y="453" width="5.8" height="15.0" fill="rgb(219,175,1)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>down_write_killable (2 samples, 0.99%)</title><rect x="434.3" y="277" width="11.7" height="15.0" fill="rgb(225,153,25)" rx="2" ry="2" />
<text  x="437.33" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.49%)</title><rect x="382.0" y="341" width="5.8" height="15.0" fill="rgb(232,0,18)" rx="2" ry="2" />
<text  x="385.02" y="351.5" ></text>
</g>
<g >
<title>make_child (1 samples, 0.49%)</title><rect x="10.0" y="357" width="5.8" height="15.0" fill="rgb(244,181,52)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>mmap_region (2 samples, 0.99%)</title><rect x="446.0" y="213" width="11.6" height="15.0" fill="rgb(241,198,38)" rx="2" ry="2" />
<text  x="448.96" y="223.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.49%)</title><rect x="382.0" y="165" width="5.8" height="15.0" fill="rgb(207,105,42)" rx="2" ry="2" />
<text  x="385.02" y="175.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.49%)</title><rect x="777.3" y="309" width="5.8" height="15.0" fill="rgb(251,211,8)" rx="2" ry="2" />
<text  x="780.29" y="319.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.49%)</title><rect x="800.5" y="341" width="5.9" height="15.0" fill="rgb(254,4,0)" rx="2" ry="2" />
<text  x="803.54" y="351.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 31.03%)</title><rect x="15.8" y="165" width="366.2" height="15.0" fill="rgb(212,47,33)" rx="2" ry="2" />
<text  x="18.81" y="175.5" >x86_pmu_enable</text>
</g>
<g >
<title>__libc_fork (1 samples, 0.49%)</title><rect x="10.0" y="341" width="5.8" height="15.0" fill="rgb(232,205,39)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>record__pushfn (1 samples, 0.49%)</title><rect x="382.0" y="405" width="5.8" height="15.0" fill="rgb(249,149,52)" rx="2" ry="2" />
<text  x="385.02" y="415.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.49%)</title><rect x="457.6" y="421" width="5.8" height="15.0" fill="rgb(216,217,47)" rx="2" ry="2" />
<text  x="460.59" y="431.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.49%)</title><rect x="10.0" y="309" width="5.8" height="15.0" fill="rgb(227,61,21)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.99%)</title><rect x="777.3" y="341" width="11.6" height="15.0" fill="rgb(251,183,44)" rx="2" ry="2" />
<text  x="780.29" y="351.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.49%)</title><rect x="480.8" y="213" width="5.9" height="15.0" fill="rgb(216,33,6)" rx="2" ry="2" />
<text  x="483.84" y="223.5" ></text>
</g>
<g >
<title>__vm_munmap (6 samples, 2.96%)</title><rect x="399.5" y="277" width="34.8" height="15.0" fill="rgb(206,77,21)" rx="2" ry="2" />
<text  x="402.46" y="287.5" >__..</text>
</g>
<g >
<title>NaClSysExit (2 samples, 0.99%)</title><rect x="434.3" y="437" width="11.7" height="15.0" fill="rgb(241,18,25)" rx="2" ry="2" />
<text  x="437.33" y="447.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (2 samples, 0.99%)</title><rect x="446.0" y="117" width="11.6" height="15.0" fill="rgb(252,161,29)" rx="2" ry="2" />
<text  x="448.96" y="127.5" ></text>
</g>
<g >
<title>sel_ldr (79 samples, 38.92%)</title><rect x="393.6" y="501" width="459.3" height="15.0" fill="rgb(212,4,38)" rx="2" ry="2" />
<text  x="396.65" y="511.5" >sel_ldr</text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.49%)</title><rect x="10.0" y="245" width="5.8" height="15.0" fill="rgb(211,48,0)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.49%)</title><rect x="823.8" y="437" width="5.8" height="15.0" fill="rgb(219,197,47)" rx="2" ry="2" />
<text  x="826.79" y="447.5" ></text>
</g>
<g >
<title>common_nsleep (3 samples, 1.48%)</title><rect x="969.1" y="437" width="17.5" height="15.0" fill="rgb(242,140,0)" rx="2" ry="2" />
<text  x="972.11" y="447.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (4 samples, 1.97%)</title><rect x="632.0" y="325" width="23.2" height="15.0" fill="rgb(248,58,0)" rx="2" ry="2" />
<text  x="634.97" y="335.5" >r..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (10 samples, 4.93%)</title><rect x="492.5" y="373" width="58.1" height="15.0" fill="rgb(233,51,39)" rx="2" ry="2" />
<text  x="495.46" y="383.5" >rustpo..</text>
</g>
<g >
<title>__perf_event_enable (1 samples, 0.49%)</title><rect x="387.8" y="293" width="5.8" height="15.0" fill="rgb(240,182,30)" rx="2" ry="2" />
<text  x="390.83" y="303.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (2 samples, 0.99%)</title><rect x="475.0" y="357" width="11.7" height="15.0" fill="rgb(238,93,25)" rx="2" ry="2" />
<text  x="478.02" y="367.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (3 samples, 1.48%)</title><rect x="969.1" y="421" width="17.5" height="15.0" fill="rgb(236,7,27)" rx="2" ry="2" />
<text  x="972.11" y="431.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.49%)</title><rect x="446.0" y="101" width="5.8" height="15.0" fill="rgb(230,50,3)" rx="2" ry="2" />
<text  x="448.96" y="111.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.49%)</title><rect x="1172.6" y="197" width="5.8" height="15.0" fill="rgb(221,128,2)" rx="2" ry="2" />
<text  x="1175.56" y="207.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.99%)</title><rect x="777.3" y="357" width="11.6" height="15.0" fill="rgb(212,192,21)" rx="2" ry="2" />
<text  x="780.29" y="367.5" ></text>
</g>
<g >
<title>do_idle (31 samples, 15.27%)</title><rect x="986.6" y="437" width="180.1" height="15.0" fill="rgb(248,115,0)" rx="2" ry="2" />
<text  x="989.55" y="447.5" >do_idle</text>
</g>
<g >
<title>ovl_read_iter (1 samples, 0.49%)</title><rect x="480.8" y="197" width="5.9" height="15.0" fill="rgb(243,52,47)" rx="2" ry="2" />
<text  x="483.84" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.99%)</title><rect x="446.0" y="309" width="11.6" height="15.0" fill="rgb(234,2,4)" rx="2" ry="2" />
<text  x="448.96" y="319.5" ></text>
</g>
<g >
<title>[unknown]  (16 samples, 7.88%)</title><rect x="730.8" y="485" width="93.0" height="15.0" fill="rgb(215,221,40)" rx="2" ry="2" />
<text  x="733.79" y="495.5" >[unknown] </text>
</g>
<g >
<title>rwsem_optimistic_spin (2 samples, 0.99%)</title><rect x="434.3" y="245" width="11.7" height="15.0" fill="rgb(219,6,36)" rx="2" ry="2" />
<text  x="437.33" y="255.5" ></text>
</g>
<g >
<title>record__mmap_read_all (1 samples, 0.49%)</title><rect x="382.0" y="453" width="5.8" height="15.0" fill="rgb(249,22,54)" rx="2" ry="2" />
<text  x="385.02" y="463.5" ></text>
</g>
<g >
<title>NaClSysWrite (31 samples, 15.27%)</title><rect x="550.6" y="437" width="180.2" height="15.0" fill="rgb(227,137,27)" rx="2" ry="2" />
<text  x="553.59" y="447.5" >NaClSysWrite</text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.49%)</title><rect x="794.7" y="341" width="5.8" height="15.0" fill="rgb(240,85,10)" rx="2" ry="2" />
<text  x="797.73" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6 samples, 2.96%)</title><rect x="777.3" y="405" width="34.9" height="15.0" fill="rgb(248,156,51)" rx="2" ry="2" />
<text  x="780.29" y="415.5" >__..</text>
</g>
<g >
<title>perf_event_for_each_child (1 samples, 0.49%)</title><rect x="387.8" y="405" width="5.8" height="15.0" fill="rgb(214,133,23)" rx="2" ry="2" />
<text  x="390.83" y="415.5" ></text>
</g>
<g >
<title>sync_regs (2 samples, 0.99%)</title><rect x="812.2" y="469" width="11.6" height="15.0" fill="rgb(207,98,0)" rx="2" ry="2" />
<text  x="815.17" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (2 samples, 0.99%)</title><rect x="446.0" y="373" width="11.6" height="15.0" fill="rgb(234,126,7)" rx="2" ry="2" />
<text  x="448.96" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (6 samples, 2.96%)</title><rect x="777.3" y="437" width="34.9" height="15.0" fill="rgb(211,188,16)" rx="2" ry="2" />
<text  x="780.29" y="447.5" >do..</text>
</g>
<g >
<title>x86_64_start_kernel (4 samples, 1.97%)</title><rect x="1166.7" y="469" width="23.3" height="15.0" fill="rgb(244,109,50)" rx="2" ry="2" />
<text  x="1169.75" y="479.5" >x..</text>
</g>
<g >
<title>lind_mmap (2 samples, 0.99%)</title><rect x="446.0" y="405" width="11.6" height="15.0" fill="rgb(215,132,15)" rx="2" ry="2" />
<text  x="448.96" y="415.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (12 samples, 5.91%)</title><rect x="562.2" y="309" width="69.8" height="15.0" fill="rgb(209,83,28)" rx="2" ry="2" />
<text  x="565.22" y="319.5" >ringbuf..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.49%)</title><rect x="387.8" y="469" width="5.8" height="15.0" fill="rgb(223,72,10)" rx="2" ry="2" />
<text  x="390.83" y="479.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (4 samples, 1.97%)</title><rect x="1166.7" y="453" width="23.3" height="15.0" fill="rgb(230,100,42)" rx="2" ry="2" />
<text  x="1169.75" y="463.5" >x..</text>
</g>
<g >
<title>cpuidle_enter (3 samples, 1.48%)</title><rect x="1172.6" y="341" width="17.4" height="15.0" fill="rgb(237,179,52)" rx="2" ry="2" />
<text  x="1175.56" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.99%)</title><rect x="434.3" y="325" width="11.7" height="15.0" fill="rgb(221,146,27)" rx="2" ry="2" />
<text  x="437.33" y="335.5" ></text>
</g>
<g >
<title>MunmapInternal (2 samples, 0.99%)</title><rect x="446.0" y="421" width="11.6" height="15.0" fill="rgb(247,76,29)" rx="2" ry="2" />
<text  x="448.96" y="431.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.49%)</title><rect x="469.2" y="341" width="5.8" height="15.0" fill="rgb(227,151,30)" rx="2" ry="2" />
<text  x="472.21" y="351.5" ></text>
</g>
<g >
<title>arch_call_rest_init (4 samples, 1.97%)</title><rect x="1166.7" y="421" width="23.3" height="15.0" fill="rgb(239,5,5)" rx="2" ry="2" />
<text  x="1169.75" y="431.5" >a..</text>
</g>
<g >
<title>start_secondary (31 samples, 15.27%)</title><rect x="986.6" y="469" width="180.1" height="15.0" fill="rgb(234,42,37)" rx="2" ry="2" />
<text  x="989.55" y="479.5" >start_secondary</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (10 samples, 4.93%)</title><rect x="492.5" y="325" width="58.1" height="15.0" fill="rgb(223,228,31)" rx="2" ry="2" />
<text  x="495.46" y="335.5" >ringbu..</text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.49%)</title><rect x="1172.6" y="149" width="5.8" height="15.0" fill="rgb(252,10,21)" rx="2" ry="2" />
<text  x="1175.56" y="159.5" ></text>
</g>
<g >
<title>do_nanosleep (2 samples, 0.99%)</title><rect x="974.9" y="405" width="11.7" height="15.0" fill="rgb(218,60,34)" rx="2" ry="2" />
<text  x="977.93" y="415.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.49%)</title><rect x="382.0" y="133" width="5.8" height="15.0" fill="rgb(251,73,20)" rx="2" ry="2" />
<text  x="385.02" y="143.5" ></text>
</g>
<g >
<title>cpu_startup_entry (31 samples, 15.27%)</title><rect x="986.6" y="453" width="180.1" height="15.0" fill="rgb(254,145,10)" rx="2" ry="2" />
<text  x="989.55" y="463.5" >cpu_startup_entry</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (10 samples, 4.93%)</title><rect x="492.5" y="341" width="58.1" height="15.0" fill="rgb(246,46,32)" rx="2" ry="2" />
<text  x="495.46" y="351.5" >ringbu..</text>
</g>
<g >
<title>__mmap (2 samples, 0.99%)</title><rect x="446.0" y="325" width="11.6" height="15.0" fill="rgb(233,22,3)" rx="2" ry="2" />
<text  x="448.96" y="335.5" ></text>
</g>
<g >
<title>event_function_call (63 samples, 31.03%)</title><rect x="15.8" y="277" width="366.2" height="15.0" fill="rgb(248,108,6)" rx="2" ry="2" />
<text  x="18.81" y="287.5" >event_function_call</text>
</g>
<g >
<title>do_syscall_64 (6 samples, 2.96%)</title><rect x="399.5" y="309" width="34.8" height="15.0" fill="rgb(223,115,5)" rx="2" ry="2" />
<text  x="402.46" y="319.5" >do..</text>
</g>
<g >
<title>do_iter_write (1 samples, 0.49%)</title><rect x="382.0" y="213" width="5.8" height="15.0" fill="rgb(247,128,11)" rx="2" ry="2" />
<text  x="385.02" y="223.5" ></text>
</g>
<g >
<title>__munmap (6 samples, 2.96%)</title><rect x="399.5" y="341" width="34.8" height="15.0" fill="rgb(248,173,47)" rx="2" ry="2" />
<text  x="402.46" y="351.5" >__..</text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.49%)</title><rect x="393.6" y="389" width="5.9" height="15.0" fill="rgb(233,142,8)" rx="2" ry="2" />
<text  x="396.65" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.49%)</title><rect x="469.2" y="261" width="5.8" height="15.0" fill="rgb(221,107,21)" rx="2" ry="2" />
<text  x="472.21" y="271.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (3 samples, 1.48%)</title><rect x="1172.6" y="325" width="17.4" height="15.0" fill="rgb(216,214,31)" rx="2" ry="2" />
<text  x="1175.56" y="335.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (2 samples, 0.99%)</title><rect x="655.2" y="309" width="11.6" height="15.0" fill="rgb(226,21,43)" rx="2" ry="2" />
<text  x="658.22" y="319.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (30 samples, 14.78%)</title><rect x="986.6" y="389" width="174.3" height="15.0" fill="rgb(215,88,27)" rx="2" ry="2" />
<text  x="989.55" y="399.5" >cpuidle_enter_state</text>
</g>
<g >
<title>poll_idle (1 samples, 0.49%)</title><rect x="1184.2" y="309" width="5.8" height="15.0" fill="rgb(209,194,5)" rx="2" ry="2" />
<text  x="1187.19" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (9 samples, 4.43%)</title><rect x="498.3" y="277" width="52.3" height="15.0" fill="rgb(221,67,20)" rx="2" ry="2" />
<text  x="501.28" y="287.5" >[libc..</text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (3 samples, 1.48%)</title><rect x="475.0" y="373" width="17.5" height="15.0" fill="rgb(209,181,18)" rx="2" ry="2" />
<text  x="478.02" y="383.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.49%)</title><rect x="980.7" y="389" width="5.9" height="15.0" fill="rgb(233,102,6)" rx="2" ry="2" />
<text  x="983.74" y="399.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (12 samples, 5.91%)</title><rect x="562.2" y="325" width="69.8" height="15.0" fill="rgb(247,173,18)" rx="2" ry="2" />
<text  x="565.22" y="335.5" >ringbuf..</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (15 samples, 7.39%)</title><rect x="463.4" y="389" width="87.2" height="15.0" fill="rgb(233,13,50)" rx="2" ry="2" />
<text  x="466.40" y="399.5" >rustposix:..</text>
</g>
<g >
<title>dispatcher (2 samples, 0.99%)</title><rect x="446.0" y="389" width="11.6" height="15.0" fill="rgb(211,227,21)" rx="2" ry="2" />
<text  x="448.96" y="399.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.49%)</title><rect x="823.8" y="373" width="5.8" height="15.0" fill="rgb(224,28,40)" rx="2" ry="2" />
<text  x="826.79" y="383.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::libc_mmap (2 samples, 0.99%)</title><rect x="446.0" y="341" width="11.6" height="15.0" fill="rgb(216,155,33)" rx="2" ry="2" />
<text  x="448.96" y="351.5" ></text>
</g>
<g >
<title>handle_pte_fault (6 samples, 2.96%)</title><rect x="777.3" y="389" width="34.9" height="15.0" fill="rgb(218,148,54)" rx="2" ry="2" />
<text  x="780.29" y="399.5" >ha..</text>
</g>
<g >
<title>llseek (1 samples, 0.49%)</title><rect x="486.7" y="325" width="5.8" height="15.0" fill="rgb(216,135,44)" rx="2" ry="2" />
<text  x="489.65" y="335.5" ></text>
</g>
<g >
<title>[sel_ldr] (58 samples, 28.57%)</title><rect x="393.6" y="485" width="337.2" height="15.0" fill="rgb(215,160,30)" rx="2" ry="2" />
<text  x="396.65" y="495.5" >[sel_ldr]</text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.49%)</title><rect x="794.7" y="293" width="5.8" height="15.0" fill="rgb(248,108,35)" rx="2" ry="2" />
<text  x="797.73" y="303.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (2 samples, 0.99%)</title><rect x="434.3" y="261" width="11.7" height="15.0" fill="rgb(214,105,7)" rx="2" ry="2" />
<text  x="437.33" y="271.5" ></text>
</g>
<g >
<title>remote_function (63 samples, 31.03%)</title><rect x="15.8" y="229" width="366.2" height="15.0" fill="rgb(231,117,43)" rx="2" ry="2" />
<text  x="18.81" y="239.5" >remote_function</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.49%)</title><rect x="480.8" y="53" width="5.9" height="15.0" fill="rgb(221,102,20)" rx="2" ry="2" />
<text  x="483.84" y="63.5" ></text>
</g>
<g >
<title>_perf_ioctl (63 samples, 31.03%)</title><rect x="15.8" y="325" width="366.2" height="15.0" fill="rgb(237,107,34)" rx="2" ry="2" />
<text  x="18.81" y="335.5" >_perf_ioctl</text>
</g>
<g >
<title>__cmd_record (64 samples, 31.53%)</title><rect x="15.8" y="469" width="372.0" height="15.0" fill="rgb(243,89,30)" rx="2" ry="2" />
<text  x="18.81" y="479.5" >__cmd_record</text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.49%)</title><rect x="382.0" y="149" width="5.8" height="15.0" fill="rgb(208,72,43)" rx="2" ry="2" />
<text  x="385.02" y="159.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.49%)</title><rect x="492.5" y="293" width="5.8" height="15.0" fill="rgb(233,35,49)" rx="2" ry="2" />
<text  x="495.46" y="303.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::CAGE_TABLE (1 samples, 0.49%)</title><rect x="847.0" y="485" width="5.9" height="15.0" fill="rgb(207,86,50)" rx="2" ry="2" />
<text  x="850.04" y="495.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.49%)</title><rect x="480.8" y="149" width="5.9" height="15.0" fill="rgb(213,7,54)" rx="2" ry="2" />
<text  x="483.84" y="159.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 31.03%)</title><rect x="15.8" y="149" width="366.2" height="15.0" fill="rgb(205,213,0)" rx="2" ry="2" />
<text  x="18.81" y="159.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.49%)</title><rect x="1172.6" y="181" width="5.8" height="15.0" fill="rgb(234,172,36)" rx="2" ry="2" />
<text  x="1175.56" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (9 samples, 4.43%)</title><rect x="579.7" y="277" width="52.3" height="15.0" fill="rgb(228,24,46)" rx="2" ry="2" />
<text  x="582.66" y="287.5" >[libc..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.97%)</title><rect x="963.3" y="485" width="23.3" height="15.0" fill="rgb(241,192,48)" rx="2" ry="2" />
<text  x="966.30" y="495.5" >e..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.49%)</title><rect x="486.7" y="309" width="5.8" height="15.0" fill="rgb(205,23,15)" rx="2" ry="2" />
<text  x="489.65" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.49%)</title><rect x="480.8" y="293" width="5.9" height="15.0" fill="rgb(244,64,30)" rx="2" ry="2" />
<text  x="483.84" y="303.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (63 samples, 31.03%)</title><rect x="15.8" y="309" width="366.2" height="15.0" fill="rgb(249,160,8)" rx="2" ry="2" />
<text  x="18.81" y="319.5" >perf_event_for_each_child</text>
</g>
<g >
<title>execute_command (1 samples, 0.49%)</title><rect x="10.0" y="405" width="5.8" height="15.0" fill="rgb(207,2,12)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>native_write_msr (63 samples, 31.03%)</title><rect x="15.8" y="133" width="366.2" height="15.0" fill="rgb(206,60,46)" rx="2" ry="2" />
<text  x="18.81" y="143.5" >native_write_msr</text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (31 samples, 15.27%)</title><rect x="550.6" y="389" width="180.2" height="15.0" fill="rgb(237,217,2)" rx="2" ry="2" />
<text  x="553.59" y="399.5" >rustposix::safeposix::s..</text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.49%)</title><rect x="10.0" y="469" width="5.8" height="15.0" fill="rgb(218,19,43)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>write (1 samples, 0.49%)</title><rect x="382.0" y="357" width="5.8" height="15.0" fill="rgb(241,87,8)" rx="2" ry="2" />
<text  x="385.02" y="367.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.49%)</title><rect x="382.0" y="373" width="5.8" height="15.0" fill="rgb(251,137,51)" rx="2" ry="2" />
<text  x="385.02" y="383.5" ></text>
</g>
<g >
<title>_start (1 samples, 0.49%)</title><rect x="10.0" y="485" width="5.8" height="15.0" fill="rgb(222,59,24)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.49%)</title><rect x="451.8" y="85" width="5.8" height="15.0" fill="rgb(229,138,31)" rx="2" ry="2" />
<text  x="454.77" y="95.5" ></text>
</g>
<g >
<title>NaClSysExecv (6 samples, 2.96%)</title><rect x="399.5" y="421" width="34.8" height="15.0" fill="rgb(250,88,53)" rx="2" ry="2" />
<text  x="402.46" y="431.5" >Na..</text>
</g>
<g >
<title>dispatcher (31 samples, 15.27%)</title><rect x="550.6" y="405" width="180.2" height="15.0" fill="rgb(217,95,7)" rx="2" ry="2" />
<text  x="553.59" y="415.5" >dispatcher</text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.49%)</title><rect x="382.0" y="181" width="5.8" height="15.0" fill="rgb(254,7,53)" rx="2" ry="2" />
<text  x="385.02" y="191.5" ></text>
</g>
<g >
<title>do_anonymous_page (6 samples, 2.96%)</title><rect x="777.3" y="373" width="34.9" height="15.0" fill="rgb(248,72,1)" rx="2" ry="2" />
<text  x="780.29" y="383.5" >do..</text>
</g>
<g >
<title>handle_mm_fault (6 samples, 2.96%)</title><rect x="777.3" y="421" width="34.9" height="15.0" fill="rgb(243,13,1)" rx="2" ry="2" />
<text  x="780.29" y="431.5" >ha..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.49%)</title><rect x="1172.6" y="261" width="5.8" height="15.0" fill="rgb(245,59,12)" rx="2" ry="2" />
<text  x="1175.56" y="271.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 31.03%)</title><rect x="15.8" y="181" width="366.2" height="15.0" fill="rgb(221,19,22)" rx="2" ry="2" />
<text  x="18.81" y="191.5" >ctx_resched</text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.99%)</title><rect x="434.3" y="293" width="11.7" height="15.0" fill="rgb(237,153,34)" rx="2" ry="2" />
<text  x="437.33" y="303.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (1 samples, 0.49%)</title><rect x="393.6" y="453" width="5.9" height="15.0" fill="rgb(245,227,52)" rx="2" ry="2" />
<text  x="396.65" y="463.5" ></text>
</g>
<g >
<title>kernel_init_free_pages (1 samples, 0.49%)</title><rect x="783.1" y="309" width="5.8" height="15.0" fill="rgb(215,114,37)" rx="2" ry="2" />
<text  x="786.10" y="319.5" ></text>
</g>
<g >
<title>down_write_killable (6 samples, 2.96%)</title><rect x="399.5" y="261" width="34.8" height="15.0" fill="rgb(225,223,48)" rx="2" ry="2" />
<text  x="402.46" y="271.5" >do..</text>
</g>
<g >
<title>__schedule (1 samples, 0.49%)</title><rect x="1160.9" y="405" width="5.8" height="15.0" fill="rgb(208,6,1)" rx="2" ry="2" />
<text  x="1163.94" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_clock_nanosleep (4 samples, 1.97%)</title><rect x="963.3" y="453" width="23.3" height="15.0" fill="rgb(216,74,6)" rx="2" ry="2" />
<text  x="966.30" y="463.5" >_..</text>
</g>
<g >
<title>ctx_resched (1 samples, 0.49%)</title><rect x="387.8" y="277" width="5.8" height="15.0" fill="rgb(231,9,0)" rx="2" ry="2" />
<text  x="390.83" y="287.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.49%)</title><rect x="480.8" y="85" width="5.9" height="15.0" fill="rgb(253,124,21)" rx="2" ry="2" />
<text  x="483.84" y="95.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (13 samples, 6.40%)</title><rect x="655.2" y="341" width="75.6" height="15.0" fill="rgb(212,198,31)" rx="2" ry="2" />
<text  x="658.22" y="351.5" >ringbuf:..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.49%)</title><rect x="10.0" y="229" width="5.8" height="15.0" fill="rgb(217,112,39)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>do_mmap (2 samples, 0.99%)</title><rect x="446.0" y="229" width="11.6" height="15.0" fill="rgb(223,140,15)" rx="2" ry="2" />
<text  x="448.96" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (6 samples, 2.96%)</title><rect x="399.5" y="293" width="34.8" height="15.0" fill="rgb(232,23,47)" rx="2" ry="2" />
<text  x="402.46" y="303.5" >__..</text>
</g>
<g >
<title>schedule_idle (1 samples, 0.49%)</title><rect x="1160.9" y="421" width="5.8" height="15.0" fill="rgb(247,123,7)" rx="2" ry="2" />
<text  x="1163.94" y="431.5" ></text>
</g>
<g >
<title>__switch_to_asm (1 samples, 0.49%)</title><rect x="957.5" y="485" width="5.8" height="15.0" fill="rgb(229,174,13)" rx="2" ry="2" />
<text  x="960.49" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.49%)</title><rect x="823.8" y="405" width="5.8" height="15.0" fill="rgb(206,182,18)" rx="2" ry="2" />
<text  x="826.79" y="415.5" ></text>
</g>
<g >
<title>NaClSysRead (16 samples, 7.88%)</title><rect x="457.6" y="437" width="93.0" height="15.0" fill="rgb(230,74,8)" rx="2" ry="2" />
<text  x="460.59" y="447.5" >NaClSysRead</text>
</g>
<g >
<title>ioctl (63 samples, 31.03%)</title><rect x="15.8" y="405" width="366.2" height="15.0" fill="rgb(217,174,27)" rx="2" ry="2" />
<text  x="18.81" y="415.5" >ioctl</text>
</g>
<g >
<title>std::sys::unix::fs::File::seek (1 samples, 0.49%)</title><rect x="486.7" y="341" width="5.8" height="15.0" fill="rgb(231,84,11)" rx="2" ry="2" />
<text  x="489.65" y="351.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.49%)</title><rect x="823.8" y="357" width="5.8" height="15.0" fill="rgb(211,61,50)" rx="2" ry="2" />
<text  x="826.79" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.49%)</title><rect x="382.0" y="309" width="5.8" height="15.0" fill="rgb(224,178,21)" rx="2" ry="2" />
<text  x="385.02" y="319.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.99%)</title><rect x="446.0" y="197" width="11.6" height="15.0" fill="rgb(217,204,35)" rx="2" ry="2" />
<text  x="448.96" y="207.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (6 samples, 2.96%)</title><rect x="399.5" y="389" width="34.8" height="15.0" fill="rgb(211,82,25)" rx="2" ry="2" />
<text  x="402.46" y="399.5" >Na..</text>
</g>
<g >
<title>vm_mmap_pgoff (2 samples, 0.99%)</title><rect x="446.0" y="245" width="11.6" height="15.0" fill="rgb(251,57,19)" rx="2" ry="2" />
<text  x="448.96" y="255.5" ></text>
</g>
<g >
<title>NaClAddrSpaceFree (2 samples, 0.99%)</title><rect x="434.3" y="373" width="11.7" height="15.0" fill="rgb(233,161,35)" rx="2" ry="2" />
<text  x="437.33" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.49%)</title><rect x="1172.6" y="245" width="5.8" height="15.0" fill="rgb(247,136,48)" rx="2" ry="2" />
<text  x="1175.56" y="255.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1 samples, 0.49%)</title><rect x="1178.4" y="309" width="5.8" height="15.0" fill="rgb(226,34,22)" rx="2" ry="2" />
<text  x="1181.37" y="319.5" ></text>
</g>
<g >
<title>copy_page_from_iter_iovec (1 samples, 0.49%)</title><rect x="823.8" y="309" width="5.8" height="15.0" fill="rgb(247,181,19)" rx="2" ry="2" />
<text  x="826.79" y="319.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (2 samples, 0.99%)</title><rect x="655.2" y="325" width="11.6" height="15.0" fill="rgb(220,166,46)" rx="2" ry="2" />
<text  x="658.22" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.49%)</title><rect x="469.2" y="245" width="5.8" height="15.0" fill="rgb(238,105,18)" rx="2" ry="2" />
<text  x="472.21" y="255.5" ></text>
</g>
<g >
<title>do_idle (4 samples, 1.97%)</title><rect x="1166.7" y="373" width="23.3" height="15.0" fill="rgb(229,22,42)" rx="2" ry="2" />
<text  x="1169.75" y="383.5" >d..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (10 samples, 4.93%)</title><rect x="492.5" y="357" width="58.1" height="15.0" fill="rgb(227,97,17)" rx="2" ry="2" />
<text  x="495.46" y="367.5" >ringbu..</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (11 samples, 5.42%)</title><rect x="666.8" y="325" width="64.0" height="15.0" fill="rgb(208,53,50)" rx="2" ry="2" />
<text  x="669.85" y="335.5" >ringbuf..</text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.49%)</title><rect x="451.8" y="69" width="5.8" height="15.0" fill="rgb(246,155,17)" rx="2" ry="2" />
<text  x="454.77" y="79.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (1 samples, 0.49%)</title><rect x="480.8" y="101" width="5.9" height="15.0" fill="rgb(235,74,44)" rx="2" ry="2" />
<text  x="483.84" y="111.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (1 samples, 0.49%)</title><rect x="382.0" y="437" width="5.8" height="15.0" fill="rgb(242,46,43)" rx="2" ry="2" />
<text  x="385.02" y="447.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (6 samples, 2.96%)</title><rect x="399.5" y="405" width="34.8" height="15.0" fill="rgb(214,202,48)" rx="2" ry="2" />
<text  x="402.46" y="415.5" >Na..</text>
</g>
<g >
<title>unmap_region (2 samples, 0.99%)</title><rect x="446.0" y="181" width="11.6" height="15.0" fill="rgb(217,66,23)" rx="2" ry="2" />
<text  x="448.96" y="191.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.49%)</title><rect x="823.8" y="293" width="5.8" height="15.0" fill="rgb(248,193,48)" rx="2" ry="2" />
<text  x="826.79" y="303.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.49%)</title><rect x="806.4" y="357" width="5.8" height="15.0" fill="rgb(241,205,18)" rx="2" ry="2" />
<text  x="809.35" y="367.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.49%)</title><rect x="469.2" y="357" width="5.8" height="15.0" fill="rgb(211,61,11)" rx="2" ry="2" />
<text  x="472.21" y="367.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (1 samples, 0.49%)</title><rect x="382.0" y="101" width="5.8" height="15.0" fill="rgb(219,79,16)" rx="2" ry="2" />
<text  x="385.02" y="111.5" ></text>
</g>
<g >
<title>NaClSysMunmapDecoder (2 samples, 0.99%)</title><rect x="446.0" y="453" width="11.6" height="15.0" fill="rgb(205,30,24)" rx="2" ry="2" />
<text  x="448.96" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.49%)</title><rect x="469.2" y="229" width="5.8" height="15.0" fill="rgb(224,105,7)" rx="2" ry="2" />
<text  x="472.21" y="239.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.99%)</title><rect x="446.0" y="133" width="11.6" height="15.0" fill="rgb(215,40,10)" rx="2" ry="2" />
<text  x="448.96" y="143.5" ></text>
</g>
<g >
<title>lind_write (31 samples, 15.27%)</title><rect x="550.6" y="421" width="180.2" height="15.0" fill="rgb(230,225,22)" rx="2" ry="2" />
<text  x="553.59" y="431.5" >lind_write</text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.49%)</title><rect x="10.0" y="389" width="5.8" height="15.0" fill="rgb(240,10,12)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>perf_ioctl (1 samples, 0.49%)</title><rect x="387.8" y="437" width="5.8" height="15.0" fill="rgb(254,155,19)" rx="2" ry="2" />
<text  x="390.83" y="447.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (2 samples, 0.99%)</title><rect x="550.6" y="341" width="11.6" height="15.0" fill="rgb(233,10,36)" rx="2" ry="2" />
<text  x="553.59" y="351.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.49%)</title><rect x="10.0" y="261" width="5.8" height="15.0" fill="rgb(244,12,17)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.49%)</title><rect x="382.0" y="261" width="5.8" height="15.0" fill="rgb(211,206,46)" rx="2" ry="2" />
<text  x="385.02" y="271.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.49%)</title><rect x="382.0" y="293" width="5.8" height="15.0" fill="rgb(244,35,36)" rx="2" ry="2" />
<text  x="385.02" y="303.5" ></text>
</g>
<g >
<title>perf (65 samples, 32.02%)</title><rect x="15.8" y="501" width="377.8" height="15.0" fill="rgb(217,9,21)" rx="2" ry="2" />
<text  x="18.81" y="511.5" >perf</text>
</g>
<g >
<title>lind (1 samples, 0.49%)</title><rect x="10.0" y="501" width="5.8" height="15.0" fill="rgb(234,22,22)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (16 samples, 7.88%)</title><rect x="562.2" y="341" width="93.0" height="15.0" fill="rgb(208,149,31)" rx="2" ry="2" />
<text  x="565.22" y="351.5" >ringbuf::pr..</text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.49%)</title><rect x="823.8" y="341" width="5.8" height="15.0" fill="rgb(244,26,5)" rx="2" ry="2" />
<text  x="826.79" y="351.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (1 samples, 0.49%)</title><rect x="393.6" y="437" width="5.9" height="15.0" fill="rgb(223,47,5)" rx="2" ry="2" />
<text  x="396.65" y="447.5" ></text>
</g>
<g >
<title>core::cmp::min (2 samples, 0.99%)</title><rect x="550.6" y="357" width="11.6" height="15.0" fill="rgb(252,169,39)" rx="2" ry="2" />
<text  x="553.59" y="367.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.49%)</title><rect x="794.7" y="309" width="5.8" height="15.0" fill="rgb(241,196,18)" rx="2" ry="2" />
<text  x="797.73" y="319.5" ></text>
</g>
<g >
<title>NaClAddrSpaceFree (6 samples, 2.96%)</title><rect x="399.5" y="357" width="34.8" height="15.0" fill="rgb(215,98,37)" rx="2" ry="2" />
<text  x="402.46" y="367.5" >Na..</text>
</g>
<g >
<title>ksys_read (1 samples, 0.49%)</title><rect x="480.8" y="245" width="5.9" height="15.0" fill="rgb(215,219,4)" rx="2" ry="2" />
<text  x="483.84" y="255.5" ></text>
</g>
<g >
<title>lind_read (15 samples, 7.39%)</title><rect x="463.4" y="421" width="87.2" height="15.0" fill="rgb(225,209,29)" rx="2" ry="2" />
<text  x="466.40" y="431.5" >lind_read</text>
</g>
<g >
<title>vfs_read (1 samples, 0.49%)</title><rect x="480.8" y="229" width="5.9" height="15.0" fill="rgb(205,61,7)" rx="2" ry="2" />
<text  x="483.84" y="239.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.49%)</title><rect x="387.8" y="245" width="5.8" height="15.0" fill="rgb(216,170,31)" rx="2" ry="2" />
<text  x="390.83" y="255.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.49%)</title><rect x="794.7" y="357" width="5.8" height="15.0" fill="rgb(231,173,22)" rx="2" ry="2" />
<text  x="797.73" y="367.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (2 samples, 0.99%)</title><rect x="434.3" y="421" width="11.7" height="15.0" fill="rgb(236,142,3)" rx="2" ry="2" />
<text  x="437.33" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.49%)</title><rect x="492.5" y="309" width="5.8" height="15.0" fill="rgb(239,68,41)" rx="2" ry="2" />
<text  x="495.46" y="319.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (1 samples, 0.49%)</title><rect x="823.8" y="469" width="5.8" height="15.0" fill="rgb(236,70,13)" rx="2" ry="2" />
<text  x="826.79" y="479.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (2 samples, 0.99%)</title><rect x="434.3" y="405" width="11.7" height="15.0" fill="rgb(246,164,48)" rx="2" ry="2" />
<text  x="437.33" y="415.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Seek&gt;::seek (1 samples, 0.49%)</title><rect x="486.7" y="357" width="5.8" height="15.0" fill="rgb(207,33,13)" rx="2" ry="2" />
<text  x="489.65" y="367.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (9 samples, 4.43%)</title><rect x="498.3" y="293" width="52.3" height="15.0" fill="rgb(231,36,51)" rx="2" ry="2" />
<text  x="501.28" y="303.5" >core:..</text>
</g>
<g >
<title>__perf_event_enable (63 samples, 31.03%)</title><rect x="15.8" y="197" width="366.2" height="15.0" fill="rgb(239,217,42)" rx="2" ry="2" />
<text  x="18.81" y="207.5" >__perf_event_enable</text>
</g>
<g >
<title>[unknown] (64 samples, 31.53%)</title><rect x="15.8" y="485" width="372.0" height="15.0" fill="rgb(219,53,45)" rx="2" ry="2" />
<text  x="18.81" y="495.5" >[unknown]</text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.49%)</title><rect x="387.8" y="357" width="5.8" height="15.0" fill="rgb(206,183,54)" rx="2" ry="2" />
<text  x="390.83" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.49%)</title><rect x="823.8" y="485" width="5.8" height="15.0" fill="rgb(233,127,9)" rx="2" ry="2" />
<text  x="826.79" y="495.5" ></text>
</g>
<g >
<title>__munmap (2 samples, 0.99%)</title><rect x="434.3" y="357" width="11.7" height="15.0" fill="rgb(207,85,10)" rx="2" ry="2" />
<text  x="437.33" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.99%)</title><rect x="446.0" y="293" width="11.6" height="15.0" fill="rgb(247,106,12)" rx="2" ry="2" />
<text  x="448.96" y="303.5" ></text>
</g>
<g >
<title>perf_mmap__push (1 samples, 0.49%)</title><rect x="382.0" y="421" width="5.8" height="15.0" fill="rgb(245,182,20)" rx="2" ry="2" />
<text  x="385.02" y="431.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.49%)</title><rect x="10.0" y="277" width="5.8" height="15.0" fill="rgb(228,188,5)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3 samples, 1.48%)</title><rect x="829.6" y="485" width="17.4" height="15.0" fill="rgb(245,212,29)" rx="2" ry="2" />
<text  x="832.61" y="495.5" ></text>
</g>
<g >
<title>swapper (58 samples, 28.57%)</title><rect x="852.9" y="501" width="337.1" height="15.0" fill="rgb(243,55,24)" rx="2" ry="2" />
<text  x="855.86" y="511.5" >swapper</text>
</g>
<g >
<title>main (1 samples, 0.49%)</title><rect x="10.0" y="437" width="5.8" height="15.0" fill="rgb(215,170,46)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (2 samples, 0.99%)</title><rect x="446.0" y="261" width="11.6" height="15.0" fill="rgb(209,174,53)" rx="2" ry="2" />
<text  x="448.96" y="271.5" ></text>
</g>
<g >
<title>perf_ioctl (63 samples, 31.03%)</title><rect x="15.8" y="341" width="366.2" height="15.0" fill="rgb(245,96,2)" rx="2" ry="2" />
<text  x="18.81" y="351.5" >perf_ioctl</text>
</g>
<g >
<title>llseek (1 samples, 0.49%)</title><rect x="475.0" y="309" width="5.8" height="15.0" fill="rgb(205,204,7)" rx="2" ry="2" />
<text  x="478.02" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.49%)</title><rect x="480.8" y="261" width="5.9" height="15.0" fill="rgb(219,184,7)" rx="2" ry="2" />
<text  x="483.84" y="271.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.49%)</title><rect x="492.5" y="277" width="5.8" height="15.0" fill="rgb(221,112,7)" rx="2" ry="2" />
<text  x="495.46" y="287.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (2 samples, 0.99%)</title><rect x="475.0" y="325" width="11.7" height="15.0" fill="rgb(245,122,33)" rx="2" ry="2" />
<text  x="478.02" y="335.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (1 samples, 0.49%)</title><rect x="382.0" y="117" width="5.8" height="15.0" fill="rgb(243,220,30)" rx="2" ry="2" />
<text  x="385.02" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (63 samples, 31.03%)</title><rect x="15.8" y="357" width="366.2" height="15.0" fill="rgb(210,156,51)" rx="2" ry="2" />
<text  x="18.81" y="367.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>__pagevec_lru_add (1 samples, 0.49%)</title><rect x="794.7" y="325" width="5.8" height="15.0" fill="rgb(221,78,52)" rx="2" ry="2" />
<text  x="797.73" y="335.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.49%)</title><rect x="451.8" y="101" width="5.8" height="15.0" fill="rgb(228,159,21)" rx="2" ry="2" />
<text  x="454.77" y="111.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (6 samples, 2.96%)</title><rect x="777.3" y="469" width="34.9" height="15.0" fill="rgb(214,68,46)" rx="2" ry="2" />
<text  x="780.29" y="479.5" >as..</text>
</g>
<g >
<title>rwsem_spin_on_owner (2 samples, 0.99%)</title><rect x="434.3" y="229" width="11.7" height="15.0" fill="rgb(247,80,10)" rx="2" ry="2" />
<text  x="437.33" y="239.5" ></text>
</g>
<g >
<title>smp_call_function_single (63 samples, 31.03%)</title><rect x="15.8" y="261" width="366.2" height="15.0" fill="rgb(209,227,34)" rx="2" ry="2" />
<text  x="18.81" y="271.5" >smp_call_function_single</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.49%)</title><rect x="469.2" y="325" width="5.8" height="15.0" fill="rgb(212,127,5)" rx="2" ry="2" />
<text  x="472.21" y="335.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (2 samples, 0.99%)</title><rect x="434.3" y="453" width="11.7" height="15.0" fill="rgb(254,140,43)" rx="2" ry="2" />
<text  x="437.33" y="463.5" ></text>
</g>
<g >
<title>cpu_startup_entry (4 samples, 1.97%)</title><rect x="1166.7" y="389" width="23.3" height="15.0" fill="rgb(206,75,29)" rx="2" ry="2" />
<text  x="1169.75" y="399.5" >c..</text>
</g>
<g >
<title>_perf_event_enable (63 samples, 31.03%)</title><rect x="15.8" y="293" width="366.2" height="15.0" fill="rgb(242,15,43)" rx="2" ry="2" />
<text  x="18.81" y="303.5" >_perf_event_enable</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 2.96%)</title><rect x="399.5" y="325" width="34.8" height="15.0" fill="rgb(223,12,17)" rx="2" ry="2" />
<text  x="402.46" y="335.5" >en..</text>
</g>
<g >
<title>cgroup_throttle_swaprate (1 samples, 0.49%)</title><rect x="788.9" y="357" width="5.8" height="15.0" fill="rgb(223,119,40)" rx="2" ry="2" />
<text  x="791.92" y="367.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (63 samples, 31.03%)</title><rect x="15.8" y="437" width="366.2" height="15.0" fill="rgb(220,217,6)" rx="2" ry="2" />
<text  x="18.81" y="447.5" >perf_evsel__enable_cpu</text>
</g>
<g >
<title>NaClSyscallCSegHook (58 samples, 28.57%)</title><rect x="393.6" y="469" width="337.2" height="15.0" fill="rgb(211,12,38)" rx="2" ry="2" />
<text  x="396.65" y="479.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>__x64_sys_mmap (2 samples, 0.99%)</title><rect x="446.0" y="277" width="11.6" height="15.0" fill="rgb(247,5,2)" rx="2" ry="2" />
<text  x="448.96" y="287.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (6 samples, 2.96%)</title><rect x="399.5" y="229" width="34.8" height="15.0" fill="rgb(211,100,48)" rx="2" ry="2" />
<text  x="402.46" y="239.5" >rw..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.49%)</title><rect x="1172.6" y="165" width="5.8" height="15.0" fill="rgb(218,196,22)" rx="2" ry="2" />
<text  x="1175.56" y="175.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (35 samples, 17.24%)</title><rect x="986.6" y="485" width="203.4" height="15.0" fill="rgb(238,1,0)" rx="2" ry="2" />
<text  x="989.55" y="495.5" >secondary_startup_64_no_ve..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.49%)</title><rect x="463.4" y="373" width="5.8" height="15.0" fill="rgb(237,163,23)" rx="2" ry="2" />
<text  x="466.40" y="383.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (13 samples, 6.40%)</title><rect x="655.2" y="357" width="75.6" height="15.0" fill="rgb(226,209,17)" rx="2" ry="2" />
<text  x="658.22" y="367.5" >ringbuf:..</text>
</g>
<g >
<title>_perf_ioctl (1 samples, 0.49%)</title><rect x="387.8" y="421" width="5.8" height="15.0" fill="rgb(252,45,12)" rx="2" ry="2" />
<text  x="390.83" y="431.5" ></text>
</g>
<g >
<title>generic_exec_single (63 samples, 31.03%)</title><rect x="15.8" y="245" width="366.2" height="15.0" fill="rgb(216,188,6)" rx="2" ry="2" />
<text  x="18.81" y="255.5" >generic_exec_single</text>
</g>
<g >
<title>rwsem_down_write_slowpath (6 samples, 2.96%)</title><rect x="399.5" y="245" width="34.8" height="15.0" fill="rgb(247,114,50)" rx="2" ry="2" />
<text  x="402.46" y="255.5" >rw..</text>
</g>
<g >
<title>vfs_write (1 samples, 0.49%)</title><rect x="382.0" y="277" width="5.8" height="15.0" fill="rgb(218,188,49)" rx="2" ry="2" />
<text  x="385.02" y="287.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (4 samples, 1.97%)</title><rect x="1166.7" y="357" width="23.3" height="15.0" fill="rgb(243,85,2)" rx="2" ry="2" />
<text  x="1169.75" y="367.5" >c..</text>
</g>
<g >
<title>record__write (1 samples, 0.49%)</title><rect x="382.0" y="389" width="5.8" height="15.0" fill="rgb(229,10,11)" rx="2" ry="2" />
<text  x="385.02" y="399.5" ></text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.49%)</title><rect x="393.6" y="405" width="5.9" height="15.0" fill="rgb(233,10,30)" rx="2" ry="2" />
<text  x="396.65" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.49%)</title><rect x="457.6" y="405" width="5.8" height="15.0" fill="rgb(250,202,23)" rx="2" ry="2" />
<text  x="460.59" y="415.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (16 samples, 7.88%)</title><rect x="457.6" y="453" width="93.0" height="15.0" fill="rgb(205,41,34)" rx="2" ry="2" />
<text  x="460.59" y="463.5" >NaClSysRead..</text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.99%)</title><rect x="777.3" y="325" width="11.6" height="15.0" fill="rgb(252,119,46)" rx="2" ry="2" />
<text  x="780.29" y="335.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (1 samples, 0.49%)</title><rect x="480.8" y="69" width="5.9" height="15.0" fill="rgb(207,112,36)" rx="2" ry="2" />
<text  x="483.84" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.49%)</title><rect x="382.0" y="325" width="5.8" height="15.0" fill="rgb(236,170,2)" rx="2" ry="2" />
<text  x="385.02" y="335.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.49%)</title><rect x="387.8" y="261" width="5.8" height="15.0" fill="rgb(251,25,42)" rx="2" ry="2" />
<text  x="390.83" y="271.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.49%)</title><rect x="847.0" y="469" width="5.9" height="15.0" fill="rgb(240,100,3)" rx="2" ry="2" />
<text  x="850.04" y="479.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.99%)</title><rect x="446.0" y="165" width="11.6" height="15.0" fill="rgb(231,110,7)" rx="2" ry="2" />
<text  x="448.96" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.49%)</title><rect x="1172.6" y="293" width="5.8" height="15.0" fill="rgb(229,134,54)" rx="2" ry="2" />
<text  x="1175.56" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (63 samples, 31.03%)</title><rect x="15.8" y="373" width="366.2" height="15.0" fill="rgb(216,190,3)" rx="2" ry="2" />
<text  x="18.81" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (9 samples, 4.43%)</title><rect x="498.3" y="309" width="52.3" height="15.0" fill="rgb(205,26,30)" rx="2" ry="2" />
<text  x="501.28" y="319.5" >ringb..</text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (1 samples, 0.49%)</title><rect x="469.2" y="373" width="5.8" height="15.0" fill="rgb(240,126,28)" rx="2" ry="2" />
<text  x="472.21" y="383.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.49%)</title><rect x="387.8" y="229" width="5.8" height="15.0" fill="rgb(251,222,33)" rx="2" ry="2" />
<text  x="390.83" y="239.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (29 samples, 14.29%)</title><rect x="986.6" y="373" width="168.5" height="15.0" fill="rgb(246,147,28)" rx="2" ry="2" />
<text  x="989.55" y="383.5" >mwait_idle_with_hints..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.99%)</title><rect x="434.3" y="341" width="11.7" height="15.0" fill="rgb(218,178,7)" rx="2" ry="2" />
<text  x="437.33" y="351.5" ></text>
</g>
<g >
<title>__evlist__enable (63 samples, 31.03%)</title><rect x="15.8" y="453" width="366.2" height="15.0" fill="rgb(211,127,24)" rx="2" ry="2" />
<text  x="18.81" y="463.5" >__evlist__enable</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.49%)</title><rect x="387.8" y="485" width="5.8" height="15.0" fill="rgb(226,123,21)" rx="2" ry="2" />
<text  x="390.83" y="495.5" ></text>
</g>
<g >
<title>reader_loop (1 samples, 0.49%)</title><rect x="10.0" y="421" width="5.8" height="15.0" fill="rgb(254,82,10)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (63 samples, 31.03%)</title><rect x="15.8" y="389" width="366.2" height="15.0" fill="rgb(245,147,9)" rx="2" ry="2" />
<text  x="18.81" y="399.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.49%)</title><rect x="475.0" y="293" width="5.8" height="15.0" fill="rgb(226,54,35)" rx="2" ry="2" />
<text  x="478.02" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.49%)</title><rect x="382.0" y="85" width="5.8" height="15.0" fill="rgb(215,133,33)" rx="2" ry="2" />
<text  x="385.02" y="95.5" ></text>
</g>
<g >
<title>NaClAppDtor (2 samples, 0.99%)</title><rect x="434.3" y="389" width="11.7" height="15.0" fill="rgb(233,25,48)" rx="2" ry="2" />
<text  x="437.33" y="399.5" ></text>
</g>
<g >
<title>remote_function (1 samples, 0.49%)</title><rect x="387.8" y="325" width="5.8" height="15.0" fill="rgb(228,229,45)" rx="2" ry="2" />
<text  x="390.83" y="335.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.49%)</title><rect x="10.0" y="213" width="5.8" height="15.0" fill="rgb(231,178,37)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.99%)</title><rect x="550.6" y="325" width="11.6" height="15.0" fill="rgb(251,25,42)" rx="2" ry="2" />
<text  x="553.59" y="335.5" ></text>
</g>
<g >
<title>copy_page_from_iter (1 samples, 0.49%)</title><rect x="823.8" y="325" width="5.8" height="15.0" fill="rgb(246,3,20)" rx="2" ry="2" />
<text  x="826.79" y="335.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.49%)</title><rect x="10.0" y="373" width="5.8" height="15.0" fill="rgb(235,5,46)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (1 samples, 0.49%)</title><rect x="486.7" y="293" width="5.8" height="15.0" fill="rgb(236,90,45)" rx="2" ry="2" />
<text  x="489.65" y="303.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (1 samples, 0.49%)</title><rect x="393.6" y="421" width="5.9" height="15.0" fill="rgb(247,182,31)" rx="2" ry="2" />
<text  x="396.65" y="431.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.49%)</title><rect x="806.4" y="341" width="5.8" height="15.0" fill="rgb(246,57,46)" rx="2" ry="2" />
<text  x="809.35" y="351.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.49%)</title><rect x="451.8" y="53" width="5.8" height="15.0" fill="rgb(215,58,27)" rx="2" ry="2" />
<text  x="454.77" y="63.5" ></text>
</g>
<g >
<title>NaClAppDtor (6 samples, 2.96%)</title><rect x="399.5" y="373" width="34.8" height="15.0" fill="rgb(245,99,44)" rx="2" ry="2" />
<text  x="402.46" y="383.5" >Na..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.49%)</title><rect x="469.2" y="277" width="5.8" height="15.0" fill="rgb(226,191,18)" rx="2" ry="2" />
<text  x="472.21" y="287.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (30 samples, 14.78%)</title><rect x="986.6" y="421" width="174.3" height="15.0" fill="rgb(224,169,39)" rx="2" ry="2" />
<text  x="989.55" y="431.5" >cpuidle_idle_call</text>
</g>
<g >
<title>event_function (63 samples, 31.03%)</title><rect x="15.8" y="213" width="366.2" height="15.0" fill="rgb(216,151,43)" rx="2" ry="2" />
<text  x="18.81" y="223.5" >event_function</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.49%)</title><rect x="469.2" y="213" width="5.8" height="15.0" fill="rgb(209,82,53)" rx="2" ry="2" />
<text  x="472.21" y="223.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (31 samples, 15.27%)</title><rect x="550.6" y="373" width="180.2" height="15.0" fill="rgb(217,33,14)" rx="2" ry="2" />
<text  x="553.59" y="383.5" >rustposix::interface::p..</text>
</g>
<g >
<title>start_kernel (4 samples, 1.97%)</title><rect x="1166.7" y="437" width="23.3" height="15.0" fill="rgb(220,63,26)" rx="2" ry="2" />
<text  x="1169.75" y="447.5" >s..</text>
</g>
<g >
<title>event_function_call (1 samples, 0.49%)</title><rect x="387.8" y="373" width="5.8" height="15.0" fill="rgb(237,73,7)" rx="2" ry="2" />
<text  x="390.83" y="383.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.49%)</title><rect x="387.8" y="341" width="5.8" height="15.0" fill="rgb(243,6,17)" rx="2" ry="2" />
<text  x="390.83" y="351.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.49%)</title><rect x="393.6" y="373" width="5.9" height="15.0" fill="rgb(235,145,35)" rx="2" ry="2" />
<text  x="396.65" y="383.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (16 samples, 7.88%)</title><rect x="562.2" y="357" width="93.0" height="15.0" fill="rgb(211,27,10)" rx="2" ry="2" />
<text  x="565.22" y="367.5" >ringbuf::pr..</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.49%)</title><rect x="1172.6" y="277" width="5.8" height="15.0" fill="rgb(249,111,46)" rx="2" ry="2" />
<text  x="1175.56" y="287.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (6 samples, 2.96%)</title><rect x="399.5" y="453" width="34.8" height="15.0" fill="rgb(215,214,30)" rx="2" ry="2" />
<text  x="402.46" y="463.5" >Na..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.49%)</title><rect x="1172.6" y="309" width="5.8" height="15.0" fill="rgb(229,61,40)" rx="2" ry="2" />
<text  x="1175.56" y="319.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.49%)</title><rect x="1155.1" y="373" width="5.8" height="15.0" fill="rgb(231,44,15)" rx="2" ry="2" />
<text  x="1158.12" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter (30 samples, 14.78%)</title><rect x="986.6" y="405" width="174.3" height="15.0" fill="rgb(225,170,25)" rx="2" ry="2" />
<text  x="989.55" y="415.5" >cpuidle_enter</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.49%)</title><rect x="1172.6" y="229" width="5.8" height="15.0" fill="rgb(254,177,31)" rx="2" ry="2" />
<text  x="1175.56" y="239.5" ></text>
</g>
</g>
</svg>
