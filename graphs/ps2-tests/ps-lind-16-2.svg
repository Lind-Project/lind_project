<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.05%)</title><rect x="467.7" y="229" width="0.6" height="15.0" fill="rgb(233,9,44)" rx="2" ry="2" />
<text  x="470.70" y="239.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.03%)</title><rect x="357.5" y="325" width="0.4" height="15.0" fill="rgb(215,170,53)" rx="2" ry="2" />
<text  x="360.54" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (2 samples, 0.01%)</title><rect x="237.2" y="421" width="0.2" height="15.0" fill="rgb(216,59,23)" rx="2" ry="2" />
<text  x="240.25" y="431.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (12 samples, 0.07%)</title><rect x="1136.9" y="373" width="0.8" height="15.0" fill="rgb(214,17,21)" rx="2" ry="2" />
<text  x="1139.91" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt; (115 samples, 0.64%)</title><rect x="389.1" y="405" width="7.6" height="15.0" fill="rgb(223,170,16)" rx="2" ry="2" />
<text  x="392.14" y="415.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="344.7" y="293" width="0.2" height="15.0" fill="rgb(206,80,54)" rx="2" ry="2" />
<text  x="347.67" y="303.5" ></text>
</g>
<g >
<title>ktime_get (4 samples, 0.02%)</title><rect x="99.7" y="453" width="0.2" height="15.0" fill="rgb(233,209,10)" rx="2" ry="2" />
<text  x="102.66" y="463.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (103 samples, 0.57%)</title><rect x="325.9" y="357" width="6.8" height="15.0" fill="rgb(254,195,20)" rx="2" ry="2" />
<text  x="328.93" y="367.5" ></text>
</g>
<g >
<title>kcompactd (8 samples, 0.04%)</title><rect x="1071.0" y="501" width="0.5" height="15.0" fill="rgb(222,46,50)" rx="2" ry="2" />
<text  x="1074.02" y="511.5" ></text>
</g>
<g >
<title>cpuidle_enter (851 samples, 4.71%)</title><rect x="1074.7" y="453" width="55.5" height="15.0" fill="rgb(251,196,22)" rx="2" ry="2" />
<text  x="1077.68" y="463.5" >cpuid..</text>
</g>
<g >
<title>send_call_function_single_ipi (2 samples, 0.01%)</title><rect x="133.4" y="293" width="0.1" height="15.0" fill="rgb(237,216,35)" rx="2" ry="2" />
<text  x="136.35" y="303.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (19 samples, 0.11%)</title><rect x="362.3" y="437" width="1.2" height="15.0" fill="rgb(213,111,39)" rx="2" ry="2" />
<text  x="365.30" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (87 samples, 0.48%)</title><rect x="475.7" y="373" width="5.7" height="15.0" fill="rgb(231,178,4)" rx="2" ry="2" />
<text  x="478.73" y="383.5" ></text>
</g>
<g >
<title>migrate_pages (5 samples, 0.03%)</title><rect x="28.0" y="453" width="0.3" height="15.0" fill="rgb(250,163,18)" rx="2" ry="2" />
<text  x="30.96" y="463.5" ></text>
</g>
<g >
<title>perf_ioctl (2 samples, 0.01%)</title><rect x="141.3" y="485" width="0.1" height="15.0" fill="rgb(238,193,2)" rx="2" ry="2" />
<text  x="144.26" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.03%)</title><rect x="334.8" y="325" width="0.3" height="15.0" fill="rgb(225,41,4)" rx="2" ry="2" />
<text  x="337.81" y="335.5" ></text>
</g>
<g >
<title>all (18,070 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(238,127,18)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (2 samples, 0.01%)</title><rect x="147.3" y="517" width="0.1" height="15.0" fill="rgb(237,51,2)" rx="2" ry="2" />
<text  x="150.26" y="527.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (94 samples, 0.52%)</title><rect x="597.8" y="405" width="6.2" height="15.0" fill="rgb(229,69,52)" rx="2" ry="2" />
<text  x="600.85" y="415.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (3 samples, 0.02%)</title><rect x="1187.1" y="389" width="0.2" height="15.0" fill="rgb(233,228,28)" rx="2" ry="2" />
<text  x="1190.06" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (5 samples, 0.03%)</title><rect x="361.6" y="325" width="0.3" height="15.0" fill="rgb(249,34,34)" rx="2" ry="2" />
<text  x="364.58" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;u64,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (122 samples, 0.68%)</title><rect x="316.4" y="421" width="8.0" height="15.0" fill="rgb(231,195,41)" rx="2" ry="2" />
<text  x="319.40" y="431.5" ></text>
</g>
<g >
<title>llist_reverse_order (11 samples, 0.06%)</title><rect x="124.2" y="389" width="0.7" height="15.0" fill="rgb(216,155,46)" rx="2" ry="2" />
<text  x="127.21" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt; (114 samples, 0.63%)</title><rect x="402.0" y="421" width="7.4" height="15.0" fill="rgb(227,46,20)" rx="2" ry="2" />
<text  x="405.01" y="431.5" ></text>
</g>
<g >
<title>cpuidle_select (17 samples, 0.09%)</title><rect x="1185.8" y="389" width="1.1" height="15.0" fill="rgb(221,41,21)" rx="2" ry="2" />
<text  x="1188.76" y="399.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (11 samples, 0.06%)</title><rect x="1023.4" y="517" width="0.7" height="15.0" fill="rgb(239,125,35)" rx="2" ry="2" />
<text  x="1026.35" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.03%)</title><rect x="466.3" y="245" width="0.4" height="15.0" fill="rgb(220,109,22)" rx="2" ry="2" />
<text  x="469.33" y="255.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (114 samples, 0.63%)</title><rect x="402.0" y="341" width="7.4" height="15.0" fill="rgb(231,60,13)" rx="2" ry="2" />
<text  x="405.01" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.01%)</title><rect x="32.9" y="261" width="0.2" height="15.0" fill="rgb(245,211,41)" rx="2" ry="2" />
<text  x="35.92" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (13 samples, 0.07%)</title><rect x="1047.4" y="517" width="0.8" height="15.0" fill="rgb(253,200,8)" rx="2" ry="2" />
<text  x="1050.38" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (93 samples, 0.51%)</title><rect x="345.4" y="341" width="6.1" height="15.0" fill="rgb(232,141,33)" rx="2" ry="2" />
<text  x="348.39" y="351.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (36 samples, 0.20%)</title><rect x="1152.0" y="389" width="2.3" height="15.0" fill="rgb(249,176,34)" rx="2" ry="2" />
<text  x="1154.99" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (2 samples, 0.01%)</title><rect x="484.5" y="373" width="0.2" height="15.0" fill="rgb(249,148,32)" rx="2" ry="2" />
<text  x="487.55" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (62 samples, 0.34%)</title><rect x="136.9" y="437" width="4.0" height="15.0" fill="rgb(223,154,32)" rx="2" ry="2" />
<text  x="139.88" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (12 samples, 0.07%)</title><rect x="446.1" y="341" width="0.8" height="15.0" fill="rgb(240,194,44)" rx="2" ry="2" />
<text  x="449.15" y="351.5" ></text>
</g>
<g >
<title>rmap_walk_anon (3 samples, 0.02%)</title><rect x="1071.3" y="373" width="0.2" height="15.0" fill="rgb(235,25,44)" rx="2" ry="2" />
<text  x="1074.28" y="383.5" ></text>
</g>
<g >
<title>native_sched_clock (15 samples, 0.08%)</title><rect x="1160.5" y="405" width="1.0" height="15.0" fill="rgb(226,38,2)" rx="2" ry="2" />
<text  x="1163.55" y="415.5" ></text>
</g>
<g >
<title>do_sys_poll (2 samples, 0.01%)</title><rect x="27.6" y="485" width="0.1" height="15.0" fill="rgb(248,44,9)" rx="2" ry="2" />
<text  x="30.57" y="495.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (115 samples, 0.64%)</title><rect x="389.1" y="357" width="7.6" height="15.0" fill="rgb(215,204,14)" rx="2" ry="2" />
<text  x="392.14" y="367.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.03%)</title><rect x="71.3" y="389" width="0.3" height="15.0" fill="rgb(252,150,44)" rx="2" ry="2" />
<text  x="74.32" y="399.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (5 samples, 0.03%)</title><rect x="33.4" y="309" width="0.4" height="15.0" fill="rgb(205,179,14)" rx="2" ry="2" />
<text  x="36.44" y="319.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (4 samples, 0.02%)</title><rect x="1075.8" y="373" width="0.2" height="15.0" fill="rgb(230,155,25)" rx="2" ry="2" />
<text  x="1078.79" y="383.5" ></text>
</g>
<g >
<title>compact_zone (6 samples, 0.03%)</title><rect x="28.0" y="469" width="0.3" height="15.0" fill="rgb(222,13,27)" rx="2" ry="2" />
<text  x="30.96" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (6 samples, 0.03%)</title><rect x="552.0" y="357" width="0.4" height="15.0" fill="rgb(220,178,49)" rx="2" ry="2" />
<text  x="555.00" y="367.5" ></text>
</g>
<g >
<title>ktime_get (2 samples, 0.01%)</title><rect x="134.5" y="389" width="0.1" height="15.0" fill="rgb(227,181,10)" rx="2" ry="2" />
<text  x="137.46" y="399.5" ></text>
</g>
<g >
<title>get_typical_interval (9 samples, 0.05%)</title><rect x="1132.3" y="421" width="0.6" height="15.0" fill="rgb(246,155,38)" rx="2" ry="2" />
<text  x="1135.27" y="431.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (11 samples, 0.06%)</title><rect x="174.3" y="517" width="0.7" height="15.0" fill="rgb(230,172,3)" rx="2" ry="2" />
<text  x="177.30" y="527.5" ></text>
</g>
<g >
<title>schedule_idle (130 samples, 0.72%)</title><rect x="125.8" y="405" width="8.5" height="15.0" fill="rgb(225,119,40)" rx="2" ry="2" />
<text  x="128.85" y="415.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (12 samples, 0.07%)</title><rect x="343.9" y="293" width="0.8" height="15.0" fill="rgb(247,215,27)" rx="2" ry="2" />
<text  x="346.89" y="303.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (115 samples, 0.64%)</title><rect x="389.1" y="373" width="7.6" height="15.0" fill="rgb(253,61,14)" rx="2" ry="2" />
<text  x="392.14" y="383.5" ></text>
</g>
<g >
<title>newidle_balance (107 samples, 0.59%)</title><rect x="126.6" y="357" width="7.0" height="15.0" fill="rgb(210,118,22)" rx="2" ry="2" />
<text  x="129.63" y="367.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (406 samples, 2.25%)</title><rect x="1076.0" y="421" width="26.6" height="15.0" fill="rgb(252,229,14)" rx="2" ry="2" />
<text  x="1079.05" y="431.5" >m..</text>
</g>
<g >
<title>_nohz_idle_balance (9 samples, 0.05%)</title><rect x="1188.2" y="325" width="0.6" height="15.0" fill="rgb(227,64,1)" rx="2" ry="2" />
<text  x="1191.24" y="335.5" ></text>
</g>
<g >
<title>read_tsc (3 samples, 0.02%)</title><rect x="134.6" y="389" width="0.2" height="15.0" fill="rgb(243,24,32)" rx="2" ry="2" />
<text  x="137.60" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (4 samples, 0.02%)</title><rect x="546.2" y="389" width="0.3" height="15.0" fill="rgb(228,201,15)" rx="2" ry="2" />
<text  x="549.19" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (2 samples, 0.01%)</title><rect x="237.2" y="325" width="0.2" height="15.0" fill="rgb(223,92,37)" rx="2" ry="2" />
<text  x="240.25" y="335.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (12,256 samples, 67.83%)</title><rect x="175.7" y="517" width="800.3" height="15.0" fill="rgb(232,56,40)" rx="2" ry="2" />
<text  x="178.67" y="527.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (27 samples, 0.15%)</title><rect x="346.1" y="309" width="1.8" height="15.0" fill="rgb(222,35,25)" rx="2" ry="2" />
<text  x="349.11" y="319.5" ></text>
</g>
<g >
<title>do_mmap (2 samples, 0.01%)</title><rect x="237.2" y="277" width="0.2" height="15.0" fill="rgb(234,137,50)" rx="2" ry="2" />
<text  x="240.25" y="287.5" ></text>
</g>
<g >
<title>lind_write (6,356 samples, 35.17%)</title><rect x="560.9" y="469" width="415.1" height="15.0" fill="rgb(239,80,52)" rx="2" ry="2" />
<text  x="563.95" y="479.5" >lind_write</text>
</g>
<g >
<title>flush_smp_call_function_from_idle (40 samples, 0.22%)</title><rect x="123.2" y="405" width="2.6" height="15.0" fill="rgb(253,34,36)" rx="2" ry="2" />
<text  x="126.17" y="415.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.01%)</title><rect x="134.0" y="341" width="0.1" height="15.0" fill="rgb(210,135,50)" rx="2" ry="2" />
<text  x="137.01" y="351.5" ></text>
</g>
<g >
<title>irq_exit_rcu (4 samples, 0.02%)</title><rect x="1075.8" y="389" width="0.2" height="15.0" fill="rgb(243,190,20)" rx="2" ry="2" />
<text  x="1078.79" y="399.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (13 samples, 0.07%)</title><rect x="199.6" y="485" width="0.9" height="15.0" fill="rgb(237,215,12)" rx="2" ry="2" />
<text  x="202.64" y="495.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (4 samples, 0.02%)</title><rect x="235.7" y="501" width="0.3" height="15.0" fill="rgb(206,103,47)" rx="2" ry="2" />
<text  x="238.75" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (12 samples, 0.07%)</title><rect x="446.1" y="357" width="0.8" height="15.0" fill="rgb(213,61,14)" rx="2" ry="2" />
<text  x="449.15" y="367.5" ></text>
</g>
<g >
<title>housekeeping_cpumask (2 samples, 0.01%)</title><rect x="131.0" y="309" width="0.1" height="15.0" fill="rgb(236,52,17)" rx="2" ry="2" />
<text  x="134.00" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (121 samples, 0.67%)</title><rect x="316.5" y="357" width="7.9" height="15.0" fill="rgb(231,126,8)" rx="2" ry="2" />
<text  x="319.46" y="367.5" ></text>
</g>
<g >
<title>rb_next (2 samples, 0.01%)</title><rect x="1134.8" y="373" width="0.1" height="15.0" fill="rgb(215,172,41)" rx="2" ry="2" />
<text  x="1137.75" y="383.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (7 samples, 0.04%)</title><rect x="1163.5" y="453" width="0.4" height="15.0" fill="rgb(209,72,51)" rx="2" ry="2" />
<text  x="1166.49" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (32 samples, 0.18%)</title><rect x="1135.6" y="405" width="2.1" height="15.0" fill="rgb(216,70,6)" rx="2" ry="2" />
<text  x="1138.60" y="415.5" ></text>
</g>
<g >
<title>DynArrayGet (30 samples, 0.17%)</title><rect x="276.0" y="453" width="1.9" height="15.0" fill="rgb(216,135,27)" rx="2" ry="2" />
<text  x="278.97" y="463.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (256 samples, 1.42%)</title><rect x="150.8" y="437" width="16.7" height="15.0" fill="rgb(224,145,41)" rx="2" ry="2" />
<text  x="153.79" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (58 samples, 0.32%)</title><rect x="446.9" y="277" width="3.8" height="15.0" fill="rgb(252,80,48)" rx="2" ry="2" />
<text  x="449.93" y="287.5" ></text>
</g>
<g >
<title>read_tsc (11 samples, 0.06%)</title><rect x="1164.8" y="453" width="0.7" height="15.0" fill="rgb(224,58,40)" rx="2" ry="2" />
<text  x="1167.79" y="463.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (58 samples, 0.32%)</title><rect x="446.9" y="309" width="3.8" height="15.0" fill="rgb(213,79,15)" rx="2" ry="2" />
<text  x="449.93" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (25 samples, 0.14%)</title><rect x="1163.9" y="469" width="1.7" height="15.0" fill="rgb(214,109,42)" rx="2" ry="2" />
<text  x="1166.94" y="479.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (369 samples, 2.04%)</title><rect x="451.4" y="389" width="24.1" height="15.0" fill="rgb(222,4,10)" rx="2" ry="2" />
<text  x="454.37" y="399.5" >h..</text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.01%)</title><rect x="100.3" y="421" width="0.1" height="15.0" fill="rgb(244,166,2)" rx="2" ry="2" />
<text  x="103.31" y="431.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (231 samples, 1.28%)</title><rect x="806.8" y="373" width="15.1" height="15.0" fill="rgb(237,79,15)" rx="2" ry="2" />
<text  x="809.81" y="383.5" ></text>
</g>
<g >
<title>generic_perform_write (4 samples, 0.02%)</title><rect x="141.0" y="197" width="0.3" height="15.0" fill="rgb(235,155,9)" rx="2" ry="2" />
<text  x="144.00" y="207.5" ></text>
</g>
<g >
<title>arch_call_rest_init (347 samples, 1.92%)</title><rect x="1167.3" y="469" width="22.7" height="15.0" fill="rgb(226,170,40)" rx="2" ry="2" />
<text  x="1170.34" y="479.5" >a..</text>
</g>
<g >
<title>read_tsc (3 samples, 0.02%)</title><rect x="135.2" y="389" width="0.2" height="15.0" fill="rgb(252,103,15)" rx="2" ry="2" />
<text  x="138.18" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (28 samples, 0.15%)</title><rect x="445.1" y="373" width="1.8" height="15.0" fill="rgb(250,116,25)" rx="2" ry="2" />
<text  x="448.10" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (90 samples, 0.50%)</title><rect x="310.2" y="405" width="5.9" height="15.0" fill="rgb(254,198,19)" rx="2" ry="2" />
<text  x="313.19" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.03%)</title><rect x="1051.0" y="517" width="0.4" height="15.0" fill="rgb(246,92,53)" rx="2" ry="2" />
<text  x="1054.04" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_write (2 samples, 0.01%)</title><rect x="27.8" y="501" width="0.1" height="15.0" fill="rgb(254,183,27)" rx="2" ry="2" />
<text  x="30.76" y="511.5" ></text>
</g>
<g >
<title>menu_update (5 samples, 0.03%)</title><rect x="120.6" y="357" width="0.3" height="15.0" fill="rgb(247,60,0)" rx="2" ry="2" />
<text  x="123.62" y="367.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (2 samples, 0.01%)</title><rect x="1133.3" y="421" width="0.1" height="15.0" fill="rgb(242,107,10)" rx="2" ry="2" />
<text  x="1136.25" y="431.5" ></text>
</g>
<g >
<title>__unmap_and_move (6 samples, 0.03%)</title><rect x="1071.1" y="421" width="0.4" height="15.0" fill="rgb(246,31,4)" rx="2" ry="2" />
<text  x="1074.09" y="431.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write_guard (5 samples, 0.03%)</title><rect x="481.4" y="405" width="0.3" height="15.0" fill="rgb(223,165,23)" rx="2" ry="2" />
<text  x="484.41" y="415.5" ></text>
</g>
<g >
<title>start_kernel (347 samples, 1.92%)</title><rect x="1167.3" y="485" width="22.7" height="15.0" fill="rgb(206,40,26)" rx="2" ry="2" />
<text  x="1170.34" y="495.5" >s..</text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force (6 samples, 0.03%)</title><rect x="388.7" y="405" width="0.4" height="15.0" fill="rgb(243,139,8)" rx="2" ry="2" />
<text  x="391.75" y="415.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (4 samples, 0.02%)</title><rect x="79.1" y="405" width="0.3" height="15.0" fill="rgb(237,188,9)" rx="2" ry="2" />
<text  x="82.09" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6 samples, 0.03%)</title><rect x="79.9" y="389" width="0.4" height="15.0" fill="rgb(233,132,14)" rx="2" ry="2" />
<text  x="82.94" y="399.5" ></text>
</g>
<g >
<title>start_kernel (515 samples, 2.85%)</title><rect x="103.2" y="485" width="33.6" height="15.0" fill="rgb(213,188,16)" rx="2" ry="2" />
<text  x="106.19" y="495.5" >st..</text>
</g>
<g >
<title>native_write_msr (2 samples, 0.01%)</title><rect x="141.3" y="277" width="0.1" height="15.0" fill="rgb(238,189,47)" rx="2" ry="2" />
<text  x="144.26" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (90 samples, 0.50%)</title><rect x="310.2" y="437" width="5.9" height="15.0" fill="rgb(231,121,37)" rx="2" ry="2" />
<text  x="313.19" y="447.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (103 samples, 0.57%)</title><rect x="325.9" y="373" width="6.8" height="15.0" fill="rgb(221,88,10)" rx="2" ry="2" />
<text  x="328.93" y="383.5" ></text>
</g>
<g >
<title>pagecache_get_page (2 samples, 0.01%)</title><rect x="141.1" y="149" width="0.2" height="15.0" fill="rgb(249,74,0)" rx="2" ry="2" />
<text  x="144.13" y="159.5" ></text>
</g>
<g >
<title>__schedule (180 samples, 1.00%)</title><rect x="87.3" y="453" width="11.7" height="15.0" fill="rgb(254,170,4)" rx="2" ry="2" />
<text  x="90.25" y="463.5" ></text>
</g>
<g >
<title>arch_call_rest_init (515 samples, 2.85%)</title><rect x="103.2" y="469" width="33.6" height="15.0" fill="rgb(252,201,3)" rx="2" ry="2" />
<text  x="106.19" y="479.5" >ar..</text>
</g>
<g >
<title>cpumask_next_and (2 samples, 0.01%)</title><rect x="1156.6" y="373" width="0.2" height="15.0" fill="rgb(209,59,28)" rx="2" ry="2" />
<text  x="1159.63" y="383.5" ></text>
</g>
<g >
<title>kick_ilb (8 samples, 0.04%)</title><rect x="1188.8" y="325" width="0.5" height="15.0" fill="rgb(234,207,2)" rx="2" ry="2" />
<text  x="1191.82" y="335.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (165 samples, 0.91%)</title><rect x="420.4" y="373" width="10.8" height="15.0" fill="rgb(239,173,21)" rx="2" ry="2" />
<text  x="423.42" y="383.5" ></text>
</g>
<g >
<title>_perf_event_enable (62 samples, 0.34%)</title><rect x="136.9" y="341" width="4.0" height="15.0" fill="rgb(206,152,1)" rx="2" ry="2" />
<text  x="139.88" y="351.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (82 samples, 0.45%)</title><rect x="339.8" y="357" width="5.3" height="15.0" fill="rgb(229,30,41)" rx="2" ry="2" />
<text  x="342.77" y="367.5" ></text>
</g>
<g >
<title>memcpy@plt (4 samples, 0.02%)</title><rect x="245.9" y="469" width="0.2" height="15.0" fill="rgb(240,118,31)" rx="2" ry="2" />
<text  x="248.87" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.05%)</title><rect x="354.1" y="277" width="0.6" height="15.0" fill="rgb(253,228,19)" rx="2" ry="2" />
<text  x="357.14" y="287.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="80.7" y="357" width="0.1" height="15.0" fill="rgb(228,128,24)" rx="2" ry="2" />
<text  x="83.66" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (16 samples, 0.09%)</title><rect x="471.6" y="293" width="1.1" height="15.0" fill="rgb(247,225,38)" rx="2" ry="2" />
<text  x="474.62" y="303.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (4 samples, 0.02%)</title><rect x="333.3" y="405" width="0.3" height="15.0" fill="rgb(216,89,44)" rx="2" ry="2" />
<text  x="336.31" y="415.5" ></text>
</g>
<g >
<title>ksys_write (5 samples, 0.03%)</title><rect x="140.9" y="341" width="0.4" height="15.0" fill="rgb(254,218,38)" rx="2" ry="2" />
<text  x="143.93" y="351.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (6 samples, 0.03%)</title><rect x="388.7" y="389" width="0.4" height="15.0" fill="rgb(218,12,46)" rx="2" ry="2" />
<text  x="391.75" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (223 samples, 1.23%)</title><rect x="104.4" y="373" width="14.6" height="15.0" fill="rgb(221,83,34)" rx="2" ry="2" />
<text  x="107.43" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8 samples, 0.04%)</title><rect x="1075.5" y="421" width="0.5" height="15.0" fill="rgb(249,69,13)" rx="2" ry="2" />
<text  x="1078.53" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (13 samples, 0.07%)</title><rect x="245.0" y="469" width="0.9" height="15.0" fill="rgb(243,11,35)" rx="2" ry="2" />
<text  x="248.02" y="479.5" ></text>
</g>
<g >
<title>hrtimer_cancel (3 samples, 0.02%)</title><rect x="101.2" y="437" width="0.2" height="15.0" fill="rgb(219,35,22)" rx="2" ry="2" />
<text  x="104.23" y="447.5" ></text>
</g>
<g >
<title>poll_idle (181 samples, 1.00%)</title><rect x="105.3" y="357" width="11.8" height="15.0" fill="rgb(253,147,52)" rx="2" ry="2" />
<text  x="108.28" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (7 samples, 0.04%)</title><rect x="332.2" y="325" width="0.5" height="15.0" fill="rgb(246,205,1)" rx="2" ry="2" />
<text  x="335.20" y="335.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.01%)</title><rect x="129.4" y="309" width="0.1" height="15.0" fill="rgb(216,155,25)" rx="2" ry="2" />
<text  x="132.37" y="319.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="74.3" y="437" width="0.2" height="15.0" fill="rgb(217,173,0)" rx="2" ry="2" />
<text  x="77.32" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3 samples, 0.02%)</title><rect x="1075.5" y="341" width="0.2" height="15.0" fill="rgb(223,118,31)" rx="2" ry="2" />
<text  x="1078.53" y="351.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (83 samples, 0.46%)</title><rect x="333.6" y="389" width="5.4" height="15.0" fill="rgb(208,193,48)" rx="2" ry="2" />
<text  x="336.57" y="399.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (2 samples, 0.01%)</title><rect x="1050.1" y="357" width="0.1" height="15.0" fill="rgb(230,142,8)" rx="2" ry="2" />
<text  x="1053.06" y="367.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i32&gt;::eq (2 samples, 0.01%)</title><rect x="472.5" y="277" width="0.2" height="15.0" fill="rgb(224,110,2)" rx="2" ry="2" />
<text  x="475.53" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (65 samples, 0.36%)</title><rect x="457.4" y="277" width="4.3" height="15.0" fill="rgb(219,104,47)" rx="2" ry="2" />
<text  x="460.45" y="287.5" ></text>
</g>
<g >
<title>nohz_csd_func (13 samples, 0.07%)</title><rect x="124.9" y="389" width="0.9" height="15.0" fill="rgb(214,5,0)" rx="2" ry="2" />
<text  x="127.93" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (2 samples, 0.01%)</title><rect x="141.3" y="501" width="0.1" height="15.0" fill="rgb(210,186,49)" rx="2" ry="2" />
<text  x="144.26" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (12 samples, 0.07%)</title><rect x="464.5" y="309" width="0.8" height="15.0" fill="rgb(209,22,26)" rx="2" ry="2" />
<text  x="467.50" y="319.5" ></text>
</g>
<g >
<title>NaClSysWrite (6,356 samples, 35.17%)</title><rect x="560.9" y="485" width="415.1" height="15.0" fill="rgb(246,187,28)" rx="2" ry="2" />
<text  x="563.95" y="495.5" >NaClSysWrite</text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.01%)</title><rect x="78.7" y="389" width="0.1" height="15.0" fill="rgb(251,12,8)" rx="2" ry="2" />
<text  x="81.70" y="399.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (151 samples, 0.84%)</title><rect x="265.3" y="469" width="9.8" height="15.0" fill="rgb(239,104,11)" rx="2" ry="2" />
<text  x="268.26" y="479.5" ></text>
</g>
<g >
<title>read_hpet (3 samples, 0.02%)</title><rect x="33.6" y="245" width="0.2" height="15.0" fill="rgb(249,122,3)" rx="2" ry="2" />
<text  x="36.57" y="255.5" ></text>
</g>
<g >
<title>ovl_write_iter (5 samples, 0.03%)</title><rect x="140.9" y="293" width="0.4" height="15.0" fill="rgb(234,187,28)" rx="2" ry="2" />
<text  x="143.93" y="303.5" ></text>
</g>
<g >
<title>NaClAppThreadLauncher (2 samples, 0.01%)</title><rect x="1049.9" y="501" width="0.2" height="15.0" fill="rgb(231,178,0)" rx="2" ry="2" />
<text  x="1052.93" y="511.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (13 samples, 0.07%)</title><rect x="78.2" y="405" width="0.9" height="15.0" fill="rgb(213,106,30)" rx="2" ry="2" />
<text  x="81.24" y="415.5" ></text>
</g>
<g >
<title>NaClSysRead (4 samples, 0.02%)</title><rect x="145.3" y="517" width="0.3" height="15.0" fill="rgb(220,7,14)" rx="2" ry="2" />
<text  x="148.30" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (8 samples, 0.04%)</title><rect x="1134.4" y="389" width="0.5" height="15.0" fill="rgb(241,177,31)" rx="2" ry="2" />
<text  x="1137.36" y="399.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.02%)</title><rect x="1136.7" y="373" width="0.2" height="15.0" fill="rgb(216,113,18)" rx="2" ry="2" />
<text  x="1139.71" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (83 samples, 0.46%)</title><rect x="333.6" y="373" width="5.4" height="15.0" fill="rgb(254,222,26)" rx="2" ry="2" />
<text  x="336.57" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (78 samples, 0.43%)</title><rect x="396.9" y="373" width="5.1" height="15.0" fill="rgb(207,77,18)" rx="2" ry="2" />
<text  x="399.91" y="383.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::guard (4 samples, 0.02%)</title><rect x="515.8" y="389" width="0.2" height="15.0" fill="rgb(234,162,37)" rx="2" ry="2" />
<text  x="518.76" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (402 samples, 2.22%)</title><rect x="640.5" y="357" width="26.2" height="15.0" fill="rgb(229,68,31)" rx="2" ry="2" />
<text  x="643.49" y="367.5" >c..</text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="100.3" y="437" width="0.1" height="15.0" fill="rgb(225,172,0)" rx="2" ry="2" />
<text  x="103.31" y="447.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.07%)</title><rect x="474.6" y="293" width="0.9" height="15.0" fill="rgb(230,144,12)" rx="2" ry="2" />
<text  x="477.62" y="303.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="361.9" y="293" width="0.1" height="15.0" fill="rgb(233,143,49)" rx="2" ry="2" />
<text  x="364.91" y="303.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (5 samples, 0.03%)</title><rect x="274.6" y="453" width="0.3" height="15.0" fill="rgb(241,181,2)" rx="2" ry="2" />
<text  x="277.60" y="463.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.02%)</title><rect x="361.4" y="277" width="0.2" height="15.0" fill="rgb(250,180,16)" rx="2" ry="2" />
<text  x="364.39" y="287.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (78 samples, 0.43%)</title><rect x="339.8" y="341" width="5.1" height="15.0" fill="rgb(237,106,51)" rx="2" ry="2" />
<text  x="342.77" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (2 samples, 0.01%)</title><rect x="1050.1" y="389" width="0.1" height="15.0" fill="rgb(219,132,14)" rx="2" ry="2" />
<text  x="1053.06" y="399.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="134.0" y="357" width="0.1" height="15.0" fill="rgb(234,11,39)" rx="2" ry="2" />
<text  x="137.01" y="367.5" ></text>
</g>
<g >
<title>generic_exec_single (20 samples, 0.11%)</title><rect x="1157.1" y="357" width="1.3" height="15.0" fill="rgb(229,78,32)" rx="2" ry="2" />
<text  x="1160.09" y="367.5" ></text>
</g>
<g >
<title>cpu_startup_entry (347 samples, 1.92%)</title><rect x="1167.3" y="437" width="22.7" height="15.0" fill="rgb(228,35,3)" rx="2" ry="2" />
<text  x="1170.34" y="447.5" >c..</text>
</g>
<g >
<title>remote_function (2 samples, 0.01%)</title><rect x="141.3" y="373" width="0.1" height="15.0" fill="rgb(248,137,47)" rx="2" ry="2" />
<text  x="144.26" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (68 samples, 0.38%)</title><rect x="357.9" y="373" width="4.4" height="15.0" fill="rgb(226,177,8)" rx="2" ry="2" />
<text  x="360.86" y="383.5" ></text>
</g>
<g >
<title>NaClLog (7 samples, 0.04%)</title><rect x="175.0" y="517" width="0.5" height="15.0" fill="rgb(237,154,45)" rx="2" ry="2" />
<text  x="178.02" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (96 samples, 0.53%)</title><rect x="325.9" y="325" width="6.3" height="15.0" fill="rgb(232,109,29)" rx="2" ry="2" />
<text  x="328.93" y="335.5" ></text>
</g>
<g >
<title>handle_pte_fault (5 samples, 0.03%)</title><rect x="1019.3" y="437" width="0.3" height="15.0" fill="rgb(227,57,19)" rx="2" ry="2" />
<text  x="1022.30" y="447.5" ></text>
</g>
<g >
<title>cpuidle_reflect (3 samples, 0.02%)</title><rect x="119.1" y="389" width="0.1" height="15.0" fill="rgb(222,169,16)" rx="2" ry="2" />
<text  x="122.05" y="399.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (5 samples, 0.03%)</title><rect x="140.9" y="213" width="0.4" height="15.0" fill="rgb(209,219,47)" rx="2" ry="2" />
<text  x="143.93" y="223.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.07%)</title><rect x="355.0" y="261" width="0.8" height="15.0" fill="rgb(228,63,9)" rx="2" ry="2" />
<text  x="357.99" y="271.5" ></text>
</g>
<g >
<title>__mmap (2 samples, 0.01%)</title><rect x="237.2" y="373" width="0.2" height="15.0" fill="rgb(237,179,49)" rx="2" ry="2" />
<text  x="240.25" y="383.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (3 samples, 0.02%)</title><rect x="560.4" y="405" width="0.2" height="15.0" fill="rgb(227,216,46)" rx="2" ry="2" />
<text  x="563.36" y="415.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (8 samples, 0.04%)</title><rect x="33.2" y="357" width="0.6" height="15.0" fill="rgb(243,31,41)" rx="2" ry="2" />
<text  x="36.25" y="367.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (6,356 samples, 35.17%)</title><rect x="560.9" y="501" width="415.1" height="15.0" fill="rgb(223,143,40)" rx="2" ry="2" />
<text  x="563.95" y="511.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (104 samples, 0.58%)</title><rect x="552.7" y="341" width="6.8" height="15.0" fill="rgb(249,25,7)" rx="2" ry="2" />
<text  x="555.72" y="351.5" ></text>
</g>
<g >
<title>ctx_resched (62 samples, 0.34%)</title><rect x="136.9" y="229" width="4.0" height="15.0" fill="rgb(232,212,31)" rx="2" ry="2" />
<text  x="139.88" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt; (122 samples, 0.68%)</title><rect x="316.4" y="437" width="8.0" height="15.0" fill="rgb(229,124,51)" rx="2" ry="2" />
<text  x="319.40" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::PIPE_TABLE (6 samples, 0.03%)</title><rect x="1051.0" y="533" width="0.4" height="15.0" fill="rgb(215,158,24)" rx="2" ry="2" />
<text  x="1054.04" y="543.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (19 samples, 0.11%)</title><rect x="82.1" y="453" width="1.2" height="15.0" fill="rgb(209,215,37)" rx="2" ry="2" />
<text  x="85.09" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.04%)</title><rect x="142.4" y="517" width="0.5" height="15.0" fill="rgb(216,197,53)" rx="2" ry="2" />
<text  x="145.43" y="527.5" ></text>
</g>
<g >
<title>rcu_idle_exit (4 samples, 0.02%)</title><rect x="74.1" y="437" width="0.2" height="15.0" fill="rgb(226,170,12)" rx="2" ry="2" />
<text  x="77.06" y="447.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (5 samples, 0.03%)</title><rect x="1046.9" y="485" width="0.3" height="15.0" fill="rgb(210,197,4)" rx="2" ry="2" />
<text  x="1049.86" y="495.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.01%)</title><rect x="1161.9" y="453" width="0.2" height="15.0" fill="rgb(239,73,5)" rx="2" ry="2" />
<text  x="1164.92" y="463.5" ></text>
</g>
<g >
<title>dispatcher (2 samples, 0.01%)</title><rect x="1049.9" y="469" width="0.2" height="15.0" fill="rgb(210,54,15)" rx="2" ry="2" />
<text  x="1052.93" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock (5 samples, 0.03%)</title><rect x="99.0" y="453" width="0.3" height="15.0" fill="rgb(234,181,7)" rx="2" ry="2" />
<text  x="102.01" y="463.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (171 samples, 0.95%)</title><rect x="618.3" y="325" width="11.2" height="15.0" fill="rgb(232,32,8)" rx="2" ry="2" />
<text  x="621.35" y="335.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (2 samples, 0.01%)</title><rect x="1145.9" y="469" width="0.1" height="15.0" fill="rgb(216,127,25)" rx="2" ry="2" />
<text  x="1148.86" y="479.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (2 samples, 0.01%)</title><rect x="100.3" y="453" width="0.1" height="15.0" fill="rgb(243,31,30)" rx="2" ry="2" />
<text  x="103.31" y="463.5" ></text>
</g>
<g >
<title>swapper (2,122 samples, 11.74%)</title><rect x="1051.4" y="549" width="138.6" height="15.0" fill="rgb(239,103,31)" rx="2" ry="2" />
<text  x="1054.43" y="559.5" >swapper</text>
</g>
<g >
<title>perf (69 samples, 0.38%)</title><rect x="136.9" y="549" width="4.5" height="15.0" fill="rgb(218,147,27)" rx="2" ry="2" />
<text  x="139.88" y="559.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,001 samples, 5.54%)</title><rect x="1073.0" y="469" width="65.4" height="15.0" fill="rgb(231,95,20)" rx="2" ry="2" />
<text  x="1076.04" y="479.5" >cpuidle..</text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (92 samples, 0.51%)</title><rect x="475.7" y="421" width="6.0" height="15.0" fill="rgb(250,66,13)" rx="2" ry="2" />
<text  x="478.73" y="431.5" ></text>
</g>
<g >
<title>start_secondary (1,143 samples, 6.33%)</title><rect x="28.5" y="517" width="74.7" height="15.0" fill="rgb(206,159,9)" rx="2" ry="2" />
<text  x="31.55" y="527.5" >start_se..</text>
</g>
<g >
<title>kthread (9 samples, 0.05%)</title><rect x="28.0" y="517" width="0.5" height="15.0" fill="rgb(248,130,27)" rx="2" ry="2" />
<text  x="30.96" y="527.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (3 samples, 0.02%)</title><rect x="101.2" y="421" width="0.2" height="15.0" fill="rgb(219,172,54)" rx="2" ry="2" />
<text  x="104.23" y="431.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="121.7" y="325" width="0.3" height="15.0" fill="rgb(208,132,24)" rx="2" ry="2" />
<text  x="124.73" y="335.5" ></text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.02%)</title><rect x="1189.3" y="357" width="0.2" height="15.0" fill="rgb(226,90,32)" rx="2" ry="2" />
<text  x="1192.35" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (10 samples, 0.06%)</title><rect x="666.7" y="357" width="0.7" height="15.0" fill="rgb(236,221,21)" rx="2" ry="2" />
<text  x="669.74" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (5 samples, 0.03%)</title><rect x="1161.5" y="453" width="0.4" height="15.0" fill="rgb(250,53,3)" rx="2" ry="2" />
<text  x="1164.53" y="463.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (62 samples, 0.34%)</title><rect x="136.9" y="485" width="4.0" height="15.0" fill="rgb(239,19,46)" rx="2" ry="2" />
<text  x="139.88" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt; (128 samples, 0.71%)</title><rect x="409.4" y="421" width="8.4" height="15.0" fill="rgb(236,38,10)" rx="2" ry="2" />
<text  x="412.45" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="134.1" y="389" width="0.2" height="15.0" fill="rgb(238,206,41)" rx="2" ry="2" />
<text  x="137.14" y="399.5" ></text>
</g>
<g >
<title>menu_select (15 samples, 0.08%)</title><rect x="1185.8" y="373" width="1.0" height="15.0" fill="rgb(227,152,10)" rx="2" ry="2" />
<text  x="1188.82" y="383.5" ></text>
</g>
<g >
<title>_start (2 samples, 0.01%)</title><rect x="1050.1" y="533" width="0.1" height="15.0" fill="rgb(210,122,29)" rx="2" ry="2" />
<text  x="1053.06" y="543.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (383 samples, 2.12%)</title><rect x="484.7" y="373" width="25.0" height="15.0" fill="rgb(247,60,6)" rx="2" ry="2" />
<text  x="487.68" y="383.5" >&lt;..</text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (9 samples, 0.05%)</title><rect x="450.7" y="309" width="0.6" height="15.0" fill="rgb(234,101,8)" rx="2" ry="2" />
<text  x="453.72" y="319.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (3 samples, 0.02%)</title><rect x="484.5" y="389" width="0.2" height="15.0" fill="rgb(244,101,14)" rx="2" ry="2" />
<text  x="487.48" y="399.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.02%)</title><rect x="325.7" y="373" width="0.2" height="15.0" fill="rgb(235,167,22)" rx="2" ry="2" />
<text  x="328.67" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.13%)</title><rect x="454.5" y="277" width="1.6" height="15.0" fill="rgb(237,52,31)" rx="2" ry="2" />
<text  x="457.51" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (277 samples, 1.53%)</title><rect x="528.1" y="373" width="18.1" height="15.0" fill="rgb(248,39,13)" rx="2" ry="2" />
<text  x="531.10" y="383.5" ></text>
</g>
<g >
<title>proactive_compact_node (6 samples, 0.03%)</title><rect x="28.0" y="485" width="0.3" height="15.0" fill="rgb(209,54,17)" rx="2" ry="2" />
<text  x="30.96" y="495.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (2 samples, 0.01%)</title><rect x="103.5" y="389" width="0.1" height="15.0" fill="rgb(234,49,9)" rx="2" ry="2" />
<text  x="106.51" y="399.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (59 samples, 0.33%)</title><rect x="465.3" y="325" width="3.8" height="15.0" fill="rgb(236,228,20)" rx="2" ry="2" />
<text  x="468.28" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.02%)</title><rect x="325.7" y="357" width="0.2" height="15.0" fill="rgb(234,157,43)" rx="2" ry="2" />
<text  x="328.67" y="367.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (844 samples, 4.67%)</title><rect x="1075.0" y="437" width="55.1" height="15.0" fill="rgb(237,138,28)" rx="2" ry="2" />
<text  x="1078.00" y="447.5" >cpuid..</text>
</g>
<g >
<title>menu_select (56 samples, 0.31%)</title><rect x="119.3" y="373" width="3.7" height="15.0" fill="rgb(238,93,33)" rx="2" ry="2" />
<text  x="122.31" y="383.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (7 samples, 0.04%)</title><rect x="80.6" y="373" width="0.4" height="15.0" fill="rgb(206,28,15)" rx="2" ry="2" />
<text  x="83.59" y="383.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (213 samples, 1.18%)</title><rect x="546.5" y="405" width="13.9" height="15.0" fill="rgb(249,103,18)" rx="2" ry="2" />
<text  x="549.45" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (78 samples, 0.43%)</title><rect x="396.9" y="421" width="5.1" height="15.0" fill="rgb(242,32,43)" rx="2" ry="2" />
<text  x="399.91" y="431.5" ></text>
</g>
<g >
<title>unmap_and_move (5 samples, 0.03%)</title><rect x="28.0" y="437" width="0.3" height="15.0" fill="rgb(244,0,2)" rx="2" ry="2" />
<text  x="30.96" y="447.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (5 samples, 0.03%)</title><rect x="75.6" y="421" width="0.3" height="15.0" fill="rgb(223,156,11)" rx="2" ry="2" />
<text  x="78.56" y="431.5" ></text>
</g>
<g >
<title>kick_ilb (85 samples, 0.47%)</title><rect x="92.6" y="389" width="5.6" height="15.0" fill="rgb(212,132,16)" rx="2" ry="2" />
<text  x="95.61" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (15 samples, 0.08%)</title><rect x="32.8" y="421" width="1.0" height="15.0" fill="rgb(210,5,28)" rx="2" ry="2" />
<text  x="35.79" y="431.5" ></text>
</g>
<g >
<title>kthread (13 samples, 0.07%)</title><rect x="1071.0" y="517" width="0.8" height="15.0" fill="rgb(212,105,43)" rx="2" ry="2" />
<text  x="1073.96" y="527.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (56 samples, 0.31%)</title><rect x="335.3" y="341" width="3.7" height="15.0" fill="rgb(222,108,31)" rx="2" ry="2" />
<text  x="338.33" y="351.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="237.2" y="101" width="0.2" height="15.0" fill="rgb(222,98,16)" rx="2" ry="2" />
<text  x="240.25" y="111.5" ></text>
</g>
<g >
<title>HandleStackContext (4 samples, 0.02%)</title><rect x="174.0" y="517" width="0.3" height="15.0" fill="rgb(212,199,23)" rx="2" ry="2" />
<text  x="177.04" y="527.5" ></text>
</g>
<g >
<title>cpuidle_reflect (2 samples, 0.01%)</title><rect x="1138.6" y="469" width="0.1" height="15.0" fill="rgb(244,216,21)" rx="2" ry="2" />
<text  x="1141.61" y="479.5" ></text>
</g>
<g >
<title>exc_page_fault (7 samples, 0.04%)</title><rect x="1019.2" y="501" width="0.5" height="15.0" fill="rgb(245,137,44)" rx="2" ry="2" />
<text  x="1022.24" y="511.5" ></text>
</g>
<g >
<title>vfs_iter_write (5 samples, 0.03%)</title><rect x="140.9" y="277" width="0.4" height="15.0" fill="rgb(221,166,48)" rx="2" ry="2" />
<text  x="143.93" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (7 samples, 0.04%)</title><rect x="332.2" y="341" width="0.5" height="15.0" fill="rgb(243,10,17)" rx="2" ry="2" />
<text  x="335.20" y="351.5" ></text>
</g>
<g >
<title>cpuidle_reflect (2 samples, 0.01%)</title><rect x="1130.3" y="453" width="0.1" height="15.0" fill="rgb(239,38,0)" rx="2" ry="2" />
<text  x="1133.31" y="463.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (5 samples, 0.03%)</title><rect x="509.7" y="405" width="0.3" height="15.0" fill="rgb(254,3,17)" rx="2" ry="2" />
<text  x="512.69" y="415.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (63 samples, 0.35%)</title><rect x="636.4" y="341" width="4.1" height="15.0" fill="rgb(219,141,31)" rx="2" ry="2" />
<text  x="639.37" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3 samples, 0.02%)</title><rect x="1075.5" y="357" width="0.2" height="15.0" fill="rgb(230,202,28)" rx="2" ry="2" />
<text  x="1078.53" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3 samples, 0.02%)</title><rect x="122.6" y="293" width="0.2" height="15.0" fill="rgb(219,176,20)" rx="2" ry="2" />
<text  x="125.65" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::consumer::Consumer&lt;u8&gt;&gt;&gt; (383 samples, 2.12%)</title><rect x="484.7" y="405" width="25.0" height="15.0" fill="rgb(236,176,46)" rx="2" ry="2" />
<text  x="487.68" y="415.5" >c..</text>
</g>
<g >
<title>NaClLog (25 samples, 0.14%)</title><rect x="289.0" y="437" width="1.6" height="15.0" fill="rgb(235,9,11)" rx="2" ry="2" />
<text  x="291.97" y="447.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (2,360 samples, 13.06%)</title><rect x="821.9" y="373" width="154.1" height="15.0" fill="rgb(225,197,6)" rx="2" ry="2" />
<text  x="824.89" y="383.5" >ringbuf::ring_buffe..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (68 samples, 0.38%)</title><rect x="357.9" y="341" width="4.4" height="15.0" fill="rgb(220,96,24)" rx="2" ry="2" />
<text  x="360.86" y="351.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (37 samples, 0.20%)</title><rect x="442.7" y="309" width="2.4" height="15.0" fill="rgb(213,142,26)" rx="2" ry="2" />
<text  x="445.69" y="319.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (2 samples, 0.01%)</title><rect x="1050.1" y="437" width="0.1" height="15.0" fill="rgb(253,119,33)" rx="2" ry="2" />
<text  x="1053.06" y="447.5" ></text>
</g>
<g >
<title>core::cmp::min (3 samples, 0.02%)</title><rect x="484.5" y="405" width="0.2" height="15.0" fill="rgb(242,169,30)" rx="2" ry="2" />
<text  x="487.48" y="415.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (2 samples, 0.01%)</title><rect x="1072.9" y="453" width="0.1" height="15.0" fill="rgb(234,142,48)" rx="2" ry="2" />
<text  x="1075.91" y="463.5" ></text>
</g>
<g >
<title>__lock_text_start (7 samples, 0.04%)</title><rect x="1134.9" y="389" width="0.4" height="15.0" fill="rgb(239,18,51)" rx="2" ry="2" />
<text  x="1137.89" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (278 samples, 1.54%)</title><rect x="1167.6" y="373" width="18.2" height="15.0" fill="rgb(244,6,16)" rx="2" ry="2" />
<text  x="1170.60" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (182 samples, 1.01%)</title><rect x="433.2" y="373" width="11.9" height="15.0" fill="rgb(228,61,51)" rx="2" ry="2" />
<text  x="436.22" y="383.5" ></text>
</g>
<g >
<title>lind_mmap (2 samples, 0.01%)</title><rect x="237.2" y="453" width="0.2" height="15.0" fill="rgb(224,218,29)" rx="2" ry="2" />
<text  x="240.25" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (90 samples, 0.50%)</title><rect x="310.2" y="421" width="5.9" height="15.0" fill="rgb(226,12,45)" rx="2" ry="2" />
<text  x="313.19" y="431.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.63%)</title><rect x="402.0" y="389" width="7.4" height="15.0" fill="rgb(215,129,43)" rx="2" ry="2" />
<text  x="405.01" y="399.5" ></text>
</g>
<g >
<title>cpuidle_not_available (3 samples, 0.02%)</title><rect x="1138.4" y="469" width="0.2" height="15.0" fill="rgb(253,12,45)" rx="2" ry="2" />
<text  x="1141.41" y="479.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.01%)</title><rect x="141.3" y="405" width="0.1" height="15.0" fill="rgb(207,79,3)" rx="2" ry="2" />
<text  x="144.26" y="415.5" ></text>
</g>
<g >
<title>cpuidle_enter (224 samples, 1.24%)</title><rect x="104.4" y="389" width="14.7" height="15.0" fill="rgb(205,202,42)" rx="2" ry="2" />
<text  x="107.43" y="399.5" ></text>
</g>
<g >
<title>NaClLog (22 samples, 0.12%)</title><rect x="277.9" y="469" width="1.5" height="15.0" fill="rgb(253,87,31)" rx="2" ry="2" />
<text  x="280.93" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4 samples, 0.02%)</title><rect x="32.9" y="341" width="0.2" height="15.0" fill="rgb(231,4,31)" rx="2" ry="2" />
<text  x="35.86" y="351.5" ></text>
</g>
<g >
<title>cpuidle_enter (651 samples, 3.60%)</title><rect x="31.9" y="453" width="42.6" height="15.0" fill="rgb(246,218,6)" rx="2" ry="2" />
<text  x="34.94" y="463.5" >cpui..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.04%)</title><rect x="363.1" y="389" width="0.4" height="15.0" fill="rgb(210,182,18)" rx="2" ry="2" />
<text  x="366.09" y="399.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (34 samples, 0.19%)</title><rect x="90.1" y="389" width="2.2" height="15.0" fill="rgb(235,9,30)" rx="2" ry="2" />
<text  x="93.13" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock (7 samples, 0.04%)</title><rect x="88.4" y="405" width="0.5" height="15.0" fill="rgb(238,33,18)" rx="2" ry="2" />
<text  x="91.43" y="415.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.01%)</title><rect x="1050.1" y="373" width="0.1" height="15.0" fill="rgb(220,215,47)" rx="2" ry="2" />
<text  x="1053.06" y="383.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (12 samples, 0.07%)</title><rect x="121.3" y="341" width="0.8" height="15.0" fill="rgb(220,200,27)" rx="2" ry="2" />
<text  x="124.27" y="351.5" ></text>
</g>
<g >
<title>__perf_event_enable (2 samples, 0.01%)</title><rect x="141.3" y="341" width="0.1" height="15.0" fill="rgb(207,71,47)" rx="2" ry="2" />
<text  x="144.26" y="351.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.02%)</title><rect x="420.2" y="325" width="0.2" height="15.0" fill="rgb(227,174,50)" rx="2" ry="2" />
<text  x="423.22" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (97 samples, 0.54%)</title><rect x="469.1" y="357" width="6.4" height="15.0" fill="rgb(206,51,16)" rx="2" ry="2" />
<text  x="472.14" y="367.5" ></text>
</g>
<g >
<title>event_function_call (62 samples, 0.34%)</title><rect x="136.9" y="325" width="4.0" height="15.0" fill="rgb(229,16,37)" rx="2" ry="2" />
<text  x="139.88" y="335.5" ></text>
</g>
<g >
<title>dispatcher (2 samples, 0.01%)</title><rect x="237.2" y="437" width="0.2" height="15.0" fill="rgb(208,1,13)" rx="2" ry="2" />
<text  x="240.25" y="447.5" ></text>
</g>
<g >
<title>[unknown] (67 samples, 0.37%)</title><rect x="136.9" y="533" width="4.4" height="15.0" fill="rgb(205,205,15)" rx="2" ry="2" />
<text  x="139.88" y="543.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="104.8" y="309" width="0.1" height="15.0" fill="rgb(250,221,15)" rx="2" ry="2" />
<text  x="107.82" y="319.5" ></text>
</g>
<g >
<title>pick_next_task_fair (23 samples, 0.13%)</title><rect x="1187.8" y="373" width="1.5" height="15.0" fill="rgb(223,159,10)" rx="2" ry="2" />
<text  x="1190.85" y="383.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.03%)</title><rect x="339.4" y="373" width="0.4" height="15.0" fill="rgb(234,31,30)" rx="2" ry="2" />
<text  x="342.45" y="383.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (2 samples, 0.01%)</title><rect x="78.0" y="405" width="0.2" height="15.0" fill="rgb(251,194,46)" rx="2" ry="2" />
<text  x="81.04" y="415.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.08%)</title><rect x="435.5" y="309" width="1.0" height="15.0" fill="rgb(212,178,51)" rx="2" ry="2" />
<text  x="438.51" y="319.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (3 samples, 0.02%)</title><rect x="1189.2" y="309" width="0.1" height="15.0" fill="rgb(246,195,19)" rx="2" ry="2" />
<text  x="1192.15" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_idle_got_tick (2 samples, 0.01%)</title><rect x="119.1" y="357" width="0.1" height="15.0" fill="rgb(220,174,41)" rx="2" ry="2" />
<text  x="122.12" y="367.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (515 samples, 2.85%)</title><rect x="103.2" y="517" width="33.6" height="15.0" fill="rgb(246,119,34)" rx="2" ry="2" />
<text  x="106.19" y="527.5" >x8..</text>
</g>
<g >
<title>generic_exec_single (62 samples, 0.34%)</title><rect x="136.9" y="293" width="4.0" height="15.0" fill="rgb(224,49,43)" rx="2" ry="2" />
<text  x="139.88" y="303.5" ></text>
</g>
<g >
<title>sched_clock_cpu (10 samples, 0.06%)</title><rect x="73.3" y="421" width="0.6" height="15.0" fill="rgb(224,170,18)" rx="2" ry="2" />
<text  x="76.28" y="431.5" ></text>
</g>
<g >
<title>generic_exec_single (12 samples, 0.07%)</title><rect x="131.2" y="293" width="0.8" height="15.0" fill="rgb(222,174,20)" rx="2" ry="2" />
<text  x="134.20" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (277 samples, 1.53%)</title><rect x="528.1" y="357" width="18.1" height="15.0" fill="rgb(250,86,13)" rx="2" ry="2" />
<text  x="531.10" y="367.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (122 samples, 0.68%)</title><rect x="316.4" y="405" width="8.0" height="15.0" fill="rgb(223,178,41)" rx="2" ry="2" />
<text  x="319.40" y="415.5" ></text>
</g>
<g >
<title>rcu_idle_exit (28 samples, 0.15%)</title><rect x="1127.4" y="421" width="1.8" height="15.0" fill="rgb(236,170,45)" rx="2" ry="2" />
<text  x="1130.38" y="431.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (168 samples, 0.93%)</title><rect x="452.2" y="341" width="10.9" height="15.0" fill="rgb(241,73,21)" rx="2" ry="2" />
<text  x="455.16" y="351.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (76 samples, 0.42%)</title><rect x="352.6" y="325" width="4.9" height="15.0" fill="rgb(250,118,2)" rx="2" ry="2" />
<text  x="355.57" y="335.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (18 samples, 0.10%)</title><rect x="1157.2" y="341" width="1.2" height="15.0" fill="rgb(216,197,27)" rx="2" ry="2" />
<text  x="1160.22" y="351.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (4 samples, 0.02%)</title><rect x="265.0" y="453" width="0.3" height="15.0" fill="rgb(237,202,2)" rx="2" ry="2" />
<text  x="268.00" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::cage::CAGE_TABLE (12 samples, 0.07%)</title><rect x="1050.3" y="533" width="0.7" height="15.0" fill="rgb(240,207,21)" rx="2" ry="2" />
<text  x="1053.25" y="543.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (81 samples, 0.45%)</title><rect x="352.6" y="341" width="5.3" height="15.0" fill="rgb(231,48,15)" rx="2" ry="2" />
<text  x="355.57" y="351.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (62 samples, 0.34%)</title><rect x="136.9" y="357" width="4.0" height="15.0" fill="rgb(211,51,1)" rx="2" ry="2" />
<text  x="139.88" y="367.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (347 samples, 1.92%)</title><rect x="1167.3" y="501" width="22.7" height="15.0" fill="rgb(222,142,34)" rx="2" ry="2" />
<text  x="1170.34" y="511.5" >x..</text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (21 samples, 0.12%)</title><rect x="205.8" y="501" width="1.4" height="15.0" fill="rgb(224,58,16)" rx="2" ry="2" />
<text  x="208.84" y="511.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (4 samples, 0.02%)</title><rect x="1075.8" y="357" width="0.2" height="15.0" fill="rgb(233,208,41)" rx="2" ry="2" />
<text  x="1078.79" y="367.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (21 samples, 0.12%)</title><rect x="1188.0" y="341" width="1.3" height="15.0" fill="rgb(220,76,42)" rx="2" ry="2" />
<text  x="1190.98" y="351.5" ></text>
</g>
<g >
<title>sched_clock_cpu (7 samples, 0.04%)</title><rect x="1126.4" y="405" width="0.5" height="15.0" fill="rgb(211,51,31)" rx="2" ry="2" />
<text  x="1129.40" y="415.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (6 samples, 0.03%)</title><rect x="1021.8" y="517" width="0.4" height="15.0" fill="rgb(232,74,43)" rx="2" ry="2" />
<text  x="1024.85" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (65 samples, 0.36%)</title><rect x="1133.4" y="421" width="4.3" height="15.0" fill="rgb(223,134,1)" rx="2" ry="2" />
<text  x="1136.45" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (182 samples, 1.01%)</title><rect x="433.2" y="341" width="11.9" height="15.0" fill="rgb(238,115,38)" rx="2" ry="2" />
<text  x="436.22" y="351.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (105 samples, 0.58%)</title><rect x="629.5" y="341" width="6.9" height="15.0" fill="rgb(229,155,0)" rx="2" ry="2" />
<text  x="632.52" y="351.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (3 samples, 0.02%)</title><rect x="335.1" y="325" width="0.2" height="15.0" fill="rgb(214,31,28)" rx="2" ry="2" />
<text  x="338.14" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::likely (16 samples, 0.09%)</title><rect x="473.6" y="309" width="1.0" height="15.0" fill="rgb(224,182,43)" rx="2" ry="2" />
<text  x="476.58" y="319.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.01%)</title><rect x="27.8" y="453" width="0.1" height="15.0" fill="rgb(244,11,40)" rx="2" ry="2" />
<text  x="30.76" y="463.5" ></text>
</g>
<g >
<title>kick_ilb (86 samples, 0.48%)</title><rect x="1154.5" y="389" width="5.6" height="15.0" fill="rgb(241,173,47)" rx="2" ry="2" />
<text  x="1157.48" y="399.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (22 samples, 0.12%)</title><rect x="1165.6" y="485" width="1.5" height="15.0" fill="rgb(220,129,10)" rx="2" ry="2" />
<text  x="1168.64" y="495.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (5 samples, 0.03%)</title><rect x="140.9" y="245" width="0.4" height="15.0" fill="rgb(253,98,38)" rx="2" ry="2" />
<text  x="143.93" y="255.5" ></text>
</g>
<g >
<title>menu_update (5 samples, 0.03%)</title><rect x="1132.9" y="421" width="0.4" height="15.0" fill="rgb(235,203,22)" rx="2" ry="2" />
<text  x="1135.93" y="431.5" ></text>
</g>
<g >
<title>run_timer_softirq (5 samples, 0.03%)</title><rect x="33.4" y="325" width="0.4" height="15.0" fill="rgb(232,169,49)" rx="2" ry="2" />
<text  x="36.44" y="335.5" ></text>
</g>
<g >
<title>core::mem::drop (115 samples, 0.64%)</title><rect x="389.1" y="421" width="7.6" height="15.0" fill="rgb(234,29,35)" rx="2" ry="2" />
<text  x="392.14" y="431.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (3 samples, 0.02%)</title><rect x="1071.8" y="485" width="0.2" height="15.0" fill="rgb(210,172,9)" rx="2" ry="2" />
<text  x="1074.80" y="495.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (102 samples, 0.56%)</title><rect x="1138.8" y="469" width="6.7" height="15.0" fill="rgb(219,132,20)" rx="2" ry="2" />
<text  x="1141.80" y="479.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (105 samples, 0.58%)</title><rect x="629.5" y="357" width="6.9" height="15.0" fill="rgb(225,127,4)" rx="2" ry="2" />
<text  x="632.52" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (46 samples, 0.25%)</title><rect x="465.3" y="261" width="3.0" height="15.0" fill="rgb(251,82,22)" rx="2" ry="2" />
<text  x="468.28" y="271.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (462 samples, 2.56%)</title><rect x="516.0" y="389" width="30.2" height="15.0" fill="rgb(232,41,42)" rx="2" ry="2" />
<text  x="519.02" y="399.5" >ri..</text>
</g>
<g >
<title>NaClStartThreadInApp (2 samples, 0.01%)</title><rect x="1049.9" y="485" width="0.2" height="15.0" fill="rgb(246,185,45)" rx="2" ry="2" />
<text  x="1052.93" y="495.5" ></text>
</g>
<g >
<title>newidle_balance (187 samples, 1.03%)</title><rect x="1147.9" y="421" width="12.2" height="15.0" fill="rgb(239,12,21)" rx="2" ry="2" />
<text  x="1150.88" y="431.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (59 samples, 0.33%)</title><rect x="465.3" y="341" width="3.8" height="15.0" fill="rgb(247,31,16)" rx="2" ry="2" />
<text  x="468.28" y="351.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (700 samples, 3.87%)</title><rect x="744.4" y="373" width="45.7" height="15.0" fill="rgb(232,108,42)" rx="2" ry="2" />
<text  x="747.38" y="383.5" >rust..</text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="237.2" y="85" width="0.2" height="15.0" fill="rgb(235,112,11)" rx="2" ry="2" />
<text  x="240.25" y="95.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (2 samples, 0.01%)</title><rect x="237.2" y="293" width="0.2" height="15.0" fill="rgb(227,67,11)" rx="2" ry="2" />
<text  x="240.25" y="303.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (5 samples, 0.03%)</title><rect x="1046.9" y="453" width="0.3" height="15.0" fill="rgb(236,114,0)" rx="2" ry="2" />
<text  x="1049.86" y="463.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (787 samples, 4.36%)</title><rect x="30.0" y="469" width="51.4" height="15.0" fill="rgb(228,79,47)" rx="2" ry="2" />
<text  x="32.98" y="479.5" >cpuid..</text>
</g>
<g >
<title>ion (5 samples, 0.03%)</title><rect x="140.9" y="421" width="0.4" height="15.0" fill="rgb(246,35,33)" rx="2" ry="2" />
<text  x="143.93" y="431.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (15 samples, 0.08%)</title><rect x="32.8" y="405" width="1.0" height="15.0" fill="rgb(254,80,43)" rx="2" ry="2" />
<text  x="35.79" y="415.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (16 samples, 0.09%)</title><rect x="167.5" y="453" width="1.1" height="15.0" fill="rgb(254,137,5)" rx="2" ry="2" />
<text  x="170.51" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (114 samples, 0.63%)</title><rect x="402.0" y="357" width="7.4" height="15.0" fill="rgb(244,160,12)" rx="2" ry="2" />
<text  x="405.01" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="341.5" y="293" width="0.2" height="15.0" fill="rgb(225,88,25)" rx="2" ry="2" />
<text  x="344.47" y="303.5" ></text>
</g>
<g >
<title>cpumask_next (2 samples, 0.01%)</title><rect x="1188.6" y="309" width="0.2" height="15.0" fill="rgb(209,59,2)" rx="2" ry="2" />
<text  x="1191.63" y="319.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (4 samples, 0.02%)</title><rect x="475.5" y="405" width="0.2" height="15.0" fill="rgb(209,91,5)" rx="2" ry="2" />
<text  x="478.47" y="415.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (56 samples, 0.31%)</title><rect x="734.5" y="357" width="3.6" height="15.0" fill="rgb(250,160,39)" rx="2" ry="2" />
<text  x="737.46" y="367.5" ></text>
</g>
<g >
<title>sched_clock_cpu (7 samples, 0.04%)</title><rect x="1163.5" y="437" width="0.4" height="15.0" fill="rgb(244,54,28)" rx="2" ry="2" />
<text  x="1166.49" y="447.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (4 samples, 0.02%)</title><rect x="1023.1" y="517" width="0.3" height="15.0" fill="rgb(219,173,18)" rx="2" ry="2" />
<text  x="1026.09" y="527.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.01%)</title><rect x="361.9" y="309" width="0.1" height="15.0" fill="rgb(246,216,12)" rx="2" ry="2" />
<text  x="364.91" y="319.5" ></text>
</g>
<g >
<title>CompareAndSwap (297 samples, 1.64%)</title><rect x="212.8" y="485" width="19.4" height="15.0" fill="rgb(222,223,27)" rx="2" ry="2" />
<text  x="215.83" y="495.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,143 samples, 6.33%)</title><rect x="28.5" y="501" width="74.7" height="15.0" fill="rgb(250,169,5)" rx="2" ry="2" />
<text  x="31.55" y="511.5" >cpu_star..</text>
</g>
<g >
<title>arch_cpu_idle_enter (2 samples, 0.01%)</title><rect x="29.8" y="469" width="0.1" height="15.0" fill="rgb(214,83,52)" rx="2" ry="2" />
<text  x="32.79" y="479.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (124 samples, 0.69%)</title><rect x="409.7" y="389" width="8.1" height="15.0" fill="rgb(249,179,16)" rx="2" ry="2" />
<text  x="412.71" y="399.5" ></text>
</g>
<g >
<title>record__pushfn (5 samples, 0.03%)</title><rect x="140.9" y="453" width="0.4" height="15.0" fill="rgb(253,88,26)" rx="2" ry="2" />
<text  x="143.93" y="463.5" ></text>
</g>
<g >
<title>poll_idle (372 samples, 2.06%)</title><rect x="1102.6" y="421" width="24.3" height="15.0" fill="rgb(223,91,46)" rx="2" ry="2" />
<text  x="1105.56" y="431.5" >p..</text>
</g>
<g >
<title>pick_next_task_fair (109 samples, 0.60%)</title><rect x="126.6" y="373" width="7.1" height="15.0" fill="rgb(205,47,15)" rx="2" ry="2" />
<text  x="129.56" y="383.5" ></text>
</g>
<g >
<title>menu_reflect (2 samples, 0.01%)</title><rect x="1130.3" y="437" width="0.1" height="15.0" fill="rgb(241,127,42)" rx="2" ry="2" />
<text  x="1133.31" y="447.5" ></text>
</g>
<g >
<title>schedule_idle (246 samples, 1.36%)</title><rect x="1146.0" y="469" width="16.1" height="15.0" fill="rgb(217,141,40)" rx="2" ry="2" />
<text  x="1148.99" y="479.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (869 samples, 4.81%)</title><rect x="677.7" y="341" width="56.8" height="15.0" fill="rgb(228,67,18)" rx="2" ry="2" />
<text  x="680.71" y="351.5" >core::..</text>
</g>
<g >
<title>write (5 samples, 0.03%)</title><rect x="140.9" y="405" width="0.4" height="15.0" fill="rgb(251,168,4)" rx="2" ry="2" />
<text  x="143.93" y="415.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (2 samples, 0.01%)</title><rect x="1019.5" y="405" width="0.1" height="15.0" fill="rgb(217,78,11)" rx="2" ry="2" />
<text  x="1022.50" y="415.5" ></text>
</g>
<g >
<title>kick_ilb (60 samples, 0.33%)</title><rect x="129.6" y="325" width="3.9" height="15.0" fill="rgb(229,195,16)" rx="2" ry="2" />
<text  x="132.57" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="1135.3" y="389" width="0.2" height="15.0" fill="rgb(209,28,32)" rx="2" ry="2" />
<text  x="1138.34" y="399.5" ></text>
</g>
<g >
<title>get_cpu_device (3 samples, 0.02%)</title><rect x="1132.1" y="405" width="0.2" height="15.0" fill="rgb(222,38,41)" rx="2" ry="2" />
<text  x="1135.08" y="415.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (103 samples, 0.57%)</title><rect x="325.9" y="389" width="6.8" height="15.0" fill="rgb(254,101,2)" rx="2" ry="2" />
<text  x="328.93" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.02%)</title><rect x="78.8" y="389" width="0.3" height="15.0" fill="rgb(251,147,0)" rx="2" ry="2" />
<text  x="81.83" y="399.5" ></text>
</g>
<g >
<title>[[heap]] (6 samples, 0.03%)</title><rect x="142.0" y="533" width="0.4" height="15.0" fill="rgb(249,125,42)" rx="2" ry="2" />
<text  x="145.04" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.06%)</title><rect x="456.1" y="277" width="0.7" height="15.0" fill="rgb(228,14,4)" rx="2" ry="2" />
<text  x="459.08" y="287.5" ></text>
</g>
<g >
<title>timerqueue_iterate_next (2 samples, 0.01%)</title><rect x="121.6" y="309" width="0.1" height="15.0" fill="rgb(250,154,4)" rx="2" ry="2" />
<text  x="124.60" y="319.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (2 samples, 0.01%)</title><rect x="1071.3" y="293" width="0.2" height="15.0" fill="rgb(232,137,24)" rx="2" ry="2" />
<text  x="1074.35" y="303.5" ></text>
</g>
<g >
<title>dispatcher@plt (6 samples, 0.03%)</title><rect x="560.6" y="453" width="0.3" height="15.0" fill="rgb(211,141,20)" rx="2" ry="2" />
<text  x="563.56" y="463.5" ></text>
</g>
<g >
<title>dispatcher (22 samples, 0.12%)</title><rect x="147.4" y="517" width="1.4" height="15.0" fill="rgb(223,4,53)" rx="2" ry="2" />
<text  x="150.39" y="527.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (6 samples, 0.03%)</title><rect x="1046.1" y="517" width="0.4" height="15.0" fill="rgb(254,113,14)" rx="2" ry="2" />
<text  x="1049.14" y="527.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (69 samples, 0.38%)</title><rect x="200.5" y="485" width="4.5" height="15.0" fill="rgb(219,11,29)" rx="2" ry="2" />
<text  x="203.48" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="27.4" y="517" width="0.5" height="15.0" fill="rgb(209,129,1)" rx="2" ry="2" />
<text  x="30.44" y="527.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (213 samples, 1.18%)</title><rect x="546.5" y="389" width="13.9" height="15.0" fill="rgb(205,102,50)" rx="2" ry="2" />
<text  x="549.45" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function (2 samples, 0.01%)</title><rect x="636.2" y="325" width="0.2" height="15.0" fill="rgb(249,93,13)" rx="2" ry="2" />
<text  x="639.24" y="335.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (3 samples, 0.02%)</title><rect x="175.5" y="517" width="0.2" height="15.0" fill="rgb(254,168,39)" rx="2" ry="2" />
<text  x="178.47" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_restart (4 samples, 0.02%)</title><rect x="101.2" y="453" width="0.3" height="15.0" fill="rgb(252,78,11)" rx="2" ry="2" />
<text  x="104.23" y="463.5" ></text>
</g>
<g >
<title>dispatcher (6,356 samples, 35.17%)</title><rect x="560.9" y="453" width="415.1" height="15.0" fill="rgb(212,18,9)" rx="2" ry="2" />
<text  x="563.95" y="463.5" >dispatcher</text>
</g>
<g >
<title>proactive_compact_node (8 samples, 0.04%)</title><rect x="1071.0" y="485" width="0.5" height="15.0" fill="rgb(234,227,23)" rx="2" ry="2" />
<text  x="1074.02" y="495.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (7 samples, 0.04%)</title><rect x="790.1" y="373" width="0.5" height="15.0" fill="rgb(246,85,52)" rx="2" ry="2" />
<text  x="793.09" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="1075.5" y="373" width="0.2" height="15.0" fill="rgb(218,223,39)" rx="2" ry="2" />
<text  x="1078.53" y="383.5" ></text>
</g>
<g >
<title>rcu_idle_enter (7 samples, 0.04%)</title><rect x="1126.9" y="421" width="0.5" height="15.0" fill="rgb(242,122,45)" rx="2" ry="2" />
<text  x="1129.92" y="431.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (7 samples, 0.04%)</title><rect x="1048.4" y="517" width="0.5" height="15.0" fill="rgb(244,226,45)" rx="2" ry="2" />
<text  x="1051.43" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (11 samples, 0.06%)</title><rect x="1129.3" y="405" width="0.7" height="15.0" fill="rgb(207,215,27)" rx="2" ry="2" />
<text  x="1132.27" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (121 samples, 0.67%)</title><rect x="316.5" y="373" width="7.9" height="15.0" fill="rgb(216,199,44)" rx="2" ry="2" />
<text  x="319.46" y="383.5" ></text>
</g>
<g >
<title>do_idle (1,118 samples, 6.19%)</title><rect x="28.5" y="485" width="73.1" height="15.0" fill="rgb(220,25,2)" rx="2" ry="2" />
<text  x="31.55" y="495.5" >do_idle</text>
</g>
<g >
<title>menu_update (2 samples, 0.01%)</title><rect x="1186.1" y="357" width="0.2" height="15.0" fill="rgb(230,204,26)" rx="2" ry="2" />
<text  x="1189.15" y="367.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.01%)</title><rect x="1050.1" y="517" width="0.1" height="15.0" fill="rgb(228,187,4)" rx="2" ry="2" />
<text  x="1053.06" y="527.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (13 samples, 0.07%)</title><rect x="1048.9" y="517" width="0.8" height="15.0" fill="rgb(232,60,45)" rx="2" ry="2" />
<text  x="1051.88" y="527.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (7 samples, 0.04%)</title><rect x="32.8" y="389" width="0.4" height="15.0" fill="rgb(227,159,12)" rx="2" ry="2" />
<text  x="35.79" y="399.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (67 samples, 0.37%)</title><rect x="446.9" y="325" width="4.4" height="15.0" fill="rgb(212,129,27)" rx="2" ry="2" />
<text  x="449.93" y="335.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.01%)</title><rect x="1185.3" y="357" width="0.1" height="15.0" fill="rgb(236,136,54)" rx="2" ry="2" />
<text  x="1188.30" y="367.5" ></text>
</g>
<g >
<title>ksys_write (2 samples, 0.01%)</title><rect x="27.8" y="485" width="0.1" height="15.0" fill="rgb(225,119,12)" rx="2" ry="2" />
<text  x="30.76" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.06%)</title><rect x="436.5" y="309" width="0.6" height="15.0" fill="rgb(234,91,54)" rx="2" ry="2" />
<text  x="439.48" y="319.5" ></text>
</g>
<g >
<title>record__mmap_read_all (5 samples, 0.03%)</title><rect x="140.9" y="501" width="0.4" height="15.0" fill="rgb(250,40,38)" rx="2" ry="2" />
<text  x="143.93" y="511.5" ></text>
</g>
<g >
<title>run_rebalance_domains (3 samples, 0.02%)</title><rect x="33.2" y="325" width="0.2" height="15.0" fill="rgb(252,194,40)" rx="2" ry="2" />
<text  x="36.25" y="335.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (10 samples, 0.06%)</title><rect x="246.1" y="485" width="0.7" height="15.0" fill="rgb(226,211,49)" rx="2" ry="2" />
<text  x="249.13" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (62 samples, 0.34%)</title><rect x="136.9" y="421" width="4.0" height="15.0" fill="rgb(210,143,3)" rx="2" ry="2" />
<text  x="139.88" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.04%)</title><rect x="790.1" y="389" width="0.5" height="15.0" fill="rgb(232,3,26)" rx="2" ry="2" />
<text  x="793.09" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (6 samples, 0.03%)</title><rect x="361.0" y="309" width="0.4" height="15.0" fill="rgb(223,80,2)" rx="2" ry="2" />
<text  x="364.00" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.03%)</title><rect x="347.3" y="293" width="0.4" height="15.0" fill="rgb(209,205,6)" rx="2" ry="2" />
<text  x="350.35" y="303.5" ></text>
</g>
<g >
<title>call_timer_fn (4 samples, 0.02%)</title><rect x="33.5" y="293" width="0.3" height="15.0" fill="rgb(247,143,52)" rx="2" ry="2" />
<text  x="36.51" y="303.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (115 samples, 0.64%)</title><rect x="437.6" y="325" width="7.5" height="15.0" fill="rgb(253,203,42)" rx="2" ry="2" />
<text  x="440.59" y="335.5" ></text>
</g>
<g >
<title>__evlist__enable (62 samples, 0.34%)</title><rect x="136.9" y="501" width="4.0" height="15.0" fill="rgb(231,110,54)" rx="2" ry="2" />
<text  x="139.88" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (111 samples, 0.61%)</title><rect x="389.4" y="325" width="7.3" height="15.0" fill="rgb(211,184,11)" rx="2" ry="2" />
<text  x="392.40" y="335.5" ></text>
</g>
<g >
<title>update_rq_clock (3 samples, 0.02%)</title><rect x="1189.3" y="373" width="0.2" height="15.0" fill="rgb(243,206,54)" rx="2" ry="2" />
<text  x="1192.35" y="383.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (11 samples, 0.06%)</title><rect x="146.5" y="501" width="0.8" height="15.0" fill="rgb(250,71,25)" rx="2" ry="2" />
<text  x="149.55" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (115 samples, 0.64%)</title><rect x="389.1" y="389" width="7.6" height="15.0" fill="rgb(245,96,4)" rx="2" ry="2" />
<text  x="392.14" y="399.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (2,150 samples, 11.90%)</title><rect x="604.0" y="373" width="140.4" height="15.0" fill="rgb(215,49,32)" rx="2" ry="2" />
<text  x="606.98" y="383.5" >ringbuf::producer..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (83 samples, 0.46%)</title><rect x="333.6" y="357" width="5.4" height="15.0" fill="rgb(215,123,31)" rx="2" ry="2" />
<text  x="336.57" y="367.5" ></text>
</g>
<g >
<title>rmap_walk (3 samples, 0.02%)</title><rect x="1071.3" y="389" width="0.2" height="15.0" fill="rgb(209,41,16)" rx="2" ry="2" />
<text  x="1074.28" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.05%)</title><rect x="470.6" y="293" width="0.6" height="15.0" fill="rgb(241,188,34)" rx="2" ry="2" />
<text  x="473.57" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (214 samples, 1.18%)</title><rect x="374.2" y="405" width="14.0" height="15.0" fill="rgb(245,61,27)" rx="2" ry="2" />
<text  x="377.19" y="415.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (5 samples, 0.03%)</title><rect x="140.9" y="485" width="0.4" height="15.0" fill="rgb(222,56,29)" rx="2" ry="2" />
<text  x="143.93" y="495.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (67 samples, 0.37%)</title><rect x="446.9" y="341" width="4.4" height="15.0" fill="rgb(248,57,20)" rx="2" ry="2" />
<text  x="449.93" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (58 samples, 0.32%)</title><rect x="446.9" y="293" width="3.8" height="15.0" fill="rgb(208,102,36)" rx="2" ry="2" />
<text  x="449.93" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.04%)</title><rect x="358.2" y="309" width="0.5" height="15.0" fill="rgb(213,136,46)" rx="2" ry="2" />
<text  x="361.19" y="319.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (12 samples, 0.07%)</title><rect x="123.4" y="389" width="0.8" height="15.0" fill="rgb(221,216,20)" rx="2" ry="2" />
<text  x="126.43" y="399.5" ></text>
</g>
<g >
<title>[sel_ldr] (538 samples, 2.98%)</title><rect x="984.1" y="517" width="35.1" height="15.0" fill="rgb(240,90,33)" rx="2" ry="2" />
<text  x="987.10" y="527.5" >[s..</text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.01%)</title><rect x="1050.1" y="469" width="0.1" height="15.0" fill="rgb(250,211,46)" rx="2" ry="2" />
<text  x="1053.06" y="479.5" ></text>
</g>
<g >
<title>smp_call_function_single (62 samples, 0.34%)</title><rect x="136.9" y="309" width="4.0" height="15.0" fill="rgb(233,50,46)" rx="2" ry="2" />
<text  x="139.88" y="319.5" ></text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (2 samples, 0.01%)</title><rect x="1050.1" y="421" width="0.1" height="15.0" fill="rgb(214,220,48)" rx="2" ry="2" />
<text  x="1053.06" y="431.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,658 samples, 9.18%)</title><rect x="28.5" y="533" width="108.3" height="15.0" fill="rgb(239,5,25)" rx="2" ry="2" />
<text  x="31.55" y="543.5" >secondary_sta..</text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="347.7" y="293" width="0.2" height="15.0" fill="rgb(246,154,54)" rx="2" ry="2" />
<text  x="350.74" y="303.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (113 samples, 0.63%)</title><rect x="552.4" y="357" width="7.4" height="15.0" fill="rgb(234,224,32)" rx="2" ry="2" />
<text  x="555.40" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (46 samples, 0.25%)</title><rect x="465.3" y="277" width="3.0" height="15.0" fill="rgb(237,178,30)" rx="2" ry="2" />
<text  x="468.28" y="287.5" ></text>
</g>
<g >
<title>do_iter_write (5 samples, 0.03%)</title><rect x="140.9" y="261" width="0.4" height="15.0" fill="rgb(208,223,21)" rx="2" ry="2" />
<text  x="143.93" y="271.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (5 samples, 0.03%)</title><rect x="362.8" y="421" width="0.3" height="15.0" fill="rgb(248,48,32)" rx="2" ry="2" />
<text  x="365.76" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="551.8" y="341" width="0.1" height="15.0" fill="rgb(208,207,1)" rx="2" ry="2" />
<text  x="554.81" y="351.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (142 samples, 0.79%)</title><rect x="88.9" y="405" width="9.3" height="15.0" fill="rgb(216,75,13)" rx="2" ry="2" />
<text  x="91.88" y="415.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.01%)</title><rect x="1075.9" y="309" width="0.1" height="15.0" fill="rgb(250,214,54)" rx="2" ry="2" />
<text  x="1078.85" y="319.5" ></text>
</g>
<g >
<title>[anon] (435 samples, 2.41%)</title><rect x="142.4" y="533" width="28.4" height="15.0" fill="rgb(211,163,13)" rx="2" ry="2" />
<text  x="145.43" y="543.5" >[a..</text>
</g>
<g >
<title>menu_select (115 samples, 0.64%)</title><rect x="1130.5" y="437" width="7.5" height="15.0" fill="rgb(244,84,41)" rx="2" ry="2" />
<text  x="1133.51" y="447.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="1071.3" y="325" width="0.2" height="15.0" fill="rgb(249,7,49)" rx="2" ry="2" />
<text  x="1074.35" y="335.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (10 samples, 0.06%)</title><rect x="131.3" y="277" width="0.7" height="15.0" fill="rgb(236,218,49)" rx="2" ry="2" />
<text  x="134.33" y="287.5" ></text>
</g>
<g >
<title>update_rq_clock (5 samples, 0.03%)</title><rect x="133.8" y="373" width="0.3" height="15.0" fill="rgb(227,38,46)" rx="2" ry="2" />
<text  x="136.81" y="383.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.01%)</title><rect x="27.8" y="469" width="0.1" height="15.0" fill="rgb(230,156,14)" rx="2" ry="2" />
<text  x="30.76" y="479.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (272 samples, 1.51%)</title><rect x="150.8" y="501" width="17.8" height="15.0" fill="rgb(244,46,11)" rx="2" ry="2" />
<text  x="153.79" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (28 samples, 0.15%)</title><rect x="121.0" y="357" width="1.8" height="15.0" fill="rgb(248,55,1)" rx="2" ry="2" />
<text  x="124.01" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (23 samples, 0.13%)</title><rect x="101.6" y="485" width="1.5" height="15.0" fill="rgb(217,197,50)" rx="2" ry="2" />
<text  x="104.55" y="495.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.03%)</title><rect x="361.0" y="261" width="0.4" height="15.0" fill="rgb(224,54,4)" rx="2" ry="2" />
<text  x="364.00" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (27 samples, 0.15%)</title><rect x="79.4" y="405" width="1.7" height="15.0" fill="rgb(231,203,9)" rx="2" ry="2" />
<text  x="82.35" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (4 samples, 0.02%)</title><rect x="1186.5" y="341" width="0.3" height="15.0" fill="rgb(226,171,25)" rx="2" ry="2" />
<text  x="1189.54" y="351.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (19 samples, 0.11%)</title><rect x="337.7" y="325" width="1.3" height="15.0" fill="rgb(243,216,3)" rx="2" ry="2" />
<text  x="340.75" y="335.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (6 samples, 0.03%)</title><rect x="122.4" y="325" width="0.4" height="15.0" fill="rgb(238,90,21)" rx="2" ry="2" />
<text  x="125.45" y="335.5" ></text>
</g>
<g >
<title>menu_reflect (3 samples, 0.02%)</title><rect x="119.1" y="373" width="0.1" height="15.0" fill="rgb(224,166,0)" rx="2" ry="2" />
<text  x="122.05" y="383.5" ></text>
</g>
<g >
<title>__schedule (127 samples, 0.70%)</title><rect x="125.8" y="389" width="8.3" height="15.0" fill="rgb(252,57,36)" rx="2" ry="2" />
<text  x="128.85" y="399.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (11 samples, 0.06%)</title><rect x="358.7" y="325" width="0.7" height="15.0" fill="rgb(207,151,13)" rx="2" ry="2" />
<text  x="361.71" y="335.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (4 samples, 0.02%)</title><rect x="344.9" y="341" width="0.2" height="15.0" fill="rgb(215,113,40)" rx="2" ry="2" />
<text  x="347.87" y="351.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (67 samples, 0.37%)</title><rect x="446.9" y="357" width="4.4" height="15.0" fill="rgb(216,195,34)" rx="2" ry="2" />
<text  x="449.93" y="367.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="104.8" y="325" width="0.1" height="15.0" fill="rgb(230,225,35)" rx="2" ry="2" />
<text  x="107.82" y="335.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (6 samples, 0.03%)</title><rect x="170.4" y="501" width="0.4" height="15.0" fill="rgb(244,60,1)" rx="2" ry="2" />
<text  x="173.45" y="511.5" ></text>
</g>
<g >
<title>NaClSysRead (4,799 samples, 26.56%)</title><rect x="247.6" y="485" width="313.3" height="15.0" fill="rgb(242,226,24)" rx="2" ry="2" />
<text  x="250.57" y="495.5" >NaClSysRead</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (21 samples, 0.12%)</title><rect x="334.0" y="341" width="1.3" height="15.0" fill="rgb(226,186,29)" rx="2" ry="2" />
<text  x="336.96" y="351.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (6 samples, 0.03%)</title><rect x="1126.9" y="405" width="0.4" height="15.0" fill="rgb(227,134,46)" rx="2" ry="2" />
<text  x="1129.92" y="415.5" ></text>
</g>
<g >
<title>llist_add_batch (32 samples, 0.18%)</title><rect x="96.1" y="357" width="2.1" height="15.0" fill="rgb(229,189,45)" rx="2" ry="2" />
<text  x="99.07" y="367.5" ></text>
</g>
<g >
<title>lind_read (4,132 samples, 22.87%)</title><rect x="291.1" y="469" width="269.8" height="15.0" fill="rgb(230,121,5)" rx="2" ry="2" />
<text  x="294.12" y="479.5" >lind_read</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.07%)</title><rect x="449.9" y="245" width="0.8" height="15.0" fill="rgb(211,195,28)" rx="2" ry="2" />
<text  x="452.94" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="27.4" y="533" width="0.5" height="15.0" fill="rgb(230,100,10)" rx="2" ry="2" />
<text  x="30.44" y="543.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (310 samples, 1.72%)</title><rect x="577.6" y="389" width="20.2" height="15.0" fill="rgb(221,158,0)" rx="2" ry="2" />
<text  x="580.60" y="399.5" ></text>
</g>
<g >
<title>khugepaged (2 samples, 0.01%)</title><rect x="1071.5" y="501" width="0.2" height="15.0" fill="rgb(221,19,26)" rx="2" ry="2" />
<text  x="1074.54" y="511.5" ></text>
</g>
<g >
<title>[unknown] (461 samples, 2.55%)</title><rect x="1019.8" y="533" width="30.1" height="15.0" fill="rgb(215,105,9)" rx="2" ry="2" />
<text  x="1022.82" y="543.5" >[u..</text>
</g>
<g >
<title>native_sched_clock (7 samples, 0.04%)</title><rect x="1126.4" y="389" width="0.5" height="15.0" fill="rgb(234,168,35)" rx="2" ry="2" />
<text  x="1129.40" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.03%)</title><rect x="142.0" y="517" width="0.4" height="15.0" fill="rgb(225,74,13)" rx="2" ry="2" />
<text  x="145.04" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (4 samples, 0.02%)</title><rect x="430.9" y="309" width="0.3" height="15.0" fill="rgb(207,221,48)" rx="2" ry="2" />
<text  x="433.93" y="319.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (4 samples, 0.02%)</title><rect x="122.6" y="309" width="0.2" height="15.0" fill="rgb(246,8,20)" rx="2" ry="2" />
<text  x="125.58" y="319.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (104 samples, 0.58%)</title><rect x="126.8" y="341" width="6.8" height="15.0" fill="rgb(242,59,26)" rx="2" ry="2" />
<text  x="129.82" y="351.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (6 samples, 0.03%)</title><rect x="235.4" y="501" width="0.3" height="15.0" fill="rgb(251,197,8)" rx="2" ry="2" />
<text  x="238.36" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (52 samples, 0.29%)</title><rect x="77.7" y="421" width="3.4" height="15.0" fill="rgb(234,20,19)" rx="2" ry="2" />
<text  x="80.72" y="431.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (137 samples, 0.76%)</title><rect x="256.3" y="469" width="9.0" height="15.0" fill="rgb(223,195,3)" rx="2" ry="2" />
<text  x="259.32" y="479.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (4 samples, 0.02%)</title><rect x="143.9" y="517" width="0.2" height="15.0" fill="rgb(253,55,10)" rx="2" ry="2" />
<text  x="146.87" y="527.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (515 samples, 2.85%)</title><rect x="103.2" y="501" width="33.6" height="15.0" fill="rgb(236,214,2)" rx="2" ry="2" />
<text  x="106.19" y="511.5" >x8..</text>
</g>
<g >
<title>dispatcher (3,967 samples, 21.95%)</title><rect x="301.5" y="453" width="259.1" height="15.0" fill="rgb(221,94,16)" rx="2" ry="2" />
<text  x="304.51" y="463.5" >dispatcher</text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (6 samples, 0.03%)</title><rect x="72.9" y="405" width="0.4" height="15.0" fill="rgb(210,112,9)" rx="2" ry="2" />
<text  x="75.89" y="415.5" ></text>
</g>
<g >
<title>sched_clock_cpu (9 samples, 0.05%)</title><rect x="118.4" y="357" width="0.6" height="15.0" fill="rgb(252,42,51)" rx="2" ry="2" />
<text  x="121.40" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (31 samples, 0.17%)</title><rect x="1019.8" y="517" width="2.0" height="15.0" fill="rgb(245,36,7)" rx="2" ry="2" />
<text  x="1022.82" y="527.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (581 samples, 3.22%)</title><rect x="324.4" y="437" width="37.9" height="15.0" fill="rgb(230,199,8)" rx="2" ry="2" />
<text  x="327.36" y="447.5" >das..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1,207 samples, 6.68%)</title><rect x="481.7" y="421" width="78.9" height="15.0" fill="rgb(208,33,41)" rx="2" ry="2" />
<text  x="484.74" y="431.5" >rustposix..</text>
</g>
<g >
<title>schedule_idle (30 samples, 0.17%)</title><rect x="1187.7" y="405" width="2.0" height="15.0" fill="rgb(217,14,22)" rx="2" ry="2" />
<text  x="1190.71" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.07%)</title><rect x="1050.3" y="517" width="0.7" height="15.0" fill="rgb(249,222,41)" rx="2" ry="2" />
<text  x="1053.25" y="527.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (5 samples, 0.03%)</title><rect x="140.9" y="229" width="0.4" height="15.0" fill="rgb(221,124,2)" rx="2" ry="2" />
<text  x="143.93" y="239.5" ></text>
</g>
<g >
<title>nohz_csd_func (31 samples, 0.17%)</title><rect x="84.9" y="453" width="2.0" height="15.0" fill="rgb(232,128,17)" rx="2" ry="2" />
<text  x="87.90" y="463.5" ></text>
</g>
<g >
<title>menu_reflect (2 samples, 0.01%)</title><rect x="74.5" y="437" width="0.1" height="15.0" fill="rgb(230,165,16)" rx="2" ry="2" />
<text  x="77.45" y="447.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (165 samples, 0.91%)</title><rect x="420.4" y="357" width="10.8" height="15.0" fill="rgb(214,168,37)" rx="2" ry="2" />
<text  x="423.42" y="367.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (48 samples, 0.27%)</title><rect x="439.6" y="309" width="3.1" height="15.0" fill="rgb(242,209,13)" rx="2" ry="2" />
<text  x="442.55" y="319.5" ></text>
</g>
<g >
<title>compact_zone (8 samples, 0.04%)</title><rect x="1071.0" y="469" width="0.5" height="15.0" fill="rgb(237,69,16)" rx="2" ry="2" />
<text  x="1074.02" y="479.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (81 samples, 0.45%)</title><rect x="352.6" y="357" width="5.3" height="15.0" fill="rgb(247,29,20)" rx="2" ry="2" />
<text  x="355.57" y="367.5" ></text>
</g>
<g >
<title>llist_add_batch (21 samples, 0.12%)</title><rect x="132.0" y="293" width="1.4" height="15.0" fill="rgb(207,125,32)" rx="2" ry="2" />
<text  x="134.98" y="303.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_mutcbuf (7 samples, 0.04%)</title><rect x="363.1" y="421" width="0.4" height="15.0" fill="rgb(218,17,5)" rx="2" ry="2" />
<text  x="366.09" y="431.5" ></text>
</g>
<g >
<title>x86_pmu_enable (62 samples, 0.34%)</title><rect x="136.9" y="213" width="4.0" height="15.0" fill="rgb(235,56,24)" rx="2" ry="2" />
<text  x="139.88" y="223.5" ></text>
</g>
<g >
<title>__run_hrtimer (2 samples, 0.01%)</title><rect x="1075.5" y="325" width="0.2" height="15.0" fill="rgb(246,16,13)" rx="2" ry="2" />
<text  x="1078.53" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="1070.5" y="533" width="0.5" height="15.0" fill="rgb(251,91,49)" rx="2" ry="2" />
<text  x="1073.50" y="543.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (4 samples, 0.02%)</title><rect x="150.5" y="469" width="0.3" height="15.0" fill="rgb(223,200,46)" rx="2" ry="2" />
<text  x="153.53" y="479.5" ></text>
</g>
<g >
<title>do_idle (493 samples, 2.73%)</title><rect x="103.3" y="421" width="32.1" height="15.0" fill="rgb(220,114,41)" rx="2" ry="2" />
<text  x="106.25" y="431.5" >do..</text>
</g>
<g >
<title>tick_nohz_idle_enter (28 samples, 0.15%)</title><rect x="1162.1" y="469" width="1.8" height="15.0" fill="rgb(249,114,47)" rx="2" ry="2" />
<text  x="1165.12" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (2 samples, 0.01%)</title><rect x="1050.1" y="293" width="0.1" height="15.0" fill="rgb(225,221,2)" rx="2" ry="2" />
<text  x="1053.06" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (2 samples, 0.01%)</title><rect x="133.5" y="325" width="0.1" height="15.0" fill="rgb(209,209,11)" rx="2" ry="2" />
<text  x="136.49" y="335.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.01%)</title><rect x="141.3" y="389" width="0.1" height="15.0" fill="rgb(215,1,20)" rx="2" ry="2" />
<text  x="144.26" y="399.5" ></text>
</g>
<g >
<title>native_write_msr (62 samples, 0.34%)</title><rect x="136.9" y="181" width="4.0" height="15.0" fill="rgb(236,223,45)" rx="2" ry="2" />
<text  x="139.88" y="191.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (23 samples, 0.13%)</title><rect x="354.7" y="277" width="1.5" height="15.0" fill="rgb(232,111,48)" rx="2" ry="2" />
<text  x="357.73" y="287.5" ></text>
</g>
<g >
<title>__perf_event_enable (62 samples, 0.34%)</title><rect x="136.9" y="245" width="4.0" height="15.0" fill="rgb(235,202,5)" rx="2" ry="2" />
<text  x="139.88" y="255.5" ></text>
</g>
<g >
<title>generic_exec_single (23 samples, 0.13%)</title><rect x="94.6" y="357" width="1.5" height="15.0" fill="rgb(216,150,34)" rx="2" ry="2" />
<text  x="97.57" y="367.5" ></text>
</g>
<g >
<title>nohz_csd_func (3 samples, 0.02%)</title><rect x="1187.5" y="389" width="0.2" height="15.0" fill="rgb(228,50,37)" rx="2" ry="2" />
<text  x="1190.52" y="399.5" ></text>
</g>
<g >
<title>perf_ioctl (62 samples, 0.34%)</title><rect x="136.9" y="389" width="4.0" height="15.0" fill="rgb(244,88,42)" rx="2" ry="2" />
<text  x="139.88" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (12 samples, 0.07%)</title><rect x="122.1" y="341" width="0.7" height="15.0" fill="rgb(224,151,41)" rx="2" ry="2" />
<text  x="125.06" y="351.5" ></text>
</g>
<g >
<title>cpuidle_not_available (2 samples, 0.01%)</title><rect x="81.4" y="469" width="0.1" height="15.0" fill="rgb(252,127,21)" rx="2" ry="2" />
<text  x="84.37" y="479.5" ></text>
</g>
<g >
<title>CompareAndSwap (2 samples, 0.01%)</title><rect x="143.7" y="517" width="0.2" height="15.0" fill="rgb(241,127,32)" rx="2" ry="2" />
<text  x="146.74" y="527.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (2 samples, 0.01%)</title><rect x="237.2" y="405" width="0.2" height="15.0" fill="rgb(227,64,38)" rx="2" ry="2" />
<text  x="240.25" y="415.5" ></text>
</g>
<g >
<title>update_rq_clock (17 samples, 0.09%)</title><rect x="1160.4" y="437" width="1.1" height="15.0" fill="rgb(229,196,7)" rx="2" ry="2" />
<text  x="1163.42" y="447.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.02%)</title><rect x="77.8" y="405" width="0.2" height="15.0" fill="rgb(252,59,17)" rx="2" ry="2" />
<text  x="80.85" y="415.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (8 samples, 0.04%)</title><rect x="33.2" y="341" width="0.6" height="15.0" fill="rgb(224,113,46)" rx="2" ry="2" />
<text  x="36.25" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.01%)</title><rect x="32.9" y="293" width="0.2" height="15.0" fill="rgb(224,41,27)" rx="2" ry="2" />
<text  x="35.92" y="303.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (4 samples, 0.02%)</title><rect x="559.5" y="341" width="0.3" height="15.0" fill="rgb(214,47,28)" rx="2" ry="2" />
<text  x="562.51" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (33 samples, 0.18%)</title><rect x="359.4" y="325" width="2.2" height="15.0" fill="rgb(233,151,23)" rx="2" ry="2" />
<text  x="362.43" y="335.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.02%)</title><rect x="362.0" y="309" width="0.3" height="15.0" fill="rgb(251,17,18)" rx="2" ry="2" />
<text  x="365.04" y="319.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (3 samples, 0.02%)</title><rect x="420.2" y="373" width="0.2" height="15.0" fill="rgb(244,14,36)" rx="2" ry="2" />
<text  x="423.22" y="383.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (128 samples, 0.71%)</title><rect x="409.4" y="405" width="8.4" height="15.0" fill="rgb(242,22,39)" rx="2" ry="2" />
<text  x="412.45" y="415.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.03%)</title><rect x="1046.9" y="501" width="0.3" height="15.0" fill="rgb(233,2,40)" rx="2" ry="2" />
<text  x="1049.86" y="511.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (4 samples, 0.02%)</title><rect x="388.5" y="389" width="0.2" height="15.0" fill="rgb(233,152,26)" rx="2" ry="2" />
<text  x="391.49" y="399.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (165 samples, 0.91%)</title><rect x="420.4" y="341" width="10.8" height="15.0" fill="rgb(252,187,43)" rx="2" ry="2" />
<text  x="423.42" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock (5 samples, 0.03%)</title><rect x="1136.1" y="389" width="0.4" height="15.0" fill="rgb(223,126,32)" rx="2" ry="2" />
<text  x="1139.13" y="399.5" ></text>
</g>
<g >
<title>rest_init (515 samples, 2.85%)</title><rect x="103.2" y="453" width="33.6" height="15.0" fill="rgb(214,101,6)" rx="2" ry="2" />
<text  x="106.19" y="463.5" >re..</text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (5 samples, 0.03%)</title><rect x="1046.9" y="469" width="0.3" height="15.0" fill="rgb(235,75,7)" rx="2" ry="2" />
<text  x="1049.86" y="479.5" ></text>
</g>
<g >
<title>rcu_idle_enter (2 samples, 0.01%)</title><rect x="117.2" y="357" width="0.2" height="15.0" fill="rgb(238,69,30)" rx="2" ry="2" />
<text  x="120.23" y="367.5" ></text>
</g>
<g >
<title>llist_reverse_order (24 samples, 0.13%)</title><rect x="83.3" y="453" width="1.6" height="15.0" fill="rgb(207,18,54)" rx="2" ry="2" />
<text  x="86.33" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.02%)</title><rect x="122.2" y="325" width="0.2" height="15.0" fill="rgb(214,227,45)" rx="2" ry="2" />
<text  x="125.19" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (25 samples, 0.14%)</title><rect x="341.7" y="277" width="1.7" height="15.0" fill="rgb(238,67,13)" rx="2" ry="2" />
<text  x="344.73" y="287.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="237.2" y="133" width="0.2" height="15.0" fill="rgb(246,83,36)" rx="2" ry="2" />
<text  x="240.25" y="143.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (3 samples, 0.02%)</title><rect x="247.0" y="485" width="0.2" height="15.0" fill="rgb(238,62,42)" rx="2" ry="2" />
<text  x="250.04" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (14 samples, 0.08%)</title><rect x="350.5" y="293" width="1.0" height="15.0" fill="rgb(250,149,24)" rx="2" ry="2" />
<text  x="353.55" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (157 samples, 0.87%)</title><rect x="420.7" y="325" width="10.2" height="15.0" fill="rgb(230,119,20)" rx="2" ry="2" />
<text  x="423.68" y="335.5" ></text>
</g>
<g >
<title>native_sched_clock (4 samples, 0.02%)</title><rect x="1185.4" y="341" width="0.3" height="15.0" fill="rgb(216,217,18)" rx="2" ry="2" />
<text  x="1188.43" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (383 samples, 2.12%)</title><rect x="484.7" y="357" width="25.0" height="15.0" fill="rgb(248,225,20)" rx="2" ry="2" />
<text  x="487.68" y="367.5" >c..</text>
</g>
<g >
<title>hashbrown::map::make_hash (260 samples, 1.44%)</title><rect x="452.2" y="357" width="16.9" height="15.0" fill="rgb(208,173,20)" rx="2" ry="2" />
<text  x="455.16" y="367.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (13 samples, 0.07%)</title><rect x="142.9" y="517" width="0.8" height="15.0" fill="rgb(208,138,45)" rx="2" ry="2" />
<text  x="145.89" y="527.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (23 samples, 0.13%)</title><rect x="128.0" y="325" width="1.5" height="15.0" fill="rgb(241,5,29)" rx="2" ry="2" />
<text  x="131.00" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (13 samples, 0.07%)</title><rect x="468.3" y="293" width="0.8" height="15.0" fill="rgb(236,72,49)" rx="2" ry="2" />
<text  x="471.29" y="303.5" ></text>
</g>
<g >
<title>CompareAndSwap (8 samples, 0.04%)</title><rect x="1022.2" y="517" width="0.6" height="15.0" fill="rgb(205,79,8)" rx="2" ry="2" />
<text  x="1025.24" y="527.5" ></text>
</g>
<g >
<title>dispatcher (3 samples, 0.02%)</title><rect x="1047.2" y="517" width="0.2" height="15.0" fill="rgb(221,149,11)" rx="2" ry="2" />
<text  x="1050.19" y="527.5" ></text>
</g>
<g >
<title>NaClLog (42 samples, 0.23%)</title><rect x="232.2" y="501" width="2.8" height="15.0" fill="rgb(209,32,2)" rx="2" ry="2" />
<text  x="235.22" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="237.2" y="357" width="0.2" height="15.0" fill="rgb(206,199,23)" rx="2" ry="2" />
<text  x="240.25" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (11 samples, 0.06%)</title><rect x="148.8" y="517" width="0.7" height="15.0" fill="rgb(207,104,19)" rx="2" ry="2" />
<text  x="151.83" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="1133.8" y="405" width="0.2" height="15.0" fill="rgb(219,122,26)" rx="2" ry="2" />
<text  x="1136.84" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (114 samples, 0.63%)</title><rect x="402.0" y="405" width="7.4" height="15.0" fill="rgb(228,69,4)" rx="2" ry="2" />
<text  x="405.01" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (168 samples, 0.93%)</title><rect x="452.2" y="325" width="10.9" height="15.0" fill="rgb(254,105,47)" rx="2" ry="2" />
<text  x="455.16" y="335.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (168 samples, 0.93%)</title><rect x="420.2" y="389" width="11.0" height="15.0" fill="rgb(210,164,48)" rx="2" ry="2" />
<text  x="423.22" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="104.8" y="293" width="0.1" height="15.0" fill="rgb(229,95,12)" rx="2" ry="2" />
<text  x="107.82" y="303.5" ></text>
</g>
<g >
<title>core::cmp::min_by (90 samples, 0.50%)</title><rect x="577.6" y="373" width="5.9" height="15.0" fill="rgb(205,9,20)" rx="2" ry="2" />
<text  x="580.60" y="383.5" ></text>
</g>
<g >
<title>newidle_balance (151 samples, 0.84%)</title><rect x="88.4" y="421" width="9.8" height="15.0" fill="rgb(251,183,35)" rx="2" ry="2" />
<text  x="91.36" y="431.5" ></text>
</g>
<g >
<title>llist_add_batch (26 samples, 0.14%)</title><rect x="1158.4" y="357" width="1.7" height="15.0" fill="rgb(246,37,18)" rx="2" ry="2" />
<text  x="1161.39" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (87 samples, 0.48%)</title><rect x="475.7" y="389" width="5.7" height="15.0" fill="rgb(213,204,27)" rx="2" ry="2" />
<text  x="478.73" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (3 samples, 0.02%)</title><rect x="361.4" y="293" width="0.2" height="15.0" fill="rgb(232,155,53)" rx="2" ry="2" />
<text  x="364.39" y="303.5" ></text>
</g>
<g >
<title>rest_init (347 samples, 1.92%)</title><rect x="1167.3" y="453" width="22.7" height="15.0" fill="rgb(234,11,29)" rx="2" ry="2" />
<text  x="1170.34" y="463.5" >r..</text>
</g>
<g >
<title>cs_watchdog_read (3 samples, 0.02%)</title><rect x="33.6" y="261" width="0.2" height="15.0" fill="rgb(239,66,48)" rx="2" ry="2" />
<text  x="36.57" y="271.5" ></text>
</g>
<g >
<title>schedule_idle (188 samples, 1.04%)</title><rect x="87.1" y="469" width="12.2" height="15.0" fill="rgb(252,61,41)" rx="2" ry="2" />
<text  x="90.06" y="479.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.10%)</title><rect x="470.0" y="309" width="1.2" height="15.0" fill="rgb(235,172,12)" rx="2" ry="2" />
<text  x="472.98" y="319.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="100.2" y="453" width="0.1" height="15.0" fill="rgb(253,36,7)" rx="2" ry="2" />
<text  x="103.18" y="463.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.06%)</title><rect x="334.2" y="325" width="0.6" height="15.0" fill="rgb(241,151,51)" rx="2" ry="2" />
<text  x="337.16" y="335.5" ></text>
</g>
<g >
<title>pick_next_task_fair (157 samples, 0.87%)</title><rect x="88.0" y="437" width="10.3" height="15.0" fill="rgb(244,40,12)" rx="2" ry="2" />
<text  x="91.04" y="447.5" ></text>
</g>
<g >
<title>kcompactd (6 samples, 0.03%)</title><rect x="28.0" y="501" width="0.3" height="15.0" fill="rgb(217,189,24)" rx="2" ry="2" />
<text  x="30.96" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (76 samples, 0.42%)</title><rect x="352.6" y="309" width="4.9" height="15.0" fill="rgb(253,180,9)" rx="2" ry="2" />
<text  x="355.57" y="319.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (220 samples, 1.22%)</title><rect x="583.5" y="373" width="14.3" height="15.0" fill="rgb(241,94,50)" rx="2" ry="2" />
<text  x="586.48" y="383.5" ></text>
</g>
<g >
<title>__run_hrtimer (4 samples, 0.02%)</title><rect x="32.9" y="325" width="0.2" height="15.0" fill="rgb(214,71,51)" rx="2" ry="2" />
<text  x="35.86" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.02%)</title><rect x="420.2" y="341" width="0.2" height="15.0" fill="rgb(250,153,49)" rx="2" ry="2" />
<text  x="423.22" y="351.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (39 samples, 0.22%)</title><rect x="242.5" y="469" width="2.5" height="15.0" fill="rgb(245,109,20)" rx="2" ry="2" />
<text  x="245.47" y="479.5" ></text>
</g>
<g >
<title>unmap_and_move (7 samples, 0.04%)</title><rect x="1071.1" y="437" width="0.4" height="15.0" fill="rgb(220,151,48)" rx="2" ry="2" />
<text  x="1074.09" y="447.5" ></text>
</g>
<g >
<title>ret_from_fork (13 samples, 0.07%)</title><rect x="1071.0" y="533" width="0.8" height="15.0" fill="rgb(219,29,24)" rx="2" ry="2" />
<text  x="1073.96" y="543.5" ></text>
</g>
<g >
<title>sched_clock_cpu (4 samples, 0.02%)</title><rect x="1185.4" y="357" width="0.3" height="15.0" fill="rgb(238,130,36)" rx="2" ry="2" />
<text  x="1188.43" y="367.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.04%)</title><rect x="358.2" y="325" width="0.5" height="15.0" fill="rgb(234,51,7)" rx="2" ry="2" />
<text  x="361.19" y="335.5" ></text>
</g>
<g >
<title>rcu_idle_exit (22 samples, 0.12%)</title><rect x="71.8" y="421" width="1.5" height="15.0" fill="rgb(226,203,18)" rx="2" ry="2" />
<text  x="74.84" y="431.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (3 samples, 0.02%)</title><rect x="274.9" y="453" width="0.2" height="15.0" fill="rgb(227,124,1)" rx="2" ry="2" />
<text  x="277.93" y="463.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (7 samples, 0.04%)</title><rect x="437.1" y="309" width="0.5" height="15.0" fill="rgb(219,200,54)" rx="2" ry="2" />
<text  x="440.14" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.04%)</title><rect x="1019.2" y="469" width="0.5" height="15.0" fill="rgb(213,189,46)" rx="2" ry="2" />
<text  x="1022.24" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (338 samples, 1.87%)</title><rect x="1024.1" y="517" width="22.0" height="15.0" fill="rgb(225,168,27)" rx="2" ry="2" />
<text  x="1027.07" y="527.5" >[..</text>
</g>
<g >
<title>__x64_sys_write (5 samples, 0.03%)</title><rect x="140.9" y="357" width="0.4" height="15.0" fill="rgb(236,70,35)" rx="2" ry="2" />
<text  x="143.93" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.01%)</title><rect x="32.9" y="309" width="0.2" height="15.0" fill="rgb(248,198,44)" rx="2" ry="2" />
<text  x="35.92" y="319.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::determine_shard (14 samples, 0.08%)</title><rect x="432.0" y="389" width="0.9" height="15.0" fill="rgb(206,181,16)" rx="2" ry="2" />
<text  x="434.98" y="399.5" ></text>
</g>
<g >
<title>__clone (2 samples, 0.01%)</title><rect x="1049.9" y="533" width="0.2" height="15.0" fill="rgb(241,182,39)" rx="2" ry="2" />
<text  x="1052.93" y="543.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.03%)</title><rect x="355.8" y="261" width="0.4" height="15.0" fill="rgb(225,60,37)" rx="2" ry="2" />
<text  x="358.84" y="271.5" ></text>
</g>
<g >
<title>cpuidle_select (102 samples, 0.56%)</title><rect x="74.6" y="453" width="6.6" height="15.0" fill="rgb(222,48,32)" rx="2" ry="2" />
<text  x="77.58" y="463.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (82 samples, 0.45%)</title><rect x="81.6" y="469" width="5.3" height="15.0" fill="rgb(244,124,25)" rx="2" ry="2" />
<text  x="84.57" y="479.5" ></text>
</g>
<g >
<title>local_touch_nmi (4 samples, 0.02%)</title><rect x="1145.5" y="469" width="0.3" height="15.0" fill="rgb(247,108,20)" rx="2" ry="2" />
<text  x="1148.53" y="479.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::libc_mmap (2 samples, 0.01%)</title><rect x="237.2" y="389" width="0.2" height="15.0" fill="rgb(234,150,7)" rx="2" ry="2" />
<text  x="240.25" y="399.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.01%)</title><rect x="32.9" y="277" width="0.2" height="15.0" fill="rgb(217,53,13)" rx="2" ry="2" />
<text  x="35.92" y="287.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (9 samples, 0.05%)</title><rect x="1128.1" y="405" width="0.6" height="15.0" fill="rgb(239,80,26)" rx="2" ry="2" />
<text  x="1131.09" y="415.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (2,840 samples, 15.72%)</title><rect x="790.6" y="389" width="185.4" height="15.0" fill="rgb(244,183,45)" rx="2" ry="2" />
<text  x="793.55" y="399.5" >ringbuf::ring_buffer::Ri..</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (256 samples, 1.42%)</title><rect x="150.8" y="453" width="16.7" height="15.0" fill="rgb(226,87,11)" rx="2" ry="2" />
<text  x="153.79" y="463.5" ></text>
</g>
<g >
<title>newidle_balance (22 samples, 0.12%)</title><rect x="1187.9" y="357" width="1.4" height="15.0" fill="rgb(234,66,51)" rx="2" ry="2" />
<text  x="1190.91" y="367.5" ></text>
</g>
<g >
<title>get_cpu_device (2 samples, 0.01%)</title><rect x="119.8" y="357" width="0.2" height="15.0" fill="rgb(230,106,40)" rx="2" ry="2" />
<text  x="122.84" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="1046.9" y="421" width="0.3" height="15.0" fill="rgb(249,36,38)" rx="2" ry="2" />
<text  x="1049.86" y="431.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (7 samples, 0.04%)</title><rect x="363.1" y="405" width="0.4" height="15.0" fill="rgb(247,124,19)" rx="2" ry="2" />
<text  x="366.09" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (7 samples, 0.04%)</title><rect x="1148.5" y="405" width="0.4" height="15.0" fill="rgb(208,29,42)" rx="2" ry="2" />
<text  x="1151.47" y="415.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (272 samples, 1.51%)</title><rect x="150.8" y="517" width="17.8" height="15.0" fill="rgb(217,98,16)" rx="2" ry="2" />
<text  x="153.79" y="527.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (18 samples, 0.10%)</title><rect x="236.0" y="501" width="1.2" height="15.0" fill="rgb(245,216,18)" rx="2" ry="2" />
<text  x="239.01" y="511.5" ></text>
</g>
<g >
<title>__schedule (27 samples, 0.15%)</title><rect x="1187.8" y="389" width="1.7" height="15.0" fill="rgb(242,209,44)" rx="2" ry="2" />
<text  x="1190.78" y="399.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.03%)</title><rect x="339.4" y="341" width="0.4" height="15.0" fill="rgb(210,67,9)" rx="2" ry="2" />
<text  x="342.45" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (6 samples, 0.03%)</title><rect x="552.0" y="341" width="0.4" height="15.0" fill="rgb(251,36,6)" rx="2" ry="2" />
<text  x="555.00" y="351.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (4 samples, 0.02%)</title><rect x="1186.5" y="325" width="0.3" height="15.0" fill="rgb(238,199,11)" rx="2" ry="2" />
<text  x="1189.54" y="335.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (122 samples, 0.68%)</title><rect x="316.4" y="389" width="8.0" height="15.0" fill="rgb(229,96,54)" rx="2" ry="2" />
<text  x="319.40" y="399.5" ></text>
</g>
<g >
<title>native_sched_clock (6 samples, 0.03%)</title><rect x="73.5" y="405" width="0.4" height="15.0" fill="rgb(224,152,1)" rx="2" ry="2" />
<text  x="76.47" y="415.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (62 samples, 0.34%)</title><rect x="136.9" y="469" width="4.0" height="15.0" fill="rgb(233,10,17)" rx="2" ry="2" />
<text  x="139.88" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (383 samples, 2.12%)</title><rect x="484.7" y="341" width="25.0" height="15.0" fill="rgb(230,152,8)" rx="2" ry="2" />
<text  x="487.68" y="351.5" >c..</text>
</g>
<g >
<title>get_next_timer_interrupt (11 samples, 0.06%)</title><rect x="80.3" y="389" width="0.7" height="15.0" fill="rgb(242,8,49)" rx="2" ry="2" />
<text  x="83.33" y="399.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (62 samples, 0.34%)</title><rect x="136.9" y="197" width="4.0" height="15.0" fill="rgb(231,44,44)" rx="2" ry="2" />
<text  x="139.88" y="207.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (93 samples, 0.51%)</title><rect x="345.4" y="325" width="6.1" height="15.0" fill="rgb(254,224,18)" rx="2" ry="2" />
<text  x="348.39" y="335.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (3 samples, 0.02%)</title><rect x="94.3" y="357" width="0.2" height="15.0" fill="rgb(209,29,33)" rx="2" ry="2" />
<text  x="97.30" y="367.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (572 samples, 3.17%)</title><rect x="324.9" y="421" width="37.4" height="15.0" fill="rgb(215,38,12)" rx="2" ry="2" />
<text  x="327.95" y="431.5" >&lt;da..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (4 samples, 0.02%)</title><rect x="150.5" y="485" width="0.3" height="15.0" fill="rgb(205,54,54)" rx="2" ry="2" />
<text  x="153.53" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="551.8" y="357" width="0.2" height="15.0" fill="rgb(227,175,23)" rx="2" ry="2" />
<text  x="554.81" y="367.5" ></text>
</g>
<g >
<title>try_to_unmap_one (2 samples, 0.01%)</title><rect x="1071.3" y="357" width="0.2" height="15.0" fill="rgb(221,184,15)" rx="2" ry="2" />
<text  x="1074.35" y="367.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (4 samples, 0.02%)</title><rect x="141.0" y="181" width="0.3" height="15.0" fill="rgb(254,187,8)" rx="2" ry="2" />
<text  x="144.00" y="191.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.01%)</title><rect x="237.2" y="197" width="0.2" height="15.0" fill="rgb(251,118,27)" rx="2" ry="2" />
<text  x="240.25" y="207.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (214 samples, 1.18%)</title><rect x="374.2" y="389" width="14.0" height="15.0" fill="rgb(249,118,44)" rx="2" ry="2" />
<text  x="377.19" y="399.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (383 samples, 2.12%)</title><rect x="484.7" y="389" width="25.0" height="15.0" fill="rgb(207,84,34)" rx="2" ry="2" />
<text  x="487.68" y="399.5" >&lt;..</text>
</g>
<g >
<title>arch_cpu_idle_enter (2 samples, 0.01%)</title><rect x="1072.9" y="469" width="0.1" height="15.0" fill="rgb(208,211,14)" rx="2" ry="2" />
<text  x="1075.91" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="1070.6" y="517" width="0.4" height="15.0" fill="rgb(250,119,12)" rx="2" ry="2" />
<text  x="1073.56" y="527.5" ></text>
</g>
<g >
<title>new_sync_write (5 samples, 0.03%)</title><rect x="140.9" y="309" width="0.4" height="15.0" fill="rgb(252,75,43)" rx="2" ry="2" />
<text  x="143.93" y="319.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (879 samples, 4.86%)</title><rect x="418.1" y="405" width="57.4" height="15.0" fill="rgb(238,140,27)" rx="2" ry="2" />
<text  x="421.07" y="415.5" >&lt;dashm..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (15 samples, 0.08%)</title><rect x="149.8" y="517" width="1.0" height="15.0" fill="rgb(220,1,15)" rx="2" ry="2" />
<text  x="152.81" y="527.5" ></text>
</g>
<g >
<title>poll_idle (41 samples, 0.23%)</title><rect x="1182.6" y="357" width="2.6" height="15.0" fill="rgb(212,87,0)" rx="2" ry="2" />
<text  x="1185.56" y="367.5" ></text>
</g>
<g >
<title>read_tsc (6 samples, 0.03%)</title><rect x="100.8" y="453" width="0.4" height="15.0" fill="rgb(251,41,16)" rx="2" ry="2" />
<text  x="103.83" y="463.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (21 samples, 0.12%)</title><rect x="94.7" y="341" width="1.4" height="15.0" fill="rgb(207,227,19)" rx="2" ry="2" />
<text  x="97.70" y="351.5" ></text>
</g>
<g >
<title>read_tsc (11 samples, 0.06%)</title><rect x="1162.8" y="453" width="0.7" height="15.0" fill="rgb(230,57,20)" rx="2" ry="2" />
<text  x="1165.77" y="463.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (23 samples, 0.13%)</title><rect x="1134.0" y="405" width="1.5" height="15.0" fill="rgb(206,38,24)" rx="2" ry="2" />
<text  x="1137.04" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (17 samples, 0.09%)</title><rect x="351.5" y="357" width="1.1" height="15.0" fill="rgb(209,82,12)" rx="2" ry="2" />
<text  x="354.46" y="367.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (35 samples, 0.19%)</title><rect x="168.6" y="517" width="2.2" height="15.0" fill="rgb(230,53,41)" rx="2" ry="2" />
<text  x="171.55" y="527.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.02%)</title><rect x="1075.8" y="341" width="0.2" height="15.0" fill="rgb(237,58,12)" rx="2" ry="2" />
<text  x="1078.79" y="351.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (8 samples, 0.04%)</title><rect x="357.0" y="277" width="0.5" height="15.0" fill="rgb(238,34,15)" rx="2" ry="2" />
<text  x="360.01" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (96 samples, 0.53%)</title><rect x="469.2" y="325" width="6.3" height="15.0" fill="rgb(245,21,48)" rx="2" ry="2" />
<text  x="472.20" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (14 samples, 0.08%)</title><rect x="472.7" y="309" width="0.9" height="15.0" fill="rgb(217,111,5)" rx="2" ry="2" />
<text  x="475.66" y="319.5" ></text>
</g>
<g >
<title>cpumask_next_and (2 samples, 0.01%)</title><rect x="130.7" y="309" width="0.2" height="15.0" fill="rgb(250,147,40)" rx="2" ry="2" />
<text  x="133.74" y="319.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (11 samples, 0.06%)</title><rect x="469.3" y="309" width="0.7" height="15.0" fill="rgb(212,117,50)" rx="2" ry="2" />
<text  x="472.27" y="319.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (4,954 samples, 27.42%)</title><rect x="237.4" y="501" width="323.5" height="15.0" fill="rgb(233,43,14)" rx="2" ry="2" />
<text  x="240.45" y="511.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (208 samples, 1.15%)</title><rect x="546.5" y="373" width="13.5" height="15.0" fill="rgb(253,185,8)" rx="2" ry="2" />
<text  x="549.45" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.06%)</title><rect x="346.6" y="293" width="0.7" height="15.0" fill="rgb(231,104,49)" rx="2" ry="2" />
<text  x="349.63" y="303.5" ></text>
</g>
<g >
<title>cpuidle_select (59 samples, 0.33%)</title><rect x="119.2" y="389" width="3.9" height="15.0" fill="rgb(217,81,37)" rx="2" ry="2" />
<text  x="122.25" y="399.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (2,847 samples, 15.76%)</title><rect x="790.1" y="405" width="185.9" height="15.0" fill="rgb(227,38,19)" rx="2" ry="2" />
<text  x="793.09" y="415.5" >ringbuf::producer::Produ..</text>
</g>
<g >
<title>cpumask_next_and (5 samples, 0.03%)</title><rect x="94.2" y="373" width="0.4" height="15.0" fill="rgb(233,6,54)" rx="2" ry="2" />
<text  x="97.24" y="383.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (4 samples, 0.02%)</title><rect x="118.1" y="341" width="0.3" height="15.0" fill="rgb(245,64,8)" rx="2" ry="2" />
<text  x="121.14" y="351.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (298 samples, 1.65%)</title><rect x="1167.6" y="405" width="19.5" height="15.0" fill="rgb(217,116,0)" rx="2" ry="2" />
<text  x="1170.60" y="415.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (122 samples, 0.68%)</title><rect x="257.0" y="453" width="8.0" height="15.0" fill="rgb(239,145,1)" rx="2" ry="2" />
<text  x="260.04" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.01%)</title><rect x="1049.9" y="517" width="0.2" height="15.0" fill="rgb(211,55,54)" rx="2" ry="2" />
<text  x="1052.93" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (263 samples, 1.46%)</title><rect x="345.1" y="405" width="17.2" height="15.0" fill="rgb(236,48,18)" rx="2" ry="2" />
<text  x="348.13" y="415.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (171 samples, 0.95%)</title><rect x="1148.9" y="405" width="11.2" height="15.0" fill="rgb(217,86,29)" rx="2" ry="2" />
<text  x="1151.93" y="415.5" ></text>
</g>
<g >
<title>event_function (62 samples, 0.34%)</title><rect x="136.9" y="261" width="4.0" height="15.0" fill="rgb(228,141,45)" rx="2" ry="2" />
<text  x="139.88" y="271.5" ></text>
</g>
<g >
<title>pick_next_task_fair (194 samples, 1.07%)</title><rect x="1147.6" y="437" width="12.6" height="15.0" fill="rgb(224,219,9)" rx="2" ry="2" />
<text  x="1150.55" y="447.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (49 samples, 0.27%)</title><rect x="1156.9" y="373" width="3.2" height="15.0" fill="rgb(244,136,16)" rx="2" ry="2" />
<text  x="1159.89" y="383.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (96 samples, 0.53%)</title><rect x="738.1" y="357" width="6.3" height="15.0" fill="rgb(223,184,13)" rx="2" ry="2" />
<text  x="741.11" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.01%)</title><rect x="1050.1" y="501" width="0.1" height="15.0" fill="rgb(233,185,12)" rx="2" ry="2" />
<text  x="1053.06" y="511.5" ></text>
</g>
<g >
<title>ret_from_fork (9 samples, 0.05%)</title><rect x="28.0" y="533" width="0.5" height="15.0" fill="rgb(242,175,33)" rx="2" ry="2" />
<text  x="30.96" y="543.5" ></text>
</g>
<g >
<title>mmap_region (2 samples, 0.01%)</title><rect x="237.2" y="261" width="0.2" height="15.0" fill="rgb(205,212,51)" rx="2" ry="2" />
<text  x="240.25" y="271.5" ></text>
</g>
<g >
<title>menu_update (6 samples, 0.03%)</title><rect x="77.2" y="421" width="0.4" height="15.0" fill="rgb(225,87,35)" rx="2" ry="2" />
<text  x="80.20" y="431.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (4 samples, 0.02%)</title><rect x="352.3" y="309" width="0.3" height="15.0" fill="rgb(225,69,3)" rx="2" ry="2" />
<text  x="355.31" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (168 samples, 0.93%)</title><rect x="452.2" y="309" width="10.9" height="15.0" fill="rgb(212,27,2)" rx="2" ry="2" />
<text  x="455.16" y="319.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (272 samples, 1.51%)</title><rect x="150.8" y="485" width="17.8" height="15.0" fill="rgb(220,27,53)" rx="2" ry="2" />
<text  x="153.79" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (87 samples, 0.48%)</title><rect x="510.1" y="373" width="5.7" height="15.0" fill="rgb(214,198,39)" rx="2" ry="2" />
<text  x="513.08" y="383.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="237.2" y="117" width="0.2" height="15.0" fill="rgb(221,127,40)" rx="2" ry="2" />
<text  x="240.25" y="127.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (87 samples, 0.48%)</title><rect x="510.1" y="357" width="5.7" height="15.0" fill="rgb(213,186,21)" rx="2" ry="2" />
<text  x="513.08" y="367.5" ></text>
</g>
<g >
<title>NaClSysMunmap (2 samples, 0.01%)</title><rect x="237.2" y="485" width="0.2" height="15.0" fill="rgb(235,78,48)" rx="2" ry="2" />
<text  x="240.25" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (16 samples, 0.09%)</title><rect x="99.4" y="469" width="1.0" height="15.0" fill="rgb(214,197,35)" rx="2" ry="2" />
<text  x="102.40" y="479.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (7 samples, 0.04%)</title><rect x="144.8" y="517" width="0.5" height="15.0" fill="rgb(236,133,17)" rx="2" ry="2" />
<text  x="147.85" y="527.5" ></text>
</g>
<g >
<title>get_typical_interval (10 samples, 0.06%)</title><rect x="120.0" y="357" width="0.6" height="15.0" fill="rgb(213,103,2)" rx="2" ry="2" />
<text  x="122.97" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (48 samples, 0.27%)</title><rect x="434.5" y="325" width="3.1" height="15.0" fill="rgb(225,218,11)" rx="2" ry="2" />
<text  x="437.46" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="104.8" y="341" width="0.1" height="15.0" fill="rgb(205,153,28)" rx="2" ry="2" />
<text  x="107.82" y="351.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (2 samples, 0.01%)</title><rect x="237.2" y="309" width="0.2" height="15.0" fill="rgb(239,213,29)" rx="2" ry="2" />
<text  x="240.25" y="319.5" ></text>
</g>
<g >
<title>ktime_get (2 samples, 0.01%)</title><rect x="135.1" y="389" width="0.1" height="15.0" fill="rgb(250,58,51)" rx="2" ry="2" />
<text  x="138.05" y="399.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (4 samples, 0.02%)</title><rect x="325.7" y="341" width="0.2" height="15.0" fill="rgb(236,78,36)" rx="2" ry="2" />
<text  x="328.67" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (9 samples, 0.05%)</title><rect x="134.3" y="405" width="0.6" height="15.0" fill="rgb(226,25,47)" rx="2" ry="2" />
<text  x="137.33" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (171 samples, 0.95%)</title><rect x="618.3" y="357" width="11.2" height="15.0" fill="rgb(215,213,27)" rx="2" ry="2" />
<text  x="621.35" y="367.5" ></text>
</g>
<g >
<title>&lt;std::sync::lazy_lock::LazyLock&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.03%)</title><rect x="388.7" y="421" width="0.4" height="15.0" fill="rgb(246,216,1)" rx="2" ry="2" />
<text  x="391.75" y="431.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (18 samples, 0.10%)</title><rect x="135.4" y="421" width="1.2" height="15.0" fill="rgb(205,78,9)" rx="2" ry="2" />
<text  x="138.44" y="431.5" ></text>
</g>
<g >
<title>__schedule (235 samples, 1.30%)</title><rect x="1146.2" y="453" width="15.3" height="15.0" fill="rgb(218,74,23)" rx="2" ry="2" />
<text  x="1149.18" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (8 samples, 0.04%)</title><rect x="134.9" y="405" width="0.5" height="15.0" fill="rgb(211,102,4)" rx="2" ry="2" />
<text  x="137.92" y="415.5" ></text>
</g>
<g >
<title>rcu_idle_exit (16 samples, 0.09%)</title><rect x="117.4" y="357" width="1.0" height="15.0" fill="rgb(207,176,11)" rx="2" ry="2" />
<text  x="120.36" y="367.5" ></text>
</g>
<g >
<title>sched_clock_cpu (8 samples, 0.04%)</title><rect x="98.5" y="421" width="0.5" height="15.0" fill="rgb(213,8,19)" rx="2" ry="2" />
<text  x="101.48" y="431.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (4 samples, 0.02%)</title><rect x="559.8" y="357" width="0.2" height="15.0" fill="rgb(223,179,28)" rx="2" ry="2" />
<text  x="562.77" y="367.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (2 samples, 0.01%)</title><rect x="636.2" y="277" width="0.2" height="15.0" fill="rgb(223,178,46)" rx="2" ry="2" />
<text  x="639.24" y="287.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (107 samples, 0.59%)</title><rect x="325.7" y="405" width="7.0" height="15.0" fill="rgb(220,71,9)" rx="2" ry="2" />
<text  x="328.67" y="415.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (5 samples, 0.03%)</title><rect x="1131.9" y="421" width="0.4" height="15.0" fill="rgb(253,202,33)" rx="2" ry="2" />
<text  x="1134.95" y="431.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (101 samples, 0.56%)</title><rect x="284.0" y="453" width="6.6" height="15.0" fill="rgb(205,166,39)" rx="2" ry="2" />
<text  x="287.01" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (5 samples, 0.03%)</title><rect x="78.4" y="389" width="0.3" height="15.0" fill="rgb(240,69,0)" rx="2" ry="2" />
<text  x="81.37" y="399.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (24 samples, 0.13%)</title><rect x="466.7" y="245" width="1.6" height="15.0" fill="rgb(246,32,8)" rx="2" ry="2" />
<text  x="469.72" y="255.5" ></text>
</g>
<g >
<title>HandleStackContext (302 samples, 1.67%)</title><rect x="186.1" y="501" width="19.7" height="15.0" fill="rgb(247,115,23)" rx="2" ry="2" />
<text  x="189.12" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (97 samples, 0.54%)</title><rect x="456.8" y="293" width="6.3" height="15.0" fill="rgb(217,91,19)" rx="2" ry="2" />
<text  x="459.79" y="303.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (29 samples, 0.16%)</title><rect x="335.9" y="325" width="1.8" height="15.0" fill="rgb(205,55,35)" rx="2" ry="2" />
<text  x="338.86" y="335.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (2 samples, 0.01%)</title><rect x="1071.3" y="309" width="0.2" height="15.0" fill="rgb(231,179,8)" rx="2" ry="2" />
<text  x="1074.35" y="319.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (12 samples, 0.07%)</title><rect x="464.5" y="293" width="0.8" height="15.0" fill="rgb(253,43,23)" rx="2" ry="2" />
<text  x="467.50" y="303.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (182 samples, 1.01%)</title><rect x="433.2" y="357" width="11.9" height="15.0" fill="rgb(236,205,53)" rx="2" ry="2" />
<text  x="436.22" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 samples, 0.43%)</title><rect x="339.8" y="309" width="5.1" height="15.0" fill="rgb(249,179,44)" rx="2" ry="2" />
<text  x="342.77" y="319.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="1046.9" y="437" width="0.3" height="15.0" fill="rgb(214,135,7)" rx="2" ry="2" />
<text  x="1049.86" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (6 samples, 0.03%)</title><rect x="361.0" y="293" width="0.4" height="15.0" fill="rgb(210,220,40)" rx="2" ry="2" />
<text  x="364.00" y="303.5" ></text>
</g>
<g >
<title>__sysvec_call_function (2 samples, 0.01%)</title><rect x="636.2" y="293" width="0.2" height="15.0" fill="rgb(244,161,53)" rx="2" ry="2" />
<text  x="639.24" y="303.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.04%)</title><rect x="448.4" y="261" width="0.4" height="15.0" fill="rgb(250,36,23)" rx="2" ry="2" />
<text  x="451.37" y="271.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (2,850 samples, 15.77%)</title><rect x="604.0" y="389" width="186.1" height="15.0" fill="rgb(247,175,51)" rx="2" ry="2" />
<text  x="606.98" y="399.5" >ringbuf::producer::Produ..</text>
</g>
<g >
<title>rb_erase (2 samples, 0.01%)</title><rect x="101.3" y="389" width="0.1" height="15.0" fill="rgb(219,14,31)" rx="2" ry="2" />
<text  x="104.29" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (667 samples, 3.69%)</title><rect x="690.9" y="325" width="43.6" height="15.0" fill="rgb(230,106,50)" rx="2" ry="2" />
<text  x="693.90" y="335.5" >[lib..</text>
</g>
<g >
<title>__hrtimer_next_event_base (5 samples, 0.03%)</title><rect x="121.4" y="325" width="0.3" height="15.0" fill="rgb(209,38,23)" rx="2" ry="2" />
<text  x="124.40" y="335.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.02%)</title><rect x="420.2" y="357" width="0.2" height="15.0" fill="rgb(210,95,8)" rx="2" ry="2" />
<text  x="423.22" y="367.5" ></text>
</g>
<g >
<title>sel_ldr (13,936 samples, 77.12%)</title><rect x="141.4" y="549" width="910.0" height="15.0" fill="rgb(215,123,4)" rx="2" ry="2" />
<text  x="144.39" y="559.5" >sel_ldr</text>
</g>
<g >
<title>remote_function (62 samples, 0.34%)</title><rect x="136.9" y="277" width="4.0" height="15.0" fill="rgb(219,67,36)" rx="2" ry="2" />
<text  x="139.88" y="287.5" ></text>
</g>
<g >
<title>do_idle (1,434 samples, 7.94%)</title><rect x="1072.0" y="485" width="93.6" height="15.0" fill="rgb(211,215,11)" rx="2" ry="2" />
<text  x="1075.00" y="495.5" >do_idle</text>
</g>
<g >
<title>native_sched_clock (3 samples, 0.02%)</title><rect x="1189.3" y="341" width="0.2" height="15.0" fill="rgb(231,40,37)" rx="2" ry="2" />
<text  x="1192.35" y="351.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (4 samples, 0.02%)</title><rect x="144.4" y="517" width="0.3" height="15.0" fill="rgb(228,183,14)" rx="2" ry="2" />
<text  x="147.39" y="527.5" ></text>
</g>
<g >
<title>__lock_text_start (10 samples, 0.06%)</title><rect x="1137.0" y="357" width="0.6" height="15.0" fill="rgb(207,69,44)" rx="2" ry="2" />
<text  x="1139.98" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="141.3" y="533" width="0.1" height="15.0" fill="rgb(224,53,35)" rx="2" ry="2" />
<text  x="144.26" y="543.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.03%)</title><rect x="361.0" y="277" width="0.4" height="15.0" fill="rgb(225,38,45)" rx="2" ry="2" />
<text  x="364.00" y="287.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (63 samples, 0.35%)</title><rect x="636.4" y="357" width="4.1" height="15.0" fill="rgb(233,141,13)" rx="2" ry="2" />
<text  x="639.37" y="367.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (95 samples, 0.53%)</title><rect x="239.9" y="485" width="6.2" height="15.0" fill="rgb(205,177,42)" rx="2" ry="2" />
<text  x="242.93" y="495.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (4 samples, 0.02%)</title><rect x="150.5" y="501" width="0.3" height="15.0" fill="rgb(254,226,37)" rx="2" ry="2" />
<text  x="153.53" y="511.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (68 samples, 0.38%)</title><rect x="446.9" y="373" width="4.5" height="15.0" fill="rgb(252,134,45)" rx="2" ry="2" />
<text  x="449.93" y="383.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRangeProt (172 samples, 0.95%)</title><rect x="279.4" y="469" width="11.2" height="15.0" fill="rgb(244,115,36)" rx="2" ry="2" />
<text  x="282.37" y="479.5" ></text>
</g>
<g >
<title>perf_mmap__push (5 samples, 0.03%)</title><rect x="140.9" y="469" width="0.4" height="15.0" fill="rgb(247,206,42)" rx="2" ry="2" />
<text  x="143.93" y="479.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (2 samples, 0.01%)</title><rect x="237.2" y="165" width="0.2" height="15.0" fill="rgb(237,43,20)" rx="2" ry="2" />
<text  x="240.25" y="175.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6 samples, 0.03%)</title><rect x="1019.2" y="453" width="0.4" height="15.0" fill="rgb(225,52,30)" rx="2" ry="2" />
<text  x="1022.24" y="463.5" ></text>
</g>
<g >
<title>NaClSysMunmapDecoder (2 samples, 0.01%)</title><rect x="237.2" y="501" width="0.2" height="15.0" fill="rgb(213,15,18)" rx="2" ry="2" />
<text  x="240.25" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (126 samples, 0.70%)</title><rect x="266.4" y="453" width="8.2" height="15.0" fill="rgb(226,106,27)" rx="2" ry="2" />
<text  x="269.37" y="463.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (6,356 samples, 35.17%)</title><rect x="560.9" y="421" width="415.1" height="15.0" fill="rgb(252,114,22)" rx="2" ry="2" />
<text  x="563.95" y="431.5" >rustposix::interface::pipe::EmulatedPipe::write_to_pipe</text>
</g>
<g >
<title>NaClFastMutexUnlock (4 samples, 0.02%)</title><rect x="144.1" y="517" width="0.3" height="15.0" fill="rgb(228,206,17)" rx="2" ry="2" />
<text  x="147.13" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (62 samples, 0.34%)</title><rect x="136.9" y="405" width="4.0" height="15.0" fill="rgb(251,74,41)" rx="2" ry="2" />
<text  x="139.88" y="415.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (642 samples, 3.55%)</title><rect x="32.0" y="437" width="41.9" height="15.0" fill="rgb(228,141,52)" rx="2" ry="2" />
<text  x="35.01" y="447.5" >cpu..</text>
</g>
<g >
<title>core::hash::sip::u8to64_le (12 samples, 0.07%)</title><rect x="356.2" y="277" width="0.8" height="15.0" fill="rgb(250,82,41)" rx="2" ry="2" />
<text  x="359.23" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (3 samples, 0.02%)</title><rect x="1137.8" y="421" width="0.2" height="15.0" fill="rgb(210,188,24)" rx="2" ry="2" />
<text  x="1140.82" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="104.8" y="357" width="0.1" height="15.0" fill="rgb(233,201,49)" rx="2" ry="2" />
<text  x="107.82" y="367.5" ></text>
</g>
<g >
<title>get_typical_interval (19 samples, 0.11%)</title><rect x="76.0" y="421" width="1.2" height="15.0" fill="rgb(236,42,34)" rx="2" ry="2" />
<text  x="78.95" y="431.5" ></text>
</g>
<g >
<title>record__write (5 samples, 0.03%)</title><rect x="140.9" y="437" width="0.4" height="15.0" fill="rgb(254,13,11)" rx="2" ry="2" />
<text  x="143.93" y="447.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (2 samples, 0.01%)</title><rect x="103.5" y="405" width="0.1" height="15.0" fill="rgb(245,71,44)" rx="2" ry="2" />
<text  x="106.51" y="415.5" ></text>
</g>
<g >
<title>native_sched_clock (8 samples, 0.04%)</title><rect x="118.5" y="341" width="0.5" height="15.0" fill="rgb(236,129,11)" rx="2" ry="2" />
<text  x="121.47" y="351.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (2,850 samples, 15.77%)</title><rect x="604.0" y="405" width="186.1" height="15.0" fill="rgb(245,136,33)" rx="2" ry="2" />
<text  x="606.98" y="415.5" >ringbuf::producer::Produ..</text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (59 samples, 0.33%)</title><rect x="465.3" y="309" width="3.8" height="15.0" fill="rgb(242,83,11)" rx="2" ry="2" />
<text  x="468.28" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (48 samples, 0.27%)</title><rect x="453.7" y="293" width="3.1" height="15.0" fill="rgb(210,188,8)" rx="2" ry="2" />
<text  x="456.66" y="303.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (13 samples, 0.07%)</title><rect x="205.0" y="485" width="0.8" height="15.0" fill="rgb(240,24,37)" rx="2" ry="2" />
<text  x="207.99" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (191 samples, 1.06%)</title><rect x="345.4" y="373" width="12.5" height="15.0" fill="rgb(235,105,54)" rx="2" ry="2" />
<text  x="348.39" y="383.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (82 samples, 0.45%)</title><rect x="339.8" y="389" width="5.3" height="15.0" fill="rgb(231,73,33)" rx="2" ry="2" />
<text  x="342.77" y="399.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (82 samples, 0.45%)</title><rect x="339.8" y="373" width="5.3" height="15.0" fill="rgb(253,221,25)" rx="2" ry="2" />
<text  x="342.77" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (3 samples, 0.02%)</title><rect x="361.4" y="309" width="0.2" height="15.0" fill="rgb(220,44,21)" rx="2" ry="2" />
<text  x="364.39" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="140.9" y="373" width="0.4" height="15.0" fill="rgb(246,100,32)" rx="2" ry="2" />
<text  x="143.93" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter (278 samples, 1.54%)</title><rect x="1167.6" y="389" width="18.2" height="15.0" fill="rgb(248,160,8)" rx="2" ry="2" />
<text  x="1170.60" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="140.9" y="389" width="0.4" height="15.0" fill="rgb(218,38,40)" rx="2" ry="2" />
<text  x="143.93" y="399.5" ></text>
</g>
<g >
<title>start_secondary (1,463 samples, 8.10%)</title><rect x="1071.8" y="517" width="95.5" height="15.0" fill="rgb(218,117,54)" rx="2" ry="2" />
<text  x="1074.80" y="527.5" >start_secon..</text>
</g>
<g >
<title>[unknown]  (671 samples, 3.71%)</title><rect x="976.0" y="533" width="43.8" height="15.0" fill="rgb(217,215,15)" rx="2" ry="2" />
<text  x="979.01" y="543.5" >[unk..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (34 samples, 0.19%)</title><rect x="341.7" y="293" width="2.2" height="15.0" fill="rgb(227,122,17)" rx="2" ry="2" />
<text  x="344.67" y="303.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (38 samples, 0.21%)</title><rect x="1139.2" y="453" width="2.5" height="15.0" fill="rgb(237,83,4)" rx="2" ry="2" />
<text  x="1142.20" y="463.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.01%)</title><rect x="134.8" y="373" width="0.1" height="15.0" fill="rgb(233,97,8)" rx="2" ry="2" />
<text  x="137.79" y="383.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (2 samples, 0.01%)</title><rect x="134.8" y="389" width="0.1" height="15.0" fill="rgb(222,81,14)" rx="2" ry="2" />
<text  x="137.79" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (55 samples, 0.30%)</title><rect x="347.9" y="309" width="3.6" height="15.0" fill="rgb(225,174,26)" rx="2" ry="2" />
<text  x="350.87" y="319.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::ser::Serialize for dashmap::DashMap&lt;K,V,H&gt;&gt;::serialize (2 samples, 0.01%)</title><rect x="1050.1" y="341" width="0.1" height="15.0" fill="rgb(222,119,13)" rx="2" ry="2" />
<text  x="1053.06" y="351.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (4 samples, 0.02%)</title><rect x="150.5" y="453" width="0.3" height="15.0" fill="rgb(232,186,19)" rx="2" ry="2" />
<text  x="153.53" y="463.5" ></text>
</g>
<g >
<title>try_to_unmap (3 samples, 0.02%)</title><rect x="1071.3" y="405" width="0.2" height="15.0" fill="rgb(254,125,31)" rx="2" ry="2" />
<text  x="1074.28" y="415.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (283 samples, 1.57%)</title><rect x="432.9" y="389" width="18.5" height="15.0" fill="rgb(227,223,54)" rx="2" ry="2" />
<text  x="435.89" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (16 samples, 0.09%)</title><rect x="100.4" y="469" width="1.1" height="15.0" fill="rgb(227,175,36)" rx="2" ry="2" />
<text  x="103.44" y="479.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (2 samples, 0.01%)</title><rect x="1186.4" y="341" width="0.1" height="15.0" fill="rgb(244,143,45)" rx="2" ry="2" />
<text  x="1189.41" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (12 samples, 0.07%)</title><rect x="743.6" y="341" width="0.8" height="15.0" fill="rgb(242,188,39)" rx="2" ry="2" />
<text  x="746.60" y="351.5" ></text>
</g>
<g >
<title>native_sched_clock (8 samples, 0.04%)</title><rect x="98.5" y="405" width="0.5" height="15.0" fill="rgb(253,37,22)" rx="2" ry="2" />
<text  x="101.48" y="415.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (3 samples, 0.02%)</title><rect x="144.7" y="517" width="0.1" height="15.0" fill="rgb(205,145,53)" rx="2" ry="2" />
<text  x="147.65" y="527.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4 samples, 0.02%)</title><rect x="352.3" y="325" width="0.3" height="15.0" fill="rgb(211,18,43)" rx="2" ry="2" />
<text  x="355.31" y="335.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (93 samples, 0.51%)</title><rect x="345.4" y="357" width="6.1" height="15.0" fill="rgb(229,61,12)" rx="2" ry="2" />
<text  x="348.39" y="367.5" ></text>
</g>
<g >
<title>pick_next_task_idle (3 samples, 0.02%)</title><rect x="1160.2" y="437" width="0.2" height="15.0" fill="rgb(223,138,10)" rx="2" ry="2" />
<text  x="1163.22" y="447.5" ></text>
</g>
<g >
<title>__update_idle_core (2 samples, 0.01%)</title><rect x="1160.3" y="421" width="0.1" height="15.0" fill="rgb(206,160,53)" rx="2" ry="2" />
<text  x="1163.29" y="431.5" ></text>
</g>
<g >
<title>do_user_addr_fault (7 samples, 0.04%)</title><rect x="1019.2" y="485" width="0.5" height="15.0" fill="rgb(242,82,24)" rx="2" ry="2" />
<text  x="1022.24" y="495.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (29 samples, 0.16%)</title><rect x="448.8" y="261" width="1.9" height="15.0" fill="rgb(220,76,21)" rx="2" ry="2" />
<text  x="451.83" y="271.5" ></text>
</g>
<g >
<title>migrate_pages (7 samples, 0.04%)</title><rect x="1071.1" y="453" width="0.4" height="15.0" fill="rgb(222,27,22)" rx="2" ry="2" />
<text  x="1074.09" y="463.5" ></text>
</g>
<g >
<title>_perf_ioctl (62 samples, 0.34%)</title><rect x="136.9" y="373" width="4.0" height="15.0" fill="rgb(231,58,45)" rx="2" ry="2" />
<text  x="139.88" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (402 samples, 2.22%)</title><rect x="640.5" y="341" width="26.2" height="15.0" fill="rgb(237,158,23)" rx="2" ry="2" />
<text  x="643.49" y="351.5" >c..</text>
</g>
<g >
<title>cpuidle_idle_call (299 samples, 1.65%)</title><rect x="103.6" y="405" width="19.6" height="15.0" fill="rgb(212,30,35)" rx="2" ry="2" />
<text  x="106.64" y="415.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (466 samples, 2.58%)</title><rect x="516.0" y="405" width="30.5" height="15.0" fill="rgb(210,72,32)" rx="2" ry="2" />
<text  x="519.02" y="415.5" >ri..</text>
</g>
<g >
<title>ktime_get (2 samples, 0.01%)</title><rect x="100.7" y="453" width="0.1" height="15.0" fill="rgb(220,109,11)" rx="2" ry="2" />
<text  x="103.70" y="463.5" ></text>
</g>
<g >
<title>do_anonymous_page (5 samples, 0.03%)</title><rect x="1019.3" y="421" width="0.3" height="15.0" fill="rgb(239,10,49)" rx="2" ry="2" />
<text  x="1022.30" y="431.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,462 samples, 8.09%)</title><rect x="1071.8" y="501" width="95.5" height="15.0" fill="rgb(237,4,34)" rx="2" ry="2" />
<text  x="1074.80" y="511.5" >cpu_startup..</text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (22 samples, 0.12%)</title><rect x="145.8" y="517" width="1.5" height="15.0" fill="rgb(252,220,22)" rx="2" ry="2" />
<text  x="148.83" y="527.5" ></text>
</g>
<g >
<title>NaClLog (7 samples, 0.04%)</title><rect x="283.5" y="453" width="0.5" height="15.0" fill="rgb(244,141,5)" rx="2" ry="2" />
<text  x="286.55" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.01%)</title><rect x="1189.7" y="405" width="0.1" height="15.0" fill="rgb(237,194,42)" rx="2" ry="2" />
<text  x="1192.67" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (124 samples, 0.69%)</title><rect x="409.7" y="357" width="8.1" height="15.0" fill="rgb(210,73,50)" rx="2" ry="2" />
<text  x="412.71" y="367.5" ></text>
</g>
<g >
<title>run_rebalance_domains (3 samples, 0.02%)</title><rect x="1075.8" y="325" width="0.2" height="15.0" fill="rgb(241,226,15)" rx="2" ry="2" />
<text  x="1078.79" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange (124 samples, 0.69%)</title><rect x="409.7" y="373" width="8.1" height="15.0" fill="rgb(249,201,45)" rx="2" ry="2" />
<text  x="412.71" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (7 samples, 0.04%)</title><rect x="1186.3" y="357" width="0.5" height="15.0" fill="rgb(252,108,42)" rx="2" ry="2" />
<text  x="1189.34" y="367.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (114 samples, 0.63%)</title><rect x="402.0" y="373" width="7.4" height="15.0" fill="rgb(245,90,49)" rx="2" ry="2" />
<text  x="405.01" y="383.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (1,027 samples, 5.68%)</title><rect x="667.4" y="357" width="67.1" height="15.0" fill="rgb(232,162,0)" rx="2" ry="2" />
<text  x="670.39" y="367.5" >ringbuf..</text>
</g>
<g >
<title>.NET_ThreadPool (1,942 samples, 10.75%)</title><rect x="10.0" y="549" width="126.8" height="15.0" fill="rgb(241,57,14)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >.NET_ThreadPool</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (94 samples, 0.52%)</title><rect x="597.8" y="389" width="6.2" height="15.0" fill="rgb(234,207,48)" rx="2" ry="2" />
<text  x="600.85" y="399.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (4 samples, 0.02%)</title><rect x="396.7" y="421" width="0.2" height="15.0" fill="rgb(232,203,30)" rx="2" ry="2" />
<text  x="399.65" y="431.5" ></text>
</g>
<g >
<title>_perf_ioctl (2 samples, 0.01%)</title><rect x="141.3" y="469" width="0.1" height="15.0" fill="rgb(205,75,27)" rx="2" ry="2" />
<text  x="144.26" y="479.5" ></text>
</g>
<g >
<title>MunmapInternal (2 samples, 0.01%)</title><rect x="237.2" y="469" width="0.2" height="15.0" fill="rgb(210,73,38)" rx="2" ry="2" />
<text  x="240.25" y="479.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (6 samples, 0.03%)</title><rect x="235.0" y="501" width="0.4" height="15.0" fill="rgb(243,40,3)" rx="2" ry="2" />
<text  x="237.96" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (6,356 samples, 35.17%)</title><rect x="560.9" y="437" width="415.1" height="15.0" fill="rgb(225,170,6)" rx="2" ry="2" />
<text  x="563.95" y="447.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposi..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (22 samples, 0.12%)</title><rect x="461.7" y="277" width="1.4" height="15.0" fill="rgb(244,107,0)" rx="2" ry="2" />
<text  x="464.69" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (16 samples, 0.09%)</title><rect x="471.6" y="309" width="1.1" height="15.0" fill="rgb(248,166,37)" rx="2" ry="2" />
<text  x="474.62" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (78 samples, 0.43%)</title><rect x="339.8" y="325" width="5.1" height="15.0" fill="rgb(220,111,18)" rx="2" ry="2" />
<text  x="342.77" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (96 samples, 0.53%)</title><rect x="469.2" y="341" width="6.3" height="15.0" fill="rgb(219,201,36)" rx="2" ry="2" />
<text  x="472.20" y="351.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (231 samples, 1.28%)</title><rect x="806.8" y="357" width="15.1" height="15.0" fill="rgb(252,27,29)" rx="2" ry="2" />
<text  x="809.81" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (10 samples, 0.06%)</title><rect x="1187.1" y="405" width="0.6" height="15.0" fill="rgb(210,152,20)" rx="2" ry="2" />
<text  x="1190.06" y="415.5" ></text>
</g>
<g >
<title>clocksource_watchdog (3 samples, 0.02%)</title><rect x="33.6" y="277" width="0.2" height="15.0" fill="rgb(225,199,17)" rx="2" ry="2" />
<text  x="36.57" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (214 samples, 1.18%)</title><rect x="374.2" y="421" width="14.0" height="15.0" fill="rgb(231,208,54)" rx="2" ry="2" />
<text  x="377.19" y="431.5" ></text>
</g>
<g >
<title>llist_reverse_order (24 samples, 0.13%)</title><rect x="1141.7" y="453" width="1.5" height="15.0" fill="rgb(216,211,30)" rx="2" ry="2" />
<text  x="1144.68" y="463.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (4 samples, 0.02%)</title><rect x="246.8" y="485" width="0.2" height="15.0" fill="rgb(212,203,17)" rx="2" ry="2" />
<text  x="249.78" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::compare_exchange_weak (96 samples, 0.53%)</title><rect x="325.9" y="341" width="6.3" height="15.0" fill="rgb(242,159,16)" rx="2" ry="2" />
<text  x="328.93" y="351.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (7 samples, 0.04%)</title><rect x="1019.2" y="517" width="0.5" height="15.0" fill="rgb(239,29,15)" rx="2" ry="2" />
<text  x="1022.24" y="527.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.01%)</title><rect x="1156.8" y="373" width="0.1" height="15.0" fill="rgb(250,172,52)" rx="2" ry="2" />
<text  x="1159.76" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.02%)</title><rect x="80.8" y="357" width="0.2" height="15.0" fill="rgb(226,71,21)" rx="2" ry="2" />
<text  x="83.79" y="367.5" ></text>
</g>
<g >
<title>native_sched_clock (6 samples, 0.03%)</title><rect x="1163.6" y="421" width="0.3" height="15.0" fill="rgb(238,184,14)" rx="2" ry="2" />
<text  x="1166.55" y="431.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (3 samples, 0.02%)</title><rect x="1186.6" y="309" width="0.2" height="15.0" fill="rgb(253,136,48)" rx="2" ry="2" />
<text  x="1189.60" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (78 samples, 0.43%)</title><rect x="396.9" y="389" width="5.1" height="15.0" fill="rgb(224,187,2)" rx="2" ry="2" />
<text  x="399.91" y="399.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (7 samples, 0.04%)</title><rect x="471.2" y="309" width="0.4" height="15.0" fill="rgb(222,119,34)" rx="2" ry="2" />
<text  x="474.16" y="319.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 0.01%)</title><rect x="237.2" y="69" width="0.2" height="15.0" fill="rgb(211,181,48)" rx="2" ry="2" />
<text  x="240.25" y="79.5" ></text>
</g>
<g >
<title>main (2 samples, 0.01%)</title><rect x="1050.1" y="485" width="0.1" height="15.0" fill="rgb(239,72,49)" rx="2" ry="2" />
<text  x="1053.06" y="495.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (347 samples, 1.92%)</title><rect x="1167.3" y="517" width="22.7" height="15.0" fill="rgb(215,86,22)" rx="2" ry="2" />
<text  x="1170.34" y="527.5" >x..</text>
</g>
<g >
<title>do_softirq_own_stack (8 samples, 0.04%)</title><rect x="33.2" y="373" width="0.6" height="15.0" fill="rgb(231,114,33)" rx="2" ry="2" />
<text  x="36.25" y="383.5" ></text>
</g>
<g >
<title>sysvec_call_function (2 samples, 0.01%)</title><rect x="636.2" y="309" width="0.2" height="15.0" fill="rgb(218,92,14)" rx="2" ry="2" />
<text  x="639.24" y="319.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.02%)</title><rect x="80.4" y="373" width="0.2" height="15.0" fill="rgb(238,82,38)" rx="2" ry="2" />
<text  x="83.40" y="383.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (887 samples, 4.91%)</title><rect x="417.8" y="421" width="57.9" height="15.0" fill="rgb(223,120,48)" rx="2" ry="2" />
<text  x="420.81" y="431.5" >dashma..</text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.03%)</title><rect x="71.3" y="405" width="0.3" height="15.0" fill="rgb(206,185,17)" rx="2" ry="2" />
<text  x="74.32" y="415.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.02%)</title><rect x="121.0" y="341" width="0.2" height="15.0" fill="rgb(237,38,23)" rx="2" ry="2" />
<text  x="124.01" y="351.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (2 samples, 0.01%)</title><rect x="141.3" y="453" width="0.1" height="15.0" fill="rgb(207,36,5)" rx="2" ry="2" />
<text  x="144.26" y="463.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (87 samples, 0.48%)</title><rect x="475.7" y="405" width="5.7" height="15.0" fill="rgb(218,229,36)" rx="2" ry="2" />
<text  x="478.73" y="415.5" ></text>
</g>
<g >
<title>ktime_get (3 samples, 0.02%)</title><rect x="1164.5" y="453" width="0.2" height="15.0" fill="rgb(247,151,14)" rx="2" ry="2" />
<text  x="1167.53" y="463.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (3 samples, 0.02%)</title><rect x="1049.7" y="517" width="0.2" height="15.0" fill="rgb(205,131,52)" rx="2" ry="2" />
<text  x="1052.73" y="527.5" ></text>
</g>
<g >
<title>event_function (2 samples, 0.01%)</title><rect x="141.3" y="357" width="0.1" height="15.0" fill="rgb(223,184,4)" rx="2" ry="2" />
<text  x="144.26" y="367.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="237.2" y="229" width="0.2" height="15.0" fill="rgb(236,7,50)" rx="2" ry="2" />
<text  x="240.25" y="239.5" ></text>
</g>
<g >
<title>update_rq_clock (8 samples, 0.04%)</title><rect x="98.5" y="437" width="0.5" height="15.0" fill="rgb(215,149,39)" rx="2" ry="2" />
<text  x="101.48" y="447.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (88 samples, 0.49%)</title><rect x="510.0" y="389" width="5.8" height="15.0" fill="rgb(248,148,28)" rx="2" ry="2" />
<text  x="513.01" y="399.5" ></text>
</g>
<g >
<title>cpu_startup_entry (515 samples, 2.85%)</title><rect x="103.2" y="437" width="33.6" height="15.0" fill="rgb(242,8,19)" rx="2" ry="2" />
<text  x="106.19" y="447.5" >cp..</text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (10 samples, 0.06%)</title><rect x="1046.5" y="517" width="0.7" height="15.0" fill="rgb(213,185,12)" rx="2" ry="2" />
<text  x="1049.53" y="527.5" ></text>
</g>
<g >
<title>llist_reverse_order (4 samples, 0.02%)</title><rect x="1187.3" y="389" width="0.2" height="15.0" fill="rgb(235,121,18)" rx="2" ry="2" />
<text  x="1190.26" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="150.5" y="437" width="0.3" height="15.0" fill="rgb(249,87,24)" rx="2" ry="2" />
<text  x="153.53" y="447.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="237.2" y="181" width="0.2" height="15.0" fill="rgb(241,112,51)" rx="2" ry="2" />
<text  x="240.25" y="191.5" ></text>
</g>
<g >
<title>ptep_clear_flush (2 samples, 0.01%)</title><rect x="1071.3" y="341" width="0.2" height="15.0" fill="rgb(232,129,50)" rx="2" ry="2" />
<text  x="1074.35" y="351.5" ></text>
</g>
<g >
<title>timer_clear_idle (2 samples, 0.01%)</title><rect x="1138.3" y="453" width="0.1" height="15.0" fill="rgb(217,199,47)" rx="2" ry="2" />
<text  x="1141.28" y="463.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (272 samples, 1.51%)</title><rect x="150.8" y="469" width="17.8" height="15.0" fill="rgb(241,200,5)" rx="2" ry="2" />
<text  x="153.79" y="479.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (24 samples, 0.13%)</title><rect x="359.4" y="293" width="1.6" height="15.0" fill="rgb(218,102,3)" rx="2" ry="2" />
<text  x="362.43" y="303.5" ></text>
</g>
<g >
<title>do_idle (344 samples, 1.90%)</title><rect x="1167.3" y="421" width="22.5" height="15.0" fill="rgb(234,208,33)" rx="2" ry="2" />
<text  x="1170.34" y="431.5" >d..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (33 samples, 0.18%)</title><rect x="348.4" y="293" width="2.1" height="15.0" fill="rgb(251,198,14)" rx="2" ry="2" />
<text  x="351.39" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (24 samples, 0.13%)</title><rect x="359.4" y="309" width="1.6" height="15.0" fill="rgb(222,77,26)" rx="2" ry="2" />
<text  x="362.43" y="319.5" ></text>
</g>
<g >
<title>x86_pmu_enable (2 samples, 0.01%)</title><rect x="141.3" y="309" width="0.1" height="15.0" fill="rgb(240,98,36)" rx="2" ry="2" />
<text  x="144.26" y="319.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (3 samples, 0.02%)</title><rect x="136.6" y="421" width="0.2" height="15.0" fill="rgb(226,14,36)" rx="2" ry="2" />
<text  x="139.62" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_poll (2 samples, 0.01%)</title><rect x="27.6" y="501" width="0.1" height="15.0" fill="rgb(243,103,24)" rx="2" ry="2" />
<text  x="30.57" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (104 samples, 0.58%)</title><rect x="552.7" y="325" width="6.8" height="15.0" fill="rgb(231,205,49)" rx="2" ry="2" />
<text  x="555.72" y="335.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (177 samples, 0.98%)</title><rect x="333.6" y="405" width="11.5" height="15.0" fill="rgb(220,3,51)" rx="2" ry="2" />
<text  x="336.57" y="415.5" ></text>
</g>
<g >
<title>lind_read (3 samples, 0.02%)</title><rect x="1048.2" y="517" width="0.2" height="15.0" fill="rgb(253,30,8)" rx="2" ry="2" />
<text  x="1051.23" y="527.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (92 samples, 0.51%)</title><rect x="510.0" y="405" width="6.0" height="15.0" fill="rgb(218,1,45)" rx="2" ry="2" />
<text  x="513.01" y="415.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.02%)</title><rect x="352.3" y="341" width="0.3" height="15.0" fill="rgb(250,219,45)" rx="2" ry="2" />
<text  x="355.31" y="351.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (3 samples, 0.02%)</title><rect x="551.5" y="341" width="0.2" height="15.0" fill="rgb(212,173,33)" rx="2" ry="2" />
<text  x="554.55" y="351.5" ></text>
</g>
<g >
<title>_perf_event_enable (2 samples, 0.01%)</title><rect x="141.3" y="437" width="0.1" height="15.0" fill="rgb(227,68,40)" rx="2" ry="2" />
<text  x="144.26" y="447.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (383 samples, 2.12%)</title><rect x="207.2" y="501" width="25.0" height="15.0" fill="rgb(234,92,38)" rx="2" ry="2" />
<text  x="210.21" y="511.5" >N..</text>
</g>
<g >
<title>tick_nohz_next_event (2 samples, 0.01%)</title><rect x="1137.7" y="421" width="0.1" height="15.0" fill="rgb(216,217,43)" rx="2" ry="2" />
<text  x="1140.69" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (473 samples, 2.62%)</title><rect x="944.7" y="357" width="30.8" height="15.0" fill="rgb(210,228,50)" rx="2" ry="2" />
<text  x="947.66" y="367.5" >co..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (33 samples, 0.18%)</title><rect x="463.1" y="341" width="2.2" height="15.0" fill="rgb(220,59,53)" rx="2" ry="2" />
<text  x="466.13" y="351.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.01%)</title><rect x="134.8" y="357" width="0.1" height="15.0" fill="rgb(220,44,14)" rx="2" ry="2" />
<text  x="137.79" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (358 samples, 1.98%)</title><rect x="452.1" y="373" width="23.4" height="15.0" fill="rgb(208,183,15)" rx="2" ry="2" />
<text  x="455.09" y="383.5" >h..</text>
</g>
<g >
<title>lindrustfinalize (2 samples, 0.01%)</title><rect x="1050.1" y="453" width="0.1" height="15.0" fill="rgb(240,154,13)" rx="2" ry="2" />
<text  x="1053.06" y="463.5" ></text>
</g>
<g >
<title>cpuidle_reflect (2 samples, 0.01%)</title><rect x="74.5" y="453" width="0.1" height="15.0" fill="rgb(225,229,12)" rx="2" ry="2" />
<text  x="77.45" y="463.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (12 samples, 0.07%)</title><rect x="446.1" y="325" width="0.8" height="15.0" fill="rgb(244,49,35)" rx="2" ry="2" />
<text  x="449.15" y="335.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (35 samples, 0.19%)</title><rect x="131.2" y="309" width="2.3" height="15.0" fill="rgb(253,2,50)" rx="2" ry="2" />
<text  x="134.20" y="319.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.01%)</title><rect x="1154.2" y="373" width="0.1" height="15.0" fill="rgb(244,66,52)" rx="2" ry="2" />
<text  x="1157.21" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="141.3" y="517" width="0.1" height="15.0" fill="rgb(205,17,36)" rx="2" ry="2" />
<text  x="144.26" y="527.5" ></text>
</g>
<g >
<title>vfs_write (5 samples, 0.03%)</title><rect x="140.9" y="325" width="0.4" height="15.0" fill="rgb(226,46,19)" rx="2" ry="2" />
<text  x="143.93" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (111 samples, 0.61%)</title><rect x="389.4" y="341" width="7.3" height="15.0" fill="rgb(244,21,8)" rx="2" ry="2" />
<text  x="392.40" y="351.5" ></text>
</g>
<g >
<title>sched_clock_cpu (16 samples, 0.09%)</title><rect x="1160.5" y="421" width="1.0" height="15.0" fill="rgb(230,86,7)" rx="2" ry="2" />
<text  x="1163.48" y="431.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.03%)</title><rect x="339.4" y="357" width="0.4" height="15.0" fill="rgb(211,161,30)" rx="2" ry="2" />
<text  x="342.45" y="367.5" ></text>
</g>
<g >
<title>get_cpu_device (3 samples, 0.02%)</title><rect x="75.7" y="405" width="0.2" height="15.0" fill="rgb(242,218,12)" rx="2" ry="2" />
<text  x="78.69" y="415.5" ></text>
</g>
<g >
<title>__remove_hrtimer (3 samples, 0.02%)</title><rect x="101.2" y="405" width="0.2" height="15.0" fill="rgb(229,184,7)" rx="2" ry="2" />
<text  x="104.23" y="415.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (4 samples, 0.02%)</title><rect x="145.6" y="517" width="0.2" height="15.0" fill="rgb(246,56,5)" rx="2" ry="2" />
<text  x="148.57" y="527.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.01%)</title><rect x="237.2" y="213" width="0.2" height="15.0" fill="rgb(250,43,13)" rx="2" ry="2" />
<text  x="240.25" y="223.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (12 samples, 0.07%)</title><rect x="464.5" y="325" width="0.8" height="15.0" fill="rgb(207,33,24)" rx="2" ry="2" />
<text  x="467.50" y="335.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1,810 samples, 10.02%)</title><rect x="1071.8" y="533" width="118.2" height="15.0" fill="rgb(254,131,38)" rx="2" ry="2" />
<text  x="1074.80" y="543.5" >secondary_star..</text>
</g>
<g >
<title>hrtimer_interrupt (6 samples, 0.03%)</title><rect x="32.9" y="357" width="0.3" height="15.0" fill="rgb(232,228,5)" rx="2" ry="2" />
<text  x="35.86" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (10 samples, 0.06%)</title><rect x="666.7" y="341" width="0.7" height="15.0" fill="rgb(207,74,27)" rx="2" ry="2" />
<text  x="669.74" y="351.5" ></text>
</g>
<g >
<title>compaction_alloc (4 samples, 0.02%)</title><rect x="28.0" y="421" width="0.3" height="15.0" fill="rgb(213,190,1)" rx="2" ry="2" />
<text  x="31.02" y="431.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (7 samples, 0.04%)</title><rect x="975.5" y="357" width="0.5" height="15.0" fill="rgb(250,137,20)" rx="2" ry="2" />
<text  x="978.55" y="367.5" ></text>
</g>
<g >
<title>sched_clock_cpu (13 samples, 0.07%)</title><rect x="1129.2" y="421" width="0.9" height="15.0" fill="rgb(208,113,49)" rx="2" ry="2" />
<text  x="1132.20" y="431.5" ></text>
</g>
<g >
<title>DynArrayGet (4 samples, 0.02%)</title><rect x="1022.8" y="517" width="0.2" height="15.0" fill="rgb(236,45,24)" rx="2" ry="2" />
<text  x="1025.76" y="527.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.01%)</title><rect x="33.3" y="309" width="0.1" height="15.0" fill="rgb(236,48,31)" rx="2" ry="2" />
<text  x="36.31" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (157 samples, 0.87%)</title><rect x="420.7" y="309" width="10.2" height="15.0" fill="rgb(252,63,42)" rx="2" ry="2" />
<text  x="423.68" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (68 samples, 0.38%)</title><rect x="357.9" y="357" width="4.4" height="15.0" fill="rgb(249,69,29)" rx="2" ry="2" />
<text  x="360.86" y="367.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (2 samples, 0.01%)</title><rect x="1019.4" y="405" width="0.1" height="15.0" fill="rgb(227,93,36)" rx="2" ry="2" />
<text  x="1022.37" y="415.5" ></text>
</g>
<g >
<title>nohz_csd_func (34 samples, 0.19%)</title><rect x="1143.2" y="453" width="2.3" height="15.0" fill="rgb(217,109,50)" rx="2" ry="2" />
<text  x="1146.24" y="463.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.01%)</title><rect x="1050.1" y="325" width="0.1" height="15.0" fill="rgb(217,127,2)" rx="2" ry="2" />
<text  x="1053.06" y="335.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (2 samples, 0.01%)</title><rect x="237.2" y="53" width="0.2" height="15.0" fill="rgb(211,69,35)" rx="2" ry="2" />
<text  x="240.25" y="63.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7 samples, 0.04%)</title><rect x="32.8" y="373" width="0.4" height="15.0" fill="rgb(232,205,31)" rx="2" ry="2" />
<text  x="35.79" y="383.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (4 samples, 0.02%)</title><rect x="325.7" y="389" width="0.2" height="15.0" fill="rgb(220,225,26)" rx="2" ry="2" />
<text  x="328.67" y="399.5" ></text>
</g>
<g >
<title>ioctl (62 samples, 0.34%)</title><rect x="136.9" y="453" width="4.0" height="15.0" fill="rgb(210,207,4)" rx="2" ry="2" />
<text  x="139.88" y="463.5" ></text>
</g>
<g >
<title>llist_add_batch (2 samples, 0.01%)</title><rect x="1189.2" y="293" width="0.1" height="15.0" fill="rgb(236,19,28)" rx="2" ry="2" />
<text  x="1192.22" y="303.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.06%)</title><rect x="332.7" y="405" width="0.6" height="15.0" fill="rgb(234,10,11)" rx="2" ry="2" />
<text  x="335.66" y="415.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (171 samples, 0.95%)</title><rect x="618.3" y="341" width="11.2" height="15.0" fill="rgb(233,111,28)" rx="2" ry="2" />
<text  x="621.35" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.05%)</title><rect x="388.2" y="421" width="0.5" height="15.0" fill="rgb(220,30,32)" rx="2" ry="2" />
<text  x="391.16" y="431.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (3 samples, 0.02%)</title><rect x="551.5" y="357" width="0.2" height="15.0" fill="rgb(215,175,4)" rx="2" ry="2" />
<text  x="554.55" y="367.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (4 samples, 0.02%)</title><rect x="117.9" y="341" width="0.2" height="15.0" fill="rgb(249,195,18)" rx="2" ry="2" />
<text  x="120.88" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (13 samples, 0.07%)</title><rect x="474.6" y="309" width="0.9" height="15.0" fill="rgb(223,55,32)" rx="2" ry="2" />
<text  x="477.62" y="319.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (3 samples, 0.02%)</title><rect x="149.6" y="517" width="0.2" height="15.0" fill="rgb(253,86,26)" rx="2" ry="2" />
<text  x="152.61" y="527.5" ></text>
</g>
<g >
<title>NaClLog (5 samples, 0.03%)</title><rect x="247.2" y="485" width="0.4" height="15.0" fill="rgb(222,178,46)" rx="2" ry="2" />
<text  x="250.24" y="495.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.01%)</title><rect x="1050.1" y="309" width="0.1" height="15.0" fill="rgb(248,19,26)" rx="2" ry="2" />
<text  x="1053.06" y="319.5" ></text>
</g>
<g >
<title>cpu_latency_qos_limit (2 samples, 0.01%)</title><rect x="1131.9" y="405" width="0.2" height="15.0" fill="rgb(238,131,37)" rx="2" ry="2" />
<text  x="1134.95" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (46 samples, 0.25%)</title><rect x="465.3" y="293" width="3.0" height="15.0" fill="rgb(207,164,11)" rx="2" ry="2" />
<text  x="468.28" y="303.5" ></text>
</g>
<g >
<title>ktime_get (7 samples, 0.04%)</title><rect x="1162.3" y="453" width="0.5" height="15.0" fill="rgb(214,96,17)" rx="2" ry="2" />
<text  x="1165.31" y="463.5" ></text>
</g>
<g >
<title>ctx_resched (2 samples, 0.01%)</title><rect x="141.3" y="325" width="0.1" height="15.0" fill="rgb(232,46,36)" rx="2" ry="2" />
<text  x="144.26" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.04%)</title><rect x="343.4" y="277" width="0.5" height="15.0" fill="rgb(232,120,21)" rx="2" ry="2" />
<text  x="346.36" y="287.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (281 samples, 1.56%)</title><rect x="33.8" y="421" width="18.3" height="15.0" fill="rgb(243,137,36)" rx="2" ry="2" />
<text  x="36.77" y="431.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (4 samples, 0.02%)</title><rect x="105.0" y="357" width="0.3" height="15.0" fill="rgb(234,228,11)" rx="2" ry="2" />
<text  x="108.01" y="367.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (12 samples, 0.07%)</title><rect x="339.0" y="389" width="0.8" height="15.0" fill="rgb(205,215,39)" rx="2" ry="2" />
<text  x="341.99" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="237.2" y="341" width="0.2" height="15.0" fill="rgb(254,125,48)" rx="2" ry="2" />
<text  x="240.25" y="351.5" ></text>
</g>
<g >
<title>zap_pte_range (2 samples, 0.01%)</title><rect x="237.2" y="149" width="0.2" height="15.0" fill="rgb(247,124,47)" rx="2" ry="2" />
<text  x="240.25" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (8 samples, 0.04%)</title><rect x="1075.5" y="405" width="0.5" height="15.0" fill="rgb(226,134,10)" rx="2" ry="2" />
<text  x="1078.53" y="415.5" ></text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.07%)</title><rect x="431.2" y="389" width="0.8" height="15.0" fill="rgb(251,208,7)" rx="2" ry="2" />
<text  x="434.20" y="399.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (2 samples, 0.01%)</title><rect x="141.3" y="293" width="0.1" height="15.0" fill="rgb(210,73,50)" rx="2" ry="2" />
<text  x="144.26" y="303.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.02%)</title><rect x="1189.8" y="421" width="0.2" height="15.0" fill="rgb(233,81,47)" rx="2" ry="2" />
<text  x="1192.80" y="431.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8 samples, 0.04%)</title><rect x="33.2" y="389" width="0.6" height="15.0" fill="rgb(206,86,26)" rx="2" ry="2" />
<text  x="36.25" y="399.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (2 samples, 0.01%)</title><rect x="1138.0" y="437" width="0.2" height="15.0" fill="rgb(213,153,33)" rx="2" ry="2" />
<text  x="1141.02" y="447.5" ></text>
</g>
<g >
<title>isolate_freepages (4 samples, 0.02%)</title><rect x="28.0" y="405" width="0.3" height="15.0" fill="rgb(222,81,1)" rx="2" ry="2" />
<text  x="31.02" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.43%)</title><rect x="396.9" y="405" width="5.1" height="15.0" fill="rgb(253,198,21)" rx="2" ry="2" />
<text  x="399.91" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (263 samples, 1.46%)</title><rect x="345.1" y="389" width="17.2" height="15.0" fill="rgb(249,216,9)" rx="2" ry="2" />
<text  x="348.13" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (2 samples, 0.01%)</title><rect x="361.9" y="325" width="0.1" height="15.0" fill="rgb(206,0,6)" rx="2" ry="2" />
<text  x="364.91" y="335.5" ></text>
</g>
<g >
<title>poll_idle (299 samples, 1.65%)</title><rect x="52.1" y="421" width="19.5" height="15.0" fill="rgb(245,171,5)" rx="2" ry="2" />
<text  x="55.12" y="431.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (2 samples, 0.01%)</title><rect x="71.6" y="421" width="0.2" height="15.0" fill="rgb(224,227,18)" rx="2" ry="2" />
<text  x="74.64" y="431.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (2 samples, 0.01%)</title><rect x="130.7" y="293" width="0.2" height="15.0" fill="rgb(247,207,2)" rx="2" ry="2" />
<text  x="133.74" y="303.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (19 samples, 0.11%)</title><rect x="1136.5" y="389" width="1.2" height="15.0" fill="rgb(237,84,23)" rx="2" ry="2" />
<text  x="1139.45" y="399.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.03%)</title><rect x="509.7" y="389" width="0.3" height="15.0" fill="rgb(234,212,20)" rx="2" ry="2" />
<text  x="512.69" y="399.5" ></text>
</g>
<g >
<title>menu_select (100 samples, 0.55%)</title><rect x="74.6" y="437" width="6.5" height="15.0" fill="rgb(230,97,54)" rx="2" ry="2" />
<text  x="77.58" y="447.5" ></text>
</g>
<g >
<title>cpuidle_select (119 samples, 0.66%)</title><rect x="1130.4" y="453" width="7.8" height="15.0" fill="rgb(207,111,40)" rx="2" ry="2" />
<text  x="1133.44" y="463.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (6 samples, 0.03%)</title><rect x="388.7" y="373" width="0.4" height="15.0" fill="rgb(226,85,1)" rx="2" ry="2" />
<text  x="391.75" y="383.5" ></text>
</g>
<g >
<title>[sel_ldr] (12,295 samples, 68.04%)</title><rect x="173.1" y="533" width="802.9" height="15.0" fill="rgb(232,103,5)" rx="2" ry="2" />
<text  x="176.12" y="543.5" >[sel_ldr]</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.01%)</title><rect x="1050.1" y="405" width="0.1" height="15.0" fill="rgb(251,161,31)" rx="2" ry="2" />
<text  x="1053.06" y="415.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="237.2" y="245" width="0.2" height="15.0" fill="rgb(207,170,9)" rx="2" ry="2" />
<text  x="240.25" y="255.5" ></text>
</g>
<g >
<title>NaClVmmapCheckAddrMapping (8 samples, 0.04%)</title><rect x="290.6" y="469" width="0.5" height="15.0" fill="rgb(244,216,12)" rx="2" ry="2" />
<text  x="293.60" y="479.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (229 samples, 1.27%)</title><rect x="1167.6" y="357" width="15.0" height="15.0" fill="rgb(214,211,18)" rx="2" ry="2" />
<text  x="1170.60" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (4 samples, 0.02%)</title><rect x="430.9" y="325" width="0.3" height="15.0" fill="rgb(244,53,18)" rx="2" ry="2" />
<text  x="433.93" y="335.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (5 samples, 0.03%)</title><rect x="560.0" y="373" width="0.4" height="15.0" fill="rgb(231,53,24)" rx="2" ry="2" />
<text  x="563.04" y="383.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (43 samples, 0.24%)</title><rect x="275.1" y="469" width="2.8" height="15.0" fill="rgb(211,136,42)" rx="2" ry="2" />
<text  x="278.12" y="479.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (4 samples, 0.02%)</title><rect x="388.5" y="405" width="0.2" height="15.0" fill="rgb(225,204,12)" rx="2" ry="2" />
<text  x="391.49" y="415.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (8 samples, 0.04%)</title><rect x="1128.7" y="405" width="0.5" height="15.0" fill="rgb(218,210,18)" rx="2" ry="2" />
<text  x="1131.68" y="415.5" ></text>
</g>
<g >
<title>read_hpet.part.0 (3 samples, 0.02%)</title><rect x="33.6" y="229" width="0.2" height="15.0" fill="rgb(215,82,53)" rx="2" ry="2" />
<text  x="36.57" y="239.5" ></text>
</g>
<g >
<title>event_function_call (2 samples, 0.01%)</title><rect x="141.3" y="421" width="0.1" height="15.0" fill="rgb(249,84,9)" rx="2" ry="2" />
<text  x="144.26" y="431.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (5 samples, 0.03%)</title><rect x="72.6" y="405" width="0.3" height="15.0" fill="rgb(237,103,6)" rx="2" ry="2" />
<text  x="75.56" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (473 samples, 2.62%)</title><rect x="944.7" y="341" width="30.8" height="15.0" fill="rgb(206,27,28)" rx="2" ry="2" />
<text  x="947.66" y="351.5" >co..</text>
</g>
<g >
<title>__free_one_page (2 samples, 0.01%)</title><rect x="237.2" y="37" width="0.2" height="15.0" fill="rgb(221,132,26)" rx="2" ry="2" />
<text  x="240.25" y="47.5" ></text>
</g>
<g >
<title>[perf-90.map] (35 samples, 0.19%)</title><rect x="170.8" y="533" width="2.3" height="15.0" fill="rgb(241,15,38)" rx="2" ry="2" />
<text  x="173.84" y="543.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="1075.5" y="389" width="0.2" height="15.0" fill="rgb(245,150,44)" rx="2" ry="2" />
<text  x="1078.53" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (76 samples, 0.42%)</title><rect x="352.6" y="293" width="4.9" height="15.0" fill="rgb(253,192,30)" rx="2" ry="2" />
<text  x="355.57" y="303.5" ></text>
</g>
<g >
<title>read_tsc (4 samples, 0.02%)</title><rect x="99.9" y="453" width="0.3" height="15.0" fill="rgb(212,72,1)" rx="2" ry="2" />
<text  x="102.92" y="463.5" ></text>
</g>
<g >
<title>__cmd_record (67 samples, 0.37%)</title><rect x="136.9" y="517" width="4.4" height="15.0" fill="rgb(209,78,48)" rx="2" ry="2" />
<text  x="139.88" y="527.5" ></text>
</g>
<g >
<title>isolate_freepages_block (4 samples, 0.02%)</title><rect x="28.0" y="389" width="0.3" height="15.0" fill="rgb(207,142,36)" rx="2" ry="2" />
<text  x="31.02" y="399.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="1133.6" y="405" width="0.2" height="15.0" fill="rgb(252,124,36)" rx="2" ry="2" />
<text  x="1136.58" y="415.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (7 samples, 0.04%)</title><rect x="790.1" y="357" width="0.5" height="15.0" fill="rgb(240,50,27)" rx="2" ry="2" />
<text  x="793.09" y="367.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (2 samples, 0.01%)</title><rect x="141.1" y="165" width="0.2" height="15.0" fill="rgb(219,79,33)" rx="2" ry="2" />
<text  x="144.13" y="175.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (55 samples, 0.30%)</title><rect x="94.6" y="373" width="3.6" height="15.0" fill="rgb(215,18,18)" rx="2" ry="2" />
<text  x="97.57" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (3,017 samples, 16.70%)</title><rect x="363.5" y="437" width="197.1" height="15.0" fill="rgb(221,12,26)" rx="2" ry="2" />
<text  x="366.54" y="447.5" >rustposix::safeposix::sys..</text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.02%)</title><rect x="362.0" y="325" width="0.3" height="15.0" fill="rgb(240,221,52)" rx="2" ry="2" />
<text  x="365.04" y="335.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (5 samples, 0.03%)</title><rect x="316.1" y="437" width="0.3" height="15.0" fill="rgb(217,209,54)" rx="2" ry="2" />
<text  x="319.07" y="447.5" ></text>
</g>
<g >
<title>core::cmp::min (310 samples, 1.72%)</title><rect x="577.6" y="405" width="20.2" height="15.0" fill="rgb(220,29,26)" rx="2" ry="2" />
<text  x="580.60" y="415.5" ></text>
</g>
</g>
</svg>
