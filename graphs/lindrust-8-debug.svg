<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="822.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="805" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="805" > </text>
<g id="frames">
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="561.2" y="629" width="0.2" height="15.0" fill="rgb(247,115,12)" rx="2" ry="2" />
<text  x="564.17" y="639.5" ></text>
</g>
<g >
<title>NaClSysRead (1,929 samples, 35.97%)</title><rect x="137.0" y="693" width="424.4" height="15.0" fill="rgb(241,71,20)" rx="2" ry="2" />
<text  x="139.96" y="703.5" >NaClSysRead</text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.02%)</title><rect x="42.3" y="725" width="0.3" height="15.0" fill="rgb(225,3,11)" rx="2" ry="2" />
<text  x="45.34" y="735.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (27 samples, 0.50%)</title><rect x="977.0" y="645" width="6.0" height="15.0" fill="rgb(248,193,1)" rx="2" ry="2" />
<text  x="980.01" y="655.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="790.2" y="469" width="0.2" height="15.0" fill="rgb(214,205,9)" rx="2" ry="2" />
<text  x="793.21" y="479.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.24%)</title><rect x="758.5" y="469" width="2.9" height="15.0" fill="rgb(226,97,29)" rx="2" ry="2" />
<text  x="761.53" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (2 samples, 0.04%)</title><rect x="45.9" y="725" width="0.4" height="15.0" fill="rgb(242,163,42)" rx="2" ry="2" />
<text  x="48.86" y="735.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.24%)</title><rect x="620.1" y="581" width="2.9" height="15.0" fill="rgb(249,46,35)" rx="2" ry="2" />
<text  x="623.13" y="591.5" ></text>
</g>
<g >
<title>error_entry (2 samples, 0.04%)</title><rect x="1049.0" y="725" width="0.4" height="15.0" fill="rgb(228,94,4)" rx="2" ry="2" />
<text  x="1051.96" y="735.5" ></text>
</g>
<g >
<title>core::cmp::min_by (1 samples, 0.02%)</title><rect x="658.2" y="533" width="0.2" height="15.0" fill="rgb(224,197,42)" rx="2" ry="2" />
<text  x="661.20" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="135.4" y="549" width="0.2" height="15.0" fill="rgb(206,25,53)" rx="2" ry="2" />
<text  x="138.41" y="559.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.86%)</title><rect x="644.8" y="565" width="10.1" height="15.0" fill="rgb(251,219,49)" rx="2" ry="2" />
<text  x="647.78" y="575.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="136.7" y="325" width="0.3" height="15.0" fill="rgb(215,101,9)" rx="2" ry="2" />
<text  x="139.74" y="335.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (4 samples, 0.07%)</title><rect x="29.8" y="357" width="0.9" height="15.0" fill="rgb(228,89,39)" rx="2" ry="2" />
<text  x="32.80" y="367.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect x="136.1" y="341" width="0.4" height="15.0" fill="rgb(223,187,40)" rx="2" ry="2" />
<text  x="139.07" y="351.5" ></text>
</g>
<g >
<title>NaClAvlTreeInsert (8 samples, 0.15%)</title><rect x="943.1" y="629" width="1.8" height="15.0" fill="rgb(248,18,8)" rx="2" ry="2" />
<text  x="946.13" y="639.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="125.1" y="229" width="0.2" height="15.0" fill="rgb(228,186,9)" rx="2" ry="2" />
<text  x="128.07" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.02%)</title><rect x="136.1" y="197" width="0.2" height="15.0" fill="rgb(216,135,16)" rx="2" ry="2" />
<text  x="139.07" y="207.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="1113.4" y="549" width="0.5" height="15.0" fill="rgb(243,9,2)" rx="2" ry="2" />
<text  x="1116.43" y="559.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 1.19%)</title><rect x="14.8" y="405" width="14.1" height="15.0" fill="rgb(235,20,52)" rx="2" ry="2" />
<text  x="17.84" y="415.5" ></text>
</g>
<g >
<title>do_unlinkat (1 samples, 0.02%)</title><rect x="125.1" y="405" width="0.2" height="15.0" fill="rgb(218,32,44)" rx="2" ry="2" />
<text  x="128.07" y="415.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="1052.5" y="485" width="0.2" height="15.0" fill="rgb(230,149,17)" rx="2" ry="2" />
<text  x="1055.48" y="495.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.06%)</title><rect x="1044.1" y="565" width="0.7" height="15.0" fill="rgb(209,208,10)" rx="2" ry="2" />
<text  x="1047.12" y="575.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (69 samples, 1.29%)</title><rect x="750.2" y="581" width="15.1" height="15.0" fill="rgb(243,157,17)" rx="2" ry="2" />
<text  x="753.17" y="591.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.04%)</title><rect x="1113.4" y="597" width="0.5" height="15.0" fill="rgb(223,169,34)" rx="2" ry="2" />
<text  x="1116.43" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="134.3" y="645" width="0.2" height="15.0" fill="rgb(251,149,21)" rx="2" ry="2" />
<text  x="137.31" y="655.5" ></text>
</g>
<g >
<title>irq_enter_rcu (10 samples, 0.19%)</title><rect x="1152.2" y="533" width="2.2" height="15.0" fill="rgb(253,53,13)" rx="2" ry="2" />
<text  x="1155.16" y="543.5" ></text>
</g>
<g >
<title>MarkValidJumpTarget (1 samples, 0.02%)</title><rect x="1056.0" y="597" width="0.2" height="15.0" fill="rgb(243,45,35)" rx="2" ry="2" />
<text  x="1059.00" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (55 samples, 1.03%)</title><rect x="428.3" y="517" width="12.1" height="15.0" fill="rgb(224,202,11)" rx="2" ry="2" />
<text  x="431.27" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="126.0" y="597" width="0.4" height="15.0" fill="rgb(249,123,54)" rx="2" ry="2" />
<text  x="128.95" y="607.5" ></text>
</g>
<g >
<title>enqueue_task (2 samples, 0.04%)</title><rect x="1157.9" y="325" width="0.4" height="15.0" fill="rgb(228,41,7)" rx="2" ry="2" />
<text  x="1160.88" y="335.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (82 samples, 1.53%)</title><rect x="696.3" y="533" width="18.0" height="15.0" fill="rgb(209,141,14)" rx="2" ry="2" />
<text  x="699.26" y="543.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="30.0" y="165" width="0.2" height="15.0" fill="rgb(225,150,32)" rx="2" ry="2" />
<text  x="33.02" y="175.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.02%)</title><rect x="1093.0" y="373" width="0.2" height="15.0" fill="rgb(224,3,6)" rx="2" ry="2" />
<text  x="1095.97" y="383.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.02%)</title><rect x="1093.2" y="357" width="0.2" height="15.0" fill="rgb(231,128,21)" rx="2" ry="2" />
<text  x="1096.19" y="367.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.02%)</title><rect x="1113.7" y="277" width="0.2" height="15.0" fill="rgb(216,122,49)" rx="2" ry="2" />
<text  x="1116.65" y="287.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (3 samples, 0.06%)</title><rect x="1150.0" y="373" width="0.6" height="15.0" fill="rgb(237,34,46)" rx="2" ry="2" />
<text  x="1152.96" y="383.5" ></text>
</g>
<g >
<title>HandleStackContext (45 samples, 0.84%)</title><rect x="93.2" y="709" width="9.9" height="15.0" fill="rgb(247,198,11)" rx="2" ry="2" />
<text  x="96.17" y="719.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.02%)</title><rect x="1052.5" y="405" width="0.2" height="15.0" fill="rgb(220,209,43)" rx="2" ry="2" />
<text  x="1055.48" y="415.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.02%)</title><rect x="1108.8" y="565" width="0.2" height="15.0" fill="rgb(238,54,1)" rx="2" ry="2" />
<text  x="1111.81" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1,926 samples, 35.91%)</title><rect x="137.2" y="613" width="423.7" height="15.0" fill="rgb(205,223,42)" rx="2" ry="2" />
<text  x="140.18" y="623.5" >rustposix::safeposix::dispatcher::dispatcher::{{closure}}</text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.04%)</title><rect x="779.4" y="501" width="0.5" height="15.0" fill="rgb(213,10,26)" rx="2" ry="2" />
<text  x="782.43" y="511.5" ></text>
</g>
<g >
<title>cpu_startup_entry (222 samples, 4.14%)</title><rect x="1141.2" y="645" width="48.8" height="15.0" fill="rgb(231,129,40)" rx="2" ry="2" />
<text  x="1144.15" y="655.5" >cpu_..</text>
</g>
<g >
<title>NaClRangeStatsUpdate (20 samples, 0.37%)</title><rect x="889.7" y="597" width="4.4" height="15.0" fill="rgb(237,187,32)" rx="2" ry="2" />
<text  x="892.66" y="607.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.02%)</title><rect x="33.5" y="469" width="0.3" height="15.0" fill="rgb(212,116,38)" rx="2" ry="2" />
<text  x="36.54" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::consumer::Consumer&lt;u8&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="173.0" y="565" width="0.3" height="15.0" fill="rgb(209,116,24)" rx="2" ry="2" />
<text  x="176.04" y="575.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.06%)</title><rect x="1186.9" y="581" width="0.7" height="15.0" fill="rgb(209,145,25)" rx="2" ry="2" />
<text  x="1189.92" y="591.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="10.9" y="597" width="0.2" height="15.0" fill="rgb(224,128,0)" rx="2" ry="2" />
<text  x="13.88" y="607.5" ></text>
</g>
<g >
<title>NaClGetDescMu (2 samples, 0.04%)</title><rect x="37.3" y="725" width="0.4" height="15.0" fill="rgb(223,219,13)" rx="2" ry="2" />
<text  x="40.28" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (168 samples, 3.13%)</title><rect x="363.8" y="533" width="37.0" height="15.0" fill="rgb(254,63,12)" rx="2" ry="2" />
<text  x="366.80" y="543.5" >cor..</text>
</g>
<g >
<title>new_sync_write (15 samples, 0.28%)</title><rect x="29.8" y="501" width="3.3" height="15.0" fill="rgb(220,24,15)" rx="2" ry="2" />
<text  x="32.80" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="125.1" y="437" width="0.2" height="15.0" fill="rgb(253,58,53)" rx="2" ry="2" />
<text  x="128.07" y="447.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="29.6" y="517" width="0.2" height="15.0" fill="rgb(230,8,20)" rx="2" ry="2" />
<text  x="32.58" y="527.5" ></text>
</g>
<g >
<title>ext4_da_write_end (3 samples, 0.06%)</title><rect x="32.4" y="373" width="0.7" height="15.0" fill="rgb(248,65,35)" rx="2" ry="2" />
<text  x="35.44" y="383.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="1152.6" y="517" width="0.2" height="15.0" fill="rgb(226,165,36)" rx="2" ry="2" />
<text  x="1155.60" y="527.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.02%)</title><rect x="1052.5" y="437" width="0.2" height="15.0" fill="rgb(219,163,41)" rx="2" ry="2" />
<text  x="1055.48" y="447.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (15 samples, 0.28%)</title><rect x="29.8" y="421" width="3.3" height="15.0" fill="rgb(215,157,7)" rx="2" ry="2" />
<text  x="32.80" y="431.5" ></text>
</g>
<g >
<title>follow_pmd_mask.isra.0 (1 samples, 0.02%)</title><rect x="1052.3" y="501" width="0.2" height="15.0" fill="rgb(220,62,35)" rx="2" ry="2" />
<text  x="1055.26" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (7 samples, 0.13%)</title><rect x="743.6" y="501" width="1.5" height="15.0" fill="rgb(228,186,9)" rx="2" ry="2" />
<text  x="746.57" y="511.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="33.3" y="453" width="0.2" height="15.0" fill="rgb(239,191,12)" rx="2" ry="2" />
<text  x="36.32" y="463.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (1 samples, 0.02%)</title><rect x="560.7" y="565" width="0.2" height="15.0" fill="rgb(211,108,3)" rx="2" ry="2" />
<text  x="563.73" y="575.5" ></text>
</g>
<g >
<title>NaClLog (2 samples, 0.04%)</title><rect x="812.2" y="645" width="0.5" height="15.0" fill="rgb(213,188,8)" rx="2" ry="2" />
<text  x="815.22" y="655.5" ></text>
</g>
<g >
<title>__delete_from_page_cache (1 samples, 0.02%)</title><rect x="1108.8" y="357" width="0.2" height="15.0" fill="rgb(244,14,39)" rx="2" ry="2" />
<text  x="1111.81" y="367.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (1 samples, 0.02%)</title><rect x="134.1" y="613" width="0.2" height="15.0" fill="rgb(224,8,4)" rx="2" ry="2" />
<text  x="137.09" y="623.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (2 samples, 0.04%)</title><rect x="1112.6" y="549" width="0.4" height="15.0" fill="rgb(238,129,31)" rx="2" ry="2" />
<text  x="1115.55" y="559.5" ></text>
</g>
<g >
<title>NaClMemoryProtection (1 samples, 0.02%)</title><rect x="135.4" y="613" width="0.2" height="15.0" fill="rgb(225,62,29)" rx="2" ry="2" />
<text  x="138.41" y="623.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (1 samples, 0.02%)</title><rect x="136.7" y="485" width="0.3" height="15.0" fill="rgb(212,181,29)" rx="2" ry="2" />
<text  x="139.74" y="495.5" ></text>
</g>
<g >
<title>profile_tick (1 samples, 0.02%)</title><rect x="1146.4" y="421" width="0.3" height="15.0" fill="rgb(228,126,18)" rx="2" ry="2" />
<text  x="1149.43" y="431.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (15 samples, 0.28%)</title><rect x="72.9" y="677" width="3.3" height="15.0" fill="rgb(209,160,39)" rx="2" ry="2" />
<text  x="75.93" y="687.5" ></text>
</g>
<g >
<title>test_clear_page_writeback (1 samples, 0.02%)</title><rect x="1112.1" y="597" width="0.2" height="15.0" fill="rgb(208,172,16)" rx="2" ry="2" />
<text  x="1115.11" y="607.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="136.1" y="117" width="0.2" height="15.0" fill="rgb(239,105,21)" rx="2" ry="2" />
<text  x="139.07" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1093.2" y="549" width="0.2" height="15.0" fill="rgb(237,74,19)" rx="2" ry="2" />
<text  x="1096.19" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="136.3" y="165" width="0.2" height="15.0" fill="rgb(252,176,5)" rx="2" ry="2" />
<text  x="139.29" y="175.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeRemoveInterval (227 samples, 4.23%)</title><rect x="863.7" y="661" width="49.9" height="15.0" fill="rgb(233,44,4)" rx="2" ry="2" />
<text  x="866.70" y="671.5" >NaClI..</text>
</g>
<g >
<title>NaClDescIoDescWrite (1 samples, 0.02%)</title><rect x="36.4" y="725" width="0.2" height="15.0" fill="rgb(240,50,51)" rx="2" ry="2" />
<text  x="39.40" y="735.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (4 samples, 0.07%)</title><rect x="40.6" y="725" width="0.9" height="15.0" fill="rgb(227,53,27)" rx="2" ry="2" />
<text  x="43.58" y="735.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.04%)</title><rect x="787.6" y="485" width="0.4" height="15.0" fill="rgb(230,151,23)" rx="2" ry="2" />
<text  x="790.57" y="495.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="1140.9" y="629" width="0.3" height="15.0" fill="rgb(206,138,13)" rx="2" ry="2" />
<text  x="1143.93" y="639.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="32.9" y="261" width="0.2" height="15.0" fill="rgb(222,99,34)" rx="2" ry="2" />
<text  x="35.88" y="271.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (4 samples, 0.07%)</title><rect x="400.8" y="533" width="0.8" height="15.0" fill="rgb(240,90,47)" rx="2" ry="2" />
<text  x="403.77" y="543.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="1151.1" y="389" width="0.2" height="15.0" fill="rgb(213,76,35)" rx="2" ry="2" />
<text  x="1154.06" y="399.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (1 samples, 0.02%)</title><rect x="82.2" y="693" width="0.2" height="15.0" fill="rgb(209,205,50)" rx="2" ry="2" />
<text  x="85.17" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1052.5" y="517" width="0.2" height="15.0" fill="rgb(213,125,46)" rx="2" ry="2" />
<text  x="1055.48" y="527.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (16 samples, 0.30%)</title><rect x="856.2" y="613" width="3.5" height="15.0" fill="rgb(220,109,37)" rx="2" ry="2" />
<text  x="859.22" y="623.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.02%)</title><rect x="126.0" y="453" width="0.2" height="15.0" fill="rgb(252,25,26)" rx="2" ry="2" />
<text  x="128.95" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.15%)</title><rect x="790.7" y="565" width="1.7" height="15.0" fill="rgb(253,148,5)" rx="2" ry="2" />
<text  x="793.65" y="575.5" ></text>
</g>
<g >
<title>NaClHostDescRead (1,927 samples, 35.93%)</title><rect x="137.0" y="661" width="423.9" height="15.0" fill="rgb(242,223,12)" rx="2" ry="2" />
<text  x="139.96" y="671.5" >NaClHostDescRead</text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (43 samples, 0.80%)</title><rect x="645.4" y="549" width="9.5" height="15.0" fill="rgb(216,139,3)" rx="2" ry="2" />
<text  x="648.44" y="559.5" ></text>
</g>
<g >
<title>NaClAvlTreeInsert (66 samples, 1.23%)</title><rect x="933.2" y="645" width="14.6" height="15.0" fill="rgb(241,28,42)" rx="2" ry="2" />
<text  x="936.23" y="655.5" ></text>
</g>
<g >
<title>NaClGetDescMu (78 samples, 1.45%)</title><rect x="826.7" y="661" width="17.2" height="15.0" fill="rgb(229,73,12)" rx="2" ry="2" />
<text  x="829.74" y="671.5" ></text>
</g>
<g >
<title>NaClLog (5 samples, 0.09%)</title><rect x="842.8" y="613" width="1.1" height="15.0" fill="rgb(247,195,29)" rx="2" ry="2" />
<text  x="845.80" y="623.5" ></text>
</g>
<g >
<title>intel_idle (1 samples, 0.02%)</title><rect x="1158.3" y="565" width="0.2" height="15.0" fill="rgb(228,215,45)" rx="2" ry="2" />
<text  x="1161.32" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="33.1" y="725" width="0.7" height="15.0" fill="rgb(235,83,20)" rx="2" ry="2" />
<text  x="36.10" y="735.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.06%)</title><rect x="1110.8" y="629" width="0.7" height="15.0" fill="rgb(254,14,30)" rx="2" ry="2" />
<text  x="1113.79" y="639.5" ></text>
</g>
<g >
<title>xas_store (1 samples, 0.02%)</title><rect x="1093.2" y="277" width="0.2" height="15.0" fill="rgb(210,174,39)" rx="2" ry="2" />
<text  x="1096.19" y="287.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (42 samples, 0.78%)</title><rect x="645.7" y="517" width="9.2" height="15.0" fill="rgb(220,32,10)" rx="2" ry="2" />
<text  x="648.66" y="527.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (5 samples, 0.09%)</title><rect x="789.6" y="533" width="1.1" height="15.0" fill="rgb(221,85,21)" rx="2" ry="2" />
<text  x="792.55" y="543.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.62%)</title><rect x="637.5" y="565" width="7.3" height="15.0" fill="rgb(214,215,11)" rx="2" ry="2" />
<text  x="640.51" y="575.5" ></text>
</g>
<g >
<title>itoa::Buffer::format (1 samples, 0.02%)</title><rect x="136.1" y="165" width="0.2" height="15.0" fill="rgb(242,78,37)" rx="2" ry="2" />
<text  x="139.07" y="175.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (19 samples, 0.35%)</title><rect x="804.1" y="645" width="4.2" height="15.0" fill="rgb(220,164,15)" rx="2" ry="2" />
<text  x="807.07" y="655.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.04%)</title><rect x="1113.9" y="597" width="0.4" height="15.0" fill="rgb(247,24,44)" rx="2" ry="2" />
<text  x="1116.87" y="607.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (50 samples, 0.93%)</title><rect x="104.2" y="709" width="11.0" height="15.0" fill="rgb(207,211,9)" rx="2" ry="2" />
<text  x="107.17" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="63.7" y="725" width="0.2" height="15.0" fill="rgb(208,40,52)" rx="2" ry="2" />
<text  x="66.69" y="735.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="1052.7" y="501" width="0.2" height="15.0" fill="rgb(214,212,33)" rx="2" ry="2" />
<text  x="1055.70" y="511.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.02%)</title><rect x="1151.3" y="469" width="0.2" height="15.0" fill="rgb(237,154,40)" rx="2" ry="2" />
<text  x="1154.28" y="479.5" ></text>
</g>
<g >
<title>perf_ioctl (77 samples, 1.44%)</title><rect x="12.0" y="581" width="16.9" height="15.0" fill="rgb(227,136,1)" rx="2" ry="2" />
<text  x="14.98" y="591.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (200 samples, 3.73%)</title><rect x="1141.4" y="613" width="44.0" height="15.0" fill="rgb(230,110,21)" rx="2" ry="2" />
<text  x="1144.37" y="623.5" >cpui..</text>
</g>
<g >
<title>__x64_sys_write (3 samples, 0.06%)</title><rect x="33.1" y="709" width="0.7" height="15.0" fill="rgb(235,12,47)" rx="2" ry="2" />
<text  x="36.10" y="719.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (42 samples, 0.78%)</title><rect x="645.7" y="501" width="9.2" height="15.0" fill="rgb(239,116,45)" rx="2" ry="2" />
<text  x="648.66" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="790.0" y="469" width="0.2" height="15.0" fill="rgb(239,182,22)" rx="2" ry="2" />
<text  x="792.99" y="479.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="1111.5" y="693" width="0.2" height="15.0" fill="rgb(218,66,10)" rx="2" ry="2" />
<text  x="1114.45" y="703.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.07%)</title><rect x="761.6" y="485" width="0.9" height="15.0" fill="rgb(210,34,19)" rx="2" ry="2" />
<text  x="764.61" y="495.5" ></text>
</g>
<g >
<title>std::fs::remove_file (1 samples, 0.02%)</title><rect x="125.1" y="501" width="0.2" height="15.0" fill="rgb(211,32,54)" rx="2" ry="2" />
<text  x="128.07" y="511.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (2 samples, 0.04%)</title><rect x="136.1" y="293" width="0.4" height="15.0" fill="rgb(226,222,52)" rx="2" ry="2" />
<text  x="139.07" y="303.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (34 samples, 0.63%)</title><rect x="611.3" y="581" width="7.5" height="15.0" fill="rgb(206,123,46)" rx="2" ry="2" />
<text  x="614.33" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="136.7" y="389" width="0.3" height="15.0" fill="rgb(211,158,45)" rx="2" ry="2" />
<text  x="139.74" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="125.1" y="453" width="0.2" height="15.0" fill="rgb(212,21,41)" rx="2" ry="2" />
<text  x="128.07" y="463.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3 samples, 0.06%)</title><rect x="1103.3" y="453" width="0.7" height="15.0" fill="rgb(229,21,51)" rx="2" ry="2" />
<text  x="1106.31" y="463.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.02%)</title><rect x="11.1" y="693" width="0.2" height="15.0" fill="rgb(216,191,9)" rx="2" ry="2" />
<text  x="14.10" y="703.5" ></text>
</g>
<g >
<title>[perf-9767.map] (8 samples, 0.15%)</title><rect x="82.8" y="741" width="1.8" height="15.0" fill="rgb(222,220,30)" rx="2" ry="2" />
<text  x="85.83" y="751.5" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 0.02%)</title><rect x="29.1" y="597" width="0.3" height="15.0" fill="rgb(234,5,9)" rx="2" ry="2" />
<text  x="32.14" y="607.5" ></text>
</g>
<g >
<title>xas_expand (1 samples, 0.02%)</title><rect x="1093.2" y="245" width="0.2" height="15.0" fill="rgb(251,181,51)" rx="2" ry="2" />
<text  x="1096.19" y="255.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (17 samples, 0.32%)</title><rect x="1154.6" y="485" width="3.7" height="15.0" fill="rgb(223,15,37)" rx="2" ry="2" />
<text  x="1157.58" y="495.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.02%)</title><rect x="544.9" y="405" width="0.2" height="15.0" fill="rgb(219,90,15)" rx="2" ry="2" />
<text  x="547.88" y="415.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="125.1" y="261" width="0.2" height="15.0" fill="rgb(235,134,17)" rx="2" ry="2" />
<text  x="128.07" y="271.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="1189.6" y="533" width="0.2" height="15.0" fill="rgb(242,167,8)" rx="2" ry="2" />
<text  x="1192.56" y="543.5" ></text>
</g>
<g >
<title>rest_init (222 samples, 4.14%)</title><rect x="1141.2" y="661" width="48.8" height="15.0" fill="rgb(248,224,11)" rx="2" ry="2" />
<text  x="1144.15" y="671.5" >rest..</text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="126.8" y="405" width="0.3" height="15.0" fill="rgb(205,145,30)" rx="2" ry="2" />
<text  x="129.83" y="415.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (721 samples, 13.44%)</title><rect x="401.6" y="565" width="158.7" height="15.0" fill="rgb(210,84,50)" rx="2" ry="2" />
<text  x="404.65" y="575.5" >ringbuf::consumer::C..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (19 samples, 0.35%)</title><rect x="117.4" y="661" width="4.2" height="15.0" fill="rgb(223,7,15)" rx="2" ry="2" />
<text  x="120.37" y="671.5" ></text>
</g>
<g >
<title>BitmapSetBit (1 samples, 0.02%)</title><rect x="1056.0" y="581" width="0.2" height="15.0" fill="rgb(205,203,11)" rx="2" ry="2" />
<text  x="1059.00" y="591.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.02%)</title><rect x="1108.8" y="421" width="0.2" height="15.0" fill="rgb(215,12,19)" rx="2" ry="2" />
<text  x="1111.81" y="431.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.06%)</title><rect x="764.5" y="421" width="0.6" height="15.0" fill="rgb(223,119,8)" rx="2" ry="2" />
<text  x="767.47" y="431.5" ></text>
</g>
<g >
<title>irq_work_tick (1 samples, 0.02%)</title><rect x="1146.2" y="421" width="0.2" height="15.0" fill="rgb(233,49,16)" rx="2" ry="2" />
<text  x="1149.21" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="136.3" y="197" width="0.2" height="15.0" fill="rgb(225,85,34)" rx="2" ry="2" />
<text  x="139.29" y="207.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.02%)</title><rect x="1157.9" y="293" width="0.2" height="15.0" fill="rgb(245,215,17)" rx="2" ry="2" />
<text  x="1160.88" y="303.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (2 samples, 0.04%)</title><rect x="983.2" y="677" width="0.4" height="15.0" fill="rgb(253,89,11)" rx="2" ry="2" />
<text  x="986.18" y="687.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (433 samples, 8.07%)</title><rect x="654.9" y="581" width="95.3" height="15.0" fill="rgb(251,149,13)" rx="2" ry="2" />
<text  x="657.90" y="591.5" >rustposix::..</text>
</g>
<g >
<title>[bash] (1 samples, 0.02%)</title><rect x="10.4" y="645" width="0.3" height="15.0" fill="rgb(245,165,3)" rx="2" ry="2" />
<text  x="13.44" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (10 samples, 0.19%)</title><rect x="762.9" y="485" width="2.2" height="15.0" fill="rgb(221,120,10)" rx="2" ry="2" />
<text  x="765.93" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.17%)</title><rect x="787.4" y="501" width="1.9" height="15.0" fill="rgb(232,141,51)" rx="2" ry="2" />
<text  x="790.35" y="511.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.02%)</title><rect x="136.5" y="629" width="0.2" height="15.0" fill="rgb(245,218,50)" rx="2" ry="2" />
<text  x="139.52" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 0.02%)</title><rect x="135.4" y="533" width="0.2" height="15.0" fill="rgb(209,171,28)" rx="2" ry="2" />
<text  x="138.41" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (1 samples, 0.02%)</title><rect x="136.7" y="437" width="0.3" height="15.0" fill="rgb(236,187,44)" rx="2" ry="2" />
<text  x="139.74" y="447.5" ></text>
</g>
<g >
<title>flush_to_ldisc (1 samples, 0.02%)</title><rect x="1112.3" y="677" width="0.3" height="15.0" fill="rgb(225,202,53)" rx="2" ry="2" />
<text  x="1115.33" y="687.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1157.7" y="437" width="0.2" height="15.0" fill="rgb(216,125,37)" rx="2" ry="2" />
<text  x="1160.66" y="447.5" ></text>
</g>
<g >
<title>[unknown]  (307 samples, 5.72%)</title><rect x="983.8" y="741" width="67.6" height="15.0" fill="rgb(210,199,18)" rx="2" ry="2" />
<text  x="986.84" y="751.5" >[unknow..</text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1187.4" y="549" width="0.2" height="15.0" fill="rgb(242,219,52)" rx="2" ry="2" />
<text  x="1190.36" y="559.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (1 samples, 0.02%)</title><rect x="1052.7" y="597" width="0.2" height="15.0" fill="rgb(206,1,37)" rx="2" ry="2" />
<text  x="1055.70" y="607.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (4 samples, 0.07%)</title><rect x="1047.2" y="613" width="0.9" height="15.0" fill="rgb(224,35,25)" rx="2" ry="2" />
<text  x="1050.20" y="623.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.32%)</title><rect x="785.6" y="549" width="3.7" height="15.0" fill="rgb(213,219,28)" rx="2" ry="2" />
<text  x="788.59" y="559.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.04%)</title><rect x="1113.4" y="581" width="0.5" height="15.0" fill="rgb(216,109,20)" rx="2" ry="2" />
<text  x="1116.43" y="591.5" ></text>
</g>
<g >
<title>CopyBundleTails (3 samples, 0.06%)</title><rect x="125.3" y="645" width="0.7" height="15.0" fill="rgb(212,112,39)" rx="2" ry="2" />
<text  x="128.29" y="655.5" ></text>
</g>
<g >
<title>exc_page_fault (85 samples, 1.58%)</title><rect x="1030.3" y="709" width="18.7" height="15.0" fill="rgb(221,20,24)" rx="2" ry="2" />
<text  x="1033.26" y="719.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="1187.1" y="533" width="0.3" height="15.0" fill="rgb(218,143,14)" rx="2" ry="2" />
<text  x="1190.14" y="543.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (85 samples, 1.58%)</title><rect x="696.3" y="565" width="18.7" height="15.0" fill="rgb(248,205,43)" rx="2" ry="2" />
<text  x="699.26" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (756 samples, 14.10%)</title><rect x="619.3" y="597" width="166.3" height="15.0" fill="rgb(228,188,42)" rx="2" ry="2" />
<text  x="622.25" y="607.5" >rustposix::safeposix:..</text>
</g>
<g >
<title>hrtimer_start_range_ns (6 samples, 0.11%)</title><rect x="1188.5" y="581" width="1.3" height="15.0" fill="rgb(246,183,18)" rx="2" ry="2" />
<text  x="1191.46" y="591.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 1.19%)</title><rect x="14.8" y="389" width="14.1" height="15.0" fill="rgb(210,24,18)" rx="2" ry="2" />
<text  x="17.84" y="399.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="1093.4" y="709" width="0.2" height="15.0" fill="rgb(206,64,23)" rx="2" ry="2" />
<text  x="1096.41" y="719.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (1 samples, 0.02%)</title><rect x="1056.2" y="725" width="0.2" height="15.0" fill="rgb(244,201,3)" rx="2" ry="2" />
<text  x="1059.22" y="735.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (1 samples, 0.02%)</title><rect x="1146.7" y="421" width="0.2" height="15.0" fill="rgb(254,168,9)" rx="2" ry="2" />
<text  x="1149.65" y="431.5" ></text>
</g>
<g >
<title>create_empty_buffers (2 samples, 0.04%)</title><rect x="29.8" y="341" width="0.4" height="15.0" fill="rgb(235,81,31)" rx="2" ry="2" />
<text  x="32.80" y="351.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 0.04%)</title><rect x="1055.8" y="613" width="0.4" height="15.0" fill="rgb(238,155,9)" rx="2" ry="2" />
<text  x="1058.78" y="623.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (2 samples, 0.04%)</title><rect x="1112.6" y="533" width="0.4" height="15.0" fill="rgb(213,114,37)" rx="2" ry="2" />
<text  x="1115.55" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.02%)</title><rect x="1093.2" y="661" width="0.2" height="15.0" fill="rgb(247,152,1)" rx="2" ry="2" />
<text  x="1096.19" y="671.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="10.2" y="645" width="0.2" height="15.0" fill="rgb(234,208,5)" rx="2" ry="2" />
<text  x="13.22" y="655.5" ></text>
</g>
<g >
<title>menu_select (3 samples, 0.06%)</title><rect x="1140.3" y="645" width="0.6" height="15.0" fill="rgb(234,66,3)" rx="2" ry="2" />
<text  x="1143.27" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="29.4" y="629" width="0.2" height="15.0" fill="rgb(236,135,46)" rx="2" ry="2" />
<text  x="32.36" y="639.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="10.2" y="501" width="0.2" height="15.0" fill="rgb(233,22,37)" rx="2" ry="2" />
<text  x="13.22" y="511.5" ></text>
</g>
<g >
<title>__alloc_file (1 samples, 0.02%)</title><rect x="1093.0" y="309" width="0.2" height="15.0" fill="rgb(245,113,47)" rx="2" ry="2" />
<text  x="1095.97" y="319.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="1104.0" y="453" width="0.2" height="15.0" fill="rgb(229,170,22)" rx="2" ry="2" />
<text  x="1106.97" y="463.5" ></text>
</g>
<g >
<title>generic_write_end (3 samples, 0.06%)</title><rect x="32.4" y="357" width="0.7" height="15.0" fill="rgb(226,182,43)" rx="2" ry="2" />
<text  x="35.44" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="134.5" y="533" width="0.3" height="15.0" fill="rgb(247,200,37)" rx="2" ry="2" />
<text  x="137.53" y="543.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1140.9" y="661" width="0.3" height="15.0" fill="rgb(219,17,54)" rx="2" ry="2" />
<text  x="1143.93" y="671.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="544.9" y="485" width="0.2" height="15.0" fill="rgb(209,91,23)" rx="2" ry="2" />
<text  x="547.88" y="495.5" ></text>
</g>
<g >
<title>psi_task_switch (1 samples, 0.02%)</title><rect x="1140.9" y="645" width="0.3" height="15.0" fill="rgb(253,61,49)" rx="2" ry="2" />
<text  x="1143.93" y="655.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.02%)</title><rect x="1112.1" y="581" width="0.2" height="15.0" fill="rgb(238,100,30)" rx="2" ry="2" />
<text  x="1115.11" y="591.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="10.4" y="549" width="0.3" height="15.0" fill="rgb(222,178,38)" rx="2" ry="2" />
<text  x="13.44" y="559.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.02%)</title><rect x="135.4" y="453" width="0.2" height="15.0" fill="rgb(230,135,19)" rx="2" ry="2" />
<text  x="138.41" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.15%)</title><rect x="790.7" y="549" width="1.7" height="15.0" fill="rgb(212,183,4)" rx="2" ry="2" />
<text  x="793.65" y="559.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (165 samples, 3.08%)</title><rect x="659.7" y="501" width="36.3" height="15.0" fill="rgb(209,19,20)" rx="2" ry="2" />
<text  x="662.74" y="511.5" >__p..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="1047.2" y="581" width="0.2" height="15.0" fill="rgb(210,31,3)" rx="2" ry="2" />
<text  x="1050.20" y="591.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1149.7" y="373" width="0.3" height="15.0" fill="rgb(229,43,19)" rx="2" ry="2" />
<text  x="1152.74" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.19%)</title><rect x="753.9" y="453" width="2.2" height="15.0" fill="rgb(217,204,52)" rx="2" ry="2" />
<text  x="756.91" y="463.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.02%)</title><rect x="1093.2" y="309" width="0.2" height="15.0" fill="rgb(224,42,16)" rx="2" ry="2" />
<text  x="1096.19" y="319.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="1093.2" y="341" width="0.2" height="15.0" fill="rgb(231,77,39)" rx="2" ry="2" />
<text  x="1096.19" y="351.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.04%)</title><rect x="136.1" y="325" width="0.4" height="15.0" fill="rgb(245,192,13)" rx="2" ry="2" />
<text  x="139.07" y="335.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (5 samples, 0.09%)</title><rect x="103.1" y="709" width="1.1" height="15.0" fill="rgb(247,91,18)" rx="2" ry="2" />
<text  x="106.07" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.09%)</title><rect x="1110.6" y="725" width="1.1" height="15.0" fill="rgb(225,222,42)" rx="2" ry="2" />
<text  x="1113.57" y="735.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="136.7" y="133" width="0.3" height="15.0" fill="rgb(245,121,52)" rx="2" ry="2" />
<text  x="139.74" y="143.5" ></text>
</g>
<g >
<title>__handle_mm_fault (74 samples, 1.38%)</title><rect x="1031.8" y="661" width="16.3" height="15.0" fill="rgb(248,72,13)" rx="2" ry="2" />
<text  x="1034.80" y="671.5" ></text>
</g>
<g >
<title>NaClAvlTreeInsert (1 samples, 0.02%)</title><rect x="927.9" y="661" width="0.3" height="15.0" fill="rgb(246,12,42)" rx="2" ry="2" />
<text  x="930.95" y="671.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="1113.0" y="661" width="0.2" height="15.0" fill="rgb(206,54,18)" rx="2" ry="2" />
<text  x="1115.99" y="671.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (18 samples, 0.34%)</title><rect x="623.0" y="533" width="4.0" height="15.0" fill="rgb(244,67,49)" rx="2" ry="2" />
<text  x="625.99" y="543.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (64 samples, 1.19%)</title><rect x="765.3" y="565" width="14.1" height="15.0" fill="rgb(238,119,1)" rx="2" ry="2" />
<text  x="768.35" y="575.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (32 samples, 0.60%)</title><rect x="1102.0" y="677" width="7.0" height="15.0" fill="rgb(225,79,34)" rx="2" ry="2" />
<text  x="1104.99" y="687.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (10 samples, 0.19%)</title><rect x="1044.8" y="613" width="2.2" height="15.0" fill="rgb(221,168,21)" rx="2" ry="2" />
<text  x="1047.78" y="623.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.02%)</title><rect x="29.4" y="693" width="0.2" height="15.0" fill="rgb(235,69,19)" rx="2" ry="2" />
<text  x="32.36" y="703.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (28 samples, 0.52%)</title><rect x="631.4" y="501" width="6.1" height="15.0" fill="rgb(233,19,24)" rx="2" ry="2" />
<text  x="634.35" y="511.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreePrint (2 samples, 0.04%)</title><rect x="38.6" y="725" width="0.4" height="15.0" fill="rgb(219,208,47)" rx="2" ry="2" />
<text  x="41.60" y="735.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.06%)</title><rect x="785.8" y="485" width="0.7" height="15.0" fill="rgb(208,107,31)" rx="2" ry="2" />
<text  x="788.81" y="495.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.02%)</title><rect x="1093.0" y="357" width="0.2" height="15.0" fill="rgb(245,160,54)" rx="2" ry="2" />
<text  x="1095.97" y="367.5" ></text>
</g>
<g >
<title>NaClSysCloseDecoder (1 samples, 0.02%)</title><rect x="125.1" y="709" width="0.2" height="15.0" fill="rgb(246,77,8)" rx="2" ry="2" />
<text  x="128.07" y="719.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="1093.2" y="421" width="0.2" height="15.0" fill="rgb(222,150,35)" rx="2" ry="2" />
<text  x="1096.19" y="431.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="1093.2" y="485" width="0.2" height="15.0" fill="rgb(235,215,49)" rx="2" ry="2" />
<text  x="1096.19" y="495.5" ></text>
</g>
<g >
<title>initialize_shell_variables (1 samples, 0.02%)</title><rect x="10.2" y="677" width="0.2" height="15.0" fill="rgb(243,96,51)" rx="2" ry="2" />
<text  x="13.22" y="687.5" ></text>
</g>
<g >
<title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="1029.8" y="725" width="0.2" height="15.0" fill="rgb(244,100,52)" rx="2" ry="2" />
<text  x="1032.82" y="735.5" ></text>
</g>
<g >
<title>cpuidle_select (3 samples, 0.06%)</title><rect x="1140.3" y="661" width="0.6" height="15.0" fill="rgb(206,202,41)" rx="2" ry="2" />
<text  x="1143.27" y="671.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.04%)</title><rect x="126.8" y="485" width="0.5" height="15.0" fill="rgb(224,23,53)" rx="2" ry="2" />
<text  x="129.83" y="495.5" ></text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.04%)</title><rect x="779.4" y="533" width="0.5" height="15.0" fill="rgb(209,152,54)" rx="2" ry="2" />
<text  x="782.43" y="543.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.02%)</title><rect x="135.2" y="661" width="0.2" height="15.0" fill="rgb(238,207,22)" rx="2" ry="2" />
<text  x="138.19" y="671.5" ></text>
</g>
<g >
<title>do_anonymous_page (68 samples, 1.27%)</title><rect x="1033.1" y="629" width="15.0" height="15.0" fill="rgb(233,41,46)" rx="2" ry="2" />
<text  x="1036.12" y="639.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.02%)</title><rect x="29.4" y="517" width="0.2" height="15.0" fill="rgb(212,44,7)" rx="2" ry="2" />
<text  x="32.36" y="527.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (32 samples, 0.60%)</title><rect x="814.4" y="661" width="7.1" height="15.0" fill="rgb(250,166,23)" rx="2" ry="2" />
<text  x="817.42" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (344 samples, 6.41%)</title><rect x="469.2" y="485" width="75.7" height="15.0" fill="rgb(242,210,48)" rx="2" ry="2" />
<text  x="472.19" y="495.5" >__memmov..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (1 samples, 0.02%)</title><rect x="544.9" y="501" width="0.2" height="15.0" fill="rgb(218,136,33)" rx="2" ry="2" />
<text  x="547.88" y="511.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="1093.2" y="517" width="0.2" height="15.0" fill="rgb(250,174,18)" rx="2" ry="2" />
<text  x="1096.19" y="527.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="1158.1" y="309" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1161.10" y="319.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (31 samples, 0.58%)</title><rect x="565.6" y="645" width="6.8" height="15.0" fill="rgb(206,41,26)" rx="2" ry="2" />
<text  x="568.57" y="655.5" ></text>
</g>
<g >
<title>NaClGetDesc (140 samples, 2.61%)</title><rect x="813.1" y="677" width="30.8" height="15.0" fill="rgb(236,75,7)" rx="2" ry="2" />
<text  x="816.10" y="687.5" >Na..</text>
</g>
<g >
<title>irq_exit_rcu (18 samples, 0.34%)</title><rect x="1154.4" y="533" width="3.9" height="15.0" fill="rgb(220,20,5)" rx="2" ry="2" />
<text  x="1157.36" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="135.4" y="565" width="0.2" height="15.0" fill="rgb(236,110,20)" rx="2" ry="2" />
<text  x="138.41" y="575.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (2 samples, 0.04%)</title><rect x="136.1" y="437" width="0.4" height="15.0" fill="rgb(252,94,37)" rx="2" ry="2" />
<text  x="139.07" y="447.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.06%)</title><rect x="1045.9" y="597" width="0.6" height="15.0" fill="rgb(229,56,29)" rx="2" ry="2" />
<text  x="1048.88" y="607.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="1108.8" y="597" width="0.2" height="15.0" fill="rgb(232,14,6)" rx="2" ry="2" />
<text  x="1111.81" y="607.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (3 samples, 0.06%)</title><rect x="33.1" y="565" width="0.7" height="15.0" fill="rgb(253,181,6)" rx="2" ry="2" />
<text  x="36.10" y="575.5" ></text>
</g>
<g >
<title>generic_exec_single (65 samples, 1.21%)</title><rect x="14.6" y="485" width="14.3" height="15.0" fill="rgb(219,100,25)" rx="2" ry="2" />
<text  x="17.62" y="495.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="134.5" y="517" width="0.3" height="15.0" fill="rgb(246,74,48)" rx="2" ry="2" />
<text  x="137.53" y="527.5" ></text>
</g>
<g >
<title>DynArrayGet (2 samples, 0.04%)</title><rect x="827.4" y="645" width="0.4" height="15.0" fill="rgb(250,37,47)" rx="2" ry="2" />
<text  x="830.40" y="655.5" ></text>
</g>
<g >
<title>tick_sched_handle (23 samples, 0.43%)</title><rect x="1146.2" y="437" width="5.1" height="15.0" fill="rgb(219,81,13)" rx="2" ry="2" />
<text  x="1149.21" y="447.5" ></text>
</g>
<g >
<title>do_group_exit (32 samples, 0.60%)</title><rect x="1102.0" y="629" width="7.0" height="15.0" fill="rgb(248,174,43)" rx="2" ry="2" />
<text  x="1104.99" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (23 samples, 0.43%)</title><rect x="639.7" y="517" width="5.1" height="15.0" fill="rgb(232,70,50)" rx="2" ry="2" />
<text  x="642.71" y="527.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (1 samples, 0.02%)</title><rect x="982.7" y="629" width="0.3" height="15.0" fill="rgb(214,66,49)" rx="2" ry="2" />
<text  x="985.74" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="10.2" y="565" width="0.2" height="15.0" fill="rgb(210,44,51)" rx="2" ry="2" />
<text  x="13.22" y="575.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (19 samples, 0.35%)</title><rect x="1104.4" y="485" width="4.2" height="15.0" fill="rgb(254,207,47)" rx="2" ry="2" />
<text  x="1107.41" y="495.5" ></text>
</g>
<g >
<title>NaClVmIoHasEnded (1 samples, 0.02%)</title><rect x="983.6" y="693" width="0.2" height="15.0" fill="rgb(233,3,24)" rx="2" ry="2" />
<text  x="986.62" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.06%)</title><rect x="134.5" y="597" width="0.7" height="15.0" fill="rgb(247,150,2)" rx="2" ry="2" />
<text  x="137.53" y="607.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="10.9" y="629" width="0.2" height="15.0" fill="rgb(218,77,29)" rx="2" ry="2" />
<text  x="13.88" y="639.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect x="136.1" y="501" width="0.4" height="15.0" fill="rgb(212,209,50)" rx="2" ry="2" />
<text  x="139.07" y="511.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeAddInterval (1 samples, 0.02%)</title><rect x="844.6" y="677" width="0.2" height="15.0" fill="rgb(230,6,12)" rx="2" ry="2" />
<text  x="847.56" y="687.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.02%)</title><rect x="134.3" y="501" width="0.2" height="15.0" fill="rgb(248,156,10)" rx="2" ry="2" />
<text  x="137.31" y="511.5" ></text>
</g>
<g >
<title>NaClValidateCode (32 samples, 0.60%)</title><rect x="127.3" y="661" width="7.0" height="15.0" fill="rgb(231,29,11)" rx="2" ry="2" />
<text  x="130.27" y="671.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="1108.8" y="501" width="0.2" height="15.0" fill="rgb(229,2,14)" rx="2" ry="2" />
<text  x="1111.81" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (10 samples, 0.19%)</title><rect x="762.9" y="501" width="2.2" height="15.0" fill="rgb(237,30,4)" rx="2" ry="2" />
<text  x="765.93" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (3 samples, 0.06%)</title><rect x="135.9" y="613" width="0.6" height="15.0" fill="rgb(215,123,41)" rx="2" ry="2" />
<text  x="138.85" y="623.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="33.3" y="517" width="0.2" height="15.0" fill="rgb(206,70,19)" rx="2" ry="2" />
<text  x="36.32" y="527.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (2 samples, 0.04%)</title><rect x="1179.4" y="565" width="0.5" height="15.0" fill="rgb(223,114,17)" rx="2" ry="2" />
<text  x="1182.44" y="575.5" ></text>
</g>
<g >
<title>NaClDescUnref (55 samples, 1.03%)</title><rect x="800.6" y="677" width="12.1" height="15.0" fill="rgb(215,198,9)" rx="2" ry="2" />
<text  x="803.55" y="687.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.07%)</title><rect x="759.2" y="421" width="0.9" height="15.0" fill="rgb(248,198,54)" rx="2" ry="2" />
<text  x="762.19" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.07%)</title><rect x="791.5" y="517" width="0.9" height="15.0" fill="rgb(222,185,52)" rx="2" ry="2" />
<text  x="794.53" y="527.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (29 samples, 0.54%)</title><rect x="836.4" y="613" width="6.4" height="15.0" fill="rgb(246,177,7)" rx="2" ry="2" />
<text  x="839.42" y="623.5" ></text>
</g>
<g >
<title>_perf_ioctl (73 samples, 1.36%)</title><rect x="12.9" y="565" width="16.0" height="15.0" fill="rgb(242,207,20)" rx="2" ry="2" />
<text  x="15.86" y="575.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="1151.9" y="517" width="0.3" height="15.0" fill="rgb(235,62,4)" rx="2" ry="2" />
<text  x="1154.94" y="527.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="32.9" y="309" width="0.2" height="15.0" fill="rgb(207,34,49)" rx="2" ry="2" />
<text  x="35.88" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (23 samples, 0.43%)</title><rect x="639.7" y="501" width="5.1" height="15.0" fill="rgb(224,207,1)" rx="2" ry="2" />
<text  x="642.71" y="511.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (33 samples, 0.62%)</title><rect x="565.1" y="677" width="7.3" height="15.0" fill="rgb(232,61,15)" rx="2" ry="2" />
<text  x="568.13" y="687.5" ></text>
</g>
<g >
<title>futex_wait (3 samples, 0.06%)</title><rect x="1110.8" y="677" width="0.7" height="15.0" fill="rgb(217,40,28)" rx="2" ry="2" />
<text  x="1113.79" y="687.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="1108.8" y="437" width="0.2" height="15.0" fill="rgb(205,109,53)" rx="2" ry="2" />
<text  x="1111.81" y="447.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1040.6" y="597" width="0.2" height="15.0" fill="rgb(241,32,12)" rx="2" ry="2" />
<text  x="1043.60" y="607.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeInit (2 samples, 0.04%)</title><rect x="968.0" y="645" width="0.4" height="15.0" fill="rgb(216,67,31)" rx="2" ry="2" />
<text  x="970.99" y="655.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="1111.0" y="533" width="0.2" height="15.0" fill="rgb(252,196,3)" rx="2" ry="2" />
<text  x="1114.01" y="543.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (1 samples, 0.02%)</title><rect x="1150.4" y="357" width="0.2" height="15.0" fill="rgb(205,173,0)" rx="2" ry="2" />
<text  x="1153.40" y="367.5" ></text>
</g>
<g >
<title>psi_flags_change (1 samples, 0.02%)</title><rect x="1158.1" y="293" width="0.2" height="15.0" fill="rgb(207,186,16)" rx="2" ry="2" />
<text  x="1161.10" y="303.5" ></text>
</g>
<g >
<title>NaClMutexLock (20 samples, 0.37%)</title><rect x="117.4" y="677" width="4.4" height="15.0" fill="rgb(244,76,46)" rx="2" ry="2" />
<text  x="120.37" y="687.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (1 samples, 0.02%)</title><rect x="1149.5" y="389" width="0.2" height="15.0" fill="rgb(223,137,29)" rx="2" ry="2" />
<text  x="1152.52" y="399.5" ></text>
</g>
<g >
<title>zap_pte_range (30 samples, 0.56%)</title><rect x="1102.0" y="501" width="6.6" height="15.0" fill="rgb(214,84,46)" rx="2" ry="2" />
<text  x="1104.99" y="511.5" ></text>
</g>
<g >
<title>NaClAvlTreeInsert (7 samples, 0.13%)</title><rect x="34.9" y="725" width="1.5" height="15.0" fill="rgb(205,138,10)" rx="2" ry="2" />
<text  x="37.86" y="735.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (1 samples, 0.02%)</title><rect x="135.0" y="517" width="0.2" height="15.0" fill="rgb(233,126,6)" rx="2" ry="2" />
<text  x="137.97" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (3 samples, 0.06%)</title><rect x="1183.6" y="549" width="0.7" height="15.0" fill="rgb(208,163,3)" rx="2" ry="2" />
<text  x="1186.62" y="559.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (7 samples, 0.13%)</title><rect x="1084.6" y="725" width="1.5" height="15.0" fill="rgb(250,57,27)" rx="2" ry="2" />
<text  x="1087.61" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (2 samples, 0.04%)</title><rect x="136.1" y="309" width="0.4" height="15.0" fill="rgb(249,17,1)" rx="2" ry="2" />
<text  x="139.07" y="319.5" ></text>
</g>
<g >
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="136.7" y="53" width="0.3" height="15.0" fill="rgb(205,87,5)" rx="2" ry="2" />
<text  x="139.74" y="63.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.22%)</title><rect x="1060.8" y="725" width="2.7" height="15.0" fill="rgb(229,143,40)" rx="2" ry="2" />
<text  x="1063.84" y="735.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1111.7" y="693" width="0.2" height="15.0" fill="rgb(235,183,21)" rx="2" ry="2" />
<text  x="1114.67" y="703.5" ></text>
</g>
<g >
<title>main (3 samples, 0.06%)</title><rect x="10.2" y="709" width="0.7" height="15.0" fill="rgb(212,58,50)" rx="2" ry="2" />
<text  x="13.22" y="719.5" ></text>
</g>
<g >
<title>lindrustfinalize (1 samples, 0.02%)</title><rect x="1093.2" y="677" width="0.2" height="15.0" fill="rgb(214,127,37)" rx="2" ry="2" />
<text  x="1096.19" y="687.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (69 samples, 1.29%)</title><rect x="750.2" y="549" width="15.1" height="15.0" fill="rgb(245,88,30)" rx="2" ry="2" />
<text  x="753.17" y="559.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="1033.8" y="581" width="0.2" height="15.0" fill="rgb(237,41,52)" rx="2" ry="2" />
<text  x="1036.78" y="591.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="913.4" y="629" width="0.2" height="15.0" fill="rgb(246,85,39)" rx="2" ry="2" />
<text  x="916.43" y="639.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (19 samples, 0.35%)</title><rect x="1104.4" y="469" width="4.2" height="15.0" fill="rgb(253,67,10)" rx="2" ry="2" />
<text  x="1107.41" y="479.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="134.3" y="549" width="0.2" height="15.0" fill="rgb(247,135,3)" rx="2" ry="2" />
<text  x="137.31" y="559.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (2 samples, 0.04%)</title><rect x="1052.3" y="581" width="0.4" height="15.0" fill="rgb(224,152,44)" rx="2" ry="2" />
<text  x="1055.26" y="591.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1183.2" y="549" width="0.2" height="15.0" fill="rgb(208,152,18)" rx="2" ry="2" />
<text  x="1186.18" y="559.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.06%)</title><rect x="757.6" y="501" width="0.7" height="15.0" fill="rgb(219,73,36)" rx="2" ry="2" />
<text  x="760.65" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (6 samples, 0.11%)</title><rect x="700.9" y="517" width="1.3" height="15.0" fill="rgb(214,39,29)" rx="2" ry="2" />
<text  x="703.88" y="527.5" ></text>
</g>
<g >
<title>NaClAvlTreeExtract (1 samples, 0.02%)</title><rect x="34.6" y="725" width="0.3" height="15.0" fill="rgb(209,79,38)" rx="2" ry="2" />
<text  x="37.64" y="735.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="125.1" y="277" width="0.2" height="15.0" fill="rgb(207,144,30)" rx="2" ry="2" />
<text  x="128.07" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="10.4" y="517" width="0.3" height="15.0" fill="rgb(223,54,44)" rx="2" ry="2" />
<text  x="13.44" y="527.5" ></text>
</g>
<g >
<title>scsi_finish_command (2 samples, 0.04%)</title><rect x="1113.4" y="501" width="0.5" height="15.0" fill="rgb(245,116,15)" rx="2" ry="2" />
<text  x="1116.43" y="511.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.02%)</title><rect x="1111.7" y="709" width="0.2" height="15.0" fill="rgb(229,24,30)" rx="2" ry="2" />
<text  x="1114.67" y="719.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.02%)</title><rect x="10.4" y="469" width="0.3" height="15.0" fill="rgb(230,107,9)" rx="2" ry="2" />
<text  x="13.44" y="479.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1047.4" y="581" width="0.2" height="15.0" fill="rgb(220,69,39)" rx="2" ry="2" />
<text  x="1050.42" y="591.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="32.9" y="325" width="0.2" height="15.0" fill="rgb(209,74,27)" rx="2" ry="2" />
<text  x="35.88" y="335.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="29.4" y="469" width="0.2" height="15.0" fill="rgb(209,64,30)" rx="2" ry="2" />
<text  x="32.36" y="479.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (1 samples, 0.02%)</title><rect x="135.4" y="677" width="0.2" height="15.0" fill="rgb(213,123,47)" rx="2" ry="2" />
<text  x="138.41" y="687.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (5 samples, 0.09%)</title><rect x="1183.2" y="565" width="1.1" height="15.0" fill="rgb(207,154,1)" rx="2" ry="2" />
<text  x="1186.18" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (1 samples, 0.02%)</title><rect x="82.2" y="677" width="0.2" height="15.0" fill="rgb(221,26,24)" rx="2" ry="2" />
<text  x="85.17" y="687.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="137.0" y="613" width="0.2" height="15.0" fill="rgb(212,36,45)" rx="2" ry="2" />
<text  x="139.96" y="623.5" ></text>
</g>
<g >
<title>new_sync_write (3 samples, 0.06%)</title><rect x="33.1" y="661" width="0.7" height="15.0" fill="rgb(232,123,6)" rx="2" ry="2" />
<text  x="36.10" y="671.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (3 samples, 0.06%)</title><rect x="1039.9" y="533" width="0.7" height="15.0" fill="rgb(212,69,6)" rx="2" ry="2" />
<text  x="1042.94" y="543.5" ></text>
</g>
<g >
<title>ep_send_events_proc (1 samples, 0.02%)</title><rect x="1110.6" y="645" width="0.2" height="15.0" fill="rgb(220,207,50)" rx="2" ry="2" />
<text  x="1113.57" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="63.5" y="645" width="0.2" height="15.0" fill="rgb(209,61,20)" rx="2" ry="2" />
<text  x="66.47" y="655.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.06%)</title><rect x="786.7" y="485" width="0.7" height="15.0" fill="rgb(229,158,23)" rx="2" ry="2" />
<text  x="789.69" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.07%)</title><rect x="757.4" y="517" width="0.9" height="15.0" fill="rgb(244,188,44)" rx="2" ry="2" />
<text  x="760.43" y="527.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeRemoveVal (220 samples, 4.10%)</title><rect x="865.2" y="645" width="48.4" height="15.0" fill="rgb(222,111,0)" rx="2" ry="2" />
<text  x="868.24" y="655.5" >NaCl..</text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.02%)</title><rect x="126.2" y="453" width="0.2" height="15.0" fill="rgb(239,126,48)" rx="2" ry="2" />
<text  x="129.17" y="463.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeInit (1 samples, 0.02%)</title><rect x="38.4" y="725" width="0.2" height="15.0" fill="rgb(251,169,46)" rx="2" ry="2" />
<text  x="41.38" y="735.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="125.1" y="213" width="0.2" height="15.0" fill="rgb(239,148,22)" rx="2" ry="2" />
<text  x="128.07" y="223.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (2 samples, 0.04%)</title><rect x="1184.9" y="597" width="0.5" height="15.0" fill="rgb(217,7,30)" rx="2" ry="2" />
<text  x="1187.94" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="1093.0" y="597" width="0.2" height="15.0" fill="rgb(209,16,16)" rx="2" ry="2" />
<text  x="1095.97" y="607.5" ></text>
</g>
<g >
<title>memcg_alloc_page_obj_cgroups (1 samples, 0.02%)</title><rect x="30.0" y="261" width="0.2" height="15.0" fill="rgb(239,199,42)" rx="2" ry="2" />
<text  x="33.02" y="271.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="566.0" y="629" width="0.2" height="15.0" fill="rgb(246,96,50)" rx="2" ry="2" />
<text  x="569.01" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1093.2" y="565" width="0.2" height="15.0" fill="rgb(231,50,26)" rx="2" ry="2" />
<text  x="1096.19" y="575.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (3 samples, 0.06%)</title><rect x="125.3" y="661" width="0.7" height="15.0" fill="rgb(217,186,24)" rx="2" ry="2" />
<text  x="128.29" y="671.5" ></text>
</g>
<g >
<title>tick_nohz_restart (6 samples, 0.11%)</title><rect x="1188.5" y="597" width="1.3" height="15.0" fill="rgb(254,201,9)" rx="2" ry="2" />
<text  x="1191.46" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="1064.8" y="725" width="0.2" height="15.0" fill="rgb(232,206,14)" rx="2" ry="2" />
<text  x="1067.81" y="735.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="828.7" y="629" width="0.2" height="15.0" fill="rgb(254,227,42)" rx="2" ry="2" />
<text  x="831.72" y="639.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="125.1" y="341" width="0.2" height="15.0" fill="rgb(214,80,16)" rx="2" ry="2" />
<text  x="128.07" y="351.5" ></text>
</g>
<g >
<title>NaClValidateCode (2 samples, 0.04%)</title><rect x="1055.8" y="645" width="0.4" height="15.0" fill="rgb(233,211,21)" rx="2" ry="2" />
<text  x="1058.78" y="655.5" ></text>
</g>
<g >
<title>shmem_fault (2 samples, 0.04%)</title><rect x="126.8" y="437" width="0.5" height="15.0" fill="rgb(240,77,35)" rx="2" ry="2" />
<text  x="129.83" y="447.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.02%)</title><rect x="1177.9" y="565" width="0.2" height="15.0" fill="rgb(221,80,36)" rx="2" ry="2" />
<text  x="1180.90" y="575.5" ></text>
</g>
<g >
<title>cpuidle_not_available (2 samples, 0.04%)</title><rect x="1185.4" y="613" width="0.4" height="15.0" fill="rgb(239,55,35)" rx="2" ry="2" />
<text  x="1188.38" y="623.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="81.7" y="693" width="0.2" height="15.0" fill="rgb(249,121,27)" rx="2" ry="2" />
<text  x="84.73" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1052.3" y="485" width="0.2" height="15.0" fill="rgb(211,133,12)" rx="2" ry="2" />
<text  x="1055.26" y="495.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="121.6" y="661" width="0.2" height="15.0" fill="rgb(238,50,20)" rx="2" ry="2" />
<text  x="124.55" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (14 samples, 0.26%)</title><rect x="850.5" y="613" width="3.1" height="15.0" fill="rgb(213,214,43)" rx="2" ry="2" />
<text  x="853.50" y="623.5" ></text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.02%)</title><rect x="135.4" y="389" width="0.2" height="15.0" fill="rgb(253,70,23)" rx="2" ry="2" />
<text  x="138.41" y="399.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.04%)</title><rect x="126.0" y="549" width="0.4" height="15.0" fill="rgb(234,146,41)" rx="2" ry="2" />
<text  x="128.95" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (28 samples, 0.52%)</title><rect x="773.3" y="517" width="6.1" height="15.0" fill="rgb(237,177,40)" rx="2" ry="2" />
<text  x="776.27" y="527.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.04%)</title><rect x="126.8" y="501" width="0.5" height="15.0" fill="rgb(222,14,18)" rx="2" ry="2" />
<text  x="129.83" y="511.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (31 samples, 0.58%)</title><rect x="785.6" y="613" width="6.8" height="15.0" fill="rgb(240,75,18)" rx="2" ry="2" />
<text  x="788.59" y="623.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (8 samples, 0.15%)</title><rect x="702.2" y="501" width="1.8" height="15.0" fill="rgb(214,96,44)" rx="2" ry="2" />
<text  x="705.20" y="511.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1052.5" y="533" width="0.2" height="15.0" fill="rgb(218,123,33)" rx="2" ry="2" />
<text  x="1055.48" y="543.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.02%)</title><rect x="11.1" y="661" width="0.2" height="15.0" fill="rgb(216,209,36)" rx="2" ry="2" />
<text  x="14.10" y="671.5" ></text>
</g>
<g >
<title>__GI_munmap (2 samples, 0.04%)</title><rect x="126.0" y="613" width="0.4" height="15.0" fill="rgb(249,39,53)" rx="2" ry="2" />
<text  x="128.95" y="623.5" ></text>
</g>
<g >
<title>truncate_inode_page (1 samples, 0.02%)</title><rect x="1108.8" y="389" width="0.2" height="15.0" fill="rgb(222,7,17)" rx="2" ry="2" />
<text  x="1111.81" y="399.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="1148.4" y="405" width="0.2" height="15.0" fill="rgb(211,69,12)" rx="2" ry="2" />
<text  x="1151.42" y="415.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampolineCall (1 samples, 0.02%)</title><rect x="136.5" y="581" width="0.2" height="15.0" fill="rgb(237,116,16)" rx="2" ry="2" />
<text  x="139.52" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (64 samples, 1.19%)</title><rect x="765.3" y="549" width="14.1" height="15.0" fill="rgb(206,94,38)" rx="2" ry="2" />
<text  x="768.35" y="559.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (1,927 samples, 35.93%)</title><rect x="137.0" y="677" width="423.9" height="15.0" fill="rgb(252,93,9)" rx="2" ry="2" />
<text  x="139.96" y="687.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="1093.2" y="533" width="0.2" height="15.0" fill="rgb(216,98,37)" rx="2" ry="2" />
<text  x="1096.19" y="543.5" ></text>
</g>
<g >
<title>__GI___mprotect (1 samples, 0.02%)</title><rect x="135.4" y="581" width="0.2" height="15.0" fill="rgb(205,146,50)" rx="2" ry="2" />
<text  x="138.41" y="591.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.02%)</title><rect x="125.1" y="645" width="0.2" height="15.0" fill="rgb(231,191,10)" rx="2" ry="2" />
<text  x="128.07" y="655.5" ></text>
</g>
<g >
<title>NaClRangeStatsUpdate (13 samples, 0.24%)</title><rect x="944.9" y="629" width="2.9" height="15.0" fill="rgb(251,211,49)" rx="2" ry="2" />
<text  x="947.89" y="639.5" ></text>
</g>
<g >
<title>xmalloc (1 samples, 0.02%)</title><rect x="10.2" y="661" width="0.2" height="15.0" fill="rgb(220,95,19)" rx="2" ry="2" />
<text  x="13.22" y="671.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (23 samples, 0.43%)</title><rect x="837.5" y="597" width="5.1" height="15.0" fill="rgb(246,75,46)" rx="2" ry="2" />
<text  x="840.52" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt_r (1 samples, 0.02%)</title><rect x="1093.0" y="469" width="0.2" height="15.0" fill="rgb(211,39,52)" rx="2" ry="2" />
<text  x="1095.97" y="479.5" ></text>
</g>
<g >
<title>NaClSysExit (3 samples, 0.06%)</title><rect x="135.9" y="693" width="0.6" height="15.0" fill="rgb(217,68,49)" rx="2" ry="2" />
<text  x="138.85" y="703.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="136.7" y="245" width="0.3" height="15.0" fill="rgb(223,148,37)" rx="2" ry="2" />
<text  x="139.74" y="255.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="81.7" y="677" width="0.2" height="15.0" fill="rgb(246,93,26)" rx="2" ry="2" />
<text  x="84.73" y="687.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.02%)</title><rect x="1093.4" y="677" width="0.2" height="15.0" fill="rgb(226,61,14)" rx="2" ry="2" />
<text  x="1096.41" y="687.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (2 samples, 0.04%)</title><rect x="1055.8" y="693" width="0.4" height="15.0" fill="rgb(247,22,19)" rx="2" ry="2" />
<text  x="1058.78" y="703.5" ></text>
</g>
<g >
<title>__gconv_find_transform (1 samples, 0.02%)</title><rect x="10.7" y="645" width="0.2" height="15.0" fill="rgb(249,37,36)" rx="2" ry="2" />
<text  x="13.66" y="655.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.02%)</title><rect x="1093.2" y="437" width="0.2" height="15.0" fill="rgb(240,113,31)" rx="2" ry="2" />
<text  x="1096.19" y="447.5" ></text>
</g>
<g >
<title>ion (16 samples, 0.30%)</title><rect x="29.6" y="613" width="3.5" height="15.0" fill="rgb(236,38,49)" rx="2" ry="2" />
<text  x="32.58" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1052.7" y="693" width="0.2" height="15.0" fill="rgb(239,107,46)" rx="2" ry="2" />
<text  x="1055.70" y="703.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.02%)</title><rect x="1052.7" y="565" width="0.2" height="15.0" fill="rgb(252,95,8)" rx="2" ry="2" />
<text  x="1055.70" y="575.5" ></text>
</g>
<g >
<title>fput_many (1 samples, 0.02%)</title><rect x="11.5" y="581" width="0.3" height="15.0" fill="rgb(208,151,35)" rx="2" ry="2" />
<text  x="14.54" y="591.5" ></text>
</g>
<g >
<title>perf (102 samples, 1.90%)</title><rect x="11.3" y="757" width="22.5" height="15.0" fill="rgb(245,205,53)" rx="2" ry="2" />
<text  x="14.32" y="767.5" >p..</text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="135.4" y="485" width="0.2" height="15.0" fill="rgb(237,225,13)" rx="2" ry="2" />
<text  x="138.41" y="495.5" ></text>
</g>
<g >
<title>timekeeping_max_deferment (1 samples, 0.02%)</title><rect x="1140.7" y="613" width="0.2" height="15.0" fill="rgb(212,210,44)" rx="2" ry="2" />
<text  x="1143.71" y="623.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.02%)</title><rect x="135.0" y="549" width="0.2" height="15.0" fill="rgb(221,129,32)" rx="2" ry="2" />
<text  x="137.97" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="837.3" y="597" width="0.2" height="15.0" fill="rgb(226,91,24)" rx="2" ry="2" />
<text  x="840.30" y="607.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.02%)</title><rect x="136.7" y="293" width="0.3" height="15.0" fill="rgb(222,180,3)" rx="2" ry="2" />
<text  x="139.74" y="303.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="1113.0" y="629" width="0.2" height="15.0" fill="rgb(210,182,26)" rx="2" ry="2" />
<text  x="1115.99" y="639.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.02%)</title><rect x="1106.2" y="421" width="0.2" height="15.0" fill="rgb(208,57,44)" rx="2" ry="2" />
<text  x="1109.17" y="431.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1052.7" y="533" width="0.2" height="15.0" fill="rgb(233,37,21)" rx="2" ry="2" />
<text  x="1055.70" y="543.5" ></text>
</g>
<g >
<title>mpage_submit_page (2 samples, 0.04%)</title><rect x="1112.6" y="517" width="0.4" height="15.0" fill="rgb(247,80,1)" rx="2" ry="2" />
<text  x="1115.55" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2 samples, 0.04%)</title><rect x="645.0" y="485" width="0.4" height="15.0" fill="rgb(218,32,34)" rx="2" ry="2" />
<text  x="648.00" y="495.5" ></text>
</g>
<g >
<title>lind (6 samples, 0.11%)</title><rect x="10.0" y="757" width="1.3" height="15.0" fill="rgb(247,96,35)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>__libc_close (1 samples, 0.02%)</title><rect x="29.4" y="645" width="0.2" height="15.0" fill="rgb(244,76,45)" rx="2" ry="2" />
<text  x="32.36" y="655.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (6 samples, 0.11%)</title><rect x="700.9" y="501" width="1.3" height="15.0" fill="rgb(240,198,52)" rx="2" ry="2" />
<text  x="703.88" y="511.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (2 samples, 0.04%)</title><rect x="30.2" y="325" width="0.5" height="15.0" fill="rgb(243,19,29)" rx="2" ry="2" />
<text  x="33.24" y="335.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="1047.6" y="597" width="0.3" height="15.0" fill="rgb(250,54,38)" rx="2" ry="2" />
<text  x="1050.64" y="607.5" ></text>
</g>
<g >
<title>alloc_empty_file (1 samples, 0.02%)</title><rect x="1093.0" y="325" width="0.2" height="15.0" fill="rgb(213,3,22)" rx="2" ry="2" />
<text  x="1095.97" y="335.5" ></text>
</g>
<g >
<title>alloc_page_buffers (2 samples, 0.04%)</title><rect x="29.8" y="325" width="0.4" height="15.0" fill="rgb(208,210,44)" rx="2" ry="2" />
<text  x="32.80" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.13%)</title><rect x="785.8" y="501" width="1.6" height="15.0" fill="rgb(210,199,0)" rx="2" ry="2" />
<text  x="788.81" y="511.5" ></text>
</g>
<g >
<title>NaClMutexLock (33 samples, 0.62%)</title><rect x="969.8" y="645" width="7.2" height="15.0" fill="rgb(212,177,54)" rx="2" ry="2" />
<text  x="972.75" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.02%)</title><rect x="173.0" y="517" width="0.3" height="15.0" fill="rgb(252,58,8)" rx="2" ry="2" />
<text  x="176.04" y="527.5" ></text>
</g>
<g >
<title>_IO_getdelim (1 samples, 0.02%)</title><rect x="10.7" y="597" width="0.2" height="15.0" fill="rgb(238,74,30)" rx="2" ry="2" />
<text  x="13.66" y="607.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.02%)</title><rect x="125.1" y="549" width="0.2" height="15.0" fill="rgb(251,153,18)" rx="2" ry="2" />
<text  x="128.07" y="559.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="1157.4" y="421" width="0.3" height="15.0" fill="rgb(219,80,41)" rx="2" ry="2" />
<text  x="1160.44" y="431.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (7 samples, 0.13%)</title><rect x="30.7" y="357" width="1.5" height="15.0" fill="rgb(210,38,43)" rx="2" ry="2" />
<text  x="33.68" y="367.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1111.0" y="549" width="0.2" height="15.0" fill="rgb(223,153,27)" rx="2" ry="2" />
<text  x="1114.01" y="559.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (2 samples, 0.04%)</title><rect x="136.1" y="389" width="0.4" height="15.0" fill="rgb(209,46,51)" rx="2" ry="2" />
<text  x="139.07" y="399.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1183.4" y="533" width="0.2" height="15.0" fill="rgb(211,197,7)" rx="2" ry="2" />
<text  x="1186.40" y="543.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (15 samples, 0.28%)</title><rect x="72.9" y="661" width="3.3" height="15.0" fill="rgb(248,71,9)" rx="2" ry="2" />
<text  x="75.93" y="671.5" ></text>
</g>
<g >
<title>NaClRefCountRef (68 samples, 1.27%)</title><rect x="828.9" y="629" width="15.0" height="15.0" fill="rgb(228,176,24)" rx="2" ry="2" />
<text  x="831.94" y="639.5" ></text>
</g>
<g >
<title>ext4_writepages (2 samples, 0.04%)</title><rect x="1112.6" y="565" width="0.4" height="15.0" fill="rgb(209,38,24)" rx="2" ry="2" />
<text  x="1115.55" y="575.5" ></text>
</g>
<g >
<title>NaClGetDesc (2 samples, 0.04%)</title><rect x="575.7" y="693" width="0.4" height="15.0" fill="rgb(245,12,7)" rx="2" ry="2" />
<text  x="578.69" y="703.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="173.0" y="501" width="0.3" height="15.0" fill="rgb(240,69,52)" rx="2" ry="2" />
<text  x="176.04" y="511.5" ></text>
</g>
<g >
<title>__GI___fork (1 samples, 0.02%)</title><rect x="10.4" y="613" width="0.3" height="15.0" fill="rgb(239,131,44)" rx="2" ry="2" />
<text  x="13.44" y="623.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (2 samples, 0.04%)</title><rect x="1052.3" y="597" width="0.4" height="15.0" fill="rgb(215,183,4)" rx="2" ry="2" />
<text  x="1055.26" y="607.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (134 samples, 2.50%)</title><rect x="715.8" y="533" width="29.5" height="15.0" fill="rgb(251,121,7)" rx="2" ry="2" />
<text  x="718.84" y="543.5" >ri..</text>
</g>
<g >
<title>__unlink (1 samples, 0.02%)</title><rect x="125.1" y="469" width="0.2" height="15.0" fill="rgb(236,117,22)" rx="2" ry="2" />
<text  x="128.07" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.02%)</title><rect x="11.1" y="709" width="0.2" height="15.0" fill="rgb(229,196,38)" rx="2" ry="2" />
<text  x="14.10" y="719.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (18 samples, 0.34%)</title><rect x="623.0" y="581" width="4.0" height="15.0" fill="rgb(247,108,46)" rx="2" ry="2" />
<text  x="625.99" y="591.5" ></text>
</g>
<g >
<title>NaClDescRef (1 samples, 0.02%)</title><rect x="814.2" y="661" width="0.2" height="15.0" fill="rgb(243,205,36)" rx="2" ry="2" />
<text  x="817.20" y="671.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (2 samples, 0.04%)</title><rect x="136.5" y="661" width="0.5" height="15.0" fill="rgb(205,223,31)" rx="2" ry="2" />
<text  x="139.52" y="671.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="126.8" y="389" width="0.3" height="15.0" fill="rgb(220,71,6)" rx="2" ry="2" />
<text  x="129.83" y="399.5" ></text>
</g>
<g >
<title>ext4_inode_csum (1 samples, 0.02%)</title><rect x="136.7" y="69" width="0.3" height="15.0" fill="rgb(227,57,5)" rx="2" ry="2" />
<text  x="139.74" y="79.5" ></text>
</g>
<g >
<title>do_user_addr_fault (4 samples, 0.07%)</title><rect x="126.4" y="549" width="0.9" height="15.0" fill="rgb(224,190,6)" rx="2" ry="2" />
<text  x="129.39" y="559.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="125.1" y="389" width="0.2" height="15.0" fill="rgb(232,100,41)" rx="2" ry="2" />
<text  x="128.07" y="399.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (2 samples, 0.04%)</title><rect x="136.1" y="581" width="0.4" height="15.0" fill="rgb(235,98,52)" rx="2" ry="2" />
<text  x="139.07" y="591.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2 samples, 0.04%)</title><rect x="1113.4" y="629" width="0.5" height="15.0" fill="rgb(242,193,11)" rx="2" ry="2" />
<text  x="1116.43" y="639.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreePrint (3 samples, 0.06%)</title><rect x="889.0" y="597" width="0.7" height="15.0" fill="rgb(230,105,30)" rx="2" ry="2" />
<text  x="892.00" y="607.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (12 samples, 0.22%)</title><rect x="78.4" y="709" width="2.7" height="15.0" fill="rgb(254,174,30)" rx="2" ry="2" />
<text  x="81.43" y="719.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::new (1 samples, 0.02%)</title><rect x="135.9" y="549" width="0.2" height="15.0" fill="rgb(231,211,12)" rx="2" ry="2" />
<text  x="138.85" y="559.5" ></text>
</g>
<g >
<title>prep_new_page (22 samples, 0.41%)</title><rect x="1034.0" y="565" width="4.8" height="15.0" fill="rgb(227,0,30)" rx="2" ry="2" />
<text  x="1037.00" y="575.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreePrint (2 samples, 0.04%)</title><rect x="1053.8" y="725" width="0.4" height="15.0" fill="rgb(213,198,17)" rx="2" ry="2" />
<text  x="1056.80" y="735.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (5 samples, 0.09%)</title><rect x="789.6" y="549" width="1.1" height="15.0" fill="rgb(230,225,13)" rx="2" ry="2" />
<text  x="792.55" y="559.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (689 samples, 12.85%)</title><rect x="403.0" y="533" width="151.6" height="15.0" fill="rgb(213,178,49)" rx="2" ry="2" />
<text  x="405.97" y="543.5" >ringbuf::consumer::..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (118 samples, 2.20%)</title><rect x="1114.3" y="629" width="26.0" height="15.0" fill="rgb(234,55,23)" rx="2" ry="2" />
<text  x="1117.31" y="639.5" >m..</text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.02%)</title><rect x="1110.6" y="661" width="0.2" height="15.0" fill="rgb(207,203,12)" rx="2" ry="2" />
<text  x="1113.57" y="671.5" ></text>
</g>
<g >
<title>[unknown] (189 samples, 3.52%)</title><rect x="1051.4" y="741" width="41.6" height="15.0" fill="rgb(225,134,37)" rx="2" ry="2" />
<text  x="1054.38" y="751.5" >[un..</text>
</g>
<g >
<title>schedule (2 samples, 0.04%)</title><rect x="1113.0" y="693" width="0.4" height="15.0" fill="rgb(222,131,41)" rx="2" ry="2" />
<text  x="1115.99" y="703.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.02%)</title><rect x="11.1" y="677" width="0.2" height="15.0" fill="rgb(229,132,1)" rx="2" ry="2" />
<text  x="14.10" y="687.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="836.2" y="597" width="0.2" height="15.0" fill="rgb(242,144,38)" rx="2" ry="2" />
<text  x="839.20" y="607.5" ></text>
</g>
<g >
<title>kthread (8 samples, 0.15%)</title><rect x="1111.7" y="725" width="1.7" height="15.0" fill="rgb(230,143,32)" rx="2" ry="2" />
<text  x="1114.67" y="735.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (348 samples, 6.49%)</title><rect x="1113.4" y="741" width="76.6" height="15.0" fill="rgb(252,7,18)" rx="2" ry="2" />
<text  x="1116.43" y="751.5" >secondar..</text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.30%)</title><rect x="29.6" y="565" width="3.5" height="15.0" fill="rgb(236,194,27)" rx="2" ry="2" />
<text  x="32.58" y="575.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="762.3" y="469" width="0.2" height="15.0" fill="rgb(214,137,10)" rx="2" ry="2" />
<text  x="765.27" y="479.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="1157.9" y="309" width="0.2" height="15.0" fill="rgb(217,154,31)" rx="2" ry="2" />
<text  x="1160.88" y="319.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (4 samples, 0.07%)</title><rect x="439.5" y="501" width="0.9" height="15.0" fill="rgb(254,102,27)" rx="2" ry="2" />
<text  x="442.49" y="511.5" ></text>
</g>
<g >
<title>vfs_write (15 samples, 0.28%)</title><rect x="29.8" y="517" width="3.3" height="15.0" fill="rgb(209,191,6)" rx="2" ry="2" />
<text  x="32.80" y="527.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="801.7" y="661" width="0.2" height="15.0" fill="rgb(239,18,22)" rx="2" ry="2" />
<text  x="804.65" y="671.5" ></text>
</g>
<g >
<title>do_exit (32 samples, 0.60%)</title><rect x="1102.0" y="613" width="7.0" height="15.0" fill="rgb(250,2,45)" rx="2" ry="2" />
<text  x="1104.99" y="623.5" ></text>
</g>
<g >
<title>NaClAvlTreeExtract (93 samples, 1.73%)</title><rect x="873.6" y="613" width="20.5" height="15.0" fill="rgb(210,84,9)" rx="2" ry="2" />
<text  x="876.60" y="623.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="1093.2" y="325" width="0.2" height="15.0" fill="rgb(226,171,5)" rx="2" ry="2" />
<text  x="1096.19" y="335.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.02%)</title><rect x="1093.0" y="277" width="0.2" height="15.0" fill="rgb(233,101,3)" rx="2" ry="2" />
<text  x="1095.97" y="287.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.04%)</title><rect x="1093.0" y="693" width="0.4" height="15.0" fill="rgb(217,112,28)" rx="2" ry="2" />
<text  x="1095.97" y="703.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (168 samples, 3.13%)</title><rect x="659.1" y="533" width="36.9" height="15.0" fill="rgb(232,109,54)" rx="2" ry="2" />
<text  x="662.08" y="543.5" >std..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.34%)</title><rect x="623.0" y="565" width="4.0" height="15.0" fill="rgb(227,83,47)" rx="2" ry="2" />
<text  x="625.99" y="575.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.04%)</title><rect x="792.0" y="453" width="0.4" height="15.0" fill="rgb(220,138,13)" rx="2" ry="2" />
<text  x="794.97" y="463.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (16 samples, 0.30%)</title><rect x="29.6" y="677" width="3.5" height="15.0" fill="rgb(247,108,22)" rx="2" ry="2" />
<text  x="32.58" y="687.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="11.1" y="613" width="0.2" height="15.0" fill="rgb(220,223,17)" rx="2" ry="2" />
<text  x="14.10" y="623.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (3 samples, 0.06%)</title><rect x="33.1" y="533" width="0.7" height="15.0" fill="rgb(244,216,25)" rx="2" ry="2" />
<text  x="36.10" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (29 samples, 0.54%)</title><rect x="751.0" y="501" width="6.4" height="15.0" fill="rgb(217,214,33)" rx="2" ry="2" />
<text  x="754.05" y="511.5" ></text>
</g>
<g >
<title>n_tty_receive_buf_common (1 samples, 0.02%)</title><rect x="1112.3" y="613" width="0.3" height="15.0" fill="rgb(236,104,46)" rx="2" ry="2" />
<text  x="1115.33" y="623.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (32 samples, 0.60%)</title><rect x="127.3" y="645" width="7.0" height="15.0" fill="rgb(205,197,34)" rx="2" ry="2" />
<text  x="130.27" y="655.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.02%)</title><rect x="10.4" y="597" width="0.3" height="15.0" fill="rgb(227,31,6)" rx="2" ry="2" />
<text  x="13.44" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="136.7" y="373" width="0.3" height="15.0" fill="rgb(216,91,32)" rx="2" ry="2" />
<text  x="139.74" y="383.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (15 samples, 0.28%)</title><rect x="29.8" y="405" width="3.3" height="15.0" fill="rgb(245,4,8)" rx="2" ry="2" />
<text  x="32.80" y="415.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeExtract (98 samples, 1.83%)</title><rect x="872.5" y="629" width="21.6" height="15.0" fill="rgb(226,192,35)" rx="2" ry="2" />
<text  x="875.50" y="639.5" >N..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (26 samples, 0.48%)</title><rect x="554.6" y="533" width="5.7" height="15.0" fill="rgb(211,223,3)" rx="2" ry="2" />
<text  x="557.56" y="543.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.02%)</title><rect x="1103.1" y="485" width="0.2" height="15.0" fill="rgb(228,229,13)" rx="2" ry="2" />
<text  x="1106.09" y="495.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.06%)</title><rect x="1110.8" y="645" width="0.7" height="15.0" fill="rgb(234,141,18)" rx="2" ry="2" />
<text  x="1113.79" y="655.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.02%)</title><rect x="81.9" y="693" width="0.3" height="15.0" fill="rgb(216,98,45)" rx="2" ry="2" />
<text  x="84.95" y="703.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (64 samples, 1.19%)</title><rect x="765.3" y="581" width="14.1" height="15.0" fill="rgb(223,36,23)" rx="2" ry="2" />
<text  x="768.35" y="591.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="791.1" y="533" width="0.4" height="15.0" fill="rgb(209,90,24)" rx="2" ry="2" />
<text  x="794.09" y="543.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.02%)</title><rect x="1093.2" y="373" width="0.2" height="15.0" fill="rgb(229,6,42)" rx="2" ry="2" />
<text  x="1096.19" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (17 samples, 0.32%)</title><rect x="615.1" y="533" width="3.7" height="15.0" fill="rgb(247,58,43)" rx="2" ry="2" />
<text  x="618.07" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.37%)</title><rect x="753.0" y="469" width="4.4" height="15.0" fill="rgb(210,160,0)" rx="2" ry="2" />
<text  x="756.03" y="479.5" ></text>
</g>
<g >
<title>vfs_write (3 samples, 0.06%)</title><rect x="33.1" y="677" width="0.7" height="15.0" fill="rgb(217,210,23)" rx="2" ry="2" />
<text  x="36.10" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_free (57 samples, 1.06%)</title><rect x="900.9" y="629" width="12.5" height="15.0" fill="rgb(228,157,15)" rx="2" ry="2" />
<text  x="903.89" y="639.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="33.5" y="501" width="0.3" height="15.0" fill="rgb(239,165,51)" rx="2" ry="2" />
<text  x="36.54" y="511.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.04%)</title><rect x="1157.9" y="469" width="0.4" height="15.0" fill="rgb(205,19,9)" rx="2" ry="2" />
<text  x="1160.88" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1184.9" y="549" width="0.3" height="15.0" fill="rgb(225,94,23)" rx="2" ry="2" />
<text  x="1187.94" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (32 samples, 0.60%)</title><rect x="637.7" y="533" width="7.1" height="15.0" fill="rgb(244,64,14)" rx="2" ry="2" />
<text  x="640.73" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (4 samples, 0.07%)</title><rect x="81.5" y="725" width="0.9" height="15.0" fill="rgb(220,73,4)" rx="2" ry="2" />
<text  x="84.51" y="735.5" ></text>
</g>
<g >
<title>NaClXMutexLock (26 samples, 0.48%)</title><rect x="116.1" y="693" width="5.7" height="15.0" fill="rgb(215,69,4)" rx="2" ry="2" />
<text  x="119.05" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="11.1" y="725" width="0.2" height="15.0" fill="rgb(216,171,43)" rx="2" ry="2" />
<text  x="14.10" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.37%)</title><rect x="627.0" y="517" width="4.4" height="15.0" fill="rgb(210,215,29)" rx="2" ry="2" />
<text  x="629.95" y="527.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (3 samples, 0.06%)</title><rect x="820.8" y="645" width="0.7" height="15.0" fill="rgb(247,226,51)" rx="2" ry="2" />
<text  x="823.80" y="655.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::Integer&gt;::write (1 samples, 0.02%)</title><rect x="136.1" y="149" width="0.2" height="15.0" fill="rgb(208,139,42)" rx="2" ry="2" />
<text  x="139.07" y="159.5" ></text>
</g>
<g >
<title>__schedule (7 samples, 0.13%)</title><rect x="1186.3" y="597" width="1.5" height="15.0" fill="rgb(209,62,25)" rx="2" ry="2" />
<text  x="1189.26" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.24%)</title><rect x="620.1" y="565" width="2.9" height="15.0" fill="rgb(220,112,28)" rx="2" ry="2" />
<text  x="623.13" y="575.5" ></text>
</g>
<g >
<title>rb_next (3 samples, 0.06%)</title><rect x="1145.3" y="453" width="0.7" height="15.0" fill="rgb(249,8,54)" rx="2" ry="2" />
<text  x="1148.33" y="463.5" ></text>
</g>
<g >
<title>_int_free (5 samples, 0.09%)</title><rect x="62.1" y="725" width="1.1" height="15.0" fill="rgb(243,208,54)" rx="2" ry="2" />
<text  x="65.15" y="735.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1113.0" y="677" width="0.2" height="15.0" fill="rgb(248,208,11)" rx="2" ry="2" />
<text  x="1115.99" y="687.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.02%)</title><rect x="801.4" y="661" width="0.3" height="15.0" fill="rgb(237,66,10)" rx="2" ry="2" />
<text  x="804.43" y="671.5" ></text>
</g>
<g >
<title>timekeeping_advance (1 samples, 0.02%)</title><rect x="544.9" y="341" width="0.2" height="15.0" fill="rgb(249,169,20)" rx="2" ry="2" />
<text  x="547.88" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (51 samples, 0.95%)</title><rect x="428.3" y="501" width="11.2" height="15.0" fill="rgb(220,155,46)" rx="2" ry="2" />
<text  x="431.27" y="511.5" ></text>
</g>
<g >
<title>clear_page_dirty_for_io (1 samples, 0.02%)</title><rect x="1112.6" y="501" width="0.2" height="15.0" fill="rgb(253,192,51)" rx="2" ry="2" />
<text  x="1115.55" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.04%)</title><rect x="1056.4" y="725" width="0.5" height="15.0" fill="rgb(217,115,38)" rx="2" ry="2" />
<text  x="1059.44" y="735.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1042.6" y="581" width="0.2" height="15.0" fill="rgb(211,119,30)" rx="2" ry="2" />
<text  x="1045.58" y="591.5" ></text>
</g>
<g >
<title>end_page_writeback (1 samples, 0.02%)</title><rect x="1112.1" y="613" width="0.2" height="15.0" fill="rgb(206,190,21)" rx="2" ry="2" />
<text  x="1115.11" y="623.5" ></text>
</g>
<g >
<title>NaClApplyPatchToMemory (1 samples, 0.02%)</title><rect x="136.5" y="565" width="0.2" height="15.0" fill="rgb(205,8,4)" rx="2" ry="2" />
<text  x="139.52" y="575.5" ></text>
</g>
<g >
<title>free_unref_page_list (13 samples, 0.24%)</title><rect x="1105.7" y="437" width="2.9" height="15.0" fill="rgb(249,178,32)" rx="2" ry="2" />
<text  x="1108.73" y="447.5" ></text>
</g>
<g >
<title>insert_work (2 samples, 0.04%)</title><rect x="1157.9" y="389" width="0.4" height="15.0" fill="rgb(254,49,32)" rx="2" ry="2" />
<text  x="1160.88" y="399.5" ></text>
</g>
<g >
<title>free_unref_page_commit (10 samples, 0.19%)</title><rect x="1106.4" y="421" width="2.2" height="15.0" fill="rgb(220,200,51)" rx="2" ry="2" />
<text  x="1109.39" y="431.5" ></text>
</g>
<g >
<title>follow_page_mask (1 samples, 0.02%)</title><rect x="1052.3" y="533" width="0.2" height="15.0" fill="rgb(248,144,0)" rx="2" ry="2" />
<text  x="1055.26" y="543.5" ></text>
</g>
<g >
<title>update_blocked_averages (6 samples, 0.11%)</title><rect x="1156.6" y="453" width="1.3" height="15.0" fill="rgb(239,135,24)" rx="2" ry="2" />
<text  x="1159.56" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1052.7" y="677" width="0.2" height="15.0" fill="rgb(243,118,40)" rx="2" ry="2" />
<text  x="1055.70" y="687.5" ></text>
</g>
<g >
<title>dispatcher (1,927 samples, 35.93%)</title><rect x="137.0" y="629" width="423.9" height="15.0" fill="rgb(250,50,40)" rx="2" ry="2" />
<text  x="139.96" y="639.5" >dispatcher</text>
</g>
<g >
<title>DynArrayGet (1 samples, 0.02%)</title><rect x="1051.6" y="725" width="0.2" height="15.0" fill="rgb(229,123,40)" rx="2" ry="2" />
<text  x="1054.60" y="735.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (2 samples, 0.04%)</title><rect x="1112.6" y="629" width="0.4" height="15.0" fill="rgb(234,7,15)" rx="2" ry="2" />
<text  x="1115.55" y="639.5" ></text>
</g>
<g >
<title>do_futex (3 samples, 0.06%)</title><rect x="1110.8" y="693" width="0.7" height="15.0" fill="rgb(213,198,42)" rx="2" ry="2" />
<text  x="1113.79" y="703.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="789.3" y="501" width="0.3" height="15.0" fill="rgb(218,118,8)" rx="2" ry="2" />
<text  x="792.33" y="511.5" ></text>
</g>
<g >
<title>smp_call_function_single (65 samples, 1.21%)</title><rect x="14.6" y="501" width="14.3" height="15.0" fill="rgb(207,7,23)" rx="2" ry="2" />
<text  x="17.62" y="511.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1184.9" y="565" width="0.3" height="15.0" fill="rgb(247,218,35)" rx="2" ry="2" />
<text  x="1187.94" y="575.5" ></text>
</g>
<g >
<title>__gconv_load_conf (1 samples, 0.02%)</title><rect x="10.7" y="629" width="0.2" height="15.0" fill="rgb(205,172,50)" rx="2" ry="2" />
<text  x="13.66" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="134.3" y="629" width="0.2" height="15.0" fill="rgb(218,107,49)" rx="2" ry="2" />
<text  x="137.31" y="639.5" ></text>
</g>
<g >
<title>find_next_and_bit (1 samples, 0.02%)</title><rect x="1155.9" y="357" width="0.2" height="15.0" fill="rgb(206,146,33)" rx="2" ry="2" />
<text  x="1158.90" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.07%)</title><rect x="126.4" y="517" width="0.9" height="15.0" fill="rgb(217,23,14)" rx="2" ry="2" />
<text  x="129.39" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="135.6" y="677" width="0.3" height="15.0" fill="rgb(234,74,2)" rx="2" ry="2" />
<text  x="138.63" y="687.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (2 samples, 0.04%)</title><rect x="560.3" y="581" width="0.4" height="15.0" fill="rgb(235,124,35)" rx="2" ry="2" />
<text  x="563.29" y="591.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (13 samples, 0.24%)</title><rect x="1041.9" y="613" width="2.9" height="15.0" fill="rgb(210,168,6)" rx="2" ry="2" />
<text  x="1044.92" y="623.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.02%)</title><rect x="1113.7" y="357" width="0.2" height="15.0" fill="rgb(245,106,27)" rx="2" ry="2" />
<text  x="1116.65" y="367.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (1 samples, 0.02%)</title><rect x="1108.6" y="565" width="0.2" height="15.0" fill="rgb(218,172,24)" rx="2" ry="2" />
<text  x="1111.59" y="575.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="1108.8" y="517" width="0.2" height="15.0" fill="rgb(231,166,8)" rx="2" ry="2" />
<text  x="1111.81" y="527.5" ></text>
</g>
<g >
<title>alloc_buffer_head (1 samples, 0.02%)</title><rect x="33.3" y="469" width="0.2" height="15.0" fill="rgb(253,22,12)" rx="2" ry="2" />
<text  x="36.32" y="479.5" ></text>
</g>
<g >
<title>start_secondary (126 samples, 2.35%)</title><rect x="1113.4" y="725" width="27.8" height="15.0" fill="rgb(232,185,15)" rx="2" ry="2" />
<text  x="1116.43" y="735.5" >s..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="136.3" y="261" width="0.2" height="15.0" fill="rgb(225,93,52)" rx="2" ry="2" />
<text  x="139.29" y="271.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (1 samples, 0.02%)</title><rect x="1177.9" y="549" width="0.2" height="15.0" fill="rgb(232,183,27)" rx="2" ry="2" />
<text  x="1180.90" y="559.5" ></text>
</g>
<g >
<title>update_process_times (19 samples, 0.35%)</title><rect x="1147.1" y="421" width="4.2" height="15.0" fill="rgb(245,32,18)" rx="2" ry="2" />
<text  x="1150.09" y="431.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.04%)</title><rect x="1113.9" y="581" width="0.4" height="15.0" fill="rgb(238,29,27)" rx="2" ry="2" />
<text  x="1116.87" y="591.5" ></text>
</g>
<g >
<title>_start (3 samples, 0.06%)</title><rect x="1093.0" y="741" width="0.6" height="15.0" fill="rgb(224,151,20)" rx="2" ry="2" />
<text  x="1095.97" y="751.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.02%)</title><rect x="1048.1" y="677" width="0.2" height="15.0" fill="rgb(235,180,34)" rx="2" ry="2" />
<text  x="1051.08" y="687.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.02%)</title><rect x="1187.1" y="517" width="0.3" height="15.0" fill="rgb(239,211,37)" rx="2" ry="2" />
<text  x="1190.14" y="527.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.02%)</title><rect x="136.7" y="469" width="0.3" height="15.0" fill="rgb(248,110,35)" rx="2" ry="2" />
<text  x="139.74" y="479.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.02%)</title><rect x="1093.0" y="341" width="0.2" height="15.0" fill="rgb(209,103,48)" rx="2" ry="2" />
<text  x="1095.97" y="351.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (48 samples, 0.90%)</title><rect x="627.0" y="549" width="10.5" height="15.0" fill="rgb(244,203,44)" rx="2" ry="2" />
<text  x="629.95" y="559.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (4 samples, 0.07%)</title><rect x="126.4" y="597" width="0.9" height="15.0" fill="rgb(213,77,54)" rx="2" ry="2" />
<text  x="129.39" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (1 samples, 0.02%)</title><rect x="1110.6" y="709" width="0.2" height="15.0" fill="rgb(243,49,28)" rx="2" ry="2" />
<text  x="1113.57" y="719.5" ></text>
</g>
<g >
<title>rmqueue (8 samples, 0.15%)</title><rect x="1038.8" y="565" width="1.8" height="15.0" fill="rgb(219,6,37)" rx="2" ry="2" />
<text  x="1041.84" y="575.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.02%)</title><rect x="63.5" y="677" width="0.2" height="15.0" fill="rgb(216,132,12)" rx="2" ry="2" />
<text  x="66.47" y="687.5" ></text>
</g>
<g >
<title>NaClSysClose (1 samples, 0.02%)</title><rect x="125.1" y="693" width="0.2" height="15.0" fill="rgb(206,161,49)" rx="2" ry="2" />
<text  x="128.07" y="703.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect x="136.1" y="469" width="0.4" height="15.0" fill="rgb(249,91,11)" rx="2" ry="2" />
<text  x="139.07" y="479.5" ></text>
</g>
<g >
<title>dispatcher (6 samples, 0.11%)</title><rect x="1063.5" y="725" width="1.3" height="15.0" fill="rgb(248,191,5)" rx="2" ry="2" />
<text  x="1066.48" y="735.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (64 samples, 1.19%)</title><rect x="1144.2" y="549" width="14.1" height="15.0" fill="rgb(214,111,2)" rx="2" ry="2" />
<text  x="1147.23" y="559.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.02%)</title><rect x="11.1" y="629" width="0.2" height="15.0" fill="rgb(245,7,43)" rx="2" ry="2" />
<text  x="14.10" y="639.5" ></text>
</g>
<g >
<title>sel_ldr (4,887 samples, 91.12%)</title><rect x="33.8" y="757" width="1075.2" height="15.0" fill="rgb(210,67,42)" rx="2" ry="2" />
<text  x="36.76" y="767.5" >sel_ldr</text>
</g>
<g >
<title>native_flush_tlb_others (1 samples, 0.02%)</title><rect x="135.4" y="437" width="0.2" height="15.0" fill="rgb(231,188,35)" rx="2" ry="2" />
<text  x="138.41" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_write (16 samples, 0.30%)</title><rect x="29.6" y="549" width="3.5" height="15.0" fill="rgb(206,169,53)" rx="2" ry="2" />
<text  x="32.58" y="559.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1146.0" y="453" width="0.2" height="15.0" fill="rgb(235,118,46)" rx="2" ry="2" />
<text  x="1148.99" y="463.5" ></text>
</g>
<g >
<title>schedule_idle (8 samples, 0.15%)</title><rect x="1186.3" y="613" width="1.7" height="15.0" fill="rgb(211,95,34)" rx="2" ry="2" />
<text  x="1189.26" y="623.5" ></text>
</g>
<g >
<title>CompareAndSwap (38 samples, 0.71%)</title><rect x="106.8" y="693" width="8.4" height="15.0" fill="rgb(219,197,24)" rx="2" ry="2" />
<text  x="109.81" y="703.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="126.2" y="469" width="0.2" height="15.0" fill="rgb(222,196,1)" rx="2" ry="2" />
<text  x="129.17" y="479.5" ></text>
</g>
<g >
<title>cpuidle_select (27 samples, 0.50%)</title><rect x="1178.6" y="597" width="5.9" height="15.0" fill="rgb(222,169,1)" rx="2" ry="2" />
<text  x="1181.56" y="607.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (24 samples, 0.45%)</title><rect x="821.5" y="661" width="5.2" height="15.0" fill="rgb(225,112,39)" rx="2" ry="2" />
<text  x="824.46" y="671.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.02%)</title><rect x="136.7" y="197" width="0.3" height="15.0" fill="rgb(212,209,17)" rx="2" ry="2" />
<text  x="139.74" y="207.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (4,073 samples, 75.95%)</title><rect x="87.7" y="725" width="896.1" height="15.0" fill="rgb(228,206,37)" rx="2" ry="2" />
<text  x="90.67" y="735.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>record__mmap_read_all (16 samples, 0.30%)</title><rect x="29.6" y="693" width="3.5" height="15.0" fill="rgb(234,66,22)" rx="2" ry="2" />
<text  x="32.58" y="703.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1052.7" y="549" width="0.2" height="15.0" fill="rgb(250,159,49)" rx="2" ry="2" />
<text  x="1055.70" y="559.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (2 samples, 0.04%)</title><rect x="645.0" y="549" width="0.4" height="15.0" fill="rgb(216,216,4)" rx="2" ry="2" />
<text  x="648.00" y="559.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (9 samples, 0.17%)</title><rect x="1042.8" y="581" width="2.0" height="15.0" fill="rgb(245,35,40)" rx="2" ry="2" />
<text  x="1045.80" y="591.5" ></text>
</g>
<g >
<title>NaClLogLock (1 samples, 0.02%)</title><rect x="560.9" y="661" width="0.3" height="15.0" fill="rgb(239,60,19)" rx="2" ry="2" />
<text  x="563.95" y="671.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 1.19%)</title><rect x="14.8" y="437" width="14.1" height="15.0" fill="rgb(239,60,54)" rx="2" ry="2" />
<text  x="17.84" y="447.5" ></text>
</g>
<g >
<title>do_idle (126 samples, 2.35%)</title><rect x="1113.4" y="693" width="27.8" height="15.0" fill="rgb(229,224,18)" rx="2" ry="2" />
<text  x="1116.43" y="703.5" >d..</text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="134.3" y="581" width="0.2" height="15.0" fill="rgb(232,151,52)" rx="2" ry="2" />
<text  x="137.31" y="591.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (1 samples, 0.02%)</title><rect x="135.4" y="421" width="0.2" height="15.0" fill="rgb(222,222,19)" rx="2" ry="2" />
<text  x="138.41" y="431.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (2 samples, 0.04%)</title><rect x="1111.9" y="677" width="0.4" height="15.0" fill="rgb(252,40,11)" rx="2" ry="2" />
<text  x="1114.89" y="687.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (46 samples, 0.86%)</title><rect x="644.8" y="581" width="10.1" height="15.0" fill="rgb(238,212,33)" rx="2" ry="2" />
<text  x="647.78" y="591.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.02%)</title><rect x="1140.9" y="677" width="0.3" height="15.0" fill="rgb(206,33,11)" rx="2" ry="2" />
<text  x="1143.93" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (1 samples, 0.02%)</title><rect x="1093.2" y="613" width="0.2" height="15.0" fill="rgb(236,72,2)" rx="2" ry="2" />
<text  x="1096.19" y="623.5" ></text>
</g>
<g >
<title>menu_update (2 samples, 0.04%)</title><rect x="1182.5" y="565" width="0.5" height="15.0" fill="rgb(231,170,10)" rx="2" ry="2" />
<text  x="1185.52" y="575.5" ></text>
</g>
<g >
<title>NaClDescIoDescOpen (1 samples, 0.02%)</title><rect x="1093.0" y="661" width="0.2" height="15.0" fill="rgb(228,26,31)" rx="2" ry="2" />
<text  x="1095.97" y="671.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="1108.6" y="549" width="0.2" height="15.0" fill="rgb(231,136,14)" rx="2" ry="2" />
<text  x="1111.59" y="559.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (63 samples, 1.17%)</title><rect x="48.3" y="725" width="13.8" height="15.0" fill="rgb(222,154,44)" rx="2" ry="2" />
<text  x="51.28" y="735.5" ></text>
</g>
<g >
<title>__hrtimer_get_next_event (2 samples, 0.04%)</title><rect x="1144.7" y="485" width="0.4" height="15.0" fill="rgb(215,111,35)" rx="2" ry="2" />
<text  x="1147.67" y="495.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="789.3" y="533" width="0.3" height="15.0" fill="rgb(226,133,33)" rx="2" ry="2" />
<text  x="792.33" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (34 samples, 0.63%)</title><rect x="611.3" y="613" width="7.5" height="15.0" fill="rgb(205,4,36)" rx="2" ry="2" />
<text  x="614.33" y="623.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="1093.2" y="213" width="0.2" height="15.0" fill="rgb(224,172,39)" rx="2" ry="2" />
<text  x="1096.19" y="223.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="1046.3" y="581" width="0.2" height="15.0" fill="rgb(227,85,30)" rx="2" ry="2" />
<text  x="1049.32" y="591.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="921.8" y="629" width="0.2" height="15.0" fill="rgb(225,161,29)" rx="2" ry="2" />
<text  x="924.79" y="639.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.02%)</title><rect x="1108.8" y="581" width="0.2" height="15.0" fill="rgb(248,64,37)" rx="2" ry="2" />
<text  x="1111.81" y="591.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (6 samples, 0.11%)</title><rect x="760.1" y="421" width="1.3" height="15.0" fill="rgb(217,77,43)" rx="2" ry="2" />
<text  x="763.07" y="431.5" ></text>
</g>
<g >
<title>do_shared_fault (2 samples, 0.04%)</title><rect x="126.8" y="469" width="0.5" height="15.0" fill="rgb(240,112,42)" rx="2" ry="2" />
<text  x="129.83" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.06%)</title><rect x="752.4" y="469" width="0.6" height="15.0" fill="rgb(248,140,26)" rx="2" ry="2" />
<text  x="755.37" y="479.5" ></text>
</g>
<g >
<title>dispatcher@plt (1 samples, 0.02%)</title><rect x="800.1" y="629" width="0.2" height="15.0" fill="rgb(236,36,13)" rx="2" ry="2" />
<text  x="803.11" y="639.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (43 samples, 0.80%)</title><rect x="704.0" y="517" width="9.4" height="15.0" fill="rgb(205,175,16)" rx="2" ry="2" />
<text  x="706.96" y="527.5" ></text>
</g>
<g >
<title>__do_fault (2 samples, 0.04%)</title><rect x="126.8" y="453" width="0.5" height="15.0" fill="rgb(232,19,12)" rx="2" ry="2" />
<text  x="129.83" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="978.1" y="629" width="0.5" height="15.0" fill="rgb(243,170,42)" rx="2" ry="2" />
<text  x="981.11" y="639.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.02%)</title><rect x="1108.8" y="533" width="0.2" height="15.0" fill="rgb(214,172,44)" rx="2" ry="2" />
<text  x="1111.81" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (11 samples, 0.21%)</title><rect x="43.4" y="725" width="2.5" height="15.0" fill="rgb(208,55,53)" rx="2" ry="2" />
<text  x="46.44" y="735.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.02%)</title><rect x="1178.1" y="549" width="0.2" height="15.0" fill="rgb(240,93,31)" rx="2" ry="2" />
<text  x="1181.12" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="136.3" y="149" width="0.2" height="15.0" fill="rgb(247,30,11)" rx="2" ry="2" />
<text  x="139.29" y="159.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.02%)</title><rect x="10.9" y="725" width="0.2" height="15.0" fill="rgb(232,13,7)" rx="2" ry="2" />
<text  x="13.88" y="735.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (50 samples, 0.93%)</title><rect x="750.4" y="533" width="11.0" height="15.0" fill="rgb(238,207,16)" rx="2" ry="2" />
<text  x="753.39" y="543.5" ></text>
</g>
<g >
<title>alloc_page_buffers (1 samples, 0.02%)</title><rect x="33.3" y="485" width="0.2" height="15.0" fill="rgb(226,111,49)" rx="2" ry="2" />
<text  x="36.32" y="495.5" ></text>
</g>
<g >
<title>__cmd_record (98 samples, 1.83%)</title><rect x="11.5" y="709" width="21.6" height="15.0" fill="rgb(236,150,41)" rx="2" ry="2" />
<text  x="14.54" y="719.5" >_..</text>
</g>
<g >
<title>sync_regs (8 samples, 0.15%)</title><rect x="1049.6" y="725" width="1.8" height="15.0" fill="rgb(247,139,39)" rx="2" ry="2" />
<text  x="1052.62" y="735.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.02%)</title><rect x="10.2" y="629" width="0.2" height="15.0" fill="rgb(244,214,28)" rx="2" ry="2" />
<text  x="13.22" y="639.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (2 samples, 0.04%)</title><rect x="1155.7" y="389" width="0.4" height="15.0" fill="rgb(251,137,52)" rx="2" ry="2" />
<text  x="1158.68" y="399.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.02%)</title><rect x="1052.7" y="613" width="0.2" height="15.0" fill="rgb(229,88,28)" rx="2" ry="2" />
<text  x="1055.70" y="623.5" ></text>
</g>
<g >
<title>tty_ldisc_receive_buf (1 samples, 0.02%)</title><rect x="1112.3" y="645" width="0.3" height="15.0" fill="rgb(235,187,24)" rx="2" ry="2" />
<text  x="1115.33" y="655.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.02%)</title><rect x="812.7" y="677" width="0.2" height="15.0" fill="rgb(226,104,41)" rx="2" ry="2" />
<text  x="815.66" y="687.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (2 samples, 0.04%)</title><rect x="560.3" y="533" width="0.4" height="15.0" fill="rgb(219,188,14)" rx="2" ry="2" />
<text  x="563.29" y="543.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="10.4" y="485" width="0.3" height="15.0" fill="rgb(251,146,6)" rx="2" ry="2" />
<text  x="13.44" y="495.5" ></text>
</g>
<g >
<title>NaClLogUnlock (31 samples, 0.58%)</title><rect x="853.6" y="661" width="6.8" height="15.0" fill="rgb(249,181,44)" rx="2" ry="2" />
<text  x="856.58" y="671.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (19 samples, 0.35%)</title><rect x="795.9" y="549" width="4.2" height="15.0" fill="rgb(206,11,50)" rx="2" ry="2" />
<text  x="798.93" y="559.5" ></text>
</g>
<g >
<title>ovl_write_iter (3 samples, 0.06%)</title><rect x="33.1" y="645" width="0.7" height="15.0" fill="rgb(241,132,9)" rx="2" ry="2" />
<text  x="36.10" y="655.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (29 samples, 0.54%)</title><rect x="751.0" y="517" width="6.4" height="15.0" fill="rgb(224,92,42)" rx="2" ry="2" />
<text  x="754.05" y="527.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="136.7" y="37" width="0.3" height="15.0" fill="rgb(241,70,0)" rx="2" ry="2" />
<text  x="139.74" y="47.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (6 samples, 0.11%)</title><rect x="1152.8" y="517" width="1.3" height="15.0" fill="rgb(242,94,17)" rx="2" ry="2" />
<text  x="1155.82" y="527.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (29 samples, 0.54%)</title><rect x="154.3" y="565" width="6.4" height="15.0" fill="rgb(220,91,31)" rx="2" ry="2" />
<text  x="157.34" y="575.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.02%)</title><rect x="1111.0" y="597" width="0.2" height="15.0" fill="rgb(243,176,43)" rx="2" ry="2" />
<text  x="1114.01" y="607.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.02%)</title><rect x="136.7" y="421" width="0.3" height="15.0" fill="rgb(250,196,1)" rx="2" ry="2" />
<text  x="139.74" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (48 samples, 0.90%)</title><rect x="627.0" y="581" width="10.5" height="15.0" fill="rgb(210,115,49)" rx="2" ry="2" />
<text  x="629.95" y="591.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="134.3" y="565" width="0.2" height="15.0" fill="rgb(252,125,3)" rx="2" ry="2" />
<text  x="137.31" y="575.5" ></text>
</g>
<g >
<title>wb_writeback (2 samples, 0.04%)</title><rect x="1112.6" y="645" width="0.4" height="15.0" fill="rgb(216,168,27)" rx="2" ry="2" />
<text  x="1115.55" y="655.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="10.2" y="485" width="0.2" height="15.0" fill="rgb(250,96,42)" rx="2" ry="2" />
<text  x="13.22" y="495.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1111.7" y="677" width="0.2" height="15.0" fill="rgb(230,156,42)" rx="2" ry="2" />
<text  x="1114.67" y="687.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.02%)</title><rect x="1093.4" y="725" width="0.2" height="15.0" fill="rgb(252,18,34)" rx="2" ry="2" />
<text  x="1096.41" y="735.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (1,028 samples, 19.17%)</title><rect x="175.5" y="565" width="226.1" height="15.0" fill="rgb(219,188,10)" rx="2" ry="2" />
<text  x="178.46" y="575.5" >ringbuf::consumer::Consumer&lt;T..</text>
</g>
<g >
<title>n_tty_receive_buf2 (1 samples, 0.02%)</title><rect x="1112.3" y="629" width="0.3" height="15.0" fill="rgb(251,131,33)" rx="2" ry="2" />
<text  x="1115.33" y="639.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (125 samples, 2.33%)</title><rect x="1113.4" y="677" width="27.5" height="15.0" fill="rgb(235,74,7)" rx="2" ry="2" />
<text  x="1116.43" y="687.5" >c..</text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.04%)</title><rect x="762.5" y="501" width="0.4" height="15.0" fill="rgb(248,12,31)" rx="2" ry="2" />
<text  x="765.49" y="511.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="544.9" y="437" width="0.2" height="15.0" fill="rgb(229,139,42)" rx="2" ry="2" />
<text  x="547.88" y="447.5" ></text>
</g>
<g >
<title>NaClSysFork (2 samples, 0.04%)</title><rect x="136.5" y="693" width="0.5" height="15.0" fill="rgb(207,158,44)" rx="2" ry="2" />
<text  x="139.52" y="703.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (385 samples, 7.18%)</title><rect x="460.2" y="501" width="84.7" height="15.0" fill="rgb(232,211,25)" rx="2" ry="2" />
<text  x="463.17" y="511.5" >core::int..</text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (168 samples, 3.13%)</title><rect x="659.1" y="517" width="36.9" height="15.0" fill="rgb(232,27,41)" rx="2" ry="2" />
<text  x="662.08" y="527.5" >std..</text>
</g>
<g >
<title>cmd_record (98 samples, 1.83%)</title><rect x="11.5" y="725" width="21.6" height="15.0" fill="rgb(244,2,3)" rx="2" ry="2" />
<text  x="14.54" y="735.5" >c..</text>
</g>
<g >
<title>NaClSysWrite (1,852 samples, 34.53%)</title><rect x="576.1" y="693" width="407.5" height="15.0" fill="rgb(250,199,32)" rx="2" ry="2" />
<text  x="579.13" y="703.5" >NaClSysWrite</text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="30.0" y="229" width="0.2" height="15.0" fill="rgb(250,143,20)" rx="2" ry="2" />
<text  x="33.02" y="239.5" ></text>
</g>
<g >
<title>CachedMapWritableText (4 samples, 0.07%)</title><rect x="126.4" y="645" width="0.9" height="15.0" fill="rgb(239,174,53)" rx="2" ry="2" />
<text  x="129.39" y="655.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.02%)</title><rect x="1110.6" y="693" width="0.2" height="15.0" fill="rgb(216,165,9)" rx="2" ry="2" />
<text  x="1113.57" y="703.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="125.1" y="373" width="0.2" height="15.0" fill="rgb(220,22,29)" rx="2" ry="2" />
<text  x="128.07" y="383.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.02%)</title><rect x="1140.3" y="629" width="0.2" height="15.0" fill="rgb(209,156,3)" rx="2" ry="2" />
<text  x="1143.27" y="639.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="1093.0" y="613" width="0.2" height="15.0" fill="rgb(241,42,28)" rx="2" ry="2" />
<text  x="1095.97" y="623.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (3 samples, 0.06%)</title><rect x="1189.1" y="565" width="0.7" height="15.0" fill="rgb(214,69,53)" rx="2" ry="2" />
<text  x="1192.12" y="575.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (168 samples, 3.13%)</title><rect x="659.1" y="565" width="36.9" height="15.0" fill="rgb(248,6,14)" rx="2" ry="2" />
<text  x="662.08" y="575.5" >cor..</text>
</g>
<g >
<title>tick_nohz_get_sleep_length (2 samples, 0.04%)</title><rect x="1140.5" y="629" width="0.4" height="15.0" fill="rgb(211,150,11)" rx="2" ry="2" />
<text  x="1143.49" y="639.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.02%)</title><rect x="135.4" y="517" width="0.2" height="15.0" fill="rgb(229,31,52)" rx="2" ry="2" />
<text  x="138.41" y="527.5" ></text>
</g>
<g >
<title>__put_user_nocheck_4 (1 samples, 0.02%)</title><rect x="10.4" y="581" width="0.3" height="15.0" fill="rgb(206,155,36)" rx="2" ry="2" />
<text  x="13.44" y="591.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="1093.2" y="405" width="0.2" height="15.0" fill="rgb(243,225,47)" rx="2" ry="2" />
<text  x="1096.19" y="415.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (1 samples, 0.02%)</title><rect x="125.1" y="149" width="0.2" height="15.0" fill="rgb(234,56,25)" rx="2" ry="2" />
<text  x="128.07" y="159.5" ></text>
</g>
<g >
<title>__writeback_single_inode (2 samples, 0.04%)</title><rect x="1112.6" y="597" width="0.4" height="15.0" fill="rgb(219,182,28)" rx="2" ry="2" />
<text  x="1115.55" y="607.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="1187.4" y="533" width="0.2" height="15.0" fill="rgb(241,132,26)" rx="2" ry="2" />
<text  x="1190.36" y="543.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.02%)</title><rect x="860.8" y="677" width="0.3" height="15.0" fill="rgb(243,157,2)" rx="2" ry="2" />
<text  x="863.84" y="687.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="1092.5" y="709" width="0.2" height="15.0" fill="rgb(246,27,36)" rx="2" ry="2" />
<text  x="1095.53" y="719.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (7 samples, 0.13%)</title><rect x="173.9" y="549" width="1.6" height="15.0" fill="rgb(215,56,47)" rx="2" ry="2" />
<text  x="176.92" y="559.5" ></text>
</g>
<g >
<title>do_fault_around (1 samples, 0.02%)</title><rect x="10.9" y="581" width="0.2" height="15.0" fill="rgb(205,62,25)" rx="2" ry="2" />
<text  x="13.88" y="591.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="1157.9" y="357" width="0.4" height="15.0" fill="rgb(220,121,43)" rx="2" ry="2" />
<text  x="1160.88" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.06%)</title><rect x="31.6" y="309" width="0.6" height="15.0" fill="rgb(223,176,39)" rx="2" ry="2" />
<text  x="34.56" y="319.5" ></text>
</g>
<g >
<title>create_empty_buffers (1 samples, 0.02%)</title><rect x="33.3" y="501" width="0.2" height="15.0" fill="rgb(243,143,42)" rx="2" ry="2" />
<text  x="36.32" y="511.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (758 samples, 14.13%)</title><rect x="618.8" y="613" width="166.8" height="15.0" fill="rgb(252,158,15)" rx="2" ry="2" />
<text  x="621.81" y="623.5" >rustposix::safeposix:..</text>
</g>
<g >
<title>menu_reflect (1 samples, 0.02%)</title><rect x="1184.5" y="597" width="0.2" height="15.0" fill="rgb(217,28,26)" rx="2" ry="2" />
<text  x="1187.50" y="607.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.02%)</title><rect x="1093.2" y="581" width="0.2" height="15.0" fill="rgb(216,102,54)" rx="2" ry="2" />
<text  x="1096.19" y="591.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.04%)</title><rect x="1105.1" y="437" width="0.4" height="15.0" fill="rgb(209,19,19)" rx="2" ry="2" />
<text  x="1108.07" y="447.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.02%)</title><rect x="30.0" y="149" width="0.2" height="15.0" fill="rgb(246,6,50)" rx="2" ry="2" />
<text  x="33.02" y="159.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.02%)</title><rect x="1093.2" y="453" width="0.2" height="15.0" fill="rgb(222,182,38)" rx="2" ry="2" />
<text  x="1096.19" y="463.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_string (1 samples, 0.02%)</title><rect x="1093.2" y="645" width="0.2" height="15.0" fill="rgb(229,225,53)" rx="2" ry="2" />
<text  x="1096.19" y="655.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.11%)</title><rect x="756.1" y="453" width="1.3" height="15.0" fill="rgb(248,58,50)" rx="2" ry="2" />
<text  x="759.11" y="463.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (3 samples, 0.06%)</title><rect x="102.4" y="693" width="0.7" height="15.0" fill="rgb(231,153,53)" rx="2" ry="2" />
<text  x="105.41" y="703.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="696.0" y="565" width="0.3" height="15.0" fill="rgb(217,35,53)" rx="2" ry="2" />
<text  x="699.04" y="575.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (5 samples, 0.09%)</title><rect x="1040.8" y="613" width="1.1" height="15.0" fill="rgb(244,159,37)" rx="2" ry="2" />
<text  x="1043.82" y="623.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="134.3" y="533" width="0.2" height="15.0" fill="rgb(243,2,33)" rx="2" ry="2" />
<text  x="137.31" y="543.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="10.9" y="613" width="0.2" height="15.0" fill="rgb(229,29,39)" rx="2" ry="2" />
<text  x="13.88" y="623.5" ></text>
</g>
<g >
<title>unmap_page_range (30 samples, 0.56%)</title><rect x="1102.0" y="517" width="6.6" height="15.0" fill="rgb(252,209,33)" rx="2" ry="2" />
<text  x="1104.99" y="527.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.09%)</title><rect x="763.4" y="437" width="1.1" height="15.0" fill="rgb(218,207,32)" rx="2" ry="2" />
<text  x="766.37" y="447.5" ></text>
</g>
<g >
<title>rcu_needs_cpu (1 samples, 0.02%)</title><rect x="1184.1" y="533" width="0.2" height="15.0" fill="rgb(246,178,25)" rx="2" ry="2" />
<text  x="1187.06" y="543.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (32 samples, 0.60%)</title><rect x="637.7" y="549" width="7.1" height="15.0" fill="rgb(243,101,18)" rx="2" ry="2" />
<text  x="640.73" y="559.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (138 samples, 2.57%)</title><rect x="715.0" y="549" width="30.3" height="15.0" fill="rgb(220,41,21)" rx="2" ry="2" />
<text  x="717.96" y="559.5" >ri..</text>
</g>
<g >
<title>reader_loop (1 samples, 0.02%)</title><rect x="10.4" y="693" width="0.3" height="15.0" fill="rgb(231,82,20)" rx="2" ry="2" />
<text  x="13.44" y="703.5" ></text>
</g>
<g >
<title>CompareAndSwap (1 samples, 0.02%)</title><rect x="1051.4" y="725" width="0.2" height="15.0" fill="rgb(250,213,48)" rx="2" ry="2" />
<text  x="1054.38" y="735.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1105.3" y="421" width="0.2" height="15.0" fill="rgb(250,105,45)" rx="2" ry="2" />
<text  x="1108.29" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="29.4" y="613" width="0.2" height="15.0" fill="rgb(232,144,51)" rx="2" ry="2" />
<text  x="32.36" y="623.5" ></text>
</g>
<g >
<title>event_function (64 samples, 1.19%)</title><rect x="14.8" y="453" width="14.1" height="15.0" fill="rgb(243,119,50)" rx="2" ry="2" />
<text  x="17.84" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (2 samples, 0.04%)</title><rect x="1052.3" y="645" width="0.4" height="15.0" fill="rgb(210,120,35)" rx="2" ry="2" />
<text  x="1055.26" y="655.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (28 samples, 0.52%)</title><rect x="779.4" y="581" width="6.2" height="15.0" fill="rgb(225,36,11)" rx="2" ry="2" />
<text  x="782.43" y="591.5" ></text>
</g>
<g >
<title>do_iter_write (15 samples, 0.28%)</title><rect x="29.8" y="453" width="3.3" height="15.0" fill="rgb(231,179,15)" rx="2" ry="2" />
<text  x="32.80" y="463.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.02%)</title><rect x="136.5" y="645" width="0.2" height="15.0" fill="rgb(213,44,14)" rx="2" ry="2" />
<text  x="139.52" y="655.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="11.8" y="581" width="0.2" height="15.0" fill="rgb(222,103,19)" rx="2" ry="2" />
<text  x="14.76" y="591.5" ></text>
</g>
<g >
<title>ep_item_poll (1 samples, 0.02%)</title><rect x="1110.6" y="629" width="0.2" height="15.0" fill="rgb(244,145,8)" rx="2" ry="2" />
<text  x="1113.57" y="639.5" ></text>
</g>
<g >
<title>lind_exit (3 samples, 0.06%)</title><rect x="135.9" y="677" width="0.6" height="15.0" fill="rgb(224,110,12)" rx="2" ry="2" />
<text  x="138.85" y="687.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (3 samples, 0.06%)</title><rect x="1188.5" y="565" width="0.6" height="15.0" fill="rgb(222,125,12)" rx="2" ry="2" />
<text  x="1191.46" y="575.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (2 samples, 0.04%)</title><rect x="1055.8" y="709" width="0.4" height="15.0" fill="rgb(234,179,20)" rx="2" ry="2" />
<text  x="1058.78" y="719.5" ></text>
</g>
<g >
<title>NaClLogGetVerbosity (65 samples, 1.21%)</title><rect x="846.3" y="677" width="14.3" height="15.0" fill="rgb(249,150,28)" rx="2" ry="2" />
<text  x="849.32" y="687.5" ></text>
</g>
<g >
<title>__get_user_pages (2 samples, 0.04%)</title><rect x="1052.3" y="549" width="0.4" height="15.0" fill="rgb(221,199,0)" rx="2" ry="2" />
<text  x="1055.26" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (13 samples, 0.24%)</title><rect x="620.1" y="549" width="2.9" height="15.0" fill="rgb(226,174,17)" rx="2" ry="2" />
<text  x="623.13" y="559.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.02%)</title><rect x="135.4" y="469" width="0.2" height="15.0" fill="rgb(230,54,1)" rx="2" ry="2" />
<text  x="138.41" y="479.5" ></text>
</g>
<g >
<title>ext4_put_io_end_defer (1 samples, 0.02%)</title><rect x="1113.7" y="405" width="0.2" height="15.0" fill="rgb(211,218,51)" rx="2" ry="2" />
<text  x="1116.65" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.30%)</title><rect x="607.8" y="597" width="3.5" height="15.0" fill="rgb(244,93,37)" rx="2" ry="2" />
<text  x="610.81" y="607.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.07%)</title><rect x="791.5" y="533" width="0.9" height="15.0" fill="rgb(235,210,38)" rx="2" ry="2" />
<text  x="794.53" y="543.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (7 samples, 0.13%)</title><rect x="1091.2" y="725" width="1.5" height="15.0" fill="rgb(208,163,35)" rx="2" ry="2" />
<text  x="1094.21" y="735.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.04%)</title><rect x="792.0" y="485" width="0.4" height="15.0" fill="rgb(214,193,5)" rx="2" ry="2" />
<text  x="794.97" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (17 samples, 0.32%)</title><rect x="611.3" y="533" width="3.8" height="15.0" fill="rgb(220,55,22)" rx="2" ry="2" />
<text  x="614.33" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.02%)</title><rect x="1052.7" y="661" width="0.2" height="15.0" fill="rgb(234,21,26)" rx="2" ry="2" />
<text  x="1055.70" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="1052.3" y="677" width="0.4" height="15.0" fill="rgb(218,197,26)" rx="2" ry="2" />
<text  x="1055.26" y="687.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (2 samples, 0.04%)</title><rect x="560.3" y="565" width="0.4" height="15.0" fill="rgb(206,181,44)" rx="2" ry="2" />
<text  x="563.29" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (1 samples, 0.02%)</title><rect x="136.1" y="277" width="0.2" height="15.0" fill="rgb(212,220,23)" rx="2" ry="2" />
<text  x="139.07" y="287.5" ></text>
</g>
<g >
<title>exc_page_fault (3 samples, 0.06%)</title><rect x="134.5" y="645" width="0.7" height="15.0" fill="rgb(219,144,23)" rx="2" ry="2" />
<text  x="137.53" y="655.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 1.19%)</title><rect x="14.8" y="421" width="14.1" height="15.0" fill="rgb(210,39,45)" rx="2" ry="2" />
<text  x="17.84" y="431.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreePrint (2 samples, 0.04%)</title><rect x="900.4" y="629" width="0.5" height="15.0" fill="rgb(222,160,30)" rx="2" ry="2" />
<text  x="903.45" y="639.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.02%)</title><rect x="134.5" y="469" width="0.3" height="15.0" fill="rgb(239,86,38)" rx="2" ry="2" />
<text  x="137.53" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.09%)</title><rect x="789.6" y="485" width="1.1" height="15.0" fill="rgb(251,118,32)" rx="2" ry="2" />
<text  x="792.55" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.30%)</title><rect x="29.6" y="581" width="3.5" height="15.0" fill="rgb(212,45,24)" rx="2" ry="2" />
<text  x="32.58" y="591.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (29 samples, 0.54%)</title><rect x="1145.1" y="485" width="6.4" height="15.0" fill="rgb(228,96,41)" rx="2" ry="2" />
<text  x="1148.11" y="495.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (32 samples, 0.60%)</title><rect x="1033.6" y="597" width="7.0" height="15.0" fill="rgb(213,14,18)" rx="2" ry="2" />
<text  x="1036.56" y="607.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (43 samples, 0.80%)</title><rect x="545.1" y="517" width="9.5" height="15.0" fill="rgb(218,18,22)" rx="2" ry="2" />
<text  x="548.10" y="527.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (1 samples, 0.02%)</title><rect x="1093.0" y="261" width="0.2" height="15.0" fill="rgb(231,23,14)" rx="2" ry="2" />
<text  x="1095.97" y="271.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="136.1" y="261" width="0.2" height="15.0" fill="rgb(209,23,7)" rx="2" ry="2" />
<text  x="139.07" y="271.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (960 samples, 17.90%)</title><rect x="589.1" y="661" width="211.2" height="15.0" fill="rgb(244,41,44)" rx="2" ry="2" />
<text  x="592.11" y="671.5" >NaClHostDescWrite</text>
</g>
<g >
<title>NaClDescIoDescWrite (1 samples, 0.02%)</title><rect x="575.5" y="693" width="0.2" height="15.0" fill="rgb(250,44,5)" rx="2" ry="2" />
<text  x="578.47" y="703.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.02%)</title><rect x="136.7" y="229" width="0.3" height="15.0" fill="rgb(247,83,20)" rx="2" ry="2" />
<text  x="139.74" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (2 samples, 0.04%)</title><rect x="1144.7" y="469" width="0.4" height="15.0" fill="rgb(216,68,15)" rx="2" ry="2" />
<text  x="1147.67" y="479.5" ></text>
</g>
<g >
<title>__ioctl (80 samples, 1.49%)</title><rect x="11.5" y="645" width="17.6" height="15.0" fill="rgb(213,165,48)" rx="2" ry="2" />
<text  x="14.54" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1 samples, 0.02%)</title><rect x="1092.7" y="725" width="0.3" height="15.0" fill="rgb(235,223,39)" rx="2" ry="2" />
<text  x="1095.75" y="735.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="10.4" y="533" width="0.3" height="15.0" fill="rgb(236,46,23)" rx="2" ry="2" />
<text  x="13.44" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.02%)</title><rect x="125.1" y="533" width="0.2" height="15.0" fill="rgb(240,49,5)" rx="2" ry="2" />
<text  x="128.07" y="543.5" ></text>
</g>
<g >
<title>[unknown] (98 samples, 1.83%)</title><rect x="11.5" y="741" width="21.6" height="15.0" fill="rgb(241,139,51)" rx="2" ry="2" />
<text  x="14.54" y="751.5" >[..</text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="1043.0" y="565" width="0.2" height="15.0" fill="rgb(220,139,37)" rx="2" ry="2" />
<text  x="1046.02" y="575.5" ></text>
</g>
<g >
<title>get_typical_interval (9 samples, 0.17%)</title><rect x="1180.3" y="565" width="2.0" height="15.0" fill="rgb(211,65,32)" rx="2" ry="2" />
<text  x="1183.32" y="575.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (2 samples, 0.04%)</title><rect x="976.6" y="629" width="0.4" height="15.0" fill="rgb(219,173,9)" rx="2" ry="2" />
<text  x="979.57" y="639.5" ></text>
</g>
<g >
<title>alloc_pages_vma (34 samples, 0.63%)</title><rect x="1033.3" y="613" width="7.5" height="15.0" fill="rgb(210,10,6)" rx="2" ry="2" />
<text  x="1036.34" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (12 samples, 0.22%)</title><rect x="428.3" y="485" width="2.6" height="15.0" fill="rgb(233,60,38)" rx="2" ry="2" />
<text  x="431.27" y="495.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (7 samples, 0.13%)</title><rect x="1039.1" y="549" width="1.5" height="15.0" fill="rgb(208,110,35)" rx="2" ry="2" />
<text  x="1042.06" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.17%)</title><rect x="637.7" y="517" width="2.0" height="15.0" fill="rgb(239,24,37)" rx="2" ry="2" />
<text  x="640.73" y="527.5" ></text>
</g>
<g >
<title>std::fs::OpenOptions::open (1 samples, 0.02%)</title><rect x="1093.0" y="533" width="0.2" height="15.0" fill="rgb(245,61,11)" rx="2" ry="2" />
<text  x="1095.97" y="543.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (386 samples, 7.20%)</title><rect x="460.2" y="517" width="84.9" height="15.0" fill="rgb(229,141,42)" rx="2" ry="2" />
<text  x="463.17" y="527.5" >ringbuf::..</text>
</g>
<g >
<title>xas_create (1 samples, 0.02%)</title><rect x="31.1" y="277" width="0.2" height="15.0" fill="rgb(235,192,33)" rx="2" ry="2" />
<text  x="34.12" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.07%)</title><rect x="791.5" y="501" width="0.9" height="15.0" fill="rgb(248,111,18)" rx="2" ry="2" />
<text  x="794.53" y="511.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.02%)</title><rect x="1178.1" y="565" width="0.2" height="15.0" fill="rgb(219,156,1)" rx="2" ry="2" />
<text  x="1181.12" y="575.5" ></text>
</g>
<g >
<title>lind_write (1 samples, 0.02%)</title><rect x="800.3" y="661" width="0.3" height="15.0" fill="rgb(233,132,43)" rx="2" ry="2" />
<text  x="803.33" y="671.5" ></text>
</g>
<g >
<title>NaClLog (6 samples, 0.11%)</title><rect x="845.0" y="677" width="1.3" height="15.0" fill="rgb(214,209,36)" rx="2" ry="2" />
<text  x="848.00" y="687.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.09%)</title><rect x="789.6" y="501" width="1.1" height="15.0" fill="rgb(245,27,50)" rx="2" ry="2" />
<text  x="792.55" y="511.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="10.9" y="661" width="0.2" height="15.0" fill="rgb(221,81,8)" rx="2" ry="2" />
<text  x="13.88" y="671.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.32%)</title><rect x="785.6" y="533" width="3.7" height="15.0" fill="rgb(243,79,23)" rx="2" ry="2" />
<text  x="788.59" y="543.5" ></text>
</g>
<g >
<title>ext4_evict_inode (1 samples, 0.02%)</title><rect x="125.1" y="165" width="0.2" height="15.0" fill="rgb(239,83,0)" rx="2" ry="2" />
<text  x="128.07" y="175.5" ></text>
</g>
<g >
<title>tick_irq_enter (1 samples, 0.02%)</title><rect x="1154.1" y="517" width="0.3" height="15.0" fill="rgb(222,153,30)" rx="2" ry="2" />
<text  x="1157.14" y="527.5" ></text>
</g>
<g >
<title>account_process_tick (3 samples, 0.06%)</title><rect x="1147.8" y="405" width="0.6" height="15.0" fill="rgb(235,196,33)" rx="2" ry="2" />
<text  x="1150.75" y="415.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (1 samples, 0.02%)</title><rect x="1108.6" y="533" width="0.2" height="15.0" fill="rgb(249,183,48)" rx="2" ry="2" />
<text  x="1111.59" y="543.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (29 samples, 0.54%)</title><rect x="854.0" y="645" width="6.4" height="15.0" fill="rgb(232,195,19)" rx="2" ry="2" />
<text  x="857.02" y="655.5" ></text>
</g>
<g >
<title>pm_qos_read_value (1 samples, 0.02%)</title><rect x="1183.0" y="565" width="0.2" height="15.0" fill="rgb(245,217,39)" rx="2" ry="2" />
<text  x="1185.96" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="11.1" y="741" width="0.2" height="15.0" fill="rgb(244,148,24)" rx="2" ry="2" />
<text  x="14.10" y="751.5" ></text>
</g>
<g >
<title>ret_from_fork (8 samples, 0.15%)</title><rect x="1111.7" y="741" width="1.7" height="15.0" fill="rgb(248,115,42)" rx="2" ry="2" />
<text  x="1114.67" y="751.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="10.2" y="517" width="0.2" height="15.0" fill="rgb(224,143,6)" rx="2" ry="2" />
<text  x="13.22" y="527.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="1113.7" y="325" width="0.2" height="15.0" fill="rgb(254,66,3)" rx="2" ry="2" />
<text  x="1116.65" y="335.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeExtract (1 samples, 0.02%)</title><rect x="1053.4" y="725" width="0.2" height="15.0" fill="rgb(229,14,6)" rx="2" ry="2" />
<text  x="1056.36" y="735.5" ></text>
</g>
<g >
<title>switch_fpu_return (1 samples, 0.02%)</title><rect x="1111.5" y="677" width="0.2" height="15.0" fill="rgb(208,99,12)" rx="2" ry="2" />
<text  x="1114.45" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.02%)</title><rect x="1092.5" y="661" width="0.2" height="15.0" fill="rgb(234,100,36)" rx="2" ry="2" />
<text  x="1095.53" y="671.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="1108.8" y="453" width="0.2" height="15.0" fill="rgb(236,168,16)" rx="2" ry="2" />
<text  x="1111.81" y="463.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.02%)</title><rect x="1155.9" y="373" width="0.2" height="15.0" fill="rgb(230,201,23)" rx="2" ry="2" />
<text  x="1158.90" y="383.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.02%)</title><rect x="10.4" y="677" width="0.3" height="15.0" fill="rgb(221,59,31)" rx="2" ry="2" />
<text  x="13.44" y="687.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="696.0" y="549" width="0.3" height="15.0" fill="rgb(247,16,4)" rx="2" ry="2" />
<text  x="699.04" y="559.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (6 samples, 0.11%)</title><rect x="861.1" y="677" width="1.3" height="15.0" fill="rgb(217,48,38)" rx="2" ry="2" />
<text  x="864.06" y="687.5" ></text>
</g>
<g >
<title>menu_select (26 samples, 0.48%)</title><rect x="1178.6" y="581" width="5.7" height="15.0" fill="rgb(222,215,15)" rx="2" ry="2" />
<text  x="1181.56" y="591.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="29.1" y="613" width="0.3" height="15.0" fill="rgb(213,124,40)" rx="2" ry="2" />
<text  x="32.14" y="623.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeFactory (92 samples, 1.72%)</title><rect x="947.8" y="645" width="20.2" height="15.0" fill="rgb(229,40,37)" rx="2" ry="2" />
<text  x="950.75" y="655.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (25 samples, 0.47%)</title><rect x="854.9" y="629" width="5.5" height="15.0" fill="rgb(252,63,41)" rx="2" ry="2" />
<text  x="857.90" y="639.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (168 samples, 3.13%)</title><rect x="659.1" y="549" width="36.9" height="15.0" fill="rgb(218,46,1)" rx="2" ry="2" />
<text  x="662.08" y="559.5" >&lt;st..</text>
</g>
<g >
<title>NaClIntervalRangeTreeRemoveInterval (1 samples, 0.02%)</title><rect x="561.2" y="661" width="0.2" height="15.0" fill="rgb(230,31,19)" rx="2" ry="2" />
<text  x="564.17" y="671.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="1187.6" y="581" width="0.2" height="15.0" fill="rgb(224,34,46)" rx="2" ry="2" />
<text  x="1190.58" y="591.5" ></text>
</g>
<g >
<title>kthread_data (1 samples, 0.02%)</title><rect x="1113.2" y="677" width="0.2" height="15.0" fill="rgb(236,177,11)" rx="2" ry="2" />
<text  x="1116.21" y="687.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 1.49%)</title><rect x="11.5" y="661" width="17.6" height="15.0" fill="rgb(224,135,16)" rx="2" ry="2" />
<text  x="14.54" y="671.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (1 samples, 0.02%)</title><rect x="588.9" y="661" width="0.2" height="15.0" fill="rgb(205,217,15)" rx="2" ry="2" />
<text  x="591.89" y="671.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.02%)</title><rect x="11.1" y="645" width="0.2" height="15.0" fill="rgb(230,27,9)" rx="2" ry="2" />
<text  x="14.10" y="655.5" ></text>
</g>
<g >
<title>queue_work_on (1 samples, 0.02%)</title><rect x="1113.7" y="373" width="0.2" height="15.0" fill="rgb(222,47,36)" rx="2" ry="2" />
<text  x="1116.65" y="383.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="30.0" y="133" width="0.2" height="15.0" fill="rgb(217,69,33)" rx="2" ry="2" />
<text  x="33.02" y="143.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open (1 samples, 0.02%)</title><rect x="1093.0" y="501" width="0.2" height="15.0" fill="rgb(244,199,19)" rx="2" ry="2" />
<text  x="1095.97" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="136.3" y="229" width="0.2" height="15.0" fill="rgb(227,174,42)" rx="2" ry="2" />
<text  x="139.29" y="239.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (43 samples, 0.80%)</title><rect x="645.4" y="533" width="9.5" height="15.0" fill="rgb(245,216,0)" rx="2" ry="2" />
<text  x="648.44" y="543.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="136.7" y="341" width="0.3" height="15.0" fill="rgb(224,139,54)" rx="2" ry="2" />
<text  x="139.74" y="351.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.04%)</title><rect x="1185.8" y="613" width="0.5" height="15.0" fill="rgb(252,118,35)" rx="2" ry="2" />
<text  x="1188.82" y="623.5" ></text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.04%)</title><rect x="645.0" y="517" width="0.4" height="15.0" fill="rgb(230,196,50)" rx="2" ry="2" />
<text  x="648.00" y="527.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="10.2" y="613" width="0.2" height="15.0" fill="rgb(215,87,42)" rx="2" ry="2" />
<text  x="13.22" y="623.5" ></text>
</g>
<g >
<title>core::cmp::min (56 samples, 1.04%)</title><rect x="160.7" y="565" width="12.3" height="15.0" fill="rgb(231,72,31)" rx="2" ry="2" />
<text  x="163.72" y="575.5" ></text>
</g>
<g >
<title>CachedMapWritableText (2 samples, 0.04%)</title><rect x="126.0" y="645" width="0.4" height="15.0" fill="rgb(214,65,11)" rx="2" ry="2" />
<text  x="128.95" y="655.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="136.7" y="549" width="0.3" height="15.0" fill="rgb(241,176,44)" rx="2" ry="2" />
<text  x="139.74" y="559.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1140.5" y="581" width="0.2" height="15.0" fill="rgb(221,193,44)" rx="2" ry="2" />
<text  x="1143.49" y="591.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1 samples, 0.02%)</title><rect x="85.0" y="725" width="0.2" height="15.0" fill="rgb(236,183,32)" rx="2" ry="2" />
<text  x="88.03" y="735.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (36 samples, 0.67%)</title><rect x="1144.2" y="533" width="8.0" height="15.0" fill="rgb(241,17,42)" rx="2" ry="2" />
<text  x="1147.23" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="560.9" y="613" width="0.3" height="15.0" fill="rgb(252,71,41)" rx="2" ry="2" />
<text  x="563.95" y="623.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (49 samples, 0.91%)</title><rect x="801.9" y="661" width="10.8" height="15.0" fill="rgb(236,168,10)" rx="2" ry="2" />
<text  x="804.87" y="671.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="134.3" y="677" width="0.2" height="15.0" fill="rgb(251,160,35)" rx="2" ry="2" />
<text  x="137.31" y="687.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (1 samples, 0.02%)</title><rect x="1188.0" y="613" width="0.2" height="15.0" fill="rgb(224,212,37)" rx="2" ry="2" />
<text  x="1191.02" y="623.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.02%)</title><rect x="1110.6" y="677" width="0.2" height="15.0" fill="rgb(213,78,18)" rx="2" ry="2" />
<text  x="1113.57" y="687.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (26 samples, 0.48%)</title><rect x="779.9" y="565" width="5.7" height="15.0" fill="rgb(221,35,20)" rx="2" ry="2" />
<text  x="782.87" y="575.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="126.2" y="485" width="0.2" height="15.0" fill="rgb(219,170,23)" rx="2" ry="2" />
<text  x="129.17" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1111.9" y="613" width="0.2" height="15.0" fill="rgb(246,161,24)" rx="2" ry="2" />
<text  x="1114.89" y="623.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 1.49%)</title><rect x="11.5" y="677" width="17.6" height="15.0" fill="rgb(247,207,35)" rx="2" ry="2" />
<text  x="14.54" y="687.5" ></text>
</g>
<g >
<title>start_kernel (222 samples, 4.14%)</title><rect x="1141.2" y="693" width="48.8" height="15.0" fill="rgb(252,178,26)" rx="2" ry="2" />
<text  x="1144.15" y="703.5" >star..</text>
</g>
<g >
<title>perf_event__prepare_comm (1 samples, 0.02%)</title><rect x="29.4" y="677" width="0.2" height="15.0" fill="rgb(208,5,44)" rx="2" ry="2" />
<text  x="32.36" y="687.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.02%)</title><rect x="125.1" y="677" width="0.2" height="15.0" fill="rgb(216,228,25)" rx="2" ry="2" />
<text  x="128.07" y="687.5" ></text>
</g>
<g >
<title>cpuidle_enter (122 samples, 2.27%)</title><rect x="1113.4" y="661" width="26.9" height="15.0" fill="rgb(225,84,28)" rx="2" ry="2" />
<text  x="1116.43" y="671.5" >c..</text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.02%)</title><rect x="1052.7" y="629" width="0.2" height="15.0" fill="rgb(231,16,7)" rx="2" ry="2" />
<text  x="1055.70" y="639.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (4 samples, 0.07%)</title><rect x="1103.3" y="469" width="0.9" height="15.0" fill="rgb(210,105,37)" rx="2" ry="2" />
<text  x="1106.31" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="10.2" y="549" width="0.2" height="15.0" fill="rgb(208,164,48)" rx="2" ry="2" />
<text  x="13.22" y="559.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (56 samples, 1.04%)</title><rect x="63.9" y="725" width="12.3" height="15.0" fill="rgb(222,8,54)" rx="2" ry="2" />
<text  x="66.91" y="735.5" ></text>
</g>
<g >
<title>blk_done_softirq (2 samples, 0.04%)</title><rect x="1113.4" y="533" width="0.5" height="15.0" fill="rgb(224,85,3)" rx="2" ry="2" />
<text  x="1116.43" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (8 samples, 0.15%)</title><rect x="702.2" y="517" width="1.8" height="15.0" fill="rgb(241,196,30)" rx="2" ry="2" />
<text  x="705.20" y="527.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (65 samples, 1.21%)</title><rect x="1144.0" y="565" width="14.3" height="15.0" fill="rgb(234,197,25)" rx="2" ry="2" />
<text  x="1147.01" y="575.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (4 samples, 0.07%)</title><rect x="126.4" y="661" width="0.9" height="15.0" fill="rgb(218,206,15)" rx="2" ry="2" />
<text  x="129.39" y="671.5" ></text>
</g>
<g >
<title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (1 samples, 0.02%)</title><rect x="136.1" y="133" width="0.2" height="15.0" fill="rgb(246,144,53)" rx="2" ry="2" />
<text  x="139.07" y="143.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1047.9" y="597" width="0.2" height="15.0" fill="rgb(229,115,21)" rx="2" ry="2" />
<text  x="1050.86" y="607.5" ></text>
</g>
<g >
<title>process_vm_writev (2 samples, 0.04%)</title><rect x="1052.3" y="693" width="0.4" height="15.0" fill="rgb(220,212,45)" rx="2" ry="2" />
<text  x="1055.26" y="703.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="1052.7" y="517" width="0.2" height="15.0" fill="rgb(238,41,40)" rx="2" ry="2" />
<text  x="1055.70" y="527.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="10.2" y="533" width="0.2" height="15.0" fill="rgb(244,163,17)" rx="2" ry="2" />
<text  x="13.22" y="543.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (715 samples, 13.33%)</title><rect x="403.0" y="549" width="157.3" height="15.0" fill="rgb(219,175,1)" rx="2" ry="2" />
<text  x="405.97" y="559.5" >ringbuf::consumer::C..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (12 samples, 0.22%)</title><rect x="78.4" y="661" width="2.7" height="15.0" fill="rgb(235,52,10)" rx="2" ry="2" />
<text  x="81.43" y="671.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.04%)</title><rect x="1113.4" y="565" width="0.5" height="15.0" fill="rgb(247,142,20)" rx="2" ry="2" />
<text  x="1116.43" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (35 samples, 0.65%)</title><rect x="792.4" y="581" width="7.7" height="15.0" fill="rgb(229,196,53)" rx="2" ry="2" />
<text  x="795.41" y="591.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="919.8" y="629" width="0.2" height="15.0" fill="rgb(214,85,25)" rx="2" ry="2" />
<text  x="922.81" y="639.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.02%)</title><rect x="1093.2" y="389" width="0.2" height="15.0" fill="rgb(225,1,34)" rx="2" ry="2" />
<text  x="1096.19" y="399.5" ></text>
</g>
<g >
<title>mmput (30 samples, 0.56%)</title><rect x="1102.0" y="581" width="6.6" height="15.0" fill="rgb(249,207,33)" rx="2" ry="2" />
<text  x="1104.99" y="591.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.02%)</title><rect x="1052.7" y="485" width="0.2" height="15.0" fill="rgb(248,87,37)" rx="2" ry="2" />
<text  x="1055.70" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (2 samples, 0.04%)</title><rect x="560.3" y="549" width="0.4" height="15.0" fill="rgb(239,21,19)" rx="2" ry="2" />
<text  x="563.29" y="559.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="126.0" y="485" width="0.2" height="15.0" fill="rgb(249,117,16)" rx="2" ry="2" />
<text  x="128.95" y="495.5" ></text>
</g>
<g >
<title>all (5,363 samples, 100%)</title><rect x="10.0" y="773" width="1180.0" height="15.0" fill="rgb(238,186,52)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.02%)</title><rect x="10.4" y="661" width="0.3" height="15.0" fill="rgb(250,178,40)" rx="2" ry="2" />
<text  x="13.44" y="671.5" ></text>
</g>
<g >
<title>scheduler_tick (9 samples, 0.17%)</title><rect x="1149.3" y="405" width="2.0" height="15.0" fill="rgb(234,61,19)" rx="2" ry="2" />
<text  x="1152.30" y="415.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.02%)</title><rect x="1185.2" y="565" width="0.2" height="15.0" fill="rgb(219,74,22)" rx="2" ry="2" />
<text  x="1188.16" y="575.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (33 samples, 0.62%)</title><rect x="637.5" y="581" width="7.3" height="15.0" fill="rgb(242,30,41)" rx="2" ry="2" />
<text  x="640.51" y="591.5" ></text>
</g>
<g >
<title>NaClMutexLock (1 samples, 0.02%)</title><rect x="1055.1" y="725" width="0.2" height="15.0" fill="rgb(215,32,48)" rx="2" ry="2" />
<text  x="1058.12" y="735.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.02%)</title><rect x="1093.2" y="629" width="0.2" height="15.0" fill="rgb(236,18,32)" rx="2" ry="2" />
<text  x="1096.19" y="639.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.04%)</title><rect x="757.9" y="485" width="0.4" height="15.0" fill="rgb(229,221,31)" rx="2" ry="2" />
<text  x="760.87" y="495.5" ></text>
</g>
<g >
<title>allocate_slab (1 samples, 0.02%)</title><rect x="30.0" y="197" width="0.2" height="15.0" fill="rgb(241,201,9)" rx="2" ry="2" />
<text  x="33.02" y="207.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeFactory (3 samples, 0.06%)</title><rect x="969.1" y="661" width="0.7" height="15.0" fill="rgb(247,69,17)" rx="2" ry="2" />
<text  x="972.09" y="671.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.04%)</title><rect x="126.0" y="517" width="0.4" height="15.0" fill="rgb(235,211,50)" rx="2" ry="2" />
<text  x="128.95" y="527.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.02%)</title><rect x="11.1" y="565" width="0.2" height="15.0" fill="rgb(248,127,30)" rx="2" ry="2" />
<text  x="14.10" y="575.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::sys_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::exit_syscall (3 samples, 0.06%)</title><rect x="135.9" y="629" width="0.6" height="15.0" fill="rgb(209,192,23)" rx="2" ry="2" />
<text  x="138.85" y="639.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (27 samples, 0.50%)</title><rect x="977.0" y="661" width="6.0" height="15.0" fill="rgb(232,79,40)" rx="2" ry="2" />
<text  x="980.01" y="671.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.90%)</title><rect x="627.0" y="565" width="10.5" height="15.0" fill="rgb(238,132,26)" rx="2" ry="2" />
<text  x="629.95" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.30%)</title><rect x="607.8" y="613" width="3.5" height="15.0" fill="rgb(248,74,36)" rx="2" ry="2" />
<text  x="610.81" y="623.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (3 samples, 0.06%)</title><rect x="859.7" y="613" width="0.7" height="15.0" fill="rgb(252,181,32)" rx="2" ry="2" />
<text  x="862.74" y="623.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="1151.7" y="469" width="0.2" height="15.0" fill="rgb(223,45,11)" rx="2" ry="2" />
<text  x="1154.72" y="479.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1146.9" y="421" width="0.2" height="15.0" fill="rgb(244,131,24)" rx="2" ry="2" />
<text  x="1149.87" y="431.5" ></text>
</g>
<g >
<title>lind_write (944 samples, 17.60%)</title><rect x="592.6" y="645" width="207.7" height="15.0" fill="rgb(232,206,32)" rx="2" ry="2" />
<text  x="595.63" y="655.5" >lind_write</text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="173.0" y="549" width="0.3" height="15.0" fill="rgb(229,179,44)" rx="2" ry="2" />
<text  x="176.04" y="559.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreePrint (3 samples, 0.06%)</title><rect x="968.4" y="645" width="0.7" height="15.0" fill="rgb(226,40,39)" rx="2" ry="2" />
<text  x="971.43" y="655.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.02%)</title><rect x="1052.7" y="437" width="0.2" height="15.0" fill="rgb(246,5,34)" rx="2" ry="2" />
<text  x="1055.70" y="447.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (29 samples, 0.54%)</title><rect x="830.0" y="613" width="6.4" height="15.0" fill="rgb(212,160,49)" rx="2" ry="2" />
<text  x="833.04" y="623.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (23 samples, 0.43%)</title><rect x="785.6" y="565" width="5.1" height="15.0" fill="rgb(230,25,2)" rx="2" ry="2" />
<text  x="788.59" y="575.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.02%)</title><rect x="1154.1" y="501" width="0.3" height="15.0" fill="rgb(205,128,9)" rx="2" ry="2" />
<text  x="1157.14" y="511.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.02%)</title><rect x="1092.3" y="709" width="0.2" height="15.0" fill="rgb(222,56,40)" rx="2" ry="2" />
<text  x="1095.31" y="719.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (2 samples, 0.04%)</title><rect x="30.9" y="309" width="0.4" height="15.0" fill="rgb(213,176,27)" rx="2" ry="2" />
<text  x="33.90" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="855.8" y="613" width="0.4" height="15.0" fill="rgb(228,146,14)" rx="2" ry="2" />
<text  x="858.78" y="623.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="1154.6" y="469" width="0.2" height="15.0" fill="rgb(219,150,15)" rx="2" ry="2" />
<text  x="1157.58" y="479.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (222 samples, 4.14%)</title><rect x="1141.2" y="725" width="48.8" height="15.0" fill="rgb(222,225,3)" rx="2" ry="2" />
<text  x="1144.15" y="735.5" >x86_..</text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.04%)</title><rect x="29.8" y="293" width="0.4" height="15.0" fill="rgb(245,154,51)" rx="2" ry="2" />
<text  x="32.80" y="303.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.09%)</title><rect x="789.6" y="517" width="1.1" height="15.0" fill="rgb(208,20,35)" rx="2" ry="2" />
<text  x="792.55" y="527.5" ></text>
</g>
<g >
<title>__run_hrtimer (28 samples, 0.52%)</title><rect x="1145.1" y="469" width="6.2" height="15.0" fill="rgb(211,2,13)" rx="2" ry="2" />
<text  x="1148.11" y="479.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.04%)</title><rect x="792.0" y="469" width="0.4" height="15.0" fill="rgb(239,162,53)" rx="2" ry="2" />
<text  x="794.97" y="479.5" ></text>
</g>
<g >
<title>NaClDescRef (2 samples, 0.04%)</title><rect x="36.6" y="725" width="0.5" height="15.0" fill="rgb(254,227,51)" rx="2" ry="2" />
<text  x="39.62" y="735.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="32.9" y="293" width="0.2" height="15.0" fill="rgb(242,11,7)" rx="2" ry="2" />
<text  x="35.88" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (10 samples, 0.19%)</title><rect x="762.9" y="469" width="2.2" height="15.0" fill="rgb(206,222,38)" rx="2" ry="2" />
<text  x="765.93" y="479.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (1 samples, 0.02%)</title><rect x="125.1" y="309" width="0.2" height="15.0" fill="rgb(217,28,29)" rx="2" ry="2" />
<text  x="128.07" y="319.5" ></text>
</g>
<g >
<title>wb_workfn (2 samples, 0.04%)</title><rect x="1112.6" y="677" width="0.4" height="15.0" fill="rgb(252,103,8)" rx="2" ry="2" />
<text  x="1115.55" y="687.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="1046.5" y="597" width="0.3" height="15.0" fill="rgb(236,96,35)" rx="2" ry="2" />
<text  x="1049.54" y="607.5" ></text>
</g>
<g >
<title>smp_call_function_many_cond (1 samples, 0.02%)</title><rect x="135.4" y="405" width="0.2" height="15.0" fill="rgb(205,111,5)" rx="2" ry="2" />
<text  x="138.41" y="415.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (2 samples, 0.04%)</title><rect x="1055.8" y="725" width="0.4" height="15.0" fill="rgb(245,209,42)" rx="2" ry="2" />
<text  x="1058.78" y="735.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.32%)</title><rect x="761.4" y="517" width="3.7" height="15.0" fill="rgb(206,181,38)" rx="2" ry="2" />
<text  x="764.39" y="527.5" ></text>
</g>
<g >
<title>NaClAvlTreeBalanceRight (19 samples, 0.35%)</title><rect x="881.7" y="597" width="4.2" height="15.0" fill="rgb(243,79,0)" rx="2" ry="2" />
<text  x="884.74" y="607.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="136.7" y="117" width="0.3" height="15.0" fill="rgb(237,219,5)" rx="2" ry="2" />
<text  x="139.74" y="127.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="821.9" y="645" width="0.2" height="15.0" fill="rgb(237,129,32)" rx="2" ry="2" />
<text  x="824.90" y="655.5" ></text>
</g>
<g >
<title>NaClDescIoDescDtor (1 samples, 0.02%)</title><rect x="136.7" y="613" width="0.3" height="15.0" fill="rgb(227,220,13)" rx="2" ry="2" />
<text  x="139.74" y="623.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (32 samples, 0.60%)</title><rect x="1102.0" y="709" width="7.0" height="15.0" fill="rgb(230,177,44)" rx="2" ry="2" />
<text  x="1104.99" y="719.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (2 samples, 0.04%)</title><rect x="792.0" y="437" width="0.4" height="15.0" fill="rgb(210,103,22)" rx="2" ry="2" />
<text  x="794.97" y="447.5" ></text>
</g>
<g >
<title>get_page_from_freelist (30 samples, 0.56%)</title><rect x="1034.0" y="581" width="6.6" height="15.0" fill="rgb(205,60,14)" rx="2" ry="2" />
<text  x="1037.00" y="591.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1 samples, 0.02%)</title><rect x="115.2" y="709" width="0.2" height="15.0" fill="rgb(231,187,40)" rx="2" ry="2" />
<text  x="118.17" y="719.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="63.5" y="693" width="0.2" height="15.0" fill="rgb(227,143,0)" rx="2" ry="2" />
<text  x="66.47" y="703.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="1188.5" y="533" width="0.2" height="15.0" fill="rgb(222,121,28)" rx="2" ry="2" />
<text  x="1191.46" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (28 samples, 0.52%)</title><rect x="814.6" y="645" width="6.2" height="15.0" fill="rgb(212,15,47)" rx="2" ry="2" />
<text  x="817.64" y="655.5" ></text>
</g>
<g >
<title>scsi_end_request (2 samples, 0.04%)</title><rect x="1113.4" y="469" width="0.5" height="15.0" fill="rgb(246,176,1)" rx="2" ry="2" />
<text  x="1116.43" y="479.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.06%)</title><rect x="134.5" y="629" width="0.7" height="15.0" fill="rgb(207,220,52)" rx="2" ry="2" />
<text  x="137.53" y="639.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (2 samples, 0.04%)</title><rect x="136.5" y="677" width="0.5" height="15.0" fill="rgb(229,207,35)" rx="2" ry="2" />
<text  x="139.52" y="687.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.32%)</title><rect x="785.6" y="517" width="3.7" height="15.0" fill="rgb(218,81,10)" rx="2" ry="2" />
<text  x="788.59" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (32 samples, 0.60%)</title><rect x="1102.0" y="725" width="7.0" height="15.0" fill="rgb(216,158,34)" rx="2" ry="2" />
<text  x="1104.99" y="735.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.09%)</title><rect x="574.4" y="677" width="1.1" height="15.0" fill="rgb(234,220,54)" rx="2" ry="2" />
<text  x="577.37" y="687.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.02%)</title><rect x="812.9" y="677" width="0.2" height="15.0" fill="rgb(230,158,47)" rx="2" ry="2" />
<text  x="815.88" y="687.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="1052.5" y="501" width="0.2" height="15.0" fill="rgb(235,194,6)" rx="2" ry="2" />
<text  x="1055.48" y="511.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (14 samples, 0.26%)</title><rect x="758.3" y="485" width="3.1" height="15.0" fill="rgb(246,141,49)" rx="2" ry="2" />
<text  x="761.31" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (1 samples, 0.02%)</title><rect x="136.7" y="453" width="0.3" height="15.0" fill="rgb(212,189,48)" rx="2" ry="2" />
<text  x="139.74" y="463.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (1,929 samples, 35.97%)</title><rect x="137.0" y="709" width="424.4" height="15.0" fill="rgb(243,131,21)" rx="2" ry="2" />
<text  x="139.96" y="719.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (1 samples, 0.02%)</title><rect x="136.1" y="181" width="0.2" height="15.0" fill="rgb(214,196,8)" rx="2" ry="2" />
<text  x="139.07" y="191.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (2 samples, 0.04%)</title><rect x="926.2" y="629" width="0.4" height="15.0" fill="rgb(241,85,46)" rx="2" ry="2" />
<text  x="929.19" y="639.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.06%)</title><rect x="1141.8" y="581" width="0.7" height="15.0" fill="rgb(225,199,28)" rx="2" ry="2" />
<text  x="1144.81" y="591.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.02%)</title><rect x="30.0" y="277" width="0.2" height="15.0" fill="rgb(210,4,42)" rx="2" ry="2" />
<text  x="33.02" y="287.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (19 samples, 0.35%)</title><rect x="922.0" y="629" width="4.2" height="15.0" fill="rgb(248,135,6)" rx="2" ry="2" />
<text  x="925.01" y="639.5" ></text>
</g>
<g >
<title>NaClSysWrite (2 samples, 0.04%)</title><rect x="41.7" y="725" width="0.4" height="15.0" fill="rgb(238,59,22)" rx="2" ry="2" />
<text  x="44.68" y="735.5" ></text>
</g>
<g >
<title>perf_event_task_tick (6 samples, 0.11%)</title><rect x="1149.7" y="389" width="1.4" height="15.0" fill="rgb(251,77,15)" rx="2" ry="2" />
<text  x="1152.74" y="399.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (2 samples, 0.04%)</title><rect x="136.1" y="517" width="0.4" height="15.0" fill="rgb(253,184,40)" rx="2" ry="2" />
<text  x="139.07" y="527.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (15 samples, 0.28%)</title><rect x="72.9" y="709" width="3.3" height="15.0" fill="rgb(214,126,54)" rx="2" ry="2" />
<text  x="75.93" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (28 samples, 0.52%)</title><rect x="631.4" y="517" width="6.1" height="15.0" fill="rgb(228,224,5)" rx="2" ry="2" />
<text  x="634.35" y="527.5" ></text>
</g>
<g >
<title>lind_close (1 samples, 0.02%)</title><rect x="136.7" y="581" width="0.3" height="15.0" fill="rgb(246,10,49)" rx="2" ry="2" />
<text  x="139.74" y="591.5" ></text>
</g>
<g >
<title>run_rebalance_domains (14 samples, 0.26%)</title><rect x="1154.8" y="469" width="3.1" height="15.0" fill="rgb(226,206,53)" rx="2" ry="2" />
<text  x="1157.80" y="479.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.04%)</title><rect x="126.0" y="533" width="0.4" height="15.0" fill="rgb(232,136,5)" rx="2" ry="2" />
<text  x="128.95" y="543.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (2 samples, 0.04%)</title><rect x="136.1" y="549" width="0.4" height="15.0" fill="rgb(213,44,43)" rx="2" ry="2" />
<text  x="139.07" y="559.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.02%)</title><rect x="125.1" y="661" width="0.2" height="15.0" fill="rgb(218,92,30)" rx="2" ry="2" />
<text  x="128.07" y="671.5" ></text>
</g>
<g >
<title>dispatcher (906 samples, 16.89%)</title><rect x="600.8" y="629" width="199.3" height="15.0" fill="rgb(236,36,36)" rx="2" ry="2" />
<text  x="603.77" y="639.5" >dispatcher</text>
</g>
<g >
<title>NaClSwitchToApp (2 samples, 0.04%)</title><rect x="124.6" y="709" width="0.5" height="15.0" fill="rgb(243,162,27)" rx="2" ry="2" />
<text  x="127.63" y="719.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (2 samples, 0.04%)</title><rect x="42.6" y="725" width="0.4" height="15.0" fill="rgb(253,67,5)" rx="2" ry="2" />
<text  x="45.56" y="735.5" ></text>
</g>
<g >
<title>scsi_io_completion (2 samples, 0.04%)</title><rect x="1113.4" y="485" width="0.5" height="15.0" fill="rgb(237,133,35)" rx="2" ry="2" />
<text  x="1116.43" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (29 samples, 0.54%)</title><rect x="751.0" y="485" width="6.4" height="15.0" fill="rgb(215,100,42)" rx="2" ry="2" />
<text  x="754.05" y="495.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (4 samples, 0.07%)</title><rect x="1043.2" y="565" width="0.9" height="15.0" fill="rgb(245,40,6)" rx="2" ry="2" />
<text  x="1046.24" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (5 samples, 0.09%)</title><rect x="763.4" y="453" width="1.1" height="15.0" fill="rgb(233,153,42)" rx="2" ry="2" />
<text  x="766.37" y="463.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (1 samples, 0.02%)</title><rect x="42.1" y="725" width="0.2" height="15.0" fill="rgb(226,189,29)" rx="2" ry="2" />
<text  x="45.12" y="735.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="134.5" y="501" width="0.3" height="15.0" fill="rgb(229,50,42)" rx="2" ry="2" />
<text  x="137.53" y="511.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.0 (1 samples, 0.02%)</title><rect x="32.9" y="245" width="0.2" height="15.0" fill="rgb(251,159,12)" rx="2" ry="2" />
<text  x="35.88" y="255.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.02%)</title><rect x="135.4" y="661" width="0.2" height="15.0" fill="rgb(243,124,51)" rx="2" ry="2" />
<text  x="138.41" y="671.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1033.1" y="613" width="0.2" height="15.0" fill="rgb(220,26,2)" rx="2" ry="2" />
<text  x="1036.12" y="623.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.02%)</title><rect x="136.7" y="181" width="0.3" height="15.0" fill="rgb(244,182,11)" rx="2" ry="2" />
<text  x="139.74" y="191.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (1 samples, 0.02%)</title><rect x="135.4" y="645" width="0.2" height="15.0" fill="rgb(241,168,12)" rx="2" ry="2" />
<text  x="138.41" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (2 samples, 0.04%)</title><rect x="1058.9" y="725" width="0.4" height="15.0" fill="rgb(234,42,9)" rx="2" ry="2" />
<text  x="1061.86" y="735.5" ></text>
</g>
<g >
<title>vfs_iter_write (15 samples, 0.28%)</title><rect x="29.8" y="469" width="3.3" height="15.0" fill="rgb(214,153,47)" rx="2" ry="2" />
<text  x="32.80" y="479.5" ></text>
</g>
<g >
<title>NaClMutexLock (4 samples, 0.07%)</title><rect x="39.7" y="725" width="0.9" height="15.0" fill="rgb(217,13,4)" rx="2" ry="2" />
<text  x="42.70" y="735.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (85 samples, 1.58%)</title><rect x="696.3" y="549" width="18.7" height="15.0" fill="rgb(206,200,37)" rx="2" ry="2" />
<text  x="699.26" y="559.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeRemoveVal (4 samples, 0.07%)</title><rect x="1054.2" y="725" width="0.9" height="15.0" fill="rgb(209,123,46)" rx="2" ry="2" />
<text  x="1057.24" y="735.5" ></text>
</g>
<g >
<title>fdarray__poll (1 samples, 0.02%)</title><rect x="29.1" y="693" width="0.3" height="15.0" fill="rgb(252,136,23)" rx="2" ry="2" />
<text  x="32.14" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.11%)</title><rect x="1110.4" y="741" width="1.3" height="15.0" fill="rgb(206,182,21)" rx="2" ry="2" />
<text  x="1113.35" y="751.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (968 samples, 18.05%)</title><rect x="587.6" y="677" width="213.0" height="15.0" fill="rgb(240,115,18)" rx="2" ry="2" />
<text  x="590.57" y="687.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (26 samples, 0.48%)</title><rect x="970.9" y="629" width="5.7" height="15.0" fill="rgb(230,128,53)" rx="2" ry="2" />
<text  x="973.85" y="639.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="1044.6" y="549" width="0.2" height="15.0" fill="rgb(208,218,21)" rx="2" ry="2" />
<text  x="1047.56" y="559.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (3 samples, 0.06%)</title><rect x="33.1" y="597" width="0.7" height="15.0" fill="rgb(226,164,50)" rx="2" ry="2" />
<text  x="36.10" y="607.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="1113.9" y="629" width="0.4" height="15.0" fill="rgb(207,186,2)" rx="2" ry="2" />
<text  x="1116.87" y="639.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::_close_helper (1 samples, 0.02%)</title><rect x="136.7" y="517" width="0.3" height="15.0" fill="rgb(206,129,40)" rx="2" ry="2" />
<text  x="139.74" y="527.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.02%)</title><rect x="1187.1" y="501" width="0.3" height="15.0" fill="rgb(209,1,46)" rx="2" ry="2" />
<text  x="1190.14" y="511.5" ></text>
</g>
<g >
<title>perf_swevent_start (1 samples, 0.02%)</title><rect x="1150.6" y="373" width="0.2" height="15.0" fill="rgb(229,204,20)" rx="2" ry="2" />
<text  x="1153.62" y="383.5" ></text>
</g>
<g >
<title>main (2 samples, 0.04%)</title><rect x="1093.0" y="709" width="0.4" height="15.0" fill="rgb(217,81,0)" rx="2" ry="2" />
<text  x="1095.97" y="719.5" ></text>
</g>
<g >
<title>NaClLog (1 samples, 0.02%)</title><rect x="39.0" y="725" width="0.3" height="15.0" fill="rgb(234,45,25)" rx="2" ry="2" />
<text  x="42.04" y="735.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 0.04%)</title><rect x="1055.8" y="629" width="0.4" height="15.0" fill="rgb(249,195,32)" rx="2" ry="2" />
<text  x="1058.78" y="639.5" ></text>
</g>
<g >
<title>ext4_do_flush_completed_IO.isra.0 (2 samples, 0.04%)</title><rect x="1111.9" y="661" width="0.4" height="15.0" fill="rgb(253,131,15)" rx="2" ry="2" />
<text  x="1114.89" y="671.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (4 samples, 0.07%)</title><rect x="658.2" y="549" width="0.9" height="15.0" fill="rgb(223,67,47)" rx="2" ry="2" />
<text  x="661.20" y="559.5" ></text>
</g>
<g >
<title>dispatcher (2 samples, 0.04%)</title><rect x="63.2" y="725" width="0.5" height="15.0" fill="rgb(232,210,15)" rx="2" ry="2" />
<text  x="66.25" y="735.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="786.5" y="485" width="0.2" height="15.0" fill="rgb(247,109,11)" rx="2" ry="2" />
<text  x="789.47" y="495.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="126.0" y="469" width="0.2" height="15.0" fill="rgb(241,36,50)" rx="2" ry="2" />
<text  x="128.95" y="479.5" ></text>
</g>
<g >
<title>follow_pud_mask.isra.0 (1 samples, 0.02%)</title><rect x="1052.3" y="517" width="0.2" height="15.0" fill="rgb(252,186,54)" rx="2" ry="2" />
<text  x="1055.26" y="527.5" ></text>
</g>
<g >
<title>__gconv_read_conf (1 samples, 0.02%)</title><rect x="10.7" y="613" width="0.2" height="15.0" fill="rgb(218,21,25)" rx="2" ry="2" />
<text  x="13.66" y="623.5" ></text>
</g>
<g >
<title>HandleStackContext (2 samples, 0.04%)</title><rect x="84.6" y="725" width="0.4" height="15.0" fill="rgb(249,69,10)" rx="2" ry="2" />
<text  x="87.59" y="735.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (1 samples, 0.02%)</title><rect x="125.1" y="133" width="0.2" height="15.0" fill="rgb(250,140,50)" rx="2" ry="2" />
<text  x="128.07" y="143.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (1 samples, 0.02%)</title><rect x="127.1" y="405" width="0.2" height="15.0" fill="rgb(210,127,21)" rx="2" ry="2" />
<text  x="130.05" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (82 samples, 1.53%)</title><rect x="1030.5" y="693" width="18.0" height="15.0" fill="rgb(205,13,53)" rx="2" ry="2" />
<text  x="1033.48" y="703.5" ></text>
</g>
<g >
<title>start_this_handle (1 samples, 0.02%)</title><rect x="33.1" y="485" width="0.2" height="15.0" fill="rgb(236,120,29)" rx="2" ry="2" />
<text  x="36.10" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (2 samples, 0.04%)</title><rect x="1184.9" y="581" width="0.5" height="15.0" fill="rgb(219,142,34)" rx="2" ry="2" />
<text  x="1187.94" y="591.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="33.5" y="517" width="0.3" height="15.0" fill="rgb(238,13,5)" rx="2" ry="2" />
<text  x="36.54" y="527.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (1 samples, 0.02%)</title><rect x="37.1" y="725" width="0.2" height="15.0" fill="rgb(250,161,15)" rx="2" ry="2" />
<text  x="40.06" y="735.5" ></text>
</g>
<g >
<title>update_cpu_capacity (1 samples, 0.02%)</title><rect x="1155.5" y="373" width="0.2" height="15.0" fill="rgb(213,123,50)" rx="2" ry="2" />
<text  x="1158.46" y="383.5" ></text>
</g>
<g >
<title>generic_perform_write (3 samples, 0.06%)</title><rect x="33.1" y="549" width="0.7" height="15.0" fill="rgb(247,160,0)" rx="2" ry="2" />
<text  x="36.10" y="559.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (12 samples, 0.22%)</title><rect x="78.4" y="693" width="2.7" height="15.0" fill="rgb(216,227,25)" rx="2" ry="2" />
<text  x="81.43" y="703.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.02%)</title><rect x="1113.7" y="245" width="0.2" height="15.0" fill="rgb(205,216,50)" rx="2" ry="2" />
<text  x="1116.65" y="255.5" ></text>
</g>
<g >
<title>NaClTextMapClearCacheIfNeeded (2 samples, 0.04%)</title><rect x="126.0" y="661" width="0.4" height="15.0" fill="rgb(252,188,20)" rx="2" ry="2" />
<text  x="128.95" y="671.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (2 samples, 0.04%)</title><rect x="136.5" y="709" width="0.5" height="15.0" fill="rgb(254,45,15)" rx="2" ry="2" />
<text  x="139.52" y="719.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="1048.7" y="661" width="0.3" height="15.0" fill="rgb(238,140,2)" rx="2" ry="2" />
<text  x="1051.74" y="671.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (88 samples, 1.64%)</title><rect x="1158.5" y="565" width="19.4" height="15.0" fill="rgb(230,106,45)" rx="2" ry="2" />
<text  x="1161.54" y="575.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeAddInterval (186 samples, 3.47%)</title><rect x="928.2" y="661" width="40.9" height="15.0" fill="rgb(233,139,44)" rx="2" ry="2" />
<text  x="931.17" y="671.5" >NaC..</text>
</g>
<g >
<title>swapper (368 samples, 6.86%)</title><rect x="1109.0" y="757" width="81.0" height="15.0" fill="rgb(217,114,24)" rx="2" ry="2" />
<text  x="1112.03" y="767.5" >swapper</text>
</g>
<g >
<title>process_one_work (5 samples, 0.09%)</title><rect x="1111.9" y="693" width="1.1" height="15.0" fill="rgb(234,154,8)" rx="2" ry="2" />
<text  x="1114.89" y="703.5" ></text>
</g>
<g >
<title>NaClAvlTreeExtract (1 samples, 0.02%)</title><rect x="872.3" y="629" width="0.2" height="15.0" fill="rgb(251,18,8)" rx="2" ry="2" />
<text  x="875.28" y="639.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (2 samples, 0.04%)</title><rect x="1032.7" y="629" width="0.4" height="15.0" fill="rgb(213,21,48)" rx="2" ry="2" />
<text  x="1035.68" y="639.5" ></text>
</g>
<g >
<title>shmem_alloc_page (1 samples, 0.02%)</title><rect x="1052.5" y="389" width="0.2" height="15.0" fill="rgb(206,173,17)" rx="2" ry="2" />
<text  x="1055.48" y="399.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="791.1" y="517" width="0.4" height="15.0" fill="rgb(237,44,21)" rx="2" ry="2" />
<text  x="794.09" y="527.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (122 samples, 2.27%)</title><rect x="1113.4" y="645" width="26.9" height="15.0" fill="rgb(221,98,40)" rx="2" ry="2" />
<text  x="1116.43" y="655.5" >c..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.32%)</title><rect x="611.3" y="549" width="3.8" height="15.0" fill="rgb(220,84,24)" rx="2" ry="2" />
<text  x="614.33" y="559.5" ></text>
</g>
<g >
<title>PageHuge (1 samples, 0.02%)</title><rect x="30.7" y="309" width="0.2" height="15.0" fill="rgb(226,58,51)" rx="2" ry="2" />
<text  x="33.68" y="319.5" ></text>
</g>
<g >
<title>dispatcher (3 samples, 0.06%)</title><rect x="135.9" y="661" width="0.6" height="15.0" fill="rgb(244,222,1)" rx="2" ry="2" />
<text  x="138.85" y="671.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (3 samples, 0.06%)</title><rect x="85.2" y="725" width="0.7" height="15.0" fill="rgb(254,90,4)" rx="2" ry="2" />
<text  x="88.25" y="735.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (69 samples, 1.29%)</title><rect x="750.2" y="565" width="15.1" height="15.0" fill="rgb(223,214,48)" rx="2" ry="2" />
<text  x="753.17" y="575.5" ></text>
</g>
<g >
<title>rebalance_domains (8 samples, 0.15%)</title><rect x="1154.8" y="453" width="1.8" height="15.0" fill="rgb(232,14,2)" rx="2" ry="2" />
<text  x="1157.80" y="463.5" ></text>
</g>
<g >
<title>NaClMutexLock (24 samples, 0.45%)</title><rect x="848.3" y="629" width="5.3" height="15.0" fill="rgb(246,89,21)" rx="2" ry="2" />
<text  x="851.30" y="639.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="1188.5" y="549" width="0.2" height="15.0" fill="rgb(215,220,8)" rx="2" ry="2" />
<text  x="1191.46" y="559.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (32 samples, 0.60%)</title><rect x="565.3" y="661" width="7.1" height="15.0" fill="rgb(225,91,28)" rx="2" ry="2" />
<text  x="568.35" y="671.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="28.9" y="597" width="0.2" height="15.0" fill="rgb(220,128,25)" rx="2" ry="2" />
<text  x="31.92" y="607.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeInit (29 samples, 0.54%)</title><rect x="894.1" y="629" width="6.3" height="15.0" fill="rgb(242,200,47)" rx="2" ry="2" />
<text  x="897.06" y="639.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (1 samples, 0.02%)</title><rect x="1108.6" y="581" width="0.2" height="15.0" fill="rgb(215,169,54)" rx="2" ry="2" />
<text  x="1111.59" y="591.5" ></text>
</g>
<g >
<title>__evlist__enable (80 samples, 1.49%)</title><rect x="11.5" y="693" width="17.6" height="15.0" fill="rgb(250,54,51)" rx="2" ry="2" />
<text  x="14.54" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (48 samples, 0.90%)</title><rect x="627.0" y="533" width="10.5" height="15.0" fill="rgb(230,13,16)" rx="2" ry="2" />
<text  x="629.95" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (7 samples, 0.13%)</title><rect x="1059.3" y="725" width="1.5" height="15.0" fill="rgb(232,172,25)" rx="2" ry="2" />
<text  x="1062.30" y="735.5" ></text>
</g>
<g >
<title>ext4_add_complete_io (1 samples, 0.02%)</title><rect x="1113.7" y="389" width="0.2" height="15.0" fill="rgb(211,23,25)" rx="2" ry="2" />
<text  x="1116.65" y="399.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (3 samples, 0.06%)</title><rect x="1110.8" y="661" width="0.7" height="15.0" fill="rgb(236,138,4)" rx="2" ry="2" />
<text  x="1113.79" y="671.5" ></text>
</g>
<g >
<title>NaClLogUnlock (1 samples, 0.02%)</title><rect x="860.6" y="677" width="0.2" height="15.0" fill="rgb(205,50,12)" rx="2" ry="2" />
<text  x="863.62" y="687.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (1,923 samples, 35.86%)</title><rect x="137.2" y="581" width="423.1" height="15.0" fill="rgb(227,180,40)" rx="2" ry="2" />
<text  x="140.18" y="591.5" >rustposix::interface::pipe::EmulatedPipe::read_from_pipe</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (21 samples, 0.39%)</title><rect x="822.1" y="645" width="4.6" height="15.0" fill="rgb(215,149,19)" rx="2" ry="2" />
<text  x="825.12" y="655.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1114.1" y="517" width="0.2" height="15.0" fill="rgb(243,210,33)" rx="2" ry="2" />
<text  x="1117.09" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (51 samples, 0.95%)</title><rect x="449.0" y="517" width="11.2" height="15.0" fill="rgb(226,174,31)" rx="2" ry="2" />
<text  x="451.95" y="527.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (2 samples, 0.04%)</title><rect x="1103.5" y="437" width="0.5" height="15.0" fill="rgb(237,50,32)" rx="2" ry="2" />
<text  x="1106.53" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="752.6" y="453" width="0.2" height="15.0" fill="rgb(217,176,47)" rx="2" ry="2" />
<text  x="755.59" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.02%)</title><rect x="1140.5" y="613" width="0.2" height="15.0" fill="rgb(216,205,48)" rx="2" ry="2" />
<text  x="1143.49" y="623.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1189.3" y="517" width="0.3" height="15.0" fill="rgb(237,185,41)" rx="2" ry="2" />
<text  x="1192.34" y="527.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (3 samples, 0.06%)</title><rect x="1052.3" y="725" width="0.6" height="15.0" fill="rgb(207,13,13)" rx="2" ry="2" />
<text  x="1055.26" y="735.5" ></text>
</g>
<g >
<title>do_shared_fault (1 samples, 0.02%)</title><rect x="1052.5" y="469" width="0.2" height="15.0" fill="rgb(213,113,36)" rx="2" ry="2" />
<text  x="1055.48" y="479.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (2 samples, 0.04%)</title><rect x="135.4" y="709" width="0.5" height="15.0" fill="rgb(248,12,27)" rx="2" ry="2" />
<text  x="138.41" y="719.5" ></text>
</g>
<g >
<title>NaClLogLock (32 samples, 0.60%)</title><rect x="846.5" y="661" width="7.1" height="15.0" fill="rgb(234,221,7)" rx="2" ry="2" />
<text  x="849.54" y="671.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect x="136.1" y="485" width="0.4" height="15.0" fill="rgb(243,2,0)" rx="2" ry="2" />
<text  x="139.07" y="495.5" ></text>
</g>
<g >
<title>_int_free (22 samples, 0.41%)</title><rect x="908.6" y="613" width="4.8" height="15.0" fill="rgb(231,47,19)" rx="2" ry="2" />
<text  x="911.59" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 1.49%)</title><rect x="11.5" y="629" width="17.6" height="15.0" fill="rgb(245,56,15)" rx="2" ry="2" />
<text  x="14.54" y="639.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1 samples, 0.02%)</title><rect x="87.4" y="725" width="0.3" height="15.0" fill="rgb(208,191,8)" rx="2" ry="2" />
<text  x="90.45" y="735.5" ></text>
</g>
<g >
<title>call_timer_fn (2 samples, 0.04%)</title><rect x="1157.9" y="437" width="0.4" height="15.0" fill="rgb(215,179,0)" rx="2" ry="2" />
<text  x="1160.88" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="29.1" y="645" width="0.3" height="15.0" fill="rgb(231,159,25)" rx="2" ry="2" />
<text  x="32.14" y="655.5" ></text>
</g>
<g >
<title>rustposix::interface::file::removefile (1 samples, 0.02%)</title><rect x="125.1" y="517" width="0.2" height="15.0" fill="rgb(219,85,17)" rx="2" ry="2" />
<text  x="128.07" y="527.5" ></text>
</g>
<g >
<title>get_signal (32 samples, 0.60%)</title><rect x="1102.0" y="645" width="7.0" height="15.0" fill="rgb(230,92,54)" rx="2" ry="2" />
<text  x="1104.99" y="655.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="1113.9" y="549" width="0.4" height="15.0" fill="rgb(254,116,27)" rx="2" ry="2" />
<text  x="1116.87" y="559.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.06%)</title><rect x="134.5" y="613" width="0.7" height="15.0" fill="rgb(220,224,36)" rx="2" ry="2" />
<text  x="137.53" y="623.5" ></text>
</g>
<g >
<title>bio_endio (1 samples, 0.02%)</title><rect x="1113.7" y="437" width="0.2" height="15.0" fill="rgb(211,196,50)" rx="2" ry="2" />
<text  x="1116.65" y="447.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (2 samples, 0.04%)</title><rect x="124.0" y="709" width="0.4" height="15.0" fill="rgb(248,65,3)" rx="2" ry="2" />
<text  x="126.97" y="719.5" ></text>
</g>
<g >
<title>NaClXMutexLock (29 samples, 0.54%)</title><rect x="913.6" y="661" width="6.4" height="15.0" fill="rgb(234,43,30)" rx="2" ry="2" />
<text  x="916.65" y="671.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (1 samples, 0.02%)</title><rect x="745.1" y="517" width="0.2" height="15.0" fill="rgb(253,122,37)" rx="2" ry="2" />
<text  x="748.11" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.06%)</title><rect x="764.5" y="453" width="0.6" height="15.0" fill="rgb(238,10,40)" rx="2" ry="2" />
<text  x="767.47" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.02%)</title><rect x="29.1" y="629" width="0.3" height="15.0" fill="rgb(205,60,42)" rx="2" ry="2" />
<text  x="32.14" y="639.5" ></text>
</g>
<g >
<title>blk_update_request (2 samples, 0.04%)</title><rect x="1113.4" y="453" width="0.5" height="15.0" fill="rgb(235,43,6)" rx="2" ry="2" />
<text  x="1116.43" y="463.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.02%)</title><rect x="1140.5" y="597" width="0.2" height="15.0" fill="rgb(222,186,37)" rx="2" ry="2" />
<text  x="1143.49" y="607.5" ></text>
</g>
<g >
<title>NaClVmIoHasEnded (1 samples, 0.02%)</title><rect x="561.2" y="677" width="0.2" height="15.0" fill="rgb(223,148,6)" rx="2" ry="2" />
<text  x="564.17" y="687.5" ></text>
</g>
<g >
<title>NaClLogTagNext_mu (1 samples, 0.02%)</title><rect x="39.5" y="725" width="0.2" height="15.0" fill="rgb(241,67,34)" rx="2" ry="2" />
<text  x="42.48" y="735.5" ></text>
</g>
<g >
<title>rcu_pending (1 samples, 0.02%)</title><rect x="1148.6" y="405" width="0.3" height="15.0" fill="rgb(253,93,44)" rx="2" ry="2" />
<text  x="1151.64" y="415.5" ></text>
</g>
<g >
<title>load_balance (7 samples, 0.13%)</title><rect x="1155.0" y="437" width="1.6" height="15.0" fill="rgb(242,59,46)" rx="2" ry="2" />
<text  x="1158.02" y="447.5" ></text>
</g>
<g >
<title>cap_vm_enough_memory (1 samples, 0.02%)</title><rect x="127.1" y="389" width="0.2" height="15.0" fill="rgb(210,63,44)" rx="2" ry="2" />
<text  x="130.05" y="399.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeInit (50 samples, 0.93%)</title><rect x="951.7" y="629" width="11.0" height="15.0" fill="rgb(254,201,15)" rx="2" ry="2" />
<text  x="954.71" y="639.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.07%)</title><rect x="439.5" y="485" width="0.9" height="15.0" fill="rgb(241,41,6)" rx="2" ry="2" />
<text  x="442.49" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.02%)</title><rect x="125.1" y="565" width="0.2" height="15.0" fill="rgb(250,73,47)" rx="2" ry="2" />
<text  x="128.07" y="575.5" ></text>
</g>
<g >
<title>alloc_pages_current (4 samples, 0.07%)</title><rect x="31.3" y="325" width="0.9" height="15.0" fill="rgb(237,117,20)" rx="2" ry="2" />
<text  x="34.34" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.06%)</title><rect x="31.6" y="293" width="0.6" height="15.0" fill="rgb(239,167,32)" rx="2" ry="2" />
<text  x="34.56" y="303.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.02%)</title><rect x="1048.7" y="693" width="0.3" height="15.0" fill="rgb(252,48,2)" rx="2" ry="2" />
<text  x="1051.74" y="703.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.02%)</title><rect x="134.8" y="549" width="0.2" height="15.0" fill="rgb(240,14,1)" rx="2" ry="2" />
<text  x="137.75" y="559.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.02%)</title><rect x="1113.7" y="341" width="0.2" height="15.0" fill="rgb(211,223,40)" rx="2" ry="2" />
<text  x="1116.65" y="351.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (2 samples, 0.04%)</title><rect x="1052.3" y="613" width="0.4" height="15.0" fill="rgb(242,10,27)" rx="2" ry="2" />
<text  x="1055.26" y="623.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="1111.5" y="709" width="0.2" height="15.0" fill="rgb(216,149,40)" rx="2" ry="2" />
<text  x="1114.45" y="719.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (9 samples, 0.17%)</title><rect x="637.7" y="501" width="2.0" height="15.0" fill="rgb(239,181,53)" rx="2" ry="2" />
<text  x="640.73" y="511.5" ></text>
</g>
<g >
<title>ext4_release_io_end (2 samples, 0.04%)</title><rect x="1111.9" y="645" width="0.4" height="15.0" fill="rgb(236,197,34)" rx="2" ry="2" />
<text  x="1114.89" y="655.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (1 samples, 0.02%)</title><rect x="1052.7" y="581" width="0.2" height="15.0" fill="rgb(218,14,9)" rx="2" ry="2" />
<text  x="1055.70" y="591.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="789.3" y="517" width="0.3" height="15.0" fill="rgb(245,47,52)" rx="2" ry="2" />
<text  x="792.33" y="527.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="33.1" y="517" width="0.2" height="15.0" fill="rgb(231,146,6)" rx="2" ry="2" />
<text  x="36.10" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 1.49%)</title><rect x="11.5" y="613" width="17.6" height="15.0" fill="rgb(241,180,16)" rx="2" ry="2" />
<text  x="14.54" y="623.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (32 samples, 0.60%)</title><rect x="127.3" y="629" width="7.0" height="15.0" fill="rgb(206,212,38)" rx="2" ry="2" />
<text  x="130.27" y="639.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.02%)</title><rect x="1113.0" y="645" width="0.2" height="15.0" fill="rgb(206,25,34)" rx="2" ry="2" />
<text  x="1115.99" y="655.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="125.1" y="597" width="0.2" height="15.0" fill="rgb(250,161,33)" rx="2" ry="2" />
<text  x="128.07" y="607.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.0 (1 samples, 0.02%)</title><rect x="544.9" y="373" width="0.2" height="15.0" fill="rgb(227,212,39)" rx="2" ry="2" />
<text  x="547.88" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (16 samples, 0.30%)</title><rect x="607.8" y="581" width="3.5" height="15.0" fill="rgb(221,83,4)" rx="2" ry="2" />
<text  x="610.81" y="591.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (3 samples, 0.06%)</title><rect x="714.3" y="533" width="0.7" height="15.0" fill="rgb(209,184,13)" rx="2" ry="2" />
<text  x="717.30" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (26 samples, 0.48%)</title><rect x="779.9" y="549" width="5.7" height="15.0" fill="rgb(231,191,13)" rx="2" ry="2" />
<text  x="782.87" y="559.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (9 samples, 0.17%)</title><rect x="1106.6" y="405" width="2.0" height="15.0" fill="rgb(254,138,40)" rx="2" ry="2" />
<text  x="1109.61" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (1 samples, 0.02%)</title><rect x="1093.2" y="597" width="0.2" height="15.0" fill="rgb(211,86,6)" rx="2" ry="2" />
<text  x="1096.19" y="607.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.02%)</title><rect x="29.4" y="533" width="0.2" height="15.0" fill="rgb(237,107,27)" rx="2" ry="2" />
<text  x="32.36" y="543.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="11.1" y="597" width="0.2" height="15.0" fill="rgb(206,204,8)" rx="2" ry="2" />
<text  x="14.10" y="607.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.02%)</title><rect x="1183.4" y="549" width="0.2" height="15.0" fill="rgb(233,28,47)" rx="2" ry="2" />
<text  x="1186.40" y="559.5" ></text>
</g>
<g >
<title>tick_program_event (2 samples, 0.04%)</title><rect x="1151.5" y="485" width="0.4" height="15.0" fill="rgb(218,30,45)" rx="2" ry="2" />
<text  x="1154.50" y="495.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.06%)</title><rect x="764.5" y="437" width="0.6" height="15.0" fill="rgb(233,77,24)" rx="2" ry="2" />
<text  x="767.47" y="447.5" ></text>
</g>
<g >
<title>find_get_entries (1 samples, 0.02%)</title><rect x="125.1" y="117" width="0.2" height="15.0" fill="rgb(225,1,54)" rx="2" ry="2" />
<text  x="128.07" y="127.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="1046.8" y="597" width="0.2" height="15.0" fill="rgb(211,220,25)" rx="2" ry="2" />
<text  x="1049.76" y="607.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (41 samples, 0.76%)</title><rect x="125.3" y="677" width="9.0" height="15.0" fill="rgb(218,143,45)" rx="2" ry="2" />
<text  x="128.29" y="687.5" ></text>
</g>
<g >
<title>perf_event__get_comm_ids (1 samples, 0.02%)</title><rect x="29.4" y="661" width="0.2" height="15.0" fill="rgb(207,137,32)" rx="2" ry="2" />
<text  x="32.36" y="671.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (5 samples, 0.09%)</title><rect x="1056.9" y="725" width="1.1" height="15.0" fill="rgb(240,125,4)" rx="2" ry="2" />
<text  x="1059.88" y="735.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (3 samples, 0.06%)</title><rect x="135.9" y="645" width="0.6" height="15.0" fill="rgb(239,66,49)" rx="2" ry="2" />
<text  x="138.85" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (4 samples, 0.07%)</title><rect x="1058.0" y="725" width="0.9" height="15.0" fill="rgb(232,180,19)" rx="2" ry="2" />
<text  x="1060.98" y="735.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.04%)</title><rect x="136.1" y="533" width="0.4" height="15.0" fill="rgb(221,214,0)" rx="2" ry="2" />
<text  x="139.07" y="543.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (2 samples, 0.04%)</title><rect x="1112.6" y="613" width="0.4" height="15.0" fill="rgb(229,74,7)" rx="2" ry="2" />
<text  x="1115.55" y="623.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (28 samples, 0.52%)</title><rect x="920.5" y="645" width="6.1" height="15.0" fill="rgb(248,115,28)" rx="2" ry="2" />
<text  x="923.47" y="655.5" ></text>
</g>
<g >
<title>__GI_munmap (1 samples, 0.02%)</title><rect x="134.3" y="661" width="0.2" height="15.0" fill="rgb(242,110,54)" rx="2" ry="2" />
<text  x="137.31" y="671.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.02%)</title><rect x="1108.8" y="469" width="0.2" height="15.0" fill="rgb(241,89,1)" rx="2" ry="2" />
<text  x="1111.81" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.04%)</title><rect x="126.0" y="565" width="0.4" height="15.0" fill="rgb(241,112,39)" rx="2" ry="2" />
<text  x="128.95" y="575.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="544.9" y="421" width="0.2" height="15.0" fill="rgb(207,47,19)" rx="2" ry="2" />
<text  x="547.88" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3 samples, 0.06%)</title><rect x="1110.8" y="709" width="0.7" height="15.0" fill="rgb(253,181,4)" rx="2" ry="2" />
<text  x="1113.79" y="719.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::new (1 samples, 0.02%)</title><rect x="1093.0" y="549" width="0.2" height="15.0" fill="rgb(213,163,18)" rx="2" ry="2" />
<text  x="1095.97" y="559.5" ></text>
</g>
<g >
<title>do_anonymous_page (3 samples, 0.06%)</title><rect x="134.5" y="565" width="0.7" height="15.0" fill="rgb(229,94,25)" rx="2" ry="2" />
<text  x="137.53" y="575.5" ></text>
</g>
<g >
<title>vfs_iter_write (3 samples, 0.06%)</title><rect x="33.1" y="629" width="0.7" height="15.0" fill="rgb(217,160,25)" rx="2" ry="2" />
<text  x="36.10" y="639.5" ></text>
</g>
<g >
<title>NaClXMutexLock (1 samples, 0.02%)</title><rect x="983.0" y="677" width="0.2" height="15.0" fill="rgb(215,175,13)" rx="2" ry="2" />
<text  x="985.96" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="136.7" y="405" width="0.3" height="15.0" fill="rgb(246,25,48)" rx="2" ry="2" />
<text  x="139.74" y="415.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (25 samples, 0.47%)</title><rect x="167.5" y="533" width="5.5" height="15.0" fill="rgb(228,98,8)" rx="2" ry="2" />
<text  x="170.54" y="543.5" ></text>
</g>
<g >
<title>destroy_inode (1 samples, 0.02%)</title><rect x="125.1" y="325" width="0.2" height="15.0" fill="rgb(252,10,35)" rx="2" ry="2" />
<text  x="128.07" y="335.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.02%)</title><rect x="1052.5" y="421" width="0.2" height="15.0" fill="rgb(222,10,18)" rx="2" ry="2" />
<text  x="1055.48" y="431.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="30.0" y="181" width="0.2" height="15.0" fill="rgb(230,106,11)" rx="2" ry="2" />
<text  x="33.02" y="191.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (2 samples, 0.04%)</title><rect x="779.4" y="565" width="0.5" height="15.0" fill="rgb(214,67,51)" rx="2" ry="2" />
<text  x="782.43" y="575.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.04%)</title><rect x="34.0" y="725" width="0.4" height="15.0" fill="rgb(220,51,30)" rx="2" ry="2" />
<text  x="36.98" y="735.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="1052.7" y="469" width="0.2" height="15.0" fill="rgb(216,96,8)" rx="2" ry="2" />
<text  x="1055.70" y="479.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (52 samples, 0.97%)</title><rect x="564.0" y="693" width="11.5" height="15.0" fill="rgb(209,108,7)" rx="2" ry="2" />
<text  x="567.03" y="703.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.02%)</title><rect x="1111.0" y="581" width="0.2" height="15.0" fill="rgb(216,229,34)" rx="2" ry="2" />
<text  x="1114.01" y="591.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1112.6" y="485" width="0.2" height="15.0" fill="rgb(250,130,44)" rx="2" ry="2" />
<text  x="1115.55" y="495.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (222 samples, 4.14%)</title><rect x="1141.2" y="709" width="48.8" height="15.0" fill="rgb(245,155,42)" rx="2" ry="2" />
<text  x="1144.15" y="719.5" >x86_..</text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="10.2" y="469" width="0.2" height="15.0" fill="rgb(248,33,0)" rx="2" ry="2" />
<text  x="13.22" y="479.5" ></text>
</g>
<g >
<title>error_return (1 samples, 0.02%)</title><rect x="1049.4" y="725" width="0.2" height="15.0" fill="rgb(218,142,8)" rx="2" ry="2" />
<text  x="1052.40" y="735.5" ></text>
</g>
<g >
<title>xas_store (2 samples, 0.04%)</title><rect x="30.9" y="293" width="0.4" height="15.0" fill="rgb(239,82,54)" rx="2" ry="2" />
<text  x="33.90" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="63.5" y="709" width="0.2" height="15.0" fill="rgb(248,144,9)" rx="2" ry="2" />
<text  x="66.47" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::unlink (1 samples, 0.02%)</title><rect x="125.1" y="485" width="0.2" height="15.0" fill="rgb(245,168,19)" rx="2" ry="2" />
<text  x="128.07" y="495.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="136.1" y="245" width="0.2" height="15.0" fill="rgb(238,143,8)" rx="2" ry="2" />
<text  x="139.07" y="255.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.02%)</title><rect x="1184.3" y="581" width="0.2" height="15.0" fill="rgb(208,202,10)" rx="2" ry="2" />
<text  x="1187.28" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::open_syscall (1 samples, 0.02%)</title><rect x="1093.0" y="581" width="0.2" height="15.0" fill="rgb(254,109,41)" rx="2" ry="2" />
<text  x="1095.97" y="591.5" ></text>
</g>
<g >
<title>ext4_end_bio (1 samples, 0.02%)</title><rect x="1113.7" y="421" width="0.2" height="15.0" fill="rgb(252,46,38)" rx="2" ry="2" />
<text  x="1116.65" y="431.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="125.1" y="245" width="0.2" height="15.0" fill="rgb(230,152,1)" rx="2" ry="2" />
<text  x="128.07" y="255.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (17 samples, 0.32%)</title><rect x="615.1" y="549" width="3.7" height="15.0" fill="rgb(228,127,3)" rx="2" ry="2" />
<text  x="618.07" y="559.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="32.9" y="341" width="0.2" height="15.0" fill="rgb(214,113,31)" rx="2" ry="2" />
<text  x="35.88" y="351.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.07%)</title><rect x="761.6" y="501" width="0.9" height="15.0" fill="rgb(211,226,22)" rx="2" ry="2" />
<text  x="764.61" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1093.0" y="405" width="0.2" height="15.0" fill="rgb(233,66,34)" rx="2" ry="2" />
<text  x="1095.97" y="415.5" ></text>
</g>
<g >
<title>perf_mmap__push (16 samples, 0.30%)</title><rect x="29.6" y="661" width="3.5" height="15.0" fill="rgb(252,113,36)" rx="2" ry="2" />
<text  x="32.58" y="671.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (19 samples, 0.35%)</title><rect x="978.6" y="629" width="4.1" height="15.0" fill="rgb(208,58,24)" rx="2" ry="2" />
<text  x="981.55" y="639.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.02%)</title><rect x="81.9" y="709" width="0.3" height="15.0" fill="rgb(248,17,33)" rx="2" ry="2" />
<text  x="84.95" y="719.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="1108.8" y="485" width="0.2" height="15.0" fill="rgb(254,138,24)" rx="2" ry="2" />
<text  x="1111.81" y="495.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="126.2" y="501" width="0.2" height="15.0" fill="rgb(222,201,53)" rx="2" ry="2" />
<text  x="129.17" y="511.5" ></text>
</g>
<g >
<title>unmap_vmas (30 samples, 0.56%)</title><rect x="1102.0" y="549" width="6.6" height="15.0" fill="rgb(245,33,19)" rx="2" ry="2" />
<text  x="1104.99" y="559.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.02%)</title><rect x="1093.0" y="453" width="0.2" height="15.0" fill="rgb(242,213,40)" rx="2" ry="2" />
<text  x="1095.97" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (22 samples, 0.41%)</title><rect x="745.3" y="517" width="4.9" height="15.0" fill="rgb(239,111,22)" rx="2" ry="2" />
<text  x="748.33" y="527.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (5 samples, 0.09%)</title><rect x="1155.0" y="405" width="1.1" height="15.0" fill="rgb(219,207,1)" rx="2" ry="2" />
<text  x="1158.02" y="415.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map::{{closure}} (2 samples, 0.04%)</title><rect x="136.1" y="373" width="0.4" height="15.0" fill="rgb(209,192,0)" rx="2" ry="2" />
<text  x="139.07" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::close_syscall (1 samples, 0.02%)</title><rect x="136.7" y="533" width="0.3" height="15.0" fill="rgb(233,62,0)" rx="2" ry="2" />
<text  x="139.74" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (34 samples, 0.63%)</title><rect x="765.8" y="533" width="7.5" height="15.0" fill="rgb(251,228,53)" rx="2" ry="2" />
<text  x="768.79" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (25 samples, 0.47%)</title><rect x="780.1" y="533" width="5.5" height="15.0" fill="rgb(247,167,37)" rx="2" ry="2" />
<text  x="783.09" y="543.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (34 samples, 0.63%)</title><rect x="705.9" y="485" width="7.5" height="15.0" fill="rgb(246,200,27)" rx="2" ry="2" />
<text  x="708.94" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="791.8" y="485" width="0.2" height="15.0" fill="rgb(212,65,39)" rx="2" ry="2" />
<text  x="794.75" y="495.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="1093.0" y="293" width="0.2" height="15.0" fill="rgb(220,128,3)" rx="2" ry="2" />
<text  x="1095.97" y="303.5" ></text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.02%)</title><rect x="125.1" y="629" width="0.2" height="15.0" fill="rgb(207,170,13)" rx="2" ry="2" />
<text  x="128.07" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (51 samples, 0.95%)</title><rect x="449.0" y="501" width="11.2" height="15.0" fill="rgb(223,207,44)" rx="2" ry="2" />
<text  x="451.95" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.04%)</title><rect x="757.9" y="469" width="0.4" height="15.0" fill="rgb(231,172,15)" rx="2" ry="2" />
<text  x="760.87" y="479.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.02%)</title><rect x="1111.0" y="565" width="0.2" height="15.0" fill="rgb(205,78,31)" rx="2" ry="2" />
<text  x="1114.01" y="575.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.02%)</title><rect x="1186.7" y="581" width="0.2" height="15.0" fill="rgb(224,73,38)" rx="2" ry="2" />
<text  x="1189.70" y="591.5" ></text>
</g>
<g >
<title>find_next_and_bit (2 samples, 0.04%)</title><rect x="1156.1" y="421" width="0.5" height="15.0" fill="rgb(229,106,50)" rx="2" ry="2" />
<text  x="1159.12" y="431.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="136.7" y="165" width="0.3" height="15.0" fill="rgb(245,133,12)" rx="2" ry="2" />
<text  x="139.74" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (19 samples, 0.35%)</title><rect x="962.7" y="629" width="4.2" height="15.0" fill="rgb(246,180,43)" rx="2" ry="2" />
<text  x="965.71" y="639.5" ></text>
</g>
<g >
<title>generic_perform_write (15 samples, 0.28%)</title><rect x="29.8" y="389" width="3.3" height="15.0" fill="rgb(249,140,0)" rx="2" ry="2" />
<text  x="32.80" y="399.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (19 samples, 0.35%)</title><rect x="795.9" y="565" width="4.2" height="15.0" fill="rgb(241,180,10)" rx="2" ry="2" />
<text  x="798.93" y="575.5" ></text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (4 samples, 0.07%)</title><rect x="126.4" y="629" width="0.9" height="15.0" fill="rgb(239,148,40)" rx="2" ry="2" />
<text  x="129.39" y="639.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="136.3" y="213" width="0.2" height="15.0" fill="rgb(228,214,51)" rx="2" ry="2" />
<text  x="139.29" y="223.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="1052.7" y="453" width="0.2" height="15.0" fill="rgb(216,163,36)" rx="2" ry="2" />
<text  x="1055.70" y="463.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.04%)</title><rect x="1113.9" y="533" width="0.4" height="15.0" fill="rgb(226,57,20)" rx="2" ry="2" />
<text  x="1116.87" y="543.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (1 samples, 0.02%)</title><rect x="100.0" y="693" width="0.2" height="15.0" fill="rgb(219,185,49)" rx="2" ry="2" />
<text  x="102.99" y="703.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="789.3" y="549" width="0.3" height="15.0" fill="rgb(236,113,3)" rx="2" ry="2" />
<text  x="792.33" y="559.5" ></text>
</g>
<g >
<title>NaClAvlTreeExtract (14 samples, 0.26%)</title><rect x="885.9" y="597" width="3.1" height="15.0" fill="rgb(235,60,12)" rx="2" ry="2" />
<text  x="888.92" y="607.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (3 samples, 0.06%)</title><rect x="30.7" y="325" width="0.6" height="15.0" fill="rgb(225,65,6)" rx="2" ry="2" />
<text  x="33.68" y="335.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.02%)</title><rect x="136.7" y="101" width="0.3" height="15.0" fill="rgb(239,219,13)" rx="2" ry="2" />
<text  x="139.74" y="111.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="136.7" y="261" width="0.3" height="15.0" fill="rgb(221,29,36)" rx="2" ry="2" />
<text  x="139.74" y="271.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeAddInterval (2 samples, 0.04%)</title><rect x="1052.9" y="725" width="0.5" height="15.0" fill="rgb(213,54,21)" rx="2" ry="2" />
<text  x="1055.92" y="735.5" ></text>
</g>
<g >
<title>arch_call_rest_init (222 samples, 4.14%)</title><rect x="1141.2" y="677" width="48.8" height="15.0" fill="rgb(253,84,25)" rx="2" ry="2" />
<text  x="1144.15" y="687.5" >arch..</text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.02%)</title><rect x="134.5" y="485" width="0.3" height="15.0" fill="rgb(251,109,27)" rx="2" ry="2" />
<text  x="137.53" y="495.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (56 samples, 1.04%)</title><rect x="160.7" y="549" width="12.3" height="15.0" fill="rgb(227,102,36)" rx="2" ry="2" />
<text  x="163.72" y="559.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.02%)</title><rect x="1092.5" y="677" width="0.2" height="15.0" fill="rgb(238,102,0)" rx="2" ry="2" />
<text  x="1095.53" y="687.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="10.4" y="565" width="0.3" height="15.0" fill="rgb(209,189,45)" rx="2" ry="2" />
<text  x="13.44" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (1 samples, 0.02%)</title><rect x="560.7" y="549" width="0.2" height="15.0" fill="rgb(205,37,39)" rx="2" ry="2" />
<text  x="563.73" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (1 samples, 0.02%)</title><rect x="125.1" y="421" width="0.2" height="15.0" fill="rgb(206,101,5)" rx="2" ry="2" />
<text  x="128.07" y="431.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (1,919 samples, 35.78%)</title><rect x="561.6" y="709" width="422.2" height="15.0" fill="rgb(228,210,41)" rx="2" ry="2" />
<text  x="564.61" y="719.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (1 samples, 0.02%)</title><rect x="124.4" y="709" width="0.2" height="15.0" fill="rgb(214,92,34)" rx="2" ry="2" />
<text  x="127.41" y="719.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (39 samples, 0.73%)</title><rect x="440.4" y="517" width="8.6" height="15.0" fill="rgb(251,88,3)" rx="2" ry="2" />
<text  x="443.37" y="527.5" ></text>
</g>
<g >
<title>NaClLog (8 samples, 0.15%)</title><rect x="121.8" y="709" width="1.7" height="15.0" fill="rgb(221,169,13)" rx="2" ry="2" />
<text  x="124.77" y="719.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (46 samples, 0.86%)</title><rect x="125.3" y="693" width="10.1" height="15.0" fill="rgb(214,24,17)" rx="2" ry="2" />
<text  x="128.29" y="703.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="29.4" y="597" width="0.2" height="15.0" fill="rgb(250,170,32)" rx="2" ry="2" />
<text  x="32.36" y="607.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (6 samples, 0.11%)</title><rect x="1188.5" y="613" width="1.3" height="15.0" fill="rgb(250,154,46)" rx="2" ry="2" />
<text  x="1191.46" y="623.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (15 samples, 0.28%)</title><rect x="72.9" y="693" width="3.3" height="15.0" fill="rgb(229,158,44)" rx="2" ry="2" />
<text  x="75.93" y="703.5" ></text>
</g>
<g >
<title>NaClLogGetVerbosity (1 samples, 0.02%)</title><rect x="560.9" y="677" width="0.3" height="15.0" fill="rgb(228,50,27)" rx="2" ry="2" />
<text  x="563.95" y="687.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="1189.3" y="533" width="0.3" height="15.0" fill="rgb(205,26,50)" rx="2" ry="2" />
<text  x="1192.34" y="543.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.41%)</title><rect x="745.3" y="565" width="4.9" height="15.0" fill="rgb(208,144,23)" rx="2" ry="2" />
<text  x="748.33" y="575.5" ></text>
</g>
<g >
<title>[anon] (222 samples, 4.14%)</title><rect x="34.0" y="741" width="48.8" height="15.0" fill="rgb(210,65,37)" rx="2" ry="2" />
<text  x="36.98" y="751.5" >[anon]</text>
</g>
<g >
<title>ext4_file_write_iter (3 samples, 0.06%)</title><rect x="33.1" y="581" width="0.7" height="15.0" fill="rgb(229,229,42)" rx="2" ry="2" />
<text  x="36.10" y="591.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (2 samples, 0.04%)</title><rect x="82.4" y="725" width="0.4" height="15.0" fill="rgb(248,37,13)" rx="2" ry="2" />
<text  x="85.39" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (1 samples, 0.02%)</title><rect x="560.7" y="533" width="0.2" height="15.0" fill="rgb(245,102,13)" rx="2" ry="2" />
<text  x="563.73" y="543.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="81.7" y="709" width="0.2" height="15.0" fill="rgb(235,157,37)" rx="2" ry="2" />
<text  x="84.73" y="719.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.02%)</title><rect x="134.3" y="597" width="0.2" height="15.0" fill="rgb(214,20,10)" rx="2" ry="2" />
<text  x="137.31" y="607.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="32.9" y="277" width="0.2" height="15.0" fill="rgb(223,7,28)" rx="2" ry="2" />
<text  x="35.88" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.02%)</title><rect x="1189.8" y="629" width="0.2" height="15.0" fill="rgb(233,113,19)" rx="2" ry="2" />
<text  x="1192.78" y="639.5" ></text>
</g>
<g >
<title>__libc_start_main (3 samples, 0.06%)</title><rect x="10.2" y="725" width="0.7" height="15.0" fill="rgb(206,205,42)" rx="2" ry="2" />
<text  x="13.22" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (34 samples, 0.63%)</title><rect x="611.3" y="565" width="7.5" height="15.0" fill="rgb(215,128,15)" rx="2" ry="2" />
<text  x="614.33" y="575.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (41 samples, 0.76%)</title><rect x="704.4" y="501" width="9.0" height="15.0" fill="rgb(254,185,28)" rx="2" ry="2" />
<text  x="707.40" y="511.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="32.0" y="277" width="0.2" height="15.0" fill="rgb(253,51,14)" rx="2" ry="2" />
<text  x="35.00" y="287.5" ></text>
</g>
<g >
<title>prepare_task_switch (1 samples, 0.02%)</title><rect x="1111.7" y="661" width="0.2" height="15.0" fill="rgb(250,152,13)" rx="2" ry="2" />
<text  x="1114.67" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="33.1" y="741" width="0.7" height="15.0" fill="rgb(219,115,16)" rx="2" ry="2" />
<text  x="36.10" y="751.5" ></text>
</g>
<g >
<title>rustposix::interface::file::openfile (1 samples, 0.02%)</title><rect x="135.9" y="581" width="0.2" height="15.0" fill="rgb(254,141,20)" rx="2" ry="2" />
<text  x="138.85" y="591.5" ></text>
</g>
<g >
<title>tick_program_event (3 samples, 0.06%)</title><rect x="1189.1" y="549" width="0.7" height="15.0" fill="rgb(234,26,27)" rx="2" ry="2" />
<text  x="1192.12" y="559.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (3 samples, 0.06%)</title><rect x="135.9" y="597" width="0.6" height="15.0" fill="rgb(222,162,24)" rx="2" ry="2" />
<text  x="138.85" y="607.5" ></text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.04%)</title><rect x="645.0" y="533" width="0.4" height="15.0" fill="rgb(223,60,39)" rx="2" ry="2" />
<text  x="648.00" y="543.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3 samples, 0.06%)</title><rect x="134.5" y="661" width="0.7" height="15.0" fill="rgb(223,46,18)" rx="2" ry="2" />
<text  x="137.53" y="671.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.04%)</title><rect x="645.0" y="469" width="0.4" height="15.0" fill="rgb(243,121,15)" rx="2" ry="2" />
<text  x="648.00" y="479.5" ></text>
</g>
<g >
<title>NaClLoadTrampoline (1 samples, 0.02%)</title><rect x="136.5" y="613" width="0.2" height="15.0" fill="rgb(248,200,16)" rx="2" ry="2" />
<text  x="139.52" y="623.5" ></text>
</g>
<g >
<title>[sel_ldr] (4,087 samples, 76.21%)</title><rect x="84.6" y="741" width="899.2" height="15.0" fill="rgb(254,26,20)" rx="2" ry="2" />
<text  x="87.59" y="751.5" >[sel_ldr]</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1187.8" y="597" width="0.2" height="15.0" fill="rgb(250,68,38)" rx="2" ry="2" />
<text  x="1190.80" y="607.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (1 samples, 0.02%)</title><rect x="135.0" y="533" width="0.2" height="15.0" fill="rgb(233,41,36)" rx="2" ry="2" />
<text  x="137.97" y="543.5" ></text>
</g>
<g >
<title>wb_do_writeback (2 samples, 0.04%)</title><rect x="1112.6" y="661" width="0.4" height="15.0" fill="rgb(243,156,40)" rx="2" ry="2" />
<text  x="1115.55" y="671.5" ></text>
</g>
<g >
<title>lind_close (1 samples, 0.02%)</title><rect x="125.1" y="613" width="0.2" height="15.0" fill="rgb(248,14,54)" rx="2" ry="2" />
<text  x="128.07" y="623.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::new (1 samples, 0.02%)</title><rect x="135.9" y="565" width="0.2" height="15.0" fill="rgb(223,25,10)" rx="2" ry="2" />
<text  x="138.85" y="575.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (138 samples, 2.57%)</title><rect x="715.0" y="565" width="30.3" height="15.0" fill="rgb(231,188,19)" rx="2" ry="2" />
<text  x="717.96" y="575.5" >ri..</text>
</g>
<g >
<title>NaClCopyTakeLock (29 samples, 0.54%)</title><rect x="115.4" y="709" width="6.4" height="15.0" fill="rgb(205,91,29)" rx="2" ry="2" />
<text  x="118.39" y="719.5" ></text>
</g>
<g >
<title>native_write_msr (64 samples, 1.19%)</title><rect x="14.8" y="373" width="14.1" height="15.0" fill="rgb(231,130,19)" rx="2" ry="2" />
<text  x="17.84" y="383.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="136.3" y="245" width="0.2" height="15.0" fill="rgb(240,1,53)" rx="2" ry="2" />
<text  x="139.29" y="255.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.02%)</title><rect x="828.5" y="629" width="0.2" height="15.0" fill="rgb(213,83,47)" rx="2" ry="2" />
<text  x="831.50" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (20 samples, 0.37%)</title><rect x="627.0" y="501" width="4.4" height="15.0" fill="rgb(212,109,5)" rx="2" ry="2" />
<text  x="629.95" y="511.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="1144.0" y="549" width="0.2" height="15.0" fill="rgb(206,91,50)" rx="2" ry="2" />
<text  x="1147.01" y="559.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (31 samples, 0.58%)</title><rect x="785.6" y="581" width="6.8" height="15.0" fill="rgb(222,118,5)" rx="2" ry="2" />
<text  x="788.59" y="591.5" ></text>
</g>
<g >
<title>record__pushfn (16 samples, 0.30%)</title><rect x="29.6" y="645" width="3.5" height="15.0" fill="rgb(224,16,54)" rx="2" ry="2" />
<text  x="32.58" y="655.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (32 samples, 0.60%)</title><rect x="1102.0" y="693" width="7.0" height="15.0" fill="rgb(207,105,9)" rx="2" ry="2" />
<text  x="1104.99" y="703.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="134.3" y="517" width="0.2" height="15.0" fill="rgb(214,229,11)" rx="2" ry="2" />
<text  x="137.31" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="29.1" y="661" width="0.3" height="15.0" fill="rgb(237,185,15)" rx="2" ry="2" />
<text  x="32.14" y="671.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (2 samples, 0.04%)</title><rect x="1148.9" y="405" width="0.4" height="15.0" fill="rgb(210,167,5)" rx="2" ry="2" />
<text  x="1151.86" y="415.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="544.9" y="357" width="0.2" height="15.0" fill="rgb(243,214,7)" rx="2" ry="2" />
<text  x="547.88" y="367.5" ></text>
</g>
<g >
<title>unmap_single_vma (30 samples, 0.56%)</title><rect x="1102.0" y="533" width="6.6" height="15.0" fill="rgb(234,138,52)" rx="2" ry="2" />
<text  x="1104.99" y="543.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.04%)</title><rect x="31.6" y="261" width="0.4" height="15.0" fill="rgb(244,62,8)" rx="2" ry="2" />
<text  x="34.56" y="271.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.02%)</title><rect x="1052.5" y="453" width="0.2" height="15.0" fill="rgb(245,125,4)" rx="2" ry="2" />
<text  x="1055.48" y="463.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.02%)</title><rect x="10.9" y="565" width="0.2" height="15.0" fill="rgb(216,228,6)" rx="2" ry="2" />
<text  x="13.88" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.24%)</title><rect x="758.5" y="453" width="2.9" height="15.0" fill="rgb(236,14,13)" rx="2" ry="2" />
<text  x="761.53" y="463.5" ></text>
</g>
<g >
<title>__rtld_malloc_init_stubs (1 samples, 0.02%)</title><rect x="10.9" y="709" width="0.2" height="15.0" fill="rgb(232,15,17)" rx="2" ry="2" />
<text  x="13.88" y="719.5" ></text>
</g>
<g >
<title>memchr_inv (1 samples, 0.02%)</title><rect x="1185.2" y="549" width="0.2" height="15.0" fill="rgb(240,4,20)" rx="2" ry="2" />
<text  x="1188.16" y="559.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="1113.9" y="613" width="0.4" height="15.0" fill="rgb(209,223,3)" rx="2" ry="2" />
<text  x="1116.87" y="623.5" ></text>
</g>
<g >
<title>malloc@plt (5 samples, 0.09%)</title><rect x="966.9" y="629" width="1.1" height="15.0" fill="rgb(247,212,25)" rx="2" ry="2" />
<text  x="969.89" y="639.5" ></text>
</g>
<g >
<title>update_group_capacity (1 samples, 0.02%)</title><rect x="1155.5" y="389" width="0.2" height="15.0" fill="rgb(247,134,33)" rx="2" ry="2" />
<text  x="1158.46" y="399.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="1048.7" y="677" width="0.3" height="15.0" fill="rgb(218,112,20)" rx="2" ry="2" />
<text  x="1051.74" y="687.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="10.9" y="693" width="0.2" height="15.0" fill="rgb(248,99,12)" rx="2" ry="2" />
<text  x="13.88" y="703.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (70 samples, 1.31%)</title><rect x="13.5" y="549" width="15.4" height="15.0" fill="rgb(211,78,11)" rx="2" ry="2" />
<text  x="16.52" y="559.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (2 samples, 0.04%)</title><rect x="844.1" y="677" width="0.5" height="15.0" fill="rgb(250,16,26)" rx="2" ry="2" />
<text  x="847.12" y="687.5" ></text>
</g>
<g >
<title>_perf_event_enable (66 samples, 1.23%)</title><rect x="14.4" y="533" width="14.5" height="15.0" fill="rgb(215,83,3)" rx="2" ry="2" />
<text  x="17.40" y="543.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.02%)</title><rect x="1108.8" y="405" width="0.2" height="15.0" fill="rgb(210,118,40)" rx="2" ry="2" />
<text  x="1111.81" y="415.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeFactory (3 samples, 0.06%)</title><rect x="37.7" y="725" width="0.7" height="15.0" fill="rgb(252,103,38)" rx="2" ry="2" />
<text  x="40.72" y="735.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.02%)</title><rect x="1111.2" y="613" width="0.3" height="15.0" fill="rgb(212,129,15)" rx="2" ry="2" />
<text  x="1114.23" y="623.5" ></text>
</g>
<g >
<title>handle_pte_fault (3 samples, 0.06%)</title><rect x="134.5" y="581" width="0.7" height="15.0" fill="rgb(210,54,7)" rx="2" ry="2" />
<text  x="137.53" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (7 samples, 0.13%)</title><rect x="173.9" y="565" width="1.6" height="15.0" fill="rgb(251,21,33)" rx="2" ry="2" />
<text  x="176.92" y="575.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeFactory (1 samples, 0.02%)</title><rect x="1053.6" y="725" width="0.2" height="15.0" fill="rgb(223,117,27)" rx="2" ry="2" />
<text  x="1056.58" y="735.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeRemoveVal (1 samples, 0.02%)</title><rect x="561.2" y="645" width="0.2" height="15.0" fill="rgb(238,10,2)" rx="2" ry="2" />
<text  x="564.17" y="655.5" ></text>
</g>
<g >
<title>core::cmp::min (4 samples, 0.07%)</title><rect x="658.2" y="565" width="0.9" height="15.0" fill="rgb(232,203,12)" rx="2" ry="2" />
<text  x="661.20" y="575.5" ></text>
</g>
<g >
<title>wait_for_stable_page (1 samples, 0.02%)</title><rect x="32.2" y="357" width="0.2" height="15.0" fill="rgb(210,134,48)" rx="2" ry="2" />
<text  x="35.22" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (34 samples, 0.63%)</title><rect x="1144.5" y="501" width="7.4" height="15.0" fill="rgb(229,81,52)" rx="2" ry="2" />
<text  x="1147.45" y="511.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.02%)</title><rect x="136.7" y="629" width="0.3" height="15.0" fill="rgb(228,154,47)" rx="2" ry="2" />
<text  x="139.74" y="639.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="125.1" y="357" width="0.2" height="15.0" fill="rgb(238,94,44)" rx="2" ry="2" />
<text  x="128.07" y="367.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (1 samples, 0.02%)</title><rect x="765.1" y="517" width="0.2" height="15.0" fill="rgb(222,158,7)" rx="2" ry="2" />
<text  x="768.13" y="527.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1105.5" y="437" width="0.2" height="15.0" fill="rgb(217,219,46)" rx="2" ry="2" />
<text  x="1108.51" y="447.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="1048.3" y="677" width="0.2" height="15.0" fill="rgb(219,159,9)" rx="2" ry="2" />
<text  x="1051.30" y="687.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (17 samples, 0.32%)</title><rect x="1154.6" y="517" width="3.7" height="15.0" fill="rgb(246,122,5)" rx="2" ry="2" />
<text  x="1157.58" y="527.5" ></text>
</g>
<g >
<title>handle_pte_fault (70 samples, 1.31%)</title><rect x="1032.7" y="645" width="15.4" height="15.0" fill="rgb(230,100,53)" rx="2" ry="2" />
<text  x="1035.68" y="655.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="136.7" y="357" width="0.3" height="15.0" fill="rgb(234,124,30)" rx="2" ry="2" />
<text  x="139.74" y="367.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="1113.7" y="261" width="0.2" height="15.0" fill="rgb(239,95,36)" rx="2" ry="2" />
<text  x="1116.65" y="271.5" ></text>
</g>
<g >
<title>process_vm_rw (2 samples, 0.04%)</title><rect x="1052.3" y="629" width="0.4" height="15.0" fill="rgb(210,164,49)" rx="2" ry="2" />
<text  x="1055.26" y="639.5" ></text>
</g>
<g >
<title>make_child (1 samples, 0.02%)</title><rect x="10.4" y="629" width="0.3" height="15.0" fill="rgb(250,198,2)" rx="2" ry="2" />
<text  x="13.44" y="639.5" ></text>
</g>
<g >
<title>NaClVmIoWillStart (256 samples, 4.77%)</title><rect x="926.6" y="677" width="56.4" height="15.0" fill="rgb(228,129,23)" rx="2" ry="2" />
<text  x="929.63" y="687.5" >NaClV..</text>
</g>
<g >
<title>rustposix::interface::file::openfile (1 samples, 0.02%)</title><rect x="1093.0" y="565" width="0.2" height="15.0" fill="rgb(218,178,35)" rx="2" ry="2" />
<text  x="1095.97" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.02%)</title><rect x="63.5" y="661" width="0.2" height="15.0" fill="rgb(226,111,50)" rx="2" ry="2" />
<text  x="66.47" y="671.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (2 samples, 0.04%)</title><rect x="1055.8" y="677" width="0.4" height="15.0" fill="rgb(214,34,19)" rx="2" ry="2" />
<text  x="1058.78" y="687.5" ></text>
</g>
<g >
<title>lind_open (1 samples, 0.02%)</title><rect x="1093.0" y="629" width="0.2" height="15.0" fill="rgb(252,153,38)" rx="2" ry="2" />
<text  x="1095.97" y="639.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (3 samples, 0.06%)</title><rect x="764.5" y="405" width="0.6" height="15.0" fill="rgb(205,121,50)" rx="2" ry="2" />
<text  x="767.47" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (15 samples, 0.28%)</title><rect x="792.6" y="565" width="3.3" height="15.0" fill="rgb(208,57,20)" rx="2" ry="2" />
<text  x="795.63" y="575.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (2 samples, 0.04%)</title><rect x="1157.9" y="421" width="0.4" height="15.0" fill="rgb(225,148,45)" rx="2" ry="2" />
<text  x="1160.88" y="431.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="10.2" y="581" width="0.2" height="15.0" fill="rgb(246,125,35)" rx="2" ry="2" />
<text  x="13.22" y="591.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="126.0" y="501" width="0.2" height="15.0" fill="rgb(229,163,52)" rx="2" ry="2" />
<text  x="128.95" y="511.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (7 samples, 0.13%)</title><rect x="656.7" y="565" width="1.5" height="15.0" fill="rgb(215,126,50)" rx="2" ry="2" />
<text  x="659.66" y="575.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="1113.9" y="517" width="0.2" height="15.0" fill="rgb(236,146,13)" rx="2" ry="2" />
<text  x="1116.87" y="527.5" ></text>
</g>
<g >
<title>remote_function (65 samples, 1.21%)</title><rect x="14.6" y="469" width="14.3" height="15.0" fill="rgb(243,202,0)" rx="2" ry="2" />
<text  x="17.62" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="137.0" y="533" width="0.2" height="15.0" fill="rgb(227,12,26)" rx="2" ry="2" />
<text  x="139.96" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (3 samples, 0.06%)</title><rect x="47.6" y="725" width="0.7" height="15.0" fill="rgb(223,90,52)" rx="2" ry="2" />
<text  x="50.62" y="735.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.02%)</title><rect x="29.1" y="677" width="0.3" height="15.0" fill="rgb(248,32,27)" rx="2" ry="2" />
<text  x="32.14" y="687.5" ></text>
</g>
<g >
<title>clear_page_erms (21 samples, 0.39%)</title><rect x="1034.2" y="549" width="4.6" height="15.0" fill="rgb(222,198,26)" rx="2" ry="2" />
<text  x="1037.22" y="559.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1178.3" y="549" width="0.3" height="15.0" fill="rgb(207,55,30)" rx="2" ry="2" />
<text  x="1181.34" y="559.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.02%)</title><rect x="1093.2" y="469" width="0.2" height="15.0" fill="rgb(228,65,32)" rx="2" ry="2" />
<text  x="1096.19" y="479.5" ></text>
</g>
<g >
<title>__libc_write (16 samples, 0.30%)</title><rect x="29.6" y="597" width="3.5" height="15.0" fill="rgb(223,133,4)" rx="2" ry="2" />
<text  x="32.58" y="607.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.02%)</title><rect x="126.0" y="437" width="0.2" height="15.0" fill="rgb(225,18,8)" rx="2" ry="2" />
<text  x="128.95" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="134.5" y="549" width="0.3" height="15.0" fill="rgb(219,199,0)" rx="2" ry="2" />
<text  x="137.53" y="559.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="1093.2" y="501" width="0.2" height="15.0" fill="rgb(234,182,51)" rx="2" ry="2" />
<text  x="1096.19" y="511.5" ></text>
</g>
<g >
<title>__get_user_pages_remote (2 samples, 0.04%)</title><rect x="1052.3" y="565" width="0.4" height="15.0" fill="rgb(237,148,53)" rx="2" ry="2" />
<text  x="1055.26" y="575.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.24%)</title><rect x="758.5" y="437" width="2.9" height="15.0" fill="rgb(253,124,6)" rx="2" ry="2" />
<text  x="761.53" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.34%)</title><rect x="623.0" y="549" width="4.0" height="15.0" fill="rgb(253,213,23)" rx="2" ry="2" />
<text  x="625.99" y="559.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (4 samples, 0.07%)</title><rect x="713.4" y="517" width="0.9" height="15.0" fill="rgb(214,151,27)" rx="2" ry="2" />
<text  x="716.42" y="527.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.04%)</title><rect x="13.1" y="549" width="0.4" height="15.0" fill="rgb(221,72,30)" rx="2" ry="2" />
<text  x="16.08" y="559.5" ></text>
</g>
<g >
<title>timerqueue_add (2 samples, 0.04%)</title><rect x="1188.7" y="549" width="0.4" height="15.0" fill="rgb(233,161,53)" rx="2" ry="2" />
<text  x="1191.68" y="559.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="1150.8" y="373" width="0.3" height="15.0" fill="rgb(208,201,53)" rx="2" ry="2" />
<text  x="1153.84" y="383.5" ></text>
</g>
<g >
<title>memcg_alloc_page_obj_cgroups (1 samples, 0.02%)</title><rect x="33.3" y="437" width="0.2" height="15.0" fill="rgb(233,54,28)" rx="2" ry="2" />
<text  x="36.32" y="447.5" ></text>
</g>
<g >
<title>_nc_find_type_entry (1 samples, 0.02%)</title><rect x="10.0" y="725" width="0.2" height="15.0" fill="rgb(208,169,2)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.02%)</title><rect x="125.1" y="197" width="0.2" height="15.0" fill="rgb(239,163,32)" rx="2" ry="2" />
<text  x="128.07" y="207.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.02%)</title><rect x="1187.6" y="565" width="0.2" height="15.0" fill="rgb(232,203,7)" rx="2" ry="2" />
<text  x="1190.58" y="575.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="1105.1" y="421" width="0.2" height="15.0" fill="rgb(248,158,8)" rx="2" ry="2" />
<text  x="1108.07" y="431.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="11.1" y="581" width="0.2" height="15.0" fill="rgb(247,23,34)" rx="2" ry="2" />
<text  x="14.10" y="591.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object (1 samples, 0.02%)</title><rect x="136.3" y="277" width="0.2" height="15.0" fill="rgb(232,16,13)" rx="2" ry="2" />
<text  x="139.29" y="287.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.02%)</title><rect x="136.7" y="565" width="0.3" height="15.0" fill="rgb(245,183,51)" rx="2" ry="2" />
<text  x="139.74" y="575.5" ></text>
</g>
<g >
<title>tty_port_default_receive_buf (1 samples, 0.02%)</title><rect x="1112.3" y="661" width="0.3" height="15.0" fill="rgb(238,30,42)" rx="2" ry="2" />
<text  x="1115.33" y="671.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (10 samples, 0.19%)</title><rect x="100.2" y="693" width="2.2" height="15.0" fill="rgb(207,171,34)" rx="2" ry="2" />
<text  x="103.21" y="703.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="125.1" y="181" width="0.2" height="15.0" fill="rgb(213,111,31)" rx="2" ry="2" />
<text  x="128.07" y="191.5" ></text>
</g>
<g >
<title>calc_load_nohz_stop (1 samples, 0.02%)</title><rect x="1141.2" y="613" width="0.2" height="15.0" fill="rgb(235,36,2)" rx="2" ry="2" />
<text  x="1144.15" y="623.5" ></text>
</g>
<g >
<title>ksys_write (16 samples, 0.30%)</title><rect x="29.6" y="533" width="3.5" height="15.0" fill="rgb(251,179,47)" rx="2" ry="2" />
<text  x="32.58" y="543.5" ></text>
</g>
<g >
<title>NaClPatchOneTrampoline (1 samples, 0.02%)</title><rect x="136.5" y="597" width="0.2" height="15.0" fill="rgb(206,168,11)" rx="2" ry="2" />
<text  x="139.52" y="607.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.02%)</title><rect x="32.0" y="261" width="0.2" height="15.0" fill="rgb(232,73,51)" rx="2" ry="2" />
<text  x="35.00" y="271.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="82.2" y="709" width="0.2" height="15.0" fill="rgb(206,69,35)" rx="2" ry="2" />
<text  x="85.17" y="719.5" ></text>
</g>
<g >
<title>delete_from_page_cache (1 samples, 0.02%)</title><rect x="1108.8" y="373" width="0.2" height="15.0" fill="rgb(221,108,48)" rx="2" ry="2" />
<text  x="1111.81" y="383.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.02%)</title><rect x="1182.3" y="565" width="0.2" height="15.0" fill="rgb(215,56,50)" rx="2" ry="2" />
<text  x="1185.30" y="575.5" ></text>
</g>
<g >
<title>NaClHostDescClose (1 samples, 0.02%)</title><rect x="136.7" y="597" width="0.3" height="15.0" fill="rgb(205,21,52)" rx="2" ry="2" />
<text  x="139.74" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1093.0" y="421" width="0.2" height="15.0" fill="rgb(238,85,6)" rx="2" ry="2" />
<text  x="1095.97" y="431.5" ></text>
</g>
<g >
<title>NaClXMutexLock (1 samples, 0.02%)</title><rect x="560.9" y="645" width="0.3" height="15.0" fill="rgb(208,42,37)" rx="2" ry="2" />
<text  x="563.95" y="655.5" ></text>
</g>
<g >
<title>do_writepages (2 samples, 0.04%)</title><rect x="1112.6" y="581" width="0.4" height="15.0" fill="rgb(213,165,50)" rx="2" ry="2" />
<text  x="1115.55" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (31 samples, 0.58%)</title><rect x="785.6" y="597" width="6.8" height="15.0" fill="rgb(250,141,7)" rx="2" ry="2" />
<text  x="788.59" y="607.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (164 samples, 3.06%)</title><rect x="1142.5" y="581" width="36.1" height="15.0" fill="rgb(215,150,37)" rx="2" ry="2" />
<text  x="1145.47" y="591.5" >cpu..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="1052.3" y="661" width="0.4" height="15.0" fill="rgb(212,82,30)" rx="2" ry="2" />
<text  x="1055.26" y="671.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.02%)</title><rect x="33.5" y="485" width="0.3" height="15.0" fill="rgb(249,0,49)" rx="2" ry="2" />
<text  x="36.54" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (168 samples, 3.13%)</title><rect x="363.8" y="517" width="37.0" height="15.0" fill="rgb(233,146,9)" rx="2" ry="2" />
<text  x="366.80" y="527.5" >cor..</text>
</g>
<g >
<title>std::fs::OpenOptions::_open (1 samples, 0.02%)</title><rect x="1093.0" y="517" width="0.2" height="15.0" fill="rgb(228,157,23)" rx="2" ry="2" />
<text  x="1095.97" y="527.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeRemoveInterval (1 samples, 0.02%)</title><rect x="844.8" y="677" width="0.2" height="15.0" fill="rgb(228,124,53)" rx="2" ry="2" />
<text  x="847.78" y="687.5" ></text>
</g>
<g >
<title>NaClSysExecve (2 samples, 0.04%)</title><rect x="135.4" y="693" width="0.5" height="15.0" fill="rgb(207,188,8)" rx="2" ry="2" />
<text  x="138.41" y="703.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.04%)</title><rect x="43.0" y="725" width="0.4" height="15.0" fill="rgb(247,204,14)" rx="2" ry="2" />
<text  x="46.00" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (27 samples, 0.50%)</title><rect x="830.3" y="597" width="5.9" height="15.0" fill="rgb(235,48,54)" rx="2" ry="2" />
<text  x="833.26" y="607.5" ></text>
</g>
<g >
<title>NaClMutexLock (1 samples, 0.02%)</title><rect x="560.9" y="629" width="0.3" height="15.0" fill="rgb(239,158,20)" rx="2" ry="2" />
<text  x="563.95" y="639.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (23 samples, 0.43%)</title><rect x="1086.1" y="725" width="5.1" height="15.0" fill="rgb(247,12,26)" rx="2" ry="2" />
<text  x="1089.15" y="735.5" ></text>
</g>
<g >
<title>lind_read (1,927 samples, 35.93%)</title><rect x="137.0" y="645" width="423.9" height="15.0" fill="rgb(205,188,45)" rx="2" ry="2" />
<text  x="139.96" y="655.5" >lind_read</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (2 samples, 0.04%)</title><rect x="136.1" y="453" width="0.4" height="15.0" fill="rgb(244,143,30)" rx="2" ry="2" />
<text  x="139.07" y="463.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (14 samples, 0.26%)</title><rect x="809.1" y="629" width="3.1" height="15.0" fill="rgb(245,93,48)" rx="2" ry="2" />
<text  x="812.13" y="639.5" ></text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.02%)</title><rect x="1104.2" y="469" width="0.2" height="15.0" fill="rgb(253,193,49)" rx="2" ry="2" />
<text  x="1107.19" y="479.5" ></text>
</g>
<g >
<title>__libc_start_main (2 samples, 0.04%)</title><rect x="1093.0" y="725" width="0.4" height="15.0" fill="rgb(229,12,6)" rx="2" ry="2" />
<text  x="1095.97" y="735.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.04%)</title><rect x="1047.2" y="597" width="0.4" height="15.0" fill="rgb(250,199,48)" rx="2" ry="2" />
<text  x="1050.20" y="607.5" ></text>
</g>
<g >
<title>NaClIntervalRangeTreeNodeInit (1 samples, 0.02%)</title><rect x="865.0" y="645" width="0.2" height="15.0" fill="rgb(246,166,43)" rx="2" ry="2" />
<text  x="868.02" y="655.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="544.9" y="469" width="0.2" height="15.0" fill="rgb(239,73,15)" rx="2" ry="2" />
<text  x="547.88" y="479.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="790.4" y="469" width="0.3" height="15.0" fill="rgb(243,149,51)" rx="2" ry="2" />
<text  x="793.43" y="479.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (22 samples, 0.41%)</title><rect x="76.2" y="725" width="4.9" height="15.0" fill="rgb(230,92,7)" rx="2" ry="2" />
<text  x="79.23" y="735.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (2 samples, 0.04%)</title><rect x="126.8" y="421" width="0.5" height="15.0" fill="rgb(250,69,2)" rx="2" ry="2" />
<text  x="129.83" y="431.5" ></text>
</g>
<g >
<title>worker_thread (7 samples, 0.13%)</title><rect x="1111.9" y="709" width="1.5" height="15.0" fill="rgb(226,27,53)" rx="2" ry="2" />
<text  x="1114.89" y="719.5" ></text>
</g>
<g >
<title>mblen (1 samples, 0.02%)</title><rect x="10.7" y="677" width="0.2" height="15.0" fill="rgb(250,110,10)" rx="2" ry="2" />
<text  x="13.66" y="687.5" ></text>
</g>
<g >
<title>newidle_balance (3 samples, 0.06%)</title><rect x="1186.9" y="565" width="0.7" height="15.0" fill="rgb(243,64,26)" rx="2" ry="2" />
<text  x="1189.92" y="575.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (34 samples, 0.63%)</title><rect x="1144.5" y="517" width="7.4" height="15.0" fill="rgb(229,28,24)" rx="2" ry="2" />
<text  x="1147.45" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.02%)</title><rect x="1188.2" y="613" width="0.3" height="15.0" fill="rgb(225,48,0)" rx="2" ry="2" />
<text  x="1191.24" y="623.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (5 samples, 0.09%)</title><rect x="763.4" y="421" width="1.1" height="15.0" fill="rgb(213,177,6)" rx="2" ry="2" />
<text  x="766.37" y="431.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="1112.8" y="501" width="0.2" height="15.0" fill="rgb(225,49,19)" rx="2" ry="2" />
<text  x="1115.77" y="511.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (1 samples, 0.02%)</title><rect x="32.7" y="341" width="0.2" height="15.0" fill="rgb(205,218,37)" rx="2" ry="2" />
<text  x="35.66" y="351.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (2 samples, 0.04%)</title><rect x="30.2" y="341" width="0.5" height="15.0" fill="rgb(214,50,20)" rx="2" ry="2" />
<text  x="33.24" y="351.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (9 samples, 0.17%)</title><rect x="572.4" y="677" width="2.0" height="15.0" fill="rgb(242,25,50)" rx="2" ry="2" />
<text  x="575.39" y="687.5" ></text>
</g>
<g >
<title>cpu_startup_entry (126 samples, 2.35%)</title><rect x="1113.4" y="709" width="27.8" height="15.0" fill="rgb(227,199,54)" rx="2" ry="2" />
<text  x="1116.43" y="719.5" >c..</text>
</g>
<g >
<title>common_interrupt (2 samples, 0.04%)</title><rect x="1113.4" y="613" width="0.5" height="15.0" fill="rgb(208,80,8)" rx="2" ry="2" />
<text  x="1116.43" y="623.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.02%)</title><rect x="1149.5" y="373" width="0.2" height="15.0" fill="rgb(238,104,10)" rx="2" ry="2" />
<text  x="1152.52" y="383.5" ></text>
</g>
<g >
<title>NaClStore64 (1 samples, 0.02%)</title><rect x="136.5" y="549" width="0.2" height="15.0" fill="rgb(244,106,42)" rx="2" ry="2" />
<text  x="139.52" y="559.5" ></text>
</g>
<g >
<title>__libc_open64 (1 samples, 0.02%)</title><rect x="1093.0" y="437" width="0.2" height="15.0" fill="rgb(250,84,25)" rx="2" ry="2" />
<text  x="1095.97" y="447.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="1108.8" y="549" width="0.2" height="15.0" fill="rgb(212,69,4)" rx="2" ry="2" />
<text  x="1111.81" y="559.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (4 samples, 0.07%)</title><rect x="126.4" y="581" width="0.9" height="15.0" fill="rgb(242,182,44)" rx="2" ry="2" />
<text  x="129.39" y="591.5" ></text>
</g>
<g >
<title>xas_init_marks (1 samples, 0.02%)</title><rect x="1108.8" y="325" width="0.2" height="15.0" fill="rgb(205,52,6)" rx="2" ry="2" />
<text  x="1111.81" y="335.5" ></text>
</g>
<g >
<title>NaClDescRef (73 samples, 1.36%)</title><rect x="827.8" y="645" width="16.1" height="15.0" fill="rgb(237,166,30)" rx="2" ry="2" />
<text  x="830.84" y="655.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="10.4" y="501" width="0.3" height="15.0" fill="rgb(226,68,17)" rx="2" ry="2" />
<text  x="13.44" y="511.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (6 samples, 0.11%)</title><rect x="591.3" y="645" width="1.3" height="15.0" fill="rgb(218,98,37)" rx="2" ry="2" />
<text  x="594.31" y="655.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.02%)</title><rect x="136.7" y="213" width="0.3" height="15.0" fill="rgb(231,127,31)" rx="2" ry="2" />
<text  x="139.74" y="223.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (1 samples, 0.02%)</title><rect x="842.6" y="597" width="0.2" height="15.0" fill="rgb(250,142,4)" rx="2" ry="2" />
<text  x="845.58" y="607.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (12 samples, 0.22%)</title><rect x="78.4" y="677" width="2.7" height="15.0" fill="rgb(240,30,22)" rx="2" ry="2" />
<text  x="81.43" y="687.5" ></text>
</g>
<g >
<title>prep_new_page (2 samples, 0.04%)</title><rect x="31.6" y="277" width="0.4" height="15.0" fill="rgb(222,131,25)" rx="2" ry="2" />
<text  x="34.56" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="10.7" y="581" width="0.2" height="15.0" fill="rgb(246,199,34)" rx="2" ry="2" />
<text  x="13.66" y="591.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1178.3" y="565" width="0.3" height="15.0" fill="rgb(215,38,1)" rx="2" ry="2" />
<text  x="1181.34" y="575.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.02%)</title><rect x="1093.4" y="693" width="0.2" height="15.0" fill="rgb(251,141,19)" rx="2" ry="2" />
<text  x="1096.41" y="703.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1113.7" y="309" width="0.2" height="15.0" fill="rgb(206,183,40)" rx="2" ry="2" />
<text  x="1116.65" y="319.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.02%)</title><rect x="1186.0" y="597" width="0.3" height="15.0" fill="rgb(236,187,13)" rx="2" ry="2" />
<text  x="1189.04" y="607.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.07%)</title><rect x="10.2" y="741" width="0.9" height="15.0" fill="rgb(220,186,28)" rx="2" ry="2" />
<text  x="13.22" y="751.5" ></text>
</g>
<g >
<title>NaClMprotect (1 samples, 0.02%)</title><rect x="135.4" y="597" width="0.2" height="15.0" fill="rgb(239,39,24)" rx="2" ry="2" />
<text  x="138.41" y="607.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (2 samples, 0.04%)</title><rect x="645.0" y="501" width="0.4" height="15.0" fill="rgb(206,185,35)" rx="2" ry="2" />
<text  x="648.00" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (7 samples, 0.13%)</title><rect x="743.6" y="517" width="1.5" height="15.0" fill="rgb(234,106,14)" rx="2" ry="2" />
<text  x="746.57" y="527.5" ></text>
</g>
<g >
<title>fault_in_kernel_space (1 samples, 0.02%)</title><rect x="1048.5" y="693" width="0.2" height="15.0" fill="rgb(242,73,54)" rx="2" ry="2" />
<text  x="1051.52" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (79 samples, 1.47%)</title><rect x="11.5" y="597" width="17.4" height="15.0" fill="rgb(222,64,46)" rx="2" ry="2" />
<text  x="14.54" y="607.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="1111.0" y="613" width="0.2" height="15.0" fill="rgb(228,99,26)" rx="2" ry="2" />
<text  x="1114.01" y="623.5" ></text>
</g>
<g >
<title>NaClXMutexLock (33 samples, 0.62%)</title><rect x="969.8" y="661" width="7.2" height="15.0" fill="rgb(220,3,12)" rx="2" ry="2" />
<text  x="972.75" y="671.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (86 samples, 1.60%)</title><rect x="1030.0" y="725" width="19.0" height="15.0" fill="rgb(206,179,18)" rx="2" ry="2" />
<text  x="1033.04" y="735.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (18 samples, 0.34%)</title><rect x="808.3" y="645" width="3.9" height="15.0" fill="rgb(216,31,44)" rx="2" ry="2" />
<text  x="811.25" y="655.5" ></text>
</g>
<g >
<title>__wcsmbs_load_conv (1 samples, 0.02%)</title><rect x="10.7" y="661" width="0.2" height="15.0" fill="rgb(252,133,13)" rx="2" ry="2" />
<text  x="13.66" y="671.5" ></text>
</g>
<g >
<title>exit_mmap (30 samples, 0.56%)</title><rect x="1102.0" y="565" width="6.6" height="15.0" fill="rgb(223,193,48)" rx="2" ry="2" />
<text  x="1104.99" y="575.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1151.7" y="453" width="0.2" height="15.0" fill="rgb(239,10,16)" rx="2" ry="2" />
<text  x="1154.72" y="463.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.02%)</title><rect x="10.2" y="693" width="0.2" height="15.0" fill="rgb(213,170,11)" rx="2" ry="2" />
<text  x="13.22" y="703.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.02%)</title><rect x="1047.2" y="565" width="0.2" height="15.0" fill="rgb(216,217,39)" rx="2" ry="2" />
<text  x="1050.20" y="575.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="1092.3" y="693" width="0.2" height="15.0" fill="rgb(221,227,51)" rx="2" ry="2" />
<text  x="1095.31" y="703.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (1 samples, 0.02%)</title><rect x="136.7" y="501" width="0.3" height="15.0" fill="rgb(206,182,30)" rx="2" ry="2" />
<text  x="139.74" y="511.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="1113.7" y="293" width="0.2" height="15.0" fill="rgb(233,78,35)" rx="2" ry="2" />
<text  x="1116.65" y="303.5" ></text>
</g>
<g >
<title>do_iter_write (3 samples, 0.06%)</title><rect x="33.1" y="613" width="0.7" height="15.0" fill="rgb(232,104,37)" rx="2" ry="2" />
<text  x="36.10" y="623.5" ></text>
</g>
<g >
<title>exit_notify (1 samples, 0.02%)</title><rect x="1108.6" y="597" width="0.2" height="15.0" fill="rgb(209,4,34)" rx="2" ry="2" />
<text  x="1111.59" y="607.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.02%)</title><rect x="137.0" y="581" width="0.2" height="15.0" fill="rgb(241,161,42)" rx="2" ry="2" />
<text  x="139.96" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="134.3" y="613" width="0.2" height="15.0" fill="rgb(210,69,30)" rx="2" ry="2" />
<text  x="137.31" y="623.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="10.9" y="645" width="0.2" height="15.0" fill="rgb(216,67,11)" rx="2" ry="2" />
<text  x="13.88" y="655.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (1 samples, 0.02%)</title><rect x="860.4" y="661" width="0.2" height="15.0" fill="rgb(212,98,14)" rx="2" ry="2" />
<text  x="863.40" y="671.5" ></text>
</g>
<g >
<title>kvfree (1 samples, 0.02%)</title><rect x="29.4" y="485" width="0.2" height="15.0" fill="rgb(215,228,3)" rx="2" ry="2" />
<text  x="32.36" y="495.5" ></text>
</g>
<g >
<title>__update_blocked_fair (1 samples, 0.02%)</title><rect x="1114.1" y="501" width="0.2" height="15.0" fill="rgb(232,39,54)" rx="2" ry="2" />
<text  x="1117.09" y="511.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1113.9" y="501" width="0.2" height="15.0" fill="rgb(212,33,29)" rx="2" ry="2" />
<text  x="1116.87" y="511.5" ></text>
</g>
<g >
<title>lru_cache_add (12 samples, 0.22%)</title><rect x="1042.1" y="597" width="2.7" height="15.0" fill="rgb(223,98,9)" rx="2" ry="2" />
<text  x="1045.14" y="607.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="136.7" y="149" width="0.3" height="15.0" fill="rgb(227,130,21)" rx="2" ry="2" />
<text  x="139.74" y="159.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1187.1" y="549" width="0.3" height="15.0" fill="rgb(244,76,19)" rx="2" ry="2" />
<text  x="1190.14" y="559.5" ></text>
</g>
<g >
<title>[anon] (1 samples, 0.02%)</title><rect x="10.0" y="741" width="0.2" height="15.0" fill="rgb(248,61,32)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>tick_nohz_idle_retain_tick (1 samples, 0.02%)</title><rect x="1184.7" y="597" width="0.2" height="15.0" fill="rgb(232,160,47)" rx="2" ry="2" />
<text  x="1187.72" y="607.5" ></text>
</g>
<g >
<title>page_remove_rmap (5 samples, 0.09%)</title><rect x="1103.3" y="485" width="1.1" height="15.0" fill="rgb(207,17,42)" rx="2" ry="2" />
<text  x="1106.31" y="495.5" ></text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.04%)</title><rect x="779.4" y="517" width="0.5" height="15.0" fill="rgb(246,46,50)" rx="2" ry="2" />
<text  x="782.43" y="527.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="137.0" y="597" width="0.2" height="15.0" fill="rgb(215,199,45)" rx="2" ry="2" />
<text  x="139.96" y="607.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="29.4" y="549" width="0.2" height="15.0" fill="rgb(229,51,14)" rx="2" ry="2" />
<text  x="32.36" y="559.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1111.0" y="517" width="0.2" height="15.0" fill="rgb(216,72,15)" rx="2" ry="2" />
<text  x="1114.01" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (6 samples, 0.11%)</title><rect x="46.3" y="725" width="1.3" height="15.0" fill="rgb(206,99,20)" rx="2" ry="2" />
<text  x="49.30" y="735.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (39 samples, 0.73%)</title><rect x="430.9" y="485" width="8.6" height="15.0" fill="rgb(211,138,29)" rx="2" ry="2" />
<text  x="433.91" y="495.5" ></text>
</g>
<g >
<title>single_release (1 samples, 0.02%)</title><rect x="29.4" y="501" width="0.2" height="15.0" fill="rgb(231,84,23)" rx="2" ry="2" />
<text  x="32.36" y="511.5" ></text>
</g>
<g >
<title>ksys_write (3 samples, 0.06%)</title><rect x="33.1" y="693" width="0.7" height="15.0" fill="rgb(243,35,45)" rx="2" ry="2" />
<text  x="36.10" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.02%)</title><rect x="137.0" y="565" width="0.2" height="15.0" fill="rgb(219,136,14)" rx="2" ry="2" />
<text  x="139.96" y="575.5" ></text>
</g>
<g >
<title>set_default_locale (1 samples, 0.02%)</title><rect x="10.7" y="693" width="0.2" height="15.0" fill="rgb(222,12,39)" rx="2" ry="2" />
<text  x="13.66" y="703.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.02%)</title><rect x="136.7" y="277" width="0.3" height="15.0" fill="rgb(207,68,14)" rx="2" ry="2" />
<text  x="139.74" y="287.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (17 samples, 0.32%)</title><rect x="804.5" y="629" width="3.8" height="15.0" fill="rgb(228,190,26)" rx="2" ry="2" />
<text  x="807.51" y="639.5" ></text>
</g>
<g >
<title>[sel_ldr] (90 samples, 1.68%)</title><rect x="1010.0" y="725" width="19.8" height="15.0" fill="rgb(211,178,35)" rx="2" ry="2" />
<text  x="1013.02" y="735.5" ></text>
</g>
<g >
<title>core::cmp::min_by (31 samples, 0.58%)</title><rect x="160.7" y="533" width="6.8" height="15.0" fill="rgb(205,215,29)" rx="2" ry="2" />
<text  x="163.72" y="543.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.02%)</title><rect x="1185.8" y="597" width="0.2" height="15.0" fill="rgb(221,48,39)" rx="2" ry="2" />
<text  x="1188.82" y="607.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (17 samples, 0.32%)</title><rect x="1154.6" y="501" width="3.7" height="15.0" fill="rgb(228,193,28)" rx="2" ry="2" />
<text  x="1157.58" y="511.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.02%)</title><rect x="29.4" y="565" width="0.2" height="15.0" fill="rgb(240,225,6)" rx="2" ry="2" />
<text  x="32.36" y="575.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (2 samples, 0.04%)</title><rect x="1055.3" y="725" width="0.5" height="15.0" fill="rgb(244,45,26)" rx="2" ry="2" />
<text  x="1058.34" y="735.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.04%)</title><rect x="136.1" y="421" width="0.4" height="15.0" fill="rgb(205,37,52)" rx="2" ry="2" />
<text  x="139.07" y="431.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1188.2" y="597" width="0.3" height="15.0" fill="rgb(242,114,34)" rx="2" ry="2" />
<text  x="1191.24" y="607.5" ></text>
</g>
<g >
<title>NaClLogLock (1 samples, 0.02%)</title><rect x="39.3" y="725" width="0.2" height="15.0" fill="rgb(251,129,10)" rx="2" ry="2" />
<text  x="42.26" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (28 samples, 0.52%)</title><rect x="773.3" y="533" width="6.1" height="15.0" fill="rgb(246,120,26)" rx="2" ry="2" />
<text  x="776.27" y="543.5" ></text>
</g>
<g >
<title>_local_bh_enable (1 samples, 0.02%)</title><rect x="1152.4" y="517" width="0.2" height="15.0" fill="rgb(226,110,28)" rx="2" ry="2" />
<text  x="1155.38" y="527.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="544.9" y="389" width="0.2" height="15.0" fill="rgb(236,177,21)" rx="2" ry="2" />
<text  x="547.88" y="399.5" ></text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.02%)</title><rect x="1052.7" y="709" width="0.2" height="15.0" fill="rgb(206,35,7)" rx="2" ry="2" />
<text  x="1055.70" y="719.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="10.2" y="597" width="0.2" height="15.0" fill="rgb(220,102,18)" rx="2" ry="2" />
<text  x="13.22" y="607.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (35 samples, 0.65%)</title><rect x="792.4" y="597" width="7.7" height="15.0" fill="rgb(234,138,13)" rx="2" ry="2" />
<text  x="795.41" y="607.5" ></text>
</g>
<g >
<title>check_cpu_stall (1 samples, 0.02%)</title><rect x="1148.9" y="389" width="0.2" height="15.0" fill="rgb(223,138,40)" rx="2" ry="2" />
<text  x="1151.86" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.07%)</title><rect x="126.4" y="533" width="0.9" height="15.0" fill="rgb(238,194,12)" rx="2" ry="2" />
<text  x="129.39" y="543.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.02%)</title><rect x="1030.9" y="677" width="0.2" height="15.0" fill="rgb(248,27,12)" rx="2" ry="2" />
<text  x="1033.92" y="687.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="134.8" y="533" width="0.2" height="15.0" fill="rgb(208,42,22)" rx="2" ry="2" />
<text  x="137.75" y="543.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (28 samples, 0.52%)</title><rect x="566.2" y="629" width="6.2" height="15.0" fill="rgb(243,90,3)" rx="2" ry="2" />
<text  x="569.23" y="639.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.02%)</title><rect x="41.5" y="725" width="0.2" height="15.0" fill="rgb(242,158,53)" rx="2" ry="2" />
<text  x="44.46" y="735.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.02%)</title><rect x="173.0" y="533" width="0.3" height="15.0" fill="rgb(220,127,11)" rx="2" ry="2" />
<text  x="176.04" y="543.5" ></text>
</g>
<g >
<title>tick_sched_timer (23 samples, 0.43%)</title><rect x="1146.2" y="453" width="5.1" height="15.0" fill="rgb(238,70,41)" rx="2" ry="2" />
<text  x="1149.21" y="463.5" ></text>
</g>
<g >
<title>__kmalloc_node (1 samples, 0.02%)</title><rect x="30.0" y="245" width="0.2" height="15.0" fill="rgb(247,131,12)" rx="2" ry="2" />
<text  x="33.02" y="255.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.06%)</title><rect x="760.7" y="405" width="0.7" height="15.0" fill="rgb(209,213,10)" rx="2" ry="2" />
<text  x="763.73" y="415.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (4 samples, 0.07%)</title><rect x="86.6" y="725" width="0.8" height="15.0" fill="rgb(223,25,33)" rx="2" ry="2" />
<text  x="89.57" y="735.5" ></text>
</g>
<g >
<title>NaClValidateImage (2 samples, 0.04%)</title><rect x="1055.8" y="661" width="0.4" height="15.0" fill="rgb(231,162,48)" rx="2" ry="2" />
<text  x="1058.78" y="671.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="126.8" y="373" width="0.3" height="15.0" fill="rgb(212,82,22)" rx="2" ry="2" />
<text  x="129.83" y="383.5" ></text>
</g>
<g >
<title>NaClSysExitDecoder (3 samples, 0.06%)</title><rect x="135.9" y="709" width="0.6" height="15.0" fill="rgb(243,177,3)" rx="2" ry="2" />
<text  x="138.85" y="719.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.63%)</title><rect x="611.3" y="597" width="7.5" height="15.0" fill="rgb(248,176,22)" rx="2" ry="2" />
<text  x="614.33" y="607.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="30.0" y="213" width="0.2" height="15.0" fill="rgb(214,229,31)" rx="2" ry="2" />
<text  x="33.02" y="223.5" ></text>
</g>
<g >
<title>release_pages (17 samples, 0.32%)</title><rect x="1104.8" y="453" width="3.8" height="15.0" fill="rgb(253,201,10)" rx="2" ry="2" />
<text  x="1107.85" y="463.5" ></text>
</g>
<g >
<title>pagecache_get_page (7 samples, 0.13%)</title><rect x="30.7" y="341" width="1.5" height="15.0" fill="rgb(254,198,35)" rx="2" ry="2" />
<text  x="33.68" y="351.5" ></text>
</g>
<g >
<title>exc_page_fault (4 samples, 0.07%)</title><rect x="126.4" y="565" width="0.9" height="15.0" fill="rgb(224,71,46)" rx="2" ry="2" />
<text  x="129.39" y="575.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.07%)</title><rect x="134.5" y="677" width="0.9" height="15.0" fill="rgb(221,166,0)" rx="2" ry="2" />
<text  x="137.53" y="687.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (35 samples, 0.65%)</title><rect x="792.4" y="613" width="7.7" height="15.0" fill="rgb(247,225,1)" rx="2" ry="2" />
<text  x="795.41" y="623.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (18 samples, 0.34%)</title><rect x="761.4" y="533" width="3.9" height="15.0" fill="rgb(223,153,45)" rx="2" ry="2" />
<text  x="764.39" y="543.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.02%)</title><rect x="1052.7" y="645" width="0.2" height="15.0" fill="rgb(224,212,37)" rx="2" ry="2" />
<text  x="1055.70" y="655.5" ></text>
</g>
<g >
<title>exit_mm (30 samples, 0.56%)</title><rect x="1102.0" y="597" width="6.6" height="15.0" fill="rgb(230,132,10)" rx="2" ry="2" />
<text  x="1104.99" y="607.5" ></text>
</g>
<g >
<title>do_idle (221 samples, 4.12%)</title><rect x="1141.2" y="629" width="48.6" height="15.0" fill="rgb(224,221,6)" rx="2" ry="2" />
<text  x="1144.15" y="639.5" >do_i..</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect x="136.1" y="357" width="0.4" height="15.0" fill="rgb(236,207,1)" rx="2" ry="2" />
<text  x="139.07" y="367.5" ></text>
</g>
<g >
<title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="136.1" y="229" width="0.2" height="15.0" fill="rgb(247,111,12)" rx="2" ry="2" />
<text  x="139.07" y="239.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (12 samples, 0.22%)</title><rect x="29.8" y="373" width="2.6" height="15.0" fill="rgb(216,165,45)" rx="2" ry="2" />
<text  x="32.80" y="383.5" ></text>
</g>
<g >
<title>__free_one_page (6 samples, 0.11%)</title><rect x="1107.3" y="389" width="1.3" height="15.0" fill="rgb(211,19,16)" rx="2" ry="2" />
<text  x="1110.27" y="399.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (1 samples, 0.02%)</title><rect x="136.7" y="85" width="0.3" height="15.0" fill="rgb(237,119,43)" rx="2" ry="2" />
<text  x="139.74" y="95.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (2 samples, 0.04%)</title><rect x="1157.9" y="453" width="0.4" height="15.0" fill="rgb(226,21,14)" rx="2" ry="2" />
<text  x="1160.88" y="463.5" ></text>
</g>
<g >
<title>record__write (16 samples, 0.30%)</title><rect x="29.6" y="629" width="3.5" height="15.0" fill="rgb(243,205,9)" rx="2" ry="2" />
<text  x="32.58" y="639.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.02%)</title><rect x="1047.0" y="613" width="0.2" height="15.0" fill="rgb(251,208,31)" rx="2" ry="2" />
<text  x="1049.98" y="623.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (2 samples, 0.04%)</title><rect x="779.4" y="549" width="0.5" height="15.0" fill="rgb(237,55,41)" rx="2" ry="2" />
<text  x="782.43" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="659.1" y="501" width="0.6" height="15.0" fill="rgb(209,6,4)" rx="2" ry="2" />
<text  x="662.08" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.02%)</title><rect x="81.9" y="677" width="0.3" height="15.0" fill="rgb(243,155,46)" rx="2" ry="2" />
<text  x="84.95" y="687.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (1,926 samples, 35.91%)</title><rect x="137.2" y="597" width="423.7" height="15.0" fill="rgb(246,63,15)" rx="2" ry="2" />
<text  x="140.18" y="607.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix..</text>
</g>
<g >
<title>NaClHostDescOpen (1 samples, 0.02%)</title><rect x="1093.0" y="645" width="0.2" height="15.0" fill="rgb(237,110,14)" rx="2" ry="2" />
<text  x="1095.97" y="655.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect x="136.1" y="405" width="0.4" height="15.0" fill="rgb(248,157,30)" rx="2" ry="2" />
<text  x="139.07" y="415.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (4 samples, 0.07%)</title><rect x="126.4" y="613" width="0.9" height="15.0" fill="rgb(244,83,7)" rx="2" ry="2" />
<text  x="129.39" y="623.5" ></text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.02%)</title><rect x="135.4" y="501" width="0.2" height="15.0" fill="rgb(251,161,26)" rx="2" ry="2" />
<text  x="138.41" y="511.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="29.4" y="581" width="0.2" height="15.0" fill="rgb(222,177,47)" rx="2" ry="2" />
<text  x="32.36" y="591.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (2 samples, 0.04%)</title><rect x="136.1" y="565" width="0.4" height="15.0" fill="rgb(235,149,48)" rx="2" ry="2" />
<text  x="139.07" y="575.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.04%)</title><rect x="81.1" y="725" width="0.4" height="15.0" fill="rgb(224,129,9)" rx="2" ry="2" />
<text  x="84.07" y="735.5" ></text>
</g>
<g >
<title>NaClVmIoHasEnded (292 samples, 5.44%)</title><rect x="862.4" y="677" width="64.2" height="15.0" fill="rgb(251,178,14)" rx="2" ry="2" />
<text  x="865.38" y="687.5" >NaClVmI..</text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (3 samples, 0.06%)</title><rect x="658.4" y="533" width="0.7" height="15.0" fill="rgb(224,167,13)" rx="2" ry="2" />
<text  x="661.42" y="543.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.11%)</title><rect x="700.9" y="485" width="1.3" height="15.0" fill="rgb(251,220,53)" rx="2" ry="2" />
<text  x="703.88" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="126.0" y="581" width="0.4" height="15.0" fill="rgb(229,98,25)" rx="2" ry="2" />
<text  x="128.95" y="591.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.02%)</title><rect x="1093.2" y="293" width="0.2" height="15.0" fill="rgb(230,172,50)" rx="2" ry="2" />
<text  x="1096.19" y="303.5" ></text>
</g>
<g >
<title>NaClXMutexLock (30 samples, 0.56%)</title><rect x="847.0" y="645" width="6.6" height="15.0" fill="rgb(248,82,8)" rx="2" ry="2" />
<text  x="849.98" y="655.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="752.8" y="453" width="0.2" height="15.0" fill="rgb(254,71,48)" rx="2" ry="2" />
<text  x="755.81" y="463.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (30 samples, 0.56%)</title><rect x="920.0" y="661" width="6.6" height="15.0" fill="rgb(217,45,41)" rx="2" ry="2" />
<text  x="923.03" y="671.5" ></text>
</g>
<g >
<title>handle_mm_fault (77 samples, 1.44%)</title><rect x="1031.1" y="677" width="17.0" height="15.0" fill="rgb(254,61,2)" rx="2" ry="2" />
<text  x="1034.14" y="687.5" ></text>
</g>
<g >
<title>NaClGetDescMu (1 samples, 0.02%)</title><rect x="843.9" y="677" width="0.2" height="15.0" fill="rgb(222,63,25)" rx="2" ry="2" />
<text  x="846.90" y="687.5" ></text>
</g>
<g >
<title>alloc_buffer_head (2 samples, 0.04%)</title><rect x="29.8" y="309" width="0.4" height="15.0" fill="rgb(237,84,36)" rx="2" ry="2" />
<text  x="32.80" y="319.5" ></text>
</g>
<g >
<title>page_cache_delete (1 samples, 0.02%)</title><rect x="1108.8" y="341" width="0.2" height="15.0" fill="rgb(226,43,16)" rx="2" ry="2" />
<text  x="1111.81" y="351.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.04%)</title><rect x="1113.9" y="565" width="0.4" height="15.0" fill="rgb(252,177,25)" rx="2" ry="2" />
<text  x="1116.87" y="575.5" ></text>
</g>
<g >
<title>get_cpu_device (2 samples, 0.04%)</title><rect x="1179.9" y="565" width="0.4" height="15.0" fill="rgb(245,169,54)" rx="2" ry="2" />
<text  x="1182.88" y="575.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (23 samples, 0.43%)</title><rect x="914.7" y="629" width="5.1" height="15.0" fill="rgb(234,21,17)" rx="2" ry="2" />
<text  x="917.75" y="639.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (1 samples, 0.02%)</title><rect x="136.1" y="213" width="0.2" height="15.0" fill="rgb(246,176,35)" rx="2" ry="2" />
<text  x="139.07" y="223.5" ></text>
</g>
<g >
<title>__update_blocked_fair (4 samples, 0.07%)</title><rect x="1156.8" y="437" width="0.9" height="15.0" fill="rgb(241,157,52)" rx="2" ry="2" />
<text  x="1159.78" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (1 samples, 0.02%)</title><rect x="125.1" y="581" width="0.2" height="15.0" fill="rgb(208,90,25)" rx="2" ry="2" />
<text  x="128.07" y="591.5" ></text>
</g>
<g >
<title>NaClAvlTreeInsert (2 samples, 0.04%)</title><rect x="1051.8" y="725" width="0.5" height="15.0" fill="rgb(233,26,30)" rx="2" ry="2" />
<text  x="1054.82" y="735.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (89 samples, 1.66%)</title><rect x="1065.0" y="725" width="19.6" height="15.0" fill="rgb(234,6,51)" rx="2" ry="2" />
<text  x="1068.03" y="735.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.02%)</title><rect x="136.7" y="309" width="0.3" height="15.0" fill="rgb(247,102,39)" rx="2" ry="2" />
<text  x="139.74" y="319.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (2 samples, 0.04%)</title><rect x="123.5" y="709" width="0.5" height="15.0" fill="rgb(213,226,17)" rx="2" ry="2" />
<text  x="126.53" y="719.5" ></text>
</g>
<g >
<title>xas_alloc (1 samples, 0.02%)</title><rect x="1093.2" y="229" width="0.2" height="15.0" fill="rgb(250,176,27)" rx="2" ry="2" />
<text  x="1096.19" y="239.5" ></text>
</g>
<g >
<title>NaClMutexLock (26 samples, 0.48%)</title><rect x="914.3" y="645" width="5.7" height="15.0" fill="rgb(218,7,30)" rx="2" ry="2" />
<text  x="917.31" y="655.5" ></text>
</g>
<g >
<title>NaClDescUnmapUnsafe (2 samples, 0.04%)</title><rect x="126.0" y="629" width="0.4" height="15.0" fill="rgb(232,127,10)" rx="2" ry="2" />
<text  x="128.95" y="639.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.02%)</title><rect x="136.7" y="645" width="0.3" height="15.0" fill="rgb(220,194,51)" rx="2" ry="2" />
<text  x="139.74" y="655.5" ></text>
</g>
<g >
<title>arch_do_signal (32 samples, 0.60%)</title><rect x="1102.0" y="661" width="7.0" height="15.0" fill="rgb(225,187,36)" rx="2" ry="2" />
<text  x="1104.99" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.60%)</title><rect x="1102.0" y="741" width="7.0" height="15.0" fill="rgb(230,218,12)" rx="2" ry="2" />
<text  x="1104.99" y="751.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (2 samples, 0.04%)</title><rect x="1052.3" y="709" width="0.4" height="15.0" fill="rgb(254,53,15)" rx="2" ry="2" />
<text  x="1055.26" y="719.5" ></text>
</g>
<g >
<title>wake_up_process (2 samples, 0.04%)</title><rect x="1157.9" y="373" width="0.4" height="15.0" fill="rgb(214,95,32)" rx="2" ry="2" />
<text  x="1160.88" y="383.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="560.7" y="581" width="0.2" height="15.0" fill="rgb(212,120,36)" rx="2" ry="2" />
<text  x="563.73" y="591.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2 samples, 0.04%)</title><rect x="1157.9" y="341" width="0.4" height="15.0" fill="rgb(224,106,44)" rx="2" ry="2" />
<text  x="1160.88" y="351.5" ></text>
</g>
<g >
<title>event_function_call (65 samples, 1.21%)</title><rect x="14.6" y="517" width="14.3" height="15.0" fill="rgb(205,138,41)" rx="2" ry="2" />
<text  x="17.62" y="527.5" ></text>
</g>
<g >
<title>ovl_write_iter (15 samples, 0.28%)</title><rect x="29.8" y="485" width="3.3" height="15.0" fill="rgb(208,68,48)" rx="2" ry="2" />
<text  x="32.80" y="495.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (1 samples, 0.02%)</title><rect x="135.4" y="629" width="0.2" height="15.0" fill="rgb(205,205,4)" rx="2" ry="2" />
<text  x="138.41" y="639.5" ></text>
</g>
<g >
<title>jbd2__journal_start (1 samples, 0.02%)</title><rect x="33.1" y="501" width="0.2" height="15.0" fill="rgb(227,150,28)" rx="2" ry="2" />
<text  x="36.10" y="511.5" ></text>
</g>
<g >
<title>xas_create (1 samples, 0.02%)</title><rect x="1093.2" y="261" width="0.2" height="15.0" fill="rgb(212,68,18)" rx="2" ry="2" />
<text  x="1096.19" y="271.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (46 samples, 0.86%)</title><rect x="125.3" y="709" width="10.1" height="15.0" fill="rgb(234,171,44)" rx="2" ry="2" />
<text  x="128.29" y="719.5" ></text>
</g>
<g >
<title>NaClStoreMem (1 samples, 0.02%)</title><rect x="136.5" y="533" width="0.2" height="15.0" fill="rgb(208,23,20)" rx="2" ry="2" />
<text  x="139.52" y="543.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (38 samples, 0.71%)</title><rect x="1093.6" y="741" width="8.4" height="15.0" fill="rgb(246,35,0)" rx="2" ry="2" />
<text  x="1096.63" y="751.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (1,021 samples, 19.04%)</title><rect x="177.0" y="549" width="224.6" height="15.0" fill="rgb(253,56,14)" rx="2" ry="2" />
<text  x="180.00" y="559.5" >ringbuf::ring_buffer::RingBuf..</text>
</g>
<g >
<title>NaClLog (3 samples, 0.06%)</title><rect x="85.9" y="725" width="0.7" height="15.0" fill="rgb(208,216,11)" rx="2" ry="2" />
<text  x="88.91" y="735.5" ></text>
</g>
<g >
<title>cpuidle_enter (167 samples, 3.11%)</title><rect x="1141.8" y="597" width="36.8" height="15.0" fill="rgb(217,219,34)" rx="2" ry="2" />
<text  x="1144.81" y="607.5" >cpu..</text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.02%)</title><rect x="32.0" y="245" width="0.2" height="15.0" fill="rgb(235,216,1)" rx="2" ry="2" />
<text  x="35.00" y="255.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="137.0" y="549" width="0.2" height="15.0" fill="rgb(232,19,54)" rx="2" ry="2" />
<text  x="139.96" y="559.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (15 samples, 0.28%)</title><rect x="29.8" y="437" width="3.3" height="15.0" fill="rgb(227,101,43)" rx="2" ry="2" />
<text  x="32.80" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (22 samples, 0.41%)</title><rect x="745.3" y="533" width="4.9" height="15.0" fill="rgb(242,60,14)" rx="2" ry="2" />
<text  x="748.33" y="543.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (14 samples, 0.26%)</title><rect x="758.3" y="517" width="3.1" height="15.0" fill="rgb(248,51,17)" rx="2" ry="2" />
<text  x="761.31" y="527.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="125.1" y="293" width="0.2" height="15.0" fill="rgb(234,53,9)" rx="2" ry="2" />
<text  x="128.07" y="303.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.41%)</title><rect x="745.3" y="549" width="4.9" height="15.0" fill="rgb(223,108,2)" rx="2" ry="2" />
<text  x="748.33" y="559.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (1 samples, 0.02%)</title><rect x="1093.0" y="677" width="0.2" height="15.0" fill="rgb(227,225,45)" rx="2" ry="2" />
<text  x="1095.97" y="687.5" ></text>
</g>
<g >
<title>ext4_finish_bio (2 samples, 0.04%)</title><rect x="1111.9" y="629" width="0.4" height="15.0" fill="rgb(247,221,49)" rx="2" ry="2" />
<text  x="1114.89" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="136.3" y="181" width="0.2" height="15.0" fill="rgb(229,212,38)" rx="2" ry="2" />
<text  x="139.29" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.02%)</title><rect x="1093.0" y="389" width="0.2" height="15.0" fill="rgb(205,83,12)" rx="2" ry="2" />
<text  x="1095.97" y="399.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.06%)</title><rect x="173.3" y="549" width="0.6" height="15.0" fill="rgb(247,81,1)" rx="2" ry="2" />
<text  x="176.26" y="559.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="1092.5" y="693" width="0.2" height="15.0" fill="rgb(236,135,15)" rx="2" ry="2" />
<text  x="1095.53" y="703.5" ></text>
</g>
<g >
<title>scsi_softirq_done (2 samples, 0.04%)</title><rect x="1113.4" y="517" width="0.5" height="15.0" fill="rgb(250,15,23)" rx="2" ry="2" />
<text  x="1116.43" y="527.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (14 samples, 0.26%)</title><rect x="758.3" y="501" width="3.1" height="15.0" fill="rgb(253,154,26)" rx="2" ry="2" />
<text  x="761.31" y="511.5" ></text>
</g>
<g >
<title>CompareAndSwap (1 samples, 0.02%)</title><rect x="34.4" y="725" width="0.2" height="15.0" fill="rgb(246,154,26)" rx="2" ry="2" />
<text  x="37.42" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::open_c (1 samples, 0.02%)</title><rect x="1093.0" y="485" width="0.2" height="15.0" fill="rgb(219,29,16)" rx="2" ry="2" />
<text  x="1095.97" y="495.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.02%)</title><rect x="10.9" y="677" width="0.2" height="15.0" fill="rgb(224,52,38)" rx="2" ry="2" />
<text  x="13.88" y="687.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.11%)</title><rect x="788.0" y="485" width="1.3" height="15.0" fill="rgb(234,19,8)" rx="2" ry="2" />
<text  x="791.01" y="495.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.06%)</title><rect x="173.3" y="565" width="0.6" height="15.0" fill="rgb(220,45,31)" rx="2" ry="2" />
<text  x="176.26" y="575.5" ></text>
</g>
<g >
<title>__queue_work (2 samples, 0.04%)</title><rect x="1157.9" y="405" width="0.4" height="15.0" fill="rgb(226,161,18)" rx="2" ry="2" />
<text  x="1160.88" y="415.5" ></text>
</g>
<g >
<title>NaClSysWrite (1 samples, 0.02%)</title><rect x="561.4" y="709" width="0.2" height="15.0" fill="rgb(227,203,53)" rx="2" ry="2" />
<text  x="564.39" y="719.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="544.9" y="453" width="0.2" height="15.0" fill="rgb(239,1,30)" rx="2" ry="2" />
<text  x="547.88" y="463.5" ></text>
</g>
<g >
<title>find_busiest_group (5 samples, 0.09%)</title><rect x="1155.0" y="421" width="1.1" height="15.0" fill="rgb(248,208,9)" rx="2" ry="2" />
<text  x="1158.02" y="431.5" ></text>
</g>
<g >
<title>rcu_pending (1 samples, 0.02%)</title><rect x="1149.1" y="389" width="0.2" height="15.0" fill="rgb(237,22,34)" rx="2" ry="2" />
<text  x="1152.08" y="399.5" ></text>
</g>
</g>
</svg>
