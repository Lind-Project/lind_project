<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="518.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="501" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="501" > </text>
<g id="frames">
<g >
<title>perf-exec (1 samples, 0.08%)</title><rect x="288.8" y="453" width="1.0" height="15.0" fill="rgb(222,77,0)" rx="2" ry="2" />
<text  x="291.79" y="463.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u64 (1 samples, 0.08%)</title><rect x="1149.3" y="437" width="1.0" height="15.0" fill="rgb(219,121,18)" rx="2" ry="2" />
<text  x="1152.34" y="447.5" ></text>
</g>
<g >
<title>xas_set_mark (2 samples, 0.16%)</title><rect x="883.1" y="133" width="2.0" height="15.0" fill="rgb(213,19,37)" rx="2" ry="2" />
<text  x="886.14" y="143.5" ></text>
</g>
<g >
<title>newidle_balance (6 samples, 0.49%)</title><rect x="180.4" y="325" width="5.8" height="15.0" fill="rgb(208,0,49)" rx="2" ry="2" />
<text  x="183.37" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (101 samples, 8.29%)</title><rect x="190.0" y="421" width="97.8" height="15.0" fill="rgb(221,177,18)" rx="2" ry="2" />
<text  x="193.05" y="431.5" >x86_64_star..</text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="288.8" y="421" width="1.0" height="15.0" fill="rgb(216,168,52)" rx="2" ry="2" />
<text  x="291.79" y="431.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (6 samples, 0.49%)</title><rect x="841.5" y="181" width="5.8" height="15.0" fill="rgb(219,27,15)" rx="2" ry="2" />
<text  x="844.52" y="191.5" ></text>
</g>
<g >
<title>cpuidle_enter (17 samples, 1.39%)</title><rect x="1158.1" y="357" width="16.4" height="15.0" fill="rgb(253,139,1)" rx="2" ry="2" />
<text  x="1161.06" y="367.5" ></text>
</g>
<g >
<title>iput (8 samples, 0.66%)</title><rect x="1088.4" y="357" width="7.7" height="15.0" fill="rgb(246,217,52)" rx="2" ry="2" />
<text  x="1091.36" y="367.5" ></text>
</g>
<g >
<title>do_unlinkat (8 samples, 0.66%)</title><rect x="1088.4" y="373" width="7.7" height="15.0" fill="rgb(251,227,12)" rx="2" ry="2" />
<text  x="1091.36" y="383.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (59 samples, 4.84%)</title><rect x="193.0" y="309" width="57.1" height="15.0" fill="rgb(209,33,39)" rx="2" ry="2" />
<text  x="195.95" y="319.5" >cpuidl..</text>
</g>
<g >
<title>menu_update (1 samples, 0.08%)</title><rect x="243.3" y="261" width="1.0" height="15.0" fill="rgb(219,165,12)" rx="2" ry="2" />
<text  x="246.29" y="271.5" ></text>
</g>
<g >
<title>unmap_and_move (11 samples, 0.90%)</title><rect x="38.1" y="341" width="10.6" height="15.0" fill="rgb(242,226,30)" rx="2" ry="2" />
<text  x="41.07" y="351.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.08%)</title><rect x="881.2" y="85" width="1.0" height="15.0" fill="rgb(206,1,16)" rx="2" ry="2" />
<text  x="884.21" y="95.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="395.3" y="421" width="0.9" height="15.0" fill="rgb(243,111,46)" rx="2" ry="2" />
<text  x="398.27" y="431.5" ></text>
</g>
<g >
<title>crypto_shash_update (14 samples, 1.15%)</title><rect x="909.3" y="69" width="13.5" height="15.0" fill="rgb(209,66,21)" rx="2" ry="2" />
<text  x="912.28" y="79.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (7 samples, 0.57%)</title><rect x="867.7" y="197" width="6.7" height="15.0" fill="rgb(244,69,32)" rx="2" ry="2" />
<text  x="870.65" y="207.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.08%)</title><rect x="395.3" y="341" width="0.9" height="15.0" fill="rgb(213,19,13)" rx="2" ry="2" />
<text  x="398.27" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt (1 samples, 0.08%)</title><rect x="1151.3" y="389" width="0.9" height="15.0" fill="rgb(242,69,37)" rx="2" ry="2" />
<text  x="1154.28" y="399.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.08%)</title><rect x="835.7" y="133" width="1.0" height="15.0" fill="rgb(221,136,38)" rx="2" ry="2" />
<text  x="838.71" y="143.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (18 samples, 1.48%)</title><rect x="741.8" y="277" width="17.4" height="15.0" fill="rgb(250,64,21)" rx="2" ry="2" />
<text  x="744.81" y="287.5" ></text>
</g>
<g >
<title>__libc_lseek (49 samples, 4.02%)</title><rect x="683.7" y="437" width="47.5" height="15.0" fill="rgb(225,106,3)" rx="2" ry="2" />
<text  x="686.73" y="447.5" >__li..</text>
</g>
<g >
<title>perf_ioctl (1 samples, 0.08%)</title><rect x="351.7" y="389" width="1.0" height="15.0" fill="rgb(216,34,19)" rx="2" ry="2" />
<text  x="354.71" y="399.5" ></text>
</g>
<g >
<title>perf (65 samples, 5.33%)</title><rect x="289.8" y="453" width="62.9" height="15.0" fill="rgb(219,109,53)" rx="2" ry="2" />
<text  x="292.75" y="463.5" >perf</text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.16%)</title><rect x="954.8" y="309" width="1.9" height="15.0" fill="rgb(245,15,32)" rx="2" ry="2" />
<text  x="957.77" y="319.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (1 samples, 0.08%)</title><rect x="192.0" y="309" width="1.0" height="15.0" fill="rgb(243,88,54)" rx="2" ry="2" />
<text  x="194.99" y="319.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.08%)</title><rect x="350.7" y="261" width="1.0" height="15.0" fill="rgb(229,184,18)" rx="2" ry="2" />
<text  x="353.74" y="271.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (151 samples, 12.39%)</title><rect x="805.7" y="277" width="146.2" height="15.0" fill="rgb(217,6,35)" rx="2" ry="2" />
<text  x="808.70" y="287.5" >do_iter_readv_writev</text>
</g>
<g >
<title>xas_store (2 samples, 0.16%)</title><rect x="854.1" y="133" width="1.9" height="15.0" fill="rgb(245,23,3)" rx="2" ry="2" />
<text  x="857.10" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (8 samples, 0.66%)</title><rect x="694.4" y="421" width="7.7" height="15.0" fill="rgb(213,90,0)" rx="2" ry="2" />
<text  x="697.38" y="431.5" ></text>
</g>
<g >
<title>map_id_up (1 samples, 0.08%)</title><rect x="923.8" y="85" width="1.0" height="15.0" fill="rgb(207,212,29)" rx="2" ry="2" />
<text  x="926.80" y="95.5" ></text>
</g>
<g >
<title>read_tsc (3 samples, 0.25%)</title><rect x="281.0" y="293" width="2.9" height="15.0" fill="rgb(231,160,22)" rx="2" ry="2" />
<text  x="284.04" y="303.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (3 samples, 0.25%)</title><rect x="843.5" y="149" width="2.9" height="15.0" fill="rgb(214,19,15)" rx="2" ry="2" />
<text  x="846.45" y="159.5" ></text>
</g>
<g >
<title>iterate_tty_read (1 samples, 0.08%)</title><rect x="1157.1" y="325" width="1.0" height="15.0" fill="rgb(209,146,18)" rx="2" ry="2" />
<text  x="1160.09" y="335.5" ></text>
</g>
<g >
<title>clear_page_erms (4 samples, 0.33%)</title><rect x="856.0" y="117" width="3.9" height="15.0" fill="rgb(251,145,0)" rx="2" ry="2" />
<text  x="859.04" y="127.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.16%)</title><rect x="238.4" y="261" width="2.0" height="15.0" fill="rgb(249,195,54)" rx="2" ry="2" />
<text  x="241.45" y="271.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.08%)</title><rect x="853.1" y="133" width="1.0" height="15.0" fill="rgb(208,14,28)" rx="2" ry="2" />
<text  x="856.13" y="143.5" ></text>
</g>
<g >
<title>ext4_inode_csum (1 samples, 0.08%)</title><rect x="896.7" y="101" width="1.0" height="15.0" fill="rgb(244,20,20)" rx="2" ry="2" />
<text  x="899.69" y="111.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (1 samples, 0.08%)</title><rect x="350.7" y="213" width="1.0" height="15.0" fill="rgb(237,43,49)" rx="2" ry="2" />
<text  x="353.74" y="223.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (5 samples, 0.41%)</title><rect x="851.2" y="165" width="4.8" height="15.0" fill="rgb(208,25,16)" rx="2" ry="2" />
<text  x="854.20" y="175.5" ></text>
</g>
<g >
<title>vfs_iter_write (154 samples, 12.63%)</title><rect x="805.7" y="309" width="149.1" height="15.0" fill="rgb(232,22,17)" rx="2" ry="2" />
<text  x="808.70" y="319.5" >vfs_iter_write</text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (2 samples, 0.16%)</title><rect x="1150.3" y="405" width="1.9" height="15.0" fill="rgb(239,108,14)" rx="2" ry="2" />
<text  x="1153.31" y="415.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (2 samples, 0.16%)</title><rect x="176.5" y="357" width="1.9" height="15.0" fill="rgb(223,53,46)" rx="2" ry="2" />
<text  x="179.50" y="367.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (6 samples, 0.49%)</title><rect x="841.5" y="165" width="5.8" height="15.0" fill="rgb(240,55,32)" rx="2" ry="2" />
<text  x="844.52" y="175.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (246 samples, 20.18%)</title><rect x="49.7" y="437" width="238.1" height="15.0" fill="rgb(212,173,31)" rx="2" ry="2" />
<text  x="52.69" y="447.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 5.17%)</title><rect x="289.8" y="197" width="60.9" height="15.0" fill="rgb(230,54,39)" rx="2" ry="2" />
<text  x="292.75" y="207.5" >x86_pm..</text>
</g>
<g >
<title>NaClXCondVarBroadcast (14 samples, 1.15%)</title><rect x="482.4" y="437" width="13.5" height="15.0" fill="rgb(252,169,14)" rx="2" ry="2" />
<text  x="485.39" y="447.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (17 samples, 1.39%)</title><rect x="1158.1" y="325" width="16.4" height="15.0" fill="rgb(235,169,36)" rx="2" ry="2" />
<text  x="1161.06" y="335.5" ></text>
</g>
<g >
<title>__fdget_pos (2 samples, 0.16%)</title><rect x="734.1" y="357" width="1.9" height="15.0" fill="rgb(247,25,39)" rx="2" ry="2" />
<text  x="737.07" y="367.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (4 samples, 0.33%)</title><rect x="1139.7" y="437" width="3.8" height="15.0" fill="rgb(239,150,30)" rx="2" ry="2" />
<text  x="1142.66" y="447.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.08%)</title><rect x="275.2" y="181" width="1.0" height="15.0" fill="rgb(207,217,27)" rx="2" ry="2" />
<text  x="278.23" y="191.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.16%)</title><rect x="1175.5" y="373" width="1.9" height="15.0" fill="rgb(219,171,48)" rx="2" ry="2" />
<text  x="1178.48" y="383.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.08%)</title><rect x="233.6" y="245" width="1.0" height="15.0" fill="rgb(221,181,33)" rx="2" ry="2" />
<text  x="236.61" y="255.5" ></text>
</g>
<g >
<title>poll_idle (15 samples, 1.23%)</title><rect x="157.1" y="325" width="14.6" height="15.0" fill="rgb(211,194,20)" rx="2" ry="2" />
<text  x="160.14" y="335.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (1 samples, 0.08%)</title><rect x="719.5" y="325" width="1.0" height="15.0" fill="rgb(217,62,41)" rx="2" ry="2" />
<text  x="722.55" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="1086.4" y="405" width="1.0" height="15.0" fill="rgb(217,126,53)" rx="2" ry="2" />
<text  x="1089.42" y="415.5" ></text>
</g>
<g >
<title>__buffer_migrate_page.part.0 (4 samples, 0.33%)</title><rect x="39.0" y="277" width="3.9" height="15.0" fill="rgb(241,22,52)" rx="2" ry="2" />
<text  x="42.04" y="287.5" ></text>
</g>
<g >
<title>[unknown]  (7 samples, 0.57%)</title><rect x="532.7" y="437" width="6.8" height="15.0" fill="rgb(247,138,37)" rx="2" ry="2" />
<text  x="535.72" y="447.5" ></text>
</g>
<g >
<title>do_idle (21 samples, 1.72%)</title><rect x="1158.1" y="389" width="20.3" height="15.0" fill="rgb(241,107,11)" rx="2" ry="2" />
<text  x="1161.06" y="399.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.08%)</title><rect x="288.8" y="405" width="1.0" height="15.0" fill="rgb(216,186,42)" rx="2" ry="2" />
<text  x="291.79" y="415.5" ></text>
</g>
<g >
<title>ovl_real_fdget (4 samples, 0.33%)</title><rect x="716.6" y="341" width="3.9" height="15.0" fill="rgb(244,170,43)" rx="2" ry="2" />
<text  x="719.64" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (2 samples, 0.16%)</title><rect x="703.1" y="405" width="1.9" height="15.0" fill="rgb(218,95,32)" rx="2" ry="2" />
<text  x="706.09" y="415.5" ></text>
</g>
<g >
<title>pagecache_get_page (18 samples, 1.48%)</title><rect x="849.3" y="181" width="17.4" height="15.0" fill="rgb(227,45,39)" rx="2" ry="2" />
<text  x="852.26" y="191.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (12 samples, 0.98%)</title><rect x="1178.4" y="405" width="11.6" height="15.0" fill="rgb(221,103,49)" rx="2" ry="2" />
<text  x="1181.38" y="415.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (58 samples, 4.76%)</title><rect x="888.0" y="149" width="56.1" height="15.0" fill="rgb(220,99,38)" rx="2" ry="2" />
<text  x="890.98" y="159.5" >__ext..</text>
</g>
<g >
<title>evict (8 samples, 0.66%)</title><rect x="1088.4" y="309" width="7.7" height="15.0" fill="rgb(222,221,5)" rx="2" ry="2" />
<text  x="1091.36" y="319.5" ></text>
</g>
<g >
<title>NaClXMutexLock (15 samples, 1.23%)</title><rect x="495.9" y="437" width="14.6" height="15.0" fill="rgb(232,195,14)" rx="2" ry="2" />
<text  x="498.94" y="447.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.16%)</title><rect x="948.0" y="197" width="1.9" height="15.0" fill="rgb(218,111,13)" rx="2" ry="2" />
<text  x="951.00" y="207.5" ></text>
</g>
<g >
<title>remote_function (1 samples, 0.08%)</title><rect x="351.7" y="277" width="1.0" height="15.0" fill="rgb(230,177,32)" rx="2" ry="2" />
<text  x="354.71" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.08%)</title><rect x="1086.4" y="357" width="1.0" height="15.0" fill="rgb(247,158,33)" rx="2" ry="2" />
<text  x="1089.42" y="367.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.08%)</title><rect x="350.7" y="309" width="1.0" height="15.0" fill="rgb(207,100,35)" rx="2" ry="2" />
<text  x="353.74" y="319.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (1 samples, 0.08%)</title><rect x="720.5" y="341" width="1.0" height="15.0" fill="rgb(241,138,12)" rx="2" ry="2" />
<text  x="723.52" y="351.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.08%)</title><rect x="710.8" y="325" width="1.0" height="15.0" fill="rgb(208,126,14)" rx="2" ry="2" />
<text  x="713.84" y="335.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.08%)</title><rect x="840.5" y="101" width="1.0" height="15.0" fill="rgb(233,183,39)" rx="2" ry="2" />
<text  x="843.55" y="111.5" ></text>
</g>
<g >
<title>post_alloc_hook (1 samples, 0.08%)</title><rect x="47.8" y="277" width="0.9" height="15.0" fill="rgb(248,139,29)" rx="2" ry="2" />
<text  x="50.75" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.08%)</title><rect x="288.8" y="373" width="1.0" height="15.0" fill="rgb(231,4,29)" rx="2" ry="2" />
<text  x="291.79" y="383.5" ></text>
</g>
<g >
<title>NaClMutexLock (18 samples, 1.48%)</title><rect x="402.0" y="437" width="17.5" height="15.0" fill="rgb(252,192,40)" rx="2" ry="2" />
<text  x="405.04" y="447.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.08%)</title><rect x="287.8" y="341" width="1.0" height="15.0" fill="rgb(254,81,8)" rx="2" ry="2" />
<text  x="290.82" y="351.5" ></text>
</g>
<g >
<title>cpu_startup_entry (12 samples, 0.98%)</title><rect x="1178.4" y="341" width="11.6" height="15.0" fill="rgb(206,201,36)" rx="2" ry="2" />
<text  x="1181.38" y="351.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (3 samples, 0.25%)</title><rect x="1178.4" y="309" width="2.9" height="15.0" fill="rgb(213,93,20)" rx="2" ry="2" />
<text  x="1181.38" y="319.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (6 samples, 0.49%)</title><rect x="180.4" y="309" width="5.8" height="15.0" fill="rgb(253,122,37)" rx="2" ry="2" />
<text  x="183.37" y="319.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.08%)</title><rect x="185.2" y="277" width="1.0" height="15.0" fill="rgb(228,62,39)" rx="2" ry="2" />
<text  x="188.21" y="287.5" ></text>
</g>
<g >
<title>schedule_idle (7 samples, 0.57%)</title><rect x="179.4" y="373" width="6.8" height="15.0" fill="rgb(237,155,21)" rx="2" ry="2" />
<text  x="182.40" y="383.5" ></text>
</g>
<g >
<title>dispatcher (4 samples, 0.33%)</title><rect x="1104.8" y="437" width="3.9" height="15.0" fill="rgb(252,173,51)" rx="2" ry="2" />
<text  x="1107.82" y="447.5" ></text>
</g>
<g >
<title>split_map_pages (1 samples, 0.08%)</title><rect x="47.8" y="293" width="0.9" height="15.0" fill="rgb(245,11,12)" rx="2" ry="2" />
<text  x="50.75" y="303.5" ></text>
</g>
<g >
<title>ovl_d_real (1 samples, 0.08%)</title><rect x="738.9" y="309" width="1.0" height="15.0" fill="rgb(243,216,35)" rx="2" ry="2" />
<text  x="741.91" y="319.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (110 samples, 9.02%)</title><rect x="50.7" y="325" width="106.4" height="15.0" fill="rgb(212,3,5)" rx="2" ry="2" />
<text  x="53.66" y="335.5" >mwait_idle_wi..</text>
</g>
<g >
<title>cpuidle_enter (46 samples, 3.77%)</title><rect x="195.9" y="293" width="44.5" height="15.0" fill="rgb(221,136,45)" rx="2" ry="2" />
<text  x="198.86" y="303.5" >cpui..</text>
</g>
<g >
<title>update_load_avg (1 samples, 0.08%)</title><rect x="1156.1" y="261" width="1.0" height="15.0" fill="rgb(233,170,38)" rx="2" ry="2" />
<text  x="1159.12" y="271.5" ></text>
</g>
<g >
<title>llist_reverse_order (1 samples, 0.08%)</title><rect x="178.4" y="357" width="1.0" height="15.0" fill="rgb(211,113,47)" rx="2" ry="2" />
<text  x="181.43" y="367.5" ></text>
</g>
<g >
<title>ovl_write_iter (167 samples, 13.70%)</title><rect x="793.1" y="325" width="161.7" height="15.0" fill="rgb(244,193,54)" rx="2" ry="2" />
<text  x="796.12" y="335.5" >ovl_write_iter</text>
</g>
<g >
<title>dput (8 samples, 0.66%)</title><rect x="1088.4" y="261" width="7.7" height="15.0" fill="rgb(236,159,24)" rx="2" ry="2" />
<text  x="1091.36" y="271.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.08%)</title><rect x="287.8" y="357" width="1.0" height="15.0" fill="rgb(220,55,17)" rx="2" ry="2" />
<text  x="290.82" y="367.5" ></text>
</g>
<g >
<title>NaClLog (4 samples, 0.33%)</title><rect x="398.2" y="437" width="3.8" height="15.0" fill="rgb(249,66,43)" rx="2" ry="2" />
<text  x="401.17" y="447.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.08%)</title><rect x="837.6" y="117" width="1.0" height="15.0" fill="rgb(254,82,33)" rx="2" ry="2" />
<text  x="840.65" y="127.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.08%)</title><rect x="288.8" y="341" width="1.0" height="15.0" fill="rgb(222,90,18)" rx="2" ry="2" />
<text  x="291.79" y="351.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.08%)</title><rect x="819.3" y="213" width="0.9" height="15.0" fill="rgb(250,82,49)" rx="2" ry="2" />
<text  x="822.25" y="223.5" ></text>
</g>
<g >
<title>poll_idle (37 samples, 3.04%)</title><rect x="198.8" y="261" width="35.8" height="15.0" fill="rgb(251,195,14)" rx="2" ry="2" />
<text  x="201.76" y="271.5" >pol..</text>
</g>
<g >
<title>compact_zone (12 samples, 0.98%)</title><rect x="37.1" y="373" width="11.6" height="15.0" fill="rgb(206,106,43)" rx="2" ry="2" />
<text  x="40.10" y="383.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.08%)</title><rect x="1086.4" y="325" width="1.0" height="15.0" fill="rgb(205,81,35)" rx="2" ry="2" />
<text  x="1089.42" y="335.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (101 samples, 8.29%)</title><rect x="989.6" y="437" width="97.8" height="15.0" fill="rgb(224,203,5)" rx="2" ry="2" />
<text  x="992.62" y="447.5" >__pthread_m..</text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.08%)</title><rect x="1156.1" y="405" width="1.0" height="15.0" fill="rgb(241,18,36)" rx="2" ry="2" />
<text  x="1159.12" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="1103.8" y="437" width="1.0" height="15.0" fill="rgb(205,179,4)" rx="2" ry="2" />
<text  x="1106.85" y="447.5" ></text>
</g>
<g >
<title>dentry_kill (8 samples, 0.66%)</title><rect x="1088.4" y="245" width="7.7" height="15.0" fill="rgb(245,132,53)" rx="2" ry="2" />
<text  x="1091.36" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.16%)</title><rect x="1108.7" y="437" width="1.9" height="15.0" fill="rgb(221,126,54)" rx="2" ry="2" />
<text  x="1111.69" y="447.5" ></text>
</g>
<g >
<title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.08%)</title><rect x="1151.3" y="373" width="0.9" height="15.0" fill="rgb(224,17,46)" rx="2" ry="2" />
<text  x="1154.28" y="383.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (2 samples, 0.16%)</title><rect x="838.6" y="101" width="1.9" height="15.0" fill="rgb(208,31,31)" rx="2" ry="2" />
<text  x="841.61" y="111.5" ></text>
</g>
<g >
<title>do_idle (11 samples, 0.90%)</title><rect x="1178.4" y="325" width="10.6" height="15.0" fill="rgb(205,50,52)" rx="2" ry="2" />
<text  x="1181.38" y="335.5" ></text>
</g>
<g >
<title>kick_ilb (2 samples, 0.16%)</title><rect x="1187.1" y="229" width="1.9" height="15.0" fill="rgb(242,120,53)" rx="2" ry="2" />
<text  x="1190.10" y="239.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (3 samples, 0.25%)</title><rect x="838.6" y="117" width="2.9" height="15.0" fill="rgb(227,62,7)" rx="2" ry="2" />
<text  x="841.61" y="127.5" ></text>
</g>
<g >
<title>_raw_read_lock (3 samples, 0.25%)</title><rect x="825.1" y="165" width="2.9" height="15.0" fill="rgb(217,45,29)" rx="2" ry="2" />
<text  x="828.06" y="175.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.08%)</title><rect x="1174.5" y="357" width="1.0" height="15.0" fill="rgb(212,80,41)" rx="2" ry="2" />
<text  x="1177.51" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6 samples, 0.49%)</title><rect x="856.0" y="149" width="5.8" height="15.0" fill="rgb(237,32,22)" rx="2" ry="2" />
<text  x="859.04" y="159.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.08%)</title><rect x="1177.4" y="373" width="1.0" height="15.0" fill="rgb(227,25,19)" rx="2" ry="2" />
<text  x="1180.42" y="383.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (1 samples, 0.08%)</title><rect x="397.2" y="437" width="1.0" height="15.0" fill="rgb(218,8,23)" rx="2" ry="2" />
<text  x="400.20" y="447.5" ></text>
</g>
<g >
<title>ext4_nonda_switch (1 samples, 0.08%)</title><rect x="848.3" y="197" width="1.0" height="15.0" fill="rgb(254,16,25)" rx="2" ry="2" />
<text  x="851.29" y="207.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (5 samples, 0.41%)</title><rect x="244.3" y="261" width="4.8" height="15.0" fill="rgb(233,57,41)" rx="2" ry="2" />
<text  x="247.26" y="271.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (3 samples, 0.25%)</title><rect x="479.5" y="437" width="2.9" height="15.0" fill="rgb(215,109,19)" rx="2" ry="2" />
<text  x="482.48" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (5 samples, 0.41%)</title><rect x="836.7" y="133" width="4.8" height="15.0" fill="rgb(228,98,1)" rx="2" ry="2" />
<text  x="839.68" y="143.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (3 samples, 0.25%)</title><rect x="816.3" y="213" width="3.0" height="15.0" fill="rgb(230,143,16)" rx="2" ry="2" />
<text  x="819.35" y="223.5" ></text>
</g>
<g >
<title>remote_function (63 samples, 5.17%)</title><rect x="289.8" y="261" width="60.9" height="15.0" fill="rgb(226,198,50)" rx="2" ry="2" />
<text  x="292.75" y="271.5" >remote..</text>
</g>
<g >
<title>__perf_event_enable (1 samples, 0.08%)</title><rect x="351.7" y="245" width="1.0" height="15.0" fill="rgb(228,6,8)" rx="2" ry="2" />
<text  x="354.71" y="255.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="355.6" y="437" width="0.9" height="15.0" fill="rgb(253,91,32)" rx="2" ry="2" />
<text  x="358.58" y="447.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.08%)</title><rect x="41.9" y="245" width="1.0" height="15.0" fill="rgb(237,180,49)" rx="2" ry="2" />
<text  x="44.94" y="255.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.08%)</title><rect x="853.1" y="117" width="1.0" height="15.0" fill="rgb(237,78,37)" rx="2" ry="2" />
<text  x="856.13" y="127.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.08%)</title><rect x="950.9" y="229" width="1.0" height="15.0" fill="rgb(249,212,20)" rx="2" ry="2" />
<text  x="953.90" y="239.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.08%)</title><rect x="48.7" y="341" width="1.0" height="15.0" fill="rgb(218,27,51)" rx="2" ry="2" />
<text  x="51.72" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (2 samples, 0.16%)</title><rect x="247.2" y="245" width="1.9" height="15.0" fill="rgb(235,26,30)" rx="2" ry="2" />
<text  x="250.16" y="255.5" ></text>
</g>
<g >
<title>DynArrayGet (19 samples, 1.56%)</title><rect x="361.4" y="437" width="18.4" height="15.0" fill="rgb(243,15,52)" rx="2" ry="2" />
<text  x="364.39" y="447.5" ></text>
</g>
<g >
<title>lind (1 samples, 0.08%)</title><rect x="287.8" y="453" width="1.0" height="15.0" fill="rgb(248,26,53)" rx="2" ry="2" />
<text  x="290.82" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (194 samples, 15.91%)</title><rect x="771.8" y="421" width="187.8" height="15.0" fill="rgb(234,179,37)" rx="2" ry="2" />
<text  x="774.82" y="431.5" >entry_SYSCALL_64_after_h..</text>
</g>
<g >
<title>__unmap_and_move (6 samples, 0.49%)</title><rect x="39.0" y="325" width="5.8" height="15.0" fill="rgb(252,207,25)" rx="2" ry="2" />
<text  x="42.04" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.08%)</title><rect x="1157.1" y="405" width="1.0" height="15.0" fill="rgb(208,4,21)" rx="2" ry="2" />
<text  x="1160.09" y="415.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (3 samples, 0.25%)</title><rect x="266.5" y="229" width="2.9" height="15.0" fill="rgb(223,28,43)" rx="2" ry="2" />
<text  x="269.52" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (24 samples, 1.97%)</title><rect x="705.0" y="389" width="23.3" height="15.0" fill="rgb(250,42,48)" rx="2" ry="2" />
<text  x="708.03" y="399.5" >_..</text>
</g>
<g >
<title>ext4_fc_track_inode (1 samples, 0.08%)</title><rect x="888.9" y="133" width="1.0" height="15.0" fill="rgb(243,176,43)" rx="2" ry="2" />
<text  x="891.95" y="143.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.16%)</title><rect x="1096.1" y="437" width="1.9" height="15.0" fill="rgb(226,52,24)" rx="2" ry="2" />
<text  x="1099.10" y="447.5" ></text>
</g>
<g >
<title>ovl_real_fdget (2 samples, 0.16%)</title><rect x="801.8" y="309" width="2.0" height="15.0" fill="rgb(211,189,20)" rx="2" ry="2" />
<text  x="804.83" y="319.5" ></text>
</g>
<g >
<title>do_idle (1 samples, 0.08%)</title><rect x="11.0" y="389" width="0.9" height="15.0" fill="rgb(228,53,9)" rx="2" ry="2" />
<text  x="13.97" y="399.5" ></text>
</g>
<g >
<title>arch_call_rest_init (12 samples, 0.98%)</title><rect x="1178.4" y="373" width="11.6" height="15.0" fill="rgb(232,48,34)" rx="2" ry="2" />
<text  x="1181.38" y="383.5" ></text>
</g>
<g >
<title>arch_call_rest_init (101 samples, 8.29%)</title><rect x="190.0" y="373" width="97.8" height="15.0" fill="rgb(220,27,35)" rx="2" ry="2" />
<text  x="193.05" y="383.5" >arch_call_r..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.08%)</title><rect x="764.1" y="389" width="0.9" height="15.0" fill="rgb(253,220,48)" rx="2" ry="2" />
<text  x="767.08" y="399.5" ></text>
</g>
<g >
<title>kick_ilb (2 samples, 0.16%)</title><rect x="184.2" y="293" width="2.0" height="15.0" fill="rgb(205,10,6)" rx="2" ry="2" />
<text  x="187.24" y="303.5" ></text>
</g>
<g >
<title>start_secondary (145 samples, 11.89%)</title><rect x="49.7" y="421" width="140.3" height="15.0" fill="rgb(209,193,12)" rx="2" ry="2" />
<text  x="52.69" y="431.5" >start_secondary</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="351.7" y="437" width="1.0" height="15.0" fill="rgb(250,199,36)" rx="2" ry="2" />
<text  x="354.71" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_free (3 samples, 0.25%)</title><rect x="867.7" y="165" width="2.9" height="15.0" fill="rgb(234,37,51)" rx="2" ry="2" />
<text  x="870.65" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.66%)</title><rect x="1088.4" y="421" width="7.7" height="15.0" fill="rgb(216,167,52)" rx="2" ry="2" />
<text  x="1091.36" y="431.5" ></text>
</g>
<g >
<title>xas_start (2 samples, 0.16%)</title><rect x="864.7" y="149" width="2.0" height="15.0" fill="rgb(220,19,19)" rx="2" ry="2" />
<text  x="867.75" y="159.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (2 samples, 0.16%)</title><rect x="1150.3" y="437" width="1.9" height="15.0" fill="rgb(241,208,27)" rx="2" ry="2" />
<text  x="1153.31" y="447.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (18 samples, 1.48%)</title><rect x="510.5" y="437" width="17.4" height="15.0" fill="rgb(232,151,5)" rx="2" ry="2" />
<text  x="513.46" y="447.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (4 samples, 0.33%)</title><rect x="905.4" y="69" width="3.9" height="15.0" fill="rgb(250,136,11)" rx="2" ry="2" />
<text  x="908.41" y="79.5" ></text>
</g>
<g >
<title>migrate_page_states (1 samples, 0.08%)</title><rect x="41.0" y="245" width="0.9" height="15.0" fill="rgb(251,138,31)" rx="2" ry="2" />
<text  x="43.98" y="255.5" ></text>
</g>
<g >
<title>__brelse (1 samples, 0.08%)</title><rect x="890.9" y="117" width="1.0" height="15.0" fill="rgb(236,119,16)" rx="2" ry="2" />
<text  x="893.89" y="127.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (5 samples, 0.41%)</title><rect x="926.7" y="117" width="4.8" height="15.0" fill="rgb(245,203,3)" rx="2" ry="2" />
<text  x="929.70" y="127.5" ></text>
</g>
<g >
<title>ext4_fc_track_template (1 samples, 0.08%)</title><rect x="924.8" y="101" width="0.9" height="15.0" fill="rgb(238,140,31)" rx="2" ry="2" />
<text  x="927.77" y="111.5" ></text>
</g>
<g >
<title>iput.part.0 (8 samples, 0.66%)</title><rect x="1088.4" y="181" width="7.7" height="15.0" fill="rgb(225,186,23)" rx="2" ry="2" />
<text  x="1091.36" y="191.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (1 samples, 0.08%)</title><rect x="682.8" y="437" width="0.9" height="15.0" fill="rgb(219,114,26)" rx="2" ry="2" />
<text  x="685.76" y="447.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (1 samples, 0.08%)</title><rect x="1152.2" y="437" width="1.0" height="15.0" fill="rgb(252,12,27)" rx="2" ry="2" />
<text  x="1155.25" y="447.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.08%)</title><rect x="778.6" y="341" width="1.0" height="15.0" fill="rgb(232,104,48)" rx="2" ry="2" />
<text  x="781.60" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="350.7" y="421" width="1.0" height="15.0" fill="rgb(241,20,10)" rx="2" ry="2" />
<text  x="353.74" y="431.5" ></text>
</g>
<g >
<title>cpu_startup_entry (101 samples, 8.29%)</title><rect x="190.0" y="341" width="97.8" height="15.0" fill="rgb(219,193,39)" rx="2" ry="2" />
<text  x="193.05" y="351.5" >cpu_startup..</text>
</g>
<g >
<title>ext4_mark_iloc_dirty (38 samples, 3.12%)</title><rect x="889.9" y="133" width="36.8" height="15.0" fill="rgb(225,7,45)" rx="2" ry="2" />
<text  x="892.92" y="143.5" >ext..</text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.08%)</title><rect x="730.2" y="421" width="1.0" height="15.0" fill="rgb(233,218,17)" rx="2" ry="2" />
<text  x="733.20" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.08%)</title><rect x="36.1" y="405" width="1.0" height="15.0" fill="rgb(223,109,25)" rx="2" ry="2" />
<text  x="39.14" y="415.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.16%)</title><rect x="1181.3" y="309" width="1.9" height="15.0" fill="rgb(234,65,33)" rx="2" ry="2" />
<text  x="1184.29" y="319.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.08%)</title><rect x="172.6" y="309" width="1.0" height="15.0" fill="rgb(252,42,8)" rx="2" ry="2" />
<text  x="175.63" y="319.5" ></text>
</g>
<g >
<title>ksys_read (31 samples, 2.54%)</title><rect x="734.1" y="373" width="30.0" height="15.0" fill="rgb(209,165,30)" rx="2" ry="2" />
<text  x="737.07" y="383.5" >ks..</text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.08%)</title><rect x="11.0" y="341" width="0.9" height="15.0" fill="rgb(247,173,32)" rx="2" ry="2" />
<text  x="13.97" y="351.5" ></text>
</g>
<g >
<title>__fdget_pos (3 samples, 0.25%)</title><rect x="776.7" y="357" width="2.9" height="15.0" fill="rgb(247,167,9)" rx="2" ry="2" />
<text  x="779.66" y="367.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.08%)</title><rect x="829.9" y="165" width="1.0" height="15.0" fill="rgb(254,51,6)" rx="2" ry="2" />
<text  x="832.90" y="175.5" ></text>
</g>
<g >
<title>iput_final (8 samples, 0.66%)</title><rect x="1088.4" y="165" width="7.7" height="15.0" fill="rgb(250,13,42)" rx="2" ry="2" />
<text  x="1091.36" y="175.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.16%)</title><rect x="828.0" y="165" width="1.9" height="15.0" fill="rgb(233,8,16)" rx="2" ry="2" />
<text  x="830.97" y="175.5" ></text>
</g>
<g >
<title>arch_cpu_idle_exit (1 samples, 0.08%)</title><rect x="190.0" y="325" width="1.0" height="15.0" fill="rgb(222,55,48)" rx="2" ry="2" />
<text  x="193.05" y="335.5" ></text>
</g>
<g >
<title>migrate_pages (11 samples, 0.90%)</title><rect x="38.1" y="357" width="10.6" height="15.0" fill="rgb(214,143,33)" rx="2" ry="2" />
<text  x="41.07" y="367.5" ></text>
</g>
<g >
<title>find_get_pages_contig (7 samples, 0.57%)</title><rect x="752.5" y="197" width="6.7" height="15.0" fill="rgb(206,10,50)" rx="2" ry="2" />
<text  x="755.46" y="207.5" ></text>
</g>
<g >
<title>security_file_permission (2 samples, 0.16%)</title><rect x="760.2" y="261" width="1.9" height="15.0" fill="rgb(233,228,40)" rx="2" ry="2" />
<text  x="763.21" y="271.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::log_metadata (1 samples, 0.08%)</title><rect x="1134.8" y="437" width="1.0" height="15.0" fill="rgb(210,216,36)" rx="2" ry="2" />
<text  x="1137.82" y="447.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.08%)</title><rect x="1157.1" y="357" width="1.0" height="15.0" fill="rgb(238,116,1)" rx="2" ry="2" />
<text  x="1160.09" y="367.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (6 samples, 0.49%)</title><rect x="867.7" y="181" width="5.8" height="15.0" fill="rgb(237,112,1)" rx="2" ry="2" />
<text  x="870.65" y="191.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.08%)</title><rect x="350.7" y="325" width="1.0" height="15.0" fill="rgb(211,60,49)" rx="2" ry="2" />
<text  x="353.74" y="335.5" ></text>
</g>
<g >
<title>llist_reverse_order (1 samples, 0.08%)</title><rect x="1175.5" y="357" width="0.9" height="15.0" fill="rgb(236,125,46)" rx="2" ry="2" />
<text  x="1178.48" y="367.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (5 samples, 0.41%)</title><rect x="926.7" y="101" width="4.8" height="15.0" fill="rgb(206,168,50)" rx="2" ry="2" />
<text  x="929.70" y="111.5" ></text>
</g>
<g >
<title>schedule_idle (6 samples, 0.49%)</title><rect x="1183.2" y="309" width="5.8" height="15.0" fill="rgb(233,71,26)" rx="2" ry="2" />
<text  x="1186.22" y="319.5" ></text>
</g>
<g >
<title>override_creds (1 samples, 0.08%)</title><rect x="715.7" y="325" width="0.9" height="15.0" fill="rgb(205,140,2)" rx="2" ry="2" />
<text  x="718.68" y="335.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (128 samples, 10.50%)</title><rect x="50.7" y="341" width="123.9" height="15.0" fill="rgb(232,21,27)" rx="2" ry="2" />
<text  x="53.66" y="351.5" >cpuidle_enter_s..</text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.08%)</title><rect x="1088.4" y="85" width="0.9" height="15.0" fill="rgb(248,146,2)" rx="2" ry="2" />
<text  x="1091.36" y="95.5" ></text>
</g>
<g >
<title>__libc_write (203 samples, 16.65%)</title><rect x="765.0" y="437" width="196.6" height="15.0" fill="rgb(207,42,31)" rx="2" ry="2" />
<text  x="768.05" y="447.5" >__libc_write</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="36.1" y="437" width="1.0" height="15.0" fill="rgb(216,3,26)" rx="2" ry="2" />
<text  x="39.14" y="447.5" ></text>
</g>
<g >
<title>menu_select (8 samples, 0.66%)</title><rect x="241.4" y="277" width="7.7" height="15.0" fill="rgb(233,203,46)" rx="2" ry="2" />
<text  x="244.35" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.08%)</title><rect x="733.1" y="405" width="1.0" height="15.0" fill="rgb(220,104,37)" rx="2" ry="2" />
<text  x="736.10" y="415.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.08%)</title><rect x="1181.3" y="293" width="1.0" height="15.0" fill="rgb(205,199,31)" rx="2" ry="2" />
<text  x="1184.29" y="303.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.08%)</title><rect x="274.3" y="197" width="0.9" height="15.0" fill="rgb(237,9,37)" rx="2" ry="2" />
<text  x="277.27" y="207.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (2 samples, 0.16%)</title><rect x="844.4" y="133" width="2.0" height="15.0" fill="rgb(211,203,0)" rx="2" ry="2" />
<text  x="847.42" y="143.5" ></text>
</g>
<g >
<title>proactive_compact_node (12 samples, 0.98%)</title><rect x="37.1" y="389" width="11.6" height="15.0" fill="rgb(231,55,22)" rx="2" ry="2" />
<text  x="40.10" y="399.5" ></text>
</g>
<g >
<title>migrate_page_states (1 samples, 0.08%)</title><rect x="43.9" y="245" width="0.9" height="15.0" fill="rgb(250,65,8)" rx="2" ry="2" />
<text  x="46.88" y="255.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.16%)</title><rect x="776.7" y="341" width="1.9" height="15.0" fill="rgb(215,14,36)" rx="2" ry="2" />
<text  x="779.66" y="351.5" ></text>
</g>
<g >
<title>generic_file_buffered_read_get_pages (7 samples, 0.57%)</title><rect x="752.5" y="213" width="6.7" height="15.0" fill="rgb(212,135,53)" rx="2" ry="2" />
<text  x="755.46" y="223.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.08%)</title><rect x="192.0" y="293" width="1.0" height="15.0" fill="rgb(242,87,37)" rx="2" ry="2" />
<text  x="194.99" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34 samples, 2.79%)</title><rect x="732.1" y="421" width="32.9" height="15.0" fill="rgb(207,159,12)" rx="2" ry="2" />
<text  x="735.13" y="431.5" >en..</text>
</g>
<g >
<title>vfs_read (1 samples, 0.08%)</title><rect x="1157.1" y="373" width="1.0" height="15.0" fill="rgb(235,22,44)" rx="2" ry="2" />
<text  x="1160.09" y="383.5" ></text>
</g>
<g >
<title>migrate_page_move_mapping (1 samples, 0.08%)</title><rect x="41.9" y="261" width="1.0" height="15.0" fill="rgb(233,54,21)" rx="2" ry="2" />
<text  x="44.94" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (3 samples, 0.25%)</title><rect x="281.0" y="309" width="2.9" height="15.0" fill="rgb(210,125,17)" rx="2" ry="2" />
<text  x="284.04" y="319.5" ></text>
</g>
<g >
<title>ovl_read_iter (24 samples, 1.97%)</title><rect x="738.9" y="325" width="23.2" height="15.0" fill="rgb(226,153,24)" rx="2" ry="2" />
<text  x="741.91" y="335.5" >o..</text>
</g>
<g >
<title>current_time (1 samples, 0.08%)</title><rect x="739.9" y="261" width="0.9" height="15.0" fill="rgb(238,19,52)" rx="2" ry="2" />
<text  x="742.88" y="271.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1 samples, 0.08%)</title><rect x="1178.4" y="261" width="1.0" height="15.0" fill="rgb(246,85,49)" rx="2" ry="2" />
<text  x="1181.38" y="271.5" ></text>
</g>
<g >
<title>security_file_permission (2 samples, 0.16%)</title><rect x="952.8" y="261" width="2.0" height="15.0" fill="rgb(250,85,51)" rx="2" ry="2" />
<text  x="955.84" y="271.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.08%)</title><rect x="803.8" y="309" width="0.9" height="15.0" fill="rgb(227,60,40)" rx="2" ry="2" />
<text  x="806.77" y="319.5" ></text>
</g>
<g >
<title>schedule_idle (23 samples, 1.89%)</title><rect x="257.8" y="309" width="22.3" height="15.0" fill="rgb(253,61,13)" rx="2" ry="2" />
<text  x="260.81" y="319.5" >s..</text>
</g>
<g >
<title>__getblk_gfp (1 samples, 0.08%)</title><rect x="943.2" y="101" width="0.9" height="15.0" fill="rgb(226,113,8)" rx="2" ry="2" />
<text  x="946.16" y="111.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.08%)</title><rect x="1086.4" y="293" width="1.0" height="15.0" fill="rgb(241,40,14)" rx="2" ry="2" />
<text  x="1089.42" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (192 samples, 15.75%)</title><rect x="773.8" y="405" width="185.8" height="15.0" fill="rgb(209,179,35)" rx="2" ry="2" />
<text  x="776.76" y="415.5" >do_syscall_64</text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.08%)</title><rect x="350.7" y="245" width="1.0" height="15.0" fill="rgb(249,199,51)" rx="2" ry="2" />
<text  x="353.74" y="255.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.16%)</title><rect x="931.5" y="117" width="2.0" height="15.0" fill="rgb(240,120,2)" rx="2" ry="2" />
<text  x="934.54" y="127.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.08%)</title><rect x="1177.4" y="325" width="1.0" height="15.0" fill="rgb(249,72,37)" rx="2" ry="2" />
<text  x="1180.42" y="335.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.08%)</title><rect x="268.5" y="213" width="0.9" height="15.0" fill="rgb(245,109,38)" rx="2" ry="2" />
<text  x="271.46" y="223.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.08%)</title><rect x="1156.1" y="341" width="1.0" height="15.0" fill="rgb(234,77,13)" rx="2" ry="2" />
<text  x="1159.12" y="351.5" ></text>
</g>
<g >
<title>get_timespec64 (1 samples, 0.08%)</title><rect x="36.1" y="389" width="1.0" height="15.0" fill="rgb(240,9,10)" rx="2" ry="2" />
<text  x="39.14" y="399.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.16%)</title><rect x="959.6" y="421" width="2.0" height="15.0" fill="rgb(220,197,50)" rx="2" ry="2" />
<text  x="962.61" y="431.5" ></text>
</g>
<g >
<title>newidle_balance (5 samples, 0.41%)</title><rect x="1184.2" y="261" width="4.8" height="15.0" fill="rgb(248,0,40)" rx="2" ry="2" />
<text  x="1187.19" y="271.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (8 samples, 0.66%)</title><rect x="744.7" y="197" width="7.8" height="15.0" fill="rgb(206,2,3)" rx="2" ry="2" />
<text  x="747.72" y="207.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.25%)</title><rect x="284.9" y="325" width="2.9" height="15.0" fill="rgb(234,93,12)" rx="2" ry="2" />
<text  x="287.91" y="335.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.08%)</title><rect x="860.9" y="117" width="0.9" height="15.0" fill="rgb(238,81,26)" rx="2" ry="2" />
<text  x="863.88" y="127.5" ></text>
</g>
<g >
<title>start_kernel (101 samples, 8.29%)</title><rect x="190.0" y="389" width="97.8" height="15.0" fill="rgb(239,73,54)" rx="2" ry="2" />
<text  x="193.05" y="399.5" >start_kernel</text>
</g>
<g >
<title>memset_erms (1 samples, 0.08%)</title><rect x="847.3" y="181" width="1.0" height="15.0" fill="rgb(232,227,13)" rx="2" ry="2" />
<text  x="850.33" y="191.5" ></text>
</g>
<g >
<title>_perf_event_enable (1 samples, 0.08%)</title><rect x="351.7" y="341" width="1.0" height="15.0" fill="rgb(218,144,50)" rx="2" ry="2" />
<text  x="354.71" y="351.5" ></text>
</g>
<g >
<title>lind_read (1 samples, 0.08%)</title><rect x="1115.5" y="437" width="0.9" height="15.0" fill="rgb(208,225,18)" rx="2" ry="2" />
<text  x="1118.46" y="447.5" ></text>
</g>
<g >
<title>do_fault_around (1 samples, 0.08%)</title><rect x="288.8" y="309" width="1.0" height="15.0" fill="rgb(245,48,38)" rx="2" ry="2" />
<text  x="291.79" y="319.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.08%)</title><rect x="175.5" y="261" width="1.0" height="15.0" fill="rgb(252,88,48)" rx="2" ry="2" />
<text  x="178.53" y="271.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (4 samples, 0.33%)</title><rect x="275.2" y="213" width="3.9" height="15.0" fill="rgb(212,194,7)" rx="2" ry="2" />
<text  x="278.23" y="223.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.08%)</title><rect x="1189.0" y="325" width="1.0" height="15.0" fill="rgb(213,94,40)" rx="2" ry="2" />
<text  x="1192.03" y="335.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.08%)</title><rect x="287.8" y="309" width="1.0" height="15.0" fill="rgb(214,54,11)" rx="2" ry="2" />
<text  x="290.82" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.08%)</title><rect x="1086.4" y="309" width="1.0" height="15.0" fill="rgb(254,119,12)" rx="2" ry="2" />
<text  x="1089.42" y="319.5" ></text>
</g>
<g >
<title>ext4_evict_inode (8 samples, 0.66%)</title><rect x="1088.4" y="133" width="7.7" height="15.0" fill="rgb(209,77,33)" rx="2" ry="2" />
<text  x="1091.36" y="143.5" ></text>
</g>
<g >
<title>NaClSysWaitpid (40 samples, 3.28%)</title><rect x="440.8" y="437" width="38.7" height="15.0" fill="rgb(230,91,50)" rx="2" ry="2" />
<text  x="443.76" y="447.5" >NaC..</text>
</g>
<g >
<title>do_syscall_64 (26 samples, 2.13%)</title><rect x="705.0" y="405" width="25.2" height="15.0" fill="rgb(207,147,46)" rx="2" ry="2" />
<text  x="708.03" y="415.5" >d..</text>
</g>
<g >
<title>__schedule (6 samples, 0.49%)</title><rect x="1183.2" y="293" width="5.8" height="15.0" fill="rgb(239,116,54)" rx="2" ry="2" />
<text  x="1186.22" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.08%)</title><rect x="958.6" y="373" width="1.0" height="15.0" fill="rgb(232,59,21)" rx="2" ry="2" />
<text  x="961.65" y="383.5" ></text>
</g>
<g >
<title>NaClCondVarBroadcast (14 samples, 1.15%)</title><rect x="382.7" y="437" width="13.5" height="15.0" fill="rgb(238,173,44)" rx="2" ry="2" />
<text  x="385.68" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.08%)</title><rect x="855.1" y="85" width="0.9" height="15.0" fill="rgb(225,169,30)" rx="2" ry="2" />
<text  x="858.07" y="95.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.08%)</title><rect x="48.7" y="373" width="1.0" height="15.0" fill="rgb(210,85,6)" rx="2" ry="2" />
<text  x="51.72" y="383.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.08%)</title><rect x="240.4" y="277" width="1.0" height="15.0" fill="rgb(220,108,15)" rx="2" ry="2" />
<text  x="243.39" y="287.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.08%)</title><rect x="1176.4" y="357" width="1.0" height="15.0" fill="rgb(227,47,7)" rx="2" ry="2" />
<text  x="1179.45" y="367.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.08%)</title><rect x="175.5" y="277" width="1.0" height="15.0" fill="rgb(208,183,2)" rx="2" ry="2" />
<text  x="178.53" y="287.5" ></text>
</g>
<g >
<title>ovl_override_creds (1 samples, 0.08%)</title><rect x="792.1" y="325" width="1.0" height="15.0" fill="rgb(223,179,39)" rx="2" ry="2" />
<text  x="795.15" y="335.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.08%)</title><rect x="1086.4" y="245" width="1.0" height="15.0" fill="rgb(214,115,24)" rx="2" ry="2" />
<text  x="1089.42" y="255.5" ></text>
</g>
<g >
<title>ServiceWorker_t (2 samples, 0.16%)</title><rect x="10.0" y="453" width="1.9" height="15.0" fill="rgb(222,17,46)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>[sel_ldr] (3 samples, 0.25%)</title><rect x="529.8" y="437" width="2.9" height="15.0" fill="rgb(241,187,14)" rx="2" ry="2" />
<text  x="532.82" y="447.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.08%)</title><rect x="48.7" y="389" width="1.0" height="15.0" fill="rgb(228,72,14)" rx="2" ry="2" />
<text  x="51.72" y="399.5" ></text>
</g>
<g >
<title>security_file_permission (2 samples, 0.16%)</title><rect x="954.8" y="325" width="1.9" height="15.0" fill="rgb(241,173,31)" rx="2" ry="2" />
<text  x="957.77" y="335.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.08%)</title><rect x="764.1" y="357" width="0.9" height="15.0" fill="rgb(243,191,8)" rx="2" ry="2" />
<text  x="767.08" y="367.5" ></text>
</g>
<g >
<title>revert_creds (3 samples, 0.25%)</title><rect x="725.4" y="357" width="2.9" height="15.0" fill="rgb(212,70,41)" rx="2" ry="2" />
<text  x="728.36" y="367.5" ></text>
</g>
<g >
<title>generic_exec_single (63 samples, 5.17%)</title><rect x="289.8" y="277" width="60.9" height="15.0" fill="rgb(227,29,27)" rx="2" ry="2" />
<text  x="292.75" y="287.5" >generi..</text>
</g>
<g >
<title>find_next_and_bit (1 samples, 0.08%)</title><rect x="184.2" y="277" width="1.0" height="15.0" fill="rgb(209,72,0)" rx="2" ry="2" />
<text  x="187.24" y="287.5" ></text>
</g>
<g >
<title>ovl_d_real (2 samples, 0.16%)</title><rect x="801.8" y="293" width="2.0" height="15.0" fill="rgb(245,127,36)" rx="2" ry="2" />
<text  x="804.83" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.08%)</title><rect x="764.1" y="373" width="0.9" height="15.0" fill="rgb(226,55,18)" rx="2" ry="2" />
<text  x="767.08" y="383.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1 samples, 0.08%)</title><rect x="11.0" y="405" width="0.9" height="15.0" fill="rgb(232,91,13)" rx="2" ry="2" />
<text  x="13.97" y="415.5" ></text>
</g>
<g >
<title>create_empty_buffers (6 samples, 0.49%)</title><rect x="835.7" y="181" width="5.8" height="15.0" fill="rgb(246,12,46)" rx="2" ry="2" />
<text  x="838.71" y="191.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.08%)</title><rect x="233.6" y="229" width="1.0" height="15.0" fill="rgb(224,59,48)" rx="2" ry="2" />
<text  x="236.61" y="239.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (48 samples, 3.94%)</title><rect x="820.2" y="213" width="46.5" height="15.0" fill="rgb(251,57,34)" rx="2" ry="2" />
<text  x="823.22" y="223.5" >ext4..</text>
</g>
<g >
<title>perf_ioctl (63 samples, 5.17%)</title><rect x="289.8" y="373" width="60.9" height="15.0" fill="rgb(225,189,42)" rx="2" ry="2" />
<text  x="292.75" y="383.5" >perf_i..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.08%)</title><rect x="395.3" y="357" width="0.9" height="15.0" fill="rgb(233,151,45)" rx="2" ry="2" />
<text  x="398.27" y="367.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.08%)</title><rect x="246.2" y="245" width="1.0" height="15.0" fill="rgb(209,103,54)" rx="2" ry="2" />
<text  x="249.19" y="255.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.08%)</title><rect x="188.1" y="373" width="1.0" height="15.0" fill="rgb(234,218,26)" rx="2" ry="2" />
<text  x="191.11" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.08%)</title><rect x="175.5" y="309" width="1.0" height="15.0" fill="rgb(240,139,0)" rx="2" ry="2" />
<text  x="178.53" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.08%)</title><rect x="287.8" y="405" width="1.0" height="15.0" fill="rgb(214,53,15)" rx="2" ry="2" />
<text  x="290.82" y="415.5" ></text>
</g>
<g >
<title>native_write_msr (63 samples, 5.17%)</title><rect x="289.8" y="165" width="60.9" height="15.0" fill="rgb(238,39,47)" rx="2" ry="2" />
<text  x="292.75" y="175.5" >native..</text>
</g>
<g >
<title>__pthread_cond_broadcast (24 samples, 1.97%)</title><rect x="961.6" y="437" width="23.2" height="15.0" fill="rgb(214,150,36)" rx="2" ry="2" />
<text  x="964.55" y="447.5" >_..</text>
</g>
<g >
<title>pick_next_task_fair (6 samples, 0.49%)</title><rect x="180.4" y="341" width="5.8" height="15.0" fill="rgb(211,194,29)" rx="2" ry="2" />
<text  x="183.37" y="351.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (2 samples, 0.16%)</title><rect x="823.1" y="181" width="2.0" height="15.0" fill="rgb(208,131,44)" rx="2" ry="2" />
<text  x="826.13" y="191.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.08%)</title><rect x="1156.1" y="373" width="1.0" height="15.0" fill="rgb(234,186,35)" rx="2" ry="2" />
<text  x="1159.12" y="383.5" ></text>
</g>
<g >
<title>start_secondary (1 samples, 0.08%)</title><rect x="11.0" y="421" width="0.9" height="15.0" fill="rgb(227,214,7)" rx="2" ry="2" />
<text  x="13.97" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="1086.4" y="421" width="1.0" height="15.0" fill="rgb(227,22,23)" rx="2" ry="2" />
<text  x="1089.42" y="431.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (2 samples, 0.16%)</title><rect x="1131.0" y="437" width="1.9" height="15.0" fill="rgb(228,51,13)" rx="2" ry="2" />
<text  x="1133.95" y="447.5" ></text>
</g>
<g >
<title>do_iter_read (21 samples, 1.72%)</title><rect x="741.8" y="293" width="20.3" height="15.0" fill="rgb(217,58,30)" rx="2" ry="2" />
<text  x="744.81" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (9 samples, 0.74%)</title><rect x="662.4" y="437" width="8.7" height="15.0" fill="rgb(249,82,46)" rx="2" ry="2" />
<text  x="665.44" y="447.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (11 samples, 0.90%)</title><rect x="933.5" y="117" width="10.6" height="15.0" fill="rgb(232,214,49)" rx="2" ry="2" />
<text  x="936.48" y="127.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (17 samples, 1.39%)</title><rect x="742.8" y="229" width="16.4" height="15.0" fill="rgb(225,34,49)" rx="2" ry="2" />
<text  x="745.78" y="239.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.08%)</title><rect x="739.9" y="293" width="0.9" height="15.0" fill="rgb(214,49,17)" rx="2" ry="2" />
<text  x="742.88" y="303.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (33 samples, 2.71%)</title><rect x="1158.1" y="437" width="31.9" height="15.0" fill="rgb(215,68,9)" rx="2" ry="2" />
<text  x="1161.06" y="447.5" >se..</text>
</g>
<g >
<title>rw_verify_area (2 samples, 0.16%)</title><rect x="760.2" y="277" width="1.9" height="15.0" fill="rgb(251,106,22)" rx="2" ry="2" />
<text  x="763.21" y="287.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.08%)</title><rect x="287.8" y="277" width="1.0" height="15.0" fill="rgb(245,10,41)" rx="2" ry="2" />
<text  x="290.82" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="288.8" y="389" width="1.0" height="15.0" fill="rgb(222,39,37)" rx="2" ry="2" />
<text  x="291.79" y="399.5" ></text>
</g>
<g >
<title>smp_call_function_single (63 samples, 5.17%)</title><rect x="289.8" y="293" width="60.9" height="15.0" fill="rgb(207,122,54)" rx="2" ry="2" />
<text  x="292.75" y="303.5" >smp_ca..</text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.08%)</title><rect x="842.5" y="149" width="1.0" height="15.0" fill="rgb(254,159,12)" rx="2" ry="2" />
<text  x="845.49" y="159.5" ></text>
</g>
<g >
<title>kthread (13 samples, 1.07%)</title><rect x="37.1" y="421" width="12.6" height="15.0" fill="rgb(233,192,40)" rx="2" ry="2" />
<text  x="40.10" y="431.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.16%)</title><rect x="952.8" y="245" width="2.0" height="15.0" fill="rgb(213,166,5)" rx="2" ry="2" />
<text  x="955.84" y="255.5" ></text>
</g>
<g >
<title>ksys_lseek (24 samples, 1.97%)</title><rect x="705.0" y="373" width="23.3" height="15.0" fill="rgb(238,63,2)" rx="2" ry="2" />
<text  x="708.03" y="383.5" >k..</text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.08%)</title><rect x="837.6" y="101" width="1.0" height="15.0" fill="rgb(252,11,34)" rx="2" ry="2" />
<text  x="840.65" y="111.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="1101.9" y="437" width="1.9" height="15.0" fill="rgb(205,112,43)" rx="2" ry="2" />
<text  x="1104.91" y="447.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (1 samples, 0.08%)</title><rect x="396.2" y="437" width="1.0" height="15.0" fill="rgb(232,85,10)" rx="2" ry="2" />
<text  x="399.23" y="447.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 5.17%)</title><rect x="289.8" y="213" width="60.9" height="15.0" fill="rgb(243,142,13)" rx="2" ry="2" />
<text  x="292.75" y="223.5" >ctx_re..</text>
</g>
<g >
<title>grab_cache_page_write_begin (18 samples, 1.48%)</title><rect x="849.3" y="197" width="17.4" height="15.0" fill="rgb(210,162,30)" rx="2" ry="2" />
<text  x="852.26" y="207.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.08%)</title><rect x="1086.4" y="341" width="1.0" height="15.0" fill="rgb(249,196,28)" rx="2" ry="2" />
<text  x="1089.42" y="351.5" ></text>
</g>
<g >
<title>rcu_all_qs (2 samples, 0.16%)</title><rect x="823.1" y="165" width="2.0" height="15.0" fill="rgb(218,136,53)" rx="2" ry="2" />
<text  x="826.13" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="541.4" y="437" width="1.0" height="15.0" fill="rgb(217,16,3)" rx="2" ry="2" />
<text  x="544.44" y="447.5" ></text>
</g>
<g >
<title>ovl_override_creds (1 samples, 0.08%)</title><rect x="715.7" y="341" width="0.9" height="15.0" fill="rgb(216,127,34)" rx="2" ry="2" />
<text  x="718.68" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (29 samples, 2.38%)</title><rect x="702.1" y="421" width="28.1" height="15.0" fill="rgb(254,82,14)" rx="2" ry="2" />
<text  x="705.12" y="431.5" >e..</text>
</g>
<g >
<title>native_write_msr (1 samples, 0.08%)</title><rect x="351.7" y="181" width="1.0" height="15.0" fill="rgb(218,66,14)" rx="2" ry="2" />
<text  x="354.71" y="191.5" ></text>
</g>
<g >
<title>add_transaction_credits (1 samples, 0.08%)</title><rect x="832.8" y="149" width="1.0" height="15.0" fill="rgb(243,114,41)" rx="2" ry="2" />
<text  x="835.81" y="159.5" ></text>
</g>
<g >
<title>rw_verify_area (2 samples, 0.16%)</title><rect x="954.8" y="341" width="1.9" height="15.0" fill="rgb(227,90,34)" rx="2" ry="2" />
<text  x="957.77" y="351.5" ></text>
</g>
<g >
<title>security_file_permission (2 samples, 0.16%)</title><rect x="762.1" y="325" width="2.0" height="15.0" fill="rgb(246,92,0)" rx="2" ry="2" />
<text  x="765.14" y="335.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.08%)</title><rect x="735.0" y="341" width="1.0" height="15.0" fill="rgb(212,228,2)" rx="2" ry="2" />
<text  x="738.04" y="351.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (17 samples, 1.39%)</title><rect x="1158.1" y="341" width="16.4" height="15.0" fill="rgb(226,130,26)" rx="2" ry="2" />
<text  x="1161.06" y="351.5" ></text>
</g>
<g >
<title>alloc_pages_current (6 samples, 0.49%)</title><rect x="856.0" y="165" width="5.8" height="15.0" fill="rgb(227,129,14)" rx="2" ry="2" />
<text  x="859.04" y="175.5" ></text>
</g>
<g >
<title>destroy_inode (8 samples, 0.66%)</title><rect x="1088.4" y="293" width="7.7" height="15.0" fill="rgb(245,90,34)" rx="2" ry="2" />
<text  x="1091.36" y="303.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.08%)</title><rect x="1177.4" y="293" width="1.0" height="15.0" fill="rgb(210,86,15)" rx="2" ry="2" />
<text  x="1180.42" y="303.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.08%)</title><rect x="710.8" y="341" width="1.0" height="15.0" fill="rgb(220,17,15)" rx="2" ry="2" />
<text  x="713.84" y="351.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.08%)</title><rect x="807.6" y="261" width="1.0" height="15.0" fill="rgb(246,187,6)" rx="2" ry="2" />
<text  x="810.64" y="271.5" ></text>
</g>
<g >
<title>__ioctl (63 samples, 5.17%)</title><rect x="289.8" y="437" width="60.9" height="15.0" fill="rgb(249,110,1)" rx="2" ry="2" />
<text  x="292.75" y="447.5" >__ioctl</text>
</g>
<g >
<title>do_fault (1 samples, 0.08%)</title><rect x="288.8" y="325" width="1.0" height="15.0" fill="rgb(249,63,37)" rx="2" ry="2" />
<text  x="291.79" y="335.5" ></text>
</g>
<g >
<title>_perf_ioctl (63 samples, 5.17%)</title><rect x="289.8" y="357" width="60.9" height="15.0" fill="rgb(218,208,40)" rx="2" ry="2" />
<text  x="292.75" y="367.5" >_perf_..</text>
</g>
<g >
<title>tick_nohz_idle_enter (2 samples, 0.16%)</title><rect x="186.2" y="373" width="1.9" height="15.0" fill="rgb(238,99,11)" rx="2" ry="2" />
<text  x="189.18" y="383.5" ></text>
</g>
<g >
<title>local_touch_nmi (1 samples, 0.08%)</title><rect x="256.8" y="309" width="1.0" height="15.0" fill="rgb(252,163,18)" rx="2" ry="2" />
<text  x="259.84" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.16%)</title><rect x="871.5" y="117" width="2.0" height="15.0" fill="rgb(254,1,31)" rx="2" ry="2" />
<text  x="874.53" y="127.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (4 samples, 0.33%)</title><rect x="1135.8" y="437" width="3.9" height="15.0" fill="rgb(226,91,6)" rx="2" ry="2" />
<text  x="1138.79" y="447.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.08%)</title><rect x="1088.4" y="53" width="0.9" height="15.0" fill="rgb(246,192,9)" rx="2" ry="2" />
<text  x="1091.36" y="63.5" ></text>
</g>
<g >
<title>ext4_fc_track_inode (2 samples, 0.16%)</title><rect x="924.8" y="117" width="1.9" height="15.0" fill="rgb(214,87,25)" rx="2" ry="2" />
<text  x="927.77" y="127.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.08%)</title><rect x="728.3" y="389" width="0.9" height="15.0" fill="rgb(205,86,11)" rx="2" ry="2" />
<text  x="731.26" y="399.5" ></text>
</g>
<g >
<title>__find_get_block (2 samples, 0.16%)</title><rect x="941.2" y="69" width="2.0" height="15.0" fill="rgb(225,21,12)" rx="2" ry="2" />
<text  x="944.22" y="79.5" ></text>
</g>
<g >
<title>migrate_page_copy (1 samples, 0.08%)</title><rect x="43.9" y="261" width="0.9" height="15.0" fill="rgb(254,8,40)" rx="2" ry="2" />
<text  x="46.88" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (63 samples, 5.17%)</title><rect x="289.8" y="405" width="60.9" height="15.0" fill="rgb(207,92,21)" rx="2" ry="2" />
<text  x="292.75" y="415.5" >do_sys..</text>
</g>
<g >
<title>iov_iter_advance (2 samples, 0.16%)</title><rect x="944.1" y="213" width="2.0" height="15.0" fill="rgb(252,66,52)" rx="2" ry="2" />
<text  x="947.13" y="223.5" ></text>
</g>
<g >
<title>__strncmp_avx2 (1 samples, 0.08%)</title><rect x="288.8" y="437" width="1.0" height="15.0" fill="rgb(232,206,46)" rx="2" ry="2" />
<text  x="291.79" y="447.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.08%)</title><rect x="762.1" y="309" width="1.0" height="15.0" fill="rgb(233,101,24)" rx="2" ry="2" />
<text  x="765.14" y="319.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.08%)</title><rect x="888.0" y="133" width="0.9" height="15.0" fill="rgb(226,119,18)" rx="2" ry="2" />
<text  x="890.98" y="143.5" ></text>
</g>
<g >
<title>compaction_alloc (4 samples, 0.33%)</title><rect x="44.8" y="325" width="3.9" height="15.0" fill="rgb(212,90,2)" rx="2" ry="2" />
<text  x="47.85" y="335.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.08%)</title><rect x="287.8" y="293" width="1.0" height="15.0" fill="rgb(234,147,13)" rx="2" ry="2" />
<text  x="290.82" y="303.5" ></text>
</g>
<g >
<title>do_idle (145 samples, 11.89%)</title><rect x="49.7" y="389" width="140.3" height="15.0" fill="rgb(207,103,6)" rx="2" ry="2" />
<text  x="52.69" y="399.5" >do_idle</text>
</g>
<g >
<title>xas_alloc (1 samples, 0.08%)</title><rect x="855.1" y="101" width="0.9" height="15.0" fill="rgb(220,189,5)" rx="2" ry="2" />
<text  x="858.07" y="111.5" ></text>
</g>
<g >
<title>event_function_call (63 samples, 5.17%)</title><rect x="289.8" y="309" width="60.9" height="15.0" fill="rgb(231,154,24)" rx="2" ry="2" />
<text  x="292.75" y="319.5" >event_..</text>
</g>
<g >
<title>mark_buffer_dirty (6 samples, 0.49%)</title><rect x="879.3" y="165" width="5.8" height="15.0" fill="rgb(213,18,39)" rx="2" ry="2" />
<text  x="882.27" y="175.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (5 samples, 0.41%)</title><rect x="851.2" y="149" width="4.8" height="15.0" fill="rgb(247,179,32)" rx="2" ry="2" />
<text  x="854.20" y="159.5" ></text>
</g>
<g >
<title>ext4_has_free_clusters (1 samples, 0.08%)</title><rect x="843.5" y="117" width="0.9" height="15.0" fill="rgb(250,7,29)" rx="2" ry="2" />
<text  x="846.45" y="127.5" ></text>
</g>
<g >
<title>CompareAndSwap (3 samples, 0.25%)</title><rect x="358.5" y="437" width="2.9" height="15.0" fill="rgb(217,136,32)" rx="2" ry="2" />
<text  x="361.48" y="447.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (12 samples, 0.98%)</title><rect x="1178.4" y="421" width="11.6" height="15.0" fill="rgb(221,76,42)" rx="2" ry="2" />
<text  x="1181.38" y="431.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.25%)</title><rect x="176.5" y="373" width="2.9" height="15.0" fill="rgb(225,82,54)" rx="2" ry="2" />
<text  x="179.50" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.08%)</title><rect x="36.1" y="421" width="1.0" height="15.0" fill="rgb(207,108,18)" rx="2" ry="2" />
<text  x="39.14" y="431.5" ></text>
</g>
<g >
<title>ktime_get (2 samples, 0.16%)</title><rect x="186.2" y="357" width="1.9" height="15.0" fill="rgb(218,102,1)" rx="2" ry="2" />
<text  x="189.18" y="367.5" ></text>
</g>
<g >
<title>vfs_write (179 samples, 14.68%)</title><rect x="783.4" y="357" width="173.3" height="15.0" fill="rgb(241,86,8)" rx="2" ry="2" />
<text  x="786.44" y="367.5" >vfs_write</text>
</g>
<g >
<title>__libc_write (1 samples, 0.08%)</title><rect x="350.7" y="437" width="1.0" height="15.0" fill="rgb(247,136,45)" rx="2" ry="2" />
<text  x="353.74" y="447.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.08%)</title><rect x="761.2" y="245" width="0.9" height="15.0" fill="rgb(205,88,20)" rx="2" ry="2" />
<text  x="764.17" y="255.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.08%)</title><rect x="828.9" y="149" width="1.0" height="15.0" fill="rgb(207,173,27)" rx="2" ry="2" />
<text  x="831.93" y="159.5" ></text>
</g>
<g >
<title>down_write (1 samples, 0.08%)</title><rect x="809.6" y="229" width="0.9" height="15.0" fill="rgb(225,24,3)" rx="2" ry="2" />
<text  x="812.57" y="239.5" ></text>
</g>
<g >
<title>migrate_page_copy (1 samples, 0.08%)</title><rect x="41.0" y="261" width="0.9" height="15.0" fill="rgb(235,41,42)" rx="2" ry="2" />
<text  x="43.98" y="271.5" ></text>
</g>
<g >
<title>llist_add_batch (3 samples, 0.25%)</title><rect x="276.2" y="197" width="2.9" height="15.0" fill="rgb(240,173,4)" rx="2" ry="2" />
<text  x="279.20" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_read (31 samples, 2.54%)</title><rect x="734.1" y="389" width="30.0" height="15.0" fill="rgb(214,35,8)" rx="2" ry="2" />
<text  x="737.07" y="399.5" >__..</text>
</g>
<g >
<title>perf_event_for_each_child (1 samples, 0.08%)</title><rect x="351.7" y="357" width="1.0" height="15.0" fill="rgb(243,153,49)" rx="2" ry="2" />
<text  x="354.71" y="367.5" ></text>
</g>
<g >
<title>cpuidle_enter (1 samples, 0.08%)</title><rect x="11.0" y="357" width="0.9" height="15.0" fill="rgb(243,50,1)" rx="2" ry="2" />
<text  x="13.97" y="367.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.08%)</title><rect x="881.2" y="117" width="1.0" height="15.0" fill="rgb(213,171,27)" rx="2" ry="2" />
<text  x="884.21" y="127.5" ></text>
</g>
<g >
<title>ovl_d_real (1 samples, 0.08%)</title><rect x="799.9" y="309" width="1.0" height="15.0" fill="rgb(245,16,1)" rx="2" ry="2" />
<text  x="802.89" y="319.5" ></text>
</g>
<g >
<title>llist_reverse_order (3 samples, 0.25%)</title><rect x="252.0" y="293" width="2.9" height="15.0" fill="rgb(239,203,27)" rx="2" ry="2" />
<text  x="255.00" y="303.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (148 samples, 12.14%)</title><rect x="808.6" y="261" width="143.3" height="15.0" fill="rgb(215,98,5)" rx="2" ry="2" />
<text  x="811.61" y="271.5" >ext4_file_write_iter</text>
</g>
<g >
<title>propagate_protected_usage (1 samples, 0.08%)</title><rect x="38.1" y="277" width="0.9" height="15.0" fill="rgb(213,155,4)" rx="2" ry="2" />
<text  x="41.07" y="287.5" ></text>
</g>
<g >
<title>alloc_buffer_head (6 samples, 0.49%)</title><rect x="835.7" y="149" width="5.8" height="15.0" fill="rgb(239,102,35)" rx="2" ry="2" />
<text  x="838.71" y="159.5" ></text>
</g>
<g >
<title>start_secondary (21 samples, 1.72%)</title><rect x="1158.1" y="421" width="20.3" height="15.0" fill="rgb(225,64,36)" rx="2" ry="2" />
<text  x="1161.06" y="431.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (5 samples, 0.41%)</title><rect x="1091.3" y="85" width="4.8" height="15.0" fill="rgb(211,227,37)" rx="2" ry="2" />
<text  x="1094.26" y="95.5" ></text>
</g>
<g >
<title>aa_file_perm (1 samples, 0.08%)</title><rect x="953.8" y="229" width="1.0" height="15.0" fill="rgb(211,210,2)" rx="2" ry="2" />
<text  x="956.81" y="239.5" ></text>
</g>
<g >
<title>ovl_llseek (13 samples, 1.07%)</title><rect x="712.8" y="357" width="12.6" height="15.0" fill="rgb(245,215,47)" rx="2" ry="2" />
<text  x="715.77" y="367.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.08%)</title><rect x="1156.1" y="309" width="1.0" height="15.0" fill="rgb(217,42,34)" rx="2" ry="2" />
<text  x="1159.12" y="319.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (131 samples, 10.75%)</title><rect x="49.7" y="373" width="126.8" height="15.0" fill="rgb(235,135,7)" rx="2" ry="2" />
<text  x="52.69" y="383.5" >cpuidle_idle_call</text>
</g>
<g >
<title>map_id_up (1 samples, 0.08%)</title><rect x="922.8" y="85" width="1.0" height="15.0" fill="rgb(229,54,5)" rx="2" ry="2" />
<text  x="925.83" y="95.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (2 samples, 0.16%)</title><rect x="182.3" y="293" width="1.9" height="15.0" fill="rgb(245,225,0)" rx="2" ry="2" />
<text  x="185.31" y="303.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.08%)</title><rect x="288.8" y="293" width="1.0" height="15.0" fill="rgb(252,196,10)" rx="2" ry="2" />
<text  x="291.79" y="303.5" ></text>
</g>
<g >
<title>isolate_migratepages_block (1 samples, 0.08%)</title><rect x="37.1" y="341" width="1.0" height="15.0" fill="rgb(240,54,12)" rx="2" ry="2" />
<text  x="40.10" y="351.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.08%)</title><rect x="1157.1" y="389" width="1.0" height="15.0" fill="rgb(242,116,12)" rx="2" ry="2" />
<text  x="1160.09" y="399.5" ></text>
</g>
<g >
<title>n_tty_read (1 samples, 0.08%)</title><rect x="1157.1" y="309" width="1.0" height="15.0" fill="rgb(212,17,20)" rx="2" ry="2" />
<text  x="1160.09" y="319.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@plt (5 samples, 0.41%)</title><rect x="1118.4" y="437" width="4.8" height="15.0" fill="rgb(227,5,28)" rx="2" ry="2" />
<text  x="1121.37" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (8 samples, 0.66%)</title><rect x="1088.4" y="389" width="7.7" height="15.0" fill="rgb(227,22,22)" rx="2" ry="2" />
<text  x="1091.36" y="399.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (58 samples, 4.76%)</title><rect x="888.0" y="165" width="56.1" height="15.0" fill="rgb(211,153,31)" rx="2" ry="2" />
<text  x="890.98" y="175.5" >ext4_..</text>
</g>
<g >
<title>ext4_inode_journal_mode (1 samples, 0.08%)</title><rect x="925.7" y="101" width="1.0" height="15.0" fill="rgb(240,153,30)" rx="2" ry="2" />
<text  x="928.73" y="111.5" ></text>
</g>
<g >
<title>__libc_read (35 samples, 2.87%)</title><rect x="731.2" y="437" width="33.8" height="15.0" fill="rgb(207,200,52)" rx="2" ry="2" />
<text  x="734.16" y="447.5" >__..</text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.08%)</title><rect x="395.3" y="389" width="0.9" height="15.0" fill="rgb(240,77,36)" rx="2" ry="2" />
<text  x="398.27" y="399.5" ></text>
</g>
<g >
<title>event_function (1 samples, 0.08%)</title><rect x="351.7" y="261" width="1.0" height="15.0" fill="rgb(238,190,20)" rx="2" ry="2" />
<text  x="354.71" y="271.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (61 samples, 5.00%)</title><rect x="885.1" y="181" width="59.0" height="15.0" fill="rgb(227,5,8)" rx="2" ry="2" />
<text  x="888.08" y="191.5" >__mark..</text>
</g>
<g >
<title>BaseExtentionFromREX (1 samples, 0.08%)</title><rect x="528.9" y="421" width="0.9" height="15.0" fill="rgb(254,143,46)" rx="2" ry="2" />
<text  x="531.85" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.08%)</title><rect x="287.8" y="421" width="1.0" height="15.0" fill="rgb(220,91,27)" rx="2" ry="2" />
<text  x="290.82" y="431.5" ></text>
</g>
<g >
<title>generic_perform_write (142 samples, 11.65%)</title><rect x="813.4" y="229" width="137.5" height="15.0" fill="rgb(243,161,34)" rx="2" ry="2" />
<text  x="816.45" y="239.5" >generic_perform_w..</text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.08%)</title><rect x="772.8" y="405" width="1.0" height="15.0" fill="rgb(245,178,4)" rx="2" ry="2" />
<text  x="775.79" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (6 samples, 0.49%)</title><rect x="671.1" y="437" width="5.9" height="15.0" fill="rgb(235,37,23)" rx="2" ry="2" />
<text  x="674.15" y="447.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.08%)</title><rect x="1156.1" y="357" width="1.0" height="15.0" fill="rgb(248,62,14)" rx="2" ry="2" />
<text  x="1159.12" y="367.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (1 samples, 0.08%)</title><rect x="843.5" y="133" width="0.9" height="15.0" fill="rgb(249,221,12)" rx="2" ry="2" />
<text  x="846.45" y="143.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.08%)</title><rect x="1086.4" y="277" width="1.0" height="15.0" fill="rgb(212,64,48)" rx="2" ry="2" />
<text  x="1089.42" y="287.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (19 samples, 1.56%)</title><rect x="419.5" y="437" width="18.4" height="15.0" fill="rgb(224,0,31)" rx="2" ry="2" />
<text  x="422.47" y="447.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.08%)</title><rect x="173.6" y="309" width="1.0" height="15.0" fill="rgb(223,24,37)" rx="2" ry="2" />
<text  x="176.59" y="319.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.08%)</title><rect x="956.7" y="389" width="1.0" height="15.0" fill="rgb(232,197,4)" rx="2" ry="2" />
<text  x="959.71" y="399.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.08%)</title><rect x="737.0" y="357" width="0.9" height="15.0" fill="rgb(217,90,26)" rx="2" ry="2" />
<text  x="739.97" y="367.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.08%)</title><rect x="279.1" y="293" width="1.0" height="15.0" fill="rgb(253,209,33)" rx="2" ry="2" />
<text  x="282.11" y="303.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.08%)</title><rect x="763.1" y="309" width="1.0" height="15.0" fill="rgb(248,45,7)" rx="2" ry="2" />
<text  x="766.11" y="319.5" ></text>
</g>
<g >
<title>generic_file_read_iter (17 samples, 1.39%)</title><rect x="742.8" y="245" width="16.4" height="15.0" fill="rgb(248,187,22)" rx="2" ry="2" />
<text  x="745.78" y="255.5" ></text>
</g>
<g >
<title>uncharge_batch (1 samples, 0.08%)</title><rect x="38.1" y="293" width="0.9" height="15.0" fill="rgb(208,0,14)" rx="2" ry="2" />
<text  x="41.07" y="303.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.08%)</title><rect x="350.7" y="341" width="1.0" height="15.0" fill="rgb(214,105,15)" rx="2" ry="2" />
<text  x="353.74" y="351.5" ></text>
</g>
<g >
<title>from_kprojid (1 samples, 0.08%)</title><rect x="923.8" y="101" width="1.0" height="15.0" fill="rgb(221,74,22)" rx="2" ry="2" />
<text  x="926.80" y="111.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.08%)</title><rect x="759.2" y="277" width="1.0" height="15.0" fill="rgb(241,90,26)" rx="2" ry="2" />
<text  x="762.24" y="287.5" ></text>
</g>
<g >
<title>xas_create (1 samples, 0.08%)</title><rect x="855.1" y="117" width="0.9" height="15.0" fill="rgb(244,22,42)" rx="2" ry="2" />
<text  x="858.07" y="127.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="1086.4" y="389" width="1.0" height="15.0" fill="rgb(208,52,26)" rx="2" ry="2" />
<text  x="1089.42" y="399.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.08%)</title><rect x="1177.4" y="309" width="1.0" height="15.0" fill="rgb(239,36,13)" rx="2" ry="2" />
<text  x="1180.42" y="319.5" ></text>
</g>
<g >
<title>isolate_freepages (4 samples, 0.33%)</title><rect x="44.8" y="309" width="3.9" height="15.0" fill="rgb(232,123,41)" rx="2" ry="2" />
<text  x="47.85" y="319.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook.constprop.0 (1 samples, 0.08%)</title><rect x="869.6" y="149" width="1.0" height="15.0" fill="rgb(240,193,24)" rx="2" ry="2" />
<text  x="872.59" y="159.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.08%)</title><rect x="287.8" y="325" width="1.0" height="15.0" fill="rgb(237,128,48)" rx="2" ry="2" />
<text  x="290.82" y="335.5" ></text>
</g>
<g >
<title>do_iter_write (154 samples, 12.63%)</title><rect x="805.7" y="293" width="149.1" height="15.0" fill="rgb(205,204,2)" rx="2" ry="2" />
<text  x="808.70" y="303.5" >do_iter_write</text>
</g>
<g >
<title>iput_final (8 samples, 0.66%)</title><rect x="1088.4" y="325" width="7.7" height="15.0" fill="rgb(224,107,7)" rx="2" ry="2" />
<text  x="1091.36" y="335.5" ></text>
</g>
<g >
<title>rw_verify_area (2 samples, 0.16%)</title><rect x="762.1" y="341" width="2.0" height="15.0" fill="rgb(223,170,17)" rx="2" ry="2" />
<text  x="765.14" y="351.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (18 samples, 1.48%)</title><rect x="1158.1" y="373" width="17.4" height="15.0" fill="rgb(252,122,41)" rx="2" ry="2" />
<text  x="1161.06" y="383.5" ></text>
</g>
<g >
<title>__set_page_dirty (5 samples, 0.41%)</title><rect x="880.2" y="149" width="4.9" height="15.0" fill="rgb(244,186,3)" rx="2" ry="2" />
<text  x="883.24" y="159.5" ></text>
</g>
<g >
<title>ovl_real_fdget (1 samples, 0.08%)</title><rect x="740.8" y="309" width="1.0" height="15.0" fill="rgb(216,56,25)" rx="2" ry="2" />
<text  x="743.84" y="319.5" ></text>
</g>
<g >
<title>xas_load (3 samples, 0.25%)</title><rect x="861.8" y="149" width="2.9" height="15.0" fill="rgb(233,26,24)" rx="2" ry="2" />
<text  x="864.85" y="159.5" ></text>
</g>
<g >
<title>find_get_entry (5 samples, 0.41%)</title><rect x="861.8" y="165" width="4.9" height="15.0" fill="rgb(236,227,11)" rx="2" ry="2" />
<text  x="864.85" y="175.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (8 samples, 0.66%)</title><rect x="1088.4" y="101" width="7.7" height="15.0" fill="rgb(217,38,1)" rx="2" ry="2" />
<text  x="1091.36" y="111.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.08%)</title><rect x="175.5" y="293" width="1.0" height="15.0" fill="rgb(249,116,18)" rx="2" ry="2" />
<text  x="178.53" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.08%)</title><rect x="288.8" y="357" width="1.0" height="15.0" fill="rgb(209,16,42)" rx="2" ry="2" />
<text  x="291.79" y="367.5" ></text>
</g>
<g >
<title>poll_idle (2 samples, 0.16%)</title><rect x="1179.4" y="261" width="1.9" height="15.0" fill="rgb(231,96,27)" rx="2" ry="2" />
<text  x="1182.35" y="271.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1 samples, 0.08%)</title><rect x="11.0" y="325" width="0.9" height="15.0" fill="rgb(208,88,47)" rx="2" ry="2" />
<text  x="13.97" y="335.5" ></text>
</g>
<g >
<title>copy_page (1 samples, 0.08%)</title><rect x="42.9" y="261" width="1.0" height="15.0" fill="rgb(218,23,29)" rx="2" ry="2" />
<text  x="45.91" y="271.5" ></text>
</g>
<g >
<title>ovl_file_accessed.part.0 (1 samples, 0.08%)</title><rect x="739.9" y="309" width="0.9" height="15.0" fill="rgb(239,101,42)" rx="2" ry="2" />
<text  x="742.88" y="319.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (26 samples, 2.13%)</title><rect x="897.7" y="101" width="25.1" height="15.0" fill="rgb(241,51,3)" rx="2" ry="2" />
<text  x="900.66" y="111.5" >e..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="395.3" y="405" width="0.9" height="15.0" fill="rgb(248,53,4)" rx="2" ry="2" />
<text  x="398.27" y="415.5" ></text>
</g>
<g >
<title>ext4_inode_csum (25 samples, 2.05%)</title><rect x="898.6" y="85" width="24.2" height="15.0" fill="rgb(224,217,33)" rx="2" ry="2" />
<text  x="901.63" y="95.5" >e..</text>
</g>
<g >
<title>page_cache_delete_batch (2 samples, 0.16%)</title><rect x="1089.3" y="69" width="2.0" height="15.0" fill="rgb(248,197,34)" rx="2" ry="2" />
<text  x="1092.33" y="79.5" ></text>
</g>
<g >
<title>evict (8 samples, 0.66%)</title><rect x="1088.4" y="149" width="7.7" height="15.0" fill="rgb(215,181,30)" rx="2" ry="2" />
<text  x="1091.36" y="159.5" ></text>
</g>
<g >
<title>__schedule (21 samples, 1.72%)</title><rect x="258.8" y="293" width="20.3" height="15.0" fill="rgb(249,108,43)" rx="2" ry="2" />
<text  x="261.78" y="303.5" ></text>
</g>
<g >
<title>workingset_update_node (1 samples, 0.08%)</title><rect x="854.1" y="117" width="1.0" height="15.0" fill="rgb(213,187,19)" rx="2" ry="2" />
<text  x="857.10" y="127.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (34 samples, 2.79%)</title><rect x="891.9" y="117" width="32.9" height="15.0" fill="rgb(253,180,43)" rx="2" ry="2" />
<text  x="894.85" y="127.5" >ex..</text>
</g>
<g >
<title>menu_select (2 samples, 0.16%)</title><rect x="174.6" y="341" width="1.9" height="15.0" fill="rgb(211,151,24)" rx="2" ry="2" />
<text  x="177.56" y="351.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.08%)</title><rect x="350.7" y="373" width="1.0" height="15.0" fill="rgb(228,214,49)" rx="2" ry="2" />
<text  x="353.74" y="383.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (148 samples, 12.14%)</title><rect x="808.6" y="245" width="143.3" height="15.0" fill="rgb(232,71,53)" rx="2" ry="2" />
<text  x="811.61" y="255.5" >ext4_buffered_writ..</text>
</g>
<g >
<title>cpuidle_select (9 samples, 0.74%)</title><rect x="241.4" y="293" width="8.7" height="15.0" fill="rgb(249,85,33)" rx="2" ry="2" />
<text  x="244.35" y="303.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.08%)</title><rect x="882.2" y="117" width="0.9" height="15.0" fill="rgb(213,97,2)" rx="2" ry="2" />
<text  x="885.17" y="127.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.08%)</title><rect x="1088.4" y="37" width="0.9" height="15.0" fill="rgb(224,76,28)" rx="2" ry="2" />
<text  x="1091.36" y="47.5" ></text>
</g>
<g >
<title>copy_page (1 samples, 0.08%)</title><rect x="40.0" y="261" width="1.0" height="15.0" fill="rgb(240,39,9)" rx="2" ry="2" />
<text  x="43.01" y="271.5" ></text>
</g>
<g >
<title>ctx_resched (1 samples, 0.08%)</title><rect x="351.7" y="229" width="1.0" height="15.0" fill="rgb(231,223,2)" rx="2" ry="2" />
<text  x="354.71" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.16%)</title><rect x="1156.1" y="421" width="2.0" height="15.0" fill="rgb(249,86,20)" rx="2" ry="2" />
<text  x="1159.12" y="431.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (8 samples, 0.66%)</title><rect x="1088.4" y="213" width="7.7" height="15.0" fill="rgb(225,50,3)" rx="2" ry="2" />
<text  x="1091.36" y="223.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (4 samples, 0.33%)</title><rect x="1123.2" y="437" width="3.9" height="15.0" fill="rgb(233,98,43)" rx="2" ry="2" />
<text  x="1126.21" y="447.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (15 samples, 1.23%)</title><rect x="833.8" y="197" width="14.5" height="15.0" fill="rgb(210,39,10)" rx="2" ry="2" />
<text  x="836.77" y="207.5" ></text>
</g>
<g >
<title>_int_realloc (4 samples, 0.33%)</title><rect x="1098.0" y="437" width="3.9" height="15.0" fill="rgb(212,49,8)" rx="2" ry="2" />
<text  x="1101.04" y="447.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.08%)</title><rect x="1177.4" y="357" width="1.0" height="15.0" fill="rgb(206,94,22)" rx="2" ry="2" />
<text  x="1180.42" y="367.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (7 samples, 0.57%)</title><rect x="878.3" y="181" width="6.8" height="15.0" fill="rgb(238,130,47)" rx="2" ry="2" />
<text  x="881.30" y="191.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (46 samples, 3.77%)</title><rect x="195.9" y="277" width="44.5" height="15.0" fill="rgb(224,174,1)" rx="2" ry="2" />
<text  x="198.86" y="287.5" >cpui..</text>
</g>
<g >
<title>rest_init (101 samples, 8.29%)</title><rect x="190.0" y="357" width="97.8" height="15.0" fill="rgb(247,74,41)" rx="2" ry="2" />
<text  x="193.05" y="367.5" >rest_init</text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 0.16%)</title><rect x="527.9" y="437" width="1.9" height="15.0" fill="rgb(223,100,36)" rx="2" ry="2" />
<text  x="530.88" y="447.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (17 samples, 1.39%)</title><rect x="262.6" y="245" width="16.5" height="15.0" fill="rgb(246,143,17)" rx="2" ry="2" />
<text  x="265.65" y="255.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (1 samples, 0.08%)</title><rect x="11.0" y="437" width="0.9" height="15.0" fill="rgb(240,104,44)" rx="2" ry="2" />
<text  x="13.97" y="447.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (5 samples, 0.41%)</title><rect x="1184.2" y="245" width="4.8" height="15.0" fill="rgb(233,141,32)" rx="2" ry="2" />
<text  x="1187.19" y="255.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (18 samples, 1.48%)</title><rect x="926.7" y="133" width="17.4" height="15.0" fill="rgb(233,131,46)" rx="2" ry="2" />
<text  x="929.70" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (4 samples, 0.33%)</title><rect x="767.9" y="421" width="3.9" height="15.0" fill="rgb(215,156,9)" rx="2" ry="2" />
<text  x="770.95" y="431.5" ></text>
</g>
<g >
<title>account_page_dirtied (3 samples, 0.25%)</title><rect x="880.2" y="133" width="2.9" height="15.0" fill="rgb(246,169,8)" rx="2" ry="2" />
<text  x="883.24" y="143.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.08%)</title><rect x="1182.3" y="293" width="0.9" height="15.0" fill="rgb(244,40,5)" rx="2" ry="2" />
<text  x="1185.26" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.08%)</title><rect x="351.7" y="309" width="1.0" height="15.0" fill="rgb(251,209,11)" rx="2" ry="2" />
<text  x="354.71" y="319.5" ></text>
</g>
<g >
<title>ext4_llseek (4 samples, 0.33%)</title><rect x="721.5" y="325" width="3.9" height="15.0" fill="rgb(244,22,37)" rx="2" ry="2" />
<text  x="724.48" y="335.5" ></text>
</g>
<g >
<title>move_to_new_page (6 samples, 0.49%)</title><rect x="39.0" y="309" width="5.8" height="15.0" fill="rgb(223,143,13)" rx="2" ry="2" />
<text  x="42.04" y="319.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.16%)</title><rect x="871.5" y="133" width="2.0" height="15.0" fill="rgb(247,179,25)" rx="2" ry="2" />
<text  x="874.53" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (1 samples, 0.08%)</title><rect x="351.7" y="405" width="1.0" height="15.0" fill="rgb(237,65,26)" rx="2" ry="2" />
<text  x="354.71" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (21 samples, 1.72%)</title><rect x="1158.1" y="405" width="20.3" height="15.0" fill="rgb(219,4,37)" rx="2" ry="2" />
<text  x="1161.06" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.08%)</title><rect x="249.1" y="277" width="1.0" height="15.0" fill="rgb(220,158,31)" rx="2" ry="2" />
<text  x="252.10" y="287.5" ></text>
</g>
<g >
<title>llist_add_batch (1 samples, 0.08%)</title><rect x="185.2" y="261" width="1.0" height="15.0" fill="rgb(212,157,20)" rx="2" ry="2" />
<text  x="188.21" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="287.8" y="437" width="1.0" height="15.0" fill="rgb(209,17,24)" rx="2" ry="2" />
<text  x="290.82" y="447.5" ></text>
</g>
<g >
<title>__rust_realloc (1 samples, 0.08%)</title><rect x="1087.4" y="437" width="1.0" height="15.0" fill="rgb(252,37,41)" rx="2" ry="2" />
<text  x="1090.39" y="447.5" ></text>
</g>
<g >
<title>kcompactd (13 samples, 1.07%)</title><rect x="37.1" y="405" width="12.6" height="15.0" fill="rgb(218,25,15)" rx="2" ry="2" />
<text  x="40.10" y="415.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.08%)</title><rect x="711.8" y="357" width="1.0" height="15.0" fill="rgb(221,66,16)" rx="2" ry="2" />
<text  x="714.80" y="367.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (8 samples, 0.66%)</title><rect x="744.7" y="181" width="7.8" height="15.0" fill="rgb(242,90,28)" rx="2" ry="2" />
<text  x="747.72" y="191.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (1 samples, 0.08%)</title><rect x="740.8" y="293" width="1.0" height="15.0" fill="rgb(244,176,27)" rx="2" ry="2" />
<text  x="743.84" y="303.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.08%)</title><rect x="949.9" y="197" width="1.0" height="15.0" fill="rgb(229,89,49)" rx="2" ry="2" />
<text  x="952.93" y="207.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.08%)</title><rect x="1177.4" y="341" width="1.0" height="15.0" fill="rgb(241,174,40)" rx="2" ry="2" />
<text  x="1180.42" y="351.5" ></text>
</g>
<g >
<title>__wake_up (2 samples, 0.16%)</title><rect x="871.5" y="149" width="2.0" height="15.0" fill="rgb(206,168,31)" rx="2" ry="2" />
<text  x="874.53" y="159.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.08%)</title><rect x="248.1" y="213" width="1.0" height="15.0" fill="rgb(226,172,4)" rx="2" ry="2" />
<text  x="251.13" y="223.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (8 samples, 0.66%)</title><rect x="1088.4" y="117" width="7.7" height="15.0" fill="rgb(236,35,41)" rx="2" ry="2" />
<text  x="1091.36" y="127.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (1 samples, 0.08%)</title><rect x="280.1" y="309" width="0.9" height="15.0" fill="rgb(250,1,3)" rx="2" ry="2" />
<text  x="283.07" y="319.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.08%)</title><rect x="48.7" y="309" width="1.0" height="15.0" fill="rgb(240,148,22)" rx="2" ry="2" />
<text  x="51.72" y="319.5" ></text>
</g>
<g >
<title>ovl_inode_realdata (1 samples, 0.08%)</title><rect x="718.6" y="325" width="0.9" height="15.0" fill="rgb(248,108,24)" rx="2" ry="2" />
<text  x="721.58" y="335.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.08%)</title><rect x="189.1" y="373" width="0.9" height="15.0" fill="rgb(252,63,27)" rx="2" ry="2" />
<text  x="192.08" y="383.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 0.49%)</title><rect x="180.4" y="357" width="5.8" height="15.0" fill="rgb(222,216,33)" rx="2" ry="2" />
<text  x="183.37" y="367.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.08%)</title><rect x="239.4" y="245" width="1.0" height="15.0" fill="rgb(249,177,52)" rx="2" ry="2" />
<text  x="242.42" y="255.5" ></text>
</g>
<g >
<title>__dentry_kill (8 samples, 0.66%)</title><rect x="1088.4" y="229" width="7.7" height="15.0" fill="rgb(234,144,19)" rx="2" ry="2" />
<text  x="1091.36" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.16%)</title><rect x="1156.1" y="437" width="2.0" height="15.0" fill="rgb(214,168,42)" rx="2" ry="2" />
<text  x="1159.12" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (2 samples, 0.16%)</title><rect x="1132.9" y="437" width="1.9" height="15.0" fill="rgb(211,34,47)" rx="2" ry="2" />
<text  x="1135.89" y="447.5" ></text>
</g>
<g >
<title>migrate_page (2 samples, 0.16%)</title><rect x="42.9" y="277" width="1.9" height="15.0" fill="rgb(218,29,37)" rx="2" ry="2" />
<text  x="45.91" y="287.5" ></text>
</g>
<g >
<title>copy_page_to_iter (8 samples, 0.66%)</title><rect x="744.7" y="213" width="7.8" height="15.0" fill="rgb(210,25,40)" rx="2" ry="2" />
<text  x="747.72" y="223.5" ></text>
</g>
<g >
<title>atime_needs_update (1 samples, 0.08%)</title><rect x="739.9" y="277" width="0.9" height="15.0" fill="rgb(225,2,33)" rx="2" ry="2" />
<text  x="742.88" y="287.5" ></text>
</g>
<g >
<title>iput.part.0 (8 samples, 0.66%)</title><rect x="1088.4" y="341" width="7.7" height="15.0" fill="rgb(248,93,7)" rx="2" ry="2" />
<text  x="1091.36" y="351.5" ></text>
</g>
<g >
<title>ext4_da_write_end (80 samples, 6.56%)</title><rect x="866.7" y="213" width="77.4" height="15.0" fill="rgb(205,112,48)" rx="2" ry="2" />
<text  x="869.69" y="223.5" >ext4_da_..</text>
</g>
<g >
<title>flush_smp_call_function_from_idle (7 samples, 0.57%)</title><rect x="250.1" y="309" width="6.7" height="15.0" fill="rgb(205,201,15)" rx="2" ry="2" />
<text  x="253.07" y="319.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.08%)</title><rect x="881.2" y="101" width="1.0" height="15.0" fill="rgb(232,197,49)" rx="2" ry="2" />
<text  x="884.21" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.66%)</title><rect x="1088.4" y="405" width="7.7" height="15.0" fill="rgb(248,42,3)" rx="2" ry="2" />
<text  x="1091.36" y="415.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.08%)</title><rect x="712.8" y="341" width="0.9" height="15.0" fill="rgb(249,14,39)" rx="2" ry="2" />
<text  x="715.77" y="351.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.08%)</title><rect x="188.1" y="357" width="1.0" height="15.0" fill="rgb(254,152,33)" rx="2" ry="2" />
<text  x="191.11" y="367.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (4 samples, 0.33%)</title><rect x="1127.1" y="437" width="3.9" height="15.0" fill="rgb(233,153,42)" rx="2" ry="2" />
<text  x="1130.08" y="447.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.08%)</title><rect x="246.2" y="229" width="1.0" height="15.0" fill="rgb(247,209,50)" rx="2" ry="2" />
<text  x="249.19" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (63 samples, 5.17%)</title><rect x="289.8" y="421" width="60.9" height="15.0" fill="rgb(240,48,10)" rx="2" ry="2" />
<text  x="292.75" y="431.5" >entry_..</text>
</g>
<g >
<title>current_time (2 samples, 0.16%)</title><rect x="811.5" y="197" width="1.9" height="15.0" fill="rgb(237,119,42)" rx="2" ry="2" />
<text  x="814.51" y="207.5" ></text>
</g>
<g >
<title>ovl_d_real (2 samples, 0.16%)</title><rect x="713.7" y="341" width="2.0" height="15.0" fill="rgb(253,194,9)" rx="2" ry="2" />
<text  x="716.74" y="351.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.08%)</title><rect x="287.8" y="389" width="1.0" height="15.0" fill="rgb(242,130,8)" rx="2" ry="2" />
<text  x="290.82" y="399.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.08%)</title><rect x="275.2" y="197" width="1.0" height="15.0" fill="rgb(253,8,33)" rx="2" ry="2" />
<text  x="278.23" y="207.5" ></text>
</g>
<g >
<title>lind_write (2 samples, 0.16%)</title><rect x="1116.4" y="437" width="2.0" height="15.0" fill="rgb(240,182,26)" rx="2" ry="2" />
<text  x="1119.43" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (120 samples, 9.84%)</title><rect x="546.3" y="437" width="116.1" height="15.0" fill="rgb(250,219,4)" rx="2" ry="2" />
<text  x="549.28" y="447.5" >__GI___pthread..</text>
</g>
<g >
<title>__x64_sys_write (187 samples, 15.34%)</title><rect x="775.7" y="389" width="181.0" height="15.0" fill="rgb(219,118,1)" rx="2" ry="2" />
<text  x="778.69" y="399.5" >__x64_sys_write</text>
</g>
<g >
<title>mem_cgroup_migrate (1 samples, 0.08%)</title><rect x="41.0" y="229" width="0.9" height="15.0" fill="rgb(228,102,26)" rx="2" ry="2" />
<text  x="43.98" y="239.5" ></text>
</g>
<g >
<title>rest_init (12 samples, 0.98%)</title><rect x="1178.4" y="357" width="11.6" height="15.0" fill="rgb(222,10,7)" rx="2" ry="2" />
<text  x="1181.38" y="367.5" ></text>
</g>
<g >
<title>__unlink (8 samples, 0.66%)</title><rect x="1088.4" y="437" width="7.7" height="15.0" fill="rgb(252,148,31)" rx="2" ry="2" />
<text  x="1091.36" y="447.5" ></text>
</g>
<g >
<title>all (1,219 samples, 100%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(224,210,32)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.08%)</title><rect x="351.7" y="293" width="1.0" height="15.0" fill="rgb(241,173,5)" rx="2" ry="2" />
<text  x="354.71" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (6 samples, 0.49%)</title><rect x="856.0" y="133" width="5.8" height="15.0" fill="rgb(215,66,18)" rx="2" ry="2" />
<text  x="859.04" y="143.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (1 samples, 0.08%)</title><rect x="837.6" y="85" width="1.0" height="15.0" fill="rgb(211,179,9)" rx="2" ry="2" />
<text  x="840.65" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (32 samples, 2.63%)</title><rect x="734.1" y="405" width="30.9" height="15.0" fill="rgb(248,40,42)" rx="2" ry="2" />
<text  x="737.07" y="415.5" >do..</text>
</g>
<g >
<title>ksys_write (187 samples, 15.34%)</title><rect x="775.7" y="373" width="181.0" height="15.0" fill="rgb(220,204,45)" rx="2" ry="2" />
<text  x="778.69" y="383.5" >ksys_write</text>
</g>
<g >
<title>ovl_d_real (1 samples, 0.08%)</title><rect x="717.6" y="325" width="1.0" height="15.0" fill="rgb(232,5,8)" rx="2" ry="2" />
<text  x="720.61" y="335.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.08%)</title><rect x="846.4" y="149" width="0.9" height="15.0" fill="rgb(215,187,0)" rx="2" ry="2" />
<text  x="849.36" y="159.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2 samples, 0.16%)</title><rect x="957.7" y="389" width="1.9" height="15.0" fill="rgb(226,113,35)" rx="2" ry="2" />
<text  x="960.68" y="399.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.08%)</title><rect x="1088.4" y="69" width="0.9" height="15.0" fill="rgb(249,166,11)" rx="2" ry="2" />
<text  x="1091.36" y="79.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (18 samples, 1.48%)</title><rect x="741.8" y="261" width="17.4" height="15.0" fill="rgb(222,160,32)" rx="2" ry="2" />
<text  x="744.81" y="271.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.08%)</title><rect x="259.7" y="277" width="1.0" height="15.0" fill="rgb(254,101,45)" rx="2" ry="2" />
<text  x="262.75" y="287.5" ></text>
</g>
<g >
<title>from_kgid (1 samples, 0.08%)</title><rect x="922.8" y="101" width="1.0" height="15.0" fill="rgb(249,135,27)" rx="2" ry="2" />
<text  x="925.83" y="111.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (6 samples, 0.49%)</title><rect x="1143.5" y="437" width="5.8" height="15.0" fill="rgb(216,3,53)" rx="2" ry="2" />
<text  x="1146.54" y="447.5" ></text>
</g>
<g >
<title>mutex_unlock (3 samples, 0.25%)</title><rect x="780.5" y="357" width="2.9" height="15.0" fill="rgb(220,105,11)" rx="2" ry="2" />
<text  x="783.53" y="367.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.08%)</title><rect x="350.7" y="357" width="1.0" height="15.0" fill="rgb(209,61,34)" rx="2" ry="2" />
<text  x="353.74" y="367.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (2 samples, 0.16%)</title><rect x="811.5" y="181" width="1.9" height="15.0" fill="rgb(237,94,21)" rx="2" ry="2" />
<text  x="814.51" y="191.5" ></text>
</g>
<g >
<title>file_update_time (3 samples, 0.25%)</title><rect x="810.5" y="213" width="2.9" height="15.0" fill="rgb(226,205,44)" rx="2" ry="2" />
<text  x="813.54" y="223.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (3 samples, 0.25%)</title><rect x="1178.4" y="277" width="2.9" height="15.0" fill="rgb(230,42,39)" rx="2" ry="2" />
<text  x="1181.38" y="287.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.08%)</title><rect x="1156.1" y="389" width="1.0" height="15.0" fill="rgb(247,153,24)" rx="2" ry="2" />
<text  x="1159.12" y="399.5" ></text>
</g>
<g >
<title>cpuidle_select (2 samples, 0.16%)</title><rect x="174.6" y="357" width="1.9" height="15.0" fill="rgb(229,226,6)" rx="2" ry="2" />
<text  x="177.56" y="367.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.08%)</title><rect x="287.8" y="261" width="1.0" height="15.0" fill="rgb(217,142,12)" rx="2" ry="2" />
<text  x="290.82" y="271.5" ></text>
</g>
<g >
<title>sel_ldr (827 samples, 67.84%)</title><rect x="352.7" y="453" width="800.5" height="15.0" fill="rgb(207,120,15)" rx="2" ry="2" />
<text  x="355.67" y="463.5" >sel_ldr</text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.16%)</title><rect x="172.6" y="325" width="2.0" height="15.0" fill="rgb(250,185,45)" rx="2" ry="2" />
<text  x="175.63" y="335.5" ></text>
</g>
<g >
<title>start_kernel (12 samples, 0.98%)</title><rect x="1178.4" y="389" width="11.6" height="15.0" fill="rgb(254,29,52)" rx="2" ry="2" />
<text  x="1181.38" y="399.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.08%)</title><rect x="274.3" y="213" width="0.9" height="15.0" fill="rgb(208,95,30)" rx="2" ry="2" />
<text  x="277.27" y="223.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.08%)</title><rect x="729.2" y="373" width="1.0" height="15.0" fill="rgb(223,208,7)" rx="2" ry="2" />
<text  x="732.23" y="383.5" ></text>
</g>
<g >
<title>event_function (63 samples, 5.17%)</title><rect x="289.8" y="245" width="60.9" height="15.0" fill="rgb(224,3,1)" rx="2" ry="2" />
<text  x="292.75" y="255.5" >event_..</text>
</g>
<g >
<title>tty_audit_add_data (1 samples, 0.08%)</title><rect x="1157.1" y="293" width="1.0" height="15.0" fill="rgb(212,137,7)" rx="2" ry="2" />
<text  x="1160.09" y="303.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 5.17%)</title><rect x="289.8" y="181" width="60.9" height="15.0" fill="rgb(223,191,34)" rx="2" ry="2" />
<text  x="292.75" y="191.5" >intel_..</text>
</g>
<g >
<title>HandleStackContext (3 samples, 0.25%)</title><rect x="379.8" y="437" width="2.9" height="15.0" fill="rgb(228,201,50)" rx="2" ry="2" />
<text  x="382.78" y="447.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.08%)</title><rect x="1156.1" y="325" width="1.0" height="15.0" fill="rgb(248,7,4)" rx="2" ry="2" />
<text  x="1159.12" y="335.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.08%)</title><rect x="283.9" y="293" width="1.0" height="15.0" fill="rgb(224,84,33)" rx="2" ry="2" />
<text  x="286.95" y="303.5" ></text>
</g>
<g >
<title>_perf_ioctl (1 samples, 0.08%)</title><rect x="351.7" y="373" width="1.0" height="15.0" fill="rgb(227,211,52)" rx="2" ry="2" />
<text  x="354.71" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (6 samples, 0.49%)</title><rect x="677.0" y="437" width="5.8" height="15.0" fill="rgb(221,16,38)" rx="2" ry="2" />
<text  x="679.96" y="447.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="356.5" y="437" width="2.0" height="15.0" fill="rgb(212,45,44)" rx="2" ry="2" />
<text  x="359.55" y="447.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (3 samples, 0.25%)</title><rect x="986.7" y="437" width="2.9" height="15.0" fill="rgb(239,0,23)" rx="2" ry="2" />
<text  x="989.72" y="447.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (2 samples, 0.16%)</title><rect x="1089.3" y="85" width="2.0" height="15.0" fill="rgb(228,110,43)" rx="2" ry="2" />
<text  x="1092.33" y="95.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.08%)</title><rect x="789.2" y="341" width="1.0" height="15.0" fill="rgb(211,132,29)" rx="2" ry="2" />
<text  x="792.25" y="351.5" ></text>
</g>
<g >
<title>override_creds (1 samples, 0.08%)</title><rect x="800.9" y="293" width="0.9" height="15.0" fill="rgb(227,84,41)" rx="2" ry="2" />
<text  x="803.86" y="303.5" ></text>
</g>
<g >
<title>ThreadPoolForeg (285 samples, 23.38%)</title><rect x="11.9" y="453" width="275.9" height="15.0" fill="rgb(220,152,7)" rx="2" ry="2" />
<text  x="14.94" y="463.5" >ThreadPoolForeg</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.08%)</title><rect x="261.7" y="245" width="0.9" height="15.0" fill="rgb(210,117,34)" rx="2" ry="2" />
<text  x="264.68" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.08%)</title><rect x="729.2" y="389" width="1.0" height="15.0" fill="rgb(212,155,26)" rx="2" ry="2" />
<text  x="732.23" y="399.5" ></text>
</g>
<g >
<title>__perf_event_enable (63 samples, 5.17%)</title><rect x="289.8" y="229" width="60.9" height="15.0" fill="rgb(216,77,30)" rx="2" ry="2" />
<text  x="292.75" y="239.5" >__perf..</text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.08%)</title><rect x="350.7" y="277" width="1.0" height="15.0" fill="rgb(235,88,15)" rx="2" ry="2" />
<text  x="353.74" y="287.5" ></text>
</g>
<g >
<title>xas_load (2 samples, 0.16%)</title><rect x="757.3" y="181" width="1.9" height="15.0" fill="rgb(249,86,16)" rx="2" ry="2" />
<text  x="760.30" y="191.5" ></text>
</g>
<g >
<title>jbd2__journal_start (9 samples, 0.74%)</title><rect x="825.1" y="181" width="8.7" height="15.0" fill="rgb(214,83,6)" rx="2" ry="2" />
<text  x="828.06" y="191.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.08%)</title><rect x="287.8" y="373" width="1.0" height="15.0" fill="rgb(210,151,26)" rx="2" ry="2" />
<text  x="290.82" y="383.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (1 samples, 0.08%)</title><rect x="237.5" y="245" width="0.9" height="15.0" fill="rgb(218,47,44)" rx="2" ry="2" />
<text  x="240.48" y="255.5" ></text>
</g>
<g >
<title>event_function_call (1 samples, 0.08%)</title><rect x="351.7" y="325" width="1.0" height="15.0" fill="rgb(230,136,44)" rx="2" ry="2" />
<text  x="354.71" y="335.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (8 samples, 0.66%)</title><rect x="1088.4" y="277" width="7.7" height="15.0" fill="rgb(214,48,48)" rx="2" ry="2" />
<text  x="1091.36" y="287.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.08%)</title><rect x="1174.5" y="341" width="1.0" height="15.0" fill="rgb(223,134,52)" rx="2" ry="2" />
<text  x="1177.51" y="351.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.16%)</title><rect x="984.8" y="437" width="1.9" height="15.0" fill="rgb(242,28,25)" rx="2" ry="2" />
<text  x="987.78" y="447.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (14 samples, 1.15%)</title><rect x="909.3" y="53" width="13.5" height="15.0" fill="rgb(228,91,12)" rx="2" ry="2" />
<text  x="912.28" y="63.5" ></text>
</g>
<g >
<title>tty_read (1 samples, 0.08%)</title><rect x="1157.1" y="341" width="1.0" height="15.0" fill="rgb(222,80,50)" rx="2" ry="2" />
<text  x="1160.09" y="351.5" ></text>
</g>
<g >
<title>__fget_files (5 samples, 0.41%)</title><rect x="706.0" y="325" width="4.8" height="15.0" fill="rgb(241,47,39)" rx="2" ry="2" />
<text  x="709.00" y="335.5" ></text>
</g>
<g >
<title>node_page_state (1 samples, 0.08%)</title><rect x="859.9" y="117" width="1.0" height="15.0" fill="rgb(214,152,13)" rx="2" ry="2" />
<text  x="862.91" y="127.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.08%)</title><rect x="171.7" y="325" width="0.9" height="15.0" fill="rgb(217,65,46)" rx="2" ry="2" />
<text  x="174.66" y="335.5" ></text>
</g>
<g >
<title>ovl_override_creds (1 samples, 0.08%)</title><rect x="800.9" y="309" width="0.9" height="15.0" fill="rgb(228,193,34)" rx="2" ry="2" />
<text  x="803.86" y="319.5" ></text>
</g>
<g >
<title>new_sync_read (24 samples, 1.97%)</title><rect x="738.9" y="341" width="23.2" height="15.0" fill="rgb(215,207,9)" rx="2" ry="2" />
<text  x="741.91" y="351.5" >n..</text>
</g>
<g >
<title>cpuidle_enter (129 samples, 10.58%)</title><rect x="49.7" y="357" width="124.9" height="15.0" fill="rgb(231,13,16)" rx="2" ry="2" />
<text  x="52.69" y="367.5" >cpuidle_enter</text>
</g>
<g >
<title>psi_task_change (1 samples, 0.08%)</title><rect x="48.7" y="325" width="1.0" height="15.0" fill="rgb(216,84,31)" rx="2" ry="2" />
<text  x="51.72" y="335.5" ></text>
</g>
<g >
<title>newidle_balance (19 samples, 1.56%)</title><rect x="260.7" y="261" width="18.4" height="15.0" fill="rgb(247,117,24)" rx="2" ry="2" />
<text  x="263.71" y="271.5" ></text>
</g>
<g >
<title>__es_insert_extent (1 samples, 0.08%)</title><rect x="845.4" y="117" width="1.0" height="15.0" fill="rgb(209,217,24)" rx="2" ry="2" />
<text  x="848.39" y="127.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.08%)</title><rect x="804.7" y="309" width="1.0" height="15.0" fill="rgb(208,19,34)" rx="2" ry="2" />
<text  x="807.73" y="319.5" ></text>
</g>
<g >
<title>vfs_llseek (4 samples, 0.33%)</title><rect x="721.5" y="341" width="3.9" height="15.0" fill="rgb(252,126,40)" rx="2" ry="2" />
<text  x="724.48" y="351.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (10 samples, 0.82%)</title><rect x="933.5" y="101" width="9.7" height="15.0" fill="rgb(206,84,1)" rx="2" ry="2" />
<text  x="936.48" y="111.5" ></text>
</g>
<g >
<title>__fdget_pos (6 samples, 0.49%)</title><rect x="706.0" y="357" width="5.8" height="15.0" fill="rgb(215,134,42)" rx="2" ry="2" />
<text  x="709.00" y="367.5" ></text>
</g>
<g >
<title>__getblk_gfp (2 samples, 0.16%)</title><rect x="941.2" y="85" width="2.0" height="15.0" fill="rgb(221,212,26)" rx="2" ry="2" />
<text  x="944.22" y="95.5" ></text>
</g>
<g >
<title>__put_page (1 samples, 0.08%)</title><rect x="38.1" y="325" width="0.9" height="15.0" fill="rgb(254,184,40)" rx="2" ry="2" />
<text  x="41.07" y="335.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.41%)</title><rect x="706.0" y="341" width="4.8" height="15.0" fill="rgb(209,197,41)" rx="2" ry="2" />
<text  x="709.00" y="351.5" ></text>
</g>
<g >
<title>NaClSysRead (3 samples, 0.25%)</title><rect x="437.9" y="437" width="2.9" height="15.0" fill="rgb(211,13,14)" rx="2" ry="2" />
<text  x="440.86" y="447.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (63 samples, 5.17%)</title><rect x="289.8" y="341" width="60.9" height="15.0" fill="rgb(242,227,33)" rx="2" ry="2" />
<text  x="292.75" y="351.5" >perf_e..</text>
</g>
<g >
<title>ext4_invalidatepage (5 samples, 0.41%)</title><rect x="1091.3" y="69" width="4.8" height="15.0" fill="rgb(233,151,2)" rx="2" ry="2" />
<text  x="1094.26" y="79.5" ></text>
</g>
<g >
<title>aa_file_perm (1 samples, 0.08%)</title><rect x="761.2" y="229" width="0.9" height="15.0" fill="rgb(210,190,53)" rx="2" ry="2" />
<text  x="764.17" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.08%)</title><rect x="350.7" y="389" width="1.0" height="15.0" fill="rgb(254,159,39)" rx="2" ry="2" />
<text  x="353.74" y="399.5" ></text>
</g>
<g >
<title>rcu_idle_exit (4 samples, 0.33%)</title><rect x="234.6" y="261" width="3.8" height="15.0" fill="rgb(247,98,51)" rx="2" ry="2" />
<text  x="237.58" y="271.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.0 (5 samples, 0.41%)</title><rect x="926.7" y="85" width="4.8" height="15.0" fill="rgb(251,134,16)" rx="2" ry="2" />
<text  x="929.70" y="95.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.08%)</title><rect x="248.1" y="229" width="1.0" height="15.0" fill="rgb(222,25,16)" rx="2" ry="2" />
<text  x="251.13" y="239.5" ></text>
</g>
<g >
<title>stop_this_handle (3 samples, 0.25%)</title><rect x="870.6" y="165" width="2.9" height="15.0" fill="rgb(251,85,38)" rx="2" ry="2" />
<text  x="873.56" y="175.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.08%)</title><rect x="283.9" y="309" width="1.0" height="15.0" fill="rgb(221,228,51)" rx="2" ry="2" />
<text  x="286.95" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.08%)</title><rect x="350.7" y="405" width="1.0" height="15.0" fill="rgb(217,141,1)" rx="2" ry="2" />
<text  x="353.74" y="415.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.08%)</title><rect x="287.8" y="245" width="1.0" height="15.0" fill="rgb(227,216,30)" rx="2" ry="2" />
<text  x="290.82" y="255.5" ></text>
</g>
<g >
<title>ret_from_fork (13 samples, 1.07%)</title><rect x="37.1" y="437" width="12.6" height="15.0" fill="rgb(239,80,45)" rx="2" ry="2" />
<text  x="40.10" y="447.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.08%)</title><rect x="779.6" y="357" width="0.9" height="15.0" fill="rgb(230,108,14)" rx="2" ry="2" />
<text  x="782.57" y="367.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.08%)</title><rect x="1086.4" y="261" width="1.0" height="15.0" fill="rgb(248,11,19)" rx="2" ry="2" />
<text  x="1089.42" y="271.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (2 samples, 0.16%)</title><rect x="1150.3" y="421" width="1.9" height="15.0" fill="rgb(211,137,51)" rx="2" ry="2" />
<text  x="1153.31" y="431.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge (1 samples, 0.08%)</title><rect x="38.1" y="309" width="0.9" height="15.0" fill="rgb(234,169,30)" rx="2" ry="2" />
<text  x="41.07" y="319.5" ></text>
</g>
<g >
<title>isolate_freepages_block (3 samples, 0.25%)</title><rect x="44.8" y="293" width="3.0" height="15.0" fill="rgb(240,71,39)" rx="2" ry="2" />
<text  x="47.85" y="303.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1 samples, 0.08%)</title><rect x="11.0" y="373" width="0.9" height="15.0" fill="rgb(232,80,11)" rx="2" ry="2" />
<text  x="13.97" y="383.5" ></text>
</g>
<g >
<title>page_counter_charge (1 samples, 0.08%)</title><rect x="41.0" y="213" width="0.9" height="15.0" fill="rgb(247,134,45)" rx="2" ry="2" />
<text  x="43.98" y="223.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.08%)</title><rect x="240.4" y="293" width="1.0" height="15.0" fill="rgb(217,195,37)" rx="2" ry="2" />
<text  x="243.39" y="303.5" ></text>
</g>
<g >
<title>rw_verify_area (3 samples, 0.25%)</title><rect x="951.9" y="277" width="2.9" height="15.0" fill="rgb(236,223,8)" rx="2" ry="2" />
<text  x="954.87" y="287.5" ></text>
</g>
<g >
<title>cpu_startup_entry (145 samples, 11.89%)</title><rect x="49.7" y="405" width="140.3" height="15.0" fill="rgb(246,212,40)" rx="2" ry="2" />
<text  x="52.69" y="415.5" >cpu_startup_entry</text>
</g>
<g >
<title>nohz_csd_func (2 samples, 0.16%)</title><rect x="254.9" y="293" width="1.9" height="15.0" fill="rgb(210,95,28)" rx="2" ry="2" />
<text  x="257.91" y="303.5" ></text>
</g>
<g >
<title>isolate_migratepages (1 samples, 0.08%)</title><rect x="37.1" y="357" width="1.0" height="15.0" fill="rgb(214,156,8)" rx="2" ry="2" />
<text  x="40.10" y="367.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (12 samples, 0.98%)</title><rect x="822.2" y="197" width="11.6" height="15.0" fill="rgb(246,170,8)" rx="2" ry="2" />
<text  x="825.16" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.08%)</title><rect x="693.4" y="421" width="1.0" height="15.0" fill="rgb(248,41,17)" rx="2" ry="2" />
<text  x="696.41" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (63 samples, 5.17%)</title><rect x="289.8" y="389" width="60.9" height="15.0" fill="rgb(232,31,46)" rx="2" ry="2" />
<text  x="292.75" y="399.5" >__x64_..</text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.08%)</title><rect x="36.1" y="373" width="1.0" height="15.0" fill="rgb(206,70,13)" rx="2" ry="2" />
<text  x="39.14" y="383.5" ></text>
</g>
<g >
<title>file_modified (3 samples, 0.25%)</title><rect x="810.5" y="229" width="2.9" height="15.0" fill="rgb(221,142,11)" rx="2" ry="2" />
<text  x="813.54" y="239.5" ></text>
</g>
<g >
<title>generic_write_end (72 samples, 5.91%)</title><rect x="874.4" y="197" width="69.7" height="15.0" fill="rgb(240,136,45)" rx="2" ry="2" />
<text  x="877.43" y="207.5" >generic..</text>
</g>
<g >
<title>start_this_handle (3 samples, 0.25%)</title><rect x="830.9" y="165" width="2.9" height="15.0" fill="rgb(232,71,52)" rx="2" ry="2" />
<text  x="833.87" y="175.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.08%)</title><rect x="351.7" y="197" width="1.0" height="15.0" fill="rgb(209,164,19)" rx="2" ry="2" />
<text  x="354.71" y="207.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (5 samples, 0.41%)</title><rect x="946.1" y="213" width="4.8" height="15.0" fill="rgb(232,121,33)" rx="2" ry="2" />
<text  x="949.06" y="223.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (101 samples, 8.29%)</title><rect x="190.0" y="405" width="97.8" height="15.0" fill="rgb(239,208,46)" rx="2" ry="2" />
<text  x="193.05" y="415.5" >x86_64_star..</text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.08%)</title><rect x="860.9" y="101" width="0.9" height="15.0" fill="rgb(214,24,32)" rx="2" ry="2" />
<text  x="863.88" y="111.5" ></text>
</g>
<g >
<title>do_idle (97 samples, 7.96%)</title><rect x="191.0" y="325" width="93.9" height="15.0" fill="rgb(220,199,37)" rx="2" ry="2" />
<text  x="194.02" y="335.5" >do_idle</text>
</g>
<g >
<title>vfs_iter_read (21 samples, 1.72%)</title><rect x="741.8" y="309" width="20.3" height="15.0" fill="rgb(234,223,3)" rx="2" ry="2" />
<text  x="744.81" y="319.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.08%)</title><rect x="395.3" y="373" width="0.9" height="15.0" fill="rgb(242,163,15)" rx="2" ry="2" />
<text  x="398.27" y="383.5" ></text>
</g>
<g >
<title>_perf_event_enable (63 samples, 5.17%)</title><rect x="289.8" y="325" width="60.9" height="15.0" fill="rgb(253,101,40)" rx="2" ry="2" />
<text  x="292.75" y="335.5" >_perf_..</text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.16%)</title><rect x="539.5" y="437" width="1.9" height="15.0" fill="rgb(250,20,15)" rx="2" ry="2" />
<text  x="542.50" y="447.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.08%)</title><rect x="736.0" y="357" width="1.0" height="15.0" fill="rgb(249,175,3)" rx="2" ry="2" />
<text  x="739.00" y="367.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.08%)</title><rect x="734.1" y="341" width="0.9" height="15.0" fill="rgb(227,72,17)" rx="2" ry="2" />
<text  x="737.07" y="351.5" ></text>
</g>
<g >
<title>vfs_read (27 samples, 2.21%)</title><rect x="737.9" y="357" width="26.2" height="15.0" fill="rgb(215,117,50)" rx="2" ry="2" />
<text  x="740.94" y="367.5" >v..</text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.08%)</title><rect x="1156.1" y="293" width="1.0" height="15.0" fill="rgb(242,122,13)" rx="2" ry="2" />
<text  x="1159.12" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.08%)</title><rect x="351.7" y="421" width="1.0" height="15.0" fill="rgb(212,213,39)" rx="2" ry="2" />
<text  x="354.71" y="431.5" ></text>
</g>
<g >
<title>alloc_page_buffers (6 samples, 0.49%)</title><rect x="835.7" y="165" width="5.8" height="15.0" fill="rgb(205,13,52)" rx="2" ry="2" />
<text  x="838.71" y="175.5" ></text>
</g>
<g >
<title>cpuidle_enter (3 samples, 0.25%)</title><rect x="1178.4" y="293" width="2.9" height="15.0" fill="rgb(220,2,53)" rx="2" ry="2" />
<text  x="1181.38" y="303.5" ></text>
</g>
<g >
<title>xas_store (1 samples, 0.08%)</title><rect x="1090.3" y="53" width="1.0" height="15.0" fill="rgb(251,193,46)" rx="2" ry="2" />
<text  x="1093.30" y="63.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (4 samples, 0.33%)</title><rect x="542.4" y="437" width="3.9" height="15.0" fill="rgb(248,176,9)" rx="2" ry="2" />
<text  x="545.40" y="447.5" ></text>
</g>
<g >
<title>lookup_bh_lru (2 samples, 0.16%)</title><rect x="941.2" y="53" width="2.0" height="15.0" fill="rgb(227,83,53)" rx="2" ry="2" />
<text  x="944.22" y="63.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1 samples, 0.08%)</title><rect x="175.5" y="325" width="1.0" height="15.0" fill="rgb(249,86,16)" rx="2" ry="2" />
<text  x="178.53" y="335.5" ></text>
</g>
<g >
<title>swapper (38 samples, 3.12%)</title><rect x="1153.2" y="453" width="36.8" height="15.0" fill="rgb(236,201,44)" rx="2" ry="2" />
<text  x="1156.22" y="463.5" >swa..</text>
</g>
<g >
<title>buffer_migrate_page (6 samples, 0.49%)</title><rect x="39.0" y="293" width="5.8" height="15.0" fill="rgb(217,155,41)" rx="2" ry="2" />
<text  x="42.04" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.08%)</title><rect x="1086.4" y="373" width="1.0" height="15.0" fill="rgb(239,150,54)" rx="2" ry="2" />
<text  x="1089.42" y="383.5" ></text>
</g>
<g >
<title>kick_ilb (10 samples, 0.82%)</title><rect x="269.4" y="229" width="9.7" height="15.0" fill="rgb(212,3,21)" rx="2" ry="2" />
<text  x="272.43" y="239.5" ></text>
</g>
<g >
<title>pick_next_task_fair (5 samples, 0.41%)</title><rect x="1184.2" y="277" width="4.8" height="15.0" fill="rgb(219,174,19)" rx="2" ry="2" />
<text  x="1187.19" y="287.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (3 samples, 0.25%)</title><rect x="195.9" y="261" width="2.9" height="15.0" fill="rgb(216,223,26)" rx="2" ry="2" />
<text  x="198.86" y="271.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (2 samples, 0.16%)</title><rect x="250.1" y="293" width="1.9" height="15.0" fill="rgb(236,111,20)" rx="2" ry="2" />
<text  x="253.07" y="303.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (3 samples, 0.25%)</title><rect x="1184.2" y="229" width="2.9" height="15.0" fill="rgb(245,84,43)" rx="2" ry="2" />
<text  x="1187.19" y="239.5" ></text>
</g>
<g >
<title>pick_next_task_fair (19 samples, 1.56%)</title><rect x="260.7" y="277" width="18.4" height="15.0" fill="rgb(222,108,49)" rx="2" ry="2" />
<text  x="263.71" y="287.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.08%)</title><rect x="350.7" y="229" width="1.0" height="15.0" fill="rgb(206,201,4)" rx="2" ry="2" />
<text  x="353.74" y="239.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.08%)</title><rect x="734.1" y="325" width="0.9" height="15.0" fill="rgb(228,167,53)" rx="2" ry="2" />
<text  x="737.07" y="335.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.08%)</title><rect x="351.7" y="213" width="1.0" height="15.0" fill="rgb(233,116,40)" rx="2" ry="2" />
<text  x="354.71" y="223.5" ></text>
</g>
<g >
<title>xas_clear_mark (1 samples, 0.08%)</title><rect x="1089.3" y="53" width="1.0" height="15.0" fill="rgb(248,13,43)" rx="2" ry="2" />
<text  x="1092.33" y="63.5" ></text>
</g>
<g >
<title>block_invalidatepage (5 samples, 0.41%)</title><rect x="1091.3" y="53" width="4.8" height="15.0" fill="rgb(251,160,47)" rx="2" ry="2" />
<text  x="1094.26" y="63.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.08%)</title><rect x="1156.1" y="277" width="1.0" height="15.0" fill="rgb(221,129,49)" rx="2" ry="2" />
<text  x="1159.12" y="287.5" ></text>
</g>
<g >
<title>new_sync_write (170 samples, 13.95%)</title><rect x="790.2" y="341" width="164.6" height="15.0" fill="rgb(230,198,52)" rx="2" ry="2" />
<text  x="793.21" y="351.5" >new_sync_write</text>
</g>
<g >
<title>stop_this_handle (1 samples, 0.08%)</title><rect x="873.5" y="181" width="0.9" height="15.0" fill="rgb(213,5,33)" rx="2" ry="2" />
<text  x="876.46" y="191.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="352.7" y="437" width="2.9" height="15.0" fill="rgb(206,159,5)" rx="2" ry="2" />
<text  x="355.67" y="447.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.08%)</title><rect x="904.4" y="69" width="1.0" height="15.0" fill="rgb(239,1,29)" rx="2" ry="2" />
<text  x="907.44" y="79.5" ></text>
</g>
<g >
<title>iput (8 samples, 0.66%)</title><rect x="1088.4" y="197" width="7.7" height="15.0" fill="rgb(240,106,39)" rx="2" ry="2" />
<text  x="1091.36" y="207.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.08%)</title><rect x="48.7" y="357" width="1.0" height="15.0" fill="rgb(216,120,22)" rx="2" ry="2" />
<text  x="51.72" y="367.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.08%)</title><rect x="350.7" y="293" width="1.0" height="15.0" fill="rgb(213,20,27)" rx="2" ry="2" />
<text  x="353.74" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.41%)</title><rect x="1110.6" y="437" width="4.9" height="15.0" fill="rgb(226,10,42)" rx="2" ry="2" />
<text  x="1113.62" y="447.5" ></text>
</g>
</g>
</svg>
