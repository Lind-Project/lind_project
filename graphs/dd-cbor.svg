<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>rw_verify_area (4 samples, 0.11%)</title><rect x="749.1" y="421" width="1.2" height="15.0" fill="rgb(254,95,5)" rx="2" ry="2" />
<text  x="752.08" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.03%)</title><rect x="228.6" y="469" width="0.3" height="15.0" fill="rgb(237,155,12)" rx="2" ry="2" />
<text  x="231.57" y="479.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="228.6" y="357" width="0.3" height="15.0" fill="rgb(236,37,49)" rx="2" ry="2" />
<text  x="231.57" y="367.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_some (1 samples, 0.03%)</title><rect x="254.5" y="517" width="0.3" height="15.0" fill="rgb(211,180,47)" rx="2" ry="2" />
<text  x="257.46" y="527.5" ></text>
</g>
<g >
<title>do_iter_write (6 samples, 0.16%)</title><rect x="248.8" y="373" width="1.9" height="15.0" fill="rgb(252,90,0)" rx="2" ry="2" />
<text  x="251.78" y="383.5" ></text>
</g>
<g >
<title>do_select (1 samples, 0.03%)</title><rect x="1142.6" y="437" width="0.3" height="15.0" fill="rgb(239,148,22)" rx="2" ry="2" />
<text  x="1145.62" y="447.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.05%)</title><rect x="932.6" y="501" width="0.6" height="15.0" fill="rgb(233,205,38)" rx="2" ry="2" />
<text  x="935.59" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="1048.8" y="517" width="0.6" height="15.0" fill="rgb(237,60,53)" rx="2" ry="2" />
<text  x="1051.82" y="527.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.05%)</title><rect x="114.9" y="309" width="0.6" height="15.0" fill="rgb(237,185,1)" rx="2" ry="2" />
<text  x="117.86" y="319.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (59 samples, 1.58%)</title><rect x="1171.4" y="501" width="18.6" height="15.0" fill="rgb(206,40,8)" rx="2" ry="2" />
<text  x="1174.37" y="511.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (25 samples, 0.67%)</title><rect x="164.4" y="389" width="7.9" height="15.0" fill="rgb(248,129,17)" rx="2" ry="2" />
<text  x="167.45" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter (193 samples, 5.17%)</title><rect x="32.7" y="437" width="61.0" height="15.0" fill="rgb(221,108,40)" rx="2" ry="2" />
<text  x="35.74" y="447.5" >cpuidl..</text>
</g>
<g >
<title>lind (1 samples, 0.03%)</title><rect x="228.2" y="533" width="0.4" height="15.0" fill="rgb(236,13,15)" rx="2" ry="2" />
<text  x="231.25" y="543.5" ></text>
</g>
<g >
<title>sel_ldr (2,793 samples, 74.76%)</title><rect x="251.6" y="533" width="882.2" height="15.0" fill="rgb(211,225,36)" rx="2" ry="2" />
<text  x="254.62" y="543.5" >sel_ldr</text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.03%)</title><rect x="215.3" y="357" width="0.3" height="15.0" fill="rgb(216,38,9)" rx="2" ry="2" />
<text  x="218.30" y="367.5" ></text>
</g>
<g >
<title>native_sched_clock (3 samples, 0.08%)</title><rect x="150.2" y="325" width="1.0" height="15.0" fill="rgb(210,163,27)" rx="2" ry="2" />
<text  x="153.24" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="39.4" y="405" width="0.6" height="15.0" fill="rgb(246,169,54)" rx="2" ry="2" />
<text  x="42.37" y="415.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="1172.6" y="293" width="0.3" height="15.0" fill="rgb(208,105,22)" rx="2" ry="2" />
<text  x="1175.63" y="303.5" ></text>
</g>
<g >
<title>ext4_generic_write_checks (3 samples, 0.08%)</title><rect x="689.1" y="309" width="0.9" height="15.0" fill="rgb(254,38,29)" rx="2" ry="2" />
<text  x="692.07" y="319.5" ></text>
</g>
<g >
<title>ksys_write (233 samples, 6.24%)</title><rect x="676.8" y="453" width="73.5" height="15.0" fill="rgb(239,118,29)" rx="2" ry="2" />
<text  x="679.75" y="463.5" >ksys_write</text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.05%)</title><rect x="225.1" y="389" width="0.6" height="15.0" fill="rgb(223,124,20)" rx="2" ry="2" />
<text  x="228.09" y="399.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.03%)</title><rect x="93.1" y="405" width="0.3" height="15.0" fill="rgb(226,183,3)" rx="2" ry="2" />
<text  x="96.07" y="415.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (7 samples, 0.19%)</title><rect x="287.6" y="517" width="2.2" height="15.0" fill="rgb(217,80,1)" rx="2" ry="2" />
<text  x="290.63" y="527.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="39.4" y="261" width="0.3" height="15.0" fill="rgb(213,201,43)" rx="2" ry="2" />
<text  x="42.37" y="271.5" ></text>
</g>
<g >
<title>read_hpet (1 samples, 0.03%)</title><rect x="39.7" y="229" width="0.3" height="15.0" fill="rgb(242,178,6)" rx="2" ry="2" />
<text  x="42.69" y="239.5" ></text>
</g>
<g >
<title>do_fault_around (1 samples, 0.03%)</title><rect x="228.2" y="389" width="0.4" height="15.0" fill="rgb(239,35,30)" rx="2" ry="2" />
<text  x="231.25" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_current (8 samples, 0.21%)</title><rect x="708.0" y="245" width="2.5" height="15.0" fill="rgb(212,174,34)" rx="2" ry="2" />
<text  x="711.02" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.03%)</title><rect x="1056.1" y="517" width="0.3" height="15.0" fill="rgb(245,204,27)" rx="2" ry="2" />
<text  x="1059.08" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (62 samples, 1.66%)</title><rect x="228.9" y="469" width="19.6" height="15.0" fill="rgb(251,39,12)" rx="2" ry="2" />
<text  x="231.88" y="479.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (29 samples, 0.78%)</title><rect x="293.0" y="517" width="9.2" height="15.0" fill="rgb(231,36,18)" rx="2" ry="2" />
<text  x="296.00" y="527.5" ></text>
</g>
<g >
<title>ovl_override_creds (1 samples, 0.03%)</title><rect x="642.3" y="421" width="0.3" height="15.0" fill="rgb(227,90,39)" rx="2" ry="2" />
<text  x="645.32" y="431.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.03%)</title><rect x="1170.1" y="341" width="0.3" height="15.0" fill="rgb(208,103,37)" rx="2" ry="2" />
<text  x="1173.10" y="351.5" ></text>
</g>
<g >
<title>start_kernel (284 samples, 7.60%)</title><rect x="109.5" y="469" width="89.7" height="15.0" fill="rgb(236,192,38)" rx="2" ry="2" />
<text  x="112.49" y="479.5" >start_kernel</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.03%)</title><rect x="36.5" y="197" width="0.3" height="15.0" fill="rgb(215,27,36)" rx="2" ry="2" />
<text  x="39.53" y="207.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (9 samples, 0.24%)</title><rect x="985.3" y="517" width="2.9" height="15.0" fill="rgb(229,174,2)" rx="2" ry="2" />
<text  x="988.33" y="527.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (1 samples, 0.03%)</title><rect x="92.8" y="389" width="0.3" height="15.0" fill="rgb(239,152,13)" rx="2" ry="2" />
<text  x="95.75" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="1166.9" y="309" width="0.4" height="15.0" fill="rgb(246,44,13)" rx="2" ry="2" />
<text  x="1169.94" y="319.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.03%)</title><rect x="1040.9" y="181" width="0.3" height="15.0" fill="rgb(235,91,35)" rx="2" ry="2" />
<text  x="1043.92" y="191.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (20 samples, 0.54%)</title><rect x="206.8" y="405" width="6.3" height="15.0" fill="rgb(227,171,13)" rx="2" ry="2" />
<text  x="209.77" y="415.5" ></text>
</g>
<g >
<title>cpuidle_enter (22 samples, 0.59%)</title><rect x="206.8" y="437" width="6.9" height="15.0" fill="rgb(228,196,51)" rx="2" ry="2" />
<text  x="209.77" y="447.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::size (1 samples, 0.03%)</title><rect x="944.3" y="517" width="0.3" height="15.0" fill="rgb(230,92,53)" rx="2" ry="2" />
<text  x="947.27" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (8 samples, 0.21%)</title><rect x="96.5" y="389" width="2.6" height="15.0" fill="rgb(209,108,2)" rx="2" ry="2" />
<text  x="99.54" y="399.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (7 samples, 0.19%)</title><rect x="976.8" y="517" width="2.2" height="15.0" fill="rgb(241,73,31)" rx="2" ry="2" />
<text  x="979.80" y="527.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (1 samples, 0.03%)</title><rect x="405.4" y="517" width="0.4" height="15.0" fill="rgb(230,150,49)" rx="2" ry="2" />
<text  x="408.44" y="527.5" ></text>
</g>
<g >
<title>do_idle (90 samples, 2.41%)</title><rect x="1142.9" y="469" width="28.5" height="15.0" fill="rgb(233,183,8)" rx="2" ry="2" />
<text  x="1145.94" y="479.5" >do..</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.03%)</title><rect x="1172.6" y="181" width="0.3" height="15.0" fill="rgb(211,133,3)" rx="2" ry="2" />
<text  x="1175.63" y="191.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="916.5" y="517" width="0.3" height="15.0" fill="rgb(241,70,54)" rx="2" ry="2" />
<text  x="919.48" y="527.5" ></text>
</g>
<g >
<title>__dentry_kill (7 samples, 0.19%)</title><rect x="907.3" y="309" width="2.2" height="15.0" fill="rgb(209,207,9)" rx="2" ry="2" />
<text  x="910.32" y="319.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (80 samples, 2.14%)</title><rect x="1142.9" y="453" width="25.3" height="15.0" fill="rgb(245,210,49)" rx="2" ry="2" />
<text  x="1145.94" y="463.5" >c..</text>
</g>
<g >
<title>schedule_idle (2 samples, 0.05%)</title><rect x="215.3" y="453" width="0.6" height="15.0" fill="rgb(225,153,7)" rx="2" ry="2" />
<text  x="218.30" y="463.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (2 samples, 0.05%)</title><rect x="1121.1" y="517" width="0.7" height="15.0" fill="rgb(249,159,6)" rx="2" ry="2" />
<text  x="1124.15" y="527.5" ></text>
</g>
<g >
<title>core::num::nonzero::NonZeroUsize::get (1 samples, 0.03%)</title><rect x="970.2" y="517" width="0.3" height="15.0" fill="rgb(223,140,44)" rx="2" ry="2" />
<text  x="973.17" y="527.5" ></text>
</g>
<g >
<title>_perf_event_enable (62 samples, 1.66%)</title><rect x="228.9" y="405" width="19.6" height="15.0" fill="rgb(251,226,18)" rx="2" ry="2" />
<text  x="231.88" y="415.5" ></text>
</g>
<g >
<title>down_read (1 samples, 0.03%)</title><rect x="700.8" y="229" width="0.3" height="15.0" fill="rgb(227,10,49)" rx="2" ry="2" />
<text  x="703.75" y="239.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.03%)</title><rect x="1112.6" y="517" width="0.3" height="15.0" fill="rgb(244,128,34)" rx="2" ry="2" />
<text  x="1115.62" y="527.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="639.2" y="437" width="0.6" height="15.0" fill="rgb(250,198,40)" rx="2" ry="2" />
<text  x="642.16" y="447.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (1 samples, 0.03%)</title><rect x="149.0" y="325" width="0.3" height="15.0" fill="rgb(249,223,24)" rx="2" ry="2" />
<text  x="151.97" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.29%)</title><rect x="1051.0" y="517" width="3.5" height="15.0" fill="rgb(225,78,8)" rx="2" ry="2" />
<text  x="1054.03" y="527.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (25 samples, 0.67%)</title><rect x="216.9" y="389" width="7.9" height="15.0" fill="rgb(248,6,15)" rx="2" ry="2" />
<text  x="219.88" y="399.5" ></text>
</g>
<g >
<title>new_sync_write (211 samples, 5.65%)</title><rect x="682.4" y="421" width="66.7" height="15.0" fill="rgb(253,109,53)" rx="2" ry="2" />
<text  x="685.44" y="431.5" >new_syn..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="272.8" y="501" width="0.3" height="15.0" fill="rgb(250,165,48)" rx="2" ry="2" />
<text  x="275.78" y="511.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="656.5" y="341" width="0.4" height="15.0" fill="rgb(217,142,27)" rx="2" ry="2" />
<text  x="659.54" y="351.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (65 samples, 1.74%)</title><rect x="693.2" y="293" width="20.5" height="15.0" fill="rgb(216,121,13)" rx="2" ry="2" />
<text  x="696.17" y="303.5" ></text>
</g>
<g >
<title>xa_get_order (1 samples, 0.03%)</title><rect x="707.7" y="229" width="0.3" height="15.0" fill="rgb(232,203,40)" rx="2" ry="2" />
<text  x="710.70" y="239.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (4 samples, 0.11%)</title><rect x="1184.6" y="341" width="1.3" height="15.0" fill="rgb(229,183,54)" rx="2" ry="2" />
<text  x="1187.63" y="351.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.03%)</title><rect x="151.5" y="357" width="0.3" height="15.0" fill="rgb(209,165,36)" rx="2" ry="2" />
<text  x="154.50" y="367.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (2 samples, 0.05%)</title><rect x="251.0" y="277" width="0.6" height="15.0" fill="rgb(249,71,51)" rx="2" ry="2" />
<text  x="253.99" y="287.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.19%)</title><rect x="1110.1" y="517" width="2.2" height="15.0" fill="rgb(212,64,53)" rx="2" ry="2" />
<text  x="1113.09" y="527.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (1 samples, 0.03%)</title><rect x="1171.4" y="389" width="0.3" height="15.0" fill="rgb(210,82,32)" rx="2" ry="2" />
<text  x="1174.37" y="399.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (6 samples, 0.16%)</title><rect x="251.6" y="517" width="1.9" height="15.0" fill="rgb(242,219,10)" rx="2" ry="2" />
<text  x="254.62" y="527.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.03%)</title><rect x="228.2" y="405" width="0.4" height="15.0" fill="rgb(253,50,8)" rx="2" ry="2" />
<text  x="231.25" y="415.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (9 samples, 0.24%)</title><rect x="743.1" y="293" width="2.8" height="15.0" fill="rgb(230,63,3)" rx="2" ry="2" />
<text  x="746.08" y="303.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.03%)</title><rect x="1184.9" y="325" width="0.4" height="15.0" fill="rgb(236,99,4)" rx="2" ry="2" />
<text  x="1187.95" y="335.5" ></text>
</g>
<g >
<title>down_write (1 samples, 0.03%)</title><rect x="682.8" y="405" width="0.3" height="15.0" fill="rgb(239,31,45)" rx="2" ry="2" />
<text  x="685.75" y="415.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6 samples, 0.16%)</title><rect x="1108.2" y="517" width="1.9" height="15.0" fill="rgb(214,189,20)" rx="2" ry="2" />
<text  x="1111.20" y="527.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (4 samples, 0.11%)</title><rect x="1172.9" y="341" width="1.3" height="15.0" fill="rgb(252,100,39)" rx="2" ry="2" />
<text  x="1175.94" y="351.5" ></text>
</g>
<g >
<title>ovl_d_real (1 samples, 0.03%)</title><rect x="642.0" y="421" width="0.3" height="15.0" fill="rgb(217,23,51)" rx="2" ry="2" />
<text  x="645.01" y="431.5" ></text>
</g>
<g >
<title>dput (7 samples, 0.19%)</title><rect x="907.3" y="341" width="2.2" height="15.0" fill="rgb(246,71,22)" rx="2" ry="2" />
<text  x="910.32" y="351.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (21 samples, 0.56%)</title><rect x="177.7" y="309" width="6.6" height="15.0" fill="rgb(248,45,40)" rx="2" ry="2" />
<text  x="180.71" y="319.5" ></text>
</g>
<g >
<title>ext4_fc_stop_update (1 samples, 0.03%)</title><rect x="746.9" y="325" width="0.3" height="15.0" fill="rgb(218,214,6)" rx="2" ry="2" />
<text  x="749.87" y="335.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="215.3" y="421" width="0.3" height="15.0" fill="rgb(233,68,5)" rx="2" ry="2" />
<text  x="218.30" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (1 samples, 0.03%)</title><rect x="163.8" y="357" width="0.3" height="15.0" fill="rgb(240,121,26)" rx="2" ry="2" />
<text  x="166.82" y="367.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.11%)</title><rect x="302.2" y="517" width="1.2" height="15.0" fill="rgb(213,4,13)" rx="2" ry="2" />
<text  x="305.16" y="527.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.03%)</title><rect x="223.5" y="341" width="0.3" height="15.0" fill="rgb(220,200,16)" rx="2" ry="2" />
<text  x="226.51" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3 samples, 0.08%)</title><rect x="719.4" y="197" width="0.9" height="15.0" fill="rgb(221,28,24)" rx="2" ry="2" />
<text  x="722.39" y="207.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.03%)</title><rect x="1040.9" y="293" width="0.3" height="15.0" fill="rgb(224,10,48)" rx="2" ry="2" />
<text  x="1043.92" y="303.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (16 samples, 0.43%)</title><rect x="1019.8" y="517" width="5.0" height="15.0" fill="rgb(219,210,43)" rx="2" ry="2" />
<text  x="1022.76" y="527.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.03%)</title><rect x="1170.1" y="373" width="0.3" height="15.0" fill="rgb(218,90,13)" rx="2" ry="2" />
<text  x="1173.10" y="383.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array (2 samples, 0.05%)</title><rect x="938.9" y="517" width="0.6" height="15.0" fill="rgb(251,80,27)" rx="2" ry="2" />
<text  x="941.90" y="527.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (7 samples, 0.19%)</title><rect x="700.8" y="245" width="2.2" height="15.0" fill="rgb(213,144,11)" rx="2" ry="2" />
<text  x="703.75" y="255.5" ></text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.05%)</title><rect x="1182.4" y="341" width="0.7" height="15.0" fill="rgb(229,74,25)" rx="2" ry="2" />
<text  x="1185.42" y="351.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (1 samples, 0.03%)</title><rect x="115.2" y="133" width="0.3" height="15.0" fill="rgb(222,53,21)" rx="2" ry="2" />
<text  x="118.18" y="143.5" ></text>
</g>
<g >
<title>poll_idle (15 samples, 0.40%)</title><rect x="217.5" y="341" width="4.7" height="15.0" fill="rgb(242,94,39)" rx="2" ry="2" />
<text  x="220.51" y="351.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (37 samples, 0.99%)</title><rect x="216.6" y="485" width="11.6" height="15.0" fill="rgb(222,27,38)" rx="2" ry="2" />
<text  x="219.56" y="495.5" ></text>
</g>
<g >
<title>alx_refill_rx_ring (1 samples, 0.03%)</title><rect x="36.5" y="245" width="0.3" height="15.0" fill="rgb(253,42,54)" rx="2" ry="2" />
<text  x="39.53" y="255.5" ></text>
</g>
<g >
<title>core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.03%)</title><rect x="970.5" y="517" width="0.3" height="15.0" fill="rgb(212,107,11)" rx="2" ry="2" />
<text  x="973.49" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.03%)</title><rect x="196.3" y="389" width="0.4" height="15.0" fill="rgb(214,155,35)" rx="2" ry="2" />
<text  x="199.35" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.03%)</title><rect x="163.8" y="325" width="0.3" height="15.0" fill="rgb(232,28,20)" rx="2" ry="2" />
<text  x="166.82" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (4 samples, 0.11%)</title><rect x="979.0" y="517" width="1.3" height="15.0" fill="rgb(241,173,40)" rx="2" ry="2" />
<text  x="982.01" y="527.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (1 samples, 0.03%)</title><rect x="158.8" y="325" width="0.3" height="15.0" fill="rgb(242,2,15)" rx="2" ry="2" />
<text  x="161.76" y="335.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.03%)</title><rect x="700.1" y="197" width="0.3" height="15.0" fill="rgb(205,104,20)" rx="2" ry="2" />
<text  x="703.12" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (62 samples, 1.66%)</title><rect x="228.9" y="485" width="19.6" height="15.0" fill="rgb(219,62,26)" rx="2" ry="2" />
<text  x="231.88" y="495.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.03%)</title><rect x="745.9" y="293" width="0.3" height="15.0" fill="rgb(217,54,36)" rx="2" ry="2" />
<text  x="748.92" y="303.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.03%)</title><rect x="36.8" y="213" width="0.4" height="15.0" fill="rgb(242,45,16)" rx="2" ry="2" />
<text  x="39.85" y="223.5" ></text>
</g>
<g >
<title>asm_common_interrupt (19 samples, 0.51%)</title><rect x="33.4" y="405" width="6.0" height="15.0" fill="rgb(244,30,17)" rx="2" ry="2" />
<text  x="36.37" y="415.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.03%)</title><rect x="36.5" y="165" width="0.3" height="15.0" fill="rgb(217,9,18)" rx="2" ry="2" />
<text  x="39.53" y="175.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (22 samples, 0.59%)</title><rect x="618.3" y="517" width="7.0" height="15.0" fill="rgb(217,229,15)" rx="2" ry="2" />
<text  x="621.32" y="527.5" ></text>
</g>
<g >
<title>arp_process (1 samples, 0.03%)</title><rect x="38.1" y="165" width="0.3" height="15.0" fill="rgb(243,150,33)" rx="2" ry="2" />
<text  x="41.11" y="175.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.03%)</title><rect x="149.0" y="341" width="0.3" height="15.0" fill="rgb(233,210,30)" rx="2" ry="2" />
<text  x="151.97" y="351.5" ></text>
</g>
<g >
<title>copyin (2 samples, 0.05%)</title><rect x="745.3" y="277" width="0.6" height="15.0" fill="rgb(244,104,16)" rx="2" ry="2" />
<text  x="748.29" y="287.5" ></text>
</g>
<g >
<title>shrink_page_list (1 samples, 0.03%)</title><rect x="30.8" y="389" width="0.4" height="15.0" fill="rgb(236,116,53)" rx="2" ry="2" />
<text  x="33.85" y="399.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.03%)</title><rect x="1170.1" y="325" width="0.3" height="15.0" fill="rgb(208,56,9)" rx="2" ry="2" />
<text  x="1173.10" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_write (234 samples, 6.26%)</title><rect x="676.4" y="469" width="73.9" height="15.0" fill="rgb(243,8,53)" rx="2" ry="2" />
<text  x="679.43" y="479.5" >__x64_sy..</text>
</g>
<g >
<title>ext4_da_write_begin (2 samples, 0.05%)</title><rect x="248.8" y="293" width="0.6" height="15.0" fill="rgb(240,102,42)" rx="2" ry="2" />
<text  x="251.78" y="303.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (5 samples, 0.13%)</title><rect x="1114.5" y="517" width="1.6" height="15.0" fill="rgb(238,135,40)" rx="2" ry="2" />
<text  x="1117.51" y="527.5" ></text>
</g>
<g >
<title>poll_idle (100 samples, 2.68%)</title><rect x="117.4" y="341" width="31.6" height="15.0" fill="rgb(235,27,29)" rx="2" ry="2" />
<text  x="120.39" y="351.5" >po..</text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.05%)</title><rect x="1181.2" y="309" width="0.6" height="15.0" fill="rgb(251,206,25)" rx="2" ry="2" />
<text  x="1184.16" y="319.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (9 samples, 0.24%)</title><rect x="104.1" y="389" width="2.9" height="15.0" fill="rgb(229,195,5)" rx="2" ry="2" />
<text  x="107.12" y="399.5" ></text>
</g>
<g >
<title>[sel_ldr] (8 samples, 0.21%)</title><rect x="494.8" y="517" width="2.6" height="15.0" fill="rgb(210,34,36)" rx="2" ry="2" />
<text  x="497.82" y="527.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (3 samples, 0.08%)</title><rect x="709.6" y="181" width="0.9" height="15.0" fill="rgb(215,22,30)" rx="2" ry="2" />
<text  x="712.60" y="191.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (11 samples, 0.29%)</title><rect x="35.9" y="357" width="3.5" height="15.0" fill="rgb(224,223,31)" rx="2" ry="2" />
<text  x="38.90" y="367.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (4 samples, 0.11%)</title><rect x="445.9" y="517" width="1.2" height="15.0" fill="rgb(248,157,7)" rx="2" ry="2" />
<text  x="448.87" y="527.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (1 samples, 0.03%)</title><rect x="253.5" y="517" width="0.3" height="15.0" fill="rgb(206,195,41)" rx="2" ry="2" />
<text  x="256.52" y="527.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (2 samples, 0.05%)</title><rect x="114.9" y="149" width="0.6" height="15.0" fill="rgb(206,83,15)" rx="2" ry="2" />
<text  x="117.86" y="159.5" ></text>
</g>
<g >
<title>alloc_pages_current (2 samples, 0.05%)</title><rect x="248.8" y="245" width="0.6" height="15.0" fill="rgb(241,192,13)" rx="2" ry="2" />
<text  x="251.78" y="255.5" ></text>
</g>
<g >
<title>__getblk_gfp (6 samples, 0.16%)</title><rect x="740.6" y="165" width="1.8" height="15.0" fill="rgb(242,204,52)" rx="2" ry="2" />
<text  x="743.55" y="175.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.03%)</title><rect x="214.0" y="389" width="0.4" height="15.0" fill="rgb(211,21,36)" rx="2" ry="2" />
<text  x="217.04" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter (77 samples, 2.06%)</title><rect x="1142.9" y="437" width="24.4" height="15.0" fill="rgb(250,140,11)" rx="2" ry="2" />
<text  x="1145.94" y="447.5" >c..</text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.05%)</title><rect x="148.3" y="309" width="0.7" height="15.0" fill="rgb(222,103,35)" rx="2" ry="2" />
<text  x="151.34" y="319.5" ></text>
</g>
<g >
<title>handle_edge_irq (8 samples, 0.21%)</title><rect x="33.4" y="357" width="2.5" height="15.0" fill="rgb(246,71,47)" rx="2" ry="2" />
<text  x="36.37" y="367.5" ></text>
</g>
<g >
<title>ip_list_rcv (1 samples, 0.03%)</title><rect x="38.4" y="197" width="0.3" height="15.0" fill="rgb(231,225,7)" rx="2" ry="2" />
<text  x="41.43" y="207.5" ></text>
</g>
<g >
<title>_int_malloc (7 samples, 0.19%)</title><rect x="910.8" y="517" width="2.2" height="15.0" fill="rgb(237,29,53)" rx="2" ry="2" />
<text  x="913.79" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (237 samples, 6.34%)</title><rect x="675.8" y="485" width="74.9" height="15.0" fill="rgb(243,9,32)" rx="2" ry="2" />
<text  x="678.80" y="495.5" >do_sysca..</text>
</g>
<g >
<title>__wake_up_common_lock (6 samples, 0.16%)</title><rect x="718.4" y="213" width="1.9" height="15.0" fill="rgb(247,112,35)" rx="2" ry="2" />
<text  x="721.44" y="223.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.13%)</title><rect x="1015.0" y="517" width="1.6" height="15.0" fill="rgb(236,29,49)" rx="2" ry="2" />
<text  x="1018.02" y="527.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (2 samples, 0.05%)</title><rect x="1185.3" y="309" width="0.6" height="15.0" fill="rgb(231,93,0)" rx="2" ry="2" />
<text  x="1188.26" y="319.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.08%)</title><rect x="677.4" y="421" width="0.9" height="15.0" fill="rgb(213,228,14)" rx="2" ry="2" />
<text  x="680.38" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="907.0" y="501" width="0.3" height="15.0" fill="rgb(216,80,17)" rx="2" ry="2" />
<text  x="910.00" y="511.5" ></text>
</g>
<g >
<title>start_kernel (59 samples, 1.58%)</title><rect x="1171.4" y="469" width="18.6" height="15.0" fill="rgb(218,153,1)" rx="2" ry="2" />
<text  x="1174.37" y="479.5" ></text>
</g>
<g >
<title>NaClCondVarBroadcast (56 samples, 1.50%)</title><rect x="337.2" y="517" width="17.7" height="15.0" fill="rgb(215,47,16)" rx="2" ry="2" />
<text  x="340.22" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="1167.9" y="341" width="0.3" height="15.0" fill="rgb(254,136,13)" rx="2" ry="2" />
<text  x="1170.89" y="351.5" ></text>
</g>
<g >
<title>down_write (1 samples, 0.03%)</title><rect x="688.1" y="309" width="0.3" height="15.0" fill="rgb(232,51,19)" rx="2" ry="2" />
<text  x="691.12" y="319.5" ></text>
</g>
<g >
<title>atime_needs_update (2 samples, 0.05%)</title><rect x="656.2" y="357" width="0.7" height="15.0" fill="rgb(227,63,48)" rx="2" ry="2" />
<text  x="659.22" y="367.5" ></text>
</g>
<g >
<title>iput.part.0 (7 samples, 0.19%)</title><rect x="907.3" y="421" width="2.2" height="15.0" fill="rgb(249,89,40)" rx="2" ry="2" />
<text  x="910.32" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.03%)</title><rect x="500.8" y="517" width="0.3" height="15.0" fill="rgb(250,10,35)" rx="2" ry="2" />
<text  x="503.82" y="527.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.03%)</title><rect x="173.6" y="357" width="0.3" height="15.0" fill="rgb(207,120,30)" rx="2" ry="2" />
<text  x="176.61" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.05%)</title><rect x="214.7" y="453" width="0.6" height="15.0" fill="rgb(214,85,24)" rx="2" ry="2" />
<text  x="217.67" y="463.5" ></text>
</g>
<g >
<title>ip6_rcv_finish_core.constprop.0.isra.0 (1 samples, 0.03%)</title><rect x="38.7" y="149" width="0.4" height="15.0" fill="rgb(225,1,39)" rx="2" ry="2" />
<text  x="41.74" y="159.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (6 samples, 0.16%)</title><rect x="914.6" y="517" width="1.9" height="15.0" fill="rgb(226,221,39)" rx="2" ry="2" />
<text  x="917.58" y="527.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.05%)</title><rect x="1185.3" y="293" width="0.6" height="15.0" fill="rgb(251,205,10)" rx="2" ry="2" />
<text  x="1188.26" y="303.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (5 samples, 0.13%)</title><rect x="444.3" y="517" width="1.6" height="15.0" fill="rgb(210,95,19)" rx="2" ry="2" />
<text  x="447.29" y="527.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.03%)</title><rect x="93.1" y="389" width="0.3" height="15.0" fill="rgb(242,97,35)" rx="2" ry="2" />
<text  x="96.07" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1040.6" y="517" width="0.6" height="15.0" fill="rgb(227,100,24)" rx="2" ry="2" />
<text  x="1043.60" y="527.5" ></text>
</g>
<g >
<title>jbd2__journal_start (1 samples, 0.03%)</title><rect x="723.2" y="213" width="0.3" height="15.0" fill="rgb(224,176,37)" rx="2" ry="2" />
<text  x="726.18" y="223.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (18 samples, 0.48%)</title><rect x="994.5" y="517" width="5.7" height="15.0" fill="rgb(253,44,12)" rx="2" ry="2" />
<text  x="997.49" y="527.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="224.5" y="293" width="0.3" height="15.0" fill="rgb(247,131,26)" rx="2" ry="2" />
<text  x="227.46" y="303.5" ></text>
</g>
<g >
<title>ovl_file_accessed.part.0 (4 samples, 0.11%)</title><rect x="655.6" y="389" width="1.3" height="15.0" fill="rgb(241,158,19)" rx="2" ry="2" />
<text  x="658.59" y="399.5" ></text>
</g>
<g >
<title>std::lazy::SyncLazy&lt;T,F&gt;::force (1 samples, 0.03%)</title><rect x="1112.3" y="517" width="0.3" height="15.0" fill="rgb(253,191,0)" rx="2" ry="2" />
<text  x="1115.30" y="527.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (6 samples, 0.16%)</title><rect x="97.2" y="357" width="1.9" height="15.0" fill="rgb(218,148,19)" rx="2" ry="2" />
<text  x="100.17" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.03%)</title><rect x="1189.4" y="389" width="0.3" height="15.0" fill="rgb(219,115,3)" rx="2" ry="2" />
<text  x="1192.37" y="399.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (25 samples, 0.67%)</title><rect x="206.8" y="453" width="7.9" height="15.0" fill="rgb(232,126,34)" rx="2" ry="2" />
<text  x="209.77" y="463.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.05%)</title><rect x="749.7" y="389" width="0.6" height="15.0" fill="rgb(220,137,0)" rx="2" ry="2" />
<text  x="752.71" y="399.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="1189.4" y="357" width="0.3" height="15.0" fill="rgb(222,19,0)" rx="2" ry="2" />
<text  x="1192.37" y="367.5" ></text>
</g>
<g >
<title>menu_select (35 samples, 0.94%)</title><rect x="152.4" y="357" width="11.1" height="15.0" fill="rgb(222,152,44)" rx="2" ry="2" />
<text  x="155.45" y="367.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.03%)</title><rect x="215.3" y="405" width="0.3" height="15.0" fill="rgb(236,127,50)" rx="2" ry="2" />
<text  x="218.30" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.08%)</title><rect x="1046.0" y="517" width="0.9" height="15.0" fill="rgb(216,27,1)" rx="2" ry="2" />
<text  x="1048.97" y="527.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (2 samples, 0.05%)</title><rect x="688.4" y="309" width="0.7" height="15.0" fill="rgb(244,167,39)" rx="2" ry="2" />
<text  x="691.44" y="319.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.13%)</title><rect x="312.6" y="517" width="1.6" height="15.0" fill="rgb(253,93,34)" rx="2" ry="2" />
<text  x="315.58" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.05%)</title><rect x="651.5" y="501" width="0.6" height="15.0" fill="rgb(247,209,53)" rx="2" ry="2" />
<text  x="654.48" y="511.5" ></text>
</g>
<g >
<title>menu_select (18 samples, 0.48%)</title><rect x="93.7" y="421" width="5.7" height="15.0" fill="rgb(212,171,0)" rx="2" ry="2" />
<text  x="96.70" y="431.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.05%)</title><rect x="256.0" y="517" width="0.7" height="15.0" fill="rgb(225,183,30)" rx="2" ry="2" />
<text  x="259.04" y="527.5" ></text>
</g>
<g >
<title>std::sync::poison::map_result (12 samples, 0.32%)</title><rect x="1122.1" y="517" width="3.8" height="15.0" fill="rgb(222,126,45)" rx="2" ry="2" />
<text  x="1125.09" y="527.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (8 samples, 0.21%)</title><rect x="739.9" y="181" width="2.5" height="15.0" fill="rgb(221,38,49)" rx="2" ry="2" />
<text  x="742.92" y="191.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.03%)</title><rect x="93.4" y="389" width="0.3" height="15.0" fill="rgb(207,218,35)" rx="2" ry="2" />
<text  x="96.38" y="399.5" ></text>
</g>
<g >
<title>ext4_fc_track_inode (1 samples, 0.03%)</title><rect x="723.5" y="213" width="0.3" height="15.0" fill="rgb(230,54,44)" rx="2" ry="2" />
<text  x="726.50" y="223.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.03%)</title><rect x="1167.9" y="373" width="0.3" height="15.0" fill="rgb(211,144,4)" rx="2" ry="2" />
<text  x="1170.89" y="383.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (2 samples, 0.05%)</title><rect x="1128.7" y="517" width="0.7" height="15.0" fill="rgb(215,200,32)" rx="2" ry="2" />
<text  x="1131.73" y="527.5" ></text>
</g>
<g >
<title>__fsnotify_parent (2 samples, 0.05%)</title><rect x="681.8" y="421" width="0.6" height="15.0" fill="rgb(206,186,51)" rx="2" ry="2" />
<text  x="684.80" y="431.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::GenericInode&gt;::serialize (6 samples, 0.16%)</title><rect x="1082.9" y="517" width="1.9" height="15.0" fill="rgb(241,171,50)" rx="2" ry="2" />
<text  x="1085.93" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (4 samples, 0.11%)</title><rect x="1059.6" y="517" width="1.2" height="15.0" fill="rgb(209,29,40)" rx="2" ry="2" />
<text  x="1062.56" y="527.5" ></text>
</g>
<g >
<title>cs_watchdog_read (1 samples, 0.03%)</title><rect x="39.7" y="245" width="0.3" height="15.0" fill="rgb(209,82,33)" rx="2" ry="2" />
<text  x="42.69" y="255.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.03%)</title><rect x="702.3" y="197" width="0.3" height="15.0" fill="rgb(206,116,32)" rx="2" ry="2" />
<text  x="705.33" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (62 samples, 1.66%)</title><rect x="228.9" y="501" width="19.6" height="15.0" fill="rgb(249,215,53)" rx="2" ry="2" />
<text  x="231.88" y="511.5" ></text>
</g>
<g >
<title>event_function (2 samples, 0.05%)</title><rect x="251.0" y="341" width="0.6" height="15.0" fill="rgb(207,187,9)" rx="2" ry="2" />
<text  x="253.99" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.19%)</title><rect x="907.3" y="501" width="2.2" height="15.0" fill="rgb(242,14,38)" rx="2" ry="2" />
<text  x="910.32" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1142.6" y="501" width="0.3" height="15.0" fill="rgb(213,204,46)" rx="2" ry="2" />
<text  x="1145.62" y="511.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.21%)</title><rect x="270.3" y="501" width="2.5" height="15.0" fill="rgb(250,123,51)" rx="2" ry="2" />
<text  x="273.26" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (11 samples, 0.29%)</title><rect x="672.0" y="501" width="3.5" height="15.0" fill="rgb(241,217,27)" rx="2" ry="2" />
<text  x="675.01" y="511.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.03%)</title><rect x="708.3" y="213" width="0.4" height="15.0" fill="rgb(247,167,20)" rx="2" ry="2" />
<text  x="711.34" y="223.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (2 samples, 0.05%)</title><rect x="1024.8" y="517" width="0.6" height="15.0" fill="rgb(205,182,22)" rx="2" ry="2" />
<text  x="1027.81" y="527.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (8 samples, 0.21%)</title><rect x="700.4" y="261" width="2.6" height="15.0" fill="rgb(214,30,54)" rx="2" ry="2" />
<text  x="703.44" y="271.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (3 samples, 0.08%)</title><rect x="95.6" y="389" width="0.9" height="15.0" fill="rgb(250,105,13)" rx="2" ry="2" />
<text  x="98.59" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="96.2" y="373" width="0.3" height="15.0" fill="rgb(254,162,4)" rx="2" ry="2" />
<text  x="99.23" y="383.5" ></text>
</g>
<g >
<title>ovl_write_iter (205 samples, 5.49%)</title><rect x="683.7" y="405" width="64.7" height="15.0" fill="rgb(251,125,3)" rx="2" ry="2" />
<text  x="686.70" y="415.5" >ovl_wri..</text>
</g>
<g >
<title>__pagevec_lru_add (1 samples, 0.03%)</title><rect x="707.1" y="229" width="0.3" height="15.0" fill="rgb(213,164,10)" rx="2" ry="2" />
<text  x="710.07" y="239.5" ></text>
</g>
<g >
<title>menu_update (5 samples, 0.13%)</title><rect x="156.2" y="341" width="1.6" height="15.0" fill="rgb(247,41,8)" rx="2" ry="2" />
<text  x="159.24" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.05%)</title><rect x="114.9" y="213" width="0.6" height="15.0" fill="rgb(226,134,52)" rx="2" ry="2" />
<text  x="117.86" y="223.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (2 samples, 0.05%)</title><rect x="224.1" y="325" width="0.7" height="15.0" fill="rgb(214,72,8)" rx="2" ry="2" />
<text  x="227.14" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::log_metadata (3 samples, 0.08%)</title><rect x="1084.8" y="517" width="1.0" height="15.0" fill="rgb(205,106,27)" rx="2" ry="2" />
<text  x="1087.82" y="527.5" ></text>
</g>
<g >
<title>menu_select (3 samples, 0.08%)</title><rect x="1167.3" y="421" width="0.9" height="15.0" fill="rgb(217,129,27)" rx="2" ry="2" />
<text  x="1170.26" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.03%)</title><rect x="163.8" y="293" width="0.3" height="15.0" fill="rgb(238,44,1)" rx="2" ry="2" />
<text  x="166.82" y="303.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.03%)</title><rect x="1166.9" y="229" width="0.4" height="15.0" fill="rgb(221,206,18)" rx="2" ry="2" />
<text  x="1169.94" y="239.5" ></text>
</g>
<g >
<title>ext4_da_write_end (93 samples, 2.49%)</title><rect x="713.7" y="293" width="29.4" height="15.0" fill="rgb(221,141,14)" rx="2" ry="2" />
<text  x="716.70" y="303.5" >ex..</text>
</g>
<g >
<title>newidle_balance (59 samples, 1.58%)</title><rect x="174.2" y="341" width="18.7" height="15.0" fill="rgb(221,81,49)" rx="2" ry="2" />
<text  x="177.24" y="351.5" ></text>
</g>
<g >
<title>core_sys_select (1 samples, 0.03%)</title><rect x="1142.6" y="453" width="0.3" height="15.0" fill="rgb(254,208,16)" rx="2" ry="2" />
<text  x="1145.62" y="463.5" ></text>
</g>
<g >
<title>CompareAndSwap (2 samples, 0.05%)</title><rect x="314.5" y="517" width="0.6" height="15.0" fill="rgb(219,170,51)" rx="2" ry="2" />
<text  x="317.48" y="527.5" ></text>
</g>
<g >
<title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.03%)</title><rect x="1114.2" y="453" width="0.3" height="15.0" fill="rgb(245,212,12)" rx="2" ry="2" />
<text  x="1117.20" y="463.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.03%)</title><rect x="692.9" y="293" width="0.3" height="15.0" fill="rgb(246,99,53)" rx="2" ry="2" />
<text  x="695.86" y="303.5" ></text>
</g>
<g >
<title>schedule_idle (9 samples, 0.24%)</title><rect x="1186.5" y="389" width="2.9" height="15.0" fill="rgb(212,84,32)" rx="2" ry="2" />
<text  x="1189.53" y="399.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (167 samples, 4.47%)</title><rect x="111.4" y="389" width="52.7" height="15.0" fill="rgb(213,49,19)" rx="2" ry="2" />
<text  x="114.39" y="399.5" >cpuid..</text>
</g>
<g >
<title>x86_64_start_reservations (59 samples, 1.58%)</title><rect x="1171.4" y="485" width="18.6" height="15.0" fill="rgb(211,42,21)" rx="2" ry="2" />
<text  x="1174.37" y="495.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (3 samples, 0.08%)</title><rect x="704.9" y="213" width="0.9" height="15.0" fill="rgb(208,173,28)" rx="2" ry="2" />
<text  x="707.86" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1166.9" y="389" width="0.4" height="15.0" fill="rgb(236,71,9)" rx="2" ry="2" />
<text  x="1169.94" y="399.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::make_slice (4 samples, 0.11%)</title><rect x="1018.5" y="501" width="1.3" height="15.0" fill="rgb(252,63,51)" rx="2" ry="2" />
<text  x="1021.50" y="511.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (26 samples, 0.70%)</title><rect x="729.5" y="181" width="8.2" height="15.0" fill="rgb(244,101,32)" rx="2" ry="2" />
<text  x="732.50" y="191.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (369 samples, 9.88%)</title><rect x="790.5" y="517" width="116.5" height="15.0" fill="rgb(234,47,9)" rx="2" ry="2" />
<text  x="793.46" y="527.5" >__pthread_mute..</text>
</g>
<g >
<title>ovl_override_creds (1 samples, 0.03%)</title><rect x="685.9" y="389" width="0.3" height="15.0" fill="rgb(221,142,45)" rx="2" ry="2" />
<text  x="688.91" y="399.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="1056.7" y="485" width="0.3" height="15.0" fill="rgb(232,221,20)" rx="2" ry="2" />
<text  x="1059.71" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::handle_reserve (1 samples, 0.03%)</title><rect x="926.3" y="517" width="0.3" height="15.0" fill="rgb(228,147,15)" rx="2" ry="2" />
<text  x="929.27" y="527.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.05%)</title><rect x="114.9" y="277" width="0.6" height="15.0" fill="rgb(209,190,39)" rx="2" ry="2" />
<text  x="117.86" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.11%)</title><rect x="924.1" y="517" width="1.2" height="15.0" fill="rgb(221,195,42)" rx="2" ry="2" />
<text  x="927.06" y="527.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="308.2" y="517" width="0.6" height="15.0" fill="rgb(215,215,3)" rx="2" ry="2" />
<text  x="311.16" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (9 samples, 0.24%)</title><rect x="625.9" y="517" width="2.8" height="15.0" fill="rgb(251,151,5)" rx="2" ry="2" />
<text  x="628.90" y="527.5" ></text>
</g>
<g >
<title>generic_write_checks (1 samples, 0.03%)</title><rect x="689.7" y="293" width="0.3" height="15.0" fill="rgb(232,216,20)" rx="2" ry="2" />
<text  x="692.70" y="303.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (8 samples, 0.21%)</title><rect x="196.7" y="405" width="2.5" height="15.0" fill="rgb(236,56,34)" rx="2" ry="2" />
<text  x="199.66" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::seek (2 samples, 0.05%)</title><rect x="310.4" y="501" width="0.6" height="15.0" fill="rgb(226,43,38)" rx="2" ry="2" />
<text  x="313.37" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.05%)</title><rect x="248.8" y="229" width="0.6" height="15.0" fill="rgb(236,227,23)" rx="2" ry="2" />
<text  x="251.78" y="239.5" ></text>
</g>
<g >
<title>down_write (3 samples, 0.08%)</title><rect x="685.0" y="389" width="0.9" height="15.0" fill="rgb(234,191,30)" rx="2" ry="2" />
<text  x="687.96" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (2 samples, 0.05%)</title><rect x="502.4" y="517" width="0.6" height="15.0" fill="rgb(231,30,34)" rx="2" ry="2" />
<text  x="505.40" y="527.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (2 samples, 0.05%)</title><rect x="1130.6" y="517" width="0.7" height="15.0" fill="rgb(229,155,18)" rx="2" ry="2" />
<text  x="1133.62" y="527.5" ></text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.03%)</title><rect x="694.1" y="245" width="0.3" height="15.0" fill="rgb(243,221,35)" rx="2" ry="2" />
<text  x="697.12" y="255.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.03%)</title><rect x="222.2" y="341" width="0.4" height="15.0" fill="rgb(249,63,35)" rx="2" ry="2" />
<text  x="225.25" y="351.5" ></text>
</g>
<g >
<title>copy_page_to_iter (12 samples, 0.32%)</title><rect x="658.7" y="293" width="3.8" height="15.0" fill="rgb(226,208,10)" rx="2" ry="2" />
<text  x="661.75" y="303.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="668.9" y="389" width="0.3" height="15.0" fill="rgb(250,154,25)" rx="2" ry="2" />
<text  x="671.85" y="399.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="222.6" y="341" width="0.3" height="15.0" fill="rgb(210,58,2)" rx="2" ry="2" />
<text  x="225.56" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_read (54 samples, 1.45%)</title><rect x="652.1" y="469" width="17.1" height="15.0" fill="rgb(224,214,52)" rx="2" ry="2" />
<text  x="655.11" y="479.5" ></text>
</g>
<g >
<title>cpu_latency_qos_limit (1 samples, 0.03%)</title><rect x="155.6" y="325" width="0.3" height="15.0" fill="rgb(235,165,36)" rx="2" ry="2" />
<text  x="158.60" y="335.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u8 (7 samples, 0.19%)</title><rect x="1101.6" y="517" width="2.2" height="15.0" fill="rgb(247,4,40)" rx="2" ry="2" />
<text  x="1104.56" y="527.5" ></text>
</g>
<g >
<title>vfs_iter_write (6 samples, 0.16%)</title><rect x="248.8" y="389" width="1.9" height="15.0" fill="rgb(235,49,40)" rx="2" ry="2" />
<text  x="251.78" y="399.5" ></text>
</g>
<g >
<title>ext4_fc_track_inode (3 samples, 0.08%)</title><rect x="738.0" y="197" width="1.0" height="15.0" fill="rgb(220,94,44)" rx="2" ry="2" />
<text  x="741.02" y="207.5" ></text>
</g>
<g >
<title>__netdev_alloc_skb (1 samples, 0.03%)</title><rect x="36.5" y="229" width="0.3" height="15.0" fill="rgb(242,129,45)" rx="2" ry="2" />
<text  x="39.53" y="239.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (3 samples, 0.08%)</title><rect x="1017.5" y="501" width="1.0" height="15.0" fill="rgb(225,112,31)" rx="2" ry="2" />
<text  x="1020.55" y="511.5" ></text>
</g>
<g >
<title>cmd_record (1 samples, 0.03%)</title><rect x="250.7" y="517" width="0.3" height="15.0" fill="rgb(228,63,18)" rx="2" ry="2" />
<text  x="253.67" y="527.5" ></text>
</g>
<g >
<title>ext4_fc_track_template (2 samples, 0.05%)</title><rect x="738.3" y="181" width="0.7" height="15.0" fill="rgb(206,148,38)" rx="2" ry="2" />
<text  x="741.34" y="191.5" ></text>
</g>
<g >
<title>generic_perform_write (6 samples, 0.16%)</title><rect x="248.8" y="309" width="1.9" height="15.0" fill="rgb(253,173,26)" rx="2" ry="2" />
<text  x="251.78" y="319.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (2 samples, 0.05%)</title><rect x="224.1" y="309" width="0.7" height="15.0" fill="rgb(236,163,47)" rx="2" ry="2" />
<text  x="227.14" y="319.5" ></text>
</g>
<g >
<title>iput (7 samples, 0.19%)</title><rect x="907.3" y="437" width="2.2" height="15.0" fill="rgb(212,190,33)" rx="2" ry="2" />
<text  x="910.32" y="447.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.11%)</title><rect x="225.7" y="373" width="1.3" height="15.0" fill="rgb(237,54,42)" rx="2" ry="2" />
<text  x="228.72" y="383.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new::{{closure}} (1 samples, 0.03%)</title><rect x="1127.1" y="517" width="0.4" height="15.0" fill="rgb(246,39,40)" rx="2" ry="2" />
<text  x="1130.15" y="527.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (1 samples, 0.03%)</title><rect x="357.7" y="517" width="0.4" height="15.0" fill="rgb(238,105,4)" rx="2" ry="2" />
<text  x="360.75" y="527.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (1 samples, 0.03%)</title><rect x="701.1" y="229" width="0.3" height="15.0" fill="rgb(249,222,6)" rx="2" ry="2" />
<text  x="704.07" y="239.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (11 samples, 0.29%)</title><rect x="100.3" y="453" width="3.5" height="15.0" fill="rgb(249,32,10)" rx="2" ry="2" />
<text  x="103.33" y="463.5" ></text>
</g>
<g >
<title>llist_add_batch (1 samples, 0.03%)</title><rect x="226.7" y="277" width="0.3" height="15.0" fill="rgb(227,150,47)" rx="2" ry="2" />
<text  x="229.67" y="287.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="228.6" y="293" width="0.3" height="15.0" fill="rgb(249,200,25)" rx="2" ry="2" />
<text  x="231.57" y="303.5" ></text>
</g>
<g >
<title>try_to_free_buffers (2 samples, 0.05%)</title><rect x="908.6" y="69" width="0.6" height="15.0" fill="rgb(240,45,25)" rx="2" ry="2" />
<text  x="911.58" y="79.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="256.7" y="517" width="0.3" height="15.0" fill="rgb(246,174,35)" rx="2" ry="2" />
<text  x="259.68" y="527.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (149 samples, 3.99%)</title><rect x="1142.9" y="517" width="47.1" height="15.0" fill="rgb(249,97,3)" rx="2" ry="2" />
<text  x="1145.94" y="527.5" >seco..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="936.7" y="517" width="0.6" height="15.0" fill="rgb(248,47,32)" rx="2" ry="2" />
<text  x="939.69" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.05%)</title><rect x="193.2" y="325" width="0.6" height="15.0" fill="rgb(214,119,29)" rx="2" ry="2" />
<text  x="196.19" y="335.5" ></text>
</g>
<g >
<title>do_idle (30 samples, 0.80%)</title><rect x="206.8" y="469" width="9.4" height="15.0" fill="rgb(215,75,40)" rx="2" ry="2" />
<text  x="209.77" y="479.5" ></text>
</g>
<g >
<title>file_update_time (1 samples, 0.03%)</title><rect x="690.0" y="293" width="0.3" height="15.0" fill="rgb(220,55,44)" rx="2" ry="2" />
<text  x="693.02" y="303.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.03%)</title><rect x="695.7" y="245" width="0.3" height="15.0" fill="rgb(214,36,32)" rx="2" ry="2" />
<text  x="698.70" y="255.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.03%)</title><rect x="1171.4" y="373" width="0.3" height="15.0" fill="rgb(234,163,8)" rx="2" ry="2" />
<text  x="1174.37" y="383.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="314.2" y="517" width="0.3" height="15.0" fill="rgb(206,156,49)" rx="2" ry="2" />
<text  x="317.16" y="527.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.03%)</title><rect x="1188.1" y="293" width="0.3" height="15.0" fill="rgb(235,29,4)" rx="2" ry="2" />
<text  x="1191.10" y="303.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.03%)</title><rect x="641.1" y="421" width="0.3" height="15.0" fill="rgb(221,136,42)" rx="2" ry="2" />
<text  x="644.06" y="431.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.03%)</title><rect x="39.4" y="309" width="0.3" height="15.0" fill="rgb(230,69,36)" rx="2" ry="2" />
<text  x="42.37" y="319.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (11 samples, 0.29%)</title><rect x="659.1" y="277" width="3.4" height="15.0" fill="rgb(222,200,32)" rx="2" ry="2" />
<text  x="662.06" y="287.5" ></text>
</g>
<g >
<title>ovl_destroy_inode (7 samples, 0.19%)</title><rect x="907.3" y="357" width="2.2" height="15.0" fill="rgb(250,190,43)" rx="2" ry="2" />
<text  x="910.32" y="367.5" ></text>
</g>
<g >
<title>cpuidle_enter (34 samples, 0.91%)</title><rect x="1172.6" y="373" width="10.8" height="15.0" fill="rgb(247,129,20)" rx="2" ry="2" />
<text  x="1175.63" y="383.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.03%)</title><rect x="708.7" y="213" width="0.3" height="15.0" fill="rgb(209,184,28)" rx="2" ry="2" />
<text  x="711.65" y="223.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.03%)</title><rect x="1040.9" y="277" width="0.3" height="15.0" fill="rgb(227,28,12)" rx="2" ry="2" />
<text  x="1043.92" y="287.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (32 samples, 0.86%)</title><rect x="657.8" y="341" width="10.1" height="15.0" fill="rgb(242,62,16)" rx="2" ry="2" />
<text  x="660.80" y="351.5" ></text>
</g>
<g >
<title>schedule_idle (14 samples, 0.37%)</title><rect x="103.8" y="453" width="4.4" height="15.0" fill="rgb(222,206,2)" rx="2" ry="2" />
<text  x="106.81" y="463.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.03%)</title><rect x="100.0" y="453" width="0.3" height="15.0" fill="rgb(208,140,23)" rx="2" ry="2" />
<text  x="103.02" y="463.5" ></text>
</g>
<g >
<title>find_next_bit (1 samples, 0.03%)</title><rect x="183.4" y="277" width="0.3" height="15.0" fill="rgb(241,110,38)" rx="2" ry="2" />
<text  x="186.40" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (1 samples, 0.03%)</title><rect x="634.7" y="485" width="0.4" height="15.0" fill="rgb(228,225,0)" rx="2" ry="2" />
<text  x="637.74" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="39.4" y="341" width="0.3" height="15.0" fill="rgb(235,166,42)" rx="2" ry="2" />
<text  x="42.37" y="351.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_ptr (3 samples, 0.08%)</title><rect x="1014.1" y="517" width="0.9" height="15.0" fill="rgb(230,148,52)" rx="2" ry="2" />
<text  x="1017.07" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.16%)</title><rect x="257.0" y="517" width="1.9" height="15.0" fill="rgb(249,189,29)" rx="2" ry="2" />
<text  x="259.99" y="527.5" ></text>
</g>
<g >
<title>swapper (178 samples, 4.76%)</title><rect x="1133.8" y="533" width="56.2" height="15.0" fill="rgb(244,134,3)" rx="2" ry="2" />
<text  x="1136.78" y="543.5" >swapper</text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.03%)</title><rect x="719.1" y="197" width="0.3" height="15.0" fill="rgb(206,17,33)" rx="2" ry="2" />
<text  x="722.07" y="207.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,T&gt;::into_ok_or_err (1 samples, 0.03%)</title><rect x="1013.8" y="517" width="0.3" height="15.0" fill="rgb(250,130,47)" rx="2" ry="2" />
<text  x="1016.76" y="527.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::new (2 samples, 0.05%)</title><rect x="940.2" y="517" width="0.6" height="15.0" fill="rgb(248,158,27)" rx="2" ry="2" />
<text  x="943.17" y="527.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (62 samples, 1.66%)</title><rect x="228.9" y="421" width="19.6" height="15.0" fill="rgb(233,22,0)" rx="2" ry="2" />
<text  x="231.88" y="431.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.03%)</title><rect x="667.9" y="341" width="0.3" height="15.0" fill="rgb(245,216,34)" rx="2" ry="2" />
<text  x="670.91" y="351.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::align (4 samples, 0.11%)</title><rect x="937.6" y="517" width="1.3" height="15.0" fill="rgb(242,67,49)" rx="2" ry="2" />
<text  x="940.64" y="527.5" ></text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.03%)</title><rect x="1040.9" y="245" width="0.3" height="15.0" fill="rgb(222,205,8)" rx="2" ry="2" />
<text  x="1043.92" y="255.5" ></text>
</g>
<g >
<title>NaClHostDescRead (1 samples, 0.03%)</title><rect x="358.1" y="517" width="0.3" height="15.0" fill="rgb(237,52,38)" rx="2" ry="2" />
<text  x="361.06" y="527.5" ></text>
</g>
<g >
<title>find_next_and_bit (1 samples, 0.03%)</title><rect x="215.3" y="341" width="0.3" height="15.0" fill="rgb(252,98,37)" rx="2" ry="2" />
<text  x="218.30" y="351.5" ></text>
</g>
<g >
<title>ext4_releasepage (3 samples, 0.08%)</title><rect x="908.3" y="101" width="0.9" height="15.0" fill="rgb(229,223,42)" rx="2" ry="2" />
<text  x="911.27" y="111.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.24%)</title><rect x="933.5" y="517" width="2.9" height="15.0" fill="rgb(251,41,22)" rx="2" ry="2" />
<text  x="936.53" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (3 samples, 0.08%)</title><rect x="194.8" y="389" width="0.9" height="15.0" fill="rgb(252,128,54)" rx="2" ry="2" />
<text  x="197.77" y="399.5" ></text>
</g>
<g >
<title>skb_put (1 samples, 0.03%)</title><rect x="39.1" y="261" width="0.3" height="15.0" fill="rgb(214,116,9)" rx="2" ry="2" />
<text  x="42.06" y="271.5" ></text>
</g>
<g >
<title>start_secondary (31 samples, 0.83%)</title><rect x="206.8" y="501" width="9.8" height="15.0" fill="rgb(223,44,46)" rx="2" ry="2" />
<text  x="209.77" y="511.5" ></text>
</g>
<g >
<title>HandleStackContext (1 samples, 0.03%)</title><rect x="336.6" y="517" width="0.3" height="15.0" fill="rgb(228,91,40)" rx="2" ry="2" />
<text  x="339.58" y="527.5" ></text>
</g>
<g >
<title>generic_file_buffered_read_get_pages (17 samples, 0.46%)</title><rect x="662.5" y="293" width="5.4" height="15.0" fill="rgb(218,123,29)" rx="2" ry="2" />
<text  x="665.54" y="303.5" ></text>
</g>
<g >
<title>ip6_route_input (1 samples, 0.03%)</title><rect x="38.7" y="133" width="0.4" height="15.0" fill="rgb(207,23,16)" rx="2" ry="2" />
<text  x="41.74" y="143.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.03%)</title><rect x="679.0" y="405" width="0.3" height="15.0" fill="rgb(218,196,51)" rx="2" ry="2" />
<text  x="681.96" y="415.5" ></text>
</g>
<g >
<title>nf_hook_slow_list (1 samples, 0.03%)</title><rect x="38.4" y="165" width="0.3" height="15.0" fill="rgb(247,86,34)" rx="2" ry="2" />
<text  x="41.43" y="175.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.05%)</title><rect x="932.6" y="485" width="0.6" height="15.0" fill="rgb(253,52,43)" rx="2" ry="2" />
<text  x="935.59" y="495.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.03%)</title><rect x="105.4" y="325" width="0.3" height="15.0" fill="rgb(231,105,43)" rx="2" ry="2" />
<text  x="108.39" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="228.6" y="501" width="0.3" height="15.0" fill="rgb(205,228,49)" rx="2" ry="2" />
<text  x="231.57" y="511.5" ></text>
</g>
<g >
<title>do_idle (276 samples, 7.39%)</title><rect x="109.5" y="405" width="87.2" height="15.0" fill="rgb(252,78,5)" rx="2" ry="2" />
<text  x="112.49" y="415.5" >do_idle</text>
</g>
<g >
<title>do_syscall_64 (51 samples, 1.37%)</title><rect x="635.1" y="485" width="16.1" height="15.0" fill="rgb(226,223,18)" rx="2" ry="2" />
<text  x="638.06" y="495.5" ></text>
</g>
<g >
<title>menu_select (8 samples, 0.21%)</title><rect x="1183.4" y="357" width="2.5" height="15.0" fill="rgb(206,226,31)" rx="2" ry="2" />
<text  x="1186.37" y="367.5" ></text>
</g>
<g >
<title>newidle_balance (9 samples, 0.24%)</title><rect x="104.1" y="405" width="2.9" height="15.0" fill="rgb(208,214,45)" rx="2" ry="2" />
<text  x="107.12" y="415.5" ></text>
</g>
<g >
<title>vfs_write (7 samples, 0.19%)</title><rect x="248.5" y="437" width="2.2" height="15.0" fill="rgb(213,89,18)" rx="2" ry="2" />
<text  x="251.46" y="447.5" ></text>
</g>
<g >
<title>newidle_balance (3 samples, 0.08%)</title><rect x="226.0" y="341" width="1.0" height="15.0" fill="rgb(208,5,43)" rx="2" ry="2" />
<text  x="229.04" y="351.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (63 samples, 1.69%)</title><rect x="472.4" y="517" width="19.9" height="15.0" fill="rgb(245,104,8)" rx="2" ry="2" />
<text  x="475.40" y="527.5" ></text>
</g>
<g >
<title>rcu_idle_exit (3 samples, 0.08%)</title><rect x="149.3" y="341" width="0.9" height="15.0" fill="rgb(253,183,40)" rx="2" ry="2" />
<text  x="152.29" y="351.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (1 samples, 0.03%)</title><rect x="38.4" y="181" width="0.3" height="15.0" fill="rgb(216,108,41)" rx="2" ry="2" />
<text  x="41.43" y="191.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="162.2" y="277" width="0.4" height="15.0" fill="rgb(250,21,49)" rx="2" ry="2" />
<text  x="165.24" y="287.5" ></text>
</g>
<g >
<title>std::panicking::panicking (9 samples, 0.24%)</title><rect x="1116.1" y="517" width="2.8" height="15.0" fill="rgb(247,205,3)" rx="2" ry="2" />
<text  x="1119.09" y="527.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (1 samples, 0.03%)</title><rect x="739.0" y="181" width="0.3" height="15.0" fill="rgb(222,32,4)" rx="2" ry="2" />
<text  x="741.97" y="191.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (3 samples, 0.08%)</title><rect x="789.5" y="517" width="1.0" height="15.0" fill="rgb(221,217,2)" rx="2" ry="2" />
<text  x="792.51" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.03%)</title><rect x="108.2" y="453" width="0.3" height="15.0" fill="rgb(212,157,51)" rx="2" ry="2" />
<text  x="111.23" y="463.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (11 samples, 0.29%)</title><rect x="35.9" y="341" width="3.5" height="15.0" fill="rgb(230,53,24)" rx="2" ry="2" />
<text  x="38.90" y="351.5" ></text>
</g>
<g >
<title>map_id_up (1 samples, 0.03%)</title><rect x="737.7" y="165" width="0.3" height="15.0" fill="rgb(212,207,40)" rx="2" ry="2" />
<text  x="740.71" y="175.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.03%)</title><rect x="226.0" y="277" width="0.4" height="15.0" fill="rgb(235,120,44)" rx="2" ry="2" />
<text  x="229.04" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.16%)</title><rect x="284.5" y="501" width="1.9" height="15.0" fill="rgb(215,32,17)" rx="2" ry="2" />
<text  x="287.47" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.05%)</title><rect x="916.8" y="517" width="0.6" height="15.0" fill="rgb(232,57,44)" rx="2" ry="2" />
<text  x="919.79" y="527.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (1 samples, 0.03%)</title><rect x="1182.1" y="325" width="0.3" height="15.0" fill="rgb(224,175,19)" rx="2" ry="2" />
<text  x="1185.10" y="335.5" ></text>
</g>
<g >
<title>add_transaction_credits (3 samples, 0.08%)</title><rect x="697.9" y="229" width="1.0" height="15.0" fill="rgb(246,200,34)" rx="2" ry="2" />
<text  x="700.91" y="239.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (8 samples, 0.21%)</title><rect x="165.1" y="373" width="2.5" height="15.0" fill="rgb(249,84,10)" rx="2" ry="2" />
<text  x="168.08" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (2 samples, 0.05%)</title><rect x="625.3" y="517" width="0.6" height="15.0" fill="rgb(249,185,28)" rx="2" ry="2" />
<text  x="628.27" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.03%)</title><rect x="925.3" y="517" width="0.3" height="15.0" fill="rgb(241,16,41)" rx="2" ry="2" />
<text  x="928.32" y="527.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="668.9" y="421" width="0.3" height="15.0" fill="rgb(249,189,31)" rx="2" ry="2" />
<text  x="671.85" y="431.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.03%)</title><rect x="635.1" y="453" width="0.3" height="15.0" fill="rgb(240,196,53)" rx="2" ry="2" />
<text  x="638.06" y="463.5" ></text>
</g>
<g >
<title>check_cpu_stall (1 samples, 0.03%)</title><rect x="1166.9" y="197" width="0.4" height="15.0" fill="rgb(208,2,33)" rx="2" ry="2" />
<text  x="1169.94" y="207.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (188 samples, 5.03%)</title><rect x="687.5" y="325" width="59.4" height="15.0" fill="rgb(251,113,17)" rx="2" ry="2" />
<text  x="690.49" y="335.5" >ext4_b..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.03%)</title><rect x="1166.9" y="245" width="0.4" height="15.0" fill="rgb(209,194,31)" rx="2" ry="2" />
<text  x="1169.94" y="255.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.03%)</title><rect x="215.9" y="437" width="0.3" height="15.0" fill="rgb(245,113,16)" rx="2" ry="2" />
<text  x="218.93" y="447.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.03%)</title><rect x="39.4" y="293" width="0.3" height="15.0" fill="rgb(230,111,12)" rx="2" ry="2" />
<text  x="42.37" y="303.5" ></text>
</g>
<g >
<title>common_interrupt (19 samples, 0.51%)</title><rect x="33.4" y="389" width="6.0" height="15.0" fill="rgb(238,102,15)" rx="2" ry="2" />
<text  x="36.37" y="399.5" ></text>
</g>
<g >
<title>from_kuid (1 samples, 0.03%)</title><rect x="737.7" y="181" width="0.3" height="15.0" fill="rgb(220,38,5)" rx="2" ry="2" />
<text  x="740.71" y="191.5" ></text>
</g>
<g >
<title>cpu_startup_entry (31 samples, 0.83%)</title><rect x="206.8" y="485" width="9.8" height="15.0" fill="rgb(216,84,24)" rx="2" ry="2" />
<text  x="209.77" y="495.5" ></text>
</g>
<g >
<title>newidle_balance (4 samples, 0.11%)</title><rect x="1169.2" y="405" width="1.2" height="15.0" fill="rgb(236,224,9)" rx="2" ry="2" />
<text  x="1172.15" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="39.4" y="325" width="0.3" height="15.0" fill="rgb(234,44,7)" rx="2" ry="2" />
<text  x="42.37" y="335.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.03%)</title><rect x="226.7" y="309" width="0.3" height="15.0" fill="rgb(231,8,32)" rx="2" ry="2" />
<text  x="229.67" y="319.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (19 samples, 0.51%)</title><rect x="714.7" y="277" width="6.0" height="15.0" fill="rgb(254,33,39)" rx="2" ry="2" />
<text  x="717.65" y="287.5" ></text>
</g>
<g >
<title>arp_rcv.part.0 (1 samples, 0.03%)</title><rect x="38.1" y="181" width="0.3" height="15.0" fill="rgb(220,196,47)" rx="2" ry="2" />
<text  x="41.11" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.05%)</title><rect x="1047.6" y="517" width="0.6" height="15.0" fill="rgb(225,17,39)" rx="2" ry="2" />
<text  x="1050.55" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="174.6" y="325" width="0.3" height="15.0" fill="rgb(242,204,30)" rx="2" ry="2" />
<text  x="177.56" y="335.5" ></text>
</g>
<g >
<title>ktime_get (2 samples, 0.05%)</title><rect x="194.8" y="373" width="0.6" height="15.0" fill="rgb(249,115,15)" rx="2" ry="2" />
<text  x="197.77" y="383.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (1 samples, 0.03%)</title><rect x="1114.2" y="485" width="0.3" height="15.0" fill="rgb(243,125,14)" rx="2" ry="2" />
<text  x="1117.20" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="725.7" y="197" width="0.3" height="15.0" fill="rgb(254,189,15)" rx="2" ry="2" />
<text  x="728.71" y="207.5" ></text>
</g>
<g >
<title>NaClXMutexLock (34 samples, 0.91%)</title><rect x="461.7" y="517" width="10.7" height="15.0" fill="rgb(208,184,23)" rx="2" ry="2" />
<text  x="464.66" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (7 samples, 0.19%)</title><rect x="907.3" y="469" width="2.2" height="15.0" fill="rgb(205,161,27)" rx="2" ry="2" />
<text  x="910.32" y="479.5" ></text>
</g>
<g >
<title>start_this_handle (9 samples, 0.24%)</title><rect x="696.0" y="245" width="2.9" height="15.0" fill="rgb(235,169,46)" rx="2" ry="2" />
<text  x="699.02" y="255.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (2 samples, 0.05%)</title><rect x="702.0" y="213" width="0.6" height="15.0" fill="rgb(229,200,42)" rx="2" ry="2" />
<text  x="705.02" y="223.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.03%)</title><rect x="1169.8" y="373" width="0.3" height="15.0" fill="rgb(214,156,2)" rx="2" ry="2" />
<text  x="1172.79" y="383.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (63 samples, 1.69%)</title><rect x="723.2" y="245" width="19.9" height="15.0" fill="rgb(216,102,21)" rx="2" ry="2" />
<text  x="726.18" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.05%)</title><rect x="162.6" y="277" width="0.6" height="15.0" fill="rgb(212,92,1)" rx="2" ry="2" />
<text  x="165.55" y="287.5" ></text>
</g>
<g >
<title>__cmd_record (1 samples, 0.03%)</title><rect x="250.7" y="501" width="0.3" height="15.0" fill="rgb(248,64,13)" rx="2" ry="2" />
<text  x="253.67" y="511.5" ></text>
</g>
<g >
<title>nohz_csd_func (5 samples, 0.13%)</title><rect x="170.8" y="373" width="1.5" height="15.0" fill="rgb(242,68,46)" rx="2" ry="2" />
<text  x="173.77" y="383.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (7 samples, 0.19%)</title><rect x="708.3" y="229" width="2.2" height="15.0" fill="rgb(232,114,53)" rx="2" ry="2" />
<text  x="711.34" y="239.5" ></text>
</g>
<g >
<title>core::cmp::max_by (3 samples, 0.08%)</title><rect x="948.1" y="517" width="0.9" height="15.0" fill="rgb(216,123,40)" rx="2" ry="2" />
<text  x="951.06" y="527.5" ></text>
</g>
<g >
<title>alloc_buffer_head (1 samples, 0.03%)</title><rect x="700.1" y="229" width="0.3" height="15.0" fill="rgb(251,202,7)" rx="2" ry="2" />
<text  x="703.12" y="239.5" ></text>
</g>
<g >
<title>ip6_sublist_rcv (1 samples, 0.03%)</title><rect x="38.7" y="181" width="0.4" height="15.0" fill="rgb(243,97,47)" rx="2" ry="2" />
<text  x="41.74" y="191.5" ></text>
</g>
<g >
<title>pagecache_get_page (34 samples, 0.91%)</title><rect x="703.0" y="261" width="10.7" height="15.0" fill="rgb(207,158,26)" rx="2" ry="2" />
<text  x="705.97" y="271.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (8 samples, 0.21%)</title><rect x="628.7" y="517" width="2.6" height="15.0" fill="rgb(218,168,53)" rx="2" ry="2" />
<text  x="631.74" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.05%)</title><rect x="1048.2" y="517" width="0.6" height="15.0" fill="rgb(231,163,8)" rx="2" ry="2" />
<text  x="1051.19" y="527.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (6 samples, 0.16%)</title><rect x="33.7" y="309" width="1.9" height="15.0" fill="rgb(225,42,44)" rx="2" ry="2" />
<text  x="36.69" y="319.5" ></text>
</g>
<g >
<title>__libc_lseek (63 samples, 1.69%)</title><rect x="631.3" y="517" width="19.9" height="15.0" fill="rgb(214,78,10)" rx="2" ry="2" />
<text  x="634.27" y="527.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (3 samples, 0.08%)</title><rect x="249.4" y="261" width="1.0" height="15.0" fill="rgb(235,110,46)" rx="2" ry="2" />
<text  x="252.41" y="271.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (91 samples, 2.44%)</title><rect x="760.8" y="517" width="28.7" height="15.0" fill="rgb(210,71,12)" rx="2" ry="2" />
<text  x="763.77" y="527.5" >__..</text>
</g>
<g >
<title>iput_final (7 samples, 0.19%)</title><rect x="907.3" y="245" width="2.2" height="15.0" fill="rgb(238,140,32)" rx="2" ry="2" />
<text  x="910.32" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="161.9" y="293" width="0.3" height="15.0" fill="rgb(217,59,16)" rx="2" ry="2" />
<text  x="164.92" y="303.5" ></text>
</g>
<g >
<title>llist_add_batch (12 samples, 0.32%)</title><rect x="189.1" y="277" width="3.8" height="15.0" fill="rgb(250,69,18)" rx="2" ry="2" />
<text  x="192.08" y="287.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (2 samples, 0.05%)</title><rect x="155.6" y="341" width="0.6" height="15.0" fill="rgb(236,205,29)" rx="2" ry="2" />
<text  x="158.60" y="351.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.03%)</title><rect x="227.9" y="405" width="0.3" height="15.0" fill="rgb(219,200,0)" rx="2" ry="2" />
<text  x="230.93" y="415.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (213 samples, 5.70%)</title><rect x="32.1" y="453" width="67.3" height="15.0" fill="rgb(218,19,23)" rx="2" ry="2" />
<text  x="35.11" y="463.5" >cpuidle..</text>
</g>
<g >
<title>do_pselect.constprop.0 (1 samples, 0.03%)</title><rect x="1142.6" y="469" width="0.3" height="15.0" fill="rgb(212,150,48)" rx="2" ry="2" />
<text  x="1145.62" y="479.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.03%)</title><rect x="225.4" y="373" width="0.3" height="15.0" fill="rgb(205,204,9)" rx="2" ry="2" />
<text  x="228.41" y="383.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="1016.6" y="517" width="0.3" height="15.0" fill="rgb(205,85,46)" rx="2" ry="2" />
<text  x="1019.60" y="527.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.08%)</title><rect x="1003.7" y="517" width="0.9" height="15.0" fill="rgb(246,118,4)" rx="2" ry="2" />
<text  x="1006.65" y="527.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (117 samples, 3.13%)</title><rect x="114.2" y="357" width="37.0" height="15.0" fill="rgb(237,206,35)" rx="2" ry="2" />
<text  x="117.23" y="367.5" >cpu..</text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.05%)</title><rect x="750.7" y="501" width="0.6" height="15.0" fill="rgb(212,36,13)" rx="2" ry="2" />
<text  x="753.66" y="511.5" ></text>
</g>
<g >
<title>ip_route_input_slow (1 samples, 0.03%)</title><rect x="38.1" y="117" width="0.3" height="15.0" fill="rgb(254,180,17)" rx="2" ry="2" />
<text  x="41.11" y="127.5" ></text>
</g>
<g >
<title>kick_ilb (3 samples, 0.08%)</title><rect x="1188.4" y="309" width="1.0" height="15.0" fill="rgb(233,4,29)" rx="2" ry="2" />
<text  x="1191.42" y="319.5" ></text>
</g>
<g >
<title>node_dirty_ok (1 samples, 0.03%)</title><rect x="709.3" y="197" width="0.3" height="15.0" fill="rgb(237,53,21)" rx="2" ry="2" />
<text  x="712.28" y="207.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::from_size_align_unchecked (2 samples, 0.05%)</title><rect x="939.5" y="517" width="0.7" height="15.0" fill="rgb(231,134,39)" rx="2" ry="2" />
<text  x="942.53" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.08%)</title><rect x="193.8" y="373" width="1.0" height="15.0" fill="rgb(247,17,7)" rx="2" ry="2" />
<text  x="196.82" y="383.5" ></text>
</g>
<g >
<title>std::thread::panicking (6 samples, 0.16%)</title><rect x="1131.6" y="517" width="1.9" height="15.0" fill="rgb(240,108,4)" rx="2" ry="2" />
<text  x="1134.57" y="527.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1172.6" y="261" width="0.3" height="15.0" fill="rgb(227,138,23)" rx="2" ry="2" />
<text  x="1175.63" y="271.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (1 samples, 0.03%)</title><rect x="1091.5" y="517" width="0.3" height="15.0" fill="rgb(251,58,53)" rx="2" ry="2" />
<text  x="1094.46" y="527.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.03%)</title><rect x="702.6" y="229" width="0.4" height="15.0" fill="rgb(206,30,30)" rx="2" ry="2" />
<text  x="705.65" y="239.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::new (1 samples, 0.03%)</title><rect x="1092.1" y="517" width="0.3" height="15.0" fill="rgb(240,155,39)" rx="2" ry="2" />
<text  x="1095.09" y="527.5" ></text>
</g>
<g >
<title>ip6_pol_route_input (1 samples, 0.03%)</title><rect x="38.7" y="101" width="0.4" height="15.0" fill="rgb(241,176,27)" rx="2" ry="2" />
<text  x="41.74" y="111.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (10 samples, 0.27%)</title><rect x="659.4" y="261" width="3.1" height="15.0" fill="rgb(250,171,26)" rx="2" ry="2" />
<text  x="662.38" y="271.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.03%)</title><rect x="228.6" y="309" width="0.3" height="15.0" fill="rgb(228,138,23)" rx="2" ry="2" />
<text  x="231.57" y="319.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.03%)</title><rect x="155.9" y="325" width="0.3" height="15.0" fill="rgb(235,45,47)" rx="2" ry="2" />
<text  x="158.92" y="335.5" ></text>
</g>
<g >
<title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (1 samples, 0.03%)</title><rect x="944.6" y="517" width="0.3" height="15.0" fill="rgb(246,183,7)" rx="2" ry="2" />
<text  x="947.59" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.03%)</title><rect x="969.9" y="501" width="0.3" height="15.0" fill="rgb(252,80,17)" rx="2" ry="2" />
<text  x="972.86" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_write (7 samples, 0.19%)</title><rect x="248.5" y="469" width="2.2" height="15.0" fill="rgb(216,75,54)" rx="2" ry="2" />
<text  x="251.46" y="479.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (6 samples, 0.16%)</title><rect x="115.5" y="341" width="1.9" height="15.0" fill="rgb(205,118,51)" rx="2" ry="2" />
<text  x="118.49" y="351.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.03%)</title><rect x="215.3" y="373" width="0.3" height="15.0" fill="rgb(211,22,5)" rx="2" ry="2" />
<text  x="218.30" y="383.5" ></text>
</g>
<g >
<title>destroy_inode (7 samples, 0.19%)</title><rect x="907.3" y="373" width="2.2" height="15.0" fill="rgb(216,49,47)" rx="2" ry="2" />
<text  x="910.32" y="383.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.03%)</title><rect x="1166.9" y="293" width="0.4" height="15.0" fill="rgb(223,12,5)" rx="2" ry="2" />
<text  x="1169.94" y="303.5" ></text>
</g>
<g >
<title>__fdget_pos (6 samples, 0.16%)</title><rect x="636.6" y="437" width="1.9" height="15.0" fill="rgb(221,18,1)" rx="2" ry="2" />
<text  x="639.64" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (193 samples, 5.17%)</title><rect x="32.7" y="421" width="61.0" height="15.0" fill="rgb(229,180,35)" rx="2" ry="2" />
<text  x="35.74" y="431.5" >cpuidl..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (3 samples, 0.08%)</title><rect x="945.2" y="517" width="1.0" height="15.0" fill="rgb(226,63,36)" rx="2" ry="2" />
<text  x="948.22" y="527.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.03%)</title><rect x="658.7" y="277" width="0.4" height="15.0" fill="rgb(210,212,16)" rx="2" ry="2" />
<text  x="661.75" y="287.5" ></text>
</g>
<g >
<title>_perf_ioctl (2 samples, 0.05%)</title><rect x="251.0" y="453" width="0.6" height="15.0" fill="rgb(246,90,24)" rx="2" ry="2" />
<text  x="253.99" y="463.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4 samples, 0.11%)</title><rect x="1106.9" y="517" width="1.3" height="15.0" fill="rgb(253,20,6)" rx="2" ry="2" />
<text  x="1109.93" y="527.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="92.4" y="389" width="0.4" height="15.0" fill="rgb(231,190,33)" rx="2" ry="2" />
<text  x="95.44" y="399.5" ></text>
</g>
<g >
<title>ip6_pol_route (1 samples, 0.03%)</title><rect x="38.7" y="85" width="0.4" height="15.0" fill="rgb(220,113,3)" rx="2" ry="2" />
<text  x="41.74" y="95.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.03%)</title><rect x="228.6" y="517" width="0.3" height="15.0" fill="rgb(222,150,37)" rx="2" ry="2" />
<text  x="231.57" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="251.0" y="501" width="0.6" height="15.0" fill="rgb(237,168,45)" rx="2" ry="2" />
<text  x="253.99" y="511.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="700.1" y="213" width="0.3" height="15.0" fill="rgb(227,183,15)" rx="2" ry="2" />
<text  x="703.12" y="223.5" ></text>
</g>
<g >
<title>NaClSysWrite (2 samples, 0.05%)</title><rect x="443.7" y="517" width="0.6" height="15.0" fill="rgb(242,58,21)" rx="2" ry="2" />
<text  x="446.66" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.03%)</title><rect x="1184.9" y="309" width="0.4" height="15.0" fill="rgb(212,217,10)" rx="2" ry="2" />
<text  x="1187.95" y="319.5" ></text>
</g>
<g >
<title>alx_mask_msix (2 samples, 0.05%)</title><rect x="37.5" y="261" width="0.6" height="15.0" fill="rgb(216,78,37)" rx="2" ry="2" />
<text  x="40.48" y="271.5" ></text>
</g>
<g >
<title>ovl_real_fdget (1 samples, 0.03%)</title><rect x="686.2" y="389" width="0.3" height="15.0" fill="rgb(241,51,5)" rx="2" ry="2" />
<text  x="689.23" y="399.5" ></text>
</g>
<g >
<title>poll_idle (1 samples, 0.03%)</title><rect x="151.2" y="357" width="0.3" height="15.0" fill="rgb(246,132,19)" rx="2" ry="2" />
<text  x="154.18" y="367.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.03%)</title><rect x="1040.9" y="229" width="0.3" height="15.0" fill="rgb(206,81,19)" rx="2" ry="2" />
<text  x="1043.92" y="239.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_mul (5 samples, 0.13%)</title><rect x="968.6" y="517" width="1.6" height="15.0" fill="rgb(245,142,25)" rx="2" ry="2" />
<text  x="971.59" y="527.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (1 samples, 0.03%)</title><rect x="1131.3" y="517" width="0.3" height="15.0" fill="rgb(213,146,50)" rx="2" ry="2" />
<text  x="1134.25" y="527.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.05%)</title><rect x="248.8" y="213" width="0.6" height="15.0" fill="rgb(205,105,36)" rx="2" ry="2" />
<text  x="251.78" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="258.9" y="517" width="0.3" height="15.0" fill="rgb(207,188,47)" rx="2" ry="2" />
<text  x="261.89" y="527.5" ></text>
</g>
<g >
<title>arch_call_rest_init (59 samples, 1.58%)</title><rect x="1171.4" y="453" width="18.6" height="15.0" fill="rgb(207,193,33)" rx="2" ry="2" />
<text  x="1174.37" y="463.5" ></text>
</g>
<g >
<title>pick_next_task_fair (60 samples, 1.61%)</title><rect x="173.9" y="357" width="19.0" height="15.0" fill="rgb(240,141,22)" rx="2" ry="2" />
<text  x="176.92" y="367.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.03%)</title><rect x="1040.9" y="357" width="0.3" height="15.0" fill="rgb(208,130,43)" rx="2" ry="2" />
<text  x="1043.92" y="367.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.03%)</title><rect x="1170.4" y="389" width="0.3" height="15.0" fill="rgb(228,34,21)" rx="2" ry="2" />
<text  x="1173.42" y="399.5" ></text>
</g>
<g >
<title>handle_irq_event (8 samples, 0.21%)</title><rect x="33.4" y="341" width="2.5" height="15.0" fill="rgb(229,13,24)" rx="2" ry="2" />
<text  x="36.37" y="351.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.05%)</title><rect x="215.3" y="437" width="0.6" height="15.0" fill="rgb(211,96,43)" rx="2" ry="2" />
<text  x="218.30" y="447.5" ></text>
</g>
<g >
<title>&lt;std::lazy::SyncLazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="311.0" y="517" width="0.3" height="15.0" fill="rgb(247,106,15)" rx="2" ry="2" />
<text  x="314.00" y="527.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (3 samples, 0.08%)</title><rect x="691.3" y="293" width="0.9" height="15.0" fill="rgb(241,109,19)" rx="2" ry="2" />
<text  x="694.28" y="303.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (32 samples, 0.86%)</title><rect x="657.8" y="309" width="10.1" height="15.0" fill="rgb(206,124,3)" rx="2" ry="2" />
<text  x="660.80" y="319.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.03%)</title><rect x="723.2" y="229" width="0.3" height="15.0" fill="rgb(226,160,28)" rx="2" ry="2" />
<text  x="726.18" y="239.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.03%)</title><rect x="38.1" y="101" width="0.3" height="15.0" fill="rgb(230,29,7)" rx="2" ry="2" />
<text  x="41.11" y="111.5" ></text>
</g>
<g >
<title>__libc_write (7 samples, 0.19%)</title><rect x="248.5" y="517" width="2.2" height="15.0" fill="rgb(208,170,35)" rx="2" ry="2" />
<text  x="251.46" y="527.5" ></text>
</g>
<g >
<title>schedule_idle (5 samples, 0.13%)</title><rect x="1169.2" y="453" width="1.5" height="15.0" fill="rgb(244,206,24)" rx="2" ry="2" />
<text  x="1172.15" y="463.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (61 samples, 1.63%)</title><rect x="723.5" y="229" width="19.3" height="15.0" fill="rgb(231,190,30)" rx="2" ry="2" />
<text  x="726.50" y="239.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.16%)</title><rect x="988.2" y="517" width="1.9" height="15.0" fill="rgb(207,161,27)" rx="2" ry="2" />
<text  x="991.17" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::write::IoWrite&lt;W&gt; as serde_cbor::write::Write&gt;::write_all (4 samples, 0.11%)</title><rect x="306.9" y="517" width="1.3" height="15.0" fill="rgb(232,120,51)" rx="2" ry="2" />
<text  x="309.90" y="527.5" ></text>
</g>
<g >
<title>__free_one_page (1 samples, 0.03%)</title><rect x="907.3" y="85" width="0.3" height="15.0" fill="rgb(243,225,30)" rx="2" ry="2" />
<text  x="910.32" y="95.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="95.9" y="373" width="0.3" height="15.0" fill="rgb(206,105,51)" rx="2" ry="2" />
<text  x="98.91" y="383.5" ></text>
</g>
<g >
<title>unaccount_page_cache_page (1 samples, 0.03%)</title><rect x="907.6" y="149" width="0.3" height="15.0" fill="rgb(224,131,39)" rx="2" ry="2" />
<text  x="910.63" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::data_end (2 samples, 0.05%)</title><rect x="1057.0" y="517" width="0.7" height="15.0" fill="rgb(226,65,9)" rx="2" ry="2" />
<text  x="1060.03" y="527.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.08%)</title><rect x="108.5" y="469" width="1.0" height="15.0" fill="rgb(216,207,53)" rx="2" ry="2" />
<text  x="111.54" y="479.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::pad_to_align (1 samples, 0.03%)</title><rect x="940.8" y="517" width="0.3" height="15.0" fill="rgb(225,92,16)" rx="2" ry="2" />
<text  x="943.80" y="527.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.03%)</title><rect x="94.6" y="405" width="0.4" height="15.0" fill="rgb(212,18,34)" rx="2" ry="2" />
<text  x="97.65" y="415.5" ></text>
</g>
<g >
<title>try_to_release_page (3 samples, 0.08%)</title><rect x="908.3" y="117" width="0.9" height="15.0" fill="rgb(225,137,22)" rx="2" ry="2" />
<text  x="911.27" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="933.2" y="517" width="0.3" height="15.0" fill="rgb(229,70,10)" rx="2" ry="2" />
<text  x="936.22" y="527.5" ></text>
</g>
<g >
<title>cpumask_next_and (2 samples, 0.05%)</title><rect x="186.9" y="293" width="0.6" height="15.0" fill="rgb(246,46,42)" rx="2" ry="2" />
<text  x="189.87" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (13 samples, 0.35%)</title><rect x="1030.8" y="517" width="4.1" height="15.0" fill="rgb(206,201,36)" rx="2" ry="2" />
<text  x="1033.81" y="527.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (11 samples, 0.29%)</title><rect x="35.9" y="325" width="3.5" height="15.0" fill="rgb(249,180,48)" rx="2" ry="2" />
<text  x="38.90" y="335.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="303.4" y="517" width="0.3" height="15.0" fill="rgb(207,37,54)" rx="2" ry="2" />
<text  x="306.42" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::h1 (1 samples, 0.03%)</title><rect x="1058.6" y="517" width="0.3" height="15.0" fill="rgb(224,142,21)" rx="2" ry="2" />
<text  x="1061.61" y="527.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new::{{closure}} (2 samples, 0.05%)</title><rect x="1127.5" y="517" width="0.6" height="15.0" fill="rgb(215,76,20)" rx="2" ry="2" />
<text  x="1130.46" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="720.3" y="213" width="0.4" height="15.0" fill="rgb(231,164,35)" rx="2" ry="2" />
<text  x="723.34" y="223.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="1040.9" y="485" width="0.3" height="15.0" fill="rgb(226,44,39)" rx="2" ry="2" />
<text  x="1043.92" y="495.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.03%)</title><rect x="907.3" y="133" width="0.3" height="15.0" fill="rgb(213,119,23)" rx="2" ry="2" />
<text  x="910.32" y="143.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;std::fs::File&gt;&gt; (2 samples, 0.05%)</title><rect x="980.6" y="517" width="0.6" height="15.0" fill="rgb(220,179,37)" rx="2" ry="2" />
<text  x="983.59" y="527.5" ></text>
</g>
<g >
<title>llist_reverse_order (2 samples, 0.05%)</title><rect x="1168.2" y="437" width="0.6" height="15.0" fill="rgb(230,191,33)" rx="2" ry="2" />
<text  x="1171.21" y="447.5" ></text>
</g>
<g >
<title>_perf_event_enable (2 samples, 0.05%)</title><rect x="251.0" y="421" width="0.6" height="15.0" fill="rgb(235,50,20)" rx="2" ry="2" />
<text  x="253.99" y="431.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (8 samples, 0.21%)</title><rect x="96.5" y="373" width="2.6" height="15.0" fill="rgb(242,218,15)" rx="2" ry="2" />
<text  x="99.54" y="383.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.08%)</title><rect x="963.5" y="517" width="1.0" height="15.0" fill="rgb(241,119,47)" rx="2" ry="2" />
<text  x="966.54" y="527.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (1 samples, 0.03%)</title><rect x="728.9" y="181" width="0.3" height="15.0" fill="rgb(224,87,6)" rx="2" ry="2" />
<text  x="731.87" y="191.5" ></text>
</g>
<g >
<title>NaClMutexLock (71 samples, 1.90%)</title><rect x="360.0" y="517" width="22.4" height="15.0" fill="rgb(219,165,35)" rx="2" ry="2" />
<text  x="362.96" y="527.5" >N..</text>
</g>
<g >
<title>revert_creds (1 samples, 0.03%)</title><rect x="668.2" y="405" width="0.3" height="15.0" fill="rgb(211,116,35)" rx="2" ry="2" />
<text  x="671.22" y="415.5" ></text>
</g>
<g >
<title>_int_free (4 samples, 0.11%)</title><rect x="909.5" y="517" width="1.3" height="15.0" fill="rgb(210,115,31)" rx="2" ry="2" />
<text  x="912.53" y="527.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.03%)</title><rect x="228.6" y="389" width="0.3" height="15.0" fill="rgb(229,33,43)" rx="2" ry="2" />
<text  x="231.57" y="399.5" ></text>
</g>
<g >
<title>__fget_files (5 samples, 0.13%)</title><rect x="637.0" y="405" width="1.5" height="15.0" fill="rgb(251,159,8)" rx="2" ry="2" />
<text  x="639.95" y="415.5" ></text>
</g>
<g >
<title>aa_file_perm (1 samples, 0.03%)</title><rect x="667.9" y="309" width="0.3" height="15.0" fill="rgb(227,151,24)" rx="2" ry="2" />
<text  x="670.91" y="319.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.05%)</title><rect x="718.4" y="197" width="0.7" height="15.0" fill="rgb(225,168,20)" rx="2" ry="2" />
<text  x="721.44" y="207.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (8 samples, 0.21%)</title><rect x="33.4" y="373" width="2.5" height="15.0" fill="rgb(236,7,34)" rx="2" ry="2" />
<text  x="36.37" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.08%)</title><rect x="286.4" y="501" width="0.9" height="15.0" fill="rgb(232,141,31)" rx="2" ry="2" />
<text  x="289.37" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (3 samples, 0.08%)</title><rect x="227.0" y="389" width="0.9" height="15.0" fill="rgb(212,209,24)" rx="2" ry="2" />
<text  x="229.99" y="399.5" ></text>
</g>
<g >
<title>pagecache_get_page (2 samples, 0.05%)</title><rect x="248.8" y="261" width="0.6" height="15.0" fill="rgb(208,93,52)" rx="2" ry="2" />
<text  x="251.78" y="271.5" ></text>
</g>
<g >
<title>nohz_csd_func (1 samples, 0.03%)</title><rect x="1168.8" y="437" width="0.4" height="15.0" fill="rgb(238,70,8)" rx="2" ry="2" />
<text  x="1171.84" y="447.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (38 samples, 1.02%)</title><rect x="726.0" y="197" width="12.0" height="15.0" fill="rgb(230,126,34)" rx="2" ry="2" />
<text  x="729.02" y="207.5" ></text>
</g>
<g >
<title>cpu_startup_entry (90 samples, 2.41%)</title><rect x="1142.9" y="485" width="28.5" height="15.0" fill="rgb(217,55,37)" rx="2" ry="2" />
<text  x="1145.94" y="495.5" >cp..</text>
</g>
<g >
<title>llist_reverse_order (1 samples, 0.03%)</title><rect x="215.0" y="437" width="0.3" height="15.0" fill="rgb(234,63,47)" rx="2" ry="2" />
<text  x="217.98" y="447.5" ></text>
</g>
<g >
<title>NaClSysWaitpid (113 samples, 3.02%)</title><rect x="408.0" y="517" width="35.7" height="15.0" fill="rgb(248,83,46)" rx="2" ry="2" />
<text  x="410.97" y="527.5" >NaC..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (2 samples, 0.05%)</title><rect x="1056.4" y="517" width="0.6" height="15.0" fill="rgb(249,208,46)" rx="2" ry="2" />
<text  x="1059.40" y="527.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (2 samples, 0.05%)</title><rect x="226.0" y="309" width="0.7" height="15.0" fill="rgb(210,52,46)" rx="2" ry="2" />
<text  x="229.04" y="319.5" ></text>
</g>
<g >
<title>security_file_permission (2 samples, 0.05%)</title><rect x="749.7" y="405" width="0.6" height="15.0" fill="rgb(232,177,16)" rx="2" ry="2" />
<text  x="752.71" y="415.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (1 samples, 0.03%)</title><rect x="1091.8" y="517" width="0.3" height="15.0" fill="rgb(227,50,11)" rx="2" ry="2" />
<text  x="1094.77" y="527.5" ></text>
</g>
<g >
<title>event_function_call (2 samples, 0.05%)</title><rect x="251.0" y="405" width="0.6" height="15.0" fill="rgb(245,42,33)" rx="2" ry="2" />
<text  x="253.99" y="415.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.08%)</title><rect x="957.2" y="517" width="1.0" height="15.0" fill="rgb(205,48,21)" rx="2" ry="2" />
<text  x="960.22" y="527.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.03%)</title><rect x="195.4" y="373" width="0.3" height="15.0" fill="rgb(221,141,51)" rx="2" ry="2" />
<text  x="198.40" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1166.9" y="373" width="0.4" height="15.0" fill="rgb(245,157,27)" rx="2" ry="2" />
<text  x="1169.94" y="383.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (1 samples, 0.03%)</title><rect x="908.3" y="69" width="0.3" height="15.0" fill="rgb(241,156,54)" rx="2" ry="2" />
<text  x="911.27" y="79.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="1166.9" y="325" width="0.4" height="15.0" fill="rgb(254,75,25)" rx="2" ry="2" />
<text  x="1169.94" y="335.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.03%)</title><rect x="652.4" y="421" width="0.3" height="15.0" fill="rgb(218,86,26)" rx="2" ry="2" />
<text  x="655.43" y="431.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="1183.1" y="341" width="0.3" height="15.0" fill="rgb(243,71,40)" rx="2" ry="2" />
<text  x="1186.05" y="351.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (2 samples, 0.05%)</title><rect x="645.8" y="421" width="0.6" height="15.0" fill="rgb(222,15,24)" rx="2" ry="2" />
<text  x="648.80" y="431.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.05%)</title><rect x="1004.6" y="517" width="0.6" height="15.0" fill="rgb(209,51,50)" rx="2" ry="2" />
<text  x="1007.60" y="527.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i32&gt;::eq (1 samples, 0.03%)</title><rect x="946.2" y="517" width="0.3" height="15.0" fill="rgb(229,79,8)" rx="2" ry="2" />
<text  x="949.17" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (365 samples, 9.77%)</title><rect x="503.0" y="517" width="115.3" height="15.0" fill="rgb(242,198,22)" rx="2" ry="2" />
<text  x="506.04" y="527.5" >__GI___pthread..</text>
</g>
<g >
<title>netif_receive_skb_list_internal (3 samples, 0.08%)</title><rect x="38.1" y="245" width="1.0" height="15.0" fill="rgb(224,86,24)" rx="2" ry="2" />
<text  x="41.11" y="255.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (14 samples, 0.37%)</title><rect x="159.1" y="325" width="4.4" height="15.0" fill="rgb(235,70,48)" rx="2" ry="2" />
<text  x="162.08" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.70%)</title><rect x="264.9" y="517" width="8.2" height="15.0" fill="rgb(219,19,22)" rx="2" ry="2" />
<text  x="267.89" y="527.5" ></text>
</g>
<g >
<title>schedule_idle (71 samples, 1.90%)</title><rect x="172.3" y="389" width="22.5" height="15.0" fill="rgb(234,229,31)" rx="2" ry="2" />
<text  x="175.34" y="399.5" >s..</text>
</g>
<g >
<title>generic_exec_single (4 samples, 0.11%)</title><rect x="187.8" y="277" width="1.3" height="15.0" fill="rgb(216,199,32)" rx="2" ry="2" />
<text  x="190.82" y="287.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (1 samples, 0.03%)</title><rect x="1121.8" y="517" width="0.3" height="15.0" fill="rgb(251,38,31)" rx="2" ry="2" />
<text  x="1124.78" y="527.5" ></text>
</g>
<g >
<title>.NET_ThreadPool (599 samples, 16.03%)</title><rect x="10.0" y="533" width="189.2" height="15.0" fill="rgb(253,31,18)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >.NET_ThreadPool</text>
</g>
<g >
<title>stop_this_handle (8 samples, 0.21%)</title><rect x="718.1" y="245" width="2.6" height="15.0" fill="rgb(210,117,18)" rx="2" ry="2" />
<text  x="721.13" y="255.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.03%)</title><rect x="907.3" y="101" width="0.3" height="15.0" fill="rgb(251,219,36)" rx="2" ry="2" />
<text  x="910.32" y="111.5" ></text>
</g>
<g >
<title>pm_qos_read_value (1 samples, 0.03%)</title><rect x="95.0" y="405" width="0.3" height="15.0" fill="rgb(250,160,10)" rx="2" ry="2" />
<text  x="97.96" y="415.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (1 samples, 0.03%)</title><rect x="742.4" y="197" width="0.4" height="15.0" fill="rgb(223,191,35)" rx="2" ry="2" />
<text  x="745.45" y="207.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (1 samples, 0.03%)</title><rect x="104.8" y="373" width="0.3" height="15.0" fill="rgb(226,204,0)" rx="2" ry="2" />
<text  x="107.75" y="383.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::is_initialized (2 samples, 0.05%)</title><rect x="1113.2" y="517" width="0.7" height="15.0" fill="rgb(242,178,22)" rx="2" ry="2" />
<text  x="1116.25" y="527.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.03%)</title><rect x="38.1" y="133" width="0.3" height="15.0" fill="rgb(226,1,51)" rx="2" ry="2" />
<text  x="41.11" y="143.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.03%)</title><rect x="39.4" y="277" width="0.3" height="15.0" fill="rgb(212,26,40)" rx="2" ry="2" />
<text  x="42.37" y="287.5" ></text>
</g>
<g >
<title>file_modified (1 samples, 0.03%)</title><rect x="690.0" y="309" width="0.3" height="15.0" fill="rgb(228,207,44)" rx="2" ry="2" />
<text  x="693.02" y="319.5" ></text>
</g>
<g >
<title>ovl_llseek (30 samples, 0.80%)</title><rect x="639.8" y="437" width="9.5" height="15.0" fill="rgb(228,29,5)" rx="2" ry="2" />
<text  x="642.80" y="447.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.03%)</title><rect x="228.6" y="437" width="0.3" height="15.0" fill="rgb(249,115,7)" rx="2" ry="2" />
<text  x="231.57" y="447.5" ></text>
</g>
<g >
<title>__schedule (13 samples, 0.35%)</title><rect x="103.8" y="437" width="4.1" height="15.0" fill="rgb(251,150,49)" rx="2" ry="2" />
<text  x="106.81" y="447.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (3 samples, 0.08%)</title><rect x="226.0" y="325" width="1.0" height="15.0" fill="rgb(218,27,29)" rx="2" ry="2" />
<text  x="229.04" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (18 samples, 0.48%)</title><rect x="157.8" y="341" width="5.7" height="15.0" fill="rgb(232,15,41)" rx="2" ry="2" />
<text  x="160.82" y="351.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.03%)</title><rect x="686.5" y="373" width="0.4" height="15.0" fill="rgb(216,205,3)" rx="2" ry="2" />
<text  x="689.54" y="383.5" ></text>
</g>
<g >
<title>crypto_shash_update (2 samples, 0.05%)</title><rect x="729.5" y="165" width="0.6" height="15.0" fill="rgb(205,164,38)" rx="2" ry="2" />
<text  x="732.50" y="175.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (7 samples, 0.19%)</title><rect x="33.4" y="325" width="2.2" height="15.0" fill="rgb(232,140,11)" rx="2" ry="2" />
<text  x="36.37" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.37%)</title><rect x="928.8" y="517" width="4.4" height="15.0" fill="rgb(220,3,43)" rx="2" ry="2" />
<text  x="931.80" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (2 samples, 0.05%)</title><rect x="1167.6" y="405" width="0.6" height="15.0" fill="rgb(249,130,30)" rx="2" ry="2" />
<text  x="1170.57" y="415.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (2 samples, 0.05%)</title><rect x="722.5" y="245" width="0.7" height="15.0" fill="rgb(219,41,50)" rx="2" ry="2" />
<text  x="725.55" y="255.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (2 samples, 0.05%)</title><rect x="1120.5" y="517" width="0.6" height="15.0" fill="rgb(219,135,6)" rx="2" ry="2" />
<text  x="1123.51" y="527.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1172.6" y="325" width="0.3" height="15.0" fill="rgb(231,223,39)" rx="2" ry="2" />
<text  x="1175.63" y="335.5" ></text>
</g>
<g >
<title>page_frag_alloc (1 samples, 0.03%)</title><rect x="36.5" y="213" width="0.3" height="15.0" fill="rgb(208,9,9)" rx="2" ry="2" />
<text  x="39.53" y="223.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="966.4" y="517" width="0.6" height="15.0" fill="rgb(229,32,19)" rx="2" ry="2" />
<text  x="969.38" y="527.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="1166.9" y="277" width="0.4" height="15.0" fill="rgb(249,25,36)" rx="2" ry="2" />
<text  x="1169.94" y="287.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.03%)</title><rect x="907.3" y="117" width="0.3" height="15.0" fill="rgb(246,138,47)" rx="2" ry="2" />
<text  x="910.32" y="127.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="287.3" y="517" width="0.3" height="15.0" fill="rgb(254,58,29)" rx="2" ry="2" />
<text  x="290.31" y="527.5" ></text>
</g>
<g >
<title>ext4_evict_inode (7 samples, 0.19%)</title><rect x="907.3" y="213" width="2.2" height="15.0" fill="rgb(211,26,53)" rx="2" ry="2" />
<text  x="910.32" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (238 samples, 6.37%)</title><rect x="675.5" y="501" width="75.2" height="15.0" fill="rgb(230,72,41)" rx="2" ry="2" />
<text  x="678.49" y="511.5" >entry_SY..</text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1 samples, 0.03%)</title><rect x="250.0" y="197" width="0.4" height="15.0" fill="rgb(239,93,41)" rx="2" ry="2" />
<text  x="253.04" y="207.5" ></text>
</g>
<g >
<title>[unknown]  (11 samples, 0.29%)</title><rect x="497.4" y="517" width="3.4" height="15.0" fill="rgb(246,126,51)" rx="2" ry="2" />
<text  x="500.35" y="527.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.03%)</title><rect x="968.3" y="501" width="0.3" height="15.0" fill="rgb(248,193,37)" rx="2" ry="2" />
<text  x="971.28" y="511.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.03%)</title><rect x="186.9" y="277" width="0.3" height="15.0" fill="rgb(239,147,44)" rx="2" ry="2" />
<text  x="189.87" y="287.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.03%)</title><rect x="224.8" y="389" width="0.3" height="15.0" fill="rgb(245,144,4)" rx="2" ry="2" />
<text  x="227.78" y="399.5" ></text>
</g>
<g >
<title>make_child (1 samples, 0.03%)</title><rect x="228.2" y="517" width="0.4" height="15.0" fill="rgb(216,83,13)" rx="2" ry="2" />
<text  x="231.25" y="527.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.03%)</title><rect x="39.4" y="245" width="0.3" height="15.0" fill="rgb(228,120,34)" rx="2" ry="2" />
<text  x="42.37" y="255.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.03%)</title><rect x="1171.0" y="437" width="0.4" height="15.0" fill="rgb(227,199,5)" rx="2" ry="2" />
<text  x="1174.05" y="447.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (16 samples, 0.43%)</title><rect x="187.8" y="293" width="5.1" height="15.0" fill="rgb(254,75,16)" rx="2" ry="2" />
<text  x="190.82" y="303.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (15 samples, 0.40%)</title><rect x="694.1" y="277" width="4.8" height="15.0" fill="rgb(222,77,17)" rx="2" ry="2" />
<text  x="697.12" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.03%)</title><rect x="992.3" y="501" width="0.3" height="15.0" fill="rgb(241,49,29)" rx="2" ry="2" />
<text  x="995.28" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_pselect6 (1 samples, 0.03%)</title><rect x="1142.6" y="485" width="0.3" height="15.0" fill="rgb(219,41,44)" rx="2" ry="2" />
<text  x="1145.62" y="495.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (4 samples, 0.11%)</title><rect x="701.4" y="229" width="1.2" height="15.0" fill="rgb(220,222,43)" rx="2" ry="2" />
<text  x="704.39" y="239.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (6 samples, 0.16%)</title><rect x="248.8" y="325" width="1.9" height="15.0" fill="rgb(238,135,9)" rx="2" ry="2" />
<text  x="251.78" y="335.5" ></text>
</g>
<g >
<title>start_secondary (90 samples, 2.41%)</title><rect x="1142.9" y="501" width="28.5" height="15.0" fill="rgb(247,140,28)" rx="2" ry="2" />
<text  x="1145.94" y="511.5" >st..</text>
</g>
<g >
<title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.03%)</title><rect x="992.3" y="485" width="0.3" height="15.0" fill="rgb(233,147,44)" rx="2" ry="2" />
<text  x="995.28" y="495.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (13 samples, 0.35%)</title><rect x="698.9" y="277" width="4.1" height="15.0" fill="rgb(252,36,15)" rx="2" ry="2" />
<text  x="701.86" y="287.5" ></text>
</g>
<g >
<title>pm_qos_read_value (1 samples, 0.03%)</title><rect x="1184.3" y="341" width="0.3" height="15.0" fill="rgb(219,201,42)" rx="2" ry="2" />
<text  x="1187.31" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1172.6" y="341" width="0.3" height="15.0" fill="rgb(215,146,13)" rx="2" ry="2" />
<text  x="1175.63" y="351.5" ></text>
</g>
<g >
<title>ksys_lseek (2 samples, 0.05%)</title><rect x="650.5" y="469" width="0.7" height="15.0" fill="rgb(244,214,35)" rx="2" ry="2" />
<text  x="653.54" y="479.5" ></text>
</g>
<g >
<title>core::convert::num::&lt;impl core::convert::From&lt;u16&gt; for u32&gt;::from (3 samples, 0.08%)</title><rect x="950.9" y="517" width="1.0" height="15.0" fill="rgb(224,176,12)" rx="2" ry="2" />
<text  x="953.90" y="527.5" ></text>
</g>
<g >
<title>delete_from_page_cache_batch (1 samples, 0.03%)</title><rect x="907.6" y="165" width="0.3" height="15.0" fill="rgb(226,162,1)" rx="2" ry="2" />
<text  x="910.63" y="175.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (3 samples, 0.08%)</title><rect x="1188.4" y="293" width="1.0" height="15.0" fill="rgb(228,167,39)" rx="2" ry="2" />
<text  x="1191.42" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.13%)</title><rect x="1042.5" y="517" width="1.6" height="15.0" fill="rgb(219,20,23)" rx="2" ry="2" />
<text  x="1045.50" y="527.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::cast (3 samples, 0.08%)</title><rect x="1005.2" y="517" width="1.0" height="15.0" fill="rgb(237,36,30)" rx="2" ry="2" />
<text  x="1008.23" y="527.5" ></text>
</g>
<g >
<title>kthread (4 samples, 0.11%)</title><rect x="30.2" y="501" width="1.3" height="15.0" fill="rgb(234,88,27)" rx="2" ry="2" />
<text  x="33.21" y="511.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted.part.0 (1 samples, 0.03%)</title><rect x="739.0" y="165" width="0.3" height="15.0" fill="rgb(206,129,41)" rx="2" ry="2" />
<text  x="741.97" y="175.5" ></text>
</g>
<g >
<title>llist_reverse_order (10 samples, 0.27%)</title><rect x="167.6" y="373" width="3.2" height="15.0" fill="rgb(210,179,11)" rx="2" ry="2" />
<text  x="170.61" y="383.5" ></text>
</g>
<g >
<title>do_idle (36 samples, 0.96%)</title><rect x="216.6" y="405" width="11.3" height="15.0" fill="rgb(240,80,33)" rx="2" ry="2" />
<text  x="219.56" y="415.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="705.5" y="181" width="0.3" height="15.0" fill="rgb(231,1,11)" rx="2" ry="2" />
<text  x="708.49" y="191.5" ></text>
</g>
<g >
<title>alx_clean_tx_irq (1 samples, 0.03%)</title><rect x="37.2" y="261" width="0.3" height="15.0" fill="rgb(223,164,38)" rx="2" ry="2" />
<text  x="40.16" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (2 samples, 0.05%)</title><rect x="224.1" y="341" width="0.7" height="15.0" fill="rgb(239,47,7)" rx="2" ry="2" />
<text  x="227.14" y="351.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.05%)</title><rect x="744.7" y="277" width="0.6" height="15.0" fill="rgb(206,97,46)" rx="2" ry="2" />
<text  x="747.66" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u32&gt;::to_be (1 samples, 0.03%)</title><rect x="260.1" y="501" width="0.4" height="15.0" fill="rgb(235,153,50)" rx="2" ry="2" />
<text  x="263.15" y="511.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.03%)</title><rect x="942.1" y="501" width="0.3" height="15.0" fill="rgb(245,204,15)" rx="2" ry="2" />
<text  x="945.06" y="511.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (10 samples, 0.27%)</title><rect x="1067.5" y="517" width="3.1" height="15.0" fill="rgb(234,225,1)" rx="2" ry="2" />
<text  x="1070.45" y="527.5" ></text>
</g>
<g >
<title>find_next_and_bit (1 samples, 0.03%)</title><rect x="187.5" y="293" width="0.3" height="15.0" fill="rgb(251,69,6)" rx="2" ry="2" />
<text  x="190.51" y="303.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (2 samples, 0.05%)</title><rect x="1169.2" y="373" width="0.6" height="15.0" fill="rgb(240,80,18)" rx="2" ry="2" />
<text  x="1172.15" y="383.5" ></text>
</g>
<g >
<title>schedule_idle (4 samples, 0.11%)</title><rect x="225.7" y="389" width="1.3" height="15.0" fill="rgb(217,139,27)" rx="2" ry="2" />
<text  x="228.72" y="399.5" ></text>
</g>
<g >
<title>mutex_lock (3 samples, 0.08%)</title><rect x="678.3" y="421" width="1.0" height="15.0" fill="rgb(216,54,9)" rx="2" ry="2" />
<text  x="681.33" y="431.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.05%)</title><rect x="747.8" y="325" width="0.6" height="15.0" fill="rgb(240,187,33)" rx="2" ry="2" />
<text  x="750.82" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="107.9" y="437" width="0.3" height="15.0" fill="rgb(252,125,53)" rx="2" ry="2" />
<text  x="110.91" y="447.5" ></text>
</g>
<g >
<title>__ioctl (62 samples, 1.66%)</title><rect x="228.9" y="517" width="19.6" height="15.0" fill="rgb(209,23,47)" rx="2" ry="2" />
<text  x="231.88" y="527.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="1167.6" y="389" width="0.3" height="15.0" fill="rgb(214,16,5)" rx="2" ry="2" />
<text  x="1170.57" y="399.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.03%)</title><rect x="108.2" y="437" width="0.3" height="15.0" fill="rgb(230,224,20)" rx="2" ry="2" />
<text  x="111.23" y="447.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="96.5" y="357" width="0.4" height="15.0" fill="rgb(227,94,34)" rx="2" ry="2" />
<text  x="99.54" y="367.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (4 samples, 0.11%)</title><rect x="356.5" y="517" width="1.2" height="15.0" fill="rgb(227,170,3)" rx="2" ry="2" />
<text  x="359.48" y="527.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts (2 samples, 0.05%)</title><rect x="982.5" y="517" width="0.6" height="15.0" fill="rgb(210,78,27)" rx="2" ry="2" />
<text  x="985.49" y="527.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (1 samples, 0.03%)</title><rect x="739.0" y="197" width="0.3" height="15.0" fill="rgb(248,50,31)" rx="2" ry="2" />
<text  x="741.97" y="207.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u32&gt;::swap_bytes (1 samples, 0.03%)</title><rect x="260.1" y="485" width="0.4" height="15.0" fill="rgb(221,92,0)" rx="2" ry="2" />
<text  x="263.15" y="495.5" ></text>
</g>
<g >
<title>_perf_ioctl (62 samples, 1.66%)</title><rect x="228.9" y="437" width="19.6" height="15.0" fill="rgb(234,207,38)" rx="2" ry="2" />
<text  x="231.88" y="447.5" ></text>
</g>
<g >
<title>up_write (2 samples, 0.05%)</title><rect x="746.2" y="309" width="0.7" height="15.0" fill="rgb(209,12,7)" rx="2" ry="2" />
<text  x="749.24" y="319.5" ></text>
</g>
<g >
<title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="907.0" y="517" width="0.3" height="15.0" fill="rgb(235,87,49)" rx="2" ry="2" />
<text  x="910.00" y="527.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (37 samples, 0.99%)</title><rect x="216.6" y="501" width="11.6" height="15.0" fill="rgb(239,118,51)" rx="2" ry="2" />
<text  x="219.56" y="511.5" ></text>
</g>
<g >
<title>generic_write_check_limits (2 samples, 0.05%)</title><rect x="689.1" y="293" width="0.6" height="15.0" fill="rgb(228,188,22)" rx="2" ry="2" />
<text  x="692.07" y="303.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="228.2" y="501" width="0.4" height="15.0" fill="rgb(243,7,44)" rx="2" ry="2" />
<text  x="231.25" y="511.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (48 samples, 1.28%)</title><rect x="723.8" y="213" width="15.2" height="15.0" fill="rgb(234,48,49)" rx="2" ry="2" />
<text  x="726.81" y="223.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="690.0" y="261" width="0.3" height="15.0" fill="rgb(215,15,27)" rx="2" ry="2" />
<text  x="693.02" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.13%)</title><rect x="1049.4" y="517" width="1.6" height="15.0" fill="rgb(216,24,16)" rx="2" ry="2" />
<text  x="1052.45" y="527.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="1172.6" y="309" width="0.3" height="15.0" fill="rgb(214,32,5)" rx="2" ry="2" />
<text  x="1175.63" y="319.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new::{{closure}} (1 samples, 0.03%)</title><rect x="1119.3" y="517" width="0.3" height="15.0" fill="rgb(233,81,30)" rx="2" ry="2" />
<text  x="1122.25" y="527.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.03%)</title><rect x="1186.2" y="373" width="0.3" height="15.0" fill="rgb(239,138,38)" rx="2" ry="2" />
<text  x="1189.21" y="383.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (17 samples, 0.46%)</title><rect x="1006.2" y="517" width="5.3" height="15.0" fill="rgb(253,66,11)" rx="2" ry="2" />
<text  x="1009.18" y="527.5" ></text>
</g>
<g >
<title>std::os::unix::net::datagram::UnixDatagram::send (2 samples, 0.05%)</title><rect x="1113.9" y="517" width="0.6" height="15.0" fill="rgb(229,80,4)" rx="2" ry="2" />
<text  x="1116.88" y="527.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.03%)</title><rect x="705.8" y="213" width="0.3" height="15.0" fill="rgb(243,131,35)" rx="2" ry="2" />
<text  x="708.81" y="223.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="705.2" y="181" width="0.3" height="15.0" fill="rgb(228,162,48)" rx="2" ry="2" />
<text  x="708.18" y="191.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (1 samples, 0.03%)</title><rect x="1189.4" y="373" width="0.3" height="15.0" fill="rgb(251,74,31)" rx="2" ry="2" />
<text  x="1192.37" y="383.5" ></text>
</g>
<g >
<title>do_idle (59 samples, 1.58%)</title><rect x="1171.4" y="405" width="18.6" height="15.0" fill="rgb(247,201,43)" rx="2" ry="2" />
<text  x="1174.37" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (4 samples, 0.11%)</title><rect x="501.1" y="517" width="1.3" height="15.0" fill="rgb(224,181,12)" rx="2" ry="2" />
<text  x="504.14" y="527.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (3 samples, 0.08%)</title><rect x="358.4" y="517" width="0.9" height="15.0" fill="rgb(218,149,23)" rx="2" ry="2" />
<text  x="361.38" y="527.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (531 samples, 14.21%)</title><rect x="31.5" y="517" width="167.7" height="15.0" fill="rgb(237,127,27)" rx="2" ry="2" />
<text  x="34.48" y="527.5" >secondary_startup_64_..</text>
</g>
<g >
<title>ovl_d_real (3 samples, 0.08%)</title><rect x="642.6" y="405" width="1.0" height="15.0" fill="rgb(253,56,36)" rx="2" ry="2" />
<text  x="645.64" y="415.5" ></text>
</g>
<g >
<title>core::cmp::min_by (6 samples, 0.16%)</title><rect x="949.0" y="517" width="1.9" height="15.0" fill="rgb(251,208,32)" rx="2" ry="2" />
<text  x="952.01" y="527.5" ></text>
</g>
<g >
<title>crypto_shash_update (14 samples, 0.37%)</title><rect x="733.3" y="149" width="4.4" height="15.0" fill="rgb(224,9,13)" rx="2" ry="2" />
<text  x="736.29" y="159.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="1001.1" y="517" width="0.3" height="15.0" fill="rgb(234,169,0)" rx="2" ry="2" />
<text  x="1004.12" y="527.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.08%)</title><rect x="974.9" y="517" width="1.0" height="15.0" fill="rgb(244,4,42)" rx="2" ry="2" />
<text  x="977.91" y="527.5" ></text>
</g>
<g >
<title>new_sync_write (7 samples, 0.19%)</title><rect x="248.5" y="421" width="2.2" height="15.0" fill="rgb(216,218,3)" rx="2" ry="2" />
<text  x="251.46" y="431.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="1056.7" y="501" width="0.3" height="15.0" fill="rgb(238,202,14)" rx="2" ry="2" />
<text  x="1059.71" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1040.9" y="501" width="0.3" height="15.0" fill="rgb(215,16,46)" rx="2" ry="2" />
<text  x="1043.92" y="511.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.03%)</title><rect x="228.2" y="485" width="0.4" height="15.0" fill="rgb(229,79,30)" rx="2" ry="2" />
<text  x="231.25" y="495.5" ></text>
</g>
<g >
<title>__perf_event_enable (2 samples, 0.05%)</title><rect x="251.0" y="325" width="0.6" height="15.0" fill="rgb(254,51,11)" rx="2" ry="2" />
<text  x="253.99" y="335.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (4 samples, 0.11%)</title><rect x="721.9" y="261" width="1.3" height="15.0" fill="rgb(223,155,45)" rx="2" ry="2" />
<text  x="724.92" y="271.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.03%)</title><rect x="1188.1" y="277" width="0.3" height="15.0" fill="rgb(225,185,8)" rx="2" ry="2" />
<text  x="1191.10" y="287.5" ></text>
</g>
<g >
<title>policy_node (1 samples, 0.03%)</title><rect x="713.4" y="245" width="0.3" height="15.0" fill="rgb(246,156,36)" rx="2" ry="2" />
<text  x="716.39" y="255.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.03%)</title><rect x="1040.9" y="261" width="0.3" height="15.0" fill="rgb(238,191,23)" rx="2" ry="2" />
<text  x="1043.92" y="271.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.03%)</title><rect x="214.7" y="437" width="0.3" height="15.0" fill="rgb(237,204,5)" rx="2" ry="2" />
<text  x="217.67" y="447.5" ></text>
</g>
<g >
<title>dispatcher (7 samples, 0.19%)</title><rect x="1038.4" y="517" width="2.2" height="15.0" fill="rgb(250,26,6)" rx="2" ry="2" />
<text  x="1041.39" y="527.5" ></text>
</g>
<g >
<title>find_get_pages_contig (16 samples, 0.43%)</title><rect x="662.9" y="277" width="5.0" height="15.0" fill="rgb(226,35,34)" rx="2" ry="2" />
<text  x="665.85" y="287.5" ></text>
</g>
<g >
<title>revert_creds (3 samples, 0.08%)</title><rect x="649.3" y="437" width="0.9" height="15.0" fill="rgb(222,75,50)" rx="2" ry="2" />
<text  x="652.27" y="447.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.03%)</title><rect x="1000.8" y="517" width="0.3" height="15.0" fill="rgb(241,193,35)" rx="2" ry="2" />
<text  x="1003.81" y="527.5" ></text>
</g>
<g >
<title>cpuidle_select (8 samples, 0.21%)</title><rect x="1183.4" y="373" width="2.5" height="15.0" fill="rgb(229,42,47)" rx="2" ry="2" />
<text  x="1186.37" y="383.5" ></text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.03%)</title><rect x="907.3" y="165" width="0.3" height="15.0" fill="rgb(246,24,46)" rx="2" ry="2" />
<text  x="910.32" y="175.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.05%)</title><rect x="303.7" y="517" width="0.7" height="15.0" fill="rgb(213,229,54)" rx="2" ry="2" />
<text  x="306.74" y="527.5" ></text>
</g>
<g >
<title>override_creds (1 samples, 0.03%)</title><rect x="685.9" y="373" width="0.3" height="15.0" fill="rgb(251,167,8)" rx="2" ry="2" />
<text  x="688.91" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (54 samples, 1.45%)</title><rect x="652.1" y="485" width="17.1" height="15.0" fill="rgb(228,85,54)" rx="2" ry="2" />
<text  x="655.11" y="495.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.13%)</title><rect x="964.5" y="517" width="1.6" height="15.0" fill="rgb(254,174,19)" rx="2" ry="2" />
<text  x="967.49" y="527.5" ></text>
</g>
<g >
<title>ovl_real_fdget (10 samples, 0.27%)</title><rect x="642.6" y="421" width="3.2" height="15.0" fill="rgb(246,138,3)" rx="2" ry="2" />
<text  x="645.64" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.05%)</title><rect x="114.9" y="261" width="0.6" height="15.0" fill="rgb(207,46,44)" rx="2" ry="2" />
<text  x="117.86" y="271.5" ></text>
</g>
<g >
<title>override_creds (2 samples, 0.05%)</title><rect x="641.4" y="421" width="0.6" height="15.0" fill="rgb(207,45,6)" rx="2" ry="2" />
<text  x="644.38" y="431.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (34 samples, 0.91%)</title><rect x="703.0" y="277" width="10.7" height="15.0" fill="rgb(233,18,0)" rx="2" ry="2" />
<text  x="705.97" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (54 samples, 1.45%)</title><rect x="652.1" y="501" width="17.1" height="15.0" fill="rgb(218,125,39)" rx="2" ry="2" />
<text  x="655.11" y="511.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (3 samples, 0.08%)</title><rect x="188.1" y="261" width="1.0" height="15.0" fill="rgb(208,168,26)" rx="2" ry="2" />
<text  x="191.14" y="271.5" ></text>
</g>
<g >
<title>generic_file_read_iter (32 samples, 0.86%)</title><rect x="657.8" y="325" width="10.1" height="15.0" fill="rgb(233,198,53)" rx="2" ry="2" />
<text  x="660.80" y="335.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.03%)</title><rect x="92.8" y="405" width="0.3" height="15.0" fill="rgb(214,147,21)" rx="2" ry="2" />
<text  x="95.75" y="415.5" ></text>
</g>
<g >
<title>ovl_write_iter (7 samples, 0.19%)</title><rect x="248.5" y="405" width="2.2" height="15.0" fill="rgb(213,1,46)" rx="2" ry="2" />
<text  x="251.46" y="415.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.05%)</title><rect x="291.7" y="517" width="0.7" height="15.0" fill="rgb(234,226,27)" rx="2" ry="2" />
<text  x="294.73" y="527.5" ></text>
</g>
<g >
<title>remote_function (62 samples, 1.66%)</title><rect x="228.9" y="341" width="19.6" height="15.0" fill="rgb(205,120,3)" rx="2" ry="2" />
<text  x="231.88" y="351.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.03%)</title><rect x="1188.4" y="261" width="0.3" height="15.0" fill="rgb(216,49,47)" rx="2" ry="2" />
<text  x="1191.42" y="271.5" ></text>
</g>
<g >
<title>core::ptr::metadata::from_raw_parts_mut (6 samples, 0.16%)</title><rect x="983.1" y="517" width="1.9" height="15.0" fill="rgb(228,82,13)" rx="2" ry="2" />
<text  x="986.12" y="527.5" ></text>
</g>
<g >
<title>__fdget_pos (7 samples, 0.19%)</title><rect x="677.1" y="437" width="2.2" height="15.0" fill="rgb(227,161,27)" rx="2" ry="2" />
<text  x="680.07" y="447.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.03%)</title><rect x="742.8" y="229" width="0.3" height="15.0" fill="rgb(228,158,21)" rx="2" ry="2" />
<text  x="745.76" y="239.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u16 (10 samples, 0.27%)</title><rect x="1092.4" y="517" width="3.2" height="15.0" fill="rgb(215,125,14)" rx="2" ry="2" />
<text  x="1095.40" y="527.5" ></text>
</g>
<g >
<title>__schedule (5 samples, 0.13%)</title><rect x="1169.2" y="437" width="1.5" height="15.0" fill="rgb(243,12,12)" rx="2" ry="2" />
<text  x="1172.15" y="447.5" ></text>
</g>
<g >
<title>__fget_files (3 samples, 0.08%)</title><rect x="677.4" y="405" width="0.9" height="15.0" fill="rgb(250,193,6)" rx="2" ry="2" />
<text  x="680.38" y="415.5" ></text>
</g>
<g >
<title>ksys_lseek (47 samples, 1.26%)</title><rect x="635.4" y="453" width="14.8" height="15.0" fill="rgb(221,121,14)" rx="2" ry="2" />
<text  x="638.37" y="463.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (33 samples, 0.88%)</title><rect x="657.5" y="357" width="10.4" height="15.0" fill="rgb(221,128,23)" rx="2" ry="2" />
<text  x="660.48" y="367.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.03%)</title><rect x="1167.9" y="357" width="0.3" height="15.0" fill="rgb(222,66,7)" rx="2" ry="2" />
<text  x="1170.89" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (2 samples, 0.05%)</title><rect x="1185.9" y="389" width="0.6" height="15.0" fill="rgb(235,171,11)" rx="2" ry="2" />
<text  x="1188.89" y="399.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.03%)</title><rect x="747.2" y="325" width="0.3" height="15.0" fill="rgb(207,63,34)" rx="2" ry="2" />
<text  x="750.18" y="335.5" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 0.03%)</title><rect x="151.8" y="357" width="0.3" height="15.0" fill="rgb(213,67,26)" rx="2" ry="2" />
<text  x="154.81" y="367.5" ></text>
</g>
<g >
<title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::write_u32 (3 samples, 0.08%)</title><rect x="259.5" y="517" width="1.0" height="15.0" fill="rgb(239,199,9)" rx="2" ry="2" />
<text  x="262.52" y="527.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="39.7" y="341" width="0.3" height="15.0" fill="rgb(228,98,30)" rx="2" ry="2" />
<text  x="42.69" y="351.5" ></text>
</g>
<g >
<title>__remove_mapping (1 samples, 0.03%)</title><rect x="30.8" y="373" width="0.4" height="15.0" fill="rgb(235,96,51)" rx="2" ry="2" />
<text  x="33.85" y="383.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.03%)</title><rect x="228.2" y="373" width="0.4" height="15.0" fill="rgb(240,111,13)" rx="2" ry="2" />
<text  x="231.25" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter (120 samples, 3.21%)</title><rect x="114.2" y="373" width="37.9" height="15.0" fill="rgb(224,146,8)" rx="2" ry="2" />
<text  x="117.23" y="383.5" >cpu..</text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="640.7" y="421" width="0.4" height="15.0" fill="rgb(218,209,30)" rx="2" ry="2" />
<text  x="643.74" y="431.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.03%)</title><rect x="492.3" y="517" width="0.3" height="15.0" fill="rgb(210,89,23)" rx="2" ry="2" />
<text  x="495.30" y="527.5" ></text>
</g>
<g >
<title>generic_exec_single (62 samples, 1.66%)</title><rect x="228.9" y="357" width="19.6" height="15.0" fill="rgb(207,54,8)" rx="2" ry="2" />
<text  x="231.88" y="367.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (7 samples, 0.19%)</title><rect x="907.3" y="181" width="2.2" height="15.0" fill="rgb(215,134,13)" rx="2" ry="2" />
<text  x="910.32" y="191.5" ></text>
</g>
<g >
<title>event_function_call (62 samples, 1.66%)</title><rect x="228.9" y="389" width="19.6" height="15.0" fill="rgb(242,200,34)" rx="2" ry="2" />
<text  x="231.88" y="399.5" ></text>
</g>
<g >
<title>current_time (1 samples, 0.03%)</title><rect x="690.0" y="277" width="0.3" height="15.0" fill="rgb(235,33,16)" rx="2" ry="2" />
<text  x="693.02" y="287.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.03%)</title><rect x="1172.6" y="197" width="0.3" height="15.0" fill="rgb(235,121,52)" rx="2" ry="2" />
<text  x="1175.63" y="207.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.03%)</title><rect x="99.1" y="405" width="0.3" height="15.0" fill="rgb(206,217,23)" rx="2" ry="2" />
<text  x="102.07" y="415.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (3 samples, 0.08%)</title><rect x="1126.2" y="517" width="0.9" height="15.0" fill="rgb(217,57,21)" rx="2" ry="2" />
<text  x="1129.20" y="527.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="289.5" y="501" width="0.3" height="15.0" fill="rgb(235,0,51)" rx="2" ry="2" />
<text  x="292.52" y="511.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="1112.9" y="517" width="0.3" height="15.0" fill="rgb(207,110,1)" rx="2" ry="2" />
<text  x="1115.93" y="527.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.11%)</title><rect x="956.0" y="517" width="1.2" height="15.0" fill="rgb(248,2,13)" rx="2" ry="2" />
<text  x="958.96" y="527.5" ></text>
</g>
<g >
<title>cpumask_next (3 samples, 0.08%)</title><rect x="182.8" y="293" width="0.9" height="15.0" fill="rgb(250,146,2)" rx="2" ry="2" />
<text  x="185.77" y="303.5" ></text>
</g>
<g >
<title>ip_sabotage_in (1 samples, 0.03%)</title><rect x="38.4" y="149" width="0.3" height="15.0" fill="rgb(211,67,51)" rx="2" ry="2" />
<text  x="41.43" y="159.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (12 samples, 0.32%)</title><rect x="95.3" y="405" width="3.8" height="15.0" fill="rgb(220,201,0)" rx="2" ry="2" />
<text  x="98.28" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="114.9" y="341" width="0.6" height="15.0" fill="rgb(244,212,48)" rx="2" ry="2" />
<text  x="117.86" y="351.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::unwrap (7 samples, 0.19%)</title><rect x="1011.5" y="517" width="2.3" height="15.0" fill="rgb(224,183,16)" rx="2" ry="2" />
<text  x="1014.55" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.03%)</title><rect x="920.0" y="501" width="0.3" height="15.0" fill="rgb(218,112,19)" rx="2" ry="2" />
<text  x="922.95" y="511.5" ></text>
</g>
<g >
<title>[librustposix.so] (3 samples, 0.08%)</title><rect x="492.9" y="517" width="1.0" height="15.0" fill="rgb(246,53,3)" rx="2" ry="2" />
<text  x="495.93" y="527.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.05%)</title><rect x="1181.2" y="325" width="0.6" height="15.0" fill="rgb(208,131,49)" rx="2" ry="2" />
<text  x="1184.16" y="335.5" ></text>
</g>
<g >
<title>cpu_startup_entry (247 samples, 6.61%)</title><rect x="31.5" y="485" width="78.0" height="15.0" fill="rgb(236,128,24)" rx="2" ry="2" />
<text  x="34.48" y="495.5" >cpu_start..</text>
</g>
<g >
<title>alx_mask_msix (6 samples, 0.16%)</title><rect x="33.7" y="293" width="1.9" height="15.0" fill="rgb(247,133,50)" rx="2" ry="2" />
<text  x="36.69" y="303.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (1 samples, 0.03%)</title><rect x="701.7" y="213" width="0.3" height="15.0" fill="rgb(205,44,24)" rx="2" ry="2" />
<text  x="704.70" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.05%)</title><rect x="1046.9" y="517" width="0.7" height="15.0" fill="rgb(238,87,30)" rx="2" ry="2" />
<text  x="1049.92" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (49 samples, 1.31%)</title><rect x="635.1" y="469" width="15.4" height="15.0" fill="rgb(207,90,33)" rx="2" ry="2" />
<text  x="638.06" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.11%)</title><rect x="920.3" y="517" width="1.2" height="15.0" fill="rgb(207,29,12)" rx="2" ry="2" />
<text  x="923.27" y="527.5" ></text>
</g>
<g >
<title>kcompactd (1 samples, 0.03%)</title><rect x="30.2" y="485" width="0.3" height="15.0" fill="rgb(243,80,31)" rx="2" ry="2" />
<text  x="33.21" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.03%)</title><rect x="158.4" y="309" width="0.4" height="15.0" fill="rgb(235,133,0)" rx="2" ry="2" />
<text  x="161.45" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (2 samples, 0.05%)</title><rect x="1128.1" y="517" width="0.6" height="15.0" fill="rgb(221,17,54)" rx="2" ry="2" />
<text  x="1131.09" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.05%)</title><rect x="917.4" y="517" width="0.7" height="15.0" fill="rgb(231,155,50)" rx="2" ry="2" />
<text  x="920.43" y="527.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (6 samples, 0.16%)</title><rect x="248.8" y="341" width="1.9" height="15.0" fill="rgb(232,20,18)" rx="2" ry="2" />
<text  x="251.78" y="351.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (74 samples, 1.98%)</title><rect x="1142.9" y="405" width="23.4" height="15.0" fill="rgb(220,195,12)" rx="2" ry="2" />
<text  x="1145.94" y="415.5" >m..</text>
</g>
<g >
<title>rest_init (284 samples, 7.60%)</title><rect x="109.5" y="437" width="89.7" height="15.0" fill="rgb(212,13,12)" rx="2" ry="2" />
<text  x="112.49" y="447.5" >rest_init</text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.03%)</title><rect x="1170.1" y="357" width="0.3" height="15.0" fill="rgb(247,184,18)" rx="2" ry="2" />
<text  x="1173.10" y="367.5" ></text>
</g>
<g >
<title>cpuidle_select (6 samples, 0.16%)</title><rect x="222.9" y="373" width="1.9" height="15.0" fill="rgb(238,23,17)" rx="2" ry="2" />
<text  x="225.88" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.19%)</title><rect x="907.3" y="485" width="2.2" height="15.0" fill="rgb(208,45,35)" rx="2" ry="2" />
<text  x="910.32" y="495.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.05%)</title><rect x="248.8" y="197" width="0.6" height="15.0" fill="rgb(242,184,46)" rx="2" ry="2" />
<text  x="251.78" y="207.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (34 samples, 0.91%)</title><rect x="1172.6" y="357" width="10.8" height="15.0" fill="rgb(243,25,39)" rx="2" ry="2" />
<text  x="1175.63" y="367.5" ></text>
</g>
<g >
<title>__wake_up (7 samples, 0.19%)</title><rect x="718.4" y="229" width="2.3" height="15.0" fill="rgb(221,186,22)" rx="2" ry="2" />
<text  x="721.44" y="239.5" ></text>
</g>
<g >
<title>do_unlinkat (7 samples, 0.19%)</title><rect x="907.3" y="453" width="2.2" height="15.0" fill="rgb(208,197,48)" rx="2" ry="2" />
<text  x="910.32" y="463.5" ></text>
</g>
<g >
<title>__find_get_block (5 samples, 0.13%)</title><rect x="740.6" y="149" width="1.5" height="15.0" fill="rgb(251,225,0)" rx="2" ry="2" />
<text  x="743.55" y="159.5" ></text>
</g>
<g >
<title>update_rq_clock (3 samples, 0.08%)</title><rect x="107.0" y="421" width="0.9" height="15.0" fill="rgb(220,38,6)" rx="2" ry="2" />
<text  x="109.96" y="431.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (4 samples, 0.11%)</title><rect x="1187.2" y="309" width="1.2" height="15.0" fill="rgb(212,23,51)" rx="2" ry="2" />
<text  x="1190.16" y="319.5" ></text>
</g>
<g >
<title>cpuidle_reflect (2 samples, 0.05%)</title><rect x="99.4" y="453" width="0.6" height="15.0" fill="rgb(235,110,38)" rx="2" ry="2" />
<text  x="102.38" y="463.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (190 samples, 5.09%)</title><rect x="687.5" y="357" width="60.0" height="15.0" fill="rgb(236,207,29)" rx="2" ry="2" />
<text  x="690.49" y="367.5" >do_ite..</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="1166.9" y="357" width="0.4" height="15.0" fill="rgb(214,170,50)" rx="2" ry="2" />
<text  x="1169.94" y="367.5" ></text>
</g>
<g >
<title>menu_update (1 samples, 0.03%)</title><rect x="214.4" y="405" width="0.3" height="15.0" fill="rgb(227,3,7)" rx="2" ry="2" />
<text  x="217.35" y="415.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.03%)</title><rect x="215.6" y="389" width="0.3" height="15.0" fill="rgb(243,207,5)" rx="2" ry="2" />
<text  x="218.62" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.03%)</title><rect x="936.4" y="517" width="0.3" height="15.0" fill="rgb(234,204,39)" rx="2" ry="2" />
<text  x="939.38" y="527.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="39.7" y="277" width="0.3" height="15.0" fill="rgb(212,26,44)" rx="2" ry="2" />
<text  x="42.69" y="287.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (6 samples, 0.16%)</title><rect x="248.8" y="357" width="1.9" height="15.0" fill="rgb(211,172,16)" rx="2" ry="2" />
<text  x="251.78" y="367.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.03%)</title><rect x="226.7" y="293" width="0.3" height="15.0" fill="rgb(221,128,0)" rx="2" ry="2" />
<text  x="229.67" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (8 samples, 0.21%)</title><rect x="1026.7" y="517" width="2.5" height="15.0" fill="rgb(239,151,39)" rx="2" ry="2" />
<text  x="1029.71" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.03%)</title><rect x="1183.1" y="325" width="0.3" height="15.0" fill="rgb(237,25,12)" rx="2" ry="2" />
<text  x="1186.05" y="335.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (1 samples, 0.03%)</title><rect x="725.4" y="197" width="0.3" height="15.0" fill="rgb(227,215,22)" rx="2" ry="2" />
<text  x="728.39" y="207.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.03%)</title><rect x="228.2" y="421" width="0.4" height="15.0" fill="rgb(216,116,6)" rx="2" ry="2" />
<text  x="231.25" y="431.5" ></text>
</g>
<g >
<title>do_iter_write (195 samples, 5.22%)</title><rect x="686.9" y="373" width="61.5" height="15.0" fill="rgb(238,221,13)" rx="2" ry="2" />
<text  x="689.86" y="383.5" >do_ite..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (68 samples, 1.82%)</title><rect x="206.8" y="517" width="21.4" height="15.0" fill="rgb(233,81,2)" rx="2" ry="2" />
<text  x="209.77" y="527.5" >s..</text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="695.4" y="213" width="0.3" height="15.0" fill="rgb(207,24,21)" rx="2" ry="2" />
<text  x="698.39" y="223.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.03%)</title><rect x="228.6" y="453" width="0.3" height="15.0" fill="rgb(245,42,38)" rx="2" ry="2" />
<text  x="231.57" y="463.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.03%)</title><rect x="158.4" y="325" width="0.4" height="15.0" fill="rgb(230,227,5)" rx="2" ry="2" />
<text  x="161.45" y="335.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (1 samples, 0.03%)</title><rect x="192.9" y="357" width="0.3" height="15.0" fill="rgb(237,72,47)" rx="2" ry="2" />
<text  x="195.87" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="39.4" y="389" width="0.6" height="15.0" fill="rgb(247,26,4)" rx="2" ry="2" />
<text  x="42.37" y="399.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.03%)</title><rect x="707.4" y="229" width="0.3" height="15.0" fill="rgb(222,27,35)" rx="2" ry="2" />
<text  x="710.39" y="239.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.03%)</title><rect x="39.4" y="229" width="0.3" height="15.0" fill="rgb(229,218,0)" rx="2" ry="2" />
<text  x="42.37" y="239.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="1025.4" y="517" width="0.4" height="15.0" fill="rgb(215,40,52)" rx="2" ry="2" />
<text  x="1028.44" y="527.5" ></text>
</g>
<g >
<title>rest_init (59 samples, 1.58%)</title><rect x="1171.4" y="437" width="18.6" height="15.0" fill="rgb(239,150,49)" rx="2" ry="2" />
<text  x="1174.37" y="447.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.03%)</title><rect x="707.4" y="181" width="0.3" height="15.0" fill="rgb(207,160,36)" rx="2" ry="2" />
<text  x="710.39" y="191.5" ></text>
</g>
<g >
<title>iput_final (7 samples, 0.19%)</title><rect x="907.3" y="405" width="2.2" height="15.0" fill="rgb(227,101,41)" rx="2" ry="2" />
<text  x="910.32" y="415.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.08%)</title><rect x="304.4" y="517" width="0.9" height="15.0" fill="rgb(229,136,37)" rx="2" ry="2" />
<text  x="307.37" y="527.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.03%)</title><rect x="226.4" y="293" width="0.3" height="15.0" fill="rgb(233,186,44)" rx="2" ry="2" />
<text  x="229.35" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (1 samples, 0.03%)</title><rect x="163.5" y="357" width="0.3" height="15.0" fill="rgb(211,23,23)" rx="2" ry="2" />
<text  x="166.50" y="367.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.03%)</title><rect x="38.1" y="149" width="0.3" height="15.0" fill="rgb(205,130,14)" rx="2" ry="2" />
<text  x="41.11" y="159.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1 samples, 0.03%)</title><rect x="336.9" y="517" width="0.3" height="15.0" fill="rgb(225,72,16)" rx="2" ry="2" />
<text  x="339.90" y="527.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.05%)</title><rect x="193.2" y="341" width="0.6" height="15.0" fill="rgb(212,149,53)" rx="2" ry="2" />
<text  x="196.19" y="351.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.03%)</title><rect x="682.4" y="405" width="0.4" height="15.0" fill="rgb(248,201,20)" rx="2" ry="2" />
<text  x="685.44" y="415.5" ></text>
</g>
<g >
<title>all (3,736 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(237,136,30)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1 samples, 0.03%)</title><rect x="149.9" y="325" width="0.3" height="15.0" fill="rgb(220,196,16)" rx="2" ry="2" />
<text  x="152.92" y="335.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (4 samples, 0.11%)</title><rect x="1081.7" y="517" width="1.2" height="15.0" fill="rgb(251,73,37)" rx="2" ry="2" />
<text  x="1084.66" y="527.5" ></text>
</g>
<g >
<title>xas_load (7 samples, 0.19%)</title><rect x="664.4" y="261" width="2.2" height="15.0" fill="rgb(227,136,50)" rx="2" ry="2" />
<text  x="667.43" y="271.5" ></text>
</g>
<g >
<title>newidle_balance (8 samples, 0.21%)</title><rect x="1186.8" y="341" width="2.6" height="15.0" fill="rgb(221,164,45)" rx="2" ry="2" />
<text  x="1189.84" y="351.5" ></text>
</g>
<g >
<title>pick_next_task_fair (4 samples, 0.11%)</title><rect x="1169.2" y="421" width="1.2" height="15.0" fill="rgb(208,125,30)" rx="2" ry="2" />
<text  x="1172.15" y="431.5" ></text>
</g>
<g >
<title>alx_mask_msix (1 samples, 0.03%)</title><rect x="33.4" y="293" width="0.3" height="15.0" fill="rgb(223,148,3)" rx="2" ry="2" />
<text  x="36.37" y="303.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.03%)</title><rect x="1040.9" y="149" width="0.3" height="15.0" fill="rgb(214,11,43)" rx="2" ry="2" />
<text  x="1043.92" y="159.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1 samples, 0.03%)</title><rect x="707.4" y="213" width="0.3" height="15.0" fill="rgb(215,85,19)" rx="2" ry="2" />
<text  x="710.39" y="223.5" ></text>
</g>
<g >
<title>xas_start (1 samples, 0.03%)</title><rect x="706.8" y="213" width="0.3" height="15.0" fill="rgb(229,128,23)" rx="2" ry="2" />
<text  x="709.76" y="223.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (1 samples, 0.03%)</title><rect x="35.6" y="325" width="0.3" height="15.0" fill="rgb(226,4,31)" rx="2" ry="2" />
<text  x="38.58" y="335.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.03%)</title><rect x="164.1" y="389" width="0.3" height="15.0" fill="rgb(252,169,32)" rx="2" ry="2" />
<text  x="167.13" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.11%)</title><rect x="159.7" y="309" width="1.3" height="15.0" fill="rgb(249,73,8)" rx="2" ry="2" />
<text  x="162.71" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.19%)</title><rect x="248.5" y="501" width="2.2" height="15.0" fill="rgb(252,54,54)" rx="2" ry="2" />
<text  x="251.46" y="511.5" ></text>
</g>
<g >
<title>kick_ilb (25 samples, 0.67%)</title><rect x="185.0" y="309" width="7.9" height="15.0" fill="rgb(229,90,45)" rx="2" ry="2" />
<text  x="187.98" y="319.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for  (2 samples, 0.05%)</title><rect x="1089.2" y="517" width="0.7" height="15.0" fill="rgb(209,139,35)" rx="2" ry="2" />
<text  x="1092.25" y="527.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.05%)</title><rect x="251.0" y="261" width="0.6" height="15.0" fill="rgb(210,63,31)" rx="2" ry="2" />
<text  x="253.99" y="271.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.08%)</title><rect x="226.0" y="357" width="1.0" height="15.0" fill="rgb(252,35,42)" rx="2" ry="2" />
<text  x="229.04" y="367.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.05%)</title><rect x="705.2" y="197" width="0.6" height="15.0" fill="rgb(232,79,30)" rx="2" ry="2" />
<text  x="708.18" y="207.5" ></text>
</g>
<g >
<title>core::cmp::max (1 samples, 0.03%)</title><rect x="947.7" y="517" width="0.4" height="15.0" fill="rgb(224,113,41)" rx="2" ry="2" />
<text  x="950.75" y="527.5" ></text>
</g>
<g >
<title>get_page_from_freelist (5 samples, 0.13%)</title><rect x="709.0" y="213" width="1.5" height="15.0" fill="rgb(254,17,7)" rx="2" ry="2" />
<text  x="711.97" y="223.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.08%)</title><rect x="260.8" y="517" width="0.9" height="15.0" fill="rgb(243,156,21)" rx="2" ry="2" />
<text  x="263.78" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1142.3" y="517" width="0.6" height="15.0" fill="rgb(231,194,38)" rx="2" ry="2" />
<text  x="1145.31" y="527.5" ></text>
</g>
<g >
<title>override_creds (1 samples, 0.03%)</title><rect x="642.3" y="405" width="0.3" height="15.0" fill="rgb(205,228,23)" rx="2" ry="2" />
<text  x="645.32" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="701.7" y="197" width="0.3" height="15.0" fill="rgb(245,220,45)" rx="2" ry="2" />
<text  x="704.70" y="207.5" ></text>
</g>
<g >
<title>rmqueue (3 samples, 0.08%)</title><rect x="709.6" y="197" width="0.9" height="15.0" fill="rgb(236,16,17)" rx="2" ry="2" />
<text  x="712.60" y="207.5" ></text>
</g>
<g >
<title>jbd2__journal_start (15 samples, 0.40%)</title><rect x="694.1" y="261" width="4.8" height="15.0" fill="rgb(249,229,9)" rx="2" ry="2" />
<text  x="697.12" y="271.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.05%)</title><rect x="193.2" y="357" width="0.6" height="15.0" fill="rgb(240,32,45)" rx="2" ry="2" />
<text  x="196.19" y="367.5" ></text>
</g>
<g >
<title>NaClSysReadDecoder (1 samples, 0.03%)</title><rect x="407.6" y="517" width="0.4" height="15.0" fill="rgb(222,122,28)" rx="2" ry="2" />
<text  x="410.65" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;std::collections::hash::map::HashMap&lt;usize,rustposix::interface::file::EmulatedFile&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="982.2" y="517" width="0.3" height="15.0" fill="rgb(221,226,0)" rx="2" ry="2" />
<text  x="985.17" y="527.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (5 samples, 0.13%)</title><rect x="907.9" y="165" width="1.6" height="15.0" fill="rgb(206,182,22)" rx="2" ry="2" />
<text  x="910.95" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="750.3" y="453" width="0.4" height="15.0" fill="rgb(239,61,48)" rx="2" ry="2" />
<text  x="753.34" y="463.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (2 samples, 0.05%)</title><rect x="248.8" y="277" width="0.6" height="15.0" fill="rgb(251,209,39)" rx="2" ry="2" />
<text  x="251.78" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (1 samples, 0.03%)</title><rect x="163.8" y="373" width="0.3" height="15.0" fill="rgb(239,186,25)" rx="2" ry="2" />
<text  x="166.82" y="383.5" ></text>
</g>
<g >
<title>_int_realloc (4 samples, 0.11%)</title><rect x="913.0" y="517" width="1.3" height="15.0" fill="rgb(207,124,48)" rx="2" ry="2" />
<text  x="916.00" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="1055.4" y="517" width="0.7" height="15.0" fill="rgb(224,108,52)" rx="2" ry="2" />
<text  x="1058.45" y="527.5" ></text>
</g>
<g >
<title>__libc_write (260 samples, 6.96%)</title><rect x="669.2" y="517" width="82.1" height="15.0" fill="rgb(207,91,15)" rx="2" ry="2" />
<text  x="672.17" y="527.5" >__libc_wr..</text>
</g>
<g >
<title>ThreadPoolForeg (92 samples, 2.46%)</title><rect x="199.2" y="533" width="29.0" height="15.0" fill="rgb(222,188,45)" rx="2" ry="2" />
<text  x="202.19" y="543.5" >Th..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (4 samples, 0.11%)</title><rect x="946.5" y="517" width="1.2" height="15.0" fill="rgb(227,178,50)" rx="2" ry="2" />
<text  x="949.48" y="527.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (6 samples, 0.16%)</title><rect x="970.8" y="517" width="1.9" height="15.0" fill="rgb(238,123,20)" rx="2" ry="2" />
<text  x="973.80" y="527.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.03%)</title><rect x="1063.3" y="517" width="0.4" height="15.0" fill="rgb(217,150,20)" rx="2" ry="2" />
<text  x="1066.35" y="527.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.03%)</title><rect x="228.6" y="325" width="0.3" height="15.0" fill="rgb(209,35,6)" rx="2" ry="2" />
<text  x="231.57" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (7 samples, 0.19%)</title><rect x="918.1" y="517" width="2.2" height="15.0" fill="rgb(251,9,1)" rx="2" ry="2" />
<text  x="921.06" y="527.5" ></text>
</g>
<g >
<title>NaClSysRead (6 samples, 0.16%)</title><rect x="405.8" y="517" width="1.8" height="15.0" fill="rgb(245,170,43)" rx="2" ry="2" />
<text  x="408.75" y="527.5" ></text>
</g>
<g >
<title>wake_up_bit (1 samples, 0.03%)</title><rect x="909.2" y="117" width="0.3" height="15.0" fill="rgb(229,4,8)" rx="2" ry="2" />
<text  x="912.21" y="127.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.03%)</title><rect x="250.0" y="229" width="0.4" height="15.0" fill="rgb(232,215,12)" rx="2" ry="2" />
<text  x="253.04" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.16%)</title><rect x="1060.8" y="517" width="1.9" height="15.0" fill="rgb(212,34,26)" rx="2" ry="2" />
<text  x="1063.82" y="527.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.03%)</title><rect x="1133.5" y="517" width="0.3" height="15.0" fill="rgb(230,123,16)" rx="2" ry="2" />
<text  x="1136.46" y="527.5" ></text>
</g>
<g >
<title>x86_pmu_enable (62 samples, 1.66%)</title><rect x="228.9" y="277" width="19.6" height="15.0" fill="rgb(218,194,6)" rx="2" ry="2" />
<text  x="231.88" y="287.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (2 samples, 0.05%)</title><rect x="253.8" y="517" width="0.7" height="15.0" fill="rgb(225,155,20)" rx="2" ry="2" />
<text  x="256.83" y="527.5" ></text>
</g>
<g >
<title>napi_complete_done (3 samples, 0.08%)</title><rect x="38.1" y="261" width="1.0" height="15.0" fill="rgb(229,144,37)" rx="2" ry="2" />
<text  x="41.11" y="271.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (3 samples, 0.08%)</title><rect x="249.4" y="245" width="1.0" height="15.0" fill="rgb(218,148,48)" rx="2" ry="2" />
<text  x="252.41" y="255.5" ></text>
</g>
<g >
<title>__set_page_dirty (1 samples, 0.03%)</title><rect x="722.9" y="229" width="0.3" height="15.0" fill="rgb(222,88,51)" rx="2" ry="2" />
<text  x="725.86" y="239.5" ></text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.03%)</title><rect x="152.1" y="357" width="0.3" height="15.0" fill="rgb(240,104,25)" rx="2" ry="2" />
<text  x="155.13" y="367.5" ></text>
</g>
<g >
<title>touch_atime (3 samples, 0.08%)</title><rect x="655.9" y="373" width="1.0" height="15.0" fill="rgb(232,166,22)" rx="2" ry="2" />
<text  x="658.90" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (8 samples, 0.21%)</title><rect x="1086.7" y="517" width="2.5" height="15.0" fill="rgb(239,77,4)" rx="2" ry="2" />
<text  x="1089.72" y="527.5" ></text>
</g>
<g >
<title>menu_select (6 samples, 0.16%)</title><rect x="222.9" y="357" width="1.9" height="15.0" fill="rgb(251,90,51)" rx="2" ry="2" />
<text  x="225.88" y="367.5" ></text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.03%)</title><rect x="223.8" y="341" width="0.3" height="15.0" fill="rgb(250,220,52)" rx="2" ry="2" />
<text  x="226.83" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (45 samples, 1.20%)</title><rect x="273.1" y="517" width="14.2" height="15.0" fill="rgb(254,214,54)" rx="2" ry="2" />
<text  x="276.10" y="527.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (10 samples, 0.27%)</title><rect x="1095.6" y="517" width="3.1" height="15.0" fill="rgb(229,151,50)" rx="2" ry="2" />
<text  x="1098.56" y="527.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.03%)</title><rect x="1040.9" y="325" width="0.3" height="15.0" fill="rgb(237,7,49)" rx="2" ry="2" />
<text  x="1043.92" y="335.5" ></text>
</g>
<g >
<title>free_buffer_head (2 samples, 0.05%)</title><rect x="908.6" y="53" width="0.6" height="15.0" fill="rgb(246,88,21)" rx="2" ry="2" />
<text  x="911.58" y="63.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (7 samples, 0.19%)</title><rect x="907.3" y="293" width="2.2" height="15.0" fill="rgb(241,224,49)" rx="2" ry="2" />
<text  x="910.32" y="303.5" ></text>
</g>
<g >
<title>pick_next_task_fair (9 samples, 0.24%)</title><rect x="104.1" y="421" width="2.9" height="15.0" fill="rgb(233,17,45)" rx="2" ry="2" />
<text  x="107.12" y="431.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.16%)</title><rect x="289.8" y="517" width="1.9" height="15.0" fill="rgb(212,140,42)" rx="2" ry="2" />
<text  x="292.84" y="527.5" ></text>
</g>
<g >
<title>arch_call_rest_init (37 samples, 0.99%)</title><rect x="216.6" y="453" width="11.6" height="15.0" fill="rgb(243,194,0)" rx="2" ry="2" />
<text  x="219.56" y="463.5" ></text>
</g>
<g >
<title>ext4_inode_csum (24 samples, 0.64%)</title><rect x="730.1" y="165" width="7.6" height="15.0" fill="rgb(234,219,28)" rx="2" ry="2" />
<text  x="733.13" y="175.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writeat (2 samples, 0.05%)</title><rect x="1080.4" y="517" width="0.6" height="15.0" fill="rgb(253,131,22)" rx="2" ry="2" />
<text  x="1083.40" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt; (1 samples, 0.03%)</title><rect x="980.3" y="517" width="0.3" height="15.0" fill="rgb(241,104,14)" rx="2" ry="2" />
<text  x="983.28" y="527.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3 samples, 0.08%)</title><rect x="967.0" y="517" width="1.0" height="15.0" fill="rgb(242,111,53)" rx="2" ry="2" />
<text  x="970.01" y="527.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (57 samples, 1.53%)</title><rect x="174.9" y="325" width="18.0" height="15.0" fill="rgb(213,213,32)" rx="2" ry="2" />
<text  x="177.87" y="335.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="39.7" y="357" width="0.3" height="15.0" fill="rgb(205,125,37)" rx="2" ry="2" />
<text  x="42.69" y="367.5" ></text>
</g>
<g >
<title>read_hpet.part.0 (1 samples, 0.03%)</title><rect x="39.7" y="213" width="0.3" height="15.0" fill="rgb(206,18,53)" rx="2" ry="2" />
<text  x="42.69" y="223.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.05%)</title><rect x="968.0" y="517" width="0.6" height="15.0" fill="rgb(233,173,26)" rx="2" ry="2" />
<text  x="970.96" y="527.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.03%)</title><rect x="1172.6" y="165" width="0.3" height="15.0" fill="rgb(209,75,41)" rx="2" ry="2" />
<text  x="1175.63" y="175.5" ></text>
</g>
<g >
<title>timekeeping_max_deferment (1 samples, 0.03%)</title><rect x="163.2" y="309" width="0.3" height="15.0" fill="rgb(254,75,54)" rx="2" ry="2" />
<text  x="166.19" y="319.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.03%)</title><rect x="676.4" y="453" width="0.4" height="15.0" fill="rgb(237,177,6)" rx="2" ry="2" />
<text  x="679.43" y="463.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (6 samples, 0.16%)</title><rect x="731.4" y="149" width="1.9" height="15.0" fill="rgb(251,181,19)" rx="2" ry="2" />
<text  x="734.39" y="159.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (1 samples, 0.03%)</title><rect x="1125.9" y="517" width="0.3" height="15.0" fill="rgb(206,188,34)" rx="2" ry="2" />
<text  x="1128.88" y="527.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.03%)</title><rect x="707.4" y="197" width="0.3" height="15.0" fill="rgb(238,163,16)" rx="2" ry="2" />
<text  x="710.39" y="207.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="667.9" y="357" width="0.3" height="15.0" fill="rgb(215,165,37)" rx="2" ry="2" />
<text  x="670.91" y="367.5" ></text>
</g>
<g >
<title>ip6_list_rcv_finish.constprop.0 (1 samples, 0.03%)</title><rect x="38.7" y="165" width="0.4" height="15.0" fill="rgb(229,212,27)" rx="2" ry="2" />
<text  x="41.74" y="175.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="215.6" y="405" width="0.3" height="15.0" fill="rgb(242,38,24)" rx="2" ry="2" />
<text  x="218.62" y="415.5" ></text>
</g>
<g >
<title>ext4_llseek (9 samples, 0.24%)</title><rect x="646.4" y="405" width="2.9" height="15.0" fill="rgb(254,205,39)" rx="2" ry="2" />
<text  x="649.43" y="415.5" ></text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.03%)</title><rect x="1040.9" y="165" width="0.3" height="15.0" fill="rgb(209,103,18)" rx="2" ry="2" />
<text  x="1043.92" y="175.5" ></text>
</g>
<g >
<title>rcu_pending (1 samples, 0.03%)</title><rect x="1166.9" y="213" width="0.4" height="15.0" fill="rgb(208,96,11)" rx="2" ry="2" />
<text  x="1169.94" y="223.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.03%)</title><rect x="228.6" y="405" width="0.3" height="15.0" fill="rgb(218,24,26)" rx="2" ry="2" />
<text  x="231.57" y="415.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4 samples, 0.11%)</title><rect x="743.4" y="277" width="1.3" height="15.0" fill="rgb(215,44,54)" rx="2" ry="2" />
<text  x="746.39" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="228.2" y="453" width="0.4" height="15.0" fill="rgb(239,39,34)" rx="2" ry="2" />
<text  x="231.25" y="463.5" ></text>
</g>
<g >
<title>rest_init (37 samples, 0.99%)</title><rect x="216.6" y="437" width="11.6" height="15.0" fill="rgb(212,162,54)" rx="2" ry="2" />
<text  x="219.56" y="447.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.13%)</title><rect x="305.3" y="517" width="1.6" height="15.0" fill="rgb(217,99,4)" rx="2" ry="2" />
<text  x="308.32" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (4 samples, 0.11%)</title><rect x="632.8" y="501" width="1.3" height="15.0" fill="rgb(240,91,38)" rx="2" ry="2" />
<text  x="635.85" y="511.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.03%)</title><rect x="1040.9" y="421" width="0.3" height="15.0" fill="rgb(239,208,51)" rx="2" ry="2" />
<text  x="1043.92" y="431.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="36.8" y="245" width="0.4" height="15.0" fill="rgb(205,64,40)" rx="2" ry="2" />
<text  x="39.85" y="255.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (4 samples, 0.11%)</title><rect x="954.1" y="517" width="1.2" height="15.0" fill="rgb(249,192,39)" rx="2" ry="2" />
<text  x="957.06" y="527.5" ></text>
</g>
<g >
<title>core::convert::num::&lt;impl core::convert::From&lt;u32&gt; for u64&gt;::from (1 samples, 0.03%)</title><rect x="951.9" y="517" width="0.3" height="15.0" fill="rgb(230,65,18)" rx="2" ry="2" />
<text  x="954.85" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (4 samples, 0.11%)</title><rect x="694.4" y="245" width="1.3" height="15.0" fill="rgb(213,90,22)" rx="2" ry="2" />
<text  x="697.44" y="255.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_undefined_si128 (2 samples, 0.05%)</title><rect x="961.6" y="517" width="0.7" height="15.0" fill="rgb(216,133,23)" rx="2" ry="2" />
<text  x="964.64" y="527.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.03%)</title><rect x="105.4" y="341" width="0.3" height="15.0" fill="rgb(205,82,43)" rx="2" ry="2" />
<text  x="108.39" y="351.5" ></text>
</g>
<g >
<title>__perf_event_enable (62 samples, 1.66%)</title><rect x="228.9" y="309" width="19.6" height="15.0" fill="rgb(205,124,4)" rx="2" ry="2" />
<text  x="231.88" y="319.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.03%)</title><rect x="1106.6" y="517" width="0.3" height="15.0" fill="rgb(240,218,53)" rx="2" ry="2" />
<text  x="1109.62" y="527.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (4 samples, 0.11%)</title><rect x="1169.2" y="389" width="1.2" height="15.0" fill="rgb(226,28,35)" rx="2" ry="2" />
<text  x="1172.15" y="399.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (1 samples, 0.03%)</title><rect x="714.3" y="277" width="0.4" height="15.0" fill="rgb(228,97,36)" rx="2" ry="2" />
<text  x="717.34" y="287.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.03%)</title><rect x="1182.1" y="341" width="0.3" height="15.0" fill="rgb(247,28,3)" rx="2" ry="2" />
<text  x="1185.10" y="351.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.03%)</title><rect x="228.6" y="421" width="0.3" height="15.0" fill="rgb(237,191,53)" rx="2" ry="2" />
<text  x="231.57" y="431.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.03%)</title><rect x="1170.4" y="421" width="0.3" height="15.0" fill="rgb(242,124,46)" rx="2" ry="2" />
<text  x="1173.42" y="431.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (3 samples, 0.08%)</title><rect x="1085.8" y="517" width="0.9" height="15.0" fill="rgb(211,176,20)" rx="2" ry="2" />
<text  x="1088.77" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.05%)</title><rect x="1170.7" y="453" width="0.7" height="15.0" fill="rgb(207,6,31)" rx="2" ry="2" />
<text  x="1173.73" y="463.5" ></text>
</g>
<g >
<title>kswapd (3 samples, 0.08%)</title><rect x="30.5" y="485" width="1.0" height="15.0" fill="rgb(218,217,23)" rx="2" ry="2" />
<text  x="33.53" y="495.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="39.7" y="309" width="0.3" height="15.0" fill="rgb(209,33,2)" rx="2" ry="2" />
<text  x="42.69" y="319.5" ></text>
</g>
<g >
<title>lind_write (2 samples, 0.05%)</title><rect x="1062.7" y="517" width="0.6" height="15.0" fill="rgb(245,143,2)" rx="2" ry="2" />
<text  x="1065.71" y="527.5" ></text>
</g>
<g >
<title>net_rx_action (11 samples, 0.29%)</title><rect x="35.9" y="309" width="3.5" height="15.0" fill="rgb(238,105,15)" rx="2" ry="2" />
<text  x="38.90" y="319.5" ></text>
</g>
<g >
<title>__brelse (1 samples, 0.03%)</title><rect x="725.1" y="197" width="0.3" height="15.0" fill="rgb(251,81,0)" rx="2" ry="2" />
<text  x="728.07" y="207.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::repeat (6 samples, 0.16%)</title><rect x="942.4" y="517" width="1.9" height="15.0" fill="rgb(244,152,48)" rx="2" ry="2" />
<text  x="945.38" y="527.5" ></text>
</g>
<g >
<title>lookup_bh_lru (1 samples, 0.03%)</title><rect x="742.1" y="149" width="0.3" height="15.0" fill="rgb(240,29,39)" rx="2" ry="2" />
<text  x="745.13" y="159.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.05%)</title><rect x="183.7" y="293" width="0.6" height="15.0" fill="rgb(226,157,3)" rx="2" ry="2" />
<text  x="186.72" y="303.5" ></text>
</g>
<g >
<title>psi_flags_change (1 samples, 0.03%)</title><rect x="39.4" y="213" width="0.3" height="15.0" fill="rgb(205,110,51)" rx="2" ry="2" />
<text  x="42.37" y="223.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (9 samples, 0.24%)</title><rect x="734.9" y="133" width="2.8" height="15.0" fill="rgb(237,228,26)" rx="2" ry="2" />
<text  x="737.87" y="143.5" ></text>
</g>
<g >
<title>ovl_real_fdget_meta (4 samples, 0.11%)</title><rect x="644.5" y="405" width="1.3" height="15.0" fill="rgb(220,221,41)" rx="2" ry="2" />
<text  x="647.53" y="415.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.03%)</title><rect x="1188.4" y="277" width="0.3" height="15.0" fill="rgb(218,155,41)" rx="2" ry="2" />
<text  x="1191.42" y="287.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (8 samples, 0.21%)</title><rect x="704.5" y="229" width="2.6" height="15.0" fill="rgb(232,100,7)" rx="2" ry="2" />
<text  x="707.54" y="239.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (284 samples, 7.60%)</title><rect x="109.5" y="485" width="89.7" height="15.0" fill="rgb(218,108,0)" rx="2" ry="2" />
<text  x="112.49" y="495.5" >x86_64_sta..</text>
</g>
<g >
<title>tsc_verify_tsc_adjust (1 samples, 0.03%)</title><rect x="1189.7" y="389" width="0.3" height="15.0" fill="rgb(242,206,13)" rx="2" ry="2" />
<text  x="1192.68" y="399.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (11 samples, 0.29%)</title><rect x="958.2" y="517" width="3.4" height="15.0" fill="rgb(225,198,24)" rx="2" ry="2" />
<text  x="961.17" y="527.5" ></text>
</g>
<g >
<title>iput (7 samples, 0.19%)</title><rect x="907.3" y="277" width="2.2" height="15.0" fill="rgb(222,110,8)" rx="2" ry="2" />
<text  x="910.32" y="287.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.03%)</title><rect x="1142.6" y="421" width="0.3" height="15.0" fill="rgb(213,44,52)" rx="2" ry="2" />
<text  x="1145.62" y="431.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.03%)</title><rect x="227.6" y="373" width="0.3" height="15.0" fill="rgb(243,49,46)" rx="2" ry="2" />
<text  x="230.62" y="383.5" ></text>
</g>
<g >
<title>clocksource_watchdog (1 samples, 0.03%)</title><rect x="39.7" y="261" width="0.3" height="15.0" fill="rgb(223,155,0)" rx="2" ry="2" />
<text  x="42.69" y="271.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.03%)</title><rect x="215.6" y="421" width="0.3" height="15.0" fill="rgb(235,224,0)" rx="2" ry="2" />
<text  x="218.62" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (17 samples, 0.46%)</title><rect x="217.5" y="357" width="5.4" height="15.0" fill="rgb(247,84,38)" rx="2" ry="2" />
<text  x="220.51" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (3 samples, 0.08%)</title><rect x="975.9" y="517" width="0.9" height="15.0" fill="rgb(214,30,38)" rx="2" ry="2" />
<text  x="978.86" y="527.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.03%)</title><rect x="907.3" y="149" width="0.3" height="15.0" fill="rgb(243,199,25)" rx="2" ry="2" />
<text  x="910.32" y="159.5" ></text>
</g>
<g >
<title>ovl_real_fdget (1 samples, 0.03%)</title><rect x="683.4" y="405" width="0.3" height="15.0" fill="rgb(210,71,38)" rx="2" ry="2" />
<text  x="686.38" y="415.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.03%)</title><rect x="39.7" y="293" width="0.3" height="15.0" fill="rgb(221,140,47)" rx="2" ry="2" />
<text  x="42.69" y="303.5" ></text>
</g>
<g >
<title>[perf-12314.map] (3 samples, 0.08%)</title><rect x="493.9" y="517" width="0.9" height="15.0" fill="rgb(242,45,16)" rx="2" ry="2" />
<text  x="496.88" y="527.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="114.9" y="325" width="0.6" height="15.0" fill="rgb(208,148,17)" rx="2" ry="2" />
<text  x="117.86" y="335.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (3 samples, 0.08%)</title><rect x="30.5" y="437" width="1.0" height="15.0" fill="rgb(206,60,39)" rx="2" ry="2" />
<text  x="33.53" y="447.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.03%)</title><rect x="1189.4" y="341" width="0.3" height="15.0" fill="rgb(212,14,10)" rx="2" ry="2" />
<text  x="1192.37" y="351.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="1172.6" y="245" width="0.3" height="15.0" fill="rgb(213,123,25)" rx="2" ry="2" />
<text  x="1175.63" y="255.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.05%)</title><rect x="195.7" y="389" width="0.6" height="15.0" fill="rgb(236,52,25)" rx="2" ry="2" />
<text  x="198.72" y="399.5" ></text>
</g>
<g >
<title>mutex_unlock (3 samples, 0.08%)</title><rect x="679.3" y="437" width="0.9" height="15.0" fill="rgb(234,126,54)" rx="2" ry="2" />
<text  x="682.28" y="447.5" ></text>
</g>
<g >
<title>get_typical_interval (2 samples, 0.05%)</title><rect x="94.0" y="405" width="0.6" height="15.0" fill="rgb(227,62,16)" rx="2" ry="2" />
<text  x="97.01" y="415.5" ></text>
</g>
<g >
<title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (2 samples, 0.05%)</title><rect x="292.4" y="517" width="0.6" height="15.0" fill="rgb(254,42,38)" rx="2" ry="2" />
<text  x="295.37" y="527.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.03%)</title><rect x="250.4" y="293" width="0.3" height="15.0" fill="rgb(216,227,39)" rx="2" ry="2" />
<text  x="253.36" y="303.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="652.4" y="437" width="0.3" height="15.0" fill="rgb(241,90,5)" rx="2" ry="2" />
<text  x="655.43" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt (1 samples, 0.03%)</title><rect x="1114.2" y="469" width="0.3" height="15.0" fill="rgb(243,54,30)" rx="2" ry="2" />
<text  x="1117.20" y="479.5" ></text>
</g>
<g >
<title>core::core_arch::x86::m128iExt::as_i8x16 (3 samples, 0.08%)</title><rect x="953.1" y="517" width="1.0" height="15.0" fill="rgb(210,3,28)" rx="2" ry="2" />
<text  x="956.12" y="527.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (1 samples, 0.03%)</title><rect x="962.3" y="517" width="0.3" height="15.0" fill="rgb(247,220,2)" rx="2" ry="2" />
<text  x="965.28" y="527.5" ></text>
</g>
<g >
<title>perf_ioctl (2 samples, 0.05%)</title><rect x="251.0" y="469" width="0.6" height="15.0" fill="rgb(223,179,2)" rx="2" ry="2" />
<text  x="253.99" y="479.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (2 samples, 0.05%)</title><rect x="251.0" y="437" width="0.6" height="15.0" fill="rgb(210,46,22)" rx="2" ry="2" />
<text  x="253.99" y="447.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.05%)</title><rect x="114.9" y="229" width="0.6" height="15.0" fill="rgb(210,24,47)" rx="2" ry="2" />
<text  x="117.86" y="239.5" ></text>
</g>
<g >
<title>cpuidle_select (3 samples, 0.08%)</title><rect x="213.7" y="437" width="1.0" height="15.0" fill="rgb(211,36,0)" rx="2" ry="2" />
<text  x="216.72" y="447.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (7 samples, 0.19%)</title><rect x="907.3" y="197" width="2.2" height="15.0" fill="rgb(222,166,31)" rx="2" ry="2" />
<text  x="910.32" y="207.5" ></text>
</g>
<g >
<title>__schedule (68 samples, 1.82%)</title><rect x="172.3" y="373" width="21.5" height="15.0" fill="rgb(223,205,26)" rx="2" ry="2" />
<text  x="175.34" y="383.5" >_..</text>
</g>
<g >
<title>poll_idle (31 samples, 0.83%)</title><rect x="83.0" y="405" width="9.8" height="15.0" fill="rgb(254,77,51)" rx="2" ry="2" />
<text  x="85.96" y="415.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (11 samples, 0.29%)</title><rect x="704.5" y="245" width="3.5" height="15.0" fill="rgb(250,70,13)" rx="2" ry="2" />
<text  x="707.54" y="255.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (1 samples, 0.03%)</title><rect x="222.2" y="325" width="0.4" height="15.0" fill="rgb(254,152,52)" rx="2" ry="2" />
<text  x="225.25" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_free (9 samples, 0.24%)</title><rect x="715.3" y="245" width="2.8" height="15.0" fill="rgb(218,75,39)" rx="2" ry="2" />
<text  x="718.28" y="255.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.03%)</title><rect x="709.0" y="197" width="0.3" height="15.0" fill="rgb(212,65,19)" rx="2" ry="2" />
<text  x="711.97" y="207.5" ></text>
</g>
<g >
<title>find_get_entry (9 samples, 0.24%)</title><rect x="710.5" y="245" width="2.9" height="15.0" fill="rgb(206,129,37)" rx="2" ry="2" />
<text  x="713.55" y="255.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="1170.4" y="405" width="0.3" height="15.0" fill="rgb(222,97,53)" rx="2" ry="2" />
<text  x="1173.42" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.05%)</title><rect x="98.4" y="341" width="0.7" height="15.0" fill="rgb(218,7,32)" rx="2" ry="2" />
<text  x="101.44" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="228.2" y="469" width="0.4" height="15.0" fill="rgb(243,194,18)" rx="2" ry="2" />
<text  x="231.25" y="479.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.05%)</title><rect x="955.3" y="517" width="0.7" height="15.0" fill="rgb(226,192,1)" rx="2" ry="2" />
<text  x="958.33" y="527.5" ></text>
</g>
<g >
<title>cpu_startup_entry (284 samples, 7.60%)</title><rect x="109.5" y="421" width="89.7" height="15.0" fill="rgb(220,56,13)" rx="2" ry="2" />
<text  x="112.49" y="431.5" >cpu_startu..</text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.05%)</title><rect x="1130.0" y="517" width="0.6" height="15.0" fill="rgb(211,111,32)" rx="2" ry="2" />
<text  x="1132.99" y="527.5" ></text>
</g>
<g >
<title>poll_idle (3 samples, 0.08%)</title><rect x="1166.3" y="405" width="1.0" height="15.0" fill="rgb(208,205,43)" rx="2" ry="2" />
<text  x="1169.31" y="415.5" ></text>
</g>
<g >
<title>block_invalidatepage (4 samples, 0.11%)</title><rect x="908.3" y="133" width="1.2" height="15.0" fill="rgb(210,130,18)" rx="2" ry="2" />
<text  x="911.27" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2 (2 samples, 0.05%)</title><rect x="1058.9" y="517" width="0.7" height="15.0" fill="rgb(221,121,54)" rx="2" ry="2" />
<text  x="1061.92" y="527.5" ></text>
</g>
<g >
<title>cpumask_next_and (2 samples, 0.05%)</title><rect x="184.3" y="309" width="0.7" height="15.0" fill="rgb(246,30,51)" rx="2" ry="2" />
<text  x="187.35" y="319.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::writefile_from_bytes (2 samples, 0.05%)</title><rect x="1081.0" y="517" width="0.7" height="15.0" fill="rgb(210,64,29)" rx="2" ry="2" />
<text  x="1084.03" y="527.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;[T]&gt;::len (1 samples, 0.03%)</title><rect x="1002.7" y="517" width="0.3" height="15.0" fill="rgb(252,93,38)" rx="2" ry="2" />
<text  x="1005.70" y="527.5" ></text>
</g>
<g >
<title>perf_ioctl (62 samples, 1.66%)</title><rect x="228.9" y="453" width="19.6" height="15.0" fill="rgb(206,66,25)" rx="2" ry="2" />
<text  x="231.88" y="463.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@plt (12 samples, 0.32%)</title><rect x="1063.7" y="517" width="3.8" height="15.0" fill="rgb(253,167,17)" rx="2" ry="2" />
<text  x="1066.66" y="527.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.03%)</title><rect x="1040.9" y="453" width="0.3" height="15.0" fill="rgb(227,10,22)" rx="2" ry="2" />
<text  x="1043.92" y="463.5" ></text>
</g>
<g >
<title>__schedule (8 samples, 0.21%)</title><rect x="1186.8" y="373" width="2.6" height="15.0" fill="rgb(226,219,38)" rx="2" ry="2" />
<text  x="1189.84" y="383.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.03%)</title><rect x="1040.9" y="341" width="0.3" height="15.0" fill="rgb(218,87,47)" rx="2" ry="2" />
<text  x="1043.92" y="351.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.03%)</title><rect x="741.8" y="133" width="0.3" height="15.0" fill="rgb(241,148,38)" rx="2" ry="2" />
<text  x="744.81" y="143.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (1 samples, 0.03%)</title><rect x="492.6" y="517" width="0.3" height="15.0" fill="rgb(242,88,50)" rx="2" ry="2" />
<text  x="495.61" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="96.9" y="357" width="0.3" height="15.0" fill="rgb(237,6,28)" rx="2" ry="2" />
<text  x="99.86" y="367.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (3 samples, 0.08%)</title><rect x="255.1" y="517" width="0.9" height="15.0" fill="rgb(244,15,17)" rx="2" ry="2" />
<text  x="258.10" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (30 samples, 0.80%)</title><rect x="751.3" y="517" width="9.5" height="15.0" fill="rgb(231,163,0)" rx="2" ry="2" />
<text  x="754.29" y="527.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (1 samples, 0.03%)</title><rect x="1040.9" y="437" width="0.3" height="15.0" fill="rgb(225,119,6)" rx="2" ry="2" />
<text  x="1043.92" y="447.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="39.4" y="373" width="0.3" height="15.0" fill="rgb(230,111,0)" rx="2" ry="2" />
<text  x="42.37" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (2 samples, 0.05%)</title><rect x="251.0" y="485" width="0.6" height="15.0" fill="rgb(226,105,48)" rx="2" ry="2" />
<text  x="253.99" y="495.5" ></text>
</g>
<g >
<title>event_function (62 samples, 1.66%)</title><rect x="228.9" y="325" width="19.6" height="15.0" fill="rgb(248,109,37)" rx="2" ry="2" />
<text  x="231.88" y="335.5" ></text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.08%)</title><rect x="150.2" y="341" width="1.0" height="15.0" fill="rgb(227,126,43)" rx="2" ry="2" />
<text  x="153.24" y="351.5" ></text>
</g>
<g >
<title>ctx_resched (62 samples, 1.66%)</title><rect x="228.9" y="293" width="19.6" height="15.0" fill="rgb(249,124,33)" rx="2" ry="2" />
<text  x="231.88" y="303.5" ></text>
</g>
<g >
<title>poll_idle (2 samples, 0.05%)</title><rect x="213.1" y="405" width="0.6" height="15.0" fill="rgb(229,179,24)" rx="2" ry="2" />
<text  x="216.09" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (2 samples, 0.05%)</title><rect x="1129.4" y="517" width="0.6" height="15.0" fill="rgb(217,187,35)" rx="2" ry="2" />
<text  x="1132.36" y="527.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.03%)</title><rect x="1166.9" y="261" width="0.4" height="15.0" fill="rgb(239,66,45)" rx="2" ry="2" />
<text  x="1169.94" y="271.5" ></text>
</g>
<g >
<title>ext4_inode_csum (1 samples, 0.03%)</title><rect x="729.2" y="181" width="0.3" height="15.0" fill="rgb(211,126,46)" rx="2" ry="2" />
<text  x="732.18" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.08%)</title><rect x="1054.5" y="517" width="0.9" height="15.0" fill="rgb(205,27,13)" rx="2" ry="2" />
<text  x="1057.50" y="527.5" ></text>
</g>
<g >
<title>vfs_llseek (9 samples, 0.24%)</title><rect x="646.4" y="421" width="2.9" height="15.0" fill="rgb(239,155,41)" rx="2" ry="2" />
<text  x="649.43" y="431.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.05%)</title><rect x="308.8" y="517" width="0.6" height="15.0" fill="rgb(251,208,52)" rx="2" ry="2" />
<text  x="311.79" y="527.5" ></text>
</g>
<g >
<title>xas_load (7 samples, 0.19%)</title><rect x="711.2" y="229" width="2.2" height="15.0" fill="rgb(230,147,33)" rx="2" ry="2" />
<text  x="714.18" y="239.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.03%)</title><rect x="748.8" y="405" width="0.3" height="15.0" fill="rgb(221,79,53)" rx="2" ry="2" />
<text  x="751.76" y="415.5" ></text>
</g>
<g >
<title>evict (7 samples, 0.19%)</title><rect x="907.3" y="389" width="2.2" height="15.0" fill="rgb(246,0,15)" rx="2" ry="2" />
<text  x="910.32" y="399.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="1040.9" y="469" width="0.3" height="15.0" fill="rgb(235,92,12)" rx="2" ry="2" />
<text  x="1043.92" y="479.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.03%)</title><rect x="1118.9" y="517" width="0.4" height="15.0" fill="rgb(251,116,17)" rx="2" ry="2" />
<text  x="1121.93" y="527.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.05%)</title><rect x="114.9" y="181" width="0.6" height="15.0" fill="rgb(238,191,18)" rx="2" ry="2" />
<text  x="117.86" y="191.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::as_slice (9 samples, 0.24%)</title><rect x="1016.9" y="517" width="2.9" height="15.0" fill="rgb(246,8,41)" rx="2" ry="2" />
<text  x="1019.92" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.03%)</title><rect x="1026.4" y="517" width="0.3" height="15.0" fill="rgb(224,42,46)" rx="2" ry="2" />
<text  x="1029.39" y="527.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (10 samples, 0.27%)</title><rect x="739.3" y="197" width="3.1" height="15.0" fill="rgb(205,209,49)" rx="2" ry="2" />
<text  x="742.29" y="207.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max (1 samples, 0.03%)</title><rect x="944.9" y="517" width="0.3" height="15.0" fill="rgb(233,19,54)" rx="2" ry="2" />
<text  x="947.90" y="527.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (73 samples, 1.95%)</title><rect x="382.4" y="517" width="23.0" height="15.0" fill="rgb(212,192,49)" rx="2" ry="2" />
<text  x="385.38" y="527.5" >N..</text>
</g>
<g >
<title>ovl_inode_realdata (3 samples, 0.08%)</title><rect x="643.6" y="405" width="0.9" height="15.0" fill="rgb(220,114,3)" rx="2" ry="2" />
<text  x="646.59" y="415.5" ></text>
</g>
<g >
<title>xas_find_conflict (1 samples, 0.03%)</title><rect x="706.1" y="213" width="0.3" height="15.0" fill="rgb(241,172,34)" rx="2" ry="2" />
<text  x="709.12" y="223.5" ></text>
</g>
<g >
<title>core::ptr::metadata::metadata (1 samples, 0.03%)</title><rect x="985.0" y="517" width="0.3" height="15.0" fill="rgb(238,210,35)" rx="2" ry="2" />
<text  x="988.02" y="527.5" ></text>
</g>
<g >
<title>ksys_write (7 samples, 0.19%)</title><rect x="248.5" y="453" width="2.2" height="15.0" fill="rgb(238,81,6)" rx="2" ry="2" />
<text  x="251.46" y="463.5" ></text>
</g>
<g >
<title>menu_select (3 samples, 0.08%)</title><rect x="213.7" y="421" width="1.0" height="15.0" fill="rgb(216,72,22)" rx="2" ry="2" />
<text  x="216.72" y="431.5" ></text>
</g>
<g >
<title>cpuidle_get_cpu_driver (1 samples, 0.03%)</title><rect x="31.8" y="453" width="0.3" height="15.0" fill="rgb(210,78,52)" rx="2" ry="2" />
<text  x="34.79" y="463.5" ></text>
</g>
<g >
<title>nohz_csd_func (4 samples, 0.11%)</title><rect x="102.5" y="437" width="1.3" height="15.0" fill="rgb(242,45,13)" rx="2" ry="2" />
<text  x="105.54" y="447.5" ></text>
</g>
<g >
<title>poll_idle (24 samples, 0.64%)</title><rect x="1174.2" y="341" width="7.6" height="15.0" fill="rgb(254,62,23)" rx="2" ry="2" />
<text  x="1177.21" y="351.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (2 samples, 0.05%)</title><rect x="182.8" y="277" width="0.6" height="15.0" fill="rgb(232,7,28)" rx="2" ry="2" />
<text  x="185.77" y="287.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (26 samples, 0.70%)</title><rect x="1070.6" y="517" width="8.2" height="15.0" fill="rgb(207,76,3)" rx="2" ry="2" />
<text  x="1073.61" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.21%)</title><rect x="921.5" y="517" width="2.6" height="15.0" fill="rgb(233,176,48)" rx="2" ry="2" />
<text  x="924.53" y="527.5" ></text>
</g>
<g >
<title>fib6_rule_lookup (1 samples, 0.03%)</title><rect x="38.7" y="117" width="0.4" height="15.0" fill="rgb(233,13,11)" rx="2" ry="2" />
<text  x="41.74" y="127.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (7 samples, 0.19%)</title><rect x="926.6" y="517" width="2.2" height="15.0" fill="rgb(247,1,3)" rx="2" ry="2" />
<text  x="929.58" y="527.5" ></text>
</g>
<g >
<title>perf (73 samples, 1.95%)</title><rect x="228.6" y="533" width="23.0" height="15.0" fill="rgb(247,17,27)" rx="2" ry="2" />
<text  x="231.57" y="543.5" >p..</text>
</g>
<g >
<title>core::hash::Hasher::write_usize (3 samples, 0.08%)</title><rect x="962.6" y="517" width="0.9" height="15.0" fill="rgb(239,159,34)" rx="2" ry="2" />
<text  x="965.59" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.16%)</title><rect x="1044.1" y="517" width="1.9" height="15.0" fill="rgb(241,176,5)" rx="2" ry="2" />
<text  x="1047.08" y="527.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (3 samples, 0.08%)</title><rect x="355.5" y="517" width="1.0" height="15.0" fill="rgb(205,92,47)" rx="2" ry="2" />
<text  x="358.54" y="527.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.16%)</title><rect x="992.6" y="501" width="1.9" height="15.0" fill="rgb(237,172,40)" rx="2" ry="2" />
<text  x="995.60" y="511.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (2 samples, 0.05%)</title><rect x="249.4" y="229" width="0.6" height="15.0" fill="rgb(229,228,13)" rx="2" ry="2" />
<text  x="252.41" y="239.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.05%)</title><rect x="251.0" y="389" width="0.6" height="15.0" fill="rgb(220,200,28)" rx="2" ry="2" />
<text  x="253.99" y="399.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.03%)</title><rect x="962.0" y="485" width="0.3" height="15.0" fill="rgb(208,179,49)" rx="2" ry="2" />
<text  x="964.96" y="495.5" ></text>
</g>
<g >
<title>NaClXCondVarBroadcast (46 samples, 1.23%)</title><rect x="447.1" y="517" width="14.6" height="15.0" fill="rgb(219,48,44)" rx="2" ry="2" />
<text  x="450.13" y="527.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (3 samples, 0.08%)</title><rect x="1090.5" y="517" width="1.0" height="15.0" fill="rgb(209,191,21)" rx="2" ry="2" />
<text  x="1093.51" y="527.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.03%)</title><rect x="728.9" y="165" width="0.3" height="15.0" fill="rgb(246,78,42)" rx="2" ry="2" />
<text  x="731.87" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.19%)</title><rect x="248.5" y="485" width="2.2" height="15.0" fill="rgb(246,101,2)" rx="2" ry="2" />
<text  x="251.46" y="495.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (9 samples, 0.24%)</title><rect x="1103.8" y="517" width="2.8" height="15.0" fill="rgb(220,54,26)" rx="2" ry="2" />
<text  x="1106.77" y="527.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.05%)</title><rect x="1000.2" y="517" width="0.6" height="15.0" fill="rgb(217,169,9)" rx="2" ry="2" />
<text  x="1003.18" y="527.5" ></text>
</g>
<g >
<title>alx_poll (11 samples, 0.29%)</title><rect x="35.9" y="277" width="3.5" height="15.0" fill="rgb(231,150,39)" rx="2" ry="2" />
<text  x="38.90" y="287.5" ></text>
</g>
<g >
<title>balance_pgdat (3 samples, 0.08%)</title><rect x="30.5" y="469" width="1.0" height="15.0" fill="rgb(240,119,30)" rx="2" ry="2" />
<text  x="33.53" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (2 samples, 0.05%)</title><rect x="1185.3" y="325" width="0.6" height="15.0" fill="rgb(233,188,44)" rx="2" ry="2" />
<text  x="1188.26" y="335.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.05%)</title><rect x="961.6" y="501" width="0.7" height="15.0" fill="rgb(208,153,12)" rx="2" ry="2" />
<text  x="964.64" y="511.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (1 samples, 0.03%)</title><rect x="1181.8" y="341" width="0.3" height="15.0" fill="rgb(249,154,27)" rx="2" ry="2" />
<text  x="1184.79" y="351.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (62 samples, 1.66%)</title><rect x="228.9" y="261" width="19.6" height="15.0" fill="rgb(222,77,4)" rx="2" ry="2" />
<text  x="231.88" y="271.5" ></text>
</g>
<g >
<title>perf_event_task_tick (2 samples, 0.05%)</title><rect x="114.9" y="165" width="0.6" height="15.0" fill="rgb(228,13,42)" rx="2" ry="2" />
<text  x="117.86" y="175.5" ></text>
</g>
<g >
<title>create_empty_buffers (1 samples, 0.03%)</title><rect x="700.1" y="261" width="0.3" height="15.0" fill="rgb(208,186,5)" rx="2" ry="2" />
<text  x="703.12" y="271.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="667.9" y="325" width="0.3" height="15.0" fill="rgb(236,75,2)" rx="2" ry="2" />
<text  x="670.91" y="335.5" ></text>
</g>
<g >
<title>vfs_iter_write (196 samples, 5.25%)</title><rect x="686.5" y="389" width="61.9" height="15.0" fill="rgb(218,50,48)" rx="2" ry="2" />
<text  x="689.54" y="399.5" >vfs_it..</text>
</g>
<g >
<title>cpuidle_get_cpu_driver (1 samples, 0.03%)</title><rect x="1171.7" y="389" width="0.3" height="15.0" fill="rgb(224,166,37)" rx="2" ry="2" />
<text  x="1174.68" y="399.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::padding_needed_for (4 samples, 0.11%)</title><rect x="941.1" y="517" width="1.3" height="15.0" fill="rgb(241,179,16)" rx="2" ry="2" />
<text  x="944.11" y="527.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.03%)</title><rect x="1040.9" y="405" width="0.3" height="15.0" fill="rgb(246,14,30)" rx="2" ry="2" />
<text  x="1043.92" y="415.5" ></text>
</g>
<g >
<title>start_secondary (247 samples, 6.61%)</title><rect x="31.5" y="501" width="78.0" height="15.0" fill="rgb(226,148,2)" rx="2" ry="2" />
<text  x="34.48" y="511.5" >start_sec..</text>
</g>
<g >
<title>ret_from_fork (4 samples, 0.11%)</title><rect x="30.2" y="517" width="1.3" height="15.0" fill="rgb(242,43,35)" rx="2" ry="2" />
<text  x="33.21" y="527.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.03%)</title><rect x="966.1" y="517" width="0.3" height="15.0" fill="rgb(223,40,0)" rx="2" ry="2" />
<text  x="969.07" y="527.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="95.3" y="389" width="0.3" height="15.0" fill="rgb(241,202,31)" rx="2" ry="2" />
<text  x="98.28" y="399.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (3 samples, 0.08%)</title><rect x="952.2" y="517" width="0.9" height="15.0" fill="rgb(248,201,0)" rx="2" ry="2" />
<text  x="955.17" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (11 samples, 0.29%)</title><rect x="1034.9" y="517" width="3.5" height="15.0" fill="rgb(212,14,23)" rx="2" ry="2" />
<text  x="1037.92" y="527.5" ></text>
</g>
<g >
<title>do_shrink_slab (1 samples, 0.03%)</title><rect x="31.2" y="405" width="0.3" height="15.0" fill="rgb(240,162,24)" rx="2" ry="2" />
<text  x="34.16" y="415.5" ></text>
</g>
<g >
<title>generic_write_end (70 samples, 1.87%)</title><rect x="721.0" y="277" width="22.1" height="15.0" fill="rgb(245,130,1)" rx="2" ry="2" />
<text  x="723.97" y="287.5" >g..</text>
</g>
<g >
<title>ipv6_list_rcv (1 samples, 0.03%)</title><rect x="38.7" y="197" width="0.4" height="15.0" fill="rgb(225,41,32)" rx="2" ry="2" />
<text  x="41.74" y="207.5" ></text>
</g>
<g >
<title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (1 samples, 0.03%)</title><rect x="260.5" y="517" width="0.3" height="15.0" fill="rgb(247,10,1)" rx="2" ry="2" />
<text  x="263.47" y="527.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (44 samples, 1.18%)</title><rect x="1172.0" y="389" width="13.9" height="15.0" fill="rgb(226,102,50)" rx="2" ry="2" />
<text  x="1175.00" y="399.5" ></text>
</g>
<g >
<title>do_idle (244 samples, 6.53%)</title><rect x="31.5" y="469" width="77.0" height="15.0" fill="rgb(245,203,35)" rx="2" ry="2" />
<text  x="34.48" y="479.5" >do_idle</text>
</g>
<g >
<title>llist_add_batch (2 samples, 0.05%)</title><rect x="1188.7" y="277" width="0.7" height="15.0" fill="rgb(240,56,2)" rx="2" ry="2" />
<text  x="1191.74" y="287.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (18 samples, 0.48%)</title><rect x="715.0" y="261" width="5.7" height="15.0" fill="rgb(245,48,34)" rx="2" ry="2" />
<text  x="717.97" y="271.5" ></text>
</g>
<g >
<title>vfs_read (52 samples, 1.39%)</title><rect x="652.7" y="437" width="16.5" height="15.0" fill="rgb(237,209,54)" rx="2" ry="2" />
<text  x="655.75" y="447.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.03%)</title><rect x="1040.9" y="373" width="0.3" height="15.0" fill="rgb(235,112,16)" rx="2" ry="2" />
<text  x="1043.92" y="383.5" ></text>
</g>
<g >
<title>security_file_permission (2 samples, 0.05%)</title><rect x="747.8" y="341" width="0.6" height="15.0" fill="rgb(253,133,34)" rx="2" ry="2" />
<text  x="750.82" y="351.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (190 samples, 5.09%)</title><rect x="687.5" y="341" width="60.0" height="15.0" fill="rgb(250,6,18)" rx="2" ry="2" />
<text  x="690.49" y="351.5" >ext4_f..</text>
</g>
<g >
<title>__libc_read (57 samples, 1.53%)</title><rect x="651.2" y="517" width="18.0" height="15.0" fill="rgb(241,8,37)" rx="2" ry="2" />
<text  x="654.17" y="527.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (4 samples, 0.11%)</title><rect x="311.3" y="517" width="1.3" height="15.0" fill="rgb(238,196,20)" rx="2" ry="2" />
<text  x="314.32" y="527.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (12 samples, 0.32%)</title><rect x="739.0" y="213" width="3.8" height="15.0" fill="rgb(245,11,50)" rx="2" ry="2" />
<text  x="741.97" y="223.5" ></text>
</g>
<g >
<title>mem_cgroup_track_foreign_dirty_slowpath (1 samples, 0.03%)</title><rect x="722.9" y="197" width="0.3" height="15.0" fill="rgb(238,75,37)" rx="2" ry="2" />
<text  x="725.86" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="908.6" y="37" width="0.6" height="15.0" fill="rgb(217,145,46)" rx="2" ry="2" />
<text  x="911.58" y="47.5" ></text>
</g>
<g >
<title>get_cpu_device (1 samples, 0.03%)</title><rect x="223.5" y="325" width="0.3" height="15.0" fill="rgb(223,10,44)" rx="2" ry="2" />
<text  x="226.51" y="335.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (3 samples, 0.08%)</title><rect x="908.3" y="85" width="0.9" height="15.0" fill="rgb(236,211,17)" rx="2" ry="2" />
<text  x="911.27" y="95.5" ></text>
</g>
<g >
<title>ctx_resched (2 samples, 0.05%)</title><rect x="251.0" y="309" width="0.6" height="15.0" fill="rgb(238,42,48)" rx="2" ry="2" />
<text  x="253.99" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (5 samples, 0.13%)</title><rect x="1029.2" y="517" width="1.6" height="15.0" fill="rgb(212,149,44)" rx="2" ry="2" />
<text  x="1032.23" y="527.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.05%)</title><rect x="114.9" y="197" width="0.6" height="15.0" fill="rgb(242,179,40)" rx="2" ry="2" />
<text  x="117.86" y="207.5" ></text>
</g>
<g >
<title>start_kernel (37 samples, 0.99%)</title><rect x="216.6" y="469" width="11.6" height="15.0" fill="rgb(214,103,54)" rx="2" ry="2" />
<text  x="219.56" y="479.5" ></text>
</g>
<g >
<title>DynArrayGet (68 samples, 1.82%)</title><rect x="315.1" y="517" width="21.5" height="15.0" fill="rgb(230,121,25)" rx="2" ry="2" />
<text  x="318.11" y="527.5" >D..</text>
</g>
<g >
<title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::write_u16 (1 samples, 0.03%)</title><rect x="259.2" y="517" width="0.3" height="15.0" fill="rgb(213,44,0)" rx="2" ry="2" />
<text  x="262.20" y="527.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.03%)</title><rect x="36.8" y="229" width="0.4" height="15.0" fill="rgb(248,109,7)" rx="2" ry="2" />
<text  x="39.85" y="239.5" ></text>
</g>
<g >
<title>lookup_bh_lru (4 samples, 0.11%)</title><rect x="740.6" y="133" width="1.2" height="15.0" fill="rgb(226,32,3)" rx="2" ry="2" />
<text  x="743.55" y="143.5" ></text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.08%)</title><rect x="107.0" y="405" width="0.9" height="15.0" fill="rgb(210,106,28)" rx="2" ry="2" />
<text  x="109.96" y="415.5" ></text>
</g>
<g >
<title>native_sched_clock (3 samples, 0.08%)</title><rect x="107.0" y="389" width="0.9" height="15.0" fill="rgb(227,132,21)" rx="2" ry="2" />
<text  x="109.96" y="399.5" ></text>
</g>
<g >
<title>ovl_read_iter (42 samples, 1.12%)</title><rect x="655.0" y="405" width="13.2" height="15.0" fill="rgb(218,172,31)" rx="2" ry="2" />
<text  x="657.96" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="914.3" y="517" width="0.3" height="15.0" fill="rgb(252,175,4)" rx="2" ry="2" />
<text  x="917.27" y="527.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.03%)</title><rect x="1040.9" y="309" width="0.3" height="15.0" fill="rgb(226,126,49)" rx="2" ry="2" />
<text  x="1043.92" y="319.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (1 samples, 0.03%)</title><rect x="700.1" y="181" width="0.3" height="15.0" fill="rgb(225,159,14)" rx="2" ry="2" />
<text  x="703.12" y="191.5" ></text>
</g>
<g >
<title>xas_start (4 samples, 0.11%)</title><rect x="666.6" y="261" width="1.3" height="15.0" fill="rgb(211,223,25)" rx="2" ry="2" />
<text  x="669.64" y="271.5" ></text>
</g>
<g >
<title>__run_hrtimer (2 samples, 0.05%)</title><rect x="114.9" y="245" width="0.6" height="15.0" fill="rgb(214,36,30)" rx="2" ry="2" />
<text  x="117.86" y="255.5" ></text>
</g>
<g >
<title>can_stop_idle_tick (1 samples, 0.03%)</title><rect x="158.1" y="325" width="0.3" height="15.0" fill="rgb(215,191,22)" rx="2" ry="2" />
<text  x="161.13" y="335.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (4 samples, 0.11%)</title><rect x="908.3" y="149" width="1.2" height="15.0" fill="rgb(237,104,21)" rx="2" ry="2" />
<text  x="911.27" y="159.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.03%)</title><rect x="1040.9" y="197" width="0.3" height="15.0" fill="rgb(230,80,28)" rx="2" ry="2" />
<text  x="1043.92" y="207.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.03%)</title><rect x="747.5" y="357" width="0.3" height="15.0" fill="rgb(217,43,23)" rx="2" ry="2" />
<text  x="750.50" y="367.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (1 samples, 0.03%)</title><rect x="216.2" y="469" width="0.4" height="15.0" fill="rgb(254,174,13)" rx="2" ry="2" />
<text  x="219.25" y="479.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.03%)</title><rect x="1040.9" y="117" width="0.3" height="15.0" fill="rgb(229,69,0)" rx="2" ry="2" />
<text  x="1043.92" y="127.5" ></text>
</g>
<g >
<title>NaClLog (2 samples, 0.05%)</title><rect x="359.3" y="517" width="0.7" height="15.0" fill="rgb(206,55,46)" rx="2" ry="2" />
<text  x="362.33" y="527.5" ></text>
</g>
<g >
<title>dentry_kill (7 samples, 0.19%)</title><rect x="907.3" y="325" width="2.2" height="15.0" fill="rgb(222,66,39)" rx="2" ry="2" />
<text  x="910.32" y="335.5" ></text>
</g>
<g >
<title>vfs_write (222 samples, 5.94%)</title><rect x="680.2" y="437" width="70.1" height="15.0" fill="rgb(236,205,33)" rx="2" ry="2" />
<text  x="683.22" y="447.5" >vfs_write</text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.11%)</title><rect x="97.2" y="341" width="1.2" height="15.0" fill="rgb(215,173,12)" rx="2" ry="2" />
<text  x="100.17" y="351.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (1 samples, 0.03%)</title><rect x="355.2" y="517" width="0.3" height="15.0" fill="rgb(212,185,5)" rx="2" ry="2" />
<text  x="358.22" y="527.5" ></text>
</g>
<g >
<title>ext4_da_should_update_i_disksize (1 samples, 0.03%)</title><rect x="720.7" y="277" width="0.3" height="15.0" fill="rgb(251,213,42)" rx="2" ry="2" />
<text  x="723.65" y="287.5" ></text>
</g>
<g >
<title>cpuidle_select (37 samples, 0.99%)</title><rect x="152.1" y="373" width="11.7" height="15.0" fill="rgb(215,63,45)" rx="2" ry="2" />
<text  x="155.13" y="383.5" ></text>
</g>
<g >
<title>file_remove_privs (1 samples, 0.03%)</title><rect x="683.1" y="405" width="0.3" height="15.0" fill="rgb(236,131,12)" rx="2" ry="2" />
<text  x="686.07" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (59 samples, 1.58%)</title><rect x="1171.4" y="421" width="18.6" height="15.0" fill="rgb(250,23,47)" rx="2" ry="2" />
<text  x="1174.37" y="431.5" ></text>
</g>
<g >
<title>napi_poll (11 samples, 0.29%)</title><rect x="35.9" y="293" width="3.5" height="15.0" fill="rgb(238,30,4)" rx="2" ry="2" />
<text  x="38.90" y="303.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (3 samples, 0.08%)</title><rect x="1168.2" y="453" width="1.0" height="15.0" fill="rgb(227,139,29)" rx="2" ry="2" />
<text  x="1171.21" y="463.5" ></text>
</g>
<g >
<title>arp_rcv (1 samples, 0.03%)</title><rect x="38.1" y="197" width="0.3" height="15.0" fill="rgb(210,78,15)" rx="2" ry="2" />
<text  x="41.11" y="207.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="1172.6" y="277" width="0.3" height="15.0" fill="rgb(251,36,14)" rx="2" ry="2" />
<text  x="1175.63" y="287.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="289.5" y="485" width="0.3" height="15.0" fill="rgb(247,38,13)" rx="2" ry="2" />
<text  x="292.52" y="495.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::readat (5 samples, 0.13%)</title><rect x="1078.8" y="517" width="1.6" height="15.0" fill="rgb(224,60,20)" rx="2" ry="2" />
<text  x="1081.82" y="527.5" ></text>
</g>
<g >
<title>iput.part.0 (7 samples, 0.19%)</title><rect x="907.3" y="261" width="2.2" height="15.0" fill="rgb(206,113,29)" rx="2" ry="2" />
<text  x="910.32" y="271.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="1003.0" y="517" width="0.3" height="15.0" fill="rgb(221,170,16)" rx="2" ry="2" />
<text  x="1006.02" y="527.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (1 samples, 0.03%)</title><rect x="214.0" y="405" width="0.4" height="15.0" fill="rgb(247,97,7)" rx="2" ry="2" />
<text  x="217.04" y="415.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.03%)</title><rect x="226.0" y="293" width="0.4" height="15.0" fill="rgb(210,51,23)" rx="2" ry="2" />
<text  x="229.04" y="303.5" ></text>
</g>
<g >
<title>ksys_read (54 samples, 1.45%)</title><rect x="652.1" y="453" width="17.1" height="15.0" fill="rgb(205,15,24)" rx="2" ry="2" />
<text  x="655.11" y="463.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1166.9" y="341" width="0.4" height="15.0" fill="rgb(243,187,41)" rx="2" ry="2" />
<text  x="1169.94" y="351.5" ></text>
</g>
<g >
<title>shrink_slab (1 samples, 0.03%)</title><rect x="31.2" y="421" width="0.3" height="15.0" fill="rgb(228,132,10)" rx="2" ry="2" />
<text  x="34.16" y="431.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (5 samples, 0.13%)</title><rect x="105.4" y="357" width="1.6" height="15.0" fill="rgb(231,132,2)" rx="2" ry="2" />
<text  x="108.39" y="367.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (1 samples, 0.03%)</title><rect x="1114.2" y="501" width="0.3" height="15.0" fill="rgb(238,13,9)" rx="2" ry="2" />
<text  x="1117.20" y="511.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.13%)</title><rect x="100.3" y="437" width="1.6" height="15.0" fill="rgb(206,113,0)" rx="2" ry="2" />
<text  x="103.33" y="447.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.03%)</title><rect x="668.9" y="405" width="0.3" height="15.0" fill="rgb(238,8,18)" rx="2" ry="2" />
<text  x="671.85" y="415.5" ></text>
</g>
<g >
<title>isolate_lru_pages (1 samples, 0.03%)</title><rect x="30.5" y="389" width="0.3" height="15.0" fill="rgb(241,182,27)" rx="2" ry="2" />
<text  x="33.53" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="228.2" y="437" width="0.4" height="15.0" fill="rgb(237,96,37)" rx="2" ry="2" />
<text  x="231.25" y="447.5" ></text>
</g>
<g >
<title>smp_call_function_single (62 samples, 1.66%)</title><rect x="228.9" y="373" width="19.6" height="15.0" fill="rgb(239,211,28)" rx="2" ry="2" />
<text  x="231.88" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_enable (2 samples, 0.05%)</title><rect x="251.0" y="293" width="0.6" height="15.0" fill="rgb(210,113,13)" rx="2" ry="2" />
<text  x="253.99" y="303.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.03%)</title><rect x="250.0" y="213" width="0.4" height="15.0" fill="rgb(224,70,36)" rx="2" ry="2" />
<text  x="253.04" y="223.5" ></text>
</g>
<g >
<title>remote_function (2 samples, 0.05%)</title><rect x="251.0" y="357" width="0.6" height="15.0" fill="rgb(220,95,10)" rx="2" ry="2" />
<text  x="253.99" y="367.5" ></text>
</g>
<g >
<title>alloc_page_buffers (1 samples, 0.03%)</title><rect x="700.1" y="245" width="0.3" height="15.0" fill="rgb(205,208,28)" rx="2" ry="2" />
<text  x="703.12" y="255.5" ></text>
</g>
<g >
<title>find_next_and_bit (1 samples, 0.03%)</title><rect x="187.2" y="277" width="0.3" height="15.0" fill="rgb(245,98,5)" rx="2" ry="2" />
<text  x="190.19" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (2 samples, 0.05%)</title><rect x="1025.8" y="517" width="0.6" height="15.0" fill="rgb(243,49,25)" rx="2" ry="2" />
<text  x="1028.76" y="527.5" ></text>
</g>
<g >
<title>vfs_iter_read (36 samples, 0.96%)</title><rect x="656.9" y="389" width="11.3" height="15.0" fill="rgb(217,155,32)" rx="2" ry="2" />
<text  x="659.85" y="399.5" ></text>
</g>
<g >
<title>ovl_read_iter (1 samples, 0.03%)</title><rect x="668.5" y="421" width="0.4" height="15.0" fill="rgb(232,134,29)" rx="2" ry="2" />
<text  x="671.54" y="431.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11 samples, 0.29%)</title><rect x="35.9" y="373" width="3.5" height="15.0" fill="rgb(239,112,54)" rx="2" ry="2" />
<text  x="38.90" y="383.5" ></text>
</g>
<g >
<title>xas_nomem (1 samples, 0.03%)</title><rect x="706.4" y="213" width="0.4" height="15.0" fill="rgb(245,36,0)" rx="2" ry="2" />
<text  x="709.44" y="223.5" ></text>
</g>
<g >
<title>__unlink (7 samples, 0.19%)</title><rect x="907.3" y="517" width="2.2" height="15.0" fill="rgb(215,159,48)" rx="2" ry="2" />
<text  x="910.32" y="527.5" ></text>
</g>
<g >
<title>arch_call_rest_init (284 samples, 7.60%)</title><rect x="109.5" y="453" width="89.7" height="15.0" fill="rgb(237,202,49)" rx="2" ry="2" />
<text  x="112.49" y="463.5" >arch_call_..</text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (2 samples, 0.05%)</title><rect x="692.2" y="293" width="0.7" height="15.0" fill="rgb(251,162,52)" rx="2" ry="2" />
<text  x="695.23" y="303.5" ></text>
</g>
<g >
<title>do_iter_read (36 samples, 0.96%)</title><rect x="656.9" y="373" width="11.3" height="15.0" fill="rgb(234,69,36)" rx="2" ry="2" />
<text  x="659.85" y="383.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="164.8" y="373" width="0.3" height="15.0" fill="rgb(243,24,40)" rx="2" ry="2" />
<text  x="167.76" y="383.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.05%)</title><rect x="749.1" y="405" width="0.6" height="15.0" fill="rgb(209,189,10)" rx="2" ry="2" />
<text  x="752.08" y="415.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (8 samples, 0.21%)</title><rect x="1186.8" y="325" width="2.6" height="15.0" fill="rgb(241,15,24)" rx="2" ry="2" />
<text  x="1189.84" y="335.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (1 samples, 0.03%)</title><rect x="215.3" y="389" width="0.3" height="15.0" fill="rgb(212,29,15)" rx="2" ry="2" />
<text  x="218.30" y="399.5" ></text>
</g>
<g >
<title>generic_write_end (3 samples, 0.08%)</title><rect x="249.4" y="277" width="1.0" height="15.0" fill="rgb(247,164,13)" rx="2" ry="2" />
<text  x="252.41" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="1142.3" y="501" width="0.3" height="15.0" fill="rgb(237,14,34)" rx="2" ry="2" />
<text  x="1145.31" y="511.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="93.4" y="405" width="0.3" height="15.0" fill="rgb(220,20,42)" rx="2" ry="2" />
<text  x="96.38" y="415.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="228.6" y="373" width="0.3" height="15.0" fill="rgb(247,15,43)" rx="2" ry="2" />
<text  x="231.57" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="114.9" y="293" width="0.6" height="15.0" fill="rgb(219,26,37)" rx="2" ry="2" />
<text  x="117.86" y="303.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (7 samples, 0.19%)</title><rect x="972.7" y="517" width="2.2" height="15.0" fill="rgb(238,97,26)" rx="2" ry="2" />
<text  x="975.70" y="527.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="39.7" y="325" width="0.3" height="15.0" fill="rgb(250,28,42)" rx="2" ry="2" />
<text  x="42.69" y="335.5" ></text>
</g>
<g >
<title>llist_add_batch (4 samples, 0.11%)</title><rect x="105.7" y="341" width="1.3" height="15.0" fill="rgb(246,125,29)" rx="2" ry="2" />
<text  x="108.70" y="351.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="750.3" y="469" width="0.4" height="15.0" fill="rgb(213,209,35)" rx="2" ry="2" />
<text  x="753.34" y="479.5" ></text>
</g>
<g >
<title>native_write_msr (62 samples, 1.66%)</title><rect x="228.9" y="245" width="19.6" height="15.0" fill="rgb(206,131,52)" rx="2" ry="2" />
<text  x="231.88" y="255.5" ></text>
</g>
<g >
<title>account_page_dirtied (1 samples, 0.03%)</title><rect x="722.9" y="213" width="0.3" height="15.0" fill="rgb(249,227,32)" rx="2" ry="2" />
<text  x="725.86" y="223.5" ></text>
</g>
<g >
<title>rw_verify_area (2 samples, 0.05%)</title><rect x="747.8" y="357" width="0.6" height="15.0" fill="rgb(212,30,46)" rx="2" ry="2" />
<text  x="750.82" y="367.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_tuple (1 samples, 0.03%)</title><rect x="254.8" y="517" width="0.3" height="15.0" fill="rgb(207,47,49)" rx="2" ry="2" />
<text  x="257.78" y="527.5" ></text>
</g>
<g >
<title>ovl_llseek (1 samples, 0.03%)</title><rect x="650.2" y="453" width="0.3" height="15.0" fill="rgb(227,87,42)" rx="2" ry="2" />
<text  x="653.22" y="463.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.03%)</title><rect x="1040.9" y="389" width="0.3" height="15.0" fill="rgb(234,96,4)" rx="2" ry="2" />
<text  x="1043.92" y="399.5" ></text>
</g>
<g >
<title>pick_next_task_fair (8 samples, 0.21%)</title><rect x="1186.8" y="357" width="2.6" height="15.0" fill="rgb(248,49,44)" rx="2" ry="2" />
<text  x="1189.84" y="367.5" ></text>
</g>
<g >
<title>cpuidle_enter (17 samples, 0.46%)</title><rect x="217.5" y="373" width="5.4" height="15.0" fill="rgb(221,151,33)" rx="2" ry="2" />
<text  x="220.51" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.03%)</title><rect x="1167.9" y="389" width="0.3" height="15.0" fill="rgb(208,36,17)" rx="2" ry="2" />
<text  x="1170.89" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (54 samples, 1.45%)</title><rect x="634.1" y="501" width="17.1" height="15.0" fill="rgb(205,181,47)" rx="2" ry="2" />
<text  x="637.11" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="981.2" y="517" width="1.0" height="15.0" fill="rgb(228,49,36)" rx="2" ry="2" />
<text  x="984.23" y="527.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (3 samples, 0.08%)</title><rect x="709.6" y="165" width="0.9" height="15.0" fill="rgb(233,2,50)" rx="2" ry="2" />
<text  x="712.60" y="175.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="36.5" y="181" width="0.3" height="15.0" fill="rgb(228,148,13)" rx="2" ry="2" />
<text  x="39.53" y="191.5" ></text>
</g>
<g >
<title>llist_reverse_order (2 samples, 0.05%)</title><rect x="101.9" y="437" width="0.6" height="15.0" fill="rgb(225,105,18)" rx="2" ry="2" />
<text  x="104.91" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (4 samples, 0.11%)</title><rect x="1041.2" y="517" width="1.3" height="15.0" fill="rgb(248,61,53)" rx="2" ry="2" />
<text  x="1044.24" y="527.5" ></text>
</g>
<g >
<title>page_cache_delete (1 samples, 0.03%)</title><rect x="30.8" y="357" width="0.4" height="15.0" fill="rgb(250,103,40)" rx="2" ry="2" />
<text  x="33.85" y="367.5" ></text>
</g>
<g >
<title>evict (7 samples, 0.19%)</title><rect x="907.3" y="229" width="2.2" height="15.0" fill="rgb(219,99,34)" rx="2" ry="2" />
<text  x="910.32" y="239.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.27%)</title><rect x="261.7" y="517" width="3.2" height="15.0" fill="rgb(242,84,21)" rx="2" ry="2" />
<text  x="264.73" y="527.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (1 samples, 0.03%)</title><rect x="354.9" y="517" width="0.3" height="15.0" fill="rgb(243,73,41)" rx="2" ry="2" />
<text  x="357.90" y="527.5" ></text>
</g>
<g >
<title>std::sync::once::Once::is_completed (3 samples, 0.08%)</title><rect x="1119.6" y="517" width="0.9" height="15.0" fill="rgb(254,104,12)" rx="2" ry="2" />
<text  x="1122.57" y="527.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (3 samples, 0.08%)</title><rect x="38.1" y="229" width="1.0" height="15.0" fill="rgb(208,226,19)" rx="2" ry="2" />
<text  x="41.11" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="937.3" y="517" width="0.3" height="15.0" fill="rgb(237,82,49)" rx="2" ry="2" />
<text  x="940.32" y="527.5" ></text>
</g>
<g >
<title>shrink_lruvec (2 samples, 0.05%)</title><rect x="30.5" y="421" width="0.7" height="15.0" fill="rgb(221,5,17)" rx="2" ry="2" />
<text  x="33.53" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (22 samples, 0.59%)</title><rect x="206.8" y="421" width="6.9" height="15.0" fill="rgb(253,16,47)" rx="2" ry="2" />
<text  x="209.77" y="431.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.03%)</title><rect x="1040.9" y="213" width="0.3" height="15.0" fill="rgb(207,129,30)" rx="2" ry="2" />
<text  x="1043.92" y="223.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (1 samples, 0.03%)</title><rect x="225.1" y="373" width="0.3" height="15.0" fill="rgb(249,170,43)" rx="2" ry="2" />
<text  x="228.09" y="383.5" ></text>
</g>
<g >
<title>shrink_node (3 samples, 0.08%)</title><rect x="30.5" y="453" width="1.0" height="15.0" fill="rgb(210,138,54)" rx="2" ry="2" />
<text  x="33.53" y="463.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u64 (9 samples, 0.24%)</title><rect x="1098.7" y="517" width="2.9" height="15.0" fill="rgb(220,124,19)" rx="2" ry="2" />
<text  x="1101.72" y="527.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (3 samples, 0.08%)</title><rect x="38.1" y="213" width="1.0" height="15.0" fill="rgb(220,133,7)" rx="2" ry="2" />
<text  x="41.11" y="223.5" ></text>
</g>
<g >
<title>alx_clean_rx_irq (2 samples, 0.05%)</title><rect x="36.5" y="261" width="0.7" height="15.0" fill="rgb(227,195,40)" rx="2" ry="2" />
<text  x="39.53" y="271.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="1003.3" y="517" width="0.4" height="15.0" fill="rgb(221,106,34)" rx="2" ry="2" />
<text  x="1006.34" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="925.6" y="517" width="0.7" height="15.0" fill="rgb(237,9,11)" rx="2" ry="2" />
<text  x="928.64" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="228.6" y="485" width="0.3" height="15.0" fill="rgb(221,6,24)" rx="2" ry="2" />
<text  x="231.57" y="495.5" ></text>
</g>
<g >
<title>generic_perform_write (177 samples, 4.74%)</title><rect x="690.3" y="309" width="55.9" height="15.0" fill="rgb(240,134,50)" rx="2" ry="2" />
<text  x="693.33" y="319.5" >gener..</text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (2 samples, 0.05%)</title><rect x="695.1" y="229" width="0.6" height="15.0" fill="rgb(231,196,11)" rx="2" ry="2" />
<text  x="698.07" y="239.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.05%)</title><rect x="251.0" y="373" width="0.6" height="15.0" fill="rgb(206,203,35)" rx="2" ry="2" />
<text  x="253.99" y="383.5" ></text>
</g>
<g >
<title>alx_intr_msix_misc (1 samples, 0.03%)</title><rect x="33.4" y="309" width="0.3" height="15.0" fill="rgb(246,173,54)" rx="2" ry="2" />
<text  x="36.37" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.05%)</title><rect x="1058.0" y="517" width="0.6" height="15.0" fill="rgb(218,19,22)" rx="2" ry="2" />
<text  x="1060.98" y="527.5" ></text>
</g>
<g >
<title>shrink_inactive_list (2 samples, 0.05%)</title><rect x="30.5" y="405" width="0.7" height="15.0" fill="rgb(219,128,24)" rx="2" ry="2" />
<text  x="33.53" y="415.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.03%)</title><rect x="163.8" y="309" width="0.3" height="15.0" fill="rgb(205,87,23)" rx="2" ry="2" />
<text  x="166.82" y="319.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.03%)</title><rect x="163.8" y="341" width="0.3" height="15.0" fill="rgb(210,124,49)" rx="2" ry="2" />
<text  x="166.82" y="351.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (3 samples, 0.08%)</title><rect x="162.2" y="293" width="1.0" height="15.0" fill="rgb(206,15,2)" rx="2" ry="2" />
<text  x="165.24" y="303.5" ></text>
</g>
<g >
<title>kick_ilb (6 samples, 0.16%)</title><rect x="105.1" y="373" width="1.9" height="15.0" fill="rgb(249,195,46)" rx="2" ry="2" />
<text  x="108.07" y="383.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.03%)</title><rect x="1040.9" y="133" width="0.3" height="15.0" fill="rgb(247,136,8)" rx="2" ry="2" />
<text  x="1043.92" y="143.5" ></text>
</g>
<g >
<title>cpu_startup_entry (37 samples, 0.99%)</title><rect x="216.6" y="421" width="11.6" height="15.0" fill="rgb(232,152,21)" rx="2" ry="2" />
<text  x="219.56" y="431.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (136 samples, 3.64%)</title><rect x="40.0" y="405" width="43.0" height="15.0" fill="rgb(244,22,15)" rx="2" ry="2" />
<text  x="43.01" y="415.5" >mwai..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.03%)</title><rect x="1057.7" y="517" width="0.3" height="15.0" fill="rgb(250,81,42)" rx="2" ry="2" />
<text  x="1060.66" y="527.5" ></text>
</g>
<g >
<title>ext4_da_write_end (3 samples, 0.08%)</title><rect x="249.4" y="293" width="1.0" height="15.0" fill="rgb(243,165,21)" rx="2" ry="2" />
<text  x="252.41" y="303.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (284 samples, 7.60%)</title><rect x="109.5" y="501" width="89.7" height="15.0" fill="rgb(239,2,10)" rx="2" ry="2" />
<text  x="112.49" y="511.5" >x86_64_sta..</text>
</g>
<g >
<title>cpuidle_select (3 samples, 0.08%)</title><rect x="1167.3" y="437" width="0.9" height="15.0" fill="rgb(232,93,10)" rx="2" ry="2" />
<text  x="1170.26" y="447.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (14 samples, 0.37%)</title><rect x="990.1" y="517" width="4.4" height="15.0" fill="rgb(253,22,9)" rx="2" ry="2" />
<text  x="993.07" y="527.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (7 samples, 0.19%)</title><rect x="161.0" y="309" width="2.2" height="15.0" fill="rgb(218,133,28)" rx="2" ry="2" />
<text  x="163.97" y="319.5" ></text>
</g>
<g >
<title>new_sync_read (46 samples, 1.23%)</title><rect x="654.0" y="421" width="14.5" height="15.0" fill="rgb(217,79,33)" rx="2" ry="2" />
<text  x="657.01" y="431.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="39.7" y="373" width="0.3" height="15.0" fill="rgb(230,132,45)" rx="2" ry="2" />
<text  x="42.69" y="383.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook.constprop.0 (2 samples, 0.05%)</title><rect x="717.5" y="229" width="0.6" height="15.0" fill="rgb(219,107,2)" rx="2" ry="2" />
<text  x="720.49" y="239.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.05%)</title><rect x="148.3" y="325" width="0.7" height="15.0" fill="rgb(241,121,25)" rx="2" ry="2" />
<text  x="151.34" y="335.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.13%)</title><rect x="637.0" y="421" width="1.5" height="15.0" fill="rgb(252,165,19)" rx="2" ry="2" />
<text  x="639.95" y="431.5" ></text>
</g>
<g >
<title>revert_creds (1 samples, 0.03%)</title><rect x="748.4" y="405" width="0.4" height="15.0" fill="rgb(252,125,26)" rx="2" ry="2" />
<text  x="751.45" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="39.4" y="357" width="0.3" height="15.0" fill="rgb(238,24,41)" rx="2" ry="2" />
<text  x="42.37" y="367.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (63 samples, 1.69%)</title><rect x="723.2" y="261" width="19.9" height="15.0" fill="rgb(235,193,8)" rx="2" ry="2" />
<text  x="726.18" y="271.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (77 samples, 2.06%)</title><rect x="1142.9" y="421" width="24.4" height="15.0" fill="rgb(209,119,4)" rx="2" ry="2" />
<text  x="1145.94" y="431.5" >c..</text>
</g>
<g >
<title>cpuidle_select (18 samples, 0.48%)</title><rect x="93.7" y="437" width="5.7" height="15.0" fill="rgb(228,55,23)" rx="2" ry="2" />
<text  x="96.70" y="447.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.03%)</title><rect x="196.0" y="373" width="0.3" height="15.0" fill="rgb(237,101,36)" rx="2" ry="2" />
<text  x="199.03" y="383.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.03%)</title><rect x="1172.6" y="229" width="0.3" height="15.0" fill="rgb(243,36,18)" rx="2" ry="2" />
<text  x="1175.63" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="251.0" y="517" width="0.6" height="15.0" fill="rgb(242,70,18)" rx="2" ry="2" />
<text  x="253.99" y="527.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.11%)</title><rect x="1001.4" y="517" width="1.3" height="15.0" fill="rgb(205,185,6)" rx="2" ry="2" />
<text  x="1004.44" y="527.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.03%)</title><rect x="228.6" y="341" width="0.3" height="15.0" fill="rgb(248,123,45)" rx="2" ry="2" />
<text  x="231.57" y="351.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.05%)</title><rect x="1089.9" y="517" width="0.6" height="15.0" fill="rgb(239,156,48)" rx="2" ry="2" />
<text  x="1092.88" y="527.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.03%)</title><rect x="1172.6" y="213" width="0.3" height="15.0" fill="rgb(222,197,44)" rx="2" ry="2" />
<text  x="1175.63" y="223.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.03%)</title><rect x="215.9" y="453" width="0.3" height="15.0" fill="rgb(254,108,18)" rx="2" ry="2" />
<text  x="218.93" y="463.5" ></text>
</g>
<g >
<title>__fget_files (1 samples, 0.03%)</title><rect x="652.4" y="405" width="0.3" height="15.0" fill="rgb(237,130,25)" rx="2" ry="2" />
<text  x="655.43" y="415.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Seek&gt;::seek (5 samples, 0.13%)</title><rect x="309.4" y="517" width="1.6" height="15.0" fill="rgb(207,229,35)" rx="2" ry="2" />
<text  x="312.42" y="527.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.05%)</title><rect x="638.5" y="437" width="0.7" height="15.0" fill="rgb(208,30,44)" rx="2" ry="2" />
<text  x="641.53" y="447.5" ></text>
</g>
</g>
</svg>
