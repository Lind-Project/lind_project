<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="550.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="533" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="533" > </text>
<g id="frames">
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.59%)</title><rect x="910.7" y="245" width="7.0" height="15.0" fill="rgb(239,22,45)" rx="2" ry="2" />
<text  x="913.71" y="255.5" ></text>
</g>
<g >
<title>ctx_resched (1 samples, 0.59%)</title><rect x="463.8" y="261" width="7.0" height="15.0" fill="rgb(239,164,11)" rx="2" ry="2" />
<text  x="466.85" y="271.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.59%)</title><rect x="1008.5" y="373" width="6.9" height="15.0" fill="rgb(234,181,19)" rx="2" ry="2" />
<text  x="1011.46" y="383.5" ></text>
</g>
<g >
<title>remote_function (1 samples, 0.59%)</title><rect x="463.8" y="309" width="7.0" height="15.0" fill="rgb(239,11,12)" rx="2" ry="2" />
<text  x="466.85" y="319.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.59%)</title><rect x="1183.0" y="277" width="7.0" height="15.0" fill="rgb(254,90,25)" rx="2" ry="2" />
<text  x="1186.02" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (63 samples, 37.28%)</title><rect x="17.0" y="325" width="439.9" height="15.0" fill="rgb(213,19,27)" rx="2" ry="2" />
<text  x="19.98" y="335.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>__perf_event_enable (63 samples, 37.28%)</title><rect x="17.0" y="165" width="439.9" height="15.0" fill="rgb(240,102,34)" rx="2" ry="2" />
<text  x="19.98" y="175.5" >__perf_event_enable</text>
</g>
<g >
<title>event_function (63 samples, 37.28%)</title><rect x="17.0" y="181" width="439.9" height="15.0" fill="rgb(245,95,4)" rx="2" ry="2" />
<text  x="19.98" y="191.5" >event_function</text>
</g>
<g >
<title>event_function (1 samples, 0.59%)</title><rect x="463.8" y="293" width="7.0" height="15.0" fill="rgb(229,25,50)" rx="2" ry="2" />
<text  x="466.85" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.59%)</title><rect x="1183.0" y="341" width="7.0" height="15.0" fill="rgb(228,225,46)" rx="2" ry="2" />
<text  x="1186.02" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 1.18%)</title><rect x="1001.5" y="469" width="13.9" height="15.0" fill="rgb(226,228,1)" rx="2" ry="2" />
<text  x="1004.48" y="479.5" ></text>
</g>
<g >
<title>calc_global_load_tick (1 samples, 0.59%)</title><rect x="910.7" y="101" width="7.0" height="15.0" fill="rgb(211,213,6)" rx="2" ry="2" />
<text  x="913.71" y="111.5" ></text>
</g>
<g >
<title>remote_function (63 samples, 37.28%)</title><rect x="17.0" y="197" width="439.9" height="15.0" fill="rgb(221,74,54)" rx="2" ry="2" />
<text  x="19.98" y="207.5" >remote_function</text>
</g>
<g >
<title>release_pages (1 samples, 0.59%)</title><rect x="1008.5" y="181" width="6.9" height="15.0" fill="rgb(240,225,2)" rx="2" ry="2" />
<text  x="1011.46" y="191.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.59%)</title><rect x="1008.5" y="293" width="6.9" height="15.0" fill="rgb(217,196,4)" rx="2" ry="2" />
<text  x="1011.46" y="303.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.59%)</title><rect x="10.0" y="389" width="7.0" height="15.0" fill="rgb(206,125,14)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.59%)</title><rect x="10.0" y="373" width="7.0" height="15.0" fill="rgb(244,99,2)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>lind (1 samples, 0.59%)</title><rect x="10.0" y="485" width="7.0" height="15.0" fill="rgb(247,219,25)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>lind_write (30 samples, 17.75%)</title><rect x="603.5" y="373" width="209.5" height="15.0" fill="rgb(235,197,7)" rx="2" ry="2" />
<text  x="606.49" y="383.5" >lind_write</text>
</g>
<g >
<title>[unknown] (64 samples, 37.87%)</title><rect x="17.0" y="469" width="446.8" height="15.0" fill="rgb(226,128,23)" rx="2" ry="2" />
<text  x="19.98" y="479.5" >[unknown]</text>
</g>
<g >
<title>NaClDescIoDescRead (14 samples, 8.28%)</title><rect x="498.8" y="405" width="97.7" height="15.0" fill="rgb(217,69,16)" rx="2" ry="2" />
<text  x="501.76" y="415.5" >NaClDescIoD..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.59%)</title><rect x="910.7" y="213" width="7.0" height="15.0" fill="rgb(228,83,24)" rx="2" ry="2" />
<text  x="913.71" y="223.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.59%)</title><rect x="456.9" y="117" width="6.9" height="15.0" fill="rgb(225,112,33)" rx="2" ry="2" />
<text  x="459.86" y="127.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.59%)</title><rect x="1183.0" y="309" width="7.0" height="15.0" fill="rgb(214,113,54)" rx="2" ry="2" />
<text  x="1186.02" y="319.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (9 samples, 5.33%)</title><rect x="882.8" y="453" width="62.8" height="15.0" fill="rgb(243,214,54)" rx="2" ry="2" />
<text  x="885.78" y="463.5" >asm_ex..</text>
</g>
<g >
<title>start_secondary (21 samples, 12.43%)</title><rect x="1022.4" y="453" width="146.7" height="15.0" fill="rgb(220,110,45)" rx="2" ry="2" />
<text  x="1025.43" y="463.5" >start_secondary</text>
</g>
<g >
<title>record__mmap_read_evlist (1 samples, 0.59%)</title><rect x="456.9" y="405" width="6.9" height="15.0" fill="rgb(205,182,39)" rx="2" ry="2" />
<text  x="459.86" y="415.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.59%)</title><rect x="938.6" y="341" width="7.0" height="15.0" fill="rgb(213,108,28)" rx="2" ry="2" />
<text  x="941.64" y="351.5" ></text>
</g>
<g >
<title>swapper (25 samples, 14.79%)</title><rect x="1015.4" y="485" width="174.6" height="15.0" fill="rgb(219,129,41)" rx="2" ry="2" />
<text  x="1018.44" y="495.5" >swapper</text>
</g>
<g >
<title>dispatcher (14 samples, 8.28%)</title><rect x="498.8" y="357" width="97.7" height="15.0" fill="rgb(206,10,17)" rx="2" ry="2" />
<text  x="501.76" y="367.5" >dispatcher</text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.59%)</title><rect x="456.9" y="213" width="6.9" height="15.0" fill="rgb(251,184,36)" rx="2" ry="2" />
<text  x="459.86" y="223.5" ></text>
</g>
<g >
<title>cpuidle_enter (2 samples, 1.18%)</title><rect x="1169.1" y="325" width="13.9" height="15.0" fill="rgb(254,187,31)" rx="2" ry="2" />
<text  x="1172.05" y="335.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.59%)</title><rect x="1008.5" y="165" width="6.9" height="15.0" fill="rgb(229,93,45)" rx="2" ry="2" />
<text  x="1011.46" y="175.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (3 samples, 1.78%)</title><rect x="1169.1" y="437" width="20.9" height="15.0" fill="rgb(212,225,8)" rx="2" ry="2" />
<text  x="1172.05" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6 samples, 3.55%)</title><rect x="896.7" y="325" width="41.9" height="15.0" fill="rgb(223,206,13)" rx="2" ry="2" />
<text  x="899.75" y="335.5" >__a..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.59%)</title><rect x="456.9" y="309" width="6.9" height="15.0" fill="rgb(246,202,12)" rx="2" ry="2" />
<text  x="459.86" y="319.5" ></text>
</g>
<g >
<title>NaClDescUnref (1 samples, 0.59%)</title><rect x="813.0" y="405" width="6.9" height="15.0" fill="rgb(223,220,30)" rx="2" ry="2" />
<text  x="815.96" y="415.5" ></text>
</g>
<g >
<title>__perf_event_enable (1 samples, 0.59%)</title><rect x="463.8" y="277" width="7.0" height="15.0" fill="rgb(214,205,0)" rx="2" ry="2" />
<text  x="466.85" y="287.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.59%)</title><rect x="938.6" y="325" width="7.0" height="15.0" fill="rgb(243,181,3)" rx="2" ry="2" />
<text  x="941.64" y="335.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.59%)</title><rect x="463.8" y="325" width="7.0" height="15.0" fill="rgb(254,48,23)" rx="2" ry="2" />
<text  x="466.85" y="335.5" ></text>
</g>
<g >
<title>arch_do_signal (1 samples, 0.59%)</title><rect x="1008.5" y="389" width="6.9" height="15.0" fill="rgb(250,186,8)" rx="2" ry="2" />
<text  x="1011.46" y="399.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (9 samples, 5.33%)</title><rect x="750.1" y="309" width="62.9" height="15.0" fill="rgb(216,28,11)" rx="2" ry="2" />
<text  x="753.12" y="319.5" >ringbu..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.59%)</title><rect x="1008.5" y="437" width="6.9" height="15.0" fill="rgb(206,189,43)" rx="2" ry="2" />
<text  x="1011.46" y="447.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.59%)</title><rect x="1008.5" y="229" width="6.9" height="15.0" fill="rgb(219,173,5)" rx="2" ry="2" />
<text  x="1011.46" y="239.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (1 samples, 0.59%)</title><rect x="491.8" y="357" width="7.0" height="15.0" fill="rgb(246,122,34)" rx="2" ry="2" />
<text  x="494.78" y="367.5" ></text>
</g>
<g >
<title>perf_event_exit_task (1 samples, 0.59%)</title><rect x="1001.5" y="405" width="7.0" height="15.0" fill="rgb(232,108,54)" rx="2" ry="2" />
<text  x="1004.48" y="415.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (25 samples, 14.79%)</title><rect x="638.4" y="325" width="174.6" height="15.0" fill="rgb(250,53,25)" rx="2" ry="2" />
<text  x="641.40" y="335.5" >rustposix::interface::..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.59%)</title><rect x="910.7" y="261" width="7.0" height="15.0" fill="rgb(233,27,49)" rx="2" ry="2" />
<text  x="913.71" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (63 samples, 37.28%)</title><rect x="17.0" y="357" width="439.9" height="15.0" fill="rgb(248,158,9)" rx="2" ry="2" />
<text  x="19.98" y="367.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>mmput (1 samples, 0.59%)</title><rect x="1008.5" y="309" width="6.9" height="15.0" fill="rgb(224,134,46)" rx="2" ry="2" />
<text  x="1011.46" y="319.5" ></text>
</g>
<g >
<title>cpuidle_enter (20 samples, 11.83%)</title><rect x="1022.4" y="389" width="139.7" height="15.0" fill="rgb(230,209,50)" rx="2" ry="2" />
<text  x="1025.43" y="399.5" >cpuidle_enter</text>
</g>
<g >
<title>record__write (1 samples, 0.59%)</title><rect x="456.9" y="357" width="6.9" height="15.0" fill="rgb(215,93,19)" rx="2" ry="2" />
<text  x="459.86" y="367.5" ></text>
</g>
<g >
<title>NaClSysWrite (32 samples, 18.93%)</title><rect x="603.5" y="421" width="223.4" height="15.0" fill="rgb(229,205,42)" rx="2" ry="2" />
<text  x="606.49" y="431.5" >NaClSysWrite</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (2 samples, 1.18%)</title><rect x="959.6" y="453" width="14.0" height="15.0" fill="rgb(229,164,21)" rx="2" ry="2" />
<text  x="962.59" y="463.5" ></text>
</g>
<g >
<title>rmqueue (2 samples, 1.18%)</title><rect x="924.7" y="293" width="13.9" height="15.0" fill="rgb(253,29,48)" rx="2" ry="2" />
<text  x="927.67" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.59%)</title><rect x="10.0" y="453" width="7.0" height="15.0" fill="rgb(212,154,44)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.59%)</title><rect x="910.7" y="117" width="7.0" height="15.0" fill="rgb(246,91,26)" rx="2" ry="2" />
<text  x="913.71" y="127.5" ></text>
</g>
<g >
<title>perf_event_task_output (1 samples, 0.59%)</title><rect x="1001.5" y="357" width="7.0" height="15.0" fill="rgb(243,121,6)" rx="2" ry="2" />
<text  x="1004.48" y="367.5" ></text>
</g>
<g >
<title>NaClSysRead (14 samples, 8.28%)</title><rect x="498.8" y="421" width="97.7" height="15.0" fill="rgb(218,184,22)" rx="2" ry="2" />
<text  x="501.76" y="431.5" >NaClSysRead</text>
</g>
<g >
<title>do_user_addr_fault (8 samples, 4.73%)</title><rect x="889.8" y="421" width="55.8" height="15.0" fill="rgb(225,38,44)" rx="2" ry="2" />
<text  x="892.76" y="431.5" >do_us..</text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.59%)</title><rect x="1001.5" y="373" width="7.0" height="15.0" fill="rgb(221,212,42)" rx="2" ry="2" />
<text  x="1004.48" y="383.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 1.78%)</title><rect x="896.7" y="277" width="21.0" height="15.0" fill="rgb(205,71,33)" rx="2" ry="2" />
<text  x="899.75" y="287.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.59%)</title><rect x="10.0" y="277" width="7.0" height="15.0" fill="rgb(243,208,26)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>sync_regs (2 samples, 1.18%)</title><rect x="945.6" y="453" width="14.0" height="15.0" fill="rgb(242,6,18)" rx="2" ry="2" />
<text  x="948.62" y="463.5" ></text>
</g>
<g >
<title>prep_new_page (4 samples, 2.37%)</title><rect x="896.7" y="293" width="28.0" height="15.0" fill="rgb(236,142,46)" rx="2" ry="2" />
<text  x="899.75" y="303.5" >p..</text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 37.28%)</title><rect x="17.0" y="133" width="439.9" height="15.0" fill="rgb(225,152,27)" rx="2" ry="2" />
<text  x="19.98" y="143.5" >x86_pmu_enable</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 4.73%)</title><rect x="540.7" y="293" width="55.8" height="15.0" fill="rgb(210,30,3)" rx="2" ry="2" />
<text  x="543.65" y="303.5" >__mem..</text>
</g>
<g >
<title>do_group_exit (1 samples, 0.59%)</title><rect x="1008.5" y="357" width="6.9" height="15.0" fill="rgb(206,156,46)" rx="2" ry="2" />
<text  x="1011.46" y="367.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (30 samples, 17.75%)</title><rect x="603.5" y="389" width="209.5" height="15.0" fill="rgb(243,166,6)" rx="2" ry="2" />
<text  x="606.49" y="399.5" >NaClHostDescWrite</text>
</g>
<g >
<title>cpuidle_enter_state (2 samples, 1.18%)</title><rect x="1169.1" y="309" width="13.9" height="15.0" fill="rgb(220,46,27)" rx="2" ry="2" />
<text  x="1172.05" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.59%)</title><rect x="910.7" y="133" width="7.0" height="15.0" fill="rgb(214,36,4)" rx="2" ry="2" />
<text  x="913.71" y="143.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1 samples, 0.59%)</title><rect x="1162.1" y="357" width="7.0" height="15.0" fill="rgb(229,127,43)" rx="2" ry="2" />
<text  x="1165.07" y="367.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.59%)</title><rect x="1008.5" y="197" width="6.9" height="15.0" fill="rgb(240,129,19)" rx="2" ry="2" />
<text  x="1011.46" y="207.5" ></text>
</g>
<g >
<title>dispatcher (29 samples, 17.16%)</title><rect x="610.5" y="357" width="202.5" height="15.0" fill="rgb(234,103,27)" rx="2" ry="2" />
<text  x="613.47" y="367.5" >dispatcher</text>
</g>
<g >
<title>perf_evsel__run_ioctl (63 samples, 37.28%)</title><rect x="17.0" y="389" width="439.9" height="15.0" fill="rgb(251,180,51)" rx="2" ry="2" />
<text  x="19.98" y="399.5" >perf_evsel__run_ioctl</text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.59%)</title><rect x="10.0" y="293" width="7.0" height="15.0" fill="rgb(217,137,30)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.59%)</title><rect x="456.9" y="165" width="6.9" height="15.0" fill="rgb(243,138,0)" rx="2" ry="2" />
<text  x="459.86" y="175.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.59%)</title><rect x="1162.1" y="389" width="7.0" height="15.0" fill="rgb(224,118,20)" rx="2" ry="2" />
<text  x="1165.07" y="399.5" ></text>
</g>
<g >
<title>_perf_ioctl (63 samples, 37.28%)</title><rect x="17.0" y="293" width="439.9" height="15.0" fill="rgb(214,119,35)" rx="2" ry="2" />
<text  x="19.98" y="303.5" >_perf_ioctl</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (1 samples, 0.59%)</title><rect x="470.8" y="453" width="7.0" height="15.0" fill="rgb(239,40,7)" rx="2" ry="2" />
<text  x="473.83" y="463.5" ></text>
</g>
<g >
<title>native_write_msr (63 samples, 37.28%)</title><rect x="17.0" y="101" width="439.9" height="15.0" fill="rgb(215,131,26)" rx="2" ry="2" />
<text  x="19.98" y="111.5" >native_write_msr</text>
</g>
<g >
<title>[anon] (1 samples, 0.59%)</title><rect x="470.8" y="469" width="7.0" height="15.0" fill="rgb(246,48,20)" rx="2" ry="2" />
<text  x="473.83" y="479.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (1 samples, 0.59%)</title><rect x="491.8" y="373" width="7.0" height="15.0" fill="rgb(245,124,24)" rx="2" ry="2" />
<text  x="494.78" y="383.5" ></text>
</g>
<g >
<title>cpu_startup_entry (21 samples, 12.43%)</title><rect x="1022.4" y="437" width="146.7" height="15.0" fill="rgb(237,29,50)" rx="2" ry="2" />
<text  x="1025.43" y="447.5" >cpu_startup_entry</text>
</g>
<g >
<title>do_iter_write (1 samples, 0.59%)</title><rect x="456.9" y="181" width="6.9" height="15.0" fill="rgb(206,169,31)" rx="2" ry="2" />
<text  x="459.86" y="191.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.59%)</title><rect x="938.6" y="309" width="7.0" height="15.0" fill="rgb(241,44,14)" rx="2" ry="2" />
<text  x="941.64" y="319.5" ></text>
</g>
<g >
<title>perf (65 samples, 38.46%)</title><rect x="17.0" y="485" width="453.8" height="15.0" fill="rgb(253,51,13)" rx="2" ry="2" />
<text  x="19.98" y="495.5" >perf</text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1 samples, 0.59%)</title><rect x="484.8" y="437" width="7.0" height="15.0" fill="rgb(210,74,10)" rx="2" ry="2" />
<text  x="487.79" y="447.5" ></text>
</g>
<g >
<title>__evlist__enable (63 samples, 37.28%)</title><rect x="17.0" y="421" width="439.9" height="15.0" fill="rgb(233,73,43)" rx="2" ry="2" />
<text  x="19.98" y="431.5" >__evlist__enable</text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.59%)</title><rect x="1183.0" y="261" width="7.0" height="15.0" fill="rgb(252,6,39)" rx="2" ry="2" />
<text  x="1186.02" y="271.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.59%)</title><rect x="456.9" y="325" width="6.9" height="15.0" fill="rgb(222,154,25)" rx="2" ry="2" />
<text  x="459.86" y="335.5" ></text>
</g>
<g >
<title>smp_call_function_single (63 samples, 37.28%)</title><rect x="17.0" y="229" width="439.9" height="15.0" fill="rgb(210,148,20)" rx="2" ry="2" />
<text  x="19.98" y="239.5" >smp_call_function_single</text>
</g>
<g >
<title>start_kernel (3 samples, 1.78%)</title><rect x="1169.1" y="421" width="20.9" height="15.0" fill="rgb(239,124,46)" rx="2" ry="2" />
<text  x="1172.05" y="431.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.59%)</title><rect x="1001.5" y="421" width="7.0" height="15.0" fill="rgb(242,159,7)" rx="2" ry="2" />
<text  x="1004.48" y="431.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.59%)</title><rect x="456.9" y="229" width="6.9" height="15.0" fill="rgb(225,212,12)" rx="2" ry="2" />
<text  x="459.86" y="239.5" ></text>
</g>
<g >
<title>_perf_ioctl (1 samples, 0.59%)</title><rect x="463.8" y="405" width="7.0" height="15.0" fill="rgb(222,104,48)" rx="2" ry="2" />
<text  x="466.85" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.59%)</title><rect x="456.9" y="277" width="6.9" height="15.0" fill="rgb(212,95,6)" rx="2" ry="2" />
<text  x="459.86" y="287.5" ></text>
</g>
<g >
<title>NaClSandboxCodeAddr (1 samples, 0.59%)</title><rect x="477.8" y="421" width="7.0" height="15.0" fill="rgb(205,116,54)" rx="2" ry="2" />
<text  x="480.81" y="431.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.59%)</title><rect x="463.8" y="213" width="7.0" height="15.0" fill="rgb(210,75,52)" rx="2" ry="2" />
<text  x="466.85" y="223.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.59%)</title><rect x="456.9" y="85" width="6.9" height="15.0" fill="rgb(251,49,11)" rx="2" ry="2" />
<text  x="459.86" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 1.18%)</title><rect x="1001.5" y="453" width="13.9" height="15.0" fill="rgb(246,204,29)" rx="2" ry="2" />
<text  x="1004.48" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.59%)</title><rect x="463.8" y="453" width="7.0" height="15.0" fill="rgb(251,63,47)" rx="2" ry="2" />
<text  x="466.85" y="463.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.59%)</title><rect x="463.8" y="229" width="7.0" height="15.0" fill="rgb(246,225,32)" rx="2" ry="2" />
<text  x="466.85" y="239.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (3 samples, 1.78%)</title><rect x="1169.1" y="453" width="20.9" height="15.0" fill="rgb(249,223,7)" rx="2" ry="2" />
<text  x="1172.05" y="463.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (20 samples, 11.83%)</title><rect x="1022.4" y="357" width="139.7" height="15.0" fill="rgb(239,20,26)" rx="2" ry="2" />
<text  x="1025.43" y="367.5" >mwait_idle_with_h..</text>
</g>
<g >
<title>lind_read (14 samples, 8.28%)</title><rect x="498.8" y="373" width="97.7" height="15.0" fill="rgb(236,194,18)" rx="2" ry="2" />
<text  x="501.76" y="383.5" >lind_read</text>
</g>
<g >
<title>handle_pte_fault (8 samples, 4.73%)</title><rect x="889.8" y="373" width="55.8" height="15.0" fill="rgb(239,89,50)" rx="2" ry="2" />
<text  x="892.76" y="383.5" >handl..</text>
</g>
<g >
<title>do_syscall_64 (63 samples, 37.28%)</title><rect x="17.0" y="341" width="439.9" height="15.0" fill="rgb(229,26,31)" rx="2" ry="2" />
<text  x="19.98" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>arch_call_rest_init (3 samples, 1.78%)</title><rect x="1169.1" y="405" width="20.9" height="15.0" fill="rgb(216,70,31)" rx="2" ry="2" />
<text  x="1172.05" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (1 samples, 0.59%)</title><rect x="463.8" y="437" width="7.0" height="15.0" fill="rgb(224,146,20)" rx="2" ry="2" />
<text  x="466.85" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.59%)</title><rect x="456.9" y="293" width="6.9" height="15.0" fill="rgb(250,127,47)" rx="2" ry="2" />
<text  x="459.86" y="303.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (63 samples, 37.28%)</title><rect x="17.0" y="117" width="439.9" height="15.0" fill="rgb(223,103,30)" rx="2" ry="2" />
<text  x="19.98" y="127.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>do_idle (3 samples, 1.78%)</title><rect x="1169.1" y="357" width="20.9" height="15.0" fill="rgb(217,208,43)" rx="2" ry="2" />
<text  x="1172.05" y="367.5" ></text>
</g>
<g >
<title>NaClValidateCode (1 samples, 0.59%)</title><rect x="491.8" y="389" width="7.0" height="15.0" fill="rgb(253,46,20)" rx="2" ry="2" />
<text  x="494.78" y="399.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (1 samples, 0.59%)</title><rect x="1001.5" y="325" width="7.0" height="15.0" fill="rgb(210,108,21)" rx="2" ry="2" />
<text  x="1004.48" y="335.5" ></text>
</g>
<g >
<title>record__pushfn (1 samples, 0.59%)</title><rect x="456.9" y="373" width="6.9" height="15.0" fill="rgb(210,185,50)" rx="2" ry="2" />
<text  x="459.86" y="383.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.59%)</title><rect x="10.0" y="405" width="7.0" height="15.0" fill="rgb(212,182,21)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>perf_ioctl (1 samples, 0.59%)</title><rect x="463.8" y="421" width="7.0" height="15.0" fill="rgb(226,9,1)" rx="2" ry="2" />
<text  x="466.85" y="431.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.59%)</title><rect x="10.0" y="341" width="7.0" height="15.0" fill="rgb(247,89,28)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.59%)</title><rect x="1008.5" y="277" width="6.9" height="15.0" fill="rgb(234,183,43)" rx="2" ry="2" />
<text  x="1011.46" y="287.5" ></text>
</g>
<g >
<title>NaClVmIoWillStart (1 samples, 0.59%)</title><rect x="819.9" y="405" width="7.0" height="15.0" fill="rgb(253,140,3)" rx="2" ry="2" />
<text  x="822.94" y="415.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (9 samples, 5.33%)</title><rect x="533.7" y="309" width="62.8" height="15.0" fill="rgb(218,127,9)" rx="2" ry="2" />
<text  x="536.67" y="319.5" >ringbu..</text>
</g>
<g >
<title>vfs_write (1 samples, 0.59%)</title><rect x="456.9" y="245" width="6.9" height="15.0" fill="rgb(213,133,12)" rx="2" ry="2" />
<text  x="459.86" y="255.5" ></text>
</g>
<g >
<title>cmd_record (64 samples, 37.87%)</title><rect x="17.0" y="453" width="446.8" height="15.0" fill="rgb(233,184,39)" rx="2" ry="2" />
<text  x="19.98" y="463.5" >cmd_record</text>
</g>
<g >
<title>all (169 samples, 100%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(213,50,46)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.59%)</title><rect x="463.8" y="469" width="7.0" height="15.0" fill="rgb(239,123,48)" rx="2" ry="2" />
<text  x="466.85" y="479.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.59%)</title><rect x="1008.5" y="213" width="6.9" height="15.0" fill="rgb(233,38,11)" rx="2" ry="2" />
<text  x="1011.46" y="223.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.59%)</title><rect x="456.9" y="101" width="6.9" height="15.0" fill="rgb(215,157,22)" rx="2" ry="2" />
<text  x="459.86" y="111.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.59%)</title><rect x="1008.5" y="421" width="6.9" height="15.0" fill="rgb(244,187,50)" rx="2" ry="2" />
<text  x="1011.46" y="431.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.59%)</title><rect x="463.8" y="245" width="7.0" height="15.0" fill="rgb(213,73,1)" rx="2" ry="2" />
<text  x="466.85" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.59%)</title><rect x="743.1" y="309" width="7.0" height="15.0" fill="rgb(254,7,19)" rx="2" ry="2" />
<text  x="746.14" y="319.5" ></text>
</g>
<g >
<title>__cmd_record (64 samples, 37.87%)</title><rect x="17.0" y="437" width="446.8" height="15.0" fill="rgb(249,204,46)" rx="2" ry="2" />
<text  x="19.98" y="447.5" >__cmd_record</text>
</g>
<g >
<title>NaClSysReadDecoder (14 samples, 8.28%)</title><rect x="498.8" y="437" width="97.7" height="15.0" fill="rgb(208,94,34)" rx="2" ry="2" />
<text  x="501.76" y="447.5" >NaClSysRead..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (24 samples, 14.20%)</title><rect x="1022.4" y="469" width="167.6" height="15.0" fill="rgb(235,71,21)" rx="2" ry="2" />
<text  x="1025.43" y="479.5" >secondary_startup_64_..</text>
</g>
<g >
<title>[unknown] (2 samples, 1.18%)</title><rect x="959.6" y="469" width="14.0" height="15.0" fill="rgb(226,193,10)" rx="2" ry="2" />
<text  x="962.59" y="479.5" ></text>
</g>
<g >
<title>__perf_event_header__init_id (1 samples, 0.59%)</title><rect x="1001.5" y="341" width="7.0" height="15.0" fill="rgb(250,195,34)" rx="2" ry="2" />
<text  x="1004.48" y="351.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (1 samples, 0.59%)</title><rect x="813.0" y="373" width="6.9" height="15.0" fill="rgb(250,26,47)" rx="2" ry="2" />
<text  x="815.96" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (2 samples, 1.18%)</title><rect x="624.4" y="325" width="14.0" height="15.0" fill="rgb(214,60,0)" rx="2" ry="2" />
<text  x="627.44" y="335.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (1 samples, 0.59%)</title><rect x="491.8" y="405" width="7.0" height="15.0" fill="rgb(253,188,10)" rx="2" ry="2" />
<text  x="494.78" y="415.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (50 samples, 29.59%)</title><rect x="477.8" y="453" width="349.1" height="15.0" fill="rgb(219,180,14)" rx="2" ry="2" />
<text  x="480.81" y="463.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.59%)</title><rect x="938.6" y="293" width="7.0" height="15.0" fill="rgb(234,134,42)" rx="2" ry="2" />
<text  x="941.64" y="303.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (33 samples, 19.53%)</title><rect x="596.5" y="437" width="230.4" height="15.0" fill="rgb(229,9,0)" rx="2" ry="2" />
<text  x="599.51" y="447.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.59%)</title><rect x="813.0" y="357" width="6.9" height="15.0" fill="rgb(215,77,37)" rx="2" ry="2" />
<text  x="815.96" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.59%)</title><rect x="910.7" y="149" width="7.0" height="15.0" fill="rgb(221,122,1)" rx="2" ry="2" />
<text  x="913.71" y="159.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.59%)</title><rect x="1008.5" y="261" width="6.9" height="15.0" fill="rgb(252,6,23)" rx="2" ry="2" />
<text  x="1011.46" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 2.37%)</title><rect x="785.0" y="293" width="28.0" height="15.0" fill="rgb(222,83,4)" rx="2" ry="2" />
<text  x="788.03" y="303.5" >_..</text>
</g>
<g >
<title>rest_init (3 samples, 1.78%)</title><rect x="1169.1" y="389" width="20.9" height="15.0" fill="rgb(240,162,14)" rx="2" ry="2" />
<text  x="1172.05" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (20 samples, 11.83%)</title><rect x="1022.4" y="373" width="139.7" height="15.0" fill="rgb(243,23,32)" rx="2" ry="2" />
<text  x="1025.43" y="383.5" >cpuidle_enter_state</text>
</g>
<g >
<title>NaClSysDyncodeCreate (1 samples, 0.59%)</title><rect x="491.8" y="421" width="7.0" height="15.0" fill="rgb(208,110,11)" rx="2" ry="2" />
<text  x="494.78" y="431.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.59%)</title><rect x="456.9" y="53" width="6.9" height="15.0" fill="rgb(237,144,43)" rx="2" ry="2" />
<text  x="459.86" y="63.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (2 samples, 1.18%)</title><rect x="924.7" y="277" width="13.9" height="15.0" fill="rgb(220,93,5)" rx="2" ry="2" />
<text  x="927.67" y="287.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.59%)</title><rect x="456.9" y="197" width="6.9" height="15.0" fill="rgb(246,6,42)" rx="2" ry="2" />
<text  x="459.86" y="207.5" ></text>
</g>
<g >
<title>do_idle (21 samples, 12.43%)</title><rect x="1022.4" y="421" width="146.7" height="15.0" fill="rgb(225,112,41)" rx="2" ry="2" />
<text  x="1025.43" y="431.5" >do_idle</text>
</g>
<g >
<title>perf_event_task (1 samples, 0.59%)</title><rect x="1001.5" y="389" width="7.0" height="15.0" fill="rgb(249,2,5)" rx="2" ry="2" />
<text  x="1004.48" y="399.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.59%)</title><rect x="1008.5" y="245" width="6.9" height="15.0" fill="rgb(249,190,20)" rx="2" ry="2" />
<text  x="1011.46" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (4 samples, 2.37%)</title><rect x="973.6" y="469" width="27.9" height="15.0" fill="rgb(233,182,26)" rx="2" ry="2" />
<text  x="976.55" y="479.5" >a..</text>
</g>
<g >
<title>perf_ioctl (63 samples, 37.28%)</title><rect x="17.0" y="309" width="439.9" height="15.0" fill="rgb(251,137,40)" rx="2" ry="2" />
<text  x="19.98" y="319.5" >perf_ioctl</text>
</g>
<g >
<title>do_exit (1 samples, 0.59%)</title><rect x="1008.5" y="341" width="6.9" height="15.0" fill="rgb(234,142,20)" rx="2" ry="2" />
<text  x="1011.46" y="351.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (14 samples, 8.28%)</title><rect x="498.8" y="341" width="97.7" height="15.0" fill="rgb(243,75,40)" rx="2" ry="2" />
<text  x="501.76" y="351.5" >rustposix::..</text>
</g>
<g >
<title>cpu_startup_entry (3 samples, 1.78%)</title><rect x="1169.1" y="373" width="20.9" height="15.0" fill="rgb(254,187,4)" rx="2" ry="2" />
<text  x="1172.05" y="383.5" ></text>
</g>
<g >
<title>exc_page_fault (8 samples, 4.73%)</title><rect x="889.8" y="437" width="55.8" height="15.0" fill="rgb(253,13,54)" rx="2" ry="2" />
<text  x="892.76" y="447.5" >exc_p..</text>
</g>
<g >
<title>cpuidle_idle_call (2 samples, 1.18%)</title><rect x="1169.1" y="341" width="13.9" height="15.0" fill="rgb(254,4,31)" rx="2" ry="2" />
<text  x="1172.05" y="351.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.59%)</title><rect x="456.9" y="261" width="6.9" height="15.0" fill="rgb(238,172,35)" rx="2" ry="2" />
<text  x="459.86" y="271.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (2 samples, 1.18%)</title><rect x="1169.1" y="293" width="13.9" height="15.0" fill="rgb(216,143,52)" rx="2" ry="2" />
<text  x="1172.05" y="303.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (1 samples, 0.59%)</title><rect x="1183.0" y="293" width="7.0" height="15.0" fill="rgb(238,198,30)" rx="2" ry="2" />
<text  x="1186.02" y="303.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.59%)</title><rect x="10.0" y="309" width="7.0" height="15.0" fill="rgb(247,143,19)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>record__mmap_read_all (1 samples, 0.59%)</title><rect x="456.9" y="421" width="6.9" height="15.0" fill="rgb(251,131,52)" rx="2" ry="2" />
<text  x="459.86" y="431.5" ></text>
</g>
<g >
<title>_perf_event_enable (63 samples, 37.28%)</title><rect x="17.0" y="261" width="439.9" height="15.0" fill="rgb(242,12,12)" rx="2" ry="2" />
<text  x="19.98" y="271.5" >_perf_event_enable</text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.59%)</title><rect x="910.7" y="165" width="7.0" height="15.0" fill="rgb(254,122,4)" rx="2" ry="2" />
<text  x="913.71" y="175.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (2 samples, 1.18%)</title><rect x="924.7" y="261" width="13.9" height="15.0" fill="rgb(253,208,53)" rx="2" ry="2" />
<text  x="927.67" y="271.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (1 samples, 0.59%)</title><rect x="1162.1" y="341" width="7.0" height="15.0" fill="rgb(254,29,5)" rx="2" ry="2" />
<text  x="1165.07" y="351.5" ></text>
</g>
<g >
<title>generic_exec_single (63 samples, 37.28%)</title><rect x="17.0" y="213" width="439.9" height="15.0" fill="rgb(236,86,42)" rx="2" ry="2" />
<text  x="19.98" y="223.5" >generic_exec_single</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.59%)</title><rect x="10.0" y="469" width="7.0" height="15.0" fill="rgb(218,181,25)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>CompareAndSwap (1 samples, 0.59%)</title><rect x="484.8" y="421" width="7.0" height="15.0" fill="rgb(242,187,23)" rx="2" ry="2" />
<text  x="487.79" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_exit (1 samples, 0.59%)</title><rect x="1001.5" y="437" width="7.0" height="15.0" fill="rgb(237,63,34)" rx="2" ry="2" />
<text  x="1004.48" y="447.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (1 samples, 0.59%)</title><rect x="491.8" y="437" width="7.0" height="15.0" fill="rgb(254,108,1)" rx="2" ry="2" />
<text  x="494.78" y="447.5" ></text>
</g>
<g >
<title>event_function_call (1 samples, 0.59%)</title><rect x="463.8" y="357" width="7.0" height="15.0" fill="rgb(246,151,43)" rx="2" ry="2" />
<text  x="466.85" y="367.5" ></text>
</g>
<g >
<title>sel_ldr (78 samples, 46.15%)</title><rect x="470.8" y="485" width="544.6" height="15.0" fill="rgb(247,50,1)" rx="2" ry="2" />
<text  x="473.83" y="495.5" >sel_ldr</text>
</g>
<g >
<title>cpuidle_idle_call (21 samples, 12.43%)</title><rect x="1022.4" y="405" width="146.7" height="15.0" fill="rgb(245,92,52)" rx="2" ry="2" />
<text  x="1025.43" y="415.5" >cpuidle_idle_call</text>
</g>
<g >
<title>ion (1 samples, 0.59%)</title><rect x="456.9" y="341" width="6.9" height="15.0" fill="rgb(245,85,38)" rx="2" ry="2" />
<text  x="459.86" y="351.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.59%)</title><rect x="10.0" y="325" width="7.0" height="15.0" fill="rgb(228,83,45)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>event_function_call (63 samples, 37.28%)</title><rect x="17.0" y="245" width="439.9" height="15.0" fill="rgb(219,219,18)" rx="2" ry="2" />
<text  x="19.98" y="255.5" >event_function_call</text>
</g>
<g >
<title>HandleStackContext (1 samples, 0.59%)</title><rect x="477.8" y="437" width="7.0" height="15.0" fill="rgb(231,201,11)" rx="2" ry="2" />
<text  x="480.81" y="447.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.59%)</title><rect x="456.9" y="69" width="6.9" height="15.0" fill="rgb(253,159,36)" rx="2" ry="2" />
<text  x="459.86" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.59%)</title><rect x="10.0" y="437" width="7.0" height="15.0" fill="rgb(226,146,43)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>NaClRefCountUnref (1 samples, 0.59%)</title><rect x="813.0" y="389" width="6.9" height="15.0" fill="rgb(220,187,9)" rx="2" ry="2" />
<text  x="815.96" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.59%)</title><rect x="910.7" y="181" width="7.0" height="15.0" fill="rgb(230,19,11)" rx="2" ry="2" />
<text  x="913.71" y="191.5" ></text>
</g>
<g >
<title>tick_nohz_restart (1 samples, 0.59%)</title><rect x="1183.0" y="325" width="7.0" height="15.0" fill="rgb(244,207,34)" rx="2" ry="2" />
<text  x="1186.02" y="335.5" ></text>
</g>
<g >
<title>[unknown]  (19 samples, 11.24%)</title><rect x="826.9" y="469" width="132.7" height="15.0" fill="rgb(210,33,39)" rx="2" ry="2" />
<text  x="829.92" y="479.5" >[unknown] </text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.59%)</title><rect x="910.7" y="229" width="7.0" height="15.0" fill="rgb(228,92,31)" rx="2" ry="2" />
<text  x="913.71" y="239.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.59%)</title><rect x="456.9" y="149" width="6.9" height="15.0" fill="rgb(236,177,41)" rx="2" ry="2" />
<text  x="459.86" y="159.5" ></text>
</g>
<g >
<title>_perf_event_enable (1 samples, 0.59%)</title><rect x="463.8" y="373" width="7.0" height="15.0" fill="rgb(218,189,0)" rx="2" ry="2" />
<text  x="466.85" y="383.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (29 samples, 17.16%)</title><rect x="610.5" y="341" width="202.5" height="15.0" fill="rgb(233,95,34)" rx="2" ry="2" />
<text  x="613.47" y="351.5" >rustposix::safeposix::sysc..</text>
</g>
<g >
<title>[sel_ldr] (50 samples, 29.59%)</title><rect x="477.8" y="469" width="349.1" height="15.0" fill="rgb(248,113,38)" rx="2" ry="2" />
<text  x="480.81" y="479.5" >[sel_ldr]</text>
</g>
<g >
<title>do_anonymous_page (7 samples, 4.14%)</title><rect x="896.7" y="357" width="48.9" height="15.0" fill="rgb(241,66,48)" rx="2" ry="2" />
<text  x="899.75" y="367.5" >do_a..</text>
</g>
<g >
<title>perf_evsel__enable_cpu (63 samples, 37.28%)</title><rect x="17.0" y="405" width="439.9" height="15.0" fill="rgb(238,141,4)" rx="2" ry="2" />
<text  x="19.98" y="415.5" >perf_evsel__enable_cpu</text>
</g>
<g >
<title>get_page_from_freelist (6 samples, 3.55%)</title><rect x="896.7" y="309" width="41.9" height="15.0" fill="rgb(215,170,13)" rx="2" ry="2" />
<text  x="899.75" y="319.5" >get..</text>
</g>
<g >
<title>do_group_exit (1 samples, 0.59%)</title><rect x="10.0" y="421" width="7.0" height="15.0" fill="rgb(246,212,52)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (14 samples, 8.28%)</title><rect x="498.8" y="325" width="97.7" height="15.0" fill="rgb(231,80,11)" rx="2" ry="2" />
<text  x="501.76" y="335.5" >rustposix::..</text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.59%)</title><rect x="456.9" y="37" width="6.9" height="15.0" fill="rgb(229,10,29)" rx="2" ry="2" />
<text  x="459.86" y="47.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.59%)</title><rect x="910.7" y="197" width="7.0" height="15.0" fill="rgb(207,86,53)" rx="2" ry="2" />
<text  x="913.71" y="207.5" ></text>
</g>
<g >
<title>ctx_resched (63 samples, 37.28%)</title><rect x="17.0" y="149" width="439.9" height="15.0" fill="rgb(217,164,11)" rx="2" ry="2" />
<text  x="19.98" y="159.5" >ctx_resched</text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.59%)</title><rect x="463.8" y="341" width="7.0" height="15.0" fill="rgb(214,89,13)" rx="2" ry="2" />
<text  x="466.85" y="351.5" ></text>
</g>
<g >
<title>alloc_pages_vma (6 samples, 3.55%)</title><rect x="896.7" y="341" width="41.9" height="15.0" fill="rgb(214,146,37)" rx="2" ry="2" />
<text  x="899.75" y="351.5" >all..</text>
</g>
<g >
<title>exit_mmap (1 samples, 0.59%)</title><rect x="10.0" y="357" width="7.0" height="15.0" fill="rgb(212,63,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>NaClHostDescRead (14 samples, 8.28%)</title><rect x="498.8" y="389" width="97.7" height="15.0" fill="rgb(209,125,15)" rx="2" ry="2" />
<text  x="501.76" y="399.5" >NaClHostDes..</text>
</g>
<g >
<title>__ioctl (63 samples, 37.28%)</title><rect x="17.0" y="373" width="439.9" height="15.0" fill="rgb(221,78,2)" rx="2" ry="2" />
<text  x="19.98" y="383.5" >__ioctl</text>
</g>
<g >
<title>perf_mmap__push (1 samples, 0.59%)</title><rect x="456.9" y="389" width="6.9" height="15.0" fill="rgb(216,65,16)" rx="2" ry="2" />
<text  x="459.86" y="399.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.59%)</title><rect x="1008.5" y="325" width="6.9" height="15.0" fill="rgb(221,133,20)" rx="2" ry="2" />
<text  x="1011.46" y="335.5" ></text>
</g>
<g >
<title>NaClXMutexLock (1 samples, 0.59%)</title><rect x="819.9" y="389" width="7.0" height="15.0" fill="rgb(221,202,49)" rx="2" ry="2" />
<text  x="822.94" y="399.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.59%)</title><rect x="1162.1" y="373" width="7.0" height="15.0" fill="rgb(215,129,45)" rx="2" ry="2" />
<text  x="1165.07" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (8 samples, 4.73%)</title><rect x="889.8" y="405" width="55.8" height="15.0" fill="rgb(212,90,38)" rx="2" ry="2" />
<text  x="892.76" y="415.5" >handl..</text>
</g>
<g >
<title>perf_event_for_each_child (1 samples, 0.59%)</title><rect x="463.8" y="389" width="7.0" height="15.0" fill="rgb(210,213,26)" rx="2" ry="2" />
<text  x="466.85" y="399.5" ></text>
</g>
<g >
<title>kernel_init_free_pages (1 samples, 0.59%)</title><rect x="917.7" y="277" width="7.0" height="15.0" fill="rgb(245,10,19)" rx="2" ry="2" />
<text  x="920.69" y="287.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.59%)</title><rect x="1183.0" y="245" width="7.0" height="15.0" fill="rgb(213,149,39)" rx="2" ry="2" />
<text  x="1186.02" y="255.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.59%)</title><rect x="1008.5" y="405" width="6.9" height="15.0" fill="rgb(217,159,12)" rx="2" ry="2" />
<text  x="1011.46" y="415.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (30 samples, 17.75%)</title><rect x="603.5" y="405" width="209.5" height="15.0" fill="rgb(244,211,44)" rx="2" ry="2" />
<text  x="606.49" y="415.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.59%)</title><rect x="456.9" y="133" width="6.9" height="15.0" fill="rgb(236,6,30)" rx="2" ry="2" />
<text  x="459.86" y="143.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (63 samples, 37.28%)</title><rect x="17.0" y="277" width="439.9" height="15.0" fill="rgb(247,71,14)" rx="2" ry="2" />
<text  x="19.98" y="287.5" >perf_event_for_each_child</text>
</g>
<g >
<title>__handle_mm_fault (8 samples, 4.73%)</title><rect x="889.8" y="389" width="55.8" height="15.0" fill="rgb(207,96,44)" rx="2" ry="2" />
<text  x="892.76" y="399.5" >__han..</text>
</g>
</g>
</svg>
