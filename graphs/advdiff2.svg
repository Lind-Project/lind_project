<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="806.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="789" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="789" > </text>
<g id="frames">
<g >
<title>core::intrinsics::copy_nonoverlapping (14 samples, 0.02%; -0.01%)</title><rect x="1048.4" y="389" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1051.37" y="399.5" ></text>
</g>
<g >
<title>NaClSysWrite (10 samples, 0.02%; +0.00%)</title><rect x="770.6" y="693" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="773.59" y="703.5" ></text>
</g>
<g >
<title>rcu_idle_enter (12 samples, 0.02%; +0.00%)</title><rect x="188.5" y="613" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="191.49" y="623.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (427 samples, 0.65%; +0.16%)</title><rect x="895.2" y="485" width="7.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="898.22" y="495.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (29 samples, 0.04%; +0.00%)</title><rect x="264.2" y="277" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="267.22" y="287.5" ></text>
</g>
<g >
<title>menu_update (11 samples, 0.02%; +0.02%)</title><rect x="246.6" y="549" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="249.64" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (44 samples, 0.07%; 0.00%)</title><rect x="1089.0" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1092.00" y="511.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (80 samples, 0.12%; -0.03%)</title><rect x="801.3" y="629" width="1.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="804.27" y="639.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (18 samples, 0.03%; 0.00%)</title><rect x="918.2" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="921.22" y="527.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (43 samples, 0.07%; -0.00%)</title><rect x="1189.1" y="629" width="0.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1192.08" y="639.5" ></text>
</g>
<g >
<title>ip6_sublist_rcv (6 samples, 0.01%; 0.00%)</title><rect x="151.0" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.01" y="399.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (7 samples, 0.01%; -0.01%)</title><rect x="785.9" y="677" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="788.94" y="687.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.08%; -0.01%)</title><rect x="1049.0" y="469" width="0.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1051.99" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.06%; 0.00%)</title><rect x="1187.3" y="725" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.28" y="735.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (23 samples, 0.04%; +0.01%)</title><rect x="305.3" y="645" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="308.34" y="655.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (9 samples, 0.01%; +0.01%)</title><rect x="247.7" y="581" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="250.74" y="591.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (179 samples, 0.27%; 0.00%)</title><rect x="1045.4" y="453" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1048.40" y="463.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.02%; 0.00%)</title><rect x="985.0" y="517" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="988.03" y="527.5" ></text>
</g>
<g >
<title>shadow_lru_isolate (11 samples, 0.02%; 0.00%)</title><rect x="1188.8" y="533" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.81" y="543.5" ></text>
</g>
<g >
<title>alx_clean_tx_irq (17 samples, 0.03%; +0.03%)</title><rect x="149.7" y="469" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="152.68" y="479.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (386 samples, 0.59%; +0.10%)</title><rect x="203.5" y="597" width="6.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="206.49" y="607.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (16 samples, 0.02%; +0.02%)</title><rect x="189.0" y="597" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="191.98" y="607.5" ></text>
</g>
<g >
<title>shrink_slab (48 samples, 0.07%; 0.00%)</title><rect x="143.3" y="629" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.25" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (44 samples, 0.07%; 0.00%)</title><rect x="1089.0" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1092.00" y="527.5" ></text>
</g>
<g >
<title>enqueue_task (8 samples, 0.01%; 0.00%)</title><rect x="151.3" y="437" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.32" y="447.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (21 samples, 0.03%; +0.01%)</title><rect x="258.8" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="261.78" y="271.5" ></text>
</g>
<g >
<title>std::panicking::panicking (13 samples, 0.02%; 0.00%)</title><rect x="903.3" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="906.31" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (318 samples, 0.49%; 0.00%)</title><rect x="1038.1" y="501" width="5.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1041.13" y="511.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (15 samples, 0.02%; 0.00%)</title><rect x="255.3" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="258.33" y="351.5" ></text>
</g>
<g >
<title>shrink_node (9 samples, 0.01%; 0.00%)</title><rect x="1155.5" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.46" y="511.5" ></text>
</g>
<g >
<title>net_rx_action (126 samples, 0.19%; 0.00%)</title><rect x="148.9" y="517" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.91" y="527.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (14 samples, 0.02%; 0.00%)</title><rect x="1156.4" y="565" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1159.38" y="575.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.02%; -0.01%)</title><rect x="1039.1" y="437" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1042.13" y="447.5" ></text>
</g>
<g >
<title>__list_lru_walk_one (6 samples, 0.01%; 0.00%)</title><rect x="141.2" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.18" y="399.5" ></text>
</g>
<g >
<title>do_group_exit (41 samples, 0.06%; 0.00%)</title><rect x="1187.3" y="677" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.28" y="687.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (85 samples, 0.13%; +0.00%)</title><rect x="257.7" y="309" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="260.68" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%; +0.00%)</title><rect x="265.8" y="597" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="268.77" y="607.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (31 samples, 0.05%; -0.24%)</title><rect x="1189.1" y="613" width="0.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1192.14" y="623.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (55 samples, 0.08%; -0.01%)</title><rect x="1050.2" y="453" width="1.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1053.21" y="463.5" ></text>
</g>
<g >
<title>[unknown]  (1,835 samples, 2.80%; -0.03%)</title><rect x="1124.3" y="725" width="33.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1127.27" y="735.5" >[u..</text>
</g>
<g >
<title>hrtimer_get_next_event (9 samples, 0.01%; +0.00%)</title><rect x="247.3" y="501" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="250.28" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (19 samples, 0.03%; +0.00%)</title><rect x="1050.3" y="437" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1053.30" y="447.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (11 samples, 0.02%; 0.00%)</title><rect x="144.2" y="693" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.21" y="703.5" ></text>
</g>
<g >
<title>start_this_handle (9 samples, 0.01%; +0.01%)</title><rect x="255.4" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="258.43" y="319.5" ></text>
</g>
<g >
<title>shrink_slab_memcg (10 samples, 0.02%; 0.00%)</title><rect x="259.4" y="165" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.43" y="175.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (17 samples, 0.03%; +0.00%)</title><rect x="1051.6" y="501" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1054.58" y="511.5" ></text>
</g>
<g >
<title>shadow_lru_isolate (6 samples, 0.01%; +0.00%)</title><rect x="141.2" y="373" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="144.18" y="383.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1,200 samples, 1.83%; 0.00%)</title><rect x="857.4" y="533" width="21.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.42" y="543.5" >c..</text>
</g>
<g >
<title>__libc_write (639 samples, 0.98%; 0.00%)</title><rect x="254.3" y="581" width="11.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.26" y="591.5" ></text>
</g>
<g >
<title>xas_find_conflict (6 samples, 0.01%; +0.01%)</title><rect x="258.4" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="261.42" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (10 samples, 0.02%; 0.00%)</title><rect x="288.4" y="693" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="291.35" y="703.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (11 samples, 0.02%; 0.00%)</title><rect x="1186.0" y="661" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1189.02" y="671.5" ></text>
</g>
<g >
<title>start_secondary (51 samples, 0.08%; 0.00%)</title><rect x="1189.1" y="709" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.06" y="719.5" ></text>
</g>
<g >
<title>NaClValidateCode (31 samples, 0.05%; 0.00%)</title><rect x="364.1" y="645" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.10" y="655.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (126 samples, 0.19%; 0.00%)</title><rect x="148.9" y="565" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.91" y="575.5" ></text>
</g>
<g >
<title>alloc_buffer_head (42 samples, 0.06%; +0.00%)</title><rect x="255.9" y="293" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="258.92" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (33 samples, 0.05%; +0.00%)</title><rect x="1155.7" y="565" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1158.66" y="575.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (15 samples, 0.02%; +0.02%)</title><rect x="194.4" y="581" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="197.36" y="591.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.08%; +0.01%)</title><rect x="1088.0" y="501" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1091.01" y="511.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (318 samples, 0.49%; -0.01%)</title><rect x="1038.1" y="469" width="5.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1041.13" y="479.5" ></text>
</g>
<g >
<title>do_iter_write (622 samples, 0.95%; 0.00%)</title><rect x="254.5" y="437" width="11.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.51" y="447.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (161 samples, 0.25%; +0.02%)</title><rect x="1084.8" y="517" width="2.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1087.79" y="527.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (8,349 samples, 12.74%; +0.74%)</title><rect x="616.0" y="517" width="150.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="619.04" y="527.5" >ringbuf::consumer::..</text>
</g>
<g >
<title>shrink_zones (7 samples, 0.01%; 0.00%)</title><rect x="141.2" y="517" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.16" y="527.5" ></text>
</g>
<g >
<title>sched_clock_cpu (18 samples, 0.03%; +0.00%)</title><rect x="188.1" y="597" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="191.11" y="607.5" ></text>
</g>
<g >
<title>try_to_free_pages (7 samples, 0.01%; 0.00%)</title><rect x="141.2" y="549" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.16" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1,136 samples, 1.73%; -1.53%)</title><rect x="590.8" y="501" width="20.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="593.79" y="511.5" ></text>
</g>
<g >
<title>dispatcher (22,529 samples, 34.38%; 0.00%)</title><rect x="364.8" y="613" width="405.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.84" y="623.5" >dispatcher</text>
</g>
<g >
<title>nohz_csd_func (6 samples, 0.01%; +0.01%)</title><rect x="248.1" y="581" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="251.14" y="591.5" ></text>
</g>
<g >
<title>find_get_entry (8 samples, 0.01%; 0.00%)</title><rect x="261.5" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="264.52" y="319.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (52 samples, 0.08%; 0.00%)</title><rect x="1189.1" y="725" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.06" y="735.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (11 samples, 0.02%; 0.00%)</title><rect x="259.4" y="197" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.41" y="207.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (7 samples, 0.01%; +0.00%)</title><rect x="1159.9" y="709" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1162.94" y="719.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (6 samples, 0.01%; 0.00%)</title><rect x="308.3" y="693" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="311.33" y="703.5" ></text>
</g>
<g >
<title>NaClXMutexLock (10 samples, 0.02%; -0.01%)</title><rect x="269.8" y="709" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="272.84" y="719.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (39 samples, 0.06%; 0.00%)</title><rect x="1187.3" y="549" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.32" y="559.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (158 samples, 0.24%; 0.00%)</title><rect x="389.3" y="517" width="2.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="392.26" y="527.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (42 samples, 0.06%; +0.05%)</title><rect x="264.9" y="341" width="0.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="267.85" y="351.5" ></text>
</g>
<g >
<title>ion (6 samples, 0.01%; 0.00%)</title><rect x="265.8" y="629" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="268.77" y="639.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (9 samples, 0.01%; -0.00%)</title><rect x="1156.4" y="549" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1159.43" y="559.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (13 samples, 0.02%; 0.00%)</title><rect x="151.2" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.23" y="511.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2,685 samples, 4.10%; +0.19%)</title><rect x="710.9" y="485" width="48.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="713.86" y="495.5" >core..</text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,766 samples, 2.70%; 0.00%)</title><rect x="1005.3" y="549" width="31.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1008.35" y="559.5" >st..</text>
</g>
<g >
<title>do_syscall_64 (635 samples, 0.97%; 0.00%)</title><rect x="254.3" y="549" width="11.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.32" y="559.5" ></text>
</g>
<g >
<title>shrink_node (11 samples, 0.02%; 0.00%)</title><rect x="259.4" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.41" y="223.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (31 samples, 0.05%; +0.05%)</title><rect x="1086.6" y="453" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1089.57" y="463.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (664 samples, 1.01%; 0.00%)</title><rect x="822.7" y="581" width="12.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="825.71" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (117 samples, 0.18%; -0.00%)</title><rect x="1087.7" y="533" width="2.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1090.69" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (31 samples, 0.05%; -0.03%)</title><rect x="289.2" y="709" width="0.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="292.18" y="719.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (14 samples, 0.02%; +0.00%)</title><rect x="288.5" y="693" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="291.53" y="703.5" ></text>
</g>
<g >
<title>generic_exec_single (65 samples, 0.10%; 0.00%)</title><rect x="251.9" y="469" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.87" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (603 samples, 0.92%; -0.02%)</title><rect x="903.7" y="517" width="10.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="906.69" y="527.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (510 samples, 0.78%; 0.00%)</title><rect x="1080.6" y="597" width="9.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1083.61" y="607.5" ></text>
</g>
<g >
<title>lind_read (22,529 samples, 34.38%; 0.00%)</title><rect x="364.8" y="629" width="405.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.84" y="639.5" >lind_read</text>
</g>
<g >
<title>NaClSysWriteDecoder (19,608 samples, 29.93%; -0.02%)</title><rect x="770.8" y="693" width="353.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="773.78" y="703.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>cpumask_next (11 samples, 0.02%; +0.01%)</title><rect x="205.8" y="565" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="208.84" y="575.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (470 samples, 0.72%; -0.00%)</title><rect x="774.0" y="661" width="8.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="777.03" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (12 samples, 0.02%; -0.00%)</title><rect x="919.2" y="485" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="922.23" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (636 samples, 0.97%; 0.00%)</title><rect x="254.3" y="565" width="11.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.30" y="575.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%; 0.00%)</title><rect x="307.3" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.30" y="687.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (14 samples, 0.02%; 0.00%)</title><rect x="1073.1" y="517" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1076.06" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (7 samples, 0.01%; 0.00%)</title><rect x="259.4" y="69" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.45" y="79.5" ></text>
</g>
<g >
<title>zap_pte_range (39 samples, 0.06%; +0.02%)</title><rect x="1187.3" y="533" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1190.32" y="543.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (175 samples, 0.27%; 0.00%)</title><rect x="1081.2" y="533" width="3.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1084.19" y="543.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (8,580 samples, 13.10%; 0.00%)</title><rect x="616.0" y="533" width="154.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="619.04" y="543.5" >ringbuf::consumer::..</text>
</g>
<g >
<title>pthread_mutex_lock@plt (9 samples, 0.01%; 0.00%)</title><rect x="1110.4" y="645" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.38" y="655.5" ></text>
</g>
<g >
<title>tick_sched_timer (7 samples, 0.01%; 0.00%)</title><rect x="151.5" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.52" y="511.5" ></text>
</g>
<g >
<title>update_rq_clock (7 samples, 0.01%; +0.00%)</title><rect x="250.5" y="565" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="253.48" y="575.5" ></text>
</g>
<g >
<title>NaClHostDescRead (22,529 samples, 34.38%; 0.00%)</title><rect x="364.8" y="645" width="405.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.84" y="655.5" >NaClHostDescRead</text>
</g>
<g >
<title>perf_mmap__push (644 samples, 0.98%; +0.00%)</title><rect x="254.2" y="645" width="11.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="257.17" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (143 samples, 0.22%; -0.02%)</title><rect x="1048.6" y="501" width="2.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1051.63" y="511.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (434 samples, 0.66%; +0.00%)</title><rect x="985.2" y="549" width="7.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="988.21" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1,620 samples, 2.47%; 0.00%)</title><rect x="1157.3" y="725" width="29.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.31" y="735.5" >[u..</text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (23 samples, 0.04%; 0.00%)</title><rect x="1073.1" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1076.06" y="543.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (45 samples, 0.07%; +0.00%)</title><rect x="264.8" y="357" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="267.83" y="367.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (396 samples, 0.60%; +0.01%)</title><rect x="1073.5" y="533" width="7.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1076.48" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (52 samples, 0.08%; +0.02%)</title><rect x="1085.5" y="453" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1088.49" y="463.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (11 samples, 0.02%; +0.00%)</title><rect x="257.3" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="260.29" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (295 samples, 0.45%; 0.00%)</title><rect x="822.7" y="533" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="825.71" y="543.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (33 samples, 0.05%; +0.03%)</title><rect x="1185.4" y="677" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1188.43" y="687.5" ></text>
</g>
<g >
<title>list_lru_walk_one (15 samples, 0.02%; 0.00%)</title><rect x="143.4" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.41" y="559.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (15 samples, 0.02%; +0.00%)</title><rect x="1089.8" y="517" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1092.80" y="527.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::is_initialized (13 samples, 0.02%; 0.00%)</title><rect x="857.2" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.18" y="495.5" ></text>
</g>
<g >
<title>llist_reverse_order (72 samples, 0.11%; +0.11%)</title><rect x="199.0" y="645" width="1.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="201.96" y="655.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (20 samples, 0.03%; 0.00%)</title><rect x="264.4" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="267.38" y="271.5" ></text>
</g>
<g >
<title>perf (804 samples, 1.23%; 0.00%)</title><rect x="251.5" y="741" width="14.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.53" y="751.5" ></text>
</g>
<g >
<title>xas_store (7 samples, 0.01%; +0.01%)</title><rect x="258.5" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="261.53" y="287.5" ></text>
</g>
<g >
<title>irq_exit_rcu (126 samples, 0.19%; 0.00%)</title><rect x="148.9" y="581" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.91" y="591.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (6 samples, 0.01%; +0.00%)</title><rect x="196.6" y="597" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="199.58" y="607.5" ></text>
</g>
<g >
<title>shrink_slab (6 samples, 0.01%; 0.00%)</title><rect x="141.2" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.18" y="479.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (29 samples, 0.04%; 0.00%)</title><rect x="150.5" y="389" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.47" y="399.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (49 samples, 0.07%; +0.00%)</title><rect x="256.7" y="325" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="259.71" y="335.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (801 samples, 1.22%; 0.00%)</title><rect x="1037.2" y="565" width="14.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1040.15" y="575.5" ></text>
</g>
<g >
<title>read_tsc (16 samples, 0.02%; +0.02%)</title><rect x="212.0" y="645" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="215.03" y="655.5" ></text>
</g>
<g >
<title>tick_sched_handle (6 samples, 0.01%; 0.00%)</title><rect x="151.5" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.52" y="495.5" ></text>
</g>
<g >
<title>newidle_balance (107 samples, 0.16%; +0.01%)</title><rect x="248.5" y="549" width="1.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="251.48" y="559.5" ></text>
</g>
<g >
<title>swapper (109 samples, 0.17%; -1.72%)</title><rect x="1188.0" y="741" width="2.0" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1191.04" y="751.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (7 samples, 0.01%; 0.00%)</title><rect x="150.8" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.82" y="351.5" ></text>
</g>
<g >
<title>event_function_call (66 samples, 0.10%; -0.01%)</title><rect x="251.8" y="501" width="1.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="254.85" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (6 samples, 0.01%; +0.01%)</title><rect x="196.3" y="629" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="199.25" y="639.5" ></text>
</g>
<g >
<title>native_sched_clock (23 samples, 0.04%; +0.04%)</title><rect x="211.1" y="597" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="214.06" y="607.5" ></text>
</g>
<g >
<title>schedule_idle (132 samples, 0.20%; 0.00%)</title><rect x="248.3" y="597" width="2.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="251.28" y="607.5" ></text>
</g>
<g >
<title>sched_clock_cpu (28 samples, 0.04%; +0.00%)</title><rect x="211.0" y="613" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="214.00" y="623.5" ></text>
</g>
<g >
<title>start_kernel (2,027 samples, 3.09%; 0.00%)</title><rect x="214.9" y="677" width="36.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="217.93" y="687.5" >sta..</text>
</g>
<g >
<title>run_rebalance_domains (6 samples, 0.01%; 0.00%)</title><rect x="152.1" y="517" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.09" y="527.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.05%; +0.01%)</title><rect x="1046.6" y="405" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1049.59" y="415.5" ></text>
</g>
<g >
<title>lind_write (16,662 samples, 25.43%; -0.02%)</title><rect x="802.7" y="629" width="300.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="805.71" y="639.5" >lind_write</text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::write (419 samples, 0.64%; 0.00%)</title><rect x="1073.1" y="565" width="7.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1076.06" y="575.5" ></text>
</g>
<g >
<title>ret_from_fork (165 samples, 0.25%; 0.00%)</title><rect x="141.8" y="725" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.76" y="735.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (17 samples, 0.03%; +0.01%)</title><rect x="268.8" y="709" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="271.78" y="719.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (42 samples, 0.06%; 0.00%)</title><rect x="150.4" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.38" y="463.5" ></text>
</g>
<g >
<title>dispatcher (72 samples, 0.11%; +0.01%)</title><rect x="287.9" y="709" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="290.89" y="719.5" ></text>
</g>
<g >
<title>worker_thread (18 samples, 0.03%; +0.00%)</title><rect x="144.4" y="693" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="147.40" y="703.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (42 samples, 0.06%; +0.06%)</title><rect x="214.1" y="677" width="0.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="217.10" y="687.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (7 samples, 0.01%; +0.01%)</title><rect x="259.4" y="37" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="262.45" y="47.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (254 samples, 0.39%; +0.03%)</title><rect x="650.6" y="469" width="4.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="653.62" y="479.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (114 samples, 0.17%; 0.00%)</title><rect x="1155.0" y="709" width="2.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1157.95" y="719.5" ></text>
</g>
<g >
<title>ext4_releasepage (17 samples, 0.03%; +0.00%)</title><rect x="142.9" y="565" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="145.93" y="575.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (8 samples, 0.01%; 0.00%)</title><rect x="1156.1" y="517" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1159.11" y="527.5" ></text>
</g>
<g >
<title>shadow_lru_isolate (7 samples, 0.01%; 0.00%)</title><rect x="259.4" y="85" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.45" y="95.5" ></text>
</g>
<g >
<title>get_page_from_freelist (7 samples, 0.01%; +0.00%)</title><rect x="1155.3" y="549" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1158.33" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (377 samples, 0.58%; -0.00%)</title><rect x="884.0" y="485" width="6.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="887.02" y="495.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (35 samples, 0.05%; +0.02%)</title><rect x="249.0" y="517" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="252.04" y="527.5" ></text>
</g>
<g >
<title>napi_complete_done (42 samples, 0.06%; 0.00%)</title><rect x="150.4" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.38" y="479.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (19 samples, 0.03%; +0.02%)</title><rect x="360.1" y="645" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="363.12" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (66 samples, 0.10%; +0.01%)</title><rect x="270.2" y="709" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="273.22" y="719.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (363 samples, 0.55%; +0.01%)</title><rect x="1103.8" y="645" width="6.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1106.84" y="655.5" ></text>
</g>
<g >
<title>cpu_startup_entry (2,026 samples, 3.09%; 0.00%)</title><rect x="214.9" y="629" width="36.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="217.93" y="639.5" >cpu..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (231 samples, 0.35%; -0.09%)</title><rect x="766.4" y="517" width="4.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="769.40" y="527.5" ></text>
</g>
<g >
<title>menu_update (30 samples, 0.05%; +0.05%)</title><rect x="192.8" y="613" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="195.83" y="623.5" ></text>
</g>
<g >
<title>do_shrink_slab (45 samples, 0.07%; 0.00%)</title><rect x="143.3" y="597" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.31" y="607.5" ></text>
</g>
<g >
<title>smp_call_function_single (65 samples, 0.10%; 0.00%)</title><rect x="251.9" y="485" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.87" y="495.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (9 samples, 0.01%; 0.00%)</title><rect x="1162.2" y="677" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1165.21" y="687.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (23 samples, 0.04%; 0.00%)</title><rect x="305.3" y="677" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="308.34" y="687.5" ></text>
</g>
<g >
<title>wake_up_process (13 samples, 0.02%; 0.00%)</title><rect x="151.2" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.23" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1,136 samples, 1.73%; 0.00%)</title><rect x="590.8" y="517" width="20.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="593.79" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (11 samples, 0.02%; +0.02%)</title><rect x="245.8" y="533" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="248.78" y="543.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (18 samples, 0.03%; 0.00%)</title><rect x="918.2" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="921.22" y="463.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (13 samples, 0.02%; +0.00%)</title><rect x="352.1" y="693" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="355.09" y="703.5" ></text>
</g>
<g >
<title>unmap_vmas (39 samples, 0.06%; 0.00%)</title><rect x="1187.3" y="597" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.32" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1,086 samples, 1.66%; +1.33%)</title><rect x="837.6" y="533" width="19.6" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="840.63" y="543.5" ></text>
</g>
<g >
<title>std::panicking::panicking (30 samples, 0.05%; 0.00%)</title><rect x="1051.9" y="501" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1054.89" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (27 samples, 0.04%; -0.02%)</title><rect x="784.6" y="661" width="0.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="787.55" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (79 samples, 0.12%; 0.00%)</title><rect x="251.6" y="613" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.62" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (17 samples, 0.03%; 0.00%)</title><rect x="307.3" y="693" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.30" y="703.5" ></text>
</g>
<g >
<title>__lock_text_start (8 samples, 0.01%; +0.01%)</title><rect x="195.7" y="549" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="198.73" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (51 samples, 0.08%; +0.00%)</title><rect x="140.8" y="709" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="143.84" y="719.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (233 samples, 0.36%; -0.00%)</title><rect x="1180.9" y="709" width="4.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1183.87" y="719.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (9 samples, 0.01%; +0.00%)</title><rect x="1162.2" y="661" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1165.21" y="671.5" ></text>
</g>
<g >
<title>_raw_spin_lock (13 samples, 0.02%; +0.02%)</title><rect x="211.5" y="645" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="214.53" y="655.5" ></text>
</g>
<g >
<title>_raw_spin_lock (14 samples, 0.02%; +0.02%)</title><rect x="195.1" y="581" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="198.10" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (13 samples, 0.02%; +0.01%)</title><rect x="308.1" y="661" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="311.09" y="671.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (495 samples, 0.76%; +0.00%)</title><rect x="1080.9" y="565" width="8.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1083.88" y="575.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (14 samples, 0.02%; +0.00%)</title><rect x="1159.5" y="709" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1162.55" y="719.5" ></text>
</g>
<g >
<title>alx_intr_msix_ring (45 samples, 0.07%; 0.00%)</title><rect x="148.0" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.99" y="527.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (5,925 samples, 9.04%; 0.00%)</title><rect x="144.7" y="725" width="106.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.73" y="735.5" >secondary_sta..</text>
</g>
<g >
<title>generic_perform_write (7 samples, 0.01%; 0.00%)</title><rect x="265.9" y="533" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="268.88" y="543.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (24 samples, 0.04%; +0.04%)</title><rect x="261.1" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="264.07" y="239.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (98 samples, 0.15%; -0.00%)</title><rect x="782.5" y="661" width="1.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="785.50" y="671.5" ></text>
</g>
<g >
<title>perf_evsel__run_ioctl (79 samples, 0.12%; 0.00%)</title><rect x="251.6" y="645" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.62" y="655.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (19 samples, 0.03%; +0.00%)</title><rect x="141.1" y="661" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="144.11" y="671.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (324 samples, 0.49%; 0.00%)</title><rect x="298.0" y="693" width="5.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="300.99" y="703.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (47 samples, 0.07%; 0.00%)</title><rect x="1051.6" y="549" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1054.58" y="559.5" ></text>
</g>
<g >
<title>nf_conntrack_in (7 samples, 0.01%; 0.00%)</title><rect x="150.8" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.82" y="335.5" ></text>
</g>
<g >
<title>std::thread::panicking (9 samples, 0.01%; 0.00%)</title><rect x="1073.3" y="517" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1076.32" y="527.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (35 samples, 0.05%; 0.00%)</title><rect x="151.7" y="533" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.70" y="543.5" ></text>
</g>
<g >
<title>do_try_to_free_pages (9 samples, 0.01%; 0.00%)</title><rect x="1155.5" y="533" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.46" y="543.5" ></text>
</g>
<g >
<title>psi_avgs_work (6 samples, 0.01%; 0.00%)</title><rect x="144.5" y="661" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.53" y="671.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (207 samples, 0.32%; -0.04%)</title><rect x="819.0" y="565" width="3.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="821.99" y="575.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (9 samples, 0.01%; 0.00%)</title><rect x="1162.2" y="693" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1165.21" y="703.5" ></text>
</g>
<g >
<title>[sel_ldr] (1,330 samples, 2.03%; +0.08%)</title><rect x="1131.0" y="709" width="24.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1134.00" y="719.5" >[..</text>
</g>
<g >
<title>handle_mm_fault (6 samples, 0.01%; +0.00%)</title><rect x="140.7" y="677" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="143.66" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_poll (46 samples, 0.07%; 0.00%)</title><rect x="253.2" y="613" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="256.18" y="623.5" ></text>
</g>
<g >
<title>read_tsc (34 samples, 0.05%; +0.05%)</title><rect x="213.3" y="645" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="216.26" y="655.5" ></text>
</g>
<g >
<title>all (65,521 samples, 100%)</title><rect x="10.0" y="757" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_write (634 samples, 0.97%; 0.00%)</title><rect x="254.3" y="533" width="11.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.33" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (150 samples, 0.23%; +0.01%)</title><rect x="193.5" y="613" width="2.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="196.46" y="623.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (11 samples, 0.02%; -0.00%)</title><rect x="1111.3" y="645" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1114.30" y="655.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (23 samples, 0.04%; 0.00%)</title><rect x="305.3" y="661" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="308.34" y="671.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (44 samples, 0.07%; +0.02%)</title><rect x="1044.5" y="453" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1047.47" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt;&gt;&gt;&gt; (672 samples, 1.03%; 0.00%)</title><rect x="890.8" y="565" width="12.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="893.81" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (22 samples, 0.03%; +0.01%)</title><rect x="288.8" y="661" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="291.79" y="671.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (64 samples, 0.10%; 0.00%)</title><rect x="251.9" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.89" y="383.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (16 samples, 0.02%; 0.00%)</title><rect x="1089.5" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1092.51" y="447.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnUntrustedStack (11 samples, 0.02%; -0.01%)</title><rect x="363.1" y="693" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="366.08" y="703.5" ></text>
</g>
<g >
<title>shrink_node (130 samples, 0.20%; 0.00%)</title><rect x="141.8" y="661" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.78" y="671.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (104 samples, 0.16%; -0.00%)</title><rect x="1117.5" y="661" width="1.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1120.55" y="671.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (8 samples, 0.01%; 0.00%)</title><rect x="710.4" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.39" y="511.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (19 samples, 0.03%; +0.02%)</title><rect x="264.4" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="267.38" y="255.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (17 samples, 0.03%; 0.00%)</title><rect x="1006.6" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1009.59" y="463.5" ></text>
</g>
<g >
<title>NaClDescIoDescWrite (17 samples, 0.03%; +0.02%)</title><rect x="785.1" y="677" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="788.06" y="687.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (318 samples, 0.49%; 0.00%)</title><rect x="1038.1" y="485" width="5.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1041.13" y="495.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%; 0.00%)</title><rect x="1186.0" y="677" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1189.02" y="687.5" ></text>
</g>
<g >
<title>std::panicking::panicking (17 samples, 0.03%; 0.00%)</title><rect x="1006.6" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1009.59" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (10 samples, 0.02%; 0.00%)</title><rect x="288.4" y="645" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="291.35" y="655.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (179 samples, 0.27%; +0.04%)</title><rect x="1045.4" y="421" width="3.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1048.40" y="431.5" ></text>
</g>
<g >
<title>shrink_slab (10 samples, 0.02%; 0.00%)</title><rect x="259.4" y="181" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.43" y="191.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%; 0.00%)</title><rect x="307.1" y="677" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.12" y="687.5" ></text>
</g>
<g >
<title>add_wait_queue (8 samples, 0.01%; 0.00%)</title><rect x="253.4" y="533" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="256.36" y="543.5" ></text>
</g>
<g >
<title>shadow_lru_isolate (6 samples, 0.01%; 0.00%)</title><rect x="1155.5" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.49" y="383.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (1,146 samples, 1.75%; 0.00%)</title><rect x="1052.4" y="549" width="20.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1055.43" y="559.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_enter (11 samples, 0.02%; +0.02%)</title><rect x="188.5" y="597" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="191.51" y="607.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (350 samples, 0.53%; -0.06%)</title><rect x="1090.7" y="549" width="6.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1093.66" y="559.5" ></text>
</g>
<g >
<title>__set_page_dirty (15 samples, 0.02%; 0.00%)</title><rect x="262.7" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="265.73" y="303.5" ></text>
</g>
<g >
<title>sched_clock_cpu (32 samples, 0.05%; +0.01%)</title><rect x="189.5" y="613" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="192.52" y="623.5" ></text>
</g>
<g >
<title>shrink_slab_memcg (45 samples, 0.07%; 0.00%)</title><rect x="143.3" y="613" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.31" y="623.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (664 samples, 1.01%; 0.00%)</title><rect x="822.7" y="565" width="12.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="825.71" y="575.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1,601 samples, 2.44%; +1.92%)</title><rect x="1008.3" y="501" width="28.9" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="1011.32" y="511.5" >__..</text>
</g>
<g >
<title>std::thread::panicking (13 samples, 0.02%; 0.00%)</title><rect x="903.3" y="517" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="906.31" y="527.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (8 samples, 0.01%; +0.00%)</title><rect x="269.7" y="709" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="272.70" y="719.5" ></text>
</g>
<g >
<title>napi_gro_receive (9 samples, 0.01%; 0.00%)</title><rect x="149.5" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.52" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (13 samples, 0.02%; 0.00%)</title><rect x="903.3" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="906.31" y="479.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (13 samples, 0.02%; 0.00%)</title><rect x="308.1" y="693" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="311.09" y="703.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (16 samples, 0.02%; +0.01%)</title><rect x="784.3" y="661" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="787.26" y="671.5" ></text>
</g>
<g >
<title>hashbrown::map::equivalent_key::{{closure}} (17 samples, 0.03%; -0.00%)</title><rect x="1049.9" y="485" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1052.90" y="495.5" ></text>
</g>
<g >
<title>kmem_cache_free (9 samples, 0.01%; +0.01%)</title><rect x="151.7" y="453" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="154.72" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (18 samples, 0.03%; +0.01%)</title><rect x="918.2" y="437" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="921.22" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (369 samples, 0.56%; -0.03%)</title><rect x="828.0" y="517" width="6.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="831.03" y="527.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (3,625 samples, 5.53%; +3.02%)</title><rect x="919.4" y="485" width="65.3" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="922.44" y="495.5" >__pthre..</text>
</g>
<g >
<title>___slab_alloc (7 samples, 0.01%; 0.00%)</title><rect x="256.0" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="259.03" y="255.5" ></text>
</g>
<g >
<title>CompareAndSwap (24 samples, 0.04%; -0.01%)</title><rect x="1157.3" y="709" width="0.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1160.31" y="719.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.04%; +0.04%)</title><rect x="1085.8" y="437" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1088.78" y="447.5" ></text>
</g>
<g >
<title>cpuidle_not_available (6 samples, 0.01%; +0.01%)</title><rect x="196.8" y="661" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="199.85" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (749 samples, 1.14%; +1.12%)</title><rect x="274.4" y="709" width="13.5" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="277.38" y="719.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (14 samples, 0.02%; +0.00%)</title><rect x="985.0" y="533" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="987.96" y="543.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (6 samples, 0.01%; 0.00%)</title><rect x="140.7" y="725" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.66" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (10 samples, 0.02%; 0.00%)</title><rect x="307.1" y="645" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.12" y="655.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (12 samples, 0.02%; +0.00%)</title><rect x="142.6" y="549" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="145.57" y="559.5" ></text>
</g>
<g >
<title>ip_local_deliver (6 samples, 0.01%; +0.00%)</title><rect x="150.7" y="341" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="153.65" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (1,200 samples, 1.83%; +1.48%)</title><rect x="857.4" y="517" width="21.6" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="860.42" y="527.5" >c..</text>
</g>
<g >
<title>balance_pgdat (16 samples, 0.02%; 0.00%)</title><rect x="1188.8" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.78" y="687.5" ></text>
</g>
<g >
<title>free_unref_page_list (12 samples, 0.02%; 0.00%)</title><rect x="142.6" y="581" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.57" y="591.5" ></text>
</g>
<g >
<title>vfs_iter_write (623 samples, 0.95%; 0.00%)</title><rect x="254.5" y="453" width="11.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.51" y="463.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (6 samples, 0.01%; 0.00%)</title><rect x="254.6" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.55" y="303.5" ></text>
</g>
<g >
<title>do_idle (2,009 samples, 3.07%; +0.02%)</title><rect x="214.9" y="613" width="36.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="217.95" y="623.5" >do_..</text>
</g>
<g >
<title>std::thread::panicking (30 samples, 0.05%; 0.00%)</title><rect x="1051.9" y="517" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1054.89" y="527.5" ></text>
</g>
<g >
<title>xas_load (7 samples, 0.01%; +0.01%)</title><rect x="261.5" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="264.54" y="303.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (7 samples, 0.01%; +0.00%)</title><rect x="196.6" y="613" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="199.56" y="623.5" ></text>
</g>
<g >
<title>do_try_to_free_pages (11 samples, 0.02%; 0.00%)</title><rect x="259.4" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.41" y="255.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (11 samples, 0.02%; +0.00%)</title><rect x="250.7" y="597" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="253.68" y="607.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (12 samples, 0.02%; -0.00%)</title><rect x="782.3" y="613" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="785.28" y="623.5" ></text>
</g>
<g >
<title>_perf_event_enable (66 samples, 0.10%; -0.00%)</title><rect x="251.8" y="517" width="1.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="254.85" y="527.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (611 samples, 0.93%; +0.01%)</title><rect x="903.5" y="533" width="11.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="906.54" y="543.5" ></text>
</g>
<g >
<title>do_exit (41 samples, 0.06%; 0.00%)</title><rect x="1187.3" y="661" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.28" y="671.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (53 samples, 0.08%; +0.01%)</title><rect x="257.7" y="293" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="260.70" y="303.5" ></text>
</g>
<g >
<title>alx_refill_rx_ring (13 samples, 0.02%; 0.00%)</title><rect x="149.3" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.27" y="463.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (30 samples, 0.05%; 0.00%)</title><rect x="989.8" y="501" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="992.75" y="511.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (31 samples, 0.05%; +0.02%)</title><rect x="364.1" y="613" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="367.10" y="623.5" ></text>
</g>
<g >
<title>llist_add_batch (12 samples, 0.02%; +0.02%)</title><rect x="250.2" y="485" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="253.16" y="495.5" ></text>
</g>
<g >
<title>shrink_node (16 samples, 0.02%; 0.00%)</title><rect x="1188.8" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.78" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (16 samples, 0.02%; 0.00%)</title><rect x="1089.5" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1092.51" y="479.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (7 samples, 0.01%; 0.00%)</title><rect x="264.3" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="267.26" y="271.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (7 samples, 0.01%; 0.00%)</title><rect x="259.4" y="53" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.45" y="63.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (98 samples, 0.15%; +0.00%)</title><rect x="263.0" y="325" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="266.02" y="335.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (1,193 samples, 1.82%; 0.00%)</title><rect x="1051.6" y="565" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1054.58" y="575.5" >s..</text>
</g>
<g >
<title>free_unref_page_list (8 samples, 0.01%; +0.00%)</title><rect x="1187.8" y="469" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1190.84" y="479.5" ></text>
</g>
<g >
<title>NaClXMutexLock (20 samples, 0.03%; +0.01%)</title><rect x="1123.9" y="693" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1126.91" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (664 samples, 1.01%; 0.00%)</title><rect x="822.7" y="549" width="12.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="825.71" y="559.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (45 samples, 0.07%; +0.01%)</title><rect x="266.2" y="709" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="269.17" y="719.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (25 samples, 0.04%; -0.00%)</title><rect x="273.9" y="709" width="0.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="276.93" y="719.5" ></text>
</g>
<g >
<title>pick_next_task_fair (433 samples, 0.66%; +0.00%)</title><rect x="202.9" y="629" width="7.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="205.86" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (13 samples, 0.02%; -0.01%)</title><rect x="903.3" y="453" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="906.31" y="463.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (116 samples, 0.18%; +0.03%)</title><rect x="611.2" y="517" width="2.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="614.25" y="527.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (23 samples, 0.04%; 0.00%)</title><rect x="305.3" y="693" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="308.34" y="703.5" ></text>
</g>
<g >
<title>rmqueue (30 samples, 0.05%; -0.00%)</title><rect x="261.0" y="261" width="0.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="263.96" y="271.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.08%; 0.00%)</title><rect x="1088.0" y="517" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1091.01" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (17 samples, 0.03%; +0.02%)</title><rect x="1006.6" y="437" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1009.59" y="447.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (261 samples, 0.40%; +0.04%)</title><rect x="197.0" y="661" width="4.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="200.05" y="671.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (107 samples, 0.16%; +0.00%)</title><rect x="1082.4" y="485" width="1.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1085.41" y="495.5" ></text>
</g>
<g >
<title>record__write (640 samples, 0.98%; +0.00%)</title><rect x="254.2" y="613" width="11.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="257.24" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,alloc::sync::Arc&lt;rustposix::safeposix::cage::Cage&gt;&gt;&gt;&gt; (664 samples, 1.01%; 0.00%)</title><rect x="822.7" y="597" width="12.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="825.71" y="607.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (10 samples, 0.02%; 0.00%)</title><rect x="657.0" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="659.96" y="463.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.06%; +0.02%)</title><rect x="1088.3" y="485" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1091.26" y="495.5" ></text>
</g>
<g >
<title>rest_init (2,027 samples, 3.09%; 0.00%)</title><rect x="214.9" y="645" width="36.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="217.93" y="655.5" >res..</text>
</g>
<g >
<title>NaClUserToSysAddrRange (11 samples, 0.02%; -0.01%)</title><rect x="1123.7" y="677" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1126.71" y="687.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.02%; 0.00%)</title><rect x="1186.2" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1189.22" y="687.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (611 samples, 0.93%; -0.01%)</title><rect x="1037.6" y="517" width="11.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1040.62" y="527.5" ></text>
</g>
<g >
<title>nf_hook_slow (11 samples, 0.02%; +0.00%)</title><rect x="150.8" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="153.80" y="367.5" ></text>
</g>
<g >
<title>menu_select (318 samples, 0.49%; +0.10%)</title><rect x="190.5" y="629" width="5.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="193.49" y="639.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (41 samples, 0.06%; +0.01%)</title><rect x="262.3" y="325" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="265.28" y="335.5" ></text>
</g>
<g >
<title>__libc_write (6 samples, 0.01%; 0.00%)</title><rect x="265.8" y="613" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="268.77" y="623.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (75 samples, 0.11%; +0.03%)</title><rect x="194.8" y="597" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="197.78" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (48 samples, 0.07%; 0.00%)</title><rect x="253.2" y="629" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="256.18" y="639.5" ></text>
</g>
<g >
<title>nf_hook_slow_list (12 samples, 0.02%; 0.00%)</title><rect x="150.8" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.78" y="383.5" ></text>
</g>
<g >
<title>scan_shadow_nodes (7 samples, 0.01%; 0.00%)</title><rect x="1155.5" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.48" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (117 samples, 0.18%; 0.00%)</title><rect x="1087.7" y="549" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1090.69" y="559.5" ></text>
</g>
<g >
<title>ret_from_fork (16 samples, 0.02%; 0.00%)</title><rect x="1188.8" y="725" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.78" y="735.5" ></text>
</g>
<g >
<title>shrink_zones (9 samples, 0.01%; 0.00%)</title><rect x="1155.5" y="517" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.46" y="527.5" ></text>
</g>
<g >
<title>generic_update_time (6 samples, 0.01%; 0.00%)</title><rect x="254.6" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.55" y="351.5" ></text>
</g>
<g >
<title>sched_clock_idle_sleep_event (17 samples, 0.03%; 0.00%)</title><rect x="212.3" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="215.32" y="655.5" ></text>
</g>
<g >
<title>rcu_core_si (21 samples, 0.03%; 0.00%)</title><rect x="151.7" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.70" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (19 samples, 0.03%; +0.02%)</title><rect x="193.8" y="581" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="196.84" y="591.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (6 samples, 0.01%; 0.00%)</title><rect x="254.6" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.55" y="335.5" ></text>
</g>
<g >
<title>shrink_slab_memcg (6 samples, 0.01%; 0.00%)</title><rect x="141.2" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.18" y="463.5" ></text>
</g>
<g >
<title>NaClHostDescCheckValidity (11 samples, 0.02%; -0.00%)</title><rect x="799.2" y="645" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="802.18" y="655.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (47 samples, 0.07%; 0.00%)</title><rect x="1051.6" y="533" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1054.58" y="543.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (9 samples, 0.01%; +0.01%)</title><rect x="263.9" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="266.93" y="207.5" ></text>
</g>
<g >
<title>NaClDescIoDescRead (22,529 samples, 34.38%; 0.00%)</title><rect x="364.8" y="661" width="405.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.84" y="671.5" >NaClDescIoDescRead</text>
</g>
<g >
<title>fdarray__poll (55 samples, 0.08%; 0.00%)</title><rect x="253.1" y="677" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="256.06" y="687.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (8 samples, 0.01%; -0.01%)</title><rect x="1159.8" y="709" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1162.80" y="719.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1,086 samples, 1.66%; 0.00%)</title><rect x="837.6" y="549" width="19.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="840.63" y="559.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (10 samples, 0.02%; -0.00%)</title><rect x="1156.1" y="533" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1159.07" y="543.5" ></text>
</g>
<g >
<title>alx_poll (126 samples, 0.19%; +0.03%)</title><rect x="148.9" y="485" width="2.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="151.91" y="495.5" ></text>
</g>
<g >
<title>record__write (6 samples, 0.01%; 0.00%)</title><rect x="265.8" y="645" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="268.77" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (444 samples, 0.68%; 0.00%)</title><rect x="1065.1" y="517" width="8.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1068.07" y="527.5" ></text>
</g>
<g >
<title>crypto_shash_update (9 samples, 0.01%; -0.00%)</title><rect x="263.9" y="213" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="266.93" y="223.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (78 samples, 0.12%; -0.01%)</title><rect x="1043.9" y="501" width="1.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1046.85" y="511.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (21 samples, 0.03%; 0.00%)</title><rect x="261.8" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="264.79" y="335.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (10 samples, 0.02%; 0.00%)</title><rect x="144.2" y="661" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.21" y="671.5" ></text>
</g>
<g >
<title>dispatcher (16,211 samples, 24.74%; +0.04%)</title><rect x="810.6" y="613" width="292.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="813.61" y="623.5" >dispatcher</text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (108 samples, 0.16%; 0.00%)</title><rect x="655.2" y="485" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="658.19" y="495.5" ></text>
</g>
<g >
<title>ovl_write_iter (626 samples, 0.96%; +0.00%)</title><rect x="254.5" y="469" width="11.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="257.46" y="479.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (17 samples, 0.03%; +0.00%)</title><rect x="267.4" y="709" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="270.36" y="719.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (66 samples, 0.10%; 0.00%)</title><rect x="151.2" y="613" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.19" y="623.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (23 samples, 0.04%; +0.00%)</title><rect x="258.8" y="277" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="261.77" y="287.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (77 samples, 0.12%; +0.12%)</title><rect x="197.6" y="645" width="1.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="200.57" y="655.5" ></text>
</g>
<g >
<title>HandleStackContext (773 samples, 1.18%; +0.07%)</title><rect x="321.5" y="693" width="13.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="324.49" y="703.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (16 samples, 0.02%; -0.01%)</title><rect x="992.7" y="517" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="995.74" y="527.5" ></text>
</g>
<g >
<title>__schedule (129 samples, 0.20%; +0.01%)</title><rect x="248.3" y="581" width="2.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="251.28" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (44 samples, 0.07%; -0.01%)</title><rect x="1089.0" y="485" width="0.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1092.00" y="495.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (7 samples, 0.01%; 0.00%)</title><rect x="141.2" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.16" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (13,656 samples, 20.84%; -0.00%)</title><rect x="834.7" y="597" width="245.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="837.67" y="607.5" >rustposix::safeposix::dispatcher..</text>
</g>
<g >
<title>kswapd (16 samples, 0.02%; 0.00%)</title><rect x="1188.8" y="693" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.78" y="703.5" ></text>
</g>
<g >
<title>__lock_text_start (8 samples, 0.01%; +0.01%)</title><rect x="193.6" y="597" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="196.57" y="607.5" ></text>
</g>
<g >
<title>alloc_pages_current (128 samples, 0.20%; +0.01%)</title><rect x="259.2" y="309" width="2.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="262.22" y="319.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (31 samples, 0.05%; +0.00%)</title><rect x="247.7" y="597" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="250.69" y="607.5" ></text>
</g>
<g >
<title>do_user_addr_fault (113 samples, 0.17%; +0.00%)</title><rect x="1155.0" y="677" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1157.97" y="687.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (17 samples, 0.03%; 0.00%)</title><rect x="1051.6" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1054.58" y="527.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (13 samples, 0.02%; 0.00%)</title><rect x="308.1" y="677" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="311.09" y="687.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (69 samples, 0.11%; +0.00%)</title><rect x="251.8" y="533" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="254.80" y="543.5" ></text>
</g>
<g >
<title>try_charge (7 samples, 0.01%; +0.00%)</title><rect x="1156.7" y="581" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1159.74" y="591.5" ></text>
</g>
<g >
<title>rcu_do_batch (21 samples, 0.03%; +0.00%)</title><rect x="151.7" y="485" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="154.70" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (654 samples, 1.00%; 0.00%)</title><rect x="879.0" y="517" width="11.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.03" y="527.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (7 samples, 0.01%; 0.00%)</title><rect x="265.9" y="565" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="268.88" y="575.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_try_init (13 samples, 0.02%; 0.00%)</title><rect x="857.2" y="517" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.18" y="527.5" ></text>
</g>
<g >
<title>event_function (65 samples, 0.10%; +0.00%)</title><rect x="251.9" y="437" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="254.87" y="447.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (168 samples, 0.26%; +0.05%)</title><rect x="384.6" y="517" width="3.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="387.62" y="527.5" ></text>
</g>
<g >
<title>do_shrink_slab (6 samples, 0.01%; 0.00%)</title><rect x="141.2" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.18" y="447.5" ></text>
</g>
<g >
<title>NaClMutexLock (381 samples, 0.58%; -0.00%)</title><rect x="353.6" y="661" width="6.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="356.60" y="671.5" ></text>
</g>
<g >
<title>arch_cpu_idle_enter (11 samples, 0.02%; 0.00%)</title><rect x="145.6" y="661" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.63" y="671.5" ></text>
</g>
<g >
<title>napi_poll (126 samples, 0.19%; 0.00%)</title><rect x="148.9" y="501" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.91" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (55 samples, 0.08%; 0.00%)</title><rect x="1050.2" y="469" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1053.21" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (1,601 samples, 2.44%; 0.00%)</title><rect x="1008.3" y="517" width="28.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1011.32" y="527.5" >st..</text>
</g>
<g >
<title>__alloc_pages_nodemask (123 samples, 0.19%; +0.01%)</title><rect x="259.3" y="293" width="2.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="262.31" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (55 samples, 0.08%; 0.00%)</title><rect x="1050.2" y="485" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1053.21" y="495.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (28 samples, 0.04%; +0.00%)</title><rect x="261.0" y="245" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="264.00" y="255.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (14 samples, 0.02%; +0.00%)</title><rect x="247.2" y="533" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="250.19" y="543.5" ></text>
</g>
<g >
<title>ovl_write_iter (7 samples, 0.01%; 0.00%)</title><rect x="265.9" y="629" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="268.88" y="639.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (79 samples, 0.12%; +0.00%)</title><rect x="1185.1" y="709" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1188.07" y="719.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (2,371 samples, 3.62%; +0.05%)</title><rect x="147.4" y="629" width="42.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="150.39" y="639.5" >cpui..</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (71 samples, 0.11%; +0.11%)</title><rect x="994.0" y="517" width="1.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="996.97" y="527.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (684 samples, 1.04%; +0.04%)</title><rect x="993.0" y="549" width="12.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="996.03" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (3,706 samples, 5.66%; 0.00%)</title><rect x="918.2" y="549" width="66.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="921.22" y="559.5" >core::p..</text>
</g>
<g >
<title>DynArrayGet (12 samples, 0.02%; -0.02%)</title><rect x="1157.7" y="709" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1160.74" y="719.5" ></text>
</g>
<g >
<title>alloc_page_buffers (45 samples, 0.07%; 0.00%)</title><rect x="255.9" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="258.88" y="319.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (37 samples, 0.06%; 0.00%)</title><rect x="364.0" y="677" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.01" y="687.5" ></text>
</g>
<g >
<title>alx_mask_msix (22 samples, 0.03%; +0.03%)</title><rect x="150.0" y="469" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="152.99" y="479.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (51 samples, 0.08%; 0.00%)</title><rect x="147.9" y="581" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.93" y="591.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2,150 samples, 3.28%; -0.85%)</title><rect x="720.5" y="469" width="38.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="723.47" y="479.5" >__m..</text>
</g>
<g >
<title>__schedule (7 samples, 0.01%; +0.00%)</title><rect x="253.6" y="517" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="256.63" y="527.5" ></text>
</g>
<g >
<title>scan_shadow_nodes (11 samples, 0.02%; 0.00%)</title><rect x="1188.8" y="581" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.81" y="591.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.02%; +0.01%)</title><rect x="1048.1" y="389" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1051.12" y="399.5" ></text>
</g>
<g >
<title>vfs_write (632 samples, 0.96%; +0.00%)</title><rect x="254.4" y="501" width="11.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="257.37" y="511.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (13 samples, 0.02%; -0.01%)</title><rect x="311.6" y="709" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="314.55" y="719.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (179 samples, 0.27%; 0.00%)</title><rect x="1045.4" y="437" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1048.40" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (41 samples, 0.06%; 0.00%)</title><rect x="1187.3" y="693" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.28" y="703.5" ></text>
</g>
<g >
<title>__ioctl (79 samples, 0.12%; 0.00%)</title><rect x="251.6" y="629" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.62" y="639.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (14 samples, 0.02%; 0.00%)</title><rect x="985.0" y="549" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="987.96" y="559.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (25 samples, 0.04%; -0.00%)</title><rect x="1084.3" y="533" width="0.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1087.34" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,200 samples, 1.83%; 0.00%)</title><rect x="857.4" y="549" width="21.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.42" y="559.5" >&lt;..</text>
</g>
<g >
<title>___d_drop (7 samples, 0.01%; +0.01%)</title><rect x="143.7" y="517" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="146.68" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (21 samples, 0.03%; 0.00%)</title><rect x="1162.2" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1165.21" y="719.5" ></text>
</g>
<g >
<title>dispatcher (72 samples, 0.11%; +0.01%)</title><rect x="1160.9" y="709" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1163.91" y="719.5" ></text>
</g>
<g >
<title>shrink_slab_memcg (14 samples, 0.02%; 0.00%)</title><rect x="1188.8" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.81" y="623.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (376 samples, 0.57%; -0.00%)</title><rect x="1080.9" y="549" width="6.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1083.92" y="559.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.08%; 0.00%)</title><rect x="1049.0" y="485" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1051.99" y="495.5" ></text>
</g>
<g >
<title>std::thread::panicking (15 samples, 0.02%; 0.00%)</title><rect x="1089.8" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1092.80" y="559.5" ></text>
</g>
<g >
<title>std::lazy::SyncLazy&lt;T,F&gt;::force (13 samples, 0.02%; 0.00%)</title><rect x="857.2" y="549" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.18" y="559.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%; -0.01%)</title><rect x="1089.4" y="437" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1092.36" y="447.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (7 samples, 0.01%; 0.00%)</title><rect x="152.2" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.20" y="511.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (37 samples, 0.06%; +0.02%)</title><rect x="263.4" y="261" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="266.43" y="271.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (40 samples, 0.06%; -0.01%)</title><rect x="1083.0" y="469" width="0.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1086.02" y="479.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (10 samples, 0.02%; 0.00%)</title><rect x="985.0" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="988.03" y="511.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (33 samples, 0.05%; -0.00%)</title><rect x="253.2" y="581" width="0.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="256.18" y="591.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (646 samples, 0.99%; +0.01%)</title><rect x="902.9" y="549" width="11.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="905.91" y="559.5" ></text>
</g>
<g >
<title>account_page_dirtied (7 samples, 0.01%; -0.00%)</title><rect x="262.8" y="277" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="265.84" y="287.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get_or_init (13 samples, 0.02%; 0.00%)</title><rect x="857.2" y="533" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.18" y="543.5" ></text>
</g>
<g >
<title>rcu_core_si (10 samples, 0.02%; 0.00%)</title><rect x="144.2" y="645" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.21" y="655.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.01%; +0.00%)</title><rect x="1039.3" y="437" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1042.31" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2,574 samples, 3.93%; +2.50%)</title><rect x="664.0" y="485" width="46.4" height="15.0" fill="rgb(255,162,162)" rx="2" ry="2" />
<text  x="667.03" y="495.5" >core..</text>
</g>
<g >
<title>tick_nohz_idle_exit (14 samples, 0.02%; +0.01%)</title><rect x="250.9" y="597" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="253.88" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (427 samples, 0.65%; 0.00%)</title><rect x="895.2" y="501" width="7.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="898.22" y="511.5" ></text>
</g>
<g >
<title>std::panicking::panicking (9 samples, 0.01%; 0.00%)</title><rect x="1073.3" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1076.32" y="511.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (18 samples, 0.03%; 0.00%)</title><rect x="918.2" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="921.22" y="479.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (47 samples, 0.07%; +0.01%)</title><rect x="256.7" y="309" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="259.73" y="319.5" ></text>
</g>
<g >
<title>ksys_write (634 samples, 0.97%; 0.00%)</title><rect x="254.3" y="517" width="11.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.33" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (30 samples, 0.05%; +0.02%)</title><rect x="989.8" y="485" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="992.75" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (516 samples, 0.79%; 0.00%)</title><rect x="645.9" y="485" width="9.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.90" y="495.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (87 samples, 0.13%; -0.03%)</title><rect x="990.9" y="485" width="1.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="993.94" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.01%; +0.01%)</title><rect x="1086.4" y="453" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1089.43" y="463.5" ></text>
</g>
<g >
<title>cpu_startup_entry (51 samples, 0.08%; 0.00%)</title><rect x="1189.1" y="693" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.06" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (11 samples, 0.02%; -0.00%)</title><rect x="1186.0" y="645" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1189.02" y="655.5" ></text>
</g>
<g >
<title>dispatcher (15 samples, 0.02%; +0.00%)</title><rect x="1080.6" y="565" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1083.61" y="575.5" ></text>
</g>
<g >
<title>balance_pgdat (130 samples, 0.20%; 0.00%)</title><rect x="141.8" y="677" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.78" y="687.5" ></text>
</g>
<g >
<title>page_cache_delete (7 samples, 0.01%; +0.00%)</title><rect x="142.4" y="549" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="145.35" y="559.5" ></text>
</g>
<g >
<title>call_timer_fn (6 samples, 0.01%; 0.00%)</title><rect x="152.2" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.22" y="495.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (68 samples, 0.10%; +0.09%)</title><rect x="1005.4" y="469" width="1.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1008.37" y="479.5" ></text>
</g>
<g >
<title>__schedule (526 samples, 0.80%; +0.06%)</title><rect x="202.0" y="645" width="9.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="205.04" y="655.5" ></text>
</g>
<g >
<title>do_user_addr_fault (6 samples, 0.01%; 0.00%)</title><rect x="140.7" y="693" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.66" y="703.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (16 samples, 0.02%; +0.00%)</title><rect x="1089.5" y="421" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1092.51" y="431.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (231 samples, 0.35%; -0.00%)</title><rect x="891.1" y="485" width="4.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="894.06" y="495.5" ></text>
</g>
<g >
<title>jbd2__journal_start (14 samples, 0.02%; +0.00%)</title><rect x="255.3" y="325" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="258.34" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (10 samples, 0.02%; 0.00%)</title><rect x="307.1" y="693" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.12" y="703.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (61 samples, 0.09%; +0.09%)</title><rect x="208.1" y="533" width="1.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="211.07" y="543.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read (694 samples, 1.06%; 0.00%)</title><rect x="1090.1" y="581" width="12.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1093.07" y="591.5" ></text>
</g>
<g >
<title>ion (639 samples, 0.98%; 0.00%)</title><rect x="254.3" y="597" width="11.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.26" y="607.5" ></text>
</g>
<g >
<title>shrink_slab (14 samples, 0.02%; 0.00%)</title><rect x="1188.8" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.81" y="639.5" ></text>
</g>
<g >
<title>cpuidle_get_cpu_driver (6 samples, 0.01%; +0.01%)</title><rect x="145.9" y="661" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="148.88" y="671.5" ></text>
</g>
<g >
<title>handle_irq_event (47 samples, 0.07%; +0.00%)</title><rect x="148.0" y="549" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="150.95" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (311 samples, 0.47%; 0.00%)</title><rect x="1097.0" y="549" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1099.96" y="559.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (246 samples, 0.38%; +0.08%)</title><rect x="387.7" y="533" width="4.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="390.68" y="543.5" ></text>
</g>
<g >
<title>__run_hrtimer (24 samples, 0.04%; +0.00%)</title><rect x="151.2" y="517" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="154.21" y="527.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (654 samples, 1.00%; 0.00%)</title><rect x="879.0" y="533" width="11.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.03" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (164 samples, 0.25%; 0.00%)</title><rect x="1048.6" y="517" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1051.63" y="527.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,898 samples, 5.95%; +0.00%)</title><rect x="144.7" y="693" width="70.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="147.73" y="703.5" >cpu_sta..</text>
</g>
<g >
<title>ip_sublist_rcv_finish (7 samples, 0.01%; +0.00%)</title><rect x="150.6" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="153.64" y="367.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (72 samples, 0.11%; +0.00%)</title><rect x="1042.5" y="437" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1045.54" y="447.5" ></text>
</g>
<g >
<title>NaClHostDescWrite (16,847 samples, 25.71%; -0.00%)</title><rect x="799.4" y="645" width="303.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="802.37" y="655.5" >NaClHostDescWrite</text>
</g>
<g >
<title>handle_edge_irq (49 samples, 0.07%; 0.00%)</title><rect x="148.0" y="565" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.95" y="575.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (658 samples, 1.00%; -0.00%)</title><rect x="891.1" y="533" width="11.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="894.06" y="543.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (12 samples, 0.02%; +0.00%)</title><rect x="1156.6" y="597" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1159.65" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (10 samples, 0.02%; -0.01%)</title><rect x="307.1" y="629" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="310.12" y="639.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (35 samples, 0.05%; 0.00%)</title><rect x="151.7" y="549" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.70" y="559.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (222 samples, 0.34%; 0.00%)</title><rect x="257.7" y="341" width="4.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="260.67" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_wrlock (363 samples, 0.55%; +0.01%)</title><rect x="1074.1" y="517" width="6.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1077.07" y="527.5" ></text>
</g>
<g >
<title>NaClLog (34 samples, 0.05%; -0.00%)</title><rect x="268.2" y="709" width="0.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="271.17" y="719.5" ></text>
</g>
<g >
<title>run_timer_softirq (7 samples, 0.01%; 0.00%)</title><rect x="152.2" y="517" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.20" y="527.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (32 samples, 0.05%; -0.00%)</title><rect x="331.3" y="677" width="0.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="334.29" y="687.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (6,808 samples, 10.39%; +0.19%)</title><rect x="914.5" y="565" width="122.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="917.54" y="575.5" >rustposix::inte..</text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (17 samples, 0.03%; 0.00%)</title><rect x="1006.6" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1009.59" y="479.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write_unlock (9 samples, 0.01%; 0.00%)</title><rect x="307.6" y="661" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.61" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (42 samples, 0.06%; 0.00%)</title><rect x="1187.3" y="709" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.28" y="719.5" ></text>
</g>
<g >
<title>pick_next_task_idle (8 samples, 0.01%; +0.00%)</title><rect x="210.7" y="629" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="213.66" y="639.5" ></text>
</g>
<g >
<title>dispatcher@plt (12 samples, 0.02%; +0.00%)</title><rect x="1102.6" y="613" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1105.56" y="623.5" ></text>
</g>
<g >
<title>shrink_active_list (10 samples, 0.02%; 0.00%)</title><rect x="141.8" y="613" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.85" y="623.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (656 samples, 1.00%; +0.01%)</title><rect x="254.1" y="661" width="11.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="257.06" y="671.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (561 samples, 0.86%; -0.30%)</title><rect x="995.2" y="517" width="10.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="998.25" y="527.5" ></text>
</g>
<g >
<title>do_idle (3,844 samples, 5.87%; +0.06%)</title><rect x="144.9" y="677" width="69.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="147.87" y="687.5" >do_idle</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,059 samples, 1.62%; +1.62%)</title><rect x="152.5" y="613" width="19.0" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="155.46" y="623.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (6 samples, 0.01%; 0.00%)</title><rect x="308.3" y="677" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="311.33" y="687.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (510 samples, 0.78%; 0.00%)</title><rect x="1080.6" y="581" width="9.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1083.61" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (18 samples, 0.03%; +0.02%)</title><rect x="307.8" y="661" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="310.77" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (297 samples, 0.45%; -0.04%)</title><rect x="354.8" y="645" width="5.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="357.77" y="655.5" ></text>
</g>
<g >
<title>NaClUserToSysStackAddr (27 samples, 0.04%; -0.00%)</title><rect x="334.9" y="677" width="0.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="337.93" y="687.5" ></text>
</g>
<g >
<title>remote_function (65 samples, 0.10%; -0.00%)</title><rect x="251.9" y="453" width="1.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="254.87" y="463.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (15 samples, 0.02%; +0.02%)</title><rect x="251.1" y="613" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="254.13" y="623.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (1,015 samples, 1.55%; +0.20%)</title><rect x="1162.6" y="709" width="18.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1165.59" y="719.5" ></text>
</g>
<g >
<title>clear_page_erms (18 samples, 0.03%; -0.01%)</title><rect x="1155.7" y="549" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1158.71" y="559.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (54 samples, 0.08%; -0.00%)</title><rect x="1044.3" y="485" width="1.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1047.29" y="495.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (13,621 samples, 20.79%; +0.04%)</title><rect x="835.3" y="581" width="245.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="838.30" y="591.5" >rustposix::safeposix::syscalls::..</text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (17 samples, 0.03%; 0.00%)</title><rect x="1156.3" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1159.34" y="607.5" ></text>
</g>
<g >
<title>rcu_do_batch (10 samples, 0.02%; 0.00%)</title><rect x="144.2" y="613" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.21" y="623.5" ></text>
</g>
<g >
<title>file_modified (6 samples, 0.01%; 0.00%)</title><rect x="254.6" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.55" y="383.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (22 samples, 0.03%; 0.00%)</title><rect x="1050.8" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1053.80" y="415.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (35 samples, 0.05%; 0.00%)</title><rect x="151.7" y="565" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.70" y="575.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (19 samples, 0.03%; +0.01%)</title><rect x="785.6" y="677" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="788.60" y="687.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (79 samples, 0.12%; 0.00%)</title><rect x="251.6" y="661" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.62" y="671.5" ></text>
</g>
<g >
<title>_perf_ioctl (76 samples, 0.12%; +0.01%)</title><rect x="251.7" y="549" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="254.67" y="559.5" ></text>
</g>
<g >
<title>NaClSwitchToApp (40 samples, 0.06%; +0.01%)</title><rect x="363.3" y="693" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="366.27" y="703.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (7 samples, 0.01%; 0.00%)</title><rect x="265.9" y="549" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="268.88" y="559.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (132 samples, 0.20%; +0.04%)</title><rect x="1085.0" y="469" width="2.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1088.02" y="479.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (107 samples, 0.16%; +0.08%)</title><rect x="303.8" y="709" width="2.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="306.82" y="719.5" ></text>
</g>
<g >
<title>HandleStackContext (14 samples, 0.02%; +0.00%)</title><rect x="310.3" y="709" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="313.31" y="719.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (21 samples, 0.03%; 0.00%)</title><rect x="261.8" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="264.79" y="351.5" ></text>
</g>
<g >
<title>nohz_csd_func (83 samples, 0.13%; +0.13%)</title><rect x="200.3" y="645" width="1.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="203.25" y="655.5" ></text>
</g>
<g >
<title>shrink_lruvec (79 samples, 0.12%; 0.00%)</title><rect x="141.8" y="629" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.83" y="639.5" ></text>
</g>
<g >
<title>NaClLog (57 samples, 0.09%; -0.02%)</title><rect x="1158.1" y="709" width="1.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1161.05" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (18 samples, 0.03%; 0.00%)</title><rect x="307.8" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.77" y="687.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (16 samples, 0.02%; 0.00%)</title><rect x="142.9" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.95" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (444 samples, 0.68%; -0.08%)</title><rect x="1065.1" y="501" width="8.0" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1068.07" y="511.5" ></text>
</g>
<g >
<title>do_shrink_slab (14 samples, 0.02%; 0.00%)</title><rect x="1188.8" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.81" y="607.5" ></text>
</g>
<g >
<title>NaClSysRead (22,529 samples, 34.38%; 0.00%)</title><rect x="364.8" y="677" width="405.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.84" y="687.5" >NaClSysRead</text>
</g>
<g >
<title>cpuidle_enter_state (1,700 samples, 2.59%; +0.00%)</title><rect x="215.4" y="565" width="30.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="218.40" y="575.5" >cp..</text>
</g>
<g >
<title>NaClSandboxCodeAddr (170 samples, 0.26%; -0.01%)</title><rect x="331.9" y="677" width="3.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="334.87" y="687.5" ></text>
</g>
<g >
<title>__netdev_alloc_skb (10 samples, 0.02%; +0.00%)</title><rect x="149.3" y="437" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="152.27" y="447.5" ></text>
</g>
<g >
<title>ctx_resched (64 samples, 0.10%; 0.00%)</title><rect x="251.9" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.89" y="415.5" ></text>
</g>
<g >
<title>irq_exit_rcu (35 samples, 0.05%; 0.00%)</title><rect x="151.7" y="581" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.70" y="591.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (9 samples, 0.01%; +0.01%)</title><rect x="145.7" y="645" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="148.67" y="655.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list (42 samples, 0.06%; 0.00%)</title><rect x="150.4" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.38" y="447.5" ></text>
</g>
<g >
<title>generic_exec_single (11 samples, 0.02%; 0.00%)</title><rect x="250.0" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="252.96" y="495.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (18 samples, 0.03%; 0.00%)</title><rect x="307.8" y="693" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.77" y="703.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (13 samples, 0.02%; -0.01%)</title><rect x="785.4" y="677" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="788.36" y="687.5" ></text>
</g>
<g >
<title>read_tsc (7 samples, 0.01%; +0.01%)</title><rect x="251.0" y="581" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="254.00" y="591.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (130 samples, 0.20%; -0.03%)</title><rect x="306.1" y="709" width="2.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="309.09" y="719.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (7 samples, 0.01%; 0.00%)</title><rect x="141.2" y="581" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.16" y="591.5" ></text>
</g>
<g >
<title>ip_list_rcv_finish.constprop.0 (17 samples, 0.03%; 0.00%)</title><rect x="150.5" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.47" y="383.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (6 samples, 0.01%; 0.00%)</title><rect x="254.6" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.55" y="319.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (15 samples, 0.02%; 0.00%)</title><rect x="1089.8" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1092.80" y="591.5" ></text>
</g>
<g >
<title>poll_idle (6 samples, 0.01%; -0.16%)</title><rect x="1189.7" y="613" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1192.69" y="623.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (22 samples, 0.03%; +0.01%)</title><rect x="195.7" y="565" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="198.66" y="575.5" ></text>
</g>
<g >
<title>__list_lru_walk_one (7 samples, 0.01%; +0.00%)</title><rect x="1155.5" y="389" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1158.48" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (603 samples, 0.92%; 0.00%)</title><rect x="903.7" y="501" width="10.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="906.69" y="511.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write_unlock (9 samples, 0.01%; 0.00%)</title><rect x="307.6" y="645" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.61" y="655.5" ></text>
</g>
<g >
<title>poll_freewait (7 samples, 0.01%; +0.00%)</title><rect x="253.9" y="581" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="256.88" y="591.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (2,027 samples, 3.09%; 0.00%)</title><rect x="214.9" y="709" width="36.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="217.93" y="719.5" >x86..</text>
</g>
<g >
<title>exit_mmap (40 samples, 0.06%; 0.00%)</title><rect x="1187.3" y="613" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.30" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (17 samples, 0.03%; +0.01%)</title><rect x="307.3" y="629" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="310.30" y="639.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (868 samples, 1.32%; -0.05%)</title><rect x="336.5" y="693" width="15.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="339.46" y="703.5" ></text>
</g>
<g >
<title>shrink_dentry_list (21 samples, 0.03%; 0.00%)</title><rect x="143.7" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.68" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (78 samples, 0.12%; -0.05%)</title><rect x="272.5" y="709" width="1.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="275.52" y="719.5" ></text>
</g>
<g >
<title>__alloc_pages_slowpath.constprop.0 (7 samples, 0.01%; 0.00%)</title><rect x="141.2" y="565" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.16" y="575.5" ></text>
</g>
<g >
<title>list_lru_walk_one_irq (7 samples, 0.01%; 0.00%)</title><rect x="1155.5" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.48" y="415.5" ></text>
</g>
<g >
<title>idle_cpu (19 samples, 0.03%; +0.03%)</title><rect x="249.3" y="501" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="252.33" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2 (6 samples, 0.01%; +0.01%)</title><rect x="1050.6" y="437" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1053.64" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (46 samples, 0.07%; +0.01%)</title><rect x="1160.1" y="709" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1163.07" y="719.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (13 samples, 0.02%; -0.00%)</title><rect x="1088.7" y="469" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1091.70" y="479.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (9 samples, 0.01%; -0.01%)</title><rect x="1073.3" y="485" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1076.32" y="495.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (161 samples, 0.25%; 0.00%)</title><rect x="1084.8" y="533" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1087.79" y="543.5" ></text>
</g>
<g >
<title>std::thread::panicking (18 samples, 0.03%; 0.00%)</title><rect x="918.2" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="921.22" y="511.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (22 samples, 0.03%; -0.01%)</title><rect x="1050.8" y="389" width="0.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1053.80" y="399.5" ></text>
</g>
<g >
<title>NaClLog (109 samples, 0.17%; +0.01%)</title><rect x="360.5" y="693" width="1.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="363.48" y="703.5" ></text>
</g>
<g >
<title>pipe_poll (8 samples, 0.01%; 0.00%)</title><rect x="141.2" y="645" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.16" y="655.5" ></text>
</g>
<g >
<title>ext4_da_write_end (172 samples, 0.26%; +0.01%)</title><rect x="261.7" y="357" width="3.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="264.72" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (4,578 samples, 6.99%; +6.94%)</title><rect x="392.1" y="533" width="82.5" height="15.0" fill="rgb(255,78,78)" rx="2" ry="2" />
<text  x="395.11" y="543.5" >core::syn..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1,086 samples, 1.66%; 0.00%)</title><rect x="837.6" y="565" width="19.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="840.63" y="575.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.01%; -0.04%)</title><rect x="1039.0" y="437" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1041.97" y="447.5" ></text>
</g>
<g >
<title>release_pages (15 samples, 0.02%; +0.00%)</title><rect x="1187.7" y="485" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1190.73" y="495.5" ></text>
</g>
<g >
<title>alx_mask_msix (45 samples, 0.07%; +0.07%)</title><rect x="148.0" y="501" width="0.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="150.99" y="511.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (295 samples, 0.45%; +0.03%)</title><rect x="822.7" y="517" width="5.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="825.71" y="527.5" ></text>
</g>
<g >
<title>__remove_mapping (13 samples, 0.02%; +0.00%)</title><rect x="142.3" y="581" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="145.33" y="591.5" ></text>
</g>
<g >
<title>list_lru_walk_one_irq (8 samples, 0.01%; 0.00%)</title><rect x="259.4" y="117" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.43" y="127.5" ></text>
</g>
<g >
<title>mmput (40 samples, 0.06%; 0.00%)</title><rect x="1187.3" y="629" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.30" y="639.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (324 samples, 0.49%; +0.13%)</title><rect x="298.0" y="645" width="5.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="300.99" y="655.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (14 samples, 0.02%; -0.00%)</title><rect x="1073.1" y="485" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1076.06" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock (9 samples, 0.01%; +0.01%)</title><rect x="248.6" y="533" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="251.63" y="543.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (622 samples, 0.95%; 0.00%)</title><rect x="254.5" y="389" width="11.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.51" y="399.5" ></text>
</g>
<g >
<title>ttwu_do_activate (8 samples, 0.01%; 0.00%)</title><rect x="151.3" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.32" y="463.5" ></text>
</g>
<g >
<title>rcu_idle_exit (43 samples, 0.07%; +0.02%)</title><rect x="188.7" y="613" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="191.71" y="623.5" ></text>
</g>
<g >
<title>get_typical_interval (13 samples, 0.02%; +0.02%)</title><rect x="246.4" y="549" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="249.41" y="559.5" ></text>
</g>
<g >
<title>do_idle (50 samples, 0.08%; -0.01%)</title><rect x="1189.1" y="677" width="0.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1192.06" y="687.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (657 samples, 1.00%; +0.01%)</title><rect x="993.5" y="533" width="11.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="996.52" y="543.5" ></text>
</g>
<g >
<title>__d_free (10 samples, 0.02%; 0.00%)</title><rect x="151.7" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.72" y="479.5" ></text>
</g>
<g >
<title>native_sched_clock (13 samples, 0.02%; +0.02%)</title><rect x="212.4" y="613" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="215.37" y="623.5" ></text>
</g>
<g >
<title>exit_mm (41 samples, 0.06%; 0.00%)</title><rect x="1187.3" y="645" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.28" y="655.5" ></text>
</g>
<g >
<title>__perf_event_enable (64 samples, 0.10%; -0.00%)</title><rect x="251.9" y="421" width="1.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="254.89" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (175 samples, 0.27%; 0.00%)</title><rect x="1081.2" y="517" width="3.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1084.19" y="527.5" ></text>
</g>
<g >
<title>shrink_zones (11 samples, 0.02%; 0.00%)</title><rect x="259.4" y="229" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.41" y="239.5" ></text>
</g>
<g >
<title>perf_poll (18 samples, 0.03%; 0.00%)</title><rect x="253.3" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="256.27" y="575.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (25 samples, 0.04%; 0.00%)</title><rect x="151.2" y="533" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.21" y="543.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (90 samples, 0.14%; +0.10%)</title><rect x="204.6" y="581" width="1.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="207.65" y="591.5" ></text>
</g>
<g >
<title>core::cmp::min (168 samples, 0.26%; 0.00%)</title><rect x="384.6" y="549" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="387.62" y="559.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (158 samples, 0.24%; 0.00%)</title><rect x="389.3" y="501" width="2.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="392.26" y="511.5" ></text>
</g>
<g >
<title>generic_perform_write (613 samples, 0.94%; +0.00%)</title><rect x="254.7" y="373" width="11.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="257.66" y="383.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,693 samples, 5.64%; 0.00%)</title><rect x="918.2" y="533" width="66.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="921.22" y="543.5" >&lt;std::s..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (51 samples, 0.08%; 0.00%)</title><rect x="140.8" y="725" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.84" y="735.5" ></text>
</g>
<g >
<title>rcu_core (21 samples, 0.03%; 0.00%)</title><rect x="151.7" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.70" y="511.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (12 samples, 0.02%; -0.01%)</title><rect x="1084.6" y="517" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1087.57" y="527.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (694 samples, 1.06%; -0.01%)</title><rect x="772.6" y="677" width="12.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="775.56" y="687.5" ></text>
</g>
<g >
<title>[perf-376691.map] (78 samples, 0.12%; +0.12%)</title><rect x="308.4" y="725" width="1.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="311.44" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.02%; 0.00%)</title><rect x="1186.2" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1189.22" y="671.5" ></text>
</g>
<g >
<title>CompareAndSwap (665 samples, 1.01%; -0.01%)</title><rect x="340.1" y="677" width="12.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="343.11" y="687.5" ></text>
</g>
<g >
<title>dev_gro_receive (9 samples, 0.01%; +0.00%)</title><rect x="149.5" y="437" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="152.52" y="447.5" ></text>
</g>
<g >
<title>ext4_insert_delayed_block (27 samples, 0.04%; -0.00%)</title><rect x="257.0" y="293" width="0.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="260.00" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (105 samples, 0.16%; +0.01%)</title><rect x="259.6" y="277" width="1.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="262.63" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (231 samples, 0.35%; 0.00%)</title><rect x="891.1" y="501" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="894.06" y="511.5" ></text>
</g>
<g >
<title>__handle_mm_fault (106 samples, 0.16%; +0.01%)</title><rect x="1155.0" y="645" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1158.04" y="655.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (11 samples, 0.02%; -0.02%)</title><rect x="267.0" y="709" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="269.98" y="719.5" ></text>
</g>
<g >
<title>__alloc_pages_slowpath.constprop.0 (16 samples, 0.02%; 0.00%)</title><rect x="1155.3" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.33" y="575.5" ></text>
</g>
<g >
<title>do_sys_poll (19 samples, 0.03%; 0.00%)</title><rect x="141.1" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.11" y="687.5" ></text>
</g>
<g >
<title>__list_lru_walk_one (15 samples, 0.02%; +0.02%)</title><rect x="143.4" y="533" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="146.41" y="543.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (98 samples, 0.15%; -0.01%)</title><rect x="1121.9" y="661" width="1.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1124.94" y="671.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (43 samples, 0.07%; +0.00%)</title><rect x="211.9" y="661" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="214.85" y="671.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (31 samples, 0.05%; 0.00%)</title><rect x="364.1" y="629" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.10" y="639.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (158 samples, 0.24%; +0.20%)</title><rect x="389.3" y="485" width="2.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="392.26" y="495.5" ></text>
</g>
<g >
<title>core::cmp::min (6 samples, 0.01%; 0.00%)</title><rect x="918.1" y="549" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="921.11" y="559.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (126 samples, 0.19%; 0.00%)</title><rect x="148.9" y="549" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.91" y="559.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (6 samples, 0.01%; 0.00%)</title><rect x="918.1" y="533" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="921.11" y="543.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (24 samples, 0.04%; +0.03%)</title><rect x="254.7" y="357" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="257.73" y="367.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.04%; +0.00%)</title><rect x="1049.5" y="453" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1052.47" y="463.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (709 samples, 1.08%; 0.00%)</title><rect x="1089.8" y="597" width="12.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1092.80" y="607.5" ></text>
</g>
<g >
<title>shrink_page_list (54 samples, 0.08%; +0.00%)</title><rect x="142.3" y="597" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="145.28" y="607.5" ></text>
</g>
<g >
<title>free_unref_page_commit (12 samples, 0.02%; 0.00%)</title><rect x="142.6" y="565" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.57" y="575.5" ></text>
</g>
<g >
<title>do_sys_poll (46 samples, 0.07%; 0.00%)</title><rect x="253.2" y="597" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="256.18" y="607.5" ></text>
</g>
<g >
<title>unmap_single_vma (39 samples, 0.06%; 0.00%)</title><rect x="1187.3" y="581" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.32" y="591.5" ></text>
</g>
<g >
<title>native_sched_clock (16 samples, 0.02%; +0.02%)</title><rect x="188.1" y="581" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="191.15" y="591.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (259 samples, 0.40%; -0.11%)</title><rect x="1000.5" y="485" width="4.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1003.45" y="495.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u64 (12 samples, 0.02%; +0.02%)</title><rect x="1162.4" y="677" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1165.37" y="687.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (34 samples, 0.05%; +0.00%)</title><rect x="246.8" y="549" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="249.84" y="559.5" ></text>
</g>
<g >
<title>prune_dcache_sb (37 samples, 0.06%; 0.00%)</title><rect x="143.4" y="565" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.40" y="575.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (13 samples, 0.02%; +0.01%)</title><rect x="258.1" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="261.10" y="287.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (30 samples, 0.05%; +0.01%)</title><rect x="262.5" y="309" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="265.48" y="319.5" ></text>
</g>
<g >
<title>try_to_free_pages (9 samples, 0.01%; 0.00%)</title><rect x="1155.5" y="549" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.46" y="559.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (7 samples, 0.01%; +0.01%)</title><rect x="256.5" y="245" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="259.50" y="255.5" ></text>
</g>
<g >
<title>do_shrink_slab (10 samples, 0.02%; 0.00%)</title><rect x="259.4" y="149" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.43" y="159.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (4,578 samples, 6.99%; 0.00%)</title><rect x="392.1" y="549" width="82.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="395.11" y="559.5" >core::syn..</text>
</g>
<g >
<title>core::cmp::min_by (6 samples, 0.01%; -0.01%)</title><rect x="918.1" y="517" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="921.11" y="527.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::store (25 samples, 0.04%; 0.00%)</title><rect x="990.3" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="993.29" y="511.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (86 samples, 0.13%; 0.00%)</title><rect x="263.2" y="293" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="266.20" y="303.5" ></text>
</g>
<g >
<title>do_try_to_free_pages (7 samples, 0.01%; 0.00%)</title><rect x="141.2" y="533" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.16" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (245 samples, 0.37%; +0.05%)</title><rect x="1039.4" y="453" width="4.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1042.42" y="463.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (16 samples, 0.02%; +0.01%)</title><rect x="311.0" y="709" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="313.97" y="719.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.constprop.0 (9 samples, 0.01%; +0.00%)</title><rect x="150.5" y="357" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="153.47" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_write (6 samples, 0.01%; 0.00%)</title><rect x="141.6" y="693" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.61" y="703.5" ></text>
</g>
<g >
<title>rmqueue (12 samples, 0.02%; +0.00%)</title><rect x="1156.0" y="549" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1159.03" y="559.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (39 samples, 0.06%; +0.02%)</title><rect x="195.4" y="581" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="198.35" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (17 samples, 0.03%; 0.00%)</title><rect x="307.3" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.30" y="655.5" ></text>
</g>
<g >
<title>do_iter_write (7 samples, 0.01%; 0.00%)</title><rect x="265.9" y="597" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="268.88" y="607.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (23 samples, 0.04%; 0.00%)</title><rect x="1073.1" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1076.06" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (262 samples, 0.40%; +0.18%)</title><rect x="645.9" y="469" width="4.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="648.90" y="479.5" ></text>
</g>
<g >
<title>x86_pmu_enable (64 samples, 0.10%; 0.00%)</title><rect x="251.9" y="389" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.89" y="399.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (22,526 samples, 34.38%; +0.59%)</title><rect x="364.9" y="565" width="405.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="367.88" y="575.5" >rustposix::interface::pipe::EmulatedPipe::read_from_pipe</text>
</g>
<g >
<title>cpuidle_select (80 samples, 0.12%; 0.00%)</title><rect x="246.1" y="581" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="249.09" y="591.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (82 samples, 0.13%; +0.03%)</title><rect x="212.6" y="661" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="215.62" y="671.5" ></text>
</g>
<g >
<title>std::panicking::panicking (15 samples, 0.02%; 0.00%)</title><rect x="1089.8" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1092.80" y="543.5" ></text>
</g>
<g >
<title>NaClCopyTakeLock (452 samples, 0.69%; +0.01%)</title><rect x="352.3" y="693" width="8.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="355.32" y="703.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (10 samples, 0.02%; +0.01%)</title><rect x="759.2" y="485" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="762.21" y="495.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (22 samples, 0.03%; 0.00%)</title><rect x="288.8" y="693" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="291.79" y="703.5" ></text>
</g>
<g >
<title>ipv6_list_rcv (7 samples, 0.01%; 0.00%)</title><rect x="151.0" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.01" y="415.5" ></text>
</g>
<g >
<title>vfs_iter_write (7 samples, 0.01%; 0.00%)</title><rect x="265.9" y="613" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="268.88" y="623.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (36 samples, 0.05%; 0.00%)</title><rect x="364.0" y="661" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.01" y="671.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (8 samples, 0.01%; -0.01%)</title><rect x="269.3" y="709" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="272.34" y="719.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (30 samples, 0.05%; 0.00%)</title><rect x="1051.9" y="485" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1054.89" y="495.5" ></text>
</g>
<g >
<title>NaClFastMutexLock (420 samples, 0.64%; +0.02%)</title><rect x="1103.0" y="661" width="7.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1105.98" y="671.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (323 samples, 0.49%; -0.02%)</title><rect x="1111.5" y="645" width="5.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1114.50" y="655.5" ></text>
</g>
<g >
<title>kthread (165 samples, 0.25%; 0.00%)</title><rect x="141.8" y="709" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.76" y="719.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (12 samples, 0.02%; +0.02%)</title><rect x="1086.2" y="437" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1089.21" y="447.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (21 samples, 0.03%; -0.02%)</title><rect x="1051.2" y="501" width="0.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1054.20" y="511.5" ></text>
</g>
<g >
<title>do_anonymous_page (96 samples, 0.15%; +0.00%)</title><rect x="1155.2" y="613" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1158.22" y="623.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (37 samples, 0.06%; 0.00%)</title><rect x="364.0" y="693" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.01" y="703.5" ></text>
</g>
<g >
<title>__get_free_pages (7 samples, 0.01%; 0.00%)</title><rect x="141.2" y="613" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.16" y="623.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (27 samples, 0.04%; 0.00%)</title><rect x="151.2" y="581" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.21" y="591.5" ></text>
</g>
<g >
<title>kworker/u32:1 (13,406 samples, 20.46%; +11.07%)</title><rect x="10.0" y="741" width="241.4" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >kworker/u32:1</text>
</g>
<g >
<title>ext4_inode_csum_set (20 samples, 0.03%; +0.00%)</title><rect x="263.7" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="266.74" y="255.5" ></text>
</g>
<g >
<title>NaClMutexLock (10 samples, 0.02%; -0.00%)</title><rect x="1159.1" y="709" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1162.08" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (801 samples, 1.22%; +0.02%)</title><rect x="1037.2" y="533" width="14.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1040.15" y="543.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1,552 samples, 2.37%; +2.37%)</title><rect x="215.5" y="549" width="27.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="218.47" y="559.5" >m..</text>
</g>
<g >
<title>arch_call_rest_init (2,027 samples, 3.09%; 0.00%)</title><rect x="214.9" y="661" width="36.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="217.93" y="671.5" >arc..</text>
</g>
<g >
<title>NaClDescIoDescWrite (16,935 samples, 25.85%; -0.05%)</title><rect x="798.0" y="661" width="305.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="800.99" y="671.5" >NaClDescIoDescWrite</text>
</g>
<g >
<title>ktime_get (8 samples, 0.01%; +0.01%)</title><rect x="201.8" y="661" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="204.77" y="671.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (39 samples, 0.06%; +0.00%)</title><rect x="255.9" y="277" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="258.94" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (17 samples, 0.03%; +0.03%)</title><rect x="203.1" y="597" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="206.10" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (9 samples, 0.01%; +0.01%)</title><rect x="307.6" y="629" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="310.61" y="639.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (381 samples, 0.58%; +0.15%)</title><rect x="657.2" y="501" width="6.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="660.17" y="511.5" ></text>
</g>
<g >
<title>poll_idle (939 samples, 1.43%; +1.41%)</title><rect x="171.5" y="613" width="16.9" height="15.0" fill="rgb(255,183,183)" rx="2" ry="2" />
<text  x="174.53" y="623.5" ></text>
</g>
<g >
<title>schedule (10 samples, 0.02%; +0.00%)</title><rect x="253.6" y="533" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="256.60" y="543.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (35 samples, 0.05%; +0.00%)</title><rect x="1186.6" y="725" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1189.61" y="735.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (175 samples, 0.27%; -0.00%)</title><rect x="1081.2" y="501" width="3.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1084.19" y="511.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (22 samples, 0.03%; 0.00%)</title><rect x="1050.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1053.80" y="431.5" ></text>
</g>
<g >
<title>handle_pte_fault (98 samples, 0.15%; -0.00%)</title><rect x="1155.2" y="629" width="1.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1158.19" y="639.5" ></text>
</g>
<g >
<title>NaClCopyDropLock (16 samples, 0.02%; 0.00%)</title><rect x="772.3" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="775.27" y="687.5" ></text>
</g>
<g >
<title>std::lazy::SyncOnceCell&lt;T&gt;::get (13 samples, 0.02%; 0.00%)</title><rect x="857.2" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.18" y="511.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (7,698 samples, 11.75%; -1.37%)</title><rect x="474.7" y="533" width="138.6" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="477.70" y="543.5" >ringbuf::ring_buf..</text>
</g>
<g >
<title>new_sync_write (629 samples, 0.96%; +0.00%)</title><rect x="254.4" y="485" width="11.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="257.42" y="495.5" ></text>
</g>
<g >
<title>std::panicking::panic_count::count_is_zero (13 samples, 0.02%; 0.00%)</title><rect x="903.3" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="906.31" y="495.5" ></text>
</g>
<g >
<title>[anon] (2,347 samples, 3.58%; 0.00%)</title><rect x="266.2" y="725" width="42.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="269.17" y="735.5" >[an..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (39 samples, 0.06%; -0.00%)</title><rect x="1038.7" y="453" width="0.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1041.72" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (369 samples, 0.56%; 0.00%)</title><rect x="828.0" y="533" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="831.03" y="543.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (20 samples, 0.03%; +0.01%)</title><rect x="362.7" y="693" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="365.72" y="703.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (187 samples, 0.29%; -0.02%)</title><rect x="1045.3" y="469" width="3.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1048.26" y="479.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (23 samples, 0.04%; 0.00%)</title><rect x="250.0" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="252.96" y="511.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::done (13 samples, 0.02%; 0.00%)</title><rect x="903.3" y="533" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="906.31" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7 samples, 0.01%; +0.01%)</title><rect x="253.4" y="517" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="256.38" y="527.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_lock (1,680 samples, 2.56%; +0.12%)</title><rect x="1006.9" y="533" width="30.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1009.90" y="543.5" >st..</text>
</g>
<g >
<title>shrink_slab_memcg (8 samples, 0.01%; 0.00%)</title><rect x="1155.5" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.48" y="463.5" ></text>
</g>
<g >
<title>asm_common_interrupt (181 samples, 0.28%; 0.00%)</title><rect x="147.9" y="613" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.93" y="623.5" ></text>
</g>
<g >
<title>process_one_work (15 samples, 0.02%; 0.00%)</title><rect x="144.4" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.42" y="687.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt; (1,200 samples, 1.83%; 0.00%)</title><rect x="857.4" y="565" width="21.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.42" y="575.5" >c..</text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (23 samples, 0.04%; 0.00%)</title><rect x="310.6" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="313.56" y="719.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (624 samples, 0.95%; 0.00%)</title><rect x="645.9" y="501" width="11.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.90" y="511.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (53 samples, 0.08%; +0.00%)</title><rect x="263.3" y="277" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="266.27" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (277 samples, 0.42%; +0.02%)</title><rect x="879.0" y="485" width="5.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="882.03" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (14 samples, 0.02%; +0.00%)</title><rect x="1082.0" y="469" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1084.98" y="479.5" ></text>
</g>
<g >
<title>kthread (16 samples, 0.02%; 0.00%)</title><rect x="1188.8" y="709" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.78" y="719.5" ></text>
</g>
<g >
<title>scan_shadow_nodes (8 samples, 0.01%; 0.00%)</title><rect x="259.4" y="133" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.43" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (79 samples, 0.12%; 0.00%)</title><rect x="251.6" y="597" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.62" y="607.5" ></text>
</g>
<g >
<title>NaClGetDescMuNoRef (15 samples, 0.02%; -0.01%)</title><rect x="267.7" y="709" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="270.66" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (10 samples, 0.02%; +0.00%)</title><rect x="1082.2" y="469" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1085.23" y="479.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (98 samples, 0.15%; +0.01%)</title><rect x="990.7" y="501" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="993.74" y="511.5" ></text>
</g>
<g >
<title>kick_ilb (38 samples, 0.06%; +0.02%)</title><rect x="249.7" y="517" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="252.69" y="527.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (2,027 samples, 3.09%; 0.00%)</title><rect x="214.9" y="693" width="36.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="217.93" y="703.5" >x86..</text>
</g>
<g >
<title>start_secondary (3,898 samples, 5.95%; 0.00%)</title><rect x="144.7" y="709" width="70.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.73" y="719.5" >start_s..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (8,730 samples, 13.32%; +0.15%)</title><rect x="613.3" y="549" width="157.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="616.34" y="559.5" >ringbuf::consumer::C..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ringbuf::producer::Producer&lt;u8&gt;&gt;&gt; (11 samples, 0.02%; 0.00%)</title><rect x="1186.0" y="693" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1189.02" y="703.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (318 samples, 0.49%; -0.01%)</title><rect x="776.6" y="613" width="5.7" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="779.56" y="623.5" ></text>
</g>
<g >
<title>generic_write_end (145 samples, 0.22%; +0.01%)</title><rect x="262.2" y="341" width="2.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="265.17" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2,574 samples, 3.93%; 0.00%)</title><rect x="664.0" y="501" width="46.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="667.03" y="511.5" >core..</text>
</g>
<g >
<title>native_write_msr (64 samples, 0.10%; -0.00%)</title><rect x="251.9" y="357" width="1.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="254.89" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (22 samples, 0.03%; 0.00%)</title><rect x="1050.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1053.80" y="447.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (126 samples, 0.19%; 0.00%)</title><rect x="148.9" y="533" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.91" y="543.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (46 samples, 0.07%; -0.00%)</title><rect x="1189.1" y="661" width="0.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1192.06" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (9 samples, 0.01%; 0.00%)</title><rect x="307.6" y="693" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.61" y="703.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (12 samples, 0.02%; 0.00%)</title><rect x="1162.4" y="693" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1165.37" y="703.5" ></text>
</g>
<g >
<title>llist_reverse_order (13 samples, 0.02%; +0.02%)</title><rect x="247.9" y="581" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="250.91" y="591.5" ></text>
</g>
<g >
<title>try_to_release_page (18 samples, 0.03%; 0.00%)</title><rect x="142.9" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.91" y="591.5" ></text>
</g>
<g >
<title>std::sync::once::Once::is_completed (13 samples, 0.02%; +0.01%)</title><rect x="857.2" y="469" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="860.18" y="479.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (10 samples, 0.02%; 0.00%)</title><rect x="256.5" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="259.46" y="271.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (45,114 samples, 68.85%; +0.13%)</title><rect x="311.8" y="709" width="812.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="314.79" y="719.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>NaClLog (135 samples, 0.21%; -0.03%)</title><rect x="1119.5" y="661" width="2.4" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1122.51" y="671.5" ></text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (22,528 samples, 34.38%; 0.00%)</title><rect x="364.9" y="597" width="405.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.86" y="607.5" >rustposix::safeposix::dispatcher::dispatcher::{{closure}}</text>
</g>
<g >
<title>ext4_inode_csum (17 samples, 0.03%; +0.00%)</title><rect x="263.8" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="266.79" y="239.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (187 samples, 0.29%; 0.00%)</title><rect x="1045.3" y="501" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1048.26" y="511.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (33 samples, 0.05%; -0.03%)</title><rect x="1083.7" y="469" width="0.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1086.74" y="479.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (16 samples, 0.02%; 0.00%)</title><rect x="1188.8" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.78" y="655.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (17 samples, 0.03%; 0.00%)</title><rect x="307.3" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.30" y="671.5" ></text>
</g>
<g >
<title>list_lru_walk_one_irq (11 samples, 0.02%; 0.00%)</title><rect x="1188.8" y="565" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.81" y="575.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (6 samples, 0.01%; +0.01%)</title><rect x="210.4" y="613" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="213.45" y="623.5" ></text>
</g>
<g >
<title>get_typical_interval (52 samples, 0.08%; +0.08%)</title><rect x="191.8" y="613" width="1.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="194.82" y="623.5" ></text>
</g>
<g >
<title>native_sched_clock (25 samples, 0.04%; +0.04%)</title><rect x="189.6" y="597" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="192.59" y="607.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (19 samples, 0.03%; -0.28%)</title><rect x="305.8" y="709" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="308.75" y="719.5" ></text>
</g>
<g >
<title>scan_shadow_nodes (6 samples, 0.01%; 0.00%)</title><rect x="141.2" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.18" y="431.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (109 samples, 0.17%; -0.05%)</title><rect x="1040.6" y="437" width="1.9" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1043.58" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.01%; -0.02%)</title><rect x="1081.8" y="469" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1084.82" y="479.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (13 samples, 0.02%; +0.00%)</title><rect x="247.2" y="517" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="250.20" y="527.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (10 samples, 0.02%; 0.00%)</title><rect x="253.6" y="549" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="256.60" y="559.5" ></text>
</g>
<g >
<title>exc_page_fault (113 samples, 0.17%; 0.00%)</title><rect x="1155.0" y="693" width="2.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1157.97" y="703.5" ></text>
</g>
<g >
<title>[sel_ldr] (45,222 samples, 69.02%; -0.01%)</title><rect x="309.8" y="725" width="814.5" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="312.84" y="735.5" >[sel_ldr]</text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (14 samples, 0.02%; 0.00%)</title><rect x="1073.1" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1076.06" y="511.5" ></text>
</g>
<g >
<title>NaClMutexUnlock (408 samples, 0.62%; +0.01%)</title><rect x="775.2" y="629" width="7.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="778.15" y="639.5" ></text>
</g>
<g >
<title>tick_nohz_restart (13 samples, 0.02%; 0.00%)</title><rect x="213.9" y="645" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="216.87" y="655.5" ></text>
</g>
<g >
<title>shrink_slab (8 samples, 0.01%; 0.00%)</title><rect x="1155.5" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.48" y="479.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::MovableMutex::raw_unlock (3,675 samples, 5.61%; +0.06%)</title><rect x="918.5" y="517" width="66.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="921.54" y="527.5" >std::sy..</text>
</g>
<g >
<title>__list_lru_walk_one (8 samples, 0.01%; +0.00%)</title><rect x="259.4" y="101" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="262.43" y="111.5" ></text>
</g>
<g >
<title>alx_clean_rx_irq (25 samples, 0.04%; +0.00%)</title><rect x="149.2" y="469" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="152.23" y="479.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (53 samples, 0.08%; 0.00%)</title><rect x="1155.3" y="581" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.30" y="591.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (10 samples, 0.02%; 0.00%)</title><rect x="253.6" y="565" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="256.60" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (49 samples, 0.07%; 0.00%)</title><rect x="253.2" y="645" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="256.16" y="655.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (7 samples, 0.01%; +0.00%)</title><rect x="259.0" y="245" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="261.96" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (26 samples, 0.04%; 0.00%)</title><rect x="151.2" y="549" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.21" y="559.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (432 samples, 0.66%; 0.00%)</title><rect x="985.3" y="533" width="7.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="988.25" y="543.5" ></text>
</g>
<g >
<title>NaClXMutexLock (426 samples, 0.65%; +0.01%)</title><rect x="352.8" y="677" width="7.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="355.79" y="687.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%; 0.00%)</title><rect x="307.6" y="677" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.61" y="687.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (11 samples, 0.02%; -0.01%)</title><rect x="776.4" y="613" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="779.36" y="623.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (10 samples, 0.02%; 0.00%)</title><rect x="307.1" y="661" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.12" y="671.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.01%; 0.00%)</title><rect x="1089.4" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1092.36" y="463.5" ></text>
</g>
<g >
<title>kswapd (130 samples, 0.20%; 0.00%)</title><rect x="141.8" y="693" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.78" y="703.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (324 samples, 0.49%; 0.00%)</title><rect x="298.0" y="677" width="5.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="300.99" y="687.5" ></text>
</g>
<g >
<title>common_interrupt (181 samples, 0.28%; 0.00%)</title><rect x="147.9" y="597" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.93" y="607.5" ></text>
</g>
<g >
<title>exc_page_fault (6 samples, 0.01%; 0.00%)</title><rect x="140.7" y="709" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.66" y="719.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (10 samples, 0.02%; +0.00%)</title><rect x="262.0" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="264.99" y="287.5" ></text>
</g>
<g >
<title>run_ksoftirqd (10 samples, 0.02%; 0.00%)</title><rect x="144.2" y="677" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.21" y="687.5" ></text>
</g>
<g >
<title>handle_mm_fault (108 samples, 0.16%; -0.00%)</title><rect x="1155.0" y="661" width="2.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1158.01" y="671.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (13 samples, 0.02%; +0.01%)</title><rect x="992.5" y="501" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="995.51" y="511.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (66 samples, 0.10%; +0.00%)</title><rect x="151.2" y="597" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="154.19" y="607.5" ></text>
</g>
<g >
<title>rcu_core (10 samples, 0.02%; 0.00%)</title><rect x="144.2" y="629" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.21" y="639.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (83 samples, 0.13%; +0.00%)</title><rect x="1047.1" y="405" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1050.13" y="415.5" ></text>
</g>
<g >
<title>perf_ioctl (78 samples, 0.12%; +0.00%)</title><rect x="251.6" y="565" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="254.63" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (658 samples, 1.00%; 0.00%)</title><rect x="891.1" y="517" width="11.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="894.06" y="527.5" ></text>
</g>
<g >
<title>__slab_alloc (7 samples, 0.01%; 0.00%)</title><rect x="256.0" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="259.03" y="271.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (112 samples, 0.17%; +0.00%)</title><rect x="255.6" y="341" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="258.61" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (277 samples, 0.42%; 0.00%)</title><rect x="879.0" y="501" width="5.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.03" y="511.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (168 samples, 0.26%; 0.00%)</title><rect x="384.6" y="533" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="387.62" y="543.5" ></text>
</g>
<g >
<title>__list_lru_walk_one (11 samples, 0.02%; 0.00%)</title><rect x="1188.8" y="549" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.81" y="559.5" ></text>
</g>
<g >
<title>__dentry_kill (15 samples, 0.02%; 0.00%)</title><rect x="143.7" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.68" y="543.5" ></text>
</g>
<g >
<title>NaClRawUserStackAddrNormalize (15 samples, 0.02%; +0.01%)</title><rect x="362.4" y="693" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="365.45" y="703.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (130 samples, 0.20%; +0.00%)</title><rect x="141.8" y="645" width="2.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="144.78" y="655.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (672 samples, 1.03%; -0.00%)</title><rect x="890.8" y="549" width="12.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="893.81" y="559.5" ></text>
</g>
<g >
<title>alloc_pages_current (7 samples, 0.01%; 0.00%)</title><rect x="141.2" y="597" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.16" y="607.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (311 samples, 0.47%; +0.08%)</title><rect x="1097.0" y="533" width="5.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1099.96" y="543.5" ></text>
</g>
<g >
<title>__pollwait (12 samples, 0.02%; +0.00%)</title><rect x="253.3" y="549" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="256.29" y="559.5" ></text>
</g>
<g >
<title>create_empty_buffers (53 samples, 0.08%; +0.01%)</title><rect x="255.8" y="325" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="258.76" y="335.5" ></text>
</g>
<g >
<title>__delete_from_page_cache (8 samples, 0.01%; 0.00%)</title><rect x="142.4" y="565" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.35" y="575.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (603 samples, 0.92%; -0.09%)</title><rect x="903.7" y="485" width="10.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="906.69" y="495.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (7,706 samples, 11.76%; -0.48%)</title><rect x="474.6" y="549" width="138.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="477.55" y="559.5" >ringbuf::consumer..</text>
</g>
<g >
<title>stop_this_handle (15 samples, 0.02%; +0.00%)</title><rect x="261.9" y="309" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="264.90" y="319.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (622 samples, 0.95%; 0.00%)</title><rect x="254.5" y="421" width="11.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.51" y="431.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (9 samples, 0.01%; 0.00%)</title><rect x="213.9" y="629" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="216.94" y="639.5" ></text>
</g>
<g >
<title>jbd2_journal_grab_journal_head (11 samples, 0.02%; +0.01%)</title><rect x="143.0" y="533" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="145.96" y="543.5" ></text>
</g>
<g >
<title>std::thread::panicking (17 samples, 0.03%; 0.00%)</title><rect x="1006.6" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1009.59" y="511.5" ></text>
</g>
<g >
<title>ksys_write (6 samples, 0.01%; +0.00%)</title><rect x="141.6" y="677" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="144.61" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (3,637 samples, 5.55%; 0.00%)</title><rect x="919.2" y="501" width="65.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="922.23" y="511.5" >std::sy..</text>
</g>
<g >
<title>NaClSysReadDecoder (22,529 samples, 34.38%; 0.00%)</title><rect x="364.8" y="693" width="405.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.84" y="703.5" >NaClSysReadDecoder</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (259 samples, 0.40%; 0.00%)</title><rect x="1000.5" y="501" width="4.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1003.45" y="511.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (12 samples, 0.02%; +0.02%)</title><rect x="189.3" y="597" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="192.27" y="607.5" ></text>
</g>
<g >
<title>llist_add_batch (70 samples, 0.11%; +0.11%)</title><rect x="209.2" y="549" width="1.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="212.17" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_poll (19 samples, 0.03%; 0.00%)</title><rect x="141.1" y="693" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.11" y="703.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (15 samples, 0.02%; +0.01%)</title><rect x="256.2" y="261" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="259.19" y="271.5" ></text>
</g>
<g >
<title>DynArrayGet (67 samples, 0.10%; +0.01%)</title><rect x="1118.2" y="645" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1121.21" y="655.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.02%; +0.01%)</title><rect x="657.0" y="421" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="659.96" y="431.5" ></text>
</g>
<g >
<title>ip_list_rcv (32 samples, 0.05%; +0.00%)</title><rect x="150.4" y="405" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="153.42" y="415.5" ></text>
</g>
<g >
<title>clear_page_erms (61 samples, 0.09%; +0.09%)</title><rect x="259.7" y="261" width="1.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="262.72" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;rustposix::safeposix::cage::FileDescriptor&gt;&gt; (646 samples, 0.99%; 0.00%)</title><rect x="902.9" y="565" width="11.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="905.91" y="575.5" ></text>
</g>
<g >
<title>cpuidle_enter (1,701 samples, 2.60%; 0.00%)</title><rect x="215.4" y="581" width="30.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.40" y="591.5" >cp..</text>
</g>
<g >
<title>newidle_balance (418 samples, 0.64%; +0.01%)</title><rect x="202.9" y="613" width="7.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="205.92" y="623.5" ></text>
</g>
<g >
<title>NaClGetThreadCtxSp (9 samples, 0.01%; +0.01%)</title><rect x="267.9" y="709" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="270.93" y="719.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i32 (187 samples, 0.29%; 0.00%)</title><rect x="1045.3" y="485" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1048.26" y="495.5" ></text>
</g>
<g >
<title>NaClAppThreadFromThreadContext (58 samples, 0.09%; -0.02%)</title><rect x="335.4" y="693" width="1.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="338.41" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (377 samples, 0.58%; 0.00%)</title><rect x="884.0" y="501" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.02" y="511.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (360 samples, 0.55%; +0.01%)</title><rect x="255.2" y="357" width="6.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="258.24" y="367.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (86 samples, 0.13%; 0.00%)</title><rect x="1005.3" y="517" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1008.35" y="527.5" ></text>
</g>
<g >
<title>super_cache_scan (40 samples, 0.06%; 0.00%)</title><rect x="143.4" y="581" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.40" y="591.5" ></text>
</g>
<g >
<title>&lt;std::lazy::SyncLazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.02%; 0.00%)</title><rect x="857.2" y="565" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.18" y="575.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (654 samples, 1.00%; 0.00%)</title><rect x="879.0" y="549" width="11.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.03" y="559.5" ></text>
</g>
<g >
<title>pagecache_get_page (222 samples, 0.34%; -0.00%)</title><rect x="257.7" y="325" width="4.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="260.67" y="335.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (30 samples, 0.05%; 0.00%)</title><rect x="989.2" y="485" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="992.19" y="495.5" ></text>
</g>
<g >
<title>rustposix::interface::types::get_int (13 samples, 0.02%; 0.00%)</title><rect x="835.1" y="581" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="838.07" y="591.5" ></text>
</g>
<g >
<title>lru_cache_add (17 samples, 0.03%; +0.00%)</title><rect x="1156.3" y="581" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1159.34" y="591.5" ></text>
</g>
<g >
<title>schedule_idle (548 samples, 0.84%; +0.01%)</title><rect x="201.9" y="661" width="9.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="204.95" y="671.5" ></text>
</g>
<g >
<title>isolate_lru_pages (14 samples, 0.02%; +0.02%)</title><rect x="142.0" y="597" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="145.03" y="607.5" ></text>
</g>
<g >
<title>update_rq_clock (32 samples, 0.05%; +0.00%)</title><rect x="210.9" y="629" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="213.93" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (10 samples, 0.02%; -0.01%)</title><rect x="288.4" y="629" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="291.35" y="639.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (69 samples, 0.11%; +0.00%)</title><rect x="1005.3" y="485" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1008.35" y="495.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (246 samples, 0.38%; 0.00%)</title><rect x="387.7" y="549" width="4.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="390.68" y="559.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (95 samples, 0.14%; +0.00%)</title><rect x="263.1" y="309" width="1.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="266.07" y="319.5" ></text>
</g>
<g >
<title>kick_ilb (220 samples, 0.34%; +0.11%)</title><rect x="206.5" y="581" width="3.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="209.47" y="591.5" ></text>
</g>
<g >
<title>std::panicking::panicking (18 samples, 0.03%; 0.00%)</title><rect x="918.2" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="921.22" y="495.5" ></text>
</g>
<g >
<title>NaClSysWrite (14 samples, 0.02%; +0.00%)</title><rect x="269.1" y="709" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="272.08" y="719.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.02%; 0.00%)</title><rect x="657.0" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="659.96" y="447.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::read_unlock (10 samples, 0.02%; 0.00%)</title><rect x="288.4" y="661" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="291.35" y="671.5" ></text>
</g>
<g >
<title>sel_ldr (51,197 samples, 78.14%; -0.00%)</title><rect x="266.0" y="741" width="922.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="269.00" y="751.5" >sel_ldr</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (6 samples, 0.01%; +0.01%)</title><rect x="262.1" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="265.06" y="271.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (47 samples, 0.07%; +0.00%)</title><rect x="193.8" y="597" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="196.79" y="607.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (10 samples, 0.02%; +0.02%)</title><rect x="985.0" y="485" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="988.03" y="495.5" ></text>
</g>
<g >
<title>record__mmap_read_all (656 samples, 1.00%; 0.00%)</title><rect x="254.1" y="677" width="11.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.06" y="687.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.02%; 0.00%)</title><rect x="1186.2" y="693" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1189.22" y="703.5" ></text>
</g>
<g >
<title>__evlist__enable (80 samples, 0.12%; 0.00%)</title><rect x="251.6" y="677" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.60" y="687.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (389 samples, 0.59%; +0.18%)</title><rect x="759.4" y="501" width="7.0" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="762.39" y="511.5" ></text>
</g>
<g >
<title>unmap_page_range (39 samples, 0.06%; 0.00%)</title><rect x="1187.3" y="565" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.32" y="575.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (62 samples, 0.09%; +0.01%)</title><rect x="271.4" y="709" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="274.41" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::write (6 samples, 0.01%; -0.01%)</title><rect x="308.3" y="661" width="0.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="311.33" y="671.5" ></text>
</g>
<g >
<title>NaClCopyInFromUserAndDropLock (10 samples, 0.02%; -0.00%)</title><rect x="267.2" y="709" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="270.18" y="719.5" ></text>
</g>
<g >
<title>cpuidle_select (327 samples, 0.50%; 0.00%)</title><rect x="190.5" y="645" width="5.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.47" y="655.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (324 samples, 0.49%; 0.00%)</title><rect x="298.0" y="661" width="5.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="300.99" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (8 samples, 0.01%; 0.00%)</title><rect x="1089.4" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1092.36" y="479.5" ></text>
</g>
<g >
<title>shrink_node (7 samples, 0.01%; 0.00%)</title><rect x="141.2" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.16" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (18 samples, 0.03%; +0.00%)</title><rect x="196.5" y="645" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="199.47" y="655.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (1,805 samples, 2.75%; +0.02%)</title><rect x="215.1" y="597" width="32.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="218.15" y="607.5" >cp..</text>
</g>
<g >
<title>__wake_up (12 samples, 0.02%; 0.00%)</title><rect x="262.0" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="264.95" y="303.5" ></text>
</g>
<g >
<title>shrink_inactive_list (68 samples, 0.10%; 0.00%)</title><rect x="142.0" y="613" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.03" y="623.5" ></text>
</g>
<g >
<title>poll_idle (120 samples, 0.18%; +0.18%)</title><rect x="243.4" y="549" width="2.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="246.42" y="559.5" ></text>
</g>
<g >
<title>ktime_get (8 samples, 0.01%; +0.01%)</title><rect x="211.9" y="645" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="214.89" y="655.5" ></text>
</g>
<g >
<title>alloc_pages_vma (55 samples, 0.08%; -0.00%)</title><rect x="1155.3" y="597" width="1.0" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1158.26" y="607.5" ></text>
</g>
<g >
<title>__alloc_pages_slowpath.constprop.0 (11 samples, 0.02%; 0.00%)</title><rect x="259.4" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.41" y="287.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (2,713 samples, 4.14%; 0.00%)</title><rect x="710.5" y="501" width="48.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.53" y="511.5" >ring..</text>
</g>
<g >
<title>core::sync::atomic::atomic_store (8 samples, 0.01%; +0.01%)</title><rect x="710.4" y="485" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="713.39" y="495.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (16 samples, 0.02%; 0.00%)</title><rect x="1089.5" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1092.51" y="463.5" ></text>
</g>
<g >
<title>lind_write (11 samples, 0.02%; +0.01%)</title><rect x="1102.8" y="645" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1105.78" y="655.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (2,824 samples, 4.31%; +0.10%)</title><rect x="146.0" y="661" width="50.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="148.99" y="671.5" >cpuid..</text>
</g>
<g >
<title>generic_exec_single (67 samples, 0.10%; +0.01%)</title><rect x="208.0" y="549" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="210.96" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (10 samples, 0.02%; +0.02%)</title><rect x="195.9" y="549" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="198.88" y="559.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (622 samples, 0.95%; 0.00%)</title><rect x="254.5" y="405" width="11.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.51" y="415.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (452 samples, 0.69%; -0.00%)</title><rect x="774.4" y="645" width="8.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="777.36" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (694 samples, 1.06%; +0.00%)</title><rect x="1090.1" y="565" width="12.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1093.07" y="575.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (780 samples, 1.19%; +0.11%)</title><rect x="289.8" y="709" width="14.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="292.78" y="719.5" ></text>
</g>
<g >
<title>sched_clock_cpu (16 samples, 0.02%; +0.00%)</title><rect x="212.3" y="629" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="215.34" y="639.5" ></text>
</g>
<g >
<title>cmd_record (794 samples, 1.21%; 0.00%)</title><rect x="251.6" y="709" width="14.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.58" y="719.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (7 samples, 0.01%; 0.00%)</title><rect x="265.9" y="581" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="268.88" y="591.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (83 samples, 0.13%; +0.05%)</title><rect x="991.0" y="469" width="1.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="994.01" y="479.5" ></text>
</g>
<g >
<title>NaClSysWrite (18,747 samples, 28.61%; -0.02%)</title><rect x="786.1" y="677" width="337.6" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="789.08" y="687.5" >NaClSysWrite</text>
</g>
<g >
<title>__free_one_page (9 samples, 0.01%; +0.01%)</title><rect x="142.6" y="533" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="145.62" y="543.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (6 samples, 0.01%; +0.01%)</title><rect x="205.9" y="549" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="208.93" y="559.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (22 samples, 0.03%; 0.00%)</title><rect x="1187.6" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1190.60" y="527.5" ></text>
</g>
<g >
<title>__lock_text_start (10 samples, 0.02%; +0.02%)</title><rect x="194.2" y="581" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="197.18" y="591.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (416 samples, 0.63%; +0.16%)</title><rect x="985.3" y="517" width="7.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="988.25" y="527.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (42 samples, 0.06%; 0.00%)</title><rect x="150.4" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.38" y="431.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (137 samples, 0.21%; 0.00%)</title><rect x="208.0" y="565" width="2.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="210.96" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (13 samples, 0.02%; 0.00%)</title><rect x="196.6" y="629" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="199.56" y="639.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (13 samples, 0.02%; 0.00%)</title><rect x="1117.3" y="645" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1120.31" y="655.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (30 samples, 0.05%; 0.00%)</title><rect x="989.2" y="501" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="992.19" y="511.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (46 samples, 0.07%; 0.00%)</title><rect x="148.0" y="533" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.97" y="543.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (44 samples, 0.07%; 0.00%)</title><rect x="1044.5" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1047.47" y="479.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (207 samples, 0.32%; 0.00%)</title><rect x="819.0" y="581" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="821.99" y="591.5" ></text>
</g>
<g >
<title>cpuidle_enter (44 samples, 0.07%; -0.00%)</title><rect x="1189.1" y="645" width="0.8" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1192.08" y="655.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (11 samples, 0.02%; +0.02%)</title><rect x="250.0" y="469" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="252.96" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (17 samples, 0.03%; -0.00%)</title><rect x="1089.1" y="469" width="0.3" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1092.06" y="479.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (8 samples, 0.01%; +0.01%)</title><rect x="191.6" y="613" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="194.64" y="623.5" ></text>
</g>
<g >
<title>__GI___poll (55 samples, 0.08%; +0.00%)</title><rect x="253.1" y="661" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="256.06" y="671.5" ></text>
</g>
<g >
<title>do_shrink_slab (8 samples, 0.01%; 0.00%)</title><rect x="1155.5" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.48" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter (2,394 samples, 3.65%; +0.01%)</title><rect x="147.2" y="645" width="43.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="150.23" y="655.5" >cpui..</text>
</g>
<g >
<title>ktime_get (12 samples, 0.02%; +0.02%)</title><rect x="213.0" y="645" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="216.04" y="655.5" ></text>
</g>
<g >
<title>file_update_time (6 samples, 0.01%; 0.00%)</title><rect x="254.6" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.55" y="367.5" ></text>
</g>
<g >
<title>list_lru_walk_one_irq (6 samples, 0.01%; 0.00%)</title><rect x="141.2" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.18" y="415.5" ></text>
</g>
<g >
<title>NaClFastMutexUnlock (389 samples, 0.59%; +0.02%)</title><rect x="1110.5" y="661" width="7.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1113.54" y="671.5" ></text>
</g>
<g >
<title>idle_cpu (12 samples, 0.02%; +0.02%)</title><rect x="206.1" y="565" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="209.05" y="575.5" ></text>
</g>
<g >
<title>NaClLog (13 samples, 0.02%; +0.00%)</title><rect x="311.3" y="709" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="314.26" y="719.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (13 samples, 0.02%; +0.02%)</title><rect x="1005.1" y="501" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1008.11" y="511.5" ></text>
</g>
<g >
<title>update_process_times (6 samples, 0.01%; 0.00%)</title><rect x="151.5" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.52" y="479.5" ></text>
</g>
<g >
<title>NaClUserToSysAddrRange (12 samples, 0.02%; -0.01%)</title><rect x="269.5" y="709" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="272.48" y="719.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (11 samples, 0.02%; +0.00%)</title><rect x="247.0" y="533" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="249.97" y="543.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::borrow (15 samples, 0.02%; 0.00%)</title><rect x="1089.8" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1092.80" y="575.5" ></text>
</g>
<g >
<title>sched_clock_cpu (14 samples, 0.02%; +0.00%)</title><rect x="245.7" y="549" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="248.74" y="559.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (90 samples, 0.14%; +0.02%)</title><rect x="248.8" y="533" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="251.79" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (207 samples, 0.32%; 0.00%)</title><rect x="819.0" y="597" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="821.99" y="607.5" ></text>
</g>
<g >
<title>quiet_vmstat (6 samples, 0.01%; 0.00%)</title><rect x="196.7" y="613" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="199.69" y="623.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (15 samples, 0.02%; +0.02%)</title><rect x="1087.1" y="453" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1090.13" y="463.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (45 samples, 0.07%; +0.01%)</title><rect x="1081.6" y="485" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1084.60" y="495.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::MovableRWLock::write (396 samples, 0.60%; -0.00%)</title><rect x="1073.5" y="549" width="7.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1076.48" y="559.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (13 samples, 0.02%; +0.02%)</title><rect x="984.7" y="533" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="987.73" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (1,146 samples, 1.75%; +0.01%)</title><rect x="1052.4" y="533" width="20.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1055.43" y="543.5" ></text>
</g>
<g >
<title>try_to_wake_up (12 samples, 0.02%; +0.00%)</title><rect x="151.2" y="469" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="154.25" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (668 samples, 1.02%; -0.02%)</title><rect x="1053.0" y="517" width="12.1" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="1056.04" y="527.5" ></text>
</g>
<g >
<title>free_unref_page_commit (6 samples, 0.01%; +0.00%)</title><rect x="1187.9" y="453" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1190.87" y="463.5" ></text>
</g>
<g >
<title>NaClStackSafetyNowOnTrustedStack (13 samples, 0.02%; +0.01%)</title><rect x="1159.3" y="709" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1162.31" y="719.5" ></text>
</g>
<g >
<title>shrink_node_memcgs (9 samples, 0.01%; 0.00%)</title><rect x="1155.5" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.46" y="495.5" ></text>
</g>
<g >
<title>[unknown] (794 samples, 1.21%; 0.00%)</title><rect x="251.6" y="725" width="14.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.58" y="735.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (86 samples, 0.13%; 0.00%)</title><rect x="1005.3" y="533" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1008.35" y="543.5" ></text>
</g>
<g >
<title>try_to_free_pages (11 samples, 0.02%; 0.00%)</title><rect x="259.4" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.41" y="271.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%; 0.00%)</title><rect x="288.4" y="677" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="291.35" y="687.5" ></text>
</g>
<g >
<title>udp_v4_early_demux (6 samples, 0.01%; +0.00%)</title><rect x="150.5" y="341" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="153.53" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (801 samples, 1.22%; 0.00%)</title><rect x="1037.2" y="549" width="14.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1040.15" y="559.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_store (25 samples, 0.04%; +0.03%)</title><rect x="990.3" y="485" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="993.29" y="495.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (33 samples, 0.05%; 0.00%)</title><rect x="1185.4" y="693" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1188.43" y="703.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (22 samples, 0.03%; 0.00%)</title><rect x="288.8" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="291.79" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (79 samples, 0.12%; 0.00%)</title><rect x="251.6" y="581" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="254.62" y="591.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (108 samples, 0.16%; +0.04%)</title><rect x="655.2" y="469" width="1.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="658.19" y="479.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (22,528 samples, 34.38%; 0.00%)</title><rect x="364.9" y="581" width="405.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.86" y="591.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl rustpos..</text>
</g>
<g >
<title>menu_select (77 samples, 0.12%; +0.02%)</title><rect x="246.1" y="565" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="249.09" y="575.5" ></text>
</g>
<g >
<title>ip6_list_rcv_finish.constprop.0 (6 samples, 0.01%; +0.00%)</title><rect x="151.0" y="373" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="154.01" y="383.5" ></text>
</g>
<g >
<title>std::sync::poison::Flag::get (69 samples, 0.11%; 0.00%)</title><rect x="1005.3" y="501" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1008.35" y="511.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (26 samples, 0.04%; 0.00%)</title><rect x="151.2" y="565" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.21" y="575.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (30 samples, 0.05%; +0.02%)</title><rect x="989.2" y="469" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="992.19" y="479.5" ></text>
</g>
<g >
<title>pick_next_task_fair (111 samples, 0.17%; +0.00%)</title><rect x="248.4" y="565" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="251.45" y="575.5" ></text>
</g>
<g >
<title>ext4_da_reserve_space (10 samples, 0.02%; +0.00%)</title><rect x="257.1" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="260.11" y="287.5" ></text>
</g>
<g >
<title>record__pushfn (640 samples, 0.98%; 0.00%)</title><rect x="254.2" y="629" width="11.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="257.24" y="639.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (22 samples, 0.03%; +0.01%)</title><rect x="1187.6" y="501" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1190.60" y="511.5" ></text>
</g>
<g >
<title>__cmd_record (794 samples, 1.21%; +0.00%)</title><rect x="251.6" y="693" width="14.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="254.58" y="703.5" ></text>
</g>
<g >
<title>NaClXMutexUnlock (11 samples, 0.02%; -0.01%)</title><rect x="270.0" y="709" width="0.2" height="15.0" fill="rgb(209,209,255)" rx="2" ry="2" />
<text  x="273.02" y="719.5" ></text>
</g>
<g >
<title>sync_regs (16 samples, 0.02%; +0.00%)</title><rect x="1157.0" y="709" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1160.02" y="719.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt;&gt; (654 samples, 1.00%; 0.00%)</title><rect x="879.0" y="565" width="11.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.03" y="575.5" ></text>
</g>
<g >
<title>lru_cache_add (28 samples, 0.04%; +0.01%)</title><rect x="258.7" y="293" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="261.68" y="303.5" ></text>
</g>
<g >
<title>__pollwait (8 samples, 0.01%; 0.00%)</title><rect x="141.2" y="629" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.16" y="639.5" ></text>
</g>
</g>
</svg>
