<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1622" onload="init(evt)" viewBox="0 0 1200 1622" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1622.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1605" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1605" > </text>
<g id="frames">
<g >
<title>__do_munmap (1 samples, 0.09%)</title><rect x="120.8" y="1333" width="1.1" height="15.0" fill="rgb(211,15,4)" rx="2" ry="2" />
<text  x="123.82" y="1343.5" ></text>
</g>
<g >
<title>flush_smp_call_function_from_idle (8 samples, 0.72%)</title><rect x="1159.4" y="1477" width="8.4" height="15.0" fill="rgb(249,144,6)" rx="2" ry="2" />
<text  x="1162.39" y="1487.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.09%)</title><rect x="1072.8" y="1461" width="1.1" height="15.0" fill="rgb(230,176,21)" rx="2" ry="2" />
<text  x="1075.84" y="1471.5" ></text>
</g>
<g >
<title>down_write_killable (40 samples, 3.58%)</title><rect x="204.2" y="1333" width="42.2" height="15.0" fill="rgb(211,30,25)" rx="2" ry="2" />
<text  x="207.20" y="1343.5" >dow..</text>
</g>
<g >
<title>MarkValidJumpTarget (3 samples, 0.27%)</title><rect x="145.1" y="1413" width="3.2" height="15.0" fill="rgb(215,64,25)" rx="2" ry="2" />
<text  x="148.10" y="1423.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.09%)</title><rect x="97.6" y="1317" width="1.1" height="15.0" fill="rgb(234,129,26)" rx="2" ry="2" />
<text  x="100.60" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (2 samples, 0.18%)</title><rect x="1063.3" y="1509" width="2.2" height="15.0" fill="rgb(242,171,23)" rx="2" ry="2" />
<text  x="1066.35" y="1519.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (4 samples, 0.36%)</title><rect x="246.4" y="1365" width="4.2" height="15.0" fill="rgb(210,30,18)" rx="2" ry="2" />
<text  x="249.42" y="1375.5" ></text>
</g>
<g >
<title>_perf_event_enable (76 samples, 6.80%)</title><rect x="16.3" y="1349" width="80.2" height="15.0" fill="rgb(242,31,5)" rx="2" ry="2" />
<text  x="19.33" y="1359.5" >_perf_eve..</text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (25 samples, 2.24%)</title><rect x="122.9" y="1445" width="26.4" height="15.0" fill="rgb(209,151,46)" rx="2" ry="2" />
<text  x="125.93" y="1455.5" >A..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy::{{closure}} (67 samples, 5.99%)</title><rect x="344.6" y="1365" width="70.7" height="15.0" fill="rgb(233,202,3)" rx="2" ry="2" />
<text  x="347.58" y="1375.5" >ringbuf..</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (171 samples, 15.30%)</title><rect x="456.5" y="1413" width="180.4" height="15.0" fill="rgb(227,164,20)" rx="2" ry="2" />
<text  x="459.46" y="1423.5" >ringbuf::producer::Prod..</text>
</g>
<g >
<title>perf_mmap__push (2 samples, 0.18%)</title><rect x="96.5" y="1477" width="2.2" height="15.0" fill="rgb(225,124,18)" rx="2" ry="2" />
<text  x="99.55" y="1487.5" ></text>
</g>
<g >
<title>event_function_call (76 samples, 6.80%)</title><rect x="16.3" y="1333" width="80.2" height="15.0" fill="rgb(213,197,15)" rx="2" ry="2" />
<text  x="19.33" y="1343.5" >event_fun..</text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (1 samples, 0.09%)</title><rect x="1030.6" y="1125" width="1.1" height="15.0" fill="rgb(240,164,30)" rx="2" ry="2" />
<text  x="1033.63" y="1135.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.27%)</title><rect x="1003.2" y="1477" width="3.2" height="15.0" fill="rgb(241,171,18)" rx="2" ry="2" />
<text  x="1006.18" y="1487.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.09%)</title><rect x="1072.8" y="1429" width="1.1" height="15.0" fill="rgb(209,1,25)" rx="2" ry="2" />
<text  x="1075.84" y="1439.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.09%)</title><rect x="270.7" y="1093" width="1.1" height="15.0" fill="rgb(221,219,46)" rx="2" ry="2" />
<text  x="273.70" y="1103.5" ></text>
</g>
<g >
<title>pmd_val (1 samples, 0.09%)</title><rect x="980.0" y="1461" width="1.0" height="15.0" fill="rgb(205,89,46)" rx="2" ry="2" />
<text  x="982.96" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1006.4" y="1477" width="1.0" height="15.0" fill="rgb(221,218,46)" rx="2" ry="2" />
<text  x="1009.35" y="1487.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast (1 samples, 0.09%)</title><rect x="198.9" y="1381" width="1.1" height="15.0" fill="rgb(244,106,7)" rx="2" ry="2" />
<text  x="201.93" y="1391.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.09%)</title><rect x="1064.4" y="1397" width="1.1" height="15.0" fill="rgb(214,155,48)" rx="2" ry="2" />
<text  x="1067.40" y="1407.5" ></text>
</g>
<g >
<title>handle_mm_fault (111 samples, 9.93%)</title><rect x="863.9" y="1477" width="117.1" height="15.0" fill="rgb(225,57,32)" rx="2" ry="2" />
<text  x="866.86" y="1487.5" >handle_mm_fault</text>
</g>
<g >
<title>path_put (1 samples, 0.09%)</title><rect x="1030.6" y="69" width="1.1" height="15.0" fill="rgb(211,223,32)" rx="2" ry="2" />
<text  x="1033.63" y="79.5" ></text>
</g>
<g >
<title>__do_munmap (39 samples, 3.49%)</title><rect x="250.6" y="1253" width="41.2" height="15.0" fill="rgb(225,89,45)" rx="2" ry="2" />
<text  x="253.64" y="1263.5" >__d..</text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (2 samples, 0.18%)</title><rect x="301.3" y="1413" width="2.1" height="15.0" fill="rgb(248,43,25)" rx="2" ry="2" />
<text  x="304.31" y="1423.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::available_parallelism (1 samples, 0.09%)</title><rect x="1030.6" y="293" width="1.1" height="15.0" fill="rgb(250,147,29)" rx="2" ry="2" />
<text  x="1033.63" y="303.5" ></text>
</g>
<g >
<title>vfs_iter_write (1 samples, 0.09%)</title><rect x="97.6" y="1285" width="1.1" height="15.0" fill="rgb(216,222,39)" rx="2" ry="2" />
<text  x="100.60" y="1295.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.09%)</title><rect x="149.3" y="1237" width="1.1" height="15.0" fill="rgb(217,143,15)" rx="2" ry="2" />
<text  x="152.32" y="1247.5" ></text>
</g>
<g >
<title>NaClAppDtor (41 samples, 3.67%)</title><rect x="203.1" y="1445" width="43.3" height="15.0" fill="rgb(210,207,37)" rx="2" ry="2" />
<text  x="206.15" y="1455.5" >NaCl..</text>
</g>
<g >
<title>dispatcher (116 samples, 10.38%)</title><rect x="292.9" y="1461" width="122.4" height="15.0" fill="rgb(246,64,53)" rx="2" ry="2" />
<text  x="295.86" y="1471.5" >dispatcher</text>
</g>
<g >
<title>lindrustfinalize (4 samples, 0.36%)</title><rect x="1026.4" y="1461" width="4.2" height="15.0" fill="rgb(223,33,51)" rx="2" ry="2" />
<text  x="1029.40" y="1471.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.09%)</title><rect x="975.7" y="1397" width="1.1" height="15.0" fill="rgb(252,137,43)" rx="2" ry="2" />
<text  x="978.74" y="1407.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.09%)</title><rect x="120.8" y="1237" width="1.1" height="15.0" fill="rgb(252,169,15)" rx="2" ry="2" />
<text  x="123.82" y="1247.5" ></text>
</g>
<g >
<title>ftruncate64 (1 samples, 0.09%)</title><rect x="1026.4" y="1349" width="1.1" height="15.0" fill="rgb(227,13,9)" rx="2" ry="2" />
<text  x="1029.40" y="1359.5" ></text>
</g>
<g >
<title>__pagevec_release (1 samples, 0.09%)</title><rect x="1026.4" y="1141" width="1.1" height="15.0" fill="rgb(232,151,23)" rx="2" ry="2" />
<text  x="1029.40" y="1151.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.09%)</title><rect x="101.8" y="1525" width="1.1" height="15.0" fill="rgb(236,106,27)" rx="2" ry="2" />
<text  x="104.82" y="1535.5" ></text>
</g>
<g >
<title>sel_ldr (916 samples, 81.93%)</title><rect x="98.7" y="1557" width="966.8" height="15.0" fill="rgb(252,23,30)" rx="2" ry="2" />
<text  x="101.66" y="1567.5" >sel_ldr</text>
</g>
<g >
<title>&lt;dashmap::serde::DashMapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.09%)</title><rect x="1030.6" y="885" width="1.1" height="15.0" fill="rgb(205,119,13)" rx="2" ry="2" />
<text  x="1033.63" y="895.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (1 samples, 0.09%)</title><rect x="1030.6" y="933" width="1.1" height="15.0" fill="rgb(242,118,46)" rx="2" ry="2" />
<text  x="1033.63" y="943.5" ></text>
</g>
<g >
<title>NaClDescUnmapUnsafe (1 samples, 0.09%)</title><rect x="120.8" y="1429" width="1.1" height="15.0" fill="rgb(215,100,9)" rx="2" ry="2" />
<text  x="123.82" y="1439.5" ></text>
</g>
<g >
<title>cpuidle_enter (69 samples, 6.17%)</title><rect x="1075.0" y="1461" width="72.8" height="15.0" fill="rgb(225,184,40)" rx="2" ry="2" />
<text  x="1077.96" y="1471.5" >cpuidle_..</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.09%)</title><rect x="121.9" y="1365" width="1.0" height="15.0" fill="rgb(219,45,32)" rx="2" ry="2" />
<text  x="124.88" y="1375.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::FS_METADATA::{{closure}} (1 samples, 0.09%)</title><rect x="1030.6" y="1221" width="1.1" height="15.0" fill="rgb(225,150,26)" rx="2" ry="2" />
<text  x="1033.63" y="1231.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.27%)</title><rect x="1003.2" y="1173" width="3.2" height="15.0" fill="rgb(237,129,34)" rx="2" ry="2" />
<text  x="1006.18" y="1183.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::truncate::{{closure}} (1 samples, 0.09%)</title><rect x="1026.4" y="1365" width="1.1" height="15.0" fill="rgb(246,130,2)" rx="2" ry="2" />
<text  x="1029.40" y="1375.5" ></text>
</g>
<g >
<title>NaClCopyDynamicTextAndVmmap (4 samples, 0.36%)</title><rect x="1003.2" y="1525" width="4.2" height="15.0" fill="rgb(228,206,0)" rx="2" ry="2" />
<text  x="1006.18" y="1535.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.09%)</title><rect x="1030.6" y="437" width="1.1" height="15.0" fill="rgb(219,180,19)" rx="2" ry="2" />
<text  x="1033.63" y="447.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="859.6" y="1461" width="1.1" height="15.0" fill="rgb(206,76,1)" rx="2" ry="2" />
<text  x="862.64" y="1471.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (12 samples, 1.07%)</title><rect x="479.7" y="1349" width="12.6" height="15.0" fill="rgb(212,137,23)" rx="2" ry="2" />
<text  x="482.68" y="1359.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (1 samples, 0.09%)</title><rect x="1181.6" y="1477" width="1.0" height="15.0" fill="rgb(252,16,43)" rx="2" ry="2" />
<text  x="1184.56" y="1487.5" ></text>
</g>
<g >
<title>NaClSysWrite (331 samples, 29.61%)</title><rect x="415.3" y="1493" width="349.4" height="15.0" fill="rgb(232,199,37)" rx="2" ry="2" />
<text  x="418.30" y="1503.5" >NaClSysWrite</text>
</g>
<g >
<title>free_pages_and_swap_cache (23 samples, 2.06%)</title><rect x="267.5" y="1125" width="24.3" height="15.0" fill="rgb(227,157,40)" rx="2" ry="2" />
<text  x="270.53" y="1135.5" >f..</text>
</g>
<g >
<title>core::cmp::min (17 samples, 1.52%)</title><rect x="434.3" y="1413" width="17.9" height="15.0" fill="rgb(251,100,22)" rx="2" ry="2" />
<text  x="437.29" y="1423.5" ></text>
</g>
<g >
<title>NaClValidateImage (2 samples, 0.18%)</title><rect x="1024.3" y="1413" width="2.1" height="15.0" fill="rgb(234,35,46)" rx="2" ry="2" />
<text  x="1027.29" y="1423.5" ></text>
</g>
<g >
<title>MunmapInternal (39 samples, 3.49%)</title><rect x="250.6" y="1477" width="41.2" height="15.0" fill="rgb(221,227,50)" rx="2" ry="2" />
<text  x="253.64" y="1487.5" >Mun..</text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.09%)</title><rect x="1076.0" y="1173" width="1.1" height="15.0" fill="rgb(230,58,18)" rx="2" ry="2" />
<text  x="1079.01" y="1183.5" ></text>
</g>
<g >
<title>__munmap (41 samples, 3.67%)</title><rect x="203.1" y="1413" width="43.3" height="15.0" fill="rgb(220,62,54)" rx="2" ry="2" />
<text  x="206.15" y="1423.5" >__mu..</text>
</g>
<g >
<title>[libc.so.6] (16 samples, 1.43%)</title><rect x="1007.4" y="1525" width="16.9" height="15.0" fill="rgb(206,220,7)" rx="2" ry="2" />
<text  x="1010.41" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (47 samples, 4.20%)</title><rect x="149.3" y="1381" width="49.6" height="15.0" fill="rgb(212,19,3)" rx="2" ry="2" />
<text  x="152.32" y="1391.5" >entry..</text>
</g>
<g >
<title>NaClSysExitDecoder (41 samples, 3.67%)</title><rect x="203.1" y="1509" width="43.3" height="15.0" fill="rgb(223,44,6)" rx="2" ry="2" />
<text  x="206.15" y="1519.5" >NaCl..</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_slice (10 samples, 0.89%)</title><rect x="102.9" y="1509" width="10.5" height="15.0" fill="rgb(214,122,5)" rx="2" ry="2" />
<text  x="105.88" y="1519.5" ></text>
</g>
<g >
<title>[perf-11856.map] (1 samples, 0.09%)</title><rect x="113.4" y="1541" width="1.1" height="15.0" fill="rgb(244,64,31)" rx="2" ry="2" />
<text  x="116.43" y="1551.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.27%)</title><rect x="1003.2" y="1141" width="3.2" height="15.0" fill="rgb(230,183,23)" rx="2" ry="2" />
<text  x="1006.18" y="1151.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::truncate (1 samples, 0.09%)</title><rect x="1026.4" y="1397" width="1.1" height="15.0" fill="rgb(205,206,44)" rx="2" ry="2" />
<text  x="1029.40" y="1407.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (63 samples, 5.64%)</title><rect x="880.8" y="1397" width="66.4" height="15.0" fill="rgb(247,95,43)" rx="2" ry="2" />
<text  x="883.75" y="1407.5" >__alloc..</text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.18%)</title><rect x="1028.5" y="1333" width="2.1" height="15.0" fill="rgb(233,59,25)" rx="2" ry="2" />
<text  x="1031.52" y="1343.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.09%)</title><rect x="1064.4" y="1429" width="1.1" height="15.0" fill="rgb(224,50,11)" rx="2" ry="2" />
<text  x="1067.40" y="1439.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (23 samples, 2.06%)</title><rect x="267.5" y="1141" width="24.3" height="15.0" fill="rgb(220,153,1)" rx="2" ry="2" />
<text  x="270.53" y="1151.5" >t..</text>
</g>
<g >
<title>insert_work (1 samples, 0.09%)</title><rect x="1076.0" y="1253" width="1.1" height="15.0" fill="rgb(251,62,26)" rx="2" ry="2" />
<text  x="1079.01" y="1263.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.09%)</title><rect x="1030.6" y="1141" width="1.1" height="15.0" fill="rgb(211,91,7)" rx="2" ry="2" />
<text  x="1033.63" y="1151.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_inner (1 samples, 0.09%)</title><rect x="1030.6" y="1333" width="1.1" height="15.0" fill="rgb(243,137,7)" rx="2" ry="2" />
<text  x="1033.63" y="1343.5" ></text>
</g>
<g >
<title>swapper (118 samples, 10.55%)</title><rect x="1065.5" y="1557" width="124.5" height="15.0" fill="rgb(232,132,43)" rx="2" ry="2" />
<text  x="1068.46" y="1567.5" >swapper</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize (1 samples, 0.09%)</title><rect x="1030.6" y="805" width="1.1" height="15.0" fill="rgb(243,153,24)" rx="2" ry="2" />
<text  x="1033.63" y="815.5" ></text>
</g>
<g >
<title>cpu_startup_entry (105 samples, 9.39%)</title><rect x="1073.9" y="1509" width="110.8" height="15.0" fill="rgb(221,219,52)" rx="2" ry="2" />
<text  x="1076.90" y="1519.5" >cpu_startup_e..</text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (3 samples, 0.27%)</title><rect x="1003.2" y="1413" width="3.2" height="15.0" fill="rgb(236,218,27)" rx="2" ry="2" />
<text  x="1006.18" y="1423.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="1072.8" y="1445" width="1.1" height="15.0" fill="rgb(215,132,31)" rx="2" ry="2" />
<text  x="1075.84" y="1455.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (17 samples, 1.52%)</title><rect x="461.7" y="1349" width="18.0" height="15.0" fill="rgb(216,11,39)" rx="2" ry="2" />
<text  x="464.74" y="1359.5" ></text>
</g>
<g >
<title>__do_sys_clone (1 samples, 0.09%)</title><rect x="10.0" y="1317" width="1.1" height="15.0" fill="rgb(205,196,33)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (42 samples, 3.76%)</title><rect x="1077.1" y="1429" width="44.3" height="15.0" fill="rgb(246,184,25)" rx="2" ry="2" />
<text  x="1080.07" y="1439.5" >mwai..</text>
</g>
<g >
<title>shmem_getpage_gfp (3 samples, 0.27%)</title><rect x="1003.2" y="1221" width="3.2" height="15.0" fill="rgb(210,121,30)" rx="2" ry="2" />
<text  x="1006.18" y="1231.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (4 samples, 0.36%)</title><rect x="246.4" y="1381" width="4.2" height="15.0" fill="rgb(210,73,6)" rx="2" ry="2" />
<text  x="249.42" y="1391.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.18%)</title><rect x="1003.2" y="1125" width="2.1" height="15.0" fill="rgb(233,104,26)" rx="2" ry="2" />
<text  x="1006.18" y="1135.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (6 samples, 0.54%)</title><rect x="1159.4" y="1461" width="6.3" height="15.0" fill="rgb(213,38,29)" rx="2" ry="2" />
<text  x="1162.39" y="1471.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (1 samples, 0.09%)</title><rect x="11.1" y="1509" width="1.0" height="15.0" fill="rgb(215,147,46)" rx="2" ry="2" />
<text  x="14.06" y="1519.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.09%)</title><rect x="921.9" y="1221" width="1.1" height="15.0" fill="rgb(242,69,27)" rx="2" ry="2" />
<text  x="924.91" y="1231.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.09%)</title><rect x="1064.4" y="1349" width="1.1" height="15.0" fill="rgb(206,221,29)" rx="2" ry="2" />
<text  x="1067.40" y="1359.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (3 samples, 0.27%)</title><rect x="947.2" y="1413" width="3.2" height="15.0" fill="rgb(250,168,15)" rx="2" ry="2" />
<text  x="950.25" y="1423.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="1025.3" y="1317" width="1.1" height="15.0" fill="rgb(220,184,31)" rx="2" ry="2" />
<text  x="1028.35" y="1327.5" ></text>
</g>
<g >
<title>unmap_page_range (3 samples, 0.27%)</title><rect x="150.4" y="1253" width="3.1" height="15.0" fill="rgb(251,136,42)" rx="2" ry="2" />
<text  x="153.38" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.27%)</title><rect x="1003.2" y="1461" width="3.2" height="15.0" fill="rgb(209,79,13)" rx="2" ry="2" />
<text  x="1006.18" y="1471.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (14 samples, 1.25%)</title><rect x="437.5" y="1381" width="14.7" height="15.0" fill="rgb(239,132,45)" rx="2" ry="2" />
<text  x="440.46" y="1391.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.09%)</title><rect x="296.0" y="1317" width="1.1" height="15.0" fill="rgb(242,203,48)" rx="2" ry="2" />
<text  x="299.03" y="1327.5" ></text>
</g>
<g >
<title>__cmd_record (82 samples, 7.33%)</title><rect x="12.1" y="1525" width="86.6" height="15.0" fill="rgb(253,151,2)" rx="2" ry="2" />
<text  x="15.11" y="1535.5" >__cmd_record</text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::ser::Serialize for dashmap::DashMap&lt;K,V,H&gt;&gt;::serialize (3 samples, 0.27%)</title><rect x="1027.5" y="1349" width="3.1" height="15.0" fill="rgb(208,227,30)" rx="2" ry="2" />
<text  x="1030.46" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (39 samples, 3.49%)</title><rect x="250.6" y="1349" width="41.2" height="15.0" fill="rgb(230,17,22)" rx="2" ry="2" />
<text  x="253.64" y="1359.5" >do_..</text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.09%)</title><rect x="1157.3" y="1397" width="1.0" height="15.0" fill="rgb(225,119,54)" rx="2" ry="2" />
<text  x="1160.28" y="1407.5" ></text>
</g>
<g >
<title>page_remove_file_rmap (1 samples, 0.09%)</title><rect x="152.5" y="1189" width="1.0" height="15.0" fill="rgb(215,203,25)" rx="2" ry="2" />
<text  x="155.49" y="1199.5" ></text>
</g>
<g >
<title>core::cmp::min_by (3 samples, 0.27%)</title><rect x="434.3" y="1381" width="3.2" height="15.0" fill="rgb(227,229,47)" rx="2" ry="2" />
<text  x="437.29" y="1391.5" ></text>
</g>
<g >
<title>__activate_page (1 samples, 0.09%)</title><rect x="151.4" y="1157" width="1.1" height="15.0" fill="rgb(238,24,22)" rx="2" ry="2" />
<text  x="154.43" y="1167.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.09%)</title><rect x="203.1" y="1317" width="1.1" height="15.0" fill="rgb(211,124,22)" rx="2" ry="2" />
<text  x="206.15" y="1327.5" ></text>
</g>
<g >
<title>pmd_pfn (1 samples, 0.09%)</title><rect x="977.9" y="1413" width="1.0" height="15.0" fill="rgb(219,148,44)" rx="2" ry="2" />
<text  x="980.85" y="1423.5" ></text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (12 samples, 1.07%)</title><rect x="479.7" y="1365" width="12.6" height="15.0" fill="rgb(241,150,13)" rx="2" ry="2" />
<text  x="482.68" y="1375.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.09%)</title><rect x="290.8" y="1093" width="1.0" height="15.0" fill="rgb(253,169,39)" rx="2" ry="2" />
<text  x="293.75" y="1103.5" ></text>
</g>
<g >
<title>unmap_vmas (3 samples, 0.27%)</title><rect x="150.4" y="1285" width="3.1" height="15.0" fill="rgb(243,64,12)" rx="2" ry="2" />
<text  x="153.38" y="1295.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.27%)</title><rect x="956.7" y="1349" width="3.2" height="15.0" fill="rgb(252,58,46)" rx="2" ry="2" />
<text  x="959.74" y="1359.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.09%)</title><rect x="97.6" y="1253" width="1.1" height="15.0" fill="rgb(233,135,36)" rx="2" ry="2" />
<text  x="100.60" y="1263.5" ></text>
</g>
<g >
<title>rest_init (5 samples, 0.45%)</title><rect x="1184.7" y="1461" width="5.3" height="15.0" fill="rgb(234,92,4)" rx="2" ry="2" />
<text  x="1187.72" y="1471.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="198.9" y="1269" width="1.1" height="15.0" fill="rgb(228,215,9)" rx="2" ry="2" />
<text  x="201.93" y="1279.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.09%)</title><rect x="1075.0" y="1317" width="1.0" height="15.0" fill="rgb(232,175,13)" rx="2" ry="2" />
<text  x="1077.96" y="1327.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.09%)</title><rect x="120.8" y="1157" width="1.1" height="15.0" fill="rgb(209,93,22)" rx="2" ry="2" />
<text  x="123.82" y="1167.5" ></text>
</g>
<g >
<title>main (1 samples, 0.09%)</title><rect x="10.0" y="1493" width="1.1" height="15.0" fill="rgb(211,229,50)" rx="2" ry="2" />
<text  x="13.00" y="1503.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.09%)</title><rect x="152.5" y="1173" width="1.0" height="15.0" fill="rgb(208,128,42)" rx="2" ry="2" />
<text  x="155.49" y="1183.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (1 samples, 0.09%)</title><rect x="249.6" y="1349" width="1.0" height="15.0" fill="rgb(224,51,26)" rx="2" ry="2" />
<text  x="252.59" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_ftruncate (1 samples, 0.09%)</title><rect x="1026.4" y="1301" width="1.1" height="15.0" fill="rgb(253,68,13)" rx="2" ry="2" />
<text  x="1029.40" y="1311.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (95 samples, 8.50%)</title><rect x="664.4" y="1381" width="100.3" height="15.0" fill="rgb(213,165,51)" rx="2" ry="2" />
<text  x="667.38" y="1391.5" >ringbuf::rin..</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.09%)</title><rect x="859.6" y="1413" width="1.1" height="15.0" fill="rgb(242,227,19)" rx="2" ry="2" />
<text  x="862.64" y="1423.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (2 samples, 0.18%)</title><rect x="292.9" y="1333" width="2.1" height="15.0" fill="rgb(234,16,52)" rx="2" ry="2" />
<text  x="295.86" y="1343.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (2 samples, 0.18%)</title><rect x="265.4" y="1125" width="2.1" height="15.0" fill="rgb(218,87,49)" rx="2" ry="2" />
<text  x="268.42" y="1135.5" ></text>
</g>
<g >
<title>rmqueue (22 samples, 1.97%)</title><rect x="924.0" y="1365" width="23.2" height="15.0" fill="rgb(244,148,7)" rx="2" ry="2" />
<text  x="927.03" y="1375.5" >r..</text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (9 samples, 0.81%)</title><rect x="654.9" y="1365" width="9.5" height="15.0" fill="rgb(219,48,12)" rx="2" ry="2" />
<text  x="657.88" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.09%)</title><rect x="11.1" y="1541" width="1.0" height="15.0" fill="rgb(213,19,43)" rx="2" ry="2" />
<text  x="14.06" y="1551.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::try_statx (1 samples, 0.09%)</title><rect x="1030.6" y="197" width="1.1" height="15.0" fill="rgb(237,33,30)" rx="2" ry="2" />
<text  x="1033.63" y="207.5" ></text>
</g>
<g >
<title>cpumask_next (1 samples, 0.09%)</title><rect x="1176.3" y="1381" width="1.0" height="15.0" fill="rgb(224,172,20)" rx="2" ry="2" />
<text  x="1179.28" y="1391.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.09%)</title><rect x="1030.6" y="453" width="1.1" height="15.0" fill="rgb(242,73,15)" rx="2" ry="2" />
<text  x="1033.63" y="463.5" ></text>
</g>
<g >
<title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.09%)</title><rect x="1028.5" y="1157" width="1.1" height="15.0" fill="rgb(212,185,27)" rx="2" ry="2" />
<text  x="1031.52" y="1167.5" ></text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.09%)</title><rect x="416.4" y="1381" width="1.0" height="15.0" fill="rgb(235,217,18)" rx="2" ry="2" />
<text  x="419.35" y="1391.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.09%)</title><rect x="1075.0" y="1397" width="1.0" height="15.0" fill="rgb(245,67,4)" rx="2" ry="2" />
<text  x="1077.96" y="1407.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.09%)</title><rect x="203.1" y="1301" width="1.1" height="15.0" fill="rgb(230,203,43)" rx="2" ry="2" />
<text  x="206.15" y="1311.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.09%)</title><rect x="1030.6" y="613" width="1.1" height="15.0" fill="rgb(246,221,16)" rx="2" ry="2" />
<text  x="1033.63" y="623.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::FilesystemMetadata::init_fs_metadata (1 samples, 0.09%)</title><rect x="1030.6" y="1205" width="1.1" height="15.0" fill="rgb(227,26,38)" rx="2" ry="2" />
<text  x="1033.63" y="1215.5" ></text>
</g>
<g >
<title>copy_page (1 samples, 0.09%)</title><rect x="113.4" y="1413" width="1.1" height="15.0" fill="rgb(235,171,31)" rx="2" ry="2" />
<text  x="116.43" y="1423.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (4 samples, 0.36%)</title><rect x="246.4" y="1461" width="4.2" height="15.0" fill="rgb(214,227,47)" rx="2" ry="2" />
<text  x="249.42" y="1471.5" ></text>
</g>
<g >
<title>release_pages (22 samples, 1.97%)</title><rect x="268.6" y="1109" width="23.2" height="15.0" fill="rgb(230,52,50)" rx="2" ry="2" />
<text  x="271.59" y="1119.5" >r..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (1 samples, 0.09%)</title><rect x="1184.7" y="1365" width="1.1" height="15.0" fill="rgb(252,54,52)" rx="2" ry="2" />
<text  x="1187.72" y="1375.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="1025.3" y="1269" width="1.1" height="15.0" fill="rgb(241,152,44)" rx="2" ry="2" />
<text  x="1028.35" y="1279.5" ></text>
</g>
<g >
<title>menu_select (9 samples, 0.81%)</title><rect x="1148.8" y="1445" width="9.5" height="15.0" fill="rgb(237,184,30)" rx="2" ry="2" />
<text  x="1151.84" y="1455.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.09%)</title><rect x="978.9" y="1429" width="1.1" height="15.0" fill="rgb(207,31,47)" rx="2" ry="2" />
<text  x="981.91" y="1439.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.09%)</title><rect x="1006.4" y="1365" width="1.0" height="15.0" fill="rgb(236,159,40)" rx="2" ry="2" />
<text  x="1009.35" y="1375.5" ></text>
</g>
<g >
<title>NaClValidateCode (25 samples, 2.24%)</title><rect x="122.9" y="1461" width="26.4" height="15.0" fill="rgb(210,32,24)" rx="2" ry="2" />
<text  x="125.93" y="1471.5" >N..</text>
</g>
<g >
<title>handle_pte_fault (104 samples, 9.30%)</title><rect x="870.2" y="1445" width="109.8" height="15.0" fill="rgb(234,149,53)" rx="2" ry="2" />
<text  x="873.20" y="1455.5" >handle_pte_fa..</text>
</g>
<g >
<title>uncharge_page (1 samples, 0.09%)</title><rect x="290.8" y="1077" width="1.0" height="15.0" fill="rgb(218,81,50)" rx="2" ry="2" />
<text  x="293.75" y="1087.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.09%)</title><rect x="1156.2" y="1397" width="1.1" height="15.0" fill="rgb(217,7,22)" rx="2" ry="2" />
<text  x="1159.23" y="1407.5" ></text>
</g>
<g >
<title>ctx_resched (70 samples, 6.26%)</title><rect x="22.7" y="1237" width="73.8" height="15.0" fill="rgb(216,214,39)" rx="2" ry="2" />
<text  x="25.67" y="1247.5" >ctx_resc..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;i32,dashmap::util::SharedValue&lt;alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="416.4" y="1413" width="1.0" height="15.0" fill="rgb(244,89,22)" rx="2" ry="2" />
<text  x="419.35" y="1423.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (1 samples, 0.09%)</title><rect x="1026.4" y="1157" width="1.1" height="15.0" fill="rgb(221,85,35)" rx="2" ry="2" />
<text  x="1029.40" y="1167.5" ></text>
</g>
<g >
<title>down_read_trylock (2 samples, 0.18%)</title><rect x="860.7" y="1477" width="2.1" height="15.0" fill="rgb(229,33,43)" rx="2" ry="2" />
<text  x="863.70" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (47 samples, 4.20%)</title><rect x="149.3" y="1349" width="49.6" height="15.0" fill="rgb(249,105,19)" rx="2" ry="2" />
<text  x="152.32" y="1359.5" >__x64..</text>
</g>
<g >
<title>rcu_idle_exit (2 samples, 0.18%)</title><rect x="1145.7" y="1429" width="2.1" height="15.0" fill="rgb(215,80,53)" rx="2" ry="2" />
<text  x="1148.67" y="1439.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.09%)</title><rect x="1155.2" y="1397" width="1.0" height="15.0" fill="rgb(236,36,17)" rx="2" ry="2" />
<text  x="1158.17" y="1407.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="113.4" y="1477" width="1.1" height="15.0" fill="rgb(232,184,21)" rx="2" ry="2" />
<text  x="116.43" y="1487.5" ></text>
</g>
<g >
<title>__get_user_pages (3 samples, 0.27%)</title><rect x="1003.2" y="1349" width="3.2" height="15.0" fill="rgb(213,57,52)" rx="2" ry="2" />
<text  x="1006.18" y="1359.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.09%)</title><rect x="1030.6" y="1061" width="1.1" height="15.0" fill="rgb(244,106,40)" rx="2" ry="2" />
<text  x="1033.63" y="1071.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (4 samples, 0.36%)</title><rect x="1184.7" y="1381" width="4.2" height="15.0" fill="rgb(235,123,36)" rx="2" ry="2" />
<text  x="1187.72" y="1391.5" ></text>
</g>
<g >
<title>NaClSysMunmap (39 samples, 3.49%)</title><rect x="250.6" y="1493" width="41.2" height="15.0" fill="rgb(254,76,28)" rx="2" ry="2" />
<text  x="253.64" y="1503.5" >NaC..</text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.09%)</title><rect x="120.8" y="1365" width="1.1" height="15.0" fill="rgb(245,151,37)" rx="2" ry="2" />
<text  x="123.82" y="1375.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read_to_end (1 samples, 0.09%)</title><rect x="1030.6" y="261" width="1.1" height="15.0" fill="rgb(234,105,35)" rx="2" ry="2" />
<text  x="1033.63" y="271.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.09%)</title><rect x="198.9" y="1301" width="1.1" height="15.0" fill="rgb(220,101,28)" rx="2" ry="2" />
<text  x="201.93" y="1311.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (5 samples, 0.45%)</title><rect x="1184.7" y="1525" width="5.3" height="15.0" fill="rgb(238,133,47)" rx="2" ry="2" />
<text  x="1187.72" y="1535.5" ></text>
</g>
<g >
<title>shmem_fault (3 samples, 0.27%)</title><rect x="1003.2" y="1237" width="3.2" height="15.0" fill="rgb(236,174,54)" rx="2" ry="2" />
<text  x="1006.18" y="1247.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="859.6" y="1429" width="1.1" height="15.0" fill="rgb(246,26,33)" rx="2" ry="2" />
<text  x="862.64" y="1439.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.09%)</title><rect x="455.4" y="1365" width="1.1" height="15.0" fill="rgb(249,13,15)" rx="2" ry="2" />
<text  x="458.40" y="1375.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.09%)</title><rect x="1030.6" y="965" width="1.1" height="15.0" fill="rgb(242,209,44)" rx="2" ry="2" />
<text  x="1033.63" y="975.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (12 samples, 1.07%)</title><rect x="494.5" y="1349" width="12.6" height="15.0" fill="rgb(252,135,19)" rx="2" ry="2" />
<text  x="497.45" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (39 samples, 3.49%)</title><rect x="250.6" y="1365" width="41.2" height="15.0" fill="rgb(249,8,31)" rx="2" ry="2" />
<text  x="253.64" y="1375.5" >ent..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="921.9" y="1301" width="1.1" height="15.0" fill="rgb(230,148,39)" rx="2" ry="2" />
<text  x="924.91" y="1311.5" ></text>
</g>
<g >
<title>__libc_start_main (7 samples, 0.63%)</title><rect x="1024.3" y="1525" width="7.4" height="15.0" fill="rgb(231,191,30)" rx="2" ry="2" />
<text  x="1027.29" y="1535.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::file_attr (1 samples, 0.09%)</title><rect x="1030.6" y="213" width="1.1" height="15.0" fill="rgb(228,18,49)" rx="2" ry="2" />
<text  x="1033.63" y="223.5" ></text>
</g>
<g >
<title>__do_munmap (4 samples, 0.36%)</title><rect x="149.3" y="1317" width="4.2" height="15.0" fill="rgb(207,7,34)" rx="2" ry="2" />
<text  x="152.32" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="1006.4" y="1493" width="1.0" height="15.0" fill="rgb(226,147,10)" rx="2" ry="2" />
<text  x="1009.35" y="1503.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (1 samples, 0.09%)</title><rect x="971.5" y="1413" width="1.1" height="15.0" fill="rgb(207,55,32)" rx="2" ry="2" />
<text  x="974.52" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (80 samples, 7.16%)</title><rect x="12.1" y="1413" width="84.4" height="15.0" fill="rgb(209,22,19)" rx="2" ry="2" />
<text  x="15.11" y="1423.5" >__x64_sys..</text>
</g>
<g >
<title>CopyBundleTails (2 samples, 0.18%)</title><rect x="118.7" y="1445" width="2.1" height="15.0" fill="rgb(220,149,23)" rx="2" ry="2" />
<text  x="121.71" y="1455.5" ></text>
</g>
<g >
<title>[libc.so.6] (67 samples, 5.99%)</title><rect x="344.6" y="1333" width="70.7" height="15.0" fill="rgb(229,192,35)" rx="2" ry="2" />
<text  x="347.58" y="1343.5" >[libc.s..</text>
</g>
<g >
<title>iput.part.0 (1 samples, 0.09%)</title><rect x="1064.4" y="1333" width="1.1" height="15.0" fill="rgb(207,29,51)" rx="2" ry="2" />
<text  x="1067.40" y="1343.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (40 samples, 3.58%)</title><rect x="204.2" y="1285" width="42.2" height="15.0" fill="rgb(223,27,3)" rx="2" ry="2" />
<text  x="207.20" y="1295.5" >rws..</text>
</g>
<g >
<title>record__pushfn (1 samples, 0.09%)</title><rect x="97.6" y="1461" width="1.1" height="15.0" fill="rgb(210,202,44)" rx="2" ry="2" />
<text  x="100.60" y="1471.5" ></text>
</g>
<g >
<title>__sys_socket (1 samples, 0.09%)</title><rect x="116.6" y="1333" width="1.1" height="15.0" fill="rgb(213,6,23)" rx="2" ry="2" />
<text  x="119.60" y="1343.5" ></text>
</g>
<g >
<title>handle_pte_fault (3 samples, 0.27%)</title><rect x="1003.2" y="1301" width="3.2" height="15.0" fill="rgb(247,46,37)" rx="2" ry="2" />
<text  x="1006.18" y="1311.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::get (5 samples, 0.45%)</title><rect x="292.9" y="1429" width="5.2" height="15.0" fill="rgb(206,117,16)" rx="2" ry="2" />
<text  x="295.86" y="1439.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (48 samples, 4.29%)</title><rect x="149.3" y="1445" width="50.7" height="15.0" fill="rgb(238,225,39)" rx="2" ry="2" />
<text  x="152.32" y="1455.5" >NaClA..</text>
</g>
<g >
<title>NaClAddrSpaceFree (47 samples, 4.20%)</title><rect x="149.3" y="1413" width="49.6" height="15.0" fill="rgb(226,33,14)" rx="2" ry="2" />
<text  x="152.32" y="1423.5" >NaClA..</text>
</g>
<g >
<title>copy_page_from_iter_iovec (1 samples, 0.09%)</title><rect x="1006.4" y="1381" width="1.0" height="15.0" fill="rgb(212,215,38)" rx="2" ry="2" />
<text  x="1009.35" y="1391.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.09%)</title><rect x="1005.3" y="1125" width="1.1" height="15.0" fill="rgb(236,70,1)" rx="2" ry="2" />
<text  x="1008.30" y="1135.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="1025.3" y="1285" width="1.1" height="15.0" fill="rgb(246,112,33)" rx="2" ry="2" />
<text  x="1028.35" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="198.9" y="1365" width="1.1" height="15.0" fill="rgb(241,166,26)" rx="2" ry="2" />
<text  x="201.93" y="1375.5" ></text>
</g>
<g >
<title>x86_pmu_enable (69 samples, 6.17%)</title><rect x="23.7" y="1221" width="72.8" height="15.0" fill="rgb(244,168,43)" rx="2" ry="2" />
<text  x="26.72" y="1231.5" >x86_pmu_..</text>
</g>
<g >
<title>serde::de::MapAccess::next_value (1 samples, 0.09%)</title><rect x="1030.6" y="517" width="1.1" height="15.0" fill="rgb(245,227,33)" rx="2" ry="2" />
<text  x="1033.63" y="527.5" ></text>
</g>
<g >
<title>osq_lock (43 samples, 3.85%)</title><rect x="153.5" y="1269" width="45.4" height="15.0" fill="rgb(252,139,53)" rx="2" ry="2" />
<text  x="156.54" y="1279.5" >osq_..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::serialize (1 samples, 0.09%)</title><rect x="1028.5" y="1269" width="1.1" height="15.0" fill="rgb(239,46,5)" rx="2" ry="2" />
<text  x="1031.52" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="121.9" y="1397" width="1.0" height="15.0" fill="rgb(206,110,10)" rx="2" ry="2" />
<text  x="124.88" y="1407.5" ></text>
</g>
<g >
<title>NaClSysMunmapDecoder (39 samples, 3.49%)</title><rect x="250.6" y="1509" width="41.2" height="15.0" fill="rgb(236,37,7)" rx="2" ry="2" />
<text  x="253.64" y="1519.5" >NaC..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (82 samples, 7.33%)</title><rect x="524.0" y="1349" width="86.6" height="15.0" fill="rgb(248,199,49)" rx="2" ry="2" />
<text  x="527.01" y="1359.5" >core::intr..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.09%)</title><rect x="295.0" y="1317" width="1.0" height="15.0" fill="rgb(226,12,5)" rx="2" ry="2" />
<text  x="297.97" y="1327.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.09%)</title><rect x="921.9" y="1253" width="1.1" height="15.0" fill="rgb(239,111,9)" rx="2" ry="2" />
<text  x="924.91" y="1263.5" ></text>
</g>
<g >
<title>__count_memcg_events.part.0 (2 samples, 0.18%)</title><rect x="965.2" y="1381" width="2.1" height="15.0" fill="rgb(214,197,14)" rx="2" ry="2" />
<text  x="968.19" y="1391.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="1027.5" y="1317" width="1.0" height="15.0" fill="rgb(227,27,50)" rx="2" ry="2" />
<text  x="1030.46" y="1327.5" ></text>
</g>
<g >
<title>dispatcher (39 samples, 3.49%)</title><rect x="250.6" y="1445" width="41.2" height="15.0" fill="rgb(222,95,31)" rx="2" ry="2" />
<text  x="253.64" y="1455.5" >dis..</text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (1 samples, 0.09%)</title><rect x="1030.6" y="1109" width="1.1" height="15.0" fill="rgb(252,224,7)" rx="2" ry="2" />
<text  x="1033.63" y="1119.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (1 samples, 0.09%)</title><rect x="1030.6" y="853" width="1.1" height="15.0" fill="rgb(251,182,36)" rx="2" ry="2" />
<text  x="1033.63" y="863.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.09%)</title><rect x="974.7" y="1381" width="1.0" height="15.0" fill="rgb(247,120,5)" rx="2" ry="2" />
<text  x="977.69" y="1391.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.09%)</title><rect x="1028.5" y="1109" width="1.1" height="15.0" fill="rgb(235,75,28)" rx="2" ry="2" />
<text  x="1031.52" y="1119.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.09%)</title><rect x="198.9" y="1285" width="1.1" height="15.0" fill="rgb(215,165,19)" rx="2" ry="2" />
<text  x="201.93" y="1295.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1 samples, 0.09%)</title><rect x="121.9" y="1189" width="1.0" height="15.0" fill="rgb(243,152,27)" rx="2" ry="2" />
<text  x="124.88" y="1199.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (1 samples, 0.09%)</title><rect x="1030.6" y="757" width="1.1" height="15.0" fill="rgb(218,83,8)" rx="2" ry="2" />
<text  x="1033.63" y="767.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.09%)</title><rect x="1030.6" y="53" width="1.1" height="15.0" fill="rgb(235,54,17)" rx="2" ry="2" />
<text  x="1033.63" y="63.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.18%)</title><rect x="957.8" y="1333" width="2.1" height="15.0" fill="rgb(206,32,42)" rx="2" ry="2" />
<text  x="960.80" y="1343.5" ></text>
</g>
<g >
<title>activate_page (1 samples, 0.09%)</title><rect x="151.4" y="1189" width="1.1" height="15.0" fill="rgb(240,122,45)" rx="2" ry="2" />
<text  x="154.43" y="1199.5" ></text>
</g>
<g >
<title>perf (82 samples, 7.33%)</title><rect x="12.1" y="1557" width="86.6" height="15.0" fill="rgb(221,103,45)" rx="2" ry="2" />
<text  x="15.11" y="1567.5" >perf</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 7.16%)</title><rect x="12.1" y="1445" width="84.4" height="15.0" fill="rgb(236,127,18)" rx="2" ry="2" />
<text  x="15.11" y="1455.5" >entry_SYS..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::persist_metadata (4 samples, 0.36%)</title><rect x="1026.4" y="1445" width="4.2" height="15.0" fill="rgb(247,4,26)" rx="2" ry="2" />
<text  x="1029.40" y="1455.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::SharedVec&lt;T&gt;::len (3 samples, 0.27%)</title><rect x="340.4" y="1381" width="3.1" height="15.0" fill="rgb(241,215,23)" rx="2" ry="2" />
<text  x="343.36" y="1391.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.27%)</title><rect x="1027.5" y="1381" width="3.1" height="15.0" fill="rgb(247,133,30)" rx="2" ry="2" />
<text  x="1030.46" y="1391.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (2 samples, 0.18%)</title><rect x="296.0" y="1397" width="2.1" height="15.0" fill="rgb(234,22,45)" rx="2" ry="2" />
<text  x="299.03" y="1407.5" ></text>
</g>
<g >
<title>exc_page_fault (127 samples, 11.36%)</title><rect x="854.4" y="1509" width="134.0" height="15.0" fill="rgb(219,53,39)" rx="2" ry="2" />
<text  x="857.36" y="1519.5" >exc_page_fault</text>
</g>
<g >
<title>update_process_times (1 samples, 0.09%)</title><rect x="1075.0" y="1285" width="1.0" height="15.0" fill="rgb(220,72,22)" rx="2" ry="2" />
<text  x="1077.96" y="1295.5" ></text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (5 samples, 0.45%)</title><rect x="292.9" y="1413" width="5.2" height="15.0" fill="rgb(214,215,26)" rx="2" ry="2" />
<text  x="295.86" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::Inode&gt;::serialize (2 samples, 0.18%)</title><rect x="1028.5" y="1301" width="2.1" height="15.0" fill="rgb(210,135,17)" rx="2" ry="2" />
<text  x="1031.52" y="1311.5" ></text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::capacity (9 samples, 0.81%)</title><rect x="654.9" y="1381" width="9.5" height="15.0" fill="rgb(253,226,36)" rx="2" ry="2" />
<text  x="657.88" y="1391.5" ></text>
</g>
<g >
<title>NaClValidateCode (2 samples, 0.18%)</title><rect x="1024.3" y="1397" width="2.1" height="15.0" fill="rgb(206,215,6)" rx="2" ry="2" />
<text  x="1027.29" y="1407.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (3 samples, 0.27%)</title><rect x="1027.5" y="1365" width="3.1" height="15.0" fill="rgb(250,97,39)" rx="2" ry="2" />
<text  x="1030.46" y="1375.5" ></text>
</g>
<g >
<title>shmem_fault (1 samples, 0.09%)</title><rect x="121.9" y="1237" width="1.0" height="15.0" fill="rgb(216,70,50)" rx="2" ry="2" />
<text  x="124.88" y="1247.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (11 samples, 0.98%)</title><rect x="950.4" y="1413" width="11.6" height="15.0" fill="rgb(250,67,15)" rx="2" ry="2" />
<text  x="953.41" y="1423.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.09%)</title><rect x="1072.8" y="1397" width="1.1" height="15.0" fill="rgb(243,139,50)" rx="2" ry="2" />
<text  x="1075.84" y="1407.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (329 samples, 29.43%)</title><rect x="417.4" y="1429" width="347.3" height="15.0" fill="rgb(206,150,26)" rx="2" ry="2" />
<text  x="420.41" y="1439.5" >rustposix::interface::pipe::EmulatedPipe::write..</text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (1 samples, 0.09%)</title><rect x="1030.6" y="1381" width="1.1" height="15.0" fill="rgb(229,131,1)" rx="2" ry="2" />
<text  x="1033.63" y="1391.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="921.9" y="1333" width="1.1" height="15.0" fill="rgb(233,152,54)" rx="2" ry="2" />
<text  x="924.91" y="1343.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (41 samples, 3.67%)</title><rect x="203.1" y="1477" width="43.3" height="15.0" fill="rgb(233,143,17)" rx="2" ry="2" />
<text  x="206.15" y="1487.5" >NaCl..</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="121.9" y="1317" width="1.0" height="15.0" fill="rgb(249,76,44)" rx="2" ry="2" />
<text  x="124.88" y="1327.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.09%)</title><rect x="1030.6" y="821" width="1.1" height="15.0" fill="rgb(226,174,47)" rx="2" ry="2" />
<text  x="1033.63" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1030.6" y="133" width="1.1" height="15.0" fill="rgb(219,149,2)" rx="2" ry="2" />
<text  x="1033.63" y="143.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.09%)</title><rect x="1072.8" y="1365" width="1.1" height="15.0" fill="rgb(226,206,38)" rx="2" ry="2" />
<text  x="1075.84" y="1375.5" ></text>
</g>
<g >
<title>HandleStackContext (1 samples, 0.09%)</title><rect x="114.5" y="1509" width="1.0" height="15.0" fill="rgb(212,193,53)" rx="2" ry="2" />
<text  x="117.49" y="1519.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (2 samples, 0.18%)</title><rect x="96.5" y="1493" width="2.2" height="15.0" fill="rgb(209,47,50)" rx="2" ry="2" />
<text  x="99.55" y="1503.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::CollectionSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.18%)</title><rect x="1028.5" y="1317" width="2.1" height="15.0" fill="rgb(210,179,50)" rx="2" ry="2" />
<text  x="1031.52" y="1327.5" ></text>
</g>
<g >
<title>std::fs::File::set_len (1 samples, 0.09%)</title><rect x="1026.4" y="1413" width="1.1" height="15.0" fill="rgb(241,30,29)" rx="2" ry="2" />
<text  x="1029.40" y="1423.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.09%)</title><rect x="203.1" y="1269" width="1.1" height="15.0" fill="rgb(232,24,22)" rx="2" ry="2" />
<text  x="206.15" y="1279.5" ></text>
</g>
<g >
<title>do_shared_fault (3 samples, 0.27%)</title><rect x="1003.2" y="1269" width="3.2" height="15.0" fill="rgb(249,35,44)" rx="2" ry="2" />
<text  x="1006.18" y="1279.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.09%)</title><rect x="198.9" y="1253" width="1.1" height="15.0" fill="rgb(221,30,0)" rx="2" ry="2" />
<text  x="201.93" y="1263.5" ></text>
</g>
<g >
<title>process_vm_rw_core.constprop.0 (1 samples, 0.09%)</title><rect x="1006.4" y="1429" width="1.0" height="15.0" fill="rgb(252,124,45)" rx="2" ry="2" />
<text  x="1009.35" y="1439.5" ></text>
</g>
<g >
<title>page_remove_file_rmap (1 samples, 0.09%)</title><rect x="120.8" y="1205" width="1.1" height="15.0" fill="rgb(235,214,54)" rx="2" ry="2" />
<text  x="123.82" y="1215.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.27%)</title><rect x="1003.2" y="1157" width="3.2" height="15.0" fill="rgb(208,96,22)" rx="2" ry="2" />
<text  x="1006.18" y="1167.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.09%)</title><rect x="1063.3" y="1461" width="1.1" height="15.0" fill="rgb(249,119,10)" rx="2" ry="2" />
<text  x="1066.35" y="1471.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::VariantAccessMap&lt;T&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (1 samples, 0.09%)</title><rect x="1030.6" y="693" width="1.1" height="15.0" fill="rgb(231,123,24)" rx="2" ry="2" />
<text  x="1033.63" y="703.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.09%)</title><rect x="121.9" y="1173" width="1.0" height="15.0" fill="rgb(252,180,34)" rx="2" ry="2" />
<text  x="124.88" y="1183.5" ></text>
</g>
<g >
<title>write (1 samples, 0.09%)</title><rect x="97.6" y="1413" width="1.1" height="15.0" fill="rgb(246,61,17)" rx="2" ry="2" />
<text  x="100.60" y="1423.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.09%)</title><rect x="1030.6" y="1013" width="1.1" height="15.0" fill="rgb(229,133,50)" rx="2" ry="2" />
<text  x="1033.63" y="1023.5" ></text>
</g>
<g >
<title>page_remove_rmap (4 samples, 0.36%)</title><rect x="263.3" y="1141" width="4.2" height="15.0" fill="rgb(227,170,20)" rx="2" ry="2" />
<text  x="266.31" y="1151.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="10.0" y="1349" width="1.1" height="15.0" fill="rgb(224,228,38)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" ></text>
</g>
<g >
<title>notify_change (1 samples, 0.09%)</title><rect x="1026.4" y="1253" width="1.1" height="15.0" fill="rgb(224,199,33)" rx="2" ry="2" />
<text  x="1029.40" y="1263.5" ></text>
</g>
<g >
<title>shmem_undo_range (1 samples, 0.09%)</title><rect x="1064.4" y="1269" width="1.1" height="15.0" fill="rgb(220,160,5)" rx="2" ry="2" />
<text  x="1067.40" y="1279.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (40 samples, 3.58%)</title><rect x="204.2" y="1301" width="42.2" height="15.0" fill="rgb(249,118,7)" rx="2" ry="2" />
<text  x="207.20" y="1311.5" >rws..</text>
</g>
<g >
<title>_perf_ioctl (80 samples, 7.16%)</title><rect x="12.1" y="1381" width="84.4" height="15.0" fill="rgb(244,126,19)" rx="2" ry="2" />
<text  x="15.11" y="1391.5" >_perf_ioctl</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.09%)</title><rect x="198.9" y="1173" width="1.1" height="15.0" fill="rgb(254,153,25)" rx="2" ry="2" />
<text  x="201.93" y="1183.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.09%)</title><rect x="120.8" y="1173" width="1.1" height="15.0" fill="rgb(207,181,30)" rx="2" ry="2" />
<text  x="123.82" y="1183.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::mmap_syscall (39 samples, 3.49%)</title><rect x="250.6" y="1413" width="41.2" height="15.0" fill="rgb(214,178,27)" rx="2" ry="2" />
<text  x="253.64" y="1423.5" >rus..</text>
</g>
<g >
<title>free_unref_page_list (16 samples, 1.43%)</title><rect x="273.9" y="1093" width="16.9" height="15.0" fill="rgb(228,40,36)" rx="2" ry="2" />
<text  x="276.86" y="1103.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.09%)</title><rect x="151.4" y="1205" width="1.1" height="15.0" fill="rgb(240,29,39)" rx="2" ry="2" />
<text  x="154.43" y="1215.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.09%)</title><rect x="116.6" y="1237" width="1.1" height="15.0" fill="rgb(239,228,41)" rx="2" ry="2" />
<text  x="119.60" y="1247.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::de::Deserialize for dashmap::DashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.09%)</title><rect x="1030.6" y="997" width="1.1" height="15.0" fill="rgb(243,171,47)" rx="2" ry="2" />
<text  x="1033.63" y="1007.5" ></text>
</g>
<g >
<title>__cmd_record (1 samples, 0.09%)</title><rect x="11.1" y="1525" width="1.0" height="15.0" fill="rgb(227,11,22)" rx="2" ry="2" />
<text  x="14.06" y="1535.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.09%)</title><rect x="120.8" y="1221" width="1.1" height="15.0" fill="rgb(238,111,48)" rx="2" ry="2" />
<text  x="123.82" y="1231.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.09%)</title><rect x="1063.3" y="1397" width="1.1" height="15.0" fill="rgb(245,219,27)" rx="2" ry="2" />
<text  x="1066.35" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_statx (1 samples, 0.09%)</title><rect x="1030.6" y="117" width="1.1" height="15.0" fill="rgb(213,106,36)" rx="2" ry="2" />
<text  x="1033.63" y="127.5" ></text>
</g>
<g >
<title>record__write (1 samples, 0.09%)</title><rect x="97.6" y="1445" width="1.1" height="15.0" fill="rgb(252,186,23)" rx="2" ry="2" />
<text  x="100.60" y="1455.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.09%)</title><rect x="300.3" y="1365" width="1.0" height="15.0" fill="rgb(249,49,1)" rx="2" ry="2" />
<text  x="303.25" y="1375.5" ></text>
</g>
<g >
<title>alloc_file (1 samples, 0.09%)</title><rect x="116.6" y="1285" width="1.1" height="15.0" fill="rgb(239,179,14)" rx="2" ry="2" />
<text  x="119.60" y="1295.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.09%)</title><rect x="1030.6" y="501" width="1.1" height="15.0" fill="rgb(222,70,31)" rx="2" ry="2" />
<text  x="1033.63" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.18%)</title><rect x="296.0" y="1365" width="2.1" height="15.0" fill="rgb(233,172,19)" rx="2" ry="2" />
<text  x="299.03" y="1375.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.09%)</title><rect x="151.4" y="1109" width="1.1" height="15.0" fill="rgb(221,185,5)" rx="2" ry="2" />
<text  x="154.43" y="1119.5" ></text>
</g>
<g >
<title>ovl_setattr (1 samples, 0.09%)</title><rect x="1026.4" y="1237" width="1.1" height="15.0" fill="rgb(215,45,33)" rx="2" ry="2" />
<text  x="1029.40" y="1247.5" ></text>
</g>
<g >
<title>sock_alloc_file (1 samples, 0.09%)</title><rect x="116.6" y="1317" width="1.1" height="15.0" fill="rgb(232,164,16)" rx="2" ry="2" />
<text  x="119.60" y="1327.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (98 samples, 8.77%)</title><rect x="507.1" y="1365" width="103.5" height="15.0" fill="rgb(206,47,51)" rx="2" ry="2" />
<text  x="510.12" y="1375.5" >ringbuf::pro..</text>
</g>
<g >
<title>BitmapSetBit (2 samples, 0.18%)</title><rect x="146.2" y="1397" width="2.1" height="15.0" fill="rgb(245,192,35)" rx="2" ry="2" />
<text  x="149.15" y="1407.5" ></text>
</g>
<g >
<title>_start (1 samples, 0.09%)</title><rect x="10.0" y="1541" width="1.1" height="15.0" fill="rgb(240,196,16)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (4 samples, 0.36%)</title><rect x="246.4" y="1429" width="4.2" height="15.0" fill="rgb(221,64,3)" rx="2" ry="2" />
<text  x="249.42" y="1439.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="198.9" y="1333" width="1.1" height="15.0" fill="rgb(244,200,44)" rx="2" ry="2" />
<text  x="201.93" y="1343.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.09%)</title><rect x="11.1" y="1557" width="1.0" height="15.0" fill="rgb(234,130,4)" rx="2" ry="2" />
<text  x="14.06" y="1567.5" ></text>
</g>
<g >
<title>[libc.so.6] (70 samples, 6.26%)</title><rect x="536.7" y="1333" width="73.9" height="15.0" fill="rgb(238,173,32)" rx="2" ry="2" />
<text  x="539.67" y="1343.5" >[libc.so..</text>
</g>
<g >
<title>std::sync::once::Once::call_once_force::{{closure}} (1 samples, 0.09%)</title><rect x="1030.6" y="1317" width="1.1" height="15.0" fill="rgb(248,129,52)" rx="2" ry="2" />
<text  x="1033.63" y="1327.5" ></text>
</g>
<g >
<title>ovl_write_iter (1 samples, 0.09%)</title><rect x="97.6" y="1301" width="1.1" height="15.0" fill="rgb(210,206,29)" rx="2" ry="2" />
<text  x="100.60" y="1311.5" ></text>
</g>
<g >
<title>__munmap (47 samples, 4.20%)</title><rect x="149.3" y="1397" width="49.6" height="15.0" fill="rgb(248,179,42)" rx="2" ry="2" />
<text  x="152.32" y="1407.5" >__mun..</text>
</g>
<g >
<title>__get_user_pages_remote (3 samples, 0.27%)</title><rect x="1003.2" y="1365" width="3.2" height="15.0" fill="rgb(223,71,47)" rx="2" ry="2" />
<text  x="1006.18" y="1375.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.09%)</title><rect x="152.5" y="1205" width="1.0" height="15.0" fill="rgb(247,204,20)" rx="2" ry="2" />
<text  x="155.49" y="1215.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.09%)</title><rect x="198.9" y="1221" width="1.1" height="15.0" fill="rgb(219,50,38)" rx="2" ry="2" />
<text  x="201.93" y="1231.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (4 samples, 0.36%)</title><rect x="972.6" y="1413" width="4.2" height="15.0" fill="rgb(243,43,0)" rx="2" ry="2" />
<text  x="975.58" y="1423.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="859.6" y="1477" width="1.1" height="15.0" fill="rgb(222,128,39)" rx="2" ry="2" />
<text  x="862.64" y="1487.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (1 samples, 0.09%)</title><rect x="1076.0" y="1285" width="1.1" height="15.0" fill="rgb(216,181,16)" rx="2" ry="2" />
<text  x="1079.01" y="1295.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.09%)</title><rect x="455.4" y="1397" width="1.1" height="15.0" fill="rgb(207,21,24)" rx="2" ry="2" />
<text  x="458.40" y="1407.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (3 samples, 0.27%)</title><rect x="200.0" y="1413" width="3.1" height="15.0" fill="rgb(235,146,11)" rx="2" ry="2" />
<text  x="202.98" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::write_syscall (330 samples, 29.52%)</title><rect x="416.4" y="1445" width="348.3" height="15.0" fill="rgb(247,82,35)" rx="2" ry="2" />
<text  x="419.35" y="1455.5" >rustposix::safeposix::syscalls::fs_calls::&lt;impl..</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::remaining (121 samples, 10.82%)</title><rect x="636.9" y="1397" width="127.8" height="15.0" fill="rgb(216,37,30)" rx="2" ry="2" />
<text  x="639.94" y="1407.5" >ringbuf::ring_bu..</text>
</g>
<g >
<title>newidle_balance (13 samples, 1.16%)</title><rect x="1167.8" y="1429" width="13.8" height="15.0" fill="rgb(226,120,36)" rx="2" ry="2" />
<text  x="1170.84" y="1439.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.09%)</title><rect x="198.9" y="1237" width="1.1" height="15.0" fill="rgb(206,107,26)" rx="2" ry="2" />
<text  x="201.93" y="1247.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::initialize (1 samples, 0.09%)</title><rect x="1030.6" y="1365" width="1.1" height="15.0" fill="rgb(227,50,44)" rx="2" ry="2" />
<text  x="1033.63" y="1375.5" ></text>
</g>
<g >
<title>ion (1 samples, 0.09%)</title><rect x="97.6" y="1429" width="1.1" height="15.0" fill="rgb(216,73,5)" rx="2" ry="2" />
<text  x="100.60" y="1439.5" ></text>
</g>
<g >
<title>do_group_exit (2 samples, 0.18%)</title><rect x="1063.3" y="1493" width="2.2" height="15.0" fill="rgb(212,25,3)" rx="2" ry="2" />
<text  x="1066.35" y="1503.5" ></text>
</g>
<g >
<title>perf_mmap__read_head (1 samples, 0.09%)</title><rect x="96.5" y="1461" width="1.1" height="15.0" fill="rgb(226,98,19)" rx="2" ry="2" />
<text  x="99.55" y="1471.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (1 samples, 0.09%)</title><rect x="1030.6" y="389" width="1.1" height="15.0" fill="rgb(212,189,41)" rx="2" ry="2" />
<text  x="1033.63" y="399.5" ></text>
</g>
<g >
<title>refill_stock (1 samples, 0.09%)</title><rect x="970.5" y="1381" width="1.0" height="15.0" fill="rgb(211,200,7)" rx="2" ry="2" />
<text  x="973.47" y="1391.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.09%)</title><rect x="272.8" y="1093" width="1.1" height="15.0" fill="rgb(221,44,35)" rx="2" ry="2" />
<text  x="275.81" y="1103.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (23 samples, 2.06%)</title><rect x="612.7" y="1381" width="24.2" height="15.0" fill="rgb(223,216,53)" rx="2" ry="2" />
<text  x="615.67" y="1391.5" >r..</text>
</g>
<g >
<title>lindrustinit (1 samples, 0.09%)</title><rect x="1030.6" y="1461" width="1.1" height="15.0" fill="rgb(242,74,50)" rx="2" ry="2" />
<text  x="1033.63" y="1471.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;i32,alloc::sync::Arc&lt;rustposix::interface::pipe::EmulatedPipe&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="416.4" y="1429" width="1.0" height="15.0" fill="rgb(211,16,3)" rx="2" ry="2" />
<text  x="419.35" y="1439.5" ></text>
</g>
<g >
<title>reader_loop (1 samples, 0.09%)</title><rect x="10.0" y="1477" width="1.1" height="15.0" fill="rgb(229,12,43)" rx="2" ry="2" />
<text  x="13.00" y="1487.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.09%)</title><rect x="1076.0" y="1157" width="1.1" height="15.0" fill="rgb(245,131,32)" rx="2" ry="2" />
<text  x="1079.01" y="1167.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.27%)</title><rect x="452.2" y="1413" width="3.2" height="15.0" fill="rgb(218,139,0)" rx="2" ry="2" />
<text  x="455.24" y="1423.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (2 samples, 0.18%)</title><rect x="973.6" y="1397" width="2.1" height="15.0" fill="rgb(232,188,36)" rx="2" ry="2" />
<text  x="976.63" y="1407.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as serde_cbor::write::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="1029.6" y="1237" width="1.0" height="15.0" fill="rgb(211,17,42)" rx="2" ry="2" />
<text  x="1032.57" y="1247.5" ></text>
</g>
<g >
<title>truncate_inode_page (1 samples, 0.09%)</title><rect x="1064.4" y="1253" width="1.1" height="15.0" fill="rgb(208,84,44)" rx="2" ry="2" />
<text  x="1067.40" y="1263.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.18%)</title><rect x="265.4" y="1109" width="2.1" height="15.0" fill="rgb(235,34,24)" rx="2" ry="2" />
<text  x="268.42" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.18%)</title><rect x="492.3" y="1349" width="2.2" height="15.0" fill="rgb(251,140,8)" rx="2" ry="2" />
<text  x="495.34" y="1359.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.09%)</title><rect x="1025.3" y="1253" width="1.1" height="15.0" fill="rgb(232,116,0)" rx="2" ry="2" />
<text  x="1028.35" y="1263.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.09%)</title><rect x="1075.0" y="1253" width="1.0" height="15.0" fill="rgb(240,41,4)" rx="2" ry="2" />
<text  x="1077.96" y="1263.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.09%)</title><rect x="878.6" y="1413" width="1.1" height="15.0" fill="rgb(208,38,7)" rx="2" ry="2" />
<text  x="881.64" y="1423.5" ></text>
</g>
<g >
<title>do_truncate (1 samples, 0.09%)</title><rect x="1026.4" y="1269" width="1.1" height="15.0" fill="rgb(213,28,29)" rx="2" ry="2" />
<text  x="1029.40" y="1279.5" ></text>
</g>
<g >
<title>&lt;dashmap::serde::DashMapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.09%)</title><rect x="1030.6" y="357" width="1.1" height="15.0" fill="rgb(227,105,10)" rx="2" ry="2" />
<text  x="1033.63" y="367.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.09%)</title><rect x="97.6" y="1269" width="1.1" height="15.0" fill="rgb(225,172,50)" rx="2" ry="2" />
<text  x="100.60" y="1279.5" ></text>
</g>
<g >
<title>lockref_put_or_lock (1 samples, 0.09%)</title><rect x="1030.6" y="37" width="1.1" height="15.0" fill="rgb(250,195,14)" rx="2" ry="2" />
<text  x="1033.63" y="47.5" ></text>
</g>
<g >
<title>__mmap (39 samples, 3.49%)</title><rect x="250.6" y="1381" width="41.2" height="15.0" fill="rgb(224,45,38)" rx="2" ry="2" />
<text  x="253.64" y="1391.5" >__m..</text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (17 samples, 1.52%)</title><rect x="461.7" y="1333" width="18.0" height="15.0" fill="rgb(220,191,33)" rx="2" ry="2" />
<text  x="464.74" y="1343.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.09%)</title><rect x="1076.0" y="1189" width="1.1" height="15.0" fill="rgb(210,189,43)" rx="2" ry="2" />
<text  x="1079.01" y="1199.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (1 samples, 0.09%)</title><rect x="1030.6" y="869" width="1.1" height="15.0" fill="rgb(216,140,2)" rx="2" ry="2" />
<text  x="1033.63" y="879.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.09%)</title><rect x="152.5" y="1157" width="1.0" height="15.0" fill="rgb(234,1,33)" rx="2" ry="2" />
<text  x="155.49" y="1167.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (1 samples, 0.09%)</title><rect x="97.6" y="1189" width="1.1" height="15.0" fill="rgb(241,200,21)" rx="2" ry="2" />
<text  x="100.60" y="1199.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 7.16%)</title><rect x="12.1" y="1429" width="84.4" height="15.0" fill="rgb(219,32,47)" rx="2" ry="2" />
<text  x="15.11" y="1439.5" >do_syscal..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.09%)</title><rect x="297.1" y="1317" width="1.0" height="15.0" fill="rgb(210,51,37)" rx="2" ry="2" />
<text  x="300.08" y="1327.5" ></text>
</g>
<g >
<title>std::thread::available_parallelism (1 samples, 0.09%)</title><rect x="1030.6" y="309" width="1.1" height="15.0" fill="rgb(248,67,43)" rx="2" ry="2" />
<text  x="1033.63" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.09%)</title><rect x="97.6" y="1365" width="1.1" height="15.0" fill="rgb(208,163,19)" rx="2" ry="2" />
<text  x="100.60" y="1375.5" ></text>
</g>
<g >
<title>delete_from_page_cache (1 samples, 0.09%)</title><rect x="1064.4" y="1237" width="1.1" height="15.0" fill="rgb(243,126,8)" rx="2" ry="2" />
<text  x="1067.40" y="1247.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.09%)</title><rect x="1075.0" y="1301" width="1.0" height="15.0" fill="rgb(239,172,28)" rx="2" ry="2" />
<text  x="1077.96" y="1311.5" ></text>
</g>
<g >
<title>idr_get_free (1 samples, 0.09%)</title><rect x="10.0" y="1221" width="1.1" height="15.0" fill="rgb(221,218,40)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" ></text>
</g>
<g >
<title>rustposix::interface::file::EmulatedFile::close (1 samples, 0.09%)</title><rect x="1026.4" y="1429" width="1.1" height="15.0" fill="rgb(209,39,39)" rx="2" ry="2" />
<text  x="1029.40" y="1439.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreateDecoder (30 samples, 2.68%)</title><rect x="117.7" y="1509" width="31.6" height="15.0" fill="rgb(205,64,46)" rx="2" ry="2" />
<text  x="120.66" y="1519.5" >Na..</text>
</g>
<g >
<title>start_secondary (105 samples, 9.39%)</title><rect x="1073.9" y="1525" width="110.8" height="15.0" fill="rgb(249,22,33)" rx="2" ry="2" />
<text  x="1076.90" y="1535.5" >start_secondary</text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_len (1 samples, 0.09%)</title><rect x="1028.5" y="1189" width="1.1" height="15.0" fill="rgb(217,51,47)" rx="2" ry="2" />
<text  x="1031.52" y="1199.5" ></text>
</g>
<g >
<title>[libc.so.6] (7 samples, 0.63%)</title><rect x="1024.3" y="1509" width="7.4" height="15.0" fill="rgb(218,172,11)" rx="2" ry="2" />
<text  x="1027.29" y="1519.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.09%)</title><rect x="149.3" y="1269" width="1.1" height="15.0" fill="rgb(229,67,17)" rx="2" ry="2" />
<text  x="152.32" y="1279.5" ></text>
</g>
<g >
<title>do_idle (5 samples, 0.45%)</title><rect x="1184.7" y="1429" width="5.3" height="15.0" fill="rgb(237,183,14)" rx="2" ry="2" />
<text  x="1187.72" y="1439.5" ></text>
</g>
<g >
<title>BaseExtentionFromVEX (1 samples, 0.09%)</title><rect x="144.0" y="1413" width="1.1" height="15.0" fill="rgb(205,143,54)" rx="2" ry="2" />
<text  x="147.04" y="1423.5" ></text>
</g>
<g >
<title>NaClSysExecve (51 samples, 4.56%)</title><rect x="149.3" y="1493" width="53.8" height="15.0" fill="rgb(212,31,15)" rx="2" ry="2" />
<text  x="152.32" y="1503.5" >NaClS..</text>
</g>
<g >
<title>__perf_event_enable (70 samples, 6.26%)</title><rect x="22.7" y="1253" width="73.8" height="15.0" fill="rgb(244,25,43)" rx="2" ry="2" />
<text  x="25.67" y="1263.5" >__perf_e..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::len (1 samples, 0.09%)</title><rect x="1028.5" y="1061" width="1.1" height="15.0" fill="rgb(208,64,1)" rx="2" ry="2" />
<text  x="1031.52" y="1071.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.09%)</title><rect x="1064.4" y="1461" width="1.1" height="15.0" fill="rgb(224,34,2)" rx="2" ry="2" />
<text  x="1067.40" y="1471.5" ></text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.09%)</title><rect x="1158.3" y="1477" width="1.1" height="15.0" fill="rgb(254,115,17)" rx="2" ry="2" />
<text  x="1161.34" y="1487.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (1 samples, 0.09%)</title><rect x="1030.6" y="421" width="1.1" height="15.0" fill="rgb(247,165,35)" rx="2" ry="2" />
<text  x="1033.63" y="431.5" ></text>
</g>
<g >
<title>ring_buffer_read_head (1 samples, 0.09%)</title><rect x="96.5" y="1445" width="1.1" height="15.0" fill="rgb(227,64,17)" rx="2" ry="2" />
<text  x="99.55" y="1455.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.09%)</title><rect x="981.0" y="1477" width="1.1" height="15.0" fill="rgb(246,221,49)" rx="2" ry="2" />
<text  x="984.02" y="1487.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (39 samples, 3.49%)</title><rect x="250.6" y="1173" width="41.2" height="15.0" fill="rgb(251,78,33)" rx="2" ry="2" />
<text  x="253.64" y="1183.5" >zap..</text>
</g>
<g >
<title>ringbuf::ring_buffer::RingBuffer&lt;T&gt;::len (38 samples, 3.40%)</title><rect x="303.4" y="1397" width="40.1" height="15.0" fill="rgb(208,91,48)" rx="2" ry="2" />
<text  x="306.42" y="1407.5" >rin..</text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.09%)</title><rect x="1005.3" y="1093" width="1.1" height="15.0" fill="rgb(229,13,19)" rx="2" ry="2" />
<text  x="1008.30" y="1103.5" ></text>
</g>
<g >
<title>do_shared_fault (1 samples, 0.09%)</title><rect x="121.9" y="1269" width="1.0" height="15.0" fill="rgb(227,154,50)" rx="2" ry="2" />
<text  x="124.88" y="1279.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.09%)</title><rect x="120.8" y="1269" width="1.1" height="15.0" fill="rgb(224,197,46)" rx="2" ry="2" />
<text  x="123.82" y="1279.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.09%)</title><rect x="120.8" y="1349" width="1.1" height="15.0" fill="rgb(207,1,7)" rx="2" ry="2" />
<text  x="123.82" y="1359.5" ></text>
</g>
<g >
<title>schedule_idle (13 samples, 1.16%)</title><rect x="1167.8" y="1477" width="13.8" height="15.0" fill="rgb(230,196,19)" rx="2" ry="2" />
<text  x="1170.84" y="1487.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.09%)</title><rect x="1030.6" y="661" width="1.1" height="15.0" fill="rgb(226,22,50)" rx="2" ry="2" />
<text  x="1033.63" y="671.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (3 samples, 0.27%)</title><rect x="200.0" y="1349" width="3.1" height="15.0" fill="rgb(222,4,6)" rx="2" ry="2" />
<text  x="202.98" y="1359.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (1 samples, 0.09%)</title><rect x="1030.6" y="597" width="1.1" height="15.0" fill="rgb(253,142,12)" rx="2" ry="2" />
<text  x="1033.63" y="607.5" ></text>
</g>
<g >
<title>cpuidle_enter (4 samples, 0.36%)</title><rect x="1184.7" y="1397" width="4.2" height="15.0" fill="rgb(234,198,17)" rx="2" ry="2" />
<text  x="1187.72" y="1407.5" ></text>
</g>
<g >
<title>calc_load_nohz_stop (1 samples, 0.09%)</title><rect x="1183.7" y="1461" width="1.0" height="15.0" fill="rgb(223,125,39)" rx="2" ry="2" />
<text  x="1186.67" y="1471.5" ></text>
</g>
<g >
<title>alloc_empty_file (1 samples, 0.09%)</title><rect x="116.6" y="1269" width="1.1" height="15.0" fill="rgb(210,163,37)" rx="2" ry="2" />
<text  x="119.60" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="120.8" y="1397" width="1.1" height="15.0" fill="rgb(216,35,36)" rx="2" ry="2" />
<text  x="123.82" y="1407.5" ></text>
</g>
<g >
<title>main (7 samples, 0.63%)</title><rect x="1024.3" y="1493" width="7.4" height="15.0" fill="rgb(220,132,50)" rx="2" ry="2" />
<text  x="1027.29" y="1503.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (4 samples, 0.36%)</title><rect x="1173.1" y="1397" width="4.2" height="15.0" fill="rgb(237,97,54)" rx="2" ry="2" />
<text  x="1176.11" y="1407.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::deserialize (1 samples, 0.09%)</title><rect x="1030.6" y="1173" width="1.1" height="15.0" fill="rgb(206,182,28)" rx="2" ry="2" />
<text  x="1033.63" y="1183.5" ></text>
</g>
<g >
<title>NaClSysForkDecoder (4 samples, 0.36%)</title><rect x="246.4" y="1509" width="4.2" height="15.0" fill="rgb(242,190,9)" rx="2" ry="2" />
<text  x="249.42" y="1519.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.09%)</title><rect x="97.6" y="1349" width="1.1" height="15.0" fill="rgb(227,188,42)" rx="2" ry="2" />
<text  x="100.60" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="97.6" y="1381" width="1.1" height="15.0" fill="rgb(227,216,27)" rx="2" ry="2" />
<text  x="100.60" y="1391.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::Inode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (1 samples, 0.09%)</title><rect x="1030.6" y="725" width="1.1" height="15.0" fill="rgb(235,205,9)" rx="2" ry="2" />
<text  x="1033.63" y="735.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.09%)</title><rect x="1076.0" y="1397" width="1.1" height="15.0" fill="rgb(254,36,32)" rx="2" ry="2" />
<text  x="1079.01" y="1407.5" ></text>
</g>
<g >
<title>unmap_vmas (39 samples, 3.49%)</title><rect x="250.6" y="1221" width="41.2" height="15.0" fill="rgb(210,58,41)" rx="2" ry="2" />
<text  x="253.64" y="1231.5" >unm..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.09%)</title><rect x="270.7" y="1077" width="1.1" height="15.0" fill="rgb(208,39,36)" rx="2" ry="2" />
<text  x="273.70" y="1087.5" ></text>
</g>
<g >
<title>std::fs::File::metadata (1 samples, 0.09%)</title><rect x="1030.6" y="229" width="1.1" height="15.0" fill="rgb(214,116,6)" rx="2" ry="2" />
<text  x="1033.63" y="239.5" ></text>
</g>
<g >
<title>nohz_newidle_balance (12 samples, 1.07%)</title><rect x="1168.9" y="1413" width="12.7" height="15.0" fill="rgb(232,62,37)" rx="2" ry="2" />
<text  x="1171.89" y="1423.5" ></text>
</g>
<g >
<title>__vm_munmap (41 samples, 3.67%)</title><rect x="203.1" y="1349" width="43.3" height="15.0" fill="rgb(224,125,39)" rx="2" ry="2" />
<text  x="206.15" y="1359.5" >__vm..</text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.09%)</title><rect x="97.6" y="1237" width="1.1" height="15.0" fill="rgb(240,69,40)" rx="2" ry="2" />
<text  x="100.60" y="1247.5" ></text>
</g>
<g >
<title>NaClTextMapClearCacheIfNeeded (1 samples, 0.09%)</title><rect x="120.8" y="1461" width="1.1" height="15.0" fill="rgb(229,161,39)" rx="2" ry="2" />
<text  x="123.82" y="1471.5" ></text>
</g>
<g >
<title>shmem_evict_inode (1 samples, 0.09%)</title><rect x="1064.4" y="1285" width="1.1" height="15.0" fill="rgb(238,125,28)" rx="2" ry="2" />
<text  x="1067.40" y="1295.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::read_from_pipe (111 samples, 9.93%)</title><rect x="298.1" y="1429" width="117.2" height="15.0" fill="rgb(225,77,14)" rx="2" ry="2" />
<text  x="301.14" y="1439.5" >rustposix::int..</text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (1 samples, 0.09%)</title><rect x="1030.6" y="405" width="1.1" height="15.0" fill="rgb(214,7,52)" rx="2" ry="2" />
<text  x="1033.63" y="415.5" ></text>
</g>
<g >
<title>serde_cbor::de::from_slice (1 samples, 0.09%)</title><rect x="1030.6" y="1189" width="1.1" height="15.0" fill="rgb(215,176,53)" rx="2" ry="2" />
<text  x="1033.63" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="1026.4" y="1333" width="1.1" height="15.0" fill="rgb(208,48,25)" rx="2" ry="2" />
<text  x="1029.40" y="1343.5" ></text>
</g>
<g >
<title>__read_once_size (1 samples, 0.09%)</title><rect x="96.5" y="1429" width="1.1" height="15.0" fill="rgb(221,82,20)" rx="2" ry="2" />
<text  x="99.55" y="1439.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="99.7" y="1525" width="1.1" height="15.0" fill="rgb(239,182,11)" rx="2" ry="2" />
<text  x="102.71" y="1535.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (2 samples, 0.18%)</title><rect x="1024.3" y="1461" width="2.1" height="15.0" fill="rgb(205,215,42)" rx="2" ry="2" />
<text  x="1027.29" y="1471.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.09%)</title><rect x="1072.8" y="1381" width="1.1" height="15.0" fill="rgb(237,169,13)" rx="2" ry="2" />
<text  x="1075.84" y="1391.5" ></text>
</g>
<g >
<title>NaClChildNapCtor (4 samples, 0.36%)</title><rect x="246.4" y="1477" width="4.2" height="15.0" fill="rgb(228,175,44)" rx="2" ry="2" />
<text  x="249.42" y="1487.5" ></text>
</g>
<g >
<title>get_typical_interval (2 samples, 0.18%)</title><rect x="1150.9" y="1429" width="2.2" height="15.0" fill="rgb(213,59,33)" rx="2" ry="2" />
<text  x="1153.95" y="1439.5" ></text>
</g>
<g >
<title>all (1,118 samples, 100%)</title><rect x="10.0" y="1573" width="1180.0" height="15.0" fill="rgb(253,7,28)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.09%)</title><rect x="198.9" y="1189" width="1.1" height="15.0" fill="rgb(227,189,31)" rx="2" ry="2" />
<text  x="201.93" y="1199.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.09%)</title><rect x="1076.0" y="1269" width="1.1" height="15.0" fill="rgb(234,197,26)" rx="2" ry="2" />
<text  x="1079.01" y="1279.5" ></text>
</g>
<g >
<title>lind_write (330 samples, 29.52%)</title><rect x="416.4" y="1477" width="348.3" height="15.0" fill="rgb(211,98,30)" rx="2" ry="2" />
<text  x="419.35" y="1487.5" >lind_write</text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (2 samples, 0.18%)</title><rect x="965.2" y="1397" width="2.1" height="15.0" fill="rgb(213,5,21)" rx="2" ry="2" />
<text  x="968.19" y="1407.5" ></text>
</g>
<g >
<title>clear_page_erms (31 samples, 2.77%)</title><rect x="890.3" y="1365" width="32.7" height="15.0" fill="rgb(233,35,48)" rx="2" ry="2" />
<text  x="893.25" y="1375.5" >cl..</text>
</g>
<g >
<title>&lt;dashmap::iter::Iter&lt;K,V,S,M&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="1027.5" y="1333" width="1.0" height="15.0" fill="rgb(207,206,5)" rx="2" ry="2" />
<text  x="1030.46" y="1343.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy::{{closure}} (10 samples, 0.89%)</title><rect x="102.9" y="1461" width="10.5" height="15.0" fill="rgb(208,102,0)" rx="2" ry="2" />
<text  x="105.88" y="1471.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.09%)</title><rect x="296.0" y="1349" width="1.1" height="15.0" fill="rgb(244,109,48)" rx="2" ry="2" />
<text  x="299.03" y="1359.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (4 samples, 0.36%)</title><rect x="1184.7" y="1413" width="4.2" height="15.0" fill="rgb(245,154,4)" rx="2" ry="2" />
<text  x="1187.72" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="198.9" y="1349" width="1.1" height="15.0" fill="rgb(229,126,17)" rx="2" ry="2" />
<text  x="201.93" y="1359.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (1 samples, 0.09%)</title><rect x="1030.6" y="549" width="1.1" height="15.0" fill="rgb(238,139,5)" rx="2" ry="2" />
<text  x="1033.63" y="559.5" ></text>
</g>
<g >
<title>idr_alloc_u32 (1 samples, 0.09%)</title><rect x="10.0" y="1237" width="1.1" height="15.0" fill="rgb(238,227,25)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.09%)</title><rect x="121.9" y="1285" width="1.0" height="15.0" fill="rgb(238,215,28)" rx="2" ry="2" />
<text  x="124.88" y="1295.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.27%)</title><rect x="1027.5" y="1413" width="3.1" height="15.0" fill="rgb(222,182,51)" rx="2" ry="2" />
<text  x="1030.46" y="1423.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.09%)</title><rect x="203.1" y="1253" width="1.1" height="15.0" fill="rgb(232,177,35)" rx="2" ry="2" />
<text  x="206.15" y="1263.5" ></text>
</g>
<g >
<title>do_mmap (39 samples, 3.49%)</title><rect x="250.6" y="1285" width="41.2" height="15.0" fill="rgb(239,161,10)" rx="2" ry="2" />
<text  x="253.64" y="1295.5" >do_..</text>
</g>
<g >
<title>std::sync::once::Once::call_once_force (1 samples, 0.09%)</title><rect x="1030.6" y="1349" width="1.1" height="15.0" fill="rgb(251,16,16)" rx="2" ry="2" />
<text  x="1033.63" y="1359.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.09%)</title><rect x="973.6" y="1381" width="1.1" height="15.0" fill="rgb(242,176,20)" rx="2" ry="2" />
<text  x="976.63" y="1391.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.09%)</title><rect x="1063.3" y="1445" width="1.1" height="15.0" fill="rgb(224,163,5)" rx="2" ry="2" />
<text  x="1066.35" y="1455.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::ser::StructSerializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.09%)</title><rect x="1028.5" y="1253" width="1.1" height="15.0" fill="rgb(249,1,17)" rx="2" ry="2" />
<text  x="1031.52" y="1263.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (5 samples, 0.45%)</title><rect x="1153.1" y="1429" width="5.2" height="15.0" fill="rgb(207,217,8)" rx="2" ry="2" />
<text  x="1156.06" y="1439.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardown (48 samples, 4.29%)</title><rect x="149.3" y="1461" width="50.7" height="15.0" fill="rgb(224,87,38)" rx="2" ry="2" />
<text  x="152.32" y="1471.5" >NaClA..</text>
</g>
<g >
<title>idr_alloc_cyclic (1 samples, 0.09%)</title><rect x="10.0" y="1253" width="1.1" height="15.0" fill="rgb(237,9,25)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" ></text>
</g>
<g >
<title>rustposix::interface::comm::Socket::new (1 samples, 0.09%)</title><rect x="116.6" y="1413" width="1.1" height="15.0" fill="rgb(251,73,48)" rx="2" ry="2" />
<text  x="119.60" y="1423.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="1153.1" y="1413" width="1.0" height="15.0" fill="rgb(207,86,28)" rx="2" ry="2" />
<text  x="1156.06" y="1423.5" ></text>
</g>
<g >
<title>&lt;std::sync::lazy_lock::LazyLock&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.09%)</title><rect x="1030.6" y="1429" width="1.1" height="15.0" fill="rgb(236,225,39)" rx="2" ry="2" />
<text  x="1033.63" y="1439.5" ></text>
</g>
<g >
<title>lind_connect (1 samples, 0.09%)</title><rect x="116.6" y="1477" width="1.1" height="15.0" fill="rgb(209,131,8)" rx="2" ry="2" />
<text  x="119.60" y="1487.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (1 samples, 0.09%)</title><rect x="416.4" y="1349" width="1.0" height="15.0" fill="rgb(232,205,4)" rx="2" ry="2" />
<text  x="419.35" y="1359.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (110 samples, 9.84%)</title><rect x="1073.9" y="1541" width="116.1" height="15.0" fill="rgb(211,199,41)" rx="2" ry="2" />
<text  x="1076.90" y="1551.5" >secondary_star..</text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force::{{closure}} (1 samples, 0.09%)</title><rect x="1030.6" y="1269" width="1.1" height="15.0" fill="rgb(250,111,35)" rx="2" ry="2" />
<text  x="1033.63" y="1279.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (13 samples, 1.16%)</title><rect x="277.0" y="1061" width="13.8" height="15.0" fill="rgb(223,229,28)" rx="2" ry="2" />
<text  x="280.03" y="1071.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.09%)</title><rect x="271.8" y="1093" width="1.0" height="15.0" fill="rgb(225,95,29)" rx="2" ry="2" />
<text  x="274.75" y="1103.5" ></text>
</g>
<g >
<title>NaClSelLdrMain (7 samples, 0.63%)</title><rect x="1024.3" y="1477" width="7.4" height="15.0" fill="rgb(228,49,11)" rx="2" ry="2" />
<text  x="1027.29" y="1487.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.09%)</title><rect x="1005.3" y="1109" width="1.1" height="15.0" fill="rgb(214,6,10)" rx="2" ry="2" />
<text  x="1008.30" y="1119.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (18 samples, 1.61%)</title><rect x="928.2" y="1333" width="19.0" height="15.0" fill="rgb(232,78,48)" rx="2" ry="2" />
<text  x="931.25" y="1343.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.09%)</title><rect x="1076.0" y="1381" width="1.1" height="15.0" fill="rgb(209,95,29)" rx="2" ry="2" />
<text  x="1079.01" y="1391.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 0.09%)</title><rect x="10.0" y="1397" width="1.1" height="15.0" fill="rgb(227,13,31)" rx="2" ry="2" />
<text  x="13.00" y="1407.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (10 samples, 0.89%)</title><rect x="102.9" y="1477" width="10.5" height="15.0" fill="rgb(219,172,26)" rx="2" ry="2" />
<text  x="105.88" y="1487.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.09%)</title><rect x="1064.4" y="1205" width="1.1" height="15.0" fill="rgb(241,156,38)" rx="2" ry="2" />
<text  x="1067.40" y="1215.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="121.9" y="1333" width="1.0" height="15.0" fill="rgb(242,130,8)" rx="2" ry="2" />
<text  x="124.88" y="1343.5" ></text>
</g>
<g >
<title>record__mmap_read_all (2 samples, 0.18%)</title><rect x="96.5" y="1509" width="2.2" height="15.0" fill="rgb(219,158,29)" rx="2" ry="2" />
<text  x="99.55" y="1519.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (17 samples, 1.52%)</title><rect x="434.3" y="1397" width="17.9" height="15.0" fill="rgb(240,114,30)" rx="2" ry="2" />
<text  x="437.29" y="1407.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.09%)</title><rect x="883.9" y="1381" width="1.1" height="15.0" fill="rgb(248,24,6)" rx="2" ry="2" />
<text  x="886.92" y="1391.5" ></text>
</g>
<g >
<title>copy_process (1 samples, 0.09%)</title><rect x="10.0" y="1285" width="1.1" height="15.0" fill="rgb(238,57,49)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" ></text>
</g>
<g >
<title>MakeDynamicCodePagesVisible (1 samples, 0.09%)</title><rect x="121.9" y="1429" width="1.0" height="15.0" fill="rgb(248,70,12)" rx="2" ry="2" />
<text  x="124.88" y="1439.5" ></text>
</g>
<g >
<title>__alloc_file (1 samples, 0.09%)</title><rect x="116.6" y="1253" width="1.1" height="15.0" fill="rgb(241,169,49)" rx="2" ry="2" />
<text  x="119.60" y="1263.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.09%)</title><rect x="1026.4" y="1125" width="1.1" height="15.0" fill="rgb(249,111,31)" rx="2" ry="2" />
<text  x="1029.40" y="1135.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.09%)</title><rect x="1076.0" y="1301" width="1.1" height="15.0" fill="rgb(219,89,15)" rx="2" ry="2" />
<text  x="1079.01" y="1311.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::try_statx::statx (1 samples, 0.09%)</title><rect x="1030.6" y="181" width="1.1" height="15.0" fill="rgb(214,131,47)" rx="2" ry="2" />
<text  x="1033.63" y="191.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.09%)</title><rect x="1026.4" y="1109" width="1.1" height="15.0" fill="rgb(247,227,26)" rx="2" ry="2" />
<text  x="1029.40" y="1119.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (3 samples, 0.27%)</title><rect x="1003.2" y="1445" width="3.2" height="15.0" fill="rgb(234,1,20)" rx="2" ry="2" />
<text  x="1006.18" y="1455.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (1 samples, 0.09%)</title><rect x="297.1" y="1333" width="1.0" height="15.0" fill="rgb(230,94,2)" rx="2" ry="2" />
<text  x="300.08" y="1343.5" ></text>
</g>
<g >
<title>NaClAppDtor (47 samples, 4.20%)</title><rect x="149.3" y="1429" width="49.6" height="15.0" fill="rgb(226,128,45)" rx="2" ry="2" />
<text  x="152.32" y="1439.5" >NaClA..</text>
</g>
<g >
<title>__free_one_page (10 samples, 0.89%)</title><rect x="280.2" y="1045" width="10.6" height="15.0" fill="rgb(253,162,5)" rx="2" ry="2" />
<text  x="283.20" y="1055.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.27%)</title><rect x="1003.2" y="1317" width="3.2" height="15.0" fill="rgb(253,106,44)" rx="2" ry="2" />
<text  x="1006.18" y="1327.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.09%)</title><rect x="1147.8" y="1461" width="1.0" height="15.0" fill="rgb(221,148,54)" rx="2" ry="2" />
<text  x="1150.78" y="1471.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (1 samples, 0.09%)</title><rect x="1030.6" y="373" width="1.1" height="15.0" fill="rgb(226,211,54)" rx="2" ry="2" />
<text  x="1033.63" y="383.5" ></text>
</g>
<g >
<title>NaClSysRead (117 samples, 10.47%)</title><rect x="291.8" y="1493" width="123.5" height="15.0" fill="rgb(207,145,23)" rx="2" ry="2" />
<text  x="294.81" y="1503.5" >NaClSysRead</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::len (1 samples, 0.09%)</title><rect x="1028.5" y="1077" width="1.1" height="15.0" fill="rgb(232,17,10)" rx="2" ry="2" />
<text  x="1031.52" y="1087.5" ></text>
</g>
<g >
<title>zap_pte_range (3 samples, 0.27%)</title><rect x="150.4" y="1221" width="3.1" height="15.0" fill="rgb(251,79,25)" rx="2" ry="2" />
<text  x="153.38" y="1231.5" ></text>
</g>
<g >
<title>do_anonymous_page (97 samples, 8.68%)</title><rect x="876.5" y="1429" width="102.4" height="15.0" fill="rgb(222,100,48)" rx="2" ry="2" />
<text  x="879.53" y="1439.5" >do_anonymous..</text>
</g>
<g >
<title>NaClAppThreadTeardownChildren (1 samples, 0.09%)</title><rect x="198.9" y="1429" width="1.1" height="15.0" fill="rgb(253,154,23)" rx="2" ry="2" />
<text  x="201.93" y="1439.5" ></text>
</g>
<g >
<title>ioctl (80 samples, 7.16%)</title><rect x="12.1" y="1461" width="84.4" height="15.0" fill="rgb(209,5,3)" rx="2" ry="2" />
<text  x="15.11" y="1471.5" >ioctl</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="921.9" y="1349" width="1.1" height="15.0" fill="rgb(206,185,6)" rx="2" ry="2" />
<text  x="924.91" y="1359.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (2 samples, 0.18%)</title><rect x="1024.3" y="1445" width="2.1" height="15.0" fill="rgb(238,136,35)" rx="2" ry="2" />
<text  x="1027.29" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.09%)</title><rect x="1154.1" y="1413" width="1.1" height="15.0" fill="rgb(231,115,36)" rx="2" ry="2" />
<text  x="1157.11" y="1423.5" ></text>
</g>
<g >
<title>NaClSysConnectDecoder (1 samples, 0.09%)</title><rect x="116.6" y="1509" width="1.1" height="15.0" fill="rgb(248,42,42)" rx="2" ry="2" />
<text  x="119.60" y="1519.5" ></text>
</g>
<g >
<title>NaClAppThreadSetSuspendState (1 samples, 0.09%)</title><rect x="115.5" y="1509" width="1.1" height="15.0" fill="rgb(246,95,37)" rx="2" ry="2" />
<text  x="118.55" y="1519.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.09%)</title><rect x="1155.2" y="1413" width="1.0" height="15.0" fill="rgb(221,107,53)" rx="2" ry="2" />
<text  x="1158.17" y="1423.5" ></text>
</g>
<g >
<title>serde_cbor::ser::Serializer&lt;W&gt;::write_u32 (1 samples, 0.09%)</title><rect x="100.8" y="1525" width="1.0" height="15.0" fill="rgb(225,95,30)" rx="2" ry="2" />
<text  x="103.77" y="1535.5" ></text>
</g>
<g >
<title>NaClAppThreadTeardownInner (41 samples, 3.67%)</title><rect x="203.1" y="1461" width="43.3" height="15.0" fill="rgb(214,180,12)" rx="2" ry="2" />
<text  x="206.15" y="1471.5" >NaCl..</text>
</g>
<g >
<title>__schedule (13 samples, 1.16%)</title><rect x="1167.8" y="1461" width="13.8" height="15.0" fill="rgb(214,88,44)" rx="2" ry="2" />
<text  x="1170.84" y="1471.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (1 samples, 0.09%)</title><rect x="116.6" y="1301" width="1.1" height="15.0" fill="rgb(235,167,28)" rx="2" ry="2" />
<text  x="119.60" y="1311.5" ></text>
</g>
<g >
<title>CompareAndSwap (1 samples, 0.09%)</title><rect x="115.5" y="1493" width="1.1" height="15.0" fill="rgb(209,75,13)" rx="2" ry="2" />
<text  x="118.55" y="1503.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (4 samples, 0.36%)</title><rect x="246.4" y="1445" width="4.2" height="15.0" fill="rgb(214,142,27)" rx="2" ry="2" />
<text  x="249.42" y="1455.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (5 samples, 0.45%)</title><rect x="1184.7" y="1509" width="5.3" height="15.0" fill="rgb(229,33,12)" rx="2" ry="2" />
<text  x="1187.72" y="1519.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (30 samples, 2.68%)</title><rect x="1031.7" y="1541" width="31.6" height="15.0" fill="rgb(251,182,8)" rx="2" ry="2" />
<text  x="1034.68" y="1551.5" >as..</text>
</g>
<g >
<title>do_syscall_64 (47 samples, 4.20%)</title><rect x="149.3" y="1365" width="49.6" height="15.0" fill="rgb(239,60,8)" rx="2" ry="2" />
<text  x="152.32" y="1375.5" >do_sy..</text>
</g>
<g >
<title>rustposix::safeposix::dispatcher::dispatcher::{{closure}} (39 samples, 3.49%)</title><rect x="250.6" y="1429" width="41.2" height="15.0" fill="rgb(207,142,52)" rx="2" ry="2" />
<text  x="253.64" y="1439.5" >rus..</text>
</g>
<g >
<title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="416.4" y="1397" width="1.0" height="15.0" fill="rgb(214,137,0)" rx="2" ry="2" />
<text  x="419.35" y="1407.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.09%)</title><rect x="1027.5" y="1301" width="1.0" height="15.0" fill="rgb(242,128,10)" rx="2" ry="2" />
<text  x="1030.46" y="1311.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.09%)</title><rect x="1072.8" y="1477" width="1.1" height="15.0" fill="rgb(216,17,7)" rx="2" ry="2" />
<text  x="1075.84" y="1487.5" ></text>
</g>
<g >
<title>dashmap::default_shard_amount (1 samples, 0.09%)</title><rect x="1030.6" y="325" width="1.1" height="15.0" fill="rgb(246,129,35)" rx="2" ry="2" />
<text  x="1033.63" y="335.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (2 samples, 0.18%)</title><rect x="1179.4" y="1381" width="2.2" height="15.0" fill="rgb(237,155,38)" rx="2" ry="2" />
<text  x="1182.45" y="1391.5" ></text>
</g>
<g >
<title>arch_call_rest_init (5 samples, 0.45%)</title><rect x="1184.7" y="1477" width="5.3" height="15.0" fill="rgb(218,124,20)" rx="2" ry="2" />
<text  x="1187.72" y="1487.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::initialize::{{closure}} (1 samples, 0.09%)</title><rect x="1030.6" y="1301" width="1.1" height="15.0" fill="rgb(238,109,40)" rx="2" ry="2" />
<text  x="1033.63" y="1311.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (1 samples, 0.09%)</title><rect x="1030.6" y="1253" width="1.1" height="15.0" fill="rgb(242,36,23)" rx="2" ry="2" />
<text  x="1033.63" y="1263.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.09%)</title><rect x="1029.6" y="1269" width="1.0" height="15.0" fill="rgb(243,210,48)" rx="2" ry="2" />
<text  x="1032.57" y="1279.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="113.4" y="1525" width="1.1" height="15.0" fill="rgb(215,159,32)" rx="2" ry="2" />
<text  x="116.43" y="1535.5" ></text>
</g>
<g >
<title>poll_idle (3 samples, 0.27%)</title><rect x="1185.8" y="1365" width="3.1" height="15.0" fill="rgb(211,129,53)" rx="2" ry="2" />
<text  x="1188.78" y="1375.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.09%)</title><rect x="97.6" y="1173" width="1.1" height="15.0" fill="rgb(223,168,19)" rx="2" ry="2" />
<text  x="100.60" y="1183.5" ></text>
</g>
<g >
<title>do_user_addr_fault (124 samples, 11.09%)</title><rect x="855.4" y="1493" width="130.9" height="15.0" fill="rgb(245,216,36)" rx="2" ry="2" />
<text  x="858.42" y="1503.5" >do_user_addr_fault</text>
</g>
<g >
<title>NaClSysReadDecoder (117 samples, 10.47%)</title><rect x="291.8" y="1509" width="123.5" height="15.0" fill="rgb(220,226,49)" rx="2" ry="2" />
<text  x="294.81" y="1519.5" >NaClSysReadDeco..</text>
</g>
<g >
<title>ext4_setattr (1 samples, 0.09%)</title><rect x="1026.4" y="1189" width="1.1" height="15.0" fill="rgb(239,7,29)" rx="2" ry="2" />
<text  x="1029.40" y="1199.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="1025.3" y="1349" width="1.1" height="15.0" fill="rgb(244,26,46)" rx="2" ry="2" />
<text  x="1028.35" y="1359.5" ></text>
</g>
<g >
<title>try_charge (4 samples, 0.36%)</title><rect x="967.3" y="1397" width="4.2" height="15.0" fill="rgb(210,140,41)" rx="2" ry="2" />
<text  x="970.30" y="1407.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (1 samples, 0.09%)</title><rect x="1030.6" y="709" width="1.1" height="15.0" fill="rgb(227,99,5)" rx="2" ry="2" />
<text  x="1033.63" y="719.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.09%)</title><rect x="149.3" y="1285" width="1.1" height="15.0" fill="rgb(244,117,45)" rx="2" ry="2" />
<text  x="152.32" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_process_vm_writev (1 samples, 0.09%)</title><rect x="1006.4" y="1461" width="1.0" height="15.0" fill="rgb(207,182,9)" rx="2" ry="2" />
<text  x="1009.35" y="1471.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.09%)</title><rect x="1063.3" y="1429" width="1.1" height="15.0" fill="rgb(239,136,18)" rx="2" ry="2" />
<text  x="1066.35" y="1439.5" ></text>
</g>
<g >
<title>[sel_ldr] (616 samples, 55.10%)</title><rect x="114.5" y="1541" width="650.2" height="15.0" fill="rgb(242,70,29)" rx="2" ry="2" />
<text  x="117.49" y="1551.5" >[sel_ldr]</text>
</g>
<g >
<title>tick_nohz_idle_exit (2 samples, 0.18%)</title><rect x="1182.6" y="1477" width="2.1" height="15.0" fill="rgb(234,160,23)" rx="2" ry="2" />
<text  x="1185.61" y="1487.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.09%)</title><rect x="198.9" y="1205" width="1.1" height="15.0" fill="rgb(224,134,13)" rx="2" ry="2" />
<text  x="201.93" y="1215.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (69 samples, 6.17%)</title><rect x="1075.0" y="1445" width="72.8" height="15.0" fill="rgb(217,221,8)" rx="2" ry="2" />
<text  x="1077.96" y="1455.5" >cpuidle_..</text>
</g>
<g >
<title>std::sys::unix::cvt_r (1 samples, 0.09%)</title><rect x="1026.4" y="1381" width="1.1" height="15.0" fill="rgb(248,159,1)" rx="2" ry="2" />
<text  x="1029.40" y="1391.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (2 samples, 0.18%)</title><rect x="1024.3" y="1381" width="2.1" height="15.0" fill="rgb(246,199,29)" rx="2" ry="2" />
<text  x="1027.29" y="1391.5" ></text>
</g>
<g >
<title>__do_fault (3 samples, 0.27%)</title><rect x="1003.2" y="1253" width="3.2" height="15.0" fill="rgb(212,184,37)" rx="2" ry="2" />
<text  x="1006.18" y="1263.5" ></text>
</g>
<g >
<title>ApplyDfaValidator_x86_64 (3 samples, 0.27%)</title><rect x="200.0" y="1365" width="3.1" height="15.0" fill="rgb(217,43,49)" rx="2" ry="2" />
<text  x="202.98" y="1375.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (10 samples, 0.89%)</title><rect x="102.9" y="1445" width="10.5" height="15.0" fill="rgb(233,181,22)" rx="2" ry="2" />
<text  x="105.88" y="1455.5" ></text>
</g>
<g >
<title>unmap_single_vma (3 samples, 0.27%)</title><rect x="150.4" y="1269" width="3.1" height="15.0" fill="rgb(218,22,30)" rx="2" ry="2" />
<text  x="153.38" y="1279.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.09%)</title><rect x="120.8" y="1285" width="1.1" height="15.0" fill="rgb(241,74,16)" rx="2" ry="2" />
<text  x="123.82" y="1295.5" ></text>
</g>
<g >
<title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (2 samples, 0.18%)</title><rect x="292.9" y="1381" width="2.1" height="15.0" fill="rgb(239,146,17)" rx="2" ry="2" />
<text  x="295.86" y="1391.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="300.3" y="1397" width="1.0" height="15.0" fill="rgb(206,165,22)" rx="2" ry="2" />
<text  x="303.25" y="1407.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.09%)</title><rect x="1063.3" y="1413" width="1.1" height="15.0" fill="rgb(208,121,28)" rx="2" ry="2" />
<text  x="1066.35" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="1063.3" y="1525" width="2.2" height="15.0" fill="rgb(205,6,53)" rx="2" ry="2" />
<text  x="1066.35" y="1535.5" ></text>
</g>
<g >
<title>lru_cache_add (10 samples, 0.89%)</title><rect x="951.5" y="1397" width="10.5" height="15.0" fill="rgb(235,23,4)" rx="2" ry="2" />
<text  x="954.47" y="1407.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_enum (1 samples, 0.09%)</title><rect x="1030.6" y="789" width="1.1" height="15.0" fill="rgb(218,60,3)" rx="2" ry="2" />
<text  x="1033.63" y="799.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.09%)</title><rect x="1025.3" y="1333" width="1.1" height="15.0" fill="rgb(230,119,13)" rx="2" ry="2" />
<text  x="1028.35" y="1343.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (1 samples, 0.09%)</title><rect x="1030.6" y="1093" width="1.1" height="15.0" fill="rgb(229,113,42)" rx="2" ry="2" />
<text  x="1033.63" y="1103.5" ></text>
</g>
<g >
<title>process_vm_rw (1 samples, 0.09%)</title><rect x="1006.4" y="1445" width="1.0" height="15.0" fill="rgb(218,186,2)" rx="2" ry="2" />
<text  x="1009.35" y="1455.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.09%)</title><rect x="12.1" y="1365" width="1.1" height="15.0" fill="rgb(216,223,40)" rx="2" ry="2" />
<text  x="15.11" y="1375.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (1 samples, 0.09%)</title><rect x="1030.6" y="1045" width="1.1" height="15.0" fill="rgb(236,178,46)" rx="2" ry="2" />
<text  x="1033.63" y="1055.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.09%)</title><rect x="1064.4" y="1301" width="1.1" height="15.0" fill="rgb(236,186,15)" rx="2" ry="2" />
<text  x="1067.40" y="1311.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="1075.0" y="1381" width="1.0" height="15.0" fill="rgb(228,132,18)" rx="2" ry="2" />
<text  x="1077.96" y="1391.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="295.0" y="1349" width="1.0" height="15.0" fill="rgb(253,167,9)" rx="2" ry="2" />
<text  x="297.97" y="1359.5" ></text>
</g>
<g >
<title>NaClAppLoadFileFromFilename (3 samples, 0.27%)</title><rect x="200.0" y="1445" width="3.1" height="15.0" fill="rgb(211,229,44)" rx="2" ry="2" />
<text  x="202.98" y="1455.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.09%)</title><rect x="1072.8" y="1493" width="1.1" height="15.0" fill="rgb(211,192,51)" rx="2" ry="2" />
<text  x="1075.84" y="1503.5" ></text>
</g>
<g >
<title>smp_call_function_single (75 samples, 6.71%)</title><rect x="17.4" y="1317" width="79.1" height="15.0" fill="rgb(216,13,25)" rx="2" ry="2" />
<text  x="20.39" y="1327.5" >smp_call_..</text>
</g>
<g >
<title>rwsem_down_write_slowpath (43 samples, 3.85%)</title><rect x="153.5" y="1301" width="45.4" height="15.0" fill="rgb(206,72,12)" rx="2" ry="2" />
<text  x="156.54" y="1311.5" >rwse..</text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.09%)</title><rect x="10.0" y="1525" width="1.1" height="15.0" fill="rgb(230,42,48)" rx="2" ry="2" />
<text  x="13.00" y="1535.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_access (148 samples, 13.24%)</title><rect x="456.5" y="1381" width="156.2" height="15.0" fill="rgb(227,215,36)" rx="2" ry="2" />
<text  x="459.46" y="1391.5" >ringbuf::producer::P..</text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_enum_map (1 samples, 0.09%)</title><rect x="1030.6" y="773" width="1.1" height="15.0" fill="rgb(219,160,22)" rx="2" ry="2" />
<text  x="1033.63" y="783.5" ></text>
</g>
<g >
<title>ovl_setattr.part.0 (1 samples, 0.09%)</title><rect x="1026.4" y="1221" width="1.1" height="15.0" fill="rgb(214,79,30)" rx="2" ry="2" />
<text  x="1029.40" y="1231.5" ></text>
</g>
<g >
<title>do_fault (3 samples, 0.27%)</title><rect x="1003.2" y="1285" width="3.2" height="15.0" fill="rgb(254,36,42)" rx="2" ry="2" />
<text  x="1006.18" y="1295.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::de::Deserialize for dashmap::DashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.09%)</title><rect x="1030.6" y="469" width="1.1" height="15.0" fill="rgb(218,113,25)" rx="2" ry="2" />
<text  x="1033.63" y="479.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (2 samples, 0.18%)</title><rect x="1024.3" y="1365" width="2.1" height="15.0" fill="rgb(244,35,48)" rx="2" ry="2" />
<text  x="1027.29" y="1375.5" ></text>
</g>
<g >
<title>NaClAppLoadFile (3 samples, 0.27%)</title><rect x="200.0" y="1429" width="3.1" height="15.0" fill="rgb(230,25,4)" rx="2" ry="2" />
<text  x="202.98" y="1439.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.09%)</title><rect x="1030.6" y="1157" width="1.1" height="15.0" fill="rgb(210,162,27)" rx="2" ry="2" />
<text  x="1033.63" y="1167.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.18%)</title><rect x="301.3" y="1397" width="2.1" height="15.0" fill="rgb(224,210,32)" rx="2" ry="2" />
<text  x="304.31" y="1407.5" ></text>
</g>
<g >
<title>CopyCodeSafelyInitial (3 samples, 0.27%)</title><rect x="117.7" y="1461" width="3.1" height="15.0" fill="rgb(226,105,17)" rx="2" ry="2" />
<text  x="120.66" y="1471.5" ></text>
</g>
<g >
<title>pin_user_pages_remote (3 samples, 0.27%)</title><rect x="1003.2" y="1381" width="3.2" height="15.0" fill="rgb(230,58,29)" rx="2" ry="2" />
<text  x="1006.18" y="1391.5" ></text>
</g>
<g >
<title>event_function (70 samples, 6.26%)</title><rect x="22.7" y="1269" width="73.8" height="15.0" fill="rgb(245,3,45)" rx="2" ry="2" />
<text  x="25.67" y="1279.5" >event_fu..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.09%)</title><rect x="921.9" y="1269" width="1.1" height="15.0" fill="rgb(213,190,7)" rx="2" ry="2" />
<text  x="924.91" y="1279.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.09%)</title><rect x="1075.0" y="1333" width="1.0" height="15.0" fill="rgb(205,34,18)" rx="2" ry="2" />
<text  x="1077.96" y="1343.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.09%)</title><rect x="416.4" y="1365" width="1.0" height="15.0" fill="rgb(247,158,41)" rx="2" ry="2" />
<text  x="419.35" y="1375.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_enum_map::{{closure}} (1 samples, 0.09%)</title><rect x="1030.6" y="741" width="1.1" height="15.0" fill="rgb(240,26,54)" rx="2" ry="2" />
<text  x="1033.63" y="751.5" ></text>
</g>
<g >
<title>NaClSysExecv (51 samples, 4.56%)</title><rect x="149.3" y="1477" width="53.8" height="15.0" fill="rgb(231,34,36)" rx="2" ry="2" />
<text  x="152.32" y="1487.5" >NaClS..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.09%)</title><rect x="297.1" y="1301" width="1.0" height="15.0" fill="rgb(218,205,11)" rx="2" ry="2" />
<text  x="300.08" y="1311.5" ></text>
</g>
<g >
<title>[unknown]  (226 samples, 20.21%)</title><rect x="764.7" y="1541" width="238.5" height="15.0" fill="rgb(217,0,37)" rx="2" ry="2" />
<text  x="767.65" y="1551.5" >[unknown] </text>
</g>
<g >
<title>__do_munmap (1 samples, 0.09%)</title><rect x="203.1" y="1333" width="1.1" height="15.0" fill="rgb(240,197,12)" rx="2" ry="2" />
<text  x="206.15" y="1343.5" ></text>
</g>
<g >
<title>rcu_pending (1 samples, 0.09%)</title><rect x="921.9" y="1173" width="1.1" height="15.0" fill="rgb(247,102,15)" rx="2" ry="2" />
<text  x="924.91" y="1183.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.27%)</title><rect x="1003.2" y="1333" width="3.2" height="15.0" fill="rgb(215,134,24)" rx="2" ry="2" />
<text  x="1006.18" y="1343.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.09%)</title><rect x="10.0" y="1445" width="1.1" height="15.0" fill="rgb(235,71,29)" rx="2" ry="2" />
<text  x="13.00" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_select (9 samples, 0.81%)</title><rect x="1148.8" y="1461" width="9.5" height="15.0" fill="rgb(245,201,24)" rx="2" ry="2" />
<text  x="1151.84" y="1471.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (1 samples, 0.09%)</title><rect x="1030.6" y="1397" width="1.1" height="15.0" fill="rgb(240,124,14)" rx="2" ry="2" />
<text  x="1033.63" y="1407.5" ></text>
</g>
<g >
<title>[sel_ldr] (1 samples, 0.09%)</title><rect x="852.3" y="1525" width="1.0" height="15.0" fill="rgb(209,21,9)" rx="2" ry="2" />
<text  x="855.25" y="1535.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,ringbuf::consumer::Consumer&lt;u8&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="300.3" y="1413" width="1.0" height="15.0" fill="rgb(249,23,36)" rx="2" ry="2" />
<text  x="303.25" y="1423.5" ></text>
</g>
<g >
<title>[anon] (11 samples, 0.98%)</title><rect x="101.8" y="1541" width="11.6" height="15.0" fill="rgb(239,223,29)" rx="2" ry="2" />
<text  x="104.82" y="1551.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.09%)</title><rect x="296.0" y="1301" width="1.1" height="15.0" fill="rgb(222,139,44)" rx="2" ry="2" />
<text  x="299.03" y="1311.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (2 samples, 0.18%)</title><rect x="1156.2" y="1413" width="2.1" height="15.0" fill="rgb(231,41,34)" rx="2" ry="2" />
<text  x="1159.23" y="1423.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map (1 samples, 0.09%)</title><rect x="1030.6" y="581" width="1.1" height="15.0" fill="rgb(244,210,38)" rx="2" ry="2" />
<text  x="1033.63" y="591.5" ></text>
</g>
<g >
<title>CheckValidityOfRegularInstruction (1 samples, 0.09%)</title><rect x="148.3" y="1397" width="1.0" height="15.0" fill="rgb(218,195,35)" rx="2" ry="2" />
<text  x="151.26" y="1407.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.09%)</title><rect x="1026.4" y="1077" width="1.1" height="15.0" fill="rgb(227,77,0)" rx="2" ry="2" />
<text  x="1029.40" y="1087.5" ></text>
</g>
<g >
<title>__vm_munmap (47 samples, 4.20%)</title><rect x="149.3" y="1333" width="49.6" height="15.0" fill="rgb(235,35,18)" rx="2" ry="2" />
<text  x="152.32" y="1343.5" >__vm_..</text>
</g>
<g >
<title>pfn_pte (1 samples, 0.09%)</title><rect x="976.8" y="1413" width="1.1" height="15.0" fill="rgb(206,106,47)" rx="2" ry="2" />
<text  x="979.80" y="1423.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.18%)</title><rect x="1075.0" y="1413" width="2.1" height="15.0" fill="rgb(250,182,33)" rx="2" ry="2" />
<text  x="1077.96" y="1423.5" ></text>
</g>
<g >
<title>dashmap::serde::&lt;impl serde::ser::Serialize for dashmap::DashMap&lt;K,V,H&gt;&gt;::serialize (1 samples, 0.09%)</title><rect x="1028.5" y="1221" width="1.1" height="15.0" fill="rgb(253,150,47)" rx="2" ry="2" />
<text  x="1031.52" y="1231.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.09%)</title><rect x="113.4" y="1509" width="1.1" height="15.0" fill="rgb(205,116,51)" rx="2" ry="2" />
<text  x="116.43" y="1519.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (68 samples, 6.08%)</title><rect x="24.8" y="1205" width="71.7" height="15.0" fill="rgb(245,141,15)" rx="2" ry="2" />
<text  x="27.78" y="1215.5" >intel_pm..</text>
</g>
<g >
<title>process_vm_writev (1 samples, 0.09%)</title><rect x="1006.4" y="1509" width="1.0" height="15.0" fill="rgb(229,38,42)" rx="2" ry="2" />
<text  x="1009.35" y="1519.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.09%)</title><rect x="1030.6" y="837" width="1.1" height="15.0" fill="rgb(233,73,32)" rx="2" ry="2" />
<text  x="1033.63" y="847.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.09%)</title><rect x="120.8" y="1189" width="1.1" height="15.0" fill="rgb(208,85,4)" rx="2" ry="2" />
<text  x="123.82" y="1199.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (3 samples, 0.27%)</title><rect x="150.4" y="1237" width="3.1" height="15.0" fill="rgb(226,113,25)" rx="2" ry="2" />
<text  x="153.38" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1072.8" y="1525" width="1.1" height="15.0" fill="rgb(232,161,25)" rx="2" ry="2" />
<text  x="1075.84" y="1535.5" ></text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.09%)</title><rect x="1030.6" y="677" width="1.1" height="15.0" fill="rgb(229,160,51)" rx="2" ry="2" />
<text  x="1033.63" y="687.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::with_capacity_and_hasher (1 samples, 0.09%)</title><rect x="1030.6" y="341" width="1.1" height="15.0" fill="rgb(212,210,36)" rx="2" ry="2" />
<text  x="1033.63" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.09%)</title><rect x="297.1" y="1285" width="1.0" height="15.0" fill="rgb(214,82,36)" rx="2" ry="2" />
<text  x="300.08" y="1295.5" ></text>
</g>
<g >
<title>Process1OperandZeroExtends (1 samples, 0.09%)</title><rect x="148.3" y="1413" width="1.0" height="15.0" fill="rgb(223,175,50)" rx="2" ry="2" />
<text  x="151.26" y="1423.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="1025.3" y="1301" width="1.1" height="15.0" fill="rgb(238,84,0)" rx="2" ry="2" />
<text  x="1028.35" y="1311.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::connect_syscall (1 samples, 0.09%)</title><rect x="116.6" y="1445" width="1.1" height="15.0" fill="rgb(233,153,41)" rx="2" ry="2" />
<text  x="119.60" y="1455.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.09%)</title><rect x="97.6" y="1205" width="1.1" height="15.0" fill="rgb(238,30,34)" rx="2" ry="2" />
<text  x="100.60" y="1215.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.09%)</title><rect x="1030.6" y="981" width="1.1" height="15.0" fill="rgb(217,103,24)" rx="2" ry="2" />
<text  x="1033.63" y="991.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.09%)</title><rect x="10.0" y="1461" width="1.1" height="15.0" fill="rgb(231,31,49)" rx="2" ry="2" />
<text  x="13.00" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="97.6" y="1397" width="1.1" height="15.0" fill="rgb(206,147,2)" rx="2" ry="2" />
<text  x="100.60" y="1407.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (79 samples, 7.07%)</title><rect x="13.2" y="1365" width="83.3" height="15.0" fill="rgb(239,13,51)" rx="2" ry="2" />
<text  x="16.17" y="1375.5" >perf_even..</text>
</g>
<g >
<title>pick_next_task_fair (13 samples, 1.16%)</title><rect x="1167.8" y="1445" width="13.8" height="15.0" fill="rgb(233,17,32)" rx="2" ry="2" />
<text  x="1170.84" y="1455.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (1 samples, 0.09%)</title><rect x="295.0" y="1397" width="1.0" height="15.0" fill="rgb(243,89,42)" rx="2" ry="2" />
<text  x="297.97" y="1407.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.18%)</title><rect x="265.4" y="1093" width="2.1" height="15.0" fill="rgb(240,226,32)" rx="2" ry="2" />
<text  x="268.42" y="1103.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (9 samples, 0.81%)</title><rect x="952.5" y="1381" width="9.5" height="15.0" fill="rgb(253,44,11)" rx="2" ry="2" />
<text  x="955.52" y="1391.5" ></text>
</g>
<g >
<title>NaClSysFork (4 samples, 0.36%)</title><rect x="246.4" y="1493" width="4.2" height="15.0" fill="rgb(247,151,21)" rx="2" ry="2" />
<text  x="249.42" y="1503.5" ></text>
</g>
<g >
<title>rustposix::interface::misc::libc_mmap (39 samples, 3.49%)</title><rect x="250.6" y="1397" width="41.2" height="15.0" fill="rgb(237,142,43)" rx="2" ry="2" />
<text  x="253.64" y="1407.5" >rus..</text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.18%)</title><rect x="292.9" y="1317" width="2.1" height="15.0" fill="rgb(253,50,18)" rx="2" ry="2" />
<text  x="295.86" y="1327.5" ></text>
</g>
<g >
<title>free_unref_page_commit (13 samples, 1.16%)</title><rect x="277.0" y="1077" width="13.8" height="15.0" fill="rgb(237,11,52)" rx="2" ry="2" />
<text  x="280.03" y="1087.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.09%)</title><rect x="1064.4" y="1381" width="1.1" height="15.0" fill="rgb(225,88,48)" rx="2" ry="2" />
<text  x="1067.40" y="1391.5" ></text>
</g>
<g >
<title>start_kernel (5 samples, 0.45%)</title><rect x="1184.7" y="1493" width="5.3" height="15.0" fill="rgb(219,55,4)" rx="2" ry="2" />
<text  x="1187.72" y="1503.5" ></text>
</g>
<g >
<title>kernel_init_free_pages (1 samples, 0.09%)</title><rect x="923.0" y="1365" width="1.0" height="15.0" fill="rgb(240,98,16)" rx="2" ry="2" />
<text  x="925.97" y="1375.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.09%)</title><rect x="1075.0" y="1365" width="1.0" height="15.0" fill="rgb(218,29,6)" rx="2" ry="2" />
<text  x="1077.96" y="1375.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="113.4" y="1445" width="1.1" height="15.0" fill="rgb(235,155,10)" rx="2" ry="2" />
<text  x="116.43" y="1455.5" ></text>
</g>
<g >
<title>NaClSyscallCSegHook (616 samples, 55.10%)</title><rect x="114.5" y="1525" width="650.2" height="15.0" fill="rgb(239,64,21)" rx="2" ry="2" />
<text  x="117.49" y="1535.5" >NaClSyscallCSegHook</text>
</g>
<g >
<title>[[stack]] (1 samples, 0.09%)</title><rect x="100.8" y="1541" width="1.0" height="15.0" fill="rgb(250,104,8)" rx="2" ry="2" />
<text  x="103.77" y="1551.5" ></text>
</g>
<g >
<title>NaClFillMemoryRegionWithHalt (1 samples, 0.09%)</title><rect x="121.9" y="1413" width="1.0" height="15.0" fill="rgb(239,197,32)" rx="2" ry="2" />
<text  x="124.88" y="1423.5" ></text>
</g>
<g >
<title>down_write_killable (43 samples, 3.85%)</title><rect x="153.5" y="1317" width="45.4" height="15.0" fill="rgb(208,46,23)" rx="2" ry="2" />
<text  x="156.54" y="1327.5" >down..</text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (2 samples, 0.18%)</title><rect x="1028.5" y="1285" width="2.1" height="15.0" fill="rgb(240,215,23)" rx="2" ry="2" />
<text  x="1031.52" y="1295.5" ></text>
</g>
<g >
<title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.09%)</title><rect x="300.3" y="1381" width="1.0" height="15.0" fill="rgb(226,39,38)" rx="2" ry="2" />
<text  x="303.25" y="1391.5" ></text>
</g>
<g >
<title>_Fork (1 samples, 0.09%)</title><rect x="10.0" y="1381" width="1.1" height="15.0" fill="rgb(205,143,2)" rx="2" ry="2" />
<text  x="13.00" y="1391.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.09%)</title><rect x="149.3" y="1221" width="1.1" height="15.0" fill="rgb(236,96,6)" rx="2" ry="2" />
<text  x="152.32" y="1231.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.09%)</title><rect x="203.1" y="1285" width="1.1" height="15.0" fill="rgb(229,177,49)" rx="2" ry="2" />
<text  x="206.15" y="1295.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (39 samples, 3.49%)</title><rect x="250.6" y="1317" width="41.2" height="15.0" fill="rgb(211,171,54)" rx="2" ry="2" />
<text  x="253.64" y="1327.5" >ksy..</text>
</g>
<g >
<title>generic_exec_single (74 samples, 6.62%)</title><rect x="18.4" y="1301" width="78.1" height="15.0" fill="rgb(235,10,2)" rx="2" ry="2" />
<text  x="21.44" y="1311.5" >generic_e..</text>
</g>
<g >
<title>unmap_region (39 samples, 3.49%)</title><rect x="250.6" y="1237" width="41.2" height="15.0" fill="rgb(250,44,3)" rx="2" ry="2" />
<text  x="253.64" y="1247.5" >unm..</text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (12 samples, 1.07%)</title><rect x="494.5" y="1365" width="12.6" height="15.0" fill="rgb(209,168,10)" rx="2" ry="2" />
<text  x="497.45" y="1375.5" ></text>
</g>
<g >
<title>lind_mmap (39 samples, 3.49%)</title><rect x="250.6" y="1461" width="41.2" height="15.0" fill="rgb(222,126,15)" rx="2" ry="2" />
<text  x="253.64" y="1471.5" >lin..</text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::deserialize (1 samples, 0.09%)</title><rect x="1030.6" y="645" width="1.1" height="15.0" fill="rgb(247,78,28)" rx="2" ry="2" />
<text  x="1033.63" y="655.5" ></text>
</g>
<g >
<title>__evlist__enable (80 samples, 7.16%)</title><rect x="12.1" y="1509" width="84.4" height="15.0" fill="rgb(236,136,5)" rx="2" ry="2" />
<text  x="15.11" y="1519.5" >__evlist_..</text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.09%)</title><rect x="959.9" y="1349" width="1.1" height="15.0" fill="rgb(209,86,28)" rx="2" ry="2" />
<text  x="962.91" y="1359.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="295.0" y="1381" width="1.0" height="15.0" fill="rgb(215,44,47)" rx="2" ry="2" />
<text  x="297.97" y="1391.5" ></text>
</g>
<g >
<title>NaClValidateCode (4 samples, 0.36%)</title><rect x="246.4" y="1397" width="4.2" height="15.0" fill="rgb(216,17,48)" rx="2" ry="2" />
<text  x="249.42" y="1407.5" ></text>
</g>
<g >
<title>NaClTextMapWrapper (1 samples, 0.09%)</title><rect x="121.9" y="1461" width="1.0" height="15.0" fill="rgb(235,193,25)" rx="2" ry="2" />
<text  x="124.88" y="1471.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (67 samples, 5.99%)</title><rect x="344.6" y="1349" width="70.7" height="15.0" fill="rgb(231,5,46)" rx="2" ry="2" />
<text  x="347.58" y="1359.5" >core::i..</text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_len::{{closure}} (1 samples, 0.09%)</title><rect x="1028.5" y="1093" width="1.1" height="15.0" fill="rgb(224,129,45)" rx="2" ry="2" />
<text  x="1031.52" y="1103.5" ></text>
</g>
<g >
<title>CachedMapWritableText (1 samples, 0.09%)</title><rect x="120.8" y="1445" width="1.1" height="15.0" fill="rgb(216,130,54)" rx="2" ry="2" />
<text  x="123.82" y="1455.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.09%)</title><rect x="120.8" y="1253" width="1.1" height="15.0" fill="rgb(219,221,46)" rx="2" ry="2" />
<text  x="123.82" y="1263.5" ></text>
</g>
<g >
<title>unaccount_page_cache_page (1 samples, 0.09%)</title><rect x="1064.4" y="1221" width="1.1" height="15.0" fill="rgb(207,15,18)" rx="2" ry="2" />
<text  x="1067.40" y="1231.5" ></text>
</g>
<g >
<title>do_sys_ftruncate (1 samples, 0.09%)</title><rect x="1026.4" y="1285" width="1.1" height="15.0" fill="rgb(234,223,30)" rx="2" ry="2" />
<text  x="1029.40" y="1295.5" ></text>
</g>
<g >
<title>NaClValidateCode (3 samples, 0.27%)</title><rect x="200.0" y="1381" width="3.1" height="15.0" fill="rgb(252,70,35)" rx="2" ry="2" />
<text  x="202.98" y="1391.5" ></text>
</g>
<g >
<title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.09%)</title><rect x="299.2" y="1413" width="1.1" height="15.0" fill="rgb(229,10,19)" rx="2" ry="2" />
<text  x="302.19" y="1423.5" ></text>
</g>
<g >
<title>nohz_csd_func (2 samples, 0.18%)</title><rect x="1165.7" y="1461" width="2.1" height="15.0" fill="rgb(223,0,32)" rx="2" ry="2" />
<text  x="1168.72" y="1471.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.09%)</title><rect x="296.0" y="1333" width="1.1" height="15.0" fill="rgb(234,172,53)" rx="2" ry="2" />
<text  x="299.03" y="1343.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (1 samples, 0.09%)</title><rect x="1188.9" y="1413" width="1.1" height="15.0" fill="rgb(219,159,24)" rx="2" ry="2" />
<text  x="1191.94" y="1423.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (22 samples, 1.97%)</title><rect x="924.0" y="1349" width="23.2" height="15.0" fill="rgb(245,16,2)" rx="2" ry="2" />
<text  x="927.03" y="1359.5" >r..</text>
</g>
<g >
<title>NaClChildNapCtor (3 samples, 0.27%)</title><rect x="200.0" y="1461" width="3.1" height="15.0" fill="rgb(213,175,7)" rx="2" ry="2" />
<text  x="202.98" y="1471.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.09%)</title><rect x="1076.0" y="1333" width="1.1" height="15.0" fill="rgb(236,71,8)" rx="2" ry="2" />
<text  x="1079.01" y="1343.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.09%)</title><rect x="921.9" y="1205" width="1.1" height="15.0" fill="rgb(233,95,39)" rx="2" ry="2" />
<text  x="924.91" y="1215.5" ></text>
</g>
<g >
<title>std::fs::buffer_capacity_required (1 samples, 0.09%)</title><rect x="1030.6" y="245" width="1.1" height="15.0" fill="rgb(212,156,6)" rx="2" ry="2" />
<text  x="1033.63" y="255.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="295.0" y="1365" width="1.0" height="15.0" fill="rgb(242,12,53)" rx="2" ry="2" />
<text  x="297.97" y="1375.5" ></text>
</g>
<g >
<title>do_idle (105 samples, 9.39%)</title><rect x="1073.9" y="1493" width="110.8" height="15.0" fill="rgb(236,155,13)" rx="2" ry="2" />
<text  x="1076.90" y="1503.5" >do_idle</text>
</g>
<g >
<title>perf_evsel__run_ioctl (80 samples, 7.16%)</title><rect x="12.1" y="1477" width="84.4" height="15.0" fill="rgb(236,26,26)" rx="2" ry="2" />
<text  x="15.11" y="1487.5" >perf_evse..</text>
</g>
<g >
<title>lind_read (116 samples, 10.38%)</title><rect x="292.9" y="1477" width="122.4" height="15.0" fill="rgb(254,6,17)" rx="2" ry="2" />
<text  x="295.86" y="1487.5" >lind_read</text>
</g>
<g >
<title>lind (1 samples, 0.09%)</title><rect x="10.0" y="1557" width="1.1" height="15.0" fill="rgb(249,31,36)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.09%)</title><rect x="1076.0" y="1237" width="1.1" height="15.0" fill="rgb(222,24,19)" rx="2" ry="2" />
<text  x="1079.01" y="1247.5" ></text>
</g>
<g >
<title>dispatcher (330 samples, 29.52%)</title><rect x="416.4" y="1461" width="348.3" height="15.0" fill="rgb(252,215,50)" rx="2" ry="2" />
<text  x="419.35" y="1471.5" >dispatcher</text>
</g>
<g >
<title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (2 samples, 0.18%)</title><rect x="292.9" y="1397" width="2.1" height="15.0" fill="rgb(236,200,26)" rx="2" ry="2" />
<text  x="295.86" y="1407.5" ></text>
</g>
<g >
<title>error_return (1 samples, 0.09%)</title><rect x="991.6" y="1525" width="1.0" height="15.0" fill="rgb(233,125,43)" rx="2" ry="2" />
<text  x="994.57" y="1535.5" ></text>
</g>
<g >
<title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.09%)</title><rect x="455.4" y="1413" width="1.1" height="15.0" fill="rgb(210,94,1)" rx="2" ry="2" />
<text  x="458.40" y="1423.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (1 samples, 0.09%)</title><rect x="1030.6" y="1077" width="1.1" height="15.0" fill="rgb(244,73,29)" rx="2" ry="2" />
<text  x="1033.63" y="1087.5" ></text>
</g>
<g >
<title>make_child (1 samples, 0.09%)</title><rect x="10.0" y="1413" width="1.1" height="15.0" fill="rgb(220,134,38)" rx="2" ry="2" />
<text  x="13.00" y="1423.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::net_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::getsockobjid (1 samples, 0.09%)</title><rect x="116.6" y="1429" width="1.1" height="15.0" fill="rgb(244,154,5)" rx="2" ry="2" />
<text  x="119.60" y="1439.5" ></text>
</g>
<g >
<title>perf_ioctl (80 samples, 7.16%)</title><rect x="12.1" y="1397" width="84.4" height="15.0" fill="rgb(251,109,7)" rx="2" ry="2" />
<text  x="15.11" y="1407.5" >perf_ioctl</text>
</g>
<g >
<title>&lt;serde_cbor::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.09%)</title><rect x="1030.6" y="1029" width="1.1" height="15.0" fill="rgb(253,27,44)" rx="2" ry="2" />
<text  x="1033.63" y="1039.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (2 samples, 0.18%)</title><rect x="1145.7" y="1413" width="2.1" height="15.0" fill="rgb(230,153,7)" rx="2" ry="2" />
<text  x="1148.67" y="1423.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (2 samples, 0.18%)</title><rect x="610.6" y="1365" width="2.1" height="15.0" fill="rgb(243,93,1)" rx="2" ry="2" />
<text  x="613.55" y="1375.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.09%)</title><rect x="149.3" y="1205" width="1.1" height="15.0" fill="rgb(222,34,31)" rx="2" ry="2" />
<text  x="152.32" y="1215.5" ></text>
</g>
<g >
<title>remote_function (72 samples, 6.44%)</title><rect x="20.6" y="1285" width="75.9" height="15.0" fill="rgb(238,215,0)" rx="2" ry="2" />
<text  x="23.55" y="1295.5" >remote_f..</text>
</g>
<g >
<title>do_fault (1 samples, 0.09%)</title><rect x="113.4" y="1429" width="1.1" height="15.0" fill="rgb(222,224,26)" rx="2" ry="2" />
<text  x="116.43" y="1439.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (128 samples, 11.45%)</title><rect x="853.3" y="1525" width="135.1" height="15.0" fill="rgb(215,69,45)" rx="2" ry="2" />
<text  x="856.31" y="1535.5" >asm_exc_page_fault</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="116.6" y="1381" width="1.1" height="15.0" fill="rgb(233,122,42)" rx="2" ry="2" />
<text  x="119.60" y="1391.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="121.9" y="1301" width="1.0" height="15.0" fill="rgb(218,166,23)" rx="2" ry="2" />
<text  x="124.88" y="1311.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.09%)</title><rect x="1028.5" y="1141" width="1.1" height="15.0" fill="rgb(231,81,52)" rx="2" ry="2" />
<text  x="1031.52" y="1151.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.09%)</title><rect x="1029.6" y="1253" width="1.0" height="15.0" fill="rgb(206,52,6)" rx="2" ry="2" />
<text  x="1032.57" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="1030.6" y="149" width="1.1" height="15.0" fill="rgb(240,163,25)" rx="2" ry="2" />
<text  x="1033.63" y="159.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="121.9" y="1349" width="1.0" height="15.0" fill="rgb(227,208,34)" rx="2" ry="2" />
<text  x="124.88" y="1359.5" ></text>
</g>
<g >
<title>dashmap::lock::RawRwLock::try_lock_shared_fast (2 samples, 0.18%)</title><rect x="292.9" y="1349" width="2.1" height="15.0" fill="rgb(205,110,1)" rx="2" ry="2" />
<text  x="295.86" y="1359.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="10.0" y="1509" width="1.1" height="15.0" fill="rgb(244,217,5)" rx="2" ry="2" />
<text  x="13.00" y="1519.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.18%)</title><rect x="986.3" y="1477" width="2.1" height="15.0" fill="rgb(232,122,1)" rx="2" ry="2" />
<text  x="989.30" y="1487.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.09%)</title><rect x="120.8" y="1413" width="1.1" height="15.0" fill="rgb(219,13,25)" rx="2" ry="2" />
<text  x="123.82" y="1423.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.09%)</title><rect x="1075.0" y="1269" width="1.0" height="15.0" fill="rgb(245,122,32)" rx="2" ry="2" />
<text  x="1077.96" y="1279.5" ></text>
</g>
<g >
<title>NaClCopyDynamicRegion (3 samples, 0.27%)</title><rect x="1003.2" y="1509" width="3.2" height="15.0" fill="rgb(231,23,13)" rx="2" ry="2" />
<text  x="1006.18" y="1519.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.09%)</title><rect x="1030.6" y="485" width="1.1" height="15.0" fill="rgb(252,172,29)" rx="2" ry="2" />
<text  x="1033.63" y="495.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.09%)</title><rect x="151.4" y="1125" width="1.1" height="15.0" fill="rgb(253,227,23)" rx="2" ry="2" />
<text  x="154.43" y="1135.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.27%)</title><rect x="452.2" y="1397" width="3.2" height="15.0" fill="rgb(229,190,43)" rx="2" ry="2" />
<text  x="455.24" y="1407.5" ></text>
</g>
<g >
<title>rustposix::interface::pipe::EmulatedPipe::write_to_pipe (10 samples, 0.89%)</title><rect x="102.9" y="1525" width="10.5" height="15.0" fill="rgb(216,165,48)" rx="2" ry="2" />
<text  x="105.88" y="1535.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="113.4" y="1461" width="1.1" height="15.0" fill="rgb(213,207,22)" rx="2" ry="2" />
<text  x="116.43" y="1471.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="1076.0" y="1221" width="1.1" height="15.0" fill="rgb(234,90,1)" rx="2" ry="2" />
<text  x="1079.01" y="1231.5" ></text>
</g>
<g >
<title>NaClSysDyncodeCreate (30 samples, 2.68%)</title><rect x="117.7" y="1493" width="31.6" height="15.0" fill="rgb(208,153,21)" rx="2" ry="2" />
<text  x="120.66" y="1503.5" >Na..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 1.52%)</title><rect x="461.7" y="1365" width="18.0" height="15.0" fill="rgb(249,80,11)" rx="2" ry="2" />
<text  x="464.74" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_socket (1 samples, 0.09%)</title><rect x="116.6" y="1349" width="1.1" height="15.0" fill="rgb(210,156,19)" rx="2" ry="2" />
<text  x="119.60" y="1359.5" ></text>
</g>
<g >
<title>NaClSysExecveDecoder (51 samples, 4.56%)</title><rect x="149.3" y="1509" width="53.8" height="15.0" fill="rgb(239,107,22)" rx="2" ry="2" />
<text  x="152.32" y="1519.5" >NaClS..</text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.09%)</title><rect x="921.9" y="1189" width="1.1" height="15.0" fill="rgb(228,17,49)" rx="2" ry="2" />
<text  x="924.91" y="1199.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.09%)</title><rect x="120.8" y="1317" width="1.1" height="15.0" fill="rgb(209,45,35)" rx="2" ry="2" />
<text  x="123.82" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="1072.8" y="1509" width="1.1" height="15.0" fill="rgb(221,223,51)" rx="2" ry="2" />
<text  x="1075.84" y="1519.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.09%)</title><rect x="455.4" y="1381" width="1.1" height="15.0" fill="rgb(231,109,47)" rx="2" ry="2" />
<text  x="458.40" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (41 samples, 3.67%)</title><rect x="203.1" y="1365" width="43.3" height="15.0" fill="rgb(233,120,23)" rx="2" ry="2" />
<text  x="206.15" y="1375.5" >__x6..</text>
</g>
<g >
<title>[unknown] (82 samples, 7.33%)</title><rect x="12.1" y="1541" width="86.6" height="15.0" fill="rgb(221,129,13)" rx="2" ry="2" />
<text  x="15.11" y="1551.5" >[unknown]</text>
</g>
<g >
<title>__socket (1 samples, 0.09%)</title><rect x="116.6" y="1397" width="1.1" height="15.0" fill="rgb(211,165,1)" rx="2" ry="2" />
<text  x="119.60" y="1407.5" ></text>
</g>
<g >
<title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force (1 samples, 0.09%)</title><rect x="1030.6" y="1413" width="1.1" height="15.0" fill="rgb(254,56,34)" rx="2" ry="2" />
<text  x="1033.63" y="1423.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (9 samples, 0.81%)</title><rect x="952.5" y="1365" width="9.5" height="15.0" fill="rgb(246,129,43)" rx="2" ry="2" />
<text  x="955.52" y="1375.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (3 samples, 0.27%)</title><rect x="1003.2" y="1397" width="3.2" height="15.0" fill="rgb(250,55,2)" rx="2" ry="2" />
<text  x="1006.18" y="1407.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (2 samples, 0.18%)</title><rect x="957.8" y="1317" width="2.1" height="15.0" fill="rgb(230,228,26)" rx="2" ry="2" />
<text  x="960.80" y="1327.5" ></text>
</g>
<g >
<title>cpu_startup_entry (5 samples, 0.45%)</title><rect x="1184.7" y="1445" width="5.3" height="15.0" fill="rgb(244,8,20)" rx="2" ry="2" />
<text  x="1187.72" y="1455.5" ></text>
</g>
<g >
<title>alloc_pid (1 samples, 0.09%)</title><rect x="10.0" y="1269" width="1.1" height="15.0" fill="rgb(207,110,28)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.09%)</title><rect x="300.3" y="1349" width="1.0" height="15.0" fill="rgb(240,213,4)" rx="2" ry="2" />
<text  x="303.25" y="1359.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.09%)</title><rect x="1072.8" y="1413" width="1.1" height="15.0" fill="rgb(234,47,42)" rx="2" ry="2" />
<text  x="1075.84" y="1423.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.09%)</title><rect x="97.6" y="1221" width="1.1" height="15.0" fill="rgb(238,40,26)" rx="2" ry="2" />
<text  x="100.60" y="1231.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.09%)</title><rect x="921.9" y="1285" width="1.1" height="15.0" fill="rgb(234,33,19)" rx="2" ry="2" />
<text  x="924.91" y="1295.5" ></text>
</g>
<g >
<title>llist_add_batch (2 samples, 0.18%)</title><rect x="1179.4" y="1365" width="2.2" height="15.0" fill="rgb(221,38,21)" rx="2" ry="2" />
<text  x="1182.45" y="1375.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.09%)</title><rect x="97.6" y="1333" width="1.1" height="15.0" fill="rgb(224,194,20)" rx="2" ry="2" />
<text  x="100.60" y="1343.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.09%)</title><rect x="1076.0" y="1205" width="1.1" height="15.0" fill="rgb(206,10,50)" rx="2" ry="2" />
<text  x="1079.01" y="1215.5" ></text>
</g>
<g >
<title>__handle_mm_fault (107 samples, 9.57%)</title><rect x="867.0" y="1461" width="113.0" height="15.0" fill="rgb(248,80,11)" rx="2" ry="2" />
<text  x="870.03" y="1471.5" >__handle_mm_f..</text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::remaining (121 samples, 10.82%)</title><rect x="636.9" y="1413" width="127.8" height="15.0" fill="rgb(249,182,53)" rx="2" ry="2" />
<text  x="639.94" y="1423.5" >ringbuf::produce..</text>
</g>
<g >
<title>native_write_msr (67 samples, 5.99%)</title><rect x="25.8" y="1189" width="70.7" height="15.0" fill="rgb(253,7,14)" rx="2" ry="2" />
<text  x="28.83" y="1199.5" >native_..</text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.09%)</title><rect x="1076.0" y="1317" width="1.1" height="15.0" fill="rgb(213,30,4)" rx="2" ry="2" />
<text  x="1079.01" y="1327.5" ></text>
</g>
<g >
<title>alloc_pages_vma (64 samples, 5.72%)</title><rect x="879.7" y="1413" width="67.5" height="15.0" fill="rgb(209,167,5)" rx="2" ry="2" />
<text  x="882.70" y="1423.5" >alloc_p..</text>
</g>
<g >
<title>vfs_statx (1 samples, 0.09%)</title><rect x="1030.6" y="85" width="1.1" height="15.0" fill="rgb(210,227,38)" rx="2" ry="2" />
<text  x="1033.63" y="95.5" ></text>
</g>
<g >
<title>shmem_alloc_and_acct_page (3 samples, 0.27%)</title><rect x="1003.2" y="1205" width="3.2" height="15.0" fill="rgb(239,217,32)" rx="2" ry="2" />
<text  x="1006.18" y="1215.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (41 samples, 3.67%)</title><rect x="203.1" y="1397" width="43.3" height="15.0" fill="rgb(216,123,4)" rx="2" ry="2" />
<text  x="206.15" y="1407.5" >entr..</text>
</g>
<g >
<title>zap_pte_range (39 samples, 3.49%)</title><rect x="250.6" y="1157" width="41.2" height="15.0" fill="rgb(254,194,13)" rx="2" ry="2" />
<text  x="253.64" y="1167.5" >zap..</text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_map::{{closure}} (1 samples, 0.09%)</title><rect x="1030.6" y="901" width="1.1" height="15.0" fill="rgb(208,152,52)" rx="2" ry="2" />
<text  x="1033.63" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="116.6" y="1365" width="1.1" height="15.0" fill="rgb(225,71,28)" rx="2" ry="2" />
<text  x="119.60" y="1375.5" ></text>
</g>
<g >
<title>copy_page_from_iter (1 samples, 0.09%)</title><rect x="1006.4" y="1397" width="1.0" height="15.0" fill="rgb(211,29,5)" rx="2" ry="2" />
<text  x="1009.35" y="1407.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_cbor::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.09%)</title><rect x="1030.6" y="629" width="1.1" height="15.0" fill="rgb(226,138,52)" rx="2" ry="2" />
<text  x="1033.63" y="639.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (39 samples, 3.49%)</title><rect x="250.6" y="1301" width="41.2" height="15.0" fill="rgb(215,58,45)" rx="2" ry="2" />
<text  x="253.64" y="1311.5" >vm_..</text>
</g>
<g >
<title>mem_cgroup_charge (9 samples, 0.81%)</title><rect x="962.0" y="1413" width="9.5" height="15.0" fill="rgb(224,52,47)" rx="2" ry="2" />
<text  x="965.02" y="1423.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="113.4" y="1493" width="1.1" height="15.0" fill="rgb(244,46,39)" rx="2" ry="2" />
<text  x="116.43" y="1503.5" ></text>
</g>
<g >
<title>__libc_alloca_cutoff (1 samples, 0.09%)</title><rect x="11.1" y="1477" width="1.0" height="15.0" fill="rgb(248,97,30)" rx="2" ry="2" />
<text  x="14.06" y="1487.5" ></text>
</g>
<g >
<title>up_read (4 samples, 0.36%)</title><rect x="982.1" y="1477" width="4.2" height="15.0" fill="rgb(240,120,4)" rx="2" ry="2" />
<text  x="985.08" y="1487.5" ></text>
</g>
<g >
<title>check_cpu_stall (1 samples, 0.09%)</title><rect x="921.9" y="1157" width="1.1" height="15.0" fill="rgb(243,130,27)" rx="2" ry="2" />
<text  x="924.91" y="1167.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (1 samples, 0.09%)</title><rect x="121.9" y="1221" width="1.0" height="15.0" fill="rgb(239,141,4)" rx="2" ry="2" />
<text  x="124.88" y="1231.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (39 samples, 3.49%)</title><rect x="250.6" y="1333" width="41.2" height="15.0" fill="rgb(220,229,46)" rx="2" ry="2" />
<text  x="253.64" y="1343.5" >__x..</text>
</g>
<g >
<title>NaClValidateImage (4 samples, 0.36%)</title><rect x="246.4" y="1413" width="4.2" height="15.0" fill="rgb(222,160,15)" rx="2" ry="2" />
<text  x="249.42" y="1423.5" ></text>
</g>
<g >
<title>get_page_from_freelist (59 samples, 5.28%)</title><rect x="885.0" y="1381" width="62.2" height="15.0" fill="rgb(221,125,8)" rx="2" ry="2" />
<text  x="887.97" y="1391.5" >get_pa..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="1072.8" y="1541" width="1.1" height="15.0" fill="rgb(226,5,39)" rx="2" ry="2" />
<text  x="1075.84" y="1551.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.09%)</title><rect x="10.0" y="1429" width="1.1" height="15.0" fill="rgb(207,151,36)" rx="2" ry="2" />
<text  x="13.00" y="1439.5" ></text>
</g>
<g >
<title>ValidateChunkAMD64 (25 samples, 2.24%)</title><rect x="122.9" y="1429" width="26.4" height="15.0" fill="rgb(237,55,48)" rx="2" ry="2" />
<text  x="125.93" y="1439.5" >V..</text>
</g>
<g >
<title>NaClAddrSpaceFree (41 samples, 3.67%)</title><rect x="203.1" y="1429" width="43.3" height="15.0" fill="rgb(212,61,23)" rx="2" ry="2" />
<text  x="206.15" y="1439.5" >NaCl..</text>
</g>
<g >
<title>CachedMapWritableText (1 samples, 0.09%)</title><rect x="121.9" y="1445" width="1.0" height="15.0" fill="rgb(244,25,54)" rx="2" ry="2" />
<text  x="124.88" y="1455.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="1063.3" y="1541" width="2.2" height="15.0" fill="rgb(224,124,51)" rx="2" ry="2" />
<text  x="1066.35" y="1551.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_slice (68 samples, 6.08%)</title><rect x="343.5" y="1413" width="71.8" height="15.0" fill="rgb(219,118,3)" rx="2" ry="2" />
<text  x="346.52" y="1423.5" >ringbuf:..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="10.0" y="1365" width="1.1" height="15.0" fill="rgb(243,137,53)" rx="2" ry="2" />
<text  x="13.00" y="1375.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::cgroup2_quota (1 samples, 0.09%)</title><rect x="1030.6" y="277" width="1.1" height="15.0" fill="rgb(237,182,35)" rx="2" ry="2" />
<text  x="1033.63" y="287.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::parse_value (1 samples, 0.09%)</title><rect x="1030.6" y="949" width="1.1" height="15.0" fill="rgb(245,190,4)" rx="2" ry="2" />
<text  x="1033.63" y="959.5" ></text>
</g>
<g >
<title>&lt;rustposix::safeposix::filesystem::_::&lt;impl serde::de::Deserialize for rustposix::safeposix::filesystem::DirectoryInode&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.09%)</title><rect x="1030.6" y="533" width="1.1" height="15.0" fill="rgb(227,47,26)" rx="2" ry="2" />
<text  x="1033.63" y="543.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::_::&lt;impl serde::ser::Serialize for rustposix::safeposix::filesystem::FilesystemMetadata&gt;::serialize (3 samples, 0.27%)</title><rect x="1027.5" y="1397" width="3.1" height="15.0" fill="rgb(224,84,31)" rx="2" ry="2" />
<text  x="1030.46" y="1407.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.09%)</title><rect x="1028.5" y="1173" width="1.1" height="15.0" fill="rgb(206,59,50)" rx="2" ry="2" />
<text  x="1031.52" y="1183.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.09%)</title><rect x="859.6" y="1445" width="1.1" height="15.0" fill="rgb(212,58,45)" rx="2" ry="2" />
<text  x="862.64" y="1455.5" ></text>
</g>
<g >
<title>rustposix::safeposix::filesystem::incref_root (1 samples, 0.09%)</title><rect x="1030.6" y="1445" width="1.1" height="15.0" fill="rgb(210,56,11)" rx="2" ry="2" />
<text  x="1033.63" y="1455.5" ></text>
</g>
<g >
<title>unmap_single_vma (39 samples, 3.49%)</title><rect x="250.6" y="1205" width="41.2" height="15.0" fill="rgb(244,133,10)" rx="2" ry="2" />
<text  x="253.64" y="1215.5" >unm..</text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.09%)</title><rect x="1063.3" y="1365" width="1.1" height="15.0" fill="rgb(205,153,47)" rx="2" ry="2" />
<text  x="1066.35" y="1375.5" ></text>
</g>
<g >
<title>unmap_region (4 samples, 0.36%)</title><rect x="149.3" y="1301" width="4.2" height="15.0" fill="rgb(216,181,43)" rx="2" ry="2" />
<text  x="152.32" y="1311.5" ></text>
</g>
<g >
<title>irqentry_exit (2 samples, 0.18%)</title><rect x="986.3" y="1493" width="2.1" height="15.0" fill="rgb(227,2,38)" rx="2" ry="2" />
<text  x="989.30" y="1503.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (10 samples, 0.89%)</title><rect x="102.9" y="1493" width="10.5" height="15.0" fill="rgb(222,77,29)" rx="2" ry="2" />
<text  x="105.88" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1 samples, 0.09%)</title><rect x="10.0" y="1333" width="1.1" height="15.0" fill="rgb(247,178,8)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_copy (68 samples, 6.08%)</title><rect x="343.5" y="1397" width="71.8" height="15.0" fill="rgb(226,202,19)" rx="2" ry="2" />
<text  x="346.52" y="1407.5" >ringbuf:..</text>
</g>
<g >
<title>poll_idle (23 samples, 2.06%)</title><rect x="1121.4" y="1429" width="24.3" height="15.0" fill="rgb(229,154,28)" rx="2" ry="2" />
<text  x="1124.40" y="1439.5" >p..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.09%)</title><rect x="152.5" y="1141" width="1.0" height="15.0" fill="rgb(216,164,19)" rx="2" ry="2" />
<text  x="155.49" y="1151.5" ></text>
</g>
<g >
<title>do_exit (2 samples, 0.18%)</title><rect x="1063.3" y="1477" width="2.2" height="15.0" fill="rgb(218,147,5)" rx="2" ry="2" />
<text  x="1066.35" y="1487.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.09%)</title><rect x="921.9" y="1317" width="1.1" height="15.0" fill="rgb(251,149,0)" rx="2" ry="2" />
<text  x="924.91" y="1327.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.09%)</title><rect x="1064.4" y="1365" width="1.1" height="15.0" fill="rgb(211,203,5)" rx="2" ry="2" />
<text  x="1067.40" y="1375.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="121.9" y="1381" width="1.0" height="15.0" fill="rgb(254,93,18)" rx="2" ry="2" />
<text  x="124.88" y="1391.5" ></text>
</g>
<g >
<title>perf_evsel__enable_cpu (80 samples, 7.16%)</title><rect x="12.1" y="1493" width="84.4" height="15.0" fill="rgb(240,151,13)" rx="2" ry="2" />
<text  x="15.11" y="1503.5" >perf_evse..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.18%)</title><rect x="1075.0" y="1429" width="2.1" height="15.0" fill="rgb(228,50,26)" rx="2" ry="2" />
<text  x="1077.96" y="1439.5" ></text>
</g>
<g >
<title>ringbuf::producer::Producer&lt;T&gt;::push_copy (171 samples, 15.30%)</title><rect x="456.5" y="1397" width="180.4" height="15.0" fill="rgb(209,6,10)" rx="2" ry="2" />
<text  x="459.46" y="1407.5" >ringbuf::producer::Prod..</text>
</g>
<g >
<title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (2 samples, 0.18%)</title><rect x="292.9" y="1365" width="2.1" height="15.0" fill="rgb(228,119,2)" rx="2" ry="2" />
<text  x="295.86" y="1375.5" ></text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::len (38 samples, 3.40%)</title><rect x="303.4" y="1413" width="40.1" height="15.0" fill="rgb(241,81,17)" rx="2" ry="2" />
<text  x="306.42" y="1423.5" >rin..</text>
</g>
<g >
<title>do_statx (1 samples, 0.09%)</title><rect x="1030.6" y="101" width="1.1" height="15.0" fill="rgb(229,25,22)" rx="2" ry="2" />
<text  x="1033.63" y="111.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.09%)</title><rect x="1064.4" y="1413" width="1.1" height="15.0" fill="rgb(252,31,1)" rx="2" ry="2" />
<text  x="1067.40" y="1423.5" ></text>
</g>
<g >
<title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.09%)</title><rect x="1030.6" y="1285" width="1.1" height="15.0" fill="rgb(211,51,32)" rx="2" ry="2" />
<text  x="1033.63" y="1295.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.09%)</title><rect x="151.4" y="1173" width="1.1" height="15.0" fill="rgb(252,179,28)" rx="2" ry="2" />
<text  x="154.43" y="1183.5" ></text>
</g>
<g >
<title>error_entry (3 samples, 0.27%)</title><rect x="988.4" y="1525" width="3.2" height="15.0" fill="rgb(228,68,25)" rx="2" ry="2" />
<text  x="991.41" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="120.8" y="1381" width="1.1" height="15.0" fill="rgb(251,180,18)" rx="2" ry="2" />
<text  x="123.82" y="1391.5" ></text>
</g>
<g >
<title>process_vm_rw (3 samples, 0.27%)</title><rect x="1003.2" y="1429" width="3.2" height="15.0" fill="rgb(212,224,54)" rx="2" ry="2" />
<text  x="1006.18" y="1439.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.09%)</title><rect x="297.1" y="1269" width="1.0" height="15.0" fill="rgb(240,119,19)" rx="2" ry="2" />
<text  x="300.08" y="1279.5" ></text>
</g>
<g >
<title>shmem_alloc_page (3 samples, 0.27%)</title><rect x="1003.2" y="1189" width="3.2" height="15.0" fill="rgb(214,142,52)" rx="2" ry="2" />
<text  x="1006.18" y="1199.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.09%)</title><rect x="198.9" y="1317" width="1.1" height="15.0" fill="rgb(213,60,17)" rx="2" ry="2" />
<text  x="201.93" y="1327.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.09%)</title><rect x="11.1" y="1493" width="1.0" height="15.0" fill="rgb(241,121,34)" rx="2" ry="2" />
<text  x="14.06" y="1503.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.09%)</title><rect x="961.0" y="1349" width="1.0" height="15.0" fill="rgb(246,227,19)" rx="2" ry="2" />
<text  x="963.97" y="1359.5" ></text>
</g>
<g >
<title>process_vm_writev (3 samples, 0.27%)</title><rect x="1003.2" y="1493" width="3.2" height="15.0" fill="rgb(250,205,0)" rx="2" ry="2" />
<text  x="1006.18" y="1503.5" ></text>
</g>
<g >
<title>NaClSysWriteDecoder (331 samples, 29.61%)</title><rect x="415.3" y="1509" width="349.4" height="15.0" fill="rgb(254,229,34)" rx="2" ry="2" />
<text  x="418.30" y="1519.5" >NaClSysWriteDecoder</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.09%)</title><rect x="295.0" y="1333" width="1.0" height="15.0" fill="rgb(219,228,18)" rx="2" ry="2" />
<text  x="297.97" y="1343.5" ></text>
</g>
<g >
<title>NaClXCondVarBroadcast (1 samples, 0.09%)</title><rect x="198.9" y="1413" width="1.1" height="15.0" fill="rgb(214,229,46)" rx="2" ry="2" />
<text  x="201.93" y="1423.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.09%)</title><rect x="121.9" y="1253" width="1.0" height="15.0" fill="rgb(243,227,26)" rx="2" ry="2" />
<text  x="124.88" y="1263.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (79 samples, 7.07%)</title><rect x="1075.0" y="1477" width="83.3" height="15.0" fill="rgb(227,170,10)" rx="2" ry="2" />
<text  x="1077.96" y="1487.5" >cpuidle_i..</text>
</g>
<g >
<title>release_pages (1 samples, 0.09%)</title><rect x="149.3" y="1253" width="1.1" height="15.0" fill="rgb(244,122,6)" rx="2" ry="2" />
<text  x="152.32" y="1263.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.09%)</title><rect x="1028.5" y="1125" width="1.1" height="15.0" fill="rgb(224,174,42)" rx="2" ry="2" />
<text  x="1031.52" y="1135.5" ></text>
</g>
<g >
<title>statx (1 samples, 0.09%)</title><rect x="1030.6" y="165" width="1.1" height="15.0" fill="rgb(253,54,43)" rx="2" ry="2" />
<text  x="1033.63" y="175.5" ></text>
</g>
<g >
<title>iput_final (1 samples, 0.09%)</title><rect x="1064.4" y="1317" width="1.1" height="15.0" fill="rgb(233,168,53)" rx="2" ry="2" />
<text  x="1067.40" y="1327.5" ></text>
</g>
<g >
<title>NaClTextDyncodeCreate (30 samples, 2.68%)</title><rect x="117.7" y="1477" width="31.6" height="15.0" fill="rgb(217,48,42)" rx="2" ry="2" />
<text  x="120.66" y="1487.5" >Na..</text>
</g>
<g >
<title>unmap_page_range (39 samples, 3.49%)</title><rect x="250.6" y="1189" width="41.2" height="15.0" fill="rgb(224,133,36)" rx="2" ry="2" />
<text  x="253.64" y="1199.5" >unm..</text>
</g>
<g >
<title>serde_cbor::ser::to_vec_packed (3 samples, 0.27%)</title><rect x="1027.5" y="1429" width="3.1" height="15.0" fill="rgb(235,28,4)" rx="2" ry="2" />
<text  x="1030.46" y="1439.5" ></text>
</g>
<g >
<title>process_vm_rw_single_vec.constprop.0 (1 samples, 0.09%)</title><rect x="1006.4" y="1413" width="1.0" height="15.0" fill="rgb(224,134,29)" rx="2" ry="2" />
<text  x="1009.35" y="1423.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (1 samples, 0.09%)</title><rect x="1030.6" y="917" width="1.1" height="15.0" fill="rgb(226,125,28)" rx="2" ry="2" />
<text  x="1033.63" y="927.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (43 samples, 3.85%)</title><rect x="153.5" y="1285" width="45.4" height="15.0" fill="rgb(238,161,8)" rx="2" ry="2" />
<text  x="156.54" y="1295.5" >rwse..</text>
</g>
<g >
<title>____fput (1 samples, 0.09%)</title><rect x="1064.4" y="1445" width="1.1" height="15.0" fill="rgb(219,31,23)" rx="2" ry="2" />
<text  x="1067.40" y="1455.5" ></text>
</g>
<g >
<title>truncate_pagecache (1 samples, 0.09%)</title><rect x="1026.4" y="1173" width="1.1" height="15.0" fill="rgb(247,141,1)" rx="2" ry="2" />
<text  x="1029.40" y="1183.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.09%)</title><rect x="921.9" y="1237" width="1.1" height="15.0" fill="rgb(244,194,25)" rx="2" ry="2" />
<text  x="924.91" y="1247.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.09%)</title><rect x="120.8" y="1301" width="1.1" height="15.0" fill="rgb(228,132,15)" rx="2" ry="2" />
<text  x="123.82" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (41 samples, 3.67%)</title><rect x="203.1" y="1381" width="43.3" height="15.0" fill="rgb(249,229,42)" rx="2" ry="2" />
<text  x="206.15" y="1391.5" >do_s..</text>
</g>
<g >
<title>[[heap]] (1 samples, 0.09%)</title><rect x="99.7" y="1541" width="1.1" height="15.0" fill="rgb(208,164,27)" rx="2" ry="2" />
<text  x="102.71" y="1551.5" ></text>
</g>
<g >
<title>NaClCondVarBroadcast (1 samples, 0.09%)</title><rect x="198.9" y="1397" width="1.1" height="15.0" fill="rgb(214,176,24)" rx="2" ry="2" />
<text  x="201.93" y="1407.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1 samples, 0.09%)</title><rect x="1027.5" y="1285" width="1.0" height="15.0" fill="rgb(249,62,41)" rx="2" ry="2" />
<text  x="1030.46" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.18%)</title><rect x="492.3" y="1365" width="2.2" height="15.0" fill="rgb(212,16,47)" rx="2" ry="2" />
<text  x="495.34" y="1375.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.09%)</title><rect x="203.1" y="1237" width="1.1" height="15.0" fill="rgb(247,155,22)" rx="2" ry="2" />
<text  x="206.15" y="1247.5" ></text>
</g>
<g >
<title>notify_change (1 samples, 0.09%)</title><rect x="1026.4" y="1205" width="1.1" height="15.0" fill="rgb(206,109,37)" rx="2" ry="2" />
<text  x="1029.40" y="1215.5" ></text>
</g>
<g >
<title>NaClValidateImage (3 samples, 0.27%)</title><rect x="200.0" y="1397" width="3.1" height="15.0" fill="rgb(251,75,53)" rx="2" ry="2" />
<text  x="202.98" y="1407.5" ></text>
</g>
<g >
<title>dispatcher (1 samples, 0.09%)</title><rect x="116.6" y="1461" width="1.1" height="15.0" fill="rgb(245,24,52)" rx="2" ry="2" />
<text  x="119.60" y="1471.5" ></text>
</g>
<g >
<title>__activate_page.part.0 (1 samples, 0.09%)</title><rect x="151.4" y="1141" width="1.1" height="15.0" fill="rgb(247,25,50)" rx="2" ry="2" />
<text  x="154.43" y="1151.5" ></text>
</g>
<g >
<title>rustposix::safeposix::syscalls::fs_calls::&lt;impl rustposix::safeposix::cage::Cage&gt;::read_syscall (116 samples, 10.38%)</title><rect x="292.9" y="1445" width="122.4" height="15.0" fill="rgb(240,143,37)" rx="2" ry="2" />
<text  x="295.86" y="1455.5" >rustposix::safe..</text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (1 samples, 0.09%)</title><rect x="1030.6" y="1237" width="1.1" height="15.0" fill="rgb(208,123,0)" rx="2" ry="2" />
<text  x="1033.63" y="1247.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.09%)</title><rect x="121.9" y="1205" width="1.0" height="15.0" fill="rgb(252,61,18)" rx="2" ry="2" />
<text  x="124.88" y="1215.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.09%)</title><rect x="862.8" y="1477" width="1.1" height="15.0" fill="rgb(236,218,29)" rx="2" ry="2" />
<text  x="865.81" y="1487.5" ></text>
</g>
<g >
<title>kernel_clone (1 samples, 0.09%)</title><rect x="10.0" y="1301" width="1.1" height="15.0" fill="rgb(225,164,53)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" ></text>
</g>
<g >
<title>NaClSysExit (41 samples, 3.67%)</title><rect x="203.1" y="1493" width="43.3" height="15.0" fill="rgb(226,42,42)" rx="2" ry="2" />
<text  x="206.15" y="1503.5" >NaCl..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.09%)</title><rect x="1075.0" y="1349" width="1.0" height="15.0" fill="rgb(241,194,42)" rx="2" ry="2" />
<text  x="1077.96" y="1359.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.09%)</title><rect x="24.8" y="1189" width="1.0" height="15.0" fill="rgb(254,31,2)" rx="2" ry="2" />
<text  x="27.78" y="1199.5" ></text>
</g>
<g >
<title>NaClAppLoadFileAslr (2 samples, 0.18%)</title><rect x="1024.3" y="1429" width="2.1" height="15.0" fill="rgb(248,166,29)" rx="2" ry="2" />
<text  x="1027.29" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1026.4" y="1317" width="1.1" height="15.0" fill="rgb(205,4,20)" rx="2" ry="2" />
<text  x="1029.40" y="1327.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.09%)</title><rect x="1063.3" y="1381" width="1.1" height="15.0" fill="rgb(233,188,22)" rx="2" ry="2" />
<text  x="1066.35" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 1.79%)</title><rect x="1003.2" y="1541" width="21.1" height="15.0" fill="rgb(235,5,48)" rx="2" ry="2" />
<text  x="1006.18" y="1551.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="1076.0" y="1349" width="1.1" height="15.0" fill="rgb(230,62,22)" rx="2" ry="2" />
<text  x="1079.01" y="1359.5" ></text>
</g>
<g >
<title>CopyBundleHeads (1 samples, 0.09%)</title><rect x="117.7" y="1445" width="1.0" height="15.0" fill="rgb(231,139,45)" rx="2" ry="2" />
<text  x="120.66" y="1455.5" ></text>
</g>
<g >
<title>serde_cbor::de::Deserializer&lt;R&gt;::recursion_checked (1 samples, 0.09%)</title><rect x="1030.6" y="565" width="1.1" height="15.0" fill="rgb(237,93,45)" rx="2" ry="2" />
<text  x="1033.63" y="575.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.09%)</title><rect x="1026.4" y="1093" width="1.1" height="15.0" fill="rgb(253,66,2)" rx="2" ry="2" />
<text  x="1029.40" y="1103.5" ></text>
</g>
<g >
<title>_start (7 samples, 0.63%)</title><rect x="1024.3" y="1541" width="7.4" height="15.0" fill="rgb(249,102,29)" rx="2" ry="2" />
<text  x="1027.29" y="1551.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (40 samples, 3.58%)</title><rect x="204.2" y="1317" width="42.2" height="15.0" fill="rgb(236,83,47)" rx="2" ry="2" />
<text  x="207.20" y="1327.5" >rws..</text>
</g>
<g >
<title>mmap_region (39 samples, 3.49%)</title><rect x="250.6" y="1269" width="41.2" height="15.0" fill="rgb(209,119,43)" rx="2" ry="2" />
<text  x="253.64" y="1279.5" >mma..</text>
</g>
<g >
<title>ringbuf::consumer::Consumer&lt;T&gt;::pop_access (68 samples, 6.08%)</title><rect x="343.5" y="1381" width="71.8" height="15.0" fill="rgb(205,167,50)" rx="2" ry="2" />
<text  x="346.52" y="1391.5" >ringbuf:..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.18%)</title><rect x="296.0" y="1381" width="2.1" height="15.0" fill="rgb(235,103,53)" rx="2" ry="2" />
<text  x="299.03" y="1391.5" ></text>
</g>
<g >
<title>NaClSysConnect (1 samples, 0.09%)</title><rect x="116.6" y="1493" width="1.1" height="15.0" fill="rgb(253,140,24)" rx="2" ry="2" />
<text  x="119.60" y="1503.5" ></text>
</g>
<g >
<title>sync_regs (10 samples, 0.89%)</title><rect x="992.6" y="1525" width="10.6" height="15.0" fill="rgb(229,205,5)" rx="2" ry="2" />
<text  x="995.63" y="1535.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.09%)</title><rect x="1076.0" y="1365" width="1.1" height="15.0" fill="rgb(247,118,0)" rx="2" ry="2" />
<text  x="1079.01" y="1375.5" ></text>
</g>
<g >
<title>dashmap::DashMap&lt;K,V,S&gt;::len (1 samples, 0.09%)</title><rect x="1028.5" y="1205" width="1.1" height="15.0" fill="rgb(207,75,54)" rx="2" ry="2" />
<text  x="1031.52" y="1215.5" ></text>
</g>
<g >
<title>kick_ilb (4 samples, 0.36%)</title><rect x="1177.3" y="1397" width="4.3" height="15.0" fill="rgb(206,224,43)" rx="2" ry="2" />
<text  x="1180.33" y="1407.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.09%)</title><rect x="297.1" y="1349" width="1.0" height="15.0" fill="rgb(208,209,31)" rx="2" ry="2" />
<text  x="300.08" y="1359.5" ></text>
</g>
<g >
<title>serde_cbor::ser::StructSerializer&lt;W&gt;::serialize_field_inner (1 samples, 0.09%)</title><rect x="1028.5" y="1237" width="1.1" height="15.0" fill="rgb(222,163,49)" rx="2" ry="2" />
<text  x="1031.52" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.36%)</title><rect x="872.3" y="1429" width="4.2" height="15.0" fill="rgb(227,50,29)" rx="2" ry="2" />
<text  x="875.31" y="1439.5" ></text>
</g>
</g>
</svg>
